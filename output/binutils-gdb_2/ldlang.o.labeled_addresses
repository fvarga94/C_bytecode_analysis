stat_alloc	IF,0:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,1:ELSE,0	31
0x4002f65	              0x53	                                push rbx	       139	ldlang.c	FUNCTION_1
0x4002f66	          0x4889fb	                            mov rbx, rdi	       139	ldlang.c	FUNCTION_1
0x4002f69	    0x488b05000000	            mov rax, qword [0x04002f70] 	       140	ldlang.c	FUNCTION_1	CALL_1
0x4002f70	    0x482b05000000	             sub rax, qword [0x04002f77]	       140	ldlang.c	FUNCTION_1	CALL_1
0x4002f77	          0x4839c7	                            cmp rdi, rax	       140	ldlang.c	FUNCTION_1	CALL_1
0x4002f7a	            0x760d	                           jbe 0x4002f89	       140	ldlang.c	FUNCTION_1	CALL_1
0x4002f7c	          0x4889fe	                            mov rsi, rdi	       140	ldlang.c	FUNCTION_1	CALL_1
0x4002f7f	      0xbf00000000	                              mov edi, 0	       140	ldlang.c	FUNCTION_1	CALL_1
0x4002f84	      0xe800000000	                          call 0x4002f89	       140	ldlang.c	FUNCTION_1	CALL_1
0x4002f89	    0x48031d000000	             add rbx, qword [0x04002f90]	       140	ldlang.c	FUNCTION_1	CALL_1
0x4002f90	    0x488b05000000	            mov rax, qword [0x04002f97] 	       140	ldlang.c	FUNCTION_1	CALL_1
0x4002f97	          0x4839c3	                            cmp rbx, rax	       140	ldlang.c	FUNCTION_1	CALL_1
0x4002f9a	            0x7507	                           jne 0x4002fa3	       140	ldlang.c	FUNCTION_1	CALL_1
0x4002f9c	    0x800d00000000	                 or byte [0x04002fa3], 2	       140	ldlang.c	FUNCTION_1	CALL_1
0x4002fa3	    0x488b15000000	            mov rdx, qword [0x04002faa] 	       140	ldlang.c	FUNCTION_1	CALL_1
0x4002faa	        0x488d3c13	                    lea rdi, [rbx + rdx]	       140	ldlang.c	FUNCTION_1	CALL_1
0x4002fae	          0x48f7d2	                                 not rdx	       140	ldlang.c	FUNCTION_1	CALL_1
0x4002fb1	          0x4821d7	                            and rdi, rdx	       140	ldlang.c	FUNCTION_1	CALL_1
0x4002fb4	    0x48893d000000	            mov qword [0x04002fbb], rdi 	       140	ldlang.c	FUNCTION_1	CALL_1
0x4002fbb	    0x488b15000000	            mov rdx, qword [0x04002fc2] 	       140	ldlang.c	FUNCTION_1	CALL_1
0x4002fc2	    0x488b0d000000	            mov rcx, qword [0x04002fc9] 	       140	ldlang.c	FUNCTION_1	CALL_1
0x4002fc9	          0x4829d7	                            sub rdi, rdx	       140	ldlang.c	FUNCTION_1	CALL_1
0x4002fcc	          0x4889ce	                            mov rsi, rcx	       140	ldlang.c	FUNCTION_1	CALL_1
0x4002fcf	          0x4829d6	                            sub rsi, rdx	       140	ldlang.c	FUNCTION_1	CALL_1
0x4002fd2	          0x4839f7	                            cmp rdi, rsi	       140	ldlang.c	FUNCTION_1	CALL_1
0x4002fd5	            0x7607	                           jbe 0x4002fde	       140	ldlang.c	FUNCTION_1	CALL_1
0x4002fd7	    0x48890d000000	            mov qword [0x04002fde], rcx 	       140	ldlang.c	FUNCTION_1	CALL_1
0x4002fde	    0x488b15000000	            mov rdx, qword [0x04002fe5] 	       140	ldlang.c	FUNCTION_1	CALL_1
0x4002fe5	    0x488915000000	            mov qword [0x04002fec], rdx 	       140	ldlang.c	FUNCTION_1	CALL_1
0x4002fec	              0x5b	                                 pop rbx	       141	ldlang.c	FUNCTION_1
0x4002fed	              0xc3	                                     ret	       141	ldlang.c	FUNCTION_1
lang_map_flags	IF,5:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,5:ELSE,0	29
0x4000691	              0x53	                                push rbx	      2026	ldlang.c	FUNCTION_52
0x4000692	            0x89fb	                            mov ebx, edi	      2026	ldlang.c	FUNCTION_52
0x4000694	        0x40f6c701	                             test dil, 1	      2027	ldlang.c	FUNCTION_52	IF_1
0x4000698	            0x740f	                            je 0x40006a9	      2027	ldlang.c	FUNCTION_52	IF_1
0x400069a	      0xbf00000000	                              mov edi, 0	      2028	ldlang.c	FUNCTION_52	CALL_1
0x400069f	      0xb800000000	                              mov eax, 0	      2028	ldlang.c	FUNCTION_52	CALL_1
0x40006a4	      0xe800000000	                          call 0x40006a9	      2028	ldlang.c	FUNCTION_52	CALL_1
0x40006a9	          0xf6c310	                           test bl, 0x10	      2030	ldlang.c	FUNCTION_52	IF_2
0x40006ac	            0x740f	                            je 0x40006bd	      2030	ldlang.c	FUNCTION_52	IF_2
0x40006ae	      0xbf00000000	                              mov edi, 0	      2031	ldlang.c	FUNCTION_52	CALL_2
0x40006b3	      0xb800000000	                              mov eax, 0	      2031	ldlang.c	FUNCTION_52	CALL_2
0x40006b8	      0xe800000000	                          call 0x40006bd	      2031	ldlang.c	FUNCTION_52	CALL_2
0x40006bd	          0xf6c308	                              test bl, 8	      2033	ldlang.c	FUNCTION_52	IF_3
0x40006c0	            0x740f	                            je 0x40006d1	      2033	ldlang.c	FUNCTION_52	IF_3
0x40006c2	      0xbf00000000	                              mov edi, 0	      2034	ldlang.c	FUNCTION_52	CALL_3
0x40006c7	      0xb800000000	                              mov eax, 0	      2034	ldlang.c	FUNCTION_52	CALL_3
0x40006cc	      0xe800000000	                          call 0x40006d1	      2034	ldlang.c	FUNCTION_52	CALL_3
0x40006d1	          0xf6c320	                           test bl, 0x20	      2036	ldlang.c	FUNCTION_52	IF_4
0x40006d4	            0x740f	                            je 0x40006e5	      2036	ldlang.c	FUNCTION_52	IF_4
0x40006d6	      0xbf00000000	                              mov edi, 0	      2037	ldlang.c	FUNCTION_52	CALL_4
0x40006db	      0xb800000000	                              mov eax, 0	      2037	ldlang.c	FUNCTION_52	CALL_4
0x40006e0	      0xe800000000	                          call 0x40006e5	      2037	ldlang.c	FUNCTION_52	CALL_4
0x40006e5	          0xf6c302	                              test bl, 2	      2039	ldlang.c	FUNCTION_52	IF_5
0x40006e8	            0x740f	                            je 0x40006f9	      2039	ldlang.c	FUNCTION_52	IF_5
0x40006ea	      0xbf00000000	                              mov edi, 0	      2040	ldlang.c	FUNCTION_52	CALL_5
0x40006ef	      0xb800000000	                              mov eax, 0	      2040	ldlang.c	FUNCTION_52	CALL_5
0x40006f4	      0xe800000000	                          call 0x40006f9	      2040	ldlang.c	FUNCTION_52	CALL_5
0x40006f9	              0x5b	                                 pop rbx	      2041	ldlang.c	FUNCTION_52
0x40006fa	              0xc3	                                     ret	      2041	ldlang.c	FUNCTION_52
lang_final	IF,0:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,0:ELSE,0	9
0x4006f00	        0x4883ec08	                              sub rsp, 8	      6740	ldlang.c	FUNCTION_147
0x4006f04	    0x488b15000000	            mov rdx, qword [0x04006f0b] 	      6743	ldlang.c	FUNCTION_147
0x4006f0b	      0xbe18000000	                           mov esi, 0x18	      6743	ldlang.c	FUNCTION_147
0x4006f10	      0xbf0b000000	                            mov edi, 0xb	      6743	ldlang.c	FUNCTION_147
0x4006f15	      0xe8aec2ffff	                  call sym.new_statement	      6743	ldlang.c	FUNCTION_147
0x4006f1a	    0x488b15000000	            mov rdx, qword [0x04006f21] 	      6744	ldlang.c	FUNCTION_147
0x4006f21	        0x48895010	             mov qword [rax + 0x10], rdx	      6744	ldlang.c	FUNCTION_147
0x4006f25	        0x4883c408	                              add rsp, 8	      6745	ldlang.c	FUNCTION_147
0x4006f29	              0xc3	                                     ret	      6745	ldlang.c	FUNCTION_147
find_relro_section_callback	IF,1:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,0:ELSE,0	18
0x40003a6	        0x488b4268	            mov rax, qword [rdx + 0x68] 	      6862	ldlang.c	FUNCTION_152	IF_1
0x40003aa	          0x4885c0	                           test rax, rax	      6862	ldlang.c	FUNCTION_152	IF_1
0x40003ad	            0x7437	                            je 0x40003e6	      6862	ldlang.c	FUNCTION_152	IF_1
0x40003af	    0x488b0d000000	            mov rcx, qword [0x040003b6] 	      6863	ldlang.c	FUNCTION_152	IF_1
0x40003b6	    0x483988f00000	            cmp qword [rax + 0xf0], rcx 	      6863	ldlang.c	FUNCTION_152	IF_1
0x40003bd	            0x7527	                           jne 0x40003e6	      6863	ldlang.c	FUNCTION_152	IF_1
0x40003bf	        0xf6402180	           test byte [rax + 0x21], 0x80 	      6864	ldlang.c	FUNCTION_152	IF_1
0x40003c3	            0x7521	                           jne 0x40003e6	      6864	ldlang.c	FUNCTION_152	IF_1
0x40003c5	          0x8b4220	            mov eax, dword [rdx + 0x20] 	      6865	ldlang.c	FUNCTION_152	IF_1
0x40003c8	            0xa801	                              test al, 1	      6865	ldlang.c	FUNCTION_152	IF_1
0x40003ca	            0x741a	                            je 0x40003e6	      6865	ldlang.c	FUNCTION_152	IF_1
0x40003cc	      0x2502040000	                          and eax, 0x402	      6865	ldlang.c	FUNCTION_152	IF_1
0x40003d1	      0x3d00040000	                          cmp eax, 0x400	      6865	ldlang.c	FUNCTION_152	IF_1
0x40003d6	            0x740e	                            je 0x40003e6	      6865	ldlang.c	FUNCTION_152	IF_1
0x40003d8	      0x48837a3800	               cmp qword [rdx + 0x38], 0	      6866	ldlang.c	FUNCTION_152	IF_1
0x40003dd	            0x7407	                            je 0x40003e6	      6866	ldlang.c	FUNCTION_152	IF_1
0x40003df	    0x41c701010000	                       mov dword [r9], 1	      6869	ldlang.c	FUNCTION_152	IF_1
0x40003e6	            0xf3c3	                                     ret	      6869	ldlang.c	FUNCTION_152	IF_1
lang_new_vers_pattern	IF,4:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,8:ELSE,3	122
0x4008548	            0x4156	                                push r14	      8294	ldlang.c	FUNCTION_194
0x400854a	            0x4155	                                push r13	      8294	ldlang.c	FUNCTION_194
0x400854c	            0x4154	                                push r12	      8294	ldlang.c	FUNCTION_194
0x400854e	              0x55	                                push rbp	      8294	ldlang.c	FUNCTION_194
0x400854f	              0x53	                                push rbx	      8294	ldlang.c	FUNCTION_194
0x4008550	          0x4989fe	                            mov r14, rdi	      8294	ldlang.c	FUNCTION_194
0x4008553	          0x4989f4	                            mov r12, rsi	      8294	ldlang.c	FUNCTION_194
0x4008556	          0x4889d5	                            mov rbp, rdx	      8294	ldlang.c	FUNCTION_194
0x4008559	          0x4189cd	                           mov r13d, ecx	      8294	ldlang.c	FUNCTION_194
0x400855c	      0xbf18000000	                           mov edi, 0x18	      8297	ldlang.c	FUNCTION_194	CALL_1
0x4008561	      0xe800000000	                          call 0x4008566	      8297	ldlang.c	FUNCTION_194	CALL_1
0x4008566	          0x4889c3	                            mov rbx, rax	      8297	ldlang.c	FUNCTION_194	CALL_1
0x4008569	          0x4c8930	                    mov qword [rax], r14	      8298	ldlang.c	FUNCTION_194
0x400856c	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      8300	ldlang.c	FUNCTION_194
0x4008570	          0x83e0f9	                     and eax, 0xfffffff9	      8300	ldlang.c	FUNCTION_194
0x4008573	          0x83c801	                               or eax, 1	      8301	ldlang.c	FUNCTION_194
0x4008576	          0x884310	               mov byte [rbx + 0x10], al	      8301	ldlang.c	FUNCTION_194
0x4008579	          0x4c89e0	                            mov rax, r12	      8302	ldlang.c	FUNCTION_194	CALL_2
0x400857c	          0x4585ed	                         test r13d, r13d	      8302	ldlang.c	FUNCTION_194	CALL_2
0x400857f	     0xf859e000000	                           jne 0x4008623	      8302	ldlang.c	FUNCTION_194	CALL_2
0x4008585	      0xb800000000	                              mov eax, 0	      8247	ldlang.c	FUNCTION_193	CALL_2
0x400858a	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      8247	ldlang.c	FUNCTION_193	CALL_2
0x4008591	          0x4c89e7	                            mov rdi, r12	      8247	ldlang.c	FUNCTION_193	CALL_2
0x4008594	            0xf2ae	              repne scasb al, byte [rdi]	      8247	ldlang.c	FUNCTION_193	CALL_2
0x4008596	          0x4889cf	                            mov rdi, rcx	      8247	ldlang.c	FUNCTION_193	CALL_2
0x4008599	          0x48f7d7	                                 not rdi	      8247	ldlang.c	FUNCTION_193	CALL_2
0x400859c	      0xe800000000	                          call 0x40085a1	      8247	ldlang.c	FUNCTION_193	CALL_2
0x40085a1	      0x410fb61424	                   movzx edx, byte [r12]	      8249	ldlang.c	FUNCTION_193	FOR_1
0x40085a6	            0x84d2	                             test dl, dl	      8249	ldlang.c	FUNCTION_193	FOR_1
0x40085a8	            0x746e	                            je 0x4008618	      8249	ldlang.c	FUNCTION_193	FOR_1
0x40085aa	          0x4c89e1	                            mov rcx, r12	      8249	ldlang.c	FUNCTION_193	FOR_1
0x40085ad	          0x4989c0	                             mov r8, rax	      8249	ldlang.c	FUNCTION_193	FOR_1
0x40085b0	      0xbf00000000	                              mov edi, 0	      8249	ldlang.c	FUNCTION_193	FOR_1
0x40085b5	      0xbe00000000	                              mov esi, 0	      8249	ldlang.c	FUNCTION_193	FOR_1
0x40085ba	    0x49b901002000	              movabs r9, 0x2000000200001	      8262	ldlang.c	FUNCTION_193	FOR_1	ELSE_1	IF_2
0x40085c4	            0x85f6	                           test esi, esi	      8253	ldlang.c	FUNCTION_193	FOR_1	IF_1
0x40085c6	            0x7410	                            je 0x40085d8	      8253	ldlang.c	FUNCTION_193	FOR_1	IF_1
0x40085c8	        0x418850ff	                   mov byte [r8 - 1], dl	      8256	ldlang.c	FUNCTION_193	FOR_1	IF_1
0x40085cc	      0xbe00000000	                              mov esi, 0	      8257	ldlang.c	FUNCTION_193	FOR_1	IF_1
0x40085d1	      0xbf01000000	                              mov edi, 1	      8258	ldlang.c	FUNCTION_193	FOR_1	IF_1
0x40085d6	            0xeb2b	                           jmp 0x4008603	      8258	ldlang.c	FUNCTION_193	FOR_1	IF_1
0x40085d8	          0x8d72d6	                   lea esi, [rdx - 0x2a]	      8262	ldlang.c	FUNCTION_193	FOR_1	ELSE_1	IF_2
0x40085db	        0x4080fe31	                           cmp sil, 0x31	      8262	ldlang.c	FUNCTION_193	FOR_1	ELSE_1	IF_2
0x40085df	            0x7710	                            ja 0x40085f1	      8262	ldlang.c	FUNCTION_193	FOR_1	ELSE_1	IF_2
0x40085e1	        0x490fa3f1	                              bt r9, rsi	      8262	ldlang.c	FUNCTION_193	FOR_1	ELSE_1	IF_2
0x40085e5	            0x730a	                           jae 0x40085f1	      8262	ldlang.c	FUNCTION_193	FOR_1	ELSE_1	IF_2
0x40085e7	          0x4889c7	                            mov rdi, rax	      8264	ldlang.c	FUNCTION_193	FOR_1	ELSE_1	IF_2	CALL_3
0x40085ea	      0xe800000000	                          call 0x40085ef	      8264	ldlang.c	FUNCTION_193	FOR_1	ELSE_1	IF_2	CALL_3
0x40085ef	            0xeb3b	                           jmp 0x400862c	      8264	ldlang.c	FUNCTION_193	FOR_1	ELSE_1	IF_2	CALL_3
0x40085f1	          0x418810	                       mov byte [r8], dl	      8268	ldlang.c	FUNCTION_193	FOR_1	ELSE_1
0x40085f4	          0x80fa5c	                            cmp dl, 0x5c	      8269	ldlang.c	FUNCTION_193	FOR_1	ELSE_1
0x40085f7	        0x400f94c6	                                sete sil	      8269	ldlang.c	FUNCTION_193	FOR_1	ELSE_1
0x40085fb	        0x400fb6f6	                          movzx esi, sil	      8269	ldlang.c	FUNCTION_193	FOR_1	ELSE_1
0x40085ff	        0x4d8d4001	                        lea r8, [r8 + 1]	      8268	ldlang.c	FUNCTION_193	FOR_1	ELSE_1
0x4008603	        0x4883c101	                              add rcx, 1	      8249	ldlang.c	FUNCTION_193	FOR_1
0x4008607	           0xfb611	                   movzx edx, byte [rcx]	      8249	ldlang.c	FUNCTION_193	FOR_1
0x400860a	            0x84d2	                             test dl, dl	      8249	ldlang.c	FUNCTION_193	FOR_1
0x400860c	            0x75b6	                           jne 0x40085c4	      8249	ldlang.c	FUNCTION_193	FOR_1
0x400860e	            0x85ff	                           test edi, edi	      8273	ldlang.c	FUNCTION_193	IF_3
0x4008610	            0x7406	                            je 0x4008618	      8273	ldlang.c	FUNCTION_193	IF_3
0x4008612	        0x41c60000	                        mov byte [r8], 0	      8275	ldlang.c	FUNCTION_193	IF_3
0x4008616	            0xeb0b	                           jmp 0x4008623	      8275	ldlang.c	FUNCTION_193	IF_3
0x4008618	          0x4889c7	                            mov rdi, rax	      8280	ldlang.c	FUNCTION_193	ELSE_2	CALL_4
0x400861b	      0xe800000000	                          call 0x4008620	      8280	ldlang.c	FUNCTION_193	ELSE_2	CALL_4
0x4008620	          0x4c89e0	                            mov rax, r12	      8281	ldlang.c	FUNCTION_193	ELSE_2
0x4008623	        0x48894308	                mov qword [rbx + 8], rax	      8302	ldlang.c	FUNCTION_194	CALL_2
0x4008627	          0x4885c0	                           test rax, rax	      8303	ldlang.c	FUNCTION_194	IF_1
0x400862a	            0x7508	                           jne 0x4008634	      8303	ldlang.c	FUNCTION_194	IF_1
0x400862c	        0x4c896308	                mov qword [rbx + 8], r12	      8305	ldlang.c	FUNCTION_194	IF_1
0x4008630	        0x806310fe	             and byte [rbx + 0x10], 0xfe	      8306	ldlang.c	FUNCTION_194	IF_1
0x4008634	          0x4885ed	                           test rbp, rbp	      8309	ldlang.c	FUNCTION_194	IF_2	CALL_3
0x4008637	            0x7411	                            je 0x400864a	      8309	ldlang.c	FUNCTION_194	IF_2	CALL_3
0x4008639	      0xbe00000000	                              mov esi, 0	      8309	ldlang.c	FUNCTION_194	IF_2	CALL_3
0x400863e	          0x4889ef	                            mov rdi, rbp	      8309	ldlang.c	FUNCTION_194	IF_2	CALL_3
0x4008641	      0xe800000000	                          call 0x4008646	      8309	ldlang.c	FUNCTION_194	IF_2	CALL_3
0x4008646	            0x85c0	                           test eax, eax	      8309	ldlang.c	FUNCTION_194	IF_2	CALL_3
0x4008648	            0x750f	                           jne 0x4008659	      8309	ldlang.c	FUNCTION_194	IF_2	CALL_3
0x400864a	         0xfb64310	           movzx eax, byte [rbx + 0x10] 	      8310	ldlang.c	FUNCTION_194	IF_2
0x400864e	          0x83e0c7	                     and eax, 0xffffffc7	      8310	ldlang.c	FUNCTION_194	IF_2
0x4008651	          0x83c808	                               or eax, 8	      8310	ldlang.c	FUNCTION_194	IF_2
0x4008654	          0x884310	               mov byte [rbx + 0x10], al	      8310	ldlang.c	FUNCTION_194	IF_2
0x4008657	            0xeb71	                           jmp 0x40086ca	      8310	ldlang.c	FUNCTION_194	IF_2
0x4008659	      0xbe00000000	                              mov esi, 0	      8311	ldlang.c	FUNCTION_194	ELSE_1	IF_3	CALL_4
0x400865e	          0x4889ef	                            mov rdi, rbp	      8311	ldlang.c	FUNCTION_194	ELSE_1	IF_3	CALL_4
0x4008661	      0xe800000000	                          call 0x4008666	      8311	ldlang.c	FUNCTION_194	ELSE_1	IF_3	CALL_4
0x4008666	            0x85c0	                           test eax, eax	      8311	ldlang.c	FUNCTION_194	ELSE_1	IF_3	CALL_4
0x4008668	            0x750f	                           jne 0x4008679	      8311	ldlang.c	FUNCTION_194	ELSE_1	IF_3	CALL_4
0x400866a	         0xfb64310	           movzx eax, byte [rbx + 0x10] 	      8312	ldlang.c	FUNCTION_194	ELSE_1	IF_3
0x400866e	          0x83e0c7	                     and eax, 0xffffffc7	      8312	ldlang.c	FUNCTION_194	ELSE_1	IF_3
0x4008671	          0x83c810	                            or eax, 0x10	      8312	ldlang.c	FUNCTION_194	ELSE_1	IF_3
0x4008674	          0x884310	               mov byte [rbx + 0x10], al	      8312	ldlang.c	FUNCTION_194	ELSE_1	IF_3
0x4008677	            0xeb51	                           jmp 0x40086ca	      8312	ldlang.c	FUNCTION_194	ELSE_1	IF_3
0x4008679	      0xbe00000000	                              mov esi, 0	      8313	ldlang.c	FUNCTION_194	ELSE_2	IF_4	CALL_5
0x400867e	          0x4889ef	                            mov rdi, rbp	      8313	ldlang.c	FUNCTION_194	ELSE_2	IF_4	CALL_5
0x4008681	      0xe800000000	                          call 0x4008686	      8313	ldlang.c	FUNCTION_194	ELSE_2	IF_4	CALL_5
0x4008686	            0x85c0	                           test eax, eax	      8313	ldlang.c	FUNCTION_194	ELSE_2	IF_4	CALL_5
0x4008688	            0x750f	                           jne 0x4008699	      8313	ldlang.c	FUNCTION_194	ELSE_2	IF_4	CALL_5
0x400868a	         0xfb64310	           movzx eax, byte [rbx + 0x10] 	      8314	ldlang.c	FUNCTION_194	ELSE_2	IF_4
0x400868e	          0x83e0c7	                     and eax, 0xffffffc7	      8314	ldlang.c	FUNCTION_194	ELSE_2	IF_4
0x4008691	          0x83c820	                            or eax, 0x20	      8314	ldlang.c	FUNCTION_194	ELSE_2	IF_4
0x4008694	          0x884310	               mov byte [rbx + 0x10], al	      8314	ldlang.c	FUNCTION_194	ELSE_2	IF_4
0x4008697	            0xeb31	                           jmp 0x40086ca	      8314	ldlang.c	FUNCTION_194	ELSE_2	IF_4
0x4008699	      0xba05000000	                              mov edx, 5	      8317	ldlang.c	FUNCTION_194	ELSE_3	CALL_7
0x400869e	      0xbe00000000	                              mov esi, 0	      8317	ldlang.c	FUNCTION_194	ELSE_3	CALL_7
0x40086a3	      0xbf00000000	                              mov edi, 0	      8317	ldlang.c	FUNCTION_194	ELSE_3	CALL_7
0x40086a8	      0xe800000000	                          call 0x40086ad	      8317	ldlang.c	FUNCTION_194	ELSE_3	CALL_7
0x40086ad	          0x4889ee	                            mov rsi, rbp	      8317	ldlang.c	FUNCTION_194	ELSE_3	CALL_7
0x40086b0	          0x4889c7	                            mov rdi, rax	      8317	ldlang.c	FUNCTION_194	ELSE_3	CALL_7
0x40086b3	      0xb800000000	                              mov eax, 0	      8317	ldlang.c	FUNCTION_194	ELSE_3	CALL_7
0x40086b8	      0xe800000000	                          call 0x40086bd	      8317	ldlang.c	FUNCTION_194	ELSE_3	CALL_7
0x40086bd	         0xfb64310	           movzx eax, byte [rbx + 0x10] 	      8319	ldlang.c	FUNCTION_194	ELSE_3
0x40086c1	          0x83e0c7	                     and eax, 0xffffffc7	      8319	ldlang.c	FUNCTION_194	ELSE_3
0x40086c4	          0x83c808	                               or eax, 8	      8319	ldlang.c	FUNCTION_194	ELSE_3
0x40086c7	          0x884310	               mov byte [rbx + 0x10], al	      8319	ldlang.c	FUNCTION_194	ELSE_3
0x40086ca	          0x4889df	                            mov rdi, rbx	      8322	ldlang.c	FUNCTION_194	CALL_8
0x40086cd	      0xe800000000	                          call 0x40086d2	      8322	ldlang.c	FUNCTION_194	CALL_8
0x40086d2	              0x5b	                                 pop rbx	      8323	ldlang.c	FUNCTION_194
0x40086d3	              0x5d	                                 pop rbp	      8323	ldlang.c	FUNCTION_194
0x40086d4	            0x415c	                                 pop r12	      8323	ldlang.c	FUNCTION_194
0x40086d6	            0x415d	                                 pop r13	      8323	ldlang.c	FUNCTION_194
0x40086d8	            0x415e	                                 pop r14	      8323	ldlang.c	FUNCTION_194
0x40086da	              0xc3	                                     ret	      8323	ldlang.c	FUNCTION_194
lang_add_reloc	IF,0:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,0:ELSE,0	28
0x4007a4f	            0x4156	                                push r14	      7567	ldlang.c	FUNCTION_172
0x4007a51	            0x4155	                                push r13	      7567	ldlang.c	FUNCTION_172
0x4007a53	            0x4154	                                push r12	      7567	ldlang.c	FUNCTION_172
0x4007a55	              0x55	                                push rbp	      7567	ldlang.c	FUNCTION_172
0x4007a56	              0x53	                                push rbx	      7567	ldlang.c	FUNCTION_172
0x4007a57	          0x4189fe	                           mov r14d, edi	      7567	ldlang.c	FUNCTION_172
0x4007a5a	          0x4989f5	                            mov r13, rsi	      7567	ldlang.c	FUNCTION_172
0x4007a5d	          0x4989d4	                            mov r12, rdx	      7567	ldlang.c	FUNCTION_172
0x4007a60	          0x4889cd	                            mov rbp, rcx	      7567	ldlang.c	FUNCTION_172
0x4007a63	          0x4c89c3	                             mov rbx, r8	      7567	ldlang.c	FUNCTION_172
0x4007a66	    0x488b15000000	            mov rdx, qword [0x04007a6d] 	      7568	ldlang.c	FUNCTION_172
0x4007a6d	      0xbe50000000	                           mov esi, 0x50	      7568	ldlang.c	FUNCTION_172
0x4007a72	      0xbf09000000	                              mov edi, 9	      7568	ldlang.c	FUNCTION_172
0x4007a77	      0xe84cb7ffff	                  call sym.new_statement	      7568	ldlang.c	FUNCTION_172
0x4007a7c	        0x44897010	            mov dword [rax + 0x10], r14d	      7570	ldlang.c	FUNCTION_172
0x4007a80	        0x4c896818	             mov qword [rax + 0x18], r13	      7571	ldlang.c	FUNCTION_172
0x4007a84	        0x4c896020	             mov qword [rax + 0x20], r12	      7572	ldlang.c	FUNCTION_172
0x4007a88	        0x48896828	             mov qword [rax + 0x28], rbp	      7573	ldlang.c	FUNCTION_172
0x4007a8c	        0x48895830	             mov qword [rax + 0x30], rbx	      7574	ldlang.c	FUNCTION_172
0x4007a90	    0x48c740380000	               mov qword [rax + 0x38], 0	      7576	ldlang.c	FUNCTION_172
0x4007a98	    0x48c740400000	               mov qword [rax + 0x40], 0	      7577	ldlang.c	FUNCTION_172
0x4007aa0	    0x48c740480000	               mov qword [rax + 0x48], 0	      7578	ldlang.c	FUNCTION_172
0x4007aa8	              0x5b	                                 pop rbx	      7579	ldlang.c	FUNCTION_172
0x4007aa9	              0x5d	                                 pop rbp	      7579	ldlang.c	FUNCTION_172
0x4007aaa	            0x415c	                                 pop r12	      7579	ldlang.c	FUNCTION_172
0x4007aac	            0x415d	                                 pop r13	      7579	ldlang.c	FUNCTION_172
0x4007aae	            0x415e	                                 pop r14	      7579	ldlang.c	FUNCTION_172
0x4007ab0	              0xc3	                                     ret	      7579	ldlang.c	FUNCTION_172
lang_insert_orphan	IF,17:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,11:ELSE,3	231
0x4007b95	            0x4157	                                push r15	      1829	ldlang.c	FUNCTION_50
0x4007b97	            0x4156	                                push r14	      1829	ldlang.c	FUNCTION_50
0x4007b99	            0x4155	                                push r13	      1829	ldlang.c	FUNCTION_50
0x4007b9b	            0x4154	                                push r12	      1829	ldlang.c	FUNCTION_50
0x4007b9d	              0x55	                                push rbp	      1829	ldlang.c	FUNCTION_50
0x4007b9e	              0x53	                                push rbx	      1829	ldlang.c	FUNCTION_50
0x4007b9f	        0x4883ec38	                           sub rsp, 0x38	      1829	ldlang.c	FUNCTION_50
0x4007ba3	          0x4989fd	                            mov r13, rdi	      1829	ldlang.c	FUNCTION_50
0x4007ba6	      0x4889742408	                mov qword [rsp + 8], rsi	      1829	ldlang.c	FUNCTION_50
0x4007bab	          0x4189d7	                           mov r15d, edx	      1829	ldlang.c	FUNCTION_50
0x4007bae	          0x4989cc	                            mov r12, rcx	      1829	ldlang.c	FUNCTION_50
0x4007bb1	          0x4c89c3	                             mov rbx, r8	      1829	ldlang.c	FUNCTION_50
0x4007bb4	        0x4c890c24	                     mov qword [rsp], r9	      1829	ldlang.c	FUNCTION_50
0x4007bb8	      0x488b6c2470	            mov rbp, qword [rsp + 0x70] 	      1829	ldlang.c	FUNCTION_50
0x4007bbd	    0x64488b042528	                mov rax, qword fs:[0x28]	      1829	ldlang.c	FUNCTION_50
0x4007bc6	      0x4889442428	             mov qword [rsp + 0x28], rax	      1829	ldlang.c	FUNCTION_50
0x4007bcb	            0x31c0	                            xor eax, eax	      1829	ldlang.c	FUNCTION_50
0x4007bcd	          0x4885c9	                           test rcx, rcx	      1837	ldlang.c	FUNCTION_50	IF_1
0x4007bd0	            0x741b	                            je 0x4007bed	      1837	ldlang.c	FUNCTION_50	IF_1
0x4007bd2	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1009	ldlang.c	FUNCTION_30
0x4007bdb	      0x488d442410	                   lea rax, [rsp + 0x10]	      1010	ldlang.c	FUNCTION_30
0x4007be0	      0x4889442418	             mov qword [rsp + 0x18], rax	      1010	ldlang.c	FUNCTION_30
0x4007be5	          0x4889c7	                            mov rdi, rax	      1840	ldlang.c	FUNCTION_50	IF_1	CALL_2
0x4007be8	      0xe800000000	                          call 0x4007bed	      1840	ldlang.c	FUNCTION_50	IF_1	CALL_2
0x4007bed	     0xfb605000000	           movzx eax, byte [0x04007bf4] 	      1843	ldlang.c	FUNCTION_50	IF_2	CALL_3
0x4007bf4	          0x83e003	                              and eax, 3	      1843	ldlang.c	FUNCTION_50	IF_2	CALL_3
0x4007bf7	            0x3c02	                               cmp al, 2	      1843	ldlang.c	FUNCTION_50	IF_2	CALL_3
0x4007bf9	            0x7407	                            je 0x4007c02	      1843	ldlang.c	FUNCTION_50	IF_2	CALL_3
0x4007bfb	      0x41f6452003	               test byte [r13 + 0x20], 3	      1844	ldlang.c	FUNCTION_50	IF_2
0x4007c00	            0x750e	                           jne 0x4007c10	      1844	ldlang.c	FUNCTION_50	IF_2
0x4007c02	      0xbf00000000	                              mov edi, 0	      1845	ldlang.c	FUNCTION_50	CALL_4
0x4007c07	      0xe800000000	                          call 0x4007c0c	      1845	ldlang.c	FUNCTION_50	CALL_4
0x4007c0c	        0x48890424	                    mov qword [rsp], rax	      1845	ldlang.c	FUNCTION_50	CALL_4
0x4007c10	    0x4c8b35000000	            mov r14, qword [0x04007c17] 	      1847	ldlang.c	FUNCTION_50
0x4007c17	            0x6a00	                                  push 0	      1849	ldlang.c	FUNCTION_50	CALL_5
0x4007c19	            0x4157	                                push r15	      1849	ldlang.c	FUNCTION_50	CALL_5
0x4007c1b	    0x41b900000000	                              mov r9d, 0	      1849	ldlang.c	FUNCTION_50	CALL_5
0x4007c21	    0x41b800000000	                              mov r8d, 0	      1849	ldlang.c	FUNCTION_50	CALL_5
0x4007c27	      0xb900000000	                              mov ecx, 0	      1849	ldlang.c	FUNCTION_50	CALL_5
0x4007c2c	      0xba00000000	                              mov edx, 0	      1849	ldlang.c	FUNCTION_50	CALL_5
0x4007c31	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      1849	ldlang.c	FUNCTION_50	CALL_5
0x4007c36	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      1849	ldlang.c	FUNCTION_50	CALL_5
0x4007c3b	      0xe800000000	                          call 0x4007c40	      1849	ldlang.c	FUNCTION_50	CALL_5
0x4007c40	          0x4989c7	                            mov r15, rax	      1849	ldlang.c	FUNCTION_50	CALL_5
0x4007c43	        0x4883c410	                           add rsp, 0x10	      1852	ldlang.c	FUNCTION_50	IF_3
0x4007c47	        0x488d4010	                   lea rax, [rax + 0x10]	      1853	ldlang.c	FUNCTION_50	IF_3
0x4007c4b	          0x4885ed	                           test rbp, rbp	      1853	ldlang.c	FUNCTION_50	IF_3
0x4007c4e	        0x480f44e8	                          cmove rbp, rax	      1853	ldlang.c	FUNCTION_50	IF_3
0x4007c52	          0x4c89f9	                            mov rcx, r15	      1854	ldlang.c	FUNCTION_50	CALL_6
0x4007c55	      0xba00000000	                              mov edx, 0	      1854	ldlang.c	FUNCTION_50	CALL_6
0x4007c5a	          0x4c89ee	                            mov rsi, r13	      1854	ldlang.c	FUNCTION_50	CALL_6
0x4007c5d	          0x4889ef	                            mov rdi, rbp	      1854	ldlang.c	FUNCTION_50	CALL_6
0x4007c60	      0xe800000000	                          call 0x4007c65	      1854	ldlang.c	FUNCTION_50	CALL_6
0x4007c65	          0x4d85e4	                           test r12, r12	      1856	ldlang.c	FUNCTION_50	IF_4
0x4007c68	     0xf8471020000	                            je 0x4007edf	      1856	ldlang.c	FUNCTION_50	IF_4
0x4007c6e	      0x41f6452003	               test byte [r13 + 0x20], 3	      1856	ldlang.c	FUNCTION_50	IF_4
0x4007c73	     0xf8481020000	                            je 0x4007efa	      1856	ldlang.c	FUNCTION_50	IF_4
0x4007c79	      0x498b442440	            mov rax, qword [r12 + 0x40] 	      1858	ldlang.c	FUNCTION_50	IF_4
0x4007c7e	          0x4885c0	                           test rax, rax	      1860	ldlang.c	FUNCTION_50	IF_4
0x4007c81	            0x7405	                            je 0x4007c88	      1860	ldlang.c	FUNCTION_50	IF_4
0x4007c83	          0x488b30	                    mov rsi, qword [rax]	      1860	ldlang.c	FUNCTION_50	IF_4
0x4007c86	            0xeb05	                           jmp 0x4007c8d	      1860	ldlang.c	FUNCTION_50	IF_4
0x4007c88	      0xbe00000000	                              mov esi, 0	      1860	ldlang.c	FUNCTION_50	IF_4
0x4007c8d	      0x498b442448	            mov rax, qword [r12 + 0x48] 	      1861	ldlang.c	FUNCTION_50	IF_4
0x4007c92	          0x4885c0	                           test rax, rax	      1863	ldlang.c	FUNCTION_50	IF_4
0x4007c95	            0x7405	                            je 0x4007c9c	      1863	ldlang.c	FUNCTION_50	IF_4
0x4007c97	          0x488b08	                    mov rcx, qword [rax]	      1863	ldlang.c	FUNCTION_50	IF_4
0x4007c9a	            0xeb05	                           jmp 0x4007ca1	      1863	ldlang.c	FUNCTION_50	IF_4
0x4007c9c	      0xb900000000	                              mov ecx, 0	      1863	ldlang.c	FUNCTION_50	IF_4
0x4007ca1	      0x498b542470	            mov rdx, qword [r12 + 0x70] 	      1864	ldlang.c	FUNCTION_50	IF_4	CALL_7
0x4007ca6	      0xbf00000000	                              mov edi, 0	      1864	ldlang.c	FUNCTION_50	IF_4	CALL_7
0x4007cab	      0xe800000000	                          call 0x4007cb0	      1864	ldlang.c	FUNCTION_50	IF_4	CALL_7
0x4007cb0	      0xe800000000	                          call 0x4007cb5	      1873	ldlang.c	FUNCTION_50	CALL_9
0x4007cb5	        0x498b6f38	            mov rbp, qword [r15 + 0x38] 	      1875	ldlang.c	FUNCTION_50	IF_6
0x4007cb9	          0x4885ed	                           test rbp, rbp	      1875	ldlang.c	FUNCTION_50	IF_6
0x4007cbc	     0xf8408020000	                            je 0x4007eca	      1875	ldlang.c	FUNCTION_50	IF_6
0x4007cc2	      0x48837b1800	               cmp qword [rbx + 0x18], 0	      1883	ldlang.c	FUNCTION_50	IF_6	IF_7
0x4007cc7	            0x7543	                           jne 0x4007d0c	      1883	ldlang.c	FUNCTION_50	IF_6	IF_7
0x4007cc9	    0x4c3b25000000	            cmp r12, qword [0x04007cd0] 	      1884	ldlang.c	FUNCTION_50	IF_6	IF_7
0x4007cd0	            0x7429	                            je 0x4007cfb	      1884	ldlang.c	FUNCTION_50	IF_6	IF_7
0x4007cd2	      0x498b442438	            mov rax, qword [r12 + 0x38] 	      1887	ldlang.c	FUNCTION_50	IF_6	IF_7
0x4007cd7	          0x4885c0	                           test rax, rax	      1893	ldlang.c	FUNCTION_50	IF_6	IF_7	IF_8
0x4007cda	            0x7508	                           jne 0x4007ce4	      1893	ldlang.c	FUNCTION_50	IF_6	IF_7	IF_8
0x4007cdc	          0x4c89e7	                            mov rdi, r12	      1894	ldlang.c	FUNCTION_50	IF_6	IF_7	CALL_10
0x4007cdf	      0xe8ca83ffff	           call sym.output_prev_sec_find	      1894	ldlang.c	FUNCTION_50	IF_6	IF_7	CALL_10
0x4007ce4	          0x4885c0	                           test rax, rax	      1896	ldlang.c	FUNCTION_50	IF_6	IF_7	IF_9
0x4007ce7	            0x7412	                            je 0x4007cfb	      1896	ldlang.c	FUNCTION_50	IF_6	IF_7	IF_9
0x4007ce9	          0x4839e8	                            cmp rax, rbp	      1896	ldlang.c	FUNCTION_50	IF_6	IF_7	IF_9
0x4007cec	            0x740d	                            je 0x4007cfb	      1896	ldlang.c	FUNCTION_50	IF_6	IF_7	IF_9
0x4007cee	        0x4883c010	                           add rax, 0x10	      1897	ldlang.c	FUNCTION_50	IF_6	IF_7	IF_9
0x4007cf2	        0x48894318	             mov qword [rbx + 0x18], rax	      1897	ldlang.c	FUNCTION_50	IF_6	IF_7	IF_9
0x4007cf6	          0x4885c0	                           test rax, rax	      1900	ldlang.c	FUNCTION_50	IF_6	IF_10
0x4007cf9	            0x7511	                           jne 0x4007d0c	      1900	ldlang.c	FUNCTION_50	IF_6	IF_10
0x4007cfb	    0x488b05000000	            mov rax, qword [0x04007d02] 	      1901	ldlang.c	FUNCTION_50	IF_6	IF_10
0x4007d02	    0x480590000000	                           add rax, 0x90	      1901	ldlang.c	FUNCTION_50	IF_6	IF_10
0x4007d08	        0x48894318	             mov qword [rbx + 0x18], rax	      1901	ldlang.c	FUNCTION_50	IF_6	IF_10
0x4007d0c	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1903	ldlang.c	FUNCTION_50	IF_6
0x4007d10	          0x488b00	                    mov rax, qword [rax]	      1903	ldlang.c	FUNCTION_50	IF_6
0x4007d13	          0x4885c0	                           test rax, rax	      1905	ldlang.c	FUNCTION_50	IF_6	IF_11
0x4007d16	            0x757e	                           jne 0x4007d96	      1905	ldlang.c	FUNCTION_50	IF_6	IF_11
0x4007d18	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	      1910	ldlang.c	FUNCTION_50	IF_6	IF_11
0x4007d1c	        0x488b4518	            mov rax, qword [rbp + 0x18] 	      1910	ldlang.c	FUNCTION_50	IF_6	IF_11
0x4007d20	          0x4885c0	                           test rax, rax	      1910	ldlang.c	FUNCTION_50	IF_6	IF_11
0x4007d23	            0x7406	                            je 0x4007d2b	      1910	ldlang.c	FUNCTION_50	IF_6	IF_11
0x4007d25	        0x48895010	             mov qword [rax + 0x10], rdx	      1910	ldlang.c	FUNCTION_50	IF_6	IF_11
0x4007d29	            0xeb0e	                           jmp 0x4007d39	      1910	ldlang.c	FUNCTION_50	IF_6	IF_11
0x4007d2b	    0x488b0d000000	            mov rcx, qword [0x04007d32] 	      1910	ldlang.c	FUNCTION_50	IF_6	IF_11
0x4007d32	    0x488991900000	             mov qword [rcx + 0x90], rdx	      1910	ldlang.c	FUNCTION_50	IF_6	IF_11
0x4007d39	          0x4885d2	                           test rdx, rdx	      1910	ldlang.c	FUNCTION_50	IF_6	IF_11
0x4007d3c	            0x7406	                            je 0x4007d44	      1910	ldlang.c	FUNCTION_50	IF_6	IF_11
0x4007d3e	        0x48894218	             mov qword [rdx + 0x18], rax	      1910	ldlang.c	FUNCTION_50	IF_6	IF_11
0x4007d42	            0xeb0e	                           jmp 0x4007d52	      1910	ldlang.c	FUNCTION_50	IF_6	IF_11
0x4007d44	    0x488b15000000	            mov rdx, qword [0x04007d4b] 	      1910	ldlang.c	FUNCTION_50	IF_6	IF_11
0x4007d4b	    0x488982980000	             mov qword [rdx + 0x98], rax	      1910	ldlang.c	FUNCTION_50	IF_6	IF_11
0x4007d52	    0x488b05000000	            mov rax, qword [0x04007d59] 	      1913	ldlang.c	FUNCTION_50	IF_6	IF_11
0x4007d59	    0x48c745100000	               mov qword [rbp + 0x10], 0	      1913	ldlang.c	FUNCTION_50	IF_6	IF_11
0x4007d61	    0x488b90980000	            mov rdx, qword [rax + 0x98] 	      1913	ldlang.c	FUNCTION_50	IF_6	IF_11
0x4007d68	          0x4885d2	                           test rdx, rdx	      1913	ldlang.c	FUNCTION_50	IF_6	IF_11
0x4007d6b	            0x7411	                            je 0x4007d7e	      1913	ldlang.c	FUNCTION_50	IF_6	IF_11
0x4007d6d	        0x48895518	            mov qword [rbp + 0x18], rdx 	      1913	ldlang.c	FUNCTION_50	IF_6	IF_11
0x4007d71	    0x488b90980000	            mov rdx, qword [rax + 0x98] 	      1913	ldlang.c	FUNCTION_50	IF_6	IF_11
0x4007d78	        0x48896a10	             mov qword [rdx + 0x10], rbp	      1913	ldlang.c	FUNCTION_50	IF_6	IF_11
0x4007d7c	            0xeb0f	                           jmp 0x4007d8d	      1913	ldlang.c	FUNCTION_50	IF_6	IF_11
0x4007d7e	    0x48c745180000	               mov qword [rbp + 0x18], 0	      1913	ldlang.c	FUNCTION_50	IF_6	IF_11
0x4007d86	    0x4889a8900000	             mov qword [rax + 0x90], rbp	      1913	ldlang.c	FUNCTION_50	IF_6	IF_11
0x4007d8d	    0x4889a8980000	             mov qword [rax + 0x98], rbp	      1913	ldlang.c	FUNCTION_50	IF_6	IF_11
0x4007d94	            0xeb6e	                           jmp 0x4007e04	      1913	ldlang.c	FUNCTION_50	IF_6	IF_11
0x4007d96	          0x4839c5	                            cmp rbp, rax	      1915	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x4007d99	            0x7469	                            je 0x4007e04	      1915	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x4007d9b	        0x483b6818	            cmp rbp, qword [rax + 0x18] 	      1915	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x4007d9f	            0x7463	                            je 0x4007e04	      1915	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x4007da1	        0x488b4d10	            mov rcx, qword [rbp + 0x10] 	      1918	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x4007da5	        0x488b5518	            mov rdx, qword [rbp + 0x18] 	      1918	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x4007da9	          0x4885d2	                           test rdx, rdx	      1918	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x4007dac	            0x7406	                            je 0x4007db4	      1918	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x4007dae	        0x48894a10	             mov qword [rdx + 0x10], rcx	      1918	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x4007db2	            0xeb0e	                           jmp 0x4007dc2	      1918	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x4007db4	    0x488b35000000	            mov rsi, qword [0x04007dbb] 	      1918	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x4007dbb	    0x48898e900000	             mov qword [rsi + 0x90], rcx	      1918	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x4007dc2	          0x4885c9	                           test rcx, rcx	      1918	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x4007dc5	            0x7406	                            je 0x4007dcd	      1918	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x4007dc7	        0x48895118	             mov qword [rcx + 0x18], rdx	      1918	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x4007dcb	            0xeb0e	                           jmp 0x4007ddb	      1918	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x4007dcd	    0x488b0d000000	            mov rcx, qword [0x04007dd4] 	      1918	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x4007dd4	    0x488991980000	             mov qword [rcx + 0x98], rdx	      1918	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x4007ddb	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      1921	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x4007ddf	        0x48895518	            mov qword [rbp + 0x18], rdx 	      1921	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x4007de3	        0x48894510	            mov qword [rbp + 0x10], rax 	      1921	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x4007de7	        0x48896818	             mov qword [rax + 0x18], rbp	      1921	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x4007deb	          0x4885d2	                           test rdx, rdx	      1921	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x4007dee	            0x7406	                            je 0x4007df6	      1921	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x4007df0	        0x48896a10	             mov qword [rdx + 0x10], rbp	      1921	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x4007df4	            0xeb0e	                           jmp 0x4007e04	      1921	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x4007df6	    0x488b05000000	            mov rax, qword [0x04007dfd] 	      1921	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x4007dfd	    0x4889a8900000	             mov qword [rax + 0x90], rbp	      1921	ldlang.c	FUNCTION_50	IF_6	ELSE_2	IF_12
0x4007e04	        0x4883c510	                           add rbp, 0x10	      1926	ldlang.c	FUNCTION_50	IF_6
0x4007e08	        0x48896b18	             mov qword [rbx + 0x18], rbp	      1926	ldlang.c	FUNCTION_50	IF_6
0x4007e0c	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      1937	ldlang.c	FUNCTION_50	IF_6	IF_13
0x4007e12	     0xf84b2000000	                            je 0x4007eca	      1937	ldlang.c	FUNCTION_50	IF_6	IF_13
0x4007e18	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      1941	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_14
0x4007e1c	          0x4885c0	                           test rax, rax	      1941	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_14
0x4007e1f	            0x7525	                           jne 0x4007e46	      1941	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_14
0x4007e21	          0x4c89e7	                            mov rdi, r12	      1943	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_14	CALL_11
0x4007e24	      0xe8c082ffff	                call sym.insert_os_after	      1943	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_14	CALL_11
0x4007e29	          0x488b08	                    mov rcx, qword [rax]	      1945	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_14
0x4007e2c	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      1945	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_14
0x4007e31	          0x48890a	                    mov qword [rdx], rcx	      1945	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_14
0x4007e34	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      1946	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_14
0x4007e39	          0x488910	                    mov qword [rax], rdx	      1946	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_14
0x4007e3c	        0x4983c420	                           add r12, 0x20	      1948	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_14
0x4007e40	        0x4c896328	             mov qword [rbx + 0x28], r12	      1948	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_14
0x4007e44	            0xeb17	                           jmp 0x4007e5d	      1948	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_14
0x4007e46	          0x488b10	                    mov rdx, qword [rax]	      1953	ldlang.c	FUNCTION_50	IF_6	IF_13	ELSE_3
0x4007e49	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1953	ldlang.c	FUNCTION_50	IF_6	IF_13	ELSE_3
0x4007e4e	          0x488910	                    mov qword [rax], rdx	      1953	ldlang.c	FUNCTION_50	IF_6	IF_13	ELSE_3
0x4007e51	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      1954	ldlang.c	FUNCTION_50	IF_6	IF_13	ELSE_3
0x4007e55	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      1954	ldlang.c	FUNCTION_50	IF_6	IF_13	ELSE_3
0x4007e5a	          0x488910	                    mov qword [rax], rdx	      1954	ldlang.c	FUNCTION_50	IF_6	IF_13	ELSE_3
0x4007e5d	    0x488b05000000	            mov rax, qword [0x04007e64] 	      1959	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_15
0x4007e64	        0x488b5008	                mov rdx, qword [rax + 8]	      1959	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_15
0x4007e68	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      1959	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_15
0x4007e6d	          0x483932	                    cmp qword [rdx], rsi	      1959	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_15
0x4007e70	            0x7509	                           jne 0x4007e7b	      1959	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_15
0x4007e72	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      1960	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_15
0x4007e77	        0x48895008	                mov qword [rax + 8], rdx	      1960	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_15
0x4007e7b	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1963	ldlang.c	FUNCTION_50	IF_6	IF_13
0x4007e80	        0x48894320	             mov qword [rbx + 0x20], rax	      1963	ldlang.c	FUNCTION_50	IF_6	IF_13
0x4007e84	          0x498b06	                    mov rax, qword [r14]	      1966	ldlang.c	FUNCTION_50	IF_6	IF_13
0x4007e87	    0x49c706000000	                      mov qword [r14], 0	      1967	ldlang.c	FUNCTION_50	IF_6	IF_13
0x4007e8e	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	      1968	ldlang.c	FUNCTION_50	IF_6	IF_13
0x4007e92	        0x488d57e0	                   lea rdx, [rdi - 0x20]	      1968	ldlang.c	FUNCTION_50	IF_6	IF_13
0x4007e96	        0x48895028	             mov qword [rax + 0x28], rdx	      1968	ldlang.c	FUNCTION_50	IF_6	IF_13
0x4007e9a	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	      1971	ldlang.c	FUNCTION_50	IF_6	IF_13
0x4007e9e	          0x488b12	                    mov rdx, qword [rdx]	      1971	ldlang.c	FUNCTION_50	IF_6	IF_13
0x4007ea1	        0x48895020	             mov qword [rax + 0x20], rdx	      1971	ldlang.c	FUNCTION_50	IF_6	IF_13
0x4007ea5	          0x4885d2	                           test rdx, rdx	      1972	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_16
0x4007ea8	            0x7404	                            je 0x4007eae	      1972	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_16
0x4007eaa	        0x48894228	             mov qword [rdx + 0x28], rax	      1973	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_16
0x4007eae	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	      1974	ldlang.c	FUNCTION_50	IF_6	IF_13
0x4007eb2	          0x488902	                    mov qword [rdx], rax	      1974	ldlang.c	FUNCTION_50	IF_6	IF_13
0x4007eb5	        0x4883c020	                           add rax, 0x20	      1975	ldlang.c	FUNCTION_50	IF_6	IF_13
0x4007eb9	        0x48894328	             mov qword [rbx + 0x28], rax	      1975	ldlang.c	FUNCTION_50	IF_6	IF_13
0x4007ebd	        0x49833e00	                      cmp qword [r14], 0	      1982	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_17
0x4007ec1	            0x7507	                           jne 0x4007eca	      1982	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_17
0x4007ec3	    0x4c8935000000	            mov qword [0x04007eca], r14 	      1984	ldlang.c	FUNCTION_50	IF_6	IF_13	IF_17
0x4007eca	          0x4c89f8	                            mov rax, r15	      1988	ldlang.c	FUNCTION_50
0x4007ecd	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      1988	ldlang.c	FUNCTION_50
0x4007ed2	    0x644833342528	                xor rsi, qword fs:[0x28]	      1988	ldlang.c	FUNCTION_50
0x4007edb	            0x7440	                            je 0x4007f1d	      1988	ldlang.c	FUNCTION_50
0x4007edd	            0xeb39	                           jmp 0x4007f18	      1988	ldlang.c	FUNCTION_50
0x4007edf	      0xb900000000	                              mov ecx, 0	      1868	ldlang.c	FUNCTION_50	ELSE_1	CALL_8
0x4007ee4	      0xba00000000	                              mov edx, 0	      1868	ldlang.c	FUNCTION_50	ELSE_1	CALL_8
0x4007ee9	      0xbe00000000	                              mov esi, 0	      1868	ldlang.c	FUNCTION_50	ELSE_1	CALL_8
0x4007eee	      0xbf00000000	                              mov edi, 0	      1868	ldlang.c	FUNCTION_50	ELSE_1	CALL_8
0x4007ef3	      0xe800000000	                          call 0x4007ef8	      1868	ldlang.c	FUNCTION_50	ELSE_1	CALL_8
0x4007ef8	            0xebd0	                           jmp 0x4007eca	      1868	ldlang.c	FUNCTION_50	ELSE_1	CALL_8
0x4007efa	      0xb900000000	                              mov ecx, 0	      1868	ldlang.c	FUNCTION_50	ELSE_1	CALL_8
0x4007eff	      0xba00000000	                              mov edx, 0	      1868	ldlang.c	FUNCTION_50	ELSE_1	CALL_8
0x4007f04	      0xbe00000000	                              mov esi, 0	      1868	ldlang.c	FUNCTION_50	ELSE_1	CALL_8
0x4007f09	      0xbf00000000	                              mov edi, 0	      1868	ldlang.c	FUNCTION_50	ELSE_1	CALL_8
0x4007f0e	      0xe800000000	                          call 0x4007f13	      1868	ldlang.c	FUNCTION_50	ELSE_1	CALL_8
0x4007f13	      0xe998fdffff	                           jmp 0x4007cb0	      1868	ldlang.c	FUNCTION_50	ELSE_1	CALL_8
0x4007f18	      0xe800000000	                          call 0x4007f1d	      1988	ldlang.c	FUNCTION_50
0x4007f1d	        0x4883c438	                           add rsp, 0x38	      1988	ldlang.c	FUNCTION_50
0x4007f21	              0x5b	                                 pop rbx	      1988	ldlang.c	FUNCTION_50
0x4007f22	              0x5d	                                 pop rbp	      1988	ldlang.c	FUNCTION_50
0x4007f23	            0x415c	                                 pop r12	      1988	ldlang.c	FUNCTION_50
0x4007f25	            0x415d	                                 pop r13	      1988	ldlang.c	FUNCTION_50
0x4007f27	            0x415e	                                 pop r14	      1988	ldlang.c	FUNCTION_50
0x4007f29	            0x415f	                                 pop r15	      1988	ldlang.c	FUNCTION_50
0x4007f2b	              0xc3	                                     ret	      1988	ldlang.c	FUNCTION_50
archive_path	IF,3:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,1:ELSE,0	11
0x4001a9b	     0xfb635000000	           movzx esi, byte [0x04001aa2] 	       159	ldlang.c	FUNCTION_3	IF_1
0x4001aa2	          0x4084f6	                           test sil, sil	       159	ldlang.c	FUNCTION_3	IF_1
0x4001aa5	            0x740f	                            je 0x4001ab6	       159	ldlang.c	FUNCTION_3	IF_1
0x4001aa7	        0x4883ec08	                              sub rsp, 8	       156	ldlang.c	FUNCTION_3
0x4001aab	        0x400fbef6	                          movsx esi, sil	       162	ldlang.c	FUNCTION_3
0x4001aaf	      0xe800000000	                          call 0x4001ab4	       162	ldlang.c	FUNCTION_3
0x4001ab4	            0xeb06	                           jmp 0x4001abc	       162	ldlang.c	FUNCTION_3
0x4001ab6	      0xb800000000	                              mov eax, 0	       160	ldlang.c	FUNCTION_3	IF_1
0x4001abb	              0xc3	                                     ret	       160	ldlang.c	FUNCTION_3	IF_1
0x4001abc	        0x4883c408	                              add rsp, 8	       173	ldlang.c	FUNCTION_3
0x4001ac0	              0xc3	                                     ret	       173	ldlang.c	FUNCTION_3
sort_def_symbol	IF,3:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,4:ELSE,1	69
0x4002fee	         0xfb64718	           movzx eax, byte [rdi + 0x18] 	      2132	ldlang.c	FUNCTION_54	IF_1
0x4002ff2	          0x83e803	                              sub eax, 3	      2132	ldlang.c	FUNCTION_54	IF_1
0x4002ff5	            0x3c01	                               cmp al, 1	      2132	ldlang.c	FUNCTION_54	IF_1
0x4002ff7	     0xf8713010000	                            ja 0x4003110	      2132	ldlang.c	FUNCTION_54	IF_1
0x4002ffd	        0x488b5728	            mov rdx, qword [rdi + 0x28] 	      2134	ldlang.c	FUNCTION_54	IF_1
0x4003001	    0x488b82f00000	            mov rax, qword [rdx + 0xf0] 	      2134	ldlang.c	FUNCTION_54	IF_1
0x4003008	    0x483905000000	            cmp qword [0x0400300f], rax 	      2135	ldlang.c	FUNCTION_54	IF_1
0x400300f	     0xf84fb000000	                            je 0x4003110	      2135	ldlang.c	FUNCTION_54	IF_1
0x4003015	          0x4885c0	                           test rax, rax	      2135	ldlang.c	FUNCTION_54	IF_1
0x4003018	     0xf84f2000000	                            je 0x4003110	      2135	ldlang.c	FUNCTION_54	IF_1
0x400301e	              0x55	                                push rbp	      2131	ldlang.c	FUNCTION_54
0x400301f	              0x53	                                push rbx	      2131	ldlang.c	FUNCTION_54
0x4003020	        0x4883ec08	                              sub rsp, 8	      2131	ldlang.c	FUNCTION_54
0x4003024	          0x4889fb	                            mov rbx, rdi	      2131	ldlang.c	FUNCTION_54
0x4003027	    0x488baaa80000	            mov rbp, qword [rdx + 0xa8] 	      2140	ldlang.c	FUNCTION_54	IF_1
0x400302e	          0x4885ed	                           test rbp, rbp	      2142	ldlang.c	FUNCTION_54	IF_1	IF_2
0x4003031	            0x7526	                           jne 0x4003059	      2142	ldlang.c	FUNCTION_54	IF_1	IF_2
0x4003033	      0xbf18000000	                           mov edi, 0x18	      2144	ldlang.c	FUNCTION_54	IF_1	IF_2	CALL_2
0x4003038	      0xe800000000	                          call 0x400303d	      2144	ldlang.c	FUNCTION_54	IF_1	IF_2	CALL_2
0x400303d	          0x4889c5	                            mov rbp, rax	      2144	ldlang.c	FUNCTION_54	IF_1	IF_2	CALL_2
0x4003040	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      2145	ldlang.c	FUNCTION_54	IF_1	IF_2	CALL_3
0x4003044	    0x4889a8a80000	             mov qword [rax + 0xa8], rbp	      2145	ldlang.c	FUNCTION_54	IF_1	IF_2	CALL_3
0x400304b	        0x48896d08	                mov qword [rbp + 8], rbp	      2146	ldlang.c	FUNCTION_54	IF_1	IF_2
0x400304f	    0x48c745100000	               mov qword [rbp + 0x10], 0	      2147	ldlang.c	FUNCTION_54	IF_1	IF_2
0x4003057	            0xeb0b	                           jmp 0x4003064	      2147	ldlang.c	FUNCTION_54	IF_1	IF_2
0x4003059	      0x48837d0800	                  cmp qword [rbp + 8], 0	      2149	ldlang.c	FUNCTION_54	IF_1	ELSE_1	IF_3
0x400305e	            0x7504	                           jne 0x4003064	      2149	ldlang.c	FUNCTION_54	IF_1	ELSE_1	IF_3
0x4003060	        0x48896d08	                mov qword [rbp + 8], rbp	      2150	ldlang.c	FUNCTION_54	IF_1	ELSE_1	IF_3
0x4003064	    0x488b05000000	            mov rax, qword [0x0400306b] 	      2152	ldlang.c	FUNCTION_54	IF_1	CALL_4
0x400306b	    0x482b05000000	             sub rax, qword [0x04003072]	      2152	ldlang.c	FUNCTION_54	IF_1	CALL_4
0x4003072	        0x4883f80f	                            cmp rax, 0xf	      2152	ldlang.c	FUNCTION_54	IF_1	CALL_4
0x4003076	            0x770f	                            ja 0x4003087	      2152	ldlang.c	FUNCTION_54	IF_1	CALL_4
0x4003078	      0xbe10000000	                           mov esi, 0x10	      2152	ldlang.c	FUNCTION_54	IF_1	CALL_4
0x400307d	      0xbf00000000	                              mov edi, 0	      2152	ldlang.c	FUNCTION_54	IF_1	CALL_4
0x4003082	      0xe800000000	                          call 0x4003087	      2152	ldlang.c	FUNCTION_54	IF_1	CALL_4
0x4003087	    0x488b05000000	            mov rax, qword [0x0400308e] 	      2152	ldlang.c	FUNCTION_54	IF_1	CALL_4
0x400308e	        0x4883c010	                           add rax, 0x10	      2152	ldlang.c	FUNCTION_54	IF_1	CALL_4
0x4003092	    0x488b0d000000	            mov rcx, qword [0x04003099] 	      2152	ldlang.c	FUNCTION_54	IF_1	CALL_4
0x4003099	          0x4839c8	                            cmp rax, rcx	      2152	ldlang.c	FUNCTION_54	IF_1	CALL_4
0x400309c	            0x7507	                           jne 0x40030a5	      2152	ldlang.c	FUNCTION_54	IF_1	CALL_4
0x400309e	    0x800d00000000	                 or byte [0x040030a5], 2	      2152	ldlang.c	FUNCTION_54	IF_1	CALL_4
0x40030a5	    0x488b15000000	            mov rdx, qword [0x040030ac] 	      2152	ldlang.c	FUNCTION_54	IF_1	CALL_4
0x40030ac	          0x4801d0	                            add rax, rdx	      2152	ldlang.c	FUNCTION_54	IF_1	CALL_4
0x40030af	          0x48f7d2	                                 not rdx	      2152	ldlang.c	FUNCTION_54	IF_1	CALL_4
0x40030b2	          0x4821d0	                            and rax, rdx	      2152	ldlang.c	FUNCTION_54	IF_1	CALL_4
0x40030b5	    0x488905000000	            mov qword [0x040030bc], rax 	      2152	ldlang.c	FUNCTION_54	IF_1	CALL_4
0x40030bc	    0x488b15000000	            mov rdx, qword [0x040030c3] 	      2152	ldlang.c	FUNCTION_54	IF_1	CALL_4
0x40030c3	    0x488b35000000	            mov rsi, qword [0x040030ca] 	      2152	ldlang.c	FUNCTION_54	IF_1	CALL_4
0x40030ca	          0x4829d0	                            sub rax, rdx	      2152	ldlang.c	FUNCTION_54	IF_1	CALL_4
0x40030cd	          0x4889f7	                            mov rdi, rsi	      2152	ldlang.c	FUNCTION_54	IF_1	CALL_4
0x40030d0	          0x4829d7	                            sub rdi, rdx	      2152	ldlang.c	FUNCTION_54	IF_1	CALL_4
0x40030d3	          0x4839f8	                            cmp rax, rdi	      2152	ldlang.c	FUNCTION_54	IF_1	CALL_4
0x40030d6	            0x7607	                           jbe 0x40030df	      2152	ldlang.c	FUNCTION_54	IF_1	CALL_4
0x40030d8	    0x488935000000	            mov qword [0x040030df], rsi 	      2152	ldlang.c	FUNCTION_54	IF_1	CALL_4
0x40030df	    0x488b05000000	            mov rax, qword [0x040030e6] 	      2152	ldlang.c	FUNCTION_54	IF_1	CALL_4
0x40030e6	    0x488905000000	            mov qword [0x040030ed], rax 	      2152	ldlang.c	FUNCTION_54	IF_1	CALL_4
0x40030ed	          0x488919	                    mov qword [rcx], rbx	      2153	ldlang.c	FUNCTION_54	IF_1
0x40030f0	        0x488b4508	                mov rax, qword [rbp + 8]	      2154	ldlang.c	FUNCTION_54	IF_1
0x40030f4	          0x488908	                    mov qword [rax], rcx	      2154	ldlang.c	FUNCTION_54	IF_1
0x40030f7	        0x4883c108	                              add rcx, 8	      2155	ldlang.c	FUNCTION_54	IF_1
0x40030fb	        0x48894d08	                mov qword [rbp + 8], rcx	      2155	ldlang.c	FUNCTION_54	IF_1
0x40030ff	      0x4883451001	               add qword [rbp + 0x10], 1	      2156	ldlang.c	FUNCTION_54	IF_1
0x4003104	      0xb801000000	                              mov eax, 1	      2159	ldlang.c	FUNCTION_54
0x4003109	        0x4883c408	                              add rsp, 8	      2159	ldlang.c	FUNCTION_54
0x400310d	              0x5b	                                 pop rbx	      2159	ldlang.c	FUNCTION_54
0x400310e	              0x5d	                                 pop rbp	      2159	ldlang.c	FUNCTION_54
0x400310f	              0xc3	                                     ret	      2159	ldlang.c	FUNCTION_54
0x4003110	      0xb801000000	                              mov eax, 1	      2159	ldlang.c	FUNCTION_54
0x4003115	              0xc3	                                     ret	      2159	ldlang.c	FUNCTION_54
lang_print_memory_size	IF,3:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,0:ELSE,3	35
0x4002af4	        0x4883ec08	                              sub rsp, 8	      8759	ldlang.c	FUNCTION_208
0x4002af8	    0xf7c7ffffff3f	                    test edi, 0x3fffffff	      8760	ldlang.c	FUNCTION_208	IF_1
0x4002afe	            0x751d	                           jne 0x4002b1d	      8760	ldlang.c	FUNCTION_208	IF_1
0x4002b00	          0x4889fa	                            mov rdx, rdi	       104	stdio2.h	CALL_25
0x4002b03	        0x48c1ea1e	                           shr rdx, 0x1e	       104	stdio2.h	CALL_25
0x4002b07	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_25
0x4002b0c	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_25
0x4002b11	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_25
0x4002b16	      0xe800000000	                          call 0x4002b1b	       104	stdio2.h	CALL_25
0x4002b1b	            0xeb61	                           jmp 0x4002b7e	       104	stdio2.h	CALL_25
0x4002b1d	    0xf7c7ffff0f00	                       test edi, 0xfffff	      8762	ldlang.c	FUNCTION_208	ELSE_1	IF_2
0x4002b23	            0x751d	                           jne 0x4002b42	      8762	ldlang.c	FUNCTION_208	ELSE_1	IF_2
0x4002b25	          0x4889fa	                            mov rdx, rdi	       104	stdio2.h	CALL_25
0x4002b28	        0x48c1ea14	                           shr rdx, 0x14	       104	stdio2.h	CALL_25
0x4002b2c	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_25
0x4002b31	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_25
0x4002b36	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_25
0x4002b3b	      0xe800000000	                          call 0x4002b40	       104	stdio2.h	CALL_25
0x4002b40	            0xeb3c	                           jmp 0x4002b7e	       104	stdio2.h	CALL_25
0x4002b42	    0xf7c7ff030000	                         test edi, 0x3ff	      8764	ldlang.c	FUNCTION_208	ELSE_2	IF_3
0x4002b48	            0x751d	                           jne 0x4002b67	      8764	ldlang.c	FUNCTION_208	ELSE_2	IF_3
0x4002b4a	          0x4889fa	                            mov rdx, rdi	       104	stdio2.h	CALL_25
0x4002b4d	        0x48c1ea0a	                            shr rdx, 0xa	       104	stdio2.h	CALL_25
0x4002b51	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_25
0x4002b56	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_25
0x4002b5b	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_25
0x4002b60	      0xe800000000	                          call 0x4002b65	       104	stdio2.h	CALL_25
0x4002b65	            0xeb17	                           jmp 0x4002b7e	       104	stdio2.h	CALL_25
0x4002b67	          0x4889fa	                            mov rdx, rdi	       104	stdio2.h	CALL_25
0x4002b6a	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_25
0x4002b6f	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_25
0x4002b74	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_25
0x4002b79	      0xe800000000	                          call 0x4002b7e	       104	stdio2.h	CALL_25
0x4002b7e	        0x4883c408	                              add rsp, 8	      8768	ldlang.c	FUNCTION_208
0x4002b82	              0xc3	                                     ret	      8768	ldlang.c	FUNCTION_208
lang_list_remove_tail	IF,0:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,1:ELSE,0	22
0x40003e8	              0x55	                                push rbp	      7083	ldlang.c	FUNCTION_159
0x40003e9	              0x53	                                push rbx	      7083	ldlang.c	FUNCTION_159
0x40003ea	        0x4883ec08	                              sub rsp, 8	      7083	ldlang.c	FUNCTION_159
0x40003ee	          0x4889fd	                            mov rbp, rdi	      7083	ldlang.c	FUNCTION_159
0x40003f1	          0x4889f3	                            mov rbx, rsi	      7083	ldlang.c	FUNCTION_159
0x40003f4	          0x488b07	                    mov rax, qword [rdi]	      7086	ldlang.c	FUNCTION_159	CALL_1
0x40003f7	          0x483906	                    cmp qword [rsi], rax	      7086	ldlang.c	FUNCTION_159	CALL_1
0x40003fa	            0x740f	                            je 0x400040b	      7086	ldlang.c	FUNCTION_159	CALL_1
0x40003fc	      0xbeae1b0000	                         mov esi, 0x1bae	      7086	ldlang.c	FUNCTION_159	CALL_1
0x4000401	      0xbf00000000	                              mov edi, 0	      7086	ldlang.c	FUNCTION_159	CALL_1
0x4000406	      0xe800000000	                          call 0x400040b	      7086	ldlang.c	FUNCTION_159	CALL_1
0x400040b	        0x488b4308	                mov rax, qword [rbx + 8]	      7087	ldlang.c	FUNCTION_159
0x400040f	          0x488b10	                    mov rdx, qword [rax]	      7088	ldlang.c	FUNCTION_159
0x4000412	          0x488913	                    mov qword [rbx], rdx	      7088	ldlang.c	FUNCTION_159
0x4000415	        0x488b5508	                mov rdx, qword [rbp + 8]	      7089	ldlang.c	FUNCTION_159
0x4000419	        0x48895308	                mov qword [rbx + 8], rdx	      7089	ldlang.c	FUNCTION_159
0x400041d	        0x48894508	                mov qword [rbp + 8], rax	      7090	ldlang.c	FUNCTION_159
0x4000421	    0x48c700000000	                      mov qword [rax], 0	      7091	ldlang.c	FUNCTION_159
0x4000428	        0x4883c408	                              add rsp, 8	      7092	ldlang.c	FUNCTION_159
0x400042c	              0x5b	                                 pop rbx	      7092	ldlang.c	FUNCTION_159
0x400042d	              0x5d	                                 pop rbp	      7092	ldlang.c	FUNCTION_159
0x400042e	              0xc3	                                     ret	      7092	ldlang.c	FUNCTION_159
add_excluded_libs	IF,2:WHILE,1:FOR,0:DO,0:SWITCH,0:functions,0:CALL,4:ELSE,0	73
0x40055c8	            0x4157	                                push r15	      2689	ldlang.c	FUNCTION_64
0x40055ca	            0x4156	                                push r14	      2689	ldlang.c	FUNCTION_64
0x40055cc	            0x4155	                                push r13	      2689	ldlang.c	FUNCTION_64
0x40055ce	            0x4154	                                push r12	      2689	ldlang.c	FUNCTION_64
0x40055d0	              0x55	                                push rbp	      2689	ldlang.c	FUNCTION_64
0x40055d1	              0x53	                                push rbx	      2689	ldlang.c	FUNCTION_64
0x40055d2	        0x4883ec08	                              sub rsp, 8	      2689	ldlang.c	FUNCTION_64
0x40055d6	          0x4889fb	                            mov rbx, rdi	      2692	ldlang.c	FUNCTION_64	WHILE_1
0x40055d9	    0x48c7c5ffffff	             mov rbp, 0xffffffffffffffff	      2697	ldlang.c	FUNCTION_64	WHILE_1	CALL_1
0x40055e0	          0x803f00	                       cmp byte [rdi], 0	      2692	ldlang.c	FUNCTION_64	WHILE_1
0x40055e3	     0xf859c000000	                           jne 0x4005685	      2692	ldlang.c	FUNCTION_64	WHILE_1
0x40055e9	      0xe9bc000000	                           jmp 0x40056aa	      2692	ldlang.c	FUNCTION_64	WHILE_1
0x40055ee	        0x4883c701	                              add rdi, 1	      1104	string2.h	FUNCTION_239	WHILE_1
0x40055f2	           0xfb607	                   movzx eax, byte [rdi]	      1103	string2.h	FUNCTION_239	WHILE_1
0x40055f5	            0x84c0	                             test al, al	      1103	string2.h	FUNCTION_239	WHILE_1
0x40055f7	            0x7415	                            je 0x400560e	      1103	string2.h	FUNCTION_239	WHILE_1
0x40055f9	           0xfbec0	                           movsx eax, al	      1103	string2.h	FUNCTION_239	WHILE_1
0x40055fc	          0x83f82c	                           cmp eax, 0x2c	      1103	string2.h	FUNCTION_239	WHILE_1
0x40055ff	            0x7405	                            je 0x4005606	      1103	string2.h	FUNCTION_239	WHILE_1
0x4005601	          0x83f83a	                           cmp eax, 0x3a	      1103	string2.h	FUNCTION_239	WHILE_1
0x4005604	            0x75e8	                           jne 0x40055ee	      1103	string2.h	FUNCTION_239	WHILE_1
0x4005606	          0x4989fc	                            mov r12, rdi	      1104	string2.h	FUNCTION_239	WHILE_1
0x4005609	      0xe992000000	                           jmp 0x40056a0	      1104	string2.h	FUNCTION_239	WHILE_1
0x400560e	      0xb800000000	                              mov eax, 0	      2697	ldlang.c	FUNCTION_64	WHILE_1	CALL_1
0x4005613	          0x4889e9	                            mov rcx, rbp	      2697	ldlang.c	FUNCTION_64	WHILE_1	CALL_1
0x4005616	          0x4889df	                            mov rdi, rbx	      2697	ldlang.c	FUNCTION_64	WHILE_1	CALL_1
0x4005619	            0xf2ae	              repne scasb al, byte [rdi]	      2697	ldlang.c	FUNCTION_64	WHILE_1	CALL_1
0x400561b	          0x4889c8	                            mov rax, rcx	      2697	ldlang.c	FUNCTION_64	WHILE_1	CALL_1
0x400561e	          0x48f7d0	                                 not rax	      2697	ldlang.c	FUNCTION_64	WHILE_1	CALL_1
0x4005621	      0x4c8d6403ff	                lea r12, [rbx + rax - 1]	      2697	ldlang.c	FUNCTION_64	WHILE_1	CALL_1
0x4005626	      0xbf10000000	                           mov edi, 0x10	      2698	ldlang.c	FUNCTION_64	WHILE_1	CALL_2
0x400562b	      0xe800000000	                          call 0x4005630	      2698	ldlang.c	FUNCTION_64	WHILE_1	CALL_2
0x4005630	          0x4989c5	                            mov r13, rax	      2698	ldlang.c	FUNCTION_64	WHILE_1	CALL_2
0x4005633	    0x488b05000000	            mov rax, qword [0x0400563a] 	      2699	ldlang.c	FUNCTION_64	WHILE_1
0x400563a	        0x49894508	                mov qword [r13 + 8], rax	      2699	ldlang.c	FUNCTION_64	WHILE_1
0x400563e	          0x4d89e6	                            mov r14, r12	      2700	ldlang.c	FUNCTION_64	WHILE_1	CALL_3
0x4005641	          0x4929de	                            sub r14, rbx	      2700	ldlang.c	FUNCTION_64	WHILE_1	CALL_3
0x4005644	        0x498d7e01	                      lea rdi, [r14 + 1]	      2700	ldlang.c	FUNCTION_64	WHILE_1	CALL_3
0x4005648	      0xe800000000	                          call 0x400564d	      2700	ldlang.c	FUNCTION_64	WHILE_1	CALL_3
0x400564d	          0x4989c7	                            mov r15, rax	      2700	ldlang.c	FUNCTION_64	WHILE_1	CALL_3
0x4005650	        0x49894500	                    mov qword [r13], rax	      2700	ldlang.c	FUNCTION_64	WHILE_1	CALL_3
0x4005654	          0x4c89f2	                            mov rdx, r14	        53	string3.h	FUNCTION_245	CALL_3
0x4005657	          0x4889de	                            mov rsi, rbx	        53	string3.h	FUNCTION_245	CALL_3
0x400565a	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_245	CALL_3
0x400565d	      0xe800000000	                          call 0x4005662	        53	string3.h	FUNCTION_245	CALL_3
0x4005662	      0x43c6043700	                 mov byte [r15 + r14], 0	      2702	ldlang.c	FUNCTION_64	WHILE_1
0x4005667	    0x4c892d000000	            mov qword [0x0400566e], r13 	      2703	ldlang.c	FUNCTION_64	WHILE_1
0x400566e	      0x41803c2400	                       cmp byte [r12], 0	      2704	ldlang.c	FUNCTION_64	WHILE_1	IF_2
0x4005673	            0x7435	                            je 0x40056aa	      2704	ldlang.c	FUNCTION_64	WHILE_1	IF_2
0x4005675	      0x498d7c2401	                      lea rdi, [r12 + 1]	      2706	ldlang.c	FUNCTION_64	WHILE_1
0x400567a	    0x41807c240100	                   cmp byte [r12 + 1], 0	      2692	ldlang.c	FUNCTION_64	WHILE_1
0x4005680	            0x7428	                            je 0x40056aa	      2692	ldlang.c	FUNCTION_64	WHILE_1
0x4005682	          0x4889fb	                            mov rbx, rdi	      2706	ldlang.c	FUNCTION_64	WHILE_1
0x4005685	           0xfb607	                   movzx eax, byte [rdi]	      1103	string2.h	FUNCTION_239	WHILE_1
0x4005688	            0x84c0	                             test al, al	      1103	string2.h	FUNCTION_239	WHILE_1
0x400568a	            0x7482	                            je 0x400560e	      1103	string2.h	FUNCTION_239	WHILE_1
0x400568c	           0xfbec0	                           movsx eax, al	      1103	string2.h	FUNCTION_239	WHILE_1
0x400568f	          0x83f83a	                           cmp eax, 0x3a	      1103	string2.h	FUNCTION_239	WHILE_1
0x4005692	            0x7409	                            je 0x400569d	      1103	string2.h	FUNCTION_239	WHILE_1
0x4005694	          0x83f82c	                           cmp eax, 0x2c	      1103	string2.h	FUNCTION_239	WHILE_1
0x4005697	     0xf8551ffffff	                           jne 0x40055ee	      1103	string2.h	FUNCTION_239	WHILE_1
0x400569d	          0x4989fc	                            mov r12, rdi	      1103	string2.h	FUNCTION_239	WHILE_1
0x40056a0	          0x4d85e4	                           test r12, r12	      2696	ldlang.c	FUNCTION_64	WHILE_1	IF_1
0x40056a3	            0x7581	                           jne 0x4005626	      2696	ldlang.c	FUNCTION_64	WHILE_1	IF_1
0x40056a5	      0xe964ffffff	                           jmp 0x400560e	      2696	ldlang.c	FUNCTION_64	WHILE_1	IF_1
0x40056aa	        0x4883c408	                              add rsp, 8	      2708	ldlang.c	FUNCTION_64
0x40056ae	              0x5b	                                 pop rbx	      2708	ldlang.c	FUNCTION_64
0x40056af	              0x5d	                                 pop rbp	      2708	ldlang.c	FUNCTION_64
0x40056b0	            0x415c	                                 pop r12	      2708	ldlang.c	FUNCTION_64
0x40056b2	            0x415d	                                 pop r13	      2708	ldlang.c	FUNCTION_64
0x40056b4	            0x415e	                                 pop r14	      2708	ldlang.c	FUNCTION_64
0x40056b6	            0x415f	                                 pop r15	      2708	ldlang.c	FUNCTION_64
0x40056b8	              0xc3	                                     ret	      2708	ldlang.c	FUNCTION_64
check_input_sections	IF,3:WHILE,0:FOR,1:DO,0:SWITCH,1:functions,0:CALL,3:ELSE,0	39
0x40066fc	              0x55	                                push rbp	      3490	ldlang.c	FUNCTION_84
0x40066fd	              0x53	                                push rbx	      3490	ldlang.c	FUNCTION_84
0x40066fe	        0x4883ec08	                              sub rsp, 8	      3490	ldlang.c	FUNCTION_84
0x4006702	          0x4889fb	                            mov rbx, rdi	      3490	ldlang.c	FUNCTION_84
0x4006705	          0x4889f5	                            mov rbp, rsi	      3490	ldlang.c	FUNCTION_84
0x4006708	          0x4885ff	                           test rdi, rdi	      3491	ldlang.c	FUNCTION_84	FOR_1
0x400670b	            0x7464	                            je 0x4006771	      3491	ldlang.c	FUNCTION_84	FOR_1
0x400670d	          0x8b4308	                mov eax, dword [rbx + 8]	      3493	ldlang.c	FUNCTION_84	FOR_1	SWITCH_1
0x4006710	          0x83f80d	                            cmp eax, 0xd	      3493	ldlang.c	FUNCTION_84	FOR_1	SWITCH_1
0x4006713	            0x743f	                            je 0x4006754	      3493	ldlang.c	FUNCTION_84	FOR_1	SWITCH_1
0x4006715	          0x83f80f	                            cmp eax, 0xf	      3493	ldlang.c	FUNCTION_84	FOR_1	SWITCH_1
0x4006718	            0x7420	                            je 0x400673a	      3493	ldlang.c	FUNCTION_84	FOR_1	SWITCH_1
0x400671a	          0x83f804	                              cmp eax, 4	      3493	ldlang.c	FUNCTION_84	FOR_1	SWITCH_1
0x400671d	            0x754a	                           jne 0x4006769	      3493	ldlang.c	FUNCTION_84	FOR_1	SWITCH_1
0x400671f	          0x4889ea	                            mov rdx, rbp	      3496	ldlang.c	FUNCTION_84	FOR_1	SWITCH_1	CALL_1
0x4006722	      0xbe00000000	                              mov esi, 0	      3496	ldlang.c	FUNCTION_84	FOR_1	SWITCH_1	CALL_1
0x4006727	          0x4889df	                            mov rdi, rbx	      3496	ldlang.c	FUNCTION_84	FOR_1	SWITCH_1	CALL_1
0x400672a	      0xe809feffff	                      call sym.walk_wild	      3496	ldlang.c	FUNCTION_84	FOR_1	SWITCH_1	CALL_1
0x400672f	    0xf68590000000	               test byte [rbp + 0x90], 4	      3498	ldlang.c	FUNCTION_84	FOR_1	SWITCH_1	IF_1
0x4006736	            0x7531	                           jne 0x4006769	      3498	ldlang.c	FUNCTION_84	FOR_1	SWITCH_1	IF_1
0x4006738	            0xeb37	                           jmp 0x4006771	      3498	ldlang.c	FUNCTION_84	FOR_1	SWITCH_1	IF_1
0x400673a	          0x4889ee	                            mov rsi, rbp	      3502	ldlang.c	FUNCTION_84	FOR_1	SWITCH_1	CALL_2
0x400673d	    0x488b3d000000	            mov rdi, qword [0x04006744] 	      3502	ldlang.c	FUNCTION_84	FOR_1	SWITCH_1	CALL_2
0x4006744	      0xe8b3ffffff	           call sym.check_input_sections	      3502	ldlang.c	FUNCTION_84	FOR_1	SWITCH_1	CALL_2
0x4006749	    0xf68590000000	               test byte [rbp + 0x90], 4	      3504	ldlang.c	FUNCTION_84	FOR_1	SWITCH_1	IF_2
0x4006750	            0x7517	                           jne 0x4006769	      3504	ldlang.c	FUNCTION_84	FOR_1	SWITCH_1	IF_2
0x4006752	            0xeb1d	                           jmp 0x4006771	      3504	ldlang.c	FUNCTION_84	FOR_1	SWITCH_1	IF_2
0x4006754	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      3508	ldlang.c	FUNCTION_84	FOR_1	SWITCH_1	CALL_3
0x4006758	          0x4889ee	                            mov rsi, rbp	      3508	ldlang.c	FUNCTION_84	FOR_1	SWITCH_1	CALL_3
0x400675b	      0xe89cffffff	           call sym.check_input_sections	      3508	ldlang.c	FUNCTION_84	FOR_1	SWITCH_1	CALL_3
0x4006760	    0xf68590000000	               test byte [rbp + 0x90], 4	      3510	ldlang.c	FUNCTION_84	FOR_1	SWITCH_1	IF_3
0x4006767	            0x7408	                            je 0x4006771	      3510	ldlang.c	FUNCTION_84	FOR_1	SWITCH_1	IF_3
0x4006769	          0x488b1b	                    mov rbx, qword [rbx]	      3491	ldlang.c	FUNCTION_84	FOR_1
0x400676c	          0x4885db	                           test rbx, rbx	      3491	ldlang.c	FUNCTION_84	FOR_1
0x400676f	            0x759c	                           jne 0x400670d	      3491	ldlang.c	FUNCTION_84	FOR_1
0x4006771	        0x4883c408	                              add rsp, 8	      3517	ldlang.c	FUNCTION_84
0x4006775	              0x5b	                                 pop rbx	      3517	ldlang.c	FUNCTION_84
0x4006776	              0x5d	                                 pop rbp	      3517	ldlang.c	FUNCTION_84
0x4006777	              0xc3	                                     ret	      3517	ldlang.c	FUNCTION_84
closest_target_match	IF,6:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,2:ELSE,0	74
0x4002cc7	          0x4889fa	                            mov rdx, rdi	      3020	ldlang.c	FUNCTION_72
0x4002cca	          0x4989f0	                             mov r8, rsi	      3020	ldlang.c	FUNCTION_72
0x4002ccd	    0x8b0500000000	            mov eax, dword [0x04002cd3] 	      3023	ldlang.c	FUNCTION_72	IF_1
0x4002cd3	          0x83f801	                              cmp eax, 1	      3023	ldlang.c	FUNCTION_72	IF_1
0x4002cd6	            0x750c	                           jne 0x4002ce4	      3023	ldlang.c	FUNCTION_72	IF_1
0x4002cd8	        0x837f0c00	                cmp dword [rdi + 0xc], 0	      3024	ldlang.c	FUNCTION_72	IF_1
0x4002cdc	            0x7411	                            je 0x4002cef	      3024	ldlang.c	FUNCTION_72	IF_1
0x4002cde	      0xb800000000	                              mov eax, 0	      3057	ldlang.c	FUNCTION_72
0x4002ce3	              0xc3	                                     ret	      3057	ldlang.c	FUNCTION_72
0x4002ce4	          0x83f802	                              cmp eax, 2	      3027	ldlang.c	FUNCTION_72	IF_2
0x4002ce7	            0x7506	                           jne 0x4002cef	      3027	ldlang.c	FUNCTION_72	IF_2
0x4002ce9	        0x837f0c01	                cmp dword [rdi + 0xc], 1	      3028	ldlang.c	FUNCTION_72	IF_2
0x4002ced	            0x75ef	                           jne 0x4002cde	      3028	ldlang.c	FUNCTION_72	IF_2
0x4002cef	        0x418b4008	                 mov eax, dword [r8 + 8]	      3032	ldlang.c	FUNCTION_72	IF_3
0x4002cf3	          0x394208	                cmp dword [rdx + 8], eax	      3032	ldlang.c	FUNCTION_72	IF_3
0x4002cf6	            0x75e6	                           jne 0x4002cde	      3032	ldlang.c	FUNCTION_72	IF_3
0x4002cf8	          0x488b02	                    mov rax, qword [rdx]	      3036	ldlang.c	FUNCTION_72	IF_4
0x4002cfb	      0xbf00000000	                              mov edi, 0	      3036	ldlang.c	FUNCTION_72	IF_4
0x4002d00	      0xb90a000000	                            mov ecx, 0xa	      3036	ldlang.c	FUNCTION_72	IF_4
0x4002d05	          0x4889c6	                            mov rsi, rax	      3036	ldlang.c	FUNCTION_72	IF_4
0x4002d08	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      3036	ldlang.c	FUNCTION_72	IF_4
0x4002d0a	        0x400f97c6	                                seta sil	      3036	ldlang.c	FUNCTION_72	IF_4
0x4002d0e	           0xf92c1	                                 setb cl	      3036	ldlang.c	FUNCTION_72	IF_4
0x4002d11	          0x4038ce	                             cmp sil, cl	      3036	ldlang.c	FUNCTION_72	IF_4
0x4002d14	            0x74c8	                            je 0x4002cde	      3036	ldlang.c	FUNCTION_72	IF_4
0x4002d16	      0xbf00000000	                              mov edi, 0	      3037	ldlang.c	FUNCTION_72	IF_4
0x4002d1b	      0xb90a000000	                            mov ecx, 0xa	      3037	ldlang.c	FUNCTION_72	IF_4
0x4002d20	          0x4889c6	                            mov rsi, rax	      3037	ldlang.c	FUNCTION_72	IF_4
0x4002d23	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      3037	ldlang.c	FUNCTION_72	IF_4
0x4002d25	        0x400f97c6	                                seta sil	      3037	ldlang.c	FUNCTION_72	IF_4
0x4002d29	           0xf92c1	                                 setb cl	      3037	ldlang.c	FUNCTION_72	IF_4
0x4002d2c	          0x4038ce	                             cmp sil, cl	      3037	ldlang.c	FUNCTION_72	IF_4
0x4002d2f	            0x74ad	                            je 0x4002cde	      3037	ldlang.c	FUNCTION_72	IF_4
0x4002d31	      0xbf00000000	                              mov edi, 0	      3038	ldlang.c	FUNCTION_72	IF_4
0x4002d36	      0xb90d000000	                            mov ecx, 0xd	      3038	ldlang.c	FUNCTION_72	IF_4
0x4002d3b	          0x4889c6	                            mov rsi, rax	      3038	ldlang.c	FUNCTION_72	IF_4
0x4002d3e	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      3038	ldlang.c	FUNCTION_72	IF_4
0x4002d40	        0x400f97c6	                                seta sil	      3038	ldlang.c	FUNCTION_72	IF_4
0x4002d44	           0xf92c1	                                 setb cl	      3038	ldlang.c	FUNCTION_72	IF_4
0x4002d47	          0x4038ce	                             cmp sil, cl	      3038	ldlang.c	FUNCTION_72	IF_4
0x4002d4a	            0x7492	                            je 0x4002cde	      3038	ldlang.c	FUNCTION_72	IF_4
0x4002d4c	      0xbf00000000	                              mov edi, 0	      3039	ldlang.c	FUNCTION_72	IF_4
0x4002d51	      0xb90d000000	                            mov ecx, 0xd	      3039	ldlang.c	FUNCTION_72	IF_4
0x4002d56	          0x4889c6	                            mov rsi, rax	      3039	ldlang.c	FUNCTION_72	IF_4
0x4002d59	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      3039	ldlang.c	FUNCTION_72	IF_4
0x4002d5b	        0x400f97c6	                                seta sil	      3039	ldlang.c	FUNCTION_72	IF_4
0x4002d5f	           0xf92c1	                                 setb cl	      3039	ldlang.c	FUNCTION_72	IF_4
0x4002d62	          0x4038ce	                             cmp sil, cl	      3039	ldlang.c	FUNCTION_72	IF_4
0x4002d65	     0xf8473ffffff	                            je 0x4002cde	      3039	ldlang.c	FUNCTION_72	IF_4
0x4002d6b	    0x48833d000000	               cmp qword [0x04002d73], 0	      3043	ldlang.c	FUNCTION_72	IF_5
0x4002d73	            0x750c	                           jne 0x4002d81	      3043	ldlang.c	FUNCTION_72	IF_5
0x4002d75	    0x488915000000	            mov qword [0x04002d7c], rdx 	      3045	ldlang.c	FUNCTION_72	IF_5
0x4002d7c	      0xe95dffffff	                           jmp 0x4002cde	      3046	ldlang.c	FUNCTION_72	IF_5
0x4002d81	            0x4154	                                push r12	      3020	ldlang.c	FUNCTION_72
0x4002d83	              0x55	                                push rbp	      3020	ldlang.c	FUNCTION_72
0x4002d84	              0x53	                                push rbx	      3020	ldlang.c	FUNCTION_72
0x4002d85	          0x4c89c5	                             mov rbp, r8	      3020	ldlang.c	FUNCTION_72
0x4002d88	          0x4889d3	                            mov rbx, rdx	      3020	ldlang.c	FUNCTION_72
0x4002d8b	          0x498b30	                     mov rsi, qword [r8]	      3051	ldlang.c	FUNCTION_72	IF_6	CALL_1
0x4002d8e	          0x4889c7	                            mov rdi, rax	      3051	ldlang.c	FUNCTION_72	IF_6	CALL_1
0x4002d91	      0xe8edfdffff	                   call sym.name_compare	      3051	ldlang.c	FUNCTION_72	IF_6	CALL_1
0x4002d96	          0x4189c4	                           mov r12d, eax	      3051	ldlang.c	FUNCTION_72	IF_6	CALL_1
0x4002d99	        0x488b7500	                    mov rsi, qword [rbp]	      3052	ldlang.c	FUNCTION_72	IF_6	CALL_2
0x4002d9d	    0x488b05000000	            mov rax, qword [0x04002da4] 	      3052	ldlang.c	FUNCTION_72	IF_6	CALL_2
0x4002da4	          0x488b38	                    mov rdi, qword [rax]	      3052	ldlang.c	FUNCTION_72	IF_6	CALL_2
0x4002da7	      0xe8d7fdffff	                   call sym.name_compare	      3052	ldlang.c	FUNCTION_72	IF_6	CALL_2
0x4002dac	          0x4139c4	                           cmp r12d, eax	      3051	ldlang.c	FUNCTION_72	IF_6	CALL_1
0x4002daf	            0x7e07	                           jle 0x4002db8	      3051	ldlang.c	FUNCTION_72	IF_6	CALL_1
0x4002db1	    0x48891d000000	            mov qword [0x04002db8], rbx 	      3053	ldlang.c	FUNCTION_72	IF_6
0x4002db8	      0xb800000000	                              mov eax, 0	      3057	ldlang.c	FUNCTION_72
0x4002dbd	              0x5b	                                 pop rbx	      3057	ldlang.c	FUNCTION_72
0x4002dbe	              0x5d	                                 pop rbp	      3057	ldlang.c	FUNCTION_72
0x4002dbf	            0x415c	                                 pop r12	      3057	ldlang.c	FUNCTION_72
0x4002dc1	              0xc3	                                     ret	      3057	ldlang.c	FUNCTION_72
output_prev_sec_find	IF,2:WHILE,0:FOR,1:DO,0:SWITCH,0:functions,0:CALL,0:ELSE,0	17
0x40000ae	        0x488b5728	            mov rdx, qword [rdi + 0x28] 	      1733	ldlang.c	FUNCTION_48	FOR_1
0x40000b2	          0x4885d2	                           test rdx, rdx	      1733	ldlang.c	FUNCTION_48	FOR_1
0x40000b5	            0x742b	                            je 0x40000e2	      1733	ldlang.c	FUNCTION_48	FOR_1
0x40000b7	    0x83ba84000000	               cmp dword [rdx + 0x84], 0	      1735	ldlang.c	FUNCTION_48	FOR_1	IF_1
0x40000be	            0x7813	                            js 0x40000d3	      1735	ldlang.c	FUNCTION_48	FOR_1	IF_1
0x40000c0	        0x488b4238	            mov rax, qword [rdx + 0x38] 	      1738	ldlang.c	FUNCTION_48	FOR_1	IF_2
0x40000c4	          0x4885c0	                           test rax, rax	      1738	ldlang.c	FUNCTION_48	FOR_1	IF_2
0x40000c7	            0x740a	                            je 0x40000d3	      1738	ldlang.c	FUNCTION_48	FOR_1	IF_2
0x40000c9	    0x4883b8f00000	               cmp qword [rax + 0xf0], 0	      1738	ldlang.c	FUNCTION_48	FOR_1	IF_2
0x40000d1	            0x7514	                           jne 0x40000e7	      1738	ldlang.c	FUNCTION_48	FOR_1	IF_2
0x40000d3	        0x488b5228	            mov rdx, qword [rdx + 0x28] 	      1733	ldlang.c	FUNCTION_48	FOR_1
0x40000d7	          0x4885d2	                           test rdx, rdx	      1733	ldlang.c	FUNCTION_48	FOR_1
0x40000da	            0x75db	                           jne 0x40000b7	      1733	ldlang.c	FUNCTION_48	FOR_1
0x40000dc	      0xb800000000	                              mov eax, 0	      1742	ldlang.c	FUNCTION_48
0x40000e1	              0xc3	                                     ret	      1742	ldlang.c	FUNCTION_48
0x40000e2	      0xb800000000	                              mov eax, 0	      1742	ldlang.c	FUNCTION_48
0x40000e7	            0xf3c3	                                     ret	      1743	ldlang.c	FUNCTION_48
lang_find_relro_sections_1	IF,2:WHILE,0:FOR,1:DO,0:SWITCH,1:functions,0:CALL,4:ELSE,0	54
0x40069e9	          0x833a00	                      cmp dword [rdx], 0	      6880	ldlang.c	FUNCTION_153	IF_1
0x40069ec	     0xf8591000000	                           jne 0x4006a83	      6880	ldlang.c	FUNCTION_153	IF_1
0x40069f2	            0x4154	                                push r12	      6879	ldlang.c	FUNCTION_153
0x40069f4	              0x55	                                push rbp	      6879	ldlang.c	FUNCTION_153
0x40069f5	              0x53	                                push rbx	      6879	ldlang.c	FUNCTION_153
0x40069f6	          0x4889fb	                            mov rbx, rdi	      6879	ldlang.c	FUNCTION_153
0x40069f9	          0x4889f5	                            mov rbp, rsi	      6879	ldlang.c	FUNCTION_153
0x40069fc	          0x4989d4	                            mov r12, rdx	      6879	ldlang.c	FUNCTION_153
0x40069ff	          0x4885ff	                           test rdi, rdi	      6883	ldlang.c	FUNCTION_153	FOR_1
0x4006a02	            0x747b	                            je 0x4006a7f	      6883	ldlang.c	FUNCTION_153	FOR_1
0x4006a04	        0x483b7e48	            cmp rdi, qword [rsi + 0x48] 	      6885	ldlang.c	FUNCTION_153	FOR_1	IF_2
0x4006a08	            0x7508	                           jne 0x4006a12	      6885	ldlang.c	FUNCTION_153	FOR_1	IF_2
0x4006a0a	            0xeb73	                           jmp 0x4006a7f	      6885	ldlang.c	FUNCTION_153	FOR_1	IF_2
0x4006a0c	        0x48395d48	            cmp qword [rbp + 0x48], rbx 	      6885	ldlang.c	FUNCTION_153	FOR_1	IF_2
0x4006a10	            0x746d	                            je 0x4006a7f	      6885	ldlang.c	FUNCTION_153	FOR_1	IF_2
0x4006a12	          0x8b4308	                mov eax, dword [rbx + 8]	      6888	ldlang.c	FUNCTION_153	FOR_1	SWITCH_1
0x4006a15	          0x83f804	                              cmp eax, 4	      6888	ldlang.c	FUNCTION_153	FOR_1	SWITCH_1
0x4006a18	            0x7417	                            je 0x4006a31	      6888	ldlang.c	FUNCTION_153	FOR_1	SWITCH_1
0x4006a1a	          0x83f804	                              cmp eax, 4	      6888	ldlang.c	FUNCTION_153	FOR_1	SWITCH_1
0x4006a1d	            0x7706	                            ja 0x4006a25	      6888	ldlang.c	FUNCTION_153	FOR_1	SWITCH_1
0x4006a1f	            0x85c0	                           test eax, eax	      6888	ldlang.c	FUNCTION_153	FOR_1	SWITCH_1
0x4006a21	            0x7434	                            je 0x4006a57	      6888	ldlang.c	FUNCTION_153	FOR_1	SWITCH_1
0x4006a23	            0xeb52	                           jmp 0x4006a77	      6888	ldlang.c	FUNCTION_153	FOR_1	SWITCH_1
0x4006a25	          0x83f80d	                            cmp eax, 0xd	      6888	ldlang.c	FUNCTION_153	FOR_1	SWITCH_1
0x4006a28	            0x743e	                            je 0x4006a68	      6888	ldlang.c	FUNCTION_153	FOR_1	SWITCH_1
0x4006a2a	          0x83f80f	                            cmp eax, 0xf	      6888	ldlang.c	FUNCTION_153	FOR_1	SWITCH_1
0x4006a2d	            0x7414	                            je 0x4006a43	      6888	ldlang.c	FUNCTION_153	FOR_1	SWITCH_1
0x4006a2f	            0xeb46	                           jmp 0x4006a77	      6888	ldlang.c	FUNCTION_153	FOR_1	SWITCH_1
0x4006a31	          0x4c89e2	                            mov rdx, r12	      6891	ldlang.c	FUNCTION_153	FOR_1	SWITCH_1	CALL_1
0x4006a34	      0xbe00000000	                              mov esi, 0	      6891	ldlang.c	FUNCTION_153	FOR_1	SWITCH_1	CALL_1
0x4006a39	          0x4889df	                            mov rdi, rbx	      6891	ldlang.c	FUNCTION_153	FOR_1	SWITCH_1	CALL_1
0x4006a3c	      0xe8f7faffff	                      call sym.walk_wild	      6891	ldlang.c	FUNCTION_153	FOR_1	SWITCH_1	CALL_1
0x4006a41	            0xeb34	                           jmp 0x4006a77	      6894	ldlang.c	FUNCTION_153	FOR_1	SWITCH_1
0x4006a43	          0x4c89e2	                            mov rdx, r12	      6896	ldlang.c	FUNCTION_153	FOR_1	SWITCH_1	CALL_2
0x4006a46	          0x4889ee	                            mov rsi, rbp	      6896	ldlang.c	FUNCTION_153	FOR_1	SWITCH_1	CALL_2
0x4006a49	    0x488b3d000000	            mov rdi, qword [0x04006a50] 	      6896	ldlang.c	FUNCTION_153	FOR_1	SWITCH_1	CALL_2
0x4006a50	      0xe894ffffff	     call sym.lang_find_relro_sections_1	      6896	ldlang.c	FUNCTION_153	FOR_1	SWITCH_1	CALL_2
0x4006a55	            0xeb20	                           jmp 0x4006a77	      6898	ldlang.c	FUNCTION_153	FOR_1	SWITCH_1
0x4006a57	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      6900	ldlang.c	FUNCTION_153	FOR_1	SWITCH_1	CALL_3
0x4006a5b	          0x4c89e2	                            mov rdx, r12	      6900	ldlang.c	FUNCTION_153	FOR_1	SWITCH_1	CALL_3
0x4006a5e	          0x4889ee	                            mov rsi, rbp	      6900	ldlang.c	FUNCTION_153	FOR_1	SWITCH_1	CALL_3
0x4006a61	      0xe883ffffff	     call sym.lang_find_relro_sections_1	      6900	ldlang.c	FUNCTION_153	FOR_1	SWITCH_1	CALL_3
0x4006a66	            0xeb0f	                           jmp 0x4006a77	      6902	ldlang.c	FUNCTION_153	FOR_1	SWITCH_1
0x4006a68	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      6904	ldlang.c	FUNCTION_153	FOR_1	SWITCH_1	CALL_4
0x4006a6c	          0x4c89e2	                            mov rdx, r12	      6904	ldlang.c	FUNCTION_153	FOR_1	SWITCH_1	CALL_4
0x4006a6f	          0x4889ee	                            mov rsi, rbp	      6904	ldlang.c	FUNCTION_153	FOR_1	SWITCH_1	CALL_4
0x4006a72	      0xe872ffffff	     call sym.lang_find_relro_sections_1	      6904	ldlang.c	FUNCTION_153	FOR_1	SWITCH_1	CALL_4
0x4006a77	          0x488b1b	                    mov rbx, qword [rbx]	      6883	ldlang.c	FUNCTION_153	FOR_1
0x4006a7a	          0x4885db	                           test rbx, rbx	      6883	ldlang.c	FUNCTION_153	FOR_1
0x4006a7d	            0x758d	                           jne 0x4006a0c	      6883	ldlang.c	FUNCTION_153	FOR_1
0x4006a7f	              0x5b	                                 pop rbx	      6911	ldlang.c	FUNCTION_153
0x4006a80	              0x5d	                                 pop rbp	      6911	ldlang.c	FUNCTION_153
0x4006a81	            0x415c	                                 pop r12	      6911	ldlang.c	FUNCTION_153
0x4006a83	            0xf3c3	                                     ret	      6911	ldlang.c	FUNCTION_153
lang_add_input_file	IF,1:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,4:ELSE,0	53
0x40034d6	            0x4154	                                push r12	      1139	ldlang.c	FUNCTION_35
0x40034d8	              0x55	                                push rbp	      1139	ldlang.c	FUNCTION_35
0x40034d9	              0x53	                                push rbx	      1139	ldlang.c	FUNCTION_35
0x40034da	          0x4889f8	                            mov rax, rdi	      1139	ldlang.c	FUNCTION_35
0x40034dd	            0x89f5	                            mov ebp, esi	      1139	ldlang.c	FUNCTION_35
0x40034df	          0x4989d4	                            mov r12, rdx	      1139	ldlang.c	FUNCTION_35
0x40034e2	          0x4885ff	                           test rdi, rdi	      1140	ldlang.c	FUNCTION_35	IF_1
0x40034e5	     0xf8487000000	                            je 0x4003572	      1140	ldlang.c	FUNCTION_35	IF_1
0x40034eb	          0x803f3d	                    cmp byte [rdi], 0x3d	      1141	ldlang.c	FUNCTION_35	IF_1
0x40034ee	            0x7420	                            je 0x4003510	      1141	ldlang.c	FUNCTION_35	IF_1
0x40034f0	      0xbf00000000	                              mov edi, 0	      1141	ldlang.c	FUNCTION_35	IF_1
0x40034f5	      0xb908000000	                              mov ecx, 8	      1141	ldlang.c	FUNCTION_35	IF_1
0x40034fa	          0x4889c6	                            mov rsi, rax	      1141	ldlang.c	FUNCTION_35	IF_1
0x40034fd	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1141	ldlang.c	FUNCTION_35	IF_1
0x40034ff	           0xf97c1	                                 seta cl	      1141	ldlang.c	FUNCTION_35	IF_1
0x4003502	           0xf92c2	                                 setb dl	      1141	ldlang.c	FUNCTION_35	IF_1
0x4003505	      0xbe08000000	                              mov esi, 8	      1145	ldlang.c	FUNCTION_35	IF_1	CALL_1
0x400350a	            0x38d1	                              cmp cl, dl	      1141	ldlang.c	FUNCTION_35	IF_1
0x400350c	            0x7407	                            je 0x4003515	      1141	ldlang.c	FUNCTION_35	IF_1
0x400350e	            0xeb62	                           jmp 0x4003572	      1141	ldlang.c	FUNCTION_35	IF_1
0x4003510	      0xbe01000000	                              mov esi, 1	      1145	ldlang.c	FUNCTION_35	IF_1	CALL_1
0x4003515	          0x4801c6	                            add rsi, rax	      1144	ldlang.c	FUNCTION_35	IF_1
0x4003518	      0xba00000000	                              mov edx, 0	      1144	ldlang.c	FUNCTION_35	IF_1
0x400351d	    0x488b3d000000	            mov rdi, qword [0x04003524] 	      1144	ldlang.c	FUNCTION_35	IF_1
0x4003524	      0xb800000000	                              mov eax, 0	      1144	ldlang.c	FUNCTION_35	IF_1
0x4003529	      0xe800000000	                          call 0x400352e	      1144	ldlang.c	FUNCTION_35	IF_1
0x400352e	     0xfb615000000	           movzx edx, byte [0x04003535] 	      1156	ldlang.c	FUNCTION_35	IF_1
0x4003535	            0x89d3	                            mov ebx, edx	      1156	ldlang.c	FUNCTION_35	IF_1
0x4003537	          0xc0eb03	                               shr bl, 3	      1156	ldlang.c	FUNCTION_35	IF_1
0x400353a	          0x83e301	                              and ebx, 1	      1156	ldlang.c	FUNCTION_35	IF_1
0x400353d	          0x83e2f7	                     and edx, 0xfffffff7	      1157	ldlang.c	FUNCTION_35	IF_1
0x4003540	    0x881500000000	               mov byte [0x04003546], dl	      1157	ldlang.c	FUNCTION_35	IF_1
0x4003546	      0xb901000000	                              mov ecx, 1	      1158	ldlang.c	FUNCTION_35	IF_1	CALL_3
0x400354b	          0x4c89e2	                            mov rdx, r12	      1158	ldlang.c	FUNCTION_35	IF_1	CALL_3
0x400354e	            0x89ee	                            mov esi, ebp	      1158	ldlang.c	FUNCTION_35	IF_1	CALL_3
0x4003550	          0x4889c7	                            mov rdi, rax	      1158	ldlang.c	FUNCTION_35	IF_1	CALL_3
0x4003553	      0xe89ffcffff	                      call sym.new_afile	      1158	ldlang.c	FUNCTION_35	IF_1	CALL_3
0x4003558	          0x83e301	                              and ebx, 1	      1159	ldlang.c	FUNCTION_35	IF_1
0x400355b	          0xc1e303	                              shl ebx, 3	      1159	ldlang.c	FUNCTION_35	IF_1
0x400355e	     0xfb615000000	           movzx edx, byte [0x04003565] 	      1159	ldlang.c	FUNCTION_35	IF_1
0x4003565	          0x83e2f7	                     and edx, 0xfffffff7	      1159	ldlang.c	FUNCTION_35	IF_1
0x4003568	             0x9d3	                             or ebx, edx	      1159	ldlang.c	FUNCTION_35	IF_1
0x400356a	    0x881d00000000	               mov byte [0x04003570], bl	      1159	ldlang.c	FUNCTION_35	IF_1
0x4003570	            0xeb12	                           jmp 0x4003584	      1160	ldlang.c	FUNCTION_35	IF_1
0x4003572	      0xb901000000	                              mov ecx, 1	      1163	ldlang.c	FUNCTION_35	CALL_4
0x4003577	          0x4c89e2	                            mov rdx, r12	      1163	ldlang.c	FUNCTION_35	CALL_4
0x400357a	            0x89ee	                            mov esi, ebp	      1163	ldlang.c	FUNCTION_35	CALL_4
0x400357c	          0x4889c7	                            mov rdi, rax	      1163	ldlang.c	FUNCTION_35	CALL_4
0x400357f	      0xe873fcffff	                      call sym.new_afile	      1163	ldlang.c	FUNCTION_35	CALL_4
0x4003584	              0x5b	                                 pop rbx	      1164	ldlang.c	FUNCTION_35
0x4003585	              0x5d	                                 pop rbp	      1164	ldlang.c	FUNCTION_35
0x4003586	            0x415c	                                 pop r12	      1164	ldlang.c	FUNCTION_35
0x4003588	              0xc3	                                     ret	      1164	ldlang.c	FUNCTION_35
lang_add_fill	IF,0:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,0:ELSE,0	9
0x4007a00	              0x53	                                push rbx	      7537	ldlang.c	FUNCTION_170
0x4007a01	          0x4889fb	                            mov rbx, rdi	      7537	ldlang.c	FUNCTION_170
0x4007a04	    0x488b15000000	            mov rdx, qword [0x04007a0b] 	      7540	ldlang.c	FUNCTION_170
0x4007a0b	      0xbe28000000	                           mov esi, 0x28	      7540	ldlang.c	FUNCTION_170
0x4007a10	      0xbf07000000	                              mov edi, 7	      7540	ldlang.c	FUNCTION_170
0x4007a15	      0xe8aeb7ffff	                  call sym.new_statement	      7540	ldlang.c	FUNCTION_170
0x4007a1a	        0x48895810	             mov qword [rax + 0x10], rbx	      7541	ldlang.c	FUNCTION_170
0x4007a1e	              0x5b	                                 pop rbx	      7542	ldlang.c	FUNCTION_170
0x4007a1f	              0xc3	                                     ret	      7542	ldlang.c	FUNCTION_170
next_matching_output_section_statement	IF,1:WHILE,0:FOR,0:DO,1:SWITCH,0:functions,0:CALL,1:ELSE,0	33
0x4004925	            0x4154	                                push r12	      1496	ldlang.c	FUNCTION_46
0x4004927	              0x55	                                push rbp	      1496	ldlang.c	FUNCTION_46
0x4004928	              0x53	                                push rbx	      1496	ldlang.c	FUNCTION_46
0x4004929	            0x89f5	                            mov ebp, esi	      1496	ldlang.c	FUNCTION_46
0x400492b	        0x488d5fe8	                   lea rbx, [rdi - 0x18]	      1499	ldlang.c	FUNCTION_46
0x400492f	        0x4c8b6730	            mov r12, qword [rdi + 0x30] 	      1502	ldlang.c	FUNCTION_46
0x4004933	        0x4c3b67f0	             cmp r12, qword [rdi - 0x10]	      1504	ldlang.c	FUNCTION_46	CALL_1
0x4004937	            0x740f	                            je 0x4004948	      1504	ldlang.c	FUNCTION_46	CALL_1
0x4004939	      0xbee0050000	                          mov esi, 0x5e0	      1504	ldlang.c	FUNCTION_46	CALL_1
0x400493e	      0xbf00000000	                              mov edi, 0	      1504	ldlang.c	FUNCTION_46	CALL_1
0x4004943	      0xe800000000	                          call 0x4004948	      1504	ldlang.c	FUNCTION_46	CALL_1
0x4004948	          0x488b1b	                    mov rbx, qword [rbx]	      1507	ldlang.c	FUNCTION_46	DO_1
0x400494b	          0x4885db	                           test rbx, rbx	      1508	ldlang.c	FUNCTION_46	DO_1	IF_1
0x400494e	            0x7421	                            je 0x4004971	      1508	ldlang.c	FUNCTION_46	DO_1	IF_1
0x4004950	        0x4c3b6348	            cmp r12, qword [rbx + 0x48] 	      1509	ldlang.c	FUNCTION_46	DO_1	IF_1
0x4004954	            0x7522	                           jne 0x4004978	      1509	ldlang.c	FUNCTION_46	DO_1	IF_1
0x4004956	    0x8b839c000000	            mov eax, dword [rbx + 0x9c] 	      1512	ldlang.c	FUNCTION_46
0x400495c	            0x39e8	                            cmp eax, ebp	      1514	ldlang.c	FUNCTION_46
0x400495e	            0x740b	                            je 0x400496b	      1514	ldlang.c	FUNCTION_46
0x4004960	          0xc1e81f	                           shr eax, 0x1f	      1514	ldlang.c	FUNCTION_46
0x4004963	            0x84c0	                             test al, al	      1514	ldlang.c	FUNCTION_46
0x4004965	            0x75e1	                           jne 0x4004948	      1514	ldlang.c	FUNCTION_46
0x4004967	            0x85ed	                           test ebp, ebp	      1514	ldlang.c	FUNCTION_46
0x4004969	            0x75dd	                           jne 0x4004948	      1514	ldlang.c	FUNCTION_46
0x400496b	        0x488d4318	                   lea rax, [rbx + 0x18]	      1516	ldlang.c	FUNCTION_46
0x400496f	            0xeb0c	                           jmp 0x400497d	      1516	ldlang.c	FUNCTION_46
0x4004971	      0xb800000000	                              mov eax, 0	      1510	ldlang.c	FUNCTION_46	DO_1	IF_1
0x4004976	            0xeb05	                           jmp 0x400497d	      1510	ldlang.c	FUNCTION_46	DO_1	IF_1
0x4004978	      0xb800000000	                              mov eax, 0	      1510	ldlang.c	FUNCTION_46	DO_1	IF_1
0x400497d	              0x5b	                                 pop rbx	      1517	ldlang.c	FUNCTION_46
0x400497e	              0x5d	                                 pop rbp	      1517	ldlang.c	FUNCTION_46
0x400497f	            0x415c	                                 pop r12	      1517	ldlang.c	FUNCTION_46
0x4004981	              0xc3	                                     ret	      1517	ldlang.c	FUNCTION_46
lang_do_assignments	IF,0:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,1:ELSE,0	21
0x4005c0f	        0x4883ec18	                           sub rsp, 0x18	      5915	ldlang.c	FUNCTION_123
0x4005c13	    0x64488b042528	                mov rax, qword fs:[0x28]	      5915	ldlang.c	FUNCTION_123
0x4005c1c	      0x4889442408	                mov qword [rsp + 8], rax	      5915	ldlang.c	FUNCTION_123
0x4005c21	            0x31c0	                            xor eax, eax	      5915	ldlang.c	FUNCTION_123
0x4005c23	    0xc74424040000	                  mov dword [rsp + 4], 0	      5916	ldlang.c	FUNCTION_123
0x4005c2b	    0x48c705000000	               mov qword [0x04005c36], 0	      5918	ldlang.c	FUNCTION_123
0x4005c36	    0xc70500000000	               mov dword [0x04005c40], 0	      5919	ldlang.c	FUNCTION_123
0x4005c40	    0x893d00000000	            mov dword [0x04005c46], edi 	      5920	ldlang.c	FUNCTION_123
0x4005c46	    0x830500000000	               add dword [0x04005c4d], 1	      5921	ldlang.c	FUNCTION_123
0x4005c4d	      0x4c8d442404	                       lea r8, [rsp + 4]	      5922	ldlang.c	FUNCTION_123	CALL_1
0x4005c52	      0xb900000000	                              mov ecx, 0	      5922	ldlang.c	FUNCTION_123	CALL_1
0x4005c57	      0xba00000000	                              mov edx, 0	      5922	ldlang.c	FUNCTION_123	CALL_1
0x4005c5c	    0x488b35000000	            mov rsi, qword [0x04005c63] 	      5922	ldlang.c	FUNCTION_123	CALL_1
0x4005c63	    0x488b3d000000	            mov rdi, qword [0x04005c6a] 	      5922	ldlang.c	FUNCTION_123	CALL_1
0x4005c6a	      0xe803aeffff	          call sym.lang_do_assignments_1	      5922	ldlang.c	FUNCTION_123	CALL_1
0x4005c6f	      0x488b442408	                mov rax, qword [rsp + 8]	      5924	ldlang.c	FUNCTION_123
0x4005c74	    0x644833042528	                xor rax, qword fs:[0x28]	      5924	ldlang.c	FUNCTION_123
0x4005c7d	            0x7405	                            je 0x4005c84	      5924	ldlang.c	FUNCTION_123
0x4005c7f	      0xe800000000	                          call 0x4005c84	      5924	ldlang.c	FUNCTION_123
0x4005c84	        0x4883c418	                           add rsp, 0x18	      5924	ldlang.c	FUNCTION_123
0x4005c88	              0xc3	                                     ret	      5924	ldlang.c	FUNCTION_123
lang_section_start	IF,0:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,0:ELSE,0	17
0x400796e	            0x4154	                                push r12	      7475	ldlang.c	FUNCTION_165
0x4007970	              0x55	                                push rbp	      7475	ldlang.c	FUNCTION_165
0x4007971	              0x53	                                push rbx	      7475	ldlang.c	FUNCTION_165
0x4007972	          0x4989fc	                            mov r12, rdi	      7475	ldlang.c	FUNCTION_165
0x4007975	          0x4889f5	                            mov rbp, rsi	      7475	ldlang.c	FUNCTION_165
0x4007978	          0x4889d3	                            mov rbx, rdx	      7475	ldlang.c	FUNCTION_165
0x400797b	    0x488b15000000	            mov rdx, qword [0x04007982] 	      7478	ldlang.c	FUNCTION_165
0x4007982	      0xbe28000000	                           mov esi, 0x28	      7478	ldlang.c	FUNCTION_165
0x4007987	      0xbf03000000	                              mov edi, 3	      7478	ldlang.c	FUNCTION_165
0x400798c	      0xe837b8ffff	                  call sym.new_statement	      7478	ldlang.c	FUNCTION_165
0x4007991	        0x4c896010	             mov qword [rax + 0x10], r12	      7479	ldlang.c	FUNCTION_165
0x4007995	        0x48896818	             mov qword [rax + 0x18], rbp	      7480	ldlang.c	FUNCTION_165
0x4007999	        0x48895820	             mov qword [rax + 0x20], rbx	      7481	ldlang.c	FUNCTION_165
0x400799d	              0x5b	                                 pop rbx	      7482	ldlang.c	FUNCTION_165
0x400799e	              0x5d	                                 pop rbp	      7482	ldlang.c	FUNCTION_165
0x400799f	            0x415c	                                 pop r12	      7482	ldlang.c	FUNCTION_165
0x40079a1	              0xc3	                                     ret	      7482	ldlang.c	FUNCTION_165
set_start_stop	IF,4:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,0:ELSE,1	33
0x400031b	         0xfb74718	           movzx eax, word [rdi + 0x18] 	      6133	ldlang.c	FUNCTION_131	IF_1
0x400031f	        0x6625ff08	                           and ax, 0x8ff	      6133	ldlang.c	FUNCTION_131	IF_1
0x4000323	        0x6683f803	                               cmp ax, 3	      6133	ldlang.c	FUNCTION_131	IF_1
0x4000327	            0x756a	                           jne 0x4000393	      6133	ldlang.c	FUNCTION_131	IF_1
0x4000329	        0x488b5708	                mov rdx, qword [rdi + 8]	      6137	ldlang.c	FUNCTION_131	IF_2
0x400032d	          0x803a2e	                    cmp byte [rdx], 0x2e	      6137	ldlang.c	FUNCTION_131	IF_2
0x4000330	            0x7524	                           jne 0x4000356	      6137	ldlang.c	FUNCTION_131	IF_2
0x4000332	        0x807a0269	                cmp byte [rdx + 2], 0x69	      6141	ldlang.c	FUNCTION_131	IF_2	IF_3
0x4000336	            0x755b	                           jne 0x4000393	      6141	ldlang.c	FUNCTION_131	IF_2	IF_3
0x4000338	        0x488b4728	            mov rax, qword [rdi + 0x28] 	      6144	ldlang.c	FUNCTION_131	IF_2	IF_3
0x400033c	        0x488b4038	            mov rax, qword [rax + 0x38] 	      6144	ldlang.c	FUNCTION_131	IF_2	IF_3
0x4000340	    0x8b0d00000000	            mov ecx, dword [0x04000346] 	      6144	ldlang.c	FUNCTION_131	IF_2	IF_3
0x4000346	          0x48d3e8	                             shr rax, cl	      6144	ldlang.c	FUNCTION_131	IF_2	IF_3
0x4000349	        0x48894730	             mov qword [rdi + 0x30], rax	      6144	ldlang.c	FUNCTION_131	IF_2	IF_3
0x400034d	    0x48c747280000	               mov qword [rdi + 0x28], 0	      6145	ldlang.c	FUNCTION_131	IF_2	IF_3
0x4000355	              0xc3	                                     ret	      6145	ldlang.c	FUNCTION_131	IF_2	IF_3
0x4000356	    0x488b05000000	            mov rax, qword [0x0400035d] 	      6151	ldlang.c	FUNCTION_131	ELSE_1
0x400035d	        0x488b4008	                mov rax, qword [rax + 8]	      6151	ldlang.c	FUNCTION_131	ELSE_1
0x4000361	        0x80781c00	                cmp byte [rax + 0x1c], 0	      6151	ldlang.c	FUNCTION_131	ELSE_1
0x4000365	           0xf95c0	                                setne al	      6151	ldlang.c	FUNCTION_131	ELSE_1
0x4000368	           0xfb6c0	                           movzx eax, al	      6151	ldlang.c	FUNCTION_131	ELSE_1
0x400036b	        0x488b4f28	            mov rcx, qword [rdi + 0x28] 	      6153	ldlang.c	FUNCTION_131	ELSE_1
0x400036f	        0x488b4968	            mov rcx, qword [rcx + 0x68] 	      6153	ldlang.c	FUNCTION_131	ELSE_1
0x4000373	        0x48894f28	             mov qword [rdi + 0x28], rcx	      6153	ldlang.c	FUNCTION_131	ELSE_1
0x4000377	          0x83c004	                              add eax, 4	      6154	ldlang.c	FUNCTION_131	ELSE_1	IF_4
0x400037a	            0x4898	                                    cdqe	      6154	ldlang.c	FUNCTION_131	ELSE_1	IF_4
0x400037c	        0x803c026f	              cmp byte [rdx + rax], 0x6f	      6154	ldlang.c	FUNCTION_131	ELSE_1	IF_4
0x4000380	            0x7511	                           jne 0x4000393	      6154	ldlang.c	FUNCTION_131	ELSE_1	IF_4
0x4000382	        0x488b4138	            mov rax, qword [rcx + 0x38] 	      6157	ldlang.c	FUNCTION_131	ELSE_1	IF_4
0x4000386	    0x8b0d00000000	            mov ecx, dword [0x0400038c] 	      6157	ldlang.c	FUNCTION_131	ELSE_1	IF_4
0x400038c	          0x48d3e8	                             shr rax, cl	      6157	ldlang.c	FUNCTION_131	ELSE_1	IF_4
0x400038f	        0x48894730	             mov qword [rdi + 0x30], rax	      6157	ldlang.c	FUNCTION_131	ELSE_1	IF_4
0x4000393	            0xf3c3	                                     ret	      6157	ldlang.c	FUNCTION_131	ELSE_1	IF_4
walk_wild	IF,4:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,3:CALL,3:ELSE,3	107
0x4006538	            0x4157	                                push r15	       909	ldlang.c	FUNCTION_27
0x400653a	            0x4156	                                push r14	       909	ldlang.c	FUNCTION_27
0x400653c	            0x4155	                                push r13	       909	ldlang.c	FUNCTION_27
0x400653e	            0x4154	                                push r12	       909	ldlang.c	FUNCTION_27
0x4006540	              0x55	                                push rbp	       909	ldlang.c	FUNCTION_27
0x4006541	              0x53	                                push rbx	       909	ldlang.c	FUNCTION_27
0x4006542	        0x4883ec08	                              sub rsp, 8	       909	ldlang.c	FUNCTION_27
0x4006546	          0x4989fc	                            mov r12, rdi	       909	ldlang.c	FUNCTION_27
0x4006549	          0x4989f5	                            mov r13, rsi	       909	ldlang.c	FUNCTION_27
0x400654c	          0x4989d6	                            mov r14, rdx	       909	ldlang.c	FUNCTION_27
0x400654f	        0x488b6f10	            mov rbp, qword [rdi + 0x10] 	       910	ldlang.c	FUNCTION_27
0x4006553	          0x4885ed	                           test rbp, rbp	       913	ldlang.c	FUNCTION_27	IF_1
0x4006556	            0x752f	                           jne 0x4006587	       913	ldlang.c	FUNCTION_27	IF_1
0x4006558	    0x488b1d000000	            mov rbx, qword [0x0400655f] 	       916	ldlang.c	FUNCTION_27	IF_1
0x400655f	          0x4885db	                           test rbx, rbx	       916	ldlang.c	FUNCTION_27	IF_1
0x4006562	     0xf841d010000	                            je 0x4006685	       916	ldlang.c	FUNCTION_27	IF_1
0x4006568	          0x4c89f1	                            mov rcx, r14	       918	ldlang.c	FUNCTION_27	IF_1	FUNCTION_1	CALL_1
0x400656b	          0x4c89ea	                            mov rdx, r13	       918	ldlang.c	FUNCTION_27	IF_1	FUNCTION_1	CALL_1
0x400656e	          0x4889de	                            mov rsi, rbx	       918	ldlang.c	FUNCTION_27	IF_1	FUNCTION_1	CALL_1
0x4006571	          0x4c89e7	                            mov rdi, r12	       918	ldlang.c	FUNCTION_27	IF_1	FUNCTION_1	CALL_1
0x4006574	      0xe848c9ffff	                 call sym.walk_wild_file	       918	ldlang.c	FUNCTION_27	IF_1	FUNCTION_1	CALL_1
0x4006579	        0x488b5b30	            mov rbx, qword [rbx + 0x30] 	       916	ldlang.c	FUNCTION_27	IF_1
0x400657d	          0x4885db	                           test rbx, rbx	       916	ldlang.c	FUNCTION_27	IF_1
0x4006580	            0x75e6	                           jne 0x4006568	       916	ldlang.c	FUNCTION_27	IF_1
0x4006582	      0xe9fe000000	                           jmp 0x4006685	       916	ldlang.c	FUNCTION_27	IF_1
0x4006587	          0x4889ef	                            mov rdi, rbp	       921	ldlang.c	FUNCTION_27	ELSE_1	IF_2	CALL_1
0x400658a	      0xe80cb5ffff	                   call sym.archive_path	       921	ldlang.c	FUNCTION_27	ELSE_1	IF_2	CALL_1
0x400658f	          0x4989c7	                            mov r15, rax	       921	ldlang.c	FUNCTION_27	ELSE_1	IF_2	CALL_1
0x4006592	          0x4885c0	                           test rax, rax	       921	ldlang.c	FUNCTION_27	ELSE_1	IF_2	CALL_1
0x4006595	            0x7528	                           jne 0x40065bf	       921	ldlang.c	FUNCTION_27	ELSE_1	IF_2	CALL_1
0x4006597	         0xfb64500	                   movzx eax, byte [rbp]	      1114	string2.h	FUNCTION_240	WHILE_1
0x400659b	            0x84c0	                             test al, al	      1114	string2.h	FUNCTION_240	WHILE_1
0x400659d	     0xf84c4000000	                            je 0x4006667	      1114	string2.h	FUNCTION_240	WHILE_1
0x40065a3	          0x83e82a	                           sub eax, 0x2a	      1114	string2.h	FUNCTION_240	WHILE_1
0x40065a6	            0x3c31	                            cmp al, 0x31	      1114	string2.h	FUNCTION_240	WHILE_1
0x40065a8	            0x7756	                            ja 0x4006600	      1114	string2.h	FUNCTION_240	WHILE_1
0x40065aa	          0x4889ea	                            mov rdx, rbp	      1115	string2.h	FUNCTION_240	WHILE_1
0x40065ad	    0x48b901002000	             movabs rcx, 0x2000000200001	      1115	string2.h	FUNCTION_240	WHILE_1
0x40065b7	        0x480fa3c1	                             bt rcx, rax	      1115	string2.h	FUNCTION_240	WHILE_1
0x40065bb	            0x7346	                           jae 0x4006603	      1115	string2.h	FUNCTION_240	WHILE_1
0x40065bd	            0xeb6b	                           jmp 0x400662a	      1115	string2.h	FUNCTION_240	WHILE_1
0x40065bf	    0x488b1d000000	            mov rbx, qword [0x040065c6] 	       923	ldlang.c	FUNCTION_27	ELSE_1	IF_2
0x40065c6	          0x4885db	                           test rbx, rbx	       923	ldlang.c	FUNCTION_27	ELSE_1	IF_2
0x40065c9	     0xf84b6000000	                            je 0x4006685	       923	ldlang.c	FUNCTION_27	ELSE_1	IF_2
0x40065cf	          0x4889da	                            mov rdx, rbx	       925	ldlang.c	FUNCTION_27	ELSE_1	IF_2	FUNCTION_2	IF_1	CALL_1
0x40065d2	          0x4c89fe	                            mov rsi, r15	       925	ldlang.c	FUNCTION_27	ELSE_1	IF_2	FUNCTION_2	IF_1	CALL_1
0x40065d5	          0x4889ef	                            mov rdi, rbp	       925	ldlang.c	FUNCTION_27	ELSE_1	IF_2	FUNCTION_2	IF_1	CALL_1
0x40065d8	      0xe83fb8ffff	call sym.input_statement_is_archive_path	       925	ldlang.c	FUNCTION_27	ELSE_1	IF_2	FUNCTION_2	IF_1	CALL_1
0x40065dd	            0x85c0	                           test eax, eax	       925	ldlang.c	FUNCTION_27	ELSE_1	IF_2	FUNCTION_2	IF_1	CALL_1
0x40065df	            0x7411	                            je 0x40065f2	       925	ldlang.c	FUNCTION_27	ELSE_1	IF_2	FUNCTION_2	IF_1	CALL_1
0x40065e1	          0x4c89f1	                            mov rcx, r14	       926	ldlang.c	FUNCTION_27	ELSE_1	IF_2	FUNCTION_2	CALL_2
0x40065e4	          0x4c89ea	                            mov rdx, r13	       926	ldlang.c	FUNCTION_27	ELSE_1	IF_2	FUNCTION_2	CALL_2
0x40065e7	          0x4889de	                            mov rsi, rbx	       926	ldlang.c	FUNCTION_27	ELSE_1	IF_2	FUNCTION_2	CALL_2
0x40065ea	          0x4c89e7	                            mov rdi, r12	       926	ldlang.c	FUNCTION_27	ELSE_1	IF_2	FUNCTION_2	CALL_2
0x40065ed	      0xe8cfc8ffff	                 call sym.walk_wild_file	       926	ldlang.c	FUNCTION_27	ELSE_1	IF_2	FUNCTION_2	CALL_2
0x40065f2	        0x488b5b30	            mov rbx, qword [rbx + 0x30] 	       923	ldlang.c	FUNCTION_27	ELSE_1	IF_2
0x40065f6	          0x4885db	                           test rbx, rbx	       923	ldlang.c	FUNCTION_27	ELSE_1	IF_2
0x40065f9	            0x75d4	                           jne 0x40065cf	       923	ldlang.c	FUNCTION_27	ELSE_1	IF_2
0x40065fb	      0xe985000000	                           jmp 0x4006685	       923	ldlang.c	FUNCTION_27	ELSE_1	IF_2
0x4006600	          0x4889ea	                            mov rdx, rbp	      1114	string2.h	FUNCTION_240	WHILE_1
0x4006603	    0x48b901002000	             movabs rcx, 0x2000000200001	      1115	string2.h	FUNCTION_240	WHILE_1
0x400660d	        0x4883c201	                              add rdx, 1	      1116	string2.h	FUNCTION_240	WHILE_1
0x4006611	           0xfb602	                   movzx eax, byte [rdx]	      1114	string2.h	FUNCTION_240	WHILE_1
0x4006614	            0x84c0	                             test al, al	      1114	string2.h	FUNCTION_240	WHILE_1
0x4006616	            0x744f	                            je 0x4006667	      1114	string2.h	FUNCTION_240	WHILE_1
0x4006618	          0x83e82a	                           sub eax, 0x2a	      1114	string2.h	FUNCTION_240	WHILE_1
0x400661b	            0x3c31	                            cmp al, 0x31	      1114	string2.h	FUNCTION_240	WHILE_1
0x400661d	            0x77ee	                            ja 0x400660d	      1114	string2.h	FUNCTION_240	WHILE_1
0x400661f	        0x480fa3c1	                             bt rcx, rax	      1115	string2.h	FUNCTION_240	WHILE_1
0x4006623	            0x73e8	                           jae 0x400660d	      1115	string2.h	FUNCTION_240	WHILE_1
0x4006625	          0x4885d2	                           test rdx, rdx	       929	ldlang.c	FUNCTION_27	ELSE_2	IF_3
0x4006628	            0x743d	                            je 0x4006667	       929	ldlang.c	FUNCTION_27	ELSE_2	IF_3
0x400662a	    0x488b1d000000	            mov rbx, qword [0x04006631] 	       931	ldlang.c	FUNCTION_27	ELSE_2	IF_3
0x4006631	          0x4885db	                           test rbx, rbx	       931	ldlang.c	FUNCTION_27	ELSE_2	IF_3
0x4006634	            0x744f	                            je 0x4006685	       931	ldlang.c	FUNCTION_27	ELSE_2	IF_3
0x4006636	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	       933	ldlang.c	FUNCTION_27	ELSE_2	IF_3	FUNCTION_3	IF_1	CALL_1
0x400663a	      0xba00000000	                              mov edx, 0	       933	ldlang.c	FUNCTION_27	ELSE_2	IF_3	FUNCTION_3	IF_1	CALL_1
0x400663f	          0x4889ef	                            mov rdi, rbp	       933	ldlang.c	FUNCTION_27	ELSE_2	IF_3	FUNCTION_3	IF_1	CALL_1
0x4006642	      0xe800000000	                          call 0x4006647	       933	ldlang.c	FUNCTION_27	ELSE_2	IF_3	FUNCTION_3	IF_1	CALL_1
0x4006647	            0x85c0	                           test eax, eax	       933	ldlang.c	FUNCTION_27	ELSE_2	IF_3	FUNCTION_3	IF_1	CALL_1
0x4006649	            0x7511	                           jne 0x400665c	       933	ldlang.c	FUNCTION_27	ELSE_2	IF_3	FUNCTION_3	IF_1	CALL_1
0x400664b	          0x4c89f1	                            mov rcx, r14	       934	ldlang.c	FUNCTION_27	ELSE_2	IF_3	FUNCTION_3	CALL_2
0x400664e	          0x4c89ea	                            mov rdx, r13	       934	ldlang.c	FUNCTION_27	ELSE_2	IF_3	FUNCTION_3	CALL_2
0x4006651	          0x4889de	                            mov rsi, rbx	       934	ldlang.c	FUNCTION_27	ELSE_2	IF_3	FUNCTION_3	CALL_2
0x4006654	          0x4c89e7	                            mov rdi, r12	       934	ldlang.c	FUNCTION_27	ELSE_2	IF_3	FUNCTION_3	CALL_2
0x4006657	      0xe865c8ffff	                 call sym.walk_wild_file	       934	ldlang.c	FUNCTION_27	ELSE_2	IF_3	FUNCTION_3	CALL_2
0x400665c	        0x488b5b30	            mov rbx, qword [rbx + 0x30] 	       931	ldlang.c	FUNCTION_27	ELSE_2	IF_3
0x4006660	          0x4885db	                           test rbx, rbx	       931	ldlang.c	FUNCTION_27	ELSE_2	IF_3
0x4006663	            0x75d1	                           jne 0x4006636	       931	ldlang.c	FUNCTION_27	ELSE_2	IF_3
0x4006665	            0xeb1e	                           jmp 0x4006685	       931	ldlang.c	FUNCTION_27	ELSE_2	IF_3
0x4006667	          0x4889ef	                            mov rdi, rbp	       942	ldlang.c	FUNCTION_27	ELSE_3	CALL_2
0x400666a	      0xe845feffff	                    call sym.lookup_name	       942	ldlang.c	FUNCTION_27	ELSE_3	CALL_2
0x400666f	          0x4885c0	                           test rax, rax	       943	ldlang.c	FUNCTION_27	ELSE_3	IF_4
0x4006672	            0x7411	                            je 0x4006685	       943	ldlang.c	FUNCTION_27	ELSE_3	IF_4
0x4006674	          0x4c89f1	                            mov rcx, r14	       944	ldlang.c	FUNCTION_27	ELSE_3	CALL_3
0x4006677	          0x4c89ea	                            mov rdx, r13	       944	ldlang.c	FUNCTION_27	ELSE_3	CALL_3
0x400667a	          0x4889c6	                            mov rsi, rax	       944	ldlang.c	FUNCTION_27	ELSE_3	CALL_3
0x400667d	          0x4c89e7	                            mov rdi, r12	       944	ldlang.c	FUNCTION_27	ELSE_3	CALL_3
0x4006680	      0xe83cc8ffff	                 call sym.walk_wild_file	       944	ldlang.c	FUNCTION_27	ELSE_3	CALL_3
0x4006685	        0x4883c408	                              add rsp, 8	       946	ldlang.c	FUNCTION_27
0x4006689	              0x5b	                                 pop rbx	       946	ldlang.c	FUNCTION_27
0x400668a	              0x5d	                                 pop rbp	       946	ldlang.c	FUNCTION_27
0x400668b	            0x415c	                                 pop r12	       946	ldlang.c	FUNCTION_27
0x400668d	            0x415d	                                 pop r13	       946	ldlang.c	FUNCTION_27
0x400668f	            0x415e	                                 pop r14	       946	ldlang.c	FUNCTION_27
0x4006691	            0x415f	                                 pop r15	       946	ldlang.c	FUNCTION_27
0x4006693	              0xc3	                                     ret	       946	ldlang.c	FUNCTION_27
lang_define_start_stop	IF,2:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,1:ELSE,0	27
0x4001ac1	              0x53	                                push rbx	      6012	ldlang.c	FUNCTION_125
0x4001ac2	          0x4889f2	                            mov rdx, rsi	      6012	ldlang.c	FUNCTION_125
0x4001ac5	    0x488b05000000	            mov rax, qword [0x04001acc] 	      6015	ldlang.c	FUNCTION_125
0x4001acc	        0x488b4008	                mov rax, qword [rax + 8]	      6015	ldlang.c	FUNCTION_125
0x4001ad0	          0x4889fe	                            mov rsi, rdi	      6015	ldlang.c	FUNCTION_125
0x4001ad3	      0xbf00000000	                              mov edi, 0	      6015	ldlang.c	FUNCTION_125
0x4001ad8	    0xff9030030000	                call qword [rax + 0x330]	      6015	ldlang.c	FUNCTION_125
0x4001ade	          0x4885c0	                           test rax, rax	      6016	ldlang.c	FUNCTION_125	IF_1
0x4001ae1	            0x7456	                            je 0x4001b39	      6016	ldlang.c	FUNCTION_125	IF_1
0x4001ae3	          0x4889c3	                            mov rbx, rax	      6016	ldlang.c	FUNCTION_125	IF_1
0x4001ae6	    0x488b35000000	            mov rsi, qword [0x04001aed] 	      6018	ldlang.c	FUNCTION_125	IF_1	IF_2
0x4001aed	    0x483b35000000	            cmp rsi, qword [0x04001af4] 	      6018	ldlang.c	FUNCTION_125	IF_1	IF_2
0x4001af4	            0x7526	                           jne 0x4001b1c	      6018	ldlang.c	FUNCTION_125	IF_1	IF_2
0x4001af6	        0x4883c605	                              add rsi, 5	      6020	ldlang.c	FUNCTION_125	IF_1	IF_2
0x4001afa	        0x488d0436	                    lea rax, [rsi + rsi]	      6020	ldlang.c	FUNCTION_125	IF_1	IF_2
0x4001afe	    0x488905000000	            mov qword [0x04001b05], rax 	      6020	ldlang.c	FUNCTION_125	IF_1	IF_2
0x4001b05	        0x48c1e604	                              shl rsi, 4	      6022	ldlang.c	FUNCTION_125	IF_1	IF_2	CALL_1
0x4001b09	    0x488b3d000000	            mov rdi, qword [0x04001b10] 	      6022	ldlang.c	FUNCTION_125	IF_1	IF_2	CALL_1
0x4001b10	      0xe800000000	                          call 0x4001b15	      6022	ldlang.c	FUNCTION_125	IF_1	IF_2	CALL_1
0x4001b15	    0x488905000000	            mov qword [0x04001b1c], rax 	      6022	ldlang.c	FUNCTION_125	IF_1	IF_2	CALL_1
0x4001b1c	    0x488b05000000	            mov rax, qword [0x04001b23] 	      6025	ldlang.c	FUNCTION_125	IF_1
0x4001b23	        0x488d5001	                      lea rdx, [rax + 1]	      6025	ldlang.c	FUNCTION_125	IF_1
0x4001b27	    0x488915000000	            mov qword [0x04001b2e], rdx 	      6025	ldlang.c	FUNCTION_125	IF_1
0x4001b2e	    0x488b15000000	            mov rdx, qword [0x04001b35] 	      6025	ldlang.c	FUNCTION_125	IF_1
0x4001b35	        0x48891cc2	            mov qword [rdx + rax*8], rbx	      6025	ldlang.c	FUNCTION_125	IF_1
0x4001b39	              0x5b	                                 pop rbx	      6027	ldlang.c	FUNCTION_125
0x4001b3a	              0xc3	                                     ret	      6027	ldlang.c	FUNCTION_125
name_match	IF,1:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,1:ELSE,0	35
0x4001dac	        0x4883ec08	                              sub rsp, 8	       145	ldlang.c	FUNCTION_2
0x4001db0	           0xfb607	                   movzx eax, byte [rdi]	      1114	string2.h	FUNCTION_240	WHILE_1
0x4001db3	            0x84c0	                             test al, al	      1114	string2.h	FUNCTION_240	WHILE_1
0x4001db5	            0x744f	                            je 0x4001e06	      1114	string2.h	FUNCTION_240	WHILE_1
0x4001db7	          0x83e82a	                           sub eax, 0x2a	      1114	string2.h	FUNCTION_240	WHILE_1
0x4001dba	            0x3c31	                            cmp al, 0x31	      1114	string2.h	FUNCTION_240	WHILE_1
0x4001dbc	            0x7715	                            ja 0x4001dd3	      1114	string2.h	FUNCTION_240	WHILE_1
0x4001dbe	    0x48ba01002000	             movabs rdx, 0x2000000200001	      1115	string2.h	FUNCTION_240	WHILE_1
0x4001dc8	        0x480fa3c2	                             bt rdx, rax	      1115	string2.h	FUNCTION_240	WHILE_1
0x4001dcc	            0x723f	                            jb 0x4001e0d	      1115	string2.h	FUNCTION_240	WHILE_1
0x4001dce	          0x4889fa	                            mov rdx, rdi	      1115	string2.h	FUNCTION_240	WHILE_1
0x4001dd1	            0xeb03	                           jmp 0x4001dd6	      1115	string2.h	FUNCTION_240	WHILE_1
0x4001dd3	          0x4889fa	                            mov rdx, rdi	      1114	string2.h	FUNCTION_240	WHILE_1
0x4001dd6	    0x48b901002000	             movabs rcx, 0x2000000200001	      1115	string2.h	FUNCTION_240	WHILE_1
0x4001de0	        0x4883c201	                              add rdx, 1	      1116	string2.h	FUNCTION_240	WHILE_1
0x4001de4	           0xfb602	                   movzx eax, byte [rdx]	      1114	string2.h	FUNCTION_240	WHILE_1
0x4001de7	            0x84c0	                             test al, al	      1114	string2.h	FUNCTION_240	WHILE_1
0x4001de9	            0x741b	                            je 0x4001e06	      1114	string2.h	FUNCTION_240	WHILE_1
0x4001deb	          0x83e82a	                           sub eax, 0x2a	      1114	string2.h	FUNCTION_240	WHILE_1
0x4001dee	            0x3c31	                            cmp al, 0x31	      1114	string2.h	FUNCTION_240	WHILE_1
0x4001df0	            0x77ee	                            ja 0x4001de0	      1114	string2.h	FUNCTION_240	WHILE_1
0x4001df2	        0x480fa3c1	                             bt rcx, rax	      1115	string2.h	FUNCTION_240	WHILE_1
0x4001df6	            0x73e8	                           jae 0x4001de0	      1115	string2.h	FUNCTION_240	WHILE_1
0x4001df8	            0xeb16	                           jmp 0x4001e10	      1115	string2.h	FUNCTION_240	WHILE_1
0x4001dfa	      0xba00000000	                              mov edx, 0	       147	ldlang.c	FUNCTION_2	CALL_1
0x4001dff	      0xe800000000	                          call 0x4001e04	       147	ldlang.c	FUNCTION_2	CALL_1
0x4001e04	            0xeb11	                           jmp 0x4001e17	       147	ldlang.c	FUNCTION_2	CALL_1
0x4001e06	      0xe800000000	                          call 0x4001e0b	       148	ldlang.c	FUNCTION_2
0x4001e0b	            0xeb0a	                           jmp 0x4001e17	       148	ldlang.c	FUNCTION_2
0x4001e0d	          0x4889fa	                            mov rdx, rdi	      1115	string2.h	FUNCTION_240	WHILE_1
0x4001e10	          0x4885d2	                           test rdx, rdx	       146	ldlang.c	FUNCTION_2	IF_1
0x4001e13	            0x75e5	                           jne 0x4001dfa	       146	ldlang.c	FUNCTION_2	IF_1
0x4001e15	            0xebef	                           jmp 0x4001e06	       146	ldlang.c	FUNCTION_2	IF_1
0x4001e17	        0x4883c408	                              add rsp, 8	       149	ldlang.c	FUNCTION_2
0x4001e1b	              0xc3	                                     ret	       149	ldlang.c	FUNCTION_2
output_section_callback_tree_to_list	IF,2:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,4:ELSE,0	27
0x4005578	            0x4154	                                push r12	       549	ldlang.c	FUNCTION_17
0x400557a	              0x55	                                push rbp	       549	ldlang.c	FUNCTION_17
0x400557b	              0x53	                                push rbx	       549	ldlang.c	FUNCTION_17
0x400557c	          0x4889fd	                            mov rbp, rdi	       549	ldlang.c	FUNCTION_17
0x400557f	          0x4889f3	                            mov rbx, rsi	       549	ldlang.c	FUNCTION_17
0x4005582	          0x4989d4	                            mov r12, rdx	       549	ldlang.c	FUNCTION_17
0x4005585	        0x488b7608	                mov rsi, qword [rsi + 8]	       550	ldlang.c	FUNCTION_17	IF_1
0x4005589	          0x4885f6	                           test rsi, rsi	       550	ldlang.c	FUNCTION_17	IF_1
0x400558c	            0x7405	                            je 0x4005593	       550	ldlang.c	FUNCTION_17	IF_1
0x400558e	      0xe8e5ffffff	call sym.output_section_callback_tree_to_list	       551	ldlang.c	FUNCTION_17	CALL_1
0x4005593	        0x488d7d30	                   lea rdi, [rbp + 0x30]	       553	ldlang.c	FUNCTION_17	CALL_2
0x4005597	          0x4c89e1	                            mov rcx, r12	       553	ldlang.c	FUNCTION_17	CALL_2
0x400559a	      0xba00000000	                              mov edx, 0	       553	ldlang.c	FUNCTION_17	CALL_2
0x400559f	          0x488b33	                    mov rsi, qword [rbx]	       553	ldlang.c	FUNCTION_17	CALL_2
0x40055a2	      0xe800000000	                          call 0x40055a7	       553	ldlang.c	FUNCTION_17	CALL_2
0x40055a7	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	       556	ldlang.c	FUNCTION_17	IF_2
0x40055ab	          0x4885f6	                           test rsi, rsi	       556	ldlang.c	FUNCTION_17	IF_2
0x40055ae	            0x740b	                            je 0x40055bb	       556	ldlang.c	FUNCTION_17	IF_2
0x40055b0	          0x4c89e2	                            mov rdx, r12	       557	ldlang.c	FUNCTION_17	CALL_3
0x40055b3	          0x4889ef	                            mov rdi, rbp	       557	ldlang.c	FUNCTION_17	CALL_3
0x40055b6	      0xe8bdffffff	call sym.output_section_callback_tree_to_list	       557	ldlang.c	FUNCTION_17	CALL_3
0x40055bb	          0x4889df	                            mov rdi, rbx	       559	ldlang.c	FUNCTION_17	CALL_4
0x40055be	      0xe800000000	                          call 0x40055c3	       559	ldlang.c	FUNCTION_17	CALL_4
0x40055c3	              0x5b	                                 pop rbx	       560	ldlang.c	FUNCTION_17
0x40055c4	              0x5d	                                 pop rbp	       560	ldlang.c	FUNCTION_17
0x40055c5	            0x415c	                                 pop r12	       560	ldlang.c	FUNCTION_17
0x40055c7	              0xc3	                                     ret	       560	ldlang.c	FUNCTION_17
walk_wild_section_general	IF,3:WHILE,1:FOR,1:DO,0:SWITCH,0:functions,0:CALL,2:ELSE,0	54
0x40020dc	            0x4157	                                push r15	       290	ldlang.c	FUNCTION_8
0x40020de	            0x4156	                                push r14	       290	ldlang.c	FUNCTION_8
0x40020e0	            0x4155	                                push r13	       290	ldlang.c	FUNCTION_8
0x40020e2	            0x4154	                                push r12	       290	ldlang.c	FUNCTION_8
0x40020e4	              0x55	                                push rbp	       290	ldlang.c	FUNCTION_8
0x40020e5	              0x53	                                push rbx	       290	ldlang.c	FUNCTION_8
0x40020e6	        0x4883ec08	                              sub rsp, 8	       290	ldlang.c	FUNCTION_8
0x40020ea	          0x4989fc	                            mov r12, rdi	       290	ldlang.c	FUNCTION_8
0x40020ed	          0x4989f5	                            mov r13, rsi	       290	ldlang.c	FUNCTION_8
0x40020f0	          0x4989d7	                            mov r15, rdx	       290	ldlang.c	FUNCTION_8
0x40020f3	          0x4989ce	                            mov r14, rcx	       290	ldlang.c	FUNCTION_8
0x40020f6	        0x488b4620	            mov rax, qword [rsi + 0x20] 	       294	ldlang.c	FUNCTION_8	FOR_1
0x40020fa	    0x488ba8900000	            mov rbp, qword [rax + 0x90] 	       294	ldlang.c	FUNCTION_8	FOR_1
0x4002101	          0x4885ed	                           test rbp, rbp	       294	ldlang.c	FUNCTION_8	FOR_1
0x4002104	            0x7463	                            je 0x4002169	       294	ldlang.c	FUNCTION_8	FOR_1
0x4002106	      0x498b5c2420	            mov rbx, qword [r12 + 0x20] 	       296	ldlang.c	FUNCTION_8	FOR_1
0x400210b	          0x4885db	                           test rbx, rbx	       297	ldlang.c	FUNCTION_8	FOR_1	IF_1
0x400210e	            0x751b	                           jne 0x400212b	       297	ldlang.c	FUNCTION_8	FOR_1	IF_1
0x4002110	      0x498b4c2478	            mov rcx, qword [r12 + 0x78] 	       298	ldlang.c	FUNCTION_8	FOR_1	IF_1
0x4002115	          0x4d89f1	                             mov r9, r14	       298	ldlang.c	FUNCTION_8	FOR_1	IF_1
0x4002118	          0x4d89e8	                             mov r8, r13	       298	ldlang.c	FUNCTION_8	FOR_1	IF_1
0x400211b	          0x4889ea	                            mov rdx, rbp	       298	ldlang.c	FUNCTION_8	FOR_1	IF_1
0x400211e	      0xbe00000000	                              mov esi, 0	       298	ldlang.c	FUNCTION_8	FOR_1	IF_1
0x4002123	          0x4c89e7	                            mov rdi, r12	       298	ldlang.c	FUNCTION_8	FOR_1	IF_1
0x4002126	          0x41ffd7	                                call r15	       298	ldlang.c	FUNCTION_8	FOR_1	IF_1
0x4002129	            0xeb35	                           jmp 0x4002160	       298	ldlang.c	FUNCTION_8	FOR_1	IF_1
0x400212b	        0x488b7b08	                mov rdi, qword [rbx + 8]	       304	ldlang.c	FUNCTION_8	FOR_1	WHILE_1	IF_2
0x400212f	          0x4885ff	                           test rdi, rdi	       304	ldlang.c	FUNCTION_8	FOR_1	WHILE_1	IF_2
0x4002132	            0x740d	                            je 0x4002141	       304	ldlang.c	FUNCTION_8	FOR_1	WHILE_1	IF_2
0x4002134	        0x488b7500	                    mov rsi, qword [rbp]	       308	ldlang.c	FUNCTION_8	FOR_1	WHILE_1	IF_2	CALL_1
0x4002138	      0xe86ffcffff	                     call sym.name_match	       308	ldlang.c	FUNCTION_8	FOR_1	WHILE_1	IF_2	CALL_1
0x400213d	            0x85c0	                           test eax, eax	       311	ldlang.c	FUNCTION_8	FOR_1	WHILE_1	IF_3
0x400213f	            0x7517	                           jne 0x4002158	       311	ldlang.c	FUNCTION_8	FOR_1	WHILE_1	IF_3
0x4002141	          0x4d89f1	                             mov r9, r14	       312	ldlang.c	FUNCTION_8	FOR_1	WHILE_1	CALL_2
0x4002144	          0x4d89f8	                             mov r8, r15	       312	ldlang.c	FUNCTION_8	FOR_1	WHILE_1	CALL_2
0x4002147	          0x4889d9	                            mov rcx, rbx	       312	ldlang.c	FUNCTION_8	FOR_1	WHILE_1	CALL_2
0x400214a	          0x4889ea	                            mov rdx, rbp	       312	ldlang.c	FUNCTION_8	FOR_1	WHILE_1	CALL_2
0x400214d	          0x4c89ee	                            mov rsi, r13	       312	ldlang.c	FUNCTION_8	FOR_1	WHILE_1	CALL_2
0x4002150	          0x4c89e7	                            mov rdi, r12	       312	ldlang.c	FUNCTION_8	FOR_1	WHILE_1	CALL_2
0x4002153	      0xe8effdffff	     call sym.walk_wild_consider_section	       312	ldlang.c	FUNCTION_8	FOR_1	WHILE_1	CALL_2
0x4002158	          0x488b1b	                    mov rbx, qword [rbx]	       314	ldlang.c	FUNCTION_8	FOR_1	WHILE_1
0x400215b	          0x4885db	                           test rbx, rbx	       300	ldlang.c	FUNCTION_8	FOR_1	WHILE_1
0x400215e	            0x75cb	                           jne 0x400212b	       300	ldlang.c	FUNCTION_8	FOR_1	WHILE_1
0x4002160	        0x488b6d10	            mov rbp, qword [rbp + 0x10] 	       294	ldlang.c	FUNCTION_8	FOR_1
0x4002164	          0x4885ed	                           test rbp, rbp	       294	ldlang.c	FUNCTION_8	FOR_1
0x4002167	            0x759d	                           jne 0x4002106	       294	ldlang.c	FUNCTION_8	FOR_1
0x4002169	        0x4883c408	                              add rsp, 8	       317	ldlang.c	FUNCTION_8
0x400216d	              0x5b	                                 pop rbx	       317	ldlang.c	FUNCTION_8
0x400216e	              0x5d	                                 pop rbp	       317	ldlang.c	FUNCTION_8
0x400216f	            0x415c	                                 pop r12	       317	ldlang.c	FUNCTION_8
0x4002171	            0x415d	                                 pop r13	       317	ldlang.c	FUNCTION_8
0x4002173	            0x415e	                                 pop r14	       317	ldlang.c	FUNCTION_8
0x4002175	            0x415f	                                 pop r15	       317	ldlang.c	FUNCTION_8
0x4002177	              0xc3	                                     ret	       317	ldlang.c	FUNCTION_8
lang_memory_region_lookup	IF,4:WHILE,0:FOR,2:DO,0:SWITCH,0:functions,0:CALL,6:ELSE,0	90
0x400359c	          0x4885ff	                           test rdi, rdi	      1310	ldlang.c	FUNCTION_41	IF_1
0x400359f	     0xf8451010000	                            je 0x40036f6	      1310	ldlang.c	FUNCTION_41	IF_1
0x40035a5	            0x4155	                                push r13	      1304	ldlang.c	FUNCTION_41
0x40035a7	            0x4154	                                push r12	      1304	ldlang.c	FUNCTION_41
0x40035a9	              0x55	                                push rbp	      1304	ldlang.c	FUNCTION_41
0x40035aa	              0x53	                                push rbx	      1304	ldlang.c	FUNCTION_41
0x40035ab	        0x4883ec08	                              sub rsp, 8	      1304	ldlang.c	FUNCTION_41
0x40035af	          0x4189f5	                           mov r13d, esi	      1304	ldlang.c	FUNCTION_41
0x40035b2	          0x4889fd	                            mov rbp, rdi	      1304	ldlang.c	FUNCTION_41
0x40035b5	    0x4c8b25000000	            mov r12, qword [0x040035bc] 	      1313	ldlang.c	FUNCTION_41	FOR_1
0x40035bc	          0x4d85e4	                           test r12, r12	      1313	ldlang.c	FUNCTION_41	FOR_1
0x40035bf	            0x7467	                            je 0x4003628	      1313	ldlang.c	FUNCTION_41	FOR_1
0x40035c1	          0x4c89e3	                            mov rbx, r12	      1314	ldlang.c	FUNCTION_41	FOR_1	FOR_2
0x40035c4	          0x4d85e4	                           test r12, r12	      1314	ldlang.c	FUNCTION_41	FOR_1	FOR_2
0x40035c7	            0x7455	                            je 0x400361e	      1314	ldlang.c	FUNCTION_41	FOR_1	FOR_2
0x40035c9	          0x4889ee	                            mov rsi, rbp	      1315	ldlang.c	FUNCTION_41	FOR_1	FOR_2	IF_2
0x40035cc	          0x488b3b	                    mov rdi, qword [rbx]	      1315	ldlang.c	FUNCTION_41	FOR_1	FOR_2	IF_2
0x40035cf	      0xe800000000	                          call 0x40035d4	      1315	ldlang.c	FUNCTION_41	FOR_1	FOR_2	IF_2
0x40035d4	            0x85c0	                           test eax, eax	      1315	ldlang.c	FUNCTION_41	FOR_1	FOR_2	IF_2
0x40035d6	            0x753d	                           jne 0x4003615	      1315	ldlang.c	FUNCTION_41	FOR_1	FOR_2	IF_2
0x40035d8	          0x4c89e0	                            mov rax, r12	      1315	ldlang.c	FUNCTION_41	FOR_1	FOR_2	IF_2
0x40035db	          0x4585ed	                         test r13d, r13d	      1317	ldlang.c	FUNCTION_41	FOR_1	FOR_2	IF_2	IF_3
0x40035de	     0xf8418010000	                            je 0x40036fc	      1317	ldlang.c	FUNCTION_41	FOR_1	FOR_2	IF_2	IF_3
0x40035e4	      0xba05000000	                              mov edx, 5	      1318	ldlang.c	FUNCTION_41	FOR_1	FOR_2	IF_2	IF_3	CALL_2
0x40035e9	      0xbe00000000	                              mov esi, 0	      1318	ldlang.c	FUNCTION_41	FOR_1	FOR_2	IF_2	IF_3	CALL_2
0x40035ee	      0xbf00000000	                              mov edi, 0	      1318	ldlang.c	FUNCTION_41	FOR_1	FOR_2	IF_2	IF_3	CALL_2
0x40035f3	      0xe800000000	                          call 0x40035f8	      1318	ldlang.c	FUNCTION_41	FOR_1	FOR_2	IF_2	IF_3	CALL_2
0x40035f8	          0x4889ea	                            mov rdx, rbp	      1318	ldlang.c	FUNCTION_41	FOR_1	FOR_2	IF_2	IF_3	CALL_2
0x40035fb	      0xbe00000000	                              mov esi, 0	      1318	ldlang.c	FUNCTION_41	FOR_1	FOR_2	IF_2	IF_3	CALL_2
0x4003600	          0x4889c7	                            mov rdi, rax	      1318	ldlang.c	FUNCTION_41	FOR_1	FOR_2	IF_2	IF_3	CALL_2
0x4003603	      0xb800000000	                              mov eax, 0	      1318	ldlang.c	FUNCTION_41	FOR_1	FOR_2	IF_2	IF_3	CALL_2
0x4003608	      0xe800000000	                          call 0x400360d	      1318	ldlang.c	FUNCTION_41	FOR_1	FOR_2	IF_2	IF_3	CALL_2
0x400360d	          0x4c89e0	                            mov rax, r12	      1318	ldlang.c	FUNCTION_41	FOR_1	FOR_2	IF_2	IF_3	CALL_2
0x4003610	      0xe9e7000000	                           jmp 0x40036fc	      1318	ldlang.c	FUNCTION_41	FOR_1	FOR_2	IF_2	IF_3	CALL_2
0x4003615	        0x488b5b08	                mov rbx, qword [rbx + 8]	      1314	ldlang.c	FUNCTION_41	FOR_1	FOR_2
0x4003619	          0x4885db	                           test rbx, rbx	      1314	ldlang.c	FUNCTION_41	FOR_1	FOR_2
0x400361c	            0x75ab	                           jne 0x40035c9	      1314	ldlang.c	FUNCTION_41	FOR_1	FOR_2
0x400361e	      0x4d8b642410	            mov r12, qword [r12 + 0x10] 	      1313	ldlang.c	FUNCTION_41	FOR_1
0x4003623	          0x4d85e4	                           test r12, r12	      1313	ldlang.c	FUNCTION_41	FOR_1
0x4003626	            0x7599	                           jne 0x40035c1	      1313	ldlang.c	FUNCTION_41	FOR_1
0x4003628	          0x4585ed	                         test r13d, r13d	      1323	ldlang.c	FUNCTION_41	IF_4
0x400362b	            0x7542	                           jne 0x400366f	      1323	ldlang.c	FUNCTION_41	IF_4
0x400362d	      0xbf00000000	                              mov edi, 0	      1323	ldlang.c	FUNCTION_41	IF_4
0x4003632	      0xb90a000000	                            mov ecx, 0xa	      1323	ldlang.c	FUNCTION_41	IF_4
0x4003637	          0x4889ee	                            mov rsi, rbp	      1323	ldlang.c	FUNCTION_41	IF_4
0x400363a	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1323	ldlang.c	FUNCTION_41	IF_4
0x400363c	           0xf97c2	                                 seta dl	      1323	ldlang.c	FUNCTION_41	IF_4
0x400363f	           0xf92c0	                                 setb al	      1323	ldlang.c	FUNCTION_41	IF_4
0x4003642	            0x38c2	                              cmp dl, al	      1323	ldlang.c	FUNCTION_41	IF_4
0x4003644	            0x7429	                            je 0x400366f	      1323	ldlang.c	FUNCTION_41	IF_4
0x4003646	      0xba05000000	                              mov edx, 5	      1324	ldlang.c	FUNCTION_41	IF_4	CALL_4
0x400364b	      0xbe00000000	                              mov esi, 0	      1324	ldlang.c	FUNCTION_41	IF_4	CALL_4
0x4003650	      0xbf00000000	                              mov edi, 0	      1324	ldlang.c	FUNCTION_41	IF_4	CALL_4
0x4003655	      0xe800000000	                          call 0x400365a	      1324	ldlang.c	FUNCTION_41	IF_4	CALL_4
0x400365a	          0x4889ea	                            mov rdx, rbp	      1324	ldlang.c	FUNCTION_41	IF_4	CALL_4
0x400365d	      0xbe00000000	                              mov esi, 0	      1324	ldlang.c	FUNCTION_41	IF_4	CALL_4
0x4003662	          0x4889c7	                            mov rdi, rax	      1324	ldlang.c	FUNCTION_41	IF_4	CALL_4
0x4003665	      0xb800000000	                              mov eax, 0	      1324	ldlang.c	FUNCTION_41	IF_4	CALL_4
0x400366a	      0xe800000000	                          call 0x400366f	      1324	ldlang.c	FUNCTION_41	IF_4	CALL_4
0x400366f	      0xbf58000000	                           mov edi, 0x58	      1327	ldlang.c	FUNCTION_41
0x4003674	      0xe800000000	                          call 0x4003679	      1327	ldlang.c	FUNCTION_41
0x4003679	          0x4889c3	                            mov rbx, rax	      1327	ldlang.c	FUNCTION_41
0x400367c	          0x4889ef	                            mov rdi, rbp	      1330	ldlang.c	FUNCTION_41	CALL_6
0x400367f	      0xe800000000	                          call 0x4003684	      1330	ldlang.c	FUNCTION_41	CALL_6
0x4003684	          0x488903	                    mov qword [rbx], rax	      1330	ldlang.c	FUNCTION_41	CALL_6
0x4003687	    0x48c743080000	                  mov qword [rbx + 8], 0	      1331	ldlang.c	FUNCTION_41
0x400368f	    0x48c743100000	               mov qword [rbx + 0x10], 0	      1332	ldlang.c	FUNCTION_41
0x4003697	    0x48c743180000	               mov qword [rbx + 0x18], 0	      1333	ldlang.c	FUNCTION_41
0x400369f	    0x48c743200000	               mov qword [rbx + 0x20], 0	      1334	ldlang.c	FUNCTION_41
0x40036a7	    0x48c743300000	               mov qword [rbx + 0x30], 0	      1335	ldlang.c	FUNCTION_41
0x40036af	    0x48c74328ffff	mov qword [rbx + 0x28], 0xffffffffffffffff	      1336	ldlang.c	FUNCTION_41
0x40036b7	    0x48c743380000	               mov qword [rbx + 0x38], 0	      1337	ldlang.c	FUNCTION_41
0x40036bf	    0x48c743400000	               mov qword [rbx + 0x40], 0	      1338	ldlang.c	FUNCTION_41
0x40036c7	    0xc74348000000	               mov dword [rbx + 0x48], 0	      1339	ldlang.c	FUNCTION_41
0x40036ce	    0xc7434c000000	               mov dword [rbx + 0x4c], 0	      1340	ldlang.c	FUNCTION_41
0x40036d5	    0xc74350000000	               mov dword [rbx + 0x50], 0	      1341	ldlang.c	FUNCTION_41
0x40036dc	    0x488b05000000	            mov rax, qword [0x040036e3] 	      1343	ldlang.c	FUNCTION_41
0x40036e3	          0x488918	                    mov qword [rax], rbx	      1343	ldlang.c	FUNCTION_41
0x40036e6	        0x488d4310	                   lea rax, [rbx + 0x10]	      1344	ldlang.c	FUNCTION_41
0x40036ea	    0x488905000000	            mov qword [0x040036f1], rax 	      1344	ldlang.c	FUNCTION_41
0x40036f1	          0x4889d8	                            mov rax, rbx	      1346	ldlang.c	FUNCTION_41
0x40036f4	            0xeb06	                           jmp 0x40036fc	      1346	ldlang.c	FUNCTION_41
0x40036f6	      0xb800000000	                              mov eax, 0	      1311	ldlang.c	FUNCTION_41	IF_1
0x40036fb	              0xc3	                                     ret	      1311	ldlang.c	FUNCTION_41	IF_1
0x40036fc	        0x4883c408	                              add rsp, 8	      1347	ldlang.c	FUNCTION_41
0x4003700	              0x5b	                                 pop rbx	      1347	ldlang.c	FUNCTION_41
0x4003701	              0x5d	                                 pop rbp	      1347	ldlang.c	FUNCTION_41
0x4003702	            0x415c	                                 pop r12	      1347	ldlang.c	FUNCTION_41
0x4003704	            0x415d	                                 pop r13	      1347	ldlang.c	FUNCTION_41
0x4003706	              0xc3	                                     ret	      1347	ldlang.c	FUNCTION_41
lang_add_assignment	IF,0:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,0:ELSE,0	9
0x4007ab1	              0x53	                                push rbx	      7583	ldlang.c	FUNCTION_173
0x4007ab2	          0x4889fb	                            mov rbx, rdi	      7583	ldlang.c	FUNCTION_173
0x4007ab5	    0x488b15000000	            mov rdx, qword [0x04007abc] 	      7586	ldlang.c	FUNCTION_173
0x4007abc	      0xbe18000000	                           mov esi, 0x18	      7586	ldlang.c	FUNCTION_173
0x4007ac1	      0xbf01000000	                              mov edi, 1	      7586	ldlang.c	FUNCTION_173
0x4007ac6	      0xe8fdb6ffff	                  call sym.new_statement	      7586	ldlang.c	FUNCTION_173
0x4007acb	        0x48895810	             mov qword [rax + 0x10], rbx	      7587	ldlang.c	FUNCTION_173
0x4007acf	              0x5b	                                 pop rbx	      7589	ldlang.c	FUNCTION_173
0x4007ad0	              0xc3	                                     ret	      7589	ldlang.c	FUNCTION_173
lang_set_flags	IF,0:WHILE,1:FOR,0:DO,0:SWITCH,1:functions,0:CALL,2:ELSE,0	60
0x4005e4f	            0x4156	                                push r14	      6561	ldlang.c	FUNCTION_140
0x4005e51	            0x4155	                                push r13	      6561	ldlang.c	FUNCTION_140
0x4005e53	            0x4154	                                push r12	      6561	ldlang.c	FUNCTION_140
0x4005e55	              0x55	                                push rbp	      6561	ldlang.c	FUNCTION_140
0x4005e56	              0x53	                                push rbx	      6561	ldlang.c	FUNCTION_140
0x4005e57	          0x4989fd	                            mov r13, rdi	      6561	ldlang.c	FUNCTION_140
0x4005e5a	          0x4889f3	                            mov rbx, rsi	      6561	ldlang.c	FUNCTION_140
0x4005e5d	          0x4189d4	                           mov r12d, edx	      6561	ldlang.c	FUNCTION_140
0x4005e60	        0x488d474c	                   lea rax, [rdi + 0x4c]	      6564	ldlang.c	FUNCTION_140
0x4005e64	        0x488d6f48	                   lea rbp, [rdi + 0x48]	      6564	ldlang.c	FUNCTION_140
0x4005e68	            0x85d2	                           test edx, edx	      6564	ldlang.c	FUNCTION_140
0x4005e6a	        0x480f45e8	                         cmovne rbp, rax	      6564	ldlang.c	FUNCTION_140
0x4005e6e	           0xfb636	                   movzx esi, byte [rsi]	      6566	ldlang.c	FUNCTION_140	WHILE_1
0x4005e71	          0x4084f6	                           test sil, sil	      6566	ldlang.c	FUNCTION_140	WHILE_1
0x4005e74	     0xf8487000000	                            je 0x4005f01	      6566	ldlang.c	FUNCTION_140	WHILE_1
0x4005e7a	          0x8d46df	                   lea eax, [rsi - 0x21]	      6568	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x4005e7d	            0x3c57	                            cmp al, 0x57	      6568	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x4005e7f	            0x7745	                            ja 0x4005ec6	      6568	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x4005e81	           0xfb6c0	                           movzx eax, al	      6568	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x4005e84	    0xff24c5000000	                       jmp qword [rax*8]	      6568	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x4005e8b	          0x4585e4	                         test r12d, r12d	      6573	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x4005e8e	           0xf94c0	                                 sete al	      6573	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x4005e91	           0xfb6c0	                           movzx eax, al	      6573	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x4005e94	            0x7509	                           jne 0x4005e9f	      6574	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x4005e96	        0x498d6d4c	                   lea rbp, [r13 + 0x4c]	      6574	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x4005e9a	          0x4189c4	                           mov r12d, eax	      6573	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x4005e9d	            0xeb52	                           jmp 0x4005ef1	      6573	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x4005e9f	        0x498d6d48	                   lea rbp, [r13 + 0x48]	      6574	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x4005ea3	          0x4189c4	                           mov r12d, eax	      6573	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x4005ea6	            0xeb49	                           jmp 0x4005ef1	      6573	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x4005ea8	        0x834d0001	                       or dword [rbp], 1	      6578	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x4005eac	            0xeb43	                           jmp 0x4005ef1	      6579	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x4005eae	        0x834d0008	                       or dword [rbp], 8	      6582	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x4005eb2	            0xeb3d	                           jmp 0x4005ef1	      6583	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x4005eb4	        0x834d0020	                    or dword [rbp], 0x20	      6586	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x4005eb8	            0xeb37	                           jmp 0x4005ef1	      6587	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x4005eba	        0x834d0010	                    or dword [rbp], 0x10	      6590	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x4005ebe	            0xeb31	                           jmp 0x4005ef1	      6591	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x4005ec0	        0x834d0002	                       or dword [rbp], 2	      6595	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x4005ec4	            0xeb2b	                           jmp 0x4005ef1	      6596	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1
0x4005ec6	        0x440fbef6	                         movsx r14d, sil	      6599	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1	CALL_2
0x4005eca	      0xba05000000	                              mov edx, 5	      6599	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1	CALL_2
0x4005ecf	      0xbe00000000	                              mov esi, 0	      6599	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1	CALL_2
0x4005ed4	      0xbf00000000	                              mov edi, 0	      6599	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1	CALL_2
0x4005ed9	      0xe800000000	                          call 0x4005ede	      6599	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1	CALL_2
0x4005ede	          0x4489f2	                           mov edx, r14d	      6599	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1	CALL_2
0x4005ee1	          0x4489f6	                           mov esi, r14d	      6599	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1	CALL_2
0x4005ee4	          0x4889c7	                            mov rdi, rax	      6599	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1	CALL_2
0x4005ee7	      0xb800000000	                              mov eax, 0	      6599	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1	CALL_2
0x4005eec	      0xe800000000	                          call 0x4005ef1	      6599	ldlang.c	FUNCTION_140	WHILE_1	SWITCH_1	CALL_2
0x4005ef1	        0x4883c301	                              add rbx, 1	      6603	ldlang.c	FUNCTION_140	WHILE_1
0x4005ef5	           0xfb633	                   movzx esi, byte [rbx]	      6566	ldlang.c	FUNCTION_140	WHILE_1
0x4005ef8	          0x4084f6	                           test sil, sil	      6566	ldlang.c	FUNCTION_140	WHILE_1
0x4005efb	     0xf8579ffffff	                           jne 0x4005e7a	      6566	ldlang.c	FUNCTION_140	WHILE_1
0x4005f01	              0x5b	                                 pop rbx	      6605	ldlang.c	FUNCTION_140
0x4005f02	              0x5d	                                 pop rbp	      6605	ldlang.c	FUNCTION_140
0x4005f03	            0x415c	                                 pop r12	      6605	ldlang.c	FUNCTION_140
0x4005f05	            0x415d	                                 pop r13	      6605	ldlang.c	FUNCTION_140
0x4005f07	            0x415e	                                 pop r14	      6605	ldlang.c	FUNCTION_140
0x4005f09	              0xc3	                                     ret	      6605	ldlang.c	FUNCTION_140
ldlang_open_output	IF,3:WHILE,0:FOR,0:DO,0:SWITCH,1:functions,0:CALL,4:ELSE,3	158
0x4005734	          0x8b4708	                mov eax, dword [rdi + 8]	      3195	ldlang.c	FUNCTION_76	SWITCH_1
0x4005737	          0x83f80a	                            cmp eax, 0xa	      3195	ldlang.c	FUNCTION_76	SWITCH_1
0x400573a	     0xf84a6020000	                            je 0x40059e6	      3195	ldlang.c	FUNCTION_76	SWITCH_1
0x4005740	          0x83f80b	                            cmp eax, 0xb	      3195	ldlang.c	FUNCTION_76	SWITCH_1
0x4005743	     0xf85af020000	                           jne 0x40059f8	      3195	ldlang.c	FUNCTION_76	SWITCH_1
0x4005749	              0x55	                                push rbp	      3194	ldlang.c	FUNCTION_76
0x400574a	              0x53	                                push rbx	      3194	ldlang.c	FUNCTION_76
0x400574b	        0x4883ec08	                              sub rsp, 8	      3194	ldlang.c	FUNCTION_76
0x400574f	          0x4889fb	                            mov rbx, rdi	      3194	ldlang.c	FUNCTION_76
0x4005752	    0x48833d000000	               cmp qword [0x0400575a], 0	      3198	ldlang.c	FUNCTION_76	SWITCH_1	CALL_1
0x400575a	            0x740f	                            je 0x400576b	      3198	ldlang.c	FUNCTION_76	SWITCH_1	CALL_1
0x400575c	      0xbe7e0c0000	                          mov esi, 0xc7e	      3198	ldlang.c	FUNCTION_76	SWITCH_1	CALL_1
0x4005761	      0xbf00000000	                              mov edi, 0	      3198	ldlang.c	FUNCTION_76	SWITCH_1	CALL_1
0x4005766	      0xe800000000	                          call 0x400576b	      3198	ldlang.c	FUNCTION_76	SWITCH_1	CALL_1
0x400576b	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      3199	ldlang.c	FUNCTION_76	SWITCH_1	CALL_2
0x400576f	      0xe800000000	                          call 0x4005774	      3115	ldlang.c	FUNCTION_75	CALL_1
0x4005774	    0x488905000000	            mov qword [0x0400577b], rax 	      3115	ldlang.c	FUNCTION_75	CALL_1
0x400577b	    0x833d00000000	               cmp dword [0x04005782], 0	      3119	ldlang.c	FUNCTION_75	IF_1
0x4005782	     0xf8487000000	                            je 0x400580f	      3119	ldlang.c	FUNCTION_75	IF_1
0x4005788	          0x4889c6	                            mov rsi, rax	      3122	ldlang.c	FUNCTION_75	IF_1
0x400578b	      0xbf00000000	                              mov edi, 0	      3122	ldlang.c	FUNCTION_75	IF_1
0x4005790	      0xe800000000	                          call 0x4005795	      3122	ldlang.c	FUNCTION_75	IF_1
0x4005795	          0x4885c0	                           test rax, rax	      3126	ldlang.c	FUNCTION_75	IF_1	IF_2
0x4005798	            0x7475	                            je 0x400580f	      3126	ldlang.c	FUNCTION_75	IF_1	IF_2
0x400579a	    0x833d00000000	               cmp dword [0x040057a1], 1	      3131	ldlang.c	FUNCTION_75	IF_1	IF_2	IF_3
0x40057a1	           0xf95c2	                                setne dl	      3131	ldlang.c	FUNCTION_75	IF_1	IF_2	IF_3
0x40057a4	           0xfb6d2	                           movzx edx, dl	      3131	ldlang.c	FUNCTION_75	IF_1	IF_2	IF_3
0x40057a7	          0x39500c	              cmp dword [rax + 0xc], edx	      3139	ldlang.c	FUNCTION_75	IF_1	IF_2	ELSE_1	IF_4
0x40057aa	            0x7463	                            je 0x400580f	      3139	ldlang.c	FUNCTION_75	IF_1	IF_2	ELSE_1	IF_4
0x40057ac	    0x488b88600300	           mov rcx, qword [rax + 0x360] 	      3143	ldlang.c	FUNCTION_75	IF_1	IF_2	ELSE_1	IF_4	IF_5
0x40057b3	          0x4885c9	                           test rcx, rcx	      3143	ldlang.c	FUNCTION_75	IF_1	IF_2	ELSE_1	IF_4	IF_5
0x40057b6	            0x7411	                            je 0x40057c9	      3143	ldlang.c	FUNCTION_75	IF_1	IF_2	ELSE_1	IF_4	IF_5
0x40057b8	          0x39510c	              cmp dword [rcx + 0xc], edx	      3144	ldlang.c	FUNCTION_75	IF_1	IF_2	ELSE_1	IF_4	IF_5
0x40057bb	            0x750c	                           jne 0x40057c9	      3144	ldlang.c	FUNCTION_75	IF_1	IF_2	ELSE_1	IF_4	IF_5
0x40057bd	          0x488b01	                    mov rax, qword [rcx]	      3145	ldlang.c	FUNCTION_75	IF_1	IF_2	ELSE_1	IF_4	IF_5
0x40057c0	    0x488905000000	            mov qword [0x040057c7], rax 	      3145	ldlang.c	FUNCTION_75	IF_1	IF_2	ELSE_1	IF_4	IF_5
0x40057c7	            0xeb46	                           jmp 0x400580f	      3145	ldlang.c	FUNCTION_75	IF_1	IF_2	ELSE_1	IF_4	IF_5
0x40057c9	          0x4889c6	                            mov rsi, rax	      3151	ldlang.c	FUNCTION_75	IF_1	IF_2	ELSE_1	IF_4	ELSE_2	CALL_3
0x40057cc	      0xbf00000000	                              mov edi, 0	      3151	ldlang.c	FUNCTION_75	IF_1	IF_2	ELSE_1	IF_4	ELSE_2	CALL_3
0x40057d1	      0xe800000000	                          call 0x40057d6	      3151	ldlang.c	FUNCTION_75	IF_1	IF_2	ELSE_1	IF_4	ELSE_2	CALL_3
0x40057d6	    0x488b05000000	            mov rax, qword [0x040057dd] 	      3156	ldlang.c	FUNCTION_75	IF_1	IF_2	ELSE_1	IF_4	ELSE_2	IF_6
0x40057dd	          0x4885c0	                           test rax, rax	      3156	ldlang.c	FUNCTION_75	IF_1	IF_2	ELSE_1	IF_4	ELSE_2	IF_6
0x40057e0	            0x7523	                           jne 0x4005805	      3156	ldlang.c	FUNCTION_75	IF_1	IF_2	ELSE_1	IF_4	ELSE_2	IF_6
0x40057e2	      0xba05000000	                              mov edx, 5	      3157	ldlang.c	FUNCTION_75	IF_1	IF_2	ELSE_1	IF_4	ELSE_2	IF_6	CALL_5
0x40057e7	      0xbe00000000	                              mov esi, 0	      3157	ldlang.c	FUNCTION_75	IF_1	IF_2	ELSE_1	IF_4	ELSE_2	IF_6	CALL_5
0x40057ec	      0xbf00000000	                              mov edi, 0	      3157	ldlang.c	FUNCTION_75	IF_1	IF_2	ELSE_1	IF_4	ELSE_2	IF_6	CALL_5
0x40057f1	      0xe800000000	                          call 0x40057f6	      3157	ldlang.c	FUNCTION_75	IF_1	IF_2	ELSE_1	IF_4	ELSE_2	IF_6	CALL_5
0x40057f6	          0x4889c7	                            mov rdi, rax	      3157	ldlang.c	FUNCTION_75	IF_1	IF_2	ELSE_1	IF_4	ELSE_2	IF_6	CALL_5
0x40057f9	      0xb800000000	                              mov eax, 0	      3157	ldlang.c	FUNCTION_75	IF_1	IF_2	ELSE_1	IF_4	ELSE_2	IF_6	CALL_5
0x40057fe	      0xe800000000	                          call 0x4005803	      3157	ldlang.c	FUNCTION_75	IF_1	IF_2	ELSE_1	IF_4	ELSE_2	IF_6	CALL_5
0x4005803	            0xeb0a	                           jmp 0x400580f	      3157	ldlang.c	FUNCTION_75	IF_1	IF_2	ELSE_1	IF_4	ELSE_2	IF_6	CALL_5
0x4005805	          0x488b00	                    mov rax, qword [rax]	      3160	ldlang.c	FUNCTION_75	IF_1	IF_2	ELSE_1	IF_4	ELSE_2	ELSE_3
0x4005808	    0x488905000000	            mov qword [0x0400580f], rax 	      3160	ldlang.c	FUNCTION_75	IF_1	IF_2	ELSE_1	IF_4	ELSE_2	ELSE_3
0x400580f	    0x488b35000000	            mov rsi, qword [0x04005816] 	      3166	ldlang.c	FUNCTION_75	CALL_6
0x4005816	          0x4889df	                            mov rdi, rbx	      3166	ldlang.c	FUNCTION_75	CALL_6
0x4005819	      0xe800000000	                          call 0x400581e	      3166	ldlang.c	FUNCTION_75	CALL_6
0x400581e	    0x488905000000	            mov qword [0x04005825], rax 	      3166	ldlang.c	FUNCTION_75	CALL_6
0x4005825	          0x4885c0	                           test rax, rax	      3168	ldlang.c	FUNCTION_75	IF_7
0x4005828	            0x7559	                           jne 0x4005883	      3168	ldlang.c	FUNCTION_75	IF_7
0x400582a	      0xe800000000	                          call 0x400582f	      3170	ldlang.c	FUNCTION_75	IF_7	IF_8	CALL_7
0x400582f	          0x83f802	                              cmp eax, 2	      3170	ldlang.c	FUNCTION_75	IF_7	IF_8	CALL_7
0x4005832	            0x752b	                           jne 0x400585f	      3170	ldlang.c	FUNCTION_75	IF_7	IF_8	CALL_7
0x4005834	    0x488b2d000000	            mov rbp, qword [0x0400583b] 	      3171	ldlang.c	FUNCTION_75	IF_7	CALL_9
0x400583b	      0xba05000000	                              mov edx, 5	      3171	ldlang.c	FUNCTION_75	IF_7	CALL_9
0x4005840	      0xbe00000000	                              mov esi, 0	      3171	ldlang.c	FUNCTION_75	IF_7	CALL_9
0x4005845	      0xbf00000000	                              mov edi, 0	      3171	ldlang.c	FUNCTION_75	IF_7	CALL_9
0x400584a	      0xe800000000	                          call 0x400584f	      3171	ldlang.c	FUNCTION_75	IF_7	CALL_9
0x400584f	          0x4889ee	                            mov rsi, rbp	      3171	ldlang.c	FUNCTION_75	IF_7	CALL_9
0x4005852	          0x4889c7	                            mov rdi, rax	      3171	ldlang.c	FUNCTION_75	IF_7	CALL_9
0x4005855	      0xb800000000	                              mov eax, 0	      3171	ldlang.c	FUNCTION_75	IF_7	CALL_9
0x400585a	      0xe800000000	                          call 0x400585f	      3171	ldlang.c	FUNCTION_75	IF_7	CALL_9
0x400585f	      0xba05000000	                              mov edx, 5	      3173	ldlang.c	FUNCTION_75	IF_7	CALL_11
0x4005864	      0xbe00000000	                              mov esi, 0	      3173	ldlang.c	FUNCTION_75	IF_7	CALL_11
0x4005869	      0xbf00000000	                              mov edi, 0	      3173	ldlang.c	FUNCTION_75	IF_7	CALL_11
0x400586e	      0xe800000000	                          call 0x4005873	      3173	ldlang.c	FUNCTION_75	IF_7	CALL_11
0x4005873	          0x4889de	                            mov rsi, rbx	      3173	ldlang.c	FUNCTION_75	IF_7	CALL_11
0x4005876	          0x4889c7	                            mov rdi, rax	      3173	ldlang.c	FUNCTION_75	IF_7	CALL_11
0x4005879	      0xb800000000	                              mov eax, 0	      3173	ldlang.c	FUNCTION_75	IF_7	CALL_11
0x400587e	      0xe800000000	                          call 0x4005883	      3173	ldlang.c	FUNCTION_75	IF_7	CALL_11
0x4005883	    0xc70500000000	               mov dword [0x0400588d], 1	      3176	ldlang.c	FUNCTION_75
0x400588d	      0xbe01000000	                              mov esi, 1	      3178	ldlang.c	FUNCTION_75	IF_9	CALL_12
0x4005892	    0x488b3d000000	            mov rdi, qword [0x04005899] 	      3178	ldlang.c	FUNCTION_75	IF_9	CALL_12
0x4005899	      0xe800000000	                          call 0x400589e	      3178	ldlang.c	FUNCTION_75	IF_9	CALL_12
0x400589e	            0x85c0	                           test eax, eax	      3178	ldlang.c	FUNCTION_75	IF_9	CALL_12
0x40058a0	            0x7524	                           jne 0x40058c6	      3178	ldlang.c	FUNCTION_75	IF_9	CALL_12
0x40058a2	      0xba05000000	                              mov edx, 5	      3179	ldlang.c	FUNCTION_75	CALL_14
0x40058a7	      0xbe00000000	                              mov esi, 0	      3179	ldlang.c	FUNCTION_75	CALL_14
0x40058ac	      0xbf00000000	                              mov edi, 0	      3179	ldlang.c	FUNCTION_75	CALL_14
0x40058b1	      0xe800000000	                          call 0x40058b6	      3179	ldlang.c	FUNCTION_75	CALL_14
0x40058b6	          0x4889de	                            mov rsi, rbx	      3179	ldlang.c	FUNCTION_75	CALL_14
0x40058b9	          0x4889c7	                            mov rdi, rax	      3179	ldlang.c	FUNCTION_75	CALL_14
0x40058bc	      0xb800000000	                              mov eax, 0	      3179	ldlang.c	FUNCTION_75	CALL_14
0x40058c1	      0xe800000000	                          call 0x40058c6	      3179	ldlang.c	FUNCTION_75	CALL_14
0x40058c6	    0x488b3d000000	            mov rdi, qword [0x040058cd] 	      3180	ldlang.c	FUNCTION_75	IF_10
0x40058cd	        0x488b4708	                mov rax, qword [rdi + 8]	      3180	ldlang.c	FUNCTION_75	IF_10
0x40058d1	    0x488b15000000	            mov rdx, qword [0x040058d8] 	      3180	ldlang.c	FUNCTION_75	IF_10
0x40058d8	    0x8b3500000000	            mov esi, dword [0x040058de] 	      3180	ldlang.c	FUNCTION_75	IF_10
0x40058de	    0xff9090020000	                call qword [rax + 0x290]	      3180	ldlang.c	FUNCTION_75	IF_10
0x40058e4	            0x85c0	                           test eax, eax	      3180	ldlang.c	FUNCTION_75	IF_10
0x40058e6	            0x7524	                           jne 0x400590c	      3180	ldlang.c	FUNCTION_75	IF_10
0x40058e8	      0xba05000000	                              mov edx, 5	      3183	ldlang.c	FUNCTION_75	CALL_16
0x40058ed	      0xbe00000000	                              mov esi, 0	      3183	ldlang.c	FUNCTION_75	CALL_16
0x40058f2	      0xbf00000000	                              mov edi, 0	      3183	ldlang.c	FUNCTION_75	CALL_16
0x40058f7	      0xe800000000	                          call 0x40058fc	      3183	ldlang.c	FUNCTION_75	CALL_16
0x40058fc	          0x4889de	                            mov rsi, rbx	      3183	ldlang.c	FUNCTION_75	CALL_16
0x40058ff	          0x4889c7	                            mov rdi, rax	      3183	ldlang.c	FUNCTION_75	CALL_16
0x4005902	      0xb800000000	                              mov eax, 0	      3183	ldlang.c	FUNCTION_75	CALL_16
0x4005907	      0xe800000000	                          call 0x400590c	      3183	ldlang.c	FUNCTION_75	CALL_16
0x400590c	    0x488b3d000000	            mov rdi, qword [0x04005913] 	      3185	ldlang.c	FUNCTION_75
0x4005913	        0x488b4708	                mov rax, qword [rdi + 8]	      3185	ldlang.c	FUNCTION_75
0x4005917	    0xff90b8020000	                call qword [rax + 0x2b8]	      3185	ldlang.c	FUNCTION_75
0x400591d	    0x488905000000	            mov qword [0x04005924], rax 	      3185	ldlang.c	FUNCTION_75
0x4005924	          0x4885c0	                           test rax, rax	      3186	ldlang.c	FUNCTION_75	IF_11
0x4005927	            0x7521	                           jne 0x400594a	      3186	ldlang.c	FUNCTION_75	IF_11
0x4005929	      0xba05000000	                              mov edx, 5	      3187	ldlang.c	FUNCTION_75	CALL_18
0x400592e	      0xbe00000000	                              mov esi, 0	      3187	ldlang.c	FUNCTION_75	CALL_18
0x4005933	      0xbf00000000	                              mov edi, 0	      3187	ldlang.c	FUNCTION_75	CALL_18
0x4005938	      0xe800000000	                          call 0x400593d	      3187	ldlang.c	FUNCTION_75	CALL_18
0x400593d	          0x4889c7	                            mov rdi, rax	      3187	ldlang.c	FUNCTION_75	CALL_18
0x4005940	      0xb800000000	                              mov eax, 0	      3187	ldlang.c	FUNCTION_75	CALL_18
0x4005945	      0xe800000000	                          call 0x400594a	      3187	ldlang.c	FUNCTION_75	CALL_18
0x400594a	    0x8b3500000000	            mov esi, dword [0x04005950] 	      3189	ldlang.c	FUNCTION_75	CALL_19
0x4005950	    0x488b3d000000	            mov rdi, qword [0x04005957] 	      3189	ldlang.c	FUNCTION_75	CALL_19
0x4005957	      0xe800000000	                          call 0x400595c	      3189	ldlang.c	FUNCTION_75	CALL_19
0x400595c	      0xe800000000	                          call 0x4005961	      3200	ldlang.c	FUNCTION_76	SWITCH_1	CALL_3
0x4005961	    0x833d00000000	               cmp dword [0x04005968], 0	      3201	ldlang.c	FUNCTION_76	SWITCH_1	IF_1
0x4005968	            0x741e	                            je 0x4005988	      3201	ldlang.c	FUNCTION_76	SWITCH_1	IF_1
0x400596a	     0xfb605000000	           movzx eax, byte [0x04005971] 	      3202	ldlang.c	FUNCTION_76	SWITCH_1	IF_1	CALL_4
0x4005971	          0x83e003	                              and eax, 3	      3202	ldlang.c	FUNCTION_76	SWITCH_1	IF_1	CALL_4
0x4005974	            0x3c02	                               cmp al, 2	      3202	ldlang.c	FUNCTION_76	SWITCH_1	IF_1	CALL_4
0x4005976	            0x7410	                            je 0x4005988	      3202	ldlang.c	FUNCTION_76	SWITCH_1	IF_1	CALL_4
0x4005978	    0x488b05000000	            mov rax, qword [0x0400597f] 	      3203	ldlang.c	FUNCTION_76	SWITCH_1	IF_1
0x400597f	    0x814844002000	           or dword [rax + 0x44], 0x2000	      3203	ldlang.c	FUNCTION_76	SWITCH_1	IF_1
0x4005986	            0xeb0e	                           jmp 0x4005996	      3203	ldlang.c	FUNCTION_76	SWITCH_1	IF_1
0x4005988	    0x488b05000000	            mov rax, qword [0x0400598f] 	      3205	ldlang.c	FUNCTION_76	SWITCH_1	ELSE_1
0x400598f	    0x816044ffdfff	      and dword [rax + 0x44], 0xffffdfff	      3205	ldlang.c	FUNCTION_76	SWITCH_1	ELSE_1
0x4005996	    0x833d00000000	               cmp dword [0x0400599d], 0	      3206	ldlang.c	FUNCTION_76	SWITCH_1	IF_2
0x400599d	            0x7410	                            je 0x40059af	      3206	ldlang.c	FUNCTION_76	SWITCH_1	IF_2
0x400599f	    0x488b05000000	            mov rax, qword [0x040059a6] 	      3207	ldlang.c	FUNCTION_76	SWITCH_1	IF_2
0x40059a6	    0x814844001000	           or dword [rax + 0x44], 0x1000	      3207	ldlang.c	FUNCTION_76	SWITCH_1	IF_2
0x40059ad	            0xeb0e	                           jmp 0x40059bd	      3207	ldlang.c	FUNCTION_76	SWITCH_1	IF_2
0x40059af	    0x488b05000000	            mov rax, qword [0x040059b6] 	      3209	ldlang.c	FUNCTION_76	SWITCH_1	ELSE_2
0x40059b6	    0x816044ffefff	      and dword [rax + 0x44], 0xffffefff	      3209	ldlang.c	FUNCTION_76	SWITCH_1	ELSE_2
0x40059bd	    0xf60500000000	           test byte [0x040059c4], 0x20 	      3210	ldlang.c	FUNCTION_76	SWITCH_1	IF_3
0x40059c4	            0x7410	                            je 0x40059d6	      3210	ldlang.c	FUNCTION_76	SWITCH_1	IF_3
0x40059c6	    0x488b05000000	            mov rax, qword [0x040059cd] 	      3211	ldlang.c	FUNCTION_76	SWITCH_1	IF_3
0x40059cd	    0x814844008000	           or dword [rax + 0x44], 0x8000	      3211	ldlang.c	FUNCTION_76	SWITCH_1	IF_3
0x40059d4	            0xeb1c	                           jmp 0x40059f2	      3211	ldlang.c	FUNCTION_76	SWITCH_1	IF_3
0x40059d6	    0x488b05000000	            mov rax, qword [0x040059dd] 	      3213	ldlang.c	FUNCTION_76	SWITCH_1	ELSE_3
0x40059dd	    0x816044ff7fff	      and dword [rax + 0x44], 0xffff7fff	      3213	ldlang.c	FUNCTION_76	SWITCH_1	ELSE_3
0x40059e4	            0xeb0c	                           jmp 0x40059f2	      3213	ldlang.c	FUNCTION_76	SWITCH_1	ELSE_3
0x40059e6	        0x488b4710	            mov rax, qword [rdi + 0x10] 	      3217	ldlang.c	FUNCTION_76	SWITCH_1	ELSE_3
0x40059ea	    0x488905000000	            mov qword [0x040059f1], rax 	      3217	ldlang.c	FUNCTION_76	SWITCH_1	ELSE_3
0x40059f1	              0xc3	                                     ret	      3222	ldlang.c	FUNCTION_76	ELSE_3
0x40059f2	        0x4883c408	                              add rsp, 8	      3222	ldlang.c	FUNCTION_76	ELSE_3
0x40059f6	              0x5b	                                 pop rbx	      3222	ldlang.c	FUNCTION_76	ELSE_3
0x40059f7	              0x5d	                                 pop rbp	      3222	ldlang.c	FUNCTION_76	ELSE_3
0x40059f8	            0xf3c3	                                     ret	      3222	ldlang.c	FUNCTION_76	ELSE_3
walk_wild_file	IF,3:WHILE,1:FOR,0:DO,0:SWITCH,0:functions,0:CALL,6:ELSE,1	55
0x4002ec1	            0x4156	                                push r14	       874	ldlang.c	FUNCTION_26
0x4002ec3	            0x4155	                                push r13	       874	ldlang.c	FUNCTION_26
0x4002ec5	            0x4154	                                push r12	       874	ldlang.c	FUNCTION_26
0x4002ec7	              0x55	                                push rbp	       874	ldlang.c	FUNCTION_26
0x4002ec8	              0x53	                                push rbx	       874	ldlang.c	FUNCTION_26
0x4002ec9	          0x4989fc	                            mov r12, rdi	       874	ldlang.c	FUNCTION_26
0x4002ecc	          0x4889f5	                            mov rbp, rsi	       874	ldlang.c	FUNCTION_26
0x4002ecf	          0x4989d5	                            mov r13, rdx	       874	ldlang.c	FUNCTION_26
0x4002ed2	          0x4989ce	                            mov r14, rcx	       874	ldlang.c	FUNCTION_26
0x4002ed5	        0x488b7f40	            mov rdi, qword [rdi + 0x40] 	       875	ldlang.c	FUNCTION_26	IF_1	CALL_1
0x4002ed9	      0xe8d1efffff	 call sym.walk_wild_file_in_exclude_list	       875	ldlang.c	FUNCTION_26	IF_1	CALL_1
0x4002ede	            0x85c0	                           test eax, eax	       875	ldlang.c	FUNCTION_26	IF_1	CALL_1
0x4002ee0	            0x757a	                           jne 0x4002f5c	       875	ldlang.c	FUNCTION_26	IF_1	CALL_1
0x4002ee2	        0x488b7d20	            mov rdi, qword [rbp + 0x20] 	       878	ldlang.c	FUNCTION_26	IF_2
0x4002ee6	          0x4885ff	                           test rdi, rdi	       878	ldlang.c	FUNCTION_26	IF_2
0x4002ee9	            0x740e	                            je 0x4002ef9	       878	ldlang.c	FUNCTION_26	IF_2
0x4002eeb	      0xbe02000000	                              mov esi, 2	       879	ldlang.c	FUNCTION_26	IF_2	CALL_2
0x4002ef0	      0xe800000000	                          call 0x4002ef5	       879	ldlang.c	FUNCTION_26	IF_2	CALL_2
0x4002ef5	            0x85c0	                           test eax, eax	       879	ldlang.c	FUNCTION_26	IF_2	CALL_2
0x4002ef7	            0x7519	                           jne 0x4002f12	       879	ldlang.c	FUNCTION_26	IF_2	CALL_2
0x4002ef9	        0xf6454810	           test byte [rbp + 0x48], 0x10 	       745	ldlang.c	FUNCTION_23	IF_1
0x4002efd	            0x755d	                           jne 0x4002f5c	       745	ldlang.c	FUNCTION_23	IF_1
0x4002eff	          0x4c89f1	                            mov rcx, r14	       748	ldlang.c	FUNCTION_23
0x4002f02	          0x4c89ea	                            mov rdx, r13	       748	ldlang.c	FUNCTION_23
0x4002f05	          0x4889ee	                            mov rsi, rbp	       748	ldlang.c	FUNCTION_23
0x4002f08	          0x4c89e7	                            mov rdi, r12	       748	ldlang.c	FUNCTION_23
0x4002f0b	      0x41ff542448	                 call qword [r12 + 0x48]	       748	ldlang.c	FUNCTION_23
0x4002f10	            0xeb4a	                           jmp 0x4002f5c	       748	ldlang.c	FUNCTION_23
0x4002f12	        0x488b7d20	            mov rdi, qword [rbp + 0x20] 	       887	ldlang.c	FUNCTION_26	ELSE_1	CALL_4
0x4002f16	      0xbe00000000	                              mov esi, 0	       887	ldlang.c	FUNCTION_26	ELSE_1	CALL_4
0x4002f1b	      0xe800000000	                          call 0x4002f20	       887	ldlang.c	FUNCTION_26	ELSE_1	CALL_4
0x4002f20	          0x4889c3	                            mov rbx, rax	       887	ldlang.c	FUNCTION_26	ELSE_1	CALL_4
0x4002f23	          0x4885c0	                           test rax, rax	       888	ldlang.c	FUNCTION_26	ELSE_1	WHILE_1
0x4002f26	            0x7434	                            je 0x4002f5c	       888	ldlang.c	FUNCTION_26	ELSE_1	WHILE_1
0x4002f28	    0x488bb3000100	           mov rsi, qword [rbx + 0x100] 	       895	ldlang.c	FUNCTION_26	ELSE_1	WHILE_1	IF_3
0x4002f2f	          0x4885f6	                           test rsi, rsi	       895	ldlang.c	FUNCTION_26	ELSE_1	WHILE_1	IF_3
0x4002f32	            0x7414	                            je 0x4002f48	       895	ldlang.c	FUNCTION_26	ELSE_1	WHILE_1	IF_3
0x4002f34	        0xf6464810	           test byte [rsi + 0x48], 0x10 	       745	ldlang.c	FUNCTION_23	IF_1
0x4002f38	            0x750e	                           jne 0x4002f48	       745	ldlang.c	FUNCTION_23	IF_1
0x4002f3a	          0x4c89f1	                            mov rcx, r14	       748	ldlang.c	FUNCTION_23
0x4002f3d	          0x4c89ea	                            mov rdx, r13	       748	ldlang.c	FUNCTION_23
0x4002f40	          0x4c89e7	                            mov rdi, r12	       748	ldlang.c	FUNCTION_23
0x4002f43	      0x41ff542448	                 call qword [r12 + 0x48]	       748	ldlang.c	FUNCTION_23
0x4002f48	        0x488b7d20	            mov rdi, qword [rbp + 0x20] 	       902	ldlang.c	FUNCTION_26	ELSE_1	WHILE_1	CALL_6
0x4002f4c	          0x4889de	                            mov rsi, rbx	       902	ldlang.c	FUNCTION_26	ELSE_1	WHILE_1	CALL_6
0x4002f4f	      0xe800000000	                          call 0x4002f54	       902	ldlang.c	FUNCTION_26	ELSE_1	WHILE_1	CALL_6
0x4002f54	          0x4889c3	                            mov rbx, rax	       902	ldlang.c	FUNCTION_26	ELSE_1	WHILE_1	CALL_6
0x4002f57	          0x4885c0	                           test rax, rax	       888	ldlang.c	FUNCTION_26	ELSE_1	WHILE_1
0x4002f5a	            0x75cc	                           jne 0x4002f28	       888	ldlang.c	FUNCTION_26	ELSE_1	WHILE_1
0x4002f5c	              0x5b	                                 pop rbx	       905	ldlang.c	FUNCTION_26
0x4002f5d	              0x5d	                                 pop rbp	       905	ldlang.c	FUNCTION_26
0x4002f5e	            0x415c	                                 pop r12	       905	ldlang.c	FUNCTION_26
0x4002f60	            0x415d	                                 pop r13	       905	ldlang.c	FUNCTION_26
0x4002f62	            0x415e	                                 pop r14	       905	ldlang.c	FUNCTION_26
0x4002f64	              0xc3	                                     ret	       905	ldlang.c	FUNCTION_26
get_init_priority	IF,2:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,2:ELSE,1	65
0x4002178	        0x4883ec18	                           sub rsp, 0x18	       392	ldlang.c	FUNCTION_13
0x400217c	          0x4889fa	                            mov rdx, rdi	       392	ldlang.c	FUNCTION_13
0x400217f	    0x64488b042528	                mov rax, qword fs:[0x28]	       392	ldlang.c	FUNCTION_13
0x4002188	      0x4889442408	                mov qword [rsp + 8], rax	       392	ldlang.c	FUNCTION_13
0x400218d	            0x31c0	                            xor eax, eax	       392	ldlang.c	FUNCTION_13
0x400218f	      0xbf00000000	                              mov edi, 0	       409	ldlang.c	FUNCTION_13	IF_1
0x4002194	      0xb90c000000	                            mov ecx, 0xc	       409	ldlang.c	FUNCTION_13	IF_1
0x4002199	          0x4889d6	                            mov rsi, rdx	       409	ldlang.c	FUNCTION_13	IF_1
0x400219c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       409	ldlang.c	FUNCTION_13	IF_1
0x400219e	           0xf97c1	                                 seta cl	       409	ldlang.c	FUNCTION_13	IF_1
0x40021a1	           0xf92c0	                                 setb al	       409	ldlang.c	FUNCTION_13	IF_1
0x40021a4	            0x38c1	                              cmp cl, al	       409	ldlang.c	FUNCTION_13	IF_1
0x40021a6	            0x7419	                            je 0x40021c1	       409	ldlang.c	FUNCTION_13	IF_1
0x40021a8	      0xbf00000000	                              mov edi, 0	       410	ldlang.c	FUNCTION_13	IF_1
0x40021ad	      0xb90c000000	                            mov ecx, 0xc	       410	ldlang.c	FUNCTION_13	IF_1
0x40021b2	          0x4889d6	                            mov rsi, rdx	       410	ldlang.c	FUNCTION_13	IF_1
0x40021b5	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       410	ldlang.c	FUNCTION_13	IF_1
0x40021b7	           0xf97c1	                                 seta cl	       410	ldlang.c	FUNCTION_13	IF_1
0x40021ba	           0xf92c0	                                 setb al	       410	ldlang.c	FUNCTION_13	IF_1
0x40021bd	            0x38c1	                              cmp cl, al	       410	ldlang.c	FUNCTION_13	IF_1
0x40021bf	            0x7523	                           jne 0x40021e4	       410	ldlang.c	FUNCTION_13	IF_1
0x40021c1	        0x488d7a0c	                    lea rdi, [rdx + 0xc]	       412	ldlang.c	FUNCTION_13	IF_1	CALL_1
0x40021c5	      0xba0a000000	                            mov edx, 0xa	       412	ldlang.c	FUNCTION_13	IF_1	CALL_1
0x40021ca	          0x4889e6	                            mov rsi, rsp	       412	ldlang.c	FUNCTION_13	IF_1	CALL_1
0x40021cd	      0xe800000000	                          call 0x40021d2	       412	ldlang.c	FUNCTION_13	IF_1	CALL_1
0x40021d2	        0x488b1424	                    mov rdx, qword [rsp]	       413	ldlang.c	FUNCTION_13	IF_1
0x40021d6	          0x803a00	                       cmp byte [rdx], 0	       413	ldlang.c	FUNCTION_13	IF_1
0x40021d9	      0xba00000000	                              mov edx, 0	       413	ldlang.c	FUNCTION_13	IF_1
0x40021de	        0x480f45c2	                         cmovne rax, rdx	       413	ldlang.c	FUNCTION_13	IF_1
0x40021e2	            0xeb66	                           jmp 0x400224a	       413	ldlang.c	FUNCTION_13	IF_1
0x40021e4	      0xbf00000000	                              mov edi, 0	       415	ldlang.c	FUNCTION_13	ELSE_1	IF_2
0x40021e9	      0xb907000000	                              mov ecx, 7	       415	ldlang.c	FUNCTION_13	ELSE_1	IF_2
0x40021ee	          0x4889d6	                            mov rsi, rdx	       415	ldlang.c	FUNCTION_13	ELSE_1	IF_2
0x40021f1	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       415	ldlang.c	FUNCTION_13	ELSE_1	IF_2
0x40021f3	           0xf97c1	                                 seta cl	       415	ldlang.c	FUNCTION_13	ELSE_1	IF_2
0x40021f6	           0xf92c0	                                 setb al	       415	ldlang.c	FUNCTION_13	ELSE_1	IF_2
0x40021f9	            0x38c1	                              cmp cl, al	       415	ldlang.c	FUNCTION_13	ELSE_1	IF_2
0x40021fb	            0x7420	                            je 0x400221d	       415	ldlang.c	FUNCTION_13	ELSE_1	IF_2
0x40021fd	      0xbf00000000	                              mov edi, 0	       416	ldlang.c	FUNCTION_13	ELSE_1	IF_2
0x4002202	      0xb907000000	                              mov ecx, 7	       416	ldlang.c	FUNCTION_13	ELSE_1	IF_2
0x4002207	          0x4889d6	                            mov rsi, rdx	       416	ldlang.c	FUNCTION_13	ELSE_1	IF_2
0x400220a	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       416	ldlang.c	FUNCTION_13	ELSE_1	IF_2
0x400220c	        0x400f97c6	                                seta sil	       416	ldlang.c	FUNCTION_13	ELSE_1	IF_2
0x4002210	           0xf92c1	                                 setb cl	       416	ldlang.c	FUNCTION_13	ELSE_1	IF_2
0x4002213	      0xb800000000	                              mov eax, 0	       422	ldlang.c	FUNCTION_13
0x4002218	          0x4038ce	                             cmp sil, cl	       416	ldlang.c	FUNCTION_13	ELSE_1	IF_2
0x400221b	            0x752d	                           jne 0x400224a	       416	ldlang.c	FUNCTION_13	ELSE_1	IF_2
0x400221d	        0x488d7a07	                      lea rdi, [rdx + 7]	       418	ldlang.c	FUNCTION_13	ELSE_1	IF_2	CALL_2
0x4002221	      0xba0a000000	                            mov edx, 0xa	       418	ldlang.c	FUNCTION_13	ELSE_1	IF_2	CALL_2
0x4002226	          0x4889e6	                            mov rsi, rsp	       418	ldlang.c	FUNCTION_13	ELSE_1	IF_2	CALL_2
0x4002229	      0xe800000000	                          call 0x400222e	       418	ldlang.c	FUNCTION_13	ELSE_1	IF_2	CALL_2
0x400222e	          0x4889c1	                            mov rcx, rax	       418	ldlang.c	FUNCTION_13	ELSE_1	IF_2	CALL_2
0x4002231	      0xb800000000	                              mov eax, 0	       419	ldlang.c	FUNCTION_13	ELSE_1	IF_2
0x4002236	        0x488b1424	                    mov rdx, qword [rsp]	       419	ldlang.c	FUNCTION_13	ELSE_1	IF_2
0x400223a	          0x803a00	                       cmp byte [rdx], 0	       419	ldlang.c	FUNCTION_13	ELSE_1	IF_2
0x400223d	            0x750b	                           jne 0x400224a	       419	ldlang.c	FUNCTION_13	ELSE_1	IF_2
0x400223f	      0xbaffff0000	                         mov edx, 0xffff	       419	ldlang.c	FUNCTION_13	ELSE_1	IF_2
0x4002244	          0x4889d0	                            mov rax, rdx	       419	ldlang.c	FUNCTION_13	ELSE_1	IF_2
0x4002247	          0x4829c8	                            sub rax, rcx	       419	ldlang.c	FUNCTION_13	ELSE_1	IF_2
0x400224a	      0x488b742408	                mov rsi, qword [rsp + 8]	       423	ldlang.c	FUNCTION_13
0x400224f	    0x644833342528	                xor rsi, qword fs:[0x28]	       423	ldlang.c	FUNCTION_13
0x4002258	            0x7405	                            je 0x400225f	       423	ldlang.c	FUNCTION_13
0x400225a	      0xe800000000	                          call 0x400225f	       423	ldlang.c	FUNCTION_13
0x400225f	        0x4883c418	                           add rsp, 0x18	       423	ldlang.c	FUNCTION_13
0x4002263	              0xc3	                                     ret	       423	ldlang.c	FUNCTION_13
lang_one_common	IF,9:WHILE,2:FOR,0:DO,0:SWITCH,0:functions,0:CALL,19:ELSE,3	155
0x4001b3b	            0x4155	                                push r13	      6383	ldlang.c	FUNCTION_137
0x4001b3d	            0x4154	                                push r12	      6383	ldlang.c	FUNCTION_137
0x4001b3f	              0x55	                                push rbp	      6383	ldlang.c	FUNCTION_137
0x4001b40	              0x53	                                push rbx	      6383	ldlang.c	FUNCTION_137
0x4001b41	        0x4883ec48	                           sub rsp, 0x48	      6383	ldlang.c	FUNCTION_137
0x4001b45	    0x64488b042528	                mov rax, qword fs:[0x28]	      6383	ldlang.c	FUNCTION_137
0x4001b4e	      0x4889442438	             mov qword [rsp + 0x38], rax	      6383	ldlang.c	FUNCTION_137
0x4001b53	            0x31c0	                            xor eax, eax	      6383	ldlang.c	FUNCTION_137
0x4001b55	        0x807f1805	                cmp byte [rdi + 0x18], 5	      6388	ldlang.c	FUNCTION_137	IF_1
0x4001b59	     0xf8528020000	                           jne 0x4001d87	      6388	ldlang.c	FUNCTION_137	IF_1
0x4001b5f	          0x4889fb	                            mov rbx, rdi	      6388	ldlang.c	FUNCTION_137	IF_1
0x4001b62	        0x488b4728	            mov rax, qword [rdi + 0x28] 	      6392	ldlang.c	FUNCTION_137
0x4001b66	            0x8b08	                    mov ecx, dword [rax]	      6392	ldlang.c	FUNCTION_137
0x4001b68	    0x8b1500000000	            mov edx, dword [0x04001b6e] 	      6394	ldlang.c	FUNCTION_137	IF_2
0x4001b6e	          0x83fa02	                              cmp edx, 2	      6394	ldlang.c	FUNCTION_137	IF_2
0x4001b71	            0x7509	                           jne 0x4001b7c	      6394	ldlang.c	FUNCTION_137	IF_2
0x4001b73	            0x3b0e	                    cmp ecx, dword [rsi]	      6395	ldlang.c	FUNCTION_137	IF_2
0x4001b75	            0x7312	                           jae 0x4001b89	      6395	ldlang.c	FUNCTION_137	IF_2
0x4001b77	      0xe90b020000	                           jmp 0x4001d87	      6395	ldlang.c	FUNCTION_137	IF_2
0x4001b7c	          0x83fa01	                              cmp edx, 1	      6397	ldlang.c	FUNCTION_137	ELSE_1	IF_3
0x4001b7f	            0x7508	                           jne 0x4001b89	      6397	ldlang.c	FUNCTION_137	ELSE_1	IF_3
0x4001b81	            0x3b0e	                    cmp ecx, dword [rsi]	      6398	ldlang.c	FUNCTION_137	ELSE_1	IF_3
0x4001b83	     0xf87fe010000	                            ja 0x4001d87	      6398	ldlang.c	FUNCTION_137	ELSE_1	IF_3
0x4001b89	        0x4c8b6b30	            mov r13, qword [rbx + 0x30] 	      6391	ldlang.c	FUNCTION_137
0x4001b8d	        0x488b6808	                mov rbp, qword [rax + 8]	      6401	ldlang.c	FUNCTION_137
0x4001b91	    0x488b3d000000	            mov rdi, qword [0x04001b98] 	      6402	ldlang.c	FUNCTION_137	IF_4
0x4001b98	        0x488b4708	                mov rax, qword [rdi + 8]	      6402	ldlang.c	FUNCTION_137	IF_4
0x4001b9c	          0x4889da	                            mov rdx, rbx	      6402	ldlang.c	FUNCTION_137	IF_4
0x4001b9f	      0xbe00000000	                              mov esi, 0	      6402	ldlang.c	FUNCTION_137	IF_4
0x4001ba4	    0xff9020030000	                call qword [rax + 0x320]	      6402	ldlang.c	FUNCTION_137	IF_4
0x4001baa	            0x85c0	                           test eax, eax	      6402	ldlang.c	FUNCTION_137	IF_4
0x4001bac	            0x7528	                           jne 0x4001bd6	      6402	ldlang.c	FUNCTION_137	IF_4
0x4001bae	        0x4c8b6308	                mov r12, qword [rbx + 8]	      6403	ldlang.c	FUNCTION_137	IF_4	CALL_2
0x4001bb2	      0xba05000000	                              mov edx, 5	      6403	ldlang.c	FUNCTION_137	IF_4	CALL_2
0x4001bb7	      0xbe00000000	                              mov esi, 0	      6403	ldlang.c	FUNCTION_137	IF_4	CALL_2
0x4001bbc	      0xbf00000000	                              mov edi, 0	      6403	ldlang.c	FUNCTION_137	IF_4	CALL_2
0x4001bc1	      0xe800000000	                          call 0x4001bc6	      6403	ldlang.c	FUNCTION_137	IF_4	CALL_2
0x4001bc6	          0x4c89e6	                            mov rsi, r12	      6403	ldlang.c	FUNCTION_137	IF_4	CALL_2
0x4001bc9	          0x4889c7	                            mov rdi, rax	      6403	ldlang.c	FUNCTION_137	IF_4	CALL_2
0x4001bcc	      0xb800000000	                              mov eax, 0	      6403	ldlang.c	FUNCTION_137	IF_4	CALL_2
0x4001bd1	      0xe800000000	                          call 0x4001bd6	      6403	ldlang.c	FUNCTION_137	IF_4	CALL_2
0x4001bd6	    0x48833d000000	               cmp qword [0x04001bde], 0	      6406	ldlang.c	FUNCTION_137	IF_5
0x4001bde	     0xf84a3010000	                            je 0x4001d87	      6406	ldlang.c	FUNCTION_137	IF_5
0x4001be4	    0x833d00000000	               cmp dword [0x04001beb], 0	      6413	ldlang.c	FUNCTION_137	IF_5	IF_6
0x4001beb	            0x754c	                           jne 0x4001c39	      6413	ldlang.c	FUNCTION_137	IF_5	IF_6
0x4001bed	      0xba05000000	                              mov edx, 5	      6415	ldlang.c	FUNCTION_137	IF_5	IF_6	CALL_4
0x4001bf2	      0xbe00000000	                              mov esi, 0	      6415	ldlang.c	FUNCTION_137	IF_5	IF_6	CALL_4
0x4001bf7	      0xbf00000000	                              mov edi, 0	      6415	ldlang.c	FUNCTION_137	IF_5	IF_6	CALL_4
0x4001bfc	      0xe800000000	                          call 0x4001c01	      6415	ldlang.c	FUNCTION_137	IF_5	IF_6	CALL_4
0x4001c01	          0x4889c7	                            mov rdi, rax	      6415	ldlang.c	FUNCTION_137	IF_5	IF_6	CALL_4
0x4001c04	      0xb800000000	                              mov eax, 0	      6415	ldlang.c	FUNCTION_137	IF_5	IF_6	CALL_4
0x4001c09	      0xe800000000	                          call 0x4001c0e	      6415	ldlang.c	FUNCTION_137	IF_5	IF_6	CALL_4
0x4001c0e	      0xba05000000	                              mov edx, 5	      6416	ldlang.c	FUNCTION_137	IF_5	IF_6	CALL_6
0x4001c13	      0xbe00000000	                              mov esi, 0	      6416	ldlang.c	FUNCTION_137	IF_5	IF_6	CALL_6
0x4001c18	      0xbf00000000	                              mov edi, 0	      6416	ldlang.c	FUNCTION_137	IF_5	IF_6	CALL_6
0x4001c1d	      0xe800000000	                          call 0x4001c22	      6416	ldlang.c	FUNCTION_137	IF_5	IF_6	CALL_6
0x4001c22	          0x4889c7	                            mov rdi, rax	      6416	ldlang.c	FUNCTION_137	IF_5	IF_6	CALL_6
0x4001c25	      0xb800000000	                              mov eax, 0	      6416	ldlang.c	FUNCTION_137	IF_5	IF_6	CALL_6
0x4001c2a	      0xe800000000	                          call 0x4001c2f	      6416	ldlang.c	FUNCTION_137	IF_5	IF_6	CALL_6
0x4001c2f	    0xc70500000000	               mov dword [0x04001c39], 1	      6417	ldlang.c	FUNCTION_137	IF_5	IF_6
0x4001c39	        0x488b7308	                mov rsi, qword [rbx + 8]	      6420	ldlang.c	FUNCTION_137	IF_5	CALL_7
0x4001c3d	      0xba03000000	                              mov edx, 3	      6420	ldlang.c	FUNCTION_137	IF_5	CALL_7
0x4001c42	    0x488b3d000000	            mov rdi, qword [0x04001c49] 	      6420	ldlang.c	FUNCTION_137	IF_5	CALL_7
0x4001c49	      0xe800000000	                          call 0x4001c4e	      6420	ldlang.c	FUNCTION_137	IF_5	CALL_7
0x4001c4e	          0x4989c4	                            mov r12, rax	      6420	ldlang.c	FUNCTION_137	IF_5	CALL_7
0x4001c51	          0x4885c0	                           test rax, rax	      6422	ldlang.c	FUNCTION_137	IF_5	IF_7
0x4001c54	            0x7530	                           jne 0x4001c86	      6422	ldlang.c	FUNCTION_137	IF_5	IF_7
0x4001c56	        0x488b7308	                mov rsi, qword [rbx + 8]	      6424	ldlang.c	FUNCTION_137	IF_5	IF_7	CALL_8
0x4001c5a	      0xbf00000000	                              mov edi, 0	      6424	ldlang.c	FUNCTION_137	IF_5	IF_7	CALL_8
0x4001c5f	      0xb800000000	                              mov eax, 0	      6424	ldlang.c	FUNCTION_137	IF_5	IF_7	CALL_8
0x4001c64	      0xe800000000	                          call 0x4001c69	      6424	ldlang.c	FUNCTION_137	IF_5	IF_7	CALL_8
0x4001c69	        0x488b7b08	                mov rdi, qword [rbx + 8]	      6425	ldlang.c	FUNCTION_137	IF_5	IF_7	CALL_9
0x4001c6d	      0xb800000000	                              mov eax, 0	      6425	ldlang.c	FUNCTION_137	IF_5	IF_7	CALL_9
0x4001c72	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      6425	ldlang.c	FUNCTION_137	IF_5	IF_7	CALL_9
0x4001c79	            0xf2ae	              repne scasb al, byte [rdi]	      6425	ldlang.c	FUNCTION_137	IF_5	IF_7	CALL_9
0x4001c7b	          0x4889c8	                            mov rax, rcx	      6425	ldlang.c	FUNCTION_137	IF_5	IF_7	CALL_9
0x4001c7e	          0x48f7d0	                                 not rax	      6425	ldlang.c	FUNCTION_137	IF_5	IF_7	CALL_9
0x4001c81	          0x8d58ff	                      lea ebx, [rax - 1]	      6425	ldlang.c	FUNCTION_137	IF_5	IF_7	CALL_9
0x4001c84	            0xeb31	                           jmp 0x4001cb7	      6425	ldlang.c	FUNCTION_137	IF_5	IF_7	CALL_9
0x4001c86	          0x4889c6	                            mov rsi, rax	      6429	ldlang.c	FUNCTION_137	IF_5	ELSE_2	CALL_10
0x4001c89	      0xbf00000000	                              mov edi, 0	      6429	ldlang.c	FUNCTION_137	IF_5	ELSE_2	CALL_10
0x4001c8e	      0xb800000000	                              mov eax, 0	      6429	ldlang.c	FUNCTION_137	IF_5	ELSE_2	CALL_10
0x4001c93	      0xe800000000	                          call 0x4001c98	      6429	ldlang.c	FUNCTION_137	IF_5	ELSE_2	CALL_10
0x4001c98	      0xb800000000	                              mov eax, 0	      6430	ldlang.c	FUNCTION_137	IF_5	ELSE_2	CALL_11
0x4001c9d	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      6430	ldlang.c	FUNCTION_137	IF_5	ELSE_2	CALL_11
0x4001ca4	          0x4c89e7	                            mov rdi, r12	      6430	ldlang.c	FUNCTION_137	IF_5	ELSE_2	CALL_11
0x4001ca7	            0xf2ae	              repne scasb al, byte [rdi]	      6430	ldlang.c	FUNCTION_137	IF_5	ELSE_2	CALL_11
0x4001ca9	          0x48f7d1	                                 not rcx	      6430	ldlang.c	FUNCTION_137	IF_5	ELSE_2	CALL_11
0x4001cac	          0x8d59ff	                      lea ebx, [rcx - 1]	      6430	ldlang.c	FUNCTION_137	IF_5	ELSE_2	CALL_11
0x4001caf	          0x4c89e7	                            mov rdi, r12	      6431	ldlang.c	FUNCTION_137	IF_5	ELSE_2	CALL_12
0x4001cb2	      0xe800000000	                          call 0x4001cb7	      6431	ldlang.c	FUNCTION_137	IF_5	ELSE_2	CALL_12
0x4001cb7	          0x83fb12	                           cmp ebx, 0x12	      6434	ldlang.c	FUNCTION_137	IF_5	IF_8
0x4001cba	            0x7e0c	                           jle 0x4001cc8	      6434	ldlang.c	FUNCTION_137	IF_5	IF_8
0x4001cbc	      0xe800000000	                          call 0x4001cc1	      6436	ldlang.c	FUNCTION_137	IF_5	IF_8	CALL_13
0x4001cc1	      0xbb00000000	                              mov ebx, 0	      6437	ldlang.c	FUNCTION_137	IF_5	IF_8
0x4001cc6	            0xeb05	                           jmp 0x4001ccd	      6437	ldlang.c	FUNCTION_137	IF_5	IF_8
0x4001cc8	          0x83fb13	                           cmp ebx, 0x13	      6439	ldlang.c	FUNCTION_137	IF_5	WHILE_1
0x4001ccb	            0x7f0d	                            jg 0x4001cda	      6439	ldlang.c	FUNCTION_137	IF_5	WHILE_1
0x4001ccd	      0xe800000000	                          call 0x4001cd2	      6441	ldlang.c	FUNCTION_137	IF_5	WHILE_1	CALL_14
0x4001cd2	          0x83c301	                              add ebx, 1	      6442	ldlang.c	FUNCTION_137	IF_5	WHILE_1
0x4001cd5	          0x83fb13	                           cmp ebx, 0x13	      6439	ldlang.c	FUNCTION_137	IF_5	WHILE_1
0x4001cd8	            0x7ef3	                           jle 0x4001ccd	      6439	ldlang.c	FUNCTION_137	IF_5	WHILE_1
0x4001cda	      0xbf00000000	                              mov edi, 0	      6445	ldlang.c	FUNCTION_137	IF_5	CALL_15
0x4001cdf	      0xb800000000	                              mov eax, 0	      6445	ldlang.c	FUNCTION_137	IF_5	CALL_15
0x4001ce4	      0xe800000000	                          call 0x4001ce9	      6445	ldlang.c	FUNCTION_137	IF_5	CALL_15
0x4001ce9	      0xb8ffffffff	                     mov eax, 0xffffffff	      6446	ldlang.c	FUNCTION_137	IF_5	IF_9
0x4001cee	          0x4939c5	                            cmp r13, rax	      6446	ldlang.c	FUNCTION_137	IF_5	IF_9
0x4001cf1	            0x7721	                            ja 0x4001d14	      6446	ldlang.c	FUNCTION_137	IF_5	IF_9
0x4001cf3	          0x4d89e8	                             mov r8, r13	        33	stdio2.h	FUNCTION_210	CALL_1
0x4001cf6	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_210	CALL_1
0x4001cfb	      0xba32000000	                           mov edx, 0x32	        33	stdio2.h	FUNCTION_210	CALL_1
0x4001d00	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_210	CALL_1
0x4001d05	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_210	CALL_1
0x4001d08	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_210	CALL_1
0x4001d0d	      0xe800000000	                          call 0x4001d12	        33	stdio2.h	FUNCTION_210	CALL_1
0x4001d12	            0xeb1f	                           jmp 0x4001d33	        33	stdio2.h	FUNCTION_210	CALL_1
0x4001d14	          0x4d89e8	                             mov r8, r13	        33	stdio2.h	FUNCTION_210	CALL_1
0x4001d17	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_210	CALL_1
0x4001d1c	      0xba32000000	                           mov edx, 0x32	        33	stdio2.h	FUNCTION_210	CALL_1
0x4001d21	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_210	CALL_1
0x4001d26	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_210	CALL_1
0x4001d29	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_210	CALL_1
0x4001d2e	      0xe800000000	                          call 0x4001d33	        33	stdio2.h	FUNCTION_210	CALL_1
0x4001d33	          0x4889e6	                            mov rsi, rsp	      6450	ldlang.c	FUNCTION_137	IF_5	CALL_16
0x4001d36	      0xbf00000000	                              mov edi, 0	      6450	ldlang.c	FUNCTION_137	IF_5	CALL_16
0x4001d3b	      0xb800000000	                              mov eax, 0	      6450	ldlang.c	FUNCTION_137	IF_5	CALL_16
0x4001d40	      0xe800000000	                          call 0x4001d45	      6450	ldlang.c	FUNCTION_137	IF_5	CALL_16
0x4001d45	      0xb800000000	                              mov eax, 0	      6451	ldlang.c	FUNCTION_137	IF_5	CALL_17
0x4001d4a	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      6451	ldlang.c	FUNCTION_137	IF_5	CALL_17
0x4001d51	          0x4889e7	                            mov rdi, rsp	      6451	ldlang.c	FUNCTION_137	IF_5	CALL_17
0x4001d54	            0xf2ae	              repne scasb al, byte [rdi]	      6451	ldlang.c	FUNCTION_137	IF_5	CALL_17
0x4001d56	          0x48f7d1	                                 not rcx	      6451	ldlang.c	FUNCTION_137	IF_5	CALL_17
0x4001d59	        0x4883e901	                              sub rcx, 1	      6451	ldlang.c	FUNCTION_137	IF_5	CALL_17
0x4001d5d	            0x89cb	                            mov ebx, ecx	      6451	ldlang.c	FUNCTION_137	IF_5	CALL_17
0x4001d5f	          0x83f90f	                            cmp ecx, 0xf	      6453	ldlang.c	FUNCTION_137	IF_5	WHILE_2
0x4001d62	            0x7f0d	                            jg 0x4001d71	      6453	ldlang.c	FUNCTION_137	IF_5	WHILE_2
0x4001d64	      0xe800000000	                          call 0x4001d69	      6455	ldlang.c	FUNCTION_137	IF_5	WHILE_2	CALL_18
0x4001d69	          0x83c301	                              add ebx, 1	      6456	ldlang.c	FUNCTION_137	IF_5	WHILE_2
0x4001d6c	          0x83fb10	                           cmp ebx, 0x10	      6453	ldlang.c	FUNCTION_137	IF_5	WHILE_2
0x4001d6f	            0x75f3	                           jne 0x4001d64	      6453	ldlang.c	FUNCTION_137	IF_5	WHILE_2
0x4001d71	    0x488bb5f00000	            mov rsi, qword [rbp + 0xf0] 	      6459	ldlang.c	FUNCTION_137	IF_5	CALL_19
0x4001d78	      0xbf00000000	                              mov edi, 0	      6459	ldlang.c	FUNCTION_137	IF_5	CALL_19
0x4001d7d	      0xb800000000	                              mov eax, 0	      6459	ldlang.c	FUNCTION_137	IF_5	CALL_19
0x4001d82	      0xe800000000	                          call 0x4001d87	      6459	ldlang.c	FUNCTION_137	IF_5	CALL_19
0x4001d87	      0xb801000000	                              mov eax, 1	      6463	ldlang.c	FUNCTION_137
0x4001d8c	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	      6463	ldlang.c	FUNCTION_137
0x4001d91	    0x644833142528	                xor rdx, qword fs:[0x28]	      6463	ldlang.c	FUNCTION_137
0x4001d9a	            0x7405	                            je 0x4001da1	      6463	ldlang.c	FUNCTION_137
0x4001d9c	      0xe800000000	                          call 0x4001da1	      6463	ldlang.c	FUNCTION_137
0x4001da1	        0x4883c448	                           add rsp, 0x48	      6463	ldlang.c	FUNCTION_137
0x4001da5	              0x5b	                                 pop rbx	      6463	ldlang.c	FUNCTION_137
0x4001da6	              0x5d	                                 pop rbp	      6463	ldlang.c	FUNCTION_137
0x4001da7	            0x415c	                                 pop r12	      6463	ldlang.c	FUNCTION_137
0x4001da9	            0x415d	                                 pop r13	      6463	ldlang.c	FUNCTION_137
0x4001dab	              0xc3	                                     ret	      6463	ldlang.c	FUNCTION_137
lang_add_nocrossref	IF,0:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,1:ELSE,0	12
0x40080df	              0x53	                                push rbx	      7903	ldlang.c	FUNCTION_186
0x40080e0	          0x4889fb	                            mov rbx, rdi	      7903	ldlang.c	FUNCTION_186
0x40080e3	      0xbf18000000	                           mov edi, 0x18	      7906	ldlang.c	FUNCTION_186	CALL_1
0x40080e8	      0xe800000000	                          call 0x40080ed	      7906	ldlang.c	FUNCTION_186	CALL_1
0x40080ed	    0x488b15000000	            mov rdx, qword [0x040080f4] 	      7907	ldlang.c	FUNCTION_186
0x40080f4	          0x488910	                    mov qword [rax], rdx	      7907	ldlang.c	FUNCTION_186
0x40080f7	        0x48895808	                mov qword [rax + 8], rbx	      7908	ldlang.c	FUNCTION_186
0x40080fb	    0xc74010000000	               mov dword [rax + 0x10], 0	      7909	ldlang.c	FUNCTION_186
0x4008102	    0x488905000000	            mov qword [0x04008109], rax 	      7910	ldlang.c	FUNCTION_186
0x4008109	    0x800d00000000	                 or byte [0x04008110], 1	      7913	ldlang.c	FUNCTION_186
0x4008110	              0x5b	                                 pop rbx	      7914	ldlang.c	FUNCTION_186
0x4008111	              0xc3	                                     ret	      7914	ldlang.c	FUNCTION_186
sort_sections_by_vma	IF,4:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,0:ELSE,3	19
0x40002a9	          0x488b3f	                    mov rdi, qword [rdi]	      4761	ldlang.c	FUNCTION_111
0x40002ac	          0x488b36	                    mov rsi, qword [rsi]	      4762	ldlang.c	FUNCTION_111
0x40002af	        0x488b4f28	            mov rcx, qword [rdi + 0x28] 	      4764	ldlang.c	FUNCTION_111	IF_1
0x40002b3	        0x488b5628	            mov rdx, qword [rsi + 0x28] 	      4764	ldlang.c	FUNCTION_111	IF_1
0x40002b7	          0x4839d1	                            cmp rcx, rdx	      4764	ldlang.c	FUNCTION_111	IF_1
0x40002ba	            0x7218	                            jb 0x40002d4	      4764	ldlang.c	FUNCTION_111	IF_1
0x40002bc	      0xb801000000	                              mov eax, 1	      4767	ldlang.c	FUNCTION_111	ELSE_1	IF_2
0x40002c1	            0x771c	                            ja 0x40002df	      4766	ldlang.c	FUNCTION_111	ELSE_1	IF_2
0x40002c3	          0x8b5708	                mov edx, dword [rdi + 8]	      4768	ldlang.c	FUNCTION_111	ELSE_2	IF_3
0x40002c6	          0x8b4608	                mov eax, dword [rsi + 8]	      4768	ldlang.c	FUNCTION_111	ELSE_2	IF_3
0x40002c9	            0x39c2	                            cmp edx, eax	      4768	ldlang.c	FUNCTION_111	ELSE_2	IF_3
0x40002cb	            0x720d	                            jb 0x40002da	      4768	ldlang.c	FUNCTION_111	ELSE_2	IF_3
0x40002cd	           0xf97c0	                                 seta al	      4765	ldlang.c	FUNCTION_111	IF_1
0x40002d0	           0xfb6c0	                           movzx eax, al	      4765	ldlang.c	FUNCTION_111	IF_1
0x40002d3	              0xc3	                                     ret	      4765	ldlang.c	FUNCTION_111	IF_1
0x40002d4	      0xb8ffffffff	                     mov eax, 0xffffffff	      4765	ldlang.c	FUNCTION_111	IF_1
0x40002d9	              0xc3	                                     ret	      4765	ldlang.c	FUNCTION_111	IF_1
0x40002da	      0xb8ffffffff	                     mov eax, 0xffffffff	      4769	ldlang.c	FUNCTION_111	ELSE_2	IF_3
0x40002df	            0xf3c3	                                     ret	      4774	ldlang.c	FUNCTION_111
new_statement	IF,0:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,2:ELSE,0	16
0x40031c8	              0x55	                                push rbp	      1036	ldlang.c	FUNCTION_33
0x40031c9	              0x53	                                push rbx	      1036	ldlang.c	FUNCTION_33
0x40031ca	        0x4883ec08	                              sub rsp, 8	      1036	ldlang.c	FUNCTION_33
0x40031ce	            0x89fd	                            mov ebp, edi	      1036	ldlang.c	FUNCTION_33
0x40031d0	          0x4889d3	                            mov rbx, rdx	      1036	ldlang.c	FUNCTION_33
0x40031d3	          0x4889f7	                            mov rdi, rsi	      1039	ldlang.c	FUNCTION_33	CALL_1
0x40031d6	      0xe800000000	                          call 0x40031db	      1039	ldlang.c	FUNCTION_33	CALL_1
0x40031db	          0x896808	                mov dword [rax + 8], ebp	      1040	ldlang.c	FUNCTION_33
0x40031de	    0x48c700000000	                      mov qword [rax], 0	      1041	ldlang.c	FUNCTION_33
0x40031e5	        0x488b5308	                mov rdx, qword [rbx + 8]	      7673	ldlang.c	FUNCTION_179
0x40031e9	          0x488902	                    mov qword [rdx], rax	      7673	ldlang.c	FUNCTION_179
0x40031ec	        0x48894308	                mov qword [rbx + 8], rax	      7674	ldlang.c	FUNCTION_179
0x40031f0	        0x4883c408	                              add rsp, 8	      1044	ldlang.c	FUNCTION_33
0x40031f4	              0x5b	                                 pop rbx	      1044	ldlang.c	FUNCTION_33
0x40031f5	              0x5d	                                 pop rbp	      1044	ldlang.c	FUNCTION_33
0x40031f6	              0xc3	                                     ret	      1044	ldlang.c	FUNCTION_33
hash_entry_addr_cmp	IF,2:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,0:ELSE,2	11
0x4000251	          0x488b07	                    mov rax, qword [rdi]	      4155	ldlang.c	FUNCTION_94	IF_1
0x4000254	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      4155	ldlang.c	FUNCTION_94	IF_1
0x4000258	          0x488b06	                    mov rax, qword [rsi]	      4155	ldlang.c	FUNCTION_94	IF_1
0x400025b	        0x488b4030	            mov rax, qword [rax + 0x30] 	      4155	ldlang.c	FUNCTION_94	IF_1
0x400025f	          0x4839c2	                            cmp rdx, rax	      4155	ldlang.c	FUNCTION_94	IF_1
0x4000262	            0x7207	                            jb 0x400026b	      4155	ldlang.c	FUNCTION_94	IF_1
0x4000264	           0xf97c0	                                 seta al	      4156	ldlang.c	FUNCTION_94	IF_1
0x4000267	           0xfb6c0	                           movzx eax, al	      4156	ldlang.c	FUNCTION_94	IF_1
0x400026a	              0xc3	                                     ret	      4156	ldlang.c	FUNCTION_94	IF_1
0x400026b	      0xb8ffffffff	                     mov eax, 0xffffffff	      4156	ldlang.c	FUNCTION_94	IF_1
0x4000270	              0xc3	                                     ret	      4161	ldlang.c	FUNCTION_94	ELSE_2
match_simple_wild	IF,2:WHILE,1:FOR,0:DO,0:SWITCH,0:functions,0:CALL,0:ELSE,0	26
0x400005c	      0xb800000000	                              mov eax, 0	       376	ldlang.c	FUNCTION_12	IF_1
0x4000061	           0xfb60e	                   movzx ecx, byte [rsi]	       374	ldlang.c	FUNCTION_12	IF_1
0x4000064	            0x380f	                      cmp byte [rdi], cl	       374	ldlang.c	FUNCTION_12	IF_1
0x4000066	            0x7544	                           jne 0x40000ac	       374	ldlang.c	FUNCTION_12	IF_1
0x4000068	         0xfb65601	               movzx edx, byte [rsi + 1]	       374	ldlang.c	FUNCTION_12	IF_1
0x400006c	          0x385701	                  cmp byte [rdi + 1], dl	       374	ldlang.c	FUNCTION_12	IF_1
0x400006f	            0x753b	                           jne 0x40000ac	       374	ldlang.c	FUNCTION_12	IF_1
0x4000071	         0xfb65602	               movzx edx, byte [rsi + 2]	       375	ldlang.c	FUNCTION_12	IF_1
0x4000075	          0x385702	                  cmp byte [rdi + 2], dl	       375	ldlang.c	FUNCTION_12	IF_1
0x4000078	            0x7532	                           jne 0x40000ac	       375	ldlang.c	FUNCTION_12	IF_1
0x400007a	         0xfb65603	               movzx edx, byte [rsi + 3]	       375	ldlang.c	FUNCTION_12	IF_1
0x400007e	          0x385703	                  cmp byte [rdi + 3], dl	       375	ldlang.c	FUNCTION_12	IF_1
0x4000081	            0x7529	                           jne 0x40000ac	       375	ldlang.c	FUNCTION_12	IF_1
0x4000083	      0xb800000000	                              mov eax, 0	       375	ldlang.c	FUNCTION_12	IF_1
0x4000088	            0xeb0d	                           jmp 0x4000097	       375	ldlang.c	FUNCTION_12	IF_1
0x400008a	       0xfb64c0604	        movzx ecx, byte [rsi + rax + 4] 	       381	ldlang.c	FUNCTION_12	WHILE_1	IF_2
0x400008f	        0x4883c001	                              add rax, 1	       381	ldlang.c	FUNCTION_12	WHILE_1	IF_2
0x4000093	            0x38ca	                              cmp dl, cl	       381	ldlang.c	FUNCTION_12	WHILE_1	IF_2
0x4000095	            0x7510	                           jne 0x40000a7	       381	ldlang.c	FUNCTION_12	WHILE_1	IF_2
0x4000097	       0xfb6540704	        movzx edx, byte [rdi + rax + 4] 	       380	ldlang.c	FUNCTION_12	WHILE_1
0x400009c	          0x80fa2a	                            cmp dl, 0x2a	       380	ldlang.c	FUNCTION_12	WHILE_1
0x400009f	            0x75e9	                           jne 0x400008a	       380	ldlang.c	FUNCTION_12	WHILE_1
0x40000a1	      0xb801000000	                              mov eax, 1	       384	ldlang.c	FUNCTION_12
0x40000a6	              0xc3	                                     ret	       384	ldlang.c	FUNCTION_12
0x40000a7	      0xb800000000	                              mov eax, 0	       382	ldlang.c	FUNCTION_12	WHILE_1	IF_2
0x40000ac	            0xf3c3	                                     ret	       385	ldlang.c	FUNCTION_12
print_statement	IF,3:WHILE,0:FOR,0:DO,0:SWITCH,1:functions,0:CALL,21:ELSE,1	606
0x4000e13	            0x4156	                                push r14	      4534	ldlang.c	FUNCTION_105
0x4000e15	            0x4155	                                push r13	      4534	ldlang.c	FUNCTION_105
0x4000e17	            0x4154	                                push r12	      4534	ldlang.c	FUNCTION_105
0x4000e19	              0x55	                                push rbp	      4534	ldlang.c	FUNCTION_105
0x4000e1a	              0x53	                                push rbx	      4534	ldlang.c	FUNCTION_105
0x4000e1b	          0x8b5f08	                mov ebx, dword [rdi + 8]	      4535	ldlang.c	FUNCTION_105	SWITCH_1
0x4000e1e	          0x83fb0f	                            cmp ebx, 0xf	      4535	ldlang.c	FUNCTION_105	SWITCH_1
0x4000e21	            0x770f	                            ja 0x4000e32	      4535	ldlang.c	FUNCTION_105	SWITCH_1
0x4000e23	          0x4989fc	                            mov r12, rdi	      4535	ldlang.c	FUNCTION_105	SWITCH_1
0x4000e26	          0x4989f5	                            mov r13, rsi	      4535	ldlang.c	FUNCTION_105	SWITCH_1
0x4000e29	            0x89db	                            mov ebx, ebx	      4535	ldlang.c	FUNCTION_105	SWITCH_1
0x4000e2b	    0xff24dd000000	                       jmp qword [rbx*8]	      4535	ldlang.c	FUNCTION_105	SWITCH_1
0x4000e32	      0xba05000000	                              mov edx, 5	      4538	ldlang.c	FUNCTION_105	SWITCH_1	CALL_1
0x4000e37	      0xbe00000000	                              mov esi, 0	      4538	ldlang.c	FUNCTION_105	SWITCH_1	CALL_1
0x4000e3c	      0xbf00000000	                              mov edi, 0	      4538	ldlang.c	FUNCTION_105	SWITCH_1	CALL_1
0x4000e41	      0xe800000000	                          call 0x4000e46	      4538	ldlang.c	FUNCTION_105	SWITCH_1	CALL_1
0x4000e46	            0x89d9	                            mov ecx, ebx	        97	stdio2.h	CALL_22
0x4000e48	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_22
0x4000e4b	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_22
0x4000e50	    0x488b3d000000	            mov rdi, qword [0x04000e57] 	        97	stdio2.h	CALL_22
0x4000e57	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_22
0x4000e5c	      0xe800000000	                          call 0x4000e61	        97	stdio2.h	CALL_22
0x4000e61	      0xbebb110000	                         mov esi, 0x11bb	      4539	ldlang.c	FUNCTION_105	SWITCH_1	CALL_2
0x4000e66	      0xbf00000000	                              mov edi, 0	      4539	ldlang.c	FUNCTION_105	SWITCH_1	CALL_2
0x4000e6b	      0xe800000000	                          call 0x4000e70	      4539	ldlang.c	FUNCTION_105	SWITCH_1	CALL_2
0x4000e70	      0xe9d7090000	                           jmp 0x400184c	      4540	ldlang.c	FUNCTION_105	SWITCH_1
0x4000e75	    0x48833d000000	               cmp qword [0x04000e7d], 0	      4542	ldlang.c	FUNCTION_105	SWITCH_1	IF_1
0x4000e7d	     0xf84c9090000	                            je 0x400184c	      4542	ldlang.c	FUNCTION_105	SWITCH_1	IF_1
0x4000e83	    0x833d00000000	               cmp dword [0x04000e8a], 0	      4544	ldlang.c	FUNCTION_105	SWITCH_1	IF_1	IF_2
0x4000e8a	            0x7411	                            je 0x4000e9d	      4544	ldlang.c	FUNCTION_105	SWITCH_1	IF_1	IF_2
0x4000e8c	      0xbf00000000	                              mov edi, 0	      4545	ldlang.c	FUNCTION_105	SWITCH_1	IF_1	CALL_3
0x4000e91	      0xb800000000	                              mov eax, 0	      4545	ldlang.c	FUNCTION_105	SWITCH_1	IF_1	CALL_3
0x4000e96	      0xe800000000	                          call 0x4000e9b	      4545	ldlang.c	FUNCTION_105	SWITCH_1	IF_1	CALL_3
0x4000e9b	            0xeb0f	                           jmp 0x4000eac	      4545	ldlang.c	FUNCTION_105	SWITCH_1	IF_1	CALL_3
0x4000e9d	      0xbf00000000	                              mov edi, 0	      4547	ldlang.c	FUNCTION_105	SWITCH_1	IF_1	CALL_4
0x4000ea2	      0xb800000000	                              mov eax, 0	      4547	ldlang.c	FUNCTION_105	SWITCH_1	IF_1	CALL_4
0x4000ea7	      0xe800000000	                          call 0x4000eac	      4547	ldlang.c	FUNCTION_105	SWITCH_1	IF_1	CALL_4
0x4000eac	          0x4c89ee	                            mov rsi, r13	      4548	ldlang.c	FUNCTION_105	SWITCH_1	IF_1	CALL_5
0x4000eaf	    0x488b3d000000	            mov rdi, qword [0x04000eb6] 	      4548	ldlang.c	FUNCTION_105	SWITCH_1	IF_1	CALL_5
0x4000eb6	      0xe89a090000	           call sym.print_statement_list	      4548	ldlang.c	FUNCTION_105	SWITCH_1	IF_1	CALL_5
0x4000ebb	      0xe98c090000	                           jmp 0x400184c	      4548	ldlang.c	FUNCTION_105	SWITCH_1	IF_1	CALL_5
0x4000ec0	      0xe800000000	                          call 0x4000ec5	      4418	ldlang.c	FUNCTION_102	CALL_1
0x4000ec5	      0x498b442440	            mov rax, qword [r12 + 0x40] 	      4420	ldlang.c	FUNCTION_102	IF_1
0x4000eca	          0x4885c0	                           test rax, rax	      4420	ldlang.c	FUNCTION_102	IF_1
0x4000ecd	            0x744a	                            je 0x4000f19	      4420	ldlang.c	FUNCTION_102	IF_1
0x4000ecf	          0x488b30	                    mov rsi, qword [rax]	      4423	ldlang.c	FUNCTION_102	IF_1	CALL_2
0x4000ed2	      0xbf00000000	                              mov edi, 0	      4423	ldlang.c	FUNCTION_102	IF_1	CALL_2
0x4000ed7	      0xb800000000	                              mov eax, 0	      4423	ldlang.c	FUNCTION_102	IF_1	CALL_2
0x4000edc	      0xe800000000	                          call 0x4000ee1	      4423	ldlang.c	FUNCTION_102	IF_1	CALL_2
0x4000ee1	      0x498b442440	            mov rax, qword [r12 + 0x40] 	      4424	ldlang.c	FUNCTION_102	IF_1	FOR_1
0x4000ee6	        0x488b5808	                mov rbx, qword [rax + 8]	      4424	ldlang.c	FUNCTION_102	IF_1	FOR_1
0x4000eea	          0x4885db	                           test rbx, rbx	      4424	ldlang.c	FUNCTION_102	IF_1	FOR_1
0x4000eed	            0x741b	                            je 0x4000f0a	      4424	ldlang.c	FUNCTION_102	IF_1	FOR_1
0x4000eef	          0x488b33	                    mov rsi, qword [rbx]	      4425	ldlang.c	FUNCTION_102	IF_1	CALL_3
0x4000ef2	      0xbf00000000	                              mov edi, 0	      4425	ldlang.c	FUNCTION_102	IF_1	CALL_3
0x4000ef7	      0xb800000000	                              mov eax, 0	      4425	ldlang.c	FUNCTION_102	IF_1	CALL_3
0x4000efc	      0xe800000000	                          call 0x4000f01	      4425	ldlang.c	FUNCTION_102	IF_1	CALL_3
0x4000f01	        0x488b5b08	                mov rbx, qword [rbx + 8]	      4424	ldlang.c	FUNCTION_102	IF_1	FOR_1
0x4000f05	          0x4885db	                           test rbx, rbx	      4424	ldlang.c	FUNCTION_102	IF_1	FOR_1
0x4000f08	            0x75e5	                           jne 0x4000eef	      4424	ldlang.c	FUNCTION_102	IF_1	FOR_1
0x4000f0a	      0xbf00000000	                              mov edi, 0	      4426	ldlang.c	FUNCTION_102	IF_1	CALL_4
0x4000f0f	      0xb800000000	                              mov eax, 0	      4426	ldlang.c	FUNCTION_102	IF_1	CALL_4
0x4000f14	      0xe800000000	                          call 0x4000f19	      4426	ldlang.c	FUNCTION_102	IF_1	CALL_4
0x4000f19	    0x41837c241800	               cmp dword [r12 + 0x18], 0	      4429	ldlang.c	FUNCTION_102	IF_2
0x4000f1f	            0x740f	                            je 0x4000f30	      4429	ldlang.c	FUNCTION_102	IF_2
0x4000f21	      0xbf00000000	                              mov edi, 0	      4430	ldlang.c	FUNCTION_102	CALL_5
0x4000f26	      0xb800000000	                              mov eax, 0	      4430	ldlang.c	FUNCTION_102	CALL_5
0x4000f2b	      0xe800000000	                          call 0x4000f30	      4430	ldlang.c	FUNCTION_102	CALL_5
0x4000f30	      0x498b742410	            mov rsi, qword [r12 + 0x10] 	      4431	ldlang.c	FUNCTION_102	IF_3
0x4000f35	          0x4885f6	                           test rsi, rsi	      4431	ldlang.c	FUNCTION_102	IF_3
0x4000f38	            0x7411	                            je 0x4000f4b	      4431	ldlang.c	FUNCTION_102	IF_3
0x4000f3a	      0xbf00000000	                              mov edi, 0	      4432	ldlang.c	FUNCTION_102	CALL_6
0x4000f3f	      0xb800000000	                              mov eax, 0	      4432	ldlang.c	FUNCTION_102	CALL_6
0x4000f44	      0xe800000000	                          call 0x4000f49	      4432	ldlang.c	FUNCTION_102	CALL_6
0x4000f49	            0xeb0f	                           jmp 0x4000f5a	      4432	ldlang.c	FUNCTION_102	CALL_6
0x4000f4b	      0xbf00000000	                              mov edi, 0	      4434	ldlang.c	FUNCTION_102	CALL_7
0x4000f50	      0xb800000000	                              mov eax, 0	      4434	ldlang.c	FUNCTION_102	CALL_7
0x4000f55	      0xe800000000	                          call 0x4000f5a	      4434	ldlang.c	FUNCTION_102	CALL_7
0x4000f5a	    0x41837c241800	               cmp dword [r12 + 0x18], 0	      4435	ldlang.c	FUNCTION_102	IF_4
0x4000f60	            0x740f	                            je 0x4000f71	      4435	ldlang.c	FUNCTION_102	IF_4
0x4000f62	      0xbf00000000	                              mov edi, 0	      4436	ldlang.c	FUNCTION_102	CALL_8
0x4000f67	      0xb800000000	                              mov eax, 0	      4436	ldlang.c	FUNCTION_102	CALL_8
0x4000f6c	      0xe800000000	                          call 0x4000f71	      4436	ldlang.c	FUNCTION_102	CALL_8
0x4000f71	      0xbf00000000	                              mov edi, 0	      4438	ldlang.c	FUNCTION_102	CALL_9
0x4000f76	      0xb800000000	                              mov eax, 0	      4438	ldlang.c	FUNCTION_102	CALL_9
0x4000f7b	      0xe800000000	                          call 0x4000f80	      4438	ldlang.c	FUNCTION_102	CALL_9
0x4000f80	      0x4d8b742420	            mov r14, qword [r12 + 0x20] 	      4439	ldlang.c	FUNCTION_102	FOR_2
0x4000f85	          0x4d85f6	                           test r14, r14	      4439	ldlang.c	FUNCTION_102	FOR_2
0x4000f88	     0xf8456010000	                            je 0x40010e4	      4439	ldlang.c	FUNCTION_102	FOR_2
0x4000f8e	      0x41837e1806	               cmp dword [r14 + 0x18], 6	      4443	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1
0x4000f93	     0xf878f000000	                            ja 0x4001028	      4443	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1
0x4000f99	        0x418b4618	            mov eax, dword [r14 + 0x18] 	      4443	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1
0x4000f9d	    0xff24c5000000	                       jmp qword [rax*8]	      4443	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1
0x4000fa4	      0xbf00000000	                              mov edi, 0	      4449	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_10
0x4000fa9	      0xb800000000	                              mov eax, 0	      4449	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_10
0x4000fae	      0xe800000000	                          call 0x4000fb3	      4449	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_10
0x4000fb3	      0xbb01000000	                              mov ebx, 1	      4450	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1
0x4000fb8	            0xeb73	                           jmp 0x400102d	      4450	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1
0x4000fba	      0xbf00000000	                              mov edi, 0	      4454	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_11
0x4000fbf	      0xb800000000	                              mov eax, 0	      4454	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_11
0x4000fc4	      0xe800000000	                          call 0x4000fc9	      4454	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_11
0x4000fc9	      0xbb01000000	                              mov ebx, 1	      4455	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1
0x4000fce	            0xeb5d	                           jmp 0x400102d	      4455	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1
0x4000fd0	      0xbf00000000	                              mov edi, 0	      4459	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_12
0x4000fd5	      0xb800000000	                              mov eax, 0	      4459	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_12
0x4000fda	      0xe800000000	                          call 0x4000fdf	      4459	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_12
0x4000fdf	      0xbb02000000	                              mov ebx, 2	      4460	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1
0x4000fe4	            0xeb47	                           jmp 0x400102d	      4460	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1
0x4000fe6	      0xbf00000000	                              mov edi, 0	      4464	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_13
0x4000feb	      0xb800000000	                              mov eax, 0	      4464	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_13
0x4000ff0	      0xe800000000	                          call 0x4000ff5	      4464	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_13
0x4000ff5	      0xbb02000000	                              mov ebx, 2	      4465	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1
0x4000ffa	            0xeb31	                           jmp 0x400102d	      4465	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1
0x4000ffc	      0xbf00000000	                              mov edi, 0	      4469	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_14
0x4001001	      0xb800000000	                              mov eax, 0	      4469	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_14
0x4001006	      0xe800000000	                          call 0x400100b	      4469	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_14
0x400100b	      0xbb01000000	                              mov ebx, 1	      4470	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1
0x4001010	            0xeb1b	                           jmp 0x400102d	      4470	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1
0x4001012	      0xbf00000000	                              mov edi, 0	      4474	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_15
0x4001017	      0xb800000000	                              mov eax, 0	      4474	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_15
0x400101c	      0xe800000000	                          call 0x4001021	      4474	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1	CALL_15
0x4001021	      0xbb01000000	                              mov ebx, 1	      4475	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1
0x4001026	            0xeb05	                           jmp 0x400102d	      4475	ldlang.c	FUNCTION_102	FOR_2	SWITCH_1
0x4001028	      0xbb00000000	                              mov ebx, 0	      4441	ldlang.c	FUNCTION_102	FOR_2
0x400102d	        0x498b4610	            mov rax, qword [r14 + 0x10] 	      4479	ldlang.c	FUNCTION_102	FOR_2	IF_5
0x4001031	          0x4885c0	                           test rax, rax	      4479	ldlang.c	FUNCTION_102	FOR_2	IF_5
0x4001034	            0x744a	                            je 0x4001080	      4479	ldlang.c	FUNCTION_102	FOR_2	IF_5
0x4001036	          0x488b30	                    mov rsi, qword [rax]	      4482	ldlang.c	FUNCTION_102	FOR_2	IF_5	CALL_16
0x4001039	      0xbf00000000	                              mov edi, 0	      4482	ldlang.c	FUNCTION_102	FOR_2	IF_5	CALL_16
0x400103e	      0xb800000000	                              mov eax, 0	      4482	ldlang.c	FUNCTION_102	FOR_2	IF_5	CALL_16
0x4001043	      0xe800000000	                          call 0x4001048	      4482	ldlang.c	FUNCTION_102	FOR_2	IF_5	CALL_16
0x4001048	        0x498b4610	            mov rax, qword [r14 + 0x10] 	      4483	ldlang.c	FUNCTION_102	FOR_2	IF_5	FOR_3
0x400104c	        0x488b6808	                mov rbp, qword [rax + 8]	      4483	ldlang.c	FUNCTION_102	FOR_2	IF_5	FOR_3
0x4001050	          0x4885ed	                           test rbp, rbp	      4483	ldlang.c	FUNCTION_102	FOR_2	IF_5	FOR_3
0x4001053	            0x741c	                            je 0x4001071	      4483	ldlang.c	FUNCTION_102	FOR_2	IF_5	FOR_3
0x4001055	        0x488b7500	                    mov rsi, qword [rbp]	      4484	ldlang.c	FUNCTION_102	FOR_2	IF_5	CALL_17
0x4001059	      0xbf00000000	                              mov edi, 0	      4484	ldlang.c	FUNCTION_102	FOR_2	IF_5	CALL_17
0x400105e	      0xb800000000	                              mov eax, 0	      4484	ldlang.c	FUNCTION_102	FOR_2	IF_5	CALL_17
0x4001063	      0xe800000000	                          call 0x4001068	      4484	ldlang.c	FUNCTION_102	FOR_2	IF_5	CALL_17
0x4001068	        0x488b6d08	                mov rbp, qword [rbp + 8]	      4483	ldlang.c	FUNCTION_102	FOR_2	IF_5	FOR_3
0x400106c	          0x4885ed	                           test rbp, rbp	      4483	ldlang.c	FUNCTION_102	FOR_2	IF_5	FOR_3
0x400106f	            0x75e4	                           jne 0x4001055	      4483	ldlang.c	FUNCTION_102	FOR_2	IF_5	FOR_3
0x4001071	      0xbf00000000	                              mov edi, 0	      4485	ldlang.c	FUNCTION_102	FOR_2	IF_5	CALL_18
0x4001076	      0xb800000000	                              mov eax, 0	      4485	ldlang.c	FUNCTION_102	FOR_2	IF_5	CALL_18
0x400107b	      0xe800000000	                          call 0x4001080	      4485	ldlang.c	FUNCTION_102	FOR_2	IF_5	CALL_18
0x4001080	        0x498b7608	                mov rsi, qword [r14 + 8]	      4487	ldlang.c	FUNCTION_102	FOR_2	IF_6
0x4001084	          0x4885f6	                           test rsi, rsi	      4487	ldlang.c	FUNCTION_102	FOR_2	IF_6
0x4001087	            0x7415	                            je 0x400109e	      4487	ldlang.c	FUNCTION_102	FOR_2	IF_6
0x4001089	      0xbf00000000	                              mov edi, 0	      4488	ldlang.c	FUNCTION_102	FOR_2	CALL_19
0x400108e	      0xb800000000	                              mov eax, 0	      4488	ldlang.c	FUNCTION_102	FOR_2	CALL_19
0x4001093	      0xe800000000	                          call 0x4001098	      4488	ldlang.c	FUNCTION_102	FOR_2	CALL_19
0x4001098	            0x85db	                           test ebx, ebx	      4491	ldlang.c	FUNCTION_102	FOR_2	FOR_4
0x400109a	            0x7f13	                            jg 0x40010af	      4491	ldlang.c	FUNCTION_102	FOR_2	FOR_4
0x400109c	            0xeb25	                           jmp 0x40010c3	      4491	ldlang.c	FUNCTION_102	FOR_2	FOR_4
0x400109e	      0xbf00000000	                              mov edi, 0	      4490	ldlang.c	FUNCTION_102	FOR_2	CALL_20
0x40010a3	      0xb800000000	                              mov eax, 0	      4490	ldlang.c	FUNCTION_102	FOR_2	CALL_20
0x40010a8	      0xe800000000	                          call 0x40010ad	      4490	ldlang.c	FUNCTION_102	FOR_2	CALL_20
0x40010ad	            0xebe9	                           jmp 0x4001098	      4490	ldlang.c	FUNCTION_102	FOR_2	CALL_20
0x40010af	      0xbf00000000	                              mov edi, 0	      4492	ldlang.c	FUNCTION_102	FOR_2	CALL_21
0x40010b4	      0xb800000000	                              mov eax, 0	      4492	ldlang.c	FUNCTION_102	FOR_2	CALL_21
0x40010b9	      0xe800000000	                          call 0x40010be	      4492	ldlang.c	FUNCTION_102	FOR_2	CALL_21
0x40010be	          0x83eb01	                              sub ebx, 1	      4491	ldlang.c	FUNCTION_102	FOR_2	FOR_4
0x40010c1	            0x75ec	                           jne 0x40010af	      4491	ldlang.c	FUNCTION_102	FOR_2	FOR_4
0x40010c3	        0x49833e00	                      cmp qword [r14], 0	      4493	ldlang.c	FUNCTION_102	FOR_2	IF_7
0x40010c7	            0x741b	                            je 0x40010e4	      4493	ldlang.c	FUNCTION_102	FOR_2	IF_7
0x40010c9	      0xbf00000000	                              mov edi, 0	      4494	ldlang.c	FUNCTION_102	FOR_2	CALL_22
0x40010ce	      0xb800000000	                              mov eax, 0	      4494	ldlang.c	FUNCTION_102	FOR_2	CALL_22
0x40010d3	      0xe800000000	                          call 0x40010d8	      4494	ldlang.c	FUNCTION_102	FOR_2	CALL_22
0x40010d8	          0x4d8b36	                    mov r14, qword [r14]	      4439	ldlang.c	FUNCTION_102	FOR_2
0x40010db	          0x4d85f6	                           test r14, r14	      4439	ldlang.c	FUNCTION_102	FOR_2
0x40010de	     0xf85aafeffff	                           jne 0x4000f8e	      4439	ldlang.c	FUNCTION_102	FOR_2
0x40010e4	      0xbf00000000	                              mov edi, 0	      4496	ldlang.c	FUNCTION_102	CALL_23
0x40010e9	      0xb800000000	                              mov eax, 0	      4496	ldlang.c	FUNCTION_102	CALL_23
0x40010ee	      0xe800000000	                          call 0x40010f3	      4496	ldlang.c	FUNCTION_102	CALL_23
0x40010f3	      0xe800000000	                          call 0x40010f8	      4498	ldlang.c	FUNCTION_102	CALL_24
0x40010f8	      0x498b7c2430	            mov rdi, qword [r12 + 0x30] 	      4500	ldlang.c	FUNCTION_102	CALL_25
0x40010fd	          0x4c89ee	                            mov rsi, r13	      4500	ldlang.c	FUNCTION_102	CALL_25
0x4001100	      0xe850070000	           call sym.print_statement_list	      4500	ldlang.c	FUNCTION_102	CALL_25
0x4001105	      0xe942070000	                           jmp 0x400184c	      4500	ldlang.c	FUNCTION_102	CALL_25
0x400110a	        0x488b5f10	            mov rbx, qword [rdi + 0x10] 	      4340	ldlang.c	FUNCTION_99	CALL_2
0x400110e	      0xba05000000	                              mov edx, 5	      4340	ldlang.c	FUNCTION_99	CALL_2
0x4001113	      0xbe00000000	                              mov esi, 0	      4340	ldlang.c	FUNCTION_99	CALL_2
0x4001118	      0xbf00000000	                              mov edi, 0	      4340	ldlang.c	FUNCTION_99	CALL_2
0x400111d	      0xe800000000	                          call 0x4001122	      4340	ldlang.c	FUNCTION_99	CALL_2
0x4001122	          0x4889de	                            mov rsi, rbx	      4340	ldlang.c	FUNCTION_99	CALL_2
0x4001125	          0x4889c7	                            mov rdi, rax	      4340	ldlang.c	FUNCTION_99	CALL_2
0x4001128	      0xb800000000	                              mov eax, 0	      4340	ldlang.c	FUNCTION_99	CALL_2
0x400112d	      0xe800000000	                          call 0x4001132	      4340	ldlang.c	FUNCTION_99	CALL_2
0x4001132	      0x498b7c2418	            mov rdi, qword [r12 + 0x18] 	      4341	ldlang.c	FUNCTION_99	CALL_3
0x4001137	      0xe800000000	                          call 0x400113c	      4341	ldlang.c	FUNCTION_99	CALL_3
0x400113c	      0xe800000000	                          call 0x4001141	      4342	ldlang.c	FUNCTION_99	CALL_4
0x4001141	      0xe906070000	                           jmp 0x400184c	      4342	ldlang.c	FUNCTION_99	CALL_4
0x4001146	      0xbf00000000	                              mov edi, 0	      4558	ldlang.c	FUNCTION_105	SWITCH_1	CALL_8
0x400114b	      0xb800000000	                              mov eax, 0	      4558	ldlang.c	FUNCTION_105	SWITCH_1	CALL_8
0x4001150	      0xe800000000	                          call 0x4001155	      4558	ldlang.c	FUNCTION_105	SWITCH_1	CALL_8
0x4001155	      0xe9f2060000	                           jmp 0x400184c	      4559	ldlang.c	FUNCTION_105	SWITCH_1
0x400115a	    0x488b0d000000	            mov rcx, qword [0x04001161] 	      4271	ldlang.c	FUNCTION_97	CALL_1
0x4001161	      0xba0d000000	                            mov edx, 0xd	      4271	ldlang.c	FUNCTION_97	CALL_1
0x4001166	      0xbe01000000	                              mov esi, 1	      4271	ldlang.c	FUNCTION_97	CALL_1
0x400116b	      0xbf00000000	                              mov edi, 0	      4271	ldlang.c	FUNCTION_97	CALL_1
0x4001170	      0xe800000000	                          call 0x4001175	      4271	ldlang.c	FUNCTION_97	CALL_1
0x4001175	      0x498b442410	            mov rax, qword [r12 + 0x10] 	      4272	ldlang.c	FUNCTION_97	FOR_1
0x400117a	        0x488d6808	                      lea rbp, [rax + 8]	      4272	ldlang.c	FUNCTION_97	FOR_1
0x400117e	          0x488b18	                    mov rbx, qword [rax]	      4272	ldlang.c	FUNCTION_97	FOR_1
0x4001181	          0x4885db	                           test rbx, rbx	      4272	ldlang.c	FUNCTION_97	FOR_1
0x4001184	            0x7429	                            je 0x40011af	      4272	ldlang.c	FUNCTION_97	FOR_1
0x4001186	         0xfb64d00	                   movzx ecx, byte [rbp]	        97	stdio2.h	CALL_22
0x400118a	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_22
0x400118f	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_22
0x4001194	    0x488b3d000000	            mov rdi, qword [0x0400119b] 	        97	stdio2.h	CALL_22
0x400119b	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_22
0x40011a0	      0xe800000000	                          call 0x40011a5	        97	stdio2.h	CALL_22
0x40011a5	        0x4883c501	                              add rbp, 1	      4272	ldlang.c	FUNCTION_97	FOR_1
0x40011a9	        0x4883eb01	                              sub rbx, 1	      4272	ldlang.c	FUNCTION_97	FOR_1
0x40011ad	            0x75d7	                           jne 0x4001186	      4272	ldlang.c	FUNCTION_97	FOR_1
0x40011af	    0x488b35000000	            mov rsi, qword [0x040011b6] 	      4274	ldlang.c	FUNCTION_97	CALL_2
0x40011b6	      0xbf0a000000	                            mov edi, 0xa	      4274	ldlang.c	FUNCTION_97	CALL_2
0x40011bb	      0xe800000000	                          call 0x40011c0	      4274	ldlang.c	FUNCTION_97	CALL_2
0x40011c0	      0xe987060000	                           jmp 0x400184c	      4274	ldlang.c	FUNCTION_97	CALL_2
0x40011c5	      0xe8a2f5ffff	                       call sym.init_opb	      4285	ldlang.c	FUNCTION_98	CALL_1
0x40011ca	      0xbb10000000	                           mov ebx, 0x10	      4285	ldlang.c	FUNCTION_98	CALL_1
0x40011cf	      0xe800000000	                          call 0x40011d4	      4287	ldlang.c	FUNCTION_98	CALL_2
0x40011d4	          0x83eb01	                              sub ebx, 1	      4286	ldlang.c	FUNCTION_98	FOR_1
0x40011d7	            0x75f6	                           jne 0x40011cf	      4286	ldlang.c	FUNCTION_98	FOR_1
0x40011d9	      0x498b6c2430	            mov rbp, qword [r12 + 0x30] 	      4289	ldlang.c	FUNCTION_98
0x40011de	      0x498b442428	            mov rax, qword [r12 + 0x28] 	      4290	ldlang.c	FUNCTION_98	IF_1
0x40011e3	          0x4885c0	                           test rax, rax	      4290	ldlang.c	FUNCTION_98	IF_1
0x40011e6	            0x7404	                            je 0x40011ec	      4290	ldlang.c	FUNCTION_98	IF_1
0x40011e8	        0x48036828	             add rbp, qword [rax + 0x28]	      4291	ldlang.c	FUNCTION_98	IF_1
0x40011ec	      0x418b442410	            mov eax, dword [r12 + 0x10] 	      4293	ldlang.c	FUNCTION_98	SWITCH_1
0x40011f1	      0x2d1a010000	                          sub eax, 0x11a	      4293	ldlang.c	FUNCTION_98	SWITCH_1
0x40011f6	          0x83f804	                              cmp eax, 4	      4293	ldlang.c	FUNCTION_98	SWITCH_1
0x40011f9	            0x7715	                            ja 0x4001210	      4293	ldlang.c	FUNCTION_98	SWITCH_1
0x40011fb	            0x89c0	                            mov eax, eax	      4293	ldlang.c	FUNCTION_98	SWITCH_1
0x40011fd	    0xff24c5000000	                       jmp qword [rax*8]	      4293	ldlang.c	FUNCTION_98	SWITCH_1
0x4001204	      0xbe00000000	                              mov esi, 0	      4303	ldlang.c	FUNCTION_98	SWITCH_1
0x4001209	      0xba02000000	                              mov edx, 2	      4302	ldlang.c	FUNCTION_98	SWITCH_1
0x400120e	            0xeb42	                           jmp 0x4001252	      4302	ldlang.c	FUNCTION_98	SWITCH_1
0x4001210	      0xba00000000	                              mov edx, 0	      4296	ldlang.c	FUNCTION_98	SWITCH_1	CALL_3
0x4001215	      0xbec8100000	                         mov esi, 0x10c8	      4296	ldlang.c	FUNCTION_98	SWITCH_1	CALL_3
0x400121a	      0xbf00000000	                              mov edi, 0	      4296	ldlang.c	FUNCTION_98	SWITCH_1	CALL_3
0x400121f	      0xe800000000	                          call 0x4001224	      4296	ldlang.c	FUNCTION_98	SWITCH_1	CALL_3
0x4001224	      0xbe00000000	                              mov esi, 0	      4307	ldlang.c	FUNCTION_98	SWITCH_1
0x4001229	      0xba04000000	                              mov edx, 4	      4306	ldlang.c	FUNCTION_98	SWITCH_1
0x400122e	            0xeb22	                           jmp 0x4001252	      4306	ldlang.c	FUNCTION_98	SWITCH_1
0x4001230	      0xbe00000000	                              mov esi, 0	      4311	ldlang.c	FUNCTION_98	SWITCH_1
0x4001235	      0xba08000000	                              mov edx, 8	      4310	ldlang.c	FUNCTION_98	SWITCH_1
0x400123a	            0xeb16	                           jmp 0x4001252	      4310	ldlang.c	FUNCTION_98	SWITCH_1
0x400123c	      0xbe00000000	                              mov esi, 0	      4315	ldlang.c	FUNCTION_98	SWITCH_1
0x4001241	      0xba08000000	                              mov edx, 8	      4314	ldlang.c	FUNCTION_98	SWITCH_1
0x4001246	            0xeb0a	                           jmp 0x4001252	      4314	ldlang.c	FUNCTION_98	SWITCH_1
0x4001248	      0xbe00000000	                              mov esi, 0	      4299	ldlang.c	FUNCTION_98	SWITCH_1
0x400124d	      0xba01000000	                              mov edx, 1	      4298	ldlang.c	FUNCTION_98	SWITCH_1
0x4001252	    0x8b0d00000000	            mov ecx, dword [0x04001258] 	      4319	ldlang.c	FUNCTION_98	IF_2
0x4001258	      0xbb01000000	                              mov ebx, 1	      4319	ldlang.c	FUNCTION_98	IF_2
0x400125d	            0x89d8	                            mov eax, ebx	      4319	ldlang.c	FUNCTION_98	IF_2
0x400125f	            0xd3e0	                             shl eax, cl	      4319	ldlang.c	FUNCTION_98	IF_2
0x4001261	          0x4839d0	                            cmp rax, rdx	      4319	ldlang.c	FUNCTION_98	IF_2
0x4001264	        0x480f43d0	                         cmovae rdx, rax	      4319	ldlang.c	FUNCTION_98	IF_2
0x4001268	          0x4889d3	                            mov rbx, rdx	      4319	ldlang.c	FUNCTION_98	IF_2
0x400126b	          0x48d3ea	                             shr rdx, cl	      4321	ldlang.c	FUNCTION_98	CALL_4
0x400126e	      0x4d8b442420	              mov r8, qword [r12 + 0x20]	      4321	ldlang.c	FUNCTION_98	CALL_4
0x4001273	          0x4889f1	                            mov rcx, rsi	      4321	ldlang.c	FUNCTION_98	CALL_4
0x4001276	          0x4889ee	                            mov rsi, rbp	      4321	ldlang.c	FUNCTION_98	CALL_4
0x4001279	      0xbf00000000	                              mov edi, 0	      4321	ldlang.c	FUNCTION_98	CALL_4
0x400127e	      0xb800000000	                              mov eax, 0	      4321	ldlang.c	FUNCTION_98	CALL_4
0x4001283	      0xe800000000	                          call 0x4001288	      4321	ldlang.c	FUNCTION_98	CALL_4
0x4001288	      0x498b442418	            mov rax, qword [r12 + 0x18] 	      4323	ldlang.c	FUNCTION_98	IF_3
0x400128d	        0x83781007	               cmp dword [rax + 0x10], 7	      4323	ldlang.c	FUNCTION_98	IF_3
0x4001291	            0x740f	                            je 0x40012a2	      4323	ldlang.c	FUNCTION_98	IF_3
0x4001293	      0xe800000000	                          call 0x4001298	      4325	ldlang.c	FUNCTION_98	IF_3	CALL_5
0x4001298	      0x498b7c2418	            mov rdi, qword [r12 + 0x18] 	      4326	ldlang.c	FUNCTION_98	IF_3	CALL_6
0x400129d	      0xe800000000	                          call 0x40012a2	      4326	ldlang.c	FUNCTION_98	IF_3	CALL_6
0x40012a2	      0xe800000000	                          call 0x40012a7	      4329	ldlang.c	FUNCTION_98	CALL_7
0x40012a7	    0x8b0d00000000	            mov ecx, dword [0x040012ad] 	      4331	ldlang.c	FUNCTION_98
0x40012ad	          0x48d3eb	                             shr rbx, cl	      4331	ldlang.c	FUNCTION_98
0x40012b0	        0x488d042b	                    lea rax, [rbx + rbp]	      4331	ldlang.c	FUNCTION_98
0x40012b4	    0x488905000000	            mov qword [0x040012bb], rax 	      4331	ldlang.c	FUNCTION_98
0x40012bb	      0xe98c050000	                           jmp 0x400184c	      4331	ldlang.c	FUNCTION_98
0x40012c0	      0xe8a7f4ffff	                       call sym.init_opb	      4354	ldlang.c	FUNCTION_100	CALL_1
0x40012c5	      0xbb10000000	                           mov ebx, 0x10	      4354	ldlang.c	FUNCTION_100	CALL_1
0x40012ca	      0xe800000000	                          call 0x40012cf	      4356	ldlang.c	FUNCTION_100	CALL_2
0x40012cf	          0x83eb01	                              sub ebx, 1	      4355	ldlang.c	FUNCTION_100	FOR_1
0x40012d2	            0x75f6	                           jne 0x40012ca	      4355	ldlang.c	FUNCTION_100	FOR_1
0x40012d4	      0x498b6c2448	            mov rbp, qword [r12 + 0x48] 	      4358	ldlang.c	FUNCTION_100
0x40012d9	      0x498b442440	            mov rax, qword [r12 + 0x40] 	      4359	ldlang.c	FUNCTION_100	IF_1
0x40012de	          0x4885c0	                           test rax, rax	      4359	ldlang.c	FUNCTION_100	IF_1
0x40012e1	            0x7404	                            je 0x40012e7	      4359	ldlang.c	FUNCTION_100	IF_1
0x40012e3	        0x48036828	             add rbp, qword [rax + 0x28]	      4360	ldlang.c	FUNCTION_100	IF_1
0x40012e7	      0x498b7c2418	            mov rdi, qword [r12 + 0x18] 	      4362	ldlang.c	FUNCTION_100	CALL_3
0x40012ec	      0xe800000000	                          call 0x40012f1	      4362	ldlang.c	FUNCTION_100	CALL_3
0x40012f1	            0x89c3	                            mov ebx, eax	      4362	ldlang.c	FUNCTION_100	CALL_3
0x40012f3	      0x498b442418	            mov rax, qword [r12 + 0x18] 	      4364	ldlang.c	FUNCTION_100	CALL_4
0x40012f8	        0x488b4028	            mov rax, qword [rax + 0x28] 	      4364	ldlang.c	FUNCTION_100	CALL_4
0x40012fc	    0x8b0d00000000	            mov ecx, dword [0x04001302] 	      4364	ldlang.c	FUNCTION_100	CALL_4
0x4001302	          0x4889da	                            mov rdx, rbx	      4364	ldlang.c	FUNCTION_100	CALL_4
0x4001305	          0x48d3ea	                             shr rdx, cl	      4364	ldlang.c	FUNCTION_100	CALL_4
0x4001308	          0x4889c1	                            mov rcx, rax	      4364	ldlang.c	FUNCTION_100	CALL_4
0x400130b	          0x4889ee	                            mov rsi, rbp	      4364	ldlang.c	FUNCTION_100	CALL_4
0x400130e	      0xbf00000000	                              mov edi, 0	      4364	ldlang.c	FUNCTION_100	CALL_4
0x4001313	      0xb800000000	                              mov eax, 0	      4364	ldlang.c	FUNCTION_100	CALL_4
0x4001318	      0xe800000000	                          call 0x400131d	      4364	ldlang.c	FUNCTION_100	CALL_4
0x400131d	      0x498b742428	            mov rsi, qword [r12 + 0x28] 	      4366	ldlang.c	FUNCTION_100	IF_2
0x4001322	          0x4885f6	                           test rsi, rsi	      4366	ldlang.c	FUNCTION_100	IF_2
0x4001325	            0x7411	                            je 0x4001338	      4366	ldlang.c	FUNCTION_100	IF_2
0x4001327	      0xbf00000000	                              mov edi, 0	      4367	ldlang.c	FUNCTION_100	CALL_5
0x400132c	      0xb800000000	                              mov eax, 0	      4367	ldlang.c	FUNCTION_100	CALL_5
0x4001331	      0xe800000000	                          call 0x4001336	      4367	ldlang.c	FUNCTION_100	CALL_5
0x4001336	            0xeb17	                           jmp 0x400134f	      4367	ldlang.c	FUNCTION_100	CALL_5
0x4001338	      0x498b442420	            mov rax, qword [r12 + 0x20] 	      4369	ldlang.c	FUNCTION_100	CALL_6
0x400133d	          0x488b30	                    mov rsi, qword [rax]	      4369	ldlang.c	FUNCTION_100	CALL_6
0x4001340	      0xbf00000000	                              mov edi, 0	      4369	ldlang.c	FUNCTION_100	CALL_6
0x4001345	      0xb800000000	                              mov eax, 0	      4369	ldlang.c	FUNCTION_100	CALL_6
0x400134a	      0xe800000000	                          call 0x400134f	      4369	ldlang.c	FUNCTION_100	CALL_6
0x400134f	      0x498b7c2430	            mov rdi, qword [r12 + 0x30] 	      4371	ldlang.c	FUNCTION_100	CALL_7
0x4001354	      0xe800000000	                          call 0x4001359	      4371	ldlang.c	FUNCTION_100	CALL_7
0x4001359	      0xe800000000	                          call 0x400135e	      4373	ldlang.c	FUNCTION_100	CALL_8
0x400135e	    0x8b0d00000000	            mov ecx, dword [0x04001364] 	      4375	ldlang.c	FUNCTION_100
0x4001364	          0x4889d8	                            mov rax, rbx	      4375	ldlang.c	FUNCTION_100
0x4001367	          0x48d3e8	                             shr rax, cl	      4375	ldlang.c	FUNCTION_100
0x400136a	          0x4801e8	                            add rax, rbp	      4375	ldlang.c	FUNCTION_100
0x400136d	    0x488905000000	            mov qword [0x04001374], rax 	      4375	ldlang.c	FUNCTION_100
0x4001374	      0xe9d3040000	                           jmp 0x400184c	      4375	ldlang.c	FUNCTION_100
0x4001379	        0x488b7f10	            mov rdi, qword [rdi + 0x10] 	      4570	ldlang.c	FUNCTION_105	SWITCH_1	CALL_12
0x400137d	      0xbe00000000	                              mov esi, 0	      4570	ldlang.c	FUNCTION_105	SWITCH_1	CALL_12
0x4001382	      0xe839f4ffff	            call sym.print_input_section	      4570	ldlang.c	FUNCTION_105	SWITCH_1	CALL_12
0x4001387	      0xe9c0040000	                           jmp 0x400184c	      4571	ldlang.c	FUNCTION_105	SWITCH_1
0x400138c	      0xe8dbf3ffff	                       call sym.init_opb	      4384	ldlang.c	FUNCTION_101	CALL_1
0x4001391	      0xbf00000000	                              mov edi, 0	      4385	ldlang.c	FUNCTION_101	CALL_2
0x4001396	      0xb800000000	                              mov eax, 0	      4385	ldlang.c	FUNCTION_101	CALL_2
0x400139b	      0xe800000000	                          call 0x40013a0	      4385	ldlang.c	FUNCTION_101	CALL_2
0x40013a0	      0xbb09000000	                              mov ebx, 9	      4385	ldlang.c	FUNCTION_101	CALL_2
0x40013a5	      0xe800000000	                          call 0x40013aa	      4390	ldlang.c	FUNCTION_101	WHILE_1	CALL_3
0x40013aa	          0x83eb01	                              sub ebx, 1	      4388	ldlang.c	FUNCTION_101	WHILE_1
0x40013ad	            0x75f6	                           jne 0x40013a5	      4388	ldlang.c	FUNCTION_101	WHILE_1
0x40013af	      0x4d8b6c2410	            mov r13, qword [r12 + 0x10] 	      4394	ldlang.c	FUNCTION_101
0x40013b4	      0x498b442420	            mov rax, qword [r12 + 0x20] 	      4395	ldlang.c	FUNCTION_101	IF_1
0x40013b9	          0x4885c0	                           test rax, rax	      4395	ldlang.c	FUNCTION_101	IF_1
0x40013bc	     0xf843f040000	                            je 0x4001801	      4395	ldlang.c	FUNCTION_101	IF_1
0x40013c2	          0x4c89ee	                            mov rsi, r13	      4396	ldlang.c	FUNCTION_101	IF_1
0x40013c5	        0x48037028	             add rsi, qword [rax + 0x28]	      4396	ldlang.c	FUNCTION_101	IF_1
0x40013c9	          0x4989f5	                            mov r13, rsi	      4396	ldlang.c	FUNCTION_101	IF_1
0x40013cc	    0x8b0d00000000	            mov ecx, dword [0x040013d2] 	      4397	ldlang.c	FUNCTION_101	CALL_4
0x40013d2	      0x498b542418	            mov rdx, qword [r12 + 0x18] 	      4397	ldlang.c	FUNCTION_101	CALL_4
0x40013d7	          0x48d3ea	                             shr rdx, cl	      4397	ldlang.c	FUNCTION_101	CALL_4
0x40013da	      0xbf00000000	                              mov edi, 0	      4397	ldlang.c	FUNCTION_101	CALL_4
0x40013df	      0xb800000000	                              mov eax, 0	      4397	ldlang.c	FUNCTION_101	CALL_4
0x40013e4	      0xe800000000	                          call 0x40013e9	      4397	ldlang.c	FUNCTION_101	CALL_4
0x40013e9	      0x498b5c2428	            mov rbx, qword [r12 + 0x28] 	      4399	ldlang.c	FUNCTION_101	IF_2
0x40013ee	          0x488b2b	                    mov rbp, qword [rbx]	      4399	ldlang.c	FUNCTION_101	IF_2
0x40013f1	          0x4885ed	                           test rbp, rbp	      4399	ldlang.c	FUNCTION_101	IF_2
0x40013f4	            0x742c	                            je 0x4001422	      4399	ldlang.c	FUNCTION_101	IF_2
0x40013f6	        0x4883c308	                              add rbx, 8	      4403	ldlang.c	FUNCTION_101	IF_2	FOR_1
0x40013fa	           0xfb60b	                   movzx ecx, byte [rbx]	        97	stdio2.h	CALL_22
0x40013fd	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_22
0x4001402	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_22
0x4001407	    0x488b3d000000	            mov rdi, qword [0x0400140e] 	        97	stdio2.h	CALL_22
0x400140e	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_22
0x4001413	      0xe800000000	                          call 0x4001418	        97	stdio2.h	CALL_22
0x4001418	        0x4883c301	                              add rbx, 1	      4403	ldlang.c	FUNCTION_101	IF_2	FOR_1
0x400141c	        0x4883ed01	                              sub rbp, 1	      4403	ldlang.c	FUNCTION_101	IF_2	FOR_1
0x4001420	            0x75d8	                           jne 0x40013fa	      4403	ldlang.c	FUNCTION_101	IF_2	FOR_1
0x4001422	      0xe800000000	                          call 0x4001427	      4407	ldlang.c	FUNCTION_101	CALL_5
0x4001427	      0x498b442418	            mov rax, qword [r12 + 0x18] 	      4409	ldlang.c	FUNCTION_101
0x400142c	    0x8b0d00000000	            mov ecx, dword [0x04001432] 	      4409	ldlang.c	FUNCTION_101
0x4001432	          0x48d3e8	                             shr rax, cl	      4409	ldlang.c	FUNCTION_101
0x4001435	          0x4901c5	                            add r13, rax	      4409	ldlang.c	FUNCTION_101
0x4001438	    0x4c892d000000	            mov qword [0x0400143f], r13 	      4409	ldlang.c	FUNCTION_101
0x400143f	      0xe908040000	                           jmp 0x400184c	      4409	ldlang.c	FUNCTION_101
0x4001444	    0x483b3d000000	            cmp rdi, qword [0x0400144b] 	      3988	ldlang.c	FUNCTION_90	IF_1
0x400144b	     0xf84d9000000	                            je 0x400152a	      3988	ldlang.c	FUNCTION_90	IF_1
0x4001451	        0x488b6f38	            mov rbp, qword [rdi + 0x38] 	      3985	ldlang.c	FUNCTION_90
0x4001455	        0x488b7730	            mov rsi, qword [rdi + 0x30] 	      3990	ldlang.c	FUNCTION_90	IF_1	CALL_1
0x4001459	      0xbf00000000	                              mov edi, 0	      3990	ldlang.c	FUNCTION_90	IF_1	CALL_1
0x400145e	      0xb800000000	                              mov eax, 0	      3990	ldlang.c	FUNCTION_90	IF_1	CALL_1
0x4001463	      0xe800000000	                          call 0x4001468	      3990	ldlang.c	FUNCTION_90	IF_1	CALL_1
0x4001468	          0x4885ed	                           test rbp, rbp	      3992	ldlang.c	FUNCTION_90	IF_1	IF_2
0x400146b	     0xf84b4000000	                            je 0x4001525	      3992	ldlang.c	FUNCTION_90	IF_1	IF_2
0x4001471	        0x488b4528	            mov rax, qword [rbp + 0x28] 	      3994	ldlang.c	FUNCTION_90	IF_1	IF_2
0x4001475	    0x488905000000	            mov qword [0x0400147c], rax 	      3994	ldlang.c	FUNCTION_90	IF_1	IF_2
0x400147c	      0x498b7c2430	            mov rdi, qword [r12 + 0x30] 	      3996	ldlang.c	FUNCTION_90	IF_1	IF_2	CALL_2
0x4001481	      0xb800000000	                              mov eax, 0	      3996	ldlang.c	FUNCTION_90	IF_1	IF_2	CALL_2
0x4001486	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      3996	ldlang.c	FUNCTION_90	IF_1	IF_2	CALL_2
0x400148d	            0xf2ae	              repne scasb al, byte [rdi]	      3996	ldlang.c	FUNCTION_90	IF_1	IF_2	CALL_2
0x400148f	          0x4889c8	                            mov rax, rcx	      3996	ldlang.c	FUNCTION_90	IF_1	IF_2	CALL_2
0x4001492	          0x48f7d0	                                 not rax	      3996	ldlang.c	FUNCTION_90	IF_1	IF_2	CALL_2
0x4001495	        0x4883e801	                              sub rax, 1	      3996	ldlang.c	FUNCTION_90	IF_1	IF_2	CALL_2
0x4001499	            0x89c3	                            mov ebx, eax	      3996	ldlang.c	FUNCTION_90	IF_1	IF_2	CALL_2
0x400149b	          0x83f80e	                            cmp eax, 0xe	      3997	ldlang.c	FUNCTION_90	IF_1	IF_2	IF_3
0x400149e	            0x7e0c	                           jle 0x40014ac	      3997	ldlang.c	FUNCTION_90	IF_1	IF_2	IF_3
0x40014a0	      0xe800000000	                          call 0x40014a5	      3999	ldlang.c	FUNCTION_90	IF_1	IF_2	IF_3	CALL_3
0x40014a5	      0xbb00000000	                              mov ebx, 0	      4000	ldlang.c	FUNCTION_90	IF_1	IF_2	IF_3
0x40014aa	            0xeb05	                           jmp 0x40014b1	      4000	ldlang.c	FUNCTION_90	IF_1	IF_2	IF_3
0x40014ac	          0x83f80f	                            cmp eax, 0xf	      4002	ldlang.c	FUNCTION_90	IF_1	IF_2	WHILE_1
0x40014af	            0x7f0d	                            jg 0x40014be	      4002	ldlang.c	FUNCTION_90	IF_1	IF_2	WHILE_1
0x40014b1	      0xe800000000	                          call 0x40014b6	      4004	ldlang.c	FUNCTION_90	IF_1	IF_2	WHILE_1	CALL_4
0x40014b6	          0x83c301	                              add ebx, 1	      4005	ldlang.c	FUNCTION_90	IF_1	IF_2	WHILE_1
0x40014b9	          0x83fb0f	                            cmp ebx, 0xf	      4002	ldlang.c	FUNCTION_90	IF_1	IF_2	WHILE_1
0x40014bc	            0x7ef3	                           jle 0x40014b1	      4002	ldlang.c	FUNCTION_90	IF_1	IF_2	WHILE_1
0x40014be	    0x8b0d00000000	            mov ecx, dword [0x040014c4] 	      4008	ldlang.c	FUNCTION_90	IF_1	IF_2	CALL_5
0x40014c4	        0x488b5538	            mov rdx, qword [rbp + 0x38] 	      4008	ldlang.c	FUNCTION_90	IF_1	IF_2	CALL_5
0x40014c8	          0x48d3ea	                             shr rdx, cl	      4008	ldlang.c	FUNCTION_90	IF_1	IF_2	CALL_5
0x40014cb	        0x488b7528	            mov rsi, qword [rbp + 0x28] 	      4008	ldlang.c	FUNCTION_90	IF_1	IF_2	CALL_5
0x40014cf	      0xbf00000000	                              mov edi, 0	      4008	ldlang.c	FUNCTION_90	IF_1	IF_2	CALL_5
0x40014d4	      0xb800000000	                              mov eax, 0	      4008	ldlang.c	FUNCTION_90	IF_1	IF_2	CALL_5
0x40014d9	      0xe800000000	                          call 0x40014de	      4008	ldlang.c	FUNCTION_90	IF_1	IF_2	CALL_5
0x40014de	        0x488b5d30	            mov rbx, qword [rbp + 0x30] 	      4010	ldlang.c	FUNCTION_90	IF_1	IF_2	IF_4
0x40014e2	        0x48395d28	            cmp qword [rbp + 0x28], rbx 	      4010	ldlang.c	FUNCTION_90	IF_1	IF_2	IF_4
0x40014e6	            0x7424	                            je 0x400150c	      4010	ldlang.c	FUNCTION_90	IF_1	IF_2	IF_4
0x40014e8	      0xba05000000	                              mov edx, 5	      4011	ldlang.c	FUNCTION_90	IF_1	IF_2	CALL_7
0x40014ed	      0xbe00000000	                              mov esi, 0	      4011	ldlang.c	FUNCTION_90	IF_1	IF_2	CALL_7
0x40014f2	      0xbf00000000	                              mov edi, 0	      4011	ldlang.c	FUNCTION_90	IF_1	IF_2	CALL_7
0x40014f7	      0xe800000000	                          call 0x40014fc	      4011	ldlang.c	FUNCTION_90	IF_1	IF_2	CALL_7
0x40014fc	          0x4889de	                            mov rsi, rbx	      4011	ldlang.c	FUNCTION_90	IF_1	IF_2	CALL_7
0x40014ff	          0x4889c7	                            mov rdi, rax	      4011	ldlang.c	FUNCTION_90	IF_1	IF_2	CALL_7
0x4001502	      0xb800000000	                              mov eax, 0	      4011	ldlang.c	FUNCTION_90	IF_1	IF_2	CALL_7
0x4001507	      0xe800000000	                          call 0x400150c	      4011	ldlang.c	FUNCTION_90	IF_1	IF_2	CALL_7
0x400150c	      0x498b7c2468	            mov rdi, qword [r12 + 0x68] 	      4013	ldlang.c	FUNCTION_90	IF_1	IF_2	IF_5
0x4001511	          0x4885ff	                           test rdi, rdi	      4013	ldlang.c	FUNCTION_90	IF_1	IF_2	IF_5
0x4001514	            0x740f	                            je 0x4001525	      4013	ldlang.c	FUNCTION_90	IF_1	IF_2	IF_5
0x4001516	      0xba00000000	                              mov edx, 0	      4014	ldlang.c	FUNCTION_90	IF_1	IF_2	IF_5	CALL_8
0x400151b	      0xbe00000000	                              mov esi, 0	      4014	ldlang.c	FUNCTION_90	IF_1	IF_2	IF_5	CALL_8
0x4001520	      0xe800000000	                          call 0x4001525	      4014	ldlang.c	FUNCTION_90	IF_1	IF_2	IF_5	CALL_8
0x4001525	      0xe800000000	                          call 0x400152a	      4018	ldlang.c	FUNCTION_90	IF_1	CALL_9
0x400152a	      0x498b7c2410	            mov rdi, qword [r12 + 0x10] 	      4021	ldlang.c	FUNCTION_90	CALL_10
0x400152f	          0x4c89e6	                            mov rsi, r12	      4021	ldlang.c	FUNCTION_90	CALL_10
0x4001532	      0xe81e030000	           call sym.print_statement_list	      4021	ldlang.c	FUNCTION_90	CALL_10
0x4001537	      0xe910030000	                           jmp 0x400184c	      4021	ldlang.c	FUNCTION_90	CALL_10
0x400153c	      0xbb10000000	                           mov ebx, 0x10	      4535	ldlang.c	FUNCTION_105	SWITCH_1
0x4001541	      0xe800000000	                          call 0x4001546	      4035	ldlang.c	FUNCTION_91	CALL_1
0x4001546	          0x83eb01	                              sub ebx, 1	      4034	ldlang.c	FUNCTION_91	FOR_1
0x4001549	            0x75f6	                           jne 0x4001541	      4034	ldlang.c	FUNCTION_91	FOR_1
0x400154b	      0x498b442410	            mov rax, qword [r12 + 0x10] 	      4037	ldlang.c	FUNCTION_91	IF_1
0x4001550	        0x83781008	               cmp dword [rax + 0x10], 8	      4037	ldlang.c	FUNCTION_91	IF_1
0x4001554	            0x7519	                           jne 0x400156f	      4037	ldlang.c	FUNCTION_91	IF_1
0x4001556	        0x488b7818	            mov rdi, qword [rax + 0x18] 	      4040	ldlang.c	FUNCTION_91	IF_1
0x400155a	        0x498b7538	            mov rsi, qword [r13 + 0x38] 	      4052	ldlang.c	FUNCTION_91
0x400155e	      0xbb00000000	                              mov ebx, 0	      4039	ldlang.c	FUNCTION_91	IF_1
0x4001563	          0x4885f6	                           test rsi, rsi	      4053	ldlang.c	FUNCTION_91	IF_3
0x4001566	            0x7547	                           jne 0x40015af	      4053	ldlang.c	FUNCTION_91	IF_3
0x4001568	      0xbe00000000	                              mov esi, 0	      4054	ldlang.c	FUNCTION_91	IF_3
0x400156d	            0xeb40	                           jmp 0x40015af	      4054	ldlang.c	FUNCTION_91	IF_3
0x400156f	        0x488b4018	            mov rax, qword [rax + 0x18] 	      4044	ldlang.c	FUNCTION_91	ELSE_1
0x4001573	          0x80382e	                    cmp byte [rax], 0x2e	      4046	ldlang.c	FUNCTION_91	ELSE_1
0x4001576	     0xf85bf020000	                           jne 0x400183b	      4046	ldlang.c	FUNCTION_91	ELSE_1
0x400157c	        0x80780100	                   cmp byte [rax + 1], 0	      4046	ldlang.c	FUNCTION_91	ELSE_1
0x4001580	     0xf85b5020000	                           jne 0x400183b	      4046	ldlang.c	FUNCTION_91	ELSE_1
0x4001586	      0xbb01000000	                              mov ebx, 1	      4046	ldlang.c	FUNCTION_91	ELSE_1
0x400158b	      0x498b442410	            mov rax, qword [r12 + 0x10] 	      4049	ldlang.c	FUNCTION_91	ELSE_1
0x4001590	        0x488b7820	            mov rdi, qword [rax + 0x20] 	      4049	ldlang.c	FUNCTION_91	ELSE_1
0x4001594	        0x498b7538	            mov rsi, qword [r13 + 0x38] 	      4052	ldlang.c	FUNCTION_91
0x4001598	          0x4885f6	                           test rsi, rsi	      4054	ldlang.c	FUNCTION_91	IF_3
0x400159b	      0xb800000000	                              mov eax, 0	      4054	ldlang.c	FUNCTION_91	IF_3
0x40015a0	        0x480f44f0	                          cmove rsi, rax	      4054	ldlang.c	FUNCTION_91	IF_3
0x40015a4	      0x498b442410	            mov rax, qword [r12 + 0x10] 	      4056	ldlang.c	FUNCTION_91	IF_4
0x40015a9	        0x83781005	               cmp dword [rax + 0x10], 5	      4056	ldlang.c	FUNCTION_91	IF_4
0x40015ad	            0x7418	                            je 0x40015c7	      4056	ldlang.c	FUNCTION_91	IF_4
0x40015af	      0xba00000000	                              mov edx, 0	      4057	ldlang.c	FUNCTION_91	CALL_2
0x40015b4	      0xe800000000	                          call 0x40015b9	      4057	ldlang.c	FUNCTION_91	CALL_2
0x40015b9	    0x833d00000000	               cmp dword [0x040015c0], 0	      4061	ldlang.c	FUNCTION_91	ELSE_2	IF_5
0x40015c0	            0x7514	                           jne 0x40015d6	      4061	ldlang.c	FUNCTION_91	ELSE_2	IF_5
0x40015c2	      0xe9c0000000	                           jmp 0x4001687	      4061	ldlang.c	FUNCTION_91	ELSE_2	IF_5
0x40015c7	    0xc70500000000	               mov dword [0x040015d1], 0	      4059	ldlang.c	FUNCTION_91	ELSE_2
0x40015d1	      0xe9b1000000	                           jmp 0x4001687	      4059	ldlang.c	FUNCTION_91	ELSE_2
0x40015d6	      0x498b442410	            mov rax, qword [r12 + 0x10] 	      4065	ldlang.c	FUNCTION_91	ELSE_2	IF_5	IF_6
0x40015db	        0x83781008	               cmp dword [rax + 0x10], 8	      4066	ldlang.c	FUNCTION_91	ELSE_2	IF_5	IF_6
0x40015df	            0x740e	                            je 0x40015ef	      4066	ldlang.c	FUNCTION_91	ELSE_2	IF_5	IF_6
0x40015e1	            0x85db	                           test ebx, ebx	      4066	ldlang.c	FUNCTION_91	ELSE_2	IF_5	IF_6
0x40015e3	            0x750a	                           jne 0x40015ef	      4066	ldlang.c	FUNCTION_91	ELSE_2	IF_5	IF_6
0x40015e5	    0x48833d000000	               cmp qword [0x040015ed], 0	      4067	ldlang.c	FUNCTION_91	ELSE_2	IF_5	IF_6
0x40015ed	            0x743d	                            je 0x400162c	      4067	ldlang.c	FUNCTION_91	ELSE_2	IF_5	IF_6
0x40015ef	    0x488b2d000000	            mov rbp, qword [0x040015f6] 	      4069	ldlang.c	FUNCTION_91	ELSE_2	IF_5	IF_6
0x40015f6	    0x488b05000000	            mov rax, qword [0x040015fd] 	      4071	ldlang.c	FUNCTION_91	ELSE_2	IF_5	IF_6	IF_7
0x40015fd	          0x4885c0	                           test rax, rax	      4071	ldlang.c	FUNCTION_91	ELSE_2	IF_5	IF_6	IF_7
0x4001600	            0x7404	                            je 0x4001606	      4071	ldlang.c	FUNCTION_91	ELSE_2	IF_5	IF_6	IF_7
0x4001602	        0x48036828	             add rbp, qword [rax + 0x28]	      4072	ldlang.c	FUNCTION_91	ELSE_2	IF_5	IF_6	IF_7
0x4001606	          0x4889ee	                            mov rsi, rbp	      4074	ldlang.c	FUNCTION_91	ELSE_2	IF_5	IF_6	CALL_3
0x4001609	      0xbf00000000	                              mov edi, 0	      4074	ldlang.c	FUNCTION_91	ELSE_2	IF_5	IF_6	CALL_3
0x400160e	      0xb800000000	                              mov eax, 0	      4074	ldlang.c	FUNCTION_91	ELSE_2	IF_5	IF_6	CALL_3
0x4001613	      0xe800000000	                          call 0x4001618	      4074	ldlang.c	FUNCTION_91	ELSE_2	IF_5	IF_6	CALL_3
0x4001618	            0x85db	                           test ebx, ebx	      4075	ldlang.c	FUNCTION_91	ELSE_2	IF_5	IF_6	IF_8
0x400161a	     0xf84a1000000	                            je 0x40016c1	      4075	ldlang.c	FUNCTION_91	ELSE_2	IF_5	IF_6	IF_8
0x4001620	    0x48892d000000	            mov qword [0x04001627], rbp 	      4076	ldlang.c	FUNCTION_91	ELSE_2	IF_5	IF_6	IF_8
0x4001627	      0xe995000000	                           jmp 0x40016c1	      4076	ldlang.c	FUNCTION_91	ELSE_2	IF_5	IF_6	IF_8
0x400162c	        0x488b7018	            mov rsi, qword [rax + 0x18] 	      4082	ldlang.c	FUNCTION_91	ELSE_2	IF_5	ELSE_3	CALL_4
0x4001630	    0x41b801000000	                              mov r8d, 1	      4082	ldlang.c	FUNCTION_91	ELSE_2	IF_5	ELSE_3	CALL_4
0x4001636	      0xb900000000	                              mov ecx, 0	      4082	ldlang.c	FUNCTION_91	ELSE_2	IF_5	ELSE_3	CALL_4
0x400163b	      0xba00000000	                              mov edx, 0	      4082	ldlang.c	FUNCTION_91	ELSE_2	IF_5	ELSE_3	CALL_4
0x4001640	    0x488b3d000000	            mov rdi, qword [0x04001647] 	      4082	ldlang.c	FUNCTION_91	ELSE_2	IF_5	ELSE_3	CALL_4
0x4001647	      0xe800000000	                          call 0x400164c	      4082	ldlang.c	FUNCTION_91	ELSE_2	IF_5	ELSE_3	CALL_4
0x400164c	          0x4885c0	                           test rax, rax	      4084	ldlang.c	FUNCTION_91	ELSE_2	IF_5	ELSE_3	IF_9
0x400164f	            0x7425	                            je 0x4001676	      4084	ldlang.c	FUNCTION_91	ELSE_2	IF_5	ELSE_3	IF_9
0x4001651	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      4087	ldlang.c	FUNCTION_91	ELSE_2	IF_5	ELSE_3	IF_9
0x4001655	        0x488b4a68	            mov rcx, qword [rdx + 0x68] 	      4087	ldlang.c	FUNCTION_91	ELSE_2	IF_5	ELSE_3	IF_9
0x4001659	        0x488b7128	            mov rsi, qword [rcx + 0x28] 	      4087	ldlang.c	FUNCTION_91	ELSE_2	IF_5	ELSE_3	IF_9
0x400165d	        0x48037030	             add rsi, qword [rax + 0x30]	      4087	ldlang.c	FUNCTION_91	ELSE_2	IF_5	ELSE_3	IF_9
0x4001661	        0x48037260	             add rsi, qword [rdx + 0x60]	      4090	ldlang.c	FUNCTION_91	ELSE_2	IF_5	ELSE_3	IF_9	CALL_5
0x4001665	      0xbf00000000	                              mov edi, 0	      4090	ldlang.c	FUNCTION_91	ELSE_2	IF_5	ELSE_3	IF_9	CALL_5
0x400166a	      0xb800000000	                              mov eax, 0	      4090	ldlang.c	FUNCTION_91	ELSE_2	IF_5	ELSE_3	IF_9	CALL_5
0x400166f	      0xe800000000	                          call 0x4001674	      4090	ldlang.c	FUNCTION_91	ELSE_2	IF_5	ELSE_3	IF_9	CALL_5
0x4001674	            0xeb4b	                           jmp 0x40016c1	      4090	ldlang.c	FUNCTION_91	ELSE_2	IF_5	ELSE_3	IF_9	CALL_5
0x4001676	      0xbf00000000	                              mov edi, 0	      4093	ldlang.c	FUNCTION_91	ELSE_2	IF_5	ELSE_3	CALL_6
0x400167b	      0xb800000000	                              mov eax, 0	      4093	ldlang.c	FUNCTION_91	ELSE_2	IF_5	ELSE_3	CALL_6
0x4001680	      0xe800000000	                          call 0x4001685	      4093	ldlang.c	FUNCTION_91	ELSE_2	IF_5	ELSE_3	CALL_6
0x4001685	            0xeb3a	                           jmp 0x40016c1	      4093	ldlang.c	FUNCTION_91	ELSE_2	IF_5	ELSE_3	CALL_6
0x4001687	      0x498b442410	            mov rax, qword [r12 + 0x10] 	      4098	ldlang.c	FUNCTION_91	ELSE_5	IF_10
0x400168c	        0x83781005	               cmp dword [rax + 0x10], 5	      4098	ldlang.c	FUNCTION_91	ELSE_5	IF_10
0x4001690	            0x7511	                           jne 0x40016a3	      4098	ldlang.c	FUNCTION_91	ELSE_5	IF_10
0x4001692	      0xbf00000000	                              mov edi, 0	      4099	ldlang.c	FUNCTION_91	ELSE_5	CALL_7
0x4001697	      0xb800000000	                              mov eax, 0	      4099	ldlang.c	FUNCTION_91	ELSE_5	CALL_7
0x400169c	      0xe800000000	                          call 0x40016a1	      4099	ldlang.c	FUNCTION_91	ELSE_5	CALL_7
0x40016a1	            0xeb0f	                           jmp 0x40016b2	      4099	ldlang.c	FUNCTION_91	ELSE_5	CALL_7
0x40016a3	      0xbf00000000	                              mov edi, 0	      4101	ldlang.c	FUNCTION_91	ELSE_5	CALL_8
0x40016a8	      0xb800000000	                              mov eax, 0	      4101	ldlang.c	FUNCTION_91	ELSE_5	CALL_8
0x40016ad	      0xe800000000	                          call 0x40016b2	      4101	ldlang.c	FUNCTION_91	ELSE_5	CALL_8
0x40016b2	      0xbf00000000	                              mov edi, 0	      4103	ldlang.c	FUNCTION_91	ELSE_5	CALL_9
0x40016b7	      0xb800000000	                              mov eax, 0	      4103	ldlang.c	FUNCTION_91	ELSE_5	CALL_9
0x40016bc	      0xe800000000	                          call 0x40016c1	      4103	ldlang.c	FUNCTION_91	ELSE_5	CALL_9
0x40016c1	    0x48c705000000	               mov qword [0x040016cc], 0	      4106	ldlang.c	FUNCTION_91
0x40016cc	      0xbf00000000	                              mov edi, 0	      4108	ldlang.c	FUNCTION_91	CALL_10
0x40016d1	      0xb800000000	                              mov eax, 0	      4108	ldlang.c	FUNCTION_91	CALL_10
0x40016d6	      0xe800000000	                          call 0x40016db	      4108	ldlang.c	FUNCTION_91	CALL_10
0x40016db	      0x498b7c2410	            mov rdi, qword [r12 + 0x10] 	      4109	ldlang.c	FUNCTION_91	CALL_11
0x40016e0	      0xe800000000	                          call 0x40016e5	      4109	ldlang.c	FUNCTION_91	CALL_11
0x40016e5	      0xe800000000	                          call 0x40016ea	      4110	ldlang.c	FUNCTION_91	CALL_12
0x40016ea	      0xe95d010000	                           jmp 0x400184c	      4110	ldlang.c	FUNCTION_91	CALL_12
0x40016ef	        0x488b4f10	            mov rcx, qword [rdi + 0x10] 	        97	stdio2.h	CALL_22
0x40016f3	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_22
0x40016f8	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_22
0x40016fd	    0x488b3d000000	            mov rdi, qword [0x04001704] 	        97	stdio2.h	CALL_22
0x4001704	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_22
0x4001709	      0xe800000000	                          call 0x400170e	        97	stdio2.h	CALL_22
0x400170e	      0xe939010000	                           jmp 0x400184c	        97	stdio2.h	CALL_22
0x4001713	        0x488b7710	            mov rsi, qword [rdi + 0x10] 	      4585	ldlang.c	FUNCTION_105	SWITCH_1	CALL_16
0x4001717	      0xbf00000000	                              mov edi, 0	      4585	ldlang.c	FUNCTION_105	SWITCH_1	CALL_16
0x400171c	      0xb800000000	                              mov eax, 0	      4585	ldlang.c	FUNCTION_105	SWITCH_1	CALL_16
0x4001721	      0xe800000000	                          call 0x4001726	      4585	ldlang.c	FUNCTION_105	SWITCH_1	CALL_16
0x4001726	    0x488b35000000	            mov rsi, qword [0x0400172d] 	      4586	ldlang.c	FUNCTION_105	SWITCH_1	IF_3
0x400172d	          0x4885f6	                           test rsi, rsi	      4586	ldlang.c	FUNCTION_105	SWITCH_1	IF_3
0x4001730	            0x740f	                            je 0x4001741	      4586	ldlang.c	FUNCTION_105	SWITCH_1	IF_3
0x4001732	      0xbf00000000	                              mov edi, 0	      4587	ldlang.c	FUNCTION_105	SWITCH_1	CALL_17
0x4001737	      0xb800000000	                              mov eax, 0	      4587	ldlang.c	FUNCTION_105	SWITCH_1	CALL_17
0x400173c	      0xe800000000	                          call 0x4001741	      4587	ldlang.c	FUNCTION_105	SWITCH_1	CALL_17
0x4001741	      0xbf00000000	                              mov edi, 0	      4588	ldlang.c	FUNCTION_105	SWITCH_1	CALL_18
0x4001746	      0xb800000000	                              mov eax, 0	      4588	ldlang.c	FUNCTION_105	SWITCH_1	CALL_18
0x400174b	      0xe800000000	                          call 0x4001750	      4588	ldlang.c	FUNCTION_105	SWITCH_1	CALL_18
0x4001750	      0xe9f7000000	                           jmp 0x400184c	      4589	ldlang.c	FUNCTION_105	SWITCH_1
0x4001755	        0x488b4f10	            mov rcx, qword [rdi + 0x10] 	      4116	ldlang.c	FUNCTION_92	IF_1
0x4001759	          0x4885c9	                           test rcx, rcx	      4116	ldlang.c	FUNCTION_92	IF_1
0x400175c	     0xf84ea000000	                            je 0x400184c	      4116	ldlang.c	FUNCTION_92	IF_1
0x4001762	        0x488b4720	            mov rax, qword [rdi + 0x20] 	      4117	ldlang.c	FUNCTION_92	IF_1
0x4001766	          0x4885c0	                           test rax, rax	      4117	ldlang.c	FUNCTION_92	IF_1
0x4001769	            0x740a	                            je 0x4001775	      4117	ldlang.c	FUNCTION_92	IF_1
0x400176b	        0xf6404602	               test byte [rax + 0x46], 2	      4118	ldlang.c	FUNCTION_92	IF_1
0x400176f	     0xf85d7000000	                           jne 0x400184c	      4118	ldlang.c	FUNCTION_92	IF_1
0x4001775	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_22
0x400177a	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_22
0x400177f	    0x488b3d000000	            mov rdi, qword [0x04001786] 	        97	stdio2.h	CALL_22
0x4001786	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_22
0x400178b	      0xe800000000	                          call 0x4001790	        97	stdio2.h	CALL_22
0x4001790	      0xe9b7000000	                           jmp 0x400184c	        97	stdio2.h	CALL_22
0x4001795	    0x488b0d000000	            mov rcx, qword [0x0400179c] 	        97	stdio2.h	CALL_22
0x400179c	      0xba0c000000	                            mov edx, 0xc	        97	stdio2.h	CALL_22
0x40017a1	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_22
0x40017a6	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_22
0x40017ab	      0xe800000000	                          call 0x40017b0	        97	stdio2.h	CALL_22
0x40017b0	      0x498b7c2410	            mov rdi, qword [r12 + 0x10] 	      4510	ldlang.c	FUNCTION_103	CALL_1
0x40017b5	          0x4c89ee	                            mov rsi, r13	      4510	ldlang.c	FUNCTION_103	CALL_1
0x40017b8	      0xe898000000	           call sym.print_statement_list	      4510	ldlang.c	FUNCTION_103	CALL_1
0x40017bd	    0x488b0d000000	            mov rcx, qword [0x040017c4] 	        97	stdio2.h	CALL_22
0x40017c4	      0xba0a000000	                            mov edx, 0xa	        97	stdio2.h	CALL_22
0x40017c9	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_22
0x40017ce	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_22
0x40017d3	      0xe800000000	                          call 0x40017d8	        97	stdio2.h	CALL_22
0x40017d8	            0xeb72	                           jmp 0x400184c	        97	stdio2.h	CALL_22
0x40017da	        0x488b5710	            mov rdx, qword [rdi + 0x10] 	      4597	ldlang.c	FUNCTION_105	SWITCH_1	CALL_21
0x40017de	        0x837f1800	               cmp dword [rdi + 0x18], 0	      4597	ldlang.c	FUNCTION_105	SWITCH_1	CALL_21
0x40017e2	      0xbe00000000	                              mov esi, 0	      4597	ldlang.c	FUNCTION_105	SWITCH_1	CALL_21
0x40017e7	      0xb800000000	                              mov eax, 0	      4597	ldlang.c	FUNCTION_105	SWITCH_1	CALL_21
0x40017ec	        0x480f45f0	                         cmovne rsi, rax	      4597	ldlang.c	FUNCTION_105	SWITCH_1	CALL_21
0x40017f0	      0xbf00000000	                              mov edi, 0	      4597	ldlang.c	FUNCTION_105	SWITCH_1	CALL_21
0x40017f5	      0xb800000000	                              mov eax, 0	      4597	ldlang.c	FUNCTION_105	SWITCH_1	CALL_21
0x40017fa	      0xe800000000	                          call 0x40017ff	      4597	ldlang.c	FUNCTION_105	SWITCH_1	CALL_21
0x40017ff	            0xeb4b	                           jmp 0x400184c	      4602	ldlang.c	FUNCTION_105
0x4001801	    0x8b0d00000000	            mov ecx, dword [0x04001807] 	      4397	ldlang.c	FUNCTION_101	CALL_4
0x4001807	      0x498b542418	            mov rdx, qword [r12 + 0x18] 	      4397	ldlang.c	FUNCTION_101	CALL_4
0x400180c	          0x48d3ea	                             shr rdx, cl	      4397	ldlang.c	FUNCTION_101	CALL_4
0x400180f	          0x4c89ee	                            mov rsi, r13	      4397	ldlang.c	FUNCTION_101	CALL_4
0x4001812	      0xbf00000000	                              mov edi, 0	      4397	ldlang.c	FUNCTION_101	CALL_4
0x4001817	      0xb800000000	                              mov eax, 0	      4397	ldlang.c	FUNCTION_101	CALL_4
0x400181c	      0xe800000000	                          call 0x4001821	      4397	ldlang.c	FUNCTION_101	CALL_4
0x4001821	      0x498b5c2428	            mov rbx, qword [r12 + 0x28] 	      4399	ldlang.c	FUNCTION_101	IF_2
0x4001826	          0x488b2b	                    mov rbp, qword [rbx]	      4399	ldlang.c	FUNCTION_101	IF_2
0x4001829	        0x4883c308	                              add rbx, 8	      4403	ldlang.c	FUNCTION_101	IF_2	FOR_1
0x400182d	          0x4885ed	                           test rbp, rbp	      4399	ldlang.c	FUNCTION_101	IF_2
0x4001830	     0xf85c4fbffff	                           jne 0x40013fa	      4399	ldlang.c	FUNCTION_101	IF_2
0x4001836	      0xe9e7fbffff	                           jmp 0x4001422	      4399	ldlang.c	FUNCTION_101	IF_2
0x400183b	    0x488905000000	            mov qword [0x04001842], rax 	      4048	ldlang.c	FUNCTION_91	ELSE_1	IF_2
0x4001842	      0xbb00000000	                              mov ebx, 0	      4048	ldlang.c	FUNCTION_91	ELSE_1	IF_2
0x4001847	      0xe93ffdffff	                           jmp 0x400158b	      4048	ldlang.c	FUNCTION_91	ELSE_1	IF_2
0x400184c	              0x5b	                                 pop rbx	      4602	ldlang.c	FUNCTION_105
0x400184d	              0x5d	                                 pop rbp	      4602	ldlang.c	FUNCTION_105
0x400184e	            0x415c	                                 pop r12	      4602	ldlang.c	FUNCTION_105
0x4001850	            0x415d	                                 pop r13	      4602	ldlang.c	FUNCTION_105
0x4001852	            0x415e	                                 pop r14	      4602	ldlang.c	FUNCTION_105
0x4001854	              0xc3	                                     ret	      4602	ldlang.c	FUNCTION_105
ignore_bfd_errors	IF,0:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,0:ELSE,0	1
0x4000395	            0xf3c3	                                     ret	      6260	ldlang.c	FUNCTION_134
lang_discard_section_p	IF,2:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,0:ELSE,0	16
0x4000213	          0x8b5720	            mov edx, dword [rdi + 0x20] 	      2285	ldlang.c	FUNCTION_58
0x4000216	            0x89d0	                            mov eax, edx	      2288	ldlang.c	FUNCTION_58
0x4000218	          0xc1e80f	                            shr eax, 0xf	      2288	ldlang.c	FUNCTION_58
0x400021b	          0x83e001	                              and eax, 1	      2288	ldlang.c	FUNCTION_58
0x400021e	    0xf7c200000002	                     test edx, 0x2000000	      2292	ldlang.c	FUNCTION_58	IF_1
0x4000224	            0x7412	                            je 0x4000238	      2292	ldlang.c	FUNCTION_58	IF_1
0x4000226	     0xfb60d000000	           movzx ecx, byte [0x0400022d] 	      2293	ldlang.c	FUNCTION_58	IF_1
0x400022d	          0x83e110	                           and ecx, 0x10	      2293	ldlang.c	FUNCTION_58	IF_1
0x4000230	      0xb901000000	                              mov ecx, 1	      2294	ldlang.c	FUNCTION_58	IF_1
0x4000235	           0xf45c1	                         cmovne eax, ecx	      2294	ldlang.c	FUNCTION_58	IF_1
0x4000238	    0xf60500000000	           test byte [0x0400023f], 0x20 	      2298	ldlang.c	FUNCTION_58	IF_2
0x400023f	            0x740e	                            je 0x400024f	      2298	ldlang.c	FUNCTION_58	IF_2
0x4000241	    0x81e200200000	                         and edx, 0x2000	      2299	ldlang.c	FUNCTION_58	IF_2
0x4000247	      0xba01000000	                              mov edx, 1	      2300	ldlang.c	FUNCTION_58	IF_2
0x400024c	           0xf45c2	                         cmovne eax, edx	      2300	ldlang.c	FUNCTION_58	IF_2
0x400024f	            0xf3c3	                                     ret	      2303	ldlang.c	FUNCTION_58
lang_enter_output_section_statement	IF,3:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,8:ELSE,1	116
0x4006d51	            0x4157	                                push r15	      6703	ldlang.c	FUNCTION_146
0x4006d53	            0x4156	                                push r14	      6703	ldlang.c	FUNCTION_146
0x4006d55	            0x4155	                                push r13	      6703	ldlang.c	FUNCTION_146
0x4006d57	            0x4154	                                push r12	      6703	ldlang.c	FUNCTION_146
0x4006d59	              0x55	                                push rbp	      6703	ldlang.c	FUNCTION_146
0x4006d5a	              0x53	                                push rbx	      6703	ldlang.c	FUNCTION_146
0x4006d5b	        0x4883ec08	                              sub rsp, 8	      6703	ldlang.c	FUNCTION_146
0x4006d5f	          0x4989f7	                            mov r15, rsi	      6703	ldlang.c	FUNCTION_146
0x4006d62	          0x4189d6	                           mov r14d, edx	      6703	ldlang.c	FUNCTION_146
0x4006d65	          0x4989cc	                            mov r12, rcx	      6703	ldlang.c	FUNCTION_146
0x4006d68	          0x4d89c5	                             mov r13, r8	      6703	ldlang.c	FUNCTION_146
0x4006d6b	          0x4c89cd	                             mov rbp, r9	      6703	ldlang.c	FUNCTION_146
0x4006d6e	      0xba01000000	                              mov edx, 1	      6706	ldlang.c	FUNCTION_146	CALL_1
0x4006d73	        0x8b742440	            mov esi, dword [rsp + 0x40] 	      6706	ldlang.c	FUNCTION_146	CALL_1
0x4006d77	      0xe800000000	                          call 0x4006d7c	      6706	ldlang.c	FUNCTION_146	CALL_1
0x4006d7c	          0x4889c3	                            mov rbx, rax	      6706	ldlang.c	FUNCTION_146	CALL_1
0x4006d7f	    0x488905000000	            mov qword [0x04006d86], rax 	      6708	ldlang.c	FUNCTION_146
0x4006d86	      0x4883785800	               cmp qword [rax + 0x58], 0	      6710	ldlang.c	FUNCTION_146	IF_1
0x4006d8b	            0x7504	                           jne 0x4006d91	      6710	ldlang.c	FUNCTION_146	IF_1
0x4006d8d	        0x4c897858	             mov qword [rax + 0x58], r15	      6712	ldlang.c	FUNCTION_146	IF_1
0x4006d91	    0x4489b38c0000	            mov dword [rbx + 0x8c], r14d	      6714	ldlang.c	FUNCTION_146
0x4006d98	        0x4183fe02	                             cmp r14d, 2	      6716	ldlang.c	FUNCTION_146	IF_2
0x4006d9c	      0xba00000000	                              mov edx, 0	      6716	ldlang.c	FUNCTION_146	IF_2
0x4006da1	      0xb800020000	                          mov eax, 0x200	      6716	ldlang.c	FUNCTION_146	IF_2
0x4006da6	           0xf45c2	                         cmovne eax, edx	      6716	ldlang.c	FUNCTION_146	IF_2
0x4006da9	    0x898388000000	             mov dword [rbx + 0x88], eax	      6716	ldlang.c	FUNCTION_146	IF_2
0x4006daf	    0xc74378010000	               mov dword [rbx + 0x78], 1	      6719	ldlang.c	FUNCTION_146
0x4006db6	        0x488d7b10	                   lea rdi, [rbx + 0x10]	      6722	ldlang.c	FUNCTION_146	CALL_2
0x4006dba	      0xe800000000	                          call 0x4006dbf	      6722	ldlang.c	FUNCTION_146	CALL_2
0x4006dbf	    0x817c24488001	          cmp dword [rsp + 0x48], 0x180 	      6724	ldlang.c	FUNCTION_146
0x4006dc7	           0xf94c0	                                 sete al	      6724	ldlang.c	FUNCTION_146
0x4006dca	          0xc1e006	                              shl eax, 6	      6724	ldlang.c	FUNCTION_146
0x4006dcd	     0xfb693900000	           movzx edx, byte [rbx + 0x90] 	      6724	ldlang.c	FUNCTION_146
0x4006dd4	          0x83e2bf	                     and edx, 0xffffffbf	      6724	ldlang.c	FUNCTION_146
0x4006dd7	             0x9d0	                             or eax, edx	      6724	ldlang.c	FUNCTION_146
0x4006dd9	    0x888390000000	               mov byte [rbx + 0x90], al	      6724	ldlang.c	FUNCTION_146
0x4006ddf	            0xa840	                           test al, 0x40	      6725	ldlang.c	FUNCTION_146	IF_3
0x4006de1	     0xf84be000000	                            je 0x4006ea5	      6725	ldlang.c	FUNCTION_146	IF_3
0x4006de7	          0x4d85e4	                           test r12, r12	      6725	ldlang.c	FUNCTION_146	IF_3
0x4006dea	     0xf84b5000000	                            je 0x4006ea5	      6725	ldlang.c	FUNCTION_146	IF_3
0x4006df0	      0xba05000000	                              mov edx, 5	      6726	ldlang.c	FUNCTION_146	IF_3	CALL_4
0x4006df5	      0xbe00000000	                              mov esi, 0	      6726	ldlang.c	FUNCTION_146	IF_3	CALL_4
0x4006dfa	      0xbf00000000	                              mov edi, 0	      6726	ldlang.c	FUNCTION_146	IF_3	CALL_4
0x4006dff	      0xe800000000	                          call 0x4006e04	      6726	ldlang.c	FUNCTION_146	IF_3	CALL_4
0x4006e04	      0xbe00000000	                              mov esi, 0	      6726	ldlang.c	FUNCTION_146	IF_3	CALL_4
0x4006e09	          0x4889c7	                            mov rdi, rax	      6726	ldlang.c	FUNCTION_146	IF_3	CALL_4
0x4006e0c	      0xb800000000	                              mov eax, 0	      6726	ldlang.c	FUNCTION_146	IF_3	CALL_4
0x4006e11	      0xe800000000	                          call 0x4006e16	      6726	ldlang.c	FUNCTION_146	IF_3	CALL_4
0x4006e16	      0xe98a000000	                           jmp 0x4006ea5	      6726	ldlang.c	FUNCTION_146	IF_3	CALL_4
0x4006e1b	            0x39d1	                            cmp ecx, edx	      6686	ldlang.c	FUNCTION_145	FOR_1	IF_2
0x4006e1d	     0xf86a2000000	                           jbe 0x4006ec5	      6686	ldlang.c	FUNCTION_145	FOR_1	IF_2
0x4006e23	             0x1d2	                            add edx, edx	      6688	ldlang.c	FUNCTION_145	FOR_1
0x4006e25	          0x83c001	                              add eax, 1	      6684	ldlang.c	FUNCTION_145	FOR_1
0x4006e28	          0x83f820	                           cmp eax, 0x20	      6684	ldlang.c	FUNCTION_145	FOR_1
0x4006e2b	            0x75ee	                           jne 0x4006e1b	      6684	ldlang.c	FUNCTION_145	FOR_1
0x4006e2d	      0xb800000000	                              mov eax, 0	      6691	ldlang.c	FUNCTION_145
0x4006e32	      0xe98e000000	                           jmp 0x4006ec5	      6691	ldlang.c	FUNCTION_145
0x4006e37	    0xc7437cffffff	     mov dword [rbx + 0x7c], 0xffffffff 	      6729	ldlang.c	FUNCTION_146
0x4006e3e	      0xba00000000	                              mov edx, 0	      6732	ldlang.c	FUNCTION_146	CALL_8
0x4006e43	      0xbeffffffff	                     mov esi, 0xffffffff	      6732	ldlang.c	FUNCTION_146	CALL_8
0x4006e48	          0x4c89e7	                            mov rdi, r12	      6732	ldlang.c	FUNCTION_146	CALL_8
0x4006e4b	      0xe800000000	                          call 0x4006e50	      6732	ldlang.c	FUNCTION_146	CALL_8
0x4006e50	            0x85c0	                           test eax, eax	      6681	ldlang.c	FUNCTION_145	IF_1
0x4006e52	            0x7826	                            js 0x4006e7a	      6681	ldlang.c	FUNCTION_145	IF_1
0x4006e54	            0x89c1	                            mov ecx, eax	      6686	ldlang.c	FUNCTION_145	FOR_1	IF_2
0x4006e56	          0x83f801	                              cmp eax, 1	      6686	ldlang.c	FUNCTION_145	FOR_1	IF_2
0x4006e59	            0x7626	                           jbe 0x4006e81	      6686	ldlang.c	FUNCTION_145	FOR_1	IF_2
0x4006e5b	      0xb801000000	                              mov eax, 1	      6686	ldlang.c	FUNCTION_145	FOR_1	IF_2
0x4006e60	      0xba02000000	                              mov edx, 2	      6686	ldlang.c	FUNCTION_145	FOR_1	IF_2
0x4006e65	            0x39d1	                            cmp ecx, edx	      6686	ldlang.c	FUNCTION_145	FOR_1	IF_2
0x4006e67	            0x767b	                           jbe 0x4006ee4	      6686	ldlang.c	FUNCTION_145	FOR_1	IF_2
0x4006e69	             0x1d2	                            add edx, edx	      6688	ldlang.c	FUNCTION_145	FOR_1
0x4006e6b	          0x83c001	                              add eax, 1	      6684	ldlang.c	FUNCTION_145	FOR_1
0x4006e6e	          0x83f820	                           cmp eax, 0x20	      6684	ldlang.c	FUNCTION_145	FOR_1
0x4006e71	            0x75f2	                           jne 0x4006e65	      6684	ldlang.c	FUNCTION_145	FOR_1
0x4006e73	      0xb800000000	                              mov eax, 0	      6691	ldlang.c	FUNCTION_145
0x4006e78	            0xeb6a	                           jmp 0x4006ee4	      6691	ldlang.c	FUNCTION_145
0x4006e7a	      0xb8ffffffff	                     mov eax, 0xffffffff	      6682	ldlang.c	FUNCTION_145	IF_1
0x4006e7f	            0xeb63	                           jmp 0x4006ee4	      6682	ldlang.c	FUNCTION_145	IF_1
0x4006e81	      0xb800000000	                              mov eax, 0	      6686	ldlang.c	FUNCTION_145	FOR_1	IF_2
0x4006e86	            0xeb5c	                           jmp 0x4006ee4	      6686	ldlang.c	FUNCTION_145	FOR_1	IF_2
0x4006e88	      0xb8ffffffff	                     mov eax, 0xffffffff	      6682	ldlang.c	FUNCTION_145	IF_1
0x4006e8d	            0xeb55	                           jmp 0x4006ee4	      6682	ldlang.c	FUNCTION_145	IF_1
0x4006e8f	            0x89c1	                            mov ecx, eax	      6686	ldlang.c	FUNCTION_145	FOR_1	IF_2
0x4006e91	          0x83f801	                              cmp eax, 1	      6686	ldlang.c	FUNCTION_145	FOR_1	IF_2
0x4006e94	            0x762a	                           jbe 0x4006ec0	      6686	ldlang.c	FUNCTION_145	FOR_1	IF_2
0x4006e96	      0xb801000000	                              mov eax, 1	      6686	ldlang.c	FUNCTION_145	FOR_1	IF_2
0x4006e9b	      0xba02000000	                              mov edx, 2	      6686	ldlang.c	FUNCTION_145	FOR_1	IF_2
0x4006ea0	      0xe976ffffff	                           jmp 0x4006e1b	      6686	ldlang.c	FUNCTION_145	FOR_1	IF_2
0x4006ea5	      0xba00000000	                              mov edx, 0	      6730	ldlang.c	FUNCTION_146	CALL_6
0x4006eaa	      0xbeffffffff	                     mov esi, 0xffffffff	      6730	ldlang.c	FUNCTION_146	CALL_6
0x4006eaf	          0x4c89ef	                            mov rdi, r13	      6730	ldlang.c	FUNCTION_146	CALL_6
0x4006eb2	      0xe800000000	                          call 0x4006eb7	      6730	ldlang.c	FUNCTION_146	CALL_6
0x4006eb7	            0x85c0	                           test eax, eax	      6681	ldlang.c	FUNCTION_145	IF_1
0x4006eb9	            0x79d4	                           jns 0x4006e8f	      6681	ldlang.c	FUNCTION_145	IF_1
0x4006ebb	      0xe977ffffff	                           jmp 0x4006e37	      6681	ldlang.c	FUNCTION_145	IF_1
0x4006ec0	      0xb800000000	                              mov eax, 0	      6686	ldlang.c	FUNCTION_145	FOR_1	IF_2
0x4006ec5	          0x89437c	             mov dword [rbx + 0x7c], eax	      6729	ldlang.c	FUNCTION_146
0x4006ec8	      0xba00000000	                              mov edx, 0	      6732	ldlang.c	FUNCTION_146	CALL_8
0x4006ecd	      0xbeffffffff	                     mov esi, 0xffffffff	      6732	ldlang.c	FUNCTION_146	CALL_8
0x4006ed2	          0x4c89e7	                            mov rdi, r12	      6732	ldlang.c	FUNCTION_146	CALL_8
0x4006ed5	      0xe800000000	                          call 0x4006eda	      6732	ldlang.c	FUNCTION_146	CALL_8
0x4006eda	            0x85c0	                           test eax, eax	      6681	ldlang.c	FUNCTION_145	IF_1
0x4006edc	     0xf8972ffffff	                           jns 0x4006e54	      6681	ldlang.c	FUNCTION_145	IF_1
0x4006ee2	            0xeba4	                           jmp 0x4006e88	      6681	ldlang.c	FUNCTION_145	IF_1
0x4006ee4	    0x898380000000	             mov dword [rbx + 0x80], eax	      6731	ldlang.c	FUNCTION_146
0x4006eea	        0x48896b60	             mov qword [rbx + 0x60], rbp	      6734	ldlang.c	FUNCTION_146
0x4006eee	          0x4889d8	                            mov rax, rbx	      6736	ldlang.c	FUNCTION_146
0x4006ef1	        0x4883c408	                              add rsp, 8	      6736	ldlang.c	FUNCTION_146
0x4006ef5	              0x5b	                                 pop rbx	      6736	ldlang.c	FUNCTION_146
0x4006ef6	              0x5d	                                 pop rbp	      6736	ldlang.c	FUNCTION_146
0x4006ef7	            0x415c	                                 pop r12	      6736	ldlang.c	FUNCTION_146
0x4006ef9	            0x415d	                                 pop r13	      6736	ldlang.c	FUNCTION_146
0x4006efb	            0x415e	                                 pop r14	      6736	ldlang.c	FUNCTION_146
0x4006efd	            0x415f	                                 pop r15	      6736	ldlang.c	FUNCTION_146
0x4006eff	              0xc3	                                     ret	      6736	ldlang.c	FUNCTION_146
get_target	IF,0:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,0:ELSE,0	8
0x4000500	        0x4883ec08	                              sub rsp, 8	      2934	ldlang.c	FUNCTION_68
0x4000504	          0x488b3f	                    mov rdi, qword [rdi]	      2937	ldlang.c	FUNCTION_68
0x4000507	      0xe800000000	                          call 0x400050c	      2937	ldlang.c	FUNCTION_68
0x400050c	            0x85c0	                           test eax, eax	      2937	ldlang.c	FUNCTION_68
0x400050e	           0xf94c0	                                 sete al	      2937	ldlang.c	FUNCTION_68
0x4000511	           0xfb6c0	                           movzx eax, al	      2937	ldlang.c	FUNCTION_68
0x4000514	        0x4883c408	                              add rsp, 8	      2938	ldlang.c	FUNCTION_68
0x4000518	              0xc3	                                     ret	      2938	ldlang.c	FUNCTION_68
lang_add_data	IF,0:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,0:ELSE,0	15
0x4007a20	              0x55	                                push rbp	      7546	ldlang.c	FUNCTION_171
0x4007a21	              0x53	                                push rbx	      7546	ldlang.c	FUNCTION_171
0x4007a22	        0x4883ec08	                              sub rsp, 8	      7546	ldlang.c	FUNCTION_171
0x4007a26	            0x89fb	                            mov ebx, edi	      7546	ldlang.c	FUNCTION_171
0x4007a28	          0x4889f5	                            mov rbp, rsi	      7546	ldlang.c	FUNCTION_171
0x4007a2b	    0x488b15000000	            mov rdx, qword [0x04007a32] 	      7549	ldlang.c	FUNCTION_171
0x4007a32	      0xbe38000000	                           mov esi, 0x38	      7549	ldlang.c	FUNCTION_171
0x4007a37	      0xbf08000000	                              mov edi, 8	      7549	ldlang.c	FUNCTION_171
0x4007a3c	      0xe887b7ffff	                  call sym.new_statement	      7549	ldlang.c	FUNCTION_171
0x4007a41	        0x48896818	             mov qword [rax + 0x18], rbp	      7550	ldlang.c	FUNCTION_171
0x4007a45	          0x895810	             mov dword [rax + 0x10], ebx	      7551	ldlang.c	FUNCTION_171
0x4007a48	        0x4883c408	                              add rsp, 8	      7552	ldlang.c	FUNCTION_171
0x4007a4c	              0x5b	                                 pop rbx	      7552	ldlang.c	FUNCTION_171
0x4007a4d	              0x5d	                                 pop rbp	      7552	ldlang.c	FUNCTION_171
0x4007a4e	              0xc3	                                     ret	      7552	ldlang.c	FUNCTION_171
walk_wild_section_specs4_wild2	IF,6:WHILE,0:FOR,1:DO,0:SWITCH,0:functions,0:CALL,10:ELSE,3	115
0x400240a	            0x4157	                                push r15	       690	ldlang.c	FUNCTION_22
0x400240c	            0x4156	                                push r14	       690	ldlang.c	FUNCTION_22
0x400240e	            0x4155	                                push r13	       690	ldlang.c	FUNCTION_22
0x4002410	            0x4154	                                push r12	       690	ldlang.c	FUNCTION_22
0x4002412	              0x55	                                push rbp	       690	ldlang.c	FUNCTION_22
0x4002413	              0x53	                                push rbx	       690	ldlang.c	FUNCTION_22
0x4002414	        0x4883ec58	                           sub rsp, 0x58	       690	ldlang.c	FUNCTION_22
0x4002418	          0x4889fd	                            mov rbp, rdi	       690	ldlang.c	FUNCTION_22
0x400241b	          0x4989f5	                            mov r13, rsi	       690	ldlang.c	FUNCTION_22
0x400241e	          0x4989d4	                            mov r12, rdx	       690	ldlang.c	FUNCTION_22
0x4002421	      0x4889542410	             mov qword [rsp + 0x10], rdx	       690	ldlang.c	FUNCTION_22
0x4002426	          0x4889cb	                            mov rbx, rcx	       690	ldlang.c	FUNCTION_22
0x4002429	      0x48894c2418	             mov qword [rsp + 0x18], rcx	       690	ldlang.c	FUNCTION_22
0x400242e	    0x64488b042528	                mov rax, qword fs:[0x28]	       690	ldlang.c	FUNCTION_22
0x4002437	      0x4889442448	             mov qword [rsp + 0x48], rax	       690	ldlang.c	FUNCTION_22
0x400243c	            0x31c0	                            xor eax, eax	       690	ldlang.c	FUNCTION_22
0x400243e	        0x488b4750	            mov rax, qword [rdi + 0x50] 	       692	ldlang.c	FUNCTION_22
0x4002442	      0x4889442438	             mov qword [rsp + 0x38], rax	       692	ldlang.c	FUNCTION_22
0x4002447	        0x488b4f58	            mov rcx, qword [rdi + 0x58] 	       693	ldlang.c	FUNCTION_22
0x400244b	      0x48894c2428	             mov qword [rsp + 0x28], rcx	       693	ldlang.c	FUNCTION_22
0x4002450	        0x4c8b7760	            mov r14, qword [rdi + 0x60] 	       694	ldlang.c	FUNCTION_22
0x4002454	        0x4c8b7f68	            mov r15, qword [rdi + 0x68] 	       695	ldlang.c	FUNCTION_22
0x4002458	      0x488d542444	                   lea rdx, [rsp + 0x44]	       697	ldlang.c	FUNCTION_22	CALL_1
0x400245d	          0x4889c6	                            mov rsi, rax	       697	ldlang.c	FUNCTION_22	CALL_1
0x4002460	          0x4c89ef	                            mov rdi, r13	       697	ldlang.c	FUNCTION_22	CALL_1
0x4002463	      0xe840ffffff	                   call sym.find_section	       697	ldlang.c	FUNCTION_22	CALL_1
0x4002468	      0x4889442430	             mov qword [rsp + 0x30], rax	       697	ldlang.c	FUNCTION_22	CALL_1
0x400246d	      0x837c244400	               cmp dword [rsp + 0x44], 0	       699	ldlang.c	FUNCTION_22	IF_1
0x4002472	            0x7416	                            je 0x400248a	       699	ldlang.c	FUNCTION_22	IF_1
0x4002474	          0x4889d9	                            mov rcx, rbx	       701	ldlang.c	FUNCTION_22	IF_1	CALL_2
0x4002477	          0x4c89e2	                            mov rdx, r12	       701	ldlang.c	FUNCTION_22	IF_1	CALL_2
0x400247a	          0x4c89ee	                            mov rsi, r13	       701	ldlang.c	FUNCTION_22	IF_1	CALL_2
0x400247d	          0x4889ef	                            mov rdi, rbp	       701	ldlang.c	FUNCTION_22	IF_1	CALL_2
0x4002480	      0xe857fcffff	      call sym.walk_wild_section_general	       701	ldlang.c	FUNCTION_22	IF_1	CALL_2
0x4002485	      0xe913010000	                           jmp 0x400259d	       702	ldlang.c	FUNCTION_22	IF_1
0x400248a	      0x488d542444	                   lea rdx, [rsp + 0x44]	       705	ldlang.c	FUNCTION_22	CALL_3
0x400248f	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	       705	ldlang.c	FUNCTION_22	CALL_3
0x4002494	          0x4c89ef	                            mov rdi, r13	       705	ldlang.c	FUNCTION_22	CALL_3
0x4002497	      0xe80cffffff	                   call sym.find_section	       705	ldlang.c	FUNCTION_22	CALL_3
0x400249c	      0x4889442408	                mov qword [rsp + 8], rax	       705	ldlang.c	FUNCTION_22	CALL_3
0x40024a1	      0x837c244400	               cmp dword [rsp + 0x44], 0	       706	ldlang.c	FUNCTION_22	IF_2
0x40024a6	            0x741a	                            je 0x40024c2	       706	ldlang.c	FUNCTION_22	IF_2
0x40024a8	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       708	ldlang.c	FUNCTION_22	IF_2	CALL_4
0x40024ad	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       708	ldlang.c	FUNCTION_22	IF_2	CALL_4
0x40024b2	          0x4c89ee	                            mov rsi, r13	       708	ldlang.c	FUNCTION_22	IF_2	CALL_4
0x40024b5	          0x4889ef	                            mov rdi, rbp	       708	ldlang.c	FUNCTION_22	IF_2	CALL_4
0x40024b8	      0xe81ffcffff	      call sym.walk_wild_section_general	       708	ldlang.c	FUNCTION_22	IF_2	CALL_4
0x40024bd	      0xe9db000000	                           jmp 0x400259d	       709	ldlang.c	FUNCTION_22	IF_2
0x40024c2	        0x498b4520	            mov rax, qword [r13 + 0x20] 	       712	ldlang.c	FUNCTION_22	FOR_1
0x40024c6	    0x488b98900000	            mov rbx, qword [rax + 0x90] 	       712	ldlang.c	FUNCTION_22	FOR_1
0x40024cd	          0x4885db	                           test rbx, rbx	       712	ldlang.c	FUNCTION_22	FOR_1
0x40024d0	     0xf84c7000000	                            je 0x400259d	       712	ldlang.c	FUNCTION_22	FOR_1
0x40024d6	      0x48896c2420	             mov qword [rsp + 0x20], rbp	       712	ldlang.c	FUNCTION_22	FOR_1
0x40024db	      0x488b6c2430	            mov rbp, qword [rsp + 0x30] 	       712	ldlang.c	FUNCTION_22	FOR_1
0x40024e0	          0x4839dd	                            cmp rbp, rbx	       714	ldlang.c	FUNCTION_22	FOR_1	IF_3
0x40024e3	            0x7524	                           jne 0x4002509	       714	ldlang.c	FUNCTION_22	FOR_1	IF_3
0x40024e5	      0x4c8b4c2418	              mov r9, qword [rsp + 0x18]	       715	ldlang.c	FUNCTION_22	FOR_1	CALL_5
0x40024ea	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	       715	ldlang.c	FUNCTION_22	FOR_1	CALL_5
0x40024ef	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	       715	ldlang.c	FUNCTION_22	FOR_1	CALL_5
0x40024f4	          0x4889da	                            mov rdx, rbx	       715	ldlang.c	FUNCTION_22	FOR_1	CALL_5
0x40024f7	          0x4c89ee	                            mov rsi, r13	       715	ldlang.c	FUNCTION_22	FOR_1	CALL_5
0x40024fa	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	       715	ldlang.c	FUNCTION_22	FOR_1	CALL_5
0x40024ff	      0xe843faffff	     call sym.walk_wild_consider_section	       715	ldlang.c	FUNCTION_22	FOR_1	CALL_5
0x4002504	      0xe987000000	                           jmp 0x4002590	       715	ldlang.c	FUNCTION_22	FOR_1	CALL_5
0x4002509	      0x48395c2408	                cmp qword [rsp + 8], rbx	       717	ldlang.c	FUNCTION_22	FOR_1	ELSE_1	IF_4
0x400250e	            0x7521	                           jne 0x4002531	       717	ldlang.c	FUNCTION_22	FOR_1	ELSE_1	IF_4
0x4002510	      0x4c8b4c2418	              mov r9, qword [rsp + 0x18]	       718	ldlang.c	FUNCTION_22	FOR_1	ELSE_1	IF_4
0x4002515	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	       718	ldlang.c	FUNCTION_22	FOR_1	ELSE_1	IF_4
0x400251a	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       718	ldlang.c	FUNCTION_22	FOR_1	ELSE_1	IF_4
0x400251f	          0x4889da	                            mov rdx, rbx	       718	ldlang.c	FUNCTION_22	FOR_1	ELSE_1	IF_4
0x4002522	          0x4c89ee	                            mov rsi, r13	       718	ldlang.c	FUNCTION_22	FOR_1	ELSE_1	IF_4
0x4002525	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	       718	ldlang.c	FUNCTION_22	FOR_1	ELSE_1	IF_4
0x400252a	      0xe818faffff	     call sym.walk_wild_consider_section	       718	ldlang.c	FUNCTION_22	FOR_1	ELSE_1	IF_4
0x400252f	            0xeb5f	                           jmp 0x4002590	       718	ldlang.c	FUNCTION_22	FOR_1	ELSE_1	IF_4
0x4002531	          0x4c8b23	                    mov r12, qword [rbx]	       721	ldlang.c	FUNCTION_22	FOR_1	ELSE_2
0x4002534	        0x498b7e08	                mov rdi, qword [r14 + 8]	       722	ldlang.c	FUNCTION_22	FOR_1	ELSE_2	CALL_7
0x4002538	          0x4c89e6	                            mov rsi, r12	       722	ldlang.c	FUNCTION_22	FOR_1	ELSE_2	CALL_7
0x400253b	      0xe81cdbffff	              call sym.match_simple_wild	       722	ldlang.c	FUNCTION_22	FOR_1	ELSE_2	CALL_7
0x4002540	            0x85c0	                           test eax, eax	       725	ldlang.c	FUNCTION_22	FOR_1	ELSE_2	IF_5
0x4002542	            0x741f	                            je 0x4002563	       725	ldlang.c	FUNCTION_22	FOR_1	ELSE_2	IF_5
0x4002544	      0x4c8b4c2418	              mov r9, qword [rsp + 0x18]	       726	ldlang.c	FUNCTION_22	FOR_1	ELSE_2	IF_5	CALL_8
0x4002549	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	       726	ldlang.c	FUNCTION_22	FOR_1	ELSE_2	IF_5	CALL_8
0x400254e	          0x4c89f1	                            mov rcx, r14	       726	ldlang.c	FUNCTION_22	FOR_1	ELSE_2	IF_5	CALL_8
0x4002551	          0x4889da	                            mov rdx, rbx	       726	ldlang.c	FUNCTION_22	FOR_1	ELSE_2	IF_5	CALL_8
0x4002554	          0x4c89ee	                            mov rsi, r13	       726	ldlang.c	FUNCTION_22	FOR_1	ELSE_2	IF_5	CALL_8
0x4002557	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	       726	ldlang.c	FUNCTION_22	FOR_1	ELSE_2	IF_5	CALL_8
0x400255c	      0xe8e6f9ffff	     call sym.walk_wild_consider_section	       726	ldlang.c	FUNCTION_22	FOR_1	ELSE_2	IF_5	CALL_8
0x4002561	            0xeb2d	                           jmp 0x4002590	       726	ldlang.c	FUNCTION_22	FOR_1	ELSE_2	IF_5	CALL_8
0x4002563	        0x498b7f08	                mov rdi, qword [r15 + 8]	       730	ldlang.c	FUNCTION_22	FOR_1	ELSE_2	ELSE_3	CALL_9
0x4002567	          0x4c89e6	                            mov rsi, r12	       730	ldlang.c	FUNCTION_22	FOR_1	ELSE_2	ELSE_3	CALL_9
0x400256a	      0xe8eddaffff	              call sym.match_simple_wild	       730	ldlang.c	FUNCTION_22	FOR_1	ELSE_2	ELSE_3	CALL_9
0x400256f	            0x85c0	                           test eax, eax	       731	ldlang.c	FUNCTION_22	FOR_1	ELSE_2	ELSE_3	IF_6
0x4002571	            0x741d	                            je 0x4002590	       731	ldlang.c	FUNCTION_22	FOR_1	ELSE_2	ELSE_3	IF_6
0x4002573	      0x4c8b4c2418	              mov r9, qword [rsp + 0x18]	       732	ldlang.c	FUNCTION_22	FOR_1	ELSE_2	ELSE_3	IF_6	CALL_10
0x4002578	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	       732	ldlang.c	FUNCTION_22	FOR_1	ELSE_2	ELSE_3	IF_6	CALL_10
0x400257d	          0x4c89f9	                            mov rcx, r15	       732	ldlang.c	FUNCTION_22	FOR_1	ELSE_2	ELSE_3	IF_6	CALL_10
0x4002580	          0x4889da	                            mov rdx, rbx	       732	ldlang.c	FUNCTION_22	FOR_1	ELSE_2	ELSE_3	IF_6	CALL_10
0x4002583	          0x4c89ee	                            mov rsi, r13	       732	ldlang.c	FUNCTION_22	FOR_1	ELSE_2	ELSE_3	IF_6	CALL_10
0x4002586	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	       732	ldlang.c	FUNCTION_22	FOR_1	ELSE_2	ELSE_3	IF_6	CALL_10
0x400258b	      0xe8b7f9ffff	     call sym.walk_wild_consider_section	       732	ldlang.c	FUNCTION_22	FOR_1	ELSE_2	ELSE_3	IF_6	CALL_10
0x4002590	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	       712	ldlang.c	FUNCTION_22	FOR_1
0x4002594	          0x4885db	                           test rbx, rbx	       712	ldlang.c	FUNCTION_22	FOR_1
0x4002597	     0xf8543ffffff	                           jne 0x40024e0	       712	ldlang.c	FUNCTION_22	FOR_1
0x400259d	      0x488b442448	            mov rax, qword [rsp + 0x48] 	       737	ldlang.c	FUNCTION_22
0x40025a2	    0x644833042528	                xor rax, qword fs:[0x28]	       737	ldlang.c	FUNCTION_22
0x40025ab	            0x7405	                            je 0x40025b2	       737	ldlang.c	FUNCTION_22
0x40025ad	      0xe800000000	                          call 0x40025b2	       737	ldlang.c	FUNCTION_22
0x40025b2	        0x4883c458	                           add rsp, 0x58	       737	ldlang.c	FUNCTION_22
0x40025b6	              0x5b	                                 pop rbx	       737	ldlang.c	FUNCTION_22
0x40025b7	              0x5d	                                 pop rbp	       737	ldlang.c	FUNCTION_22
0x40025b8	            0x415c	                                 pop r12	       737	ldlang.c	FUNCTION_22
0x40025ba	            0x415d	                                 pop r13	       737	ldlang.c	FUNCTION_22
0x40025bc	            0x415e	                                 pop r14	       737	ldlang.c	FUNCTION_22
0x40025be	            0x415f	                                 pop r15	       737	ldlang.c	FUNCTION_22
0x40025c0	              0xc3	                                     ret	       737	ldlang.c	FUNCTION_22
os_region_check	IF,3:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,4:ELSE,1	59
0x400042f	            0x4155	                                push r13	      4950	ldlang.c	FUNCTION_113
0x4000431	            0x4154	                                push r12	      4950	ldlang.c	FUNCTION_113
0x4000433	              0x55	                                push rbp	      4950	ldlang.c	FUNCTION_113
0x4000434	              0x53	                                push rbx	      4950	ldlang.c	FUNCTION_113
0x4000435	        0x4883ec08	                              sub rsp, 8	      4950	ldlang.c	FUNCTION_113
0x4000439	        0x488b5e38	            mov rbx, qword [rsi + 0x38] 	      4951	ldlang.c	FUNCTION_113	IF_1
0x400043d	        0x488b4620	            mov rax, qword [rsi + 0x20] 	      4951	ldlang.c	FUNCTION_113	IF_1
0x4000441	          0x4839c3	                            cmp rbx, rax	      4951	ldlang.c	FUNCTION_113	IF_1
0x4000444	            0x7210	                            jb 0x4000456	      4951	ldlang.c	FUNCTION_113	IF_1
0x4000446	          0x4989d8	                             mov r8, rbx	      4952	ldlang.c	FUNCTION_113	IF_1
0x4000449	          0x4929c0	                             sub r8, rax	      4952	ldlang.c	FUNCTION_113	IF_1
0x400044c	        0x4c3b4628	              cmp r8, qword [rsi + 0x28]	      4952	ldlang.c	FUNCTION_113	IF_1
0x4000450	     0xf869f000000	                           jbe 0x40004f5	      4952	ldlang.c	FUNCTION_113	IF_1
0x4000456	        0x48034628	             add rax, qword [rsi + 0x28]	      4954	ldlang.c	FUNCTION_113	IF_1
0x400045a	          0x4839d8	                            cmp rax, rbx	      4954	ldlang.c	FUNCTION_113	IF_1
0x400045d	            0x7509	                           jne 0x4000468	      4954	ldlang.c	FUNCTION_113	IF_1
0x400045f	          0x4885c9	                           test rcx, rcx	      4954	ldlang.c	FUNCTION_113	IF_1
0x4000462	     0xf858d000000	                           jne 0x40004f5	      4954	ldlang.c	FUNCTION_113	IF_1
0x4000468	          0x4885d2	                           test rdx, rdx	      4956	ldlang.c	FUNCTION_113	IF_1	IF_2
0x400046b	            0x7440	                            je 0x40004ad	      4956	ldlang.c	FUNCTION_113	IF_1	IF_2
0x400046d	          0x4c8b26	                    mov r12, qword [rsi]	      4958	ldlang.c	FUNCTION_113	IF_1	IF_2	CALL_2
0x4000470	        0x488b4738	            mov rax, qword [rdi + 0x38] 	      4962	ldlang.c	FUNCTION_113	IF_1	IF_2
0x4000474	          0x4c8b28	                    mov r13, qword [rax]	      4958	ldlang.c	FUNCTION_113	IF_1	IF_2	CALL_2
0x4000477	    0x488ba8f00000	            mov rbp, qword [rax + 0xf0] 	      4958	ldlang.c	FUNCTION_113	IF_1	IF_2	CALL_2
0x400047e	      0xba05000000	                              mov edx, 5	      4958	ldlang.c	FUNCTION_113	IF_1	IF_2	CALL_2
0x4000483	      0xbe00000000	                              mov esi, 0	      4958	ldlang.c	FUNCTION_113	IF_1	IF_2	CALL_2
0x4000488	      0xbf00000000	                              mov edi, 0	      4958	ldlang.c	FUNCTION_113	IF_1	IF_2	CALL_2
0x400048d	      0xe800000000	                          call 0x4000492	      4958	ldlang.c	FUNCTION_113	IF_1	IF_2	CALL_2
0x4000492	          0x4d89e0	                             mov r8, r12	      4958	ldlang.c	FUNCTION_113	IF_1	IF_2	CALL_2
0x4000495	          0x4c89e9	                            mov rcx, r13	      4958	ldlang.c	FUNCTION_113	IF_1	IF_2	CALL_2
0x4000498	          0x4889ea	                            mov rdx, rbp	      4958	ldlang.c	FUNCTION_113	IF_1	IF_2	CALL_2
0x400049b	          0x4889de	                            mov rsi, rbx	      4958	ldlang.c	FUNCTION_113	IF_1	IF_2	CALL_2
0x400049e	          0x4889c7	                            mov rdi, rax	      4958	ldlang.c	FUNCTION_113	IF_1	IF_2	CALL_2
0x40004a1	      0xb800000000	                              mov eax, 0	      4958	ldlang.c	FUNCTION_113	IF_1	IF_2	CALL_2
0x40004a6	      0xe800000000	                          call 0x40004ab	      4958	ldlang.c	FUNCTION_113	IF_1	IF_2	CALL_2
0x40004ab	            0xeb48	                           jmp 0x40004f5	      4958	ldlang.c	FUNCTION_113	IF_1	IF_2	CALL_2
0x40004ad	        0x837e5000	               cmp dword [rsi + 0x50], 0	      4965	ldlang.c	FUNCTION_113	IF_1	ELSE_1	IF_3
0x40004b1	            0x7542	                           jne 0x40004f5	      4965	ldlang.c	FUNCTION_113	IF_1	ELSE_1	IF_3
0x40004b3	    0xc74650010000	               mov dword [rsi + 0x50], 1	      4967	ldlang.c	FUNCTION_113	IF_1	ELSE_1	IF_3
0x40004ba	          0x4c8b26	                    mov r12, qword [rsi]	      4969	ldlang.c	FUNCTION_113	IF_1	ELSE_1	IF_3	CALL_4
0x40004bd	        0x488b4738	            mov rax, qword [rdi + 0x38] 	      4971	ldlang.c	FUNCTION_113	IF_1	ELSE_1	IF_3
0x40004c1	          0x488b28	                    mov rbp, qword [rax]	      4969	ldlang.c	FUNCTION_113	IF_1	ELSE_1	IF_3	CALL_4
0x40004c4	    0x488b98f00000	            mov rbx, qword [rax + 0xf0] 	      4969	ldlang.c	FUNCTION_113	IF_1	ELSE_1	IF_3	CALL_4
0x40004cb	      0xba05000000	                              mov edx, 5	      4969	ldlang.c	FUNCTION_113	IF_1	ELSE_1	IF_3	CALL_4
0x40004d0	      0xbe00000000	                              mov esi, 0	      4969	ldlang.c	FUNCTION_113	IF_1	ELSE_1	IF_3	CALL_4
0x40004d5	      0xbf00000000	                              mov edi, 0	      4969	ldlang.c	FUNCTION_113	IF_1	ELSE_1	IF_3	CALL_4
0x40004da	      0xe800000000	                          call 0x40004df	      4969	ldlang.c	FUNCTION_113	IF_1	ELSE_1	IF_3	CALL_4
0x40004df	          0x4c89e1	                            mov rcx, r12	      4969	ldlang.c	FUNCTION_113	IF_1	ELSE_1	IF_3	CALL_4
0x40004e2	          0x4889ea	                            mov rdx, rbp	      4969	ldlang.c	FUNCTION_113	IF_1	ELSE_1	IF_3	CALL_4
0x40004e5	          0x4889de	                            mov rsi, rbx	      4969	ldlang.c	FUNCTION_113	IF_1	ELSE_1	IF_3	CALL_4
0x40004e8	          0x4889c7	                            mov rdi, rax	      4969	ldlang.c	FUNCTION_113	IF_1	ELSE_1	IF_3	CALL_4
0x40004eb	      0xb800000000	                              mov eax, 0	      4969	ldlang.c	FUNCTION_113	IF_1	ELSE_1	IF_3	CALL_4
0x40004f0	      0xe800000000	                          call 0x40004f5	      4969	ldlang.c	FUNCTION_113	IF_1	ELSE_1	IF_3	CALL_4
0x40004f5	        0x4883c408	                              add rsp, 8	      4975	ldlang.c	FUNCTION_113
0x40004f9	              0x5b	                                 pop rbx	      4975	ldlang.c	FUNCTION_113
0x40004fa	              0x5d	                                 pop rbp	      4975	ldlang.c	FUNCTION_113
0x40004fb	            0x415c	                                 pop r12	      4975	ldlang.c	FUNCTION_113
0x40004fd	            0x415d	                                 pop r13	      4975	ldlang.c	FUNCTION_113
0x40004ff	              0xc3	                                     ret	      4975	ldlang.c	FUNCTION_113
walk_wild_section_specs1_wild1	IF,1:WHILE,0:FOR,1:DO,0:SWITCH,0:functions,0:CALL,2:ELSE,0	39
0x4001f9a	            0x4157	                                push r15	       591	ldlang.c	FUNCTION_19
0x4001f9c	            0x4156	                                push r14	       591	ldlang.c	FUNCTION_19
0x4001f9e	            0x4155	                                push r13	       591	ldlang.c	FUNCTION_19
0x4001fa0	            0x4154	                                push r12	       591	ldlang.c	FUNCTION_19
0x4001fa2	              0x55	                                push rbp	       591	ldlang.c	FUNCTION_19
0x4001fa3	              0x53	                                push rbx	       591	ldlang.c	FUNCTION_19
0x4001fa4	        0x4883ec08	                              sub rsp, 8	       591	ldlang.c	FUNCTION_19
0x4001fa8	          0x4989fd	                            mov r13, rdi	       591	ldlang.c	FUNCTION_19
0x4001fab	          0x4989f4	                            mov r12, rsi	       591	ldlang.c	FUNCTION_19
0x4001fae	          0x4989d7	                            mov r15, rdx	       591	ldlang.c	FUNCTION_19
0x4001fb1	          0x4989ce	                            mov r14, rcx	       591	ldlang.c	FUNCTION_19
0x4001fb4	        0x488b6f50	            mov rbp, qword [rdi + 0x50] 	       593	ldlang.c	FUNCTION_19
0x4001fb8	        0x488b4620	            mov rax, qword [rsi + 0x20] 	       595	ldlang.c	FUNCTION_19	FOR_1
0x4001fbc	    0x488b98900000	            mov rbx, qword [rax + 0x90] 	       595	ldlang.c	FUNCTION_19	FOR_1
0x4001fc3	          0x4885db	                           test rbx, rbx	       595	ldlang.c	FUNCTION_19	FOR_1
0x4001fc6	            0x7430	                            je 0x4001ff8	       595	ldlang.c	FUNCTION_19	FOR_1
0x4001fc8	        0x488b7d08	                mov rdi, qword [rbp + 8]	       598	ldlang.c	FUNCTION_19	FOR_1	CALL_1
0x4001fcc	          0x488b33	                    mov rsi, qword [rbx]	       598	ldlang.c	FUNCTION_19	FOR_1	CALL_1
0x4001fcf	      0xe888e0ffff	              call sym.match_simple_wild	       598	ldlang.c	FUNCTION_19	FOR_1	CALL_1
0x4001fd4	            0x85c0	                           test eax, eax	       600	ldlang.c	FUNCTION_19	FOR_1	IF_1
0x4001fd6	            0x7417	                            je 0x4001fef	       600	ldlang.c	FUNCTION_19	FOR_1	IF_1
0x4001fd8	          0x4d89f1	                             mov r9, r14	       601	ldlang.c	FUNCTION_19	FOR_1	CALL_2
0x4001fdb	          0x4d89f8	                             mov r8, r15	       601	ldlang.c	FUNCTION_19	FOR_1	CALL_2
0x4001fde	          0x4889e9	                            mov rcx, rbp	       601	ldlang.c	FUNCTION_19	FOR_1	CALL_2
0x4001fe1	          0x4889da	                            mov rdx, rbx	       601	ldlang.c	FUNCTION_19	FOR_1	CALL_2
0x4001fe4	          0x4c89e6	                            mov rsi, r12	       601	ldlang.c	FUNCTION_19	FOR_1	CALL_2
0x4001fe7	          0x4c89ef	                            mov rdi, r13	       601	ldlang.c	FUNCTION_19	FOR_1	CALL_2
0x4001fea	      0xe858ffffff	     call sym.walk_wild_consider_section	       601	ldlang.c	FUNCTION_19	FOR_1	CALL_2
0x4001fef	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	       595	ldlang.c	FUNCTION_19	FOR_1
0x4001ff3	          0x4885db	                           test rbx, rbx	       595	ldlang.c	FUNCTION_19	FOR_1
0x4001ff6	            0x75d0	                           jne 0x4001fc8	       595	ldlang.c	FUNCTION_19	FOR_1
0x4001ff8	        0x4883c408	                              add rsp, 8	       603	ldlang.c	FUNCTION_19
0x4001ffc	              0x5b	                                 pop rbx	       603	ldlang.c	FUNCTION_19
0x4001ffd	              0x5d	                                 pop rbp	       603	ldlang.c	FUNCTION_19
0x4001ffe	            0x415c	                                 pop r12	       603	ldlang.c	FUNCTION_19
0x4002000	            0x415d	                                 pop r13	       603	ldlang.c	FUNCTION_19
0x4002002	            0x415e	                                 pop r14	       603	ldlang.c	FUNCTION_19
0x4002004	            0x415f	                                 pop r15	       603	ldlang.c	FUNCTION_19
0x4002006	              0xc3	                                     ret	       603	ldlang.c	FUNCTION_19
insert_undefined	IF,3:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,5:ELSE,0	29
0x4001880	              0x53	                                push rbx	      3406	ldlang.c	FUNCTION_80
0x4001881	          0x4889fe	                            mov rsi, rdi	      3406	ldlang.c	FUNCTION_80
0x4001884	    0x41b801000000	                              mov r8d, 1	      3409	ldlang.c	FUNCTION_80	CALL_1
0x400188a	      0xb900000000	                              mov ecx, 0	      3409	ldlang.c	FUNCTION_80	CALL_1
0x400188f	      0xba01000000	                              mov edx, 1	      3409	ldlang.c	FUNCTION_80	CALL_1
0x4001894	    0x488b3d000000	            mov rdi, qword [0x0400189b] 	      3409	ldlang.c	FUNCTION_80	CALL_1
0x400189b	      0xe800000000	                          call 0x40018a0	      3409	ldlang.c	FUNCTION_80	CALL_1
0x40018a0	          0x4889c3	                            mov rbx, rax	      3409	ldlang.c	FUNCTION_80	CALL_1
0x40018a3	          0x4885c0	                           test rax, rax	      3410	ldlang.c	FUNCTION_80	IF_1
0x40018a6	            0x7521	                           jne 0x40018c9	      3410	ldlang.c	FUNCTION_80	IF_1
0x40018a8	      0xba05000000	                              mov edx, 5	      3411	ldlang.c	FUNCTION_80	CALL_3
0x40018ad	      0xbe00000000	                              mov esi, 0	      3411	ldlang.c	FUNCTION_80	CALL_3
0x40018b2	      0xbf00000000	                              mov edi, 0	      3411	ldlang.c	FUNCTION_80	CALL_3
0x40018b7	      0xe800000000	                          call 0x40018bc	      3411	ldlang.c	FUNCTION_80	CALL_3
0x40018bc	          0x4889c7	                            mov rdi, rax	      3411	ldlang.c	FUNCTION_80	CALL_3
0x40018bf	      0xb800000000	                              mov eax, 0	      3411	ldlang.c	FUNCTION_80	CALL_3
0x40018c4	      0xe800000000	                          call 0x40018c9	      3411	ldlang.c	FUNCTION_80	CALL_3
0x40018c9	        0x807b1800	                cmp byte [rbx + 0x18], 0	      3412	ldlang.c	FUNCTION_80	IF_2
0x40018cd	            0x7525	                           jne 0x40018f4	      3412	ldlang.c	FUNCTION_80	IF_2
0x40018cf	        0xc6431801	                mov byte [rbx + 0x18], 1	      3414	ldlang.c	FUNCTION_80	IF_2
0x40018d3	    0x48c743280000	               mov qword [rbx + 0x28], 0	      3415	ldlang.c	FUNCTION_80	IF_2
0x40018db	    0x488b3d000000	            mov rdi, qword [0x040018e2] 	      3416	ldlang.c	FUNCTION_80	IF_2	IF_3	CALL_4
0x40018e2	        0x837f4001	               cmp dword [rdi + 0x40], 1	      3416	ldlang.c	FUNCTION_80	IF_2	IF_3	CALL_4
0x40018e6	            0x7504	                           jne 0x40018ec	      3416	ldlang.c	FUNCTION_80	IF_2	IF_3	CALL_4
0x40018e8	        0x804b6420	              or byte [rbx + 0x64], 0x20	      3417	ldlang.c	FUNCTION_80	IF_2	IF_3
0x40018ec	          0x4889de	                            mov rsi, rbx	      3418	ldlang.c	FUNCTION_80	IF_2	CALL_5
0x40018ef	      0xe800000000	                          call 0x40018f4	      3418	ldlang.c	FUNCTION_80	IF_2	CALL_5
0x40018f4	              0x5b	                                 pop rbx	      3420	ldlang.c	FUNCTION_80
0x40018f5	              0xc3	                                     ret	      3420	ldlang.c	FUNCTION_80
gc_section_callback	IF,1:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,0:ELSE,0	4
0x4000397	        0x837f2800	               cmp dword [rdi + 0x28], 0	      6791	ldlang.c	FUNCTION_149	IF_1
0x400039b	            0x7407	                            je 0x40003a4	      6791	ldlang.c	FUNCTION_149	IF_1
0x400039d	    0x814a20000020	         or dword [rdx + 0x20], 0x200000	      6792	ldlang.c	FUNCTION_149	IF_1
0x40003a4	            0xf3c3	                                     ret	      6792	ldlang.c	FUNCTION_149	IF_1
lang_print_memory_usage	IF,0:WHILE,0:FOR,1:DO,0:SWITCH,0:functions,0:CALL,2:ELSE,0	59
0x400aa0f	              0x55	                                push rbp	      8774	ldlang.c	FUNCTION_209
0x400aa10	              0x53	                                push rbx	      8774	ldlang.c	FUNCTION_209
0x400aa11	        0x4883ec08	                              sub rsp, 8	      8774	ldlang.c	FUNCTION_209
0x400aa15	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_25
0x400aa1a	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_25
0x400aa1f	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_25
0x400aa24	      0xe800000000	                          call 0x400aa29	       104	stdio2.h	CALL_25
0x400aa29	    0x488b2d000000	            mov rbp, qword [0x0400aa30] 	      8778	ldlang.c	FUNCTION_209	FOR_1
0x400aa30	      0x48837d1000	               cmp qword [rbp + 0x10], 0	      8778	ldlang.c	FUNCTION_209	FOR_1
0x400aa35	     0xf84b6000000	                            je 0x400aaf1	      8778	ldlang.c	FUNCTION_209	FOR_1
0x400aa3b	        0x488b5d38	            mov rbx, qword [rbp + 0x38] 	      8780	ldlang.c	FUNCTION_209	FOR_1
0x400aa3f	        0x482b5d20	             sub rbx, qword [rbp + 0x20]	      8780	ldlang.c	FUNCTION_209	FOR_1
0x400aa43	        0x488b5500	                    mov rdx, qword [rbp]	       104	stdio2.h	CALL_25
0x400aa47	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_25
0x400aa4c	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_25
0x400aa51	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_25
0x400aa56	      0xe800000000	                          call 0x400aa5b	       104	stdio2.h	CALL_25
0x400aa5b	          0x4889df	                            mov rdi, rbx	      8784	ldlang.c	FUNCTION_209	FOR_1	CALL_1
0x400aa5e	      0xe89180ffff	         call sym.lang_print_memory_size	      8784	ldlang.c	FUNCTION_209	FOR_1	CALL_1
0x400aa63	        0x488b7d28	            mov rdi, qword [rbp + 0x28] 	      8785	ldlang.c	FUNCTION_209	FOR_1	CALL_2
0x400aa67	      0xe88880ffff	         call sym.lang_print_memory_size	      8785	ldlang.c	FUNCTION_209	FOR_1	CALL_2
0x400aa6c	          0x4885db	                           test rbx, rbx	       104	stdio2.h	CALL_25
0x400aa6f	            0x780b	                            js 0x400aa7c	       104	stdio2.h	CALL_25
0x400aa71	        0x660fefc0	                         pxor xmm0, xmm0	       104	stdio2.h	CALL_25
0x400aa75	      0xf2480f2ac3	                      cvtsi2sd xmm0, rbx	       104	stdio2.h	CALL_25
0x400aa7a	            0xeb19	                           jmp 0x400aa95	       104	stdio2.h	CALL_25
0x400aa7c	          0x4889d8	                            mov rax, rbx	       104	stdio2.h	CALL_25
0x400aa7f	          0x48d1e8	                              shr rax, 1	       104	stdio2.h	CALL_25
0x400aa82	          0x83e301	                              and ebx, 1	       104	stdio2.h	CALL_25
0x400aa85	          0x4809d8	                             or rax, rbx	       104	stdio2.h	CALL_25
0x400aa88	        0x660fefc0	                         pxor xmm0, xmm0	       104	stdio2.h	CALL_25
0x400aa8c	      0xf2480f2ac0	                      cvtsi2sd xmm0, rax	       104	stdio2.h	CALL_25
0x400aa91	        0xf20f58c0	                        addsd xmm0, xmm0	       104	stdio2.h	CALL_25
0x400aa95	    0xf20f59050000	          mulsd xmm0, qword [0x0400aa9d]	       104	stdio2.h	CALL_25
0x400aa9d	        0x488b4528	            mov rax, qword [rbp + 0x28] 	       104	stdio2.h	CALL_25
0x400aaa1	          0x4885c0	                           test rax, rax	       104	stdio2.h	CALL_25
0x400aaa4	            0x780b	                            js 0x400aab1	       104	stdio2.h	CALL_25
0x400aaa6	        0x660fefc9	                         pxor xmm1, xmm1	       104	stdio2.h	CALL_25
0x400aaaa	      0xf2480f2ac8	                      cvtsi2sd xmm1, rax	       104	stdio2.h	CALL_25
0x400aaaf	            0xeb19	                           jmp 0x400aaca	       104	stdio2.h	CALL_25
0x400aab1	          0x4889c2	                            mov rdx, rax	       104	stdio2.h	CALL_25
0x400aab4	          0x48d1ea	                              shr rdx, 1	       104	stdio2.h	CALL_25
0x400aab7	          0x83e001	                              and eax, 1	       104	stdio2.h	CALL_25
0x400aaba	          0x4809c2	                             or rdx, rax	       104	stdio2.h	CALL_25
0x400aabd	        0x660fefc9	                         pxor xmm1, xmm1	       104	stdio2.h	CALL_25
0x400aac1	      0xf2480f2aca	                      cvtsi2sd xmm1, rdx	       104	stdio2.h	CALL_25
0x400aac6	        0xf20f58c9	                        addsd xmm1, xmm1	       104	stdio2.h	CALL_25
0x400aaca	        0xf20f5ec1	                        divsd xmm0, xmm1	       104	stdio2.h	CALL_25
0x400aace	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_25
0x400aad3	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_25
0x400aad8	      0xb801000000	                              mov eax, 1	       104	stdio2.h	CALL_25
0x400aadd	      0xe800000000	                          call 0x400aae2	       104	stdio2.h	CALL_25
0x400aae2	        0x488b6d10	            mov rbp, qword [rbp + 0x10] 	      8778	ldlang.c	FUNCTION_209	FOR_1
0x400aae6	      0x48837d1000	               cmp qword [rbp + 0x10], 0	      8778	ldlang.c	FUNCTION_209	FOR_1
0x400aaeb	     0xf854affffff	                           jne 0x400aa3b	      8778	ldlang.c	FUNCTION_209	FOR_1
0x400aaf1	        0x4883c408	                              add rsp, 8	      8791	ldlang.c	FUNCTION_209
0x400aaf5	              0x5b	                                 pop rbx	      8791	ldlang.c	FUNCTION_209
0x400aaf6	              0x5d	                                 pop rbp	      8791	ldlang.c	FUNCTION_209
0x400aaf7	              0xc3	                                     ret	      8791	ldlang.c	FUNCTION_209
input_statement_is_archive_path	IF,2:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,2:ELSE,0	47
0x4001e1c	            0x4154	                                push r12	       181	ldlang.c	FUNCTION_4
0x4001e1e	              0x55	                                push rbp	       181	ldlang.c	FUNCTION_4
0x4001e1f	              0x53	                                push rbx	       181	ldlang.c	FUNCTION_4
0x4001e20	          0x4889fd	                            mov rbp, rdi	       181	ldlang.c	FUNCTION_4
0x4001e23	          0x4889f3	                            mov rbx, rsi	       181	ldlang.c	FUNCTION_4
0x4001e26	          0x4989d4	                            mov r12, rdx	       181	ldlang.c	FUNCTION_4
0x4001e29	        0x807e0100	                   cmp byte [rsi + 1], 0	       184	ldlang.c	FUNCTION_4	IF_1
0x4001e2d	            0x7418	                            je 0x4001e47	       184	ldlang.c	FUNCTION_4	IF_1
0x4001e2f	        0x488b7210	            mov rsi, qword [rdx + 0x10] 	       185	ldlang.c	FUNCTION_4	IF_1	CALL_1
0x4001e33	        0x488d7b01	                      lea rdi, [rbx + 1]	       185	ldlang.c	FUNCTION_4	IF_1	CALL_1
0x4001e37	      0xe870ffffff	                     call sym.name_match	       185	ldlang.c	FUNCTION_4	IF_1	CALL_1
0x4001e3c	            0x89c2	                            mov edx, eax	       185	ldlang.c	FUNCTION_4	IF_1	CALL_1
0x4001e3e	      0xb800000000	                              mov eax, 0	       182	ldlang.c	FUNCTION_4
0x4001e43	            0x85d2	                           test edx, edx	       185	ldlang.c	FUNCTION_4	IF_1	CALL_1
0x4001e45	            0x7563	                           jne 0x4001eaa	       185	ldlang.c	FUNCTION_4	IF_1	CALL_1
0x4001e47	          0x4839eb	                            cmp rbx, rbp	       187	ldlang.c	FUNCTION_4	IF_1
0x4001e4a	           0xf94c1	                                 sete cl	       187	ldlang.c	FUNCTION_4	IF_1
0x4001e4d	      0x498b542420	            mov rdx, qword [r12 + 0x20] 	       187	ldlang.c	FUNCTION_4	IF_1
0x4001e52	          0x4885d2	                           test rdx, rdx	       187	ldlang.c	FUNCTION_4	IF_1
0x4001e55	            0x7410	                            je 0x4001e67	       187	ldlang.c	FUNCTION_4	IF_1
0x4001e57	    0x4883bad00000	               cmp qword [rdx + 0xd0], 0	       187	ldlang.c	FUNCTION_4	IF_1
0x4001e5f	           0xf95c0	                                setne al	       187	ldlang.c	FUNCTION_4	IF_1
0x4001e62	           0xfb6c0	                           movzx eax, al	       187	ldlang.c	FUNCTION_4	IF_1
0x4001e65	            0xeb05	                           jmp 0x4001e6c	       187	ldlang.c	FUNCTION_4	IF_1
0x4001e67	      0xb800000000	                              mov eax, 0	       187	ldlang.c	FUNCTION_4	IF_1
0x4001e6c	          0x83e001	                              and eax, 1	       186	ldlang.c	FUNCTION_4	IF_1
0x4001e6f	            0x38c1	                              cmp cl, al	       186	ldlang.c	FUNCTION_4	IF_1
0x4001e71	            0x7432	                            je 0x4001ea5	       186	ldlang.c	FUNCTION_4	IF_1
0x4001e73	      0xb801000000	                              mov eax, 1	       189	ldlang.c	FUNCTION_4	IF_1
0x4001e78	          0x4839eb	                            cmp rbx, rbp	       191	ldlang.c	FUNCTION_4	IF_1	IF_2
0x4001e7b	            0x742d	                            je 0x4001eaa	       191	ldlang.c	FUNCTION_4	IF_1	IF_2
0x4001e7d	    0x488b82d00000	            mov rax, qword [rdx + 0xd0] 	       193	ldlang.c	FUNCTION_4	IF_1	IF_2
0x4001e84	          0x488b30	                    mov rsi, qword [rax]	       193	ldlang.c	FUNCTION_4	IF_1	IF_2
0x4001e87	          0xc60300	                       mov byte [rbx], 0	       194	ldlang.c	FUNCTION_4	IF_1	IF_2
0x4001e8a	          0x4889ef	                            mov rdi, rbp	       195	ldlang.c	FUNCTION_4	IF_1	IF_2	CALL_2
0x4001e8d	      0xe81affffff	                     call sym.name_match	       195	ldlang.c	FUNCTION_4	IF_1	IF_2	CALL_2
0x4001e92	            0x85c0	                           test eax, eax	       195	ldlang.c	FUNCTION_4	IF_1	IF_2	CALL_2
0x4001e94	           0xf94c0	                                 sete al	       195	ldlang.c	FUNCTION_4	IF_1	IF_2	CALL_2
0x4001e97	           0xfb6c0	                           movzx eax, al	       195	ldlang.c	FUNCTION_4	IF_1	IF_2	CALL_2
0x4001e9a	     0xfb615000000	           movzx edx, byte [0x04001ea1] 	       196	ldlang.c	FUNCTION_4	IF_1	IF_2
0x4001ea1	            0x8813	                      mov byte [rbx], dl	       196	ldlang.c	FUNCTION_4	IF_1	IF_2
0x4001ea3	            0xeb05	                           jmp 0x4001eaa	       196	ldlang.c	FUNCTION_4	IF_1	IF_2
0x4001ea5	      0xb800000000	                              mov eax, 0	       182	ldlang.c	FUNCTION_4
0x4001eaa	              0x5b	                                 pop rbx	       200	ldlang.c	FUNCTION_4
0x4001eab	              0x5d	                                 pop rbp	       200	ldlang.c	FUNCTION_4
0x4001eac	            0x415c	                                 pop r12	       200	ldlang.c	FUNCTION_4
0x4001eae	              0xc3	                                     ret	       200	ldlang.c	FUNCTION_4
lookup_name	IF,4:WHILE,0:FOR,1:DO,0:SWITCH,0:functions,0:CALL,3:ELSE,0	41
0x40064b4	              0x55	                                push rbp	      2646	ldlang.c	FUNCTION_63
0x40064b5	              0x53	                                push rbx	      2646	ldlang.c	FUNCTION_63
0x40064b6	        0x4883ec08	                              sub rsp, 8	      2646	ldlang.c	FUNCTION_63
0x40064ba	          0x4889fd	                            mov rbp, rdi	      2646	ldlang.c	FUNCTION_63
0x40064bd	    0x488b1d000000	            mov rbx, qword [0x040064c4] 	      2649	ldlang.c	FUNCTION_63	FOR_1
0x40064c4	          0x4885db	                           test rbx, rbx	      2649	ldlang.c	FUNCTION_63	FOR_1
0x40064c7	            0x7425	                            je 0x40064ee	      2649	ldlang.c	FUNCTION_63	FOR_1
0x40064c9	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      2656	ldlang.c	FUNCTION_63	FOR_1
0x40064cd	          0x4885ff	                           test rdi, rdi	      2658	ldlang.c	FUNCTION_63	FOR_1	IF_1
0x40064d0	            0x740c	                            je 0x40064de	      2658	ldlang.c	FUNCTION_63	FOR_1	IF_1
0x40064d2	          0x4889ee	                            mov rsi, rbp	      2659	ldlang.c	FUNCTION_63	FOR_1	IF_1	CALL_1
0x40064d5	      0xe800000000	                          call 0x40064da	      2659	ldlang.c	FUNCTION_63	FOR_1	IF_1	CALL_1
0x40064da	            0x85c0	                           test eax, eax	      2659	ldlang.c	FUNCTION_63	FOR_1	IF_1	CALL_1
0x40064dc	            0x740b	                            je 0x40064e9	      2659	ldlang.c	FUNCTION_63	FOR_1	IF_1	CALL_1
0x40064de	        0x488b5b38	            mov rbx, qword [rbx + 0x38] 	      2651	ldlang.c	FUNCTION_63	FOR_1
0x40064e2	          0x4885db	                           test rbx, rbx	      2649	ldlang.c	FUNCTION_63	FOR_1
0x40064e5	            0x75e2	                           jne 0x40064c9	      2649	ldlang.c	FUNCTION_63	FOR_1
0x40064e7	            0xeb05	                           jmp 0x40064ee	      2649	ldlang.c	FUNCTION_63	FOR_1
0x40064e9	          0x4885db	                           test rbx, rbx	      2663	ldlang.c	FUNCTION_63	IF_2
0x40064ec	            0x751c	                           jne 0x400650a	      2663	ldlang.c	FUNCTION_63	IF_2
0x40064ee	      0xb900000000	                              mov ecx, 0	      2664	ldlang.c	FUNCTION_63	IF_2	CALL_2
0x40064f3	    0x488b15000000	            mov rdx, qword [0x040064fa] 	      2664	ldlang.c	FUNCTION_63	IF_2	CALL_2
0x40064fa	      0xbe04000000	                              mov esi, 4	      2664	ldlang.c	FUNCTION_63	IF_2	CALL_2
0x40064ff	          0x4889ef	                            mov rdi, rbp	      2664	ldlang.c	FUNCTION_63	IF_2	CALL_2
0x4006502	      0xe8f0ccffff	                      call sym.new_afile	      2664	ldlang.c	FUNCTION_63	IF_2	CALL_2
0x4006507	          0x4889c3	                            mov rbx, rax	      2664	ldlang.c	FUNCTION_63	IF_2	CALL_2
0x400650a	         0xfb65349	           movzx edx, byte [rbx + 0x49] 	      2669	ldlang.c	FUNCTION_63	IF_3
0x400650e	          0x83e206	                              and edx, 6	      2669	ldlang.c	FUNCTION_63	IF_3
0x4006511	          0x4889d8	                            mov rax, rbx	      2670	ldlang.c	FUNCTION_63	IF_3
0x4006514	          0x80fa04	                               cmp dl, 4	      2669	ldlang.c	FUNCTION_63	IF_3
0x4006517	            0x7518	                           jne 0x4006531	      2669	ldlang.c	FUNCTION_63	IF_3
0x4006519	      0xbe00000000	                              mov esi, 0	      2672	ldlang.c	FUNCTION_63	IF_4	CALL_3
0x400651e	          0x4889df	                            mov rdi, rbx	      2672	ldlang.c	FUNCTION_63	IF_4	CALL_3
0x4006521	      0xe800000000	                          call 0x4006526	      2672	ldlang.c	FUNCTION_63	IF_4	CALL_3
0x4006526	            0x85c0	                           test eax, eax	      2672	ldlang.c	FUNCTION_63	IF_4	CALL_3
0x4006528	      0xb800000000	                              mov eax, 0	      2675	ldlang.c	FUNCTION_63
0x400652d	        0x480f45c3	                         cmovne rax, rbx	      2675	ldlang.c	FUNCTION_63
0x4006531	        0x4883c408	                              add rsp, 8	      2676	ldlang.c	FUNCTION_63
0x4006535	              0x5b	                                 pop rbx	      2676	ldlang.c	FUNCTION_63
0x4006536	              0x5d	                                 pop rbp	      2676	ldlang.c	FUNCTION_63
0x4006537	              0xc3	                                     ret	      2676	ldlang.c	FUNCTION_63
version_expr_head_eq	IF,0:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,0:ELSE,0	9
0x4000519	        0x4883ec08	                              sub rsp, 8	      8357	ldlang.c	FUNCTION_197
0x400051d	        0x488b7608	                mov rsi, qword [rsi + 8]	      8363	ldlang.c	FUNCTION_197
0x4000521	        0x488b7f08	                mov rdi, qword [rdi + 8]	      8363	ldlang.c	FUNCTION_197
0x4000525	      0xe800000000	                          call 0x400052a	      8363	ldlang.c	FUNCTION_197
0x400052a	            0x85c0	                           test eax, eax	      8363	ldlang.c	FUNCTION_197
0x400052c	           0xf94c0	                                 sete al	      8363	ldlang.c	FUNCTION_197
0x400052f	           0xfb6c0	                           movzx eax, al	      8363	ldlang.c	FUNCTION_197
0x4000532	        0x4883c408	                              add rsp, 8	      8364	ldlang.c	FUNCTION_197
0x4000536	              0xc3	                                     ret	      8364	ldlang.c	FUNCTION_197
undef_start_stop	IF,2:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,0:ELSE,0	20
0x400064c	        0xf6471908	               test byte [rdi + 0x19], 8	      6086	ldlang.c	FUNCTION_128	IF_1
0x4000650	            0x753d	                           jne 0x400068f	      6086	ldlang.c	FUNCTION_128	IF_1
0x4000652	              0x53	                                push rbx	      6085	ldlang.c	FUNCTION_128
0x4000653	          0x4889fb	                            mov rbx, rdi	      6085	ldlang.c	FUNCTION_128
0x4000656	        0x488b5728	            mov rdx, qword [rdi + 0x28] 	      6089	ldlang.c	FUNCTION_128	IF_2
0x400065a	        0x488b4268	            mov rax, qword [rdx + 0x68] 	      6089	ldlang.c	FUNCTION_128	IF_2
0x400065e	          0x4885c0	                           test rax, rax	      6089	ldlang.c	FUNCTION_128	IF_2
0x4000661	            0x741f	                            je 0x4000682	      6089	ldlang.c	FUNCTION_128	IF_2
0x4000663	    0x488b0d000000	            mov rcx, qword [0x0400066a] 	      6090	ldlang.c	FUNCTION_128	IF_2
0x400066a	    0x483988f00000	            cmp qword [rax + 0xf0], rcx 	      6090	ldlang.c	FUNCTION_128	IF_2
0x4000671	            0x750f	                           jne 0x4000682	      6090	ldlang.c	FUNCTION_128	IF_2
0x4000673	          0x488b30	                    mov rsi, qword [rax]	      6091	ldlang.c	FUNCTION_128	IF_2
0x4000676	          0x488b3a	                    mov rdi, qword [rdx]	      6091	ldlang.c	FUNCTION_128	IF_2
0x4000679	      0xe800000000	                          call 0x400067e	      6091	ldlang.c	FUNCTION_128	IF_2
0x400067e	            0x85c0	                           test eax, eax	      6091	ldlang.c	FUNCTION_128	IF_2
0x4000680	            0x740c	                            je 0x400068e	      6091	ldlang.c	FUNCTION_128	IF_2
0x4000682	        0xc6431801	                mov byte [rbx + 0x18], 1	      6094	ldlang.c	FUNCTION_128	IF_2
0x4000686	    0x48c743280000	               mov qword [rbx + 0x28], 0	      6095	ldlang.c	FUNCTION_128	IF_2
0x400068e	              0x5b	                                 pop rbx	      6097	ldlang.c	FUNCTION_128
0x400068f	            0xf3c3	                                     ret	      6097	ldlang.c	FUNCTION_128
load_symbols	IF,15:WHILE,0:FOR,2:DO,0:SWITCH,1:functions,0:CALL,30:ELSE,2	297
0x4005ffc	            0x4157	                                push r15	      2744	ldlang.c	FUNCTION_66
0x4005ffe	            0x4156	                                push r14	      2744	ldlang.c	FUNCTION_66
0x4006000	            0x4155	                                push r13	      2744	ldlang.c	FUNCTION_66
0x4006002	            0x4154	                                push r12	      2744	ldlang.c	FUNCTION_66
0x4006004	              0x55	                                push rbp	      2744	ldlang.c	FUNCTION_66
0x4006005	              0x53	                                push rbx	      2744	ldlang.c	FUNCTION_66
0x4006006	        0x4883ec28	                           sub rsp, 0x28	      2744	ldlang.c	FUNCTION_66
0x400600a	    0x64488b042528	                mov rax, qword fs:[0x28]	      2744	ldlang.c	FUNCTION_66
0x4006013	      0x4889442418	             mov qword [rsp + 0x18], rax	      2744	ldlang.c	FUNCTION_66
0x4006018	            0x31c0	                            xor eax, eax	      2744	ldlang.c	FUNCTION_66
0x400601a	      0xb801000000	                              mov eax, 1	      2748	ldlang.c	FUNCTION_66	IF_1
0x400601f	        0xf6474902	               test byte [rdi + 0x49], 2	      2747	ldlang.c	FUNCTION_66	IF_1
0x4006023	     0xf8567040000	                           jne 0x4006490	      2747	ldlang.c	FUNCTION_66	IF_1
0x4006029	          0x4889fd	                            mov rbp, rdi	      2747	ldlang.c	FUNCTION_66	IF_1
0x400602c	          0x4889f3	                            mov rbx, rsi	      2747	ldlang.c	FUNCTION_66	IF_1
0x400602f	      0xe800000000	                          call 0x4006034	      2750	ldlang.c	FUNCTION_66	CALL_1
0x4006034	      0xb801000000	                              mov eax, 1	      2754	ldlang.c	FUNCTION_66	IF_2
0x4006039	        0xf6454908	               test byte [rbp + 0x49], 8	      2753	ldlang.c	FUNCTION_66	IF_2
0x400603d	     0xf854d040000	                           jne 0x4006490	      2753	ldlang.c	FUNCTION_66	IF_2
0x4006043	        0x488b7d20	            mov rdi, qword [rbp + 0x20] 	      2756	ldlang.c	FUNCTION_66	IF_3	CALL_2
0x4006047	      0xbe02000000	                              mov esi, 2	      2756	ldlang.c	FUNCTION_66	IF_3	CALL_2
0x400604c	      0xe800000000	                          call 0x4006051	      2756	ldlang.c	FUNCTION_66	IF_3	CALL_2
0x4006051	            0x85c0	                           test eax, eax	      2756	ldlang.c	FUNCTION_66	IF_3	CALL_2
0x4006053	     0xf85cb010000	                           jne 0x4006224	      2756	ldlang.c	FUNCTION_66	IF_3	CALL_2
0x4006059	        0x488b7d20	            mov rdi, qword [rbp + 0x20] 	      2757	ldlang.c	FUNCTION_66	IF_3	CALL_3
0x400605d	      0x488d542408	                      lea rdx, [rsp + 8]	      2757	ldlang.c	FUNCTION_66	IF_3	CALL_3
0x4006062	      0xbe01000000	                              mov esi, 1	      2757	ldlang.c	FUNCTION_66	IF_3	CALL_3
0x4006067	      0xe800000000	                          call 0x400606c	      2757	ldlang.c	FUNCTION_66	IF_3	CALL_3
0x400606c	            0x85c0	                           test eax, eax	      2757	ldlang.c	FUNCTION_66	IF_3	CALL_3
0x400606e	     0xf85b0010000	                           jne 0x4006224	      2757	ldlang.c	FUNCTION_66	IF_3	CALL_3
0x4006074	      0xe800000000	                          call 0x4006079	      2763	ldlang.c	FUNCTION_66	IF_3	CALL_4
0x4006079	          0x4189c4	                           mov r12d, eax	      2763	ldlang.c	FUNCTION_66	IF_3	CALL_4
0x400607c	          0x4889ef	                            mov rdi, rbp	      2766	ldlang.c	FUNCTION_66	IF_3	IF_4	CALL_5
0x400607f	      0xe800000000	                          call 0x4006084	      2766	ldlang.c	FUNCTION_66	IF_3	IF_4	CALL_5
0x4006084	            0x85c0	                           test eax, eax	      2766	ldlang.c	FUNCTION_66	IF_3	IF_4	CALL_5
0x4006086	     0xf858e010000	                           jne 0x400621a	      2766	ldlang.c	FUNCTION_66	IF_3	IF_4	CALL_5
0x400608c	        0x4183fc0d	                           cmp r12d, 0xd	      2769	ldlang.c	FUNCTION_66	IF_3	IF_5
0x4006090	            0x7563	                           jne 0x40060f5	      2769	ldlang.c	FUNCTION_66	IF_3	IF_5
0x4006092	        0x4c8b6520	            mov r12, qword [rbp + 0x20] 	      2773	ldlang.c	FUNCTION_66	IF_3	IF_5	CALL_7
0x4006096	      0xba05000000	                              mov edx, 5	      2773	ldlang.c	FUNCTION_66	IF_3	IF_5	CALL_7
0x400609b	      0xbe00000000	                              mov esi, 0	      2773	ldlang.c	FUNCTION_66	IF_3	IF_5	CALL_7
0x40060a0	      0xbf00000000	                              mov edi, 0	      2773	ldlang.c	FUNCTION_66	IF_3	IF_5	CALL_7
0x40060a5	      0xe800000000	                          call 0x40060aa	      2773	ldlang.c	FUNCTION_66	IF_3	IF_5	CALL_7
0x40060aa	          0x4c89e6	                            mov rsi, r12	      2773	ldlang.c	FUNCTION_66	IF_3	IF_5	CALL_7
0x40060ad	          0x4889c7	                            mov rdi, rax	      2773	ldlang.c	FUNCTION_66	IF_3	IF_5	CALL_7
0x40060b0	      0xb800000000	                              mov eax, 0	      2773	ldlang.c	FUNCTION_66	IF_3	IF_5	CALL_7
0x40060b5	      0xe800000000	                          call 0x40060ba	      2773	ldlang.c	FUNCTION_66	IF_3	IF_5	CALL_7
0x40060ba	      0x4c8b642408	                mov r12, qword [rsp + 8]	      2775	ldlang.c	FUNCTION_66	IF_3	IF_5	FOR_1
0x40060bf	        0x498b3424	                    mov rsi, qword [r12]	      2775	ldlang.c	FUNCTION_66	IF_3	IF_5	FOR_1
0x40060c3	          0x4885f6	                           test rsi, rsi	      2775	ldlang.c	FUNCTION_66	IF_3	IF_5	FOR_1
0x40060c6	            0x741c	                            je 0x40060e4	      2775	ldlang.c	FUNCTION_66	IF_3	IF_5	FOR_1
0x40060c8	      0xbf00000000	                              mov edi, 0	      2776	ldlang.c	FUNCTION_66	IF_3	IF_5	CALL_8
0x40060cd	      0xb800000000	                              mov eax, 0	      2776	ldlang.c	FUNCTION_66	IF_3	IF_5	CALL_8
0x40060d2	      0xe800000000	                          call 0x40060d7	      2776	ldlang.c	FUNCTION_66	IF_3	IF_5	CALL_8
0x40060d7	        0x4983c408	                              add r12, 8	      2775	ldlang.c	FUNCTION_66	IF_3	IF_5	FOR_1
0x40060db	        0x498b3424	                    mov rsi, qword [r12]	      2775	ldlang.c	FUNCTION_66	IF_3	IF_5	FOR_1
0x40060df	          0x4885f6	                           test rsi, rsi	      2775	ldlang.c	FUNCTION_66	IF_3	IF_5	FOR_1
0x40060e2	            0x75e4	                           jne 0x40060c8	      2775	ldlang.c	FUNCTION_66	IF_3	IF_5	FOR_1
0x40060e4	      0xbf00000000	                              mov edi, 0	      2777	ldlang.c	FUNCTION_66	IF_3	IF_5	CALL_9
0x40060e9	      0xb800000000	                              mov eax, 0	      2777	ldlang.c	FUNCTION_66	IF_3	IF_5	CALL_9
0x40060ee	      0xe800000000	                          call 0x40060f3	      2777	ldlang.c	FUNCTION_66	IF_3	IF_5	CALL_9
0x40060f3	            0xeb33	                           jmp 0x4006128	      2777	ldlang.c	FUNCTION_66	IF_3	IF_5	CALL_9
0x40060f5	        0x4183fc0c	                           cmp r12d, 0xc	      2779	ldlang.c	FUNCTION_66	IF_3	ELSE_1	IF_6
0x40060f9	            0x7505	                           jne 0x4006100	      2779	ldlang.c	FUNCTION_66	IF_3	ELSE_1	IF_6
0x40060fb	          0x4885db	                           test rbx, rbx	      2779	ldlang.c	FUNCTION_66	IF_3	ELSE_1	IF_6
0x40060fe	            0x7528	                           jne 0x4006128	      2779	ldlang.c	FUNCTION_66	IF_3	ELSE_1	IF_6
0x4006100	        0x4c8b6520	            mov r12, qword [rbp + 0x20] 	      2781	ldlang.c	FUNCTION_66	IF_3	ELSE_1	IF_6
0x4006104	      0xba05000000	                              mov edx, 5	      2781	ldlang.c	FUNCTION_66	IF_3	ELSE_1	IF_6
0x4006109	      0xbe00000000	                              mov esi, 0	      2781	ldlang.c	FUNCTION_66	IF_3	ELSE_1	IF_6
0x400610e	      0xbf00000000	                              mov edi, 0	      2781	ldlang.c	FUNCTION_66	IF_3	ELSE_1	IF_6
0x4006113	      0xe800000000	                          call 0x4006118	      2781	ldlang.c	FUNCTION_66	IF_3	ELSE_1	IF_6
0x4006118	          0x4c89e6	                            mov rsi, r12	      2781	ldlang.c	FUNCTION_66	IF_3	ELSE_1	IF_6
0x400611b	          0x4889c7	                            mov rdi, rax	      2781	ldlang.c	FUNCTION_66	IF_3	ELSE_1	IF_6
0x400611e	      0xb800000000	                              mov eax, 0	      2781	ldlang.c	FUNCTION_66	IF_3	ELSE_1	IF_6
0x4006123	      0xe800000000	                          call 0x4006128	      2781	ldlang.c	FUNCTION_66	IF_3	ELSE_1	IF_6
0x4006128	        0x488b7d20	            mov rdi, qword [rbp + 0x20] 	      2783	ldlang.c	FUNCTION_66	IF_3	CALL_12
0x400612c	      0xe800000000	                          call 0x4006131	      2783	ldlang.c	FUNCTION_66	IF_3	CALL_12
0x4006131	    0x48c745200000	               mov qword [rbp + 0x20], 0	      2784	ldlang.c	FUNCTION_66	IF_3
0x4006139	    0x4c8b35000000	            mov r14, qword [0x04006140] 	      2787	ldlang.c	FUNCTION_66	IF_3
0x4006140	    0x4c8b2d000000	            mov r13, qword [0x04006147] 	      2787	ldlang.c	FUNCTION_66	IF_3
0x4006147	    0x440fb6250000	          movzx r12d, byte [0x0400614f] 	      2787	ldlang.c	FUNCTION_66	IF_3
0x400614f	        0x41c0ec03	                             shr r12b, 3	      2787	ldlang.c	FUNCTION_66	IF_3
0x4006153	        0x4183e401	                             and r12d, 1	      2787	ldlang.c	FUNCTION_66	IF_3
0x4006157	        0x488b7d10	            mov rdi, qword [rbp + 0x10] 	      2788	ldlang.c	FUNCTION_66	IF_3	CALL_13
0x400615b	      0xe800000000	                          call 0x4006160	      2788	ldlang.c	FUNCTION_66	IF_3	CALL_13
0x4006160	          0x4889df	                            mov rdi, rbx	      2790	ldlang.c	FUNCTION_66	IF_3	CALL_14
0x4006163	      0xe800000000	                          call 0x4006168	      2790	ldlang.c	FUNCTION_66	IF_3	CALL_14
0x4006168	         0xfb64548	           movzx eax, byte [rbp + 0x48] 	      2792	ldlang.c	FUNCTION_66	IF_3
0x400616c	            0x89c2	                            mov edx, eax	      2792	ldlang.c	FUNCTION_66	IF_3
0x400616e	          0x83e280	                     and edx, 0xffffff80	      2792	ldlang.c	FUNCTION_66	IF_3
0x4006171	     0xfb635000000	           movzx esi, byte [0x04006178] 	      2792	ldlang.c	FUNCTION_66	IF_3
0x4006178	          0x83e63f	                           and esi, 0x3f	      2792	ldlang.c	FUNCTION_66	IF_3
0x400617b	            0x89c1	                            mov ecx, eax	      2794	ldlang.c	FUNCTION_66	IF_3
0x400617d	          0x83e140	                           and ecx, 0x40	      2794	ldlang.c	FUNCTION_66	IF_3
0x4006180	             0x9f2	                             or edx, esi	      2794	ldlang.c	FUNCTION_66	IF_3
0x4006182	             0x9ca	                             or edx, ecx	      2794	ldlang.c	FUNCTION_66	IF_3
0x4006184	         0xfb64d49	           movzx ecx, byte [rbp + 0x49] 	      2795	ldlang.c	FUNCTION_66	IF_3
0x4006188	          0x83e101	                              and ecx, 1	      2795	ldlang.c	FUNCTION_66	IF_3
0x400618b	     0xfb635000000	           movzx esi, byte [0x04006192] 	      2795	ldlang.c	FUNCTION_66	IF_3
0x4006192	          0x83e6fe	                     and esi, 0xfffffffe	      2795	ldlang.c	FUNCTION_66	IF_3
0x4006195	             0x9f1	                             or ecx, esi	      2795	ldlang.c	FUNCTION_66	IF_3
0x4006197	    0x880d00000000	               mov byte [0x0400619d], cl	      2795	ldlang.c	FUNCTION_66	IF_3
0x400619d	          0x83e020	                           and eax, 0x20	      2796	ldlang.c	FUNCTION_66	IF_3
0x40061a0	          0x83e2df	                     and edx, 0xffffffdf	      2796	ldlang.c	FUNCTION_66	IF_3
0x40061a3	             0x9d0	                             or eax, edx	      2796	ldlang.c	FUNCTION_66	IF_3
0x40061a5	    0x880500000000	               mov byte [0x040061ab], al	      2796	ldlang.c	FUNCTION_66	IF_3
0x40061ab	    0xc70500000000	               mov dword [0x040061b5], 1	      2798	ldlang.c	FUNCTION_66	IF_3
0x40061b5	    0xc70500000000	               mov dword [0x040061bf], 1	      2799	ldlang.c	FUNCTION_66	IF_3
0x40061bf	      0xe800000000	                          call 0x40061c4	      2800	ldlang.c	FUNCTION_66	IF_3	CALL_15
0x40061c4	    0xc70500000000	               mov dword [0x040061ce], 0	      2801	ldlang.c	FUNCTION_66	IF_3
0x40061ce	     0xfb605000000	           movzx eax, byte [0x040061d5] 	      2806	ldlang.c	FUNCTION_66	IF_3
0x40061d5	          0xc0e803	                               shr al, 3	      2806	ldlang.c	FUNCTION_66	IF_3
0x40061d8	          0x4909c4	                             or r12, rax	      2807	ldlang.c	FUNCTION_66	IF_3
0x40061db	        0x4183e401	                             and r12d, 1	      2807	ldlang.c	FUNCTION_66	IF_3
0x40061df	        0x49c1e40b	                            shl r12, 0xb	      2807	ldlang.c	FUNCTION_66	IF_3
0x40061e3	          0x4c89f0	                            mov rax, r14	      2807	ldlang.c	FUNCTION_66	IF_3
0x40061e6	          0x80e4f7	                            and ah, 0xf7	      2807	ldlang.c	FUNCTION_66	IF_3
0x40061e9	          0x4c09e0	                             or rax, r12	      2807	ldlang.c	FUNCTION_66	IF_3
0x40061ec	    0x488905000000	            mov qword [0x040061f3], rax 	      2807	ldlang.c	FUNCTION_66	IF_3
0x40061f3	    0x4c892d000000	            mov qword [0x040061fa], r13 	      2807	ldlang.c	FUNCTION_66	IF_3
0x40061fa	      0xe800000000	                          call 0x40061ff	      2808	ldlang.c	FUNCTION_66	IF_3	CALL_16
0x40061ff	    0x488b3d000000	            mov rdi, qword [0x04006206] 	      2809	ldlang.c	FUNCTION_66	IF_3	CALL_17
0x4006206	      0xe800000000	                          call 0x400620b	      2809	ldlang.c	FUNCTION_66	IF_3	CALL_17
0x400620b	    0x48c705000000	               mov qword [0x04006216], 0	      2810	ldlang.c	FUNCTION_66	IF_3
0x4006216	        0x804d4902	                 or byte [rbp + 0x49], 2	      2811	ldlang.c	FUNCTION_66	IF_3
0x400621a	      0xb801000000	                              mov eax, 1	      2811	ldlang.c	FUNCTION_66	IF_3
0x400621f	      0xe96c020000	                           jmp 0x4006490	      2811	ldlang.c	FUNCTION_66	IF_3
0x4006224	          0x4889ef	                            mov rdi, rbp	      2816	ldlang.c	FUNCTION_66	IF_7	CALL_18
0x4006227	      0xe800000000	                          call 0x400622c	      2816	ldlang.c	FUNCTION_66	IF_7	CALL_18
0x400622c	            0x85c0	                           test eax, eax	      2816	ldlang.c	FUNCTION_66	IF_7	CALL_18
0x400622e	     0xf8557020000	                           jne 0x400648b	      2816	ldlang.c	FUNCTION_66	IF_7	CALL_18
0x4006234	        0x4c8b6d20	            mov r13, qword [rbp + 0x20] 	      2823	ldlang.c	FUNCTION_66	SWITCH_1
0x4006238	      0x410fb64544	           movzx eax, byte [r13 + 0x44] 	      2823	ldlang.c	FUNCTION_66	SWITCH_1
0x400623d	          0x83e007	                              and eax, 7	      2823	ldlang.c	FUNCTION_66	SWITCH_1
0x4006240	            0x3c01	                               cmp al, 1	      2823	ldlang.c	FUNCTION_66	SWITCH_1
0x4006242	            0x7409	                            je 0x400624d	      2823	ldlang.c	FUNCTION_66	SWITCH_1
0x4006244	            0x3c02	                               cmp al, 2	      2823	ldlang.c	FUNCTION_66	SWITCH_1
0x4006246	            0x7440	                            je 0x4006288	      2823	ldlang.c	FUNCTION_66	SWITCH_1
0x4006248	      0xe9ee010000	                           jmp 0x400643b	      2823	ldlang.c	FUNCTION_66	SWITCH_1
0x400624d	        0xf6454910	           test byte [rbp + 0x49], 0x10 	      2829	ldlang.c	FUNCTION_66	SWITCH_1	IF_8
0x4006251	            0x7508	                           jne 0x400625b	      2829	ldlang.c	FUNCTION_66	SWITCH_1	IF_8
0x4006253	          0x4889ef	                            mov rdi, rbp	      2830	ldlang.c	FUNCTION_66	SWITCH_1	CALL_19
0x4006256	      0xe800000000	                          call 0x400625b	      2830	ldlang.c	FUNCTION_66	SWITCH_1	CALL_19
0x400625b	    0x833d00000000	               cmp dword [0x04006262], 0	      2831	ldlang.c	FUNCTION_66	SWITCH_1	IF_9
0x4006262	            0x750d	                           jne 0x4006271	      2831	ldlang.c	FUNCTION_66	SWITCH_1	IF_9
0x4006264	    0x833d00000000	               cmp dword [0x0400626b], 0	      2831	ldlang.c	FUNCTION_66	SWITCH_1	IF_9
0x400626b	     0xf84ca010000	                            je 0x400643b	      2831	ldlang.c	FUNCTION_66	SWITCH_1	IF_9
0x4006271	          0x4889ee	                            mov rsi, rbp	      2832	ldlang.c	FUNCTION_66	SWITCH_1	CALL_20
0x4006274	      0xbf00000000	                              mov edi, 0	      2832	ldlang.c	FUNCTION_66	SWITCH_1	CALL_20
0x4006279	      0xb800000000	                              mov eax, 0	      2832	ldlang.c	FUNCTION_66	SWITCH_1	CALL_20
0x400627e	      0xe800000000	                          call 0x4006283	      2832	ldlang.c	FUNCTION_66	SWITCH_1	CALL_20
0x4006283	      0xe9b3010000	                           jmp 0x400643b	      2832	ldlang.c	FUNCTION_66	SWITCH_1	CALL_20
0x4006288	    0x4c8b25000000	            mov r12, qword [0x0400628f] 	      2713	ldlang.c	FUNCTION_65
0x400628f	          0x4d85e4	                           test r12, r12	      2715	ldlang.c	FUNCTION_65	WHILE_1
0x4006292	     0xf8491000000	                            je 0x4006329	      2715	ldlang.c	FUNCTION_65	WHILE_1
0x4006298	    0x49c7c6ffffff	             mov r14, 0xffffffffffffffff	      2717	ldlang.c	FUNCTION_65	WHILE_1	CALL_1
0x400629f	        0x498b3c24	                    mov rdi, qword [r12]	      2717	ldlang.c	FUNCTION_65	WHILE_1	CALL_1
0x40062a3	      0xb800000000	                              mov eax, 0	      2717	ldlang.c	FUNCTION_65	WHILE_1	CALL_1
0x40062a8	          0x4c89f1	                            mov rcx, r14	      2717	ldlang.c	FUNCTION_65	WHILE_1	CALL_1
0x40062ab	            0xf2ae	              repne scasb al, byte [rdi]	      2717	ldlang.c	FUNCTION_65	WHILE_1	CALL_1
0x40062ad	          0x4889c8	                            mov rax, rcx	      2717	ldlang.c	FUNCTION_65	WHILE_1	CALL_1
0x40062b0	          0x48f7d0	                                 not rax	      2717	ldlang.c	FUNCTION_65	WHILE_1	CALL_1
0x40062b3	        0x488d58ff	                      lea rbx, [rax - 1]	      2717	ldlang.c	FUNCTION_65	WHILE_1	CALL_1
0x40062b7	        0x498b7d00	                    mov rdi, qword [r13]	      2718	ldlang.c	FUNCTION_65	WHILE_1	CALL_2
0x40062bb	      0xe800000000	                          call 0x40062c0	      2718	ldlang.c	FUNCTION_65	WHILE_1	CALL_2
0x40062c0	          0x4989c7	                            mov r15, rax	      2718	ldlang.c	FUNCTION_65	WHILE_1	CALL_2
0x40062c3	        0x498b3c24	                    mov rdi, qword [r12]	      2720	ldlang.c	FUNCTION_65	WHILE_1	IF_1
0x40062c7	          0x803f41	                    cmp byte [rdi], 0x41	      2720	ldlang.c	FUNCTION_65	WHILE_1	IF_1
0x40062ca	            0x7519	                           jne 0x40062e5	      2720	ldlang.c	FUNCTION_65	WHILE_1	IF_1
0x40062cc	        0x807f014c	                cmp byte [rdi + 1], 0x4c	      2720	ldlang.c	FUNCTION_65	WHILE_1	IF_1
0x40062d0	            0x7513	                           jne 0x40062e5	      2720	ldlang.c	FUNCTION_65	WHILE_1	IF_1
0x40062d2	        0x807f024c	                cmp byte [rdi + 2], 0x4c	      2720	ldlang.c	FUNCTION_65	WHILE_1	IF_1
0x40062d6	            0x750d	                           jne 0x40062e5	      2720	ldlang.c	FUNCTION_65	WHILE_1	IF_1
0x40062d8	        0x807f0300	                   cmp byte [rdi + 3], 0	      2720	ldlang.c	FUNCTION_65	WHILE_1	IF_1
0x40062dc	            0x7507	                           jne 0x40062e5	      2720	ldlang.c	FUNCTION_65	WHILE_1	IF_1
0x40062de	      0x41804d4720	              or byte [r13 + 0x47], 0x20	      2722	ldlang.c	FUNCTION_65	WHILE_1	IF_1
0x40062e3	            0xeb44	                           jmp 0x4006329	      2722	ldlang.c	FUNCTION_65	WHILE_1	IF_1
0x40062e5	          0x4863db	                         movsxd rbx, ebx	      2726	ldlang.c	FUNCTION_65	WHILE_1	IF_2	CALL_3
0x40062e8	          0x4889da	                            mov rdx, rbx	      2726	ldlang.c	FUNCTION_65	WHILE_1	IF_2	CALL_3
0x40062eb	          0x4c89fe	                            mov rsi, r15	      2726	ldlang.c	FUNCTION_65	WHILE_1	IF_2	CALL_3
0x40062ee	      0xe800000000	                          call 0x40062f3	      2726	ldlang.c	FUNCTION_65	WHILE_1	IF_2	CALL_3
0x40062f3	            0x85c0	                           test eax, eax	      2726	ldlang.c	FUNCTION_65	WHILE_1	IF_2	CALL_3
0x40062f5	            0x7524	                           jne 0x400631b	      2726	ldlang.c	FUNCTION_65	WHILE_1	IF_2	CALL_3
0x40062f7	      0x410fb6041f	             movzx eax, byte [r15 + rbx]	      2727	ldlang.c	FUNCTION_65	WHILE_1	IF_2
0x40062fc	            0x84c0	                             test al, al	      2727	ldlang.c	FUNCTION_65	WHILE_1	IF_2
0x40062fe	            0x7414	                            je 0x4006314	      2727	ldlang.c	FUNCTION_65	WHILE_1	IF_2
0x4006300	            0x3c2e	                            cmp al, 0x2e	      2728	ldlang.c	FUNCTION_65	WHILE_1	IF_2
0x4006302	            0x7517	                           jne 0x400631b	      2728	ldlang.c	FUNCTION_65	WHILE_1	IF_2
0x4006304	    0x41807c1f0161	         cmp byte [r15 + rbx + 1], 0x61 	      2728	ldlang.c	FUNCTION_65	WHILE_1	IF_2
0x400630a	            0x750f	                           jne 0x400631b	      2728	ldlang.c	FUNCTION_65	WHILE_1	IF_2
0x400630c	    0x41807c1f0200	             cmp byte [r15 + rbx + 2], 0	      2729	ldlang.c	FUNCTION_65	WHILE_1	IF_2
0x4006312	            0x7507	                           jne 0x400631b	      2729	ldlang.c	FUNCTION_65	WHILE_1	IF_2
0x4006314	      0x41804d4720	              or byte [r13 + 0x47], 0x20	      2731	ldlang.c	FUNCTION_65	WHILE_1	IF_2
0x4006319	            0xeb0e	                           jmp 0x4006329	      2731	ldlang.c	FUNCTION_65	WHILE_1	IF_2
0x400631b	      0x4d8b642408	                mov r12, qword [r12 + 8]	      2735	ldlang.c	FUNCTION_65	WHILE_1
0x4006320	          0x4d85e4	                           test r12, r12	      2715	ldlang.c	FUNCTION_65	WHILE_1
0x4006323	     0xf8576ffffff	                           jne 0x400629f	      2715	ldlang.c	FUNCTION_65	WHILE_1
0x4006329	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      2838	ldlang.c	FUNCTION_66	SWITCH_1
0x400632d	    0x4889a8000100	            mov qword [rax + 0x100], rbp	      2838	ldlang.c	FUNCTION_66	SWITCH_1
0x4006334	        0xf6454901	               test byte [rbp + 0x49], 1	      2839	ldlang.c	FUNCTION_66	SWITCH_1	IF_10
0x4006338	     0xf84fd000000	                            je 0x400643b	      2839	ldlang.c	FUNCTION_66	SWITCH_1	IF_10
0x400633e	      0xbb01000000	                              mov ebx, 1	      2839	ldlang.c	FUNCTION_66	SWITCH_1	IF_10
0x4006343	    0x41bc00000000	                             mov r12d, 0	      2839	ldlang.c	FUNCTION_66	SWITCH_1	IF_10
0x4006349	        0x488b7d20	            mov rdi, qword [rbp + 0x20] 	      2847	ldlang.c	FUNCTION_66	SWITCH_1	IF_10	FOR_2	CALL_22
0x400634d	          0x4c89e6	                            mov rsi, r12	      2847	ldlang.c	FUNCTION_66	SWITCH_1	IF_10	FOR_2	CALL_22
0x4006350	      0xe800000000	                          call 0x4006355	      2847	ldlang.c	FUNCTION_66	SWITCH_1	IF_10	FOR_2	CALL_22
0x4006355	          0x4989c4	                            mov r12, rax	      2847	ldlang.c	FUNCTION_66	SWITCH_1	IF_10	FOR_2	CALL_22
0x4006358	          0x4885c0	                           test rax, rax	      2849	ldlang.c	FUNCTION_66	SWITCH_1	IF_10	FOR_2	IF_11
0x400635b	     0xf84c3000000	                            je 0x4006424	      2849	ldlang.c	FUNCTION_66	SWITCH_1	IF_10	FOR_2	IF_11
0x4006361	      0xbe01000000	                              mov esi, 1	      2852	ldlang.c	FUNCTION_66	SWITCH_1	IF_10	FOR_2	IF_12	CALL_23
0x4006366	          0x4889c7	                            mov rdi, rax	      2852	ldlang.c	FUNCTION_66	SWITCH_1	IF_10	FOR_2	IF_12	CALL_23
0x4006369	      0xe800000000	                          call 0x400636e	      2852	ldlang.c	FUNCTION_66	SWITCH_1	IF_10	FOR_2	IF_12	CALL_23
0x400636e	            0x85c0	                           test eax, eax	      2852	ldlang.c	FUNCTION_66	SWITCH_1	IF_10	FOR_2	IF_12	CALL_23
0x4006370	            0x7530	                           jne 0x40063a2	      2852	ldlang.c	FUNCTION_66	SWITCH_1	IF_10	FOR_2	IF_12	CALL_23
0x4006372	        0x488b5d20	            mov rbx, qword [rbp + 0x20] 	      2854	ldlang.c	FUNCTION_66	SWITCH_1	IF_10	FOR_2	IF_12	CALL_25
0x4006376	      0xba05000000	                              mov edx, 5	      2854	ldlang.c	FUNCTION_66	SWITCH_1	IF_10	FOR_2	IF_12	CALL_25
0x400637b	      0xbe00000000	                              mov esi, 0	      2854	ldlang.c	FUNCTION_66	SWITCH_1	IF_10	FOR_2	IF_12	CALL_25
0x4006380	      0xbf00000000	                              mov edi, 0	      2854	ldlang.c	FUNCTION_66	SWITCH_1	IF_10	FOR_2	IF_12	CALL_25
0x4006385	      0xe800000000	                          call 0x400638a	      2854	ldlang.c	FUNCTION_66	SWITCH_1	IF_10	FOR_2	IF_12	CALL_25
0x400638a	          0x4c89e2	                            mov rdx, r12	      2854	ldlang.c	FUNCTION_66	SWITCH_1	IF_10	FOR_2	IF_12	CALL_25
0x400638d	          0x4889de	                            mov rsi, rbx	      2854	ldlang.c	FUNCTION_66	SWITCH_1	IF_10	FOR_2	IF_12	CALL_25
0x4006390	          0x4889c7	                            mov rdi, rax	      2854	ldlang.c	FUNCTION_66	SWITCH_1	IF_10	FOR_2	IF_12	CALL_25
0x4006393	      0xb800000000	                              mov eax, 0	      2854	ldlang.c	FUNCTION_66	SWITCH_1	IF_10	FOR_2	IF_12	CALL_25
0x4006398	      0xe800000000	                          call 0x400639d	      2854	ldlang.c	FUNCTION_66	SWITCH_1	IF_10	FOR_2	IF_12	CALL_25
0x400639d	      0xbb00000000	                              mov ebx, 0	      2856	ldlang.c	FUNCTION_66	SWITCH_1	IF_10	FOR_2	IF_12
0x40063a2	      0x4c89642410	             mov qword [rsp + 0x10], r12	      2859	ldlang.c	FUNCTION_66	SWITCH_1	IF_10	FOR_2
0x40063a7	      0x488d4c2410	                   lea rcx, [rsp + 0x10]	      2860	ldlang.c	FUNCTION_66	SWITCH_1	IF_10	FOR_2	IF_13
0x40063ac	      0xba00000000	                              mov edx, 0	      2860	ldlang.c	FUNCTION_66	SWITCH_1	IF_10	FOR_2	IF_13
0x40063b1	          0x4c89e6	                            mov rsi, r12	      2860	ldlang.c	FUNCTION_66	SWITCH_1	IF_10	FOR_2	IF_13
0x40063b4	      0xbf00000000	                              mov edi, 0	      2860	ldlang.c	FUNCTION_66	SWITCH_1	IF_10	FOR_2	IF_13
0x40063b9	    0x488b05000000	            mov rax, qword [0x040063c0] 	      2860	ldlang.c	FUNCTION_66	SWITCH_1	IF_10	FOR_2	IF_13
0x40063c0	            0xff10	                        call qword [rax]	      2860	ldlang.c	FUNCTION_66	SWITCH_1	IF_10	FOR_2	IF_13
0x40063c2	            0x85c0	                           test eax, eax	      2860	ldlang.c	FUNCTION_66	SWITCH_1	IF_10	FOR_2	IF_13
0x40063c4	            0x7514	                           jne 0x40063da	      2860	ldlang.c	FUNCTION_66	SWITCH_1	IF_10	FOR_2	IF_13
0x40063c6	      0xba00000000	                              mov edx, 0	      2863	ldlang.c	FUNCTION_66	SWITCH_1	IF_10	FOR_2	CALL_26
0x40063cb	      0xbe2f0b0000	                          mov esi, 0xb2f	      2863	ldlang.c	FUNCTION_66	SWITCH_1	IF_10	FOR_2	CALL_26
0x40063d0	      0xbf00000000	                              mov edi, 0	      2863	ldlang.c	FUNCTION_66	SWITCH_1	IF_10	FOR_2	CALL_26
0x40063d5	      0xe800000000	                          call 0x40063da	      2863	ldlang.c	FUNCTION_66	SWITCH_1	IF_10	FOR_2	CALL_26
0x40063da	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      2867	ldlang.c	FUNCTION_66	SWITCH_1	IF_10	FOR_2	IF_14
0x40063df	        0x488b4708	                mov rax, qword [rdi + 8]	      2867	ldlang.c	FUNCTION_66	SWITCH_1	IF_10	FOR_2	IF_14
0x40063e3	      0xbe00000000	                              mov esi, 0	      2867	ldlang.c	FUNCTION_66	SWITCH_1	IF_10	FOR_2	IF_14
0x40063e8	    0xff90c0020000	                call qword [rax + 0x2c0]	      2867	ldlang.c	FUNCTION_66	SWITCH_1	IF_10	FOR_2	IF_14
0x40063ee	            0x85c0	                           test eax, eax	      2867	ldlang.c	FUNCTION_66	SWITCH_1	IF_10	FOR_2	IF_14
0x40063f0	     0xf8553ffffff	                           jne 0x4006349	      2867	ldlang.c	FUNCTION_66	SWITCH_1	IF_10	FOR_2	IF_14
0x40063f6	      0xba05000000	                              mov edx, 5	      2869	ldlang.c	FUNCTION_66	SWITCH_1	IF_10	FOR_2	IF_14	CALL_28
0x40063fb	      0xbe00000000	                              mov esi, 0	      2869	ldlang.c	FUNCTION_66	SWITCH_1	IF_10	FOR_2	IF_14	CALL_28
0x4006400	      0xbf00000000	                              mov edi, 0	      2869	ldlang.c	FUNCTION_66	SWITCH_1	IF_10	FOR_2	IF_14	CALL_28
0x4006405	      0xe800000000	                          call 0x400640a	      2869	ldlang.c	FUNCTION_66	SWITCH_1	IF_10	FOR_2	IF_14	CALL_28
0x400640a	          0x4c89e6	                            mov rsi, r12	      2869	ldlang.c	FUNCTION_66	SWITCH_1	IF_10	FOR_2	IF_14	CALL_28
0x400640d	          0x4889c7	                            mov rdi, rax	      2869	ldlang.c	FUNCTION_66	SWITCH_1	IF_10	FOR_2	IF_14	CALL_28
0x4006410	      0xb800000000	                              mov eax, 0	      2869	ldlang.c	FUNCTION_66	SWITCH_1	IF_10	FOR_2	IF_14	CALL_28
0x4006415	      0xe800000000	                          call 0x400641a	      2869	ldlang.c	FUNCTION_66	SWITCH_1	IF_10	FOR_2	IF_14	CALL_28
0x400641a	      0xbb00000000	                              mov ebx, 0	      2870	ldlang.c	FUNCTION_66	SWITCH_1	IF_10	FOR_2	IF_14
0x400641f	      0xe925ffffff	                           jmp 0x4006349	      2872	ldlang.c	FUNCTION_66	SWITCH_1	IF_10	FOR_2
0x4006424	            0x89d8	                            mov eax, ebx	      2874	ldlang.c	FUNCTION_66	SWITCH_1	IF_10
0x4006426	          0x83e001	                              and eax, 1	      2874	ldlang.c	FUNCTION_66	SWITCH_1	IF_10
0x4006429	             0x1c0	                            add eax, eax	      2874	ldlang.c	FUNCTION_66	SWITCH_1	IF_10
0x400642b	         0xfb65549	           movzx edx, byte [rbp + 0x49] 	      2874	ldlang.c	FUNCTION_66	SWITCH_1	IF_10
0x400642f	          0x83e2fd	                     and edx, 0xfffffffd	      2874	ldlang.c	FUNCTION_66	SWITCH_1	IF_10
0x4006432	             0x9d0	                             or eax, edx	      2874	ldlang.c	FUNCTION_66	SWITCH_1	IF_10
0x4006434	          0x884549	               mov byte [rbp + 0x49], al	      2874	ldlang.c	FUNCTION_66	SWITCH_1	IF_10
0x4006437	            0x89d8	                            mov eax, ebx	      2875	ldlang.c	FUNCTION_66	SWITCH_1	IF_10
0x4006439	            0xeb55	                           jmp 0x4006490	      2875	ldlang.c	FUNCTION_66	SWITCH_1	IF_10
0x400643b	        0x488b7d20	            mov rdi, qword [rbp + 0x20] 	      2880	ldlang.c	FUNCTION_66	IF_15
0x400643f	        0x488b4708	                mov rax, qword [rdi + 8]	      2880	ldlang.c	FUNCTION_66	IF_15
0x4006443	      0xbe00000000	                              mov esi, 0	      2880	ldlang.c	FUNCTION_66	IF_15
0x4006448	    0xff90c0020000	                call qword [rax + 0x2c0]	      2880	ldlang.c	FUNCTION_66	IF_15
0x400644e	            0x85c0	                           test eax, eax	      2880	ldlang.c	FUNCTION_66	IF_15
0x4006450	            0x7406	                            je 0x4006458	      2880	ldlang.c	FUNCTION_66	IF_15
0x4006452	        0x804d4902	                 or byte [rbp + 0x49], 2	      2881	ldlang.c	FUNCTION_66	IF_15
0x4006456	            0xeb28	                           jmp 0x4006480	      2881	ldlang.c	FUNCTION_66	IF_15
0x4006458	        0x488b5d20	            mov rbx, qword [rbp + 0x20] 	      2883	ldlang.c	FUNCTION_66	CALL_30
0x400645c	      0xba05000000	                              mov edx, 5	      2883	ldlang.c	FUNCTION_66	CALL_30
0x4006461	      0xbe00000000	                              mov esi, 0	      2883	ldlang.c	FUNCTION_66	CALL_30
0x4006466	      0xbf00000000	                              mov edi, 0	      2883	ldlang.c	FUNCTION_66	CALL_30
0x400646b	      0xe800000000	                          call 0x4006470	      2883	ldlang.c	FUNCTION_66	CALL_30
0x4006470	          0x4889de	                            mov rsi, rbx	      2883	ldlang.c	FUNCTION_66	CALL_30
0x4006473	          0x4889c7	                            mov rdi, rax	      2883	ldlang.c	FUNCTION_66	CALL_30
0x4006476	      0xb800000000	                              mov eax, 0	      2883	ldlang.c	FUNCTION_66	CALL_30
0x400647b	      0xe800000000	                          call 0x4006480	      2883	ldlang.c	FUNCTION_66	CALL_30
0x4006480	         0xfb64549	           movzx eax, byte [rbp + 0x49] 	      2885	ldlang.c	FUNCTION_66
0x4006484	            0xd0e8	                               shr al, 1	      2885	ldlang.c	FUNCTION_66
0x4006486	          0x83e001	                              and eax, 1	      2885	ldlang.c	FUNCTION_66
0x4006489	            0xeb05	                           jmp 0x4006490	      2885	ldlang.c	FUNCTION_66
0x400648b	      0xb801000000	                              mov eax, 1	      2817	ldlang.c	FUNCTION_66	IF_7
0x4006490	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      2886	ldlang.c	FUNCTION_66
0x4006495	    0x644833142528	                xor rdx, qword fs:[0x28]	      2886	ldlang.c	FUNCTION_66
0x400649e	            0x7405	                            je 0x40064a5	      2886	ldlang.c	FUNCTION_66
0x40064a0	      0xe800000000	                          call 0x40064a5	      2886	ldlang.c	FUNCTION_66
0x40064a5	        0x4883c428	                           add rsp, 0x28	      2886	ldlang.c	FUNCTION_66
0x40064a9	              0x5b	                                 pop rbx	      2886	ldlang.c	FUNCTION_66
0x40064aa	              0x5d	                                 pop rbp	      2886	ldlang.c	FUNCTION_66
0x40064ab	            0x415c	                                 pop r12	      2886	ldlang.c	FUNCTION_66
0x40064ad	            0x415d	                                 pop r13	      2886	ldlang.c	FUNCTION_66
0x40064af	            0x415e	                                 pop r14	      2886	ldlang.c	FUNCTION_66
0x40064b1	            0x415f	                                 pop r15	      2886	ldlang.c	FUNCTION_66
0x40064b3	              0xc3	                                     ret	      2886	ldlang.c	FUNCTION_66
open_input_bfds	IF,9:WHILE,0:FOR,1:DO,1:SWITCH,1:functions,0:CALL,13:ELSE,1	182
0x4006a85	            0x4157	                                push r15	      3253	ldlang.c	FUNCTION_78
0x4006a87	            0x4156	                                push r14	      3253	ldlang.c	FUNCTION_78
0x4006a89	            0x4155	                                push r13	      3253	ldlang.c	FUNCTION_78
0x4006a8b	            0x4154	                                push r12	      3253	ldlang.c	FUNCTION_78
0x4006a8d	              0x55	                                push rbp	      3253	ldlang.c	FUNCTION_78
0x4006a8e	              0x53	                                push rbx	      3253	ldlang.c	FUNCTION_78
0x4006a8f	        0x4883ec28	                           sub rsp, 0x28	      3253	ldlang.c	FUNCTION_78
0x4006a93	    0x64488b042528	                mov rax, qword fs:[0x28]	      3253	ldlang.c	FUNCTION_78
0x4006a9c	      0x4889442418	             mov qword [rsp + 0x18], rax	      3253	ldlang.c	FUNCTION_78
0x4006aa1	            0x31c0	                            xor eax, eax	      3253	ldlang.c	FUNCTION_78
0x4006aa3	          0x4885ff	                           test rdi, rdi	      3254	ldlang.c	FUNCTION_78	FOR_1
0x4006aa6	     0xf8449020000	                            je 0x4006cf5	      3254	ldlang.c	FUNCTION_78	FOR_1
0x4006aac	          0x4889fb	                            mov rbx, rdi	      3254	ldlang.c	FUNCTION_78	FOR_1
0x4006aaf	          0x4189f4	                           mov r12d, esi	      3254	ldlang.c	FUNCTION_78	FOR_1
0x4006ab2	            0x89f5	                            mov ebp, esi	      3284	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	DO_1	CALL_6
0x4006ab4	          0x83cd01	                               or ebp, 1	      3284	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	DO_1	CALL_6
0x4006ab7	          0x4189f7	                           mov r15d, esi	      3309	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4006aba	        0x4183e702	                             and r15d, 2	      3309	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4006abe	    0x49bd01002000	             movabs r13, 0x2000000200001	      1115	string2.h	FUNCTION_240	WHILE_1
0x4006ac8	        0x837b080f	                cmp dword [rbx + 8], 0xf	      3256	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1
0x4006acc	     0xf8717020000	                            ja 0x4006ce9	      3256	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1
0x4006ad2	          0x8b4308	                mov eax, dword [rbx + 8]	      3256	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1
0x4006ad5	    0xff24c5000000	                       jmp qword [rax*8]	      3256	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1
0x4006adc	          0x4489e6	                           mov esi, r12d	      3259	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	CALL_1
0x4006adf	    0x488b3d000000	            mov rdi, qword [0x04006ae6] 	      3259	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	CALL_1
0x4006ae6	      0xe89affffff	                call sym.open_input_bfds	      3259	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	CALL_1
0x4006aeb	      0xe9f9010000	                           jmp 0x4006ce9	      3260	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1
0x4006af0	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      3262	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	CALL_2
0x4006af4	          0x4489e6	                           mov esi, r12d	      3262	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	CALL_2
0x4006af7	      0xe889ffffff	                call sym.open_input_bfds	      3262	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	CALL_2
0x4006afc	      0xe9e8010000	                           jmp 0x4006ce9	      3263	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1
0x4006b01	          0x4585ff	                         test r15d, r15d	      3266	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_1
0x4006b04	            0x7558	                           jne 0x4006b5e	      3266	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_1
0x4006b06	        0x4c8b7310	            mov r14, qword [rbx + 0x10] 	      3267	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_1
0x4006b0a	          0x4d85f6	                           test r14, r14	      3267	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_1
0x4006b0d	            0x744f	                            je 0x4006b5e	      3267	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_1
0x4006b0f	        0x410fb606	                   movzx eax, byte [r14]	      1114	string2.h	FUNCTION_240	WHILE_1
0x4006b13	            0x84c0	                             test al, al	      1114	string2.h	FUNCTION_240	WHILE_1
0x4006b15	            0x7432	                            je 0x4006b49	      1114	string2.h	FUNCTION_240	WHILE_1
0x4006b17	          0x83e82a	                           sub eax, 0x2a	      1114	string2.h	FUNCTION_240	WHILE_1
0x4006b1a	            0x3c31	                            cmp al, 0x31	      1114	string2.h	FUNCTION_240	WHILE_1
0x4006b1c	            0x770b	                            ja 0x4006b29	      1114	string2.h	FUNCTION_240	WHILE_1
0x4006b1e	        0x490fa3c5	                             bt r13, rax	      1115	string2.h	FUNCTION_240	WHILE_1
0x4006b22	            0x723a	                            jb 0x4006b5e	      1115	string2.h	FUNCTION_240	WHILE_1
0x4006b24	          0x4c89f2	                            mov rdx, r14	      1115	string2.h	FUNCTION_240	WHILE_1
0x4006b27	            0xeb03	                           jmp 0x4006b2c	      1115	string2.h	FUNCTION_240	WHILE_1
0x4006b29	          0x4c89f2	                            mov rdx, r14	      1114	string2.h	FUNCTION_240	WHILE_1
0x4006b2c	        0x4883c201	                              add rdx, 1	      1116	string2.h	FUNCTION_240	WHILE_1
0x4006b30	           0xfb602	                   movzx eax, byte [rdx]	      1114	string2.h	FUNCTION_240	WHILE_1
0x4006b33	            0x84c0	                             test al, al	      1114	string2.h	FUNCTION_240	WHILE_1
0x4006b35	            0x7412	                            je 0x4006b49	      1114	string2.h	FUNCTION_240	WHILE_1
0x4006b37	          0x83e82a	                           sub eax, 0x2a	      1114	string2.h	FUNCTION_240	WHILE_1
0x4006b3a	            0x3c31	                            cmp al, 0x31	      1114	string2.h	FUNCTION_240	WHILE_1
0x4006b3c	            0x77ee	                            ja 0x4006b2c	      1114	string2.h	FUNCTION_240	WHILE_1
0x4006b3e	        0x490fa3c5	                             bt r13, rax	      1115	string2.h	FUNCTION_240	WHILE_1
0x4006b42	            0x73e8	                           jae 0x4006b2c	      1115	string2.h	FUNCTION_240	WHILE_1
0x4006b44	          0x4885d2	                           test rdx, rdx	      3268	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_1
0x4006b47	            0x7515	                           jne 0x4006b5e	      3268	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_1
0x4006b49	          0x4c89f7	                            mov rdi, r14	      3269	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_1	CALL_3
0x4006b4c	      0xe84aafffff	                   call sym.archive_path	      3269	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_1	CALL_3
0x4006b51	          0x4885c0	                           test rax, rax	      3269	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_1	CALL_3
0x4006b54	            0x7508	                           jne 0x4006b5e	      3269	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_1	CALL_3
0x4006b56	          0x4c89f7	                            mov rdi, r14	      3270	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	CALL_4
0x4006b59	      0xe856f9ffff	                    call sym.lookup_name	      3270	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	CALL_4
0x4006b5e	        0x488b7b30	            mov rdi, qword [rbx + 0x30] 	      3271	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	CALL_5
0x4006b62	          0x4489e6	                           mov esi, r12d	      3271	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	CALL_5
0x4006b65	      0xe81bffffff	                call sym.open_input_bfds	      3271	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	CALL_5
0x4006b6a	      0xe97a010000	                           jmp 0x4006ce9	      3272	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1
0x4006b6f	    0x488b05000000	            mov rax, qword [0x04006b76] 	      3283	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	DO_1
0x4006b76	        0x4c8b7030	            mov r14, qword [rax + 0x30] 	      3283	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	DO_1
0x4006b7a	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      3284	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	DO_1	CALL_6
0x4006b7e	            0x89ee	                            mov esi, ebp	      3284	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	DO_1	CALL_6
0x4006b80	      0xe800ffffff	                call sym.open_input_bfds	      3284	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	DO_1	CALL_6
0x4006b85	    0x488b05000000	            mov rax, qword [0x04006b8c] 	      3287	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1
0x4006b8c	        0x4c3b7030	            cmp r14, qword [rax + 0x30] 	      3287	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1
0x4006b90	            0x75dd	                           jne 0x4006b6f	      3287	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1
0x4006b92	      0xe952010000	                           jmp 0x4006ce9	      3287	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1
0x4006b97	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      3291	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1
0x4006b9b	    0x488905000000	            mov qword [0x04006ba2], rax 	      3291	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1
0x4006ba2	      0xe942010000	                           jmp 0x4006ce9	      3292	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1
0x4006ba7	         0xfb64349	           movzx eax, byte [rbx + 0x49] 	      3294	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2
0x4006bab	            0xa804	                              test al, 4	      3294	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2
0x4006bad	     0xf8411010000	                            je 0x4006cc4	      3294	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2
0x4006bb3	    0x488b15000000	            mov rdx, qword [0x04006bba] 	      3300	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2
0x4006bba	        0x48895340	             mov qword [rbx + 0x40], rdx	      3300	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2
0x4006bbe	          0x4585e4	                         test r12d, r12d	      3307	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4006bc1	            0x7466	                            je 0x4006c29	      3307	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4006bc3	          0x4585ff	                         test r15d, r15d	      3309	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4006bc6	            0x740a	                            je 0x4006bd2	      3309	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4006bc8	    0x48833d000000	               cmp qword [0x04006bd0], 0	      3310	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4006bd0	            0x7557	                           jne 0x4006c29	      3310	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4006bd2	            0xa802	                              test al, 2	      3312	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4006bd4	            0x7453	                            je 0x4006c29	      3312	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4006bd6	        0x488b4b20	            mov rcx, qword [rbx + 0x20] 	      3313	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4006bda	          0x4885c9	                           test rcx, rcx	      3313	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4006bdd	            0x744a	                            je 0x4006c29	      3313	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4006bdf	         0xfb65144	           movzx edx, byte [rcx + 0x44] 	      3314	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4006be3	          0x83e207	                              and edx, 7	      3314	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4006be6	          0x80fa02	                               cmp dl, 2	      3314	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4006be9	            0x7506	                           jne 0x4006bf1	      3314	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4006beb	            0xa801	                              test al, 1	      3315	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4006bed	            0x742d	                            je 0x4006c1c	      3315	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4006bef	            0xeb38	                           jmp 0x4006c29	      3315	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4006bf1	          0x80fa01	                               cmp dl, 1	      3316	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4006bf4	            0x7533	                           jne 0x4006c29	      3316	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4006bf6	        0xf6414508	               test byte [rcx + 0x45], 8	      3317	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4006bfa	            0x742d	                            je 0x4006c29	      3317	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4006bfc	        0x807b4800	                cmp byte [rbx + 0x48], 0	      3318	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4006c00	            0x7927	                           jns 0x4006c29	      3318	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4006c02	        0x488b4108	                mov rax, qword [rcx + 8]	      3319	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4006c06	        0x83780805	                  cmp dword [rax + 8], 5	      3319	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4006c0a	            0x751d	                           jne 0x4006c29	      3319	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4006c0c	    0x488b81f80000	            mov rax, qword [rcx + 0xf8] 	      3320	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3	CALL_7
0x4006c13	    0xf6808c0c0000	          test byte [rax + 0xc8c], 0x40 	      3320	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3	CALL_7
0x4006c1a	            0x740d	                            je 0x4006c29	      3320	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3	CALL_7
0x4006c1c	         0xfb64349	           movzx eax, byte [rbx + 0x49] 	      3322	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4006c20	          0x83e0fd	                     and eax, 0xfffffffd	      3322	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4006c23	          0x83c810	                            or eax, 0x10	      3323	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4006c26	          0x884349	               mov byte [rbx + 0x49], al	      3323	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_3
0x4006c29	    0x4c8b35000000	            mov r14, qword [0x04006c30] 	      3326	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2
0x4006c30	    0x48c704240000	                      mov qword [rsp], 0	      1009	ldlang.c	FUNCTION_30
0x4006c38	      0x4889642408	                mov qword [rsp + 8], rsp	      1010	ldlang.c	FUNCTION_30
0x4006c3d	          0x4889e6	                            mov rsi, rsp	      3329	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_4	CALL_9
0x4006c40	          0x4889df	                            mov rdi, rbx	      3329	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_4	CALL_9
0x4006c43	      0xe800000000	                          call 0x4006c48	      3329	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_4	CALL_9
0x4006c48	            0x85c0	                           test eax, eax	      3329	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_4	CALL_9
0x4006c4a	            0x750a	                           jne 0x4006c56	      3329	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_4	CALL_9
0x4006c4c	    0xc70500000000	               mov dword [0x04006c56], 0	      3330	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_4
0x4006c56	      0x48833c2400	                      cmp qword [rsp], 0	      3332	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5
0x4006c5b	            0x7467	                            je 0x4006cc4	      3332	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5
0x4006c5d	    0x4c3b35000000	            cmp r14, qword [0x04006c64] 	      3340	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	IF_6
0x4006c64	            0x744c	                            je 0x4006cb2	      3340	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	IF_6
0x4006c66	        0x4c8b7310	            mov r14, qword [rbx + 0x10] 	      3342	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	IF_6	CALL_11
0x4006c6a	      0xba05000000	                              mov edx, 5	      3342	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	IF_6	CALL_11
0x4006c6f	      0xbe00000000	                              mov esi, 0	      3342	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	IF_6	CALL_11
0x4006c74	      0xbf00000000	                              mov edi, 0	      3342	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	IF_6	CALL_11
0x4006c79	      0xe800000000	                          call 0x4006c7e	      3342	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	IF_6	CALL_11
0x4006c7e	          0x4c89f6	                            mov rsi, r14	      3342	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	IF_6	CALL_11
0x4006c81	          0x4889c7	                            mov rdi, rax	      3342	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	IF_6	CALL_11
0x4006c84	      0xb800000000	                              mov eax, 0	      3342	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	IF_6	CALL_11
0x4006c89	      0xe800000000	                          call 0x4006c8e	      3342	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	IF_6	CALL_11
0x4006c8e	    0x488b05000000	            mov rax, qword [0x04006c95] 	      3345	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	IF_6
0x4006c95	        0x488b4008	                mov rax, qword [rax + 8]	      3345	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	IF_6
0x4006c99	        0x488b1424	                    mov rdx, qword [rsp]	      3345	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	IF_6
0x4006c9d	          0x488910	                    mov qword [rax], rdx	      3345	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	IF_6
0x4006ca0	    0x488b05000000	            mov rax, qword [0x04006ca7] 	      3346	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	IF_6
0x4006ca7	      0x488b542408	                mov rdx, qword [rsp + 8]	      3346	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	IF_6
0x4006cac	        0x48895008	                mov qword [rax + 8], rdx	      3346	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	IF_6
0x4006cb0	            0xeb12	                           jmp 0x4006cc4	      3346	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	IF_6
0x4006cb2	          0x488b13	                    mov rdx, qword [rbx]	      3350	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	ELSE_1
0x4006cb5	      0x488b442408	                mov rax, qword [rsp + 8]	      3350	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	ELSE_1
0x4006cba	          0x488910	                    mov qword [rax], rdx	      3350	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	ELSE_1
0x4006cbd	        0x488b0424	                    mov rax, qword [rsp]	      3351	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	ELSE_1
0x4006cc1	          0x488903	                    mov qword [rbx], rax	      3351	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_2	IF_5	ELSE_1
0x4006cc4	    0x483b1d000000	            cmp rbx, qword [0x04006ccb] 	      3358	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_7
0x4006ccb	            0x751c	                           jne 0x4006ce9	      3358	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_7
0x4006ccd	    0x48c705000000	               mov qword [0x04006cd8], 0	      3359	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_7
0x4006cd8	            0xeb0f	                           jmp 0x4006ce9	      3359	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_7
0x4006cda	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      3363	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_8
0x4006cde	        0x837f1008	               cmp dword [rdi + 0x10], 8	      3363	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_8
0x4006ce2	            0x7405	                            je 0x4006ce9	      3363	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	IF_8
0x4006ce4	      0xe800000000	                          call 0x4006ce9	      3364	ldlang.c	FUNCTION_78	FOR_1	SWITCH_1	CALL_12
0x4006ce9	          0x488b1b	                    mov rbx, qword [rbx]	      3254	ldlang.c	FUNCTION_78	FOR_1
0x4006cec	          0x4885db	                           test rbx, rbx	      3254	ldlang.c	FUNCTION_78	FOR_1
0x4006cef	     0xf85d3fdffff	                           jne 0x4006ac8	      3254	ldlang.c	FUNCTION_78	FOR_1
0x4006cf5	    0xf60500000000	               test byte [0x04006cfc], 8	      3372	ldlang.c	FUNCTION_78	IF_9
0x4006cfc	            0x740f	                            je 0x4006d0d	      3372	ldlang.c	FUNCTION_78	IF_9
0x4006cfe	      0xbf00000000	                              mov edi, 0	      3373	ldlang.c	FUNCTION_78	CALL_13
0x4006d03	      0xb800000000	                              mov eax, 0	      3373	ldlang.c	FUNCTION_78	CALL_13
0x4006d08	      0xe800000000	                          call 0x4006d0d	      3373	ldlang.c	FUNCTION_78	CALL_13
0x4006d0d	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      3374	ldlang.c	FUNCTION_78
0x4006d12	    0x644833042528	                xor rax, qword fs:[0x28]	      3374	ldlang.c	FUNCTION_78
0x4006d1b	            0x7405	                            je 0x4006d22	      3374	ldlang.c	FUNCTION_78
0x4006d1d	      0xe800000000	                          call 0x4006d22	      3374	ldlang.c	FUNCTION_78
0x4006d22	        0x4883c428	                           add rsp, 0x28	      3374	ldlang.c	FUNCTION_78
0x4006d26	              0x5b	                                 pop rbx	      3374	ldlang.c	FUNCTION_78
0x4006d27	              0x5d	                                 pop rbp	      3374	ldlang.c	FUNCTION_78
0x4006d28	            0x415c	                                 pop r12	      3374	ldlang.c	FUNCTION_78
0x4006d2a	            0x415d	                                 pop r13	      3374	ldlang.c	FUNCTION_78
0x4006d2c	            0x415e	                                 pop r14	      3374	ldlang.c	FUNCTION_78
0x4006d2e	            0x415f	                                 pop r15	      3374	ldlang.c	FUNCTION_78
0x4006d30	              0xc3	                                     ret	      3374	ldlang.c	FUNCTION_78
lang_add_nocrossref_to	IF,0:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,1:ELSE,0	6
0x4008112	        0x4883ec08	                              sub rsp, 8	      7920	ldlang.c	FUNCTION_187
0x4008116	      0xe800000000	                          call 0x400811b	      7921	ldlang.c	FUNCTION_187	CALL_1
0x400811b	    0x488b05000000	            mov rax, qword [0x04008122] 	      7922	ldlang.c	FUNCTION_187
0x4008122	    0xc74010010000	               mov dword [rax + 0x10], 1	      7922	ldlang.c	FUNCTION_187
0x4008129	        0x4883c408	                              add rsp, 8	      7923	ldlang.c	FUNCTION_187
0x400812d	              0xc3	                                     ret	      7923	ldlang.c	FUNCTION_187
ldlang_override_segment_assignment	IF,4:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,2:ELSE,0	43
0x4005b55	              0x55	                                push rbp	      5561	ldlang.c	FUNCTION_116
0x4005b56	              0x53	                                push rbx	      5561	ldlang.c	FUNCTION_116
0x4005b57	        0x4883ec08	                              sub rsp, 8	      5561	ldlang.c	FUNCTION_116
0x4005b5b	      0xb801000000	                              mov eax, 1	      5568	ldlang.c	FUNCTION_116	IF_1
0x4005b60	          0x4585c0	                           test r8d, r8d	      5567	ldlang.c	FUNCTION_116	IF_1
0x4005b63	            0x7572	                           jne 0x4005bd7	      5567	ldlang.c	FUNCTION_116	IF_1
0x4005b65	          0x4885d2	                           test rdx, rdx	      5571	ldlang.c	FUNCTION_116	IF_2
0x4005b68	            0x7461	                            je 0x4005bcb	      5571	ldlang.c	FUNCTION_116	IF_2
0x4005b6a	          0x4885c9	                           test rcx, rcx	      5571	ldlang.c	FUNCTION_116	IF_2
0x4005b6d	            0x745c	                            je 0x4005bcb	      5571	ldlang.c	FUNCTION_116	IF_2
0x4005b6f	    0x833d00000000	               cmp dword [0x04005b76], 0	      5576	ldlang.c	FUNCTION_116	IF_3
0x4005b76	            0x740c	                            je 0x4005b84	      5576	ldlang.c	FUNCTION_116	IF_3
0x4005b78	          0x8b7220	            mov esi, dword [rdx + 0x20] 	      5577	ldlang.c	FUNCTION_116	IF_3
0x4005b7b	          0x337120	             xor esi, dword [rcx + 0x20]	      5577	ldlang.c	FUNCTION_116	IF_3
0x4005b7e	        0x40f6c610	                          test sil, 0x10	      5577	ldlang.c	FUNCTION_116	IF_3
0x4005b82	            0x7553	                           jne 0x4005bd7	      5577	ldlang.c	FUNCTION_116	IF_3
0x4005b84	          0x4889cb	                            mov rbx, rcx	      5577	ldlang.c	FUNCTION_116	IF_3
0x4005b87	          0x4889d0	                            mov rax, rdx	      5577	ldlang.c	FUNCTION_116	IF_3
0x4005b8a	      0xba00000000	                              mov edx, 0	      5584	ldlang.c	FUNCTION_116	CALL_1
0x4005b8f	      0xbe00000000	                              mov esi, 0	      5584	ldlang.c	FUNCTION_116	CALL_1
0x4005b94	          0x488b38	                    mov rdi, qword [rax]	      5584	ldlang.c	FUNCTION_116	CALL_1
0x4005b97	      0xe800000000	                          call 0x4005b9c	      5584	ldlang.c	FUNCTION_116	CALL_1
0x4005b9c	          0x4889c5	                            mov rbp, rax	      5584	ldlang.c	FUNCTION_116	CALL_1
0x4005b9f	      0xba00000000	                              mov edx, 0	      5585	ldlang.c	FUNCTION_116	CALL_2
0x4005ba4	      0xbe00000000	                              mov esi, 0	      5585	ldlang.c	FUNCTION_116	CALL_2
0x4005ba9	          0x488b3b	                    mov rdi, qword [rbx]	      5585	ldlang.c	FUNCTION_116	CALL_2
0x4005bac	      0xe800000000	                          call 0x4005bb1	      5585	ldlang.c	FUNCTION_116	CALL_2
0x4005bb1	          0x4885ed	                           test rbp, rbp	      5588	ldlang.c	FUNCTION_116	IF_4
0x4005bb4	            0x741c	                            je 0x4005bd2	      5588	ldlang.c	FUNCTION_116	IF_4
0x4005bb6	          0x4885c0	                           test rax, rax	      5588	ldlang.c	FUNCTION_116	IF_4
0x4005bb9	            0x7417	                            je 0x4005bd2	      5588	ldlang.c	FUNCTION_116	IF_4
0x4005bbb	        0x488b4040	            mov rax, qword [rax + 0x40] 	      5595	ldlang.c	FUNCTION_116
0x4005bbf	        0x48394540	            cmp qword [rbp + 0x40], rax 	      5595	ldlang.c	FUNCTION_116
0x4005bc3	           0xf95c0	                                setne al	      5595	ldlang.c	FUNCTION_116
0x4005bc6	           0xfb6c0	                           movzx eax, al	      5595	ldlang.c	FUNCTION_116
0x4005bc9	            0xeb0c	                           jmp 0x4005bd7	      5595	ldlang.c	FUNCTION_116
0x4005bcb	      0xb800000000	                              mov eax, 0	      5572	ldlang.c	FUNCTION_116	IF_2
0x4005bd0	            0xeb05	                           jmp 0x4005bd7	      5572	ldlang.c	FUNCTION_116	IF_2
0x4005bd2	      0xb800000000	                              mov eax, 0	      5589	ldlang.c	FUNCTION_116	IF_4
0x4005bd7	        0x4883c408	                              add rsp, 8	      5596	ldlang.c	FUNCTION_116
0x4005bdb	              0x5b	                                 pop rbx	      5596	ldlang.c	FUNCTION_116
0x4005bdc	              0x5d	                                 pop rbp	      5596	ldlang.c	FUNCTION_116
0x4005bdd	              0xc3	                                     ret	      5596	ldlang.c	FUNCTION_116
lang_vers_match	IF,21:WHILE,3:FOR,1:DO,0:SWITCH,1:functions,0:CALL,12:ELSE,6	187
0x400287b	            0x4157	                                push r15	      8126	ldlang.c	FUNCTION_192
0x400287d	            0x4156	                                push r14	      8126	ldlang.c	FUNCTION_192
0x400287f	            0x4155	                                push r13	      8126	ldlang.c	FUNCTION_192
0x4002881	            0x4154	                                push r12	      8126	ldlang.c	FUNCTION_192
0x4002883	              0x55	                                push rbp	      8126	ldlang.c	FUNCTION_192
0x4002884	              0x53	                                push rbx	      8126	ldlang.c	FUNCTION_192
0x4002885	        0x4883ec38	                           sub rsp, 0x38	      8126	ldlang.c	FUNCTION_192
0x4002889	          0x4989ff	                            mov r15, rdi	      8126	ldlang.c	FUNCTION_192
0x400288c	        0x48893424	                    mov qword [rsp], rsi	      8126	ldlang.c	FUNCTION_192
0x4002890	          0x4989d6	                            mov r14, rdx	      8126	ldlang.c	FUNCTION_192
0x4002893	    0x64488b042528	                mov rax, qword fs:[0x28]	      8126	ldlang.c	FUNCTION_192
0x400289c	      0x4889442428	             mov qword [rsp + 0x28], rax	      8126	ldlang.c	FUNCTION_192
0x40028a1	            0x31c0	                            xor eax, eax	      8126	ldlang.c	FUNCTION_192
0x40028a3	    0x8b1d00000000	            mov ebx, dword [0x040028a9] 	      8133	ldlang.c	FUNCTION_192
0x40028a9	      0xbfffffffff	                     mov edi, 0xffffffff	      8134	ldlang.c	FUNCTION_192	CALL_1
0x40028ae	      0xe800000000	                          call 0x40028b3	      8134	ldlang.c	FUNCTION_192	CALL_1
0x40028b3	      0xba00000000	                              mov edx, 0	      8135	ldlang.c	FUNCTION_192	CALL_2
0x40028b8	          0x4c89f6	                            mov rsi, r14	      8135	ldlang.c	FUNCTION_192	CALL_2
0x40028bb	    0x488b3d000000	            mov rdi, qword [0x040028c2] 	      8135	ldlang.c	FUNCTION_192	CALL_2
0x40028c2	      0xe800000000	                          call 0x40028c7	      8135	ldlang.c	FUNCTION_192	CALL_2
0x40028c7	          0x4989c4	                            mov r12, rax	      8135	ldlang.c	FUNCTION_192	CALL_2
0x40028ca	          0x4885c0	                           test rax, rax	      8137	ldlang.c	FUNCTION_192	IF_1
0x40028cd	        0x4d0f44e6	                          cmove r12, r14	      8137	ldlang.c	FUNCTION_192	IF_1
0x40028d1	            0x89df	                            mov edi, ebx	      8138	ldlang.c	FUNCTION_192	CALL_3
0x40028d3	      0xe800000000	                          call 0x40028d8	      8138	ldlang.c	FUNCTION_192	CALL_3
0x40028d8	          0x4d89f5	                            mov r13, r14	      8128	ldlang.c	FUNCTION_192
0x40028db	      0x41f6471802	               test byte [r15 + 0x18], 2	      8140	ldlang.c	FUNCTION_192	IF_2
0x40028e0	            0x741e	                            je 0x4002900	      8140	ldlang.c	FUNCTION_192	IF_2
0x40028e2	      0xba03000000	                              mov edx, 3	      8142	ldlang.c	FUNCTION_192	IF_2	CALL_4
0x40028e7	          0x4c89f6	                            mov rsi, r14	      8142	ldlang.c	FUNCTION_192	IF_2	CALL_4
0x40028ea	    0x488b3d000000	            mov rdi, qword [0x040028f1] 	      8142	ldlang.c	FUNCTION_192	IF_2	CALL_4
0x40028f1	      0xe800000000	                          call 0x40028f6	      8142	ldlang.c	FUNCTION_192	IF_2	CALL_4
0x40028f6	          0x4989c5	                            mov r13, rax	      8142	ldlang.c	FUNCTION_192	IF_2	CALL_4
0x40028f9	          0x4885c0	                           test rax, rax	      8145	ldlang.c	FUNCTION_192	IF_2	IF_3
0x40028fc	        0x4d0f44ee	                          cmove r13, r14	      8145	ldlang.c	FUNCTION_192	IF_2	IF_3
0x4002900	          0x4c89f5	                            mov rbp, r14	      8129	ldlang.c	FUNCTION_192
0x4002903	      0x41f6471804	               test byte [r15 + 0x18], 4	      8147	ldlang.c	FUNCTION_192	IF_4
0x4002908	            0x741e	                            je 0x4002928	      8147	ldlang.c	FUNCTION_192	IF_4
0x400290a	      0xba04000000	                              mov edx, 4	      8149	ldlang.c	FUNCTION_192	IF_4	CALL_5
0x400290f	          0x4c89f6	                            mov rsi, r14	      8149	ldlang.c	FUNCTION_192	IF_4	CALL_5
0x4002912	    0x488b3d000000	            mov rdi, qword [0x04002919] 	      8149	ldlang.c	FUNCTION_192	IF_4	CALL_5
0x4002919	      0xe800000000	                          call 0x400291e	      8149	ldlang.c	FUNCTION_192	IF_4	CALL_5
0x400291e	          0x4889c5	                            mov rbp, rax	      8149	ldlang.c	FUNCTION_192	IF_4	CALL_5
0x4002921	          0x4885c0	                           test rax, rax	      8151	ldlang.c	FUNCTION_192	IF_4	IF_5
0x4002924	        0x490f44ee	                          cmove rbp, r14	      8151	ldlang.c	FUNCTION_192	IF_4	IF_5
0x4002928	        0x498b7f08	                mov rdi, qword [r15 + 8]	      8154	ldlang.c	FUNCTION_192	IF_6
0x400292c	          0x4885ff	                           test rdi, rdi	      8154	ldlang.c	FUNCTION_192	IF_6
0x400292f	     0xf840f010000	                            je 0x4002a44	      8154	ldlang.c	FUNCTION_192	IF_6
0x4002935	        0x488b0424	                    mov rax, qword [rsp]	      8154	ldlang.c	FUNCTION_192	IF_6
0x4002939	          0x4885c0	                           test rax, rax	      8154	ldlang.c	FUNCTION_192	IF_6
0x400293c	            0x742d	                            je 0x400296b	      8154	ldlang.c	FUNCTION_192	IF_6
0x400293e	        0xf6401001	               test byte [rax + 0x10], 1	      8154	ldlang.c	FUNCTION_192	IF_6
0x4002942	     0xf8411010000	                            je 0x4002a59	      8154	ldlang.c	FUNCTION_192	IF_6
0x4002948	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      8158	ldlang.c	FUNCTION_192	IF_6	SWITCH_1
0x400294c	        0x8844240f	                mov byte [rsp + 0xf], al	      8158	ldlang.c	FUNCTION_192	IF_6	SWITCH_1
0x4002950	          0xc0e803	                               shr al, 3	      8158	ldlang.c	FUNCTION_192	IF_6	SWITCH_1
0x4002953	          0x83e007	                              and eax, 7	      8158	ldlang.c	FUNCTION_192	IF_6	SWITCH_1
0x4002956	            0x3c01	                               cmp al, 1	      8158	ldlang.c	FUNCTION_192	IF_6	SWITCH_1
0x4002958	            0x7458	                            je 0x40029b2	      8158	ldlang.c	FUNCTION_192	IF_6	SWITCH_1
0x400295a	            0x3c01	                               cmp al, 1	      8158	ldlang.c	FUNCTION_192	IF_6	SWITCH_1
0x400295c	            0x720d	                            jb 0x400296b	      8158	ldlang.c	FUNCTION_192	IF_6	SWITCH_1
0x400295e	            0x3c02	                               cmp al, 2	      8158	ldlang.c	FUNCTION_192	IF_6	SWITCH_1
0x4002960	     0xf8497000000	                            je 0x40029fd	      8158	ldlang.c	FUNCTION_192	IF_6	SWITCH_1
0x4002966	      0xe9d9000000	                           jmp 0x4002a44	      8158	ldlang.c	FUNCTION_192	IF_6	SWITCH_1
0x400296b	      0x41f6471801	               test byte [r15 + 0x18], 1	      8161	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7
0x4002970	            0x7440	                            je 0x40029b2	      8161	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7
0x4002972	      0x4c89642418	             mov qword [rsp + 0x18], r12	      8163	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7
0x4002977	      0x488d742410	                   lea rsi, [rsp + 0x10]	      8164	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7
0x400297c	      0xe800000000	                          call 0x4002981	      8164	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7
0x4002981	          0x4889c3	                            mov rbx, rax	      8164	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7
0x4002984	          0x4885c0	                           test rax, rax	      8166	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7	WHILE_1
0x4002987	            0x7519	                           jne 0x40029a2	      8166	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7	WHILE_1
0x4002989	            0xeb27	                           jmp 0x40029b2	      8166	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7	WHILE_1
0x400298b	         0xfb64310	           movzx eax, byte [rbx + 0x10] 	      8167	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7	WHILE_1	IF_8
0x400298f	          0x83e038	                           and eax, 0x38	      8167	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7	WHILE_1	IF_8
0x4002992	            0x3c08	                               cmp al, 8	      8167	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7	WHILE_1	IF_8
0x4002994	     0xf840c010000	                            je 0x4002aa6	      8167	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7	WHILE_1	IF_8
0x400299a	          0x488b1b	                    mov rbx, qword [rbx]	      8170	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7	ELSE_1
0x400299d	          0x4885db	                           test rbx, rbx	      8166	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7	WHILE_1
0x40029a0	            0x7410	                            je 0x40029b2	      8166	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7	WHILE_1
0x40029a2	        0x488b7b08	                mov rdi, qword [rbx + 8]	      8166	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7	WHILE_1
0x40029a6	          0x4c89e6	                            mov rsi, r12	      8166	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7	WHILE_1
0x40029a9	      0xe800000000	                          call 0x40029ae	      8166	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7	WHILE_1
0x40029ae	            0x85c0	                           test eax, eax	      8166	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7	WHILE_1
0x40029b0	            0x74d9	                            je 0x400298b	      8166	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	IF_7	WHILE_1
0x40029b2	      0x41f6471802	               test byte [r15 + 0x18], 2	      8174	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9
0x40029b7	            0x7444	                            je 0x40029fd	      8174	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9
0x40029b9	      0x4c896c2418	             mov qword [rsp + 0x18], r13	      8176	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9
0x40029be	        0x498b7f08	                mov rdi, qword [r15 + 8]	      8177	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9
0x40029c2	      0x488d742410	                   lea rsi, [rsp + 0x10]	      8177	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9
0x40029c7	      0xe800000000	                          call 0x40029cc	      8177	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9
0x40029cc	          0x4889c3	                            mov rbx, rax	      8177	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9
0x40029cf	          0x4885c0	                           test rax, rax	      8179	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9	WHILE_2
0x40029d2	            0x7519	                           jne 0x40029ed	      8179	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9	WHILE_2
0x40029d4	            0xeb27	                           jmp 0x40029fd	      8179	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9	WHILE_2
0x40029d6	         0xfb64310	           movzx eax, byte [rbx + 0x10] 	      8180	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9	WHILE_2	IF_10
0x40029da	          0x83e038	                           and eax, 0x38	      8180	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9	WHILE_2	IF_10
0x40029dd	            0x3c10	                            cmp al, 0x10	      8180	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9	WHILE_2	IF_10
0x40029df	     0xf84c1000000	                            je 0x4002aa6	      8180	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9	WHILE_2	IF_10
0x40029e5	          0x488b1b	                    mov rbx, qword [rbx]	      8183	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9	ELSE_2
0x40029e8	          0x4885db	                           test rbx, rbx	      8179	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9	WHILE_2
0x40029eb	            0x7410	                            je 0x40029fd	      8179	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9	WHILE_2
0x40029ed	        0x488b7b08	                mov rdi, qword [rbx + 8]	      8179	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9	WHILE_2
0x40029f1	          0x4c89ee	                            mov rsi, r13	      8179	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9	WHILE_2
0x40029f4	      0xe800000000	                          call 0x40029f9	      8179	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9	WHILE_2
0x40029f9	            0x85c0	                           test eax, eax	      8179	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9	WHILE_2
0x40029fb	            0x74d9	                            je 0x40029d6	      8179	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_1	IF_9	WHILE_2
0x40029fd	      0x41f6471804	               test byte [r15 + 0x18], 4	      8187	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11
0x4002a02	            0x7440	                            je 0x4002a44	      8187	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11
0x4002a04	      0x48896c2418	             mov qword [rsp + 0x18], rbp	      8189	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11
0x4002a09	        0x498b7f08	                mov rdi, qword [r15 + 8]	      8190	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11
0x4002a0d	      0x488d742410	                   lea rsi, [rsp + 0x10]	      8190	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11
0x4002a12	      0xe800000000	                          call 0x4002a17	      8190	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11
0x4002a17	          0x4889c3	                            mov rbx, rax	      8190	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11
0x4002a1a	          0x4885c0	                           test rax, rax	      8192	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11	WHILE_3
0x4002a1d	            0x7515	                           jne 0x4002a34	      8192	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11	WHILE_3
0x4002a1f	            0xeb23	                           jmp 0x4002a44	      8192	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11	WHILE_3
0x4002a21	         0xfb64310	           movzx eax, byte [rbx + 0x10] 	      8193	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11	WHILE_3	IF_12
0x4002a25	          0x83e038	                           and eax, 0x38	      8193	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11	WHILE_3	IF_12
0x4002a28	            0x3c20	                            cmp al, 0x20	      8193	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11	WHILE_3	IF_12
0x4002a2a	            0x747a	                            je 0x4002aa6	      8193	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11	WHILE_3	IF_12
0x4002a2c	          0x488b1b	                    mov rbx, qword [rbx]	      8196	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11	ELSE_3
0x4002a2f	          0x4885db	                           test rbx, rbx	      8192	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11	WHILE_3
0x4002a32	            0x7410	                            je 0x4002a44	      8192	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11	WHILE_3
0x4002a34	        0x488b7b08	                mov rdi, qword [rbx + 8]	      8192	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11	WHILE_3
0x4002a38	          0x4889ee	                            mov rsi, rbp	      8192	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11	WHILE_3
0x4002a3b	      0xe800000000	                          call 0x4002a40	      8192	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11	WHILE_3
0x4002a40	            0x85c0	                           test eax, eax	      8192	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11	WHILE_3
0x4002a42	            0x74dd	                            je 0x4002a21	      8192	ldlang.c	FUNCTION_192	IF_6	SWITCH_1	ELSE_2	IF_11	WHILE_3
0x4002a44	        0x488b0424	                    mov rax, qword [rsp]	      8205	ldlang.c	FUNCTION_192	IF_13
0x4002a48	          0x4885c0	                           test rax, rax	      8205	ldlang.c	FUNCTION_192	IF_13
0x4002a4b	            0x7406	                            je 0x4002a53	      8205	ldlang.c	FUNCTION_192	IF_13
0x4002a4d	        0xf6401001	               test byte [rax + 0x10], 1	      8205	ldlang.c	FUNCTION_192	IF_13
0x4002a51	            0x7406	                            je 0x4002a59	      8205	ldlang.c	FUNCTION_192	IF_13
0x4002a53	        0x498b5f10	            mov rbx, qword [r15 + 0x10] 	      8206	ldlang.c	FUNCTION_192	IF_13
0x4002a57	            0xeb07	                           jmp 0x4002a60	      8206	ldlang.c	FUNCTION_192	IF_13
0x4002a59	        0x488b0424	                    mov rax, qword [rsp]	      8208	ldlang.c	FUNCTION_192	ELSE_4
0x4002a5d	          0x488b18	                    mov rbx, qword [rax]	      8208	ldlang.c	FUNCTION_192	ELSE_4
0x4002a60	          0x4885db	                           test rbx, rbx	      8209	ldlang.c	FUNCTION_192	ELSE_4	FOR_1
0x4002a63	            0x7441	                            je 0x4002aa6	      8209	ldlang.c	FUNCTION_192	ELSE_4	FOR_1
0x4002a65	        0x488b7b08	                mov rdi, qword [rbx + 8]	      8213	ldlang.c	FUNCTION_192	ELSE_4	FOR_1	IF_14
0x4002a69	          0x4885ff	                           test rdi, rdi	      8213	ldlang.c	FUNCTION_192	ELSE_4	FOR_1	IF_14
0x4002a6c	            0x7430	                            je 0x4002a9e	      8213	ldlang.c	FUNCTION_192	ELSE_4	FOR_1	IF_14
0x4002a6e	          0x803f2a	                    cmp byte [rdi], 0x2a	      8216	ldlang.c	FUNCTION_192	ELSE_4	FOR_1	IF_15
0x4002a71	            0x7506	                           jne 0x4002a79	      8216	ldlang.c	FUNCTION_192	ELSE_4	FOR_1	IF_15
0x4002a73	        0x807f0100	                   cmp byte [rdi + 1], 0	      8216	ldlang.c	FUNCTION_192	ELSE_4	FOR_1	IF_15
0x4002a77	            0x742d	                            je 0x4002aa6	      8216	ldlang.c	FUNCTION_192	ELSE_4	FOR_1	IF_15
0x4002a79	         0xfb64310	           movzx eax, byte [rbx + 0x10] 	      8219	ldlang.c	FUNCTION_192	ELSE_4	FOR_1	IF_16
0x4002a7d	          0x83e038	                           and eax, 0x38	      8219	ldlang.c	FUNCTION_192	ELSE_4	FOR_1	IF_16
0x4002a80	          0x4889ee	                            mov rsi, rbp	      8220	ldlang.c	FUNCTION_192	ELSE_4	FOR_1	IF_16
0x4002a83	            0x3c20	                            cmp al, 0x20	      8219	ldlang.c	FUNCTION_192	ELSE_4	FOR_1	IF_16
0x4002a85	            0x7409	                            je 0x4002a90	      8219	ldlang.c	FUNCTION_192	ELSE_4	FOR_1	IF_16
0x4002a87	            0x3c10	                            cmp al, 0x10	      8224	ldlang.c	FUNCTION_192	ELSE_4	FOR_1	ELSE_6
0x4002a89	          0x4c89e6	                            mov rsi, r12	      8224	ldlang.c	FUNCTION_192	ELSE_4	FOR_1	ELSE_6
0x4002a8c	        0x490f44f5	                          cmove rsi, r13	      8224	ldlang.c	FUNCTION_192	ELSE_4	FOR_1	ELSE_6
0x4002a90	      0xba00000000	                              mov edx, 0	      8225	ldlang.c	FUNCTION_192	ELSE_4	FOR_1	IF_18	CALL_9
0x4002a95	      0xe800000000	                          call 0x4002a9a	      8225	ldlang.c	FUNCTION_192	ELSE_4	FOR_1	IF_18	CALL_9
0x4002a9a	            0x85c0	                           test eax, eax	      8225	ldlang.c	FUNCTION_192	ELSE_4	FOR_1	IF_18	CALL_9
0x4002a9c	            0x7408	                            je 0x4002aa6	      8225	ldlang.c	FUNCTION_192	ELSE_4	FOR_1	IF_18	CALL_9
0x4002a9e	          0x488b1b	                    mov rbx, qword [rbx]	      8209	ldlang.c	FUNCTION_192	ELSE_4	FOR_1
0x4002aa1	          0x4885db	                           test rbx, rbx	      8209	ldlang.c	FUNCTION_192	ELSE_4	FOR_1
0x4002aa4	            0x75bf	                           jne 0x4002a65	      8209	ldlang.c	FUNCTION_192	ELSE_4	FOR_1
0x4002aa6	          0x4d39f4	                            cmp r12, r14	      8230	ldlang.c	FUNCTION_192	IF_19
0x4002aa9	            0x7408	                            je 0x4002ab3	      8230	ldlang.c	FUNCTION_192	IF_19
0x4002aab	          0x4c89e7	                            mov rdi, r12	      8231	ldlang.c	FUNCTION_192	CALL_10
0x4002aae	      0xe800000000	                          call 0x4002ab3	      8231	ldlang.c	FUNCTION_192	CALL_10
0x4002ab3	          0x4d39f5	                            cmp r13, r14	      8232	ldlang.c	FUNCTION_192	IF_20
0x4002ab6	            0x7408	                            je 0x4002ac0	      8232	ldlang.c	FUNCTION_192	IF_20
0x4002ab8	          0x4c89ef	                            mov rdi, r13	      8233	ldlang.c	FUNCTION_192	CALL_11
0x4002abb	      0xe800000000	                          call 0x4002ac0	      8233	ldlang.c	FUNCTION_192	CALL_11
0x4002ac0	          0x4c39f5	                            cmp rbp, r14	      8234	ldlang.c	FUNCTION_192	IF_21
0x4002ac3	            0x7408	                            je 0x4002acd	      8234	ldlang.c	FUNCTION_192	IF_21
0x4002ac5	          0x4889ef	                            mov rdi, rbp	      8235	ldlang.c	FUNCTION_192	CALL_12
0x4002ac8	      0xe800000000	                          call 0x4002acd	      8235	ldlang.c	FUNCTION_192	CALL_12
0x4002acd	          0x4889d8	                            mov rax, rbx	      8237	ldlang.c	FUNCTION_192
0x4002ad0	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      8237	ldlang.c	FUNCTION_192
0x4002ad5	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      8237	ldlang.c	FUNCTION_192
0x4002ade	            0x7405	                            je 0x4002ae5	      8237	ldlang.c	FUNCTION_192
0x4002ae0	      0xe800000000	                          call 0x4002ae5	      8237	ldlang.c	FUNCTION_192
0x4002ae5	        0x4883c438	                           add rsp, 0x38	      8237	ldlang.c	FUNCTION_192
0x4002ae9	              0x5b	                                 pop rbx	      8237	ldlang.c	FUNCTION_192
0x4002aea	              0x5d	                                 pop rbp	      8237	ldlang.c	FUNCTION_192
0x4002aeb	            0x415c	                                 pop r12	      8237	ldlang.c	FUNCTION_192
0x4002aed	            0x415d	                                 pop r13	      8237	ldlang.c	FUNCTION_192
0x4002aef	            0x415e	                                 pop r14	      8237	ldlang.c	FUNCTION_192
0x4002af1	            0x415f	                                 pop r15	      8237	ldlang.c	FUNCTION_192
0x4002af3	              0xc3	                                     ret	      8237	ldlang.c	FUNCTION_192
lang_output_section_find_by_flags	IF,34:WHILE,0:FOR,8:DO,0:SWITCH,0:functions,0:CALL,7:ELSE,8	296
0x4004982	            0x4157	                                push r15	      1529	ldlang.c	FUNCTION_47
0x4004984	            0x4156	                                push r14	      1529	ldlang.c	FUNCTION_47
0x4004986	            0x4155	                                push r13	      1529	ldlang.c	FUNCTION_47
0x4004988	            0x4154	                                push r12	      1529	ldlang.c	FUNCTION_47
0x400498a	              0x55	                                push rbp	      1529	ldlang.c	FUNCTION_47
0x400498b	              0x53	                                push rbx	      1529	ldlang.c	FUNCTION_47
0x400498c	        0x4883ec18	                           sub rsp, 0x18	      1529	ldlang.c	FUNCTION_47
0x4004990	          0x4989fe	                            mov r14, rdi	      1529	ldlang.c	FUNCTION_47
0x4004993	        0x89742404	                mov dword [rsp + 4], esi	      1529	ldlang.c	FUNCTION_47
0x4004997	      0x4889542408	                mov qword [rsp + 8], rdx	      1529	ldlang.c	FUNCTION_47
0x400499c	          0x4989cd	                            mov r13, rcx	      1529	ldlang.c	FUNCTION_47
0x400499f	    0x488b05000000	            mov rax, qword [0x040049a6] 	      1536	ldlang.c	FUNCTION_47
0x40049a6	        0x4c8b7820	            mov r15, qword [rax + 0x20] 	      1536	ldlang.c	FUNCTION_47
0x40049aa	          0x4d85ff	                           test r15, r15	      1540	ldlang.c	FUNCTION_47	FOR_1
0x40049ad	     0xf84d0030000	                            je 0x4004d83	      1540	ldlang.c	FUNCTION_47	FOR_1
0x40049b3	          0x4c89fd	                            mov rbp, r15	      1540	ldlang.c	FUNCTION_47	FOR_1
0x40049b6	    0x41bc00000000	                             mov r12d, 0	      1540	ldlang.c	FUNCTION_47	FOR_1
0x40049bc	        0x488b7538	            mov rsi, qword [rbp + 0x38] 	      1543	ldlang.c	FUNCTION_47	FOR_1	IF_1
0x40049c0	          0x4885f6	                           test rsi, rsi	      1543	ldlang.c	FUNCTION_47	FOR_1	IF_1
0x40049c3	            0x7508	                           jne 0x40049cd	      1543	ldlang.c	FUNCTION_47	FOR_1	IF_1
0x40049c5	    0x8b9d88000000	            mov ebx, dword [rbp + 0x88] 	      1542	ldlang.c	FUNCTION_47	FOR_1
0x40049cb	            0xeb20	                           jmp 0x40049ed	      1542	ldlang.c	FUNCTION_47	FOR_1
0x40049cd	          0x8b5e20	            mov ebx, dword [rsi + 0x20] 	      1545	ldlang.c	FUNCTION_47	FOR_1	IF_1
0x40049d0	          0x4d85ed	                           test r13, r13	      1546	ldlang.c	FUNCTION_47	FOR_1	IF_1	IF_2	CALL_1
0x40049d3	            0x7418	                            je 0x40049ed	      1546	ldlang.c	FUNCTION_47	FOR_1	IF_1	IF_2	CALL_1
0x40049d5	    0x498b96f00000	            mov rdx, qword [r14 + 0xf0] 	      1546	ldlang.c	FUNCTION_47	FOR_1	IF_1	IF_2	CALL_1
0x40049dc	          0x4c89f1	                            mov rcx, r14	      1546	ldlang.c	FUNCTION_47	FOR_1	IF_1	IF_2	CALL_1
0x40049df	    0x488b3d000000	            mov rdi, qword [0x040049e6] 	      1546	ldlang.c	FUNCTION_47	FOR_1	IF_1	IF_2	CALL_1
0x40049e6	          0x41ffd5	                                call r13	      1546	ldlang.c	FUNCTION_47	FOR_1	IF_1	IF_2	CALL_1
0x40049e9	            0x85c0	                           test eax, eax	      1546	ldlang.c	FUNCTION_47	FOR_1	IF_1	IF_2	CALL_1
0x40049eb	            0x740e	                            je 0x40049fb	      1546	ldlang.c	FUNCTION_47	FOR_1	IF_1	IF_2	CALL_1
0x40049ed	        0x335c2404	                xor ebx, dword [rsp + 4]	      1552	ldlang.c	FUNCTION_47	FOR_1	IF_3
0x40049f1	    0x81e31b054000	                       and ebx, 0x40051b	      1552	ldlang.c	FUNCTION_47	FOR_1	IF_3
0x40049f7	        0x4c0f44e5	                          cmove r12, rbp	      1552	ldlang.c	FUNCTION_47	FOR_1	IF_3
0x40049fb	        0x488b6d20	            mov rbp, qword [rbp + 0x20] 	      1540	ldlang.c	FUNCTION_47	FOR_1
0x40049ff	          0x4885ed	                           test rbp, rbp	      1540	ldlang.c	FUNCTION_47	FOR_1
0x4004a02	            0x75b8	                           jne 0x40049bc	      1540	ldlang.c	FUNCTION_47	FOR_1
0x4004a04	          0x4d85e4	                           test r12, r12	      1556	ldlang.c	FUNCTION_47	IF_4
0x4004a07	     0xf8461030000	                            je 0x4004d6e	      1556	ldlang.c	FUNCTION_47	IF_4
0x4004a0d	      0x488b442408	                mov rax, qword [rsp + 8]	      1558	ldlang.c	FUNCTION_47	IF_4	IF_5
0x4004a12	          0x4885c0	                           test rax, rax	      1558	ldlang.c	FUNCTION_47	IF_4	IF_5
0x4004a15	     0xf8441030000	                            je 0x4004d5c	      1558	ldlang.c	FUNCTION_47	IF_4	IF_5
0x4004a1b	          0x4c8920	                    mov qword [rax], r12	      1559	ldlang.c	FUNCTION_47	IF_4	IF_5
0x4004a1e	          0x4c89e0	                            mov rax, r12	      1559	ldlang.c	FUNCTION_47	IF_4	IF_5
0x4004a21	      0xe96f030000	                           jmp 0x4004d95	      1559	ldlang.c	FUNCTION_47	IF_4	IF_5
0x4004a26	        0x498b7738	            mov rsi, qword [r15 + 0x38] 	      1570	ldlang.c	FUNCTION_47	IF_6	FOR_2	IF_7
0x4004a2a	          0x4885f6	                           test rsi, rsi	      1570	ldlang.c	FUNCTION_47	IF_6	FOR_2	IF_7
0x4004a2d	            0x7509	                           jne 0x4004a38	      1570	ldlang.c	FUNCTION_47	IF_6	FOR_2	IF_7
0x4004a2f	    0x418b9f880000	            mov ebx, dword [r15 + 0x88] 	      1569	ldlang.c	FUNCTION_47	IF_6	FOR_2
0x4004a36	            0xeb20	                           jmp 0x4004a58	      1569	ldlang.c	FUNCTION_47	IF_6	FOR_2
0x4004a38	          0x8b5e20	            mov ebx, dword [rsi + 0x20] 	      1572	ldlang.c	FUNCTION_47	IF_6	FOR_2	IF_7
0x4004a3b	          0x4d85ed	                           test r13, r13	      1573	ldlang.c	FUNCTION_47	IF_6	FOR_2	IF_7	IF_8	CALL_2
0x4004a3e	            0x7418	                            je 0x4004a58	      1573	ldlang.c	FUNCTION_47	IF_6	FOR_2	IF_7	IF_8	CALL_2
0x4004a40	    0x498b96f00000	            mov rdx, qword [r14 + 0xf0] 	      1573	ldlang.c	FUNCTION_47	IF_6	FOR_2	IF_7	IF_8	CALL_2
0x4004a47	          0x4c89f1	                            mov rcx, r14	      1573	ldlang.c	FUNCTION_47	IF_6	FOR_2	IF_7	IF_8	CALL_2
0x4004a4a	    0x488b3d000000	            mov rdi, qword [0x04004a51] 	      1573	ldlang.c	FUNCTION_47	IF_6	FOR_2	IF_7	IF_8	CALL_2
0x4004a51	          0x41ffd5	                                call r13	      1573	ldlang.c	FUNCTION_47	IF_6	FOR_2	IF_7	IF_8	CALL_2
0x4004a54	            0x85c0	                           test eax, eax	      1573	ldlang.c	FUNCTION_47	IF_6	FOR_2	IF_7	IF_8	CALL_2
0x4004a56	            0x740f	                            je 0x4004a67	      1573	ldlang.c	FUNCTION_47	IF_6	FOR_2	IF_7	IF_8	CALL_2
0x4004a58	            0x89d8	                            mov eax, ebx	      1579	ldlang.c	FUNCTION_47	IF_6	FOR_2	IF_9
0x4004a5a	        0x33442404	                xor eax, dword [rsp + 4]	      1579	ldlang.c	FUNCTION_47	IF_6	FOR_2	IF_9
0x4004a5e	      0x2513054000	                       and eax, 0x400513	      1579	ldlang.c	FUNCTION_47	IF_6	FOR_2	IF_9
0x4004a63	        0x4d0f44e7	                          cmove r12, r15	      1579	ldlang.c	FUNCTION_47	IF_6	FOR_2	IF_9
0x4004a67	        0x4d8b7f20	            mov r15, qword [r15 + 0x20] 	      1567	ldlang.c	FUNCTION_47	IF_6	FOR_2
0x4004a6b	          0x4d85ff	                           test r15, r15	      1567	ldlang.c	FUNCTION_47	IF_6	FOR_2
0x4004a6e	            0x75b6	                           jne 0x4004a26	      1567	ldlang.c	FUNCTION_47	IF_6	FOR_2
0x4004a70	      0xe9c5020000	                           jmp 0x4004d3a	      1567	ldlang.c	FUNCTION_47	IF_6	FOR_2
0x4004a75	        0x8b442404	                mov eax, dword [rsp + 4]	      1584	ldlang.c	FUNCTION_47	ELSE_1	IF_10
0x4004a79	          0x83e009	                              and eax, 9	      1584	ldlang.c	FUNCTION_47	ELSE_1	IF_10
0x4004a7c	          0x83f809	                              cmp eax, 9	      1584	ldlang.c	FUNCTION_47	ELSE_1	IF_10
0x4004a7f	            0x7572	                           jne 0x4004af3	      1584	ldlang.c	FUNCTION_47	ELSE_1	IF_10
0x4004a81	          0x4d85ff	                           test r15, r15	      1588	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3
0x4004a84	     0xf8499020000	                            je 0x4004d23	      1588	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3
0x4004a8a	    0x41bc00000000	                             mov r12d, 0	      1588	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3
0x4004a90	        0x498b7738	            mov rsi, qword [r15 + 0x38] 	      1591	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_11
0x4004a94	          0x4885f6	                           test rsi, rsi	      1591	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_11
0x4004a97	            0x7509	                           jne 0x4004aa2	      1591	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_11
0x4004a99	    0x418b9f880000	            mov ebx, dword [r15 + 0x88] 	      1590	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3
0x4004aa0	            0xeb20	                           jmp 0x4004ac2	      1590	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3
0x4004aa2	          0x8b5e20	            mov ebx, dword [rsi + 0x20] 	      1593	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_11
0x4004aa5	          0x4d85ed	                           test r13, r13	      1594	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_11	IF_12	CALL_3
0x4004aa8	            0x7418	                            je 0x4004ac2	      1594	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_11	IF_12	CALL_3
0x4004aaa	    0x498b96f00000	            mov rdx, qword [r14 + 0xf0] 	      1594	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_11	IF_12	CALL_3
0x4004ab1	          0x4c89f1	                            mov rcx, r14	      1594	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_11	IF_12	CALL_3
0x4004ab4	    0x488b3d000000	            mov rdi, qword [0x04004abb] 	      1594	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_11	IF_12	CALL_3
0x4004abb	          0x41ffd5	                                call r13	      1594	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_11	IF_12	CALL_3
0x4004abe	            0x85c0	                           test eax, eax	      1594	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_11	IF_12	CALL_3
0x4004ac0	            0x7423	                            je 0x4004ae5	      1594	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_11	IF_12	CALL_3
0x4004ac2	        0x8b442404	                mov eax, dword [rsp + 4]	      1599	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3
0x4004ac6	            0x31d8	                            xor eax, ebx	      1599	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3
0x4004ac8	      0xa90b014000	                      test eax, 0x40010b	      1600	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_13
0x4004acd	            0x7413	                            je 0x4004ae2	      1600	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_13
0x4004acf	      0xa90b010000	                         test eax, 0x10b	      1602	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_13
0x4004ad4	            0x750f	                           jne 0x4004ae5	      1602	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_13
0x4004ad6	    0x81e300004000	                       and ebx, 0x400000	      1604	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_13
0x4004adc	        0x4d0f44e7	                          cmove r12, r15	      1604	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_13
0x4004ae0	            0xeb03	                           jmp 0x4004ae5	      1604	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_13
0x4004ae2	          0x4d89fc	                            mov r12, r15	      1604	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3	IF_13
0x4004ae5	        0x4d8b7f20	            mov r15, qword [r15 + 0x20] 	      1588	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3
0x4004ae9	          0x4d85ff	                           test r15, r15	      1588	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3
0x4004aec	            0x75a2	                           jne 0x4004a90	      1588	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3
0x4004aee	      0xe947020000	                           jmp 0x4004d3a	      1588	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3
0x4004af3	        0x8b442404	                mov eax, dword [rsp + 4]	      1608	ldlang.c	FUNCTION_47	ELSE_2	IF_14
0x4004af7	      0x2501040000	                          and eax, 0x401	      1608	ldlang.c	FUNCTION_47	ELSE_2	IF_14
0x4004afc	      0x3d01040000	                          cmp eax, 0x401	      1608	ldlang.c	FUNCTION_47	ELSE_2	IF_14
0x4004b01	     0xf8581000000	                           jne 0x4004b88	      1608	ldlang.c	FUNCTION_47	ELSE_2	IF_14
0x4004b07	          0x4d85ff	                           test r15, r15	      1616	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4
0x4004b0a	     0xf8456020000	                            je 0x4004d66	      1616	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4
0x4004b10	      0xbe00000000	                              mov esi, 0	      1616	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4
0x4004b15	    0x41bc00000000	                             mov r12d, 0	      1616	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4
0x4004b1b	        0x8b7c2404	                mov edi, dword [rsp + 4]	      1622	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4
0x4004b1f	            0x89f9	                            mov ecx, edi	      1622	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4
0x4004b21	    0x81c902010000	                           or ecx, 0x102	      1622	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4
0x4004b27	          0x83e702	                              and edi, 2	      1627	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	IF_16	IF_17
0x4004b2a	    0x418b97880000	            mov edx, dword [r15 + 0x88] 	      1618	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4
0x4004b31	        0x498b4738	            mov rax, qword [r15 + 0x38] 	      1619	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	IF_15
0x4004b35	          0x4885c0	                           test rax, rax	      1619	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	IF_15
0x4004b38	            0x7403	                            je 0x4004b3d	      1619	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	IF_15
0x4004b3a	          0x8b5020	            mov edx, dword [rax + 0x20] 	      1620	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	IF_15
0x4004b3d	            0x89c8	                            mov eax, ecx	      1622	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4
0x4004b3f	            0x31d0	                            xor eax, edx	      1622	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4
0x4004b41	      0xa901040000	                         test eax, 0x401	      1623	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	IF_16
0x4004b46	            0x7517	                           jne 0x4004b5f	      1623	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	IF_16
0x4004b48	          0xf6c202	                              test dl, 2	      1626	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	IF_16	IF_17
0x4004b4b	            0x7525	                           jne 0x4004b72	      1626	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	IF_16	IF_17
0x4004b4d	            0x85ff	                           test edi, edi	      1627	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	IF_16	IF_17
0x4004b4f	     0xf8514020000	                           jne 0x4004d69	      1627	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	IF_16	IF_17
0x4004b55	          0x4d89fc	                            mov r12, r15	      1627	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	IF_16	IF_17
0x4004b58	      0xbe01000000	                              mov esi, 1	      1633	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	IF_16
0x4004b5d	            0xeb1b	                           jmp 0x4004b7a	      1633	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	IF_16
0x4004b5f	            0x85f6	                           test esi, esi	      1635	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	ELSE_3	IF_18
0x4004b61	     0xf8502020000	                           jne 0x4004d69	      1635	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	ELSE_3	IF_18
0x4004b67	      0x2503010000	                          and eax, 0x103	      1637	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	ELSE_4	IF_19
0x4004b6c	        0x4d0f44e7	                          cmove r12, r15	      1637	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	ELSE_4	IF_19
0x4004b70	            0xeb08	                           jmp 0x4004b7a	      1637	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	ELSE_4	IF_19
0x4004b72	          0x4d89fc	                            mov r12, r15	      1637	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	ELSE_4	IF_19
0x4004b75	      0xbe01000000	                              mov esi, 1	      1633	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4	IF_16
0x4004b7a	        0x4d8b7f20	            mov r15, qword [r15 + 0x20] 	      1616	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4
0x4004b7e	          0x4d85ff	                           test r15, r15	      1616	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4
0x4004b81	            0x75a7	                           jne 0x4004b2a	      1616	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4
0x4004b83	      0xe9e1010000	                           jmp 0x4004d69	      1616	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4
0x4004b88	        0x8b442404	                mov eax, dword [rsp + 4]	      1641	ldlang.c	FUNCTION_47	ELSE_5	IF_20
0x4004b8c	      0x2501004000	                       and eax, 0x400001	      1641	ldlang.c	FUNCTION_47	ELSE_5	IF_20
0x4004b91	      0x3d01004000	                       cmp eax, 0x400001	      1641	ldlang.c	FUNCTION_47	ELSE_5	IF_20
0x4004b96	            0x7579	                           jne 0x4004c11	      1641	ldlang.c	FUNCTION_47	ELSE_5	IF_20
0x4004b98	          0x4d85ff	                           test r15, r15	      1645	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5
0x4004b9b	     0xf8487010000	                            je 0x4004d28	      1645	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5
0x4004ba1	    0x41bc00000000	                             mov r12d, 0	      1645	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5
0x4004ba7	        0x8b6c2404	                mov ebp, dword [rsp + 4]	      1660	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_23
0x4004bab	    0x81e500010000	                          and ebp, 0x100	      1660	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_23
0x4004bb1	        0x498b7738	            mov rsi, qword [r15 + 0x38] 	      1648	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_21
0x4004bb5	          0x4885f6	                           test rsi, rsi	      1648	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_21
0x4004bb8	            0x7509	                           jne 0x4004bc3	      1648	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_21
0x4004bba	    0x418b9f880000	            mov ebx, dword [r15 + 0x88] 	      1647	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5
0x4004bc1	            0xeb20	                           jmp 0x4004be3	      1647	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5
0x4004bc3	          0x8b5e20	            mov ebx, dword [rsi + 0x20] 	      1650	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_21
0x4004bc6	          0x4d85ed	                           test r13, r13	      1651	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_21	IF_22	CALL_4
0x4004bc9	            0x7418	                            je 0x4004be3	      1651	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_21	IF_22	CALL_4
0x4004bcb	    0x498b96f00000	            mov rdx, qword [r14 + 0xf0] 	      1651	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_21	IF_22	CALL_4
0x4004bd2	          0x4c89f1	                            mov rcx, r14	      1651	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_21	IF_22	CALL_4
0x4004bd5	    0x488b3d000000	            mov rdi, qword [0x04004bdc] 	      1651	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_21	IF_22	CALL_4
0x4004bdc	          0x41ffd5	                                call r13	      1651	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_21	IF_22	CALL_4
0x4004bdf	            0x85c0	                           test eax, eax	      1651	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_21	IF_22	CALL_4
0x4004be1	            0x7420	                            je 0x4004c03	      1651	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_21	IF_22	CALL_4
0x4004be3	        0x8b442404	                mov eax, dword [rsp + 4]	      1657	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_23
0x4004be7	            0x31d8	                            xor eax, ebx	      1657	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_23
0x4004be9	      0xa903050000	                         test eax, 0x503	      1657	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_23
0x4004bee	            0x7410	                            je 0x4004c00	      1657	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_23
0x4004bf0	    0xf7c300004000	                      test ebx, 0x400000	      1659	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_23
0x4004bf6	            0x740b	                            je 0x4004c03	      1659	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_23
0x4004bf8	            0x85ed	                           test ebp, ebp	      1660	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_23
0x4004bfa	        0x4d0f44e7	                          cmove r12, r15	      1660	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_23
0x4004bfe	            0xeb03	                           jmp 0x4004c03	      1660	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_23
0x4004c00	          0x4d89fc	                            mov r12, r15	      1660	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5	IF_23
0x4004c03	        0x4d8b7f20	            mov r15, qword [r15 + 0x20] 	      1645	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5
0x4004c07	          0x4d85ff	                           test r15, r15	      1645	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5
0x4004c0a	            0x75a5	                           jne 0x4004bb1	      1645	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5
0x4004c0c	      0xe929010000	                           jmp 0x4004d3a	      1645	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5
0x4004c11	        0x8b442404	                mov eax, dword [rsp + 4]	      1664	ldlang.c	FUNCTION_47	ELSE_6	IF_24
0x4004c15	      0x2501010000	                          and eax, 0x101	      1664	ldlang.c	FUNCTION_47	ELSE_6	IF_24
0x4004c1a	      0x3d01010000	                          cmp eax, 0x101	      1664	ldlang.c	FUNCTION_47	ELSE_6	IF_24
0x4004c1f	            0x755e	                           jne 0x4004c7f	      1664	ldlang.c	FUNCTION_47	ELSE_6	IF_24
0x4004c21	          0x4d85ff	                           test r15, r15	      1668	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6
0x4004c24	     0xf8403010000	                            je 0x4004d2d	      1668	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6
0x4004c2a	    0x41bc00000000	                             mov r12d, 0	      1668	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6
0x4004c30	        0x498b7738	            mov rsi, qword [r15 + 0x38] 	      1671	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6	IF_25
0x4004c34	          0x4885f6	                           test rsi, rsi	      1671	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6	IF_25
0x4004c37	            0x7509	                           jne 0x4004c42	      1671	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6	IF_25
0x4004c39	    0x418b9f880000	            mov ebx, dword [r15 + 0x88] 	      1670	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6
0x4004c40	            0xeb20	                           jmp 0x4004c62	      1670	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6
0x4004c42	          0x8b5e20	            mov ebx, dword [rsi + 0x20] 	      1673	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6	IF_25
0x4004c45	          0x4d85ed	                           test r13, r13	      1674	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6	IF_25	IF_26	CALL_5
0x4004c48	            0x7418	                            je 0x4004c62	      1674	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6	IF_25	IF_26	CALL_5
0x4004c4a	    0x498b96f00000	            mov rdx, qword [r14 + 0xf0] 	      1674	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6	IF_25	IF_26	CALL_5
0x4004c51	          0x4c89f1	                            mov rcx, r14	      1674	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6	IF_25	IF_26	CALL_5
0x4004c54	    0x488b3d000000	            mov rdi, qword [0x04004c5b] 	      1674	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6	IF_25	IF_26	CALL_5
0x4004c5b	          0x41ffd5	                                call r13	      1674	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6	IF_25	IF_26	CALL_5
0x4004c5e	            0x85c0	                           test eax, eax	      1674	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6	IF_25	IF_26	CALL_5
0x4004c60	            0x740f	                            je 0x4004c71	      1674	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6	IF_25	IF_26	CALL_5
0x4004c62	            0x89d8	                            mov eax, ebx	      1680	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6	IF_27
0x4004c64	        0x33442404	                xor eax, dword [rsp + 4]	      1680	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6	IF_27
0x4004c68	      0x2503054000	                       and eax, 0x400503	      1680	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6	IF_27
0x4004c6d	        0x4d0f44e7	                          cmove r12, r15	      1680	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6	IF_27
0x4004c71	        0x4d8b7f20	            mov r15, qword [r15 + 0x20] 	      1668	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6
0x4004c75	          0x4d85ff	                           test r15, r15	      1668	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6
0x4004c78	            0x75b6	                           jne 0x4004c30	      1668	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6
0x4004c7a	      0xe9bb000000	                           jmp 0x4004d3a	      1668	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6
0x4004c7f	      0xf644240401	                  test byte [rsp + 4], 1	      1685	ldlang.c	FUNCTION_47	ELSE_7	IF_28
0x4004c84	            0x7516	                           jne 0x4004c9c	      1685	ldlang.c	FUNCTION_47	ELSE_7	IF_28
0x4004c86	    0x41bc00000000	                             mov r12d, 0	      1707	ldlang.c	FUNCTION_47	ELSE_8	FOR_8
0x4004c8c	      0xb800000000	                              mov eax, 0	      1707	ldlang.c	FUNCTION_47	ELSE_8	FOR_8
0x4004c91	          0x4d85ff	                           test r15, r15	      1707	ldlang.c	FUNCTION_47	ELSE_8	FOR_8
0x4004c94	     0xf84fb000000	                            je 0x4004d95	      1707	ldlang.c	FUNCTION_47	ELSE_8	FOR_8
0x4004c9a	            0xeb59	                           jmp 0x4004cf5	      1707	ldlang.c	FUNCTION_47	ELSE_8	FOR_8
0x4004c9c	          0x4d85ff	                           test r15, r15	      1688	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7
0x4004c9f	     0xf848d000000	                            je 0x4004d32	      1688	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7
0x4004ca5	    0x41bc00000000	                             mov r12d, 0	      1688	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7
0x4004cab	        0x498b7738	            mov rsi, qword [r15 + 0x38] 	      1691	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7	IF_29
0x4004caf	          0x4885f6	                           test rsi, rsi	      1691	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7	IF_29
0x4004cb2	            0x7509	                           jne 0x4004cbd	      1691	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7	IF_29
0x4004cb4	    0x418b9f880000	            mov ebx, dword [r15 + 0x88] 	      1690	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7
0x4004cbb	            0xeb20	                           jmp 0x4004cdd	      1690	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7
0x4004cbd	          0x8b5e20	            mov ebx, dword [rsi + 0x20] 	      1693	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7	IF_29
0x4004cc0	          0x4d85ed	                           test r13, r13	      1694	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7	IF_29	IF_30	CALL_6
0x4004cc3	            0x7418	                            je 0x4004cdd	      1694	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7	IF_29	IF_30	CALL_6
0x4004cc5	    0x498b96f00000	            mov rdx, qword [r14 + 0xf0] 	      1694	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7	IF_29	IF_30	CALL_6
0x4004ccc	          0x4c89f1	                            mov rcx, r14	      1694	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7	IF_29	IF_30	CALL_6
0x4004ccf	    0x488b3d000000	            mov rdi, qword [0x04004cd6] 	      1694	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7	IF_29	IF_30	CALL_6
0x4004cd6	          0x41ffd5	                                call r13	      1694	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7	IF_29	IF_30	CALL_6
0x4004cd9	            0x85c0	                           test eax, eax	      1694	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7	IF_29	IF_30	CALL_6
0x4004cdb	            0x740d	                            je 0x4004cea	      1694	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7	IF_29	IF_30	CALL_6
0x4004cdd	            0x89d8	                            mov eax, ebx	      1700	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7	IF_31
0x4004cdf	        0x33442404	                xor eax, dword [rsp + 4]	      1700	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7	IF_31
0x4004ce3	          0x83e001	                              and eax, 1	      1700	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7	IF_31
0x4004ce6	        0x4d0f44e7	                          cmove r12, r15	      1700	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7	IF_31
0x4004cea	        0x4d8b7f20	            mov r15, qword [r15 + 0x20] 	      1688	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7
0x4004cee	          0x4d85ff	                           test r15, r15	      1688	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7
0x4004cf1	            0x75b8	                           jne 0x4004cab	      1688	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7
0x4004cf3	            0xeb45	                           jmp 0x4004d3a	      1688	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7
0x4004cf5	    0x418b87880000	            mov eax, dword [r15 + 0x88] 	      1709	ldlang.c	FUNCTION_47	ELSE_8	FOR_8
0x4004cfc	        0x498b5738	            mov rdx, qword [r15 + 0x38] 	      1710	ldlang.c	FUNCTION_47	ELSE_8	FOR_8	IF_32
0x4004d00	          0x4885d2	                           test rdx, rdx	      1710	ldlang.c	FUNCTION_47	ELSE_8	FOR_8	IF_32
0x4004d03	            0x7403	                            je 0x4004d08	      1710	ldlang.c	FUNCTION_47	ELSE_8	FOR_8	IF_32
0x4004d05	          0x8b4220	            mov eax, dword [rdx + 0x20] 	      1711	ldlang.c	FUNCTION_47	ELSE_8	FOR_8	IF_32
0x4004d08	        0x33442404	                xor eax, dword [rsp + 4]	      1713	ldlang.c	FUNCTION_47	ELSE_8	FOR_8	IF_33
0x4004d0c	      0x2500200000	                         and eax, 0x2000	      1713	ldlang.c	FUNCTION_47	ELSE_8	FOR_8	IF_33
0x4004d11	        0x4d0f44e7	                          cmove r12, r15	      1713	ldlang.c	FUNCTION_47	ELSE_8	FOR_8	IF_33
0x4004d15	        0x4d8b7f20	            mov r15, qword [r15 + 0x20] 	      1707	ldlang.c	FUNCTION_47	ELSE_8	FOR_8
0x4004d19	          0x4d85ff	                           test r15, r15	      1707	ldlang.c	FUNCTION_47	ELSE_8	FOR_8
0x4004d1c	            0x75d7	                           jne 0x4004cf5	      1707	ldlang.c	FUNCTION_47	ELSE_8	FOR_8
0x4004d1e	          0x4c89e0	                            mov rax, r12	      1707	ldlang.c	FUNCTION_47	ELSE_8	FOR_8
0x4004d21	            0xeb72	                           jmp 0x4004d95	      1707	ldlang.c	FUNCTION_47	ELSE_8	FOR_8
0x4004d23	          0x4d89fc	                            mov r12, r15	      1588	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3
0x4004d26	            0xeb12	                           jmp 0x4004d3a	      1588	ldlang.c	FUNCTION_47	ELSE_1	IF_10	FOR_3
0x4004d28	          0x4d89fc	                            mov r12, r15	      1645	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5
0x4004d2b	            0xeb0d	                           jmp 0x4004d3a	      1645	ldlang.c	FUNCTION_47	ELSE_5	IF_20	FOR_5
0x4004d2d	          0x4d89fc	                            mov r12, r15	      1668	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6
0x4004d30	            0xeb08	                           jmp 0x4004d3a	      1668	ldlang.c	FUNCTION_47	ELSE_6	IF_24	FOR_6
0x4004d32	          0x4d89fc	                            mov r12, r15	      1688	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7
0x4004d35	            0xeb03	                           jmp 0x4004d3a	      1688	ldlang.c	FUNCTION_47	ELSE_7	IF_28	FOR_7
0x4004d37	          0x4d89fc	                            mov r12, r15	      1563	ldlang.c	FUNCTION_47	IF_6
0x4004d3a	          0x4d85e4	                           test r12, r12	      1719	ldlang.c	FUNCTION_47	IF_34
0x4004d3d	            0x7522	                           jne 0x4004d61	      1719	ldlang.c	FUNCTION_47	IF_34
0x4004d3f	          0x4d85ed	                           test r13, r13	      1719	ldlang.c	FUNCTION_47	IF_34
0x4004d42	            0x741d	                            je 0x4004d61	      1719	ldlang.c	FUNCTION_47	IF_34
0x4004d44	      0xb900000000	                              mov ecx, 0	      1722	ldlang.c	FUNCTION_47	CALL_7
0x4004d49	      0xba00000000	                              mov edx, 0	      1722	ldlang.c	FUNCTION_47	CALL_7
0x4004d4e	        0x8b742404	                mov esi, dword [rsp + 4]	      1722	ldlang.c	FUNCTION_47	CALL_7
0x4004d52	          0x4c89f7	                            mov rdi, r14	      1722	ldlang.c	FUNCTION_47	CALL_7
0x4004d55	      0xe800000000	                          call 0x4004d5a	      1722	ldlang.c	FUNCTION_47	CALL_7
0x4004d5a	            0xeb39	                           jmp 0x4004d95	      1722	ldlang.c	FUNCTION_47	CALL_7
0x4004d5c	          0x4c89e0	                            mov rax, r12	      1722	ldlang.c	FUNCTION_47	CALL_7
0x4004d5f	            0xeb34	                           jmp 0x4004d95	      1722	ldlang.c	FUNCTION_47	CALL_7
0x4004d61	          0x4c89e0	                            mov rax, r12	      1722	ldlang.c	FUNCTION_47	CALL_7
0x4004d64	            0xeb2f	                           jmp 0x4004d95	      1722	ldlang.c	FUNCTION_47	CALL_7
0x4004d66	          0x4d89fc	                            mov r12, r15	      1616	ldlang.c	FUNCTION_47	ELSE_2	IF_14	FOR_4
0x4004d69	          0x4c89e0	                            mov rax, r12	      1707	ldlang.c	FUNCTION_47	ELSE_8	FOR_8
0x4004d6c	            0xeb27	                           jmp 0x4004d95	      1707	ldlang.c	FUNCTION_47	ELSE_8	FOR_8
0x4004d6e	        0x8b442404	                mov eax, dword [rsp + 4]	      1563	ldlang.c	FUNCTION_47	IF_6
0x4004d72	          0x83e011	                           and eax, 0x11	      1563	ldlang.c	FUNCTION_47	IF_6
0x4004d75	          0x83f811	                           cmp eax, 0x11	      1563	ldlang.c	FUNCTION_47	IF_6
0x4004d78	     0xf84a8fcffff	                            je 0x4004a26	      1563	ldlang.c	FUNCTION_47	IF_6
0x4004d7e	      0xe9f2fcffff	                           jmp 0x4004a75	      1563	ldlang.c	FUNCTION_47	IF_6
0x4004d83	        0x8b442404	                mov eax, dword [rsp + 4]	      1563	ldlang.c	FUNCTION_47	IF_6
0x4004d87	          0x83e011	                           and eax, 0x11	      1563	ldlang.c	FUNCTION_47	IF_6
0x4004d8a	          0x83f811	                           cmp eax, 0x11	      1563	ldlang.c	FUNCTION_47	IF_6
0x4004d8d	     0xf85e2fcffff	                           jne 0x4004a75	      1563	ldlang.c	FUNCTION_47	IF_6
0x4004d93	            0xeba2	                           jmp 0x4004d37	      1563	ldlang.c	FUNCTION_47	IF_6
0x4004d95	        0x4883c418	                           add rsp, 0x18	      1723	ldlang.c	FUNCTION_47
0x4004d99	              0x5b	                                 pop rbx	      1723	ldlang.c	FUNCTION_47
0x4004d9a	              0x5d	                                 pop rbp	      1723	ldlang.c	FUNCTION_47
0x4004d9b	            0x415c	                                 pop r12	      1723	ldlang.c	FUNCTION_47
0x4004d9d	            0x415d	                                 pop r13	      1723	ldlang.c	FUNCTION_47
0x4004d9f	            0x415e	                                 pop r14	      1723	ldlang.c	FUNCTION_47
0x4004da1	            0x415f	                                 pop r15	      1723	ldlang.c	FUNCTION_47
0x4004da3	              0xc3	                                     ret	      1723	ldlang.c	FUNCTION_47
lang_add_vers_depend	IF,1:WHILE,0:FOR,1:DO,0:SWITCH,0:functions,0:CALL,3:ELSE,0	36
0x400a78d	            0x4154	                                push r12	      8553	ldlang.c	FUNCTION_200
0x400a78f	              0x55	                                push rbp	      8553	ldlang.c	FUNCTION_200
0x400a790	              0x53	                                push rbx	      8553	ldlang.c	FUNCTION_200
0x400a791	          0x4889fb	                            mov rbx, rdi	      8553	ldlang.c	FUNCTION_200
0x400a794	          0x4889f5	                            mov rbp, rsi	      8553	ldlang.c	FUNCTION_200
0x400a797	      0xbf10000000	                           mov edi, 0x10	      8557	ldlang.c	FUNCTION_200	CALL_1
0x400a79c	      0xe800000000	                          call 0x400a7a1	      8557	ldlang.c	FUNCTION_200	CALL_1
0x400a7a1	          0x4989c4	                            mov r12, rax	      8557	ldlang.c	FUNCTION_200	CALL_1
0x400a7a4	          0x488918	                    mov qword [rax], rbx	      8558	ldlang.c	FUNCTION_200
0x400a7a7	    0x488b1d000000	            mov rbx, qword [0x0400a7ae] 	      8560	ldlang.c	FUNCTION_200	FOR_1
0x400a7ae	          0x4885db	                           test rbx, rbx	      8560	ldlang.c	FUNCTION_200	FOR_1
0x400a7b1	            0x741f	                            je 0x400a7d2	      8560	ldlang.c	FUNCTION_200	FOR_1
0x400a7b3	        0x488b7b08	                mov rdi, qword [rbx + 8]	      8562	ldlang.c	FUNCTION_200	FOR_1	IF_1
0x400a7b7	          0x4889ee	                            mov rsi, rbp	      8562	ldlang.c	FUNCTION_200	FOR_1	IF_1
0x400a7ba	      0xe800000000	                          call 0x400a7bf	      8562	ldlang.c	FUNCTION_200	FOR_1	IF_1
0x400a7bf	            0x85c0	                           test eax, eax	      8562	ldlang.c	FUNCTION_200	FOR_1	IF_1
0x400a7c1	            0x7507	                           jne 0x400a7ca	      8562	ldlang.c	FUNCTION_200	FOR_1	IF_1
0x400a7c3	      0x49895c2408	                mov qword [r12 + 8], rbx	      8564	ldlang.c	FUNCTION_200	FOR_1	IF_1
0x400a7c8	            0xeb35	                           jmp 0x400a7ff	      8565	ldlang.c	FUNCTION_200	FOR_1	IF_1
0x400a7ca	          0x488b1b	                    mov rbx, qword [rbx]	      8560	ldlang.c	FUNCTION_200	FOR_1
0x400a7cd	          0x4885db	                           test rbx, rbx	      8560	ldlang.c	FUNCTION_200	FOR_1
0x400a7d0	            0x75e1	                           jne 0x400a7b3	      8560	ldlang.c	FUNCTION_200	FOR_1
0x400a7d2	      0xba05000000	                              mov edx, 5	      8569	ldlang.c	FUNCTION_200	CALL_3
0x400a7d7	      0xbe00000000	                              mov esi, 0	      8569	ldlang.c	FUNCTION_200	CALL_3
0x400a7dc	      0xbf00000000	                              mov edi, 0	      8569	ldlang.c	FUNCTION_200	CALL_3
0x400a7e1	      0xe800000000	                          call 0x400a7e6	      8569	ldlang.c	FUNCTION_200	CALL_3
0x400a7e6	          0x4889ee	                            mov rsi, rbp	      8569	ldlang.c	FUNCTION_200	CALL_3
0x400a7e9	          0x4889c7	                            mov rdi, rax	      8569	ldlang.c	FUNCTION_200	CALL_3
0x400a7ec	      0xb800000000	                              mov eax, 0	      8569	ldlang.c	FUNCTION_200	CALL_3
0x400a7f1	      0xe800000000	                          call 0x400a7f6	      8569	ldlang.c	FUNCTION_200	CALL_3
0x400a7f6	    0x49c744240800	                  mov qword [r12 + 8], 0	      8571	ldlang.c	FUNCTION_200
0x400a7ff	          0x4c89e0	                            mov rax, r12	      8573	ldlang.c	FUNCTION_200
0x400a802	              0x5b	                                 pop rbx	      8573	ldlang.c	FUNCTION_200
0x400a803	              0x5d	                                 pop rbp	      8573	ldlang.c	FUNCTION_200
0x400a804	            0x415c	                                 pop r12	      8573	ldlang.c	FUNCTION_200
0x400a806	              0xc3	                                     ret	      8573	ldlang.c	FUNCTION_200
update_wild_statements	IF,3:WHILE,0:FOR,2:DO,0:SWITCH,3:functions,0:CALL,4:ELSE,0	82
0x4000537	    0x8b0500000000	            mov eax, dword [0x0400053d] 	      3526	ldlang.c	FUNCTION_85	SWITCH_1
0x400053d	            0x85c0	                           test eax, eax	      3526	ldlang.c	FUNCTION_85	SWITCH_1
0x400053f	     0xf8405010000	                            je 0x400064a	      3526	ldlang.c	FUNCTION_85	SWITCH_1
0x4000545	              0x53	                                push rbx	      3523	ldlang.c	FUNCTION_85
0x4000546	          0x4889fb	                            mov rbx, rdi	      3523	ldlang.c	FUNCTION_85
0x4000549	          0x83f802	                              cmp eax, 2	      3526	ldlang.c	FUNCTION_85	SWITCH_1
0x400054c	            0x770a	                            ja 0x4000558	      3526	ldlang.c	FUNCTION_85	SWITCH_1
0x400054e	          0x4885ff	                           test rdi, rdi	      3536	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1
0x4000551	            0x7519	                           jne 0x400056c	      3536	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1
0x4000553	      0xe9f1000000	                           jmp 0x4000649	      3536	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1
0x4000558	      0xbec90d0000	                          mov esi, 0xdc9	      3529	ldlang.c	FUNCTION_85	SWITCH_1	CALL_1
0x400055d	      0xbf00000000	                              mov edi, 0	      3529	ldlang.c	FUNCTION_85	SWITCH_1	CALL_1
0x4000562	      0xe800000000	                          call 0x4000567	      3529	ldlang.c	FUNCTION_85	SWITCH_1	CALL_1
0x4000567	      0xe9dd000000	                           jmp 0x4000649	      3529	ldlang.c	FUNCTION_85	SWITCH_1	CALL_1
0x400056c	          0x8b4308	                mov eax, dword [rbx + 8]	      3538	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2
0x400056f	          0x83f804	                              cmp eax, 4	      3538	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2
0x4000572	            0x7421	                            je 0x4000595	      3538	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2
0x4000574	          0x83f804	                              cmp eax, 4	      3538	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2
0x4000577	            0x7709	                            ja 0x4000582	      3538	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2
0x4000579	            0x85c0	                           test eax, eax	      3538	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2
0x400057b	            0x7476	                            je 0x40005f3	      3538	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2
0x400057d	      0xe9bb000000	                           jmp 0x400063d	      3538	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2
0x4000582	          0x83f80d	                            cmp eax, 0xd	      3538	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2
0x4000585	     0xf84a9000000	                            je 0x4000634	      3538	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2
0x400058b	          0x83f80f	                            cmp eax, 0xf	      3538	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2
0x400058e	            0x7455	                            je 0x40005e5	      3538	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2
0x4000590	      0xe9a8000000	                           jmp 0x400063d	      3538	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2
0x4000595	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      3544	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2
0x4000599	          0x4885c0	                           test rax, rax	      3544	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2
0x400059c	     0xf849b000000	                            je 0x400063d	      3544	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2
0x40005a2	    0x8b0d00000000	            mov ecx, dword [0x040005a8] 	      3550	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3
0x40005a8	          0x8b5018	            mov edx, dword [rax + 0x18] 	      3547	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3
0x40005ab	          0x83fa01	                              cmp edx, 1	      3547	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3
0x40005ae	            0x7411	                            je 0x40005c1	      3547	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3
0x40005b0	          0x83fa01	                              cmp edx, 1	      3547	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3
0x40005b3	            0x7207	                            jb 0x40005bc	      3547	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3
0x40005b5	          0x83fa02	                              cmp edx, 2	      3547	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3
0x40005b8	            0x7415	                            je 0x40005cf	      3547	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3
0x40005ba	            0xeb1f	                           jmp 0x40005db	      3547	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3
0x40005bc	          0x894818	             mov dword [rax + 0x18], ecx	      3550	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3
0x40005bf	            0xeb1a	                           jmp 0x40005db	      3551	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3
0x40005c1	          0x83f902	                              cmp ecx, 2	      3553	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3	IF_1
0x40005c4	            0x7515	                           jne 0x40005db	      3553	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3	IF_1
0x40005c6	    0xc74018030000	               mov dword [rax + 0x18], 3	      3554	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3	IF_1
0x40005cd	            0xeb0c	                           jmp 0x40005db	      3554	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3	IF_1
0x40005cf	          0x83f901	                              cmp ecx, 1	      3557	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3	IF_2
0x40005d2	            0x7507	                           jne 0x40005db	      3557	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3	IF_2
0x40005d4	    0xc74018040000	               mov dword [rax + 0x18], 4	      3558	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2	SWITCH_3	IF_2
0x40005db	          0x488b00	                    mov rax, qword [rax]	      3545	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2
0x40005de	          0x4885c0	                           test rax, rax	      3544	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2
0x40005e1	            0x75c5	                           jne 0x40005a8	      3544	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2
0x40005e3	            0xeb58	                           jmp 0x400063d	      3544	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	FOR_2
0x40005e5	    0x488b3d000000	            mov rdi, qword [0x040005ec] 	      3567	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	CALL_2
0x40005ec	      0xe846ffffff	         call sym.update_wild_statements	      3567	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	CALL_2
0x40005f1	            0xeb4a	                           jmp 0x400063d	      3568	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2
0x40005f3	        0x488b4330	            mov rax, qword [rbx + 0x30] 	      3572	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	IF_3
0x40005f7	      0xbf00000000	                              mov edi, 0	      3572	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	IF_3
0x40005fc	      0xb906000000	                              mov ecx, 6	      3572	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	IF_3
0x4000601	          0x4889c6	                            mov rsi, rax	      3572	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	IF_3
0x4000604	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      3572	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	IF_3
0x4000606	           0xf97c1	                                 seta cl	      3572	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	IF_3
0x4000609	           0xf92c2	                                 setb dl	      3572	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	IF_3
0x400060c	            0x38d1	                              cmp cl, dl	      3572	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	IF_3
0x400060e	            0x742d	                            je 0x400063d	      3572	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	IF_3
0x4000610	      0xbf00000000	                              mov edi, 0	      3573	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	IF_3
0x4000615	      0xb906000000	                              mov ecx, 6	      3573	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	IF_3
0x400061a	          0x4889c6	                            mov rsi, rax	      3573	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	IF_3
0x400061d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      3573	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	IF_3
0x400061f	           0xf97c2	                                 seta dl	      3573	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	IF_3
0x4000622	           0xf92c0	                                 setb al	      3573	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	IF_3
0x4000625	            0x38c2	                              cmp dl, al	      3573	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	IF_3
0x4000627	            0x7414	                            je 0x400063d	      3573	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	IF_3
0x4000629	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      3574	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	IF_3	CALL_3
0x400062d	      0xe805ffffff	         call sym.update_wild_statements	      3574	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	IF_3	CALL_3
0x4000632	            0xeb09	                           jmp 0x400063d	      3574	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	IF_3	CALL_3
0x4000634	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      3579	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	CALL_4
0x4000638	      0xe8fafeffff	         call sym.update_wild_statements	      3579	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1	SWITCH_2	CALL_4
0x400063d	          0x488b1b	                    mov rbx, qword [rbx]	      3536	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1
0x4000640	          0x4885db	                           test rbx, rbx	      3536	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1
0x4000643	     0xf8523ffffff	                           jne 0x400056c	      3536	ldlang.c	FUNCTION_85	SWITCH_1	FOR_1
0x4000649	              0x5b	                                 pop rbx	      3585	ldlang.c	FUNCTION_85
0x400064a	            0xf3c3	                                     ret	      3585	ldlang.c	FUNCTION_85
lang_output_section_get	IF,0:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,1:ELSE,0	2
0x4004509	    0x488b87a80000	            mov rax, qword [rdi + 0xa8] 	      1417	ldlang.c	FUNCTION_44	CALL_1
0x4004510	              0xc3	                                     ret	      1418	ldlang.c	FUNCTION_44
lang_size_sections_1	IF,49:WHILE,0:FOR,1:DO,0:SWITCH,2:functions,0:CALL,43:ELSE,12	765
0x4003707	            0x4157	                                push r15	      5011	ldlang.c	FUNCTION_115
0x4003709	            0x4156	                                push r14	      5011	ldlang.c	FUNCTION_115
0x400370b	            0x4155	                                push r13	      5011	ldlang.c	FUNCTION_115
0x400370d	            0x4154	                                push r12	      5011	ldlang.c	FUNCTION_115
0x400370f	              0x55	                                push rbp	      5011	ldlang.c	FUNCTION_115
0x4003710	              0x53	                                push rbx	      5011	ldlang.c	FUNCTION_115
0x4003711	        0x4883ec38	                           sub rsp, 0x38	      5011	ldlang.c	FUNCTION_115
0x4003715	          0x4989fc	                            mov r12, rdi	      5011	ldlang.c	FUNCTION_115
0x4003718	          0x4889f5	                            mov rbp, rsi	      5011	ldlang.c	FUNCTION_115
0x400371b	        0x48891424	                    mov qword [rsp], rdx	      5011	ldlang.c	FUNCTION_115
0x400371f	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      5011	ldlang.c	FUNCTION_115
0x4003724	          0x4d89c7	                             mov r15, r8	      5011	ldlang.c	FUNCTION_115
0x4003727	      0x44894c240c	              mov dword [rsp + 0xc], r9d	      5011	ldlang.c	FUNCTION_115
0x400372c	    0x64488b042528	                mov rax, qword fs:[0x28]	      5011	ldlang.c	FUNCTION_115
0x4003735	      0x4889442428	             mov qword [rsp + 0x28], rax	      5011	ldlang.c	FUNCTION_115
0x400373a	            0x31c0	                            xor eax, eax	      5011	ldlang.c	FUNCTION_115
0x400373c	          0x488b1f	                    mov rbx, qword [rdi]	      5015	ldlang.c	FUNCTION_115	FOR_1
0x400373f	          0x4885db	                           test rbx, rbx	      5015	ldlang.c	FUNCTION_115	FOR_1
0x4003742	     0xf84ab0b0000	                            je 0x40042f3	      5015	ldlang.c	FUNCTION_115	FOR_1
0x4003748	        0x837b080f	                cmp dword [rbx + 8], 0xf	      5017	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x400374c	     0xf87830b0000	                            ja 0x40042d5	      5017	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003752	          0x8b4308	                mov eax, dword [rbx + 8]	      5017	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003755	    0xff24c5000000	                       jmp qword [rax*8]	      5017	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x400375c	    0x83bb84000000	cmp dword [rbx + 0x84], 0xffffffffffffffff	      5027	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_1
0x4003763	     0xf847b0b0000	                            je 0x40042e4	      5027	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_1
0x4003769	        0x488b7b58	            mov rdi, qword [rbx + 0x58] 	      5033	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_2
0x400376d	          0x4885ff	                           test rdi, rdi	      5033	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_2
0x4003770	            0x7538	                           jne 0x40037aa	      5033	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_2
0x4003772	     0xfb605000000	           movzx eax, byte [0x04003779] 	      5034	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_2	CALL_1
0x4003779	          0x83e003	                              and eax, 3	      5034	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_2	CALL_1
0x400377c	            0x3c02	                               cmp al, 2	      5034	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_2	CALL_1
0x400377e	     0xf85a0000000	                           jne 0x4003824	      5034	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_2	CALL_1
0x4003784	    0x488b05000000	            mov rax, qword [0x0400378b] 	      5035	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_2
0x400378b	        0x488b4008	                mov rax, qword [rax + 8]	      5035	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_2
0x400378f	        0x83780802	                  cmp dword [rax + 8], 2	      5035	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_2
0x4003793	     0xf858b000000	                           jne 0x4003824	      5035	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_2
0x4003799	      0xe800000000	                          call 0x400379e	      5037	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_2
0x400379e	          0x4889c7	                            mov rdi, rax	      5037	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_2
0x40037a1	        0x48894358	             mov qword [rbx + 0x58], rax	      5037	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_2
0x40037a5	          0x4885c0	                           test rax, rax	      5038	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3
0x40037a8	            0x747a	                            je 0x4003824	      5038	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3
0x40037aa	    0x80a390000000	             and byte [rbx + 0x90], 0xfe	      5040	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3
0x40037b1	      0x488d542418	                   lea rdx, [rsp + 0x18]	      5041	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	CALL_3
0x40037b6	      0xbe00000000	                              mov esi, 0	      5041	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	CALL_3
0x40037bb	      0xe800000000	                          call 0x40037c0	      5041	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	CALL_3
0x40037c0	    0x833d00000000	               cmp dword [0x040037c7], 0	      5043	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	IF_4
0x40037c7	            0x7423	                            je 0x40037ec	      5043	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	IF_4
0x40037c9	    0x488b05000000	            mov rax, qword [0x040037d0] 	      5045	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	IF_4
0x40037d0	      0x4889442418	             mov qword [rsp + 0x18], rax	      5045	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	IF_4
0x40037d5	    0x488b15000000	            mov rdx, qword [0x040037dc] 	      5046	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x40037dc	          0x4885d2	                           test rdx, rdx	      5046	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x40037df	            0x7443	                            je 0x4003824	      5046	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x40037e1	        0x48034228	             add rax, qword [rdx + 0x28]	      5047	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x40037e5	      0x4889442418	             mov qword [rsp + 0x18], rax	      5047	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x40037ea	            0xeb38	                           jmp 0x4003824	      5047	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x40037ec	    0x833d00000000	               cmp dword [0x040037f3], 1	      5049	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	ELSE_1	IF_6
0x40037f3	            0x742f	                            je 0x4003824	      5049	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	ELSE_1	IF_6
0x40037f5	        0x4c8b6b30	            mov r13, qword [rbx + 0x30] 	      5050	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	ELSE_1	IF_6	CALL_5
0x40037f9	        0x4c8b6358	            mov r12, qword [rbx + 0x58] 	      5050	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	ELSE_1	IF_6	CALL_5
0x40037fd	      0xba05000000	                              mov edx, 5	      5050	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	ELSE_1	IF_6	CALL_5
0x4003802	      0xbe00000000	                              mov esi, 0	      5050	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	ELSE_1	IF_6	CALL_5
0x4003807	      0xbf00000000	                              mov edi, 0	      5050	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	ELSE_1	IF_6	CALL_5
0x400380c	      0xe800000000	                          call 0x4003811	      5050	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	ELSE_1	IF_6	CALL_5
0x4003811	          0x4c89ea	                            mov rdx, r13	      5050	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	ELSE_1	IF_6	CALL_5
0x4003814	          0x4c89e6	                            mov rsi, r12	      5050	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	ELSE_1	IF_6	CALL_5
0x4003817	          0x4889c7	                            mov rdi, rax	      5050	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	ELSE_1	IF_6	CALL_5
0x400381a	      0xb800000000	                              mov eax, 0	      5050	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	ELSE_1	IF_6	CALL_5
0x400381f	      0xe800000000	                          call 0x4003824	      5050	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_3	ELSE_1	IF_6	CALL_5
0x4003824	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	      5055	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_7
0x4003828	          0x4885d2	                           test rdx, rdx	      5055	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_7
0x400382b	     0xf84b30a0000	                            je 0x40042e4	      5055	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_7
0x4003831	    0x488b05000000	            mov rax, qword [0x04003838] 	      5063	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8
0x4003838	        0x488b4008	                mov rax, qword [rax + 8]	      5063	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8
0x400383c	          0x8b4008	                mov eax, dword [rax + 8]	      5063	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8
0x400383f	          0x83e802	                              sub eax, 2	      5063	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8
0x4003842	          0x83f801	                              cmp eax, 1	      5063	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8
0x4003845	            0x777a	                            ja 0x40038c1	      5063	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8
0x4003847	        0xf6422304	               test byte [rdx + 0x23], 4	      5067	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8
0x400384b	            0x7474	                            je 0x40038c1	      5067	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8
0x400384d	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      5071	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_9
0x4003851	          0x4885c0	                           test rax, rax	      5071	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_9
0x4003854	            0x740c	                            je 0x4003862	      5071	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_9
0x4003856	        0x48833800	                      cmp qword [rax], 0	      5072	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_9
0x400385a	            0x7506	                           jne 0x4003862	      5072	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_9
0x400385c	        0x83780805	                  cmp dword [rax + 8], 5	      5073	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_9
0x4003860	            0x7428	                            je 0x400388a	      5073	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_9
0x4003862	        0x4c8b6330	            mov r12, qword [rbx + 0x30] 	      5075	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_9	CALL_7
0x4003866	      0xba05000000	                              mov edx, 5	      5075	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_9	CALL_7
0x400386b	      0xbe00000000	                              mov esi, 0	      5075	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_9	CALL_7
0x4003870	      0xbf00000000	                              mov edi, 0	      5075	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_9	CALL_7
0x4003875	      0xe800000000	                          call 0x400387a	      5075	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_9	CALL_7
0x400387a	          0x4c89e6	                            mov rsi, r12	      5075	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_9	CALL_7
0x400387d	          0x4889c7	                            mov rdi, rax	      5075	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_9	CALL_7
0x4003880	      0xb800000000	                              mov eax, 0	      5075	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_9	CALL_7
0x4003885	      0xe800000000	                          call 0x400388a	      5075	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_9	CALL_7
0x400388a	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      5078	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8
0x400388e	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      5078	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8
0x4003892	        0x488b5128	            mov rdx, qword [rcx + 0x28] 	      5079	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	CALL_8
0x4003896	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      5079	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	CALL_8
0x400389a	        0x48895030	             mov qword [rax + 0x30], rdx	      1687	bfd.h	FUNCTION_258
0x400389e	        0x48895028	             mov qword [rax + 0x28], rdx	      1687	bfd.h	FUNCTION_258
0x40038a2	        0x80482401	                 or byte [rax + 0x24], 1	      1688	bfd.h	FUNCTION_258
0x40038a6	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      5082	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_10
0x40038aa	        0xf6402108	               test byte [rax + 0x21], 8	      5082	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_10
0x40038ae	     0xf85300a0000	                           jne 0x40042e4	      5082	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_10
0x40038b4	        0x488b5138	            mov rdx, qword [rcx + 0x38] 	      5083	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_10
0x40038b8	        0x48895038	             mov qword [rax + 0x38], rdx	      5083	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_10
0x40038bc	      0xe9230a0000	                           jmp 0x40042e4	      5083	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_8	IF_10
0x40038c1	      0x4c8b6c2418	            mov r13, qword [rsp + 0x18] 	      5087	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x40038c6	    0x4881fa000000	                              cmp rdx, 0	      5089	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_11
0x40038cd	            0x7531	                           jne 0x4003900	      5089	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_11
0x40038cf	    0x48833d000000	               cmp qword [0x040038d7], 0	      5092	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_11	CALL_9
0x40038d7	     0xf845a020000	                            je 0x4003b37	      5092	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_11	CALL_9
0x40038dd	      0xbee4130000	                         mov esi, 0x13e4	      5092	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_11	CALL_9
0x40038e2	      0xbf00000000	                              mov edi, 0	      5092	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_11	CALL_9
0x40038e7	      0xe800000000	                          call 0x40038ec	      5092	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_11	CALL_9
0x40038ec	          0x4d89ec	                            mov r12, r13	      5087	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x40038ef	    0x41be00000000	                             mov r14d, 0	      5024	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x40038f5	    0x41bd00000000	                             mov r13d, 0	      5088	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x40038fb	      0xe946020000	                           jmp 0x4003b46	      5088	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003900	      0x48837b5800	               cmp qword [rbx + 0x58], 0	      5096	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12
0x4003905	     0xf8582010000	                           jne 0x4003a8d	      5096	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12
0x400390b	        0x488b4340	            mov rax, qword [rbx + 0x40] 	      5100	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_13
0x400390f	          0x4885c0	                           test rax, rax	      5100	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_13
0x4003912	            0x7424	                            je 0x4003938	      5100	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_13
0x4003914	        0xf6422003	               test byte [rdx + 0x20], 3	      5101	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_13
0x4003918	            0x7463	                            je 0x400397d	      5101	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_13
0x400391a	          0x488b30	                    mov rsi, qword [rax]	      5102	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_13
0x400391d	          0x803e2a	                    cmp byte [rsi], 0x2a	      5102	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_13
0x4003920	            0x755b	                           jne 0x400397d	      5102	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_13
0x4003922	      0xbf00000000	                              mov edi, 0	      5103	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_13
0x4003927	      0xb90a000000	                            mov ecx, 0xa	      5103	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_13
0x400392c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5103	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_13
0x400392e	           0xf97c1	                                 seta cl	      5103	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_13
0x4003931	           0xf92c0	                                 setb al	      5103	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_13
0x4003934	            0x38c1	                              cmp cl, al	      5103	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_13
0x4003936	            0x7545	                           jne 0x400397d	      5103	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_13
0x4003938	          0x8b5220	            mov edx, dword [rdx + 0x20] 	      1395	ldlang.c	FUNCTION_43
0x400393b	            0x89d1	                            mov ecx, edx	      1398	ldlang.c	FUNCTION_43	IF_1
0x400393d	          0x83e119	                           and ecx, 0x19	      1398	ldlang.c	FUNCTION_43	IF_1
0x4003940	            0x89d0	                            mov eax, edx	      1399	ldlang.c	FUNCTION_43	IF_1
0x4003942	          0x83c820	                            or eax, 0x20	      1399	ldlang.c	FUNCTION_43	IF_1
0x4003945	          0x83f901	                              cmp ecx, 1	      1399	ldlang.c	FUNCTION_43	IF_1
0x4003948	           0xf44d0	                          cmove edx, eax	      1399	ldlang.c	FUNCTION_43	IF_1
0x400394b	    0x488b05000000	            mov rax, qword [0x04003952] 	      1401	ldlang.c	FUNCTION_43	FOR_1
0x4003952	          0x4885c0	                           test rax, rax	      1401	ldlang.c	FUNCTION_43	FOR_1
0x4003955	            0x7413	                            je 0x400396a	      1401	ldlang.c	FUNCTION_43	FOR_1
0x4003957	          0x855048	           test dword [rax + 0x48], edx 	      1403	ldlang.c	FUNCTION_43	FOR_1	IF_2
0x400395a	            0x7405	                            je 0x4003961	      1403	ldlang.c	FUNCTION_43	FOR_1	IF_2
0x400395c	          0x85504c	           test dword [rax + 0x4c], edx 	      1404	ldlang.c	FUNCTION_43	FOR_1	IF_2
0x400395f	            0x7418	                            je 0x4003979	      1404	ldlang.c	FUNCTION_43	FOR_1	IF_2
0x4003961	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1401	ldlang.c	FUNCTION_43	FOR_1
0x4003965	          0x4885c0	                           test rax, rax	      1401	ldlang.c	FUNCTION_43	FOR_1
0x4003968	            0x75ed	                           jne 0x4003957	      1401	ldlang.c	FUNCTION_43	FOR_1
0x400396a	      0xbe00000000	                              mov esi, 0	      1409	ldlang.c	FUNCTION_43	CALL_1
0x400396f	      0xbf00000000	                              mov edi, 0	      1409	ldlang.c	FUNCTION_43	CALL_1
0x4003974	      0xe800000000	                          call 0x4003979	      1409	ldlang.c	FUNCTION_43	CALL_1
0x4003979	        0x48894340	             mov qword [rbx + 0x40], rax	      5106	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_13	CALL_10
0x400397d	    0xf68390000000	               test byte [rbx + 0x90], 8	      5112	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x4003984	     0xf85f1000000	                           jne 0x4003a7b	      5112	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x400398a	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	      5113	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x400398e	          0x8b4220	            mov eax, dword [rdx + 0x20] 	      5113	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x4003991	            0xa801	                              test al, 1	      5113	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x4003993	     0xf84e2000000	                            je 0x4003a7b	      5113	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x4003999	      0x2502040000	                          and eax, 0x402	      5113	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x400399e	      0x3d00040000	                          cmp eax, 0x400	      5113	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x40039a3	     0xf84d2000000	                            je 0x4003a7b	      5113	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x40039a9	     0xfb605000000	           movzx eax, byte [0x040039b0] 	      5115	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x40039b0	          0x83e003	                              and eax, 3	      5115	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x40039b3	            0x3c02	                               cmp al, 2	      5115	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x40039b5	     0xf84c0000000	                            je 0x4003a7b	      5115	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x40039bb	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      5115	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x40039c0	     0xf84b5000000	                            je 0x4003a7b	      5115	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x40039c6	        0x488b4340	            mov rax, qword [rbx + 0x40] 	      5116	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x40039ca	          0x488b30	                    mov rsi, qword [rax]	      5116	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x40039cd	      0xbf00000000	                              mov edi, 0	      5116	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x40039d2	      0xb90a000000	                            mov ecx, 0xa	      5116	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x40039d7	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5116	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x40039d9	           0xf97c1	                                 seta cl	      5116	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x40039dc	           0xf92c0	                                 setb al	      5116	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x40039df	            0x38c1	                              cmp cl, al	      5116	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x40039e1	     0xf8594000000	                           jne 0x4003a7b	      5116	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x40039e7	    0x488b05000000	            mov rax, qword [0x040039ee] 	      5118	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x40039ee	          0x4885c0	                           test rax, rax	      5118	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x40039f1	     0xf8484000000	                            je 0x4003a7b	      5118	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x40039f7	          0x488b30	                    mov rsi, qword [rax]	      5119	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x40039fa	      0xbf00000000	                              mov edi, 0	      5119	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x40039ff	      0xb90a000000	                            mov ecx, 0xa	      5119	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x4003a04	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5119	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x4003a06	        0x400f97c6	                                seta sil	      5119	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x4003a0a	           0xf92c1	                                 setb cl	      5119	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x4003a0d	          0x4038ce	                             cmp sil, cl	      5119	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x4003a10	            0x7507	                           jne 0x4003a19	      5119	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x4003a12	      0x4883781000	               cmp qword [rax + 0x10], 0	      5121	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x4003a17	            0x7462	                            je 0x4003a7b	      5121	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x4003a19	    0x833d00000000	               cmp dword [0x04003a20], 1	      5122	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x4003a20	            0x7459	                            je 0x4003a7b	      5122	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14
0x4003a22	    0x803d00000000	                cmp byte [0x04003a29], 0	      5133	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14	IF_15
0x4003a29	            0x7429	                            je 0x4003a54	      5133	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14	IF_15
0x4003a2b	          0x4c8b22	                    mov r12, qword [rdx]	      5134	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14	IF_15	CALL_13
0x4003a2e	      0xba05000000	                              mov edx, 5	      5134	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14	IF_15	CALL_13
0x4003a33	      0xbe00000000	                              mov esi, 0	      5134	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14	IF_15	CALL_13
0x4003a38	      0xbf00000000	                              mov edi, 0	      5134	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14	IF_15	CALL_13
0x4003a3d	      0xe800000000	                          call 0x4003a42	      5134	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14	IF_15	CALL_13
0x4003a42	          0x4c89e6	                            mov rsi, r12	      5134	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14	IF_15	CALL_13
0x4003a45	          0x4889c7	                            mov rdi, rax	      5134	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14	IF_15	CALL_13
0x4003a48	      0xb800000000	                              mov eax, 0	      5134	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14	IF_15	CALL_13
0x4003a4d	      0xe800000000	                          call 0x4003a52	      5134	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14	IF_15	CALL_13
0x4003a52	            0xeb27	                           jmp 0x4003a7b	      5134	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14	IF_15	CALL_13
0x4003a54	          0x4c8b22	                    mov r12, qword [rdx]	      5139	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14	ELSE_3	CALL_15
0x4003a57	      0xba05000000	                              mov edx, 5	      5139	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14	ELSE_3	CALL_15
0x4003a5c	      0xbe00000000	                              mov esi, 0	      5139	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14	ELSE_3	CALL_15
0x4003a61	      0xbf00000000	                              mov edi, 0	      5139	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14	ELSE_3	CALL_15
0x4003a66	      0xe800000000	                          call 0x4003a6b	      5139	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14	ELSE_3	CALL_15
0x4003a6b	          0x4c89e6	                            mov rsi, r12	      5139	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14	ELSE_3	CALL_15
0x4003a6e	          0x4889c7	                            mov rdi, rax	      5139	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14	ELSE_3	CALL_15
0x4003a71	      0xb800000000	                              mov eax, 0	      5139	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14	ELSE_3	CALL_15
0x4003a76	      0xe800000000	                          call 0x4003a7b	      5139	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12	IF_14	ELSE_3	CALL_15
0x4003a7b	        0x488b4340	            mov rax, qword [rbx + 0x40] 	      5145	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12
0x4003a7f	        0x4c8b6838	            mov r13, qword [rax + 0x38] 	      5145	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12
0x4003a83	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      5146	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12
0x4003a87	        0x448b7070	           mov r14d, dword [rax + 0x70] 	      5146	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12
0x4003a8b	            0xeb07	                           jmp 0x4003a94	      5146	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	IF_12
0x4003a8d	    0x448bb3800000	           mov r14d, dword [rbx + 0x80] 	      5149	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4
0x4003a94	          0x4585f6	                         test r14d, r14d	      5152	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16
0x4003a97	            0x7e77	                           jle 0x4003b10	      5152	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16
0x4003a99	      0xb801000000	                              mov eax, 1	      5155	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16
0x4003a9e	          0x4489f1	                           mov ecx, r14d	      5155	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16
0x4003aa1	          0x48d3e0	                             shl rax, cl	      5155	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16
0x4003aa4	      0x4d8d6405ff	                lea r12, [r13 + rax - 1]	      5155	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16
0x4003aa9	          0x48f7d8	                                 neg rax	      5155	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16
0x4003aac	          0x4921c4	                            and r12, rax	      5155	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16
0x4003aaf	          0x4c89e0	                            mov rax, r12	      5158	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17
0x4003ab2	          0x4c29e8	                            sub rax, r13	      5158	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17
0x4003ab5	          0x4989c5	                            mov r13, rax	      5158	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17
0x4003ab8	            0x745f	                            je 0x4003b19	      5158	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17
0x4003aba	    0x833d00000000	               cmp dword [0x04003ac1], 0	      5159	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17
0x4003ac1	            0x7507	                           jne 0x4003aca	      5159	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17
0x4003ac3	      0x48837b5800	               cmp qword [rbx + 0x58], 0	      5160	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17
0x4003ac8	            0x744f	                            je 0x4003b19	      5160	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17
0x4003aca	    0x833d00000000	               cmp dword [0x04003ad1], 1	      5161	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17
0x4003ad1	            0x7446	                            je 0x4003b19	      5161	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17
0x4003ad3	        0x488b4330	            mov rax, qword [rbx + 0x30] 	      5162	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17	CALL_17
0x4003ad7	      0x4889442410	             mov qword [rsp + 0x10], rax	      5162	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17	CALL_17
0x4003adc	    0x41b805000000	                              mov r8d, 5	      5162	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17	CALL_17
0x4003ae2	          0x4c89e9	                            mov rcx, r13	      5162	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17	CALL_17
0x4003ae5	      0xba00000000	                              mov edx, 0	      5162	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17	CALL_17
0x4003aea	      0xbe00000000	                              mov esi, 0	      5162	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17	CALL_17
0x4003aef	      0xbf00000000	                              mov edi, 0	      5162	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17	CALL_17
0x4003af4	      0xe800000000	                          call 0x4003af9	      5162	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17	CALL_17
0x4003af9	          0x4c89ea	                            mov rdx, r13	      5162	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17	CALL_17
0x4003afc	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      5162	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17	CALL_17
0x4003b01	          0x4889c7	                            mov rdi, rax	      5162	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17	CALL_17
0x4003b04	      0xb800000000	                              mov eax, 0	      5162	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17	CALL_17
0x4003b09	      0xe800000000	                          call 0x4003b0e	      5162	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17	CALL_17
0x4003b0e	            0xeb09	                           jmp 0x4003b19	      5162	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17	CALL_17
0x4003b10	          0x4d89ec	                            mov r12, r13	      5162	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	ELSE_4	IF_16	IF_17	CALL_17
0x4003b13	    0x41bd00000000	                             mov r13d, 0	      5088	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003b19	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      5170	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2	CALL_18
0x4003b1d	        0x4c896030	             mov qword [rax + 0x30], r12	      1687	bfd.h	FUNCTION_258
0x4003b21	        0x4c896028	             mov qword [rax + 0x28], r12	      1687	bfd.h	FUNCTION_258
0x4003b25	        0x80482401	                 or byte [rax + 0x24], 1	      1688	bfd.h	FUNCTION_258
0x4003b29	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      5172	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2
0x4003b2d	    0x48c740600000	               mov qword [rax + 0x60], 0	      5172	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2
0x4003b35	            0xeb0f	                           jmp 0x4003b46	      5172	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_2
0x4003b37	          0x4d89ec	                            mov r12, r13	      5087	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003b3a	    0x41be00000000	                             mov r14d, 0	      5024	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003b40	    0x41bd00000000	                             mov r13d, 0	      5088	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003b46	      0x48895c2410	             mov qword [rsp + 0x10], rbx	      5026	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003b4b	        0x488b5350	            mov rdx, qword [rbx + 0x50] 	      5175	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_19
0x4003b4f	        0x488d7b10	                   lea rdi, [rbx + 0x10]	      5175	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_19
0x4003b53	      0x448b4c240c	              mov r9d, dword [rsp + 0xc]	      5175	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_19
0x4003b58	          0x4d89f8	                             mov r8, r15	      5175	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_19
0x4003b5b	          0x4c89e1	                            mov rcx, r12	      5175	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_19
0x4003b5e	          0x4889de	                            mov rsi, rbx	      5175	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_19
0x4003b61	      0xe8a1fbffff	           call sym.lang_size_sections_1	      5175	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_19
0x4003b66	    0x808b90000000	                 or byte [rbx + 0x90], 1	      5178	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003b6d	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      5180	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_18
0x4003b71	    0x483d00000000	                              cmp rax, 0	      5180	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_18
0x4003b77	            0x7409	                            je 0x4003b82	      5180	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_18
0x4003b79	    0xf68390000000	               test byte [rbx + 0x90], 8	      5180	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_18
0x4003b80	            0x7418	                            je 0x4003b9a	      5180	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_18
0x4003b82	      0x4883783800	               cmp qword [rax + 0x38], 0	      5186	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_20
0x4003b87	            0x7448	                            je 0x4003bd1	      5186	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_20
0x4003b89	      0xbe42140000	                         mov esi, 0x1442	      5186	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_20
0x4003b8e	      0xbf00000000	                              mov edi, 0	      5186	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_20
0x4003b93	      0xe800000000	                          call 0x4003b98	      5186	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_20
0x4003b98	            0xeb37	                           jmp 0x4003bd1	      5186	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_20
0x4003b9a	        0x488b7028	            mov rsi, qword [rax + 0x28] 	      5189	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_5
0x4003b9e	      0x4889742418	             mov qword [rsp + 0x18], rsi	      5189	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_5
0x4003ba3	        0xf6402108	               test byte [rax + 0x21], 8	      5198	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_5	IF_19
0x4003ba7	            0x7528	                           jne 0x4003bd1	      5198	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_5	IF_19
0x4003ba9	    0x8b0d00000000	            mov ecx, dword [0x04003baf] 	      5194	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_5
0x4003baf	          0x8b5378	            mov edx, dword [rbx + 0x78] 	      5195	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_5
0x4003bb2	        0x4c8b4038	              mov r8, qword [rax + 0x38]	      5199	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_5	IF_19
0x4003bb6	          0x49d3e8	                              shr r8, cl	      5199	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_5	IF_19
0x4003bb9	      0x488d7c16ff	                lea rdi, [rsi + rdx - 1]	      5199	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_5	IF_19
0x4003bbe	          0x4c01c7	                             add rdi, r8	      5199	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_5	IF_19
0x4003bc1	          0x48f7da	                                 neg rdx	      5199	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_5	IF_19
0x4003bc4	          0x4821fa	                            and rdx, rdi	      5199	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_5	IF_19
0x4003bc7	          0x4829f2	                            sub rdx, rsi	      5199	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_5	IF_19
0x4003bca	          0x48d3e2	                             shl rdx, cl	      5199	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_5	IF_19
0x4003bcd	        0x48895038	             mov qword [rax + 0x38], rdx	      5199	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_5	IF_19
0x4003bd1	        0x4c8b6340	            mov r12, qword [rbx + 0x40] 	      5204	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003bd5	          0x4d85e4	                           test r12, r12	      5205	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_20
0x4003bd8	            0x7512	                           jne 0x4003bec	      5205	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_20
0x4003bda	      0xbe00000000	                              mov esi, 0	      5206	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_21
0x4003bdf	      0xbf00000000	                              mov edi, 0	      5206	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_21
0x4003be4	      0xe800000000	                          call 0x4003be9	      5206	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_21
0x4003be9	          0x4989c4	                            mov r12, rax	      5206	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_21
0x4003bec	        0x488b7b60	            mov rdi, qword [rbx + 0x60] 	      5208	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_21
0x4003bf0	          0x4885ff	                           test rdi, rdi	      5208	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_21
0x4003bf3	            0x741c	                            je 0x4003c11	      5208	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_21
0x4003bf5	      0xba00000000	                              mov edx, 0	      5210	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_21	CALL_22
0x4003bfa	      0xbe00000000	                              mov esi, 0	      5210	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_21	CALL_22
0x4003bff	      0xe800000000	                          call 0x4003c04	      5210	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_21	CALL_22
0x4003c04	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	      5211	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_21
0x4003c08	        0x48894230	             mov qword [rdx + 0x30], rax	      5211	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_21
0x4003c0c	      0xe90d010000	                           jmp 0x4003d1e	      5211	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_21
0x4003c11	        0x488b5348	            mov rdx, qword [rbx + 0x48] 	      5213	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22
0x4003c15	          0x4885d2	                           test rdx, rdx	      5213	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22
0x4003c18	            0x744a	                            je 0x4003c64	      5213	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22
0x4003c1a	        0x488b4238	            mov rax, qword [rdx + 0x38] 	      5215	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22
0x4003c1e	    0xf68390000000	           test byte [rbx + 0x90], 0x40 	      5217	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22	IF_23
0x4003c25	            0x7405	                            je 0x4003c2c	      5217	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22	IF_23
0x4003c27	          0x4c01e8	                            add rax, r13	      5218	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22	IF_23
0x4003c2a	            0xeb2b	                           jmp 0x4003c57	      5218	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22	IF_23
0x4003c2c	        0x483b5340	            cmp rdx, qword [rbx + 0x40] 	      5226	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22	ELSE_7	IF_24
0x4003c30	            0x7407	                            je 0x4003c39	      5226	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22	ELSE_7	IF_24
0x4003c32	    0x448bb3800000	           mov r14d, dword [rbx + 0x80] 	      5227	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22	ELSE_7	IF_24
0x4003c39	          0x4585f6	                         test r14d, r14d	      5228	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22	ELSE_7	IF_25
0x4003c3c	            0x7e19	                           jle 0x4003c57	      5228	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22	ELSE_7	IF_25
0x4003c3e	      0xbe01000000	                              mov esi, 1	      5229	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22	ELSE_7	IF_25
0x4003c43	          0x4489f1	                           mov ecx, r14d	      5229	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22	ELSE_7	IF_25
0x4003c46	          0x48d3e6	                             shl rsi, cl	      5229	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22	ELSE_7	IF_25
0x4003c49	      0x488d5430ff	                lea rdx, [rax + rsi - 1]	      5229	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22	ELSE_7	IF_25
0x4003c4e	          0x4889f0	                            mov rax, rsi	      5229	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22	ELSE_7	IF_25
0x4003c51	          0x48f7d8	                                 neg rax	      5229	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22	ELSE_7	IF_25
0x4003c54	          0x4821d0	                            and rax, rdx	      5229	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22	ELSE_7	IF_25
0x4003c57	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	      5231	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22
0x4003c5b	        0x48894230	             mov qword [rdx + 0x30], rax	      5231	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22
0x4003c5f	      0xe9ba000000	                           jmp 0x4003d1e	      5231	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_6	IF_22
0x4003c64	      0x498b442440	            mov rax, qword [r12 + 0x40] 	      5233	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26
0x4003c69	          0x4885c0	                           test rax, rax	      5233	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26
0x4003c6c	     0xf84ac000000	                            je 0x4003d1e	      5233	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26
0x4003c72	        0x488b7338	            mov rsi, qword [rbx + 0x38] 	      5234	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26
0x4003c76	        0xf6462001	               test byte [rsi + 0x20], 1	      5234	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26
0x4003c7a	     0xf849e000000	                            je 0x4003d1e	      5234	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26
0x4003c80	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      5239	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26
0x4003c84	        0x4c8b4728	              mov r8, qword [rdi + 0x28]	      5245	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27
0x4003c88	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5245	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27
0x4003c8d	          0x4939c0	                             cmp r8, rax	      5245	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27
0x4003c90	            0x764a	                           jbe 0x4003cdc	      5245	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27
0x4003c92	        0x488b5638	            mov rdx, qword [rsi + 0x38] 	      5246	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27
0x4003c96	          0x4885d2	                           test rdx, rdx	      5246	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27
0x4003c99	            0x7441	                            je 0x4003cdc	      5246	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27
0x4003c9b	    0x8b0d00000000	            mov ecx, dword [0x04003ca1] 	      5247	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27
0x4003ca1	          0x48d3ea	                             shr rdx, cl	      5247	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27
0x4003ca4	          0x4801c2	                            add rdx, rax	      5247	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27
0x4003ca7	          0x4939d0	                             cmp r8, rdx	      5247	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27
0x4003caa	            0x7230	                            jb 0x4003cdc	      5247	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27
0x4003cac	        0x4c3b4730	              cmp r8, qword [rdi + 0x30]	      5255	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27	IF_28
0x4003cb0	            0x746c	                            je 0x4003d1e	      5255	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27	IF_28
0x4003cb2	        0x4c8b6b30	            mov r13, qword [rbx + 0x30] 	      5256	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27	IF_28	CALL_24
0x4003cb6	      0xba05000000	                              mov edx, 5	      5256	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27	IF_28	CALL_24
0x4003cbb	      0xbe00000000	                              mov esi, 0	      5256	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27	IF_28	CALL_24
0x4003cc0	      0xbf00000000	                              mov edi, 0	      5256	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27	IF_28	CALL_24
0x4003cc5	      0xe800000000	                          call 0x4003cca	      5256	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27	IF_28	CALL_24
0x4003cca	          0x4c89ee	                            mov rsi, r13	      5256	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27	IF_28	CALL_24
0x4003ccd	          0x4889c7	                            mov rdi, rax	      5256	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27	IF_28	CALL_24
0x4003cd0	      0xb800000000	                              mov eax, 0	      5256	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27	IF_28	CALL_24
0x4003cd5	      0xe800000000	                          call 0x4003cda	      5256	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27	IF_28	CALL_24
0x4003cda	            0xeb42	                           jmp 0x4003d1e	      5256	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	IF_27	IF_28	CALL_24
0x4003cdc	    0x83bb8c000000	               cmp dword [rbx + 0x8c], 1	      5263	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	ELSE_9	IF_29
0x4003ce3	            0x7513	                           jne 0x4003cf8	      5263	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	ELSE_9	IF_29
0x4003ce5	    0x8b0d00000000	            mov ecx, dword [0x04003ceb] 	      5264	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	ELSE_9	IF_29
0x4003ceb	        0x488b4738	            mov rax, qword [rdi + 0x38] 	      5264	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	ELSE_9	IF_29
0x4003cef	          0x48d3e8	                             shr rax, cl	      5264	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	ELSE_9	IF_29
0x4003cf2	        0x48034730	             add rax, qword [rdi + 0x30]	      5264	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	ELSE_9	IF_29
0x4003cf6	            0xeb07	                           jmp 0x4003cff	      5264	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	ELSE_9	IF_29
0x4003cf8	        0x48034730	             add rax, qword [rdi + 0x30]	      5269	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	ELSE_9	ELSE_10
0x4003cfc	          0x4c29c0	                             sub rax, r8	      5269	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	ELSE_9	ELSE_10
0x4003cff	          0x4585f6	                         test r14d, r14d	      5271	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	ELSE_9	IF_30
0x4003d02	            0x7e16	                           jle 0x4003d1a	      5271	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	ELSE_9	IF_30
0x4003d04	      0xba01000000	                              mov edx, 1	      5272	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	ELSE_9	IF_30
0x4003d09	          0x4489f1	                           mov ecx, r14d	      5272	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	ELSE_9	IF_30
0x4003d0c	          0x48d3e2	                             shl rdx, cl	      5272	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	ELSE_9	IF_30
0x4003d0f	      0x488d4410ff	                lea rax, [rax + rdx - 1]	      5272	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	ELSE_9	IF_30
0x4003d14	          0x48f7da	                                 neg rdx	      5272	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	ELSE_9	IF_30
0x4003d17	          0x4821d0	                            and rax, rdx	      5272	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	ELSE_9	IF_30
0x4003d1a	        0x48894630	             mov qword [rsi + 0x30], rax	      5273	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_8	IF_26	ELSE_9
0x4003d1e	    0x808b90000000	                 or byte [rbx + 0x90], 2	      5276	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003d25	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	      5292	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x4003d29	          0x8b4220	            mov eax, dword [rdx + 0x20] 	      5292	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x4003d2c	            0xa801	                              test al, 1	      5292	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x4003d2e	            0x7452	                            je 0x4003d82	      5292	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x4003d30	      0x2502040000	                          and eax, 0x402	      5292	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x4003d35	      0x3d00040000	                          cmp eax, 0x400	      5292	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x4003d3a	            0x7446	                            je 0x4003d82	      5292	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x4003d3c	      0x48837a3800	               cmp qword [rdx + 0x38], 0	      5293	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x4003d41	            0x7525	                           jne 0x4003d68	      5293	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x4003d43	      0x498b442440	            mov rax, qword [r12 + 0x40] 	      5294	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x4003d48	          0x4885c0	                           test rax, rax	      5294	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x4003d4b	            0x750c	                           jne 0x4003d59	      5294	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x4003d4d	        0x488b4230	            mov rax, qword [rdx + 0x30] 	      5295	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x4003d51	        0x48394228	            cmp qword [rdx + 0x28], rax 	      5295	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x4003d55	            0x7511	                           jne 0x4003d68	      5295	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x4003d57	            0xeb29	                           jmp 0x4003d82	      5295	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x4003d59	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5298	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x4003d5d	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      5297	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x4003d62	        0x48394828	            cmp qword [rax + 0x28], rcx 	      5297	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x4003d66	            0x771a	                            ja 0x4003d82	      5297	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x4003d68	      0x48837b4800	               cmp qword [rbx + 0x48], 0	      5299	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x4003d6d	            0x7513	                           jne 0x4003d82	      5299	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x4003d6f	     0xfb605000000	           movzx eax, byte [0x04003d76] 	      5300	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31	CALL_25
0x4003d76	          0x83e003	                              and eax, 3	      5300	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31	CALL_25
0x4003d79	            0x3c02	                               cmp al, 2	      5300	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31	CALL_25
0x4003d7b	            0x7405	                            je 0x4003d82	      5300	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31	CALL_25
0x4003d7d	      0x49895c2440	             mov qword [r12 + 0x40], rbx	      5301	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_31
0x4003d82	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      5303	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_32
0x4003d86	    0x483d00000000	                              cmp rax, 0	      5303	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_32
0x4003d8c	     0xf8452050000	                            je 0x40042e4	      5303	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_32
0x4003d92	    0xf68390000000	               test byte [rbx + 0x90], 8	      5303	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_32
0x4003d99	     0xf8545050000	                           jne 0x40042e4	      5303	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_32
0x4003d9f	          0x8b5020	            mov edx, dword [rax + 0x20] 	      5307	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_33
0x4003da2	    0x81e202040000	                          and edx, 0x402	      5307	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_33
0x4003da8	    0x81fa00040000	                          cmp edx, 0x400	      5307	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_33
0x4003dae	            0x7515	                           jne 0x4003dc5	      5307	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_33
0x4003db0	     0xfb615000000	           movzx edx, byte [0x04003db7] 	      5308	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_33	CALL_26
0x4003db7	          0x83e203	                              and edx, 3	      5308	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_33	CALL_26
0x4003dba	    0x41bc00000000	                             mov r12d, 0	      5311	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	ELSE_11
0x4003dc0	          0x80fa02	                               cmp dl, 2	      5308	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_33	CALL_26
0x4003dc3	            0x750d	                           jne 0x4003dd2	      5308	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_33	CALL_26
0x4003dc5	        0x4c8b6038	            mov r12, qword [rax + 0x38] 	      5309	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_33
0x4003dc9	    0x8b0d00000000	            mov ecx, dword [0x04003dcf] 	      5309	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_33
0x4003dcf	          0x49d3ec	                             shr r12, cl	      5309	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_33
0x4003dd2	      0x4c01642418	            add qword [rsp + 0x18], r12 	      5312	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003dd7	        0x488b7b68	            mov rdi, qword [rbx + 0x68] 	      5314	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_34
0x4003ddb	          0x4885ff	                           test rdi, rdi	      5314	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_34
0x4003dde	            0x740f	                            je 0x4003def	      5314	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_34
0x4003de0	      0x488d542418	                   lea rdx, [rsp + 0x18]	      5315	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_27
0x4003de5	      0xbe00000000	                              mov esi, 0	      5315	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_27
0x4003dea	      0xe800000000	                          call 0x4003def	      5315	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_27
0x4003def	        0x488b4340	            mov rax, qword [rbx + 0x40] 	      5321	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35
0x4003df3	          0x4885c0	                           test rax, rax	      5321	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35
0x4003df6	     0xf84e8040000	                            je 0x40042e4	      5321	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35
0x4003dfc	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	      5322	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35
0x4003e00	        0xf6422003	               test byte [rdx + 0x20], 3	      5322	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35
0x4003e04	     0xf84da040000	                            je 0x40042e4	      5322	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35
0x4003e0a	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      5324	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35
0x4003e0f	        0x48895038	             mov qword [rax + 0x38], rdx	      5324	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35
0x4003e13	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      5326	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_36
0x4003e18	            0x741a	                            je 0x4003e34	      5326	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_36
0x4003e1a	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      5328	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_36	CALL_28
0x4003e1e	        0x488b4828	            mov rcx, qword [rax + 0x28] 	      5328	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_36	CALL_28
0x4003e22	        0x488b5358	            mov rdx, qword [rbx + 0x58] 	      5328	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_36	CALL_28
0x4003e26	        0x488b7340	            mov rsi, qword [rbx + 0x40] 	      5328	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_36	CALL_28
0x4003e2a	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      5328	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_36	CALL_28
0x4003e2f	      0xe8fbc5ffff	                call sym.os_region_check	      5328	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_36	CALL_28
0x4003e34	        0x488b4348	            mov rax, qword [rbx + 0x48] 	      5331	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_37
0x4003e38	          0x4885c0	                           test rax, rax	      5331	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_37
0x4003e3b	     0xf84a3040000	                            je 0x40042e4	      5331	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_37
0x4003e41	        0x483b4340	            cmp rax, qword [rbx + 0x40] 	      5331	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_37
0x4003e45	     0xf8499040000	                            je 0x40042e4	      5331	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_37
0x4003e4b	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	      5332	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_37
0x4003e4f	        0xf6422002	               test byte [rdx + 0x20], 2	      5332	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_37
0x4003e53	            0x750d	                           jne 0x4003e62	      5332	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_37
0x4003e55	    0xf68390000000	           test byte [rbx + 0x90], 0x40 	      5333	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_37
0x4003e5c	     0xf8482040000	                            je 0x40042e4	      5333	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_37
0x4003e62	        0x4c036230	             add r12, qword [rdx + 0x30]	      5335	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_37
0x4003e66	        0x4c896038	             mov qword [rax + 0x38], r12	      5335	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_37
0x4003e6a	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      5337	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_37	IF_38
0x4003e6f	     0xf846f040000	                            je 0x40042e4	      5337	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_37	IF_38
0x4003e75	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      5338	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_37	IF_38	CALL_29
0x4003e79	        0x488b4830	            mov rcx, qword [rax + 0x30] 	      5338	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_37	IF_38	CALL_29
0x4003e7d	        0x488b7348	            mov rsi, qword [rbx + 0x48] 	      5338	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_37	IF_38	CALL_29
0x4003e81	      0xba00000000	                              mov edx, 0	      5338	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_37	IF_38	CALL_29
0x4003e86	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      5338	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_37	IF_38	CALL_29
0x4003e8b	      0xe89fc5ffff	                call sym.os_region_check	      5338	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_37	IF_38	CALL_29
0x4003e90	      0xe94f040000	                           jmp 0x40042e4	      5338	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_35	IF_37	IF_38	CALL_29
0x4003e95	      0x448b4c240c	              mov r9d, dword [rsp + 0xc]	      5346	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_30
0x4003e9a	          0x4d89f8	                             mov r8, r15	      5346	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_30
0x4003e9d	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      5346	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_30
0x4003ea2	        0x488b1424	                    mov rdx, qword [rsp]	      5346	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_30
0x4003ea6	          0x4889ee	                            mov rsi, rbp	      5346	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_30
0x4003ea9	      0xbf00000000	                              mov edi, 0	      5346	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_30
0x4003eae	      0xe854f8ffff	           call sym.lang_size_sections_1	      5346	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_30
0x4003eb3	      0x4889442418	             mov qword [rsp + 0x18], rax	      5346	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_30
0x4003eb8	      0xe927040000	                           jmp 0x40042e4	      5349	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003ebd	        0x488b5538	            mov rdx, qword [rbp + 0x38] 	      5356	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003ec1	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5355	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003ec6	        0x482b4228	             sub rax, qword [rdx + 0x28]	      5355	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003eca	        0x48894330	             mov qword [rbx + 0x30], rax	      5355	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003ece	        0x488b4538	            mov rax, qword [rbp + 0x38] 	      5358	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003ed2	        0x48894328	             mov qword [rbx + 0x28], rax	      5357	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003ed6	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      5362	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_31
0x4003eda	      0x488d542418	                   lea rdx, [rsp + 0x18]	      5362	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_31
0x4003edf	      0xbe00000000	                              mov esi, 0	      5362	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_31
0x4003ee4	      0xe800000000	                          call 0x4003ee9	      5362	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_31
0x4003ee9	          0x8b4310	            mov eax, dword [rbx + 0x10] 	      5364	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	SWITCH_2
0x4003eec	      0x2d1a010000	                          sub eax, 0x11a	      5364	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	SWITCH_2
0x4003ef1	          0x83f804	                              cmp eax, 4	      5364	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	SWITCH_2
0x4003ef4	            0x7710	                            ja 0x4003f06	      5364	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	SWITCH_2
0x4003ef6	            0x89c0	                            mov eax, eax	      5364	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	SWITCH_2
0x4003ef8	    0xff24c5000000	                       jmp qword [rax*8]	      5364	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	SWITCH_2
0x4003eff	      0xb804000000	                              mov eax, 4	      5373	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	SWITCH_2
0x4003f04	            0xeb27	                           jmp 0x4003f2d	      5373	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	SWITCH_2
0x4003f06	      0xba00000000	                              mov edx, 0	      5367	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	SWITCH_2	CALL_32
0x4003f0b	      0xbef7140000	                         mov esi, 0x14f7	      5367	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	SWITCH_2	CALL_32
0x4003f10	      0xbf00000000	                              mov edi, 0	      5367	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	SWITCH_2	CALL_32
0x4003f15	      0xe800000000	                          call 0x4003f1a	      5367	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	SWITCH_2	CALL_32
0x4003f1a	      0xb802000000	                              mov eax, 2	      5376	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	SWITCH_2
0x4003f1f	            0xeb0c	                           jmp 0x4003f2d	      5377	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	SWITCH_2
0x4003f21	      0xb801000000	                              mov eax, 1	      5379	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	SWITCH_2
0x4003f26	            0xeb05	                           jmp 0x4003f2d	      5380	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	SWITCH_2
0x4003f28	      0xb808000000	                              mov eax, 8	      5370	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	SWITCH_2
0x4003f2d	    0x8b0d00000000	            mov ecx, dword [0x04003f33] 	      5382	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_39
0x4003f33	      0xba01000000	                              mov edx, 1	      5382	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_39
0x4003f38	            0xd3e2	                             shl edx, cl	      5382	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_39
0x4003f3a	            0x39d0	                            cmp eax, edx	      5384	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003f3c	           0xf42c2	                          cmovb eax, edx	      5384	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003f3f	            0xd3e8	                             shr eax, cl	      5384	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003f41	            0x89c0	                            mov eax, eax	      5384	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003f43	      0x4803442418	             add rax, qword [rsp + 0x18]	      5384	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003f48	      0x4889442418	             mov qword [rsp + 0x18], rax	      5384	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003f4d	        0x488b5538	            mov rdx, qword [rbp + 0x38] 	      5385	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_40
0x4003f51	        0xf6422108	               test byte [rdx + 0x21], 8	      5385	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_40
0x4003f55	     0xf8589030000	                           jne 0x40042e4	      5385	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_40
0x4003f5b	        0x482b4228	             sub rax, qword [rdx + 0x28]	      5388	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_40
0x4003f5f	          0x48d3e0	                             shl rax, cl	      5388	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_40
0x4003f62	        0x48894238	             mov qword [rdx + 0x38], rax	      5388	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_40
0x4003f66	      0xe979030000	                           jmp 0x40042e4	      5388	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_40
0x4003f6b	        0x488b5538	            mov rdx, qword [rbp + 0x38] 	      5398	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003f6f	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5397	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003f74	        0x482b4228	             sub rax, qword [rdx + 0x28]	      5397	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003f78	        0x48894348	             mov qword [rbx + 0x48], rax	      5397	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003f7c	        0x488b4538	            mov rax, qword [rbp + 0x38] 	      5400	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003f80	        0x48894340	             mov qword [rbx + 0x40], rax	      5399	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003f84	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      5401	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_33
0x4003f88	      0xe800000000	                          call 0x4003f8d	      5401	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_33
0x4003f8d	    0x8b0d00000000	            mov ecx, dword [0x04003f93] 	      5402	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003f93	            0xd3f8	                             sar eax, cl	      5402	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003f95	            0x4898	                                    cdqe	      5402	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003f97	      0x4803442418	             add rax, qword [rsp + 0x18]	      5402	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003f9c	      0x4889442418	             mov qword [rsp + 0x18], rax	      5402	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003fa1	        0x488b5538	            mov rdx, qword [rbp + 0x38] 	      5403	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_41
0x4003fa5	        0xf6422108	               test byte [rdx + 0x21], 8	      5403	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_41
0x4003fa9	     0xf8535030000	                           jne 0x40042e4	      5403	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_41
0x4003faf	        0x482b4228	             sub rax, qword [rdx + 0x28]	      5406	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_41
0x4003fb3	          0x48d3e0	                             shl rax, cl	      5406	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_41
0x4003fb6	        0x48894238	             mov qword [rdx + 0x38], rax	      5406	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_41
0x4003fba	      0xe925030000	                           jmp 0x40042e4	      5406	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_41
0x4003fbf	        0x488d7b30	                   lea rdi, [rbx + 0x30]	      5411	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_34
0x4003fc3	      0x448b4c240c	              mov r9d, dword [rsp + 0xc]	      5411	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_34
0x4003fc8	          0x4d89f8	                             mov r8, r15	      5411	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_34
0x4003fcb	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      5411	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_34
0x4003fd0	        0x488b1424	                    mov rdx, qword [rsp]	      5411	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_34
0x4003fd4	          0x4889ee	                            mov rsi, rbp	      5411	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_34
0x4003fd7	      0xe82bf7ffff	           call sym.lang_size_sections_1	      5411	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_34
0x4003fdc	      0x4889442418	             mov qword [rsp + 0x18], rax	      5411	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_34
0x4003fe1	      0xe9fe020000	                           jmp 0x40042e4	      5414	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003fe6	        0x488b4538	            mov rax, qword [rbp + 0x38] 	      5418	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003fea	    0x488905000000	            mov qword [0x04003ff1], rax 	      5417	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003ff1	      0xe9ee020000	                           jmp 0x40042e4	      5419	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003ff6	          0x4d85ff	                           test r15, r15	      5430	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_42
0x4003ff9	            0x7452	                            je 0x400404d	      5430	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_42
0x4003ffb	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	      5429	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4003fff	    0x488bbef00000	            mov rdi, qword [rsi + 0xf0] 	      5434	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_42	IF_43
0x4004006	        0x488b4708	                mov rax, qword [rdi + 8]	      5434	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_42	IF_43
0x400400a	      0x488d4c2420	                   lea rcx, [rsp + 0x20]	      5434	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_42	IF_43
0x400400f	      0xba00000000	                              mov edx, 0	      5434	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_42	IF_43
0x4004014	    0xff90b0020000	                call qword [rax + 0x2b0]	      5434	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_42	IF_43
0x400401a	            0x85c0	                           test eax, eax	      5434	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_42	IF_43
0x400401c	            0x7521	                           jne 0x400403f	      5434	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_42	IF_43
0x400401e	      0xba05000000	                              mov edx, 5	      5435	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_42	CALL_36
0x4004023	      0xbe00000000	                              mov esi, 0	      5435	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_42	CALL_36
0x4004028	      0xbf00000000	                              mov edi, 0	      5435	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_42	CALL_36
0x400402d	      0xe800000000	                          call 0x4004032	      5435	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_42	CALL_36
0x4004032	          0x4889c7	                            mov rdi, rax	      5435	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_42	CALL_36
0x4004035	      0xb800000000	                              mov eax, 0	      5435	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_42	CALL_36
0x400403a	      0xe800000000	                          call 0x400403f	      5435	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_42	CALL_36
0x400403f	      0x837c242000	               cmp dword [rsp + 0x20], 0	      5436	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_42	IF_44
0x4004044	            0x7407	                            je 0x400404d	      5436	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_42	IF_44
0x4004046	    0x41c707010000	                      mov dword [r15], 1	      5437	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_42	IF_44
0x400404d	      0x4c8b442418	              mov r8, qword [rsp + 0x18]	      5439	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_37
0x4004052	        0x498b0424	                    mov rax, qword [r12]	      4691	ldlang.c	FUNCTION_109
0x4004056	        0x4c8b6810	            mov r13, qword [rax + 0x10] 	      4691	ldlang.c	FUNCTION_109
0x400405a	        0x4c8b7538	            mov r14, qword [rbp + 0x38] 	      4692	ldlang.c	FUNCTION_109
0x400405e	      0x410fb74524	           movzx eax, word [r13 + 0x24] 	      4694	ldlang.c	FUNCTION_109	IF_1
0x4004063	        0x66258003	                           and ax, 0x380	      4694	ldlang.c	FUNCTION_109	IF_1
0x4004067	        0x663d0002	                           cmp ax, 0x200	      4694	ldlang.c	FUNCTION_109	IF_1
0x400406b	            0x7511	                           jne 0x400407e	      4694	ldlang.c	FUNCTION_109	IF_1
0x400406d	        0x498b4528	            mov rax, qword [r13 + 0x28] 	      4695	ldlang.c	FUNCTION_109	IF_1
0x4004071	        0x492b4628	             sub rax, qword [r14 + 0x28]	      4695	ldlang.c	FUNCTION_109	IF_1
0x4004075	        0x49894560	             mov qword [r13 + 0x60], rax	      4695	ldlang.c	FUNCTION_109	IF_1
0x4004079	      0xe9ab000000	                           jmp 0x4004129	      4695	ldlang.c	FUNCTION_109	IF_1
0x400407e	      0x41f6452180	           test byte [r13 + 0x21], 0x80 	      4696	ldlang.c	FUNCTION_109	ELSE_1	IF_2
0x4004083	            0x7509	                           jne 0x400408e	      4696	ldlang.c	FUNCTION_109	ELSE_1	IF_2
0x4004085	    0xf68590000000	               test byte [rbp + 0x90], 8	      4697	ldlang.c	FUNCTION_109	ELSE_1	IF_2
0x400408c	            0x7410	                            je 0x400409e	      4697	ldlang.c	FUNCTION_109	ELSE_1	IF_2
0x400408e	          0x4c89c0	                             mov rax, r8	      4698	ldlang.c	FUNCTION_109	ELSE_1	IF_2
0x4004091	        0x492b4628	             sub rax, qword [r14 + 0x28]	      4698	ldlang.c	FUNCTION_109	ELSE_1	IF_2
0x4004095	        0x49894560	             mov qword [r13 + 0x60], rax	      4698	ldlang.c	FUNCTION_109	ELSE_1	IF_2
0x4004099	      0xe98b000000	                           jmp 0x4004129	      4698	ldlang.c	FUNCTION_109	ELSE_1	IF_2
0x400409e	          0x8b457c	            mov eax, dword [rbp + 0x7c] 	      4708	ldlang.c	FUNCTION_109	ELSE_2	IF_3
0x40040a1	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      4708	ldlang.c	FUNCTION_109	ELSE_2	IF_3
0x40040a4	            0x7404	                            je 0x40040aa	      4708	ldlang.c	FUNCTION_109	ELSE_2	IF_3
0x40040a6	        0x41894570	             mov dword [r13 + 0x70], eax	      4709	ldlang.c	FUNCTION_109	ELSE_2	IF_3
0x40040aa	        0x418b4570	            mov eax, dword [r13 + 0x70] 	      4711	ldlang.c	FUNCTION_109	ELSE_2	IF_4
0x40040ae	        0x41394670	            cmp dword [r14 + 0x70], eax 	      4711	ldlang.c	FUNCTION_109	ELSE_2	IF_4
0x40040b2	            0x7304	                           jae 0x40040b8	      4711	ldlang.c	FUNCTION_109	ELSE_2	IF_4
0x40040b4	        0x41894670	             mov dword [r14 + 0x70], eax	      4712	ldlang.c	FUNCTION_109	ELSE_2	IF_4
0x40040b8	        0x418b4d70	            mov ecx, dword [r13 + 0x70] 	      4714	ldlang.c	FUNCTION_109	ELSE_2
0x40040bc	      0xb801000000	                              mov eax, 1	      4714	ldlang.c	FUNCTION_109	ELSE_2
0x40040c1	          0x48d3e0	                             shl rax, cl	      4714	ldlang.c	FUNCTION_109	ELSE_2
0x40040c4	      0x498d5400ff	                 lea rdx, [r8 + rax - 1]	      4714	ldlang.c	FUNCTION_109	ELSE_2
0x40040c9	          0x48f7d8	                                 neg rax	      4714	ldlang.c	FUNCTION_109	ELSE_2
0x40040cc	          0x4821d0	                            and rax, rdx	      4714	ldlang.c	FUNCTION_109	ELSE_2
0x40040cf	      0x4889442410	             mov qword [rsp + 0x10], rax	      4714	ldlang.c	FUNCTION_109	ELSE_2
0x40040d4	          0x4889c2	                            mov rdx, rax	      4716	ldlang.c	FUNCTION_109	ELSE_2	IF_5
0x40040d7	          0x4c29c2	                             sub rdx, r8	      4716	ldlang.c	FUNCTION_109	ELSE_2	IF_5
0x40040da	            0x741d	                            je 0x40040f9	      4716	ldlang.c	FUNCTION_109	ELSE_2	IF_5
0x40040dc	    0x8b0d00000000	            mov ecx, dword [0x040040e2] 	      4718	ldlang.c	FUNCTION_109	ELSE_2	IF_5	CALL_1
0x40040e2	          0x48d3e2	                             shl rdx, cl	      4718	ldlang.c	FUNCTION_109	ELSE_2	IF_5	CALL_1
0x40040e5	          0x4c89f1	                            mov rcx, r14	      4718	ldlang.c	FUNCTION_109	ELSE_2	IF_5	CALL_1
0x40040e8	        0x488b3424	                    mov rsi, qword [rsp]	      4718	ldlang.c	FUNCTION_109	ELSE_2	IF_5	CALL_1
0x40040ec	          0x4c89e7	                            mov rdi, r12	      4718	ldlang.c	FUNCTION_109	ELSE_2	IF_5	CALL_1
0x40040ef	      0xe822f0ffff	                     call sym.insert_pad	      4718	ldlang.c	FUNCTION_109	ELSE_2	IF_5	CALL_1
0x40040f4	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	      4719	ldlang.c	FUNCTION_109	ELSE_2	IF_5
0x40040f9	          0x4c89c0	                             mov rax, r8	      4723	ldlang.c	FUNCTION_109	ELSE_2
0x40040fc	        0x492b4628	             sub rax, qword [r14 + 0x28]	      4723	ldlang.c	FUNCTION_109	ELSE_2
0x4004100	        0x49894560	             mov qword [r13 + 0x60], rax	      4723	ldlang.c	FUNCTION_109	ELSE_2
0x4004104	    0x8b0d00000000	            mov ecx, dword [0x0400410a] 	      4726	ldlang.c	FUNCTION_109	ELSE_2
0x400410a	        0x498b4538	            mov rax, qword [r13 + 0x38] 	      4726	ldlang.c	FUNCTION_109	ELSE_2
0x400410e	          0x48d3e8	                             shr rax, cl	      4726	ldlang.c	FUNCTION_109	ELSE_2
0x4004111	          0x4901c0	                             add r8, rax	      4726	ldlang.c	FUNCTION_109	ELSE_2
0x4004114	      0x41f6462108	               test byte [r14 + 0x21], 8	      4727	ldlang.c	FUNCTION_109	ELSE_2	IF_6
0x4004119	            0x750e	                           jne 0x4004129	      4727	ldlang.c	FUNCTION_109	ELSE_2	IF_6
0x400411b	          0x4c89c0	                             mov rax, r8	      4728	ldlang.c	FUNCTION_109	ELSE_2	IF_6
0x400411e	        0x492b4628	             sub rax, qword [r14 + 0x28]	      4728	ldlang.c	FUNCTION_109	ELSE_2	IF_6
0x4004122	          0x48d3e0	                             shl rax, cl	      4728	ldlang.c	FUNCTION_109	ELSE_2	IF_6
0x4004125	        0x49894638	             mov qword [r14 + 0x38], rax	      4728	ldlang.c	FUNCTION_109	ELSE_2	IF_6
0x4004129	      0x4c89442418	              mov qword [rsp + 0x18], r8	      5439	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_37
0x400412e	      0xe9b1010000	                           jmp 0x40042e4	      5442	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4004133	        0x488b4538	            mov rax, qword [rbp + 0x38] 	      5449	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4004137	        0x48894320	             mov qword [rbx + 0x20], rax	      5448	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x400413b	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      5451	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x400413f	        0x48890424	                    mov qword [rsp], rax	      5451	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4004143	      0xe99c010000	                           jmp 0x40042e4	      5452	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4004148	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5456	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x400414d	      0x4889442420	             mov qword [rsp + 0x20], rax	      5456	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4004152	        0x4c8b6310	            mov r12, qword [rbx + 0x10] 	      5457	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4004156	    0xc70500000000	               mov dword [0x04004160], 0	      5459	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4004160	        0x488b7538	            mov rsi, qword [rbp + 0x38] 	      5461	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_38
0x4004164	      0x488d542420	                   lea rdx, [rsp + 0x20]	      5461	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_38
0x4004169	          0x4c89e7	                            mov rdi, r12	      5461	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_38
0x400416c	      0xe800000000	                          call 0x4004171	      5461	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_38
0x4004171	    0x8b0500000000	            mov eax, dword [0x04004177] 	      4981	ldlang.c	FUNCTION_114	IF_1
0x4004177	          0x83f801	                              cmp eax, 1	      4981	ldlang.c	FUNCTION_114	IF_1
0x400417a	            0x752b	                           jne 0x40041a7	      4981	ldlang.c	FUNCTION_114	IF_1
0x400417c	    0x488b05000000	            mov rax, qword [0x04004183] 	      4983	ldlang.c	FUNCTION_114	IF_1	IF_2
0x4004183	          0x4885c0	                           test rax, rax	      4983	ldlang.c	FUNCTION_114	IF_1	IF_2
0x4004186	            0x7509	                           jne 0x4004191	      4983	ldlang.c	FUNCTION_114	IF_1	IF_2
0x4004188	    0x48891d000000	            mov qword [0x0400418f], rbx 	      4984	ldlang.c	FUNCTION_114	IF_1	IF_2
0x400418f	            0xeb44	                           jmp 0x40041d5	      4984	ldlang.c	FUNCTION_114	IF_1	IF_2
0x4004191	          0x4839d8	                            cmp rax, rbx	      4987	ldlang.c	FUNCTION_114	IF_1	ELSE_1	CALL_1
0x4004194	            0x743f	                            je 0x40041d5	      4987	ldlang.c	FUNCTION_114	IF_1	ELSE_1	CALL_1
0x4004196	      0xbe7b130000	                         mov esi, 0x137b	      4987	ldlang.c	FUNCTION_114	IF_1	ELSE_1	CALL_1
0x400419b	      0xbf00000000	                              mov edi, 0	      4987	ldlang.c	FUNCTION_114	IF_1	ELSE_1	CALL_1
0x40041a0	      0xe800000000	                          call 0x40041a5	      4987	ldlang.c	FUNCTION_114	IF_1	ELSE_1	CALL_1
0x40041a5	            0xeb2e	                           jmp 0x40041d5	      4987	ldlang.c	FUNCTION_114	IF_1	ELSE_1	CALL_1
0x40041a7	          0x83f802	                              cmp eax, 2	      4990	ldlang.c	FUNCTION_114	ELSE_2	IF_3
0x40041aa	            0x7529	                           jne 0x40041d5	      4990	ldlang.c	FUNCTION_114	ELSE_2	IF_3
0x40041ac	    0x488b05000000	            mov rax, qword [0x040041b3] 	      4992	ldlang.c	FUNCTION_114	ELSE_2	IF_3	IF_4
0x40041b3	          0x4885c0	                           test rax, rax	      4992	ldlang.c	FUNCTION_114	ELSE_2	IF_3	IF_4
0x40041b6	            0x7509	                           jne 0x40041c1	      4992	ldlang.c	FUNCTION_114	ELSE_2	IF_3	IF_4
0x40041b8	    0x48891d000000	            mov qword [0x040041bf], rbx 	      4993	ldlang.c	FUNCTION_114	ELSE_2	IF_3	IF_4
0x40041bf	            0xeb14	                           jmp 0x40041d5	      4993	ldlang.c	FUNCTION_114	ELSE_2	IF_3	IF_4
0x40041c1	          0x4839d8	                            cmp rax, rbx	      4996	ldlang.c	FUNCTION_114	ELSE_2	IF_3	ELSE_3	CALL_2
0x40041c4	            0x740f	                            je 0x40041d5	      4996	ldlang.c	FUNCTION_114	ELSE_2	IF_3	ELSE_3	CALL_2
0x40041c6	      0xbe84130000	                         mov esi, 0x1384	      4996	ldlang.c	FUNCTION_114	ELSE_2	IF_3	ELSE_3	CALL_2
0x40041cb	      0xbf00000000	                              mov edi, 0	      4996	ldlang.c	FUNCTION_114	ELSE_2	IF_3	ELSE_3	CALL_2
0x40041d0	      0xe800000000	                          call 0x40041d5	      4996	ldlang.c	FUNCTION_114	ELSE_2	IF_3	ELSE_3	CALL_2
0x40041d5	    0xc70500000000	               mov dword [0x040041df], 0	      5467	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x40041df	      0x418b442410	            mov eax, dword [r12 + 0x10] 	      5470	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_45
0x40041e4	          0x83e0fd	                     and eax, 0xfffffffd	      5470	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_45
0x40041e7	          0x83f804	                              cmp eax, 4	      5470	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_45
0x40041ea	            0x7517	                           jne 0x4004203	      5470	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_45
0x40041ec	      0x498b442418	            mov rax, qword [r12 + 0x18] 	      5472	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_45
0x40041f1	          0x80382e	                    cmp byte [rax], 0x2e	      5472	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_45
0x40041f4	            0x7506	                           jne 0x40041fc	      5472	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_45
0x40041f6	        0x80780100	                   cmp byte [rax + 1], 0	      5473	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_45
0x40041fa	            0x7407	                            je 0x4004203	      5473	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_45
0x40041fc	    0x808d90000000	              or byte [rbp + 0x90], 0x10	      5474	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_45
0x4004203	    0xf68590000000	               test byte [rbp + 0x90], 8	      5476	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46
0x400420a	     0xf85d4000000	                           jne 0x40042e4	      5476	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46
0x4004210	    0x483b2d000000	            cmp rbp, qword [0x04004217] 	      5478	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	IF_47
0x4004217	            0x751a	                           jne 0x4004233	      5478	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	IF_47
0x4004219	      0xbe00000000	                              mov esi, 0	      5482	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	IF_47	CALL_40
0x400421e	      0xbf00000000	                              mov edi, 0	      5482	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	IF_47	CALL_40
0x4004223	      0xe800000000	                          call 0x4004228	      5482	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	IF_47	CALL_40
0x4004228	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      5483	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	IF_47
0x400422d	        0x48895038	             mov qword [rax + 0x38], rdx	      5483	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	IF_47
0x4004231	            0xeb57	                           jmp 0x400428a	      5483	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	IF_47
0x4004233	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      5485	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48
0x4004238	      0x4c8b442418	              mov r8, qword [rsp + 0x18]	      5485	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48
0x400423d	          0x4c39c2	                             cmp rdx, r8	      5485	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48
0x4004240	            0x7448	                            je 0x400428a	      5485	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48
0x4004242	          0x4c29c2	                             sub rdx, r8	      5490	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48	CALL_41
0x4004245	    0x8b0d00000000	            mov ecx, dword [0x0400424b] 	      5490	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48	CALL_41
0x400424b	          0x48d3e2	                             shl rdx, cl	      5490	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48	CALL_41
0x400424e	        0x488b4d38	            mov rcx, qword [rbp + 0x38] 	      5490	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48	CALL_41
0x4004252	        0x488b3424	                    mov rsi, qword [rsp]	      5490	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48	CALL_41
0x4004256	          0x4889df	                            mov rdi, rbx	      5490	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48	CALL_41
0x4004259	      0xe8b8eeffff	                     call sym.insert_pad	      5490	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48	CALL_41
0x400425e	          0x488b1b	                    mov rbx, qword [rbx]	      5494	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48
0x4004261	    0x8b858c000000	            mov eax, dword [rbp + 0x8c] 	      5500	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48	IF_49
0x4004267	          0x83f803	                              cmp eax, 3	      5500	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48	IF_49
0x400426a	            0x741e	                            je 0x400428a	      5500	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48	IF_49
0x400426c	          0x83f802	                              cmp eax, 2	      5501	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48	IF_49
0x400426f	            0x7511	                           jne 0x4004282	      5501	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48	IF_49
0x4004271	    0x488b05000000	            mov rax, qword [0x04004278] 	      5502	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48	IF_49
0x4004278	        0x488b4008	                mov rax, qword [rax + 8]	      5502	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48	IF_49
0x400427c	        0x83780805	                  cmp dword [rax + 8], 5	      5502	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48	IF_49
0x4004280	            0x7508	                           jne 0x400428a	      5502	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48	IF_49
0x4004282	        0x488b4538	            mov rax, qword [rbp + 0x38] 	      5504	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48	IF_49
0x4004286	        0x83482001	                or dword [rax + 0x20], 1	      5504	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46	ELSE_12	IF_48	IF_49
0x400428a	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      5506	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46
0x400428f	      0x4889442418	             mov qword [rsp + 0x18], rax	      5506	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	IF_46
0x4004294	            0xeb4e	                           jmp 0x40042e4	      5509	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x4004296	    0x48c743180000	               mov qword [rbx + 0x18], 0	      5517	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x400429e	        0x488b5538	            mov rdx, qword [rbp + 0x38] 	      5525	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x40042a2	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5525	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x40042a7	        0x482b4228	             sub rax, qword [rdx + 0x28]	      5525	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x40042ab	        0x48894310	             mov qword [rbx + 0x10], rax	      5525	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x40042af	            0xeb33	                           jmp 0x40042e4	      5526	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x40042b1	        0x488d7b10	                   lea rdi, [rbx + 0x10]	      5529	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_42
0x40042b5	      0x448b4c240c	              mov r9d, dword [rsp + 0xc]	      5529	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_42
0x40042ba	          0x4d89f8	                             mov r8, r15	      5529	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_42
0x40042bd	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      5529	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_42
0x40042c2	        0x488b1424	                    mov rdx, qword [rsp]	      5529	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_42
0x40042c6	          0x4889ee	                            mov rsi, rbp	      5529	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_42
0x40042c9	      0xe839f4ffff	           call sym.lang_size_sections_1	      5529	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_42
0x40042ce	      0x4889442418	             mov qword [rsp + 0x18], rax	      5529	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_42
0x40042d3	            0xeb0f	                           jmp 0x40042e4	      5532	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1
0x40042d5	      0xbea6150000	                         mov esi, 0x15a6	      5542	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_43
0x40042da	      0xbf00000000	                              mov edi, 0	      5542	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_43
0x40042df	      0xe800000000	                          call 0x40042e4	      5542	ldlang.c	FUNCTION_115	FOR_1	SWITCH_1	CALL_43
0x40042e4	          0x4989dc	                            mov r12, rbx	      5545	ldlang.c	FUNCTION_115	FOR_1
0x40042e7	          0x488b1b	                    mov rbx, qword [rbx]	      5015	ldlang.c	FUNCTION_115	FOR_1
0x40042ea	          0x4885db	                           test rbx, rbx	      5015	ldlang.c	FUNCTION_115	FOR_1
0x40042ed	     0xf8555f4ffff	                           jne 0x4003748	      5015	ldlang.c	FUNCTION_115	FOR_1
0x40042f3	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5548	ldlang.c	FUNCTION_115
0x40042f8	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      5548	ldlang.c	FUNCTION_115
0x40042fd	    0x644833342528	                xor rsi, qword fs:[0x28]	      5548	ldlang.c	FUNCTION_115
0x4004306	            0x7405	                            je 0x400430d	      5548	ldlang.c	FUNCTION_115
0x4004308	      0xe800000000	                          call 0x400430d	      5548	ldlang.c	FUNCTION_115
0x400430d	        0x4883c438	                           add rsp, 0x38	      5548	ldlang.c	FUNCTION_115
0x4004311	              0x5b	                                 pop rbx	      5548	ldlang.c	FUNCTION_115
0x4004312	              0x5d	                                 pop rbp	      5548	ldlang.c	FUNCTION_115
0x4004313	            0x415c	                                 pop r12	      5548	ldlang.c	FUNCTION_115
0x4004315	            0x415d	                                 pop r13	      5548	ldlang.c	FUNCTION_115
0x4004317	            0x415e	                                 pop r14	      5548	ldlang.c	FUNCTION_115
0x4004319	            0x415f	                                 pop r15	      5548	ldlang.c	FUNCTION_115
0x400431b	              0xc3	                                     ret	      5548	ldlang.c	FUNCTION_115
lang_for_each_statement	IF,0:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,1:ELSE,0	5
0x4003433	        0x4883ec08	                              sub rsp, 8	      1000	ldlang.c	FUNCTION_29
0x4003437	    0x488b35000000	            mov rsi, qword [0x0400343e] 	      1001	ldlang.c	FUNCTION_29	CALL_1
0x400343e	      0xe800000000	                          call 0x4003443	      1001	ldlang.c	FUNCTION_29	CALL_1
0x4003443	        0x4883c408	                              add rsp, 8	      1002	ldlang.c	FUNCTION_29
0x4003447	              0xc3	                                     ret	      1002	ldlang.c	FUNCTION_29
lang_output_section_statement_lookup	IF,7:WHILE,0:FOR,0:DO,1:SWITCH,0:functions,0:CALL,6:ELSE,1	88
0x4004511	            0x4156	                                push r14	      1429	ldlang.c	FUNCTION_45
0x4004513	            0x4155	                                push r13	      1429	ldlang.c	FUNCTION_45
0x4004515	            0x4154	                                push r12	      1429	ldlang.c	FUNCTION_45
0x4004517	              0x55	                                push rbp	      1429	ldlang.c	FUNCTION_45
0x4004518	              0x53	                                push rbx	      1429	ldlang.c	FUNCTION_45
0x4004519	          0x4989fe	                            mov r14, rdi	      1429	ldlang.c	FUNCTION_45
0x400451c	            0x89f5	                            mov ebp, esi	      1429	ldlang.c	FUNCTION_45
0x400451e	          0x4189d5	                           mov r13d, edx	      1429	ldlang.c	FUNCTION_45
0x4004521	      0xb900000000	                              mov ecx, 0	      1432	ldlang.c	FUNCTION_45
0x4004526	          0x4889fe	                            mov rsi, rdi	      1432	ldlang.c	FUNCTION_45
0x4004529	      0xbf00000000	                              mov edi, 0	      1432	ldlang.c	FUNCTION_45
0x400452e	      0xe800000000	                          call 0x4004533	      1432	ldlang.c	FUNCTION_45
0x4004533	          0x4885c0	                           test rax, rax	      1435	ldlang.c	FUNCTION_45	IF_1
0x4004536	            0x753c	                           jne 0x4004574	      1435	ldlang.c	FUNCTION_45	IF_1
0x4004538	      0xb800000000	                              mov eax, 0	      1439	ldlang.c	FUNCTION_45	IF_1
0x400453d	          0x4585ed	                         test r13d, r13d	      1437	ldlang.c	FUNCTION_45	IF_1	IF_2
0x4004540	     0xf84f1000000	                            je 0x4004637	      1437	ldlang.c	FUNCTION_45	IF_1	IF_2
0x4004546	      0xba05000000	                              mov edx, 5	      1438	ldlang.c	FUNCTION_45	IF_1	CALL_3
0x400454b	      0xbe00000000	                              mov esi, 0	      1438	ldlang.c	FUNCTION_45	IF_1	CALL_3
0x4004550	      0xbf00000000	                              mov edi, 0	      1438	ldlang.c	FUNCTION_45	IF_1	CALL_3
0x4004555	      0xe800000000	                          call 0x400455a	      1438	ldlang.c	FUNCTION_45	IF_1	CALL_3
0x400455a	          0x4c89f6	                            mov rsi, r14	      1438	ldlang.c	FUNCTION_45	IF_1	CALL_3
0x400455d	          0x4889c7	                            mov rdi, rax	      1438	ldlang.c	FUNCTION_45	IF_1	CALL_3
0x4004560	      0xb800000000	                              mov eax, 0	      1438	ldlang.c	FUNCTION_45	IF_1	CALL_3
0x4004565	      0xe800000000	                          call 0x400456a	      1438	ldlang.c	FUNCTION_45	IF_1	CALL_3
0x400456a	      0xb800000000	                              mov eax, 0	      1439	ldlang.c	FUNCTION_45	IF_1
0x400456f	      0xe9c3000000	                           jmp 0x4004637	      1439	ldlang.c	FUNCTION_45	IF_1
0x4004574	          0x4889c3	                            mov rbx, rax	      1439	ldlang.c	FUNCTION_45	IF_1
0x4004577	        0x4c8b6048	            mov r12, qword [rax + 0x48] 	      1442	ldlang.c	FUNCTION_45	IF_3
0x400457b	          0x4d85e4	                           test r12, r12	      1442	ldlang.c	FUNCTION_45	IF_3
0x400457e	     0xf84a2000000	                            je 0x4004626	      1442	ldlang.c	FUNCTION_45	IF_3
0x4004584	          0x4585ed	                         test r13d, r13d	      1449	ldlang.c	FUNCTION_45	IF_3	IF_4
0x4004587	            0x740d	                            je 0x4004596	      1449	ldlang.c	FUNCTION_45	IF_3	IF_4
0x4004589	    0x81fd7e010000	                          cmp ebp, 0x17e	      1449	ldlang.c	FUNCTION_45	IF_3	IF_4
0x400458f	            0x742e	                            je 0x40045bf	      1449	ldlang.c	FUNCTION_45	IF_3	IF_4
0x4004591	            0xeb03	                           jmp 0x4004596	      1449	ldlang.c	FUNCTION_45	IF_3	IF_4
0x4004593	          0x4889c3	                            mov rbx, rax	      1462	ldlang.c	FUNCTION_45	IF_3	ELSE_1	DO_1
0x4004596	    0x8b839c000000	            mov eax, dword [rbx + 0x9c] 	      1457	ldlang.c	FUNCTION_45	IF_3	ELSE_1	DO_1	IF_5
0x400459c	            0x39c5	                            cmp ebp, eax	      1457	ldlang.c	FUNCTION_45	IF_3	ELSE_1	DO_1	IF_5
0x400459e	            0x7408	                            je 0x40045a8	      1457	ldlang.c	FUNCTION_45	IF_3	ELSE_1	DO_1	IF_5
0x40045a0	            0x85c0	                           test eax, eax	      1459	ldlang.c	FUNCTION_45	IF_3	ELSE_1	DO_1	IF_5
0x40045a2	            0x780d	                            js 0x40045b1	      1459	ldlang.c	FUNCTION_45	IF_3	ELSE_1	DO_1	IF_5
0x40045a4	            0x85ed	                           test ebp, ebp	      1459	ldlang.c	FUNCTION_45	IF_3	ELSE_1	DO_1	IF_5
0x40045a6	            0x7509	                           jne 0x40045b1	      1459	ldlang.c	FUNCTION_45	IF_3	ELSE_1	DO_1	IF_5
0x40045a8	        0x488d4318	                   lea rax, [rbx + 0x18]	      1460	ldlang.c	FUNCTION_45	IF_3	ELSE_1	DO_1	IF_5
0x40045ac	      0xe986000000	                           jmp 0x4004637	      1460	ldlang.c	FUNCTION_45	IF_3	ELSE_1	DO_1	IF_5
0x40045b1	          0x488b03	                    mov rax, qword [rbx]	      1462	ldlang.c	FUNCTION_45	IF_3	ELSE_1	DO_1
0x40045b4	          0x4885c0	                           test rax, rax	      1465	ldlang.c	FUNCTION_45	IF_3
0x40045b7	            0x7406	                            je 0x40045bf	      1465	ldlang.c	FUNCTION_45	IF_3
0x40045b9	        0x4c3b6048	            cmp r12, qword [rax + 0x48] 	      1465	ldlang.c	FUNCTION_45	IF_3
0x40045bd	            0x74d4	                            je 0x4004593	      1465	ldlang.c	FUNCTION_45	IF_3
0x40045bf	      0xb800000000	                              mov eax, 0	      1468	ldlang.c	FUNCTION_45	IF_3	IF_6
0x40045c4	          0x4585ed	                         test r13d, r13d	      1467	ldlang.c	FUNCTION_45	IF_3	IF_6
0x40045c7	            0x746e	                            je 0x4004637	      1467	ldlang.c	FUNCTION_45	IF_3	IF_6
0x40045c9	          0x4c89e2	                            mov rdx, r12	      1471	ldlang.c	FUNCTION_45	IF_3
0x40045cc	      0xbe00000000	                              mov esi, 0	      1471	ldlang.c	FUNCTION_45	IF_3
0x40045d1	      0xbf00000000	                              mov edi, 0	      1471	ldlang.c	FUNCTION_45	IF_3
0x40045d6	      0xe8e7e7ffff	call sym.output_section_statement_newfunc	      1471	ldlang.c	FUNCTION_45	IF_3
0x40045db	          0x4885c0	                           test rax, rax	      1475	ldlang.c	FUNCTION_45	IF_3	IF_7
0x40045de	            0x752b	                           jne 0x400460b	      1475	ldlang.c	FUNCTION_45	IF_3	IF_7
0x40045e0	      0xba05000000	                              mov edx, 5	      1477	ldlang.c	FUNCTION_45	IF_3	IF_7	CALL_6
0x40045e5	      0xbe00000000	                              mov esi, 0	      1477	ldlang.c	FUNCTION_45	IF_3	IF_7	CALL_6
0x40045ea	      0xbf00000000	                              mov edi, 0	      1477	ldlang.c	FUNCTION_45	IF_3	IF_7	CALL_6
0x40045ef	      0xe800000000	                          call 0x40045f4	      1477	ldlang.c	FUNCTION_45	IF_3	IF_7	CALL_6
0x40045f4	          0x4c89e6	                            mov rsi, r12	      1477	ldlang.c	FUNCTION_45	IF_3	IF_7	CALL_6
0x40045f7	          0x4889c7	                            mov rdi, rax	      1477	ldlang.c	FUNCTION_45	IF_3	IF_7	CALL_6
0x40045fa	      0xb800000000	                              mov eax, 0	      1477	ldlang.c	FUNCTION_45	IF_3	IF_7	CALL_6
0x40045ff	      0xe800000000	                          call 0x4004604	      1477	ldlang.c	FUNCTION_45	IF_3	IF_7	CALL_6
0x4004604	      0xb800000000	                              mov eax, 0	      1478	ldlang.c	FUNCTION_45	IF_3	IF_7
0x4004609	            0xeb2c	                           jmp 0x4004637	      1478	ldlang.c	FUNCTION_45	IF_3	IF_7
0x400460b	          0x488b13	                    mov rdx, qword [rbx]	      1480	ldlang.c	FUNCTION_45	IF_3
0x400460e	          0x488910	                    mov qword [rax], rdx	      1480	ldlang.c	FUNCTION_45	IF_3
0x4004611	        0x488b5308	                mov rdx, qword [rbx + 8]	      1480	ldlang.c	FUNCTION_45	IF_3
0x4004615	        0x48895008	                mov qword [rax + 8], rdx	      1480	ldlang.c	FUNCTION_45	IF_3
0x4004619	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	      1480	ldlang.c	FUNCTION_45	IF_3
0x400461d	        0x48895010	             mov qword [rax + 0x10], rdx	      1480	ldlang.c	FUNCTION_45	IF_3
0x4004621	          0x488903	                    mov qword [rbx], rax	      1481	ldlang.c	FUNCTION_45	IF_3
0x4004624	            0xeb03	                           jmp 0x4004629	      1481	ldlang.c	FUNCTION_45	IF_3
0x4004626	          0x4d89f4	                            mov r12, r14	      1481	ldlang.c	FUNCTION_45	IF_3
0x4004629	        0x4c896048	             mov qword [rax + 0x48], r12	      1484	ldlang.c	FUNCTION_45
0x400462d	    0x89a89c000000	             mov dword [rax + 0x9c], ebp	      1485	ldlang.c	FUNCTION_45
0x4004633	        0x4883c018	                           add rax, 0x18	      1486	ldlang.c	FUNCTION_45
0x4004637	              0x5b	                                 pop rbx	      1487	ldlang.c	FUNCTION_45
0x4004638	              0x5d	                                 pop rbp	      1487	ldlang.c	FUNCTION_45
0x4004639	            0x415c	                                 pop r12	      1487	ldlang.c	FUNCTION_45
0x400463b	            0x415d	                                 pop r13	      1487	ldlang.c	FUNCTION_45
0x400463d	            0x415e	                                 pop r14	      1487	ldlang.c	FUNCTION_45
0x400463f	              0xc3	                                     ret	      1487	ldlang.c	FUNCTION_45
lang_append_dynamic_list_cpp_new	IF,0:WHILE,0:FOR,1:DO,0:SWITCH,0:functions,0:CALL,3:ELSE,0	15
0x400a8fa	        0x4883ec08	                              sub rsp, 8	      8710	ldlang.c	FUNCTION_206
0x400a8fe	      0xb900000000	                              mov ecx, 0	      8720	ldlang.c	FUNCTION_206	FOR_1	CALL_2
0x400a903	      0xba00000000	                              mov edx, 0	      8720	ldlang.c	FUNCTION_206	FOR_1	CALL_2
0x400a908	      0xbe00000000	                              mov esi, 0	      8720	ldlang.c	FUNCTION_206	FOR_1	CALL_2
0x400a90d	      0xbf00000000	                              mov edi, 0	      8720	ldlang.c	FUNCTION_206	FOR_1	CALL_2
0x400a912	      0xe800000000	                          call 0x400a917	      8720	ldlang.c	FUNCTION_206	FOR_1	CALL_2
0x400a917	      0xb900000000	                              mov ecx, 0	      8720	ldlang.c	FUNCTION_206	FOR_1	CALL_2
0x400a91c	      0xba00000000	                              mov edx, 0	      8720	ldlang.c	FUNCTION_206	FOR_1	CALL_2
0x400a921	      0xbe00000000	                              mov esi, 0	      8720	ldlang.c	FUNCTION_206	FOR_1	CALL_2
0x400a926	          0x4889c7	                            mov rdi, rax	      8720	ldlang.c	FUNCTION_206	FOR_1	CALL_2
0x400a929	      0xe800000000	                          call 0x400a92e	      8720	ldlang.c	FUNCTION_206	FOR_1	CALL_2
0x400a92e	          0x4889c7	                            mov rdi, rax	      8723	ldlang.c	FUNCTION_206	CALL_3
0x400a931	      0xe800000000	                          call 0x400a936	      8723	ldlang.c	FUNCTION_206	CALL_3
0x400a936	        0x4883c408	                              add rsp, 8	      8724	ldlang.c	FUNCTION_206
0x400a93a	              0xc3	                                     ret	      8724	ldlang.c	FUNCTION_206
output_section_statement_newfunc	IF,4:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,5:ELSE,0	58
0x4002dc2	              0x55	                                push rbp	      1183	ldlang.c	FUNCTION_36
0x4002dc3	              0x53	                                push rbx	      1183	ldlang.c	FUNCTION_36
0x4002dc4	        0x4883ec08	                              sub rsp, 8	      1183	ldlang.c	FUNCTION_36
0x4002dc8	          0x4889f3	                            mov rbx, rsi	      1183	ldlang.c	FUNCTION_36
0x4002dcb	          0x4889d5	                            mov rbp, rdx	      1183	ldlang.c	FUNCTION_36
0x4002dce	          0x4885ff	                           test rdi, rdi	      1187	ldlang.c	FUNCTION_36	IF_1
0x4002dd1	            0x7519	                           jne 0x4002dec	      1187	ldlang.c	FUNCTION_36	IF_1
0x4002dd3	      0xbeb0000000	                           mov esi, 0xb0	      1189	ldlang.c	FUNCTION_36	IF_1	CALL_1
0x4002dd8	          0x4889df	                            mov rdi, rbx	      1189	ldlang.c	FUNCTION_36	IF_1	CALL_1
0x4002ddb	      0xe800000000	                          call 0x4002de0	      1189	ldlang.c	FUNCTION_36	IF_1	CALL_1
0x4002de0	          0x4889c7	                            mov rdi, rax	      1189	ldlang.c	FUNCTION_36	IF_1	CALL_1
0x4002de3	          0x4885c0	                           test rax, rax	      1191	ldlang.c	FUNCTION_36	IF_1	IF_2
0x4002de6	     0xf84c9000000	                            je 0x4002eb5	      1191	ldlang.c	FUNCTION_36	IF_1	IF_2
0x4002dec	          0x4889ea	                            mov rdx, rbp	      1195	ldlang.c	FUNCTION_36	CALL_2
0x4002def	          0x4889de	                            mov rsi, rbx	      1195	ldlang.c	FUNCTION_36	CALL_2
0x4002df2	      0xe800000000	                          call 0x4002df7	      1195	ldlang.c	FUNCTION_36	CALL_2
0x4002df7	          0x4889c2	                            mov rdx, rax	      1195	ldlang.c	FUNCTION_36	CALL_2
0x4002dfa	      0xb800000000	                              mov eax, 0	      1197	ldlang.c	FUNCTION_36	IF_3
0x4002dff	          0x4885d2	                           test rdx, rdx	      1196	ldlang.c	FUNCTION_36	IF_3
0x4002e02	     0xf84b2000000	                            je 0x4002eba	      1196	ldlang.c	FUNCTION_36	IF_3
0x4002e08	        0x488d7218	                   lea rsi, [rdx + 0x18]	      1200	ldlang.c	FUNCTION_36
0x4002e0c	    0x48c742180000	               mov qword [rdx + 0x18], 0	        90	string3.h	FUNCTION_248	CALL_5
0x4002e14	    0x48c782a80000	               mov qword [rdx + 0xa8], 0	        90	string3.h	FUNCTION_248	CALL_5
0x4002e1f	        0x488d7a20	                   lea rdi, [rdx + 0x20]	        90	string3.h	FUNCTION_248	CALL_5
0x4002e23	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_248	CALL_5
0x4002e27	          0x4889f1	                            mov rcx, rsi	        90	string3.h	FUNCTION_248	CALL_5
0x4002e2a	          0x4829f9	                            sub rcx, rdi	        90	string3.h	FUNCTION_248	CALL_5
0x4002e2d	    0x81c198000000	                           add ecx, 0x98	        90	string3.h	FUNCTION_248	CALL_5
0x4002e33	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_248	CALL_5
0x4002e36	            0x89c9	                            mov ecx, ecx	        90	string3.h	FUNCTION_248	CALL_5
0x4002e38	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_248	CALL_5
0x4002e3b	    0xc74220000000	               mov dword [rdx + 0x20], 0	      1201	ldlang.c	FUNCTION_36
0x4002e42	    0xc78294000000	     mov dword [rdx + 0x94], 0xffffffff 	      1202	ldlang.c	FUNCTION_36
0x4002e4c	    0xc78298000000	     mov dword [rdx + 0x98], 0xffffffff 	      1203	ldlang.c	FUNCTION_36
0x4002e56	    0xc78290000000	               mov dword [rdx + 0x90], 1	      1204	ldlang.c	FUNCTION_36
0x4002e60	    0x48c742280000	               mov qword [rdx + 0x28], 0	      1009	ldlang.c	FUNCTION_30
0x4002e68	        0x488d4228	                   lea rax, [rdx + 0x28]	      1010	ldlang.c	FUNCTION_30
0x4002e6c	        0x48894230	             mov qword [rdx + 0x30], rax	      1010	ldlang.c	FUNCTION_30
0x4002e70	    0x488b05000000	            mov rax, qword [0x04002e77] 	      1206	ldlang.c	FUNCTION_36	CALL_4
0x4002e77	        0x488b4808	                mov rcx, qword [rax + 8]	      7673	ldlang.c	FUNCTION_179
0x4002e7b	          0x488931	                    mov qword [rcx], rsi	      7673	ldlang.c	FUNCTION_179
0x4002e7e	        0x48897008	                mov qword [rax + 8], rsi	      7674	ldlang.c	FUNCTION_179
0x4002e82	    0x48833d000000	               cmp qword [0x04002e8a], 0	      1211	ldlang.c	FUNCTION_36	IF_4
0x4002e8a	            0x740f	                            je 0x4002e9b	      1211	ldlang.c	FUNCTION_36	IF_4
0x4002e8c	    0x488b05000000	            mov rax, qword [0x04002e93] 	      1213	ldlang.c	FUNCTION_36	IF_4
0x4002e93	        0x4883e820	                           sub rax, 0x20	      1213	ldlang.c	FUNCTION_36	IF_4
0x4002e97	        0x48894240	             mov qword [rdx + 0x40], rax	      1213	ldlang.c	FUNCTION_36	IF_4
0x4002e9b	    0x488b05000000	            mov rax, qword [0x04002ea2] 	      7673	ldlang.c	FUNCTION_179
0x4002ea2	          0x488930	                    mov qword [rax], rsi	      7673	ldlang.c	FUNCTION_179
0x4002ea5	        0x488d4238	                   lea rax, [rdx + 0x38]	      1220	ldlang.c	FUNCTION_36
0x4002ea9	    0x488905000000	            mov qword [0x04002eb0], rax 	      1220	ldlang.c	FUNCTION_36
0x4002eb0	          0x4889d0	                            mov rax, rdx	      1224	ldlang.c	FUNCTION_36
0x4002eb3	            0xeb05	                           jmp 0x4002eba	      1224	ldlang.c	FUNCTION_36
0x4002eb5	      0xb800000000	                              mov eax, 0	      1192	ldlang.c	FUNCTION_36	IF_1	IF_2
0x4002eba	        0x4883c408	                              add rsp, 8	      1225	ldlang.c	FUNCTION_36
0x4002ebe	              0x5b	                                 pop rbx	      1225	ldlang.c	FUNCTION_36
0x4002ebf	              0x5d	                                 pop rbp	      1225	ldlang.c	FUNCTION_36
0x4002ec0	              0xc3	                                     ret	      1225	ldlang.c	FUNCTION_36
version_expr_head_hash	IF,0:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,1:ELSE,0	5
0x4001a89	        0x4883ec08	                              sub rsp, 8	      8348	ldlang.c	FUNCTION_196
0x4001a8d	        0x488b7f08	                mov rdi, qword [rdi + 8]	      8352	ldlang.c	FUNCTION_196	CALL_1
0x4001a91	      0xe800000000	                          call 0x4001a96	      8352	ldlang.c	FUNCTION_196	CALL_1
0x4001a96	        0x4883c408	                              add rsp, 8	      8353	ldlang.c	FUNCTION_196
0x4001a9a	              0xc3	                                     ret	      8353	ldlang.c	FUNCTION_196
map_input_to_output_sections	IF,9:WHILE,0:FOR,1:DO,0:SWITCH,2:functions,0:CALL,12:ELSE,2	164
0x4006778	          0x4885ff	                           test rdi, rdi	      3594	ldlang.c	FUNCTION_86	FOR_1
0x400677b	     0xf8466020000	                            je 0x40069e7	      3594	ldlang.c	FUNCTION_86	FOR_1
0x4006781	            0x4156	                                push r14	      3593	ldlang.c	FUNCTION_86
0x4006783	            0x4155	                                push r13	      3593	ldlang.c	FUNCTION_86
0x4006785	            0x4154	                                push r12	      3593	ldlang.c	FUNCTION_86
0x4006787	              0x55	                                push rbp	      3593	ldlang.c	FUNCTION_86
0x4006788	              0x53	                                push rbx	      3593	ldlang.c	FUNCTION_86
0x4006789	          0x4889fb	                            mov rbx, rdi	      3593	ldlang.c	FUNCTION_86
0x400678c	          0x4989f4	                            mov r12, rsi	      3593	ldlang.c	FUNCTION_86
0x400678f	          0x4889d5	                            mov rbp, rdx	      3593	ldlang.c	FUNCTION_86
0x4006792	    0x41bd01020000	                         mov r13d, 0x201	      3658	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	SWITCH_2	ELSE_1
0x4006798	        0x837b080f	                cmp dword [rbx + 8], 0xf	      3599	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1
0x400679c	     0xf8731020000	                            ja 0x40069d3	      3599	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1
0x40067a2	          0x8b4308	                mov eax, dword [rbx + 8]	      3599	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1
0x40067a5	    0xff24c5000000	                       jmp qword [rax*8]	      3599	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1
0x40067ac	          0x4989de	                            mov r14, rbx	      3602	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_1
0x40067af	        0x488b4350	            mov rax, qword [rbx + 0x50] 	      2901	ldlang.c	FUNCTION_67	IF_1
0x40067b3	          0x4885c0	                           test rax, rax	      2901	ldlang.c	FUNCTION_67	IF_1
0x40067b6	            0x743a	                            je 0x40067f2	      2901	ldlang.c	FUNCTION_67	IF_1
0x40067b8	        0x83781801	               cmp dword [rax + 0x18], 1	      2902	ldlang.c	FUNCTION_67	IF_1
0x40067bc	            0x7534	                           jne 0x40067f2	      2902	ldlang.c	FUNCTION_67	IF_1
0x40067be	        0x837b1800	               cmp dword [rbx + 0x18], 0	      2903	ldlang.c	FUNCTION_67	IF_1
0x40067c2	            0x752e	                           jne 0x40067f2	      2903	ldlang.c	FUNCTION_67	IF_1
0x40067c4	          0x4889ea	                            mov rdx, rbp	      2907	ldlang.c	FUNCTION_67	IF_1	CALL_1
0x40067c7	      0xbe00000000	                              mov esi, 0	      2907	ldlang.c	FUNCTION_67	IF_1	CALL_1
0x40067cc	          0x4889df	                            mov rdi, rbx	      2907	ldlang.c	FUNCTION_67	IF_1	CALL_1
0x40067cf	      0xe864fdffff	                      call sym.walk_wild	      2907	ldlang.c	FUNCTION_67	IF_1	CALL_1
0x40067d4	        0x488b7370	            mov rsi, qword [rbx + 0x70] 	      2909	ldlang.c	FUNCTION_67	IF_1
0x40067d8	          0x4885f6	                           test rsi, rsi	      2910	ldlang.c	FUNCTION_67	IF_1	IF_2
0x40067db	            0x7425	                            je 0x4006802	      2910	ldlang.c	FUNCTION_67	IF_1	IF_2
0x40067dd	          0x4889ea	                            mov rdx, rbp	      2912	ldlang.c	FUNCTION_67	IF_1	IF_2	CALL_2
0x40067e0	          0x4889df	                            mov rdi, rbx	      2912	ldlang.c	FUNCTION_67	IF_1	IF_2	CALL_2
0x40067e3	      0xe890edffff	call sym.output_section_callback_tree_to_list	      2912	ldlang.c	FUNCTION_67	IF_1	IF_2	CALL_2
0x40067e8	    0x48c743700000	               mov qword [rbx + 0x70], 0	      2913	ldlang.c	FUNCTION_67	IF_1	IF_2
0x40067f0	            0xeb10	                           jmp 0x4006802	      2913	ldlang.c	FUNCTION_67	IF_1	IF_2
0x40067f2	          0x4889ea	                            mov rdx, rbp	      2917	ldlang.c	FUNCTION_67	CALL_3
0x40067f5	      0xbe00000000	                              mov esi, 0	      2917	ldlang.c	FUNCTION_67	CALL_3
0x40067fa	          0x4c89f7	                            mov rdi, r14	      2917	ldlang.c	FUNCTION_67	CALL_3
0x40067fd	      0xe836fdffff	                      call sym.walk_wild	      2917	ldlang.c	FUNCTION_67	CALL_3
0x4006802	    0x48833d000000	               cmp qword [0x0400680a], 0	      2919	ldlang.c	FUNCTION_67	IF_3
0x400680a	     0xf85c3010000	                           jne 0x40069d3	      2919	ldlang.c	FUNCTION_67	IF_3
0x4006810	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      2920	ldlang.c	FUNCTION_67	IF_3	FOR_1
0x4006814	          0x4885c0	                           test rax, rax	      2920	ldlang.c	FUNCTION_67	IF_3	FOR_1
0x4006817	     0xf84b6010000	                            je 0x40069d3	      2920	ldlang.c	FUNCTION_67	IF_3	FOR_1
0x400681d	        0x488b7008	                mov rsi, qword [rax + 8]	      2921	ldlang.c	FUNCTION_67	IF_3	FOR_1	IF_4
0x4006821	          0x4885f6	                           test rsi, rsi	      2921	ldlang.c	FUNCTION_67	IF_3	FOR_1	IF_4
0x4006824	            0x7422	                            je 0x4006848	      2921	ldlang.c	FUNCTION_67	IF_3	FOR_1	IF_4
0x4006826	      0xbf00000000	                              mov edi, 0	      2921	ldlang.c	FUNCTION_67	IF_3	FOR_1	IF_4
0x400682b	      0xb907000000	                              mov ecx, 7	      2921	ldlang.c	FUNCTION_67	IF_3	FOR_1	IF_4
0x4006830	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2921	ldlang.c	FUNCTION_67	IF_3	FOR_1	IF_4
0x4006832	           0xf97c1	                                 seta cl	      2921	ldlang.c	FUNCTION_67	IF_3	FOR_1	IF_4
0x4006835	           0xf92c2	                                 setb dl	      2921	ldlang.c	FUNCTION_67	IF_3	FOR_1	IF_4
0x4006838	            0x38d1	                              cmp cl, dl	      2921	ldlang.c	FUNCTION_67	IF_3	FOR_1	IF_4
0x400683a	            0x750c	                           jne 0x4006848	      2921	ldlang.c	FUNCTION_67	IF_3	FOR_1	IF_4
0x400683c	    0x48892d000000	            mov qword [0x04006843], rbp 	      2925	ldlang.c	FUNCTION_67	IF_3	FOR_1	IF_4
0x4006843	      0xe98b010000	                           jmp 0x40069d3	      2925	ldlang.c	FUNCTION_67	IF_3	FOR_1	IF_4
0x4006848	          0x488b00	                    mov rax, qword [rax]	      2920	ldlang.c	FUNCTION_67	IF_3	FOR_1
0x400684b	          0x4885c0	                           test rax, rax	      2920	ldlang.c	FUNCTION_67	IF_3	FOR_1
0x400684e	            0x75cd	                           jne 0x400681d	      2920	ldlang.c	FUNCTION_67	IF_3	FOR_1
0x4006850	      0xe97e010000	                           jmp 0x40069d3	      2920	ldlang.c	FUNCTION_67	IF_3	FOR_1
0x4006855	          0x4889ea	                            mov rdx, rbp	      3605	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_2
0x4006858	          0x4c89e6	                            mov rsi, r12	      3605	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_2
0x400685b	    0x488b3d000000	            mov rdi, qword [0x04006862] 	      3605	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_2
0x4006862	      0xe811ffffff	   call sym.map_input_to_output_sections	      3605	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_2
0x4006867	      0xe967010000	                           jmp 0x40069d3	      3608	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1
0x400686c	          0x4989de	                            mov r14, rbx	      3610	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1
0x400686f	    0x8b8384000000	            mov eax, dword [rbx + 0x84] 	      3611	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_1
0x4006875	            0x85c0	                           test eax, eax	      3611	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_1
0x4006877	            0x7451	                            je 0x40068ca	      3611	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_1
0x4006879	      0x2d7c010000	                          sub eax, 0x17c	      3613	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_1	IF_2
0x400687e	          0x83f801	                              cmp eax, 1	      3613	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_1	IF_2
0x4006881	     0xf874c010000	                            ja 0x40069d3	      3613	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_1	IF_2
0x4006887	    0x808b90000000	                 or byte [rbx + 0x90], 4	      3616	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_1
0x400688e	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      3617	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_1	CALL_3
0x4006892	          0x4889de	                            mov rsi, rbx	      3617	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_1	CALL_3
0x4006895	      0xe862feffff	           call sym.check_input_sections	      3617	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_1	CALL_3
0x400689a	     0xfb683900000	           movzx eax, byte [rbx + 0x90] 	      3618	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_1	IF_3
0x40068a1	          0xc0e802	                               shr al, 2	      3618	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_1	IF_3
0x40068a4	          0x83e001	                              and eax, 1	      3618	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_1	IF_3
0x40068a7	    0x81bb84000000	          cmp dword [rbx + 0x84], 0x17c 	      3618	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_1	IF_3
0x40068b1	           0xf94c2	                                 sete dl	      3618	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_1	IF_3
0x40068b4	           0xfb6d2	                           movzx edx, dl	      3618	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_1	IF_3
0x40068b7	            0x39d0	                            cmp eax, edx	      3618	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_1	IF_3
0x40068b9	            0x740f	                            je 0x40068ca	      3618	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_1	IF_3
0x40068bb	    0xc78384000000	     mov dword [rbx + 0x84], 0xffffffff 	      3620	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_1	IF_3
0x40068c5	      0xe909010000	                           jmp 0x40069d3	      3621	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_1	IF_3
0x40068ca	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      3624	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_4
0x40068ce	          0x4c89f2	                            mov rdx, r14	      3624	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_4
0x40068d1	          0x4c89e6	                            mov rsi, r12	      3624	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_4
0x40068d4	      0xe89ffeffff	   call sym.map_input_to_output_sections	      3624	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_4
0x40068d9	      0xe9f5000000	                           jmp 0x40069d3	      3627	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1
0x40068de	        0x4c8b6310	            mov r12, qword [rbx + 0x10] 	      3631	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1
0x40068e2	      0xe9ec000000	                           jmp 0x40069d3	      3632	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1
0x40068e7	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      3634	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_5
0x40068eb	          0x4889ea	                            mov rdx, rbp	      3634	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_5
0x40068ee	          0x4c89e6	                            mov rsi, r12	      3634	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_5
0x40068f1	      0xe882feffff	   call sym.map_input_to_output_sections	      3634	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_5
0x40068f6	      0xe9d8000000	                           jmp 0x40069d3	      3637	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1
0x40068fb	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      3641	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_6
0x40068ff	      0xe855deffff	                    call sym.exp_init_os	      3641	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_6
0x4006904	    0x8b858c000000	            mov eax, dword [rbp + 0x8c] 	      3645	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	SWITCH_2
0x400690a	          0x83f802	                              cmp eax, 2	      3645	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	SWITCH_2
0x400690d	            0x7414	                            je 0x4006923	      3645	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	SWITCH_2
0x400690f	          0x83f803	                              cmp eax, 3	      3644	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1
0x4006912	        0x400f95c6	                               setne sil	      3644	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1
0x4006916	        0x400fb6f6	                          movzx esi, sil	      3644	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1
0x400691a	    0x8db476000100	         lea esi, [rsi + rsi*2 + 0x100] 	      3644	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1
0x4006921	            0xeb18	                           jmp 0x400693b	      3644	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1
0x4006923	    0x488b05000000	            mov rax, qword [0x0400692a] 	      3654	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	SWITCH_2	IF_4
0x400692a	        0x488b4008	                mov rax, qword [rax + 8]	      3654	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	SWITCH_2	IF_4
0x400692e	        0x83780805	                  cmp dword [rax + 8], 5	      3658	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	SWITCH_2	ELSE_1
0x4006932	      0xbe00030000	                          mov esi, 0x300	      3658	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	SWITCH_2	ELSE_1
0x4006937	        0x410f44f5	                         cmove esi, r13d	      3658	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	SWITCH_2	ELSE_1
0x400693b	        0x488b4538	            mov rax, qword [rbp + 0x38] 	      3661	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_5
0x400693f	          0x4885c0	                           test rax, rax	      3661	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_5
0x4006942	            0x750d	                           jne 0x4006951	      3661	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_5
0x4006944	          0x4889ef	                            mov rdi, rbp	      3662	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_7
0x4006947	      0xe8c3deffff	                        call sym.init_os	      3662	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_7
0x400694c	      0xe982000000	                           jmp 0x40069d3	      3662	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_7
0x4006951	           0x97020	              or dword [rax + 0x20], esi	      3664	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	ELSE_2
0x4006954	            0xeb7d	                           jmp 0x40069d3	      3664	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	ELSE_2
0x4006956	          0x4885ed	                           test rbp, rbp	      3673	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_6
0x4006959	            0x7478	                            je 0x40069d3	      3673	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_6
0x400695b	      0x48837d3800	               cmp qword [rbp + 0x38], 0	      3673	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_6
0x4006960	            0x7571	                           jne 0x40069d3	      3673	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_6
0x4006962	      0xbe00000000	                              mov esi, 0	      3674	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_8
0x4006967	          0x4889ef	                            mov rdi, rbp	      3674	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_8
0x400696a	      0xe8a0deffff	                        call sym.init_os	      3674	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_8
0x400696f	            0xeb62	                           jmp 0x40069d3	      3674	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_8
0x4006971	          0x4885ed	                           test rbp, rbp	      3677	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_7
0x4006974	            0x7414	                            je 0x400698a	      3677	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_7
0x4006976	      0x48837d3800	               cmp qword [rbp + 0x38], 0	      3677	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_7
0x400697b	            0x750d	                           jne 0x400698a	      3677	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_7
0x400697d	      0xbe00000000	                              mov esi, 0	      3678	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_9
0x4006982	          0x4889ef	                            mov rdi, rbp	      3678	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_9
0x4006985	      0xe885deffff	                        call sym.init_os	      3678	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_9
0x400698a	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      3682	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_10
0x400698e	      0xe8c6ddffff	                    call sym.exp_init_os	      3682	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	CALL_10
0x4006993	            0xeb3e	                           jmp 0x40069d3	      3683	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1
0x4006995	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      3694	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_8
0x4006999	          0x4885c0	                           test rax, rax	      3694	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_8
0x400699c	            0x7406	                            je 0x40069a4	      3694	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_8
0x400699e	        0x83781800	               cmp dword [rax + 0x18], 0	      3695	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_8
0x40069a2	            0x752f	                           jne 0x40069d3	      3695	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_8
0x40069a4	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      3705	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_8	CALL_11
0x40069a8	      0xba01000000	                              mov edx, 1	      3705	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_8	CALL_11
0x40069ad	      0xbe00000000	                              mov esi, 0	      3705	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_8	CALL_11
0x40069b2	      0xe800000000	                          call 0x40069b7	      3705	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_8	CALL_11
0x40069b7	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      3706	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_8
0x40069bb	        0x48895058	             mov qword [rax + 0x58], rdx	      3706	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_8
0x40069bf	      0x4883783800	               cmp qword [rax + 0x38], 0	      3707	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_8	IF_9
0x40069c4	            0x750d	                           jne 0x40069d3	      3707	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_8	IF_9
0x40069c6	      0xbe00000000	                              mov esi, 0	      3708	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_8	CALL_12
0x40069cb	          0x4889c7	                            mov rdi, rax	      3708	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_8	CALL_12
0x40069ce	      0xe83cdeffff	                        call sym.init_os	      3708	ldlang.c	FUNCTION_86	FOR_1	SWITCH_1	IF_8	CALL_12
0x40069d3	          0x488b1b	                    mov rbx, qword [rbx]	      3594	ldlang.c	FUNCTION_86	FOR_1
0x40069d6	          0x4885db	                           test rbx, rbx	      3594	ldlang.c	FUNCTION_86	FOR_1
0x40069d9	     0xf85b9fdffff	                           jne 0x4006798	      3594	ldlang.c	FUNCTION_86	FOR_1
0x40069df	              0x5b	                                 pop rbx	      3715	ldlang.c	FUNCTION_86
0x40069e0	              0x5d	                                 pop rbp	      3715	ldlang.c	FUNCTION_86
0x40069e1	            0x415c	                                 pop r12	      3715	ldlang.c	FUNCTION_86
0x40069e3	            0x415d	                                 pop r13	      3715	ldlang.c	FUNCTION_86
0x40069e5	            0x415e	                                 pop r14	      3715	ldlang.c	FUNCTION_86
0x40069e7	            0xf3c3	                                     ret	      3715	ldlang.c	FUNCTION_86
lang_register_vers_node	IF,12:WHILE,2:FOR,8:DO,0:SWITCH,0:functions,0:CALL,17:ELSE,3	223
0x4008714	            0x4157	                                push r15	      8452	ldlang.c	ELSE_4	FUNCTION_199
0x4008716	            0x4156	                                push r14	      8452	ldlang.c	ELSE_4	FUNCTION_199
0x4008718	            0x4155	                                push r13	      8452	ldlang.c	ELSE_4	FUNCTION_199
0x400871a	            0x4154	                                push r12	      8452	ldlang.c	ELSE_4	FUNCTION_199
0x400871c	              0x55	                                push rbp	      8452	ldlang.c	ELSE_4	FUNCTION_199
0x400871d	              0x53	                                push rbx	      8452	ldlang.c	ELSE_4	FUNCTION_199
0x400871e	        0x4883ec18	                           sub rsp, 0x18	      8452	ldlang.c	ELSE_4	FUNCTION_199
0x4008722	          0x4889fd	                            mov rbp, rdi	      8452	ldlang.c	ELSE_4	FUNCTION_199
0x4008725	          0x4989f4	                            mov r12, rsi	      8452	ldlang.c	ELSE_4	FUNCTION_199
0x4008728	      0x4889542408	                mov qword [rsp + 8], rdx	      8452	ldlang.c	ELSE_4	FUNCTION_199
0x400872d	          0x4885ff	                           test rdi, rdi	      8457	ldlang.c	ELSE_4	FUNCTION_199	IF_1
0x4008730	      0xb800000000	                              mov eax, 0	      8457	ldlang.c	ELSE_4	FUNCTION_199	IF_1
0x4008735	        0x480f44e8	                          cmove rbp, rax	      8457	ldlang.c	ELSE_4	FUNCTION_199	IF_1
0x4008739	    0x488b1d000000	            mov rbx, qword [0x04008740] 	      8459	ldlang.c	ELSE_4	FUNCTION_199	IF_2
0x4008740	          0x4885db	                           test rbx, rbx	      8459	ldlang.c	ELSE_4	FUNCTION_199	IF_2
0x4008743	            0x7479	                            je 0x40087be	      8459	ldlang.c	ELSE_4	FUNCTION_199	IF_2
0x4008745	        0x807d0000	                       cmp byte [rbp], 0	      8460	ldlang.c	ELSE_4	FUNCTION_199	IF_2
0x4008749	            0x7409	                            je 0x4008754	      8460	ldlang.c	ELSE_4	FUNCTION_199	IF_2
0x400874b	        0x488b4308	                mov rax, qword [rbx + 8]	      8460	ldlang.c	ELSE_4	FUNCTION_199	IF_2
0x400874f	          0x803800	                       cmp byte [rax], 0	      8460	ldlang.c	ELSE_4	FUNCTION_199	IF_2
0x4008752	            0x752e	                           jne 0x4008782	      8460	ldlang.c	ELSE_4	FUNCTION_199	IF_2
0x4008754	      0xba05000000	                              mov edx, 5	      8462	ldlang.c	ELSE_4	FUNCTION_199	IF_2	CALL_2
0x4008759	      0xbe00000000	                              mov esi, 0	      8462	ldlang.c	ELSE_4	FUNCTION_199	IF_2	CALL_2
0x400875e	      0xbf00000000	                              mov edi, 0	      8462	ldlang.c	ELSE_4	FUNCTION_199	IF_2	CALL_2
0x4008763	      0xe800000000	                          call 0x4008768	      8462	ldlang.c	ELSE_4	FUNCTION_199	IF_2	CALL_2
0x4008768	          0x4889c7	                            mov rdi, rax	      8462	ldlang.c	ELSE_4	FUNCTION_199	IF_2	CALL_2
0x400876b	      0xb800000000	                              mov eax, 0	      8462	ldlang.c	ELSE_4	FUNCTION_199	IF_2	CALL_2
0x4008770	      0xe800000000	                          call 0x4008775	      8462	ldlang.c	ELSE_4	FUNCTION_199	IF_2	CALL_2
0x4008775	          0x4c89e7	                            mov rdi, r12	      8464	ldlang.c	ELSE_4	FUNCTION_199	IF_2	CALL_3
0x4008778	      0xe800000000	                          call 0x400877d	      8464	ldlang.c	ELSE_4	FUNCTION_199	IF_2	CALL_3
0x400877d	      0xe9b3020000	                           jmp 0x4008a35	      8465	ldlang.c	ELSE_4	FUNCTION_199	IF_2
0x4008782	        0x488b7b08	                mov rdi, qword [rbx + 8]	      8470	ldlang.c	ELSE_4	FUNCTION_199	FOR_1	IF_3
0x4008786	          0x4889ee	                            mov rsi, rbp	      8470	ldlang.c	ELSE_4	FUNCTION_199	FOR_1	IF_3
0x4008789	      0xe800000000	                          call 0x400878e	      8470	ldlang.c	ELSE_4	FUNCTION_199	FOR_1	IF_3
0x400878e	            0x85c0	                           test eax, eax	      8470	ldlang.c	ELSE_4	FUNCTION_199	FOR_1	IF_3
0x4008790	            0x7524	                           jne 0x40087b6	      8470	ldlang.c	ELSE_4	FUNCTION_199	FOR_1	IF_3
0x4008792	      0xba05000000	                              mov edx, 5	      8471	ldlang.c	ELSE_4	FUNCTION_199	FOR_1	IF_3
0x4008797	      0xbe00000000	                              mov esi, 0	      8471	ldlang.c	ELSE_4	FUNCTION_199	FOR_1	IF_3
0x400879c	      0xbf00000000	                              mov edi, 0	      8471	ldlang.c	ELSE_4	FUNCTION_199	FOR_1	IF_3
0x40087a1	      0xe800000000	                          call 0x40087a6	      8471	ldlang.c	ELSE_4	FUNCTION_199	FOR_1	IF_3
0x40087a6	          0x4889ee	                            mov rsi, rbp	      8471	ldlang.c	ELSE_4	FUNCTION_199	FOR_1	IF_3
0x40087a9	          0x4889c7	                            mov rdi, rax	      8471	ldlang.c	ELSE_4	FUNCTION_199	FOR_1	IF_3
0x40087ac	      0xb800000000	                              mov eax, 0	      8471	ldlang.c	ELSE_4	FUNCTION_199	FOR_1	IF_3
0x40087b1	      0xe800000000	                          call 0x40087b6	      8471	ldlang.c	ELSE_4	FUNCTION_199	FOR_1	IF_3
0x40087b6	          0x488b1b	                    mov rbx, qword [rbx]	      8469	ldlang.c	ELSE_4	FUNCTION_199	FOR_1
0x40087b9	          0x4885db	                           test rbx, rbx	      8469	ldlang.c	ELSE_4	FUNCTION_199	FOR_1
0x40087bc	            0x75c4	                           jne 0x4008782	      8469	ldlang.c	ELSE_4	FUNCTION_199	FOR_1
0x40087be	      0x498d7c2418	                   lea rdi, [r12 + 0x18]	      8473	ldlang.c	ELSE_4	FUNCTION_199	CALL_6
0x40087c3	      0xe87691ffff	call sym.lang_finalize_version_expr_head	      8473	ldlang.c	ELSE_4	FUNCTION_199	CALL_6
0x40087c8	      0x498d7c2438	                   lea rdi, [r12 + 0x38]	      8474	ldlang.c	ELSE_4	FUNCTION_199	CALL_7
0x40087cd	      0xe86c91ffff	call sym.lang_finalize_version_expr_head	      8474	ldlang.c	ELSE_4	FUNCTION_199	CALL_7
0x40087d2	      0x4d8b6c2418	            mov r13, qword [r12 + 0x18] 	      8479	ldlang.c	ELSE_4	FUNCTION_199	FOR_2
0x40087d7	          0x4d85ed	                           test r13, r13	      8479	ldlang.c	ELSE_4	FUNCTION_199	FOR_2
0x40087da	     0xf84f8000000	                            je 0x40088d8	      8479	ldlang.c	ELSE_4	FUNCTION_199	FOR_2
0x40087e0	    0x4c8b35000000	            mov r14, qword [0x040087e7] 	      8481	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3
0x40087e7	          0x4d85f6	                           test r14, r14	      8481	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3
0x40087ea	     0xf84db000000	                            je 0x40088cb	      8481	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3
0x40087f0	        0x498b7e40	            mov rdi, qword [r14 + 0x40] 	      8485	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4
0x40087f4	          0x4885ff	                           test rdi, rdi	      8485	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4
0x40087f7	            0x746a	                            je 0x4008863	      8485	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4
0x40087f9	      0x41f6451001	               test byte [r13 + 0x10], 1	      8485	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4
0x40087fe	            0x746a	                            je 0x400886a	      8485	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4
0x4008800	          0x4c89ee	                            mov rsi, r13	      8487	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4
0x4008803	      0xe800000000	                          call 0x4008808	      8487	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4
0x4008808	          0x4889c3	                            mov rbx, rax	      8487	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4
0x400880b	          0x4885c0	                           test rax, rax	      8489	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1
0x400880e	            0x753d	                           jne 0x400884d	      8489	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1
0x4008810	      0xe9aa000000	                           jmp 0x40088bf	      8489	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1
0x4008815	      0x410fb64510	           movzx eax, byte [r13 + 0x10] 	      8491	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1	IF_5
0x400881a	          0x324310	               xor al, byte [rbx + 0x10]	      8491	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1	IF_5
0x400881d	            0xa838	                           test al, 0x38	      8491	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1	IF_5
0x400881f	            0x7524	                           jne 0x4008845	      8491	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1	IF_5
0x4008821	      0xba05000000	                              mov edx, 5	      8492	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1	IF_5	CALL_10
0x4008826	      0xbe00000000	                              mov esi, 0	      8492	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1	IF_5	CALL_10
0x400882b	      0xbf00000000	                              mov edi, 0	      8492	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1	IF_5	CALL_10
0x4008830	      0xe800000000	                          call 0x4008835	      8492	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1	IF_5	CALL_10
0x4008835	          0x4c89fe	                            mov rsi, r15	      8492	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1	IF_5	CALL_10
0x4008838	          0x4889c7	                            mov rdi, rax	      8492	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1	IF_5	CALL_10
0x400883b	      0xb800000000	                              mov eax, 0	      8492	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1	IF_5	CALL_10
0x4008840	      0xe800000000	                          call 0x4008845	      8492	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1	IF_5	CALL_10
0x4008845	          0x488b1b	                    mov rbx, qword [rbx]	      8494	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1
0x4008848	          0x4885db	                           test rbx, rbx	      8489	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1
0x400884b	            0x7472	                            je 0x40088bf	      8489	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1
0x400884d	        0x4d8b7d08	                mov r15, qword [r13 + 8]	      8489	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1
0x4008851	        0x488b7308	                mov rsi, qword [rbx + 8]	      8489	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1
0x4008855	          0x4c89ff	                            mov rdi, r15	      8489	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1
0x4008858	      0xe800000000	                          call 0x400885d	      8489	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1
0x400885d	            0x85c0	                           test eax, eax	      8489	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1
0x400885f	            0x74b4	                            je 0x4008815	      8489	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1
0x4008861	            0xeb5c	                           jmp 0x40088bf	      8489	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	IF_4	WHILE_1
0x4008863	      0x41f6451001	               test byte [r13 + 0x10], 1	      8497	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6
0x4008868	            0x7555	                           jne 0x40088bf	      8497	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6
0x400886a	        0x498b5e48	            mov rbx, qword [r14 + 0x48] 	      8498	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4
0x400886e	          0x4885db	                           test rbx, rbx	      8498	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4
0x4008871	            0x744c	                            je 0x40088bf	      8498	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4
0x4008873	        0x4d8b7d08	                mov r15, qword [r13 + 8]	      8499	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4	IF_7
0x4008877	        0x488b7308	                mov rsi, qword [rbx + 8]	      8499	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4	IF_7
0x400887b	          0x4c89ff	                            mov rdi, r15	      8499	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4	IF_7
0x400887e	      0xe800000000	                          call 0x4008883	      8499	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4	IF_7
0x4008883	            0x85c0	                           test eax, eax	      8499	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4	IF_7
0x4008885	            0x7530	                           jne 0x40088b7	      8499	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4	IF_7
0x4008887	      0x410fb64510	           movzx eax, byte [r13 + 0x10] 	      8500	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4	IF_7
0x400888c	          0x324310	               xor al, byte [rbx + 0x10]	      8500	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4	IF_7
0x400888f	            0xa838	                           test al, 0x38	      8500	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4	IF_7
0x4008891	            0x7524	                           jne 0x40088b7	      8500	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4	IF_7
0x4008893	      0xba05000000	                              mov edx, 5	      8501	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4	IF_7	CALL_12
0x4008898	      0xbe00000000	                              mov esi, 0	      8501	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4	IF_7	CALL_12
0x400889d	      0xbf00000000	                              mov edi, 0	      8501	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4	IF_7	CALL_12
0x40088a2	      0xe800000000	                          call 0x40088a7	      8501	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4	IF_7	CALL_12
0x40088a7	          0x4c89fe	                            mov rsi, r15	      8501	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4	IF_7	CALL_12
0x40088aa	          0x4889c7	                            mov rdi, rax	      8501	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4	IF_7	CALL_12
0x40088ad	      0xb800000000	                              mov eax, 0	      8501	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4	IF_7	CALL_12
0x40088b2	      0xe800000000	                          call 0x40088b7	      8501	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4	IF_7	CALL_12
0x40088b7	          0x488b1b	                    mov rbx, qword [rbx]	      8498	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4
0x40088ba	          0x4885db	                           test rbx, rbx	      8498	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4
0x40088bd	            0x75b4	                           jne 0x4008873	      8498	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3	ELSE_1	IF_6	FOR_4
0x40088bf	          0x4d8b36	                    mov r14, qword [r14]	      8481	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3
0x40088c2	          0x4d85f6	                           test r14, r14	      8481	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3
0x40088c5	     0xf8525ffffff	                           jne 0x40087f0	      8481	ldlang.c	ELSE_4	FUNCTION_199	FOR_2	FOR_3
0x40088cb	        0x4d8b6d00	                    mov r13, qword [r13]	      8479	ldlang.c	ELSE_4	FUNCTION_199	FOR_2
0x40088cf	          0x4d85ed	                           test r13, r13	      8479	ldlang.c	ELSE_4	FUNCTION_199	FOR_2
0x40088d2	     0xf8508ffffff	                           jne 0x40087e0	      8479	ldlang.c	ELSE_4	FUNCTION_199	FOR_2
0x40088d8	      0x4d8b6c2438	            mov r13, qword [r12 + 0x38] 	      8506	ldlang.c	ELSE_4	FUNCTION_199	FOR_5
0x40088dd	          0x4d85ed	                           test r13, r13	      8506	ldlang.c	ELSE_4	FUNCTION_199	FOR_5
0x40088e0	     0xf84f8000000	                            je 0x40089de	      8506	ldlang.c	ELSE_4	FUNCTION_199	FOR_5
0x40088e6	    0x4c8b35000000	            mov r14, qword [0x040088ed] 	      8508	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6
0x40088ed	          0x4d85f6	                           test r14, r14	      8508	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6
0x40088f0	     0xf84db000000	                            je 0x40089d1	      8508	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6
0x40088f6	        0x498b7e20	            mov rdi, qword [r14 + 0x20] 	      8512	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8
0x40088fa	          0x4885ff	                           test rdi, rdi	      8512	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8
0x40088fd	            0x746a	                            je 0x4008969	      8512	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8
0x40088ff	      0x41f6451001	               test byte [r13 + 0x10], 1	      8512	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8
0x4008904	            0x746a	                            je 0x4008970	      8512	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8
0x4008906	          0x4c89ee	                            mov rsi, r13	      8514	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8
0x4008909	      0xe800000000	                          call 0x400890e	      8514	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8
0x400890e	          0x4889c3	                            mov rbx, rax	      8514	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8
0x4008911	          0x4885c0	                           test rax, rax	      8516	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2
0x4008914	            0x753d	                           jne 0x4008953	      8516	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2
0x4008916	      0xe9aa000000	                           jmp 0x40089c5	      8516	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2
0x400891b	      0x410fb64510	           movzx eax, byte [r13 + 0x10] 	      8518	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2	IF_9
0x4008920	          0x324310	               xor al, byte [rbx + 0x10]	      8518	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2	IF_9
0x4008923	            0xa838	                           test al, 0x38	      8518	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2	IF_9
0x4008925	            0x7524	                           jne 0x400894b	      8518	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2	IF_9
0x4008927	      0xba05000000	                              mov edx, 5	      8519	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2	IF_9	CALL_15
0x400892c	      0xbe00000000	                              mov esi, 0	      8519	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2	IF_9	CALL_15
0x4008931	      0xbf00000000	                              mov edi, 0	      8519	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2	IF_9	CALL_15
0x4008936	      0xe800000000	                          call 0x400893b	      8519	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2	IF_9	CALL_15
0x400893b	          0x4c89fe	                            mov rsi, r15	      8519	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2	IF_9	CALL_15
0x400893e	          0x4889c7	                            mov rdi, rax	      8519	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2	IF_9	CALL_15
0x4008941	      0xb800000000	                              mov eax, 0	      8519	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2	IF_9	CALL_15
0x4008946	      0xe800000000	                          call 0x400894b	      8519	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2	IF_9	CALL_15
0x400894b	          0x488b1b	                    mov rbx, qword [rbx]	      8522	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2
0x400894e	          0x4885db	                           test rbx, rbx	      8516	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2
0x4008951	            0x7472	                            je 0x40089c5	      8516	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2
0x4008953	        0x4d8b7d08	                mov r15, qword [r13 + 8]	      8516	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2
0x4008957	        0x488b7308	                mov rsi, qword [rbx + 8]	      8516	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2
0x400895b	          0x4c89ff	                            mov rdi, r15	      8516	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2
0x400895e	      0xe800000000	                          call 0x4008963	      8516	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2
0x4008963	            0x85c0	                           test eax, eax	      8516	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2
0x4008965	            0x74b4	                            je 0x400891b	      8516	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2
0x4008967	            0xeb5c	                           jmp 0x40089c5	      8516	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	IF_8	WHILE_2
0x4008969	      0x41f6451001	               test byte [r13 + 0x10], 1	      8525	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10
0x400896e	            0x7555	                           jne 0x40089c5	      8525	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10
0x4008970	        0x498b5e28	            mov rbx, qword [r14 + 0x28] 	      8526	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7
0x4008974	          0x4885db	                           test rbx, rbx	      8526	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7
0x4008977	            0x744c	                            je 0x40089c5	      8526	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7
0x4008979	        0x4d8b7d08	                mov r15, qword [r13 + 8]	      8527	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7	IF_11
0x400897d	        0x488b7308	                mov rsi, qword [rbx + 8]	      8527	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7	IF_11
0x4008981	          0x4c89ff	                            mov rdi, r15	      8527	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7	IF_11
0x4008984	      0xe800000000	                          call 0x4008989	      8527	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7	IF_11
0x4008989	            0x85c0	                           test eax, eax	      8527	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7	IF_11
0x400898b	            0x7530	                           jne 0x40089bd	      8527	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7	IF_11
0x400898d	      0x410fb64510	           movzx eax, byte [r13 + 0x10] 	      8528	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7	IF_11
0x4008992	          0x324310	               xor al, byte [rbx + 0x10]	      8528	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7	IF_11
0x4008995	            0xa838	                           test al, 0x38	      8528	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7	IF_11
0x4008997	            0x7524	                           jne 0x40089bd	      8528	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7	IF_11
0x4008999	      0xba05000000	                              mov edx, 5	      8529	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7	IF_11	CALL_17
0x400899e	      0xbe00000000	                              mov esi, 0	      8529	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7	IF_11	CALL_17
0x40089a3	      0xbf00000000	                              mov edi, 0	      8529	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7	IF_11	CALL_17
0x40089a8	      0xe800000000	                          call 0x40089ad	      8529	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7	IF_11	CALL_17
0x40089ad	          0x4c89fe	                            mov rsi, r15	      8529	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7	IF_11	CALL_17
0x40089b0	          0x4889c7	                            mov rdi, rax	      8529	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7	IF_11	CALL_17
0x40089b3	      0xb800000000	                              mov eax, 0	      8529	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7	IF_11	CALL_17
0x40089b8	      0xe800000000	                          call 0x40089bd	      8529	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7	IF_11	CALL_17
0x40089bd	          0x488b1b	                    mov rbx, qword [rbx]	      8526	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7
0x40089c0	          0x4885db	                           test rbx, rbx	      8526	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7
0x40089c3	            0x75b4	                           jne 0x4008979	      8526	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6	ELSE_2	IF_10	FOR_7
0x40089c5	          0x4d8b36	                    mov r14, qword [r14]	      8508	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6
0x40089c8	          0x4d85f6	                           test r14, r14	      8508	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6
0x40089cb	     0xf8525ffffff	                           jne 0x40088f6	      8508	ldlang.c	ELSE_4	FUNCTION_199	FOR_5	FOR_6
0x40089d1	        0x4d8b6d00	                    mov r13, qword [r13]	      8506	ldlang.c	ELSE_4	FUNCTION_199	FOR_5
0x40089d5	          0x4d85ed	                           test r13, r13	      8506	ldlang.c	ELSE_4	FUNCTION_199	FOR_5
0x40089d8	     0xf8508ffffff	                           jne 0x40088e6	      8506	ldlang.c	ELSE_4	FUNCTION_199	FOR_5
0x40089de	      0x488b442408	                mov rax, qword [rsp + 8]	      8534	ldlang.c	ELSE_4	FUNCTION_199
0x40089e3	      0x4989442458	             mov qword [r12 + 0x58], rax	      8534	ldlang.c	ELSE_4	FUNCTION_199
0x40089e8	      0x49896c2408	                mov qword [r12 + 8], rbp	      8535	ldlang.c	ELSE_4	FUNCTION_199
0x40089ed	        0x807d0000	                       cmp byte [rbp], 0	      8536	ldlang.c	ELSE_4	FUNCTION_199	IF_12
0x40089f1	            0x7416	                            je 0x4008a09	      8536	ldlang.c	ELSE_4	FUNCTION_199	IF_12
0x40089f3	    0x8b0500000000	            mov eax, dword [0x040089f9] 	      8538	ldlang.c	ELSE_4	FUNCTION_199	IF_12
0x40089f9	          0x83c001	                              add eax, 1	      8538	ldlang.c	ELSE_4	FUNCTION_199	IF_12
0x40089fc	    0x890500000000	            mov dword [0x04008a02], eax 	      8538	ldlang.c	ELSE_4	FUNCTION_199	IF_12
0x4008a02	      0x4189442410	             mov dword [r12 + 0x10], eax	      8539	ldlang.c	ELSE_4	FUNCTION_199	IF_12
0x4008a07	            0xeb09	                           jmp 0x4008a12	      8539	ldlang.c	ELSE_4	FUNCTION_199	IF_12
0x4008a09	    0x41c744241000	               mov dword [r12 + 0x10], 0	      8542	ldlang.c	ELSE_4	FUNCTION_199	ELSE_3
0x4008a12	    0x488b15000000	            mov rdx, qword [0x04008a19] 	      8544	ldlang.c	ELSE_4	FUNCTION_199	FOR_8
0x4008a19	          0x4885d2	                           test rdx, rdx	      8544	ldlang.c	ELSE_4	FUNCTION_199	FOR_8
0x4008a1c	            0x7505	                           jne 0x4008a23	      8544	ldlang.c	ELSE_4	FUNCTION_199	FOR_8
0x4008a1e	            0xeb0d	                           jmp 0x4008a2d	      8544	ldlang.c	ELSE_4	FUNCTION_199	FOR_8
0x4008a20	          0x4889c2	                            mov rdx, rax	      8544	ldlang.c	ELSE_4	FUNCTION_199	FOR_8
0x4008a23	          0x488b02	                    mov rax, qword [rdx]	      8544	ldlang.c	ELSE_4	FUNCTION_199	FOR_8
0x4008a26	          0x4885c0	                           test rax, rax	      8544	ldlang.c	ELSE_4	FUNCTION_199	FOR_8
0x4008a29	            0x75f5	                           jne 0x4008a20	      8544	ldlang.c	ELSE_4	FUNCTION_199	FOR_8
0x4008a2b	            0xeb05	                           jmp 0x4008a32	      8544	ldlang.c	ELSE_4	FUNCTION_199	FOR_8
0x4008a2d	      0xba00000000	                              mov edx, 0	      8544	ldlang.c	ELSE_4	FUNCTION_199	FOR_8
0x4008a32	          0x4c8922	                    mov qword [rdx], r12	      8546	ldlang.c	ELSE_4	FUNCTION_199
0x4008a35	        0x4883c418	                           add rsp, 0x18	      8547	ldlang.c	ELSE_4	FUNCTION_199
0x4008a39	              0x5b	                                 pop rbx	      8547	ldlang.c	ELSE_4	FUNCTION_199
0x4008a3a	              0x5d	                                 pop rbp	      8547	ldlang.c	ELSE_4	FUNCTION_199
0x4008a3b	            0x415c	                                 pop r12	      8547	ldlang.c	ELSE_4	FUNCTION_199
0x4008a3d	            0x415d	                                 pop r13	      8547	ldlang.c	ELSE_4	FUNCTION_199
0x4008a3f	            0x415e	                                 pop r14	      8547	ldlang.c	ELSE_4	FUNCTION_199
0x4008a41	            0x415f	                                 pop r15	      8547	ldlang.c	ELSE_4	FUNCTION_199
0x4008a43	              0xc3	                                     ret	      8547	ldlang.c	ELSE_4	FUNCTION_199
lang_startup	IF,1:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,2:ELSE,0	18
0x4007aeb	              0x53	                                push rbx	      7599	ldlang.c	FUNCTION_175
0x4007aec	          0x4889fb	                            mov rbx, rdi	      7599	ldlang.c	FUNCTION_175
0x4007aef	    0x488b05000000	            mov rax, qword [0x04007af6] 	      7600	ldlang.c	FUNCTION_175	IF_1
0x4007af6	      0x4883781000	               cmp qword [rax + 0x10], 0	      7600	ldlang.c	FUNCTION_175	IF_1
0x4007afb	            0x7421	                            je 0x4007b1e	      7600	ldlang.c	FUNCTION_175	IF_1
0x4007afd	      0xba05000000	                              mov edx, 5	      7602	ldlang.c	FUNCTION_175	IF_1	CALL_2
0x4007b02	      0xbe00000000	                              mov esi, 0	      7602	ldlang.c	FUNCTION_175	IF_1	CALL_2
0x4007b07	      0xbf00000000	                              mov edi, 0	      7602	ldlang.c	FUNCTION_175	IF_1	CALL_2
0x4007b0c	      0xe800000000	                          call 0x4007b11	      7602	ldlang.c	FUNCTION_175	IF_1	CALL_2
0x4007b11	          0x4889c7	                            mov rdi, rax	      7602	ldlang.c	FUNCTION_175	IF_1	CALL_2
0x4007b14	      0xb800000000	                              mov eax, 0	      7602	ldlang.c	FUNCTION_175	IF_1	CALL_2
0x4007b19	      0xe800000000	                          call 0x4007b1e	      7602	ldlang.c	FUNCTION_175	IF_1	CALL_2
0x4007b1e	    0x488b05000000	            mov rax, qword [0x04007b25] 	      7604	ldlang.c	FUNCTION_175
0x4007b25	        0x48895810	             mov qword [rax + 0x10], rbx	      7604	ldlang.c	FUNCTION_175
0x4007b29	        0x48895818	             mov qword [rax + 0x18], rbx	      7605	ldlang.c	FUNCTION_175
0x4007b2d	        0x80484904	                 or byte [rax + 0x49], 4	      7606	ldlang.c	FUNCTION_175
0x4007b31	              0x5b	                                 pop rbx	      7607	ldlang.c	FUNCTION_175
0x4007b32	              0xc3	                                     ret	      7607	ldlang.c	FUNCTION_175
output_section_callback_fast	IF,2:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,3:ELSE,0	61
0x40022ec	            0x4156	                                push r14	       523	ldlang.c	FUNCTION_16
0x40022ee	            0x4155	                                push r13	       523	ldlang.c	FUNCTION_16
0x40022f0	            0x4154	                                push r12	       523	ldlang.c	FUNCTION_16
0x40022f2	              0x55	                                push rbp	       523	ldlang.c	FUNCTION_16
0x40022f3	              0x53	                                push rbx	       523	ldlang.c	FUNCTION_16
0x40022f4	          0x4989fe	                            mov r14, rdi	       523	ldlang.c	FUNCTION_16
0x40022f7	          0x4989f4	                            mov r12, rsi	       523	ldlang.c	FUNCTION_16
0x40022fa	          0x4889d5	                            mov rbp, rdx	       523	ldlang.c	FUNCTION_16
0x40022fd	          0x4c89ce	                             mov rsi, r9	       530	ldlang.c	FUNCTION_16	IF_1	CALL_1
0x4002300	          0x4889d7	                            mov rdi, rdx	       530	ldlang.c	FUNCTION_16	IF_1	CALL_1
0x4002303	      0xe8fffcffff	               call sym.unique_section_p	       530	ldlang.c	FUNCTION_16	IF_1	CALL_1
0x4002308	            0x85c0	                           test eax, eax	       530	ldlang.c	FUNCTION_16	IF_1	CALL_1
0x400230a	     0xf858f000000	                           jne 0x400239f	       530	ldlang.c	FUNCTION_16	IF_1	CALL_1
0x4002310	      0xbf18000000	                           mov edi, 0x18	       533	ldlang.c	FUNCTION_16	CALL_2
0x4002315	      0xe800000000	                          call 0x400231a	       533	ldlang.c	FUNCTION_16	CALL_2
0x400231a	          0x4989c5	                            mov r13, rax	       533	ldlang.c	FUNCTION_16	CALL_2
0x400231d	    0x48c740080000	                  mov qword [rax + 8], 0	       534	ldlang.c	FUNCTION_16
0x4002325	    0x48c740100000	               mov qword [rax + 0x10], 0	       535	ldlang.c	FUNCTION_16
0x400232d	          0x488928	                    mov qword [rax], rbp	       536	ldlang.c	FUNCTION_16
0x4002330	        0x498d5e70	                   lea rbx, [r14 + 0x70]	       492	ldlang.c	FUNCTION_15
0x4002334	      0x41837e1800	               cmp dword [r14 + 0x18], 0	       493	ldlang.c	FUNCTION_15	IF_1
0x4002339	            0x7554	                           jne 0x400238f	       493	ldlang.c	FUNCTION_15	IF_1
0x400233b	          0x4d85e4	                           test r12, r12	       494	ldlang.c	FUNCTION_15	IF_1
0x400233e	            0x750b	                           jne 0x400234b	       494	ldlang.c	FUNCTION_15	IF_1
0x4002340	        0x498b5670	            mov rdx, qword [r14 + 0x70] 	       492	ldlang.c	FUNCTION_15
0x4002344	          0x4885d2	                           test rdx, rdx	       497	ldlang.c	FUNCTION_15	IF_1	WHILE_1
0x4002347	            0x7513	                           jne 0x400235c	       497	ldlang.c	FUNCTION_15	IF_1	WHILE_1
0x4002349	            0xeb4c	                           jmp 0x4002397	       497	ldlang.c	FUNCTION_15	IF_1	WHILE_1
0x400234b	    0x41837c241800	               cmp dword [r12 + 0x18], 0	       494	ldlang.c	FUNCTION_15	IF_1
0x4002351	            0x753c	                           jne 0x400238f	       494	ldlang.c	FUNCTION_15	IF_1
0x4002353	        0x498b5670	            mov rdx, qword [r14 + 0x70] 	       492	ldlang.c	FUNCTION_15
0x4002357	            0xebeb	                           jmp 0x4002344	       492	ldlang.c	FUNCTION_15
0x4002359	          0x4889c2	                            mov rdx, rax	       498	ldlang.c	FUNCTION_15	IF_1	WHILE_1
0x400235c	        0x488b4210	            mov rax, qword [rdx + 0x10] 	       498	ldlang.c	FUNCTION_15	IF_1	WHILE_1
0x4002360	          0x4885c0	                           test rax, rax	       497	ldlang.c	FUNCTION_15	IF_1	WHILE_1
0x4002363	            0x75f4	                           jne 0x4002359	       497	ldlang.c	FUNCTION_15	IF_1	WHILE_1
0x4002365	        0x488d5a10	                   lea rbx, [rdx + 0x10]	       498	ldlang.c	FUNCTION_15	IF_1	WHILE_1
0x4002369	            0xeb2c	                           jmp 0x4002397	       498	ldlang.c	FUNCTION_15	IF_1	WHILE_1
0x400236b	      0x418b7c2418	            mov edi, dword [r12 + 0x18] 	       505	ldlang.c	FUNCTION_15	WHILE_2	IF_2	CALL_1
0x4002370	          0x488b10	                    mov rdx, qword [rax]	       505	ldlang.c	FUNCTION_15	WHILE_2	IF_2	CALL_1
0x4002373	          0x4889ee	                            mov rsi, rbp	       505	ldlang.c	FUNCTION_15	WHILE_2	IF_2	CALL_1
0x4002376	      0xe8e9feffff	                call sym.compare_section	       505	ldlang.c	FUNCTION_15	WHILE_2	IF_2	CALL_1
0x400237b	            0x85c0	                           test eax, eax	       505	ldlang.c	FUNCTION_15	WHILE_2	IF_2	CALL_1
0x400237d	            0x7909	                           jns 0x4002388	       505	ldlang.c	FUNCTION_15	WHILE_2	IF_2	CALL_1
0x400237f	          0x488b1b	                    mov rbx, qword [rbx]	       506	ldlang.c	FUNCTION_15	WHILE_2	IF_2
0x4002382	        0x4883c308	                              add rbx, 8	       506	ldlang.c	FUNCTION_15	WHILE_2	IF_2
0x4002386	            0xeb07	                           jmp 0x400238f	       506	ldlang.c	FUNCTION_15	WHILE_2	IF_2
0x4002388	          0x488b1b	                    mov rbx, qword [rbx]	       508	ldlang.c	FUNCTION_15	WHILE_2	ELSE_1
0x400238b	        0x4883c310	                           add rbx, 0x10	       508	ldlang.c	FUNCTION_15	WHILE_2	ELSE_1
0x400238f	          0x488b03	                    mov rax, qword [rbx]	       502	ldlang.c	FUNCTION_15	WHILE_2
0x4002392	          0x4885c0	                           test rax, rax	       502	ldlang.c	FUNCTION_15	WHILE_2
0x4002395	            0x75d4	                           jne 0x400236b	       502	ldlang.c	FUNCTION_15	WHILE_2
0x4002397	          0x4885db	                           test rbx, rbx	       539	ldlang.c	FUNCTION_16	IF_2
0x400239a	            0x7403	                            je 0x400239f	       539	ldlang.c	FUNCTION_16	IF_2
0x400239c	          0x4c892b	                    mov qword [rbx], r13	       540	ldlang.c	FUNCTION_16	IF_2
0x400239f	              0x5b	                                 pop rbx	       541	ldlang.c	FUNCTION_16
0x40023a0	              0x5d	                                 pop rbp	       541	ldlang.c	FUNCTION_16
0x40023a1	            0x415c	                                 pop r12	       541	ldlang.c	FUNCTION_16
0x40023a3	            0x415d	                                 pop r13	       541	ldlang.c	FUNCTION_16
0x40023a5	            0x415e	                                 pop r14	       541	ldlang.c	FUNCTION_16
0x40023a7	              0xc3	                                     ret	       541	ldlang.c	FUNCTION_16
find_section	IF,0:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,1:ELSE,0	23
0x40023a8	              0x53	                                push rbx	       347	ldlang.c	FUNCTION_10
0x40023a9	        0x4883ec20	                           sub rsp, 0x20	       347	ldlang.c	FUNCTION_10
0x40023ad	          0x4889d3	                            mov rbx, rdx	       347	ldlang.c	FUNCTION_10
0x40023b0	    0x64488b042528	                mov rax, qword fs:[0x28]	       347	ldlang.c	FUNCTION_10
0x40023b9	      0x4889442418	             mov qword [rsp + 0x18], rax	       347	ldlang.c	FUNCTION_10
0x40023be	            0x31c0	                            xor eax, eax	       347	ldlang.c	FUNCTION_10
0x40023c0	    0x48c704240000	                      mov qword [rsp], 0	       348	ldlang.c	FUNCTION_10
0x40023c8	    0xc74424080000	                  mov dword [rsp + 8], 0	       348	ldlang.c	FUNCTION_10
0x40023d0	        0x488b7608	                mov rsi, qword [rsi + 8]	       350	ldlang.c	FUNCTION_10	CALL_1
0x40023d4	        0x488b7f20	            mov rdi, qword [rdi + 0x20] 	       350	ldlang.c	FUNCTION_10	CALL_1
0x40023d8	          0x4889e1	                            mov rcx, rsp	       350	ldlang.c	FUNCTION_10	CALL_1
0x40023db	      0xba00000000	                              mov edx, 0	       350	ldlang.c	FUNCTION_10	CALL_1
0x40023e0	      0xe800000000	                          call 0x40023e5	       350	ldlang.c	FUNCTION_10	CALL_1
0x40023e5	        0x8b442408	                mov eax, dword [rsp + 8]	       352	ldlang.c	FUNCTION_10
0x40023e9	            0x8903	                    mov dword [rbx], eax	       352	ldlang.c	FUNCTION_10
0x40023eb	        0x488b0424	                    mov rax, qword [rsp]	       354	ldlang.c	FUNCTION_10
0x40023ef	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       354	ldlang.c	FUNCTION_10
0x40023f4	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       354	ldlang.c	FUNCTION_10
0x40023fd	            0x7405	                            je 0x4002404	       354	ldlang.c	FUNCTION_10
0x40023ff	      0xe800000000	                          call 0x4002404	       354	ldlang.c	FUNCTION_10
0x4002404	        0x4883c420	                           add rsp, 0x20	       354	ldlang.c	FUNCTION_10
0x4002408	              0x5b	                                 pop rbx	       354	ldlang.c	FUNCTION_10
0x4002409	              0xc3	                                     ret	       354	ldlang.c	FUNCTION_10
init_opb	IF,1:WHILE,1:FOR,0:DO,0:SWITCH,0:functions,0:CALL,2:ELSE,0	22
0x400076c	        0x4883ec08	                              sub rsp, 8	      3226	ldlang.c	ELSE_3	FUNCTION_77
0x4000770	    0x488b35000000	            mov rsi, qword [0x04000777] 	      3227	ldlang.c	ELSE_3	FUNCTION_77	CALL_1
0x4000777	    0x8b3d00000000	            mov edi, dword [0x0400077d] 	      3227	ldlang.c	ELSE_3	FUNCTION_77	CALL_1
0x400077d	      0xe800000000	                          call 0x4000782	      3227	ldlang.c	ELSE_3	FUNCTION_77	CALL_1
0x4000782	    0xc70500000000	               mov dword [0x0400078c], 0	      3229	ldlang.c	ELSE_3	FUNCTION_77
0x400078c	          0x83f801	                              cmp eax, 1	      3230	ldlang.c	ELSE_3	FUNCTION_77	IF_1
0x400078f	            0x7616	                           jbe 0x40007a7	      3230	ldlang.c	ELSE_3	FUNCTION_77	IF_1
0x4000791	            0x89c2	                            mov edx, eax	      3231	ldlang.c	ELSE_3	FUNCTION_77	IF_1	WHILE_1
0x4000793	          0x83e201	                              and edx, 1	      3231	ldlang.c	ELSE_3	FUNCTION_77	IF_1	WHILE_1
0x4000796	            0x7514	                           jne 0x40007ac	      3231	ldlang.c	ELSE_3	FUNCTION_77	IF_1	WHILE_1
0x4000798	            0xd1e8	                              shr eax, 1	      3233	ldlang.c	ELSE_3	FUNCTION_77	IF_1	WHILE_1
0x400079a	          0x83c201	                              add edx, 1	      3234	ldlang.c	ELSE_3	FUNCTION_77	IF_1	WHILE_1
0x400079d	            0xa801	                              test al, 1	      3231	ldlang.c	ELSE_3	FUNCTION_77	IF_1	WHILE_1
0x400079f	            0x74f7	                            je 0x4000798	      3231	ldlang.c	ELSE_3	FUNCTION_77	IF_1	WHILE_1
0x40007a1	    0x891500000000	            mov dword [0x040007a7], edx 	      3231	ldlang.c	ELSE_3	FUNCTION_77	IF_1	WHILE_1
0x40007a7	          0x83f801	                              cmp eax, 1	      3236	ldlang.c	ELSE_3	FUNCTION_77	CALL_2
0x40007aa	            0x740f	                            je 0x40007bb	      3236	ldlang.c	ELSE_3	FUNCTION_77	CALL_2
0x40007ac	      0xbea40c0000	                          mov esi, 0xca4	      3236	ldlang.c	ELSE_3	FUNCTION_77	CALL_2
0x40007b1	      0xbf00000000	                              mov edi, 0	      3236	ldlang.c	ELSE_3	FUNCTION_77	CALL_2
0x40007b6	      0xe800000000	                          call 0x40007bb	      3236	ldlang.c	ELSE_3	FUNCTION_77	CALL_2
0x40007bb	        0x4883c408	                              add rsp, 8	      3237	ldlang.c	ELSE_3	FUNCTION_77
0x40007bf	              0xc3	                                     ret	      3237	ldlang.c	ELSE_3	FUNCTION_77
new_afile	IF,2:WHILE,0:FOR,0:DO,0:SWITCH,1:functions,0:CALL,4:ELSE,2	117
0x40031f7	            0x4155	                                push r13	      1060	ldlang.c	FUNCTION_34
0x40031f9	            0x4154	                                push r12	      1060	ldlang.c	FUNCTION_34
0x40031fb	              0x55	                                push rbp	      1060	ldlang.c	FUNCTION_34
0x40031fc	              0x53	                                push rbx	      1060	ldlang.c	FUNCTION_34
0x40031fd	        0x4883ec08	                              sub rsp, 8	      1060	ldlang.c	FUNCTION_34
0x4003201	          0x4989fc	                            mov r12, rdi	      1060	ldlang.c	FUNCTION_34
0x4003204	            0x89f5	                            mov ebp, esi	      1060	ldlang.c	FUNCTION_34
0x4003206	          0x4989d5	                            mov r13, rdx	      1060	ldlang.c	FUNCTION_34
0x4003209	    0xc70500000000	               mov dword [0x04003213], 1	      1063	ldlang.c	FUNCTION_34
0x4003213	            0x85c9	                           test ecx, ecx	      1065	ldlang.c	FUNCTION_34	IF_1
0x4003215	            0x741b	                            je 0x4003232	      1065	ldlang.c	FUNCTION_34	IF_1
0x4003217	    0x488b15000000	            mov rdx, qword [0x0400321e] 	      1066	ldlang.c	FUNCTION_34	IF_1
0x400321e	      0xbe58000000	                           mov esi, 0x58	      1066	ldlang.c	FUNCTION_34	IF_1
0x4003223	      0xbf02000000	                              mov edi, 2	      1066	ldlang.c	FUNCTION_34	IF_1
0x4003228	      0xe89bffffff	                  call sym.new_statement	      1066	ldlang.c	FUNCTION_34	IF_1
0x400322d	          0x4889c3	                            mov rbx, rax	      1066	ldlang.c	FUNCTION_34	IF_1
0x4003230	            0xeb1b	                           jmp 0x400324d	      1066	ldlang.c	FUNCTION_34	IF_1
0x4003232	      0xbf58000000	                           mov edi, 0x58	      1069	ldlang.c	FUNCTION_34	ELSE_1
0x4003237	      0xe800000000	                          call 0x400323c	      1069	ldlang.c	FUNCTION_34	ELSE_1
0x400323c	          0x4889c3	                            mov rbx, rax	      1069	ldlang.c	FUNCTION_34	ELSE_1
0x400323f	    0xc74008020000	                  mov dword [rax + 8], 2	      1071	ldlang.c	FUNCTION_34	ELSE_1
0x4003246	    0x48c700000000	                      mov qword [rax], 0	      1072	ldlang.c	FUNCTION_34	ELSE_1
0x400324d	    0x48c743200000	               mov qword [rbx + 0x20], 0	        90	string3.h	FUNCTION_248	CALL_5
0x4003255	    0x48c743500000	               mov qword [rbx + 0x50], 0	        90	string3.h	FUNCTION_248	CALL_5
0x400325d	        0x488d7b28	                   lea rdi, [rbx + 0x28]	        90	string3.h	FUNCTION_248	CALL_5
0x4003261	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_248	CALL_5
0x4003265	            0x89d8	                            mov eax, ebx	        90	string3.h	FUNCTION_248	CALL_5
0x4003267	            0x29f8	                            sub eax, edi	        90	string3.h	FUNCTION_248	CALL_5
0x4003269	          0x8d4858	                   lea ecx, [rax + 0x58]	        90	string3.h	FUNCTION_248	CALL_5
0x400326c	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_248	CALL_5
0x400326f	            0x89c9	                            mov ecx, ecx	        90	string3.h	FUNCTION_248	CALL_5
0x4003271	      0xb800000000	                              mov eax, 0	        90	string3.h	FUNCTION_248	CALL_5
0x4003276	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_248	CALL_5
0x4003279	        0x4c896b40	             mov qword [rbx + 0x40], r13	      1077	ldlang.c	FUNCTION_34
0x400327d	     0xfb605000000	           movzx eax, byte [0x04003284] 	      1078	ldlang.c	FUNCTION_34
0x4003284	            0x89c1	                            mov ecx, eax	      1078	ldlang.c	FUNCTION_34
0x4003286	          0x83e120	                           and ecx, 0x20	      1078	ldlang.c	FUNCTION_34
0x4003289	         0xfb67348	           movzx esi, byte [rbx + 0x48] 	      1078	ldlang.c	FUNCTION_34
0x400328d	          0x83e69f	                     and esi, 0xffffff9f	      1078	ldlang.c	FUNCTION_34
0x4003290	            0x89c2	                            mov edx, eax	      1079	ldlang.c	FUNCTION_34
0x4003292	          0x83e240	                           and edx, 0x40	      1079	ldlang.c	FUNCTION_34
0x4003295	             0x9f1	                             or ecx, esi	      1079	ldlang.c	FUNCTION_34
0x4003297	             0x9d1	                             or ecx, edx	      1079	ldlang.c	FUNCTION_34
0x4003299	          0x83e080	                     and eax, 0xffffff80	      1080	ldlang.c	FUNCTION_34
0x400329c	            0x89c2	                            mov edx, eax	      1080	ldlang.c	FUNCTION_34
0x400329e	            0x89c8	                            mov eax, ecx	      1080	ldlang.c	FUNCTION_34
0x40032a0	          0x83e077	                           and eax, 0x77	      1080	ldlang.c	FUNCTION_34
0x40032a3	     0xfb60d000000	           movzx ecx, byte [0x040032aa] 	      1081	ldlang.c	FUNCTION_34
0x40032aa	          0x83e101	                              and ecx, 1	      1081	ldlang.c	FUNCTION_34
0x40032ad	         0xfb67349	           movzx esi, byte [rbx + 0x49] 	      1081	ldlang.c	FUNCTION_34
0x40032b1	          0x83e6fe	                     and esi, 0xfffffffe	      1081	ldlang.c	FUNCTION_34
0x40032b4	             0x9f1	                             or ecx, esi	      1081	ldlang.c	FUNCTION_34
0x40032b6	          0x884b49	               mov byte [rbx + 0x49], cl	      1081	ldlang.c	FUNCTION_34
0x40032b9	     0xfb60d000000	           movzx ecx, byte [0x040032c0] 	      1082	ldlang.c	FUNCTION_34
0x40032c0	          0x83e108	                              and ecx, 8	      1082	ldlang.c	FUNCTION_34
0x40032c3	             0x9d0	                             or eax, edx	      1082	ldlang.c	FUNCTION_34
0x40032c5	             0x9c8	                             or eax, ecx	      1082	ldlang.c	FUNCTION_34
0x40032c7	          0x884348	               mov byte [rbx + 0x48], al	      1082	ldlang.c	FUNCTION_34
0x40032ca	          0x83fd05	                              cmp ebp, 5	      1084	ldlang.c	FUNCTION_34	SWITCH_1
0x40032cd	     0xf87a6000000	                            ja 0x4003379	      1084	ldlang.c	FUNCTION_34	SWITCH_1
0x40032d3	            0x89ed	                            mov ebp, ebp	      1084	ldlang.c	FUNCTION_34	SWITCH_1
0x40032d5	    0xff24ed000000	                       jmp qword [rbp*8]	      1084	ldlang.c	FUNCTION_34	SWITCH_1
0x40032dc	        0x4c896310	             mov qword [rbx + 0x10], r12	      1087	ldlang.c	FUNCTION_34	SWITCH_1
0x40032e0	        0x4c896318	             mov qword [rbx + 0x18], r12	      1088	ldlang.c	FUNCTION_34	SWITCH_1
0x40032e4	        0x804b4904	                 or byte [rbx + 0x49], 4	      1089	ldlang.c	FUNCTION_34	SWITCH_1
0x40032e8	        0x804b4810	              or byte [rbx + 0x48], 0x10	      1090	ldlang.c	FUNCTION_34	SWITCH_1
0x40032ec	      0xe997000000	                           jmp 0x4003388	      1091	ldlang.c	FUNCTION_34	SWITCH_1
0x40032f1	        0x4c896310	             mov qword [rbx + 0x10], r12	      1093	ldlang.c	FUNCTION_34	SWITCH_1
0x40032f5	        0x4c896318	             mov qword [rbx + 0x18], r12	      1094	ldlang.c	FUNCTION_34	SWITCH_1
0x40032f9	      0xe98a000000	                           jmp 0x4003388	      1095	ldlang.c	FUNCTION_34	SWITCH_1
0x40032fe	      0x41803c243a	                    cmp byte [r12], 0x3a	      1097	ldlang.c	FUNCTION_34	SWITCH_1	IF_2
0x4003303	            0x7517	                           jne 0x400331c	      1097	ldlang.c	FUNCTION_34	SWITCH_1	IF_2
0x4003305	    0x41807c240100	                   cmp byte [r12 + 1], 0	      1097	ldlang.c	FUNCTION_34	SWITCH_1	IF_2
0x400330b	            0x740f	                            je 0x400331c	      1097	ldlang.c	FUNCTION_34	SWITCH_1	IF_2
0x400330d	      0x498d442401	                      lea rax, [r12 + 1]	      1099	ldlang.c	FUNCTION_34	SWITCH_1	IF_2
0x4003312	        0x48894310	             mov qword [rbx + 0x10], rax	      1099	ldlang.c	FUNCTION_34	SWITCH_1	IF_2
0x4003316	        0x804b4802	                 or byte [rbx + 0x48], 2	      1100	ldlang.c	FUNCTION_34	SWITCH_1	IF_2
0x400331a	            0xeb04	                           jmp 0x4003320	      1100	ldlang.c	FUNCTION_34	SWITCH_1	IF_2
0x400331c	        0x4c896310	             mov qword [rbx + 0x10], r12	      1103	ldlang.c	FUNCTION_34	SWITCH_1	ELSE_2
0x4003320	      0xba00000000	                              mov edx, 0	      1104	ldlang.c	FUNCTION_34	SWITCH_1	CALL_2
0x4003325	          0x4c89e6	                            mov rsi, r12	      1104	ldlang.c	FUNCTION_34	SWITCH_1	CALL_2
0x4003328	      0xbf00000000	                              mov edi, 0	      1104	ldlang.c	FUNCTION_34	SWITCH_1	CALL_2
0x400332d	      0xb800000000	                              mov eax, 0	      1104	ldlang.c	FUNCTION_34	SWITCH_1	CALL_2
0x4003332	      0xe800000000	                          call 0x4003337	      1104	ldlang.c	FUNCTION_34	SWITCH_1	CALL_2
0x4003337	        0x48894318	             mov qword [rbx + 0x18], rax	      1104	ldlang.c	FUNCTION_34	SWITCH_1	CALL_2
0x400333b	        0x804b4904	                 or byte [rbx + 0x49], 4	      1106	ldlang.c	FUNCTION_34	SWITCH_1
0x400333f	         0xfb64348	           movzx eax, byte [rbx + 0x48] 	      1107	ldlang.c	FUNCTION_34	SWITCH_1
0x4003343	          0x83c805	                               or eax, 5	      1107	ldlang.c	FUNCTION_34	SWITCH_1
0x4003346	          0x884348	               mov byte [rbx + 0x48], al	      1107	ldlang.c	FUNCTION_34	SWITCH_1
0x4003349	            0xeb3d	                           jmp 0x4003388	      1108	ldlang.c	FUNCTION_34	SWITCH_1
0x400334b	        0x4c896310	             mov qword [rbx + 0x10], r12	      1110	ldlang.c	FUNCTION_34	SWITCH_1
0x400334f	        0x4c896318	             mov qword [rbx + 0x18], r12	      1111	ldlang.c	FUNCTION_34	SWITCH_1
0x4003353	        0x804b4804	                 or byte [rbx + 0x48], 4	      1112	ldlang.c	FUNCTION_34	SWITCH_1
0x4003357	            0xeb2f	                           jmp 0x4003388	      1113	ldlang.c	FUNCTION_34	SWITCH_1
0x4003359	        0x4c896310	             mov qword [rbx + 0x10], r12	      1115	ldlang.c	FUNCTION_34	SWITCH_1
0x400335d	        0x4c896318	             mov qword [rbx + 0x18], r12	      1116	ldlang.c	FUNCTION_34	SWITCH_1
0x4003361	        0x804b4904	                 or byte [rbx + 0x49], 4	      1117	ldlang.c	FUNCTION_34	SWITCH_1
0x4003365	        0x804b4804	                 or byte [rbx + 0x48], 4	      1118	ldlang.c	FUNCTION_34	SWITCH_1
0x4003369	            0xeb1d	                           jmp 0x4003388	      1119	ldlang.c	FUNCTION_34	SWITCH_1
0x400336b	        0x4c896310	             mov qword [rbx + 0x10], r12	      1121	ldlang.c	FUNCTION_34	SWITCH_1
0x400336f	        0x4c896318	             mov qword [rbx + 0x18], r12	      1122	ldlang.c	FUNCTION_34	SWITCH_1
0x4003373	        0x804b4904	                 or byte [rbx + 0x49], 4	      1123	ldlang.c	FUNCTION_34	SWITCH_1
0x4003377	            0xeb0f	                           jmp 0x4003388	      1124	ldlang.c	FUNCTION_34	SWITCH_1
0x4003379	      0xbe66040000	                          mov esi, 0x466	      1126	ldlang.c	FUNCTION_34	SWITCH_1	CALL_3
0x400337e	      0xbf00000000	                              mov edi, 0	      1126	ldlang.c	FUNCTION_34	SWITCH_1	CALL_3
0x4003383	      0xe800000000	                          call 0x4003388	      1126	ldlang.c	FUNCTION_34	SWITCH_1	CALL_3
0x4003388	    0x488b05000000	            mov rax, qword [0x0400338f] 	      7673	ldlang.c	FUNCTION_179
0x400338f	          0x488918	                    mov qword [rax], rbx	      7673	ldlang.c	FUNCTION_179
0x4003392	        0x488d4338	                   lea rax, [rbx + 0x38]	      1131	ldlang.c	FUNCTION_34
0x4003396	    0x488905000000	            mov qword [0x0400339d], rax 	      1131	ldlang.c	FUNCTION_34
0x400339d	          0x4889d8	                            mov rax, rbx	      1133	ldlang.c	FUNCTION_34
0x40033a0	        0x4883c408	                              add rsp, 8	      1133	ldlang.c	FUNCTION_34
0x40033a4	              0x5b	                                 pop rbx	      1133	ldlang.c	FUNCTION_34
0x40033a5	              0x5d	                                 pop rbp	      1133	ldlang.c	FUNCTION_34
0x40033a6	            0x415c	                                 pop r12	      1133	ldlang.c	FUNCTION_34
0x40033a8	            0x415d	                                 pop r13	      1133	ldlang.c	FUNCTION_34
0x40033aa	              0xc3	                                     ret	      1133	ldlang.c	FUNCTION_34
walk_wild_section_specs3_wild2	IF,4:WHILE,0:FOR,1:DO,0:SWITCH,0:functions,0:CALL,7:ELSE,2	86
0x40025c1	            0x4157	                                push r15	       649	ldlang.c	FUNCTION_21
0x40025c3	            0x4156	                                push r14	       649	ldlang.c	FUNCTION_21
0x40025c5	            0x4155	                                push r13	       649	ldlang.c	FUNCTION_21
0x40025c7	            0x4154	                                push r12	       649	ldlang.c	FUNCTION_21
0x40025c9	              0x55	                                push rbp	       649	ldlang.c	FUNCTION_21
0x40025ca	              0x53	                                push rbx	       649	ldlang.c	FUNCTION_21
0x40025cb	        0x4883ec38	                           sub rsp, 0x38	       649	ldlang.c	FUNCTION_21
0x40025cf	          0x4989fd	                            mov r13, rdi	       649	ldlang.c	FUNCTION_21
0x40025d2	          0x4989f6	                            mov r14, rsi	       649	ldlang.c	FUNCTION_21
0x40025d5	      0x4889542408	                mov qword [rsp + 8], rdx	       649	ldlang.c	FUNCTION_21
0x40025da	      0x48894c2410	             mov qword [rsp + 0x10], rcx	       649	ldlang.c	FUNCTION_21
0x40025df	    0x64488b042528	                mov rax, qword fs:[0x28]	       649	ldlang.c	FUNCTION_21
0x40025e8	      0x4889442428	             mov qword [rsp + 0x28], rax	       649	ldlang.c	FUNCTION_21
0x40025ed	            0x31c0	                            xor eax, eax	       649	ldlang.c	FUNCTION_21
0x40025ef	        0x488b4750	            mov rax, qword [rdi + 0x50] 	       651	ldlang.c	FUNCTION_21
0x40025f3	      0x4889442418	             mov qword [rsp + 0x18], rax	       651	ldlang.c	FUNCTION_21
0x40025f8	        0x4c8b6758	            mov r12, qword [rdi + 0x58] 	       652	ldlang.c	FUNCTION_21
0x40025fc	        0x4c8b7f60	            mov r15, qword [rdi + 0x60] 	       653	ldlang.c	FUNCTION_21
0x4002600	      0x488d542424	                   lea rdx, [rsp + 0x24]	       655	ldlang.c	FUNCTION_21	CALL_1
0x4002605	          0x4889c6	                            mov rsi, rax	       655	ldlang.c	FUNCTION_21	CALL_1
0x4002608	          0x4c89f7	                            mov rdi, r14	       655	ldlang.c	FUNCTION_21	CALL_1
0x400260b	      0xe898fdffff	                   call sym.find_section	       655	ldlang.c	FUNCTION_21	CALL_1
0x4002610	        0x48890424	                    mov qword [rsp], rax	       655	ldlang.c	FUNCTION_21	CALL_1
0x4002614	      0x837c242400	               cmp dword [rsp + 0x24], 0	       657	ldlang.c	FUNCTION_21	IF_1
0x4002619	            0x741a	                            je 0x4002635	       657	ldlang.c	FUNCTION_21	IF_1
0x400261b	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       659	ldlang.c	FUNCTION_21	IF_1	CALL_2
0x4002620	      0x488b542408	                mov rdx, qword [rsp + 8]	       659	ldlang.c	FUNCTION_21	IF_1	CALL_2
0x4002625	          0x4c89f6	                            mov rsi, r14	       659	ldlang.c	FUNCTION_21	IF_1	CALL_2
0x4002628	          0x4c89ef	                            mov rdi, r13	       659	ldlang.c	FUNCTION_21	IF_1	CALL_2
0x400262b	      0xe8acfaffff	      call sym.walk_wild_section_general	       659	ldlang.c	FUNCTION_21	IF_1	CALL_2
0x4002630	      0xe9a2000000	                           jmp 0x40026d7	       659	ldlang.c	FUNCTION_21	IF_1	CALL_2
0x4002635	        0x498b4620	            mov rax, qword [r14 + 0x20] 	       663	ldlang.c	FUNCTION_21	FOR_1
0x4002639	    0x488b98900000	            mov rbx, qword [rax + 0x90] 	       663	ldlang.c	FUNCTION_21	FOR_1
0x4002640	          0x4885db	                           test rbx, rbx	       663	ldlang.c	FUNCTION_21	FOR_1
0x4002643	     0xf848e000000	                            je 0x40026d7	       663	ldlang.c	FUNCTION_21	FOR_1
0x4002649	        0x48391c24	                    cmp qword [rsp], rbx	       665	ldlang.c	FUNCTION_21	FOR_1	IF_2
0x400264d	            0x751f	                           jne 0x400266e	       665	ldlang.c	FUNCTION_21	FOR_1	IF_2
0x400264f	      0x4c8b4c2410	              mov r9, qword [rsp + 0x10]	       666	ldlang.c	FUNCTION_21	FOR_1	CALL_3
0x4002654	      0x4c8b442408	                 mov r8, qword [rsp + 8]	       666	ldlang.c	FUNCTION_21	FOR_1	CALL_3
0x4002659	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       666	ldlang.c	FUNCTION_21	FOR_1	CALL_3
0x400265e	          0x4889da	                            mov rdx, rbx	       666	ldlang.c	FUNCTION_21	FOR_1	CALL_3
0x4002661	          0x4c89f6	                            mov rsi, r14	       666	ldlang.c	FUNCTION_21	FOR_1	CALL_3
0x4002664	          0x4c89ef	                            mov rdi, r13	       666	ldlang.c	FUNCTION_21	FOR_1	CALL_3
0x4002667	      0xe8dbf8ffff	     call sym.walk_wild_consider_section	       666	ldlang.c	FUNCTION_21	FOR_1	CALL_3
0x400266c	            0xeb5c	                           jmp 0x40026ca	       666	ldlang.c	FUNCTION_21	FOR_1	CALL_3
0x400266e	          0x488b2b	                    mov rbp, qword [rbx]	       669	ldlang.c	FUNCTION_21	FOR_1	ELSE_1
0x4002671	      0x498b7c2408	                mov rdi, qword [r12 + 8]	       670	ldlang.c	FUNCTION_21	FOR_1	ELSE_1	CALL_4
0x4002676	          0x4889ee	                            mov rsi, rbp	       670	ldlang.c	FUNCTION_21	FOR_1	ELSE_1	CALL_4
0x4002679	      0xe8ded9ffff	              call sym.match_simple_wild	       670	ldlang.c	FUNCTION_21	FOR_1	ELSE_1	CALL_4
0x400267e	            0x85c0	                           test eax, eax	       672	ldlang.c	FUNCTION_21	FOR_1	ELSE_1	IF_3
0x4002680	            0x741d	                            je 0x400269f	       672	ldlang.c	FUNCTION_21	FOR_1	ELSE_1	IF_3
0x4002682	      0x4c8b4c2410	              mov r9, qword [rsp + 0x10]	       673	ldlang.c	FUNCTION_21	FOR_1	ELSE_1	CALL_5
0x4002687	      0x4c8b442408	                 mov r8, qword [rsp + 8]	       673	ldlang.c	FUNCTION_21	FOR_1	ELSE_1	CALL_5
0x400268c	          0x4c89e1	                            mov rcx, r12	       673	ldlang.c	FUNCTION_21	FOR_1	ELSE_1	CALL_5
0x400268f	          0x4889da	                            mov rdx, rbx	       673	ldlang.c	FUNCTION_21	FOR_1	ELSE_1	CALL_5
0x4002692	          0x4c89f6	                            mov rsi, r14	       673	ldlang.c	FUNCTION_21	FOR_1	ELSE_1	CALL_5
0x4002695	          0x4c89ef	                            mov rdi, r13	       673	ldlang.c	FUNCTION_21	FOR_1	ELSE_1	CALL_5
0x4002698	      0xe8aaf8ffff	     call sym.walk_wild_consider_section	       673	ldlang.c	FUNCTION_21	FOR_1	ELSE_1	CALL_5
0x400269d	            0xeb2b	                           jmp 0x40026ca	       673	ldlang.c	FUNCTION_21	FOR_1	ELSE_1	CALL_5
0x400269f	        0x498b7f08	                mov rdi, qword [r15 + 8]	       676	ldlang.c	FUNCTION_21	FOR_1	ELSE_1	ELSE_2	CALL_6
0x40026a3	          0x4889ee	                            mov rsi, rbp	       676	ldlang.c	FUNCTION_21	FOR_1	ELSE_1	ELSE_2	CALL_6
0x40026a6	      0xe8b1d9ffff	              call sym.match_simple_wild	       676	ldlang.c	FUNCTION_21	FOR_1	ELSE_1	ELSE_2	CALL_6
0x40026ab	            0x85c0	                           test eax, eax	       677	ldlang.c	FUNCTION_21	FOR_1	ELSE_1	ELSE_2	IF_4
0x40026ad	            0x741b	                            je 0x40026ca	       677	ldlang.c	FUNCTION_21	FOR_1	ELSE_1	ELSE_2	IF_4
0x40026af	      0x4c8b4c2410	              mov r9, qword [rsp + 0x10]	       678	ldlang.c	FUNCTION_21	FOR_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x40026b4	      0x4c8b442408	                 mov r8, qword [rsp + 8]	       678	ldlang.c	FUNCTION_21	FOR_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x40026b9	          0x4c89f9	                            mov rcx, r15	       678	ldlang.c	FUNCTION_21	FOR_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x40026bc	          0x4889da	                            mov rdx, rbx	       678	ldlang.c	FUNCTION_21	FOR_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x40026bf	          0x4c89f6	                            mov rsi, r14	       678	ldlang.c	FUNCTION_21	FOR_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x40026c2	          0x4c89ef	                            mov rdi, r13	       678	ldlang.c	FUNCTION_21	FOR_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x40026c5	      0xe87df8ffff	     call sym.walk_wild_consider_section	       678	ldlang.c	FUNCTION_21	FOR_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x40026ca	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	       663	ldlang.c	FUNCTION_21	FOR_1
0x40026ce	          0x4885db	                           test rbx, rbx	       663	ldlang.c	FUNCTION_21	FOR_1
0x40026d1	     0xf8572ffffff	                           jne 0x4002649	       663	ldlang.c	FUNCTION_21	FOR_1
0x40026d7	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       683	ldlang.c	FUNCTION_21
0x40026dc	    0x644833042528	                xor rax, qword fs:[0x28]	       683	ldlang.c	FUNCTION_21
0x40026e5	            0x7405	                            je 0x40026ec	       683	ldlang.c	FUNCTION_21
0x40026e7	      0xe800000000	                          call 0x40026ec	       683	ldlang.c	FUNCTION_21
0x40026ec	        0x4883c438	                           add rsp, 0x38	       683	ldlang.c	FUNCTION_21
0x40026f0	              0x5b	                                 pop rbx	       683	ldlang.c	FUNCTION_21
0x40026f1	              0x5d	                                 pop rbp	       683	ldlang.c	FUNCTION_21
0x40026f2	            0x415c	                                 pop r12	       683	ldlang.c	FUNCTION_21
0x40026f4	            0x415d	                                 pop r13	       683	ldlang.c	FUNCTION_21
0x40026f6	            0x415e	                                 pop r14	       683	ldlang.c	FUNCTION_21
0x40026f8	            0x415f	                                 pop r15	       683	ldlang.c	FUNCTION_21
0x40026fa	              0xc3	                                     ret	       683	ldlang.c	FUNCTION_21
compare_section	IF,4:WHILE,0:FOR,0:DO,0:SWITCH,1:functions,0:CALL,3:ELSE,1	45
0x4002264	            0x4154	                                push r12	       429	ldlang.c	FUNCTION_14
0x4002266	              0x55	                                push rbp	       429	ldlang.c	FUNCTION_14
0x4002267	              0x53	                                push rbx	       429	ldlang.c	FUNCTION_14
0x4002268	          0x83ff06	                              cmp edi, 6	       433	ldlang.c	FUNCTION_14	SWITCH_1
0x400226b	            0x770f	                            ja 0x400227c	       433	ldlang.c	FUNCTION_14	SWITCH_1
0x400226d	          0x4889f5	                            mov rbp, rsi	       433	ldlang.c	FUNCTION_14	SWITCH_1
0x4002270	          0x4989d4	                            mov r12, rdx	       433	ldlang.c	FUNCTION_14	SWITCH_1
0x4002273	            0x89ff	                            mov edi, edi	       433	ldlang.c	FUNCTION_14	SWITCH_1
0x4002275	    0xff24fd000000	                       jmp qword [rdi*8]	       433	ldlang.c	FUNCTION_14	SWITCH_1
0x400227c	      0xba00000000	                              mov edx, 0	       436	ldlang.c	FUNCTION_14	SWITCH_1	CALL_1
0x4002281	      0xbeb4010000	                          mov esi, 0x1b4	       436	ldlang.c	FUNCTION_14	SWITCH_1	CALL_1
0x4002286	      0xbf00000000	                              mov edi, 0	       436	ldlang.c	FUNCTION_14	SWITCH_1	CALL_1
0x400228b	      0xe800000000	                          call 0x4002290	       436	ldlang.c	FUNCTION_14	SWITCH_1	CALL_1
0x4002290	          0x488b3e	                    mov rdi, qword [rsi]	       440	ldlang.c	FUNCTION_14	SWITCH_1	CALL_2
0x4002293	      0xe8e0feffff	              call sym.get_init_priority	       440	ldlang.c	FUNCTION_14	SWITCH_1	CALL_2
0x4002298	          0x4889c3	                            mov rbx, rax	       440	ldlang.c	FUNCTION_14	SWITCH_1	CALL_2
0x400229b	        0x498b3c24	                    mov rdi, qword [r12]	       442	ldlang.c	FUNCTION_14	SWITCH_1	CALL_3
0x400229f	      0xe8d4feffff	              call sym.get_init_priority	       442	ldlang.c	FUNCTION_14	SWITCH_1	CALL_3
0x40022a4	          0x4885db	                           test rbx, rbx	       443	ldlang.c	FUNCTION_14	SWITCH_1	IF_1
0x40022a7	            0x7417	                            je 0x40022c0	       443	ldlang.c	FUNCTION_14	SWITCH_1	IF_1
0x40022a9	          0x4885c0	                           test rax, rax	       443	ldlang.c	FUNCTION_14	SWITCH_1	IF_1
0x40022ac	            0x7412	                            je 0x40022c0	       443	ldlang.c	FUNCTION_14	SWITCH_1	IF_1
0x40022ae	            0x89d9	                            mov ecx, ebx	       446	ldlang.c	FUNCTION_14	SWITCH_1	IF_2
0x40022b0	            0x29c1	                            sub ecx, eax	       446	ldlang.c	FUNCTION_14	SWITCH_1	IF_2
0x40022b2	            0x89c8	                            mov eax, ecx	       446	ldlang.c	FUNCTION_14	SWITCH_1	IF_2
0x40022b4	            0x7531	                           jne 0x40022e7	       446	ldlang.c	FUNCTION_14	SWITCH_1	IF_2
0x40022b6	            0xeb08	                           jmp 0x40022c0	       446	ldlang.c	FUNCTION_14	SWITCH_1	IF_2
0x40022b8	          0x8b4270	            mov eax, dword [rdx + 0x70] 	       452	ldlang.c	FUNCTION_14	SWITCH_1
0x40022bb	          0x2b4670	             sub eax, dword [rsi + 0x70]	       454	ldlang.c	FUNCTION_14	SWITCH_1	IF_3
0x40022be	            0x7527	                           jne 0x40022e7	       454	ldlang.c	FUNCTION_14	SWITCH_1	IF_3
0x40022c0	        0x498b3424	                    mov rsi, qword [r12]	       460	ldlang.c	FUNCTION_14	SWITCH_1
0x40022c4	        0x488b7d00	                    mov rdi, qword [rbp]	       460	ldlang.c	FUNCTION_14	SWITCH_1
0x40022c8	      0xe800000000	                          call 0x40022cd	       460	ldlang.c	FUNCTION_14	SWITCH_1
0x40022cd	            0xeb18	                           jmp 0x40022e7	       462	ldlang.c	FUNCTION_14	SWITCH_1
0x40022cf	          0x488b32	                    mov rsi, qword [rdx]	       465	ldlang.c	FUNCTION_14	SWITCH_1
0x40022d2	        0x488b7d00	                    mov rdi, qword [rbp]	       465	ldlang.c	FUNCTION_14	SWITCH_1
0x40022d6	      0xe800000000	                          call 0x40022db	       465	ldlang.c	FUNCTION_14	SWITCH_1
0x40022db	            0x85c0	                           test eax, eax	       467	ldlang.c	FUNCTION_14	SWITCH_1	IF_4
0x40022dd	            0x7508	                           jne 0x40022e7	       467	ldlang.c	FUNCTION_14	SWITCH_1	IF_4
0x40022df	      0x418b442470	            mov eax, dword [r12 + 0x70] 	       472	ldlang.c	FUNCTION_14	SWITCH_1
0x40022e4	          0x2b4570	             sub eax, dword [rbp + 0x70]	       472	ldlang.c	FUNCTION_14	SWITCH_1
0x40022e7	              0x5b	                                 pop rbx	       478	ldlang.c	FUNCTION_14
0x40022e8	              0x5d	                                 pop rbp	       478	ldlang.c	FUNCTION_14
0x40022e9	            0x415c	                                 pop r12	       478	ldlang.c	FUNCTION_14
0x40022eb	              0xc3	                                     ret	       478	ldlang.c	FUNCTION_14
lang_add_output_format	IF,3:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,0:ELSE,1	19
0x4007f38	    0x48833d000000	               cmp qword [0x04007f40], 0	      7685	ldlang.c	FUNCTION_180	IF_1
0x4007f40	            0x7404	                            je 0x4007f46	      7685	ldlang.c	FUNCTION_180	IF_1
0x4007f42	            0x85c9	                           test ecx, ecx	      7685	ldlang.c	FUNCTION_180	IF_1
0x4007f44	            0x752d	                           jne 0x4007f73	      7685	ldlang.c	FUNCTION_180	IF_1
0x4007f46	    0x8b0500000000	            mov eax, dword [0x04007f4c] 	      7687	ldlang.c	FUNCTION_180	IF_1	IF_2
0x4007f4c	          0x4885f6	                           test rsi, rsi	      7688	ldlang.c	FUNCTION_180	IF_1	IF_2
0x4007f4f	            0x7405	                            je 0x4007f56	      7688	ldlang.c	FUNCTION_180	IF_1	IF_2
0x4007f51	          0x83f801	                              cmp eax, 1	      7688	ldlang.c	FUNCTION_180	IF_1	IF_2
0x4007f54	            0x7413	                            je 0x4007f69	      7688	ldlang.c	FUNCTION_180	IF_1	IF_2
0x4007f56	          0x4885d2	                           test rdx, rdx	      7691	ldlang.c	FUNCTION_180	IF_1	ELSE_1	IF_3
0x4007f59	            0x7411	                            je 0x4007f6c	      7691	ldlang.c	FUNCTION_180	IF_1	ELSE_1	IF_3
0x4007f5b	          0x83f802	                              cmp eax, 2	      7691	ldlang.c	FUNCTION_180	IF_1	ELSE_1	IF_3
0x4007f5e	           0xf94c0	                                 sete al	      7691	ldlang.c	FUNCTION_180	IF_1	ELSE_1	IF_3
0x4007f61	            0x84c0	                             test al, al	      7692	ldlang.c	FUNCTION_180	IF_1	ELSE_1	IF_3
0x4007f63	        0x480f45fa	                         cmovne rdi, rdx	      7692	ldlang.c	FUNCTION_180	IF_1	ELSE_1	IF_3
0x4007f67	            0xeb03	                           jmp 0x4007f6c	      7692	ldlang.c	FUNCTION_180	IF_1	ELSE_1	IF_3
0x4007f69	          0x4889f7	                            mov rdi, rsi	      7689	ldlang.c	FUNCTION_180	IF_1	IF_2
0x4007f6c	    0x48893d000000	            mov qword [0x04007f73], rdi 	      7694	ldlang.c	FUNCTION_180	IF_1
0x4007f73	            0xf3c3	                                     ret	      7694	ldlang.c	FUNCTION_180	IF_1
sort_sections_by_lma	IF,4:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,0:ELSE,3	19
0x4000271	          0x488b3f	                    mov rdi, qword [rdi]	      4743	ldlang.c	FUNCTION_110
0x4000274	          0x488b36	                    mov rsi, qword [rsi]	      4744	ldlang.c	FUNCTION_110
0x4000277	        0x488b4f30	            mov rcx, qword [rdi + 0x30] 	      4746	ldlang.c	FUNCTION_110	IF_1
0x400027b	        0x488b5630	            mov rdx, qword [rsi + 0x30] 	      4746	ldlang.c	FUNCTION_110	IF_1
0x400027f	          0x4839d1	                            cmp rcx, rdx	      4746	ldlang.c	FUNCTION_110	IF_1
0x4000282	            0x7218	                            jb 0x400029c	      4746	ldlang.c	FUNCTION_110	IF_1
0x4000284	      0xb801000000	                              mov eax, 1	      4749	ldlang.c	FUNCTION_110	ELSE_1	IF_2
0x4000289	            0x771c	                            ja 0x40002a7	      4748	ldlang.c	FUNCTION_110	ELSE_1	IF_2
0x400028b	          0x8b5708	                mov edx, dword [rdi + 8]	      4750	ldlang.c	FUNCTION_110	ELSE_2	IF_3
0x400028e	          0x8b4608	                mov eax, dword [rsi + 8]	      4750	ldlang.c	FUNCTION_110	ELSE_2	IF_3
0x4000291	            0x39c2	                            cmp edx, eax	      4750	ldlang.c	FUNCTION_110	ELSE_2	IF_3
0x4000293	            0x720d	                            jb 0x40002a2	      4750	ldlang.c	FUNCTION_110	ELSE_2	IF_3
0x4000295	           0xf97c0	                                 seta al	      4747	ldlang.c	FUNCTION_110	IF_1
0x4000298	           0xfb6c0	                           movzx eax, al	      4747	ldlang.c	FUNCTION_110	IF_1
0x400029b	              0xc3	                                     ret	      4747	ldlang.c	FUNCTION_110	IF_1
0x400029c	      0xb8ffffffff	                     mov eax, 0xffffffff	      4747	ldlang.c	FUNCTION_110	IF_1
0x40002a1	              0xc3	                                     ret	      4747	ldlang.c	FUNCTION_110	IF_1
0x40002a2	      0xb8ffffffff	                     mov eax, 0xffffffff	      4751	ldlang.c	FUNCTION_110	ELSE_2	IF_3
0x40002a7	            0xf3c3	                                     ret	      4756	ldlang.c	FUNCTION_110
lang_finish	IF,0:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,1:ELSE,0	5
0x4003589	        0x4883ec08	                              sub rsp, 8	      1272	ldlang.c	FUNCTION_40
0x400358d	      0xbf00000000	                              mov edi, 0	      1240	ldlang.c	FUNCTION_38	CALL_1
0x4003592	      0xe800000000	                          call 0x4003597	      1240	ldlang.c	FUNCTION_38	CALL_1
0x4003597	        0x4883c408	                              add rsp, 8	      1274	ldlang.c	FUNCTION_40
0x400359b	              0xc3	                                     ret	      1274	ldlang.c	FUNCTION_40
print_input_section	IF,7:WHILE,2:FOR,0:DO,0:SWITCH,0:functions,0:CALL,12:ELSE,2	169
0x40007c0	            0x4157	                                push r15	      4199	ldlang.c	FUNCTION_96
0x40007c2	            0x4156	                                push r14	      4199	ldlang.c	FUNCTION_96
0x40007c4	            0x4155	                                push r13	      4199	ldlang.c	FUNCTION_96
0x40007c6	            0x4154	                                push r12	      4199	ldlang.c	FUNCTION_96
0x40007c8	              0x55	                                push rbp	      4199	ldlang.c	FUNCTION_96
0x40007c9	              0x53	                                push rbx	      4199	ldlang.c	FUNCTION_96
0x40007ca	        0x4883ec08	                              sub rsp, 8	      4199	ldlang.c	FUNCTION_96
0x40007ce	          0x4889fd	                            mov rbp, rdi	      4199	ldlang.c	FUNCTION_96
0x40007d1	          0x4189f5	                           mov r13d, esi	      4199	ldlang.c	FUNCTION_96
0x40007d4	        0x4c8b6738	            mov r12, qword [rdi + 0x38] 	      4200	ldlang.c	FUNCTION_96
0x40007d8	      0xe88fffffff	                       call sym.init_opb	      4204	ldlang.c	FUNCTION_96	CALL_1
0x40007dd	      0xe800000000	                          call 0x40007e2	      4206	ldlang.c	FUNCTION_96	CALL_2
0x40007e2	        0x488b7500	                    mov rsi, qword [rbp]	      4207	ldlang.c	FUNCTION_96	CALL_3
0x40007e6	      0xbf00000000	                              mov edi, 0	      4207	ldlang.c	FUNCTION_96	CALL_3
0x40007eb	      0xb800000000	                              mov eax, 0	      4207	ldlang.c	FUNCTION_96	CALL_3
0x40007f0	      0xe800000000	                          call 0x40007f5	      4207	ldlang.c	FUNCTION_96	CALL_3
0x40007f5	        0x488b7d00	                    mov rdi, qword [rbp]	      4209	ldlang.c	FUNCTION_96	CALL_4
0x40007f9	      0xb800000000	                              mov eax, 0	      4209	ldlang.c	FUNCTION_96	CALL_4
0x40007fe	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      4209	ldlang.c	FUNCTION_96	CALL_4
0x4000805	            0xf2ae	              repne scasb al, byte [rdi]	      4209	ldlang.c	FUNCTION_96	CALL_4
0x4000807	            0x89cb	                            mov ebx, ecx	      4209	ldlang.c	FUNCTION_96	CALL_4
0x4000809	            0xf7d3	                                 not ebx	      4209	ldlang.c	FUNCTION_96	CALL_4
0x400080b	          0x83fb0e	                            cmp ebx, 0xe	      4210	ldlang.c	FUNCTION_96	IF_1
0x400080e	            0x7e0c	                           jle 0x400081c	      4210	ldlang.c	FUNCTION_96	IF_1
0x4000810	      0xe800000000	                          call 0x4000815	      4212	ldlang.c	FUNCTION_96	IF_1	CALL_5
0x4000815	      0xbb00000000	                              mov ebx, 0	      4213	ldlang.c	FUNCTION_96	IF_1
0x400081a	            0xeb05	                           jmp 0x4000821	      4213	ldlang.c	FUNCTION_96	IF_1
0x400081c	          0x83fb0f	                            cmp ebx, 0xf	      4215	ldlang.c	FUNCTION_96	WHILE_1
0x400081f	            0x7f0d	                            jg 0x400082e	      4215	ldlang.c	FUNCTION_96	WHILE_1
0x4000821	      0xe800000000	                          call 0x4000826	      4217	ldlang.c	FUNCTION_96	WHILE_1	CALL_6
0x4000826	          0x83c301	                              add ebx, 1	      4218	ldlang.c	FUNCTION_96	WHILE_1
0x4000829	          0x83fb0f	                            cmp ebx, 0xf	      4215	ldlang.c	FUNCTION_96	WHILE_1
0x400082c	            0x7ef3	                           jle 0x4000821	      4215	ldlang.c	FUNCTION_96	WHILE_1
0x400082e	        0x488b4568	            mov rax, qword [rbp + 0x68] 	      4221	ldlang.c	FUNCTION_96	IF_2
0x4000832	          0x4885c0	                           test rax, rax	      4221	ldlang.c	FUNCTION_96	IF_2
0x4000835	            0x741a	                            je 0x4000851	      4221	ldlang.c	FUNCTION_96	IF_2
0x4000837	    0x488b15000000	            mov rdx, qword [0x0400083e] 	      4222	ldlang.c	FUNCTION_96	IF_2
0x400083e	    0x483990f00000	            cmp qword [rax + 0xf0], rdx 	      4222	ldlang.c	FUNCTION_96	IF_2
0x4000845	            0x750a	                           jne 0x4000851	      4222	ldlang.c	FUNCTION_96	IF_2
0x4000847	        0x4c8b7560	            mov r14, qword [rbp + 0x60] 	      4223	ldlang.c	FUNCTION_96	IF_2
0x400084b	        0x4c037028	             add r14, qword [rax + 0x28]	      4223	ldlang.c	FUNCTION_96	IF_2
0x400084f	            0xeb13	                           jmp 0x4000864	      4223	ldlang.c	FUNCTION_96	IF_2
0x4000851	    0x4c8b35000000	            mov r14, qword [0x04000858] 	      4226	ldlang.c	FUNCTION_96	ELSE_1
0x4000858	          0x4585ed	                         test r13d, r13d	      4228	ldlang.c	FUNCTION_96	ELSE_1	IF_3
0x400085b	      0xb800000000	                              mov eax, 0	      4228	ldlang.c	FUNCTION_96	ELSE_1	IF_3
0x4000860	        0x4c0f44e0	                          cmove r12, rax	      4228	ldlang.c	FUNCTION_96	ELSE_1	IF_3
0x4000864	    0x488b8df00000	            mov rcx, qword [rbp + 0xf0] 	      4231	ldlang.c	FUNCTION_96	CALL_7
0x400086b	          0x4c89e2	                            mov rdx, r12	      4231	ldlang.c	FUNCTION_96	CALL_7
0x400086e	          0x4c89f6	                            mov rsi, r14	      4231	ldlang.c	FUNCTION_96	CALL_7
0x4000871	      0xbf00000000	                              mov edi, 0	      4231	ldlang.c	FUNCTION_96	CALL_7
0x4000876	      0xb800000000	                              mov eax, 0	      4231	ldlang.c	FUNCTION_96	CALL_7
0x400087b	      0xe800000000	                          call 0x4000880	      4231	ldlang.c	FUNCTION_96	CALL_7
0x4000880	        0x488b4540	            mov rax, qword [rbp + 0x40] 	      4233	ldlang.c	FUNCTION_96	IF_4
0x4000884	          0x4885c0	                           test rax, rax	      4233	ldlang.c	FUNCTION_96	IF_4
0x4000887	            0x743c	                            je 0x40008c5	      4233	ldlang.c	FUNCTION_96	IF_4
0x4000889	          0x4939c4	                            cmp r12, rax	      4233	ldlang.c	FUNCTION_96	IF_4
0x400088c	            0x7437	                            je 0x40008c5	      4233	ldlang.c	FUNCTION_96	IF_4
0x400088e	      0xbb23000000	                           mov ebx, 0x23	      4233	ldlang.c	FUNCTION_96	IF_4
0x4000893	      0xe800000000	                          call 0x4000898	      4243	ldlang.c	FUNCTION_96	IF_4	WHILE_2	CALL_8
0x4000898	          0x83eb01	                              sub ebx, 1	      4241	ldlang.c	FUNCTION_96	IF_4	WHILE_2
0x400089b	            0x75f6	                           jne 0x4000893	      4241	ldlang.c	FUNCTION_96	IF_4	WHILE_2
0x400089d	        0x488b5d40	            mov rbx, qword [rbp + 0x40] 	      4247	ldlang.c	FUNCTION_96	IF_4	CALL_10
0x40008a1	      0xba05000000	                              mov edx, 5	      4247	ldlang.c	FUNCTION_96	IF_4	CALL_10
0x40008a6	      0xbe00000000	                              mov esi, 0	      4247	ldlang.c	FUNCTION_96	IF_4	CALL_10
0x40008ab	      0xbf00000000	                              mov edi, 0	      4247	ldlang.c	FUNCTION_96	IF_4	CALL_10
0x40008b0	      0xe800000000	                          call 0x40008b5	      4247	ldlang.c	FUNCTION_96	IF_4	CALL_10
0x40008b5	          0x4889de	                            mov rsi, rbx	      4247	ldlang.c	FUNCTION_96	IF_4	CALL_10
0x40008b8	          0x4889c7	                            mov rdi, rax	      4247	ldlang.c	FUNCTION_96	IF_4	CALL_10
0x40008bb	      0xb800000000	                              mov eax, 0	      4247	ldlang.c	FUNCTION_96	IF_4	CALL_10
0x40008c0	      0xe800000000	                          call 0x40008c5	      4247	ldlang.c	FUNCTION_96	IF_4	CALL_10
0x40008c5	        0x488b4568	            mov rax, qword [rbp + 0x68] 	      4250	ldlang.c	FUNCTION_96	IF_5
0x40008c9	          0x4885c0	                           test rax, rax	      4250	ldlang.c	FUNCTION_96	IF_5
0x40008cc	     0xf8491010000	                            je 0x4000a63	      4250	ldlang.c	FUNCTION_96	IF_5
0x40008d2	    0x488b15000000	            mov rdx, qword [0x040008d9] 	      4251	ldlang.c	FUNCTION_96	IF_5
0x40008d9	    0x483990f00000	            cmp qword [rax + 0xf0], rdx 	      4251	ldlang.c	FUNCTION_96	IF_5
0x40008e0	     0xf857d010000	                           jne 0x4000a63	      4251	ldlang.c	FUNCTION_96	IF_5
0x40008e6	    0xf60500000000	           test byte [0x040008ed], 0x10 	      4253	ldlang.c	FUNCTION_96	IF_5	IF_6
0x40008ed	            0x7419	                            je 0x4000908	      4253	ldlang.c	FUNCTION_96	IF_5	IF_6
0x40008ef	          0x4889ea	                            mov rdx, rbp	      4254	ldlang.c	FUNCTION_96	IF_5	CALL_11
0x40008f2	      0xbe00000000	                              mov esi, 0	      4254	ldlang.c	FUNCTION_96	IF_5	CALL_11
0x40008f7	    0x488b3d000000	            mov rdi, qword [0x040008fe] 	      4254	ldlang.c	FUNCTION_96	IF_5	CALL_11
0x40008fe	      0xe800000000	                          call 0x4000903	      4254	ldlang.c	FUNCTION_96	IF_5	CALL_11
0x4000903	      0xe93f010000	                           jmp 0x4000a47	      4254	ldlang.c	FUNCTION_96	IF_5	CALL_11
0x4000908	    0x4c8bada80000	            mov r13, qword [rbp + 0xa8] 	      4166	ldlang.c	ELSE_2	FUNCTION_95
0x400090f	          0x4d85ed	                           test r13, r13	      4172	ldlang.c	ELSE_2	FUNCTION_95	IF_1
0x4000912	     0xf842f010000	                            je 0x4000a47	      4172	ldlang.c	ELSE_2	FUNCTION_95	IF_1
0x4000918	        0x498b4508	                mov rax, qword [r13 + 8]	      4175	ldlang.c	ELSE_2	FUNCTION_95
0x400091c	    0x48c700000000	                      mov qword [rax], 0	      4175	ldlang.c	ELSE_2	FUNCTION_95
0x4000923	        0x498b4510	            mov rax, qword [r13 + 0x10] 	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x4000927	    0x488d1cc50000	                        lea rbx, [rax*8]	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x400092f	    0x488b05000000	            mov rax, qword [0x04000936] 	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x4000936	    0x482b05000000	             sub rax, qword [0x0400093d]	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x400093d	          0x4839c3	                            cmp rbx, rax	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x4000940	            0x760d	                           jbe 0x400094f	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x4000942	          0x4889de	                            mov rsi, rbx	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x4000945	      0xbf00000000	                              mov edi, 0	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x400094a	      0xe800000000	                          call 0x400094f	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x400094f	          0x4889d8	                            mov rax, rbx	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x4000952	    0x480305000000	             add rax, qword [0x04000959]	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x4000959	    0x488b1d000000	            mov rbx, qword [0x04000960] 	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x4000960	          0x4839d8	                            cmp rax, rbx	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x4000963	            0x7507	                           jne 0x400096c	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x4000965	    0x800d00000000	                 or byte [0x0400096c], 2	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x400096c	    0x488b15000000	            mov rdx, qword [0x04000973] 	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x4000973	          0x4801d0	                            add rax, rdx	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x4000976	          0x48f7d2	                                 not rdx	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x4000979	          0x4821d0	                            and rax, rdx	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x400097c	    0x488905000000	            mov qword [0x04000983], rax 	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x4000983	    0x488b15000000	            mov rdx, qword [0x0400098a] 	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x400098a	    0x488b0d000000	            mov rcx, qword [0x04000991] 	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x4000991	          0x4829d0	                            sub rax, rdx	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x4000994	          0x4889ce	                            mov rsi, rcx	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x4000997	          0x4829d6	                            sub rsi, rdx	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x400099a	          0x4839f0	                            cmp rax, rsi	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x400099d	            0x7607	                           jbe 0x40009a6	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x400099f	    0x48890d000000	            mov qword [0x040009a6], rcx 	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x40009a6	    0x488b05000000	            mov rax, qword [0x040009ad] 	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x40009ad	    0x488905000000	            mov qword [0x040009b4], rax 	      4179	ldlang.c	ELSE_2	FUNCTION_95	CALL_2
0x40009b4	        0x498b4500	                    mov rax, qword [r13]	      4182	ldlang.c	ELSE_2	FUNCTION_95	FOR_1
0x40009b8	          0x4885c0	                           test rax, rax	      4182	ldlang.c	ELSE_2	FUNCTION_95	FOR_1
0x40009bb	            0x741a	                            je 0x40009d7	      4182	ldlang.c	ELSE_2	FUNCTION_95	FOR_1
0x40009bd	      0xba00000000	                              mov edx, 0	      4182	ldlang.c	ELSE_2	FUNCTION_95	FOR_1
0x40009c2	          0x488b30	                    mov rsi, qword [rax]	      4183	ldlang.c	ELSE_2	FUNCTION_95	FOR_1
0x40009c5	            0x89d1	                            mov ecx, edx	      4183	ldlang.c	ELSE_2	FUNCTION_95	FOR_1
0x40009c7	        0x488934cb	            mov qword [rbx + rcx*8], rsi	      4183	ldlang.c	ELSE_2	FUNCTION_95	FOR_1
0x40009cb	        0x488b4008	                mov rax, qword [rax + 8]	      4182	ldlang.c	ELSE_2	FUNCTION_95	FOR_1
0x40009cf	          0x83c201	                              add edx, 1	      4182	ldlang.c	ELSE_2	FUNCTION_95	FOR_1
0x40009d2	          0x4885c0	                           test rax, rax	      4182	ldlang.c	ELSE_2	FUNCTION_95	FOR_1
0x40009d5	            0x75eb	                           jne 0x40009c2	      4182	ldlang.c	ELSE_2	FUNCTION_95	FOR_1
0x40009d7	        0x498b7510	            mov rsi, qword [r13 + 0x10] 	      4185	ldlang.c	ELSE_2	FUNCTION_95	CALL_3
0x40009db	      0xb900000000	                              mov ecx, 0	      4185	ldlang.c	ELSE_2	FUNCTION_95	CALL_3
0x40009e0	      0xba08000000	                              mov edx, 8	      4185	ldlang.c	ELSE_2	FUNCTION_95	CALL_3
0x40009e5	          0x4889df	                            mov rdi, rbx	      4185	ldlang.c	ELSE_2	FUNCTION_95	CALL_3
0x40009e8	      0xe800000000	                          call 0x40009ed	      4185	ldlang.c	ELSE_2	FUNCTION_95	CALL_3
0x40009ed	      0x49837d1000	               cmp qword [r13 + 0x10], 0	      4189	ldlang.c	ELSE_2	FUNCTION_95	FOR_2
0x40009f2	            0x7424	                            je 0x4000a18	      4189	ldlang.c	ELSE_2	FUNCTION_95	FOR_2
0x40009f4	    0x41bf00000000	                             mov r15d, 0	      4189	ldlang.c	ELSE_2	FUNCTION_95	FOR_2
0x40009fa	      0xb800000000	                              mov eax, 0	      4189	ldlang.c	ELSE_2	FUNCTION_95	FOR_2
0x40009ff	        0x488b3cc3	            mov rdi, qword [rbx + rax*8]	      4190	ldlang.c	ELSE_2	FUNCTION_95	CALL_4
0x4000a03	          0x4889ee	                            mov rsi, rbp	      4190	ldlang.c	ELSE_2	FUNCTION_95	CALL_4
0x4000a06	      0xe8f0fcffff	               call sym.print_one_symbol	      4190	ldlang.c	ELSE_2	FUNCTION_95	CALL_4
0x4000a0b	        0x4183c701	                             add r15d, 1	      4189	ldlang.c	ELSE_2	FUNCTION_95	FOR_2
0x4000a0f	          0x4489f8	                           mov eax, r15d	      4189	ldlang.c	ELSE_2	FUNCTION_95	FOR_2
0x4000a12	        0x493b4510	            cmp rax, qword [r13 + 0x10] 	      4189	ldlang.c	ELSE_2	FUNCTION_95	FOR_2
0x4000a16	            0x72e7	                            jb 0x40009ff	      4189	ldlang.c	ELSE_2	FUNCTION_95	FOR_2
0x4000a18	    0x483b1d000000	            cmp rbx, qword [0x04000a1f] 	      4192	ldlang.c	ELSE_2	FUNCTION_95	CALL_5
0x4000a1f	            0x7619	                           jbe 0x4000a3a	      4192	ldlang.c	ELSE_2	FUNCTION_95	CALL_5
0x4000a21	    0x483b1d000000	            cmp rbx, qword [0x04000a28] 	      4192	ldlang.c	ELSE_2	FUNCTION_95	CALL_5
0x4000a28	            0x7310	                           jae 0x4000a3a	      4192	ldlang.c	ELSE_2	FUNCTION_95	CALL_5
0x4000a2a	    0x48891d000000	            mov qword [0x04000a31], rbx 	      4192	ldlang.c	ELSE_2	FUNCTION_95	CALL_5
0x4000a31	    0x48891d000000	            mov qword [0x04000a38], rbx 	      4192	ldlang.c	ELSE_2	FUNCTION_95	CALL_5
0x4000a38	            0xeb0d	                           jmp 0x4000a47	      4192	ldlang.c	ELSE_2	FUNCTION_95	CALL_5
0x4000a3a	          0x4889de	                            mov rsi, rbx	      4192	ldlang.c	ELSE_2	FUNCTION_95	CALL_5
0x4000a3d	      0xbf00000000	                              mov edi, 0	      4192	ldlang.c	ELSE_2	FUNCTION_95	CALL_5
0x4000a42	      0xe800000000	                          call 0x4000a47	      4192	ldlang.c	ELSE_2	FUNCTION_95	CALL_5
0x4000a47	    0x8b0d00000000	            mov ecx, dword [0x04000a4d] 	      4261	ldlang.c	FUNCTION_96	IF_5	IF_7
0x4000a4d	          0x49d3ec	                             shr r12, cl	      4261	ldlang.c	FUNCTION_96	IF_5	IF_7
0x4000a50	          0x4d01f4	                            add r12, r14	      4261	ldlang.c	FUNCTION_96	IF_5	IF_7
0x4000a53	    0x4c3b25000000	            cmp r12, qword [0x04000a5a] 	      4261	ldlang.c	FUNCTION_96	IF_5	IF_7
0x4000a5a	            0x7607	                           jbe 0x4000a63	      4261	ldlang.c	FUNCTION_96	IF_5	IF_7
0x4000a5c	    0x4c8925000000	            mov qword [0x04000a63], r12 	      4262	ldlang.c	FUNCTION_96	IF_5	IF_7
0x4000a63	        0x4883c408	                              add rsp, 8	      4264	ldlang.c	FUNCTION_96
0x4000a67	              0x5b	                                 pop rbx	      4264	ldlang.c	FUNCTION_96
0x4000a68	              0x5d	                                 pop rbp	      4264	ldlang.c	FUNCTION_96
0x4000a69	            0x415c	                                 pop r12	      4264	ldlang.c	FUNCTION_96
0x4000a6b	            0x415d	                                 pop r13	      4264	ldlang.c	FUNCTION_96
0x4000a6d	            0x415e	                                 pop r14	      4264	ldlang.c	FUNCTION_96
0x4000a6f	            0x415f	                                 pop r15	      4264	ldlang.c	FUNCTION_96
0x4000a71	              0xc3	                                     ret	      4264	ldlang.c	FUNCTION_96
output_section_callback	IF,3:WHILE,0:FOR,1:DO,0:SWITCH,0:functions,0:CALL,7:ELSE,1	150
0x400534a	            0x4157	                                push r15	      2573	ldlang.c	FUNCTION_61
0x400534c	            0x4156	                                push r14	      2573	ldlang.c	FUNCTION_61
0x400534e	            0x4155	                                push r13	      2573	ldlang.c	FUNCTION_61
0x4005350	            0x4154	                                push r12	      2573	ldlang.c	FUNCTION_61
0x4005352	              0x55	                                push rbp	      2573	ldlang.c	FUNCTION_61
0x4005353	              0x53	                                push rbx	      2573	ldlang.c	FUNCTION_61
0x4005354	        0x4883ec48	                           sub rsp, 0x48	      2573	ldlang.c	FUNCTION_61
0x4005358	          0x4889fd	                            mov rbp, rdi	      2573	ldlang.c	FUNCTION_61
0x400535b	          0x4989f4	                            mov r12, rsi	      2573	ldlang.c	FUNCTION_61
0x400535e	      0x4889542408	                mov qword [rsp + 8], rdx	      2573	ldlang.c	FUNCTION_61
0x4005363	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      2573	ldlang.c	FUNCTION_61
0x4005368	          0x4d89c7	                             mov r15, r8	      2573	ldlang.c	FUNCTION_61
0x400536b	          0x4c89ce	                             mov rsi, r9	      2573	ldlang.c	FUNCTION_61
0x400536e	      0x4c894c2418	              mov qword [rsp + 0x18], r9	      2573	ldlang.c	FUNCTION_61
0x4005373	    0x64488b042528	                mov rax, qword fs:[0x28]	      2573	ldlang.c	FUNCTION_61
0x400537c	      0x4889442438	             mov qword [rsp + 0x38], rax	      2573	ldlang.c	FUNCTION_61
0x4005381	            0x31c0	                            xor eax, eax	      2573	ldlang.c	FUNCTION_61
0x4005383	          0x4889d7	                            mov rdi, rdx	      2580	ldlang.c	FUNCTION_61	IF_1	CALL_1
0x4005386	      0xe87cccffff	               call sym.unique_section_p	      2580	ldlang.c	FUNCTION_61	IF_1	CALL_1
0x400538b	            0x85c0	                           test eax, eax	      2580	ldlang.c	FUNCTION_61	IF_1	CALL_1
0x400538d	     0xf85c1010000	                           jne 0x4005554	      2580	ldlang.c	FUNCTION_61	IF_1	CALL_1
0x4005393	        0x837d1800	               cmp dword [rbp + 0x18], 0	      2480	ldlang.c	FUNCTION_60	IF_1
0x4005397	            0x7515	                           jne 0x40053ae	      2480	ldlang.c	FUNCTION_60	IF_1
0x4005399	          0x4d85e4	                           test r12, r12	      2481	ldlang.c	FUNCTION_60	IF_1
0x400539c	     0xf840d010000	                            je 0x40054af	      2481	ldlang.c	FUNCTION_60	IF_1
0x40053a2	    0x41837c241800	               cmp dword [r12 + 0x18], 0	      2481	ldlang.c	FUNCTION_60	IF_1
0x40053a8	     0xf8401010000	                            je 0x40054af	      2481	ldlang.c	FUNCTION_60	IF_1
0x40053ae	        0x488b5d30	            mov rbx, qword [rbp + 0x30] 	      2484	ldlang.c	FUNCTION_60	FOR_1
0x40053b2	          0x4885db	                           test rbx, rbx	      2484	ldlang.c	FUNCTION_60	FOR_1
0x40053b5	     0xf84f4000000	                            je 0x40054af	      2484	ldlang.c	FUNCTION_60	FOR_1
0x40053bb	        0x837b0805	                  cmp dword [rbx + 8], 5	      2488	ldlang.c	FUNCTION_60	FOR_1	IF_2
0x40053bf	     0xf85d7000000	                           jne 0x400549c	      2488	ldlang.c	FUNCTION_60	FOR_1	IF_2
0x40053c5	        0x837d1800	               cmp dword [rbp + 0x18], 0	      2495	ldlang.c	FUNCTION_60	FOR_1	IF_3
0x40053c9	     0xf84a8000000	                            je 0x4005477	      2495	ldlang.c	FUNCTION_60	FOR_1	IF_3
0x40053cf	        0x498b4720	            mov rax, qword [r15 + 0x20] 	      2506	ldlang.c	FUNCTION_60	FOR_1	IF_3	IF_4
0x40053d3	          0x4885c0	                           test rax, rax	      2506	ldlang.c	FUNCTION_60	FOR_1	IF_3	IF_4
0x40053d6	            0x7419	                            je 0x40053f1	      2506	ldlang.c	FUNCTION_60	FOR_1	IF_3	IF_4
0x40053d8	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	      2507	ldlang.c	FUNCTION_60	FOR_1	IF_3	IF_4
0x40053df	          0x4885c0	                           test rax, rax	      2507	ldlang.c	FUNCTION_60	FOR_1	IF_3	IF_4
0x40053e2	            0x740d	                            je 0x40053f1	      2507	ldlang.c	FUNCTION_60	FOR_1	IF_3	IF_4
0x40053e4	          0x4c8b28	                    mov r13, qword [rax]	      2509	ldlang.c	FUNCTION_60	FOR_1	IF_3	IF_4
0x40053e7	    0xc74424040100	                  mov dword [rsp + 4], 1	      2510	ldlang.c	FUNCTION_60	FOR_1	IF_3	IF_4
0x40053ef	            0xeb0c	                           jmp 0x40053fd	      2510	ldlang.c	FUNCTION_60	FOR_1	IF_3	IF_4
0x40053f1	        0x4d8b6f10	            mov r13, qword [r15 + 0x10] 	      2514	ldlang.c	FUNCTION_60	FOR_1	IF_3	ELSE_1
0x40053f5	    0xc74424040000	                  mov dword [rsp + 4], 0	      2515	ldlang.c	FUNCTION_60	FOR_1	IF_3	ELSE_1
0x40053fd	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      2518	ldlang.c	FUNCTION_60	FOR_1	IF_3	IF_5
0x4005401	    0x488b90f00000	            mov rdx, qword [rax + 0xf0] 	      2518	ldlang.c	FUNCTION_60	FOR_1	IF_3	IF_5
0x4005408	    0x488b82d00000	            mov rax, qword [rdx + 0xd0] 	      2518	ldlang.c	FUNCTION_60	FOR_1	IF_3	IF_5
0x400540f	          0x4885c0	                           test rax, rax	      2518	ldlang.c	FUNCTION_60	FOR_1	IF_3	IF_5
0x4005412	            0x740c	                            je 0x4005420	      2518	ldlang.c	FUNCTION_60	FOR_1	IF_3	IF_5
0x4005414	          0x4c8b30	                    mov r14, qword [rax]	      2520	ldlang.c	FUNCTION_60	FOR_1	IF_3	IF_5
0x4005417	    0xc70424010000	                      mov dword [rsp], 1	      2521	ldlang.c	FUNCTION_60	FOR_1	IF_3	IF_5
0x400541e	            0xeb0a	                           jmp 0x400542a	      2521	ldlang.c	FUNCTION_60	FOR_1	IF_3	IF_5
0x4005420	          0x4c8b32	                    mov r14, qword [rdx]	      2525	ldlang.c	FUNCTION_60	FOR_1	IF_3	ELSE_2
0x4005423	    0xc70424000000	                      mov dword [rsp], 0	      2526	ldlang.c	FUNCTION_60	FOR_1	IF_3	ELSE_2
0x400542a	          0x4c89f6	                            mov rsi, r14	      2529	ldlang.c	FUNCTION_60	FOR_1	IF_3	CALL_1
0x400542d	          0x4c89ef	                            mov rdi, r13	      2529	ldlang.c	FUNCTION_60	FOR_1	IF_3	CALL_1
0x4005430	      0xe800000000	                          call 0x4005435	      2529	ldlang.c	FUNCTION_60	FOR_1	IF_3	CALL_1
0x4005435	            0x85c0	                           test eax, eax	      2530	ldlang.c	FUNCTION_60	FOR_1	IF_3	IF_6
0x4005437	            0x7f63	                            jg 0x400549c	      2530	ldlang.c	FUNCTION_60	FOR_1	IF_3	IF_6
0x4005439	            0x85c0	                           test eax, eax	      2532	ldlang.c	FUNCTION_60	FOR_1	IF_3	ELSE_3	IF_7
0x400543b	            0x786d	                            js 0x40054aa	      2532	ldlang.c	FUNCTION_60	FOR_1	IF_3	ELSE_3	IF_7
0x400543d	        0x8b4c2404	                mov ecx, dword [rsp + 4]	      2535	ldlang.c	FUNCTION_60	FOR_1	IF_3	IF_8
0x4005441	            0x89c8	                            mov eax, ecx	      2535	ldlang.c	FUNCTION_60	FOR_1	IF_3	IF_8
0x4005443	           0xb0424	                     or eax, dword [rsp]	      2535	ldlang.c	FUNCTION_60	FOR_1	IF_3	IF_8
0x4005446	            0x742f	                            je 0x4005477	      2535	ldlang.c	FUNCTION_60	FOR_1	IF_3	IF_8
0x4005448	            0x85c9	                           test ecx, ecx	      2537	ldlang.c	FUNCTION_60	FOR_1	IF_3	IF_8	IF_9
0x400544a	            0x7404	                            je 0x4005450	      2537	ldlang.c	FUNCTION_60	FOR_1	IF_3	IF_8	IF_9
0x400544c	        0x4d8b6f10	            mov r13, qword [r15 + 0x10] 	      2538	ldlang.c	FUNCTION_60	FOR_1	IF_3	IF_8	IF_9
0x4005450	        0x833c2400	                      cmp dword [rsp], 0	      2539	ldlang.c	FUNCTION_60	FOR_1	IF_3	IF_8	IF_10
0x4005454	            0x740e	                            je 0x4005464	      2539	ldlang.c	FUNCTION_60	FOR_1	IF_3	IF_8	IF_10
0x4005456	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      2540	ldlang.c	FUNCTION_60	FOR_1	IF_3	IF_8	IF_10
0x400545a	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	      2540	ldlang.c	FUNCTION_60	FOR_1	IF_3	IF_8	IF_10
0x4005461	          0x4c8b30	                    mov r14, qword [rax]	      2540	ldlang.c	FUNCTION_60	FOR_1	IF_3	IF_8	IF_10
0x4005464	          0x4c89f6	                            mov rsi, r14	      2542	ldlang.c	FUNCTION_60	FOR_1	IF_3	IF_8	CALL_2
0x4005467	          0x4c89ef	                            mov rdi, r13	      2542	ldlang.c	FUNCTION_60	FOR_1	IF_3	IF_8	CALL_2
0x400546a	      0xe800000000	                          call 0x400546f	      2542	ldlang.c	FUNCTION_60	FOR_1	IF_3	IF_8	CALL_2
0x400546f	            0x85c0	                           test eax, eax	      2543	ldlang.c	FUNCTION_60	FOR_1	IF_3	IF_8	IF_11
0x4005471	            0x7f29	                            jg 0x400549c	      2543	ldlang.c	FUNCTION_60	FOR_1	IF_3	IF_8	IF_11
0x4005473	            0x85c0	                           test eax, eax	      2545	ldlang.c	FUNCTION_60	FOR_1	IF_3	IF_8	ELSE_4	IF_12
0x4005475	            0x7833	                            js 0x40054aa	      2545	ldlang.c	FUNCTION_60	FOR_1	IF_3	IF_8	ELSE_4	IF_12
0x4005477	          0x4d85e4	                           test r12, r12	      2553	ldlang.c	FUNCTION_60	FOR_1	IF_13
0x400547a	            0x7420	                            je 0x400549c	      2553	ldlang.c	FUNCTION_60	FOR_1	IF_13
0x400547c	      0x418b7c2418	            mov edi, dword [r12 + 0x18] 	      2554	ldlang.c	FUNCTION_60	FOR_1	IF_13
0x4005481	            0x85ff	                           test edi, edi	      2555	ldlang.c	FUNCTION_60	FOR_1	IF_13
0x4005483	            0x7417	                            je 0x400549c	      2555	ldlang.c	FUNCTION_60	FOR_1	IF_13
0x4005485	          0x83ff05	                              cmp edi, 5	      2555	ldlang.c	FUNCTION_60	FOR_1	IF_13
0x4005488	            0x7412	                            je 0x400549c	      2555	ldlang.c	FUNCTION_60	FOR_1	IF_13
0x400548a	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	      2556	ldlang.c	FUNCTION_60	FOR_1	IF_13	IF_14	CALL_3
0x400548e	      0x488b742408	                mov rsi, qword [rsp + 8]	      2556	ldlang.c	FUNCTION_60	FOR_1	IF_13	IF_14	CALL_3
0x4005493	      0xe8cccdffff	                call sym.compare_section	      2556	ldlang.c	FUNCTION_60	FOR_1	IF_13	IF_14	CALL_3
0x4005498	            0x85c0	                           test eax, eax	      2556	ldlang.c	FUNCTION_60	FOR_1	IF_13	IF_14	CALL_3
0x400549a	            0x780e	                            js 0x40054aa	      2556	ldlang.c	FUNCTION_60	FOR_1	IF_13	IF_14	CALL_3
0x400549c	          0x488b1b	                    mov rbx, qword [rbx]	      2484	ldlang.c	FUNCTION_60	FOR_1
0x400549f	          0x4885db	                           test rbx, rbx	      2484	ldlang.c	FUNCTION_60	FOR_1
0x40054a2	     0xf8513ffffff	                           jne 0x40053bb	      2484	ldlang.c	FUNCTION_60	FOR_1
0x40054a8	            0xeb05	                           jmp 0x40054af	      2484	ldlang.c	FUNCTION_60	FOR_1
0x40054aa	          0x4885db	                           test rbx, rbx	      2590	ldlang.c	FUNCTION_61	IF_2
0x40054ad	            0x751d	                           jne 0x40054cc	      2590	ldlang.c	FUNCTION_61	IF_2
0x40054af	        0x488d7d30	                   lea rdi, [rbp + 0x30]	      2591	ldlang.c	FUNCTION_61	CALL_3
0x40054b3	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      2591	ldlang.c	FUNCTION_61	CALL_3
0x40054b8	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      2591	ldlang.c	FUNCTION_61	CALL_3
0x40054bd	      0x488b742408	                mov rsi, qword [rsp + 8]	      2591	ldlang.c	FUNCTION_61	CALL_3
0x40054c2	      0xe800000000	                          call 0x40054c7	      2591	ldlang.c	FUNCTION_61	CALL_3
0x40054c7	      0xe988000000	                           jmp 0x4005554	      2591	ldlang.c	FUNCTION_61	CALL_3
0x40054cc	    0x48c744242000	               mov qword [rsp + 0x20], 0	      1009	ldlang.c	FUNCTION_30
0x40054d5	      0x488d442420	                   lea rax, [rsp + 0x20]	      1010	ldlang.c	FUNCTION_30
0x40054da	      0x4889442428	             mov qword [rsp + 0x28], rax	      1010	ldlang.c	FUNCTION_30
0x40054df	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      2598	ldlang.c	FUNCTION_61	ELSE_1	CALL_5
0x40054e4	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      2598	ldlang.c	FUNCTION_61	ELSE_1	CALL_5
0x40054e9	      0x488b742408	                mov rsi, qword [rsp + 8]	      2598	ldlang.c	FUNCTION_61	ELSE_1	CALL_5
0x40054ee	          0x4889c7	                            mov rdi, rax	      2598	ldlang.c	FUNCTION_61	ELSE_1	CALL_5
0x40054f1	      0xe800000000	                          call 0x40054f6	      2598	ldlang.c	FUNCTION_61	ELSE_1	CALL_5
0x40054f6	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      2602	ldlang.c	FUNCTION_61	ELSE_1	IF_3
0x40054fb	          0x4885c0	                           test rax, rax	      2602	ldlang.c	FUNCTION_61	ELSE_1	IF_3
0x40054fe	            0x7454	                            je 0x4005554	      2602	ldlang.c	FUNCTION_61	ELSE_1	IF_3
0x4005500	        0x48833800	                      cmp qword [rax], 0	      2604	ldlang.c	FUNCTION_61	ELSE_1	IF_3	CALL_6
0x4005504	            0x740f	                            je 0x4005515	      2604	ldlang.c	FUNCTION_61	ELSE_1	IF_3	CALL_6
0x4005506	      0xbe2c0a0000	                          mov esi, 0xa2c	      2604	ldlang.c	FUNCTION_61	ELSE_1	IF_3	CALL_6
0x400550b	      0xbf00000000	                              mov edi, 0	      2604	ldlang.c	FUNCTION_61	ELSE_1	IF_3	CALL_6
0x4005510	      0xe800000000	                          call 0x4005515	      2604	ldlang.c	FUNCTION_61	ELSE_1	IF_3	CALL_6
0x4005515	        0x4c8d6530	                   lea r12, [rbp + 0x30]	      2606	ldlang.c	FUNCTION_61	ELSE_1	IF_3	FOR_1
0x4005519	        0x488b4530	            mov rax, qword [rbp + 0x30] 	      2607	ldlang.c	FUNCTION_61	ELSE_1	IF_3	FOR_1
0x400551d	          0x4839d8	                            cmp rax, rbx	      2606	ldlang.c	FUNCTION_61	ELSE_1	IF_3	FOR_1
0x4005520	            0x7421	                            je 0x4005543	      2606	ldlang.c	FUNCTION_61	ELSE_1	IF_3	FOR_1
0x4005522	          0x4885c0	                           test rax, rax	      2609	ldlang.c	FUNCTION_61	ELSE_1	IF_3	CALL_7
0x4005525	            0x750f	                           jne 0x4005536	      2609	ldlang.c	FUNCTION_61	ELSE_1	IF_3	CALL_7
0x4005527	      0xbe310a0000	                          mov esi, 0xa31	      2609	ldlang.c	FUNCTION_61	ELSE_1	IF_3	CALL_7
0x400552c	      0xbf00000000	                              mov edi, 0	      2609	ldlang.c	FUNCTION_61	ELSE_1	IF_3	CALL_7
0x4005531	      0xe800000000	                          call 0x4005536	      2609	ldlang.c	FUNCTION_61	ELSE_1	IF_3	CALL_7
0x4005536	        0x4d8b2424	                    mov r12, qword [r12]	      2608	ldlang.c	FUNCTION_61	ELSE_1	IF_3	FOR_1
0x400553a	        0x498b0424	                    mov rax, qword [r12]	      2607	ldlang.c	FUNCTION_61	ELSE_1	IF_3	FOR_1
0x400553e	          0x4839d8	                            cmp rax, rbx	      2606	ldlang.c	FUNCTION_61	ELSE_1	IF_3	FOR_1
0x4005541	            0x75df	                           jne 0x4005522	      2606	ldlang.c	FUNCTION_61	ELSE_1	IF_3	FOR_1
0x4005543	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      2611	ldlang.c	FUNCTION_61	ELSE_1	IF_3
0x4005548	          0x488918	                    mov qword [rax], rbx	      2611	ldlang.c	FUNCTION_61	ELSE_1	IF_3
0x400554b	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      2612	ldlang.c	FUNCTION_61	ELSE_1	IF_3
0x4005550	        0x49890424	                    mov qword [r12], rax	      2612	ldlang.c	FUNCTION_61	ELSE_1	IF_3
0x4005554	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      2615	ldlang.c	FUNCTION_61
0x4005559	    0x644833042528	                xor rax, qword fs:[0x28]	      2615	ldlang.c	FUNCTION_61
0x4005562	            0x7405	                            je 0x4005569	      2615	ldlang.c	FUNCTION_61
0x4005564	      0xe800000000	                          call 0x4005569	      2615	ldlang.c	FUNCTION_61
0x4005569	        0x4883c448	                           add rsp, 0x48	      2615	ldlang.c	FUNCTION_61
0x400556d	              0x5b	                                 pop rbx	      2615	ldlang.c	FUNCTION_61
0x400556e	              0x5d	                                 pop rbp	      2615	ldlang.c	FUNCTION_61
0x400556f	            0x415c	                                 pop r12	      2615	ldlang.c	FUNCTION_61
0x4005571	            0x415d	                                 pop r13	      2615	ldlang.c	FUNCTION_61
0x4005573	            0x415e	                                 pop r14	      2615	ldlang.c	FUNCTION_61
0x4005575	            0x415f	                                 pop r15	      2615	ldlang.c	FUNCTION_61
0x4005577	              0xc3	                                     ret	      2615	ldlang.c	FUNCTION_61
strcut	IF,1:WHILE,0:FOR,1:DO,0:SWITCH,0:functions,0:CALL,1:ELSE,0	24
0x40018f6	              0x53	                                push rbx	      2958	ldlang.c	FUNCTION_70
0x40018f7	          0x4889f3	                            mov rbx, rsi	      2958	ldlang.c	FUNCTION_70
0x40018fa	      0xe800000000	                          call 0x40018ff	      2959	ldlang.c	FUNCTION_70
0x40018ff	          0x4885c0	                           test rax, rax	      2961	ldlang.c	FUNCTION_70	IF_1
0x4001902	            0x7438	                            je 0x400193c	      2961	ldlang.c	FUNCTION_70	IF_1
0x4001904	          0x4889c2	                            mov rdx, rax	      2961	ldlang.c	FUNCTION_70	IF_1
0x4001907	      0xb800000000	                              mov eax, 0	      2965	ldlang.c	FUNCTION_70	IF_1	FOR_1	CALL_1
0x400190c	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      2965	ldlang.c	FUNCTION_70	IF_1	FOR_1	CALL_1
0x4001913	          0x4889df	                            mov rdi, rbx	      2965	ldlang.c	FUNCTION_70	IF_1	FOR_1	CALL_1
0x4001916	            0xf2ae	              repne scasb al, byte [rdi]	      2965	ldlang.c	FUNCTION_70	IF_1	FOR_1	CALL_1
0x4001918	          0x48f7d1	                                 not rcx	      2965	ldlang.c	FUNCTION_70	IF_1	FOR_1	CALL_1
0x400191b	      0x488d4c0aff	                lea rcx, [rdx + rcx - 1]	      2965	ldlang.c	FUNCTION_70	IF_1	FOR_1	CALL_1
0x4001920	           0xfb601	                   movzx eax, byte [rcx]	      2965	ldlang.c	FUNCTION_70	IF_1	FOR_1	CALL_1
0x4001923	            0x84c0	                             test al, al	      2965	ldlang.c	FUNCTION_70	IF_1	FOR_1	CALL_1
0x4001925	            0x7412	                            je 0x4001939	      2965	ldlang.c	FUNCTION_70	IF_1	FOR_1	CALL_1
0x4001927	        0x4883c201	                              add rdx, 1	      2966	ldlang.c	FUNCTION_70	IF_1	FOR_1
0x400192b	        0x4883c101	                              add rcx, 1	      2966	ldlang.c	FUNCTION_70	IF_1	FOR_1
0x400192f	          0x8842ff	                  mov byte [rdx - 1], al	      2966	ldlang.c	FUNCTION_70	IF_1	FOR_1
0x4001932	           0xfb601	                   movzx eax, byte [rcx]	      2965	ldlang.c	FUNCTION_70	IF_1	FOR_1	CALL_1
0x4001935	            0x84c0	                             test al, al	      2965	ldlang.c	FUNCTION_70	IF_1	FOR_1	CALL_1
0x4001937	            0x75ee	                           jne 0x4001927	      2965	ldlang.c	FUNCTION_70	IF_1	FOR_1	CALL_1
0x4001939	          0xc60200	                       mov byte [rdx], 0	      2968	ldlang.c	FUNCTION_70	IF_1
0x400193c	              0x5b	                                 pop rbx	      2970	ldlang.c	FUNCTION_70
0x400193d	              0xc3	                                     ret	      2970	ldlang.c	FUNCTION_70
section_for_dot	IF,7:WHILE,4:FOR,1:DO,0:SWITCH,0:functions,0:CALL,0:ELSE,1	124
0x4005c89	    0x488b35000000	            mov rsi, qword [0x04005c90] 	      5943	ldlang.c	FUNCTION_124	IF_1
0x4005c90	          0x4885f6	                           test rsi, rsi	      5943	ldlang.c	FUNCTION_124	IF_1
0x4005c93	            0x740d	                            je 0x4005ca2	      5943	ldlang.c	FUNCTION_124	IF_1
0x4005c95	    0x833d00000000	               cmp dword [0x04005c9c], 0	      5943	ldlang.c	FUNCTION_124	IF_1
0x4005c9c	     0xf84e3000000	                            je 0x4005d85	      5943	ldlang.c	FUNCTION_124	IF_1
0x4005ca2	    0x488b15000000	            mov rdx, qword [0x04005ca9] 	      5948	ldlang.c	FUNCTION_124	IF_1	FOR_1
0x4005ca9	          0x4885d2	                           test rdx, rdx	      5948	ldlang.c	FUNCTION_124	IF_1	FOR_1
0x4005cac	            0x7416	                            je 0x4005cc4	      5948	ldlang.c	FUNCTION_124	IF_1	FOR_1
0x4005cae	        0x837a0800	                  cmp dword [rdx + 8], 0	      5951	ldlang.c	FUNCTION_124	IF_1	FOR_1	IF_2
0x4005cb2	            0x7508	                           jne 0x4005cbc	      5951	ldlang.c	FUNCTION_124	IF_1	FOR_1	IF_2
0x4005cb4	            0xeb0e	                           jmp 0x4005cc4	      5951	ldlang.c	FUNCTION_124	IF_1	FOR_1	IF_2
0x4005cb6	        0x837a0800	                  cmp dword [rdx + 8], 0	      5951	ldlang.c	FUNCTION_124	IF_1	FOR_1	IF_2
0x4005cba	            0x7408	                            je 0x4005cc4	      5951	ldlang.c	FUNCTION_124	IF_1	FOR_1	IF_2
0x4005cbc	          0x488b12	                    mov rdx, qword [rdx]	      5950	ldlang.c	FUNCTION_124	IF_1	FOR_1
0x4005cbf	          0x4885d2	                           test rdx, rdx	      5948	ldlang.c	FUNCTION_124	IF_1	FOR_1
0x4005cc2	            0x75f2	                           jne 0x4005cb6	      5948	ldlang.c	FUNCTION_124	IF_1	FOR_1
0x4005cc4	          0x4889d0	                            mov rax, rdx	      5954	ldlang.c	FUNCTION_124	IF_1
0x4005cc7	          0x4885d2	                           test rdx, rdx	      5955	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x4005cca	            0x7473	                            je 0x4005d3f	      5955	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x4005ccc	    0xf68290000000	           test byte [rdx + 0x90], 0x20 	      5956	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x4005cd3	     0xf8546010000	                           jne 0x4005e1f	      5956	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x4005cd9	    0x488b3d000000	            mov rdi, qword [0x04005ce0] 	      5959	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x4005ce0	            0xeb16	                           jmp 0x4005cf8	      5959	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x4005ce2	        0x488b4020	            mov rax, qword [rax + 0x20] 	      5961	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x4005ce6	          0x4885c0	                           test rax, rax	      5955	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x4005ce9	            0x7454	                            je 0x4005d3f	      5955	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x4005ceb	    0xf68090000000	           test byte [rax + 0x90], 0x20 	      5956	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x4005cf2	     0xf853e010000	                           jne 0x4005e36	      5956	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x4005cf8	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      5957	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x4005cfc	          0x4885d2	                           test rdx, rdx	      5957	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x4005cff	            0x74e1	                            je 0x4005ce2	      5957	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x4005d01	        0xf6422180	           test byte [rdx + 0x21], 0x80 	      5958	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x4005d05	            0x75db	                           jne 0x4005ce2	      5958	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x4005d07	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	      5959	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x4005d0b	          0x4885c9	                           test rcx, rcx	      5955	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x4005d0e	            0x750b	                           jne 0x4005d1b	      5955	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x4005d10	    0x483b97980000	            cmp rdx, qword [rdi + 0x98] 	      5959	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x4005d17	            0x75c9	                           jne 0x4005ce2	      5959	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x4005d19	            0xeb06	                           jmp 0x4005d21	      5959	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x4005d1b	        0x483b5118	            cmp rdx, qword [rcx + 0x18] 	      5959	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x4005d1f	            0x75c1	                           jne 0x4005ce2	      5959	ldlang.c	FUNCTION_124	IF_1	WHILE_1
0x4005d21	          0x4885c0	                           test rax, rax	      5963	ldlang.c	FUNCTION_124	IF_1	IF_3
0x4005d24	            0x740e	                            je 0x4005d34	      5963	ldlang.c	FUNCTION_124	IF_1	IF_3
0x4005d26	          0x4885f6	                           test rsi, rsi	      5963	ldlang.c	FUNCTION_124	IF_1	IF_3
0x4005d29	            0x7409	                            je 0x4005d34	      5963	ldlang.c	FUNCTION_124	IF_1	IF_3
0x4005d2b	    0xf68090000000	           test byte [rax + 0x90], 0x20 	      5963	ldlang.c	FUNCTION_124	IF_1	IF_3
0x4005d32	            0x7551	                           jne 0x4005d85	      5963	ldlang.c	FUNCTION_124	IF_1	IF_3
0x4005d34	          0x4885c0	                           test rax, rax	      5965	ldlang.c	FUNCTION_124	IF_1	IF_3	IF_4
0x4005d37	            0x7406	                            je 0x4005d3f	      5965	ldlang.c	FUNCTION_124	IF_1	IF_3	IF_4
0x4005d39	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5966	ldlang.c	FUNCTION_124	IF_1	IF_3	IF_4
0x4005d3d	            0xeb0e	                           jmp 0x4005d4d	      5966	ldlang.c	FUNCTION_124	IF_1	IF_3	IF_4
0x4005d3f	    0x488b05000000	            mov rax, qword [0x04005d46] 	      5968	ldlang.c	FUNCTION_124	IF_1	IF_3	ELSE_1
0x4005d46	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      5968	ldlang.c	FUNCTION_124	IF_1	IF_3	ELSE_1
0x4005d4d	          0x4885c0	                           test rax, rax	      5969	ldlang.c	FUNCTION_124	IF_1	IF_3	WHILE_2
0x4005d50	     0xf84b1000000	                            je 0x4005e07	      5969	ldlang.c	FUNCTION_124	IF_1	IF_3	WHILE_2
0x4005d56	          0x8b5020	            mov edx, dword [rax + 0x20] 	      5970	ldlang.c	FUNCTION_124	IF_1	IF_3	WHILE_2
0x4005d59	    0x81e201040000	                          and edx, 0x401	      5970	ldlang.c	FUNCTION_124	IF_1	IF_3	WHILE_2
0x4005d5f	          0x83fa01	                              cmp edx, 1	      5970	ldlang.c	FUNCTION_124	IF_1	IF_3	WHILE_2
0x4005d62	     0xf84e5000000	                            je 0x4005e4d	      5970	ldlang.c	FUNCTION_124	IF_1	IF_3	WHILE_2
0x4005d68	        0x488b4018	            mov rax, qword [rax + 0x18] 	      5972	ldlang.c	FUNCTION_124	IF_1	IF_3	WHILE_2
0x4005d6c	          0x4885c0	                           test rax, rax	      5969	ldlang.c	FUNCTION_124	IF_1	IF_3	WHILE_2
0x4005d6f	     0xf8498000000	                            je 0x4005e0d	      5969	ldlang.c	FUNCTION_124	IF_1	IF_3	WHILE_2
0x4005d75	          0x8b5020	            mov edx, dword [rax + 0x20] 	      5970	ldlang.c	FUNCTION_124	IF_1	IF_3	WHILE_2
0x4005d78	    0x81e201040000	                          and edx, 0x401	      5970	ldlang.c	FUNCTION_124	IF_1	IF_3	WHILE_2
0x4005d7e	          0x83fa01	                              cmp edx, 1	      5970	ldlang.c	FUNCTION_124	IF_1	IF_3	WHILE_2
0x4005d81	            0x75e5	                           jne 0x4005d68	      5970	ldlang.c	FUNCTION_124	IF_1	IF_3	WHILE_2
0x4005d83	            0xf3c3	                                     ret	      5970	ldlang.c	FUNCTION_124	IF_1	IF_3	WHILE_2
0x4005d85	        0x488b4638	            mov rax, qword [rsi + 0x38] 	      5980	ldlang.c	FUNCTION_124
0x4005d89	          0x4885c0	                           test rax, rax	      5983	ldlang.c	FUNCTION_124	WHILE_3
0x4005d8c	            0x743f	                            je 0x4005dcd	      5983	ldlang.c	FUNCTION_124	WHILE_3
0x4005d8e	    0x488b0d000000	            mov rcx, qword [0x04005d95] 	      5987	ldlang.c	FUNCTION_124	WHILE_3
0x4005d95	            0xeb09	                           jmp 0x4005da0	      5987	ldlang.c	FUNCTION_124	WHILE_3
0x4005d97	        0x488b4018	            mov rax, qword [rax + 0x18] 	      5988	ldlang.c	FUNCTION_124	WHILE_3
0x4005d9b	          0x4885c0	                           test rax, rax	      5983	ldlang.c	FUNCTION_124	WHILE_3
0x4005d9e	            0x742d	                            je 0x4005dcd	      5983	ldlang.c	FUNCTION_124	WHILE_3
0x4005da0	          0x8b5020	            mov edx, dword [rax + 0x20] 	      5984	ldlang.c	FUNCTION_124	WHILE_3
0x4005da3	    0x81e201840000	                         and edx, 0x8401	      5984	ldlang.c	FUNCTION_124	WHILE_3
0x4005da9	          0x83fa01	                              cmp edx, 1	      5984	ldlang.c	FUNCTION_124	WHILE_3
0x4005dac	            0x75e9	                           jne 0x4005d97	      5984	ldlang.c	FUNCTION_124	WHILE_3
0x4005dae	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      5987	ldlang.c	FUNCTION_124	WHILE_3
0x4005db2	          0x4885d2	                           test rdx, rdx	      5983	ldlang.c	FUNCTION_124	WHILE_3
0x4005db5	            0x750b	                           jne 0x4005dc2	      5983	ldlang.c	FUNCTION_124	WHILE_3
0x4005db7	    0x483981980000	            cmp qword [rcx + 0x98], rax 	      5987	ldlang.c	FUNCTION_124	WHILE_3
0x4005dbe	            0x75d7	                           jne 0x4005d97	      5987	ldlang.c	FUNCTION_124	WHILE_3
0x4005dc0	            0xeb06	                           jmp 0x4005dc8	      5987	ldlang.c	FUNCTION_124	WHILE_3
0x4005dc2	        0x48394218	            cmp qword [rdx + 0x18], rax 	      5987	ldlang.c	FUNCTION_124	WHILE_3
0x4005dc6	            0x75cf	                           jne 0x4005d97	      5987	ldlang.c	FUNCTION_124	WHILE_3
0x4005dc8	          0x4885c0	                           test rax, rax	      5989	ldlang.c	FUNCTION_124	IF_6
0x4005dcb	            0x7513	                           jne 0x4005de0	      5989	ldlang.c	FUNCTION_124	IF_6
0x4005dcd	    0x488b05000000	            mov rax, qword [0x04005dd4] 	      5990	ldlang.c	FUNCTION_124	IF_6
0x4005dd4	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      5990	ldlang.c	FUNCTION_124	IF_6
0x4005ddb	          0x4885c0	                           test rax, rax	      5991	ldlang.c	FUNCTION_124	WHILE_4
0x4005dde	            0x7433	                            je 0x4005e13	      5991	ldlang.c	FUNCTION_124	WHILE_4
0x4005de0	          0x8b5020	            mov edx, dword [rax + 0x20] 	      5992	ldlang.c	FUNCTION_124	WHILE_4
0x4005de3	    0x81e201040000	                          and edx, 0x401	      5992	ldlang.c	FUNCTION_124	WHILE_4
0x4005de9	          0x83fa01	                              cmp edx, 1	      5992	ldlang.c	FUNCTION_124	WHILE_4
0x4005dec	            0x745f	                            je 0x4005e4d	      5992	ldlang.c	FUNCTION_124	WHILE_4
0x4005dee	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5994	ldlang.c	FUNCTION_124	WHILE_4
0x4005df2	          0x4885c0	                           test rax, rax	      5991	ldlang.c	FUNCTION_124	WHILE_4
0x4005df5	            0x7422	                            je 0x4005e19	      5991	ldlang.c	FUNCTION_124	WHILE_4
0x4005df7	          0x8b5020	            mov edx, dword [rax + 0x20] 	      5992	ldlang.c	FUNCTION_124	WHILE_4
0x4005dfa	    0x81e201040000	                          and edx, 0x401	      5992	ldlang.c	FUNCTION_124	WHILE_4
0x4005e00	          0x83fa01	                              cmp edx, 1	      5992	ldlang.c	FUNCTION_124	WHILE_4
0x4005e03	            0x75e9	                           jne 0x4005dee	      5992	ldlang.c	FUNCTION_124	WHILE_4
0x4005e05	            0xf3c3	                                     ret	      5992	ldlang.c	FUNCTION_124	WHILE_4
0x4005e07	      0xb800000000	                              mov eax, 0	      5976	ldlang.c	FUNCTION_124	IF_1	IF_3
0x4005e0c	              0xc3	                                     ret	      5976	ldlang.c	FUNCTION_124	IF_1	IF_3
0x4005e0d	      0xb800000000	                              mov eax, 0	      5976	ldlang.c	FUNCTION_124	IF_1	IF_3
0x4005e12	              0xc3	                                     ret	      5976	ldlang.c	FUNCTION_124	IF_1	IF_3
0x4005e13	      0xb800000000	                              mov eax, 0	      5998	ldlang.c	FUNCTION_124
0x4005e18	              0xc3	                                     ret	      5998	ldlang.c	FUNCTION_124
0x4005e19	      0xb800000000	                              mov eax, 0	      5998	ldlang.c	FUNCTION_124
0x4005e1e	              0xc3	                                     ret	      5998	ldlang.c	FUNCTION_124
0x4005e1f	          0x4885d2	                           test rdx, rdx	      5963	ldlang.c	FUNCTION_124	IF_1	IF_3
0x4005e22	     0xf8411ffffff	                            je 0x4005d39	      5963	ldlang.c	FUNCTION_124	IF_1	IF_3
0x4005e28	          0x4885f6	                           test rsi, rsi	      5963	ldlang.c	FUNCTION_124	IF_1	IF_3
0x4005e2b	     0xf85fafeffff	                           jne 0x4005d2b	      5963	ldlang.c	FUNCTION_124	IF_1	IF_3
0x4005e31	      0xe903ffffff	                           jmp 0x4005d39	      5963	ldlang.c	FUNCTION_124	IF_1	IF_3
0x4005e36	          0x4885c0	                           test rax, rax	      5963	ldlang.c	FUNCTION_124	IF_1	IF_3
0x4005e39	     0xf84fafeffff	                            je 0x4005d39	      5963	ldlang.c	FUNCTION_124	IF_1	IF_3
0x4005e3f	          0x4885f6	                           test rsi, rsi	      5963	ldlang.c	FUNCTION_124	IF_1	IF_3
0x4005e42	     0xf853dffffff	                           jne 0x4005d85	      5963	ldlang.c	FUNCTION_124	IF_1	IF_3
0x4005e48	      0xe9ecfeffff	                           jmp 0x4005d39	      5963	ldlang.c	FUNCTION_124	IF_1	IF_3
0x4005e4d	            0xf3c3	                                     ret	      5999	ldlang.c	FUNCTION_124
exp_init_os	IF,1:WHILE,0:FOR,0:DO,0:SWITCH,2:functions,0:CALL,10:ELSE,0	48
0x4004759	        0x837f1008	               cmp dword [rdi + 0x10], 8	      2206	ldlang.c	FUNCTION_56	SWITCH_1
0x400475d	     0xf87aa000000	                            ja 0x400480d	      2206	ldlang.c	FUNCTION_56	SWITCH_1
0x4004763	              0x53	                                push rbx	      2205	ldlang.c	FUNCTION_56
0x4004764	          0x4889fb	                            mov rbx, rdi	      2205	ldlang.c	FUNCTION_56
0x4004767	          0x8b4710	            mov eax, dword [rdi + 0x10] 	      2206	ldlang.c	FUNCTION_56	SWITCH_1
0x400476a	    0xff24c5000000	                       jmp qword [rax*8]	      2206	ldlang.c	FUNCTION_56	SWITCH_1
0x4004771	        0x488b7f20	            mov rdi, qword [rdi + 0x20] 	      2211	ldlang.c	FUNCTION_56	SWITCH_1	CALL_1
0x4004775	      0xe8dfffffff	                    call sym.exp_init_os	      2211	ldlang.c	FUNCTION_56	SWITCH_1	CALL_1
0x400477a	      0xe98d000000	                           jmp 0x400480c	      2212	ldlang.c	FUNCTION_56	SWITCH_1
0x400477f	        0x488b7f18	            mov rdi, qword [rdi + 0x18] 	      2215	ldlang.c	FUNCTION_56	SWITCH_1	CALL_2
0x4004783	      0xe8d1ffffff	                    call sym.exp_init_os	      2215	ldlang.c	FUNCTION_56	SWITCH_1	CALL_2
0x4004788	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      2216	ldlang.c	FUNCTION_56	SWITCH_1	CALL_3
0x400478c	      0xe8c8ffffff	                    call sym.exp_init_os	      2216	ldlang.c	FUNCTION_56	SWITCH_1	CALL_3
0x4004791	            0xeb79	                           jmp 0x400480c	      2217	ldlang.c	FUNCTION_56	SWITCH_1
0x4004793	        0x488b7f18	            mov rdi, qword [rdi + 0x18] 	      2220	ldlang.c	FUNCTION_56	SWITCH_1	CALL_4
0x4004797	      0xe8bdffffff	                    call sym.exp_init_os	      2220	ldlang.c	FUNCTION_56	SWITCH_1	CALL_4
0x400479c	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      2221	ldlang.c	FUNCTION_56	SWITCH_1	CALL_5
0x40047a0	      0xe8b4ffffff	                    call sym.exp_init_os	      2221	ldlang.c	FUNCTION_56	SWITCH_1	CALL_5
0x40047a5	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	      2222	ldlang.c	FUNCTION_56	SWITCH_1	CALL_6
0x40047a9	      0xe8abffffff	                    call sym.exp_init_os	      2222	ldlang.c	FUNCTION_56	SWITCH_1	CALL_6
0x40047ae	            0xeb5c	                           jmp 0x400480c	      2223	ldlang.c	FUNCTION_56	SWITCH_1
0x40047b0	        0x488b7f18	            mov rdi, qword [rdi + 0x18] 	      2226	ldlang.c	FUNCTION_56	SWITCH_1	CALL_7
0x40047b4	      0xe8a0ffffff	                    call sym.exp_init_os	      2226	ldlang.c	FUNCTION_56	SWITCH_1	CALL_7
0x40047b9	            0xeb51	                           jmp 0x400480c	      2227	ldlang.c	FUNCTION_56	SWITCH_1
0x40047bb	        0x488b7f18	            mov rdi, qword [rdi + 0x18] 	      2230	ldlang.c	FUNCTION_56	SWITCH_1	CALL_8
0x40047bf	      0xe895ffffff	                    call sym.exp_init_os	      2230	ldlang.c	FUNCTION_56	SWITCH_1	CALL_8
0x40047c4	            0xeb46	                           jmp 0x400480c	      2231	ldlang.c	FUNCTION_56	SWITCH_1
0x40047c6	            0x8b07	                    mov eax, dword [rdi]	      2234	ldlang.c	FUNCTION_56	SWITCH_1	SWITCH_2
0x40047c8	      0x3d41010000	                          cmp eax, 0x141	      2234	ldlang.c	FUNCTION_56	SWITCH_1	SWITCH_2
0x40047cd	            0x7411	                            je 0x40047e0	      2234	ldlang.c	FUNCTION_56	SWITCH_1	SWITCH_2
0x40047cf	      0x3d41010000	                          cmp eax, 0x141	      2234	ldlang.c	FUNCTION_56	SWITCH_1	SWITCH_2
0x40047d4	            0x7c36	                            jl 0x400480c	      2234	ldlang.c	FUNCTION_56	SWITCH_1	SWITCH_2
0x40047d6	      0x2d43010000	                          sub eax, 0x143	      2234	ldlang.c	FUNCTION_56	SWITCH_1	SWITCH_2
0x40047db	          0x83f801	                              cmp eax, 1	      2234	ldlang.c	FUNCTION_56	SWITCH_1	SWITCH_2
0x40047de	            0x772c	                            ja 0x400480c	      2234	ldlang.c	FUNCTION_56	SWITCH_1	SWITCH_2
0x40047e0	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      2242	ldlang.c	FUNCTION_56	SWITCH_1	SWITCH_2	CALL_9
0x40047e4	      0xba00000000	                              mov edx, 0	      2242	ldlang.c	FUNCTION_56	SWITCH_1	SWITCH_2	CALL_9
0x40047e9	      0xbe00000000	                              mov esi, 0	      2242	ldlang.c	FUNCTION_56	SWITCH_1	SWITCH_2	CALL_9
0x40047ee	      0xe800000000	                          call 0x40047f3	      2242	ldlang.c	FUNCTION_56	SWITCH_1	SWITCH_2	CALL_9
0x40047f3	          0x4885c0	                           test rax, rax	      2243	ldlang.c	FUNCTION_56	SWITCH_1	SWITCH_2	IF_1
0x40047f6	            0x7414	                            je 0x400480c	      2243	ldlang.c	FUNCTION_56	SWITCH_1	SWITCH_2	IF_1
0x40047f8	      0x4883783800	               cmp qword [rax + 0x38], 0	      2243	ldlang.c	FUNCTION_56	SWITCH_1	SWITCH_2	IF_1
0x40047fd	            0x750d	                           jne 0x400480c	      2243	ldlang.c	FUNCTION_56	SWITCH_1	SWITCH_2	IF_1
0x40047ff	      0xbe00000000	                              mov esi, 0	      2244	ldlang.c	FUNCTION_56	SWITCH_1	SWITCH_2	CALL_10
0x4004804	          0x4889c7	                            mov rdi, rax	      2244	ldlang.c	FUNCTION_56	SWITCH_1	SWITCH_2	CALL_10
0x4004807	      0xe803000000	                        call sym.init_os	      2244	ldlang.c	FUNCTION_56	SWITCH_1	SWITCH_2	CALL_10
0x400480c	              0x5b	                                 pop rbx	      2252	ldlang.c	FUNCTION_56
0x400480d	            0xf3c3	                                     ret	      2252	ldlang.c	FUNCTION_56
lang_size_sections	IF,4:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,4:ELSE,0	122
0x40070f4	            0x4156	                                push r14	      5710	ldlang.c	FUNCTION_121
0x40070f6	            0x4155	                                push r13	      5710	ldlang.c	FUNCTION_121
0x40070f8	            0x4154	                                push r12	      5710	ldlang.c	FUNCTION_121
0x40070fa	              0x55	                                push rbp	      5710	ldlang.c	FUNCTION_121
0x40070fb	              0x53	                                push rbx	      5710	ldlang.c	FUNCTION_121
0x40070fc	          0x4889fb	                            mov rbx, rdi	      5710	ldlang.c	FUNCTION_121
0x40070ff	            0x89f5	                            mov ebp, esi	      5710	ldlang.c	FUNCTION_121
0x4007101	    0xc70500000000	               mov dword [0x0400710b], 2	      5711	ldlang.c	FUNCTION_121
0x400710b	    0xc70500000000	               mov dword [0x04007115], 0	      5712	ldlang.c	FUNCTION_121
0x4007115	      0xe800000000	                          call 0x400711a	      5714	ldlang.c	FUNCTION_121	CALL_1
0x400711a	    0x833d00000000	               cmp dword [0x04007121], 3	      5716	ldlang.c	FUNCTION_121	IF_1
0x4007121	     0xf84a1010000	                            je 0x40072c8	      5716	ldlang.c	FUNCTION_121	IF_1
0x4007127	    0xc70500000000	               mov dword [0x04007131], 6	      5717	ldlang.c	FUNCTION_121	IF_1
0x4007131	      0xe9a4010000	                           jmp 0x40072da	      5717	ldlang.c	FUNCTION_121	IF_1
0x4007136	    0x488b15000000	            mov rdx, qword [0x0400713d] 	      5676	ldlang.c	FUNCTION_120	IF_1
0x400713d	          0x4885d2	                           test rdx, rdx	      5676	ldlang.c	FUNCTION_120	IF_1
0x4007140	     0xf84ea000000	                            je 0x4007230	      5676	ldlang.c	FUNCTION_120	IF_1
0x4007146	    0x4c8b35000000	            mov r14, qword [0x0400714d] 	      5679	ldlang.c	FUNCTION_120	IF_1
0x400714d	    0x488b05000000	            mov rax, qword [0x04007154] 	      5635	ldlang.c	FUNCTION_119
0x4007154	      0x4c8d6c02ff	                lea r13, [rdx + rax - 1]	      5635	ldlang.c	FUNCTION_119
0x4007159	          0x48f7d8	                                 neg rax	      5635	ldlang.c	FUNCTION_119
0x400715c	          0x4921c5	                            and r13, rax	      5635	ldlang.c	FUNCTION_119
0x400715f	    0x488b0d000000	            mov rcx, qword [0x04007166] 	      5639	ldlang.c	FUNCTION_119
0x4007166	          0x4d89ec	                            mov r12, r13	      5639	ldlang.c	FUNCTION_119
0x4007169	          0x4929cc	                            sub r12, rcx	      5639	ldlang.c	FUNCTION_119
0x400716c	    0x488b05000000	            mov rax, qword [0x04007173] 	      5642	ldlang.c	FUNCTION_119	FOR_1
0x4007173	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      5642	ldlang.c	FUNCTION_119	FOR_1
0x400717a	          0x4885c0	                           test rax, rax	      5642	ldlang.c	FUNCTION_119	FOR_1
0x400717d	            0x746b	                            je 0x40071ea	      5642	ldlang.c	FUNCTION_119	FOR_1
0x400717f	    0x448b05000000	            mov r8d, dword [0x04007186] 	      5653	ldlang.c	FUNCTION_119	FOR_1	IF_1	IF_2
0x4007186	          0x4829ca	                            sub rdx, rcx	      5645	ldlang.c	FUNCTION_119	FOR_1	IF_1
0x4007189	          0x4889d7	                            mov rdi, rdx	      5645	ldlang.c	FUNCTION_119	FOR_1	IF_1
0x400718c	    0x41b901000000	                              mov r9d, 1	      5658	ldlang.c	FUNCTION_119	FOR_1	IF_1
0x4007192	          0x8b5020	            mov edx, dword [rax + 0x20] 	      5643	ldlang.c	FUNCTION_119	FOR_1	IF_1
0x4007195	          0xf6c201	                              test dl, 1	      5643	ldlang.c	FUNCTION_119	FOR_1	IF_1
0x4007198	            0x7447	                            je 0x40071e1	      5643	ldlang.c	FUNCTION_119	FOR_1	IF_1
0x400719a	        0x488b7028	            mov rsi, qword [rax + 0x28] 	      5644	ldlang.c	FUNCTION_119	FOR_1	IF_1
0x400719e	          0x4939f6	                            cmp r14, rsi	      5644	ldlang.c	FUNCTION_119	FOR_1	IF_1
0x40071a1	            0x773e	                            ja 0x40071e1	      5644	ldlang.c	FUNCTION_119	FOR_1	IF_1
0x40071a3	          0x4839fe	                            cmp rsi, rdi	      5645	ldlang.c	FUNCTION_119	FOR_1	IF_1
0x40071a6	            0x7339	                           jae 0x40071e1	      5645	ldlang.c	FUNCTION_119	FOR_1	IF_1
0x40071a8	    0x81e202040000	                          and edx, 0x402	      5652	ldlang.c	FUNCTION_119	FOR_1	IF_1	IF_2
0x40071ae	          0x4889f1	                            mov rcx, rsi	      5651	ldlang.c	FUNCTION_119	FOR_1	IF_1
0x40071b1	    0x81fa00040000	                          cmp edx, 0x400	      5652	ldlang.c	FUNCTION_119	FOR_1	IF_1	IF_2
0x40071b7	            0x7410	                            je 0x40071c9	      5652	ldlang.c	FUNCTION_119	FOR_1	IF_1	IF_2
0x40071b9	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      5653	ldlang.c	FUNCTION_119	FOR_1	IF_1	IF_2
0x40071bd	          0x4489c1	                            mov ecx, r8d	      5653	ldlang.c	FUNCTION_119	FOR_1	IF_1	IF_2
0x40071c0	          0x48d3ea	                             shr rdx, cl	      5653	ldlang.c	FUNCTION_119	FOR_1	IF_1	IF_2
0x40071c3	          0x4889d1	                            mov rcx, rdx	      5653	ldlang.c	FUNCTION_119	FOR_1	IF_1	IF_2
0x40071c6	          0x4801f1	                            add rcx, rsi	      5653	ldlang.c	FUNCTION_119	FOR_1	IF_1	IF_2
0x40071c9	          0x4901f4	                            add r12, rsi	      5657	ldlang.c	FUNCTION_119	FOR_1	IF_1
0x40071cc	          0x4c89e6	                            mov rsi, r12	      5657	ldlang.c	FUNCTION_119	FOR_1	IF_1
0x40071cf	          0x4829ce	                            sub rsi, rcx	      5657	ldlang.c	FUNCTION_119	FOR_1	IF_1
0x40071d2	          0x8b4870	            mov ecx, dword [rax + 0x70] 	      5658	ldlang.c	FUNCTION_119	FOR_1	IF_1
0x40071d5	          0x4d89cc	                             mov r12, r9	      5658	ldlang.c	FUNCTION_119	FOR_1	IF_1
0x40071d8	          0x49d3e4	                             shl r12, cl	      5658	ldlang.c	FUNCTION_119	FOR_1	IF_1
0x40071db	          0x49f7dc	                                 neg r12	      5658	ldlang.c	FUNCTION_119	FOR_1	IF_1
0x40071de	          0x4921f4	                            and r12, rsi	      5658	ldlang.c	FUNCTION_119	FOR_1	IF_1
0x40071e1	        0x488b4018	            mov rax, qword [rax + 0x18] 	      5642	ldlang.c	FUNCTION_119	FOR_1
0x40071e5	          0x4885c0	                           test rax, rax	      5642	ldlang.c	FUNCTION_119	FOR_1
0x40071e8	            0x75a8	                           jne 0x4007192	      5642	ldlang.c	FUNCTION_119	FOR_1
0x40071ea	    0xc70500000000	               mov dword [0x040071f4], 4	      5663	ldlang.c	FUNCTION_119
0x40071f4	          0x4d39e6	                            cmp r14, r12	      5664	ldlang.c	FUNCTION_119	CALL_1
0x40071f7	            0x760f	                           jbe 0x4007208	      5664	ldlang.c	FUNCTION_119	CALL_1
0x40071f9	      0xbe20160000	                         mov esi, 0x1620	      5664	ldlang.c	FUNCTION_119	CALL_1
0x40071fe	      0xbf00000000	                              mov edi, 0	      5664	ldlang.c	FUNCTION_119	CALL_1
0x4007203	      0xe800000000	                          call 0x4007208	      5664	ldlang.c	FUNCTION_119	CALL_1
0x4007208	    0x4c8925000000	            mov qword [0x0400720f], r12 	      5665	ldlang.c	FUNCTION_119
0x400720f	      0xe800000000	                          call 0x4007214	      5690	ldlang.c	FUNCTION_120	IF_2	CALL_2
0x4007214	            0x89ee	                            mov esi, ebp	      5691	ldlang.c	FUNCTION_120	IF_2	CALL_3
0x4007216	          0x4889df	                            mov rdi, rbx	      5691	ldlang.c	FUNCTION_120	IF_2	CALL_3
0x4007219	      0xe800000000	                          call 0x400721e	      5691	ldlang.c	FUNCTION_120	IF_2	CALL_3
0x400721e	    0x4c392d000000	            cmp qword [0x04007225], r13 	      5695	ldlang.c	FUNCTION_120	IF_2	IF_3
0x4007225	            0x7675	                           jbe 0x400729c	      5695	ldlang.c	FUNCTION_120	IF_2	IF_3
0x4007227	    0x4c8935000000	            mov qword [0x0400722e], r14 	      5697	ldlang.c	FUNCTION_120	IF_2	IF_3
0x400722e	            0xeb5d	                           jmp 0x400728d	      5697	ldlang.c	FUNCTION_120	IF_2	IF_3
0x4007230	    0x4c8b05000000	              mov r8, qword [0x04007237]	      5613	ldlang.c	FUNCTION_118
0x4007237	    0x488b35000000	            mov rsi, qword [0x0400723e] 	      5613	ldlang.c	FUNCTION_118
0x400723e	        0x488d46ff	                      lea rax, [rsi - 1]	      5613	ldlang.c	FUNCTION_118
0x4007242	          0x4c89c1	                             mov rcx, r8	      5613	ldlang.c	FUNCTION_118
0x4007245	          0x48f7d9	                                 neg rcx	      5613	ldlang.c	FUNCTION_118
0x4007248	    0x488b15000000	            mov rdx, qword [0x0400724f] 	      5614	ldlang.c	FUNCTION_118
0x400724f	          0x4889c7	                            mov rdi, rax	      5614	ldlang.c	FUNCTION_118
0x4007252	          0x4821d7	                            and rdi, rdx	      5614	ldlang.c	FUNCTION_118
0x4007255	          0x4821c8	                            and rax, rcx	      5615	ldlang.c	FUNCTION_118	IF_1
0x4007258	            0x7427	                            je 0x4007281	      5615	ldlang.c	FUNCTION_118	IF_1
0x400725a	          0x4885ff	                           test rdi, rdi	      5615	ldlang.c	FUNCTION_118	IF_1
0x400725d	            0x7422	                            je 0x4007281	      5615	ldlang.c	FUNCTION_118	IF_1
0x400725f	          0x4c31c2	                             xor rdx, r8	      5616	ldlang.c	FUNCTION_118	IF_1
0x4007262	          0x4889f1	                            mov rcx, rsi	      5616	ldlang.c	FUNCTION_118	IF_1
0x4007265	          0x48f7d9	                                 neg rcx	      5616	ldlang.c	FUNCTION_118	IF_1
0x4007268	          0x4885ca	                           test rdx, rcx	      5616	ldlang.c	FUNCTION_118	IF_1
0x400726b	            0x7414	                            je 0x4007281	      5616	ldlang.c	FUNCTION_118	IF_1
0x400726d	          0x4801f8	                            add rax, rdi	      5618	ldlang.c	FUNCTION_118	IF_1
0x4007270	          0x4839c6	                            cmp rsi, rax	      5618	ldlang.c	FUNCTION_118	IF_1
0x4007273	            0x720c	                            jb 0x4007281	      5618	ldlang.c	FUNCTION_118	IF_1
0x4007275	    0xc70500000000	               mov dword [0x0400727f], 5	      5620	ldlang.c	FUNCTION_118	IF_1
0x400727f	            0xeb0c	                           jmp 0x400728d	      5620	ldlang.c	FUNCTION_118	IF_1
0x4007281	    0xc70500000000	               mov dword [0x0400728b], 6	      5624	ldlang.c	FUNCTION_118
0x400728b	            0xeb0f	                           jmp 0x400729c	      5624	ldlang.c	FUNCTION_118
0x400728d	      0xe800000000	                          call 0x4007292	      5726	ldlang.c	FUNCTION_121	IF_2	IF_3	CALL_3
0x4007292	            0x89ee	                            mov esi, ebp	      5727	ldlang.c	FUNCTION_121	IF_2	IF_3	CALL_4
0x4007294	          0x4889df	                            mov rdi, rbx	      5727	ldlang.c	FUNCTION_121	IF_2	IF_3	CALL_4
0x4007297	      0xe800000000	                          call 0x400729c	      5727	ldlang.c	FUNCTION_121	IF_2	IF_3	CALL_4
0x400729c	    0xf60500000000	           test byte [0x040072a3], 0x10 	      5730	ldlang.c	FUNCTION_121	IF_2	IF_4
0x40072a3	            0x7435	                            je 0x40072da	      5730	ldlang.c	FUNCTION_121	IF_2	IF_4
0x40072a5	    0x488b05000000	            mov rax, qword [0x040072ac] 	      5730	ldlang.c	FUNCTION_121	IF_2	IF_4
0x40072ac	          0x4885c0	                           test rax, rax	      5730	ldlang.c	FUNCTION_121	IF_2	IF_4
0x40072af	            0x7429	                            je 0x40072da	      5730	ldlang.c	FUNCTION_121	IF_2	IF_4
0x40072b1	    0x488b15000000	            mov rdx, qword [0x040072b8] 	      5732	ldlang.c	FUNCTION_121	IF_2	IF_4
0x40072b8	    0x488915000000	            mov qword [0x040072bf], rdx 	      5732	ldlang.c	FUNCTION_121	IF_2	IF_4
0x40072bf	    0x488905000000	            mov qword [0x040072c6], rax 	      5733	ldlang.c	FUNCTION_121	IF_2	IF_4
0x40072c6	            0xeb12	                           jmp 0x40072da	      5736	ldlang.c	FUNCTION_121
0x40072c8	    0xf60500000000	           test byte [0x040072cf], 0x10 	      5676	ldlang.c	FUNCTION_120	IF_1
0x40072cf	     0xf8561feffff	                           jne 0x4007136	      5676	ldlang.c	FUNCTION_120	IF_1
0x40072d5	      0xe956ffffff	                           jmp 0x4007230	      5676	ldlang.c	FUNCTION_120	IF_1
0x40072da	              0x5b	                                 pop rbx	      5736	ldlang.c	FUNCTION_121
0x40072db	              0x5d	                                 pop rbp	      5736	ldlang.c	FUNCTION_121
0x40072dc	            0x415c	                                 pop r12	      5736	ldlang.c	FUNCTION_121
0x40072de	            0x415d	                                 pop r13	      5736	ldlang.c	FUNCTION_121
0x40072e0	            0x415e	                                 pop r14	      5736	ldlang.c	FUNCTION_121
0x40072e2	              0xc3	                                     ret	      5736	ldlang.c	FUNCTION_121
foreach_start_stop	IF,0:WHILE,0:FOR,1:DO,0:SWITCH,0:functions,0:CALL,1:ELSE,0	17
0x40002e1	    0x48833d000000	               cmp qword [0x040002e9], 0	      6073	ldlang.c	FUNCTION_127	FOR_1
0x40002e9	            0x742e	                            je 0x4000319	      6073	ldlang.c	FUNCTION_127	FOR_1
0x40002eb	              0x55	                                push rbp	      6070	ldlang.c	FUNCTION_127
0x40002ec	              0x53	                                push rbx	      6070	ldlang.c	FUNCTION_127
0x40002ed	        0x4883ec08	                              sub rsp, 8	      6070	ldlang.c	FUNCTION_127
0x40002f1	          0x4889fd	                            mov rbp, rdi	      6070	ldlang.c	FUNCTION_127
0x40002f4	      0xbb00000000	                              mov ebx, 0	      6073	ldlang.c	FUNCTION_127	FOR_1
0x40002f9	    0x488b05000000	            mov rax, qword [0x04000300] 	      6074	ldlang.c	FUNCTION_127	CALL_1
0x4000300	        0x488b3cd8	            mov rdi, qword [rax + rbx*8]	      6074	ldlang.c	FUNCTION_127	CALL_1
0x4000304	            0xffd5	                                call rbp	      6074	ldlang.c	FUNCTION_127	CALL_1
0x4000306	        0x4883c301	                              add rbx, 1	      6073	ldlang.c	FUNCTION_127	FOR_1
0x400030a	    0x48391d000000	            cmp qword [0x04000311], rbx 	      6073	ldlang.c	FUNCTION_127	FOR_1
0x4000311	            0x77e6	                            ja 0x40002f9	      6073	ldlang.c	FUNCTION_127	FOR_1
0x4000313	        0x4883c408	                              add rsp, 8	      6075	ldlang.c	FUNCTION_127
0x4000317	              0x5b	                                 pop rbx	      6075	ldlang.c	FUNCTION_127
0x4000318	              0x5d	                                 pop rbp	      6075	ldlang.c	FUNCTION_127
0x4000319	            0xf3c3	                                     ret	      6075	ldlang.c	FUNCTION_127
lang_add_target	IF,0:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,0:ELSE,0	9
0x40079d0	              0x53	                                push rbx	      7513	ldlang.c	FUNCTION_168
0x40079d1	          0x4889fb	                            mov rbx, rdi	      7513	ldlang.c	FUNCTION_168
0x40079d4	    0x488b15000000	            mov rdx, qword [0x040079db] 	      7516	ldlang.c	FUNCTION_168
0x40079db	      0xbe18000000	                           mov esi, 0x18	      7516	ldlang.c	FUNCTION_168
0x40079e0	      0xbf0a000000	                            mov edi, 0xa	      7516	ldlang.c	FUNCTION_168
0x40079e5	      0xe8deb7ffff	                  call sym.new_statement	      7516	ldlang.c	FUNCTION_168
0x40079ea	        0x48895810	             mov qword [rax + 0x10], rbx	      7517	ldlang.c	FUNCTION_168
0x40079ee	              0x5b	                                 pop rbx	      7518	ldlang.c	FUNCTION_168
0x40079ef	              0xc3	                                     ret	      7518	ldlang.c	FUNCTION_168
lang_clear_os_map	IF,3:WHILE,0:FOR,1:DO,0:SWITCH,0:functions,0:CALL,0:ELSE,0	17
0x4005a9c	    0x833d00000000	               cmp dword [0x04005aa3], 0	      3955	ldlang.c	FUNCTION_89	IF_1
0x4005aa3	            0x7547	                           jne 0x4005aec	      3955	ldlang.c	FUNCTION_89	IF_1
0x4005aa5	    0x488b05000000	            mov rax, qword [0x04005aac] 	      3958	ldlang.c	FUNCTION_89	FOR_1
0x4005aac	          0x4885c0	                           test rax, rax	      3958	ldlang.c	FUNCTION_89	FOR_1
0x4005aaf	            0x7431	                            je 0x4005ae2	      3958	ldlang.c	FUNCTION_89	FOR_1
0x4005ab1	    0x83b884000000	               cmp dword [rax + 0x84], 0	      3964	ldlang.c	FUNCTION_89	FOR_1	IF_2
0x4005ab8	            0x781f	                            js 0x4005ad9	      3964	ldlang.c	FUNCTION_89	FOR_1	IF_2
0x4005aba	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      3967	ldlang.c	FUNCTION_89	FOR_1
0x4005abe	          0x4885d2	                           test rdx, rdx	      3968	ldlang.c	FUNCTION_89	FOR_1	IF_3
0x4005ac1	            0x7416	                            je 0x4005ad9	      3968	ldlang.c	FUNCTION_89	FOR_1	IF_3
0x4005ac3	    0x48c782080100	              mov qword [rdx + 0x108], 0	      3972	ldlang.c	FUNCTION_89	FOR_1
0x4005ace	    0x48c782100100	              mov qword [rdx + 0x110], 0	      3973	ldlang.c	FUNCTION_89	FOR_1
0x4005ad9	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3960	ldlang.c	FUNCTION_89	FOR_1
0x4005add	          0x4885c0	                           test rax, rax	      3958	ldlang.c	FUNCTION_89	FOR_1
0x4005ae0	            0x75cf	                           jne 0x4005ab1	      3958	ldlang.c	FUNCTION_89	FOR_1
0x4005ae2	    0xc70500000000	               mov dword [0x04005aec], 1	      3978	ldlang.c	FUNCTION_89
0x4005aec	            0xf3c3	                                     ret	      3978	ldlang.c	FUNCTION_89
lang_for_each_input_file	IF,0:WHILE,0:FOR,1:DO,0:SWITCH,0:functions,0:CALL,1:ELSE,0	16
0x4005f0a	              0x55	                                push rbp	      6612	ldlang.c	FUNCTION_141
0x4005f0b	              0x53	                                push rbx	      6612	ldlang.c	FUNCTION_141
0x4005f0c	        0x4883ec08	                              sub rsp, 8	      6612	ldlang.c	FUNCTION_141
0x4005f10	          0x4889fd	                            mov rbp, rdi	      6612	ldlang.c	FUNCTION_141
0x4005f13	    0x488b1d000000	            mov rbx, qword [0x04005f1a] 	      6615	ldlang.c	FUNCTION_141	FOR_1
0x4005f1a	          0x4885db	                           test rbx, rbx	      6615	ldlang.c	FUNCTION_141	FOR_1
0x4005f1d	            0x740e	                            je 0x4005f2d	      6615	ldlang.c	FUNCTION_141	FOR_1
0x4005f1f	          0x4889df	                            mov rdi, rbx	      6618	ldlang.c	FUNCTION_141	CALL_1
0x4005f22	            0xffd5	                                call rbp	      6618	ldlang.c	FUNCTION_141	CALL_1
0x4005f24	        0x488b5b38	            mov rbx, qword [rbx + 0x38] 	      6617	ldlang.c	FUNCTION_141	FOR_1
0x4005f28	          0x4885db	                           test rbx, rbx	      6615	ldlang.c	FUNCTION_141	FOR_1
0x4005f2b	            0x75f2	                           jne 0x4005f1f	      6615	ldlang.c	FUNCTION_141	FOR_1
0x4005f2d	        0x4883c408	                              add rsp, 8	      6619	ldlang.c	FUNCTION_141
0x4005f31	              0x5b	                                 pop rbx	      6619	ldlang.c	FUNCTION_141
0x4005f32	              0x5d	                                 pop rbp	      6619	ldlang.c	FUNCTION_141
0x4005f33	              0xc3	                                     ret	      6619	ldlang.c	FUNCTION_141
lang_get_regions	IF,2:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,4:ELSE,1	57
0x400431c	            0x4157	                                push r15	      7634	ldlang.c	FUNCTION_177
0x400431e	            0x4156	                                push r14	      7634	ldlang.c	FUNCTION_177
0x4004320	            0x4155	                                push r13	      7634	ldlang.c	FUNCTION_177
0x4004322	            0x4154	                                push r12	      7634	ldlang.c	FUNCTION_177
0x4004324	              0x55	                                push rbp	      7634	ldlang.c	FUNCTION_177
0x4004325	              0x53	                                push rbx	      7634	ldlang.c	FUNCTION_177
0x4004326	        0x4883ec08	                              sub rsp, 8	      7634	ldlang.c	FUNCTION_177
0x400432a	          0x4989fd	                            mov r13, rdi	      7634	ldlang.c	FUNCTION_177
0x400432d	          0x4989f7	                            mov r15, rsi	      7634	ldlang.c	FUNCTION_177
0x4004330	          0x4889d5	                            mov rbp, rdx	      7634	ldlang.c	FUNCTION_177
0x4004333	          0x4889cb	                            mov rbx, rcx	      7634	ldlang.c	FUNCTION_177
0x4004336	          0x4589c4	                           mov r12d, r8d	      7634	ldlang.c	FUNCTION_177
0x4004339	          0x4589ce	                           mov r14d, r9d	      7634	ldlang.c	FUNCTION_177
0x400433c	      0xbe00000000	                              mov esi, 0	      7635	ldlang.c	FUNCTION_177	CALL_1
0x4004341	          0x4889cf	                            mov rdi, rcx	      7635	ldlang.c	FUNCTION_177	CALL_1
0x4004344	      0xe800000000	                          call 0x4004349	      7635	ldlang.c	FUNCTION_177	CALL_1
0x4004349	          0x498907	                    mov qword [r15], rax	      7635	ldlang.c	FUNCTION_177	CALL_1
0x400434c	          0x4885db	                           test rbx, rbx	      7640	ldlang.c	FUNCTION_177	IF_1
0x400434f	           0xf95c3	                                setne bl	      7640	ldlang.c	FUNCTION_177	IF_1
0x4004352	          0x4585f6	                         test r14d, r14d	      7640	ldlang.c	FUNCTION_177	IF_1
0x4004355	            0x7523	                           jne 0x400437a	      7640	ldlang.c	FUNCTION_177	IF_1
0x4004357	            0x84db	                             test bl, bl	      7640	ldlang.c	FUNCTION_177	IF_1
0x4004359	            0x741f	                            je 0x400437a	      7640	ldlang.c	FUNCTION_177	IF_1
0x400435b	      0xbf00000000	                              mov edi, 0	      7642	ldlang.c	FUNCTION_177	IF_1
0x4004360	      0xb90a000000	                            mov ecx, 0xa	      7642	ldlang.c	FUNCTION_177	IF_1
0x4004365	          0x4889ee	                            mov rsi, rbp	      7642	ldlang.c	FUNCTION_177	IF_1
0x4004368	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      7642	ldlang.c	FUNCTION_177	IF_1
0x400436a	           0xf97c1	                                 seta cl	      7642	ldlang.c	FUNCTION_177	IF_1
0x400436d	           0xf92c2	                                 setb dl	      7642	ldlang.c	FUNCTION_177	IF_1
0x4004370	            0x38d1	                              cmp cl, dl	      7642	ldlang.c	FUNCTION_177	IF_1
0x4004372	            0x7506	                           jne 0x400437a	      7642	ldlang.c	FUNCTION_177	IF_1
0x4004374	        0x49894500	                    mov qword [r13], rax	      7643	ldlang.c	FUNCTION_177	IF_1
0x4004378	            0xeb11	                           jmp 0x400438b	      7643	ldlang.c	FUNCTION_177	IF_1
0x400437a	      0xbe00000000	                              mov esi, 0	      7645	ldlang.c	FUNCTION_177	CALL_2
0x400437f	          0x4889ef	                            mov rdi, rbp	      7645	ldlang.c	FUNCTION_177	CALL_2
0x4004382	      0xe800000000	                          call 0x4004387	      7645	ldlang.c	FUNCTION_177	CALL_2
0x4004387	        0x49894500	                    mov qword [r13], rax	      7645	ldlang.c	FUNCTION_177	CALL_2
0x400438b	          0x4585e4	                         test r12d, r12d	      7647	ldlang.c	FUNCTION_177	IF_2
0x400438e	            0x742a	                            je 0x40043ba	      7647	ldlang.c	FUNCTION_177	IF_2
0x4004390	            0x84db	                             test bl, bl	      7647	ldlang.c	FUNCTION_177	IF_2
0x4004392	            0x7426	                            je 0x40043ba	      7647	ldlang.c	FUNCTION_177	IF_2
0x4004394	      0xba05000000	                              mov edx, 5	      7648	ldlang.c	FUNCTION_177	IF_2	CALL_4
0x4004399	      0xbe00000000	                              mov esi, 0	      7648	ldlang.c	FUNCTION_177	IF_2	CALL_4
0x400439e	      0xbf00000000	                              mov edi, 0	      7648	ldlang.c	FUNCTION_177	IF_2	CALL_4
0x40043a3	      0xe800000000	                          call 0x40043a8	      7648	ldlang.c	FUNCTION_177	IF_2	CALL_4
0x40043a8	      0xbe00000000	                              mov esi, 0	      7648	ldlang.c	FUNCTION_177	IF_2	CALL_4
0x40043ad	          0x4889c7	                            mov rdi, rax	      7648	ldlang.c	FUNCTION_177	IF_2	CALL_4
0x40043b0	      0xb800000000	                              mov eax, 0	      7648	ldlang.c	FUNCTION_177	IF_2	CALL_4
0x40043b5	      0xe800000000	                          call 0x40043ba	      7648	ldlang.c	FUNCTION_177	IF_2	CALL_4
0x40043ba	        0x4883c408	                              add rsp, 8	      7650	ldlang.c	FUNCTION_177
0x40043be	              0x5b	                                 pop rbx	      7650	ldlang.c	FUNCTION_177
0x40043bf	              0x5d	                                 pop rbp	      7650	ldlang.c	FUNCTION_177
0x40043c0	            0x415c	                                 pop r12	      7650	ldlang.c	FUNCTION_177
0x40043c2	            0x415d	                                 pop r13	      7650	ldlang.c	FUNCTION_177
0x40043c4	            0x415e	                                 pop r14	      7650	ldlang.c	FUNCTION_177
0x40043c6	            0x415f	                                 pop r15	      7650	ldlang.c	FUNCTION_177
0x40043c8	              0xc3	                                     ret	      7650	ldlang.c	FUNCTION_177
lang_do_assignments_1	IF,16:WHILE,1:FOR,1:DO,0:SWITCH,2:functions,0:CALL,16:ELSE,3	229
0x4000a72	            0x4155	                                push r13	      5750	ldlang.c	FUNCTION_122
0x4000a74	            0x4154	                                push r12	      5750	ldlang.c	FUNCTION_122
0x4000a76	              0x55	                                push rbp	      5750	ldlang.c	FUNCTION_122
0x4000a77	              0x53	                                push rbx	      5750	ldlang.c	FUNCTION_122
0x4000a78	        0x4883ec18	                           sub rsp, 0x18	      5750	ldlang.c	FUNCTION_122
0x4000a7c	          0x4889fb	                            mov rbx, rdi	      5750	ldlang.c	FUNCTION_122
0x4000a7f	          0x4989f4	                            mov r12, rsi	      5750	ldlang.c	FUNCTION_122
0x4000a82	          0x4989d5	                            mov r13, rdx	      5750	ldlang.c	FUNCTION_122
0x4000a85	      0x48894c2408	                mov qword [rsp + 8], rcx	      5750	ldlang.c	FUNCTION_122
0x4000a8a	          0x4c89c5	                             mov rbp, r8	      5750	ldlang.c	FUNCTION_122
0x4000a8d	          0x4885ff	                           test rdi, rdi	      5751	ldlang.c	FUNCTION_122	FOR_1
0x4000a90	     0xf846d030000	                            je 0x4000e03	      5751	ldlang.c	FUNCTION_122	FOR_1
0x4000a96	        0x837b080f	                cmp dword [rbx + 8], 0xf	      5753	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x4000a9a	     0xf8748030000	                            ja 0x4000de8	      5753	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x4000aa0	          0x8b4308	                mov eax, dword [rbx + 8]	      5753	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x4000aa3	    0xff24c5000000	                       jmp qword [rax*8]	      5753	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x4000aaa	          0x4989e8	                             mov r8, rbp	      5756	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_1
0x4000aad	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      5756	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_1
0x4000ab2	          0x4c89ea	                            mov rdx, r13	      5756	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_1
0x4000ab5	          0x4c89e6	                            mov rsi, r12	      5756	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_1
0x4000ab8	    0x488b3d000000	            mov rdi, qword [0x04000abf] 	      5756	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_1
0x4000abf	      0xe8aeffffff	          call sym.lang_do_assignments_1	      5756	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_1
0x4000ac4	      0x4889442408	                mov qword [rsp + 8], rax	      5756	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_1
0x4000ac9	      0xe929030000	                           jmp 0x4000df7	      5758	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x4000ace	          0x4889de	                            mov rsi, rbx	      5765	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x4000ad1	         0xfb64500	                   movzx eax, byte [rbp]	      5766	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x4000ad5	          0x83e001	                              and eax, 1	      5766	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x4000ad8	          0xc1e005	                              shl eax, 5	      5766	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x4000adb	     0xfb693900000	           movzx edx, byte [rbx + 0x90] 	      5766	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x4000ae2	          0x83e2df	                     and edx, 0xffffffdf	      5766	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x4000ae5	             0x9d0	                             or eax, edx	      5766	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x4000ae7	    0x888390000000	               mov byte [rbx + 0x90], al	      5766	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x4000aed	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      5767	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_1
0x4000af1	          0x4885c0	                           test rax, rax	      5767	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_1
0x4000af4	            0x7429	                            je 0x4000b1f	      5767	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_1
0x4000af6	    0xf68390000000	               test byte [rbx + 0x90], 8	      5767	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_1
0x4000afd	            0x7520	                           jne 0x4000b1f	      5767	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_1
0x4000aff	        0xf6402001	               test byte [rax + 0x20], 1	      5769	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_1	IF_2
0x4000b03	            0x7411	                            je 0x4000b16	      5769	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_1	IF_2
0x4000b05	    0x48891d000000	            mov qword [0x04000b0c], rbx 	      5771	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_1	IF_2
0x4000b0c	    0xc70500000000	               mov dword [0x04000b16], 0	      5772	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_1	IF_2
0x4000b16	        0x488b4028	            mov rax, qword [rax + 0x28] 	      5774	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_1
0x4000b1a	      0x4889442408	                mov qword [rsp + 8], rax	      5774	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_1
0x4000b1f	        0x488b5350	            mov rdx, qword [rbx + 0x50] 	      5776	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_2
0x4000b23	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      5776	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_2
0x4000b27	          0x4989e8	                             mov r8, rbp	      5776	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_2
0x4000b2a	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      5776	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_2
0x4000b2f	      0xe83effffff	          call sym.lang_do_assignments_1	      5776	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_2
0x4000b34	    0xf68390000000	               test byte [rbx + 0x90], 8	      5778	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3
0x4000b3b	     0xf85b6020000	                           jne 0x4000df7	      5778	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3
0x4000b41	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	      5780	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	IF_4
0x4000b45	          0x4885d2	                           test rdx, rdx	      5780	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	IF_4
0x4000b48	            0x7450	                            je 0x4000b9a	      5780	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	IF_4
0x4000b4a	          0x8b4220	            mov eax, dword [rdx + 0x20] 	      5783	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x4000b4d	      0x2502040000	                          and eax, 0x402	      5783	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x4000b52	      0x3d00040000	                          cmp eax, 0x400	      5783	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x4000b57	            0x750e	                           jne 0x4000b67	      5783	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x4000b59	     0xfb605000000	           movzx eax, byte [0x04000b60] 	      5784	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	IF_4	IF_5	CALL_3
0x4000b60	          0x83e003	                              and eax, 3	      5784	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	IF_4	IF_5	CALL_3
0x4000b63	            0x3c02	                               cmp al, 2	      5784	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	IF_4	IF_5	CALL_3
0x4000b65	            0x7512	                           jne 0x4000b79	      5784	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	IF_4	IF_5	CALL_3
0x4000b67	        0x488b4238	            mov rax, qword [rdx + 0x38] 	      5785	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x4000b6b	    0x8b0d00000000	            mov ecx, dword [0x04000b71] 	      5785	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x4000b71	          0x48d3e8	                             shr rax, cl	      5785	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x4000b74	      0x4801442408	                add qword [rsp + 8], rax	      5785	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	IF_4	IF_5
0x4000b79	        0x488b7b68	            mov rdi, qword [rbx + 0x68] 	      5787	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	IF_4	IF_6
0x4000b7d	          0x4885ff	                           test rdi, rdi	      5787	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	IF_4	IF_6
0x4000b80	     0xf8471020000	                            je 0x4000df7	      5787	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	IF_4	IF_6
0x4000b86	      0x488d542408	                      lea rdx, [rsp + 8]	      5788	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	IF_4	IF_6	CALL_4
0x4000b8b	      0xbe00000000	                              mov esi, 0	      5788	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	IF_4	IF_6	CALL_4
0x4000b90	      0xe800000000	                          call 0x4000b95	      5788	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	IF_4	IF_6	CALL_4
0x4000b95	      0xe95d020000	                           jmp 0x4000df7	      5788	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	IF_4	IF_6	CALL_4
0x4000b9a	      0x4889442408	                mov qword [rsp + 8], rax	      5792	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	ELSE_1
0x4000b9f	      0xe953020000	                           jmp 0x4000df7	      5792	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_3	ELSE_1
0x4000ba4	        0x488b7b30	            mov rdi, qword [rbx + 0x30] 	      5799	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_5
0x4000ba8	          0x4989e8	                             mov r8, rbp	      5799	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_5
0x4000bab	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      5799	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_5
0x4000bb0	          0x4c89ea	                            mov rdx, r13	      5799	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_5
0x4000bb3	          0x4c89e6	                            mov rsi, r12	      5799	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_5
0x4000bb6	      0xe8b7feffff	          call sym.lang_do_assignments_1	      5799	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_5
0x4000bbb	      0x4889442408	                mov qword [rsp + 8], rax	      5799	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_5
0x4000bc0	      0xe932020000	                           jmp 0x4000df7	      5801	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x4000bc5	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      5809	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_6
0x4000bc9	      0x488d542408	                      lea rdx, [rsp + 8]	      5809	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_6
0x4000bce	      0xbe00000000	                              mov esi, 0	      5809	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_6
0x4000bd3	      0xe800000000	                          call 0x4000bd8	      5809	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_6
0x4000bd8	    0x833d00000000	               cmp dword [0x04000bdf], 0	      5810	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_7
0x4000bdf	            0x7421	                            je 0x4000c02	      5810	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_7
0x4000be1	    0x488b05000000	            mov rax, qword [0x04000be8] 	      5812	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_7
0x4000be8	        0x48894320	             mov qword [rbx + 0x20], rax	      5812	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_7
0x4000bec	    0x488b15000000	            mov rdx, qword [0x04000bf3] 	      5813	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_7	IF_8
0x4000bf3	          0x4885d2	                           test rdx, rdx	      5813	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_7	IF_8
0x4000bf6	            0x7434	                            je 0x4000c2c	      5813	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_7	IF_8
0x4000bf8	        0x48034228	             add rax, qword [rdx + 0x28]	      5814	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_7	IF_8
0x4000bfc	        0x48894320	             mov qword [rbx + 0x20], rax	      5814	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_7	IF_8
0x4000c00	            0xeb2a	                           jmp 0x4000c2c	      5814	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_7	IF_8
0x4000c02	    0x833d00000000	               cmp dword [0x04000c09], 4	      5816	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	ELSE_2	IF_9
0x4000c09	            0x7521	                           jne 0x4000c2c	      5816	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	ELSE_2	IF_9
0x4000c0b	      0xba05000000	                              mov edx, 5	      5817	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	ELSE_2	IF_9
0x4000c10	      0xbe00000000	                              mov esi, 0	      5817	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	ELSE_2	IF_9
0x4000c15	      0xbf00000000	                              mov edi, 0	      5817	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	ELSE_2	IF_9
0x4000c1a	      0xe800000000	                          call 0x4000c1f	      5817	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	ELSE_2	IF_9
0x4000c1f	          0x4889c7	                            mov rdi, rax	      5817	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	ELSE_2	IF_9
0x4000c22	      0xb800000000	                              mov eax, 0	      5817	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	ELSE_2	IF_9
0x4000c27	      0xe800000000	                          call 0x4000c2c	      5817	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	ELSE_2	IF_9
0x4000c2c	          0x8b4310	            mov eax, dword [rbx + 0x10] 	      5820	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	SWITCH_2
0x4000c2f	      0x2d1a010000	                          sub eax, 0x11a	      5820	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	SWITCH_2
0x4000c34	          0x83f804	                              cmp eax, 4	      5820	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	SWITCH_2
0x4000c37	            0x7710	                            ja 0x4000c49	      5820	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	SWITCH_2
0x4000c39	            0x89c0	                            mov eax, eax	      5820	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	SWITCH_2
0x4000c3b	    0xff24c5000000	                       jmp qword [rax*8]	      5820	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	SWITCH_2
0x4000c42	      0xb804000000	                              mov eax, 4	      5829	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	SWITCH_2
0x4000c47	            0xeb27	                           jmp 0x4000c70	      5829	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	SWITCH_2
0x4000c49	      0xba00000000	                              mov edx, 0	      5823	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	SWITCH_2	CALL_9
0x4000c4e	      0xbebf160000	                         mov esi, 0x16bf	      5823	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	SWITCH_2	CALL_9
0x4000c53	      0xbf00000000	                              mov edi, 0	      5823	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	SWITCH_2	CALL_9
0x4000c58	      0xe800000000	                          call 0x4000c5d	      5823	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	SWITCH_2	CALL_9
0x4000c5d	      0xb802000000	                              mov eax, 2	      5832	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	SWITCH_2
0x4000c62	            0xeb0c	                           jmp 0x4000c70	      5833	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	SWITCH_2
0x4000c64	      0xb801000000	                              mov eax, 1	      5835	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	SWITCH_2
0x4000c69	            0xeb05	                           jmp 0x4000c70	      5836	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	SWITCH_2
0x4000c6b	      0xb808000000	                              mov eax, 8	      5826	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	SWITCH_2
0x4000c70	    0x8b0d00000000	            mov ecx, dword [0x04000c76] 	      5838	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_10
0x4000c76	      0xba01000000	                              mov edx, 1	      5838	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_10
0x4000c7b	            0xd3e2	                             shl edx, cl	      5838	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_10
0x4000c7d	            0x39d0	                            cmp eax, edx	      5840	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x4000c7f	           0xf42c2	                          cmovb eax, edx	      5840	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x4000c82	            0xd3e8	                             shr eax, cl	      5840	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x4000c84	            0x89c0	                            mov eax, eax	      5840	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x4000c86	      0x4801442408	                add qword [rsp + 8], rax	      5840	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x4000c8b	      0xe967010000	                           jmp 0x4000df7	      5842	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x4000c90	        0x488b7b30	            mov rdi, qword [rbx + 0x30] 	      5845	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_10
0x4000c94	      0x488d542408	                      lea rdx, [rsp + 8]	      5845	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_10
0x4000c99	      0xbe00000000	                              mov esi, 0	      5845	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_10
0x4000c9e	      0xe800000000	                          call 0x4000ca3	      5845	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_10
0x4000ca3	    0x833d00000000	               cmp dword [0x04000caa], 0	      5847	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_11
0x4000caa	            0x740d	                            je 0x4000cb9	      5847	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_11
0x4000cac	    0x488b05000000	            mov rax, qword [0x04000cb3] 	      5848	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_11
0x4000cb3	        0x48894338	             mov qword [rbx + 0x38], rax	      5848	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_11
0x4000cb7	            0xeb2a	                           jmp 0x4000ce3	      5848	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_11
0x4000cb9	    0x833d00000000	               cmp dword [0x04000cc0], 4	      5849	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	ELSE_3	IF_12
0x4000cc0	            0x7521	                           jne 0x4000ce3	      5849	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	ELSE_3	IF_12
0x4000cc2	      0xba05000000	                              mov edx, 5	      5850	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	ELSE_3	IF_12
0x4000cc7	      0xbe00000000	                              mov esi, 0	      5850	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	ELSE_3	IF_12
0x4000ccc	      0xbf00000000	                              mov edi, 0	      5850	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	ELSE_3	IF_12
0x4000cd1	      0xe800000000	                          call 0x4000cd6	      5850	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	ELSE_3	IF_12
0x4000cd6	          0x4889c7	                            mov rdi, rax	      5850	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	ELSE_3	IF_12
0x4000cd9	      0xb800000000	                              mov eax, 0	      5850	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	ELSE_3	IF_12
0x4000cde	      0xe800000000	                          call 0x4000ce3	      5850	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	ELSE_3	IF_12
0x4000ce3	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      5851	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_13
0x4000ce7	      0xe800000000	                          call 0x4000cec	      5851	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_13
0x4000cec	    0x8b0d00000000	            mov ecx, dword [0x04000cf2] 	      5851	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_13
0x4000cf2	            0xd3e8	                             shr eax, cl	      5851	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_13
0x4000cf4	            0x89c0	                            mov eax, eax	      5851	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_13
0x4000cf6	      0x4801442408	                add qword [rsp + 8], rax	      5851	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_13
0x4000cfb	      0xe9f7000000	                           jmp 0x4000df7	      5852	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x4000d00	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      5856	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x4000d04	        0xf6402180	           test byte [rax + 0x21], 0x80 	      5858	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_13
0x4000d08	     0xf85e9000000	                           jne 0x4000df7	      5858	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_13
0x4000d0e	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5859	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_13
0x4000d12	    0x8b0d00000000	            mov ecx, dword [0x04000d18] 	      5859	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_13
0x4000d18	          0x48d3e8	                             shr rax, cl	      5859	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_13
0x4000d1b	      0x4801442408	                add qword [rsp + 8], rax	      5859	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_13
0x4000d20	      0xe9d2000000	                           jmp 0x4000df7	      5859	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_13
0x4000d25	        0x4c8b6b10	            mov r13, qword [rbx + 0x10] 	      5867	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x4000d29	      0xe9c9000000	                           jmp 0x4000df7	      5868	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x4000d2e	    0x48891d000000	            mov qword [0x04000d35], rbx 	      5871	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x4000d35	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      5872	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14
0x4000d39	        0x83781008	               cmp dword [rax + 0x10], 8	      5872	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14
0x4000d3d	            0x7456	                            je 0x4000d95	      5872	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14
0x4000d3f	        0x488b4018	            mov rax, qword [rax + 0x18] 	      5874	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14
0x4000d43	    0x4c3b25000000	            cmp r12, qword [0x04000d4a] 	      5876	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	IF_15
0x4000d4a	            0x7517	                           jne 0x4000d63	      5876	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	IF_15
0x4000d4c	          0x80382e	                    cmp byte [rax], 0x2e	      5876	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	IF_15
0x4000d4f	            0x7512	                           jne 0x4000d63	      5876	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	IF_15
0x4000d51	        0x80780100	                   cmp byte [rax + 1], 0	      5876	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	IF_15
0x4000d55	            0x753e	                           jne 0x4000d95	      5876	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	IF_15
0x4000d57	    0xc70500000000	               mov dword [0x04000d61], 1	      5877	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	IF_15
0x4000d61	            0xeb32	                           jmp 0x4000d95	      5877	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	IF_15
0x4000d63	           0xfb610	                   movzx edx, byte [rax]	      5879	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	WHILE_1
0x4000d66	          0x80fa5f	                            cmp dl, 0x5f	      5879	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	WHILE_1
0x4000d69	            0x750c	                           jne 0x4000d77	      5879	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	WHILE_1
0x4000d6b	        0x4883c001	                              add rax, 1	      5880	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	WHILE_1
0x4000d6f	           0xfb610	                   movzx edx, byte [rax]	      5879	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	WHILE_1
0x4000d72	          0x80fa5f	                            cmp dl, 0x5f	      5879	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	WHILE_1
0x4000d75	            0x74f4	                            je 0x4000d6b	      5879	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	WHILE_1
0x4000d77	          0x80fa65	                            cmp dl, 0x65	      5881	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	IF_16
0x4000d7a	            0x7519	                           jne 0x4000d95	      5881	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	IF_16
0x4000d7c	        0x8078016e	                cmp byte [rax + 1], 0x6e	      5881	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	IF_16
0x4000d80	            0x7513	                           jne 0x4000d95	      5881	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	IF_16
0x4000d82	        0x80780264	                cmp byte [rax + 2], 0x64	      5881	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	IF_16
0x4000d86	            0x750d	                           jne 0x4000d95	      5881	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	IF_16
0x4000d88	        0x80780300	                   cmp byte [rax + 3], 0	      5881	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	IF_16
0x4000d8c	            0x7507	                           jne 0x4000d95	      5881	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	IF_16
0x4000d8e	    0xc74500010000	                      mov dword [rbp], 1	      5882	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	IF_14	IF_16
0x4000d95	      0x498b742438	            mov rsi, qword [r12 + 0x38] 	      5885	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x4000d9a	          0x4885f6	                           test rsi, rsi	      5884	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_14
0x4000d9d	      0xb800000000	                              mov eax, 0	      5884	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_14
0x4000da2	        0x480f44f0	                          cmove rsi, rax	      5884	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_14
0x4000da6	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      5884	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_14
0x4000daa	      0x488d542408	                      lea rdx, [rsp + 8]	      5884	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_14
0x4000daf	      0xe800000000	                          call 0x4000db4	      5884	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_14
0x4000db4	            0xeb41	                           jmp 0x4000df7	      5888	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x4000db6	    0x8b0d00000000	            mov ecx, dword [0x04000dbc] 	      5891	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x4000dbc	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      5891	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x4000dc0	          0x48d3e8	                             shr rax, cl	      5891	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x4000dc3	      0x4801442408	                add qword [rsp + 8], rax	      5891	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x4000dc8	            0xeb2d	                           jmp 0x4000df7	      5892	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x4000dca	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      5895	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_15
0x4000dce	          0x4989e8	                             mov r8, rbp	      5895	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_15
0x4000dd1	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      5895	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_15
0x4000dd6	          0x4c89ea	                            mov rdx, r13	      5895	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_15
0x4000dd9	          0x4c89e6	                            mov rsi, r12	      5895	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_15
0x4000ddc	      0xe891fcffff	          call sym.lang_do_assignments_1	      5895	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_15
0x4000de1	      0x4889442408	                mov qword [rsp + 8], rax	      5895	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_15
0x4000de6	            0xeb0f	                           jmp 0x4000df7	      5897	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1
0x4000de8	      0xbe12170000	                         mov esi, 0x1712	      5906	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_16
0x4000ded	      0xbf00000000	                              mov edi, 0	      5906	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_16
0x4000df2	      0xe800000000	                          call 0x4000df7	      5906	ldlang.c	FUNCTION_122	FOR_1	SWITCH_1	CALL_16
0x4000df7	          0x488b1b	                    mov rbx, qword [rbx]	      5751	ldlang.c	FUNCTION_122	FOR_1
0x4000dfa	          0x4885db	                           test rbx, rbx	      5751	ldlang.c	FUNCTION_122	FOR_1
0x4000dfd	     0xf8593fcffff	                           jne 0x4000a96	      5751	ldlang.c	FUNCTION_122	FOR_1
0x4000e03	      0x488b442408	                mov rax, qword [rsp + 8]	      5911	ldlang.c	FUNCTION_122
0x4000e08	        0x4883c418	                           add rsp, 0x18	      5911	ldlang.c	FUNCTION_122
0x4000e0c	              0x5b	                                 pop rbx	      5911	ldlang.c	FUNCTION_122
0x4000e0d	              0x5d	                                 pop rbp	      5911	ldlang.c	FUNCTION_122
0x4000e0e	            0x415c	                                 pop r12	      5911	ldlang.c	FUNCTION_122
0x4000e10	            0x415d	                                 pop r13	      5911	ldlang.c	FUNCTION_122
0x4000e12	              0xc3	                                     ret	      5911	ldlang.c	FUNCTION_122
section_already_linked	IF,3:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,1:ELSE,0	28
0x40001aa	        0x4883ec08	                              sub rsp, 8	      2256	ldlang.c	FUNCTION_57
0x40001ae	          0x4889f1	                            mov rcx, rsi	      2256	ldlang.c	FUNCTION_57
0x40001b1	        0xf6424810	           test byte [rdx + 0x48], 0x10 	      2261	ldlang.c	FUNCTION_57	IF_1
0x40001b5	            0x7414	                            je 0x40001cb	      2261	ldlang.c	FUNCTION_57	IF_1
0x40001b7	        0x488b4708	                mov rax, qword [rdi + 8]	      2263	ldlang.c	FUNCTION_57	IF_1
0x40001bb	      0xbe00000000	                              mov esi, 0	      2263	ldlang.c	FUNCTION_57	IF_1
0x40001c0	          0x4889cf	                            mov rdi, rcx	      2263	ldlang.c	FUNCTION_57	IF_1
0x40001c3	    0xff90c8020000	                call qword [rax + 0x2c8]	      2263	ldlang.c	FUNCTION_57	IF_1
0x40001c9	            0xeb43	                           jmp 0x400020e	      2264	ldlang.c	FUNCTION_57	IF_1
0x40001cb	     0xfb605000000	           movzx eax, byte [0x040001d2] 	      2268	ldlang.c	FUNCTION_57	IF_2	CALL_1
0x40001d2	          0x83e003	                              and eax, 3	      2268	ldlang.c	FUNCTION_57	IF_2	CALL_1
0x40001d5	            0x3c02	                               cmp al, 2	      2268	ldlang.c	FUNCTION_57	IF_2	CALL_1
0x40001d7	            0x741d	                            je 0x40001f6	      2268	ldlang.c	FUNCTION_57	IF_2	CALL_1
0x40001d9	        0xf6474620	           test byte [rdi + 0x46], 0x20 	      2269	ldlang.c	FUNCTION_57	IF_2
0x40001dd	            0x7517	                           jne 0x40001f6	      2269	ldlang.c	FUNCTION_57	IF_2
0x40001df	          0x8b4620	            mov eax, dword [rsi + 0x20] 	      2270	ldlang.c	FUNCTION_57	IF_2
0x40001e2	      0x2500802002	                      and eax, 0x2208000	      2270	ldlang.c	FUNCTION_57	IF_2
0x40001e7	      0x3d00800000	                         cmp eax, 0x8000	      2270	ldlang.c	FUNCTION_57	IF_2
0x40001ec	            0x7508	                           jne 0x40001f6	      2270	ldlang.c	FUNCTION_57	IF_2
0x40001ee	    0x48c746680000	               mov qword [rsi + 0x68], 0	      2271	ldlang.c	FUNCTION_57	IF_2
0x40001f6	        0xf6474508	               test byte [rdi + 0x45], 8	      2273	ldlang.c	FUNCTION_57	IF_3
0x40001fa	            0x7512	                           jne 0x400020e	      2273	ldlang.c	FUNCTION_57	IF_3
0x40001fc	        0x488b4708	                mov rax, qword [rdi + 8]	      2274	ldlang.c	FUNCTION_57	IF_3
0x4000200	      0xba00000000	                              mov edx, 0	      2274	ldlang.c	FUNCTION_57	IF_3
0x4000205	          0x4889ce	                            mov rsi, rcx	      2274	ldlang.c	FUNCTION_57	IF_3
0x4000208	    0xff9018030000	                call qword [rax + 0x318]	      2274	ldlang.c	FUNCTION_57	IF_3
0x400020e	        0x4883c408	                              add rsp, 8	      2275	ldlang.c	FUNCTION_57
0x4000212	              0xc3	                                     ret	      2275	ldlang.c	FUNCTION_57
ldlang_add_require_defined	IF,0:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,2:ELSE,0	19
0x4005a58	              0x55	                                push rbp	      3453	ldlang.c	FUNCTION_82
0x4005a59	              0x53	                                push rbx	      3453	ldlang.c	FUNCTION_82
0x4005a5a	        0x4883ec08	                              sub rsp, 8	      3453	ldlang.c	FUNCTION_82
0x4005a5e	          0x4889fd	                            mov rbp, rdi	      3453	ldlang.c	FUNCTION_82
0x4005a61	      0xbe01000000	                              mov esi, 1	      3456	ldlang.c	FUNCTION_82	CALL_1
0x4005a66	      0xe800000000	                          call 0x4005a6b	      3456	ldlang.c	FUNCTION_82	CALL_1
0x4005a6b	      0xbf10000000	                           mov edi, 0x10	      3457	ldlang.c	FUNCTION_82	CALL_2
0x4005a70	      0xe800000000	                          call 0x4005a75	      3457	ldlang.c	FUNCTION_82	CALL_2
0x4005a75	          0x4889c3	                            mov rbx, rax	      3457	ldlang.c	FUNCTION_82	CALL_2
0x4005a78	    0x488b05000000	            mov rax, qword [0x04005a7f] 	      3458	ldlang.c	FUNCTION_82
0x4005a7f	        0x48894308	                mov qword [rbx + 8], rax	      3458	ldlang.c	FUNCTION_82
0x4005a83	          0x4889ef	                            mov rdi, rbp	      3459	ldlang.c	FUNCTION_82
0x4005a86	      0xe800000000	                          call 0x4005a8b	      3459	ldlang.c	FUNCTION_82
0x4005a8b	          0x488903	                    mov qword [rbx], rax	      3459	ldlang.c	FUNCTION_82
0x4005a8e	    0x48891d000000	            mov qword [0x04005a95], rbx 	      3460	ldlang.c	FUNCTION_82
0x4005a95	        0x4883c408	                              add rsp, 8	      3461	ldlang.c	FUNCTION_82
0x4005a99	              0x5b	                                 pop rbx	      3461	ldlang.c	FUNCTION_82
0x4005a9a	              0x5d	                                 pop rbp	      3461	ldlang.c	FUNCTION_82
0x4005a9b	              0xc3	                                     ret	      3461	ldlang.c	FUNCTION_82
lang_relax_sections	IF,2:WHILE,1:FOR,0:DO,1:SWITCH,0:functions,0:CALL,6:ELSE,0	41
0x40072e3	              0x53	                                push rbx	      6931	ldlang.c	FUNCTION_155
0x40072e4	        0x4883ec10	                           sub rsp, 0x10	      6931	ldlang.c	FUNCTION_155
0x40072e8	    0x64488b042528	                mov rax, qword fs:[0x28]	      6931	ldlang.c	FUNCTION_155
0x40072f1	      0x4889442408	                mov qword [rsp + 8], rax	      6931	ldlang.c	FUNCTION_155
0x40072f6	            0x31c0	                            xor eax, eax	      6931	ldlang.c	FUNCTION_155
0x40072f8	    0x833d00000000	               cmp dword [0x040072ff], 1	      6932	ldlang.c	FUNCTION_155	IF_1
0x40072ff	            0x7760	                            ja 0x4007361	      6932	ldlang.c	FUNCTION_155	IF_1
0x4007301	    0x8b1d00000000	            mov ebx, dword [0x04007307] 	      6935	ldlang.c	FUNCTION_155	IF_1
0x4007307	    0xc70500000000	               mov dword [0x04007311], 0	      6938	ldlang.c	FUNCTION_155	IF_1
0x4007311	            0x85db	                           test ebx, ebx	      6940	ldlang.c	FUNCTION_155	IF_1	WHILE_1
0x4007313	            0x7450	                            je 0x4007365	      6940	ldlang.c	FUNCTION_155	IF_1	WHILE_1
0x4007315	    0xc70500000000	     mov dword [0x0400731f], 0xffffffff 	      6945	ldlang.c	FUNCTION_155	IF_1	WHILE_1
0x400731f	    0x830500000000	               add dword [0x04007326], 1	      6948	ldlang.c	FUNCTION_155	IF_1	WHILE_1	DO_1
0x4007326	      0xbf03000000	                              mov edi, 3	      6956	ldlang.c	FUNCTION_155	IF_1	WHILE_1	DO_1	CALL_1
0x400732b	      0xe800000000	                          call 0x4007330	      6956	ldlang.c	FUNCTION_155	IF_1	WHILE_1	DO_1	CALL_1
0x4007330	      0xe800000000	                          call 0x4007335	      6960	ldlang.c	FUNCTION_155	IF_1	WHILE_1	DO_1	CALL_2
0x4007335	    0xc74424040000	                  mov dword [rsp + 4], 0	      6964	ldlang.c	FUNCTION_155	IF_1	WHILE_1	DO_1
0x400733d	      0xbe00000000	                              mov esi, 0	      6965	ldlang.c	FUNCTION_155	IF_1	WHILE_1	DO_1	CALL_3
0x4007342	      0x488d7c2404	                      lea rdi, [rsp + 4]	      6965	ldlang.c	FUNCTION_155	IF_1	WHILE_1	DO_1	CALL_3
0x4007347	      0xe800000000	                          call 0x400734c	      6965	ldlang.c	FUNCTION_155	IF_1	WHILE_1	DO_1	CALL_3
0x400734c	      0x837c240400	                  cmp dword [rsp + 4], 0	      6967	ldlang.c	FUNCTION_155	IF_1	WHILE_1
0x4007351	            0x75cc	                           jne 0x400731f	      6967	ldlang.c	FUNCTION_155	IF_1	WHILE_1
0x4007353	    0x830500000000	               add dword [0x0400735a], 1	      6969	ldlang.c	FUNCTION_155	IF_1	WHILE_1
0x400735a	          0x83eb01	                              sub ebx, 1	      6940	ldlang.c	FUNCTION_155	IF_1	WHILE_1
0x400735d	            0x75b6	                           jne 0x4007315	      6940	ldlang.c	FUNCTION_155	IF_1	WHILE_1
0x400735f	            0xeb04	                           jmp 0x4007365	      6940	ldlang.c	FUNCTION_155	IF_1	WHILE_1
0x4007361	            0x85ff	                           test edi, edi	      6974	ldlang.c	FUNCTION_155	IF_2
0x4007363	            0x741e	                            je 0x4007383	      6974	ldlang.c	FUNCTION_155	IF_2
0x4007365	      0xbf03000000	                              mov edi, 3	      6977	ldlang.c	FUNCTION_155	IF_2	CALL_4
0x400736a	      0xe800000000	                          call 0x400736f	      6977	ldlang.c	FUNCTION_155	IF_2	CALL_4
0x400736f	      0xe800000000	                          call 0x4007374	      6978	ldlang.c	FUNCTION_155	IF_2	CALL_5
0x4007374	      0xbe01000000	                              mov esi, 1	      6979	ldlang.c	FUNCTION_155	IF_2	CALL_6
0x4007379	      0xbf00000000	                              mov edi, 0	      6979	ldlang.c	FUNCTION_155	IF_2	CALL_6
0x400737e	      0xe800000000	                          call 0x4007383	      6979	ldlang.c	FUNCTION_155	IF_2	CALL_6
0x4007383	      0x488b442408	                mov rax, qword [rsp + 8]	      6981	ldlang.c	FUNCTION_155
0x4007388	    0x644833042528	                xor rax, qword fs:[0x28]	      6981	ldlang.c	FUNCTION_155
0x4007391	            0x7405	                            je 0x4007398	      6981	ldlang.c	FUNCTION_155
0x4007393	      0xe800000000	                          call 0x4007398	      6981	ldlang.c	FUNCTION_155
0x4007398	        0x4883c410	                           add rsp, 0x10	      6981	ldlang.c	FUNCTION_155
0x400739c	              0x5b	                                 pop rbx	      6981	ldlang.c	FUNCTION_155
0x400739d	              0xc3	                                     ret	      6981	ldlang.c	FUNCTION_155
lang_for_each_file	IF,0:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,1:CALL,0:ELSE,0	16
0x4005f34	              0x55	                                push rbp	      6627	ldlang.c	FUNCTION_142
0x4005f35	              0x53	                                push rbx	      6627	ldlang.c	FUNCTION_142
0x4005f36	        0x4883ec08	                              sub rsp, 8	      6627	ldlang.c	FUNCTION_142
0x4005f3a	          0x4889fd	                            mov rbp, rdi	      6627	ldlang.c	FUNCTION_142
0x4005f3d	    0x488b1d000000	            mov rbx, qword [0x04005f44] 	      6628	ldlang.c	FUNCTION_142
0x4005f44	          0x4885db	                           test rbx, rbx	      6628	ldlang.c	FUNCTION_142
0x4005f47	            0x740e	                            je 0x4005f57	      6628	ldlang.c	FUNCTION_142
0x4005f49	          0x4889df	                            mov rdi, rbx	      6630	ldlang.c	FUNCTION_142	FUNCTION_1	CALL_1
0x4005f4c	            0xffd5	                                call rbp	      6630	ldlang.c	FUNCTION_142	FUNCTION_1	CALL_1
0x4005f4e	        0x488b5b30	            mov rbx, qword [rbx + 0x30] 	      6628	ldlang.c	FUNCTION_142
0x4005f52	          0x4885db	                           test rbx, rbx	      6628	ldlang.c	FUNCTION_142
0x4005f55	            0x75f2	                           jne 0x4005f49	      6628	ldlang.c	FUNCTION_142
0x4005f57	        0x4883c408	                              add rsp, 8	      6632	ldlang.c	FUNCTION_142
0x4005f5b	              0x5b	                                 pop rbx	      6632	ldlang.c	FUNCTION_142
0x4005f5c	              0x5d	                                 pop rbp	      6632	ldlang.c	FUNCTION_142
0x4005f5d	              0xc3	                                     ret	      6632	ldlang.c	FUNCTION_142
lang_add_output	IF,1:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,0:ELSE,0	7
0x4006d31	    0x833d00000000	               cmp dword [0x04006d38], 0	      6668	ldlang.c	FUNCTION_144	IF_1
0x4006d38	            0x7404	                            je 0x4006d3e	      6668	ldlang.c	FUNCTION_144	IF_1
0x4006d3a	            0x85f6	                           test esi, esi	      6668	ldlang.c	FUNCTION_144	IF_1
0x4006d3c	            0x7511	                           jne 0x4006d4f	      6668	ldlang.c	FUNCTION_144	IF_1
0x4006d3e	    0x48893d000000	            mov qword [0x04006d45], rdi 	      6670	ldlang.c	FUNCTION_144	IF_1
0x4006d45	    0xc70500000000	               mov dword [0x04006d4f], 1	      6671	ldlang.c	FUNCTION_144	IF_1
0x4006d4f	            0xf3c3	                                     ret	      6671	ldlang.c	FUNCTION_144	IF_1
walk_wild_section_specs1_wild0	IF,2:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,3:ELSE,1	46
0x40027e7	            0x4156	                                push r14	       570	ldlang.c	FUNCTION_18
0x40027e9	            0x4155	                                push r13	       570	ldlang.c	FUNCTION_18
0x40027eb	            0x4154	                                push r12	       570	ldlang.c	FUNCTION_18
0x40027ed	              0x55	                                push rbp	       570	ldlang.c	FUNCTION_18
0x40027ee	              0x53	                                push rbx	       570	ldlang.c	FUNCTION_18
0x40027ef	        0x4883ec10	                           sub rsp, 0x10	       570	ldlang.c	FUNCTION_18
0x40027f3	          0x4889fb	                            mov rbx, rdi	       570	ldlang.c	FUNCTION_18
0x40027f6	          0x4889f5	                            mov rbp, rsi	       570	ldlang.c	FUNCTION_18
0x40027f9	          0x4989d5	                            mov r13, rdx	       570	ldlang.c	FUNCTION_18
0x40027fc	          0x4989ce	                            mov r14, rcx	       570	ldlang.c	FUNCTION_18
0x40027ff	    0x64488b042528	                mov rax, qword fs:[0x28]	       570	ldlang.c	FUNCTION_18
0x4002808	      0x4889442408	                mov qword [rsp + 8], rax	       570	ldlang.c	FUNCTION_18
0x400280d	            0x31c0	                            xor eax, eax	       570	ldlang.c	FUNCTION_18
0x400280f	        0x4c8b6750	            mov r12, qword [rdi + 0x50] 	       577	ldlang.c	FUNCTION_18
0x4002813	      0x488d542404	                      lea rdx, [rsp + 4]	       578	ldlang.c	FUNCTION_18	CALL_1
0x4002818	          0x4c89e6	                            mov rsi, r12	       578	ldlang.c	FUNCTION_18	CALL_1
0x400281b	          0x4889ef	                            mov rdi, rbp	       578	ldlang.c	FUNCTION_18	CALL_1
0x400281e	      0xe885fbffff	                   call sym.find_section	       578	ldlang.c	FUNCTION_18	CALL_1
0x4002823	      0x837c240400	                  cmp dword [rsp + 4], 0	       580	ldlang.c	FUNCTION_18	IF_1
0x4002828	            0x7413	                            je 0x400283d	       580	ldlang.c	FUNCTION_18	IF_1
0x400282a	          0x4c89f1	                            mov rcx, r14	       581	ldlang.c	FUNCTION_18	CALL_2
0x400282d	          0x4c89ea	                            mov rdx, r13	       581	ldlang.c	FUNCTION_18	CALL_2
0x4002830	          0x4889ee	                            mov rsi, rbp	       581	ldlang.c	FUNCTION_18	CALL_2
0x4002833	          0x4889df	                            mov rdi, rbx	       581	ldlang.c	FUNCTION_18	CALL_2
0x4002836	      0xe8a1f8ffff	      call sym.walk_wild_section_general	       581	ldlang.c	FUNCTION_18	CALL_2
0x400283b	            0xeb1c	                           jmp 0x4002859	       581	ldlang.c	FUNCTION_18	CALL_2
0x400283d	          0x4885c0	                           test rax, rax	       582	ldlang.c	FUNCTION_18	ELSE_1	IF_2
0x4002840	            0x7417	                            je 0x4002859	       582	ldlang.c	FUNCTION_18	ELSE_1	IF_2
0x4002842	          0x4d89f1	                             mov r9, r14	       583	ldlang.c	FUNCTION_18	ELSE_1	IF_2
0x4002845	          0x4d89e8	                             mov r8, r13	       583	ldlang.c	FUNCTION_18	ELSE_1	IF_2
0x4002848	          0x4c89e1	                            mov rcx, r12	       583	ldlang.c	FUNCTION_18	ELSE_1	IF_2
0x400284b	          0x4889c2	                            mov rdx, rax	       583	ldlang.c	FUNCTION_18	ELSE_1	IF_2
0x400284e	          0x4889ee	                            mov rsi, rbp	       583	ldlang.c	FUNCTION_18	ELSE_1	IF_2
0x4002851	          0x4889df	                            mov rdi, rbx	       583	ldlang.c	FUNCTION_18	ELSE_1	IF_2
0x4002854	      0xe8eef6ffff	     call sym.walk_wild_consider_section	       583	ldlang.c	FUNCTION_18	ELSE_1	IF_2
0x4002859	      0x488b442408	                mov rax, qword [rsp + 8]	       584	ldlang.c	FUNCTION_18
0x400285e	    0x644833042528	                xor rax, qword fs:[0x28]	       584	ldlang.c	FUNCTION_18
0x4002867	            0x7405	                            je 0x400286e	       584	ldlang.c	FUNCTION_18
0x4002869	      0xe800000000	                          call 0x400286e	       584	ldlang.c	FUNCTION_18
0x400286e	        0x4883c410	                           add rsp, 0x10	       584	ldlang.c	FUNCTION_18
0x4002872	              0x5b	                                 pop rbx	       584	ldlang.c	FUNCTION_18
0x4002873	              0x5d	                                 pop rbp	       584	ldlang.c	FUNCTION_18
0x4002874	            0x415c	                                 pop r12	       584	ldlang.c	FUNCTION_18
0x4002876	            0x415d	                                 pop r13	       584	ldlang.c	FUNCTION_18
0x4002878	            0x415e	                                 pop r14	       584	ldlang.c	FUNCTION_18
0x400287a	              0xc3	                                     ret	       584	ldlang.c	FUNCTION_18
print_one_symbol	IF,1:WHILE,0:FOR,1:DO,0:SWITCH,0:functions,0:CALL,3:ELSE,0	33
0x40006fb	         0xfb64718	           movzx eax, byte [rdi + 0x18] 	      4130	ldlang.c	FUNCTION_93	IF_1
0x40006ff	          0x83e803	                              sub eax, 3	      4130	ldlang.c	FUNCTION_93	IF_1
0x4000702	            0x3c01	                               cmp al, 1	      4130	ldlang.c	FUNCTION_93	IF_1
0x4000704	            0x7760	                            ja 0x4000766	      4130	ldlang.c	FUNCTION_93	IF_1
0x4000706	        0x483b7728	            cmp rsi, qword [rdi + 0x28] 	      4132	ldlang.c	FUNCTION_93	IF_1
0x400070a	            0x755a	                           jne 0x4000766	      4132	ldlang.c	FUNCTION_93	IF_1
0x400070c	              0x55	                                push rbp	      4127	ldlang.c	FUNCTION_93
0x400070d	              0x53	                                push rbx	      4127	ldlang.c	FUNCTION_93
0x400070e	        0x4883ec08	                              sub rsp, 8	      4127	ldlang.c	FUNCTION_93
0x4000712	          0x4889fd	                            mov rbp, rdi	      4127	ldlang.c	FUNCTION_93
0x4000715	      0xbb10000000	                           mov ebx, 0x10	      4127	ldlang.c	FUNCTION_93
0x400071a	      0xe800000000	                          call 0x400071f	      4137	ldlang.c	FUNCTION_93	IF_1	CALL_1
0x400071f	          0x83eb01	                              sub ebx, 1	      4136	ldlang.c	FUNCTION_93	IF_1	FOR_1
0x4000722	            0x75f6	                           jne 0x400071a	      4136	ldlang.c	FUNCTION_93	IF_1	FOR_1
0x4000724	        0x488b4528	            mov rax, qword [rbp + 0x28] 	      4140	ldlang.c	FUNCTION_93	IF_1
0x4000728	        0x488b7060	            mov rsi, qword [rax + 0x60] 	      4138	ldlang.c	FUNCTION_93	IF_1	CALL_2
0x400072c	        0x48037530	             add rsi, qword [rbp + 0x30]	      4138	ldlang.c	FUNCTION_93	IF_1	CALL_2
0x4000730	        0x488b4068	            mov rax, qword [rax + 0x68] 	      4141	ldlang.c	FUNCTION_93	IF_1
0x4000734	        0x48037028	             add rsi, qword [rax + 0x28]	      4138	ldlang.c	FUNCTION_93	IF_1	CALL_2
0x4000738	      0xbf00000000	                              mov edi, 0	      4138	ldlang.c	FUNCTION_93	IF_1	CALL_2
0x400073d	      0xb800000000	                              mov eax, 0	      4138	ldlang.c	FUNCTION_93	IF_1	CALL_2
0x4000742	      0xe800000000	                          call 0x4000747	      4138	ldlang.c	FUNCTION_93	IF_1	CALL_2
0x4000747	        0x488b7508	                mov rsi, qword [rbp + 8]	      4143	ldlang.c	FUNCTION_93	IF_1	CALL_3
0x400074b	      0xbf00000000	                              mov edi, 0	      4143	ldlang.c	FUNCTION_93	IF_1	CALL_3
0x4000750	      0xb800000000	                              mov eax, 0	      4143	ldlang.c	FUNCTION_93	IF_1	CALL_3
0x4000755	      0xe800000000	                          call 0x400075a	      4143	ldlang.c	FUNCTION_93	IF_1	CALL_3
0x400075a	      0xb801000000	                              mov eax, 1	      4147	ldlang.c	FUNCTION_93
0x400075f	        0x4883c408	                              add rsp, 8	      4147	ldlang.c	FUNCTION_93
0x4000763	              0x5b	                                 pop rbx	      4147	ldlang.c	FUNCTION_93
0x4000764	              0x5d	                                 pop rbp	      4147	ldlang.c	FUNCTION_93
0x4000765	              0xc3	                                     ret	      4147	ldlang.c	FUNCTION_93
0x4000766	      0xb801000000	                              mov eax, 1	      4147	ldlang.c	FUNCTION_93
0x400076b	              0xc3	                                     ret	      4147	ldlang.c	FUNCTION_93
walk_wild_consider_section	IF,1:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,1:ELSE,0	32
0x4001f47	            0x4157	                                push r15	       274	ldlang.c	FUNCTION_7
0x4001f49	            0x4156	                                push r14	       274	ldlang.c	FUNCTION_7
0x4001f4b	            0x4155	                                push r13	       274	ldlang.c	FUNCTION_7
0x4001f4d	            0x4154	                                push r12	       274	ldlang.c	FUNCTION_7
0x4001f4f	              0x55	                                push rbp	       274	ldlang.c	FUNCTION_7
0x4001f50	              0x53	                                push rbx	       274	ldlang.c	FUNCTION_7
0x4001f51	        0x4883ec08	                              sub rsp, 8	       274	ldlang.c	FUNCTION_7
0x4001f55	          0x4989fc	                            mov r12, rdi	       274	ldlang.c	FUNCTION_7
0x4001f58	          0x4889f5	                            mov rbp, rsi	       274	ldlang.c	FUNCTION_7
0x4001f5b	          0x4989d6	                            mov r14, rdx	       274	ldlang.c	FUNCTION_7
0x4001f5e	          0x4889cb	                            mov rbx, rcx	       274	ldlang.c	FUNCTION_7
0x4001f61	          0x4d89c5	                             mov r13, r8	       274	ldlang.c	FUNCTION_7
0x4001f64	          0x4d89cf	                             mov r15, r9	       274	ldlang.c	FUNCTION_7
0x4001f67	        0x488b7910	            mov rdi, qword [rcx + 0x10] 	       276	ldlang.c	FUNCTION_7	IF_1	CALL_1
0x4001f6b	      0xe83fffffff	 call sym.walk_wild_file_in_exclude_list	       276	ldlang.c	FUNCTION_7	IF_1	CALL_1
0x4001f70	            0x85c0	                           test eax, eax	       276	ldlang.c	FUNCTION_7	IF_1	CALL_1
0x4001f72	            0x7517	                           jne 0x4001f8b	       276	ldlang.c	FUNCTION_7	IF_1	CALL_1
0x4001f74	      0x498b4c2478	            mov rcx, qword [r12 + 0x78] 	       279	ldlang.c	FUNCTION_7
0x4001f79	          0x4d89f9	                             mov r9, r15	       279	ldlang.c	FUNCTION_7
0x4001f7c	          0x4989e8	                             mov r8, rbp	       279	ldlang.c	FUNCTION_7
0x4001f7f	          0x4c89f2	                            mov rdx, r14	       279	ldlang.c	FUNCTION_7
0x4001f82	          0x4889de	                            mov rsi, rbx	       279	ldlang.c	FUNCTION_7
0x4001f85	          0x4c89e7	                            mov rdi, r12	       279	ldlang.c	FUNCTION_7
0x4001f88	          0x41ffd5	                                call r13	       279	ldlang.c	FUNCTION_7
0x4001f8b	        0x4883c408	                              add rsp, 8	       280	ldlang.c	FUNCTION_7
0x4001f8f	              0x5b	                                 pop rbx	       280	ldlang.c	FUNCTION_7
0x4001f90	              0x5d	                                 pop rbp	       280	ldlang.c	FUNCTION_7
0x4001f91	            0x415c	                                 pop r12	       280	ldlang.c	FUNCTION_7
0x4001f93	            0x415d	                                 pop r13	       280	ldlang.c	FUNCTION_7
0x4001f95	            0x415e	                                 pop r14	       280	ldlang.c	FUNCTION_7
0x4001f97	            0x415f	                                 pop r15	       280	ldlang.c	FUNCTION_7
0x4001f99	              0xc3	                                     ret	       280	ldlang.c	FUNCTION_7
strip_excluded_output_sections	IF,7:WHILE,0:FOR,2:DO,0:SWITCH,0:functions,0:CALL,2:ELSE,0	73
0x4006f9f	        0x4883ec08	                              sub rsp, 8	      3885	ldlang.c	FUNCTION_88
0x4006fa3	    0x833d00000000	               cmp dword [0x04006faa], 1	      3889	ldlang.c	FUNCTION_88	IF_1
0x4006faa	            0x7428	                            je 0x4006fd4	      3889	ldlang.c	FUNCTION_88	IF_1
0x4006fac	    0xc70500000000	               mov dword [0x04006fb6], 1	      3891	ldlang.c	FUNCTION_88	IF_1
0x4006fb6	    0xc70500000000	               mov dword [0x04006fc0], 0	      3892	ldlang.c	FUNCTION_88	IF_1
0x4006fc0	      0xbe00000000	                              mov esi, 0	      3893	ldlang.c	FUNCTION_88	IF_1	CALL_1
0x4006fc5	      0xbf00000000	                              mov edi, 0	      3893	ldlang.c	FUNCTION_88	IF_1	CALL_1
0x4006fca	      0xe800000000	                          call 0x4006fcf	      3893	ldlang.c	FUNCTION_88	IF_1	CALL_1
0x4006fcf	      0xe800000000	                          call 0x4006fd4	      3894	ldlang.c	FUNCTION_88	IF_1	CALL_2
0x4006fd4	    0x488b0d000000	            mov rcx, qword [0x04006fdb] 	      3897	ldlang.c	FUNCTION_88	FOR_1
0x4006fdb	          0x4885c9	                           test rcx, rcx	      3897	ldlang.c	FUNCTION_88	FOR_1
0x4006fde	     0xf840b010000	                            je 0x40070ef	      3897	ldlang.c	FUNCTION_88	FOR_1
0x4006fe4	     0xfb63d000000	           movzx edi, byte [0x04006feb] 	      3927	ldlang.c	FUNCTION_88	FOR_1	IF_4	FOR_2	IF_5
0x4006feb	          0x83e708	                              and edi, 8	      3927	ldlang.c	FUNCTION_88	FOR_1	IF_4	FOR_2	IF_5
0x4006fee	    0x83b984000000	               cmp dword [rcx + 0x84], 0	      3904	ldlang.c	FUNCTION_88	FOR_1	IF_2
0x4006ff5	     0xf88d3000000	                            js 0x40070ce	      3904	ldlang.c	FUNCTION_88	FOR_1	IF_2
0x4006ffb	        0x488b7138	            mov rsi, qword [rcx + 0x38] 	      3907	ldlang.c	FUNCTION_88	FOR_1
0x4006fff	          0x4885f6	                           test rsi, rsi	      3908	ldlang.c	FUNCTION_88	FOR_1	IF_3
0x4007002	     0xf84c6000000	                            je 0x40070ce	      3908	ldlang.c	FUNCTION_88	FOR_1	IF_3
0x4007008	      0x48837e4000	               cmp qword [rsi + 0x40], 0	      3913	ldlang.c	FUNCTION_88	FOR_1
0x400700d	     0xf85bb000000	                           jne 0x40070ce	      3913	ldlang.c	FUNCTION_88	FOR_1
0x4007013	        0xf6462220	           test byte [rsi + 0x22], 0x20 	      3912	ldlang.c	FUNCTION_88	FOR_1
0x4007017	     0xf85b1000000	                           jne 0x40070ce	      3912	ldlang.c	FUNCTION_88	FOR_1
0x400701d	        0x488b4610	            mov rax, qword [rsi + 0x10] 	      3913	ldlang.c	FUNCTION_88	FOR_1
0x4007021	          0x4885c0	                           test rax, rax	      3913	ldlang.c	FUNCTION_88	FOR_1
0x4007024	            0x7519	                           jne 0x400703f	      3913	ldlang.c	FUNCTION_88	FOR_1
0x4007026	    0x488b05000000	            mov rax, qword [0x0400702d] 	      3913	ldlang.c	FUNCTION_88	FOR_1
0x400702d	    0x483bb0980000	            cmp rsi, qword [rax + 0x98] 	      3913	ldlang.c	FUNCTION_88	FOR_1
0x4007034	     0xf8594000000	                           jne 0x40070ce	      3913	ldlang.c	FUNCTION_88	FOR_1
0x400703a	      0xe99e000000	                           jmp 0x40070dd	      3913	ldlang.c	FUNCTION_88	FOR_1
0x400703f	        0x483b7018	            cmp rsi, qword [rax + 0x18] 	      3913	ldlang.c	FUNCTION_88	FOR_1
0x4007043	     0xf8585000000	                           jne 0x40070ce	      3913	ldlang.c	FUNCTION_88	FOR_1
0x4007049	      0xe98f000000	                           jmp 0x40070dd	      3913	ldlang.c	FUNCTION_88	FOR_1
0x400704e	          0x8b5020	            mov edx, dword [rax + 0x20] 	      3925	ldlang.c	FUNCTION_88	FOR_1	IF_4	FOR_2	IF_5
0x4007051	          0xf6c680	                           test dh, 0x80	      3925	ldlang.c	FUNCTION_88	FOR_1	IF_4	FOR_2	IF_5
0x4007054	            0x750d	                           jne 0x4007063	      3925	ldlang.c	FUNCTION_88	FOR_1	IF_4	FOR_2	IF_5
0x4007056	    0xf7c200001000	                      test edx, 0x100000	      3926	ldlang.c	FUNCTION_88	FOR_1	IF_4	FOR_2	IF_5
0x400705c	            0x7570	                           jne 0x40070ce	      3926	ldlang.c	FUNCTION_88	FOR_1	IF_4	FOR_2	IF_5
0x400705e	          0x4084ff	                           test dil, dil	      3927	ldlang.c	FUNCTION_88	FOR_1	IF_4	FOR_2	IF_5
0x4007061	            0x756b	                           jne 0x40070ce	      3927	ldlang.c	FUNCTION_88	FOR_1	IF_4	FOR_2	IF_5
0x4007063	    0x488b80080100	           mov rax, qword [rax + 0x108] 	      3924	ldlang.c	FUNCTION_88	FOR_1	IF_4	FOR_2
0x400706a	          0x4885c0	                           test rax, rax	      3924	ldlang.c	FUNCTION_88	FOR_1	IF_4	FOR_2
0x400706d	            0x75df	                           jne 0x400704e	      3924	ldlang.c	FUNCTION_88	FOR_1	IF_4	FOR_2
0x400706f	    0xf68190000000	           test byte [rcx + 0x90], 0x10 	      3938	ldlang.c	FUNCTION_88	FOR_1	IF_6	IF_7
0x4007076	            0x7507	                           jne 0x400707f	      3938	ldlang.c	FUNCTION_88	FOR_1	IF_6	IF_7
0x4007078	    0x808990000000	                 or byte [rcx + 0x90], 8	      3939	ldlang.c	FUNCTION_88	FOR_1	IF_6	IF_7
0x400707f	    0x814e20008000	           or dword [rsi + 0x20], 0x8000	      3940	ldlang.c	FUNCTION_88	FOR_1	IF_6
0x4007086	        0x488b5610	            mov rdx, qword [rsi + 0x10] 	      3941	ldlang.c	FUNCTION_88	FOR_1	IF_6
0x400708a	        0x488b4618	            mov rax, qword [rsi + 0x18] 	      3941	ldlang.c	FUNCTION_88	FOR_1	IF_6
0x400708e	          0x4885c0	                           test rax, rax	      3941	ldlang.c	FUNCTION_88	FOR_1	IF_6
0x4007091	            0x7406	                            je 0x4007099	      3941	ldlang.c	FUNCTION_88	FOR_1	IF_6
0x4007093	        0x48895010	             mov qword [rax + 0x10], rdx	      3941	ldlang.c	FUNCTION_88	FOR_1	IF_6
0x4007097	            0xeb0e	                           jmp 0x40070a7	      3941	ldlang.c	FUNCTION_88	FOR_1	IF_6
0x4007099	    0x488b35000000	            mov rsi, qword [0x040070a0] 	      3941	ldlang.c	FUNCTION_88	FOR_1	IF_6
0x40070a0	    0x488996900000	             mov qword [rsi + 0x90], rdx	      3941	ldlang.c	FUNCTION_88	FOR_1	IF_6
0x40070a7	          0x4885d2	                           test rdx, rdx	      3941	ldlang.c	FUNCTION_88	FOR_1	IF_6
0x40070aa	            0x7406	                            je 0x40070b2	      3941	ldlang.c	FUNCTION_88	FOR_1	IF_6
0x40070ac	        0x48894218	             mov qword [rdx + 0x18], rax	      3941	ldlang.c	FUNCTION_88	FOR_1	IF_6
0x40070b0	            0xeb0e	                           jmp 0x40070c0	      3941	ldlang.c	FUNCTION_88	FOR_1	IF_6
0x40070b2	    0x488b15000000	            mov rdx, qword [0x040070b9] 	      3941	ldlang.c	FUNCTION_88	FOR_1	IF_6
0x40070b9	    0x488982980000	             mov qword [rdx + 0x98], rax	      3941	ldlang.c	FUNCTION_88	FOR_1	IF_6
0x40070c0	    0x488b05000000	            mov rax, qword [0x040070c7] 	      3942	ldlang.c	FUNCTION_88	FOR_1	IF_6
0x40070c7	    0x83a8a0000000	               sub dword [rax + 0xa0], 1	      3942	ldlang.c	FUNCTION_88	FOR_1	IF_6
0x40070ce	        0x488b4920	            mov rcx, qword [rcx + 0x20] 	      3899	ldlang.c	FUNCTION_88	FOR_1
0x40070d2	          0x4885c9	                           test rcx, rcx	      3897	ldlang.c	FUNCTION_88	FOR_1
0x40070d5	     0xf8513ffffff	                           jne 0x4006fee	      3897	ldlang.c	FUNCTION_88	FOR_1
0x40070db	            0xeb12	                           jmp 0x40070ef	      3897	ldlang.c	FUNCTION_88	FOR_1
0x40070dd	    0x488b86080100	           mov rax, qword [rsi + 0x108] 	      3920	ldlang.c	FUNCTION_88	FOR_1	IF_4
0x40070e4	          0x4885c0	                           test rax, rax	      3920	ldlang.c	FUNCTION_88	FOR_1	IF_4
0x40070e7	     0xf8561ffffff	                           jne 0x400704e	      3920	ldlang.c	FUNCTION_88	FOR_1	IF_4
0x40070ed	            0xeb80	                           jmp 0x400706f	      3920	ldlang.c	FUNCTION_88	FOR_1	IF_4
0x40070ef	        0x4883c408	                              add rsp, 8	      3945	ldlang.c	FUNCTION_88
0x40070f3	              0xc3	                                     ret	      3945	ldlang.c	FUNCTION_88
walk_wild_file_in_exclude_list	IF,4:WHILE,0:FOR,1:DO,0:SWITCH,0:functions,0:CALL,4:ELSE,2	51
0x4001eaf	            0x4154	                                push r12	       231	ldlang.c	FUNCTION_6
0x4001eb1	              0x55	                                push rbp	       231	ldlang.c	FUNCTION_6
0x4001eb2	              0x53	                                push rbx	       231	ldlang.c	FUNCTION_6
0x4001eb3	          0x4889fb	                            mov rbx, rdi	       231	ldlang.c	FUNCTION_6
0x4001eb6	          0x4989f4	                            mov r12, rsi	       231	ldlang.c	FUNCTION_6
0x4001eb9	          0x4885ff	                           test rdi, rdi	       234	ldlang.c	FUNCTION_6	FOR_1
0x4001ebc	            0x746a	                            je 0x4001f28	       234	ldlang.c	FUNCTION_6	FOR_1
0x4001ebe	          0x488b2b	                    mov rbp, qword [rbx]	       238	ldlang.c	FUNCTION_6	FOR_1	CALL_1
0x4001ec1	          0x4889ef	                            mov rdi, rbp	       238	ldlang.c	FUNCTION_6	FOR_1	CALL_1
0x4001ec4	      0xe8d2fbffff	                   call sym.archive_path	       238	ldlang.c	FUNCTION_6	FOR_1	CALL_1
0x4001ec9	          0x4885c0	                           test rax, rax	       240	ldlang.c	FUNCTION_6	FOR_1	IF_1
0x4001ecc	            0x7414	                            je 0x4001ee2	       240	ldlang.c	FUNCTION_6	FOR_1	IF_1
0x4001ece	          0x4c89e2	                            mov rdx, r12	       242	ldlang.c	FUNCTION_6	FOR_1	IF_1	IF_2	CALL_2
0x4001ed1	          0x4889c6	                            mov rsi, rax	       242	ldlang.c	FUNCTION_6	FOR_1	IF_1	IF_2	CALL_2
0x4001ed4	          0x4889ef	                            mov rdi, rbp	       242	ldlang.c	FUNCTION_6	FOR_1	IF_1	IF_2	CALL_2
0x4001ed7	      0xe840ffffff	call sym.input_statement_is_archive_path	       242	ldlang.c	FUNCTION_6	FOR_1	IF_1	IF_2	CALL_2
0x4001edc	            0x85c0	                           test eax, eax	       242	ldlang.c	FUNCTION_6	FOR_1	IF_1	IF_2	CALL_2
0x4001ede	            0x7438	                            je 0x4001f18	       242	ldlang.c	FUNCTION_6	FOR_1	IF_1	IF_2	CALL_2
0x4001ee0	            0xeb4d	                           jmp 0x4001f2f	       242	ldlang.c	FUNCTION_6	FOR_1	IF_1	IF_2	CALL_2
0x4001ee2	      0x498b742410	            mov rsi, qword [r12 + 0x10] 	       246	ldlang.c	FUNCTION_6	FOR_1	ELSE_1	IF_3	CALL_3
0x4001ee7	          0x4889ef	                            mov rdi, rbp	       246	ldlang.c	FUNCTION_6	FOR_1	ELSE_1	IF_3	CALL_3
0x4001eea	      0xe8bdfeffff	                     call sym.name_match	       246	ldlang.c	FUNCTION_6	FOR_1	ELSE_1	IF_3	CALL_3
0x4001eef	            0x85c0	                           test eax, eax	       246	ldlang.c	FUNCTION_6	FOR_1	ELSE_1	IF_3	CALL_3
0x4001ef1	            0x7443	                            je 0x4001f36	       246	ldlang.c	FUNCTION_6	FOR_1	ELSE_1	IF_3	CALL_3
0x4001ef3	      0x498b442420	            mov rax, qword [r12 + 0x20] 	       252	ldlang.c	FUNCTION_6	FOR_1	ELSE_2	IF_4
0x4001ef8	          0x4885c0	                           test rax, rax	       252	ldlang.c	FUNCTION_6	FOR_1	ELSE_2	IF_4
0x4001efb	            0x741b	                            je 0x4001f18	       252	ldlang.c	FUNCTION_6	FOR_1	ELSE_2	IF_4
0x4001efd	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	       253	ldlang.c	FUNCTION_6	FOR_1	ELSE_2	IF_4
0x4001f04	          0x4885c0	                           test rax, rax	       253	ldlang.c	FUNCTION_6	FOR_1	ELSE_2	IF_4
0x4001f07	            0x740f	                            je 0x4001f18	       253	ldlang.c	FUNCTION_6	FOR_1	ELSE_2	IF_4
0x4001f09	          0x488b30	                    mov rsi, qword [rax]	       254	ldlang.c	FUNCTION_6	FOR_1	ELSE_2	IF_4	CALL_4
0x4001f0c	          0x488b3b	                    mov rdi, qword [rbx]	       254	ldlang.c	FUNCTION_6	FOR_1	ELSE_2	IF_4	CALL_4
0x4001f0f	      0xe898feffff	                     call sym.name_match	       254	ldlang.c	FUNCTION_6	FOR_1	ELSE_2	IF_4	CALL_4
0x4001f14	            0x85c0	                           test eax, eax	       254	ldlang.c	FUNCTION_6	FOR_1	ELSE_2	IF_4	CALL_4
0x4001f16	            0x7425	                            je 0x4001f3d	       254	ldlang.c	FUNCTION_6	FOR_1	ELSE_2	IF_4	CALL_4
0x4001f18	        0x488b5b08	                mov rbx, qword [rbx + 8]	       236	ldlang.c	FUNCTION_6	FOR_1
0x4001f1c	          0x4885db	                           test rbx, rbx	       234	ldlang.c	FUNCTION_6	FOR_1
0x4001f1f	            0x759d	                           jne 0x4001ebe	       234	ldlang.c	FUNCTION_6	FOR_1
0x4001f21	      0xb800000000	                              mov eax, 0	       259	ldlang.c	FUNCTION_6
0x4001f26	            0xeb1a	                           jmp 0x4001f42	       259	ldlang.c	FUNCTION_6
0x4001f28	      0xb800000000	                              mov eax, 0	       259	ldlang.c	FUNCTION_6
0x4001f2d	            0xeb13	                           jmp 0x4001f42	       259	ldlang.c	FUNCTION_6
0x4001f2f	      0xb801000000	                              mov eax, 1	       243	ldlang.c	FUNCTION_6	FOR_1	IF_1	IF_2
0x4001f34	            0xeb0c	                           jmp 0x4001f42	       243	ldlang.c	FUNCTION_6	FOR_1	IF_1	IF_2
0x4001f36	      0xb801000000	                              mov eax, 1	       247	ldlang.c	FUNCTION_6	FOR_1	ELSE_1	IF_3
0x4001f3b	            0xeb05	                           jmp 0x4001f42	       247	ldlang.c	FUNCTION_6	FOR_1	ELSE_1	IF_3
0x4001f3d	      0xb801000000	                              mov eax, 1	       256	ldlang.c	FUNCTION_6	FOR_1	ELSE_2	IF_4
0x4001f42	              0x5b	                                 pop rbx	       260	ldlang.c	FUNCTION_6
0x4001f43	              0x5d	                                 pop rbp	       260	ldlang.c	FUNCTION_6
0x4001f44	            0x415c	                                 pop r12	       260	ldlang.c	FUNCTION_6
0x4001f46	              0xc3	                                     ret	       260	ldlang.c	FUNCTION_6
lang_add_section	IF,19:WHILE,0:FOR,0:DO,0:SWITCH,1:functions,0:CALL,4:ELSE,4	161
0x40050cc	            0x4156	                                push r14	      2319	ldlang.c	FUNCTION_59
0x40050ce	            0x4155	                                push r13	      2319	ldlang.c	FUNCTION_59
0x40050d0	            0x4154	                                push r12	      2319	ldlang.c	FUNCTION_59
0x40050d2	              0x55	                                push rbp	      2319	ldlang.c	FUNCTION_59
0x40050d3	              0x53	                                push rbx	      2319	ldlang.c	FUNCTION_59
0x40050d4	          0x4989fd	                            mov r13, rdi	      2319	ldlang.c	FUNCTION_59
0x40050d7	          0x4889f3	                            mov rbx, rsi	      2319	ldlang.c	FUNCTION_59
0x40050da	          0x4989d4	                            mov r12, rdx	      2319	ldlang.c	FUNCTION_59
0x40050dd	          0x4889cd	                            mov rbp, rcx	      2319	ldlang.c	FUNCTION_59
0x40050e0	          0x4889f7	                            mov rdi, rsi	      2327	ldlang.c	FUNCTION_59	CALL_1
0x40050e3	      0xe82bb1ffff	         call sym.lang_discard_section_p	      2327	ldlang.c	FUNCTION_59	CALL_1
0x40050e8	        0x488b7530	            mov rsi, qword [rbp + 0x30] 	      2331	ldlang.c	FUNCTION_59	IF_1
0x40050ec	      0xbf00000000	                              mov edi, 0	      2331	ldlang.c	FUNCTION_59	IF_1
0x40050f1	      0xb90a000000	                            mov ecx, 0xa	      2331	ldlang.c	FUNCTION_59	IF_1
0x40050f6	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2331	ldlang.c	FUNCTION_59	IF_1
0x40050f8	           0xf97c1	                                 seta cl	      2331	ldlang.c	FUNCTION_59	IF_1
0x40050fb	           0xf92c2	                                 setb dl	      2331	ldlang.c	FUNCTION_59	IF_1
0x40050fe	            0x38d1	                              cmp cl, dl	      2331	ldlang.c	FUNCTION_59	IF_1
0x4005100	            0x7404	                            je 0x4005106	      2331	ldlang.c	FUNCTION_59	IF_1
0x4005102	            0x85c0	                           test eax, eax	      2334	ldlang.c	FUNCTION_59	IF_2
0x4005104	            0x7418	                            je 0x400511e	      2334	ldlang.c	FUNCTION_59	IF_2
0x4005106	      0x48837b6800	               cmp qword [rbx + 0x68], 0	      2336	ldlang.c	FUNCTION_59	IF_2	IF_3
0x400510b	     0xf8530020000	                           jne 0x4005341	      2336	ldlang.c	FUNCTION_59	IF_2	IF_3
0x4005111	    0x48c743680000	               mov qword [rbx + 0x68], 0	      2339	ldlang.c	FUNCTION_59	IF_2	IF_3
0x4005119	      0xe923020000	                           jmp 0x4005341	      2339	ldlang.c	FUNCTION_59	IF_2	IF_3
0x400511e	        0x448b7320	           mov r14d, dword [rbx + 0x20] 	      2320	ldlang.c	FUNCTION_59
0x4005122	          0x4d85e4	                           test r12, r12	      2344	ldlang.c	FUNCTION_59	IF_4
0x4005125	            0x7424	                            je 0x400514b	      2344	ldlang.c	FUNCTION_59	IF_4
0x4005127	    0x488b05000000	            mov rax, qword [0x0400512e] 	      2348	ldlang.c	FUNCTION_59	IF_4
0x400512e	        0x488b4008	                mov rax, qword [rax + 8]	      2348	ldlang.c	FUNCTION_59	IF_4
0x4005132	          0x4889da	                            mov rdx, rbx	      2348	ldlang.c	FUNCTION_59	IF_4
0x4005135	          0x4c89e6	                            mov rsi, r12	      2348	ldlang.c	FUNCTION_59	IF_4
0x4005138	      0xbf00000000	                              mov edi, 0	      2348	ldlang.c	FUNCTION_59	IF_4
0x400513d	    0xff90f8020000	                call qword [rax + 0x2f8]	      2348	ldlang.c	FUNCTION_59	IF_4
0x4005143	            0x85c0	                           test eax, eax	      2349	ldlang.c	FUNCTION_59	IF_4	IF_5
0x4005145	     0xf84f6010000	                            je 0x4005341	      2349	ldlang.c	FUNCTION_59	IF_4	IF_5
0x400514b	      0x48837b6800	               cmp qword [rbx + 0x68], 0	      2353	ldlang.c	FUNCTION_59	IF_6
0x4005150	     0xf85eb010000	                           jne 0x4005341	      2353	ldlang.c	FUNCTION_59	IF_6
0x4005156	          0x4489f0	                           mov eax, r14d	      2368	ldlang.c	FUNCTION_59	IF_7
0x4005159	      0x2500000202	                      and eax, 0x2020000	      2368	ldlang.c	FUNCTION_59	IF_7
0x400515e	      0x3d00000202	                      cmp eax, 0x2020000	      2368	ldlang.c	FUNCTION_59	IF_7
0x4005163	            0x7522	                           jne 0x4005187	      2368	ldlang.c	FUNCTION_59	IF_7
0x4005165	     0xfb605000000	           movzx eax, byte [0x0400516c] 	      2370	ldlang.c	FUNCTION_59	IF_7	IF_8
0x400516c	          0x83e010	                           and eax, 0x10	      2370	ldlang.c	FUNCTION_59	IF_7	IF_8
0x400516f	          0x4489f2	                           mov edx, r14d	      2371	ldlang.c	FUNCTION_59	IF_7	IF_8
0x4005172	    0x81e2fbfdf1ff	                     and edx, 0xfff1fdfb	      2371	ldlang.c	FUNCTION_59	IF_7	IF_8
0x4005178	    0x4181e6fbfdf3	                    and r14d, 0xfff3fdfb	      2371	ldlang.c	FUNCTION_59	IF_7	IF_8
0x400517f	            0x84c0	                             test al, al	      2371	ldlang.c	FUNCTION_59	IF_7	IF_8
0x4005181	        0x440f45f2	                        cmovne r14d, edx	      2371	ldlang.c	FUNCTION_59	IF_7	IF_8
0x4005185	            0xeb1d	                           jmp 0x40051a4	      2371	ldlang.c	FUNCTION_59	IF_7	IF_8
0x4005187	     0xfb605000000	           movzx eax, byte [0x0400518e] 	      2375	ldlang.c	FUNCTION_59	ELSE_2	IF_9	CALL_2
0x400518e	          0x83e003	                              and eax, 3	      2375	ldlang.c	FUNCTION_59	ELSE_2	IF_9	CALL_2
0x4005191	          0x4489f2	                           mov edx, r14d	      2362	ldlang.c	FUNCTION_59
0x4005194	          0x80e6fd	                            and dh, 0xfd	      2362	ldlang.c	FUNCTION_59
0x4005197	    0x4181e6fbfdf1	                    and r14d, 0xfff1fdfb	      2362	ldlang.c	FUNCTION_59
0x400519e	            0x3c02	                               cmp al, 2	      2362	ldlang.c	FUNCTION_59
0x40051a0	        0x440f44f2	                         cmove r14d, edx	      2362	ldlang.c	FUNCTION_59
0x40051a4	    0x8b858c000000	            mov eax, dword [rbp + 0x8c] 	      2378	ldlang.c	FUNCTION_59	SWITCH_1
0x40051aa	          0x83f802	                              cmp eax, 2	      2378	ldlang.c	FUNCTION_59	SWITCH_1
0x40051ad	            0x740f	                            je 0x40051be	      2378	ldlang.c	FUNCTION_59	SWITCH_1
0x40051af	          0x4489f2	                           mov edx, r14d	      2384	ldlang.c	FUNCTION_59	SWITCH_1
0x40051b2	          0x83e2fe	                     and edx, 0xfffffffe	      2384	ldlang.c	FUNCTION_59	SWITCH_1
0x40051b5	          0x83f803	                              cmp eax, 3	      2384	ldlang.c	FUNCTION_59	SWITCH_1
0x40051b8	        0x440f44f2	                         cmove r14d, edx	      2384	ldlang.c	FUNCTION_59	SWITCH_1
0x40051bc	            0xeb2c	                           jmp 0x40051ea	      2384	ldlang.c	FUNCTION_59	SWITCH_1
0x40051be	    0x488b05000000	            mov rax, qword [0x040051c5] 	      2393	ldlang.c	FUNCTION_59	SWITCH_1	IF_10
0x40051c5	        0x488b4008	                mov rax, qword [rax + 8]	      2393	ldlang.c	FUNCTION_59	SWITCH_1	IF_10
0x40051c9	        0x83780805	                  cmp dword [rax + 8], 5	      2393	ldlang.c	FUNCTION_59	SWITCH_1	IF_10
0x40051cd	            0x7510	                           jne 0x40051df	      2393	ldlang.c	FUNCTION_59	SWITCH_1	IF_10
0x40051cf	    0x4181e6fdfeff	                    and r14d, 0xfffffefd	      2393	ldlang.c	FUNCTION_59	SWITCH_1	IF_10
0x40051d6	    0x4181ce000200	                          or r14d, 0x200	      2394	ldlang.c	FUNCTION_59	SWITCH_1	IF_10
0x40051dd	            0xeb0b	                           jmp 0x40051ea	      2394	ldlang.c	FUNCTION_59	SWITCH_1	IF_10
0x40051df	        0x4183e6fc	                    and r14d, 0xfffffffc	      2394	ldlang.c	FUNCTION_59	SWITCH_1	IF_10
0x40051e3	    0x4181ce000200	                          or r14d, 0x200	      2396	ldlang.c	FUNCTION_59	SWITCH_1	ELSE_3
0x40051ea	      0x48837d3800	               cmp qword [rbp + 0x38], 0	      2400	ldlang.c	FUNCTION_59	IF_11
0x40051ef	            0x750b	                           jne 0x40051fc	      2400	ldlang.c	FUNCTION_59	IF_11
0x40051f1	          0x4489f6	                           mov esi, r14d	      2401	ldlang.c	FUNCTION_59	CALL_3
0x40051f4	          0x4889ef	                            mov rdi, rbp	      2401	ldlang.c	FUNCTION_59	CALL_3
0x40051f7	      0xe813f6ffff	                        call sym.init_os	      2401	ldlang.c	FUNCTION_59	CALL_3
0x40051fc	        0x488b4538	            mov rax, qword [rbp + 0x38] 	      2405	ldlang.c	FUNCTION_59
0x4005200	          0x4489f2	                           mov edx, r14d	      2405	ldlang.c	FUNCTION_59
0x4005203	          0x83caf7	                      or edx, 0xfffffff7	      2405	ldlang.c	FUNCTION_59
0x4005206	          0x215020	             and dword [rax + 0x20], edx	      2405	ldlang.c	FUNCTION_59
0x4005209	        0x488b4538	            mov rax, qword [rbp + 0x38] 	      2407	ldlang.c	FUNCTION_59	IF_12
0x400520d	        0xf6402404	               test byte [rax + 0x24], 4	      2407	ldlang.c	FUNCTION_59	IF_12
0x4005211	            0x7446	                            je 0x4005259	      2407	ldlang.c	FUNCTION_59	IF_12
0x4005213	          0x4489f1	                           mov ecx, r14d	      2410	ldlang.c	FUNCTION_59	IF_12
0x4005216	          0x83e1f7	                     and ecx, 0xfffffff7	      2410	ldlang.c	FUNCTION_59	IF_12
0x4005219	          0x8b5020	            mov edx, dword [rax + 0x20] 	      2413	ldlang.c	FUNCTION_59	IF_12	IF_13
0x400521c	            0x89ce	                            mov esi, ecx	      2413	ldlang.c	FUNCTION_59	IF_12	IF_13
0x400521e	            0x31d6	                            xor esi, edx	      2413	ldlang.c	FUNCTION_59	IF_12	IF_13
0x4005220	    0xf7c600008001	                     test esi, 0x1800000	      2413	ldlang.c	FUNCTION_59	IF_12	IF_13
0x4005226	            0x7517	                           jne 0x400523f	      2413	ldlang.c	FUNCTION_59	IF_12	IF_13
0x4005228	    0x41f7c6000080	                     test r14d, 0x800000	      2415	ldlang.c	FUNCTION_59	IF_12	IF_13
0x400522f	            0x7420	                            je 0x4005251	      2415	ldlang.c	FUNCTION_59	IF_12	IF_13
0x4005231	    0x8bbbc4000000	            mov edi, dword [rbx + 0xc4] 	      2416	ldlang.c	FUNCTION_59	IF_12	IF_13
0x4005237	    0x39b8c4000000	            cmp dword [rax + 0xc4], edi 	      2416	ldlang.c	FUNCTION_59	IF_12	IF_13
0x400523d	            0x7417	                            je 0x4005256	      2416	ldlang.c	FUNCTION_59	IF_12	IF_13
0x400523f	    0x81e2ffff7ffe	                     and edx, 0xfe7fffff	      2418	ldlang.c	FUNCTION_59	IF_12	IF_13
0x4005245	          0x895020	             mov dword [rax + 0x20], edx	      2418	ldlang.c	FUNCTION_59	IF_12	IF_13
0x4005248	    0x4181e6f7ff7f	                    and r14d, 0xfe7ffff7	      2419	ldlang.c	FUNCTION_59	IF_12	IF_13
0x400524f	            0xeb08	                           jmp 0x4005259	      2419	ldlang.c	FUNCTION_59	IF_12	IF_13
0x4005251	          0x4189ce	                           mov r14d, ecx	      2410	ldlang.c	FUNCTION_59	IF_12
0x4005254	            0xeb03	                           jmp 0x4005259	      2410	ldlang.c	FUNCTION_59	IF_12
0x4005256	          0x4189ce	                           mov r14d, ecx	      2410	ldlang.c	FUNCTION_59	IF_12
0x4005259	        0x488b4538	            mov rax, qword [rbp + 0x38] 	      2422	ldlang.c	FUNCTION_59
0x400525d	        0x44097020	             or dword [rax + 0x20], r14d	      2422	ldlang.c	FUNCTION_59
0x4005261	        0x488b4538	            mov rax, qword [rbp + 0x38] 	      2424	ldlang.c	FUNCTION_59	IF_14
0x4005265	        0xf6402404	               test byte [rax + 0x24], 4	      2424	ldlang.c	FUNCTION_59	IF_14
0x4005269	            0x7542	                           jne 0x40052ad	      2424	ldlang.c	FUNCTION_59	IF_14
0x400526b	        0x80482404	                 or byte [rax + 0x24], 4	      2426	ldlang.c	FUNCTION_59	IF_14
0x400526f	    0x488b15000000	            mov rdx, qword [0x04005276] 	      2430	ldlang.c	FUNCTION_59	IF_14
0x4005276	        0x488b4d38	            mov rcx, qword [rbp + 0x38] 	      2430	ldlang.c	FUNCTION_59	IF_14
0x400527a	    0x488bbbf00000	            mov rdi, qword [rbx + 0xf0] 	      2430	ldlang.c	FUNCTION_59	IF_14
0x4005281	        0x488b4208	                mov rax, qword [rdx + 8]	      2430	ldlang.c	FUNCTION_59	IF_14
0x4005285	    0x41b800000000	                              mov r8d, 0	      2430	ldlang.c	FUNCTION_59	IF_14
0x400528b	          0x4889de	                            mov rsi, rbx	      2430	ldlang.c	FUNCTION_59	IF_14
0x400528e	    0xff9048010000	                call qword [rax + 0x148]	      2430	ldlang.c	FUNCTION_59	IF_14
0x4005294	    0x41f7c6000080	                     test r14d, 0x800000	      2434	ldlang.c	FUNCTION_59	IF_14	IF_15
0x400529b	            0x7410	                            je 0x40052ad	      2434	ldlang.c	FUNCTION_59	IF_14	IF_15
0x400529d	        0x488b4538	            mov rax, qword [rbp + 0x38] 	      2435	ldlang.c	FUNCTION_59	IF_14	IF_15
0x40052a1	    0x8b93c4000000	            mov edx, dword [rbx + 0xc4] 	      2435	ldlang.c	FUNCTION_59	IF_14	IF_15
0x40052a7	    0x8990c4000000	             mov dword [rax + 0xc4], edx	      2435	ldlang.c	FUNCTION_59	IF_14	IF_15
0x40052ad	    0x41f7c6000000	                   test r14d, 0x10000000	      2438	ldlang.c	FUNCTION_59	IF_16
0x40052b4	            0x7418	                            je 0x40052ce	      2438	ldlang.c	FUNCTION_59	IF_16
0x40052b6	    0x488bbbf00000	            mov rdi, qword [rbx + 0xf0] 	      2439	ldlang.c	FUNCTION_59	IF_16	CALL_4
0x40052bd	      0xe800000000	                          call 0x40052c2	      2439	ldlang.c	FUNCTION_59	IF_16	CALL_4
0x40052c2	          0x83f826	                           cmp eax, 0x26	      2439	ldlang.c	FUNCTION_59	IF_16	CALL_4
0x40052c5	            0x7507	                           jne 0x40052ce	      2439	ldlang.c	FUNCTION_59	IF_16	CALL_4
0x40052c7	    0xc74578800000	           mov dword [rbp + 0x78], 0x80 	      2442	ldlang.c	FUNCTION_59	IF_16
0x40052ce	          0x8b5370	            mov edx, dword [rbx + 0x70] 	      2445	ldlang.c	FUNCTION_59	IF_17
0x40052d1	        0x488b4538	            mov rax, qword [rbp + 0x38] 	      2445	ldlang.c	FUNCTION_59	IF_17
0x40052d5	          0x3b5070	            cmp edx, dword [rax + 0x70] 	      2445	ldlang.c	FUNCTION_59	IF_17
0x40052d8	            0x7603	                           jbe 0x40052dd	      2445	ldlang.c	FUNCTION_59	IF_17
0x40052da	          0x895070	             mov dword [rax + 0x70], edx	      2446	ldlang.c	FUNCTION_59	IF_17
0x40052dd	        0x488b4538	            mov rax, qword [rbp + 0x38] 	      2448	ldlang.c	FUNCTION_59
0x40052e1	        0x48894368	             mov qword [rbx + 0x68], rax	      2448	ldlang.c	FUNCTION_59
0x40052e5	    0x833d00000000	               cmp dword [0x040052ec], 0	      2450	ldlang.c	FUNCTION_59	IF_18
0x40052ec	            0x753d	                           jne 0x400532b	      2450	ldlang.c	FUNCTION_59	IF_18
0x40052ee	        0x488b5538	            mov rdx, qword [rbp + 0x38] 	      2452	ldlang.c	FUNCTION_59	IF_18
0x40052f2	    0x488b82100100	           mov rax, qword [rdx + 0x110] 	      2452	ldlang.c	FUNCTION_59	IF_18
0x40052f9	    0x48899a100100	            mov qword [rdx + 0x110], rbx	      2453	ldlang.c	FUNCTION_59	IF_18
0x4005300	    0x48c783080100	              mov qword [rbx + 0x108], 0	      2454	ldlang.c	FUNCTION_59	IF_18
0x400530b	    0x488983100100	            mov qword [rbx + 0x110], rax	      2455	ldlang.c	FUNCTION_59	IF_18
0x4005312	          0x4885c0	                           test rax, rax	      2456	ldlang.c	FUNCTION_59	IF_18	IF_19
0x4005315	            0x7409	                            je 0x4005320	      2456	ldlang.c	FUNCTION_59	IF_18	IF_19
0x4005317	    0x488998080100	            mov qword [rax + 0x108], rbx	      2457	ldlang.c	FUNCTION_59	IF_18	IF_19
0x400531e	            0xeb0b	                           jmp 0x400532b	      2457	ldlang.c	FUNCTION_59	IF_18	IF_19
0x4005320	        0x488b4538	            mov rax, qword [rbp + 0x38] 	      2459	ldlang.c	FUNCTION_59	IF_18	ELSE_4
0x4005324	    0x488998080100	            mov qword [rax + 0x108], rbx	      2459	ldlang.c	FUNCTION_59	IF_18	ELSE_4
0x400532b	          0x4c89ea	                            mov rdx, r13	      2463	ldlang.c	FUNCTION_59
0x400532e	      0xbe18000000	                           mov esi, 0x18	      2463	ldlang.c	FUNCTION_59
0x4005333	      0xbf05000000	                              mov edi, 5	      2463	ldlang.c	FUNCTION_59
0x4005338	      0xe88bdeffff	                  call sym.new_statement	      2463	ldlang.c	FUNCTION_59
0x400533d	        0x48895810	             mov qword [rax + 0x10], rbx	      2464	ldlang.c	FUNCTION_59
0x4005341	              0x5b	                                 pop rbx	      2465	ldlang.c	FUNCTION_59
0x4005342	              0x5d	                                 pop rbp	      2465	ldlang.c	FUNCTION_59
0x4005343	            0x415c	                                 pop r12	      2465	ldlang.c	FUNCTION_59
0x4005345	            0x415d	                                 pop r13	      2465	ldlang.c	FUNCTION_59
0x4005347	            0x415e	                                 pop r14	      2465	ldlang.c	FUNCTION_59
0x4005349	              0xc3	                                     ret	      2465	ldlang.c	FUNCTION_59
lang_add_gc_name	IF,1:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,1:ELSE,0	12
0x400739e	          0x4885ff	                           test rdi, rdi	      7102	ldlang.c	FUNCTION_160	IF_1
0x40073a1	            0x7424	                            je 0x40073c7	      7102	ldlang.c	FUNCTION_160	IF_1
0x40073a3	              0x53	                                push rbx	      7099	ldlang.c	FUNCTION_160
0x40073a4	          0x4889fb	                            mov rbx, rdi	      7099	ldlang.c	FUNCTION_160
0x40073a7	      0xbf10000000	                           mov edi, 0x10	      7105	ldlang.c	FUNCTION_160	CALL_1
0x40073ac	      0xe800000000	                          call 0x40073b1	      7105	ldlang.c	FUNCTION_160	CALL_1
0x40073b1	    0x488b15000000	            mov rdx, qword [0x040073b8] 	      7107	ldlang.c	FUNCTION_160
0x40073b8	          0x488910	                    mov qword [rax], rdx	      7107	ldlang.c	FUNCTION_160
0x40073bb	        0x48895808	                mov qword [rax + 8], rbx	      7108	ldlang.c	FUNCTION_160
0x40073bf	    0x488905000000	            mov qword [0x040073c6], rax 	      7109	ldlang.c	FUNCTION_160
0x40073c6	              0x5b	                                 pop rbx	      7110	ldlang.c	FUNCTION_160
0x40073c7	            0xf3c3	                                     ret	      7110	ldlang.c	FUNCTION_160
lang_float	IF,0:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,0:ELSE,0	2
0x4007b33	    0x893d00000000	            mov dword [0x04007b39], edi 	      7612	ldlang.c	FUNCTION_176
0x4007b39	              0xc3	                                     ret	      7612	ldlang.c	FUNCTION_176
unique_section_p	IF,2:WHILE,0:FOR,1:DO,0:SWITCH,0:functions,0:CALL,1:ELSE,0	50
0x4002007	              0x55	                                push rbp	       205	ldlang.c	FUNCTION_5
0x4002008	              0x53	                                push rbx	       205	ldlang.c	FUNCTION_5
0x4002009	        0x4883ec08	                              sub rsp, 8	       205	ldlang.c	FUNCTION_5
0x400200d	          0x4889fb	                            mov rbx, rdi	       205	ldlang.c	FUNCTION_5
0x4002010	    0xf60500000000	           test byte [0x04002017], 0x10 	       209	ldlang.c	FUNCTION_5	IF_1
0x4002017	            0x7545	                           jne 0x400205e	       209	ldlang.c	FUNCTION_5	IF_1
0x4002019	          0x4889f5	                            mov rbp, rsi	       209	ldlang.c	FUNCTION_5	IF_1
0x400201c	    0x488bbff00000	            mov rdi, qword [rdi + 0xf0] 	       210	ldlang.c	FUNCTION_5	IF_1
0x4002023	          0x4885ff	                           test rdi, rdi	       210	ldlang.c	FUNCTION_5	IF_1
0x4002026	            0x7436	                            je 0x400205e	       210	ldlang.c	FUNCTION_5	IF_1
0x4002028	        0x488b4708	                mov rax, qword [rdi + 8]	       211	ldlang.c	FUNCTION_5	IF_1
0x400202c	          0x4889de	                            mov rsi, rbx	       211	ldlang.c	FUNCTION_5	IF_1
0x400202f	    0xff9008030000	                call qword [rax + 0x308]	       211	ldlang.c	FUNCTION_5	IF_1
0x4002035	            0x85c0	                           test eax, eax	       211	ldlang.c	FUNCTION_5	IF_1
0x4002037	            0x7425	                            je 0x400205e	       211	ldlang.c	FUNCTION_5	IF_1
0x4002039	          0x4885ed	                           test rbp, rbp	       212	ldlang.c	FUNCTION_5	IF_1
0x400203c	            0x744e	                            je 0x400208c	       212	ldlang.c	FUNCTION_5	IF_1
0x400203e	        0x488b7530	            mov rsi, qword [rbp + 0x30] 	       213	ldlang.c	FUNCTION_5	IF_1
0x4002042	      0xbf00000000	                              mov edi, 0	       213	ldlang.c	FUNCTION_5	IF_1
0x4002047	      0xb90a000000	                            mov ecx, 0xa	       213	ldlang.c	FUNCTION_5	IF_1
0x400204c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       213	ldlang.c	FUNCTION_5	IF_1
0x400204e	           0xf97c2	                                 seta dl	       213	ldlang.c	FUNCTION_5	IF_1
0x4002051	           0xf92c0	                                 setb al	       213	ldlang.c	FUNCTION_5	IF_1
0x4002054	            0x38c2	                              cmp dl, al	       212	ldlang.c	FUNCTION_5	IF_1
0x4002056	           0xf95c0	                                setne al	       212	ldlang.c	FUNCTION_5	IF_1
0x4002059	           0xfb6c0	                           movzx eax, al	       212	ldlang.c	FUNCTION_5	IF_1
0x400205c	            0xeb41	                           jmp 0x400209f	       212	ldlang.c	FUNCTION_5	IF_1
0x400205e	          0x488b2b	                    mov rbp, qword [rbx]	       215	ldlang.c	FUNCTION_5
0x4002061	    0x488b1d000000	            mov rbx, qword [0x04002068] 	       216	ldlang.c	FUNCTION_5	FOR_1
0x4002068	          0x4885db	                           test rbx, rbx	       216	ldlang.c	FUNCTION_5	FOR_1
0x400206b	            0x7426	                            je 0x4002093	       216	ldlang.c	FUNCTION_5	FOR_1
0x400206d	        0x488b7b08	                mov rdi, qword [rbx + 8]	       217	ldlang.c	FUNCTION_5	FOR_1	IF_2	CALL_1
0x4002071	          0x4889ee	                            mov rsi, rbp	       217	ldlang.c	FUNCTION_5	FOR_1	IF_2	CALL_1
0x4002074	      0xe833fdffff	                     call sym.name_match	       217	ldlang.c	FUNCTION_5	FOR_1	IF_2	CALL_1
0x4002079	            0x85c0	                           test eax, eax	       217	ldlang.c	FUNCTION_5	FOR_1	IF_2	CALL_1
0x400207b	            0x741d	                            je 0x400209a	       217	ldlang.c	FUNCTION_5	FOR_1	IF_2	CALL_1
0x400207d	          0x488b1b	                    mov rbx, qword [rbx]	       216	ldlang.c	FUNCTION_5	FOR_1
0x4002080	          0x4885db	                           test rbx, rbx	       216	ldlang.c	FUNCTION_5	FOR_1
0x4002083	            0x75e8	                           jne 0x400206d	       216	ldlang.c	FUNCTION_5	FOR_1
0x4002085	      0xb800000000	                              mov eax, 0	       220	ldlang.c	FUNCTION_5
0x400208a	            0xeb13	                           jmp 0x400209f	       220	ldlang.c	FUNCTION_5
0x400208c	      0xb801000000	                              mov eax, 1	       212	ldlang.c	FUNCTION_5	IF_1
0x4002091	            0xeb0c	                           jmp 0x400209f	       212	ldlang.c	FUNCTION_5	IF_1
0x4002093	      0xb800000000	                              mov eax, 0	       220	ldlang.c	FUNCTION_5
0x4002098	            0xeb05	                           jmp 0x400209f	       220	ldlang.c	FUNCTION_5
0x400209a	      0xb801000000	                              mov eax, 1	       218	ldlang.c	FUNCTION_5	FOR_1	IF_2
0x400209f	        0x4883c408	                              add rsp, 8	       221	ldlang.c	FUNCTION_5
0x40020a3	              0x5b	                                 pop rbx	       221	ldlang.c	FUNCTION_5
0x40020a4	              0x5d	                                 pop rbp	       221	ldlang.c	FUNCTION_5
0x40020a5	              0xc3	                                     ret	       221	ldlang.c	FUNCTION_5
section_iterator_callback	IF,1:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,0:ELSE,0	8
0x4000040	        0x48833a00	                      cmp qword [rdx], 0	       333	ldlang.c	FUNCTION_9	IF_1
0x4000044	            0x740d	                            je 0x4000053	       333	ldlang.c	FUNCTION_9	IF_1
0x4000046	    0xc74208010000	                  mov dword [rdx + 8], 1	       335	ldlang.c	FUNCTION_9	IF_1
0x400004d	      0xb801000000	                              mov eax, 1	       336	ldlang.c	FUNCTION_9	IF_1
0x4000052	              0xc3	                                     ret	       336	ldlang.c	FUNCTION_9	IF_1
0x4000053	          0x488932	                    mov qword [rdx], rsi	       339	ldlang.c	FUNCTION_9
0x4000056	      0xb800000000	                              mov eax, 0	       340	ldlang.c	FUNCTION_9
0x400005b	              0xc3	                                     ret	       341	ldlang.c	FUNCTION_9
insert_os_after	IF,4:WHILE,0:FOR,1:DO,0:SWITCH,1:functions,0:CALL,0:ELSE,0	55
0x40000e9	    0x48393d000000	            cmp qword [0x040000f0], rdi 	      1764	ldlang.c	FUNCTION_49
0x40000f0	        0x410f94c0	                                sete r8b	      1764	ldlang.c	FUNCTION_49
0x40000f4	        0x450fb6c0	                          movzx r8d, r8b	      1764	ldlang.c	FUNCTION_49
0x40000f8	          0x4889f8	                            mov rax, rdi	      1766	ldlang.c	FUNCTION_49	FOR_1
0x40000fb	          0x488b17	                    mov rdx, qword [rdi]	      1766	ldlang.c	FUNCTION_49	FOR_1
0x40000fe	          0x4885d2	                           test rdx, rdx	      1766	ldlang.c	FUNCTION_49	FOR_1
0x4000101	     0xf84a1000000	                            je 0x40001a8	      1766	ldlang.c	FUNCTION_49	FOR_1
0x4000107	      0xbe00000000	                              mov esi, 0	      1766	ldlang.c	FUNCTION_49	FOR_1
0x400010c	        0x837a080f	                cmp dword [rdx + 8], 0xf	      1770	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1
0x4000110	     0xf8792000000	                            ja 0x40001a8	      1770	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1
0x4000116	          0x8b4a08	                mov ecx, dword [rdx + 8]	      1770	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1
0x4000119	    0xff24cd000000	                       jmp qword [rcx*8]	      1770	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1
0x4000120	          0x4885f6	                           test rsi, rsi	      1773	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_1
0x4000123	            0x754d	                           jne 0x4000172	      1773	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_1
0x4000125	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	      1778	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_1	IF_2
0x4000129	        0x83791008	               cmp dword [rcx + 0x10], 8	      1778	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_1	IF_2
0x400012d	            0x744b	                            je 0x400017a	      1778	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_1	IF_2
0x400012f	        0x488b4918	            mov rcx, qword [rcx + 0x18] 	      1779	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_1	IF_2
0x4000133	          0x80392e	                    cmp byte [rcx], 0x2e	      1779	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_1	IF_2
0x4000136	            0x754a	                           jne 0x4000182	      1779	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_1	IF_2
0x4000138	        0x80790100	                   cmp byte [rcx + 1], 0	      1781	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_1	IF_2
0x400013c	            0x754c	                           jne 0x400018a	      1781	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_1	IF_2
0x400013e	          0x4585c0	                           test r8d, r8d	      1781	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_1	IF_2
0x4000141	            0x7547	                           jne 0x400018a	      1781	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_1	IF_2
0x4000143	          0x4889c6	                            mov rsi, rax	      1781	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_1	IF_2
0x4000146	            0xeb48	                           jmp 0x4000190	      1781	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_1	IF_2
0x4000148	          0x4885f6	                           test rsi, rsi	      1797	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_3
0x400014b	            0x745b	                            je 0x40001a8	      1797	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_3
0x400014d	        0x488b5238	            mov rdx, qword [rdx + 0x38] 	      1799	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_3
0x4000151	          0x4885d2	                           test rdx, rdx	      1801	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_3	IF_4
0x4000154	            0x744b	                            je 0x40001a1	      1801	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_3	IF_4
0x4000156	    0x4883ba080100	              cmp qword [rdx + 0x108], 0	      1802	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_3	IF_4
0x400015e	            0x7445	                            je 0x40001a5	      1802	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_3	IF_4
0x4000160	          0x8b5220	            mov edx, dword [rdx + 0x20] 	      1803	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_3	IF_4
0x4000163	          0x83e201	                              and edx, 1	      1803	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_3	IF_4
0x4000166	        0x480f45c6	                         cmovne rax, rsi	      1803	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_3	IF_4
0x400016a	              0xc3	                                     ret	      1803	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1	IF_3	IF_4
0x400016b	      0xbe00000000	                              mov esi, 0	      1794	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1
0x4000170	            0xeb1e	                           jmp 0x4000190	      1794	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1
0x4000172	    0x41b800000000	                              mov r8d, 0	      1784	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1
0x4000178	            0xeb16	                           jmp 0x4000190	      1784	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1
0x400017a	    0x41b800000000	                              mov r8d, 0	      1784	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1
0x4000180	            0xeb0e	                           jmp 0x4000190	      1784	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1
0x4000182	    0x41b800000000	                              mov r8d, 0	      1784	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1
0x4000188	            0xeb06	                           jmp 0x4000190	      1784	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1
0x400018a	    0x41b800000000	                              mov r8d, 0	      1784	ldlang.c	FUNCTION_49	FOR_1	SWITCH_1
0x4000190	          0x4889d0	                            mov rax, rdx	      1768	ldlang.c	FUNCTION_49	FOR_1
0x4000193	          0x488b12	                    mov rdx, qword [rdx]	      1768	ldlang.c	FUNCTION_49	FOR_1
0x4000196	          0x4885d2	                           test rdx, rdx	      1766	ldlang.c	FUNCTION_49	FOR_1
0x4000199	     0xf856dffffff	                           jne 0x400010c	      1766	ldlang.c	FUNCTION_49	FOR_1
0x400019f	            0xf3c3	                                     ret	      1766	ldlang.c	FUNCTION_49	FOR_1
0x40001a1	          0x4889f0	                            mov rax, rsi	      1766	ldlang.c	FUNCTION_49	FOR_1
0x40001a4	              0xc3	                                     ret	      1766	ldlang.c	FUNCTION_49	FOR_1
0x40001a5	          0x4889f0	                            mov rax, rsi	      1766	ldlang.c	FUNCTION_49	FOR_1
0x40001a8	            0xf3c3	                                     ret	      1819	ldlang.c	FUNCTION_49
lang_add_unique	IF,1:WHILE,0:FOR,1:DO,0:SWITCH,0:functions,0:CALL,2:ELSE,0	28
0x400a807	              0x55	                                push rbp	      8647	ldlang.c	FUNCTION_203
0x400a808	              0x53	                                push rbx	      8647	ldlang.c	FUNCTION_203
0x400a809	        0x4883ec08	                              sub rsp, 8	      8647	ldlang.c	FUNCTION_203
0x400a80d	          0x4889fd	                            mov rbp, rdi	      8647	ldlang.c	FUNCTION_203
0x400a810	    0x488b1d000000	            mov rbx, qword [0x0400a817] 	      8650	ldlang.c	FUNCTION_203	FOR_1
0x400a817	          0x4885db	                           test rbx, rbx	      8650	ldlang.c	FUNCTION_203	FOR_1
0x400a81a	            0x7418	                            je 0x400a834	      8650	ldlang.c	FUNCTION_203	FOR_1
0x400a81c	        0x488b7b08	                mov rdi, qword [rbx + 8]	      8651	ldlang.c	FUNCTION_203	FOR_1	IF_1
0x400a820	          0x4889ee	                            mov rsi, rbp	      8651	ldlang.c	FUNCTION_203	FOR_1	IF_1
0x400a823	      0xe800000000	                          call 0x400a828	      8651	ldlang.c	FUNCTION_203	FOR_1	IF_1
0x400a828	            0x85c0	                           test eax, eax	      8651	ldlang.c	FUNCTION_203	FOR_1	IF_1
0x400a82a	            0x7432	                            je 0x400a85e	      8651	ldlang.c	FUNCTION_203	FOR_1	IF_1
0x400a82c	          0x488b1b	                    mov rbx, qword [rbx]	      8650	ldlang.c	FUNCTION_203	FOR_1
0x400a82f	          0x4885db	                           test rbx, rbx	      8650	ldlang.c	FUNCTION_203	FOR_1
0x400a832	            0x75e8	                           jne 0x400a81c	      8650	ldlang.c	FUNCTION_203	FOR_1
0x400a834	      0xbf10000000	                           mov edi, 0x10	      8654	ldlang.c	FUNCTION_203	CALL_1
0x400a839	      0xe800000000	                          call 0x400a83e	      8654	ldlang.c	FUNCTION_203	CALL_1
0x400a83e	          0x4889c3	                            mov rbx, rax	      8654	ldlang.c	FUNCTION_203	CALL_1
0x400a841	          0x4889ef	                            mov rdi, rbp	      8655	ldlang.c	FUNCTION_203	CALL_2
0x400a844	      0xe800000000	                          call 0x400a849	      8655	ldlang.c	FUNCTION_203	CALL_2
0x400a849	        0x48894308	                mov qword [rbx + 8], rax	      8655	ldlang.c	FUNCTION_203	CALL_2
0x400a84d	    0x488b05000000	            mov rax, qword [0x0400a854] 	      8656	ldlang.c	FUNCTION_203
0x400a854	          0x488903	                    mov qword [rbx], rax	      8656	ldlang.c	FUNCTION_203
0x400a857	    0x48891d000000	            mov qword [0x0400a85e], rbx 	      8657	ldlang.c	FUNCTION_203
0x400a85e	        0x4883c408	                              add rsp, 8	      8658	ldlang.c	FUNCTION_203
0x400a862	              0x5b	                                 pop rbx	      8658	ldlang.c	FUNCTION_203
0x400a863	              0x5d	                                 pop rbp	      8658	ldlang.c	FUNCTION_203
0x400a864	              0xc3	                                     ret	      8658	ldlang.c	FUNCTION_203
lang_process	IF,21:WHILE,1:FOR,1:DO,0:SWITCH,0:functions,0:CALL,66:ELSE,2	1762
0x4008a44	            0x4157	                                push r15	      7157	ldlang.c	FUNCTION_163
0x4008a46	            0x4156	                                push r14	      7157	ldlang.c	FUNCTION_163
0x4008a48	            0x4155	                                push r13	      7157	ldlang.c	FUNCTION_163
0x4008a4a	            0x4154	                                push r12	      7157	ldlang.c	FUNCTION_163
0x4008a4c	              0x55	                                push rbp	      7157	ldlang.c	FUNCTION_163
0x4008a4d	              0x53	                                push rbx	      7157	ldlang.c	FUNCTION_163
0x4008a4e	        0x4883ec78	                           sub rsp, 0x78	      7157	ldlang.c	FUNCTION_163
0x4008a52	    0x64488b042528	                mov rax, qword fs:[0x28]	      7157	ldlang.c	FUNCTION_163
0x4008a5b	      0x4889442468	             mov qword [rsp + 0x68], rax	      7157	ldlang.c	FUNCTION_163
0x4008a60	            0x31c0	                            xor eax, eax	      7157	ldlang.c	FUNCTION_163
0x4008a62	    0x488b3d000000	            mov rdi, qword [0x04008a69] 	      7159	ldlang.c	FUNCTION_163	IF_1
0x4008a69	          0x4885ff	                           test rdi, rdi	      7159	ldlang.c	FUNCTION_163	IF_1
0x4008a6c	            0x7405	                            je 0x4008a73	      7159	ldlang.c	FUNCTION_163	IF_1
0x4008a6e	      0xe8cb8effff	call sym.lang_finalize_version_expr_head	      7160	ldlang.c	FUNCTION_163	CALL_1
0x4008a73	    0x488b05000000	            mov rax, qword [0x04008a7a] 	      7162	ldlang.c	FUNCTION_163
0x4008a7a	    0x488905000000	            mov qword [0x04008a81], rax 	      7162	ldlang.c	FUNCTION_163
0x4008a81	      0xbf00000000	                              mov edi, 0	      7165	ldlang.c	FUNCTION_163	CALL_2
0x4008a86	      0xe800000000	                          call 0x4008a8b	      7165	ldlang.c	FUNCTION_163	CALL_2
0x4008a8b	      0xe8dc7cffff	                       call sym.init_opb	      7166	ldlang.c	FUNCTION_163	CALL_3
0x4008a90	      0xe800000000	                          call 0x4008a95	      7168	ldlang.c	FUNCTION_163	CALL_4
0x4008a95	    0x488b1d000000	            mov rbx, qword [0x04008a9c] 	      3431	ldlang.c	FUNCTION_81	FOR_1
0x4008a9c	          0x4885db	                           test rbx, rbx	      3431	ldlang.c	FUNCTION_81	FOR_1
0x4008a9f	            0x7411	                            je 0x4008ab2	      3431	ldlang.c	FUNCTION_81	FOR_1
0x4008aa1	        0x488b7b08	                mov rdi, qword [rbx + 8]	      3432	ldlang.c	FUNCTION_81	CALL_1
0x4008aa5	      0xe8d68dffff	               call sym.insert_undefined	      3432	ldlang.c	FUNCTION_81	CALL_1
0x4008aaa	          0x488b1b	                    mov rbx, qword [rbx]	      3431	ldlang.c	FUNCTION_81	FOR_1
0x4008aad	          0x4885db	                           test rbx, rbx	      3431	ldlang.c	FUNCTION_81	FOR_1
0x4008ab0	            0x75ef	                           jne 0x4008aa1	      3431	ldlang.c	FUNCTION_81	FOR_1
0x4008ab2	      0xe800000000	                          call 0x4008ab7	      7173	ldlang.c	FUNCTION_163	IF_2	CALL_6
0x4008ab7	            0x85c0	                           test eax, eax	      7173	ldlang.c	FUNCTION_163	IF_2	CALL_6
0x4008ab9	            0x7521	                           jne 0x4008adc	      7173	ldlang.c	FUNCTION_163	IF_2	CALL_6
0x4008abb	      0xba05000000	                              mov edx, 5	      7174	ldlang.c	FUNCTION_163	CALL_8
0x4008ac0	      0xbe00000000	                              mov esi, 0	      7174	ldlang.c	FUNCTION_163	CALL_8
0x4008ac5	      0xbf00000000	                              mov edi, 0	      7174	ldlang.c	FUNCTION_163	CALL_8
0x4008aca	      0xe800000000	                          call 0x4008acf	      7174	ldlang.c	FUNCTION_163	CALL_8
0x4008acf	          0x4889c7	                            mov rdi, rax	      7174	ldlang.c	FUNCTION_163	CALL_8
0x4008ad2	      0xb800000000	                              mov eax, 0	      7174	ldlang.c	FUNCTION_163	CALL_8
0x4008ad7	      0xe800000000	                          call 0x4008adc	      7174	ldlang.c	FUNCTION_163	CALL_8
0x4008adc	    0x488b05000000	            mov rax, qword [0x04008ae3] 	      7177	ldlang.c	FUNCTION_163
0x4008ae3	    0x488905000000	            mov qword [0x04008aea], rax 	      7177	ldlang.c	FUNCTION_163
0x4008aea	    0x830500000000	               add dword [0x04008af1], 1	      7178	ldlang.c	FUNCTION_163
0x4008af1	      0xbe00000000	                              mov esi, 0	      7179	ldlang.c	FUNCTION_163	CALL_9
0x4008af6	    0x488b3d000000	            mov rdi, qword [0x04008afd] 	      7179	ldlang.c	FUNCTION_163	CALL_9
0x4008afd	      0xe883dfffff	                call sym.open_input_bfds	      7179	ldlang.c	FUNCTION_163	CALL_9
0x4008b02	    0xf60500000000	               test byte [0x04008b09], 2	      7182	ldlang.c	FUNCTION_163	IF_3
0x4008b09	     0xf844a030000	                            je 0x4008e59	      7182	ldlang.c	FUNCTION_163	IF_3
0x4008b0f	    0x488b05000000	            mov rax, qword [0x04008b16] 	      7193	ldlang.c	FUNCTION_163	IF_3
0x4008b16	        0x488b5008	                mov rdx, qword [rax + 8]	      7193	ldlang.c	FUNCTION_163	IF_3
0x4008b1a	          0x488b00	                    mov rax, qword [rax]	      7193	ldlang.c	FUNCTION_163	IF_3
0x4008b1d	      0x4889442430	             mov qword [rsp + 0x30], rax	      7193	ldlang.c	FUNCTION_163	IF_3
0x4008b22	      0x4889542438	             mov qword [rsp + 0x38], rdx	      7193	ldlang.c	FUNCTION_163	IF_3
0x4008b27	    0x488b05000000	            mov rax, qword [0x04008b2e] 	      7195	ldlang.c	FUNCTION_163	IF_3
0x4008b2e	    0x488b15000000	            mov rdx, qword [0x04008b35] 	      7195	ldlang.c	FUNCTION_163	IF_3
0x4008b35	      0x4889442440	             mov qword [rsp + 0x40], rax	      7195	ldlang.c	FUNCTION_163	IF_3
0x4008b3a	      0x4889542448	             mov qword [rsp + 0x48], rdx	      7195	ldlang.c	FUNCTION_163	IF_3
0x4008b3f	    0x488b05000000	            mov rax, qword [0x04008b46] 	      7196	ldlang.c	FUNCTION_163	IF_3
0x4008b46	    0x488b15000000	            mov rdx, qword [0x04008b4d] 	      7196	ldlang.c	FUNCTION_163	IF_3
0x4008b4d	      0x4889442450	             mov qword [rsp + 0x50], rax	      7196	ldlang.c	FUNCTION_163	IF_3
0x4008b52	      0x4889542458	             mov qword [rsp + 0x58], rdx	      7196	ldlang.c	FUNCTION_163	IF_3
0x4008b57	      0xe800000000	                          call 0x4008b5c	      7197	ldlang.c	FUNCTION_163	IF_3	IF_4	CALL_10
0x4008b5c	            0x85c0	                           test eax, eax	      7197	ldlang.c	FUNCTION_163	IF_3	IF_4	CALL_10
0x4008b5e	            0x742c	                            je 0x4008b8c	      7197	ldlang.c	FUNCTION_163	IF_3	IF_4	CALL_10
0x4008b60	      0xe800000000	                          call 0x4008b65	      7198	ldlang.c	FUNCTION_163	IF_3	IF_4	CALL_12
0x4008b65	          0x4889c3	                            mov rbx, rax	      7198	ldlang.c	FUNCTION_163	IF_3	IF_4	CALL_12
0x4008b68	      0xba05000000	                              mov edx, 5	      7198	ldlang.c	FUNCTION_163	IF_3	IF_4	CALL_12
0x4008b6d	      0xbe00000000	                              mov esi, 0	      7198	ldlang.c	FUNCTION_163	IF_3	IF_4	CALL_12
0x4008b72	      0xbf00000000	                              mov edi, 0	      7198	ldlang.c	FUNCTION_163	IF_3	IF_4	CALL_12
0x4008b77	      0xe800000000	                          call 0x4008b7c	      7198	ldlang.c	FUNCTION_163	IF_3	IF_4	CALL_12
0x4008b7c	          0x4889de	                            mov rsi, rbx	      7198	ldlang.c	FUNCTION_163	IF_3	IF_4	CALL_12
0x4008b7f	          0x4889c7	                            mov rdi, rax	      7198	ldlang.c	FUNCTION_163	IF_3	IF_4	CALL_12
0x4008b82	      0xb800000000	                              mov eax, 0	      7198	ldlang.c	FUNCTION_163	IF_3	IF_4	CALL_12
0x4008b87	      0xe800000000	                          call 0x4008b8c	      7198	ldlang.c	FUNCTION_163	IF_3	IF_4	CALL_12
0x4008b8c	      0xbe00000000	                              mov esi, 0	      7201	ldlang.c	FUNCTION_163	IF_3	CALL_14
0x4008b91	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      7201	ldlang.c	FUNCTION_163	IF_3	CALL_14
0x4008b96	          0x488b38	                    mov rdi, qword [rax]	      7201	ldlang.c	FUNCTION_163	IF_3	CALL_14
0x4008b99	      0xe8e7deffff	                call sym.open_input_bfds	      7201	ldlang.c	FUNCTION_163	IF_3	CALL_14
0x4008b9e	      0x488d742430	                   lea rsi, [rsp + 0x30]	      7203	ldlang.c	FUNCTION_163	IF_3	CALL_15
0x4008ba3	    0x488b3d000000	            mov rdi, qword [0x04008baa] 	      7203	ldlang.c	FUNCTION_163	IF_3	CALL_15
0x4008baa	      0xe83978ffff	          call sym.lang_list_remove_tail	      7203	ldlang.c	FUNCTION_163	IF_3	CALL_15
0x4008baf	      0x488d742440	                   lea rsi, [rsp + 0x40]	      7205	ldlang.c	FUNCTION_163	IF_3	CALL_16
0x4008bb4	      0xbf00000000	                              mov edi, 0	      7205	ldlang.c	FUNCTION_163	IF_3	CALL_16
0x4008bb9	      0xe82a78ffff	          call sym.lang_list_remove_tail	      7205	ldlang.c	FUNCTION_163	IF_3	CALL_16
0x4008bbe	      0x488d742450	                   lea rsi, [rsp + 0x50]	      7206	ldlang.c	FUNCTION_163	IF_3	CALL_17
0x4008bc3	      0xbf00000000	                              mov edi, 0	      7206	ldlang.c	FUNCTION_163	IF_3	CALL_17
0x4008bc8	      0xe81b78ffff	          call sym.lang_list_remove_tail	      7206	ldlang.c	FUNCTION_163	IF_3	CALL_17
0x4008bcd	    0x48837c243000	               cmp qword [rsp + 0x30], 0	      7208	ldlang.c	FUNCTION_163	IF_3	IF_5
0x4008bd3	     0xf8480020000	                            je 0x4008e59	      7208	ldlang.c	FUNCTION_163	IF_3	IF_5
0x4008bd9	    0x488b0d000000	            mov rcx, qword [0x04008be0] 	      6999	ldlang.c	FUNCTION_156
0x4008be0	    0x488b15000000	            mov rdx, qword [0x04008be7] 	      7000	ldlang.c	FUNCTION_156	FOR_1
0x4008be7	          0x4889d0	                            mov rax, rdx	      7000	ldlang.c	FUNCTION_156	FOR_1
0x4008bea	          0x4885d2	                           test rdx, rdx	      7000	ldlang.c	FUNCTION_156	FOR_1
0x4008bed	            0x7439	                            je 0x4008c28	      7000	ldlang.c	FUNCTION_156	FOR_1
0x4008bef	         0xfb65249	           movzx edx, byte [rdx + 0x49] 	      7004	ldlang.c	FUNCTION_156	FOR_1	IF_1
0x4008bf3	          0xf6c220	                           test dl, 0x20	      7004	ldlang.c	FUNCTION_156	FOR_1	IF_1
0x4008bf6	            0x7412	                            je 0x4008c0a	      7004	ldlang.c	FUNCTION_156	FOR_1	IF_1
0x4008bf8	      0xe985190000	                           jmp 0x400a582	      7004	ldlang.c	FUNCTION_156	FOR_1	IF_1
0x4008bfd	         0xfb65049	           movzx edx, byte [rax + 0x49] 	      7004	ldlang.c	FUNCTION_156	FOR_1	IF_1
0x4008c01	          0xf6c220	                           test dl, 0x20	      7004	ldlang.c	FUNCTION_156	FOR_1	IF_1
0x4008c04	     0xf8578190000	                           jne 0x400a582	      7004	ldlang.c	FUNCTION_156	FOR_1	IF_1
0x4008c0a	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      7007	ldlang.c	FUNCTION_156	FOR_1	IF_2
0x4008c0e	          0x4885d2	                           test rdx, rdx	      7007	ldlang.c	FUNCTION_156	FOR_1	IF_2
0x4008c11	            0x740c	                            je 0x4008c1f	      7007	ldlang.c	FUNCTION_156	FOR_1	IF_2
0x4008c13	    0x4883bad00000	               cmp qword [rdx + 0xd0], 0	      7007	ldlang.c	FUNCTION_156	FOR_1	IF_2
0x4008c1b	        0x480f44c8	                          cmove rcx, rax	      7007	ldlang.c	FUNCTION_156	FOR_1	IF_2
0x4008c1f	        0x488b4030	            mov rax, qword [rax + 0x30] 	      7002	ldlang.c	FUNCTION_156	FOR_1
0x4008c23	          0x4885c0	                           test rax, rax	      7000	ldlang.c	FUNCTION_156	FOR_1
0x4008c26	            0x75d5	                           jne 0x4008bfd	      7000	ldlang.c	FUNCTION_156	FOR_1
0x4008c28	    0x48890d000000	            mov qword [0x04008c2f], rcx 	      7212	ldlang.c	FUNCTION_163	IF_3	IF_5	CALL_18
0x4008c2f	          0x4885c9	                           test rcx, rcx	      7217	ldlang.c	FUNCTION_163	IF_3	IF_5	CALL_19
0x4008c32	            0x750f	                           jne 0x4008c43	      7217	ldlang.c	FUNCTION_163	IF_3	IF_5	CALL_19
0x4008c34	      0xbe311c0000	                         mov esi, 0x1c31	      7217	ldlang.c	FUNCTION_163	IF_3	IF_5	CALL_19
0x4008c39	      0xbf00000000	                              mov edi, 0	      7217	ldlang.c	FUNCTION_163	IF_3	IF_5	CALL_19
0x4008c3e	      0xe800000000	                          call 0x4008c43	      7217	ldlang.c	FUNCTION_163	IF_3	IF_5	CALL_19
0x4008c43	    0x488b05000000	            mov rax, qword [0x04008c4a] 	      7220	ldlang.c	FUNCTION_163	IF_3	IF_5
0x4008c4a	    0x488b15000000	            mov rdx, qword [0x04008c51] 	      7219	ldlang.c	FUNCTION_163	IF_3	IF_5	CALL_20
0x4008c51	          0x488b30	                    mov rsi, qword [rax]	      7071	ldlang.c	FUNCTION_158
0x4008c54	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	      7071	ldlang.c	FUNCTION_158
0x4008c59	          0x488931	                    mov qword [rcx], rsi	      7071	ldlang.c	FUNCTION_158
0x4008c5c	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	      7072	ldlang.c	FUNCTION_158
0x4008c61	          0x488908	                    mov qword [rax], rcx	      7072	ldlang.c	FUNCTION_158
0x4008c64	        0x483b4208	                cmp rax, qword [rdx + 8]	      7073	ldlang.c	FUNCTION_158	IF_1
0x4008c68	            0x7509	                           jne 0x4008c73	      7073	ldlang.c	FUNCTION_158	IF_1
0x4008c6a	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	      7074	ldlang.c	FUNCTION_158	IF_1
0x4008c6f	        0x48894a08	                mov qword [rdx + 8], rcx	      7074	ldlang.c	FUNCTION_158	IF_1
0x4008c73	        0x488b4838	            mov rcx, qword [rax + 0x38] 	      7071	ldlang.c	FUNCTION_158
0x4008c77	      0x488b542458	            mov rdx, qword [rsp + 0x58] 	      7071	ldlang.c	FUNCTION_158
0x4008c7c	          0x48890a	                    mov qword [rdx], rcx	      7071	ldlang.c	FUNCTION_158
0x4008c7f	      0x488b542450	            mov rdx, qword [rsp + 0x50] 	      7072	ldlang.c	FUNCTION_158
0x4008c84	        0x48895038	             mov qword [rax + 0x38], rdx	      7072	ldlang.c	FUNCTION_158
0x4008c88	        0x488d5038	                   lea rdx, [rax + 0x38]	      7223	ldlang.c	FUNCTION_163	IF_3	IF_5
0x4008c8c	    0x483915000000	            cmp qword [0x04008c93], rdx 	      7073	ldlang.c	FUNCTION_158	IF_1
0x4008c93	            0x750c	                           jne 0x4008ca1	      7073	ldlang.c	FUNCTION_158	IF_1
0x4008c95	      0x488b542458	            mov rdx, qword [rsp + 0x58] 	      7074	ldlang.c	FUNCTION_158	IF_1
0x4008c9a	    0x488915000000	            mov qword [0x04008ca1], rdx 	      7074	ldlang.c	FUNCTION_158	IF_1
0x4008ca1	      0x4883781000	               cmp qword [rax + 0x10], 0	      7227	ldlang.c	FUNCTION_163	IF_3	IF_5	IF_6
0x4008ca6	            0x7430	                            je 0x4008cd8	      7227	ldlang.c	FUNCTION_163	IF_3	IF_5	IF_6
0x4008ca8	        0x488b4830	            mov rcx, qword [rax + 0x30] 	      7071	ldlang.c	FUNCTION_158
0x4008cac	      0x488b542448	            mov rdx, qword [rsp + 0x48] 	      7071	ldlang.c	FUNCTION_158
0x4008cb1	          0x48890a	                    mov qword [rdx], rcx	      7071	ldlang.c	FUNCTION_158
0x4008cb4	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	      7072	ldlang.c	FUNCTION_158
0x4008cb9	        0x48895030	             mov qword [rax + 0x30], rdx	      7072	ldlang.c	FUNCTION_158
0x4008cbd	        0x4883c030	                           add rax, 0x30	      7228	ldlang.c	FUNCTION_163	IF_3	IF_5	CALL_22
0x4008cc1	    0x483905000000	            cmp qword [0x04008cc8], rax 	      7073	ldlang.c	FUNCTION_158	IF_1
0x4008cc8	            0x7542	                           jne 0x4008d0c	      7073	ldlang.c	FUNCTION_158	IF_1
0x4008cca	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      7074	ldlang.c	FUNCTION_158	IF_1
0x4008ccf	    0x488905000000	            mov qword [0x04008cd6], rax 	      7074	ldlang.c	FUNCTION_158	IF_1
0x4008cd6	            0xeb34	                           jmp 0x4008d0c	      7074	ldlang.c	FUNCTION_158	IF_1
0x4008cd8	    0x488b15000000	            mov rdx, qword [0x04008cdf] 	      7071	ldlang.c	FUNCTION_158
0x4008cdf	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      7071	ldlang.c	FUNCTION_158
0x4008ce4	          0x488910	                    mov qword [rax], rdx	      7071	ldlang.c	FUNCTION_158
0x4008ce7	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      7072	ldlang.c	FUNCTION_158
0x4008cec	    0x488905000000	            mov qword [0x04008cf3], rax 	      7072	ldlang.c	FUNCTION_158
0x4008cf3	    0x48813d000000	               cmp qword [0x04008cfe], 0	      7073	ldlang.c	FUNCTION_158	IF_1
0x4008cfe	            0x750c	                           jne 0x4008d0c	      7073	ldlang.c	FUNCTION_158	IF_1
0x4008d00	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      7074	ldlang.c	FUNCTION_158	IF_1
0x4008d05	    0x488905000000	            mov qword [0x04008d0c], rax 	      7074	ldlang.c	FUNCTION_158	IF_1
0x4008d0c	    0x488b05000000	            mov rax, qword [0x04008d13] 	      7233	ldlang.c	FUNCTION_163	IF_3	IF_5
0x4008d13	    0x488b15000000	            mov rdx, qword [0x04008d1a] 	      7233	ldlang.c	FUNCTION_163	IF_3	IF_5
0x4008d1a	      0x4889442440	             mov qword [rsp + 0x40], rax	      7233	ldlang.c	FUNCTION_163	IF_3	IF_5
0x4008d1f	      0x4889542448	             mov qword [rsp + 0x48], rdx	      7233	ldlang.c	FUNCTION_163	IF_3	IF_5
0x4008d24	    0x830500000000	               add dword [0x04008d2b], 1	      7234	ldlang.c	FUNCTION_163	IF_3	IF_5
0x4008d2b	      0xbe02000000	                              mov esi, 2	      7235	ldlang.c	FUNCTION_163	IF_3	IF_5	CALL_24
0x4008d30	    0x488b3d000000	            mov rdi, qword [0x04008d37] 	      7235	ldlang.c	FUNCTION_163	IF_3	IF_5	CALL_24
0x4008d37	      0xe849ddffff	                call sym.open_input_bfds	      7235	ldlang.c	FUNCTION_163	IF_3	IF_5	CALL_24
0x4008d3c	      0x488d742440	                   lea rsi, [rsp + 0x40]	      7236	ldlang.c	FUNCTION_163	IF_3	IF_5	CALL_25
0x4008d41	      0xbf00000000	                              mov edi, 0	      7236	ldlang.c	FUNCTION_163	IF_3	IF_5	CALL_25
0x4008d46	      0xe89d76ffff	          call sym.lang_list_remove_tail	      7236	ldlang.c	FUNCTION_163	IF_3	IF_5	CALL_25
0x4008d4b	      0xe9fb000000	                           jmp 0x4008e4b	      7237	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1
0x4008d50	        0x498b7920	              mov rdi, qword [r9 + 0x20]	      7022	ldlang.c	FUNCTION_157
0x4008d54	    0x4c8b87d00000	              mov r8, qword [rdi + 0xd0]	      7028	ldlang.c	FUNCTION_157	IF_1
0x4008d5b	          0x4d85c0	                             test r8, r8	      7029	ldlang.c	FUNCTION_157	IF_1
0x4008d5e	        0x490f45f8	                          cmovne rdi, r8	      7029	ldlang.c	FUNCTION_157	IF_1
0x4008d62	    0x488b05000000	            mov rax, qword [0x04008d69] 	      7038	ldlang.c	FUNCTION_157	FOR_1
0x4008d69	          0x4885c0	                           test rax, rax	      7038	ldlang.c	FUNCTION_157	FOR_1
0x4008d6c	            0x7451	                            je 0x4008dbf	      7038	ldlang.c	FUNCTION_157	FOR_1
0x4008d6e	      0xb900000000	                              mov ecx, 0	      7038	ldlang.c	FUNCTION_157	FOR_1
0x4008d73	      0xbe00000000	                              mov esi, 0	      7038	ldlang.c	FUNCTION_157	FOR_1
0x4008d78	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      7042	ldlang.c	FUNCTION_157	FOR_1	IF_2
0x4008d7c	          0x4839fa	                            cmp rdx, rdi	      7042	ldlang.c	FUNCTION_157	FOR_1	IF_2
0x4008d7f	            0x750f	                           jne 0x4008d90	      7042	ldlang.c	FUNCTION_157	FOR_1	IF_2
0x4008d81	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      7045	ldlang.c	FUNCTION_157	FOR_1	IF_2	IF_3
0x4008d85	          0x4885d2	                           test rdx, rdx	      7045	ldlang.c	FUNCTION_157	FOR_1	IF_2	IF_3
0x4008d88	            0x7416	                            je 0x4008da0	      7045	ldlang.c	FUNCTION_157	FOR_1	IF_2	IF_3
0x4008d8a	        0x4883c230	                           add rdx, 0x30	      7046	ldlang.c	FUNCTION_157	FOR_1	IF_2	IF_3
0x4008d8e	            0xeb5d	                           jmp 0x4008ded	      7046	ldlang.c	FUNCTION_157	FOR_1	IF_2	IF_3
0x4008d90	          0x4885d2	                           test rdx, rdx	      7048	ldlang.c	FUNCTION_157	FOR_1	IF_4
0x4008d93	            0x740e	                            je 0x4008da3	      7048	ldlang.c	FUNCTION_157	FOR_1	IF_4
0x4008d95	      0x4883783000	               cmp qword [rax + 0x30], 0	      7048	ldlang.c	FUNCTION_157	FOR_1	IF_4
0x4008d9a	        0x480f45c8	                         cmovne rcx, rax	      7048	ldlang.c	FUNCTION_157	FOR_1	IF_4
0x4008d9e	            0xeb03	                           jmp 0x4008da3	      7048	ldlang.c	FUNCTION_157	FOR_1	IF_4
0x4008da0	          0x4889ce	                            mov rsi, rcx	      7045	ldlang.c	FUNCTION_157	FOR_1	IF_2	IF_3
0x4008da3	        0x488b4038	            mov rax, qword [rax + 0x38] 	      7040	ldlang.c	FUNCTION_157	FOR_1
0x4008da7	          0x4885c0	                           test rax, rax	      7038	ldlang.c	FUNCTION_157	FOR_1
0x4008daa	            0x75cc	                           jne 0x4008d78	      7038	ldlang.c	FUNCTION_157	FOR_1
0x4008dac	          0x4885f6	                           test rsi, rsi	      7052	ldlang.c	FUNCTION_157	FOR_2
0x4008daf	            0x740e	                            je 0x4008dbf	      7052	ldlang.c	FUNCTION_157	FOR_2
0x4008db1	        0x488d5630	                   lea rdx, [rsi + 0x30]	      7052	ldlang.c	FUNCTION_157	FOR_2
0x4008db5	          0x488b02	                    mov rax, qword [rdx]	      7053	ldlang.c	FUNCTION_157	FOR_2
0x4008db8	          0x4885c0	                           test rax, rax	      7052	ldlang.c	FUNCTION_157	FOR_2
0x4008dbb	            0x750f	                           jne 0x4008dcc	      7052	ldlang.c	FUNCTION_157	FOR_2
0x4008dbd	            0xeb2e	                           jmp 0x4008ded	      7052	ldlang.c	FUNCTION_157	FOR_2
0x4008dbf	    0x488b05000000	            mov rax, qword [0x04008dc6] 	      7052	ldlang.c	FUNCTION_157	FOR_2
0x4008dc6	        0x488d5030	                   lea rdx, [rax + 0x30]	      7052	ldlang.c	FUNCTION_157	FOR_2
0x4008dca	            0xebe9	                           jmp 0x4008db5	      7052	ldlang.c	FUNCTION_157	FOR_2
0x4008dcc	        0xf6404940	           test byte [rax + 0x49], 0x40 	      7055	ldlang.c	FUNCTION_157	FOR_2	IF_5
0x4008dd0	            0x750e	                           jne 0x4008de0	      7055	ldlang.c	FUNCTION_157	FOR_2	IF_5
0x4008dd2	        0x488b4820	            mov rcx, qword [rax + 0x20] 	      7056	ldlang.c	FUNCTION_157	FOR_2	IF_5
0x4008dd6	    0x4883b9d00000	               cmp qword [rcx + 0xd0], 0	      7056	ldlang.c	FUNCTION_157	FOR_2	IF_5
0x4008dde	            0x740d	                            je 0x4008ded	      7056	ldlang.c	FUNCTION_157	FOR_2	IF_5
0x4008de0	        0x488d5030	                   lea rdx, [rax + 0x30]	      7054	ldlang.c	FUNCTION_157	FOR_2
0x4008de4	        0x488b4030	            mov rax, qword [rax + 0x30] 	      7053	ldlang.c	FUNCTION_157	FOR_2
0x4008de8	          0x4885c0	                           test rax, rax	      7052	ldlang.c	FUNCTION_157	FOR_2
0x4008deb	            0x75df	                           jne 0x4008dcc	      7052	ldlang.c	FUNCTION_157	FOR_2
0x4008ded	          0x4d85c0	                             test r8, r8	      7247	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_7
0x4008df0	     0xf84b3170000	                            je 0x400a5a9	      7247	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_7
0x4008df6	        0x498b4930	              mov rcx, qword [r9 + 0x30]	      7245	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1
0x4008dfa	          0x4885c9	                           test rcx, rcx	      7248	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_7	FOR_1
0x4008dfd	     0xf848a170000	                            je 0x400a58d	      7248	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_7	FOR_1
0x4008e03	        0x488b4120	            mov rax, qword [rcx + 0x20] 	      7249	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_7	FOR_1	IF_8
0x4008e07	    0x4c3b80d00000	              cmp r8, qword [rax + 0xd0]	      7249	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_7	FOR_1	IF_8
0x4008e0e	            0x7419	                            je 0x4008e29	      7249	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_7	FOR_1	IF_8
0x4008e10	      0xe978170000	                           jmp 0x400a58d	      7249	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_7	FOR_1	IF_8
0x4008e15	        0x488b7020	            mov rsi, qword [rax + 0x20] 	      7249	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_7	FOR_1	IF_8
0x4008e19	    0x4c3986d00000	              cmp qword [rsi + 0xd0], r8	      7249	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_7	FOR_1	IF_8
0x4008e20	     0xf8527190000	                           jne 0x400a74d	      7249	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_7	FOR_1	IF_8
0x4008e26	          0x4889c1	                            mov rcx, rax	      7248	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_7	FOR_1
0x4008e29	        0x488b4130	            mov rax, qword [rcx + 0x30] 	      7248	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_7	FOR_1
0x4008e2d	          0x4885c0	                           test rax, rax	      7248	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_7	FOR_1
0x4008e30	            0x75e3	                           jne 0x4008e15	      7248	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_7	FOR_1
0x4008e32	      0xe916190000	                           jmp 0x400a74d	      7248	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_7	FOR_1
0x4008e37	    0x498b80000100	            mov rax, qword [r8 + 0x100] 	      7257	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_9
0x4008e3e	          0x4885c0	                           test rax, rax	      7258	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_9	IF_10
0x4008e41	            0x7408	                            je 0x4008e4b	      7258	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_9	IF_10
0x4008e43	        0x4883e930	                           sub rcx, 0x30	      7259	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_9	IF_10
0x4008e47	        0x48894830	             mov qword [rax + 0x30], rcx	      7259	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_9	IF_10
0x4008e4b	      0x4c8b4c2440	              mov r9, qword [rsp + 0x40]	      7237	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1
0x4008e50	          0x4d85c9	                             test r9, r9	      7237	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1
0x4008e53	     0xf85f7feffff	                           jne 0x4008d50	      7237	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1
0x4008e59	    0x48833d000000	               cmp qword [0x04008e61], 0	      7270	ldlang.c	FUNCTION_163	CALL_27
0x4008e61	            0x740f	                            je 0x4008e72	      7270	ldlang.c	FUNCTION_163	CALL_27
0x4008e63	      0xbe661c0000	                         mov esi, 0x1c66	      7270	ldlang.c	FUNCTION_163	CALL_27
0x4008e68	      0xbf00000000	                              mov edi, 0	      7270	ldlang.c	FUNCTION_163	CALL_27
0x4008e6d	      0xe800000000	                          call 0x4008e72	      7270	ldlang.c	FUNCTION_163	CALL_27
0x4008e72	    0x48c705000000	               mov qword [0x04008e7d], 0	      7272	ldlang.c	FUNCTION_163
0x4008e7d	    0x48833d000000	               cmp qword [0x04008e85], 0	      7274	ldlang.c	FUNCTION_163	IF_11
0x4008e85	            0x751a	                           jne 0x4008ea1	      7274	ldlang.c	FUNCTION_163	IF_11
0x4008e87	    0x488b05000000	            mov rax, qword [0x04008e8e] 	      7276	ldlang.c	FUNCTION_163	IF_11
0x4008e8e	    0x488905000000	            mov qword [0x04008e95], rax 	      7276	ldlang.c	FUNCTION_163	IF_11
0x4008e95	    0x488b3d000000	            mov rdi, qword [0x04008e9c] 	      7286	ldlang.c	FUNCTION_163	IF_11	CALL_28
0x4008e9c	      0xe800000000	                          call 0x4008ea1	      7286	ldlang.c	FUNCTION_163	IF_11	CALL_28
0x4008ea1	    0x488b3d000000	            mov rdi, qword [0x04008ea8] 	      7289	ldlang.c	FUNCTION_163	CALL_29
0x4008ea8	      0xe800000000	                          call 0x4008ead	      7289	ldlang.c	FUNCTION_163	CALL_29
0x4008ead	    0x488b3d000000	            mov rdi, qword [0x04008eb4] 	      7290	ldlang.c	FUNCTION_163	CALL_30
0x4008eb4	      0xe800000000	                          call 0x4008eb9	      7290	ldlang.c	FUNCTION_163	CALL_30
0x4008eb9	      0xe800000000	                          call 0x4008ebe	      7292	ldlang.c	FUNCTION_163	CALL_31
0x4008ebe	    0x48833d000000	               cmp qword [0x04008ec6], 0	      7293	ldlang.c	FUNCTION_163	IF_12
0x4008ec6	     0xf84d0000000	                            je 0x4008f9c	      7293	ldlang.c	FUNCTION_163	IF_12
0x4008ecc	    0x48833d000000	               cmp qword [0x04008ed4], 0	      1995	ldlang.c	FUNCTION_51	IF_1
0x4008ed4	     0xf84c2000000	                            je 0x4008f9c	      1995	ldlang.c	FUNCTION_51	IF_1
0x4008eda	      0xba05000000	                              mov edx, 5	      1998	ldlang.c	FUNCTION_51	CALL_2
0x4008edf	      0xbe00000000	                              mov esi, 0	      1998	ldlang.c	FUNCTION_51	CALL_2
0x4008ee4	      0xbf00000000	                              mov edi, 0	      1998	ldlang.c	FUNCTION_51	CALL_2
0x4008ee9	      0xe800000000	                          call 0x4008eee	      1998	ldlang.c	FUNCTION_51	CALL_2
0x4008eee	          0x4889c7	                            mov rdi, rax	      1998	ldlang.c	FUNCTION_51	CALL_2
0x4008ef1	      0xb800000000	                              mov eax, 0	      1998	ldlang.c	FUNCTION_51	CALL_2
0x4008ef6	      0xe800000000	                          call 0x4008efb	      1998	ldlang.c	FUNCTION_51	CALL_2
0x4008efb	    0x488b2d000000	            mov rbp, qword [0x04008f02] 	      2000	ldlang.c	FUNCTION_51	FOR_1
0x4008f02	          0x4885ed	                           test rbp, rbp	      2000	ldlang.c	FUNCTION_51	FOR_1
0x4008f05	     0xf8491000000	                            je 0x4008f9c	      2000	ldlang.c	FUNCTION_51	FOR_1
0x4008f0b	    0x49c7c4ffffff	             mov r12, 0xffffffffffffffff	      2005	ldlang.c	FUNCTION_51	FOR_1	CALL_4
0x4008f12	        0x488b7508	                mov rsi, qword [rbp + 8]	      2004	ldlang.c	FUNCTION_51	FOR_1	CALL_3
0x4008f16	      0xbf00000000	                              mov edi, 0	      2004	ldlang.c	FUNCTION_51	FOR_1	CALL_3
0x4008f1b	      0xb800000000	                              mov eax, 0	      2004	ldlang.c	FUNCTION_51	FOR_1	CALL_3
0x4008f20	      0xe800000000	                          call 0x4008f25	      2004	ldlang.c	FUNCTION_51	FOR_1	CALL_3
0x4008f25	        0x488b7d08	                mov rdi, qword [rbp + 8]	      2005	ldlang.c	FUNCTION_51	FOR_1	CALL_4
0x4008f29	      0xb800000000	                              mov eax, 0	      2005	ldlang.c	FUNCTION_51	FOR_1	CALL_4
0x4008f2e	          0x4c89e1	                            mov rcx, r12	      2005	ldlang.c	FUNCTION_51	FOR_1	CALL_4
0x4008f31	            0xf2ae	              repne scasb al, byte [rdi]	      2005	ldlang.c	FUNCTION_51	FOR_1	CALL_4
0x4008f33	          0x4889c8	                            mov rax, rcx	      2005	ldlang.c	FUNCTION_51	FOR_1	CALL_4
0x4008f36	          0x48f7d0	                                 not rax	      2005	ldlang.c	FUNCTION_51	FOR_1	CALL_4
0x4008f39	        0x488d58ff	                      lea rbx, [rax - 1]	      2005	ldlang.c	FUNCTION_51	FOR_1	CALL_4
0x4008f3d	        0x4883fb1c	                           cmp rbx, 0x1c	      2007	ldlang.c	FUNCTION_51	FOR_1	IF_2
0x4008f41	            0x760c	                           jbe 0x4008f4f	      2007	ldlang.c	FUNCTION_51	FOR_1	IF_2
0x4008f43	      0xe800000000	                          call 0x4008f48	      2009	ldlang.c	FUNCTION_51	FOR_1	IF_2	CALL_5
0x4008f48	      0xbb00000000	                              mov ebx, 0	      2010	ldlang.c	FUNCTION_51	FOR_1	IF_2
0x4008f4d	            0xeb06	                           jmp 0x4008f55	      2010	ldlang.c	FUNCTION_51	FOR_1	IF_2
0x4008f4f	        0x4883fb1d	                           cmp rbx, 0x1d	      2012	ldlang.c	FUNCTION_51	FOR_1	WHILE_1
0x4008f53	            0x770f	                            ja 0x4008f64	      2012	ldlang.c	FUNCTION_51	FOR_1	WHILE_1
0x4008f55	      0xe800000000	                          call 0x4008f5a	      2014	ldlang.c	FUNCTION_51	FOR_1	WHILE_1	CALL_6
0x4008f5a	        0x4883c301	                              add rbx, 1	      2015	ldlang.c	FUNCTION_51	FOR_1	WHILE_1
0x4008f5e	        0x4883fb1d	                           cmp rbx, 0x1d	      2012	ldlang.c	FUNCTION_51	FOR_1	WHILE_1
0x4008f62	            0x76f1	                           jbe 0x4008f55	      2012	ldlang.c	FUNCTION_51	FOR_1	WHILE_1
0x4008f64	        0x488b7510	            mov rsi, qword [rbp + 0x10] 	      2018	ldlang.c	FUNCTION_51	FOR_1	IF_3
0x4008f68	          0x4885f6	                           test rsi, rsi	      2018	ldlang.c	FUNCTION_51	FOR_1	IF_3
0x4008f6b	            0x740f	                            je 0x4008f7c	      2018	ldlang.c	FUNCTION_51	FOR_1	IF_3
0x4008f6d	      0xbf00000000	                              mov edi, 0	      2019	ldlang.c	FUNCTION_51	FOR_1	CALL_7
0x4008f72	      0xb800000000	                              mov eax, 0	      2019	ldlang.c	FUNCTION_51	FOR_1	CALL_7
0x4008f77	      0xe800000000	                          call 0x4008f7c	      2019	ldlang.c	FUNCTION_51	FOR_1	CALL_7
0x4008f7c	        0x488b7518	            mov rsi, qword [rbp + 0x18] 	      2020	ldlang.c	FUNCTION_51	FOR_1	CALL_8
0x4008f80	      0xbf00000000	                              mov edi, 0	      2020	ldlang.c	FUNCTION_51	FOR_1	CALL_8
0x4008f85	      0xb800000000	                              mov eax, 0	      2020	ldlang.c	FUNCTION_51	FOR_1	CALL_8
0x4008f8a	      0xe800000000	                          call 0x4008f8f	      2020	ldlang.c	FUNCTION_51	FOR_1	CALL_8
0x4008f8f	        0x488b6d00	                    mov rbp, qword [rbp]	      2000	ldlang.c	FUNCTION_51	FOR_1
0x4008f93	          0x4885ed	                           test rbp, rbp	      2000	ldlang.c	FUNCTION_51	FOR_1
0x4008f96	     0xf8576ffffff	                           jne 0x4008f12	      2000	ldlang.c	FUNCTION_51	FOR_1
0x4008f9c	      0xe800000000	                          call 0x4008fa1	      7296	ldlang.c	FUNCTION_163	CALL_33
0x4008fa1	    0x488b1d000000	            mov rbx, qword [0x04008fa8] 	      6275	ldlang.c	FUNCTION_135	FOR_1
0x4008fa8	          0x4885db	                           test rbx, rbx	      6275	ldlang.c	FUNCTION_135	FOR_1
0x4008fab	     0xf8490010000	                            je 0x4009141	      6275	ldlang.c	FUNCTION_135	FOR_1
0x4008fb1	        0xf6434920	           test byte [rbx + 0x49], 0x20 	      6279	ldlang.c	FUNCTION_135	FOR_1	IF_1
0x4008fb5	     0xf8579010000	                           jne 0x4009134	      6279	ldlang.c	FUNCTION_135	FOR_1	IF_1
0x4008fbb	        0x488b6b20	            mov rbp, qword [rbx + 0x20] 	      6282	ldlang.c	FUNCTION_135	FOR_1
0x4008fbf	    0x8b1500000000	            mov edx, dword [0x04008fc5] 	      6284	ldlang.c	FUNCTION_135	FOR_1	CALL_1
0x4008fc5	    0x488b35000000	            mov rsi, qword [0x04008fcc] 	      6284	ldlang.c	FUNCTION_135	FOR_1	CALL_1
0x4008fcc	          0x4889ef	                            mov rdi, rbp	      6284	ldlang.c	FUNCTION_135	FOR_1	CALL_1
0x4008fcf	      0xe800000000	                          call 0x4008fd4	      6284	ldlang.c	FUNCTION_135	FOR_1	CALL_1
0x4008fd4	          0x4989c4	                            mov r12, rax	      6284	ldlang.c	FUNCTION_135	FOR_1	CALL_1
0x4008fd7	     0xfb605000000	           movzx eax, byte [0x04008fde] 	      6293	ldlang.c	FUNCTION_135	FOR_1	IF_2	CALL_2
0x4008fde	          0x83e003	                              and eax, 3	      6293	ldlang.c	FUNCTION_135	FOR_1	IF_2	CALL_2
0x4008fe1	            0x3c02	                               cmp al, 2	      6293	ldlang.c	FUNCTION_135	FOR_1	IF_2	CALL_2
0x4008fe3	            0x7409	                            je 0x4008fee	      6293	ldlang.c	FUNCTION_135	FOR_1	IF_2	CALL_2
0x4008fe5	    0xf60500000000	               test byte [0x04008fec], 8	      6294	ldlang.c	FUNCTION_135	FOR_1	IF_2
0x4008fec	            0x746b	                            je 0x4009059	      6294	ldlang.c	FUNCTION_135	FOR_1	IF_2
0x4008fee	          0x4d85e4	                           test r12, r12	      6295	ldlang.c	FUNCTION_135	FOR_1	IF_2
0x4008ff1	     0xf84ca150000	                            je 0x400a5c1	      6295	ldlang.c	FUNCTION_135	FOR_1	IF_2
0x4008ff7	        0x488b5508	                mov rdx, qword [rbp + 8]	      6296	ldlang.c	FUNCTION_135	FOR_1	IF_2
0x4008ffb	    0x488b05000000	            mov rax, qword [0x04009002] 	      6297	ldlang.c	FUNCTION_135	FOR_1	IF_2
0x4009002	        0x488b4008	                mov rax, qword [rax + 8]	      6297	ldlang.c	FUNCTION_135	FOR_1	IF_2
0x4009006	          0x8b4008	                mov eax, dword [rax + 8]	      6296	ldlang.c	FUNCTION_135	FOR_1	IF_2
0x4009009	          0x394208	                cmp dword [rdx + 8], eax	      6296	ldlang.c	FUNCTION_135	FOR_1	IF_2
0x400900c	     0xf85be150000	                           jne 0x400a5d0	      6296	ldlang.c	FUNCTION_135	FOR_1	IF_2
0x4009012	      0xe99d000000	                           jmp 0x40090b4	      6296	ldlang.c	FUNCTION_135	FOR_1	IF_2
0x4009017	    0x4c8b2d000000	            mov r13, qword [0x0400901e] 	      6303	ldlang.c	FUNCTION_135	FOR_1	IF_2
0x400901e	        0x498b4508	                mov rax, qword [r13 + 8]	      6300	ldlang.c	FUNCTION_135	FOR_1	IF_2	CALL_4
0x4009022	          0x4c8b38	                    mov r15, qword [rax]	      6300	ldlang.c	FUNCTION_135	FOR_1	IF_2	CALL_4
0x4009025	        0x488b4508	                mov rax, qword [rbp + 8]	      6300	ldlang.c	FUNCTION_135	FOR_1	IF_2	CALL_4
0x4009029	          0x4c8b30	                    mov r14, qword [rax]	      6300	ldlang.c	FUNCTION_135	FOR_1	IF_2	CALL_4
0x400902c	      0xba05000000	                              mov edx, 5	      6300	ldlang.c	FUNCTION_135	FOR_1	IF_2	CALL_4
0x4009031	      0xbe00000000	                              mov esi, 0	      6300	ldlang.c	FUNCTION_135	FOR_1	IF_2	CALL_4
0x4009036	      0xbf00000000	                              mov edi, 0	      6300	ldlang.c	FUNCTION_135	FOR_1	IF_2	CALL_4
0x400903b	      0xe800000000	                          call 0x4009040	      6300	ldlang.c	FUNCTION_135	FOR_1	IF_2	CALL_4
0x4009040	          0x4d89e8	                             mov r8, r13	      6300	ldlang.c	FUNCTION_135	FOR_1	IF_2	CALL_4
0x4009043	          0x4c89f9	                            mov rcx, r15	      6300	ldlang.c	FUNCTION_135	FOR_1	IF_2	CALL_4
0x4009046	          0x4889ea	                            mov rdx, rbp	      6300	ldlang.c	FUNCTION_135	FOR_1	IF_2	CALL_4
0x4009049	          0x4c89f6	                            mov rsi, r14	      6300	ldlang.c	FUNCTION_135	FOR_1	IF_2	CALL_4
0x400904c	          0x4889c7	                            mov rdi, rax	      6300	ldlang.c	FUNCTION_135	FOR_1	IF_2	CALL_4
0x400904f	      0xb800000000	                              mov eax, 0	      6300	ldlang.c	FUNCTION_135	FOR_1	IF_2	CALL_4
0x4009054	      0xe800000000	                          call 0x4009059	      6300	ldlang.c	FUNCTION_135	FOR_1	IF_2	CALL_4
0x4009059	          0x4d85e4	                           test r12, r12	      6307	ldlang.c	FUNCTION_135	FOR_1	IF_3
0x400905c	            0x7556	                           jne 0x40090b4	      6307	ldlang.c	FUNCTION_135	FOR_1	IF_3
0x400905e	    0x833d00000000	               cmp dword [0x04009065], 0	      6309	ldlang.c	FUNCTION_135	FOR_1	IF_3	IF_4
0x4009065	     0xf84c9000000	                            je 0x4009134	      6309	ldlang.c	FUNCTION_135	FOR_1	IF_3	IF_4
0x400906b	    0x488b3d000000	            mov rdi, qword [0x04009072] 	      6310	ldlang.c	FUNCTION_135	FOR_1	IF_3	IF_4	CALL_6
0x4009072	      0xe800000000	                          call 0x4009077	      6310	ldlang.c	FUNCTION_135	FOR_1	IF_3	IF_4	CALL_6
0x4009077	          0x4989c5	                            mov r13, rax	      6310	ldlang.c	FUNCTION_135	FOR_1	IF_3	IF_4	CALL_6
0x400907a	          0x4889ef	                            mov rdi, rbp	      6310	ldlang.c	FUNCTION_135	FOR_1	IF_3	IF_4	CALL_6
0x400907d	      0xe800000000	                          call 0x4009082	      6310	ldlang.c	FUNCTION_135	FOR_1	IF_3	IF_4	CALL_6
0x4009082	          0x4989c4	                            mov r12, rax	      6310	ldlang.c	FUNCTION_135	FOR_1	IF_3	IF_4	CALL_6
0x4009085	      0xba05000000	                              mov edx, 5	      6310	ldlang.c	FUNCTION_135	FOR_1	IF_3	IF_4	CALL_6
0x400908a	      0xbe00000000	                              mov esi, 0	      6310	ldlang.c	FUNCTION_135	FOR_1	IF_3	IF_4	CALL_6
0x400908f	      0xbf00000000	                              mov edi, 0	      6310	ldlang.c	FUNCTION_135	FOR_1	IF_3	IF_4	CALL_6
0x4009094	      0xe800000000	                          call 0x4009099	      6310	ldlang.c	FUNCTION_135	FOR_1	IF_3	IF_4	CALL_6
0x4009099	          0x4c89e9	                            mov rcx, r13	      6310	ldlang.c	FUNCTION_135	FOR_1	IF_3	IF_4	CALL_6
0x400909c	          0x4889ea	                            mov rdx, rbp	      6310	ldlang.c	FUNCTION_135	FOR_1	IF_3	IF_4	CALL_6
0x400909f	          0x4c89e6	                            mov rsi, r12	      6310	ldlang.c	FUNCTION_135	FOR_1	IF_3	IF_4	CALL_6
0x40090a2	          0x4889c7	                            mov rdi, rax	      6310	ldlang.c	FUNCTION_135	FOR_1	IF_3	IF_4	CALL_6
0x40090a5	      0xb800000000	                              mov eax, 0	      6310	ldlang.c	FUNCTION_135	FOR_1	IF_3	IF_4	CALL_6
0x40090aa	      0xe800000000	                          call 0x40090af	      6310	ldlang.c	FUNCTION_135	FOR_1	IF_3	IF_4	CALL_6
0x40090af	      0xe980000000	                           jmp 0x4009134	      6310	ldlang.c	FUNCTION_135	FOR_1	IF_3	IF_4	CALL_6
0x40090b4	    0x83bda0000000	               cmp dword [rbp + 0xa0], 0	      6315	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5
0x40090bb	            0x7477	                            je 0x4009134	      6315	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5
0x40090bd	    0x41bc00000000	                             mov r12d, 0	      6320	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5
0x40090c3	    0x833d00000000	               cmp dword [0x040090ca], 0	      6327	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_6
0x40090ca	            0x750d	                           jne 0x40090d9	      6327	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_6
0x40090cc	      0xbf00000000	                              mov edi, 0	      6328	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	CALL_9
0x40090d1	      0xe800000000	                          call 0x40090d6	      6328	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	CALL_9
0x40090d6	          0x4989c4	                            mov r12, rax	      6328	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	CALL_9
0x40090d9	    0x488b05000000	            mov rax, qword [0x040090e0] 	      6329	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_7
0x40090e0	        0x488b4008	                mov rax, qword [rax + 8]	      6329	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_7
0x40090e4	      0xbe00000000	                              mov esi, 0	      6329	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_7
0x40090e9	          0x4889ef	                            mov rdi, rbp	      6329	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_7
0x40090ec	    0xff9040010000	                call qword [rax + 0x140]	      6329	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_7
0x40090f2	            0x85c0	                           test eax, eax	      6329	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_7
0x40090f4	            0x752d	                           jne 0x4009123	      6329	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_7
0x40090f6	    0x833d00000000	               cmp dword [0x040090fd], 0	      6331	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_7	IF_8
0x40090fd	            0x742d	                            je 0x400912c	      6331	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_7	IF_8
0x40090ff	      0xba05000000	                              mov edx, 5	      6332	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_7	IF_8	CALL_11
0x4009104	      0xbe00000000	                              mov esi, 0	      6332	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_7	IF_8	CALL_11
0x4009109	      0xbf00000000	                              mov edi, 0	      6332	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_7	IF_8	CALL_11
0x400910e	      0xe800000000	                          call 0x4009113	      6332	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_7	IF_8	CALL_11
0x4009113	          0x4889ee	                            mov rsi, rbp	      6332	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_7	IF_8	CALL_11
0x4009116	          0x4889c7	                            mov rdi, rax	      6332	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_7	IF_8	CALL_11
0x4009119	      0xb800000000	                              mov eax, 0	      6332	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_7	IF_8	CALL_11
0x400911e	      0xe800000000	                          call 0x4009123	      6332	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_7	IF_8	CALL_11
0x4009123	    0x833d00000000	               cmp dword [0x0400912a], 0	      6335	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_9
0x400912a	            0x7508	                           jne 0x4009134	      6335	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	IF_9
0x400912c	          0x4c89e7	                            mov rdi, r12	      6336	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	CALL_12
0x400912f	      0xe800000000	                          call 0x4009134	      6336	ldlang.c	FUNCTION_135	FOR_1	ELSE_1	IF_5	CALL_12
0x4009134	        0x488b5b30	            mov rbx, qword [rbx + 0x30] 	      6275	ldlang.c	FUNCTION_135	FOR_1
0x4009138	          0x4885db	                           test rbx, rbx	      6275	ldlang.c	FUNCTION_135	FOR_1
0x400913b	     0xf8570feffff	                           jne 0x4008fb1	      6275	ldlang.c	FUNCTION_135	FOR_1
0x4009141	    0x48833d000000	               cmp qword [0x04009149], 0	      7306	ldlang.c	FUNCTION_163	IF_13
0x4009149	     0xf8407010000	                            je 0x4009256	      7306	ldlang.c	FUNCTION_163	IF_13
0x400914f	    0x4c8b2d000000	            mov r13, qword [0x04009156] 	      8580	ldlang.c	FUNCTION_201
0x4009156	          0x4d85ed	                           test r13, r13	      8580	ldlang.c	FUNCTION_201
0x4009159	     0xf84ba000000	                            je 0x4009219	      8580	ldlang.c	FUNCTION_201
0x400915f	      0xbd00000000	                              mov ebp, 0	      8580	ldlang.c	FUNCTION_201
0x4009164	        0x498b7d20	            mov rdi, qword [r13 + 0x20] 	      8582	ldlang.c	FUNCTION_201	FUNCTION_1	CALL_1
0x4009168	      0xbe00000000	                              mov esi, 0	      8582	ldlang.c	FUNCTION_201	FUNCTION_1	CALL_1
0x400916d	      0xe800000000	                          call 0x4009172	      8582	ldlang.c	FUNCTION_201	FUNCTION_1	CALL_1
0x4009172	          0x4989c6	                            mov r14, rax	      8582	ldlang.c	FUNCTION_201	FUNCTION_1	CALL_1
0x4009175	          0x4885c0	                           test rax, rax	      8586	ldlang.c	FUNCTION_201	FUNCTION_1	IF_1
0x4009178	     0xf848c000000	                            je 0x400920a	      8586	ldlang.c	FUNCTION_201	FUNCTION_1	IF_1
0x400917e	        0x4c8b6038	            mov r12, qword [rax + 0x38] 	      8589	ldlang.c	FUNCTION_201	FUNCTION_1
0x4009182	          0x4c89e7	                            mov rdi, r12	      8590	ldlang.c	FUNCTION_201	FUNCTION_1	CALL_2
0x4009185	      0xe800000000	                          call 0x400918a	      8590	ldlang.c	FUNCTION_201	FUNCTION_1	CALL_2
0x400918a	          0x4889c3	                            mov rbx, rax	      8590	ldlang.c	FUNCTION_201	FUNCTION_1	CALL_2
0x400918d	        0x498b7d20	            mov rdi, qword [r13 + 0x20] 	      8591	ldlang.c	FUNCTION_201	FUNCTION_1	IF_2	CALL_3
0x4009191	          0x4d89e0	                             mov r8, r12	      8591	ldlang.c	FUNCTION_201	FUNCTION_1	IF_2	CALL_3
0x4009194	      0xb900000000	                              mov ecx, 0	      8591	ldlang.c	FUNCTION_201	FUNCTION_1	IF_2	CALL_3
0x4009199	          0x4889c2	                            mov rdx, rax	      8591	ldlang.c	FUNCTION_201	FUNCTION_1	IF_2	CALL_3
0x400919c	          0x4c89f6	                            mov rsi, r14	      8591	ldlang.c	FUNCTION_201	FUNCTION_1	IF_2	CALL_3
0x400919f	      0xe800000000	                          call 0x40091a4	      8591	ldlang.c	FUNCTION_201	FUNCTION_1	IF_2	CALL_3
0x40091a4	            0x85c0	                           test eax, eax	      8591	ldlang.c	FUNCTION_201	FUNCTION_1	IF_2	CALL_3
0x40091a6	            0x7524	                           jne 0x40091cc	      8591	ldlang.c	FUNCTION_201	FUNCTION_1	IF_2	CALL_3
0x40091a8	      0xba05000000	                              mov edx, 5	      8592	ldlang.c	FUNCTION_201	FUNCTION_1	CALL_5
0x40091ad	      0xbe00000000	                              mov esi, 0	      8592	ldlang.c	FUNCTION_201	FUNCTION_1	CALL_5
0x40091b2	      0xbf00000000	                              mov edi, 0	      8592	ldlang.c	FUNCTION_201	FUNCTION_1	CALL_5
0x40091b7	      0xe800000000	                          call 0x40091bc	      8592	ldlang.c	FUNCTION_201	FUNCTION_1	CALL_5
0x40091bc	          0x4c89f6	                            mov rsi, r14	      8592	ldlang.c	FUNCTION_201	FUNCTION_1	CALL_5
0x40091bf	          0x4889c7	                            mov rdi, rax	      8592	ldlang.c	FUNCTION_201	FUNCTION_1	CALL_5
0x40091c2	      0xb800000000	                              mov eax, 0	      8592	ldlang.c	FUNCTION_201	FUNCTION_1	CALL_5
0x40091c7	      0xe800000000	                          call 0x40091cc	      8592	ldlang.c	FUNCTION_201	FUNCTION_1	CALL_5
0x40091cc	          0x4901dc	                            add r12, rbx	      8595	ldlang.c	FUNCTION_201	FUNCTION_1	WHILE_1
0x40091cf	          0x4c39e3	                            cmp rbx, r12	      8595	ldlang.c	FUNCTION_201	FUNCTION_1	WHILE_1
0x40091d2	            0x732e	                           jae 0x4009202	      8595	ldlang.c	FUNCTION_201	FUNCTION_1	WHILE_1
0x40091d4	      0xb900000000	                              mov ecx, 0	      8597	ldlang.c	FUNCTION_201	FUNCTION_1	WHILE_1	CALL_6
0x40091d9	      0xba00000000	                              mov edx, 0	      8597	ldlang.c	FUNCTION_201	FUNCTION_1	WHILE_1	CALL_6
0x40091de	          0x4889de	                            mov rsi, rbx	      8597	ldlang.c	FUNCTION_201	FUNCTION_1	WHILE_1	CALL_6
0x40091e1	          0x4889ef	                            mov rdi, rbp	      8597	ldlang.c	FUNCTION_201	FUNCTION_1	WHILE_1	CALL_6
0x40091e4	      0xe800000000	                          call 0x40091e9	      8597	ldlang.c	FUNCTION_201	FUNCTION_1	WHILE_1	CALL_6
0x40091e9	          0x4889c5	                            mov rbp, rax	      8597	ldlang.c	FUNCTION_201	FUNCTION_1	WHILE_1	CALL_6
0x40091ec	      0xbe00000000	                              mov esi, 0	      8598	ldlang.c	FUNCTION_201	FUNCTION_1	WHILE_1
0x40091f1	          0x4889df	                            mov rdi, rbx	      8598	ldlang.c	FUNCTION_201	FUNCTION_1	WHILE_1
0x40091f4	      0xe800000000	                          call 0x40091f9	      8598	ldlang.c	FUNCTION_201	FUNCTION_1	WHILE_1
0x40091f9	        0x488d5801	                      lea rbx, [rax + 1]	      8598	ldlang.c	FUNCTION_201	FUNCTION_1	WHILE_1
0x40091fd	          0x4c39e3	                            cmp rbx, r12	      8595	ldlang.c	FUNCTION_201	FUNCTION_1	WHILE_1
0x4009200	            0x72d2	                            jb 0x40091d4	      8595	ldlang.c	FUNCTION_201	FUNCTION_1	WHILE_1
0x4009202	    0x41814e200080	         or dword [r14 + 0x20], 0x208000	      8604	ldlang.c	FUNCTION_201	FUNCTION_1
0x400920a	        0x4d8b6d30	            mov r13, qword [r13 + 0x30] 	      8580	ldlang.c	FUNCTION_201
0x400920e	          0x4d85ed	                           test r13, r13	      8580	ldlang.c	FUNCTION_201
0x4009211	     0xf854dffffff	                           jne 0x4009164	      8580	ldlang.c	FUNCTION_201
0x4009217	            0xeb05	                           jmp 0x400921e	      8580	ldlang.c	FUNCTION_201
0x4009219	      0xbd00000000	                              mov ebp, 0	      8578	ldlang.c	FUNCTION_201
0x400921e	      0xb900000000	                              mov ecx, 0	      8607	ldlang.c	FUNCTION_201	CALL_1
0x4009223	      0xba00000000	                              mov edx, 0	      8607	ldlang.c	FUNCTION_201	CALL_1
0x4009228	      0xbe00000000	                              mov esi, 0	      8607	ldlang.c	FUNCTION_201	CALL_1
0x400922d	      0xbf00000000	                              mov edi, 0	      8607	ldlang.c	FUNCTION_201	CALL_1
0x4009232	      0xe800000000	                          call 0x4009237	      8607	ldlang.c	FUNCTION_201	CALL_1
0x4009237	          0x4889c6	                            mov rsi, rax	      8608	ldlang.c	FUNCTION_201	CALL_2
0x400923a	          0x4889ef	                            mov rdi, rbp	      8608	ldlang.c	FUNCTION_201	CALL_2
0x400923d	      0xe800000000	                          call 0x4009242	      8608	ldlang.c	FUNCTION_201	CALL_2
0x4009242	      0xba00000000	                              mov edx, 0	      8608	ldlang.c	FUNCTION_201	CALL_2
0x4009247	          0x4889c6	                            mov rsi, rax	      8608	ldlang.c	FUNCTION_201	CALL_2
0x400924a	    0x488b3d000000	            mov rdi, qword [0x04009251] 	      8608	ldlang.c	FUNCTION_201	CALL_2
0x4009251	      0xe800000000	                          call 0x4009256	      8608	ldlang.c	FUNCTION_201	CALL_2
0x4009256	      0xe800000000	                          call 0x400925b	      7311	ldlang.c	FUNCTION_163	CALL_36
0x400925b	    0x833d00000000	               cmp dword [0x04009262], 0	      7316	ldlang.c	FUNCTION_163	IF_14
0x4009262	     0xf84aa000000	                            je 0x4009312	      7316	ldlang.c	FUNCTION_163	IF_14
0x4009268	    0x488b05000000	            mov rax, qword [0x0400926f] 	      6038	ldlang.c	FUNCTION_126
0x400926f	        0x488b4008	                mov rax, qword [rax + 8]	      6038	ldlang.c	FUNCTION_126
0x4009273	      0x440fb6681c	          movzx r13d, byte [rax + 0x1c] 	      6038	ldlang.c	FUNCTION_126
0x4009278	    0x488b05000000	            mov rax, qword [0x0400927f] 	      6040	ldlang.c	FUNCTION_126	FOR_1
0x400927f	        0x48890424	                    mov qword [rsp], rax	      6040	ldlang.c	FUNCTION_126	FOR_1
0x4009283	          0x4885c0	                           test rax, rax	      6040	ldlang.c	FUNCTION_126	FOR_1
0x4009286	     0xf8486000000	                            je 0x4009312	      6040	ldlang.c	FUNCTION_126	FOR_1
0x400928c	        0x4180fd01	                             cmp r13b, 1	      6040	ldlang.c	FUNCTION_126	FOR_1
0x4009290	          0x4d19ff	                            sbb r15, r15	      6040	ldlang.c	FUNCTION_126	FOR_1
0x4009293	        0x4983c702	                              add r15, 2	      6040	ldlang.c	FUNCTION_126	FOR_1
0x4009297	    0x49c7c6ffffff	             mov r14, 0xffffffffffffffff	      6051	ldlang.c	FUNCTION_126	FOR_1	FOR_2	IF_2	CALL_3
0x400929e	        0x488b0424	                    mov rax, qword [rsp]	      6041	ldlang.c	FUNCTION_126	FOR_1	FOR_2
0x40092a2	    0x488b98900000	            mov rbx, qword [rax + 0x90] 	      6041	ldlang.c	FUNCTION_126	FOR_1	FOR_2
0x40092a9	          0x4885db	                           test rbx, rbx	      6041	ldlang.c	FUNCTION_126	FOR_1	FOR_2
0x40092ac	            0x7450	                            je 0x40092fe	      6041	ldlang.c	FUNCTION_126	FOR_1	FOR_2
0x40092ae	          0x4c8b23	                    mov r12, qword [rbx]	      6044	ldlang.c	FUNCTION_126	FOR_1	FOR_2
0x40092b1	      0x410fb60424	                   movzx eax, byte [r12]	      6046	ldlang.c	FUNCTION_126	FOR_1	FOR_2	FOR_3
0x40092b6	            0x84c0	                             test al, al	      6046	ldlang.c	FUNCTION_126	FOR_1	FOR_2	FOR_3
0x40092b8	     0xf8421130000	                            je 0x400a5df	      6046	ldlang.c	FUNCTION_126	FOR_1	FOR_2	FOR_3
0x40092be	           0xfb6d0	                           movzx edx, al	      6047	ldlang.c	FUNCTION_126	FOR_1	FOR_2	FOR_3	IF_1	CALL_1
0x40092c1	    0xf68412000000	            test byte [rdx + rdx], 0x8c 	      6047	ldlang.c	FUNCTION_126	FOR_1	FOR_2	FOR_3	IF_1	CALL_1
0x40092c9	            0x7504	                           jne 0x40092cf	      6047	ldlang.c	FUNCTION_126	FOR_1	FOR_2	FOR_3	IF_1	CALL_1
0x40092cb	            0x3c5f	                            cmp al, 0x5f	      6047	ldlang.c	FUNCTION_126	FOR_1	FOR_2	FOR_3	IF_1	CALL_1
0x40092cd	            0x7526	                           jne 0x40092f5	      6047	ldlang.c	FUNCTION_126	FOR_1	FOR_2	FOR_3	IF_1	CALL_1
0x40092cf	          0x4c89e2	                            mov rdx, r12	      6047	ldlang.c	FUNCTION_126	FOR_1	FOR_2	FOR_3	IF_1	CALL_1
0x40092d2	            0xeb11	                           jmp 0x40092e5	      6047	ldlang.c	FUNCTION_126	FOR_1	FOR_2	FOR_3	IF_1	CALL_1
0x40092d4	           0xfb6c8	                           movzx ecx, al	      6047	ldlang.c	FUNCTION_126	FOR_1	FOR_2	FOR_3	IF_1	CALL_1
0x40092d7	    0xf68409000000	            test byte [rcx + rcx], 0x8c 	      6047	ldlang.c	FUNCTION_126	FOR_1	FOR_2	FOR_3	IF_1	CALL_1
0x40092df	            0x7504	                           jne 0x40092e5	      6047	ldlang.c	FUNCTION_126	FOR_1	FOR_2	FOR_3	IF_1	CALL_1
0x40092e1	            0x3c5f	                            cmp al, 0x5f	      6047	ldlang.c	FUNCTION_126	FOR_1	FOR_2	FOR_3	IF_1	CALL_1
0x40092e3	            0x7510	                           jne 0x40092f5	      6047	ldlang.c	FUNCTION_126	FOR_1	FOR_2	FOR_3	IF_1	CALL_1
0x40092e5	        0x4883c201	                              add rdx, 1	      6046	ldlang.c	FUNCTION_126	FOR_1	FOR_2	FOR_3
0x40092e9	           0xfb602	                   movzx eax, byte [rdx]	      6046	ldlang.c	FUNCTION_126	FOR_1	FOR_2	FOR_3
0x40092ec	            0x84c0	                             test al, al	      6046	ldlang.c	FUNCTION_126	FOR_1	FOR_2	FOR_3
0x40092ee	            0x75e4	                           jne 0x40092d4	      6046	ldlang.c	FUNCTION_126	FOR_1	FOR_2	FOR_3
0x40092f0	      0xe9ea120000	                           jmp 0x400a5df	      6046	ldlang.c	FUNCTION_126	FOR_1	FOR_2	FOR_3
0x40092f5	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      6041	ldlang.c	FUNCTION_126	FOR_1	FOR_2
0x40092f9	          0x4885db	                           test rbx, rbx	      6041	ldlang.c	FUNCTION_126	FOR_1	FOR_2
0x40092fc	            0x75b0	                           jne 0x40092ae	      6041	ldlang.c	FUNCTION_126	FOR_1	FOR_2
0x40092fe	        0x488b0424	                    mov rax, qword [rsp]	      6040	ldlang.c	FUNCTION_126	FOR_1
0x4009302	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	      6040	ldlang.c	FUNCTION_126	FOR_1
0x4009309	        0x48890424	                    mov qword [rsp], rax	      6040	ldlang.c	FUNCTION_126	FOR_1
0x400930d	          0x4885c0	                           test rax, rax	      6040	ldlang.c	FUNCTION_126	FOR_1
0x4009310	            0x758c	                           jne 0x400929e	      6040	ldlang.c	FUNCTION_126	FOR_1
0x4009312	      0xbf01000000	                              mov edi, 1	      7321	ldlang.c	FUNCTION_163	CALL_38
0x4009317	      0xe800000000	                          call 0x400931c	      7321	ldlang.c	FUNCTION_163	CALL_38
0x400931c	    0x488b1d000000	            mov rbx, qword [0x04009323] 	      8617	ldlang.c	FUNCTION_202
0x4009323	          0x4885db	                           test rbx, rbx	      8619	ldlang.c	FUNCTION_202	FOR_1
0x4009326	     0xf84a7000000	                            je 0x40093d3	      8619	ldlang.c	FUNCTION_202	FOR_1
0x400932c	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      8621	ldlang.c	FUNCTION_202	FOR_1	IF_1
0x4009330	          0x4885ff	                           test rdi, rdi	      8621	ldlang.c	FUNCTION_202	FOR_1	IF_1
0x4009333	            0x7446	                            je 0x400937b	      8621	ldlang.c	FUNCTION_202	FOR_1	IF_1
0x4009335	      0xe800000000	                          call 0x400933a	      8623	ldlang.c	FUNCTION_202	FOR_1	IF_1	CALL_1
0x400933a	    0x833d00000000	               cmp dword [0x04009341], 0	      8624	ldlang.c	FUNCTION_202	FOR_1	IF_1	IF_2
0x4009341	            0x7411	                            je 0x4009354	      8624	ldlang.c	FUNCTION_202	FOR_1	IF_1	IF_2
0x4009343	    0x488b05000000	            mov rax, qword [0x0400934a] 	      8626	ldlang.c	FUNCTION_202	FOR_1	IF_1	IF_2
0x400934a	        0x48894320	             mov qword [rbx + 0x20], rax	      8626	ldlang.c	FUNCTION_202	FOR_1	IF_1	IF_2
0x400934e	        0x48894338	             mov qword [rbx + 0x38], rax	      8627	ldlang.c	FUNCTION_202	FOR_1	IF_1	IF_2
0x4009352	            0xeb27	                           jmp 0x400937b	      8627	ldlang.c	FUNCTION_202	FOR_1	IF_1	IF_2
0x4009354	          0x488b2b	                    mov rbp, qword [rbx]	      8630	ldlang.c	FUNCTION_202	FOR_1	IF_1	ELSE_1	CALL_3
0x4009357	      0xba05000000	                              mov edx, 5	      8630	ldlang.c	FUNCTION_202	FOR_1	IF_1	ELSE_1	CALL_3
0x400935c	      0xbe00000000	                              mov esi, 0	      8630	ldlang.c	FUNCTION_202	FOR_1	IF_1	ELSE_1	CALL_3
0x4009361	      0xbf00000000	                              mov edi, 0	      8630	ldlang.c	FUNCTION_202	FOR_1	IF_1	ELSE_1	CALL_3
0x4009366	      0xe800000000	                          call 0x400936b	      8630	ldlang.c	FUNCTION_202	FOR_1	IF_1	ELSE_1	CALL_3
0x400936b	          0x4889ee	                            mov rsi, rbp	      8630	ldlang.c	FUNCTION_202	FOR_1	IF_1	ELSE_1	CALL_3
0x400936e	          0x4889c7	                            mov rdi, rax	      8630	ldlang.c	FUNCTION_202	FOR_1	IF_1	ELSE_1	CALL_3
0x4009371	      0xb800000000	                              mov eax, 0	      8630	ldlang.c	FUNCTION_202	FOR_1	IF_1	ELSE_1	CALL_3
0x4009376	      0xe800000000	                          call 0x400937b	      8630	ldlang.c	FUNCTION_202	FOR_1	IF_1	ELSE_1	CALL_3
0x400937b	        0x488b7b30	            mov rdi, qword [rbx + 0x30] 	      8633	ldlang.c	FUNCTION_202	FOR_1	IF_3
0x400937f	          0x4885ff	                           test rdi, rdi	      8633	ldlang.c	FUNCTION_202	FOR_1	IF_3
0x4009382	            0x7442	                            je 0x40093c6	      8633	ldlang.c	FUNCTION_202	FOR_1	IF_3
0x4009384	      0xe800000000	                          call 0x4009389	      8635	ldlang.c	FUNCTION_202	FOR_1	IF_3	CALL_4
0x4009389	    0x833d00000000	               cmp dword [0x04009390], 0	      8636	ldlang.c	FUNCTION_202	FOR_1	IF_3	IF_4
0x4009390	            0x740d	                            je 0x400939f	      8636	ldlang.c	FUNCTION_202	FOR_1	IF_3	IF_4
0x4009392	    0x488b05000000	            mov rax, qword [0x04009399] 	      8637	ldlang.c	FUNCTION_202	FOR_1	IF_3	IF_4
0x4009399	        0x48894328	             mov qword [rbx + 0x28], rax	      8637	ldlang.c	FUNCTION_202	FOR_1	IF_3	IF_4
0x400939d	            0xeb27	                           jmp 0x40093c6	      8637	ldlang.c	FUNCTION_202	FOR_1	IF_3	IF_4
0x400939f	          0x488b2b	                    mov rbp, qword [rbx]	      8639	ldlang.c	FUNCTION_202	FOR_1	IF_3	ELSE_2	CALL_6
0x40093a2	      0xba05000000	                              mov edx, 5	      8639	ldlang.c	FUNCTION_202	FOR_1	IF_3	ELSE_2	CALL_6
0x40093a7	      0xbe00000000	                              mov esi, 0	      8639	ldlang.c	FUNCTION_202	FOR_1	IF_3	ELSE_2	CALL_6
0x40093ac	      0xbf00000000	                              mov edi, 0	      8639	ldlang.c	FUNCTION_202	FOR_1	IF_3	ELSE_2	CALL_6
0x40093b1	      0xe800000000	                          call 0x40093b6	      8639	ldlang.c	FUNCTION_202	FOR_1	IF_3	ELSE_2	CALL_6
0x40093b6	          0x4889ee	                            mov rsi, rbp	      8639	ldlang.c	FUNCTION_202	FOR_1	IF_3	ELSE_2	CALL_6
0x40093b9	          0x4889c7	                            mov rdi, rax	      8639	ldlang.c	FUNCTION_202	FOR_1	IF_3	ELSE_2	CALL_6
0x40093bc	      0xb800000000	                              mov eax, 0	      8639	ldlang.c	FUNCTION_202	FOR_1	IF_3	ELSE_2	CALL_6
0x40093c1	      0xe800000000	                          call 0x40093c6	      8639	ldlang.c	FUNCTION_202	FOR_1	IF_3	ELSE_2	CALL_6
0x40093c6	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      8619	ldlang.c	FUNCTION_202	FOR_1
0x40093ca	          0x4885db	                           test rbx, rbx	      8619	ldlang.c	FUNCTION_202	FOR_1
0x40093cd	     0xf8559ffffff	                           jne 0x400932c	      8619	ldlang.c	FUNCTION_202	FOR_1
0x40093d3	    0xc70500000000	               mov dword [0x040093dd], 0	      7324	ldlang.c	FUNCTION_163
0x40093dd	    0xf60500000000	           test byte [0x040093e4], 0x20 	      6348	ldlang.c	FUNCTION_136	IF_1
0x40093e4	     0xf85d6000000	                           jne 0x40094c0	      6348	ldlang.c	FUNCTION_136	IF_1
0x40093ea	     0xfb605000000	           movzx eax, byte [0x040093f1] 	      6350	ldlang.c	FUNCTION_136	IF_2	CALL_1
0x40093f1	          0x83e003	                              and eax, 3	      6350	ldlang.c	FUNCTION_136	IF_2	CALL_1
0x40093f4	            0x3c02	                               cmp al, 2	      6350	ldlang.c	FUNCTION_136	IF_2	CALL_1
0x40093f6	            0x750d	                           jne 0x4009405	      6350	ldlang.c	FUNCTION_136	IF_2	CALL_1
0x40093f8	    0x833d00000000	               cmp dword [0x040093ff], 0	      6351	ldlang.c	FUNCTION_136	IF_2
0x40093ff	     0xf84bb000000	                            je 0x40094c0	      6351	ldlang.c	FUNCTION_136	IF_2
0x4009405	    0x8b0500000000	            mov eax, dword [0x0400940b] 	      6354	ldlang.c	FUNCTION_136	IF_3
0x400940b	            0x85c0	                           test eax, eax	      6354	ldlang.c	FUNCTION_136	IF_3
0x400940d	            0x751b	                           jne 0x400942a	      6354	ldlang.c	FUNCTION_136	IF_3
0x400940f	      0xba00000000	                              mov edx, 0	      6355	ldlang.c	FUNCTION_136	CALL_2
0x4009414	      0xbe00000000	                              mov esi, 0	      6355	ldlang.c	FUNCTION_136	CALL_2
0x4009419	    0x488b3d000000	            mov rdi, qword [0x04009420] 	      6355	ldlang.c	FUNCTION_136	CALL_2
0x4009420	      0xe800000000	                          call 0x4009425	      6355	ldlang.c	FUNCTION_136	CALL_2
0x4009425	      0xe996000000	                           jmp 0x40094c0	      6355	ldlang.c	FUNCTION_136	CALL_2
0x400942a	          0x83f802	                              cmp eax, 2	      6360	ldlang.c	FUNCTION_136	ELSE_1	IF_4
0x400942d	            0x7545	                           jne 0x4009474	      6360	ldlang.c	FUNCTION_136	ELSE_1	IF_4
0x400942f	    0xc74424500400	               mov dword [rsp + 0x50], 4	      6362	ldlang.c	FUNCTION_136	ELSE_1	IF_4	FOR_1
0x4009437	      0x488d542450	                   lea rdx, [rsp + 0x50]	      6363	ldlang.c	FUNCTION_136	ELSE_1	IF_4	CALL_3
0x400943c	      0xbe00000000	                              mov esi, 0	      6363	ldlang.c	FUNCTION_136	ELSE_1	IF_4	CALL_3
0x4009441	    0x488b3d000000	            mov rdi, qword [0x04009448] 	      6363	ldlang.c	FUNCTION_136	ELSE_1	IF_4	CALL_3
0x4009448	      0xe800000000	                          call 0x400944d	      6363	ldlang.c	FUNCTION_136	ELSE_1	IF_4	CALL_3
0x400944d	        0x8b442450	            mov eax, dword [rsp + 0x50] 	      6362	ldlang.c	FUNCTION_136	ELSE_1	IF_4	FOR_1
0x4009451	          0x83e801	                              sub eax, 1	      6362	ldlang.c	FUNCTION_136	ELSE_1	IF_4	FOR_1
0x4009454	        0x89442450	             mov dword [rsp + 0x50], eax	      6362	ldlang.c	FUNCTION_136	ELSE_1	IF_4	FOR_1
0x4009458	            0x85c0	                           test eax, eax	      6362	ldlang.c	FUNCTION_136	ELSE_1	IF_4	FOR_1
0x400945a	            0x75db	                           jne 0x4009437	      6362	ldlang.c	FUNCTION_136	ELSE_1	IF_4	FOR_1
0x400945c	      0x488d542450	                   lea rdx, [rsp + 0x50]	      6366	ldlang.c	FUNCTION_136	ELSE_1	IF_4	CALL_4
0x4009461	      0xbe00000000	                              mov esi, 0	      6366	ldlang.c	FUNCTION_136	ELSE_1	IF_4	CALL_4
0x4009466	    0x488b3d000000	            mov rdi, qword [0x0400946d] 	      6366	ldlang.c	FUNCTION_136	ELSE_1	IF_4	CALL_4
0x400946d	      0xe800000000	                          call 0x4009472	      6366	ldlang.c	FUNCTION_136	ELSE_1	IF_4	CALL_4
0x4009472	            0xeb4c	                           jmp 0x40094c0	      6366	ldlang.c	FUNCTION_136	ELSE_1	IF_4	CALL_4
0x4009474	    0xc74424500000	               mov dword [rsp + 0x50], 0	      6370	ldlang.c	FUNCTION_136	ELSE_1	ELSE_2	FOR_2
0x400947c	      0x488d542450	                   lea rdx, [rsp + 0x50]	      6371	ldlang.c	FUNCTION_136	ELSE_1	ELSE_2	CALL_5
0x4009481	      0xbe00000000	                              mov esi, 0	      6371	ldlang.c	FUNCTION_136	ELSE_1	ELSE_2	CALL_5
0x4009486	    0x488b3d000000	            mov rdi, qword [0x0400948d] 	      6371	ldlang.c	FUNCTION_136	ELSE_1	ELSE_2	CALL_5
0x400948d	      0xe800000000	                          call 0x4009492	      6371	ldlang.c	FUNCTION_136	ELSE_1	ELSE_2	CALL_5
0x4009492	        0x8b442450	            mov eax, dword [rsp + 0x50] 	      6370	ldlang.c	FUNCTION_136	ELSE_1	ELSE_2	FOR_2
0x4009496	          0x83c001	                              add eax, 1	      6370	ldlang.c	FUNCTION_136	ELSE_1	ELSE_2	FOR_2
0x4009499	        0x89442450	             mov dword [rsp + 0x50], eax	      6370	ldlang.c	FUNCTION_136	ELSE_1	ELSE_2	FOR_2
0x400949d	          0x83f804	                              cmp eax, 4	      6370	ldlang.c	FUNCTION_136	ELSE_1	ELSE_2	FOR_2
0x40094a0	            0x76da	                           jbe 0x400947c	      6370	ldlang.c	FUNCTION_136	ELSE_1	ELSE_2	FOR_2
0x40094a2	    0xc7442450ffff	     mov dword [rsp + 0x50], 0xffffffff 	      6373	ldlang.c	FUNCTION_136	ELSE_1	ELSE_2
0x40094aa	      0x488d542450	                   lea rdx, [rsp + 0x50]	      6374	ldlang.c	FUNCTION_136	ELSE_1	ELSE_2	CALL_6
0x40094af	      0xbe00000000	                              mov esi, 0	      6374	ldlang.c	FUNCTION_136	ELSE_1	ELSE_2	CALL_6
0x40094b4	    0x488b3d000000	            mov rdi, qword [0x040094bb] 	      6374	ldlang.c	FUNCTION_136	ELSE_1	ELSE_2	CALL_6
0x40094bb	      0xe800000000	                          call 0x40094c0	      6374	ldlang.c	FUNCTION_136	ELSE_1	ELSE_2	CALL_6
0x40094c0	    0x488b3d000000	            mov rdi, qword [0x040094c7] 	      6826	ldlang.c	FUNCTION_151	CALL_1
0x40094c7	      0xe8c8d1ffff	             call sym.lang_gc_sections_1	      6826	ldlang.c	FUNCTION_151	CALL_1
0x40094cc	     0xfb635000000	           movzx esi, byte [0x040094d3] 	      6831	ldlang.c	FUNCTION_151	IF_1	CALL_2
0x40094d3	            0x89f0	                            mov eax, esi	      6831	ldlang.c	FUNCTION_151	IF_1	CALL_2
0x40094d5	          0x83e003	                              and eax, 3	      6831	ldlang.c	FUNCTION_151	IF_1	CALL_2
0x40094d8	            0x3c02	                               cmp al, 2	      6831	ldlang.c	FUNCTION_151	IF_1	CALL_2
0x40094da	            0x7542	                           jne 0x400951e	      6831	ldlang.c	FUNCTION_151	IF_1	CALL_2
0x40094dc	    0x488b0d000000	            mov rcx, qword [0x040094e3] 	      6833	ldlang.c	FUNCTION_151	IF_1
0x40094e3	          0x4885c9	                           test rcx, rcx	      6833	ldlang.c	FUNCTION_151	IF_1
0x40094e6	            0x7436	                            je 0x400951e	      6833	ldlang.c	FUNCTION_151	IF_1
0x40094e8	        0xf6414920	           test byte [rcx + 0x49], 0x20 	      6837	ldlang.c	FUNCTION_151	IF_1	FUNCTION_1
0x40094ec	            0x7527	                           jne 0x4009515	      6837	ldlang.c	FUNCTION_151	IF_1	FUNCTION_1
0x40094ee	        0x488b4120	            mov rax, qword [rcx + 0x20] 	      6840	ldlang.c	FUNCTION_151	FUNCTION_1	IF_1	FOR_1
0x40094f2	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      6840	ldlang.c	FUNCTION_151	FUNCTION_1	IF_1	FOR_1
0x40094f9	          0x4885c0	                           test rax, rax	      6840	ldlang.c	FUNCTION_151	FUNCTION_1	IF_1	FOR_1
0x40094fc	            0x7417	                            je 0x4009515	      6840	ldlang.c	FUNCTION_151	FUNCTION_1	IF_1	FOR_1
0x40094fe	          0x8b5020	            mov edx, dword [rax + 0x20] 	      6841	ldlang.c	FUNCTION_151	FUNCTION_1	IF_1	FOR_1	IF_2
0x4009501	          0xf6c620	                           test dh, 0x20	      6841	ldlang.c	FUNCTION_151	FUNCTION_1	IF_1	FOR_1	IF_2
0x4009504	            0x7506	                           jne 0x400950c	      6841	ldlang.c	FUNCTION_151	FUNCTION_1	IF_1	FOR_1	IF_2
0x4009506	          0x80e67f	                            and dh, 0x7f	      6842	ldlang.c	FUNCTION_151	FUNCTION_1	IF_1	FOR_1	IF_2
0x4009509	          0x895020	             mov dword [rax + 0x20], edx	      6842	ldlang.c	FUNCTION_151	FUNCTION_1	IF_1	FOR_1	IF_2
0x400950c	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6840	ldlang.c	FUNCTION_151	FUNCTION_1	IF_1	FOR_1
0x4009510	          0x4885c0	                           test rax, rax	      6840	ldlang.c	FUNCTION_151	FUNCTION_1	IF_1	FOR_1
0x4009513	            0x75e9	                           jne 0x40094fe	      6840	ldlang.c	FUNCTION_151	FUNCTION_1	IF_1	FOR_1
0x4009515	        0x488b4930	            mov rcx, qword [rcx + 0x30] 	      6833	ldlang.c	FUNCTION_151	IF_1
0x4009519	          0x4885c9	                           test rcx, rcx	      6833	ldlang.c	FUNCTION_151	IF_1
0x400951c	            0x75ca	                           jne 0x40094e8	      6833	ldlang.c	FUNCTION_151	IF_1
0x400951e	        0x40f6c640	                          test sil, 0x40	      6846	ldlang.c	FUNCTION_151	IF_2
0x4009522	            0x7416	                            je 0x400953a	      6846	ldlang.c	FUNCTION_151	IF_2
0x4009524	    0x488b3d000000	            mov rdi, qword [0x0400952b] 	      6847	ldlang.c	FUNCTION_151	IF_2
0x400952b	        0x488b4708	                mov rax, qword [rdi + 8]	      6847	ldlang.c	FUNCTION_151	IF_2
0x400952f	      0xbe00000000	                              mov esi, 0	      6847	ldlang.c	FUNCTION_151	IF_2
0x4009534	    0xff90f0020000	                call qword [rax + 0x2f0]	      6847	ldlang.c	FUNCTION_151	IF_2
0x400953a	    0xf60500000000	           test byte [0x04009541], 0x20 	      7117	ldlang.c	FUNCTION_161	IF_1
0x4009541	            0x7433	                            je 0x4009576	      7117	ldlang.c	FUNCTION_161	IF_1
0x4009543	    0x488b1d000000	            mov rbx, qword [0x0400954a] 	      7121	ldlang.c	FUNCTION_161	IF_1	FOR_1
0x400954a	          0x4885db	                           test rbx, rbx	      7121	ldlang.c	FUNCTION_161	IF_1	FOR_1
0x400954d	            0x7427	                            je 0x4009576	      7121	ldlang.c	FUNCTION_161	IF_1	FOR_1
0x400954f	      0xbe00000000	                              mov esi, 0	      7123	ldlang.c	FUNCTION_161	IF_1	FOR_1	IF_2	CALL_1
0x4009554	          0x4889df	                            mov rdi, rbx	      7123	ldlang.c	FUNCTION_161	IF_1	FOR_1	IF_2	CALL_1
0x4009557	      0xe800000000	                          call 0x400955c	      7123	ldlang.c	FUNCTION_161	IF_1	FOR_1	IF_2	CALL_1
0x400955c	            0x85c0	                           test eax, eax	      7123	ldlang.c	FUNCTION_161	IF_1	FOR_1	IF_2	CALL_1
0x400955e	            0x750a	                           jne 0x400956a	      7123	ldlang.c	FUNCTION_161	IF_1	FOR_1	IF_2	CALL_1
0x4009560	    0xc70500000000	               mov dword [0x0400956a], 0	      7126	ldlang.c	FUNCTION_161	IF_1	FOR_1	IF_2
0x400956a	    0x488b9bf00000	            mov rbx, qword [rbx + 0xf0] 	      7122	ldlang.c	FUNCTION_161	IF_1	FOR_1
0x4009571	          0x4885db	                           test rbx, rbx	      7121	ldlang.c	FUNCTION_161	IF_1	FOR_1
0x4009574	            0x75d9	                           jne 0x400954f	      7121	ldlang.c	FUNCTION_161	IF_1	FOR_1
0x4009576	      0xe800000000	                          call 0x400957b	      7335	ldlang.c	FUNCTION_163	CALL_43
0x400957b	    0x488b3d000000	            mov rdi, qword [0x04009582] 	      7338	ldlang.c	FUNCTION_163	CALL_44
0x4009582	      0xe8b06fffff	         call sym.update_wild_statements	      7338	ldlang.c	FUNCTION_163	CALL_44
0x4009587	    0x830500000000	               add dword [0x0400958e], 1	      7342	ldlang.c	FUNCTION_163
0x400958e	      0xba00000000	                              mov edx, 0	      7343	ldlang.c	FUNCTION_163	CALL_45
0x4009593	      0xbe00000000	                              mov esi, 0	      7343	ldlang.c	FUNCTION_163	CALL_45
0x4009598	    0x488b3d000000	            mov rdi, qword [0x0400959f] 	      7343	ldlang.c	FUNCTION_163	CALL_45
0x400959f	      0xe8d4d1ffff	   call sym.map_input_to_output_sections	      7343	ldlang.c	FUNCTION_163	CALL_45
0x40095a4	    0x41bd00000000	                             mov r13d, 0	      3728	ldlang.c	FUNCTION_87
0x40095aa	      0xbb00000000	                              mov ebx, 0	      3727	ldlang.c	FUNCTION_87
0x40095af	    0x41bc00000000	                             mov r12d, 0	      3734	ldlang.c	FUNCTION_87
0x40095b5	    0x41bffeffffff	                    mov r15d, 0xfffffffe	      3808	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3	FOR_1
0x40095bb	      0xe950020000	                           jmp 0x4009810	      3808	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3	FOR_1
0x40095c0	          0x8b4508	                mov eax, dword [rbp + 8]	      3737	ldlang.c	FUNCTION_87	WHILE_1	IF_1
0x40095c3	            0x85c0	                           test eax, eax	      3737	ldlang.c	FUNCTION_87	WHILE_1	IF_1
0x40095c5	            0x753d	                           jne 0x4009604	      3737	ldlang.c	FUNCTION_87	WHILE_1	IF_1
0x40095c7	          0x4d85ed	                           test r13, r13	      3743	ldlang.c	FUNCTION_87	WHILE_1	IF_1	CALL_1
0x40095ca	            0x7415	                            je 0x40095e1	      3743	ldlang.c	FUNCTION_87	WHILE_1	IF_1	CALL_1
0x40095cc	        0x493b6d20	            cmp rbp, qword [r13 + 0x20] 	      3743	ldlang.c	FUNCTION_87	WHILE_1	IF_1	CALL_1
0x40095d0	            0x740f	                            je 0x40095e1	      3743	ldlang.c	FUNCTION_87	WHILE_1	IF_1	CALL_1
0x40095d2	      0xbe9f0e0000	                          mov esi, 0xe9f	      3743	ldlang.c	FUNCTION_87	WHILE_1	IF_1	CALL_1
0x40095d7	      0xbf00000000	                              mov edi, 0	      3743	ldlang.c	FUNCTION_87	WHILE_1	IF_1	CALL_1
0x40095dc	      0xe800000000	                          call 0x40095e1	      3743	ldlang.c	FUNCTION_87	WHILE_1	IF_1	CALL_1
0x40095e1	          0x4489f8	                           mov eax, r15d	      3750	ldlang.c	FUNCTION_87	WHILE_1	IF_1
0x40095e4	    0x2b8584000000	             sub eax, dword [rbp + 0x84]	      3750	ldlang.c	FUNCTION_87	WHILE_1	IF_1
0x40095ea	    0x898584000000	            mov dword [rbp + 0x84], eax 	      3750	ldlang.c	FUNCTION_87	WHILE_1	IF_1
0x40095f0	          0x4989ed	                            mov r13, rbp	      3744	ldlang.c	FUNCTION_87	WHILE_1	IF_1
0x40095f3	          0x4885db	                           test rbx, rbx	      3751	ldlang.c	FUNCTION_87	WHILE_1	IF_1	IF_2
0x40095f6	     0xf8514020000	                           jne 0x4009810	      3751	ldlang.c	FUNCTION_87	WHILE_1	IF_1	IF_2
0x40095fc	          0x4889eb	                            mov rbx, rbp	      3752	ldlang.c	FUNCTION_87	WHILE_1	IF_1	IF_2
0x40095ff	      0xe90c020000	                           jmp 0x4009810	      3752	ldlang.c	FUNCTION_87	WHILE_1	IF_1	IF_2
0x4009604	          0x83f80e	                            cmp eax, 0xe	      3754	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3
0x4009607	     0xf8503020000	                           jne 0x4009810	      3754	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3
0x400960d	        0x488b7d10	            mov rdi, qword [rbp + 0x10] 	      3761	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	CALL_2
0x4009611	      0xba00000000	                              mov edx, 0	      3761	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	CALL_2
0x4009616	      0xbe00000000	                              mov esi, 0	      3761	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	CALL_2
0x400961b	      0xe800000000	                          call 0x4009620	      3761	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	CALL_2
0x4009620	          0x4989c6	                            mov r14, rax	      3761	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	CALL_2
0x4009623	          0x4885c0	                           test rax, rax	      3762	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_4
0x4009626	     0xf8436100000	                            je 0x400a662	      3762	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_4
0x400962c	        0x837d1800	               cmp dword [rbp + 0x18], 0	      3762	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_4
0x4009630	     0xf8459100000	                            je 0x400a68f	      3762	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_4
0x4009636	        0x4d8b7628	            mov r14, qword [r14 + 0x28] 	      3765	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_4	DO_1
0x400963a	          0x4d85f6	                           test r14, r14	      3766	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_4
0x400963d	     0xf841f100000	                            je 0x400a662	      3766	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_4
0x4009643	    0x4183be840000	               cmp dword [r14 + 0x84], 0	      3766	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_4
0x400964b	            0x78e9	                            js 0x4009636	      3766	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_4
0x400964d	      0xe93d100000	                           jmp 0x400a68f	      3766	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_4
0x4009652	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      3781	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6
0x4009656	        0x498b5520	            mov rdx, qword [r13 + 0x20] 	      3781	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6
0x400965a	        0x48895020	             mov qword [rax + 0x20], rdx	      3781	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6
0x400965e	        0x498b4520	            mov rax, qword [r13 + 0x20] 	      3782	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_7
0x4009662	          0x4885c0	                           test rax, rax	      3782	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_7
0x4009665	            0x7511	                           jne 0x4009678	      3782	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_7
0x4009667	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      3784	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_7
0x400966b	        0x4883c020	                           add rax, 0x20	      3784	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_7
0x400966f	    0x488905000000	            mov qword [0x04009676], rax 	      3786	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_7
0x4009676	            0xeb08	                           jmp 0x4009680	      3786	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_7
0x4009678	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	      3789	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_2
0x400967c	        0x48895028	             mov qword [rax + 0x28], rdx	      3789	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_2
0x4009680	        0x498b4620	            mov rax, qword [r14 + 0x20] 	      3791	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_2
0x4009684	        0x49894520	             mov qword [r13 + 0x20], rax	      3791	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_2
0x4009688	        0x498b4620	            mov rax, qword [r14 + 0x20] 	      3792	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_2	IF_8
0x400968c	          0x4885c0	                           test rax, rax	      3792	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_2	IF_8
0x400968f	            0x750d	                           jne 0x400969e	      3792	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_2	IF_8
0x4009691	        0x498d4520	                   lea rax, [r13 + 0x20]	      3794	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_2	IF_8
0x4009695	    0x488905000000	            mov qword [0x0400969c], rax 	      3794	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_2	IF_8
0x400969c	            0xeb04	                           jmp 0x40096a2	      3794	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_2	IF_8
0x400969e	        0x4c896828	             mov qword [rax + 0x28], r13	      3799	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3
0x40096a2	        0x4c897328	             mov qword [rbx + 0x28], r14	      3800	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3
0x40096a6	        0x49895e20	             mov qword [r14 + 0x20], rbx	      3801	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3
0x40096aa	          0x4885db	                           test rbx, rbx	      3806	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3	FOR_1
0x40096ad	     0xf841d010000	                            je 0x40097d0	      3806	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3	FOR_1
0x40096b3	    0x48c744240800	                  mov qword [rsp + 8], 0	      3806	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3	FOR_1
0x40096bc	      0xbd00000000	                              mov ebp, 0	      3806	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3	FOR_1
0x40096c1	          0x4489f8	                           mov eax, r15d	      3808	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3	FOR_1
0x40096c4	    0x2b8384000000	             sub eax, dword [rbx + 0x84]	      3808	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3	FOR_1
0x40096ca	    0x898384000000	             mov dword [rbx + 0x84], eax	      3808	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3	FOR_1
0x40096d0	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      3809	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3	FOR_1	IF_9
0x40096d4	          0x4885c0	                           test rax, rax	      3809	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3	FOR_1	IF_9
0x40096d7	            0x7417	                            je 0x40096f0	      3809	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3	FOR_1	IF_9
0x40096d9	    0x4883b8f00000	               cmp qword [rax + 0xf0], 0	      3810	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3	FOR_1	IF_9
0x40096e1	            0x740d	                            je 0x40096f0	      3810	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3	FOR_1	IF_9
0x40096e3	      0x4889442408	                mov qword [rsp + 8], rax	      3812	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3	FOR_1	IF_9
0x40096e8	          0x4885ed	                           test rbp, rbp	      3813	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3	FOR_1	IF_9	IF_10
0x40096eb	            0x7503	                           jne 0x40096f0	      3813	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3	FOR_1	IF_9	IF_10
0x40096ed	          0x4889c5	                            mov rbp, rax	      3814	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3	FOR_1	IF_9	IF_10
0x40096f0	          0x4939dd	                            cmp r13, rbx	      3816	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3	FOR_1	IF_11
0x40096f3	            0x7409	                            je 0x40096fe	      3816	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3	FOR_1	IF_11
0x40096f5	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      3806	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3	FOR_1
0x40096f9	          0x4885db	                           test rbx, rbx	      3806	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3	FOR_1
0x40096fc	            0x75c3	                           jne 0x40096c1	      3806	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	ELSE_3	FOR_1
0x40096fe	    0x48837c240800	                  cmp qword [rsp + 8], 0	      3819	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12
0x4009704	     0xf84ba000000	                            je 0x40097c4	      3819	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12
0x400970a	        0x498b4638	            mov rax, qword [r14 + 0x38] 	      3821	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12
0x400970e	          0x4885c0	                           test rax, rax	      3822	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_13
0x4009711	            0x7508	                           jne 0x400971b	      3822	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_13
0x4009713	          0x4c89f7	                            mov rdi, r14	      3823	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	CALL_5
0x4009716	      0xe89369ffff	           call sym.output_prev_sec_find	      3823	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	CALL_5
0x400971b	          0x4885c0	                           test rax, rax	      3829	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14
0x400971e	     0xf84a7000000	                            je 0x40097cb	      3829	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14
0x4009724	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      3829	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14
0x4009729	          0x4839c8	                            cmp rax, rcx	      3829	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14
0x400972c	     0xf8499000000	                            je 0x40097cb	      3829	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14
0x4009732	        0x488b5518	            mov rdx, qword [rbp + 0x18] 	      3832	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	IF_15
0x4009736	          0x4885d2	                           test rdx, rdx	      3832	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	IF_15
0x4009739	            0x740a	                            je 0x4009745	      3832	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	IF_15
0x400973b	        0x488b4910	            mov rcx, qword [rcx + 0x10] 	      3833	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	IF_15
0x400973f	        0x48894a10	             mov qword [rdx + 0x10], rcx	      3833	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	IF_15
0x4009743	            0xeb17	                           jmp 0x400975c	      3833	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	IF_15
0x4009745	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      3835	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	ELSE_4
0x400974a	        0x488b4910	            mov rcx, qword [rcx + 0x10] 	      3835	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	ELSE_4
0x400974e	    0x488b15000000	            mov rdx, qword [0x04009755] 	      3835	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	ELSE_4
0x4009755	    0x48898a900000	             mov qword [rdx + 0x90], rcx	      3835	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	ELSE_4
0x400975c	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      3836	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	IF_16
0x4009761	        0x488b5110	            mov rdx, qword [rcx + 0x10] 	      3836	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	IF_16
0x4009765	          0x4885d2	                           test rdx, rdx	      3836	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	IF_16
0x4009768	            0x740a	                            je 0x4009774	      3836	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	IF_16
0x400976a	        0x488b4d18	            mov rcx, qword [rbp + 0x18] 	      3837	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	IF_16
0x400976e	        0x48894a18	             mov qword [rdx + 0x18], rcx	      3837	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	IF_16
0x4009772	            0xeb12	                           jmp 0x4009786	      3837	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	IF_16
0x4009774	        0x488b4d18	            mov rcx, qword [rbp + 0x18] 	      3839	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	ELSE_5
0x4009778	    0x488b15000000	            mov rdx, qword [0x0400977f] 	      3839	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	ELSE_5
0x400977f	    0x48898a980000	             mov qword [rdx + 0x98], rcx	      3839	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	ELSE_5
0x4009786	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      3841	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14
0x400978a	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      3841	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14
0x400978f	        0x48895110	             mov qword [rcx + 0x10], rdx	      3841	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14
0x4009793	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      3842	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	IF_17
0x4009797	          0x4885d2	                           test rdx, rdx	      3842	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	IF_17
0x400979a	            0x7406	                            je 0x40097a2	      3842	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	IF_17
0x400979c	        0x48894a18	             mov qword [rdx + 0x18], rcx	      3843	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	IF_17
0x40097a0	            0xeb13	                           jmp 0x40097b5	      3843	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	IF_17
0x40097a2	    0x488b15000000	            mov rdx, qword [0x040097a9] 	      3845	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	ELSE_6
0x40097a9	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      3845	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	ELSE_6
0x40097ae	    0x48898a980000	             mov qword [rdx + 0x98], rcx	      3845	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14	ELSE_6
0x40097b5	        0x48894518	            mov qword [rbp + 0x18], rax 	      3846	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14
0x40097b9	        0x48896810	             mov qword [rax + 0x10], rbp	      3847	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6	IF_12	IF_14
0x40097bd	      0xbb00000000	                              mov ebx, 0	      3851	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6
0x40097c2	            0xeb0c	                           jmp 0x40097d0	      3851	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6
0x40097c4	      0xbb00000000	                              mov ebx, 0	      3851	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6
0x40097c9	            0xeb05	                           jmp 0x40097d0	      3851	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6
0x40097cb	      0xbb00000000	                              mov ebx, 0	      3851	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6
0x40097d0	          0x4c89f7	                            mov rdi, r14	      3855	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	CALL_6
0x40097d3	      0xe81169ffff	                call sym.insert_os_after	      3855	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	CALL_6
0x40097d8	    0x488b15000000	            mov rdx, qword [0x040097df] 	      3859	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3
0x40097df	          0x488b0a	                    mov rcx, qword [rdx]	      3859	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3
0x40097e2	        0x488b3c24	                    mov rdi, qword [rsp]	      3860	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3
0x40097e6	          0x488b37	                    mov rsi, qword [rdi]	      3860	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3
0x40097e9	          0x488b36	                    mov rsi, qword [rsi]	      3860	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3
0x40097ec	          0x488932	                    mov qword [rdx], rsi	      3860	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3
0x40097ef	          0x488b10	                    mov rdx, qword [rax]	      3862	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3
0x40097f2	          0x488917	                    mov qword [rdi], rdx	      3862	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3
0x40097f5	          0x4885d2	                           test rdx, rdx	      3863	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_18
0x40097f8	            0x7507	                           jne 0x4009801	      3863	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_18
0x40097fa	    0x4c8925000000	            mov qword [0x04009801], r12 	      3864	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_18
0x4009801	          0x488908	                    mov qword [rax], rcx	      3865	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3
0x4009804	    0x41bd00000000	                             mov r13d, 0	      3865	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3
0x400980a	    0x41bc00000000	                             mov r12d, 0	      3866	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3
0x4009810	        0x4d8b2424	                    mov r12, qword [r12]	      3735	ldlang.c	FUNCTION_87	WHILE_1
0x4009814	        0x4c892424	                    mov qword [rsp], r12	      3735	ldlang.c	FUNCTION_87	WHILE_1
0x4009818	        0x498b2c24	                    mov rbp, qword [r12]	      3735	ldlang.c	FUNCTION_87	WHILE_1
0x400981c	          0x4885ed	                           test rbp, rbp	      3735	ldlang.c	FUNCTION_87	WHILE_1
0x400981f	     0xf859bfdffff	                           jne 0x40095c0	      3735	ldlang.c	FUNCTION_87	WHILE_1
0x4009825	          0x4885db	                           test rbx, rbx	      3871	ldlang.c	FUNCTION_87	FOR_2
0x4009828	            0x7439	                            je 0x4009863	      3871	ldlang.c	FUNCTION_87	FOR_2
0x400982a	      0xb8feffffff	                     mov eax, 0xfffffffe	      3873	ldlang.c	FUNCTION_87	FOR_2
0x400982f	    0x2b8384000000	             sub eax, dword [rbx + 0x84]	      3873	ldlang.c	FUNCTION_87	FOR_2
0x4009835	    0x898384000000	             mov dword [rbx + 0x84], eax	      3873	ldlang.c	FUNCTION_87	FOR_2
0x400983b	      0xbafeffffff	                     mov edx, 0xfffffffe	      3873	ldlang.c	FUNCTION_87	FOR_2
0x4009840	          0x4939dd	                            cmp r13, rbx	      3874	ldlang.c	FUNCTION_87	FOR_2	IF_19
0x4009843	            0x7515	                           jne 0x400985a	      3874	ldlang.c	FUNCTION_87	FOR_2	IF_19
0x4009845	            0xeb1c	                           jmp 0x4009863	      3874	ldlang.c	FUNCTION_87	FOR_2	IF_19
0x4009847	            0x89d0	                            mov eax, edx	      3873	ldlang.c	FUNCTION_87	FOR_2
0x4009849	    0x2b8384000000	             sub eax, dword [rbx + 0x84]	      3873	ldlang.c	FUNCTION_87	FOR_2
0x400984f	    0x898384000000	             mov dword [rbx + 0x84], eax	      3873	ldlang.c	FUNCTION_87	FOR_2
0x4009855	          0x4939dd	                            cmp r13, rbx	      3874	ldlang.c	FUNCTION_87	FOR_2	IF_19
0x4009858	            0x7409	                            je 0x4009863	      3874	ldlang.c	FUNCTION_87	FOR_2	IF_19
0x400985a	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      3871	ldlang.c	FUNCTION_87	FOR_2
0x400985e	          0x4885db	                           test rbx, rbx	      3871	ldlang.c	FUNCTION_87	FOR_2
0x4009861	            0x75e4	                           jne 0x4009847	      3871	ldlang.c	FUNCTION_87	FOR_2
0x4009863	    0x488b2d000000	            mov rbp, qword [0x0400986a] 	      6521	ldlang.c	FUNCTION_139
0x400986a	          0x4885ed	                           test rbp, rbp	      6521	ldlang.c	FUNCTION_139
0x400986d	     0xf8455020000	                            je 0x4009ac8	      6521	ldlang.c	FUNCTION_139
0x4009873	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      6525	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1
0x4009877	    0x488b98900000	            mov rbx, qword [rax + 0x90] 	      6525	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1
0x400987e	          0x4885db	                           test rbx, rbx	      6525	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1
0x4009881	     0xf8434020000	                            je 0x4009abb	      6525	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1
0x4009887	      0x48837b6800	               cmp qword [rbx + 0x68], 0	      6527	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1
0x400988c	     0xf851c020000	                           jne 0x4009aae	      6527	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1
0x4009892	        0xf6454810	           test byte [rbp + 0x48], 0x10 	      6532	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	IF_2
0x4009896	            0x741b	                            je 0x40098b3	      6532	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	IF_2
0x4009898	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      6533	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	IF_2
0x400989c	        0x488b4008	                mov rax, qword [rax + 8]	      6533	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	IF_2
0x40098a0	      0xbe00000000	                              mov esi, 0	      6533	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	IF_2
0x40098a5	          0x4889df	                            mov rdi, rbx	      6533	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	IF_2
0x40098a8	    0xff90c8020000	                call qword [rax + 0x2c8]	      6533	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	IF_2
0x40098ae	      0xe9fb010000	                           jmp 0x4009aae	      6533	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	IF_2
0x40098b3	          0x4889df	                            mov rdi, rbx	      6534	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_1	IF_3	CALL_1
0x40098b6	      0xe85869ffff	         call sym.lang_discard_section_p	      6534	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_1	IF_3	CALL_1
0x40098bb	            0x85c0	                           test eax, eax	      6534	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_1	IF_3	CALL_1
0x40098bd	            0x740d	                            je 0x40098cc	      6534	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_1	IF_3	CALL_1
0x40098bf	    0x48c743680000	               mov qword [rbx + 0x68], 0	      6535	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_1	IF_3
0x40098c7	      0xe9e2010000	                           jmp 0x4009aae	      6535	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_1	IF_3
0x40098cc	          0x4c8b23	                    mov r12, qword [rbx]	      6536	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4
0x40098cf	      0xbf00000000	                              mov edi, 0	      6536	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4
0x40098d4	      0xb907000000	                              mov ecx, 7	      6536	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4
0x40098d9	          0x4c89e6	                            mov rsi, r12	      6536	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4
0x40098dc	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      6536	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4
0x40098de	           0xf97c2	                                 seta dl	      6536	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4
0x40098e1	           0xf92c0	                                 setb al	      6536	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4
0x40098e4	            0x38c2	                              cmp dl, al	      6536	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4
0x40098e6	            0x755d	                           jne 0x4009945	      6536	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4
0x40098e8	     0xfb605000000	           movzx eax, byte [0x040098ef] 	      6541	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4	IF_5	CALL_2
0x40098ef	          0x83e003	                              and eax, 3	      6541	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4	IF_5	CALL_2
0x40098f2	            0x3c02	                               cmp al, 2	      6541	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4	IF_5	CALL_2
0x40098f4	            0x750d	                           jne 0x4009903	      6541	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4	IF_5	CALL_2
0x40098f6	    0x833d00000000	               cmp dword [0x040098fd], 0	      6542	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4	IF_5
0x40098fd	     0xf84ab010000	                            je 0x4009aae	      6542	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4	IF_5
0x4009903	    0x48833d000000	               cmp qword [0x0400990b], 0	      6544	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4	IF_5	IF_6
0x400990b	            0x751b	                           jne 0x4009928	      6544	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4	IF_5	IF_6
0x400990d	      0xba01000000	                              mov edx, 1	      6546	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4	IF_5	IF_6	CALL_3
0x4009912	      0xbe00000000	                              mov esi, 0	      6546	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4	IF_5	IF_6	CALL_3
0x4009917	      0xbf00000000	                              mov edi, 0	      6546	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4	IF_5	IF_6	CALL_3
0x400991c	      0xe800000000	                          call 0x4009921	      6546	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4	IF_5	IF_6	CALL_3
0x4009921	    0x488905000000	            mov qword [0x04009928], rax 	      6546	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4	IF_5	IF_6	CALL_3
0x4009928	    0x488b0d000000	            mov rcx, qword [0x0400992f] 	      6548	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4	IF_5	CALL_4
0x400992f	        0x488d7910	                   lea rdi, [rcx + 0x10]	      6548	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4	IF_5	CALL_4
0x4009933	      0xba00000000	                              mov edx, 0	      6548	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4	IF_5	CALL_4
0x4009938	          0x4889de	                            mov rsi, rbx	      6548	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4	IF_5	CALL_4
0x400993b	      0xe800000000	                          call 0x4009940	      6548	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4	IF_5	CALL_4
0x4009940	      0xe969010000	                           jmp 0x4009aae	      6548	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1	IF_1	ELSE_2	IF_4	IF_5	CALL_4
0x4009945	    0x8b0500000000	            mov eax, dword [0x0400994b] 	      6472	ldlang.c	FUNCTION_138	IF_1
0x400994b	          0x83f801	                              cmp eax, 1	      6472	ldlang.c	FUNCTION_138	IF_1
0x400994e	            0x755b	                           jne 0x40099ab	      6472	ldlang.c	FUNCTION_138	IF_1
0x4009950	      0xba01000000	                              mov edx, 1	      6475	ldlang.c	FUNCTION_138	IF_1	CALL_1
0x4009955	      0xbe00000000	                              mov esi, 0	      6475	ldlang.c	FUNCTION_138	IF_1	CALL_1
0x400995a	      0xbf00000000	                              mov edi, 0	      6475	ldlang.c	FUNCTION_138	IF_1	CALL_1
0x400995f	      0xe800000000	                          call 0x4009964	      6475	ldlang.c	FUNCTION_138	IF_1	CALL_1
0x4009964	          0x4989c4	                            mov r12, rax	      6475	ldlang.c	FUNCTION_138	IF_1	CALL_1
0x4009967	      0x4883785800	               cmp qword [rax + 0x58], 0	      6477	ldlang.c	FUNCTION_138	IF_1	IF_2
0x400996c	            0x7523	                           jne 0x4009991	      6477	ldlang.c	FUNCTION_138	IF_1	IF_2
0x400996e	     0xfb605000000	           movzx eax, byte [0x04009975] 	      6478	ldlang.c	FUNCTION_138	IF_1	IF_2	CALL_2
0x4009975	          0x83e003	                              and eax, 3	      6478	ldlang.c	FUNCTION_138	IF_1	IF_2	CALL_2
0x4009978	            0x3c02	                               cmp al, 2	      6478	ldlang.c	FUNCTION_138	IF_1	IF_2	CALL_2
0x400997a	            0x7406	                            je 0x4009982	      6478	ldlang.c	FUNCTION_138	IF_1	IF_2	CALL_2
0x400997c	        0xf6432003	               test byte [rbx + 0x20], 3	      6479	ldlang.c	FUNCTION_138	IF_1	IF_2
0x4009980	            0x750f	                           jne 0x4009991	      6479	ldlang.c	FUNCTION_138	IF_1	IF_2
0x4009982	      0xbf00000000	                              mov edi, 0	      6480	ldlang.c	FUNCTION_138	IF_1	CALL_3
0x4009987	      0xe800000000	                          call 0x400998c	      6480	ldlang.c	FUNCTION_138	IF_1	CALL_3
0x400998c	      0x4989442458	             mov qword [r12 + 0x58], rax	      6480	ldlang.c	FUNCTION_138	IF_1	CALL_3
0x4009991	      0x498d7c2410	                   lea rdi, [r12 + 0x10]	      6481	ldlang.c	FUNCTION_138	IF_1	CALL_4
0x4009996	          0x4c89e1	                            mov rcx, r12	      6481	ldlang.c	FUNCTION_138	IF_1	CALL_4
0x4009999	      0xba00000000	                              mov edx, 0	      6481	ldlang.c	FUNCTION_138	IF_1	CALL_4
0x400999e	          0x4889de	                            mov rsi, rbx	      6481	ldlang.c	FUNCTION_138	IF_1	CALL_4
0x40099a1	      0xe800000000	                          call 0x40099a6	      6481	ldlang.c	FUNCTION_138	IF_1	CALL_4
0x40099a6	      0xe903010000	                           jmp 0x4009aae	      6481	ldlang.c	FUNCTION_138	IF_1	CALL_4
0x40099ab	          0x83f803	                              cmp eax, 3	      6489	ldlang.c	FUNCTION_138	ELSE_1	IF_3
0x40099ae	            0x752e	                           jne 0x40099de	      6489	ldlang.c	FUNCTION_138	ELSE_1	IF_3
0x40099b0	    0x4c8babf00000	            mov r13, qword [rbx + 0xf0] 	      6490	ldlang.c	FUNCTION_138	ELSE_1	IF_3	CALL_6
0x40099b7	      0xba05000000	                              mov edx, 5	      6490	ldlang.c	FUNCTION_138	ELSE_1	IF_3	CALL_6
0x40099bc	      0xbe00000000	                              mov esi, 0	      6490	ldlang.c	FUNCTION_138	ELSE_1	IF_3	CALL_6
0x40099c1	      0xbf00000000	                              mov edi, 0	      6490	ldlang.c	FUNCTION_138	ELSE_1	IF_3	CALL_6
0x40099c6	      0xe800000000	                          call 0x40099cb	      6490	ldlang.c	FUNCTION_138	ELSE_1	IF_3	CALL_6
0x40099cb	          0x4c89ea	                            mov rdx, r13	      6490	ldlang.c	FUNCTION_138	ELSE_1	IF_3	CALL_6
0x40099ce	          0x4889de	                            mov rsi, rbx	      6490	ldlang.c	FUNCTION_138	ELSE_1	IF_3	CALL_6
0x40099d1	          0x4889c7	                            mov rdi, rax	      6490	ldlang.c	FUNCTION_138	ELSE_1	IF_3	CALL_6
0x40099d4	      0xb800000000	                              mov eax, 0	      6490	ldlang.c	FUNCTION_138	ELSE_1	IF_3	CALL_6
0x40099d9	      0xe800000000	                          call 0x40099de	      6490	ldlang.c	FUNCTION_138	ELSE_1	IF_3	CALL_6
0x40099de	    0x41be7e010000	                         mov r14d, 0x17e	      6494	ldlang.c	FUNCTION_138	ELSE_1	IF_4
0x40099e4	    0x833d00000000	               cmp dword [0x040099eb], 0	      6493	ldlang.c	FUNCTION_138	ELSE_1	IF_4	CALL_7
0x40099eb	            0x751d	                           jne 0x4009a0a	      6493	ldlang.c	FUNCTION_138	ELSE_1	IF_4	CALL_7
0x40099ed	      0xbe00000000	                              mov esi, 0	      6493	ldlang.c	FUNCTION_138	ELSE_1	IF_4	CALL_7
0x40099f2	          0x4889df	                            mov rdi, rbx	      6493	ldlang.c	FUNCTION_138	ELSE_1	IF_4	CALL_7
0x40099f5	      0xe80d86ffff	               call sym.unique_section_p	      6493	ldlang.c	FUNCTION_138	ELSE_1	IF_4	CALL_7
0x40099fa	          0x83f801	                              cmp eax, 1	      6494	ldlang.c	FUNCTION_138	ELSE_1	IF_4
0x40099fd	          0x4519f6	                          sbb r14d, r14d	      6494	ldlang.c	FUNCTION_138	ELSE_1	IF_4
0x4009a00	          0x41f7d6	                                not r14d	      6494	ldlang.c	FUNCTION_138	ELSE_1	IF_4
0x4009a03	    0x4181e67e0100	                         and r14d, 0x17e	      6494	ldlang.c	FUNCTION_138	ELSE_1	IF_4
0x4009a0a	          0x4489f2	                           mov edx, r14d	      6496	ldlang.c	FUNCTION_138	ELSE_1	CALL_8
0x4009a0d	          0x4c89e6	                            mov rsi, r12	      6496	ldlang.c	FUNCTION_138	ELSE_1	CALL_8
0x4009a10	          0x4889df	                            mov rdi, rbx	      6496	ldlang.c	FUNCTION_138	ELSE_1	CALL_8
0x4009a13	      0xe800000000	                          call 0x4009a18	      6496	ldlang.c	FUNCTION_138	ELSE_1	CALL_8
0x4009a18	          0x4989c5	                            mov r13, rax	      6496	ldlang.c	FUNCTION_138	ELSE_1	CALL_8
0x4009a1b	          0x4885c0	                           test rax, rax	      6497	ldlang.c	FUNCTION_138	ELSE_1	IF_5
0x4009a1e	            0x7550	                           jne 0x4009a70	      6497	ldlang.c	FUNCTION_138	ELSE_1	IF_5
0x4009a20	      0xba01000000	                              mov edx, 1	      6499	ldlang.c	FUNCTION_138	ELSE_1	IF_5	CALL_9
0x4009a25	          0x4489f6	                           mov esi, r14d	      6499	ldlang.c	FUNCTION_138	ELSE_1	IF_5	CALL_9
0x4009a28	          0x4c89e7	                            mov rdi, r12	      6499	ldlang.c	FUNCTION_138	ELSE_1	IF_5	CALL_9
0x4009a2b	      0xe800000000	                          call 0x4009a30	      6499	ldlang.c	FUNCTION_138	ELSE_1	IF_5	CALL_9
0x4009a30	          0x4989c5	                            mov r13, rax	      6499	ldlang.c	FUNCTION_138	ELSE_1	IF_5	CALL_9
0x4009a33	      0x4883785800	               cmp qword [rax + 0x58], 0	      6500	ldlang.c	FUNCTION_138	ELSE_1	IF_5	IF_6
0x4009a38	            0x7522	                           jne 0x4009a5c	      6500	ldlang.c	FUNCTION_138	ELSE_1	IF_5	IF_6
0x4009a3a	     0xfb605000000	           movzx eax, byte [0x04009a41] 	      6501	ldlang.c	FUNCTION_138	ELSE_1	IF_5	IF_6	CALL_10
0x4009a41	          0x83e003	                              and eax, 3	      6501	ldlang.c	FUNCTION_138	ELSE_1	IF_5	IF_6	CALL_10
0x4009a44	            0x3c02	                               cmp al, 2	      6501	ldlang.c	FUNCTION_138	ELSE_1	IF_5	IF_6	CALL_10
0x4009a46	            0x7406	                            je 0x4009a4e	      6501	ldlang.c	FUNCTION_138	ELSE_1	IF_5	IF_6	CALL_10
0x4009a48	        0xf6432003	               test byte [rbx + 0x20], 3	      6502	ldlang.c	FUNCTION_138	ELSE_1	IF_5	IF_6
0x4009a4c	            0x750e	                           jne 0x4009a5c	      6502	ldlang.c	FUNCTION_138	ELSE_1	IF_5	IF_6
0x4009a4e	      0xbf00000000	                              mov edi, 0	      6503	ldlang.c	FUNCTION_138	ELSE_1	IF_5	CALL_11
0x4009a53	      0xe800000000	                          call 0x4009a58	      6503	ldlang.c	FUNCTION_138	ELSE_1	IF_5	CALL_11
0x4009a58	        0x49894558	             mov qword [r13 + 0x58], rax	      6503	ldlang.c	FUNCTION_138	ELSE_1	IF_5	CALL_11
0x4009a5c	        0x498d7d10	                   lea rdi, [r13 + 0x10]	      6504	ldlang.c	FUNCTION_138	ELSE_1	IF_5	CALL_12
0x4009a60	          0x4c89e9	                            mov rcx, r13	      6504	ldlang.c	FUNCTION_138	ELSE_1	IF_5	CALL_12
0x4009a63	      0xba00000000	                              mov edx, 0	      6504	ldlang.c	FUNCTION_138	ELSE_1	IF_5	CALL_12
0x4009a68	          0x4889de	                            mov rsi, rbx	      6504	ldlang.c	FUNCTION_138	ELSE_1	IF_5	CALL_12
0x4009a6b	      0xe800000000	                          call 0x4009a70	      6504	ldlang.c	FUNCTION_138	ELSE_1	IF_5	CALL_12
0x4009a70	    0x833d00000000	               cmp dword [0x04009a77], 2	      6507	ldlang.c	FUNCTION_138	ELSE_1	IF_7
0x4009a77	            0x7535	                           jne 0x4009aae	      6507	ldlang.c	FUNCTION_138	ELSE_1	IF_7
0x4009a79	        0x4d8b6d30	            mov r13, qword [r13 + 0x30] 	      6508	ldlang.c	FUNCTION_138	ELSE_1	IF_7	CALL_14
0x4009a7d	    0x4c8ba3f00000	            mov r12, qword [rbx + 0xf0] 	      6508	ldlang.c	FUNCTION_138	ELSE_1	IF_7	CALL_14
0x4009a84	      0xba05000000	                              mov edx, 5	      6508	ldlang.c	FUNCTION_138	ELSE_1	IF_7	CALL_14
0x4009a89	      0xbe00000000	                              mov esi, 0	      6508	ldlang.c	FUNCTION_138	ELSE_1	IF_7	CALL_14
0x4009a8e	      0xbf00000000	                              mov edi, 0	      6508	ldlang.c	FUNCTION_138	ELSE_1	IF_7	CALL_14
0x4009a93	      0xe800000000	                          call 0x4009a98	      6508	ldlang.c	FUNCTION_138	ELSE_1	IF_7	CALL_14
0x4009a98	          0x4c89e9	                            mov rcx, r13	      6508	ldlang.c	FUNCTION_138	ELSE_1	IF_7	CALL_14
0x4009a9b	          0x4c89e2	                            mov rdx, r12	      6508	ldlang.c	FUNCTION_138	ELSE_1	IF_7	CALL_14
0x4009a9e	          0x4889de	                            mov rsi, rbx	      6508	ldlang.c	FUNCTION_138	ELSE_1	IF_7	CALL_14
0x4009aa1	          0x4889c7	                            mov rdi, rax	      6508	ldlang.c	FUNCTION_138	ELSE_1	IF_7	CALL_14
0x4009aa4	      0xb800000000	                              mov eax, 0	      6508	ldlang.c	FUNCTION_138	ELSE_1	IF_7	CALL_14
0x4009aa9	      0xe800000000	                          call 0x4009aae	      6508	ldlang.c	FUNCTION_138	ELSE_1	IF_7	CALL_14
0x4009aae	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      6525	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1
0x4009ab2	          0x4885db	                           test rbx, rbx	      6525	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1
0x4009ab5	     0xf85ccfdffff	                           jne 0x4009887	      6525	ldlang.c	FUNCTION_139	FUNCTION_1	FOR_1
0x4009abb	        0x488b6d30	            mov rbp, qword [rbp + 0x30] 	      6521	ldlang.c	FUNCTION_139
0x4009abf	          0x4885ed	                           test rbp, rbp	      6521	ldlang.c	FUNCTION_139
0x4009ac2	     0xf85abfdffff	                           jne 0x4009873	      6521	ldlang.c	FUNCTION_139
0x4009ac8	     0xfb605000000	           movzx eax, byte [0x04009acf] 	      7350	ldlang.c	FUNCTION_163	IF_15	CALL_48
0x4009acf	          0x83e003	                              and eax, 3	      7350	ldlang.c	FUNCTION_163	IF_15	CALL_48
0x4009ad2	            0x3c02	                               cmp al, 2	      7350	ldlang.c	FUNCTION_163	IF_15	CALL_48
0x4009ad4	            0x743f	                            je 0x4009b15	      7350	ldlang.c	FUNCTION_163	IF_15	CALL_48
0x4009ad6	    0x488b3d000000	            mov rdi, qword [0x04009add] 	      7358	ldlang.c	FUNCTION_163	IF_15
0x4009add	        0x488b4708	                mov rax, qword [rdi + 8]	      7358	ldlang.c	FUNCTION_163	IF_15
0x4009ae1	      0xbe00000000	                              mov esi, 0	      7358	ldlang.c	FUNCTION_163	IF_15
0x4009ae6	    0xff9000030000	                call qword [rax + 0x300]	      7358	ldlang.c	FUNCTION_163	IF_15
0x4009aec	      0xbe00000000	                              mov esi, 0	      7361	ldlang.c	FUNCTION_163	IF_15	CALL_49
0x4009af1	    0x488b3d000000	            mov rdi, qword [0x04009af8] 	      7361	ldlang.c	FUNCTION_163	IF_15	CALL_49
0x4009af8	      0xe800000000	                          call 0x4009afd	      7361	ldlang.c	FUNCTION_163	IF_15	CALL_49
0x4009afd	          0x4885c0	                           test rax, rax	      7363	ldlang.c	FUNCTION_163	IF_15	IF_16
0x4009b00	            0x7413	                            je 0x4009b15	      7363	ldlang.c	FUNCTION_163	IF_15	IF_16
0x4009b02	    0x833d00000000	               cmp dword [0x04009b09], 0	      7365	ldlang.c	FUNCTION_163	IF_15	IF_16	IF_17
0x4009b09	            0x7406	                            je 0x4009b11	      7365	ldlang.c	FUNCTION_163	IF_15	IF_16	IF_17
0x4009b0b	        0x83482008	                or dword [rax + 0x20], 8	      7366	ldlang.c	FUNCTION_163	IF_15	IF_16	IF_17
0x4009b0f	            0xeb04	                           jmp 0x4009b15	      7366	ldlang.c	FUNCTION_163	IF_15	IF_16	IF_17
0x4009b11	        0x836020f7	      and dword [rax + 0x20], 0xfffffff7	      7368	ldlang.c	FUNCTION_163	IF_15	IF_16	ELSE_2
0x4009b15	    0x488b05000000	            mov rax, qword [0x04009b1c] 	      7142	ldlang.c	FUNCTION_162	FOR_1
0x4009b1c	          0x4885c0	                           test rax, rax	      7142	ldlang.c	FUNCTION_162	FOR_1
0x4009b1f	            0x7439	                            je 0x4009b5a	      7142	ldlang.c	FUNCTION_162	FOR_1
0x4009b21	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      7146	ldlang.c	FUNCTION_162	FOR_1	IF_1
0x4009b25	          0x4885d2	                           test rdx, rdx	      7146	ldlang.c	FUNCTION_162	FOR_1	IF_1
0x4009b28	            0x7427	                            je 0x4009b51	      7146	ldlang.c	FUNCTION_162	FOR_1	IF_1
0x4009b2a	      0x4883784800	               cmp qword [rax + 0x48], 0	      7147	ldlang.c	FUNCTION_162	FOR_1	IF_1
0x4009b2f	            0x7520	                           jne 0x4009b51	      7147	ldlang.c	FUNCTION_162	FOR_1	IF_1
0x4009b31	      0x4883786000	               cmp qword [rax + 0x60], 0	      7148	ldlang.c	FUNCTION_162	FOR_1	IF_1
0x4009b36	            0x7519	                           jne 0x4009b51	      7148	ldlang.c	FUNCTION_162	FOR_1	IF_1
0x4009b38	      0x4883785800	               cmp qword [rax + 0x58], 0	      7149	ldlang.c	FUNCTION_162	FOR_1	IF_1
0x4009b3d	            0x7512	                           jne 0x4009b51	      7149	ldlang.c	FUNCTION_162	FOR_1	IF_1
0x4009b3f	        0x488b4a40	            mov rcx, qword [rdx + 0x40] 	      7150	ldlang.c	FUNCTION_162	FOR_1	IF_1
0x4009b43	        0x48394840	            cmp qword [rax + 0x40], rcx 	      7150	ldlang.c	FUNCTION_162	FOR_1	IF_1
0x4009b47	            0x7508	                           jne 0x4009b51	      7150	ldlang.c	FUNCTION_162	FOR_1	IF_1
0x4009b49	        0x488b5248	            mov rdx, qword [rdx + 0x48] 	      7151	ldlang.c	FUNCTION_162	FOR_1	IF_1
0x4009b4d	        0x48895048	             mov qword [rax + 0x48], rdx	      7151	ldlang.c	FUNCTION_162	FOR_1	IF_1
0x4009b51	        0x488b4020	            mov rax, qword [rax + 0x20] 	      7144	ldlang.c	FUNCTION_162	FOR_1
0x4009b55	          0x4885c0	                           test rax, rax	      7142	ldlang.c	FUNCTION_162	FOR_1
0x4009b58	            0x75c7	                           jne 0x4009b21	      7142	ldlang.c	FUNCTION_162	FOR_1
0x4009b5a	    0x833d00000000	               cmp dword [0x04009b61], 0	      7378	ldlang.c	FUNCTION_163	IF_18
0x4009b61	            0x740a	                            je 0x4009b6d	      7378	ldlang.c	FUNCTION_163	IF_18
0x4009b63	      0xbf00000000	                              mov edi, 0	      6102	ldlang.c	FUNCTION_129	CALL_1
0x4009b68	      0xe87467ffff	             call sym.foreach_start_stop	      6102	ldlang.c	FUNCTION_129	CALL_1
0x4009b6d	     0xfb605000000	           movzx eax, byte [0x04009b74] 	      7383	ldlang.c	FUNCTION_163	IF_19	CALL_52
0x4009b74	          0x83e003	                              and eax, 3	      7383	ldlang.c	FUNCTION_163	IF_19	CALL_52
0x4009b77	            0x3c02	                               cmp al, 2	      7383	ldlang.c	FUNCTION_163	IF_19	CALL_52
0x4009b79	     0xf848b000000	                            je 0x4009c0a	      7383	ldlang.c	FUNCTION_163	IF_19	CALL_52
0x4009b7f	    0x488b05000000	            mov rax, qword [0x04009b86] 	      6114	ldlang.c	FUNCTION_130	FOR_1
0x4009b86	    0x488b98900000	            mov rbx, qword [rax + 0x90] 	      6114	ldlang.c	FUNCTION_130	FOR_1
0x4009b8d	          0x4885db	                           test rbx, rbx	      6114	ldlang.c	FUNCTION_130	FOR_1
0x4009b90	            0x7478	                            je 0x4009c0a	      6114	ldlang.c	FUNCTION_130	FOR_1
0x4009b92	    0x49c7c6ffffff	             mov r14, 0xffffffffffffffff	      6117	ldlang.c	FUNCTION_130	FOR_1	CALL_2
0x4009b99	    0x41bd00000000	                             mov r13d, 0	      6117	ldlang.c	FUNCTION_130	FOR_1	CALL_2
0x4009b9f	          0x4c8b23	                    mov r12, qword [rbx]	      6116	ldlang.c	FUNCTION_130	FOR_1
0x4009ba2	          0x4c89f1	                            mov rcx, r14	      6117	ldlang.c	FUNCTION_130	FOR_1	CALL_2
0x4009ba5	          0x4c89e7	                            mov rdi, r12	      6117	ldlang.c	FUNCTION_130	FOR_1	CALL_2
0x4009ba8	          0x4489e8	                           mov eax, r13d	      6117	ldlang.c	FUNCTION_130	FOR_1	CALL_2
0x4009bab	            0xf2ae	              repne scasb al, byte [rdi]	      6117	ldlang.c	FUNCTION_130	FOR_1	CALL_2
0x4009bad	          0x48f7d1	                                 not rcx	      6117	ldlang.c	FUNCTION_130	FOR_1	CALL_2
0x4009bb0	        0x488d7909	                      lea rdi, [rcx + 9]	      6117	ldlang.c	FUNCTION_130	FOR_1	CALL_2
0x4009bb4	      0xe800000000	                          call 0x4009bb9	      6117	ldlang.c	FUNCTION_130	FOR_1	CALL_2
0x4009bb9	          0x4889c5	                            mov rbp, rax	      6117	ldlang.c	FUNCTION_130	FOR_1	CALL_2
0x4009bbc	          0x4d89e0	                             mov r8, r12	        33	stdio2.h	FUNCTION_210	CALL_1
0x4009bbf	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_210	CALL_1
0x4009bc4	          0x4c89f2	                            mov rdx, r14	        33	stdio2.h	FUNCTION_210	CALL_1
0x4009bc7	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_210	CALL_1
0x4009bcc	          0x4889c7	                            mov rdi, rax	        33	stdio2.h	FUNCTION_210	CALL_1
0x4009bcf	          0x4489e8	                           mov eax, r13d	        33	stdio2.h	FUNCTION_210	CALL_1
0x4009bd2	      0xe800000000	                          call 0x4009bd7	        33	stdio2.h	FUNCTION_210	CALL_1
0x4009bd7	          0x4889de	                            mov rsi, rbx	      6120	ldlang.c	FUNCTION_130	FOR_1	CALL_3
0x4009bda	          0x4889ef	                            mov rdi, rbp	      6120	ldlang.c	FUNCTION_130	FOR_1	CALL_3
0x4009bdd	      0xe8df7effff	         call sym.lang_define_start_stop	      6120	ldlang.c	FUNCTION_130	FOR_1	CALL_3
0x4009be2	        0x488d7d01	                      lea rdi, [rbp + 1]	      6122	ldlang.c	FUNCTION_130	FOR_1	CALL_4
0x4009be6	    0xc745012e7369	         mov dword [rbp + 1], 0x7a69732e	        53	string3.h	FUNCTION_245	CALL_3
0x4009bed	        0xc6470465	                mov byte [rdi + 4], 0x65	        53	string3.h	FUNCTION_245	CALL_3
0x4009bf1	          0x4889de	                            mov rsi, rbx	      6123	ldlang.c	FUNCTION_130	FOR_1	CALL_5
0x4009bf4	      0xe8c87effff	         call sym.lang_define_start_stop	      6123	ldlang.c	FUNCTION_130	FOR_1	CALL_5
0x4009bf9	          0x4889ef	                            mov rdi, rbp	      6124	ldlang.c	FUNCTION_130	FOR_1	CALL_6
0x4009bfc	      0xe800000000	                          call 0x4009c01	      6124	ldlang.c	FUNCTION_130	FOR_1	CALL_6
0x4009c01	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      6114	ldlang.c	FUNCTION_130	FOR_1
0x4009c05	          0x4885db	                           test rbx, rbx	      6114	ldlang.c	FUNCTION_130	FOR_1
0x4009c08	            0x7595	                           jne 0x4009b9f	      6114	ldlang.c	FUNCTION_130	FOR_1
0x4009c0a	      0xe800000000	                          call 0x4009c0f	      7388	ldlang.c	FUNCTION_163	CALL_54
0x4009c0f	      0xbf50000000	                           mov edi, 0x50	      7784	ldlang.c	FUNCTION_185	CALL_1
0x4009c14	      0xe800000000	                          call 0x4009c19	      7784	ldlang.c	FUNCTION_185	CALL_1
0x4009c19	          0x4989c7	                            mov r15, rax	      7784	ldlang.c	FUNCTION_185	CALL_1
0x4009c1c	    0x4c8b2d000000	            mov r13, qword [0x04009c23] 	      7787	ldlang.c	FUNCTION_185	FOR_1
0x4009c23	          0x4d85ed	                           test r13, r13	      7787	ldlang.c	FUNCTION_185	FOR_1
0x4009c26	     0xf84c7010000	                            je 0x4009df3	      7787	ldlang.c	FUNCTION_185	FOR_1
0x4009c2c	      0xbb00000000	                              mov ebx, 0	      7787	ldlang.c	FUNCTION_185	FOR_1
0x4009c31	    0x41be0a000000	                           mov r14d, 0xa	      7787	ldlang.c	FUNCTION_185	FOR_1
0x4009c37	    0x4c8b25000000	            mov r12, qword [0x04009c3e] 	      7794	ldlang.c	FUNCTION_185	FOR_1	FOR_2
0x4009c3e	          0x4d85e4	                           test r12, r12	      7794	ldlang.c	FUNCTION_185	FOR_1	FOR_2
0x4009c41	     0xf84f7000000	                            je 0x4009d3e	      7794	ldlang.c	FUNCTION_185	FOR_1	FOR_2
0x4009c47	      0xbd00000000	                              mov ebp, 0	      7794	ldlang.c	FUNCTION_185	FOR_1	FOR_2
0x4009c4c	    0x4183bc248400	               cmp dword [r12 + 0x84], 0	      7800	ldlang.c	FUNCTION_185	FOR_1	FOR_2	IF_1
0x4009c55	     0xf88d3000000	                            js 0x4009d2e	      7800	ldlang.c	FUNCTION_185	FOR_1	FOR_2	IF_1
0x4009c5b	      0x498b442470	            mov rax, qword [r12 + 0x70] 	      7803	ldlang.c	FUNCTION_185	FOR_1	FOR_2
0x4009c60	        0x48890424	                    mov qword [rsp], rax	      7803	ldlang.c	FUNCTION_185	FOR_1	FOR_2
0x4009c64	          0x4885c0	                           test rax, rax	      7804	ldlang.c	FUNCTION_185	FOR_1	FOR_2	IF_2
0x4009c67	     0xf85620a0000	                           jne 0x400a6cf	      7804	ldlang.c	FUNCTION_185	FOR_1	FOR_2	IF_2
0x4009c6d	    0x4183bc248c00	               cmp dword [r12 + 0x8c], 2	      7808	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_3
0x4009c76	     0xf84b2000000	                            je 0x4009d2e	      7808	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_3
0x4009c7c	      0x498b442438	            mov rax, qword [r12 + 0x38] 	      7809	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_3
0x4009c81	          0x4885c0	                           test rax, rax	      7809	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_3
0x4009c84	     0xf84a4000000	                            je 0x4009d2e	      7809	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_3
0x4009c8a	        0xf6402001	               test byte [rax + 0x20], 1	      7810	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_3
0x4009c8e	     0xf849a000000	                            je 0x4009d2e	      7810	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_3
0x4009c94	      0x49837d1003	               cmp qword [r13 + 0x10], 3	      7814	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_4
0x4009c99	     0xf848f000000	                            je 0x4009d2e	      7814	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_4
0x4009c9f	        0x48891c24	                    mov qword [rsp], rbx	      7817	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5
0x4009ca3	          0x4885db	                           test rbx, rbx	      7817	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5
0x4009ca6	            0x7530	                           jne 0x4009cd8	      7817	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5
0x4009ca8	          0x4c89e0	                            mov rax, r12	      7829	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5	FOR_3
0x4009cab	          0x4d85e4	                           test r12, r12	      7829	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5	FOR_3
0x4009cae	            0x750e	                           jne 0x4009cbe	      7829	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5	FOR_3
0x4009cb0	      0xe9e8090000	                           jmp 0x400a69d	      7829	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5	FOR_3
0x4009cb5	        0x488b5070	            mov rdx, qword [rax + 0x70] 	      7830	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5	FOR_3	IF_6
0x4009cb9	          0x4885d2	                           test rdx, rdx	      7830	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5	FOR_3	IF_6
0x4009cbc	            0x750e	                           jne 0x4009ccc	      7830	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5	FOR_3	IF_6
0x4009cbe	        0x488b4020	            mov rax, qword [rax + 0x20] 	      7829	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5	FOR_3
0x4009cc2	          0x4885c0	                           test rax, rax	      7829	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5	FOR_3
0x4009cc5	            0x75ee	                           jne 0x4009cb5	      7829	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5	FOR_3
0x4009cc7	      0xe9d1090000	                           jmp 0x400a69d	      7829	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5	FOR_3
0x4009ccc	          0x4889d3	                            mov rbx, rdx	      7830	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5	FOR_3	IF_6
0x4009ccf	          0x4885db	                           test rbx, rbx	      7844	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4
0x4009cd2	            0x745a	                            je 0x4009d2e	      7844	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4
0x4009cd4	        0x48891c24	                    mov qword [rsp], rbx	      7844	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4
0x4009cd8	        0x488b1c24	                    mov rbx, qword [rsp]	      7817	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5
0x4009cdc	        0x498b7508	                mov rsi, qword [r13 + 8]	      7846	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4	IF_9
0x4009ce0	        0x488b7b08	                mov rdi, qword [rbx + 8]	      7846	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4	IF_9
0x4009ce4	      0xe800000000	                          call 0x4009ce9	      7846	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4	IF_9
0x4009ce9	            0x85c0	                           test eax, eax	      7846	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4	IF_9
0x4009ceb	            0x752f	                           jne 0x4009d1c	      7846	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4	IF_9
0x4009ced	          0x4139ee	                           cmp r14d, ebp	      7848	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4	IF_9	IF_10
0x4009cf0	            0x7715	                            ja 0x4009d07	      7848	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4	IF_9	IF_10
0x4009cf2	          0x4501f6	                          add r14d, r14d	      7850	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4	IF_9	IF_10
0x4009cf5	          0x4489f6	                           mov esi, r14d	      7851	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4	IF_9	IF_10	CALL_4
0x4009cf8	        0x48c1e603	                              shl rsi, 3	      7851	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4	IF_9	IF_10	CALL_4
0x4009cfc	          0x4c89ff	                            mov rdi, r15	      7851	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4	IF_9	IF_10	CALL_4
0x4009cff	      0xe800000000	                          call 0x4009d04	      7851	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4	IF_9	IF_10	CALL_4
0x4009d04	          0x4989c7	                            mov r15, rax	      7851	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4	IF_9	IF_10	CALL_4
0x4009d07	      0x498b542438	            mov rdx, qword [r12 + 0x38] 	      7854	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4	IF_9
0x4009d0c	            0x89e8	                            mov eax, ebp	      7854	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4	IF_9
0x4009d0e	        0x498914c7	            mov qword [r15 + rax*8], rdx	      7854	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4	IF_9
0x4009d12	          0x83c501	                              add ebp, 1	      7855	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4	IF_9
0x4009d15	    0xc74310010000	               mov dword [rbx + 0x10], 1	      7856	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4	IF_9
0x4009d1c	          0x488b1b	                    mov rbx, qword [rbx]	      7844	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4
0x4009d1f	          0x4885db	                           test rbx, rbx	      7844	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4
0x4009d22	            0x75b8	                           jne 0x4009cdc	      7844	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4
0x4009d24	        0x488b1c24	                    mov rbx, qword [rsp]	      7844	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4
0x4009d28	            0xeb04	                           jmp 0x4009d2e	      7844	ldlang.c	FUNCTION_185	FOR_1	FOR_2	FOR_4
0x4009d2a	        0x488b1c24	                    mov rbx, qword [rsp]	      7805	ldlang.c	FUNCTION_185	FOR_1	FOR_2	IF_2
0x4009d2e	      0x4d8b642420	            mov r12, qword [r12 + 0x20] 	      7796	ldlang.c	FUNCTION_185	FOR_1	FOR_2
0x4009d33	          0x4d85e4	                           test r12, r12	      7794	ldlang.c	FUNCTION_185	FOR_1	FOR_2
0x4009d36	     0xf8510ffffff	                           jne 0x4009c4c	      7794	ldlang.c	FUNCTION_185	FOR_1	FOR_2
0x4009d3c	            0xeb05	                           jmp 0x4009d43	      7794	ldlang.c	FUNCTION_185	FOR_1	FOR_2
0x4009d3e	      0xbd00000000	                              mov ebp, 0	      7793	ldlang.c	FUNCTION_185	FOR_1
0x4009d43	        0x498b7d28	            mov rdi, qword [r13 + 0x28] 	      7861	ldlang.c	FUNCTION_185	FOR_1	IF_11
0x4009d47	    0x41bc00000000	                             mov r12d, 0	      7862	ldlang.c	FUNCTION_185	FOR_1	IF_11
0x4009d4d	          0x4885ff	                           test rdi, rdi	      7861	ldlang.c	FUNCTION_185	FOR_1	IF_11
0x4009d50	            0x7412	                            je 0x4009d64	      7861	ldlang.c	FUNCTION_185	FOR_1	IF_11
0x4009d52	      0xba00000000	                              mov edx, 0	      7864	ldlang.c	FUNCTION_185	FOR_1	CALL_5
0x4009d57	      0xbe00000000	                              mov esi, 0	      7864	ldlang.c	FUNCTION_185	FOR_1	CALL_5
0x4009d5c	      0xe800000000	                          call 0x4009d61	      7864	ldlang.c	FUNCTION_185	FOR_1	CALL_5
0x4009d61	          0x4189c4	                           mov r12d, eax	      7864	ldlang.c	FUNCTION_185	FOR_1	CALL_5
0x4009d64	        0x498b7d20	            mov rdi, qword [r13 + 0x20] 	      7866	ldlang.c	FUNCTION_185	FOR_1	IF_12
0x4009d68	    0x41b900000000	                              mov r9d, 0	      7867	ldlang.c	FUNCTION_185	FOR_1	IF_12
0x4009d6e	          0x4885ff	                           test rdi, rdi	      7866	ldlang.c	FUNCTION_185	FOR_1	IF_12
0x4009d71	            0x7412	                            je 0x4009d85	      7866	ldlang.c	FUNCTION_185	FOR_1	IF_12
0x4009d73	      0xba00000000	                              mov edx, 0	      7869	ldlang.c	FUNCTION_185	FOR_1	CALL_6
0x4009d78	      0xbe00000000	                              mov esi, 0	      7869	ldlang.c	FUNCTION_185	FOR_1	CALL_6
0x4009d7d	      0xe800000000	                          call 0x4009d82	      7869	ldlang.c	FUNCTION_185	FOR_1	CALL_6
0x4009d82	          0x4989c1	                             mov r9, rax	      7869	ldlang.c	FUNCTION_185	FOR_1	CALL_6
0x4009d85	      0x49837d2000	               cmp qword [r13 + 0x20], 0	      7871	ldlang.c	FUNCTION_185	FOR_1	IF_13	CALL_7
0x4009d8a	        0x410f95c0	                               setne r8b	      7871	ldlang.c	FUNCTION_185	FOR_1	IF_13	CALL_7
0x4009d8e	        0x450fb6c0	                          movzx r8d, r8b	      7871	ldlang.c	FUNCTION_185	FOR_1	IF_13	CALL_7
0x4009d92	      0x49837d2800	               cmp qword [r13 + 0x28], 0	      7871	ldlang.c	FUNCTION_185	FOR_1	IF_13	CALL_7
0x4009d97	           0xf95c2	                                setne dl	      7871	ldlang.c	FUNCTION_185	FOR_1	IF_13	CALL_7
0x4009d9a	           0xfb6d2	                           movzx edx, dl	      7871	ldlang.c	FUNCTION_185	FOR_1	IF_13	CALL_7
0x4009d9d	        0x498b7510	            mov rsi, qword [r13 + 0x10] 	      7871	ldlang.c	FUNCTION_185	FOR_1	IF_13	CALL_7
0x4009da1	            0x4157	                                push r15	      7871	ldlang.c	FUNCTION_185	FOR_1	IF_13	CALL_7
0x4009da3	              0x55	                                push rbp	      7871	ldlang.c	FUNCTION_185	FOR_1	IF_13	CALL_7
0x4009da4	        0x418b451c	            mov eax, dword [r13 + 0x1c] 	      7871	ldlang.c	FUNCTION_185	FOR_1	IF_13	CALL_7
0x4009da8	              0x50	                                push rax	      7871	ldlang.c	FUNCTION_185	FOR_1	IF_13	CALL_7
0x4009da9	        0x418b4518	            mov eax, dword [r13 + 0x18] 	      7871	ldlang.c	FUNCTION_185	FOR_1	IF_13	CALL_7
0x4009dad	              0x50	                                push rax	      7871	ldlang.c	FUNCTION_185	FOR_1	IF_13	CALL_7
0x4009dae	          0x4489e1	                           mov ecx, r12d	      7871	ldlang.c	FUNCTION_185	FOR_1	IF_13	CALL_7
0x4009db1	    0x488b3d000000	            mov rdi, qword [0x04009db8] 	      7871	ldlang.c	FUNCTION_185	FOR_1	IF_13	CALL_7
0x4009db8	      0xe800000000	                          call 0x4009dbd	      7871	ldlang.c	FUNCTION_185	FOR_1	IF_13	CALL_7
0x4009dbd	        0x4883c420	                           add rsp, 0x20	      7871	ldlang.c	FUNCTION_185	FOR_1	IF_13	CALL_7
0x4009dc1	            0x85c0	                           test eax, eax	      7871	ldlang.c	FUNCTION_185	FOR_1	IF_13	CALL_7
0x4009dc3	            0x7521	                           jne 0x4009de6	      7871	ldlang.c	FUNCTION_185	FOR_1	IF_13	CALL_7
0x4009dc5	      0xba05000000	                              mov edx, 5	      7874	ldlang.c	FUNCTION_185	FOR_1	CALL_9
0x4009dca	      0xbe00000000	                              mov esi, 0	      7874	ldlang.c	FUNCTION_185	FOR_1	CALL_9
0x4009dcf	      0xbf00000000	                              mov edi, 0	      7874	ldlang.c	FUNCTION_185	FOR_1	CALL_9
0x4009dd4	      0xe800000000	                          call 0x4009dd9	      7874	ldlang.c	FUNCTION_185	FOR_1	CALL_9
0x4009dd9	          0x4889c7	                            mov rdi, rax	      7874	ldlang.c	FUNCTION_185	FOR_1	CALL_9
0x4009ddc	      0xb800000000	                              mov eax, 0	      7874	ldlang.c	FUNCTION_185	FOR_1	CALL_9
0x4009de1	      0xe800000000	                          call 0x4009de6	      7874	ldlang.c	FUNCTION_185	FOR_1	CALL_9
0x4009de6	        0x4d8b6d00	                    mov r13, qword [r13]	      7787	ldlang.c	FUNCTION_185	FOR_1
0x4009dea	          0x4d85ed	                           test r13, r13	      7787	ldlang.c	FUNCTION_185	FOR_1
0x4009ded	     0xf8544feffff	                           jne 0x4009c37	      7787	ldlang.c	FUNCTION_185	FOR_1
0x4009df3	          0x4c89ff	                            mov rdi, r15	      7877	ldlang.c	FUNCTION_185	CALL_10
0x4009df6	      0xe800000000	                          call 0x4009dfb	      7877	ldlang.c	FUNCTION_185	CALL_10
0x4009dfb	    0x4c8b25000000	            mov r12, qword [0x04009e02] 	      7880	ldlang.c	FUNCTION_185	FOR_5
0x4009e02	          0x4d85e4	                           test r12, r12	      7880	ldlang.c	FUNCTION_185	FOR_5
0x4009e05	            0x747e	                            je 0x4009e85	      7880	ldlang.c	FUNCTION_185	FOR_5
0x4009e07	    0x4183bc248400	               cmp dword [r12 + 0x84], 0	      7886	ldlang.c	FUNCTION_185	FOR_5	IF_14
0x4009e10	            0x7869	                            js 0x4009e7b	      7886	ldlang.c	FUNCTION_185	FOR_5	IF_14
0x4009e12	    0x49837c243800	               cmp qword [r12 + 0x38], 0	      7887	ldlang.c	FUNCTION_185	FOR_5	IF_14
0x4009e18	            0x7461	                            je 0x4009e7b	      7887	ldlang.c	FUNCTION_185	FOR_5	IF_14
0x4009e1a	      0x498b5c2470	            mov rbx, qword [r12 + 0x70] 	      7890	ldlang.c	FUNCTION_185	FOR_5	FOR_6
0x4009e1f	          0x4885db	                           test rbx, rbx	      7890	ldlang.c	FUNCTION_185	FOR_5	FOR_6
0x4009e22	            0x7457	                            je 0x4009e7b	      7890	ldlang.c	FUNCTION_185	FOR_5	FOR_6
0x4009e24	        0x837b1000	               cmp dword [rbx + 0x10], 0	      7893	ldlang.c	FUNCTION_185	FOR_5	FOR_6	IF_15
0x4009e28	            0x7549	                           jne 0x4009e73	      7893	ldlang.c	FUNCTION_185	FOR_5	FOR_6	IF_15
0x4009e2a	        0x488b6b08	                mov rbp, qword [rbx + 8]	      7893	ldlang.c	FUNCTION_185	FOR_5	FOR_6	IF_15
0x4009e2e	      0xbf00000000	                              mov edi, 0	      7893	ldlang.c	FUNCTION_185	FOR_5	FOR_6	IF_15
0x4009e33	      0xb905000000	                              mov ecx, 5	      7893	ldlang.c	FUNCTION_185	FOR_5	FOR_6	IF_15
0x4009e38	          0x4889ee	                            mov rsi, rbp	      7893	ldlang.c	FUNCTION_185	FOR_5	FOR_6	IF_15
0x4009e3b	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      7893	ldlang.c	FUNCTION_185	FOR_5	FOR_6	IF_15
0x4009e3d	           0xf97c2	                                 seta dl	      7893	ldlang.c	FUNCTION_185	FOR_5	FOR_6	IF_15
0x4009e40	           0xf92c0	                                 setb al	      7893	ldlang.c	FUNCTION_185	FOR_5	FOR_6	IF_15
0x4009e43	            0x38c2	                              cmp dl, al	      7893	ldlang.c	FUNCTION_185	FOR_5	FOR_6	IF_15
0x4009e45	            0x742c	                            je 0x4009e73	      7893	ldlang.c	FUNCTION_185	FOR_5	FOR_6	IF_15
0x4009e47	      0x4d8b6c2430	            mov r13, qword [r12 + 0x30] 	      7894	ldlang.c	FUNCTION_185	FOR_5	FOR_6	IF_15	CALL_12
0x4009e4c	      0xba05000000	                              mov edx, 5	      7894	ldlang.c	FUNCTION_185	FOR_5	FOR_6	IF_15	CALL_12
0x4009e51	      0xbe00000000	                              mov esi, 0	      7894	ldlang.c	FUNCTION_185	FOR_5	FOR_6	IF_15	CALL_12
0x4009e56	      0xbf00000000	                              mov edi, 0	      7894	ldlang.c	FUNCTION_185	FOR_5	FOR_6	IF_15	CALL_12
0x4009e5b	      0xe800000000	                          call 0x4009e60	      7894	ldlang.c	FUNCTION_185	FOR_5	FOR_6	IF_15	CALL_12
0x4009e60	          0x4889ea	                            mov rdx, rbp	      7894	ldlang.c	FUNCTION_185	FOR_5	FOR_6	IF_15	CALL_12
0x4009e63	          0x4c89ee	                            mov rsi, r13	      7894	ldlang.c	FUNCTION_185	FOR_5	FOR_6	IF_15	CALL_12
0x4009e66	          0x4889c7	                            mov rdi, rax	      7894	ldlang.c	FUNCTION_185	FOR_5	FOR_6	IF_15	CALL_12
0x4009e69	      0xb800000000	                              mov eax, 0	      7894	ldlang.c	FUNCTION_185	FOR_5	FOR_6	IF_15	CALL_12
0x4009e6e	      0xe800000000	                          call 0x4009e73	      7894	ldlang.c	FUNCTION_185	FOR_5	FOR_6	IF_15	CALL_12
0x4009e73	          0x488b1b	                    mov rbx, qword [rbx]	      7892	ldlang.c	FUNCTION_185	FOR_5	FOR_6
0x4009e76	          0x4885db	                           test rbx, rbx	      7890	ldlang.c	FUNCTION_185	FOR_5	FOR_6
0x4009e79	            0x75a9	                           jne 0x4009e24	      7890	ldlang.c	FUNCTION_185	FOR_5	FOR_6
0x4009e7b	      0x4d8b642420	            mov r12, qword [r12 + 0x20] 	      7882	ldlang.c	FUNCTION_185	FOR_5
0x4009e80	          0x4d85e4	                           test r12, r12	      7880	ldlang.c	FUNCTION_185	FOR_5
0x4009e83	            0x7582	                           jne 0x4009e07	      7880	ldlang.c	FUNCTION_185	FOR_5
0x4009e85	    0xf60500000000	           test byte [0x04009e8c], 0x10 	      7395	ldlang.c	FUNCTION_163	IF_20	CALL_56
0x4009e8c	            0x743a	                            je 0x4009ec8	      7395	ldlang.c	FUNCTION_163	IF_20	CALL_56
0x4009e8e	     0xfb605000000	           movzx eax, byte [0x04009e95] 	      7395	ldlang.c	FUNCTION_163	IF_20	CALL_56
0x4009e95	          0x83e003	                              and eax, 3	      7395	ldlang.c	FUNCTION_163	IF_20	CALL_56
0x4009e98	            0x3c02	                               cmp al, 2	      7395	ldlang.c	FUNCTION_163	IF_20	CALL_56
0x4009e9a	            0x742c	                            je 0x4009ec8	      7395	ldlang.c	FUNCTION_163	IF_20	CALL_56
0x4009e9c	    0xc74424500000	               mov dword [rsp + 0x50], 0	      6916	ldlang.c	FUNCTION_154
0x4009ea4	      0x488d542450	                   lea rdx, [rsp + 0x50]	      6920	ldlang.c	FUNCTION_154	CALL_1
0x4009ea9	      0xbe00000000	                              mov esi, 0	      6920	ldlang.c	FUNCTION_154	CALL_1
0x4009eae	    0x488b3d000000	            mov rdi, qword [0x04009eb5] 	      6920	ldlang.c	FUNCTION_154	CALL_1
0x4009eb5	      0xe82fcbffff	     call sym.lang_find_relro_sections_1	      6920	ldlang.c	FUNCTION_154	CALL_1
0x4009eba	      0x837c245000	               cmp dword [rsp + 0x50], 0	      6923	ldlang.c	FUNCTION_154	IF_1
0x4009ebf	            0x7507	                           jne 0x4009ec8	      6923	ldlang.c	FUNCTION_154	IF_1
0x4009ec1	    0x802500000000	             and byte [0x04009ec8], 0xef	      6924	ldlang.c	FUNCTION_154	IF_1
0x4009ec8	    0x833d00000000	               cmp dword [0x04009ecf], 1	      7399	ldlang.c	FUNCTION_163	CALL_58
0x4009ecf	        0x400f97c6	                                seta sil	      7399	ldlang.c	FUNCTION_163	CALL_58
0x4009ed3	        0x400fb6f6	                          movzx esi, sil	      7399	ldlang.c	FUNCTION_163	CALL_58
0x4009ed7	      0xbf00000000	                              mov edi, 0	      7399	ldlang.c	FUNCTION_163	CALL_58
0x4009edc	      0xe800000000	                          call 0x4009ee1	      7399	ldlang.c	FUNCTION_163	CALL_58
0x4009ee1	      0xe800000000	                          call 0x4009ee6	      7403	ldlang.c	FUNCTION_163	CALL_59
0x4009ee6	      0xbf00000000	                              mov edi, 0	      6165	ldlang.c	FUNCTION_132	CALL_1
0x4009eeb	      0xe8f163ffff	             call sym.foreach_start_stop	      6165	ldlang.c	FUNCTION_132	CALL_1
0x4009ef0	      0xbf04000000	                              mov edi, 4	      7410	ldlang.c	FUNCTION_163	CALL_61
0x4009ef5	      0xe800000000	                          call 0x4009efa	      7410	ldlang.c	FUNCTION_163	CALL_61
0x4009efa	      0xe800000000	                          call 0x4009eff	      7412	ldlang.c	FUNCTION_163	CALL_62
0x4009eff	      0xe800000000	                          call 0x4009f04	      7415	ldlang.c	FUNCTION_163	CALL_63
0x4009f04	    0x803d00000000	                cmp byte [0x04009f0b], 0	      7418	ldlang.c	FUNCTION_163	IF_21
0x4009f0b	     0xf84cd030000	                            je 0x400a2de	      7418	ldlang.c	FUNCTION_163	IF_21
0x4009f11	    0x488b3d000000	            mov rdi, qword [0x04009f18] 	      4803	ldlang.c	FUNCTION_112	CALL_1
0x4009f18	      0xe800000000	                          call 0x4009f1d	      4803	ldlang.c	FUNCTION_112	CALL_1
0x4009f1d	          0x8d48ff	                      lea ecx, [rax - 1]	      4804	ldlang.c	FUNCTION_112
0x4009f20	      0xb801000000	                              mov eax, 1	      4804	ldlang.c	FUNCTION_112
0x4009f25	          0x48d3e0	                             shl rax, cl	      4804	ldlang.c	FUNCTION_112
0x4009f28	      0x488d6c00ff	                lea rbp, [rax + rax - 1]	      4804	ldlang.c	FUNCTION_112
0x4009f2d	    0x488b05000000	            mov rax, qword [0x04009f34] 	      4805	ldlang.c	FUNCTION_112	FOR_1
0x4009f34	    0x488b98900000	            mov rbx, qword [rax + 0x90] 	      4805	ldlang.c	FUNCTION_112	FOR_1
0x4009f3b	          0x4885db	                           test rbx, rbx	      4805	ldlang.c	FUNCTION_112	FOR_1
0x4009f3e	     0xf8490000000	                            je 0x4009fd4	      4805	ldlang.c	FUNCTION_112	FOR_1
0x4009f44	        0xf6432001	               test byte [rbx + 0x20], 1	      4806	ldlang.c	FUNCTION_112	FOR_1	IF_1
0x4009f48	            0x747d	                            je 0x4009fc7	      4806	ldlang.c	FUNCTION_112	FOR_1	IF_1
0x4009f4a	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	      4808	ldlang.c	FUNCTION_112	FOR_1	IF_1
0x4009f4e	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      4808	ldlang.c	FUNCTION_112	FOR_1	IF_1
0x4009f52	        0x488d1401	                    lea rdx, [rcx + rax]	      4808	ldlang.c	FUNCTION_112	FOR_1	IF_1
0x4009f56	          0x4821ea	                            and rdx, rbp	      4809	ldlang.c	FUNCTION_112	FOR_1	IF_1	IF_2
0x4009f59	            0x7431	                            je 0x4009f8c	      4809	ldlang.c	FUNCTION_112	FOR_1	IF_1	IF_2
0x4009f5b	          0x4821e9	                            and rcx, rbp	      4809	ldlang.c	FUNCTION_112	FOR_1	IF_1	IF_2
0x4009f5e	          0x4839ca	                            cmp rdx, rcx	      4809	ldlang.c	FUNCTION_112	FOR_1	IF_1	IF_2
0x4009f61	            0x7329	                           jae 0x4009f8c	      4809	ldlang.c	FUNCTION_112	FOR_1	IF_1	IF_2
0x4009f63	          0x4c8b23	                    mov r12, qword [rbx]	      4810	ldlang.c	FUNCTION_112	FOR_1	IF_1	IF_2	CALL_3
0x4009f66	      0xba05000000	                              mov edx, 5	      4810	ldlang.c	FUNCTION_112	FOR_1	IF_1	IF_2	CALL_3
0x4009f6b	      0xbe00000000	                              mov esi, 0	      4810	ldlang.c	FUNCTION_112	FOR_1	IF_1	IF_2	CALL_3
0x4009f70	      0xbf00000000	                              mov edi, 0	      4810	ldlang.c	FUNCTION_112	FOR_1	IF_1	IF_2	CALL_3
0x4009f75	      0xe800000000	                          call 0x4009f7a	      4810	ldlang.c	FUNCTION_112	FOR_1	IF_1	IF_2	CALL_3
0x4009f7a	          0x4c89e6	                            mov rsi, r12	      4810	ldlang.c	FUNCTION_112	FOR_1	IF_1	IF_2	CALL_3
0x4009f7d	          0x4889c7	                            mov rdi, rax	      4810	ldlang.c	FUNCTION_112	FOR_1	IF_1	IF_2	CALL_3
0x4009f80	      0xb800000000	                              mov eax, 0	      4810	ldlang.c	FUNCTION_112	FOR_1	IF_1	IF_2	CALL_3
0x4009f85	      0xe800000000	                          call 0x4009f8a	      4810	ldlang.c	FUNCTION_112	FOR_1	IF_1	IF_2	CALL_3
0x4009f8a	            0xeb3b	                           jmp 0x4009fc7	      4810	ldlang.c	FUNCTION_112	FOR_1	IF_1	IF_2	CALL_3
0x4009f8c	        0x488b5330	            mov rdx, qword [rbx + 0x30] 	      4814	ldlang.c	FUNCTION_112	FOR_1	IF_1	ELSE_1
0x4009f90	          0x4801d0	                            add rax, rdx	      4814	ldlang.c	FUNCTION_112	FOR_1	IF_1	ELSE_1
0x4009f93	          0x4821e8	                            and rax, rbp	      4815	ldlang.c	FUNCTION_112	FOR_1	IF_1	ELSE_1	IF_3
0x4009f96	            0x742f	                            je 0x4009fc7	      4815	ldlang.c	FUNCTION_112	FOR_1	IF_1	ELSE_1	IF_3
0x4009f98	          0x4821ea	                            and rdx, rbp	      4815	ldlang.c	FUNCTION_112	FOR_1	IF_1	ELSE_1	IF_3
0x4009f9b	          0x4839d0	                            cmp rax, rdx	      4815	ldlang.c	FUNCTION_112	FOR_1	IF_1	ELSE_1	IF_3
0x4009f9e	            0x7327	                           jae 0x4009fc7	      4815	ldlang.c	FUNCTION_112	FOR_1	IF_1	ELSE_1	IF_3
0x4009fa0	          0x4c8b23	                    mov r12, qword [rbx]	      4816	ldlang.c	FUNCTION_112	FOR_1	IF_1	ELSE_1	IF_3	CALL_5
0x4009fa3	      0xba05000000	                              mov edx, 5	      4816	ldlang.c	FUNCTION_112	FOR_1	IF_1	ELSE_1	IF_3	CALL_5
0x4009fa8	      0xbe00000000	                              mov esi, 0	      4816	ldlang.c	FUNCTION_112	FOR_1	IF_1	ELSE_1	IF_3	CALL_5
0x4009fad	      0xbf00000000	                              mov edi, 0	      4816	ldlang.c	FUNCTION_112	FOR_1	IF_1	ELSE_1	IF_3	CALL_5
0x4009fb2	      0xe800000000	                          call 0x4009fb7	      4816	ldlang.c	FUNCTION_112	FOR_1	IF_1	ELSE_1	IF_3	CALL_5
0x4009fb7	          0x4c89e6	                            mov rsi, r12	      4816	ldlang.c	FUNCTION_112	FOR_1	IF_1	ELSE_1	IF_3	CALL_5
0x4009fba	          0x4889c7	                            mov rdi, rax	      4816	ldlang.c	FUNCTION_112	FOR_1	IF_1	ELSE_1	IF_3	CALL_5
0x4009fbd	      0xb800000000	                              mov eax, 0	      4816	ldlang.c	FUNCTION_112	FOR_1	IF_1	ELSE_1	IF_3	CALL_5
0x4009fc2	      0xe800000000	                          call 0x4009fc7	      4816	ldlang.c	FUNCTION_112	FOR_1	IF_1	ELSE_1	IF_3	CALL_5
0x4009fc7	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      4805	ldlang.c	FUNCTION_112	FOR_1
0x4009fcb	          0x4885db	                           test rbx, rbx	      4805	ldlang.c	FUNCTION_112	FOR_1
0x4009fce	     0xf8570ffffff	                           jne 0x4009f44	      4805	ldlang.c	FUNCTION_112	FOR_1
0x4009fd4	    0x488b05000000	            mov rax, qword [0x04009fdb] 	      4821	ldlang.c	FUNCTION_112	IF_4
0x4009fdb	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      4821	ldlang.c	FUNCTION_112	IF_4
0x4009fe1	          0x83f801	                              cmp eax, 1	      4821	ldlang.c	FUNCTION_112	IF_4
0x4009fe4	     0xf86f4020000	                           jbe 0x400a2de	      4821	ldlang.c	FUNCTION_112	IF_4
0x4009fea	            0x89c0	                            mov eax, eax	      4825	ldlang.c	FUNCTION_112	CALL_6
0x4009fec	        0x48c1e004	                              shl rax, 4	      4825	ldlang.c	FUNCTION_112	CALL_6
0x4009ff0	          0x4889c7	                            mov rdi, rax	      4825	ldlang.c	FUNCTION_112	CALL_6
0x4009ff3	      0xe800000000	                          call 0x4009ff8	      4825	ldlang.c	FUNCTION_112	CALL_6
0x4009ff8	          0x4989c5	                            mov r13, rax	      4825	ldlang.c	FUNCTION_112	CALL_6
0x4009ffb	    0x488b05000000	            mov rax, qword [0x0400a002] 	      4829	ldlang.c	FUNCTION_112	FOR_2
0x400a002	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      4829	ldlang.c	FUNCTION_112	FOR_2
0x400a009	          0x4885c0	                           test rax, rax	      4829	ldlang.c	FUNCTION_112	FOR_2
0x400a00c	            0x7449	                            je 0x400a057	      4829	ldlang.c	FUNCTION_112	FOR_2
0x400a00e	      0xbb00000000	                              mov ebx, 0	      4829	ldlang.c	FUNCTION_112	FOR_2
0x400a013	          0x8b5020	            mov edx, dword [rax + 0x20] 	      4831	ldlang.c	FUNCTION_112	FOR_2	IF_5
0x400a016	          0xf6c201	                              test dl, 1	      4831	ldlang.c	FUNCTION_112	FOR_2	IF_5
0x400a019	            0x742d	                            je 0x400a048	      4831	ldlang.c	FUNCTION_112	FOR_2	IF_5
0x400a01b	    0x81e202040000	                          and edx, 0x402	      4831	ldlang.c	FUNCTION_112	FOR_2	IF_5
0x400a021	    0x81fa00040000	                          cmp edx, 0x400	      4831	ldlang.c	FUNCTION_112	FOR_2	IF_5
0x400a027	            0x741f	                            je 0x400a048	      4831	ldlang.c	FUNCTION_112	FOR_2	IF_5
0x400a029	      0x4883783800	               cmp qword [rax + 0x38], 0	      4832	ldlang.c	FUNCTION_112	FOR_2	IF_5
0x400a02e	            0x7418	                            je 0x400a048	      4832	ldlang.c	FUNCTION_112	FOR_2	IF_5
0x400a030	          0x4889da	                            mov rdx, rbx	      4835	ldlang.c	FUNCTION_112	FOR_2
0x400a033	        0x48c1e204	                              shl rdx, 4	      4835	ldlang.c	FUNCTION_112	FOR_2
0x400a037	          0x4c01ea	                            add rdx, r13	      4835	ldlang.c	FUNCTION_112	FOR_2
0x400a03a	          0x488902	                    mov qword [rdx], rax	      4835	ldlang.c	FUNCTION_112	FOR_2
0x400a03d	    0xc74208000000	                  mov dword [rdx + 8], 0	      4836	ldlang.c	FUNCTION_112	FOR_2
0x400a044	        0x4883c301	                              add rbx, 1	      4837	ldlang.c	FUNCTION_112	FOR_2
0x400a048	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4829	ldlang.c	FUNCTION_112	FOR_2
0x400a04c	          0x4885c0	                           test rax, rax	      4829	ldlang.c	FUNCTION_112	FOR_2
0x400a04f	            0x75c2	                           jne 0x400a013	      4829	ldlang.c	FUNCTION_112	FOR_2
0x400a051	        0x4883fb01	                              cmp rbx, 1	      4840	ldlang.c	FUNCTION_112	IF_6
0x400a055	            0x770d	                            ja 0x400a064	      4840	ldlang.c	FUNCTION_112	IF_6
0x400a057	          0x4c89ef	                            mov rdi, r13	      4842	ldlang.c	FUNCTION_112	IF_6	CALL_7
0x400a05a	      0xe800000000	                          call 0x400a05f	      4842	ldlang.c	FUNCTION_112	IF_6	CALL_7
0x400a05f	      0xe97a020000	                           jmp 0x400a2de	      4842	ldlang.c	FUNCTION_112	IF_6	CALL_7
0x400a064	      0xb900000000	                              mov ecx, 0	      4846	ldlang.c	FUNCTION_112	CALL_8
0x400a069	      0xba10000000	                           mov edx, 0x10	      4846	ldlang.c	FUNCTION_112	CALL_8
0x400a06e	          0x4889de	                            mov rsi, rbx	      4846	ldlang.c	FUNCTION_112	CALL_8
0x400a071	          0x4c89ef	                            mov rdi, r13	      4846	ldlang.c	FUNCTION_112	CALL_8
0x400a074	      0xe800000000	                          call 0x400a079	      4846	ldlang.c	FUNCTION_112	CALL_8
0x400a079	          0x4885db	                           test rbx, rbx	      4850	ldlang.c	FUNCTION_112	FOR_3
0x400a07c	     0xf845e060000	                            je 0x400a6e0	      4850	ldlang.c	FUNCTION_112	FOR_3
0x400a082	          0x4c89ed	                            mov rbp, r13	      4850	ldlang.c	FUNCTION_112	FOR_3
0x400a085	    0x48c704240000	                      mov qword [rsp], 0	      4850	ldlang.c	FUNCTION_112	FOR_3
0x400a08d	    0x48c744240800	                  mov qword [rsp + 8], 0	      4850	ldlang.c	FUNCTION_112	FOR_3
0x400a096	      0xb800000000	                              mov eax, 0	      4850	ldlang.c	FUNCTION_112	FOR_3
0x400a09b	    0x41be00000000	                             mov r14d, 0	      4850	ldlang.c	FUNCTION_112	FOR_3
0x400a0a1	      0x48896c2418	             mov qword [rsp + 0x18], rbp	      4850	ldlang.c	FUNCTION_112	FOR_3
0x400a0a6	        0x4c8b6500	                    mov r12, qword [rbp]	      4852	ldlang.c	FUNCTION_112	FOR_3
0x400a0aa	    0x41f644242002	               test byte [r12 + 0x20], 2	      4853	ldlang.c	FUNCTION_112	FOR_3	IF_7
0x400a0b0	     0xf84d5000000	                            je 0x400a18b	      4853	ldlang.c	FUNCTION_112	FOR_3	IF_7
0x400a0b6	      0x4d8b7c2430	            mov r15, qword [r12 + 0x30] 	      4855	ldlang.c	FUNCTION_112	FOR_3	IF_7
0x400a0bb	    0x8b0d00000000	            mov ecx, dword [0x0400a0c1] 	      4856	ldlang.c	FUNCTION_112	FOR_3	IF_7
0x400a0c1	      0x498b542438	            mov rdx, qword [r12 + 0x38] 	      4856	ldlang.c	FUNCTION_112	FOR_3	IF_7
0x400a0c6	          0x48d3ea	                             shr rdx, cl	      4856	ldlang.c	FUNCTION_112	FOR_3	IF_7
0x400a0c9	      0x498d4c17ff	                lea rcx, [r15 + rdx - 1]	      4856	ldlang.c	FUNCTION_112	FOR_3	IF_7
0x400a0ce	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      4856	ldlang.c	FUNCTION_112	FOR_3	IF_7
0x400a0d3	          0x4885c0	                           test rax, rax	      4863	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8
0x400a0d6	     0xf848b000000	                            je 0x400a167	      4863	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8
0x400a0dc	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      4864	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8
0x400a0e1	          0x4939cf	                            cmp r15, rcx	      4864	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8
0x400a0e4	            0x760d	                           jbe 0x400a0f3	      4864	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8
0x400a0e6	        0x488b1424	                    mov rdx, qword [rsp]	      4864	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8
0x400a0ea	          0x4839d1	                            cmp rcx, rdx	      4864	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8
0x400a0ed	     0xf8387000000	                           jae 0x400a17a	      4864	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8
0x400a0f3	          0x488b00	                    mov rax, qword [rax]	      4867	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8	CALL_10
0x400a0f6	      0x4889442420	             mov qword [rsp + 0x20], rax	      4867	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8	CALL_10
0x400a0fb	        0x498b0c24	                    mov rcx, qword [r12]	      4867	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8	CALL_10
0x400a0ff	      0x48894c2428	             mov qword [rsp + 0x28], rcx	      4867	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8	CALL_10
0x400a104	      0xba05000000	                              mov edx, 5	      4867	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8	CALL_10
0x400a109	      0xbe00000000	                              mov esi, 0	      4867	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8	CALL_10
0x400a10e	      0xbf00000000	                              mov edi, 0	      4867	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8	CALL_10
0x400a113	      0xe800000000	                          call 0x400a118	      4867	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8	CALL_10
0x400a118	        0x4883ec08	                              sub rsp, 8	      4867	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8	CALL_10
0x400a11c	        0xff742410	                 push qword [rsp + 0x10]	      4867	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8	CALL_10
0x400a120	      0x4c8b4c2410	              mov r9, qword [rsp + 0x10]	      4867	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8	CALL_10
0x400a125	      0x4c8b442430	              mov r8, qword [rsp + 0x30]	      4867	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8	CALL_10
0x400a12a	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	      4867	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8	CALL_10
0x400a12f	          0x4c89fa	                            mov rdx, r15	      4867	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8	CALL_10
0x400a132	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	      4867	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8	CALL_10
0x400a137	          0x4889c7	                            mov rdi, rax	      4867	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8	CALL_10
0x400a13a	      0xb800000000	                              mov eax, 0	      4867	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8	CALL_10
0x400a13f	      0xe800000000	                          call 0x400a144	      4867	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8	CALL_10
0x400a144	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      4870	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8
0x400a149	    0xc74108010000	                  mov dword [rcx + 8], 1	      4870	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8
0x400a150	        0x4883c410	                           add rsp, 0x10	      4870	ldlang.c	FUNCTION_112	FOR_3	IF_7	IF_8
0x400a154	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4874	ldlang.c	FUNCTION_112	FOR_3	IF_7
0x400a159	      0x4889442408	                mov qword [rsp + 8], rax	      4874	ldlang.c	FUNCTION_112	FOR_3	IF_7
0x400a15e	        0x4c893c24	                    mov qword [rsp], r15	      4873	ldlang.c	FUNCTION_112	FOR_3	IF_7
0x400a162	          0x4c89e0	                            mov rax, r12	      4872	ldlang.c	FUNCTION_112	FOR_3	IF_7
0x400a165	            0xeb24	                           jmp 0x400a18b	      4872	ldlang.c	FUNCTION_112	FOR_3	IF_7
0x400a167	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4874	ldlang.c	FUNCTION_112	FOR_3	IF_7
0x400a16c	      0x4889442408	                mov qword [rsp + 8], rax	      4874	ldlang.c	FUNCTION_112	FOR_3	IF_7
0x400a171	        0x4c893c24	                    mov qword [rsp], r15	      4873	ldlang.c	FUNCTION_112	FOR_3	IF_7
0x400a175	          0x4c89e0	                            mov rax, r12	      4872	ldlang.c	FUNCTION_112	FOR_3	IF_7
0x400a178	            0xeb11	                           jmp 0x400a18b	      4872	ldlang.c	FUNCTION_112	FOR_3	IF_7
0x400a17a	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4874	ldlang.c	FUNCTION_112	FOR_3	IF_7
0x400a17f	      0x4889442408	                mov qword [rsp + 8], rax	      4874	ldlang.c	FUNCTION_112	FOR_3	IF_7
0x400a184	        0x4c893c24	                    mov qword [rsp], r15	      4873	ldlang.c	FUNCTION_112	FOR_3	IF_7
0x400a188	          0x4c89e0	                            mov rax, r12	      4872	ldlang.c	FUNCTION_112	FOR_3	IF_7
0x400a18b	        0x4983c601	                              add r14, 1	      4850	ldlang.c	FUNCTION_112	FOR_3
0x400a18f	        0x4883c510	                           add rbp, 0x10	      4850	ldlang.c	FUNCTION_112	FOR_3
0x400a193	          0x4939de	                            cmp r14, rbx	      4850	ldlang.c	FUNCTION_112	FOR_3
0x400a196	     0xf8505ffffff	                           jne 0x400a0a1	      4850	ldlang.c	FUNCTION_112	FOR_3
0x400a19c	      0xe93f050000	                           jmp 0x400a6e0	      4850	ldlang.c	FUNCTION_112	FOR_3
0x400a1a1	          0x488b0a	                    mov rcx, qword [rdx]	      4888	ldlang.c	FUNCTION_112	FOR_4
0x400a1a4	        0x488b4928	            mov rcx, qword [rcx + 0x28] 	      4888	ldlang.c	FUNCTION_112	FOR_4
0x400a1a8	        0x4883c210	                           add rdx, 0x10	      4888	ldlang.c	FUNCTION_112	FOR_4
0x400a1ac	          0x4839f1	                            cmp rcx, rsi	      4889	ldlang.c	FUNCTION_112	FOR_4	IF_9
0x400a1af	     0xf84c4000000	                            je 0x400a279	      4889	ldlang.c	FUNCTION_112	FOR_4	IF_9
0x400a1b5	          0x4889ce	                            mov rsi, rcx	      4888	ldlang.c	FUNCTION_112	FOR_4
0x400a1b8	        0x4883c001	                              add rax, 1	      4886	ldlang.c	FUNCTION_112	FOR_4
0x400a1bc	          0x4839d8	                            cmp rax, rbx	      4886	ldlang.c	FUNCTION_112	FOR_4
0x400a1bf	            0x75e0	                           jne 0x400a1a1	      4886	ldlang.c	FUNCTION_112	FOR_4
0x400a1c1	      0xe956050000	                           jmp 0x400a71c	      4886	ldlang.c	FUNCTION_112	FOR_4
0x400a1c6	        0x4d8b3424	                    mov r14, qword [r12]	      4902	ldlang.c	FUNCTION_112	IF_10	FOR_5
0x400a1ca	        0x4d8b7e28	            mov r15, qword [r14 + 0x28] 	      4903	ldlang.c	FUNCTION_112	IF_10	FOR_5
0x400a1ce	    0x8b0d00000000	            mov ecx, dword [0x0400a1d4] 	      4904	ldlang.c	FUNCTION_112	IF_10	FOR_5
0x400a1d4	        0x498b4638	            mov rax, qword [r14 + 0x38] 	      4904	ldlang.c	FUNCTION_112	IF_10	FOR_5
0x400a1d8	          0x48d3e8	                             shr rax, cl	      4904	ldlang.c	FUNCTION_112	IF_10	FOR_5
0x400a1db	      0x498d4407ff	                lea rax, [r15 + rax - 1]	      4904	ldlang.c	FUNCTION_112	IF_10	FOR_5
0x400a1e0	      0x4889442410	             mov qword [rsp + 0x10], rax	      4904	ldlang.c	FUNCTION_112	IF_10	FOR_5
0x400a1e5	          0x4885ff	                           test rdi, rdi	      4906	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11
0x400a1e8	            0x7469	                            je 0x400a253	      4906	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11
0x400a1ea	    0x41837c240800	                  cmp dword [r12 + 8], 0	      4907	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11
0x400a1f0	            0x7561	                           jne 0x400a253	      4907	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11
0x400a1f2	      0x488b442408	                mov rax, qword [rsp + 8]	      4908	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11
0x400a1f7	          0x4939c7	                            cmp r15, rax	      4908	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11
0x400a1fa	            0x7605	                           jbe 0x400a201	      4908	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11
0x400a1fc	          0x4839c5	                            cmp rbp, rax	      4908	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11
0x400a1ff	            0x7652	                           jbe 0x400a253	      4908	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11
0x400a201	          0x488b07	                    mov rax, qword [rdi]	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400a204	      0x4889442418	             mov qword [rsp + 0x18], rax	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400a209	          0x498b0e	                    mov rcx, qword [r14]	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400a20c	      0x48894c2420	             mov qword [rsp + 0x20], rcx	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400a211	      0xba05000000	                              mov edx, 5	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400a216	      0xbe00000000	                              mov esi, 0	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400a21b	      0xbf00000000	                              mov edi, 0	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400a220	      0xe800000000	                          call 0x400a225	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400a225	        0x4883ec08	                              sub rsp, 8	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400a229	        0xff742410	                 push qword [rsp + 0x10]	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400a22d	          0x4989e9	                             mov r9, rbp	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400a230	      0x4c8b442428	              mov r8, qword [rsp + 0x28]	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400a235	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400a23a	          0x4c89fa	                            mov rdx, r15	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400a23d	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400a242	          0x4889c7	                            mov rdi, rax	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400a245	      0xb800000000	                              mov eax, 0	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400a24a	      0xe800000000	                          call 0x400a24f	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400a24f	        0x4883c410	                           add rsp, 0x10	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400a253	        0x4983c410	                           add r12, 0x10	      4910	ldlang.c	FUNCTION_112	IF_10	FOR_5	IF_11	CALL_13
0x400a257	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4904	ldlang.c	FUNCTION_112	IF_10	FOR_5
0x400a25c	      0x4889442408	                mov qword [rsp + 8], rax	      4904	ldlang.c	FUNCTION_112	IF_10	FOR_5
0x400a261	          0x4c89fd	                            mov rbp, r15	      4903	ldlang.c	FUNCTION_112	IF_10	FOR_5
0x400a264	          0x4c89f7	                            mov rdi, r14	      4902	ldlang.c	FUNCTION_112	IF_10	FOR_5
0x400a267	      0x4883042401	                      add qword [rsp], 1	      4900	ldlang.c	FUNCTION_112	IF_10	FOR_5
0x400a26c	        0x488b0424	                    mov rax, qword [rsp]	      4900	ldlang.c	FUNCTION_112	IF_10	FOR_5
0x400a270	          0x4839d8	                            cmp rax, rbx	      4900	ldlang.c	FUNCTION_112	IF_10	FOR_5
0x400a273	     0xf854dffffff	                           jne 0x400a1c6	      4900	ldlang.c	FUNCTION_112	IF_10	FOR_5
0x400a279	          0x4c89ef	                            mov rdi, r13	      4919	ldlang.c	FUNCTION_112	CALL_14
0x400a27c	      0xe800000000	                          call 0x400a281	      4919	ldlang.c	FUNCTION_112	CALL_14
0x400a281	    0x488b1d000000	            mov rbx, qword [0x0400a288] 	      4929	ldlang.c	FUNCTION_112	FOR_6
0x400a288	          0x4885db	                           test rbx, rbx	      4929	ldlang.c	FUNCTION_112	FOR_6
0x400a28b	            0x7451	                            je 0x400a2de	      4929	ldlang.c	FUNCTION_112	FOR_6
0x400a28d	        0x837b5000	               cmp dword [rbx + 0x50], 0	      4930	ldlang.c	FUNCTION_112	FOR_6	IF_12
0x400a291	            0x7442	                            je 0x400a2d5	      4930	ldlang.c	FUNCTION_112	FOR_6	IF_12
0x400a293	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      4932	ldlang.c	FUNCTION_112	FOR_6	IF_12
0x400a297	        0x48034320	             add rax, qword [rbx + 0x20]	      4932	ldlang.c	FUNCTION_112	FOR_6	IF_12
0x400a29b	        0x488b6b38	            mov rbp, qword [rbx + 0x38] 	      4932	ldlang.c	FUNCTION_112	FOR_6	IF_12
0x400a29f	          0x4829c5	                            sub rbp, rax	      4932	ldlang.c	FUNCTION_112	FOR_6	IF_12
0x400a2a2	          0x4c8b23	                    mov r12, qword [rbx]	      4933	ldlang.c	FUNCTION_112	FOR_6	IF_12	CALL_16
0x400a2a5	    0x41b805000000	                              mov r8d, 5	      4933	ldlang.c	FUNCTION_112	FOR_6	IF_12	CALL_16
0x400a2ab	          0x4889e9	                            mov rcx, rbp	      4933	ldlang.c	FUNCTION_112	FOR_6	IF_12	CALL_16
0x400a2ae	      0xba00000000	                              mov edx, 0	      4933	ldlang.c	FUNCTION_112	FOR_6	IF_12	CALL_16
0x400a2b3	      0xbe00000000	                              mov esi, 0	      4933	ldlang.c	FUNCTION_112	FOR_6	IF_12	CALL_16
0x400a2b8	      0xbf00000000	                              mov edi, 0	      4933	ldlang.c	FUNCTION_112	FOR_6	IF_12	CALL_16
0x400a2bd	      0xe800000000	                          call 0x400a2c2	      4933	ldlang.c	FUNCTION_112	FOR_6	IF_12	CALL_16
0x400a2c2	          0x4889ea	                            mov rdx, rbp	      4933	ldlang.c	FUNCTION_112	FOR_6	IF_12	CALL_16
0x400a2c5	          0x4c89e6	                            mov rsi, r12	      4933	ldlang.c	FUNCTION_112	FOR_6	IF_12	CALL_16
0x400a2c8	          0x4889c7	                            mov rdi, rax	      4933	ldlang.c	FUNCTION_112	FOR_6	IF_12	CALL_16
0x400a2cb	      0xb800000000	                              mov eax, 0	      4933	ldlang.c	FUNCTION_112	FOR_6	IF_12	CALL_16
0x400a2d0	      0xe800000000	                          call 0x400a2d5	      4933	ldlang.c	FUNCTION_112	FOR_6	IF_12	CALL_16
0x400a2d5	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      4929	ldlang.c	FUNCTION_112	FOR_6
0x400a2d9	          0x4885db	                           test rbx, rbx	      4929	ldlang.c	FUNCTION_112	FOR_6
0x400a2dc	            0x75af	                           jne 0x400a28d	      4929	ldlang.c	FUNCTION_112	FOR_6
0x400a2de	    0x488b1d000000	            mov rbx, qword [0x0400a2e5] 	      3471	ldlang.c	FUNCTION_83	FOR_1
0x400a2e5	          0x4885db	                           test rbx, rbx	      3471	ldlang.c	FUNCTION_83	FOR_1
0x400a2e8	            0x745f	                            je 0x400a349	      3471	ldlang.c	FUNCTION_83	FOR_1
0x400a2ea	    0x41b801000000	                              mov r8d, 1	      3475	ldlang.c	FUNCTION_83	FOR_1	CALL_1
0x400a2f0	      0xb900000000	                              mov ecx, 0	      3475	ldlang.c	FUNCTION_83	FOR_1	CALL_1
0x400a2f5	      0xba00000000	                              mov edx, 0	      3475	ldlang.c	FUNCTION_83	FOR_1	CALL_1
0x400a2fa	          0x488b33	                    mov rsi, qword [rbx]	      3475	ldlang.c	FUNCTION_83	FOR_1	CALL_1
0x400a2fd	    0x488b3d000000	            mov rdi, qword [0x0400a304] 	      3475	ldlang.c	FUNCTION_83	FOR_1	CALL_1
0x400a304	      0xe800000000	                          call 0x400a309	      3475	ldlang.c	FUNCTION_83	FOR_1	CALL_1
0x400a309	          0x4885c0	                           test rax, rax	      3477	ldlang.c	FUNCTION_83	FOR_1	IF_1
0x400a30c	            0x740b	                            je 0x400a319	      3477	ldlang.c	FUNCTION_83	FOR_1	IF_1
0x400a30e	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      3478	ldlang.c	FUNCTION_83	FOR_1	IF_1
0x400a312	          0x83e803	                              sub eax, 3	      3478	ldlang.c	FUNCTION_83	FOR_1	IF_1
0x400a315	            0x3c01	                               cmp al, 1	      3478	ldlang.c	FUNCTION_83	FOR_1	IF_1
0x400a317	            0x7627	                           jbe 0x400a340	      3478	ldlang.c	FUNCTION_83	FOR_1	IF_1
0x400a319	          0x488b2b	                    mov rbp, qword [rbx]	      3480	ldlang.c	FUNCTION_83	FOR_1	CALL_3
0x400a31c	      0xba05000000	                              mov edx, 5	      3480	ldlang.c	FUNCTION_83	FOR_1	CALL_3
0x400a321	      0xbe00000000	                              mov esi, 0	      3480	ldlang.c	FUNCTION_83	FOR_1	CALL_3
0x400a326	      0xbf00000000	                              mov edi, 0	      3480	ldlang.c	FUNCTION_83	FOR_1	CALL_3
0x400a32b	      0xe800000000	                          call 0x400a330	      3480	ldlang.c	FUNCTION_83	FOR_1	CALL_3
0x400a330	          0x4889ee	                            mov rsi, rbp	      3480	ldlang.c	FUNCTION_83	FOR_1	CALL_3
0x400a333	          0x4889c7	                            mov rdi, rax	      3480	ldlang.c	FUNCTION_83	FOR_1	CALL_3
0x400a336	      0xb800000000	                              mov eax, 0	      3480	ldlang.c	FUNCTION_83	FOR_1	CALL_3
0x400a33b	      0xe800000000	                          call 0x400a340	      3480	ldlang.c	FUNCTION_83	FOR_1	CALL_3
0x400a340	        0x488b5b08	                mov rbx, qword [rbx + 8]	      3471	ldlang.c	FUNCTION_83	FOR_1
0x400a344	          0x4885db	                           test rbx, rbx	      3471	ldlang.c	FUNCTION_83	FOR_1
0x400a347	            0x75a1	                           jne 0x400a2ea	      3471	ldlang.c	FUNCTION_83	FOR_1
0x400a349	     0xfb605000000	           movzx eax, byte [0x0400a350] 	      6174	ldlang.c	FUNCTION_133	IF_1	CALL_1
0x400a350	            0x89c2	                            mov edx, eax	      6174	ldlang.c	FUNCTION_133	IF_1	CALL_1
0x400a352	          0x83e243	                           and edx, 0x43	      6174	ldlang.c	FUNCTION_133	IF_1	CALL_1
0x400a355	          0x80fa02	                               cmp dl, 2	      6174	ldlang.c	FUNCTION_133	IF_1	CALL_1
0x400a358	            0x740c	                            je 0x400a366	      6174	ldlang.c	FUNCTION_133	IF_1	CALL_1
0x400a35a	          0x83e003	                              and eax, 3	      6175	ldlang.c	FUNCTION_133	IF_1	CALL_2
0x400a35d	      0xbb01000000	                              mov ebx, 1	      6178	ldlang.c	FUNCTION_133	ELSE_1
0x400a362	            0x3c03	                               cmp al, 3	      6175	ldlang.c	FUNCTION_133	IF_1	CALL_2
0x400a364	            0x7506	                           jne 0x400a36c	      6175	ldlang.c	FUNCTION_133	IF_1	CALL_2
0x400a366	    0x8b1d00000000	            mov ebx, dword [0x0400a36c] 	      6176	ldlang.c	FUNCTION_133	IF_1
0x400a36c	          0x80fa42	                            cmp dl, 0x42	      6182	ldlang.c	FUNCTION_133	IF_2	CALL_3
0x400a36f	            0x7533	                           jne 0x400a3a4	      6182	ldlang.c	FUNCTION_133	IF_2	CALL_3
0x400a371	    0x833d00000000	               cmp dword [0x0400a378], 0	      6183	ldlang.c	FUNCTION_133	IF_2
0x400a378	            0x752a	                           jne 0x400a3a4	      6183	ldlang.c	FUNCTION_133	IF_2
0x400a37a	    0x833d00000000	               cmp dword [0x0400a381], 0	      6183	ldlang.c	FUNCTION_133	IF_2
0x400a381	            0x7521	                           jne 0x400a3a4	      6183	ldlang.c	FUNCTION_133	IF_2
0x400a383	      0xba05000000	                              mov edx, 5	      6184	ldlang.c	FUNCTION_133	IF_2	CALL_5
0x400a388	      0xbe00000000	                              mov esi, 0	      6184	ldlang.c	FUNCTION_133	IF_2	CALL_5
0x400a38d	      0xbf00000000	                              mov edi, 0	      6184	ldlang.c	FUNCTION_133	IF_2	CALL_5
0x400a392	      0xe800000000	                          call 0x400a397	      6184	ldlang.c	FUNCTION_133	IF_2	CALL_5
0x400a397	          0x4889c7	                            mov rdi, rax	      6184	ldlang.c	FUNCTION_133	IF_2	CALL_5
0x400a39a	      0xb800000000	                              mov eax, 0	      6184	ldlang.c	FUNCTION_133	IF_2	CALL_5
0x400a39f	      0xe800000000	                          call 0x400a3a4	      6184	ldlang.c	FUNCTION_133	IF_2	CALL_5
0x400a3a4	    0x48833d000000	               cmp qword [0x0400a3ac], 0	      6187	ldlang.c	FUNCTION_133	IF_3
0x400a3ac	            0x7513	                           jne 0x400a3c1	      6187	ldlang.c	FUNCTION_133	IF_3
0x400a3ae	    0x488b05000000	            mov rax, qword [0x0400a3b5] 	      6191	ldlang.c	FUNCTION_133	IF_3
0x400a3b5	    0x488905000000	            mov qword [0x0400a3bc], rax 	      6191	ldlang.c	FUNCTION_133	IF_3
0x400a3bc	      0xbb00000000	                              mov ebx, 0	      6192	ldlang.c	FUNCTION_133	IF_3
0x400a3c1	    0x41b801000000	                              mov r8d, 1	      6195	ldlang.c	FUNCTION_133	CALL_6
0x400a3c7	      0xb900000000	                              mov ecx, 0	      6195	ldlang.c	FUNCTION_133	CALL_6
0x400a3cc	      0xba00000000	                              mov edx, 0	      6195	ldlang.c	FUNCTION_133	CALL_6
0x400a3d1	    0x488b35000000	            mov rsi, qword [0x0400a3d8] 	      6195	ldlang.c	FUNCTION_133	CALL_6
0x400a3d8	    0x488b3d000000	            mov rdi, qword [0x0400a3df] 	      6195	ldlang.c	FUNCTION_133	CALL_6
0x400a3df	      0xe800000000	                          call 0x400a3e4	      6195	ldlang.c	FUNCTION_133	CALL_6
0x400a3e4	          0x4885c0	                           test rax, rax	      6197	ldlang.c	FUNCTION_133	IF_4
0x400a3e7	            0x7469	                            je 0x400a452	      6197	ldlang.c	FUNCTION_133	IF_4
0x400a3e9	         0xfb64818	           movzx ecx, byte [rax + 0x18] 	      6198	ldlang.c	FUNCTION_133	IF_4
0x400a3ed	          0x8d51fd	                      lea edx, [rcx - 3]	      6198	ldlang.c	FUNCTION_133	IF_4
0x400a3f0	          0x80fa01	                               cmp dl, 1	      6198	ldlang.c	FUNCTION_133	IF_4
0x400a3f3	            0x775d	                            ja 0x400a452	      6198	ldlang.c	FUNCTION_133	IF_4
0x400a3f5	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      6200	ldlang.c	FUNCTION_133	IF_4
0x400a3f9	        0x488b4a68	            mov rcx, qword [rdx + 0x68] 	      6200	ldlang.c	FUNCTION_133	IF_4
0x400a3fd	          0x4885c9	                           test rcx, rcx	      6200	ldlang.c	FUNCTION_133	IF_4
0x400a400	            0x7450	                            je 0x400a452	      6200	ldlang.c	FUNCTION_133	IF_4
0x400a402	        0x488b7128	            mov rsi, qword [rcx + 0x28] 	      6208	ldlang.c	FUNCTION_133	IF_4	IF_5	CALL_7
0x400a406	        0x48037030	             add rsi, qword [rax + 0x30]	      6208	ldlang.c	FUNCTION_133	IF_4	IF_5	CALL_7
0x400a40a	        0x48037260	             add rsi, qword [rdx + 0x60]	      6208	ldlang.c	FUNCTION_133	IF_4	IF_5	CALL_7
0x400a40e	    0x488b3d000000	            mov rdi, qword [0x0400a415] 	      6208	ldlang.c	FUNCTION_133	IF_4	IF_5	CALL_7
0x400a415	      0xe800000000	                          call 0x400a41a	      6208	ldlang.c	FUNCTION_133	IF_4	IF_5	CALL_7
0x400a41a	            0x85c0	                           test eax, eax	      6208	ldlang.c	FUNCTION_133	IF_4	IF_5	CALL_7
0x400a41c	     0xf8547030000	                           jne 0x400a769	      6208	ldlang.c	FUNCTION_133	IF_4	IF_5	CALL_7
0x400a422	    0x488b1d000000	            mov rbx, qword [0x0400a429] 	      6209	ldlang.c	FUNCTION_133	IF_4	CALL_9
0x400a429	      0xba05000000	                              mov edx, 5	      6209	ldlang.c	FUNCTION_133	IF_4	CALL_9
0x400a42e	      0xbe00000000	                              mov esi, 0	      6209	ldlang.c	FUNCTION_133	IF_4	CALL_9
0x400a433	      0xbf00000000	                              mov edi, 0	      6209	ldlang.c	FUNCTION_133	IF_4	CALL_9
0x400a438	      0xe800000000	                          call 0x400a43d	      6209	ldlang.c	FUNCTION_133	IF_4	CALL_9
0x400a43d	          0x4889de	                            mov rsi, rbx	      6209	ldlang.c	FUNCTION_133	IF_4	CALL_9
0x400a440	          0x4889c7	                            mov rdi, rax	      6209	ldlang.c	FUNCTION_133	IF_4	CALL_9
0x400a443	      0xb800000000	                              mov eax, 0	      6209	ldlang.c	FUNCTION_133	IF_4	CALL_9
0x400a448	      0xe800000000	                          call 0x400a44d	      6209	ldlang.c	FUNCTION_133	IF_4	CALL_9
0x400a44d	      0xe917030000	                           jmp 0x400a769	      6209	ldlang.c	FUNCTION_133	IF_4	CALL_9
0x400a452	      0xba00000000	                              mov edx, 0	      6218	ldlang.c	FUNCTION_133	ELSE_2	CALL_10
0x400a457	      0x488d742450	                   lea rsi, [rsp + 0x50]	      6218	ldlang.c	FUNCTION_133	ELSE_2	CALL_10
0x400a45c	    0x488b3d000000	            mov rdi, qword [0x0400a463] 	      6218	ldlang.c	FUNCTION_133	ELSE_2	CALL_10
0x400a463	      0xe800000000	                          call 0x400a468	      6218	ldlang.c	FUNCTION_133	ELSE_2	CALL_10
0x400a468	      0x488b542450	            mov rdx, qword [rsp + 0x50] 	      6219	ldlang.c	FUNCTION_133	ELSE_2	IF_6
0x400a46d	          0x803a00	                       cmp byte [rdx], 0	      6219	ldlang.c	FUNCTION_133	ELSE_2	IF_6
0x400a470	            0x753d	                           jne 0x400a4af	      6219	ldlang.c	FUNCTION_133	ELSE_2	IF_6
0x400a472	          0x4889c6	                            mov rsi, rax	      6221	ldlang.c	FUNCTION_133	ELSE_2	IF_6	IF_7	CALL_11
0x400a475	    0x488b3d000000	            mov rdi, qword [0x0400a47c] 	      6221	ldlang.c	FUNCTION_133	ELSE_2	IF_6	IF_7	CALL_11
0x400a47c	      0xe800000000	                          call 0x400a481	      6221	ldlang.c	FUNCTION_133	ELSE_2	IF_6	IF_7	CALL_11
0x400a481	            0x85c0	                           test eax, eax	      6221	ldlang.c	FUNCTION_133	ELSE_2	IF_6	IF_7	CALL_11
0x400a483	     0xf85e0020000	                           jne 0x400a769	      6221	ldlang.c	FUNCTION_133	ELSE_2	IF_6	IF_7	CALL_11
0x400a489	      0xba05000000	                              mov edx, 5	      6222	ldlang.c	FUNCTION_133	ELSE_2	IF_6	CALL_13
0x400a48e	      0xbe00000000	                              mov esi, 0	      6222	ldlang.c	FUNCTION_133	ELSE_2	IF_6	CALL_13
0x400a493	      0xbf00000000	                              mov edi, 0	      6222	ldlang.c	FUNCTION_133	ELSE_2	IF_6	CALL_13
0x400a498	      0xe800000000	                          call 0x400a49d	      6222	ldlang.c	FUNCTION_133	ELSE_2	IF_6	CALL_13
0x400a49d	          0x4889c7	                            mov rdi, rax	      6222	ldlang.c	FUNCTION_133	ELSE_2	IF_6	CALL_13
0x400a4a0	      0xb800000000	                              mov eax, 0	      6222	ldlang.c	FUNCTION_133	ELSE_2	IF_6	CALL_13
0x400a4a5	      0xe800000000	                          call 0x400a4aa	      6222	ldlang.c	FUNCTION_133	ELSE_2	IF_6	CALL_13
0x400a4aa	      0xe9ba020000	                           jmp 0x400a769	      6222	ldlang.c	FUNCTION_133	ELSE_2	IF_6	CALL_13
0x400a4af	    0x488b35000000	            mov rsi, qword [0x0400a4b6] 	      6230	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	CALL_14
0x400a4b6	    0x488b3d000000	            mov rdi, qword [0x0400a4bd] 	      6230	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	CALL_14
0x400a4bd	      0xe800000000	                          call 0x400a4c2	      6230	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	CALL_14
0x400a4c2	          0x4889c5	                            mov rbp, rax	      6230	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	CALL_14
0x400a4c5	          0x4885c0	                           test rax, rax	      6231	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8
0x400a4c8	            0x7474	                            je 0x400a53e	      6231	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8
0x400a4ca	            0x85db	                           test ebx, ebx	      6233	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	IF_9
0x400a4cc	            0x7432	                            je 0x400a500	      6233	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	IF_9
0x400a4ce	        0x4c8b6028	            mov r12, qword [rax + 0x28] 	      6234	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	IF_9	CALL_16
0x400a4d2	    0x488b1d000000	            mov rbx, qword [0x0400a4d9] 	      6234	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	IF_9	CALL_16
0x400a4d9	      0xba05000000	                              mov edx, 5	      6234	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	IF_9	CALL_16
0x400a4de	      0xbe00000000	                              mov esi, 0	      6234	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	IF_9	CALL_16
0x400a4e3	      0xbf00000000	                              mov edi, 0	      6234	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	IF_9	CALL_16
0x400a4e8	      0xe800000000	                          call 0x400a4ed	      6234	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	IF_9	CALL_16
0x400a4ed	          0x4c89e2	                            mov rdx, r12	      6234	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	IF_9	CALL_16
0x400a4f0	          0x4889de	                            mov rsi, rbx	      6234	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	IF_9	CALL_16
0x400a4f3	          0x4889c7	                            mov rdi, rax	      6234	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	IF_9	CALL_16
0x400a4f6	      0xb800000000	                              mov eax, 0	      6234	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	IF_9	CALL_16
0x400a4fb	      0xe800000000	                          call 0x400a500	      6234	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	IF_9	CALL_16
0x400a500	        0x488b7528	            mov rsi, qword [rbp + 0x28] 	      6238	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	IF_10	CALL_17
0x400a504	    0x488b3d000000	            mov rdi, qword [0x0400a50b] 	      6238	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	IF_10	CALL_17
0x400a50b	      0xe800000000	                          call 0x400a510	      6238	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	IF_10	CALL_17
0x400a510	            0x85c0	                           test eax, eax	      6238	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	IF_10	CALL_17
0x400a512	     0xf8551020000	                           jne 0x400a769	      6238	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	IF_10	CALL_17
0x400a518	      0xba05000000	                              mov edx, 5	      6241	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	CALL_19
0x400a51d	      0xbe00000000	                              mov esi, 0	      6241	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	CALL_19
0x400a522	      0xbf00000000	                              mov edi, 0	      6241	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	CALL_19
0x400a527	      0xe800000000	                          call 0x400a52c	      6241	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	CALL_19
0x400a52c	          0x4889c7	                            mov rdi, rax	      6241	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	CALL_19
0x400a52f	      0xb800000000	                              mov eax, 0	      6241	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	CALL_19
0x400a534	      0xe800000000	                          call 0x400a539	      6241	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	CALL_19
0x400a539	      0xe92b020000	                           jmp 0x400a769	      6241	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	IF_8	CALL_19
0x400a53e	            0x85db	                           test ebx, ebx	      6245	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	ELSE_4	IF_11
0x400a540	     0xf8423020000	                            je 0x400a769	      6245	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	ELSE_4	IF_11
0x400a546	    0x488b1d000000	            mov rbx, qword [0x0400a54d] 	      6246	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	ELSE_4	IF_11	CALL_21
0x400a54d	      0xba05000000	                              mov edx, 5	      6246	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	ELSE_4	IF_11	CALL_21
0x400a552	      0xbe00000000	                              mov esi, 0	      6246	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	ELSE_4	IF_11	CALL_21
0x400a557	      0xbf00000000	                              mov edi, 0	      6246	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	ELSE_4	IF_11	CALL_21
0x400a55c	      0xe800000000	                          call 0x400a561	      6246	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	ELSE_4	IF_11	CALL_21
0x400a561	          0x4889de	                            mov rsi, rbx	      6246	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	ELSE_4	IF_11	CALL_21
0x400a564	          0x4889c7	                            mov rdi, rax	      6246	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	ELSE_4	IF_11	CALL_21
0x400a567	      0xb800000000	                              mov eax, 0	      6246	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	ELSE_4	IF_11	CALL_21
0x400a56c	      0xe800000000	                          call 0x400a571	      6246	ldlang.c	FUNCTION_133	ELSE_2	ELSE_3	ELSE_4	IF_11	CALL_21
0x400a571	      0xe9f3010000	                           jmp 0x400a769	      7425	ldlang.c	FUNCTION_163
0x400a576	    0x488905000000	            mov qword [0x0400a57d], rax 	      7212	ldlang.c	FUNCTION_163	IF_3	IF_5	CALL_18
0x400a57d	      0xe9c1e6ffff	                           jmp 0x4008c43	      7212	ldlang.c	FUNCTION_163	IF_3	IF_5	CALL_18
0x400a582	          0xf6c240	                           test dl, 0x40	      7005	ldlang.c	FUNCTION_156	FOR_1	IF_1
0x400a585	     0xf859de6ffff	                           jne 0x4008c28	      7005	ldlang.c	FUNCTION_156	FOR_1	IF_1
0x400a58b	            0xebe9	                           jmp 0x400a576	      7005	ldlang.c	FUNCTION_156	FOR_1	IF_1
0x400a58d	        0x498d4930	                    lea rcx, [r9 + 0x30]	      7245	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1
0x400a591	          0x488b02	                    mov rax, qword [rdx]	      7251	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1
0x400a594	          0x4c890a	                     mov qword [rdx], r9	      7252	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1
0x400a597	        0x498b5130	              mov rdx, qword [r9 + 0x30]	      7253	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1
0x400a59b	      0x4889542440	             mov qword [rsp + 0x40], rdx	      7253	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1
0x400a5a0	        0x49894130	              mov qword [r9 + 0x30], rax	      7254	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1
0x400a5a4	      0xe98ee8ffff	                           jmp 0x4008e37	      7254	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1
0x400a5a9	          0x488b02	                    mov rax, qword [rdx]	      7251	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1
0x400a5ac	          0x4c890a	                     mov qword [rdx], r9	      7252	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1
0x400a5af	        0x498b5130	              mov rdx, qword [r9 + 0x30]	      7253	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1
0x400a5b3	      0x4889542440	             mov qword [rsp + 0x40], rdx	      7253	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1
0x400a5b8	        0x49894130	              mov qword [r9 + 0x30], rax	      7254	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1
0x400a5bc	      0xe98ae8ffff	                           jmp 0x4008e4b	      7254	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1
0x400a5c1	        0xf6454420	           test byte [rbp + 0x44], 0x20 	      6298	ldlang.c	FUNCTION_135	FOR_1	IF_2
0x400a5c5	     0xf854ceaffff	                           jne 0x4009017	      6298	ldlang.c	FUNCTION_135	FOR_1	IF_2
0x400a5cb	      0xe98eeaffff	                           jmp 0x400905e	      6298	ldlang.c	FUNCTION_135	FOR_1	IF_2
0x400a5d0	        0xf6454420	           test byte [rbp + 0x44], 0x20 	      6298	ldlang.c	FUNCTION_135	FOR_1	IF_2
0x400a5d4	     0xf84daeaffff	                            je 0x40090b4	      6298	ldlang.c	FUNCTION_135	FOR_1	IF_2
0x400a5da	      0xe938eaffff	                           jmp 0x4009017	      6298	ldlang.c	FUNCTION_135	FOR_1	IF_2
0x400a5df	      0xb800000000	                              mov eax, 0	      6051	ldlang.c	FUNCTION_126	FOR_1	FOR_2	IF_2	CALL_3
0x400a5e4	          0x4c89f1	                            mov rcx, r14	      6051	ldlang.c	FUNCTION_126	FOR_1	FOR_2	IF_2	CALL_3
0x400a5e7	          0x4c89e7	                            mov rdi, r12	      6051	ldlang.c	FUNCTION_126	FOR_1	FOR_2	IF_2	CALL_3
0x400a5ea	            0xf2ae	              repne scasb al, byte [rdi]	      6051	ldlang.c	FUNCTION_126	FOR_1	FOR_2	IF_2	CALL_3
0x400a5ec	          0x4889c8	                            mov rax, rcx	      6051	ldlang.c	FUNCTION_126	FOR_1	FOR_2	IF_2	CALL_3
0x400a5ef	          0x48f7d0	                                 not rax	      6051	ldlang.c	FUNCTION_126	FOR_1	FOR_2	IF_2	CALL_3
0x400a5f2	        0x488d7809	                      lea rdi, [rax + 9]	      6051	ldlang.c	FUNCTION_126	FOR_1	FOR_2	IF_2	CALL_3
0x400a5f6	      0xe800000000	                          call 0x400a5fb	      6051	ldlang.c	FUNCTION_126	FOR_1	FOR_2	IF_2	CALL_3
0x400a5fb	          0x4889c5	                            mov rbp, rax	      6051	ldlang.c	FUNCTION_126	FOR_1	FOR_2	IF_2	CALL_3
0x400a5fe	          0x448828	                    mov byte [rax], r13b	      6053	ldlang.c	FUNCTION_126	FOR_1	FOR_2	IF_2
0x400a601	          0x4584ed	                         test r13b, r13b	        33	stdio2.h	FUNCTION_210	CALL_1
0x400a604	        0x400f95c7	                               setne dil	        33	stdio2.h	FUNCTION_210	CALL_1
0x400a608	        0x400fb6ff	                          movzx edi, dil	        33	stdio2.h	FUNCTION_210	CALL_1
0x400a60c	          0x4801c7	                            add rdi, rax	        33	stdio2.h	FUNCTION_210	CALL_1
0x400a60f	          0x4d89e0	                             mov r8, r12	        33	stdio2.h	FUNCTION_210	CALL_1
0x400a612	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_210	CALL_1
0x400a617	          0x4c89f2	                            mov rdx, r14	        33	stdio2.h	FUNCTION_210	CALL_1
0x400a61a	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_210	CALL_1
0x400a61f	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_210	CALL_1
0x400a624	      0xe800000000	                          call 0x400a629	        33	stdio2.h	FUNCTION_210	CALL_1
0x400a629	          0x4889de	                            mov rsi, rbx	      6055	ldlang.c	FUNCTION_126	FOR_1	FOR_2	IF_2	CALL_4
0x400a62c	          0x4889ef	                            mov rdi, rbp	      6055	ldlang.c	FUNCTION_126	FOR_1	FOR_2	IF_2	CALL_4
0x400a62f	      0xe88d74ffff	         call sym.lang_define_start_stop	      6055	ldlang.c	FUNCTION_126	FOR_1	FOR_2	IF_2	CALL_4
0x400a634	        0x44886d01	                mov byte [rbp + 1], r13b	      6057	ldlang.c	FUNCTION_126	FOR_1	FOR_2	IF_2
0x400a638	      0x4a8d443d00	                    lea rax, [rbp + r15]	        53	string3.h	FUNCTION_245	CALL_3
0x400a63d	    0xc7005f5f7374	            mov dword [rax], 0x74735f5f 	        53	string3.h	FUNCTION_245	CALL_3
0x400a643	    0x66c740046f70	              mov word [rax + 4], 0x706f	        53	string3.h	FUNCTION_245	CALL_3
0x400a649	        0x488d7d01	                      lea rdi, [rbp + 1]	      6059	ldlang.c	FUNCTION_126	FOR_1	FOR_2	IF_2	CALL_6
0x400a64d	          0x4889de	                            mov rsi, rbx	      6059	ldlang.c	FUNCTION_126	FOR_1	FOR_2	IF_2	CALL_6
0x400a650	      0xe86c74ffff	         call sym.lang_define_start_stop	      6059	ldlang.c	FUNCTION_126	FOR_1	FOR_2	IF_2	CALL_6
0x400a655	          0x4889ef	                            mov rdi, rbp	      6061	ldlang.c	FUNCTION_126	FOR_1	FOR_2	IF_2	CALL_7
0x400a658	      0xe800000000	                          call 0x400a65d	      6061	ldlang.c	FUNCTION_126	FOR_1	FOR_2	IF_2	CALL_7
0x400a65d	      0xe993ecffff	                           jmp 0x40092f5	      6061	ldlang.c	FUNCTION_126	FOR_1	FOR_2	IF_2	CALL_7
0x400a662	        0x488b5d10	            mov rbx, qword [rbp + 0x10] 	      3770	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_5	CALL_4
0x400a666	      0xba05000000	                              mov edx, 5	      3770	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_5	CALL_4
0x400a66b	      0xbe00000000	                              mov esi, 0	      3770	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_5	CALL_4
0x400a670	      0xbf00000000	                              mov edi, 0	      3770	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_5	CALL_4
0x400a675	      0xe800000000	                          call 0x400a67a	      3770	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_5	CALL_4
0x400a67a	          0x4889de	                            mov rsi, rbx	      3770	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_5	CALL_4
0x400a67d	          0x4889c7	                            mov rdi, rax	      3770	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_5	CALL_4
0x400a680	      0xb800000000	                              mov eax, 0	      3770	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_5	CALL_4
0x400a685	      0xe800000000	                          call 0x400a68a	      3770	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_5	CALL_4
0x400a68a	      0xe9d4f1ffff	                           jmp 0x4009863	      3770	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_5	CALL_4
0x400a68f	          0x4d85ed	                           test r13, r13	      3775	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6
0x400a692	     0xf85baefffff	                           jne 0x4009652	      3775	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6
0x400a698	      0xe933f1ffff	                           jmp 0x40097d0	      3775	ldlang.c	FUNCTION_87	WHILE_1	ELSE_1	IF_3	IF_6
0x400a69d	      0xba05000000	                              mov edx, 5	      7836	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5	CALL_3
0x400a6a2	      0xbe00000000	                              mov esi, 0	      7836	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5	CALL_3
0x400a6a7	      0xbf00000000	                              mov edi, 0	      7836	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5	CALL_3
0x400a6ac	      0xe800000000	                          call 0x400a6b1	      7836	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5	CALL_3
0x400a6b1	          0x4889c7	                            mov rdi, rax	      7836	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5	CALL_3
0x400a6b4	      0xb800000000	                              mov eax, 0	      7836	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5	CALL_3
0x400a6b9	      0xe800000000	                          call 0x400a6be	      7836	ldlang.c	FUNCTION_185	FOR_1	FOR_2	ELSE_1	IF_5	CALL_3
0x400a6be	    0x49837c243800	               cmp qword [r12 + 0x38], 0	      7841	ldlang.c	FUNCTION_185	FOR_1	FOR_2	IF_8
0x400a6c4	     0xf8505f6ffff	                           jne 0x4009ccf	      7841	ldlang.c	FUNCTION_185	FOR_1	FOR_2	IF_8
0x400a6ca	      0xe95ff6ffff	                           jmp 0x4009d2e	      7841	ldlang.c	FUNCTION_185	FOR_1	FOR_2	IF_8
0x400a6cf	    0x49837c243800	               cmp qword [r12 + 0x38], 0	      7841	ldlang.c	FUNCTION_185	FOR_1	FOR_2	IF_8
0x400a6d5	     0xf85fdf5ffff	                           jne 0x4009cd8	      7841	ldlang.c	FUNCTION_185	FOR_1	FOR_2	IF_8
0x400a6db	      0xe94af6ffff	                           jmp 0x4009d2a	      7841	ldlang.c	FUNCTION_185	FOR_1	FOR_2	IF_8
0x400a6e0	      0xb900000000	                              mov ecx, 0	      4883	ldlang.c	FUNCTION_112	CALL_11
0x400a6e5	      0xba10000000	                           mov edx, 0x10	      4883	ldlang.c	FUNCTION_112	CALL_11
0x400a6ea	          0x4889de	                            mov rsi, rbx	      4883	ldlang.c	FUNCTION_112	CALL_11
0x400a6ed	          0x4c89ef	                            mov rdi, r13	      4883	ldlang.c	FUNCTION_112	CALL_11
0x400a6f0	      0xe800000000	                          call 0x400a6f5	      4883	ldlang.c	FUNCTION_112	CALL_11
0x400a6f5	        0x498b7d00	                    mov rdi, qword [r13]	      4885	ldlang.c	FUNCTION_112
0x400a6f9	        0x488b6f28	            mov rbp, qword [rdi + 0x28] 	      4885	ldlang.c	FUNCTION_112
0x400a6fd	        0x498b4510	            mov rax, qword [r13 + 0x10] 	      4888	ldlang.c	FUNCTION_112	FOR_4
0x400a701	        0x488b7028	            mov rsi, qword [rax + 0x28] 	      4888	ldlang.c	FUNCTION_112	FOR_4
0x400a705	          0x4839f5	                            cmp rbp, rsi	      4889	ldlang.c	FUNCTION_112	FOR_4	IF_9
0x400a708	     0xf846bfbffff	                            je 0x400a279	      4889	ldlang.c	FUNCTION_112	FOR_4	IF_9
0x400a70e	        0x498d5520	                   lea rdx, [r13 + 0x20]	      4889	ldlang.c	FUNCTION_112	FOR_4	IF_9
0x400a712	      0xb801000000	                              mov eax, 1	      4889	ldlang.c	FUNCTION_112	FOR_4	IF_9
0x400a717	      0xe99cfaffff	                           jmp 0x400a1b8	      4889	ldlang.c	FUNCTION_112	FOR_4	IF_9
0x400a71c	          0x4885db	                           test rbx, rbx	      4900	ldlang.c	FUNCTION_112	IF_10	FOR_5
0x400a71f	     0xf8454fbffff	                            je 0x400a279	      4900	ldlang.c	FUNCTION_112	IF_10	FOR_5
0x400a725	    0x8b0d00000000	            mov ecx, dword [0x0400a72b] 	      4904	ldlang.c	FUNCTION_112	IF_10	FOR_5
0x400a72b	        0x488b4738	            mov rax, qword [rdi + 0x38] 	      4904	ldlang.c	FUNCTION_112	IF_10	FOR_5
0x400a72f	          0x48d3e8	                             shr rax, cl	      4904	ldlang.c	FUNCTION_112	IF_10	FOR_5
0x400a732	      0x488d4405ff	                lea rax, [rbp + rax - 1]	      4904	ldlang.c	FUNCTION_112	IF_10	FOR_5
0x400a737	      0x4889442408	                mov qword [rsp + 8], rax	      4904	ldlang.c	FUNCTION_112	IF_10	FOR_5
0x400a73c	        0x4d8d6510	                   lea r12, [r13 + 0x10]	      4904	ldlang.c	FUNCTION_112	IF_10	FOR_5
0x400a740	    0x48c704240000	                      mov qword [rsp], 0	      4904	ldlang.c	FUNCTION_112	IF_10	FOR_5
0x400a748	      0xe91afbffff	                           jmp 0x400a267	      4904	ldlang.c	FUNCTION_112	IF_10	FOR_5
0x400a74d	          0x488b02	                    mov rax, qword [rdx]	      7251	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1
0x400a750	          0x4c890a	                     mov qword [rdx], r9	      7252	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1
0x400a753	        0x488b5130	            mov rdx, qword [rcx + 0x30] 	      7253	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1
0x400a757	      0x4889542440	             mov qword [rsp + 0x40], rdx	      7253	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1
0x400a75c	        0x48894130	             mov qword [rcx + 0x30], rax	      7254	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1
0x400a760	        0x4883c130	                           add rcx, 0x30	      7248	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_7	FOR_1
0x400a764	      0xe9cee6ffff	                           jmp 0x4008e37	      7248	ldlang.c	FUNCTION_163	IF_3	IF_5	WHILE_1	IF_7	FOR_1
0x400a769	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      7425	ldlang.c	FUNCTION_163
0x400a76e	    0x644833042528	                xor rax, qword fs:[0x28]	      7425	ldlang.c	FUNCTION_163
0x400a777	            0x7405	                            je 0x400a77e	      7425	ldlang.c	FUNCTION_163
0x400a779	      0xe800000000	                          call 0x400a77e	      7425	ldlang.c	FUNCTION_163
0x400a77e	        0x4883c478	                           add rsp, 0x78	      7425	ldlang.c	FUNCTION_163
0x400a782	              0x5b	                                 pop rbx	      7425	ldlang.c	FUNCTION_163
0x400a783	              0x5d	                                 pop rbp	      7425	ldlang.c	FUNCTION_163
0x400a784	            0x415c	                                 pop r12	      7425	ldlang.c	FUNCTION_163
0x400a786	            0x415d	                                 pop r13	      7425	ldlang.c	FUNCTION_163
0x400a788	            0x415e	                                 pop r14	      7425	ldlang.c	FUNCTION_163
0x400a78a	            0x415f	                                 pop r15	      7425	ldlang.c	FUNCTION_163
0x400a78c	              0xc3	                                     ret	      7425	ldlang.c	FUNCTION_163
one_lang_size_sections_pass	IF,0:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,1:ELSE,0	11
0x4005bde	        0x4883ec08	                              sub rsp, 8	      5600	ldlang.c	FUNCTION_117
0x4005be2	          0x4989f8	                             mov r8, rdi	      5600	ldlang.c	FUNCTION_117
0x4005be5	          0x4189f1	                            mov r9d, esi	      5600	ldlang.c	FUNCTION_117
0x4005be8	    0x830500000000	               add dword [0x04005bef], 1	      5601	ldlang.c	FUNCTION_117
0x4005bef	      0xb900000000	                              mov ecx, 0	      5602	ldlang.c	FUNCTION_117	CALL_1
0x4005bf4	      0xba00000000	                              mov edx, 0	      5602	ldlang.c	FUNCTION_117	CALL_1
0x4005bf9	    0x488b35000000	            mov rsi, qword [0x04005c00] 	      5602	ldlang.c	FUNCTION_117	CALL_1
0x4005c00	      0xbf00000000	                              mov edi, 0	      5602	ldlang.c	FUNCTION_117	CALL_1
0x4005c05	      0xe8fddaffff	           call sym.lang_size_sections_1	      5602	ldlang.c	FUNCTION_117	CALL_1
0x4005c0a	        0x4883c408	                              add rsp, 8	      5604	ldlang.c	FUNCTION_117
0x4005c0e	              0xc3	                                     ret	      5604	ldlang.c	FUNCTION_117
lang_add_map	IF,0:WHILE,1:FOR,0:DO,0:SWITCH,1:functions,0:CALL,0:ELSE,0	6
0x40079f0	          0x803f00	                       cmp byte [rdi], 0	      7523	ldlang.c	FUNCTION_169	WHILE_1
0x40079f3	            0x7409	                            je 0x40079fe	      7523	ldlang.c	FUNCTION_169	WHILE_1
0x40079f5	        0x4883c701	                              add rdi, 1	      7531	ldlang.c	FUNCTION_169	WHILE_1
0x40079f9	          0x803f00	                       cmp byte [rdi], 0	      7523	ldlang.c	FUNCTION_169	WHILE_1
0x40079fc	            0x75f7	                           jne 0x40079f5	      7523	ldlang.c	FUNCTION_169	WHILE_1
0x40079fe	            0xf3c3	                                     ret	      7523	ldlang.c	FUNCTION_169	WHILE_1
lang_map	IF,4:WHILE,1:FOR,1:DO,0:SWITCH,0:functions,1:CALL,21:ELSE,0	184
0x4004da4	            0x4155	                                push r13	      2045	ldlang.c	FUNCTION_53
0x4004da6	            0x4154	                                push r12	      2045	ldlang.c	FUNCTION_53
0x4004da8	              0x55	                                push rbp	      2045	ldlang.c	FUNCTION_53
0x4004da9	              0x53	                                push rbx	      2045	ldlang.c	FUNCTION_53
0x4004daa	        0x4883ec78	                           sub rsp, 0x78	      2045	ldlang.c	FUNCTION_53
0x4004dae	    0x64488b042528	                mov rax, qword fs:[0x28]	      2045	ldlang.c	FUNCTION_53
0x4004db7	      0x4889442468	             mov qword [rsp + 0x68], rax	      2045	ldlang.c	FUNCTION_53
0x4004dbc	            0x31c0	                            xor eax, eax	      2045	ldlang.c	FUNCTION_53
0x4004dbe	    0x488b2d000000	            mov rbp, qword [0x04004dc5] 	      2049	ldlang.c	FUNCTION_53
0x4004dc5	          0x4885ed	                           test rbp, rbp	      2049	ldlang.c	FUNCTION_53
0x4004dc8	     0xf84aa000000	                            je 0x4004e78	      2049	ldlang.c	FUNCTION_53
0x4004dce	    0x41bc00000000	                             mov r12d, 0	      2049	ldlang.c	FUNCTION_53
0x4004dd4	        0x488b5520	            mov rdx, qword [rbp + 0x20] 	      2053	ldlang.c	FUNCTION_53	FUNCTION_1	IF_1
0x4004dd8	          0x8b4244	            mov eax, dword [rdx + 0x44] 	      2053	ldlang.c	FUNCTION_53	FUNCTION_1	IF_1
0x4004ddb	          0xc1e805	                              shr eax, 5	      2053	ldlang.c	FUNCTION_53	FUNCTION_1	IF_1
0x4004dde	      0xa940100000	                        test eax, 0x1040	      2053	ldlang.c	FUNCTION_53	FUNCTION_1	IF_1
0x4004de3	     0xf8582000000	                           jne 0x4004e6b	      2053	ldlang.c	FUNCTION_53	FUNCTION_1	IF_1
0x4004de9	        0xf6454810	           test byte [rbp + 0x48], 0x10 	      2054	ldlang.c	FUNCTION_53	FUNCTION_1	IF_1
0x4004ded	            0x757c	                           jne 0x4004e6b	      2054	ldlang.c	FUNCTION_53	FUNCTION_1	IF_1
0x4004def	    0x488b9a900000	            mov rbx, qword [rdx + 0x90] 	      2057	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1
0x4004df6	          0x4885db	                           test rbx, rbx	      2057	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1
0x4004df9	            0x7470	                            je 0x4004e6b	      2057	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1
0x4004dfb	        0x488b4368	            mov rax, qword [rbx + 0x68] 	      2058	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1	IF_2
0x4004dff	          0x4885c0	                           test rax, rax	      2058	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1	IF_2
0x4004e02	            0x7410	                            je 0x4004e14	      2058	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1	IF_2
0x4004e04	    0x488b15000000	            mov rdx, qword [0x04004e0b] 	      2059	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1	IF_2
0x4004e0b	    0x483990f00000	            cmp qword [rax + 0xf0], rdx 	      2059	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1	IF_2
0x4004e12	            0x744e	                            je 0x4004e62	      2059	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1	IF_2
0x4004e14	    0xf74320000030	      test dword [rbx + 0x20], 0x300000 	      2060	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1	IF_2
0x4004e1b	            0x7545	                           jne 0x4004e62	      2060	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1	IF_2
0x4004e1d	          0x4585e4	                         test r12d, r12d	      2062	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1	IF_2	IF_3
0x4004e20	            0x7533	                           jne 0x4004e55	      2062	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1	IF_2	IF_3
0x4004e22	      0xba05000000	                              mov edx, 5	      2064	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1	IF_2	IF_3	CALL_1
0x4004e27	      0xbe00000000	                              mov esi, 0	      2064	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1	IF_2	IF_3	CALL_1
0x4004e2c	      0xbf00000000	                              mov edi, 0	      2064	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1	IF_2	IF_3	CALL_1
0x4004e31	      0xe800000000	                          call 0x4004e36	      2064	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1	IF_2	IF_3	CALL_1
0x4004e36	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_22
0x4004e39	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_22
0x4004e3e	    0x488b3d000000	            mov rdi, qword [0x04004e45] 	        97	stdio2.h	CALL_22
0x4004e45	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_22
0x4004e4a	      0xe800000000	                          call 0x4004e4f	        97	stdio2.h	CALL_22
0x4004e4f	    0x41bc01000000	                             mov r12d, 1	      2065	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1	IF_2	IF_3
0x4004e55	      0xbe01000000	                              mov esi, 1	      2068	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1	IF_2	CALL_2
0x4004e5a	          0x4889df	                            mov rdi, rbx	      2068	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1	IF_2	CALL_2
0x4004e5d	      0xe85eb9ffff	            call sym.print_input_section	      2068	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1	IF_2	CALL_2
0x4004e62	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      2057	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1
0x4004e66	          0x4885db	                           test rbx, rbx	      2057	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1
0x4004e69	            0x7590	                           jne 0x4004dfb	      2057	ldlang.c	FUNCTION_53	FUNCTION_1	FOR_1
0x4004e6b	        0x488b6d30	            mov rbp, qword [rbp + 0x30] 	      2049	ldlang.c	FUNCTION_53
0x4004e6f	          0x4885ed	                           test rbp, rbp	      2049	ldlang.c	FUNCTION_53
0x4004e72	     0xf855cffffff	                           jne 0x4004dd4	      2049	ldlang.c	FUNCTION_53
0x4004e78	      0xba05000000	                              mov edx, 5	      2072	ldlang.c	FUNCTION_53	CALL_2
0x4004e7d	      0xbe00000000	                              mov esi, 0	      2072	ldlang.c	FUNCTION_53	CALL_2
0x4004e82	      0xbf00000000	                              mov edi, 0	      2072	ldlang.c	FUNCTION_53	CALL_2
0x4004e87	      0xe800000000	                          call 0x4004e8c	      2072	ldlang.c	FUNCTION_53	CALL_2
0x4004e8c	          0x4889c7	                            mov rdi, rax	      2072	ldlang.c	FUNCTION_53	CALL_2
0x4004e8f	      0xb800000000	                              mov eax, 0	      2072	ldlang.c	FUNCTION_53	CALL_2
0x4004e94	      0xe800000000	                          call 0x4004e99	      2072	ldlang.c	FUNCTION_53	CALL_2
0x4004e99	      0xba05000000	                              mov edx, 5	      2073	ldlang.c	FUNCTION_53
0x4004e9e	      0xbe00000000	                              mov esi, 0	      2073	ldlang.c	FUNCTION_53
0x4004ea3	      0xbf00000000	                              mov edi, 0	      2073	ldlang.c	FUNCTION_53
0x4004ea8	      0xe800000000	                          call 0x4004ead	      2073	ldlang.c	FUNCTION_53
0x4004ead	          0x4989c4	                            mov r12, rax	      2073	ldlang.c	FUNCTION_53
0x4004eb0	      0xba05000000	                              mov edx, 5	      2073	ldlang.c	FUNCTION_53
0x4004eb5	      0xbe00000000	                              mov esi, 0	      2073	ldlang.c	FUNCTION_53
0x4004eba	      0xbf00000000	                              mov edi, 0	      2073	ldlang.c	FUNCTION_53
0x4004ebf	      0xe800000000	                          call 0x4004ec4	      2073	ldlang.c	FUNCTION_53
0x4004ec4	          0x4889c5	                            mov rbp, rax	      2073	ldlang.c	FUNCTION_53
0x4004ec7	      0xba05000000	                              mov edx, 5	      2073	ldlang.c	FUNCTION_53
0x4004ecc	      0xbe00000000	                              mov esi, 0	      2073	ldlang.c	FUNCTION_53
0x4004ed1	      0xbf00000000	                              mov edi, 0	      2073	ldlang.c	FUNCTION_53
0x4004ed6	      0xe800000000	                          call 0x4004edb	      2073	ldlang.c	FUNCTION_53
0x4004edb	          0x4889c3	                            mov rbx, rax	      2073	ldlang.c	FUNCTION_53
0x4004ede	      0xba05000000	                              mov edx, 5	      2073	ldlang.c	FUNCTION_53
0x4004ee3	      0xbe00000000	                              mov esi, 0	      2073	ldlang.c	FUNCTION_53
0x4004ee8	      0xbf00000000	                              mov edi, 0	      2073	ldlang.c	FUNCTION_53
0x4004eed	      0xe800000000	                          call 0x4004ef2	      2073	ldlang.c	FUNCTION_53
0x4004ef2	        0x4883ec08	                              sub rsp, 8	        97	stdio2.h	CALL_22
0x4004ef6	            0x4154	                                push r12	        97	stdio2.h	CALL_22
0x4004ef8	          0x4989e9	                             mov r9, rbp	        97	stdio2.h	CALL_22
0x4004efb	          0x4989d8	                             mov r8, rbx	        97	stdio2.h	CALL_22
0x4004efe	          0x4889c1	                            mov rcx, rax	        97	stdio2.h	CALL_22
0x4004f01	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_22
0x4004f06	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_22
0x4004f0b	    0x488b3d000000	            mov rdi, qword [0x04004f12] 	        97	stdio2.h	CALL_22
0x4004f12	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_22
0x4004f17	      0xe800000000	                          call 0x4004f1c	        97	stdio2.h	CALL_22
0x4004f1c	    0x488b2d000000	            mov rbp, qword [0x04004f23] 	      2076	ldlang.c	FUNCTION_53	FOR_1
0x4004f23	        0x4883c410	                           add rsp, 0x10	      2076	ldlang.c	FUNCTION_53	FOR_1
0x4004f27	          0x4885ed	                           test rbp, rbp	      2076	ldlang.c	FUNCTION_53	FOR_1
0x4004f2a	     0xf84df000000	                            je 0x400500f	      2076	ldlang.c	FUNCTION_53	FOR_1
0x4004f30	          0x4989e4	                            mov r12, rsp	        33	stdio2.h	FUNCTION_210	CALL_1
0x4004f33	    0x49c7c5ffffff	             mov r13, 0xffffffffffffffff	      2085	ldlang.c	FUNCTION_53	FOR_1	CALL_8
0x4004f3a	        0x488b4d00	                    mov rcx, qword [rbp]	        97	stdio2.h	CALL_22
0x4004f3e	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_22
0x4004f43	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_22
0x4004f48	    0x488b3d000000	            mov rdi, qword [0x04004f4f] 	        97	stdio2.h	CALL_22
0x4004f4f	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_22
0x4004f54	      0xe800000000	                          call 0x4004f59	        97	stdio2.h	CALL_22
0x4004f59	        0x4c8b4520	              mov r8, qword [rbp + 0x20]	        33	stdio2.h	FUNCTION_210	CALL_1
0x4004f5d	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_210	CALL_1
0x4004f62	      0xba64000000	                           mov edx, 0x64	        33	stdio2.h	FUNCTION_210	CALL_1
0x4004f67	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_210	CALL_1
0x4004f6c	          0x4c89e7	                            mov rdi, r12	        33	stdio2.h	FUNCTION_210	CALL_1
0x4004f6f	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_210	CALL_1
0x4004f74	      0xe800000000	                          call 0x4004f79	        33	stdio2.h	FUNCTION_210	CALL_1
0x4004f79	          0x4c89e6	                            mov rsi, r12	      2084	ldlang.c	FUNCTION_53	FOR_1	CALL_7
0x4004f7c	      0xbf00000000	                              mov edi, 0	      2084	ldlang.c	FUNCTION_53	FOR_1	CALL_7
0x4004f81	      0xb800000000	                              mov eax, 0	      2084	ldlang.c	FUNCTION_53	FOR_1	CALL_7
0x4004f86	      0xe800000000	                          call 0x4004f8b	      2084	ldlang.c	FUNCTION_53	FOR_1	CALL_7
0x4004f8b	      0xb800000000	                              mov eax, 0	      2085	ldlang.c	FUNCTION_53	FOR_1	CALL_8
0x4004f90	          0x4c89e9	                            mov rcx, r13	      2085	ldlang.c	FUNCTION_53	FOR_1	CALL_8
0x4004f93	          0x4c89e7	                            mov rdi, r12	      2085	ldlang.c	FUNCTION_53	FOR_1	CALL_8
0x4004f96	            0xf2ae	              repne scasb al, byte [rdi]	      2085	ldlang.c	FUNCTION_53	FOR_1	CALL_8
0x4004f98	          0x48f7d1	                                 not rcx	      2085	ldlang.c	FUNCTION_53	FOR_1	CALL_8
0x4004f9b	        0x4883e901	                              sub rcx, 1	      2085	ldlang.c	FUNCTION_53	FOR_1	CALL_8
0x4004f9f	            0x89cb	                            mov ebx, ecx	      2085	ldlang.c	FUNCTION_53	FOR_1	CALL_8
0x4004fa1	          0x83f90f	                            cmp ecx, 0xf	      2086	ldlang.c	FUNCTION_53	FOR_1	WHILE_1
0x4004fa4	            0x7f0d	                            jg 0x4004fb3	      2086	ldlang.c	FUNCTION_53	FOR_1	WHILE_1
0x4004fa6	      0xe800000000	                          call 0x4004fab	      2088	ldlang.c	FUNCTION_53	FOR_1	WHILE_1	CALL_9
0x4004fab	          0x83c301	                              add ebx, 1	      2089	ldlang.c	FUNCTION_53	FOR_1	WHILE_1
0x4004fae	          0x83fb10	                           cmp ebx, 0x10	      2086	ldlang.c	FUNCTION_53	FOR_1	WHILE_1
0x4004fb1	            0x75f3	                           jne 0x4004fa6	      2086	ldlang.c	FUNCTION_53	FOR_1	WHILE_1
0x4004fb3	        0x488b7528	            mov rsi, qword [rbp + 0x28] 	      2092	ldlang.c	FUNCTION_53	FOR_1	CALL_10
0x4004fb7	      0xbf00000000	                              mov edi, 0	      2092	ldlang.c	FUNCTION_53	FOR_1	CALL_10
0x4004fbc	      0xb800000000	                              mov eax, 0	      2092	ldlang.c	FUNCTION_53	FOR_1	CALL_10
0x4004fc1	      0xe800000000	                          call 0x4004fc6	      2092	ldlang.c	FUNCTION_53	FOR_1	CALL_10
0x4004fc6	      0x48837d4800	               cmp qword [rbp + 0x48], 0	      2093	ldlang.c	FUNCTION_53	FOR_1	IF_1
0x4004fcb	            0x7430	                            je 0x4004ffd	      2093	ldlang.c	FUNCTION_53	FOR_1	IF_1
0x4004fcd	        0x837d4800	               cmp dword [rbp + 0x48], 0	      2098	ldlang.c	FUNCTION_53	FOR_1	IF_1	IF_2
0x4004fd1	            0x740d	                            je 0x4004fe0	      2098	ldlang.c	FUNCTION_53	FOR_1	IF_1	IF_2
0x4004fd3	      0xe800000000	                          call 0x4004fd8	      2100	ldlang.c	FUNCTION_53	FOR_1	IF_1	IF_2	CALL_12
0x4004fd8	          0x8b7d48	            mov edi, dword [rbp + 0x48] 	      2101	ldlang.c	FUNCTION_53	FOR_1	IF_1	IF_2	CALL_13
0x4004fdb	      0xe8b1b6ffff	                 call sym.lang_map_flags	      2101	ldlang.c	FUNCTION_53	FOR_1	IF_1	IF_2	CALL_13
0x4004fe0	        0x837d4c00	               cmp dword [rbp + 0x4c], 0	      2104	ldlang.c	FUNCTION_53	FOR_1	IF_1	IF_3
0x4004fe4	            0x7417	                            je 0x4004ffd	      2104	ldlang.c	FUNCTION_53	FOR_1	IF_1	IF_3
0x4004fe6	      0xbf00000000	                              mov edi, 0	      2106	ldlang.c	FUNCTION_53	FOR_1	IF_1	IF_3	CALL_14
0x4004feb	      0xb800000000	                              mov eax, 0	      2106	ldlang.c	FUNCTION_53	FOR_1	IF_1	IF_3	CALL_14
0x4004ff0	      0xe800000000	                          call 0x4004ff5	      2106	ldlang.c	FUNCTION_53	FOR_1	IF_1	IF_3	CALL_14
0x4004ff5	          0x8b7d4c	            mov edi, dword [rbp + 0x4c] 	      2107	ldlang.c	FUNCTION_53	FOR_1	IF_1	IF_3	CALL_15
0x4004ff8	      0xe894b6ffff	                 call sym.lang_map_flags	      2107	ldlang.c	FUNCTION_53	FOR_1	IF_1	IF_3	CALL_15
0x4004ffd	      0xe800000000	                          call 0x4005002	      2111	ldlang.c	FUNCTION_53	FOR_1	CALL_16
0x4005002	        0x488b6d10	            mov rbp, qword [rbp + 0x10] 	      2076	ldlang.c	FUNCTION_53	FOR_1
0x4005006	          0x4885ed	                           test rbp, rbp	      2076	ldlang.c	FUNCTION_53	FOR_1
0x4005009	     0xf852bffffff	                           jne 0x4004f3a	      2076	ldlang.c	FUNCTION_53	FOR_1
0x400500f	      0xba05000000	                              mov edx, 5	      2114	ldlang.c	FUNCTION_53	CALL_17
0x4005014	      0xbe00000000	                              mov esi, 0	      2114	ldlang.c	FUNCTION_53	CALL_17
0x4005019	      0xbf00000000	                              mov edi, 0	      2114	ldlang.c	FUNCTION_53	CALL_17
0x400501e	      0xe800000000	                          call 0x4005023	      2114	ldlang.c	FUNCTION_53	CALL_17
0x4005023	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_22
0x4005026	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_22
0x400502b	    0x488b3d000000	            mov rdi, qword [0x04005032] 	        97	stdio2.h	CALL_22
0x4005032	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_22
0x4005037	      0xe800000000	                          call 0x400503c	        97	stdio2.h	CALL_22
0x400503c	    0xf60500000000	           test byte [0x04005043], 0x10 	      2116	ldlang.c	FUNCTION_53	IF_4
0x4005043	            0x7535	                           jne 0x400507a	      2116	ldlang.c	FUNCTION_53	IF_4
0x4005045	    0x41b800000000	                              mov r8d, 0	      2118	ldlang.c	FUNCTION_53	IF_4	CALL_18
0x400504b	      0xb900000000	                              mov ecx, 0	      2118	ldlang.c	FUNCTION_53	IF_4	CALL_18
0x4005050	      0xba00000000	                              mov edx, 0	      2118	ldlang.c	FUNCTION_53	IF_4	CALL_18
0x4005055	      0xbee8030000	                          mov esi, 0x3e8	      2118	ldlang.c	FUNCTION_53	IF_4	CALL_18
0x400505a	      0xbf00000000	                              mov edi, 0	      2118	ldlang.c	FUNCTION_53	IF_4	CALL_18
0x400505f	      0xe800000000	                          call 0x4005064	      2118	ldlang.c	FUNCTION_53	IF_4	CALL_18
0x4005064	      0xba00000000	                              mov edx, 0	      2119	ldlang.c	FUNCTION_53	IF_4	CALL_19
0x4005069	      0xbe00000000	                              mov esi, 0	      2119	ldlang.c	FUNCTION_53	IF_4	CALL_19
0x400506e	    0x488b3d000000	            mov rdi, qword [0x04005075] 	      2119	ldlang.c	FUNCTION_53	IF_4	CALL_19
0x4005075	      0xe800000000	                          call 0x400507a	      2119	ldlang.c	FUNCTION_53	IF_4	CALL_19
0x400507a	    0x830500000000	               add dword [0x04005081], 1	      2121	ldlang.c	FUNCTION_53
0x4005081	    0x488b35000000	            mov rsi, qword [0x04005088] 	      4607	ldlang.c	FUNCTION_106	CALL_1
0x4005088	    0x488b3d000000	            mov rdi, qword [0x0400508f] 	      4607	ldlang.c	FUNCTION_106	CALL_1
0x400508f	      0xe8c1c7ffff	           call sym.print_statement_list	      4607	ldlang.c	FUNCTION_106	CALL_1
0x4005094	    0x488b15000000	            mov rdx, qword [0x0400509b] 	      2124	ldlang.c	FUNCTION_53	CALL_21
0x400509b	      0xbe00000000	                              mov esi, 0	      2124	ldlang.c	FUNCTION_53	CALL_21
0x40050a0	    0x488b3d000000	            mov rdi, qword [0x040050a7] 	      2124	ldlang.c	FUNCTION_53	CALL_21
0x40050a7	      0xe800000000	                          call 0x40050ac	      2124	ldlang.c	FUNCTION_53	CALL_21
0x40050ac	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      2126	ldlang.c	FUNCTION_53
0x40050b1	    0x644833042528	                xor rax, qword fs:[0x28]	      2126	ldlang.c	FUNCTION_53
0x40050ba	            0x7405	                            je 0x40050c1	      2126	ldlang.c	FUNCTION_53
0x40050bc	      0xe800000000	                          call 0x40050c1	      2126	ldlang.c	FUNCTION_53
0x40050c1	        0x4883c478	                           add rsp, 0x78	      2126	ldlang.c	FUNCTION_53
0x40050c5	              0x5b	                                 pop rbx	      2126	ldlang.c	FUNCTION_53
0x40050c6	              0x5d	                                 pop rbp	      2126	ldlang.c	FUNCTION_53
0x40050c7	            0x415c	                                 pop r12	      2126	ldlang.c	FUNCTION_53
0x40050c9	            0x415d	                                 pop r13	      2126	ldlang.c	FUNCTION_53
0x40050cb	              0xc3	                                     ret	      2126	ldlang.c	FUNCTION_53
lang_add_entry	IF,1:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,0:ELSE,0	9
0x40079a2	    0x48833d000000	               cmp qword [0x040079aa], 0	      7493	ldlang.c	FUNCTION_166	IF_1
0x40079aa	            0x740d	                            je 0x40079b9	      7493	ldlang.c	FUNCTION_166	IF_1
0x40079ac	            0x85f6	                           test esi, esi	      7493	ldlang.c	FUNCTION_166	IF_1
0x40079ae	            0x7509	                           jne 0x40079b9	      7493	ldlang.c	FUNCTION_166	IF_1
0x40079b0	    0x833d00000000	               cmp dword [0x040079b7], 0	      7494	ldlang.c	FUNCTION_166	IF_1
0x40079b7	            0x750d	                           jne 0x40079c6	      7494	ldlang.c	FUNCTION_166	IF_1
0x40079b9	    0x48893d000000	            mov qword [0x040079c0], rdi 	      7496	ldlang.c	FUNCTION_166	IF_1
0x40079c0	    0x893500000000	            mov dword [0x040079c6], esi 	      7497	ldlang.c	FUNCTION_166	IF_1
0x40079c6	            0xf3c3	                                     ret	      7497	ldlang.c	FUNCTION_166	IF_1
init_os	IF,7:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,9:ELSE,0	72
0x400480f	            0x4154	                                push r12	      2165	ldlang.c	FUNCTION_55
0x4004811	              0x55	                                push rbp	      2165	ldlang.c	FUNCTION_55
0x4004812	              0x53	                                push rbx	      2165	ldlang.c	FUNCTION_55
0x4004813	          0x4889fb	                            mov rbx, rdi	      2165	ldlang.c	FUNCTION_55
0x4004816	            0x89f5	                            mov ebp, esi	      2165	ldlang.c	FUNCTION_55
0x4004818	        0x488b7730	            mov rsi, qword [rdi + 0x30] 	      2166	ldlang.c	FUNCTION_55	IF_1
0x400481c	      0xbf00000000	                              mov edi, 0	      2166	ldlang.c	FUNCTION_55	IF_1
0x4004821	      0xb90a000000	                            mov ecx, 0xa	      2166	ldlang.c	FUNCTION_55	IF_1
0x4004826	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2166	ldlang.c	FUNCTION_55	IF_1
0x4004828	           0xf97c2	                                 seta dl	      2166	ldlang.c	FUNCTION_55	IF_1
0x400482b	           0xf92c0	                                 setb al	      2166	ldlang.c	FUNCTION_55	IF_1
0x400482e	            0x38c2	                              cmp dl, al	      2166	ldlang.c	FUNCTION_55	IF_1
0x4004830	            0x7526	                           jne 0x4004858	      2166	ldlang.c	FUNCTION_55	IF_1
0x4004832	      0xba05000000	                              mov edx, 5	      2167	ldlang.c	FUNCTION_55	CALL_2
0x4004837	      0xbe00000000	                              mov esi, 0	      2167	ldlang.c	FUNCTION_55	CALL_2
0x400483c	      0xbf00000000	                              mov edi, 0	      2167	ldlang.c	FUNCTION_55	CALL_2
0x4004841	      0xe800000000	                          call 0x4004846	      2167	ldlang.c	FUNCTION_55	CALL_2
0x4004846	      0xbe00000000	                              mov esi, 0	      2167	ldlang.c	FUNCTION_55	CALL_2
0x400484b	          0x4889c7	                            mov rdi, rax	      2167	ldlang.c	FUNCTION_55	CALL_2
0x400484e	      0xb800000000	                              mov eax, 0	      2167	ldlang.c	FUNCTION_55	CALL_2
0x4004853	      0xe800000000	                          call 0x4004858	      2167	ldlang.c	FUNCTION_55	CALL_2
0x4004858	    0x81bb84000000	          cmp dword [rbx + 0x84], 0x17e 	      2169	ldlang.c	FUNCTION_55	IF_2
0x4004862	            0x7414	                            je 0x4004878	      2169	ldlang.c	FUNCTION_55	IF_2
0x4004864	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	      2170	ldlang.c	FUNCTION_55	CALL_3
0x4004868	    0x488b3d000000	            mov rdi, qword [0x0400486f] 	      2170	ldlang.c	FUNCTION_55	CALL_3
0x400486f	      0xe800000000	                          call 0x4004874	      2170	ldlang.c	FUNCTION_55	CALL_3
0x4004874	        0x48894338	             mov qword [rbx + 0x38], rax	      2170	ldlang.c	FUNCTION_55	CALL_3
0x4004878	      0x48837b3800	               cmp qword [rbx + 0x38], 0	      2171	ldlang.c	FUNCTION_55	IF_3
0x400487d	            0x7554	                           jne 0x40048d3	      2171	ldlang.c	FUNCTION_55	IF_3
0x400487f	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	      2172	ldlang.c	FUNCTION_55	IF_3	CALL_4
0x4004883	            0x89ea	                            mov edx, ebp	      2172	ldlang.c	FUNCTION_55	IF_3	CALL_4
0x4004885	    0x488b3d000000	            mov rdi, qword [0x0400488c] 	      2172	ldlang.c	FUNCTION_55	IF_3	CALL_4
0x400488c	      0xe800000000	                          call 0x4004891	      2172	ldlang.c	FUNCTION_55	IF_3	CALL_4
0x4004891	        0x48894338	             mov qword [rbx + 0x38], rax	      2172	ldlang.c	FUNCTION_55	IF_3	CALL_4
0x4004895	          0x4885c0	                           test rax, rax	      2174	ldlang.c	FUNCTION_55	IF_4
0x4004898	            0x7539	                           jne 0x40048d3	      2174	ldlang.c	FUNCTION_55	IF_4
0x400489a	        0x4c8b6330	            mov r12, qword [rbx + 0x30] 	      2176	ldlang.c	FUNCTION_55	IF_4	CALL_6
0x400489e	    0x488b05000000	            mov rax, qword [0x040048a5] 	      2178	ldlang.c	FUNCTION_55	IF_4
0x40048a5	        0x488b4008	                mov rax, qword [rax + 8]	      2176	ldlang.c	FUNCTION_55	IF_4	CALL_6
0x40048a9	          0x488b28	                    mov rbp, qword [rax]	      2176	ldlang.c	FUNCTION_55	IF_4	CALL_6
0x40048ac	      0xba05000000	                              mov edx, 5	      2176	ldlang.c	FUNCTION_55	IF_4	CALL_6
0x40048b1	      0xbe00000000	                              mov esi, 0	      2176	ldlang.c	FUNCTION_55	IF_4	CALL_6
0x40048b6	      0xbf00000000	                              mov edi, 0	      2176	ldlang.c	FUNCTION_55	IF_4	CALL_6
0x40048bb	      0xe800000000	                          call 0x40048c0	      2176	ldlang.c	FUNCTION_55	IF_4	CALL_6
0x40048c0	          0x4c89e2	                            mov rdx, r12	      2176	ldlang.c	FUNCTION_55	IF_4	CALL_6
0x40048c3	          0x4889ee	                            mov rsi, rbp	      2176	ldlang.c	FUNCTION_55	IF_4	CALL_6
0x40048c6	          0x4889c7	                            mov rdi, rax	      2176	ldlang.c	FUNCTION_55	IF_4	CALL_6
0x40048c9	      0xb800000000	                              mov eax, 0	      2176	ldlang.c	FUNCTION_55	IF_4	CALL_6
0x40048ce	      0xe800000000	                          call 0x40048d3	      2176	ldlang.c	FUNCTION_55	IF_4	CALL_6
0x40048d3	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      2180	ldlang.c	FUNCTION_55
0x40048d7	        0x48894068	             mov qword [rax + 0x68], rax	      2180	ldlang.c	FUNCTION_55
0x40048db	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      2181	ldlang.c	FUNCTION_55
0x40048df	    0x48c740600000	               mov qword [rax + 0x60], 0	      2181	ldlang.c	FUNCTION_55
0x40048e7	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      2185	ldlang.c	FUNCTION_55	CALL_7
0x40048eb	    0x488998a80000	             mov qword [rax + 0xa8], rbx	      2185	ldlang.c	FUNCTION_55	CALL_7
0x40048f2	        0x488b7b58	            mov rdi, qword [rbx + 0x58] 	      2189	ldlang.c	FUNCTION_55	IF_5
0x40048f6	          0x4885ff	                           test rdi, rdi	      2189	ldlang.c	FUNCTION_55	IF_5
0x40048f9	            0x7405	                            je 0x4004900	      2189	ldlang.c	FUNCTION_55	IF_5
0x40048fb	      0xe859feffff	                    call sym.exp_init_os	      2190	ldlang.c	FUNCTION_55	CALL_8
0x4004900	        0x488b7b60	            mov rdi, qword [rbx + 0x60] 	      2192	ldlang.c	FUNCTION_55	IF_6
0x4004904	          0x4885ff	                           test rdi, rdi	      2192	ldlang.c	FUNCTION_55	IF_6
0x4004907	            0x7405	                            je 0x400490e	      2192	ldlang.c	FUNCTION_55	IF_6
0x4004909	      0xe84bfeffff	                    call sym.exp_init_os	      2193	ldlang.c	FUNCTION_55	CALL_9
0x400490e	    0x8b8380000000	            mov eax, dword [rbx + 0x80] 	      2196	ldlang.c	FUNCTION_55	IF_7
0x4004914	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      2196	ldlang.c	FUNCTION_55	IF_7
0x4004917	            0x7407	                            je 0x4004920	      2196	ldlang.c	FUNCTION_55	IF_7
0x4004919	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	      2197	ldlang.c	FUNCTION_55	IF_7
0x400491d	          0x894270	             mov dword [rdx + 0x70], eax	      2197	ldlang.c	FUNCTION_55	IF_7
0x4004920	              0x5b	                                 pop rbx	      2198	ldlang.c	FUNCTION_55
0x4004921	              0x5d	                                 pop rbp	      2198	ldlang.c	FUNCTION_55
0x4004922	            0x415c	                                 pop r12	      2198	ldlang.c	FUNCTION_55
0x4004924	              0xc3	                                     ret	      2198	ldlang.c	FUNCTION_55
check_section_callback	IF,2:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,1:ELSE,0	19
0x40020a6	              0x55	                                push rbp	      2627	ldlang.c	FUNCTION_62
0x40020a7	              0x53	                                push rbx	      2627	ldlang.c	FUNCTION_62
0x40020a8	        0x4883ec08	                              sub rsp, 8	      2627	ldlang.c	FUNCTION_62
0x40020ac	          0x4889d3	                            mov rbx, rdx	      2627	ldlang.c	FUNCTION_62
0x40020af	          0x4c89cd	                             mov rbp, r9	      2627	ldlang.c	FUNCTION_62
0x40020b2	          0x4c89ce	                             mov rsi, r9	      2633	ldlang.c	FUNCTION_62	IF_1	CALL_1
0x40020b5	          0x4889d7	                            mov rdi, rdx	      2633	ldlang.c	FUNCTION_62	IF_1	CALL_1
0x40020b8	      0xe84affffff	               call sym.unique_section_p	      2633	ldlang.c	FUNCTION_62	IF_1	CALL_1
0x40020bd	            0x85c0	                           test eax, eax	      2633	ldlang.c	FUNCTION_62	IF_1	CALL_1
0x40020bf	            0x7514	                           jne 0x40020d5	      2633	ldlang.c	FUNCTION_62	IF_1	CALL_1
0x40020c1	      0x48837b6800	               cmp qword [rbx + 0x68], 0	      2636	ldlang.c	FUNCTION_62	IF_2
0x40020c6	            0x750d	                           jne 0x40020d5	      2636	ldlang.c	FUNCTION_62	IF_2
0x40020c8	        0xf6432008	               test byte [rbx + 0x20], 8	      2636	ldlang.c	FUNCTION_62	IF_2
0x40020cc	            0x7507	                           jne 0x40020d5	      2636	ldlang.c	FUNCTION_62	IF_2
0x40020ce	    0x80a590000000	             and byte [rbp + 0x90], 0xfb	      2637	ldlang.c	FUNCTION_62	IF_2
0x40020d5	        0x4883c408	                              add rsp, 8	      2638	ldlang.c	FUNCTION_62
0x40020d9	              0x5b	                                 pop rbx	      2638	ldlang.c	FUNCTION_62
0x40020da	              0x5d	                                 pop rbp	      2638	ldlang.c	FUNCTION_62
0x40020db	              0xc3	                                     ret	      2638	ldlang.c	FUNCTION_62
lang_memory_region_alias	IF,4:WHILE,0:FOR,2:DO,0:SWITCH,0:functions,0:CALL,8:ELSE,0	93
0x40043c9	            0x4156	                                push r14	      1351	ldlang.c	FUNCTION_42
0x40043cb	            0x4155	                                push r13	      1351	ldlang.c	FUNCTION_42
0x40043cd	            0x4154	                                push r12	      1351	ldlang.c	FUNCTION_42
0x40043cf	              0x55	                                push rbp	      1351	ldlang.c	FUNCTION_42
0x40043d0	              0x53	                                push rbx	      1351	ldlang.c	FUNCTION_42
0x40043d1	          0x4989fc	                            mov r12, rdi	      1351	ldlang.c	FUNCTION_42
0x40043d4	          0x4989f6	                            mov r14, rsi	      1351	ldlang.c	FUNCTION_42
0x40043d7	      0xbf00000000	                              mov edi, 0	      1359	ldlang.c	FUNCTION_42	IF_1
0x40043dc	      0xb90a000000	                            mov ecx, 0xa	      1359	ldlang.c	FUNCTION_42	IF_1
0x40043e1	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1359	ldlang.c	FUNCTION_42	IF_1
0x40043e3	           0xf97c2	                                 seta dl	      1359	ldlang.c	FUNCTION_42	IF_1
0x40043e6	           0xf92c0	                                 setb al	      1359	ldlang.c	FUNCTION_42	IF_1
0x40043e9	            0x38c2	                              cmp dl, al	      1359	ldlang.c	FUNCTION_42	IF_1
0x40043eb	            0x7419	                            je 0x4004406	      1359	ldlang.c	FUNCTION_42	IF_1
0x40043ed	      0xbf00000000	                              mov edi, 0	      1360	ldlang.c	FUNCTION_42	IF_1
0x40043f2	      0xb90a000000	                            mov ecx, 0xa	      1360	ldlang.c	FUNCTION_42	IF_1
0x40043f7	          0x4c89e6	                            mov rsi, r12	      1360	ldlang.c	FUNCTION_42	IF_1
0x40043fa	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1360	ldlang.c	FUNCTION_42	IF_1
0x40043fc	           0xf97c2	                                 seta dl	      1360	ldlang.c	FUNCTION_42	IF_1
0x40043ff	           0xf92c0	                                 setb al	      1360	ldlang.c	FUNCTION_42	IF_1
0x4004402	            0x38c2	                              cmp dl, al	      1360	ldlang.c	FUNCTION_42	IF_1
0x4004404	            0x7526	                           jne 0x400442c	      1360	ldlang.c	FUNCTION_42	IF_1
0x4004406	      0xba05000000	                              mov edx, 5	      1361	ldlang.c	FUNCTION_42	CALL_2
0x400440b	      0xbe00000000	                              mov esi, 0	      1361	ldlang.c	FUNCTION_42	CALL_2
0x4004410	      0xbf00000000	                              mov edi, 0	      1361	ldlang.c	FUNCTION_42	CALL_2
0x4004415	      0xe800000000	                          call 0x400441a	      1361	ldlang.c	FUNCTION_42	CALL_2
0x400441a	      0xbe00000000	                              mov esi, 0	      1361	ldlang.c	FUNCTION_42	CALL_2
0x400441f	          0x4889c7	                            mov rdi, rax	      1361	ldlang.c	FUNCTION_42	CALL_2
0x4004422	      0xb800000000	                              mov eax, 0	      1361	ldlang.c	FUNCTION_42	CALL_2
0x4004427	      0xe800000000	                          call 0x400442c	      1361	ldlang.c	FUNCTION_42	CALL_2
0x400442c	    0x4c8b2d000000	            mov r13, qword [0x04004433] 	      1366	ldlang.c	FUNCTION_42	FOR_1
0x4004433	          0x4d85ed	                           test r13, r13	      1366	ldlang.c	FUNCTION_42	FOR_1
0x4004436	            0x7475	                            je 0x40044ad	      1366	ldlang.c	FUNCTION_42	FOR_1
0x4004438	      0xbd00000000	                              mov ebp, 0	      1366	ldlang.c	FUNCTION_42	FOR_1
0x400443d	          0x4c89eb	                            mov rbx, r13	      1367	ldlang.c	FUNCTION_42	FOR_1	FOR_2
0x4004440	          0x4d85ed	                           test r13, r13	      1367	ldlang.c	FUNCTION_42	FOR_1	FOR_2
0x4004443	            0x7457	                            je 0x400449c	      1367	ldlang.c	FUNCTION_42	FOR_1	FOR_2
0x4004445	          0x4885ed	                           test rbp, rbp	      1369	ldlang.c	FUNCTION_42	FOR_1	FOR_2	IF_2
0x4004448	            0x7511	                           jne 0x400445b	      1369	ldlang.c	FUNCTION_42	FOR_1	FOR_2	IF_2
0x400444a	          0x4c89f6	                            mov rsi, r14	      1369	ldlang.c	FUNCTION_42	FOR_1	FOR_2	IF_2
0x400444d	          0x488b3b	                    mov rdi, qword [rbx]	      1369	ldlang.c	FUNCTION_42	FOR_1	FOR_2	IF_2
0x4004450	      0xe800000000	                          call 0x4004455	      1369	ldlang.c	FUNCTION_42	FOR_1	FOR_2	IF_2
0x4004455	            0x85c0	                           test eax, eax	      1369	ldlang.c	FUNCTION_42	FOR_1	FOR_2	IF_2
0x4004457	        0x490f44ed	                          cmove rbp, r13	      1369	ldlang.c	FUNCTION_42	FOR_1	FOR_2	IF_2
0x400445b	          0x4c89e6	                            mov rsi, r12	      1371	ldlang.c	FUNCTION_42	FOR_1	FOR_2	IF_3
0x400445e	          0x488b3b	                    mov rdi, qword [rbx]	      1371	ldlang.c	FUNCTION_42	FOR_1	FOR_2	IF_3
0x4004461	      0xe800000000	                          call 0x4004466	      1371	ldlang.c	FUNCTION_42	FOR_1	FOR_2	IF_3
0x4004466	            0x85c0	                           test eax, eax	      1371	ldlang.c	FUNCTION_42	FOR_1	FOR_2	IF_3
0x4004468	            0x7529	                           jne 0x4004493	      1371	ldlang.c	FUNCTION_42	FOR_1	FOR_2	IF_3
0x400446a	      0xba05000000	                              mov edx, 5	      1372	ldlang.c	FUNCTION_42	FOR_1	FOR_2	IF_3	CALL_4
0x400446f	      0xbe00000000	                              mov esi, 0	      1372	ldlang.c	FUNCTION_42	FOR_1	FOR_2	IF_3	CALL_4
0x4004474	      0xbf00000000	                              mov edi, 0	      1372	ldlang.c	FUNCTION_42	FOR_1	FOR_2	IF_3	CALL_4
0x4004479	      0xe800000000	                          call 0x400447e	      1372	ldlang.c	FUNCTION_42	FOR_1	FOR_2	IF_3	CALL_4
0x400447e	          0x4c89e2	                            mov rdx, r12	      1372	ldlang.c	FUNCTION_42	FOR_1	FOR_2	IF_3	CALL_4
0x4004481	      0xbe00000000	                              mov esi, 0	      1372	ldlang.c	FUNCTION_42	FOR_1	FOR_2	IF_3	CALL_4
0x4004486	          0x4889c7	                            mov rdi, rax	      1372	ldlang.c	FUNCTION_42	FOR_1	FOR_2	IF_3	CALL_4
0x4004489	      0xb800000000	                              mov eax, 0	      1372	ldlang.c	FUNCTION_42	FOR_1	FOR_2	IF_3	CALL_4
0x400448e	      0xe800000000	                          call 0x4004493	      1372	ldlang.c	FUNCTION_42	FOR_1	FOR_2	IF_3	CALL_4
0x4004493	        0x488b5b08	                mov rbx, qword [rbx + 8]	      1367	ldlang.c	FUNCTION_42	FOR_1	FOR_2
0x4004497	          0x4885db	                           test rbx, rbx	      1367	ldlang.c	FUNCTION_42	FOR_1	FOR_2
0x400449a	            0x75a9	                           jne 0x4004445	      1367	ldlang.c	FUNCTION_42	FOR_1	FOR_2
0x400449c	        0x4d8b6d10	            mov r13, qword [r13 + 0x10] 	      1366	ldlang.c	FUNCTION_42	FOR_1
0x40044a0	          0x4d85ed	                           test r13, r13	      1366	ldlang.c	FUNCTION_42	FOR_1
0x40044a3	            0x7598	                           jne 0x400443d	      1366	ldlang.c	FUNCTION_42	FOR_1
0x40044a5	          0x4885ed	                           test rbp, rbp	      1378	ldlang.c	FUNCTION_42	IF_4
0x40044a8	            0x7532	                           jne 0x40044dc	      1378	ldlang.c	FUNCTION_42	IF_4
0x40044aa	          0x4989ed	                            mov r13, rbp	      1378	ldlang.c	FUNCTION_42	IF_4
0x40044ad	      0xba05000000	                              mov edx, 5	      1379	ldlang.c	FUNCTION_42	IF_4	CALL_6
0x40044b2	      0xbe00000000	                              mov esi, 0	      1379	ldlang.c	FUNCTION_42	IF_4	CALL_6
0x40044b7	      0xbf00000000	                              mov edi, 0	      1379	ldlang.c	FUNCTION_42	IF_4	CALL_6
0x40044bc	      0xe800000000	                          call 0x40044c1	      1379	ldlang.c	FUNCTION_42	IF_4	CALL_6
0x40044c1	          0x4c89e1	                            mov rcx, r12	      1379	ldlang.c	FUNCTION_42	IF_4	CALL_6
0x40044c4	          0x4c89f2	                            mov rdx, r14	      1379	ldlang.c	FUNCTION_42	IF_4	CALL_6
0x40044c7	      0xbe00000000	                              mov esi, 0	      1379	ldlang.c	FUNCTION_42	IF_4	CALL_6
0x40044cc	          0x4889c7	                            mov rdi, rax	      1379	ldlang.c	FUNCTION_42	IF_4	CALL_6
0x40044cf	      0xb800000000	                              mov eax, 0	      1379	ldlang.c	FUNCTION_42	IF_4	CALL_6
0x40044d4	      0xe800000000	                          call 0x40044d9	      1379	ldlang.c	FUNCTION_42	IF_4	CALL_6
0x40044d9	          0x4c89ed	                            mov rbp, r13	      1379	ldlang.c	FUNCTION_42	IF_4	CALL_6
0x40044dc	      0xbf10000000	                           mov edi, 0x10	      1384	ldlang.c	FUNCTION_42	CALL_7
0x40044e1	      0xe800000000	                          call 0x40044e6	      1384	ldlang.c	FUNCTION_42	CALL_7
0x40044e6	          0x4889c3	                            mov rbx, rax	      1384	ldlang.c	FUNCTION_42	CALL_7
0x40044e9	          0x4c89e7	                            mov rdi, r12	      1385	ldlang.c	FUNCTION_42	CALL_8
0x40044ec	      0xe800000000	                          call 0x40044f1	      1385	ldlang.c	FUNCTION_42	CALL_8
0x40044f1	          0x488903	                    mov qword [rbx], rax	      1385	ldlang.c	FUNCTION_42	CALL_8
0x40044f4	        0x488b4508	                mov rax, qword [rbp + 8]	      1386	ldlang.c	FUNCTION_42
0x40044f8	        0x48894308	                mov qword [rbx + 8], rax	      1386	ldlang.c	FUNCTION_42
0x40044fc	        0x48895d08	                mov qword [rbp + 8], rbx	      1387	ldlang.c	FUNCTION_42
0x4004500	              0x5b	                                 pop rbx	      1388	ldlang.c	FUNCTION_42
0x4004501	              0x5d	                                 pop rbp	      1388	ldlang.c	FUNCTION_42
0x4004502	            0x415c	                                 pop r12	      1388	ldlang.c	FUNCTION_42
0x4004504	            0x415d	                                 pop r13	      1388	ldlang.c	FUNCTION_42
0x4004506	            0x415e	                                 pop r14	      1388	ldlang.c	FUNCTION_42
0x4004508	              0xc3	                                     ret	      1388	ldlang.c	FUNCTION_42
insert_pad	IF,5:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,1:ELSE,2	56
0x4003116	            0x4156	                                push r14	      4642	ldlang.c	FUNCTION_108
0x4003118	            0x4155	                                push r13	      4642	ldlang.c	FUNCTION_108
0x400311a	            0x4154	                                push r12	      4642	ldlang.c	FUNCTION_108
0x400311c	              0x55	                                push rbp	      4642	ldlang.c	FUNCTION_108
0x400311d	              0x53	                                push rbx	      4642	ldlang.c	FUNCTION_108
0x400311e	          0x4889fb	                            mov rbx, rdi	      4642	ldlang.c	FUNCTION_108
0x4003121	          0x4989f5	                            mov r13, rsi	      4642	ldlang.c	FUNCTION_108
0x4003124	          0x4989d6	                            mov r14, rdx	      4642	ldlang.c	FUNCTION_108
0x4003127	          0x4989cc	                            mov r12, rcx	      4642	ldlang.c	FUNCTION_108
0x400312a	          0x4c89c5	                             mov rbp, r8	      4642	ldlang.c	FUNCTION_108
0x400312d	    0x4881ff000000	                              cmp rdi, 0	      4646	ldlang.c	FUNCTION_108	IF_1
0x4003134	            0x7411	                            je 0x4003147	      4646	ldlang.c	FUNCTION_108	IF_1
0x4003136	          0x4885ff	                           test rdi, rdi	      4649	ldlang.c	FUNCTION_108	IF_2
0x4003139	            0x740c	                            je 0x4003147	      4649	ldlang.c	FUNCTION_108	IF_2
0x400313b	        0x837f080c	                cmp dword [rdi + 8], 0xc	      4650	ldlang.c	FUNCTION_108	IF_2
0x400313f	            0x7506	                           jne 0x4003147	      4650	ldlang.c	FUNCTION_108	IF_2
0x4003141	        0x48394f20	            cmp qword [rdi + 0x20], rcx 	      4651	ldlang.c	FUNCTION_108	IF_2
0x4003145	            0x7444	                            je 0x400318b	      4651	ldlang.c	FUNCTION_108	IF_2
0x4003147	          0x488b03	                    mov rax, qword [rbx]	      4655	ldlang.c	FUNCTION_108	ELSE_1	IF_3
0x400314a	          0x4885c0	                           test rax, rax	      4655	ldlang.c	FUNCTION_108	ELSE_1	IF_3
0x400314d	            0x740c	                            je 0x400315b	      4655	ldlang.c	FUNCTION_108	ELSE_1	IF_3
0x400314f	        0x8378080c	                cmp dword [rax + 8], 0xc	      4656	ldlang.c	FUNCTION_108	ELSE_1	IF_3
0x4003153	            0x7506	                           jne 0x400315b	      4656	ldlang.c	FUNCTION_108	ELSE_1	IF_3
0x4003155	        0x4c3b6020	            cmp r12, qword [rax + 0x20] 	      4657	ldlang.c	FUNCTION_108	ELSE_1	IF_3
0x4003159	            0x7433	                            je 0x400318e	      4657	ldlang.c	FUNCTION_108	ELSE_1	IF_3
0x400315b	      0xbf30000000	                           mov edi, 0x30	      4664	ldlang.c	FUNCTION_108	ELSE_2
0x4003160	      0xe800000000	                          call 0x4003165	      4664	ldlang.c	FUNCTION_108	ELSE_2
0x4003165	          0x488b13	                    mov rdx, qword [rbx]	      4666	ldlang.c	FUNCTION_108	ELSE_2
0x4003168	          0x488910	                    mov qword [rax], rdx	      4666	ldlang.c	FUNCTION_108	ELSE_2
0x400316b	          0x488903	                    mov qword [rbx], rax	      4667	ldlang.c	FUNCTION_108	ELSE_2
0x400316e	    0xc740080c0000	                mov dword [rax + 8], 0xc	      4668	ldlang.c	FUNCTION_108	ELSE_2
0x4003175	        0x4c896020	             mov qword [rax + 0x20], r12	      4669	ldlang.c	FUNCTION_108	ELSE_2
0x4003179	          0x4d85ed	                           test r13, r13	      4671	ldlang.c	FUNCTION_108	ELSE_2	IF_4
0x400317c	      0xba00000000	                              mov edx, 0	      4671	ldlang.c	FUNCTION_108	ELSE_2	IF_4
0x4003181	        0x4c0f44ea	                          cmove r13, rdx	      4671	ldlang.c	FUNCTION_108	ELSE_2	IF_4
0x4003185	        0x4c896828	             mov qword [rax + 0x28], r13	      4672	ldlang.c	FUNCTION_108	ELSE_2
0x4003189	            0xeb03	                           jmp 0x400318e	      4672	ldlang.c	FUNCTION_108	ELSE_2
0x400318b	          0x4889f8	                            mov rax, rdi	      4647	ldlang.c	FUNCTION_108	IF_1
0x400318e	          0x4889ea	                            mov rdx, rbp	      4674	ldlang.c	FUNCTION_108
0x4003191	      0x492b542428	             sub rdx, qword [r12 + 0x28]	      4674	ldlang.c	FUNCTION_108
0x4003196	        0x48895010	             mov qword [rax + 0x10], rdx	      4674	ldlang.c	FUNCTION_108
0x400319a	        0x4c897018	             mov qword [rax + 0x18], r14	      4675	ldlang.c	FUNCTION_108
0x400319e	    0x41f644242108	               test byte [r12 + 0x21], 8	      4676	ldlang.c	FUNCTION_108	IF_5
0x40031a4	            0x7519	                           jne 0x40031bf	      4676	ldlang.c	FUNCTION_108	IF_5
0x40031a6	    0x8b0d00000000	            mov ecx, dword [0x040031ac] 	      4677	ldlang.c	FUNCTION_108	IF_5
0x40031ac	          0x49d3ee	                             shr r14, cl	      4677	ldlang.c	FUNCTION_108	IF_5
0x40031af	          0x4c01f5	                            add rbp, r14	      4677	ldlang.c	FUNCTION_108	IF_5
0x40031b2	      0x492b6c2428	             sub rbp, qword [r12 + 0x28]	      4677	ldlang.c	FUNCTION_108	IF_5
0x40031b7	          0x48d3e5	                             shl rbp, cl	      4677	ldlang.c	FUNCTION_108	IF_5
0x40031ba	      0x49896c2438	             mov qword [r12 + 0x38], rbp	      4677	ldlang.c	FUNCTION_108	IF_5
0x40031bf	              0x5b	                                 pop rbx	      4679	ldlang.c	FUNCTION_108
0x40031c0	              0x5d	                                 pop rbp	      4679	ldlang.c	FUNCTION_108
0x40031c1	            0x415c	                                 pop r12	      4679	ldlang.c	FUNCTION_108
0x40031c3	            0x415d	                                 pop r13	      4679	ldlang.c	FUNCTION_108
0x40031c5	            0x415e	                                 pop r14	      4679	ldlang.c	FUNCTION_108
0x40031c7	              0xc3	                                     ret	      4679	ldlang.c	FUNCTION_108
lang_enter_group	IF,0:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,2:ELSE,0	11
0x4007fb2	        0x4883ec08	                              sub rsp, 8	      7714	ldlang.c	FUNCTION_182
0x4007fb6	    0x488b15000000	            mov rdx, qword [0x04007fbd] 	      7717	ldlang.c	FUNCTION_182
0x4007fbd	      0xbe20000000	                           mov esi, 0x20	      7717	ldlang.c	FUNCTION_182
0x4007fc2	      0xbf0d000000	                            mov edi, 0xd	      7717	ldlang.c	FUNCTION_182
0x4007fc7	      0xe8fcb1ffff	                  call sym.new_statement	      7717	ldlang.c	FUNCTION_182
0x4007fcc	        0x488d7810	                   lea rdi, [rax + 0x10]	      7718	ldlang.c	FUNCTION_182	CALL_1
0x4007fd0	    0x48c740100000	               mov qword [rax + 0x10], 0	      1009	ldlang.c	FUNCTION_30
0x4007fd8	        0x48897818	             mov qword [rax + 0x18], rdi	      1010	ldlang.c	FUNCTION_30
0x4007fdc	      0xe800000000	                          call 0x4007fe1	      7719	ldlang.c	FUNCTION_182	CALL_2
0x4007fe1	        0x4883c408	                              add rsp, 8	      7720	ldlang.c	FUNCTION_182
0x4007fe5	              0xc3	                                     ret	      7720	ldlang.c	FUNCTION_182
walk_wild_section_specs2_wild1	IF,3:WHILE,0:FOR,1:DO,0:SWITCH,0:functions,0:CALL,5:ELSE,1	71
0x40026fb	            0x4157	                                push r15	       610	ldlang.c	FUNCTION_20
0x40026fd	            0x4156	                                push r14	       610	ldlang.c	FUNCTION_20
0x40026ff	            0x4155	                                push r13	       610	ldlang.c	FUNCTION_20
0x4002701	            0x4154	                                push r12	       610	ldlang.c	FUNCTION_20
0x4002703	              0x55	                                push rbp	       610	ldlang.c	FUNCTION_20
0x4002704	              0x53	                                push rbx	       610	ldlang.c	FUNCTION_20
0x4002705	        0x4883ec28	                           sub rsp, 0x28	       610	ldlang.c	FUNCTION_20
0x4002709	          0x4989fd	                            mov r13, rdi	       610	ldlang.c	FUNCTION_20
0x400270c	          0x4989f6	                            mov r14, rsi	       610	ldlang.c	FUNCTION_20
0x400270f	        0x48891424	                    mov qword [rsp], rdx	       610	ldlang.c	FUNCTION_20
0x4002713	          0x4989cf	                            mov r15, rcx	       610	ldlang.c	FUNCTION_20
0x4002716	    0x64488b042528	                mov rax, qword fs:[0x28]	       610	ldlang.c	FUNCTION_20
0x400271f	      0x4889442418	             mov qword [rsp + 0x18], rax	       610	ldlang.c	FUNCTION_20
0x4002724	            0x31c0	                            xor eax, eax	       610	ldlang.c	FUNCTION_20
0x4002726	        0x488b4750	            mov rax, qword [rdi + 0x50] 	       612	ldlang.c	FUNCTION_20
0x400272a	      0x4889442408	                mov qword [rsp + 8], rax	       612	ldlang.c	FUNCTION_20
0x400272f	        0x488b6f58	            mov rbp, qword [rdi + 0x58] 	       613	ldlang.c	FUNCTION_20
0x4002733	      0x488d542414	                   lea rdx, [rsp + 0x14]	       615	ldlang.c	FUNCTION_20	CALL_1
0x4002738	          0x4889c6	                            mov rsi, rax	       615	ldlang.c	FUNCTION_20	CALL_1
0x400273b	          0x4c89f7	                            mov rdi, r14	       615	ldlang.c	FUNCTION_20	CALL_1
0x400273e	      0xe865fcffff	                   call sym.find_section	       615	ldlang.c	FUNCTION_20	CALL_1
0x4002743	      0x837c241400	               cmp dword [rsp + 0x14], 0	       617	ldlang.c	FUNCTION_20	IF_1
0x4002748	            0x7414	                            je 0x400275e	       617	ldlang.c	FUNCTION_20	IF_1
0x400274a	          0x4c89f9	                            mov rcx, r15	       619	ldlang.c	FUNCTION_20	IF_1	CALL_2
0x400274d	        0x488b1424	                    mov rdx, qword [rsp]	       619	ldlang.c	FUNCTION_20	IF_1	CALL_2
0x4002751	          0x4c89f6	                            mov rsi, r14	       619	ldlang.c	FUNCTION_20	IF_1	CALL_2
0x4002754	          0x4c89ef	                            mov rdi, r13	       619	ldlang.c	FUNCTION_20	IF_1	CALL_2
0x4002757	      0xe880f9ffff	      call sym.walk_wild_section_general	       619	ldlang.c	FUNCTION_20	IF_1	CALL_2
0x400275c	            0xeb65	                           jmp 0x40027c3	       619	ldlang.c	FUNCTION_20	IF_1	CALL_2
0x400275e	          0x4989c4	                            mov r12, rax	       619	ldlang.c	FUNCTION_20	IF_1	CALL_2
0x4002761	        0x498b4620	            mov rax, qword [r14 + 0x20] 	       625	ldlang.c	FUNCTION_20	FOR_1
0x4002765	    0x488b98900000	            mov rbx, qword [rax + 0x90] 	       625	ldlang.c	FUNCTION_20	FOR_1
0x400276c	          0x4885db	                           test rbx, rbx	       625	ldlang.c	FUNCTION_20	FOR_1
0x400276f	            0x7452	                            je 0x40027c3	       625	ldlang.c	FUNCTION_20	FOR_1
0x4002771	          0x4939dc	                            cmp r12, rbx	       630	ldlang.c	FUNCTION_20	FOR_1	IF_2
0x4002774	            0x751c	                           jne 0x4002792	       630	ldlang.c	FUNCTION_20	FOR_1	IF_2
0x4002776	          0x4d89f9	                             mov r9, r15	       631	ldlang.c	FUNCTION_20	FOR_1	CALL_3
0x4002779	        0x4c8b0424	                     mov r8, qword [rsp]	       631	ldlang.c	FUNCTION_20	FOR_1	CALL_3
0x400277d	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       631	ldlang.c	FUNCTION_20	FOR_1	CALL_3
0x4002782	          0x4889da	                            mov rdx, rbx	       631	ldlang.c	FUNCTION_20	FOR_1	CALL_3
0x4002785	          0x4c89f6	                            mov rsi, r14	       631	ldlang.c	FUNCTION_20	FOR_1	CALL_3
0x4002788	          0x4c89ef	                            mov rdi, r13	       631	ldlang.c	FUNCTION_20	FOR_1	CALL_3
0x400278b	      0xe8b7f7ffff	     call sym.walk_wild_consider_section	       631	ldlang.c	FUNCTION_20	FOR_1	CALL_3
0x4002790	            0xeb28	                           jmp 0x40027ba	       631	ldlang.c	FUNCTION_20	FOR_1	CALL_3
0x4002792	        0x488b7d08	                mov rdi, qword [rbp + 8]	       635	ldlang.c	FUNCTION_20	FOR_1	ELSE_1	CALL_4
0x4002796	          0x488b33	                    mov rsi, qword [rbx]	       635	ldlang.c	FUNCTION_20	FOR_1	ELSE_1	CALL_4
0x4002799	      0xe8bed8ffff	              call sym.match_simple_wild	       635	ldlang.c	FUNCTION_20	FOR_1	ELSE_1	CALL_4
0x400279e	            0x85c0	                           test eax, eax	       637	ldlang.c	FUNCTION_20	FOR_1	ELSE_1	IF_3
0x40027a0	            0x7418	                            je 0x40027ba	       637	ldlang.c	FUNCTION_20	FOR_1	ELSE_1	IF_3
0x40027a2	          0x4d89f9	                             mov r9, r15	       638	ldlang.c	FUNCTION_20	FOR_1	ELSE_1	IF_3	CALL_5
0x40027a5	        0x4c8b0424	                     mov r8, qword [rsp]	       638	ldlang.c	FUNCTION_20	FOR_1	ELSE_1	IF_3	CALL_5
0x40027a9	          0x4889e9	                            mov rcx, rbp	       638	ldlang.c	FUNCTION_20	FOR_1	ELSE_1	IF_3	CALL_5
0x40027ac	          0x4889da	                            mov rdx, rbx	       638	ldlang.c	FUNCTION_20	FOR_1	ELSE_1	IF_3	CALL_5
0x40027af	          0x4c89f6	                            mov rsi, r14	       638	ldlang.c	FUNCTION_20	FOR_1	ELSE_1	IF_3	CALL_5
0x40027b2	          0x4c89ef	                            mov rdi, r13	       638	ldlang.c	FUNCTION_20	FOR_1	ELSE_1	IF_3	CALL_5
0x40027b5	      0xe88df7ffff	     call sym.walk_wild_consider_section	       638	ldlang.c	FUNCTION_20	FOR_1	ELSE_1	IF_3	CALL_5
0x40027ba	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	       625	ldlang.c	FUNCTION_20	FOR_1
0x40027be	          0x4885db	                           test rbx, rbx	       625	ldlang.c	FUNCTION_20	FOR_1
0x40027c1	            0x75ae	                           jne 0x4002771	       625	ldlang.c	FUNCTION_20	FOR_1
0x40027c3	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       642	ldlang.c	FUNCTION_20
0x40027c8	    0x644833042528	                xor rax, qword fs:[0x28]	       642	ldlang.c	FUNCTION_20
0x40027d1	            0x7405	                            je 0x40027d8	       642	ldlang.c	FUNCTION_20
0x40027d3	      0xe800000000	                          call 0x40027d8	       642	ldlang.c	FUNCTION_20
0x40027d8	        0x4883c428	                           add rsp, 0x28	       642	ldlang.c	FUNCTION_20
0x40027dc	              0x5b	                                 pop rbx	       642	ldlang.c	FUNCTION_20
0x40027dd	              0x5d	                                 pop rbp	       642	ldlang.c	FUNCTION_20
0x40027de	            0x415c	                                 pop r12	       642	ldlang.c	FUNCTION_20
0x40027e0	            0x415d	                                 pop r13	       642	ldlang.c	FUNCTION_20
0x40027e2	            0x415e	                                 pop r14	       642	ldlang.c	FUNCTION_20
0x40027e4	            0x415f	                                 pop r15	       642	ldlang.c	FUNCTION_20
0x40027e6	              0xc3	                                     ret	       642	ldlang.c	FUNCTION_20
lang_get_output_target	IF,3:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,1:ELSE,0	36
0x40056b9	              0x53	                                push rbx	      3089	ldlang.c	FUNCTION_74
0x40056ba	    0x488b05000000	            mov rax, qword [0x040056c1] 	      3093	ldlang.c	FUNCTION_74	IF_1
0x40056c1	          0x4885c0	                           test rax, rax	      3093	ldlang.c	FUNCTION_74	IF_1
0x40056c4	            0x756c	                           jne 0x4005732	      3093	ldlang.c	FUNCTION_74	IF_1
0x40056c6	    0x488b05000000	            mov rax, qword [0x040056cd] 	      3098	ldlang.c	FUNCTION_74	IF_2
0x40056cd	    0x483905000000	            cmp qword [0x040056d4], rax 	      3098	ldlang.c	FUNCTION_74	IF_2
0x40056d4	            0x7405	                            je 0x40056db	      3098	ldlang.c	FUNCTION_74	IF_2
0x40056d6	          0x4885c0	                           test rax, rax	      3098	ldlang.c	FUNCTION_74	IF_2
0x40056d9	            0x7557	                           jne 0x4005732	      3098	ldlang.c	FUNCTION_74	IF_2
0x40056db	    0x488b1d000000	            mov rbx, qword [0x040056e2] 	      3066	ldlang.c	FUNCTION_73
0x40056e2	          0x4885db	                           test rbx, rbx	      3066	ldlang.c	FUNCTION_73
0x40056e5	            0x7444	                            je 0x400572b	      3066	ldlang.c	FUNCTION_73
0x40056e7	        0x837b0802	                  cmp dword [rbx + 8], 2	      3068	ldlang.c	FUNCTION_73	FUNCTION_1	IF_1
0x40056eb	            0x7535	                           jne 0x4005722	      3068	ldlang.c	FUNCTION_73	FUNCTION_1	IF_1
0x40056ed	        0xf6434904	               test byte [rbx + 0x49], 4	      3069	ldlang.c	FUNCTION_73	FUNCTION_1	IF_1
0x40056f1	            0x742f	                            je 0x4005722	      3069	ldlang.c	FUNCTION_73	FUNCTION_1	IF_1
0x40056f3	          0x4889df	                            mov rdi, rbx	      3071	ldlang.c	FUNCTION_73	FUNCTION_1	IF_1	CALL_1
0x40056f6	      0xe800000000	                          call 0x40056fb	      3071	ldlang.c	FUNCTION_73	FUNCTION_1	IF_1	CALL_1
0x40056fb	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      3073	ldlang.c	FUNCTION_73	FUNCTION_1	IF_1	IF_2
0x40056ff	          0x4885ff	                           test rdi, rdi	      3073	ldlang.c	FUNCTION_73	FUNCTION_1	IF_1	IF_2
0x4005702	            0x741e	                            je 0x4005722	      3073	ldlang.c	FUNCTION_73	FUNCTION_1	IF_1	IF_2
0x4005704	      0xbe01000000	                              mov esi, 1	      3074	ldlang.c	FUNCTION_73	FUNCTION_1	IF_1	IF_2	CALL_2
0x4005709	      0xe800000000	                          call 0x400570e	      3074	ldlang.c	FUNCTION_73	FUNCTION_1	IF_1	IF_2	CALL_2
0x400570e	            0x85c0	                           test eax, eax	      3074	ldlang.c	FUNCTION_73	FUNCTION_1	IF_1	IF_2	CALL_2
0x4005710	            0x7410	                            je 0x4005722	      3074	ldlang.c	FUNCTION_73	FUNCTION_1	IF_1	IF_2	CALL_2
0x4005712	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      3076	ldlang.c	FUNCTION_73	FUNCTION_1	IF_1	IF_2
0x4005716	        0x488b4008	                mov rax, qword [rax + 8]	      3076	ldlang.c	FUNCTION_73	FUNCTION_1	IF_1	IF_2
0x400571a	          0x488b00	                    mov rax, qword [rax]	      3076	ldlang.c	FUNCTION_73	FUNCTION_1	IF_1	IF_2
0x400571d	          0x4885c0	                           test rax, rax	      3078	ldlang.c	FUNCTION_73	FUNCTION_1	IF_1	IF_2	IF_3
0x4005720	            0x7510	                           jne 0x4005732	      3078	ldlang.c	FUNCTION_73	FUNCTION_1	IF_1	IF_2	IF_3
0x4005722	        0x488b5b30	            mov rbx, qword [rbx + 0x30] 	      3066	ldlang.c	FUNCTION_73
0x4005726	          0x4885db	                           test rbx, rbx	      3066	ldlang.c	FUNCTION_73
0x4005729	            0x75bc	                           jne 0x40056e7	      3066	ldlang.c	FUNCTION_73
0x400572b	    0x488b05000000	            mov rax, qword [0x04005732] 	      3107	ldlang.c	FUNCTION_74
0x4005732	              0x5b	                                 pop rbx	      3108	ldlang.c	FUNCTION_74
0x4005733	              0xc3	                                     ret	      3108	ldlang.c	FUNCTION_74
lang_append_dynamic_list	IF,1:WHILE,0:FOR,1:DO,0:SWITCH,0:functions,0:CALL,1:ELSE,1	24
0x400a865	    0x488b0d000000	            mov rcx, qword [0x0400a86c] 	      8665	ldlang.c	FUNCTION_204	IF_1
0x400a86c	          0x4885c9	                           test rcx, rcx	      8665	ldlang.c	FUNCTION_204	IF_1
0x400a86f	            0x7421	                            je 0x400a892	      8665	ldlang.c	FUNCTION_204	IF_1
0x400a871	          0x4889fa	                            mov rdx, rdi	      8665	ldlang.c	FUNCTION_204	IF_1
0x400a874	            0xeb03	                           jmp 0x400a879	      8665	ldlang.c	FUNCTION_204	IF_1
0x400a876	          0x4889c2	                            mov rdx, rax	      8668	ldlang.c	FUNCTION_204	IF_1	FOR_1
0x400a879	          0x488b02	                    mov rax, qword [rdx]	      8668	ldlang.c	FUNCTION_204	IF_1	FOR_1
0x400a87c	          0x4885c0	                           test rax, rax	      8668	ldlang.c	FUNCTION_204	IF_1	FOR_1
0x400a87f	            0x75f5	                           jne 0x400a876	      8668	ldlang.c	FUNCTION_204	IF_1	FOR_1
0x400a881	          0x488b01	                    mov rax, qword [rcx]	      8670	ldlang.c	FUNCTION_204	IF_1
0x400a884	          0x488902	                    mov qword [rdx], rax	      8670	ldlang.c	FUNCTION_204	IF_1
0x400a887	    0x488b05000000	            mov rax, qword [0x0400a88e] 	      8671	ldlang.c	FUNCTION_204	IF_1
0x400a88e	          0x488938	                    mov qword [rax], rdi	      8671	ldlang.c	FUNCTION_204	IF_1
0x400a891	              0xc3	                                     ret	      8671	ldlang.c	FUNCTION_204	IF_1
0x400a892	              0x53	                                push rbx	      8664	ldlang.c	FUNCTION_204
0x400a893	          0x4889fb	                            mov rbx, rdi	      8664	ldlang.c	FUNCTION_204
0x400a896	      0xbe28000000	                           mov esi, 0x28	      8677	ldlang.c	FUNCTION_204	ELSE_1	CALL_1
0x400a89b	      0xbf01000000	                              mov edi, 1	      8677	ldlang.c	FUNCTION_204	ELSE_1	CALL_1
0x400a8a0	      0xe800000000	                          call 0x400a8a5	      8677	ldlang.c	FUNCTION_204	ELSE_1	CALL_1
0x400a8a5	          0x488918	                    mov qword [rax], rbx	      8678	ldlang.c	FUNCTION_204	ELSE_1
0x400a8a8	    0x48c740200000	               mov qword [rax + 0x20], 0	      8679	ldlang.c	FUNCTION_204	ELSE_1
0x400a8b0	    0x488905000000	            mov qword [0x0400a8b7], rax 	      8680	ldlang.c	FUNCTION_204	ELSE_1
0x400a8b7	              0x5b	                                 pop rbx	      8682	ldlang.c	FUNCTION_204
0x400a8b8	              0xc3	                                     ret	      8682	ldlang.c	FUNCTION_204
pop_stat_ptr	IF,1:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,1:ELSE,0	13
0x4003498	    0x488b05000000	            mov rax, qword [0x0400349f] 	      1025	ldlang.c	FUNCTION_32	IF_1
0x400349f	    0x483d00000000	                              cmp rax, 0	      1025	ldlang.c	FUNCTION_32	IF_1
0x40034a5	            0x7718	                            ja 0x40034bf	      1025	ldlang.c	FUNCTION_32	IF_1
0x40034a7	        0x4883ec08	                              sub rsp, 8	      1024	ldlang.c	FUNCTION_32
0x40034ab	      0xba00000000	                              mov edx, 0	      1026	ldlang.c	FUNCTION_32	CALL_1
0x40034b0	      0xbe02040000	                          mov esi, 0x402	      1026	ldlang.c	FUNCTION_32	CALL_1
0x40034b5	      0xbf00000000	                              mov edi, 0	      1026	ldlang.c	FUNCTION_32	CALL_1
0x40034ba	      0xe800000000	                          call 0x40034bf	      1026	ldlang.c	FUNCTION_32	CALL_1
0x40034bf	        0x488d50f8	                      lea rdx, [rax - 8]	      1027	ldlang.c	FUNCTION_32
0x40034c3	    0x488915000000	            mov qword [0x040034ca], rdx 	      1027	ldlang.c	FUNCTION_32
0x40034ca	        0x488b40f8	                mov rax, qword [rax - 8]	      1027	ldlang.c	FUNCTION_32
0x40034ce	    0x488905000000	            mov qword [0x040034d5], rax 	      1027	ldlang.c	FUNCTION_32
0x40034d5	              0xc3	                                     ret	      1027	ldlang.c	FUNCTION_32
ldlang_add_file	IF,0:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,5:ELSE,0	35
0x4005f5e	              0x53	                                push rbx	      6636	ldlang.c	FUNCTION_143
0x4005f5f	          0x4889fb	                            mov rbx, rdi	      6636	ldlang.c	FUNCTION_143
0x4005f62	    0x488b05000000	            mov rax, qword [0x04005f69] 	      7673	ldlang.c	FUNCTION_179
0x4005f69	          0x488938	                    mov qword [rax], rdi	      7673	ldlang.c	FUNCTION_179
0x4005f6c	        0x488d4730	                   lea rax, [rdi + 0x30]	      6639	ldlang.c	FUNCTION_143
0x4005f70	    0x488905000000	            mov qword [0x04005f77], rax 	      6639	ldlang.c	FUNCTION_143
0x4005f77	        0x488b4720	            mov rax, qword [rdi + 0x20] 	      6643	ldlang.c	FUNCTION_143	CALL_2
0x4005f7b	    0x4883b8f00000	               cmp qword [rax + 0xf0], 0	      6643	ldlang.c	FUNCTION_143	CALL_2
0x4005f83	            0x740f	                            je 0x4005f94	      6643	ldlang.c	FUNCTION_143	CALL_2
0x4005f85	      0xbef3190000	                         mov esi, 0x19f3	      6643	ldlang.c	FUNCTION_143	CALL_2
0x4005f8a	      0xbf00000000	                              mov edi, 0	      6643	ldlang.c	FUNCTION_143	CALL_2
0x4005f8f	      0xe800000000	                          call 0x4005f94	      6643	ldlang.c	FUNCTION_143	CALL_2
0x4005f94	    0x488b05000000	            mov rax, qword [0x04005f9b] 	      6644	ldlang.c	FUNCTION_143	CALL_3
0x4005f9b	        0x48394320	            cmp qword [rbx + 0x20], rax 	      6644	ldlang.c	FUNCTION_143	CALL_3
0x4005f9f	            0x750f	                           jne 0x4005fb0	      6644	ldlang.c	FUNCTION_143	CALL_3
0x4005fa1	      0xbef4190000	                         mov esi, 0x19f4	      6644	ldlang.c	FUNCTION_143	CALL_3
0x4005fa6	      0xbf00000000	                              mov edi, 0	      6644	ldlang.c	FUNCTION_143	CALL_3
0x4005fab	      0xe800000000	                          call 0x4005fb0	      6644	ldlang.c	FUNCTION_143	CALL_3
0x4005fb0	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	      6646	ldlang.c	FUNCTION_143
0x4005fb4	    0x488b05000000	            mov rax, qword [0x04005fbb] 	      6646	ldlang.c	FUNCTION_143
0x4005fbb	          0x488910	                    mov qword [rax], rdx	      6646	ldlang.c	FUNCTION_143
0x4005fbe	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      6647	ldlang.c	FUNCTION_143
0x4005fc2	    0x4805f0000000	                           add rax, 0xf0	      6647	ldlang.c	FUNCTION_143
0x4005fc8	    0x488905000000	            mov qword [0x04005fcf], rax 	      6647	ldlang.c	FUNCTION_143
0x4005fcf	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      6648	ldlang.c	FUNCTION_143
0x4005fd3	    0x488998000100	            mov qword [rax + 0x100], rbx	      6648	ldlang.c	FUNCTION_143
0x4005fda	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      6649	ldlang.c	FUNCTION_143	CALL_4
0x4005fde	    0x8b3500000000	            mov esi, dword [0x04005fe4] 	      6649	ldlang.c	FUNCTION_143	CALL_4
0x4005fe4	      0xe800000000	                          call 0x4005fe9	      6649	ldlang.c	FUNCTION_143	CALL_4
0x4005fe9	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      6661	ldlang.c	FUNCTION_143	CALL_5
0x4005fed	          0x4889da	                            mov rdx, rbx	      6661	ldlang.c	FUNCTION_143	CALL_5
0x4005ff0	      0xbe00000000	                              mov esi, 0	      6661	ldlang.c	FUNCTION_143	CALL_5
0x4005ff5	      0xe800000000	                          call 0x4005ffa	      6661	ldlang.c	FUNCTION_143	CALL_5
0x4005ffa	              0x5b	                                 pop rbx	      6662	ldlang.c	FUNCTION_143
0x4005ffb	              0xc3	                                     ret	      6662	ldlang.c	FUNCTION_143
lang_leave_overlay_section	IF,1:WHILE,0:FOR,1:DO,0:SWITCH,0:functions,0:CALL,17:ELSE,0	104
0x4008227	            0x4156	                                push r14	      7998	ldlang.c	FUNCTION_190
0x4008229	            0x4155	                                push r13	      7998	ldlang.c	FUNCTION_190
0x400822b	            0x4154	                                push r12	      7998	ldlang.c	FUNCTION_190
0x400822d	              0x55	                                push rbp	      7998	ldlang.c	FUNCTION_190
0x400822e	              0x53	                                push rbx	      7998	ldlang.c	FUNCTION_190
0x400822f	          0x4889f2	                            mov rdx, rsi	      7998	ldlang.c	FUNCTION_190
0x4008232	    0x488b05000000	            mov rax, qword [0x04008239] 	      8004	ldlang.c	FUNCTION_190
0x4008239	        0x488b6830	            mov rbp, qword [rax + 0x30] 	      8004	ldlang.c	FUNCTION_190
0x400823d	      0xb900000000	                              mov ecx, 0	      8010	ldlang.c	FUNCTION_190	CALL_1
0x4008242	      0xbe00000000	                              mov esi, 0	      8010	ldlang.c	FUNCTION_190	CALL_1
0x4008247	      0xe800000000	                          call 0x400824c	      8010	ldlang.c	FUNCTION_190	CALL_1
0x400824c	      0xb800000000	                              mov eax, 0	      8014	ldlang.c	FUNCTION_190	CALL_3
0x4008251	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      8014	ldlang.c	FUNCTION_190	CALL_3
0x4008258	          0x4889ef	                            mov rdi, rbp	      8014	ldlang.c	FUNCTION_190	CALL_3
0x400825b	            0xf2ae	              repne scasb al, byte [rdi]	      8014	ldlang.c	FUNCTION_190	CALL_3
0x400825d	          0x4889cf	                            mov rdi, rcx	      8014	ldlang.c	FUNCTION_190	CALL_3
0x4008260	          0x48f7d7	                                 not rdi	      8014	ldlang.c	FUNCTION_190	CALL_3
0x4008263	      0xe800000000	                          call 0x4008268	      8014	ldlang.c	FUNCTION_190	CALL_3
0x4008268	          0x4889c3	                            mov rbx, rax	      8014	ldlang.c	FUNCTION_190	CALL_3
0x400826b	         0xfb64500	                   movzx eax, byte [rbp]	      8016	ldlang.c	FUNCTION_190	FOR_1
0x400826f	            0x84c0	                             test al, al	      8016	ldlang.c	FUNCTION_190	FOR_1
0x4008271	            0x742a	                            je 0x400829d	      8016	ldlang.c	FUNCTION_190	FOR_1
0x4008273	          0x4889ea	                            mov rdx, rbp	      8016	ldlang.c	FUNCTION_190	FOR_1
0x4008276	          0x4889d9	                            mov rcx, rbx	      8016	ldlang.c	FUNCTION_190	FOR_1
0x4008279	           0xfb6f0	                           movzx esi, al	      8017	ldlang.c	FUNCTION_190	FOR_1	IF_1	CALL_4
0x400827c	    0xf68436000000	            test byte [rsi + rsi], 0x8c 	      8017	ldlang.c	FUNCTION_190	FOR_1	IF_1	CALL_4
0x4008284	            0x7504	                           jne 0x400828a	      8017	ldlang.c	FUNCTION_190	FOR_1	IF_1	CALL_4
0x4008286	            0x3c5f	                            cmp al, 0x5f	      8017	ldlang.c	FUNCTION_190	FOR_1	IF_1	CALL_4
0x4008288	            0x7506	                           jne 0x4008290	      8017	ldlang.c	FUNCTION_190	FOR_1	IF_1	CALL_4
0x400828a	            0x8801	                      mov byte [rcx], al	      8018	ldlang.c	FUNCTION_190	FOR_1	IF_1
0x400828c	        0x488d4901	                      lea rcx, [rcx + 1]	      8018	ldlang.c	FUNCTION_190	FOR_1	IF_1
0x4008290	        0x4883c201	                              add rdx, 1	      8016	ldlang.c	FUNCTION_190	FOR_1
0x4008294	           0xfb602	                   movzx eax, byte [rdx]	      8016	ldlang.c	FUNCTION_190	FOR_1
0x4008297	            0x84c0	                             test al, al	      8016	ldlang.c	FUNCTION_190	FOR_1
0x4008299	            0x75de	                           jne 0x4008279	      8016	ldlang.c	FUNCTION_190	FOR_1
0x400829b	            0xeb03	                           jmp 0x40082a0	      8016	ldlang.c	FUNCTION_190	FOR_1
0x400829d	          0x4889d9	                            mov rcx, rbx	      8015	ldlang.c	FUNCTION_190
0x40082a0	          0xc60100	                       mov byte [rcx], 0	      8019	ldlang.c	FUNCTION_190
0x40082a3	    0x49c7c5ffffff	             mov r13, 0xffffffffffffffff	      8021	ldlang.c	FUNCTION_190	CALL_6
0x40082aa	    0x41bc00000000	                             mov r12d, 0	      8021	ldlang.c	FUNCTION_190	CALL_6
0x40082b0	          0x4c89e9	                            mov rcx, r13	      8021	ldlang.c	FUNCTION_190	CALL_6
0x40082b3	          0x4889df	                            mov rdi, rbx	      8021	ldlang.c	FUNCTION_190	CALL_6
0x40082b6	          0x4489e0	                           mov eax, r12d	      8021	ldlang.c	FUNCTION_190	CALL_6
0x40082b9	            0xf2ae	              repne scasb al, byte [rdi]	      8021	ldlang.c	FUNCTION_190	CALL_6
0x40082bb	          0x48f7d1	                                 not rcx	      8021	ldlang.c	FUNCTION_190	CALL_6
0x40082be	        0x488d790d	                    lea rdi, [rcx + 0xd]	      8021	ldlang.c	FUNCTION_190	CALL_6
0x40082c2	      0xe800000000	                          call 0x40082c7	      8021	ldlang.c	FUNCTION_190	CALL_6
0x40082c7	          0x4989c6	                            mov r14, rax	      8021	ldlang.c	FUNCTION_190	CALL_6
0x40082ca	          0x4989d8	                             mov r8, rbx	        33	stdio2.h	FUNCTION_210	CALL_1
0x40082cd	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_210	CALL_1
0x40082d2	          0x4c89ea	                            mov rdx, r13	        33	stdio2.h	FUNCTION_210	CALL_1
0x40082d5	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_210	CALL_1
0x40082da	          0x4889c7	                            mov rdi, rax	        33	stdio2.h	FUNCTION_210	CALL_1
0x40082dd	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_210	CALL_1
0x40082e2	      0xe800000000	                          call 0x40082e7	        33	stdio2.h	FUNCTION_210	CALL_1
0x40082e7	          0x4889ee	                            mov rsi, rbp	      8023	ldlang.c	FUNCTION_190	CALL_8
0x40082ea	      0xbf44010000	                          mov edi, 0x144	      8023	ldlang.c	FUNCTION_190	CALL_8
0x40082ef	      0xe800000000	                          call 0x40082f4	      8023	ldlang.c	FUNCTION_190	CALL_8
0x40082f4	      0xba00000000	                              mov edx, 0	      8023	ldlang.c	FUNCTION_190	CALL_8
0x40082f9	          0x4889c6	                            mov rsi, rax	      8023	ldlang.c	FUNCTION_190	CALL_8
0x40082fc	          0x4c89f7	                            mov rdi, r14	      8023	ldlang.c	FUNCTION_190	CALL_8
0x40082ff	      0xe800000000	                          call 0x4008304	      8023	ldlang.c	FUNCTION_190	CALL_8
0x4008304	          0x4889c7	                            mov rdi, rax	      8023	ldlang.c	FUNCTION_190	CALL_8
0x4008307	      0xe800000000	                          call 0x400830c	      8023	ldlang.c	FUNCTION_190	CALL_8
0x400830c	          0x4c89e9	                            mov rcx, r13	      8027	ldlang.c	FUNCTION_190	CALL_11
0x400830f	          0x4889df	                            mov rdi, rbx	      8027	ldlang.c	FUNCTION_190	CALL_11
0x4008312	          0x4489e0	                           mov eax, r12d	      8027	ldlang.c	FUNCTION_190	CALL_11
0x4008315	            0xf2ae	              repne scasb al, byte [rdi]	      8027	ldlang.c	FUNCTION_190	CALL_11
0x4008317	          0x48f7d1	                                 not rcx	      8027	ldlang.c	FUNCTION_190	CALL_11
0x400831a	        0x488d790c	                    lea rdi, [rcx + 0xc]	      8027	ldlang.c	FUNCTION_190	CALL_11
0x400831e	      0xe800000000	                          call 0x4008323	      8027	ldlang.c	FUNCTION_190	CALL_11
0x4008323	          0x4989c4	                            mov r12, rax	      8027	ldlang.c	FUNCTION_190	CALL_11
0x4008326	          0x4989d8	                             mov r8, rbx	        33	stdio2.h	FUNCTION_210	CALL_1
0x4008329	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_210	CALL_1
0x400832e	          0x4c89ea	                            mov rdx, r13	        33	stdio2.h	FUNCTION_210	CALL_1
0x4008331	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_210	CALL_1
0x4008336	          0x4889c7	                            mov rdi, rax	        33	stdio2.h	FUNCTION_210	CALL_1
0x4008339	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_210	CALL_1
0x400833e	      0xe800000000	                          call 0x4008343	        33	stdio2.h	FUNCTION_210	CALL_1
0x4008343	          0x4889ee	                            mov rsi, rbp	      8029	ldlang.c	FUNCTION_190	CALL_13
0x4008346	      0xbf41010000	                          mov edi, 0x141	      8029	ldlang.c	FUNCTION_190	CALL_13
0x400834b	      0xe800000000	                          call 0x4008350	      8029	ldlang.c	FUNCTION_190	CALL_13
0x4008350	          0x4989c5	                            mov r13, rax	      8029	ldlang.c	FUNCTION_190	CALL_13
0x4008353	          0x4889ee	                            mov rsi, rbp	      8029	ldlang.c	FUNCTION_190	CALL_13
0x4008356	      0xbf44010000	                          mov edi, 0x144	      8029	ldlang.c	FUNCTION_190	CALL_13
0x400835b	      0xe800000000	                          call 0x4008360	      8029	ldlang.c	FUNCTION_190	CALL_13
0x4008360	          0x4c89ea	                            mov rdx, r13	      8029	ldlang.c	FUNCTION_190	CALL_13
0x4008363	          0x4889c6	                            mov rsi, rax	      8029	ldlang.c	FUNCTION_190	CALL_13
0x4008366	      0xbf2b000000	                           mov edi, 0x2b	      8029	ldlang.c	FUNCTION_190	CALL_13
0x400836b	      0xe800000000	                          call 0x4008370	      8029	ldlang.c	FUNCTION_190	CALL_13
0x4008370	      0xba00000000	                              mov edx, 0	      8029	ldlang.c	FUNCTION_190	CALL_13
0x4008375	          0x4889c6	                            mov rsi, rax	      8029	ldlang.c	FUNCTION_190	CALL_13
0x4008378	          0x4c89e7	                            mov rdi, r12	      8029	ldlang.c	FUNCTION_190	CALL_13
0x400837b	      0xe800000000	                          call 0x4008380	      8029	ldlang.c	FUNCTION_190	CALL_13
0x4008380	          0x4889c7	                            mov rdi, rax	      8029	ldlang.c	FUNCTION_190	CALL_13
0x4008383	      0xe800000000	                          call 0x4008388	      8029	ldlang.c	FUNCTION_190	CALL_13
0x4008388	          0x4889df	                            mov rdi, rbx	      8035	ldlang.c	FUNCTION_190	CALL_17
0x400838b	      0xe800000000	                          call 0x4008390	      8035	ldlang.c	FUNCTION_190	CALL_17
0x4008390	              0x5b	                                 pop rbx	      8036	ldlang.c	FUNCTION_190
0x4008391	              0x5d	                                 pop rbp	      8036	ldlang.c	FUNCTION_190
0x4008392	            0x415c	                                 pop r12	      8036	ldlang.c	FUNCTION_190
0x4008394	            0x415d	                                 pop r13	      8036	ldlang.c	FUNCTION_190
0x4008396	            0x415e	                                 pop r14	      8036	ldlang.c	FUNCTION_190
0x4008398	              0xc3	                                     ret	      8036	ldlang.c	FUNCTION_190
dprint_statement	IF,1:WHILE,1:FOR,0:DO,0:SWITCH,0:functions,0:CALL,2:ELSE,1	32
0x4005aee	            0x4154	                                push r12	      4617	ldlang.c	FUNCTION_107
0x4005af0	              0x55	                                push rbp	      4617	ldlang.c	FUNCTION_107
0x4005af1	              0x53	                                push rbx	      4617	ldlang.c	FUNCTION_107
0x4005af2	          0x4889fb	                            mov rbx, rdi	      4617	ldlang.c	FUNCTION_107
0x4005af5	    0x4c8b25000000	            mov r12, qword [0x04005afc] 	      4618	ldlang.c	FUNCTION_107
0x4005afc	    0x488b05000000	            mov rax, qword [0x04005b03] 	      4620	ldlang.c	FUNCTION_107
0x4005b03	    0x488905000000	            mov qword [0x04005b0a], rax 	      4620	ldlang.c	FUNCTION_107
0x4005b0a	            0x85f6	                           test esi, esi	      4622	ldlang.c	FUNCTION_107	IF_1
0x4005b0c	            0x780e	                            js 0x4005b1c	      4622	ldlang.c	FUNCTION_107	IF_1
0x4005b0e	          0x4885ff	                           test rdi, rdi	      4626	ldlang.c	FUNCTION_107	ELSE_1	WHILE_1
0x4005b11	            0x7436	                            je 0x4005b49	      4626	ldlang.c	FUNCTION_107	ELSE_1	WHILE_1
0x4005b13	          0x83ee01	                              sub esi, 1	      4626	ldlang.c	FUNCTION_107	ELSE_1	WHILE_1
0x4005b16	            0x89f5	                            mov ebp, esi	      4626	ldlang.c	FUNCTION_107	ELSE_1	WHILE_1
0x4005b18	            0x7910	                           jns 0x4005b2a	      4626	ldlang.c	FUNCTION_107	ELSE_1	WHILE_1
0x4005b1a	            0xeb2d	                           jmp 0x4005b49	      4626	ldlang.c	FUNCTION_107	ELSE_1	WHILE_1
0x4005b1c	    0x488b35000000	            mov rsi, qword [0x04005b23] 	      4623	ldlang.c	FUNCTION_107	CALL_1
0x4005b23	      0xe82dbdffff	           call sym.print_statement_list	      4623	ldlang.c	FUNCTION_107	CALL_1
0x4005b28	            0xeb1f	                           jmp 0x4005b49	      4623	ldlang.c	FUNCTION_107	CALL_1
0x4005b2a	    0x488b35000000	            mov rsi, qword [0x04005b31] 	      4628	ldlang.c	FUNCTION_107	ELSE_1	WHILE_1	CALL_2
0x4005b31	          0x4889df	                            mov rdi, rbx	      4628	ldlang.c	FUNCTION_107	ELSE_1	WHILE_1	CALL_2
0x4005b34	      0xe8dab2ffff	                call sym.print_statement	      4628	ldlang.c	FUNCTION_107	ELSE_1	WHILE_1	CALL_2
0x4005b39	          0x488b1b	                    mov rbx, qword [rbx]	      4629	ldlang.c	FUNCTION_107	ELSE_1	WHILE_1
0x4005b3c	          0x4885db	                           test rbx, rbx	      4626	ldlang.c	FUNCTION_107	ELSE_1	WHILE_1
0x4005b3f	            0x7408	                            je 0x4005b49	      4626	ldlang.c	FUNCTION_107	ELSE_1	WHILE_1
0x4005b41	          0x83ed01	                              sub ebp, 1	      4626	ldlang.c	FUNCTION_107	ELSE_1	WHILE_1
0x4005b44	          0x83fdff	             cmp ebp, 0xffffffffffffffff	      4626	ldlang.c	FUNCTION_107	ELSE_1	WHILE_1
0x4005b47	            0x75e1	                           jne 0x4005b2a	      4626	ldlang.c	FUNCTION_107	ELSE_1	WHILE_1
0x4005b49	    0x4c8925000000	            mov qword [0x04005b50], r12 	      4633	ldlang.c	FUNCTION_107
0x4005b50	              0x5b	                                 pop rbx	      4634	ldlang.c	FUNCTION_107
0x4005b51	              0x5d	                                 pop rbp	      4634	ldlang.c	FUNCTION_107
0x4005b52	            0x415c	                                 pop r12	      4634	ldlang.c	FUNCTION_107
0x4005b54	              0xc3	                                     ret	      4634	ldlang.c	FUNCTION_107
lang_ld_feature	IF,2:WHILE,3:FOR,0:DO,0:SWITCH,0:functions,0:CALL,5:ELSE,1	59
0x400a93b	            0x4154	                                push r12	      8730	ldlang.c	FUNCTION_207
0x400a93d	              0x55	                                push rbp	      8730	ldlang.c	FUNCTION_207
0x400a93e	              0x53	                                push rbx	      8730	ldlang.c	FUNCTION_207
0x400a93f	          0x4989fc	                            mov r12, rdi	      8730	ldlang.c	FUNCTION_207
0x400a942	          0x803f00	                       cmp byte [rdi], 0	      8734	ldlang.c	FUNCTION_207	WHILE_1
0x400a945	     0xf85b7000000	                           jne 0x400aa02	      8734	ldlang.c	FUNCTION_207	WHILE_1
0x400a94b	      0xe9ba000000	                           jmp 0x400aa0a	      8734	ldlang.c	FUNCTION_207	WHILE_1
0x400a950	        0x4883c301	                              add rbx, 1	      8738	ldlang.c	FUNCTION_207	WHILE_1	WHILE_2
0x400a954	           0xfb603	                   movzx eax, byte [rbx]	      8737	ldlang.c	FUNCTION_207	WHILE_1	WHILE_2	CALL_1
0x400a957	            0x3c2c	                            cmp al, 0x2c	      8737	ldlang.c	FUNCTION_207	WHILE_1	WHILE_2	CALL_1
0x400a959	            0x74f5	                            je 0x400a950	      8737	ldlang.c	FUNCTION_207	WHILE_1	WHILE_2	CALL_1
0x400a95b	           0xfb6d0	                           movzx edx, al	      8737	ldlang.c	FUNCTION_207	WHILE_1	WHILE_2	CALL_1
0x400a95e	    0xf68412000000	            test byte [rdx + rdx], 0x40 	      8737	ldlang.c	FUNCTION_207	WHILE_1	WHILE_2	CALL_1
0x400a966	            0x75e8	                           jne 0x400a950	      8737	ldlang.c	FUNCTION_207	WHILE_1	WHILE_2	CALL_1
0x400a968	            0x84c0	                             test al, al	      8739	ldlang.c	FUNCTION_207	WHILE_1	IF_1
0x400a96a	     0xf849a000000	                            je 0x400aa0a	      8739	ldlang.c	FUNCTION_207	WHILE_1	IF_1
0x400a970	        0x4c8d6301	                      lea r12, [rbx + 1]	      8741	ldlang.c	FUNCTION_207	WHILE_1
0x400a974	         0xfb66b01	               movzx ebp, byte [rbx + 1]	      8742	ldlang.c	FUNCTION_207	WHILE_1	WHILE_3	CALL_2
0x400a978	          0x4084ed	                           test bpl, bpl	      8742	ldlang.c	FUNCTION_207	WHILE_1	WHILE_3	CALL_2
0x400a97b	            0x7436	                            je 0x400a9b3	      8742	ldlang.c	FUNCTION_207	WHILE_1	WHILE_3	CALL_2
0x400a97d	        0x4080fd2c	                           cmp bpl, 0x2c	      8742	ldlang.c	FUNCTION_207	WHILE_1	WHILE_3	CALL_2
0x400a981	            0x7430	                            je 0x400a9b3	      8742	ldlang.c	FUNCTION_207	WHILE_1	WHILE_3	CALL_2
0x400a983	        0x400fb6c5	                          movzx eax, bpl	      8742	ldlang.c	FUNCTION_207	WHILE_1	WHILE_3	CALL_2
0x400a987	    0xf68400000000	            test byte [rax + rax], 0x40 	      8742	ldlang.c	FUNCTION_207	WHILE_1	WHILE_3	CALL_2
0x400a98f	            0x7522	                           jne 0x400a9b3	      8742	ldlang.c	FUNCTION_207	WHILE_1	WHILE_3	CALL_2
0x400a991	        0x4983c401	                              add r12, 1	      8743	ldlang.c	FUNCTION_207	WHILE_1	WHILE_3
0x400a995	      0x410fb62c24	                   movzx ebp, byte [r12]	      8742	ldlang.c	FUNCTION_207	WHILE_1	WHILE_3	CALL_2
0x400a99a	          0x4084ed	                           test bpl, bpl	      8742	ldlang.c	FUNCTION_207	WHILE_1	WHILE_3	CALL_2
0x400a99d	            0x7414	                            je 0x400a9b3	      8742	ldlang.c	FUNCTION_207	WHILE_1	WHILE_3	CALL_2
0x400a99f	        0x4080fd2c	                           cmp bpl, 0x2c	      8742	ldlang.c	FUNCTION_207	WHILE_1	WHILE_3	CALL_2
0x400a9a3	            0x740e	                            je 0x400a9b3	      8742	ldlang.c	FUNCTION_207	WHILE_1	WHILE_3	CALL_2
0x400a9a5	        0x400fb6c5	                          movzx eax, bpl	      8742	ldlang.c	FUNCTION_207	WHILE_1	WHILE_3	CALL_2
0x400a9a9	    0xf68400000000	            test byte [rax + rax], 0x40 	      8742	ldlang.c	FUNCTION_207	WHILE_1	WHILE_3	CALL_2
0x400a9b1	            0x74de	                            je 0x400a991	      8742	ldlang.c	FUNCTION_207	WHILE_1	WHILE_3	CALL_2
0x400a9b3	      0x41c6042400	                       mov byte [r12], 0	      8745	ldlang.c	FUNCTION_207	WHILE_1
0x400a9b8	      0xbe00000000	                              mov esi, 0	      8746	ldlang.c	FUNCTION_207	WHILE_1	IF_2	CALL_3
0x400a9bd	          0x4889df	                            mov rdi, rbx	      8746	ldlang.c	FUNCTION_207	WHILE_1	IF_2	CALL_3
0x400a9c0	      0xe800000000	                          call 0x400a9c5	      8746	ldlang.c	FUNCTION_207	WHILE_1	IF_2	CALL_3
0x400a9c5	            0x85c0	                           test eax, eax	      8746	ldlang.c	FUNCTION_207	WHILE_1	IF_2	CALL_3
0x400a9c7	            0x750c	                           jne 0x400a9d5	      8746	ldlang.c	FUNCTION_207	WHILE_1	IF_2	CALL_3
0x400a9c9	    0xc70500000000	               mov dword [0x0400a9d3], 1	      8747	ldlang.c	FUNCTION_207	WHILE_1	IF_2
0x400a9d3	            0xeb24	                           jmp 0x400a9f9	      8747	ldlang.c	FUNCTION_207	WHILE_1	IF_2
0x400a9d5	      0xba05000000	                              mov edx, 5	      8749	ldlang.c	FUNCTION_207	WHILE_1	CALL_5
0x400a9da	      0xbe00000000	                              mov esi, 0	      8749	ldlang.c	FUNCTION_207	WHILE_1	CALL_5
0x400a9df	      0xbf00000000	                              mov edi, 0	      8749	ldlang.c	FUNCTION_207	WHILE_1	CALL_5
0x400a9e4	      0xe800000000	                          call 0x400a9e9	      8749	ldlang.c	FUNCTION_207	WHILE_1	CALL_5
0x400a9e9	          0x4889de	                            mov rsi, rbx	      8749	ldlang.c	FUNCTION_207	WHILE_1	CALL_5
0x400a9ec	          0x4889c7	                            mov rdi, rax	      8749	ldlang.c	FUNCTION_207	WHILE_1	CALL_5
0x400a9ef	      0xb800000000	                              mov eax, 0	      8749	ldlang.c	FUNCTION_207	WHILE_1	CALL_5
0x400a9f4	      0xe800000000	                          call 0x400a9f9	      8749	ldlang.c	FUNCTION_207	WHILE_1	CALL_5
0x400a9f9	        0x41882c24	                     mov byte [r12], bpl	      8750	ldlang.c	FUNCTION_207	WHILE_1
0x400a9fd	          0x4084ed	                           test bpl, bpl	      8734	ldlang.c	FUNCTION_207	WHILE_1
0x400aa00	            0x7408	                            je 0x400aa0a	      8734	ldlang.c	FUNCTION_207	WHILE_1
0x400aa02	          0x4c89e3	                            mov rbx, r12	      8730	ldlang.c	FUNCTION_207
0x400aa05	      0xe94affffff	                           jmp 0x400a954	      8730	ldlang.c	FUNCTION_207
0x400aa0a	              0x5b	                                 pop rbx	      8753	ldlang.c	FUNCTION_207
0x400aa0b	              0x5d	                                 pop rbp	      8753	ldlang.c	FUNCTION_207
0x400aa0c	            0x415c	                                 pop r12	      8753	ldlang.c	FUNCTION_207
0x400aa0e	              0xc3	                                     ret	      8753	ldlang.c	FUNCTION_207
lang_append_dynamic_list_cpp_typeinfo	IF,0:WHILE,0:FOR,1:DO,0:SWITCH,0:functions,0:CALL,3:ELSE,0	15
0x400a8b9	        0x4883ec08	                              sub rsp, 8	      8689	ldlang.c	FUNCTION_205
0x400a8bd	      0xb900000000	                              mov ecx, 0	      8699	ldlang.c	FUNCTION_205	FOR_1	CALL_2
0x400a8c2	      0xba00000000	                              mov edx, 0	      8699	ldlang.c	FUNCTION_205	FOR_1	CALL_2
0x400a8c7	      0xbe00000000	                              mov esi, 0	      8699	ldlang.c	FUNCTION_205	FOR_1	CALL_2
0x400a8cc	      0xbf00000000	                              mov edi, 0	      8699	ldlang.c	FUNCTION_205	FOR_1	CALL_2
0x400a8d1	      0xe800000000	                          call 0x400a8d6	      8699	ldlang.c	FUNCTION_205	FOR_1	CALL_2
0x400a8d6	      0xb900000000	                              mov ecx, 0	      8699	ldlang.c	FUNCTION_205	FOR_1	CALL_2
0x400a8db	      0xba00000000	                              mov edx, 0	      8699	ldlang.c	FUNCTION_205	FOR_1	CALL_2
0x400a8e0	      0xbe00000000	                              mov esi, 0	      8699	ldlang.c	FUNCTION_205	FOR_1	CALL_2
0x400a8e5	          0x4889c7	                            mov rdi, rax	      8699	ldlang.c	FUNCTION_205	FOR_1	CALL_2
0x400a8e8	      0xe800000000	                          call 0x400a8ed	      8699	ldlang.c	FUNCTION_205	FOR_1	CALL_2
0x400a8ed	          0x4889c7	                            mov rdi, rax	      8702	ldlang.c	FUNCTION_205	CALL_3
0x400a8f0	      0xe800000000	                          call 0x400a8f5	      8702	ldlang.c	FUNCTION_205	CALL_3
0x400a8f5	        0x4883c408	                              add rsp, 8	      8703	ldlang.c	FUNCTION_205
0x400a8f9	              0xc3	                                     ret	      8703	ldlang.c	FUNCTION_205
lang_init	IF,0:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,8:ELSE,0	46
0x4004640	        0x4883ec08	                              sub rsp, 8	      1247	ldlang.c	FUNCTION_39
0x4004644	    0x41b800000000	                              mov r8d, 0	      1248	ldlang.c	FUNCTION_39	CALL_1
0x400464a	      0xb900000000	                              mov ecx, 0	      1248	ldlang.c	FUNCTION_39	CALL_1
0x400464f	      0xba00000000	                              mov edx, 0	      1248	ldlang.c	FUNCTION_39	CALL_1
0x4004654	      0xbee8030000	                          mov esi, 0x3e8	      1248	ldlang.c	FUNCTION_39	CALL_1
0x4004659	      0xbf00000000	                              mov edi, 0	      1248	ldlang.c	FUNCTION_39	CALL_1
0x400465e	      0xe800000000	                          call 0x4004663	      1248	ldlang.c	FUNCTION_39	CALL_1
0x4004663	    0x48c705000000	               mov qword [0x0400466e], 0	      1250	ldlang.c	FUNCTION_39
0x400466e	      0xb93d000000	                           mov ecx, 0x3d	      1230	ldlang.c	FUNCTION_37	IF_1	CALL_1
0x4004673	      0xbab0000000	                           mov edx, 0xb0	      1230	ldlang.c	FUNCTION_37	IF_1	CALL_1
0x4004678	      0xbe00000000	                              mov esi, 0	      1230	ldlang.c	FUNCTION_37	IF_1	CALL_1
0x400467d	      0xbf00000000	                              mov edi, 0	      1230	ldlang.c	FUNCTION_37	IF_1	CALL_1
0x4004682	      0xe800000000	                          call 0x4004687	      1230	ldlang.c	FUNCTION_37	IF_1	CALL_1
0x4004687	            0x85c0	                           test eax, eax	      1230	ldlang.c	FUNCTION_37	IF_1	CALL_1
0x4004689	            0x7521	                           jne 0x40046ac	      1230	ldlang.c	FUNCTION_37	IF_1	CALL_1
0x400468b	      0xba05000000	                              mov edx, 5	      1234	ldlang.c	FUNCTION_37	CALL_3
0x4004690	      0xbe00000000	                              mov esi, 0	      1234	ldlang.c	FUNCTION_37	CALL_3
0x4004695	      0xbf00000000	                              mov edi, 0	      1234	ldlang.c	FUNCTION_37	CALL_3
0x400469a	      0xe800000000	                          call 0x400469f	      1234	ldlang.c	FUNCTION_37	CALL_3
0x400469f	          0x4889c7	                            mov rdi, rax	      1234	ldlang.c	FUNCTION_37	CALL_3
0x40046a2	      0xb800000000	                              mov eax, 0	      1234	ldlang.c	FUNCTION_37	CALL_3
0x40046a7	      0xe800000000	                          call 0x40046ac	      1234	ldlang.c	FUNCTION_37	CALL_3
0x40046ac	    0x488b05000000	            mov rax, qword [0x040046b3] 	      1254	ldlang.c	FUNCTION_39	CALL_3
0x40046b3	    0x48c700000000	                      mov qword [rax], 0	      1009	ldlang.c	FUNCTION_30
0x40046ba	        0x48894008	                mov qword [rax + 8], rax	      1010	ldlang.c	FUNCTION_30
0x40046be	    0x48c705000000	               mov qword [0x040046c9], 0	      1009	ldlang.c	FUNCTION_30
0x40046c9	    0x48c705000000	               mov qword [0x040046d4], 0	      1010	ldlang.c	FUNCTION_30
0x40046d4	    0x48c705000000	               mov qword [0x040046df], 0	      1009	ldlang.c	FUNCTION_30
0x40046df	    0x48c705000000	               mov qword [0x040046ea], 0	      1010	ldlang.c	FUNCTION_30
0x40046ea	    0x48c705000000	               mov qword [0x040046f5], 0	      1009	ldlang.c	FUNCTION_30
0x40046f5	    0x48c705000000	               mov qword [0x04004700], 0	      1010	ldlang.c	FUNCTION_30
0x4004700	      0xba00000000	                              mov edx, 0	      1259	ldlang.c	FUNCTION_39	CALL_7
0x4004705	      0xbe02000000	                              mov esi, 2	      1259	ldlang.c	FUNCTION_39	CALL_7
0x400470a	      0xbf00000000	                              mov edi, 0	      1259	ldlang.c	FUNCTION_39	CALL_7
0x400470f	      0xe800000000	                          call 0x4004714	      1259	ldlang.c	FUNCTION_39	CALL_7
0x4004714	    0x488905000000	            mov qword [0x0400471b], rax 	      1259	ldlang.c	FUNCTION_39	CALL_7
0x400471b	      0xba01000000	                              mov edx, 1	      1262	ldlang.c	FUNCTION_39	CALL_8
0x4004720	      0xbe00000000	                              mov esi, 0	      1262	ldlang.c	FUNCTION_39	CALL_8
0x4004725	      0xbf00000000	                              mov edi, 0	      1262	ldlang.c	FUNCTION_39	CALL_8
0x400472a	      0xe800000000	                          call 0x400472f	      1262	ldlang.c	FUNCTION_39	CALL_8
0x400472f	    0x488905000000	            mov qword [0x04004736], rax 	      1261	ldlang.c	FUNCTION_39
0x4004736	    0x48c740380000	               mov qword [rax + 0x38], 0	      1264	ldlang.c	FUNCTION_39
0x400473e	    0x48c705000000	               mov qword [0x04004749], 0	      1266	ldlang.c	FUNCTION_39
0x4004749	    0x48c705000000	               mov qword [0x04004754], 0	      1267	ldlang.c	FUNCTION_39
0x4004754	        0x4883c408	                              add rsp, 8	      1268	ldlang.c	FUNCTION_39
0x4004758	              0xc3	                                     ret	      1268	ldlang.c	FUNCTION_39
lang_finalize_version_expr_head	IF,6:WHILE,0:FOR,2:DO,1:SWITCH,0:functions,0:CALL,3:ELSE,4	98
0x400193e	          0x488b37	                    mov rsi, qword [rdi]	      8373	ldlang.c	FUNCTION_198	FOR_1
0x4001941	          0x4885f6	                           test rsi, rsi	      8373	ldlang.c	FUNCTION_198	FOR_1
0x4001944	     0xf842b010000	                            je 0x4001a75	      8373	ldlang.c	FUNCTION_198	FOR_1
0x400194a	          0x4889f2	                            mov rdx, rsi	      8373	ldlang.c	FUNCTION_198	FOR_1
0x400194d	      0xb900000000	                              mov ecx, 0	      8373	ldlang.c	FUNCTION_198	FOR_1
0x4001952	         0xfb64210	           movzx eax, byte [rdx + 0x10] 	      8375	ldlang.c	FUNCTION_198	FOR_1	IF_1
0x4001956	          0x83e001	                              and eax, 1	      8375	ldlang.c	FUNCTION_198	FOR_1	IF_1
0x4001959	            0x3c01	                               cmp al, 1	      8376	ldlang.c	FUNCTION_198	FOR_1	IF_1
0x400195b	        0x4883d9ff	             sbb rcx, 0xffffffffffffffff	      8376	ldlang.c	FUNCTION_198	FOR_1	IF_1
0x400195f	         0xfb64210	           movzx eax, byte [rdx + 0x10] 	      8377	ldlang.c	FUNCTION_198	FOR_1
0x4001963	          0xc0e803	                               shr al, 3	      8377	ldlang.c	FUNCTION_198	FOR_1
0x4001966	          0x83e007	                              and eax, 7	      8377	ldlang.c	FUNCTION_198	FOR_1
0x4001969	           0x94718	              or dword [rdi + 0x18], eax	      8377	ldlang.c	FUNCTION_198	FOR_1
0x400196c	          0x488b12	                    mov rdx, qword [rdx]	      8373	ldlang.c	FUNCTION_198	FOR_1
0x400196f	          0x4885d2	                           test rdx, rdx	      8373	ldlang.c	FUNCTION_198	FOR_1
0x4001972	            0x75de	                           jne 0x4001952	      8373	ldlang.c	FUNCTION_198	FOR_1
0x4001974	          0x4885c9	                           test rcx, rcx	      8380	ldlang.c	FUNCTION_198	IF_2
0x4001977	     0xf84f8000000	                            je 0x4001a75	      8380	ldlang.c	FUNCTION_198	IF_2
0x400197d	            0x4157	                                push r15	      8368	ldlang.c	FUNCTION_198
0x400197f	            0x4156	                                push r14	      8368	ldlang.c	FUNCTION_198
0x4001981	            0x4155	                                push r13	      8368	ldlang.c	FUNCTION_198
0x4001983	            0x4154	                                push r12	      8368	ldlang.c	FUNCTION_198
0x4001985	              0x55	                                push rbp	      8368	ldlang.c	FUNCTION_198
0x4001986	              0x53	                                push rbx	      8368	ldlang.c	FUNCTION_198
0x4001987	        0x4883ec18	                           sub rsp, 0x18	      8368	ldlang.c	FUNCTION_198
0x400198b	          0x4989fc	                            mov r12, rdi	      8368	ldlang.c	FUNCTION_198
0x400198e	        0x488d3c09	                    lea rdi, [rcx + rcx]	      8382	ldlang.c	FUNCTION_198	IF_2	CALL_1
0x4001992	      0xb900000000	                              mov ecx, 0	      8382	ldlang.c	FUNCTION_198	IF_2	CALL_1
0x4001997	      0xba00000000	                              mov edx, 0	      8382	ldlang.c	FUNCTION_198	IF_2	CALL_1
0x400199c	      0xbe00000000	                              mov esi, 0	      8382	ldlang.c	FUNCTION_198	IF_2	CALL_1
0x40019a1	      0xe800000000	                          call 0x40019a6	      8382	ldlang.c	FUNCTION_198	IF_2	CALL_1
0x40019a6	      0x4989442408	                mov qword [r12 + 8], rax	      8382	ldlang.c	FUNCTION_198	IF_2	CALL_1
0x40019ab	      0x4c89642408	                mov qword [rsp + 8], r12	      8384	ldlang.c	FUNCTION_198	IF_2
0x40019b0	      0x498d442410	                   lea rax, [r12 + 0x10]	      8385	ldlang.c	FUNCTION_198	IF_2
0x40019b5	        0x48890424	                    mov qword [rsp], rax	      8385	ldlang.c	FUNCTION_198	IF_2
0x40019b9	        0x4d8b2c24	                    mov r13, qword [r12]	      8386	ldlang.c	FUNCTION_198	IF_2	FOR_2
0x40019bd	          0x4d85ed	                           test r13, r13	      8386	ldlang.c	FUNCTION_198	IF_2	FOR_2
0x40019c0	     0xf8495000000	                            je 0x4001a5b	      8386	ldlang.c	FUNCTION_198	IF_2	FOR_2
0x40019c6	        0x4d8b7d00	                    mov r15, qword [r13]	      8388	ldlang.c	FUNCTION_198	IF_2	FOR_2
0x40019ca	      0x41f6451001	               test byte [r13 + 0x10], 1	      8389	ldlang.c	FUNCTION_198	IF_2	FOR_2	IF_3
0x40019cf	            0x750d	                           jne 0x40019de	      8389	ldlang.c	FUNCTION_198	IF_2	FOR_2	IF_3
0x40019d1	        0x488b0424	                    mov rax, qword [rsp]	      8391	ldlang.c	FUNCTION_198	IF_2	FOR_2	IF_3
0x40019d5	          0x4c8928	                    mov qword [rax], r13	      8391	ldlang.c	FUNCTION_198	IF_2	FOR_2	IF_3
0x40019d8	        0x4c892c24	                    mov qword [rsp], r13	      8392	ldlang.c	FUNCTION_198	IF_2	FOR_2	IF_3
0x40019dc	            0xeb71	                           jmp 0x4001a4f	      8392	ldlang.c	FUNCTION_198	IF_2	FOR_2	IF_3
0x40019de	      0x498b7c2408	                mov rdi, qword [r12 + 8]	      8396	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	CALL_2
0x40019e3	      0xba01000000	                              mov edx, 1	      8396	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	CALL_2
0x40019e8	          0x4c89ee	                            mov rsi, r13	      8396	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	CALL_2
0x40019eb	      0xe800000000	                          call 0x40019f0	      8396	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	CALL_2
0x40019f0	          0x488b28	                    mov rbp, qword [rax]	      8398	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4
0x40019f3	          0x4885ed	                           test rbp, rbp	      8398	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4
0x40019f6	            0x7447	                            je 0x4001a3f	      8398	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4
0x40019f8	      0x450fb67510	          movzx r14d, byte [r13 + 0x10] 	      8406	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4	DO_1	IF_5
0x40019fd	            0xeb03	                           jmp 0x4001a02	      8406	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4	DO_1	IF_5
0x40019ff	          0x4889dd	                            mov rbp, rbx	      8412	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4	DO_1
0x4001a02	          0x4489f0	                           mov eax, r14d	      8406	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4	DO_1	IF_5
0x4001a05	          0x324510	               xor al, byte [rbp + 0x10]	      8406	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4	DO_1	IF_5
0x4001a08	            0xa838	                           test al, 0x38	      8406	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4	DO_1	IF_5
0x4001a0a	            0x741f	                            je 0x4001a2b	      8406	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4	DO_1	IF_5
0x4001a0c	        0x488b5d00	                    mov rbx, qword [rbp]	      8412	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4	DO_1
0x4001a10	          0x4885db	                           test rbx, rbx	      8414	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4
0x4001a13	            0x7411	                            je 0x4001a26	      8414	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4
0x4001a15	        0x498b7508	                mov rsi, qword [r13 + 8]	      8414	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4
0x4001a19	        0x488b7b08	                mov rdi, qword [rbx + 8]	      8414	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4
0x4001a1d	      0xe800000000	                          call 0x4001a22	      8414	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4
0x4001a22	            0x85c0	                           test eax, eax	      8414	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4
0x4001a24	            0x74d9	                            je 0x40019ff	      8414	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4
0x4001a26	          0x4885ed	                           test rbp, rbp	      8416	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4	IF_6
0x4001a29	            0x750a	                           jne 0x4001a35	      8416	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4	IF_6
0x4001a2b	          0x4c89ef	                            mov rdi, r13	      8422	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4	IF_6	CALL_3
0x4001a2e	      0xe800000000	                          call 0x4001a33	      8422	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4	IF_6	CALL_3
0x4001a33	            0xeb1a	                           jmp 0x4001a4f	      8422	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4	IF_6	CALL_3
0x4001a35	        0x49895d00	                    mov qword [r13], rbx	      8426	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4	ELSE_2
0x4001a39	        0x4c896d00	                    mov qword [rbp], r13	      8427	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4	ELSE_2
0x4001a3d	            0xeb10	                           jmp 0x4001a4f	      8427	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	IF_4	ELSE_2
0x4001a3f	          0x4c8928	                    mov qword [rax], r13	      8432	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	ELSE_3
0x4001a42	      0x488b442408	                mov rax, qword [rsp + 8]	      8433	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	ELSE_3
0x4001a47	          0x4c8928	                    mov qword [rax], r13	      8433	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	ELSE_3
0x4001a4a	      0x4c896c2408	                mov qword [rsp + 8], r13	      8434	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	ELSE_3
0x4001a4f	          0x4d89fd	                            mov r13, r15	      8434	ldlang.c	FUNCTION_198	IF_2	FOR_2	ELSE_1	ELSE_3
0x4001a52	          0x4d85ff	                           test r15, r15	      8386	ldlang.c	FUNCTION_198	IF_2	FOR_2
0x4001a55	     0xf856bffffff	                           jne 0x40019c6	      8386	ldlang.c	FUNCTION_198	IF_2	FOR_2
0x4001a5b	        0x488b0424	                    mov rax, qword [rsp]	      8438	ldlang.c	FUNCTION_198	IF_2
0x4001a5f	    0x48c700000000	                      mov qword [rax], 0	      8438	ldlang.c	FUNCTION_198	IF_2
0x4001a66	      0x498b442410	            mov rax, qword [r12 + 0x10] 	      8439	ldlang.c	FUNCTION_198	IF_2
0x4001a6b	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      8439	ldlang.c	FUNCTION_198	IF_2
0x4001a70	          0x488901	                    mov qword [rcx], rax	      8439	ldlang.c	FUNCTION_198	IF_2
0x4001a73	            0xeb05	                           jmp 0x4001a7a	      8439	ldlang.c	FUNCTION_198	IF_2
0x4001a75	        0x48897710	             mov qword [rdi + 0x10], rsi	      8442	ldlang.c	FUNCTION_198	ELSE_4
0x4001a79	              0xc3	                                     ret	      8443	ldlang.c	FUNCTION_198	ELSE_4
0x4001a7a	        0x4883c418	                           add rsp, 0x18	      8443	ldlang.c	FUNCTION_198	ELSE_4
0x4001a7e	              0x5b	                                 pop rbx	      8443	ldlang.c	FUNCTION_198	ELSE_4
0x4001a7f	              0x5d	                                 pop rbp	      8443	ldlang.c	FUNCTION_198	ELSE_4
0x4001a80	            0x415c	                                 pop r12	      8443	ldlang.c	FUNCTION_198	ELSE_4
0x4001a82	            0x415d	                                 pop r13	      8443	ldlang.c	FUNCTION_198	ELSE_4
0x4001a84	            0x415e	                                 pop r14	      8443	ldlang.c	FUNCTION_198	ELSE_4
0x4001a86	            0x415f	                                 pop r15	      8443	ldlang.c	FUNCTION_198	ELSE_4
0x4001a88	              0xc3	                                     ret	      8443	ldlang.c	FUNCTION_198	ELSE_4
lang_new_phdr	IF,1:WHILE,0:FOR,1:DO,0:SWITCH,0:functions,0:CALL,4:ELSE,0	68
0x4007ff4	            0x4157	                                push r15	      7743	ldlang.c	FUNCTION_184
0x4007ff6	            0x4156	                                push r14	      7743	ldlang.c	FUNCTION_184
0x4007ff8	            0x4155	                                push r13	      7743	ldlang.c	FUNCTION_184
0x4007ffa	            0x4154	                                push r12	      7743	ldlang.c	FUNCTION_184
0x4007ffc	              0x55	                                push rbp	      7743	ldlang.c	FUNCTION_184
0x4007ffd	              0x53	                                push rbx	      7743	ldlang.c	FUNCTION_184
0x4007ffe	        0x4883ec18	                           sub rsp, 0x18	      7743	ldlang.c	FUNCTION_184
0x4008002	          0x4989ff	                            mov r15, rdi	      7743	ldlang.c	FUNCTION_184
0x4008005	      0x4889742408	                mov qword [rsp + 8], rsi	      7743	ldlang.c	FUNCTION_184
0x400800a	          0x4189d4	                           mov r12d, edx	      7743	ldlang.c	FUNCTION_184
0x400800d	            0x89cd	                            mov ebp, ecx	      7743	ldlang.c	FUNCTION_184
0x400800f	          0x4d89c6	                             mov r14, r8	      7743	ldlang.c	FUNCTION_184
0x4008012	          0x4d89cd	                             mov r13, r9	      7743	ldlang.c	FUNCTION_184
0x4008015	      0xbf30000000	                           mov edi, 0x30	      7747	ldlang.c	FUNCTION_184	CALL_1
0x400801a	      0xe800000000	                          call 0x400801f	      7747	ldlang.c	FUNCTION_184	CALL_1
0x400801f	          0x4889c3	                            mov rbx, rax	      7747	ldlang.c	FUNCTION_184	CALL_1
0x4008022	    0x48c700000000	                      mov qword [rax], 0	      7748	ldlang.c	FUNCTION_184
0x4008029	        0x4c897808	                mov qword [rax + 8], r15	      7749	ldlang.c	FUNCTION_184
0x400802d	      0xba00000000	                              mov edx, 0	      7750	ldlang.c	FUNCTION_184	CALL_2
0x4008032	      0xbe00000000	                              mov esi, 0	      7750	ldlang.c	FUNCTION_184	CALL_2
0x4008037	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      7750	ldlang.c	FUNCTION_184	CALL_2
0x400803c	      0xe800000000	                          call 0x4008041	      7750	ldlang.c	FUNCTION_184	CALL_2
0x4008041	            0x4898	                                    cdqe	      7750	ldlang.c	FUNCTION_184	CALL_2
0x4008043	        0x48894310	             mov qword [rbx + 0x10], rax	      7750	ldlang.c	FUNCTION_184	CALL_2
0x4008047	        0x44896318	            mov dword [rbx + 0x18], r12d	      7751	ldlang.c	FUNCTION_184
0x400804b	          0x896b1c	             mov dword [rbx + 0x1c], ebp	      7752	ldlang.c	FUNCTION_184
0x400804e	        0x4c897320	             mov qword [rbx + 0x20], r14	      7753	ldlang.c	FUNCTION_184
0x4008052	        0x4c896b28	             mov qword [rbx + 0x28], r13	      7754	ldlang.c	FUNCTION_184
0x4008056	      0xba00000000	                              mov edx, 0	      7756	ldlang.c	FUNCTION_184
0x400805b	        0x4883f801	                              cmp rax, 1	      7756	ldlang.c	FUNCTION_184
0x400805f	            0x7509	                           jne 0x400806a	      7756	ldlang.c	FUNCTION_184
0x4008061	          0x4109ec	                            or r12d, ebp	      7756	ldlang.c	FUNCTION_184
0x4008064	           0xf95c2	                                setne dl	      7756	ldlang.c	FUNCTION_184
0x4008067	           0xfb6d2	                           movzx edx, dl	      7756	ldlang.c	FUNCTION_184
0x400806a	    0x488b05000000	            mov rax, qword [0x04008071] 	      7758	ldlang.c	FUNCTION_184	FOR_1
0x4008071	          0x4885c0	                           test rax, rax	      7758	ldlang.c	FUNCTION_184	FOR_1
0x4008074	            0x7451	                            je 0x40080c7	      7758	ldlang.c	FUNCTION_184	FOR_1
0x4008076	      0xbd00000000	                              mov ebp, 0	      7758	ldlang.c	FUNCTION_184	FOR_1
0x400807b	            0x85d2	                           test edx, edx	      7759	ldlang.c	FUNCTION_184	FOR_1	IF_1
0x400807d	            0x7439	                            je 0x40080b8	      7759	ldlang.c	FUNCTION_184	FOR_1	IF_1
0x400807f	      0x4883781001	               cmp qword [rax + 0x10], 1	      7760	ldlang.c	FUNCTION_184	FOR_1	IF_1
0x4008084	            0x7532	                           jne 0x40080b8	      7760	ldlang.c	FUNCTION_184	FOR_1	IF_1
0x4008086	      0x4883781800	               cmp qword [rax + 0x18], 0	      7761	ldlang.c	FUNCTION_184	FOR_1	IF_1
0x400808b	            0x752b	                           jne 0x40080b8	      7761	ldlang.c	FUNCTION_184	FOR_1	IF_1
0x400808d	      0xba05000000	                              mov edx, 5	      7763	ldlang.c	FUNCTION_184	FOR_1	IF_1	CALL_4
0x4008092	      0xbe00000000	                              mov esi, 0	      7763	ldlang.c	FUNCTION_184	FOR_1	IF_1	CALL_4
0x4008097	      0xbf00000000	                              mov edi, 0	      7763	ldlang.c	FUNCTION_184	FOR_1	IF_1	CALL_4
0x400809c	      0xe800000000	                          call 0x40080a1	      7763	ldlang.c	FUNCTION_184	FOR_1	IF_1	CALL_4
0x40080a1	      0xbe00000000	                              mov esi, 0	      7763	ldlang.c	FUNCTION_184	FOR_1	IF_1	CALL_4
0x40080a6	          0x4889c7	                            mov rdi, rax	      7763	ldlang.c	FUNCTION_184	FOR_1	IF_1	CALL_4
0x40080a9	      0xb800000000	                              mov eax, 0	      7763	ldlang.c	FUNCTION_184	FOR_1	IF_1	CALL_4
0x40080ae	      0xe800000000	                          call 0x40080b3	      7763	ldlang.c	FUNCTION_184	FOR_1	IF_1	CALL_4
0x40080b3	      0xba00000000	                              mov edx, 0	      7765	ldlang.c	FUNCTION_184	FOR_1	IF_1
0x40080b8	        0x488b6d00	                    mov rbp, qword [rbp]	      7758	ldlang.c	FUNCTION_184	FOR_1
0x40080bc	        0x488b4500	                    mov rax, qword [rbp]	      7758	ldlang.c	FUNCTION_184	FOR_1
0x40080c0	          0x4885c0	                           test rax, rax	      7758	ldlang.c	FUNCTION_184	FOR_1
0x40080c3	            0x75b6	                           jne 0x400807b	      7758	ldlang.c	FUNCTION_184	FOR_1
0x40080c5	            0xeb05	                           jmp 0x40080cc	      7758	ldlang.c	FUNCTION_184	FOR_1
0x40080c7	      0xbd00000000	                              mov ebp, 0	      7758	ldlang.c	FUNCTION_184	FOR_1
0x40080cc	        0x48895d00	                    mov qword [rbp], rbx	      7768	ldlang.c	FUNCTION_184
0x40080d0	        0x4883c418	                           add rsp, 0x18	      7769	ldlang.c	FUNCTION_184
0x40080d4	              0x5b	                                 pop rbx	      7769	ldlang.c	FUNCTION_184
0x40080d5	              0x5d	                                 pop rbp	      7769	ldlang.c	FUNCTION_184
0x40080d6	            0x415c	                                 pop r12	      7769	ldlang.c	FUNCTION_184
0x40080d8	            0x415d	                                 pop r13	      7769	ldlang.c	FUNCTION_184
0x40080da	            0x415e	                                 pop r14	      7769	ldlang.c	FUNCTION_184
0x40080dc	            0x415f	                                 pop r15	      7769	ldlang.c	FUNCTION_184
0x40080de	              0xc3	                                     ret	      7769	ldlang.c	FUNCTION_184
lang_add_insert	IF,0:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,0:ELSE,0	17
0x4007f75	              0x55	                                push rbp	      7700	ldlang.c	FUNCTION_181
0x4007f76	              0x53	                                push rbx	      7700	ldlang.c	FUNCTION_181
0x4007f77	        0x4883ec08	                              sub rsp, 8	      7700	ldlang.c	FUNCTION_181
0x4007f7b	          0x4889fd	                            mov rbp, rdi	      7700	ldlang.c	FUNCTION_181
0x4007f7e	            0x89f3	                            mov ebx, esi	      7700	ldlang.c	FUNCTION_181
0x4007f80	    0x488b15000000	            mov rdx, qword [0x04007f87] 	      7703	ldlang.c	FUNCTION_181
0x4007f87	      0xbe20000000	                           mov esi, 0x20	      7703	ldlang.c	FUNCTION_181
0x4007f8c	      0xbf0e000000	                            mov edi, 0xe	      7703	ldlang.c	FUNCTION_181
0x4007f91	      0xe832b2ffff	                  call sym.new_statement	      7703	ldlang.c	FUNCTION_181
0x4007f96	        0x48896810	             mov qword [rax + 0x10], rbp	      7704	ldlang.c	FUNCTION_181
0x4007f9a	          0x895818	             mov dword [rax + 0x18], ebx	      7705	ldlang.c	FUNCTION_181
0x4007f9d	    0x488b05000000	            mov rax, qword [0x04007fa4] 	      7706	ldlang.c	FUNCTION_181
0x4007fa4	    0x488905000000	            mov qword [0x04007fab], rax 	      7706	ldlang.c	FUNCTION_181
0x4007fab	        0x4883c408	                              add rsp, 8	      7707	ldlang.c	FUNCTION_181
0x4007faf	              0x5b	                                 pop rbx	      7707	ldlang.c	FUNCTION_181
0x4007fb0	              0x5d	                                 pop rbp	      7707	ldlang.c	FUNCTION_181
0x4007fb1	              0xc3	                                     ret	      7707	ldlang.c	FUNCTION_181
lang_enter_overlay_section	IF,2:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,5:ELSE,1	38
0x400817c	              0x53	                                push rbx	      7964	ldlang.c	FUNCTION_189
0x400817d	          0x4889fb	                            mov rbx, rdi	      7964	ldlang.c	FUNCTION_189
0x4008180	            0x6a00	                                  push 0	      7968	ldlang.c	FUNCTION_189	CALL_1
0x4008182	            0x6a00	                                  push 0	      7968	ldlang.c	FUNCTION_189	CALL_1
0x4008184	    0x41b900000000	                              mov r9d, 0	      7968	ldlang.c	FUNCTION_189	CALL_1
0x400818a	    0x4c8b05000000	              mov r8, qword [0x04008191]	      7968	ldlang.c	FUNCTION_189	CALL_1
0x4008191	      0xb900000000	                              mov ecx, 0	      7968	ldlang.c	FUNCTION_189	CALL_1
0x4008196	      0xba01000000	                              mov edx, 1	      7968	ldlang.c	FUNCTION_189	CALL_1
0x400819b	    0x488b35000000	            mov rsi, qword [0x040081a2] 	      7968	ldlang.c	FUNCTION_189	CALL_1
0x40081a2	      0xe800000000	                          call 0x40081a7	      7968	ldlang.c	FUNCTION_189	CALL_1
0x40081a7	        0x4883c410	                           add rsp, 0x10	      7974	ldlang.c	FUNCTION_189	IF_1
0x40081ab	    0x48833d000000	               cmp qword [0x040081b3], 0	      7974	ldlang.c	FUNCTION_189	IF_1
0x40081b3	            0x7514	                           jne 0x40081c9	      7974	ldlang.c	FUNCTION_189	IF_1
0x40081b5	          0x4889de	                            mov rsi, rbx	      7975	ldlang.c	FUNCTION_189	CALL_2
0x40081b8	      0xbf43010000	                          mov edi, 0x143	      7975	ldlang.c	FUNCTION_189	CALL_2
0x40081bd	      0xe800000000	                          call 0x40081c2	      7975	ldlang.c	FUNCTION_189	CALL_2
0x40081c2	    0x488905000000	            mov qword [0x040081c9], rax 	      7975	ldlang.c	FUNCTION_189	CALL_2
0x40081c9	      0xbf10000000	                           mov edi, 0x10	      7978	ldlang.c	FUNCTION_189	CALL_3
0x40081ce	      0xe800000000	                          call 0x40081d3	      7978	ldlang.c	FUNCTION_189	CALL_3
0x40081d3	    0x488b15000000	            mov rdx, qword [0x040081da] 	      7979	ldlang.c	FUNCTION_189
0x40081da	        0x48895008	                mov qword [rax + 8], rdx	      7979	ldlang.c	FUNCTION_189
0x40081de	    0x488b15000000	            mov rdx, qword [0x040081e5] 	      7980	ldlang.c	FUNCTION_189
0x40081e5	          0x488910	                    mov qword [rax], rdx	      7980	ldlang.c	FUNCTION_189
0x40081e8	    0x488905000000	            mov qword [0x040081ef], rax 	      7981	ldlang.c	FUNCTION_189
0x40081ef	          0x4889de	                            mov rsi, rbx	      7983	ldlang.c	FUNCTION_189	CALL_4
0x40081f2	      0xbf41010000	                          mov edi, 0x141	      7983	ldlang.c	FUNCTION_189	CALL_4
0x40081f7	      0xe800000000	                          call 0x40081fc	      7983	ldlang.c	FUNCTION_189	CALL_4
0x40081fc	    0x488b35000000	            mov rsi, qword [0x04008203] 	      7986	ldlang.c	FUNCTION_189	IF_2
0x4008203	          0x4885f6	                           test rsi, rsi	      7986	ldlang.c	FUNCTION_189	IF_2
0x4008206	            0x7509	                           jne 0x4008211	      7986	ldlang.c	FUNCTION_189	IF_2
0x4008208	    0x488905000000	            mov qword [0x0400820f], rax 	      7987	ldlang.c	FUNCTION_189	IF_2
0x400820f	            0xeb14	                           jmp 0x4008225	      7987	ldlang.c	FUNCTION_189	IF_2
0x4008211	          0x4889c2	                            mov rdx, rax	      7989	ldlang.c	FUNCTION_189	CALL_5
0x4008214	      0xbf45010000	                          mov edi, 0x145	      7989	ldlang.c	FUNCTION_189	CALL_5
0x4008219	      0xe800000000	                          call 0x400821e	      7989	ldlang.c	FUNCTION_189	CALL_5
0x400821e	    0x488905000000	            mov qword [0x04008225], rax 	      7989	ldlang.c	FUNCTION_189	CALL_5
0x4008225	              0x5b	                                 pop rbx	      7990	ldlang.c	FUNCTION_189
0x4008226	              0xc3	                                     ret	      7990	ldlang.c	FUNCTION_189
lang_for_each_statement_worker	IF,1:WHILE,0:FOR,1:DO,0:SWITCH,1:functions,0:CALL,6:ELSE,0	41
0x40033ab	              0x55	                                push rbp	       955	ldlang.c	FUNCTION_28
0x40033ac	              0x53	                                push rbx	       955	ldlang.c	FUNCTION_28
0x40033ad	        0x4883ec08	                              sub rsp, 8	       955	ldlang.c	FUNCTION_28
0x40033b1	          0x4889fd	                            mov rbp, rdi	       955	ldlang.c	FUNCTION_28
0x40033b4	          0x4889f3	                            mov rbx, rsi	       955	ldlang.c	FUNCTION_28
0x40033b7	          0x4885f6	                           test rsi, rsi	       956	ldlang.c	FUNCTION_28	FOR_1
0x40033ba	            0x7470	                            je 0x400342c	       956	ldlang.c	FUNCTION_28	FOR_1
0x40033bc	          0x4889df	                            mov rdi, rbx	       958	ldlang.c	FUNCTION_28	FOR_1	CALL_1
0x40033bf	            0xffd5	                                call rbp	       958	ldlang.c	FUNCTION_28	FOR_1	CALL_1
0x40033c1	        0x837b080f	                cmp dword [rbx + 8], 0xf	       960	ldlang.c	FUNCTION_28	FOR_1	SWITCH_1
0x40033c5	            0x774e	                            ja 0x4003415	       960	ldlang.c	FUNCTION_28	FOR_1	SWITCH_1
0x40033c7	          0x8b4308	                mov eax, dword [rbx + 8]	       960	ldlang.c	FUNCTION_28	FOR_1	SWITCH_1
0x40033ca	    0xff24c5000000	                       jmp qword [rax*8]	       960	ldlang.c	FUNCTION_28	FOR_1	SWITCH_1
0x40033d1	    0x488b35000000	            mov rsi, qword [0x040033d8] 	       963	ldlang.c	FUNCTION_28	FOR_1	SWITCH_1	CALL_2
0x40033d8	          0x4889ef	                            mov rdi, rbp	       963	ldlang.c	FUNCTION_28	FOR_1	SWITCH_1	CALL_2
0x40033db	      0xe800000000	                          call 0x40033e0	       963	ldlang.c	FUNCTION_28	FOR_1	SWITCH_1	CALL_2
0x40033e0	            0xeb42	                           jmp 0x4003424	       964	ldlang.c	FUNCTION_28	FOR_1	SWITCH_1
0x40033e2	    0x83bb84000000	cmp dword [rbx + 0x84], 0xffffffffffffffff	       966	ldlang.c	FUNCTION_28	FOR_1	SWITCH_1	IF_1
0x40033e9	            0x7439	                            je 0x4003424	       966	ldlang.c	FUNCTION_28	FOR_1	SWITCH_1	IF_1
0x40033eb	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	       967	ldlang.c	FUNCTION_28	FOR_1	SWITCH_1	IF_1	CALL_3
0x40033ef	          0x4889ef	                            mov rdi, rbp	       967	ldlang.c	FUNCTION_28	FOR_1	SWITCH_1	IF_1	CALL_3
0x40033f2	      0xe800000000	                          call 0x40033f7	       967	ldlang.c	FUNCTION_28	FOR_1	SWITCH_1	IF_1	CALL_3
0x40033f7	            0xeb2b	                           jmp 0x4003424	       967	ldlang.c	FUNCTION_28	FOR_1	SWITCH_1	IF_1	CALL_3
0x40033f9	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	       971	ldlang.c	FUNCTION_28	FOR_1	SWITCH_1	CALL_4
0x40033fd	          0x4889ef	                            mov rdi, rbp	       971	ldlang.c	FUNCTION_28	FOR_1	SWITCH_1	CALL_4
0x4003400	      0xe800000000	                          call 0x4003405	       971	ldlang.c	FUNCTION_28	FOR_1	SWITCH_1	CALL_4
0x4003405	            0xeb1d	                           jmp 0x4003424	       973	ldlang.c	FUNCTION_28	FOR_1	SWITCH_1
0x4003407	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	       975	ldlang.c	FUNCTION_28	FOR_1	SWITCH_1	CALL_5
0x400340b	          0x4889ef	                            mov rdi, rbp	       975	ldlang.c	FUNCTION_28	FOR_1	SWITCH_1	CALL_5
0x400340e	      0xe800000000	                          call 0x4003413	       975	ldlang.c	FUNCTION_28	FOR_1	SWITCH_1	CALL_5
0x4003413	            0xeb0f	                           jmp 0x4003424	       977	ldlang.c	FUNCTION_28	FOR_1	SWITCH_1
0x4003415	      0xbee0030000	                          mov esi, 0x3e0	       992	ldlang.c	FUNCTION_28	FOR_1	SWITCH_1	CALL_6
0x400341a	      0xbf00000000	                              mov edi, 0	       992	ldlang.c	FUNCTION_28	FOR_1	SWITCH_1	CALL_6
0x400341f	      0xe800000000	                          call 0x4003424	       992	ldlang.c	FUNCTION_28	FOR_1	SWITCH_1	CALL_6
0x4003424	          0x488b1b	                    mov rbx, qword [rbx]	       956	ldlang.c	FUNCTION_28	FOR_1
0x4003427	          0x4885db	                           test rbx, rbx	       956	ldlang.c	FUNCTION_28	FOR_1
0x400342a	            0x7590	                           jne 0x40033bc	       956	ldlang.c	FUNCTION_28	FOR_1
0x400342c	        0x4883c408	                              add rsp, 8	       996	ldlang.c	FUNCTION_28
0x4003430	              0x5b	                                 pop rbx	       996	ldlang.c	FUNCTION_28
0x4003431	              0x5d	                                 pop rbp	       996	ldlang.c	FUNCTION_28
0x4003432	              0xc3	                                     ret	       996	ldlang.c	FUNCTION_28
lang_reset_memory_regions	IF,1:WHILE,0:FOR,3:DO,0:SWITCH,0:functions,0:CALL,0:ELSE,0	29
0x4006f2a	    0x488b05000000	            mov rax, qword [0x04006f31] 	      6756	ldlang.c	FUNCTION_148	FOR_1
0x4006f31	          0x4885c0	                           test rax, rax	      6756	ldlang.c	FUNCTION_148	FOR_1
0x4006f34	            0x7419	                            je 0x4006f4f	      6756	ldlang.c	FUNCTION_148	FOR_1
0x4006f36	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      6758	ldlang.c	FUNCTION_148	FOR_1
0x4006f3a	        0x48895038	             mov qword [rax + 0x38], rdx	      6758	ldlang.c	FUNCTION_148	FOR_1
0x4006f3e	    0x48c740400000	               mov qword [rax + 0x40], 0	      6759	ldlang.c	FUNCTION_148	FOR_1
0x4006f46	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6756	ldlang.c	FUNCTION_148	FOR_1
0x4006f4a	          0x4885c0	                           test rax, rax	      6756	ldlang.c	FUNCTION_148	FOR_1
0x4006f4d	            0x75e7	                           jne 0x4006f36	      6756	ldlang.c	FUNCTION_148	FOR_1
0x4006f4f	    0x488b05000000	            mov rax, qword [0x04006f56] 	      6762	ldlang.c	FUNCTION_148	FOR_2
0x4006f56	          0x4885c0	                           test rax, rax	      6762	ldlang.c	FUNCTION_148	FOR_2
0x4006f59	            0x7410	                            je 0x4006f6b	      6762	ldlang.c	FUNCTION_148	FOR_2
0x4006f5b	    0x80a090000000	             and byte [rax + 0x90], 0xfc	      6767	ldlang.c	FUNCTION_148	FOR_2
0x4006f62	        0x488b4020	            mov rax, qword [rax + 0x20] 	      6764	ldlang.c	FUNCTION_148	FOR_2
0x4006f66	          0x4885c0	                           test rax, rax	      6762	ldlang.c	FUNCTION_148	FOR_2
0x4006f69	            0x75f0	                           jne 0x4006f5b	      6762	ldlang.c	FUNCTION_148	FOR_2
0x4006f6b	    0x488b05000000	            mov rax, qword [0x04006f72] 	      6770	ldlang.c	FUNCTION_148	FOR_3
0x4006f72	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      6770	ldlang.c	FUNCTION_148	FOR_3
0x4006f79	          0x4885c0	                           test rax, rax	      6770	ldlang.c	FUNCTION_148	FOR_3
0x4006f7c	            0x741f	                            je 0x4006f9d	      6770	ldlang.c	FUNCTION_148	FOR_3
0x4006f7e	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      6773	ldlang.c	FUNCTION_148	FOR_3
0x4006f82	        0x48895040	             mov qword [rax + 0x40], rdx	      6773	ldlang.c	FUNCTION_148	FOR_3
0x4006f86	        0xf6402108	               test byte [rax + 0x21], 8	      6774	ldlang.c	FUNCTION_148	FOR_3	IF_1
0x4006f8a	            0x7508	                           jne 0x4006f94	      6774	ldlang.c	FUNCTION_148	FOR_3	IF_1
0x4006f8c	    0x48c740380000	               mov qword [rax + 0x38], 0	      6775	ldlang.c	FUNCTION_148	FOR_3	IF_1
0x4006f94	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6770	ldlang.c	FUNCTION_148	FOR_3
0x4006f98	          0x4885c0	                           test rax, rax	      6770	ldlang.c	FUNCTION_148	FOR_3
0x4006f9b	            0x75e1	                           jne 0x4006f7e	      6770	ldlang.c	FUNCTION_148	FOR_3
0x4006f9d	            0xf3c3	                                     ret	      6770	ldlang.c	FUNCTION_148	FOR_3
lang_add_wild	IF,4:WHILE,0:FOR,1:DO,0:SWITCH,0:functions,0:CALL,2:ELSE,1	357
0x40073c9	            0x4157	                                push r15	      7433	ldlang.c	FUNCTION_164
0x40073cb	            0x4156	                                push r14	      7433	ldlang.c	FUNCTION_164
0x40073cd	            0x4155	                                push r13	      7433	ldlang.c	FUNCTION_164
0x40073cf	            0x4154	                                push r12	      7433	ldlang.c	FUNCTION_164
0x40073d1	              0x55	                                push rbp	      7433	ldlang.c	FUNCTION_164
0x40073d2	              0x53	                                push rbx	      7433	ldlang.c	FUNCTION_164
0x40073d3	        0x4883ec28	                           sub rsp, 0x28	      7433	ldlang.c	FUNCTION_164
0x40073d7	          0x4889fb	                            mov rbx, rdi	      7433	ldlang.c	FUNCTION_164
0x40073da	          0x4989f7	                            mov r15, rsi	      7433	ldlang.c	FUNCTION_164
0x40073dd	            0x89d5	                            mov ebp, edx	      7433	ldlang.c	FUNCTION_164
0x40073df	          0x4885f6	                           test rsi, rsi	      7438	ldlang.c	FUNCTION_164	FOR_1
0x40073e2	            0x7418	                            je 0x40073fc	      7438	ldlang.c	FUNCTION_164	FOR_1
0x40073e4	      0xba00000000	                              mov edx, 0	      7438	ldlang.c	FUNCTION_164	FOR_1
0x40073e9	            0xeb03	                           jmp 0x40073ee	      7438	ldlang.c	FUNCTION_164	FOR_1
0x40073eb	          0x4989c7	                            mov r15, rax	      7440	ldlang.c	FUNCTION_164	FOR_1
0x40073ee	          0x498b07	                    mov rax, qword [r15]	      7442	ldlang.c	FUNCTION_164	FOR_1
0x40073f1	          0x498917	                    mov qword [r15], rdx	      7443	ldlang.c	FUNCTION_164	FOR_1
0x40073f4	          0x4c89fa	                            mov rdx, r15	      7443	ldlang.c	FUNCTION_164	FOR_1
0x40073f7	          0x4885c0	                           test rax, rax	      7438	ldlang.c	FUNCTION_164	FOR_1
0x40073fa	            0x75ef	                           jne 0x40073eb	      7438	ldlang.c	FUNCTION_164	FOR_1
0x40073fc	          0x4885db	                           test rbx, rbx	      7446	ldlang.c	FUNCTION_164	IF_1
0x40073ff	     0xf8414040000	                            je 0x4007819	      7446	ldlang.c	FUNCTION_164	IF_1
0x4007405	          0x488b13	                    mov rdx, qword [rbx]	      7446	ldlang.c	FUNCTION_164	IF_1
0x4007408	          0x4885d2	                           test rdx, rdx	      7446	ldlang.c	FUNCTION_164	IF_1
0x400740b	     0xf84a6030000	                            je 0x40077b7	      7446	ldlang.c	FUNCTION_164	IF_1
0x4007411	          0x803a2a	                    cmp byte [rdx], 0x2a	      7448	ldlang.c	FUNCTION_164	IF_1	IF_2
0x4007414	            0x7506	                           jne 0x400741c	      7448	ldlang.c	FUNCTION_164	IF_1	IF_2
0x4007416	        0x807a0100	                   cmp byte [rdx + 1], 0	      7448	ldlang.c	FUNCTION_164	IF_1	IF_2
0x400741a	            0x7423	                            je 0x400743f	      7448	ldlang.c	FUNCTION_164	IF_1	IF_2
0x400741c	           0xfb602	                   movzx eax, byte [rdx]	      1114	string2.h	FUNCTION_240	WHILE_1
0x400741f	            0x84c0	                             test al, al	      1114	string2.h	FUNCTION_240	WHILE_1
0x4007421	            0x7453	                            je 0x4007476	      1114	string2.h	FUNCTION_240	WHILE_1
0x4007423	          0x83e82a	                           sub eax, 0x2a	      1114	string2.h	FUNCTION_240	WHILE_1
0x4007426	            0x3c31	                            cmp al, 0x31	      1114	string2.h	FUNCTION_240	WHILE_1
0x4007428	            0x7721	                            ja 0x400744b	      1114	string2.h	FUNCTION_240	WHILE_1
0x400742a	    0x48b901002000	             movabs rcx, 0x2000000200001	      1115	string2.h	FUNCTION_240	WHILE_1
0x4007434	        0x480fa3c1	                             bt rcx, rax	      1115	string2.h	FUNCTION_240	WHILE_1
0x4007438	            0x7311	                           jae 0x400744b	      1115	string2.h	FUNCTION_240	WHILE_1
0x400743a	      0xe978030000	                           jmp 0x40077b7	      1115	string2.h	FUNCTION_240	WHILE_1
0x400743f	    0x48c703000000	                      mov qword [rbx], 0	      7449	ldlang.c	FUNCTION_164	IF_1	IF_2
0x4007446	      0xe96c030000	                           jmp 0x40077b7	      7449	ldlang.c	FUNCTION_164	IF_1	IF_2
0x400744b	    0x48b901002000	             movabs rcx, 0x2000000200001	      1115	string2.h	FUNCTION_240	WHILE_1
0x4007455	        0x4883c201	                              add rdx, 1	      1116	string2.h	FUNCTION_240	WHILE_1
0x4007459	           0xfb602	                   movzx eax, byte [rdx]	      1114	string2.h	FUNCTION_240	WHILE_1
0x400745c	            0x84c0	                             test al, al	      1114	string2.h	FUNCTION_240	WHILE_1
0x400745e	            0x7416	                            je 0x4007476	      1114	string2.h	FUNCTION_240	WHILE_1
0x4007460	          0x83e82a	                           sub eax, 0x2a	      1114	string2.h	FUNCTION_240	WHILE_1
0x4007463	            0x3c31	                            cmp al, 0x31	      1114	string2.h	FUNCTION_240	WHILE_1
0x4007465	            0x77ee	                            ja 0x4007455	      1114	string2.h	FUNCTION_240	WHILE_1
0x4007467	        0x480fa3c1	                             bt rcx, rax	      1115	string2.h	FUNCTION_240	WHILE_1
0x400746b	            0x73e8	                           jae 0x4007455	      1115	string2.h	FUNCTION_240	WHILE_1
0x400746d	          0x4885d2	                           test rdx, rdx	      7450	ldlang.c	FUNCTION_164	IF_1	ELSE_1	IF_3
0x4007470	     0xf8541030000	                           jne 0x40077b7	      7450	ldlang.c	FUNCTION_164	IF_1	ELSE_1	IF_3
0x4007476	    0xc70500000000	               mov dword [0x04007480], 1	      7451	ldlang.c	FUNCTION_164	IF_1	ELSE_1	IF_3
0x4007480	      0xe932030000	                           jmp 0x40077b7	      7451	ldlang.c	FUNCTION_164	IF_1	ELSE_1	IF_3
0x4007485	        0x4d897e20	             mov qword [r14 + 0x20], r15	      7466	ldlang.c	FUNCTION_164
0x4007489	        0x41896e28	             mov dword [r14 + 0x28], ebp	      7467	ldlang.c	FUNCTION_164
0x400748d	    0x49c746300000	               mov qword [r14 + 0x30], 0	      1009	ldlang.c	FUNCTION_30
0x4007495	        0x498d4630	                   lea rax, [r14 + 0x30]	      1010	ldlang.c	FUNCTION_30
0x4007499	        0x49894638	             mov qword [r14 + 0x38], rax	      1010	ldlang.c	FUNCTION_30
0x400749d	    0x49c746480000	               mov qword [r14 + 0x48], 0	       788	ldlang.c	FUNCTION_25
0x40074a5	    0x49c746500000	               mov qword [r14 + 0x50], 0	       789	ldlang.c	FUNCTION_25
0x40074ad	    0x49c746580000	               mov qword [r14 + 0x58], 0	       790	ldlang.c	FUNCTION_25
0x40074b5	    0x49c746600000	               mov qword [r14 + 0x60], 0	       791	ldlang.c	FUNCTION_25
0x40074bd	    0x49c746680000	               mov qword [r14 + 0x68], 0	       792	ldlang.c	FUNCTION_25
0x40074c5	    0x49c746700000	               mov qword [r14 + 0x70], 0	       793	ldlang.c	FUNCTION_25
0x40074cd	          0x4d85ff	                           test r15, r15	       801	ldlang.c	FUNCTION_25	FOR_1
0x40074d0	     0xf8489040000	                            je 0x400795f	       801	ldlang.c	FUNCTION_25	FOR_1
0x40074d6	        0x498b5708	                mov rdx, qword [r15 + 8]	       804	ldlang.c	FUNCTION_25	FOR_1	IF_1
0x40074da	          0x4885d2	                           test rdx, rdx	       804	ldlang.c	FUNCTION_25	FOR_1	IF_1
0x40074dd	     0xf847c040000	                            je 0x400795f	       804	ldlang.c	FUNCTION_25	FOR_1	IF_1
0x40074e3	          0x4989d0	                             mov r8, rdx	       804	ldlang.c	FUNCTION_25	FOR_1	IF_1
0x40074e6	          0x4d89f9	                             mov r9, r15	       804	ldlang.c	FUNCTION_25	FOR_1	IF_1
0x40074e9	    0xc74424040000	                  mov dword [rsp + 4], 0	       804	ldlang.c	FUNCTION_25	FOR_1	IF_1
0x40074f1	    0x41bd01000000	                             mov r13d, 1	       804	ldlang.c	FUNCTION_25	FOR_1	IF_1
0x40074f7	    0x48bf01002000	             movabs rdi, 0x2000000200001	      1115	string2.h	FUNCTION_240	WHILE_1
0x4007501	            0xeb14	                           jmp 0x4007517	      1115	string2.h	FUNCTION_240	WHILE_1
0x4007503	        0x4183c501	                             add r13d, 1	       803	ldlang.c	FUNCTION_25	FOR_1
0x4007507	        0x498b5108	                 mov rdx, qword [r9 + 8]	       804	ldlang.c	FUNCTION_25	FOR_1	IF_1
0x400750b	          0x4885d2	                           test rdx, rdx	       804	ldlang.c	FUNCTION_25	FOR_1	IF_1
0x400750e	     0xf844b040000	                            je 0x400795f	       804	ldlang.c	FUNCTION_25	FOR_1	IF_1
0x4007514	          0x4989d0	                             mov r8, rdx	       804	ldlang.c	FUNCTION_25	FOR_1	IF_1
0x4007517	           0xfb602	                   movzx eax, byte [rdx]	      1114	string2.h	FUNCTION_240	WHILE_1
0x400751a	            0x84c0	                             test al, al	      1114	string2.h	FUNCTION_240	WHILE_1
0x400751c	     0xf8492000000	                            je 0x40075b4	      1114	string2.h	FUNCTION_240	WHILE_1
0x4007522	          0x83e82a	                           sub eax, 0x2a	      1114	string2.h	FUNCTION_240	WHILE_1
0x4007525	            0x3c31	                            cmp al, 0x31	      1114	string2.h	FUNCTION_240	WHILE_1
0x4007527	            0x770a	                            ja 0x4007533	      1114	string2.h	FUNCTION_240	WHILE_1
0x4007529	        0x480fa3c7	                             bt rdi, rax	      1115	string2.h	FUNCTION_240	WHILE_1
0x400752d	     0xf8223030000	                            jb 0x4007856	      1115	string2.h	FUNCTION_240	WHILE_1
0x4007533	        0x4883c201	                              add rdx, 1	      1116	string2.h	FUNCTION_240	WHILE_1
0x4007537	           0xfb602	                   movzx eax, byte [rdx]	      1114	string2.h	FUNCTION_240	WHILE_1
0x400753a	            0x84c0	                             test al, al	      1114	string2.h	FUNCTION_240	WHILE_1
0x400753c	            0x7476	                            je 0x40075b4	      1114	string2.h	FUNCTION_240	WHILE_1
0x400753e	          0x83e82a	                           sub eax, 0x2a	      1114	string2.h	FUNCTION_240	WHILE_1
0x4007541	            0x3c31	                            cmp al, 0x31	      1114	string2.h	FUNCTION_240	WHILE_1
0x4007543	            0x77ee	                            ja 0x4007533	      1114	string2.h	FUNCTION_240	WHILE_1
0x4007545	        0x480fa3c7	                             bt rdi, rax	      1115	string2.h	FUNCTION_240	WHILE_1
0x4007549	            0x73e8	                           jae 0x4007533	      1115	string2.h	FUNCTION_240	WHILE_1
0x400754b	      0xe906030000	                           jmp 0x4007856	      1115	string2.h	FUNCTION_240	WHILE_1
0x4007550	        0x480fa3c7	                             bt rdi, rax	       975	string2.h	FUNCTION_235	WHILE_1
0x4007554	     0xf8205040000	                            jb 0x400795f	       975	string2.h	FUNCTION_235	WHILE_1
0x400755a	      0xb800000000	                              mov eax, 0	       975	string2.h	FUNCTION_235	WHILE_1
0x400755f	            0xeb0f	                           jmp 0x4007570	       975	string2.h	FUNCTION_235	WHILE_1
0x4007561	          0x4889f0	                            mov rax, rsi	       976	string2.h	FUNCTION_235	WHILE_1
0x4007564	            0xeb0a	                           jmp 0x4007570	       976	string2.h	FUNCTION_235	WHILE_1
0x4007566	          0x4889f0	                            mov rax, rsi	       976	string2.h	FUNCTION_235	WHILE_1
0x4007569	            0xeb05	                           jmp 0x4007570	       976	string2.h	FUNCTION_235	WHILE_1
0x400756b	      0xb800000000	                              mov eax, 0	       974	string2.h	FUNCTION_235	WHILE_1
0x4007570	        0x488d7001	                      lea rsi, [rax + 1]	       976	string2.h	FUNCTION_235	WHILE_1
0x4007574	    0x410fb6540001	         movzx edx, byte [r8 + rax + 1] 	       974	string2.h	FUNCTION_235	WHILE_1
0x400757a	            0x84d2	                             test dl, dl	       974	string2.h	FUNCTION_235	WHILE_1
0x400757c	     0xf84dd030000	                            je 0x400795f	       974	string2.h	FUNCTION_235	WHILE_1
0x4007582	          0x8d4ad6	                   lea ecx, [rdx - 0x2a]	       974	string2.h	FUNCTION_235	WHILE_1
0x4007585	          0x80f931	                            cmp cl, 0x31	       974	string2.h	FUNCTION_235	WHILE_1
0x4007588	            0x77d7	                            ja 0x4007561	       974	string2.h	FUNCTION_235	WHILE_1
0x400758a	        0x480fa3cf	                             bt rdi, rcx	       975	string2.h	FUNCTION_235	WHILE_1
0x400758e	            0x73d6	                           jae 0x4007566	       975	string2.h	FUNCTION_235	WHILE_1
0x4007590	          0x80fa2a	                            cmp dl, 0x2a	       366	ldlang.c	FUNCTION_11
0x4007593	     0xf85c6030000	                           jne 0x400795f	       366	ldlang.c	FUNCTION_11
0x4007599	        0x4883fe03	                              cmp rsi, 3	       366	ldlang.c	FUNCTION_11
0x400759d	     0xf86bc030000	                           jbe 0x400795f	       366	ldlang.c	FUNCTION_11
0x40075a3	    0x41807c000200	              cmp byte [r8 + rax + 2], 0	       366	ldlang.c	FUNCTION_11
0x40075a9	     0xf85b0030000	                           jne 0x400795f	       366	ldlang.c	FUNCTION_11
0x40075af	      0x8344240401	                  add dword [rsp + 4], 1	       808	ldlang.c	FUNCTION_25	FOR_1	IF_2
0x40075b4	          0x4d8b09	                      mov r9, qword [r9]	       801	ldlang.c	FUNCTION_25	FOR_1
0x40075b7	          0x4d85c9	                             test r9, r9	       801	ldlang.c	FUNCTION_25	FOR_1
0x40075ba	     0xf8543ffffff	                           jne 0x4007503	       801	ldlang.c	FUNCTION_25	FOR_1
0x40075c0	      0xe99f020000	                           jmp 0x4007864	       801	ldlang.c	FUNCTION_25	FOR_1
0x40075c5	          0x4c8b38	                    mov r15, qword [rax]	       824	ldlang.c	FUNCTION_25	FOR_2	FOR_3
0x40075c8	          0x4d85ff	                           test r15, r15	       824	ldlang.c	FUNCTION_25	FOR_2	FOR_3
0x40075cb	     0xf84ec020000	                            je 0x40078bd	       824	ldlang.c	FUNCTION_25	FOR_2	FOR_3
0x40075d1	        0x488b6808	                mov rbp, qword [rax + 8]	       826	ldlang.c	FUNCTION_25	FOR_2	FOR_3	IF_5	CALL_2
0x40075d5	      0x440fb67500	                  movzx r14d, byte [rbp]	       974	string2.h	FUNCTION_235	WHILE_1
0x40075da	        0x418d4ed6	                   lea ecx, [r14 - 0x2a]	       975	string2.h	FUNCTION_235	WHILE_1
0x40075de	          0x4989dd	                            mov r13, rbx	       975	string2.h	FUNCTION_235	WHILE_1
0x40075e1	          0x49d3ed	                             shr r13, cl	       975	string2.h	FUNCTION_235	WHILE_1
0x40075e4	        0x4983f501	                              xor r13, 1	       975	string2.h	FUNCTION_235	WHILE_1
0x40075e8	        0x4183e501	                             and r13d, 1	       975	string2.h	FUNCTION_235	WHILE_1
0x40075ec	          0x80f931	                            cmp cl, 0x31	       975	string2.h	FUNCTION_235	WHILE_1
0x40075ef	      0xb801000000	                              mov eax, 1	       975	string2.h	FUNCTION_235	WHILE_1
0x40075f4	        0x440f47e8	                         cmova r13d, eax	       975	string2.h	FUNCTION_235	WHILE_1
0x40075f8	          0x4d89fc	                            mov r12, r15	       975	string2.h	FUNCTION_235	WHILE_1
0x40075fb	      0x448874240b	              mov byte [rsp + 0xb], r14b	       974	string2.h	FUNCTION_235	WHILE_1
0x4007600	          0x4584f6	                         test r14b, r14b	       974	string2.h	FUNCTION_235	WHILE_1
0x4007603	            0x7429	                            je 0x400762e	       974	string2.h	FUNCTION_235	WHILE_1
0x4007605	          0x4584ed	                         test r13b, r13b	       975	string2.h	FUNCTION_235	WHILE_1
0x4007608	            0x7431	                            je 0x400763b	       975	string2.h	FUNCTION_235	WHILE_1
0x400760a	      0xba00000000	                              mov edx, 0	       975	string2.h	FUNCTION_235	WHILE_1
0x400760f	        0x4883c201	                              add rdx, 1	       976	string2.h	FUNCTION_235	WHILE_1
0x4007613	    0x440fb6441500	             movzx r8d, byte [rbp + rdx]	       974	string2.h	FUNCTION_235	WHILE_1
0x4007619	          0x4584c0	                           test r8b, r8b	       974	string2.h	FUNCTION_235	WHILE_1
0x400761c	            0x7428	                            je 0x4007646	       974	string2.h	FUNCTION_235	WHILE_1
0x400761e	        0x418d40d6	                    lea eax, [r8 - 0x2a]	       975	string2.h	FUNCTION_235	WHILE_1
0x4007622	            0x3c31	                            cmp al, 0x31	       975	string2.h	FUNCTION_235	WHILE_1
0x4007624	            0x77e9	                            ja 0x400760f	       975	string2.h	FUNCTION_235	WHILE_1
0x4007626	        0x480fa3c3	                             bt rbx, rax	       975	string2.h	FUNCTION_235	WHILE_1
0x400762a	            0x73e3	                           jae 0x400760f	       975	string2.h	FUNCTION_235	WHILE_1
0x400762c	            0xeb18	                           jmp 0x4007646	       975	string2.h	FUNCTION_235	WHILE_1
0x400762e	    0x440fb644240b	            movzx r8d, byte [rsp + 0xb] 	       974	string2.h	FUNCTION_235	WHILE_1
0x4007634	      0xba00000000	                              mov edx, 0	       973	string2.h	FUNCTION_235
0x4007639	            0xeb0b	                           jmp 0x4007646	       973	string2.h	FUNCTION_235
0x400763b	    0x440fb644240b	            movzx r8d, byte [rsp + 0xb] 	       974	string2.h	FUNCTION_235	WHILE_1
0x4007641	      0xba00000000	                              mov edx, 0	       973	string2.h	FUNCTION_235
0x4007646	      0x498b742408	                mov rsi, qword [r12 + 8]	       826	ldlang.c	FUNCTION_25	FOR_2	FOR_3	IF_5	CALL_2
0x400764b	           0xfb60e	                   movzx ecx, byte [rsi]	       974	string2.h	FUNCTION_235	WHILE_1
0x400764e	            0x84c9	                             test cl, cl	       974	string2.h	FUNCTION_235	WHILE_1
0x4007650	     0xf8442020000	                            je 0x4007898	       974	string2.h	FUNCTION_235	WHILE_1
0x4007656	          0x8d41d6	                   lea eax, [rcx - 0x2a]	       975	string2.h	FUNCTION_235	WHILE_1
0x4007659	            0x3c31	                            cmp al, 0x31	       975	string2.h	FUNCTION_235	WHILE_1
0x400765b	            0x7711	                            ja 0x400766e	       975	string2.h	FUNCTION_235	WHILE_1
0x400765d	        0x480fa3c3	                             bt rbx, rax	       975	string2.h	FUNCTION_235	WHILE_1
0x4007661	     0xf8243020000	                            jb 0x40078aa	       975	string2.h	FUNCTION_235	WHILE_1
0x4007667	      0xb800000000	                              mov eax, 0	       975	string2.h	FUNCTION_235	WHILE_1
0x400766c	            0xeb05	                           jmp 0x4007673	       975	string2.h	FUNCTION_235	WHILE_1
0x400766e	      0xb800000000	                              mov eax, 0	       975	string2.h	FUNCTION_235	WHILE_1
0x4007673	        0x4883c001	                              add rax, 1	       976	string2.h	FUNCTION_235	WHILE_1
0x4007677	         0xfb60c06	             movzx ecx, byte [rsi + rax]	       974	string2.h	FUNCTION_235	WHILE_1
0x400767b	            0x84c9	                             test cl, cl	       974	string2.h	FUNCTION_235	WHILE_1
0x400767d	     0xf841a020000	                            je 0x400789d	       974	string2.h	FUNCTION_235	WHILE_1
0x4007683	          0x8d79d6	                   lea edi, [rcx - 0x2a]	       975	string2.h	FUNCTION_235	WHILE_1
0x4007686	        0x4080ff31	                           cmp dil, 0x31	       975	string2.h	FUNCTION_235	WHILE_1
0x400768a	            0x77e7	                            ja 0x4007673	       975	string2.h	FUNCTION_235	WHILE_1
0x400768c	        0x480fa3fb	                             bt rbx, rdi	       975	string2.h	FUNCTION_235	WHILE_1
0x4007690	            0x73e1	                           jae 0x4007673	       975	string2.h	FUNCTION_235	WHILE_1
0x4007692	      0xe918020000	                           jmp 0x40078af	       975	string2.h	FUNCTION_235	WHILE_1
0x4007697	        0x4883c201	                              add rdx, 1	       767	ldlang.c	FUNCTION_24	IF_1
0x400769b	            0x84c9	                             test cl, cl	       768	ldlang.c	FUNCTION_24	IF_2
0x400769d	            0x7504	                           jne 0x40076a3	       768	ldlang.c	FUNCTION_24	IF_2
0x400769f	        0x4883c001	                              add rax, 1	       769	ldlang.c	FUNCTION_24	IF_2
0x40076a3	          0x4839d0	                            cmp rax, rdx	       773	ldlang.c	FUNCTION_24	CALL_1
0x40076a6	        0x480f46d0	                         cmovbe rdx, rax	       773	ldlang.c	FUNCTION_24	CALL_1
0x40076aa	          0x4889ef	                            mov rdi, rbp	       773	ldlang.c	FUNCTION_24	CALL_1
0x40076ad	      0xe800000000	                          call 0x40076b2	       773	ldlang.c	FUNCTION_24	CALL_1
0x40076b2	            0x85c0	                           test eax, eax	       826	ldlang.c	FUNCTION_25	FOR_2	FOR_3	IF_5	CALL_2
0x40076b4	     0xf84a5020000	                            je 0x400795f	       826	ldlang.c	FUNCTION_25	FOR_2	FOR_3	IF_5	CALL_2
0x40076ba	        0x4d8b2424	                    mov r12, qword [r12]	       824	ldlang.c	FUNCTION_25	FOR_2	FOR_3
0x40076be	          0x4d85e4	                           test r12, r12	       824	ldlang.c	FUNCTION_25	FOR_2	FOR_3
0x40076c1	     0xf8539ffffff	                           jne 0x4007600	       824	ldlang.c	FUNCTION_25	FOR_2	FOR_3
0x40076c7	          0x4c89f8	                            mov rax, r15	       821	ldlang.c	FUNCTION_25	FOR_2
0x40076ca	      0xe9f6feffff	                           jmp 0x40075c5	       821	ldlang.c	FUNCTION_25	FOR_2
0x40076cf	    0x49c746480000	               mov qword [r14 + 0x48], 0	       835	ldlang.c	FUNCTION_25	SWITCH_1
0x40076d7	      0xe96c020000	                           jmp 0x4007948	       835	ldlang.c	FUNCTION_25	SWITCH_1
0x40076dc	    0x49c746480000	               mov qword [r14 + 0x48], 0	       838	ldlang.c	FUNCTION_25	SWITCH_1
0x40076e4	      0xe95f020000	                           jmp 0x4007948	       838	ldlang.c	FUNCTION_25	SWITCH_1
0x40076e9	    0x49c746480000	               mov qword [r14 + 0x48], 0	       841	ldlang.c	FUNCTION_25	SWITCH_1
0x40076f1	      0xe952020000	                           jmp 0x4007948	       841	ldlang.c	FUNCTION_25	SWITCH_1
0x40076f6	    0x49c746480000	               mov qword [r14 + 0x48], 0	       844	ldlang.c	FUNCTION_25	SWITCH_1
0x40076fe	      0xe945020000	                           jmp 0x4007948	       844	ldlang.c	FUNCTION_25	SWITCH_1
0x4007703	    0x49c746480000	               mov qword [r14 + 0x48], 0	       847	ldlang.c	FUNCTION_25	SWITCH_1
0x400770b	      0xe938020000	                           jmp 0x4007948	       847	ldlang.c	FUNCTION_25	SWITCH_1
0x4007710	        0x488b5708	                mov rdx, qword [rdi + 8]	       860	ldlang.c	FUNCTION_25	FOR_4	IF_6
0x4007714	           0xfb602	                   movzx eax, byte [rdx]	      1114	string2.h	FUNCTION_240	WHILE_1
0x4007717	            0x84c0	                             test al, al	      1114	string2.h	FUNCTION_240	WHILE_1
0x4007719	            0x742e	                            je 0x4007749	      1114	string2.h	FUNCTION_240	WHILE_1
0x400771b	          0x83e82a	                           sub eax, 0x2a	      1114	string2.h	FUNCTION_240	WHILE_1
0x400771e	            0x3c31	                            cmp al, 0x31	      1114	string2.h	FUNCTION_240	WHILE_1
0x4007720	            0x770a	                            ja 0x400772c	      1114	string2.h	FUNCTION_240	WHILE_1
0x4007722	        0x480fa3c1	                             bt rcx, rax	      1115	string2.h	FUNCTION_240	WHILE_1
0x4007726	     0xf82ec010000	                            jb 0x4007918	      1115	string2.h	FUNCTION_240	WHILE_1
0x400772c	        0x4883c201	                              add rdx, 1	      1116	string2.h	FUNCTION_240	WHILE_1
0x4007730	           0xfb602	                   movzx eax, byte [rdx]	      1114	string2.h	FUNCTION_240	WHILE_1
0x4007733	            0x84c0	                             test al, al	      1114	string2.h	FUNCTION_240	WHILE_1
0x4007735	            0x7412	                            je 0x4007749	      1114	string2.h	FUNCTION_240	WHILE_1
0x4007737	          0x83e82a	                           sub eax, 0x2a	      1114	string2.h	FUNCTION_240	WHILE_1
0x400773a	            0x3c31	                            cmp al, 0x31	      1114	string2.h	FUNCTION_240	WHILE_1
0x400773c	            0x77ee	                            ja 0x400772c	      1114	string2.h	FUNCTION_240	WHILE_1
0x400773e	        0x480fa3c1	                             bt rcx, rax	      1115	string2.h	FUNCTION_240	WHILE_1
0x4007742	            0x73e8	                           jae 0x400772c	      1115	string2.h	FUNCTION_240	WHILE_1
0x4007744	      0xe9cf010000	                           jmp 0x4007918	      1115	string2.h	FUNCTION_240	WHILE_1
0x4007749	          0x4863c6	                         movsxd rax, esi	       861	ldlang.c	FUNCTION_25	FOR_4	IF_6
0x400774c	      0x49897cc650	     mov qword [r14 + rax*8 + 0x50], rdi	       861	ldlang.c	FUNCTION_25	FOR_4	IF_6
0x4007751	          0x8d7601	                      lea esi, [rsi + 1]	       861	ldlang.c	FUNCTION_25	FOR_4	IF_6
0x4007754	          0x488b3f	                    mov rdi, qword [rdi]	       859	ldlang.c	FUNCTION_25	FOR_4
0x4007757	          0x4885ff	                           test rdi, rdi	       859	ldlang.c	FUNCTION_25	FOR_4
0x400775a	            0x75b4	                           jne 0x4007710	       859	ldlang.c	FUNCTION_25	FOR_4
0x400775c	    0x48b901002000	             movabs rcx, 0x2000000200001	      1115	string2.h	FUNCTION_240	WHILE_1
0x4007766	        0x498b5708	                mov rdx, qword [r15 + 8]	       863	ldlang.c	FUNCTION_25	FOR_5	IF_7
0x400776a	           0xfb602	                   movzx eax, byte [rdx]	      1114	string2.h	FUNCTION_240	WHILE_1
0x400776d	            0x84c0	                             test al, al	      1114	string2.h	FUNCTION_240	WHILE_1
0x400776f	            0x7439	                            je 0x40077aa	      1114	string2.h	FUNCTION_240	WHILE_1
0x4007771	          0x83e82a	                           sub eax, 0x2a	      1114	string2.h	FUNCTION_240	WHILE_1
0x4007774	            0x3c31	                            cmp al, 0x31	      1114	string2.h	FUNCTION_240	WHILE_1
0x4007776	            0x770a	                            ja 0x4007782	      1114	string2.h	FUNCTION_240	WHILE_1
0x4007778	        0x480fa3c1	                             bt rcx, rax	      1115	string2.h	FUNCTION_240	WHILE_1
0x400777c	     0xf82a4010000	                            jb 0x4007926	      1115	string2.h	FUNCTION_240	WHILE_1
0x4007782	        0x4883c201	                              add rdx, 1	      1116	string2.h	FUNCTION_240	WHILE_1
0x4007786	           0xfb602	                   movzx eax, byte [rdx]	      1114	string2.h	FUNCTION_240	WHILE_1
0x4007789	            0x84c0	                             test al, al	      1114	string2.h	FUNCTION_240	WHILE_1
0x400778b	            0x741d	                            je 0x40077aa	      1114	string2.h	FUNCTION_240	WHILE_1
0x400778d	          0x83e82a	                           sub eax, 0x2a	      1114	string2.h	FUNCTION_240	WHILE_1
0x4007790	            0x3c31	                            cmp al, 0x31	      1114	string2.h	FUNCTION_240	WHILE_1
0x4007792	            0x77ee	                            ja 0x4007782	      1114	string2.h	FUNCTION_240	WHILE_1
0x4007794	        0x480fa3c1	                             bt rcx, rax	      1115	string2.h	FUNCTION_240	WHILE_1
0x4007798	            0x73e8	                           jae 0x4007782	      1115	string2.h	FUNCTION_240	WHILE_1
0x400779a	      0xe987010000	                           jmp 0x4007926	      1115	string2.h	FUNCTION_240	WHILE_1
0x400779f	          0x4863c6	                         movsxd rax, esi	       864	ldlang.c	FUNCTION_25	FOR_5	IF_7
0x40077a2	      0x4d897cc650	     mov qword [r14 + rax*8 + 0x50], r15	       864	ldlang.c	FUNCTION_25	FOR_5	IF_7
0x40077a7	          0x8d7601	                      lea esi, [rsi + 1]	       864	ldlang.c	FUNCTION_25	FOR_5	IF_7
0x40077aa	          0x4d8b3f	                    mov r15, qword [r15]	       862	ldlang.c	FUNCTION_25	FOR_5
0x40077ad	          0x4d85ff	                           test r15, r15	       862	ldlang.c	FUNCTION_25	FOR_5
0x40077b0	            0x75b4	                           jne 0x4007766	       862	ldlang.c	FUNCTION_25	FOR_5
0x40077b2	      0xe9a8010000	                           jmp 0x400795f	       862	ldlang.c	FUNCTION_25	FOR_5
0x40077b7	    0x488b15000000	            mov rdx, qword [0x040077be] 	      7454	ldlang.c	FUNCTION_164
0x40077be	      0xbe80000000	                           mov esi, 0x80	      7454	ldlang.c	FUNCTION_164
0x40077c3	      0xbf04000000	                              mov edi, 4	      7454	ldlang.c	FUNCTION_164
0x40077c8	      0xe8fbb9ffff	                  call sym.new_statement	      7454	ldlang.c	FUNCTION_164
0x40077cd	          0x4989c6	                            mov r14, rax	      7454	ldlang.c	FUNCTION_164
0x40077d0	    0x48c740100000	               mov qword [rax + 0x10], 0	      7455	ldlang.c	FUNCTION_164
0x40077d8	    0xc74018000000	               mov dword [rax + 0x18], 0	      7456	ldlang.c	FUNCTION_164
0x40077df	    0x48c740780000	               mov qword [rax + 0x78], 0	      7457	ldlang.c	FUNCTION_164
0x40077e7	    0x48c740400000	               mov qword [rax + 0x40], 0	      7458	ldlang.c	FUNCTION_164
0x40077ef	          0x488b03	                    mov rax, qword [rbx]	      7461	ldlang.c	FUNCTION_164	IF_4
0x40077f2	        0x49894610	             mov qword [r14 + 0x10], rax	      7461	ldlang.c	FUNCTION_164	IF_4
0x40077f6	        0x837b1001	               cmp dword [rbx + 0x10], 1	      7462	ldlang.c	FUNCTION_164	IF_4
0x40077fa	           0xf94c0	                                 sete al	      7462	ldlang.c	FUNCTION_164	IF_4
0x40077fd	           0xfb6c0	                           movzx eax, al	      7462	ldlang.c	FUNCTION_164	IF_4
0x4007800	        0x41894618	             mov dword [r14 + 0x18], eax	      7462	ldlang.c	FUNCTION_164	IF_4
0x4007804	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      7463	ldlang.c	FUNCTION_164	IF_4
0x4007808	        0x49894678	             mov qword [r14 + 0x78], rax	      7463	ldlang.c	FUNCTION_164	IF_4
0x400780c	        0x488b4308	                mov rax, qword [rbx + 8]	      7464	ldlang.c	FUNCTION_164	IF_4
0x4007810	        0x49894640	             mov qword [r14 + 0x40], rax	      7464	ldlang.c	FUNCTION_164	IF_4
0x4007814	      0xe96cfcffff	                           jmp 0x4007485	      7464	ldlang.c	FUNCTION_164	IF_4
0x4007819	    0x488b15000000	            mov rdx, qword [0x04007820] 	      7454	ldlang.c	FUNCTION_164
0x4007820	      0xbe80000000	                           mov esi, 0x80	      7454	ldlang.c	FUNCTION_164
0x4007825	      0xbf04000000	                              mov edi, 4	      7454	ldlang.c	FUNCTION_164
0x400782a	      0xe899b9ffff	                  call sym.new_statement	      7454	ldlang.c	FUNCTION_164
0x400782f	          0x4989c6	                            mov r14, rax	      7454	ldlang.c	FUNCTION_164
0x4007832	    0x48c740100000	               mov qword [rax + 0x10], 0	      7455	ldlang.c	FUNCTION_164
0x400783a	    0xc74018000000	               mov dword [rax + 0x18], 0	      7456	ldlang.c	FUNCTION_164
0x4007841	    0x48c740780000	               mov qword [rax + 0x78], 0	      7457	ldlang.c	FUNCTION_164
0x4007849	    0x48c740400000	               mov qword [rax + 0x40], 0	      7458	ldlang.c	FUNCTION_164
0x4007851	      0xe92ffcffff	                           jmp 0x4007485	      7458	ldlang.c	FUNCTION_164
0x4007856	          0x4885d2	                           test rdx, rdx	       806	ldlang.c	FUNCTION_25	FOR_1	IF_2
0x4007859	     0xf85d5000000	                           jne 0x4007934	       806	ldlang.c	FUNCTION_25	FOR_1	IF_2
0x400785f	      0xe950fdffff	                           jmp 0x40075b4	       806	ldlang.c	FUNCTION_25	FOR_1	IF_2
0x4007864	          0x4585ed	                         test r13d, r13d	       817	ldlang.c	FUNCTION_25	IF_4
0x4007867	     0xf84f2000000	                            je 0x400795f	       817	ldlang.c	FUNCTION_25	IF_4
0x400786d	        0x4183fd04	                             cmp r13d, 4	       817	ldlang.c	FUNCTION_25	IF_4
0x4007871	     0xf8fe8000000	                            jg 0x400795f	       817	ldlang.c	FUNCTION_25	IF_4
0x4007877	          0x4c89f8	                            mov rax, r15	       817	ldlang.c	FUNCTION_25	IF_4
0x400787a	    0x48bb01002000	             movabs rbx, 0x2000000200001	       817	ldlang.c	FUNCTION_25	IF_4
0x4007884	      0x44896c240c	             mov dword [rsp + 0xc], r13d	       817	ldlang.c	FUNCTION_25	IF_4
0x4007889	      0x4c89742410	             mov qword [rsp + 0x10], r14	       817	ldlang.c	FUNCTION_25	IF_4
0x400788e	      0x4c897c2418	             mov qword [rsp + 0x18], r15	       817	ldlang.c	FUNCTION_25	IF_4
0x4007893	      0xe92dfdffff	                           jmp 0x40075c5	       817	ldlang.c	FUNCTION_25	IF_4
0x4007898	      0xb800000000	                              mov eax, 0	       974	string2.h	FUNCTION_235	WHILE_1
0x400789d	        0x4180f801	                              cmp r8b, 1	       767	ldlang.c	FUNCTION_24	IF_1
0x40078a1	        0x4883d200	                              adc rdx, 0	       767	ldlang.c	FUNCTION_24	IF_1
0x40078a5	      0xe9f5fdffff	                           jmp 0x400769f	       767	ldlang.c	FUNCTION_24	IF_1
0x40078aa	      0xb800000000	                              mov eax, 0	       975	string2.h	FUNCTION_235	WHILE_1
0x40078af	          0x4584c0	                           test r8b, r8b	       766	ldlang.c	FUNCTION_24	IF_1
0x40078b2	     0xf85ebfdffff	                           jne 0x40076a3	       766	ldlang.c	FUNCTION_24	IF_1
0x40078b8	      0xe9dafdffff	                           jmp 0x4007697	       766	ldlang.c	FUNCTION_24	IF_1
0x40078bd	      0x448b6c240c	            mov r13d, dword [rsp + 0xc] 	       766	ldlang.c	FUNCTION_24	IF_1
0x40078c2	      0x4c8b742410	            mov r14, qword [rsp + 0x10] 	       766	ldlang.c	FUNCTION_24	IF_1
0x40078c7	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	       766	ldlang.c	FUNCTION_24	IF_1
0x40078cc	          0x4489e8	                           mov eax, r13d	       832	ldlang.c	FUNCTION_25	SWITCH_1
0x40078cf	          0xc1e008	                              shl eax, 8	       832	ldlang.c	FUNCTION_25	SWITCH_1
0x40078d2	         0x3442404	                add eax, dword [rsp + 4]	       832	ldlang.c	FUNCTION_25	SWITCH_1
0x40078d6	      0x3d01020000	                          cmp eax, 0x201	       832	ldlang.c	FUNCTION_25	SWITCH_1
0x40078db	     0xf8408feffff	                            je 0x40076e9	       832	ldlang.c	FUNCTION_25	SWITCH_1
0x40078e1	      0x3d01020000	                          cmp eax, 0x201	       832	ldlang.c	FUNCTION_25	SWITCH_1
0x40078e6	            0x7f18	                            jg 0x4007900	       832	ldlang.c	FUNCTION_25	SWITCH_1
0x40078e8	      0x3d00010000	                          cmp eax, 0x100	       832	ldlang.c	FUNCTION_25	SWITCH_1
0x40078ed	     0xf84dcfdffff	                            je 0x40076cf	       832	ldlang.c	FUNCTION_25	SWITCH_1
0x40078f3	      0x3d01010000	                          cmp eax, 0x101	       832	ldlang.c	FUNCTION_25	SWITCH_1
0x40078f8	     0xf84defdffff	                            je 0x40076dc	       832	ldlang.c	FUNCTION_25	SWITCH_1
0x40078fe	            0xeb5f	                           jmp 0x400795f	       832	ldlang.c	FUNCTION_25	SWITCH_1
0x4007900	      0x3d02030000	                          cmp eax, 0x302	       832	ldlang.c	FUNCTION_25	SWITCH_1
0x4007905	     0xf84ebfdffff	                            je 0x40076f6	       832	ldlang.c	FUNCTION_25	SWITCH_1
0x400790b	      0x3d02040000	                          cmp eax, 0x402	       832	ldlang.c	FUNCTION_25	SWITCH_1
0x4007910	     0xf84edfdffff	                            je 0x4007703	       832	ldlang.c	FUNCTION_25	SWITCH_1
0x4007916	            0xeb47	                           jmp 0x400795f	       832	ldlang.c	FUNCTION_25	SWITCH_1
0x4007918	          0x4885d2	                           test rdx, rdx	       860	ldlang.c	FUNCTION_25	FOR_4	IF_6
0x400791b	     0xf8533feffff	                           jne 0x4007754	       860	ldlang.c	FUNCTION_25	FOR_4	IF_6
0x4007921	      0xe923feffff	                           jmp 0x4007749	       860	ldlang.c	FUNCTION_25	FOR_4	IF_6
0x4007926	          0x4885d2	                           test rdx, rdx	       863	ldlang.c	FUNCTION_25	FOR_5	IF_7
0x4007929	     0xf8570feffff	                           jne 0x400779f	       863	ldlang.c	FUNCTION_25	FOR_5	IF_7
0x400792f	      0xe976feffff	                           jmp 0x40077aa	       863	ldlang.c	FUNCTION_25	FOR_5	IF_7
0x4007934	        0x410fb600	                    movzx eax, byte [r8]	       974	string2.h	FUNCTION_235	WHILE_1
0x4007938	          0x83e82a	                           sub eax, 0x2a	       974	string2.h	FUNCTION_235	WHILE_1
0x400793b	            0x3c31	                            cmp al, 0x31	       974	string2.h	FUNCTION_235	WHILE_1
0x400793d	     0xf8728fcffff	                            ja 0x400756b	       974	string2.h	FUNCTION_235	WHILE_1
0x4007943	      0xe908fcffff	                           jmp 0x4007550	       974	string2.h	FUNCTION_235	WHILE_1
0x4007948	          0x4c89ff	                            mov rdi, r15	       975	string2.h	FUNCTION_235	WHILE_1
0x400794b	      0xbe00000000	                              mov esi, 0	       975	string2.h	FUNCTION_235	WHILE_1
0x4007950	    0x48b901002000	             movabs rcx, 0x2000000200001	      1115	string2.h	FUNCTION_240	WHILE_1
0x400795a	      0xe9b1fdffff	                           jmp 0x4007710	      1115	string2.h	FUNCTION_240	WHILE_1
0x400795f	        0x4883c428	                           add rsp, 0x28	      7470	ldlang.c	FUNCTION_164
0x4007963	              0x5b	                                 pop rbx	      7470	ldlang.c	FUNCTION_164
0x4007964	              0x5d	                                 pop rbp	      7470	ldlang.c	FUNCTION_164
0x4007965	            0x415c	                                 pop r12	      7470	ldlang.c	FUNCTION_164
0x4007967	            0x415d	                                 pop r13	      7470	ldlang.c	FUNCTION_164
0x4007969	            0x415e	                                 pop r14	      7470	ldlang.c	FUNCTION_164
0x400796b	            0x415f	                                 pop r15	      7470	ldlang.c	FUNCTION_164
0x400796d	              0xc3	                                     ret	      7470	ldlang.c	FUNCTION_164
lang_new_vers_node	IF,0:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,1:ELSE,0	16
0x40086db	              0x55	                                push rbp	      8331	ldlang.c	FUNCTION_195
0x40086dc	              0x53	                                push rbx	      8331	ldlang.c	FUNCTION_195
0x40086dd	        0x4883ec08	                              sub rsp, 8	      8331	ldlang.c	FUNCTION_195
0x40086e1	          0x4889fd	                            mov rbp, rdi	      8331	ldlang.c	FUNCTION_195
0x40086e4	          0x4889f3	                            mov rbx, rsi	      8331	ldlang.c	FUNCTION_195
0x40086e7	      0xbe70000000	                           mov esi, 0x70	      8334	ldlang.c	FUNCTION_195	CALL_1
0x40086ec	      0xbf01000000	                              mov edi, 1	      8334	ldlang.c	FUNCTION_195	CALL_1
0x40086f1	      0xe800000000	                          call 0x40086f6	      8334	ldlang.c	FUNCTION_195	CALL_1
0x40086f6	        0x48896818	             mov qword [rax + 0x18], rbp	      8335	ldlang.c	FUNCTION_195
0x40086fa	        0x48895838	             mov qword [rax + 0x38], rbx	      8336	ldlang.c	FUNCTION_195
0x40086fe	    0x48c740680000	               mov qword [rax + 0x68], 0	      8337	ldlang.c	FUNCTION_195
0x4008706	    0xc74060ffffff	     mov dword [rax + 0x60], 0xffffffff 	      8338	ldlang.c	FUNCTION_195
0x400870d	        0x4883c408	                              add rsp, 8	      8340	ldlang.c	FUNCTION_195
0x4008711	              0x5b	                                 pop rbx	      8340	ldlang.c	FUNCTION_195
0x4008712	              0x5d	                                 pop rbp	      8340	ldlang.c	FUNCTION_195
0x4008713	              0xc3	                                     ret	      8340	ldlang.c	FUNCTION_195
push_stat_ptr	IF,1:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,1:ELSE,0	14
0x4003454	    0x488b05000000	            mov rax, qword [0x0400345b] 	      1016	ldlang.c	FUNCTION_31	IF_1
0x400345b	    0x483d00000000	                              cmp rax, 0	      1016	ldlang.c	FUNCTION_31	IF_1
0x4003461	            0x7218	                            jb 0x400347b	      1016	ldlang.c	FUNCTION_31	IF_1
0x4003463	        0x4883ec08	                              sub rsp, 8	      1015	ldlang.c	FUNCTION_31
0x4003467	      0xba00000000	                              mov edx, 0	      1017	ldlang.c	FUNCTION_31	CALL_1
0x400346c	      0xbef9030000	                          mov esi, 0x3f9	      1017	ldlang.c	FUNCTION_31	CALL_1
0x4003471	      0xbf00000000	                              mov edi, 0	      1017	ldlang.c	FUNCTION_31	CALL_1
0x4003476	      0xe800000000	                          call 0x400347b	      1017	ldlang.c	FUNCTION_31	CALL_1
0x400347b	        0x488d5008	                      lea rdx, [rax + 8]	      1018	ldlang.c	FUNCTION_31
0x400347f	    0x488915000000	            mov qword [0x04003486], rdx 	      1018	ldlang.c	FUNCTION_31
0x4003486	    0x488b15000000	            mov rdx, qword [0x0400348d] 	      1018	ldlang.c	FUNCTION_31
0x400348d	          0x488910	                    mov qword [rax], rdx	      1018	ldlang.c	FUNCTION_31
0x4003490	    0x48893d000000	            mov qword [0x04003497], rdi 	      1019	ldlang.c	FUNCTION_31
0x4003497	              0xc3	                                     ret	      1019	ldlang.c	FUNCTION_31
lang_default_entry	IF,0:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,0:ELSE,0	2
0x40079c8	    0x48893d000000	            mov qword [0x040079cf], rdi 	      7508	ldlang.c	FUNCTION_167
0x40079cf	              0xc3	                                     ret	      7508	ldlang.c	FUNCTION_167
lang_enter_overlay	IF,0:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,1:ELSE,0	20
0x400812e	              0x55	                                push rbp	      7948	ldlang.c	FUNCTION_188
0x400812f	              0x53	                                push rbx	      7948	ldlang.c	FUNCTION_188
0x4008130	        0x4883ec08	                              sub rsp, 8	      7948	ldlang.c	FUNCTION_188
0x4008134	          0x4889fd	                            mov rbp, rdi	      7948	ldlang.c	FUNCTION_188
0x4008137	          0x4889f3	                            mov rbx, rsi	      7948	ldlang.c	FUNCTION_188
0x400813a	    0x48833d000000	               cmp qword [0x04008142], 0	      7950	ldlang.c	FUNCTION_188	CALL_1
0x4008142	            0x7514	                           jne 0x4008158	      7950	ldlang.c	FUNCTION_188	CALL_1
0x4008144	    0x48833d000000	               cmp qword [0x0400814c], 0	      7950	ldlang.c	FUNCTION_188	CALL_1
0x400814c	            0x750a	                           jne 0x4008158	      7950	ldlang.c	FUNCTION_188	CALL_1
0x400814e	    0x48833d000000	               cmp qword [0x04008156], 0	      7950	ldlang.c	FUNCTION_188	CALL_1
0x4008156	            0x740f	                            je 0x4008167	      7950	ldlang.c	FUNCTION_188	CALL_1
0x4008158	      0xbe101f0000	                         mov esi, 0x1f10	      7950	ldlang.c	FUNCTION_188	CALL_1
0x400815d	      0xbf00000000	                              mov edi, 0	      7950	ldlang.c	FUNCTION_188	CALL_1
0x4008162	      0xe800000000	                          call 0x4008167	      7950	ldlang.c	FUNCTION_188	CALL_1
0x4008167	    0x48892d000000	            mov qword [0x0400816e], rbp 	      7954	ldlang.c	FUNCTION_188
0x400816e	    0x48891d000000	            mov qword [0x04008175], rbx 	      7955	ldlang.c	FUNCTION_188
0x4008175	        0x4883c408	                              add rsp, 8	      7956	ldlang.c	FUNCTION_188
0x4008179	              0x5b	                                 pop rbx	      7956	ldlang.c	FUNCTION_188
0x400817a	              0x5d	                                 pop rbp	      7956	ldlang.c	FUNCTION_188
0x400817b	              0xc3	                                     ret	      7956	ldlang.c	FUNCTION_188
ldlang_add_undef	IF,1:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,3:ELSE,0	25
0x40059fa	              0x55	                                push rbp	      3388	ldlang.c	FUNCTION_79
0x40059fb	              0x53	                                push rbx	      3388	ldlang.c	FUNCTION_79
0x40059fc	        0x4883ec08	                              sub rsp, 8	      3388	ldlang.c	FUNCTION_79
0x4005a00	          0x4889fd	                            mov rbp, rdi	      3388	ldlang.c	FUNCTION_79
0x4005a03	     0xb3500000000	              or esi, dword [0x04005a09]	      3391	ldlang.c	FUNCTION_79
0x4005a09	           0xf95c0	                                setne al	      3391	ldlang.c	FUNCTION_79
0x4005a0c	           0xfb6c0	                           movzx eax, al	      3391	ldlang.c	FUNCTION_79
0x4005a0f	    0x890500000000	            mov dword [0x04005a15], eax 	      3391	ldlang.c	FUNCTION_79
0x4005a15	      0xbf10000000	                           mov edi, 0x10	      3392	ldlang.c	FUNCTION_79	CALL_1
0x4005a1a	      0xe800000000	                          call 0x4005a1f	      3392	ldlang.c	FUNCTION_79	CALL_1
0x4005a1f	          0x4889c3	                            mov rbx, rax	      3392	ldlang.c	FUNCTION_79	CALL_1
0x4005a22	    0x488b05000000	            mov rax, qword [0x04005a29] 	      3393	ldlang.c	FUNCTION_79
0x4005a29	          0x488903	                    mov qword [rbx], rax	      3393	ldlang.c	FUNCTION_79
0x4005a2c	    0x48891d000000	            mov qword [0x04005a33], rbx 	      3394	ldlang.c	FUNCTION_79
0x4005a33	          0x4889ef	                            mov rdi, rbp	      3396	ldlang.c	FUNCTION_79	CALL_2
0x4005a36	      0xe800000000	                          call 0x4005a3b	      3396	ldlang.c	FUNCTION_79	CALL_2
0x4005a3b	        0x48894308	                mov qword [rbx + 8], rax	      3396	ldlang.c	FUNCTION_79	CALL_2
0x4005a3f	    0x48833d000000	               cmp qword [0x04005a47], 0	      3398	ldlang.c	FUNCTION_79	IF_1
0x4005a47	            0x7408	                            je 0x4005a51	      3398	ldlang.c	FUNCTION_79	IF_1
0x4005a49	          0x4889c7	                            mov rdi, rax	      3399	ldlang.c	FUNCTION_79	CALL_3
0x4005a4c	      0xe82fbeffff	               call sym.insert_undefined	      3399	ldlang.c	FUNCTION_79	CALL_3
0x4005a51	        0x4883c408	                              add rsp, 8	      3400	ldlang.c	FUNCTION_79
0x4005a55	              0x5b	                                 pop rbx	      3400	ldlang.c	FUNCTION_79
0x4005a56	              0x5d	                                 pop rbp	      3400	ldlang.c	FUNCTION_79
0x4005a57	              0xc3	                                     ret	      3400	ldlang.c	FUNCTION_79
lang_leave_overlay	IF,6:WHILE,1:FOR,0:DO,0:SWITCH,0:functions,0:CALL,6:ELSE,0	103
0x4008399	            0x4157	                                push r15	      8048	ldlang.c	FUNCTION_191
0x400839b	            0x4156	                                push r14	      8048	ldlang.c	FUNCTION_191
0x400839d	            0x4155	                                push r13	      8048	ldlang.c	FUNCTION_191
0x400839f	            0x4154	                                push r12	      8048	ldlang.c	FUNCTION_191
0x40083a1	              0x55	                                push rbp	      8048	ldlang.c	FUNCTION_191
0x40083a2	              0x53	                                push rbx	      8048	ldlang.c	FUNCTION_191
0x40083a3	        0x4883ec38	                           sub rsp, 0x38	      8048	ldlang.c	FUNCTION_191
0x40083a7	      0x48897c2408	                mov qword [rsp + 8], rdi	      8048	ldlang.c	FUNCTION_191
0x40083ac	          0x4189f6	                           mov r14d, esi	      8048	ldlang.c	FUNCTION_191
0x40083af	          0x4989d4	                            mov r12, rdx	      8048	ldlang.c	FUNCTION_191
0x40083b2	          0x4889ca	                            mov rdx, rcx	      8048	ldlang.c	FUNCTION_191
0x40083b5	          0x4d89c5	                             mov r13, r8	      8048	ldlang.c	FUNCTION_191
0x40083b8	          0x4c89c9	                             mov rcx, r9	      8048	ldlang.c	FUNCTION_191
0x40083bb	    0x64488b342528	                mov rsi, qword fs:[0x28]	      8048	ldlang.c	FUNCTION_191
0x40083c4	      0x4889742428	             mov qword [rsp + 0x28], rsi	      8048	ldlang.c	FUNCTION_191
0x40083c9	            0x31f6	                            xor esi, esi	      8048	ldlang.c	FUNCTION_191
0x40083cb	          0x4885ff	                           test rdi, rdi	      8054	ldlang.c	FUNCTION_191	CALL_1
0x40083ce	        0x410f95c0	                               setne r8b	      8054	ldlang.c	FUNCTION_191	CALL_1
0x40083d2	        0x450fb6c0	                          movzx r8d, r8b	      8054	ldlang.c	FUNCTION_191	CALL_1
0x40083d6	    0x41b900000000	                              mov r9d, 0	      8054	ldlang.c	FUNCTION_191	CALL_1
0x40083dc	      0x488d742420	                   lea rsi, [rsp + 0x20]	      8054	ldlang.c	FUNCTION_191	CALL_1
0x40083e1	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	      8054	ldlang.c	FUNCTION_191	CALL_1
0x40083e6	      0xe831bfffff	               call sym.lang_get_regions	      8054	ldlang.c	FUNCTION_191	CALL_1
0x40083eb	    0x488b05000000	            mov rax, qword [0x040083f2] 	      8062	ldlang.c	FUNCTION_191	IF_1
0x40083f2	          0x4885c0	                           test rax, rax	      8062	ldlang.c	FUNCTION_191	IF_1
0x40083f5	     0xf84fd000000	                            je 0x40084f8	      8062	ldlang.c	FUNCTION_191	IF_1
0x40083fb	        0x488b5008	                mov rdx, qword [rax + 8]	      8064	ldlang.c	FUNCTION_191	IF_1
0x40083ff	    0x808a90000000	              or byte [rdx + 0x90], 0x10	      8064	ldlang.c	FUNCTION_191	IF_1
0x4008406	        0x488b5808	                mov rbx, qword [rax + 8]	      8065	ldlang.c	FUNCTION_191	IF_1
0x400840a	    0x488b15000000	            mov rdx, qword [0x04008411] 	      8066	ldlang.c	FUNCTION_191	IF_1	CALL_3
0x4008411	    0x488b35000000	            mov rsi, qword [0x04008418] 	      8066	ldlang.c	FUNCTION_191	IF_1	CALL_3
0x4008418	      0xbf2b000000	                           mov edi, 0x2b	      8066	ldlang.c	FUNCTION_191	IF_1	CALL_3
0x400841d	      0xe800000000	                          call 0x4008422	      8066	ldlang.c	FUNCTION_191	IF_1	CALL_3
0x4008422	      0xba00000000	                              mov edx, 0	      8066	ldlang.c	FUNCTION_191	IF_1	CALL_3
0x4008427	          0x4889c6	                            mov rsi, rax	      8066	ldlang.c	FUNCTION_191	IF_1	CALL_3
0x400842a	      0xbf00000000	                              mov edi, 0	      8066	ldlang.c	FUNCTION_191	IF_1	CALL_3
0x400842f	      0xe800000000	                          call 0x4008434	      8066	ldlang.c	FUNCTION_191	IF_1	CALL_3
0x4008434	        0x48894368	             mov qword [rbx + 0x68], rax	      8066	ldlang.c	FUNCTION_191	IF_1	CALL_3
0x4008438	    0x488b1d000000	            mov rbx, qword [0x0400843f] 	      8069	ldlang.c	FUNCTION_191
0x400843f	          0x4885db	                           test rbx, rbx	      8070	ldlang.c	FUNCTION_191	WHILE_1
0x4008442	     0xf84b0000000	                            je 0x40084f8	      8070	ldlang.c	FUNCTION_191	WHILE_1
0x4008448	    0x41bf00000000	                             mov r15d, 0	      8070	ldlang.c	FUNCTION_191	WHILE_1
0x400844e	            0xeb03	                           jmp 0x4008453	      8070	ldlang.c	FUNCTION_191	WHILE_1
0x4008450	          0x4889eb	                            mov rbx, rbp	      8104	ldlang.c	FUNCTION_191	WHILE_1
0x4008453	          0x4d85e4	                           test r12, r12	      8074	ldlang.c	FUNCTION_191	WHILE_1	IF_2
0x4008456	            0x740f	                            je 0x4008467	      8074	ldlang.c	FUNCTION_191	WHILE_1	IF_2
0x4008458	        0x488b4308	                mov rax, qword [rbx + 8]	      8074	ldlang.c	FUNCTION_191	WHILE_1	IF_2
0x400845c	      0x4883785000	               cmp qword [rax + 0x50], 0	      8074	ldlang.c	FUNCTION_191	WHILE_1	IF_2
0x4008461	            0x7504	                           jne 0x4008467	      8074	ldlang.c	FUNCTION_191	WHILE_1	IF_2
0x4008463	        0x4c896050	             mov qword [rax + 0x50], r12	      8075	ldlang.c	FUNCTION_191	WHILE_1	IF_2
0x4008467	        0x488b4308	                mov rax, qword [rbx + 8]	      8077	ldlang.c	FUNCTION_191	WHILE_1
0x400846b	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      8077	ldlang.c	FUNCTION_191	WHILE_1
0x4008470	        0x48895040	             mov qword [rax + 0x40], rdx	      8077	ldlang.c	FUNCTION_191	WHILE_1
0x4008474	        0x488b4308	                mov rax, qword [rbx + 8]	      8078	ldlang.c	FUNCTION_191	WHILE_1
0x4008478	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      8078	ldlang.c	FUNCTION_191	WHILE_1
0x400847d	        0x48895048	             mov qword [rax + 0x48], rdx	      8078	ldlang.c	FUNCTION_191	WHILE_1
0x4008481	        0x48833b00	                      cmp qword [rbx], 0	      8084	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x4008485	            0x751b	                           jne 0x40084a2	      8084	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x4008487	        0x488b4308	                mov rax, qword [rbx + 8]	      8086	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x400848b	      0x488b742408	                mov rsi, qword [rsp + 8]	      8086	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x4008490	        0x48897060	             mov qword [rax + 0x60], rsi	      8086	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x4008494	        0x488b4308	                mov rax, qword [rbx + 8]	      8087	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x4008498	    0xc7808c000000	               mov dword [rax + 0x8c], 0	      8087	ldlang.c	FUNCTION_191	WHILE_1	IF_3
0x40084a2	          0x4d85ed	                           test r13, r13	      8089	ldlang.c	FUNCTION_191	WHILE_1	IF_4
0x40084a5	            0x740f	                            je 0x40084b6	      8089	ldlang.c	FUNCTION_191	WHILE_1	IF_4
0x40084a7	        0x488b4308	                mov rax, qword [rbx + 8]	      8089	ldlang.c	FUNCTION_191	WHILE_1	IF_4
0x40084ab	      0x4883787000	               cmp qword [rax + 0x70], 0	      8089	ldlang.c	FUNCTION_191	WHILE_1	IF_4
0x40084b0	            0x7504	                           jne 0x40084b6	      8089	ldlang.c	FUNCTION_191	WHILE_1	IF_4
0x40084b2	        0x4c896870	             mov qword [rax + 0x70], r13	      8090	ldlang.c	FUNCTION_191	WHILE_1	IF_4
0x40084b6	          0x4585f6	                         test r14d, r14d	      8092	ldlang.c	FUNCTION_191	WHILE_1	IF_5
0x40084b9	            0x741c	                            je 0x40084d7	      8092	ldlang.c	FUNCTION_191	WHILE_1	IF_5
0x40084bb	      0xbf10000000	                           mov edi, 0x10	      8096	ldlang.c	FUNCTION_191	WHILE_1	IF_5	CALL_4
0x40084c0	      0xe800000000	                          call 0x40084c5	      8096	ldlang.c	FUNCTION_191	WHILE_1	IF_5	CALL_4
0x40084c5	        0x488b5308	                mov rdx, qword [rbx + 8]	      8097	ldlang.c	FUNCTION_191	WHILE_1	IF_5
0x40084c9	        0x488b5230	            mov rdx, qword [rdx + 0x30] 	      8097	ldlang.c	FUNCTION_191	WHILE_1	IF_5
0x40084cd	        0x48895008	                mov qword [rax + 8], rdx	      8097	ldlang.c	FUNCTION_191	WHILE_1	IF_5
0x40084d1	          0x4c8938	                    mov qword [rax], r15	      8098	ldlang.c	FUNCTION_191	WHILE_1	IF_5
0x40084d4	          0x4989c7	                            mov r15, rax	      8099	ldlang.c	FUNCTION_191	WHILE_1	IF_5
0x40084d7	          0x488b2b	                    mov rbp, qword [rbx]	      8102	ldlang.c	FUNCTION_191	WHILE_1
0x40084da	          0x4889df	                            mov rdi, rbx	      8103	ldlang.c	FUNCTION_191	WHILE_1	CALL_5
0x40084dd	      0xe800000000	                          call 0x40084e2	      8103	ldlang.c	FUNCTION_191	WHILE_1	CALL_5
0x40084e2	          0x4885ed	                           test rbp, rbp	      8070	ldlang.c	FUNCTION_191	WHILE_1
0x40084e5	     0xf8565ffffff	                           jne 0x4008450	      8070	ldlang.c	FUNCTION_191	WHILE_1
0x40084eb	          0x4d85ff	                           test r15, r15	      8107	ldlang.c	FUNCTION_191	IF_6
0x40084ee	            0x7408	                            je 0x40084f8	      8107	ldlang.c	FUNCTION_191	IF_6
0x40084f0	          0x4c89ff	                            mov rdi, r15	      8108	ldlang.c	FUNCTION_191	CALL_6
0x40084f3	      0xe800000000	                          call 0x40084f8	      8108	ldlang.c	FUNCTION_191	CALL_6
0x40084f8	    0x48c705000000	               mov qword [0x04008503], 0	      8110	ldlang.c	FUNCTION_191
0x4008503	    0x48c705000000	               mov qword [0x0400850e], 0	      8111	ldlang.c	FUNCTION_191
0x400850e	    0x48c705000000	               mov qword [0x04008519], 0	      8112	ldlang.c	FUNCTION_191
0x4008519	    0x48c705000000	               mov qword [0x04008524], 0	      8113	ldlang.c	FUNCTION_191
0x4008524	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      8114	ldlang.c	FUNCTION_191
0x4008529	    0x644833042528	                xor rax, qword fs:[0x28]	      8114	ldlang.c	FUNCTION_191
0x4008532	            0x7405	                            je 0x4008539	      8114	ldlang.c	FUNCTION_191
0x4008534	      0xe800000000	                          call 0x4008539	      8114	ldlang.c	FUNCTION_191
0x4008539	        0x4883c438	                           add rsp, 0x38	      8114	ldlang.c	FUNCTION_191
0x400853d	              0x5b	                                 pop rbx	      8114	ldlang.c	FUNCTION_191
0x400853e	              0x5d	                                 pop rbp	      8114	ldlang.c	FUNCTION_191
0x400853f	            0x415c	                                 pop r12	      8114	ldlang.c	FUNCTION_191
0x4008541	            0x415d	                                 pop r13	      8114	ldlang.c	FUNCTION_191
0x4008543	            0x415e	                                 pop r14	      8114	ldlang.c	FUNCTION_191
0x4008545	            0x415f	                                 pop r15	      8114	ldlang.c	FUNCTION_191
0x4008547	              0xc3	                                     ret	      8114	ldlang.c	FUNCTION_191
name_compare	IF,1:WHILE,0:FOR,1:DO,0:SWITCH,0:functions,0:CALL,12:ELSE,0	100
0x4002b83	            0x4156	                                push r14	      2977	ldlang.c	FUNCTION_71
0x4002b85	            0x4155	                                push r13	      2977	ldlang.c	FUNCTION_71
0x4002b87	            0x4154	                                push r12	      2977	ldlang.c	FUNCTION_71
0x4002b89	              0x55	                                push rbp	      2977	ldlang.c	FUNCTION_71
0x4002b8a	              0x53	                                push rbx	      2977	ldlang.c	FUNCTION_71
0x4002b8b	          0x4989fd	                            mov r13, rdi	      2977	ldlang.c	FUNCTION_71
0x4002b8e	          0x4989f4	                            mov r12, rsi	      2977	ldlang.c	FUNCTION_71
0x4002b91	    0x49c7c6ffffff	             mov r14, 0xffffffffffffffff	      2982	ldlang.c	FUNCTION_71	CALL_2
0x4002b98	      0xbb00000000	                              mov ebx, 0	      2982	ldlang.c	FUNCTION_71	CALL_2
0x4002b9d	          0x4c89f1	                            mov rcx, r14	      2982	ldlang.c	FUNCTION_71	CALL_2
0x4002ba0	            0x89d8	                            mov eax, ebx	      2982	ldlang.c	FUNCTION_71	CALL_2
0x4002ba2	            0xf2ae	              repne scasb al, byte [rdi]	      2982	ldlang.c	FUNCTION_71	CALL_2
0x4002ba4	          0x4889cf	                            mov rdi, rcx	      2982	ldlang.c	FUNCTION_71	CALL_2
0x4002ba7	          0x48f7d7	                                 not rdi	      2982	ldlang.c	FUNCTION_71	CALL_2
0x4002baa	      0xe800000000	                          call 0x4002baf	      2982	ldlang.c	FUNCTION_71	CALL_2
0x4002baf	          0x4889c5	                            mov rbp, rax	      2982	ldlang.c	FUNCTION_71	CALL_2
0x4002bb2	          0x4c89f1	                            mov rcx, r14	      2983	ldlang.c	FUNCTION_71	CALL_4
0x4002bb5	          0x4c89e7	                            mov rdi, r12	      2983	ldlang.c	FUNCTION_71	CALL_4
0x4002bb8	            0x89d8	                            mov eax, ebx	      2983	ldlang.c	FUNCTION_71	CALL_4
0x4002bba	            0xf2ae	              repne scasb al, byte [rdi]	      2983	ldlang.c	FUNCTION_71	CALL_4
0x4002bbc	          0x4889cf	                            mov rdi, rcx	      2983	ldlang.c	FUNCTION_71	CALL_4
0x4002bbf	          0x48f7d7	                                 not rdi	      2983	ldlang.c	FUNCTION_71	CALL_4
0x4002bc2	      0xe800000000	                          call 0x4002bc7	      2983	ldlang.c	FUNCTION_71	CALL_4
0x4002bc7	          0x4889c3	                            mov rbx, rax	      2983	ldlang.c	FUNCTION_71	CALL_4
0x4002bca	      0x410fb64500	                   movzx eax, byte [r13]	      2947	ldlang.c	FUNCTION_69	WHILE_1
0x4002bcf	            0x84c0	                             test al, al	      2947	ldlang.c	FUNCTION_69	WHILE_1
0x4002bd1	            0x7426	                            je 0x4002bf9	      2947	ldlang.c	FUNCTION_69	WHILE_1
0x4002bd3	        0x498d4d01	                      lea rcx, [r13 + 1]	      2947	ldlang.c	FUNCTION_69	WHILE_1
0x4002bd7	          0x4889ea	                            mov rdx, rbp	      2947	ldlang.c	FUNCTION_69	WHILE_1
0x4002bda	        0x4883c201	                              add rdx, 1	      2948	ldlang.c	FUNCTION_69	CALL_1
0x4002bde	           0xfb6c0	                           movzx eax, al	      2948	ldlang.c	FUNCTION_69	CALL_1
0x4002be1	     0xfb680000000	                   movzx eax, byte [rax]	      2948	ldlang.c	FUNCTION_69	CALL_1
0x4002be8	          0x8842ff	                  mov byte [rdx - 1], al	      2948	ldlang.c	FUNCTION_69	CALL_1
0x4002beb	        0x4883c101	                              add rcx, 1	      2947	ldlang.c	FUNCTION_69	WHILE_1
0x4002bef	         0xfb641ff	               movzx eax, byte [rcx - 1]	      2947	ldlang.c	FUNCTION_69	WHILE_1
0x4002bf3	            0x84c0	                             test al, al	      2947	ldlang.c	FUNCTION_69	WHILE_1
0x4002bf5	            0x75e3	                           jne 0x4002bda	      2947	ldlang.c	FUNCTION_69	WHILE_1
0x4002bf7	            0xeb03	                           jmp 0x4002bfc	      2947	ldlang.c	FUNCTION_69	WHILE_1
0x4002bf9	          0x4889ea	                            mov rdx, rbp	      2947	ldlang.c	FUNCTION_69	WHILE_1
0x4002bfc	          0xc60200	                       mov byte [rdx], 0	      2950	ldlang.c	FUNCTION_69
0x4002bff	      0x498d4c2401	                      lea rcx, [r12 + 1]	      2947	ldlang.c	FUNCTION_69	WHILE_1
0x4002c04	      0x410fb60424	                   movzx eax, byte [r12]	      2947	ldlang.c	FUNCTION_69	WHILE_1
0x4002c09	            0x84c0	                             test al, al	      2947	ldlang.c	FUNCTION_69	WHILE_1
0x4002c0b	            0x7422	                            je 0x4002c2f	      2947	ldlang.c	FUNCTION_69	WHILE_1
0x4002c0d	          0x4889da	                            mov rdx, rbx	      2947	ldlang.c	FUNCTION_69	WHILE_1
0x4002c10	        0x4883c201	                              add rdx, 1	      2948	ldlang.c	FUNCTION_69	CALL_1
0x4002c14	           0xfb6c0	                           movzx eax, al	      2948	ldlang.c	FUNCTION_69	CALL_1
0x4002c17	     0xfb680000000	                   movzx eax, byte [rax]	      2948	ldlang.c	FUNCTION_69	CALL_1
0x4002c1e	          0x8842ff	                  mov byte [rdx - 1], al	      2948	ldlang.c	FUNCTION_69	CALL_1
0x4002c21	        0x4883c101	                              add rcx, 1	      2947	ldlang.c	FUNCTION_69	WHILE_1
0x4002c25	         0xfb641ff	               movzx eax, byte [rcx - 1]	      2947	ldlang.c	FUNCTION_69	WHILE_1
0x4002c29	            0x84c0	                             test al, al	      2947	ldlang.c	FUNCTION_69	WHILE_1
0x4002c2b	            0x75e3	                           jne 0x4002c10	      2947	ldlang.c	FUNCTION_69	WHILE_1
0x4002c2d	            0xeb03	                           jmp 0x4002c32	      2947	ldlang.c	FUNCTION_69	WHILE_1
0x4002c2f	          0x4889da	                            mov rdx, rbx	      2947	ldlang.c	FUNCTION_69	WHILE_1
0x4002c32	          0xc60200	                       mov byte [rdx], 0	      2950	ldlang.c	FUNCTION_69
0x4002c35	      0xbe00000000	                              mov esi, 0	      2990	ldlang.c	FUNCTION_71	CALL_7
0x4002c3a	          0x4889ef	                            mov rdi, rbp	      2990	ldlang.c	FUNCTION_71	CALL_7
0x4002c3d	      0xe8b4ecffff	                         call sym.strcut	      2990	ldlang.c	FUNCTION_71	CALL_7
0x4002c42	      0xbe00000000	                              mov esi, 0	      2991	ldlang.c	FUNCTION_71	CALL_8
0x4002c47	          0x4889ef	                            mov rdi, rbp	      2991	ldlang.c	FUNCTION_71	CALL_8
0x4002c4a	      0xe8a7ecffff	                         call sym.strcut	      2991	ldlang.c	FUNCTION_71	CALL_8
0x4002c4f	      0xbe00000000	                              mov esi, 0	      2992	ldlang.c	FUNCTION_71	CALL_9
0x4002c54	          0x4889df	                            mov rdi, rbx	      2992	ldlang.c	FUNCTION_71	CALL_9
0x4002c57	      0xe89aecffff	                         call sym.strcut	      2992	ldlang.c	FUNCTION_71	CALL_9
0x4002c5c	      0xbe00000000	                              mov esi, 0	      2993	ldlang.c	FUNCTION_71	CALL_10
0x4002c61	          0x4889df	                            mov rdi, rbx	      2993	ldlang.c	FUNCTION_71	CALL_10
0x4002c64	      0xe88decffff	                         call sym.strcut	      2993	ldlang.c	FUNCTION_71	CALL_10
0x4002c69	         0xfb64500	                   movzx eax, byte [rbp]	      2998	ldlang.c	FUNCTION_71	FOR_1
0x4002c6d	            0x3a03	                      cmp al, byte [rbx]	      2998	ldlang.c	FUNCTION_71	FOR_1
0x4002c6f	            0x7534	                           jne 0x4002ca5	      2998	ldlang.c	FUNCTION_71	FOR_1
0x4002c71	            0x84c0	                             test al, al	      2999	ldlang.c	FUNCTION_71	FOR_1	IF_1
0x4002c73	            0x740e	                            je 0x4002c83	      2999	ldlang.c	FUNCTION_71	FOR_1	IF_1
0x4002c75	    0x41bc00000000	                             mov r12d, 0	      2999	ldlang.c	FUNCTION_71	FOR_1	IF_1
0x4002c7b	            0xeb15	                           jmp 0x4002c92	      2999	ldlang.c	FUNCTION_71	FOR_1	IF_1
0x4002c7d	            0x84d2	                             test dl, dl	      2999	ldlang.c	FUNCTION_71	FOR_1	IF_1
0x4002c7f	            0x7511	                           jne 0x4002c92	      2999	ldlang.c	FUNCTION_71	FOR_1	IF_1
0x4002c81	            0xeb06	                           jmp 0x4002c89	      2999	ldlang.c	FUNCTION_71	FOR_1	IF_1
0x4002c83	    0x41bc00000000	                             mov r12d, 0	      2998	ldlang.c	FUNCTION_71	FOR_1
0x4002c89	        0x478d24a4	                 lea r12d, [r12 + r12*4]	      3001	ldlang.c	FUNCTION_71	FOR_1	IF_1
0x4002c8d	          0x4501e4	                          add r12d, r12d	      3001	ldlang.c	FUNCTION_71	FOR_1	IF_1
0x4002c90	            0xeb19	                           jmp 0x4002cab	      3002	ldlang.c	FUNCTION_71	FOR_1	IF_1
0x4002c92	        0x4183c401	                             add r12d, 1	      2998	ldlang.c	FUNCTION_71	FOR_1
0x4002c96	          0x4963c4	                        movsxd rax, r12d	      2998	ldlang.c	FUNCTION_71	FOR_1
0x4002c99	       0xfb6540500	             movzx edx, byte [rbp + rax]	      2998	ldlang.c	FUNCTION_71	FOR_1
0x4002c9e	          0x3a1403	                cmp dl, byte [rbx + rax]	      2998	ldlang.c	FUNCTION_71	FOR_1
0x4002ca1	            0x74da	                            je 0x4002c7d	      2998	ldlang.c	FUNCTION_71	FOR_1
0x4002ca3	            0xeb06	                           jmp 0x4002cab	      2998	ldlang.c	FUNCTION_71	FOR_1
0x4002ca5	    0x41bc00000000	                             mov r12d, 0	      2998	ldlang.c	FUNCTION_71	FOR_1
0x4002cab	          0x4889ef	                            mov rdi, rbp	      3005	ldlang.c	FUNCTION_71	CALL_11
0x4002cae	      0xe800000000	                          call 0x4002cb3	      3005	ldlang.c	FUNCTION_71	CALL_11
0x4002cb3	          0x4889df	                            mov rdi, rbx	      3006	ldlang.c	FUNCTION_71	CALL_12
0x4002cb6	      0xe800000000	                          call 0x4002cbb	      3006	ldlang.c	FUNCTION_71	CALL_12
0x4002cbb	          0x4489e0	                           mov eax, r12d	      3009	ldlang.c	FUNCTION_71
0x4002cbe	              0x5b	                                 pop rbx	      3009	ldlang.c	FUNCTION_71
0x4002cbf	              0x5d	                                 pop rbp	      3009	ldlang.c	FUNCTION_71
0x4002cc0	            0x415c	                                 pop r12	      3009	ldlang.c	FUNCTION_71
0x4002cc2	            0x415d	                                 pop r13	      3009	ldlang.c	FUNCTION_71
0x4002cc4	            0x415e	                                 pop r14	      3009	ldlang.c	FUNCTION_71
0x4002cc6	              0xc3	                                     ret	      3009	ldlang.c	FUNCTION_71
print_statement_list	IF,0:WHILE,1:FOR,0:DO,0:SWITCH,0:functions,0:CALL,1:ELSE,0	17
0x4001855	              0x55	                                push rbp	      4520	ldlang.c	FUNCTION_104
0x4001856	              0x53	                                push rbx	      4520	ldlang.c	FUNCTION_104
0x4001857	        0x4883ec08	                              sub rsp, 8	      4520	ldlang.c	FUNCTION_104
0x400185b	          0x4889fb	                            mov rbx, rdi	      4520	ldlang.c	FUNCTION_104
0x400185e	          0x4889f5	                            mov rbp, rsi	      4520	ldlang.c	FUNCTION_104
0x4001861	          0x4885ff	                           test rdi, rdi	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x4001864	            0x7413	                            je 0x4001879	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x4001866	          0x4889ee	                            mov rsi, rbp	      4523	ldlang.c	FUNCTION_104	WHILE_1	CALL_1
0x4001869	          0x4889df	                            mov rdi, rbx	      4523	ldlang.c	FUNCTION_104	WHILE_1	CALL_1
0x400186c	      0xe8a2f5ffff	                call sym.print_statement	      4523	ldlang.c	FUNCTION_104	WHILE_1	CALL_1
0x4001871	          0x488b1b	                    mov rbx, qword [rbx]	      4524	ldlang.c	FUNCTION_104	WHILE_1
0x4001874	          0x4885db	                           test rbx, rbx	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x4001877	            0x75ed	                           jne 0x4001866	      4521	ldlang.c	FUNCTION_104	WHILE_1
0x4001879	        0x4883c408	                              add rsp, 8	      4526	ldlang.c	FUNCTION_104
0x400187d	              0x5b	                                 pop rbx	      4526	ldlang.c	FUNCTION_104
0x400187e	              0x5d	                                 pop rbp	      4526	ldlang.c	FUNCTION_104
0x400187f	              0xc3	                                     ret	      4526	ldlang.c	FUNCTION_104
lang_add_attribute	IF,0:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,1:ELSE,0	6
0x4007ad1	        0x4883ec08	                              sub rsp, 8	      7593	ldlang.c	FUNCTION_174
0x4007ad5	    0x488b15000000	            mov rdx, qword [0x04007adc] 	      7594	ldlang.c	FUNCTION_174	CALL_1
0x4007adc	      0xbe10000000	                           mov esi, 0x10	      7594	ldlang.c	FUNCTION_174	CALL_1
0x4007ae1	      0xe8e2b6ffff	                  call sym.new_statement	      7594	ldlang.c	FUNCTION_174	CALL_1
0x4007ae6	        0x4883c408	                              add rsp, 8	      7595	ldlang.c	FUNCTION_174
0x4007aea	              0xc3	                                     ret	      7595	ldlang.c	FUNCTION_174
lang_gc_sections_1	IF,0:WHILE,0:FOR,1:DO,0:SWITCH,1:functions,0:CALL,4:ELSE,0	35
0x4006694	              0x53	                                push rbx	      6799	ldlang.c	FUNCTION_150
0x4006695	          0x4889fb	                            mov rbx, rdi	      6799	ldlang.c	FUNCTION_150
0x4006698	          0x4885ff	                           test rdi, rdi	      6800	ldlang.c	FUNCTION_150	FOR_1
0x400669b	            0x745d	                            je 0x40066fa	      6800	ldlang.c	FUNCTION_150	FOR_1
0x400669d	          0x8b4308	                mov eax, dword [rbx + 8]	      6802	ldlang.c	FUNCTION_150	FOR_1	SWITCH_1
0x40066a0	          0x83f804	                              cmp eax, 4	      6802	ldlang.c	FUNCTION_150	FOR_1	SWITCH_1
0x40066a3	            0x7417	                            je 0x40066bc	      6802	ldlang.c	FUNCTION_150	FOR_1	SWITCH_1
0x40066a5	          0x83f804	                              cmp eax, 4	      6802	ldlang.c	FUNCTION_150	FOR_1	SWITCH_1
0x40066a8	            0x7706	                            ja 0x40066b0	      6802	ldlang.c	FUNCTION_150	FOR_1	SWITCH_1
0x40066aa	            0x85c0	                           test eax, eax	      6802	ldlang.c	FUNCTION_150	FOR_1	SWITCH_1
0x40066ac	            0x7430	                            je 0x40066de	      6802	ldlang.c	FUNCTION_150	FOR_1	SWITCH_1
0x40066ae	            0xeb42	                           jmp 0x40066f2	      6802	ldlang.c	FUNCTION_150	FOR_1	SWITCH_1
0x40066b0	          0x83f80d	                            cmp eax, 0xd	      6802	ldlang.c	FUNCTION_150	FOR_1	SWITCH_1
0x40066b3	            0x7434	                            je 0x40066e9	      6802	ldlang.c	FUNCTION_150	FOR_1	SWITCH_1
0x40066b5	          0x83f80f	                            cmp eax, 0xf	      6802	ldlang.c	FUNCTION_150	FOR_1	SWITCH_1
0x40066b8	            0x7416	                            je 0x40066d0	      6802	ldlang.c	FUNCTION_150	FOR_1	SWITCH_1
0x40066ba	            0xeb36	                           jmp 0x40066f2	      6802	ldlang.c	FUNCTION_150	FOR_1	SWITCH_1
0x40066bc	      0xba00000000	                              mov edx, 0	      6805	ldlang.c	FUNCTION_150	FOR_1	SWITCH_1	CALL_1
0x40066c1	      0xbe00000000	                              mov esi, 0	      6805	ldlang.c	FUNCTION_150	FOR_1	SWITCH_1	CALL_1
0x40066c6	          0x4889df	                            mov rdi, rbx	      6805	ldlang.c	FUNCTION_150	FOR_1	SWITCH_1	CALL_1
0x40066c9	      0xe86afeffff	                      call sym.walk_wild	      6805	ldlang.c	FUNCTION_150	FOR_1	SWITCH_1	CALL_1
0x40066ce	            0xeb22	                           jmp 0x40066f2	      6806	ldlang.c	FUNCTION_150	FOR_1	SWITCH_1
0x40066d0	    0x488b3d000000	            mov rdi, qword [0x040066d7] 	      6808	ldlang.c	FUNCTION_150	FOR_1	SWITCH_1	CALL_2
0x40066d7	      0xe8b8ffffff	             call sym.lang_gc_sections_1	      6808	ldlang.c	FUNCTION_150	FOR_1	SWITCH_1	CALL_2
0x40066dc	            0xeb14	                           jmp 0x40066f2	      6809	ldlang.c	FUNCTION_150	FOR_1	SWITCH_1
0x40066de	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      6811	ldlang.c	FUNCTION_150	FOR_1	SWITCH_1	CALL_3
0x40066e2	      0xe8adffffff	             call sym.lang_gc_sections_1	      6811	ldlang.c	FUNCTION_150	FOR_1	SWITCH_1	CALL_3
0x40066e7	            0xeb09	                           jmp 0x40066f2	      6812	ldlang.c	FUNCTION_150	FOR_1	SWITCH_1
0x40066e9	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      6814	ldlang.c	FUNCTION_150	FOR_1	SWITCH_1	CALL_4
0x40066ed	      0xe8a2ffffff	             call sym.lang_gc_sections_1	      6814	ldlang.c	FUNCTION_150	FOR_1	SWITCH_1	CALL_4
0x40066f2	          0x488b1b	                    mov rbx, qword [rbx]	      6800	ldlang.c	FUNCTION_150	FOR_1
0x40066f5	          0x4885db	                           test rbx, rbx	      6800	ldlang.c	FUNCTION_150	FOR_1
0x40066f8	            0x75a3	                           jne 0x400669d	      6800	ldlang.c	FUNCTION_150	FOR_1
0x40066fa	              0x5b	                                 pop rbx	      6820	ldlang.c	FUNCTION_150
0x40066fb	              0xc3	                                     ret	      6820	ldlang.c	FUNCTION_150
lang_leave_output_section_statement	IF,0:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,2:ELSE,0	25
0x4007b3a	              0x55	                                push rbp	      7656	ldlang.c	FUNCTION_178
0x4007b3b	              0x53	                                push rbx	      7656	ldlang.c	FUNCTION_178
0x4007b3c	        0x4883ec08	                              sub rsp, 8	      7656	ldlang.c	FUNCTION_178
0x4007b40	          0x4889fd	                            mov rbp, rdi	      7656	ldlang.c	FUNCTION_178
0x4007b43	          0x4889f0	                            mov rax, rsi	      7656	ldlang.c	FUNCTION_178
0x4007b46	          0x4889d3	                            mov rbx, rdx	      7656	ldlang.c	FUNCTION_178
0x4007b49	    0x488b3d000000	            mov rdi, qword [0x04007b50] 	      7661	ldlang.c	FUNCTION_178
0x4007b50	      0x48837f5800	               cmp qword [rdi + 0x58], 0	      7657	ldlang.c	FUNCTION_178	CALL_1
0x4007b55	        0x410f95c1	                               setne r9b	      7657	ldlang.c	FUNCTION_178	CALL_1
0x4007b59	        0x450fb6c9	                          movzx r9d, r9b	      7657	ldlang.c	FUNCTION_178	CALL_1
0x4007b5d	      0x48837f6000	               cmp qword [rdi + 0x60], 0	      7657	ldlang.c	FUNCTION_178	CALL_1
0x4007b62	        0x410f95c0	                               setne r8b	      7657	ldlang.c	FUNCTION_178	CALL_1
0x4007b66	        0x450fb6c0	                          movzx r8d, r8b	      7657	ldlang.c	FUNCTION_178	CALL_1
0x4007b6a	        0x488d7748	                   lea rsi, [rdi + 0x48]	      7657	ldlang.c	FUNCTION_178	CALL_1
0x4007b6e	        0x4883c740	                           add rdi, 0x40	      7657	ldlang.c	FUNCTION_178	CALL_1
0x4007b72	          0x4889c2	                            mov rdx, rax	      7657	ldlang.c	FUNCTION_178	CALL_1
0x4007b75	      0xe8a2c7ffff	               call sym.lang_get_regions	      7657	ldlang.c	FUNCTION_178	CALL_1
0x4007b7a	    0x488b05000000	            mov rax, qword [0x04007b81] 	      7663	ldlang.c	FUNCTION_178
0x4007b81	        0x48896850	             mov qword [rax + 0x50], rbp	      7663	ldlang.c	FUNCTION_178
0x4007b85	        0x48895870	             mov qword [rax + 0x70], rbx	      7664	ldlang.c	FUNCTION_178
0x4007b89	      0xe800000000	                          call 0x4007b8e	      7665	ldlang.c	FUNCTION_178	CALL_2
0x4007b8e	        0x4883c408	                              add rsp, 8	      7666	ldlang.c	FUNCTION_178
0x4007b92	              0x5b	                                 pop rbx	      7666	ldlang.c	FUNCTION_178
0x4007b93	              0x5d	                                 pop rbp	      7666	ldlang.c	FUNCTION_178
0x4007b94	              0xc3	                                     ret	      7666	ldlang.c	FUNCTION_178
lang_leave_group	IF,0:WHILE,0:FOR,0:DO,0:SWITCH,0:functions,0:CALL,1:ELSE,0	4
0x4007fe6	        0x4883ec08	                              sub rsp, 8	      7729	ldlang.c	FUNCTION_183
0x4007fea	      0xe800000000	                          call 0x4007fef	      7730	ldlang.c	FUNCTION_183	CALL_1
0x4007fef	        0x4883c408	                              add rsp, 8	      7731	ldlang.c	FUNCTION_183
0x4007ff3	              0xc3	                                     ret	      7731	ldlang.c	FUNCTION_183
