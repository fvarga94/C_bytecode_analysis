_rl_trclose	SWITCH,0:FOR,0:functions,0:IF,0:WHILE,0:ELSE,0:DO,0:CALL,1	6
0x400087b	        0x4883ec08	                              sub rsp, 8	       529	util.c	FUNCTION_9
0x400087f	    0x488b3d000000	            mov rdi, qword [0x04000886] 	       532	util.c	FUNCTION_9	CALL_1
0x4000886	      0xe800000000	                          call 0x400088b	       532	util.c	FUNCTION_9	CALL_1
0x400088b	    0x48c705000000	               mov qword [0x04000896], 0	       533	util.c	FUNCTION_9
0x4000896	        0x4883c408	                              add rsp, 8	       535	util.c	FUNCTION_9
0x400089a	              0xc3	                                     ret	       535	util.c	FUNCTION_9
rl_alphabetic	SWITCH,0:FOR,0:functions,0:IF,1:WHILE,0:ELSE,0:DO,0:CALL,2	26
0x4000040	              0x53	                                push rbx	        75	util.c	FUNCTION_1
0x4000041	            0x89fb	                            mov ebx, edi	        75	util.c	FUNCTION_1
0x4000043	        0x400fb6c7	                          movzx eax, dil	        76	util.c	FUNCTION_1	IF_1	CALL_1
0x4000047	            0x39c7	                            cmp edi, eax	        76	util.c	FUNCTION_1	IF_1	CALL_1
0x4000049	            0x7537	                           jne 0x4000082	        76	util.c	FUNCTION_1	IF_1	CALL_1
0x400004b	      0xe800000000	                          call 0x4000050	        76	util.c	FUNCTION_1	IF_1	CALL_1
0x4000050	          0x4863d3	                         movsxd rdx, ebx	        76	util.c	FUNCTION_1	IF_1	CALL_1
0x4000053	          0x488b08	                    mov rcx, qword [rax]	        76	util.c	FUNCTION_1	IF_1	CALL_1
0x4000056	      0xb801000000	                              mov eax, 1	        77	util.c	FUNCTION_1	IF_1
0x400005b	        0xf6045108	              test byte [rcx + rdx*2], 8	        76	util.c	FUNCTION_1	IF_1	CALL_1
0x400005f	            0x752b	                           jne 0x400008c	        76	util.c	FUNCTION_1	IF_1	CALL_1
0x4000061	    0x8b0500000000	            mov eax, dword [0x04000067] 	        79	util.c	FUNCTION_1
0x4000067	            0x85c0	                           test eax, eax	        79	util.c	FUNCTION_1
0x4000069	            0x7421	                            je 0x400008c	        79	util.c	FUNCTION_1
0x400006b	            0x89de	                            mov esi, ebx	        80	util.c	FUNCTION_1	CALL_2
0x400006d	      0xbf00000000	                              mov edi, 0	        80	util.c	FUNCTION_1	CALL_2
0x4000072	      0xe800000000	                          call 0x4000077	        80	util.c	FUNCTION_1	CALL_2
0x4000077	          0x4885c0	                           test rax, rax	        77	util.c	FUNCTION_1	IF_1
0x400007a	           0xf95c0	                                setne al	        77	util.c	FUNCTION_1	IF_1
0x400007d	           0xfb6c0	                           movzx eax, al	        77	util.c	FUNCTION_1	IF_1
0x4000080	            0xeb0a	                           jmp 0x400008c	        77	util.c	FUNCTION_1	IF_1
0x4000082	    0x8b0500000000	            mov eax, dword [0x04000088] 	        79	util.c	FUNCTION_1
0x4000088	            0x85c0	                           test eax, eax	        79	util.c	FUNCTION_1
0x400008a	            0x75df	                           jne 0x400006b	        79	util.c	FUNCTION_1
0x400008c	              0x5b	                                 pop rbx	        81	util.c	FUNCTION_1
0x400008d	              0xc3	                                     ret	        81	util.c	FUNCTION_1
rl_extend_line_buffer	SWITCH,0:FOR,0:functions,0:IF,0:WHILE,1:ELSE,0:DO,0:CALL,2	17
0x4000181	              0x53	                                push rbx	       168	util.c	FUNCTION_4
0x4000182	            0x89fb	                            mov ebx, edi	       168	util.c	FUNCTION_4
0x4000184	    0x8b3500000000	            mov esi, dword [0x0400018a] 	       169	util.c	FUNCTION_4	WHILE_1
0x400018a	            0x39f7	                            cmp edi, esi	       169	util.c	FUNCTION_4	WHILE_1
0x400018c	            0x7c2c	                            jl 0x40001ba	       169	util.c	FUNCTION_4	WHILE_1
0x400018e	    0x81c600010000	                          add esi, 0x100	       171	util.c	FUNCTION_4	WHILE_1
0x4000194	    0x893500000000	            mov dword [0x0400019a], esi 	       171	util.c	FUNCTION_4	WHILE_1
0x400019a	          0x4863f6	                         movsxd rsi, esi	       172	util.c	FUNCTION_4	WHILE_1	CALL_1
0x400019d	    0x488b3d000000	            mov rdi, qword [0x040001a4] 	       172	util.c	FUNCTION_4	WHILE_1	CALL_1
0x40001a4	      0xe800000000	                          call 0x40001a9	       172	util.c	FUNCTION_4	WHILE_1	CALL_1
0x40001a9	    0x488905000000	            mov qword [0x040001b0], rax 	       172	util.c	FUNCTION_4	WHILE_1	CALL_1
0x40001b0	    0x8b3500000000	            mov esi, dword [0x040001b6] 	       169	util.c	FUNCTION_4	WHILE_1
0x40001b6	            0x39de	                            cmp esi, ebx	       169	util.c	FUNCTION_4	WHILE_1
0x40001b8	            0x7ed4	                           jle 0x400018e	       169	util.c	FUNCTION_4	WHILE_1
0x40001ba	      0xe800000000	                          call 0x40001bf	       175	util.c	FUNCTION_4	CALL_2
0x40001bf	              0x5b	                                 pop rbx	       176	util.c	FUNCTION_4
0x40001c0	              0xc3	                                     ret	       176	util.c	FUNCTION_4
_rl_ttymsg	SWITCH,0:FOR,0:functions,0:IF,0:WHILE,0:ELSE,0:DO,0:CALL,7	50
0x4000300	              0x53	                                push rbx	       240	util.c	FUNCTION_5
0x4000301	    0x4881ecd00000	                           sub rsp, 0xd0	       240	util.c	FUNCTION_5
0x4000308	          0x4889fb	                            mov rbx, rdi	       240	util.c	FUNCTION_5
0x400030b	      0x4889742428	             mov qword [rsp + 0x28], rsi	       240	util.c	FUNCTION_5
0x4000310	      0x4889542430	             mov qword [rsp + 0x30], rdx	       240	util.c	FUNCTION_5
0x4000315	      0x48894c2438	             mov qword [rsp + 0x38], rcx	       240	util.c	FUNCTION_5
0x400031a	      0x4c89442440	              mov qword [rsp + 0x40], r8	       240	util.c	FUNCTION_5
0x400031f	      0x4c894c2448	              mov qword [rsp + 0x48], r9	       240	util.c	FUNCTION_5
0x4000324	            0x84c0	                             test al, al	       240	util.c	FUNCTION_5
0x4000326	            0x7437	                            je 0x400035f	       240	util.c	FUNCTION_5
0x4000328	       0xf29442450	       movaps xmmword [rsp + 0x50], xmm0	       240	util.c	FUNCTION_5
0x400032d	       0xf294c2460	       movaps xmmword [rsp + 0x60], xmm1	       240	util.c	FUNCTION_5
0x4000332	       0xf29542470	       movaps xmmword [rsp + 0x70], xmm2	       240	util.c	FUNCTION_5
0x4000337	     0xf299c248000	       movaps xmmword [rsp + 0x80], xmm3	       240	util.c	FUNCTION_5
0x400033f	     0xf29a4249000	       movaps xmmword [rsp + 0x90], xmm4	       240	util.c	FUNCTION_5
0x4000347	     0xf29ac24a000	       movaps xmmword [rsp + 0xa0], xmm5	       240	util.c	FUNCTION_5
0x400034f	     0xf29b424b000	       movaps xmmword [rsp + 0xb0], xmm6	       240	util.c	FUNCTION_5
0x4000357	     0xf29bc24c000	       movaps xmmword [rsp + 0xc0], xmm7	       240	util.c	FUNCTION_5
0x400035f	    0x64488b042528	                mov rax, qword fs:[0x28]	       240	util.c	FUNCTION_5
0x4000368	      0x4889442418	             mov qword [rsp + 0x18], rax	       240	util.c	FUNCTION_5
0x400036d	            0x31c0	                            xor eax, eax	       240	util.c	FUNCTION_5
0x400036f	    0xc70424080000	                      mov dword [rsp], 8	       247	util.c	FUNCTION_5	CALL_1
0x4000376	    0xc74424043000	               mov dword [rsp + 4], 0x30	       247	util.c	FUNCTION_5	CALL_1
0x400037e	    0x488d8424e000	                   lea rax, [rsp + 0xe0]	       247	util.c	FUNCTION_5	CALL_1
0x4000386	      0x4889442408	                mov qword [rsp + 8], rax	       247	util.c	FUNCTION_5	CALL_1
0x400038b	      0x488d442420	                   lea rax, [rsp + 0x20]	       247	util.c	FUNCTION_5	CALL_1
0x4000390	      0x4889442410	             mov qword [rsp + 0x10], rax	       247	util.c	FUNCTION_5	CALL_1
0x4000395	    0x488b0d000000	            mov rcx, qword [0x0400039c] 	        97	stdio2.h	CALL_64
0x400039c	      0xba0a000000	                            mov edx, 0xa	        97	stdio2.h	CALL_64
0x40003a1	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_64
0x40003a6	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_64
0x40003ab	      0xe800000000	                          call 0x40003b0	        97	stdio2.h	CALL_64
0x40003b0	          0x4889e1	                            mov rcx, rsp	       127	stdio2.h	FUNCTION_27	CALL_1
0x40003b3	          0x4889da	                            mov rdx, rbx	       127	stdio2.h	FUNCTION_27	CALL_1
0x40003b6	      0xbe01000000	                              mov esi, 1	       127	stdio2.h	FUNCTION_27	CALL_1
0x40003bb	    0x488b3d000000	            mov rdi, qword [0x040003c2] 	       127	stdio2.h	FUNCTION_27	CALL_1
0x40003c2	      0xe800000000	                          call 0x40003c7	       127	stdio2.h	FUNCTION_27	CALL_1
0x40003c7	    0x488b35000000	            mov rsi, qword [0x040003ce] 	        97	stdio2.h	CALL_64
0x40003ce	      0xbf0a000000	                            mov edi, 0xa	        97	stdio2.h	CALL_64
0x40003d3	      0xe800000000	                          call 0x40003d8	        97	stdio2.h	CALL_64
0x40003d8	    0x488b3d000000	            mov rdi, qword [0x040003df] 	       256	util.c	FUNCTION_5	CALL_5
0x40003df	      0xe800000000	                          call 0x40003e4	       256	util.c	FUNCTION_5	CALL_5
0x40003e4	      0xe800000000	                          call 0x40003e9	       260	util.c	FUNCTION_5	CALL_7
0x40003e9	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       261	util.c	FUNCTION_5
0x40003ee	    0x644833042528	                xor rax, qword fs:[0x28]	       261	util.c	FUNCTION_5
0x40003f7	            0x7405	                            je 0x40003fe	       261	util.c	FUNCTION_5
0x40003f9	      0xe800000000	                          call 0x40003fe	       261	util.c	FUNCTION_5
0x40003fe	    0x4881c4d00000	                           add rsp, 0xd0	       261	util.c	FUNCTION_5
0x4000405	              0x5b	                                 pop rbx	       261	util.c	FUNCTION_5
0x4000406	              0xc3	                                     ret	       261	util.c	FUNCTION_5
_rl_trace	SWITCH,0:FOR,0:functions,0:IF,1:WHILE,0:ELSE,0:DO,0:CALL,7	47
0x4000785	              0x53	                                push rbx	       482	util.c	FUNCTION_7
0x4000786	    0x4881ecd00000	                           sub rsp, 0xd0	       482	util.c	FUNCTION_7
0x400078d	          0x4889fb	                            mov rbx, rdi	       482	util.c	FUNCTION_7
0x4000790	      0x4889742428	             mov qword [rsp + 0x28], rsi	       482	util.c	FUNCTION_7
0x4000795	      0x4889542430	             mov qword [rsp + 0x30], rdx	       482	util.c	FUNCTION_7
0x400079a	      0x48894c2438	             mov qword [rsp + 0x38], rcx	       482	util.c	FUNCTION_7
0x400079f	      0x4c89442440	              mov qword [rsp + 0x40], r8	       482	util.c	FUNCTION_7
0x40007a4	      0x4c894c2448	              mov qword [rsp + 0x48], r9	       482	util.c	FUNCTION_7
0x40007a9	            0x84c0	                             test al, al	       482	util.c	FUNCTION_7
0x40007ab	            0x7437	                            je 0x40007e4	       482	util.c	FUNCTION_7
0x40007ad	       0xf29442450	       movaps xmmword [rsp + 0x50], xmm0	       482	util.c	FUNCTION_7
0x40007b2	       0xf294c2460	       movaps xmmword [rsp + 0x60], xmm1	       482	util.c	FUNCTION_7
0x40007b7	       0xf29542470	       movaps xmmword [rsp + 0x70], xmm2	       482	util.c	FUNCTION_7
0x40007bc	     0xf299c248000	       movaps xmmword [rsp + 0x80], xmm3	       482	util.c	FUNCTION_7
0x40007c4	     0xf29a4249000	       movaps xmmword [rsp + 0x90], xmm4	       482	util.c	FUNCTION_7
0x40007cc	     0xf29ac24a000	       movaps xmmword [rsp + 0xa0], xmm5	       482	util.c	FUNCTION_7
0x40007d4	     0xf29b424b000	       movaps xmmword [rsp + 0xb0], xmm6	       482	util.c	FUNCTION_7
0x40007dc	     0xf29bc24c000	       movaps xmmword [rsp + 0xc0], xmm7	       482	util.c	FUNCTION_7
0x40007e4	    0x64488b042528	                mov rax, qword fs:[0x28]	       482	util.c	FUNCTION_7
0x40007ed	      0x4889442418	             mov qword [rsp + 0x18], rax	       482	util.c	FUNCTION_7
0x40007f2	            0x31c0	                            xor eax, eax	       482	util.c	FUNCTION_7
0x40007f4	    0xc70424080000	                      mov dword [rsp], 8	       489	util.c	FUNCTION_7	CALL_1
0x40007fb	    0xc74424043000	               mov dword [rsp + 4], 0x30	       489	util.c	FUNCTION_7	CALL_1
0x4000803	    0x488d8424e000	                   lea rax, [rsp + 0xe0]	       489	util.c	FUNCTION_7	CALL_1
0x400080b	      0x4889442408	                mov qword [rsp + 8], rax	       489	util.c	FUNCTION_7	CALL_1
0x4000810	      0x488d442420	                   lea rax, [rsp + 0x20]	       489	util.c	FUNCTION_7	CALL_1
0x4000815	      0x4889442410	             mov qword [rsp + 0x10], rax	       489	util.c	FUNCTION_7	CALL_1
0x400081a	    0x48833d000000	               cmp qword [0x04000822], 0	       495	util.c	FUNCTION_7	IF_1
0x4000822	            0x7505	                           jne 0x4000829	       495	util.c	FUNCTION_7	IF_1
0x4000824	      0xe800000000	                          call 0x4000829	       496	util.c	FUNCTION_7	CALL_4
0x4000829	          0x4889e1	                            mov rcx, rsp	       127	stdio2.h	FUNCTION_27	CALL_1
0x400082c	          0x4889da	                            mov rdx, rbx	       127	stdio2.h	FUNCTION_27	CALL_1
0x400082f	      0xbe01000000	                              mov esi, 1	       127	stdio2.h	FUNCTION_27	CALL_1
0x4000834	    0x488b3d000000	            mov rdi, qword [0x0400083b] 	       127	stdio2.h	FUNCTION_27	CALL_1
0x400083b	      0xe800000000	                          call 0x4000840	       127	stdio2.h	FUNCTION_27	CALL_1
0x4000840	    0x488b35000000	            mov rsi, qword [0x04000847] 	        97	stdio2.h	CALL_64
0x4000847	      0xbf0a000000	                            mov edi, 0xa	        97	stdio2.h	CALL_64
0x400084c	      0xe800000000	                          call 0x4000851	        97	stdio2.h	CALL_64
0x4000851	    0x488b3d000000	            mov rdi, qword [0x04000858] 	       499	util.c	FUNCTION_7	CALL_6
0x4000858	      0xe800000000	                          call 0x400085d	       499	util.c	FUNCTION_7	CALL_6
0x400085d	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       502	util.c	FUNCTION_7
0x4000862	    0x644833042528	                xor rax, qword fs:[0x28]	       502	util.c	FUNCTION_7
0x400086b	            0x7405	                            je 0x4000872	       502	util.c	FUNCTION_7
0x400086d	      0xe800000000	                          call 0x4000872	       502	util.c	FUNCTION_7
0x4000872	    0x4881c4d00000	                           add rsp, 0xd0	       502	util.c	FUNCTION_7
0x4000879	              0x5b	                                 pop rbx	       502	util.c	FUNCTION_7
0x400087a	              0xc3	                                     ret	       502	util.c	FUNCTION_7
_rl_errmsg	SWITCH,0:FOR,0:functions,0:IF,0:WHILE,0:ELSE,0:DO,0:CALL,6	49
0x4000407	              0x53	                                push rbx	       270	util.c	FUNCTION_6
0x4000408	    0x4881ecd00000	                           sub rsp, 0xd0	       270	util.c	FUNCTION_6
0x400040f	          0x4889fb	                            mov rbx, rdi	       270	util.c	FUNCTION_6
0x4000412	      0x4889742428	             mov qword [rsp + 0x28], rsi	       270	util.c	FUNCTION_6
0x4000417	      0x4889542430	             mov qword [rsp + 0x30], rdx	       270	util.c	FUNCTION_6
0x400041c	      0x48894c2438	             mov qword [rsp + 0x38], rcx	       270	util.c	FUNCTION_6
0x4000421	      0x4c89442440	              mov qword [rsp + 0x40], r8	       270	util.c	FUNCTION_6
0x4000426	      0x4c894c2448	              mov qword [rsp + 0x48], r9	       270	util.c	FUNCTION_6
0x400042b	            0x84c0	                             test al, al	       270	util.c	FUNCTION_6
0x400042d	            0x7437	                            je 0x4000466	       270	util.c	FUNCTION_6
0x400042f	       0xf29442450	       movaps xmmword [rsp + 0x50], xmm0	       270	util.c	FUNCTION_6
0x4000434	       0xf294c2460	       movaps xmmword [rsp + 0x60], xmm1	       270	util.c	FUNCTION_6
0x4000439	       0xf29542470	       movaps xmmword [rsp + 0x70], xmm2	       270	util.c	FUNCTION_6
0x400043e	     0xf299c248000	       movaps xmmword [rsp + 0x80], xmm3	       270	util.c	FUNCTION_6
0x4000446	     0xf29a4249000	       movaps xmmword [rsp + 0x90], xmm4	       270	util.c	FUNCTION_6
0x400044e	     0xf29ac24a000	       movaps xmmword [rsp + 0xa0], xmm5	       270	util.c	FUNCTION_6
0x4000456	     0xf29b424b000	       movaps xmmword [rsp + 0xb0], xmm6	       270	util.c	FUNCTION_6
0x400045e	     0xf29bc24c000	       movaps xmmword [rsp + 0xc0], xmm7	       270	util.c	FUNCTION_6
0x4000466	    0x64488b042528	                mov rax, qword fs:[0x28]	       270	util.c	FUNCTION_6
0x400046f	      0x4889442418	             mov qword [rsp + 0x18], rax	       270	util.c	FUNCTION_6
0x4000474	            0x31c0	                            xor eax, eax	       270	util.c	FUNCTION_6
0x4000476	    0xc70424080000	                      mov dword [rsp], 8	       277	util.c	FUNCTION_6	CALL_1
0x400047d	    0xc74424043000	               mov dword [rsp + 4], 0x30	       277	util.c	FUNCTION_6	CALL_1
0x4000485	    0x488d8424e000	                   lea rax, [rsp + 0xe0]	       277	util.c	FUNCTION_6	CALL_1
0x400048d	      0x4889442408	                mov qword [rsp + 8], rax	       277	util.c	FUNCTION_6	CALL_1
0x4000492	      0x488d442420	                   lea rax, [rsp + 0x20]	       277	util.c	FUNCTION_6	CALL_1
0x4000497	      0x4889442410	             mov qword [rsp + 0x10], rax	       277	util.c	FUNCTION_6	CALL_1
0x400049c	    0x488b0d000000	            mov rcx, qword [0x040004a3] 	        97	stdio2.h	CALL_64
0x40004a3	      0xba0a000000	                            mov edx, 0xa	        97	stdio2.h	CALL_64
0x40004a8	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_64
0x40004ad	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_64
0x40004b2	      0xe800000000	                          call 0x40004b7	        97	stdio2.h	CALL_64
0x40004b7	          0x4889e1	                            mov rcx, rsp	       127	stdio2.h	FUNCTION_27	CALL_1
0x40004ba	          0x4889da	                            mov rdx, rbx	       127	stdio2.h	FUNCTION_27	CALL_1
0x40004bd	      0xbe01000000	                              mov esi, 1	       127	stdio2.h	FUNCTION_27	CALL_1
0x40004c2	    0x488b3d000000	            mov rdi, qword [0x040004c9] 	       127	stdio2.h	FUNCTION_27	CALL_1
0x40004c9	      0xe800000000	                          call 0x40004ce	       127	stdio2.h	FUNCTION_27	CALL_1
0x40004ce	    0x488b35000000	            mov rsi, qword [0x040004d5] 	        97	stdio2.h	CALL_64
0x40004d5	      0xbf0a000000	                            mov edi, 0xa	        97	stdio2.h	CALL_64
0x40004da	      0xe800000000	                          call 0x40004df	        97	stdio2.h	CALL_64
0x40004df	    0x488b3d000000	            mov rdi, qword [0x040004e6] 	       286	util.c	FUNCTION_6	CALL_5
0x40004e6	      0xe800000000	                          call 0x40004eb	       286	util.c	FUNCTION_6	CALL_5
0x40004eb	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       289	util.c	FUNCTION_6
0x40004f0	    0x644833042528	                xor rax, qword fs:[0x28]	       289	util.c	FUNCTION_6
0x40004f9	            0x7405	                            je 0x4000500	       289	util.c	FUNCTION_6
0x40004fb	      0xe800000000	                          call 0x4000500	       289	util.c	FUNCTION_6
0x4000500	    0x4881c4d00000	                           add rsp, 0xd0	       289	util.c	FUNCTION_6
0x4000507	              0x5b	                                 pop rbx	       289	util.c	FUNCTION_6
0x4000508	              0xc3	                                     ret	       289	util.c	FUNCTION_6
_rl_tropen	SWITCH,0:FOR,0:functions,0:IF,1:WHILE,0:ELSE,0:DO,0:CALL,7	31
0x40006f1	    0x4881ec980000	                           sub rsp, 0x98	       506	util.c	FUNCTION_8
0x40006f8	    0x64488b042528	                mov rax, qword fs:[0x28]	       506	util.c	FUNCTION_8
0x4000701	    0x488984248800	             mov qword [rsp + 0x88], rax	       506	util.c	FUNCTION_8
0x4000709	            0x31c0	                            xor eax, eax	       506	util.c	FUNCTION_8
0x400070b	    0x488b3d000000	            mov rdi, qword [0x04000712] 	       509	util.c	FUNCTION_8	IF_1
0x4000712	          0x4885ff	                           test rdi, rdi	       509	util.c	FUNCTION_8	IF_1
0x4000715	            0x7405	                            je 0x400071c	       509	util.c	FUNCTION_8	IF_1
0x4000717	      0xe800000000	                          call 0x400071c	       510	util.c	FUNCTION_8	CALL_1
0x400071c	      0xe800000000	                          call 0x4000721	       520	util.c	FUNCTION_8	CALL_5
0x4000721	          0x4189c0	                            mov r8d, eax	       520	util.c	FUNCTION_8	CALL_5
0x4000724	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_22	CALL_1
0x4000729	      0xba80000000	                           mov edx, 0x80	        33	stdio2.h	FUNCTION_22	CALL_1
0x400072e	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_22	CALL_1
0x4000733	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_22	CALL_1
0x4000736	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_22	CALL_1
0x400073b	      0xe800000000	                          call 0x4000740	        33	stdio2.h	FUNCTION_22	CALL_1
0x4000740	          0x4889e7	                            mov rdi, rsp	       522	util.c	FUNCTION_8	CALL_6
0x4000743	      0xe800000000	                          call 0x4000748	       522	util.c	FUNCTION_8	CALL_6
0x4000748	      0xbe00000000	                              mov esi, 0	       523	util.c	FUNCTION_8	CALL_7
0x400074d	          0x4889e7	                            mov rdi, rsp	       523	util.c	FUNCTION_8	CALL_7
0x4000750	      0xe800000000	                          call 0x4000755	       523	util.c	FUNCTION_8	CALL_7
0x4000755	    0x488905000000	            mov qword [0x0400075c], rax 	       523	util.c	FUNCTION_8	CALL_7
0x400075c	          0x4885c0	                           test rax, rax	       524	util.c	FUNCTION_8
0x400075f	           0xf95c0	                                setne al	       524	util.c	FUNCTION_8
0x4000762	           0xfb6c0	                           movzx eax, al	       524	util.c	FUNCTION_8
0x4000765	    0x488b94248800	            mov rdx, qword [rsp + 0x88] 	       525	util.c	FUNCTION_8
0x400076d	    0x644833142528	                xor rdx, qword fs:[0x28]	       525	util.c	FUNCTION_8
0x4000776	            0x7405	                            je 0x400077d	       525	util.c	FUNCTION_8
0x4000778	      0xe800000000	                          call 0x400077d	       525	util.c	FUNCTION_8
0x400077d	    0x4881c4980000	                           add rsp, 0x98	       525	util.c	FUNCTION_8
0x4000784	              0xc3	                                     ret	       525	util.c	FUNCTION_8
_rl_abort_internal	SWITCH,0:FOR,0:functions,0:IF,0:WHILE,1:ELSE,0:DO,0:CALL,7	15
0x40000c5	        0x4883ec08	                              sub rsp, 8	       101	util.c	FUNCTION_3
0x40000c9	      0xe800000000	                          call 0x40000ce	       102	util.c	FUNCTION_3	CALL_1
0x40000ce	      0xe800000000	                          call 0x40000d3	       103	util.c	FUNCTION_3	CALL_2
0x40000d3	      0xe800000000	                          call 0x40000d8	       104	util.c	FUNCTION_3	CALL_3
0x40000d8	      0xe800000000	                          call 0x40000dd	       105	util.c	FUNCTION_3	CALL_4
0x40000dd	    0x812500000000	      and dword [0x040000e7], 0xffffefff	       107	util.c	FUNCTION_3	CALL_5
0x40000e7	    0x48833d000000	               cmp qword [0x040000ef], 0	       108	util.c	FUNCTION_3	WHILE_1
0x40000ef	            0x740f	                            je 0x4000100	       108	util.c	FUNCTION_3	WHILE_1
0x40000f1	      0xe800000000	                          call 0x40000f6	       109	util.c	FUNCTION_3	CALL_6
0x40000f6	    0x48833d000000	               cmp qword [0x040000fe], 0	       108	util.c	FUNCTION_3	WHILE_1
0x40000fe	            0x75f1	                           jne 0x40000f1	       108	util.c	FUNCTION_3	WHILE_1
0x4000100	    0x48c705000000	               mov qword [0x0400010b], 0	       111	util.c	FUNCTION_3
0x400010b	      0xbe01000000	                              mov esi, 1	       112	util.c	FUNCTION_3	CALL_7
0x4000110	      0xbf00000000	                              mov edi, 0	       112	util.c	FUNCTION_3	CALL_7
0x4000115	      0xe800000000	                       call sym.rl_abort	       112	util.c	FUNCTION_3	CALL_7
_rl_walphabetic	SWITCH,0:FOR,0:functions,0:IF,1:WHILE,0:ELSE,0:DO,0:CALL,2	19
0x400008e	              0x53	                                push rbx	        86	util.c	FUNCTION_2
0x400008f	            0x89fb	                            mov ebx, edi	        86	util.c	FUNCTION_2
0x4000091	      0xe800000000	                          call 0x4000096	        89	util.c	FUNCTION_2	IF_1	CALL_1
0x4000096	      0xba01000000	                              mov edx, 1	        90	util.c	FUNCTION_2	IF_1
0x400009b	            0x85c0	                           test eax, eax	        89	util.c	FUNCTION_2	IF_1	CALL_1
0x400009d	            0x7522	                           jne 0x40000c1	        89	util.c	FUNCTION_2	IF_1	CALL_1
0x400009f	    0x8b1500000000	            mov edx, dword [0x040000a5] 	        93	util.c	FUNCTION_2
0x40000a5	            0x85d2	                           test edx, edx	        93	util.c	FUNCTION_2
0x40000a7	            0x7418	                            je 0x40000c1	        93	util.c	FUNCTION_2
0x40000a9	            0x89de	                            mov esi, ebx	        94	util.c	FUNCTION_2	CALL_2
0x40000ab	          0x83e67f	                           and esi, 0x7f	        94	util.c	FUNCTION_2	CALL_2
0x40000ae	      0xbf00000000	                              mov edi, 0	        94	util.c	FUNCTION_2	CALL_2
0x40000b3	      0xe800000000	                          call 0x40000b8	        94	util.c	FUNCTION_2	CALL_2
0x40000b8	          0x4885c0	                           test rax, rax	        90	util.c	FUNCTION_2	IF_1
0x40000bb	           0xf95c2	                                setne dl	        90	util.c	FUNCTION_2	IF_1
0x40000be	           0xfb6d2	                           movzx edx, dl	        90	util.c	FUNCTION_2	IF_1
0x40000c1	            0x89d0	                            mov eax, edx	        95	util.c	FUNCTION_2
0x40000c3	              0x5b	                                 pop rbx	        95	util.c	FUNCTION_2
0x40000c4	              0xc3	                                     ret	        95	util.c	FUNCTION_2
