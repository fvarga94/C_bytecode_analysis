mant_bits_set	functions,0:WHILE,1:CALL,1:SWITCH,0:ELSE,0:DO,0:IF,1:FOR,0	42
0x4000151	            0x4157	                                push r15	       402	floatformat.c	FUNCTION_4
0x4000153	            0x4156	                                push r14	       402	floatformat.c	FUNCTION_4
0x4000155	            0x4155	                                push r13	       402	floatformat.c	FUNCTION_4
0x4000157	            0x4154	                                push r12	       402	floatformat.c	FUNCTION_4
0x4000159	              0x55	                                push rbp	       402	floatformat.c	FUNCTION_4
0x400015a	              0x53	                                push rbx	       402	floatformat.c	FUNCTION_4
0x400015b	        0x448b671c	           mov r12d, dword [rdi + 0x1c] 	       406	floatformat.c	FUNCTION_4
0x400015f	          0x8b5f20	            mov ebx, dword [rdi + 0x20] 	       407	floatformat.c	FUNCTION_4
0x4000162	            0x85db	                           test ebx, ebx	       408	floatformat.c	FUNCTION_4	WHILE_1
0x4000164	            0x7e42	                           jle 0x40001a8	       408	floatformat.c	FUNCTION_4	WHILE_1
0x4000166	          0x4989f5	                            mov r13, rsi	       408	floatformat.c	FUNCTION_4	WHILE_1
0x4000169	        0x448b7f04	               mov r15d, dword [rdi + 4]	       412	floatformat.c	FUNCTION_4	WHILE_1	IF_1	CALL_1
0x400016d	          0x448b37	                   mov r14d, dword [rdi]	       412	floatformat.c	FUNCTION_4	WHILE_1	IF_1	CALL_1
0x4000170	          0x83fb20	                           cmp ebx, 0x20	       410	floatformat.c	FUNCTION_4	WHILE_1
0x4000173	      0xbd20000000	                           mov ebp, 0x20	       410	floatformat.c	FUNCTION_4	WHILE_1
0x4000178	           0xf4eeb	                         cmovle ebp, ebx	       410	floatformat.c	FUNCTION_4	WHILE_1
0x400017b	          0x4189e8	                            mov r8d, ebp	       412	floatformat.c	FUNCTION_4	WHILE_1	IF_1	CALL_1
0x400017e	          0x4489e1	                           mov ecx, r12d	       412	floatformat.c	FUNCTION_4	WHILE_1	IF_1	CALL_1
0x4000181	          0x4489fa	                           mov edx, r15d	       412	floatformat.c	FUNCTION_4	WHILE_1	IF_1	CALL_1
0x4000184	          0x4489f6	                           mov esi, r14d	       412	floatformat.c	FUNCTION_4	WHILE_1	IF_1	CALL_1
0x4000187	          0x4c89ef	                            mov rdi, r13	       412	floatformat.c	FUNCTION_4	WHILE_1	IF_1	CALL_1
0x400018a	      0xe8b7feffff	                      call sym.get_field	       412	floatformat.c	FUNCTION_4	WHILE_1	IF_1	CALL_1
0x400018f	          0x4885c0	                           test rax, rax	       412	floatformat.c	FUNCTION_4	WHILE_1	IF_1	CALL_1
0x4000192	            0x751b	                           jne 0x40001af	       412	floatformat.c	FUNCTION_4	WHILE_1	IF_1	CALL_1
0x4000194	          0x4101ec	                           add r12d, ebp	       416	floatformat.c	FUNCTION_4	WHILE_1
0x4000197	            0x89d8	                            mov eax, ebx	       417	floatformat.c	FUNCTION_4	WHILE_1
0x4000199	            0x29e8	                            sub eax, ebp	       417	floatformat.c	FUNCTION_4	WHILE_1
0x400019b	            0x89c3	                            mov ebx, eax	       417	floatformat.c	FUNCTION_4	WHILE_1
0x400019d	            0x85c0	                           test eax, eax	       408	floatformat.c	FUNCTION_4	WHILE_1
0x400019f	            0x7fcf	                            jg 0x4000170	       408	floatformat.c	FUNCTION_4	WHILE_1
0x40001a1	      0xb800000000	                              mov eax, 0	       419	floatformat.c	FUNCTION_4
0x40001a6	            0xeb0c	                           jmp 0x40001b4	       419	floatformat.c	FUNCTION_4
0x40001a8	      0xb800000000	                              mov eax, 0	       419	floatformat.c	FUNCTION_4
0x40001ad	            0xeb05	                           jmp 0x40001b4	       419	floatformat.c	FUNCTION_4
0x40001af	      0xb801000000	                              mov eax, 1	       414	floatformat.c	FUNCTION_4	WHILE_1	IF_1
0x40001b4	              0x5b	                                 pop rbx	       420	floatformat.c	FUNCTION_4
0x40001b5	              0x5d	                                 pop rbp	       420	floatformat.c	FUNCTION_4
0x40001b6	            0x415c	                                 pop r12	       420	floatformat.c	FUNCTION_4
0x40001b8	            0x415d	                                 pop r13	       420	floatformat.c	FUNCTION_4
0x40001ba	            0x415e	                                 pop r14	       420	floatformat.c	FUNCTION_4
0x40001bc	            0x415f	                                 pop r15	       420	floatformat.c	FUNCTION_4
0x40001be	              0xc3	                                     ret	       420	floatformat.c	FUNCTION_4
floatformat_i387_ext_is_valid	functions,0:WHILE,0:CALL,2:SWITCH,0:ELSE,1:DO,0:IF,1:FOR,0	35
0x40000f0	            0x4156	                                push r14	       175	floatformat.c	FUNCTION_2
0x40000f2	            0x4155	                                push r13	       175	floatformat.c	FUNCTION_2
0x40000f4	            0x4154	                                push r12	       175	floatformat.c	FUNCTION_2
0x40000f6	              0x55	                                push rbp	       175	floatformat.c	FUNCTION_2
0x40000f7	              0x53	                                push rbx	       175	floatformat.c	FUNCTION_2
0x40000f8	          0x4889fb	                            mov rbx, rdi	       175	floatformat.c	FUNCTION_2
0x40000fb	          0x4889f5	                            mov rbp, rsi	       175	floatformat.c	FUNCTION_2
0x40000fe	        0x448b6f04	               mov r13d, dword [rdi + 4]	       183	floatformat.c	FUNCTION_2	CALL_1
0x4000102	          0x448b27	                   mov r12d, dword [rdi]	       183	floatformat.c	FUNCTION_2	CALL_1
0x4000105	          0x8b4f0c	              mov ecx, dword [rdi + 0xc]	       183	floatformat.c	FUNCTION_2	CALL_1
0x4000108	        0x448b4710	            mov r8d, dword [rdi + 0x10] 	       183	floatformat.c	FUNCTION_2	CALL_1
0x400010c	          0x4489ea	                           mov edx, r13d	       183	floatformat.c	FUNCTION_2	CALL_1
0x400010f	          0x4489e6	                           mov esi, r12d	       183	floatformat.c	FUNCTION_2	CALL_1
0x4000112	          0x4889ef	                            mov rdi, rbp	       183	floatformat.c	FUNCTION_2	CALL_1
0x4000115	      0xe82cffffff	                      call sym.get_field	       183	floatformat.c	FUNCTION_2	CALL_1
0x400011a	          0x4989c6	                            mov r14, rax	       183	floatformat.c	FUNCTION_2	CALL_1
0x400011d	          0x8b4b1c	            mov ecx, dword [rbx + 0x1c] 	       185	floatformat.c	FUNCTION_2	CALL_2
0x4000120	    0x41b801000000	                              mov r8d, 1	       185	floatformat.c	FUNCTION_2	CALL_2
0x4000126	          0x4489ea	                           mov edx, r13d	       185	floatformat.c	FUNCTION_2	CALL_2
0x4000129	          0x4489e6	                           mov esi, r12d	       185	floatformat.c	FUNCTION_2	CALL_2
0x400012c	          0x4889ef	                            mov rdi, rbp	       185	floatformat.c	FUNCTION_2	CALL_2
0x400012f	      0xe812ffffff	                      call sym.get_field	       185	floatformat.c	FUNCTION_2	CALL_2
0x4000134	          0x4d85f6	                           test r14, r14	       185	floatformat.c	FUNCTION_2	CALL_2
0x4000137	           0xf94c2	                                 sete dl	       185	floatformat.c	FUNCTION_2	CALL_2
0x400013a	          0x4885c0	                           test rax, rax	       185	floatformat.c	FUNCTION_2	CALL_2
0x400013d	           0xf94c0	                                 sete al	       185	floatformat.c	FUNCTION_2	CALL_2
0x4000140	            0x38c2	                              cmp dl, al	       185	floatformat.c	FUNCTION_2	CALL_2
0x4000142	           0xf94c0	                                 sete al	       185	floatformat.c	FUNCTION_2	CALL_2
0x4000145	           0xfb6c0	                           movzx eax, al	       185	floatformat.c	FUNCTION_2	CALL_2
0x4000148	              0x5b	                                 pop rbx	       192	floatformat.c	FUNCTION_2	ELSE_1
0x4000149	              0x5d	                                 pop rbp	       192	floatformat.c	FUNCTION_2	ELSE_1
0x400014a	            0x415c	                                 pop r12	       192	floatformat.c	FUNCTION_2	ELSE_1
0x400014c	            0x415d	                                 pop r13	       192	floatformat.c	FUNCTION_2	ELSE_1
0x400014e	            0x415e	                                 pop r14	       192	floatformat.c	FUNCTION_2	ELSE_1
0x4000150	              0xc3	                                     ret	       192	floatformat.c	FUNCTION_2	ELSE_1
floatformat_is_valid	functions,0:WHILE,0:CALL,1:SWITCH,0:ELSE,0:DO,0:IF,0:FOR,0	4
0x40008bc	        0x4883ec08	                              sub rsp, 8	       704	floatformat.c	FUNCTION_9
0x40008c0	          0xff5730	                 call qword [rdi + 0x30]	       705	floatformat.c	FUNCTION_9	CALL_1
0x40008c3	        0x4883c408	                              add rsp, 8	       706	floatformat.c	FUNCTION_9
0x40008c7	              0xc3	                                     ret	       706	floatformat.c	FUNCTION_9
get_field	functions,0:WHILE,0:CALL,0:SWITCH,0:ELSE,1:DO,1:IF,1:FOR,0	56
0x4000046	            0x4156	                                push r14	       427	floatformat.c	FUNCTION_5
0x4000048	              0x55	                                push rbp	       427	floatformat.c	FUNCTION_5
0x4000049	              0x53	                                push rbx	       427	floatformat.c	FUNCTION_5
0x400004a	            0x85f6	                           test esi, esi	       431	floatformat.c	FUNCTION_5
0x400004c	            0x746b	                            je 0x40000b9	       431	floatformat.c	FUNCTION_5
0x400004e	            0xeb7f	                           jmp 0x40000cf	       431	floatformat.c	FUNCTION_5
0x4000050	          0x83e107	                              and ecx, 7	       442	floatformat.c	FUNCTION_5
0x4000053	        0x428d3401	                     lea esi, [rcx + r8]	       443	floatformat.c	FUNCTION_5
0x4000057	          0x83fe08	                              cmp esi, 8	       443	floatformat.c	FUNCTION_5
0x400005a	      0xb808000000	                              mov eax, 8	       443	floatformat.c	FUNCTION_5
0x400005f	           0xf47f0	                          cmova esi, eax	       443	floatformat.c	FUNCTION_5
0x4000062	    0x41ba00000000	                             mov r10d, 0	       430	floatformat.c	FUNCTION_5
0x4000068	      0xb800000000	                              mov eax, 0	       428	floatformat.c	FUNCTION_5
0x400006d	      0xbd01000000	                              mov ebp, 1	       450	floatformat.c	FUNCTION_5	DO_1
0x4000072	      0xbb08000000	                              mov ebx, 8	       455	floatformat.c	FUNCTION_5	DO_1
0x4000077	            0x29ce	                            sub esi, ecx	       448	floatformat.c	FUNCTION_5	DO_1
0x4000079	          0x4489ca	                            mov edx, r9d	       447	floatformat.c	FUNCTION_5	DO_1
0x400007c	         0xfb61417	             movzx edx, byte [rdi + rdx]	       450	floatformat.c	FUNCTION_5	DO_1
0x4000080	            0xd3fa	                             sar edx, cl	       450	floatformat.c	FUNCTION_5	DO_1
0x4000082	          0x4189ee	                           mov r14d, ebp	       450	floatformat.c	FUNCTION_5	DO_1
0x4000085	            0x89f1	                            mov ecx, esi	       450	floatformat.c	FUNCTION_5	DO_1
0x4000087	          0x41d3e6	                            shl r14d, cl	       450	floatformat.c	FUNCTION_5	DO_1
0x400008a	          0x4489f1	                           mov ecx, r14d	       450	floatformat.c	FUNCTION_5	DO_1
0x400008d	          0x83e901	                              sub ecx, 1	       450	floatformat.c	FUNCTION_5	DO_1
0x4000090	            0x21ca	                            and edx, ecx	       450	floatformat.c	FUNCTION_5	DO_1
0x4000092	          0x4489d1	                           mov ecx, r10d	       450	floatformat.c	FUNCTION_5	DO_1
0x4000095	            0xd3e2	                             shl edx, cl	       450	floatformat.c	FUNCTION_5	DO_1
0x4000097	          0x4809d0	                             or rax, rdx	       450	floatformat.c	FUNCTION_5	DO_1
0x400009a	          0x4129f0	                            sub r8d, esi	       451	floatformat.c	FUNCTION_5	DO_1
0x400009d	          0x4101f2	                           add r10d, esi	       452	floatformat.c	FUNCTION_5	DO_1
0x40000a0	          0x4501d9	                           add r9d, r11d	       452	floatformat.c	FUNCTION_5	DO_1
0x40000a3	        0x4183f808	                              cmp r8d, 8	       455	floatformat.c	FUNCTION_5	DO_1
0x40000a7	            0x89de	                            mov esi, ebx	       455	floatformat.c	FUNCTION_5	DO_1
0x40000a9	        0x410f46f0	                         cmovbe esi, r8d	       455	floatformat.c	FUNCTION_5	DO_1
0x40000ad	      0xb900000000	                              mov ecx, 0	       454	floatformat.c	FUNCTION_5	DO_1
0x40000b2	          0x4585c0	                           test r8d, r8d	       457	floatformat.c	FUNCTION_5
0x40000b5	            0x75c0	                           jne 0x4000077	       457	floatformat.c	FUNCTION_5
0x40000b7	            0xeb32	                           jmp 0x40000eb	       457	floatformat.c	FUNCTION_5
0x40000b9	          0x4429c2	                            sub edx, r8d	       434	floatformat.c	FUNCTION_5
0x40000bc	            0x29ca	                            sub edx, ecx	       434	floatformat.c	FUNCTION_5
0x40000be	            0x89d1	                            mov ecx, edx	       434	floatformat.c	FUNCTION_5
0x40000c0	          0x4189d1	                            mov r9d, edx	       438	floatformat.c	FUNCTION_5	IF_1
0x40000c3	        0x41c1e903	                              shr r9d, 3	       438	floatformat.c	FUNCTION_5	IF_1
0x40000c7	    0x41bb01000000	                             mov r11d, 1	       431	floatformat.c	FUNCTION_5
0x40000cd	            0xeb81	                           jmp 0x4000050	       431	floatformat.c	FUNCTION_5
0x40000cf	        0x468d0c01	                     lea r9d, [rcx + r8]	       434	floatformat.c	FUNCTION_5
0x40000d3	          0x4429ca	                            sub edx, r9d	       434	floatformat.c	FUNCTION_5
0x40000d6	            0x89d1	                            mov ecx, edx	       434	floatformat.c	FUNCTION_5
0x40000d8	        0x4183e901	                              sub r9d, 1	       440	floatformat.c	FUNCTION_5	ELSE_1
0x40000dc	        0x41c1e903	                              shr r9d, 3	       440	floatformat.c	FUNCTION_5	ELSE_1
0x40000e0	    0x41bbffffffff	                    mov r11d, 0xffffffff	       431	floatformat.c	FUNCTION_5
0x40000e6	      0xe965ffffff	                           jmp 0x4000050	       431	floatformat.c	FUNCTION_5
0x40000eb	              0x5b	                                 pop rbx	       460	floatformat.c	FUNCTION_5
0x40000ec	              0x5d	                                 pop rbp	       460	floatformat.c	FUNCTION_5
0x40000ed	            0x415e	                                 pop r14	       460	floatformat.c	FUNCTION_5
0x40000ef	              0xc3	                                     ret	       460	floatformat.c	FUNCTION_5
floatformat_to_double	functions,0:WHILE,1:CALL,7:SWITCH,0:ELSE,3:DO,0:IF,6:FOR,0	123
0x400046f	            0x4157	                                push r15	       469	floatformat.c	FUNCTION_6
0x4000471	            0x4156	                                push r14	       469	floatformat.c	FUNCTION_6
0x4000473	            0x4155	                                push r13	       469	floatformat.c	FUNCTION_6
0x4000475	            0x4154	                                push r12	       469	floatformat.c	FUNCTION_6
0x4000477	              0x55	                                push rbp	       469	floatformat.c	FUNCTION_6
0x4000478	              0x53	                                push rbx	       469	floatformat.c	FUNCTION_6
0x4000479	        0x4883ec18	                           sub rsp, 0x18	       469	floatformat.c	FUNCTION_6
0x400047d	          0x4989fd	                            mov r13, rdi	       469	floatformat.c	FUNCTION_6
0x4000480	          0x4989f7	                            mov r15, rsi	       469	floatformat.c	FUNCTION_6
0x4000483	      0x4889542408	                mov qword [rsp + 8], rdx	       469	floatformat.c	FUNCTION_6
0x4000488	          0x8b6f04	                mov ebp, dword [rdi + 4]	       481	floatformat.c	FUNCTION_6	CALL_1
0x400048b	            0x8b1f	                    mov ebx, dword [rdi]	       481	floatformat.c	FUNCTION_6	CALL_1
0x400048d	          0x8b4f0c	              mov ecx, dword [rdi + 0xc]	       481	floatformat.c	FUNCTION_6	CALL_1
0x4000490	        0x448b4710	            mov r8d, dword [rdi + 0x10] 	       481	floatformat.c	FUNCTION_6	CALL_1
0x4000494	            0x89ea	                            mov edx, ebp	       481	floatformat.c	FUNCTION_6	CALL_1
0x4000496	            0x89de	                            mov esi, ebx	       481	floatformat.c	FUNCTION_6	CALL_1
0x4000498	          0x4c89ff	                            mov rdi, r15	       481	floatformat.c	FUNCTION_6	CALL_1
0x400049b	      0xe8a6fbffff	                      call sym.get_field	       481	floatformat.c	FUNCTION_6	CALL_1
0x40004a0	        0x418b5518	            mov edx, dword [r13 + 0x18] 	       487	floatformat.c	FUNCTION_6	IF_1
0x40004a4	          0x4839d0	                            cmp rax, rdx	       487	floatformat.c	FUNCTION_6	IF_1
0x40004a7	            0x7550	                           jne 0x40004f9	       487	floatformat.c	FUNCTION_6	IF_1
0x40004a9	          0x4c89fe	                            mov rsi, r15	       489	floatformat.c	FUNCTION_6	IF_1	CALL_2
0x40004ac	          0x4c89ef	                            mov rdi, r13	       489	floatformat.c	FUNCTION_6	IF_1	CALL_2
0x40004af	      0xe89dfcffff	                  call sym.mant_bits_set	       489	floatformat.c	FUNCTION_6	IF_1	CALL_2
0x40004b4	    0x49bc00000000	         movabs r12, 0x7ff8000000000000 	       499	floatformat.c	FUNCTION_6	IF_1	IF_2
0x40004be	            0x85c0	                           test eax, eax	       498	floatformat.c	FUNCTION_6	IF_1	IF_2
0x40004c0	            0x750a	                           jne 0x40004cc	       498	floatformat.c	FUNCTION_6	IF_1	IF_2
0x40004c2	    0x49bc00000000	         movabs r12, 0x7ff0000000000000 	       501	floatformat.c	FUNCTION_6	IF_1	ELSE_1
0x40004cc	        0x418b4d08	                mov ecx, dword [r13 + 8]	       503	floatformat.c	FUNCTION_6	IF_1	IF_3	CALL_3
0x40004d0	    0x41b801000000	                              mov r8d, 1	       503	floatformat.c	FUNCTION_6	IF_1	IF_3	CALL_3
0x40004d6	            0x89ea	                            mov edx, ebp	       503	floatformat.c	FUNCTION_6	IF_1	IF_3	CALL_3
0x40004d8	            0x89de	                            mov esi, ebx	       503	floatformat.c	FUNCTION_6	IF_1	IF_3	CALL_3
0x40004da	          0x4c89ff	                            mov rdi, r15	       503	floatformat.c	FUNCTION_6	IF_1	IF_3	CALL_3
0x40004dd	      0xe864fbffff	                      call sym.get_field	       503	floatformat.c	FUNCTION_6	IF_1	IF_3	CALL_3
0x40004e2	          0x4885c0	                           test rax, rax	       503	floatformat.c	FUNCTION_6	IF_1	IF_3	CALL_3
0x40004e5	            0x7405	                            je 0x40004ec	       503	floatformat.c	FUNCTION_6	IF_1	IF_3	CALL_3
0x40004e7	      0x490fbafc3f	                           btc r12, 0x3f	       504	floatformat.c	FUNCTION_6	IF_1	IF_3
0x40004ec	      0x488b442408	                mov rax, qword [rsp + 8]	       506	floatformat.c	FUNCTION_6	IF_1
0x40004f1	          0x4c8920	                    mov qword [rax], r12	       506	floatformat.c	FUNCTION_6	IF_1
0x40004f4	      0xe915010000	                           jmp 0x400060e	       508	floatformat.c	FUNCTION_6	IF_1
0x40004f9	        0x418b6d20	            mov ebp, dword [r13 + 0x20] 	       511	floatformat.c	FUNCTION_6
0x40004fd	        0x458b751c	           mov r14d, dword [r13 + 0x1c] 	       512	floatformat.c	FUNCTION_6
0x4000501	          0x4885c0	                           test rax, rax	       519	floatformat.c	FUNCTION_6	IF_4
0x4000504	            0x751f	                           jne 0x4000525	       519	floatformat.c	FUNCTION_6	IF_4
0x4000506	    0x41bc01000000	                             mov r12d, 1	       520	floatformat.c	FUNCTION_6	IF_4
0x400050c	        0x452b6514	            sub r12d, dword [r13 + 0x14]	       520	floatformat.c	FUNCTION_6	IF_4
0x4000510	          0x4d63e4	                        movsxd r12, r12d	       520	floatformat.c	FUNCTION_6	IF_4
0x4000513	        0x660fefe4	                         pxor xmm4, xmm4	       513	floatformat.c	FUNCTION_6
0x4000517	      0xf20f112424	                 movsd qword [rsp], xmm4	       513	floatformat.c	FUNCTION_6
0x400051c	            0x85ed	                           test ebp, ebp	       535	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1
0x400051e	            0x7f3b	                            jg 0x400055b	       535	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1
0x4000520	      0xe9a6000000	                           jmp 0x40005cb	       535	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1
0x4000525	        0x49635514	         movsxd rdx, dword [r13 + 0x14] 	       523	floatformat.c	FUNCTION_6	ELSE_2
0x4000529	          0x4829d0	                            sub rax, rdx	       523	floatformat.c	FUNCTION_6	ELSE_2
0x400052c	          0x4989c4	                            mov r12, rax	       523	floatformat.c	FUNCTION_6	ELSE_2
0x400052f	      0x41837d2401	               cmp dword [r13 + 0x24], 1	       529	floatformat.c	FUNCTION_6	ELSE_2	IF_5
0x4000534	            0x7516	                           jne 0x400054c	       529	floatformat.c	FUNCTION_6	ELSE_2	IF_5
0x4000536	            0x89c7	                            mov edi, eax	       530	floatformat.c	FUNCTION_6	ELSE_2	CALL_4
0x4000538	    0xf20f10050000	         movsd xmm0, qword [0x04000540] 	       530	floatformat.c	FUNCTION_6	ELSE_2	CALL_4
0x4000540	      0xe800000000	                          call 0x4000545	       530	floatformat.c	FUNCTION_6	ELSE_2	CALL_4
0x4000545	      0xf20f110424	                 movsd qword [rsp], xmm0	       530	floatformat.c	FUNCTION_6	ELSE_2	CALL_4
0x400054a	            0xebd0	                           jmp 0x400051c	       530	floatformat.c	FUNCTION_6	ELSE_2	CALL_4
0x400054c	        0x4983c401	                              add r12, 1	       532	floatformat.c	FUNCTION_6	ELSE_2	ELSE_3
0x4000550	        0x660fefed	                         pxor xmm5, xmm5	       513	floatformat.c	FUNCTION_6
0x4000554	      0xf20f112c24	                 movsd qword [rsp], xmm5	       513	floatformat.c	FUNCTION_6
0x4000559	            0xebc1	                           jmp 0x400051c	       513	floatformat.c	FUNCTION_6
0x400055b	          0x83fd20	                           cmp ebp, 0x20	       537	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1
0x400055e	      0xbb20000000	                           mov ebx, 0x20	       537	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1
0x4000563	           0xf4edd	                         cmovle ebx, ebp	       537	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1
0x4000566	        0x418b5504	                mov edx, dword [r13 + 4]	       539	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1	CALL_5
0x400056a	          0x4189d8	                            mov r8d, ebx	       539	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1	CALL_5
0x400056d	          0x4489f1	                           mov ecx, r14d	       539	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1	CALL_5
0x4000570	        0x418b7500	                    mov esi, dword [r13]	       539	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1	CALL_5
0x4000574	          0x4c89ff	                            mov rdi, r15	       539	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1	CALL_5
0x4000577	      0xe8cafaffff	                      call sym.get_field	       539	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1	CALL_5
0x400057c	          0x4489e7	                           mov edi, r12d	       542	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1	CALL_6
0x400057f	            0x29df	                            sub edi, ebx	       542	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1	CALL_6
0x4000581	          0x4885c0	                           test rax, rax	       542	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1	CALL_6
0x4000584	            0x780b	                            js 0x4000591	       542	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1	CALL_6
0x4000586	        0x660fefc0	                         pxor xmm0, xmm0	       542	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1	CALL_6
0x400058a	      0xf2480f2ac0	                      cvtsi2sd xmm0, rax	       542	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1	CALL_6
0x400058f	            0xeb19	                           jmp 0x40005aa	       542	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1	CALL_6
0x4000591	          0x4889c2	                            mov rdx, rax	       542	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1	CALL_6
0x4000594	          0x48d1ea	                              shr rdx, 1	       542	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1	CALL_6
0x4000597	          0x83e001	                              and eax, 1	       542	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1	CALL_6
0x400059a	          0x4809c2	                             or rdx, rax	       542	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1	CALL_6
0x400059d	        0x660fefc0	                         pxor xmm0, xmm0	       542	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1	CALL_6
0x40005a1	      0xf2480f2ac2	                      cvtsi2sd xmm0, rdx	       542	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1	CALL_6
0x40005a6	        0xf20f58c0	                        addsd xmm0, xmm0	       542	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1	CALL_6
0x40005aa	      0xe800000000	                          call 0x40005af	       542	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1	CALL_6
0x40005af	      0xf20f580424	                 addsd xmm0, qword [rsp]	       542	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1	CALL_6
0x40005b4	      0xf20f110424	                 movsd qword [rsp], xmm0	       542	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1	CALL_6
0x40005b9	            0x89d8	                            mov eax, ebx	       543	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1
0x40005bb	          0x4929c4	                            sub r12, rax	       543	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1
0x40005be	          0x4101de	                           add r14d, ebx	       544	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1
0x40005c1	            0x89e8	                            mov eax, ebp	       545	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1
0x40005c3	            0x29d8	                            sub eax, ebx	       545	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1
0x40005c5	            0x89c5	                            mov ebp, eax	       545	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1
0x40005c7	            0x85c0	                           test eax, eax	       535	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1
0x40005c9	            0x7f90	                            jg 0x400055b	       535	floatformat.c	FUNCTION_6	ELSE_3	WHILE_1
0x40005cb	        0x418b4d08	                mov ecx, dword [r13 + 8]	       549	floatformat.c	FUNCTION_6	IF_6	CALL_7
0x40005cf	        0x418b5504	                mov edx, dword [r13 + 4]	       549	floatformat.c	FUNCTION_6	IF_6	CALL_7
0x40005d3	    0x41b801000000	                              mov r8d, 1	       549	floatformat.c	FUNCTION_6	IF_6	CALL_7
0x40005d9	        0x418b7500	                    mov esi, dword [r13]	       549	floatformat.c	FUNCTION_6	IF_6	CALL_7
0x40005dd	          0x4c89ff	                            mov rdi, r15	       549	floatformat.c	FUNCTION_6	IF_6	CALL_7
0x40005e0	      0xe861faffff	                      call sym.get_field	       549	floatformat.c	FUNCTION_6	IF_6	CALL_7
0x40005e5	          0x4885c0	                           test rax, rax	       549	floatformat.c	FUNCTION_6	IF_6	CALL_7
0x40005e8	            0x7416	                            je 0x4000600	       549	floatformat.c	FUNCTION_6	IF_6	CALL_7
0x40005ea	    0xf20f10050000	         movsd xmm0, qword [0x040005f2] 	       550	floatformat.c	FUNCTION_6	IF_6
0x40005f2	      0xf20f101c24	                 movsd xmm3, qword [rsp]	       550	floatformat.c	FUNCTION_6	IF_6
0x40005f7	        0x660f57d8	                        xorpd xmm3, xmm0	       550	floatformat.c	FUNCTION_6	IF_6
0x40005fb	      0xf20f111c24	                 movsd qword [rsp], xmm3	       550	floatformat.c	FUNCTION_6	IF_6
0x4000600	      0x488b442408	                mov rax, qword [rsp + 8]	       551	floatformat.c	FUNCTION_6
0x4000605	      0xf20f101424	                 movsd xmm2, qword [rsp]	       551	floatformat.c	FUNCTION_6
0x400060a	        0xf20f1110	                 movsd qword [rax], xmm2	       551	floatformat.c	FUNCTION_6
0x400060e	        0x4883c418	                           add rsp, 0x18	       552	floatformat.c	FUNCTION_6
0x4000612	              0x5b	                                 pop rbx	       552	floatformat.c	FUNCTION_6
0x4000613	              0x5d	                                 pop rbp	       552	floatformat.c	FUNCTION_6
0x4000614	            0x415c	                                 pop r12	       552	floatformat.c	FUNCTION_6
0x4000616	            0x415d	                                 pop r13	       552	floatformat.c	FUNCTION_6
0x4000618	            0x415e	                                 pop r14	       552	floatformat.c	FUNCTION_6
0x400061a	            0x415f	                                 pop r15	       552	floatformat.c	FUNCTION_6
0x400061c	              0xc3	                                     ret	       552	floatformat.c	FUNCTION_6
floatformat_always_valid	functions,0:WHILE,0:CALL,0:SWITCH,0:ELSE,0:DO,0:IF,0:FOR,0	2
0x4000040	      0xb801000000	                              mov eax, 1	        74	floatformat.c	FUNCTION_1
0x4000045	              0xc3	                                     ret	        74	floatformat.c	FUNCTION_1
put_field	functions,0:WHILE,0:CALL,0:SWITCH,0:ELSE,1:DO,1:IF,1:FOR,0	61
0x40003c5	            0x4156	                                push r14	       566	floatformat.c	FUNCTION_7
0x40003c7	            0x4155	                                push r13	       566	floatformat.c	FUNCTION_7
0x40003c9	            0x4154	                                push r12	       566	floatformat.c	FUNCTION_7
0x40003cb	              0x55	                                push rbp	       566	floatformat.c	FUNCTION_7
0x40003cc	              0x53	                                push rbx	       566	floatformat.c	FUNCTION_7
0x40003cd	            0x85f6	                           test esi, esi	       569	floatformat.c	FUNCTION_7
0x40003cf	            0x746f	                            je 0x4000440	       569	floatformat.c	FUNCTION_7
0x40003d1	            0xeb7e	                           jmp 0x4000451	       569	floatformat.c	FUNCTION_7
0x40003d3	          0x83e207	                              and edx, 7	       580	floatformat.c	FUNCTION_7
0x40003d6	        0x428d3402	                     lea esi, [rdx + r8]	       581	floatformat.c	FUNCTION_7
0x40003da	          0x83fe08	                              cmp esi, 8	       581	floatformat.c	FUNCTION_7
0x40003dd	      0xb808000000	                              mov eax, 8	       581	floatformat.c	FUNCTION_7
0x40003e2	           0xf47f0	                          cmova esi, eax	       581	floatformat.c	FUNCTION_7
0x40003e5	    0x41bd01000000	                             mov r13d, 1	       588	floatformat.c	FUNCTION_7	DO_1
0x40003eb	    0x41bc08000000	                             mov r12d, 8	       593	floatformat.c	FUNCTION_7	DO_1
0x40003f1	          0x4189da	                           mov r10d, ebx	       585	floatformat.c	FUNCTION_7	DO_1
0x40003f4	          0x4901fa	                            add r10, rdi	       585	floatformat.c	FUNCTION_7	DO_1
0x40003f7	            0x29d6	                            sub esi, edx	       586	floatformat.c	FUNCTION_7	DO_1
0x40003f9	        0x450fb61a	                  movzx r11d, byte [r10]	       588	floatformat.c	FUNCTION_7	DO_1
0x40003fd	          0x4489e8	                           mov eax, r13d	       588	floatformat.c	FUNCTION_7	DO_1
0x4000400	            0x89f1	                            mov ecx, esi	       588	floatformat.c	FUNCTION_7	DO_1
0x4000402	            0xd3e0	                             shl eax, cl	       588	floatformat.c	FUNCTION_7	DO_1
0x4000404	          0x8d40ff	                      lea eax, [rax - 1]	       588	floatformat.c	FUNCTION_7	DO_1
0x4000407	            0x89d1	                            mov ecx, edx	       588	floatformat.c	FUNCTION_7	DO_1
0x4000409	            0xd3e0	                             shl eax, cl	       588	floatformat.c	FUNCTION_7	DO_1
0x400040b	          0x4d89ce	                             mov r14, r9	       588	floatformat.c	FUNCTION_7	DO_1
0x400040e	          0x49d3e6	                             shl r14, cl	       588	floatformat.c	FUNCTION_7	DO_1
0x4000411	          0x4c89f2	                            mov rdx, r14	       588	floatformat.c	FUNCTION_7	DO_1
0x4000414	          0x4431da	                           xor edx, r11d	       588	floatformat.c	FUNCTION_7	DO_1
0x4000417	            0x21d0	                            and eax, edx	       588	floatformat.c	FUNCTION_7	DO_1
0x4000419	          0x4431d8	                           xor eax, r11d	       588	floatformat.c	FUNCTION_7	DO_1
0x400041c	          0x418802	                      mov byte [r10], al	       588	floatformat.c	FUNCTION_7	DO_1
0x400041f	            0x89f1	                            mov ecx, esi	       589	floatformat.c	FUNCTION_7	DO_1
0x4000421	          0x49d3e9	                              shr r9, cl	       589	floatformat.c	FUNCTION_7	DO_1
0x4000424	          0x4129f0	                            sub r8d, esi	       590	floatformat.c	FUNCTION_7	DO_1
0x4000427	             0x1eb	                            add ebx, ebp	       590	floatformat.c	FUNCTION_7	DO_1
0x4000429	        0x4183f808	                              cmp r8d, 8	       593	floatformat.c	FUNCTION_7	DO_1
0x400042d	          0x4489e6	                           mov esi, r12d	       593	floatformat.c	FUNCTION_7	DO_1
0x4000430	        0x410f46f0	                         cmovbe esi, r8d	       593	floatformat.c	FUNCTION_7	DO_1
0x4000434	      0xba00000000	                              mov edx, 0	       592	floatformat.c	FUNCTION_7	DO_1
0x4000439	          0x4585c0	                           test r8d, r8d	       595	floatformat.c	FUNCTION_7
0x400043c	            0x75b3	                           jne 0x40003f1	       595	floatformat.c	FUNCTION_7
0x400043e	            0xeb26	                           jmp 0x4000466	       595	floatformat.c	FUNCTION_7
0x4000440	          0x4429c2	                            sub edx, r8d	       572	floatformat.c	FUNCTION_7
0x4000443	            0x29ca	                            sub edx, ecx	       572	floatformat.c	FUNCTION_7
0x4000445	            0x89d3	                            mov ebx, edx	       576	floatformat.c	FUNCTION_7	IF_1
0x4000447	          0xc1eb03	                              shr ebx, 3	       576	floatformat.c	FUNCTION_7	IF_1
0x400044a	      0xbd01000000	                              mov ebp, 1	       569	floatformat.c	FUNCTION_7
0x400044f	            0xeb82	                           jmp 0x40003d3	       569	floatformat.c	FUNCTION_7
0x4000451	          0x4401c1	                            add ecx, r8d	       572	floatformat.c	FUNCTION_7
0x4000454	            0x29ca	                            sub edx, ecx	       572	floatformat.c	FUNCTION_7
0x4000456	          0x8d59ff	                      lea ebx, [rcx - 1]	       578	floatformat.c	FUNCTION_7	ELSE_1
0x4000459	          0xc1eb03	                              shr ebx, 3	       578	floatformat.c	FUNCTION_7	ELSE_1
0x400045c	      0xbdffffffff	                     mov ebp, 0xffffffff	       569	floatformat.c	FUNCTION_7
0x4000461	      0xe96dffffff	                           jmp 0x40003d3	       569	floatformat.c	FUNCTION_7
0x4000466	              0x5b	                                 pop rbx	       596	floatformat.c	FUNCTION_7
0x4000467	              0x5d	                                 pop rbp	       596	floatformat.c	FUNCTION_7
0x4000468	            0x415c	                                 pop r12	       596	floatformat.c	FUNCTION_7
0x400046a	            0x415d	                                 pop r13	       596	floatformat.c	FUNCTION_7
0x400046c	            0x415e	                                 pop r14	       596	floatformat.c	FUNCTION_7
0x400046e	              0xc3	                                     ret	       596	floatformat.c	FUNCTION_7
floatformat_from_double	functions,0:WHILE,1:CALL,10:SWITCH,0:ELSE,2:DO,0:IF,7:FOR,0	177
0x400061d	            0x4157	                                push r15	       605	floatformat.c	FUNCTION_8
0x400061f	            0x4156	                                push r14	       605	floatformat.c	FUNCTION_8
0x4000621	            0x4155	                                push r13	       605	floatformat.c	FUNCTION_8
0x4000623	            0x4154	                                push r12	       605	floatformat.c	FUNCTION_8
0x4000625	              0x55	                                push rbp	       605	floatformat.c	FUNCTION_8
0x4000626	              0x53	                                push rbx	       605	floatformat.c	FUNCTION_8
0x4000627	        0x4883ec28	                           sub rsp, 0x28	       605	floatformat.c	FUNCTION_8
0x400062b	          0x4889fd	                            mov rbp, rdi	       605	floatformat.c	FUNCTION_8
0x400062e	          0x4989d5	                            mov r13, rdx	       605	floatformat.c	FUNCTION_8
0x4000631	    0x64488b042528	                mov rax, qword fs:[0x28]	       605	floatformat.c	FUNCTION_8
0x400063a	      0x4889442418	             mov qword [rsp + 0x18], rax	       605	floatformat.c	FUNCTION_8
0x400063f	            0x31c0	                            xor eax, eax	       605	floatformat.c	FUNCTION_8
0x4000641	        0xf20f101e	                 movsd xmm3, qword [rsi]	       613	floatformat.c	FUNCTION_8
0x4000645	    0xf20f115c2408	             movsd qword [rsp + 8], xmm3	       613	floatformat.c	FUNCTION_8
0x400064b	          0x8b5704	                mov edx, dword [rdi + 4]	        90	string3.h	FUNCTION_15	CALL_6
0x400064e	          0xc1ea03	                              shr edx, 3	        90	string3.h	FUNCTION_15	CALL_6
0x4000651	            0x89d2	                            mov edx, edx	        90	string3.h	FUNCTION_15	CALL_6
0x4000653	      0xbe00000000	                              mov esi, 0	        90	string3.h	FUNCTION_15	CALL_6
0x4000658	          0x4c89ef	                            mov rdi, r13	        90	string3.h	FUNCTION_15	CALL_6
0x400065b	      0xe800000000	                          call 0x4000660	        90	string3.h	FUNCTION_15	CALL_6
0x4000660	        0x660fefc0	                         pxor xmm0, xmm0	       621	floatformat.c	FUNCTION_8	IF_1
0x4000664	    0x660f2e442408	           ucomisd xmm0, qword [rsp + 8]	       621	floatformat.c	FUNCTION_8	IF_1
0x400066a	            0x7635	                           jbe 0x40006a1	       621	floatformat.c	FUNCTION_8	IF_1
0x400066c	          0x8b4d08	                mov ecx, dword [rbp + 8]	       623	floatformat.c	FUNCTION_8	IF_1	CALL_2
0x400066f	          0x8b5504	                mov edx, dword [rbp + 4]	       623	floatformat.c	FUNCTION_8	IF_1	CALL_2
0x4000672	    0x41b901000000	                              mov r9d, 1	       623	floatformat.c	FUNCTION_8	IF_1	CALL_2
0x4000678	    0x41b801000000	                              mov r8d, 1	       623	floatformat.c	FUNCTION_8	IF_1	CALL_2
0x400067e	          0x8b7500	                    mov esi, dword [rbp]	       623	floatformat.c	FUNCTION_8	IF_1	CALL_2
0x4000681	          0x4c89ef	                            mov rdi, r13	       623	floatformat.c	FUNCTION_8	IF_1	CALL_2
0x4000684	      0xe83cfdffff	                      call sym.put_field	       623	floatformat.c	FUNCTION_8	IF_1	CALL_2
0x4000689	    0xf20f10050000	         movsd xmm0, qword [0x04000691] 	       624	floatformat.c	FUNCTION_8	IF_1
0x4000691	    0xf20f107c2408	            movsd xmm7, qword [rsp + 8] 	       624	floatformat.c	FUNCTION_8	IF_1
0x4000697	        0x660f57f8	                        xorpd xmm7, xmm0	       624	floatformat.c	FUNCTION_8	IF_1
0x400069b	    0xf20f117c2408	             movsd qword [rsp + 8], xmm7	       624	floatformat.c	FUNCTION_8	IF_1
0x40006a1	    0xf20f10642408	            movsd xmm4, qword [rsp + 8] 	       627	floatformat.c	FUNCTION_8	IF_2
0x40006a7	    0x660f2e250000	        ucomisd xmm4, qword [0x040006af]	       627	floatformat.c	FUNCTION_8	IF_2
0x40006af	            0x7a06	                            jp 0x40006b7	       627	floatformat.c	FUNCTION_8	IF_2
0x40006b1	     0xf84e1010000	                            je 0x4000898	       627	floatformat.c	FUNCTION_8	IF_2
0x40006b7	    0xf20f106c2408	            movsd xmm5, qword [rsp + 8] 	       633	floatformat.c	FUNCTION_8	IF_3
0x40006bd	        0x660f2eed	                      ucomisd xmm5, xmm5	       633	floatformat.c	FUNCTION_8	IF_3
0x40006c1	            0x7a10	                            jp 0x40006d3	       633	floatformat.c	FUNCTION_8	IF_3
0x40006c3	        0x660f28c5	                       movapd xmm0, xmm5	       644	floatformat.c	FUNCTION_8	IF_4
0x40006c7	        0xf20f58c5	                        addsd xmm0, xmm5	       644	floatformat.c	FUNCTION_8	IF_4
0x40006cb	        0x660f2ee8	                      ucomisd xmm5, xmm0	       644	floatformat.c	FUNCTION_8	IF_4
0x40006cf	            0x7b3d	                           jnp 0x400070e	       644	floatformat.c	FUNCTION_8	IF_4
0x40006d1	            0xeb65	                           jmp 0x4000738	       644	floatformat.c	FUNCTION_8	IF_4
0x40006d3	          0x8b4d0c	              mov ecx, dword [rbp + 0xc]	       636	floatformat.c	FUNCTION_8	IF_3	CALL_3
0x40006d6	          0x8b5504	                mov edx, dword [rbp + 4]	       636	floatformat.c	FUNCTION_8	IF_3	CALL_3
0x40006d9	        0x448b4d18	            mov r9d, dword [rbp + 0x18] 	       636	floatformat.c	FUNCTION_8	IF_3	CALL_3
0x40006dd	        0x448b4510	            mov r8d, dword [rbp + 0x10] 	       636	floatformat.c	FUNCTION_8	IF_3	CALL_3
0x40006e1	          0x8b7500	                    mov esi, dword [rbp]	       636	floatformat.c	FUNCTION_8	IF_3	CALL_3
0x40006e4	          0x4c89ef	                            mov rdi, r13	       636	floatformat.c	FUNCTION_8	IF_3	CALL_3
0x40006e7	      0xe8d9fcffff	                      call sym.put_field	       636	floatformat.c	FUNCTION_8	IF_3	CALL_3
0x40006ec	          0x8b4d1c	            mov ecx, dword [rbp + 0x1c] 	       639	floatformat.c	FUNCTION_8	IF_3	CALL_4
0x40006ef	          0x8b5504	                mov edx, dword [rbp + 4]	       639	floatformat.c	FUNCTION_8	IF_3	CALL_4
0x40006f2	    0x41b901000000	                              mov r9d, 1	       639	floatformat.c	FUNCTION_8	IF_3	CALL_4
0x40006f8	    0x41b820000000	                           mov r8d, 0x20	       639	floatformat.c	FUNCTION_8	IF_3	CALL_4
0x40006fe	          0x8b7500	                    mov esi, dword [rbp]	       639	floatformat.c	FUNCTION_8	IF_3	CALL_4
0x4000701	          0x4c89ef	                            mov rdi, r13	       639	floatformat.c	FUNCTION_8	IF_3	CALL_4
0x4000704	      0xe8bcfcffff	                      call sym.put_field	       639	floatformat.c	FUNCTION_8	IF_3	CALL_4
0x4000709	      0xe98a010000	                           jmp 0x4000898	       641	floatformat.c	FUNCTION_8	IF_3
0x400070e	    0xf20f10742408	            movsd xmm6, qword [rsp + 8] 	       644	floatformat.c	FUNCTION_8	IF_4
0x4000714	        0x660f2ef0	                      ucomisd xmm6, xmm0	       644	floatformat.c	FUNCTION_8	IF_4
0x4000718	            0x751e	                           jne 0x4000738	       644	floatformat.c	FUNCTION_8	IF_4
0x400071a	          0x8b4d0c	              mov ecx, dword [rbp + 0xc]	       648	floatformat.c	FUNCTION_8	IF_4	CALL_5
0x400071d	          0x8b5504	                mov edx, dword [rbp + 4]	       648	floatformat.c	FUNCTION_8	IF_4	CALL_5
0x4000720	        0x448b4d18	            mov r9d, dword [rbp + 0x18] 	       648	floatformat.c	FUNCTION_8	IF_4	CALL_5
0x4000724	        0x448b4510	            mov r8d, dword [rbp + 0x10] 	       648	floatformat.c	FUNCTION_8	IF_4	CALL_5
0x4000728	          0x8b7500	                    mov esi, dword [rbp]	       648	floatformat.c	FUNCTION_8	IF_4	CALL_5
0x400072b	          0x4c89ef	                            mov rdi, r13	       648	floatformat.c	FUNCTION_8	IF_4	CALL_5
0x400072e	      0xe892fcffff	                      call sym.put_field	       648	floatformat.c	FUNCTION_8	IF_4	CALL_5
0x4000733	      0xe960010000	                           jmp 0x4000898	       650	floatformat.c	FUNCTION_8	IF_4
0x4000738	      0x488d7c2414	                   lea rdi, [rsp + 0x14]	       653	floatformat.c	FUNCTION_8	CALL_6
0x400073d	    0xf20f10442408	            movsd xmm0, qword [rsp + 8] 	       653	floatformat.c	FUNCTION_8	CALL_6
0x4000743	      0xe800000000	                          call 0x4000748	       653	floatformat.c	FUNCTION_8	CALL_6
0x4000748	    0xf20f11442408	             movsd qword [rsp + 8], xmm0	       653	floatformat.c	FUNCTION_8	CALL_6
0x400074e	        0x8b5c2414	            mov ebx, dword [rsp + 0x14] 	       654	floatformat.c	FUNCTION_8	IF_5
0x4000752	          0x4189d9	                            mov r9d, ebx	       654	floatformat.c	FUNCTION_8	IF_5
0x4000755	        0x44034d14	             add r9d, dword [rbp + 0x14]	       654	floatformat.c	FUNCTION_8	IF_5
0x4000759	        0x4183e901	                              sub r9d, 1	       654	floatformat.c	FUNCTION_8	IF_5
0x400075d	          0x4585c9	                           test r9d, r9d	       654	floatformat.c	FUNCTION_8	IF_5
0x4000760	            0x7e1a	                           jle 0x400077c	       654	floatformat.c	FUNCTION_8	IF_5
0x4000762	          0x8b4d0c	              mov ecx, dword [rbp + 0xc]	       655	floatformat.c	FUNCTION_8	IF_5	CALL_7
0x4000765	          0x8b5504	                mov edx, dword [rbp + 4]	       655	floatformat.c	FUNCTION_8	IF_5	CALL_7
0x4000768	          0x4d63c9	                          movsxd r9, r9d	       655	floatformat.c	FUNCTION_8	IF_5	CALL_7
0x400076b	        0x448b4510	            mov r8d, dword [rbp + 0x10] 	       655	floatformat.c	FUNCTION_8	IF_5	CALL_7
0x400076f	          0x8b7500	                    mov esi, dword [rbp]	       655	floatformat.c	FUNCTION_8	IF_5	CALL_7
0x4000772	          0x4c89ef	                            mov rdi, r13	       655	floatformat.c	FUNCTION_8	IF_5	CALL_7
0x4000775	      0xe84bfcffff	                      call sym.put_field	       655	floatformat.c	FUNCTION_8	IF_5	CALL_7
0x400077a	            0xeb34	                           jmp 0x40007b0	       655	floatformat.c	FUNCTION_8	IF_5	CALL_7
0x400077c	          0x8b4d0c	              mov ecx, dword [rbp + 0xc]	       661	floatformat.c	FUNCTION_8	ELSE_1	CALL_8
0x400077f	          0x8b5504	                mov edx, dword [rbp + 4]	       661	floatformat.c	FUNCTION_8	ELSE_1	CALL_8
0x4000782	    0x41b900000000	                              mov r9d, 0	       661	floatformat.c	FUNCTION_8	ELSE_1	CALL_8
0x4000788	        0x448b4510	            mov r8d, dword [rbp + 0x10] 	       661	floatformat.c	FUNCTION_8	ELSE_1	CALL_8
0x400078c	          0x8b7500	                    mov esi, dword [rbp]	       661	floatformat.c	FUNCTION_8	ELSE_1	CALL_8
0x400078f	          0x4c89ef	                            mov rdi, r13	       661	floatformat.c	FUNCTION_8	ELSE_1	CALL_8
0x4000792	      0xe82efcffff	                      call sym.put_field	       661	floatformat.c	FUNCTION_8	ELSE_1	CALL_8
0x4000797	            0x89df	                            mov edi, ebx	       663	floatformat.c	FUNCTION_8	ELSE_1	CALL_9
0x4000799	           0x37d14	             add edi, dword [rbp + 0x14]	       663	floatformat.c	FUNCTION_8	ELSE_1	CALL_9
0x400079c	          0x83ef01	                              sub edi, 1	       663	floatformat.c	FUNCTION_8	ELSE_1	CALL_9
0x400079f	    0xf20f10442408	            movsd xmm0, qword [rsp + 8] 	       663	floatformat.c	FUNCTION_8	ELSE_1	CALL_9
0x40007a5	      0xe800000000	                          call 0x40007aa	       663	floatformat.c	FUNCTION_8	ELSE_1	CALL_9
0x40007aa	    0xf20f11442408	             movsd qword [rsp + 8], xmm0	       663	floatformat.c	FUNCTION_8	ELSE_1	CALL_9
0x40007b0	          0x8b4520	            mov eax, dword [rbp + 0x20] 	       666	floatformat.c	FUNCTION_8
0x40007b3	        0x448b651c	           mov r12d, dword [rbp + 0x1c] 	       667	floatformat.c	FUNCTION_8
0x40007b7	            0x85c0	                           test eax, eax	       668	floatformat.c	FUNCTION_8	WHILE_1
0x40007b9	     0xf8ed9000000	                           jle 0x4000898	       668	floatformat.c	FUNCTION_8	WHILE_1
0x40007bf	    0x49bf00000000	          movabs r15, 0x8000000000000000	       674	floatformat.c	FUNCTION_8	WHILE_1
0x40007c9	          0x83f820	                           cmp eax, 0x20	       671	floatformat.c	FUNCTION_8	WHILE_1
0x40007cc	      0xbb20000000	                           mov ebx, 0x20	       671	floatformat.c	FUNCTION_8	WHILE_1
0x40007d1	           0xf4ed8	                         cmovle ebx, eax	       671	floatformat.c	FUNCTION_8	WHILE_1
0x40007d4	    0xf20f10050000	         movsd xmm0, qword [0x040007dc] 	       673	floatformat.c	FUNCTION_8	WHILE_1
0x40007dc	    0xf20f59442408	             mulsd xmm0, qword [rsp + 8]	       673	floatformat.c	FUNCTION_8	WHILE_1
0x40007e2	    0x660f2e050000	        ucomisd xmm0, qword [0x040007ea]	       674	floatformat.c	FUNCTION_8	WHILE_1
0x40007ea	            0x7307	                           jae 0x40007f3	       674	floatformat.c	FUNCTION_8	WHILE_1
0x40007ec	      0xf24c0f2cc8	                      cvttsd2si r9, xmm0	       674	floatformat.c	FUNCTION_8	WHILE_1
0x40007f1	            0xeb14	                           jmp 0x4000807	       674	floatformat.c	FUNCTION_8	WHILE_1
0x40007f3	        0x660f28c8	                       movapd xmm1, xmm0	       674	floatformat.c	FUNCTION_8	WHILE_1
0x40007f7	    0xf20f5c0d0000	          subsd xmm1, qword [0x040007ff]	       674	floatformat.c	FUNCTION_8	WHILE_1
0x40007ff	      0xf24c0f2cc9	                      cvttsd2si r9, xmm1	       674	floatformat.c	FUNCTION_8	WHILE_1
0x4000804	          0x4d31f9	                             xor r9, r15	       674	floatformat.c	FUNCTION_8	WHILE_1
0x4000807	          0x4d85c9	                             test r9, r9	       675	floatformat.c	FUNCTION_8	WHILE_1
0x400080a	            0x780b	                            js 0x4000817	       675	floatformat.c	FUNCTION_8	WHILE_1
0x400080c	        0x660fefc9	                         pxor xmm1, xmm1	       675	floatformat.c	FUNCTION_8	WHILE_1
0x4000810	      0xf2490f2ac9	                       cvtsi2sd xmm1, r9	       675	floatformat.c	FUNCTION_8	WHILE_1
0x4000815	            0xeb1c	                           jmp 0x4000833	       675	floatformat.c	FUNCTION_8	WHILE_1
0x4000817	          0x4c89ca	                             mov rdx, r9	       675	floatformat.c	FUNCTION_8	WHILE_1
0x400081a	          0x48d1ea	                              shr rdx, 1	       675	floatformat.c	FUNCTION_8	WHILE_1
0x400081d	          0x4c89c9	                             mov rcx, r9	       675	floatformat.c	FUNCTION_8	WHILE_1
0x4000820	          0x83e101	                              and ecx, 1	       675	floatformat.c	FUNCTION_8	WHILE_1
0x4000823	          0x4809ca	                             or rdx, rcx	       675	floatformat.c	FUNCTION_8	WHILE_1
0x4000826	        0x660fefc9	                         pxor xmm1, xmm1	       675	floatformat.c	FUNCTION_8	WHILE_1
0x400082a	      0xf2480f2aca	                      cvtsi2sd xmm1, rdx	       675	floatformat.c	FUNCTION_8	WHILE_1
0x400082f	        0xf20f58c9	                        addsd xmm1, xmm1	       675	floatformat.c	FUNCTION_8	WHILE_1
0x4000833	        0xf20f5cc1	                        subsd xmm0, xmm1	       675	floatformat.c	FUNCTION_8	WHILE_1
0x4000837	    0xf20f11442408	             movsd qword [rsp + 8], xmm0	       675	floatformat.c	FUNCTION_8	WHILE_1
0x400083d	          0x4189c6	                           mov r14d, eax	       679	floatformat.c	FUNCTION_8	WHILE_1	IF_6
0x4000840	          0x394520	            cmp dword [rbp + 0x20], eax 	       679	floatformat.c	FUNCTION_8	WHILE_1	IF_6
0x4000843	            0x7520	                           jne 0x4000865	       679	floatformat.c	FUNCTION_8	WHILE_1	IF_6
0x4000845	        0x837d2401	               cmp dword [rbp + 0x24], 1	       680	floatformat.c	FUNCTION_8	WHILE_1	IF_6
0x4000849	            0x751a	                           jne 0x4000865	       680	floatformat.c	FUNCTION_8	WHILE_1	IF_6
0x400084b	        0x8b442414	            mov eax, dword [rsp + 0x14] 	       681	floatformat.c	FUNCTION_8	WHILE_1	IF_6
0x400084f	           0x34514	             add eax, dword [rbp + 0x14]	       681	floatformat.c	FUNCTION_8	WHILE_1	IF_6
0x4000852	          0x83e801	                              sub eax, 1	       681	floatformat.c	FUNCTION_8	WHILE_1	IF_6
0x4000855	            0x85c0	                           test eax, eax	       681	floatformat.c	FUNCTION_8	WHILE_1	IF_6
0x4000857	            0x7e0c	                           jle 0x4000865	       681	floatformat.c	FUNCTION_8	WHILE_1	IF_6
0x4000859	    0x4181e1ffffff	                     and r9d, 0x7fffffff	       683	floatformat.c	FUNCTION_8	WHILE_1	IF_6
0x4000860	          0x83eb01	                              sub ebx, 1	       684	floatformat.c	FUNCTION_8	WHILE_1	IF_6
0x4000863	            0xeb0f	                           jmp 0x4000874	       684	floatformat.c	FUNCTION_8	WHILE_1	IF_6
0x4000865	          0x83fb1f	                           cmp ebx, 0x1f	       686	floatformat.c	FUNCTION_8	WHILE_1	ELSE_2	IF_7
0x4000868	            0x770a	                            ja 0x4000874	       686	floatformat.c	FUNCTION_8	WHILE_1	ELSE_2	IF_7
0x400086a	      0xb920000000	                           mov ecx, 0x20	       690	floatformat.c	FUNCTION_8	WHILE_1	ELSE_2	IF_7
0x400086f	            0x29d9	                            sub ecx, ebx	       690	floatformat.c	FUNCTION_8	WHILE_1	ELSE_2	IF_7
0x4000871	          0x49d3e9	                              shr r9, cl	       690	floatformat.c	FUNCTION_8	WHILE_1	ELSE_2	IF_7
0x4000874	          0x8b5504	                mov edx, dword [rbp + 4]	       693	floatformat.c	FUNCTION_8	WHILE_1	CALL_10
0x4000877	          0x4189d8	                            mov r8d, ebx	       693	floatformat.c	FUNCTION_8	WHILE_1	CALL_10
0x400087a	          0x4489e1	                           mov ecx, r12d	       693	floatformat.c	FUNCTION_8	WHILE_1	CALL_10
0x400087d	          0x8b7500	                    mov esi, dword [rbp]	       693	floatformat.c	FUNCTION_8	WHILE_1	CALL_10
0x4000880	          0x4c89ef	                            mov rdi, r13	       693	floatformat.c	FUNCTION_8	WHILE_1	CALL_10
0x4000883	      0xe83dfbffff	                      call sym.put_field	       693	floatformat.c	FUNCTION_8	WHILE_1	CALL_10
0x4000888	          0x4101dc	                           add r12d, ebx	       695	floatformat.c	FUNCTION_8	WHILE_1
0x400088b	          0x4489f0	                           mov eax, r14d	       696	floatformat.c	FUNCTION_8	WHILE_1
0x400088e	            0x29d8	                            sub eax, ebx	       696	floatformat.c	FUNCTION_8	WHILE_1
0x4000890	            0x85c0	                           test eax, eax	       668	floatformat.c	FUNCTION_8	WHILE_1
0x4000892	     0xf8f31ffffff	                            jg 0x40007c9	       668	floatformat.c	FUNCTION_8	WHILE_1
0x4000898	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       698	floatformat.c	FUNCTION_8
0x400089d	    0x644833042528	                xor rax, qword fs:[0x28]	       698	floatformat.c	FUNCTION_8
0x40008a6	            0x7405	                            je 0x40008ad	       698	floatformat.c	FUNCTION_8
0x40008a8	      0xe800000000	                          call 0x40008ad	       698	floatformat.c	FUNCTION_8
0x40008ad	        0x4883c428	                           add rsp, 0x28	       698	floatformat.c	FUNCTION_8
0x40008b1	              0x5b	                                 pop rbx	       698	floatformat.c	FUNCTION_8
0x40008b2	              0x5d	                                 pop rbp	       698	floatformat.c	FUNCTION_8
0x40008b3	            0x415c	                                 pop r12	       698	floatformat.c	FUNCTION_8
0x40008b5	            0x415d	                                 pop r13	       698	floatformat.c	FUNCTION_8
0x40008b7	            0x415e	                                 pop r14	       698	floatformat.c	FUNCTION_8
0x40008b9	            0x415f	                                 pop r15	       698	floatformat.c	FUNCTION_8
0x40008bb	              0xc3	                                     ret	       698	floatformat.c	FUNCTION_8
floatformat_ibm_long_double_is_valid	functions,0:WHILE,0:CALL,8:SWITCH,0:ELSE,2:DO,0:IF,14:FOR,1	144
0x40001bf	            0x4157	                                push r15	       292	floatformat.c	ELSE_1	FUNCTION_3
0x40001c1	            0x4156	                                push r14	       292	floatformat.c	ELSE_1	FUNCTION_3
0x40001c3	            0x4155	                                push r13	       292	floatformat.c	ELSE_1	FUNCTION_3
0x40001c5	            0x4154	                                push r12	       292	floatformat.c	ELSE_1	FUNCTION_3
0x40001c7	              0x55	                                push rbp	       292	floatformat.c	ELSE_1	FUNCTION_3
0x40001c8	              0x53	                                push rbx	       292	floatformat.c	ELSE_1	FUNCTION_3
0x40001c9	        0x4883ec20	                           sub rsp, 0x20	       292	floatformat.c	ELSE_1	FUNCTION_3
0x40001cd	          0x4989f5	                            mov r13, rsi	       292	floatformat.c	ELSE_1	FUNCTION_3
0x40001d0	      0x4889742410	             mov qword [rsp + 0x10], rsi	       292	floatformat.c	ELSE_1	FUNCTION_3
0x40001d5	        0x488b5f38	            mov rbx, qword [rdi + 0x38] 	       294	floatformat.c	ELSE_1	FUNCTION_3
0x40001d9	        0x448b7b10	           mov r15d, dword [rbx + 0x10] 	       298	floatformat.c	ELSE_1	FUNCTION_3	CALL_1
0x40001dd	        0x448b730c	            mov r14d, dword [rbx + 0xc] 	       298	floatformat.c	ELSE_1	FUNCTION_3	CALL_1
0x40001e1	          0x8b6b04	                mov ebp, dword [rbx + 4]	       298	floatformat.c	ELSE_1	FUNCTION_3	CALL_1
0x40001e4	          0x448b23	                   mov r12d, dword [rbx]	       298	floatformat.c	ELSE_1	FUNCTION_3	CALL_1
0x40001e7	          0x4589f8	                           mov r8d, r15d	       298	floatformat.c	ELSE_1	FUNCTION_3	CALL_1
0x40001ea	          0x4489f1	                           mov ecx, r14d	       298	floatformat.c	ELSE_1	FUNCTION_3	CALL_1
0x40001ed	            0x89ea	                            mov edx, ebp	       298	floatformat.c	ELSE_1	FUNCTION_3	CALL_1
0x40001ef	          0x4489e6	                           mov esi, r12d	       298	floatformat.c	ELSE_1	FUNCTION_3	CALL_1
0x40001f2	          0x4c89ef	                            mov rdi, r13	       298	floatformat.c	ELSE_1	FUNCTION_3	CALL_1
0x40001f5	      0xe84cfeffff	                      call sym.get_field	       298	floatformat.c	ELSE_1	FUNCTION_3	CALL_1
0x40001fa	        0x48890424	                    mov qword [rsp], rax	       298	floatformat.c	ELSE_1	FUNCTION_3	CALL_1
0x40001fe	        0x4d8d6d08	                      lea r13, [r13 + 8]	       300	floatformat.c	ELSE_1	FUNCTION_3	CALL_2
0x4000202	          0x4589f8	                           mov r8d, r15d	       300	floatformat.c	ELSE_1	FUNCTION_3	CALL_2
0x4000205	          0x4489f1	                           mov ecx, r14d	       300	floatformat.c	ELSE_1	FUNCTION_3	CALL_2
0x4000208	            0x89ea	                            mov edx, ebp	       300	floatformat.c	ELSE_1	FUNCTION_3	CALL_2
0x400020a	          0x4489e6	                           mov esi, r12d	       300	floatformat.c	ELSE_1	FUNCTION_3	CALL_2
0x400020d	          0x4c89ef	                            mov rdi, r13	       300	floatformat.c	ELSE_1	FUNCTION_3	CALL_2
0x4000210	      0xe831feffff	                      call sym.get_field	       300	floatformat.c	ELSE_1	FUNCTION_3	CALL_2
0x4000215	          0x4989c6	                            mov r14, rax	       300	floatformat.c	ELSE_1	FUNCTION_3	CALL_2
0x4000218	          0x8b4318	            mov eax, dword [rbx + 0x18] 	       303	floatformat.c	ELSE_1	FUNCTION_3	IF_1
0x400021b	        0x48390424	                    cmp qword [rsp], rax	       303	floatformat.c	ELSE_1	FUNCTION_3	IF_1
0x400021f	     0xf8581010000	                           jne 0x40003a6	       303	floatformat.c	ELSE_1	FUNCTION_3	IF_1
0x4000225	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       304	floatformat.c	ELSE_1	FUNCTION_3	CALL_3
0x400022a	          0x4889df	                            mov rdi, rbx	       304	floatformat.c	ELSE_1	FUNCTION_3	CALL_3
0x400022d	      0xe81fffffff	                  call sym.mant_bits_set	       304	floatformat.c	ELSE_1	FUNCTION_3	CALL_3
0x4000232	            0x85c0	                           test eax, eax	       307	floatformat.c	ELSE_1	FUNCTION_3	IF_2
0x4000234	     0xf8557010000	                           jne 0x4000391	       307	floatformat.c	ELSE_1	FUNCTION_3	IF_2
0x400023a	      0xb800000000	                              mov eax, 0	       315	floatformat.c	ELSE_1	FUNCTION_3	IF_3	IF_4
0x400023f	          0x4d85f6	                           test r14, r14	       314	floatformat.c	ELSE_1	FUNCTION_3	IF_3	IF_4
0x4000242	     0xf856e010000	                           jne 0x40003b6	       314	floatformat.c	ELSE_1	FUNCTION_3	IF_3	IF_4
0x4000248	          0x4c89ee	                            mov rsi, r13	       317	floatformat.c	ELSE_1	FUNCTION_3	IF_3	CALL_4
0x400024b	          0x4889df	                            mov rdi, rbx	       317	floatformat.c	ELSE_1	FUNCTION_3	IF_3	CALL_4
0x400024e	      0xe8fefeffff	                  call sym.mant_bits_set	       317	floatformat.c	ELSE_1	FUNCTION_3	IF_3	CALL_4
0x4000253	            0x85c0	                           test eax, eax	       317	floatformat.c	ELSE_1	FUNCTION_3	IF_3	CALL_4
0x4000255	           0xf94c0	                                 sete al	       317	floatformat.c	ELSE_1	FUNCTION_3	IF_3	CALL_4
0x4000258	           0xfb6c0	                           movzx eax, al	       317	floatformat.c	ELSE_1	FUNCTION_3	IF_3	CALL_4
0x400025b	      0xe956010000	                           jmp 0x40003b6	       317	floatformat.c	ELSE_1	FUNCTION_3	IF_3	CALL_4
0x4000260	        0x488b0424	                    mov rax, qword [rsp]	       326	floatformat.c	ELSE_1	FUNCTION_3	IF_5
0x4000264	        0x4883e835	                           sub rax, 0x35	       326	floatformat.c	ELSE_1	FUNCTION_3	IF_5
0x4000268	          0x4889c1	                            mov rcx, rax	       326	floatformat.c	ELSE_1	FUNCTION_3	IF_5
0x400026b	      0x4889442418	             mov qword [rsp + 0x18], rax	       326	floatformat.c	ELSE_1	FUNCTION_3	IF_5
0x4000270	      0xb801000000	                              mov eax, 1	       327	floatformat.c	ELSE_1	FUNCTION_3	IF_5
0x4000275	          0x4939ce	                            cmp r14, rcx	       326	floatformat.c	ELSE_1	FUNCTION_3	IF_5
0x4000278	     0xf8c38010000	                            jl 0x40003b6	       326	floatformat.c	ELSE_1	FUNCTION_3	IF_5
0x400027e	          0x4d85f6	                           test r14, r14	       328	floatformat.c	ELSE_1	FUNCTION_3	IF_6
0x4000281	            0x740e	                            je 0x4000291	       328	floatformat.c	ELSE_1	FUNCTION_3	IF_6
0x4000283	      0xb800000000	                              mov eax, 0	       329	floatformat.c	ELSE_1	FUNCTION_3	IF_6
0x4000288	          0x4939ce	                            cmp r14, rcx	       328	floatformat.c	ELSE_1	FUNCTION_3	IF_6
0x400028b	     0xf8f25010000	                            jg 0x40003b6	       328	floatformat.c	ELSE_1	FUNCTION_3	IF_6
0x4000291	          0x4d85f6	                           test r14, r14	       330	floatformat.c	ELSE_1	FUNCTION_3	IF_7
0x4000294	     0xf85b7000000	                           jne 0x4000351	       330	floatformat.c	ELSE_1	FUNCTION_3	IF_7
0x400029a	        0x448b7b20	           mov r15d, dword [rbx + 0x20] 	       335	floatformat.c	ELSE_1	FUNCTION_3	IF_7	FOR_1
0x400029e	          0x4585ff	                         test r15d, r15d	       335	floatformat.c	ELSE_1	FUNCTION_3	IF_7	FOR_1
0x40002a1	     0xf84f1000000	                            je 0x4000398	       335	floatformat.c	ELSE_1	FUNCTION_3	IF_7	FOR_1
0x40002a7	        0x448b731c	           mov r14d, dword [rbx + 0x1c] 	       337	floatformat.c	ELSE_1	FUNCTION_3	IF_7	FOR_1	IF_8
0x40002ab	      0xbb00000000	                              mov ebx, 0	       337	floatformat.c	ELSE_1	FUNCTION_3	IF_7	FOR_1	IF_8
0x40002b0	    0xc744240cffff	      mov dword [rsp + 0xc], 0xffffffff 	       337	floatformat.c	ELSE_1	FUNCTION_3	IF_7	FOR_1	IF_8
0x40002b8	          0x891c24	                    mov dword [rsp], ebx	       337	floatformat.c	ELSE_1	FUNCTION_3	IF_7	FOR_1	IF_8
0x40002bb	        0x418d0c1e	                    lea ecx, [r14 + rbx]	       336	floatformat.c	ELSE_1	FUNCTION_3	IF_7	FOR_1	IF_8	CALL_5
0x40002bf	    0x41b801000000	                              mov r8d, 1	       336	floatformat.c	ELSE_1	FUNCTION_3	IF_7	FOR_1	IF_8	CALL_5
0x40002c5	            0x89ea	                            mov edx, ebp	       336	floatformat.c	ELSE_1	FUNCTION_3	IF_7	FOR_1	IF_8	CALL_5
0x40002c7	          0x4489e6	                           mov esi, r12d	       336	floatformat.c	ELSE_1	FUNCTION_3	IF_7	FOR_1	IF_8	CALL_5
0x40002ca	          0x4c89ef	                            mov rdi, r13	       336	floatformat.c	ELSE_1	FUNCTION_3	IF_7	FOR_1	IF_8	CALL_5
0x40002cd	      0xe874fdffff	                      call sym.get_field	       336	floatformat.c	ELSE_1	FUNCTION_3	IF_7	FOR_1	IF_8	CALL_5
0x40002d2	          0x4885c0	                           test rax, rax	       336	floatformat.c	ELSE_1	FUNCTION_3	IF_7	FOR_1	IF_8	CALL_5
0x40002d5	            0x740e	                            je 0x40002e5	       336	floatformat.c	ELSE_1	FUNCTION_3	IF_7	FOR_1	IF_8	CALL_5
0x40002d7	      0x837c240cff	cmp dword [rsp + 0xc], 0xffffffffffffffff	       339	floatformat.c	ELSE_1	FUNCTION_3	IF_7	FOR_1	IF_8	IF_9
0x40002dc	            0x7527	                           jne 0x4000305	       339	floatformat.c	ELSE_1	FUNCTION_3	IF_7	FOR_1	IF_8	IF_9
0x40002de	          0x8b0424	                    mov eax, dword [rsp]	       339	floatformat.c	ELSE_1	FUNCTION_3	IF_7	FOR_1	IF_8	IF_9
0x40002e1	        0x8944240c	              mov dword [rsp + 0xc], eax	       339	floatformat.c	ELSE_1	FUNCTION_3	IF_7	FOR_1	IF_8	IF_9
0x40002e5	        0x4883c301	                              add rbx, 1	       339	floatformat.c	ELSE_1	FUNCTION_3	IF_7	FOR_1	IF_8	IF_9
0x40002e9	          0x4139df	                           cmp r15d, ebx	       335	floatformat.c	ELSE_1	FUNCTION_3	IF_7	FOR_1
0x40002ec	            0x77ca	                            ja 0x40002b8	       335	floatformat.c	ELSE_1	FUNCTION_3	IF_7	FOR_1
0x40002ee	      0xb801000000	                              mov eax, 1	       349	floatformat.c	FUNCTION_3	IF_7	ELSE_1	IF_10
0x40002f3	      0x837c240cff	cmp dword [rsp + 0xc], 0xffffffffffffffff	       348	floatformat.c	FUNCTION_3	IF_7	ELSE_1	IF_10
0x40002f8	     0xf84b8000000	                            je 0x40003b6	       348	floatformat.c	FUNCTION_3	IF_7	ELSE_1	IF_10
0x40002fe	    0xc70424ffffff	            mov dword [rsp], 0xffffffff 	       334	floatformat.c	ELSE_1	FUNCTION_3	IF_7
0x4000305	        0x8b54240c	              mov edx, dword [rsp + 0xc]	       351	floatformat.c	FUNCTION_3	IF_7	ELSE_1	IF_11
0x4000309	            0xf7da	                                 neg edx	       351	floatformat.c	FUNCTION_3	IF_7	ELSE_1	IF_11
0x400030b	          0x4863d2	                         movsxd rdx, edx	       351	floatformat.c	FUNCTION_3	IF_7	ELSE_1	IF_11
0x400030e	      0xb801000000	                              mov eax, 1	       352	floatformat.c	FUNCTION_3	IF_7	ELSE_1	IF_11
0x4000313	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	       351	floatformat.c	FUNCTION_3	IF_7	ELSE_1	IF_11
0x4000318	          0x4839d6	                            cmp rsi, rdx	       351	floatformat.c	FUNCTION_3	IF_7	ELSE_1	IF_11
0x400031b	     0xf8f95000000	                            jg 0x40003b6	       351	floatformat.c	FUNCTION_3	IF_7	ELSE_1	IF_11
0x4000321	        0x833c24ff	     cmp dword [rsp], 0xffffffffffffffff	       358	floatformat.c	FUNCTION_3	IF_7	ELSE_1	IF_13
0x4000325	            0x7578	                           jne 0x400039f	       358	floatformat.c	FUNCTION_3	IF_7	ELSE_1	IF_13
0x4000327	          0x4839d6	                            cmp rsi, rdx	       358	floatformat.c	FUNCTION_3	IF_7	ELSE_1	IF_13
0x400032a	            0x7c73	                            jl 0x400039f	       358	floatformat.c	FUNCTION_3	IF_7	ELSE_1	IF_13
0x400032c	      0x438d4c3eff	                lea ecx, [r14 + r15 - 1]	       360	floatformat.c	FUNCTION_3	IF_7	ELSE_1	CALL_6
0x4000331	    0x41b801000000	                              mov r8d, 1	       360	floatformat.c	FUNCTION_3	IF_7	ELSE_1	CALL_6
0x4000337	            0x89ea	                            mov edx, ebp	       360	floatformat.c	FUNCTION_3	IF_7	ELSE_1	CALL_6
0x4000339	          0x4489e6	                           mov esi, r12d	       360	floatformat.c	FUNCTION_3	IF_7	ELSE_1	CALL_6
0x400033c	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       360	floatformat.c	FUNCTION_3	IF_7	ELSE_1	CALL_6
0x4000341	      0xe800fdffff	                      call sym.get_field	       360	floatformat.c	FUNCTION_3	IF_7	ELSE_1	CALL_6
0x4000346	          0x4885c0	                           test rax, rax	       360	floatformat.c	FUNCTION_3	IF_7	ELSE_1	CALL_6
0x4000349	           0xf94c0	                                 sete al	       360	floatformat.c	FUNCTION_3	IF_7	ELSE_1	CALL_6
0x400034c	           0xfb6c0	                           movzx eax, al	       360	floatformat.c	FUNCTION_3	IF_7	ELSE_1	CALL_6
0x400034f	            0xeb65	                           jmp 0x40003b6	       360	floatformat.c	FUNCTION_3	IF_7	ELSE_1	CALL_6
0x4000351	          0x8b4b20	            mov ecx, dword [rbx + 0x20] 	       368	floatformat.c	FUNCTION_3	ELSE_1	ELSE_2	IF_14	CALL_7
0x4000354	           0x34b1c	             add ecx, dword [rbx + 0x1c]	       368	floatformat.c	FUNCTION_3	ELSE_1	ELSE_2	IF_14	CALL_7
0x4000357	          0x83e901	                              sub ecx, 1	       368	floatformat.c	FUNCTION_3	ELSE_1	ELSE_2	IF_14	CALL_7
0x400035a	    0x41b801000000	                              mov r8d, 1	       368	floatformat.c	FUNCTION_3	ELSE_1	ELSE_2	IF_14	CALL_7
0x4000360	            0x89ea	                            mov edx, ebp	       368	floatformat.c	FUNCTION_3	ELSE_1	ELSE_2	IF_14	CALL_7
0x4000362	          0x4489e6	                           mov esi, r12d	       368	floatformat.c	FUNCTION_3	ELSE_1	ELSE_2	IF_14	CALL_7
0x4000365	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       368	floatformat.c	FUNCTION_3	ELSE_1	ELSE_2	IF_14	CALL_7
0x400036a	      0xe8d7fcffff	                      call sym.get_field	       368	floatformat.c	FUNCTION_3	ELSE_1	ELSE_2	IF_14	CALL_7
0x400036f	          0x4889c2	                            mov rdx, rax	       368	floatformat.c	FUNCTION_3	ELSE_1	ELSE_2	IF_14	CALL_7
0x4000372	      0xb800000000	                              mov eax, 0	       370	floatformat.c	FUNCTION_3	ELSE_1	ELSE_2	IF_14
0x4000377	          0x4885d2	                           test rdx, rdx	       368	floatformat.c	FUNCTION_3	ELSE_1	ELSE_2	IF_14	CALL_7
0x400037a	            0x753a	                           jne 0x40003b6	       368	floatformat.c	FUNCTION_3	ELSE_1	ELSE_2	IF_14	CALL_7
0x400037c	          0x4c89ee	                            mov rsi, r13	       371	floatformat.c	FUNCTION_3	ELSE_1	ELSE_2	CALL_8
0x400037f	          0x4889df	                            mov rdi, rbx	       371	floatformat.c	FUNCTION_3	ELSE_1	ELSE_2	CALL_8
0x4000382	      0xe8cafdffff	                  call sym.mant_bits_set	       371	floatformat.c	FUNCTION_3	ELSE_1	ELSE_2	CALL_8
0x4000387	            0x85c0	                           test eax, eax	       371	floatformat.c	FUNCTION_3	ELSE_1	ELSE_2	CALL_8
0x4000389	           0xf94c0	                                 sete al	       371	floatformat.c	FUNCTION_3	ELSE_1	ELSE_2	CALL_8
0x400038c	           0xfb6c0	                           movzx eax, al	       371	floatformat.c	FUNCTION_3	ELSE_1	ELSE_2	CALL_8
0x400038f	            0xeb25	                           jmp 0x40003b6	       371	floatformat.c	FUNCTION_3	ELSE_1	ELSE_2	CALL_8
0x4000391	      0xb801000000	                              mov eax, 1	       308	floatformat.c	ELSE_1	FUNCTION_3	IF_2
0x4000396	            0xeb1e	                           jmp 0x40003b6	       308	floatformat.c	ELSE_1	FUNCTION_3	IF_2
0x4000398	      0xb801000000	                              mov eax, 1	       349	floatformat.c	FUNCTION_3	IF_7	ELSE_1	IF_10
0x400039d	            0xeb17	                           jmp 0x40003b6	       349	floatformat.c	FUNCTION_3	IF_7	ELSE_1	IF_10
0x400039f	      0xb800000000	                              mov eax, 0	       359	floatformat.c	FUNCTION_3	IF_7	ELSE_1	IF_13
0x40003a4	            0xeb10	                           jmp 0x40003b6	       359	floatformat.c	FUNCTION_3	IF_7	ELSE_1	IF_13
0x40003a6	      0x48833c2400	                      cmp qword [rsp], 0	       312	floatformat.c	ELSE_1	FUNCTION_3	IF_3
0x40003ab	     0xf8489feffff	                            je 0x400023a	       312	floatformat.c	ELSE_1	FUNCTION_3	IF_3
0x40003b1	      0xe9aafeffff	                           jmp 0x4000260	       312	floatformat.c	ELSE_1	FUNCTION_3	IF_3
0x40003b6	        0x4883c420	                           add rsp, 0x20	       373	floatformat.c	FUNCTION_3	ELSE_1
0x40003ba	              0x5b	                                 pop rbx	       373	floatformat.c	FUNCTION_3	ELSE_1
0x40003bb	              0x5d	                                 pop rbp	       373	floatformat.c	FUNCTION_3	ELSE_1
0x40003bc	            0x415c	                                 pop r12	       373	floatformat.c	FUNCTION_3	ELSE_1
0x40003be	            0x415d	                                 pop r13	       373	floatformat.c	FUNCTION_3	ELSE_1
0x40003c0	            0x415e	                                 pop r14	       373	floatformat.c	FUNCTION_3	ELSE_1
0x40003c2	            0x415f	                                 pop r15	       373	floatformat.c	FUNCTION_3	ELSE_1
0x40003c4	              0xc3	                                     ret	       373	floatformat.c	FUNCTION_3	ELSE_1
