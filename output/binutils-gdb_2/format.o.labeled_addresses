bfd_check_format_matches	CALL,25:functions,0:FOR,2:WHILE,3:IF,42:SWITCH,0:ELSE,3:DO,0	487
0x4000040	            0x4157	                                push r15	       211	format.c	FUNCTION_6
0x4000042	            0x4156	                                push r14	       211	format.c	FUNCTION_6
0x4000044	            0x4155	                                push r13	       211	format.c	FUNCTION_6
0x4000046	            0x4154	                                push r12	       211	format.c	FUNCTION_6
0x4000048	              0x55	                                push rbp	       211	format.c	FUNCTION_6
0x4000049	              0x53	                                push rbx	       211	format.c	FUNCTION_6
0x400004a	    0x4881ecb80000	                           sub rsp, 0xb8	       211	format.c	FUNCTION_6
0x4000051	          0x4889fb	                            mov rbx, rdi	       211	format.c	FUNCTION_6
0x4000054	            0x89f5	                            mov ebp, esi	       211	format.c	FUNCTION_6
0x4000056	      0x4889542420	             mov qword [rsp + 0x20], rdx	       211	format.c	FUNCTION_6
0x400005b	    0x64488b0c2528	                mov rcx, qword fs:[0x28]	       211	format.c	FUNCTION_6
0x4000064	    0x48898c24a800	             mov qword [rsp + 0xa8], rcx	       211	format.c	FUNCTION_6
0x400006c	            0x31c9	                            xor ecx, ecx	       211	format.c	FUNCTION_6
0x400006e	    0x8b0d00000000	            mov ecx, dword [0x04000074] 	       221	format.c	FUNCTION_6
0x4000074	        0x894c2408	                mov dword [rsp + 8], ecx	       221	format.c	FUNCTION_6
0x4000078	          0x4885d2	                           test rdx, rdx	       224	format.c	FUNCTION_6	IF_1
0x400007b	            0x7407	                            je 0x4000084	       224	format.c	FUNCTION_6	IF_1
0x400007d	    0x48c702000000	                      mov qword [rdx], 0	       225	format.c	FUNCTION_6	IF_1
0x4000084	         0xfb65344	           movzx edx, byte [rbx + 0x44] 	       227	format.c	FUNCTION_6	IF_2	CALL_1
0x4000088	          0xf6c208	                              test dl, 8	       227	format.c	FUNCTION_6	IF_2	CALL_1
0x400008b	            0x7409	                            je 0x4000096	       227	format.c	FUNCTION_6	IF_2	CALL_1
0x400008d	            0x89d0	                            mov eax, edx	       228	format.c	FUNCTION_6	IF_2
0x400008f	          0x83e007	                              and eax, 7	       228	format.c	FUNCTION_6	IF_2
0x4000092	            0x3c03	                               cmp al, 3	       228	format.c	FUNCTION_6	IF_2
0x4000094	            0x7614	                           jbe 0x40000aa	       228	format.c	FUNCTION_6	IF_2
0x4000096	      0xbf05000000	                              mov edi, 5	       230	format.c	FUNCTION_6	IF_2	CALL_2
0x400009b	      0xe800000000	                          call 0x40000a0	       230	format.c	FUNCTION_6	IF_2	CALL_2
0x40000a0	      0xb800000000	                              mov eax, 0	       231	format.c	FUNCTION_6	IF_2
0x40000a5	      0xe9aa070000	                           jmp 0x4000854	       231	format.c	FUNCTION_6	IF_2
0x40000aa	          0xf6c207	                              test dl, 7	       234	format.c	FUNCTION_6	IF_3
0x40000ad	            0x7410	                            je 0x40000bf	       234	format.c	FUNCTION_6	IF_3
0x40000af	           0xfb6c0	                           movzx eax, al	       235	format.c	FUNCTION_6	IF_3
0x40000b2	            0x39e8	                            cmp eax, ebp	       235	format.c	FUNCTION_6	IF_3
0x40000b4	           0xf94c0	                                 sete al	       235	format.c	FUNCTION_6	IF_3
0x40000b7	           0xfb6c0	                           movzx eax, al	       235	format.c	FUNCTION_6	IF_3
0x40000ba	      0xe995070000	                           jmp 0x4000854	       235	format.c	FUNCTION_6	IF_3
0x40000bf	    0x48837c242000	               cmp qword [rsp + 0x20], 0	       237	format.c	FUNCTION_6	IF_4
0x40000c5	            0x750d	                           jne 0x40000d4	       237	format.c	FUNCTION_6	IF_4
0x40000c7	    0x488b05000000	            mov rax, qword [0x040000ce] 	       237	format.c	FUNCTION_6	IF_4
0x40000ce	        0x48833800	                      cmp qword [rax], 0	       237	format.c	FUNCTION_6	IF_4
0x40000d2	            0x741d	                            je 0x40000f1	       237	format.c	FUNCTION_6	IF_4
0x40000d4	    0x488b3d000000	            mov rdi, qword [0x040000db] 	       242	format.c	FUNCTION_6	IF_4	CALL_3
0x40000db	        0x48c1e704	                              shl rdi, 4	       242	format.c	FUNCTION_6	IF_4	CALL_3
0x40000df	      0xe800000000	                          call 0x40000e4	       242	format.c	FUNCTION_6	IF_4	CALL_3
0x40000e4	          0x4989c4	                            mov r12, rax	       242	format.c	FUNCTION_6	IF_4	CALL_3
0x40000e7	          0x4885c0	                           test rax, rax	       243	format.c	FUNCTION_6	IF_4	IF_5
0x40000ea	            0x750b	                           jne 0x40000f7	       243	format.c	FUNCTION_6	IF_4	IF_5
0x40000ec	      0xe950070000	                           jmp 0x4000841	       243	format.c	FUNCTION_6	IF_4	IF_5
0x40000f1	    0x41bc00000000	                             mov r12d, 0	       217	format.c	FUNCTION_6
0x40000f7	            0x89e8	                            mov eax, ebp	       248	format.c	FUNCTION_6
0x40000f9	          0x83e007	                              and eax, 7	       248	format.c	FUNCTION_6
0x40000fc	         0xfb65344	           movzx edx, byte [rbx + 0x44] 	       248	format.c	FUNCTION_6
0x4000100	          0x83e2f8	                     and edx, 0xfffffff8	       248	format.c	FUNCTION_6
0x4000103	             0x9d0	                             or eax, edx	       248	format.c	FUNCTION_6
0x4000105	          0x884344	               mov byte [rbx + 0x44], al	       248	format.c	FUNCTION_6
0x4000108	        0x488b4308	                mov rax, qword [rbx + 8]	       249	format.c	FUNCTION_6
0x400010c	      0x4889442410	             mov qword [rsp + 0x10], rax	       249	format.c	FUNCTION_6
0x4000111	    0x48c744244000	               mov qword [rsp + 0x40], 0	       250	format.c	FUNCTION_6
0x400011a	        0xf6434704	               test byte [rbx + 0x47], 4	       253	format.c	FUNCTION_6	IF_6
0x400011e	            0x754c	                           jne 0x400016c	       253	format.c	FUNCTION_6	IF_6
0x4000120	      0xba00000000	                              mov edx, 0	       255	format.c	FUNCTION_6	IF_6	IF_7	CALL_4
0x4000125	      0xbe00000000	                              mov esi, 0	       255	format.c	FUNCTION_6	IF_6	IF_7	CALL_4
0x400012a	          0x4889df	                            mov rdi, rbx	       255	format.c	FUNCTION_6	IF_6	IF_7	CALL_4
0x400012d	      0xe800000000	                          call 0x4000132	       255	format.c	FUNCTION_6	IF_6	IF_7	CALL_4
0x4000132	            0x85c0	                           test eax, eax	       255	format.c	FUNCTION_6	IF_6	IF_7	CALL_4
0x4000134	     0xf85bd050000	                           jne 0x40006f7	       255	format.c	FUNCTION_6	IF_6	IF_7	CALL_4
0x400013a	        0x488b5308	                mov rdx, qword [rbx + 8]	       258	format.c	FUNCTION_6	IF_6	CALL_5
0x400013e	         0xfb64344	           movzx eax, byte [rbx + 0x44] 	       258	format.c	FUNCTION_6	IF_6	CALL_5
0x4000142	          0x83e007	                              and eax, 7	       258	format.c	FUNCTION_6	IF_6	CALL_5
0x4000145	          0x4889df	                            mov rdi, rbx	       258	format.c	FUNCTION_6	IF_6	CALL_5
0x4000148	    0xff94c2b00000	        call qword [rdx + rax*8 + 0xb0] 	       258	format.c	FUNCTION_6	IF_6	CALL_5
0x400014f	          0x4885c0	                           test rax, rax	       260	format.c	FUNCTION_6	IF_6	IF_8
0x4000152	     0xf855e050000	                           jne 0x40006b6	       260	format.c	FUNCTION_6	IF_6	IF_8
0x4000158	    0x48817c241000	               cmp qword [rsp + 0x10], 0	       275	format.c	FUNCTION_6	IF_6	IF_9
0x4000161	            0x7509	                           jne 0x400016c	       275	format.c	FUNCTION_6	IF_6	IF_9
0x4000163	          0x83fd02	                              cmp ebp, 2	       275	format.c	FUNCTION_6	IF_6	IF_9
0x4000166	     0xf8481050000	                            je 0x40006ed	       275	format.c	FUNCTION_6	IF_6	IF_9
0x400016c	    0x8b0500000000	            mov eax, dword [0x04000172] 	       287	format.c	FUNCTION_6
0x4000172	        0x89442434	             mov dword [rsp + 0x34], eax	       287	format.c	FUNCTION_6
0x4000176	    0x488b2d000000	            mov rbp, qword [0x0400017d] 	       289	format.c	FUNCTION_6	FOR_1
0x400017d	        0x488b4500	                    mov rax, qword [rbp]	       289	format.c	FUNCTION_6	FOR_1
0x4000181	          0x4885c0	                           test rax, rax	       289	format.c	FUNCTION_6	FOR_1
0x4000184	     0xf84b4020000	                            je 0x400043e	       289	format.c	FUNCTION_6	FOR_1
0x400018a	    0xc744240c0001	           mov dword [rsp + 0xc], 0x100 	       289	format.c	FUNCTION_6	FOR_1
0x4000192	    0xc74424300000	               mov dword [rsp + 0x30], 0	       289	format.c	FUNCTION_6	FOR_1
0x400019a	      0xbe00000000	                              mov esi, 0	       289	format.c	FUNCTION_6	FOR_1
0x400019f	    0x41bf00000000	                             mov r15d, 0	       289	format.c	FUNCTION_6	FOR_1
0x40001a5	    0x48c744242800	               mov qword [rsp + 0x28], 0	       289	format.c	FUNCTION_6	FOR_1
0x40001ae	    0x41bd00000000	                             mov r13d, 0	       289	format.c	FUNCTION_6	FOR_1
0x40001b4	        0x488d4b68	                   lea rcx, [rbx + 0x68]	       136	format.c	FUNCTION_2	CALL_2
0x40001b8	      0x48894c2418	             mov qword [rsp + 0x18], rcx	       136	format.c	FUNCTION_2	CALL_2
0x40001bd	      0x4c896c2438	             mov qword [rsp + 0x38], r13	       185	format.c	FUNCTION_5	CALL_1
0x40001c2	          0x4d89fe	                            mov r14, r15	       185	format.c	FUNCTION_5	CALL_1
0x40001c5	          0x4189f7	                           mov r15d, esi	       185	format.c	FUNCTION_5	CALL_1
0x40001c8	    0x483d00000000	                              cmp rax, 0	       294	format.c	FUNCTION_6	FOR_1	IF_10
0x40001ce	     0xf843a020000	                            je 0x400040e	       294	format.c	FUNCTION_6	FOR_1	IF_10
0x40001d4	        0xf6434704	               test byte [rbx + 0x47], 4	       295	format.c	FUNCTION_6	FOR_1	IF_10
0x40001d8	            0x750b	                           jne 0x40001e5	       295	format.c	FUNCTION_6	FOR_1	IF_10
0x40001da	      0x4839442410	            cmp qword [rsp + 0x10], rax 	       295	format.c	FUNCTION_6	FOR_1	IF_10
0x40001df	     0xf8429020000	                            je 0x400040e	       295	format.c	FUNCTION_6	FOR_1	IF_10
0x40001e5	    0x48c783f80000	               mov qword [rbx + 0xf8], 0	       145	format.c	FUNCTION_3
0x40001f0	    0x48c783c00000	               mov qword [rbx + 0xc0], 0	       146	format.c	FUNCTION_3
0x40001fb	    0x8163441f00fb	      and dword [rbx + 0x44], 0xfffb001f	       147	format.c	FUNCTION_3
0x4000202	          0x4889df	                            mov rdi, rbx	       148	format.c	FUNCTION_3	CALL_1
0x4000205	      0xe800000000	                          call 0x400020a	       148	format.c	FUNCTION_3	CALL_1
0x400020a	        0x8b442408	                mov eax, dword [rsp + 8]	       149	format.c	FUNCTION_3
0x400020e	    0x890500000000	            mov dword [0x04000214], eax 	       149	format.c	FUNCTION_3
0x4000214	        0x488b4500	                    mov rax, qword [rbp]	       304	format.c	FUNCTION_6	FOR_1
0x4000218	        0x48894308	                mov qword [rbx + 8], rax	       304	format.c	FUNCTION_6	FOR_1
0x400021c	      0xba00000000	                              mov edx, 0	       306	format.c	FUNCTION_6	FOR_1	IF_11	CALL_7
0x4000221	      0xbe00000000	                              mov esi, 0	       306	format.c	FUNCTION_6	FOR_1	IF_11	CALL_7
0x4000226	          0x4889df	                            mov rdi, rbx	       306	format.c	FUNCTION_6	FOR_1	IF_11	CALL_7
0x4000229	      0xe800000000	                          call 0x400022e	       306	format.c	FUNCTION_6	FOR_1	IF_11	CALL_7
0x400022e	            0x85c0	                           test eax, eax	       306	format.c	FUNCTION_6	FOR_1	IF_11	CALL_7
0x4000230	     0xf85c1040000	                           jne 0x40006f7	       306	format.c	FUNCTION_6	FOR_1	IF_11	CALL_7
0x4000236	      0xbf03000000	                              mov edi, 3	       313	format.c	FUNCTION_6	FOR_1	CALL_8
0x400023b	      0xe800000000	                          call 0x4000240	       313	format.c	FUNCTION_6	FOR_1	CALL_8
0x4000240	        0x488b5308	                mov rdx, qword [rbx + 8]	       315	format.c	FUNCTION_6	FOR_1	CALL_9
0x4000244	         0xfb64344	           movzx eax, byte [rbx + 0x44] 	       315	format.c	FUNCTION_6	FOR_1	CALL_9
0x4000248	          0x83e007	                              and eax, 7	       315	format.c	FUNCTION_6	FOR_1	CALL_9
0x400024b	          0x4889df	                            mov rdi, rbx	       315	format.c	FUNCTION_6	FOR_1	CALL_9
0x400024e	    0xff94c2b00000	        call qword [rdx + rax*8 + 0xb0] 	       315	format.c	FUNCTION_6	FOR_1	CALL_9
0x4000255	          0x4989c5	                            mov r13, rax	       315	format.c	FUNCTION_6	FOR_1	CALL_9
0x4000258	          0x4885c0	                           test rax, rax	       316	format.c	FUNCTION_6	FOR_1	IF_12
0x400025b	     0xf849f010000	                            je 0x4000400	       316	format.c	FUNCTION_6	FOR_1	IF_12
0x4000261	      0x440fb6701f	          movzx r14d, byte [rax + 0x1f] 	       318	format.c	FUNCTION_6	FOR_1	IF_12
0x4000266	    0x48817d000000	                      cmp qword [rbp], 0	       324	format.c	FUNCTION_6	FOR_1	IF_12	IF_13
0x400026e	     0xfb605000000	           movzx eax, byte [0x04000275] 	       325	format.c	FUNCTION_6	FOR_1	IF_12	IF_13
0x4000275	        0x440f44f0	                         cmove r14d, eax	       325	format.c	FUNCTION_6	FOR_1	IF_12	IF_13
0x4000279	    0x48837c244000	               cmp qword [rsp + 0x40], 0	       329	format.c	FUNCTION_6	FOR_1	IF_12	IF_14
0x400027f	            0x7413	                            je 0x4000294	       329	format.c	FUNCTION_6	FOR_1	IF_12	IF_14
0x4000281	      0x488d7c2478	                   lea rdi, [rsp + 0x78]	       185	format.c	FUNCTION_5	CALL_1
0x4000286	      0xe800000000	                          call 0x400028b	       185	format.c	FUNCTION_5	CALL_1
0x400028b	    0x48c744244000	               mov qword [rsp + 0x40], 0	       186	format.c	FUNCTION_5
0x4000294	         0xfb64344	           movzx eax, byte [rbx + 0x44] 	       332	format.c	FUNCTION_6	FOR_1	IF_12	IF_15
0x4000298	          0x83e007	                              and eax, 7	       332	format.c	FUNCTION_6	FOR_1	IF_12	IF_15
0x400029b	            0x3c02	                               cmp al, 2	       332	format.c	FUNCTION_6	FOR_1	IF_12	IF_15
0x400029d	            0x7510	                           jne 0x40002af	       332	format.c	FUNCTION_6	FOR_1	IF_12	IF_15
0x400029f	        0x807b4700	                cmp byte [rbx + 0x47], 0	       333	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	CALL_11
0x40002a3	            0x7950	                           jns 0x40002f5	       333	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	CALL_11
0x40002a5	      0xe800000000	                          call 0x40002aa	       334	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	CALL_12
0x40002aa	          0x83f804	                              cmp eax, 4	       334	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	CALL_12
0x40002ad	            0x7446	                            je 0x40002f5	       334	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	CALL_12
0x40002af	    0x4c3b2d000000	            cmp r13, qword [0x040002b6] 	       339	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	IF_16
0x40002b6	     0xf84fa030000	                            je 0x40006b6	       339	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	IF_16
0x40002bc	          0x4d85e4	                           test r12, r12	       342	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	IF_17
0x40002bf	            0x7407	                            je 0x40002c8	       342	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	IF_17
0x40002c1	          0x4963c7	                        movsxd rax, r15d	       343	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	IF_17
0x40002c4	        0x4d892cc4	            mov qword [r12 + rax*8], r13	       343	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	IF_17
0x40002c8	        0x4183c701	                             add r15d, 1	       344	format.c	FUNCTION_6	FOR_1	IF_12	IF_15
0x40002cc	        0x8b44240c	              mov eax, dword [rsp + 0xc]	       346	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	IF_18
0x40002d0	          0x4139c6	                           cmp r14d, eax	       346	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	IF_18
0x40002d3	            0x7c07	                            jl 0x40002dc	       346	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	IF_18
0x40002d5	            0x7f4c	                            jg 0x4000323	       351	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	IF_19
0x40002d7	          0x4189c6	                           mov r14d, eax	       351	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	IF_19
0x40002da	            0xeb08	                           jmp 0x40002e4	       351	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	IF_19
0x40002dc	    0xc74424300000	               mov dword [rsp + 0x30], 0	       349	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	IF_18
0x40002e4	      0x8344243001	               add dword [rsp + 0x30], 1	       355	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	IF_19
0x40002e9	      0x448974240c	             mov dword [rsp + 0xc], r14d	       355	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	IF_19
0x40002ee	      0x4c896c2438	             mov qword [rsp + 0x38], r13	       354	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	IF_19
0x40002f3	            0xeb2e	                           jmp 0x4000323	       354	format.c	FUNCTION_6	FOR_1	IF_12	IF_15	IF_19
0x40002f5	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       363	format.c	FUNCTION_6	FOR_1	IF_12	ELSE_1	IF_20
0x40002fa	    0x483905000000	            cmp qword [0x04000301], rax 	       363	format.c	FUNCTION_6	FOR_1	IF_12	ELSE_1	IF_20
0x4000301	            0x7409	                            je 0x400030c	       363	format.c	FUNCTION_6	FOR_1	IF_12	ELSE_1	IF_20
0x4000303	        0x488b4500	                    mov rax, qword [rbp]	       364	format.c	FUNCTION_6	FOR_1	IF_12	ELSE_1	IF_20
0x4000307	      0x4889442428	             mov qword [rsp + 0x28], rax	       364	format.c	FUNCTION_6	FOR_1	IF_12	ELSE_1	IF_20
0x400030c	          0x4d85e4	                           test r12, r12	       365	format.c	FUNCTION_6	FOR_1	IF_12	ELSE_1	IF_21
0x400030f	            0x740d	                            je 0x400031e	       365	format.c	FUNCTION_6	FOR_1	IF_12	ELSE_1	IF_21
0x4000311	        0x488b5500	                    mov rdx, qword [rbp]	       366	format.c	FUNCTION_6	FOR_1	IF_12	ELSE_1	IF_21
0x4000315	      0x4863442434	         movsxd rax, dword [rsp + 0x34] 	       366	format.c	FUNCTION_6	FOR_1	IF_12	ELSE_1	IF_21
0x400031a	        0x498914c4	            mov qword [r12 + rax*8], rdx	       366	format.c	FUNCTION_6	FOR_1	IF_12	ELSE_1	IF_21
0x400031e	      0x8344243401	               add dword [rsp + 0x34], 1	       367	format.c	FUNCTION_6	FOR_1	IF_12	ELSE_1
0x4000323	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	       123	format.c	FUNCTION_2
0x400032a	      0x4889442448	             mov qword [rsp + 0x48], rax	       123	format.c	FUNCTION_2
0x400032f	    0x488b83c00000	            mov rax, qword [rbx + 0xc0] 	       124	format.c	FUNCTION_2
0x4000336	      0x4889442458	             mov qword [rsp + 0x58], rax	       124	format.c	FUNCTION_2
0x400033b	          0x8b4344	            mov eax, dword [rbx + 0x44] 	       125	format.c	FUNCTION_2
0x400033e	          0xc1e805	                              shr eax, 5	       125	format.c	FUNCTION_2
0x4000341	      0x25ffff0f00	                        and eax, 0xfffff	       125	format.c	FUNCTION_2
0x4000346	        0x89442450	             mov dword [rsp + 0x50], eax	       125	format.c	FUNCTION_2
0x400034a	    0x488b83900000	            mov rax, qword [rbx + 0x90] 	       126	format.c	FUNCTION_2
0x4000351	      0x4889442460	             mov qword [rsp + 0x60], rax	       126	format.c	FUNCTION_2
0x4000356	    0x488b83980000	            mov rax, qword [rbx + 0x98] 	       127	format.c	FUNCTION_2
0x400035d	      0x4889442468	             mov qword [rsp + 0x68], rax	       127	format.c	FUNCTION_2
0x4000362	    0x8b83a0000000	            mov eax, dword [rbx + 0xa0] 	       128	format.c	FUNCTION_2
0x4000368	        0x89442470	             mov dword [rsp + 0x70], eax	       128	format.c	FUNCTION_2
0x400036c	    0x8b0500000000	            mov eax, dword [0x04000372] 	       129	format.c	FUNCTION_2
0x4000372	        0x89442474	             mov dword [rsp + 0x74], eax	       129	format.c	FUNCTION_2
0x4000376	        0x488b4368	            mov rax, qword [rbx + 0x68] 	       130	format.c	FUNCTION_2
0x400037a	      0x4889442478	             mov qword [rsp + 0x78], rax	       130	format.c	FUNCTION_2
0x400037f	        0x488b4370	            mov rax, qword [rbx + 0x70] 	       130	format.c	FUNCTION_2
0x4000383	    0x488984248000	             mov qword [rsp + 0x80], rax	       130	format.c	FUNCTION_2
0x400038b	        0x488b4378	            mov rax, qword [rbx + 0x78] 	       130	format.c	FUNCTION_2
0x400038f	    0x488984248800	             mov qword [rsp + 0x88], rax	       130	format.c	FUNCTION_2
0x4000397	    0x488b83800000	            mov rax, qword [rbx + 0x80] 	       130	format.c	FUNCTION_2
0x400039e	    0x488984249000	             mov qword [rsp + 0x90], rax	       130	format.c	FUNCTION_2
0x40003a6	    0x488b83880000	            mov rax, qword [rbx + 0x88] 	       130	format.c	FUNCTION_2
0x40003ad	    0x488984249800	             mov qword [rsp + 0x98], rax	       130	format.c	FUNCTION_2
0x40003b5	      0xbe01000000	                              mov esi, 1	       131	format.c	FUNCTION_2	CALL_1
0x40003ba	          0x4889df	                            mov rdi, rbx	       131	format.c	FUNCTION_2	CALL_1
0x40003bd	      0xe800000000	                          call 0x40003c2	       131	format.c	FUNCTION_2	CALL_1
0x40003c2	      0x4889442440	             mov qword [rsp + 0x40], rax	       131	format.c	FUNCTION_2	CALL_1
0x40003c7	    0x488b93100100	           mov rdx, qword [rbx + 0x110] 	       132	format.c	FUNCTION_2
0x40003ce	    0x48899424a000	             mov qword [rsp + 0xa0], rdx	       132	format.c	FUNCTION_2
0x40003d6	          0x4885c0	                           test rax, rax	       133	format.c	FUNCTION_2	IF_1
0x40003d9	     0xf8418030000	                            je 0x40006f7	       133	format.c	FUNCTION_2	IF_1
0x40003df	      0xba30010000	                          mov edx, 0x130	       136	format.c	FUNCTION_2	CALL_2
0x40003e4	      0xbe00000000	                              mov esi, 0	       136	format.c	FUNCTION_2	CALL_2
0x40003e9	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       136	format.c	FUNCTION_2	CALL_2
0x40003ee	      0xe800000000	                          call 0x40003f3	       136	format.c	FUNCTION_2	CALL_2
0x40003f3	            0x85c0	                           test eax, eax	       370	format.c	FUNCTION_6	FOR_1	IF_12	IF_22	CALL_13
0x40003f5	     0xf84fc020000	                            je 0x40006f7	       370	format.c	FUNCTION_6	FOR_1	IF_12	IF_22	CALL_13
0x40003fb	          0x4d89ee	                            mov r14, r13	       328	format.c	FUNCTION_6	FOR_1	IF_12
0x40003fe	            0xeb0e	                           jmp 0x400040e	       328	format.c	FUNCTION_6	FOR_1	IF_12
0x4000400	      0xe800000000	                          call 0x4000405	       373	format.c	FUNCTION_6	FOR_1	ELSE_2	IF_23	CALL_14
0x4000405	          0x83f803	                              cmp eax, 3	       373	format.c	FUNCTION_6	FOR_1	ELSE_2	IF_23	CALL_14
0x4000408	     0xf85e9020000	                           jne 0x40006f7	       373	format.c	FUNCTION_6	FOR_1	ELSE_2	IF_23	CALL_14
0x400040e	        0x4883c508	                              add rbp, 8	       289	format.c	FUNCTION_6	FOR_1
0x4000412	        0x488b4500	                    mov rax, qword [rbp]	       289	format.c	FUNCTION_6	FOR_1
0x4000416	          0x4885c0	                           test rax, rax	       289	format.c	FUNCTION_6	FOR_1
0x4000419	     0xf85a9fdffff	                           jne 0x40001c8	       289	format.c	FUNCTION_6	FOR_1
0x400041f	      0x4c8b6c2438	            mov r13, qword [rsp + 0x38] 	       289	format.c	FUNCTION_6	FOR_1
0x4000424	          0x4489f8	                           mov eax, r15d	       289	format.c	FUNCTION_6	FOR_1
0x4000427	          0x4489fd	                           mov ebp, r15d	       289	format.c	FUNCTION_6	FOR_1
0x400042a	          0x4d89f7	                            mov r15, r14	       289	format.c	FUNCTION_6	FOR_1
0x400042d	      0x837c243001	               cmp dword [rsp + 0x30], 1	       377	format.c	FUNCTION_6	IF_24
0x4000432	     0xf8406010000	                            je 0x400053e	       377	format.c	FUNCTION_6	IF_24
0x4000438	            0x85c0	                           test eax, eax	       380	format.c	FUNCTION_6	IF_25
0x400043a	            0x7421	                            je 0x400045d	       380	format.c	FUNCTION_6	IF_25
0x400043c	            0xeb5f	                           jmp 0x400049d	       380	format.c	FUNCTION_6	IF_25
0x400043e	    0xc744240c0001	           mov dword [rsp + 0xc], 0x100 	       284	format.c	FUNCTION_6
0x4000446	    0xc74424300000	               mov dword [rsp + 0x30], 0	       285	format.c	FUNCTION_6
0x400044e	    0x41bf00000000	                             mov r15d, 0	       283	format.c	FUNCTION_6
0x4000454	    0x48c744242800	               mov qword [rsp + 0x28], 0	       282	format.c	FUNCTION_6
0x400045d	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       385	format.c	FUNCTION_6	IF_25	IF_26
0x4000462	    0x483905000000	            cmp qword [0x04000469], rax 	       385	format.c	FUNCTION_6	IF_25	IF_26
0x4000469	     0xf84fa030000	                            je 0x4000869	       385	format.c	FUNCTION_6	IF_25	IF_26
0x400046f	    0x488b05000000	            mov rax, qword [0x04000476] 	       391	format.c	FUNCTION_6	IF_25	ELSE_3
0x4000476	        0x8b742434	            mov esi, dword [rsp + 0x34] 	       391	format.c	FUNCTION_6	IF_25	ELSE_3
0x400047a	            0x29c6	                            sub esi, eax	       391	format.c	FUNCTION_6	IF_25	ELSE_3
0x400047c	            0x89f5	                            mov ebp, esi	       391	format.c	FUNCTION_6	IF_25	ELSE_3
0x400047e	          0x4d85e4	                           test r12, r12	       393	format.c	FUNCTION_6	IF_25	ELSE_3	IF_27
0x4000481	            0x741f	                            je 0x40004a2	       393	format.c	FUNCTION_6	IF_25	ELSE_3	IF_27
0x4000483	          0x83fe01	                              cmp esi, 1	       393	format.c	FUNCTION_6	IF_25	ELSE_3	IF_27
0x4000486	            0x7e1a	                           jle 0x40004a2	       393	format.c	FUNCTION_6	IF_25	ELSE_3	IF_27
0x4000488	          0x4863d6	                         movsxd rdx, esi	        53	string3.h	FUNCTION_9	CALL_3
0x400048b	        0x48c1e203	                              shl rdx, 3	        53	string3.h	FUNCTION_9	CALL_3
0x400048f	        0x498d34c4	                  lea rsi, [r12 + rax*8]	        53	string3.h	FUNCTION_9	CALL_3
0x4000493	          0x4c89e7	                            mov rdi, r12	        53	string3.h	FUNCTION_9	CALL_3
0x4000496	      0xe800000000	                          call 0x400049b	        53	string3.h	FUNCTION_9	CALL_3
0x400049b	            0xeb05	                           jmp 0x40004a2	        53	string3.h	FUNCTION_9	CALL_3
0x400049d	      0x4c896c2428	             mov qword [rsp + 0x28], r13	        53	string3.h	FUNCTION_9	CALL_3
0x40004a2	          0x83fd01	                              cmp ebp, 1	       403	format.c	FUNCTION_6	IF_28
0x40004a5	     0xf8e9a000000	                           jle 0x4000545	       403	format.c	FUNCTION_6	IF_28
0x40004ab	    0x488b0d000000	            mov rcx, qword [0x040004b2] 	       405	format.c	FUNCTION_6	IF_28
0x40004b2	            0x89ef	                            mov edi, ebp	       405	format.c	FUNCTION_6	IF_28
0x40004b4	        0x8b74240c	              mov esi, dword [rsp + 0xc]	       405	format.c	FUNCTION_6	IF_28
0x40004b8	            0xeb21	                           jmp 0x40004db	       407	format.c	FUNCTION_6	IF_28	WHILE_1
0x40004ba	          0x4863d0	                         movsxd rdx, eax	       412	format.c	FUNCTION_6	IF_28	WHILE_1	WHILE_2	IF_29
0x40004bd	        0x4d3b2cd4	            cmp r13, qword [r12 + rdx*8]	       412	format.c	FUNCTION_6	IF_28	WHILE_1	WHILE_2	IF_29
0x40004c1	            0x7510	                           jne 0x40004d3	       412	format.c	FUNCTION_6	IF_28	WHILE_1	WHILE_2	IF_29
0x40004c3	      0x410fb6551f	           movzx edx, byte [r13 + 0x1f] 	       413	format.c	FUNCTION_6	IF_28	WHILE_1	WHILE_2	IF_29
0x40004c8	            0x39f2	                            cmp edx, esi	       413	format.c	FUNCTION_6	IF_28	WHILE_1	WHILE_2	IF_29
0x40004ca	            0x7f07	                            jg 0x40004d3	       413	format.c	FUNCTION_6	IF_28	WHILE_1	WHILE_2	IF_29
0x40004cc	      0xe99d030000	                           jmp 0x400086e	       413	format.c	FUNCTION_6	IF_28	WHILE_1	WHILE_2	IF_29
0x40004d1	            0x89f8	                            mov eax, edi	       413	format.c	FUNCTION_6	IF_28	WHILE_1	WHILE_2	IF_29
0x40004d3	          0x83e801	                              sub eax, 1	       411	format.c	FUNCTION_6	IF_28	WHILE_1	WHILE_2
0x40004d6	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       411	format.c	FUNCTION_6	IF_28	WHILE_1	WHILE_2
0x40004d9	            0x75df	                           jne 0x40004ba	       411	format.c	FUNCTION_6	IF_28	WHILE_1	WHILE_2
0x40004db	        0x4883c108	                              add rcx, 8	       407	format.c	FUNCTION_6	IF_28	WHILE_1
0x40004df	        0x4c8b69f8	                mov r13, qword [rcx - 8]	       407	format.c	FUNCTION_6	IF_28	WHILE_1
0x40004e3	          0x4d85ed	                           test r13, r13	       407	format.c	FUNCTION_6	IF_28	WHILE_1
0x40004e6	            0x75e9	                           jne 0x40004d1	       407	format.c	FUNCTION_6	IF_28	WHILE_1
0x40004e8	          0x83fd01	                              cmp ebp, 1	       427	format.c	FUNCTION_6	IF_31
0x40004eb	           0xf9fc2	                                 setg dl	       427	format.c	FUNCTION_6	IF_31
0x40004ee	        0x3b6c2430	            cmp ebp, dword [rsp + 0x30] 	       427	format.c	FUNCTION_6	IF_31
0x40004f2	           0xf95c0	                                setne al	       427	format.c	FUNCTION_6	IF_31
0x40004f5	            0x84c2	                             test dl, al	       427	format.c	FUNCTION_6	IF_31
0x40004f7	            0x7466	                            je 0x400055f	       427	format.c	FUNCTION_6	IF_31
0x40004f9	          0x4d85e4	                           test r12, r12	       427	format.c	FUNCTION_6	IF_31
0x40004fc	            0x7461	                            je 0x400055f	       427	format.c	FUNCTION_6	IF_31
0x40004fe	            0x85ed	                           test ebp, ebp	       431	format.c	FUNCTION_6	IF_31	FOR_2
0x4000500	            0x7e4a	                           jle 0x400054c	       431	format.c	FUNCTION_6	IF_31	FOR_2
0x4000502	        0x4d8b2c24	                    mov r13, qword [r12]	       433	format.c	FUNCTION_6	IF_31	FOR_2
0x4000506	      0x410fb6451f	           movzx eax, byte [r13 + 0x1f] 	       434	format.c	FUNCTION_6	IF_31	FOR_2	IF_32
0x400050b	        0x8b74240c	              mov esi, dword [rsp + 0xc]	       434	format.c	FUNCTION_6	IF_31	FOR_2	IF_32
0x400050f	            0x39f0	                            cmp eax, esi	       434	format.c	FUNCTION_6	IF_31	FOR_2	IF_32
0x4000511	            0x7e40	                           jle 0x4000553	       434	format.c	FUNCTION_6	IF_31	FOR_2	IF_32
0x4000513	      0x498d442408	                      lea rax, [r12 + 8]	       434	format.c	FUNCTION_6	IF_31	FOR_2	IF_32
0x4000518	          0x8d55ff	                      lea edx, [rbp - 1]	       434	format.c	FUNCTION_6	IF_31	FOR_2	IF_32
0x400051b	      0x498d4cd408	              lea rcx, [r12 + rdx*8 + 8]	       434	format.c	FUNCTION_6	IF_31	FOR_2	IF_32
0x4000520	            0xeb10	                           jmp 0x4000532	       434	format.c	FUNCTION_6	IF_31	FOR_2	IF_32
0x4000522	          0x4c8b28	                    mov r13, qword [rax]	       433	format.c	FUNCTION_6	IF_31	FOR_2
0x4000525	        0x4883c008	                              add rax, 8	       433	format.c	FUNCTION_6	IF_31	FOR_2
0x4000529	      0x410fb6551f	           movzx edx, byte [r13 + 0x1f] 	       434	format.c	FUNCTION_6	IF_31	FOR_2	IF_32
0x400052e	            0x39f2	                            cmp edx, esi	       434	format.c	FUNCTION_6	IF_31	FOR_2	IF_32
0x4000530	            0x7e28	                           jle 0x400055a	       434	format.c	FUNCTION_6	IF_31	FOR_2	IF_32
0x4000532	          0x4839c8	                            cmp rax, rcx	       431	format.c	FUNCTION_6	IF_31	FOR_2
0x4000535	            0x75eb	                           jne 0x4000522	       431	format.c	FUNCTION_6	IF_31	FOR_2
0x4000537	      0xbd01000000	                              mov ebp, 1	       437	format.c	FUNCTION_6	IF_31
0x400053c	            0xeb21	                           jmp 0x400055f	       437	format.c	FUNCTION_6	IF_31
0x400053e	      0xbd01000000	                              mov ebp, 1	       378	format.c	FUNCTION_6	IF_24
0x4000543	            0xeb1a	                           jmp 0x400055f	       378	format.c	FUNCTION_6	IF_24
0x4000545	      0x4c8b6c2428	            mov r13, qword [rsp + 0x28] 	       378	format.c	FUNCTION_6	IF_24
0x400054a	            0xeb13	                           jmp 0x400055f	       378	format.c	FUNCTION_6	IF_24
0x400054c	      0xbd01000000	                              mov ebp, 1	       437	format.c	FUNCTION_6	IF_31
0x4000551	            0xeb0c	                           jmp 0x400055f	       437	format.c	FUNCTION_6	IF_31
0x4000553	      0xbd01000000	                              mov ebp, 1	       437	format.c	FUNCTION_6	IF_31
0x4000558	            0xeb05	                           jmp 0x400055f	       437	format.c	FUNCTION_6	IF_31
0x400055a	      0xbd01000000	                              mov ebp, 1	       437	format.c	FUNCTION_6	IF_31
0x400055f	    0x48837c244000	               cmp qword [rsp + 0x40], 0	       444	format.c	FUNCTION_6	IF_33
0x4000565	     0xf84cb000000	                            je 0x4000636	       444	format.c	FUNCTION_6	IF_33
0x400056b	        0x488d7b68	                   lea rdi, [rbx + 0x68]	       157	format.c	FUNCTION_4	CALL_1
0x400056f	      0xe800000000	                          call 0x4000574	       157	format.c	FUNCTION_4	CALL_1
0x4000574	      0x488b442448	            mov rax, qword [rsp + 0x48] 	       159	format.c	FUNCTION_4
0x4000579	    0x488983f80000	             mov qword [rbx + 0xf8], rax	       159	format.c	FUNCTION_4
0x4000580	      0x488b442458	            mov rax, qword [rsp + 0x58] 	       160	format.c	FUNCTION_4
0x4000585	    0x488983c00000	             mov qword [rbx + 0xc0], rax	       160	format.c	FUNCTION_4
0x400058c	        0x8b442450	            mov eax, dword [rsp + 0x50] 	       161	format.c	FUNCTION_4
0x4000590	      0x25ffff0f00	                        and eax, 0xfffff	       161	format.c	FUNCTION_4
0x4000595	          0xc1e005	                              shl eax, 5	       161	format.c	FUNCTION_4
0x4000598	          0x8b5344	            mov edx, dword [rbx + 0x44] 	       161	format.c	FUNCTION_4
0x400059b	    0x81e21f0000fe	                     and edx, 0xfe00001f	       161	format.c	FUNCTION_4
0x40005a1	             0x9d0	                             or eax, edx	       161	format.c	FUNCTION_4
0x40005a3	          0x894344	             mov dword [rbx + 0x44], eax	       161	format.c	FUNCTION_4
0x40005a6	      0x488b442478	            mov rax, qword [rsp + 0x78] 	       162	format.c	FUNCTION_4
0x40005ab	        0x48894368	             mov qword [rbx + 0x68], rax	       162	format.c	FUNCTION_4
0x40005af	    0x488b84248000	            mov rax, qword [rsp + 0x80] 	       162	format.c	FUNCTION_4
0x40005b7	        0x48894370	             mov qword [rbx + 0x70], rax	       162	format.c	FUNCTION_4
0x40005bb	    0x488b84248800	            mov rax, qword [rsp + 0x88] 	       162	format.c	FUNCTION_4
0x40005c3	        0x48894378	             mov qword [rbx + 0x78], rax	       162	format.c	FUNCTION_4
0x40005c7	    0x488b84249000	            mov rax, qword [rsp + 0x90] 	       162	format.c	FUNCTION_4
0x40005cf	    0x488983800000	             mov qword [rbx + 0x80], rax	       162	format.c	FUNCTION_4
0x40005d6	    0x488b84249800	            mov rax, qword [rsp + 0x98] 	       162	format.c	FUNCTION_4
0x40005de	    0x488983880000	             mov qword [rbx + 0x88], rax	       162	format.c	FUNCTION_4
0x40005e5	      0x488b442460	            mov rax, qword [rsp + 0x60] 	       163	format.c	FUNCTION_4
0x40005ea	    0x488983900000	             mov qword [rbx + 0x90], rax	       163	format.c	FUNCTION_4
0x40005f1	      0x488b442468	            mov rax, qword [rsp + 0x68] 	       164	format.c	FUNCTION_4
0x40005f6	    0x488983980000	             mov qword [rbx + 0x98], rax	       164	format.c	FUNCTION_4
0x40005fd	        0x8b442470	            mov eax, dword [rsp + 0x70] 	       165	format.c	FUNCTION_4
0x4000601	    0x8983a0000000	             mov dword [rbx + 0xa0], eax	       165	format.c	FUNCTION_4
0x4000607	        0x8b442474	            mov eax, dword [rsp + 0x74] 	       166	format.c	FUNCTION_4
0x400060b	    0x890500000000	            mov dword [0x04000611], eax 	       166	format.c	FUNCTION_4
0x4000611	    0x488b8424a000	            mov rax, qword [rsp + 0xa0] 	       167	format.c	FUNCTION_4
0x4000619	    0x488983100100	            mov qword [rbx + 0x110], rax	       167	format.c	FUNCTION_4
0x4000620	      0x488b742440	            mov rsi, qword [rsp + 0x40] 	       171	format.c	FUNCTION_4	CALL_2
0x4000625	          0x4889df	                            mov rdi, rbx	       171	format.c	FUNCTION_4	CALL_2
0x4000628	      0xe800000000	                          call 0x400062d	       171	format.c	FUNCTION_4	CALL_2
0x400062d	    0x48c744244000	               mov qword [rsp + 0x40], 0	       172	format.c	FUNCTION_4
0x4000636	          0x83fd01	                              cmp ebp, 1	       447	format.c	FUNCTION_6	IF_34
0x4000639	     0xf85a6000000	                           jne 0x40006e5	       447	format.c	FUNCTION_6	IF_34
0x400063f	        0x4c896b08	                mov qword [rbx + 8], r13	       449	format.c	FUNCTION_6	IF_34
0x4000643	          0x4d39fd	                            cmp r13, r15	       453	format.c	FUNCTION_6	IF_34	IF_35
0x4000646	            0x746e	                            je 0x40006b6	       453	format.c	FUNCTION_6	IF_34	IF_35
0x4000648	    0x48c783f80000	               mov qword [rbx + 0xf8], 0	       145	format.c	FUNCTION_3
0x4000653	    0x48c783c00000	               mov qword [rbx + 0xc0], 0	       146	format.c	FUNCTION_3
0x400065e	    0x8163441f00fb	      and dword [rbx + 0x44], 0xfffb001f	       147	format.c	FUNCTION_3
0x4000665	          0x4889df	                            mov rdi, rbx	       148	format.c	FUNCTION_3	CALL_1
0x4000668	      0xe800000000	                          call 0x400066d	       148	format.c	FUNCTION_3	CALL_1
0x400066d	        0x8b442408	                mov eax, dword [rsp + 8]	       149	format.c	FUNCTION_3
0x4000671	    0x890500000000	            mov dword [0x04000677], eax 	       149	format.c	FUNCTION_3
0x4000677	      0xba00000000	                              mov edx, 0	       456	format.c	FUNCTION_6	IF_34	IF_35	IF_36	CALL_18
0x400067c	      0xbe00000000	                              mov esi, 0	       456	format.c	FUNCTION_6	IF_34	IF_35	IF_36	CALL_18
0x4000681	          0x4889df	                            mov rdi, rbx	       456	format.c	FUNCTION_6	IF_34	IF_35	IF_36	CALL_18
0x4000684	      0xe800000000	                          call 0x4000689	       456	format.c	FUNCTION_6	IF_34	IF_35	IF_36	CALL_18
0x4000689	            0x85c0	                           test eax, eax	       456	format.c	FUNCTION_6	IF_34	IF_35	IF_36	CALL_18
0x400068b	            0x756a	                           jne 0x40006f7	       456	format.c	FUNCTION_6	IF_34	IF_35	IF_36	CALL_18
0x400068d	        0x488b5308	                mov rdx, qword [rbx + 8]	       458	format.c	FUNCTION_6	IF_34	IF_35	CALL_19
0x4000691	         0xfb64344	           movzx eax, byte [rbx + 0x44] 	       458	format.c	FUNCTION_6	IF_34	IF_35	CALL_19
0x4000695	          0x83e007	                              and eax, 7	       458	format.c	FUNCTION_6	IF_34	IF_35	CALL_19
0x4000698	          0x4889df	                            mov rdi, rbx	       458	format.c	FUNCTION_6	IF_34	IF_35	CALL_19
0x400069b	    0xff94c2b00000	        call qword [rdx + rax*8 + 0xb0] 	       458	format.c	FUNCTION_6	IF_34	IF_35	CALL_19
0x40006a2	          0x4885c0	                           test rax, rax	       459	format.c	FUNCTION_6	IF_34	IF_35	CALL_20
0x40006a5	            0x750f	                           jne 0x40006b6	       459	format.c	FUNCTION_6	IF_34	IF_35	CALL_20
0x40006a7	      0xbecb010000	                          mov esi, 0x1cb	       459	format.c	FUNCTION_6	IF_34	IF_35	CALL_20
0x40006ac	      0xbf00000000	                              mov edi, 0	       459	format.c	FUNCTION_6	IF_34	IF_35	CALL_20
0x40006b1	      0xe800000000	                          call 0x40006b6	       459	format.c	FUNCTION_6	IF_34	IF_35	CALL_20
0x40006b6	         0xfb64344	           movzx eax, byte [rbx + 0x44] 	       468	format.c	FUNCTION_6	IF_34	IF_37
0x40006ba	          0x83e018	                           and eax, 0x18	       468	format.c	FUNCTION_6	IF_34	IF_37
0x40006bd	            0x3c18	                            cmp al, 0x18	       468	format.c	FUNCTION_6	IF_34	IF_37
0x40006bf	            0x7504	                           jne 0x40006c5	       468	format.c	FUNCTION_6	IF_34	IF_37
0x40006c1	        0x804b4740	              or byte [rbx + 0x47], 0x40	       469	format.c	FUNCTION_6	IF_34	IF_37
0x40006c5	      0xb801000000	                              mov eax, 1	       475	format.c	FUNCTION_6	IF_34
0x40006ca	          0x4d85e4	                           test r12, r12	       471	format.c	FUNCTION_6	IF_34	IF_38
0x40006cd	     0xf8481010000	                            je 0x4000854	       471	format.c	FUNCTION_6	IF_34	IF_38
0x40006d3	          0x4c89e7	                            mov rdi, r12	       472	format.c	FUNCTION_6	IF_34	CALL_21
0x40006d6	      0xe800000000	                          call 0x40006db	       472	format.c	FUNCTION_6	IF_34	CALL_21
0x40006db	      0xb801000000	                              mov eax, 1	       475	format.c	FUNCTION_6	IF_34
0x40006e0	      0xe96f010000	                           jmp 0x4000854	       475	format.c	FUNCTION_6	IF_34
0x40006e5	            0x85ed	                           test ebp, ebp	       478	format.c	FUNCTION_6	IF_39
0x40006e7	     0xf85fe000000	                           jne 0x40007eb	       478	format.c	FUNCTION_6	IF_39
0x40006ed	      0xbf0c000000	                            mov edi, 0xc	       481	format.c	FUNCTION_6	IF_39	CALL_22
0x40006f2	      0xe800000000	                          call 0x40006f7	       481	format.c	FUNCTION_6	IF_39	CALL_22
0x40006f7	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       483	format.c	FUNCTION_6	IF_39
0x40006fc	        0x48894308	                mov qword [rbx + 8], rax	       483	format.c	FUNCTION_6	IF_39
0x4000700	        0x806344f8	             and byte [rbx + 0x44], 0xf8	       484	format.c	FUNCTION_6	IF_39
0x4000704	          0x4d85e4	                           test r12, r12	       485	format.c	FUNCTION_6	IF_39	IF_40
0x4000707	            0x7408	                            je 0x4000711	       485	format.c	FUNCTION_6	IF_39	IF_40
0x4000709	          0x4c89e7	                            mov rdi, r12	       486	format.c	FUNCTION_6	IF_39	CALL_23
0x400070c	      0xe800000000	                          call 0x4000711	       486	format.c	FUNCTION_6	IF_39	CALL_23
0x4000711	      0xb800000000	                              mov eax, 0	       489	format.c	FUNCTION_6	IF_39
0x4000716	    0x48837c244000	               cmp qword [rsp + 0x40], 0	       487	format.c	FUNCTION_6	IF_39	IF_41
0x400071c	     0xf8432010000	                            je 0x4000854	       487	format.c	FUNCTION_6	IF_39	IF_41
0x4000722	        0x488d7b68	                   lea rdi, [rbx + 0x68]	       157	format.c	FUNCTION_4	CALL_1
0x4000726	      0xe800000000	                          call 0x400072b	       157	format.c	FUNCTION_4	CALL_1
0x400072b	      0x488b442448	            mov rax, qword [rsp + 0x48] 	       159	format.c	FUNCTION_4
0x4000730	    0x488983f80000	             mov qword [rbx + 0xf8], rax	       159	format.c	FUNCTION_4
0x4000737	      0x488b442458	            mov rax, qword [rsp + 0x58] 	       160	format.c	FUNCTION_4
0x400073c	    0x488983c00000	             mov qword [rbx + 0xc0], rax	       160	format.c	FUNCTION_4
0x4000743	        0x8b442450	            mov eax, dword [rsp + 0x50] 	       161	format.c	FUNCTION_4
0x4000747	      0x25ffff0f00	                        and eax, 0xfffff	       161	format.c	FUNCTION_4
0x400074c	          0xc1e005	                              shl eax, 5	       161	format.c	FUNCTION_4
0x400074f	          0x8b5344	            mov edx, dword [rbx + 0x44] 	       161	format.c	FUNCTION_4
0x4000752	    0x81e21f0000fe	                     and edx, 0xfe00001f	       161	format.c	FUNCTION_4
0x4000758	             0x9d0	                             or eax, edx	       161	format.c	FUNCTION_4
0x400075a	          0x894344	             mov dword [rbx + 0x44], eax	       161	format.c	FUNCTION_4
0x400075d	      0x488b442478	            mov rax, qword [rsp + 0x78] 	       162	format.c	FUNCTION_4
0x4000762	        0x48894368	             mov qword [rbx + 0x68], rax	       162	format.c	FUNCTION_4
0x4000766	    0x488b84248000	            mov rax, qword [rsp + 0x80] 	       162	format.c	FUNCTION_4
0x400076e	        0x48894370	             mov qword [rbx + 0x70], rax	       162	format.c	FUNCTION_4
0x4000772	    0x488b84248800	            mov rax, qword [rsp + 0x88] 	       162	format.c	FUNCTION_4
0x400077a	        0x48894378	             mov qword [rbx + 0x78], rax	       162	format.c	FUNCTION_4
0x400077e	    0x488b84249000	            mov rax, qword [rsp + 0x90] 	       162	format.c	FUNCTION_4
0x4000786	    0x488983800000	             mov qword [rbx + 0x80], rax	       162	format.c	FUNCTION_4
0x400078d	    0x488b84249800	            mov rax, qword [rsp + 0x98] 	       162	format.c	FUNCTION_4
0x4000795	    0x488983880000	             mov qword [rbx + 0x88], rax	       162	format.c	FUNCTION_4
0x400079c	      0x488b442460	            mov rax, qword [rsp + 0x60] 	       163	format.c	FUNCTION_4
0x40007a1	    0x488983900000	             mov qword [rbx + 0x90], rax	       163	format.c	FUNCTION_4
0x40007a8	      0x488b442468	            mov rax, qword [rsp + 0x68] 	       164	format.c	FUNCTION_4
0x40007ad	    0x488983980000	             mov qword [rbx + 0x98], rax	       164	format.c	FUNCTION_4
0x40007b4	        0x8b442470	            mov eax, dword [rsp + 0x70] 	       165	format.c	FUNCTION_4
0x40007b8	    0x8983a0000000	             mov dword [rbx + 0xa0], eax	       165	format.c	FUNCTION_4
0x40007be	        0x8b442474	            mov eax, dword [rsp + 0x74] 	       166	format.c	FUNCTION_4
0x40007c2	    0x890500000000	            mov dword [0x040007c8], eax 	       166	format.c	FUNCTION_4
0x40007c8	    0x488b8424a000	            mov rax, qword [rsp + 0xa0] 	       167	format.c	FUNCTION_4
0x40007d0	    0x488983100100	            mov qword [rbx + 0x110], rax	       167	format.c	FUNCTION_4
0x40007d7	      0x488b742440	            mov rsi, qword [rsp + 0x40] 	       171	format.c	FUNCTION_4	CALL_2
0x40007dc	          0x4889df	                            mov rdi, rbx	       171	format.c	FUNCTION_4	CALL_2
0x40007df	      0xe800000000	                          call 0x40007e4	       171	format.c	FUNCTION_4	CALL_2
0x40007e4	      0xb800000000	                              mov eax, 0	       489	format.c	FUNCTION_6	IF_39
0x40007e9	            0xeb69	                           jmp 0x4000854	       489	format.c	FUNCTION_6	IF_39
0x40007eb	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       493	format.c	FUNCTION_6
0x40007f0	        0x48894308	                mov qword [rbx + 8], rax	       493	format.c	FUNCTION_6
0x40007f4	        0x806344f8	             and byte [rbx + 0x44], 0xf8	       494	format.c	FUNCTION_6
0x40007f8	      0xbf0d000000	                            mov edi, 0xd	       495	format.c	FUNCTION_6	CALL_25
0x40007fd	      0xe800000000	                          call 0x4000802	       495	format.c	FUNCTION_6	CALL_25
0x4000802	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       497	format.c	FUNCTION_6	IF_42
0x4000807	          0x4885c0	                           test rax, rax	       497	format.c	FUNCTION_6	IF_42
0x400080a	            0x743c	                            je 0x4000848	       497	format.c	FUNCTION_6	IF_42
0x400080c	          0x4c8920	                    mov qword [rax], r12	       499	format.c	FUNCTION_6	IF_42
0x400080f	            0x89e8	                            mov eax, ebp	       500	format.c	FUNCTION_6	IF_42
0x4000811	            0x4898	                                    cdqe	       500	format.c	FUNCTION_6	IF_42
0x4000813	    0x49c704c40000	              mov qword [r12 + rax*8], 0	       500	format.c	FUNCTION_6	IF_42
0x400081b	            0x89e8	                            mov eax, ebp	       503	format.c	FUNCTION_6	IF_42	WHILE_3
0x400081d	          0x83e801	                              sub eax, 1	       503	format.c	FUNCTION_6	IF_42	WHILE_3
0x4000820	            0x782d	                            js 0x400084f	       503	format.c	FUNCTION_6	IF_42	WHILE_3
0x4000822	          0x4863d0	                         movsxd rdx, eax	       505	format.c	FUNCTION_6	IF_42	WHILE_3
0x4000825	        0x498d14d4	                  lea rdx, [r12 + rdx*8]	       505	format.c	FUNCTION_6	IF_42	WHILE_3
0x4000829	          0x488b0a	                    mov rcx, qword [rdx]	       505	format.c	FUNCTION_6	IF_42	WHILE_3
0x400082c	          0x488b09	                    mov rcx, qword [rcx]	       505	format.c	FUNCTION_6	IF_42	WHILE_3
0x400082f	          0x48890a	                    mov qword [rdx], rcx	       506	format.c	FUNCTION_6	IF_42	WHILE_3
0x4000832	          0x83e801	                              sub eax, 1	       503	format.c	FUNCTION_6	IF_42	WHILE_3
0x4000835	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       503	format.c	FUNCTION_6	IF_42	WHILE_3
0x4000838	            0x75e8	                           jne 0x4000822	       503	format.c	FUNCTION_6	IF_42	WHILE_3
0x400083a	      0xb800000000	                              mov eax, 0	       509	format.c	FUNCTION_6
0x400083f	            0xeb13	                           jmp 0x4000854	       509	format.c	FUNCTION_6
0x4000841	      0xb800000000	                              mov eax, 0	       244	format.c	FUNCTION_6	IF_4	IF_5
0x4000846	            0xeb0c	                           jmp 0x4000854	       244	format.c	FUNCTION_6	IF_4	IF_5
0x4000848	      0xb800000000	                              mov eax, 0	       509	format.c	FUNCTION_6
0x400084d	            0xeb05	                           jmp 0x4000854	       509	format.c	FUNCTION_6
0x400084f	      0xb800000000	                              mov eax, 0	       509	format.c	FUNCTION_6
0x4000854	    0x488b8c24a800	            mov rcx, qword [rsp + 0xa8] 	       510	format.c	FUNCTION_6
0x400085c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       510	format.c	FUNCTION_6
0x4000865	            0x7416	                            je 0x400087d	       510	format.c	FUNCTION_6
0x4000867	            0xeb0f	                           jmp 0x4000878	       510	format.c	FUNCTION_6
0x4000869	      0x4c8b6c2428	            mov r13, qword [rsp + 0x28] 	       510	format.c	FUNCTION_6
0x400086e	      0xbd01000000	                              mov ebp, 1	       378	format.c	FUNCTION_6	IF_24
0x4000873	      0xe9e7fcffff	                           jmp 0x400055f	       378	format.c	FUNCTION_6	IF_24
0x4000878	      0xe800000000	                          call 0x400087d	       510	format.c	FUNCTION_6
0x400087d	    0x4881c4b80000	                           add rsp, 0xb8	       510	format.c	FUNCTION_6
0x4000884	              0x5b	                                 pop rbx	       510	format.c	FUNCTION_6
0x4000885	              0x5d	                                 pop rbp	       510	format.c	FUNCTION_6
0x4000886	            0x415c	                                 pop r12	       510	format.c	FUNCTION_6
0x4000888	            0x415d	                                 pop r13	       510	format.c	FUNCTION_6
0x400088a	            0x415e	                                 pop r14	       510	format.c	FUNCTION_6
0x400088c	            0x415f	                                 pop r15	       510	format.c	FUNCTION_6
0x400088e	              0xc3	                                     ret	       510	format.c	FUNCTION_6
bfd_check_format	CALL,1:functions,0:FOR,0:WHILE,0:IF,0:SWITCH,0:ELSE,0:DO,0	5
0x400088f	        0x4883ec08	                              sub rsp, 8	        93	format.c	FUNCTION_1
0x4000893	      0xba00000000	                              mov edx, 0	        94	format.c	FUNCTION_1	CALL_1
0x4000898	      0xe800000000	                          call 0x400089d	        94	format.c	FUNCTION_1	CALL_1
0x400089d	        0x4883c408	                              add rsp, 8	        95	format.c	FUNCTION_1
0x40008a1	              0xc3	                                     ret	        95	format.c	FUNCTION_1
bfd_set_format	CALL,3:functions,0:FOR,0:WHILE,0:IF,3:SWITCH,0:ELSE,0:DO,0	35
0x40008a2	              0x53	                                push rbx	       528	format.c	FUNCTION_7
0x40008a3	         0xfb65744	           movzx edx, byte [rdi + 0x44] 	       529	format.c	FUNCTION_7	IF_1	CALL_1
0x40008a7	          0xf6c208	                              test dl, 8	       529	format.c	FUNCTION_7	IF_1	CALL_1
0x40008aa	            0x750c	                           jne 0x40008b8	       529	format.c	FUNCTION_7	IF_1	CALL_1
0x40008ac	          0x4889fb	                            mov rbx, rdi	       529	format.c	FUNCTION_7	IF_1	CALL_1
0x40008af	            0x89d0	                            mov eax, edx	       530	format.c	FUNCTION_7	IF_1
0x40008b1	          0x83e007	                              and eax, 7	       530	format.c	FUNCTION_7	IF_1
0x40008b4	            0x3c03	                               cmp al, 3	       530	format.c	FUNCTION_7	IF_1
0x40008b6	            0x7611	                           jbe 0x40008c9	       530	format.c	FUNCTION_7	IF_1
0x40008b8	      0xbf05000000	                              mov edi, 5	       532	format.c	FUNCTION_7	IF_1	CALL_2
0x40008bd	      0xe800000000	                          call 0x40008c2	       532	format.c	FUNCTION_7	IF_1	CALL_2
0x40008c2	      0xb800000000	                              mov eax, 0	       533	format.c	FUNCTION_7	IF_1
0x40008c7	            0xeb3e	                           jmp 0x4000907	       533	format.c	FUNCTION_7	IF_1
0x40008c9	          0xf6c207	                              test dl, 7	       536	format.c	FUNCTION_7	IF_2
0x40008cc	            0x740d	                            je 0x40008db	       536	format.c	FUNCTION_7	IF_2
0x40008ce	           0xfb6c0	                           movzx eax, al	       537	format.c	FUNCTION_7	IF_2
0x40008d1	            0x39f0	                            cmp eax, esi	       537	format.c	FUNCTION_7	IF_2
0x40008d3	           0xf94c0	                                 sete al	       537	format.c	FUNCTION_7	IF_2
0x40008d6	           0xfb6c0	                           movzx eax, al	       537	format.c	FUNCTION_7	IF_2
0x40008d9	            0xeb2c	                           jmp 0x4000907	       537	format.c	FUNCTION_7	IF_2
0x40008db	          0x83e607	                              and esi, 7	       540	format.c	FUNCTION_7
0x40008de	         0xfb64744	           movzx eax, byte [rdi + 0x44] 	       540	format.c	FUNCTION_7
0x40008e2	          0x83e0f8	                     and eax, 0xfffffff8	       540	format.c	FUNCTION_7
0x40008e5	             0x9f0	                             or eax, esi	       540	format.c	FUNCTION_7
0x40008e7	          0x884744	               mov byte [rdi + 0x44], al	       540	format.c	FUNCTION_7
0x40008ea	        0x488b4708	                mov rax, qword [rdi + 8]	       542	format.c	FUNCTION_7	IF_3	CALL_3
0x40008ee	          0x83e607	                              and esi, 7	       542	format.c	FUNCTION_7	IF_3	CALL_3
0x40008f1	    0xff94f0d00000	        call qword [rax + rsi*8 + 0xd0] 	       542	format.c	FUNCTION_7	IF_3	CALL_3
0x40008f8	            0x85c0	                           test eax, eax	       542	format.c	FUNCTION_7	IF_3	CALL_3
0x40008fa	            0x7506	                           jne 0x4000902	       542	format.c	FUNCTION_7	IF_3	CALL_3
0x40008fc	        0x806344f8	             and byte [rbx + 0x44], 0xf8	       544	format.c	FUNCTION_7	IF_3
0x4000900	            0xeb05	                           jmp 0x4000907	       545	format.c	FUNCTION_7	IF_3
0x4000902	      0xb801000000	                              mov eax, 1	       548	format.c	FUNCTION_7
0x4000907	              0x5b	                                 pop rbx	       549	format.c	FUNCTION_7
0x4000908	              0xc3	                                     ret	       549	format.c	FUNCTION_7
bfd_format_string	CALL,0:functions,0:FOR,0:WHILE,0:IF,1:SWITCH,1:ELSE,0:DO,0	14
0x4000909	      0xb800000000	                              mov eax, 0	       569	format.c	FUNCTION_8	IF_1
0x400090e	          0x83ff03	                              cmp edi, 3	       567	format.c	FUNCTION_8	IF_1
0x4000911	            0x7725	                            ja 0x4000938	       567	format.c	FUNCTION_8	IF_1
0x4000913	      0xb800000000	                              mov eax, 0	       576	format.c	FUNCTION_8	SWITCH_1
0x4000918	          0x83ff02	                              cmp edi, 2	       571	format.c	FUNCTION_8	SWITCH_1
0x400091b	            0x741b	                            je 0x4000938	       571	format.c	FUNCTION_8	SWITCH_1
0x400091d	      0xb800000000	                              mov eax, 0	       578	format.c	FUNCTION_8	SWITCH_1
0x4000922	          0x83ff03	                              cmp edi, 3	       571	format.c	FUNCTION_8	SWITCH_1
0x4000925	            0x7411	                            je 0x4000938	       571	format.c	FUNCTION_8	SWITCH_1
0x4000927	          0x83ff01	                              cmp edi, 1	       571	format.c	FUNCTION_8	SWITCH_1
0x400092a	      0xba00000000	                              mov edx, 0	       580	format.c	FUNCTION_8	SWITCH_1
0x400092f	      0xb800000000	                              mov eax, 0	       580	format.c	FUNCTION_8	SWITCH_1
0x4000934	        0x480f45c2	                         cmovne rax, rdx	       580	format.c	FUNCTION_8	SWITCH_1
0x4000938	            0xf3c3	                                     ret	       582	format.c	FUNCTION_8
