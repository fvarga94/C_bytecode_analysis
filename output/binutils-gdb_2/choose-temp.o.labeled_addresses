choose_temp_base	DO,0:functions,0:SWITCH,0:CALL,7:IF,1:WHILE,0:ELSE,0:FOR,0	32
0x4000040	            0x4154	                                push r12	        61	choose-temp.c	FUNCTION_1
0x4000042	              0x55	                                push rbp	        61	choose-temp.c	FUNCTION_1
0x4000043	              0x53	                                push rbx	        61	choose-temp.c	FUNCTION_1
0x4000044	      0xe800000000	                          call 0x4000049	        62	choose-temp.c	FUNCTION_1	CALL_1
0x4000049	          0x4889c5	                            mov rbp, rax	        62	choose-temp.c	FUNCTION_1	CALL_1
0x400004c	      0xb800000000	                              mov eax, 0	        66	choose-temp.c	FUNCTION_1	CALL_2
0x4000051	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	        66	choose-temp.c	FUNCTION_1	CALL_2
0x4000058	          0x4889ef	                            mov rdi, rbp	        66	choose-temp.c	FUNCTION_1	CALL_2
0x400005b	            0xf2ae	              repne scasb al, byte [rdi]	        66	choose-temp.c	FUNCTION_1	CALL_2
0x400005d	          0x48f7d1	                                 not rcx	        66	choose-temp.c	FUNCTION_1	CALL_2
0x4000060	        0x488d59ff	                      lea rbx, [rcx - 1]	        66	choose-temp.c	FUNCTION_1	CALL_2
0x4000064	          0x4863db	                         movsxd rbx, ebx	        67	choose-temp.c	FUNCTION_1	CALL_3
0x4000067	        0x488d7b09	                      lea rdi, [rbx + 9]	        67	choose-temp.c	FUNCTION_1	CALL_3
0x400006b	      0xe800000000	                          call 0x4000070	        67	choose-temp.c	FUNCTION_1	CALL_3
0x4000070	          0x4989c4	                            mov r12, rax	        67	choose-temp.c	FUNCTION_1	CALL_3
0x4000073	          0x4889ee	                            mov rsi, rbp	       110	string3.h	FUNCTION_8	CALL_3
0x4000076	          0x4889c7	                            mov rdi, rax	       110	string3.h	FUNCTION_8	CALL_3
0x4000079	      0xe800000000	                          call 0x400007e	       110	string3.h	FUNCTION_8	CALL_3
0x400007e	          0x4c01e3	                            add rbx, r12	       110	string3.h	FUNCTION_8	CALL_3
0x4000081	    0x48b863635858	          movabs rax, 0x5858585858586363	       110	string3.h	FUNCTION_8	CALL_3
0x400008b	          0x488903	                    mov qword [rbx], rax	       110	string3.h	FUNCTION_8	CALL_3
0x400008e	        0xc6430800	                   mov byte [rbx + 8], 0	       110	string3.h	FUNCTION_8	CALL_3
0x4000092	          0x4c89e7	                            mov rdi, r12	        71	choose-temp.c	FUNCTION_1	IF_1	CALL_6
0x4000095	      0xe800000000	                          call 0x400009a	        71	choose-temp.c	FUNCTION_1	IF_1	CALL_6
0x400009a	          0x4885c0	                           test rax, rax	        71	choose-temp.c	FUNCTION_1	IF_1	CALL_6
0x400009d	            0x7505	                           jne 0x40000a4	        71	choose-temp.c	FUNCTION_1	IF_1	CALL_6
0x400009f	      0xe800000000	                          call 0x40000a4	        72	choose-temp.c	FUNCTION_1	CALL_7
0x40000a4	          0x4c89e0	                            mov rax, r12	        74	choose-temp.c	FUNCTION_1
0x40000a7	              0x5b	                                 pop rbx	        74	choose-temp.c	FUNCTION_1
0x40000a8	              0x5d	                                 pop rbp	        74	choose-temp.c	FUNCTION_1
0x40000a9	            0x415c	                                 pop r12	        74	choose-temp.c	FUNCTION_1
0x40000ab	              0xc3	                                     ret	        74	choose-temp.c	FUNCTION_1
