OP_EX_Vex	CALL,2:FOR,0:SWITCH,0:WHILE,0:ELSE,0:DO,0:IF,2:functions,0	18
0x4005f15	              0x55	                                push rbp	     17571	i386-dis.c	FUNCTION_89
0x4005f16	              0x53	                                push rbx	     17571	i386-dis.c	FUNCTION_89
0x4005f17	        0x4883ec08	                              sub rsp, 8	     17571	i386-dis.c	FUNCTION_89
0x4005f1b	            0x89fb	                            mov ebx, edi	     17571	i386-dis.c	FUNCTION_89
0x4005f1d	            0x89f5	                            mov ebp, esi	     17571	i386-dis.c	FUNCTION_89
0x4005f1f	    0x833d00000000	               cmp dword [0x04005f26], 3	     17572	i386-dis.c	FUNCTION_89	IF_1
0x4005f26	            0x7415	                            je 0x4005f3d	     17572	i386-dis.c	FUNCTION_89	IF_1
0x4005f28	    0x833d00000000	               cmp dword [0x04005f2f], 0	     17574	i386-dis.c	FUNCTION_89	IF_1	IF_2
0x4005f2f	            0x7405	                            je 0x4005f36	     17574	i386-dis.c	FUNCTION_89	IF_1	IF_2
0x4005f31	      0xe829d6ffff	                          call sym.BadOp	     17575	i386-dis.c	FUNCTION_89	IF_1	CALL_1
0x4005f36	    0xc60500000000	                mov byte [0x04005f3d], 0	     17576	i386-dis.c	FUNCTION_89	IF_1
0x4005f3d	            0x89ee	                            mov esi, ebp	     17578	i386-dis.c	FUNCTION_89	CALL_2
0x4005f3f	            0x89df	                            mov edi, ebx	     17578	i386-dis.c	FUNCTION_89	CALL_2
0x4005f41	      0xe854feffff	                          call sym.OP_EX	     17578	i386-dis.c	FUNCTION_89	CALL_2
0x4005f46	        0x4883c408	                              add rsp, 8	     17579	i386-dis.c	FUNCTION_89
0x4005f4a	              0x5b	                                 pop rbx	     17579	i386-dis.c	FUNCTION_89
0x4005f4b	              0x5d	                                 pop rbp	     17579	i386-dis.c	FUNCTION_89
0x4005f4c	              0xc3	                                     ret	     17579	i386-dis.c	FUNCTION_89
HLE_Fixup2	CALL,1:FOR,0:SWITCH,0:WHILE,0:ELSE,0:DO,0:IF,3:functions,0	15
0x4005764	        0x4883ec08	                              sub rsp, 8	     17000	i386-dis.c	FUNCTION_72
0x4005768	    0x833d00000000	               cmp dword [0x0400576f], 3	     17001	i386-dis.c	FUNCTION_72	IF_1
0x400576f	            0x7432	                            je 0x40057a3	     17001	i386-dis.c	FUNCTION_72	IF_1
0x4005771	    0x8b0500000000	            mov eax, dword [0x04005777] 	     17003	i386-dis.c	FUNCTION_72	IF_1	IF_2
0x4005777	            0xa801	                              test al, 1	     17003	i386-dis.c	FUNCTION_72	IF_1	IF_2
0x4005779	            0x7412	                            je 0x400578d	     17003	i386-dis.c	FUNCTION_72	IF_1	IF_2
0x400577b	    0x486315000000	         movsxd rdx, dword [0x04005782] 	     17004	i386-dis.c	FUNCTION_72	IF_1	IF_2
0x4005782	    0xc70495000000	                mov dword [rdx*4], 0x4f3	     17004	i386-dis.c	FUNCTION_72	IF_1	IF_2
0x400578d	            0xa802	                              test al, 2	     17005	i386-dis.c	FUNCTION_72	IF_1	IF_3
0x400578f	            0x7412	                            je 0x40057a3	     17005	i386-dis.c	FUNCTION_72	IF_1	IF_3
0x4005791	    0x486305000000	         movsxd rax, dword [0x04005798] 	     17006	i386-dis.c	FUNCTION_72	IF_1	IF_3
0x4005798	    0xc70485000000	                mov dword [rax*4], 0x2f2	     17006	i386-dis.c	FUNCTION_72	IF_1	IF_3
0x40057a3	      0xe84dffffff	                           call sym.OP_E	     17009	i386-dis.c	FUNCTION_72	CALL_1
0x40057a8	        0x4883c408	                              add rsp, 8	     17010	i386-dis.c	FUNCTION_72
0x40057ac	              0xc3	                                     ret	     17010	i386-dis.c	FUNCTION_72
OP_EX	CALL,5:FOR,0:SWITCH,2:WHILE,0:ELSE,3:DO,0:IF,8:functions,0	90
0x4005d9a	              0x55	                                push rbp	     16561	i386-dis.c	FUNCTION_55
0x4005d9b	              0x53	                                push rbx	     16561	i386-dis.c	FUNCTION_55
0x4005d9c	        0x4883ec08	                              sub rsp, 8	     16561	i386-dis.c	FUNCTION_55
0x4005da0	    0x803d00000000	                cmp byte [0x04005da7], 0	     16566	i386-dis.c	FUNCTION_55
0x4005da7	            0x7505	                           jne 0x4005dae	     16566	i386-dis.c	FUNCTION_55
0x4005da9	      0xe800000000	                          call 0x4005dae	     16566	i386-dis.c	FUNCTION_55
0x4005dae	            0x89fb	                            mov ebx, edi	     16566	i386-dis.c	FUNCTION_55
0x4005db0	    0x488305000000	               add qword [0x04005db8], 1	     16567	i386-dis.c	FUNCTION_55
0x4005db8	    0x833d00000000	               cmp dword [0x04005dbf], 3	     16569	i386-dis.c	FUNCTION_55	IF_1
0x4005dbf	            0x740a	                            je 0x4005dcb	     16569	i386-dis.c	FUNCTION_55	IF_1
0x4005dc1	      0xe881ecffff	                    call sym.OP_E_memory	     16571	i386-dis.c	FUNCTION_55	IF_1	CALL_1
0x4005dc6	      0xe925010000	                           jmp 0x4005ef0	     16572	i386-dis.c	FUNCTION_55	IF_1
0x4005dcb	    0x8b2d00000000	            mov ebp, dword [0x04005dd1] 	     16575	i386-dis.c	FUNCTION_55
0x4005dd1	    0x8b0500000000	            mov eax, dword [0x04005dd7] 	     16576	i386-dis.c	FUNCTION_55
0x4005dd7	            0xa801	                              test al, 1	     16576	i386-dis.c	FUNCTION_55
0x4005dd9	            0x740a	                            je 0x4005de5	     16576	i386-dis.c	FUNCTION_55
0x4005ddb	    0x830d00000000	            or dword [0x04005de2], 0x41 	     16576	i386-dis.c	FUNCTION_55
0x4005de2	          0x83c508	                              add ebp, 8	     16578	i386-dis.c	FUNCTION_55	IF_2
0x4005de5	    0x833d00000000	               cmp dword [0x04005dec], 0	     16579	i386-dis.c	FUNCTION_55	IF_3
0x4005dec	            0x740e	                            je 0x4005dfc	     16579	i386-dis.c	FUNCTION_55	IF_3
0x4005dee	            0xa802	                              test al, 2	     16581	i386-dis.c	FUNCTION_55	IF_3
0x4005df0	            0x740a	                            je 0x4005dfc	     16581	i386-dis.c	FUNCTION_55	IF_3
0x4005df2	    0x830d00000000	            or dword [0x04005df9], 0x42 	     16581	i386-dis.c	FUNCTION_55	IF_3
0x4005df9	          0x83c510	                           add ebp, 0x10	     16583	i386-dis.c	FUNCTION_55	IF_3	IF_4
0x4005dfc	        0x40f6c604	                             test sil, 4	     16586	i386-dis.c	FUNCTION_55	IF_5
0x4005e00	            0x741a	                            je 0x4005e1c	     16586	i386-dis.c	FUNCTION_55	IF_5
0x4005e02	          0x83fb3f	                           cmp ebx, 0x3f	     16588	i386-dis.c	FUNCTION_55	IF_5
0x4005e05	            0x7715	                            ja 0x4005e1c	     16588	i386-dis.c	FUNCTION_55	IF_5
0x4005e07	    0x48b8000a0100	          movabs rax, 0xa000000000010a00	     16587	i386-dis.c	FUNCTION_55	IF_5
0x4005e11	        0x480fa3d8	                             bt rax, rbx	     16587	i386-dis.c	FUNCTION_55	IF_5
0x4005e15	            0x7305	                           jae 0x4005e1c	     16587	i386-dis.c	FUNCTION_55	IF_5
0x4005e17	      0xe8baa3ffff	                   call sym.swap_operand	     16592	i386-dis.c	FUNCTION_55	CALL_2
0x4005e1c	    0x803d00000000	                cmp byte [0x04005e23], 0	     16594	i386-dis.c	FUNCTION_55	IF_6
0x4005e23	            0x7473	                            je 0x4005e98	     16594	i386-dis.c	FUNCTION_55	IF_6
0x4005e25	          0x83fb1a	                           cmp ebx, 0x1a	     16595	i386-dis.c	FUNCTION_55	IF_6
0x4005e28	            0x770b	                            ja 0x4005e35	     16595	i386-dis.c	FUNCTION_55	IF_6
0x4005e2a	      0xb800001206	                      mov eax, 0x6120000	     16596	i386-dis.c	FUNCTION_55	IF_6
0x4005e2f	        0x480fa3d8	                             bt rax, rbx	     16596	i386-dis.c	FUNCTION_55	IF_6
0x4005e33	            0x7263	                            jb 0x4005e98	     16596	i386-dis.c	FUNCTION_55	IF_6
0x4005e35	          0x8d43eb	                   lea eax, [rbx - 0x15]	     16600	i386-dis.c	FUNCTION_55	IF_6
0x4005e38	          0x83f803	                              cmp eax, 3	     16600	i386-dis.c	FUNCTION_55	IF_6
0x4005e3b	            0x765b	                           jbe 0x4005e98	     16600	i386-dis.c	FUNCTION_55	IF_6
0x4005e3d	          0x8d43ee	                   lea eax, [rbx - 0x12]	     16604	i386-dis.c	FUNCTION_55	IF_6
0x4005e40	          0x83f801	                              cmp eax, 1	     16604	i386-dis.c	FUNCTION_55	IF_6
0x4005e43	            0x765b	                           jbe 0x4005ea0	     16604	i386-dis.c	FUNCTION_55	IF_6
0x4005e45	          0x8d43e5	                   lea eax, [rbx - 0x1b]	     16605	i386-dis.c	FUNCTION_55	IF_6
0x4005e48	          0x83f826	                           cmp eax, 0x26	     16605	i386-dis.c	FUNCTION_55	IF_6
0x4005e4b	            0x7710	                            ja 0x4005e5d	     16605	i386-dis.c	FUNCTION_55	IF_6
0x4005e4d	    0x48ba01000000	                movabs rdx, 0x5e00000001	     16606	i386-dis.c	FUNCTION_55	IF_6
0x4005e57	        0x480fa3c2	                             bt rdx, rax	     16606	i386-dis.c	FUNCTION_55	IF_6
0x4005e5b	            0x7275	                            jb 0x4005ed2	     16606	i386-dis.c	FUNCTION_55	IF_6
0x4005e5d	    0x8b0500000000	            mov eax, dword [0x04005e63] 	     16612	i386-dis.c	FUNCTION_55	IF_6	SWITCH_1
0x4005e63	      0x3d00010000	                          cmp eax, 0x100	     16612	i386-dis.c	FUNCTION_55	IF_6	SWITCH_1
0x4005e68	            0x7417	                            je 0x4005e81	     16612	i386-dis.c	FUNCTION_55	IF_6	SWITCH_1
0x4005e6a	      0x3d00020000	                          cmp eax, 0x200	     16612	i386-dis.c	FUNCTION_55	IF_6	SWITCH_1
0x4005e6f	            0x7419	                            je 0x4005e8a	     16612	i386-dis.c	FUNCTION_55	IF_6	SWITCH_1
0x4005e71	      0x3d80000000	                           cmp eax, 0x80	     16612	i386-dis.c	FUNCTION_55	IF_6	SWITCH_1
0x4005e76	            0x751b	                           jne 0x4005e93	     16612	i386-dis.c	FUNCTION_55	IF_6	SWITCH_1
0x4005e78	    0x488b05000000	            mov rax, qword [0x04005e7f] 	     16615	i386-dis.c	FUNCTION_55	IF_6	SWITCH_1
0x4005e7f	            0xeb63	                           jmp 0x4005ee4	     16616	i386-dis.c	FUNCTION_55	IF_6	SWITCH_1
0x4005e81	    0x488b05000000	            mov rax, qword [0x04005e88] 	     16618	i386-dis.c	FUNCTION_55	IF_6	SWITCH_1
0x4005e88	            0xeb5a	                           jmp 0x4005ee4	     16619	i386-dis.c	FUNCTION_55	IF_6	SWITCH_1
0x4005e8a	    0x488b05000000	            mov rax, qword [0x04005e91] 	     16621	i386-dis.c	FUNCTION_55	IF_6	SWITCH_1
0x4005e91	            0xeb51	                           jmp 0x4005ee4	     16622	i386-dis.c	FUNCTION_55	IF_6	SWITCH_1
0x4005e93	      0xe800000000	                          call 0x4005e98	     16624	i386-dis.c	FUNCTION_55	IF_6	SWITCH_1	CALL_3
0x4005e98	          0x8d43ee	                   lea eax, [rbx - 0x12]	     16627	i386-dis.c	FUNCTION_55	ELSE_1	IF_7
0x4005e9b	          0x83f801	                              cmp eax, 1	     16627	i386-dis.c	FUNCTION_55	ELSE_1	IF_7
0x4005e9e	            0x7732	                            ja 0x4005ed2	     16627	i386-dis.c	FUNCTION_55	ELSE_1	IF_7
0x4005ea0	    0x8b0500000000	            mov eax, dword [0x04005ea6] 	     16630	i386-dis.c	FUNCTION_55	ELSE_1	IF_7	SWITCH_2
0x4005ea6	      0x3d00010000	                          cmp eax, 0x100	     16630	i386-dis.c	FUNCTION_55	ELSE_1	IF_7	SWITCH_2
0x4005eab	            0x740e	                            je 0x4005ebb	     16630	i386-dis.c	FUNCTION_55	ELSE_1	IF_7	SWITCH_2
0x4005ead	      0x3d00020000	                          cmp eax, 0x200	     16630	i386-dis.c	FUNCTION_55	ELSE_1	IF_7	SWITCH_2
0x4005eb2	            0x7410	                            je 0x4005ec4	     16630	i386-dis.c	FUNCTION_55	ELSE_1	IF_7	SWITCH_2
0x4005eb4	      0x3d80000000	                           cmp eax, 0x80	     16630	i386-dis.c	FUNCTION_55	ELSE_1	IF_7	SWITCH_2
0x4005eb9	            0x7512	                           jne 0x4005ecd	     16630	i386-dis.c	FUNCTION_55	ELSE_1	IF_7	SWITCH_2
0x4005ebb	    0x488b05000000	            mov rax, qword [0x04005ec2] 	     16634	i386-dis.c	FUNCTION_55	ELSE_1	IF_7	SWITCH_2
0x4005ec2	            0xeb20	                           jmp 0x4005ee4	     16635	i386-dis.c	FUNCTION_55	ELSE_1	IF_7	SWITCH_2
0x4005ec4	    0x488b05000000	            mov rax, qword [0x04005ecb] 	     16637	i386-dis.c	FUNCTION_55	ELSE_1	IF_7	SWITCH_2
0x4005ecb	            0xeb17	                           jmp 0x4005ee4	     16638	i386-dis.c	FUNCTION_55	ELSE_1	IF_7	SWITCH_2
0x4005ecd	      0xe800000000	                          call 0x4005ed2	     16640	i386-dis.c	FUNCTION_55	ELSE_1	IF_7	SWITCH_2	CALL_4
0x4005ed2	          0x83fb1b	                           cmp ebx, 0x1b	     16644	i386-dis.c	FUNCTION_55	ELSE_2	IF_8
0x4005ed5	    0x488b05000000	            mov rax, qword [0x04005edc] 	     16644	i386-dis.c	FUNCTION_55	ELSE_2	IF_8
0x4005edc	    0x480f45050000	          cmovne rax, qword [0x04005ee4]	     16644	i386-dis.c	FUNCTION_55	ELSE_2	IF_8
0x4005ee4	          0x4863ed	                         movsxd rbp, ebp	     16647	i386-dis.c	FUNCTION_55	CALL_5
0x4005ee7	        0x488b3ce8	            mov rdi, qword [rax + rbp*8]	     16647	i386-dis.c	FUNCTION_55	CALL_5
0x4005eeb	      0xe8adcdffff	                        call sym.oappend	     16647	i386-dis.c	FUNCTION_55	CALL_5
0x4005ef0	        0x4883c408	                              add rsp, 8	     16648	i386-dis.c	FUNCTION_55
0x4005ef4	              0x5b	                                 pop rbx	     16648	i386-dis.c	FUNCTION_55
0x4005ef5	              0x5d	                                 pop rbp	     16648	i386-dis.c	FUNCTION_55
0x4005ef6	              0xc3	                                     ret	     16648	i386-dis.c	FUNCTION_55
get16	CALL,0:FOR,0:SWITCH,0:WHILE,0:ELSE,0:DO,0:IF,0:functions,0	17
0x4001f90	        0x4883ec08	                              sub rsp, 8	     15824	i386-dis.c	FUNCTION_31
0x4001f94	    0x488b05000000	            mov rax, qword [0x04001f9b] 	     15827	i386-dis.c	FUNCTION_31
0x4001f9b	        0x488d7002	                      lea rsi, [rax + 2]	     15827	i386-dis.c	FUNCTION_31
0x4001f9f	    0x488b3d000000	            mov rdi, qword [0x04001fa6] 	     15827	i386-dis.c	FUNCTION_31
0x4001fa6	        0x488b4768	            mov rax, qword [rdi + 0x68] 	     15827	i386-dis.c	FUNCTION_31
0x4001faa	          0x483b30	                    cmp rsi, qword [rax]	     15827	i386-dis.c	FUNCTION_31
0x4001fad	            0x7605	                           jbe 0x4001fb4	     15827	i386-dis.c	FUNCTION_31
0x4001faf	      0xe8f7feffff	                     call sym.fetch_data	     15827	i386-dis.c	FUNCTION_31
0x4001fb4	    0x488b05000000	            mov rax, qword [0x04001fbb] 	     15828	i386-dis.c	FUNCTION_31
0x4001fbb	           0xfb610	                   movzx edx, byte [rax]	     15828	i386-dis.c	FUNCTION_31
0x4001fbe	        0x488d4802	                      lea rcx, [rax + 2]	     15829	i386-dis.c	FUNCTION_31
0x4001fc2	    0x48890d000000	            mov qword [0x04001fc9], rcx 	     15829	i386-dis.c	FUNCTION_31
0x4001fc9	         0xfb64001	               movzx eax, byte [rax + 1]	     15830	i386-dis.c	FUNCTION_31
0x4001fcd	          0xc1e008	                              shl eax, 8	     15830	i386-dis.c	FUNCTION_31
0x4001fd0	             0x9d0	                             or eax, edx	     15830	i386-dis.c	FUNCTION_31
0x4001fd2	        0x4883c408	                              add rsp, 8	     15831	i386-dis.c	FUNCTION_31
0x4001fd6	              0xc3	                                     ret	     15831	i386-dis.c	FUNCTION_31
OP_I64	CALL,8:FOR,0:SWITCH,1:WHILE,0:ELSE,2:DO,0:IF,3:functions,0	65
0x400671c	        0x4883ec08	                              sub rsp, 8	     16034	i386-dis.c	FUNCTION_36
0x4006720	    0x833d00000000	               cmp dword [0x04006727], 2	     16038	i386-dis.c	FUNCTION_36	IF_1
0x4006727	            0x740a	                            je 0x4006733	     16038	i386-dis.c	FUNCTION_36	IF_1
0x4006729	      0xe8b0feffff	                           call sym.OP_I	     16040	i386-dis.c	FUNCTION_36	IF_1	CALL_1
0x400672e	      0xe908010000	                           jmp 0x400683b	     16041	i386-dis.c	FUNCTION_36	IF_1
0x4006733	          0x83ff04	                              cmp edi, 4	     16044	i386-dis.c	FUNCTION_36	SWITCH_1
0x4006736	            0x744e	                            je 0x4006786	     16044	i386-dis.c	FUNCTION_36	SWITCH_1
0x4006738	          0x83ff07	                              cmp edi, 7	     16044	i386-dis.c	FUNCTION_36	SWITCH_1
0x400673b	     0xf8493000000	                            je 0x40067d4	     16044	i386-dis.c	FUNCTION_36	SWITCH_1
0x4006741	          0x83ff01	                              cmp edi, 1	     16044	i386-dis.c	FUNCTION_36	SWITCH_1
0x4006744	     0xf8598000000	                           jne 0x40067e2	     16044	i386-dis.c	FUNCTION_36	SWITCH_1
0x400674a	    0x488b05000000	            mov rax, qword [0x04006751] 	     16047	i386-dis.c	FUNCTION_36	SWITCH_1
0x4006751	        0x488d7001	                      lea rsi, [rax + 1]	     16047	i386-dis.c	FUNCTION_36	SWITCH_1
0x4006755	    0x488b3d000000	            mov rdi, qword [0x0400675c] 	     16047	i386-dis.c	FUNCTION_36	SWITCH_1
0x400675c	        0x488b4768	            mov rax, qword [rdi + 0x68] 	     16047	i386-dis.c	FUNCTION_36	SWITCH_1
0x4006760	          0x483b30	                    cmp rsi, qword [rax]	     16047	i386-dis.c	FUNCTION_36	SWITCH_1
0x4006763	            0x7605	                           jbe 0x400676a	     16047	i386-dis.c	FUNCTION_36	SWITCH_1
0x4006765	      0xe841b7ffff	                     call sym.fetch_data	     16047	i386-dis.c	FUNCTION_36	SWITCH_1
0x400676a	    0x488b05000000	            mov rax, qword [0x04006771] 	     16048	i386-dis.c	FUNCTION_36	SWITCH_1
0x4006771	        0x488d5001	                      lea rdx, [rax + 1]	     16048	i386-dis.c	FUNCTION_36	SWITCH_1
0x4006775	    0x488915000000	            mov qword [0x0400677c], rdx 	     16048	i386-dis.c	FUNCTION_36	SWITCH_1
0x400677c	           0xfb600	                   movzx eax, byte [rax]	     16048	i386-dis.c	FUNCTION_36	SWITCH_1
0x400677f	      0xbaff000000	                           mov edx, 0xff	     16049	i386-dis.c	FUNCTION_36	SWITCH_1
0x4006784	            0xeb7a	                           jmp 0x4006800	     16050	i386-dis.c	FUNCTION_36	SWITCH_1
0x4006786	    0xf60500000000	               test byte [0x0400678d], 8	     16052	i386-dis.c	FUNCTION_36	SWITCH_1
0x400678d	     0xf8499000000	                            je 0x400682c	     16052	i386-dis.c	FUNCTION_36	SWITCH_1
0x4006793	    0x830d00000000	            or dword [0x0400679a], 0x48 	     16052	i386-dis.c	FUNCTION_36	SWITCH_1
0x400679a	      0xe838b8ffff	                          call sym.get64	     16054	i386-dis.c	FUNCTION_36	SWITCH_1	CALL_2
0x400679f	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	     16036	i386-dis.c	FUNCTION_36
0x40067a6	            0xeb58	                           jmp 0x4006800	     16036	i386-dis.c	FUNCTION_36
0x40067a8	      0xe8b4b8ffff	                          call sym.get32	     16059	i386-dis.c	FUNCTION_36	SWITCH_1	ELSE_1	IF_3	CALL_3
0x40067ad	      0xbaffffffff	                     mov edx, 0xffffffff	     16060	i386-dis.c	FUNCTION_36	SWITCH_1	ELSE_1	IF_3
0x40067b2	            0xeb0c	                           jmp 0x40067c0	     16060	i386-dis.c	FUNCTION_36	SWITCH_1	ELSE_1	IF_3
0x40067b4	      0xe8d7b7ffff	                          call sym.get16	     16064	i386-dis.c	FUNCTION_36	SWITCH_1	ELSE_1	ELSE_2	CALL_4
0x40067b9	            0x4898	                                    cdqe	     16064	i386-dis.c	FUNCTION_36	SWITCH_1	ELSE_1	ELSE_2	CALL_4
0x40067bb	      0xbaffff0f00	                        mov edx, 0xfffff	     16065	i386-dis.c	FUNCTION_36	SWITCH_1	ELSE_1	ELSE_2
0x40067c0	    0x8b0d00000000	            mov ecx, dword [0x040067c6] 	     16067	i386-dis.c	FUNCTION_36	SWITCH_1	ELSE_1
0x40067c6	    0x81e100020000	                          and ecx, 0x200	     16067	i386-dis.c	FUNCTION_36	SWITCH_1	ELSE_1
0x40067cc	     0x90d00000000	              or dword [0x040067d2], ecx	     16067	i386-dis.c	FUNCTION_36	SWITCH_1	ELSE_1
0x40067d2	            0xeb2c	                           jmp 0x4006800	     16067	i386-dis.c	FUNCTION_36	SWITCH_1	ELSE_1
0x40067d4	      0xe8b7b7ffff	                          call sym.get16	     16072	i386-dis.c	FUNCTION_36	SWITCH_1	CALL_5
0x40067d9	            0x4898	                                    cdqe	     16072	i386-dis.c	FUNCTION_36	SWITCH_1	CALL_5
0x40067db	      0xbaffff0f00	                        mov edx, 0xfffff	     16071	i386-dis.c	FUNCTION_36	SWITCH_1
0x40067e0	            0xeb1e	                           jmp 0x4006800	     16073	i386-dis.c	FUNCTION_36	SWITCH_1
0x40067e2	      0xba05000000	                              mov edx, 5	     16075	i386-dis.c	FUNCTION_36	SWITCH_1	CALL_6
0x40067e7	      0xbe00000000	                              mov esi, 0	     16075	i386-dis.c	FUNCTION_36	SWITCH_1	CALL_6
0x40067ec	      0xbf00000000	                              mov edi, 0	     16075	i386-dis.c	FUNCTION_36	SWITCH_1	CALL_6
0x40067f1	      0xe800000000	                          call 0x40067f6	     16075	i386-dis.c	FUNCTION_36	SWITCH_1	CALL_6
0x40067f6	          0x4889c7	                            mov rdi, rax	     16075	i386-dis.c	FUNCTION_36	SWITCH_1	CALL_6
0x40067f9	      0xe89fc4ffff	                        call sym.oappend	     16075	i386-dis.c	FUNCTION_36	SWITCH_1	CALL_6
0x40067fe	            0xeb3b	                           jmp 0x400683b	     16076	i386-dis.c	FUNCTION_36	SWITCH_1
0x4006800	    0xc60500000000	            mov byte [0x04006807], 0x24 	     16080	i386-dis.c	FUNCTION_36
0x4006807	          0x4821c2	                            and rdx, rax	     16081	i386-dis.c	FUNCTION_36	CALL_7
0x400680a	      0xbe01000000	                              mov esi, 1	     16081	i386-dis.c	FUNCTION_36	CALL_7
0x400680f	      0xbf00000000	                              mov edi, 0	     16081	i386-dis.c	FUNCTION_36	CALL_7
0x4006814	      0xe8dcb1ffff	            call sym.print_operand_value	     16081	i386-dis.c	FUNCTION_36	CALL_7
0x4006819	      0xbf00000000	                              mov edi, 0	     16082	i386-dis.c	FUNCTION_36	CALL_8
0x400681e	      0xe899c4ffff	            call sym.oappend_maybe_intel	     16082	i386-dis.c	FUNCTION_36	CALL_8
0x4006823	    0xc60500000000	                mov byte [0x0400682a], 0	     16083	i386-dis.c	FUNCTION_36
0x400682a	            0xeb0f	                           jmp 0x400683b	     16083	i386-dis.c	FUNCTION_36
0x400682c	        0x40f6c601	                             test sil, 1	     16057	i386-dis.c	FUNCTION_36	SWITCH_1	ELSE_1	IF_3
0x4006830	     0xf8572ffffff	                           jne 0x40067a8	     16057	i386-dis.c	FUNCTION_36	SWITCH_1	ELSE_1	IF_3
0x4006836	      0xe979ffffff	                           jmp 0x40067b4	     16057	i386-dis.c	FUNCTION_36	SWITCH_1	ELSE_1	IF_3
0x400683b	        0x4883c408	                              add rsp, 8	     16084	i386-dis.c	FUNCTION_36
0x400683f	              0xc3	                                     ret	     16084	i386-dis.c	FUNCTION_36
intel_operand_size	CALL,83:FOR,0:SWITCH,13:WHILE,0:ELSE,12:DO,0:IF,31:functions,0	396
0x40035c5	        0x4883ec08	                              sub rsp, 8	     14724	i386-dis.c	FUNCTION_23
0x40035c9	    0x8b0500000000	            mov eax, dword [0x040035cf] 	     14725	i386-dis.c	FUNCTION_23	IF_1
0x40035cf	            0x85c0	                           test eax, eax	     14725	i386-dis.c	FUNCTION_23	IF_1
0x40035d1	            0x743a	                            je 0x400360d	     14725	i386-dis.c	FUNCTION_23	IF_1
0x40035d3	    0x833d00000000	               cmp dword [0x040035da], 0	     14726	i386-dis.c	FUNCTION_23	IF_1
0x40035da	            0x7431	                            je 0x400360d	     14726	i386-dis.c	FUNCTION_23	IF_1
0x40035dc	          0x83ff0d	                            cmp edi, 0xd	     14727	i386-dis.c	FUNCTION_23	IF_1
0x40035df	            0x7405	                            je 0x40035e6	     14727	i386-dis.c	FUNCTION_23	IF_1
0x40035e1	          0x83ff13	                           cmp edi, 0x13	     14727	i386-dis.c	FUNCTION_23	IF_1
0x40035e4	            0x7527	                           jne 0x400360d	     14727	i386-dis.c	FUNCTION_23	IF_1
0x40035e6	    0x833d00000000	               cmp dword [0x040035ed], 0	     14730	i386-dis.c	FUNCTION_23	IF_1	IF_2
0x40035ed	            0x740f	                            je 0x40035fe	     14730	i386-dis.c	FUNCTION_23	IF_1	IF_2
0x40035ef	      0xbf00000000	                              mov edi, 0	     14731	i386-dis.c	FUNCTION_23	IF_1	CALL_1
0x40035f4	      0xe8a4f6ffff	                        call sym.oappend	     14731	i386-dis.c	FUNCTION_23	IF_1	CALL_1
0x40035f9	      0xe9cd060000	                           jmp 0x4003ccb	     14731	i386-dis.c	FUNCTION_23	IF_1	CALL_1
0x40035fe	      0xbf00000000	                              mov edi, 0	     14733	i386-dis.c	FUNCTION_23	IF_1	CALL_2
0x4003603	      0xe895f6ffff	                        call sym.oappend	     14733	i386-dis.c	FUNCTION_23	IF_1	CALL_2
0x4003608	      0xe9be060000	                           jmp 0x4003ccb	     14733	i386-dis.c	FUNCTION_23	IF_1	CALL_2
0x400360d	          0x83ff45	                           cmp edi, 0x45	     14736	i386-dis.c	FUNCTION_23	SWITCH_1
0x4003610	     0xf87b5060000	                            ja 0x4003ccb	     14736	i386-dis.c	FUNCTION_23	SWITCH_1
0x4003616	            0x89fa	                            mov edx, edi	     14736	i386-dis.c	FUNCTION_23	SWITCH_1
0x4003618	    0xff24d5000000	                       jmp qword [rdx*8]	     14736	i386-dis.c	FUNCTION_23	SWITCH_1
0x400361f	      0xbf00000000	                              mov edi, 0	     14742	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_3
0x4003624	      0xe874f6ffff	                        call sym.oappend	     14742	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_3
0x4003629	      0xe99d060000	                           jmp 0x4003ccb	     14743	i386-dis.c	FUNCTION_23	SWITCH_1
0x400362e	      0xbf00000000	                              mov edi, 0	     14747	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_4
0x4003633	      0xe865f6ffff	                        call sym.oappend	     14747	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_4
0x4003638	      0xe98e060000	                           jmp 0x4003ccb	     14748	i386-dis.c	FUNCTION_23	SWITCH_1
0x400363d	    0x833d00000000	               cmp dword [0x04003644], 2	     14750	i386-dis.c	FUNCTION_23	SWITCH_1	IF_3
0x4003644	            0x753f	                           jne 0x4003685	     14750	i386-dis.c	FUNCTION_23	SWITCH_1	IF_3
0x4003646	    0x833d00000000	               cmp dword [0x0400364d], 1	     14750	i386-dis.c	FUNCTION_23	SWITCH_1	IF_3
0x400364d	            0x7518	                           jne 0x4003667	     14750	i386-dis.c	FUNCTION_23	SWITCH_1	IF_3
0x400364f	      0xbf00000000	                              mov edi, 0	     14752	i386-dis.c	FUNCTION_23	SWITCH_1	IF_3	CALL_5
0x4003654	      0xe844f6ffff	                        call sym.oappend	     14752	i386-dis.c	FUNCTION_23	SWITCH_1	IF_3	CALL_5
0x4003659	      0xe96d060000	                           jmp 0x4003ccb	     14753	i386-dis.c	FUNCTION_23	SWITCH_1	IF_3
0x400365e	    0x833d00000000	               cmp dword [0x04003665], 2	     14757	i386-dis.c	FUNCTION_23	SWITCH_1	IF_4
0x4003665	            0x751e	                           jne 0x4003685	     14757	i386-dis.c	FUNCTION_23	SWITCH_1	IF_4
0x4003667	        0x40f6c601	                             test sil, 1	     14757	i386-dis.c	FUNCTION_23	SWITCH_1	IF_4
0x400366b	            0x7509	                           jne 0x4003676	     14757	i386-dis.c	FUNCTION_23	SWITCH_1	IF_4
0x400366d	    0xf60500000000	               test byte [0x04003674], 8	     14757	i386-dis.c	FUNCTION_23	SWITCH_1	IF_4
0x4003674	            0x742e	                            je 0x40036a4	     14757	i386-dis.c	FUNCTION_23	SWITCH_1	IF_4
0x4003676	      0xbf00000000	                              mov edi, 0	     14759	i386-dis.c	FUNCTION_23	SWITCH_1	IF_4	CALL_6
0x400367b	      0xe81df6ffff	                        call sym.oappend	     14759	i386-dis.c	FUNCTION_23	SWITCH_1	IF_4	CALL_6
0x4003680	      0xe946060000	                           jmp 0x4003ccb	     14760	i386-dis.c	FUNCTION_23	SWITCH_1	IF_4
0x4003685	    0xf60500000000	               test byte [0x0400368c], 8	     14766	i386-dis.c	FUNCTION_23	SWITCH_1
0x400368c	            0x7416	                            je 0x40036a4	     14766	i386-dis.c	FUNCTION_23	SWITCH_1
0x400368e	    0x830d00000000	            or dword [0x04003695], 0x48 	     14766	i386-dis.c	FUNCTION_23	SWITCH_1
0x4003695	      0xbf00000000	                              mov edi, 0	     14768	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_7
0x400369a	      0xe8fef5ffff	                        call sym.oappend	     14768	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_7
0x400369f	      0xe927060000	                           jmp 0x4003ccb	     14768	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_7
0x40036a4	        0x40f6c601	                             test sil, 1	     14771	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_2	IF_6
0x40036a8	            0x7505	                           jne 0x40036af	     14771	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_2	IF_6
0x40036aa	          0x83ff23	                           cmp edi, 0x23	     14771	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_2	IF_6
0x40036ad	            0x750c	                           jne 0x40036bb	     14771	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_2	IF_6
0x40036af	      0xbf00000000	                              mov edi, 0	     14772	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_2	CALL_8
0x40036b4	      0xe8e4f5ffff	                        call sym.oappend	     14772	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_2	CALL_8
0x40036b9	            0xeb0a	                           jmp 0x40036c5	     14772	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_2	CALL_8
0x40036bb	      0xbf00000000	                              mov edi, 0	     14774	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_2	CALL_9
0x40036c0	      0xe8d8f5ffff	                        call sym.oappend	     14774	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_2	CALL_9
0x40036c5	    0x8b0500000000	            mov eax, dword [0x040036cb] 	     14775	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_2
0x40036cb	      0x2500020000	                          and eax, 0x200	     14775	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_2
0x40036d0	     0x90500000000	              or dword [0x040036d6], eax	     14775	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_2
0x40036d6	      0xe9f0050000	                           jmp 0x4003ccb	     14775	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_2
0x40036db	    0xf60500000000	               test byte [0x040036e2], 8	     14779	i386-dis.c	FUNCTION_23	SWITCH_1	IF_7
0x40036e2	     0xf859e050000	                           jne 0x4003c86	     14779	i386-dis.c	FUNCTION_23	SWITCH_1	IF_7
0x40036e8	        0x40f6c601	                             test sil, 1	     14779	i386-dis.c	FUNCTION_23	SWITCH_1	IF_7
0x40036ec	     0xf85b5050000	                           jne 0x4003ca7	     14779	i386-dis.c	FUNCTION_23	SWITCH_1	IF_7
0x40036f2	      0xe980050000	                           jmp 0x4003c77	     14779	i386-dis.c	FUNCTION_23	SWITCH_1	IF_7
0x40036f7	    0x8b0500000000	            mov eax, dword [0x040036fd] 	     14783	i386-dis.c	FUNCTION_23	SWITCH_1	IF_8
0x40036fd	      0x2500020000	                          and eax, 0x200	     14783	i386-dis.c	FUNCTION_23	SWITCH_1	IF_8
0x4003702	     0x90500000000	              or dword [0x04003708], eax	     14783	i386-dis.c	FUNCTION_23	SWITCH_1	IF_8
0x4003708	      0xe9be050000	                           jmp 0x4003ccb	     14783	i386-dis.c	FUNCTION_23	SWITCH_1	IF_8
0x400370d	        0x40f6c601	                             test sil, 1	     14786	i386-dis.c	FUNCTION_23	SWITCH_1	IF_9
0x4003711	            0x740c	                            je 0x400371f	     14786	i386-dis.c	FUNCTION_23	SWITCH_1	IF_9
0x4003713	      0xbf00000000	                              mov edi, 0	     14787	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_11
0x4003718	      0xe880f5ffff	                        call sym.oappend	     14787	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_11
0x400371d	            0xeb0a	                           jmp 0x4003729	     14787	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_11
0x400371f	      0xbf00000000	                              mov edi, 0	     14789	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_12
0x4003724	      0xe874f5ffff	                        call sym.oappend	     14789	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_12
0x4003729	    0x8b0500000000	            mov eax, dword [0x0400372f] 	     14790	i386-dis.c	FUNCTION_23	SWITCH_1
0x400372f	      0x2500020000	                          and eax, 0x200	     14790	i386-dis.c	FUNCTION_23	SWITCH_1
0x4003734	     0x90500000000	              or dword [0x0400373a], eax	     14790	i386-dis.c	FUNCTION_23	SWITCH_1
0x400373a	      0xe98c050000	                           jmp 0x4003ccb	     14791	i386-dis.c	FUNCTION_23	SWITCH_1
0x400373f	      0xbf00000000	                              mov edi, 0	     14797	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_13
0x4003744	      0xe854f5ffff	                        call sym.oappend	     14797	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_13
0x4003749	      0xe97d050000	                           jmp 0x4003ccb	     14798	i386-dis.c	FUNCTION_23	SWITCH_1
0x400374e	      0xbf00000000	                              mov edi, 0	     14803	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_14
0x4003753	      0xe845f5ffff	                        call sym.oappend	     14803	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_14
0x4003758	      0xe96e050000	                           jmp 0x4003ccb	     14804	i386-dis.c	FUNCTION_23	SWITCH_1
0x400375d	    0x833d00000000	               cmp dword [0x04003764], 2	     14806	i386-dis.c	FUNCTION_23	SWITCH_1	IF_10
0x4003764	            0x750f	                           jne 0x4003775	     14806	i386-dis.c	FUNCTION_23	SWITCH_1	IF_10
0x4003766	      0xbf00000000	                              mov edi, 0	     14807	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_15
0x400376b	      0xe82df5ffff	                        call sym.oappend	     14807	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_15
0x4003770	      0xe956050000	                           jmp 0x4003ccb	     14807	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_15
0x4003775	      0xbf00000000	                              mov edi, 0	     14809	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_16
0x400377a	      0xe81ef5ffff	                        call sym.oappend	     14809	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_16
0x400377f	      0xe947050000	                           jmp 0x4003ccb	     14809	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_16
0x4003784	        0x40f6c601	                             test sil, 1	     14812	i386-dis.c	FUNCTION_23	SWITCH_1	IF_11
0x4003788	            0x740c	                            je 0x4003796	     14812	i386-dis.c	FUNCTION_23	SWITCH_1	IF_11
0x400378a	      0xbf00000000	                              mov edi, 0	     14813	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_17
0x400378f	      0xe809f5ffff	                        call sym.oappend	     14813	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_17
0x4003794	            0xeb0a	                           jmp 0x40037a0	     14813	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_17
0x4003796	      0xbf00000000	                              mov edi, 0	     14815	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_18
0x400379b	      0xe8fdf4ffff	                        call sym.oappend	     14815	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_18
0x40037a0	    0x8b0500000000	            mov eax, dword [0x040037a6] 	     14816	i386-dis.c	FUNCTION_23	SWITCH_1
0x40037a6	      0x2500020000	                          and eax, 0x200	     14816	i386-dis.c	FUNCTION_23	SWITCH_1
0x40037ab	     0x90500000000	              or dword [0x040037b1], eax	     14816	i386-dis.c	FUNCTION_23	SWITCH_1
0x40037b1	      0xe915050000	                           jmp 0x4003ccb	     14817	i386-dis.c	FUNCTION_23	SWITCH_1
0x40037b6	      0xbf00000000	                              mov edi, 0	     14819	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_19
0x40037bb	      0xe8ddf4ffff	                        call sym.oappend	     14819	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_19
0x40037c0	      0xe906050000	                           jmp 0x4003ccb	     14820	i386-dis.c	FUNCTION_23	SWITCH_1
0x40037c5	    0x803d00000000	                cmp byte [0x040037cc], 0	     14827	i386-dis.c	FUNCTION_23	SWITCH_1	IF_12
0x40037cc	            0x744d	                            je 0x400381b	     14827	i386-dis.c	FUNCTION_23	SWITCH_1	IF_12
0x40037ce	    0x8b0500000000	            mov eax, dword [0x040037d4] 	     14829	i386-dis.c	FUNCTION_23	SWITCH_1	IF_12	SWITCH_2
0x40037d4	      0x3d00010000	                          cmp eax, 0x100	     14829	i386-dis.c	FUNCTION_23	SWITCH_1	IF_12	SWITCH_2
0x40037d9	            0x741d	                            je 0x40037f8	     14829	i386-dis.c	FUNCTION_23	SWITCH_1	IF_12	SWITCH_2
0x40037db	      0x3d00020000	                          cmp eax, 0x200	     14829	i386-dis.c	FUNCTION_23	SWITCH_1	IF_12	SWITCH_2
0x40037e0	            0x7425	                            je 0x4003807	     14829	i386-dis.c	FUNCTION_23	SWITCH_1	IF_12	SWITCH_2
0x40037e2	      0x3d80000000	                           cmp eax, 0x80	     14829	i386-dis.c	FUNCTION_23	SWITCH_1	IF_12	SWITCH_2
0x40037e7	            0x752d	                           jne 0x4003816	     14829	i386-dis.c	FUNCTION_23	SWITCH_1	IF_12	SWITCH_2
0x40037e9	      0xbf00000000	                              mov edi, 0	     14832	i386-dis.c	FUNCTION_23	SWITCH_1	IF_12	SWITCH_2	CALL_20
0x40037ee	      0xe8aaf4ffff	                        call sym.oappend	     14832	i386-dis.c	FUNCTION_23	SWITCH_1	IF_12	SWITCH_2	CALL_20
0x40037f3	      0xe9d3040000	                           jmp 0x4003ccb	     14833	i386-dis.c	FUNCTION_23	SWITCH_1	IF_12	SWITCH_2
0x40037f8	      0xbf00000000	                              mov edi, 0	     14835	i386-dis.c	FUNCTION_23	SWITCH_1	IF_12	SWITCH_2	CALL_21
0x40037fd	      0xe89bf4ffff	                        call sym.oappend	     14835	i386-dis.c	FUNCTION_23	SWITCH_1	IF_12	SWITCH_2	CALL_21
0x4003802	      0xe9c4040000	                           jmp 0x4003ccb	     14836	i386-dis.c	FUNCTION_23	SWITCH_1	IF_12	SWITCH_2
0x4003807	      0xbf00000000	                              mov edi, 0	     14838	i386-dis.c	FUNCTION_23	SWITCH_1	IF_12	SWITCH_2	CALL_22
0x400380c	      0xe88cf4ffff	                        call sym.oappend	     14838	i386-dis.c	FUNCTION_23	SWITCH_1	IF_12	SWITCH_2	CALL_22
0x4003811	      0xe9b5040000	                           jmp 0x4003ccb	     14839	i386-dis.c	FUNCTION_23	SWITCH_1	IF_12	SWITCH_2
0x4003816	      0xe800000000	                          call 0x400381b	     14841	i386-dis.c	FUNCTION_23	SWITCH_1	IF_12	SWITCH_2	CALL_23
0x400381b	      0xbf00000000	                              mov edi, 0	     14845	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_24
0x4003820	      0xe878f4ffff	                        call sym.oappend	     14845	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_24
0x4003825	      0xe9a1040000	                           jmp 0x4003ccb	     14845	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_24
0x400382a	      0xbf00000000	                              mov edi, 0	     14848	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_25
0x400382f	      0xe869f4ffff	                        call sym.oappend	     14848	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_25
0x4003834	      0xe992040000	                           jmp 0x4003ccb	     14849	i386-dis.c	FUNCTION_23	SWITCH_1
0x4003839	      0xbf00000000	                              mov edi, 0	     14851	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_26
0x400383e	      0xe85af4ffff	                        call sym.oappend	     14851	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_26
0x4003843	      0xe983040000	                           jmp 0x4003ccb	     14852	i386-dis.c	FUNCTION_23	SWITCH_1
0x4003848	    0x803d00000000	                cmp byte [0x0400384f], 0	     14855	i386-dis.c	FUNCTION_23	SWITCH_1	IF_13
0x400384f	            0x7505	                           jne 0x4003856	     14855	i386-dis.c	FUNCTION_23	SWITCH_1	IF_13
0x4003851	      0xe800000000	                          call 0x4003856	     14856	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_27
0x4003856	    0x8b0500000000	            mov eax, dword [0x0400385c] 	     14858	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_3
0x400385c	      0x3d00010000	                          cmp eax, 0x100	     14858	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_3
0x4003861	            0x741d	                            je 0x4003880	     14858	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_3
0x4003863	      0x3d00020000	                          cmp eax, 0x200	     14858	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_3
0x4003868	            0x7425	                            je 0x400388f	     14858	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_3
0x400386a	      0x3d80000000	                           cmp eax, 0x80	     14858	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_3
0x400386f	            0x752d	                           jne 0x400389e	     14858	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_3
0x4003871	      0xbf00000000	                              mov edi, 0	     14861	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_3	CALL_28
0x4003876	      0xe822f4ffff	                        call sym.oappend	     14861	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_3	CALL_28
0x400387b	      0xe94b040000	                           jmp 0x4003ccb	     14862	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_3
0x4003880	      0xbf00000000	                              mov edi, 0	     14864	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_3	CALL_29
0x4003885	      0xe813f4ffff	                        call sym.oappend	     14864	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_3	CALL_29
0x400388a	      0xe93c040000	                           jmp 0x4003ccb	     14865	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_3
0x400388f	      0xbf00000000	                              mov edi, 0	     14867	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_3	CALL_30
0x4003894	      0xe804f4ffff	                        call sym.oappend	     14867	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_3	CALL_30
0x4003899	      0xe92d040000	                           jmp 0x4003ccb	     14868	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_3
0x400389e	      0xe800000000	                          call 0x40038a3	     14870	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_3	CALL_31
0x40038a3	    0x803d00000000	                cmp byte [0x040038aa], 0	     14874	i386-dis.c	FUNCTION_23	SWITCH_1	IF_14
0x40038aa	            0x7505	                           jne 0x40038b1	     14874	i386-dis.c	FUNCTION_23	SWITCH_1	IF_14
0x40038ac	      0xe800000000	                          call 0x40038b1	     14875	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_32
0x40038b1	    0x8b0500000000	            mov eax, dword [0x040038b7] 	     14877	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_4
0x40038b7	      0x3d00010000	                          cmp eax, 0x100	     14877	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_4
0x40038bc	            0x740e	                            je 0x40038cc	     14877	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_4
0x40038be	      0x3d00020000	                          cmp eax, 0x200	     14877	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_4
0x40038c3	            0x7407	                            je 0x40038cc	     14877	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_4
0x40038c5	      0x3d80000000	                           cmp eax, 0x80	     14877	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_4
0x40038ca	            0x750f	                           jne 0x40038db	     14877	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_4
0x40038cc	      0xbf00000000	                              mov edi, 0	     14882	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_4	CALL_33
0x40038d1	      0xe8c7f3ffff	                        call sym.oappend	     14882	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_4	CALL_33
0x40038d6	      0xe9f0030000	                           jmp 0x4003ccb	     14887	i386-dis.c	FUNCTION_23	SWITCH_1
0x40038db	      0xe800000000	                          call 0x40038e0	     14885	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_4	CALL_34
0x40038e0	    0x803d00000000	                cmp byte [0x040038e7], 0	     14889	i386-dis.c	FUNCTION_23	SWITCH_1	IF_15
0x40038e7	            0x7505	                           jne 0x40038ee	     14889	i386-dis.c	FUNCTION_23	SWITCH_1	IF_15
0x40038e9	      0xe800000000	                          call 0x40038ee	     14890	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_35
0x40038ee	    0x8b0500000000	            mov eax, dword [0x040038f4] 	     14892	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_5
0x40038f4	      0x3d00010000	                          cmp eax, 0x100	     14892	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_5
0x40038f9	            0x740e	                            je 0x4003909	     14892	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_5
0x40038fb	      0x3d00020000	                          cmp eax, 0x200	     14892	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_5
0x4003900	            0x7407	                            je 0x4003909	     14892	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_5
0x4003902	      0x3d80000000	                           cmp eax, 0x80	     14892	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_5
0x4003907	            0x750f	                           jne 0x4003918	     14892	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_5
0x4003909	      0xbf00000000	                              mov edi, 0	     14897	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_5	CALL_36
0x400390e	      0xe88af3ffff	                        call sym.oappend	     14897	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_5	CALL_36
0x4003913	      0xe9b3030000	                           jmp 0x4003ccb	     14902	i386-dis.c	FUNCTION_23	SWITCH_1
0x4003918	      0xe800000000	                          call 0x400391d	     14900	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_5	CALL_37
0x400391d	    0x803d00000000	                cmp byte [0x04003924], 0	     14904	i386-dis.c	FUNCTION_23	SWITCH_1	IF_16
0x4003924	            0x7505	                           jne 0x400392b	     14904	i386-dis.c	FUNCTION_23	SWITCH_1	IF_16
0x4003926	      0xe800000000	                          call 0x400392b	     14905	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_38
0x400392b	    0x8b0500000000	            mov eax, dword [0x04003931] 	     14907	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_6
0x4003931	      0x3d00010000	                          cmp eax, 0x100	     14907	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_6
0x4003936	            0x740e	                            je 0x4003946	     14907	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_6
0x4003938	      0x3d00020000	                          cmp eax, 0x200	     14907	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_6
0x400393d	            0x7407	                            je 0x4003946	     14907	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_6
0x400393f	      0x3d80000000	                           cmp eax, 0x80	     14907	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_6
0x4003944	            0x750f	                           jne 0x4003955	     14907	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_6
0x4003946	      0xbf00000000	                              mov edi, 0	     14912	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_6	CALL_39
0x400394b	      0xe84df3ffff	                        call sym.oappend	     14912	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_6	CALL_39
0x4003950	      0xe976030000	                           jmp 0x4003ccb	     14917	i386-dis.c	FUNCTION_23	SWITCH_1
0x4003955	      0xe800000000	                          call 0x400395a	     14915	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_6	CALL_40
0x400395a	    0x803d00000000	                cmp byte [0x04003961], 0	     14919	i386-dis.c	FUNCTION_23	SWITCH_1	IF_17
0x4003961	            0x7505	                           jne 0x4003968	     14919	i386-dis.c	FUNCTION_23	SWITCH_1	IF_17
0x4003963	      0xe800000000	                          call 0x4003968	     14920	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_41
0x4003968	    0x8b0500000000	            mov eax, dword [0x0400396e] 	     14922	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_7
0x400396e	      0x3d00010000	                          cmp eax, 0x100	     14922	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_7
0x4003973	            0x740e	                            je 0x4003983	     14922	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_7
0x4003975	      0x3d00020000	                          cmp eax, 0x200	     14922	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_7
0x400397a	            0x7407	                            je 0x4003983	     14922	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_7
0x400397c	      0x3d80000000	                           cmp eax, 0x80	     14922	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_7
0x4003981	            0x750f	                           jne 0x4003992	     14922	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_7
0x4003983	      0xbf00000000	                              mov edi, 0	     14927	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_7	CALL_42
0x4003988	      0xe810f3ffff	                        call sym.oappend	     14927	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_7	CALL_42
0x400398d	      0xe939030000	                           jmp 0x4003ccb	     14932	i386-dis.c	FUNCTION_23	SWITCH_1
0x4003992	      0xe800000000	                          call 0x4003997	     14930	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_7	CALL_43
0x4003997	    0x803d00000000	                cmp byte [0x0400399e], 0	     14934	i386-dis.c	FUNCTION_23	SWITCH_1	IF_18
0x400399e	            0x7505	                           jne 0x40039a5	     14934	i386-dis.c	FUNCTION_23	SWITCH_1	IF_18
0x40039a0	      0xe800000000	                          call 0x40039a5	     14935	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_44
0x40039a5	    0x8b0500000000	            mov eax, dword [0x040039ab] 	     14937	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_8
0x40039ab	      0x3d00010000	                          cmp eax, 0x100	     14937	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_8
0x40039b0	            0x741d	                            je 0x40039cf	     14937	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_8
0x40039b2	      0x3d00020000	                          cmp eax, 0x200	     14937	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_8
0x40039b7	            0x7425	                            je 0x40039de	     14937	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_8
0x40039b9	      0x3d80000000	                           cmp eax, 0x80	     14937	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_8
0x40039be	            0x752d	                           jne 0x40039ed	     14937	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_8
0x40039c0	      0xbf00000000	                              mov edi, 0	     14940	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_8	CALL_45
0x40039c5	      0xe8d3f2ffff	                        call sym.oappend	     14940	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_8	CALL_45
0x40039ca	      0xe9fc020000	                           jmp 0x4003ccb	     14941	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_8
0x40039cf	      0xbf00000000	                              mov edi, 0	     14943	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_8	CALL_46
0x40039d4	      0xe8c4f2ffff	                        call sym.oappend	     14943	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_8	CALL_46
0x40039d9	      0xe9ed020000	                           jmp 0x4003ccb	     14944	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_8
0x40039de	      0xbf00000000	                              mov edi, 0	     14946	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_8	CALL_47
0x40039e3	      0xe8b5f2ffff	                        call sym.oappend	     14946	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_8	CALL_47
0x40039e8	      0xe9de020000	                           jmp 0x4003ccb	     14947	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_8
0x40039ed	      0xe800000000	                          call 0x40039f2	     14949	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_8	CALL_48
0x40039f2	    0x803d00000000	                cmp byte [0x040039f9], 0	     14953	i386-dis.c	FUNCTION_23	SWITCH_1	IF_19
0x40039f9	            0x7505	                           jne 0x4003a00	     14953	i386-dis.c	FUNCTION_23	SWITCH_1	IF_19
0x40039fb	      0xe800000000	                          call 0x4003a00	     14954	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_49
0x4003a00	    0x8b0500000000	            mov eax, dword [0x04003a06] 	     14956	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_9
0x4003a06	      0x3d00010000	                          cmp eax, 0x100	     14956	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_9
0x4003a0b	            0x741d	                            je 0x4003a2a	     14956	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_9
0x4003a0d	      0x3d00020000	                          cmp eax, 0x200	     14956	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_9
0x4003a12	            0x7425	                            je 0x4003a39	     14956	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_9
0x4003a14	      0x3d80000000	                           cmp eax, 0x80	     14956	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_9
0x4003a19	            0x752d	                           jne 0x4003a48	     14956	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_9
0x4003a1b	      0xbf00000000	                              mov edi, 0	     14959	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_9	CALL_50
0x4003a20	      0xe878f2ffff	                        call sym.oappend	     14959	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_9	CALL_50
0x4003a25	      0xe9a1020000	                           jmp 0x4003ccb	     14960	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_9
0x4003a2a	      0xbf00000000	                              mov edi, 0	     14962	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_9	CALL_51
0x4003a2f	      0xe869f2ffff	                        call sym.oappend	     14962	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_9	CALL_51
0x4003a34	      0xe992020000	                           jmp 0x4003ccb	     14963	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_9
0x4003a39	      0xbf00000000	                              mov edi, 0	     14965	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_9	CALL_52
0x4003a3e	      0xe85af2ffff	                        call sym.oappend	     14965	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_9	CALL_52
0x4003a43	      0xe983020000	                           jmp 0x4003ccb	     14966	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_9
0x4003a48	      0xe800000000	                          call 0x4003a4d	     14968	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_9	CALL_53
0x4003a4d	    0x803d00000000	                cmp byte [0x04003a54], 0	     14972	i386-dis.c	FUNCTION_23	SWITCH_1	IF_20
0x4003a54	            0x7505	                           jne 0x4003a5b	     14972	i386-dis.c	FUNCTION_23	SWITCH_1	IF_20
0x4003a56	      0xe800000000	                          call 0x4003a5b	     14973	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_54
0x4003a5b	    0x8b0500000000	            mov eax, dword [0x04003a61] 	     14975	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_10
0x4003a61	      0x3d00010000	                          cmp eax, 0x100	     14975	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_10
0x4003a66	            0x741d	                            je 0x4003a85	     14975	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_10
0x4003a68	      0x3d00020000	                          cmp eax, 0x200	     14975	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_10
0x4003a6d	            0x7425	                            je 0x4003a94	     14975	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_10
0x4003a6f	      0x3d80000000	                           cmp eax, 0x80	     14975	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_10
0x4003a74	            0x752d	                           jne 0x4003aa3	     14975	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_10
0x4003a76	      0xbf00000000	                              mov edi, 0	     14978	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_10	CALL_55
0x4003a7b	      0xe81df2ffff	                        call sym.oappend	     14978	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_10	CALL_55
0x4003a80	      0xe946020000	                           jmp 0x4003ccb	     14979	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_10
0x4003a85	      0xbf00000000	                              mov edi, 0	     14981	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_10	CALL_56
0x4003a8a	      0xe80ef2ffff	                        call sym.oappend	     14981	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_10	CALL_56
0x4003a8f	      0xe937020000	                           jmp 0x4003ccb	     14982	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_10
0x4003a94	      0xbf00000000	                              mov edi, 0	     14984	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_10	CALL_57
0x4003a99	      0xe8fff1ffff	                        call sym.oappend	     14984	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_10	CALL_57
0x4003a9e	      0xe928020000	                           jmp 0x4003ccb	     14985	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_10
0x4003aa3	      0xe800000000	                          call 0x4003aa8	     14987	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_10	CALL_58
0x4003aa8	    0x803d00000000	                cmp byte [0x04003aaf], 0	     14991	i386-dis.c	FUNCTION_23	SWITCH_1	IF_21
0x4003aaf	            0x7505	                           jne 0x4003ab6	     14991	i386-dis.c	FUNCTION_23	SWITCH_1	IF_21
0x4003ab1	      0xe800000000	                          call 0x4003ab6	     14992	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_59
0x4003ab6	    0x8b0500000000	            mov eax, dword [0x04003abc] 	     14994	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_11
0x4003abc	      0x3d80000000	                           cmp eax, 0x80	     14994	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_11
0x4003ac1	            0x7407	                            je 0x4003aca	     14994	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_11
0x4003ac3	      0x3d00010000	                          cmp eax, 0x100	     14994	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_11
0x4003ac8	            0x750f	                           jne 0x4003ad9	     14994	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_11
0x4003aca	      0xbf00000000	                              mov edi, 0	     14998	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_11	CALL_60
0x4003acf	      0xe8c9f1ffff	                        call sym.oappend	     14998	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_11	CALL_60
0x4003ad4	      0xe9f2010000	                           jmp 0x4003ccb	     15003	i386-dis.c	FUNCTION_23	SWITCH_1
0x4003ad9	      0xe800000000	                          call 0x4003ade	     15001	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_11	CALL_61
0x4003ade	      0xbf00000000	                              mov edi, 0	     15005	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_62
0x4003ae3	      0xe8b5f1ffff	                        call sym.oappend	     15005	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_62
0x4003ae8	      0xe9de010000	                           jmp 0x4003ccb	     15006	i386-dis.c	FUNCTION_23	SWITCH_1
0x4003aed	    0x803d00000000	                cmp byte [0x04003af4], 0	     15010	i386-dis.c	FUNCTION_23	SWITCH_1	IF_22
0x4003af4	            0x7505	                           jne 0x4003afb	     15010	i386-dis.c	FUNCTION_23	SWITCH_1	IF_22
0x4003af6	      0xe800000000	                          call 0x4003afb	     15011	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_63
0x4003afb	    0x833d00000000	               cmp dword [0x04003b02], 0	     15013	i386-dis.c	FUNCTION_23	SWITCH_1	IF_23
0x4003b02	            0x740f	                            je 0x4003b13	     15013	i386-dis.c	FUNCTION_23	SWITCH_1	IF_23
0x4003b04	      0xbf00000000	                              mov edi, 0	     15014	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_64
0x4003b09	      0xe88ff1ffff	                        call sym.oappend	     15014	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_64
0x4003b0e	      0xe9b8010000	                           jmp 0x4003ccb	     15014	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_64
0x4003b13	      0xbf00000000	                              mov edi, 0	     15016	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_65
0x4003b18	      0xe880f1ffff	                        call sym.oappend	     15016	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_65
0x4003b1d	      0xe9a9010000	                           jmp 0x4003ccb	     15016	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_65
0x4003b22	    0x803d00000000	                cmp byte [0x04003b29], 0	     15020	i386-dis.c	FUNCTION_23	SWITCH_1	IF_24
0x4003b29	            0x7505	                           jne 0x4003b30	     15020	i386-dis.c	FUNCTION_23	SWITCH_1	IF_24
0x4003b2b	      0xe800000000	                          call 0x4003b30	     15021	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_66
0x4003b30	            0x85c0	                           test eax, eax	     15023	i386-dis.c	FUNCTION_23	SWITCH_1	IF_25
0x4003b32	            0x7527	                           jne 0x4003b5b	     15023	i386-dis.c	FUNCTION_23	SWITCH_1	IF_25
0x4003b34	    0x833d00000000	               cmp dword [0x04003b3b], 0	     15025	i386-dis.c	FUNCTION_23	SWITCH_1	IF_25	IF_26
0x4003b3b	            0x740f	                            je 0x4003b4c	     15025	i386-dis.c	FUNCTION_23	SWITCH_1	IF_25	IF_26
0x4003b3d	      0xbf00000000	                              mov edi, 0	     15026	i386-dis.c	FUNCTION_23	SWITCH_1	IF_25	CALL_67
0x4003b42	      0xe856f1ffff	                        call sym.oappend	     15026	i386-dis.c	FUNCTION_23	SWITCH_1	IF_25	CALL_67
0x4003b47	      0xe97f010000	                           jmp 0x4003ccb	     15026	i386-dis.c	FUNCTION_23	SWITCH_1	IF_25	CALL_67
0x4003b4c	      0xbf00000000	                              mov edi, 0	     15028	i386-dis.c	FUNCTION_23	SWITCH_1	IF_25	CALL_68
0x4003b51	      0xe847f1ffff	                        call sym.oappend	     15028	i386-dis.c	FUNCTION_23	SWITCH_1	IF_25	CALL_68
0x4003b56	      0xe970010000	                           jmp 0x4003ccb	     15028	i386-dis.c	FUNCTION_23	SWITCH_1	IF_25	CALL_68
0x4003b5b	    0x8b0500000000	            mov eax, dword [0x04003b61] 	     15032	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_10	SWITCH_12
0x4003b61	      0x3d00010000	                          cmp eax, 0x100	     15032	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_10	SWITCH_12
0x4003b66	            0x741d	                            je 0x4003b85	     15032	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_10	SWITCH_12
0x4003b68	      0x3d00020000	                          cmp eax, 0x200	     15032	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_10	SWITCH_12
0x4003b6d	            0x7425	                            je 0x4003b94	     15032	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_10	SWITCH_12
0x4003b6f	      0x3d80000000	                           cmp eax, 0x80	     15032	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_10	SWITCH_12
0x4003b74	            0x752d	                           jne 0x4003ba3	     15032	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_10	SWITCH_12
0x4003b76	      0xbf00000000	                              mov edi, 0	     15035	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_10	SWITCH_12	CALL_69
0x4003b7b	      0xe81df1ffff	                        call sym.oappend	     15035	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_10	SWITCH_12	CALL_69
0x4003b80	      0xe946010000	                           jmp 0x4003ccb	     15036	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_10	SWITCH_12
0x4003b85	      0xbf00000000	                              mov edi, 0	     15038	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_10	SWITCH_12	CALL_70
0x4003b8a	      0xe80ef1ffff	                        call sym.oappend	     15038	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_10	SWITCH_12	CALL_70
0x4003b8f	      0xe937010000	                           jmp 0x4003ccb	     15039	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_10	SWITCH_12
0x4003b94	      0xbf00000000	                              mov edi, 0	     15041	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_10	SWITCH_12	CALL_71
0x4003b99	      0xe8fff0ffff	                        call sym.oappend	     15041	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_10	SWITCH_12	CALL_71
0x4003b9e	      0xe928010000	                           jmp 0x4003ccb	     15042	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_10	SWITCH_12
0x4003ba3	      0xe800000000	                          call 0x4003ba8	     15044	i386-dis.c	FUNCTION_23	SWITCH_1	ELSE_10	SWITCH_12	CALL_72
0x4003ba8	    0x803d00000000	                cmp byte [0x04003baf], 0	     15050	i386-dis.c	FUNCTION_23	SWITCH_1	IF_27
0x4003baf	            0x7404	                            je 0x4003bb5	     15050	i386-dis.c	FUNCTION_23	SWITCH_1	IF_27
0x4003bb1	            0x85c0	                           test eax, eax	     15050	i386-dis.c	FUNCTION_23	SWITCH_1	IF_27
0x4003bb3	            0x7505	                           jne 0x4003bba	     15050	i386-dis.c	FUNCTION_23	SWITCH_1	IF_27
0x4003bb5	      0xe800000000	                          call 0x4003bba	     15051	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_73
0x4003bba	    0x8b0500000000	            mov eax, dword [0x04003bc0] 	     15053	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_13
0x4003bc0	      0x3d00010000	                          cmp eax, 0x100	     15053	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_13
0x4003bc5	            0x741d	                            je 0x4003be4	     15053	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_13
0x4003bc7	      0x3d00020000	                          cmp eax, 0x200	     15053	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_13
0x4003bcc	            0x7425	                            je 0x4003bf3	     15053	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_13
0x4003bce	      0x3d80000000	                           cmp eax, 0x80	     15053	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_13
0x4003bd3	            0x752d	                           jne 0x4003c02	     15053	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_13
0x4003bd5	      0xbf00000000	                              mov edi, 0	     15056	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_13	CALL_74
0x4003bda	      0xe8bef0ffff	                        call sym.oappend	     15056	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_13	CALL_74
0x4003bdf	      0xe9e7000000	                           jmp 0x4003ccb	     15057	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_13
0x4003be4	      0xbf00000000	                              mov edi, 0	     15059	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_13	CALL_75
0x4003be9	      0xe8aff0ffff	                        call sym.oappend	     15059	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_13	CALL_75
0x4003bee	      0xe9d8000000	                           jmp 0x4003ccb	     15060	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_13
0x4003bf3	      0xbf00000000	                              mov edi, 0	     15062	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_13	CALL_76
0x4003bf8	      0xe8a0f0ffff	                        call sym.oappend	     15062	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_13	CALL_76
0x4003bfd	      0xe9c9000000	                           jmp 0x4003ccb	     15063	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_13
0x4003c02	      0xe800000000	                          call 0x4003c07	     15065	i386-dis.c	FUNCTION_23	SWITCH_1	SWITCH_13	CALL_77
0x4003c07	    0x803d00000000	                cmp byte [0x04003c0e], 0	     15070	i386-dis.c	FUNCTION_23	SWITCH_1	IF_28
0x4003c0e	            0x740c	                            je 0x4003c1c	     15070	i386-dis.c	FUNCTION_23	SWITCH_1	IF_28
0x4003c10	    0x813d00000000	           cmp dword [0x04003c1a], 0x80 	     15070	i386-dis.c	FUNCTION_23	SWITCH_1	IF_28
0x4003c1a	            0x7405	                            je 0x4003c21	     15070	i386-dis.c	FUNCTION_23	SWITCH_1	IF_28
0x4003c1c	      0xe800000000	                          call 0x4003c21	     15071	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_78
0x4003c21	    0x833d00000000	               cmp dword [0x04003c28], 0	     15072	i386-dis.c	FUNCTION_23	SWITCH_1	IF_29
0x4003c28	            0x740f	                            je 0x4003c39	     15072	i386-dis.c	FUNCTION_23	SWITCH_1	IF_29
0x4003c2a	      0xbf00000000	                              mov edi, 0	     15073	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_79
0x4003c2f	      0xe869f0ffff	                        call sym.oappend	     15073	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_79
0x4003c34	      0xe992000000	                           jmp 0x4003ccb	     15073	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_79
0x4003c39	      0xbf00000000	                              mov edi, 0	     15075	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_80
0x4003c3e	      0xe85af0ffff	                        call sym.oappend	     15075	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_80
0x4003c43	      0xe983000000	                           jmp 0x4003ccb	     15075	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_80
0x4003c48	    0x803d00000000	                cmp byte [0x04003c4f], 0	     15078	i386-dis.c	FUNCTION_23	SWITCH_1	IF_30
0x4003c4f	            0x7505	                           jne 0x4003c56	     15078	i386-dis.c	FUNCTION_23	SWITCH_1	IF_30
0x4003c51	      0xe800000000	                          call 0x4003c56	     15079	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_81
0x4003c56	    0x833d00000000	               cmp dword [0x04003c5d], 0	     15080	i386-dis.c	FUNCTION_23	SWITCH_1	IF_31
0x4003c5d	            0x740c	                            je 0x4003c6b	     15080	i386-dis.c	FUNCTION_23	SWITCH_1	IF_31
0x4003c5f	      0xbf00000000	                              mov edi, 0	     15081	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_82
0x4003c64	      0xe834f0ffff	                        call sym.oappend	     15081	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_82
0x4003c69	            0xeb60	                           jmp 0x4003ccb	     15081	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_82
0x4003c6b	      0xbf00000000	                              mov edi, 0	     15083	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_83
0x4003c70	      0xe828f0ffff	                        call sym.oappend	     15083	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_83
0x4003c75	            0xeb54	                           jmp 0x4003ccb	     15083	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_83
0x4003c77	      0xbf00000000	                              mov edi, 0	     14781	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_10
0x4003c7c	      0xe81cf0ffff	                        call sym.oappend	     14781	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_10
0x4003c81	      0xe971faffff	                           jmp 0x40036f7	     14781	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_10
0x4003c86	    0x488b05000000	            mov rax, qword [0x04003c8d] 	     14780	i386-dis.c	FUNCTION_23	SWITCH_1	IF_7
0x4003c8d	        0x488d5001	                      lea rdx, [rax + 1]	     14780	i386-dis.c	FUNCTION_23	SWITCH_1	IF_7
0x4003c91	    0x488915000000	            mov qword [0x04003c98], rdx 	     14780	i386-dis.c	FUNCTION_23	SWITCH_1	IF_7
0x4003c98	          0xc60044	                    mov byte [rax], 0x44	     14780	i386-dis.c	FUNCTION_23	SWITCH_1	IF_7
0x4003c9b	      0xbf00000000	                              mov edi, 0	     14781	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_10
0x4003ca0	      0xe8f8efffff	                        call sym.oappend	     14781	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_10
0x4003ca5	            0xeb24	                           jmp 0x4003ccb	     14781	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_10
0x4003ca7	    0x488b05000000	            mov rax, qword [0x04003cae] 	     14780	i386-dis.c	FUNCTION_23	SWITCH_1	IF_7
0x4003cae	        0x488d5001	                      lea rdx, [rax + 1]	     14780	i386-dis.c	FUNCTION_23	SWITCH_1	IF_7
0x4003cb2	    0x488915000000	            mov qword [0x04003cb9], rdx 	     14780	i386-dis.c	FUNCTION_23	SWITCH_1	IF_7
0x4003cb9	          0xc60044	                    mov byte [rax], 0x44	     14780	i386-dis.c	FUNCTION_23	SWITCH_1	IF_7
0x4003cbc	      0xbf00000000	                              mov edi, 0	     14781	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_10
0x4003cc1	      0xe8d7efffff	                        call sym.oappend	     14781	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_10
0x4003cc6	      0xe92cfaffff	                           jmp 0x40036f7	     14781	i386-dis.c	FUNCTION_23	SWITCH_1	CALL_10
0x4003ccb	        0x4883c408	                              add rsp, 8	     15089	i386-dis.c	FUNCTION_23
0x4003ccf	              0xc3	                                     ret	     15089	i386-dis.c	FUNCTION_23
CRC32_Fixup	CALL,7:FOR,0:SWITCH,1:WHILE,0:ELSE,7:DO,0:IF,9:functions,0	105
0x4005b3c	            0x4154	                                push r12	     17074	i386-dis.c	FUNCTION_76
0x4005b3e	              0x55	                                push rbp	     17074	i386-dis.c	FUNCTION_76
0x4005b3f	              0x53	                                push rbx	     17074	i386-dis.c	FUNCTION_76
0x4005b40	            0x89fb	                            mov ebx, edi	     17074	i386-dis.c	FUNCTION_76
0x4005b42	          0x4189f4	                           mov r12d, esi	     17074	i386-dis.c	FUNCTION_76
0x4005b45	    0x488b2d000000	            mov rbp, qword [0x04005b4c] 	     17076	i386-dis.c	FUNCTION_76
0x4005b4c	          0x83ff01	                              cmp edi, 1	     17078	i386-dis.c	FUNCTION_76	SWITCH_1
0x4005b4f	            0x7407	                            je 0x4005b58	     17078	i386-dis.c	FUNCTION_76	SWITCH_1
0x4005b51	          0x83ff04	                              cmp edi, 4	     17078	i386-dis.c	FUNCTION_76	SWITCH_1
0x4005b54	            0x7415	                            je 0x4005b6b	     17078	i386-dis.c	FUNCTION_76	SWITCH_1
0x4005b56	            0xeb5f	                           jmp 0x4005bb7	     17078	i386-dis.c	FUNCTION_76	SWITCH_1
0x4005b58	    0x803d00000000	                cmp byte [0x04005b5f], 0	     17081	i386-dis.c	FUNCTION_76	SWITCH_1	IF_1
0x4005b5f	            0x757d	                           jne 0x4005bde	     17081	i386-dis.c	FUNCTION_76	SWITCH_1	IF_1
0x4005b61	        0xc6450062	                    mov byte [rbp], 0x62	     17084	i386-dis.c	FUNCTION_76	SWITCH_1
0x4005b65	        0x488d6d01	                      lea rbp, [rbp + 1]	     17084	i386-dis.c	FUNCTION_76	SWITCH_1
0x4005b69	            0xeb68	                           jmp 0x4005bd3	     17085	i386-dis.c	FUNCTION_76	SWITCH_1
0x4005b6b	    0x803d00000000	                cmp byte [0x04005b72], 0	     17087	i386-dis.c	FUNCTION_76	SWITCH_1	IF_2
0x4005b72	            0x756a	                           jne 0x4005bde	     17087	i386-dis.c	FUNCTION_76	SWITCH_1	IF_2
0x4005b74	    0xf60500000000	               test byte [0x04005b7b], 8	     17090	i386-dis.c	FUNCTION_76	SWITCH_1
0x4005b7b	     0xf844c010000	                            je 0x4005ccd	     17090	i386-dis.c	FUNCTION_76	SWITCH_1
0x4005b81	    0x830d00000000	            or dword [0x04005b88], 0x48 	     17090	i386-dis.c	FUNCTION_76	SWITCH_1
0x4005b88	        0xc6450071	                    mov byte [rbp], 0x71	     17092	i386-dis.c	FUNCTION_76	SWITCH_1	IF_3
0x4005b8c	        0x488d6d01	                      lea rbp, [rbp + 1]	     17092	i386-dis.c	FUNCTION_76	SWITCH_1	IF_3
0x4005b90	            0xeb41	                           jmp 0x4005bd3	     17092	i386-dis.c	FUNCTION_76	SWITCH_1	IF_3
0x4005b92	        0xc645006c	                    mov byte [rbp], 0x6c	     17096	i386-dis.c	FUNCTION_76	SWITCH_1	ELSE_1	IF_4
0x4005b96	        0x488d6d01	                      lea rbp, [rbp + 1]	     17096	i386-dis.c	FUNCTION_76	SWITCH_1	ELSE_1	IF_4
0x4005b9a	            0xeb08	                           jmp 0x4005ba4	     17096	i386-dis.c	FUNCTION_76	SWITCH_1	ELSE_1	IF_4
0x4005b9c	        0xc6450077	                    mov byte [rbp], 0x77	     17098	i386-dis.c	FUNCTION_76	SWITCH_1	ELSE_1	ELSE_2
0x4005ba0	        0x488d6d01	                      lea rbp, [rbp + 1]	     17098	i386-dis.c	FUNCTION_76	SWITCH_1	ELSE_1	ELSE_2
0x4005ba4	    0x8b0500000000	            mov eax, dword [0x04005baa] 	     17099	i386-dis.c	FUNCTION_76	SWITCH_1	ELSE_1
0x4005baa	      0x2500020000	                          and eax, 0x200	     17099	i386-dis.c	FUNCTION_76	SWITCH_1	ELSE_1
0x4005baf	     0x90500000000	              or dword [0x04005bb5], eax	     17099	i386-dis.c	FUNCTION_76	SWITCH_1	ELSE_1
0x4005bb5	            0xeb1c	                           jmp 0x4005bd3	     17099	i386-dis.c	FUNCTION_76	SWITCH_1	ELSE_1
0x4005bb7	      0xba05000000	                              mov edx, 5	     17103	i386-dis.c	FUNCTION_76	SWITCH_1	CALL_1
0x4005bbc	      0xbe00000000	                              mov esi, 0	     17103	i386-dis.c	FUNCTION_76	SWITCH_1	CALL_1
0x4005bc1	      0xbf00000000	                              mov edi, 0	     17103	i386-dis.c	FUNCTION_76	SWITCH_1	CALL_1
0x4005bc6	      0xe800000000	                          call 0x4005bcb	     17103	i386-dis.c	FUNCTION_76	SWITCH_1	CALL_1
0x4005bcb	          0x4889c7	                            mov rdi, rax	     17103	i386-dis.c	FUNCTION_76	SWITCH_1	CALL_1
0x4005bce	      0xe8cad0ffff	                        call sym.oappend	     17103	i386-dis.c	FUNCTION_76	SWITCH_1	CALL_1
0x4005bd3	    0x48892d000000	            mov qword [0x04005bda], rbp 	     17106	i386-dis.c	FUNCTION_76
0x4005bda	        0xc6450000	                       mov byte [rbp], 0	     17107	i386-dis.c	FUNCTION_76
0x4005bde	    0x833d00000000	               cmp dword [0x04005be5], 3	     17110	i386-dis.c	FUNCTION_76	IF_5
0x4005be5	     0xf85d6000000	                           jne 0x4005cc1	     17110	i386-dis.c	FUNCTION_76	IF_5
0x4005beb	    0x803d00000000	                cmp byte [0x04005bf2], 0	     17115	i386-dis.c	FUNCTION_76	IF_5
0x4005bf2	            0x7505	                           jne 0x4005bf9	     17115	i386-dis.c	FUNCTION_76	IF_5
0x4005bf4	      0xe800000000	                          call 0x4005bf9	     17115	i386-dis.c	FUNCTION_76	IF_5
0x4005bf9	    0x488305000000	               add qword [0x04005c01], 1	     17116	i386-dis.c	FUNCTION_76	IF_5
0x4005c01	    0x8b1500000000	            mov edx, dword [0x04005c07] 	     17118	i386-dis.c	FUNCTION_76	IF_5
0x4005c07	      0xb800000000	                              mov eax, 0	     17119	i386-dis.c	FUNCTION_76	IF_5
0x4005c0c	          0xf6c201	                              test dl, 1	     17118	i386-dis.c	FUNCTION_76	IF_5
0x4005c0f	            0x740c	                            je 0x4005c1d	     17118	i386-dis.c	FUNCTION_76	IF_5
0x4005c11	    0x830d00000000	            or dword [0x04005c18], 0x41 	     17118	i386-dis.c	FUNCTION_76	IF_5
0x4005c18	      0xb808000000	                              mov eax, 8	     17119	i386-dis.c	FUNCTION_76	IF_5
0x4005c1d	          0x83fb01	                              cmp ebx, 1	     17120	i386-dis.c	FUNCTION_76	IF_5	IF_6
0x4005c20	            0x7545	                           jne 0x4005c67	     17120	i386-dis.c	FUNCTION_76	IF_5	IF_6
0x4005c22	    0x830d00000000	            or dword [0x04005c29], 0x40 	     17122	i386-dis.c	FUNCTION_76	IF_5	IF_6
0x4005c29	            0x85d2	                           test edx, edx	     17123	i386-dis.c	FUNCTION_76	IF_5	IF_6	IF_7
0x4005c2b	            0x741d	                            je 0x4005c4a	     17123	i386-dis.c	FUNCTION_76	IF_5	IF_6	IF_7
0x4005c2d	     0x30500000000	             add eax, dword [0x04005c33]	     17124	i386-dis.c	FUNCTION_76	IF_5	IF_6	CALL_2
0x4005c33	            0x4898	                                    cdqe	     17124	i386-dis.c	FUNCTION_76	IF_5	IF_6	CALL_2
0x4005c35	    0x488b15000000	            mov rdx, qword [0x04005c3c] 	     17124	i386-dis.c	FUNCTION_76	IF_5	IF_6	CALL_2
0x4005c3c	        0x488b3cc2	            mov rdi, qword [rdx + rax*8]	     17124	i386-dis.c	FUNCTION_76	IF_5	IF_6	CALL_2
0x4005c40	      0xe858d0ffff	                        call sym.oappend	     17124	i386-dis.c	FUNCTION_76	IF_5	IF_6	CALL_2
0x4005c45	      0xe99d000000	                           jmp 0x4005ce7	     17124	i386-dis.c	FUNCTION_76	IF_5	IF_6	CALL_2
0x4005c4a	     0x30500000000	             add eax, dword [0x04005c50]	     17126	i386-dis.c	FUNCTION_76	IF_5	IF_6	CALL_3
0x4005c50	            0x4898	                                    cdqe	     17126	i386-dis.c	FUNCTION_76	IF_5	IF_6	CALL_3
0x4005c52	    0x488b15000000	            mov rdx, qword [0x04005c59] 	     17126	i386-dis.c	FUNCTION_76	IF_5	IF_6	CALL_3
0x4005c59	        0x488b3cc2	            mov rdi, qword [rdx + rax*8]	     17126	i386-dis.c	FUNCTION_76	IF_5	IF_6	CALL_3
0x4005c5d	      0xe83bd0ffff	                        call sym.oappend	     17126	i386-dis.c	FUNCTION_76	IF_5	IF_6	CALL_3
0x4005c62	      0xe980000000	                           jmp 0x4005ce7	     17126	i386-dis.c	FUNCTION_76	IF_5	IF_6	CALL_3
0x4005c67	          0xf6c208	                              test dl, 8	     17130	i386-dis.c	FUNCTION_76	IF_5	ELSE_4
0x4005c6a	            0x7470	                            je 0x4005cdc	     17130	i386-dis.c	FUNCTION_76	IF_5	ELSE_4
0x4005c6c	    0x830d00000000	            or dword [0x04005c73], 0x48 	     17130	i386-dis.c	FUNCTION_76	IF_5	ELSE_4
0x4005c73	     0x30500000000	             add eax, dword [0x04005c79]	     17132	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	CALL_4
0x4005c79	            0x4898	                                    cdqe	     17132	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	CALL_4
0x4005c7b	    0x488b15000000	            mov rdx, qword [0x04005c82] 	     17132	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	CALL_4
0x4005c82	        0x488b3cc2	            mov rdi, qword [rdx + rax*8]	     17132	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	CALL_4
0x4005c86	      0xe812d0ffff	                        call sym.oappend	     17132	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	CALL_4
0x4005c8b	            0xeb5a	                           jmp 0x4005ce7	     17132	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	CALL_4
0x4005c8d	     0x30500000000	             add eax, dword [0x04005c93]	     17134	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	ELSE_5	IF_9
0x4005c93	            0x4898	                                    cdqe	     17134	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	ELSE_5	IF_9
0x4005c95	    0x488b15000000	            mov rdx, qword [0x04005c9c] 	     17134	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	ELSE_5	IF_9
0x4005c9c	        0x488b3cc2	            mov rdi, qword [rdx + rax*8]	     17134	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	ELSE_5	IF_9
0x4005ca0	      0xe8f8cfffff	                        call sym.oappend	     17134	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	ELSE_5	IF_9
0x4005ca5	            0xeb40	                           jmp 0x4005ce7	     17134	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	ELSE_5	IF_9
0x4005ca7	     0x30500000000	             add eax, dword [0x04005cad]	     17136	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	CALL_6
0x4005cad	            0x4898	                                    cdqe	     17136	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	CALL_6
0x4005caf	    0x488b15000000	            mov rdx, qword [0x04005cb6] 	     17136	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	CALL_6
0x4005cb6	        0x488b3cc2	            mov rdi, qword [rdx + rax*8]	     17136	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	CALL_6
0x4005cba	      0xe8decfffff	                        call sym.oappend	     17136	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	CALL_6
0x4005cbf	            0xeb26	                           jmp 0x4005ce7	     17136	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	CALL_6
0x4005cc1	          0x4489e6	                           mov esi, r12d	     17140	i386-dis.c	FUNCTION_76	CALL_7
0x4005cc4	            0x89df	                            mov edi, ebx	     17140	i386-dis.c	FUNCTION_76	CALL_7
0x4005cc6	      0xe82afaffff	                           call sym.OP_E	     17140	i386-dis.c	FUNCTION_76	CALL_7
0x4005ccb	            0xeb1a	                           jmp 0x4005ce7	     17141	i386-dis.c	FUNCTION_76
0x4005ccd	        0x40f6c601	                             test sil, 1	     17095	i386-dis.c	FUNCTION_76	SWITCH_1	ELSE_1	IF_4
0x4005cd1	     0xf85bbfeffff	                           jne 0x4005b92	     17095	i386-dis.c	FUNCTION_76	SWITCH_1	ELSE_1	IF_4
0x4005cd7	      0xe9c0feffff	                           jmp 0x4005b9c	     17095	i386-dis.c	FUNCTION_76	SWITCH_1	ELSE_1	IF_4
0x4005cdc	    0xf60500000000	               test byte [0x04005ce3], 2	     17133	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	ELSE_5	IF_9
0x4005ce3	            0x75a8	                           jne 0x4005c8d	     17133	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	ELSE_5	IF_9
0x4005ce5	            0xebc0	                           jmp 0x4005ca7	     17133	i386-dis.c	FUNCTION_76	IF_5	ELSE_4	ELSE_5	IF_9
0x4005ce7	              0x5b	                                 pop rbx	     17141	i386-dis.c	FUNCTION_76
0x4005ce8	              0x5d	                                 pop rbp	     17141	i386-dis.c	FUNCTION_76
0x4005ce9	            0x415c	                                 pop r12	     17141	i386-dis.c	FUNCTION_76
0x4005ceb	              0xc3	                                     ret	     17141	i386-dis.c	FUNCTION_76
BadOp	CALL,1:FOR,0:SWITCH,0:WHILE,0:ELSE,0:DO,0:IF,0:functions,0	8
0x400355f	        0x4883ec08	                              sub rsp, 8	     16915	i386-dis.c	FUNCTION_67
0x4003563	    0x488b05000000	            mov rax, qword [0x0400356a] 	     16917	i386-dis.c	FUNCTION_67
0x400356a	        0x4883c001	                              add rax, 1	     16917	i386-dis.c	FUNCTION_67
0x400356e	    0x488905000000	            mov qword [0x04003575], rax 	     16917	i386-dis.c	FUNCTION_67
0x4003575	      0xbf00000000	                              mov edi, 0	     16918	i386-dis.c	FUNCTION_67	CALL_1
0x400357a	      0xe81ef7ffff	                        call sym.oappend	     16918	i386-dis.c	FUNCTION_67	CALL_1
0x400357f	        0x4883c408	                              add rsp, 8	     16919	i386-dis.c	FUNCTION_67
0x4003583	              0xc3	                                     ret	     16919	i386-dis.c	FUNCTION_67
print_i386_disassembler_options	CALL,16:FOR,1:SWITCH,1:WHILE,0:ELSE,0:DO,0:IF,0:functions,0	148
0x4007e3b	              0x53	                                push rbx	     12699	i386-dis.c	FUNCTION_7
0x4007e3c	          0x4889fb	                            mov rbx, rdi	     12699	i386-dis.c	FUNCTION_7
0x4007e3f	      0xba05000000	                              mov edx, 5	     12700	i386-dis.c	FUNCTION_7	CALL_1
0x4007e44	      0xbe00000000	                              mov esi, 0	     12700	i386-dis.c	FUNCTION_7	CALL_1
0x4007e49	      0xbf00000000	                              mov edi, 0	     12700	i386-dis.c	FUNCTION_7	CALL_1
0x4007e4e	      0xe800000000	                          call 0x4007e53	     12700	i386-dis.c	FUNCTION_7	CALL_1
0x4007e53	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_146
0x4007e56	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_146
0x4007e5b	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_146
0x4007e5e	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_146
0x4007e63	      0xe800000000	                          call 0x4007e68	        97	stdio2.h	CALL_146
0x4007e68	      0xba05000000	                              mov edx, 5	     12704	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_2
0x4007e6d	      0xbe00000000	                              mov esi, 0	     12704	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_2
0x4007e72	      0xbf00000000	                              mov edi, 0	     12704	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_2
0x4007e77	      0xe800000000	                          call 0x4007e7c	     12704	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_2
0x4007e7c	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_146
0x4007e7f	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_146
0x4007e84	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_146
0x4007e87	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_146
0x4007e8c	      0xe800000000	                          call 0x4007e91	        97	stdio2.h	CALL_146
0x4007e91	      0xba05000000	                              mov edx, 5	     12705	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_3
0x4007e96	      0xbe00000000	                              mov esi, 0	     12705	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_3
0x4007e9b	      0xbf00000000	                              mov edi, 0	     12705	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_3
0x4007ea0	      0xe800000000	                          call 0x4007ea5	     12705	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_3
0x4007ea5	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_146
0x4007ea8	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_146
0x4007ead	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_146
0x4007eb0	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_146
0x4007eb5	      0xe800000000	                          call 0x4007eba	        97	stdio2.h	CALL_146
0x4007eba	      0xba05000000	                              mov edx, 5	     12706	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_4
0x4007ebf	      0xbe00000000	                              mov esi, 0	     12706	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_4
0x4007ec4	      0xbf00000000	                              mov edi, 0	     12706	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_4
0x4007ec9	      0xe800000000	                          call 0x4007ece	     12706	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_4
0x4007ece	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_146
0x4007ed1	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_146
0x4007ed6	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_146
0x4007ed9	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_146
0x4007ede	      0xe800000000	                          call 0x4007ee3	        97	stdio2.h	CALL_146
0x4007ee3	      0xba05000000	                              mov edx, 5	     12707	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_5
0x4007ee8	      0xbe00000000	                              mov esi, 0	     12707	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_5
0x4007eed	      0xbf00000000	                              mov edi, 0	     12707	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_5
0x4007ef2	      0xe800000000	                          call 0x4007ef7	     12707	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_5
0x4007ef7	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_146
0x4007efa	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_146
0x4007eff	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_146
0x4007f02	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_146
0x4007f07	      0xe800000000	                          call 0x4007f0c	        97	stdio2.h	CALL_146
0x4007f0c	      0xba05000000	                              mov edx, 5	     12708	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_6
0x4007f11	      0xbe00000000	                              mov esi, 0	     12708	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_6
0x4007f16	      0xbf00000000	                              mov edi, 0	     12708	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_6
0x4007f1b	      0xe800000000	                          call 0x4007f20	     12708	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_6
0x4007f20	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_146
0x4007f23	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_146
0x4007f28	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_146
0x4007f2b	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_146
0x4007f30	      0xe800000000	                          call 0x4007f35	        97	stdio2.h	CALL_146
0x4007f35	      0xba05000000	                              mov edx, 5	     12709	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_7
0x4007f3a	      0xbe00000000	                              mov esi, 0	     12709	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_7
0x4007f3f	      0xbf00000000	                              mov edi, 0	     12709	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_7
0x4007f44	      0xe800000000	                          call 0x4007f49	     12709	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_7
0x4007f49	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_146
0x4007f4c	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_146
0x4007f51	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_146
0x4007f54	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_146
0x4007f59	      0xe800000000	                          call 0x4007f5e	        97	stdio2.h	CALL_146
0x4007f5e	      0xba05000000	                              mov edx, 5	     12711	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_8
0x4007f63	      0xbe00000000	                              mov esi, 0	     12711	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_8
0x4007f68	      0xbf00000000	                              mov edi, 0	     12711	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_8
0x4007f6d	      0xe800000000	                          call 0x4007f72	     12711	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_8
0x4007f72	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_146
0x4007f75	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_146
0x4007f7a	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_146
0x4007f7d	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_146
0x4007f82	      0xe800000000	                          call 0x4007f87	        97	stdio2.h	CALL_146
0x4007f87	      0xba05000000	                              mov edx, 5	     12713	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_9
0x4007f8c	      0xbe00000000	                              mov esi, 0	     12713	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_9
0x4007f91	      0xbf00000000	                              mov edi, 0	     12713	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_9
0x4007f96	      0xe800000000	                          call 0x4007f9b	     12713	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_9
0x4007f9b	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_146
0x4007f9e	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_146
0x4007fa3	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_146
0x4007fa6	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_146
0x4007fab	      0xe800000000	                          call 0x4007fb0	        97	stdio2.h	CALL_146
0x4007fb0	      0xba05000000	                              mov edx, 5	     12714	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_10
0x4007fb5	      0xbe00000000	                              mov esi, 0	     12714	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_10
0x4007fba	      0xbf00000000	                              mov edi, 0	     12714	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_10
0x4007fbf	      0xe800000000	                          call 0x4007fc4	     12714	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_10
0x4007fc4	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_146
0x4007fc7	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_146
0x4007fcc	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_146
0x4007fcf	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_146
0x4007fd4	      0xe800000000	                          call 0x4007fd9	        97	stdio2.h	CALL_146
0x4007fd9	      0xba05000000	                              mov edx, 5	     12715	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_11
0x4007fde	      0xbe00000000	                              mov esi, 0	     12715	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_11
0x4007fe3	      0xbf00000000	                              mov edi, 0	     12715	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_11
0x4007fe8	      0xe800000000	                          call 0x4007fed	     12715	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_11
0x4007fed	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_146
0x4007ff0	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_146
0x4007ff5	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_146
0x4007ff8	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_146
0x4007ffd	      0xe800000000	                          call 0x4008002	        97	stdio2.h	CALL_146
0x4008002	      0xba05000000	                              mov edx, 5	     12716	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_12
0x4008007	      0xbe00000000	                              mov esi, 0	     12716	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_12
0x400800c	      0xbf00000000	                              mov edi, 0	     12716	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_12
0x4008011	      0xe800000000	                          call 0x4008016	     12716	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_12
0x4008016	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_146
0x4008019	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_146
0x400801e	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_146
0x4008021	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_146
0x4008026	      0xe800000000	                          call 0x400802b	        97	stdio2.h	CALL_146
0x400802b	      0xba05000000	                              mov edx, 5	     12717	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_13
0x4008030	      0xbe00000000	                              mov esi, 0	     12717	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_13
0x4008035	      0xbf00000000	                              mov edi, 0	     12717	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_13
0x400803a	      0xe800000000	                          call 0x400803f	     12717	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_13
0x400803f	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_146
0x4008042	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_146
0x4008047	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_146
0x400804a	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_146
0x400804f	      0xe800000000	                          call 0x4008054	        97	stdio2.h	CALL_146
0x4008054	      0xba05000000	                              mov edx, 5	     12718	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_14
0x4008059	      0xbe00000000	                              mov esi, 0	     12718	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_14
0x400805e	      0xbf00000000	                              mov edi, 0	     12718	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_14
0x4008063	      0xe800000000	                          call 0x4008068	     12718	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_14
0x4008068	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_146
0x400806b	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_146
0x4008070	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_146
0x4008073	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_146
0x4008078	      0xe800000000	                          call 0x400807d	        97	stdio2.h	CALL_146
0x400807d	      0xba05000000	                              mov edx, 5	     12719	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_15
0x4008082	      0xbe00000000	                              mov esi, 0	     12719	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_15
0x4008087	      0xbf00000000	                              mov edi, 0	     12719	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_15
0x400808c	      0xe800000000	                          call 0x4008091	     12719	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_15
0x4008091	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_146
0x4008094	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_146
0x4008099	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_146
0x400809c	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_146
0x40080a1	      0xe800000000	                          call 0x40080a6	        97	stdio2.h	CALL_146
0x40080a6	      0xba05000000	                              mov edx, 5	     12720	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_16
0x40080ab	      0xbe00000000	                              mov esi, 0	     12720	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_16
0x40080b0	      0xbf00000000	                              mov edi, 0	     12720	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_16
0x40080b5	      0xe800000000	                          call 0x40080ba	     12720	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_16
0x40080ba	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_146
0x40080bd	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_146
0x40080c2	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_146
0x40080c5	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_146
0x40080ca	      0xe800000000	                          call 0x40080cf	        97	stdio2.h	CALL_146
0x40080cf	              0x5b	                                 pop rbx	     12721	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1
0x40080d0	              0xc3	                                     ret	     12721	i386-dis.c	FUNCTION_7	FOR_1	SWITCH_1
oappend	CALL,1:FOR,0:SWITCH,0:WHILE,0:ELSE,0:DO,0:IF,0:functions,0	7
0x4002c9d	        0x4883ec08	                              sub rsp, 8	     14576	i386-dis.c	FUNCTION_18
0x4002ca1	          0x4889fe	                            mov rsi, rdi	     14576	i386-dis.c	FUNCTION_18
0x4002ca4	    0x488b3d000000	            mov rdi, qword [0x04002cab] 	       117	string3.h	FUNCTION_125	CALL_3
0x4002cab	      0xe800000000	                          call 0x4002cb0	       117	string3.h	FUNCTION_125	CALL_3
0x4002cb0	    0x488905000000	            mov qword [0x04002cb7], rax 	     14577	i386-dis.c	FUNCTION_18	CALL_1
0x4002cb7	        0x4883c408	                              add rsp, 8	     14578	i386-dis.c	FUNCTION_18
0x4002cbb	              0xc3	                                     ret	     14578	i386-dis.c	FUNCTION_18
OP_D	CALL,1:FOR,0:SWITCH,0:WHILE,0:ELSE,2:DO,0:IF,2:functions,0	27
0x4003459	        0x4883ec08	                              sub rsp, 8	     16374	i386-dis.c	FUNCTION_47
0x400345d	    0x41b800000000	                              mov r8d, 0	     16380	i386-dis.c	FUNCTION_47	ELSE_1
0x4003463	    0xf60500000000	               test byte [0x0400346a], 4	     16376	i386-dis.c	FUNCTION_47
0x400346a	            0x740d	                            je 0x4003479	     16376	i386-dis.c	FUNCTION_47
0x400346c	    0x830d00000000	            or dword [0x04003473], 0x44 	     16376	i386-dis.c	FUNCTION_47
0x4003473	    0x41b808000000	                              mov r8d, 8	     16378	i386-dis.c	FUNCTION_47	IF_1
0x4003479	    0x803d00000000	                cmp byte [0x04003480], 0	     16381	i386-dis.c	FUNCTION_47	IF_2
0x4003480	            0x7427	                            je 0x40034a9	     16381	i386-dis.c	FUNCTION_47	IF_2
0x4003482	    0x440305000000	             add r8d, dword [0x04003489]	        33	stdio2.h	FUNCTION_101	CALL_1
0x4003489	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_101	CALL_1
0x400348e	      0xba64000000	                           mov edx, 0x64	        33	stdio2.h	FUNCTION_101	CALL_1
0x4003493	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_101	CALL_1
0x4003498	      0xbf00000000	                              mov edi, 0	        33	stdio2.h	FUNCTION_101	CALL_1
0x400349d	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_101	CALL_1
0x40034a2	      0xe800000000	                          call 0x40034a7	        33	stdio2.h	FUNCTION_101	CALL_1
0x40034a7	            0xeb25	                           jmp 0x40034ce	        33	stdio2.h	FUNCTION_101	CALL_1
0x40034a9	    0x440305000000	             add r8d, dword [0x040034b0]	        33	stdio2.h	FUNCTION_101	CALL_1
0x40034b0	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_101	CALL_1
0x40034b5	      0xba64000000	                           mov edx, 0x64	        33	stdio2.h	FUNCTION_101	CALL_1
0x40034ba	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_101	CALL_1
0x40034bf	      0xbf00000000	                              mov edi, 0	        33	stdio2.h	FUNCTION_101	CALL_1
0x40034c4	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_101	CALL_1
0x40034c9	      0xe800000000	                          call 0x40034ce	        33	stdio2.h	FUNCTION_101	CALL_1
0x40034ce	      0xbf00000000	                              mov edi, 0	     16385	i386-dis.c	FUNCTION_47	CALL_1
0x40034d3	      0xe8c5f7ffff	                        call sym.oappend	     16385	i386-dis.c	FUNCTION_47	CALL_1
0x40034d8	        0x4883c408	                              add rsp, 8	     16386	i386-dis.c	FUNCTION_47
0x40034dc	              0xc3	                                     ret	     16386	i386-dis.c	FUNCTION_47
OP_3DNowSuffix	CALL,2:FOR,0:SWITCH,0:WHILE,0:ELSE,1:DO,0:IF,1:functions,0	26
0x4006840	        0x4883ec08	                              sub rsp, 8	     16781	i386-dis.c	FUNCTION_62
0x4006844	    0x488b05000000	            mov rax, qword [0x0400684b] 	     16784	i386-dis.c	FUNCTION_62
0x400684b	        0x488d7001	                      lea rsi, [rax + 1]	     16784	i386-dis.c	FUNCTION_62
0x400684f	    0x488b3d000000	            mov rdi, qword [0x04006856] 	     16784	i386-dis.c	FUNCTION_62
0x4006856	        0x488b4768	            mov rax, qword [rdi + 0x68] 	     16784	i386-dis.c	FUNCTION_62
0x400685a	          0x483b30	                    cmp rsi, qword [rax]	     16784	i386-dis.c	FUNCTION_62
0x400685d	            0x7605	                           jbe 0x4006864	     16784	i386-dis.c	FUNCTION_62
0x400685f	      0xe847b6ffff	                     call sym.fetch_data	     16784	i386-dis.c	FUNCTION_62
0x4006864	    0x488b05000000	            mov rax, qword [0x0400686b] 	     16788	i386-dis.c	FUNCTION_62
0x400686b	    0x488905000000	            mov qword [0x04006872], rax 	     16788	i386-dis.c	FUNCTION_62
0x4006872	    0x488b05000000	            mov rax, qword [0x04006879] 	     16789	i386-dis.c	FUNCTION_62
0x4006879	        0x488d5001	                      lea rdx, [rax + 1]	     16789	i386-dis.c	FUNCTION_62
0x400687d	    0x488915000000	            mov qword [0x04006884], rdx 	     16789	i386-dis.c	FUNCTION_62
0x4006884	           0xfb600	                   movzx eax, byte [rax]	     16789	i386-dis.c	FUNCTION_62
0x4006887	    0x488b3cc50000	                  mov rdi, qword [rax*8]	     16789	i386-dis.c	FUNCTION_62
0x400688f	          0x4885ff	                           test rdi, rdi	     16790	i386-dis.c	FUNCTION_62	IF_1
0x4006892	            0x7407	                            je 0x400689b	     16790	i386-dis.c	FUNCTION_62	IF_1
0x4006894	      0xe804c4ffff	                        call sym.oappend	     16791	i386-dis.c	FUNCTION_62	CALL_1
0x4006899	            0xeb13	                           jmp 0x40068ae	     16791	i386-dis.c	FUNCTION_62	CALL_1
0x400689b	    0xc60500000000	                mov byte [0x040068a2], 0	     16798	i386-dis.c	FUNCTION_62	ELSE_1
0x40068a2	    0xc60500000000	                mov byte [0x040068a9], 0	     16799	i386-dis.c	FUNCTION_62	ELSE_1
0x40068a9	      0xe8b1ccffff	                          call sym.BadOp	     16800	i386-dis.c	FUNCTION_62	ELSE_1	CALL_2
0x40068ae	    0x488b05000000	            mov rax, qword [0x040068b5] 	     16802	i386-dis.c	FUNCTION_62
0x40068b5	    0x488905000000	            mov qword [0x040068bc], rax 	     16802	i386-dis.c	FUNCTION_62
0x40068bc	        0x4883c408	                              add rsp, 8	     16803	i386-dis.c	FUNCTION_62
0x40068c0	              0xc3	                                     ret	     16803	i386-dis.c	FUNCTION_62
OP_EX_VexImmW	CALL,5:FOR,0:SWITCH,0:WHILE,0:ELSE,2:DO,0:IF,4:functions,0	53
0x400601e	              0x55	                                push rbp	     17404	i386-dis.c	FUNCTION_82
0x400601f	              0x53	                                push rbx	     17404	i386-dis.c	FUNCTION_82
0x4006020	        0x4883ec08	                              sub rsp, 8	     17404	i386-dis.c	FUNCTION_82
0x4006024	            0x89fd	                            mov ebp, edi	     17404	i386-dis.c	FUNCTION_82
0x4006026	            0x89f3	                            mov ebx, esi	     17404	i386-dis.c	FUNCTION_82
0x4006028	     0xfb605000000	           movzx eax, byte [0x0400602f] 	     17408	i386-dis.c	FUNCTION_82	IF_1
0x400602f	            0x84c0	                             test al, al	     17408	i386-dis.c	FUNCTION_82	IF_1
0x4006031	            0x754e	                           jne 0x4006081	     17408	i386-dis.c	FUNCTION_82	IF_1
0x4006033	    0xc60500000000	                mov byte [0x0400603a], 1	     17410	i386-dis.c	FUNCTION_82	IF_1
0x400603a	    0x803d00000000	                cmp byte [0x04006041], 0	     17413	i386-dis.c	FUNCTION_82	IF_1
0x4006041	            0x7505	                           jne 0x4006048	     17413	i386-dis.c	FUNCTION_82	IF_1
0x4006043	      0xe800000000	                          call 0x4006048	     17413	i386-dis.c	FUNCTION_82	IF_1
0x4006048	    0x488305000000	               add qword [0x04006050], 1	     17414	i386-dis.c	FUNCTION_82	IF_1
0x4006050	      0xbe00000000	                              mov esi, 0	     17416	i386-dis.c	FUNCTION_82	IF_1	CALL_1
0x4006055	            0x89df	                            mov edi, ebx	     17416	i386-dis.c	FUNCTION_82	IF_1	CALL_1
0x4006057	      0xe8cccaffff	                   call sym.get_vex_imm8	     17416	i386-dis.c	FUNCTION_82	IF_1	CALL_1
0x400605c	    0x880500000000	               mov byte [0x04006062], al	     17416	i386-dis.c	FUNCTION_82	IF_1	CALL_1
0x4006062	      0xbaffffffff	                     mov edx, 0xffffffff	     17405	i386-dis.c	FUNCTION_82
0x4006067	    0x833d00000000	               cmp dword [0x0400606e], 0	     17418	i386-dis.c	FUNCTION_82	IF_1	IF_2
0x400606e	            0x7406	                            je 0x4006076	     17418	i386-dis.c	FUNCTION_82	IF_1	IF_2
0x4006070	          0xc0e804	                               shr al, 4	     17419	i386-dis.c	FUNCTION_82	IF_1	IF_2
0x4006073	           0xfb6d0	                           movzx edx, al	     17419	i386-dis.c	FUNCTION_82	IF_1	IF_2
0x4006076	            0x89de	                            mov esi, ebx	     17421	i386-dis.c	FUNCTION_82	IF_1	CALL_2
0x4006078	            0x89ef	                            mov edi, ebp	     17421	i386-dis.c	FUNCTION_82	IF_1	CALL_2
0x400607a	      0xe820ffffff	                   call sym.OP_EX_VexReg	     17421	i386-dis.c	FUNCTION_82	IF_1	CALL_2
0x400607f	            0xeb6a	                           jmp 0x40060eb	     17421	i386-dis.c	FUNCTION_82	IF_1	CALL_2
0x4006081	            0x3c01	                               cmp al, 1	     17423	i386-dis.c	FUNCTION_82	ELSE_1	IF_3
0x4006083	            0x752d	                           jne 0x40060b2	     17423	i386-dis.c	FUNCTION_82	ELSE_1	IF_3
0x4006085	    0xc60500000000	                mov byte [0x0400608c], 2	     17425	i386-dis.c	FUNCTION_82	ELSE_1	IF_3
0x400608c	      0xbaffffffff	                     mov edx, 0xffffffff	     17405	i386-dis.c	FUNCTION_82
0x4006091	    0x833d00000000	               cmp dword [0x04006098], 0	     17427	i386-dis.c	FUNCTION_82	ELSE_1	IF_3	IF_4
0x4006098	            0x750d	                           jne 0x40060a7	     17427	i386-dis.c	FUNCTION_82	ELSE_1	IF_3	IF_4
0x400609a	     0xfb615000000	           movzx edx, byte [0x040060a1] 	     17428	i386-dis.c	FUNCTION_82	ELSE_1	IF_3	IF_4
0x40060a1	          0xc0ea04	                               shr dl, 4	     17428	i386-dis.c	FUNCTION_82	ELSE_1	IF_3	IF_4
0x40060a4	           0xfb6d2	                           movzx edx, dl	     17428	i386-dis.c	FUNCTION_82	ELSE_1	IF_3	IF_4
0x40060a7	            0x89de	                            mov esi, ebx	     17430	i386-dis.c	FUNCTION_82	ELSE_1	IF_3	CALL_3
0x40060a9	            0x89ef	                            mov edi, ebp	     17430	i386-dis.c	FUNCTION_82	ELSE_1	IF_3	CALL_3
0x40060ab	      0xe8effeffff	                   call sym.OP_EX_VexReg	     17430	i386-dis.c	FUNCTION_82	ELSE_1	IF_3	CALL_3
0x40060b0	            0xeb39	                           jmp 0x40060eb	     17430	i386-dis.c	FUNCTION_82	ELSE_1	IF_3	CALL_3
0x40060b2	    0xc60500000000	            mov byte [0x040060b9], 0x24 	     17435	i386-dis.c	FUNCTION_82	ELSE_2
0x40060b9	     0xfb615000000	           movzx edx, byte [0x040060c0] 	     17436	i386-dis.c	FUNCTION_82	ELSE_2	CALL_4
0x40060c0	          0x83e20f	                            and edx, 0xf	     17436	i386-dis.c	FUNCTION_82	ELSE_2	CALL_4
0x40060c3	      0xbe01000000	                              mov esi, 1	     17436	i386-dis.c	FUNCTION_82	ELSE_2	CALL_4
0x40060c8	      0xbf00000000	                              mov edi, 0	     17436	i386-dis.c	FUNCTION_82	ELSE_2	CALL_4
0x40060cd	      0xe823b9ffff	            call sym.print_operand_value	     17436	i386-dis.c	FUNCTION_82	ELSE_2	CALL_4
0x40060d2	      0xbf00000000	                              mov edi, 0	     17437	i386-dis.c	FUNCTION_82	ELSE_2	CALL_5
0x40060d7	      0xe8e0cbffff	            call sym.oappend_maybe_intel	     17437	i386-dis.c	FUNCTION_82	ELSE_2	CALL_5
0x40060dc	    0xc60500000000	                mov byte [0x040060e3], 0	     17438	i386-dis.c	FUNCTION_82	ELSE_2
0x40060e3	    0x488305000000	               add qword [0x040060eb], 1	     17439	i386-dis.c	FUNCTION_82	ELSE_2
0x40060eb	        0x4883c408	                              add rsp, 8	     17441	i386-dis.c	FUNCTION_82
0x40060ef	              0x5b	                                 pop rbx	     17441	i386-dis.c	FUNCTION_82
0x40060f0	              0x5d	                                 pop rbp	     17441	i386-dis.c	FUNCTION_82
0x40060f1	              0xc3	                                     ret	     17441	i386-dis.c	FUNCTION_82
OP_indirE	CALL,2:FOR,0:SWITCH,0:WHILE,0:ELSE,0:DO,0:IF,1:functions,0	16
0x4005d6d	              0x55	                                push rbp	     14615	i386-dis.c	FUNCTION_20
0x4005d6e	              0x53	                                push rbx	     14615	i386-dis.c	FUNCTION_20
0x4005d6f	        0x4883ec08	                              sub rsp, 8	     14615	i386-dis.c	FUNCTION_20
0x4005d73	            0x89fb	                            mov ebx, edi	     14615	i386-dis.c	FUNCTION_20
0x4005d75	            0x89f5	                            mov ebp, esi	     14615	i386-dis.c	FUNCTION_20
0x4005d77	    0x803d00000000	                cmp byte [0x04005d7e], 0	     14616	i386-dis.c	FUNCTION_20	IF_1
0x4005d7e	            0x750a	                           jne 0x4005d8a	     14616	i386-dis.c	FUNCTION_20	IF_1
0x4005d80	      0xbf00000000	                              mov edi, 0	     14617	i386-dis.c	FUNCTION_20	CALL_1
0x4005d85	      0xe813cfffff	                        call sym.oappend	     14617	i386-dis.c	FUNCTION_20	CALL_1
0x4005d8a	            0x89ee	                            mov esi, ebp	     14618	i386-dis.c	FUNCTION_20	CALL_2
0x4005d8c	            0x89df	                            mov edi, ebx	     14618	i386-dis.c	FUNCTION_20	CALL_2
0x4005d8e	      0xe862f9ffff	                           call sym.OP_E	     14618	i386-dis.c	FUNCTION_20	CALL_2
0x4005d93	        0x4883c408	                              add rsp, 8	     14619	i386-dis.c	FUNCTION_20
0x4005d97	              0x5b	                                 pop rbx	     14619	i386-dis.c	FUNCTION_20
0x4005d98	              0x5d	                                 pop rbp	     14619	i386-dis.c	FUNCTION_20
0x4005d99	              0xc3	                                     ret	     14619	i386-dis.c	FUNCTION_20
oappend_maybe_intel	CALL,1:FOR,0:SWITCH,0:WHILE,0:ELSE,0:DO,0:IF,0:functions,0	6
0x4002cbc	        0x4883ec08	                              sub rsp, 8	     13963	i386-dis.c	FUNCTION_14
0x4002cc0	    0x480fbe050000	           movsx rax, byte [0x04002cc8] 	     13964	i386-dis.c	FUNCTION_14	CALL_1
0x4002cc8	          0x4801c7	                            add rdi, rax	     13964	i386-dis.c	FUNCTION_14	CALL_1
0x4002ccb	      0xe8cdffffff	                        call sym.oappend	     13964	i386-dis.c	FUNCTION_14	CALL_1
0x4002cd0	        0x4883c408	                              add rsp, 8	     13965	i386-dis.c	FUNCTION_14
0x4002cd4	              0xc3	                                     ret	     13965	i386-dis.c	FUNCTION_14
OP_LWP_E	CALL,1:FOR,0:SWITCH,0:WHILE,0:ELSE,1:DO,0:IF,2:functions,0	15
0x4003584	        0x4883ec08	                              sub rsp, 8	     17882	i386-dis.c	FUNCTION_98
0x4003588	    0x8b0500000000	            mov eax, dword [0x0400358e] 	     17884	i386-dis.c	FUNCTION_98
0x400358e	    0x8b1500000000	            mov edx, dword [0x04003594] 	     17886	i386-dis.c	FUNCTION_98	IF_1
0x4003594	          0x83e208	                              and edx, 8	     17886	i386-dis.c	FUNCTION_98	IF_1
0x4003597	    0x488b15000000	            mov rdx, qword [0x0400359e] 	     17887	i386-dis.c	FUNCTION_98	IF_1
0x400359e	    0x480f44150000	           cmove rdx, qword [0x040035a6]	     17887	i386-dis.c	FUNCTION_98	IF_1
0x40035a6	            0x89c1	                            mov ecx, eax	     17892	i386-dis.c	FUNCTION_98	IF_2
0x40035a8	          0x83e107	                              and ecx, 7	     17892	i386-dis.c	FUNCTION_98	IF_2
0x40035ab	    0x833d00000000	               cmp dword [0x040035b2], 2	     17892	i386-dis.c	FUNCTION_98	IF_2
0x40035b2	           0xf45c1	                         cmovne eax, ecx	     17892	i386-dis.c	FUNCTION_98	IF_2
0x40035b5	            0x89c0	                            mov eax, eax	     17893	i386-dis.c	FUNCTION_98	CALL_1
0x40035b7	        0x488b3cc2	            mov rdi, qword [rdx + rax*8]	     17893	i386-dis.c	FUNCTION_98	CALL_1
0x40035bb	      0xe8ddf6ffff	                        call sym.oappend	     17893	i386-dis.c	FUNCTION_98	CALL_1
0x40035c0	        0x4883c408	                              add rsp, 8	     17894	i386-dis.c	FUNCTION_98
0x40035c4	              0xc3	                                     ret	     17894	i386-dis.c	FUNCTION_98
OP_Mwaitx	CALL,3:FOR,0:SWITCH,0:WHILE,0:ELSE,0:DO,0:IF,1:functions,0	25
0x4001cd5	              0x53	                                push rbx	     16847	i386-dis.c	FUNCTION_64
0x4001cd6	    0x803d00000000	                cmp byte [0x04001cdd], 0	     16849	i386-dis.c	FUNCTION_64	IF_1
0x4001cdd	            0x7558	                           jne 0x4001d37	     16849	i386-dis.c	FUNCTION_64	IF_1
0x4001cdf	    0x833d00000000	               cmp dword [0x04001ce6], 2	     16852	i386-dis.c	FUNCTION_64	IF_1
0x4001ce6	    0x488b1d000000	            mov rbx, qword [0x04001ced] 	     16852	i386-dis.c	FUNCTION_64	IF_1
0x4001ced	    0x480f451d0000	          cmovne rbx, qword [0x04001cf5]	     16852	i386-dis.c	FUNCTION_64	IF_1
0x4001cf5	      0xbaf4010000	                          mov edx, 0x1f4	       110	string3.h	FUNCTION_124	CALL_3
0x4001cfa	          0x488b33	                    mov rsi, qword [rbx]	       110	string3.h	FUNCTION_124	CALL_3
0x4001cfd	      0xbf00000000	                              mov edi, 0	       110	string3.h	FUNCTION_124	CALL_3
0x4001d02	      0xe800000000	                          call 0x4001d07	       110	string3.h	FUNCTION_124	CALL_3
0x4001d07	        0x488b7308	                mov rsi, qword [rbx + 8]	       110	string3.h	FUNCTION_124	CALL_3
0x4001d0b	      0xba90010000	                          mov edx, 0x190	       110	string3.h	FUNCTION_124	CALL_3
0x4001d10	      0xbf00000000	                              mov edi, 0	       110	string3.h	FUNCTION_124	CALL_3
0x4001d15	      0xe800000000	                          call 0x4001d1a	       110	string3.h	FUNCTION_124	CALL_3
0x4001d1a	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	       110	string3.h	FUNCTION_124	CALL_3
0x4001d1e	      0xba2c010000	                          mov edx, 0x12c	       110	string3.h	FUNCTION_124	CALL_3
0x4001d23	      0xbf00000000	                              mov edi, 0	       110	string3.h	FUNCTION_124	CALL_3
0x4001d28	      0xe800000000	                          call 0x4001d2d	       110	string3.h	FUNCTION_124	CALL_3
0x4001d2d	    0xc70500000000	               mov dword [0x04001d37], 1	     16856	i386-dis.c	FUNCTION_64	IF_1
0x4001d37	    0x803d00000000	                cmp byte [0x04001d3e], 0	     16859	i386-dis.c	FUNCTION_64
0x4001d3e	            0x7505	                           jne 0x4001d45	     16859	i386-dis.c	FUNCTION_64
0x4001d40	      0xe800000000	                          call 0x4001d45	     16859	i386-dis.c	FUNCTION_64
0x4001d45	    0x488305000000	               add qword [0x04001d4d], 1	     16860	i386-dis.c	FUNCTION_64
0x4001d4d	              0x5b	                                 pop rbx	     16861	i386-dis.c	FUNCTION_64
0x4001d4e	              0xc3	                                     ret	     16861	i386-dis.c	FUNCTION_64
print_insn_i386	CALL,1:FOR,0:SWITCH,0:WHILE,0:ELSE,0:DO,0:IF,0:functions,0	5
0x4007e26	        0x4883ec08	                              sub rsp, 8	     12691	i386-dis.c	FUNCTION_6
0x4007e2a	    0xc60500000000	            mov byte [0x04007e31], 0xff 	     12692	i386-dis.c	FUNCTION_6
0x4007e31	      0xe83eecffff	                     call sym.print_insn	     12694	i386-dis.c	FUNCTION_6	CALL_1
0x4007e36	        0x4883c408	                              add rsp, 8	     12695	i386-dis.c	FUNCTION_6
0x4007e3a	              0xc3	                                     ret	     12695	i386-dis.c	FUNCTION_6
get_sib	CALL,0:FOR,0:SWITCH,0:WHILE,0:ELSE,0:DO,0:IF,1:functions,0	31
0x4002c20	    0x803d00000000	                cmp byte [0x04002c27], 0	     13154	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_9	IF_1
0x4002c27	            0x7472	                            je 0x4002c9b	     13154	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_9	IF_1
0x4002c29	        0x40f6c602	                             test sil, 2	     13155	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_9	IF_1
0x4002c2d	            0x7509	                           jne 0x4002c38	     13155	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_9	IF_1
0x4002c2f	    0x833d00000000	               cmp dword [0x04002c36], 2	     13155	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_9	IF_1
0x4002c36	            0x7563	                           jne 0x4002c9b	     13155	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_9	IF_1
0x4002c38	    0x833d00000000	               cmp dword [0x04002c3f], 3	     13156	i386-dis.c	FUNCTION_9	IF_1
0x4002c3f	            0x745a	                            je 0x4002c9b	     13156	i386-dis.c	FUNCTION_9	IF_1
0x4002c41	    0x833d00000000	               cmp dword [0x04002c48], 4	     13157	i386-dis.c	FUNCTION_9	IF_1
0x4002c48	            0x7551	                           jne 0x4002c9b	     13157	i386-dis.c	FUNCTION_9	IF_1
0x4002c4a	        0x4883ec08	                              sub rsp, 8	     13152	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_9
0x4002c4e	    0x488b05000000	            mov rax, qword [0x04002c55] 	     13159	i386-dis.c	FUNCTION_9	IF_1
0x4002c55	        0x488d7002	                      lea rsi, [rax + 2]	     13159	i386-dis.c	FUNCTION_9	IF_1
0x4002c59	        0x488b4768	            mov rax, qword [rdi + 0x68] 	     13159	i386-dis.c	FUNCTION_9	IF_1
0x4002c5d	          0x483b30	                    cmp rsi, qword [rax]	     13159	i386-dis.c	FUNCTION_9	IF_1
0x4002c60	            0x7605	                           jbe 0x4002c67	     13159	i386-dis.c	FUNCTION_9	IF_1
0x4002c62	      0xe844f2ffff	                     call sym.fetch_data	     13159	i386-dis.c	FUNCTION_9	IF_1
0x4002c67	    0x488b05000000	            mov rax, qword [0x04002c6e] 	     13160	i386-dis.c	FUNCTION_9	IF_1
0x4002c6e	         0xfb64001	               movzx eax, byte [rax + 1]	     13160	i386-dis.c	FUNCTION_9	IF_1
0x4002c72	            0x89c2	                            mov edx, eax	     13160	i386-dis.c	FUNCTION_9	IF_1
0x4002c74	          0xc0ea03	                               shr dl, 3	     13160	i386-dis.c	FUNCTION_9	IF_1
0x4002c77	          0x83e207	                              and edx, 7	     13160	i386-dis.c	FUNCTION_9	IF_1
0x4002c7a	    0x891500000000	            mov dword [0x04002c80], edx 	     13160	i386-dis.c	FUNCTION_9	IF_1
0x4002c80	            0x89c2	                            mov edx, eax	     13161	i386-dis.c	FUNCTION_9	IF_1
0x4002c82	          0xc0ea06	                               shr dl, 6	     13161	i386-dis.c	FUNCTION_9	IF_1
0x4002c85	           0xfb6d2	                           movzx edx, dl	     13161	i386-dis.c	FUNCTION_9	IF_1
0x4002c88	    0x891500000000	            mov dword [0x04002c8e], edx 	     13161	i386-dis.c	FUNCTION_9	IF_1
0x4002c8e	          0x83e007	                              and eax, 7	     13162	i386-dis.c	FUNCTION_9	IF_1
0x4002c91	    0x890500000000	            mov dword [0x04002c97], eax 	     13162	i386-dis.c	FUNCTION_9	IF_1
0x4002c97	        0x4883c408	                              add rsp, 8	     13164	i386-dis.c	FUNCTION_9
0x4002c9b	            0xf3c3	                                     ret	     13164	i386-dis.c	FUNCTION_9
OP_MS	CALL,2:FOR,0:SWITCH,0:WHILE,0:ELSE,1:DO,0:IF,1:functions,0	8
0x4005969	        0x4883ec08	                              sub rsp, 8	     16652	i386-dis.c	FUNCTION_56
0x400596d	    0x833d00000000	               cmp dword [0x04005974], 3	     16653	i386-dis.c	FUNCTION_56	IF_1
0x4005974	            0x7507	                           jne 0x400597d	     16653	i386-dis.c	FUNCTION_56	IF_1
0x4005976	      0xe83affffff	                          call sym.OP_EM	     16654	i386-dis.c	FUNCTION_56	CALL_1
0x400597b	            0xeb05	                           jmp 0x4005982	     16654	i386-dis.c	FUNCTION_56	CALL_1
0x400597d	      0xe8dddbffff	                          call sym.BadOp	     16656	i386-dis.c	FUNCTION_56	CALL_2
0x4005982	        0x4883c408	                              add rsp, 8	     16657	i386-dis.c	FUNCTION_56
0x4005986	              0xc3	                                     ret	     16657	i386-dis.c	FUNCTION_56
OP_ST	CALL,1:FOR,0:SWITCH,0:WHILE,0:ELSE,0:DO,0:IF,0:functions,0	5
0x4002d0d	        0x4883ec08	                              sub rsp, 8	     13969	i386-dis.c	FUNCTION_15
0x4002d11	      0xbf00000000	                              mov edi, 0	     13970	i386-dis.c	FUNCTION_15	CALL_1
0x4002d16	      0xe8a1ffffff	            call sym.oappend_maybe_intel	     13970	i386-dis.c	FUNCTION_15	CALL_1
0x4002d1b	        0x4883c408	                              add rsp, 8	     13971	i386-dis.c	FUNCTION_15
0x4002d1f	              0xc3	                                     ret	     13971	i386-dis.c	FUNCTION_15
FXSAVE_Fixup	CALL,1:FOR,0:SWITCH,0:WHILE,0:ELSE,0:DO,0:IF,1:functions,0	13
0x4005818	        0x4883ec08	                              sub rsp, 8	     17145	i386-dis.c	FUNCTION_77
0x400581c	    0xf60500000000	               test byte [0x04005823], 8	     17147	i386-dis.c	FUNCTION_77
0x4005823	            0x7424	                            je 0x4005849	     17147	i386-dis.c	FUNCTION_77
0x4005825	    0x830d00000000	            or dword [0x0400582c], 0x48 	     17147	i386-dis.c	FUNCTION_77
0x400582c	    0x488b05000000	            mov rax, qword [0x04005833] 	     17150	i386-dis.c	FUNCTION_77	IF_1
0x4005833	          0xc60036	                    mov byte [rax], 0x36	     17151	i386-dis.c	FUNCTION_77	IF_1
0x4005836	        0xc6400134	                mov byte [rax + 1], 0x34	     17152	i386-dis.c	FUNCTION_77	IF_1
0x400583a	        0xc6400200	                   mov byte [rax + 2], 0	     17153	i386-dis.c	FUNCTION_77	IF_1
0x400583e	        0x4883c002	                              add rax, 2	     17152	i386-dis.c	FUNCTION_77	IF_1
0x4005842	    0x488905000000	            mov qword [0x04005849], rax 	     17152	i386-dis.c	FUNCTION_77	IF_1
0x4005849	      0xe8acffffff	                           call sym.OP_M	     17156	i386-dis.c	FUNCTION_77	CALL_1
0x400584e	        0x4883c408	                              add rsp, 8	     17157	i386-dis.c	FUNCTION_77
0x4005852	              0xc3	                                     ret	     17157	i386-dis.c	FUNCTION_77
ptr_reg	CALL,1:FOR,0:SWITCH,0:WHILE,0:ELSE,3:DO,0:IF,3:functions,0	39
0x400339d	        0x4883ec08	                              sub rsp, 8	     16279	i386-dis.c	FUNCTION_43
0x40033a1	    0x488b05000000	            mov rax, qword [0x040033a8] 	     16282	i386-dis.c	FUNCTION_43
0x40033a8	        0x488d5001	                      lea rdx, [rax + 1]	     16282	i386-dis.c	FUNCTION_43
0x40033ac	    0x488915000000	            mov qword [0x040033b3], rdx 	     16282	i386-dis.c	FUNCTION_43
0x40033b3	     0xfb615000000	           movzx edx, byte [0x040033ba] 	     16282	i386-dis.c	FUNCTION_43
0x40033ba	            0x8810	                      mov byte [rax], dl	     16282	i386-dis.c	FUNCTION_43
0x40033bc	    0x8b0500000000	            mov eax, dword [0x040033c2] 	     16283	i386-dis.c	FUNCTION_43
0x40033c2	      0x2500040000	                          and eax, 0x400	     16283	i386-dis.c	FUNCTION_43
0x40033c7	     0x90500000000	              or dword [0x040033cd], eax	     16283	i386-dis.c	FUNCTION_43
0x40033cd	    0x833d00000000	               cmp dword [0x040033d4], 2	     16284	i386-dis.c	FUNCTION_43	IF_1
0x40033d4	            0x752e	                           jne 0x4003404	     16284	i386-dis.c	FUNCTION_43	IF_1
0x40033d6	        0x40f6c602	                             test sil, 2	     16286	i386-dis.c	FUNCTION_43	IF_1	IF_2
0x40033da	            0x7514	                           jne 0x40033f0	     16286	i386-dis.c	FUNCTION_43	IF_1	IF_2
0x40033dc	          0x4863ff	                         movsxd rdi, edi	     16287	i386-dis.c	FUNCTION_43	IF_1	IF_2
0x40033df	    0x488b05000000	            mov rax, qword [0x040033e6] 	     16287	i386-dis.c	FUNCTION_43	IF_1	IF_2
0x40033e6	    0x488bbcf8a0fd	    mov rdi, qword [rax + rdi*8 - 0x260]	     16287	i386-dis.c	FUNCTION_43	IF_1	IF_2
0x40033ee	            0xeb40	                           jmp 0x4003430	     16287	i386-dis.c	FUNCTION_43	IF_1	IF_2
0x40033f0	          0x4863ff	                         movsxd rdi, edi	     16289	i386-dis.c	FUNCTION_43	IF_1	ELSE_1
0x40033f3	    0x488b05000000	            mov rax, qword [0x040033fa] 	     16289	i386-dis.c	FUNCTION_43	IF_1	ELSE_1
0x40033fa	    0x488bbcf8a0fd	    mov rdi, qword [rax + rdi*8 - 0x260]	     16289	i386-dis.c	FUNCTION_43	IF_1	ELSE_1
0x4003402	            0xeb2c	                           jmp 0x4003430	     16289	i386-dis.c	FUNCTION_43	IF_1	ELSE_1
0x4003404	        0x40f6c602	                             test sil, 2	     16291	i386-dis.c	FUNCTION_43	ELSE_2	IF_3
0x4003408	            0x7414	                            je 0x400341e	     16291	i386-dis.c	FUNCTION_43	ELSE_2	IF_3
0x400340a	          0x4863ff	                         movsxd rdi, edi	     16292	i386-dis.c	FUNCTION_43	ELSE_2	IF_3
0x400340d	    0x488b05000000	            mov rax, qword [0x04003414] 	     16292	i386-dis.c	FUNCTION_43	ELSE_2	IF_3
0x4003414	    0x488bbcf8a0fd	    mov rdi, qword [rax + rdi*8 - 0x260]	     16292	i386-dis.c	FUNCTION_43	ELSE_2	IF_3
0x400341c	            0xeb12	                           jmp 0x4003430	     16292	i386-dis.c	FUNCTION_43	ELSE_2	IF_3
0x400341e	          0x4863ff	                         movsxd rdi, edi	     16294	i386-dis.c	FUNCTION_43	ELSE_3
0x4003421	    0x488b05000000	            mov rax, qword [0x04003428] 	     16294	i386-dis.c	FUNCTION_43	ELSE_3
0x4003428	    0x488bbcf8a0fd	    mov rdi, qword [rax + rdi*8 - 0x260]	     16294	i386-dis.c	FUNCTION_43	ELSE_3
0x4003430	      0xe868f8ffff	                        call sym.oappend	     16295	i386-dis.c	FUNCTION_43	CALL_1
0x4003435	    0x488b05000000	            mov rax, qword [0x0400343c] 	     16296	i386-dis.c	FUNCTION_43
0x400343c	        0x488d5001	                      lea rdx, [rax + 1]	     16296	i386-dis.c	FUNCTION_43
0x4003440	    0x488915000000	            mov qword [0x04003447], rdx 	     16296	i386-dis.c	FUNCTION_43
0x4003447	     0xfb615000000	           movzx edx, byte [0x0400344e] 	     16296	i386-dis.c	FUNCTION_43
0x400344e	            0x8810	                      mov byte [rax], dl	     16296	i386-dis.c	FUNCTION_43
0x4003450	        0xc6400100	                   mov byte [rax + 1], 0	     16297	i386-dis.c	FUNCTION_43
0x4003454	        0x4883c408	                              add rsp, 8	     16298	i386-dis.c	FUNCTION_43
0x4003458	              0xc3	                                     ret	     16298	i386-dis.c	FUNCTION_43
OP_MMX	CALL,1:FOR,0:SWITCH,0:WHILE,0:ELSE,1:DO,0:IF,2:functions,0	18
0x40034dd	        0x4883ec08	                              sub rsp, 8	     16406	i386-dis.c	FUNCTION_50
0x40034e1	    0x8b1500000000	            mov edx, dword [0x040034e7] 	     16407	i386-dis.c	FUNCTION_50
0x40034e7	    0x8b0500000000	            mov eax, dword [0x040034ed] 	     16410	i386-dis.c	FUNCTION_50
0x40034ed	      0x2500020000	                          and eax, 0x200	     16410	i386-dis.c	FUNCTION_50
0x40034f2	     0x90500000000	              or dword [0x040034f8], eax	     16410	i386-dis.c	FUNCTION_50
0x40034f8	    0x488b0d000000	            mov rcx, qword [0x040034ff] 	     16419	i386-dis.c	FUNCTION_50	ELSE_1
0x40034ff	            0x85c0	                           test eax, eax	     16411	i386-dis.c	FUNCTION_50	IF_1
0x4003501	            0x741a	                            je 0x400351d	     16411	i386-dis.c	FUNCTION_50	IF_1
0x4003503	    0x488b0d000000	            mov rcx, qword [0x0400350a] 	     16413	i386-dis.c	FUNCTION_50	IF_1
0x400350a	    0xf60500000000	               test byte [0x04003511], 4	     16414	i386-dis.c	FUNCTION_50	IF_1
0x4003511	            0x740a	                            je 0x400351d	     16414	i386-dis.c	FUNCTION_50	IF_1
0x4003513	    0x830d00000000	            or dword [0x0400351a], 0x44 	     16414	i386-dis.c	FUNCTION_50	IF_1
0x400351a	          0x83c208	                              add edx, 8	     16416	i386-dis.c	FUNCTION_50	IF_1	IF_2
0x400351d	          0x4863d2	                         movsxd rdx, edx	     16420	i386-dis.c	FUNCTION_50	CALL_1
0x4003520	        0x488b3cd1	            mov rdi, qword [rcx + rdx*8]	     16420	i386-dis.c	FUNCTION_50	CALL_1
0x4003524	      0xe874f7ffff	                        call sym.oappend	     16420	i386-dis.c	FUNCTION_50	CALL_1
0x4003529	        0x4883c408	                              add rsp, 8	     16421	i386-dis.c	FUNCTION_50
0x400352d	              0xc3	                                     ret	     16421	i386-dis.c	FUNCTION_50
print_insn_i386_intel	CALL,1:FOR,0:SWITCH,0:WHILE,0:ELSE,0:DO,0:IF,0:functions,0	5
0x4007e11	        0x4883ec08	                              sub rsp, 8	     12683	i386-dis.c	FUNCTION_5
0x4007e15	    0xc60500000000	                mov byte [0x04007e1c], 1	     12684	i386-dis.c	FUNCTION_5
0x4007e1c	      0xe853ecffff	                     call sym.print_insn	     12686	i386-dis.c	FUNCTION_5	CALL_1
0x4007e21	        0x4883c408	                              add rsp, 8	     12687	i386-dis.c	FUNCTION_5
0x4007e25	              0xc3	                                     ret	     12687	i386-dis.c	FUNCTION_5
OP_DIR	CALL,5:FOR,0:SWITCH,0:WHILE,0:ELSE,2:DO,0:IF,2:functions,0	36
0x400628d	              0x53	                                push rbx	     16200	i386-dis.c	FUNCTION_40
0x400628e	        0x40f6c601	                             test sil, 1	     16203	i386-dis.c	FUNCTION_40	IF_1
0x4006292	            0x7411	                            je 0x40062a5	     16203	i386-dis.c	FUNCTION_40	IF_1
0x4006294	      0xe8c8bdffff	                          call sym.get32	     16205	i386-dis.c	FUNCTION_40	IF_1	CALL_1
0x4006299	            0x89c3	                            mov ebx, eax	     16205	i386-dis.c	FUNCTION_40	IF_1	CALL_1
0x400629b	      0xe8f0bcffff	                          call sym.get16	     16206	i386-dis.c	FUNCTION_40	IF_1	CALL_2
0x40062a0	          0x4189c0	                            mov r8d, eax	     16206	i386-dis.c	FUNCTION_40	IF_1	CALL_2
0x40062a3	            0xeb0f	                           jmp 0x40062b4	     16206	i386-dis.c	FUNCTION_40	IF_1	CALL_2
0x40062a5	      0xe8e6bcffff	                          call sym.get16	     16210	i386-dis.c	FUNCTION_40	ELSE_1	CALL_3
0x40062aa	            0x89c3	                            mov ebx, eax	     16210	i386-dis.c	FUNCTION_40	ELSE_1	CALL_3
0x40062ac	      0xe8dfbcffff	                          call sym.get16	     16211	i386-dis.c	FUNCTION_40	ELSE_1	CALL_4
0x40062b1	          0x4189c0	                            mov r8d, eax	     16211	i386-dis.c	FUNCTION_40	ELSE_1	CALL_4
0x40062b4	    0x8b1500000000	            mov edx, dword [0x040062ba] 	     16213	i386-dis.c	FUNCTION_40
0x40062ba	    0x81e200020000	                          and edx, 0x200	     16213	i386-dis.c	FUNCTION_40
0x40062c0	     0x91500000000	              or dword [0x040062c6], edx	     16213	i386-dis.c	FUNCTION_40
0x40062c6	    0x803d00000000	                cmp byte [0x040062cd], 0	     16214	i386-dis.c	FUNCTION_40	IF_2
0x40062cd	            0x7423	                            je 0x40062f2	     16214	i386-dis.c	FUNCTION_40	IF_2
0x40062cf	          0x4189d9	                            mov r9d, ebx	        33	stdio2.h	FUNCTION_101	CALL_1
0x40062d2	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_101	CALL_1
0x40062d7	      0xba64000000	                           mov edx, 0x64	        33	stdio2.h	FUNCTION_101	CALL_1
0x40062dc	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_101	CALL_1
0x40062e1	      0xbf00000000	                              mov edi, 0	        33	stdio2.h	FUNCTION_101	CALL_1
0x40062e6	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_101	CALL_1
0x40062eb	      0xe800000000	                          call 0x40062f0	        33	stdio2.h	FUNCTION_101	CALL_1
0x40062f0	            0xeb21	                           jmp 0x4006313	        33	stdio2.h	FUNCTION_101	CALL_1
0x40062f2	          0x4189d9	                            mov r9d, ebx	        33	stdio2.h	FUNCTION_101	CALL_1
0x40062f5	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_101	CALL_1
0x40062fa	      0xba64000000	                           mov edx, 0x64	        33	stdio2.h	FUNCTION_101	CALL_1
0x40062ff	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_101	CALL_1
0x4006304	      0xbf00000000	                              mov edi, 0	        33	stdio2.h	FUNCTION_101	CALL_1
0x4006309	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_101	CALL_1
0x400630e	      0xe800000000	                          call 0x4006313	        33	stdio2.h	FUNCTION_101	CALL_1
0x4006313	      0xbf00000000	                              mov edi, 0	     16218	i386-dis.c	FUNCTION_40	CALL_5
0x4006318	      0xe880c9ffff	                        call sym.oappend	     16218	i386-dis.c	FUNCTION_40	CALL_5
0x400631d	              0x5b	                                 pop rbx	     16219	i386-dis.c	FUNCTION_40
0x400631e	              0xc3	                                     ret	     16219	i386-dis.c	FUNCTION_40
OP_Monitor	CALL,3:FOR,0:SWITCH,0:WHILE,0:ELSE,1:DO,0:IF,2:functions,0	49
0x4001db6	              0x53	                                push rbx	     16884	i386-dis.c	FUNCTION_66
0x4001db7	    0x803d00000000	                cmp byte [0x04001dbe], 0	     16886	i386-dis.c	FUNCTION_66	IF_1
0x4001dbe	     0xf85b3000000	                           jne 0x4001e77	     16886	i386-dis.c	FUNCTION_66	IF_1
0x4001dc4	    0x8b1500000000	            mov edx, dword [0x04001dca] 	     16889	i386-dis.c	FUNCTION_66	IF_1
0x4001dca	          0x83fa02	                              cmp edx, 2	     16890	i386-dis.c	FUNCTION_66	IF_1
0x4001dcd	            0x7518	                           jne 0x4001de7	     16890	i386-dis.c	FUNCTION_66	IF_1
0x4001dcf	    0x488b05000000	            mov rax, qword [0x04001dd6] 	     16890	i386-dis.c	FUNCTION_66	IF_1
0x4001dd6	          0x4889c3	                            mov rbx, rax	     16890	i386-dis.c	FUNCTION_66	IF_1
0x4001dd9	    0xf60500000000	               test byte [0x04001de0], 4	     16892	i386-dis.c	FUNCTION_66	IF_1	IF_2
0x4001de0	            0x7453	                            je 0x4001e35	     16892	i386-dis.c	FUNCTION_66	IF_1	IF_2
0x4001de2	      0xe9a8000000	                           jmp 0x4001e8f	     16892	i386-dis.c	FUNCTION_66	IF_1	IF_2
0x4001de7	    0x488b1d000000	            mov rbx, qword [0x04001dee] 	     16890	i386-dis.c	FUNCTION_66	IF_1
0x4001dee	    0xf60500000000	               test byte [0x04001df5], 4	     16892	i386-dis.c	FUNCTION_66	IF_1	IF_2
0x4001df5	            0x750f	                           jne 0x4001e06	     16892	i386-dis.c	FUNCTION_66	IF_1	IF_2
0x4001df7	            0x85d2	                           test edx, edx	     16894	i386-dis.c	FUNCTION_66	IF_1	IF_2
0x4001df9	          0x4889d8	                            mov rax, rbx	     16894	i386-dis.c	FUNCTION_66	IF_1	IF_2
0x4001dfc	    0x480f44050000	           cmove rax, qword [0x04001e04]	     16894	i386-dis.c	FUNCTION_66	IF_1	IF_2
0x4001e04	            0xeb2f	                           jmp 0x4001e35	     16894	i386-dis.c	FUNCTION_66	IF_1	IF_2
0x4001e06	    0x486305000000	         movsxd rax, dword [0x04001e0d] 	     16898	i386-dis.c	FUNCTION_66	IF_1	ELSE_1
0x4001e0d	    0xc70485000000	                    mov dword [rax*4], 0	     16898	i386-dis.c	FUNCTION_66	IF_1	ELSE_1
0x4001e18	    0x488b05000000	            mov rax, qword [0x04001e1f] 	     16900	i386-dis.c	FUNCTION_66	IF_1	ELSE_1
0x4001e1f	          0x83fa01	                              cmp edx, 1	     16900	i386-dis.c	FUNCTION_66	IF_1	ELSE_1
0x4001e22	            0x7407	                            je 0x4001e2b	     16900	i386-dis.c	FUNCTION_66	IF_1	ELSE_1
0x4001e24	    0x488b05000000	            mov rax, qword [0x04001e2b] 	     16900	i386-dis.c	FUNCTION_66	IF_1	ELSE_1
0x4001e2b	    0x810d00000000	            or dword [0x04001e35], 0x400	     16901	i386-dis.c	FUNCTION_66	IF_1	ELSE_1
0x4001e35	      0xbaf4010000	                          mov edx, 0x1f4	       110	string3.h	FUNCTION_124	CALL_3
0x4001e3a	          0x488b30	                    mov rsi, qword [rax]	       110	string3.h	FUNCTION_124	CALL_3
0x4001e3d	      0xbf00000000	                              mov edi, 0	       110	string3.h	FUNCTION_124	CALL_3
0x4001e42	      0xe800000000	                          call 0x4001e47	       110	string3.h	FUNCTION_124	CALL_3
0x4001e47	        0x488b7308	                mov rsi, qword [rbx + 8]	       110	string3.h	FUNCTION_124	CALL_3
0x4001e4b	      0xba90010000	                          mov edx, 0x190	       110	string3.h	FUNCTION_124	CALL_3
0x4001e50	      0xbf00000000	                              mov edi, 0	       110	string3.h	FUNCTION_124	CALL_3
0x4001e55	      0xe800000000	                          call 0x4001e5a	       110	string3.h	FUNCTION_124	CALL_3
0x4001e5a	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	       110	string3.h	FUNCTION_124	CALL_3
0x4001e5e	      0xba2c010000	                          mov edx, 0x12c	       110	string3.h	FUNCTION_124	CALL_3
0x4001e63	      0xbf00000000	                              mov edi, 0	       110	string3.h	FUNCTION_124	CALL_3
0x4001e68	      0xe800000000	                          call 0x4001e6d	       110	string3.h	FUNCTION_124	CALL_3
0x4001e6d	    0xc70500000000	               mov dword [0x04001e77], 1	     16906	i386-dis.c	FUNCTION_66	IF_1
0x4001e77	    0x803d00000000	                cmp byte [0x04001e7e], 0	     16909	i386-dis.c	FUNCTION_66
0x4001e7e	            0x7505	                           jne 0x4001e85	     16909	i386-dis.c	FUNCTION_66
0x4001e80	      0xe800000000	                          call 0x4001e85	     16909	i386-dis.c	FUNCTION_66
0x4001e85	    0x488305000000	               add qword [0x04001e8d], 1	     16910	i386-dis.c	FUNCTION_66
0x4001e8d	            0xeb1a	                           jmp 0x4001ea9	     16911	i386-dis.c	FUNCTION_66
0x4001e8f	    0x486315000000	         movsxd rdx, dword [0x04001e96] 	     16898	i386-dis.c	FUNCTION_66	IF_1	ELSE_1
0x4001e96	    0xc70495000000	                    mov dword [rdx*4], 0	     16898	i386-dis.c	FUNCTION_66	IF_1	ELSE_1
0x4001ea1	          0x4889c3	                            mov rbx, rax	     16890	i386-dis.c	FUNCTION_66	IF_1
0x4001ea4	      0xe97bffffff	                           jmp 0x4001e24	     16890	i386-dis.c	FUNCTION_66	IF_1
0x4001ea9	              0x5b	                                 pop rbx	     16911	i386-dis.c	FUNCTION_66
0x4001eaa	              0xc3	                                     ret	     16911	i386-dis.c	FUNCTION_66
REP_Fixup	CALL,4:FOR,0:SWITCH,1:WHILE,0:ELSE,0:DO,0:IF,1:functions,0	21
0x400470d	        0x4883ec08	                              sub rsp, 8	     16923	i386-dis.c	FUNCTION_68
0x4004711	    0xf60500000000	               test byte [0x04004718], 1	     16926	i386-dis.c	FUNCTION_68	IF_1
0x4004718	            0x7412	                            je 0x400472c	     16926	i386-dis.c	FUNCTION_68	IF_1
0x400471a	    0x486305000000	         movsxd rax, dword [0x04004721] 	     16927	i386-dis.c	FUNCTION_68	IF_1
0x4004721	    0xc70485000000	                mov dword [rax*4], 0x1f3	     16927	i386-dis.c	FUNCTION_68	IF_1
0x400472c	          0x8d47b4	                   lea eax, [rdi - 0x4c]	     16929	i386-dis.c	FUNCTION_68	SWITCH_1
0x400472f	          0x83f821	                           cmp eax, 0x21	     16929	i386-dis.c	FUNCTION_68	SWITCH_1
0x4004732	            0x7728	                            ja 0x400475c	     16929	i386-dis.c	FUNCTION_68	SWITCH_1
0x4004734	            0x89c0	                            mov eax, eax	     16929	i386-dis.c	FUNCTION_68	SWITCH_1
0x4004736	    0xff24c5000000	                       jmp qword [rax*8]	     16929	i386-dis.c	FUNCTION_68	SWITCH_1
0x400473d	      0xe858feffff	                       call sym.OP_IMREG	     16934	i386-dis.c	FUNCTION_68	SWITCH_1	CALL_1
0x4004742	            0xeb1d	                           jmp 0x4004761	     16935	i386-dis.c	FUNCTION_68	SWITCH_1
0x4004744	      0xbf53000000	                           mov edi, 0x53	     16937	i386-dis.c	FUNCTION_68	SWITCH_1	CALL_2
0x4004749	      0xe882f5ffff	                       call sym.OP_ESreg	     16937	i386-dis.c	FUNCTION_68	SWITCH_1	CALL_2
0x400474e	            0xeb11	                           jmp 0x4004761	     16938	i386-dis.c	FUNCTION_68	SWITCH_1
0x4004750	      0xbf52000000	                           mov edi, 0x52	     16940	i386-dis.c	FUNCTION_68	SWITCH_1	CALL_3
0x4004755	      0xe8f0f5ffff	                       call sym.OP_DSreg	     16940	i386-dis.c	FUNCTION_68	SWITCH_1	CALL_3
0x400475a	            0xeb05	                           jmp 0x4004761	     16941	i386-dis.c	FUNCTION_68	SWITCH_1
0x400475c	      0xe800000000	                          call 0x4004761	     16943	i386-dis.c	FUNCTION_68	SWITCH_1	CALL_4
0x4004761	        0x4883c408	                              add rsp, 8	     16946	i386-dis.c	FUNCTION_68
0x4004765	              0xc3	                                     ret	     16946	i386-dis.c	FUNCTION_68
OP_STi	CALL,1:FOR,0:SWITCH,0:WHILE,0:ELSE,0:DO,0:IF,0:functions,0	12
0x4002cd5	        0x4883ec08	                              sub rsp, 8	     13975	i386-dis.c	FUNCTION_16
0x4002cd9	    0x448b05000000	            mov r8d, dword [0x04002ce0] 	        33	stdio2.h	FUNCTION_101	CALL_1
0x4002ce0	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_101	CALL_1
0x4002ce5	      0xba64000000	                           mov edx, 0x64	        33	stdio2.h	FUNCTION_101	CALL_1
0x4002cea	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_101	CALL_1
0x4002cef	      0xbf00000000	                              mov edi, 0	        33	stdio2.h	FUNCTION_101	CALL_1
0x4002cf4	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_101	CALL_1
0x4002cf9	      0xe800000000	                          call 0x4002cfe	        33	stdio2.h	FUNCTION_101	CALL_1
0x4002cfe	      0xbf00000000	                              mov edi, 0	     13977	i386-dis.c	FUNCTION_16	CALL_1
0x4002d03	      0xe8b4ffffff	            call sym.oappend_maybe_intel	     13977	i386-dis.c	FUNCTION_16	CALL_1
0x4002d08	        0x4883c408	                              add rsp, 8	     13978	i386-dis.c	FUNCTION_16
0x4002d0c	              0xc3	                                     ret	     13978	i386-dis.c	FUNCTION_16
CMP_Fixup	CALL,3:FOR,0:SWITCH,0:WHILE,0:ELSE,1:DO,0:IF,1:functions,0	54
0x40032a9	              0x53	                                push rbx	     16819	i386-dis.c	FUNCTION_63
0x40032aa	        0x4883ec10	                           sub rsp, 0x10	     16819	i386-dis.c	FUNCTION_63
0x40032ae	    0x64488b042528	                mov rax, qword fs:[0x28]	     16819	i386-dis.c	FUNCTION_63
0x40032b7	      0x4889442408	                mov qword [rsp + 8], rax	     16819	i386-dis.c	FUNCTION_63
0x40032bc	            0x31c0	                            xor eax, eax	     16819	i386-dis.c	FUNCTION_63
0x40032be	    0x488b05000000	            mov rax, qword [0x040032c5] 	     16822	i386-dis.c	FUNCTION_63
0x40032c5	        0x488d7001	                      lea rsi, [rax + 1]	     16822	i386-dis.c	FUNCTION_63
0x40032c9	    0x488b3d000000	            mov rdi, qword [0x040032d0] 	     16822	i386-dis.c	FUNCTION_63
0x40032d0	        0x488b4768	            mov rax, qword [rdi + 0x68] 	     16822	i386-dis.c	FUNCTION_63
0x40032d4	          0x483b30	                    cmp rsi, qword [rax]	     16822	i386-dis.c	FUNCTION_63
0x40032d7	            0x7605	                           jbe 0x40032de	     16822	i386-dis.c	FUNCTION_63
0x40032d9	      0xe8cdebffff	                     call sym.fetch_data	     16822	i386-dis.c	FUNCTION_63
0x40032de	    0x488b05000000	            mov rax, qword [0x040032e5] 	     16823	i386-dis.c	FUNCTION_63
0x40032e5	        0x488d5001	                      lea rdx, [rax + 1]	     16823	i386-dis.c	FUNCTION_63
0x40032e9	    0x488915000000	            mov qword [0x040032f0], rdx 	     16823	i386-dis.c	FUNCTION_63
0x40032f0	           0xfb610	                   movzx edx, byte [rax]	     16823	i386-dis.c	FUNCTION_63
0x40032f3	           0xfb6c2	                           movzx eax, dl	     16823	i386-dis.c	FUNCTION_63
0x40032f6	          0x83f807	                              cmp eax, 7	     16824	i386-dis.c	FUNCTION_63	IF_1	CALL_1
0x40032f9	            0x775d	                            ja 0x4003358	     16824	i386-dis.c	FUNCTION_63	IF_1	CALL_1
0x40032fb	    0x488b3d000000	            mov rdi, qword [0x04003302] 	     16827	i386-dis.c	FUNCTION_63	IF_1
0x4003302	         0xfb657fe	               movzx edx, byte [rdi - 2]	     16828	i386-dis.c	FUNCTION_63	IF_1
0x4003306	          0x881424	                      mov byte [rsp], dl	     16828	i386-dis.c	FUNCTION_63	IF_1
0x4003309	         0xfb657ff	               movzx edx, byte [rdi - 1]	     16829	i386-dis.c	FUNCTION_63	IF_1
0x400330d	        0x88542401	                  mov byte [rsp + 1], dl	     16829	i386-dis.c	FUNCTION_63	IF_1
0x4003311	      0xc644240200	                   mov byte [rsp + 2], 0	     16830	i386-dis.c	FUNCTION_63	IF_1
0x4003316	            0x89c0	                            mov eax, eax	     16831	i386-dis.c	FUNCTION_63	IF_1
0x4003318	        0x48c1e004	                              shl rax, 4	     16831	i386-dis.c	FUNCTION_63	IF_1
0x400331c	    0x488d98000000	                          lea rbx, [rax]	     16831	i386-dis.c	FUNCTION_63	IF_1
0x4003323	        0x4883ef02	                              sub rdi, 2	        33	stdio2.h	FUNCTION_101	CALL_1
0x4003327	          0x4989e1	                             mov r9, rsp	        33	stdio2.h	FUNCTION_101	CALL_1
0x400332a	    0x4c8b80000000	                     mov r8, qword [rax]	        33	stdio2.h	FUNCTION_101	CALL_1
0x4003331	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_101	CALL_1
0x4003336	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_101	CALL_1
0x400333d	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_101	CALL_1
0x4003342	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_101	CALL_1
0x4003347	      0xe800000000	                          call 0x400334c	        33	stdio2.h	FUNCTION_101	CALL_1
0x400334c	          0x8b4308	                mov eax, dword [rbx + 8]	     16832	i386-dis.c	FUNCTION_63	IF_1
0x400334f	    0x480105000000	            add qword [0x04003356], rax 	     16832	i386-dis.c	FUNCTION_63	IF_1
0x4003356	            0xeb2a	                           jmp 0x4003382	     16832	i386-dis.c	FUNCTION_63	IF_1
0x4003358	    0xc60500000000	            mov byte [0x0400335f], 0x24 	     16837	i386-dis.c	FUNCTION_63	ELSE_1
0x400335f	           0xfb6d2	                           movzx edx, dl	     16838	i386-dis.c	FUNCTION_63	ELSE_1	CALL_2
0x4003362	      0xbe01000000	                              mov esi, 1	     16838	i386-dis.c	FUNCTION_63	ELSE_1	CALL_2
0x4003367	      0xbf00000000	                              mov edi, 0	     16838	i386-dis.c	FUNCTION_63	ELSE_1	CALL_2
0x400336c	      0xe884e6ffff	            call sym.print_operand_value	     16838	i386-dis.c	FUNCTION_63	ELSE_1	CALL_2
0x4003371	      0xbf00000000	                              mov edi, 0	     16839	i386-dis.c	FUNCTION_63	ELSE_1	CALL_3
0x4003376	      0xe841f9ffff	            call sym.oappend_maybe_intel	     16839	i386-dis.c	FUNCTION_63	ELSE_1	CALL_3
0x400337b	    0xc60500000000	                mov byte [0x04003382], 0	     16840	i386-dis.c	FUNCTION_63	ELSE_1
0x4003382	      0x488b442408	                mov rax, qword [rsp + 8]	     16842	i386-dis.c	FUNCTION_63
0x4003387	    0x644833042528	                xor rax, qword fs:[0x28]	     16842	i386-dis.c	FUNCTION_63
0x4003390	            0x7405	                            je 0x4003397	     16842	i386-dis.c	FUNCTION_63
0x4003392	      0xe800000000	                          call 0x4003397	     16842	i386-dis.c	FUNCTION_63
0x4003397	        0x4883c410	                           add rsp, 0x10	     16842	i386-dis.c	FUNCTION_63
0x400339b	              0x5b	                                 pop rbx	     16842	i386-dis.c	FUNCTION_63
0x400339c	              0xc3	                                     ret	     16842	i386-dis.c	FUNCTION_63
OP_MXC	CALL,1:FOR,0:SWITCH,0:WHILE,0:ELSE,0:DO,0:IF,0:functions,0	10
0x400352e	        0x4883ec08	                              sub rsp, 8	     16554	i386-dis.c	FUNCTION_54
0x4003532	    0x8b0500000000	            mov eax, dword [0x04003538] 	     16555	i386-dis.c	FUNCTION_54
0x4003538	      0x2500020000	                          and eax, 0x200	     16555	i386-dis.c	FUNCTION_54
0x400353d	     0x90500000000	              or dword [0x04003543], eax	     16555	i386-dis.c	FUNCTION_54
0x4003543	    0x486315000000	         movsxd rdx, dword [0x0400354a] 	     16556	i386-dis.c	FUNCTION_54	CALL_1
0x400354a	    0x488b05000000	            mov rax, qword [0x04003551] 	     16556	i386-dis.c	FUNCTION_54	CALL_1
0x4003551	        0x488b3cd0	            mov rdi, qword [rax + rdx*8]	     16556	i386-dis.c	FUNCTION_54	CALL_1
0x4003555	      0xe843f7ffff	                        call sym.oappend	     16556	i386-dis.c	FUNCTION_54	CALL_1
0x400355a	        0x4883c408	                              add rsp, 8	     16557	i386-dis.c	FUNCTION_54
0x400355e	              0xc3	                                     ret	     16557	i386-dis.c	FUNCTION_54
OP_XMM	CALL,3:FOR,0:SWITCH,2:WHILE,0:ELSE,4:DO,0:IF,7:functions,0	61
0x4003e2b	        0x4883ec08	                              sub rsp, 8	     16425	i386-dis.c	FUNCTION_51
0x4003e2f	    0x8b0500000000	            mov eax, dword [0x04003e35] 	     16426	i386-dis.c	FUNCTION_51
0x4003e35	    0xf60500000000	               test byte [0x04003e3c], 4	     16429	i386-dis.c	FUNCTION_51
0x4003e3c	            0x740a	                            je 0x4003e48	     16429	i386-dis.c	FUNCTION_51
0x4003e3e	    0x830d00000000	            or dword [0x04003e45], 0x44 	     16429	i386-dis.c	FUNCTION_51
0x4003e45	          0x83c008	                              add eax, 8	     16431	i386-dis.c	FUNCTION_51	IF_1
0x4003e48	    0x833d00000000	               cmp dword [0x04003e4f], 0	     16432	i386-dis.c	FUNCTION_51	IF_2
0x4003e4f	            0x740d	                            je 0x4003e5e	     16432	i386-dis.c	FUNCTION_51	IF_2
0x4003e51	          0x8d5010	                   lea edx, [rax + 0x10]	     16435	i386-dis.c	FUNCTION_51	IF_2	IF_3
0x4003e54	    0x833d00000000	               cmp dword [0x04003e5b], 0	     16435	i386-dis.c	FUNCTION_51	IF_2	IF_3
0x4003e5b	           0xf44c2	                          cmove eax, edx	     16435	i386-dis.c	FUNCTION_51	IF_2	IF_3
0x4003e5e	    0x803d00000000	                cmp byte [0x04003e65], 0	     16438	i386-dis.c	FUNCTION_51	IF_4
0x4003e65	            0x746b	                            je 0x4003ed2	     16438	i386-dis.c	FUNCTION_51	IF_4
0x4003e67	          0x83ff39	                           cmp edi, 0x39	     16440	i386-dis.c	FUNCTION_51	IF_4
0x4003e6a	            0x7710	                            ja 0x4003e7c	     16440	i386-dis.c	FUNCTION_51	IF_4
0x4003e6c	    0x48ba00000e08	           movabs rdx, 0x2000000080e0000	     16440	i386-dis.c	FUNCTION_51	IF_4
0x4003e76	        0x480fa3fa	                             bt rdx, rdi	     16440	i386-dis.c	FUNCTION_51	IF_4
0x4003e7a	            0x7256	                            jb 0x4003ed2	     16440	i386-dis.c	FUNCTION_51	IF_4
0x4003e7c	    0x8b1500000000	            mov edx, dword [0x04003e82] 	     16445	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1
0x4003e82	    0x81fa00010000	                          cmp edx, 0x100	     16445	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1
0x4003e88	            0x7419	                            je 0x4003ea3	     16445	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1
0x4003e8a	    0x81fa00020000	                          cmp edx, 0x200	     16445	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1
0x4003e90	            0x7432	                            je 0x4003ec4	     16445	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1
0x4003e92	    0x81fa80000000	                           cmp edx, 0x80	     16445	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1
0x4003e98	            0x7533	                           jne 0x4003ecd	     16445	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1
0x4003e9a	    0x488b15000000	            mov rdx, qword [0x04003ea1] 	     16448	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1
0x4003ea1	            0xeb7e	                           jmp 0x4003f21	     16449	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1
0x4003ea3	    0x833d00000000	               cmp dword [0x04003eaa], 0	     16451	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1	IF_5
0x4003eaa	            0x750f	                           jne 0x4003ebb	     16451	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1	IF_5
0x4003eac	          0x83ef37	                           sub edi, 0x37	     16452	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1	IF_5
0x4003eaf	    0x488b15000000	            mov rdx, qword [0x04003eb6] 	     16456	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1	ELSE_1
0x4003eb6	          0x83ff01	                              cmp edi, 1	     16452	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1	IF_5
0x4003eb9	            0x7666	                           jbe 0x4003f21	     16452	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1	IF_5
0x4003ebb	    0x488b15000000	            mov rdx, qword [0x04003ec2] 	     16454	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1	IF_5
0x4003ec2	            0xeb5d	                           jmp 0x4003f21	     16454	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1	IF_5
0x4003ec4	    0x488b15000000	            mov rdx, qword [0x04003ecb] 	     16459	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1
0x4003ecb	            0xeb54	                           jmp 0x4003f21	     16460	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1
0x4003ecd	      0xe800000000	                          call 0x4003ed2	     16462	i386-dis.c	FUNCTION_51	IF_4	SWITCH_1	CALL_1
0x4003ed2	          0x8d57ee	                   lea edx, [rdi - 0x12]	     16465	i386-dis.c	FUNCTION_51	ELSE_2	IF_6
0x4003ed5	          0x83fa01	                              cmp edx, 1	     16465	i386-dis.c	FUNCTION_51	ELSE_2	IF_6
0x4003ed8	            0x7735	                            ja 0x4003f0f	     16465	i386-dis.c	FUNCTION_51	ELSE_2	IF_6
0x4003eda	    0x8b1500000000	            mov edx, dword [0x04003ee0] 	     16468	i386-dis.c	FUNCTION_51	ELSE_2	IF_6	SWITCH_2
0x4003ee0	    0x81fa00010000	                          cmp edx, 0x100	     16468	i386-dis.c	FUNCTION_51	ELSE_2	IF_6	SWITCH_2
0x4003ee6	            0x7410	                            je 0x4003ef8	     16468	i386-dis.c	FUNCTION_51	ELSE_2	IF_6	SWITCH_2
0x4003ee8	    0x81fa00020000	                          cmp edx, 0x200	     16468	i386-dis.c	FUNCTION_51	ELSE_2	IF_6	SWITCH_2
0x4003eee	            0x7411	                            je 0x4003f01	     16468	i386-dis.c	FUNCTION_51	ELSE_2	IF_6	SWITCH_2
0x4003ef0	    0x81fa80000000	                           cmp edx, 0x80	     16468	i386-dis.c	FUNCTION_51	ELSE_2	IF_6	SWITCH_2
0x4003ef6	            0x7512	                           jne 0x4003f0a	     16468	i386-dis.c	FUNCTION_51	ELSE_2	IF_6	SWITCH_2
0x4003ef8	    0x488b15000000	            mov rdx, qword [0x04003eff] 	     16472	i386-dis.c	FUNCTION_51	ELSE_2	IF_6	SWITCH_2
0x4003eff	            0xeb20	                           jmp 0x4003f21	     16473	i386-dis.c	FUNCTION_51	ELSE_2	IF_6	SWITCH_2
0x4003f01	    0x488b15000000	            mov rdx, qword [0x04003f08] 	     16475	i386-dis.c	FUNCTION_51	ELSE_2	IF_6	SWITCH_2
0x4003f08	            0xeb17	                           jmp 0x4003f21	     16476	i386-dis.c	FUNCTION_51	ELSE_2	IF_6	SWITCH_2
0x4003f0a	      0xe800000000	                          call 0x4003f0f	     16478	i386-dis.c	FUNCTION_51	ELSE_2	IF_6	SWITCH_2	CALL_2
0x4003f0f	          0x83ff1b	                           cmp edi, 0x1b	     16482	i386-dis.c	FUNCTION_51	ELSE_3	IF_7
0x4003f12	    0x488b15000000	            mov rdx, qword [0x04003f19] 	     16482	i386-dis.c	FUNCTION_51	ELSE_3	IF_7
0x4003f19	    0x480f45150000	          cmovne rdx, qword [0x04003f21]	     16482	i386-dis.c	FUNCTION_51	ELSE_3	IF_7
0x4003f21	            0x4898	                                    cdqe	     16485	i386-dis.c	FUNCTION_51	CALL_3
0x4003f23	        0x488b3cc2	            mov rdi, qword [rdx + rax*8]	     16485	i386-dis.c	FUNCTION_51	CALL_3
0x4003f27	      0xe871edffff	                        call sym.oappend	     16485	i386-dis.c	FUNCTION_51	CALL_3
0x4003f2c	        0x4883c408	                              add rsp, 8	     16486	i386-dis.c	FUNCTION_51
0x4003f30	              0xc3	                                     ret	     16486	i386-dis.c	FUNCTION_51
NOTRACK_Fixup	CALL,0:FOR,0:SWITCH,0:WHILE,0:ELSE,0:DO,0:IF,1:functions,0	10
0x4000252	    0x833d00000000	           cmp dword [0x04000259], 0x20 	     16965	i386-dis.c	FUNCTION_70	IF_1
0x4000259	            0x752e	                           jne 0x4000289	     16965	i386-dis.c	FUNCTION_70	IF_1
0x400025b	    0x833d00000000	               cmp dword [0x04000262], 2	     16966	i386-dis.c	FUNCTION_70	IF_1
0x4000262	            0x7509	                           jne 0x400026d	     16966	i386-dis.c	FUNCTION_70	IF_1
0x4000264	    0x833d00000000	               cmp dword [0x0400026b], 0	     16966	i386-dis.c	FUNCTION_70	IF_1
0x400026b	            0x791c	                           jns 0x4000289	     16966	i386-dis.c	FUNCTION_70	IF_1
0x400026d	    0xc70500000000	               mov dword [0x04000277], 0	     16970	i386-dis.c	FUNCTION_70	IF_1
0x4000277	    0x486305000000	         movsxd rax, dword [0x0400027e] 	     16971	i386-dis.c	FUNCTION_70	IF_1
0x400027e	    0xc70485000000	                mov dword [rax*4], 0x13e	     16971	i386-dis.c	FUNCTION_70	IF_1
0x4000289	            0xf3c3	                                     ret	     16971	i386-dis.c	FUNCTION_70	IF_1
OP_T	CALL,1:FOR,0:SWITCH,0:WHILE,0:ELSE,0:DO,0:IF,0:functions,0	12
0x4002e39	        0x4883ec08	                              sub rsp, 8	     16390	i386-dis.c	FUNCTION_48
0x4002e3d	    0x448b05000000	            mov r8d, dword [0x04002e44] 	        33	stdio2.h	FUNCTION_101	CALL_1
0x4002e44	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_101	CALL_1
0x4002e49	      0xba64000000	                           mov edx, 0x64	        33	stdio2.h	FUNCTION_101	CALL_1
0x4002e4e	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_101	CALL_1
0x4002e53	      0xbf00000000	                              mov edi, 0	        33	stdio2.h	FUNCTION_101	CALL_1
0x4002e58	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_101	CALL_1
0x4002e5d	      0xe800000000	                          call 0x4002e62	        33	stdio2.h	FUNCTION_101	CALL_1
0x4002e62	      0xbf00000000	                              mov edi, 0	     16392	i386-dis.c	FUNCTION_48	CALL_1
0x4002e67	      0xe850feffff	            call sym.oappend_maybe_intel	     16392	i386-dis.c	FUNCTION_48	CALL_1
0x4002e6c	        0x4883c408	                              add rsp, 8	     16393	i386-dis.c	FUNCTION_48
0x4002e70	              0xc3	                                     ret	     16393	i386-dis.c	FUNCTION_48
VPCMP_Fixup	CALL,4:FOR,0:SWITCH,0:WHILE,0:ELSE,2:DO,0:IF,3:functions,0	66
0x4002e71	              0x53	                                push rbx	     17675	i386-dis.c	FUNCTION_93
0x4002e72	        0x4883ec10	                           sub rsp, 0x10	     17675	i386-dis.c	FUNCTION_93
0x4002e76	    0x64488b042528	                mov rax, qword fs:[0x28]	     17675	i386-dis.c	FUNCTION_93
0x4002e7f	      0x4889442408	                mov qword [rsp + 8], rax	     17675	i386-dis.c	FUNCTION_93
0x4002e84	            0x31c0	                            xor eax, eax	     17675	i386-dis.c	FUNCTION_93
0x4002e86	    0x833d00000000	               cmp dword [0x04002e8d], 0	     17678	i386-dis.c	FUNCTION_93	IF_1
0x4002e8d	            0x7505	                           jne 0x4002e94	     17678	i386-dis.c	FUNCTION_93	IF_1
0x4002e8f	      0xe800000000	                          call 0x4002e94	     17679	i386-dis.c	FUNCTION_93	CALL_1
0x4002e94	    0x488b05000000	            mov rax, qword [0x04002e9b] 	     17681	i386-dis.c	FUNCTION_93
0x4002e9b	        0x488d7001	                      lea rsi, [rax + 1]	     17681	i386-dis.c	FUNCTION_93
0x4002e9f	    0x488b3d000000	            mov rdi, qword [0x04002ea6] 	     17681	i386-dis.c	FUNCTION_93
0x4002ea6	        0x488b4768	            mov rax, qword [rdi + 0x68] 	     17681	i386-dis.c	FUNCTION_93
0x4002eaa	          0x483b30	                    cmp rsi, qword [rax]	     17681	i386-dis.c	FUNCTION_93
0x4002ead	            0x7605	                           jbe 0x4002eb4	     17681	i386-dis.c	FUNCTION_93
0x4002eaf	      0xe8f7efffff	                     call sym.fetch_data	     17681	i386-dis.c	FUNCTION_93
0x4002eb4	    0x488b05000000	            mov rax, qword [0x04002ebb] 	     17682	i386-dis.c	FUNCTION_93
0x4002ebb	        0x488d5001	                      lea rdx, [rax + 1]	     17682	i386-dis.c	FUNCTION_93
0x4002ebf	    0x488915000000	            mov qword [0x04002ec6], rdx 	     17682	i386-dis.c	FUNCTION_93
0x4002ec6	           0xfb610	                   movzx edx, byte [rax]	     17682	i386-dis.c	FUNCTION_93
0x4002ec9	           0xfb6c2	                           movzx eax, dl	     17682	i386-dis.c	FUNCTION_93
0x4002ecc	          0x83f803	                              cmp eax, 3	     17687	i386-dis.c	FUNCTION_93	IF_2
0x4002ecf	            0x7479	                            je 0x4002f4a	     17687	i386-dis.c	FUNCTION_93	IF_2
0x4002ed1	          0x83f806	                              cmp eax, 6	     17687	i386-dis.c	FUNCTION_93	IF_2
0x4002ed4	            0x7774	                            ja 0x4002f4a	     17687	i386-dis.c	FUNCTION_93	IF_2
0x4002ed6	    0x488b15000000	            mov rdx, qword [0x04002edd] 	     17690	i386-dis.c	FUNCTION_93	IF_2
0x4002edd	         0xfb64afe	               movzx ecx, byte [rdx - 2]	     17693	i386-dis.c	FUNCTION_93	IF_2	IF_3
0x4002ee1	          0x80f970	                            cmp cl, 0x70	     17693	i386-dis.c	FUNCTION_93	IF_2	IF_3
0x4002ee4	            0x7512	                           jne 0x4002ef8	     17693	i386-dis.c	FUNCTION_93	IF_2	IF_3
0x4002ee6	        0x488d7aff	                      lea rdi, [rdx - 1]	     17695	i386-dis.c	FUNCTION_93	IF_2	IF_3
0x4002eea	         0xfb652ff	               movzx edx, byte [rdx - 1]	     17696	i386-dis.c	FUNCTION_93	IF_2	IF_3
0x4002eee	          0x881424	                      mov byte [rsp], dl	     17696	i386-dis.c	FUNCTION_93	IF_2	IF_3
0x4002ef1	      0xc644240100	                   mov byte [rsp + 1], 0	     17697	i386-dis.c	FUNCTION_93	IF_2	IF_3
0x4002ef6	            0xeb14	                           jmp 0x4002f0c	     17697	i386-dis.c	FUNCTION_93	IF_2	IF_3
0x4002ef8	        0x488d7afe	                      lea rdi, [rdx - 2]	     17690	i386-dis.c	FUNCTION_93	IF_2
0x4002efc	          0x880c24	                      mov byte [rsp], cl	     17701	i386-dis.c	FUNCTION_93	IF_2	ELSE_1
0x4002eff	         0xfb652ff	               movzx edx, byte [rdx - 1]	     17702	i386-dis.c	FUNCTION_93	IF_2	ELSE_1
0x4002f03	        0x88542401	                  mov byte [rsp + 1], dl	     17702	i386-dis.c	FUNCTION_93	IF_2	ELSE_1
0x4002f07	      0xc644240200	                   mov byte [rsp + 2], 0	     17703	i386-dis.c	FUNCTION_93	IF_2	ELSE_1
0x4002f0c	            0x89c0	                            mov eax, eax	     17706	i386-dis.c	FUNCTION_93	IF_2
0x4002f0e	        0x48c1e004	                              shl rax, 4	     17706	i386-dis.c	FUNCTION_93	IF_2
0x4002f12	    0x488d98000000	                          lea rbx, [rax]	     17706	i386-dis.c	FUNCTION_93	IF_2
0x4002f19	          0x4989e1	                             mov r9, rsp	        33	stdio2.h	FUNCTION_101	CALL_1
0x4002f1c	    0x4c8b80000000	                     mov r8, qword [rax]	        33	stdio2.h	FUNCTION_101	CALL_1
0x4002f23	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_101	CALL_1
0x4002f28	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_101	CALL_1
0x4002f2f	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_101	CALL_1
0x4002f34	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_101	CALL_1
0x4002f39	      0xe800000000	                          call 0x4002f3e	        33	stdio2.h	FUNCTION_101	CALL_1
0x4002f3e	          0x8b4308	                mov eax, dword [rbx + 8]	     17707	i386-dis.c	FUNCTION_93	IF_2
0x4002f41	    0x480105000000	            add qword [0x04002f48], rax 	     17707	i386-dis.c	FUNCTION_93	IF_2
0x4002f48	            0xeb2a	                           jmp 0x4002f74	     17688	i386-dis.c	FUNCTION_93	IF_2
0x4002f4a	    0xc60500000000	            mov byte [0x04002f51], 0x24 	     17712	i386-dis.c	FUNCTION_93	ELSE_2
0x4002f51	           0xfb6d2	                           movzx edx, dl	     17713	i386-dis.c	FUNCTION_93	ELSE_2	CALL_3
0x4002f54	      0xbe01000000	                              mov esi, 1	     17713	i386-dis.c	FUNCTION_93	ELSE_2	CALL_3
0x4002f59	      0xbf00000000	                              mov edi, 0	     17713	i386-dis.c	FUNCTION_93	ELSE_2	CALL_3
0x4002f5e	      0xe892eaffff	            call sym.print_operand_value	     17713	i386-dis.c	FUNCTION_93	ELSE_2	CALL_3
0x4002f63	      0xbf00000000	                              mov edi, 0	     17714	i386-dis.c	FUNCTION_93	ELSE_2	CALL_4
0x4002f68	      0xe84ffdffff	            call sym.oappend_maybe_intel	     17714	i386-dis.c	FUNCTION_93	ELSE_2	CALL_4
0x4002f6d	    0xc60500000000	                mov byte [0x04002f74], 0	     17715	i386-dis.c	FUNCTION_93	ELSE_2
0x4002f74	      0x488b442408	                mov rax, qword [rsp + 8]	     17717	i386-dis.c	FUNCTION_93
0x4002f79	    0x644833042528	                xor rax, qword fs:[0x28]	     17717	i386-dis.c	FUNCTION_93
0x4002f82	            0x7405	                            je 0x4002f89	     17717	i386-dis.c	FUNCTION_93
0x4002f84	      0xe800000000	                          call 0x4002f89	     17717	i386-dis.c	FUNCTION_93
0x4002f89	        0x4883c410	                           add rsp, 0x10	     17717	i386-dis.c	FUNCTION_93
0x4002f8d	              0x5b	                                 pop rbx	     17717	i386-dis.c	FUNCTION_93
0x4002f8e	              0xc3	                                     ret	     17717	i386-dis.c	FUNCTION_93
OP_Rounding	CALL,3:FOR,0:SWITCH,1:WHILE,0:ELSE,0:DO,0:IF,2:functions,0	24
0x4003dce	        0x4883ec08	                              sub rsp, 8	     17915	i386-dis.c	FUNCTION_100
0x4003dd2	    0x833d00000000	               cmp dword [0x04003dd9], 0	     17916	i386-dis.c	FUNCTION_100	IF_1
0x4003dd9	            0x7408	                            je 0x4003de3	     17916	i386-dis.c	FUNCTION_100	IF_1
0x4003ddb	          0x8d47be	                   lea eax, [rdi - 0x42]	     17917	i386-dis.c	FUNCTION_100	IF_1
0x4003dde	          0x83f801	                              cmp eax, 1	     17917	i386-dis.c	FUNCTION_100	IF_1
0x4003de1	            0x7605	                           jbe 0x4003de8	     17917	i386-dis.c	FUNCTION_100	IF_1
0x4003de3	      0xe800000000	                          call 0x4003de8	     17919	i386-dis.c	FUNCTION_100	CALL_1
0x4003de8	    0x833d00000000	               cmp dword [0x04003def], 3	     17920	i386-dis.c	FUNCTION_100	IF_2
0x4003def	            0x7535	                           jne 0x4003e26	     17920	i386-dis.c	FUNCTION_100	IF_2
0x4003df1	    0x833d00000000	               cmp dword [0x04003df8], 0	     17920	i386-dis.c	FUNCTION_100	IF_2
0x4003df8	            0x742c	                            je 0x4003e26	     17920	i386-dis.c	FUNCTION_100	IF_2
0x4003dfa	          0x83ff42	                           cmp edi, 0x42	     17921	i386-dis.c	FUNCTION_100	IF_2	SWITCH_1
0x4003dfd	            0x7407	                            je 0x4003e06	     17921	i386-dis.c	FUNCTION_100	IF_2	SWITCH_1
0x4003dff	          0x83ff43	                           cmp edi, 0x43	     17921	i386-dis.c	FUNCTION_100	IF_2	SWITCH_1
0x4003e02	            0x7418	                            je 0x4003e1c	     17921	i386-dis.c	FUNCTION_100	IF_2	SWITCH_1
0x4003e04	            0xeb20	                           jmp 0x4003e26	     17921	i386-dis.c	FUNCTION_100	IF_2	SWITCH_1
0x4003e06	    0x486305000000	         movsxd rax, dword [0x04003e0d] 	     17924	i386-dis.c	FUNCTION_100	IF_2	SWITCH_1	CALL_2
0x4003e0d	    0x488b3cc50000	                  mov rdi, qword [rax*8]	     17924	i386-dis.c	FUNCTION_100	IF_2	SWITCH_1	CALL_2
0x4003e15	      0xe883eeffff	                        call sym.oappend	     17924	i386-dis.c	FUNCTION_100	IF_2	SWITCH_1	CALL_2
0x4003e1a	            0xeb0a	                           jmp 0x4003e26	     17925	i386-dis.c	FUNCTION_100	IF_2	SWITCH_1
0x4003e1c	      0xbf00000000	                              mov edi, 0	     17927	i386-dis.c	FUNCTION_100	IF_2	SWITCH_1	CALL_3
0x4003e21	      0xe877eeffff	                        call sym.oappend	     17927	i386-dis.c	FUNCTION_100	IF_2	SWITCH_1	CALL_3
0x4003e26	        0x4883c408	                              add rsp, 8	     17932	i386-dis.c	FUNCTION_100
0x4003e2a	              0xc3	                                     ret	     17932	i386-dis.c	FUNCTION_100
OP_VEX	CALL,8:FOR,0:SWITCH,3:WHILE,0:ELSE,2:DO,0:IF,8:functions,0	77
0x4003fd8	        0x4883ec08	                              sub rsp, 8	     17185	i386-dis.c	FUNCTION_79
0x4003fdc	    0x803d00000000	                cmp byte [0x04003fe3], 0	     17189	i386-dis.c	FUNCTION_79	IF_1
0x4003fe3	            0x7505	                           jne 0x4003fea	     17189	i386-dis.c	FUNCTION_79	IF_1
0x4003fe5	      0xe800000000	                          call 0x4003fea	     17190	i386-dis.c	FUNCTION_79	CALL_1
0x4003fea	    0x803d00000000	                cmp byte [0x04003ff1], 0	     17192	i386-dis.c	FUNCTION_79	IF_2
0x4003ff1	     0xf8432010000	                            je 0x4004129	     17192	i386-dis.c	FUNCTION_79	IF_2
0x4003ff7	    0x8b0500000000	            mov eax, dword [0x04003ffd] 	     17195	i386-dis.c	FUNCTION_79
0x4003ffd	    0x833d00000000	               cmp dword [0x04004004], 2	     17196	i386-dis.c	FUNCTION_79	IF_3
0x4004004	            0x7405	                            je 0x400400b	     17196	i386-dis.c	FUNCTION_79	IF_3
0x4004006	          0x83e007	                              and eax, 7	     17197	i386-dis.c	FUNCTION_79	IF_3
0x4004009	            0xeb16	                           jmp 0x4004021	     17197	i386-dis.c	FUNCTION_79	IF_3
0x400400b	    0x833d00000000	               cmp dword [0x04004012], 0	     17198	i386-dis.c	FUNCTION_79	ELSE_1	IF_4
0x4004012	            0x740d	                            je 0x4004021	     17198	i386-dis.c	FUNCTION_79	ELSE_1	IF_4
0x4004014	          0x8d5010	                   lea edx, [rax + 0x10]	     17199	i386-dis.c	FUNCTION_79	ELSE_1	IF_4
0x4004017	    0x833d00000000	               cmp dword [0x0400401e], 0	     17199	i386-dis.c	FUNCTION_79	ELSE_1	IF_4
0x400401e	           0xf44c2	                          cmove eax, edx	     17199	i386-dis.c	FUNCTION_79	ELSE_1	IF_4
0x4004021	          0x83ff40	                           cmp edi, 0x40	     17201	i386-dis.c	FUNCTION_79	IF_5
0x4004024	            0x7517	                           jne 0x400403d	     17201	i386-dis.c	FUNCTION_79	IF_5
0x4004026	            0x4898	                                    cdqe	     17203	i386-dis.c	FUNCTION_79	IF_5	CALL_2
0x4004028	    0x488b15000000	            mov rdx, qword [0x0400402f] 	     17203	i386-dis.c	FUNCTION_79	IF_5	CALL_2
0x400402f	        0x488b3cc2	            mov rdi, qword [rdx + rax*8]	     17203	i386-dis.c	FUNCTION_79	IF_5	CALL_2
0x4004033	      0xe865ecffff	                        call sym.oappend	     17203	i386-dis.c	FUNCTION_79	IF_5	CALL_2
0x4004038	      0xe9ec000000	                           jmp 0x4004129	     17204	i386-dis.c	FUNCTION_79	IF_5
0x400403d	    0x8b1500000000	            mov edx, dword [0x04004043] 	     17207	i386-dis.c	FUNCTION_79	SWITCH_1
0x4004043	    0x81fa00010000	                          cmp edx, 0x100	     17207	i386-dis.c	FUNCTION_79	SWITCH_1
0x4004049	            0x746f	                            je 0x40040ba	     17207	i386-dis.c	FUNCTION_79	SWITCH_1
0x400404b	    0x81fa00020000	                          cmp edx, 0x200	     17207	i386-dis.c	FUNCTION_79	SWITCH_1
0x4004051	     0xf84b9000000	                            je 0x4004110	     17207	i386-dis.c	FUNCTION_79	SWITCH_1
0x4004057	    0x81fa80000000	                           cmp edx, 0x80	     17207	i386-dis.c	FUNCTION_79	SWITCH_1
0x400405d	     0xf85b6000000	                           jne 0x4004119	     17207	i386-dis.c	FUNCTION_79	SWITCH_1
0x4004063	          0x83ef23	                           sub edi, 0x23	     17210	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_2
0x4004066	          0x83ff22	                           cmp edi, 0x22	     17210	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_2
0x4004069	            0x774a	                            ja 0x40040b5	     17210	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_2
0x400406b	            0x89ff	                            mov edi, edi	     17210	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_2
0x400406d	    0xff24fd000000	                       jmp qword [rdi*8]	     17210	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_2
0x4004074	    0x488b15000000	            mov rdx, qword [0x0400407b] 	     17216	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_2
0x400407b	      0xe99e000000	                           jmp 0x400411e	     17217	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_2
0x4004080	    0x8b1500000000	            mov edx, dword [0x04004086] 	     17219	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_2	IF_6
0x4004086	          0x83e208	                              and edx, 8	     17219	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_2	IF_6
0x4004089	    0x488b15000000	            mov rdx, qword [0x04004090] 	     17220	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_2	IF_6
0x4004090	    0x480f44150000	           cmove rdx, qword [0x04004098]	     17220	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_2	IF_6
0x4004098	      0xe981000000	                           jmp 0x400411e	     17220	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_2	IF_6
0x400409d	    0x488b15000000	            mov rdx, qword [0x040040a4] 	     17231	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_2
0x40040a4	          0x83f807	                              cmp eax, 7	     17226	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_2	ELSE_2	IF_7
0x40040a7	            0x7e75	                           jle 0x400411e	     17226	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_2	ELSE_2	IF_7
0x40040a9	      0xbf00000000	                              mov edi, 0	     17228	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_2	ELSE_2	IF_7	CALL_3
0x40040ae	      0xe8eaebffff	                        call sym.oappend	     17228	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_2	ELSE_2	IF_7	CALL_3
0x40040b3	            0xeb74	                           jmp 0x4004129	     17229	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_2	ELSE_2	IF_7
0x40040b5	      0xe800000000	                          call 0x40040ba	     17234	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_2	CALL_4
0x40040ba	          0x83ef31	                           sub edi, 0x31	     17239	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_3
0x40040bd	          0x83ff14	                           cmp edi, 0x14	     17239	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_3
0x40040c0	            0x7742	                            ja 0x4004104	     17239	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_3
0x40040c2	            0x89ff	                            mov edi, edi	     17239	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_3
0x40040c4	    0xff24fd000000	                       jmp qword [rdi*8]	     17239	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_3
0x40040cb	    0x488b15000000	            mov rdx, qword [0x040040d2] 	     17243	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_3
0x40040d2	            0xeb4a	                           jmp 0x400411e	     17244	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_3
0x40040d4	    0x833d00000000	               cmp dword [0x040040db], 0	     17247	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_3
0x40040db	    0x488b15000000	            mov rdx, qword [0x040040e2] 	     17247	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_3
0x40040e2	    0x480f44150000	           cmove rdx, qword [0x040040ea]	     17247	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_3
0x40040ea	            0xeb32	                           jmp 0x400411e	     17247	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_3
0x40040ec	    0x488b15000000	            mov rdx, qword [0x040040f3] 	     17256	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_3
0x40040f3	          0x83f807	                              cmp eax, 7	     17251	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_3	IF_8
0x40040f6	            0x7e26	                           jle 0x400411e	     17251	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_3	IF_8
0x40040f8	      0xbf00000000	                              mov edi, 0	     17253	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_3	IF_8	CALL_5
0x40040fd	      0xe89bebffff	                        call sym.oappend	     17253	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_3	IF_8	CALL_5
0x4004102	            0xeb25	                           jmp 0x4004129	     17254	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_3	IF_8
0x4004104	      0xbf00000000	                              mov edi, 0	     17260	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_3	CALL_6
0x4004109	      0xe88febffff	                        call sym.oappend	     17260	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_3	CALL_6
0x400410e	            0xeb19	                           jmp 0x4004129	     17261	i386-dis.c	FUNCTION_79	SWITCH_1	SWITCH_3
0x4004110	    0x488b15000000	            mov rdx, qword [0x04004117] 	     17265	i386-dis.c	FUNCTION_79	SWITCH_1
0x4004117	            0xeb05	                           jmp 0x400411e	     17266	i386-dis.c	FUNCTION_79	SWITCH_1
0x4004119	      0xe800000000	                          call 0x400411e	     17268	i386-dis.c	FUNCTION_79	SWITCH_1	CALL_7
0x400411e	            0x4898	                                    cdqe	     17271	i386-dis.c	FUNCTION_79	CALL_8
0x4004120	        0x488b3cc2	            mov rdi, qword [rdx + rax*8]	     17271	i386-dis.c	FUNCTION_79	CALL_8
0x4004124	      0xe874ebffff	                        call sym.oappend	     17271	i386-dis.c	FUNCTION_79	CALL_8
0x4004129	        0x4883c408	                              add rsp, 8	     17272	i386-dis.c	FUNCTION_79
0x400412d	              0xc3	                                     ret	     17272	i386-dis.c	FUNCTION_79
print_insn	CALL,37:FOR,12:SWITCH,0:WHILE,0:ELSE,22:DO,0:IF,55:functions,0	1039
0x4006a74	            0x4157	                                push r15	     13168	i386-dis.c	FUNCTION_10
0x4006a76	            0x4156	                                push r14	     13168	i386-dis.c	FUNCTION_10
0x4006a78	            0x4155	                                push r13	     13168	i386-dis.c	FUNCTION_10
0x4006a7a	            0x4154	                                push r12	     13168	i386-dis.c	FUNCTION_10
0x4006a7c	              0x55	                                push rbp	     13168	i386-dis.c	FUNCTION_10
0x4006a7d	              0x53	                                push rbx	     13168	i386-dis.c	FUNCTION_10
0x4006a7e	    0x4881ec780100	                          sub rsp, 0x178	     13168	i386-dis.c	FUNCTION_10
0x4006a85	          0x4889fb	                            mov rbx, rdi	     13168	i386-dis.c	FUNCTION_10
0x4006a88	      0x4889742408	                mov qword [rsp + 8], rsi	     13168	i386-dis.c	FUNCTION_10
0x4006a8d	    0x64488b142528	                mov rdx, qword fs:[0x28]	     13168	i386-dis.c	FUNCTION_10
0x4006a96	    0x488994246801	            mov qword [rsp + 0x168], rdx	     13168	i386-dis.c	FUNCTION_10
0x4006a9e	            0x31d2	                            xor edx, edx	     13168	i386-dis.c	FUNCTION_10
0x4006aa0	    0xc78424980000	               mov dword [rsp + 0x98], 3	     13178	i386-dis.c	FUNCTION_10
0x4006aab	        0x488b4620	            mov rax, qword [rsi + 0x20] 	     13179	i386-dis.c	FUNCTION_10	IF_1
0x4006aaf	            0xa804	                              test al, 4	     13179	i386-dis.c	FUNCTION_10	IF_1
0x4006ab1	            0x740c	                            je 0x4006abf	     13179	i386-dis.c	FUNCTION_10	IF_1
0x4006ab3	    0xc70500000000	               mov dword [0x04006abd], 1	     13180	i386-dis.c	FUNCTION_10	IF_1
0x4006abd	            0xeb27	                           jmp 0x4006ae6	     13180	i386-dis.c	FUNCTION_10	IF_1
0x4006abf	        0x4883f802	                              cmp rax, 2	     13181	i386-dis.c	FUNCTION_10	ELSE_1	IF_2
0x4006ac3	            0x7517	                           jne 0x4006adc	     13181	i386-dis.c	FUNCTION_10	ELSE_1	IF_2
0x4006ac5	    0xc70500000000	               mov dword [0x04006acf], 0	     13183	i386-dis.c	FUNCTION_10	ELSE_1	IF_2
0x4006acf	    0xc78424980000	               mov dword [rsp + 0x98], 0	     13184	i386-dis.c	FUNCTION_10	ELSE_1	IF_2
0x4006ada	            0xeb0a	                           jmp 0x4006ae6	     13184	i386-dis.c	FUNCTION_10	ELSE_1	IF_2
0x4006adc	    0xc70500000000	               mov dword [0x04006ae6], 2	     13187	i386-dis.c	FUNCTION_10	ELSE_2
0x4006ae6	    0x803d00000000	            cmp byte [0x04006aed], 0xff 	     13189	i386-dis.c	FUNCTION_10	IF_3
0x4006aed	            0x751c	                           jne 0x4006b0b	     13189	i386-dis.c	FUNCTION_10	IF_3
0x4006aef	      0x488b442408	                mov rax, qword [rsp + 8]	     13190	i386-dis.c	FUNCTION_10	IF_3
0x4006af4	        0x488b4020	            mov rax, qword [rax + 0x20] 	     13190	i386-dis.c	FUNCTION_10	IF_3
0x4006af8	      0x4889442418	             mov qword [rsp + 0x18], rax	     13190	i386-dis.c	FUNCTION_10	IF_3
0x4006afd	       0xfb6442418	           movzx eax, byte [rsp + 0x18] 	     13190	i386-dis.c	FUNCTION_10	IF_3
0x4006b02	          0x83e001	                              and eax, 1	     13190	i386-dis.c	FUNCTION_10	IF_3
0x4006b05	    0x880500000000	               mov byte [0x04006b0b], al	     13190	i386-dis.c	FUNCTION_10	IF_3
0x4006b0b	      0x488b442408	                mov rax, qword [rsp + 8]	     13192	i386-dis.c	FUNCTION_10	FOR_1
0x4006b10	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	     13192	i386-dis.c	FUNCTION_10	FOR_1
0x4006b17	          0x4885c0	                           test rax, rax	     13192	i386-dis.c	FUNCTION_10	FOR_1
0x4006b1a	     0xf8495020000	                            je 0x4006db5	     13192	i386-dis.c	FUNCTION_10	FOR_1
0x4006b20	      0xbf00000000	                              mov edi, 0	     13194	i386-dis.c	FUNCTION_10	FOR_1	IF_4	CALL_1
0x4006b25	      0xb905000000	                              mov ecx, 5	     13194	i386-dis.c	FUNCTION_10	FOR_1	IF_4	CALL_1
0x4006b2a	          0x4889c6	                            mov rsi, rax	     13194	i386-dis.c	FUNCTION_10	FOR_1	IF_4	CALL_1
0x4006b2d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     13194	i386-dis.c	FUNCTION_10	FOR_1	IF_4	CALL_1
0x4006b2f	           0xf97c1	                                 seta cl	     13194	i386-dis.c	FUNCTION_10	FOR_1	IF_4	CALL_1
0x4006b32	           0xf92c2	                                 setb dl	     13194	i386-dis.c	FUNCTION_10	FOR_1	IF_4	CALL_1
0x4006b35	            0x38d1	                              cmp cl, dl	     13194	i386-dis.c	FUNCTION_10	FOR_1	IF_4	CALL_1
0x4006b37	            0x750f	                           jne 0x4006b48	     13194	i386-dis.c	FUNCTION_10	FOR_1	IF_4	CALL_1
0x4006b39	    0xc70500000000	               mov dword [0x04006b43], 0	     13195	i386-dis.c	FUNCTION_10	FOR_1	IF_4
0x4006b43	      0xe951020000	                           jmp 0x4006d99	     13195	i386-dis.c	FUNCTION_10	FOR_1	IF_4
0x4006b48	      0xbf00000000	                              mov edi, 0	     13196	i386-dis.c	FUNCTION_10	FOR_1	ELSE_3	IF_5	CALL_2
0x4006b4d	      0xb907000000	                              mov ecx, 7	     13196	i386-dis.c	FUNCTION_10	FOR_1	ELSE_3	IF_5	CALL_2
0x4006b52	          0x4889c6	                            mov rsi, rax	     13196	i386-dis.c	FUNCTION_10	FOR_1	ELSE_3	IF_5	CALL_2
0x4006b55	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     13196	i386-dis.c	FUNCTION_10	FOR_1	ELSE_3	IF_5	CALL_2
0x4006b57	           0xf97c1	                                 seta cl	     13196	i386-dis.c	FUNCTION_10	FOR_1	ELSE_3	IF_5	CALL_2
0x4006b5a	           0xf92c2	                                 setb dl	     13196	i386-dis.c	FUNCTION_10	FOR_1	ELSE_3	IF_5	CALL_2
0x4006b5d	            0x38d1	                              cmp cl, dl	     13196	i386-dis.c	FUNCTION_10	FOR_1	ELSE_3	IF_5	CALL_2
0x4006b5f	            0x750f	                           jne 0x4006b70	     13196	i386-dis.c	FUNCTION_10	FOR_1	ELSE_3	IF_5	CALL_2
0x4006b61	    0xc70500000000	               mov dword [0x04006b6b], 1	     13197	i386-dis.c	FUNCTION_10	FOR_1	ELSE_3	IF_5
0x4006b6b	      0xe929020000	                           jmp 0x4006d99	     13197	i386-dis.c	FUNCTION_10	FOR_1	ELSE_3	IF_5
0x4006b70	      0xbf00000000	                              mov edi, 0	     13198	i386-dis.c	FUNCTION_10	FOR_1	ELSE_4	IF_6	CALL_3
0x4006b75	      0xb906000000	                              mov ecx, 6	     13198	i386-dis.c	FUNCTION_10	FOR_1	ELSE_4	IF_6	CALL_3
0x4006b7a	          0x4889c6	                            mov rsi, rax	     13198	i386-dis.c	FUNCTION_10	FOR_1	ELSE_4	IF_6	CALL_3
0x4006b7d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     13198	i386-dis.c	FUNCTION_10	FOR_1	ELSE_4	IF_6	CALL_3
0x4006b7f	           0xf97c1	                                 seta cl	     13198	i386-dis.c	FUNCTION_10	FOR_1	ELSE_4	IF_6	CALL_3
0x4006b82	           0xf92c2	                                 setb dl	     13198	i386-dis.c	FUNCTION_10	FOR_1	ELSE_4	IF_6	CALL_3
0x4006b85	            0x38d1	                              cmp cl, dl	     13198	i386-dis.c	FUNCTION_10	FOR_1	ELSE_4	IF_6	CALL_3
0x4006b87	            0x751a	                           jne 0x4006ba3	     13198	i386-dis.c	FUNCTION_10	FOR_1	ELSE_4	IF_6	CALL_3
0x4006b89	    0xc70500000000	               mov dword [0x04006b93], 2	     13200	i386-dis.c	FUNCTION_10	FOR_1	ELSE_4	IF_6
0x4006b93	    0xc78424980000	               mov dword [rsp + 0x98], 3	     13201	i386-dis.c	FUNCTION_10	FOR_1	ELSE_4	IF_6
0x4006b9e	      0xe9f6010000	                           jmp 0x4006d99	     13201	i386-dis.c	FUNCTION_10	FOR_1	ELSE_4	IF_6
0x4006ba3	      0xbf00000000	                              mov edi, 0	     13203	i386-dis.c	FUNCTION_10	FOR_1	ELSE_5	IF_7	CALL_4
0x4006ba8	      0xb904000000	                              mov ecx, 4	     13203	i386-dis.c	FUNCTION_10	FOR_1	ELSE_5	IF_7	CALL_4
0x4006bad	          0x4889c6	                            mov rsi, rax	     13203	i386-dis.c	FUNCTION_10	FOR_1	ELSE_5	IF_7	CALL_4
0x4006bb0	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     13203	i386-dis.c	FUNCTION_10	FOR_1	ELSE_5	IF_7	CALL_4
0x4006bb2	           0xf97c1	                                 seta cl	     13203	i386-dis.c	FUNCTION_10	FOR_1	ELSE_5	IF_7	CALL_4
0x4006bb5	           0xf92c2	                                 setb dl	     13203	i386-dis.c	FUNCTION_10	FOR_1	ELSE_5	IF_7	CALL_4
0x4006bb8	            0x38d1	                              cmp cl, dl	     13203	i386-dis.c	FUNCTION_10	FOR_1	ELSE_5	IF_7	CALL_4
0x4006bba	            0x751a	                           jne 0x4006bd6	     13203	i386-dis.c	FUNCTION_10	FOR_1	ELSE_5	IF_7	CALL_4
0x4006bbc	    0xc70500000000	               mov dword [0x04006bc6], 1	     13205	i386-dis.c	FUNCTION_10	FOR_1	ELSE_5	IF_7
0x4006bc6	    0xc78424980000	               mov dword [rsp + 0x98], 3	     13206	i386-dis.c	FUNCTION_10	FOR_1	ELSE_5	IF_7
0x4006bd1	      0xe9c3010000	                           jmp 0x4006d99	     13206	i386-dis.c	FUNCTION_10	FOR_1	ELSE_5	IF_7
0x4006bd6	      0xbf00000000	                              mov edi, 0	     13208	i386-dis.c	FUNCTION_10	FOR_1	ELSE_6	IF_8	CALL_5
0x4006bdb	      0xb905000000	                              mov ecx, 5	     13208	i386-dis.c	FUNCTION_10	FOR_1	ELSE_6	IF_8	CALL_5
0x4006be0	          0x4889c6	                            mov rsi, rax	     13208	i386-dis.c	FUNCTION_10	FOR_1	ELSE_6	IF_8	CALL_5
0x4006be3	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     13208	i386-dis.c	FUNCTION_10	FOR_1	ELSE_6	IF_8	CALL_5
0x4006be5	           0xf97c1	                                 seta cl	     13208	i386-dis.c	FUNCTION_10	FOR_1	ELSE_6	IF_8	CALL_5
0x4006be8	           0xf92c2	                                 setb dl	     13208	i386-dis.c	FUNCTION_10	FOR_1	ELSE_6	IF_8	CALL_5
0x4006beb	            0x38d1	                              cmp cl, dl	     13208	i386-dis.c	FUNCTION_10	FOR_1	ELSE_6	IF_8	CALL_5
0x4006bed	            0x751a	                           jne 0x4006c09	     13208	i386-dis.c	FUNCTION_10	FOR_1	ELSE_6	IF_8	CALL_5
0x4006bef	    0xc70500000000	               mov dword [0x04006bf9], 0	     13210	i386-dis.c	FUNCTION_10	FOR_1	ELSE_6	IF_8
0x4006bf9	    0xc78424980000	               mov dword [rsp + 0x98], 0	     13211	i386-dis.c	FUNCTION_10	FOR_1	ELSE_6	IF_8
0x4006c04	      0xe990010000	                           jmp 0x4006d99	     13211	i386-dis.c	FUNCTION_10	FOR_1	ELSE_6	IF_8
0x4006c09	      0xbf00000000	                              mov edi, 0	     13213	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9	CALL_6
0x4006c0e	      0xb905000000	                              mov ecx, 5	     13213	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9	CALL_6
0x4006c13	          0x4889c6	                            mov rsi, rax	     13213	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9	CALL_6
0x4006c16	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     13213	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9	CALL_6
0x4006c18	           0xf97c1	                                 seta cl	     13213	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9	CALL_6
0x4006c1b	           0xf92c2	                                 setb dl	     13213	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9	CALL_6
0x4006c1e	            0x38d1	                              cmp cl, dl	     13213	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9	CALL_6
0x4006c20	            0x7531	                           jne 0x4006c53	     13213	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9	CALL_6
0x4006c22	    0xc60500000000	                mov byte [0x04006c29], 1	     13215	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9
0x4006c29	        0x488d7005	                      lea rsi, [rax + 5]	     13216	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9	IF_10	CALL_7
0x4006c2d	      0xbf00000000	                              mov edi, 0	     13216	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9	IF_10	CALL_7
0x4006c32	      0xb909000000	                              mov ecx, 9	     13216	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9	IF_10	CALL_7
0x4006c37	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     13216	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9	IF_10	CALL_7
0x4006c39	           0xf97c1	                                 seta cl	     13216	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9	IF_10	CALL_7
0x4006c3c	           0xf92c2	                                 setb dl	     13216	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9	IF_10	CALL_7
0x4006c3f	            0x38d1	                              cmp cl, dl	     13216	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9	IF_10	CALL_7
0x4006c41	     0xf8552010000	                           jne 0x4006d99	     13216	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9	IF_10	CALL_7
0x4006c47	    0xc60500000000	                mov byte [0x04006c4e], 1	     13217	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9	IF_10
0x4006c4e	      0xe946010000	                           jmp 0x4006d99	     13217	i386-dis.c	FUNCTION_10	FOR_1	ELSE_7	IF_9	IF_10
0x4006c53	      0xbf00000000	                              mov edi, 0	     13219	i386-dis.c	FUNCTION_10	FOR_1	ELSE_8	IF_11	CALL_8
0x4006c58	      0xb903000000	                              mov ecx, 3	     13219	i386-dis.c	FUNCTION_10	FOR_1	ELSE_8	IF_11	CALL_8
0x4006c5d	          0x4889c6	                            mov rsi, rax	     13219	i386-dis.c	FUNCTION_10	FOR_1	ELSE_8	IF_11	CALL_8
0x4006c60	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     13219	i386-dis.c	FUNCTION_10	FOR_1	ELSE_8	IF_11	CALL_8
0x4006c62	           0xf97c1	                                 seta cl	     13219	i386-dis.c	FUNCTION_10	FOR_1	ELSE_8	IF_11	CALL_8
0x4006c65	           0xf92c2	                                 setb dl	     13219	i386-dis.c	FUNCTION_10	FOR_1	ELSE_8	IF_11	CALL_8
0x4006c68	            0x38d1	                              cmp cl, dl	     13219	i386-dis.c	FUNCTION_10	FOR_1	ELSE_8	IF_11	CALL_8
0x4006c6a	            0x7531	                           jne 0x4006c9d	     13219	i386-dis.c	FUNCTION_10	FOR_1	ELSE_8	IF_11	CALL_8
0x4006c6c	    0xc60500000000	                mov byte [0x04006c73], 0	     13221	i386-dis.c	FUNCTION_10	FOR_1	ELSE_8	IF_11
0x4006c73	        0x488d7003	                      lea rsi, [rax + 3]	     13222	i386-dis.c	FUNCTION_10	FOR_1	ELSE_8	IF_11	IF_12	CALL_9
0x4006c77	      0xbf00000000	                              mov edi, 0	     13222	i386-dis.c	FUNCTION_10	FOR_1	ELSE_8	IF_11	IF_12	CALL_9
0x4006c7c	      0xb909000000	                              mov ecx, 9	     13222	i386-dis.c	FUNCTION_10	FOR_1	ELSE_8	IF_11	IF_12	CALL_9
0x4006c81	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     13222	i386-dis.c	FUNCTION_10	FOR_1	ELSE_8	IF_11	IF_12	CALL_9
0x4006c83	           0xf97c1	                                 seta cl	     13222	i386-dis.c	FUNCTION_10	FOR_1	ELSE_8	IF_11	IF_12	CALL_9
0x4006c86	           0xf92c2	                                 setb dl	     13222	i386-dis.c	FUNCTION_10	FOR_1	ELSE_8	IF_11	IF_12	CALL_9
0x4006c89	            0x38d1	                              cmp cl, dl	     13222	i386-dis.c	FUNCTION_10	FOR_1	ELSE_8	IF_11	IF_12	CALL_9
0x4006c8b	     0xf8508010000	                           jne 0x4006d99	     13222	i386-dis.c	FUNCTION_10	FOR_1	ELSE_8	IF_11	IF_12	CALL_9
0x4006c91	    0xc60500000000	                mov byte [0x04006c98], 0	     13223	i386-dis.c	FUNCTION_10	FOR_1	ELSE_8	IF_11	IF_12
0x4006c98	      0xe9fc000000	                           jmp 0x4006d99	     13223	i386-dis.c	FUNCTION_10	FOR_1	ELSE_8	IF_11	IF_12
0x4006c9d	      0xbf00000000	                              mov edi, 0	     13225	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	CALL_10
0x4006ca2	      0xb904000000	                              mov ecx, 4	     13225	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	CALL_10
0x4006ca7	          0x4889c6	                            mov rsi, rax	     13225	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	CALL_10
0x4006caa	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     13225	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	CALL_10
0x4006cac	           0xf97c1	                                 seta cl	     13225	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	CALL_10
0x4006caf	           0xf92c2	                                 setb dl	     13225	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	CALL_10
0x4006cb2	            0x38d1	                              cmp cl, dl	     13225	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	CALL_10
0x4006cb4	            0x757b	                           jne 0x4006d31	     13225	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	CALL_10
0x4006cb6	    0x833d00000000	               cmp dword [0x04006cbd], 2	     13227	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14
0x4006cbd	            0x7540	                           jne 0x4006cff	     13227	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14
0x4006cbf	         0xfb65004	               movzx edx, byte [rax + 4]	     13229	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	IF_15
0x4006cc3	          0x80fa33	                            cmp dl, 0x33	     13229	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	IF_15
0x4006cc6	            0x7517	                           jne 0x4006cdf	     13229	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	IF_15
0x4006cc8	        0x80780532	                cmp byte [rax + 5], 0x32	     13229	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	IF_15
0x4006ccc	     0xf85c7000000	                           jne 0x4006d99	     13229	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	IF_15
0x4006cd2	    0x83a424980000	      and dword [rsp + 0x98], 0xfffffffd	     13230	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	IF_15
0x4006cda	      0xe9ba000000	                           jmp 0x4006d99	     13230	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	IF_15
0x4006cdf	          0x80fa36	                            cmp dl, 0x36	     13231	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	ELSE_10	IF_16
0x4006ce2	     0xf85b1000000	                           jne 0x4006d99	     13231	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	ELSE_10	IF_16
0x4006ce8	        0x80780534	                cmp byte [rax + 5], 0x34	     13231	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	ELSE_10	IF_16
0x4006cec	     0xf85a7000000	                           jne 0x4006d99	     13231	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	ELSE_10	IF_16
0x4006cf2	    0x838c24980000	                or dword [rsp + 0x98], 2	     13232	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	ELSE_10	IF_16
0x4006cfa	      0xe99a000000	                           jmp 0x4006d99	     13232	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	IF_14	ELSE_10	IF_16
0x4006cff	         0xfb65004	               movzx edx, byte [rax + 4]	     13236	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	ELSE_11	IF_17
0x4006d03	          0x80fa31	                            cmp dl, 0x31	     13236	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	ELSE_11	IF_17
0x4006d06	            0x7514	                           jne 0x4006d1c	     13236	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	ELSE_11	IF_17
0x4006d08	        0x80780536	                cmp byte [rax + 5], 0x36	     13236	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	ELSE_11	IF_17
0x4006d0c	     0xf8587000000	                           jne 0x4006d99	     13236	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	ELSE_11	IF_17
0x4006d12	    0x83a424980000	      and dword [rsp + 0x98], 0xfffffffd	     13237	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	ELSE_11	IF_17
0x4006d1a	            0xeb7d	                           jmp 0x4006d99	     13237	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	ELSE_11	IF_17
0x4006d1c	          0x80fa33	                            cmp dl, 0x33	     13238	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	ELSE_11	ELSE_12	IF_18
0x4006d1f	            0x7578	                           jne 0x4006d99	     13238	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	ELSE_11	ELSE_12	IF_18
0x4006d21	        0x80780532	                cmp byte [rax + 5], 0x32	     13238	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	ELSE_11	ELSE_12	IF_18
0x4006d25	            0x7572	                           jne 0x4006d99	     13238	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	ELSE_11	ELSE_12	IF_18
0x4006d27	    0x838c24980000	                or dword [rsp + 0x98], 2	     13239	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	ELSE_11	ELSE_12	IF_18
0x4006d2f	            0xeb68	                           jmp 0x4006d99	     13239	i386-dis.c	FUNCTION_10	FOR_1	ELSE_9	IF_13	ELSE_11	ELSE_12	IF_18
0x4006d31	      0xbf00000000	                              mov edi, 0	     13242	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	CALL_11
0x4006d36	      0xb904000000	                              mov ecx, 4	     13242	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	CALL_11
0x4006d3b	          0x4889c6	                            mov rsi, rax	     13242	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	CALL_11
0x4006d3e	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     13242	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	CALL_11
0x4006d40	           0xf97c1	                                 seta cl	     13242	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	CALL_11
0x4006d43	           0xf92c2	                                 setb dl	     13242	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	CALL_11
0x4006d46	            0x38d1	                              cmp cl, dl	     13242	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	CALL_11
0x4006d48	            0x752e	                           jne 0x4006d78	     13242	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	CALL_11
0x4006d4a	         0xfb65004	               movzx edx, byte [rax + 4]	     13244	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	IF_20
0x4006d4e	          0x80fa31	                            cmp dl, 0x31	     13244	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	IF_20
0x4006d51	            0x7510	                           jne 0x4006d63	     13244	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	IF_20
0x4006d53	        0x80780536	                cmp byte [rax + 5], 0x36	     13244	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	IF_20
0x4006d57	            0x7540	                           jne 0x4006d99	     13244	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	IF_20
0x4006d59	    0x83a424980000	      and dword [rsp + 0x98], 0xfffffffe	     13245	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	IF_20
0x4006d61	            0xeb36	                           jmp 0x4006d99	     13245	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	IF_20
0x4006d63	          0x80fa33	                            cmp dl, 0x33	     13246	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	ELSE_14	IF_21
0x4006d66	            0x7531	                           jne 0x4006d99	     13246	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	ELSE_14	IF_21
0x4006d68	        0x80780532	                cmp byte [rax + 5], 0x32	     13246	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	ELSE_14	IF_21
0x4006d6c	            0x752b	                           jne 0x4006d99	     13246	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	ELSE_14	IF_21
0x4006d6e	    0x838c24980000	                or dword [rsp + 0x98], 1	     13247	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	ELSE_14	IF_21
0x4006d76	            0xeb21	                           jmp 0x4006d99	     13247	i386-dis.c	FUNCTION_10	FOR_1	ELSE_13	IF_19	ELSE_14	IF_21
0x4006d78	      0xbf00000000	                              mov edi, 0	     13249	i386-dis.c	FUNCTION_10	FOR_1	ELSE_15	IF_22	CALL_12
0x4006d7d	      0xb906000000	                              mov ecx, 6	     13249	i386-dis.c	FUNCTION_10	FOR_1	ELSE_15	IF_22	CALL_12
0x4006d82	          0x4889c6	                            mov rsi, rax	     13249	i386-dis.c	FUNCTION_10	FOR_1	ELSE_15	IF_22	CALL_12
0x4006d85	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     13249	i386-dis.c	FUNCTION_10	FOR_1	ELSE_15	IF_22	CALL_12
0x4006d87	           0xf97c1	                                 seta cl	     13249	i386-dis.c	FUNCTION_10	FOR_1	ELSE_15	IF_22	CALL_12
0x4006d8a	           0xf92c2	                                 setb dl	     13249	i386-dis.c	FUNCTION_10	FOR_1	ELSE_15	IF_22	CALL_12
0x4006d8d	            0x38d1	                              cmp cl, dl	     13249	i386-dis.c	FUNCTION_10	FOR_1	ELSE_15	IF_22	CALL_12
0x4006d8f	            0x7508	                           jne 0x4006d99	     13249	i386-dis.c	FUNCTION_10	FOR_1	ELSE_15	IF_22	CALL_12
0x4006d91	    0x838c24980000	                or dword [rsp + 0x98], 4	     13250	i386-dis.c	FUNCTION_10	FOR_1	ELSE_15	IF_22
0x4006d99	      0xbe2c000000	                           mov esi, 0x2c	     13252	i386-dis.c	FUNCTION_10	FOR_1	CALL_13
0x4006d9e	          0x4889c7	                            mov rdi, rax	     13252	i386-dis.c	FUNCTION_10	FOR_1	CALL_13
0x4006da1	      0xe800000000	                          call 0x4006da6	     13252	i386-dis.c	FUNCTION_10	FOR_1	CALL_13
0x4006da6	          0x4885c0	                           test rax, rax	     13253	i386-dis.c	FUNCTION_10	FOR_1	IF_23
0x4006da9	            0x740a	                            je 0x4006db5	     13253	i386-dis.c	FUNCTION_10	FOR_1	IF_23
0x4006dab	        0x4883c001	                              add rax, 1	     13192	i386-dis.c	FUNCTION_10	FOR_1
0x4006daf	     0xf856bfdffff	                           jne 0x4006b20	     13192	i386-dis.c	FUNCTION_10	FOR_1
0x4006db5	    0x803d00000000	                cmp byte [0x04006dbc], 0	     13264	i386-dis.c	FUNCTION_10	IF_25
0x4006dbc	     0xf84c6000000	                            je 0x4006e88	     13264	i386-dis.c	FUNCTION_10	IF_25
0x4006dc2	    0x48c705000000	               mov qword [0x04006dcd], 0	     13266	i386-dis.c	FUNCTION_10	IF_25
0x4006dcd	    0x48c705000000	               mov qword [0x04006dd8], 0	     13267	i386-dis.c	FUNCTION_10	IF_25
0x4006dd8	    0x48c705000000	               mov qword [0x04006de3], 0	     13268	i386-dis.c	FUNCTION_10	IF_25
0x4006de3	    0x48c705000000	               mov qword [0x04006dee], 0	     13269	i386-dis.c	FUNCTION_10	IF_25
0x4006dee	    0x48c705000000	               mov qword [0x04006df9], 0	     13270	i386-dis.c	FUNCTION_10	IF_25
0x4006df9	    0x48c705000000	               mov qword [0x04006e04], 0	     13271	i386-dis.c	FUNCTION_10	IF_25
0x4006e04	    0x48c705000000	               mov qword [0x04006e0f], 0	     13272	i386-dis.c	FUNCTION_10	IF_25
0x4006e0f	    0x48c705000000	               mov qword [0x04006e1a], 0	     13273	i386-dis.c	FUNCTION_10	IF_25
0x4006e1a	    0x48c705000000	               mov qword [0x04006e25], 0	     13274	i386-dis.c	FUNCTION_10	IF_25
0x4006e25	    0x48c705000000	               mov qword [0x04006e30], 0	     13275	i386-dis.c	FUNCTION_10	IF_25
0x4006e30	    0x48c705000000	               mov qword [0x04006e3b], 0	     13276	i386-dis.c	FUNCTION_10	IF_25
0x4006e3b	    0x48c705000000	               mov qword [0x04006e46], 0	     13277	i386-dis.c	FUNCTION_10	IF_25
0x4006e46	    0x48c705000000	               mov qword [0x04006e51], 0	     13278	i386-dis.c	FUNCTION_10	IF_25
0x4006e51	    0x48c705000000	               mov qword [0x04006e5c], 0	     13279	i386-dis.c	FUNCTION_10	IF_25
0x4006e5c	    0x48c705000000	               mov qword [0x04006e67], 0	     13280	i386-dis.c	FUNCTION_10	IF_25
0x4006e67	    0xc60500000000	            mov byte [0x04006e6e], 0x5b 	     13281	i386-dis.c	FUNCTION_10	IF_25
0x4006e6e	    0xc60500000000	            mov byte [0x04006e75], 0x5d 	     13282	i386-dis.c	FUNCTION_10	IF_25
0x4006e75	    0xc60500000000	            mov byte [0x04006e7c], 0x2b 	     13283	i386-dis.c	FUNCTION_10	IF_25
0x4006e7c	    0xc60500000000	            mov byte [0x04006e83], 0x2a 	     13284	i386-dis.c	FUNCTION_10	IF_25
0x4006e83	      0xe9c1000000	                           jmp 0x4006f49	     13284	i386-dis.c	FUNCTION_10	IF_25
0x4006e88	    0x48c705000000	               mov qword [0x04006e93], 0	     13288	i386-dis.c	FUNCTION_10	ELSE_16
0x4006e93	    0x48c705000000	               mov qword [0x04006e9e], 0	     13289	i386-dis.c	FUNCTION_10	ELSE_16
0x4006e9e	    0x48c705000000	               mov qword [0x04006ea9], 0	     13290	i386-dis.c	FUNCTION_10	ELSE_16
0x4006ea9	    0x48c705000000	               mov qword [0x04006eb4], 0	     13291	i386-dis.c	FUNCTION_10	ELSE_16
0x4006eb4	    0x48c705000000	               mov qword [0x04006ebf], 0	     13292	i386-dis.c	FUNCTION_10	ELSE_16
0x4006ebf	    0x48c705000000	               mov qword [0x04006eca], 0	     13293	i386-dis.c	FUNCTION_10	ELSE_16
0x4006eca	    0x48c705000000	               mov qword [0x04006ed5], 0	     13294	i386-dis.c	FUNCTION_10	ELSE_16
0x4006ed5	    0x48c705000000	               mov qword [0x04006ee0], 0	     13295	i386-dis.c	FUNCTION_10	ELSE_16
0x4006ee0	    0x48c705000000	               mov qword [0x04006eeb], 0	     13296	i386-dis.c	FUNCTION_10	ELSE_16
0x4006eeb	    0x48c705000000	               mov qword [0x04006ef6], 0	     13297	i386-dis.c	FUNCTION_10	ELSE_16
0x4006ef6	    0x48c705000000	               mov qword [0x04006f01], 0	     13298	i386-dis.c	FUNCTION_10	ELSE_16
0x4006f01	    0x48c705000000	               mov qword [0x04006f0c], 0	     13299	i386-dis.c	FUNCTION_10	ELSE_16
0x4006f0c	    0x48c705000000	               mov qword [0x04006f17], 0	     13300	i386-dis.c	FUNCTION_10	ELSE_16
0x4006f17	    0x48c705000000	               mov qword [0x04006f22], 0	     13301	i386-dis.c	FUNCTION_10	ELSE_16
0x4006f22	    0x48c705000000	               mov qword [0x04006f2d], 0	     13302	i386-dis.c	FUNCTION_10	ELSE_16
0x4006f2d	    0xc60500000000	            mov byte [0x04006f34], 0x28 	     13303	i386-dis.c	FUNCTION_10	ELSE_16
0x4006f34	    0xc60500000000	            mov byte [0x04006f3b], 0x29 	     13304	i386-dis.c	FUNCTION_10	ELSE_16
0x4006f3b	    0xc60500000000	            mov byte [0x04006f42], 0x2c 	     13305	i386-dis.c	FUNCTION_10	ELSE_16
0x4006f42	    0xc60500000000	            mov byte [0x04006f49], 0x2c 	     13306	i386-dis.c	FUNCTION_10	ELSE_16
0x4006f49	      0x488b742408	                mov rsi, qword [rsp + 8]	     13312	i386-dis.c	FUNCTION_10	IF_26
0x4006f4e	        0x488b4620	            mov rax, qword [rsi + 0x20] 	     13312	i386-dis.c	FUNCTION_10	IF_26
0x4006f52	      0x4889442410	             mov qword [rsp + 0x10], rax	     13312	i386-dis.c	FUNCTION_10	IF_26
0x4006f57	          0x83e020	                           and eax, 0x20	     13312	i386-dis.c	FUNCTION_10	IF_26
0x4006f5a	        0x4883f801	                              cmp rax, 1	     13313	i386-dis.c	FUNCTION_10	IF_26
0x4006f5e	            0x19c0	                            sbb eax, eax	     13313	i386-dis.c	FUNCTION_10	IF_26
0x4006f60	          0x83c008	                              add eax, 8	     13313	i386-dis.c	FUNCTION_10	IF_26
0x4006f63	    0x8986b0000000	             mov dword [rsi + 0xb0], eax	     13313	i386-dis.c	FUNCTION_10	IF_26
0x4006f69	      0x488d442470	                   lea rax, [rsp + 0x70]	     13317	i386-dis.c	FUNCTION_10	ELSE_17
0x4006f6e	        0x48894668	             mov qword [rsi + 0x68], rax	     13317	i386-dis.c	FUNCTION_10	ELSE_17
0x4006f72	      0x488d442478	                   lea rax, [rsp + 0x78]	     13318	i386-dis.c	FUNCTION_10	ELSE_17
0x4006f77	      0x4889442470	             mov qword [rsp + 0x70], rax	     13318	i386-dis.c	FUNCTION_10	ELSE_17
0x4006f7c	    0x48899c249000	             mov qword [rsp + 0x90], rbx	     13319	i386-dis.c	FUNCTION_10	ELSE_17
0x4006f84	    0xc60500000000	                mov byte [0x04006f8b], 0	     13321	i386-dis.c	FUNCTION_10	ELSE_17
0x4006f8b	      0xba00000000	                              mov edx, 0	     13321	i386-dis.c	FUNCTION_10	ELSE_17
0x4006f90	      0xb800000000	                              mov eax, 0	     13321	i386-dis.c	FUNCTION_10	ELSE_17
0x4006f95	          0xc60200	                       mov byte [rdx], 0	     13324	i386-dis.c	FUNCTION_10	ELSE_17	FOR_2
0x4006f98	    0xc78000000000	            mov dword [rax], 0xffffffff 	     13325	i386-dis.c	FUNCTION_10	ELSE_17	FOR_2
0x4006fa2	        0x4883c264	                           add rdx, 0x64	     13325	i386-dis.c	FUNCTION_10	ELSE_17	FOR_2
0x4006fa6	        0x4883c004	                              add rax, 4	     13325	i386-dis.c	FUNCTION_10	ELSE_17	FOR_2
0x4006faa	        0x4883f814	                           cmp rax, 0x14	     13322	i386-dis.c	FUNCTION_10	ELSE_17	FOR_2
0x4006fae	            0x75e5	                           jne 0x4006f95	     13322	i386-dis.c	FUNCTION_10	ELSE_17	FOR_2
0x4006fb0	      0x488b442408	                mov rax, qword [rsp + 8]	     13328	i386-dis.c	FUNCTION_10
0x4006fb5	    0x488905000000	            mov qword [0x04006fbc], rax 	     13328	i386-dis.c	FUNCTION_10
0x4006fbc	    0x48891d000000	            mov qword [0x04006fc3], rbx 	     13329	i386-dis.c	FUNCTION_10
0x4006fc3	      0x488d742470	                   lea rsi, [rsp + 0x70]	     13330	i386-dis.c	FUNCTION_10
0x4006fc8	      0x488d442478	                   lea rax, [rsp + 0x78]	     13330	i386-dis.c	FUNCTION_10
0x4006fcd	    0x488905000000	            mov qword [0x04006fd4], rax 	     13330	i386-dis.c	FUNCTION_10
0x4006fd4	    0x488905000000	            mov qword [0x04006fdb], rax 	     13331	i386-dis.c	FUNCTION_10
0x4006fdb	        0x488d7e30	                   lea rdi, [rsi + 0x30]	     13333	i386-dis.c	FUNCTION_10	IF_27	CALL_15
0x4006fdf	      0xbe00000000	                              mov esi, 0	     13333	i386-dis.c	FUNCTION_10	IF_27	CALL_15
0x4006fe4	      0xe800000000	                          call 0x4006fe9	     13333	i386-dis.c	FUNCTION_10	IF_27	CALL_15
0x4006fe9	            0x85c0	                           test eax, eax	     13333	i386-dis.c	FUNCTION_10	IF_27	CALL_15
0x4006feb	            0x746f	                            je 0x400705c	     13333	i386-dis.c	FUNCTION_10	IF_27	CALL_15
0x4006fed	      0x488d442478	                   lea rax, [rsp + 0x78]	     13340	i386-dis.c	FUNCTION_10	IF_27	IF_28
0x4006ff2	    0x483905000000	            cmp qword [0x04006ff9], rax 	     13340	i386-dis.c	FUNCTION_10	IF_27	IF_28
0x4006ff9	     0xf86760d0000	                           jbe 0x4007d75	     13340	i386-dis.c	FUNCTION_10	IF_27	IF_28
0x4006fff	       0xfb65c2478	           movzx ebx, byte [rsp + 0x78] 	     13342	i386-dis.c	FUNCTION_10	IF_27	IF_28	CALL_16
0x4007004	           0xfb6fb	                           movzx edi, bl	     13342	i386-dis.c	FUNCTION_10	IF_27	IF_28	CALL_16
0x4007007	    0x8bb424980000	            mov esi, dword [rsp + 0x98] 	     13342	i386-dis.c	FUNCTION_10	IF_27	IF_28	CALL_16
0x400700e	      0xe82d90ffff	                    call sym.prefix_name	     13342	i386-dis.c	FUNCTION_10	IF_27	IF_28	CALL_16
0x4007013	          0x4885c0	                           test rax, rax	     13343	i386-dis.c	FUNCTION_10	IF_27	IF_28	IF_29
0x4007016	            0x7422	                            je 0x400703a	     13343	i386-dis.c	FUNCTION_10	IF_27	IF_28	IF_29
0x4007018	      0x488b5c2408	                mov rbx, qword [rsp + 8]	     13344	i386-dis.c	FUNCTION_10	IF_27	IF_28	IF_29
0x400701d	        0x488b7b08	                mov rdi, qword [rbx + 8]	     13344	i386-dis.c	FUNCTION_10	IF_27	IF_28	IF_29
0x4007021	          0x4889c2	                            mov rdx, rax	     13344	i386-dis.c	FUNCTION_10	IF_27	IF_28	IF_29
0x4007024	      0xbe00000000	                              mov esi, 0	     13344	i386-dis.c	FUNCTION_10	IF_27	IF_28	IF_29
0x4007029	      0xb800000000	                              mov eax, 0	     13344	i386-dis.c	FUNCTION_10	IF_27	IF_28	IF_29
0x400702e	            0xff13	                        call qword [rbx]	     13344	i386-dis.c	FUNCTION_10	IF_27	IF_28	IF_29
0x4007030	      0xb801000000	                              mov eax, 1	     13352	i386-dis.c	FUNCTION_10	IF_27	IF_28
0x4007035	      0xe9470d0000	                           jmp 0x4007d81	     13352	i386-dis.c	FUNCTION_10	IF_27	IF_28
0x400703a	           0xfb6d3	                           movzx edx, bl	     13348	i386-dis.c	FUNCTION_10	IF_27	IF_28	ELSE_18
0x400703d	      0x488b5c2408	                mov rbx, qword [rsp + 8]	     13348	i386-dis.c	FUNCTION_10	IF_27	IF_28	ELSE_18
0x4007042	        0x488b7b08	                mov rdi, qword [rbx + 8]	     13348	i386-dis.c	FUNCTION_10	IF_27	IF_28	ELSE_18
0x4007046	      0xbe00000000	                              mov esi, 0	     13348	i386-dis.c	FUNCTION_10	IF_27	IF_28	ELSE_18
0x400704b	      0xb800000000	                              mov eax, 0	     13348	i386-dis.c	FUNCTION_10	IF_27	IF_28	ELSE_18
0x4007050	            0xff13	                        call qword [rbx]	     13348	i386-dis.c	FUNCTION_10	IF_27	IF_28	ELSE_18
0x4007052	      0xb801000000	                              mov eax, 1	     13352	i386-dis.c	FUNCTION_10	IF_27	IF_28
0x4007057	      0xe9250d0000	                           jmp 0x4007d81	     13352	i386-dis.c	FUNCTION_10	IF_27	IF_28
0x400705c	    0x48c705000000	               mov qword [0x04007067], 0	     13358	i386-dis.c	FUNCTION_10
0x4007067	    0x448ba4249800	           mov r12d, dword [rsp + 0x98] 	     13359	i386-dis.c	FUNCTION_10
0x400706f	    0xc70500000000	               mov dword [0x04007079], 0	     12419	i386-dis.c	FUNCTION_2
0x4007079	    0xc70500000000	               mov dword [0x04007083], 0	     12420	i386-dis.c	FUNCTION_2
0x4007083	    0xc70500000000	               mov dword [0x0400708d], 0	     12421	i386-dis.c	FUNCTION_2
0x400708d	    0xc70500000000	               mov dword [0x04007097], 0	     12422	i386-dis.c	FUNCTION_2
0x4007097	    0xc70500000000	               mov dword [0x040070a1], 0	     12423	i386-dis.c	FUNCTION_2
0x40070a1	    0xc70500000000	     mov dword [0x040070ab], 0xffffffff 	     12424	i386-dis.c	FUNCTION_2
0x40070ab	    0xc70500000000	     mov dword [0x040070b5], 0xffffffff 	     12425	i386-dis.c	FUNCTION_2
0x40070b5	    0xc70500000000	     mov dword [0x040070bf], 0xffffffff 	     12426	i386-dis.c	FUNCTION_2
0x40070bf	    0xc70500000000	     mov dword [0x040070c9], 0xffffffff 	     12427	i386-dis.c	FUNCTION_2
0x40070c9	    0xc70500000000	     mov dword [0x040070d3], 0xffffffff 	     12428	i386-dis.c	FUNCTION_2
0x40070d3	    0xc70500000000	     mov dword [0x040070dd], 0xffffffff 	     12429	i386-dis.c	FUNCTION_2
0x40070dd	    0xc70500000000	     mov dword [0x040070e7], 0xffffffff 	     12430	i386-dis.c	FUNCTION_2
0x40070e7	    0xc70500000000	     mov dword [0x040070f1], 0xffffffff 	     12431	i386-dis.c	FUNCTION_2
0x40070f1	    0xc70500000000	               mov dword [0x040070fb], 0	     12432	i386-dis.c	FUNCTION_2
0x40070fb	      0xbd00000000	                              mov ebp, 0	     12432	i386-dis.c	FUNCTION_2
0x4007100	      0xbb00000000	                              mov ebx, 0	     12432	i386-dis.c	FUNCTION_2
0x4007105	          0x4889e8	                            mov rax, rbp	     12432	i386-dis.c	FUNCTION_2
0x4007108	    0xc70000000000	                      mov dword [rax], 0	     12434	i386-dis.c	FUNCTION_2	FOR_1
0x400710e	        0x4883c004	                              add rax, 4	     12434	i386-dis.c	FUNCTION_2	FOR_1
0x4007112	          0x4839c3	                            cmp rbx, rax	     12433	i386-dis.c	FUNCTION_2	FOR_1	CALL_1
0x4007115	            0x75f1	                           jne 0x4007108	     12433	i386-dis.c	FUNCTION_2	FOR_1	CALL_1
0x4007117	    0x41be0e000000	                           mov r14d, 0xe	     12433	i386-dis.c	FUNCTION_2	FOR_1	CALL_1
0x400711d	    0x41bd00000000	                             mov r13d, 0	     12433	i386-dis.c	FUNCTION_2	FOR_1	CALL_1
0x4007123	    0x488b05000000	            mov rax, qword [0x0400712a] 	     12440	i386-dis.c	FUNCTION_2	WHILE_1
0x400712a	        0x488d7001	                      lea rsi, [rax + 1]	     12440	i386-dis.c	FUNCTION_2	WHILE_1
0x400712e	    0x488b3d000000	            mov rdi, qword [0x04007135] 	     12440	i386-dis.c	FUNCTION_2	WHILE_1
0x4007135	        0x488b4768	            mov rax, qword [rdi + 0x68] 	     12440	i386-dis.c	FUNCTION_2	WHILE_1
0x4007139	          0x483b30	                    cmp rsi, qword [rax]	     12440	i386-dis.c	FUNCTION_2	WHILE_1
0x400713c	            0x7605	                           jbe 0x4007143	     12440	i386-dis.c	FUNCTION_2	WHILE_1
0x400713e	      0xe868adffff	                     call sym.fetch_data	     12440	i386-dis.c	FUNCTION_2	WHILE_1
0x4007143	    0x488b15000000	            mov rdx, qword [0x0400714a] 	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400714a	           0xfb602	                   movzx eax, byte [rdx]	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400714d	            0x3c64	                            cmp al, 0x64	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400714f	     0xf8454010000	                            je 0x40072a9	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4007155	            0x3c64	                            cmp al, 0x64	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4007157	            0x773e	                            ja 0x4007197	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4007159	            0x3c36	                            cmp al, 0x36	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400715b	     0xf84f1000000	                            je 0x4007252	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4007161	            0x3c36	                            cmp al, 0x36	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4007163	            0x7715	                            ja 0x400717a	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4007165	            0x3c26	                            cmp al, 0x26	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4007167	     0xf841f010000	                            je 0x400728c	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400716d	            0x3c2e	                            cmp al, 0x2e	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400716f	     0xf84c0000000	                            je 0x4007235	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4007175	      0xe945020000	                           jmp 0x40073bf	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400717a	            0x3c3e	                            cmp al, 0x3e	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400717c	     0xf84ed000000	                            je 0x400726f	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4007182	            0x3c3e	                            cmp al, 0x3e	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4007184	     0xf8235020000	                            jb 0x40073bf	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400718a	          0x8d50c0	                   lea edx, [rax - 0x40]	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400718d	          0x80fa0f	                             cmp dl, 0xf	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4007190	            0x7640	                           jbe 0x40071d2	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4007192	      0xe928020000	                           jmp 0x40073bf	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4007197	            0x3c9b	                            cmp al, 0x9b	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x4007199	     0xf8476010000	                            je 0x4007315	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400719f	            0x3c9b	                            cmp al, 0x9b	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40071a1	            0x771d	                            ja 0x40071c0	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40071a3	            0x3c66	                            cmp al, 0x66	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40071a5	     0xf843e010000	                            je 0x40072e9	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40071ab	            0x3c66	                            cmp al, 0x66	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40071ad	     0xf8216010000	                            jb 0x40072c9	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40071b3	            0x3c67	                            cmp al, 0x67	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40071b5	     0xf8444010000	                            je 0x40072ff	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40071bb	      0xe9ff010000	                           jmp 0x40073bf	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40071c0	            0x3cf2	                            cmp al, 0xf2	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40071c2	            0x744b	                            je 0x400720f	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40071c4	            0x3cf3	                            cmp al, 0xf3	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40071c6	            0x7434	                            je 0x40071fc	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40071c8	            0x3cf0	                            cmp al, 0xf0	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40071ca	     0xf85ef010000	                           jne 0x40073bf	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40071d0	            0xeb50	                           jmp 0x4007222	     12442	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x40071d2	    0x833d00000000	               cmp dword [0x040071d9], 2	     12461	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	IF_1
0x40071d9	     0xf85e0010000	                           jne 0x40073bf	     12461	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	IF_1
0x40071df	           0xfb6c0	                           movzx eax, al	     12462	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	IF_1
0x40071e2	    0x44892d000000	           mov dword [0x040071e9], r13d 	     12465	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x40071e9	    0x8b1500000000	            mov edx, dword [0x040071ef] 	     12537	i386-dis.c	FUNCTION_2	WHILE_1	IF_3
0x40071ef	            0x85d2	                           test edx, edx	     12537	i386-dis.c	FUNCTION_2	WHILE_1	IF_3
0x40071f1	     0xf847a010000	                            je 0x4007371	     12537	i386-dis.c	FUNCTION_2	WHILE_1	IF_3
0x40071f7	      0xe96d010000	                           jmp 0x4007369	     12537	i386-dis.c	FUNCTION_2	WHILE_1	IF_3
0x40071fc	    0x830d00000000	                or dword [0x04007203], 1	     12468	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4007203	    0x44892d000000	           mov dword [0x0400720a], r13d 	     12469	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400720a	      0xe99b0b0000	                           jmp 0x4007daa	     12469	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400720f	    0x830d00000000	                or dword [0x04007216], 2	     12472	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4007216	    0x44892d000000	           mov dword [0x0400721d], r13d 	     12473	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400721d	      0xe9880b0000	                           jmp 0x4007daa	     12473	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4007222	    0x830d00000000	                or dword [0x04007229], 4	     12476	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4007229	    0x44892d000000	           mov dword [0x04007230], r13d 	     12477	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4007230	      0xe9750b0000	                           jmp 0x4007daa	     12477	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4007235	    0x830d00000000	                or dword [0x0400723c], 8	     12480	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400723c	    0x44892d000000	           mov dword [0x04007243], r13d 	     12481	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4007243	    0xc70500000000	               mov dword [0x0400724d], 8	     12482	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400724d	      0xe9580b0000	                           jmp 0x4007daa	     12482	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4007252	    0x830d00000000	             or dword [0x04007259], 0x10	     12485	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4007259	    0x44892d000000	           mov dword [0x04007260], r13d 	     12486	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4007260	    0xc70500000000	           mov dword [0x0400726a], 0x10 	     12487	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400726a	      0xe93b0b0000	                           jmp 0x4007daa	     12487	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400726f	    0x830d00000000	             or dword [0x04007276], 0x20	     12490	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4007276	    0x44892d000000	           mov dword [0x0400727d], r13d 	     12491	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400727d	    0xc70500000000	           mov dword [0x04007287], 0x20 	     12492	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4007287	      0xe91e0b0000	                           jmp 0x4007daa	     12492	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400728c	    0x830d00000000	            or dword [0x04007293], 0x40 	     12495	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4007293	    0x44892d000000	           mov dword [0x0400729a], r13d 	     12496	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400729a	    0xc70500000000	           mov dword [0x040072a4], 0x40 	     12497	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x40072a4	      0xe9010b0000	                           jmp 0x4007daa	     12497	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x40072a9	    0x810d00000000	             or dword [0x040072b3], 0x80	     12500	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x40072b3	    0x44892d000000	           mov dword [0x040072ba], r13d 	     12501	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x40072ba	    0xc70500000000	           mov dword [0x040072c4], 0x80 	     12502	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x40072c4	      0xe9e10a0000	                           jmp 0x4007daa	     12502	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x40072c9	    0x810d00000000	            or dword [0x040072d3], 0x100	     12505	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x40072d3	    0x44892d000000	           mov dword [0x040072da], r13d 	     12506	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x40072da	    0xc70500000000	          mov dword [0x040072e4], 0x100 	     12507	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x40072e4	      0xe9c10a0000	                           jmp 0x4007daa	     12507	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x40072e9	    0x810d00000000	            or dword [0x040072f3], 0x200	     12510	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x40072f3	    0x44892d000000	           mov dword [0x040072fa], r13d 	     12511	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x40072fa	      0xe9ab0a0000	                           jmp 0x4007daa	     12511	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x40072ff	    0x810d00000000	            or dword [0x04007309], 0x400	     12514	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4007309	    0x44892d000000	           mov dword [0x04007310], r13d 	     12515	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4007310	      0xe9950a0000	                           jmp 0x4007daa	     12515	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x4007315	    0x44892d000000	           mov dword [0x0400731c], r13d 	     12521	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1
0x400731c	    0x8b0500000000	            mov eax, dword [0x04007322] 	     12522	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1	IF_2
0x4007322	            0x85c0	                           test eax, eax	     12522	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1	IF_2
0x4007324	            0x7509	                           jne 0x400732f	     12522	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1	IF_2
0x4007326	    0x833d00000000	               cmp dword [0x0400732d], 0	     12522	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1	IF_2
0x400732d	            0x7422	                            je 0x4007351	     12522	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1	IF_2
0x400732f	          0x80cc08	                                or ah, 8	     12524	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1	IF_2
0x4007332	    0x890500000000	            mov dword [0x04007338], eax 	     12524	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1	IF_2
0x4007338	        0x4883c201	                              add rdx, 1	     12525	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1	IF_2
0x400733c	    0x488915000000	            mov qword [0x04007343], rdx 	     12525	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1	IF_2
0x4007343	    0x8b0500000000	            mov eax, dword [0x04007349] 	     12528	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1	IF_2
0x4007349	    0x890500000000	            mov dword [0x0400734f], eax 	     12528	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1	IF_2
0x400734f	            0xeb6e	                           jmp 0x40073bf	     12528	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1	ELSE_1	IF_2
0x4007351	    0xc70500000000	          mov dword [0x0400735b], 0x800 	     12531	i386-dis.c	FUNCTION_2	WHILE_1	SWITCH_1
0x400735b	    0x488b15000000	            mov rdx, qword [0x04007362] 	     12542	i386-dis.c	FUNCTION_2	WHILE_1	IF_4
0x4007362	      0xb800000000	                              mov eax, 0	     12441	i386-dis.c	FUNCTION_2	WHILE_1
0x4007367	            0xeb28	                           jmp 0x4007391	     12441	i386-dis.c	FUNCTION_2	WHILE_1
0x4007369	    0x891500000000	            mov dword [0x0400736f], edx 	     12539	i386-dis.c	FUNCTION_2	WHILE_1	IF_3
0x400736f	            0xeb4e	                           jmp 0x40073bf	     12539	i386-dis.c	FUNCTION_2	WHILE_1	IF_3
0x4007371	    0x488b15000000	            mov rdx, qword [0x04007378] 	     12542	i386-dis.c	FUNCTION_2	WHILE_1	IF_4
0x4007378	           0xfb60a	                   movzx ecx, byte [rdx]	     12542	i386-dis.c	FUNCTION_2	WHILE_1	IF_4
0x400737b	          0x80f99b	                            cmp cl, 0x9b	     12542	i386-dis.c	FUNCTION_2	WHILE_1	IF_4
0x400737e	            0x7411	                            je 0x4007391	     12542	i386-dis.c	FUNCTION_2	WHILE_1	IF_4
0x4007380	          0x4963f5	                        movsxd rsi, r13d	     12543	i386-dis.c	FUNCTION_2	WHILE_1	IF_4
0x4007383	           0xfb6c9	                           movzx ecx, cl	     12543	i386-dis.c	FUNCTION_2	WHILE_1	IF_4
0x4007386	    0x890cb5000000	                  mov dword [rsi*4], ecx	     12543	i386-dis.c	FUNCTION_2	WHILE_1	IF_4
0x400738d	        0x458d6d01	                     lea r13d, [r13 + 1]	     12543	i386-dis.c	FUNCTION_2	WHILE_1	IF_4
0x4007391	    0x890500000000	            mov dword [0x04007397], eax 	     12544	i386-dis.c	FUNCTION_2	WHILE_1
0x4007397	        0x4883c201	                              add rdx, 1	     12545	i386-dis.c	FUNCTION_2	WHILE_1
0x400739b	    0x488915000000	            mov qword [0x040073a2], rdx 	     12545	i386-dis.c	FUNCTION_2	WHILE_1
0x40073a2	        0x4183ee01	                             sub r14d, 1	     12438	i386-dis.c	FUNCTION_2	WHILE_1
0x40073a6	     0xf8577fdffff	                           jne 0x4007123	     12438	i386-dis.c	FUNCTION_2	WHILE_1
0x40073ac	    0x8b0500000000	            mov eax, dword [0x040073b2] 	     13365	i386-dis.c	FUNCTION_10	IF_30	FOR_3	CALL_18
0x40073b2	            0x85c0	                           test eax, eax	     13365	i386-dis.c	FUNCTION_10	IF_30	FOR_3	CALL_18
0x40073b4	     0xf85ff090000	                           jne 0x4007db9	     13365	i386-dis.c	FUNCTION_10	IF_30	FOR_3	CALL_18
0x40073ba	      0xe9c2090000	                           jmp 0x4007d81	     13365	i386-dis.c	FUNCTION_10	IF_30	FOR_3	CALL_18
0x40073bf	    0x833d00000000	               cmp dword [0x040073c6], 0	     13361	i386-dis.c	FUNCTION_10	IF_30	CALL_17
0x40073c6	            0x75e4	                           jne 0x40073ac	     13361	i386-dis.c	FUNCTION_10	IF_30	CALL_17
0x40073c8	            0xeb52	                           jmp 0x400741c	     13361	i386-dis.c	FUNCTION_10	IF_30	CALL_17
0x40073ca	      0x488b442408	                mov rax, qword [rsp + 8]	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x40073cf	          0x4c8b28	                    mov r13, qword [rax]	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x40073d2	          0x4489e6	                           mov esi, r12d	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x40073d5	      0xe8668cffff	                    call sym.prefix_name	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x40073da	          0x4889c1	                            mov rcx, rax	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x40073dd	            0x85db	                           test ebx, ebx	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x40073df	      0xba00000000	                              mov edx, 0	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x40073e4	        0x490f44d6	                          cmove rdx, r14	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x40073e8	        0x4883c504	                              add rbp, 4	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x40073ec	      0x488b442408	                mov rax, qword [rsp + 8]	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x40073f1	        0x488b7808	                mov rdi, qword [rax + 8]	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x40073f5	      0xbe00000000	                              mov esi, 0	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x40073fa	      0xb800000000	                              mov eax, 0	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x40073ff	          0x41ffd5	                                call r13	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x4007402	          0x83c301	                              add ebx, 1	     13366	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x4007405	          0x83fb0e	                            cmp ebx, 0xe	     13364	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x4007408	     0xf846e090000	                            je 0x4007d7c	     13364	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x400740e	          0x8b7d00	                    mov edi, dword [rbp]	     13365	i386-dis.c	FUNCTION_10	IF_30	FOR_3	CALL_18
0x4007411	            0x85ff	                           test edi, edi	     13365	i386-dis.c	FUNCTION_10	IF_30	FOR_3	CALL_18
0x4007413	            0x75b5	                           jne 0x40073ca	     13365	i386-dis.c	FUNCTION_10	IF_30	FOR_3	CALL_18
0x4007415	            0x89d8	                            mov eax, ebx	     13366	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x4007417	      0xe965090000	                           jmp 0x4007d81	     13366	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x400741c	    0x488b05000000	            mov rax, qword [0x04007423] 	     13373	i386-dis.c	FUNCTION_10
0x4007423	    0x488905000000	            mov qword [0x0400742a], rax 	     13373	i386-dis.c	FUNCTION_10
0x400742a	        0x488d7001	                      lea rsi, [rax + 1]	     13375	i386-dis.c	FUNCTION_10
0x400742e	      0x488b442408	                mov rax, qword [rsp + 8]	     13375	i386-dis.c	FUNCTION_10
0x4007433	        0x488b4068	            mov rax, qword [rax + 0x68] 	     13375	i386-dis.c	FUNCTION_10
0x4007437	          0x483b30	                    cmp rsi, qword [rax]	     13375	i386-dis.c	FUNCTION_10
0x400743a	            0x760a	                           jbe 0x4007446	     13375	i386-dis.c	FUNCTION_10
0x400743c	      0x488b7c2408	                mov rdi, qword [rsp + 8]	     13375	i386-dis.c	FUNCTION_10
0x4007441	      0xe865aaffff	                     call sym.fetch_data	     13375	i386-dis.c	FUNCTION_10
0x4007446	    0x488b0d000000	            mov rcx, qword [0x0400744d] 	     13376	i386-dis.c	FUNCTION_10
0x400744d	           0xfb601	                   movzx eax, byte [rcx]	     13376	i386-dis.c	FUNCTION_10
0x4007450	            0x3c62	                            cmp al, 0x62	     13376	i386-dis.c	FUNCTION_10
0x4007452	        0x400f94c6	                                sete sil	     13376	i386-dis.c	FUNCTION_10
0x4007456	            0x3cc8	                            cmp al, 0xc8	     13376	i386-dis.c	FUNCTION_10
0x4007458	           0xf94c2	                                 sete dl	     13376	i386-dis.c	FUNCTION_10
0x400745b	             0x9f2	                             or edx, esi	     13376	i386-dis.c	FUNCTION_10
0x400745d	           0xfb6d2	                           movzx edx, dl	     13376	i386-dis.c	FUNCTION_10
0x4007460	    0x891500000000	            mov dword [0x04007466], edx 	     13376	i386-dis.c	FUNCTION_10
0x4007466	    0xf60500000000	               test byte [0x0400746d], 8	     13378	i386-dis.c	FUNCTION_10	IF_31
0x400746d	     0xf8486000000	                            je 0x40074f9	     13378	i386-dis.c	FUNCTION_10	IF_31
0x4007473	          0x8d5028	                   lea edx, [rax + 0x28]	     13379	i386-dis.c	FUNCTION_10	IF_31
0x4007476	          0x80fa07	                               cmp dl, 7	     13379	i386-dis.c	FUNCTION_10	IF_31
0x4007479	            0x767e	                           jbe 0x40074f9	     13379	i386-dis.c	FUNCTION_10	IF_31
0x400747b	    0x833d00000000	               cmp dword [0x04007482], 0	     13382	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x4007482	            0x7e4c	                           jle 0x40074d0	     13382	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x4007484	    0x8b3d00000000	            mov edi, dword [0x0400748a] 	     13382	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x400748a	            0x85ff	                           test edi, edi	     13382	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x400748c	            0x7449	                            je 0x40074d7	     13382	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x400748e	      0xbd00000000	                              mov ebp, 0	     13382	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x4007493	      0xbb00000000	                              mov ebx, 0	     13382	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x4007498	          0x4489e6	                           mov esi, r12d	     13384	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x400749b	      0xe8a08bffff	                    call sym.prefix_name	     13384	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x40074a0	      0x488b4c2408	                mov rcx, qword [rsp + 8]	     13384	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x40074a5	        0x488b7908	                mov rdi, qword [rcx + 8]	     13384	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x40074a9	          0x4889c2	                            mov rdx, rax	     13384	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x40074ac	      0xbe00000000	                              mov esi, 0	     13384	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x40074b1	      0xb800000000	                              mov eax, 0	     13384	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x40074b6	            0xff11	                        call qword [rcx]	     13384	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x40074b8	          0x83c301	                              add ebx, 1	     13383	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x40074bb	    0x391d00000000	            cmp dword [0x040074c1], ebx 	     13382	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x40074c1	            0x7e19	                           jle 0x40074dc	     13382	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x40074c3	        0x4883c504	                              add rbp, 4	     13382	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x40074c7	          0x8b7dfc	                mov edi, dword [rbp - 4]	     13382	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x40074ca	            0x85ff	                           test edi, edi	     13382	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x40074cc	            0x75ca	                           jne 0x4007498	     13382	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x40074ce	            0xeb0c	                           jmp 0x40074dc	     13382	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x40074d0	      0xbb00000000	                              mov ebx, 0	     13382	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x40074d5	            0xeb05	                           jmp 0x40074dc	     13382	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x40074d7	      0xbb00000000	                              mov ebx, 0	     13382	i386-dis.c	FUNCTION_10	IF_31	FOR_4
0x40074dc	      0x488b542408	                mov rdx, qword [rsp + 8]	     13386	i386-dis.c	FUNCTION_10	IF_31
0x40074e1	        0x488b7a08	                mov rdi, qword [rdx + 8]	     13386	i386-dis.c	FUNCTION_10	IF_31
0x40074e5	      0xbe00000000	                              mov esi, 0	     13386	i386-dis.c	FUNCTION_10	IF_31
0x40074ea	      0xb800000000	                              mov eax, 0	     13386	i386-dis.c	FUNCTION_10	IF_31
0x40074ef	            0xff12	                        call qword [rdx]	     13386	i386-dis.c	FUNCTION_10	IF_31
0x40074f1	          0x8d4301	                      lea eax, [rbx + 1]	     13387	i386-dis.c	FUNCTION_10	IF_31
0x40074f4	      0xe988080000	                           jmp 0x4007d81	     13387	i386-dis.c	FUNCTION_10	IF_31
0x40074f9	            0x3c0f	                             cmp al, 0xf	     13390	i386-dis.c	FUNCTION_10	IF_32
0x40074fb	            0x755a	                           jne 0x4007557	     13390	i386-dis.c	FUNCTION_10	IF_32
0x40074fd	        0x488d4101	                      lea rax, [rcx + 1]	     13394	i386-dis.c	FUNCTION_10	IF_32
0x4007501	    0x488905000000	            mov qword [0x04007508], rax 	     13394	i386-dis.c	FUNCTION_10	IF_32
0x4007508	        0x488d7102	                      lea rsi, [rcx + 2]	     13395	i386-dis.c	FUNCTION_10	IF_32
0x400750c	      0x488b442408	                mov rax, qword [rsp + 8]	     13395	i386-dis.c	FUNCTION_10	IF_32
0x4007511	        0x488b4068	            mov rax, qword [rax + 0x68] 	     13395	i386-dis.c	FUNCTION_10	IF_32
0x4007515	          0x483b30	                    cmp rsi, qword [rax]	     13395	i386-dis.c	FUNCTION_10	IF_32
0x4007518	            0x760a	                           jbe 0x4007524	     13395	i386-dis.c	FUNCTION_10	IF_32
0x400751a	      0x488b7c2408	                mov rdi, qword [rsp + 8]	     13395	i386-dis.c	FUNCTION_10	IF_32
0x400751f	      0xe887a9ffff	                     call sym.fetch_data	     13395	i386-dis.c	FUNCTION_10	IF_32
0x4007524	    0x488b05000000	            mov rax, qword [0x0400752b] 	     13396	i386-dis.c	FUNCTION_10	IF_32
0x400752b	           0xfb610	                   movzx edx, byte [rax]	     13397	i386-dis.c	FUNCTION_10	IF_32
0x400752e	        0x4c8d2c52	                  lea r13, [rdx + rdx*2]	     13397	i386-dis.c	FUNCTION_10	IF_32
0x4007532	        0x49c1e505	                              shl r13, 5	     13397	i386-dis.c	FUNCTION_10	IF_32
0x4007536	    0x4981c5000000	                              add r13, 0	     13397	i386-dis.c	FUNCTION_10	IF_32
0x400753d	     0xfb692000000	                   movzx edx, byte [rdx]	     13398	i386-dis.c	FUNCTION_10	IF_32
0x4007544	    0x881500000000	               mov byte [0x0400754a], dl	     13398	i386-dis.c	FUNCTION_10	IF_32
0x400754a	        0x4883c001	                              add rax, 1	     13399	i386-dis.c	FUNCTION_10	IF_32
0x400754e	    0x488905000000	            mov qword [0x04007555], rax 	     13399	i386-dis.c	FUNCTION_10	IF_32
0x4007555	            0xeb2a	                           jmp 0x4007581	     13399	i386-dis.c	FUNCTION_10	IF_32
0x4007557	           0xfb6c0	                           movzx eax, al	     13403	i386-dis.c	FUNCTION_10	ELSE_19
0x400755a	        0x4c8d2c40	                  lea r13, [rax + rax*2]	     13403	i386-dis.c	FUNCTION_10	ELSE_19
0x400755e	        0x49c1e505	                              shl r13, 5	     13403	i386-dis.c	FUNCTION_10	ELSE_19
0x4007562	    0x4981c5000000	                              add r13, 0	     13403	i386-dis.c	FUNCTION_10	ELSE_19
0x4007569	     0xfb680000000	                   movzx eax, byte [rax]	     13404	i386-dis.c	FUNCTION_10	ELSE_19
0x4007570	    0x880500000000	               mov byte [0x04007576], al	     13404	i386-dis.c	FUNCTION_10	ELSE_19
0x4007576	        0x4883c101	                              add rcx, 1	     13405	i386-dis.c	FUNCTION_10	ELSE_19
0x400757a	    0x48890d000000	            mov qword [0x04007581], rcx 	     13405	i386-dis.c	FUNCTION_10	ELSE_19
0x4007581	    0x8b0500000000	            mov eax, dword [0x04007587] 	     13412	i386-dis.c	FUNCTION_10	IF_33
0x4007587	            0x89c2	                            mov edx, eax	     13412	i386-dis.c	FUNCTION_10	IF_33
0x4007589	    0x81e200040000	                          and edx, 0x400	     13412	i386-dis.c	FUNCTION_10	IF_33
0x400758f	          0x4589e6	                          mov r14d, r12d	     13413	i386-dis.c	FUNCTION_10	IF_33
0x4007592	        0x4183f602	                             xor r14d, 2	     13413	i386-dis.c	FUNCTION_10	IF_33
0x4007596	            0x85d2	                           test edx, edx	     13413	i386-dis.c	FUNCTION_10	IF_33
0x4007598	        0x450f44f4	                        cmove r14d, r12d	     13413	i386-dis.c	FUNCTION_10	IF_33
0x400759c	      0x2500020000	                          and eax, 0x200	     13414	i386-dis.c	FUNCTION_10	IF_34
0x40075a1	          0x4489f2	                           mov edx, r14d	     13415	i386-dis.c	FUNCTION_10	IF_34
0x40075a4	          0x83f201	                              xor edx, 1	     13415	i386-dis.c	FUNCTION_10	IF_34
0x40075a7	            0x85c0	                           test eax, eax	     13415	i386-dis.c	FUNCTION_10	IF_34
0x40075a9	        0x440f45f2	                        cmovne r14d, edx	     13415	i386-dis.c	FUNCTION_10	IF_34
0x40075ad	    0x488b05000000	            mov rax, qword [0x040075b4] 	     13417	i386-dis.c	FUNCTION_10
0x40075b4	    0x488905000000	            mov qword [0x040075bb], rax 	     13417	i386-dis.c	FUNCTION_10
0x40075bb	    0x803d00000000	                cmp byte [0x040075c2], 0	     13418	i386-dis.c	FUNCTION_10	IF_35
0x40075c2	            0x744b	                            je 0x400760f	     13418	i386-dis.c	FUNCTION_10	IF_35
0x40075c4	        0x488d7001	                      lea rsi, [rax + 1]	     13420	i386-dis.c	FUNCTION_10	IF_35
0x40075c8	      0x488b442408	                mov rax, qword [rsp + 8]	     13420	i386-dis.c	FUNCTION_10	IF_35
0x40075cd	        0x488b4068	            mov rax, qword [rax + 0x68] 	     13420	i386-dis.c	FUNCTION_10	IF_35
0x40075d1	          0x483b30	                    cmp rsi, qword [rax]	     13420	i386-dis.c	FUNCTION_10	IF_35
0x40075d4	            0x760a	                           jbe 0x40075e0	     13420	i386-dis.c	FUNCTION_10	IF_35
0x40075d6	      0x488b7c2408	                mov rdi, qword [rsp + 8]	     13420	i386-dis.c	FUNCTION_10	IF_35
0x40075db	      0xe8cba8ffff	                     call sym.fetch_data	     13420	i386-dis.c	FUNCTION_10	IF_35
0x40075e0	    0x488b05000000	            mov rax, qword [0x040075e7] 	     13421	i386-dis.c	FUNCTION_10	IF_35
0x40075e7	           0xfb600	                   movzx eax, byte [rax]	     13421	i386-dis.c	FUNCTION_10	IF_35
0x40075ea	            0x89c2	                            mov edx, eax	     13421	i386-dis.c	FUNCTION_10	IF_35
0x40075ec	          0xc0ea06	                               shr dl, 6	     13421	i386-dis.c	FUNCTION_10	IF_35
0x40075ef	           0xfb6d2	                           movzx edx, dl	     13421	i386-dis.c	FUNCTION_10	IF_35
0x40075f2	    0x891500000000	            mov dword [0x040075f8], edx 	     13421	i386-dis.c	FUNCTION_10	IF_35
0x40075f8	            0x89c2	                            mov edx, eax	     13422	i386-dis.c	FUNCTION_10	IF_35
0x40075fa	          0xc0ea03	                               shr dl, 3	     13422	i386-dis.c	FUNCTION_10	IF_35
0x40075fd	          0x83e207	                              and edx, 7	     13422	i386-dis.c	FUNCTION_10	IF_35
0x4007600	    0x891500000000	            mov dword [0x04007606], edx 	     13422	i386-dis.c	FUNCTION_10	IF_35
0x4007606	          0x83e007	                              and eax, 7	     13423	i386-dis.c	FUNCTION_10	IF_35
0x4007609	    0x890500000000	            mov dword [0x0400760f], eax 	     13423	i386-dis.c	FUNCTION_10	IF_35
0x400760f	    0xc60500000000	                mov byte [0x04007616], 0	     13426	i386-dis.c	FUNCTION_10
0x4007616	    0xc60500000000	                mov byte [0x0400761d], 0	     13427	i386-dis.c	FUNCTION_10
0x400761d	    0xc60500000000	                mov byte [0x04007624], 0	     13428	i386-dis.c	FUNCTION_10
0x4007624	      0xba00000000	                              mov edx, 0	        90	string3.h	FUNCTION_121	CALL_6
0x4007629	      0xb905000000	                              mov ecx, 5	        90	string3.h	FUNCTION_121	CALL_6
0x400762e	      0xb800000000	                              mov eax, 0	        90	string3.h	FUNCTION_121	CALL_6
0x4007633	          0x4889d7	                            mov rdi, rdx	        90	string3.h	FUNCTION_121	CALL_6
0x4007636	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_121	CALL_6
0x4007639	    0xc70700000000	                      mov dword [rdi], 0	        90	string3.h	FUNCTION_121	CALL_6
0x400763f	      0x49837d0000	                      cmp qword [r13], 0	     13431	i386-dis.c	FUNCTION_10	IF_36
0x4007644	     0xf851b020000	                           jne 0x4007865	     13431	i386-dis.c	FUNCTION_10	IF_36
0x400764a	      0x41837d1001	               cmp dword [r13 + 0x10], 1	     13431	i386-dis.c	FUNCTION_10	IF_36
0x400764f	     0xf8510020000	                           jne 0x4007865	     13431	i386-dis.c	FUNCTION_10	IF_36
0x4007655	          0x4489f6	                           mov esi, r14d	     13433	i386-dis.c	FUNCTION_10	IF_36	CALL_22
0x4007658	      0x488b7c2408	                mov rdi, qword [rsp + 8]	     13433	i386-dis.c	FUNCTION_10	IF_36	CALL_22
0x400765d	      0xe8beb5ffff	                        call sym.get_sib	     13433	i386-dis.c	FUNCTION_10	IF_36	CALL_22
0x4007662	    0x488b05000000	            mov rax, qword [0x04007669] 	     13918	i386-dis.c	FUNCTION_13
0x4007669	      0x4889442430	             mov qword [rsp + 0x30], rax	     13918	i386-dis.c	FUNCTION_13
0x400766e	         0xfb640ff	               movzx eax, byte [rax - 1]	     13918	i386-dis.c	FUNCTION_13
0x4007672	        0x8844243f	               mov byte [rsp + 0x3f], al	     13918	i386-dis.c	FUNCTION_13
0x4007676	    0x833d00000000	               cmp dword [0x0400767d], 3	     13920	i386-dis.c	FUNCTION_13	IF_1
0x400767d	            0x744e	                            je 0x40076cd	     13920	i386-dis.c	FUNCTION_13	IF_1
0x400767f	           0xfb6d0	                           movzx edx, al	     13922	i386-dis.c	FUNCTION_13	IF_1
0x4007682	    0x8b0500000000	            mov eax, dword [0x04007688] 	     13922	i386-dis.c	FUNCTION_13	IF_1
0x4007688	    0x448dbcd040f9	         lea r15d, [rax + rdx*8 - 0x6c0]	     13922	i386-dis.c	FUNCTION_13	IF_1
0x4007690	          0x4d63ff	                        movsxd r15, r15d	     13924	i386-dis.c	FUNCTION_13	IF_1	CALL_1
0x4007693	    0x4a8b3cfd0000	                  mov rdi, qword [r15*8]	     13924	i386-dis.c	FUNCTION_13	IF_1	CALL_1
0x400769b	          0x4489f6	                           mov esi, r14d	     13924	i386-dis.c	FUNCTION_13	IF_1	CALL_1
0x400769e	      0xe8038cffff	                          call sym.putop	     13924	i386-dis.c	FUNCTION_13	IF_1	CALL_1
0x40076a3	    0x48c705000000	               mov qword [0x040076ae], 0	     13925	i386-dis.c	FUNCTION_13	IF_1
0x40076ae	    0xc70500000000	               mov dword [0x040076b8], 2	     13926	i386-dis.c	FUNCTION_13	IF_1
0x40076b8	    0x410fb6bf0000	                   movzx edi, byte [r15]	     13927	i386-dis.c	FUNCTION_13	IF_1	CALL_2
0x40076c0	          0x4489f6	                           mov esi, r14d	     13927	i386-dis.c	FUNCTION_13	IF_1	CALL_2
0x40076c3	      0xe82de0ffff	                           call sym.OP_E	     13927	i386-dis.c	FUNCTION_13	IF_1	CALL_2
0x40076c8	      0xe989020000	                           jmp 0x4007956	     13927	i386-dis.c	FUNCTION_13	IF_1	CALL_2
0x40076cd	    0x803d00000000	                cmp byte [0x040076d4], 0	     13931	i386-dis.c	FUNCTION_13
0x40076d4	            0x7505	                           jne 0x40076db	     13931	i386-dis.c	FUNCTION_13
0x40076d6	      0xe800000000	                          call 0x40076db	     13931	i386-dis.c	FUNCTION_13
0x40076db	      0x488b442430	            mov rax, qword [rsp + 0x30] 	     13932	i386-dis.c	FUNCTION_13
0x40076e0	        0x4883c001	                              add rax, 1	     13932	i386-dis.c	FUNCTION_13
0x40076e4	    0x488905000000	            mov qword [0x040076eb], rax 	     13932	i386-dis.c	FUNCTION_13
0x40076eb	       0xfb644243f	           movzx eax, byte [rsp + 0x3f] 	     13934	i386-dis.c	FUNCTION_13
0x40076f0	      0x2dd8000000	                           sub eax, 0xd8	     13934	i386-dis.c	FUNCTION_13
0x40076f5	        0x89442438	             mov dword [rsp + 0x38], eax	     13934	i386-dis.c	FUNCTION_13
0x40076f9	    0x448b3d000000	           mov r15d, dword [0x04007700] 	     13934	i386-dis.c	FUNCTION_13
0x4007700	          0x4963d7	                        movsxd rdx, r15d	     13935	i386-dis.c	FUNCTION_13	IF_2
0x4007703	            0x4898	                                    cdqe	     13935	i386-dis.c	FUNCTION_13	IF_2
0x4007705	        0x488d1452	                  lea rdx, [rdx + rdx*2]	     13935	i386-dis.c	FUNCTION_13	IF_2
0x4007709	        0x48c1e205	                              shl rdx, 5	     13935	i386-dis.c	FUNCTION_13	IF_2
0x400770d	        0x488d0440	                  lea rax, [rax + rax*2]	     13935	i386-dis.c	FUNCTION_13	IF_2
0x4007711	        0x48c1e008	                              shl rax, 8	     13935	i386-dis.c	FUNCTION_13	IF_2
0x4007715	    0x488bbc020000	              mov rdi, qword [rdx + rax]	     13935	i386-dis.c	FUNCTION_13	IF_2
0x400771d	          0x4885ff	                           test rdi, rdi	     13935	i386-dis.c	FUNCTION_13	IF_2
0x4007720	            0x7572	                           jne 0x4007794	     13935	i386-dis.c	FUNCTION_13	IF_2
0x4007722	    0x48630d000000	         movsxd rcx, dword [0x04007729] 	     13937	i386-dis.c	FUNCTION_13	IF_2	CALL_3
0x4007729	          0x4d63ff	                        movsxd r15, r15d	     13937	i386-dis.c	FUNCTION_13	IF_2	CALL_3
0x400772c	      0x4863442438	         movsxd rax, dword [rsp + 0x38] 	     13937	i386-dis.c	FUNCTION_13	IF_2	CALL_3
0x4007731	        0x4b8d147f	                  lea rdx, [r15 + r15*2]	     13937	i386-dis.c	FUNCTION_13	IF_2	CALL_3
0x4007735	        0x48c1e205	                              shl rdx, 5	     13937	i386-dis.c	FUNCTION_13	IF_2	CALL_3
0x4007739	        0x488d0440	                  lea rax, [rax + rax*2]	     13937	i386-dis.c	FUNCTION_13	IF_2	CALL_3
0x400773d	        0x48c1e008	                              shl rax, 8	     13937	i386-dis.c	FUNCTION_13	IF_2	CALL_3
0x4007741	    0x486384020000	           movsxd rax, dword [rdx + rax]	     13937	i386-dis.c	FUNCTION_13	IF_2	CALL_3
0x4007749	        0x488d04c1	                  lea rax, [rcx + rax*8]	     13937	i386-dis.c	FUNCTION_13	IF_2	CALL_3
0x400774d	    0x488b3cc50000	                  mov rdi, qword [rax*8]	     13937	i386-dis.c	FUNCTION_13	IF_2	CALL_3
0x4007755	          0x4489f6	                           mov esi, r14d	     13937	i386-dis.c	FUNCTION_13	IF_2	CALL_3
0x4007758	      0xe8498bffff	                          call sym.putop	     13937	i386-dis.c	FUNCTION_13	IF_2	CALL_3
0x400775d	      0x807c243fdf	            cmp byte [rsp + 0x3f], 0xdf 	     13940	i386-dis.c	FUNCTION_13	IF_2	IF_3
0x4007762	     0xf85ee010000	                           jne 0x4007956	     13940	i386-dis.c	FUNCTION_13	IF_2	IF_3
0x4007768	      0x488b442430	            mov rax, qword [rsp + 0x30] 	     13940	i386-dis.c	FUNCTION_13	IF_2	IF_3
0x400776d	          0x8038e0	                    cmp byte [rax], 0xe0	     13940	i386-dis.c	FUNCTION_13	IF_2	IF_3
0x4007770	     0xf85e0010000	                           jne 0x4007956	     13940	i386-dis.c	FUNCTION_13	IF_2	IF_3
0x4007776	      0xbaf4010000	                          mov edx, 0x1f4	       110	string3.h	FUNCTION_124	CALL_3
0x400777b	    0x488b05000000	            mov rax, qword [0x04007782] 	       110	string3.h	FUNCTION_124	CALL_3
0x4007782	          0x488b30	                    mov rsi, qword [rax]	       110	string3.h	FUNCTION_124	CALL_3
0x4007785	      0xbf00000000	                              mov edi, 0	       110	string3.h	FUNCTION_124	CALL_3
0x400778a	      0xe800000000	                          call 0x400778f	       110	string3.h	FUNCTION_124	CALL_3
0x400778f	      0xe9c2010000	                           jmp 0x4007956	       110	string3.h	FUNCTION_124	CALL_3
0x4007794	          0x4489f6	                           mov esi, r14d	     13945	i386-dis.c	FUNCTION_13	ELSE_1	CALL_5
0x4007797	      0xe80a8bffff	                          call sym.putop	     13945	i386-dis.c	FUNCTION_13	ELSE_1	CALL_5
0x400779c	    0x48c705000000	               mov qword [0x040077a7], 0	     13947	i386-dis.c	FUNCTION_13	ELSE_1
0x40077a7	    0xc70500000000	               mov dword [0x040077b1], 2	     13948	i386-dis.c	FUNCTION_13	ELSE_1
0x40077b1	          0x4963d7	                        movsxd rdx, r15d	     13949	i386-dis.c	FUNCTION_13	ELSE_1	IF_4
0x40077b4	        0x8b742438	            mov esi, dword [rsp + 0x38] 	     13949	i386-dis.c	FUNCTION_13	ELSE_1	IF_4
0x40077b8	            0x89f0	                            mov eax, esi	     13949	i386-dis.c	FUNCTION_13	ELSE_1	IF_4
0x40077ba	            0x4898	                                    cdqe	     13949	i386-dis.c	FUNCTION_13	ELSE_1	IF_4
0x40077bc	        0x488d1452	                  lea rdx, [rdx + rdx*2]	     13949	i386-dis.c	FUNCTION_13	ELSE_1	IF_4
0x40077c0	        0x48c1e205	                              shl rdx, 5	     13949	i386-dis.c	FUNCTION_13	ELSE_1	IF_4
0x40077c4	        0x488d0440	                  lea rax, [rax + rax*2]	     13949	i386-dis.c	FUNCTION_13	ELSE_1	IF_4
0x40077c8	        0x48c1e008	                              shl rax, 8	     13949	i386-dis.c	FUNCTION_13	ELSE_1	IF_4
0x40077cc	    0x488b8c020000	              mov rcx, qword [rdx + rax]	     13949	i386-dis.c	FUNCTION_13	ELSE_1	IF_4
0x40077d4	          0x4885c9	                           test rcx, rcx	     13949	i386-dis.c	FUNCTION_13	ELSE_1	IF_4
0x40077d7	            0x7423	                            je 0x40077fc	     13949	i386-dis.c	FUNCTION_13	ELSE_1	IF_4
0x40077d9	          0x4963d7	                        movsxd rdx, r15d	     13950	i386-dis.c	FUNCTION_13	ELSE_1	IF_4
0x40077dc	            0x89f0	                            mov eax, esi	     13950	i386-dis.c	FUNCTION_13	ELSE_1	IF_4
0x40077de	            0x4898	                                    cdqe	     13950	i386-dis.c	FUNCTION_13	ELSE_1	IF_4
0x40077e0	        0x488d1452	                  lea rdx, [rdx + rdx*2]	     13950	i386-dis.c	FUNCTION_13	ELSE_1	IF_4
0x40077e4	        0x48c1e205	                              shl rdx, 5	     13950	i386-dis.c	FUNCTION_13	ELSE_1	IF_4
0x40077e8	        0x488d0440	                  lea rax, [rax + rax*2]	     13950	i386-dis.c	FUNCTION_13	ELSE_1	IF_4
0x40077ec	        0x48c1e008	                              shl rax, 8	     13950	i386-dis.c	FUNCTION_13	ELSE_1	IF_4
0x40077f0	          0x4489f6	                           mov esi, r14d	     13950	i386-dis.c	FUNCTION_13	ELSE_1	IF_4
0x40077f3	    0x8bbc02000000	              mov edi, dword [rdx + rax]	     13950	i386-dis.c	FUNCTION_13	ELSE_1	IF_4
0x40077fa	            0xffd1	                                call rcx	     13950	i386-dis.c	FUNCTION_13	ELSE_1	IF_4
0x40077fc	    0x48c705000000	               mov qword [0x04007807], 0	     13952	i386-dis.c	FUNCTION_13	ELSE_1
0x4007807	    0xc70500000000	               mov dword [0x04007811], 1	     13953	i386-dis.c	FUNCTION_13	ELSE_1
0x4007811	          0x4963d7	                        movsxd rdx, r15d	     13954	i386-dis.c	FUNCTION_13	ELSE_1	IF_5
0x4007814	        0x8b742438	            mov esi, dword [rsp + 0x38] 	     13954	i386-dis.c	FUNCTION_13	ELSE_1	IF_5
0x4007818	            0x89f0	                            mov eax, esi	     13954	i386-dis.c	FUNCTION_13	ELSE_1	IF_5
0x400781a	            0x4898	                                    cdqe	     13954	i386-dis.c	FUNCTION_13	ELSE_1	IF_5
0x400781c	        0x488d1452	                  lea rdx, [rdx + rdx*2]	     13954	i386-dis.c	FUNCTION_13	ELSE_1	IF_5
0x4007820	        0x48c1e205	                              shl rdx, 5	     13954	i386-dis.c	FUNCTION_13	ELSE_1	IF_5
0x4007824	        0x488d0440	                  lea rax, [rax + rax*2]	     13954	i386-dis.c	FUNCTION_13	ELSE_1	IF_5
0x4007828	        0x48c1e008	                              shl rax, 8	     13954	i386-dis.c	FUNCTION_13	ELSE_1	IF_5
0x400782c	    0x488b8c020000	              mov rcx, qword [rdx + rax]	     13954	i386-dis.c	FUNCTION_13	ELSE_1	IF_5
0x4007834	          0x4885c9	                           test rcx, rcx	     13954	i386-dis.c	FUNCTION_13	ELSE_1	IF_5
0x4007837	     0xf8419010000	                            je 0x4007956	     13954	i386-dis.c	FUNCTION_13	ELSE_1	IF_5
0x400783d	          0x4d63ff	                        movsxd r15, r15d	     13955	i386-dis.c	FUNCTION_13	ELSE_1	IF_5
0x4007840	            0x89f0	                            mov eax, esi	     13955	i386-dis.c	FUNCTION_13	ELSE_1	IF_5
0x4007842	            0x4898	                                    cdqe	     13955	i386-dis.c	FUNCTION_13	ELSE_1	IF_5
0x4007844	        0x4b8d147f	                  lea rdx, [r15 + r15*2]	     13955	i386-dis.c	FUNCTION_13	ELSE_1	IF_5
0x4007848	        0x48c1e205	                              shl rdx, 5	     13955	i386-dis.c	FUNCTION_13	ELSE_1	IF_5
0x400784c	        0x488d0440	                  lea rax, [rax + rax*2]	     13955	i386-dis.c	FUNCTION_13	ELSE_1	IF_5
0x4007850	        0x48c1e008	                              shl rax, 8	     13955	i386-dis.c	FUNCTION_13	ELSE_1	IF_5
0x4007854	          0x4489f6	                           mov esi, r14d	     13955	i386-dis.c	FUNCTION_13	ELSE_1	IF_5
0x4007857	    0x8bbc02000000	              mov edi, dword [rdx + rax]	     13955	i386-dis.c	FUNCTION_13	ELSE_1	IF_5
0x400785e	            0xffd1	                                call rcx	     13955	i386-dis.c	FUNCTION_13	ELSE_1	IF_5
0x4007860	      0xe9f1000000	                           jmp 0x4007956	     13955	i386-dis.c	FUNCTION_13	ELSE_1	IF_5
0x4007865	      0x488b742408	                mov rsi, qword [rsp + 8]	     13438	i386-dis.c	FUNCTION_10	ELSE_20	CALL_24
0x400786a	          0x4c89ef	                            mov rdi, r13	     13438	i386-dis.c	FUNCTION_10	ELSE_20	CALL_24
0x400786d	      0xe851a8ffff	               call sym.get_valid_dis386	     13438	i386-dis.c	FUNCTION_10	ELSE_20	CALL_24
0x4007872	          0x4989c5	                            mov r13, rax	     13438	i386-dis.c	FUNCTION_10	ELSE_20	CALL_24
0x4007875	          0x4885c0	                           test rax, rax	     13439	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	CALL_25
0x4007878	     0xf84d8000000	                            je 0x4007956	     13439	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	CALL_25
0x400787e	          0x4489f6	                           mov esi, r14d	     13439	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	CALL_25
0x4007881	          0x488b38	                    mov rdi, qword [rax]	     13439	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	CALL_25
0x4007884	      0xe81d8affff	                          call sym.putop	     13439	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	CALL_25
0x4007889	            0x85c0	                           test eax, eax	     13439	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	CALL_25
0x400788b	     0xf85c5000000	                           jne 0x4007956	     13439	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	CALL_25
0x4007891	          0x4489f6	                           mov esi, r14d	     13441	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	CALL_26
0x4007894	      0x488b7c2408	                mov rdi, qword [rsp + 8]	     13441	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	CALL_26
0x4007899	      0xe882b3ffff	                        call sym.get_sib	     13441	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	CALL_26
0x400789e	        0x4d8d7d08	                      lea r15, [r13 + 8]	     13441	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	CALL_26
0x40078a2	    0x48c744242800	               mov qword [rsp + 0x28], 0	     13441	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	CALL_26
0x40078ab	    0xc74424240100	               mov dword [rsp + 0x24], 1	     13441	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	CALL_26
0x40078b3	            0xeb0f	                           jmp 0x40078c4	     13441	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	CALL_26
0x40078b5	    0x488344242864	           add qword [rsp + 0x28], 0x64 	     13441	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	CALL_26
0x40078bb	        0x4983c710	                           add r15, 0x10	     13441	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	CALL_26
0x40078bf	      0x8344242401	               add dword [rsp + 0x24], 1	     13441	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	CALL_26
0x40078c4	      0x488b442428	            mov rax, qword [rsp + 0x28] 	     13444	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5
0x40078c9	    0x488905000000	            mov qword [0x040078d0], rax 	     13444	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5
0x40078d0	      0xb805000000	                              mov eax, 5	     13445	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5
0x40078d5	        0x2b442424	             sub eax, dword [rsp + 0x24]	     13445	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5
0x40078d9	    0x890500000000	            mov dword [0x040078df], eax 	     13445	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5
0x40078df	          0x498b07	                    mov rax, qword [r15]	     13446	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_38
0x40078e2	          0x4885c0	                           test rax, rax	     13446	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_38
0x40078e5	            0x7409	                            je 0x40078f0	     13446	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_38
0x40078e7	        0x418b7f08	                mov edi, dword [r15 + 8]	     13447	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_38
0x40078eb	          0x4489f6	                           mov esi, r14d	     13447	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_38
0x40078ee	            0xffd0	                                call rax	     13447	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_38
0x40078f0	      0x837c242401	               cmp dword [rsp + 0x24], 1	     13450	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39
0x40078f5	            0x7554	                           jne 0x400794b	     13450	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39
0x40078f7	    0x833d00000000	               cmp dword [0x040078fe], 0	     13450	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39
0x40078fe	            0x74b5	                            je 0x40078b5	     13450	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39
0x4007900	    0x833d00000000	               cmp dword [0x04007907], 0	     13453	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39	IF_40
0x4007907	            0x742b	                            je 0x4007934	     13453	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39	IF_40
0x4007909	      0xbf00000000	                              mov edi, 0	     13455	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39	IF_40	CALL_27
0x400790e	      0xe88ab3ffff	                        call sym.oappend	     13455	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39	IF_40	CALL_27
0x4007913	    0x486315000000	         movsxd rdx, dword [0x0400791a] 	     13456	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39	IF_40	CALL_28
0x400791a	    0x488b05000000	            mov rax, qword [0x04007921] 	     13456	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39	IF_40	CALL_28
0x4007921	        0x488b3cd0	            mov rdi, qword [rax + rdx*8]	     13456	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39	IF_40	CALL_28
0x4007925	      0xe873b3ffff	                        call sym.oappend	     13456	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39	IF_40	CALL_28
0x400792a	      0xbf00000000	                              mov edi, 0	     13457	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39	IF_40	CALL_29
0x400792f	      0xe869b3ffff	                        call sym.oappend	     13457	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39	IF_40	CALL_29
0x4007934	    0x833d00000000	               cmp dword [0x0400793b], 0	     13459	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39	IF_41
0x400793b	     0xf8474ffffff	                            je 0x40078b5	     13459	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39	IF_41
0x4007941	      0xbf00000000	                              mov edi, 0	     13460	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39	CALL_30
0x4007946	      0xe852b3ffff	                        call sym.oappend	     13460	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5	IF_39	CALL_30
0x400794b	      0x837c242404	               cmp dword [rsp + 0x24], 4	     13442	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5
0x4007950	     0xf8e5fffffff	                           jle 0x40078b5	     13442	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	FOR_5
0x4007956	    0x833d00000000	               cmp dword [0x0400795d], 0	     13467	i386-dis.c	FUNCTION_10	IF_42
0x400795d	            0x7525	                           jne 0x4007984	     13467	i386-dis.c	FUNCTION_10	IF_42
0x400795f	    0x8b0500000000	            mov eax, dword [0x04007965] 	     13467	i386-dis.c	FUNCTION_10	IF_42
0x4007965	    0x390500000000	            cmp dword [0x0400796b], eax 	     13467	i386-dis.c	FUNCTION_10	IF_42
0x400796b	            0x7517	                           jne 0x4007984	     13467	i386-dis.c	FUNCTION_10	IF_42
0x400796d	    0x8b0500000000	            mov eax, dword [0x04007973] 	     13467	i386-dis.c	FUNCTION_10	IF_42
0x4007973	            0x85c0	                           test eax, eax	     13467	i386-dis.c	FUNCTION_10	IF_42
0x4007975	            0x780d	                            js 0x4007984	     13467	i386-dis.c	FUNCTION_10	IF_42
0x4007977	            0x4898	                                    cdqe	     13468	i386-dis.c	FUNCTION_10	IF_42
0x4007979	    0xc70485000000	                    mov dword [rax*4], 0	     13468	i386-dis.c	FUNCTION_10	IF_42
0x4007984	    0x8b0500000000	            mov eax, dword [0x0400798a] 	     13471	i386-dis.c	FUNCTION_10	IF_43
0x400798a	      0xa9f8010000	                         test eax, 0x1f8	     13471	i386-dis.c	FUNCTION_10	IF_43
0x400798f	            0x7420	                            je 0x40079b1	     13471	i386-dis.c	FUNCTION_10	IF_43
0x4007991	    0x8b1500000000	            mov edx, dword [0x04007997] 	     13473	i386-dis.c	FUNCTION_10	IF_43
0x4007997	    0x851500000000	           test dword [0x0400799d], edx 	     13473	i386-dis.c	FUNCTION_10	IF_43
0x400799d	            0x7412	                            je 0x40079b1	     13473	i386-dis.c	FUNCTION_10	IF_43
0x400799f	    0x486315000000	         movsxd rdx, dword [0x040079a6] 	     13474	i386-dis.c	FUNCTION_10	IF_43
0x40079a6	    0xc70495000000	                    mov dword [rdx*4], 0	     13474	i386-dis.c	FUNCTION_10	IF_43
0x40079b1	          0xf6c404	                              test ah, 4	     13477	i386-dis.c	FUNCTION_10	IF_44
0x40079b4	            0x741b	                            je 0x40079d1	     13477	i386-dis.c	FUNCTION_10	IF_44
0x40079b6	    0xf60500000000	               test byte [0x040079bd], 4	     13478	i386-dis.c	FUNCTION_10	IF_44
0x40079bd	            0x7412	                            je 0x40079d1	     13478	i386-dis.c	FUNCTION_10	IF_44
0x40079bf	    0x486315000000	         movsxd rdx, dword [0x040079c6] 	     13479	i386-dis.c	FUNCTION_10	IF_44
0x40079c6	    0xc70495000000	                    mov dword [rdx*4], 0	     13479	i386-dis.c	FUNCTION_10	IF_44
0x40079d1	          0xf6c402	                              test ah, 2	     13482	i386-dis.c	FUNCTION_10	IF_45
0x40079d4	            0x741b	                            je 0x40079f1	     13482	i386-dis.c	FUNCTION_10	IF_45
0x40079d6	    0xf60500000000	               test byte [0x040079dd], 2	     13483	i386-dis.c	FUNCTION_10	IF_45
0x40079dd	            0x7412	                            je 0x40079f1	     13483	i386-dis.c	FUNCTION_10	IF_45
0x40079df	    0x486305000000	         movsxd rax, dword [0x040079e6] 	     13484	i386-dis.c	FUNCTION_10	IF_45
0x40079e6	    0xc70485000000	                    mov dword [rax*4], 0	     13484	i386-dis.c	FUNCTION_10	IF_45
0x40079f1	    0x41be00000000	                             mov r14d, 0	     13441	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	CALL_26
0x40079f7	    0x49c7c7ffffff	             mov r15, 0xffffffffffffffff	     13495	i386-dis.c	FUNCTION_10	FOR_6	IF_46	CALL_34
0x40079fe	          0x8b7d00	                    mov edi, dword [rbp]	     13489	i386-dis.c	FUNCTION_10	FOR_6	IF_46
0x4007a01	            0x85ff	                           test edi, edi	     13489	i386-dis.c	FUNCTION_10	FOR_6	IF_46
0x4007a03	            0x7441	                            je 0x4007a46	     13489	i386-dis.c	FUNCTION_10	FOR_6	IF_46
0x4007a05	          0x4489e6	                           mov esi, r12d	     13492	i386-dis.c	FUNCTION_10	FOR_6	IF_46	CALL_32
0x4007a08	      0xe83386ffff	                    call sym.prefix_name	     13492	i386-dis.c	FUNCTION_10	FOR_6	IF_46	CALL_32
0x4007a0d	          0x4889c2	                            mov rdx, rax	     13492	i386-dis.c	FUNCTION_10	FOR_6	IF_46	CALL_32
0x4007a10	          0x4885c0	                           test rax, rax	     13493	i386-dis.c	FUNCTION_10	FOR_6	IF_46	IF_47
0x4007a13	            0x7505	                           jne 0x4007a1a	     13493	i386-dis.c	FUNCTION_10	FOR_6	IF_46	IF_47
0x4007a15	      0xe800000000	                          call 0x4007a1a	     13494	i386-dis.c	FUNCTION_10	FOR_6	IF_46	CALL_33
0x4007a1a	      0xb800000000	                              mov eax, 0	     13495	i386-dis.c	FUNCTION_10	FOR_6	IF_46	CALL_34
0x4007a1f	          0x4c89f9	                            mov rcx, r15	     13495	i386-dis.c	FUNCTION_10	FOR_6	IF_46	CALL_34
0x4007a22	          0x4889d7	                            mov rdi, rdx	     13495	i386-dis.c	FUNCTION_10	FOR_6	IF_46	CALL_34
0x4007a25	            0xf2ae	              repne scasb al, byte [rdi]	     13495	i386-dis.c	FUNCTION_10	FOR_6	IF_46	CALL_34
0x4007a27	          0x4889c8	                            mov rax, rcx	     13495	i386-dis.c	FUNCTION_10	FOR_6	IF_46	CALL_34
0x4007a2a	          0x48f7d0	                                 not rax	     13495	i386-dis.c	FUNCTION_10	FOR_6	IF_46	CALL_34
0x4007a2d	        0x458d3406	                   lea r14d, [r14 + rax]	     13495	i386-dis.c	FUNCTION_10	FOR_6	IF_46	CALL_34
0x4007a31	      0x488b4c2408	                mov rcx, qword [rsp + 8]	     13496	i386-dis.c	FUNCTION_10	FOR_6	IF_46
0x4007a36	        0x488b7908	                mov rdi, qword [rcx + 8]	     13496	i386-dis.c	FUNCTION_10	FOR_6	IF_46
0x4007a3a	      0xbe00000000	                              mov esi, 0	     13496	i386-dis.c	FUNCTION_10	FOR_6	IF_46
0x4007a3f	      0xb800000000	                              mov eax, 0	     13496	i386-dis.c	FUNCTION_10	FOR_6	IF_46
0x4007a44	            0xff11	                        call qword [rcx]	     13496	i386-dis.c	FUNCTION_10	FOR_6	IF_46
0x4007a46	        0x4883c504	                              add rbp, 4	     13496	i386-dis.c	FUNCTION_10	FOR_6	IF_46
0x4007a4a	          0x4839eb	                            cmp rbx, rbp	     13488	i386-dis.c	FUNCTION_10	FOR_6	CALL_31
0x4007a4d	            0x75af	                           jne 0x40079fe	     13488	i386-dis.c	FUNCTION_10	FOR_6	CALL_31
0x4007a4f	    0x41817d580302	          cmp dword [r13 + 0x58], 0x203 	     13505	i386-dis.c	FUNCTION_10	IF_48
0x4007a57	            0x755a	                           jne 0x4007ab3	     13505	i386-dis.c	FUNCTION_10	IF_48
0x4007a59	    0x4981fd000000	                              cmp r13, 0	     13505	i386-dis.c	FUNCTION_10	IF_48
0x4007a60	            0x7451	                            je 0x4007ab3	     13505	i386-dis.c	FUNCTION_10	IF_48
0x4007a62	    0x8b0500000000	            mov eax, dword [0x04007a68] 	     13507	i386-dis.c	FUNCTION_10	IF_48
0x4007a68	            0xa803	                              test al, 3	     13506	i386-dis.c	FUNCTION_10	IF_48
0x4007a6a	            0x7409	                            je 0x4007a75	     13506	i386-dis.c	FUNCTION_10	IF_48
0x4007a6c	    0xf60500000000	               test byte [0x04007a73], 3	     13508	i386-dis.c	FUNCTION_10	IF_48
0x4007a73	            0x7415	                            je 0x4007a8a	     13508	i386-dis.c	FUNCTION_10	IF_48
0x4007a75	      0x2503020000	                          and eax, 0x203	     13510	i386-dis.c	FUNCTION_10	IF_48
0x4007a7a	      0x3d00020000	                          cmp eax, 0x200	     13510	i386-dis.c	FUNCTION_10	IF_48
0x4007a7f	            0x7532	                           jne 0x4007ab3	     13510	i386-dis.c	FUNCTION_10	IF_48
0x4007a81	    0xf60500000000	               test byte [0x04007a88], 2	     13513	i386-dis.c	FUNCTION_10	IF_48
0x4007a88	            0x7529	                           jne 0x4007ab3	     13513	i386-dis.c	FUNCTION_10	IF_48
0x4007a8a	      0x488b5c2408	                mov rbx, qword [rsp + 8]	     13515	i386-dis.c	FUNCTION_10	IF_48
0x4007a8f	        0x488b7b08	                mov rdi, qword [rbx + 8]	     13515	i386-dis.c	FUNCTION_10	IF_48
0x4007a93	      0xbe00000000	                              mov esi, 0	     13515	i386-dis.c	FUNCTION_10	IF_48
0x4007a98	      0xb800000000	                              mov eax, 0	     13515	i386-dis.c	FUNCTION_10	IF_48
0x4007a9d	            0xff13	                        call qword [rbx]	     13515	i386-dis.c	FUNCTION_10	IF_48
0x4007a9f	      0x488d442478	                   lea rax, [rsp + 0x78]	     13516	i386-dis.c	FUNCTION_10	IF_48
0x4007aa4	    0x8b1d00000000	            mov ebx, dword [0x04007aaa] 	     13516	i386-dis.c	FUNCTION_10	IF_48
0x4007aaa	            0x29c3	                            sub ebx, eax	     13516	i386-dis.c	FUNCTION_10	IF_48
0x4007aac	            0x89d8	                            mov eax, ebx	     13516	i386-dis.c	FUNCTION_10	IF_48
0x4007aae	      0xe9ce020000	                           jmp 0x4007d81	     13516	i386-dis.c	FUNCTION_10	IF_48
0x4007ab3	    0x488b05000000	            mov rax, qword [0x04007aba] 	     13520	i386-dis.c	FUNCTION_10	IF_49
0x4007aba	    0x482b05000000	             sub rax, qword [0x04007ac1]	     13520	i386-dis.c	FUNCTION_10	IF_49
0x4007ac1	        0x4883f80f	                            cmp rax, 0xf	     13520	i386-dis.c	FUNCTION_10	IF_49
0x4007ac5	            0x7e1f	                           jle 0x4007ae6	     13520	i386-dis.c	FUNCTION_10	IF_49
0x4007ac7	      0x488b5c2408	                mov rbx, qword [rsp + 8]	     13522	i386-dis.c	FUNCTION_10	IF_49
0x4007acc	        0x488b7b08	                mov rdi, qword [rbx + 8]	     13522	i386-dis.c	FUNCTION_10	IF_49
0x4007ad0	      0xbe00000000	                              mov esi, 0	     13522	i386-dis.c	FUNCTION_10	IF_49
0x4007ad5	      0xb800000000	                              mov eax, 0	     13522	i386-dis.c	FUNCTION_10	IF_49
0x4007ada	            0xff13	                        call qword [rbx]	     13522	i386-dis.c	FUNCTION_10	IF_49
0x4007adc	      0xb80f000000	                            mov eax, 0xf	     13523	i386-dis.c	FUNCTION_10	IF_49
0x4007ae1	      0xe99b020000	                           jmp 0x4007d81	     13523	i386-dis.c	FUNCTION_10	IF_49
0x4007ae6	    0x488b05000000	            mov rax, qword [0x04007aed] 	     13526	i386-dis.c	FUNCTION_10
0x4007aed	    0x488905000000	            mov qword [0x04007af4], rax 	     13526	i386-dis.c	FUNCTION_10
0x4007af4	      0xbf00000000	                              mov edi, 0	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x4007af9	      0xb800000000	                              mov eax, 0	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x4007afe	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x4007b05	            0xf2ae	              repne scasb al, byte [rdi]	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x4007b07	          0x4889c8	                            mov rax, rcx	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x4007b0a	          0x48f7d0	                                 not rax	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x4007b0d	      0x418d5c06ff	                lea ebx, [r14 + rax - 1]	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x4007b12	          0x83fb05	                              cmp ebx, 5	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x4007b15	            0x7f12	                            jg 0x4007b29	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x4007b17	      0xbf00000000	                              mov edi, 0	     13528	i386-dis.c	FUNCTION_10	CALL_36
0x4007b1c	      0xe87cb1ffff	                        call sym.oappend	     13528	i386-dis.c	FUNCTION_10	CALL_36
0x4007b21	          0x83c301	                              add ebx, 1	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x4007b24	          0x83fb06	                              cmp ebx, 6	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x4007b27	            0x75ee	                           jne 0x4007b17	     13527	i386-dis.c	FUNCTION_10	FOR_7	CALL_35
0x4007b29	      0xbf00000000	                              mov edi, 0	     13529	i386-dis.c	FUNCTION_10	CALL_37
0x4007b2e	      0xe86ab1ffff	                        call sym.oappend	     13529	i386-dis.c	FUNCTION_10	CALL_37
0x4007b33	      0x488b5c2408	                mov rbx, qword [rsp + 8]	     13530	i386-dis.c	FUNCTION_10
0x4007b38	        0x488b7b08	                mov rdi, qword [rbx + 8]	     13530	i386-dis.c	FUNCTION_10
0x4007b3c	      0xba00000000	                              mov edx, 0	     13530	i386-dis.c	FUNCTION_10
0x4007b41	      0xbe00000000	                              mov esi, 0	     13530	i386-dis.c	FUNCTION_10
0x4007b46	      0xb800000000	                              mov eax, 0	     13530	i386-dis.c	FUNCTION_10
0x4007b4b	            0xff13	                        call qword [rbx]	     13530	i386-dis.c	FUNCTION_10
0x4007b4d	     0xfb605000000	           movzx eax, byte [0x04007b54] 	     13534	i386-dis.c	FUNCTION_10	IF_50
0x4007b54	            0x84c0	                             test al, al	     13534	i386-dis.c	FUNCTION_10	IF_50
0x4007b56	            0x7438	                            je 0x4007b90	     13534	i386-dis.c	FUNCTION_10	IF_50
0x4007b58	    0x48c744244000	               mov qword [rsp + 0x40], 0	     13539	i386-dis.c	FUNCTION_10	IF_50	FOR_8
0x4007b61	    0x48c744244800	               mov qword [rsp + 0x48], 0	     13539	i386-dis.c	FUNCTION_10	IF_50	FOR_8
0x4007b6a	    0x48c744245000	               mov qword [rsp + 0x50], 0	     13539	i386-dis.c	FUNCTION_10	IF_50	FOR_8
0x4007b73	    0x48c744245800	               mov qword [rsp + 0x58], 0	     13539	i386-dis.c	FUNCTION_10	IF_50	FOR_8
0x4007b7c	    0x48c744246000	               mov qword [rsp + 0x60], 0	     13539	i386-dis.c	FUNCTION_10	IF_50	FOR_8
0x4007b85	          0x4d85ed	                           test r13, r13	     13541	i386-dis.c	FUNCTION_10	IF_50	IF_51
0x4007b88	            0x7441	                            je 0x4007bcb	     13541	i386-dis.c	FUNCTION_10	IF_50	IF_51
0x4007b8a	            0x84c0	                             test al, al	     13541	i386-dis.c	FUNCTION_10	IF_50	IF_51
0x4007b8c	            0x7510	                           jne 0x4007b9e	     13541	i386-dis.c	FUNCTION_10	IF_50	IF_51
0x4007b8e	            0xeb3b	                           jmp 0x4007bcb	     13541	i386-dis.c	FUNCTION_10	IF_50	IF_51
0x4007b90	    0x833d00000000	               cmp dword [0x04007b97], 0	     13534	i386-dis.c	FUNCTION_10	IF_50
0x4007b97	            0x75bf	                           jne 0x4007b58	     13534	i386-dis.c	FUNCTION_10	IF_50
0x4007b99	      0xe9a7000000	                           jmp 0x4007c45	     13534	i386-dis.c	FUNCTION_10	IF_50
0x4007b9e	    0x49817d280000	               cmp qword [r13 + 0x28], 0	     13541	i386-dis.c	FUNCTION_10	IF_50	IF_51
0x4007ba6	            0x7523	                           jne 0x4007bcb	     13541	i386-dis.c	FUNCTION_10	IF_50	IF_51
0x4007ba8	    0x49817d380000	               cmp qword [r13 + 0x38], 0	     13542	i386-dis.c	FUNCTION_10	IF_50	IF_51
0x4007bb0	            0x7519	                           jne 0x4007bcb	     13542	i386-dis.c	FUNCTION_10	IF_50	IF_51
0x4007bb2	      0x49837d4800	               cmp qword [r13 + 0x48], 0	     13542	i386-dis.c	FUNCTION_10	IF_50	IF_51
0x4007bb7	            0x7512	                           jne 0x4007bcb	     13542	i386-dis.c	FUNCTION_10	IF_50	IF_51
0x4007bb9	    0x48c744245000	               mov qword [rsp + 0x50], 0	     13544	i386-dis.c	FUNCTION_10	IF_50	IF_51
0x4007bc2	    0x48c744245800	               mov qword [rsp + 0x58], 0	     13545	i386-dis.c	FUNCTION_10	IF_50	IF_51
0x4007bcb	    0x8b0500000000	            mov eax, dword [0x04007bd1] 	     13550	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4007bd1	    0x8b1500000000	            mov edx, dword [0x04007bd7] 	     13551	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4007bd7	    0x891500000000	            mov dword [0x04007bdd], edx 	     13551	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4007bdd	    0x890500000000	            mov dword [0x04007be3], eax 	     13552	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4007be3	    0x488b05000000	            mov rax, qword [0x04007bea] 	     13553	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4007bea	    0x488b15000000	            mov rdx, qword [0x04007bf1] 	     13554	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4007bf1	    0x488915000000	            mov qword [0x04007bf8], rdx 	     13554	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4007bf8	    0x488905000000	            mov qword [0x04007bff], rax 	     13555	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4007bff	    0x8b0500000000	            mov eax, dword [0x04007c05] 	     13550	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4007c05	    0x8b1500000000	            mov edx, dword [0x04007c0b] 	     13551	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4007c0b	    0x891500000000	            mov dword [0x04007c11], edx 	     13551	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4007c11	    0x890500000000	            mov dword [0x04007c17], eax 	     13552	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4007c17	    0x488b15000000	            mov rdx, qword [0x04007c1e] 	     13553	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4007c1e	    0x488b0d000000	            mov rcx, qword [0x04007c25] 	     13554	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4007c25	    0x48890d000000	            mov qword [0x04007c2c], rcx 	     13554	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4007c2c	    0x488915000000	            mov qword [0x04007c33], rdx 	     13555	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4007c33	    0x890500000000	            mov dword [0x04007c39], eax 	     13555	i386-dis.c	FUNCTION_10	IF_50	FOR_9
0x4007c39	      0xbb00000000	                              mov ebx, 0	     13441	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	CALL_26
0x4007c3e	      0xb800000000	                              mov eax, 0	     13441	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	CALL_26
0x4007c43	            0xeb2f	                           jmp 0x4007c74	     13441	i386-dis.c	FUNCTION_10	ELSE_20	IF_37	CALL_26
0x4007c45	    0x48c744246000	               mov qword [rsp + 0x60], 0	     13561	i386-dis.c	FUNCTION_10	ELSE_21	FOR_10
0x4007c4e	    0x48c744245800	               mov qword [rsp + 0x58], 0	     13561	i386-dis.c	FUNCTION_10	ELSE_21	FOR_10
0x4007c57	    0x48c744245000	               mov qword [rsp + 0x50], 0	     13561	i386-dis.c	FUNCTION_10	ELSE_21	FOR_10
0x4007c60	    0x48c744244800	               mov qword [rsp + 0x48], 0	     13561	i386-dis.c	FUNCTION_10	ELSE_21	FOR_10
0x4007c69	    0x48c744244000	               mov qword [rsp + 0x40], 0	     13561	i386-dis.c	FUNCTION_10	ELSE_21	FOR_10
0x4007c72	            0xebc5	                           jmp 0x4007c39	     13561	i386-dis.c	FUNCTION_10	ELSE_21	FOR_10
0x4007c74	      0x488b6c5c40	    mov rbp, qword [rsp + rbx*2 + 0x40] 	     13566	i386-dis.c	FUNCTION_10	FOR_11	IF_52
0x4007c79	        0x807d0000	                       cmp byte [rbp], 0	     13566	i386-dis.c	FUNCTION_10	FOR_11	IF_52
0x4007c7d	            0x746b	                            je 0x4007cea	     13566	i386-dis.c	FUNCTION_10	FOR_11	IF_52
0x4007c7f	            0x85c0	                           test eax, eax	     13568	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_53
0x4007c81	            0x7415	                            je 0x4007c98	     13568	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_53
0x4007c83	      0x488b542408	                mov rdx, qword [rsp + 8]	     13569	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_53
0x4007c88	        0x488b7a08	                mov rdi, qword [rdx + 8]	     13569	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_53
0x4007c8c	      0xbe00000000	                              mov esi, 0	     13569	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_53
0x4007c91	      0xb800000000	                              mov eax, 0	     13569	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_53
0x4007c96	            0xff12	                        call qword [rdx]	     13569	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_53
0x4007c98	    0x8b8300000000	                    mov eax, dword [rbx]	     13570	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_54
0x4007c9e	          0x83f8ff	             cmp eax, 0xffffffffffffffff	     13570	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_54
0x4007ca1	            0x742a	                            je 0x4007ccd	     13570	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_54
0x4007ca3	    0x4883bc1b0000	                cmp qword [rbx + rbx], 0	     13570	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_54
0x4007cac	            0x751f	                           jne 0x4007ccd	     13570	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_54
0x4007cae	            0x4898	                                    cdqe	     13571	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_54
0x4007cb0	    0x488b3cc50000	                  mov rdi, qword [rax*8]	     13571	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_54
0x4007cb8	      0x488b442408	                mov rax, qword [rsp + 8]	     13571	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_54
0x4007cbd	          0x4889c6	                            mov rsi, rax	     13571	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_54
0x4007cc0	    0xff9080000000	                 call qword [rax + 0x80]	     13571	i386-dis.c	FUNCTION_10	FOR_11	IF_52	IF_54
0x4007cc6	      0xb801000000	                              mov eax, 1	     13574	i386-dis.c	FUNCTION_10	FOR_11	IF_52
0x4007ccb	            0xeb1d	                           jmp 0x4007cea	     13574	i386-dis.c	FUNCTION_10	FOR_11	IF_52
0x4007ccd	      0x488b4c2408	                mov rcx, qword [rsp + 8]	     13573	i386-dis.c	FUNCTION_10	FOR_11	IF_52	ELSE_22
0x4007cd2	        0x488b7908	                mov rdi, qword [rcx + 8]	     13573	i386-dis.c	FUNCTION_10	FOR_11	IF_52	ELSE_22
0x4007cd6	          0x4889ea	                            mov rdx, rbp	     13573	i386-dis.c	FUNCTION_10	FOR_11	IF_52	ELSE_22
0x4007cd9	      0xbe00000000	                              mov esi, 0	     13573	i386-dis.c	FUNCTION_10	FOR_11	IF_52	ELSE_22
0x4007cde	      0xb800000000	                              mov eax, 0	     13573	i386-dis.c	FUNCTION_10	FOR_11	IF_52	ELSE_22
0x4007ce3	            0xff11	                        call qword [rcx]	     13573	i386-dis.c	FUNCTION_10	FOR_11	IF_52	ELSE_22
0x4007ce5	      0xb801000000	                              mov eax, 1	     13574	i386-dis.c	FUNCTION_10	FOR_11	IF_52
0x4007cea	        0x4883c304	                              add rbx, 4	     13574	i386-dis.c	FUNCTION_10	FOR_11	IF_52
0x4007cee	        0x4883fb14	                           cmp rbx, 0x14	     13565	i386-dis.c	FUNCTION_10	FOR_11
0x4007cf2	            0x7580	                           jne 0x4007c74	     13565	i386-dis.c	FUNCTION_10	FOR_11
0x4007cf4	      0xb800000000	                              mov eax, 0	     13565	i386-dis.c	FUNCTION_10	FOR_11
0x4007cf9	            0x89c3	                            mov ebx, eax	     13565	i386-dis.c	FUNCTION_10	FOR_11
0x4007cfb	    0x833c85000000	   cmp dword [rax*4], 0xffffffffffffffff	     13578	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4007d03	            0x7455	                            je 0x4007d5a	     13578	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4007d05	    0x48833cc50000	                    cmp qword [rax*8], 0	     13578	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4007d0e	            0x744a	                            je 0x4007d5a	     13578	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4007d10	      0x4c8b7c2408	                mov r15, qword [rsp + 8]	     13580	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4007d15	        0x498b7f08	                mov rdi, qword [r15 + 8]	     13580	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4007d19	      0xbe00000000	                              mov esi, 0	     13580	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4007d1e	      0xb800000000	                              mov eax, 0	     13580	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4007d23	          0x41ff17	                        call qword [r15]	     13580	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4007d26	    0x488b3d000000	            mov rdi, qword [0x04007d2d] 	     13581	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4007d2d	    0x482b3d000000	             sub rdi, qword [0x04007d34]	     13581	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4007d34	    0x48033d000000	             add rdi, qword [0x04007d3b]	     13581	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4007d3b	          0x4863db	                         movsxd rbx, ebx	     13582	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4007d3e	    0x4863049d0000	               movsxd rax, dword [rbx*4]	     13582	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4007d46	    0x48033cc50000	                  add rdi, qword [rax*8]	     13581	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4007d4e	          0x4c89fe	                            mov rsi, r15	     13581	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4007d51	    0x41ff97800000	                 call qword [r15 + 0x80]	     13581	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4007d58	            0xeb0a	                           jmp 0x4007d64	     13581	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4007d5a	        0x4883c001	                              add rax, 1	     13581	i386-dis.c	FUNCTION_10	FOR_12	IF_55
0x4007d5e	        0x4883f805	                              cmp rax, 5	     13577	i386-dis.c	FUNCTION_10	FOR_12
0x4007d62	            0x7595	                           jne 0x4007cf9	     13577	i386-dis.c	FUNCTION_10	FOR_12
0x4007d64	      0x488d442478	                   lea rax, [rsp + 0x78]	     13585	i386-dis.c	FUNCTION_10
0x4007d69	    0x8b1d00000000	            mov ebx, dword [0x04007d6f] 	     13585	i386-dis.c	FUNCTION_10
0x4007d6f	            0x29c3	                            sub ebx, eax	     13585	i386-dis.c	FUNCTION_10
0x4007d71	            0x89d8	                            mov eax, ebx	     13585	i386-dis.c	FUNCTION_10
0x4007d73	            0xeb0c	                           jmp 0x4007d81	     13585	i386-dis.c	FUNCTION_10
0x4007d75	      0xb8ffffffff	                     mov eax, 0xffffffff	     13355	i386-dis.c	FUNCTION_10	IF_27
0x4007d7a	            0xeb05	                           jmp 0x4007d81	     13355	i386-dis.c	FUNCTION_10	IF_27
0x4007d7c	      0xb80e000000	                            mov eax, 0xe	     13366	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x4007d81	    0x488b9c246801	           mov rbx, qword [rsp + 0x168] 	     13586	i386-dis.c	FUNCTION_10
0x4007d89	    0x6448331c2528	                xor rbx, qword fs:[0x28]	     13586	i386-dis.c	FUNCTION_10
0x4007d92	            0x7456	                            je 0x4007dea	     13586	i386-dis.c	FUNCTION_10
0x4007d94	            0xeb4f	                           jmp 0x4007de5	     13586	i386-dis.c	FUNCTION_10
0x4007d96	    0x488b15000000	            mov rdx, qword [0x04007d9d] 	     12542	i386-dis.c	FUNCTION_2	WHILE_1	IF_4
0x4007d9d	           0xfb60a	                   movzx ecx, byte [rdx]	     12542	i386-dis.c	FUNCTION_2	WHILE_1	IF_4
0x4007da0	      0xb800000000	                              mov eax, 0	     12542	i386-dis.c	FUNCTION_2	WHILE_1	IF_4
0x4007da5	      0xe9d6f5ffff	                           jmp 0x4007380	     12542	i386-dis.c	FUNCTION_2	WHILE_1	IF_4
0x4007daa	    0x8b1500000000	            mov edx, dword [0x04007db0] 	     12537	i386-dis.c	FUNCTION_2	WHILE_1	IF_3
0x4007db0	            0x85d2	                           test edx, edx	     12537	i386-dis.c	FUNCTION_2	WHILE_1	IF_3
0x4007db2	            0x74e2	                            je 0x4007d96	     12537	i386-dis.c	FUNCTION_2	WHILE_1	IF_3
0x4007db4	      0xe9b0f5ffff	                           jmp 0x4007369	     12537	i386-dis.c	FUNCTION_2	WHILE_1	IF_3
0x4007db9	      0x488b5c2408	                mov rbx, qword [rsp + 8]	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x4007dbe	          0x4c8b2b	                    mov r13, qword [rbx]	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x4007dc1	          0x4489e6	                           mov esi, r12d	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x4007dc4	            0x89c7	                            mov edi, eax	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x4007dc6	      0xe87582ffff	                    call sym.prefix_name	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x4007dcb	          0x4889c1	                            mov rcx, rax	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x4007dce	      0xbd00000000	                              mov ebp, 0	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x4007dd3	      0xbb00000000	                              mov ebx, 0	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x4007dd8	      0xba00000000	                              mov edx, 0	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x4007ddd	          0x4989d6	                            mov r14, rdx	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x4007de0	      0xe907f6ffff	                           jmp 0x40073ec	     13367	i386-dis.c	FUNCTION_10	IF_30	FOR_3
0x4007de5	      0xe800000000	                          call 0x4007dea	     13586	i386-dis.c	FUNCTION_10
0x4007dea	    0x4881c4780100	                          add rsp, 0x178	     13586	i386-dis.c	FUNCTION_10
0x4007df1	              0x5b	                                 pop rbx	     13586	i386-dis.c	FUNCTION_10
0x4007df2	              0x5d	                                 pop rbp	     13586	i386-dis.c	FUNCTION_10
0x4007df3	            0x415c	                                 pop r12	     13586	i386-dis.c	FUNCTION_10
0x4007df5	            0x415d	                                 pop r13	     13586	i386-dis.c	FUNCTION_10
0x4007df7	            0x415e	                                 pop r14	     13586	i386-dis.c	FUNCTION_10
0x4007df9	            0x415f	                                 pop r15	     13586	i386-dis.c	FUNCTION_10
0x4007dfb	              0xc3	                                     ret	     13586	i386-dis.c	FUNCTION_10
print_insn_i386_att	CALL,1:FOR,0:SWITCH,0:WHILE,0:ELSE,0:DO,0:IF,0:functions,0	5
0x4007dfc	        0x4883ec08	                              sub rsp, 8	     12675	i386-dis.c	FUNCTION_4
0x4007e00	    0xc60500000000	                mov byte [0x04007e07], 0	     12676	i386-dis.c	FUNCTION_4
0x4007e07	      0xe868ecffff	                     call sym.print_insn	     12678	i386-dis.c	FUNCTION_4	CALL_1
0x4007e0c	        0x4883c408	                              add rsp, 8	     12679	i386-dis.c	FUNCTION_4
0x4007e10	              0xc3	                                     ret	     12679	i386-dis.c	FUNCTION_4
print_displacement	CALL,5:FOR,1:SWITCH,1:WHILE,0:ELSE,0:DO,0:IF,3:functions,0	78
0x4001b9a	              0x55	                                push rbp	     14682	i386-dis.c	FUNCTION_22
0x4001b9b	              0x53	                                push rbx	     14682	i386-dis.c	FUNCTION_22
0x4001b9c	        0x4883ec38	                           sub rsp, 0x38	     14682	i386-dis.c	FUNCTION_22
0x4001ba0	          0x4889fd	                            mov rbp, rdi	     14682	i386-dis.c	FUNCTION_22
0x4001ba3	    0x64488b042528	                mov rax, qword fs:[0x28]	     14682	i386-dis.c	FUNCTION_22
0x4001bac	      0x4889442428	             mov qword [rsp + 0x28], rax	     14682	i386-dis.c	FUNCTION_22
0x4001bb1	            0x31c0	                            xor eax, eax	     14682	i386-dis.c	FUNCTION_22
0x4001bb3	          0x4989f0	                             mov r8, rsi	     14683	i386-dis.c	FUNCTION_22
0x4001bb6	          0x4885f6	                           test rsi, rsi	     14687	i386-dis.c	FUNCTION_22	IF_1
0x4001bb9	     0xf8987000000	                           jns 0x4001c46	     14687	i386-dis.c	FUNCTION_22	IF_1
0x4001bbf	          0xc6072d	                    mov byte [rdi], 0x2d	     14689	i386-dis.c	FUNCTION_22	IF_1
0x4001bc2	          0x48f7de	                                 neg rsi	     14690	i386-dis.c	FUNCTION_22	IF_1
0x4001bc5	          0x4989f0	                             mov r8, rsi	     14690	i386-dis.c	FUNCTION_22	IF_1
0x4001bc8	      0xb801000000	                              mov eax, 1	     14689	i386-dis.c	FUNCTION_22	IF_1
0x4001bcd	          0x4885f6	                           test rsi, rsi	     14693	i386-dis.c	FUNCTION_22	IF_1	IF_2
0x4001bd0	            0x7974	                           jns 0x4001c46	     14693	i386-dis.c	FUNCTION_22	IF_1	IF_2
0x4001bd2	    0x8b0500000000	            mov eax, dword [0x04001bd8] 	     14695	i386-dis.c	FUNCTION_22	IF_1	IF_2	SWITCH_1
0x4001bd8	          0x83f801	                              cmp eax, 1	     14695	i386-dis.c	FUNCTION_22	IF_1	IF_2	SWITCH_1
0x4001bdb	            0x7439	                            je 0x4001c16	     14695	i386-dis.c	FUNCTION_22	IF_1	IF_2	SWITCH_1
0x4001bdd	          0x83f801	                              cmp eax, 1	     14695	i386-dis.c	FUNCTION_22	IF_1	IF_2	SWITCH_1
0x4001be0	            0x7251	                            jb 0x4001c33	     14695	i386-dis.c	FUNCTION_22	IF_1	IF_2	SWITCH_1
0x4001be2	          0x83f802	                              cmp eax, 2	     14695	i386-dis.c	FUNCTION_22	IF_1	IF_2	SWITCH_1
0x4001be5	     0xf85ce000000	                           jne 0x4001cb9	     14695	i386-dis.c	FUNCTION_22	IF_1	IF_2	SWITCH_1
0x4001beb	    0x48bb30783830	          movabs rbx, 0x3030303030387830	       110	string3.h	FUNCTION_124	CALL_3
0x4001bf5	        0x48895f01	                mov qword [rdi + 1], rbx	       110	string3.h	FUNCTION_124	CALL_3
0x4001bf9	    0x48bb30303030	          movabs rbx, 0x3030303030303030	       110	string3.h	FUNCTION_124	CALL_3
0x4001c03	        0x48895f09	                mov qword [rdi + 9], rbx	       110	string3.h	FUNCTION_124	CALL_3
0x4001c07	    0x66c747113030	          mov word [rdi + 0x11], 0x3030 	       110	string3.h	FUNCTION_124	CALL_3
0x4001c0d	        0xc6471300	                mov byte [rdi + 0x13], 0	       110	string3.h	FUNCTION_124	CALL_3
0x4001c11	      0xe9a3000000	                           jmp 0x4001cb9	       110	string3.h	FUNCTION_124	CALL_3
0x4001c16	    0x48bb30783830	          movabs rbx, 0x3030303030387830	       110	string3.h	FUNCTION_124	CALL_3
0x4001c20	        0x48895f01	                mov qword [rdi + 1], rbx	       110	string3.h	FUNCTION_124	CALL_3
0x4001c24	    0x66c747093030	              mov word [rdi + 9], 0x3030	       110	string3.h	FUNCTION_124	CALL_3
0x4001c2a	        0xc6470b00	                 mov byte [rdi + 0xb], 0	       110	string3.h	FUNCTION_124	CALL_3
0x4001c2e	      0xe986000000	                           jmp 0x4001cb9	       110	string3.h	FUNCTION_124	CALL_3
0x4001c33	    0xc74701307838	        mov dword [rdi + 1], 0x30387830 	       110	string3.h	FUNCTION_124	CALL_3
0x4001c3a	    0x66c747053030	              mov word [rdi + 5], 0x3030	       110	string3.h	FUNCTION_124	CALL_3
0x4001c40	        0xc6470700	                   mov byte [rdi + 7], 0	       110	string3.h	FUNCTION_124	CALL_3
0x4001c44	            0xeb73	                           jmp 0x4001cb9	       110	string3.h	FUNCTION_124	CALL_3
0x4001c46	          0x4863d0	                         movsxd rdx, eax	     14711	i386-dis.c	FUNCTION_22
0x4001c49	      0xc644150030	              mov byte [rbp + rdx], 0x30	     14711	i386-dis.c	FUNCTION_22
0x4001c4e	          0x8d5802	                      lea ebx, [rax + 2]	     14712	i386-dis.c	FUNCTION_22
0x4001c51	          0x83c001	                              add eax, 1	     14712	i386-dis.c	FUNCTION_22
0x4001c54	            0x4898	                                    cdqe	     14712	i386-dis.c	FUNCTION_22
0x4001c56	      0xc644050078	              mov byte [rbp + rax], 0x78	     14712	i386-dis.c	FUNCTION_22
0x4001c5b	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_101	CALL_1
0x4001c60	      0xba1e000000	                           mov edx, 0x1e	        33	stdio2.h	FUNCTION_101	CALL_1
0x4001c65	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_101	CALL_1
0x4001c6a	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_101	CALL_1
0x4001c6d	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_101	CALL_1
0x4001c72	      0xe800000000	                          call 0x4001c77	        33	stdio2.h	FUNCTION_101	CALL_1
0x4001c77	         0xfb60c24	                   movzx ecx, byte [rsp]	     14715	i386-dis.c	FUNCTION_22	FOR_1
0x4001c7b	          0x80f930	                            cmp cl, 0x30	     14715	i386-dis.c	FUNCTION_22	FOR_1
0x4001c7e	            0x751c	                           jne 0x4001c9c	     14715	i386-dis.c	FUNCTION_22	FOR_1
0x4001c80	      0x488d442401	                      lea rax, [rsp + 1]	     14715	i386-dis.c	FUNCTION_22	FOR_1
0x4001c85	      0xba00000000	                              mov edx, 0	     14715	i386-dis.c	FUNCTION_22	FOR_1
0x4001c8a	          0x83c201	                              add edx, 1	     14715	i386-dis.c	FUNCTION_22	FOR_1
0x4001c8d	        0x4883c001	                              add rax, 1	     14715	i386-dis.c	FUNCTION_22	FOR_1
0x4001c91	         0xfb648ff	               movzx ecx, byte [rax - 1]	     14715	i386-dis.c	FUNCTION_22	FOR_1
0x4001c95	          0x80f930	                            cmp cl, 0x30	     14715	i386-dis.c	FUNCTION_22	FOR_1
0x4001c98	            0x74f0	                            je 0x4001c8a	     14715	i386-dis.c	FUNCTION_22	FOR_1
0x4001c9a	            0xeb05	                           jmp 0x4001ca1	     14715	i386-dis.c	FUNCTION_22	FOR_1
0x4001c9c	      0xba00000000	                              mov edx, 0	     14715	i386-dis.c	FUNCTION_22	FOR_1
0x4001ca1	          0x80f901	                               cmp cl, 1	     14718	i386-dis.c	FUNCTION_22	IF_3
0x4001ca4	          0x83da00	                              sbb edx, 0	     14718	i386-dis.c	FUNCTION_22	IF_3
0x4001ca7	          0x4863d2	                         movsxd rdx, edx	       110	string3.h	FUNCTION_124	CALL_3
0x4001caa	        0x488d3414	                    lea rsi, [rsp + rdx]	       110	string3.h	FUNCTION_124	CALL_3
0x4001cae	          0x4863fb	                         movsxd rdi, ebx	       110	string3.h	FUNCTION_124	CALL_3
0x4001cb1	          0x4801ef	                            add rdi, rbp	       110	string3.h	FUNCTION_124	CALL_3
0x4001cb4	      0xe800000000	                          call 0x4001cb9	       110	string3.h	FUNCTION_124	CALL_3
0x4001cb9	      0x488b442428	            mov rax, qword [rsp + 0x28] 	     14720	i386-dis.c	FUNCTION_22
0x4001cbe	    0x644833042528	                xor rax, qword fs:[0x28]	     14720	i386-dis.c	FUNCTION_22
0x4001cc7	            0x7405	                            je 0x4001cce	     14720	i386-dis.c	FUNCTION_22
0x4001cc9	      0xe800000000	                          call 0x4001cce	     14720	i386-dis.c	FUNCTION_22
0x4001cce	        0x4883c438	                           add rsp, 0x38	     14720	i386-dis.c	FUNCTION_22
0x4001cd2	              0x5b	                                 pop rbx	     14720	i386-dis.c	FUNCTION_22
0x4001cd3	              0x5d	                                 pop rbp	     14720	i386-dis.c	FUNCTION_22
0x4001cd4	              0xc3	                                     ret	     14720	i386-dis.c	FUNCTION_22
OP_Mwait	CALL,2:FOR,0:SWITCH,0:WHILE,0:ELSE,0:DO,0:IF,1:functions,0	21
0x4001d4f	              0x53	                                push rbx	     16866	i386-dis.c	FUNCTION_65
0x4001d50	    0x803d00000000	                cmp byte [0x04001d57], 0	     16868	i386-dis.c	FUNCTION_65	IF_1
0x4001d57	            0x7545	                           jne 0x4001d9e	     16868	i386-dis.c	FUNCTION_65	IF_1
0x4001d59	    0x833d00000000	               cmp dword [0x04001d60], 2	     16871	i386-dis.c	FUNCTION_65	IF_1
0x4001d60	    0x488b1d000000	            mov rbx, qword [0x04001d67] 	     16871	i386-dis.c	FUNCTION_65	IF_1
0x4001d67	    0x480f451d0000	          cmovne rbx, qword [0x04001d6f]	     16871	i386-dis.c	FUNCTION_65	IF_1
0x4001d6f	      0xbaf4010000	                          mov edx, 0x1f4	       110	string3.h	FUNCTION_124	CALL_3
0x4001d74	          0x488b33	                    mov rsi, qword [rbx]	       110	string3.h	FUNCTION_124	CALL_3
0x4001d77	      0xbf00000000	                              mov edi, 0	       110	string3.h	FUNCTION_124	CALL_3
0x4001d7c	      0xe800000000	                          call 0x4001d81	       110	string3.h	FUNCTION_124	CALL_3
0x4001d81	        0x488b7308	                mov rsi, qword [rbx + 8]	       110	string3.h	FUNCTION_124	CALL_3
0x4001d85	      0xba90010000	                          mov edx, 0x190	       110	string3.h	FUNCTION_124	CALL_3
0x4001d8a	      0xbf00000000	                              mov edi, 0	       110	string3.h	FUNCTION_124	CALL_3
0x4001d8f	      0xe800000000	                          call 0x4001d94	       110	string3.h	FUNCTION_124	CALL_3
0x4001d94	    0xc70500000000	               mov dword [0x04001d9e], 1	     16874	i386-dis.c	FUNCTION_65	IF_1
0x4001d9e	    0x803d00000000	                cmp byte [0x04001da5], 0	     16877	i386-dis.c	FUNCTION_65
0x4001da5	            0x7505	                           jne 0x4001dac	     16877	i386-dis.c	FUNCTION_65
0x4001da7	      0xe800000000	                          call 0x4001dac	     16877	i386-dis.c	FUNCTION_65
0x4001dac	    0x488305000000	               add qword [0x04001db4], 1	     16878	i386-dis.c	FUNCTION_65
0x4001db4	              0x5b	                                 pop rbx	     16879	i386-dis.c	FUNCTION_65
0x4001db5	              0xc3	                                     ret	     16879	i386-dis.c	FUNCTION_65
OP_XMM_VexW	CALL,1:FOR,0:SWITCH,0:WHILE,0:ELSE,0:DO,0:IF,0:functions,0	5
0x4003f31	        0x4883ec08	                              sub rsp, 8	     17562	i386-dis.c	FUNCTION_88
0x4003f35	    0x832500000000	      and dword [0x04003f3c], 0xfffffff7	     17565	i386-dis.c	FUNCTION_88
0x4003f3c	      0xe8eafeffff	                         call sym.OP_XMM	     17566	i386-dis.c	FUNCTION_88	CALL_1
0x4003f41	        0x4883c408	                              add rsp, 8	     17567	i386-dis.c	FUNCTION_88
0x4003f45	              0xc3	                                     ret	     17567	i386-dis.c	FUNCTION_88
HLE_Fixup3	CALL,1:FOR,0:SWITCH,0:WHILE,0:ELSE,0:DO,0:IF,1:functions,0	13
0x4005729	        0x4883ec08	                              sub rsp, 8	     17017	i386-dis.c	FUNCTION_73
0x400572d	    0x833d00000000	               cmp dword [0x04005734], 3	     17018	i386-dis.c	FUNCTION_73	IF_1
0x4005734	            0x7424	                            je 0x400575a	     17018	i386-dis.c	FUNCTION_73	IF_1
0x4005736	    0x8b0500000000	            mov eax, dword [0x0400573c] 	     17019	i386-dis.c	FUNCTION_73	IF_1
0x400573c	    0x3b0500000000	            cmp eax, dword [0x04005742] 	     17019	i386-dis.c	FUNCTION_73	IF_1
0x4005742	            0x7e16	                           jle 0x400575a	     17019	i386-dis.c	FUNCTION_73	IF_1
0x4005744	    0xf60500000000	               test byte [0x0400574b], 1	     17020	i386-dis.c	FUNCTION_73	IF_1
0x400574b	            0x740d	                            je 0x400575a	     17020	i386-dis.c	FUNCTION_73	IF_1
0x400574d	            0x4898	                                    cdqe	     17021	i386-dis.c	FUNCTION_73	IF_1
0x400574f	    0xc70485000000	                mov dword [rax*4], 0x4f3	     17021	i386-dis.c	FUNCTION_73	IF_1
0x400575a	      0xe896ffffff	                           call sym.OP_E	     17023	i386-dis.c	FUNCTION_73	CALL_1
0x400575f	        0x4883c408	                              add rsp, 8	     17024	i386-dis.c	FUNCTION_73
0x4005763	              0xc3	                                     ret	     17024	i386-dis.c	FUNCTION_73
OP_OFF64	CALL,8:FOR,0:SWITCH,0:WHILE,0:ELSE,0:DO,0:IF,4:functions,0	63
0x4006185	              0x53	                                push rbx	     16249	i386-dis.c	FUNCTION_42
0x4006186	            0x89f3	                            mov ebx, esi	     16249	i386-dis.c	FUNCTION_42
0x4006188	    0x833d00000000	               cmp dword [0x0400618f], 2	     16252	i386-dis.c	FUNCTION_42	IF_1
0x400618f	            0x750d	                           jne 0x400619e	     16252	i386-dis.c	FUNCTION_42	IF_1
0x4006191	    0xf60500000000	               test byte [0x04006198], 4	     16253	i386-dis.c	FUNCTION_42	IF_1
0x4006198	     0xf8484000000	                            je 0x4006222	     16253	i386-dis.c	FUNCTION_42	IF_1
0x400619e	    0x803d00000000	                cmp byte [0x040061a5], 0	     16226	i386-dis.c	FUNCTION_41	IF_1
0x40061a5	            0x740c	                            je 0x40061b3	     16226	i386-dis.c	FUNCTION_41	IF_1
0x40061a7	          0xf6c304	                              test bl, 4	     16226	i386-dis.c	FUNCTION_41	IF_1
0x40061aa	            0x7407	                            je 0x40061b3	     16226	i386-dis.c	FUNCTION_41	IF_1
0x40061ac	            0x89de	                            mov esi, ebx	     16227	i386-dis.c	FUNCTION_41	CALL_1
0x40061ae	      0xe812d4ffff	             call sym.intel_operand_size	     16227	i386-dis.c	FUNCTION_41	CALL_1
0x40061b3	      0xe868cbffff	                     call sym.append_seg	     16228	i386-dis.c	FUNCTION_41	CALL_2
0x40061b8	          0xf6c302	                              test bl, 2	     16230	i386-dis.c	FUNCTION_41	IF_2
0x40061bb	            0x7509	                           jne 0x40061c6	     16230	i386-dis.c	FUNCTION_41	IF_2
0x40061bd	    0x833d00000000	               cmp dword [0x040061c4], 2	     16230	i386-dis.c	FUNCTION_41	IF_2
0x40061c4	            0x750a	                           jne 0x40061d0	     16230	i386-dis.c	FUNCTION_41	IF_2
0x40061c6	      0xe896beffff	                          call sym.get32	     16231	i386-dis.c	FUNCTION_41	CALL_3
0x40061cb	          0x4889c3	                            mov rbx, rax	     16231	i386-dis.c	FUNCTION_41	CALL_3
0x40061ce	            0xeb08	                           jmp 0x40061d8	     16231	i386-dis.c	FUNCTION_41	CALL_3
0x40061d0	      0xe8bbbdffff	                          call sym.get16	     16233	i386-dis.c	FUNCTION_41	CALL_4
0x40061d5	          0x4863d8	                         movsxd rbx, eax	     16233	i386-dis.c	FUNCTION_41	CALL_4
0x40061d8	    0x803d00000000	                cmp byte [0x040061df], 0	     16235	i386-dis.c	FUNCTION_41	IF_3
0x40061df	            0x7423	                            je 0x4006204	     16235	i386-dis.c	FUNCTION_41	IF_3
0x40061e1	    0x833d00000000	               cmp dword [0x040061e8], 0	     16237	i386-dis.c	FUNCTION_41	IF_3	IF_4
0x40061e8	            0x751a	                           jne 0x4006204	     16237	i386-dis.c	FUNCTION_41	IF_3	IF_4
0x40061ea	    0x488b05000000	            mov rax, qword [0x040061f1] 	     16239	i386-dis.c	FUNCTION_41	IF_3	IF_4	CALL_5
0x40061f1	        0x488b7818	            mov rdi, qword [rax + 0x18] 	     16239	i386-dis.c	FUNCTION_41	IF_3	IF_4	CALL_5
0x40061f5	      0xe8a3caffff	                        call sym.oappend	     16239	i386-dis.c	FUNCTION_41	IF_3	IF_4	CALL_5
0x40061fa	      0xbf00000000	                              mov edi, 0	     16240	i386-dis.c	FUNCTION_41	IF_3	IF_4	CALL_6
0x40061ff	      0xe899caffff	                        call sym.oappend	     16240	i386-dis.c	FUNCTION_41	IF_3	IF_4	CALL_6
0x4006204	          0x4889da	                            mov rdx, rbx	     16243	i386-dis.c	FUNCTION_41	CALL_7
0x4006207	      0xbe01000000	                              mov esi, 1	     16243	i386-dis.c	FUNCTION_41	CALL_7
0x400620c	      0xbf00000000	                              mov edi, 0	     16243	i386-dis.c	FUNCTION_41	CALL_7
0x4006211	      0xe8dfb7ffff	            call sym.print_operand_value	     16243	i386-dis.c	FUNCTION_41	CALL_7
0x4006216	      0xbf00000000	                              mov edi, 0	     16244	i386-dis.c	FUNCTION_41	CALL_8
0x400621b	      0xe87dcaffff	                        call sym.oappend	     16244	i386-dis.c	FUNCTION_41	CALL_8
0x4006220	            0xeb69	                           jmp 0x400628b	     16244	i386-dis.c	FUNCTION_41	CALL_8
0x4006222	    0x803d00000000	                cmp byte [0x04006229], 0	     16259	i386-dis.c	FUNCTION_42	IF_2
0x4006229	            0x740b	                            je 0x4006236	     16259	i386-dis.c	FUNCTION_42	IF_2
0x400622b	        0x40f6c604	                             test sil, 4	     16259	i386-dis.c	FUNCTION_42	IF_2
0x400622f	            0x7405	                            je 0x4006236	     16259	i386-dis.c	FUNCTION_42	IF_2
0x4006231	      0xe88fd3ffff	             call sym.intel_operand_size	     16260	i386-dis.c	FUNCTION_42	CALL_2
0x4006236	      0xe8e5caffff	                     call sym.append_seg	     16261	i386-dis.c	FUNCTION_42	CALL_3
0x400623b	      0xe897bdffff	                          call sym.get64	     16263	i386-dis.c	FUNCTION_42	CALL_4
0x4006240	          0x4889c3	                            mov rbx, rax	     16263	i386-dis.c	FUNCTION_42	CALL_4
0x4006243	    0x803d00000000	                cmp byte [0x0400624a], 0	     16265	i386-dis.c	FUNCTION_42	IF_3
0x400624a	            0x7423	                            je 0x400626f	     16265	i386-dis.c	FUNCTION_42	IF_3
0x400624c	    0x833d00000000	               cmp dword [0x04006253], 0	     16267	i386-dis.c	FUNCTION_42	IF_3	IF_4
0x4006253	            0x751a	                           jne 0x400626f	     16267	i386-dis.c	FUNCTION_42	IF_3	IF_4
0x4006255	    0x488b05000000	            mov rax, qword [0x0400625c] 	     16269	i386-dis.c	FUNCTION_42	IF_3	IF_4	CALL_5
0x400625c	        0x488b7818	            mov rdi, qword [rax + 0x18] 	     16269	i386-dis.c	FUNCTION_42	IF_3	IF_4	CALL_5
0x4006260	      0xe838caffff	                        call sym.oappend	     16269	i386-dis.c	FUNCTION_42	IF_3	IF_4	CALL_5
0x4006265	      0xbf00000000	                              mov edi, 0	     16270	i386-dis.c	FUNCTION_42	IF_3	IF_4	CALL_6
0x400626a	      0xe82ecaffff	                        call sym.oappend	     16270	i386-dis.c	FUNCTION_42	IF_3	IF_4	CALL_6
0x400626f	          0x4889da	                            mov rdx, rbx	     16273	i386-dis.c	FUNCTION_42	CALL_7
0x4006272	      0xbe01000000	                              mov esi, 1	     16273	i386-dis.c	FUNCTION_42	CALL_7
0x4006277	      0xbf00000000	                              mov edi, 0	     16273	i386-dis.c	FUNCTION_42	CALL_7
0x400627c	      0xe874b7ffff	            call sym.print_operand_value	     16273	i386-dis.c	FUNCTION_42	CALL_7
0x4006281	      0xbf00000000	                              mov edi, 0	     16274	i386-dis.c	FUNCTION_42	CALL_8
0x4006286	      0xe812caffff	                        call sym.oappend	     16274	i386-dis.c	FUNCTION_42	CALL_8
0x400628b	              0x5b	                                 pop rbx	     16275	i386-dis.c	FUNCTION_42
0x400628c	              0xc3	                                     ret	     16275	i386-dis.c	FUNCTION_42
print_operand_value	CALL,5:FOR,1:SWITCH,0:WHILE,1:ELSE,3:DO,0:IF,6:functions,0	105
0x40019f5	              0x53	                                push rbx	     14623	i386-dis.c	FUNCTION_21
0x40019f6	        0x4883ec30	                           sub rsp, 0x30	     14623	i386-dis.c	FUNCTION_21
0x40019fa	          0x4889fb	                            mov rbx, rdi	     14623	i386-dis.c	FUNCTION_21
0x40019fd	    0x64488b042528	                mov rax, qword fs:[0x28]	     14623	i386-dis.c	FUNCTION_21
0x4001a06	      0x4889442428	             mov qword [rsp + 0x28], rax	     14623	i386-dis.c	FUNCTION_21
0x4001a0b	            0x31c0	                            xor eax, eax	     14623	i386-dis.c	FUNCTION_21
0x4001a0d	    0x833d00000000	               cmp dword [0x04001a14], 2	     14624	i386-dis.c	FUNCTION_21	IF_1
0x4001a14	     0xf850d010000	                           jne 0x4001b27	     14624	i386-dis.c	FUNCTION_21	IF_1
0x4001a1a	            0x85f6	                           test esi, esi	     14626	i386-dis.c	FUNCTION_21	IF_1	IF_2
0x4001a1c	            0x744d	                            je 0x4001a6b	     14626	i386-dis.c	FUNCTION_21	IF_1	IF_2
0x4001a1e	          0xc60730	                    mov byte [rdi], 0x30	     14630	i386-dis.c	FUNCTION_21	IF_1	IF_2
0x4001a21	        0xc6470178	                mov byte [rdi + 1], 0x78	     14631	i386-dis.c	FUNCTION_21	IF_1	IF_2
0x4001a25	          0x4989d0	                             mov r8, rdx	        33	stdio2.h	FUNCTION_101	CALL_1
0x4001a28	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_101	CALL_1
0x4001a2d	      0xba1e000000	                           mov edx, 0x1e	        33	stdio2.h	FUNCTION_101	CALL_1
0x4001a32	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_101	CALL_1
0x4001a37	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_101	CALL_1
0x4001a3a	      0xe800000000	                          call 0x4001a3f	        33	stdio2.h	FUNCTION_101	CALL_1
0x4001a3f	      0xb800000000	                              mov eax, 0	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4001a44	            0x89c2	                            mov edx, eax	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4001a46	        0x803c0430	              cmp byte [rsp + rax], 0x30	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4001a4a	            0x750a	                           jne 0x4001a56	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4001a4c	        0x4883c001	                              add rax, 1	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4001a50	        0x803c0400	                 cmp byte [rsp + rax], 0	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4001a54	            0x75ee	                           jne 0x4001a44	     14633	i386-dis.c	FUNCTION_21	IF_1	IF_2	FOR_1
0x4001a56	          0x4863d2	                         movsxd rdx, edx	       110	string3.h	FUNCTION_124	CALL_3
0x4001a59	        0x488d3414	                    lea rsi, [rsp + rdx]	       110	string3.h	FUNCTION_124	CALL_3
0x4001a5d	        0x488d7b02	                      lea rdi, [rbx + 2]	       110	string3.h	FUNCTION_124	CALL_3
0x4001a61	      0xe800000000	                          call 0x4001a66	       110	string3.h	FUNCTION_124	CALL_3
0x4001a66	      0xe914010000	                           jmp 0x4001b7f	       110	string3.h	FUNCTION_124	CALL_3
0x4001a6b	          0x4889d1	                            mov rcx, rdx	     14638	i386-dis.c	FUNCTION_21	IF_1	ELSE_1
0x4001a6e	          0x4885d2	                           test rdx, rdx	     14641	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	IF_3
0x4001a71	     0xf89fe000000	                           jns 0x4001b75	     14641	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	IF_3
0x4001a77	        0x488d4701	                      lea rax, [rdi + 1]	     14643	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	IF_3
0x4001a7b	          0xc6072d	                    mov byte [rdi], 0x2d	     14643	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	IF_3
0x4001a7e	          0x48f7d9	                                 neg rcx	     14644	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	IF_3
0x4001a81	          0x4885c9	                           test rcx, rcx	     14646	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	IF_3	IF_4
0x4001a84	            0x7928	                           jns 0x4001aae	     14646	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	IF_3	IF_4
0x4001a86	    0x48bf39323233	          movabs rdi, 0x3032373333323239	       110	string3.h	FUNCTION_124	CALL_3
0x4001a90	        0x48897b01	                mov qword [rbx + 1], rdi	       110	string3.h	FUNCTION_124	CALL_3
0x4001a94	    0x48bb33363835	          movabs rbx, 0x3537373435383633	       110	string3.h	FUNCTION_124	CALL_3
0x4001a9e	        0x48895808	                mov qword [rax + 8], rbx	       110	string3.h	FUNCTION_124	CALL_3
0x4001aa2	    0xc74010383038	       mov dword [rax + 0x10], 0x383038 	       110	string3.h	FUNCTION_124	CALL_3
0x4001aa9	      0xe9d1000000	                           jmp 0x4001b7f	       110	string3.h	FUNCTION_124	CALL_3
0x4001aae	          0x4885c9	                           test rcx, rcx	     14652	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	IF_5
0x4001ab1	            0x750d	                           jne 0x4001ac0	     14652	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	IF_5
0x4001ab3	          0x4889c3	                            mov rbx, rax	     14643	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	IF_3
0x4001ab6	      0x66c7033000	                    mov word [rbx], 0x30	       110	string3.h	FUNCTION_124	CALL_3
0x4001abb	      0xe9bf000000	                           jmp 0x4001b7f	       110	string3.h	FUNCTION_124	CALL_3
0x4001ac0	      0xc644241d00	                mov byte [rsp + 0x1d], 0	     14659	i386-dis.c	FUNCTION_21	IF_1	ELSE_1
0x4001ac5	          0x4889c3	                            mov rbx, rax	     14643	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	IF_3
0x4001ac8	      0x488d74241c	                   lea rsi, [rsp + 0x1c]	     14643	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	IF_3
0x4001acd	      0xbf00000000	                              mov edi, 0	     14643	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	IF_3
0x4001ad2	    0x49b867666666	           movabs r8, 0x6666666666666667	     14662	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	WHILE_1
0x4001adc	          0x4889c8	                            mov rax, rcx	     14662	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	WHILE_1
0x4001adf	          0x49f7e8	                                 imul r8	     14662	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	WHILE_1
0x4001ae2	        0x48c1fa02	                              sar rdx, 2	     14662	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	WHILE_1
0x4001ae6	          0x4889c8	                            mov rax, rcx	     14662	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	WHILE_1
0x4001ae9	        0x48c1f83f	                           sar rax, 0x3f	     14662	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	WHILE_1
0x4001aed	          0x4829c2	                            sub rdx, rax	     14662	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	WHILE_1
0x4001af0	        0x488d0492	                  lea rax, [rdx + rdx*4]	     14662	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	WHILE_1
0x4001af4	          0x4801c0	                            add rax, rax	     14662	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	WHILE_1
0x4001af7	          0x4829c1	                            sub rcx, rax	     14662	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	WHILE_1
0x4001afa	          0x83c130	                           add ecx, 0x30	     14662	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	WHILE_1
0x4001afd	            0x880e	                      mov byte [rsi], cl	     14662	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	WHILE_1
0x4001aff	          0x4889d1	                            mov rcx, rdx	     14663	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	WHILE_1
0x4001b02	          0x83c701	                              add edi, 1	     14664	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	WHILE_1
0x4001b05	        0x4883ee01	                              sub rsi, 1	     14664	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	WHILE_1
0x4001b09	          0x4885d2	                           test rdx, rdx	     14660	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	WHILE_1
0x4001b0c	            0x75ce	                           jne 0x4001adc	     14660	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	WHILE_1
0x4001b0e	          0x4863ff	                         movsxd rdi, edi	       110	string3.h	FUNCTION_124	CALL_3
0x4001b11	      0xb81d000000	                           mov eax, 0x1d	       110	string3.h	FUNCTION_124	CALL_3
0x4001b16	          0x4829f8	                            sub rax, rdi	       110	string3.h	FUNCTION_124	CALL_3
0x4001b19	        0x488d3404	                    lea rsi, [rsp + rax]	       110	string3.h	FUNCTION_124	CALL_3
0x4001b1d	          0x4889df	                            mov rdi, rbx	       110	string3.h	FUNCTION_124	CALL_3
0x4001b20	      0xe800000000	                          call 0x4001b25	       110	string3.h	FUNCTION_124	CALL_3
0x4001b25	            0xeb58	                           jmp 0x4001b7f	       110	string3.h	FUNCTION_124	CALL_3
0x4001b27	            0x85f6	                           test esi, esi	     14671	i386-dis.c	FUNCTION_21	ELSE_2	IF_6
0x4001b29	            0x7420	                            je 0x4001b4b	     14671	i386-dis.c	FUNCTION_21	ELSE_2	IF_6
0x4001b2b	          0x4189d0	                            mov r8d, edx	        33	stdio2.h	FUNCTION_101	CALL_1
0x4001b2e	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_101	CALL_1
0x4001b33	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_101	CALL_1
0x4001b3a	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_101	CALL_1
0x4001b3f	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_101	CALL_1
0x4001b44	      0xe800000000	                          call 0x4001b49	        33	stdio2.h	FUNCTION_101	CALL_1
0x4001b49	            0xeb34	                           jmp 0x4001b7f	        33	stdio2.h	FUNCTION_101	CALL_1
0x4001b4b	          0x4189d0	                            mov r8d, edx	        33	stdio2.h	FUNCTION_101	CALL_1
0x4001b4e	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_101	CALL_1
0x4001b53	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_101	CALL_1
0x4001b5a	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_101	CALL_1
0x4001b5f	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_101	CALL_1
0x4001b64	      0xe800000000	                          call 0x4001b69	        33	stdio2.h	FUNCTION_101	CALL_1
0x4001b69	            0xeb14	                           jmp 0x4001b7f	        33	stdio2.h	FUNCTION_101	CALL_1
0x4001b6b	      0xc644241d00	                mov byte [rsp + 0x1d], 0	     14659	i386-dis.c	FUNCTION_21	IF_1	ELSE_1
0x4001b70	      0xe953ffffff	                           jmp 0x4001ac8	     14659	i386-dis.c	FUNCTION_21	IF_1	ELSE_1
0x4001b75	          0x4885d2	                           test rdx, rdx	     14652	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	IF_5
0x4001b78	            0x75f1	                           jne 0x4001b6b	     14652	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	IF_5
0x4001b7a	      0xe937ffffff	                           jmp 0x4001ab6	     14652	i386-dis.c	FUNCTION_21	IF_1	ELSE_1	IF_5
0x4001b7f	      0x488b442428	            mov rax, qword [rsp + 0x28] 	     14676	i386-dis.c	FUNCTION_21
0x4001b84	    0x644833042528	                xor rax, qword fs:[0x28]	     14676	i386-dis.c	FUNCTION_21
0x4001b8d	            0x7405	                            je 0x4001b94	     14676	i386-dis.c	FUNCTION_21
0x4001b8f	      0xe800000000	                          call 0x4001b94	     14676	i386-dis.c	FUNCTION_21
0x4001b94	        0x4883c430	                           add rsp, 0x30	     14676	i386-dis.c	FUNCTION_21
0x4001b98	              0x5b	                                 pop rbx	     14676	i386-dis.c	FUNCTION_21
0x4001b99	              0xc3	                                     ret	     14676	i386-dis.c	FUNCTION_21
OP_J	CALL,6:FOR,0:SWITCH,1:WHILE,0:ELSE,1:DO,0:IF,6:functions,0	95
0x400631f	              0x53	                                push rbx	     16141	i386-dis.c	FUNCTION_38
0x4006320	          0x83ff01	                              cmp edi, 1	     16146	i386-dis.c	FUNCTION_38	SWITCH_1
0x4006323	            0x740a	                            je 0x400632f	     16146	i386-dis.c	FUNCTION_38	SWITCH_1
0x4006325	          0x83ff04	                              cmp edi, 4	     16146	i386-dis.c	FUNCTION_38	SWITCH_1
0x4006328	            0x745d	                            je 0x4006387	     16146	i386-dis.c	FUNCTION_38	SWITCH_1
0x400632a	      0xe923010000	                           jmp 0x4006452	     16146	i386-dis.c	FUNCTION_38	SWITCH_1
0x400632f	    0x488b05000000	            mov rax, qword [0x04006336] 	     16149	i386-dis.c	FUNCTION_38	SWITCH_1
0x4006336	        0x488d7001	                      lea rsi, [rax + 1]	     16149	i386-dis.c	FUNCTION_38	SWITCH_1
0x400633a	    0x488b3d000000	            mov rdi, qword [0x04006341] 	     16149	i386-dis.c	FUNCTION_38	SWITCH_1
0x4006341	        0x488b4768	            mov rax, qword [rdi + 0x68] 	     16149	i386-dis.c	FUNCTION_38	SWITCH_1
0x4006345	          0x483b30	                    cmp rsi, qword [rax]	     16149	i386-dis.c	FUNCTION_38	SWITCH_1
0x4006348	            0x7605	                           jbe 0x400634f	     16149	i386-dis.c	FUNCTION_38	SWITCH_1
0x400634a	      0xe85cbbffff	                     call sym.fetch_data	     16149	i386-dis.c	FUNCTION_38	SWITCH_1
0x400634f	    0x488b05000000	            mov rax, qword [0x04006356] 	     16150	i386-dis.c	FUNCTION_38	SWITCH_1
0x4006356	        0x488d5001	                      lea rdx, [rax + 1]	     16150	i386-dis.c	FUNCTION_38	SWITCH_1
0x400635a	    0x488915000000	            mov qword [0x04006361], rdx 	     16150	i386-dis.c	FUNCTION_38	SWITCH_1
0x4006361	           0xfb608	                   movzx ecx, byte [rax]	     16150	i386-dis.c	FUNCTION_38	SWITCH_1
0x4006364	           0xfb6f1	                           movzx esi, cl	     16150	i386-dis.c	FUNCTION_38	SWITCH_1
0x4006367	      0xb800000000	                              mov eax, 0	     16144	i386-dis.c	FUNCTION_38
0x400636c	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	     16143	i386-dis.c	FUNCTION_38
0x4006373	            0x84c9	                             test cl, cl	     16151	i386-dis.c	FUNCTION_38	SWITCH_1	IF_1
0x4006375	     0xf89f5000000	                           jns 0x4006470	     16151	i386-dis.c	FUNCTION_38	SWITCH_1	IF_1
0x400637b	    0x4881ee000100	                          sub rsi, 0x100	     16152	i386-dis.c	FUNCTION_38	SWITCH_1	IF_1
0x4006382	      0xe9e9000000	                           jmp 0x4006470	     16152	i386-dis.c	FUNCTION_38	SWITCH_1	IF_1
0x4006387	    0x8b0500000000	            mov eax, dword [0x0400638d] 	     16155	i386-dis.c	FUNCTION_38	SWITCH_1	IF_2
0x400638d	            0x85c0	                           test eax, eax	     16155	i386-dis.c	FUNCTION_38	SWITCH_1	IF_2
0x400638f	            0x7510	                           jne 0x40063a1	     16155	i386-dis.c	FUNCTION_38	SWITCH_1	IF_2
0x4006391	    0xf60500000000	               test byte [0x04006398], 8	     16156	i386-dis.c	FUNCTION_38	SWITCH_1	IF_2
0x4006398	            0x7407	                            je 0x40063a1	     16156	i386-dis.c	FUNCTION_38	SWITCH_1	IF_2
0x400639a	    0x830d00000000	            or dword [0x040063a1], 0x48 	     16156	i386-dis.c	FUNCTION_38	SWITCH_1	IF_2
0x40063a1	        0x40f6c601	                             test sil, 1	     16157	i386-dis.c	FUNCTION_38	SWITCH_1	IF_3
0x40063a5	            0x7516	                           jne 0x40063bd	     16157	i386-dis.c	FUNCTION_38	SWITCH_1	IF_3
0x40063a7	    0x833d00000000	               cmp dword [0x040063ae], 2	     16158	i386-dis.c	FUNCTION_38	SWITCH_1	IF_3
0x40063ae	            0x7523	                           jne 0x40063d3	     16158	i386-dis.c	FUNCTION_38	SWITCH_1	IF_3
0x40063b0	            0x85c0	                           test eax, eax	     16159	i386-dis.c	FUNCTION_38	SWITCH_1	IF_3
0x40063b2	            0x7509	                           jne 0x40063bd	     16159	i386-dis.c	FUNCTION_38	SWITCH_1	IF_3
0x40063b4	    0xf60500000000	               test byte [0x040063bb], 8	     16159	i386-dis.c	FUNCTION_38	SWITCH_1	IF_3
0x40063bb	            0x7416	                            je 0x40063d3	     16159	i386-dis.c	FUNCTION_38	SWITCH_1	IF_3
0x40063bd	      0xe85ebbffff	                         call sym.get32s	     16160	i386-dis.c	FUNCTION_38	SWITCH_1	CALL_1
0x40063c2	          0x4889c6	                            mov rsi, rax	     16160	i386-dis.c	FUNCTION_38	SWITCH_1	CALL_1
0x40063c5	      0xb800000000	                              mov eax, 0	     16144	i386-dis.c	FUNCTION_38
0x40063ca	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	     16143	i386-dis.c	FUNCTION_38
0x40063d1	            0xeb50	                           jmp 0x4006423	     16160	i386-dis.c	FUNCTION_38	SWITCH_1	CALL_1
0x40063d3	      0xe8b8bbffff	                          call sym.get16	     16163	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1	CALL_2
0x40063d8	          0x4863f0	                         movsxd rsi, eax	     16163	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1	CALL_2
0x40063db	      0x2500800000	                         and eax, 0x8000	     16164	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1	IF_4
0x40063e0	    0x488d960000ff	                lea rdx, [rsi - 0x10000]	     16165	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1	IF_4
0x40063e7	            0x85c0	                           test eax, eax	     16165	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1	IF_4
0x40063e9	        0x480f45f2	                         cmovne rsi, rdx	     16165	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1	IF_4
0x40063ed	    0xf60500000000	               test byte [0x040063f4], 2	     16171	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1	IF_5
0x40063f4	            0x7523	                           jne 0x4006419	     16171	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1	IF_5
0x40063f6	    0x488b1d000000	            mov rbx, qword [0x040063fd] 	     16172	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1	IF_5
0x40063fd	    0x482b1d000000	             sub rbx, qword [0x04006404]	     16172	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1	IF_5
0x4006404	    0x48031d000000	             add rbx, qword [0x0400640b]	     16172	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1	IF_5
0x400640b	          0x4889d8	                            mov rax, rbx	     16172	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1	IF_5
0x400640e	        0x66b80000	                               mov ax, 0	     16172	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1	IF_5
0x4006412	      0xbaffff0000	                         mov edx, 0xffff	     16170	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1
0x4006417	            0xeb0a	                           jmp 0x4006423	     16170	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1
0x4006419	      0xb800000000	                              mov eax, 0	     16144	i386-dis.c	FUNCTION_38
0x400641e	      0xbaffff0000	                         mov edx, 0xffff	     16170	i386-dis.c	FUNCTION_38	SWITCH_1	ELSE_1
0x4006423	    0x833d00000000	               cmp dword [0x0400642a], 2	     16175	i386-dis.c	FUNCTION_38	SWITCH_1	IF_6
0x400642a	            0x7512	                           jne 0x400643e	     16175	i386-dis.c	FUNCTION_38	SWITCH_1	IF_6
0x400642c	    0x833d00000000	               cmp dword [0x04006433], 0	     16176	i386-dis.c	FUNCTION_38	SWITCH_1	IF_6
0x4006433	            0x753b	                           jne 0x4006470	     16176	i386-dis.c	FUNCTION_38	SWITCH_1	IF_6
0x4006435	    0xf60500000000	               test byte [0x0400643c], 8	     16176	i386-dis.c	FUNCTION_38	SWITCH_1	IF_6
0x400643c	            0x7532	                           jne 0x4006470	     16176	i386-dis.c	FUNCTION_38	SWITCH_1	IF_6
0x400643e	    0x8b0d00000000	            mov ecx, dword [0x04006444] 	     16177	i386-dis.c	FUNCTION_38	SWITCH_1	IF_6
0x4006444	    0x81e100020000	                          and ecx, 0x200	     16177	i386-dis.c	FUNCTION_38	SWITCH_1	IF_6
0x400644a	     0x90d00000000	              or dword [0x04006450], ecx	     16177	i386-dis.c	FUNCTION_38	SWITCH_1	IF_6
0x4006450	            0xeb1e	                           jmp 0x4006470	     16177	i386-dis.c	FUNCTION_38	SWITCH_1	IF_6
0x4006452	      0xba05000000	                              mov edx, 5	     16180	i386-dis.c	FUNCTION_38	SWITCH_1	CALL_3
0x4006457	      0xbe00000000	                              mov esi, 0	     16180	i386-dis.c	FUNCTION_38	SWITCH_1	CALL_3
0x400645c	      0xbf00000000	                              mov edi, 0	     16180	i386-dis.c	FUNCTION_38	SWITCH_1	CALL_3
0x4006461	      0xe800000000	                          call 0x4006466	     16180	i386-dis.c	FUNCTION_38	SWITCH_1	CALL_3
0x4006466	          0x4889c7	                            mov rdi, rax	     16180	i386-dis.c	FUNCTION_38	SWITCH_1	CALL_3
0x4006469	      0xe82fc8ffff	                        call sym.oappend	     16180	i386-dis.c	FUNCTION_38	SWITCH_1	CALL_3
0x400646e	            0xeb4b	                           jmp 0x40064bb	     16181	i386-dis.c	FUNCTION_38	SWITCH_1
0x4006470	    0x488b0d000000	            mov rcx, qword [0x04006477] 	     16183	i386-dis.c	FUNCTION_38
0x4006477	    0x482b0d000000	             sub rcx, qword [0x0400647e]	     16183	i386-dis.c	FUNCTION_38
0x400647e	    0x48030d000000	             add rcx, qword [0x04006485]	     16183	i386-dis.c	FUNCTION_38
0x4006485	        0x488d1c31	                    lea rbx, [rcx + rsi]	     16183	i386-dis.c	FUNCTION_38
0x4006489	          0x4821da	                            and rdx, rbx	     16183	i386-dis.c	FUNCTION_38
0x400648c	          0x4809d0	                             or rax, rdx	     16183	i386-dis.c	FUNCTION_38
0x400648f	          0x4889c3	                            mov rbx, rax	     16183	i386-dis.c	FUNCTION_38
0x4006492	      0xbe00000000	                              mov esi, 0	     16184	i386-dis.c	FUNCTION_38	CALL_4
0x4006497	          0x4889c7	                            mov rdi, rax	     16184	i386-dis.c	FUNCTION_38	CALL_4
0x400649a	      0xe8519dffff	                         call sym.set_op	     16184	i386-dis.c	FUNCTION_38	CALL_4
0x400649f	          0x4889da	                            mov rdx, rbx	     16185	i386-dis.c	FUNCTION_38	CALL_5
0x40064a2	      0xbe01000000	                              mov esi, 1	     16185	i386-dis.c	FUNCTION_38	CALL_5
0x40064a7	      0xbf00000000	                              mov edi, 0	     16185	i386-dis.c	FUNCTION_38	CALL_5
0x40064ac	      0xe844b5ffff	            call sym.print_operand_value	     16185	i386-dis.c	FUNCTION_38	CALL_5
0x40064b1	      0xbf00000000	                              mov edi, 0	     16186	i386-dis.c	FUNCTION_38	CALL_6
0x40064b6	      0xe8e2c7ffff	                        call sym.oappend	     16186	i386-dis.c	FUNCTION_38	CALL_6
0x40064bb	              0x5b	                                 pop rbx	     16187	i386-dis.c	FUNCTION_38
0x40064bc	              0xc3	                                     ret	     16187	i386-dis.c	FUNCTION_38
HLE_Fixup1	CALL,1:FOR,0:SWITCH,0:WHILE,0:ELSE,0:DO,0:IF,3:functions,0	17
0x40057ad	        0x4883ec08	                              sub rsp, 8	     16981	i386-dis.c	FUNCTION_71
0x40057b1	    0x833d00000000	               cmp dword [0x040057b8], 3	     16982	i386-dis.c	FUNCTION_71	IF_1
0x40057b8	            0x7436	                            je 0x40057f0	     16982	i386-dis.c	FUNCTION_71	IF_1
0x40057ba	    0x8b0500000000	            mov eax, dword [0x040057c0] 	     16983	i386-dis.c	FUNCTION_71	IF_1
0x40057c0	            0xa804	                              test al, 4	     16983	i386-dis.c	FUNCTION_71	IF_1
0x40057c2	            0x742c	                            je 0x40057f0	     16983	i386-dis.c	FUNCTION_71	IF_1
0x40057c4	            0xa801	                              test al, 1	     16985	i386-dis.c	FUNCTION_71	IF_1	IF_2
0x40057c6	            0x7412	                            je 0x40057da	     16985	i386-dis.c	FUNCTION_71	IF_1	IF_2
0x40057c8	    0x486315000000	         movsxd rdx, dword [0x040057cf] 	     16986	i386-dis.c	FUNCTION_71	IF_1	IF_2
0x40057cf	    0xc70495000000	                mov dword [rdx*4], 0x4f3	     16986	i386-dis.c	FUNCTION_71	IF_1	IF_2
0x40057da	            0xa802	                              test al, 2	     16987	i386-dis.c	FUNCTION_71	IF_1	IF_3
0x40057dc	            0x7412	                            je 0x40057f0	     16987	i386-dis.c	FUNCTION_71	IF_1	IF_3
0x40057de	    0x486305000000	         movsxd rax, dword [0x040057e5] 	     16988	i386-dis.c	FUNCTION_71	IF_1	IF_3
0x40057e5	    0xc70485000000	                mov dword [rax*4], 0x2f2	     16988	i386-dis.c	FUNCTION_71	IF_1	IF_3
0x40057f0	      0xe800ffffff	                           call sym.OP_E	     16991	i386-dis.c	FUNCTION_71	CALL_1
0x40057f5	        0x4883c408	                              add rsp, 8	     16992	i386-dis.c	FUNCTION_71
0x40057f9	              0xc3	                                     ret	     16992	i386-dis.c	FUNCTION_71
XMM_Fixup	CALL,2:FOR,0:SWITCH,1:WHILE,0:ELSE,1:DO,0:IF,1:functions,0	20
0x400412e	        0x4883ec08	                              sub rsp, 8	     17050	i386-dis.c	FUNCTION_75
0x4004132	    0x803d00000000	                cmp byte [0x04004139], 0	     17053	i386-dis.c	FUNCTION_75	IF_1
0x4004139	            0x742d	                            je 0x4004168	     17053	i386-dis.c	FUNCTION_75	IF_1
0x400413b	    0x8b0500000000	            mov eax, dword [0x04004141] 	     17055	i386-dis.c	FUNCTION_75	IF_1	SWITCH_1
0x4004141	      0x3d80000000	                           cmp eax, 0x80	     17055	i386-dis.c	FUNCTION_75	IF_1	SWITCH_1
0x4004146	            0x7409	                            je 0x4004151	     17055	i386-dis.c	FUNCTION_75	IF_1	SWITCH_1
0x4004148	      0x3d00010000	                          cmp eax, 0x100	     17055	i386-dis.c	FUNCTION_75	IF_1	SWITCH_1
0x400414d	            0x740b	                            je 0x400415a	     17055	i386-dis.c	FUNCTION_75	IF_1	SWITCH_1
0x400414f	            0xeb12	                           jmp 0x4004163	     17055	i386-dis.c	FUNCTION_75	IF_1	SWITCH_1
0x4004151	    0x488b05000000	            mov rax, qword [0x04004158] 	     17058	i386-dis.c	FUNCTION_75	IF_1	SWITCH_1
0x4004158	            0xeb15	                           jmp 0x400416f	     17059	i386-dis.c	FUNCTION_75	IF_1	SWITCH_1
0x400415a	    0x488b05000000	            mov rax, qword [0x04004161] 	     17061	i386-dis.c	FUNCTION_75	IF_1	SWITCH_1
0x4004161	            0xeb0c	                           jmp 0x400416f	     17062	i386-dis.c	FUNCTION_75	IF_1	SWITCH_1
0x4004163	      0xe800000000	                          call 0x4004168	     17064	i386-dis.c	FUNCTION_75	IF_1	SWITCH_1	CALL_1
0x4004168	    0x488b05000000	            mov rax, qword [0x0400416f] 	     17068	i386-dis.c	FUNCTION_75	ELSE_1
0x400416f	          0x4863ff	                         movsxd rdi, edi	     17069	i386-dis.c	FUNCTION_75	CALL_2
0x4004172	        0x488b3cf8	            mov rdi, qword [rax + rdi*8]	     17069	i386-dis.c	FUNCTION_75	CALL_2
0x4004176	      0xe822ebffff	                        call sym.oappend	     17069	i386-dis.c	FUNCTION_75	CALL_2
0x400417b	        0x4883c408	                              add rsp, 8	     17070	i386-dis.c	FUNCTION_75
0x400417f	              0xc3	                                     ret	     17070	i386-dis.c	FUNCTION_75
OP_EM	CALL,3:FOR,0:SWITCH,0:WHILE,0:ELSE,1:DO,0:IF,5:functions,0	43
0x40058b5	        0x4883ec08	                              sub rsp, 8	     16490	i386-dis.c	FUNCTION_52
0x40058b9	    0x833d00000000	               cmp dword [0x040058c0], 3	     16494	i386-dis.c	FUNCTION_52	IF_1
0x40058c0	            0x7434	                            je 0x40058f6	     16494	i386-dis.c	FUNCTION_52	IF_1
0x40058c2	    0x803d00000000	                cmp byte [0x040058c9], 0	     16496	i386-dis.c	FUNCTION_52	IF_1	IF_2
0x40058c9	            0x7424	                            je 0x40058ef	     16496	i386-dis.c	FUNCTION_52	IF_1	IF_2
0x40058cb	          0x8d47fc	                      lea eax, [rdi - 4]	     16497	i386-dis.c	FUNCTION_52	IF_1	IF_2
0x40058ce	          0x83f801	                              cmp eax, 1	     16497	i386-dis.c	FUNCTION_52	IF_1	IF_2
0x40058d1	            0x771c	                            ja 0x40058ef	     16497	i386-dis.c	FUNCTION_52	IF_1	IF_2
0x40058d3	    0x8b0500000000	            mov eax, dword [0x040058d9] 	     16499	i386-dis.c	FUNCTION_52	IF_1	IF_2
0x40058d9	      0x2500020000	                          and eax, 0x200	     16499	i386-dis.c	FUNCTION_52	IF_1	IF_2
0x40058de	          0x83f801	                              cmp eax, 1	     16499	i386-dis.c	FUNCTION_52	IF_1	IF_2
0x40058e1	            0x19ff	                            sbb edi, edi	     16499	i386-dis.c	FUNCTION_52	IF_1	IF_2
0x40058e3	          0x83e7fd	                     and edi, 0xfffffffd	     16499	i386-dis.c	FUNCTION_52	IF_1	IF_2
0x40058e6	          0x83c70d	                            add edi, 0xd	     16499	i386-dis.c	FUNCTION_52	IF_1	IF_2
0x40058e9	     0x90500000000	              or dword [0x040058ef], eax	     16500	i386-dis.c	FUNCTION_52	IF_1	IF_2
0x40058ef	      0xe801feffff	                           call sym.OP_E	     16502	i386-dis.c	FUNCTION_52	IF_1	CALL_1
0x40058f4	            0xeb6e	                           jmp 0x4005964	     16503	i386-dis.c	FUNCTION_52	IF_1
0x40058f6	        0x40f6c604	                             test sil, 4	     16506	i386-dis.c	FUNCTION_52	IF_3
0x40058fa	            0x740a	                            je 0x4005906	     16506	i386-dis.c	FUNCTION_52	IF_3
0x40058fc	          0x83ff05	                              cmp edi, 5	     16506	i386-dis.c	FUNCTION_52	IF_3
0x40058ff	            0x7505	                           jne 0x4005906	     16506	i386-dis.c	FUNCTION_52	IF_3
0x4005901	      0xe8d0a8ffff	                   call sym.swap_operand	     16507	i386-dis.c	FUNCTION_52	CALL_2
0x4005906	    0x803d00000000	                cmp byte [0x0400590d], 0	     16510	i386-dis.c	FUNCTION_52
0x400590d	            0x7505	                           jne 0x4005914	     16510	i386-dis.c	FUNCTION_52
0x400590f	      0xe800000000	                          call 0x4005914	     16510	i386-dis.c	FUNCTION_52
0x4005914	    0x488305000000	               add qword [0x0400591c], 1	     16511	i386-dis.c	FUNCTION_52
0x400591c	    0x8b0500000000	            mov eax, dword [0x04005922] 	     16512	i386-dis.c	FUNCTION_52
0x4005922	      0x2500020000	                          and eax, 0x200	     16512	i386-dis.c	FUNCTION_52
0x4005927	     0x90500000000	              or dword [0x0400592d], eax	     16512	i386-dis.c	FUNCTION_52
0x400592d	    0x8b1500000000	            mov edx, dword [0x04005933] 	     16513	i386-dis.c	FUNCTION_52
0x4005933	    0x488b0d000000	            mov rcx, qword [0x0400593a] 	     16522	i386-dis.c	FUNCTION_52	ELSE_1
0x400593a	            0x85c0	                           test eax, eax	     16514	i386-dis.c	FUNCTION_52	IF_4
0x400593c	            0x741a	                            je 0x4005958	     16514	i386-dis.c	FUNCTION_52	IF_4
0x400593e	    0x488b0d000000	            mov rcx, qword [0x04005945] 	     16516	i386-dis.c	FUNCTION_52	IF_4
0x4005945	    0xf60500000000	               test byte [0x0400594c], 1	     16517	i386-dis.c	FUNCTION_52	IF_4
0x400594c	            0x740a	                            je 0x4005958	     16517	i386-dis.c	FUNCTION_52	IF_4
0x400594e	    0x830d00000000	            or dword [0x04005955], 0x41 	     16517	i386-dis.c	FUNCTION_52	IF_4
0x4005955	          0x83c208	                              add edx, 8	     16519	i386-dis.c	FUNCTION_52	IF_4	IF_5
0x4005958	          0x4863d2	                         movsxd rdx, edx	     16523	i386-dis.c	FUNCTION_52	CALL_3
0x400595b	        0x488b3cd1	            mov rdi, qword [rcx + rdx*8]	     16523	i386-dis.c	FUNCTION_52	CALL_3
0x400595f	      0xe839d3ffff	                        call sym.oappend	     16523	i386-dis.c	FUNCTION_52	CALL_3
0x4005964	        0x4883c408	                              add rsp, 8	     16524	i386-dis.c	FUNCTION_52
0x4005968	              0xc3	                                     ret	     16524	i386-dis.c	FUNCTION_52
get32	CALL,0:FOR,0:SWITCH,0:WHILE,0:ELSE,0:DO,0:IF,0:functions,0	24
0x4002061	        0x4883ec08	                              sub rsp, 8	     15795	i386-dis.c	FUNCTION_29
0x4002065	    0x488b05000000	            mov rax, qword [0x0400206c] 	     15798	i386-dis.c	FUNCTION_29
0x400206c	        0x488d7004	                      lea rsi, [rax + 4]	     15798	i386-dis.c	FUNCTION_29
0x4002070	    0x488b3d000000	            mov rdi, qword [0x04002077] 	     15798	i386-dis.c	FUNCTION_29
0x4002077	        0x488b4768	            mov rax, qword [rdi + 0x68] 	     15798	i386-dis.c	FUNCTION_29
0x400207b	          0x483b30	                    cmp rsi, qword [rax]	     15798	i386-dis.c	FUNCTION_29
0x400207e	            0x7605	                           jbe 0x4002085	     15798	i386-dis.c	FUNCTION_29
0x4002080	      0xe826feffff	                     call sym.fetch_data	     15798	i386-dis.c	FUNCTION_29
0x4002085	    0x488b35000000	            mov rsi, qword [0x0400208c] 	     15799	i386-dis.c	FUNCTION_29
0x400208c	           0xfb60e	                   movzx ecx, byte [rsi]	     15799	i386-dis.c	FUNCTION_29
0x400208f	         0xfb65601	               movzx edx, byte [rsi + 1]	     15801	i386-dis.c	FUNCTION_29
0x4002093	        0x48c1e208	                              shl rdx, 8	     15801	i386-dis.c	FUNCTION_29
0x4002097	         0xfb64602	               movzx eax, byte [rsi + 2]	     15801	i386-dis.c	FUNCTION_29
0x400209b	        0x48c1e010	                           shl rax, 0x10	     15801	i386-dis.c	FUNCTION_29
0x400209f	          0x4809d0	                             or rax, rdx	     15801	i386-dis.c	FUNCTION_29
0x40020a2	          0x4809c8	                             or rax, rcx	     15801	i386-dis.c	FUNCTION_29
0x40020a5	          0x4889c2	                            mov rdx, rax	     15801	i386-dis.c	FUNCTION_29
0x40020a8	        0x488d4604	                      lea rax, [rsi + 4]	     15802	i386-dis.c	FUNCTION_29
0x40020ac	    0x488905000000	            mov qword [0x040020b3], rax 	     15802	i386-dis.c	FUNCTION_29
0x40020b3	         0xfb64603	               movzx eax, byte [rsi + 3]	     15803	i386-dis.c	FUNCTION_29
0x40020b7	        0x48c1e018	                           shl rax, 0x18	     15803	i386-dis.c	FUNCTION_29
0x40020bb	          0x4809d0	                             or rax, rdx	     15803	i386-dis.c	FUNCTION_29
0x40020be	        0x4883c408	                              add rsp, 8	     15804	i386-dis.c	FUNCTION_29
0x40020c2	              0xc3	                                     ret	     15804	i386-dis.c	FUNCTION_29
OP_EX_VexW	CALL,3:FOR,0:SWITCH,0:WHILE,0:ELSE,1:DO,0:IF,4:functions,0	39
0x40060f2	              0x55	                                push rbp	     17505	i386-dis.c	FUNCTION_86
0x40060f3	              0x53	                                push rbx	     17505	i386-dis.c	FUNCTION_86
0x40060f4	        0x4883ec08	                              sub rsp, 8	     17505	i386-dis.c	FUNCTION_86
0x40060f8	            0x89fd	                            mov ebp, edi	     17505	i386-dis.c	FUNCTION_86
0x40060fa	            0x89f3	                            mov ebx, esi	     17505	i386-dis.c	FUNCTION_86
0x40060fc	    0x803d00000000	                cmp byte [0x04006103], 0	     17508	i386-dis.c	FUNCTION_86	IF_1
0x4006103	            0x7538	                           jne 0x400613d	     17508	i386-dis.c	FUNCTION_86	IF_1
0x4006105	    0x803d00000000	                cmp byte [0x0400610c], 0	     17511	i386-dis.c	FUNCTION_86	IF_1
0x400610c	            0x7505	                           jne 0x4006113	     17511	i386-dis.c	FUNCTION_86	IF_1
0x400610e	      0xe800000000	                          call 0x4006113	     17511	i386-dis.c	FUNCTION_86	IF_1
0x4006113	    0x488305000000	               add qword [0x0400611b], 1	     17512	i386-dis.c	FUNCTION_86	IF_1
0x400611b	      0xbaffffffff	                     mov edx, 0xffffffff	     17506	i386-dis.c	FUNCTION_86
0x4006120	    0x833d00000000	               cmp dword [0x04006127], 0	     17514	i386-dis.c	FUNCTION_86	IF_1	IF_2
0x4006127	            0x7434	                            je 0x400615d	     17514	i386-dis.c	FUNCTION_86	IF_1	IF_2
0x4006129	      0xbe00000000	                              mov esi, 0	     17515	i386-dis.c	FUNCTION_86	IF_1	CALL_1
0x400612e	            0x89df	                            mov edi, ebx	     17515	i386-dis.c	FUNCTION_86	IF_1	CALL_1
0x4006130	      0xe8f3c9ffff	                   call sym.get_vex_imm8	     17515	i386-dis.c	FUNCTION_86	IF_1	CALL_1
0x4006135	          0xc0e804	                               shr al, 4	     17515	i386-dis.c	FUNCTION_86	IF_1	CALL_1
0x4006138	           0xfb6d0	                           movzx edx, al	     17515	i386-dis.c	FUNCTION_86	IF_1	CALL_1
0x400613b	            0xeb20	                           jmp 0x400615d	     17515	i386-dis.c	FUNCTION_86	IF_1	CALL_1
0x400613d	      0xbaffffffff	                     mov edx, 0xffffffff	     17506	i386-dis.c	FUNCTION_86
0x4006142	    0x833d00000000	               cmp dword [0x04006149], 0	     17519	i386-dis.c	FUNCTION_86	ELSE_1	IF_3
0x4006149	            0x7512	                           jne 0x400615d	     17519	i386-dis.c	FUNCTION_86	ELSE_1	IF_3
0x400614b	      0xbe01000000	                              mov esi, 1	     17520	i386-dis.c	FUNCTION_86	ELSE_1	CALL_2
0x4006150	            0x89df	                            mov edi, ebx	     17520	i386-dis.c	FUNCTION_86	ELSE_1	CALL_2
0x4006152	      0xe8d1c9ffff	                   call sym.get_vex_imm8	     17520	i386-dis.c	FUNCTION_86	ELSE_1	CALL_2
0x4006157	          0xc0e804	                               shr al, 4	     17520	i386-dis.c	FUNCTION_86	ELSE_1	CALL_2
0x400615a	           0xfb6d0	                           movzx edx, al	     17520	i386-dis.c	FUNCTION_86	ELSE_1	CALL_2
0x400615d	            0x89de	                            mov esi, ebx	     17523	i386-dis.c	FUNCTION_86	CALL_3
0x400615f	            0x89ef	                            mov edi, ebp	     17523	i386-dis.c	FUNCTION_86	CALL_3
0x4006161	      0xe839feffff	                   call sym.OP_EX_VexReg	     17523	i386-dis.c	FUNCTION_86	CALL_3
0x4006166	    0x803d00000000	                cmp byte [0x0400616d], 0	     17525	i386-dis.c	FUNCTION_86	IF_4
0x400616d	            0x7408	                            je 0x4006177	     17525	i386-dis.c	FUNCTION_86	IF_4
0x400616f	    0x488305000000	               add qword [0x04006177], 1	     17526	i386-dis.c	FUNCTION_86	IF_4
0x4006177	    0xc60500000000	                mov byte [0x0400617e], 1	     17527	i386-dis.c	FUNCTION_86
0x400617e	        0x4883c408	                              add rsp, 8	     17528	i386-dis.c	FUNCTION_86
0x4006182	              0x5b	                                 pop rbx	     17528	i386-dis.c	FUNCTION_86
0x4006183	              0x5d	                                 pop rbp	     17528	i386-dis.c	FUNCTION_86
0x4006184	              0xc3	                                     ret	     17528	i386-dis.c	FUNCTION_86
swap_operand	CALL,0:FOR,0:SWITCH,0:WHILE,0:ELSE,0:DO,0:IF,0:functions,0	6
0x40001d6	    0x488b05000000	            mov rax, qword [0x040001dd] 	     13898	i386-dis.c	FUNCTION_11
0x40001dd	          0xc6002e	                    mov byte [rax], 0x2e	     13898	i386-dis.c	FUNCTION_11
0x40001e0	        0xc6400173	                mov byte [rax + 1], 0x73	     13899	i386-dis.c	FUNCTION_11
0x40001e4	        0x4883c002	                              add rax, 2	     13900	i386-dis.c	FUNCTION_11
0x40001e8	    0x488905000000	            mov qword [0x040001ef], rax 	     13900	i386-dis.c	FUNCTION_11
0x40001ef	              0xc3	                                     ret	     13900	i386-dis.c	FUNCTION_11
OP_C	CALL,1:FOR,0:SWITCH,0:WHILE,0:ELSE,2:DO,0:IF,2:functions,0	28
0x4002daa	        0x4883ec08	                              sub rsp, 8	     16353	i386-dis.c	FUNCTION_46
0x4002dae	    0xf60500000000	               test byte [0x04002db5], 4	     16355	i386-dis.c	FUNCTION_46	IF_1
0x4002db5	            0x740f	                            je 0x4002dc6	     16355	i386-dis.c	FUNCTION_46	IF_1
0x4002db7	    0x830d00000000	            or dword [0x04002dbe], 0x44 	     16357	i386-dis.c	FUNCTION_46	IF_1
0x4002dbe	    0x41b808000000	                              mov r8d, 8	     16358	i386-dis.c	FUNCTION_46	IF_1
0x4002dc4	            0xeb3f	                           jmp 0x4002e05	     16358	i386-dis.c	FUNCTION_46	IF_1
0x4002dc6	    0x833d00000000	               cmp dword [0x04002dcd], 2	     16360	i386-dis.c	FUNCTION_46	ELSE_1	IF_2
0x4002dcd	            0x7430	                            je 0x4002dff	     16360	i386-dis.c	FUNCTION_46	ELSE_1	IF_2
0x4002dcf	    0x41b800000000	                              mov r8d, 0	     16367	i386-dis.c	FUNCTION_46	ELSE_2
0x4002dd5	    0xf60500000000	               test byte [0x04002ddc], 4	     16360	i386-dis.c	FUNCTION_46	ELSE_1	IF_2
0x4002ddc	            0x7427	                            je 0x4002e05	     16360	i386-dis.c	FUNCTION_46	ELSE_1	IF_2
0x4002dde	    0x486305000000	         movsxd rax, dword [0x04002de5] 	     16362	i386-dis.c	FUNCTION_46	ELSE_1	IF_2
0x4002de5	    0xc70485000000	                    mov dword [rax*4], 0	     16362	i386-dis.c	FUNCTION_46	ELSE_1	IF_2
0x4002df0	    0x830d00000000	                or dword [0x04002df7], 4	     16363	i386-dis.c	FUNCTION_46	ELSE_1	IF_2
0x4002df7	    0x41b808000000	                              mov r8d, 8	     16364	i386-dis.c	FUNCTION_46	ELSE_1	IF_2
0x4002dfd	            0xeb06	                           jmp 0x4002e05	     16364	i386-dis.c	FUNCTION_46	ELSE_1	IF_2
0x4002dff	    0x41b800000000	                              mov r8d, 0	     16367	i386-dis.c	FUNCTION_46	ELSE_2
0x4002e05	    0x440305000000	             add r8d, dword [0x04002e0c]	        33	stdio2.h	FUNCTION_101	CALL_1
0x4002e0c	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_101	CALL_1
0x4002e11	      0xba64000000	                           mov edx, 0x64	        33	stdio2.h	FUNCTION_101	CALL_1
0x4002e16	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_101	CALL_1
0x4002e1b	      0xbf00000000	                              mov edi, 0	        33	stdio2.h	FUNCTION_101	CALL_1
0x4002e20	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_101	CALL_1
0x4002e25	      0xe800000000	                          call 0x4002e2a	        33	stdio2.h	FUNCTION_101	CALL_1
0x4002e2a	      0xbf00000000	                              mov edi, 0	     16369	i386-dis.c	FUNCTION_46	CALL_1
0x4002e2f	      0xe888feffff	            call sym.oappend_maybe_intel	     16369	i386-dis.c	FUNCTION_46	CALL_1
0x4002e34	        0x4883c408	                              add rsp, 8	     16370	i386-dis.c	FUNCTION_46
0x4002e38	              0xc3	                                     ret	     16370	i386-dis.c	FUNCTION_46
NOP_Fixup1	CALL,2:FOR,0:SWITCH,0:WHILE,0:ELSE,1:DO,0:IF,1:functions,0	15
0x4006a39	        0x4883ec08	                              sub rsp, 8	     16692	i386-dis.c	FUNCTION_60
0x4006a3d	    0xf60500000000	               test byte [0x04006a44], 2	     16693	i386-dis.c	FUNCTION_60	IF_1
0x4006a44	            0x7518	                           jne 0x4006a5e	     16693	i386-dis.c	FUNCTION_60	IF_1
0x4006a46	    0x8b0500000000	            mov eax, dword [0x04006a4c] 	     16695	i386-dis.c	FUNCTION_60	IF_1
0x4006a4c	            0x85c0	                           test eax, eax	     16694	i386-dis.c	FUNCTION_60	IF_1
0x4006a4e	            0x7415	                            je 0x4006a65	     16694	i386-dis.c	FUNCTION_60	IF_1
0x4006a50	          0x83f848	                           cmp eax, 0x48	     16694	i386-dis.c	FUNCTION_60	IF_1
0x4006a53	            0x7410	                            je 0x4006a65	     16694	i386-dis.c	FUNCTION_60	IF_1
0x4006a55	    0x833d00000000	               cmp dword [0x04006a5c], 2	     16696	i386-dis.c	FUNCTION_60	IF_1
0x4006a5c	            0x7507	                           jne 0x4006a65	     16696	i386-dis.c	FUNCTION_60	IF_1
0x4006a5e	      0xe8e5d9ffff	                         call sym.OP_REG	     16697	i386-dis.c	FUNCTION_60	CALL_1
0x4006a63	            0xeb0a	                           jmp 0x4006a6f	     16697	i386-dis.c	FUNCTION_60	CALL_1
0x4006a65	    0xc70500000000	       mov dword [0x04006a6f], 0x706f6e 	       110	string3.h	FUNCTION_124	CALL_3
0x4006a6f	        0x4883c408	                              add rsp, 8	     16700	i386-dis.c	FUNCTION_60
0x4006a73	              0xc3	                                     ret	     16700	i386-dis.c	FUNCTION_60
putop	CALL,8:FOR,1:SWITCH,3:WHILE,2:ELSE,41:DO,0:IF,111:functions,0	1482
0x40002a6	            0x4157	                                push r15	     13983	i386-dis.c	FUNCTION_17
0x40002a8	            0x4156	                                push r14	     13983	i386-dis.c	FUNCTION_17
0x40002aa	            0x4155	                                push r13	     13983	i386-dis.c	FUNCTION_17
0x40002ac	            0x4154	                                push r12	     13983	i386-dis.c	FUNCTION_17
0x40002ae	              0x55	                                push rbp	     13983	i386-dis.c	FUNCTION_17
0x40002af	              0x53	                                push rbx	     13983	i386-dis.c	FUNCTION_17
0x40002b0	        0x4883ec48	                           sub rsp, 0x48	     13983	i386-dis.c	FUNCTION_17
0x40002b4	            0x89f0	                            mov eax, esi	     13983	i386-dis.c	FUNCTION_17
0x40002b6	    0x64488b342528	                mov rsi, qword fs:[0x28]	     13983	i386-dis.c	FUNCTION_17
0x40002bf	      0x4889742438	             mov qword [rsp + 0x38], rsi	     13983	i386-dis.c	FUNCTION_17
0x40002c4	            0x31f6	                            xor esi, esi	     13983	i386-dis.c	FUNCTION_17
0x40002c6	           0xfb617	                   movzx edx, byte [rdi]	     13996	i386-dis.c	FUNCTION_17	FOR_1
0x40002c9	            0x84d2	                             test dl, dl	     13996	i386-dis.c	FUNCTION_17	FOR_1
0x40002cb	     0xf8471150000	                            je 0x4001842	     13996	i386-dis.c	FUNCTION_17	FOR_1
0x40002d1	    0x440fb6150000	          movzx r10d, byte [0x040002d9] 	     14010	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1
0x40002d9	    0x8b3500000000	            mov esi, dword [0x040002df] 	     14559	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110
0x40002df	          0x4189f5	                           mov r13d, esi	     14559	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110
0x40002e2	    0x4181e5000200	                         and r13d, 0x200	     14559	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110
0x40002e9	    0x8b1d00000000	            mov ebx, dword [0x040002ef] 	     14556	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x40002ef	        0x895c2428	             mov dword [rsp + 0x28], ebx	     14556	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x40002f3	    0x448b25000000	           mov r12d, dword [0x040002fa] 	     14557	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x40002fa	        0x4183e408	                             and r12d, 8	     14557	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x40002fe	     0xfb61d000000	           movzx ebx, byte [0x04000305] 	     14532	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_103
0x4000305	        0x885c241b	               mov byte [rsp + 0x1b], bl	     14532	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_103
0x4000309	    0x8b1d00000000	            mov ebx, dword [0x0400030f] 	     14486	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_95
0x400030f	        0x895c2408	                mov dword [rsp + 8], ebx	     14486	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_95
0x4000313	            0x89f3	                            mov ebx, esi	     14441	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_87
0x4000315	    0x81e300040000	                          and ebx, 0x400	     14441	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_87
0x400031b	        0x895c2404	                mov dword [rsp + 4], ebx	     14441	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_87
0x400031f	          0x4584d2	                         test r10b, r10b	     14323	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_63
0x4000322	       0xf9544241a	                 setne byte [rsp + 0x1a]	     14323	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_63
0x4000327	    0x448b35000000	           mov r14d, dword [0x0400032e] 	     14323	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_63
0x400032e	        0x4180fa01	                             cmp r10b, 1	     14323	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_63
0x4000332	            0x19c9	                            sbb ecx, ecx	     14323	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_63
0x4000334	          0x83e108	                              and ecx, 8	     14323	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_63
0x4000337	          0x8d5964	                   lea ebx, [rcx + 0x64]	     14323	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_63
0x400033a	        0x885c242d	               mov byte [rsp + 0x2d], bl	     14323	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_63
0x400033e	    0x488b0d000000	            mov rcx, qword [0x04000345] 	     14323	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_63
0x4000345	    0x8b2d00000000	            mov ebp, dword [0x0400034b] 	     14323	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_63
0x400034b	            0x89f3	                            mov ebx, esi	     14214	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_42
0x400034d	    0x81e300080000	                          and ebx, 0x800	     14214	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_42
0x4000353	        0x895c2414	             mov dword [rsp + 0x14], ebx	     14214	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_42
0x4000357	     0xfbe1d000000	           movsx ebx, byte [0x0400035e] 	     14210	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_41
0x400035e	        0x895c2410	             mov dword [rsp + 0x10], ebx	     14210	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_41
0x4000362	            0x89f3	                            mov ebx, esi	     14135	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x4000364	          0x83e328	                           and ebx, 0x28	     14135	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x4000367	        0x895c2420	             mov dword [rsp + 0x20], ebx	     14135	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x400036b	          0x83fb08	                              cmp ebx, 8	     14136	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x400036e	        0x410f94c1	                                sete r9b	     14136	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x4000372	          0x83fb20	                           cmp ebx, 0x20	     14136	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x4000375	        0x410f94c0	                                sete r8b	     14136	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x4000379	          0x4509c1	                             or r9d, r8d	     14136	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x400037c	      0x44884c242c	              mov byte [rsp + 0x2c], r9b	     14136	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x4000381	          0x83e620	                           and esi, 0x20	     14141	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	IF_29
0x4000384	        0x89742424	             mov dword [rsp + 0x24], esi	     14141	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	IF_29
0x4000388	        0x4180fa01	                             cmp r10b, 1	     14141	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	IF_29
0x400038c	            0x19f6	                            sbb esi, esi	     14141	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	IF_29
0x400038e	          0x83e6fc	                     and esi, 0xfffffffc	     14141	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	IF_29
0x4000391	          0x83c677	                           add esi, 0x77	     14141	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	IF_29
0x4000394	      0x408874242e	              mov byte [rsp + 0x2e], sil	     14141	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	IF_29
0x4000399	      0xc644241900	                mov byte [rsp + 0x19], 0	     14141	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	IF_29
0x400039e	      0xc644241800	                mov byte [rsp + 0x18], 0	     14141	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	IF_29
0x40003a3	      0xbb00000000	                              mov ebx, 0	     14141	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	IF_29
0x40003a8	    0x41bb01000000	                             mov r11d, 1	     14141	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	IF_29
0x40003ae	    0x41b800000000	                              mov r8d, 0	     14141	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	IF_29
0x40003b4	    0xc70424010000	                      mov dword [rsp], 1	     14141	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	IF_29
0x40003bb	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	     14141	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	IF_29
0x40003c3	            0x89c6	                            mov esi, eax	     14326	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64
0x40003c5	          0x83e604	                              and esi, 4	     14326	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64
0x40003c8	          0x4189c7	                           mov r15d, eax	     14332	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20	IF_66
0x40003cb	        0x4183e701	                             and r15d, 1	     14332	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20	IF_66
0x40003cf	      0x44884c242f	              mov byte [rsp + 0x2f], r9b	     14144	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	ELSE_10
0x40003d4	          0x83e002	                              and eax, 2	     14115	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	IF_23
0x40003d7	        0x8944240c	              mov dword [rsp + 0xc], eax	     14115	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	IF_23
0x40003db	    0x41b900000000	                              mov r9d, 0	     14118	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	ELSE_8
0x40003e1	          0x8d42df	                   lea eax, [rdx - 0x21]	     13998	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x40003e4	            0x3c5c	                            cmp al, 0x5c	     13998	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x40003e6	            0x7718	                            ja 0x4000400	     13998	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x40003e8	           0xfb6c0	                           movzx eax, al	     13998	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x40003eb	    0xff24c5000000	                       jmp qword [rax*8]	     13998	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x40003f2	          0x4889f8	                            mov rax, rdi	     13998	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x40003f5	    0x41b901000000	                              mov r9d, 1	     14018	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x40003fb	      0xe90c140000	                           jmp 0x400180c	     14018	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000400	            0x8811	                      mov byte [rcx], dl	     14001	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000402	        0x488d4901	                      lea rcx, [rcx + 1]	     14001	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000406	          0x4889f8	                            mov rax, rdi	     14002	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000409	      0xbb01000000	                              mov ebx, 1	     14002	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x400040e	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000414	      0xe9f3130000	                           jmp 0x400180c	     14002	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000419	        0x4183c301	                             add r11d, 1	     14004	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x400041d	          0x4889f8	                            mov rax, rdi	     14005	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000420	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000426	      0xe9e1130000	                           jmp 0x400180c	     14005	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x400042b	          0x4889f8	                            mov rax, rdi	     14008	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x400042e	    0xc70424000000	                      mov dword [rsp], 0	     14007	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000435	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400043b	      0xe9cc130000	                           jmp 0x400180c	     14008	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000440	          0x4584d2	                         test r10b, r10b	     14010	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1
0x4000443	            0x7541	                           jne 0x4000486	     14010	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1
0x4000445	          0x4889f8	                            mov rax, rdi	     14010	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1
0x4000448	    0x41b901000000	                              mov r9d, 1	     14018	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x400044e	      0xe9b9130000	                           jmp 0x400180c	     14018	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000453	            0x3c7d	                            cmp al, 0x7d	     14013	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1	WHILE_1	IF_2
0x4000455	            0x7404	                            je 0x400045b	     14013	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1	WHILE_1	IF_2
0x4000457	            0x84c0	                             test al, al	     14013	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1	WHILE_1	IF_2
0x4000459	            0x752b	                           jne 0x4000486	     14013	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1	WHILE_1	IF_2
0x400045b	            0x84db	                             test bl, bl	     14013	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1	WHILE_1	IF_2
0x400045d	            0x7407	                            je 0x4000466	     14013	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1	WHILE_1	IF_2
0x400045f	    0x48890d000000	            mov qword [0x04000466], rcx 	     14013	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1	WHILE_1	IF_2
0x4000466	      0x807c241800	                cmp byte [rsp + 0x18], 0	     14013	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1	WHILE_1	IF_2
0x400046b	            0x7406	                            je 0x4000473	     14013	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1	WHILE_1	IF_2
0x400046d	    0x892d00000000	            mov dword [0x04000473], ebp 	     14013	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1	WHILE_1	IF_2
0x4000473	      0x807c241900	                cmp byte [rsp + 0x19], 0	     14013	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1	WHILE_1	IF_2
0x4000478	            0x7407	                            je 0x4000481	     14013	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1	WHILE_1	IF_2
0x400047a	    0x448935000000	           mov dword [0x04000481], r14d 	     14013	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1	WHILE_1	IF_2
0x4000481	      0xe800000000	                          call 0x4000486	     14014	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1	WHILE_1	IF_2
0x4000486	        0x4883c701	                              add rdi, 1	     14012	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1	WHILE_1
0x400048a	           0xfb607	                   movzx eax, byte [rdi]	     14012	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1	WHILE_1
0x400048d	            0x3c7c	                            cmp al, 0x7c	     14012	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1	WHILE_1
0x400048f	            0x75c2	                           jne 0x4000453	     14012	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1	WHILE_1
0x4000491	          0x4889f8	                            mov rax, rdi	     14012	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_1	WHILE_1
0x4000494	    0x41b901000000	                              mov r9d, 1	     14018	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x400049a	      0xe96d130000	                           jmp 0x400180c	     14018	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x400049f	            0x84c0	                             test al, al	     14023	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	WHILE_2	IF_3
0x40004a1	            0x752b	                           jne 0x40004ce	     14023	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	WHILE_2	IF_3
0x40004a3	            0x84db	                             test bl, bl	     14023	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	WHILE_2	IF_3
0x40004a5	            0x7407	                            je 0x40004ae	     14023	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	WHILE_2	IF_3
0x40004a7	    0x48890d000000	            mov qword [0x040004ae], rcx 	     14023	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	WHILE_2	IF_3
0x40004ae	      0x807c241800	                cmp byte [rsp + 0x18], 0	     14023	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	WHILE_2	IF_3
0x40004b3	            0x7406	                            je 0x40004bb	     14023	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	WHILE_2	IF_3
0x40004b5	    0x892d00000000	            mov dword [0x040004bb], ebp 	     14023	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	WHILE_2	IF_3
0x40004bb	      0x807c241900	                cmp byte [rsp + 0x19], 0	     14023	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	WHILE_2	IF_3
0x40004c0	            0x7407	                            je 0x40004c9	     14023	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	WHILE_2	IF_3
0x40004c2	    0x448935000000	           mov dword [0x040004c9], r14d 	     14023	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	WHILE_2	IF_3
0x40004c9	      0xe800000000	                          call 0x40004ce	     14024	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	WHILE_2	CALL_2
0x40004ce	        0x4883c701	                              add rdi, 1	     14021	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	WHILE_2
0x40004d2	           0xfb607	                   movzx eax, byte [rdi]	     14021	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	WHILE_2
0x40004d5	            0x3c7d	                            cmp al, 0x7d	     14021	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	WHILE_2
0x40004d7	            0x75c6	                           jne 0x400049f	     14021	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	WHILE_2
0x40004d9	          0x4889f8	                            mov rax, rdi	     14021	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	WHILE_2
0x40004dc	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40004e2	      0xe925130000	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40004e7	          0x4584d2	                         test r10b, r10b	     14030	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_4
0x40004ea	     0xf8534110000	                           jne 0x4001624	     14030	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_4
0x40004f0	      0x837c240803	                  cmp dword [rsp + 8], 3	     14032	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_5
0x40004f5	            0x7508	                           jne 0x40004ff	     14032	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_5
0x40004f7	            0x85f6	                           test esi, esi	     14032	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_5
0x40004f9	     0xf8433110000	                            je 0x4001632	     14032	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_5
0x40004ff	          0xc60162	                    mov byte [rcx], 0x62	     14033	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_5
0x4000502	        0x488d4901	                      lea rcx, [rcx + 1]	     14033	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_5
0x4000506	          0x4889f8	                            mov rax, rdi	     14033	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_5
0x4000509	      0xbb01000000	                              mov ebx, 1	     14033	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_5
0x400050e	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000514	      0xe9f3120000	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000519	          0x4585c0	                           test r8d, r8d	     14036	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_6
0x400051c	            0x7531	                           jne 0x400054f	     14036	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_6
0x400051e	        0x4183fb01	                             cmp r11d, 1	     14036	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_6
0x4000522	            0x752b	                           jne 0x400054f	     14036	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_6
0x4000524	          0x4584d2	                         test r10b, r10b	     14039	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_6	IF_7
0x4000527	     0xf8513110000	                           jne 0x4001640	     14039	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_6	IF_7
0x400052d	            0x85f6	                           test esi, esi	     14041	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_6	IF_8
0x400052f	     0xf8419110000	                            je 0x400164e	     14041	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_6	IF_8
0x4000535	          0xc60162	                    mov byte [rcx], 0x62	     14042	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_6	IF_8
0x4000538	        0x488d4901	                      lea rcx, [rcx + 1]	     14042	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_6	IF_8
0x400053c	          0x4889f8	                            mov rax, rdi	     14042	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_6	IF_8
0x400053f	      0xbb01000000	                              mov ebx, 1	     14042	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_6	IF_8
0x4000544	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400054a	      0xe9bd120000	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400054f	        0x4183f801	                              cmp r8d, 1	     14046	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x4000553	            0x750d	                           jne 0x4000562	     14046	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x4000555	        0x4183fb02	                             cmp r11d, 2	     14046	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x4000559	            0x7507	                           jne 0x4000562	     14046	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x400055b	      0x807c24304c	            cmp byte [rsp + 0x30], 0x4c 	     14048	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x4000560	            0x7450	                            je 0x40005b2	     14048	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x4000562	          0x4539d8	                           cmp r8d, r11d	     14050	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x4000565	            0x7320	                           jae 0x4000587	     14050	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x4000567	        0x4183f803	                              cmp r8d, 3	     14050	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x400056b	            0x771a	                            ja 0x4000587	     14050	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x400056d	          0x4489c0	                            mov eax, r8d	     14050	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x4000570	      0xc644043042	      mov byte [rsp + rax + 0x30], 0x42 	     14050	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x4000575	        0x458d4001	                       lea r8d, [r8 + 1]	     14050	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x4000579	          0x4889f8	                            mov rax, rdi	     14051	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x400057c	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000582	      0xe985120000	                           jmp 0x400180c	     14051	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x4000587	            0x84db	                             test bl, bl	     14051	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x4000589	            0x7407	                            je 0x4000592	     14051	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x400058b	    0x48890d000000	            mov qword [0x04000592], rcx 	     14051	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x4000592	      0x807c241800	                cmp byte [rsp + 0x18], 0	     14051	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x4000597	            0x7406	                            je 0x400059f	     14051	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x4000599	    0x892d00000000	            mov dword [0x0400059f], ebp 	     14051	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x400059f	      0x807c241900	                cmp byte [rsp + 0x19], 0	     14051	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x40005a4	            0x7407	                            je 0x40005ad	     14051	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x40005a6	    0x448935000000	           mov dword [0x040005ad], r14d 	     14051	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x40005ad	      0xe800000000	                          call 0x40005b2	     14050	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_9
0x40005b2	    0x833d00000000	               cmp dword [0x040005b9], 2	     14054	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_10
0x40005b9	     0xf8565ffffff	                           jne 0x4000524	     14054	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_10
0x40005bf	      0x837c240400	                  cmp dword [rsp + 4], 0	     14055	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_10
0x40005c4	     0xf855affffff	                           jne 0x4000524	     14055	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_10
0x40005ca	          0xc60161	                    mov byte [rcx], 0x61	     14057	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_10
0x40005cd	        0xc6410162	                mov byte [rcx + 1], 0x62	     14058	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_10
0x40005d1	        0xc6410273	                mov byte [rcx + 2], 0x73	     14059	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_10
0x40005d5	        0x488d4903	                      lea rcx, [rcx + 3]	     14059	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_10
0x40005d9	      0xbb01000000	                              mov ebx, 1	     14059	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_10
0x40005de	      0xe941ffffff	                           jmp 0x4000524	     14059	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_1	IF_10
0x40005e3	          0x4585c9	                           test r9d, r9d	     14066	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_11
0x40005e6	            0x750e	                           jne 0x40005f6	     14066	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_11
0x40005e8	          0x4889f8	                            mov rax, rdi	     14066	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_11
0x40005eb	      0x807c241a00	                cmp byte [rsp + 0x1a], 0	     14066	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_11
0x40005f0	     0xf8516120000	                           jne 0x400180c	     14066	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_11
0x40005f6	          0x4585ed	                         test r13d, r13d	     14068	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12
0x40005f9	            0x7508	                           jne 0x4000603	     14068	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12
0x40005fb	            0x85f6	                           test esi, esi	     14068	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12
0x40005fd	     0xf8459100000	                            je 0x400165c	     14068	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12
0x4000603	          0x4585ff	                         test r15d, r15d	     14070	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12	IF_13
0x4000606	            0x740d	                            je 0x4000615	     14070	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12	IF_13
0x4000608	       0xfb644242d	           movzx eax, byte [rsp + 0x2d] 	     14071	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12	IF_13
0x400060d	            0x8801	                      mov byte [rcx], al	     14071	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12	IF_13
0x400060f	        0x488d4901	                      lea rcx, [rcx + 1]	     14071	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12	IF_13
0x4000613	            0xeb0b	                           jmp 0x4000620	     14071	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12	IF_13
0x4000615	       0xfb644242e	           movzx eax, byte [rsp + 0x2e] 	     14073	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12	ELSE_2
0x400061a	            0x8801	                      mov byte [rcx], al	     14073	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12	ELSE_2
0x400061c	        0x488d4901	                      lea rcx, [rcx + 1]	     14073	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12	ELSE_2
0x4000620	          0x4409ed	                            or ebp, r13d	     14074	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12
0x4000623	          0x4889f8	                            mov rax, rdi	     14074	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12
0x4000626	      0xc644241801	                mov byte [rsp + 0x18], 1	     14074	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12
0x400062b	      0xbb01000000	                              mov ebx, 1	     14074	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_12
0x4000630	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000636	      0xe9d1110000	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400063b	          0x4584d2	                         test r10b, r10b	     14078	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_14
0x400063e	     0xf8526100000	                           jne 0x400166a	     14078	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_14
0x4000644	            0x85f6	                           test esi, esi	     14078	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_14
0x4000646	     0xf842c100000	                            je 0x4001678	     14078	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_14
0x400064c	          0x4585e4	                         test r12d, r12d	     14080	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x400064f	     0xf841c120000	                            je 0x4001871	     14080	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000655	        0x4183ce48	                           or r14d, 0x48	     14080	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000659	      0xc644241901	                mov byte [rsp + 0x19], 1	     14081	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15
0x400065e	      0x837c240803	                  cmp dword [rsp + 8], 3	     14081	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15
0x4000663	            0x754a	                           jne 0x40006af	     14081	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15
0x4000665	          0xc60171	                    mov byte [rcx], 0x71	     14084	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	IF_16
0x4000668	        0x488d4901	                      lea rcx, [rcx + 1]	     14084	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	IF_16
0x400066c	          0x4889f8	                            mov rax, rdi	     14084	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	IF_16
0x400066f	      0xbb01000000	                              mov ebx, 1	     14084	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	IF_16
0x4000674	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400067a	      0xe98d110000	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400067f	          0x4585ff	                         test r15d, r15d	     14087	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	ELSE_3	IF_17
0x4000682	            0x7409	                            je 0x400068d	     14087	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	ELSE_3	IF_17
0x4000684	          0xc6016c	                    mov byte [rcx], 0x6c	     14088	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	ELSE_3	IF_17
0x4000687	        0x488d4901	                      lea rcx, [rcx + 1]	     14088	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	ELSE_3	IF_17
0x400068b	            0xeb07	                           jmp 0x4000694	     14088	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	ELSE_3	IF_17
0x400068d	          0xc60177	                    mov byte [rcx], 0x77	     14090	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	ELSE_3	ELSE_4
0x4000690	        0x488d4901	                      lea rcx, [rcx + 1]	     14090	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	ELSE_3	ELSE_4
0x4000694	          0x4409ed	                            or ebp, r13d	     14091	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	ELSE_3
0x4000697	          0x4889f8	                            mov rax, rdi	     14091	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	ELSE_3
0x400069a	      0xc644241801	                mov byte [rsp + 0x18], 1	     14091	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	ELSE_3
0x400069f	      0xbb01000000	                              mov ebx, 1	     14091	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15	ELSE_3
0x40006a4	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40006aa	      0xe95d110000	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40006af	          0xc60177	                    mov byte [rcx], 0x77	     14095	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_5
0x40006b2	        0x488d4901	                      lea rcx, [rcx + 1]	     14095	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_5
0x40006b6	          0x4889f8	                            mov rax, rdi	     14095	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_5
0x40006b9	      0xbb01000000	                              mov ebx, 1	     14095	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_5
0x40006be	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40006c4	      0xe943110000	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40006c9	    0x833d00000000	               cmp dword [0x040006d0], 2	     14098	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_5	IF_18
0x40006d0	            0x7523	                           jne 0x40006f5	     14098	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_5	IF_18
0x40006d2	      0x837c240c00	                cmp dword [rsp + 0xc], 0	     14100	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_5	IF_18	IF_19
0x40006d7	            0x740e	                            je 0x40006e7	     14100	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_5	IF_18	IF_19
0x40006d9	          0xc60172	                    mov byte [rcx], 0x72	     14101	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_5	IF_18	IF_19
0x40006dc	        0x488d4901	                      lea rcx, [rcx + 1]	     14101	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_5	IF_18	IF_19
0x40006e0	      0xbb01000000	                              mov ebx, 1	     14101	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_5	IF_18	IF_19
0x40006e5	            0xeb21	                           jmp 0x4000708	     14101	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_5	IF_18	IF_19
0x40006e7	          0xc60165	                    mov byte [rcx], 0x65	     14103	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_5	IF_18	ELSE_6
0x40006ea	        0x488d4901	                      lea rcx, [rcx + 1]	     14103	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_5	IF_18	ELSE_6
0x40006ee	      0xbb01000000	                              mov ebx, 1	     14103	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_5	IF_18	ELSE_6
0x40006f3	            0xeb13	                           jmp 0x4000708	     14103	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_5	IF_18	ELSE_6
0x40006f5	      0x837c240c00	                cmp dword [rsp + 0xc], 0	     14106	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_7	IF_20
0x40006fa	            0x740c	                            je 0x4000708	     14106	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_7	IF_20
0x40006fc	          0xc60165	                    mov byte [rcx], 0x65	     14107	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_7	IF_20
0x40006ff	        0x488d4901	                      lea rcx, [rcx + 1]	     14107	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_7	IF_20
0x4000703	      0xbb01000000	                              mov ebx, 1	     14107	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_7	IF_20
0x4000708	         0xb6c2404	                 or ebp, dword [rsp + 4]	     14108	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x400070c	          0x4889f8	                            mov rax, rdi	     14109	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x400070f	      0xc644241801	                mov byte [rsp + 0x18], 1	     14109	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000714	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400071a	      0xe9ed100000	                           jmp 0x400180c	     14109	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x400071f	          0x4584d2	                         test r10b, r10b	     14111	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_21
0x4000722	     0xf855e0f0000	                           jne 0x4001686	     14111	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_21
0x4000728	      0x837c240400	                  cmp dword [rsp + 4], 0	     14113	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22
0x400072d	            0x7508	                           jne 0x4000737	     14113	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22
0x400072f	            0x85f6	                           test esi, esi	     14113	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22
0x4000731	     0xf845d0f0000	                            je 0x4001694	     14113	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22
0x4000737	      0x837c240c00	                cmp dword [rsp + 0xc], 0	     14115	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	IF_23
0x400073c	            0x7416	                            je 0x4000754	     14115	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	IF_23
0x400073e	    0x833d00000000	               cmp dword [0x04000745], 2	     14116	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	IF_23
0x4000745	           0xf94c0	                                 sete al	     14116	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	IF_23
0x4000748	        0x8d44806c	          lea eax, [rax + rax*4 + 0x6c] 	     14116	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	IF_23
0x400074c	            0x8801	                      mov byte [rcx], al	     14116	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	IF_23
0x400074e	        0x488d4901	                      lea rcx, [rcx + 1]	     14116	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	IF_23
0x4000752	            0xeb1a	                           jmp 0x400076e	     14116	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	IF_23
0x4000754	    0x833d00000000	               cmp dword [0x0400075b], 2	     14118	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	ELSE_8
0x400075b	      0xb877000000	                           mov eax, 0x77	     14118	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	ELSE_8
0x4000760	      0xbb6c000000	                           mov ebx, 0x6c	     14118	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	ELSE_8
0x4000765	           0xf44c3	                          cmove eax, ebx	     14118	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	ELSE_8
0x4000768	            0x8801	                      mov byte [rcx], al	     14118	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	ELSE_8
0x400076a	        0x488d4901	                      lea rcx, [rcx + 1]	     14118	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22	ELSE_8
0x400076e	         0xb6c2404	                 or ebp, dword [rsp + 4]	     14119	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22
0x4000772	          0x4889f8	                            mov rax, rdi	     14119	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22
0x4000775	      0xc644241801	                mov byte [rsp + 0x18], 1	     14119	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22
0x400077a	      0xbb01000000	                              mov ebx, 1	     14119	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_22
0x400077f	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000785	      0xe982100000	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400078a	          0x4584d2	                         test r10b, r10b	     14123	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_24
0x400078d	     0xf850f0f0000	                           jne 0x40016a2	     14123	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_24
0x4000793	        0x8079ff73	                cmp byte [rcx - 1], 0x73	     14123	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_24
0x4000797	            0x7408	                            je 0x40007a1	     14123	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_24
0x4000799	            0x85f6	                           test esi, esi	     14123	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_24
0x400079b	     0xf840f0f0000	                            je 0x40016b0	     14123	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_24
0x40007a1	          0x4585e4	                         test r12d, r12d	     14125	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_25
0x40007a4	     0xf85a2110000	                           jne 0x400194c	     14125	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_25
0x40007aa	          0x4585ff	                         test r15d, r15d	     14125	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_25
0x40007ad	     0xf858d110000	                           jne 0x4001940	     14125	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_25
0x40007b3	          0xc60177	                    mov byte [rcx], 0x77	     14128	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_9
0x40007b6	        0x488d4901	                      lea rcx, [rcx + 1]	     14128	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_9
0x40007ba	          0x4409ed	                            or ebp, r13d	     14130	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_26
0x40007bd	          0x4889f8	                            mov rax, rdi	     14130	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_26
0x40007c0	      0xc644241801	                mov byte [rsp + 0x18], 1	     14130	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_26
0x40007c5	      0xbb01000000	                              mov ebx, 1	     14130	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_26
0x40007ca	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40007d0	      0xe937100000	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40007d5	          0x4584d2	                         test r10b, r10b	     14133	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_27
0x40007d8	     0xf85e00e0000	                           jne 0x40016be	     14133	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_27
0x40007de	      0x807c242c00	                cmp byte [rsp + 0x2c], 0	     14135	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x40007e3	     0xf84e30e0000	                            je 0x40016cc	     14135	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x40007e9	         0xb6c2420	              or ebp, dword [rsp + 0x20]	     14138	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x40007ed	          0xc6012c	                    mov byte [rcx], 0x2c	     14139	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x40007f0	        0xc6410170	                mov byte [rcx + 1], 0x70	     14140	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28
0x40007f4	      0x837c242400	               cmp dword [rsp + 0x24], 0	     14141	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	IF_29
0x40007f9	            0x7421	                            je 0x400081c	     14141	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	IF_29
0x40007fb	        0xc6410274	                mov byte [rcx + 2], 0x74	     14142	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	IF_29
0x40007ff	       0xfb644242f	           movzx eax, byte [rsp + 0x2f] 	     14142	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	IF_29
0x4000804	        0x88442418	               mov byte [rsp + 0x18], al	     14142	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	IF_29
0x4000808	            0x89c3	                            mov ebx, eax	     14142	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	IF_29
0x400080a	        0x488d4903	                      lea rcx, [rcx + 3]	     14142	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	IF_29
0x400080e	          0x4889f8	                            mov rax, rdi	     14142	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	IF_29
0x4000811	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000817	      0xe9f00f0000	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400081c	        0xc641026e	                mov byte [rcx + 2], 0x6e	     14144	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	ELSE_10
0x4000820	       0xfb644242f	           movzx eax, byte [rsp + 0x2f] 	     14144	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	ELSE_10
0x4000825	        0x88442418	               mov byte [rsp + 0x18], al	     14144	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	ELSE_10
0x4000829	            0x89c3	                            mov ebx, eax	     14144	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	ELSE_10
0x400082b	        0x488d4903	                      lea rcx, [rcx + 3]	     14144	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	ELSE_10
0x400082f	          0x4889f8	                            mov rax, rdi	     14144	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_28	ELSE_10
0x4000832	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000838	      0xe9cf0f0000	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400083d	          0x4584d2	                         test r10b, r10b	     14148	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_30
0x4000840	     0xf85940e0000	                           jne 0x40016da	     14148	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_30
0x4000846	          0xc6016c	                    mov byte [rcx], 0x6c	     14150	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000849	        0x488d4901	                      lea rcx, [rcx + 1]	     14150	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x400084d	          0x4889f8	                            mov rax, rdi	     14151	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000850	      0xbb01000000	                              mov ebx, 1	     14151	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000855	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400085b	      0xe9ac0f0000	                           jmp 0x400180c	     14151	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000860	          0x4585e4	                         test r12d, r12d	     14153	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000863	     0xf8418100000	                            je 0x4001881	     14153	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000869	        0x4183ce48	                           or r14d, 0x48	     14153	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x400086d	          0xc60171	                    mov byte [rcx], 0x71	     14155	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_31
0x4000870	        0x488d4901	                      lea rcx, [rcx + 1]	     14155	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_31
0x4000874	          0x4889f8	                            mov rax, rdi	     14155	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_31
0x4000877	      0xc644241901	                mov byte [rsp + 0x19], 1	     14155	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_31
0x400087c	      0xbb01000000	                              mov ebx, 1	     14155	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_31
0x4000881	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000887	      0xe9800f0000	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400088c	          0x4585c0	                           test r8d, r8d	     14160	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32
0x400088f	           0xf95c2	                                setne dl	     14160	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32
0x4000892	        0x4183fb01	                             cmp r11d, 1	     14160	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32
0x4000896	           0xf95c0	                                setne al	     14160	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32
0x4000899	             0x8d0	                               or al, dl	     14160	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32
0x400089b	     0xf8475010000	                            je 0x4000a16	     14160	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32
0x40008a1	        0x4183f801	                              cmp r8d, 1	     14162	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x40008a5	            0x750d	                           jne 0x40008b4	     14162	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x40008a7	        0x4183fb02	                             cmp r11d, 2	     14162	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x40008ab	            0x7507	                           jne 0x40008b4	     14162	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x40008ad	      0x807c243058	            cmp byte [rsp + 0x30], 0x58 	     14162	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x40008b2	            0x7450	                            je 0x4000904	     14162	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x40008b4	          0x4539d8	                           cmp r8d, r11d	     14164	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x40008b7	            0x7320	                           jae 0x40008d9	     14164	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x40008b9	        0x4183f803	                              cmp r8d, 3	     14164	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x40008bd	            0x771a	                            ja 0x40008d9	     14164	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x40008bf	          0x4489c0	                            mov eax, r8d	     14164	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x40008c2	      0xc64404305a	      mov byte [rsp + rax + 0x30], 0x5a 	     14164	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x40008c7	        0x458d4001	                       lea r8d, [r8 + 1]	     14164	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x40008cb	          0x4889f8	                            mov rax, rdi	     14165	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x40008ce	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40008d4	      0xe9330f0000	                           jmp 0x400180c	     14165	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x40008d9	            0x84db	                             test bl, bl	     14165	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x40008db	            0x7407	                            je 0x40008e4	     14165	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x40008dd	    0x48890d000000	            mov qword [0x040008e4], rcx 	     14165	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x40008e4	      0x807c241800	                cmp byte [rsp + 0x18], 0	     14165	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x40008e9	            0x7406	                            je 0x40008f1	     14165	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x40008eb	    0x892d00000000	            mov dword [0x040008f1], ebp 	     14165	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x40008f1	      0x807c241900	                cmp byte [rsp + 0x19], 0	     14165	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x40008f6	            0x7407	                            je 0x40008ff	     14165	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x40008f8	    0x448935000000	           mov dword [0x040008ff], r14d 	     14165	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x40008ff	      0xe800000000	                          call 0x4000904	     14164	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_33
0x4000904	      0x807c241b00	                cmp byte [rsp + 0x1b], 0	     14167	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_34
0x4000909	            0x7528	                           jne 0x4000933	     14167	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_34
0x400090b	            0x84db	                             test bl, bl	     14167	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_34
0x400090d	            0x7407	                            je 0x4000916	     14167	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_34
0x400090f	    0x48890d000000	            mov qword [0x04000916], rcx 	     14167	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_34
0x4000916	      0x807c241800	                cmp byte [rsp + 0x18], 0	     14167	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_34
0x400091b	            0x7406	                            je 0x4000923	     14167	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_34
0x400091d	    0x892d00000000	            mov dword [0x04000923], ebp 	     14167	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_34
0x4000923	      0x807c241900	                cmp byte [rsp + 0x19], 0	     14167	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_34
0x4000928	            0x7438	                            je 0x4000962	     14167	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_34
0x400092a	    0x448935000000	           mov dword [0x04000931], r14d 	     14167	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_34
0x4000931	            0xeb2f	                           jmp 0x4000962	     14167	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_34
0x4000933	    0x833d00000000	               cmp dword [0x0400093a], 0	     14167	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_34
0x400093a	            0x752b	                           jne 0x4000967	     14167	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_34
0x400093c	            0x84db	                             test bl, bl	     14167	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_34
0x400093e	            0x7407	                            je 0x4000947	     14167	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_34
0x4000940	    0x48890d000000	            mov qword [0x04000947], rcx 	     14167	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_34
0x4000947	      0x807c241800	                cmp byte [rsp + 0x18], 0	     14167	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_34
0x400094c	            0x7406	                            je 0x4000954	     14167	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_34
0x400094e	    0x892d00000000	            mov dword [0x04000954], ebp 	     14167	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_34
0x4000954	      0x807c241900	                cmp byte [rsp + 0x19], 0	     14167	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_34
0x4000959	            0x7407	                            je 0x4000962	     14167	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_34
0x400095b	    0x448935000000	           mov dword [0x04000962], r14d 	     14167	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_34
0x4000962	      0xe800000000	                          call 0x4000967	     14168	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	CALL_3
0x4000967	          0x4584d2	                         test r10b, r10b	     14169	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_35
0x400096a	     0xf85780d0000	                           jne 0x40016e8	     14169	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_35
0x4000970	      0x837c240803	                  cmp dword [rsp + 8], 3	     14170	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_35
0x4000975	            0x7409	                            je 0x4000980	     14170	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_35
0x4000977	    0x833d00000000	               cmp dword [0x0400097e], 0	     14170	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_35
0x400097e	            0x7408	                            je 0x4000988	     14170	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_35
0x4000980	            0x85f6	                           test esi, esi	     14170	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_35
0x4000982	     0xf846e0d0000	                            je 0x40016f6	     14170	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	IF_35
0x4000988	    0x8b1500000000	            mov edx, dword [0x0400098e] 	     14172	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x400098e	    0x81fa00010000	                          cmp edx, 0x100	     14172	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x4000994	            0x7427	                            je 0x40009bd	     14172	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x4000996	    0x81fa00020000	                          cmp edx, 0x200	     14172	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x400099c	            0x7436	                            je 0x40009d4	     14172	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x400099e	    0x81fa80000000	                           cmp edx, 0x80	     14172	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x40009a4	            0x7545	                           jne 0x40009eb	     14172	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x40009a6	          0xc60178	                    mov byte [rcx], 0x78	     14175	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x40009a9	            0x89c3	                            mov ebx, eax	     14176	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x40009ab	        0x488d4901	                      lea rcx, [rcx + 1]	     14175	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x40009af	          0x4889f8	                            mov rax, rdi	     14176	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x40009b2	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40009b8	      0xe94f0e0000	                           jmp 0x400180c	     14176	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x40009bd	          0xc60179	                    mov byte [rcx], 0x79	     14178	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x40009c0	            0x89c3	                            mov ebx, eax	     14179	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x40009c2	        0x488d4901	                      lea rcx, [rcx + 1]	     14178	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x40009c6	          0x4889f8	                            mov rax, rdi	     14179	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x40009c9	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40009cf	      0xe9380e0000	                           jmp 0x400180c	     14179	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x40009d4	          0xc6017a	                    mov byte [rcx], 0x7a	     14181	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x40009d7	            0x89c3	                            mov ebx, eax	     14182	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x40009d9	        0x488d4901	                      lea rcx, [rcx + 1]	     14181	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x40009dd	          0x4889f8	                            mov rax, rdi	     14182	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x40009e0	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40009e6	      0xe9210e0000	                           jmp 0x400180c	     14182	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x40009eb	            0x84db	                             test bl, bl	     14182	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x40009ed	            0x7407	                            je 0x40009f6	     14182	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x40009ef	    0x48890d000000	            mov qword [0x040009f6], rcx 	     14182	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x40009f6	      0x807c241800	                cmp byte [rsp + 0x18], 0	     14182	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x40009fb	            0x7406	                            je 0x4000a03	     14182	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x40009fd	    0x892d00000000	            mov dword [0x04000a03], ebp 	     14182	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x4000a03	      0x807c241900	                cmp byte [rsp + 0x19], 0	     14182	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x4000a08	            0x7407	                            je 0x4000a11	     14182	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x4000a0a	    0x448935000000	           mov dword [0x04000a11], r14d 	     14182	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2
0x4000a11	      0xe800000000	                          call 0x4000a16	     14184	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11	IF_32	SWITCH_2	CALL_4
0x4000a16	          0x4584d2	                         test r10b, r10b	     14188	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_36
0x4000a19	     0xf85e50c0000	                           jne 0x4001704	     14188	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_36
0x4000a1f	    0x833d00000000	               cmp dword [0x04000a26], 2	     14190	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_37
0x4000a26	     0xf858f000000	                           jne 0x4000abb	     14190	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_37
0x4000a2c	            0x85f6	                           test esi, esi	     14190	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_37
0x4000a2e	     0xf84de0c0000	                            je 0x4001712	     14190	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_37
0x4000a34	          0xc60171	                    mov byte [rcx], 0x71	     14192	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_37
0x4000a37	        0x488d4901	                      lea rcx, [rcx + 1]	     14192	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_37
0x4000a3b	          0x4889f8	                            mov rax, rdi	     14193	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_37
0x4000a3e	      0xbb01000000	                              mov ebx, 1	     14193	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_37
0x4000a43	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000a49	      0xe9be0d0000	                           jmp 0x400180c	     14193	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_37
0x4000a4e	          0x4585c0	                           test r8d, r8d	     14198	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x4000a51	            0x7506	                           jne 0x4000a59	     14198	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x4000a53	        0x4183fb01	                             cmp r11d, 1	     14198	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x4000a57	            0x7450	                            je 0x4000aa9	     14198	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x4000a59	          0x4539d8	                           cmp r8d, r11d	     14200	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x4000a5c	            0x7320	                           jae 0x4000a7e	     14200	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x4000a5e	        0x4183f803	                              cmp r8d, 3	     14200	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x4000a62	            0x771a	                            ja 0x4000a7e	     14200	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x4000a64	          0x4489c0	                            mov eax, r8d	     14200	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x4000a67	      0xc64404304c	      mov byte [rsp + rax + 0x30], 0x4c 	     14200	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x4000a6c	        0x458d4001	                       lea r8d, [r8 + 1]	     14200	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x4000a70	          0x4889f8	                            mov rax, rdi	     14201	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x4000a73	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000a79	      0xe98e0d0000	                           jmp 0x400180c	     14201	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x4000a7e	            0x84db	                             test bl, bl	     14201	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x4000a80	            0x7407	                            je 0x4000a89	     14201	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x4000a82	    0x48890d000000	            mov qword [0x04000a89], rcx 	     14201	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x4000a89	      0x807c241800	                cmp byte [rsp + 0x18], 0	     14201	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x4000a8e	            0x7406	                            je 0x4000a96	     14201	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x4000a90	    0x892d00000000	            mov dword [0x04000a96], ebp 	     14201	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x4000a96	      0x807c241900	                cmp byte [rsp + 0x19], 0	     14201	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x4000a9b	            0x7407	                            je 0x4000aa4	     14201	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x4000a9d	    0x448935000000	           mov dword [0x04000aa4], r14d 	     14201	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x4000aa4	      0xe800000000	                          call 0x4000aa9	     14200	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x4000aa9	          0x4889f8	                            mov rax, rdi	     14200	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_38
0x4000aac	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000ab2	          0x4584d2	                         test r10b, r10b	     14204	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_39
0x4000ab5	     0xf85510d0000	                           jne 0x400180c	     14204	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_39
0x4000abb	            0x85f6	                           test esi, esi	     14206	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_40
0x4000abd	     0xf845d0c0000	                            je 0x4001720	     14206	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_40
0x4000ac3	          0xc6016c	                    mov byte [rcx], 0x6c	     14207	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_40
0x4000ac6	        0x488d4901	                      lea rcx, [rcx + 1]	     14207	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_40
0x4000aca	          0x4889f8	                            mov rax, rdi	     14207	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_40
0x4000acd	      0xbb01000000	                              mov ebx, 1	     14207	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_40
0x4000ad2	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000ad8	      0xe92f0d0000	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000add	          0x8b1424	                    mov edx, dword [rsp]	     14210	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_41
0x4000ae0	        0x39542410	            cmp dword [rsp + 0x10], edx 	     14210	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_41
0x4000ae4	     0xf84440c0000	                            je 0x400172e	     14210	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_41
0x4000aea	          0xc60172	                    mov byte [rcx], 0x72	     14211	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_41
0x4000aed	        0x488d4901	                      lea rcx, [rcx + 1]	     14211	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_41
0x4000af1	          0x4889f8	                            mov rax, rdi	     14211	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_41
0x4000af4	      0xbb01000000	                              mov ebx, 1	     14211	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_41
0x4000af9	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000aff	      0xe9080d0000	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000b04	      0x837c241400	               cmp dword [rsp + 0x14], 0	     14214	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_42
0x4000b09	            0x751a	                           jne 0x4000b25	     14214	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_42
0x4000b0b	          0xc6016e	                    mov byte [rcx], 0x6e	     14215	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_42
0x4000b0e	        0x488d4901	                      lea rcx, [rcx + 1]	     14215	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_42
0x4000b12	          0x4889f8	                            mov rax, rdi	     14215	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_42
0x4000b15	      0xbb01000000	                              mov ebx, 1	     14215	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_42
0x4000b1a	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000b20	      0xe9e70c0000	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000b25	    0x81cd00080000	                           or ebp, 0x800	     14217	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_12
0x4000b2b	          0x4889f8	                            mov rax, rdi	     14217	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_12
0x4000b2e	      0xc644241801	                mov byte [rsp + 0x18], 1	     14217	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_12
0x4000b33	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000b39	      0xe9ce0c0000	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000b3e	          0x4585e4	                         test r12d, r12d	     14220	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000b41	     0xf84540d0000	                            je 0x400189b	     14220	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000b47	        0x4183ce48	                           or r14d, 0x48	     14220	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000b4b	          0xc6016f	                    mov byte [rcx], 0x6f	     14222	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_43
0x4000b4e	        0x488d4901	                      lea rcx, [rcx + 1]	     14222	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_43
0x4000b52	          0x4889f8	                            mov rax, rdi	     14222	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_43
0x4000b55	      0xc644241901	                mov byte [rsp + 0x19], 1	     14222	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_43
0x4000b5a	      0xbb01000000	                              mov ebx, 1	     14222	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_43
0x4000b5f	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000b65	      0xe9a20c0000	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000b6a	          0x4585ff	                         test r15d, r15d	     14223	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_13	IF_44
0x4000b6d	            0x740c	                            je 0x4000b7b	     14223	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_13	IF_44
0x4000b6f	          0xc60171	                    mov byte [rcx], 0x71	     14224	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_13	IF_44
0x4000b72	        0x488d4901	                      lea rcx, [rcx + 1]	     14224	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_13	IF_44
0x4000b76	      0xe92e0d0000	                           jmp 0x40018a9	     14224	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_13	IF_44
0x4000b7b	          0xc60164	                    mov byte [rcx], 0x64	     14226	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_14
0x4000b7e	        0x488d4901	                      lea rcx, [rcx + 1]	     14226	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_14
0x4000b82	      0xe9220d0000	                           jmp 0x40018a9	     14226	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_14
0x4000b87	          0x4584d2	                         test r10b, r10b	     14231	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_46
0x4000b8a	            0x7577	                           jne 0x4000c03	     14231	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_46
0x4000b8c	    0x833d00000000	               cmp dword [0x04000b93], 2	     14232	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_46
0x4000b93	     0xf85a8000000	                           jne 0x4000c41	     14232	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_46
0x4000b99	      0x837c242801	               cmp dword [rsp + 0x28], 1	     14233	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_46
0x4000b9e	            0x7528	                           jne 0x4000bc8	     14233	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_46
0x4000ba0	          0xc60171	                    mov byte [rcx], 0x71	     14235	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_46
0x4000ba3	        0x488d4901	                      lea rcx, [rcx + 1]	     14235	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_46
0x4000ba7	          0x4889f8	                            mov rax, rdi	     14236	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_46
0x4000baa	      0xbb01000000	                              mov ebx, 1	     14236	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_46
0x4000baf	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000bb5	      0xe9520c0000	                           jmp 0x400180c	     14236	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_46
0x4000bba	          0x4584d2	                         test r10b, r10b	     14240	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_47
0x4000bbd	            0x7549	                           jne 0x4000c08	     14240	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_47
0x4000bbf	    0x833d00000000	               cmp dword [0x04000bc6], 2	     14241	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_47
0x4000bc6	            0x7579	                           jne 0x4000c41	     14241	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_47
0x4000bc8	          0x4585ff	                         test r15d, r15d	     14242	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_47
0x4000bcb	            0x7509	                           jne 0x4000bd6	     14242	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_47
0x4000bcd	          0x4585e4	                         test r12d, r12d	     14242	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_47
0x4000bd0	     0xf84900d0000	                            je 0x4001966	     14242	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_47
0x4000bd6	          0xc60171	                    mov byte [rcx], 0x71	     14244	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_47
0x4000bd9	        0x488d4901	                      lea rcx, [rcx + 1]	     14244	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_47
0x4000bdd	          0x4889f8	                            mov rax, rdi	     14245	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_47
0x4000be0	      0xbb01000000	                              mov ebx, 1	     14245	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_47
0x4000be5	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000beb	      0xe91c0c0000	                           jmp 0x400180c	     14245	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_47
0x4000bf0	          0x4585c0	                           test r8d, r8d	     14250	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48
0x4000bf3	     0xf85bc000000	                           jne 0x4000cb5	     14250	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48
0x4000bf9	        0x4183fb01	                             cmp r11d, 1	     14250	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48
0x4000bfd	     0xf85b2000000	                           jne 0x4000cb5	     14250	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48
0x4000c03	          0x4584d2	                         test r10b, r10b	     14253	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49
0x4000c06	            0x7439	                            je 0x4000c41	     14253	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49
0x4000c08	          0x4585e4	                         test r12d, r12d	     14255	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49	IF_50
0x4000c0b	     0xf852b0b0000	                           jne 0x400173c	     14255	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49	IF_50
0x4000c11	          0x4585ed	                         test r13d, r13d	     14256	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49	IF_50
0x4000c14	     0xf84300b0000	                            je 0x400174a	     14256	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49	IF_50
0x4000c1a	          0x4585ff	                         test r15d, r15d	     14258	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49	IF_50	IF_51
0x4000c1d	            0x750c	                           jne 0x4000c2b	     14258	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49	IF_50	IF_51
0x4000c1f	          0xc60177	                    mov byte [rcx], 0x77	     14259	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49	IF_50	IF_51
0x4000c22	        0x488d4901	                      lea rcx, [rcx + 1]	     14259	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49	IF_50	IF_51
0x4000c26	      0xbb01000000	                              mov ebx, 1	     14259	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49	IF_50	IF_51
0x4000c2b	          0x4409ed	                            or ebp, r13d	     14260	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49	IF_50
0x4000c2e	          0x4889f8	                            mov rax, rdi	     14260	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49	IF_50
0x4000c31	      0xc644241801	                mov byte [rsp + 0x18], 1	     14260	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_49	IF_50
0x4000c36	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000c3c	      0xe9cb0b0000	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000c41	          0x4585ed	                         test r13d, r13d	     14264	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52
0x4000c44	            0x7517	                           jne 0x4000c5d	     14264	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52
0x4000c46	          0x4585e4	                         test r12d, r12d	     14265	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52
0x4000c49	            0x7517	                           jne 0x4000c62	     14265	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52
0x4000c4b	            0x85f6	                           test esi, esi	     14266	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52
0x4000c4d	            0x7536	                           jne 0x4000c85	     14266	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52
0x4000c4f	          0x4889f8	                            mov rax, rdi	     14266	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52
0x4000c52	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000c58	      0xe9af0b0000	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000c5d	          0x4585e4	                         test r12d, r12d	     14268	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52
0x4000c60	            0x7423	                            je 0x4000c85	     14268	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52
0x4000c62	        0x4183ce48	                           or r14d, 0x48	     14268	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52
0x4000c66	          0xc60171	                    mov byte [rcx], 0x71	     14270	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	IF_53
0x4000c69	        0x488d4901	                      lea rcx, [rcx + 1]	     14270	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	IF_53
0x4000c6d	          0x4889f8	                            mov rax, rdi	     14270	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	IF_53
0x4000c70	      0xc644241901	                mov byte [rsp + 0x19], 1	     14270	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	IF_53
0x4000c75	      0xbb01000000	                              mov ebx, 1	     14270	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	IF_53
0x4000c7a	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000c80	      0xe9870b0000	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000c85	          0x4585ff	                         test r15d, r15d	     14273	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	ELSE_15	IF_54
0x4000c88	            0x7409	                            je 0x4000c93	     14273	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	ELSE_15	IF_54
0x4000c8a	          0xc6016c	                    mov byte [rcx], 0x6c	     14274	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	ELSE_15	IF_54
0x4000c8d	        0x488d4901	                      lea rcx, [rcx + 1]	     14274	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	ELSE_15	IF_54
0x4000c91	            0xeb07	                           jmp 0x4000c9a	     14274	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	ELSE_15	IF_54
0x4000c93	          0xc60177	                    mov byte [rcx], 0x77	     14276	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	ELSE_15	ELSE_16
0x4000c96	        0x488d4901	                      lea rcx, [rcx + 1]	     14276	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	ELSE_15	ELSE_16
0x4000c9a	          0x4409ed	                            or ebp, r13d	     14277	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	ELSE_15
0x4000c9d	          0x4889f8	                            mov rax, rdi	     14277	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	ELSE_15
0x4000ca0	      0xc644241801	                mov byte [rsp + 0x18], 1	     14277	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	ELSE_15
0x4000ca5	      0xbb01000000	                              mov ebx, 1	     14277	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52	ELSE_15
0x4000caa	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000cb0	      0xe9570b0000	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000cb5	        0x4183f801	                              cmp r8d, 1	     14283	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4000cb9	            0x750d	                           jne 0x4000cc8	     14283	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4000cbb	        0x4183fb02	                             cmp r11d, 2	     14283	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4000cbf	            0x7507	                           jne 0x4000cc8	     14283	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4000cc1	      0x807c24304c	            cmp byte [rsp + 0x30], 0x4c 	     14283	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4000cc6	            0x7450	                            je 0x4000d18	     14283	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4000cc8	          0x4539d8	                           cmp r8d, r11d	     14285	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4000ccb	            0x7320	                           jae 0x4000ced	     14285	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4000ccd	        0x4183f803	                              cmp r8d, 3	     14285	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4000cd1	            0x771a	                            ja 0x4000ced	     14285	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4000cd3	          0x4489c0	                            mov eax, r8d	     14285	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4000cd6	      0xc644043050	      mov byte [rsp + rax + 0x30], 0x50 	     14285	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4000cdb	        0x458d4001	                       lea r8d, [r8 + 1]	     14285	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4000cdf	          0x4889f8	                            mov rax, rdi	     14286	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4000ce2	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000ce8	      0xe91f0b0000	                           jmp 0x400180c	     14286	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4000ced	            0x84db	                             test bl, bl	     14286	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4000cef	            0x7407	                            je 0x4000cf8	     14286	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4000cf1	    0x48890d000000	            mov qword [0x04000cf8], rcx 	     14286	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4000cf8	      0x807c241800	                cmp byte [rsp + 0x18], 0	     14286	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4000cfd	            0x7406	                            je 0x4000d05	     14286	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4000cff	    0x892d00000000	            mov dword [0x04000d05], ebp 	     14286	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4000d05	      0x807c241900	                cmp byte [rsp + 0x19], 0	     14286	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4000d0a	            0x7407	                            je 0x4000d13	     14286	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4000d0c	    0x448935000000	           mov dword [0x04000d13], r14d 	     14286	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4000d13	      0xe800000000	                          call 0x4000d18	     14285	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_55
0x4000d18	          0x4585ed	                         test r13d, r13d	     14289	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56
0x4000d1b	            0x7517	                           jne 0x4000d34	     14289	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56
0x4000d1d	          0x4585e4	                         test r12d, r12d	     14290	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56
0x4000d20	            0x7517	                           jne 0x4000d39	     14290	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56
0x4000d22	            0x85f6	                           test esi, esi	     14291	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56
0x4000d24	            0x7536	                           jne 0x4000d5c	     14291	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56
0x4000d26	          0x4889f8	                            mov rax, rdi	     14291	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56
0x4000d29	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000d2f	      0xe9d80a0000	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000d34	          0x4585e4	                         test r12d, r12d	     14293	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56
0x4000d37	            0x7423	                            je 0x4000d5c	     14293	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56
0x4000d39	        0x4183ce48	                           or r14d, 0x48	     14293	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56
0x4000d3d	          0xc60171	                    mov byte [rcx], 0x71	     14295	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	IF_57
0x4000d40	        0x488d4901	                      lea rcx, [rcx + 1]	     14295	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	IF_57
0x4000d44	          0x4889f8	                            mov rax, rdi	     14295	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	IF_57
0x4000d47	      0xc644241901	                mov byte [rsp + 0x19], 1	     14295	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	IF_57
0x4000d4c	      0xbb01000000	                              mov ebx, 1	     14295	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	IF_57
0x4000d51	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000d57	      0xe9b00a0000	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000d5c	          0x4585ff	                         test r15d, r15d	     14298	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	ELSE_18	IF_58
0x4000d5f	            0x740d	                            je 0x4000d6e	     14298	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	ELSE_18	IF_58
0x4000d61	       0xfb644242d	           movzx eax, byte [rsp + 0x2d] 	     14299	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	ELSE_18	IF_58
0x4000d66	            0x8801	                      mov byte [rcx], al	     14299	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	ELSE_18	IF_58
0x4000d68	        0x488d4901	                      lea rcx, [rcx + 1]	     14299	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	ELSE_18	IF_58
0x4000d6c	            0xeb07	                           jmp 0x4000d75	     14299	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	ELSE_18	IF_58
0x4000d6e	          0xc60177	                    mov byte [rcx], 0x77	     14301	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	ELSE_18	ELSE_19
0x4000d71	        0x488d4901	                      lea rcx, [rcx + 1]	     14301	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	ELSE_18	ELSE_19
0x4000d75	          0x4409ed	                            or ebp, r13d	     14302	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	ELSE_18
0x4000d78	          0x4889f8	                            mov rax, rdi	     14302	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	ELSE_18
0x4000d7b	      0xc644241801	                mov byte [rsp + 0x18], 1	     14302	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	ELSE_18
0x4000d80	      0xbb01000000	                              mov ebx, 1	     14302	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_17	IF_56	ELSE_18
0x4000d85	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000d8b	      0xe97c0a0000	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000d90	          0x4584d2	                         test r10b, r10b	     14308	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_59
0x4000d93	     0xf85bf090000	                           jne 0x4001758	     14308	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_59
0x4000d99	    0x833d00000000	               cmp dword [0x04000da0], 2	     14310	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60
0x4000da0	            0x755d	                           jne 0x4000dff	     14310	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60
0x4000da2	          0x4585ff	                         test r15d, r15d	     14311	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60
0x4000da5	            0x7509	                           jne 0x4000db0	     14311	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60
0x4000da7	          0x4585e4	                         test r12d, r12d	     14311	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60
0x4000daa	     0xf84140b0000	                            je 0x40018c4	     14311	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60
0x4000db0	      0x837c240803	                  cmp dword [rsp + 8], 3	     14313	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60	IF_61
0x4000db5	            0x7508	                           jne 0x4000dbf	     14313	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60	IF_61
0x4000db7	            0x85f6	                           test esi, esi	     14313	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60	IF_61
0x4000db9	     0xf84a7090000	                            je 0x4001766	     14313	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60	IF_61
0x4000dbf	          0xc60171	                    mov byte [rcx], 0x71	     14314	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60	IF_61
0x4000dc2	        0x488d4901	                      lea rcx, [rcx + 1]	     14314	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60	IF_61
0x4000dc6	          0x4889f8	                            mov rax, rdi	     14314	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60	IF_61
0x4000dc9	      0xbb01000000	                              mov ebx, 1	     14314	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_60	IF_61
0x4000dce	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000dd4	      0xe9330a0000	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000dd9	          0x4585c0	                           test r8d, r8d	     14320	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62
0x4000ddc	     0xf858f000000	                           jne 0x4000e71	     14320	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62
0x4000de2	        0x4183fb01	                             cmp r11d, 1	     14320	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62
0x4000de6	     0xf8585000000	                           jne 0x4000e71	     14320	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62
0x4000dec	          0x4585c9	                           test r9d, r9d	     14323	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_63
0x4000def	            0x750e	                           jne 0x4000dff	     14323	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_63
0x4000df1	          0x4889f8	                            mov rax, rdi	     14323	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_63
0x4000df4	      0x807c241a00	                cmp byte [rsp + 0x1a], 0	     14323	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_63
0x4000df9	     0xf850d0a0000	                           jne 0x400180c	     14323	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_63
0x4000dff	          0x4585e4	                         test r12d, r12d	     14325	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62
0x4000e02	     0xf84bc0a0000	                            je 0x40018c4	     14325	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62
0x4000e08	        0x4183ce48	                           or r14d, 0x48	     14325	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62
0x4000e0c	      0x837c240803	                  cmp dword [rsp + 8], 3	     14326	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64
0x4000e11	     0xf845d0b0000	                            je 0x4001974	     14326	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64
0x4000e17	          0xc60171	                    mov byte [rcx], 0x71	     14329	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	IF_65
0x4000e1a	        0x488d4901	                      lea rcx, [rcx + 1]	     14329	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	IF_65
0x4000e1e	          0x4889f8	                            mov rax, rdi	     14329	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	IF_65
0x4000e21	      0xc644241901	                mov byte [rsp + 0x19], 1	     14329	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	IF_65
0x4000e26	      0xbb01000000	                              mov ebx, 1	     14329	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	IF_65
0x4000e2b	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000e31	      0xe9d6090000	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000e36	          0x4585ff	                         test r15d, r15d	     14332	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20	IF_66
0x4000e39	            0x7414	                            je 0x4000e4f	     14332	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20	IF_66
0x4000e3b	        0x4180fa01	                             cmp r10b, 1	     14333	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20	IF_66
0x4000e3f	            0x19c0	                            sbb eax, eax	     14333	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20	IF_66
0x4000e41	          0x83e008	                              and eax, 8	     14333	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20	IF_66
0x4000e44	          0x83c064	                           add eax, 0x64	     14333	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20	IF_66
0x4000e47	            0x8801	                      mov byte [rcx], al	     14333	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20	IF_66
0x4000e49	        0x488d4901	                      lea rcx, [rcx + 1]	     14333	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20	IF_66
0x4000e4d	            0xeb07	                           jmp 0x4000e56	     14333	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20	IF_66
0x4000e4f	          0xc60177	                    mov byte [rcx], 0x77	     14335	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20	ELSE_21
0x4000e52	        0x488d4901	                      lea rcx, [rcx + 1]	     14335	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20	ELSE_21
0x4000e56	          0x4409ed	                            or ebp, r13d	     14336	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20
0x4000e59	          0x4889f8	                            mov rax, rdi	     14336	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20
0x4000e5c	      0xc644241801	                mov byte [rsp + 0x18], 1	     14336	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20
0x4000e61	      0xbb01000000	                              mov ebx, 1	     14336	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64	ELSE_20
0x4000e66	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000e6c	      0xe99b090000	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000e71	        0x4183f801	                              cmp r8d, 1	     14342	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4000e75	            0x750d	                           jne 0x4000e84	     14342	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4000e77	        0x4183fb02	                             cmp r11d, 2	     14342	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4000e7b	            0x7507	                           jne 0x4000e84	     14342	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4000e7d	      0x807c24304c	            cmp byte [rsp + 0x30], 0x4c 	     14342	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4000e82	            0x7450	                            je 0x4000ed4	     14342	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4000e84	          0x4539d8	                           cmp r8d, r11d	     14344	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4000e87	            0x7320	                           jae 0x4000ea9	     14344	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4000e89	        0x4183f803	                              cmp r8d, 3	     14344	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4000e8d	            0x771a	                            ja 0x4000ea9	     14344	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4000e8f	          0x4489c0	                            mov eax, r8d	     14344	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4000e92	      0xc644043051	      mov byte [rsp + rax + 0x30], 0x51 	     14344	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4000e97	        0x458d4001	                       lea r8d, [r8 + 1]	     14344	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4000e9b	          0x4889f8	                            mov rax, rdi	     14345	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4000e9e	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000ea4	      0xe963090000	                           jmp 0x400180c	     14345	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4000ea9	            0x84db	                             test bl, bl	     14345	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4000eab	            0x7407	                            je 0x4000eb4	     14345	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4000ead	    0x48890d000000	            mov qword [0x04000eb4], rcx 	     14345	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4000eb4	      0x807c241800	                cmp byte [rsp + 0x18], 0	     14345	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4000eb9	            0x7406	                            je 0x4000ec1	     14345	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4000ebb	    0x892d00000000	            mov dword [0x04000ec1], ebp 	     14345	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4000ec1	      0x807c241900	                cmp byte [rsp + 0x19], 0	     14345	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4000ec6	            0x7407	                            je 0x4000ecf	     14345	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4000ec8	    0x448935000000	           mov dword [0x04000ecf], r14d 	     14345	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4000ecf	      0xe800000000	                          call 0x4000ed4	     14344	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_67
0x4000ed4	          0x4584d2	                         test r10b, r10b	     14347	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_68
0x4000ed7	     0xf8597080000	                           jne 0x4001774	     14347	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_68
0x4000edd	      0x837c240803	                  cmp dword [rsp + 8], 3	     14348	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_68
0x4000ee2	     0xf85ec090000	                           jne 0x40018d4	     14348	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_68
0x4000ee8	            0x85f6	                           test esi, esi	     14348	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_68
0x4000eea	     0xf8492080000	                            je 0x4001782	     14348	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_68
0x4000ef0	          0x4585e4	                         test r12d, r12d	     14350	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_69
0x4000ef3	            0x7423	                            je 0x4000f18	     14350	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_69
0x4000ef5	        0x4183ce48	                           or r14d, 0x48	     14352	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_69
0x4000ef9	          0xc60171	                    mov byte [rcx], 0x71	     14353	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_69
0x4000efc	        0x488d4901	                      lea rcx, [rcx + 1]	     14353	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_69
0x4000f00	          0x4889f8	                            mov rax, rdi	     14353	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_69
0x4000f03	      0xc644241901	                mov byte [rsp + 0x19], 1	     14353	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_69
0x4000f08	      0xbb01000000	                              mov ebx, 1	     14353	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_69
0x4000f0d	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000f13	      0xe9f4080000	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000f18	          0xc6016c	                    mov byte [rcx], 0x6c	     14356	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	ELSE_23
0x4000f1b	        0x488d4901	                      lea rcx, [rcx + 1]	     14356	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	ELSE_23
0x4000f1f	          0x4889f8	                            mov rax, rdi	     14356	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	ELSE_23
0x4000f22	      0xbb01000000	                              mov ebx, 1	     14356	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	ELSE_23
0x4000f27	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000f2d	      0xe9da080000	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000f32	          0x4585e4	                         test r12d, r12d	     14360	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000f35	     0xf84a7090000	                            je 0x40018e2	     14360	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000f3b	        0x4183ce48	                           or r14d, 0x48	     14360	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4000f3f	        0x488d5101	                      lea rdx, [rcx + 1]	     14362	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_70
0x4000f43	          0xc60171	                    mov byte [rcx], 0x71	     14362	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_70
0x4000f46	          0x4584d2	                         test r10b, r10b	     14372	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x4000f49	     0xf85650a0000	                           jne 0x40019b4	     14372	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x4000f4f	          0x4889d1	                            mov rcx, rdx	     14362	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_70
0x4000f52	          0x4889f8	                            mov rax, rdi	     14372	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x4000f55	      0xc644241901	                mov byte [rsp + 0x19], 1	     14372	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x4000f5a	      0xbb01000000	                              mov ebx, 1	     14372	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x4000f5f	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000f65	      0xe9a2080000	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000f6a	          0x4584d2	                         test r10b, r10b	     14365	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_24	IF_71	IF_72
0x4000f6d	            0x740c	                            je 0x4000f7b	     14365	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_24	IF_71	IF_72
0x4000f6f	        0x488d4101	                      lea rax, [rcx + 1]	     14366	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_24	IF_71	IF_72
0x4000f73	          0xc60164	                    mov byte [rcx], 0x64	     14366	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_24	IF_71	IF_72
0x4000f76	      0xe92a0a0000	                           jmp 0x40019a5	     14366	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_24	IF_71	IF_72
0x4000f7b	        0x488d4101	                      lea rax, [rcx + 1]	     14368	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_24	IF_71	ELSE_25
0x4000f7f	          0xc6016c	                    mov byte [rcx], 0x6c	     14368	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_24	IF_71	ELSE_25
0x4000f82	            0xeb31	                           jmp 0x4000fb5	     14368	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_24	IF_71	ELSE_25
0x4000f84	        0x488d4101	                      lea rax, [rcx + 1]	     14371	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_26
0x4000f88	          0xc60177	                    mov byte [rcx], 0x77	     14371	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_26
0x4000f8b	          0x4584d2	                         test r10b, r10b	     14372	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x4000f8e	     0xf85110a0000	                           jne 0x40019a5	     14372	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x4000f94	            0xeb1f	                           jmp 0x4000fb5	     14372	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x4000f96	          0x4889c2	                            mov rdx, rax	     14372	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x4000f99	          0x4585ff	                         test r15d, r15d	     14373	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x4000f9c	            0x7507	                           jne 0x4000fa5	     14373	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x4000f9e	            0xeb15	                           jmp 0x4000fb5	     14373	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x4000fa0	      0xc644241901	                mov byte [rsp + 0x19], 1	     14372	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x4000fa5	        0x488d4201	                      lea rax, [rdx + 1]	     14374	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x4000fa9	          0xc60265	                    mov byte [rdx], 0x65	     14374	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x4000fac	          0x4585e4	                         test r12d, r12d	     14375	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_74
0x4000faf	     0xf85d8070000	                           jne 0x400178d	     14375	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_74
0x4000fb5	          0x4409ed	                            or ebp, r13d	     14376	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_74
0x4000fb8	          0x4889c1	                            mov rcx, rax	     14376	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_74
0x4000fbb	          0x4889f8	                            mov rax, rdi	     14376	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_74
0x4000fbe	      0xc644241801	                mov byte [rsp + 0x18], 1	     14376	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_74
0x4000fc3	      0xbb01000000	                              mov ebx, 1	     14376	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_74
0x4000fc8	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000fce	      0xe939080000	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4000fd3	          0x4585c0	                           test r8d, r8d	     14379	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75
0x4000fd6	           0xf94c2	                                 sete dl	     14379	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75
0x4000fd9	        0x4183fb01	                             cmp r11d, 1	     14379	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75
0x4000fdd	           0xf94c0	                                 sete al	     14379	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75
0x4000fe0	            0x20d0	                              and al, dl	     14379	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75
0x4000fe2	            0x7443	                            je 0x4001027	     14379	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75
0x4000fe4	          0x4584d2	                         test r10b, r10b	     14381	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_76
0x4000fe7	     0xf85b3070000	                           jne 0x40017a0	     14381	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_76
0x4000fed	    0x833d00000000	               cmp dword [0x04000ff4], 2	     14383	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77
0x4000ff4	     0xf85c8000000	                           jne 0x40010c2	     14383	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77
0x4000ffa	          0x4585ff	                         test r15d, r15d	     14384	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77
0x4000ffd	            0x7509	                           jne 0x4001008	     14384	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77
0x4000fff	          0x4585e4	                         test r12d, r12d	     14384	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77
0x4001002	     0xf84c3090000	                            je 0x40019cb	     14384	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77
0x4001008	            0x85f6	                           test esi, esi	     14386	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77	IF_78
0x400100a	     0xf849b070000	                            je 0x40017ab	     14386	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77	IF_78
0x4001010	          0xc60171	                    mov byte [rcx], 0x71	     14387	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77	IF_78
0x4001013	            0x89c3	                            mov ebx, eax	     14387	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77	IF_78
0x4001015	        0x488d4901	                      lea rcx, [rcx + 1]	     14387	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77	IF_78
0x4001019	          0x4889f8	                            mov rax, rdi	     14387	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_75	IF_77	IF_78
0x400101c	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001022	      0xe9e5070000	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001027	        0x4183f801	                              cmp r8d, 1	     14393	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x400102b	            0x750d	                           jne 0x400103a	     14393	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x400102d	        0x4183fb02	                             cmp r11d, 2	     14393	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x4001031	            0x7507	                           jne 0x400103a	     14393	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x4001033	      0x807c24304c	            cmp byte [rsp + 0x30], 0x4c 	     14395	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x4001038	            0x7450	                            je 0x400108a	     14395	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x400103a	          0x4539d8	                           cmp r8d, r11d	     14397	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x400103d	            0x7320	                           jae 0x400105f	     14397	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x400103f	        0x4183f803	                              cmp r8d, 3	     14397	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x4001043	            0x771a	                            ja 0x400105f	     14397	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x4001045	          0x4489c0	                            mov eax, r8d	     14397	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x4001048	      0xc644043056	      mov byte [rsp + rax + 0x30], 0x56 	     14397	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x400104d	        0x458d4001	                       lea r8d, [r8 + 1]	     14397	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x4001051	          0x4889f8	                            mov rax, rdi	     14398	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x4001054	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400105a	      0xe9ad070000	                           jmp 0x400180c	     14398	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x400105f	            0x84db	                             test bl, bl	     14398	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x4001061	            0x7407	                            je 0x400106a	     14398	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x4001063	    0x48890d000000	            mov qword [0x0400106a], rcx 	     14398	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x400106a	      0x807c241800	                cmp byte [rsp + 0x18], 0	     14398	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x400106f	            0x7406	                            je 0x4001077	     14398	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x4001071	    0x892d00000000	            mov dword [0x04001077], ebp 	     14398	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x4001077	      0x807c241900	                cmp byte [rsp + 0x19], 0	     14398	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x400107c	            0x7407	                            je 0x4001085	     14398	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x400107e	    0x448935000000	           mov dword [0x04001085], r14d 	     14398	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x4001085	      0xe800000000	                          call 0x400108a	     14397	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_79
0x400108a	          0x4585e4	                         test r12d, r12d	     14401	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_80
0x400108d	            0x7421	                            je 0x40010b0	     14401	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_80
0x400108f	          0xc60161	                    mov byte [rcx], 0x61	     14403	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_80
0x4001092	        0xc6410162	                mov byte [rcx + 1], 0x62	     14404	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_80
0x4001096	        0xc6410273	                mov byte [rcx + 2], 0x73	     14405	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_80
0x400109a	        0x488d4903	                      lea rcx, [rcx + 3]	     14405	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_80
0x400109e	      0xbb01000000	                              mov ebx, 1	     14405	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_80
0x40010a3	            0xeb0b	                           jmp 0x40010b0	     14405	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_27	IF_80
0x40010a5	          0x4585c0	                           test r8d, r8d	     14411	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81
0x40010a8	            0x756f	                           jne 0x4001119	     14411	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81
0x40010aa	        0x4183fb01	                             cmp r11d, 1	     14411	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81
0x40010ae	            0x7569	                           jne 0x4001119	     14411	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81
0x40010b0	          0x4889f8	                            mov rax, rdi	     14411	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81
0x40010b3	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40010b9	          0x4584d2	                         test r10b, r10b	     14414	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_82
0x40010bc	     0xf854a070000	                           jne 0x400180c	     14414	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_82
0x40010c2	            0x85f6	                           test esi, esi	     14416	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83
0x40010c4	     0xf84ec060000	                            je 0x40017b6	     14416	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83
0x40010ca	          0x4585e4	                         test r12d, r12d	     14418	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	IF_84
0x40010cd	            0x741a	                            je 0x40010e9	     14418	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	IF_84
0x40010cf	          0xc60171	                    mov byte [rcx], 0x71	     14419	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	IF_84
0x40010d2	        0x488d4901	                      lea rcx, [rcx + 1]	     14419	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	IF_84
0x40010d6	          0x4889f8	                            mov rax, rdi	     14419	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	IF_84
0x40010d9	      0xbb01000000	                              mov ebx, 1	     14419	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	IF_84
0x40010de	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40010e4	      0xe923070000	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40010e9	          0x4585ff	                         test r15d, r15d	     14422	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	ELSE_28	IF_85
0x40010ec	            0x7409	                            je 0x40010f7	     14422	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	ELSE_28	IF_85
0x40010ee	          0xc6016c	                    mov byte [rcx], 0x6c	     14423	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	ELSE_28	IF_85
0x40010f1	        0x488d4901	                      lea rcx, [rcx + 1]	     14423	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	ELSE_28	IF_85
0x40010f5	            0xeb07	                           jmp 0x40010fe	     14423	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	ELSE_28	IF_85
0x40010f7	          0xc60177	                    mov byte [rcx], 0x77	     14425	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	ELSE_28	ELSE_29
0x40010fa	        0x488d4901	                      lea rcx, [rcx + 1]	     14425	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	ELSE_28	ELSE_29
0x40010fe	          0x4409ed	                            or ebp, r13d	     14426	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	ELSE_28
0x4001101	          0x4889f8	                            mov rax, rdi	     14426	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	ELSE_28
0x4001104	      0xc644241801	                mov byte [rsp + 0x18], 1	     14426	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	ELSE_28
0x4001109	      0xbb01000000	                              mov ebx, 1	     14426	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83	ELSE_28
0x400110e	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001114	      0xe9f3060000	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001119	        0x4183f801	                              cmp r8d, 1	     14432	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x400111d	            0x750d	                           jne 0x400112c	     14432	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x400111f	        0x4183fb02	                             cmp r11d, 2	     14432	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x4001123	            0x7507	                           jne 0x400112c	     14432	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x4001125	      0x807c24304c	            cmp byte [rsp + 0x30], 0x4c 	     14434	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x400112a	            0x7450	                            je 0x400117c	     14434	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x400112c	          0x4539d8	                           cmp r8d, r11d	     14436	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x400112f	            0x7320	                           jae 0x4001151	     14436	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x4001131	        0x4183f803	                              cmp r8d, 3	     14436	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x4001135	            0x771a	                            ja 0x4001151	     14436	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x4001137	          0x4489c0	                            mov eax, r8d	     14436	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x400113a	      0xc644043053	      mov byte [rsp + rax + 0x30], 0x53 	     14436	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x400113f	        0x458d4001	                       lea r8d, [r8 + 1]	     14436	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x4001143	          0x4889f8	                            mov rax, rdi	     14437	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x4001146	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400114c	      0xe9bb060000	                           jmp 0x400180c	     14437	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x4001151	            0x84db	                             test bl, bl	     14437	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x4001153	            0x7407	                            je 0x400115c	     14437	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x4001155	    0x48890d000000	            mov qword [0x0400115c], rcx 	     14437	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x400115c	      0x807c241800	                cmp byte [rsp + 0x18], 0	     14437	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x4001161	            0x7406	                            je 0x4001169	     14437	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x4001163	    0x892d00000000	            mov dword [0x04001169], ebp 	     14437	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x4001169	      0x807c241900	                cmp byte [rsp + 0x19], 0	     14437	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x400116e	            0x7407	                            je 0x4001177	     14437	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x4001170	    0x448935000000	           mov dword [0x04001177], r14d 	     14437	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x4001177	      0xe800000000	                          call 0x400117c	     14436	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_86
0x400117c	    0x833d00000000	               cmp dword [0x04001183], 2	     14440	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_87
0x4001183	     0xf8527ffffff	                           jne 0x40010b0	     14440	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_87
0x4001189	      0x837c240400	                  cmp dword [rsp + 4], 0	     14441	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_87
0x400118e	     0xf851cffffff	                           jne 0x40010b0	     14441	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_87
0x4001194	          0xc60161	                    mov byte [rcx], 0x61	     14443	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_87
0x4001197	        0xc6410162	                mov byte [rcx + 1], 0x62	     14444	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_87
0x400119b	        0xc6410273	                mov byte [rcx + 2], 0x73	     14445	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_87
0x400119f	        0x488d4903	                      lea rcx, [rcx + 3]	     14445	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_87
0x40011a3	      0xbb01000000	                              mov ebx, 1	     14445	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_87
0x40011a8	      0xe903ffffff	                           jmp 0x40010b0	     14445	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_30	IF_87
0x40011ad	          0x4585c0	                           test r8d, r8d	     14452	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_88
0x40011b0	            0x7506	                           jne 0x40011b8	     14452	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_88
0x40011b2	        0x4183fb01	                             cmp r11d, 1	     14452	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_88
0x40011b6	            0x7450	                            je 0x4001208	     14452	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_88
0x40011b8	          0x4539d8	                           cmp r8d, r11d	     14454	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_88
0x40011bb	            0x7320	                           jae 0x40011dd	     14454	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_88
0x40011bd	        0x4183f803	                              cmp r8d, 3	     14454	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_88
0x40011c1	            0x771a	                            ja 0x40011dd	     14454	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_88
0x40011c3	          0x4489c0	                            mov eax, r8d	     14454	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_88
0x40011c6	      0xc644043058	      mov byte [rsp + rax + 0x30], 0x58 	     14454	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_88
0x40011cb	        0x458d4001	                       lea r8d, [r8 + 1]	     14454	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_88
0x40011cf	          0x4889f8	                            mov rax, rdi	     14455	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_88
0x40011d2	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40011d8	      0xe92f060000	                           jmp 0x400180c	     14455	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_88
0x40011dd	            0x84db	                             test bl, bl	     14455	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_88
0x40011df	            0x7407	                            je 0x40011e8	     14455	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_88
0x40011e1	    0x48890d000000	            mov qword [0x040011e8], rcx 	     14455	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_88
0x40011e8	      0x807c241800	                cmp byte [rsp + 0x18], 0	     14455	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_88
0x40011ed	            0x7406	                            je 0x40011f5	     14455	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_88
0x40011ef	    0x892d00000000	            mov dword [0x040011f5], ebp 	     14455	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_88
0x40011f5	      0x807c241900	                cmp byte [rsp + 0x19], 0	     14455	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_88
0x40011fa	            0x7407	                            je 0x4001203	     14455	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_88
0x40011fc	    0x448935000000	           mov dword [0x04001203], r14d 	     14455	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_88
0x4001203	      0xe800000000	                          call 0x4001208	     14454	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_88
0x4001208	      0x807c241b00	                cmp byte [rsp + 0x1b], 0	     14457	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89
0x400120d	            0x7443	                            je 0x4001252	     14457	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89
0x400120f	    0x8b0500000000	            mov eax, dword [0x04001215] 	     14457	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89
0x4001215	            0x85c0	                           test eax, eax	     14457	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89
0x4001217	            0x7439	                            je 0x4001252	     14457	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89
0x4001219	          0x83f866	                           cmp eax, 0x66	     14459	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89	IF_90
0x400121c	            0x751a	                           jne 0x4001238	     14459	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89	IF_90
0x400121e	          0xc60164	                    mov byte [rcx], 0x64	     14460	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89	IF_90
0x4001221	        0x488d4901	                      lea rcx, [rcx + 1]	     14460	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89	IF_90
0x4001225	          0x4889f8	                            mov rax, rdi	     14460	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89	IF_90
0x4001228	      0xbb01000000	                              mov ebx, 1	     14460	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89	IF_90
0x400122d	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001233	      0xe9d4050000	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001238	          0xc60173	                    mov byte [rcx], 0x73	     14462	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89	ELSE_31
0x400123b	        0x488d4901	                      lea rcx, [rcx + 1]	     14462	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89	ELSE_31
0x400123f	          0x4889f8	                            mov rax, rdi	     14462	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89	ELSE_31
0x4001242	      0xbb01000000	                              mov ebx, 1	     14462	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_89	ELSE_31
0x4001247	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400124d	      0xe9ba050000	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001252	          0x4585ed	                         test r13d, r13d	     14466	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_32	IF_91
0x4001255	            0x7409	                            je 0x4001260	     14466	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_32	IF_91
0x4001257	          0xc60164	                    mov byte [rcx], 0x64	     14467	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_32	IF_91
0x400125a	        0x488d4901	                      lea rcx, [rcx + 1]	     14467	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_32	IF_91
0x400125e	            0xeb07	                           jmp 0x4001267	     14467	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_32	IF_91
0x4001260	          0xc60173	                    mov byte [rcx], 0x73	     14469	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_32	ELSE_33
0x4001263	        0x488d4901	                      lea rcx, [rcx + 1]	     14469	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_32	ELSE_33
0x4001267	          0x4409ed	                            or ebp, r13d	     14470	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_32
0x400126a	          0x4889f8	                            mov rax, rdi	     14470	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_32
0x400126d	      0xc644241801	                mov byte [rsp + 0x18], 1	     14470	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_32
0x4001272	      0xbb01000000	                              mov ebx, 1	     14470	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_32
0x4001277	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400127d	      0xe98a050000	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001282	          0x4585c0	                           test r8d, r8d	     14474	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_92
0x4001285	            0x7531	                           jne 0x40012b8	     14474	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_92
0x4001287	        0x4183fb01	                             cmp r11d, 1	     14474	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_92
0x400128b	            0x752b	                           jne 0x40012b8	     14474	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_92
0x400128d	            0x84db	                             test bl, bl	     14474	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_92
0x400128f	            0x7407	                            je 0x4001298	     14474	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_92
0x4001291	    0x48890d000000	            mov qword [0x04001298], rcx 	     14474	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_92
0x4001298	      0x807c241800	                cmp byte [rsp + 0x18], 0	     14474	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_92
0x400129d	            0x7406	                            je 0x40012a5	     14474	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_92
0x400129f	    0x892d00000000	            mov dword [0x040012a5], ebp 	     14474	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_92
0x40012a5	      0x807c241900	                cmp byte [rsp + 0x19], 0	     14474	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_92
0x40012aa	            0x7407	                            je 0x40012b3	     14474	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_92
0x40012ac	    0x448935000000	           mov dword [0x040012b3], r14d 	     14474	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_92
0x40012b3	      0xe800000000	                          call 0x40012b8	     14475	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	CALL_5
0x40012b8	        0x4183f801	                              cmp r8d, 1	     14478	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x40012bc	            0x750d	                           jne 0x40012cb	     14478	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x40012be	        0x4183fb02	                             cmp r11d, 2	     14478	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x40012c2	            0x7507	                           jne 0x40012cb	     14478	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x40012c4	      0x807c243058	            cmp byte [rsp + 0x30], 0x58 	     14478	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x40012c9	            0x7450	                            je 0x400131b	     14478	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x40012cb	          0x4539d8	                           cmp r8d, r11d	     14480	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x40012ce	            0x7320	                           jae 0x40012f0	     14480	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x40012d0	        0x4183f803	                              cmp r8d, 3	     14480	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x40012d4	            0x771a	                            ja 0x40012f0	     14480	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x40012d6	          0x4489c0	                            mov eax, r8d	     14480	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x40012d9	      0xc644043059	      mov byte [rsp + rax + 0x30], 0x59 	     14480	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x40012de	        0x458d4001	                       lea r8d, [r8 + 1]	     14480	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x40012e2	          0x4889f8	                            mov rax, rdi	     14481	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x40012e5	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40012eb	      0xe91c050000	                           jmp 0x400180c	     14481	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x40012f0	            0x84db	                             test bl, bl	     14481	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x40012f2	            0x7407	                            je 0x40012fb	     14481	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x40012f4	    0x48890d000000	            mov qword [0x040012fb], rcx 	     14481	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x40012fb	      0x807c241800	                cmp byte [rsp + 0x18], 0	     14481	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x4001300	            0x7406	                            je 0x4001308	     14481	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x4001302	    0x892d00000000	            mov dword [0x04001308], ebp 	     14481	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x4001308	      0x807c241900	                cmp byte [rsp + 0x19], 0	     14481	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x400130d	            0x7407	                            je 0x4001316	     14481	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x400130f	    0x448935000000	           mov dword [0x04001316], r14d 	     14481	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x4001316	      0xe800000000	                          call 0x400131b	     14480	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_93
0x400131b	      0x807c241b00	                cmp byte [rsp + 0x1b], 0	     14483	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_94
0x4001320	            0x752b	                           jne 0x400134d	     14483	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_94
0x4001322	            0x84db	                             test bl, bl	     14483	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_94
0x4001324	            0x7407	                            je 0x400132d	     14483	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_94
0x4001326	    0x48890d000000	            mov qword [0x0400132d], rcx 	     14483	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_94
0x400132d	      0x807c241800	                cmp byte [rsp + 0x18], 0	     14483	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_94
0x4001332	            0x7406	                            je 0x400133a	     14483	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_94
0x4001334	    0x892d00000000	            mov dword [0x0400133a], ebp 	     14483	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_94
0x400133a	      0x807c241900	                cmp byte [rsp + 0x19], 0	     14483	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_94
0x400133f	            0x7407	                            je 0x4001348	     14483	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_94
0x4001341	    0x448935000000	           mov dword [0x04001348], r14d 	     14483	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_94
0x4001348	      0xe800000000	                          call 0x400134d	     14484	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	CALL_6
0x400134d	          0x4584d2	                         test r10b, r10b	     14485	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_95
0x4001350	     0xf856b040000	                           jne 0x40017c1	     14485	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_95
0x4001356	      0x837c240803	                  cmp dword [rsp + 8], 3	     14486	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_95
0x400135b	            0x7409	                            je 0x4001366	     14486	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_95
0x400135d	    0x833d00000000	               cmp dword [0x04001364], 0	     14486	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_95
0x4001364	            0x7408	                            je 0x400136e	     14486	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_95
0x4001366	            0x85f6	                           test esi, esi	     14486	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_95
0x4001368	     0xf845e040000	                            je 0x40017cc	     14486	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	IF_95
0x400136e	    0x8b0500000000	            mov eax, dword [0x04001374] 	     14488	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x4001374	      0x3d00010000	                          cmp eax, 0x100	     14488	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x4001379	            0x7450	                            je 0x40013cb	     14488	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x400137b	      0x3d00020000	                          cmp eax, 0x200	     14488	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x4001380	            0x7463	                            je 0x40013e5	     14488	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x4001382	      0x3d80000000	                           cmp eax, 0x80	     14488	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x4001387	            0x7428	                            je 0x40013b1	     14488	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x4001389	            0x84db	                             test bl, bl	     14488	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x400138b	            0x7407	                            je 0x4001394	     14488	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x400138d	    0x48890d000000	            mov qword [0x04001394], rcx 	     14488	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x4001394	      0x807c241800	                cmp byte [rsp + 0x18], 0	     14488	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x4001399	            0x7406	                            je 0x40013a1	     14488	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x400139b	    0x892d00000000	            mov dword [0x040013a1], ebp 	     14488	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x40013a1	      0x807c241900	                cmp byte [rsp + 0x19], 0	     14488	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x40013a6	            0x7470	                            je 0x4001418	     14488	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x40013a8	    0x448935000000	           mov dword [0x040013af], r14d 	     14488	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x40013af	            0xeb67	                           jmp 0x4001418	     14488	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x40013b1	          0xc60178	                    mov byte [rcx], 0x78	     14491	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x40013b4	        0x488d4901	                      lea rcx, [rcx + 1]	     14491	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x40013b8	          0x4889f8	                            mov rax, rdi	     14492	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x40013bb	      0xbb01000000	                              mov ebx, 1	     14492	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x40013c0	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40013c6	      0xe941040000	                           jmp 0x400180c	     14492	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x40013cb	          0xc60179	                    mov byte [rcx], 0x79	     14494	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x40013ce	        0x488d4901	                      lea rcx, [rcx + 1]	     14494	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x40013d2	          0x4889f8	                            mov rax, rdi	     14495	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x40013d5	      0xbb01000000	                              mov ebx, 1	     14495	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x40013da	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40013e0	      0xe927040000	                           jmp 0x400180c	     14495	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3
0x40013e5	    0x833d00000000	               cmp dword [0x040013ec], 0	     14497	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3	IF_96
0x40013ec	     0xf85e5030000	                           jne 0x40017d7	     14497	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3	IF_96
0x40013f2	            0x84db	                             test bl, bl	     14497	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3	IF_96
0x40013f4	            0x7407	                            je 0x40013fd	     14497	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3	IF_96
0x40013f6	    0x48890d000000	            mov qword [0x040013fd], rcx 	     14497	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3	IF_96
0x40013fd	      0x807c241800	                cmp byte [rsp + 0x18], 0	     14497	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3	IF_96
0x4001402	            0x7406	                            je 0x400140a	     14497	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3	IF_96
0x4001404	    0x892d00000000	            mov dword [0x0400140a], ebp 	     14497	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3	IF_96
0x400140a	      0x807c241900	                cmp byte [rsp + 0x19], 0	     14497	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3	IF_96
0x400140f	            0x7407	                            je 0x4001418	     14497	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3	IF_96
0x4001411	    0x448935000000	           mov dword [0x04001418], r14d 	     14497	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3	IF_96
0x4001418	      0xe800000000	                          call 0x400141d	     14499	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_34	SWITCH_3	CALL_7
0x400141d	          0x4585c0	                           test r8d, r8d	     14504	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97
0x4001420	           0xf94c2	                                 sete dl	     14504	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97
0x4001423	        0x4183fb01	                             cmp r11d, 1	     14504	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97
0x4001427	           0xf94c0	                                 sete al	     14504	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97
0x400142a	            0x20d0	                              and al, dl	     14504	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97
0x400142c	            0x7442	                            je 0x4001470	     14504	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97
0x400142e	          0x4585e4	                         test r12d, r12d	     14507	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97
0x4001431	     0xf84b9040000	                            je 0x40018f0	     14507	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97
0x4001437	        0x4183ce48	                           or r14d, 0x48	     14507	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97
0x400143b	          0x4584d2	                         test r10b, r10b	     14510	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	IF_98	IF_99
0x400143e	            0x740c	                            je 0x400144c	     14510	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	IF_98	IF_99
0x4001440	          0xc60164	                    mov byte [rcx], 0x64	     14511	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	IF_98	IF_99
0x4001443	        0x488d4901	                      lea rcx, [rcx + 1]	     14511	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	IF_98	IF_99
0x4001447	      0xe9c9040000	                           jmp 0x4001915	     14511	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	IF_98	IF_99
0x400144c	          0xc6016c	                    mov byte [rcx], 0x6c	     14513	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	IF_98	ELSE_35
0x400144f	        0x488d4901	                      lea rcx, [rcx + 1]	     14513	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	IF_98	ELSE_35
0x4001453	      0xe9bd040000	                           jmp 0x4001915	     14513	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	IF_98	ELSE_35
0x4001458	          0xc60177	                    mov byte [rcx], 0x77	     14516	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	ELSE_36	IF_100
0x400145b	        0x488d4901	                      lea rcx, [rcx + 1]	     14516	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	ELSE_36	IF_100
0x400145f	      0xe99a040000	                           jmp 0x40018fe	     14516	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	ELSE_36	IF_100
0x4001464	          0xc60162	                    mov byte [rcx], 0x62	     14518	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	ELSE_37
0x4001467	        0x488d4901	                      lea rcx, [rcx + 1]	     14518	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	ELSE_37
0x400146b	      0xe98e040000	                           jmp 0x40018fe	     14518	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	ELSE_37
0x4001470	        0x4183f801	                              cmp r8d, 1	     14524	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x4001474	            0x7513	                           jne 0x4001489	     14524	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x4001476	        0x4183fb02	                             cmp r11d, 2	     14524	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x400147a	            0x750d	                           jne 0x4001489	     14524	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x400147c	       0xfb6442430	           movzx eax, byte [rsp + 0x30] 	     14526	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x4001481	            0x3c58	                            cmp al, 0x58	     14526	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x4001483	            0x7454	                            je 0x40014d9	     14526	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x4001485	            0x3c4c	                            cmp al, 0x4c	     14526	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x4001487	            0x7450	                            je 0x40014d9	     14526	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x4001489	          0x4539d8	                           cmp r8d, r11d	     14529	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x400148c	            0x7320	                           jae 0x40014ae	     14529	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x400148e	        0x4183f803	                              cmp r8d, 3	     14529	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x4001492	            0x771a	                            ja 0x40014ae	     14529	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x4001494	          0x4489c0	                            mov eax, r8d	     14529	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x4001497	      0xc644043057	      mov byte [rsp + rax + 0x30], 0x57 	     14529	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x400149c	        0x458d4001	                       lea r8d, [r8 + 1]	     14529	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x40014a0	          0x4889f8	                            mov rax, rdi	     14530	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x40014a3	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40014a9	      0xe95e030000	                           jmp 0x400180c	     14530	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x40014ae	            0x84db	                             test bl, bl	     14530	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x40014b0	            0x7407	                            je 0x40014b9	     14530	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x40014b2	    0x48890d000000	            mov qword [0x040014b9], rcx 	     14530	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x40014b9	      0x807c241800	                cmp byte [rsp + 0x18], 0	     14530	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x40014be	            0x7406	                            je 0x40014c6	     14530	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x40014c0	    0x892d00000000	            mov dword [0x040014c6], ebp 	     14530	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x40014c6	      0x807c241900	                cmp byte [rsp + 0x19], 0	     14530	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x40014cb	            0x7407	                            je 0x40014d4	     14530	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x40014cd	    0x448935000000	           mov dword [0x040014d4], r14d 	     14530	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x40014d4	      0xe800000000	                          call 0x40014d9	     14529	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_102
0x40014d9	      0x807c241b00	                cmp byte [rsp + 0x1b], 0	     14532	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_103
0x40014de	            0x752b	                           jne 0x400150b	     14532	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_103
0x40014e0	            0x84db	                             test bl, bl	     14532	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_103
0x40014e2	            0x7407	                            je 0x40014eb	     14532	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_103
0x40014e4	    0x48890d000000	            mov qword [0x040014eb], rcx 	     14532	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_103
0x40014eb	      0x807c241800	                cmp byte [rsp + 0x18], 0	     14532	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_103
0x40014f0	            0x7406	                            je 0x40014f8	     14532	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_103
0x40014f2	    0x892d00000000	            mov dword [0x040014f8], ebp 	     14532	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_103
0x40014f8	      0x807c241900	                cmp byte [rsp + 0x19], 0	     14532	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_103
0x40014fd	            0x7407	                            je 0x4001506	     14532	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_103
0x40014ff	    0x448935000000	           mov dword [0x04001506], r14d 	     14532	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_103
0x4001506	      0xe800000000	                          call 0x400150b	     14533	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	CALL_8
0x400150b	            0x3c58	                            cmp al, 0x58	     14534	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_104
0x400150d	            0x7528	                           jne 0x4001537	     14534	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_104
0x400150f	    0x833d00000000	               cmp dword [0x04001516], 1	     14535	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_104
0x4001516	            0x19c0	                            sbb eax, eax	     14535	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_104
0x4001518	          0x83e00f	                            and eax, 0xf	     14535	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_104
0x400151b	          0x83c064	                           add eax, 0x64	     14535	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_104
0x400151e	            0x8801	                      mov byte [rcx], al	     14535	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_104
0x4001520	        0x488d4901	                      lea rcx, [rcx + 1]	     14535	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_104
0x4001524	          0x4889f8	                            mov rax, rdi	     14535	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_104
0x4001527	      0xbb01000000	                              mov ebx, 1	     14535	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	IF_104
0x400152c	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001532	      0xe9d5020000	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001537	    0x833d00000000	               cmp dword [0x0400153e], 1	     14537	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	ELSE_39
0x400153e	            0x19c0	                            sbb eax, eax	     14537	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	ELSE_39
0x4001540	          0x83e0f3	                     and eax, 0xfffffff3	     14537	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	ELSE_39
0x4001543	          0x83c071	                           add eax, 0x71	     14537	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	ELSE_39
0x4001546	            0x8801	                      mov byte [rcx], al	     14537	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	ELSE_39
0x4001548	        0x488d4901	                      lea rcx, [rcx + 1]	     14537	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	ELSE_39
0x400154c	          0x4889f8	                            mov rax, rdi	     14537	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	ELSE_39
0x400154f	      0xbb01000000	                              mov ebx, 1	     14537	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_38	ELSE_39
0x4001554	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400155a	      0xe9ad020000	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400155f	          0x4584d2	                         test r10b, r10b	     14541	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_105
0x4001562	     0xf857a020000	                           jne 0x40017e2	     14541	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_105
0x4001568	          0x4585ed	                         test r13d, r13d	     14543	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106
0x400156b	            0x7508	                           jne 0x4001575	     14543	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106
0x400156d	            0x85f6	                           test esi, esi	     14543	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106
0x400156f	     0xf8478020000	                            je 0x40017ed	     14543	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106
0x4001575	          0x4585ff	                         test r15d, r15d	     14545	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106	IF_107
0x4001578	            0x7409	                            je 0x4001583	     14545	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106	IF_107
0x400157a	          0xc6016c	                    mov byte [rcx], 0x6c	     14546	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106	IF_107
0x400157d	        0x488d4901	                      lea rcx, [rcx + 1]	     14546	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106	IF_107
0x4001581	            0xeb07	                           jmp 0x400158a	     14546	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106	IF_107
0x4001583	          0xc60177	                    mov byte [rcx], 0x77	     14548	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106	ELSE_40
0x4001586	        0x488d4901	                      lea rcx, [rcx + 1]	     14548	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106	ELSE_40
0x400158a	          0x4409ed	                            or ebp, r13d	     14549	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106
0x400158d	          0x4889f8	                            mov rax, rdi	     14549	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106
0x4001590	      0xc644241801	                mov byte [rsp + 0x18], 1	     14549	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106
0x4001595	      0xbb01000000	                              mov ebx, 1	     14549	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_106
0x400159a	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40015a0	      0xe967020000	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40015a5	          0x4584d2	                         test r10b, r10b	     14553	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_108
0x40015a8	     0xf854a020000	                           jne 0x40017f8	     14553	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_108
0x40015ae	    0x833d00000000	               cmp dword [0x040015b5], 2	     14555	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x40015b5	            0x752f	                           jne 0x40015e6	     14555	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x40015b7	      0x837c242801	               cmp dword [rsp + 0x28], 1	     14556	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x40015bc	            0x740e	                            je 0x40015cc	     14556	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x40015be	          0x4585ff	                         test r15d, r15d	     14557	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x40015c1	            0x7509	                           jne 0x40015cc	     14557	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x40015c3	          0x4585e4	                         test r12d, r12d	     14557	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x40015c6	     0xf845d030000	                            je 0x4001929	     14557	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x40015cc	          0xc60171	                    mov byte [rcx], 0x71	     14558	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x40015cf	        0x488d4901	                      lea rcx, [rcx + 1]	     14558	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x40015d3	          0x4889f8	                            mov rax, rdi	     14558	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x40015d6	      0xbb01000000	                              mov ebx, 1	     14558	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x40015db	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40015e1	      0xe926020000	                           jmp 0x400180c	     14558	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_109
0x40015e6	          0x4585ed	                         test r13d, r13d	     14559	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110
0x40015e9	     0xf8414020000	                            je 0x4001803	     14559	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110
0x40015ef	          0x4585ff	                         test r15d, r15d	     14561	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110	IF_111
0x40015f2	            0x750c	                           jne 0x4001600	     14561	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110	IF_111
0x40015f4	          0xc60177	                    mov byte [rcx], 0x77	     14562	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110	IF_111
0x40015f7	        0x488d4901	                      lea rcx, [rcx + 1]	     14562	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110	IF_111
0x40015fb	      0xbb01000000	                              mov ebx, 1	     14562	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110	IF_111
0x4001600	          0x4409ed	                            or ebp, r13d	     14563	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110
0x4001603	          0x4889f8	                            mov rax, rdi	     14563	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110
0x4001606	      0xc644241801	                mov byte [rsp + 0x18], 1	     14563	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110
0x400160b	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001611	      0xe9f6010000	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001616	          0x4889f8	                            mov rax, rdi	     13998	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1
0x4001619	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400161f	      0xe9e8010000	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001624	          0x4889f8	                            mov rax, rdi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001627	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400162d	      0xe9da010000	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001632	          0x4889f8	                            mov rax, rdi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001635	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400163b	      0xe9cc010000	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001640	          0x4889f8	                            mov rax, rdi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001643	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001649	      0xe9be010000	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400164e	          0x4889f8	                            mov rax, rdi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001651	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001657	      0xe9b0010000	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400165c	          0x4889f8	                            mov rax, rdi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400165f	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001665	      0xe9a2010000	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400166a	          0x4889f8	                            mov rax, rdi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400166d	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001673	      0xe994010000	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001678	          0x4889f8	                            mov rax, rdi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400167b	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001681	      0xe986010000	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001686	          0x4889f8	                            mov rax, rdi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001689	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400168f	      0xe978010000	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001694	          0x4889f8	                            mov rax, rdi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001697	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400169d	      0xe96a010000	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40016a2	          0x4889f8	                            mov rax, rdi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40016a5	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40016ab	      0xe95c010000	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40016b0	          0x4889f8	                            mov rax, rdi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40016b3	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40016b9	      0xe94e010000	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40016be	          0x4889f8	                            mov rax, rdi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40016c1	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40016c7	      0xe940010000	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40016cc	          0x4889f8	                            mov rax, rdi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40016cf	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40016d5	      0xe932010000	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40016da	          0x4889f8	                            mov rax, rdi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40016dd	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40016e3	      0xe924010000	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40016e8	          0x4889f8	                            mov rax, rdi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40016eb	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40016f1	      0xe916010000	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40016f6	          0x4889f8	                            mov rax, rdi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40016f9	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40016ff	      0xe908010000	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001704	          0x4889f8	                            mov rax, rdi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001707	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400170d	      0xe9fa000000	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001712	          0x4889f8	                            mov rax, rdi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001715	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400171b	      0xe9ec000000	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001720	          0x4889f8	                            mov rax, rdi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001723	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001729	      0xe9de000000	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400172e	          0x4889f8	                            mov rax, rdi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001731	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001737	      0xe9d0000000	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400173c	          0x4889f8	                            mov rax, rdi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400173f	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001745	      0xe9c2000000	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400174a	          0x4889f8	                            mov rax, rdi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400174d	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001753	      0xe9b4000000	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001758	          0x4889f8	                            mov rax, rdi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400175b	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001761	      0xe9a6000000	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001766	          0x4889f8	                            mov rax, rdi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001769	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400176f	      0xe998000000	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001774	          0x4889f8	                            mov rax, rdi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001777	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400177d	      0xe98a000000	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001782	          0x4889f8	                            mov rax, rdi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001785	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400178b	            0xeb7f	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400178d	          0x4889c1	                            mov rcx, rax	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001790	          0x4889f8	                            mov rax, rdi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001793	      0xbb01000000	                              mov ebx, 1	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001798	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400179e	            0xeb6c	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40017a0	          0x4889f8	                            mov rax, rdi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40017a3	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40017a9	            0xeb61	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40017ab	          0x4889f8	                            mov rax, rdi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40017ae	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40017b4	            0xeb56	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40017b6	          0x4889f8	                            mov rax, rdi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40017b9	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40017bf	            0xeb4b	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40017c1	          0x4889f8	                            mov rax, rdi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40017c4	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40017ca	            0xeb40	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40017cc	          0x4889f8	                            mov rax, rdi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40017cf	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40017d5	            0xeb35	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40017d7	          0x4889f8	                            mov rax, rdi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40017da	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40017e0	            0xeb2a	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40017e2	          0x4889f8	                            mov rax, rdi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40017e5	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40017eb	            0xeb1f	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40017ed	          0x4889f8	                            mov rax, rdi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40017f0	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40017f6	            0xeb14	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40017f8	          0x4889f8	                            mov rax, rdi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40017fb	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001801	            0xeb09	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001803	          0x4889f8	                            mov rax, rdi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001806	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400180c	        0x488d7801	                      lea rdi, [rax + 1]	     13996	i386-dis.c	FUNCTION_17	FOR_1
0x4001810	         0xfb65001	               movzx edx, byte [rax + 1]	     13996	i386-dis.c	FUNCTION_17	FOR_1
0x4001814	            0x84d2	                             test dl, dl	     13996	i386-dis.c	FUNCTION_17	FOR_1
0x4001816	     0xf85c5ebffff	                           jne 0x40003e1	     13996	i386-dis.c	FUNCTION_17	FOR_1
0x400181c	            0x84db	                             test bl, bl	     13996	i386-dis.c	FUNCTION_17	FOR_1
0x400181e	            0x7407	                            je 0x4001827	     13996	i386-dis.c	FUNCTION_17	FOR_1
0x4001820	    0x48890d000000	            mov qword [0x04001827], rcx 	     13996	i386-dis.c	FUNCTION_17	FOR_1
0x4001827	      0x807c241800	                cmp byte [rsp + 0x18], 0	     13996	i386-dis.c	FUNCTION_17	FOR_1
0x400182c	            0x7406	                            je 0x4001834	     13996	i386-dis.c	FUNCTION_17	FOR_1
0x400182e	    0x892d00000000	            mov dword [0x04001834], ebp 	     13996	i386-dis.c	FUNCTION_17	FOR_1
0x4001834	      0x807c241900	                cmp byte [rsp + 0x19], 0	     13996	i386-dis.c	FUNCTION_17	FOR_1
0x4001839	            0x7407	                            je 0x4001842	     13996	i386-dis.c	FUNCTION_17	FOR_1
0x400183b	    0x448935000000	           mov dword [0x04001842], r14d 	     13996	i386-dis.c	FUNCTION_17	FOR_1
0x4001842	    0x488b05000000	            mov rax, qword [0x04001849] 	     14569	i386-dis.c	FUNCTION_17
0x4001849	          0xc60000	                       mov byte [rax], 0	     14569	i386-dis.c	FUNCTION_17
0x400184c	    0x488905000000	            mov qword [0x04001853], rax 	     14570	i386-dis.c	FUNCTION_17
0x4001853	      0xb800000000	                              mov eax, 0	     14572	i386-dis.c	FUNCTION_17
0x4001858	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	     14572	i386-dis.c	FUNCTION_17
0x400185d	    0x644833342528	                xor rsi, qword fs:[0x28]	     14572	i386-dis.c	FUNCTION_17
0x4001866	     0xf847a010000	                            je 0x40019e6	     14572	i386-dis.c	FUNCTION_17
0x400186c	      0xe970010000	                           jmp 0x40019e1	     14572	i386-dis.c	FUNCTION_17
0x4001871	      0x837c240803	                  cmp dword [rsp + 8], 3	     14081	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15
0x4001876	     0xf8533eeffff	                           jne 0x40006af	     14081	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15
0x400187c	      0xe9feedffff	                           jmp 0x400067f	     14081	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_15
0x4001881	          0xc60164	                    mov byte [rcx], 0x64	     14157	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11
0x4001884	        0x488d4901	                      lea rcx, [rcx + 1]	     14157	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11
0x4001888	          0x4889f8	                            mov rax, rdi	     14157	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11
0x400188b	      0xbb01000000	                              mov ebx, 1	     14157	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_11
0x4001890	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001896	      0xe971ffffff	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400189b	          0x4584d2	                         test r10b, r10b	     14223	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_13	IF_44
0x400189e	     0xf85c6f2ffff	                           jne 0x4000b6a	     14223	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_13	IF_44
0x40018a4	      0xe9d2f2ffff	                           jmp 0x4000b7b	     14223	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_13	IF_44
0x40018a9	          0x4409ed	                            or ebp, r13d	     14228	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_45
0x40018ac	          0x4889f8	                            mov rax, rdi	     14228	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_45
0x40018af	      0xc644241801	                mov byte [rsp + 0x18], 1	     14228	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_45
0x40018b4	      0xbb01000000	                              mov ebx, 1	     14228	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_45
0x40018b9	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40018bf	      0xe948ffffff	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40018c4	      0x837c240803	                  cmp dword [rsp + 8], 3	     14326	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64
0x40018c9	     0xf8567f5ffff	                           jne 0x4000e36	     14326	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64
0x40018cf	      0xe9bb000000	                           jmp 0x400198f	     14326	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64
0x40018d4	          0x4585e4	                         test r12d, r12d	     14350	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_69
0x40018d7	     0xf843bf6ffff	                            je 0x4000f18	     14350	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_69
0x40018dd	      0xe913f6ffff	                           jmp 0x4000ef5	     14350	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_22	IF_69
0x40018e2	          0x4585ff	                         test r15d, r15d	     14363	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_24	IF_71
0x40018e5	     0xf857ff6ffff	                           jne 0x4000f6a	     14363	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_24	IF_71
0x40018eb	      0xe994f6ffff	                           jmp 0x4000f84	     14363	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_24	IF_71
0x40018f0	          0x4585ff	                         test r15d, r15d	     14515	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	ELSE_36	IF_100
0x40018f3	     0xf855ffbffff	                           jne 0x4001458	     14515	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	ELSE_36	IF_100
0x40018f9	      0xe966fbffff	                           jmp 0x4001464	     14515	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	ELSE_36	IF_100
0x40018fe	          0x4409ed	                            or ebp, r13d	     14520	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	IF_101
0x4001901	        0x88442418	               mov byte [rsp + 0x18], al	     14520	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	IF_101
0x4001905	            0x89c3	                            mov ebx, eax	     14520	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	IF_101
0x4001907	          0x4889f8	                            mov rax, rdi	     14520	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_97	IF_101
0x400190a	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001910	      0xe9f7feffff	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001915	        0x88442419	               mov byte [rsp + 0x19], al	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001919	            0x89c3	                            mov ebx, eax	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400191b	          0x4889f8	                            mov rax, rdi	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400191e	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001924	      0xe9e3feffff	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001929	          0x4585ed	                         test r13d, r13d	     14559	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110
0x400192c	     0xf85c2fcffff	                           jne 0x40015f4	     14559	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110
0x4001932	          0x4889f8	                            mov rax, rdi	     14559	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	ELSE_41	IF_110
0x4001935	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400193b	      0xe9ccfeffff	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001940	          0xc6016c	                    mov byte [rcx], 0x6c	     14126	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_25
0x4001943	        0x488d4901	                      lea rcx, [rcx + 1]	     14126	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_25
0x4001947	      0xe96eeeffff	                           jmp 0x40007ba	     14126	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_25
0x400194c	          0xc6016c	                    mov byte [rcx], 0x6c	     14126	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_25
0x400194f	        0x488d4901	                      lea rcx, [rcx + 1]	     14126	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_25
0x4001953	          0x4889f8	                            mov rax, rdi	     14126	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_25
0x4001956	      0xbb01000000	                              mov ebx, 1	     14126	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_25
0x400195b	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001961	      0xe9a6feffff	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x4001966	          0x4585ed	                         test r13d, r13d	     14264	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52
0x4001969	     0xf84d7f2ffff	                            je 0x4000c46	     14264	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52
0x400196f	      0xe911f3ffff	                           jmp 0x4000c85	     14264	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_48	IF_52
0x4001974	            0x85f6	                           test esi, esi	     14326	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64
0x4001976	     0xf859bf4ffff	                           jne 0x4000e17	     14326	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64
0x400197c	          0x4889f8	                            mov rax, rdi	     14326	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64
0x400197f	      0xc644241901	                mov byte [rsp + 0x19], 1	     14326	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64
0x4001984	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400198a	      0xe97dfeffff	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x400198f	            0x85f6	                           test esi, esi	     14326	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64
0x4001991	     0xf859ff4ffff	                           jne 0x4000e36	     14326	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64
0x4001997	          0x4889f8	                            mov rax, rdi	     14326	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_62	IF_64
0x400199a	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40019a0	      0xe967feffff	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40019a5	        0x807f0100	                   cmp byte [rdi + 1], 0	     14372	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x40019a9	     0xf85fdf5ffff	                           jne 0x4000fac	     14372	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x40019af	      0xe9e2f5ffff	                           jmp 0x4000f96	     14372	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x40019b4	        0x807f0100	                   cmp byte [rdi + 1], 0	     14372	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x40019b8	     0xf84e2f5ffff	                            je 0x4000fa0	     14372	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x40019be	          0x4889d0	                            mov rax, rdx	     14362	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_70
0x40019c1	      0xc644241901	                mov byte [rsp + 0x19], 1	     14372	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x40019c6	      0xe9e1f5ffff	                           jmp 0x4000fac	     14372	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_73
0x40019cb	            0x85f6	                           test esi, esi	     14416	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83
0x40019cd	     0xf8516f7ffff	                           jne 0x40010e9	     14416	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83
0x40019d3	          0x4889f8	                            mov rax, rdi	     14416	i386-dis.c	FUNCTION_17	FOR_1	SWITCH_1	IF_81	IF_83
0x40019d6	    0x41b900000000	                              mov r9d, 0	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40019dc	      0xe92bfeffff	                           jmp 0x400180c	     14567	i386-dis.c	FUNCTION_17	FOR_1
0x40019e1	      0xe800000000	                          call 0x40019e6	     14572	i386-dis.c	FUNCTION_17
0x40019e6	        0x4883c448	                           add rsp, 0x48	     14572	i386-dis.c	FUNCTION_17
0x40019ea	              0x5b	                                 pop rbx	     14572	i386-dis.c	FUNCTION_17
0x40019eb	              0x5d	                                 pop rbp	     14572	i386-dis.c	FUNCTION_17
0x40019ec	            0x415c	                                 pop r12	     14572	i386-dis.c	FUNCTION_17
0x40019ee	            0x415d	                                 pop r13	     14572	i386-dis.c	FUNCTION_17
0x40019f0	            0x415e	                                 pop r14	     14572	i386-dis.c	FUNCTION_17
0x40019f2	            0x415f	                                 pop r15	     14572	i386-dis.c	FUNCTION_17
0x40019f4	              0xc3	                                     ret	     14572	i386-dis.c	FUNCTION_17
OP_R	CALL,1:FOR,0:SWITCH,0:WHILE,0:ELSE,0:DO,0:IF,0:functions,0	8
0x4004424	        0x4883ec08	                              sub rsp, 8	     16397	i386-dis.c	FUNCTION_49
0x4004428	    0x803d00000000	                cmp byte [0x0400442f], 0	     16399	i386-dis.c	FUNCTION_49
0x400442f	            0x7505	                           jne 0x4004436	     16399	i386-dis.c	FUNCTION_49
0x4004431	      0xe800000000	                          call 0x4004436	     16399	i386-dis.c	FUNCTION_49
0x4004436	    0x488305000000	               add qword [0x0400443e], 1	     16400	i386-dis.c	FUNCTION_49
0x400443e	      0xe896fdffff	                  call sym.OP_E_register	     16401	i386-dis.c	FUNCTION_49	CALL_1
0x4004443	        0x4883c408	                              add rsp, 8	     16402	i386-dis.c	FUNCTION_49
0x4004447	              0xc3	                                     ret	     16402	i386-dis.c	FUNCTION_49
get32s	CALL,0:FOR,0:SWITCH,0:WHILE,0:ELSE,0:DO,0:IF,0:functions,0	27
0x4001f20	        0x4883ec08	                              sub rsp, 8	     15808	i386-dis.c	FUNCTION_30
0x4001f24	    0x488b05000000	            mov rax, qword [0x04001f2b] 	     15811	i386-dis.c	FUNCTION_30
0x4001f2b	        0x488d7004	                      lea rsi, [rax + 4]	     15811	i386-dis.c	FUNCTION_30
0x4001f2f	    0x488b3d000000	            mov rdi, qword [0x04001f36] 	     15811	i386-dis.c	FUNCTION_30
0x4001f36	        0x488b4768	            mov rax, qword [rdi + 0x68] 	     15811	i386-dis.c	FUNCTION_30
0x4001f3a	          0x483b30	                    cmp rsi, qword [rax]	     15811	i386-dis.c	FUNCTION_30
0x4001f3d	            0x7605	                           jbe 0x4001f44	     15811	i386-dis.c	FUNCTION_30
0x4001f3f	      0xe867ffffff	                     call sym.fetch_data	     15811	i386-dis.c	FUNCTION_30
0x4001f44	    0x488b35000000	            mov rsi, qword [0x04001f4b] 	     15812	i386-dis.c	FUNCTION_30
0x4001f4b	           0xfb60e	                   movzx ecx, byte [rsi]	     15812	i386-dis.c	FUNCTION_30
0x4001f4e	         0xfb65601	               movzx edx, byte [rsi + 1]	     15814	i386-dis.c	FUNCTION_30
0x4001f52	        0x48c1e208	                              shl rdx, 8	     15814	i386-dis.c	FUNCTION_30
0x4001f56	         0xfb64602	               movzx eax, byte [rsi + 2]	     15814	i386-dis.c	FUNCTION_30
0x4001f5a	        0x48c1e010	                           shl rax, 0x10	     15814	i386-dis.c	FUNCTION_30
0x4001f5e	          0x4809d0	                             or rax, rdx	     15814	i386-dis.c	FUNCTION_30
0x4001f61	          0x4809c8	                             or rax, rcx	     15814	i386-dis.c	FUNCTION_30
0x4001f64	          0x4889c2	                            mov rdx, rax	     15814	i386-dis.c	FUNCTION_30
0x4001f67	        0x488d4604	                      lea rax, [rsi + 4]	     15815	i386-dis.c	FUNCTION_30
0x4001f6b	    0x488905000000	            mov qword [0x04001f72], rax 	     15815	i386-dis.c	FUNCTION_30
0x4001f72	         0xfb64603	               movzx eax, byte [rsi + 3]	     15817	i386-dis.c	FUNCTION_30
0x4001f76	        0x48c1e018	                           shl rax, 0x18	     15817	i386-dis.c	FUNCTION_30
0x4001f7a	          0x4809d0	                             or rax, rdx	     15817	i386-dis.c	FUNCTION_30
0x4001f7d	      0xba00000080	                     mov edx, 0x80000000	     15817	i386-dis.c	FUNCTION_30
0x4001f82	          0x4831d0	                            xor rax, rdx	     15817	i386-dis.c	FUNCTION_30
0x4001f85	    0x480500000080	             add rax, 0xffffffff80000000	     15819	i386-dis.c	FUNCTION_30
0x4001f8b	        0x4883c408	                              add rsp, 8	     15820	i386-dis.c	FUNCTION_30
0x4001f8f	              0xc3	                                     ret	     15820	i386-dis.c	FUNCTION_30
OP_M	CALL,2:FOR,0:SWITCH,0:WHILE,0:ELSE,1:DO,0:IF,1:functions,0	8
0x40057fa	        0x4883ec08	                              sub rsp, 8	     16670	i386-dis.c	FUNCTION_58
0x40057fe	    0x833d00000000	               cmp dword [0x04005805], 3	     16671	i386-dis.c	FUNCTION_58	IF_1
0x4005805	            0x7507	                           jne 0x400580e	     16671	i386-dis.c	FUNCTION_58	IF_1
0x4005807	      0xe853ddffff	                          call sym.BadOp	     16673	i386-dis.c	FUNCTION_58	CALL_1
0x400580c	            0xeb05	                           jmp 0x4005813	     16673	i386-dis.c	FUNCTION_58	CALL_1
0x400580e	      0xe8e2feffff	                           call sym.OP_E	     16675	i386-dis.c	FUNCTION_58	CALL_2
0x4005813	        0x4883c408	                              add rsp, 8	     16676	i386-dis.c	FUNCTION_58
0x4005817	              0xc3	                                     ret	     16676	i386-dis.c	FUNCTION_58
OP_ESreg	CALL,5:FOR,0:SWITCH,1:WHILE,0:ELSE,0:DO,0:IF,1:functions,0	42
0x4003cd0	              0x55	                                push rbp	     16302	i386-dis.c	FUNCTION_44
0x4003cd1	              0x53	                                push rbx	     16302	i386-dis.c	FUNCTION_44
0x4003cd2	        0x4883ec08	                              sub rsp, 8	     16302	i386-dis.c	FUNCTION_44
0x4003cd6	            0x89fd	                            mov ebp, edi	     16302	i386-dis.c	FUNCTION_44
0x4003cd8	            0x89f3	                            mov ebx, esi	     16302	i386-dis.c	FUNCTION_44
0x4003cda	    0x803d00000000	                cmp byte [0x04003ce1], 0	     16303	i386-dis.c	FUNCTION_44	IF_1
0x4003ce1	            0x744d	                            je 0x4003d30	     16303	i386-dis.c	FUNCTION_44	IF_1
0x4003ce3	    0x488b05000000	            mov rax, qword [0x04003cea] 	     16305	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1
0x4003cea	         0xfb640ff	               movzx eax, byte [rax - 1]	     16305	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1
0x4003cee	            0x3ca7	                            cmp al, 0xa7	     16305	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1
0x4003cf0	            0x7424	                            je 0x4003d16	     16305	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1
0x4003cf2	            0x3ca7	                            cmp al, 0xa7	     16305	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1
0x4003cf4	            0x770a	                            ja 0x4003d00	     16305	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1
0x4003cf6	            0x3c6d	                            cmp al, 0x6d	     16305	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1
0x4003cf8	            0x7410	                            je 0x4003d0a	     16305	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1
0x4003cfa	            0x3ca5	                            cmp al, 0xa5	     16305	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1
0x4003cfc	            0x7526	                           jne 0x4003d24	     16305	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1
0x4003cfe	            0xeb16	                           jmp 0x4003d16	     16305	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1
0x4003d00	            0x3cab	                            cmp al, 0xab	     16305	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1
0x4003d02	            0x7412	                            je 0x4003d16	     16305	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1
0x4003d04	            0x3caf	                            cmp al, 0xaf	     16305	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1
0x4003d06	            0x751c	                           jne 0x4003d24	     16305	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1
0x4003d08	            0xeb0c	                           jmp 0x4003d16	     16305	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1
0x4003d0a	      0xbf2b000000	                           mov edi, 0x2b	     16308	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1	CALL_1
0x4003d0f	      0xe8b1f8ffff	             call sym.intel_operand_size	     16308	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1	CALL_1
0x4003d14	            0xeb1a	                           jmp 0x4003d30	     16309	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1
0x4003d16	            0x89de	                            mov esi, ebx	     16314	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1	CALL_2
0x4003d18	      0xbf04000000	                              mov edi, 4	     16314	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1	CALL_2
0x4003d1d	      0xe8a3f8ffff	             call sym.intel_operand_size	     16314	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1	CALL_2
0x4003d22	            0xeb0c	                           jmp 0x4003d30	     16315	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1
0x4003d24	            0x89de	                            mov esi, ebx	     16317	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1	CALL_3
0x4003d26	      0xbf01000000	                              mov edi, 1	     16317	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1	CALL_3
0x4003d2b	      0xe895f8ffff	             call sym.intel_operand_size	     16317	i386-dis.c	FUNCTION_44	IF_1	SWITCH_1	CALL_3
0x4003d30	      0xbf00000000	                              mov edi, 0	     16320	i386-dis.c	FUNCTION_44	CALL_4
0x4003d35	      0xe882efffff	            call sym.oappend_maybe_intel	     16320	i386-dis.c	FUNCTION_44	CALL_4
0x4003d3a	            0x89de	                            mov esi, ebx	     16321	i386-dis.c	FUNCTION_44	CALL_5
0x4003d3c	            0x89ef	                            mov edi, ebp	     16321	i386-dis.c	FUNCTION_44	CALL_5
0x4003d3e	      0xe85af6ffff	                        call sym.ptr_reg	     16321	i386-dis.c	FUNCTION_44	CALL_5
0x4003d43	        0x4883c408	                              add rsp, 8	     16322	i386-dis.c	FUNCTION_44
0x4003d47	              0x5b	                                 pop rbx	     16322	i386-dis.c	FUNCTION_44
0x4003d48	              0x5d	                                 pop rbp	     16322	i386-dis.c	FUNCTION_44
0x4003d49	              0xc3	                                     ret	     16322	i386-dis.c	FUNCTION_44
BND_Fixup	CALL,0:FOR,0:SWITCH,0:WHILE,0:ELSE,0:DO,0:IF,1:functions,0	5
0x4000235	    0xf60500000000	               test byte [0x0400023c], 2	     16954	i386-dis.c	FUNCTION_69	IF_1
0x400023c	            0x7412	                            je 0x4000250	     16954	i386-dis.c	FUNCTION_69	IF_1
0x400023e	    0x486305000000	         movsxd rax, dword [0x04000245] 	     16955	i386-dis.c	FUNCTION_69	IF_1
0x4000245	    0xc70485000000	                mov dword [rax*4], 0x4f2	     16955	i386-dis.c	FUNCTION_69	IF_1
0x4000250	            0xf3c3	                                     ret	     16955	i386-dis.c	FUNCTION_69	IF_1
PCMPESTR_Fixup	CALL,1:FOR,0:SWITCH,0:WHILE,0:ELSE,1:DO,0:IF,3:functions,0	21
0x4005f4d	        0x4883ec08	                              sub rsp, 8	     17161	i386-dis.c	FUNCTION_78
0x4005f51	    0x803d00000000	                cmp byte [0x04005f58], 0	     17163	i386-dis.c	FUNCTION_78	IF_1
0x4005f58	            0x7531	                           jne 0x4005f8b	     17163	i386-dis.c	FUNCTION_78	IF_1
0x4005f5a	    0x488b05000000	            mov rax, qword [0x04005f61] 	     17165	i386-dis.c	FUNCTION_78	IF_1
0x4005f61	    0xf60500000000	               test byte [0x04005f68], 8	     17167	i386-dis.c	FUNCTION_78	IF_1
0x4005f68	            0x7428	                            je 0x4005f92	     17167	i386-dis.c	FUNCTION_78	IF_1
0x4005f6a	    0x830d00000000	            or dword [0x04005f71], 0x48 	     17167	i386-dis.c	FUNCTION_78	IF_1
0x4005f71	          0xc60071	                    mov byte [rax], 0x71	     17169	i386-dis.c	FUNCTION_78	IF_1	IF_2
0x4005f74	        0x488d4001	                      lea rax, [rax + 1]	     17169	i386-dis.c	FUNCTION_78	IF_1	IF_2
0x4005f78	            0xeb07	                           jmp 0x4005f81	     17169	i386-dis.c	FUNCTION_78	IF_1	IF_2
0x4005f7a	          0xc6006c	                    mov byte [rax], 0x6c	     17171	i386-dis.c	FUNCTION_78	IF_1	ELSE_1	IF_3
0x4005f7d	        0x488d4001	                      lea rax, [rax + 1]	     17171	i386-dis.c	FUNCTION_78	IF_1	ELSE_1	IF_3
0x4005f81	          0xc60000	                       mov byte [rax], 0	     17173	i386-dis.c	FUNCTION_78	IF_1
0x4005f84	    0x488905000000	            mov qword [0x04005f8b], rax 	     17174	i386-dis.c	FUNCTION_78	IF_1
0x4005f8b	      0xe80afeffff	                          call sym.OP_EX	     17177	i386-dis.c	FUNCTION_78	CALL_1
0x4005f90	            0xeb08	                           jmp 0x4005f9a	     17178	i386-dis.c	FUNCTION_78
0x4005f92	        0x40f6c604	                             test sil, 4	     17170	i386-dis.c	FUNCTION_78	IF_1	ELSE_1	IF_3
0x4005f96	            0x75e2	                           jne 0x4005f7a	     17170	i386-dis.c	FUNCTION_78	IF_1	ELSE_1	IF_3
0x4005f98	            0xebe7	                           jmp 0x4005f81	     17170	i386-dis.c	FUNCTION_78	IF_1	ELSE_1	IF_3
0x4005f9a	        0x4883c408	                              add rsp, 8	     17178	i386-dis.c	FUNCTION_78
0x4005f9e	              0xc3	                                     ret	     17178	i386-dis.c	FUNCTION_78
OP_Vex_2src_2	CALL,2:FOR,0:SWITCH,0:WHILE,0:ELSE,1:DO,0:IF,2:functions,0	16
0x4005a9d	        0x4883ec08	                              sub rsp, 8	     17490	i386-dis.c	FUNCTION_85
0x4005aa1	    0x833d00000000	               cmp dword [0x04005aa8], 0	     17491	i386-dis.c	FUNCTION_85	IF_1
0x4005aa8	            0x7407	                            je 0x4005ab1	     17491	i386-dis.c	FUNCTION_85	IF_1
0x4005aaa	      0xe87dffffff	                    call sym.OP_Vex_2src	     17492	i386-dis.c	FUNCTION_85	CALL_1
0x4005aaf	            0xeb27	                           jmp 0x4005ad8	     17492	i386-dis.c	FUNCTION_85	CALL_1
0x4005ab1	    0x8b0500000000	            mov eax, dword [0x04005ab7] 	     17495	i386-dis.c	FUNCTION_85	ELSE_1
0x4005ab7	            0x89c2	                            mov edx, eax	     17498	i386-dis.c	FUNCTION_85	ELSE_1	IF_2
0x4005ab9	          0x83e207	                              and edx, 7	     17498	i386-dis.c	FUNCTION_85	ELSE_1	IF_2
0x4005abc	    0x833d00000000	               cmp dword [0x04005ac3], 2	     17498	i386-dis.c	FUNCTION_85	ELSE_1	IF_2
0x4005ac3	           0xf45c2	                         cmovne eax, edx	     17498	i386-dis.c	FUNCTION_85	ELSE_1	IF_2
0x4005ac6	            0x89c0	                            mov eax, eax	     17499	i386-dis.c	FUNCTION_85	ELSE_1	CALL_2
0x4005ac8	    0x488b15000000	            mov rdx, qword [0x04005acf] 	     17499	i386-dis.c	FUNCTION_85	ELSE_1	CALL_2
0x4005acf	        0x488b3cc2	            mov rdi, qword [rdx + rax*8]	     17499	i386-dis.c	FUNCTION_85	ELSE_1	CALL_2
0x4005ad3	      0xe8c5d1ffff	                        call sym.oappend	     17499	i386-dis.c	FUNCTION_85	ELSE_1	CALL_2
0x4005ad8	        0x4883c408	                              add rsp, 8	     17501	i386-dis.c	FUNCTION_85
0x4005adc	              0xc3	                                     ret	     17501	i386-dis.c	FUNCTION_85
OP_E	CALL,2:FOR,0:SWITCH,0:WHILE,0:ELSE,1:DO,0:IF,1:functions,0	12
0x40056f5	        0x4883ec08	                              sub rsp, 8	     15665	i386-dis.c	FUNCTION_26
0x40056f9	    0x803d00000000	                cmp byte [0x04005700], 0	     15667	i386-dis.c	FUNCTION_26
0x4005700	            0x7505	                           jne 0x4005707	     15667	i386-dis.c	FUNCTION_26
0x4005702	      0xe800000000	                          call 0x4005707	     15667	i386-dis.c	FUNCTION_26
0x4005707	    0x488305000000	               add qword [0x0400570f], 1	     15668	i386-dis.c	FUNCTION_26
0x400570f	    0x833d00000000	               cmp dword [0x04005716], 3	     15670	i386-dis.c	FUNCTION_26	IF_1
0x4005716	            0x7507	                           jne 0x400571f	     15670	i386-dis.c	FUNCTION_26	IF_1
0x4005718	      0xe8bceaffff	                  call sym.OP_E_register	     15671	i386-dis.c	FUNCTION_26	CALL_1
0x400571d	            0xeb05	                           jmp 0x4005724	     15671	i386-dis.c	FUNCTION_26	CALL_1
0x400571f	      0xe823f3ffff	                    call sym.OP_E_memory	     15673	i386-dis.c	FUNCTION_26	CALL_2
0x4005724	        0x4883c408	                              add rsp, 8	     15674	i386-dis.c	FUNCTION_26
0x4005728	              0xc3	                                     ret	     15674	i386-dis.c	FUNCTION_26
NOP_Fixup2	CALL,1:FOR,0:SWITCH,0:WHILE,0:ELSE,0:DO,0:IF,1:functions,0	13
0x4004766	        0x4883ec08	                              sub rsp, 8	     16704	i386-dis.c	FUNCTION_61
0x400476a	    0xf60500000000	               test byte [0x04004771], 2	     16705	i386-dis.c	FUNCTION_61	IF_1
0x4004771	            0x7518	                           jne 0x400478b	     16705	i386-dis.c	FUNCTION_61	IF_1
0x4004773	    0x8b0500000000	            mov eax, dword [0x04004779] 	     16707	i386-dis.c	FUNCTION_61	IF_1
0x4004779	            0x85c0	                           test eax, eax	     16706	i386-dis.c	FUNCTION_61	IF_1
0x400477b	            0x7413	                            je 0x4004790	     16706	i386-dis.c	FUNCTION_61	IF_1
0x400477d	          0x83f848	                           cmp eax, 0x48	     16706	i386-dis.c	FUNCTION_61	IF_1
0x4004780	            0x740e	                            je 0x4004790	     16706	i386-dis.c	FUNCTION_61	IF_1
0x4004782	    0x833d00000000	               cmp dword [0x04004789], 2	     16708	i386-dis.c	FUNCTION_61	IF_1
0x4004789	            0x7505	                           jne 0x4004790	     16708	i386-dis.c	FUNCTION_61	IF_1
0x400478b	      0xe80afeffff	                       call sym.OP_IMREG	     16709	i386-dis.c	FUNCTION_61	CALL_1
0x4004790	        0x4883c408	                              add rsp, 8	     16710	i386-dis.c	FUNCTION_61
0x4004794	              0xc3	                                     ret	     16710	i386-dis.c	FUNCTION_61
OP_E_register	CALL,5:FOR,0:SWITCH,1:WHILE,0:ELSE,4:DO,0:IF,10:functions,0	127
0x40041d9	            0x4155	                                push r13	     15093	i386-dis.c	FUNCTION_24
0x40041db	            0x4154	                                push r12	     15093	i386-dis.c	FUNCTION_24
0x40041dd	              0x55	                                push rbp	     15093	i386-dis.c	FUNCTION_24
0x40041de	              0x53	                                push rbx	     15093	i386-dis.c	FUNCTION_24
0x40041df	        0x4883ec08	                              sub rsp, 8	     15093	i386-dis.c	FUNCTION_24
0x40041e3	            0x89fd	                            mov ebp, edi	     15093	i386-dis.c	FUNCTION_24
0x40041e5	          0x4189f5	                           mov r13d, esi	     15093	i386-dis.c	FUNCTION_24
0x40041e8	    0x8b1d00000000	            mov ebx, dword [0x040041ee] 	     15094	i386-dis.c	FUNCTION_24
0x40041ee	    0x448b25000000	           mov r12d, dword [0x040041f5] 	     15097	i386-dis.c	FUNCTION_24
0x40041f5	        0x41f6c401	                            test r12b, 1	     15097	i386-dis.c	FUNCTION_24
0x40041f9	            0x740a	                            je 0x4004205	     15097	i386-dis.c	FUNCTION_24
0x40041fb	    0x830d00000000	            or dword [0x04004202], 0x41 	     15097	i386-dis.c	FUNCTION_24
0x4004202	          0x83c308	                              add ebx, 8	     15099	i386-dis.c	FUNCTION_24	IF_1
0x4004205	        0x41f6c504	                            test r13b, 4	     15101	i386-dis.c	FUNCTION_24	IF_2
0x4004209	            0x741a	                            je 0x4004225	     15101	i386-dis.c	FUNCTION_24	IF_2
0x400420b	          0x83fd26	                           cmp ebp, 0x26	     15102	i386-dis.c	FUNCTION_24	IF_2
0x400420e	            0x7715	                            ja 0x4004225	     15102	i386-dis.c	FUNCTION_24	IF_2
0x4004210	    0x48b824000000	                movabs rax, 0x4000000024	     15104	i386-dis.c	FUNCTION_24	IF_2
0x400421a	        0x480fa3e8	                             bt rax, rbp	     15104	i386-dis.c	FUNCTION_24	IF_2
0x400421e	            0x7305	                           jae 0x4004225	     15104	i386-dis.c	FUNCTION_24	IF_2
0x4004220	      0xe8b1bfffff	                   call sym.swap_operand	     15105	i386-dis.c	FUNCTION_24	CALL_1
0x4004225	          0x83fd45	                           cmp ebp, 0x45	     15107	i386-dis.c	FUNCTION_24	SWITCH_1
0x4004228	     0xf87ab010000	                            ja 0x40043d9	     15107	i386-dis.c	FUNCTION_24	SWITCH_1
0x400422e	            0x89e8	                            mov eax, ebp	     15107	i386-dis.c	FUNCTION_24	SWITCH_1
0x4004230	    0xff24c5000000	                       jmp qword [rax*8]	     15107	i386-dis.c	FUNCTION_24	SWITCH_1
0x4004237	    0x830d00000000	            or dword [0x0400423e], 0x40 	     15111	i386-dis.c	FUNCTION_24	SWITCH_1
0x400423e	          0x4585e4	                         test r12d, r12d	     15113	i386-dis.c	FUNCTION_24	SWITCH_1	IF_3
0x4004241	    0x488b05000000	            mov rax, qword [0x04004248] 	     15113	i386-dis.c	FUNCTION_24	SWITCH_1	IF_3
0x4004248	    0x480f44050000	           cmove rax, qword [0x04004250]	     15113	i386-dis.c	FUNCTION_24	SWITCH_1	IF_3
0x4004250	      0xe9a2010000	                           jmp 0x40043f7	     15113	i386-dis.c	FUNCTION_24	SWITCH_1	IF_3
0x4004255	    0x488b05000000	            mov rax, qword [0x0400425c] 	     15118	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_1
0x400425c	      0xe996010000	                           jmp 0x40043f7	     15119	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_1
0x4004261	    0x488b05000000	            mov rax, qword [0x04004268] 	     15123	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_1
0x4004268	      0xe98a010000	                           jmp 0x40043f7	     15124	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_1
0x400426d	    0x488b05000000	            mov rax, qword [0x04004274] 	     15126	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_1
0x4004274	      0xe97e010000	                           jmp 0x40043f7	     15127	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_1
0x4004279	    0x833d00000000	               cmp dword [0x04004280], 2	     15130	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_1
0x4004280	    0x488b05000000	            mov rax, qword [0x04004287] 	     15130	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_1
0x4004287	    0x480f45050000	          cmovne rax, qword [0x0400428f]	     15130	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_1
0x400428f	      0xe963010000	                           jmp 0x40043f7	     15130	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_1
0x4004294	    0x488b05000000	            mov rax, qword [0x0400429b] 	     15139	i386-dis.c	FUNCTION_24	SWITCH_1
0x400429b	          0x83fb03	                              cmp ebx, 3	     15134	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_1	IF_4
0x400429e	     0xf8e53010000	                           jle 0x40043f7	     15134	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_1	IF_4
0x40042a4	      0xbf00000000	                              mov edi, 0	     15136	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_1	IF_4	CALL_2
0x40042a9	      0xe8efe9ffff	                        call sym.oappend	     15136	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_1	IF_4	CALL_2
0x40042ae	      0xe966010000	                           jmp 0x4004419	     15137	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_1	IF_4
0x40042b3	      0xbd04000000	                              mov ebp, 4	     15154	i386-dis.c	FUNCTION_24	SWITCH_1
0x40042b8	    0x833d00000000	               cmp dword [0x040042bf], 2	     15142	i386-dis.c	FUNCTION_24	SWITCH_1	IF_5
0x40042bf	            0x753c	                           jne 0x40042fd	     15142	i386-dis.c	FUNCTION_24	SWITCH_1	IF_5
0x40042c1	    0x488b05000000	            mov rax, qword [0x040042c8] 	     15144	i386-dis.c	FUNCTION_24	SWITCH_1	IF_5
0x40042c8	    0x833d00000000	               cmp dword [0x040042cf], 1	     15142	i386-dis.c	FUNCTION_24	SWITCH_1	IF_5
0x40042cf	     0xf8422010000	                            je 0x40043f7	     15142	i386-dis.c	FUNCTION_24	SWITCH_1	IF_5
0x40042d5	            0xeb0e	                           jmp 0x40042e5	     15142	i386-dis.c	FUNCTION_24	SWITCH_1	IF_5
0x40042d7	      0xbd04000000	                              mov ebp, 4	     15154	i386-dis.c	FUNCTION_24	SWITCH_1
0x40042dc	    0x833d00000000	               cmp dword [0x040042e3], 2	     15149	i386-dis.c	FUNCTION_24	SWITCH_1	IF_6
0x40042e3	            0x7518	                           jne 0x40042fd	     15149	i386-dis.c	FUNCTION_24	SWITCH_1	IF_6
0x40042e5	        0x41f6c501	                            test r13b, 1	     15149	i386-dis.c	FUNCTION_24	SWITCH_1	IF_6
0x40042e9	            0x7506	                           jne 0x40042f1	     15149	i386-dis.c	FUNCTION_24	SWITCH_1	IF_6
0x40042eb	        0x41f6c408	                            test r12b, 8	     15149	i386-dis.c	FUNCTION_24	SWITCH_1	IF_6
0x40042ef	            0x742d	                            je 0x400431e	     15149	i386-dis.c	FUNCTION_24	SWITCH_1	IF_6
0x40042f1	    0x488b05000000	            mov rax, qword [0x040042f8] 	     15151	i386-dis.c	FUNCTION_24	SWITCH_1	IF_6
0x40042f8	      0xe9fa000000	                           jmp 0x40043f7	     15152	i386-dis.c	FUNCTION_24	SWITCH_1	IF_6
0x40042fd	        0x41f6c408	                            test r12b, 8	     15162	i386-dis.c	FUNCTION_24	SWITCH_1
0x4004301	            0x7413	                            je 0x4004316	     15162	i386-dis.c	FUNCTION_24	SWITCH_1
0x4004303	    0x830d00000000	            or dword [0x0400430a], 0x48 	     15162	i386-dis.c	FUNCTION_24	SWITCH_1
0x400430a	    0x488b05000000	            mov rax, qword [0x04004311] 	     15164	i386-dis.c	FUNCTION_24	SWITCH_1	IF_7
0x4004311	      0xe9e1000000	                           jmp 0x40043f7	     15164	i386-dis.c	FUNCTION_24	SWITCH_1	IF_7
0x4004316	        0x41f6c501	                            test r13b, 1	     15167	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_2	IF_8
0x400431a	            0x7516	                           jne 0x4004332	     15167	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_2	IF_8
0x400431c	            0xeb05	                           jmp 0x4004323	     15167	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_2	IF_8
0x400431e	      0xbd04000000	                              mov ebp, 4	     15154	i386-dis.c	FUNCTION_24	SWITCH_1
0x4004323	          0x83ed04	                              sub ebp, 4	     15168	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_2	IF_8
0x4004326	    0x488b05000000	            mov rax, qword [0x0400432d] 	     15172	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_2	ELSE_3
0x400432d	          0x83fd01	                              cmp ebp, 1	     15168	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_2	IF_8
0x4004330	            0x7607	                           jbe 0x4004339	     15168	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_2	IF_8
0x4004332	    0x488b05000000	            mov rax, qword [0x04004339] 	     15170	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_2	IF_8
0x4004339	    0x8b1500000000	            mov edx, dword [0x0400433f] 	     15173	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_2
0x400433f	    0x81e200020000	                          and edx, 0x200	     15173	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_2
0x4004345	     0x91500000000	              or dword [0x0400434b], edx	     15173	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_2
0x400434b	      0xe9a7000000	                           jmp 0x40043f7	     15173	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_2
0x4004350	    0x8b1500000000	            mov edx, dword [0x04004356] 	     15177	i386-dis.c	FUNCTION_24	SWITCH_1
0x4004356	          0x83fa02	                              cmp edx, 2	     15178	i386-dis.c	FUNCTION_24	SWITCH_1
0x4004359	            0x7519	                           jne 0x4004374	     15178	i386-dis.c	FUNCTION_24	SWITCH_1
0x400435b	    0x488b05000000	            mov rax, qword [0x04004362] 	     15178	i386-dis.c	FUNCTION_24	SWITCH_1
0x4004362	    0xf60500000000	               test byte [0x04004369], 4	     15179	i386-dis.c	FUNCTION_24	SWITCH_1	IF_9
0x4004369	     0xf8488000000	                            je 0x40043f7	     15179	i386-dis.c	FUNCTION_24	SWITCH_1	IF_9
0x400436f	      0xe991000000	                           jmp 0x4004405	     15179	i386-dis.c	FUNCTION_24	SWITCH_1	IF_9
0x4004374	    0xf60500000000	               test byte [0x0400437b], 4	     15179	i386-dis.c	FUNCTION_24	SWITCH_1	IF_9
0x400437b	            0x7513	                           jne 0x4004390	     15179	i386-dis.c	FUNCTION_24	SWITCH_1	IF_9
0x400437d	            0x85d2	                           test edx, edx	     15178	i386-dis.c	FUNCTION_24	SWITCH_1
0x400437f	    0x488b05000000	            mov rax, qword [0x04004386] 	     15178	i386-dis.c	FUNCTION_24	SWITCH_1
0x4004386	    0x480f44050000	           cmove rax, qword [0x0400438e]	     15178	i386-dis.c	FUNCTION_24	SWITCH_1
0x400438e	            0xeb67	                           jmp 0x40043f7	     15178	i386-dis.c	FUNCTION_24	SWITCH_1
0x4004390	    0x486305000000	         movsxd rax, dword [0x04004397] 	     15185	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_4
0x4004397	    0xc70485000000	                    mov dword [rax*4], 0	     15185	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_4
0x40043a2	    0x488b05000000	            mov rax, qword [0x040043a9] 	     15187	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_4
0x40043a9	          0x83fa01	                              cmp edx, 1	     15187	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_4
0x40043ac	            0x7407	                            je 0x40043b5	     15187	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_4
0x40043ae	    0x488b05000000	            mov rax, qword [0x040043b5] 	     15187	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_4
0x40043b5	    0x810d00000000	            or dword [0x040043bf], 0x400	     15188	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_4
0x40043bf	            0xeb36	                           jmp 0x40043f7	     15188	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_4
0x40043c1	    0x488b05000000	            mov rax, qword [0x040043c8] 	     15198	i386-dis.c	FUNCTION_24	SWITCH_1
0x40043c8	          0x83fb07	                              cmp ebx, 7	     15193	i386-dis.c	FUNCTION_24	SWITCH_1	IF_10
0x40043cb	            0x7e2a	                           jle 0x40043f7	     15193	i386-dis.c	FUNCTION_24	SWITCH_1	IF_10
0x40043cd	      0xbf00000000	                              mov edi, 0	     15195	i386-dis.c	FUNCTION_24	SWITCH_1	IF_10	CALL_3
0x40043d2	      0xe8c6e8ffff	                        call sym.oappend	     15195	i386-dis.c	FUNCTION_24	SWITCH_1	IF_10	CALL_3
0x40043d7	            0xeb40	                           jmp 0x4004419	     15196	i386-dis.c	FUNCTION_24	SWITCH_1	IF_10
0x40043d9	      0xba05000000	                              mov edx, 5	     15203	i386-dis.c	FUNCTION_24	SWITCH_1	CALL_4
0x40043de	      0xbe00000000	                              mov esi, 0	     15203	i386-dis.c	FUNCTION_24	SWITCH_1	CALL_4
0x40043e3	      0xbf00000000	                              mov edi, 0	     15203	i386-dis.c	FUNCTION_24	SWITCH_1	CALL_4
0x40043e8	      0xe800000000	                          call 0x40043ed	     15203	i386-dis.c	FUNCTION_24	SWITCH_1	CALL_4
0x40043ed	          0x4889c7	                            mov rdi, rax	     15203	i386-dis.c	FUNCTION_24	SWITCH_1	CALL_4
0x40043f0	      0xe8a8e8ffff	                        call sym.oappend	     15203	i386-dis.c	FUNCTION_24	SWITCH_1	CALL_4
0x40043f5	            0xeb22	                           jmp 0x4004419	     15204	i386-dis.c	FUNCTION_24	SWITCH_1
0x40043f7	          0x4863db	                         movsxd rbx, ebx	     15206	i386-dis.c	FUNCTION_24	CALL_5
0x40043fa	        0x488b3cd8	            mov rdi, qword [rax + rbx*8]	     15206	i386-dis.c	FUNCTION_24	CALL_5
0x40043fe	      0xe89ae8ffff	                        call sym.oappend	     15206	i386-dis.c	FUNCTION_24	CALL_5
0x4004403	            0xeb14	                           jmp 0x4004419	     15206	i386-dis.c	FUNCTION_24	CALL_5
0x4004405	    0x486305000000	         movsxd rax, dword [0x0400440c] 	     15185	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_4
0x400440c	    0xc70485000000	                    mov dword [rax*4], 0	     15185	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_4
0x4004417	            0xeb95	                           jmp 0x40043ae	     15185	i386-dis.c	FUNCTION_24	SWITCH_1	ELSE_4
0x4004419	        0x4883c408	                              add rsp, 8	     15207	i386-dis.c	FUNCTION_24
0x400441d	              0x5b	                                 pop rbx	     15207	i386-dis.c	FUNCTION_24
0x400441e	              0x5d	                                 pop rbp	     15207	i386-dis.c	FUNCTION_24
0x400441f	            0x415c	                                 pop r12	     15207	i386-dis.c	FUNCTION_24
0x4004421	            0x415d	                                 pop r13	     15207	i386-dis.c	FUNCTION_24
0x4004423	              0xc3	                                     ret	     15207	i386-dis.c	FUNCTION_24
VZERO_Fixup	CALL,3:FOR,0:SWITCH,1:WHILE,0:ELSE,0:DO,0:IF,0:functions,0	19
0x40069c9	    0x8b0500000000	            mov eax, dword [0x040069cf] 	     17596	i386-dis.c	FUNCTION_91	SWITCH_1
0x40069cf	      0x3d80000000	                           cmp eax, 0x80	     17596	i386-dis.c	FUNCTION_91	SWITCH_1
0x40069d4	            0x740d	                            je 0x40069e3	     17596	i386-dis.c	FUNCTION_91	SWITCH_1
0x40069d6	      0x3d00010000	                          cmp eax, 0x100	     17596	i386-dis.c	FUNCTION_91	SWITCH_1
0x40069db	            0x7433	                            je 0x4006a10	     17596	i386-dis.c	FUNCTION_91	SWITCH_1
0x40069dd	        0x4883ec08	                              sub rsp, 8	     17595	i386-dis.c	FUNCTION_91
0x40069e1	            0xeb51	                           jmp 0x4006a34	     17595	i386-dis.c	FUNCTION_91
0x40069e3	    0x48b8767a6572	          movabs rax, 0x7070756f72657a76	     17595	i386-dis.c	FUNCTION_91
0x40069ed	    0x488905000000	            mov qword [0x040069f4], rax 	     17595	i386-dis.c	FUNCTION_91
0x40069f4	    0x66c705000000	          mov word [0x040069fd], 0x7265 	     17595	i386-dis.c	FUNCTION_91
0x40069fd	    0xc60500000000	                mov byte [0x04006a04], 0	     17595	i386-dis.c	FUNCTION_91
0x4006a04	    0x48c705000000	               mov qword [0x04006a0f], 0	     17599	i386-dis.c	FUNCTION_91	SWITCH_1	CALL_1
0x4006a0f	              0xc3	                                     ret	     17600	i386-dis.c	FUNCTION_91	SWITCH_1
0x4006a10	    0x48b8767a6572	          movabs rax, 0x6c6c616f72657a76	     17600	i386-dis.c	FUNCTION_91	SWITCH_1
0x4006a1a	    0x488905000000	            mov qword [0x04006a21], rax 	     17600	i386-dis.c	FUNCTION_91	SWITCH_1
0x4006a21	    0xc60500000000	                mov byte [0x04006a28], 0	     17600	i386-dis.c	FUNCTION_91	SWITCH_1
0x4006a28	    0x48c705000000	               mov qword [0x04006a33], 0	     17602	i386-dis.c	FUNCTION_91	SWITCH_1	CALL_2
0x4006a33	              0xc3	                                     ret	     17603	i386-dis.c	FUNCTION_91	SWITCH_1
0x4006a34	      0xe800000000	                     call sym.NOP_Fixup1	     17605	i386-dis.c	FUNCTION_91	SWITCH_1	CALL_3
VCMP_Fixup	CALL,3:FOR,0:SWITCH,0:WHILE,0:ELSE,1:DO,0:IF,1:functions,0	54
0x4002f8f	              0x53	                                push rbx	     17647	i386-dis.c	FUNCTION_92
0x4002f90	        0x4883ec10	                           sub rsp, 0x10	     17647	i386-dis.c	FUNCTION_92
0x4002f94	    0x64488b042528	                mov rax, qword fs:[0x28]	     17647	i386-dis.c	FUNCTION_92
0x4002f9d	      0x4889442408	                mov qword [rsp + 8], rax	     17647	i386-dis.c	FUNCTION_92
0x4002fa2	            0x31c0	                            xor eax, eax	     17647	i386-dis.c	FUNCTION_92
0x4002fa4	    0x488b05000000	            mov rax, qword [0x04002fab] 	     17650	i386-dis.c	FUNCTION_92
0x4002fab	        0x488d7001	                      lea rsi, [rax + 1]	     17650	i386-dis.c	FUNCTION_92
0x4002faf	    0x488b3d000000	            mov rdi, qword [0x04002fb6] 	     17650	i386-dis.c	FUNCTION_92
0x4002fb6	        0x488b4768	            mov rax, qword [rdi + 0x68] 	     17650	i386-dis.c	FUNCTION_92
0x4002fba	          0x483b30	                    cmp rsi, qword [rax]	     17650	i386-dis.c	FUNCTION_92
0x4002fbd	            0x7605	                           jbe 0x4002fc4	     17650	i386-dis.c	FUNCTION_92
0x4002fbf	      0xe8e7eeffff	                     call sym.fetch_data	     17650	i386-dis.c	FUNCTION_92
0x4002fc4	    0x488b05000000	            mov rax, qword [0x04002fcb] 	     17651	i386-dis.c	FUNCTION_92
0x4002fcb	        0x488d5001	                      lea rdx, [rax + 1]	     17651	i386-dis.c	FUNCTION_92
0x4002fcf	    0x488915000000	            mov qword [0x04002fd6], rdx 	     17651	i386-dis.c	FUNCTION_92
0x4002fd6	           0xfb610	                   movzx edx, byte [rax]	     17651	i386-dis.c	FUNCTION_92
0x4002fd9	           0xfb6c2	                           movzx eax, dl	     17651	i386-dis.c	FUNCTION_92
0x4002fdc	          0x83f81f	                           cmp eax, 0x1f	     17652	i386-dis.c	FUNCTION_92	IF_1	CALL_1
0x4002fdf	            0x775d	                            ja 0x400303e	     17652	i386-dis.c	FUNCTION_92	IF_1	CALL_1
0x4002fe1	    0x488b3d000000	            mov rdi, qword [0x04002fe8] 	     17655	i386-dis.c	FUNCTION_92	IF_1
0x4002fe8	         0xfb657fe	               movzx edx, byte [rdi - 2]	     17656	i386-dis.c	FUNCTION_92	IF_1
0x4002fec	          0x881424	                      mov byte [rsp], dl	     17656	i386-dis.c	FUNCTION_92	IF_1
0x4002fef	         0xfb657ff	               movzx edx, byte [rdi - 1]	     17657	i386-dis.c	FUNCTION_92	IF_1
0x4002ff3	        0x88542401	                  mov byte [rsp + 1], dl	     17657	i386-dis.c	FUNCTION_92	IF_1
0x4002ff7	      0xc644240200	                   mov byte [rsp + 2], 0	     17658	i386-dis.c	FUNCTION_92	IF_1
0x4002ffc	            0x89c0	                            mov eax, eax	     17659	i386-dis.c	FUNCTION_92	IF_1
0x4002ffe	        0x48c1e004	                              shl rax, 4	     17659	i386-dis.c	FUNCTION_92	IF_1
0x4003002	    0x488d98000000	                          lea rbx, [rax]	     17659	i386-dis.c	FUNCTION_92	IF_1
0x4003009	        0x4883ef02	                              sub rdi, 2	        33	stdio2.h	FUNCTION_101	CALL_1
0x400300d	          0x4989e1	                             mov r9, rsp	        33	stdio2.h	FUNCTION_101	CALL_1
0x4003010	    0x4c8b80000000	                     mov r8, qword [rax]	        33	stdio2.h	FUNCTION_101	CALL_1
0x4003017	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_101	CALL_1
0x400301c	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_101	CALL_1
0x4003023	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_101	CALL_1
0x4003028	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_101	CALL_1
0x400302d	      0xe800000000	                          call 0x4003032	        33	stdio2.h	FUNCTION_101	CALL_1
0x4003032	          0x8b4308	                mov eax, dword [rbx + 8]	     17660	i386-dis.c	FUNCTION_92	IF_1
0x4003035	    0x480105000000	            add qword [0x0400303c], rax 	     17660	i386-dis.c	FUNCTION_92	IF_1
0x400303c	            0xeb2a	                           jmp 0x4003068	     17660	i386-dis.c	FUNCTION_92	IF_1
0x400303e	    0xc60500000000	            mov byte [0x04003045], 0x24 	     17665	i386-dis.c	FUNCTION_92	ELSE_1
0x4003045	           0xfb6d2	                           movzx edx, dl	     17666	i386-dis.c	FUNCTION_92	ELSE_1	CALL_2
0x4003048	      0xbe01000000	                              mov esi, 1	     17666	i386-dis.c	FUNCTION_92	ELSE_1	CALL_2
0x400304d	      0xbf00000000	                              mov edi, 0	     17666	i386-dis.c	FUNCTION_92	ELSE_1	CALL_2
0x4003052	      0xe89ee9ffff	            call sym.print_operand_value	     17666	i386-dis.c	FUNCTION_92	ELSE_1	CALL_2
0x4003057	      0xbf00000000	                              mov edi, 0	     17667	i386-dis.c	FUNCTION_92	ELSE_1	CALL_3
0x400305c	      0xe85bfcffff	            call sym.oappend_maybe_intel	     17667	i386-dis.c	FUNCTION_92	ELSE_1	CALL_3
0x4003061	    0xc60500000000	                mov byte [0x04003068], 0	     17668	i386-dis.c	FUNCTION_92	ELSE_1
0x4003068	      0x488b442408	                mov rax, qword [rsp + 8]	     17670	i386-dis.c	FUNCTION_92
0x400306d	    0x644833042528	                xor rax, qword fs:[0x28]	     17670	i386-dis.c	FUNCTION_92
0x4003076	            0x7405	                            je 0x400307d	     17670	i386-dis.c	FUNCTION_92
0x4003078	      0xe800000000	                          call 0x400307d	     17670	i386-dis.c	FUNCTION_92
0x400307d	        0x4883c410	                           add rsp, 0x10	     17670	i386-dis.c	FUNCTION_92
0x4003081	              0x5b	                                 pop rbx	     17670	i386-dis.c	FUNCTION_92
0x4003082	              0xc3	                                     ret	     17670	i386-dis.c	FUNCTION_92
OP_IMREG	CALL,1:FOR,0:SWITCH,1:WHILE,0:ELSE,5:DO,0:IF,6:functions,0	76
0x400459a	        0x4883ec08	                              sub rsp, 8	     15917	i386-dis.c	FUNCTION_34
0x400459e	          0x8d47ba	                   lea eax, [rdi - 0x46]	     15920	i386-dis.c	FUNCTION_34	SWITCH_1
0x40045a1	          0x83f827	                           cmp eax, 0x27	     15920	i386-dis.c	FUNCTION_34	SWITCH_1
0x40045a4	     0xf871c010000	                            ja 0x40046c6	     15920	i386-dis.c	FUNCTION_34	SWITCH_1
0x40045aa	            0x89c0	                            mov eax, eax	     15920	i386-dis.c	FUNCTION_34	SWITCH_1
0x40045ac	    0xff24c5000000	                       jmp qword [rax*8]	     15920	i386-dis.c	FUNCTION_34	SWITCH_1
0x40045b3	    0x803d00000000	                cmp byte [0x040045ba], 0	     15926	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_1
0x40045ba	      0xbf00000000	                              mov edi, 0	     15926	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_1
0x40045bf	      0xb800000000	                              mov eax, 0	     15926	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_1
0x40045c4	        0x480f45f8	                         cmovne rdi, rax	     15926	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_1
0x40045c8	      0xe910010000	                           jmp 0x40046dd	     15926	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_1
0x40045cd	          0x4863ff	                         movsxd rdi, edi	     15930	i386-dis.c	FUNCTION_34	SWITCH_1
0x40045d0	    0x488b05000000	            mov rax, qword [0x040045d7] 	     15930	i386-dis.c	FUNCTION_34	SWITCH_1
0x40045d7	    0x488bbcf820fd	    mov rdi, qword [rax + rdi*8 - 0x2e0]	     15930	i386-dis.c	FUNCTION_34	SWITCH_1
0x40045df	      0xe9f9000000	                           jmp 0x40046dd	     15931	i386-dis.c	FUNCTION_34	SWITCH_1
0x40045e4	          0x4863ff	                         movsxd rdi, edi	     15934	i386-dis.c	FUNCTION_34	SWITCH_1
0x40045e7	    0x488b05000000	            mov rax, qword [0x040045ee] 	     15934	i386-dis.c	FUNCTION_34	SWITCH_1
0x40045ee	    0x488bbcf8d0fd	    mov rdi, qword [rax + rdi*8 - 0x230]	     15934	i386-dis.c	FUNCTION_34	SWITCH_1
0x40045f6	      0xe9e2000000	                           jmp 0x40046dd	     15935	i386-dis.c	FUNCTION_34	SWITCH_1
0x40045fb	    0x830d00000000	            or dword [0x04004602], 0x40 	     15938	i386-dis.c	FUNCTION_34	SWITCH_1
0x4004602	    0x833d00000000	               cmp dword [0x04004609], 0	     15939	i386-dis.c	FUNCTION_34	SWITCH_1	IF_2
0x4004609	            0x7417	                            je 0x4004622	     15939	i386-dis.c	FUNCTION_34	SWITCH_1	IF_2
0x400460b	          0x4863ff	                         movsxd rdi, edi	     15940	i386-dis.c	FUNCTION_34	SWITCH_1	IF_2
0x400460e	    0x488b05000000	            mov rax, qword [0x04004615] 	     15940	i386-dis.c	FUNCTION_34	SWITCH_1	IF_2
0x4004615	    0x488bbcf860fd	    mov rdi, qword [rax + rdi*8 - 0x2a0]	     15940	i386-dis.c	FUNCTION_34	SWITCH_1	IF_2
0x400461d	      0xe9bb000000	                           jmp 0x40046dd	     15940	i386-dis.c	FUNCTION_34	SWITCH_1	IF_2
0x4004622	          0x4863ff	                         movsxd rdi, edi	     15942	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_2
0x4004625	    0x488b05000000	            mov rax, qword [0x0400462c] 	     15942	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_2
0x400462c	    0x488bbcf860fd	    mov rdi, qword [rax + rdi*8 - 0x2a0]	     15942	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_2
0x4004634	      0xe9a4000000	                           jmp 0x40046dd	     15942	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_2
0x4004639	    0xf60500000000	               test byte [0x04004640], 8	     15946	i386-dis.c	FUNCTION_34	SWITCH_1
0x4004640	     0xf849e000000	                            je 0x40046e4	     15946	i386-dis.c	FUNCTION_34	SWITCH_1
0x4004646	    0x830d00000000	            or dword [0x0400464d], 0x48 	     15946	i386-dis.c	FUNCTION_34	SWITCH_1
0x400464d	          0x4863ff	                         movsxd rdi, edi	     15948	i386-dis.c	FUNCTION_34	SWITCH_1	IF_3
0x4004650	    0x488b05000000	            mov rax, qword [0x04004657] 	     15948	i386-dis.c	FUNCTION_34	SWITCH_1	IF_3
0x4004657	    0x488bbcf8a0fd	    mov rdi, qword [rax + rdi*8 - 0x260]	     15948	i386-dis.c	FUNCTION_34	SWITCH_1	IF_3
0x400465f	            0xeb7c	                           jmp 0x40046dd	     15948	i386-dis.c	FUNCTION_34	SWITCH_1	IF_3
0x4004661	          0x4863ff	                         movsxd rdi, edi	     15952	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_3	IF_4
0x4004664	    0x488b05000000	            mov rax, qword [0x0400466b] 	     15952	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_3	IF_4
0x400466b	    0x488bbcf8a0fd	    mov rdi, qword [rax + rdi*8 - 0x260]	     15952	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_3	IF_4
0x4004673	            0xeb12	                           jmp 0x4004687	     15952	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_3	IF_4
0x4004675	          0x4863ff	                         movsxd rdi, edi	     15954	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_3	ELSE_4
0x4004678	    0x488b05000000	            mov rax, qword [0x0400467f] 	     15954	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_3	ELSE_4
0x400467f	    0x488bbcf8a0fd	    mov rdi, qword [rax + rdi*8 - 0x260]	     15954	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_3	ELSE_4
0x4004687	    0x8b0500000000	            mov eax, dword [0x0400468d] 	     15955	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_3
0x400468d	      0x2500020000	                          and eax, 0x200	     15955	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_3
0x4004692	     0x90500000000	              or dword [0x04004698], eax	     15955	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_3
0x4004698	            0xeb43	                           jmp 0x40046dd	     15955	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_3
0x400469a	    0xf60500000000	               test byte [0x040046a1], 8	     15959	i386-dis.c	FUNCTION_34	SWITCH_1	IF_5
0x40046a1	            0x754d	                           jne 0x40046f0	     15959	i386-dis.c	FUNCTION_34	SWITCH_1	IF_5
0x40046a3	        0x40f6c601	                             test sil, 1	     15959	i386-dis.c	FUNCTION_34	SWITCH_1	IF_5
0x40046a7	            0x7553	                           jne 0x40046fc	     15959	i386-dis.c	FUNCTION_34	SWITCH_1	IF_5
0x40046a9	    0x488b05000000	            mov rax, qword [0x040046b0] 	     15962	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_5
0x40046b0	          0x488b38	                    mov rdi, qword [rax]	     15962	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_5
0x40046b3	    0x8b0500000000	            mov eax, dword [0x040046b9] 	     15964	i386-dis.c	FUNCTION_34	SWITCH_1	IF_6
0x40046b9	      0x2500020000	                          and eax, 0x200	     15964	i386-dis.c	FUNCTION_34	SWITCH_1	IF_6
0x40046be	     0x90500000000	              or dword [0x040046c4], eax	     15964	i386-dis.c	FUNCTION_34	SWITCH_1	IF_6
0x40046c4	            0xeb17	                           jmp 0x40046dd	     15964	i386-dis.c	FUNCTION_34	SWITCH_1	IF_6
0x40046c6	      0xba05000000	                              mov edx, 5	     15967	i386-dis.c	FUNCTION_34	SWITCH_1
0x40046cb	      0xbe00000000	                              mov esi, 0	     15967	i386-dis.c	FUNCTION_34	SWITCH_1
0x40046d0	      0xbf00000000	                              mov edi, 0	     15967	i386-dis.c	FUNCTION_34	SWITCH_1
0x40046d5	      0xe800000000	                          call 0x40046da	     15967	i386-dis.c	FUNCTION_34	SWITCH_1
0x40046da	          0x4889c7	                            mov rdi, rax	     15967	i386-dis.c	FUNCTION_34	SWITCH_1
0x40046dd	      0xe8bbe5ffff	                        call sym.oappend	     15970	i386-dis.c	FUNCTION_34	CALL_1
0x40046e2	            0xeb24	                           jmp 0x4004708	     15971	i386-dis.c	FUNCTION_34
0x40046e4	        0x40f6c601	                             test sil, 1	     15951	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_3	IF_4
0x40046e8	     0xf8573ffffff	                           jne 0x4004661	     15951	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_3	IF_4
0x40046ee	            0xeb85	                           jmp 0x4004675	     15951	i386-dis.c	FUNCTION_34	SWITCH_1	ELSE_3	IF_4
0x40046f0	    0x488b05000000	            mov rax, qword [0x040046f7] 	     15960	i386-dis.c	FUNCTION_34	SWITCH_1	IF_5
0x40046f7	          0x488b38	                    mov rdi, qword [rax]	     15960	i386-dis.c	FUNCTION_34	SWITCH_1	IF_5
0x40046fa	            0xebe1	                           jmp 0x40046dd	     15960	i386-dis.c	FUNCTION_34	SWITCH_1	IF_5
0x40046fc	    0x488b05000000	            mov rax, qword [0x04004703] 	     15960	i386-dis.c	FUNCTION_34	SWITCH_1	IF_5
0x4004703	          0x488b38	                    mov rdi, qword [rax]	     15960	i386-dis.c	FUNCTION_34	SWITCH_1	IF_5
0x4004706	            0xebab	                           jmp 0x40046b3	     15960	i386-dis.c	FUNCTION_34	SWITCH_1	IF_5
0x4004708	        0x4883c408	                              add rsp, 8	     15971	i386-dis.c	FUNCTION_34
0x400470c	              0xc3	                                     ret	     15971	i386-dis.c	FUNCTION_34
set_op	CALL,0:FOR,0:SWITCH,0:WHILE,0:ELSE,1:DO,0:IF,1:functions,0	15
0x40001f0	    0x8b0500000000	            mov eax, dword [0x040001f6] 	     15836	i386-dis.c	FUNCTION_32
0x40001f6	          0x4863d0	                         movsxd rdx, eax	     15836	i386-dis.c	FUNCTION_32
0x40001f9	    0x890495000000	                  mov dword [rdx*4], eax	     15836	i386-dis.c	FUNCTION_32
0x4000200	    0x833d00000000	               cmp dword [0x04000207], 2	     15837	i386-dis.c	FUNCTION_32	IF_1
0x4000207	            0x7514	                           jne 0x400021d	     15837	i386-dis.c	FUNCTION_32	IF_1
0x4000209	    0x48893cd50000	                  mov qword [rdx*8], rdi	     15839	i386-dis.c	FUNCTION_32	IF_1
0x4000211	          0x4863f6	                         movsxd rsi, esi	     15840	i386-dis.c	FUNCTION_32	IF_1
0x4000214	    0x488934d50000	                  mov qword [rdx*8], rsi	     15840	i386-dis.c	FUNCTION_32	IF_1
0x400021c	              0xc3	                                     ret	     15840	i386-dis.c	FUNCTION_32	IF_1
0x400021d	            0x4898	                                    cdqe	     15845	i386-dis.c	FUNCTION_32	ELSE_1
0x400021f	          0x83e7ff	                     and edi, 0xffffffff	     15845	i386-dis.c	FUNCTION_32	ELSE_1
0x4000222	    0x48893cc50000	                  mov qword [rax*8], rdi	     15845	i386-dis.c	FUNCTION_32	ELSE_1
0x400022a	            0x89f1	                            mov ecx, esi	     15846	i386-dis.c	FUNCTION_32	ELSE_1
0x400022c	    0x48890cc50000	                  mov qword [rax*8], rcx	     15846	i386-dis.c	FUNCTION_32	ELSE_1
0x4000234	              0xc3	                                     ret	     15846	i386-dis.c	FUNCTION_32	ELSE_1
OP_Skip_MODRM	CALL,0:FOR,0:SWITCH,0:WHILE,0:ELSE,0:DO,0:IF,0:functions,0	6
0x400028b	    0x803d00000000	                cmp byte [0x04000292], 0	     13908	i386-dis.c	FUNCTION_12
0x4000292	            0x7509	                           jne 0x400029d	     13908	i386-dis.c	FUNCTION_12
0x4000294	        0x4883ec08	                              sub rsp, 8	     13906	i386-dis.c	FUNCTION_12
0x4000298	      0xe800000000	                          call 0x400029d	     13908	i386-dis.c	FUNCTION_12
0x400029d	    0x488305000000	               add qword [0x040002a5], 1	     13909	i386-dis.c	FUNCTION_12
0x40002a5	              0xc3	                                     ret	     13909	i386-dis.c	FUNCTION_12
OP_XMM_Vex	CALL,2:FOR,0:SWITCH,0:WHILE,0:ELSE,0:DO,0:IF,2:functions,0	18
0x4003f46	              0x55	                                push rbp	     17583	i386-dis.c	FUNCTION_90
0x4003f47	              0x53	                                push rbx	     17583	i386-dis.c	FUNCTION_90
0x4003f48	        0x4883ec08	                              sub rsp, 8	     17583	i386-dis.c	FUNCTION_90
0x4003f4c	            0x89fb	                            mov ebx, edi	     17583	i386-dis.c	FUNCTION_90
0x4003f4e	            0x89f5	                            mov ebp, esi	     17583	i386-dis.c	FUNCTION_90
0x4003f50	    0x833d00000000	               cmp dword [0x04003f57], 3	     17584	i386-dis.c	FUNCTION_90	IF_1
0x4003f57	            0x7415	                            je 0x4003f6e	     17584	i386-dis.c	FUNCTION_90	IF_1
0x4003f59	    0x833d00000000	               cmp dword [0x04003f60], 0	     17586	i386-dis.c	FUNCTION_90	IF_1	IF_2
0x4003f60	            0x7405	                            je 0x4003f67	     17586	i386-dis.c	FUNCTION_90	IF_1	IF_2
0x4003f62	      0xe8f8f5ffff	                          call sym.BadOp	     17587	i386-dis.c	FUNCTION_90	IF_1	CALL_1
0x4003f67	    0xc60500000000	                mov byte [0x04003f6e], 0	     17588	i386-dis.c	FUNCTION_90	IF_1
0x4003f6e	            0x89ee	                            mov esi, ebp	     17590	i386-dis.c	FUNCTION_90	CALL_2
0x4003f70	            0x89df	                            mov edi, ebx	     17590	i386-dis.c	FUNCTION_90	CALL_2
0x4003f72	      0xe8b4feffff	                         call sym.OP_XMM	     17590	i386-dis.c	FUNCTION_90	CALL_2
0x4003f77	        0x4883c408	                              add rsp, 8	     17591	i386-dis.c	FUNCTION_90
0x4003f7b	              0x5b	                                 pop rbx	     17591	i386-dis.c	FUNCTION_90
0x4003f7c	              0x5d	                                 pop rbp	     17591	i386-dis.c	FUNCTION_90
0x4003f7d	              0xc3	                                     ret	     17591	i386-dis.c	FUNCTION_90
OP_SEG	CALL,2:FOR,0:SWITCH,0:WHILE,0:ELSE,1:DO,0:IF,1:functions,0	14
0x400587a	        0x4883ec08	                              sub rsp, 8	     16191	i386-dis.c	FUNCTION_39
0x400587e	          0x83ff07	                              cmp edi, 7	     16192	i386-dis.c	FUNCTION_39	IF_1
0x4005881	            0x7519	                           jne 0x400589c	     16192	i386-dis.c	FUNCTION_39	IF_1
0x4005883	    0x486315000000	         movsxd rdx, dword [0x0400588a] 	     16193	i386-dis.c	FUNCTION_39	CALL_1
0x400588a	    0x488b05000000	            mov rax, qword [0x04005891] 	     16193	i386-dis.c	FUNCTION_39	CALL_1
0x4005891	        0x488b3cd0	            mov rdi, qword [rax + rdx*8]	     16193	i386-dis.c	FUNCTION_39	CALL_1
0x4005895	      0xe803d4ffff	                        call sym.oappend	     16193	i386-dis.c	FUNCTION_39	CALL_1
0x400589a	            0xeb14	                           jmp 0x40058b0	     16193	i386-dis.c	FUNCTION_39	CALL_1
0x400589c	    0x833d00000000	               cmp dword [0x040058a3], 3	     16195	i386-dis.c	FUNCTION_39	CALL_2
0x40058a3	      0xb807000000	                              mov eax, 7	     16195	i386-dis.c	FUNCTION_39	CALL_2
0x40058a8	           0xf45f8	                         cmovne edi, eax	     16195	i386-dis.c	FUNCTION_39	CALL_2
0x40058ab	      0xe845feffff	                           call sym.OP_E	     16195	i386-dis.c	FUNCTION_39	CALL_2
0x40058b0	        0x4883c408	                              add rsp, 8	     16196	i386-dis.c	FUNCTION_39
0x40058b4	              0xc3	                                     ret	     16196	i386-dis.c	FUNCTION_39
append_seg	CALL,6:FOR,0:SWITCH,1:WHILE,0:ELSE,0:DO,0:IF,1:functions,0	40
0x4002d20	        0x4883ec08	                              sub rsp, 8	     14582	i386-dis.c	FUNCTION_19
0x4002d24	    0x8b0500000000	            mov eax, dword [0x04002d2a] 	     14584	i386-dis.c	FUNCTION_19	IF_1
0x4002d2a	            0x85c0	                           test eax, eax	     14584	i386-dis.c	FUNCTION_19	IF_1
0x4002d2c	            0x7477	                            je 0x4002da5	     14584	i386-dis.c	FUNCTION_19	IF_1
0x4002d2e	     0x90500000000	              or dword [0x04002d34], eax	     14587	i386-dis.c	FUNCTION_19
0x4002d34	          0x83f820	                           cmp eax, 0x20	     14588	i386-dis.c	FUNCTION_19	SWITCH_1
0x4002d37	            0x7432	                            je 0x4002d6b	     14588	i386-dis.c	FUNCTION_19	SWITCH_1
0x4002d39	          0x83f820	                           cmp eax, 0x20	     14588	i386-dis.c	FUNCTION_19	SWITCH_1
0x4002d3c	            0x7f0c	                            jg 0x4002d4a	     14588	i386-dis.c	FUNCTION_19	SWITCH_1
0x4002d3e	          0x83f808	                              cmp eax, 8	     14588	i386-dis.c	FUNCTION_19	SWITCH_1
0x4002d41	            0x741c	                            je 0x4002d5f	     14588	i386-dis.c	FUNCTION_19	SWITCH_1
0x4002d43	          0x83f810	                           cmp eax, 0x10	     14588	i386-dis.c	FUNCTION_19	SWITCH_1
0x4002d46	            0x742f	                            je 0x4002d77	     14588	i386-dis.c	FUNCTION_19	SWITCH_1
0x4002d48	            0xeb5b	                           jmp 0x4002da5	     14588	i386-dis.c	FUNCTION_19	SWITCH_1
0x4002d4a	      0x3d80000000	                           cmp eax, 0x80	     14588	i386-dis.c	FUNCTION_19	SWITCH_1
0x4002d4f	            0x743e	                            je 0x4002d8f	     14588	i386-dis.c	FUNCTION_19	SWITCH_1
0x4002d51	      0x3d00010000	                          cmp eax, 0x100	     14588	i386-dis.c	FUNCTION_19	SWITCH_1
0x4002d56	            0x7443	                            je 0x4002d9b	     14588	i386-dis.c	FUNCTION_19	SWITCH_1
0x4002d58	          0x83f840	                           cmp eax, 0x40	     14588	i386-dis.c	FUNCTION_19	SWITCH_1
0x4002d5b	            0x7548	                           jne 0x4002da5	     14588	i386-dis.c	FUNCTION_19	SWITCH_1
0x4002d5d	            0xeb24	                           jmp 0x4002d83	     14588	i386-dis.c	FUNCTION_19	SWITCH_1
0x4002d5f	      0xbf00000000	                              mov edi, 0	     14591	i386-dis.c	FUNCTION_19	SWITCH_1	CALL_1
0x4002d64	      0xe853ffffff	            call sym.oappend_maybe_intel	     14591	i386-dis.c	FUNCTION_19	SWITCH_1	CALL_1
0x4002d69	            0xeb3a	                           jmp 0x4002da5	     14592	i386-dis.c	FUNCTION_19	SWITCH_1
0x4002d6b	      0xbf00000000	                              mov edi, 0	     14594	i386-dis.c	FUNCTION_19	SWITCH_1	CALL_2
0x4002d70	      0xe847ffffff	            call sym.oappend_maybe_intel	     14594	i386-dis.c	FUNCTION_19	SWITCH_1	CALL_2
0x4002d75	            0xeb2e	                           jmp 0x4002da5	     14595	i386-dis.c	FUNCTION_19	SWITCH_1
0x4002d77	      0xbf00000000	                              mov edi, 0	     14597	i386-dis.c	FUNCTION_19	SWITCH_1	CALL_3
0x4002d7c	      0xe83bffffff	            call sym.oappend_maybe_intel	     14597	i386-dis.c	FUNCTION_19	SWITCH_1	CALL_3
0x4002d81	            0xeb22	                           jmp 0x4002da5	     14598	i386-dis.c	FUNCTION_19	SWITCH_1
0x4002d83	      0xbf00000000	                              mov edi, 0	     14600	i386-dis.c	FUNCTION_19	SWITCH_1	CALL_4
0x4002d88	      0xe82fffffff	            call sym.oappend_maybe_intel	     14600	i386-dis.c	FUNCTION_19	SWITCH_1	CALL_4
0x4002d8d	            0xeb16	                           jmp 0x4002da5	     14601	i386-dis.c	FUNCTION_19	SWITCH_1
0x4002d8f	      0xbf00000000	                              mov edi, 0	     14603	i386-dis.c	FUNCTION_19	SWITCH_1	CALL_5
0x4002d94	      0xe823ffffff	            call sym.oappend_maybe_intel	     14603	i386-dis.c	FUNCTION_19	SWITCH_1	CALL_5
0x4002d99	            0xeb0a	                           jmp 0x4002da5	     14604	i386-dis.c	FUNCTION_19	SWITCH_1
0x4002d9b	      0xbf00000000	                              mov edi, 0	     14606	i386-dis.c	FUNCTION_19	SWITCH_1	CALL_6
0x4002da0	      0xe817ffffff	            call sym.oappend_maybe_intel	     14606	i386-dis.c	FUNCTION_19	SWITCH_1	CALL_6
0x4002da5	        0x4883c408	                              add rsp, 8	     14611	i386-dis.c	FUNCTION_19
0x4002da9	              0xc3	                                     ret	     14611	i386-dis.c	FUNCTION_19
OP_Mask	CALL,3:FOR,0:SWITCH,0:WHILE,0:ELSE,0:DO,0:IF,2:functions,0	22
0x4003f7e	        0x4883ec08	                              sub rsp, 8	     17898	i386-dis.c	FUNCTION_99
0x4003f82	    0x833d00000000	               cmp dword [0x04003f89], 0	     17899	i386-dis.c	FUNCTION_99	IF_1
0x4003f89	            0x7408	                            je 0x4003f93	     17899	i386-dis.c	FUNCTION_99	IF_1
0x4003f8b	          0x83ef44	                           sub edi, 0x44	     17900	i386-dis.c	FUNCTION_99	IF_1
0x4003f8e	          0x83ff01	                              cmp edi, 1	     17900	i386-dis.c	FUNCTION_99	IF_1
0x4003f91	            0x7605	                           jbe 0x4003f98	     17900	i386-dis.c	FUNCTION_99	IF_1
0x4003f93	      0xe800000000	                          call 0x4003f98	     17901	i386-dis.c	FUNCTION_99	CALL_1
0x4003f98	    0xf60500000000	               test byte [0x04003f9f], 4	     17903	i386-dis.c	FUNCTION_99
0x4003f9f	            0x7427	                            je 0x4003fc8	     17903	i386-dis.c	FUNCTION_99
0x4003fa1	    0x830d00000000	            or dword [0x04003fa8], 0x44 	     17903	i386-dis.c	FUNCTION_99
0x4003fa8	      0xe8b2f5ffff	                          call sym.BadOp	     17906	i386-dis.c	FUNCTION_99	IF_2	CALL_2
0x4003fad	            0xeb24	                           jmp 0x4003fd3	     17907	i386-dis.c	FUNCTION_99	IF_2
0x4003faf	    0x486315000000	         movsxd rdx, dword [0x04003fb6] 	     17910	i386-dis.c	FUNCTION_99	CALL_3
0x4003fb6	    0x488b05000000	            mov rax, qword [0x04003fbd] 	     17910	i386-dis.c	FUNCTION_99	CALL_3
0x4003fbd	        0x488b3cd0	            mov rdi, qword [rax + rdx*8]	     17910	i386-dis.c	FUNCTION_99	CALL_3
0x4003fc1	      0xe8d7ecffff	                        call sym.oappend	     17910	i386-dis.c	FUNCTION_99	CALL_3
0x4003fc6	            0xeb0b	                           jmp 0x4003fd3	     17910	i386-dis.c	FUNCTION_99	CALL_3
0x4003fc8	    0x833d00000000	               cmp dword [0x04003fcf], 0	     17904	i386-dis.c	FUNCTION_99	IF_2
0x4003fcf	            0x74d7	                            je 0x4003fa8	     17904	i386-dis.c	FUNCTION_99	IF_2
0x4003fd1	            0xebdc	                           jmp 0x4003faf	     17904	i386-dis.c	FUNCTION_99	IF_2
0x4003fd3	        0x4883c408	                              add rsp, 8	     17911	i386-dis.c	FUNCTION_99
0x4003fd7	              0xc3	                                     ret	     17911	i386-dis.c	FUNCTION_99
OP_DSreg	CALL,5:FOR,0:SWITCH,1:WHILE,0:ELSE,0:DO,0:IF,2:functions,0	42
0x4003d4a	              0x55	                                push rbp	     16326	i386-dis.c	FUNCTION_45
0x4003d4b	              0x53	                                push rbx	     16326	i386-dis.c	FUNCTION_45
0x4003d4c	        0x4883ec08	                              sub rsp, 8	     16326	i386-dis.c	FUNCTION_45
0x4003d50	            0x89fd	                            mov ebp, edi	     16326	i386-dis.c	FUNCTION_45
0x4003d52	            0x89f3	                            mov ebx, esi	     16326	i386-dis.c	FUNCTION_45
0x4003d54	    0x803d00000000	                cmp byte [0x04003d5b], 0	     16327	i386-dis.c	FUNCTION_45	IF_1
0x4003d5b	            0x7449	                            je 0x4003da6	     16327	i386-dis.c	FUNCTION_45	IF_1
0x4003d5d	    0x488b05000000	            mov rax, qword [0x04003d64] 	     16329	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1
0x4003d64	         0xfb640ff	               movzx eax, byte [rax - 1]	     16329	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1
0x4003d68	            0x3ca5	                            cmp al, 0xa5	     16329	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1
0x4003d6a	            0x7420	                            je 0x4003d8c	     16329	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1
0x4003d6c	            0x3ca5	                            cmp al, 0xa5	     16329	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1
0x4003d6e	            0x7706	                            ja 0x4003d76	     16329	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1
0x4003d70	            0x3c6f	                            cmp al, 0x6f	     16329	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1
0x4003d72	            0x740c	                            je 0x4003d80	     16329	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1
0x4003d74	            0xeb24	                           jmp 0x4003d9a	     16329	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1
0x4003d76	            0x3ca7	                            cmp al, 0xa7	     16329	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1
0x4003d78	            0x7412	                            je 0x4003d8c	     16329	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1
0x4003d7a	            0x3cad	                            cmp al, 0xad	     16329	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1
0x4003d7c	            0x751c	                           jne 0x4003d9a	     16329	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1
0x4003d7e	            0xeb0c	                           jmp 0x4003d8c	     16329	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1
0x4003d80	      0xbf2b000000	                           mov edi, 0x2b	     16332	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1	CALL_1
0x4003d85	      0xe83bf8ffff	             call sym.intel_operand_size	     16332	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1	CALL_1
0x4003d8a	            0xeb1a	                           jmp 0x4003da6	     16333	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1
0x4003d8c	            0x89de	                            mov esi, ebx	     16337	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1	CALL_2
0x4003d8e	      0xbf04000000	                              mov edi, 4	     16337	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1	CALL_2
0x4003d93	      0xe82df8ffff	             call sym.intel_operand_size	     16337	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1	CALL_2
0x4003d98	            0xeb0c	                           jmp 0x4003da6	     16338	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1
0x4003d9a	            0x89de	                            mov esi, ebx	     16340	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1	CALL_3
0x4003d9c	      0xbf01000000	                              mov edi, 1	     16340	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1	CALL_3
0x4003da1	      0xe81ff8ffff	             call sym.intel_operand_size	     16340	i386-dis.c	FUNCTION_45	IF_1	SWITCH_1	CALL_3
0x4003da6	    0x833d00000000	               cmp dword [0x04003dad], 0	     16345	i386-dis.c	FUNCTION_45	IF_2
0x4003dad	            0x750a	                           jne 0x4003db9	     16345	i386-dis.c	FUNCTION_45	IF_2
0x4003daf	    0xc70500000000	           mov dword [0x04003db9], 0x20 	     16346	i386-dis.c	FUNCTION_45	IF_2
0x4003db9	      0xe862efffff	                     call sym.append_seg	     16347	i386-dis.c	FUNCTION_45	CALL_4
0x4003dbe	            0x89de	                            mov esi, ebx	     16348	i386-dis.c	FUNCTION_45	CALL_5
0x4003dc0	            0x89ef	                            mov edi, ebp	     16348	i386-dis.c	FUNCTION_45	CALL_5
0x4003dc2	      0xe8d6f5ffff	                        call sym.ptr_reg	     16348	i386-dis.c	FUNCTION_45	CALL_5
0x4003dc7	        0x4883c408	                              add rsp, 8	     16349	i386-dis.c	FUNCTION_45
0x4003dcb	              0x5b	                                 pop rbx	     16349	i386-dis.c	FUNCTION_45
0x4003dcc	              0x5d	                                 pop rbp	     16349	i386-dis.c	FUNCTION_45
0x4003dcd	              0xc3	                                     ret	     16349	i386-dis.c	FUNCTION_45
OP_E_memory	CALL,46:FOR,0:SWITCH,8:WHILE,0:ELSE,15:DO,0:IF,54:functions,0	738
0x4004a47	            0x4157	                                push r15	     15211	i386-dis.c	FUNCTION_25
0x4004a49	            0x4156	                                push r14	     15211	i386-dis.c	FUNCTION_25
0x4004a4b	            0x4155	                                push r13	     15211	i386-dis.c	FUNCTION_25
0x4004a4d	            0x4154	                                push r12	     15211	i386-dis.c	FUNCTION_25
0x4004a4f	              0x55	                                push rbp	     15211	i386-dis.c	FUNCTION_25
0x4004a50	              0x53	                                push rbx	     15211	i386-dis.c	FUNCTION_25
0x4004a51	        0x4883ec38	                           sub rsp, 0x38	     15211	i386-dis.c	FUNCTION_25
0x4004a55	            0x89fb	                            mov ebx, edi	     15211	i386-dis.c	FUNCTION_25
0x4004a57	          0x4189f4	                           mov r12d, esi	     15211	i386-dis.c	FUNCTION_25
0x4004a5a	    0x8b2d00000000	            mov ebp, dword [0x04004a60] 	     15213	i386-dis.c	FUNCTION_25
0x4004a60	            0x89ea	                            mov edx, ebp	     15213	i386-dis.c	FUNCTION_25
0x4004a62	          0x83e201	                              and edx, 1	     15213	i386-dis.c	FUNCTION_25
0x4004a65	     0xf85370b0000	                           jne 0x40055a2	     15213	i386-dis.c	FUNCTION_25
0x4004a6b	      0xe9520b0000	                           jmp 0x40055c2	     15213	i386-dis.c	FUNCTION_25
0x4004a70	    0xc74424080000	                  mov dword [rsp + 8], 0	     15213	i386-dis.c	FUNCTION_25
0x4004a78	    0x8b0d00000000	            mov ecx, dword [0x04004a7e] 	     15220	i386-dis.c	FUNCTION_25	IF_1	IF_2
0x4004a7e	            0x85c9	                           test ecx, ecx	     15220	i386-dis.c	FUNCTION_25	IF_1	IF_2
0x4004a80	            0x741f	                            je 0x4004aa1	     15220	i386-dis.c	FUNCTION_25	IF_1	IF_2
0x4004a82	          0x8d43ee	                   lea eax, [rbx - 0x12]	     15223	i386-dis.c	FUNCTION_25	IF_1	IF_2
0x4004a85	          0x83f801	                              cmp eax, 1	     15223	i386-dis.c	FUNCTION_25	IF_1	IF_2
0x4004a88	     0xf86540b0000	                           jbe 0x40055e2	     15223	i386-dis.c	FUNCTION_25	IF_1	IF_2
0x4004a8e	          0x83fb0d	                            cmp ebx, 0xd	     15223	i386-dis.c	FUNCTION_25	IF_1	IF_2
0x4004a91	     0xf844b0b0000	                            je 0x40055e2	     15223	i386-dis.c	FUNCTION_25	IF_1	IF_2
0x4004a97	      0xe8c3eaffff	                          call sym.BadOp	     15225	i386-dis.c	FUNCTION_25	IF_1	IF_2	CALL_1
0x4004a9c	      0xe9450c0000	                           jmp 0x40056e6	     15226	i386-dis.c	FUNCTION_25	IF_1	IF_2
0x4004aa1	          0x8d43f8	                      lea eax, [rbx - 8]	     15228	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4004aa4	          0x83f837	                           cmp eax, 0x37	     15228	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4004aa7	            0x7759	                            ja 0x4004b02	     15228	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4004aa9	            0x89c0	                            mov eax, eax	     15228	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4004aab	    0xff24c5000000	                       jmp qword [rax*8]	     15228	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4004ab2	    0x833d00000000	               cmp dword [0x04004ab9], 1	     15244	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4004ab9	          0x4519ed	                          sbb r13d, r13d	     15244	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4004abc	        0x4183c503	                             add r13d, 3	     15244	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4004ac0	            0xeb6b	                           jmp 0x4004b2d	     15244	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4004ac2	    0x833d00000000	               cmp dword [0x04004ac9], 1	     15251	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	IF_3
0x4004ac9	          0x4519ed	                          sbb r13d, r13d	     15251	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	IF_3
0x4004acc	        0x4183c503	                             add r13d, 3	     15251	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	IF_3
0x4004ad0	            0xeb7b	                           jmp 0x4004b4d	     15251	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	IF_3
0x4004ad2	    0x8b0500000000	            mov eax, dword [0x04004ad8] 	     15260	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4004ad8	      0x3d00010000	                          cmp eax, 0x100	     15260	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4004add	            0x7438	                            je 0x4004b17	     15260	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4004adf	      0x3d00020000	                          cmp eax, 0x200	     15260	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4004ae4	            0x740f	                            je 0x4004af5	     15260	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4004ae6	    0x41bd04000000	                             mov r13d, 4	     15263	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4004aec	      0x3d80000000	                           cmp eax, 0x80	     15260	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4004af1	            0x743a	                            je 0x4004b2d	     15260	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4004af3	            0xeb08	                           jmp 0x4004afd	     15260	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4004af5	    0x41bd06000000	                             mov r13d, 6	     15269	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4004afb	            0xeb30	                           jmp 0x4004b2d	     15269	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4004afd	      0xe800000000	                          call 0x4004b02	     15272	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2	CALL_2
0x4004b02	      0xe800000000	                          call 0x4004b07	     15305	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	CALL_3
0x4004b07	    0x41bd01000000	                             mov r13d, 1	     15232	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4004b0d	            0xeb2a	                           jmp 0x4004b39	     15232	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4004b0f	    0x41bd02000000	                             mov r13d, 2	     15294	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4004b15	            0xeb16	                           jmp 0x4004b2d	     15294	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4004b17	    0x41bd05000000	                             mov r13d, 5	     15266	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4004b1d	            0xeb0e	                           jmp 0x4004b2d	     15266	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4004b1f	    0x41bd02000000	                             mov r13d, 2	     15294	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4004b25	            0xeb06	                           jmp 0x4004b2d	     15294	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4004b27	    0x41bd05000000	                             mov r13d, 5	     15266	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4004b2d	            0x85c9	                           test ecx, ecx	     15313	i386-dis.c	FUNCTION_25	IF_1	IF_4
0x4004b2f	            0x751c	                           jne 0x4004b4d	     15313	i386-dis.c	FUNCTION_25	IF_1	IF_4
0x4004b31	            0xeb06	                           jmp 0x4004b39	     15313	i386-dis.c	FUNCTION_25	IF_1	IF_4
0x4004b33	    0x41bd04000000	                             mov r13d, 4	     15263	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4004b39	          0x8d43ee	                   lea eax, [rbx - 0x12]	     15314	i386-dis.c	FUNCTION_25	IF_1	IF_4
0x4004b3c	          0x83f801	                              cmp eax, 1	     15314	i386-dis.c	FUNCTION_25	IF_1	IF_4
0x4004b3f	            0x770c	                            ja 0x4004b4d	     15314	i386-dis.c	FUNCTION_25	IF_1	IF_4
0x4004b41	        0x4183ed01	                             sub r13d, 1	     15316	i386-dis.c	FUNCTION_25	IF_1	IF_4
0x4004b45	            0xeb3c	                           jmp 0x4004b83	     15316	i386-dis.c	FUNCTION_25	IF_1	IF_4
0x4004b47	    0x41bd05000000	                             mov r13d, 5	     15276	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4004b4d	          0x83fb1a	                           cmp ebx, 0x1a	     15317	i386-dis.c	FUNCTION_25	IF_1	ELSE_1	IF_5
0x4004b50	            0x7506	                           jne 0x4004b58	     15317	i386-dis.c	FUNCTION_25	IF_1	ELSE_1	IF_5
0x4004b52	        0x4183ed02	                             sub r13d, 2	     15318	i386-dis.c	FUNCTION_25	IF_1	ELSE_1	IF_5
0x4004b56	            0xeb2b	                           jmp 0x4004b83	     15318	i386-dis.c	FUNCTION_25	IF_1	ELSE_1	IF_5
0x4004b58	          0x83fb19	                           cmp ebx, 0x19	     15319	i386-dis.c	FUNCTION_25	IF_1	ELSE_2	IF_6
0x4004b5b	            0x7506	                           jne 0x4004b63	     15319	i386-dis.c	FUNCTION_25	IF_1	ELSE_2	IF_6
0x4004b5d	        0x4183ed03	                             sub r13d, 3	     15320	i386-dis.c	FUNCTION_25	IF_1	ELSE_2	IF_6
0x4004b61	            0xeb20	                           jmp 0x4004b83	     15320	i386-dis.c	FUNCTION_25	IF_1	ELSE_2	IF_6
0x4004b63	          0x83fb1c	                           cmp ebx, 0x1c	     15321	i386-dis.c	FUNCTION_25	IF_1	ELSE_3	IF_7
0x4004b66	            0x751b	                           jne 0x4004b83	     15321	i386-dis.c	FUNCTION_25	IF_1	ELSE_3	IF_7
0x4004b68	    0x813d00000000	           cmp dword [0x04004b72], 0x80 	     15322	i386-dis.c	FUNCTION_25	IF_1	ELSE_3	IF_7
0x4004b72	           0xf94c0	                                 sete al	     15322	i386-dis.c	FUNCTION_25	IF_1	ELSE_3	IF_7
0x4004b75	           0xfb6c0	                           movzx eax, al	     15322	i386-dis.c	FUNCTION_25	IF_1	ELSE_3	IF_7
0x4004b78	          0x4129c5	                           sub r13d, eax	     15322	i386-dis.c	FUNCTION_25	IF_1	ELSE_3	IF_7
0x4004b7b	            0xeb06	                           jmp 0x4004b83	     15322	i386-dis.c	FUNCTION_25	IF_1	ELSE_3	IF_7
0x4004b7d	    0x41bd05000000	                             mov r13d, 5	     15276	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4004b83	            0x85d2	                           test edx, edx	     15327	i386-dis.c	FUNCTION_25
0x4004b85	            0x7407	                            je 0x4004b8e	     15327	i386-dis.c	FUNCTION_25
0x4004b87	    0x830d00000000	            or dword [0x04004b8e], 0x41 	     15327	i386-dis.c	FUNCTION_25
0x4004b8e	    0x440fb6350000	          movzx r14d, byte [0x04004b96] 	     15328	i386-dis.c	FUNCTION_25	IF_8
0x4004b96	          0x4584f6	                         test r14b, r14b	     15328	i386-dis.c	FUNCTION_25	IF_8
0x4004b99	            0x740a	                            je 0x4004ba5	     15328	i386-dis.c	FUNCTION_25	IF_8
0x4004b9b	          0x4489e6	                           mov esi, r12d	     15329	i386-dis.c	FUNCTION_25	CALL_4
0x4004b9e	            0x89df	                            mov edi, ebx	     15329	i386-dis.c	FUNCTION_25	CALL_4
0x4004ba0	      0xe820eaffff	             call sym.intel_operand_size	     15329	i386-dis.c	FUNCTION_25	CALL_4
0x4004ba5	      0xe876e1ffff	                     call sym.append_seg	     15330	i386-dis.c	FUNCTION_25	CALL_5
0x4004baa	        0x4183e402	                             and r12d, 2	     15332	i386-dis.c	FUNCTION_25	IF_9
0x4004bae	            0x7527	                           jne 0x4004bd7	     15332	i386-dis.c	FUNCTION_25	IF_9
0x4004bb0	    0x833d00000000	               cmp dword [0x04004bb7], 2	     15332	i386-dis.c	FUNCTION_25	IF_9
0x4004bb7	     0xf85b5060000	                           jne 0x4005272	     15332	i386-dis.c	FUNCTION_25	IF_9
0x4004bbd	          0x8d43db	                   lea eax, [rbx - 0x25]	     15343	i386-dis.c	FUNCTION_25	IF_9
0x4004bc0	          0x83f801	                              cmp eax, 1	     15343	i386-dis.c	FUNCTION_25	IF_9
0x4004bc3	           0xf97c0	                                 seta al	     15343	i386-dis.c	FUNCTION_25	IF_9
0x4004bc6	          0x83fb22	                           cmp ebx, 0x22	     15343	i386-dis.c	FUNCTION_25	IF_9
0x4004bc9	           0xf95c2	                                setne dl	     15343	i386-dis.c	FUNCTION_25	IF_9
0x4004bcc	           0xfb6d2	                           movzx edx, dl	     15343	i386-dis.c	FUNCTION_25	IF_9
0x4004bcf	            0x21c2	                            and edx, eax	     15343	i386-dis.c	FUNCTION_25	IF_9
0x4004bd1	        0x8954240c	              mov dword [rsp + 0xc], edx	     15343	i386-dis.c	FUNCTION_25	IF_9
0x4004bd5	            0xeb08	                           jmp 0x4004bdf	     15343	i386-dis.c	FUNCTION_25	IF_9
0x4004bd7	    0xc744240c0000	                mov dword [rsp + 0xc], 0	     15343	i386-dis.c	FUNCTION_25	IF_9
0x4004bdf	    0x488b05000000	            mov rax, qword [0x04004be6] 	     15347	i386-dis.c	FUNCTION_25	IF_9
0x4004be6	      0x4889442428	             mov qword [rsp + 0x28], rax	     15347	i386-dis.c	FUNCTION_25	IF_9
0x4004beb	    0x488b05000000	            mov rax, qword [0x04004bf2] 	     15348	i386-dis.c	FUNCTION_25	IF_9
0x4004bf2	      0x4889442420	             mov qword [rsp + 0x20], rax	     15348	i386-dis.c	FUNCTION_25	IF_9
0x4004bf7	    0x448b25000000	           mov r12d, dword [0x04004bfe] 	     15353	i386-dis.c	FUNCTION_25	IF_9
0x4004bfe	        0x4183fc04	                             cmp r12d, 4	     15355	i386-dis.c	FUNCTION_25	IF_9	IF_10
0x4004c02	     0xf8558010000	                           jne 0x4004d60	     15355	i386-dis.c	FUNCTION_25	IF_9	IF_10
0x4004c08	    0x8b0500000000	            mov eax, dword [0x04004c0e] 	     15358	i386-dis.c	FUNCTION_25	IF_9	IF_10
0x4004c0e	        0x89442418	             mov dword [rsp + 0x18], eax	     15358	i386-dis.c	FUNCTION_25	IF_9	IF_10
0x4004c12	        0x40f6c502	                             test bpl, 2	     15359	i386-dis.c	FUNCTION_25	IF_9	IF_10
0x4004c16	            0x740e	                            je 0x4004c26	     15359	i386-dis.c	FUNCTION_25	IF_9	IF_10
0x4004c18	    0x830d00000000	            or dword [0x04004c1f], 0x42 	     15359	i386-dis.c	FUNCTION_25	IF_9	IF_10
0x4004c1f	          0x83c008	                              add eax, 8	     15361	i386-dis.c	FUNCTION_25	IF_9	IF_10	IF_11
0x4004c22	        0x89442418	             mov dword [rsp + 0x18], eax	     15361	i386-dis.c	FUNCTION_25	IF_9	IF_10	IF_11
0x4004c26	          0x8d43cb	                   lea eax, [rbx - 0x35]	     15362	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3
0x4004c29	          0x83f803	                              cmp eax, 3	     15362	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3
0x4004c2c	     0xf87fe000000	                            ja 0x4004d30	     15362	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3
0x4004c32	    0x803d00000000	                cmp byte [0x04004c39], 0	     15368	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	IF_12
0x4004c39	            0x7505	                           jne 0x4004c40	     15368	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	IF_12
0x4004c3b	      0xe800000000	                          call 0x4004c40	     15369	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	CALL_6
0x4004c40	    0x833d00000000	               cmp dword [0x04004c47], 0	     15370	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	IF_13
0x4004c47	            0x7417	                            je 0x4004c60	     15370	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	IF_13
0x4004c49	        0x8b4c2418	            mov ecx, dword [rsp + 0x18] 	     15373	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	IF_13	IF_14
0x4004c4d	            0x89c8	                            mov eax, ecx	     15373	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	IF_13	IF_14
0x4004c4f	          0x83c010	                           add eax, 0x10	     15373	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	IF_13	IF_14
0x4004c52	    0x833d00000000	               cmp dword [0x04004c59], 0	     15373	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	IF_13	IF_14
0x4004c59	           0xf45c1	                         cmovne eax, ecx	     15373	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	IF_13	IF_14
0x4004c5c	        0x89442418	             mov dword [rsp + 0x18], eax	     15373	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	IF_13	IF_14
0x4004c60	    0x8b0500000000	            mov eax, dword [0x04004c66] 	     15377	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4
0x4004c66	      0x3d00010000	                          cmp eax, 0x100	     15377	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4
0x4004c6b	            0x7430	                            je 0x4004c9d	     15377	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4
0x4004c6d	      0x3d00020000	                          cmp eax, 0x200	     15377	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4
0x4004c72	            0x7470	                            je 0x4004ce4	     15377	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4
0x4004c74	      0x3d80000000	                           cmp eax, 0x80	     15377	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4
0x4004c79	     0xf85ac000000	                           jne 0x4004d2b	     15377	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4
0x4004c7f	    0x488b05000000	            mov rax, qword [0x04004c86] 	     15380	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4
0x4004c86	      0x4889442428	             mov qword [rsp + 0x28], rax	     15380	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4
0x4004c8b	      0x4889442420	             mov qword [rsp + 0x20], rax	     15380	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4
0x4004c90	    0xc74424040100	                  mov dword [rsp + 4], 1	     15376	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3
0x4004c98	      0xe9a2000000	                           jmp 0x4004d3f	     15381	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4
0x4004c9d	    0x833d00000000	               cmp dword [0x04004ca4], 0	     15383	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_15
0x4004ca4	            0x7408	                            je 0x4004cae	     15383	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_15
0x4004ca6	          0x8d43c9	                   lea eax, [rbx - 0x37]	     15385	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_15
0x4004ca9	          0x83f801	                              cmp eax, 1	     15385	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_15
0x4004cac	            0x771b	                            ja 0x4004cc9	     15385	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_15
0x4004cae	    0x488b05000000	            mov rax, qword [0x04004cb5] 	     15386	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_15
0x4004cb5	      0x4889442428	             mov qword [rsp + 0x28], rax	     15386	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_15
0x4004cba	      0x4889442420	             mov qword [rsp + 0x20], rax	     15386	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_15
0x4004cbf	    0xc74424040100	                  mov dword [rsp + 4], 1	     15376	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3
0x4004cc7	            0xeb76	                           jmp 0x4004d3f	     15386	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_15
0x4004cc9	    0x488b05000000	            mov rax, qword [0x04004cd0] 	     15388	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	ELSE_5
0x4004cd0	      0x4889442428	             mov qword [rsp + 0x28], rax	     15388	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	ELSE_5
0x4004cd5	      0x4889442420	             mov qword [rsp + 0x20], rax	     15388	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	ELSE_5
0x4004cda	    0xc74424040100	                  mov dword [rsp + 4], 1	     15376	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3
0x4004ce2	            0xeb5b	                           jmp 0x4004d3f	     15376	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3
0x4004ce4	    0x833d00000000	               cmp dword [0x04004ceb], 0	     15391	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_16
0x4004ceb	            0x7408	                            je 0x4004cf5	     15391	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_16
0x4004ced	          0x8d43c9	                   lea eax, [rbx - 0x37]	     15393	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_16
0x4004cf0	          0x83f801	                              cmp eax, 1	     15393	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_16
0x4004cf3	            0x771b	                            ja 0x4004d10	     15393	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_16
0x4004cf5	    0x488b05000000	            mov rax, qword [0x04004cfc] 	     15394	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_16
0x4004cfc	      0x4889442428	             mov qword [rsp + 0x28], rax	     15394	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_16
0x4004d01	      0x4889442420	             mov qword [rsp + 0x20], rax	     15394	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_16
0x4004d06	    0xc74424040100	                  mov dword [rsp + 4], 1	     15376	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3
0x4004d0e	            0xeb2f	                           jmp 0x4004d3f	     15394	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	IF_16
0x4004d10	    0x488b05000000	            mov rax, qword [0x04004d17] 	     15396	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	ELSE_6
0x4004d17	      0x4889442428	             mov qword [rsp + 0x28], rax	     15396	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	ELSE_6
0x4004d1c	      0x4889442420	             mov qword [rsp + 0x20], rax	     15396	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	ELSE_6
0x4004d21	    0xc74424040100	                  mov dword [rsp + 4], 1	     15376	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3
0x4004d29	            0xeb14	                           jmp 0x4004d3f	     15376	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3
0x4004d2b	      0xe800000000	                          call 0x4004d30	     15399	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3	SWITCH_4	CALL_7
0x4004d30	      0x837c241804	               cmp dword [rsp + 0x18], 4	     15403	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3
0x4004d35	           0xf95c0	                                setne al	     15403	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3
0x4004d38	           0xfb6c0	                           movzx eax, al	     15403	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3
0x4004d3b	        0x89442404	                mov dword [rsp + 4], eax	     15403	i386-dis.c	FUNCTION_25	IF_9	IF_10	SWITCH_3
0x4004d3f	    0x8b0500000000	            mov eax, dword [0x04004d45] 	     15406	i386-dis.c	FUNCTION_25	IF_9	IF_10
0x4004d45	        0x89442414	             mov dword [rsp + 0x14], eax	     15406	i386-dis.c	FUNCTION_25	IF_9	IF_10
0x4004d49	    0x448b25000000	           mov r12d, dword [0x04004d50] 	     15407	i386-dis.c	FUNCTION_25	IF_9	IF_10
0x4004d50	    0x488305000000	               add qword [0x04004d58], 1	     15408	i386-dis.c	FUNCTION_25	IF_9	IF_10
0x4004d58	    0x41be01000000	                             mov r14d, 1	     15357	i386-dis.c	FUNCTION_25	IF_9	IF_10
0x4004d5e	            0xeb1e	                           jmp 0x4004d7e	     15357	i386-dis.c	FUNCTION_25	IF_9	IF_10
0x4004d60	    0xc74424140000	               mov dword [rsp + 0x14], 0	     15342	i386-dis.c	FUNCTION_25	IF_9
0x4004d68	    0xc74424180000	               mov dword [rsp + 0x18], 0	     15341	i386-dis.c	FUNCTION_25	IF_9
0x4004d70	    0xc74424040000	                  mov dword [rsp + 4], 0	     15352	i386-dis.c	FUNCTION_25	IF_9
0x4004d78	    0x41be00000000	                             mov r14d, 0	     15350	i386-dis.c	FUNCTION_25	IF_9
0x4004d7e	    0x8b0500000000	            mov eax, dword [0x04004d84] 	     15412	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4004d84	          0x83f801	                              cmp eax, 1	     15412	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4004d87	            0x745a	                            je 0x4004de3	     15412	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4004d89	          0x83f802	                              cmp eax, 2	     15412	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4004d8c	     0xf84c2000000	                            je 0x4004e54	     15412	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4004d92	            0x85c0	                           test eax, eax	     15412	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4004d94	     0xf85c7000000	                           jne 0x4004e61	     15412	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4004d9a	      0xbd00000000	                              mov ebp, 0	     15212	i386-dis.c	FUNCTION_25
0x4004d9f	        0x4183fc05	                             cmp r12d, 5	     15415	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_17
0x4004da3	     0xf8598080000	                           jne 0x4005641	     15415	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_17
0x4004da9	    0x833d00000000	               cmp dword [0x04004db0], 2	     15419	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_17	IF_18
0x4004db0	           0xf94c0	                                 sete al	     15419	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_17	IF_18
0x4004db3	          0x4589f5	                          mov r13d, r14d	     15419	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_17	IF_18
0x4004db6	        0x4183f501	                             xor r13d, 1	     15419	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_17	IF_18
0x4004dba	          0x4121c5	                           and r13d, eax	     15419	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_17	IF_18
0x4004dbd	      0xe85ed1ffff	                         call sym.get32s	     15420	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_17	CALL_8
0x4004dc2	          0x4889c5	                            mov rbp, rax	     15420	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_17	CALL_8
0x4004dc5	      0x448874241e	             mov byte [rsp + 0x1e], r14b	     15438	i386-dis.c	FUNCTION_25	IF_9
0x4004dca	      0x837c240400	                  cmp dword [rsp + 4], 0	     15440	i386-dis.c	FUNCTION_25	IF_9
0x4004dcf	     0xf85bf000000	                           jne 0x4004e94	     15440	i386-dis.c	FUNCTION_25	IF_9
0x4004dd5	          0x4584f6	                         test r14b, r14b	     15440	i386-dis.c	FUNCTION_25	IF_9
0x4004dd8	     0xf85a9000000	                           jne 0x4004e87	     15440	i386-dis.c	FUNCTION_25	IF_9
0x4004dde	      0xe9b1000000	                           jmp 0x4004e94	     15440	i386-dis.c	FUNCTION_25	IF_9
0x4004de3	    0x488b05000000	            mov rax, qword [0x04004dea] 	     15424	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4004dea	        0x488d7001	                      lea rsi, [rax + 1]	     15424	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4004dee	    0x488b3d000000	            mov rdi, qword [0x04004df5] 	     15424	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4004df5	        0x488b4768	            mov rax, qword [rdi + 0x68] 	     15424	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4004df9	          0x483b30	                    cmp rsi, qword [rax]	     15424	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4004dfc	            0x7605	                           jbe 0x4004e03	     15424	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4004dfe	      0xe8a8d0ffff	                     call sym.fetch_data	     15424	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4004e03	    0x488b05000000	            mov rax, qword [0x04004e0a] 	     15425	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4004e0a	        0x488d5001	                      lea rdx, [rax + 1]	     15425	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4004e0e	    0x488915000000	            mov qword [0x04004e15], rdx 	     15425	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4004e15	           0xfb600	                   movzx eax, byte [rax]	     15425	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4004e18	           0xfb6e8	                           movzx ebp, al	     15425	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4004e1b	      0x2580000000	                           and eax, 0x80	     15426	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_19
0x4004e20	    0x488d9500ffff	                  lea rdx, [rbp - 0x100]	     15427	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_19
0x4004e27	            0x84c0	                             test al, al	     15427	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_19
0x4004e29	        0x480f45ea	                         cmovne rbp, rdx	     15427	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_19
0x4004e2d	    0x833d00000000	               cmp dword [0x04004e34], 0	     15428	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_20
0x4004e34	     0xf8407080000	                            je 0x4005641	     15428	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_20
0x4004e3a	          0x4585ed	                         test r13d, r13d	     15428	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_20
0x4004e3d	           0xf9fc2	                                 setg dl	     15428	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_20
0x4004e40	          0x4889e8	                            mov rax, rbp	     15429	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_20
0x4004e43	          0x4489e9	                           mov ecx, r13d	     15429	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_20
0x4004e46	          0x48d3e0	                             shl rax, cl	     15429	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_20
0x4004e49	            0x84d2	                             test dl, dl	     15429	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_20
0x4004e4b	        0x480f45e8	                         cmovne rbp, rax	     15429	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_20
0x4004e4f	      0xe9ed070000	                           jmp 0x4005641	     15429	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	IF_20
0x4004e54	      0xe8c7d0ffff	                         call sym.get32s	     15432	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	CALL_9
0x4004e59	          0x4889c5	                            mov rbp, rax	     15432	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5	CALL_9
0x4004e5c	      0xe9e0070000	                           jmp 0x4005641	     15433	i386-dis.c	FUNCTION_25	IF_9	SWITCH_5
0x4004e61	      0x448874241e	             mov byte [rsp + 0x1e], r14b	     15438	i386-dis.c	FUNCTION_25	IF_9
0x4004e66	    0xc74424100000	               mov dword [rsp + 0x10], 0	     15441	i386-dis.c	FUNCTION_25	IF_9
0x4004e6e	    0x41bf01000000	                             mov r15d, 1	     15351	i386-dis.c	FUNCTION_25	IF_9
0x4004e74	    0x41bd00000000	                             mov r13d, 0	     15214	i386-dis.c	FUNCTION_25
0x4004e7a	      0xbd00000000	                              mov ebp, 0	     15212	i386-dis.c	FUNCTION_25
0x4004e7f	    0x41be01000000	                             mov r14d, 1	     15444	i386-dis.c	FUNCTION_25	IF_9
0x4004e85	            0xeb50	                           jmp 0x4004ed7	     15444	i386-dis.c	FUNCTION_25	IF_9
0x4004e87	    0x833d00000000	               cmp dword [0x04004e8e], 1	     15441	i386-dis.c	FUNCTION_25	IF_9
0x4004e8e	     0xf8439080000	                            je 0x40056cd	     15441	i386-dis.c	FUNCTION_25	IF_9
0x4004e94	          0x4585f6	                         test r14d, r14d	     15444	i386-dis.c	FUNCTION_25	IF_9
0x4004e97	            0x7425	                            je 0x4004ebe	     15444	i386-dis.c	FUNCTION_25	IF_9
0x4004e99	        0x8b442404	                mov eax, dword [rsp + 4]	     15444	i386-dis.c	FUNCTION_25	IF_9
0x4004e9d	         0xb442414	              or eax, dword [rsp + 0x14]	     15444	i386-dis.c	FUNCTION_25	IF_9
0x4004ea1	        0x410f95c6	                              setne r14b	     15444	i386-dis.c	FUNCTION_25	IF_9
0x4004ea5	        0x450fb6f6	                        movzx r14d, r14b	     15444	i386-dis.c	FUNCTION_25	IF_9
0x4004ea9	      0xc644241e01	                mov byte [rsp + 0x1e], 1	     15444	i386-dis.c	FUNCTION_25	IF_9
0x4004eae	    0xc74424100000	               mov dword [rsp + 0x10], 0	     15444	i386-dis.c	FUNCTION_25	IF_9
0x4004eb6	    0x41bf00000000	                             mov r15d, 0	     15444	i386-dis.c	FUNCTION_25	IF_9
0x4004ebc	            0xeb19	                           jmp 0x4004ed7	     15444	i386-dis.c	FUNCTION_25	IF_9
0x4004ebe	      0xc644241e00	                mov byte [rsp + 0x1e], 0	     15444	i386-dis.c	FUNCTION_25	IF_9
0x4004ec3	    0xc74424100000	               mov dword [rsp + 0x10], 0	     15444	i386-dis.c	FUNCTION_25	IF_9
0x4004ecb	    0x41bf00000000	                             mov r15d, 0	     15444	i386-dis.c	FUNCTION_25	IF_9
0x4004ed1	    0x41be00000000	                             mov r14d, 0	     15444	i386-dis.c	FUNCTION_25	IF_9
0x4004ed7	    0x803d00000000	                cmp byte [0x04004ede], 0	     15446	i386-dis.c	FUNCTION_25	IF_9	IF_21
0x4004ede	            0x756c	                           jne 0x4004f4c	     15446	i386-dis.c	FUNCTION_25	IF_9	IF_21
0x4004ee0	    0x833d00000000	               cmp dword [0x04004ee7], 0	     15447	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22
0x4004ee7	            0x7506	                           jne 0x4004eef	     15447	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22
0x4004ee9	        0x4183fc05	                             cmp r12d, 5	     15447	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22
0x4004eed	            0x755d	                           jne 0x4004f4c	     15447	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22
0x4004eef	          0x4489f0	                           mov eax, r14d	     15449	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	IF_23
0x4004ef2	          0x4409e8	                            or eax, r13d	     15449	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	IF_23
0x4004ef5	            0x740f	                            je 0x4004f06	     15449	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	IF_23
0x4004ef7	          0x4889ee	                            mov rsi, rbp	     15450	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	CALL_10
0x4004efa	      0xbf00000000	                              mov edi, 0	     15450	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	CALL_10
0x4004eff	      0xe896ccffff	             call sym.print_displacement	     15450	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	CALL_10
0x4004f04	            0xeb12	                           jmp 0x4004f18	     15450	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	CALL_10
0x4004f06	          0x4889ea	                            mov rdx, rbp	     15452	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	CALL_11
0x4004f09	      0xbe01000000	                              mov esi, 1	     15452	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	CALL_11
0x4004f0e	      0xbf00000000	                              mov edi, 0	     15452	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	CALL_11
0x4004f13	      0xe8ddcaffff	            call sym.print_operand_value	     15452	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	CALL_11
0x4004f18	      0xbf00000000	                              mov edi, 0	     15453	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	CALL_12
0x4004f1d	      0xe87bddffff	                        call sym.oappend	     15453	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	CALL_12
0x4004f22	          0x4585ed	                         test r13d, r13d	     15454	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	IF_24
0x4004f25	            0x7425	                            je 0x4004f4c	     15454	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	IF_24
0x4004f27	      0xbe01000000	                              mov esi, 1	     15456	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	IF_24	CALL_13
0x4004f2c	          0x4889ef	                            mov rdi, rbp	     15456	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	IF_24	CALL_13
0x4004f2f	      0xe8bcb2ffff	                         call sym.set_op	     15456	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	IF_24	CALL_13
0x4004f34	      0x837c240c00	                cmp dword [rsp + 0xc], 0	     15457	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	IF_24	CALL_14
0x4004f39	      0xbf00000000	                              mov edi, 0	     15457	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	IF_24	CALL_14
0x4004f3e	      0xb800000000	                              mov eax, 0	     15457	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	IF_24	CALL_14
0x4004f43	        0x480f44f8	                          cmove rdi, rax	     15457	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	IF_24	CALL_14
0x4004f47	      0xe851ddffff	                        call sym.oappend	     15457	i386-dis.c	FUNCTION_25	IF_9	IF_21	IF_22	IF_24	CALL_14
0x4004f4c	          0x4489e8	                           mov eax, r13d	     15461	i386-dis.c	FUNCTION_25	IF_9	IF_25
0x4004f4f	          0x4409f8	                            or eax, r15d	     15461	i386-dis.c	FUNCTION_25	IF_9	IF_25
0x4004f52	         0xb442404	                 or eax, dword [rsp + 4]	     15461	i386-dis.c	FUNCTION_25	IF_9	IF_25
0x4004f56	            0x7417	                            je 0x4004f6f	     15461	i386-dis.c	FUNCTION_25	IF_9	IF_25
0x4004f58	          0x8d43db	                   lea eax, [rbx - 0x25]	     15464	i386-dis.c	FUNCTION_25	IF_9	IF_25
0x4004f5b	          0x83f801	                              cmp eax, 1	     15464	i386-dis.c	FUNCTION_25	IF_9	IF_25
0x4004f5e	            0x760f	                           jbe 0x4004f6f	     15464	i386-dis.c	FUNCTION_25	IF_9	IF_25
0x4004f60	          0x83fb22	                           cmp ebx, 0x22	     15464	i386-dis.c	FUNCTION_25	IF_9	IF_25
0x4004f63	            0x740a	                            je 0x4004f6f	     15464	i386-dis.c	FUNCTION_25	IF_9	IF_25
0x4004f65	    0x810d00000000	            or dword [0x04004f6f], 0x400	     15465	i386-dis.c	FUNCTION_25	IF_9	IF_25
0x4004f6f	          0x4585f6	                         test r14d, r14d	     15467	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x4004f72	            0x7521	                           jne 0x4004f95	     15467	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x4004f74	     0xfb605000000	           movzx eax, byte [0x04004f7b] 	     15467	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x4004f7b	        0x8844241f	               mov byte [rsp + 0x1f], al	     15467	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x4004f7f	          0x4585ed	                         test r13d, r13d	     15467	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x4004f82	     0xf8488020000	                            je 0x4005210	     15467	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x4004f88	            0x84c0	                             test al, al	     15467	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x4004f8a	     0xf85cc060000	                           jne 0x400565c	     15467	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x4004f90	      0xe97b020000	                           jmp 0x4005210	     15467	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x4004f95	    0x488b05000000	            mov rax, qword [0x04004f9c] 	     15469	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x4004f9c	        0x488d5001	                      lea rdx, [rax + 1]	     15469	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x4004fa0	    0x488915000000	            mov qword [0x04004fa7], rdx 	     15469	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x4004fa7	     0xfb615000000	           movzx edx, byte [0x04004fae] 	     15469	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x4004fae	            0x8810	                      mov byte [rax], dl	     15469	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x4004fb0	     0xfb605000000	           movzx eax, byte [0x04004fb7] 	     15470	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_27
0x4004fb7	        0x8844241f	               mov byte [rsp + 0x1f], al	     15470	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_27
0x4004fbb	          0x4585ed	                         test r13d, r13d	     15470	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_27
0x4004fbe	            0x7429	                            je 0x4004fe9	     15470	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_27
0x4004fc0	            0x84c0	                             test al, al	     15470	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_27
0x4004fc2	            0x7425	                            je 0x4004fe9	     15470	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_27
0x4004fc4	      0xbe01000000	                              mov esi, 1	     15472	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_27	CALL_15
0x4004fc9	          0x4889ef	                            mov rdi, rbp	     15472	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_27	CALL_15
0x4004fcc	      0xe81fb2ffff	                         call sym.set_op	     15472	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_27	CALL_15
0x4004fd1	      0x837c240c00	                cmp dword [rsp + 0xc], 0	     15473	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_27	CALL_16
0x4004fd6	      0xbf00000000	                              mov edi, 0	     15473	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_27	CALL_16
0x4004fdb	      0xb800000000	                              mov eax, 0	     15473	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_27	CALL_16
0x4004fe0	        0x480f44f8	                          cmove rdi, rax	     15473	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_27	CALL_16
0x4004fe4	      0xe8b4dcffff	                        call sym.oappend	     15473	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_27	CALL_16
0x4004fe9	    0x488b05000000	            mov rax, qword [0x04004ff0] 	     15475	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x4004ff0	          0xc60000	                       mov byte [rax], 0	     15475	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x4004ff3	          0x4585ff	                         test r15d, r15d	     15476	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_28
0x4004ff6	            0x7438	                            je 0x4005030	     15476	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_28
0x4004ff8	        0x8b442408	                mov eax, dword [rsp + 8]	     15410	i386-dis.c	FUNCTION_25	IF_9
0x4004ffc	          0x4401e0	                           add eax, r12d	     15410	i386-dis.c	FUNCTION_25	IF_9
0x4004fff	    0x833d00000000	               cmp dword [0x04005006], 2	     15477	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_28	CALL_17
0x4005006	            0x7516	                           jne 0x400501e	     15477	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_28	CALL_17
0x4005008	      0x837c240c00	                cmp dword [rsp + 0xc], 0	     15477	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_28	CALL_17
0x400500d	            0x750f	                           jne 0x400501e	     15477	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_28	CALL_17
0x400500f	            0x4898	                                    cdqe	     15477	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_28	CALL_17
0x4005011	    0x488b15000000	            mov rdx, qword [0x04005018] 	     15477	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_28	CALL_17
0x4005018	        0x488b3cc2	            mov rdi, qword [rdx + rax*8]	     15477	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_28	CALL_17
0x400501c	            0xeb0d	                           jmp 0x400502b	     15477	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_28	CALL_17
0x400501e	            0x4898	                                    cdqe	     15477	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_28	CALL_17
0x4005020	    0x488b15000000	            mov rdx, qword [0x04005027] 	     15477	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_28	CALL_17
0x4005027	        0x488b3cc2	            mov rdi, qword [rdx + rax*8]	     15477	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_28	CALL_17
0x400502b	      0xe86ddcffff	                        call sym.oappend	     15477	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_28	CALL_17
0x4005030	      0x807c241e00	                cmp byte [rsp + 0x1e], 0	     15479	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29
0x4005035	     0xf8402010000	                            je 0x400513d	     15479	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29
0x400503b	        0x8b442404	                mov eax, dword [rsp + 4]	     15483	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30
0x400503f	         0xb442414	              or eax, dword [rsp + 0x14]	     15483	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30
0x4005043	        0x8b742410	            mov esi, dword [rsp + 0x10] 	     15483	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30
0x4005047	             0x9c6	                             or esi, eax	     15483	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30
0x4005049	            0x7513	                           jne 0x400505e	     15483	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30
0x400504b	          0x4585ff	                         test r15d, r15d	     15486	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30
0x400504e	     0xf84e9000000	                            je 0x400513d	     15486	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30
0x4005054	        0x4183fc04	                             cmp r12d, 4	     15486	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30
0x4005058	     0xf84df000000	                            je 0x400513d	     15486	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30
0x400505e	          0x4585ff	                         test r15d, r15d	     15488	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_31
0x4005061	            0x7507	                           jne 0x400506a	     15488	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_31
0x4005063	      0x807c241f00	                cmp byte [rsp + 0x1f], 0	     15488	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_31
0x4005068	            0x751f	                           jne 0x4005089	     15488	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_31
0x400506a	    0x488b05000000	            mov rax, qword [0x04005071] 	     15490	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_31
0x4005071	        0x488d5001	                      lea rdx, [rax + 1]	     15490	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_31
0x4005075	    0x488915000000	            mov qword [0x0400507c], rdx 	     15490	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_31
0x400507c	     0xfb615000000	           movzx edx, byte [0x04005083] 	     15490	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_31
0x4005083	            0x8810	                      mov byte [rax], dl	     15490	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_31
0x4005085	        0xc6400100	                   mov byte [rax + 1], 0	     15491	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_31
0x4005089	      0x837c240400	                  cmp dword [rsp + 4], 0	     15493	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_32
0x400508e	            0x7435	                            je 0x40050c5	     15493	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_32
0x4005090	    0x833d00000000	               cmp dword [0x04005097], 2	     15494	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_32	CALL_18
0x4005097	            0x7517	                           jne 0x40050b0	     15494	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_32	CALL_18
0x4005099	      0x837c240c00	                cmp dword [rsp + 0xc], 0	     15494	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_32	CALL_18
0x400509e	            0x7510	                           jne 0x40050b0	     15494	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_32	CALL_18
0x40050a0	      0x4863442418	         movsxd rax, dword [rsp + 0x18] 	     15494	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_32	CALL_18
0x40050a5	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	     15494	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_32	CALL_18
0x40050aa	        0x488b3cc1	            mov rdi, qword [rcx + rax*8]	     15494	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_32	CALL_18
0x40050ae	            0xeb0e	                           jmp 0x40050be	     15494	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_32	CALL_18
0x40050b0	      0x4863442418	         movsxd rax, dword [rsp + 0x18] 	     15494	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_32	CALL_18
0x40050b5	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	     15494	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_32	CALL_18
0x40050ba	        0x488b3cc6	            mov rdi, qword [rsi + rax*8]	     15494	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_32	CALL_18
0x40050be	      0xe8dadbffff	                        call sym.oappend	     15494	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_32	CALL_18
0x40050c3	            0xeb23	                           jmp 0x40050e8	     15494	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	IF_32	CALL_18
0x40050c5	    0x833d00000000	               cmp dword [0x040050cc], 2	     15497	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	ELSE_8	CALL_19
0x40050cc	            0x750e	                           jne 0x40050dc	     15497	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	ELSE_8	CALL_19
0x40050ce	    0x488b3d000000	            mov rdi, qword [0x040050d5] 	     15497	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	ELSE_8	CALL_19
0x40050d5	      0x837c240c00	                cmp dword [rsp + 0xc], 0	     15497	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	ELSE_8	CALL_19
0x40050da	            0x7407	                            je 0x40050e3	     15497	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	ELSE_8	CALL_19
0x40050dc	    0x488b3d000000	            mov rdi, qword [0x040050e3] 	     15497	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	ELSE_8	CALL_19
0x40050e3	      0xe8b5dbffff	                        call sym.oappend	     15497	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	ELSE_8	CALL_19
0x40050e8	    0x488b05000000	            mov rax, qword [0x040050ef] 	     15500	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30
0x40050ef	        0x488d5001	                      lea rdx, [rax + 1]	     15500	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30
0x40050f3	    0x488915000000	            mov qword [0x040050fa], rdx 	     15500	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30
0x40050fa	     0xfb615000000	           movzx edx, byte [0x04005101] 	     15500	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30
0x4005101	            0x8810	                      mov byte [rax], dl	     15500	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30
0x4005103	        0xc6400100	                   mov byte [rax + 1], 0	     15501	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30
0x4005107	    0x41b801000000	                              mov r8d, 1	        33	stdio2.h	FUNCTION_101	CALL_1
0x400510d	       0xfb64c2414	           movzx ecx, byte [rsp + 0x14] 	        33	stdio2.h	FUNCTION_101	CALL_1
0x4005112	          0x41d3e0	                             shl r8d, cl	        33	stdio2.h	FUNCTION_101	CALL_1
0x4005115	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_101	CALL_1
0x400511a	      0xba64000000	                           mov edx, 0x64	        33	stdio2.h	FUNCTION_101	CALL_1
0x400511f	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_101	CALL_1
0x4005124	      0xbf00000000	                              mov edi, 0	        33	stdio2.h	FUNCTION_101	CALL_1
0x4005129	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_101	CALL_1
0x400512e	      0xe800000000	                          call 0x4005133	        33	stdio2.h	FUNCTION_101	CALL_1
0x4005133	      0xbf00000000	                              mov edi, 0	     15503	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	CALL_20
0x4005138	      0xe860dbffff	                        call sym.oappend	     15503	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_29	IF_30	CALL_20
0x400513d	    0x803d00000000	                cmp byte [0x04005144], 0	     15506	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33
0x4005144	     0xf84a2000000	                            je 0x40051ec	     15506	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33
0x400514a	          0x4885ed	                           test rbp, rbp	     15507	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33
0x400514d	            0x7515	                           jne 0x4005164	     15507	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33
0x400514f	    0x833d00000000	               cmp dword [0x04005156], 0	     15507	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33
0x4005156	            0x7519	                           jne 0x4005171	     15507	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33
0x4005158	        0x4183fc05	                             cmp r12d, 5	     15507	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33
0x400515c	     0xf858a000000	                           jne 0x40051ec	     15507	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33
0x4005162	            0xeb0d	                           jmp 0x4005171	     15507	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33
0x4005164	          0x4889e8	                            mov rax, rbp	     15509	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	IF_34
0x4005167	          0x4585f6	                         test r14d, r14d	     15509	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	IF_34
0x400516a	            0x7405	                            je 0x4005171	     15509	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	IF_34
0x400516c	          0x4885ed	                           test rbp, rbp	     15509	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	IF_34
0x400516f	            0x781b	                            js 0x400518c	     15509	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	IF_34
0x4005171	    0x488b05000000	            mov rax, qword [0x04005178] 	     15511	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	IF_34
0x4005178	        0x488d5001	                      lea rdx, [rax + 1]	     15511	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	IF_34
0x400517c	    0x488915000000	            mov qword [0x04005183], rdx 	     15511	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	IF_34
0x4005183	          0xc6002b	                    mov byte [rax], 0x2b	     15511	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	IF_34
0x4005186	        0xc6400100	                   mov byte [rax + 1], 0	     15512	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	IF_34
0x400518a	            0xeb30	                           jmp 0x40051bc	     15512	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	IF_34
0x400518c	    0x833d00000000	               cmp dword [0x04005193], 1	     15514	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	ELSE_9	IF_35
0x4005193	            0x7427	                            je 0x40051bc	     15514	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	ELSE_9	IF_35
0x4005195	          0x4889e9	                            mov rcx, rbp	     15514	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	ELSE_9	IF_35
0x4005198	          0x4801e9	                            add rcx, rbp	     15514	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	ELSE_9	IF_35
0x400519b	            0x741f	                            je 0x40051bc	     15514	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	ELSE_9	IF_35
0x400519d	    0x488b15000000	            mov rdx, qword [0x040051a4] 	     15516	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	ELSE_9	IF_35
0x40051a4	        0x488d4a01	                      lea rcx, [rdx + 1]	     15516	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	ELSE_9	IF_35
0x40051a8	    0x48890d000000	            mov qword [0x040051af], rcx 	     15516	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	ELSE_9	IF_35
0x40051af	          0xc6022d	                    mov byte [rdx], 0x2d	     15516	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	ELSE_9	IF_35
0x40051b2	        0xc6420100	                   mov byte [rdx + 1], 0	     15517	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	ELSE_9	IF_35
0x40051b6	          0x48f7d8	                                 neg rax	     15518	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	ELSE_9	IF_35
0x40051b9	          0x4889c5	                            mov rbp, rax	     15518	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	ELSE_9	IF_35
0x40051bc	          0x4585f6	                         test r14d, r14d	     15521	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	IF_36
0x40051bf	            0x740f	                            je 0x40051d0	     15521	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	IF_36
0x40051c1	          0x4889ee	                            mov rsi, rbp	     15522	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	CALL_21
0x40051c4	      0xbf00000000	                              mov edi, 0	     15522	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	CALL_21
0x40051c9	      0xe8ccc9ffff	             call sym.print_displacement	     15522	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	CALL_21
0x40051ce	            0xeb12	                           jmp 0x40051e2	     15522	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	CALL_21
0x40051d0	          0x4889ea	                            mov rdx, rbp	     15524	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	CALL_22
0x40051d3	      0xbe01000000	                              mov esi, 1	     15524	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	CALL_22
0x40051d8	      0xbf00000000	                              mov edi, 0	     15524	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	CALL_22
0x40051dd	      0xe813c8ffff	            call sym.print_operand_value	     15524	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	CALL_22
0x40051e2	      0xbf00000000	                              mov edi, 0	     15525	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	CALL_23
0x40051e7	      0xe8b1daffff	                        call sym.oappend	     15525	i386-dis.c	FUNCTION_25	IF_9	IF_26	IF_33	CALL_23
0x40051ec	    0x488b05000000	            mov rax, qword [0x040051f3] 	     15528	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x40051f3	        0x488d5001	                      lea rdx, [rax + 1]	     15528	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x40051f7	    0x488915000000	            mov qword [0x040051fe], rdx 	     15528	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x40051fe	     0xfb615000000	           movzx edx, byte [0x04005205] 	     15528	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x4005205	            0x8810	                      mov byte [rax], dl	     15528	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x4005207	        0xc6400100	                   mov byte [rax + 1], 0	     15529	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x400520b	      0xe9bf020000	                           jmp 0x40054cf	     15529	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x4005210	      0x807c241f00	                cmp byte [rsp + 0x1f], 0	     15531	i386-dis.c	FUNCTION_25	IF_9	ELSE_11	IF_37
0x4005215	     0xf84b4020000	                            je 0x40054cf	     15531	i386-dis.c	FUNCTION_25	IF_9	ELSE_11	IF_37
0x400521b	    0x833d00000000	               cmp dword [0x04005222], 0	     15533	i386-dis.c	FUNCTION_25	IF_9	ELSE_11	IF_37	IF_38
0x4005222	            0x750a	                           jne 0x400522e	     15533	i386-dis.c	FUNCTION_25	IF_9	ELSE_11	IF_37	IF_38
0x4005224	        0x4183fc05	                             cmp r12d, 5	     15533	i386-dis.c	FUNCTION_25	IF_9	ELSE_11	IF_37	IF_38
0x4005228	     0xf85a1020000	                           jne 0x40054cf	     15533	i386-dis.c	FUNCTION_25	IF_9	ELSE_11	IF_37	IF_38
0x400522e	    0x833d00000000	               cmp dword [0x04005235], 0	     15535	i386-dis.c	FUNCTION_25	IF_9	ELSE_11	IF_37	IF_38	IF_39
0x4005235	            0x751a	                           jne 0x4005251	     15535	i386-dis.c	FUNCTION_25	IF_9	ELSE_11	IF_37	IF_38	IF_39
0x4005237	    0x488b05000000	            mov rax, qword [0x0400523e] 	     15537	i386-dis.c	FUNCTION_25	IF_9	ELSE_11	IF_37	IF_38	IF_39	CALL_24
0x400523e	        0x488b7818	            mov rdi, qword [rax + 0x18] 	     15537	i386-dis.c	FUNCTION_25	IF_9	ELSE_11	IF_37	IF_38	IF_39	CALL_24
0x4005242	      0xe856daffff	                        call sym.oappend	     15537	i386-dis.c	FUNCTION_25	IF_9	ELSE_11	IF_37	IF_38	IF_39	CALL_24
0x4005247	      0xbf00000000	                              mov edi, 0	     15538	i386-dis.c	FUNCTION_25	IF_9	ELSE_11	IF_37	IF_38	IF_39	CALL_25
0x400524c	      0xe84cdaffff	                        call sym.oappend	     15538	i386-dis.c	FUNCTION_25	IF_9	ELSE_11	IF_37	IF_38	IF_39	CALL_25
0x4005251	          0x4889ea	                            mov rdx, rbp	     15540	i386-dis.c	FUNCTION_25	IF_9	ELSE_11	IF_37	IF_38	CALL_26
0x4005254	      0xbe01000000	                              mov esi, 1	     15540	i386-dis.c	FUNCTION_25	IF_9	ELSE_11	IF_37	IF_38	CALL_26
0x4005259	      0xbf00000000	                              mov edi, 0	     15540	i386-dis.c	FUNCTION_25	IF_9	ELSE_11	IF_37	IF_38	CALL_26
0x400525e	      0xe892c7ffff	            call sym.print_operand_value	     15540	i386-dis.c	FUNCTION_25	IF_9	ELSE_11	IF_37	IF_38	CALL_26
0x4005263	      0xbf00000000	                              mov edi, 0	     15541	i386-dis.c	FUNCTION_25	IF_9	ELSE_11	IF_37	IF_38	CALL_27
0x4005268	      0xe830daffff	                        call sym.oappend	     15541	i386-dis.c	FUNCTION_25	IF_9	ELSE_11	IF_37	IF_38	CALL_27
0x400526d	      0xe95d020000	                           jmp 0x40054cf	     15541	i386-dis.c	FUNCTION_25	IF_9	ELSE_11	IF_37	IF_38	CALL_27
0x4005272	    0x8b0500000000	            mov eax, dword [0x04005278] 	     15548	i386-dis.c	FUNCTION_25	ELSE_12
0x4005278	      0x2500040000	                          and eax, 0x400	     15548	i386-dis.c	FUNCTION_25	ELSE_12
0x400527d	     0x90500000000	              or dword [0x04005283], eax	     15548	i386-dis.c	FUNCTION_25	ELSE_12
0x4005283	    0x8b0500000000	            mov eax, dword [0x04005289] 	     15549	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x4005289	          0x83f801	                              cmp eax, 1	     15549	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x400528c	            0x7442	                            je 0x40052d0	     15549	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x400528e	          0x83f802	                              cmp eax, 2	     15549	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x4005291	     0xf84a3000000	                            je 0x400533a	     15549	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x4005297	      0xbd00000000	                              mov ebp, 0	     15212	i386-dis.c	FUNCTION_25
0x400529c	            0x85c0	                           test eax, eax	     15549	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x400529e	     0xf85b2000000	                           jne 0x4005356	     15549	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x40052a4	    0x833d00000000	               cmp dword [0x040052ab], 6	     15552	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_40
0x40052ab	     0xf85cb030000	                           jne 0x400567c	     15552	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_40
0x40052b1	      0xe8daccffff	                          call sym.get16	     15554	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_40	CALL_28
0x40052b6	          0x4863e8	                         movsxd rbp, eax	     15554	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_40	CALL_28
0x40052b9	      0x2500800000	                         and eax, 0x8000	     15555	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_40	IF_41
0x40052be	    0x488d950000ff	                lea rdx, [rbp - 0x10000]	     15556	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_40	IF_41
0x40052c5	            0x85c0	                           test eax, eax	     15556	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_40	IF_41
0x40052c7	        0x480f45ea	                         cmovne rbp, rdx	     15556	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_40	IF_41
0x40052cb	      0xe986000000	                           jmp 0x4005356	     15556	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_40	IF_41
0x40052d0	    0x488b05000000	            mov rax, qword [0x040052d7] 	     15560	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x40052d7	        0x488d7001	                      lea rsi, [rax + 1]	     15560	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x40052db	    0x488b3d000000	            mov rdi, qword [0x040052e2] 	     15560	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x40052e2	        0x488b4768	            mov rax, qword [rdi + 0x68] 	     15560	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x40052e6	          0x483b30	                    cmp rsi, qword [rax]	     15560	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x40052e9	            0x7605	                           jbe 0x40052f0	     15560	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x40052eb	      0xe8bbcbffff	                     call sym.fetch_data	     15560	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x40052f0	    0x488b05000000	            mov rax, qword [0x040052f7] 	     15561	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x40052f7	        0x488d5001	                      lea rdx, [rax + 1]	     15561	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x40052fb	    0x488915000000	            mov qword [0x04005302], rdx 	     15561	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x4005302	           0xfb600	                   movzx eax, byte [rax]	     15561	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x4005305	           0xfb6e8	                           movzx ebp, al	     15561	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6
0x4005308	      0x2580000000	                           and eax, 0x80	     15562	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_42
0x400530d	    0x488d9500ffff	                  lea rdx, [rbp - 0x100]	     15563	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_42
0x4005314	            0x84c0	                             test al, al	     15563	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_42
0x4005316	        0x480f45ea	                         cmovne rbp, rdx	     15563	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_42
0x400531a	    0x833d00000000	               cmp dword [0x04005321], 0	     15564	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_43
0x4005321	            0x7433	                            je 0x4005356	     15564	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_43
0x4005323	          0x4585ed	                         test r13d, r13d	     15564	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_43
0x4005326	           0xf9fc2	                                 setg dl	     15564	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_43
0x4005329	          0x4889e8	                            mov rax, rbp	     15565	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_43
0x400532c	          0x4489e9	                           mov ecx, r13d	     15565	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_43
0x400532f	          0x48d3e0	                             shl rax, cl	     15565	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_43
0x4005332	            0x84d2	                             test dl, dl	     15565	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_43
0x4005334	        0x480f45e8	                         cmovne rbp, rax	     15565	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_43
0x4005338	            0xeb1c	                           jmp 0x4005356	     15565	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_43
0x400533a	      0xe851ccffff	                          call sym.get16	     15568	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	CALL_29
0x400533f	          0x4863e8	                         movsxd rbp, eax	     15568	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	CALL_29
0x4005342	      0x2500800000	                         and eax, 0x8000	     15569	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_44
0x4005347	    0x488d950000ff	                lea rdx, [rbp - 0x10000]	     15570	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_44
0x400534e	            0x85c0	                           test eax, eax	     15570	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_44
0x4005350	        0x480f45ea	                         cmovne rbp, rdx	     15570	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_44
0x4005354	            0xeb00	                           jmp 0x4005356	     15570	i386-dis.c	FUNCTION_25	ELSE_12	SWITCH_6	IF_44
0x4005356	    0x803d00000000	                cmp byte [0x0400535d], 0	     15574	i386-dis.c	FUNCTION_25	ELSE_12	IF_45
0x400535d	            0x752d	                           jne 0x400538c	     15574	i386-dis.c	FUNCTION_25	ELSE_12	IF_45
0x400535f	    0x833d00000000	               cmp dword [0x04005366], 0	     15575	i386-dis.c	FUNCTION_25	ELSE_12	IF_45	IF_46
0x4005366	            0x750d	                           jne 0x4005375	     15575	i386-dis.c	FUNCTION_25	ELSE_12	IF_45	IF_46
0x4005368	    0x833d00000000	               cmp dword [0x0400536f], 6	     15575	i386-dis.c	FUNCTION_25	ELSE_12	IF_45	IF_46
0x400536f	     0xf8515030000	                           jne 0x400568a	     15575	i386-dis.c	FUNCTION_25	ELSE_12	IF_45	IF_46
0x4005375	          0x4889ee	                            mov rsi, rbp	     15577	i386-dis.c	FUNCTION_25	ELSE_12	IF_45	IF_46	CALL_30
0x4005378	      0xbf00000000	                              mov edi, 0	     15577	i386-dis.c	FUNCTION_25	ELSE_12	IF_45	IF_46	CALL_30
0x400537d	      0xe818c8ffff	             call sym.print_displacement	     15577	i386-dis.c	FUNCTION_25	ELSE_12	IF_45	IF_46	CALL_30
0x4005382	      0xbf00000000	                              mov edi, 0	     15578	i386-dis.c	FUNCTION_25	ELSE_12	IF_45	IF_46	CALL_31
0x4005387	      0xe811d9ffff	                        call sym.oappend	     15578	i386-dis.c	FUNCTION_25	ELSE_12	IF_45	IF_46	CALL_31
0x400538c	    0x448b2d000000	           mov r13d, dword [0x04005393] 	     15581	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x4005393	          0x4585ed	                         test r13d, r13d	     15581	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x4005396	            0x7407	                            je 0x400539f	     15581	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x4005398	            0xeb15	                           jmp 0x40053af	     15581	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x400539a	      0xbd00000000	                              mov ebp, 0	     15212	i386-dis.c	FUNCTION_25
0x400539f	    0x833d00000000	               cmp dword [0x040053a6], 6	     15581	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x40053a6	     0xf84db000000	                            je 0x4005487	     15581	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x40053ac	          0x4589e5	                          mov r13d, r12d	     15581	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x40053af	    0x488b05000000	            mov rax, qword [0x040053b6] 	     15583	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x40053b6	        0x488d5001	                      lea rdx, [rax + 1]	     15583	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x40053ba	    0x488915000000	            mov qword [0x040053c1], rdx 	     15583	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x40053c1	     0xfb615000000	           movzx edx, byte [0x040053c8] 	     15583	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x40053c8	            0x8810	                      mov byte [rax], dl	     15583	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x40053ca	        0xc6400100	                   mov byte [rax + 1], 0	     15584	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x40053ce	    0x448b25000000	           mov r12d, dword [0x040053d5] 	     15585	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	CALL_32
0x40053d5	          0x4963d4	                        movsxd rdx, r12d	     15585	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	CALL_32
0x40053d8	    0x488b05000000	            mov rax, qword [0x040053df] 	     15585	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	CALL_32
0x40053df	        0x488b3cd0	            mov rdi, qword [rax + rdx*8]	     15585	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	CALL_32
0x40053e3	      0xe8b5d8ffff	                        call sym.oappend	     15585	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	CALL_32
0x40053e8	    0x803d00000000	                cmp byte [0x040053ef], 0	     15586	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48
0x40053ef	            0x7475	                            je 0x4005466	     15586	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48
0x40053f1	          0x4585ed	                         test r13d, r13d	     15587	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48
0x40053f4	           0xf95c2	                                setne dl	     15587	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48
0x40053f7	          0x4885ed	                           test rbp, rbp	     15587	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48
0x40053fa	           0xf95c0	                                setne al	     15587	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48
0x40053fd	             0x8c2	                               or dl, al	     15587	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48
0x40053ff	            0x7506	                           jne 0x4005407	     15587	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48
0x4005401	        0x4183fc06	                             cmp r12d, 6	     15587	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48
0x4005405	            0x755f	                           jne 0x4005466	     15587	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48
0x4005407	          0x4889e8	                            mov rax, rbp	     15589	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	IF_49
0x400540a	          0x4885ed	                           test rbp, rbp	     15589	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	IF_49
0x400540d	            0x781b	                            js 0x400542a	     15589	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	IF_49
0x400540f	    0x488b05000000	            mov rax, qword [0x04005416] 	     15591	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	IF_49
0x4005416	        0x488d5001	                      lea rdx, [rax + 1]	     15591	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	IF_49
0x400541a	    0x488915000000	            mov qword [0x04005421], rdx 	     15591	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	IF_49
0x4005421	          0xc6002b	                    mov byte [rax], 0x2b	     15591	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	IF_49
0x4005424	        0xc6400100	                   mov byte [rax + 1], 0	     15592	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	IF_49
0x4005428	            0xeb25	                           jmp 0x400544f	     15592	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	IF_49
0x400542a	        0x4183fd01	                             cmp r13d, 1	     15594	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	ELSE_13	IF_50
0x400542e	            0x741f	                            je 0x400544f	     15594	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	ELSE_13	IF_50
0x4005430	    0x488b15000000	            mov rdx, qword [0x04005437] 	     15596	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	ELSE_13	IF_50
0x4005437	        0x488d4a01	                      lea rcx, [rdx + 1]	     15596	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	ELSE_13	IF_50
0x400543b	    0x48890d000000	            mov qword [0x04005442], rcx 	     15596	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	ELSE_13	IF_50
0x4005442	          0xc6022d	                    mov byte [rdx], 0x2d	     15596	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	ELSE_13	IF_50
0x4005445	        0xc6420100	                   mov byte [rdx + 1], 0	     15597	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	ELSE_13	IF_50
0x4005449	          0x48f7d8	                                 neg rax	     15598	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	ELSE_13	IF_50
0x400544c	          0x4889c5	                            mov rbp, rax	     15598	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	ELSE_13	IF_50
0x400544f	          0x4889ee	                            mov rsi, rbp	     15601	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	CALL_33
0x4005452	      0xbf00000000	                              mov edi, 0	     15601	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	CALL_33
0x4005457	      0xe83ec7ffff	             call sym.print_displacement	     15601	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	CALL_33
0x400545c	      0xbf00000000	                              mov edi, 0	     15602	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	CALL_34
0x4005461	      0xe837d8ffff	                        call sym.oappend	     15602	i386-dis.c	FUNCTION_25	ELSE_12	IF_47	IF_48	CALL_34
0x4005466	    0x488b05000000	            mov rax, qword [0x0400546d] 	     15605	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x400546d	        0x488d5001	                      lea rdx, [rax + 1]	     15605	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x4005471	    0x488915000000	            mov qword [0x04005478], rdx 	     15605	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x4005478	     0xfb615000000	           movzx edx, byte [0x0400547f] 	     15605	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x400547f	            0x8810	                      mov byte [rax], dl	     15605	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x4005481	        0xc6400100	                   mov byte [rax + 1], 0	     15606	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x4005485	            0xeb48	                           jmp 0x40054cf	     15606	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x4005487	    0x803d00000000	                cmp byte [0x0400548e], 0	     15608	i386-dis.c	FUNCTION_25	ELSE_12	ELSE_14	IF_51
0x400548e	            0x743f	                            je 0x40054cf	     15608	i386-dis.c	FUNCTION_25	ELSE_12	ELSE_14	IF_51
0x4005490	    0x833d00000000	               cmp dword [0x04005497], 0	     15610	i386-dis.c	FUNCTION_25	ELSE_12	ELSE_14	IF_51	IF_52
0x4005497	            0x751a	                           jne 0x40054b3	     15610	i386-dis.c	FUNCTION_25	ELSE_12	ELSE_14	IF_51	IF_52
0x4005499	    0x488b05000000	            mov rax, qword [0x040054a0] 	     15612	i386-dis.c	FUNCTION_25	ELSE_12	ELSE_14	IF_51	IF_52	CALL_35
0x40054a0	        0x488b7818	            mov rdi, qword [rax + 0x18] 	     15612	i386-dis.c	FUNCTION_25	ELSE_12	ELSE_14	IF_51	IF_52	CALL_35
0x40054a4	      0xe8f4d7ffff	                        call sym.oappend	     15612	i386-dis.c	FUNCTION_25	ELSE_12	ELSE_14	IF_51	IF_52	CALL_35
0x40054a9	      0xbf00000000	                              mov edi, 0	     15613	i386-dis.c	FUNCTION_25	ELSE_12	ELSE_14	IF_51	IF_52	CALL_36
0x40054ae	      0xe8ead7ffff	                        call sym.oappend	     15613	i386-dis.c	FUNCTION_25	ELSE_12	ELSE_14	IF_51	IF_52	CALL_36
0x40054b3	           0xfb7d5	                           movzx edx, bp	     15615	i386-dis.c	FUNCTION_25	ELSE_12	ELSE_14	IF_51	CALL_37
0x40054b6	      0xbe01000000	                              mov esi, 1	     15615	i386-dis.c	FUNCTION_25	ELSE_12	ELSE_14	IF_51	CALL_37
0x40054bb	      0xbf00000000	                              mov edi, 0	     15615	i386-dis.c	FUNCTION_25	ELSE_12	ELSE_14	IF_51	CALL_37
0x40054c0	      0xe830c5ffff	            call sym.print_operand_value	     15615	i386-dis.c	FUNCTION_25	ELSE_12	ELSE_14	IF_51	CALL_37
0x40054c5	      0xbf00000000	                              mov edi, 0	     15616	i386-dis.c	FUNCTION_25	ELSE_12	ELSE_14	IF_51	CALL_38
0x40054ca	      0xe8ced7ffff	                        call sym.oappend	     15616	i386-dis.c	FUNCTION_25	ELSE_12	ELSE_14	IF_51	CALL_38
0x40054cf	    0x833d00000000	               cmp dword [0x040054d6], 0	     15619	i386-dis.c	FUNCTION_25	IF_53
0x40054d6	     0xf840a020000	                            je 0x40056e6	     15619	i386-dis.c	FUNCTION_25	IF_53
0x40054dc	    0x833d00000000	               cmp dword [0x040054e3], 0	     15619	i386-dis.c	FUNCTION_25	IF_53
0x40054e3	     0xf84fd010000	                            je 0x40056e6	     15619	i386-dis.c	FUNCTION_25	IF_53
0x40054e9	          0x8d43ee	                   lea eax, [rbx - 0x12]	     15621	i386-dis.c	FUNCTION_25	IF_53
0x40054ec	          0x83fb0d	                            cmp ebx, 0xd	     15622	i386-dis.c	FUNCTION_25	IF_53
0x40054ef	            0x7409	                            je 0x40054fa	     15622	i386-dis.c	FUNCTION_25	IF_53
0x40054f1	          0x83f801	                              cmp eax, 1	     15622	i386-dis.c	FUNCTION_25	IF_53
0x40054f4	     0xf87ec010000	                            ja 0x40056e6	     15622	i386-dis.c	FUNCTION_25	IF_53
0x40054fa	    0x833d00000000	               cmp dword [0x04005501], 0	     15624	i386-dis.c	FUNCTION_25	IF_53	IF_54
0x4005501	            0x7505	                           jne 0x4005508	     15624	i386-dis.c	FUNCTION_25	IF_53	IF_54
0x4005503	          0x83f801	                              cmp eax, 1	     15626	i386-dis.c	FUNCTION_25	IF_53	IF_54
0x4005506	            0x774d	                            ja 0x4005555	     15626	i386-dis.c	FUNCTION_25	IF_53	IF_54
0x4005508	    0x8b0500000000	            mov eax, dword [0x0400550e] 	     15628	i386-dis.c	FUNCTION_25	IF_53	IF_54	SWITCH_7
0x400550e	      0x3d00010000	                          cmp eax, 0x100	     15628	i386-dis.c	FUNCTION_25	IF_53	IF_54	SWITCH_7
0x4005513	            0x741d	                            je 0x4005532	     15628	i386-dis.c	FUNCTION_25	IF_53	IF_54	SWITCH_7
0x4005515	      0x3d00020000	                          cmp eax, 0x200	     15628	i386-dis.c	FUNCTION_25	IF_53	IF_54	SWITCH_7
0x400551a	            0x7425	                            je 0x4005541	     15628	i386-dis.c	FUNCTION_25	IF_53	IF_54	SWITCH_7
0x400551c	      0x3d80000000	                           cmp eax, 0x80	     15628	i386-dis.c	FUNCTION_25	IF_53	IF_54	SWITCH_7
0x4005521	            0x752d	                           jne 0x4005550	     15628	i386-dis.c	FUNCTION_25	IF_53	IF_54	SWITCH_7
0x4005523	      0xbf00000000	                              mov edi, 0	     15631	i386-dis.c	FUNCTION_25	IF_53	IF_54	SWITCH_7	CALL_39
0x4005528	      0xe870d7ffff	                        call sym.oappend	     15631	i386-dis.c	FUNCTION_25	IF_53	IF_54	SWITCH_7	CALL_39
0x400552d	      0xe9b4010000	                           jmp 0x40056e6	     15632	i386-dis.c	FUNCTION_25	IF_53	IF_54	SWITCH_7
0x4005532	      0xbf00000000	                              mov edi, 0	     15634	i386-dis.c	FUNCTION_25	IF_53	IF_54	SWITCH_7	CALL_40
0x4005537	      0xe861d7ffff	                        call sym.oappend	     15634	i386-dis.c	FUNCTION_25	IF_53	IF_54	SWITCH_7	CALL_40
0x400553c	      0xe9a5010000	                           jmp 0x40056e6	     15635	i386-dis.c	FUNCTION_25	IF_53	IF_54	SWITCH_7
0x4005541	      0xbf00000000	                              mov edi, 0	     15637	i386-dis.c	FUNCTION_25	IF_53	IF_54	SWITCH_7	CALL_41
0x4005546	      0xe852d7ffff	                        call sym.oappend	     15637	i386-dis.c	FUNCTION_25	IF_53	IF_54	SWITCH_7	CALL_41
0x400554b	      0xe996010000	                           jmp 0x40056e6	     15638	i386-dis.c	FUNCTION_25	IF_53	IF_54	SWITCH_7
0x4005550	      0xe800000000	                          call 0x4005555	     15640	i386-dis.c	FUNCTION_25	IF_53	IF_54	SWITCH_7	CALL_42
0x4005555	    0x8b0500000000	            mov eax, dword [0x0400555b] 	     15645	i386-dis.c	FUNCTION_25	IF_53	ELSE_15	SWITCH_8
0x400555b	      0x3d00010000	                          cmp eax, 0x100	     15645	i386-dis.c	FUNCTION_25	IF_53	ELSE_15	SWITCH_8
0x4005560	            0x741d	                            je 0x400557f	     15645	i386-dis.c	FUNCTION_25	IF_53	ELSE_15	SWITCH_8
0x4005562	      0x3d00020000	                          cmp eax, 0x200	     15645	i386-dis.c	FUNCTION_25	IF_53	ELSE_15	SWITCH_8
0x4005567	            0x7425	                            je 0x400558e	     15645	i386-dis.c	FUNCTION_25	IF_53	ELSE_15	SWITCH_8
0x4005569	      0x3d80000000	                           cmp eax, 0x80	     15645	i386-dis.c	FUNCTION_25	IF_53	ELSE_15	SWITCH_8
0x400556e	            0x752d	                           jne 0x400559d	     15645	i386-dis.c	FUNCTION_25	IF_53	ELSE_15	SWITCH_8
0x4005570	      0xbf00000000	                              mov edi, 0	     15648	i386-dis.c	FUNCTION_25	IF_53	ELSE_15	SWITCH_8	CALL_43
0x4005575	      0xe823d7ffff	                        call sym.oappend	     15648	i386-dis.c	FUNCTION_25	IF_53	ELSE_15	SWITCH_8	CALL_43
0x400557a	      0xe967010000	                           jmp 0x40056e6	     15649	i386-dis.c	FUNCTION_25	IF_53	ELSE_15	SWITCH_8
0x400557f	      0xbf00000000	                              mov edi, 0	     15651	i386-dis.c	FUNCTION_25	IF_53	ELSE_15	SWITCH_8	CALL_44
0x4005584	      0xe814d7ffff	                        call sym.oappend	     15651	i386-dis.c	FUNCTION_25	IF_53	ELSE_15	SWITCH_8	CALL_44
0x4005589	      0xe958010000	                           jmp 0x40056e6	     15652	i386-dis.c	FUNCTION_25	IF_53	ELSE_15	SWITCH_8
0x400558e	      0xbf00000000	                              mov edi, 0	     15654	i386-dis.c	FUNCTION_25	IF_53	ELSE_15	SWITCH_8	CALL_45
0x4005593	      0xe805d7ffff	                        call sym.oappend	     15654	i386-dis.c	FUNCTION_25	IF_53	ELSE_15	SWITCH_8	CALL_45
0x4005598	      0xe949010000	                           jmp 0x40056e6	     15655	i386-dis.c	FUNCTION_25	IF_53	ELSE_15	SWITCH_8
0x400559d	      0xe800000000	                          call 0x40055a2	     15657	i386-dis.c	FUNCTION_25	IF_53	ELSE_15	SWITCH_8	CALL_46
0x40055a2	    0xc74424080800	                  mov dword [rsp + 8], 8	     15213	i386-dis.c	FUNCTION_25
0x40055aa	    0x41bd00000000	                             mov r13d, 0	     15325	i386-dis.c	FUNCTION_25	ELSE_4
0x40055b0	    0x833d00000000	               cmp dword [0x040055b7], 0	     15217	i386-dis.c	FUNCTION_25	IF_1
0x40055b7	     0xf84caf5ffff	                            je 0x4004b87	     15217	i386-dis.c	FUNCTION_25	IF_1
0x40055bd	      0xe9b6f4ffff	                           jmp 0x4004a78	     15217	i386-dis.c	FUNCTION_25	IF_1
0x40055c2	    0x833d00000000	               cmp dword [0x040055c9], 0	     15217	i386-dis.c	FUNCTION_25	IF_1
0x40055c9	     0xf85a1f4ffff	                           jne 0x4004a70	     15217	i386-dis.c	FUNCTION_25	IF_1
0x40055cf	    0xc74424080000	                  mov dword [rsp + 8], 0	     15213	i386-dis.c	FUNCTION_25
0x40055d7	    0x41bd00000000	                             mov r13d, 0	     15325	i386-dis.c	FUNCTION_25	ELSE_4
0x40055dd	      0xe9acf5ffff	                           jmp 0x4004b8e	     15325	i386-dis.c	FUNCTION_25	ELSE_4
0x40055e2	          0x8d43f8	                      lea eax, [rbx - 8]	     15228	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x40055e5	          0x83f837	                           cmp eax, 0x37	     15228	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x40055e8	     0xf8714f5ffff	                            ja 0x4004b02	     15228	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x40055ee	            0x89c0	                            mov eax, eax	     15228	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x40055f0	    0xff24c5000000	                       jmp qword [rax*8]	     15228	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x40055f7	    0x41bd03000000	                             mov r13d, 3	     15286	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x40055fd	      0xe94bf5ffff	                           jmp 0x4004b4d	     15286	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x4005602	    0x8b0500000000	            mov eax, dword [0x04005608] 	     15260	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4005608	      0x3d00010000	                          cmp eax, 0x100	     15260	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x400560d	     0xf8414f5ffff	                            je 0x4004b27	     15260	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4005613	      0x3d00020000	                          cmp eax, 0x200	     15260	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4005618	     0xf848e000000	                            je 0x40056ac	     15260	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x400561e	      0x3d80000000	                           cmp eax, 0x80	     15260	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4005623	     0xf85d4f4ffff	                           jne 0x4004afd	     15260	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x4005629	      0xe905f5ffff	                           jmp 0x4004b33	     15260	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x400562e	    0x41bd04000000	                             mov r13d, 4	     15313	i386-dis.c	FUNCTION_25	IF_1	IF_4
0x4005634	            0x85c9	                           test ecx, ecx	     15313	i386-dis.c	FUNCTION_25	IF_1	IF_4
0x4005636	     0xf8447f5ffff	                            je 0x4004b83	     15313	i386-dis.c	FUNCTION_25	IF_1	IF_4
0x400563c	      0xe90cf5ffff	                           jmp 0x4004b4d	     15313	i386-dis.c	FUNCTION_25	IF_1	IF_4
0x4005641	      0x448874241e	             mov byte [rsp + 0x1e], r14b	     15438	i386-dis.c	FUNCTION_25	IF_9
0x4005646	    0x41bf01000000	                             mov r15d, 1	     15438	i386-dis.c	FUNCTION_25	IF_9
0x400564c	    0x41bd00000000	                             mov r13d, 0	     15438	i386-dis.c	FUNCTION_25	IF_9
0x4005652	    0xc74424100000	               mov dword [rsp + 0x10], 0	     15441	i386-dis.c	FUNCTION_25	IF_9
0x400565a	            0xeb7f	                           jmp 0x40056db	     15441	i386-dis.c	FUNCTION_25	IF_9
0x400565c	    0x488b05000000	            mov rax, qword [0x04005663] 	     15469	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x4005663	        0x488d5001	                      lea rdx, [rax + 1]	     15469	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x4005667	    0x488915000000	            mov qword [0x0400566e], rdx 	     15469	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x400566e	     0xfb615000000	           movzx edx, byte [0x04005675] 	     15469	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x4005675	            0x8810	                      mov byte [rax], dl	     15469	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x4005677	      0xe948f9ffff	                           jmp 0x4004fc4	     15469	i386-dis.c	FUNCTION_25	IF_9	IF_26
0x400567c	          0x4584f6	                         test r14b, r14b	     15574	i386-dis.c	FUNCTION_25	ELSE_12	IF_45
0x400567f	     0xf8515fdffff	                           jne 0x400539a	     15574	i386-dis.c	FUNCTION_25	ELSE_12	IF_45
0x4005685	      0xbd00000000	                              mov ebp, 0	     15212	i386-dis.c	FUNCTION_25
0x400568a	    0x448b2d000000	           mov r13d, dword [0x04005691] 	     15581	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x4005691	      0xe919fdffff	                           jmp 0x40053af	     15581	i386-dis.c	FUNCTION_25	ELSE_12	IF_47
0x4005696	    0x41bd00000000	                             mov r13d, 0	     15236	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x400569c	      0xe998f4ffff	                           jmp 0x4004b39	     15236	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x40056a1	    0x41bd03000000	                             mov r13d, 3	     15286	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x40056a7	      0xe98df4ffff	                           jmp 0x4004b39	     15286	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x40056ac	    0x41bd06000000	                             mov r13d, 6	     15269	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x40056b2	      0xe982f4ffff	                           jmp 0x4004b39	     15269	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1	SWITCH_2
0x40056b7	    0x41bd01000000	                             mov r13d, 1	     15232	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x40056bd	      0xe98bf4ffff	                           jmp 0x4004b4d	     15232	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x40056c2	    0x41bd00000000	                             mov r13d, 0	     15236	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x40056c8	      0xe980f4ffff	                           jmp 0x4004b4d	     15236	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x40056cd	    0x41bf00000000	                             mov r15d, 0	     15236	i386-dis.c	FUNCTION_25	IF_1	SWITCH_1
0x40056d3	    0xc74424100100	               mov dword [rsp + 0x10], 1	     15441	i386-dis.c	FUNCTION_25	IF_9
0x40056db	    0x41be01000000	                             mov r14d, 1	     15444	i386-dis.c	FUNCTION_25	IF_9
0x40056e1	      0xe9f1f7ffff	                           jmp 0x4004ed7	     15444	i386-dis.c	FUNCTION_25	IF_9
0x40056e6	        0x4883c438	                           add rsp, 0x38	     15661	i386-dis.c	FUNCTION_25
0x40056ea	              0x5b	                                 pop rbx	     15661	i386-dis.c	FUNCTION_25
0x40056eb	              0x5d	                                 pop rbp	     15661	i386-dis.c	FUNCTION_25
0x40056ec	            0x415c	                                 pop r12	     15661	i386-dis.c	FUNCTION_25
0x40056ee	            0x415d	                                 pop r13	     15661	i386-dis.c	FUNCTION_25
0x40056f0	            0x415e	                                 pop r14	     15661	i386-dis.c	FUNCTION_25
0x40056f2	            0x415f	                                 pop r15	     15661	i386-dis.c	FUNCTION_25
0x40056f4	              0xc3	                                     ret	     15661	i386-dis.c	FUNCTION_25
get64	CALL,1:FOR,0:SWITCH,0:WHILE,0:ELSE,0:DO,0:IF,0:functions,0	36
0x4001fd7	        0x4883ec08	                              sub rsp, 8	     15770	i386-dis.c	FUNCTION_28
0x4001fdb	    0x488b05000000	            mov rax, qword [0x04001fe2] 	     15776	i386-dis.c	FUNCTION_28
0x4001fe2	        0x488d7008	                      lea rsi, [rax + 8]	     15776	i386-dis.c	FUNCTION_28
0x4001fe6	    0x488b3d000000	            mov rdi, qword [0x04001fed] 	     15776	i386-dis.c	FUNCTION_28
0x4001fed	        0x488b4768	            mov rax, qword [rdi + 0x68] 	     15776	i386-dis.c	FUNCTION_28
0x4001ff1	          0x483b30	                    cmp rsi, qword [rax]	     15776	i386-dis.c	FUNCTION_28
0x4001ff4	            0x7605	                           jbe 0x4001ffb	     15776	i386-dis.c	FUNCTION_28
0x4001ff6	      0xe8b0feffff	                     call sym.fetch_data	     15776	i386-dis.c	FUNCTION_28
0x4001ffb	    0x4c8b0d000000	              mov r9, qword [0x04002002]	     15777	i386-dis.c	FUNCTION_28
0x4002002	      0x410fb64103	                movzx eax, byte [r9 + 3]	     15777	i386-dis.c	FUNCTION_28
0x4002007	          0xc1e018	                           shl eax, 0x18	     15777	i386-dis.c	FUNCTION_28
0x400200a	        0x410fb609	                    movzx ecx, byte [r9]	     15777	i386-dis.c	FUNCTION_28
0x400200e	             0x9c8	                             or eax, ecx	     15777	i386-dis.c	FUNCTION_28
0x4002010	      0x410fb64901	                movzx ecx, byte [r9 + 1]	     15777	i386-dis.c	FUNCTION_28
0x4002015	          0xc1e108	                              shl ecx, 8	     15777	i386-dis.c	FUNCTION_28
0x4002018	             0x9c8	                             or eax, ecx	     15777	i386-dis.c	FUNCTION_28
0x400201a	            0x89c6	                            mov esi, eax	     15777	i386-dis.c	FUNCTION_28
0x400201c	      0x410fb64102	                movzx eax, byte [r9 + 2]	     15780	i386-dis.c	FUNCTION_28
0x4002021	          0xc1e010	                           shl eax, 0x10	     15780	i386-dis.c	FUNCTION_28
0x4002024	      0x450fb64104	                movzx r8d, byte [r9 + 4]	     15781	i386-dis.c	FUNCTION_28
0x4002029	      0x410fb67905	                movzx edi, byte [r9 + 5]	     15782	i386-dis.c	FUNCTION_28
0x400202e	          0xc1e708	                              shl edi, 8	     15782	i386-dis.c	FUNCTION_28
0x4002031	      0x410fb64906	                movzx ecx, byte [r9 + 6]	     15783	i386-dis.c	FUNCTION_28
0x4002036	          0xc1e110	                           shl ecx, 0x10	     15783	i386-dis.c	FUNCTION_28
0x4002039	        0x498d5108	                       lea rdx, [r9 + 8]	     15784	i386-dis.c	FUNCTION_28
0x400203d	    0x488915000000	            mov qword [0x04002044], rdx 	     15784	i386-dis.c	FUNCTION_28
0x4002044	      0x410fb65107	                movzx edx, byte [r9 + 7]	     15784	i386-dis.c	FUNCTION_28
0x4002049	          0xc1e218	                           shl edx, 0x18	     15784	i386-dis.c	FUNCTION_28
0x400204c	          0x4409c2	                             or edx, r8d	     15784	i386-dis.c	FUNCTION_28
0x400204f	             0x9fa	                             or edx, edi	     15784	i386-dis.c	FUNCTION_28
0x4002051	             0x9ca	                             or edx, ecx	     15790	i386-dis.c	FUNCTION_28
0x4002053	        0x48c1e220	                           shl rdx, 0x20	     15790	i386-dis.c	FUNCTION_28
0x4002057	             0x9f0	                             or eax, esi	     15790	i386-dis.c	FUNCTION_28
0x4002059	          0x4801d0	                            add rax, rdx	     15790	i386-dis.c	FUNCTION_28
0x400205c	        0x4883c408	                              add rsp, 8	     15791	i386-dis.c	FUNCTION_28
0x4002060	              0xc3	                                     ret	     15791	i386-dis.c	FUNCTION_28
fetch_data	CALL,1:FOR,0:SWITCH,0:WHILE,0:ELSE,2:DO,0:IF,3:functions,0	41
0x4001eab	            0x4156	                                push r14	       200	i386-dis.c	FUNCTION_1
0x4001ead	            0x4155	                                push r13	       200	i386-dis.c	FUNCTION_1
0x4001eaf	            0x4154	                                push r12	       200	i386-dis.c	FUNCTION_1
0x4001eb1	              0x55	                                push rbp	       200	i386-dis.c	FUNCTION_1
0x4001eb2	              0x53	                                push rbx	       200	i386-dis.c	FUNCTION_1
0x4001eb3	          0x4989fd	                            mov r13, rdi	       200	i386-dis.c	FUNCTION_1
0x4001eb6	          0x4989f4	                            mov r12, rsi	       200	i386-dis.c	FUNCTION_1
0x4001eb9	        0x488b5f68	            mov rbx, qword [rdi + 0x68] 	       202	i386-dis.c	FUNCTION_1
0x4001ebd	          0x488b33	                    mov rsi, qword [rbx]	       203	i386-dis.c	FUNCTION_1
0x4001ec0	        0x4c8d7308	                      lea r14, [rbx + 8]	       203	i386-dis.c	FUNCTION_1
0x4001ec4	          0x4889f5	                            mov rbp, rsi	       203	i386-dis.c	FUNCTION_1
0x4001ec7	          0x4c29f5	                            sub rbp, r14	       203	i386-dis.c	FUNCTION_1
0x4001eca	        0x48036b20	             add rbp, qword [rbx + 0x20]	       203	i386-dis.c	FUNCTION_1
0x4001ece	        0x488d531c	                   lea rdx, [rbx + 0x1c]	       205	i386-dis.c	FUNCTION_1	IF_1
0x4001ed2	      0xb8ffffffff	                     mov eax, 0xffffffff	       211	i386-dis.c	FUNCTION_1	ELSE_1
0x4001ed7	          0x4939d4	                            cmp r12, rdx	       205	i386-dis.c	FUNCTION_1	IF_1
0x4001eda	            0x7714	                            ja 0x4001ef0	       205	i386-dis.c	FUNCTION_1	IF_1
0x4001edc	          0x4c89e2	                            mov rdx, r12	       206	i386-dis.c	FUNCTION_1	IF_1
0x4001edf	          0x4829f2	                            sub rdx, rsi	       206	i386-dis.c	FUNCTION_1	IF_1
0x4001ee2	          0x4889f9	                            mov rcx, rdi	       206	i386-dis.c	FUNCTION_1	IF_1
0x4001ee5	          0x4889ef	                            mov rdi, rbp	       206	i386-dis.c	FUNCTION_1	IF_1
0x4001ee8	        0x41ff5570	                 call qword [r13 + 0x70]	       206	i386-dis.c	FUNCTION_1	IF_1
0x4001eec	            0x85c0	                           test eax, eax	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x4001eee	            0x741f	                            je 0x4001f0f	       212	i386-dis.c	FUNCTION_1	ELSE_1	IF_2
0x4001ef0	          0x4c3b33	                    cmp r14, qword [rbx]	       218	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4001ef3	            0x750c	                           jne 0x4001f01	       218	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4001ef5	          0x4c89ea	                            mov rdx, r13	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4001ef8	          0x4889ee	                            mov rsi, rbp	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4001efb	            0x89c7	                            mov edi, eax	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4001efd	        0x41ff5578	                 call qword [r13 + 0x78]	       219	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4001f01	        0x488d7b30	                   lea rdi, [rbx + 0x30]	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x4001f05	      0xbe01000000	                              mov esi, 1	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x4001f0a	      0xe800000000	                          call 0x4001f0f	       220	i386-dis.c	FUNCTION_1	ELSE_1	IF_2	CALL_1
0x4001f0f	          0x4c8923	                    mov qword [rbx], r12	       223	i386-dis.c	FUNCTION_1	ELSE_2
0x4001f12	      0xb801000000	                              mov eax, 1	       225	i386-dis.c	FUNCTION_1
0x4001f17	              0x5b	                                 pop rbx	       225	i386-dis.c	FUNCTION_1
0x4001f18	              0x5d	                                 pop rbp	       225	i386-dis.c	FUNCTION_1
0x4001f19	            0x415c	                                 pop r12	       225	i386-dis.c	FUNCTION_1
0x4001f1b	            0x415d	                                 pop r13	       225	i386-dis.c	FUNCTION_1
0x4001f1d	            0x415e	                                 pop r14	       225	i386-dis.c	FUNCTION_1
0x4001f1f	              0xc3	                                     ret	       225	i386-dis.c	FUNCTION_1
get_valid_dis386	CALL,6:FOR,0:SWITCH,11:WHILE,0:ELSE,5:DO,0:IF,20:functions,0	634
0x40020c3	          0x4889f8	                            mov rax, rdi	     12734	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_8	IF_1
0x40020c6	        0x48833f00	                      cmp qword [rdi], 0	     12733	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_8	IF_1
0x40020ca	     0xf85560a0000	                           jne 0x4002b26	     12733	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_8	IF_1
0x40020d0	              0x55	                                push rbp	     12730	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_8
0x40020d1	              0x53	                                push rbx	     12730	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_8
0x40020d2	        0x4883ec08	                              sub rsp, 8	     12730	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_8
0x40020d6	          0x4889f5	                            mov rbp, rsi	     12730	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_8
0x40020d9	          0x4889fb	                            mov rbx, rdi	     12730	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_8
0x40020dc	        0x837f100d	            cmp dword [rdi + 0x10], 0xd 	     12736	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_8
0x40020e0	     0xf87cd090000	                            ja 0x4002ab3	     12736	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_8
0x40020e6	          0x8b4710	            mov eax, dword [rdi + 0x10] 	     12736	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_8
0x40020e9	    0xff24c5000000	                       jmp qword [rax*8]	     12736	i386-dis.c	FOR_1	SWITCH_1	FUNCTION_8
0x40020f0	    0x486305000000	         movsxd rax, dword [0x040020f7] 	     12739	i386-dis.c	FOR_1	FUNCTION_8
0x40020f7	        0x488d1440	                  lea rdx, [rax + rax*2]	     12739	i386-dis.c	FOR_1	FUNCTION_8
0x40020fb	        0x48c1e205	                              shl rdx, 5	     12739	i386-dis.c	FOR_1	FUNCTION_8
0x40020ff	        0x48634720	         movsxd rax, dword [rdi + 0x20] 	     12739	i386-dis.c	FOR_1	FUNCTION_8
0x4002103	        0x488d0440	                  lea rax, [rax + rax*2]	     12739	i386-dis.c	FOR_1	FUNCTION_8
0x4002107	        0x48c1e008	                              shl rax, 8	     12739	i386-dis.c	FOR_1	FUNCTION_8
0x400210b	    0x488d9c020000	                    lea rbx, [rdx + rax]	     12739	i386-dis.c	FOR_1	FUNCTION_8
0x4002113	      0xe9a5090000	                           jmp 0x4002abd	     12740	i386-dis.c	FOR_1	FUNCTION_8
0x4002118	    0x833d00000000	               cmp dword [0x0400211f], 3	     12744	i386-dis.c	FOR_1	FUNCTION_8
0x400211f	           0xf94c0	                                 sete al	     12744	i386-dis.c	FOR_1	FUNCTION_8
0x4002122	           0xfb6c0	                           movzx eax, al	     12744	i386-dis.c	FOR_1	FUNCTION_8
0x4002125	        0x488d1400	                    lea rdx, [rax + rax]	     12744	i386-dis.c	FOR_1	FUNCTION_8
0x4002129	          0x4801d0	                            add rax, rdx	     12744	i386-dis.c	FOR_1	FUNCTION_8
0x400212c	        0x48c1e005	                              shl rax, 5	     12744	i386-dis.c	FOR_1	FUNCTION_8
0x4002130	        0x48635720	         movsxd rdx, dword [rdi + 0x20] 	     12744	i386-dis.c	FOR_1	FUNCTION_8
0x4002134	        0x488d1452	                  lea rdx, [rdx + rdx*2]	     12744	i386-dis.c	FOR_1	FUNCTION_8
0x4002138	        0x48c1e206	                              shl rdx, 6	     12744	i386-dis.c	FOR_1	FUNCTION_8
0x400213c	    0x488d9c100000	                    lea rbx, [rax + rdx]	     12744	i386-dis.c	FOR_1	FUNCTION_8
0x4002144	      0xe974090000	                           jmp 0x4002abd	     12745	i386-dis.c	FOR_1	FUNCTION_8
0x4002149	    0x486305000000	         movsxd rax, dword [0x04002150] 	     12748	i386-dis.c	FOR_1	FUNCTION_8
0x4002150	        0x488d1440	                  lea rdx, [rax + rax*2]	     12748	i386-dis.c	FOR_1	FUNCTION_8
0x4002154	        0x48c1e205	                              shl rdx, 5	     12748	i386-dis.c	FOR_1	FUNCTION_8
0x4002158	        0x48634720	         movsxd rax, dword [rdi + 0x20] 	     12748	i386-dis.c	FOR_1	FUNCTION_8
0x400215c	        0x488d0440	                  lea rax, [rax + rax*2]	     12748	i386-dis.c	FOR_1	FUNCTION_8
0x4002160	        0x48c1e008	                              shl rax, 8	     12748	i386-dis.c	FOR_1	FUNCTION_8
0x4002164	    0x488d9c020000	                    lea rbx, [rdx + rax]	     12748	i386-dis.c	FOR_1	FUNCTION_8
0x400216c	      0xe94c090000	                           jmp 0x4002abd	     12749	i386-dis.c	FOR_1	FUNCTION_8
0x4002171	    0x803d00000000	                cmp byte [0x04002178], 0	     12752	i386-dis.c	FOR_1	FUNCTION_8	IF_2
0x4002178	            0x744d	                            je 0x40021c7	     12752	i386-dis.c	FOR_1	FUNCTION_8	IF_2
0x400217a	    0x8b1500000000	            mov edx, dword [0x04002180] 	     12755	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x4002180	          0x83fa66	                           cmp edx, 0x66	     12755	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x4002183	     0xf84bb000000	                            je 0x4002244	     12755	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x4002189	          0x83fa66	                           cmp edx, 0x66	     12755	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x400218c	            0x7f0f	                            jg 0x400219d	     12755	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x400218e	      0xb800000000	                              mov eax, 0	     12758	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x4002193	            0x85d2	                           test edx, edx	     12755	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x4002195	     0xf84ae000000	                            je 0x4002249	     12755	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x400219b	            0xeb25	                           jmp 0x40021c2	     12755	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x400219d	    0x81faf2000000	                           cmp edx, 0xf2	     12755	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x40021a3	            0x7413	                            je 0x40021b8	     12755	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x40021a5	      0xb801000000	                              mov eax, 1	     12761	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x40021aa	    0x81faf3000000	                           cmp edx, 0xf3	     12755	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x40021b0	     0xf8493000000	                            je 0x4002249	     12755	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x40021b6	            0xeb0a	                           jmp 0x40021c2	     12755	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x40021b8	      0xb803000000	                              mov eax, 3	     12767	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x40021bd	      0xe987000000	                           jmp 0x4002249	     12768	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x40021c2	      0xe800000000	                          call 0x40021c7	     12770	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2	CALL_1
0x40021c7	    0x8b0d00000000	            mov ecx, dword [0x040021cd] 	     12782	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3
0x40021cd	          0xf6c103	                              test cl, 3	     12782	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3
0x40021d0	            0x7452	                            je 0x4002224	     12782	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3
0x40021d2	    0x8b1500000000	            mov edx, dword [0x040021d8] 	     12784	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_4
0x40021d8	    0x8b0500000000	            mov eax, dword [0x040021de] 	     12784	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_4
0x40021de	            0x39c2	                            cmp edx, eax	     12784	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_4
0x40021e0	            0x7f0f	                            jg 0x40021f1	     12784	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_4
0x40021e2	            0x89c2	                            mov edx, eax	     12794	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	ELSE_2
0x40021e4	    0x41b802000000	                              mov r8d, 2	     12793	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	ELSE_2
0x40021ea	      0xb803000000	                              mov eax, 3	     12792	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	ELSE_2
0x40021ef	            0xeb0b	                           jmp 0x40021fc	     12792	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	ELSE_2
0x40021f1	    0x41b801000000	                              mov r8d, 1	     12787	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_4
0x40021f7	      0xb801000000	                              mov eax, 1	     12786	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_4
0x40021fc	          0x4863f0	                         movsxd rsi, eax	     12798	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_5
0x40021ff	        0x4c634b20	          movsxd r9, dword [rbx + 0x20] 	     12798	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_5
0x4002203	        0x488d3c76	                  lea rdi, [rsi + rsi*2]	     12798	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_5
0x4002207	        0x48c1e705	                              shl rdi, 5	     12798	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_5
0x400220b	        0x4b8d3449	                    lea rsi, [r9 + r9*2]	     12798	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_5
0x400220f	        0x48c1e607	                              shl rsi, 7	     12798	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_5
0x4002213	     0xfb7b4370000	             movzx esi, word [rdi + rsi]	     12798	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_5
0x400221b	          0x4485c6	                           test esi, r8d	     12798	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_5
0x400221e	     0xf84cb080000	                            je 0x4002aef	     12798	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_5
0x4002224	      0xb800000000	                              mov eax, 0	     12798	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_3	IF_5
0x4002229	          0xf6c502	                              test ch, 2	     12804	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_6
0x400222c	            0x741b	                            je 0x4002249	     12804	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_6
0x400222e	    0x8b1500000000	            mov edx, dword [0x04002234] 	     12808	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_6
0x4002234	    0x41b800020000	                          mov r8d, 0x200	     12807	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_6
0x400223a	      0xb802000000	                              mov eax, 2	     12806	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_6
0x400223f	      0xe9ab080000	                           jmp 0x4002aef	     12806	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_6
0x4002244	      0xb802000000	                              mov eax, 2	     12764	i386-dis.c	FOR_1	FUNCTION_8	IF_2	SWITCH_2
0x4002249	            0x4898	                                    cdqe	     12817	i386-dis.c	FOR_1	FUNCTION_8
0x400224b	        0x488d1440	                  lea rdx, [rax + rax*2]	     12817	i386-dis.c	FOR_1	FUNCTION_8
0x400224f	        0x48c1e205	                              shl rdx, 5	     12817	i386-dis.c	FOR_1	FUNCTION_8
0x4002253	        0x48634320	         movsxd rax, dword [rbx + 0x20] 	     12817	i386-dis.c	FOR_1	FUNCTION_8
0x4002257	        0x488d0440	                  lea rax, [rax + rax*2]	     12817	i386-dis.c	FOR_1	FUNCTION_8
0x400225b	        0x48c1e007	                              shl rax, 7	     12817	i386-dis.c	FOR_1	FUNCTION_8
0x400225f	    0x488d9c020000	                    lea rbx, [rdx + rax]	     12817	i386-dis.c	FOR_1	FUNCTION_8
0x4002267	      0xe951080000	                           jmp 0x4002abd	     12818	i386-dis.c	FOR_1	FUNCTION_8
0x400226c	    0x833d00000000	               cmp dword [0x04002273], 2	     12822	i386-dis.c	FOR_1	FUNCTION_8
0x4002273	           0xf94c0	                                 sete al	     12822	i386-dis.c	FOR_1	FUNCTION_8
0x4002276	           0xfb6c0	                           movzx eax, al	     12822	i386-dis.c	FOR_1	FUNCTION_8
0x4002279	        0x488d1400	                    lea rdx, [rax + rax]	     12822	i386-dis.c	FOR_1	FUNCTION_8
0x400227d	          0x4801d0	                            add rax, rdx	     12822	i386-dis.c	FOR_1	FUNCTION_8
0x4002280	        0x48c1e005	                              shl rax, 5	     12822	i386-dis.c	FOR_1	FUNCTION_8
0x4002284	        0x48635720	         movsxd rdx, dword [rdi + 0x20] 	     12822	i386-dis.c	FOR_1	FUNCTION_8
0x4002288	        0x488d1452	                  lea rdx, [rdx + rdx*2]	     12822	i386-dis.c	FOR_1	FUNCTION_8
0x400228c	        0x48c1e206	                              shl rdx, 6	     12822	i386-dis.c	FOR_1	FUNCTION_8
0x4002290	    0x488d9c100000	                    lea rbx, [rax + rdx]	     12822	i386-dis.c	FOR_1	FUNCTION_8
0x4002298	      0xe920080000	                           jmp 0x4002abd	     12823	i386-dis.c	FOR_1	FUNCTION_8
0x400229d	    0x488b05000000	            mov rax, qword [0x040022a4] 	     12826	i386-dis.c	FOR_1	FUNCTION_8
0x40022a4	        0x488d7002	                      lea rsi, [rax + 2]	     12826	i386-dis.c	FOR_1	FUNCTION_8
0x40022a8	        0x488b4568	            mov rax, qword [rbp + 0x68] 	     12826	i386-dis.c	FOR_1	FUNCTION_8
0x40022ac	          0x483b30	                    cmp rsi, qword [rax]	     12826	i386-dis.c	FOR_1	FUNCTION_8
0x40022af	            0x7608	                           jbe 0x40022b9	     12826	i386-dis.c	FOR_1	FUNCTION_8
0x40022b1	          0x4889ef	                            mov rdi, rbp	     12826	i386-dis.c	FOR_1	FUNCTION_8
0x40022b4	      0xe8f2fbffff	                     call sym.fetch_data	     12826	i386-dis.c	FOR_1	FUNCTION_8
0x40022b9	    0x488b05000000	            mov rax, qword [0x040022c0] 	     12827	i386-dis.c	FOR_1	FUNCTION_8
0x40022c0	        0x488d7001	                      lea rsi, [rax + 1]	     12827	i386-dis.c	FOR_1	FUNCTION_8
0x40022c4	    0x488935000000	            mov qword [0x040022cb], rsi 	     12827	i386-dis.c	FOR_1	FUNCTION_8
0x40022cb	           0xfb610	                   movzx edx, byte [rax]	     12828	i386-dis.c	FOR_1	FUNCTION_8
0x40022ce	        0x488d0c52	                  lea rcx, [rdx + rdx*2]	     12828	i386-dis.c	FOR_1	FUNCTION_8
0x40022d2	        0x48c1e105	                              shl rcx, 5	     12828	i386-dis.c	FOR_1	FUNCTION_8
0x40022d6	        0x48635320	         movsxd rdx, dword [rbx + 0x20] 	     12828	i386-dis.c	FOR_1	FUNCTION_8
0x40022da	        0x488d1452	                  lea rdx, [rdx + rdx*2]	     12828	i386-dis.c	FOR_1	FUNCTION_8
0x40022de	        0x48c1e20d	                            shl rdx, 0xd	     12828	i386-dis.c	FOR_1	FUNCTION_8
0x40022e2	    0x488d9c110000	                    lea rbx, [rcx + rdx]	     12828	i386-dis.c	FOR_1	FUNCTION_8
0x40022ea	    0x488935000000	            mov qword [0x040022f1], rsi 	     12829	i386-dis.c	FOR_1	FUNCTION_8
0x40022f1	         0xfb64001	               movzx eax, byte [rax + 1]	     12830	i386-dis.c	FOR_1	FUNCTION_8
0x40022f5	            0x89c2	                            mov edx, eax	     12830	i386-dis.c	FOR_1	FUNCTION_8
0x40022f7	          0xc0ea06	                               shr dl, 6	     12830	i386-dis.c	FOR_1	FUNCTION_8
0x40022fa	           0xfb6d2	                           movzx edx, dl	     12830	i386-dis.c	FOR_1	FUNCTION_8
0x40022fd	    0x891500000000	            mov dword [0x04002303], edx 	     12830	i386-dis.c	FOR_1	FUNCTION_8
0x4002303	            0x89c2	                            mov edx, eax	     12831	i386-dis.c	FOR_1	FUNCTION_8
0x4002305	          0xc0ea03	                               shr dl, 3	     12831	i386-dis.c	FOR_1	FUNCTION_8
0x4002308	          0x83e207	                              and edx, 7	     12831	i386-dis.c	FOR_1	FUNCTION_8
0x400230b	    0x891500000000	            mov dword [0x04002311], edx 	     12831	i386-dis.c	FOR_1	FUNCTION_8
0x4002311	          0x83e007	                              and eax, 7	     12832	i386-dis.c	FOR_1	FUNCTION_8
0x4002314	    0x890500000000	            mov dword [0x0400231a], eax 	     12832	i386-dis.c	FOR_1	FUNCTION_8
0x400231a	      0xe99e070000	                           jmp 0x4002abd	     12833	i386-dis.c	FOR_1	FUNCTION_8
0x400231f	    0x803d00000000	                cmp byte [0x04002326], 0	     12836	i386-dis.c	FOR_1	FUNCTION_8	IF_8
0x4002326	            0x7505	                           jne 0x400232d	     12836	i386-dis.c	FOR_1	FUNCTION_8	IF_8
0x4002328	      0xe800000000	                          call 0x400232d	     12837	i386-dis.c	FOR_1	FUNCTION_8	CALL_2
0x400232d	    0x8b0500000000	            mov eax, dword [0x04002333] 	     12839	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_3
0x4002333	      0x3d80000000	                           cmp eax, 0x80	     12839	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_3
0x4002338	            0x7413	                            je 0x400234d	     12839	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_3
0x400233a	      0x3d00010000	                          cmp eax, 0x100	     12839	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_3
0x400233f	            0x7507	                           jne 0x4002348	     12839	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_3
0x4002341	      0xb801000000	                              mov eax, 1	     12845	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_3
0x4002346	            0xeb0a	                           jmp 0x4002352	     12845	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_3
0x4002348	      0xe800000000	                          call 0x400234d	     12848	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_3	CALL_3
0x400234d	      0xb800000000	                              mov eax, 0	     12842	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_3
0x4002352	            0x4898	                                    cdqe	     12852	i386-dis.c	FOR_1	FUNCTION_8
0x4002354	        0x488d1400	                    lea rdx, [rax + rax]	     12852	i386-dis.c	FOR_1	FUNCTION_8
0x4002358	          0x4801d0	                            add rax, rdx	     12852	i386-dis.c	FOR_1	FUNCTION_8
0x400235b	        0x48c1e005	                              shl rax, 5	     12852	i386-dis.c	FOR_1	FUNCTION_8
0x400235f	        0x48635320	         movsxd rdx, dword [rbx + 0x20] 	     12852	i386-dis.c	FOR_1	FUNCTION_8
0x4002363	        0x488d1452	                  lea rdx, [rdx + rdx*2]	     12852	i386-dis.c	FOR_1	FUNCTION_8
0x4002367	        0x48c1e206	                              shl rdx, 6	     12852	i386-dis.c	FOR_1	FUNCTION_8
0x400236b	    0x488d9c100000	                    lea rbx, [rax + rdx]	     12852	i386-dis.c	FOR_1	FUNCTION_8
0x4002373	      0xe945070000	                           jmp 0x4002abd	     12853	i386-dis.c	FOR_1	FUNCTION_8
0x4002378	    0x488b05000000	            mov rax, qword [0x0400237f] 	     12856	i386-dis.c	FOR_1	FUNCTION_8
0x400237f	        0x488d7003	                      lea rsi, [rax + 3]	     12856	i386-dis.c	FOR_1	FUNCTION_8
0x4002383	        0x488b4568	            mov rax, qword [rbp + 0x68] 	     12856	i386-dis.c	FOR_1	FUNCTION_8
0x4002387	          0x483b30	                    cmp rsi, qword [rax]	     12856	i386-dis.c	FOR_1	FUNCTION_8
0x400238a	            0x7608	                           jbe 0x4002394	     12856	i386-dis.c	FOR_1	FUNCTION_8
0x400238c	          0x4889ef	                            mov rdi, rbp	     12856	i386-dis.c	FOR_1	FUNCTION_8
0x400238f	      0xe817fbffff	                     call sym.fetch_data	     12856	i386-dis.c	FOR_1	FUNCTION_8
0x4002394	    0x8b0500000000	            mov eax, dword [0x0400239a] 	     12858	i386-dis.c	FOR_1	FUNCTION_8
0x400239a	    0x890500000000	            mov dword [0x040023a0], eax 	     12858	i386-dis.c	FOR_1	FUNCTION_8
0x40023a0	    0x488b05000000	            mov rax, qword [0x040023a7] 	     12859	i386-dis.c	FOR_1	FUNCTION_8
0x40023a7	           0xfb608	                   movzx ecx, byte [rax]	     12859	i386-dis.c	FOR_1	FUNCTION_8
0x40023aa	            0x89ca	                            mov edx, ecx	     12859	i386-dis.c	FOR_1	FUNCTION_8
0x40023ac	          0xc0ea05	                               shr dl, 5	     12859	i386-dis.c	FOR_1	FUNCTION_8
0x40023af	           0xfb6d2	                           movzx edx, dl	     12859	i386-dis.c	FOR_1	FUNCTION_8
0x40023b2	            0xf7d2	                                 not edx	     12859	i386-dis.c	FOR_1	FUNCTION_8
0x40023b4	            0x89d6	                            mov esi, edx	     12859	i386-dis.c	FOR_1	FUNCTION_8
0x40023b6	          0x83e607	                              and esi, 7	     12859	i386-dis.c	FOR_1	FUNCTION_8
0x40023b9	    0x893500000000	            mov dword [0x040023bf], esi 	     12859	i386-dis.c	FOR_1	FUNCTION_8
0x40023bf	          0x83e11f	                           and ecx, 0x1f	     12862	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_4
0x40023c2	          0x80f909	                               cmp cl, 9	     12862	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_4
0x40023c5	            0x7410	                            je 0x40023d7	     12862	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_4
0x40023c7	          0x80f90a	                             cmp cl, 0xa	     12862	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_4
0x40023ca	            0x7412	                            je 0x40023de	     12862	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_4
0x40023cc	          0x80f908	                               cmp cl, 8	     12862	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_4
0x40023cf	     0xf85fe060000	                           jne 0x4002ad3	     12862	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_4
0x40023d5	            0xeb0e	                           jmp 0x40023e5	     12862	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_4
0x40023d7	      0xbf01000000	                              mov edi, 1	     12871	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_4
0x40023dc	            0xeb0c	                           jmp 0x40023ea	     12871	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_4
0x40023de	      0xbf02000000	                              mov edi, 2	     12874	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_4
0x40023e3	            0xeb05	                           jmp 0x40023ea	     12875	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_4
0x40023e5	      0xbf00000000	                              mov edi, 0	     12868	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_4
0x40023ea	        0x488d4801	                      lea rcx, [rax + 1]	     12877	i386-dis.c	FOR_1	FUNCTION_8
0x40023ee	    0x48890d000000	            mov qword [0x040023f5], rcx 	     12877	i386-dis.c	FOR_1	FUNCTION_8
0x40023f5	         0xfb64801	               movzx ecx, byte [rax + 1]	     12878	i386-dis.c	FOR_1	FUNCTION_8
0x40023f9	          0x83e180	                     and ecx, 0xffffff80	     12878	i386-dis.c	FOR_1	FUNCTION_8
0x40023fc	           0xfb6c9	                           movzx ecx, cl	     12878	i386-dis.c	FOR_1	FUNCTION_8
0x40023ff	    0x890d00000000	            mov dword [0x04002405], ecx 	     12878	i386-dis.c	FOR_1	FUNCTION_8
0x4002405	            0x85c9	                           test ecx, ecx	     12879	i386-dis.c	FOR_1	FUNCTION_8	IF_9
0x4002407	            0x742a	                            je 0x4002433	     12879	i386-dis.c	FOR_1	FUNCTION_8	IF_9
0x4002409	    0x833d00000000	               cmp dword [0x04002410], 2	     12879	i386-dis.c	FOR_1	FUNCTION_8	IF_9
0x4002410	     0xf85f3060000	                           jne 0x4002b09	     12879	i386-dis.c	FOR_1	FUNCTION_8	IF_9
0x4002416	          0x83ce08	                               or esi, 8	     12880	i386-dis.c	FOR_1	FUNCTION_8	IF_9
0x4002419	    0x893500000000	            mov dword [0x0400241f], esi 	     12880	i386-dis.c	FOR_1	FUNCTION_8	IF_9
0x400241f	         0xfb65001	               movzx edx, byte [rax + 1]	     12882	i386-dis.c	FOR_1	FUNCTION_8
0x4002423	          0xc0ea03	                               shr dl, 3	     12882	i386-dis.c	FOR_1	FUNCTION_8
0x4002426	            0xf7d2	                                 not edx	     12882	i386-dis.c	FOR_1	FUNCTION_8
0x4002428	          0x83e20f	                            and edx, 0xf	     12882	i386-dis.c	FOR_1	FUNCTION_8
0x400242b	    0x891500000000	            mov dword [0x04002431], edx 	     12882	i386-dis.c	FOR_1	FUNCTION_8
0x4002431	            0xeb24	                           jmp 0x4002457	     12882	i386-dis.c	FOR_1	FUNCTION_8
0x4002433	         0xfb64801	               movzx ecx, byte [rax + 1]	     12882	i386-dis.c	FOR_1	FUNCTION_8
0x4002437	          0xc0e903	                               shr cl, 3	     12882	i386-dis.c	FOR_1	FUNCTION_8
0x400243a	            0xf7d1	                                 not ecx	     12882	i386-dis.c	FOR_1	FUNCTION_8
0x400243c	          0x83e10f	                            and ecx, 0xf	     12882	i386-dis.c	FOR_1	FUNCTION_8
0x400243f	    0x890d00000000	            mov dword [0x04002445], ecx 	     12882	i386-dis.c	FOR_1	FUNCTION_8
0x4002445	    0x833d00000000	               cmp dword [0x0400244c], 2	     12883	i386-dis.c	FOR_1	FUNCTION_8	IF_10
0x400244c	            0x7409	                            je 0x4002457	     12883	i386-dis.c	FOR_1	FUNCTION_8	IF_10
0x400244e	          0x83e206	                              and edx, 6	     12886	i386-dis.c	FOR_1	FUNCTION_8	IF_10
0x4002451	    0x891500000000	            mov dword [0x04002457], edx 	     12886	i386-dis.c	FOR_1	FUNCTION_8	IF_10
0x4002457	         0xfb65001	               movzx edx, byte [rax + 1]	     12889	i386-dis.c	FOR_1	FUNCTION_8
0x400245b	          0x83e204	                              and edx, 4	     12889	i386-dis.c	FOR_1	FUNCTION_8
0x400245e	          0x80fa01	                               cmp dl, 1	     12889	i386-dis.c	FOR_1	FUNCTION_8
0x4002461	            0x19d2	                            sbb edx, edx	     12889	i386-dis.c	FOR_1	FUNCTION_8
0x4002463	          0x83e280	                     and edx, 0xffffff80	     12889	i386-dis.c	FOR_1	FUNCTION_8
0x4002466	    0x81c200010000	                          add edx, 0x100	     12889	i386-dis.c	FOR_1	FUNCTION_8
0x400246c	    0x891500000000	            mov dword [0x04002472], edx 	     12889	i386-dis.c	FOR_1	FUNCTION_8
0x4002472	         0xfb65001	               movzx edx, byte [rax + 1]	     12890	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_5
0x4002476	          0x83e203	                              and edx, 3	     12890	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_5
0x4002479	          0x80fa02	                               cmp dl, 2	     12890	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_5
0x400247c	            0x7416	                            je 0x4002494	     12890	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_5
0x400247e	          0x80fa03	                               cmp dl, 3	     12890	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_5
0x4002481	            0x741d	                            je 0x40024a0	     12890	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_5
0x4002483	          0x80fa01	                               cmp dl, 1	     12890	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_5
0x4002486	            0x7522	                           jne 0x40024aa	     12890	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_5
0x4002488	    0xc70500000000	           mov dword [0x04002492], 0x66 	     12895	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_5
0x4002492	            0xeb16	                           jmp 0x40024aa	     12896	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_5
0x4002494	    0xc70500000000	           mov dword [0x0400249e], 0xf3 	     12898	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_5
0x400249e	            0xeb0a	                           jmp 0x40024aa	     12899	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_5
0x40024a0	    0xc70500000000	           mov dword [0x040024aa], 0xf2 	     12901	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_5
0x40024aa	    0xc60500000000	                mov byte [0x040024b1], 1	     12904	i386-dis.c	FOR_1	FUNCTION_8
0x40024b1	    0xc60500000000	                mov byte [0x040024b8], 1	     12905	i386-dis.c	FOR_1	FUNCTION_8
0x40024b8	        0x488d7003	                      lea rsi, [rax + 3]	     12907	i386-dis.c	FOR_1	FUNCTION_8
0x40024bc	    0x488935000000	            mov qword [0x040024c3], rsi 	     12907	i386-dis.c	FOR_1	FUNCTION_8
0x40024c3	         0xfb65002	               movzx edx, byte [rax + 2]	     12908	i386-dis.c	FOR_1	FUNCTION_8
0x40024c7	        0x488d0c52	                  lea rcx, [rdx + rdx*2]	     12908	i386-dis.c	FOR_1	FUNCTION_8
0x40024cb	        0x48c1e105	                              shl rcx, 5	     12908	i386-dis.c	FOR_1	FUNCTION_8
0x40024cf	          0x4863d7	                         movsxd rdx, edi	     12908	i386-dis.c	FOR_1	FUNCTION_8
0x40024d2	        0x488d1452	                  lea rdx, [rdx + rdx*2]	     12908	i386-dis.c	FOR_1	FUNCTION_8
0x40024d6	        0x48c1e20d	                            shl rdx, 0xd	     12908	i386-dis.c	FOR_1	FUNCTION_8
0x40024da	    0x488d9c110000	                    lea rbx, [rcx + rdx]	     12908	i386-dis.c	FOR_1	FUNCTION_8
0x40024e2	    0x488935000000	            mov qword [0x040024e9], rsi 	     12910	i386-dis.c	FOR_1	FUNCTION_8
0x40024e9	        0x488d7004	                      lea rsi, [rax + 4]	     12911	i386-dis.c	FOR_1	FUNCTION_8
0x40024ed	        0x488b4568	            mov rax, qword [rbp + 0x68] 	     12911	i386-dis.c	FOR_1	FUNCTION_8
0x40024f1	          0x483b30	                    cmp rsi, qword [rax]	     12911	i386-dis.c	FOR_1	FUNCTION_8
0x40024f4	            0x7608	                           jbe 0x40024fe	     12911	i386-dis.c	FOR_1	FUNCTION_8
0x40024f6	          0x4889ef	                            mov rdi, rbp	     12911	i386-dis.c	FOR_1	FUNCTION_8
0x40024f9	      0xe8adf9ffff	                     call sym.fetch_data	     12911	i386-dis.c	FOR_1	FUNCTION_8
0x40024fe	    0x488b05000000	            mov rax, qword [0x04002505] 	     12912	i386-dis.c	FOR_1	FUNCTION_8
0x4002505	           0xfb600	                   movzx eax, byte [rax]	     12912	i386-dis.c	FOR_1	FUNCTION_8
0x4002508	            0x89c2	                            mov edx, eax	     12912	i386-dis.c	FOR_1	FUNCTION_8
0x400250a	          0xc0ea06	                               shr dl, 6	     12912	i386-dis.c	FOR_1	FUNCTION_8
0x400250d	           0xfb6d2	                           movzx edx, dl	     12912	i386-dis.c	FOR_1	FUNCTION_8
0x4002510	    0x891500000000	            mov dword [0x04002516], edx 	     12912	i386-dis.c	FOR_1	FUNCTION_8
0x4002516	            0x89c2	                            mov edx, eax	     12913	i386-dis.c	FOR_1	FUNCTION_8
0x4002518	          0xc0ea03	                               shr dl, 3	     12913	i386-dis.c	FOR_1	FUNCTION_8
0x400251b	          0x83e207	                              and edx, 7	     12913	i386-dis.c	FOR_1	FUNCTION_8
0x400251e	    0x891500000000	            mov dword [0x04002524], edx 	     12913	i386-dis.c	FOR_1	FUNCTION_8
0x4002524	          0x83e007	                              and eax, 7	     12914	i386-dis.c	FOR_1	FUNCTION_8
0x4002527	    0x890500000000	            mov dword [0x0400252d], eax 	     12914	i386-dis.c	FOR_1	FUNCTION_8
0x400252d	      0xe98b050000	                           jmp 0x4002abd	     12915	i386-dis.c	FOR_1	FUNCTION_8
0x4002532	    0x488b05000000	            mov rax, qword [0x04002539] 	     12919	i386-dis.c	FOR_1	FUNCTION_8
0x4002539	        0x488d7003	                      lea rsi, [rax + 3]	     12919	i386-dis.c	FOR_1	FUNCTION_8
0x400253d	        0x488b4568	            mov rax, qword [rbp + 0x68] 	     12919	i386-dis.c	FOR_1	FUNCTION_8
0x4002541	          0x483b30	                    cmp rsi, qword [rax]	     12919	i386-dis.c	FOR_1	FUNCTION_8
0x4002544	            0x7608	                           jbe 0x400254e	     12919	i386-dis.c	FOR_1	FUNCTION_8
0x4002546	          0x4889ef	                            mov rdi, rbp	     12919	i386-dis.c	FOR_1	FUNCTION_8
0x4002549	      0xe85df9ffff	                     call sym.fetch_data	     12919	i386-dis.c	FOR_1	FUNCTION_8
0x400254e	    0x8b0500000000	            mov eax, dword [0x04002554] 	     12921	i386-dis.c	FOR_1	FUNCTION_8
0x4002554	    0x890500000000	            mov dword [0x0400255a], eax 	     12921	i386-dis.c	FOR_1	FUNCTION_8
0x400255a	    0x488b05000000	            mov rax, qword [0x04002561] 	     12922	i386-dis.c	FOR_1	FUNCTION_8
0x4002561	           0xfb608	                   movzx ecx, byte [rax]	     12922	i386-dis.c	FOR_1	FUNCTION_8
0x4002564	            0x89ca	                            mov edx, ecx	     12922	i386-dis.c	FOR_1	FUNCTION_8
0x4002566	          0xc0ea05	                               shr dl, 5	     12922	i386-dis.c	FOR_1	FUNCTION_8
0x4002569	            0xf7d2	                                 not edx	     12922	i386-dis.c	FOR_1	FUNCTION_8
0x400256b	          0x83e207	                              and edx, 7	     12922	i386-dis.c	FOR_1	FUNCTION_8
0x400256e	    0x891500000000	            mov dword [0x04002574], edx 	     12922	i386-dis.c	FOR_1	FUNCTION_8
0x4002574	          0x83e11f	                           and ecx, 0x1f	     12923	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_6
0x4002577	          0x80f902	                               cmp cl, 2	     12923	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_6
0x400257a	            0x7410	                            je 0x400258c	     12923	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_6
0x400257c	          0x80f903	                               cmp cl, 3	     12923	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_6
0x400257f	            0x7412	                            je 0x4002593	     12923	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_6
0x4002581	          0x80f901	                               cmp cl, 1	     12923	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_6
0x4002584	     0xf8550050000	                           jne 0x4002ada	     12923	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_6
0x400258a	            0xeb0e	                           jmp 0x400259a	     12923	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_6
0x400258c	      0xbe01000000	                              mov esi, 1	     12932	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_6
0x4002591	            0xeb0c	                           jmp 0x400259f	     12932	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_6
0x4002593	      0xbe02000000	                              mov esi, 2	     12935	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_6
0x4002598	            0xeb05	                           jmp 0x400259f	     12936	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_6
0x400259a	      0xbe00000000	                              mov esi, 0	     12929	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_6
0x400259f	        0x488d4801	                      lea rcx, [rax + 1]	     12938	i386-dis.c	FOR_1	FUNCTION_8
0x40025a3	    0x48890d000000	            mov qword [0x040025aa], rcx 	     12938	i386-dis.c	FOR_1	FUNCTION_8
0x40025aa	         0xfb64801	               movzx ecx, byte [rax + 1]	     12939	i386-dis.c	FOR_1	FUNCTION_8
0x40025ae	          0x83e180	                     and ecx, 0xffffff80	     12939	i386-dis.c	FOR_1	FUNCTION_8
0x40025b1	           0xfb6c9	                           movzx ecx, cl	     12939	i386-dis.c	FOR_1	FUNCTION_8
0x40025b4	    0x890d00000000	            mov dword [0x040025ba], ecx 	     12939	i386-dis.c	FOR_1	FUNCTION_8
0x40025ba	    0x833d00000000	               cmp dword [0x040025c1], 2	     12940	i386-dis.c	FOR_1	FUNCTION_8	IF_11
0x40025c1	            0x750f	                           jne 0x40025d2	     12940	i386-dis.c	FOR_1	FUNCTION_8	IF_11
0x40025c3	            0x85c9	                           test ecx, ecx	     12942	i386-dis.c	FOR_1	FUNCTION_8	IF_11	IF_12
0x40025c5	            0x7415	                            je 0x40025dc	     12942	i386-dis.c	FOR_1	FUNCTION_8	IF_11	IF_12
0x40025c7	          0x83ca08	                               or edx, 8	     12943	i386-dis.c	FOR_1	FUNCTION_8	IF_11	IF_12
0x40025ca	    0x891500000000	            mov dword [0x040025d0], edx 	     12943	i386-dis.c	FOR_1	FUNCTION_8	IF_11	IF_12
0x40025d0	            0xeb0a	                           jmp 0x40025dc	     12943	i386-dis.c	FOR_1	FUNCTION_8	IF_11	IF_12
0x40025d2	    0xc70500000000	               mov dword [0x040025dc], 0	     12950	i386-dis.c	FOR_1	FUNCTION_8	ELSE_3
0x40025dc	         0xfb65001	               movzx edx, byte [rax + 1]	     12952	i386-dis.c	FOR_1	FUNCTION_8
0x40025e0	          0xc0ea03	                               shr dl, 3	     12952	i386-dis.c	FOR_1	FUNCTION_8
0x40025e3	            0xf7d2	                                 not edx	     12952	i386-dis.c	FOR_1	FUNCTION_8
0x40025e5	          0x83e20f	                            and edx, 0xf	     12952	i386-dis.c	FOR_1	FUNCTION_8
0x40025e8	    0x891500000000	            mov dword [0x040025ee], edx 	     12952	i386-dis.c	FOR_1	FUNCTION_8
0x40025ee	         0xfb65001	               movzx edx, byte [rax + 1]	     12953	i386-dis.c	FOR_1	FUNCTION_8
0x40025f2	          0x83e204	                              and edx, 4	     12953	i386-dis.c	FOR_1	FUNCTION_8
0x40025f5	          0x80fa01	                               cmp dl, 1	     12953	i386-dis.c	FOR_1	FUNCTION_8
0x40025f8	            0x19d2	                            sbb edx, edx	     12953	i386-dis.c	FOR_1	FUNCTION_8
0x40025fa	          0x83e280	                     and edx, 0xffffff80	     12953	i386-dis.c	FOR_1	FUNCTION_8
0x40025fd	    0x81c200010000	                          add edx, 0x100	     12953	i386-dis.c	FOR_1	FUNCTION_8
0x4002603	    0x891500000000	            mov dword [0x04002609], edx 	     12953	i386-dis.c	FOR_1	FUNCTION_8
0x4002609	         0xfb65001	               movzx edx, byte [rax + 1]	     12954	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_7
0x400260d	          0x83e203	                              and edx, 3	     12954	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_7
0x4002610	          0x80fa02	                               cmp dl, 2	     12954	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_7
0x4002613	            0x7416	                            je 0x400262b	     12954	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_7
0x4002615	          0x80fa03	                               cmp dl, 3	     12954	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_7
0x4002618	            0x741d	                            je 0x4002637	     12954	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_7
0x400261a	          0x80fa01	                               cmp dl, 1	     12954	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_7
0x400261d	            0x7522	                           jne 0x4002641	     12954	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_7
0x400261f	    0xc70500000000	           mov dword [0x04002629], 0x66 	     12959	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_7
0x4002629	            0xeb16	                           jmp 0x4002641	     12960	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_7
0x400262b	    0xc70500000000	           mov dword [0x04002635], 0xf3 	     12962	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_7
0x4002635	            0xeb0a	                           jmp 0x4002641	     12963	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_7
0x4002637	    0xc70500000000	           mov dword [0x04002641], 0xf2 	     12965	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_7
0x4002641	    0xc60500000000	                mov byte [0x04002648], 1	     12968	i386-dis.c	FOR_1	FUNCTION_8
0x4002648	    0xc60500000000	                mov byte [0x0400264f], 1	     12969	i386-dis.c	FOR_1	FUNCTION_8
0x400264f	        0x488d7803	                      lea rdi, [rax + 3]	     12971	i386-dis.c	FOR_1	FUNCTION_8
0x4002653	    0x48893d000000	            mov qword [0x0400265a], rdi 	     12971	i386-dis.c	FOR_1	FUNCTION_8
0x400265a	      0x440fb64002	               movzx r8d, byte [rax + 2]	     12971	i386-dis.c	FOR_1	FUNCTION_8
0x400265f	          0x4963d0	                         movsxd rdx, r8d	     12972	i386-dis.c	FOR_1	FUNCTION_8
0x4002662	        0x488d0c52	                  lea rcx, [rdx + rdx*2]	     12972	i386-dis.c	FOR_1	FUNCTION_8
0x4002666	        0x48c1e105	                              shl rcx, 5	     12972	i386-dis.c	FOR_1	FUNCTION_8
0x400266a	          0x4863d6	                         movsxd rdx, esi	     12972	i386-dis.c	FOR_1	FUNCTION_8
0x400266d	        0x488d1452	                  lea rdx, [rdx + rdx*2]	     12972	i386-dis.c	FOR_1	FUNCTION_8
0x4002671	        0x48c1e20d	                            shl rdx, 0xd	     12972	i386-dis.c	FOR_1	FUNCTION_8
0x4002675	    0x488d9c110000	                    lea rbx, [rcx + rdx]	     12972	i386-dis.c	FOR_1	FUNCTION_8
0x400267d	    0x48893d000000	            mov qword [0x04002684], rdi 	     12973	i386-dis.c	FOR_1	FUNCTION_8
0x4002684	            0x85f6	                           test esi, esi	     12975	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x4002686	            0x750a	                           jne 0x4002692	     12975	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x4002688	        0x4183f877	                           cmp r8d, 0x77	     12975	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x400268c	     0xf842b040000	                            je 0x4002abd	     12975	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x4002692	        0x488d7004	                      lea rsi, [rax + 4]	     12977	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x4002696	        0x488b4568	            mov rax, qword [rbp + 0x68] 	     12977	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x400269a	          0x483b30	                    cmp rsi, qword [rax]	     12977	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x400269d	            0x7608	                           jbe 0x40026a7	     12977	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x400269f	          0x4889ef	                            mov rdi, rbp	     12977	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x40026a2	      0xe804f8ffff	                     call sym.fetch_data	     12977	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x40026a7	    0x488b05000000	            mov rax, qword [0x040026ae] 	     12978	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x40026ae	           0xfb600	                   movzx eax, byte [rax]	     12978	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x40026b1	            0x89c2	                            mov edx, eax	     12978	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x40026b3	          0xc0ea06	                               shr dl, 6	     12978	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x40026b6	           0xfb6d2	                           movzx edx, dl	     12978	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x40026b9	    0x891500000000	            mov dword [0x040026bf], edx 	     12978	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x40026bf	            0x89c2	                            mov edx, eax	     12979	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x40026c1	          0xc0ea03	                               shr dl, 3	     12979	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x40026c4	          0x83e207	                              and edx, 7	     12979	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x40026c7	    0x891500000000	            mov dword [0x040026cd], edx 	     12979	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x40026cd	          0x83e007	                              and eax, 7	     12980	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x40026d0	    0x890500000000	            mov dword [0x040026d6], eax 	     12980	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x40026d6	      0xe9e2030000	                           jmp 0x4002abd	     12980	i386-dis.c	FOR_1	FUNCTION_8	IF_13
0x40026db	    0x488b05000000	            mov rax, qword [0x040026e2] 	     12986	i386-dis.c	FOR_1	FUNCTION_8
0x40026e2	        0x488d7002	                      lea rsi, [rax + 2]	     12986	i386-dis.c	FOR_1	FUNCTION_8
0x40026e6	        0x488b4568	            mov rax, qword [rbp + 0x68] 	     12986	i386-dis.c	FOR_1	FUNCTION_8
0x40026ea	          0x483b30	                    cmp rsi, qword [rax]	     12986	i386-dis.c	FOR_1	FUNCTION_8
0x40026ed	            0x7608	                           jbe 0x40026f7	     12986	i386-dis.c	FOR_1	FUNCTION_8
0x40026ef	          0x4889ef	                            mov rdi, rbp	     12986	i386-dis.c	FOR_1	FUNCTION_8
0x40026f2	      0xe8b4f7ffff	                     call sym.fetch_data	     12986	i386-dis.c	FOR_1	FUNCTION_8
0x40026f7	    0x8b0500000000	            mov eax, dword [0x040026fd] 	     12988	i386-dis.c	FOR_1	FUNCTION_8
0x40026fd	    0x890500000000	            mov dword [0x04002703], eax 	     12988	i386-dis.c	FOR_1	FUNCTION_8
0x4002703	    0x488b15000000	            mov rdx, qword [0x0400270a] 	     12989	i386-dis.c	FOR_1	FUNCTION_8
0x400270a	           0xfb602	                   movzx eax, byte [rdx]	     12989	i386-dis.c	FOR_1	FUNCTION_8
0x400270d	           0xfbec8	                           movsx ecx, al	     12989	i386-dis.c	FOR_1	FUNCTION_8
0x4002710	          0xc1f91f	                           sar ecx, 0x1f	     12989	i386-dis.c	FOR_1	FUNCTION_8
0x4002713	            0xf7d1	                                 not ecx	     12989	i386-dis.c	FOR_1	FUNCTION_8
0x4002715	          0x83e104	                              and ecx, 4	     12989	i386-dis.c	FOR_1	FUNCTION_8
0x4002718	    0x890d00000000	            mov dword [0x0400271e], ecx 	     12989	i386-dis.c	FOR_1	FUNCTION_8
0x400271e	          0xc0e803	                               shr al, 3	     12993	i386-dis.c	FOR_1	FUNCTION_8
0x4002721	            0xf7d0	                                 not eax	     12993	i386-dis.c	FOR_1	FUNCTION_8
0x4002723	          0x83e00f	                            and eax, 0xf	     12993	i386-dis.c	FOR_1	FUNCTION_8
0x4002726	    0x890500000000	            mov dword [0x0400272c], eax 	     12993	i386-dis.c	FOR_1	FUNCTION_8
0x400272c	           0xfb602	                   movzx eax, byte [rdx]	     12994	i386-dis.c	FOR_1	FUNCTION_8
0x400272f	          0x83e004	                              and eax, 4	     12994	i386-dis.c	FOR_1	FUNCTION_8
0x4002732	            0x3c01	                               cmp al, 1	     12994	i386-dis.c	FOR_1	FUNCTION_8
0x4002734	            0x19c0	                            sbb eax, eax	     12994	i386-dis.c	FOR_1	FUNCTION_8
0x4002736	          0x83e080	                     and eax, 0xffffff80	     12994	i386-dis.c	FOR_1	FUNCTION_8
0x4002739	       0x500010000	                          add eax, 0x100	     12994	i386-dis.c	FOR_1	FUNCTION_8
0x400273e	    0x890500000000	            mov dword [0x04002744], eax 	     12994	i386-dis.c	FOR_1	FUNCTION_8
0x4002744	           0xfb602	                   movzx eax, byte [rdx]	     12995	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_8
0x4002747	          0x83e003	                              and eax, 3	     12995	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_8
0x400274a	            0x3c02	                               cmp al, 2	     12995	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_8
0x400274c	            0x7414	                            je 0x4002762	     12995	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_8
0x400274e	            0x3c03	                               cmp al, 3	     12995	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_8
0x4002750	            0x741c	                            je 0x400276e	     12995	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_8
0x4002752	            0x3c01	                               cmp al, 1	     12995	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_8
0x4002754	            0x7522	                           jne 0x4002778	     12995	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_8
0x4002756	    0xc70500000000	           mov dword [0x04002760], 0x66 	     13000	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_8
0x4002760	            0xeb16	                           jmp 0x4002778	     13001	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_8
0x4002762	    0xc70500000000	           mov dword [0x0400276c], 0xf3 	     13003	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_8
0x400276c	            0xeb0a	                           jmp 0x4002778	     13004	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_8
0x400276e	    0xc70500000000	           mov dword [0x04002778], 0xf2 	     13006	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_8
0x4002778	    0xc60500000000	                mov byte [0x0400277f], 1	     13009	i386-dis.c	FOR_1	FUNCTION_8
0x400277f	    0xc60500000000	                mov byte [0x04002786], 1	     13010	i386-dis.c	FOR_1	FUNCTION_8
0x4002786	        0x488d7a02	                      lea rdi, [rdx + 2]	     13012	i386-dis.c	FOR_1	FUNCTION_8
0x400278a	    0x48893d000000	            mov qword [0x04002791], rdi 	     13012	i386-dis.c	FOR_1	FUNCTION_8
0x4002791	         0xfb67201	               movzx esi, byte [rdx + 1]	     13012	i386-dis.c	FOR_1	FUNCTION_8
0x4002795	          0x4863c6	                         movsxd rax, esi	     13013	i386-dis.c	FOR_1	FUNCTION_8
0x4002798	        0x488d0c40	                  lea rcx, [rax + rax*2]	     13013	i386-dis.c	FOR_1	FUNCTION_8
0x400279c	        0x48c1e105	                              shl rcx, 5	     13013	i386-dis.c	FOR_1	FUNCTION_8
0x40027a0	        0x48634320	         movsxd rax, dword [rbx + 0x20] 	     13013	i386-dis.c	FOR_1	FUNCTION_8
0x40027a4	        0x488d0440	                  lea rax, [rax + rax*2]	     13013	i386-dis.c	FOR_1	FUNCTION_8
0x40027a8	        0x48c1e00d	                            shl rax, 0xd	     13013	i386-dis.c	FOR_1	FUNCTION_8
0x40027ac	    0x488d9c010000	                    lea rbx, [rcx + rax]	     13013	i386-dis.c	FOR_1	FUNCTION_8
0x40027b4	    0x48893d000000	            mov qword [0x040027bb], rdi 	     13014	i386-dis.c	FOR_1	FUNCTION_8
0x40027bb	          0x83fe77	                           cmp esi, 0x77	     13016	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x40027be	     0xf84f9020000	                            je 0x4002abd	     13016	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x40027c4	        0x488d7203	                      lea rsi, [rdx + 3]	     13018	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x40027c8	        0x488b4568	            mov rax, qword [rbp + 0x68] 	     13018	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x40027cc	          0x483b30	                    cmp rsi, qword [rax]	     13018	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x40027cf	            0x7608	                           jbe 0x40027d9	     13018	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x40027d1	          0x4889ef	                            mov rdi, rbp	     13018	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x40027d4	      0xe8d2f6ffff	                     call sym.fetch_data	     13018	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x40027d9	    0x488b05000000	            mov rax, qword [0x040027e0] 	     13019	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x40027e0	           0xfb600	                   movzx eax, byte [rax]	     13019	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x40027e3	            0x89c2	                            mov edx, eax	     13019	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x40027e5	          0xc0ea06	                               shr dl, 6	     13019	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x40027e8	           0xfb6d2	                           movzx edx, dl	     13019	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x40027eb	    0x891500000000	            mov dword [0x040027f1], edx 	     13019	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x40027f1	            0x89c2	                            mov edx, eax	     13020	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x40027f3	          0xc0ea03	                               shr dl, 3	     13020	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x40027f6	          0x83e207	                              and edx, 7	     13020	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x40027f9	    0x891500000000	            mov dword [0x040027ff], edx 	     13020	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x40027ff	          0x83e007	                              and eax, 7	     13021	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x4002802	    0x890500000000	            mov dword [0x04002808], eax 	     13021	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x4002808	      0xe9b0020000	                           jmp 0x4002abd	     13021	i386-dis.c	FOR_1	FUNCTION_8	IF_14
0x400280d	    0x803d00000000	                cmp byte [0x04002814], 0	     13026	i386-dis.c	FOR_1	FUNCTION_8	IF_15
0x4002814	            0x7505	                           jne 0x400281b	     13026	i386-dis.c	FOR_1	FUNCTION_8	IF_15
0x4002816	      0xe800000000	                          call 0x400281b	     13027	i386-dis.c	FOR_1	FUNCTION_8	CALL_4
0x400281b	    0x833d00000000	               cmp dword [0x04002822], 0	     13029	i386-dis.c	FOR_1	FUNCTION_8
0x4002822	           0xf95c0	                                setne al	     13029	i386-dis.c	FOR_1	FUNCTION_8
0x4002825	           0xfb6c0	                           movzx eax, al	     13029	i386-dis.c	FOR_1	FUNCTION_8
0x4002828	        0x488d1400	                    lea rdx, [rax + rax]	     13029	i386-dis.c	FOR_1	FUNCTION_8
0x400282c	          0x4801d0	                            add rax, rdx	     13029	i386-dis.c	FOR_1	FUNCTION_8
0x400282f	        0x48c1e005	                              shl rax, 5	     13029	i386-dis.c	FOR_1	FUNCTION_8
0x4002833	        0x48635720	         movsxd rdx, dword [rdi + 0x20] 	     13029	i386-dis.c	FOR_1	FUNCTION_8
0x4002837	        0x488d1452	                  lea rdx, [rdx + rdx*2]	     13029	i386-dis.c	FOR_1	FUNCTION_8
0x400283b	        0x48c1e206	                              shl rdx, 6	     13029	i386-dis.c	FOR_1	FUNCTION_8
0x400283f	    0x488d9c100000	                    lea rbx, [rax + rdx]	     13029	i386-dis.c	FOR_1	FUNCTION_8
0x4002847	      0xe971020000	                           jmp 0x4002abd	     13030	i386-dis.c	FOR_1	FUNCTION_8
0x400284c	    0xc70500000000	               mov dword [0x04002856], 0	     13033	i386-dis.c	FOR_1	FUNCTION_8
0x4002856	    0xc70500000000	               mov dword [0x04002860], 1	     13035	i386-dis.c	FOR_1	FUNCTION_8
0x4002860	    0x488b05000000	            mov rax, qword [0x04002867] 	     13036	i386-dis.c	FOR_1	FUNCTION_8
0x4002867	        0x488d7004	                      lea rsi, [rax + 4]	     13036	i386-dis.c	FOR_1	FUNCTION_8
0x400286b	        0x488b4568	            mov rax, qword [rbp + 0x68] 	     13036	i386-dis.c	FOR_1	FUNCTION_8
0x400286f	          0x483b30	                    cmp rsi, qword [rax]	     13036	i386-dis.c	FOR_1	FUNCTION_8
0x4002872	            0x7608	                           jbe 0x400287c	     13036	i386-dis.c	FOR_1	FUNCTION_8
0x4002874	          0x4889ef	                            mov rdi, rbp	     13036	i386-dis.c	FOR_1	FUNCTION_8
0x4002877	      0xe82ff6ffff	                     call sym.fetch_data	     13036	i386-dis.c	FOR_1	FUNCTION_8
0x400287c	    0x8b0500000000	            mov eax, dword [0x04002882] 	     13038	i386-dis.c	FOR_1	FUNCTION_8
0x4002882	    0x890500000000	            mov dword [0x04002888], eax 	     13038	i386-dis.c	FOR_1	FUNCTION_8
0x4002888	    0x488b15000000	            mov rdx, qword [0x0400288f] 	     13040	i386-dis.c	FOR_1	FUNCTION_8
0x400288f	           0xfb602	                   movzx eax, byte [rdx]	     13040	i386-dis.c	FOR_1	FUNCTION_8
0x4002892	            0x89c1	                            mov ecx, eax	     13040	i386-dis.c	FOR_1	FUNCTION_8
0x4002894	          0xc0e905	                               shr cl, 5	     13040	i386-dis.c	FOR_1	FUNCTION_8
0x4002897	            0xf7d1	                                 not ecx	     13040	i386-dis.c	FOR_1	FUNCTION_8
0x4002899	          0x83e107	                              and ecx, 7	     13040	i386-dis.c	FOR_1	FUNCTION_8
0x400289c	    0x890d00000000	            mov dword [0x040028a2], ecx 	     13040	i386-dis.c	FOR_1	FUNCTION_8
0x40028a2	          0x83e010	                           and eax, 0x10	     13041	i386-dis.c	FOR_1	FUNCTION_8
0x40028a5	           0xfb6c0	                           movzx eax, al	     13041	i386-dis.c	FOR_1	FUNCTION_8
0x40028a8	    0x890500000000	            mov dword [0x040028ae], eax 	     13041	i386-dis.c	FOR_1	FUNCTION_8
0x40028ae	           0xfb602	                   movzx eax, byte [rdx]	     13042	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_9
0x40028b1	          0x83e00f	                            and eax, 0xf	     13042	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_9
0x40028b4	            0x3c02	                               cmp al, 2	     13042	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_9
0x40028b6	            0x740e	                            je 0x40028c6	     13042	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_9
0x40028b8	            0x3c03	                               cmp al, 3	     13042	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_9
0x40028ba	            0x7411	                            je 0x40028cd	     13042	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_9
0x40028bc	            0x3c01	                               cmp al, 1	     13042	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_9
0x40028be	     0xf851d020000	                           jne 0x4002ae1	     13042	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_9
0x40028c4	            0xeb0e	                           jmp 0x40028d4	     13042	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_9
0x40028c6	      0xbe01000000	                              mov esi, 1	     13050	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_9
0x40028cb	            0xeb0c	                           jmp 0x40028d9	     13050	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_9
0x40028cd	      0xbe02000000	                              mov esi, 2	     13053	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_9
0x40028d2	            0xeb05	                           jmp 0x40028d9	     13054	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_9
0x40028d4	      0xbe00000000	                              mov esi, 0	     13047	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_9
0x40028d9	        0x488d4201	                      lea rax, [rdx + 1]	     13058	i386-dis.c	FOR_1	FUNCTION_8
0x40028dd	    0x488905000000	            mov qword [0x040028e4], rax 	     13058	i386-dis.c	FOR_1	FUNCTION_8
0x40028e4	         0xfb64201	               movzx eax, byte [rdx + 1]	     13059	i386-dis.c	FOR_1	FUNCTION_8
0x40028e8	          0x83e080	                     and eax, 0xffffff80	     13059	i386-dis.c	FOR_1	FUNCTION_8
0x40028eb	           0xfb6c0	                           movzx eax, al	     13059	i386-dis.c	FOR_1	FUNCTION_8
0x40028ee	    0x890500000000	            mov dword [0x040028f4], eax 	     13059	i386-dis.c	FOR_1	FUNCTION_8
0x40028f4	            0x85c0	                           test eax, eax	     13060	i386-dis.c	FOR_1	FUNCTION_8	IF_16
0x40028f6	            0x7412	                            je 0x400290a	     13060	i386-dis.c	FOR_1	FUNCTION_8	IF_16
0x40028f8	    0x833d00000000	               cmp dword [0x040028ff], 2	     13060	i386-dis.c	FOR_1	FUNCTION_8	IF_16
0x40028ff	            0x7509	                           jne 0x400290a	     13060	i386-dis.c	FOR_1	FUNCTION_8	IF_16
0x4002901	          0x83c908	                               or ecx, 8	     13061	i386-dis.c	FOR_1	FUNCTION_8	IF_16
0x4002904	    0x890d00000000	            mov dword [0x0400290a], ecx 	     13061	i386-dis.c	FOR_1	FUNCTION_8	IF_16
0x400290a	         0xfb64201	               movzx eax, byte [rdx + 1]	     13063	i386-dis.c	FOR_1	FUNCTION_8
0x400290e	          0xc0e803	                               shr al, 3	     13063	i386-dis.c	FOR_1	FUNCTION_8
0x4002911	            0xf7d0	                                 not eax	     13063	i386-dis.c	FOR_1	FUNCTION_8
0x4002913	          0x83e00f	                            and eax, 0xf	     13063	i386-dis.c	FOR_1	FUNCTION_8
0x4002916	    0x890500000000	            mov dword [0x0400291c], eax 	     13063	i386-dis.c	FOR_1	FUNCTION_8
0x400291c	         0xfb64a01	               movzx ecx, byte [rdx + 1]	     13066	i386-dis.c	FOR_1	FUNCTION_8	IF_17
0x4002920	      0xb800000000	                              mov eax, 0	     13067	i386-dis.c	FOR_1	FUNCTION_8	IF_17
0x4002925	          0xf6c104	                              test cl, 4	     13066	i386-dis.c	FOR_1	FUNCTION_8	IF_17
0x4002928	     0xf84f2010000	                            je 0x4002b20	     13066	i386-dis.c	FOR_1	FUNCTION_8	IF_17
0x400292e	          0x83e103	                              and ecx, 3	     13069	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_10
0x4002931	          0x80f902	                               cmp cl, 2	     13069	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_10
0x4002934	            0x7416	                            je 0x400294c	     13069	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_10
0x4002936	          0x80f903	                               cmp cl, 3	     13069	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_10
0x4002939	            0x741d	                            je 0x4002958	     13069	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_10
0x400293b	          0x80f901	                               cmp cl, 1	     13069	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_10
0x400293e	            0x7522	                           jne 0x4002962	     13069	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_10
0x4002940	    0xc70500000000	           mov dword [0x0400294a], 0x66 	     13074	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_10
0x400294a	            0xeb16	                           jmp 0x4002962	     13075	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_10
0x400294c	    0xc70500000000	           mov dword [0x04002956], 0xf3 	     13077	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_10
0x4002956	            0xeb0a	                           jmp 0x4002962	     13078	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_10
0x4002958	    0xc70500000000	           mov dword [0x04002962], 0xf2 	     13080	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_10
0x4002962	        0x488d4202	                      lea rax, [rdx + 2]	     13085	i386-dis.c	FOR_1	FUNCTION_8
0x4002966	    0x488905000000	            mov qword [0x0400296d], rax 	     13085	i386-dis.c	FOR_1	FUNCTION_8
0x400296d	         0xfb64202	               movzx eax, byte [rdx + 2]	     13088	i386-dis.c	FOR_1	FUNCTION_8
0x4002971	          0xc0e805	                               shr al, 5	     13088	i386-dis.c	FOR_1	FUNCTION_8
0x4002974	          0x83e003	                              and eax, 3	     13088	i386-dis.c	FOR_1	FUNCTION_8
0x4002977	    0x890500000000	            mov dword [0x0400297d], eax 	     13088	i386-dis.c	FOR_1	FUNCTION_8
0x400297d	         0xfb64202	               movzx eax, byte [rdx + 2]	     13089	i386-dis.c	FOR_1	FUNCTION_8
0x4002981	          0xc0e804	                               shr al, 4	     13089	i386-dis.c	FOR_1	FUNCTION_8
0x4002984	          0x83e001	                              and eax, 1	     13089	i386-dis.c	FOR_1	FUNCTION_8
0x4002987	    0x890500000000	            mov dword [0x0400298d], eax 	     13089	i386-dis.c	FOR_1	FUNCTION_8
0x400298d	         0xfb64202	               movzx eax, byte [rdx + 2]	     13091	i386-dis.c	FOR_1	FUNCTION_8
0x4002991	          0x83e008	                              and eax, 8	     13091	i386-dis.c	FOR_1	FUNCTION_8
0x4002994	           0xfb6c0	                           movzx eax, al	     13091	i386-dis.c	FOR_1	FUNCTION_8
0x4002997	    0x890500000000	            mov dword [0x0400299d], eax 	     13091	i386-dis.c	FOR_1	FUNCTION_8
0x400299d	         0xfb64202	               movzx eax, byte [rdx + 2]	     13092	i386-dis.c	FOR_1	FUNCTION_8
0x40029a1	          0x83e007	                              and eax, 7	     13092	i386-dis.c	FOR_1	FUNCTION_8
0x40029a4	    0x890500000000	            mov dword [0x040029aa], eax 	     13092	i386-dis.c	FOR_1	FUNCTION_8
0x40029aa	         0xfb64202	               movzx eax, byte [rdx + 2]	     13093	i386-dis.c	FOR_1	FUNCTION_8
0x40029ae	          0x83e080	                     and eax, 0xffffff80	     13093	i386-dis.c	FOR_1	FUNCTION_8
0x40029b1	           0xfb6c0	                           movzx eax, al	     13093	i386-dis.c	FOR_1	FUNCTION_8
0x40029b4	    0x890500000000	            mov dword [0x040029ba], eax 	     13093	i386-dis.c	FOR_1	FUNCTION_8
0x40029ba	    0x833d00000000	               cmp dword [0x040029c1], 2	     13095	i386-dis.c	FOR_1	FUNCTION_8	IF_18
0x40029c1	            0x741b	                            je 0x40029de	     13095	i386-dis.c	FOR_1	FUNCTION_8	IF_18
0x40029c3	    0x832500000000	      and dword [0x040029ca], 0xfffffffe	     13098	i386-dis.c	FOR_1	FUNCTION_8	IF_18
0x40029ca	    0xc70500000000	               mov dword [0x040029d4], 1	     13099	i386-dis.c	FOR_1	FUNCTION_8	IF_18
0x40029d4	    0xc70500000000	               mov dword [0x040029de], 1	     13100	i386-dis.c	FOR_1	FUNCTION_8	IF_18
0x40029de	    0xc60500000000	                mov byte [0x040029e5], 1	     13103	i386-dis.c	FOR_1	FUNCTION_8
0x40029e5	    0xc60500000000	                mov byte [0x040029ec], 1	     13104	i386-dis.c	FOR_1	FUNCTION_8
0x40029ec	        0x488d7a04	                      lea rdi, [rdx + 4]	     13106	i386-dis.c	FOR_1	FUNCTION_8
0x40029f0	    0x48893d000000	            mov qword [0x040029f7], rdi 	     13106	i386-dis.c	FOR_1	FUNCTION_8
0x40029f7	         0xfb64203	               movzx eax, byte [rdx + 3]	     13107	i386-dis.c	FOR_1	FUNCTION_8
0x40029fb	        0x488d0c40	                  lea rcx, [rax + rax*2]	     13107	i386-dis.c	FOR_1	FUNCTION_8
0x40029ff	        0x48c1e105	                              shl rcx, 5	     13107	i386-dis.c	FOR_1	FUNCTION_8
0x4002a03	          0x4863f6	                         movsxd rsi, esi	     13107	i386-dis.c	FOR_1	FUNCTION_8
0x4002a06	        0x488d0476	                  lea rax, [rsi + rsi*2]	     13107	i386-dis.c	FOR_1	FUNCTION_8
0x4002a0a	        0x48c1e00d	                            shl rax, 0xd	     13107	i386-dis.c	FOR_1	FUNCTION_8
0x4002a0e	    0x488d9c010000	                    lea rbx, [rcx + rax]	     13107	i386-dis.c	FOR_1	FUNCTION_8
0x4002a16	    0x48893d000000	            mov qword [0x04002a1d], rdi 	     13108	i386-dis.c	FOR_1	FUNCTION_8
0x4002a1d	        0x488d7205	                      lea rsi, [rdx + 5]	     13109	i386-dis.c	FOR_1	FUNCTION_8
0x4002a21	        0x488b4568	            mov rax, qword [rbp + 0x68] 	     13109	i386-dis.c	FOR_1	FUNCTION_8
0x4002a25	          0x483b30	                    cmp rsi, qword [rax]	     13109	i386-dis.c	FOR_1	FUNCTION_8
0x4002a28	            0x7608	                           jbe 0x4002a32	     13109	i386-dis.c	FOR_1	FUNCTION_8
0x4002a2a	          0x4889ef	                            mov rdi, rbp	     13109	i386-dis.c	FOR_1	FUNCTION_8
0x4002a2d	      0xe879f4ffff	                     call sym.fetch_data	     13109	i386-dis.c	FOR_1	FUNCTION_8
0x4002a32	    0x488b05000000	            mov rax, qword [0x04002a39] 	     13110	i386-dis.c	FOR_1	FUNCTION_8
0x4002a39	           0xfb600	                   movzx eax, byte [rax]	     13110	i386-dis.c	FOR_1	FUNCTION_8
0x4002a3c	            0x89c2	                            mov edx, eax	     13110	i386-dis.c	FOR_1	FUNCTION_8
0x4002a3e	          0xc0ea06	                               shr dl, 6	     13110	i386-dis.c	FOR_1	FUNCTION_8
0x4002a41	           0xfb6d2	                           movzx edx, dl	     13110	i386-dis.c	FOR_1	FUNCTION_8
0x4002a44	    0x891500000000	            mov dword [0x04002a4a], edx 	     13110	i386-dis.c	FOR_1	FUNCTION_8
0x4002a4a	            0x89c1	                            mov ecx, eax	     13111	i386-dis.c	FOR_1	FUNCTION_8
0x4002a4c	          0xc0e903	                               shr cl, 3	     13111	i386-dis.c	FOR_1	FUNCTION_8
0x4002a4f	          0x83e107	                              and ecx, 7	     13111	i386-dis.c	FOR_1	FUNCTION_8
0x4002a52	    0x890d00000000	            mov dword [0x04002a58], ecx 	     13111	i386-dis.c	FOR_1	FUNCTION_8
0x4002a58	          0x83e007	                              and eax, 7	     13112	i386-dis.c	FOR_1	FUNCTION_8
0x4002a5b	    0x890500000000	            mov dword [0x04002a61], eax 	     13112	i386-dis.c	FOR_1	FUNCTION_8
0x4002a61	          0x83fa03	                              cmp edx, 3	     13115	i386-dis.c	FOR_1	FUNCTION_8	IF_19
0x4002a64	            0x7515	                           jne 0x4002a7b	     13115	i386-dis.c	FOR_1	FUNCTION_8	IF_19
0x4002a66	    0x833d00000000	               cmp dword [0x04002a6d], 0	     13115	i386-dis.c	FOR_1	FUNCTION_8	IF_19
0x4002a6d	            0x740c	                            je 0x4002a7b	     13115	i386-dis.c	FOR_1	FUNCTION_8	IF_19
0x4002a6f	    0xc70500000000	          mov dword [0x04002a79], 0x200 	     13116	i386-dis.c	FOR_1	FUNCTION_8	IF_19
0x4002a79	            0xeb42	                           jmp 0x4002abd	     13116	i386-dis.c	FOR_1	FUNCTION_8	IF_19
0x4002a7b	    0x8b0500000000	            mov eax, dword [0x04002a81] 	     13119	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x4002a81	          0x83f801	                              cmp eax, 1	     13119	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x4002a84	            0x7415	                            je 0x4002a9b	     13119	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x4002a86	          0x83f802	                              cmp eax, 2	     13119	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x4002a89	            0x741c	                            je 0x4002aa7	     13119	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x4002a8b	            0x85c0	                           test eax, eax	     13119	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x4002a8d	            0x7559	                           jne 0x4002ae8	     13119	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x4002a8f	    0xc70500000000	           mov dword [0x04002a99], 0x80 	     13122	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x4002a99	            0xeb22	                           jmp 0x4002abd	     13123	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x4002a9b	    0xc70500000000	          mov dword [0x04002aa5], 0x100 	     13125	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x4002aa5	            0xeb16	                           jmp 0x4002abd	     13126	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x4002aa7	    0xc70500000000	          mov dword [0x04002ab1], 0x200 	     13128	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x4002ab1	            0xeb0a	                           jmp 0x4002abd	     13129	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x4002ab3	      0xe800000000	                          call 0x4002ab8	     13141	i386-dis.c	FOR_1	FUNCTION_8	CALL_5
0x4002ab8	      0xbb00000000	                              mov ebx, 0	     13137	i386-dis.c	FOR_1	FUNCTION_8
0x4002abd	          0x4889d8	                            mov rax, rbx	     13145	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_1	IF_20
0x4002ac0	        0x48833b00	                      cmp qword [rbx], 0	     13144	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_1	IF_20
0x4002ac4	            0x755a	                           jne 0x4002b20	     13144	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_1	IF_20
0x4002ac6	          0x4889ee	                            mov rsi, rbp	     13147	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_1	CALL_6
0x4002ac9	          0x4889df	                            mov rdi, rbx	     13147	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_1	CALL_6
0x4002acc	      0xe8f2f5ffff	               call sym.get_valid_dis386	     13147	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_1	CALL_6
0x4002ad1	            0xeb4d	                           jmp 0x4002b20	     13147	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_1	CALL_6
0x4002ad3	      0xb800000000	                              mov eax, 0	     12866	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_4
0x4002ad8	            0xeb46	                           jmp 0x4002b20	     12866	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_4
0x4002ada	      0xb800000000	                              mov eax, 0	     12927	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_6
0x4002adf	            0xeb3f	                           jmp 0x4002b20	     12927	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_6
0x4002ae1	      0xb800000000	                              mov eax, 0	     13045	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_9
0x4002ae6	            0xeb38	                           jmp 0x4002b20	     13045	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_9
0x4002ae8	      0xb800000000	                              mov eax, 0	     13131	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x4002aed	            0xeb31	                           jmp 0x4002b20	     13131	i386-dis.c	FOR_1	FUNCTION_8	ELSE_4	SWITCH_11
0x4002aef	    0x440905000000	              or dword [0x04002af6], r8d	     12813	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_7
0x4002af6	          0x4863d2	                         movsxd rdx, edx	     12814	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_7
0x4002af9	    0xc70495000000	                    mov dword [rdx*4], 0	     12814	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_7
0x4002b04	      0xe940f7ffff	                           jmp 0x4002249	     12814	i386-dis.c	FOR_1	FUNCTION_8	ELSE_1	IF_7
0x4002b09	         0xfb64801	               movzx ecx, byte [rax + 1]	     12882	i386-dis.c	FOR_1	FUNCTION_8
0x4002b0d	          0xc0e903	                               shr cl, 3	     12882	i386-dis.c	FOR_1	FUNCTION_8
0x4002b10	            0xf7d1	                                 not ecx	     12882	i386-dis.c	FOR_1	FUNCTION_8
0x4002b12	          0x83e10f	                            and ecx, 0xf	     12882	i386-dis.c	FOR_1	FUNCTION_8
0x4002b15	    0x890d00000000	            mov dword [0x04002b1b], ecx 	     12882	i386-dis.c	FOR_1	FUNCTION_8
0x4002b1b	      0xe92ef9ffff	                           jmp 0x400244e	     12882	i386-dis.c	FOR_1	FUNCTION_8
0x4002b20	        0x4883c408	                              add rsp, 8	     13148	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_1
0x4002b24	              0x5b	                                 pop rbx	     13148	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_1
0x4002b25	              0x5d	                                 pop rbp	     13148	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_1
0x4002b26	            0xf3c3	                                     ret	     13148	i386-dis.c	FOR_1	FUNCTION_8	SWITCH_1
VPCOM_Fixup	CALL,3:FOR,0:SWITCH,0:WHILE,0:ELSE,2:DO,0:IF,2:functions,0	61
0x4003083	              0x53	                                push rbx	     17734	i386-dis.c	FUNCTION_94
0x4003084	        0x4883ec10	                           sub rsp, 0x10	     17734	i386-dis.c	FUNCTION_94
0x4003088	    0x64488b042528	                mov rax, qword fs:[0x28]	     17734	i386-dis.c	FUNCTION_94
0x4003091	      0x4889442408	                mov qword [rsp + 8], rax	     17734	i386-dis.c	FUNCTION_94
0x4003096	            0x31c0	                            xor eax, eax	     17734	i386-dis.c	FUNCTION_94
0x4003098	    0x488b05000000	            mov rax, qword [0x0400309f] 	     17737	i386-dis.c	FUNCTION_94
0x400309f	        0x488d7001	                      lea rsi, [rax + 1]	     17737	i386-dis.c	FUNCTION_94
0x40030a3	    0x488b3d000000	            mov rdi, qword [0x040030aa] 	     17737	i386-dis.c	FUNCTION_94
0x40030aa	        0x488b4768	            mov rax, qword [rdi + 0x68] 	     17737	i386-dis.c	FUNCTION_94
0x40030ae	          0x483b30	                    cmp rsi, qword [rax]	     17737	i386-dis.c	FUNCTION_94
0x40030b1	            0x7605	                           jbe 0x40030b8	     17737	i386-dis.c	FUNCTION_94
0x40030b3	      0xe8f3edffff	                     call sym.fetch_data	     17737	i386-dis.c	FUNCTION_94
0x40030b8	    0x488b05000000	            mov rax, qword [0x040030bf] 	     17738	i386-dis.c	FUNCTION_94
0x40030bf	        0x488d5001	                      lea rdx, [rax + 1]	     17738	i386-dis.c	FUNCTION_94
0x40030c3	    0x488915000000	            mov qword [0x040030ca], rdx 	     17738	i386-dis.c	FUNCTION_94
0x40030ca	           0xfb610	                   movzx edx, byte [rax]	     17738	i386-dis.c	FUNCTION_94
0x40030cd	           0xfb6c2	                           movzx eax, dl	     17738	i386-dis.c	FUNCTION_94
0x40030d0	          0x83f807	                              cmp eax, 7	     17739	i386-dis.c	FUNCTION_94	IF_1	CALL_1
0x40030d3	            0x7774	                            ja 0x4003149	     17739	i386-dis.c	FUNCTION_94	IF_1	CALL_1
0x40030d5	    0x488b15000000	            mov rdx, qword [0x040030dc] 	     17742	i386-dis.c	FUNCTION_94	IF_1
0x40030dc	         0xfb64afe	               movzx ecx, byte [rdx - 2]	     17745	i386-dis.c	FUNCTION_94	IF_1	IF_2
0x40030e0	          0x80f96d	                            cmp cl, 0x6d	     17745	i386-dis.c	FUNCTION_94	IF_1	IF_2
0x40030e3	            0x7512	                           jne 0x40030f7	     17745	i386-dis.c	FUNCTION_94	IF_1	IF_2
0x40030e5	        0x488d7aff	                      lea rdi, [rdx - 1]	     17747	i386-dis.c	FUNCTION_94	IF_1	IF_2
0x40030e9	         0xfb652ff	               movzx edx, byte [rdx - 1]	     17748	i386-dis.c	FUNCTION_94	IF_1	IF_2
0x40030ed	          0x881424	                      mov byte [rsp], dl	     17748	i386-dis.c	FUNCTION_94	IF_1	IF_2
0x40030f0	      0xc644240100	                   mov byte [rsp + 1], 0	     17749	i386-dis.c	FUNCTION_94	IF_1	IF_2
0x40030f5	            0xeb14	                           jmp 0x400310b	     17749	i386-dis.c	FUNCTION_94	IF_1	IF_2
0x40030f7	        0x488d7afe	                      lea rdi, [rdx - 2]	     17742	i386-dis.c	FUNCTION_94	IF_1
0x40030fb	          0x880c24	                      mov byte [rsp], cl	     17753	i386-dis.c	FUNCTION_94	IF_1	ELSE_1
0x40030fe	         0xfb652ff	               movzx edx, byte [rdx - 1]	     17754	i386-dis.c	FUNCTION_94	IF_1	ELSE_1
0x4003102	        0x88542401	                  mov byte [rsp + 1], dl	     17754	i386-dis.c	FUNCTION_94	IF_1	ELSE_1
0x4003106	      0xc644240200	                   mov byte [rsp + 2], 0	     17755	i386-dis.c	FUNCTION_94	IF_1	ELSE_1
0x400310b	            0x89c0	                            mov eax, eax	     17758	i386-dis.c	FUNCTION_94	IF_1
0x400310d	        0x48c1e004	                              shl rax, 4	     17758	i386-dis.c	FUNCTION_94	IF_1
0x4003111	    0x488d98000000	                          lea rbx, [rax]	     17758	i386-dis.c	FUNCTION_94	IF_1
0x4003118	          0x4989e1	                             mov r9, rsp	        33	stdio2.h	FUNCTION_101	CALL_1
0x400311b	    0x4c8b80000000	                     mov r8, qword [rax]	        33	stdio2.h	FUNCTION_101	CALL_1
0x4003122	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_101	CALL_1
0x4003127	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_101	CALL_1
0x400312e	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_101	CALL_1
0x4003133	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_101	CALL_1
0x4003138	      0xe800000000	                          call 0x400313d	        33	stdio2.h	FUNCTION_101	CALL_1
0x400313d	          0x8b4308	                mov eax, dword [rbx + 8]	     17759	i386-dis.c	FUNCTION_94	IF_1
0x4003140	    0x480105000000	            add qword [0x04003147], rax 	     17759	i386-dis.c	FUNCTION_94	IF_1
0x4003147	            0xeb2a	                           jmp 0x4003173	     17759	i386-dis.c	FUNCTION_94	IF_1
0x4003149	    0xc60500000000	            mov byte [0x04003150], 0x24 	     17764	i386-dis.c	FUNCTION_94	ELSE_2
0x4003150	           0xfb6d2	                           movzx edx, dl	     17765	i386-dis.c	FUNCTION_94	ELSE_2	CALL_2
0x4003153	      0xbe01000000	                              mov esi, 1	     17765	i386-dis.c	FUNCTION_94	ELSE_2	CALL_2
0x4003158	      0xbf00000000	                              mov edi, 0	     17765	i386-dis.c	FUNCTION_94	ELSE_2	CALL_2
0x400315d	      0xe893e8ffff	            call sym.print_operand_value	     17765	i386-dis.c	FUNCTION_94	ELSE_2	CALL_2
0x4003162	      0xbf00000000	                              mov edi, 0	     17766	i386-dis.c	FUNCTION_94	ELSE_2	CALL_3
0x4003167	      0xe850fbffff	            call sym.oappend_maybe_intel	     17766	i386-dis.c	FUNCTION_94	ELSE_2	CALL_3
0x400316c	    0xc60500000000	                mov byte [0x04003173], 0	     17767	i386-dis.c	FUNCTION_94	ELSE_2
0x4003173	      0x488b442408	                mov rax, qword [rsp + 8]	     17769	i386-dis.c	FUNCTION_94
0x4003178	    0x644833042528	                xor rax, qword fs:[0x28]	     17769	i386-dis.c	FUNCTION_94
0x4003181	            0x7405	                            je 0x4003188	     17769	i386-dis.c	FUNCTION_94
0x4003183	      0xe800000000	                          call 0x4003188	     17769	i386-dis.c	FUNCTION_94
0x4003188	        0x4883c410	                           add rsp, 0x10	     17769	i386-dis.c	FUNCTION_94
0x400318c	              0x5b	                                 pop rbx	     17769	i386-dis.c	FUNCTION_94
0x400318d	              0xc3	                                     ret	     17769	i386-dis.c	FUNCTION_94
OP_Vex_2src	CALL,2:FOR,0:SWITCH,0:WHILE,0:ELSE,1:DO,0:IF,3:functions,0	28
0x4005a2c	        0x4883ec08	                              sub rsp, 8	     17445	i386-dis.c	FUNCTION_83
0x4005a30	    0x833d00000000	               cmp dword [0x04005a37], 3	     17446	i386-dis.c	FUNCTION_83	IF_1
0x4005a37	            0x752d	                           jne 0x4005a66	     17446	i386-dis.c	FUNCTION_83	IF_1
0x4005a39	    0x8b0500000000	            mov eax, dword [0x04005a3f] 	     17448	i386-dis.c	FUNCTION_83	IF_1
0x4005a3f	    0xf60500000000	               test byte [0x04005a46], 1	     17449	i386-dis.c	FUNCTION_83	IF_1
0x4005a46	            0x740a	                            je 0x4005a52	     17449	i386-dis.c	FUNCTION_83	IF_1
0x4005a48	    0x830d00000000	            or dword [0x04005a4f], 0x41 	     17449	i386-dis.c	FUNCTION_83	IF_1
0x4005a4f	          0x83c008	                              add eax, 8	     17451	i386-dis.c	FUNCTION_83	IF_1	IF_2
0x4005a52	            0x4898	                                    cdqe	     17452	i386-dis.c	FUNCTION_83	IF_1	CALL_1
0x4005a54	    0x488b15000000	            mov rdx, qword [0x04005a5b] 	     17452	i386-dis.c	FUNCTION_83	IF_1	CALL_1
0x4005a5b	        0x488b3cc2	            mov rdi, qword [rdx + rax*8]	     17452	i386-dis.c	FUNCTION_83	IF_1	CALL_1
0x4005a5f	      0xe839d2ffff	                        call sym.oappend	     17452	i386-dis.c	FUNCTION_83	IF_1	CALL_1
0x4005a64	            0xeb32	                           jmp 0x4005a98	     17452	i386-dis.c	FUNCTION_83	IF_1	CALL_1
0x4005a66	    0x803d00000000	                cmp byte [0x04005a6d], 0	     17456	i386-dis.c	FUNCTION_83	ELSE_1	IF_3
0x4005a6d	            0x7424	                            je 0x4005a93	     17456	i386-dis.c	FUNCTION_83	ELSE_1	IF_3
0x4005a6f	          0x8d47fc	                      lea eax, [rdi - 4]	     17457	i386-dis.c	FUNCTION_83	ELSE_1	IF_3
0x4005a72	          0x83f801	                              cmp eax, 1	     17457	i386-dis.c	FUNCTION_83	ELSE_1	IF_3
0x4005a75	            0x771c	                            ja 0x4005a93	     17457	i386-dis.c	FUNCTION_83	ELSE_1	IF_3
0x4005a77	    0x8b0500000000	            mov eax, dword [0x04005a7d] 	     17459	i386-dis.c	FUNCTION_83	ELSE_1	IF_3
0x4005a7d	      0x2500020000	                          and eax, 0x200	     17459	i386-dis.c	FUNCTION_83	ELSE_1	IF_3
0x4005a82	          0x83f801	                              cmp eax, 1	     17459	i386-dis.c	FUNCTION_83	ELSE_1	IF_3
0x4005a85	            0x19ff	                            sbb edi, edi	     17459	i386-dis.c	FUNCTION_83	ELSE_1	IF_3
0x4005a87	          0x83e7fd	                     and edi, 0xfffffffd	     17459	i386-dis.c	FUNCTION_83	ELSE_1	IF_3
0x4005a8a	          0x83c70d	                            add edi, 0xd	     17459	i386-dis.c	FUNCTION_83	ELSE_1	IF_3
0x4005a8d	     0x90500000000	              or dword [0x04005a93], eax	     17460	i386-dis.c	FUNCTION_83	ELSE_1	IF_3
0x4005a93	      0xe85dfcffff	                           call sym.OP_E	     17462	i386-dis.c	FUNCTION_83	ELSE_1	CALL_2
0x4005a98	        0x4883c408	                              add rsp, 8	     17464	i386-dis.c	FUNCTION_83
0x4005a9c	              0xc3	                                     ret	     17464	i386-dis.c	FUNCTION_83
OP_EMC	CALL,2:FOR,0:SWITCH,0:WHILE,0:ELSE,0:DO,0:IF,2:functions,0	29
0x4005cec	        0x4883ec08	                              sub rsp, 8	     16533	i386-dis.c	FUNCTION_53
0x4005cf0	    0x833d00000000	               cmp dword [0x04005cf7], 3	     16534	i386-dis.c	FUNCTION_53	IF_1
0x4005cf7	            0x7431	                            je 0x4005d2a	     16534	i386-dis.c	FUNCTION_53	IF_1
0x4005cf9	    0x803d00000000	                cmp byte [0x04005d00], 0	     16536	i386-dis.c	FUNCTION_53	IF_1	IF_2
0x4005d00	            0x7421	                            je 0x4005d23	     16536	i386-dis.c	FUNCTION_53	IF_1	IF_2
0x4005d02	          0x83ff04	                              cmp edi, 4	     16536	i386-dis.c	FUNCTION_53	IF_1	IF_2
0x4005d05	            0x751c	                           jne 0x4005d23	     16536	i386-dis.c	FUNCTION_53	IF_1	IF_2
0x4005d07	    0x8b0500000000	            mov eax, dword [0x04005d0d] 	     16538	i386-dis.c	FUNCTION_53	IF_1	IF_2
0x4005d0d	      0x2500020000	                          and eax, 0x200	     16538	i386-dis.c	FUNCTION_53	IF_1	IF_2
0x4005d12	          0x83f801	                              cmp eax, 1	     16538	i386-dis.c	FUNCTION_53	IF_1	IF_2
0x4005d15	            0x19ff	                            sbb edi, edi	     16538	i386-dis.c	FUNCTION_53	IF_1	IF_2
0x4005d17	          0x83e7fd	                     and edi, 0xfffffffd	     16538	i386-dis.c	FUNCTION_53	IF_1	IF_2
0x4005d1a	          0x83c70d	                            add edi, 0xd	     16538	i386-dis.c	FUNCTION_53	IF_1	IF_2
0x4005d1d	     0x90500000000	              or dword [0x04005d23], eax	     16539	i386-dis.c	FUNCTION_53	IF_1	IF_2
0x4005d23	      0xe8cdf9ffff	                           call sym.OP_E	     16541	i386-dis.c	FUNCTION_53	IF_1	CALL_1
0x4005d28	            0xeb3e	                           jmp 0x4005d68	     16542	i386-dis.c	FUNCTION_53	IF_1
0x4005d2a	    0x803d00000000	                cmp byte [0x04005d31], 0	     16546	i386-dis.c	FUNCTION_53
0x4005d31	            0x7505	                           jne 0x4005d38	     16546	i386-dis.c	FUNCTION_53
0x4005d33	      0xe800000000	                          call 0x4005d38	     16546	i386-dis.c	FUNCTION_53
0x4005d38	    0x488305000000	               add qword [0x04005d40], 1	     16547	i386-dis.c	FUNCTION_53
0x4005d40	    0x8b0500000000	            mov eax, dword [0x04005d46] 	     16548	i386-dis.c	FUNCTION_53
0x4005d46	      0x2500020000	                          and eax, 0x200	     16548	i386-dis.c	FUNCTION_53
0x4005d4b	     0x90500000000	              or dword [0x04005d51], eax	     16548	i386-dis.c	FUNCTION_53
0x4005d51	    0x486315000000	         movsxd rdx, dword [0x04005d58] 	     16549	i386-dis.c	FUNCTION_53	CALL_2
0x4005d58	    0x488b05000000	            mov rax, qword [0x04005d5f] 	     16549	i386-dis.c	FUNCTION_53	CALL_2
0x4005d5f	        0x488b3cd0	            mov rdi, qword [rax + rdx*8]	     16549	i386-dis.c	FUNCTION_53	CALL_2
0x4005d63	      0xe835cfffff	                        call sym.oappend	     16549	i386-dis.c	FUNCTION_53	CALL_2
0x4005d68	        0x4883c408	                              add rsp, 8	     16550	i386-dis.c	FUNCTION_53
0x4005d6c	              0xc3	                                     ret	     16550	i386-dis.c	FUNCTION_53
OP_G	CALL,16:FOR,0:SWITCH,1:WHILE,0:ELSE,5:DO,0:IF,9:functions,0	146
0x4004795	        0x4883ec08	                              sub rsp, 8	     15678	i386-dis.c	FUNCTION_27
0x4004799	    0x8b1500000000	            mov edx, dword [0x0400479f] 	     15681	i386-dis.c	FUNCTION_27
0x400479f	      0xb800000000	                              mov eax, 0	     15679	i386-dis.c	FUNCTION_27
0x40047a4	          0xf6c204	                              test dl, 4	     15681	i386-dis.c	FUNCTION_27
0x40047a7	            0x740c	                            je 0x40047b5	     15681	i386-dis.c	FUNCTION_27
0x40047a9	    0x830d00000000	            or dword [0x040047b0], 0x44 	     15681	i386-dis.c	FUNCTION_27
0x40047b0	      0xb808000000	                              mov eax, 8	     15683	i386-dis.c	FUNCTION_27	IF_1
0x40047b5	          0x83ff45	                           cmp edi, 0x45	     15684	i386-dis.c	FUNCTION_27	SWITCH_1
0x40047b8	     0xf8737020000	                            ja 0x40049f5	     15684	i386-dis.c	FUNCTION_27	SWITCH_1
0x40047be	            0x89f9	                            mov ecx, edi	     15684	i386-dis.c	FUNCTION_27	SWITCH_1
0x40047c0	    0xff24cd000000	                       jmp qword [rcx*8]	     15684	i386-dis.c	FUNCTION_27	SWITCH_1
0x40047c7	    0x830d00000000	            or dword [0x040047ce], 0x40 	     15687	i386-dis.c	FUNCTION_27	SWITCH_1
0x40047ce	            0x85d2	                           test edx, edx	     15688	i386-dis.c	FUNCTION_27	SWITCH_1	IF_2
0x40047d0	            0x741d	                            je 0x40047ef	     15688	i386-dis.c	FUNCTION_27	SWITCH_1	IF_2
0x40047d2	     0x30500000000	             add eax, dword [0x040047d8]	     15689	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_1
0x40047d8	            0x4898	                                    cdqe	     15689	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_1
0x40047da	    0x488b15000000	            mov rdx, qword [0x040047e1] 	     15689	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_1
0x40047e1	        0x488b3cc2	            mov rdi, qword [rdx + rax*8]	     15689	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_1
0x40047e5	      0xe8b3e4ffff	                        call sym.oappend	     15689	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_1
0x40047ea	      0xe953020000	                           jmp 0x4004a42	     15689	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_1
0x40047ef	     0x30500000000	             add eax, dword [0x040047f5]	     15691	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_2
0x40047f5	            0x4898	                                    cdqe	     15691	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_2
0x40047f7	    0x488b15000000	            mov rdx, qword [0x040047fe] 	     15691	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_2
0x40047fe	        0x488b3cc2	            mov rdi, qword [rdx + rax*8]	     15691	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_2
0x4004802	      0xe896e4ffff	                        call sym.oappend	     15691	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_2
0x4004807	      0xe936020000	                           jmp 0x4004a42	     15691	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_2
0x400480c	     0x30500000000	             add eax, dword [0x04004812]	     15694	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_3
0x4004812	            0x4898	                                    cdqe	     15694	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_3
0x4004814	    0x488b15000000	            mov rdx, qword [0x0400481b] 	     15694	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_3
0x400481b	        0x488b3cc2	            mov rdi, qword [rdx + rax*8]	     15694	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_3
0x400481f	      0xe879e4ffff	                        call sym.oappend	     15694	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_3
0x4004824	      0xe919020000	                           jmp 0x4004a42	     15695	i386-dis.c	FUNCTION_27	SWITCH_1
0x4004829	     0x30500000000	             add eax, dword [0x0400482f]	     15699	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_4
0x400482f	            0x4898	                                    cdqe	     15699	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_4
0x4004831	    0x488b15000000	            mov rdx, qword [0x04004838] 	     15699	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_4
0x4004838	        0x488b3cc2	            mov rdi, qword [rdx + rax*8]	     15699	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_4
0x400483c	      0xe85ce4ffff	                        call sym.oappend	     15699	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_4
0x4004841	      0xe9fc010000	                           jmp 0x4004a42	     15700	i386-dis.c	FUNCTION_27	SWITCH_1
0x4004846	     0x30500000000	             add eax, dword [0x0400484c]	     15702	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_5
0x400484c	            0x4898	                                    cdqe	     15702	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_5
0x400484e	    0x488b15000000	            mov rdx, qword [0x04004855] 	     15702	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_5
0x4004855	        0x488b3cc2	            mov rdi, qword [rdx + rax*8]	     15702	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_5
0x4004859	      0xe83fe4ffff	                        call sym.oappend	     15702	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_5
0x400485e	      0xe9df010000	                           jmp 0x4004a42	     15703	i386-dis.c	FUNCTION_27	SWITCH_1
0x4004863	    0x8b0500000000	            mov eax, dword [0x04004869] 	     15705	i386-dis.c	FUNCTION_27	SWITCH_1	IF_3
0x4004869	          0x83f803	                              cmp eax, 3	     15705	i386-dis.c	FUNCTION_27	SWITCH_1	IF_3
0x400486c	            0x7e0f	                           jle 0x400487d	     15705	i386-dis.c	FUNCTION_27	SWITCH_1	IF_3
0x400486e	      0xbf00000000	                              mov edi, 0	     15707	i386-dis.c	FUNCTION_27	SWITCH_1	IF_3	CALL_6
0x4004873	      0xe825e4ffff	                        call sym.oappend	     15707	i386-dis.c	FUNCTION_27	SWITCH_1	IF_3	CALL_6
0x4004878	      0xe9c5010000	                           jmp 0x4004a42	     15708	i386-dis.c	FUNCTION_27	SWITCH_1	IF_3
0x400487d	            0x4898	                                    cdqe	     15710	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_7
0x400487f	    0x488b15000000	            mov rdx, qword [0x04004886] 	     15710	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_7
0x4004886	        0x488b3cc2	            mov rdi, qword [rdx + rax*8]	     15710	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_7
0x400488a	      0xe80ee4ffff	                        call sym.oappend	     15710	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_7
0x400488f	      0xe9ae010000	                           jmp 0x4004a42	     15711	i386-dis.c	FUNCTION_27	SWITCH_1
0x4004894	          0xf6c208	                              test dl, 8	     15717	i386-dis.c	FUNCTION_27	SWITCH_1
0x4004897	     0xf8476010000	                            je 0x4004a13	     15717	i386-dis.c	FUNCTION_27	SWITCH_1
0x400489d	    0x830d00000000	            or dword [0x040048a4], 0x48 	     15717	i386-dis.c	FUNCTION_27	SWITCH_1
0x40048a4	     0x30500000000	             add eax, dword [0x040048aa]	     15719	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_8
0x40048aa	            0x4898	                                    cdqe	     15719	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_8
0x40048ac	    0x488b15000000	            mov rdx, qword [0x040048b3] 	     15719	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_8
0x40048b3	        0x488b3cc2	            mov rdi, qword [rdx + rax*8]	     15719	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_8
0x40048b7	      0xe8e1e3ffff	                        call sym.oappend	     15719	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_8
0x40048bc	      0xe981010000	                           jmp 0x4004a42	     15719	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_8
0x40048c1	     0x30500000000	             add eax, dword [0x040048c7]	     15723	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2	CALL_9
0x40048c7	            0x4898	                                    cdqe	     15723	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2	CALL_9
0x40048c9	    0x488b15000000	            mov rdx, qword [0x040048d0] 	     15723	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2	CALL_9
0x40048d0	        0x488b3cc2	            mov rdi, qword [rdx + rax*8]	     15723	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2	CALL_9
0x40048d4	      0xe8c4e3ffff	                        call sym.oappend	     15723	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2	CALL_9
0x40048d9	            0xeb18	                           jmp 0x40048f3	     15723	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2	CALL_9
0x40048db	     0x30500000000	             add eax, dword [0x040048e1]	     15725	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2	CALL_10
0x40048e1	            0x4898	                                    cdqe	     15725	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2	CALL_10
0x40048e3	    0x488b15000000	            mov rdx, qword [0x040048ea] 	     15725	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2	CALL_10
0x40048ea	        0x488b3cc2	            mov rdi, qword [rdx + rax*8]	     15725	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2	CALL_10
0x40048ee	      0xe8aae3ffff	                        call sym.oappend	     15725	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2	CALL_10
0x40048f3	    0x8b0500000000	            mov eax, dword [0x040048f9] 	     15726	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2
0x40048f9	      0x2500020000	                          and eax, 0x200	     15726	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2
0x40048fe	     0x90500000000	              or dword [0x04004904], eax	     15726	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2
0x4004904	      0xe939010000	                           jmp 0x4004a42	     15726	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2
0x4004909	    0x8b0d00000000	            mov ecx, dword [0x0400490f] 	     15730	i386-dis.c	FUNCTION_27	SWITCH_1
0x400490f	          0x83f902	                              cmp ecx, 2	     15731	i386-dis.c	FUNCTION_27	SWITCH_1
0x4004912	            0x7515	                           jne 0x4004929	     15731	i386-dis.c	FUNCTION_27	SWITCH_1
0x4004914	    0x488b15000000	            mov rdx, qword [0x0400491b] 	     15731	i386-dis.c	FUNCTION_27	SWITCH_1
0x400491b	    0xf60500000000	               test byte [0x04004922], 4	     15732	i386-dis.c	FUNCTION_27	SWITCH_1	IF_6
0x4004922	            0x7450	                            je 0x4004974	     15732	i386-dis.c	FUNCTION_27	SWITCH_1	IF_6
0x4004924	      0xe902010000	                           jmp 0x4004a2b	     15732	i386-dis.c	FUNCTION_27	SWITCH_1	IF_6
0x4004929	    0xf60500000000	               test byte [0x04004930], 4	     15732	i386-dis.c	FUNCTION_27	SWITCH_1	IF_6
0x4004930	            0x7513	                           jne 0x4004945	     15732	i386-dis.c	FUNCTION_27	SWITCH_1	IF_6
0x4004932	            0x85c9	                           test ecx, ecx	     15731	i386-dis.c	FUNCTION_27	SWITCH_1
0x4004934	    0x488b15000000	            mov rdx, qword [0x0400493b] 	     15731	i386-dis.c	FUNCTION_27	SWITCH_1
0x400493b	    0x480f44150000	           cmove rdx, qword [0x04004943]	     15731	i386-dis.c	FUNCTION_27	SWITCH_1
0x4004943	            0xeb2f	                           jmp 0x4004974	     15731	i386-dis.c	FUNCTION_27	SWITCH_1
0x4004945	    0x486315000000	         movsxd rdx, dword [0x0400494c] 	     15740	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_4
0x400494c	    0xc70495000000	                    mov dword [rdx*4], 0	     15740	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_4
0x4004957	    0x488b15000000	            mov rdx, qword [0x0400495e] 	     15742	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_4
0x400495e	          0x83f901	                              cmp ecx, 1	     15742	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_4
0x4004961	            0x7407	                            je 0x400496a	     15742	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_4
0x4004963	    0x488b15000000	            mov rdx, qword [0x0400496a] 	     15742	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_4
0x400496a	    0x810d00000000	            or dword [0x04004974], 0x400	     15743	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_4
0x4004974	     0x30500000000	             add eax, dword [0x0400497a]	     15745	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_11
0x400497a	            0x4898	                                    cdqe	     15745	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_11
0x400497c	        0x488b3cc2	            mov rdi, qword [rdx + rax*8]	     15745	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_11
0x4004980	      0xe818e3ffff	                        call sym.oappend	     15745	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_11
0x4004985	      0xe9b8000000	                           jmp 0x4004a42	     15746	i386-dis.c	FUNCTION_27	SWITCH_1
0x400498a	    0x833d00000000	               cmp dword [0x04004991], 2	     15748	i386-dis.c	FUNCTION_27	SWITCH_1	IF_8
0x4004991	            0x751d	                           jne 0x40049b0	     15748	i386-dis.c	FUNCTION_27	SWITCH_1	IF_8
0x4004993	     0x30500000000	             add eax, dword [0x04004999]	     15749	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_12
0x4004999	            0x4898	                                    cdqe	     15749	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_12
0x400499b	    0x488b15000000	            mov rdx, qword [0x040049a2] 	     15749	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_12
0x40049a2	        0x488b3cc2	            mov rdi, qword [rdx + rax*8]	     15749	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_12
0x40049a6	      0xe8f2e2ffff	                        call sym.oappend	     15749	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_12
0x40049ab	      0xe992000000	                           jmp 0x4004a42	     15749	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_12
0x40049b0	     0x30500000000	             add eax, dword [0x040049b6]	     15751	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_13
0x40049b6	            0x4898	                                    cdqe	     15751	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_13
0x40049b8	    0x488b15000000	            mov rdx, qword [0x040049bf] 	     15751	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_13
0x40049bf	        0x488b3cc2	            mov rdi, qword [rdx + rax*8]	     15751	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_13
0x40049c3	      0xe8d5e2ffff	                        call sym.oappend	     15751	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_13
0x40049c8	            0xeb78	                           jmp 0x4004a42	     15751	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_13
0x40049ca	     0x30500000000	             add eax, dword [0x040049d0]	     15755	i386-dis.c	FUNCTION_27	SWITCH_1	IF_9
0x40049d0	          0x83f807	                              cmp eax, 7	     15755	i386-dis.c	FUNCTION_27	SWITCH_1	IF_9
0x40049d3	            0x7e0c	                           jle 0x40049e1	     15755	i386-dis.c	FUNCTION_27	SWITCH_1	IF_9
0x40049d5	      0xbf00000000	                              mov edi, 0	     15757	i386-dis.c	FUNCTION_27	SWITCH_1	IF_9	CALL_14
0x40049da	      0xe8bee2ffff	                        call sym.oappend	     15757	i386-dis.c	FUNCTION_27	SWITCH_1	IF_9	CALL_14
0x40049df	            0xeb61	                           jmp 0x4004a42	     15758	i386-dis.c	FUNCTION_27	SWITCH_1	IF_9
0x40049e1	            0x4898	                                    cdqe	     15760	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_15
0x40049e3	    0x488b15000000	            mov rdx, qword [0x040049ea] 	     15760	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_15
0x40049ea	        0x488b3cc2	            mov rdi, qword [rdx + rax*8]	     15760	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_15
0x40049ee	      0xe8aae2ffff	                        call sym.oappend	     15760	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_15
0x40049f3	            0xeb4d	                           jmp 0x4004a42	     15761	i386-dis.c	FUNCTION_27	SWITCH_1
0x40049f5	      0xba05000000	                              mov edx, 5	     15763	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_16
0x40049fa	      0xbe00000000	                              mov esi, 0	     15763	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_16
0x40049ff	      0xbf00000000	                              mov edi, 0	     15763	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_16
0x4004a04	      0xe800000000	                          call 0x4004a09	     15763	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_16
0x4004a09	          0x4889c7	                            mov rdi, rax	     15763	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_16
0x4004a0c	      0xe88ce2ffff	                        call sym.oappend	     15763	i386-dis.c	FUNCTION_27	SWITCH_1	CALL_16
0x4004a11	            0xeb2f	                           jmp 0x4004a42	     15764	i386-dis.c	FUNCTION_27	SWITCH_1
0x4004a13	        0x40f6c601	                             test sil, 1	     15722	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2	IF_5
0x4004a17	     0xf85a4feffff	                           jne 0x40048c1	     15722	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2	IF_5
0x4004a1d	          0x83ff04	                              cmp edi, 4	     15722	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2	IF_5
0x4004a20	     0xf859bfeffff	                           jne 0x40048c1	     15722	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2	IF_5
0x4004a26	      0xe9b0feffff	                           jmp 0x40048db	     15722	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_2	IF_5
0x4004a2b	    0x486315000000	         movsxd rdx, dword [0x04004a32] 	     15740	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_4
0x4004a32	    0xc70495000000	                    mov dword [rdx*4], 0	     15740	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_4
0x4004a3d	      0xe921ffffff	                           jmp 0x4004963	     15740	i386-dis.c	FUNCTION_27	SWITCH_1	ELSE_4
0x4004a42	        0x4883c408	                              add rsp, 8	     15766	i386-dis.c	FUNCTION_27
0x4004a46	              0xc3	                                     ret	     15766	i386-dis.c	FUNCTION_27
OP_XS	CALL,2:FOR,0:SWITCH,0:WHILE,0:ELSE,1:DO,0:IF,1:functions,0	8
0x4005ef7	        0x4883ec08	                              sub rsp, 8	     16661	i386-dis.c	FUNCTION_57
0x4005efb	    0x833d00000000	               cmp dword [0x04005f02], 3	     16662	i386-dis.c	FUNCTION_57	IF_1
0x4005f02	            0x7507	                           jne 0x4005f0b	     16662	i386-dis.c	FUNCTION_57	IF_1
0x4005f04	      0xe891feffff	                          call sym.OP_EX	     16663	i386-dis.c	FUNCTION_57	CALL_1
0x4005f09	            0xeb05	                           jmp 0x4005f10	     16663	i386-dis.c	FUNCTION_57	CALL_1
0x4005f0b	      0xe84fd6ffff	                          call sym.BadOp	     16665	i386-dis.c	FUNCTION_57	CALL_2
0x4005f10	        0x4883c408	                              add rsp, 8	     16666	i386-dis.c	FUNCTION_57
0x4005f14	              0xc3	                                     ret	     16666	i386-dis.c	FUNCTION_57
OP_LWPCB_E	CALL,1:FOR,0:SWITCH,0:WHILE,0:ELSE,1:DO,0:IF,2:functions,0	20
0x4004180	        0x4883ec08	                              sub rsp, 8	     17859	i386-dis.c	FUNCTION_97
0x4004184	    0x803d00000000	                cmp byte [0x0400418b], 0	     17864	i386-dis.c	FUNCTION_97
0x400418b	            0x7505	                           jne 0x4004192	     17864	i386-dis.c	FUNCTION_97
0x400418d	      0xe800000000	                          call 0x4004192	     17864	i386-dis.c	FUNCTION_97
0x4004192	    0x488305000000	               add qword [0x0400419a], 1	     17865	i386-dis.c	FUNCTION_97
0x400419a	    0x8b0d00000000	            mov ecx, dword [0x040041a0] 	     17867	i386-dis.c	FUNCTION_97	IF_1
0x40041a0	            0x89c8	                            mov eax, ecx	     17867	i386-dis.c	FUNCTION_97	IF_1
0x40041a2	          0x83e008	                              and eax, 8	     17867	i386-dis.c	FUNCTION_97	IF_1
0x40041a5	    0x488b15000000	            mov rdx, qword [0x040041ac] 	     17868	i386-dis.c	FUNCTION_97	IF_1
0x40041ac	    0x480f44150000	           cmove rdx, qword [0x040041b4]	     17868	i386-dis.c	FUNCTION_97	IF_1
0x40041b4	    0x8b0500000000	            mov eax, dword [0x040041ba] 	     17872	i386-dis.c	FUNCTION_97
0x40041ba	          0xf6c101	                              test cl, 1	     17873	i386-dis.c	FUNCTION_97
0x40041bd	            0x740a	                            je 0x40041c9	     17873	i386-dis.c	FUNCTION_97
0x40041bf	    0x830d00000000	            or dword [0x040041c6], 0x41 	     17873	i386-dis.c	FUNCTION_97
0x40041c6	          0x83c008	                              add eax, 8	     17875	i386-dis.c	FUNCTION_97	IF_2
0x40041c9	            0x4898	                                    cdqe	     17877	i386-dis.c	FUNCTION_97	CALL_1
0x40041cb	        0x488b3cc2	            mov rdi, qword [rdx + rax*8]	     17877	i386-dis.c	FUNCTION_97	CALL_1
0x40041cf	      0xe8c9eaffff	                        call sym.oappend	     17877	i386-dis.c	FUNCTION_97	CALL_1
0x40041d4	        0x4883c408	                              add rsp, 8	     17878	i386-dis.c	FUNCTION_97
0x40041d8	              0xc3	                                     ret	     17878	i386-dis.c	FUNCTION_97
MOVBE_Fixup	CALL,2:FOR,0:SWITCH,1:WHILE,0:ELSE,2:DO,0:IF,4:functions,0	48
0x4005987	            0x4154	                                push r12	     17821	i386-dis.c	FUNCTION_96
0x4005989	              0x55	                                push rbp	     17821	i386-dis.c	FUNCTION_96
0x400598a	              0x53	                                push rbx	     17821	i386-dis.c	FUNCTION_96
0x400598b	            0x89fd	                            mov ebp, edi	     17821	i386-dis.c	FUNCTION_96
0x400598d	          0x4189f4	                           mov r12d, esi	     17821	i386-dis.c	FUNCTION_96
0x4005990	    0x488b1d000000	            mov rbx, qword [0x04005997] 	     17823	i386-dis.c	FUNCTION_96
0x4005997	          0x83ff04	                              cmp edi, 4	     17825	i386-dis.c	FUNCTION_96	SWITCH_1
0x400599a	            0x7551	                           jne 0x40059ed	     17825	i386-dis.c	FUNCTION_96	SWITCH_1
0x400599c	    0x803d00000000	                cmp byte [0x040059a3], 0	     17828	i386-dis.c	FUNCTION_96	SWITCH_1	IF_1
0x40059a3	            0x756e	                           jne 0x4005a13	     17828	i386-dis.c	FUNCTION_96	SWITCH_1	IF_1
0x40059a5	    0xf60500000000	               test byte [0x040059ac], 8	     17831	i386-dis.c	FUNCTION_96	SWITCH_1
0x40059ac	            0x7471	                            je 0x4005a1f	     17831	i386-dis.c	FUNCTION_96	SWITCH_1
0x40059ae	    0x830d00000000	            or dword [0x040059b5], 0x48 	     17831	i386-dis.c	FUNCTION_96	SWITCH_1
0x40059b5	        0x40f6c604	                             test sil, 4	     17832	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2
0x40059b9	            0x744e	                            je 0x4005a09	     17832	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2
0x40059bb	          0xc60371	                    mov byte [rbx], 0x71	     17835	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	IF_3
0x40059be	        0x488d5b01	                      lea rbx, [rbx + 1]	     17835	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	IF_3
0x40059c2	            0xeb45	                           jmp 0x4005a09	     17835	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	IF_3
0x40059c4	        0x41f6c401	                            test r12b, 1	     17838	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	ELSE_1	IF_4
0x40059c8	            0x7409	                            je 0x40059d3	     17838	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	ELSE_1	IF_4
0x40059ca	          0xc6036c	                    mov byte [rbx], 0x6c	     17839	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	ELSE_1	IF_4
0x40059cd	        0x488d5b01	                      lea rbx, [rbx + 1]	     17839	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	ELSE_1	IF_4
0x40059d1	            0xeb07	                           jmp 0x40059da	     17839	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	ELSE_1	IF_4
0x40059d3	          0xc60377	                    mov byte [rbx], 0x77	     17841	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	ELSE_1	ELSE_2
0x40059d6	        0x488d5b01	                      lea rbx, [rbx + 1]	     17841	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	ELSE_1	ELSE_2
0x40059da	    0x8b0500000000	            mov eax, dword [0x040059e0] 	     17842	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	ELSE_1
0x40059e0	      0x2500020000	                          and eax, 0x200	     17842	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	ELSE_1
0x40059e5	     0x90500000000	              or dword [0x040059eb], eax	     17842	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	ELSE_1
0x40059eb	            0xeb1c	                           jmp 0x4005a09	     17842	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2	ELSE_1
0x40059ed	      0xba05000000	                              mov edx, 5	     17847	i386-dis.c	FUNCTION_96	SWITCH_1	CALL_1
0x40059f2	      0xbe00000000	                              mov esi, 0	     17847	i386-dis.c	FUNCTION_96	SWITCH_1	CALL_1
0x40059f7	      0xbf00000000	                              mov edi, 0	     17847	i386-dis.c	FUNCTION_96	SWITCH_1	CALL_1
0x40059fc	      0xe800000000	                          call 0x4005a01	     17847	i386-dis.c	FUNCTION_96	SWITCH_1	CALL_1
0x4005a01	          0x4889c7	                            mov rdi, rax	     17847	i386-dis.c	FUNCTION_96	SWITCH_1	CALL_1
0x4005a04	      0xe894d2ffff	                        call sym.oappend	     17847	i386-dis.c	FUNCTION_96	SWITCH_1	CALL_1
0x4005a09	    0x48891d000000	            mov qword [0x04005a10], rbx 	     17850	i386-dis.c	FUNCTION_96
0x4005a10	          0xc60300	                       mov byte [rbx], 0	     17851	i386-dis.c	FUNCTION_96
0x4005a13	          0x4489e6	                           mov esi, r12d	     17854	i386-dis.c	FUNCTION_96	CALL_2
0x4005a16	            0x89ef	                            mov edi, ebp	     17854	i386-dis.c	FUNCTION_96	CALL_2
0x4005a18	      0xe8ddfdffff	                           call sym.OP_M	     17854	i386-dis.c	FUNCTION_96	CALL_2
0x4005a1d	            0xeb08	                           jmp 0x4005a27	     17855	i386-dis.c	FUNCTION_96
0x4005a1f	        0x40f6c604	                             test sil, 4	     17832	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2
0x4005a23	            0x759f	                           jne 0x40059c4	     17832	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2
0x4005a25	            0xebe2	                           jmp 0x4005a09	     17832	i386-dis.c	FUNCTION_96	SWITCH_1	IF_2
0x4005a27	              0x5b	                                 pop rbx	     17855	i386-dis.c	FUNCTION_96
0x4005a28	              0x5d	                                 pop rbp	     17855	i386-dis.c	FUNCTION_96
0x4005a29	            0x415c	                                 pop r12	     17855	i386-dis.c	FUNCTION_96
0x4005a2b	              0xc3	                                     ret	     17855	i386-dis.c	FUNCTION_96
CMPXCHG8B_Fixup	CALL,2:FOR,0:SWITCH,0:WHILE,0:ELSE,1:DO,0:IF,4:functions,0	26
0x4006951	        0x4883ec08	                              sub rsp, 8	     17028	i386-dis.c	FUNCTION_74
0x4006955	    0xf60500000000	               test byte [0x0400695c], 8	     17029	i386-dis.c	FUNCTION_74
0x400695c	            0x745a	                            je 0x40069b8	     17029	i386-dis.c	FUNCTION_74
0x400695e	    0x830d00000000	            or dword [0x04006965], 0x48 	     17029	i386-dis.c	FUNCTION_74
0x4006965	    0x488b05000000	            mov rax, qword [0x0400696c] 	     17033	i386-dis.c	FUNCTION_74	IF_1
0x400696c	    0xc740fe313662	          mov dword [rax - 2], 0x623631 	     17033	i386-dis.c	FUNCTION_74	IF_1
0x4006973	        0x4883c001	                              add rax, 1	       117	string3.h	FUNCTION_125	CALL_3
0x4006977	    0x488905000000	            mov qword [0x0400697e], rax 	       117	string3.h	FUNCTION_125	CALL_3
0x400697e	      0xbf2c000000	                           mov edi, 0x2c	     17035	i386-dis.c	FUNCTION_74	IF_1
0x4006983	            0xeb2c	                           jmp 0x40069b1	     17035	i386-dis.c	FUNCTION_74	IF_1
0x4006985	            0xa801	                              test al, 1	     17039	i386-dis.c	FUNCTION_74	ELSE_1	IF_2	IF_3
0x4006987	            0x7412	                            je 0x400699b	     17039	i386-dis.c	FUNCTION_74	ELSE_1	IF_2	IF_3
0x4006989	    0x486315000000	         movsxd rdx, dword [0x04006990] 	     17040	i386-dis.c	FUNCTION_74	ELSE_1	IF_2	IF_3
0x4006990	    0xc70495000000	                mov dword [rdx*4], 0x4f3	     17040	i386-dis.c	FUNCTION_74	ELSE_1	IF_2	IF_3
0x400699b	            0xa802	                              test al, 2	     17041	i386-dis.c	FUNCTION_74	ELSE_1	IF_2	IF_4
0x400699d	            0x7412	                            je 0x40069b1	     17041	i386-dis.c	FUNCTION_74	ELSE_1	IF_2	IF_4
0x400699f	    0x486305000000	         movsxd rax, dword [0x040069a6] 	     17042	i386-dis.c	FUNCTION_74	ELSE_1	IF_2	IF_4
0x40069a6	    0xc70485000000	                mov dword [rax*4], 0x2f2	     17042	i386-dis.c	FUNCTION_74	ELSE_1	IF_2	IF_4
0x40069b1	      0xe844eeffff	                           call sym.OP_M	     17045	i386-dis.c	FUNCTION_74	CALL_2
0x40069b6	            0xeb0c	                           jmp 0x40069c4	     17046	i386-dis.c	FUNCTION_74
0x40069b8	    0x8b0500000000	            mov eax, dword [0x040069be] 	     17037	i386-dis.c	FUNCTION_74	ELSE_1	IF_2
0x40069be	            0xa804	                              test al, 4	     17037	i386-dis.c	FUNCTION_74	ELSE_1	IF_2
0x40069c0	            0x75c3	                           jne 0x4006985	     17037	i386-dis.c	FUNCTION_74	ELSE_1	IF_2
0x40069c2	            0xebed	                           jmp 0x40069b1	     17037	i386-dis.c	FUNCTION_74	ELSE_1	IF_2
0x40069c4	        0x4883c408	                              add rsp, 8	     17046	i386-dis.c	FUNCTION_74
0x40069c8	              0xc3	                                     ret	     17046	i386-dis.c	FUNCTION_74
OP_sI	CALL,5:FOR,0:SWITCH,1:WHILE,0:ELSE,4:DO,0:IF,7:functions,0	78
0x40064bd	              0x55	                                push rbp	     16088	i386-dis.c	FUNCTION_37
0x40064be	              0x53	                                push rbx	     16088	i386-dis.c	FUNCTION_37
0x40064bf	        0x4883ec08	                              sub rsp, 8	     16088	i386-dis.c	FUNCTION_37
0x40064c3	            0x89fb	                            mov ebx, edi	     16088	i386-dis.c	FUNCTION_37
0x40064c5	            0x89f5	                            mov ebp, esi	     16088	i386-dis.c	FUNCTION_37
0x40064c7	          0x83ff03	                              cmp edi, 3	     16091	i386-dis.c	FUNCTION_37	SWITCH_1
0x40064ca	            0x7412	                            je 0x40064de	     16091	i386-dis.c	FUNCTION_37	SWITCH_1
0x40064cc	          0x83ff04	                              cmp edi, 4	     16091	i386-dis.c	FUNCTION_37	SWITCH_1
0x40064cf	     0xf84a1000000	                            je 0x4006576	     16091	i386-dis.c	FUNCTION_37	SWITCH_1
0x40064d5	          0x83ff01	                              cmp edi, 1	     16091	i386-dis.c	FUNCTION_37	SWITCH_1
0x40064d8	     0xf85bb000000	                           jne 0x4006599	     16091	i386-dis.c	FUNCTION_37	SWITCH_1
0x40064de	    0x488b05000000	            mov rax, qword [0x040064e5] 	     16095	i386-dis.c	FUNCTION_37	SWITCH_1
0x40064e5	        0x488d7001	                      lea rsi, [rax + 1]	     16095	i386-dis.c	FUNCTION_37	SWITCH_1
0x40064e9	    0x488b3d000000	            mov rdi, qword [0x040064f0] 	     16095	i386-dis.c	FUNCTION_37	SWITCH_1
0x40064f0	        0x488b4768	            mov rax, qword [rdi + 0x68] 	     16095	i386-dis.c	FUNCTION_37	SWITCH_1
0x40064f4	          0x483b30	                    cmp rsi, qword [rax]	     16095	i386-dis.c	FUNCTION_37	SWITCH_1
0x40064f7	            0x7605	                           jbe 0x40064fe	     16095	i386-dis.c	FUNCTION_37	SWITCH_1
0x40064f9	      0xe8adb9ffff	                     call sym.fetch_data	     16095	i386-dis.c	FUNCTION_37	SWITCH_1
0x40064fe	    0x488b05000000	            mov rax, qword [0x04006505] 	     16096	i386-dis.c	FUNCTION_37	SWITCH_1
0x4006505	        0x488d5001	                      lea rdx, [rax + 1]	     16096	i386-dis.c	FUNCTION_37	SWITCH_1
0x4006509	    0x488915000000	            mov qword [0x04006510], rdx 	     16096	i386-dis.c	FUNCTION_37	SWITCH_1
0x4006510	           0xfb600	                   movzx eax, byte [rax]	     16096	i386-dis.c	FUNCTION_37	SWITCH_1
0x4006513	           0xfb6d0	                           movzx edx, al	     16096	i386-dis.c	FUNCTION_37	SWITCH_1
0x4006516	      0x2580000000	                           and eax, 0x80	     16097	i386-dis.c	FUNCTION_37	SWITCH_1	IF_1
0x400651b	    0x488d8a00ffff	                  lea rcx, [rdx - 0x100]	     16098	i386-dis.c	FUNCTION_37	SWITCH_1	IF_1
0x4006522	            0x84c0	                             test al, al	     16098	i386-dis.c	FUNCTION_37	SWITCH_1	IF_1
0x4006524	        0x480f45d1	                         cmovne rdx, rcx	     16098	i386-dis.c	FUNCTION_37	SWITCH_1	IF_1
0x4006528	          0x83fb03	                              cmp ebx, 3	     16099	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2
0x400652b	            0x7532	                           jne 0x400655f	     16099	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2
0x400652d	    0x833d00000000	               cmp dword [0x04006534], 2	     16101	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3
0x4006534	            0x7511	                           jne 0x4006547	     16101	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3
0x4006536	        0x40f6c501	                             test bpl, 1	     16102	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3
0x400653a	            0x757b	                           jne 0x40065b7	     16102	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3
0x400653c	    0xf60500000000	               test byte [0x04006543], 8	     16102	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3
0x4006543	            0x7415	                            je 0x400655a	     16102	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3
0x4006545	            0xeb70	                           jmp 0x40065b7	     16102	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3
0x4006547	        0x40f6c501	                             test bpl, 1	     16105	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3	IF_4
0x400654b	            0x7509	                           jne 0x4006556	     16105	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3	IF_4
0x400654d	    0xf60500000000	               test byte [0x04006554], 8	     16105	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3	IF_4
0x4006554	            0x7404	                            je 0x400655a	     16105	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3	IF_4
0x4006556	            0x89d2	                            mov edx, edx	     16106	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3	IF_4
0x4006558	            0xeb5d	                           jmp 0x40065b7	     16106	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3	IF_4
0x400655a	           0xfb7d2	                           movzx edx, dx	     16108	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3	ELSE_1
0x400655d	            0xeb58	                           jmp 0x40065b7	     16108	i386-dis.c	FUNCTION_37	SWITCH_1	IF_2	IF_3	ELSE_1
0x400655f	    0xf60500000000	               test byte [0x04006566], 8	     16113	i386-dis.c	FUNCTION_37	SWITCH_1	ELSE_1	ELSE_2	IF_5
0x4006566	            0x754f	                           jne 0x40065b7	     16113	i386-dis.c	FUNCTION_37	SWITCH_1	ELSE_1	ELSE_2	IF_5
0x4006568	          0x83e501	                              and ebp, 1	     16115	i386-dis.c	FUNCTION_37	SWITCH_1	ELSE_1	ELSE_2	IF_5	IF_6
0x400656b	            0x89d0	                            mov eax, edx	     16116	i386-dis.c	FUNCTION_37	SWITCH_1	ELSE_1	ELSE_2	IF_5	IF_6
0x400656d	           0xfb7d2	                           movzx edx, dx	     16116	i386-dis.c	FUNCTION_37	SWITCH_1	ELSE_1	ELSE_2	IF_5	IF_6
0x4006570	        0x480f45d0	                         cmovne rdx, rax	     16116	i386-dis.c	FUNCTION_37	SWITCH_1	ELSE_1	ELSE_2	IF_5	IF_6
0x4006574	            0xeb41	                           jmp 0x40065b7	     16116	i386-dis.c	FUNCTION_37	SWITCH_1	ELSE_1	ELSE_2	IF_5	IF_6
0x4006576	        0x40f6c601	                             test sil, 1	     16124	i386-dis.c	FUNCTION_37	SWITCH_1	IF_7
0x400657a	            0x7509	                           jne 0x4006585	     16124	i386-dis.c	FUNCTION_37	SWITCH_1	IF_7
0x400657c	    0xf60500000000	               test byte [0x04006583], 8	     16124	i386-dis.c	FUNCTION_37	SWITCH_1	IF_7
0x4006583	            0x740a	                            je 0x400658f	     16124	i386-dis.c	FUNCTION_37	SWITCH_1	IF_7
0x4006585	      0xe896b9ffff	                         call sym.get32s	     16125	i386-dis.c	FUNCTION_37	SWITCH_1	CALL_1
0x400658a	          0x4889c2	                            mov rdx, rax	     16125	i386-dis.c	FUNCTION_37	SWITCH_1	CALL_1
0x400658d	            0xeb28	                           jmp 0x40065b7	     16125	i386-dis.c	FUNCTION_37	SWITCH_1	CALL_1
0x400658f	      0xe8fcb9ffff	                          call sym.get16	     16127	i386-dis.c	FUNCTION_37	SWITCH_1	CALL_2
0x4006594	          0x4863d0	                         movsxd rdx, eax	     16127	i386-dis.c	FUNCTION_37	SWITCH_1	CALL_2
0x4006597	            0xeb1e	                           jmp 0x40065b7	     16127	i386-dis.c	FUNCTION_37	SWITCH_1	CALL_2
0x4006599	      0xba05000000	                              mov edx, 5	     16130	i386-dis.c	FUNCTION_37	SWITCH_1	CALL_3
0x400659e	      0xbe00000000	                              mov esi, 0	     16130	i386-dis.c	FUNCTION_37	SWITCH_1	CALL_3
0x40065a3	      0xbf00000000	                              mov edi, 0	     16130	i386-dis.c	FUNCTION_37	SWITCH_1	CALL_3
0x40065a8	      0xe800000000	                          call 0x40065ad	     16130	i386-dis.c	FUNCTION_37	SWITCH_1	CALL_3
0x40065ad	          0x4889c7	                            mov rdi, rax	     16130	i386-dis.c	FUNCTION_37	SWITCH_1	CALL_3
0x40065b0	      0xe8e8c6ffff	                        call sym.oappend	     16130	i386-dis.c	FUNCTION_37	SWITCH_1	CALL_3
0x40065b5	            0xeb20	                           jmp 0x40065d7	     16131	i386-dis.c	FUNCTION_37	SWITCH_1
0x40065b7	    0xc60500000000	            mov byte [0x040065be], 0x24 	     16134	i386-dis.c	FUNCTION_37
0x40065be	      0xbe01000000	                              mov esi, 1	     16135	i386-dis.c	FUNCTION_37	CALL_4
0x40065c3	      0xbf00000000	                              mov edi, 0	     16135	i386-dis.c	FUNCTION_37	CALL_4
0x40065c8	      0xe828b4ffff	            call sym.print_operand_value	     16135	i386-dis.c	FUNCTION_37	CALL_4
0x40065cd	      0xbf00000000	                              mov edi, 0	     16136	i386-dis.c	FUNCTION_37	CALL_5
0x40065d2	      0xe8e5c6ffff	            call sym.oappend_maybe_intel	     16136	i386-dis.c	FUNCTION_37	CALL_5
0x40065d7	        0x4883c408	                              add rsp, 8	     16137	i386-dis.c	FUNCTION_37
0x40065db	              0x5b	                                 pop rbx	     16137	i386-dis.c	FUNCTION_37
0x40065dc	              0x5d	                                 pop rbp	     16137	i386-dis.c	FUNCTION_37
0x40065dd	              0xc3	                                     ret	     16137	i386-dis.c	FUNCTION_37
PCLMUL_Fixup	CALL,3:FOR,0:SWITCH,1:WHILE,0:ELSE,1:DO,0:IF,1:functions,0	64
0x400318e	              0x53	                                push rbx	     17782	i386-dis.c	FUNCTION_95
0x400318f	        0x4883ec10	                           sub rsp, 0x10	     17782	i386-dis.c	FUNCTION_95
0x4003193	    0x64488b042528	                mov rax, qword fs:[0x28]	     17782	i386-dis.c	FUNCTION_95
0x400319c	      0x4889442408	                mov qword [rsp + 8], rax	     17782	i386-dis.c	FUNCTION_95
0x40031a1	            0x31c0	                            xor eax, eax	     17782	i386-dis.c	FUNCTION_95
0x40031a3	    0x488b05000000	            mov rax, qword [0x040031aa] 	     17785	i386-dis.c	FUNCTION_95
0x40031aa	        0x488d7001	                      lea rsi, [rax + 1]	     17785	i386-dis.c	FUNCTION_95
0x40031ae	    0x488b3d000000	            mov rdi, qword [0x040031b5] 	     17785	i386-dis.c	FUNCTION_95
0x40031b5	        0x488b4768	            mov rax, qword [rdi + 0x68] 	     17785	i386-dis.c	FUNCTION_95
0x40031b9	          0x483b30	                    cmp rsi, qword [rax]	     17785	i386-dis.c	FUNCTION_95
0x40031bc	            0x7605	                           jbe 0x40031c3	     17785	i386-dis.c	FUNCTION_95
0x40031be	      0xe8e8ecffff	                     call sym.fetch_data	     17785	i386-dis.c	FUNCTION_95
0x40031c3	    0x488b05000000	            mov rax, qword [0x040031ca] 	     17786	i386-dis.c	FUNCTION_95
0x40031ca	        0x488d5001	                      lea rdx, [rax + 1]	     17786	i386-dis.c	FUNCTION_95
0x40031ce	    0x488915000000	            mov qword [0x040031d5], rdx 	     17786	i386-dis.c	FUNCTION_95
0x40031d5	           0xfb610	                   movzx edx, byte [rax]	     17786	i386-dis.c	FUNCTION_95
0x40031d8	          0x80fa10	                            cmp dl, 0x10	     17787	i386-dis.c	FUNCTION_95	SWITCH_1
0x40031db	     0xf84a3000000	                            je 0x4003284	     17787	i386-dis.c	FUNCTION_95	SWITCH_1
0x40031e1	      0xb803000000	                              mov eax, 3	     17793	i386-dis.c	FUNCTION_95	SWITCH_1
0x40031e6	          0x80fa11	                            cmp dl, 0x11	     17787	i386-dis.c	FUNCTION_95	SWITCH_1
0x40031e9	            0x7408	                            je 0x40031f3	     17787	i386-dis.c	FUNCTION_95	SWITCH_1
0x40031eb	           0xfb6c2	                           movzx eax, dl	     17786	i386-dis.c	FUNCTION_95
0x40031ee	          0x83f803	                              cmp eax, 3	     17798	i386-dis.c	FUNCTION_95	IF_1	CALL_1
0x40031f1	            0x7765	                            ja 0x4003258	     17798	i386-dis.c	FUNCTION_95	IF_1	CALL_1
0x40031f3	    0x488b3d000000	            mov rdi, qword [0x040031fa] 	     17801	i386-dis.c	FUNCTION_95	IF_1
0x40031fa	         0xfb657fd	               movzx edx, byte [rdi - 3]	     17802	i386-dis.c	FUNCTION_95	IF_1
0x40031fe	          0x881424	                      mov byte [rsp], dl	     17802	i386-dis.c	FUNCTION_95	IF_1
0x4003201	         0xfb657fe	               movzx edx, byte [rdi - 2]	     17803	i386-dis.c	FUNCTION_95	IF_1
0x4003205	        0x88542401	                  mov byte [rsp + 1], dl	     17803	i386-dis.c	FUNCTION_95	IF_1
0x4003209	         0xfb657ff	               movzx edx, byte [rdi - 1]	     17804	i386-dis.c	FUNCTION_95	IF_1
0x400320d	        0x88542402	                  mov byte [rsp + 2], dl	     17804	i386-dis.c	FUNCTION_95	IF_1
0x4003211	      0xc644240300	                   mov byte [rsp + 3], 0	     17805	i386-dis.c	FUNCTION_95	IF_1
0x4003216	            0x89c0	                            mov eax, eax	     17806	i386-dis.c	FUNCTION_95	IF_1
0x4003218	        0x48c1e004	                              shl rax, 4	     17806	i386-dis.c	FUNCTION_95	IF_1
0x400321c	    0x488d98000000	                          lea rbx, [rax]	     17806	i386-dis.c	FUNCTION_95	IF_1
0x4003223	        0x4883ef03	                              sub rdi, 3	        33	stdio2.h	FUNCTION_101	CALL_1
0x4003227	          0x4989e1	                             mov r9, rsp	        33	stdio2.h	FUNCTION_101	CALL_1
0x400322a	    0x4c8b80000000	                     mov r8, qword [rax]	        33	stdio2.h	FUNCTION_101	CALL_1
0x4003231	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_101	CALL_1
0x4003236	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_101	CALL_1
0x400323d	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_101	CALL_1
0x4003242	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_101	CALL_1
0x4003247	      0xe800000000	                          call 0x400324c	        33	stdio2.h	FUNCTION_101	CALL_1
0x400324c	          0x8b4308	                mov eax, dword [rbx + 8]	     17807	i386-dis.c	FUNCTION_95	IF_1
0x400324f	    0x480105000000	            add qword [0x04003256], rax 	     17807	i386-dis.c	FUNCTION_95	IF_1
0x4003256	            0xeb36	                           jmp 0x400328e	     17807	i386-dis.c	FUNCTION_95	IF_1
0x4003258	    0xc60500000000	            mov byte [0x0400325f], 0x24 	     17812	i386-dis.c	FUNCTION_95	ELSE_1
0x400325f	           0xfb6d2	                           movzx edx, dl	     17813	i386-dis.c	FUNCTION_95	ELSE_1	CALL_2
0x4003262	      0xbe01000000	                              mov esi, 1	     17813	i386-dis.c	FUNCTION_95	ELSE_1	CALL_2
0x4003267	      0xbf00000000	                              mov edi, 0	     17813	i386-dis.c	FUNCTION_95	ELSE_1	CALL_2
0x400326c	      0xe884e7ffff	            call sym.print_operand_value	     17813	i386-dis.c	FUNCTION_95	ELSE_1	CALL_2
0x4003271	      0xbf00000000	                              mov edi, 0	     17814	i386-dis.c	FUNCTION_95	ELSE_1	CALL_3
0x4003276	      0xe841faffff	            call sym.oappend_maybe_intel	     17814	i386-dis.c	FUNCTION_95	ELSE_1	CALL_3
0x400327b	    0xc60500000000	                mov byte [0x04003282], 0	     17815	i386-dis.c	FUNCTION_95	ELSE_1
0x4003282	            0xeb0a	                           jmp 0x400328e	     17817	i386-dis.c	FUNCTION_95
0x4003284	      0xb802000000	                              mov eax, 2	     17790	i386-dis.c	FUNCTION_95	SWITCH_1
0x4003289	      0xe965ffffff	                           jmp 0x40031f3	     17790	i386-dis.c	FUNCTION_95	SWITCH_1
0x400328e	      0x488b442408	                mov rax, qword [rsp + 8]	     17817	i386-dis.c	FUNCTION_95
0x4003293	    0x644833042528	                xor rax, qword fs:[0x28]	     17817	i386-dis.c	FUNCTION_95
0x400329c	            0x7405	                            je 0x40032a3	     17817	i386-dis.c	FUNCTION_95
0x400329e	      0xe800000000	                          call 0x40032a3	     17817	i386-dis.c	FUNCTION_95
0x40032a3	        0x4883c410	                           add rsp, 0x10	     17817	i386-dis.c	FUNCTION_95
0x40032a7	              0x5b	                                 pop rbx	     17817	i386-dis.c	FUNCTION_95
0x40032a8	              0xc3	                                     ret	     17817	i386-dis.c	FUNCTION_95
prefix_name	CALL,0:FOR,0:SWITCH,1:WHILE,0:ELSE,1:DO,0:IF,1:functions,0	94
0x4000040	          0x83ff67	                           cmp edi, 0x67	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000043	     0xf8453010000	                            je 0x400019c	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000049	          0x83ff67	                           cmp edi, 0x67	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x400004c	            0x7f7f	                            jg 0x40000cd	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x400004e	          0x83ff4f	                           cmp edi, 0x4f	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000051	            0x7f50	                            jg 0x40000a3	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000053	          0x83ff40	                           cmp edi, 0x40	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000056	     0xf8d1f010000	                           jge 0x400017b	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x400005c	      0xb800000000	                              mov eax, 0	     12604	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000061	          0x83ff2e	                           cmp edi, 0x2e	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000064	     0xf846a010000	                            je 0x40001d4	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x400006a	          0x83ff2e	                           cmp edi, 0x2e	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x400006d	            0x7f13	                            jg 0x4000082	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x400006f	      0xb800000000	                              mov eax, 0	     12610	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000074	          0x83ff26	                           cmp edi, 0x26	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000077	     0xf8457010000	                            je 0x40001d4	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x400007d	      0xe94d010000	                           jmp 0x40001cf	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000082	      0xb800000000	                              mov eax, 0	     12606	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000087	          0x83ff36	                           cmp edi, 0x36	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x400008a	     0xf8444010000	                            je 0x40001d4	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000090	      0xb800000000	                              mov eax, 0	     12608	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000095	          0x83ff3e	                           cmp edi, 0x3e	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000098	     0xf8436010000	                            je 0x40001d4	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x400009e	      0xe92c010000	                           jmp 0x40001cf	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x40000a3	      0xb800000000	                              mov eax, 0	     12614	i386-dis.c	FUNCTION_3	SWITCH_1
0x40000a8	          0x83ff65	                           cmp edi, 0x65	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x40000ab	     0xf8423010000	                            je 0x40001d4	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x40000b1	          0x83ff65	                           cmp edi, 0x65	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x40000b4	     0xf8fd0000000	                            jg 0x400018a	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x40000ba	      0xb800000000	                              mov eax, 0	     12612	i386-dis.c	FUNCTION_3	SWITCH_1
0x40000bf	          0x83ff64	                           cmp edi, 0x64	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x40000c2	     0xf840c010000	                            je 0x40001d4	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x40000c8	      0xe902010000	                           jmp 0x40001cf	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x40000cd	    0x81ff3e010000	                          cmp edi, 0x13e	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x40000d3	     0xf84f0000000	                            je 0x40001c9	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x40000d9	    0x81ff3e010000	                          cmp edi, 0x13e	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x40000df	            0x7f56	                            jg 0x4000137	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x40000e1	      0xb800000000	                              mov eax, 0	     12602	i386-dis.c	FUNCTION_3	SWITCH_1
0x40000e6	    0x81fff0000000	                           cmp edi, 0xf0	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x40000ec	     0xf84e2000000	                            je 0x40001d4	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x40000f2	    0x81fff0000000	                           cmp edi, 0xf0	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x40000f8	            0x7f16	                            jg 0x4000110	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x40000fa	      0xb800000000	                              mov eax, 0	     12623	i386-dis.c	FUNCTION_3	SWITCH_1
0x40000ff	    0x81ff9b000000	                           cmp edi, 0x9b	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000105	     0xf84c9000000	                            je 0x40001d4	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x400010b	      0xe9bf000000	                           jmp 0x40001cf	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000110	      0xb800000000	                              mov eax, 0	     12600	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000115	    0x81fff2000000	                           cmp edi, 0xf2	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x400011b	     0xf84b3000000	                            je 0x40001d4	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000121	      0xb800000000	                              mov eax, 0	     12598	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000126	    0x81fff3000000	                           cmp edi, 0xf3	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x400012c	     0xf84a2000000	                            je 0x40001d4	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000132	      0xe998000000	                           jmp 0x40001cf	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000137	      0xb800000000	                              mov eax, 0	     12627	i386-dis.c	FUNCTION_3	SWITCH_1
0x400013c	    0x81fff2020000	                          cmp edi, 0x2f2	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000142	     0xf848c000000	                            je 0x40001d4	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000148	    0x81fff2020000	                          cmp edi, 0x2f2	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x400014e	            0x7f0f	                            jg 0x400015f	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000150	      0xb800000000	                              mov eax, 0	     12625	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000155	    0x81fff3010000	                          cmp edi, 0x1f3	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x400015b	            0x7477	                            je 0x40001d4	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x400015d	            0xeb70	                           jmp 0x40001cf	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x400015f	      0xb800000000	                              mov eax, 0	     12631	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000164	    0x81fff2040000	                          cmp edi, 0x4f2	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x400016a	            0x7468	                            je 0x40001d4	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x400016c	      0xb800000000	                              mov eax, 0	     12629	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000171	    0x81fff3040000	                          cmp edi, 0x4f3	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000177	            0x745b	                            je 0x40001d4	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000179	            0xeb54	                           jmp 0x40001cf	     12577	i386-dis.c	FUNCTION_3	SWITCH_1
0x400017b	          0x83ef40	                           sub edi, 0x40	     12596	i386-dis.c	FUNCTION_3	SWITCH_1
0x400017e	          0x4863ff	                         movsxd rdi, edi	     12596	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000181	    0x488b04fd0000	                  mov rax, qword [rdi*8]	     12596	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000189	              0xc3	                                     ret	     12596	i386-dis.c	FUNCTION_3	SWITCH_1
0x400018a	          0x83e601	                              and esi, 1	     12616	i386-dis.c	FUNCTION_3	SWITCH_1
0x400018d	      0xba00000000	                              mov edx, 0	     12616	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000192	      0xb800000000	                              mov eax, 0	     12616	i386-dis.c	FUNCTION_3	SWITCH_1
0x4000197	        0x480f44c2	                          cmove rax, rdx	     12616	i386-dis.c	FUNCTION_3	SWITCH_1
0x400019b	              0xc3	                                     ret	     12616	i386-dis.c	FUNCTION_3	SWITCH_1
0x400019c	    0x833d00000000	               cmp dword [0x040001a3], 2	     12618	i386-dis.c	FUNCTION_3	SWITCH_1	IF_1
0x40001a3	            0x7512	                           jne 0x40001b7	     12618	i386-dis.c	FUNCTION_3	SWITCH_1	IF_1
0x40001a5	          0x83e602	                              and esi, 2	     12619	i386-dis.c	FUNCTION_3	SWITCH_1	IF_1
0x40001a8	      0xba00000000	                              mov edx, 0	     12619	i386-dis.c	FUNCTION_3	SWITCH_1	IF_1
0x40001ad	      0xb800000000	                              mov eax, 0	     12619	i386-dis.c	FUNCTION_3	SWITCH_1	IF_1
0x40001b2	        0x480f44c2	                          cmove rax, rdx	     12619	i386-dis.c	FUNCTION_3	SWITCH_1	IF_1
0x40001b6	              0xc3	                                     ret	     12619	i386-dis.c	FUNCTION_3	SWITCH_1	IF_1
0x40001b7	          0x83e602	                              and esi, 2	     12621	i386-dis.c	FUNCTION_3	SWITCH_1	ELSE_1
0x40001ba	      0xba00000000	                              mov edx, 0	     12621	i386-dis.c	FUNCTION_3	SWITCH_1	ELSE_1
0x40001bf	      0xb800000000	                              mov eax, 0	     12621	i386-dis.c	FUNCTION_3	SWITCH_1	ELSE_1
0x40001c4	        0x480f44c2	                          cmove rax, rdx	     12621	i386-dis.c	FUNCTION_3	SWITCH_1	ELSE_1
0x40001c8	              0xc3	                                     ret	     12621	i386-dis.c	FUNCTION_3	SWITCH_1	ELSE_1
0x40001c9	      0xb800000000	                              mov eax, 0	     12633	i386-dis.c	FUNCTION_3	SWITCH_1
0x40001ce	              0xc3	                                     ret	     12633	i386-dis.c	FUNCTION_3	SWITCH_1
0x40001cf	      0xb800000000	                              mov eax, 0	     12635	i386-dis.c	FUNCTION_3	SWITCH_1
0x40001d4	            0xf3c3	                                     ret	     12637	i386-dis.c	FUNCTION_3
OP_I	CALL,9:FOR,0:SWITCH,1:WHILE,0:ELSE,2:DO,0:IF,4:functions,0	69
0x40065de	        0x4883ec08	                              sub rsp, 8	     15975	i386-dis.c	FUNCTION_35
0x40065e2	          0x83ff28	                           cmp edi, 0x28	     15979	i386-dis.c	FUNCTION_35	SWITCH_1
0x40065e5	     0xf87d3000000	                            ja 0x40066be	     15979	i386-dis.c	FUNCTION_35	SWITCH_1
0x40065eb	            0x89ff	                            mov edi, edi	     15979	i386-dis.c	FUNCTION_35	SWITCH_1
0x40065ed	    0xff24fd000000	                       jmp qword [rdi*8]	     15979	i386-dis.c	FUNCTION_35	SWITCH_1
0x40065f4	    0x488b05000000	            mov rax, qword [0x040065fb] 	     15982	i386-dis.c	FUNCTION_35	SWITCH_1
0x40065fb	        0x488d7001	                      lea rsi, [rax + 1]	     15982	i386-dis.c	FUNCTION_35	SWITCH_1
0x40065ff	    0x488b3d000000	            mov rdi, qword [0x04006606] 	     15982	i386-dis.c	FUNCTION_35	SWITCH_1
0x4006606	        0x488b4768	            mov rax, qword [rdi + 0x68] 	     15982	i386-dis.c	FUNCTION_35	SWITCH_1
0x400660a	          0x483b30	                    cmp rsi, qword [rax]	     15982	i386-dis.c	FUNCTION_35	SWITCH_1
0x400660d	            0x7605	                           jbe 0x4006614	     15982	i386-dis.c	FUNCTION_35	SWITCH_1
0x400660f	      0xe897b8ffff	                     call sym.fetch_data	     15982	i386-dis.c	FUNCTION_35	SWITCH_1
0x4006614	    0x488b05000000	            mov rax, qword [0x0400661b] 	     15983	i386-dis.c	FUNCTION_35	SWITCH_1
0x400661b	        0x488d5001	                      lea rdx, [rax + 1]	     15983	i386-dis.c	FUNCTION_35	SWITCH_1
0x400661f	    0x488915000000	            mov qword [0x04006626], rdx 	     15983	i386-dis.c	FUNCTION_35	SWITCH_1
0x4006626	           0xfb600	                   movzx eax, byte [rax]	     15983	i386-dis.c	FUNCTION_35	SWITCH_1
0x4006629	      0xbaff000000	                           mov edx, 0xff	     15984	i386-dis.c	FUNCTION_35	SWITCH_1
0x400662e	      0xe9a9000000	                           jmp 0x40066dc	     15985	i386-dis.c	FUNCTION_35	SWITCH_1
0x4006633	    0x833d00000000	               cmp dword [0x0400663a], 2	     15987	i386-dis.c	FUNCTION_35	SWITCH_1	IF_1
0x400663a	            0x7511	                           jne 0x400664d	     15987	i386-dis.c	FUNCTION_35	SWITCH_1	IF_1
0x400663c	      0xe8dfb8ffff	                         call sym.get32s	     15989	i386-dis.c	FUNCTION_35	SWITCH_1	IF_1	CALL_1
0x4006641	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	     15977	i386-dis.c	FUNCTION_35
0x4006648	      0xe98f000000	                           jmp 0x40066dc	     15990	i386-dis.c	FUNCTION_35	SWITCH_1	IF_1
0x400664d	    0xf60500000000	               test byte [0x04006654], 8	     15994	i386-dis.c	FUNCTION_35	SWITCH_1
0x4006654	     0xf84ae000000	                            je 0x4006708	     15994	i386-dis.c	FUNCTION_35	SWITCH_1
0x400665a	    0x830d00000000	            or dword [0x04006661], 0x48 	     15994	i386-dis.c	FUNCTION_35	SWITCH_1
0x4006661	      0xe8bab8ffff	                         call sym.get32s	     15996	i386-dis.c	FUNCTION_35	SWITCH_1	CALL_2
0x4006666	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	     15977	i386-dis.c	FUNCTION_35
0x400666d	            0xeb6d	                           jmp 0x40066dc	     15977	i386-dis.c	FUNCTION_35
0x400666f	      0xe8edb9ffff	                          call sym.get32	     16001	i386-dis.c	FUNCTION_35	SWITCH_1	ELSE_1	IF_3	CALL_3
0x4006674	      0xbaffffffff	                     mov edx, 0xffffffff	     16002	i386-dis.c	FUNCTION_35	SWITCH_1	ELSE_1	IF_3
0x4006679	            0xeb0c	                           jmp 0x4006687	     16002	i386-dis.c	FUNCTION_35	SWITCH_1	ELSE_1	IF_3
0x400667b	      0xe810b9ffff	                          call sym.get16	     16006	i386-dis.c	FUNCTION_35	SWITCH_1	ELSE_1	ELSE_2	CALL_4
0x4006680	            0x4898	                                    cdqe	     16006	i386-dis.c	FUNCTION_35	SWITCH_1	ELSE_1	ELSE_2	CALL_4
0x4006682	      0xbaffff0f00	                        mov edx, 0xfffff	     16007	i386-dis.c	FUNCTION_35	SWITCH_1	ELSE_1	ELSE_2
0x4006687	    0x8b0d00000000	            mov ecx, dword [0x0400668d] 	     16009	i386-dis.c	FUNCTION_35	SWITCH_1	ELSE_1
0x400668d	    0x81e100020000	                          and ecx, 0x200	     16009	i386-dis.c	FUNCTION_35	SWITCH_1	ELSE_1
0x4006693	     0x90d00000000	              or dword [0x04006699], ecx	     16009	i386-dis.c	FUNCTION_35	SWITCH_1	ELSE_1
0x4006699	            0xeb41	                           jmp 0x40066dc	     16009	i386-dis.c	FUNCTION_35	SWITCH_1	ELSE_1
0x400669b	      0xe8f0b8ffff	                          call sym.get16	     16014	i386-dis.c	FUNCTION_35	SWITCH_1	CALL_5
0x40066a0	            0x4898	                                    cdqe	     16014	i386-dis.c	FUNCTION_35	SWITCH_1	CALL_5
0x40066a2	      0xbaffff0f00	                        mov edx, 0xfffff	     16013	i386-dis.c	FUNCTION_35	SWITCH_1
0x40066a7	            0xeb33	                           jmp 0x40066dc	     16015	i386-dis.c	FUNCTION_35	SWITCH_1
0x40066a9	    0x803d00000000	                cmp byte [0x040066b0], 0	     16017	i386-dis.c	FUNCTION_35	SWITCH_1	IF_4
0x40066b0	            0x7465	                            je 0x4006717	     16017	i386-dis.c	FUNCTION_35	SWITCH_1	IF_4
0x40066b2	      0xbf00000000	                              mov edi, 0	     16018	i386-dis.c	FUNCTION_35	SWITCH_1	CALL_6
0x40066b7	      0xe8e1c5ffff	                        call sym.oappend	     16018	i386-dis.c	FUNCTION_35	SWITCH_1	CALL_6
0x40066bc	            0xeb59	                           jmp 0x4006717	     16018	i386-dis.c	FUNCTION_35	SWITCH_1	CALL_6
0x40066be	      0xba05000000	                              mov edx, 5	     16021	i386-dis.c	FUNCTION_35	SWITCH_1	CALL_7
0x40066c3	      0xbe00000000	                              mov esi, 0	     16021	i386-dis.c	FUNCTION_35	SWITCH_1	CALL_7
0x40066c8	      0xbf00000000	                              mov edi, 0	     16021	i386-dis.c	FUNCTION_35	SWITCH_1	CALL_7
0x40066cd	      0xe800000000	                          call 0x40066d2	     16021	i386-dis.c	FUNCTION_35	SWITCH_1	CALL_7
0x40066d2	          0x4889c7	                            mov rdi, rax	     16021	i386-dis.c	FUNCTION_35	SWITCH_1	CALL_7
0x40066d5	      0xe8c3c5ffff	                        call sym.oappend	     16021	i386-dis.c	FUNCTION_35	SWITCH_1	CALL_7
0x40066da	            0xeb3b	                           jmp 0x4006717	     16022	i386-dis.c	FUNCTION_35	SWITCH_1
0x40066dc	    0xc60500000000	            mov byte [0x040066e3], 0x24 	     16026	i386-dis.c	FUNCTION_35
0x40066e3	          0x4821c2	                            and rdx, rax	     16027	i386-dis.c	FUNCTION_35	CALL_8
0x40066e6	      0xbe01000000	                              mov esi, 1	     16027	i386-dis.c	FUNCTION_35	CALL_8
0x40066eb	      0xbf00000000	                              mov edi, 0	     16027	i386-dis.c	FUNCTION_35	CALL_8
0x40066f0	      0xe800b3ffff	            call sym.print_operand_value	     16027	i386-dis.c	FUNCTION_35	CALL_8
0x40066f5	      0xbf00000000	                              mov edi, 0	     16028	i386-dis.c	FUNCTION_35	CALL_9
0x40066fa	      0xe8bdc5ffff	            call sym.oappend_maybe_intel	     16028	i386-dis.c	FUNCTION_35	CALL_9
0x40066ff	    0xc60500000000	                mov byte [0x04006706], 0	     16029	i386-dis.c	FUNCTION_35
0x4006706	            0xeb0f	                           jmp 0x4006717	     16029	i386-dis.c	FUNCTION_35
0x4006708	        0x40f6c601	                             test sil, 1	     15999	i386-dis.c	FUNCTION_35	SWITCH_1	ELSE_1	IF_3
0x400670c	     0xf855dffffff	                           jne 0x400666f	     15999	i386-dis.c	FUNCTION_35	SWITCH_1	ELSE_1	IF_3
0x4006712	      0xe964ffffff	                           jmp 0x400667b	     15999	i386-dis.c	FUNCTION_35	SWITCH_1	ELSE_1	IF_3
0x4006717	        0x4883c408	                              add rsp, 8	     16030	i386-dis.c	FUNCTION_35
0x400671b	              0xc3	                                     ret	     16030	i386-dis.c	FUNCTION_35
OP_REG	CALL,2:FOR,0:SWITCH,2:WHILE,0:ELSE,4:DO,0:IF,5:functions,0	82
0x4004448	        0x4883ec08	                              sub rsp, 8	     15852	i386-dis.c	FUNCTION_33
0x400444c	          0x8d47ba	                   lea eax, [rdi - 0x46]	     15856	i386-dis.c	FUNCTION_33	SWITCH_1
0x400444f	          0x83f805	                              cmp eax, 5	     15856	i386-dis.c	FUNCTION_33	SWITCH_1
0x4004452	            0x771c	                            ja 0x4004470	     15856	i386-dis.c	FUNCTION_33	SWITCH_1
0x4004454	          0x4863ff	                         movsxd rdi, edi	     15860	i386-dis.c	FUNCTION_33	SWITCH_1	CALL_1
0x4004457	    0x488b05000000	            mov rax, qword [0x0400445e] 	     15860	i386-dis.c	FUNCTION_33	SWITCH_1	CALL_1
0x400445e	    0x488bbcf8d0fd	    mov rdi, qword [rax + rdi*8 - 0x230]	     15860	i386-dis.c	FUNCTION_33	SWITCH_1	CALL_1
0x4004466	      0xe832e8ffff	                        call sym.oappend	     15860	i386-dis.c	FUNCTION_33	SWITCH_1	CALL_1
0x400446b	      0xe925010000	                           jmp 0x4004595	     15861	i386-dis.c	FUNCTION_33	SWITCH_1
0x4004470	    0x8b1500000000	            mov edx, dword [0x04004476] 	     15864	i386-dis.c	FUNCTION_33
0x4004476	      0xb900000000	                              mov ecx, 0	     15868	i386-dis.c	FUNCTION_33	ELSE_1
0x400447b	          0xf6c201	                              test dl, 1	     15864	i386-dis.c	FUNCTION_33
0x400447e	            0x740c	                            je 0x400448c	     15864	i386-dis.c	FUNCTION_33
0x4004480	    0x830d00000000	            or dword [0x04004487], 0x41 	     15864	i386-dis.c	FUNCTION_33
0x4004487	      0xb908000000	                              mov ecx, 8	     15866	i386-dis.c	FUNCTION_33	IF_1
0x400448c	          0x8d47b4	                   lea eax, [rdi - 0x4c]	     15870	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x400448f	          0x83f81f	                           cmp eax, 0x1f	     15870	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x4004492	     0xf87d7000000	                            ja 0x400456f	     15870	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x4004498	            0x89c0	                            mov eax, eax	     15870	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x400449a	    0xff24c5000000	                       jmp qword [rax*8]	     15870	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x40044a1	        0x8d4439a4	             lea eax, [rcx + rdi - 0x5c]	     15874	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x40044a5	            0x4898	                                    cdqe	     15874	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x40044a7	    0x488b15000000	            mov rdx, qword [0x040044ae] 	     15874	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x40044ae	        0x488b3cc2	            mov rdi, qword [rdx + rax*8]	     15874	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x40044b2	      0xe9cf000000	                           jmp 0x4004586	     15875	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x40044b7	    0x830d00000000	            or dword [0x040044be], 0x40 	     15878	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x40044be	            0x85d2	                           test edx, edx	     15879	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	IF_2
0x40044c0	            0x7416	                            je 0x40044d8	     15879	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	IF_2
0x40044c2	        0x8d4439ac	             lea eax, [rcx + rdi - 0x54]	     15880	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	IF_2
0x40044c6	            0x4898	                                    cdqe	     15880	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	IF_2
0x40044c8	    0x488b15000000	            mov rdx, qword [0x040044cf] 	     15880	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	IF_2
0x40044cf	        0x488b3cc2	            mov rdi, qword [rdx + rax*8]	     15880	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	IF_2
0x40044d3	      0xe9ae000000	                           jmp 0x4004586	     15880	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	IF_2
0x40044d8	          0x4863ff	                         movsxd rdi, edi	     15882	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_2
0x40044db	    0x488b05000000	            mov rax, qword [0x040044e2] 	     15882	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_2
0x40044e2	    0x488bbcf860fd	    mov rdi, qword [rax + rdi*8 - 0x2a0]	     15882	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_2
0x40044ea	      0xe997000000	                           jmp 0x4004586	     15882	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_2
0x40044ef	    0x833d00000000	               cmp dword [0x040044f6], 2	     15886	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_2	IF_3
0x40044f6	            0x751e	                           jne 0x4004516	     15886	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_2	IF_3
0x40044f8	        0x40f6c601	                             test sil, 1	     15887	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_2	IF_3
0x40044fc	            0x7505	                           jne 0x4004503	     15887	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_2	IF_3
0x40044fe	          0xf6c208	                              test dl, 8	     15887	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_2	IF_3
0x4004501	            0x7413	                            je 0x4004516	     15887	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_2	IF_3
0x4004503	        0x8d44399c	             lea eax, [rcx + rdi - 0x64]	     15889	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_2	IF_3
0x4004507	            0x4898	                                    cdqe	     15889	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_2	IF_3
0x4004509	    0x488b15000000	            mov rdx, qword [0x04004510] 	     15889	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_2	IF_3
0x4004510	        0x488b3cc2	            mov rdi, qword [rdx + rax*8]	     15889	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_2	IF_3
0x4004514	            0xeb70	                           jmp 0x4004586	     15890	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_2	IF_3
0x4004516	          0x83ef18	                           sub edi, 0x18	     15892	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x4004519	          0xf6c208	                              test dl, 8	     15896	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x400451c	            0x746f	                            je 0x400458d	     15896	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x400451e	    0x830d00000000	            or dword [0x04004525], 0x48 	     15896	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x4004525	        0x8d4439b4	             lea eax, [rcx + rdi - 0x4c]	     15898	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	IF_4
0x4004529	            0x4898	                                    cdqe	     15898	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	IF_4
0x400452b	    0x488b15000000	            mov rdx, qword [0x04004532] 	     15898	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	IF_4
0x4004532	        0x488b3cc2	            mov rdi, qword [rdx + rax*8]	     15898	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	IF_4
0x4004536	            0xeb4e	                           jmp 0x4004586	     15898	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	IF_4
0x4004538	        0x8d4439b4	             lea eax, [rcx + rdi - 0x4c]	     15902	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_3	IF_5
0x400453c	            0x4898	                                    cdqe	     15902	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_3	IF_5
0x400453e	    0x488b15000000	            mov rdx, qword [0x04004545] 	     15902	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_3	IF_5
0x4004545	        0x488b3cc2	            mov rdi, qword [rdx + rax*8]	     15902	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_3	IF_5
0x4004549	            0xeb11	                           jmp 0x400455c	     15902	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_3	IF_5
0x400454b	        0x8d4439b4	             lea eax, [rcx + rdi - 0x4c]	     15904	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_3	ELSE_4
0x400454f	            0x4898	                                    cdqe	     15904	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_3	ELSE_4
0x4004551	    0x488b15000000	            mov rdx, qword [0x04004558] 	     15904	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_3	ELSE_4
0x4004558	        0x488b3cc2	            mov rdi, qword [rdx + rax*8]	     15904	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_3	ELSE_4
0x400455c	    0x8b0500000000	            mov eax, dword [0x04004562] 	     15905	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_3
0x4004562	      0x2500020000	                          and eax, 0x200	     15905	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_3
0x4004567	     0x90500000000	              or dword [0x0400456d], eax	     15905	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_3
0x400456d	            0xeb17	                           jmp 0x4004586	     15905	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_3
0x400456f	      0xba05000000	                              mov edx, 5	     15909	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x4004574	      0xbe00000000	                              mov esi, 0	     15909	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x4004579	      0xbf00000000	                              mov edi, 0	     15909	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x400457e	      0xe800000000	                          call 0x4004583	     15909	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x4004583	          0x4889c7	                            mov rdi, rax	     15909	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2
0x4004586	      0xe812e7ffff	                        call sym.oappend	     15912	i386-dis.c	FUNCTION_33	CALL_2
0x400458b	            0xeb08	                           jmp 0x4004595	     15912	i386-dis.c	FUNCTION_33	CALL_2
0x400458d	        0x40f6c601	                             test sil, 1	     15901	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_3	IF_5
0x4004591	            0x75a5	                           jne 0x4004538	     15901	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_3	IF_5
0x4004593	            0xebb6	                           jmp 0x400454b	     15901	i386-dis.c	FUNCTION_33	ELSE_1	SWITCH_2	ELSE_3	IF_5
0x4004595	        0x4883c408	                              add rsp, 8	     15913	i386-dis.c	FUNCTION_33
0x4004599	              0xc3	                                     ret	     15913	i386-dis.c	FUNCTION_33
get_vex_imm8	CALL,0:FOR,0:SWITCH,2:WHILE,0:ELSE,1:DO,0:IF,9:functions,0	70
0x4002b28	              0x53	                                push rbx	     17278	i386-dis.c	FUNCTION_80
0x4002b29	    0x8b1500000000	            mov edx, dword [0x04002b2f] 	     17281	i386-dis.c	FUNCTION_80	IF_1
0x4002b2f	      0xb800000000	                              mov eax, 0	     17279	i386-dis.c	FUNCTION_80
0x4002b34	          0x83fa03	                              cmp edx, 3	     17281	i386-dis.c	FUNCTION_80	IF_1
0x4002b37	     0xf84b2000000	                            je 0x4002bef	     17281	i386-dis.c	FUNCTION_80	IF_1
0x4002b3d	            0x89f3	                            mov ebx, esi	     17281	i386-dis.c	FUNCTION_80	IF_1
0x4002b3f	        0x40f6c702	                             test dil, 2	     17284	i386-dis.c	FUNCTION_80	IF_1	IF_2
0x4002b43	            0x7509	                           jne 0x4002b4e	     17284	i386-dis.c	FUNCTION_80	IF_1	IF_2
0x4002b45	    0x833d00000000	               cmp dword [0x04002b4c], 2	     17284	i386-dis.c	FUNCTION_80	IF_1	IF_2
0x4002b4c	            0x756c	                           jne 0x4002bba	     17284	i386-dis.c	FUNCTION_80	IF_1	IF_2
0x4002b4e	    0x8b1500000000	            mov edx, dword [0x04002b54] 	     17287	i386-dis.c	FUNCTION_80	IF_1	IF_2
0x4002b54	      0xb800000000	                              mov eax, 0	     17279	i386-dis.c	FUNCTION_80
0x4002b59	          0x83fa04	                              cmp edx, 4	     17290	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4002b5c	            0x7535	                           jne 0x4002b93	     17290	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4002b5e	    0x488b05000000	            mov rax, qword [0x04002b65] 	     17292	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4002b65	        0x488d7001	                      lea rsi, [rax + 1]	     17292	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4002b69	    0x488b3d000000	            mov rdi, qword [0x04002b70] 	     17292	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4002b70	        0x488b4768	            mov rax, qword [rdi + 0x68] 	     17292	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4002b74	          0x483b30	                    cmp rsi, qword [rax]	     17292	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4002b77	            0x7605	                           jbe 0x4002b7e	     17292	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4002b79	      0xe82df3ffff	                     call sym.fetch_data	     17292	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4002b7e	    0x488b05000000	            mov rax, qword [0x04002b85] 	     17293	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4002b85	           0xfb610	                   movzx edx, byte [rax]	     17293	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4002b88	          0x83e207	                              and edx, 7	     17293	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_3
0x4002b8b	            0x85db	                           test ebx, ebx	     17279	i386-dis.c	FUNCTION_80
0x4002b8d	           0xf94c0	                                 sete al	     17279	i386-dis.c	FUNCTION_80
0x4002b90	           0xfb6c0	                           movzx eax, al	     17279	i386-dis.c	FUNCTION_80
0x4002b93	            0x85db	                           test ebx, ebx	     17305	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5
0x4002b95	            0x7558	                           jne 0x4002bef	     17305	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5
0x4002b97	    0x8b0d00000000	            mov ecx, dword [0x04002b9d] 	     17307	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1
0x4002b9d	          0x83f901	                              cmp ecx, 1	     17307	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1
0x4002ba0	            0x7413	                            je 0x4002bb5	     17307	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1
0x4002ba2	          0x83f902	                              cmp ecx, 2	     17307	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1
0x4002ba5	            0x7409	                            je 0x4002bb0	     17307	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1
0x4002ba7	            0x85c9	                           test ecx, ecx	     17307	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1
0x4002ba9	            0x7544	                           jne 0x4002bef	     17307	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1
0x4002bab	          0x83fa05	                              cmp edx, 5	     17312	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1	IF_6
0x4002bae	            0x753f	                           jne 0x4002bef	     17312	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1	IF_6
0x4002bb0	          0x83c004	                              add eax, 4	     17318	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1
0x4002bb3	            0xeb3a	                           jmp 0x4002bef	     17319	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1
0x4002bb5	          0x83c001	                              add eax, 1	     17322	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1
0x4002bb8	            0xeb35	                           jmp 0x4002bef	     17323	i386-dis.c	FUNCTION_80	IF_1	IF_2	IF_5	SWITCH_1
0x4002bba	      0xb800000000	                              mov eax, 0	     17279	i386-dis.c	FUNCTION_80
0x4002bbf	            0x85f6	                           test esi, esi	     17333	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7
0x4002bc1	            0x752c	                           jne 0x4002bef	     17333	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7
0x4002bc3	      0xb801000000	                              mov eax, 1	     17279	i386-dis.c	FUNCTION_80
0x4002bc8	          0x83fa01	                              cmp edx, 1	     17335	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2
0x4002bcb	            0x7422	                            je 0x4002bef	     17335	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2
0x4002bcd	      0xb802000000	                              mov eax, 2	     17345	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2
0x4002bd2	          0x83fa02	                              cmp edx, 2	     17335	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2
0x4002bd5	            0x7418	                            je 0x4002bef	     17335	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2
0x4002bd7	      0xb800000000	                              mov eax, 0	     17279	i386-dis.c	FUNCTION_80
0x4002bdc	            0x85d2	                           test edx, edx	     17335	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2
0x4002bde	            0x750f	                           jne 0x4002bef	     17335	i386-dis.c	FUNCTION_80	IF_1	ELSE_1	IF_7	SWITCH_2
0x4002be0	    0x833d00000000	               cmp dword [0x04002be7], 6	     17279	i386-dis.c	FUNCTION_80
0x4002be7	           0xf94c0	                                 sete al	     17279	i386-dis.c	FUNCTION_80
0x4002bea	           0xfb6c0	                           movzx eax, al	     17279	i386-dis.c	FUNCTION_80
0x4002bed	             0x1c0	                            add eax, eax	     17279	i386-dis.c	FUNCTION_80
0x4002bef	          0x4863d8	                         movsxd rbx, eax	     17361	i386-dis.c	FUNCTION_80
0x4002bf2	    0x488b05000000	            mov rax, qword [0x04002bf9] 	     17361	i386-dis.c	FUNCTION_80
0x4002bf9	      0x488d741801	                lea rsi, [rax + rbx + 1]	     17361	i386-dis.c	FUNCTION_80
0x4002bfe	    0x488b3d000000	            mov rdi, qword [0x04002c05] 	     17361	i386-dis.c	FUNCTION_80
0x4002c05	        0x488b4768	            mov rax, qword [rdi + 0x68] 	     17361	i386-dis.c	FUNCTION_80
0x4002c09	          0x483b30	                    cmp rsi, qword [rax]	     17361	i386-dis.c	FUNCTION_80
0x4002c0c	            0x7605	                           jbe 0x4002c13	     17361	i386-dis.c	FUNCTION_80
0x4002c0e	      0xe898f2ffff	                     call sym.fetch_data	     17361	i386-dis.c	FUNCTION_80
0x4002c13	    0x488b05000000	            mov rax, qword [0x04002c1a] 	     17362	i386-dis.c	FUNCTION_80
0x4002c1a	         0xfb60418	             movzx eax, byte [rax + rbx]	     17362	i386-dis.c	FUNCTION_80
0x4002c1e	              0x5b	                                 pop rbx	     17363	i386-dis.c	FUNCTION_80
0x4002c1f	              0xc3	                                     ret	     17363	i386-dis.c	FUNCTION_80
OP_EX_VexReg	CALL,3:FOR,0:SWITCH,1:WHILE,0:ELSE,1:DO,0:IF,4:functions,0	32
0x4005f9f	        0x4883ec08	                              sub rsp, 8	     17367	i386-dis.c	FUNCTION_81
0x4005fa3	          0x83faff	             cmp edx, 0xffffffffffffffff	     17370	i386-dis.c	FUNCTION_81	IF_1
0x4005fa6	            0x7529	                           jne 0x4005fd1	     17370	i386-dis.c	FUNCTION_81	IF_1
0x4005fa8	    0x833d00000000	               cmp dword [0x04005faf], 3	     17370	i386-dis.c	FUNCTION_81	IF_1
0x4005faf	            0x7407	                            je 0x4005fb8	     17370	i386-dis.c	FUNCTION_81	IF_1
0x4005fb1	      0xe891eaffff	                    call sym.OP_E_memory	     17372	i386-dis.c	FUNCTION_81	IF_1	CALL_1
0x4005fb6	            0xeb61	                           jmp 0x4006019	     17373	i386-dis.c	FUNCTION_81	IF_1
0x4005fb8	    0x8b1500000000	            mov edx, dword [0x04005fbe] 	     17379	i386-dis.c	FUNCTION_81	ELSE_1	IF_2
0x4005fbe	    0xf60500000000	               test byte [0x04005fc5], 1	     17380	i386-dis.c	FUNCTION_81	ELSE_1	IF_2
0x4005fc5	            0x740a	                            je 0x4005fd1	     17380	i386-dis.c	FUNCTION_81	ELSE_1	IF_2
0x4005fc7	    0x830d00000000	            or dword [0x04005fce], 0x41 	     17380	i386-dis.c	FUNCTION_81	ELSE_1	IF_2
0x4005fce	          0x83c208	                              add edx, 8	     17382	i386-dis.c	FUNCTION_81	ELSE_1	IF_2	IF_3
0x4005fd1	            0x89d0	                            mov eax, edx	     17385	i386-dis.c	FUNCTION_81	ELSE_1	IF_4
0x4005fd3	          0x83e007	                              and eax, 7	     17385	i386-dis.c	FUNCTION_81	ELSE_1	IF_4
0x4005fd6	    0x833d00000000	               cmp dword [0x04005fdd], 2	     17385	i386-dis.c	FUNCTION_81	ELSE_1	IF_4
0x4005fdd	           0xf45d0	                         cmovne edx, eax	     17385	i386-dis.c	FUNCTION_81	ELSE_1	IF_4
0x4005fe0	    0x8b0500000000	            mov eax, dword [0x04005fe6] 	     17388	i386-dis.c	FUNCTION_81	SWITCH_1
0x4005fe6	      0x3d80000000	                           cmp eax, 0x80	     17388	i386-dis.c	FUNCTION_81	SWITCH_1
0x4005feb	            0x7409	                            je 0x4005ff6	     17388	i386-dis.c	FUNCTION_81	SWITCH_1
0x4005fed	      0x3d00010000	                          cmp eax, 0x100	     17388	i386-dis.c	FUNCTION_81	SWITCH_1
0x4005ff2	            0x740b	                            je 0x4005fff	     17388	i386-dis.c	FUNCTION_81	SWITCH_1
0x4005ff4	            0xeb12	                           jmp 0x4006008	     17388	i386-dis.c	FUNCTION_81	SWITCH_1
0x4005ff6	    0x488b05000000	            mov rax, qword [0x04005ffd] 	     17391	i386-dis.c	FUNCTION_81	SWITCH_1
0x4005ffd	            0xeb0e	                           jmp 0x400600d	     17392	i386-dis.c	FUNCTION_81	SWITCH_1
0x4005fff	    0x488b05000000	            mov rax, qword [0x04006006] 	     17394	i386-dis.c	FUNCTION_81	SWITCH_1
0x4006006	            0xeb05	                           jmp 0x400600d	     17395	i386-dis.c	FUNCTION_81	SWITCH_1
0x4006008	      0xe800000000	                          call 0x400600d	     17397	i386-dis.c	FUNCTION_81	SWITCH_1	CALL_2
0x400600d	          0x4863d2	                         movsxd rdx, edx	     17399	i386-dis.c	FUNCTION_81	CALL_3
0x4006010	        0x488b3cd0	            mov rdi, qword [rax + rdx*8]	     17399	i386-dis.c	FUNCTION_81	CALL_3
0x4006014	      0xe884ccffff	                        call sym.oappend	     17399	i386-dis.c	FUNCTION_81	CALL_3
0x4006019	        0x4883c408	                              add rsp, 8	     17400	i386-dis.c	FUNCTION_81
0x400601d	              0xc3	                                     ret	     17400	i386-dis.c	FUNCTION_81
OP_0f07	CALL,2:FOR,0:SWITCH,0:WHILE,0:ELSE,1:DO,0:IF,1:functions,0	10
0x4005853	        0x4883ec08	                              sub rsp, 8	     16680	i386-dis.c	FUNCTION_59
0x4005857	    0x833d00000000	               cmp dword [0x0400585e], 3	     16681	i386-dis.c	FUNCTION_59	IF_1
0x400585e	            0x7509	                           jne 0x4005869	     16681	i386-dis.c	FUNCTION_59	IF_1
0x4005860	    0x833d00000000	               cmp dword [0x04005867], 0	     16681	i386-dis.c	FUNCTION_59	IF_1
0x4005867	            0x7407	                            je 0x4005870	     16681	i386-dis.c	FUNCTION_59	IF_1
0x4005869	      0xe8f1dcffff	                          call sym.BadOp	     16682	i386-dis.c	FUNCTION_59	CALL_1
0x400586e	            0xeb05	                           jmp 0x4005875	     16682	i386-dis.c	FUNCTION_59	CALL_1
0x4005870	      0xe880feffff	                           call sym.OP_E	     16684	i386-dis.c	FUNCTION_59	CALL_2
0x4005875	        0x4883c408	                              add rsp, 8	     16685	i386-dis.c	FUNCTION_59
0x4005879	              0xc3	                                     ret	     16685	i386-dis.c	FUNCTION_59
OP_Vex_2src_1	CALL,2:FOR,0:SWITCH,0:WHILE,0:ELSE,1:DO,0:IF,3:functions,0	22
0x4005add	        0x4883ec08	                              sub rsp, 8	     17468	i386-dis.c	FUNCTION_84
0x4005ae1	    0x833d00000000	               cmp dword [0x04005ae8], 3	     17469	i386-dis.c	FUNCTION_84	IF_1
0x4005ae8	            0x7516	                           jne 0x4005b00	     17469	i386-dis.c	FUNCTION_84	IF_1
0x4005aea	    0x803d00000000	                cmp byte [0x04005af1], 0	     17472	i386-dis.c	FUNCTION_84	IF_1
0x4005af1	            0x7505	                           jne 0x4005af8	     17472	i386-dis.c	FUNCTION_84	IF_1
0x4005af3	      0xe800000000	                          call 0x4005af8	     17472	i386-dis.c	FUNCTION_84	IF_1
0x4005af8	    0x488305000000	               add qword [0x04005b00], 1	     17473	i386-dis.c	FUNCTION_84	IF_1
0x4005b00	    0x833d00000000	               cmp dword [0x04005b07], 0	     17476	i386-dis.c	FUNCTION_84	IF_2
0x4005b07	            0x7429	                            je 0x4005b32	     17476	i386-dis.c	FUNCTION_84	IF_2
0x4005b09	    0x8b0500000000	            mov eax, dword [0x04005b0f] 	     17478	i386-dis.c	FUNCTION_84	IF_2
0x4005b0f	            0x89c2	                            mov edx, eax	     17481	i386-dis.c	FUNCTION_84	IF_2	IF_3
0x4005b11	          0x83e207	                              and edx, 7	     17481	i386-dis.c	FUNCTION_84	IF_2	IF_3
0x4005b14	    0x833d00000000	               cmp dword [0x04005b1b], 2	     17481	i386-dis.c	FUNCTION_84	IF_2	IF_3
0x4005b1b	           0xf45c2	                         cmovne eax, edx	     17481	i386-dis.c	FUNCTION_84	IF_2	IF_3
0x4005b1e	            0x89c0	                            mov eax, eax	     17482	i386-dis.c	FUNCTION_84	IF_2	CALL_1
0x4005b20	    0x488b15000000	            mov rdx, qword [0x04005b27] 	     17482	i386-dis.c	FUNCTION_84	IF_2	CALL_1
0x4005b27	        0x488b3cc2	            mov rdi, qword [rdx + rax*8]	     17482	i386-dis.c	FUNCTION_84	IF_2	CALL_1
0x4005b2b	      0xe86dd1ffff	                        call sym.oappend	     17482	i386-dis.c	FUNCTION_84	IF_2	CALL_1
0x4005b30	            0xeb05	                           jmp 0x4005b37	     17482	i386-dis.c	FUNCTION_84	IF_2	CALL_1
0x4005b32	      0xe8f5feffff	                    call sym.OP_Vex_2src	     17485	i386-dis.c	FUNCTION_84	CALL_2
0x4005b37	        0x4883c408	                              add rsp, 8	     17486	i386-dis.c	FUNCTION_84
0x4005b3b	              0xc3	                                     ret	     17486	i386-dis.c	FUNCTION_84
OP_REG_VexI4	CALL,3:FOR,0:SWITCH,1:WHILE,0:ELSE,0:DO,0:IF,2:functions,0	37
0x40068c1	              0x53	                                push rbx	     17532	i386-dis.c	FUNCTION_87
0x40068c2	            0x89fb	                            mov ebx, edi	     17532	i386-dis.c	FUNCTION_87
0x40068c4	    0x488b05000000	            mov rax, qword [0x040068cb] 	     17536	i386-dis.c	FUNCTION_87
0x40068cb	        0x488d7001	                      lea rsi, [rax + 1]	     17536	i386-dis.c	FUNCTION_87
0x40068cf	    0x488b3d000000	            mov rdi, qword [0x040068d6] 	     17536	i386-dis.c	FUNCTION_87
0x40068d6	        0x488b4768	            mov rax, qword [rdi + 0x68] 	     17536	i386-dis.c	FUNCTION_87
0x40068da	          0x483b30	                    cmp rsi, qword [rax]	     17536	i386-dis.c	FUNCTION_87
0x40068dd	            0x7605	                           jbe 0x40068e4	     17536	i386-dis.c	FUNCTION_87
0x40068df	      0xe8c7b5ffff	                     call sym.fetch_data	     17536	i386-dis.c	FUNCTION_87
0x40068e4	    0x488b05000000	            mov rax, qword [0x040068eb] 	     17537	i386-dis.c	FUNCTION_87
0x40068eb	        0x488d5001	                      lea rdx, [rax + 1]	     17537	i386-dis.c	FUNCTION_87
0x40068ef	    0x488915000000	            mov qword [0x040068f6], rdx 	     17537	i386-dis.c	FUNCTION_87
0x40068f6	           0xfb600	                   movzx eax, byte [rax]	     17537	i386-dis.c	FUNCTION_87
0x40068f9	          0x83fb0d	                            cmp ebx, 0xd	     17539	i386-dis.c	FUNCTION_87	IF_1
0x40068fc	            0x7405	                            je 0x4006903	     17539	i386-dis.c	FUNCTION_87	IF_1
0x40068fe	      0xe800000000	                          call 0x4006903	     17540	i386-dis.c	FUNCTION_87	CALL_1
0x4006903	          0xc1f804	                              sar eax, 4	     17542	i386-dis.c	FUNCTION_87
0x4006906	            0x89c2	                            mov edx, eax	     17544	i386-dis.c	FUNCTION_87	IF_2
0x4006908	          0x83e207	                              and edx, 7	     17544	i386-dis.c	FUNCTION_87	IF_2
0x400690b	    0x833d00000000	               cmp dword [0x04006912], 2	     17544	i386-dis.c	FUNCTION_87	IF_2
0x4006912	           0xf45c2	                         cmovne eax, edx	     17544	i386-dis.c	FUNCTION_87	IF_2
0x4006915	    0x8b1500000000	            mov edx, dword [0x0400691b] 	     17546	i386-dis.c	FUNCTION_87	SWITCH_1
0x400691b	    0x81fa80000000	                           cmp edx, 0x80	     17546	i386-dis.c	FUNCTION_87	SWITCH_1
0x4006921	            0x740a	                            je 0x400692d	     17546	i386-dis.c	FUNCTION_87	SWITCH_1
0x4006923	    0x81fa00010000	                          cmp edx, 0x100	     17546	i386-dis.c	FUNCTION_87	SWITCH_1
0x4006929	            0x740b	                            je 0x4006936	     17546	i386-dis.c	FUNCTION_87	SWITCH_1
0x400692b	            0xeb12	                           jmp 0x400693f	     17546	i386-dis.c	FUNCTION_87	SWITCH_1
0x400692d	    0x488b15000000	            mov rdx, qword [0x04006934] 	     17549	i386-dis.c	FUNCTION_87	SWITCH_1
0x4006934	            0xeb0e	                           jmp 0x4006944	     17550	i386-dis.c	FUNCTION_87	SWITCH_1
0x4006936	    0x488b15000000	            mov rdx, qword [0x0400693d] 	     17552	i386-dis.c	FUNCTION_87	SWITCH_1
0x400693d	            0xeb05	                           jmp 0x4006944	     17553	i386-dis.c	FUNCTION_87	SWITCH_1
0x400693f	      0xe800000000	                          call 0x4006944	     17555	i386-dis.c	FUNCTION_87	SWITCH_1	CALL_2
0x4006944	            0x4898	                                    cdqe	     17557	i386-dis.c	FUNCTION_87	CALL_3
0x4006946	        0x488b3cc2	            mov rdi, qword [rdx + rax*8]	     17557	i386-dis.c	FUNCTION_87	CALL_3
0x400694a	      0xe84ec3ffff	                        call sym.oappend	     17557	i386-dis.c	FUNCTION_87	CALL_3
0x400694f	              0x5b	                                 pop rbx	     17558	i386-dis.c	FUNCTION_87
0x4006950	              0xc3	                                     ret	     17558	i386-dis.c	FUNCTION_87
