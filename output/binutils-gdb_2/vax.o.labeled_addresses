vax_operandmode	DO,0:functions,0:CALL,1:FOR,0:SWITCH,1:IF,0:ELSE,0:WHILE,0	56
0x4000040	           0xfb607	                   movzx eax, byte [rdi]	        82	vax.c	FUNCTION_1
0x4000043	            0x89c2	                            mov edx, eax	        82	vax.c	FUNCTION_1
0x4000045	          0x83e20f	                            and edx, 0xf	        82	vax.c	FUNCTION_1
0x4000048	          0xc0e804	                               shr al, 4	        84	vax.c	FUNCTION_1	SWITCH_1
0x400004b	           0xfb6c0	                           movzx eax, al	        84	vax.c	FUNCTION_1	SWITCH_1
0x400004e	    0xff24c5000000	                       jmp qword [rax*8]	        84	vax.c	FUNCTION_1	SWITCH_1
0x4000055	      0xb801000000	                              mov eax, 1	        92	vax.c	FUNCTION_1	SWITCH_1
0x400005a	              0xc3	                                     ret	        92	vax.c	FUNCTION_1	SWITCH_1
0x400005b	      0xb803000000	                              mov eax, 3	        96	vax.c	FUNCTION_1	SWITCH_1
0x4000060	              0xc3	                                     ret	        96	vax.c	FUNCTION_1	SWITCH_1
0x4000061	      0xb804000000	                              mov eax, 4	        98	vax.c	FUNCTION_1	SWITCH_1
0x4000066	              0xc3	                                     ret	        98	vax.c	FUNCTION_1	SWITCH_1
0x4000067	          0x83fa0f	                            cmp edx, 0xf	       100	vax.c	FUNCTION_1	SWITCH_1
0x400006a	           0xf94c0	                                 sete al	       100	vax.c	FUNCTION_1	SWITCH_1
0x400006d	           0xfb6c0	                           movzx eax, al	       100	vax.c	FUNCTION_1	SWITCH_1
0x4000070	    0x8d04c5050000	                    lea eax, [rax*8 + 5]	       100	vax.c	FUNCTION_1	SWITCH_1
0x4000077	              0xc3	                                     ret	       100	vax.c	FUNCTION_1	SWITCH_1
0x4000078	          0x83fa0f	                            cmp edx, 0xf	       102	vax.c	FUNCTION_1	SWITCH_1
0x400007b	           0xf94c0	                                 sete al	       102	vax.c	FUNCTION_1	SWITCH_1
0x400007e	           0xfb6c0	                           movzx eax, al	       102	vax.c	FUNCTION_1	SWITCH_1
0x4000081	    0x8d04c5060000	                    lea eax, [rax*8 + 6]	       102	vax.c	FUNCTION_1	SWITCH_1
0x4000088	              0xc3	                                     ret	       102	vax.c	FUNCTION_1	SWITCH_1
0x4000089	          0x83fa0f	                            cmp edx, 0xf	       104	vax.c	FUNCTION_1	SWITCH_1
0x400008c	           0xf94c0	                                 sete al	       104	vax.c	FUNCTION_1	SWITCH_1
0x400008f	           0xfb6c0	                           movzx eax, al	       104	vax.c	FUNCTION_1	SWITCH_1
0x4000092	    0x8d04c5070000	                    lea eax, [rax*8 + 7]	       104	vax.c	FUNCTION_1	SWITCH_1
0x4000099	              0xc3	                                     ret	       104	vax.c	FUNCTION_1	SWITCH_1
0x400009a	          0x83fa0f	                            cmp edx, 0xf	       106	vax.c	FUNCTION_1	SWITCH_1
0x400009d	           0xf94c0	                                 sete al	       106	vax.c	FUNCTION_1	SWITCH_1
0x40000a0	           0xfb6c0	                           movzx eax, al	       106	vax.c	FUNCTION_1	SWITCH_1
0x40000a3	    0x8d04c5080000	                    lea eax, [rax*8 + 8]	       106	vax.c	FUNCTION_1	SWITCH_1
0x40000aa	              0xc3	                                     ret	       106	vax.c	FUNCTION_1	SWITCH_1
0x40000ab	          0x83fa0f	                            cmp edx, 0xf	       108	vax.c	FUNCTION_1	SWITCH_1
0x40000ae	           0xf94c0	                                 sete al	       108	vax.c	FUNCTION_1	SWITCH_1
0x40000b1	           0xfb6c0	                           movzx eax, al	       108	vax.c	FUNCTION_1	SWITCH_1
0x40000b4	    0x8d04c5090000	                    lea eax, [rax*8 + 9]	       108	vax.c	FUNCTION_1	SWITCH_1
0x40000bb	              0xc3	                                     ret	       108	vax.c	FUNCTION_1	SWITCH_1
0x40000bc	          0x83fa0f	                            cmp edx, 0xf	       110	vax.c	FUNCTION_1	SWITCH_1
0x40000bf	           0xf94c0	                                 sete al	       110	vax.c	FUNCTION_1	SWITCH_1
0x40000c2	           0xfb6c0	                           movzx eax, al	       110	vax.c	FUNCTION_1	SWITCH_1
0x40000c5	    0x8d04c50a0000	                  lea eax, [rax*8 + 0xa]	       110	vax.c	FUNCTION_1	SWITCH_1
0x40000cc	              0xc3	                                     ret	       110	vax.c	FUNCTION_1	SWITCH_1
0x40000cd	          0x83fa0f	                            cmp edx, 0xf	       112	vax.c	FUNCTION_1	SWITCH_1
0x40000d0	           0xf94c0	                                 sete al	       112	vax.c	FUNCTION_1	SWITCH_1
0x40000d3	           0xfb6c0	                           movzx eax, al	       112	vax.c	FUNCTION_1	SWITCH_1
0x40000d6	    0x8d04c50b0000	                  lea eax, [rax*8 + 0xb]	       112	vax.c	FUNCTION_1	SWITCH_1
0x40000dd	              0xc3	                                     ret	       112	vax.c	FUNCTION_1	SWITCH_1
0x40000de	          0x83fa0f	                            cmp edx, 0xf	       114	vax.c	FUNCTION_1	SWITCH_1
0x40000e1	           0xf94c0	                                 sete al	       114	vax.c	FUNCTION_1	SWITCH_1
0x40000e4	           0xfb6c0	                           movzx eax, al	       114	vax.c	FUNCTION_1	SWITCH_1
0x40000e7	    0x8d04c50c0000	                  lea eax, [rax*8 + 0xc]	       114	vax.c	FUNCTION_1	SWITCH_1
0x40000ee	              0xc3	                                     ret	       114	vax.c	FUNCTION_1	SWITCH_1
0x40000ef	      0xb800000000	                              mov eax, 0	        90	vax.c	FUNCTION_1	SWITCH_1
0x40000f4	              0xc3	                                     ret	        90	vax.c	FUNCTION_1	SWITCH_1
0x40000f5	      0xb802000000	                              mov eax, 2	        94	vax.c	FUNCTION_1	SWITCH_1
0x40000fa	              0xc3	                                     ret	       118	vax.c	FUNCTION_1
vax_find_call	DO,0:functions,0:CALL,18:FOR,1:SWITCH,2:IF,5:ELSE,0:WHILE,0	204
0x40001d7	            0x4157	                                push r15	       233	vax.c	FUNCTION_5
0x40001d9	            0x4156	                                push r14	       233	vax.c	FUNCTION_5
0x40001db	            0x4155	                                push r13	       233	vax.c	FUNCTION_5
0x40001dd	            0x4154	                                push r12	       233	vax.c	FUNCTION_5
0x40001df	              0x55	                                push rbp	       233	vax.c	FUNCTION_5
0x40001e0	              0x53	                                push rbx	       233	vax.c	FUNCTION_5
0x40001e1	        0x4883ec18	                           sub rsp, 0x18	       233	vax.c	FUNCTION_5
0x40001e5	          0x4989ff	                            mov r15, rdi	       233	vax.c	FUNCTION_5
0x40001e8	          0x4889f5	                            mov rbp, rsi	       233	vax.c	FUNCTION_5
0x40001eb	          0x4989d5	                            mov r13, rdx	       233	vax.c	FUNCTION_5
0x40001ee	    0x833d00000000	               cmp dword [0x040001f5], 0	       242	vax.c	FUNCTION_5	IF_1
0x40001f5	            0x752f	                           jne 0x4000226	       242	vax.c	FUNCTION_5	IF_1
0x40001f7	    0xc70500000000	               mov dword [0x04000201], 1	       244	vax.c	FUNCTION_5	IF_1
0x4000201	      0xbf00000000	                              mov edi, 0	       245	vax.c	FUNCTION_5	IF_1	CALL_1
0x4000206	      0xe800000000	                          call 0x400020b	       245	vax.c	FUNCTION_5	IF_1	CALL_1
0x400020b	    0xf20f10050000	         movsd xmm0, qword [0x04000213] 	       246	vax.c	FUNCTION_5	IF_1
0x4000213	    0xf20f11050000	         movsd qword [0x0400021b], xmm0 	       246	vax.c	FUNCTION_5	IF_1
0x400021b	    0x48c705000000	               mov qword [0x04000226], 0	       247	vax.c	FUNCTION_5	IF_1
0x4000226	    0xf60500000000	               test byte [0x0400022d], 1	       250	vax.c	FUNCTION_5	CALL_2
0x400022d	            0x741e	                            je 0x400024d	       250	vax.c	FUNCTION_5	CALL_2
0x400022f	        0x498b5710	            mov rdx, qword [r15 + 0x10] 	       104	stdio2.h	CALL_17
0x4000233	          0x4d89e8	                             mov r8, r13	       104	stdio2.h	CALL_17
0x4000236	          0x4889e9	                            mov rcx, rbp	       104	stdio2.h	CALL_17
0x4000239	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_17
0x400023e	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_17
0x4000243	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_17
0x4000248	      0xe800000000	                          call 0x400024d	       104	stdio2.h	CALL_17
0x400024d	          0x4c39ed	                            cmp rbp, r13	       253	vax.c	FUNCTION_5	FOR_1
0x4000250	     0xf83bd020000	                           jae 0x4000513	       253	vax.c	FUNCTION_5	FOR_1
0x4000256	    0x488b05000000	            mov rax, qword [0x0400025d] 	       257	vax.c	FUNCTION_5	FOR_1
0x400025d	          0x4889eb	                            mov rbx, rbp	       256	vax.c	FUNCTION_5	FOR_1
0x4000260	        0x482b5828	             sub rbx, qword [rax + 0x28]	       256	vax.c	FUNCTION_5	FOR_1
0x4000264	    0x48031d000000	             add rbx, qword [0x0400026b]	       256	vax.c	FUNCTION_5	FOR_1
0x400026b	    0x41bc01000000	                             mov r12d, 1	       255	vax.c	FUNCTION_5	FOR_1
0x4000271	          0x803bfb	                    cmp byte [rbx], 0xfb	       258	vax.c	FUNCTION_5	FOR_1	IF_2
0x4000274	     0xf853f020000	                           jne 0x40004b9	       258	vax.c	FUNCTION_5	FOR_1	IF_2
0x400027a	    0xf60500000000	               test byte [0x04000281], 1	       264	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_3
0x4000281	     0xf8440020000	                            je 0x40004c7	       264	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_3
0x4000287	          0x4889ea	                            mov rdx, rbp	       104	stdio2.h	CALL_17
0x400028a	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_17
0x400028f	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_17
0x4000294	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_17
0x4000299	      0xe800000000	                          call 0x400029e	       104	stdio2.h	CALL_17
0x400029e	        0x4c8d6301	                      lea r12, [rbx + 1]	       266	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_4
0x40002a2	          0x4c89e7	                            mov rdi, r12	       266	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_4
0x40002a5	      0xe896fdffff	                call sym.vax_operandmode	       266	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_4
0x40002aa	          0x4189c6	                           mov r14d, eax	       266	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_4
0x40002ad	            0x85c0	                           test eax, eax	       267	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_1
0x40002af	            0x7409	                            je 0x40002ba	       267	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_1
0x40002b1	          0x83f80d	                            cmp eax, 0xd	       267	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_1
0x40002b4	     0xf85ce010000	                           jne 0x4000488	       267	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_1
0x40002ba	          0x4c89e7	                            mov rdi, r12	       275	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_5
0x40002bd	      0xe8cefeffff	              call sym.vax_operandlength	       275	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_5
0x40002c2	        0x4c8d6001	                      lea r12, [rax + 1]	       275	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_5
0x40002c6	          0x4c01e3	                            add rbx, r12	       276	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_6
0x40002c9	          0x4889df	                            mov rdi, rbx	       276	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_6
0x40002cc	      0xe86ffdffff	                call sym.vax_operandmode	       276	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_6
0x40002d1	        0x89442408	                mov dword [rsp + 8], eax	       276	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_6
0x40002d5	    0xf60500000000	               test byte [0x040002dc], 1	       277	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_7
0x40002dc	     0xf8406020000	                            je 0x40004e8	       277	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_7
0x40002e2	          0x4489f7	                           mov edi, r14d	       277	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_7
0x40002e5	      0xe811feffff	                call sym.vax_operandname	       277	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_7
0x40002ea	          0x4889c2	                            mov rdx, rax	       104	stdio2.h	CALL_17
0x40002ed	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_17
0x40002f2	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_17
0x40002f7	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_17
0x40002fc	      0xe800000000	                          call 0x4000301	       104	stdio2.h	CALL_17
0x4000301	      0x448b742408	               mov r14d, dword [rsp + 8]	       277	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_7
0x4000306	          0x4489f7	                           mov edi, r14d	       277	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_7
0x4000309	      0xe8edfdffff	                call sym.vax_operandname	       277	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_7
0x400030e	          0x4889c2	                            mov rdx, rax	       104	stdio2.h	CALL_17
0x4000311	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_17
0x4000316	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_17
0x400031b	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_17
0x4000320	      0xe800000000	                          call 0x4000325	       104	stdio2.h	CALL_17
0x4000325	          0x4489f0	                           mov eax, r14d	       280	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2
0x4000328	          0x83e803	                              sub eax, 3	       280	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2
0x400032b	          0x83f811	                           cmp eax, 0x11	       280	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2
0x400032e	     0xf8754010000	                            ja 0x4000488	       280	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2
0x4000334	            0x89c0	                            mov eax, eax	       280	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2
0x4000336	    0xff24c5000000	                       jmp qword [rax*8]	       280	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2
0x400033d	      0xba00000000	                              mov edx, 0	       297	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	CALL_10
0x4000342	      0xbe00000000	                              mov esi, 0	       297	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	CALL_10
0x4000347	          0x4c89ff	                            mov rdi, r15	       297	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	CALL_10
0x400034a	      0xe800000000	                          call 0x400034f	       297	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	CALL_10
0x400034f	          0x4889df	                            mov rdi, rbx	       298	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	CALL_11
0x4000352	      0xe839feffff	              call sym.vax_operandlength	       298	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	CALL_11
0x4000357	          0x4901c4	                            add r12, rax	       298	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	CALL_11
0x400035a	      0xe95a010000	                           jmp 0x40004b9	       299	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2
0x400035f	          0x4889df	                            mov rdi, rbx	       213	vax.c	FUNCTION_4	CALL_1
0x4000362	      0xe8d9fcffff	                call sym.vax_operandmode	       213	vax.c	FUNCTION_4	CALL_1
0x4000367	        0x488d7b01	                      lea rdi, [rbx + 1]	       215	vax.c	FUNCTION_4
0x400036b	          0x83f811	                           cmp eax, 0x11	       216	vax.c	FUNCTION_4	SWITCH_1
0x400036e	            0x743d	                            je 0x40003ad	       216	vax.c	FUNCTION_4	SWITCH_1
0x4000370	          0x83f813	                           cmp eax, 0x13	       216	vax.c	FUNCTION_4	SWITCH_1
0x4000373	            0x744c	                            je 0x40003c1	       216	vax.c	FUNCTION_4	SWITCH_1
0x4000375	          0x83f80f	                            cmp eax, 0xf	       216	vax.c	FUNCTION_4	SWITCH_1
0x4000378	            0x7422	                            je 0x400039c	       216	vax.c	FUNCTION_4	SWITCH_1
0x400037a	    0x488b0d000000	            mov rcx, qword [0x04000381] 	        97	stdio2.h	CALL_14
0x4000381	      0xba1f000000	                           mov edx, 0x1f	        97	stdio2.h	CALL_14
0x4000386	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_14
0x400038b	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_14
0x4000390	      0xe800000000	                          call 0x4000395	        97	stdio2.h	CALL_14
0x4000395	      0xb800000000	                              mov eax, 0	       220	vax.c	FUNCTION_4	SWITCH_1
0x400039a	            0xeb37	                           jmp 0x40003d3	       220	vax.c	FUNCTION_4	SWITCH_1
0x400039c	         0xfb64301	               movzx eax, byte [rbx + 1]	       222	vax.c	FUNCTION_4	SWITCH_1	CALL_2
0x40003a0	          0x83c080	             add eax, 0xffffffffffffff80	       222	vax.c	FUNCTION_4	SWITCH_1	CALL_2
0x40003a3	           0xfb6c0	                           movzx eax, al	       222	vax.c	FUNCTION_4	SWITCH_1	CALL_2
0x40003a6	          0x83e87f	                           sub eax, 0x7f	       222	vax.c	FUNCTION_4	SWITCH_1	CALL_2
0x40003a9	            0x4898	                                    cdqe	       222	vax.c	FUNCTION_4	SWITCH_1	CALL_2
0x40003ab	            0xeb26	                           jmp 0x40003d3	       222	vax.c	FUNCTION_4	SWITCH_1	CALL_2
0x40003ad	    0x488b05000000	            mov rax, qword [0x040003b4] 	       224	vax.c	FUNCTION_4	SWITCH_1	CALL_3
0x40003b4	        0x488b4008	                mov rax, qword [rax + 8]	       224	vax.c	FUNCTION_4	SWITCH_1	CALL_3
0x40003b8	          0xff5058	                 call qword [rax + 0x58]	       224	vax.c	FUNCTION_4	SWITCH_1	CALL_3
0x40003bb	        0x4883c002	                              add rax, 2	       224	vax.c	FUNCTION_4	SWITCH_1	CALL_3
0x40003bf	            0xeb12	                           jmp 0x40003d3	       224	vax.c	FUNCTION_4	SWITCH_1	CALL_3
0x40003c1	    0x488b05000000	            mov rax, qword [0x040003c8] 	       226	vax.c	FUNCTION_4	SWITCH_1	CALL_4
0x40003c8	        0x488b4008	                mov rax, qword [rax + 8]	       226	vax.c	FUNCTION_4	SWITCH_1	CALL_4
0x40003cc	          0xff5040	                 call qword [rax + 0x40]	       226	vax.c	FUNCTION_4	SWITCH_1	CALL_4
0x40003cf	        0x4883c004	                              add rax, 4	       226	vax.c	FUNCTION_4	SWITCH_1	CALL_4
0x40003d3	        0x4c8d3428	                    lea r14, [rax + rbp]	       308	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	CALL_12
0x40003d7	          0x4489f7	                           mov edi, r14d	       309	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	CALL_13
0x40003da	      0xe800000000	                          call 0x40003df	       309	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	CALL_13
0x40003df	            0x85c0	                           test eax, eax	       309	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	CALL_13
0x40003e1	     0xf84a1000000	                            je 0x4000488	       309	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	CALL_13
0x40003e7	          0x4c89f6	                            mov rsi, r14	       311	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	CALL_14
0x40003ea	      0xbf00000000	                              mov edi, 0	       311	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	CALL_14
0x40003ef	      0xe800000000	                          call 0x40003f4	       311	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	CALL_14
0x40003f4	      0x4889442408	                mov qword [rsp + 8], rax	       311	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	CALL_14
0x40003f9	          0x4885c0	                           test rax, rax	       312	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	IF_4
0x40003fc	     0xf8486000000	                            je 0x4000488	       312	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	IF_4
0x4000402	    0xf60500000000	               test byte [0x04000409], 1	       314	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	IF_4	CALL_15
0x4000409	     0xf84ee000000	                            je 0x40004fd	       314	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	IF_4	CALL_15
0x400040f	          0x4c89f2	                            mov rdx, r14	       104	stdio2.h	CALL_17
0x4000412	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_17
0x4000417	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_17
0x400041c	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_17
0x4000421	      0xe800000000	                          call 0x4000426	       104	stdio2.h	CALL_17
0x4000426	      0x488b442408	                mov rax, qword [rsp + 8]	       104	stdio2.h	CALL_17
0x400042b	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       104	stdio2.h	CALL_17
0x400042f	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_17
0x4000434	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_17
0x4000439	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_17
0x400043e	      0xe800000000	                          call 0x4000443	       104	stdio2.h	CALL_17
0x4000443	      0x488b442408	                mov rax, qword [rsp + 8]	       104	stdio2.h	CALL_17
0x4000448	          0x488b10	                    mov rdx, qword [rax]	       104	stdio2.h	CALL_17
0x400044b	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_17
0x4000450	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_17
0x4000455	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_17
0x400045a	      0xe800000000	                          call 0x400045f	       104	stdio2.h	CALL_17
0x400045f	      0x488b442408	                mov rax, qword [rsp + 8]	       321	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	IF_4	IF_5
0x4000464	          0x4c3b30	                    cmp r14, qword [rax]	       321	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	IF_4	IF_5
0x4000467	            0x751f	                           jne 0x4000488	       321	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	IF_4	IF_5
0x4000469	      0xba00000000	                              mov edx, 0	       326	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	IF_4	IF_5	CALL_16
0x400046e	      0x488b742408	                mov rsi, qword [rsp + 8]	       326	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	IF_4	IF_5	CALL_16
0x4000473	          0x4c89ff	                            mov rdi, r15	       326	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	IF_4	IF_5	CALL_16
0x4000476	      0xe800000000	                          call 0x400047b	       326	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	IF_4	IF_5	CALL_16
0x400047b	          0x4889df	                            mov rdi, rbx	       327	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	IF_4	IF_5	CALL_17
0x400047e	      0xe80dfdffff	              call sym.vax_operandlength	       327	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	IF_4	IF_5	CALL_17
0x4000483	          0x4901c4	                            add r12, rax	       327	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	IF_4	IF_5	CALL_17
0x4000486	            0xeb31	                           jmp 0x40004b9	       328	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	IF_4	IF_5
0x4000488	    0xf60500000000	               test byte [0x0400048f], 1	       344	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	CALL_18
0x400048f	            0x7412	                            je 0x40004a3	       344	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	CALL_18
0x4000491	      0xbf00000000	                              mov edi, 0	       104	stdio2.h	CALL_17
0x4000496	      0xe800000000	                          call 0x400049b	       104	stdio2.h	CALL_17
0x400049b	    0x41bc01000000	                             mov r12d, 1	       345	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2
0x40004a1	            0xeb16	                           jmp 0x40004b9	       345	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2
0x40004a3	    0x41bc01000000	                             mov r12d, 1	       345	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2
0x40004a9	            0xeb0e	                           jmp 0x40004b9	       345	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2
0x40004ab	    0x41bc01000000	                             mov r12d, 1	       345	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2
0x40004b1	            0xeb06	                           jmp 0x40004b9	       345	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2
0x40004b3	    0x41bc01000000	                             mov r12d, 1	       345	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2
0x40004b9	          0x4c01e5	                            add rbp, r12	       253	vax.c	FUNCTION_5	FOR_1
0x40004bc	          0x4939ed	                            cmp r13, rbp	       253	vax.c	FUNCTION_5	FOR_1
0x40004bf	     0xf8791fdffff	                            ja 0x4000256	       253	vax.c	FUNCTION_5	FOR_1
0x40004c5	            0xeb4c	                           jmp 0x4000513	       253	vax.c	FUNCTION_5	FOR_1
0x40004c7	        0x4c8d6301	                      lea r12, [rbx + 1]	       266	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_4
0x40004cb	          0x4c89e7	                            mov rdi, r12	       266	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_4
0x40004ce	      0xe86dfbffff	                call sym.vax_operandmode	       266	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_4
0x40004d3	          0x4189c6	                           mov r14d, eax	       266	vax.c	FUNCTION_5	FOR_1	IF_2	CALL_4
0x40004d6	            0x85c0	                           test eax, eax	       267	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_1
0x40004d8	     0xf84dcfdffff	                            je 0x40002ba	       267	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_1
0x40004de	          0x83f80d	                            cmp eax, 0xd	       267	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_1
0x40004e1	            0x75c8	                           jne 0x40004ab	       267	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_1
0x40004e3	      0xe9d2fdffff	                           jmp 0x40002ba	       267	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_1
0x40004e8	        0x8b442408	                mov eax, dword [rsp + 8]	       280	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2
0x40004ec	          0x83e803	                              sub eax, 3	       280	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2
0x40004ef	          0x83f811	                           cmp eax, 0x11	       280	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2
0x40004f2	            0x77bf	                            ja 0x40004b3	       280	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2
0x40004f4	            0x89c0	                            mov eax, eax	       280	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2
0x40004f6	    0xff24c5000000	                       jmp qword [rax*8]	       280	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2
0x40004fd	      0x488b442408	                mov rax, qword [rsp + 8]	       321	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	IF_4	IF_5
0x4000502	          0x4c3b30	                    cmp r14, qword [rax]	       321	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	IF_4	IF_5
0x4000505	     0xf845effffff	                            je 0x4000469	       321	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2	IF_3	IF_4	IF_5
0x400050b	    0x41bc01000000	                             mov r12d, 1	       345	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2
0x4000511	            0xeba6	                           jmp 0x40004b9	       345	vax.c	FUNCTION_5	FOR_1	IF_2	SWITCH_2
0x4000513	        0x4883c418	                           add rsp, 0x18	       350	vax.c	FUNCTION_5
0x4000517	              0x5b	                                 pop rbx	       350	vax.c	FUNCTION_5
0x4000518	              0x5d	                                 pop rbp	       350	vax.c	FUNCTION_5
0x4000519	            0x415c	                                 pop r12	       350	vax.c	FUNCTION_5
0x400051b	            0x415d	                                 pop r13	       350	vax.c	FUNCTION_5
0x400051d	            0x415e	                                 pop r14	       350	vax.c	FUNCTION_5
0x400051f	            0x415f	                                 pop r15	       350	vax.c	FUNCTION_5
0x4000521	              0xc3	                                     ret	       350	vax.c	FUNCTION_5
vax_operandlength	DO,0:functions,0:CALL,3:FOR,0:SWITCH,1:IF,0:ELSE,0:WHILE,0	21
0x4000190	              0x53	                                push rbx	       175	vax.c	FUNCTION_3
0x4000191	          0x4889fb	                            mov rbx, rdi	       175	vax.c	FUNCTION_3
0x4000194	      0xe8a7feffff	                call sym.vax_operandmode	       177	vax.c	FUNCTION_3	SWITCH_1	CALL_1
0x4000199	          0x83f814	                           cmp eax, 0x14	       177	vax.c	FUNCTION_3	SWITCH_1	CALL_1
0x400019c	            0x7726	                            ja 0x40001c4	       177	vax.c	FUNCTION_3	SWITCH_1	CALL_1
0x400019e	            0x89c0	                            mov eax, eax	       177	vax.c	FUNCTION_3	SWITCH_1	CALL_1
0x40001a0	    0xff24c5000000	                       jmp qword [rax*8]	       177	vax.c	FUNCTION_3	SWITCH_1	CALL_1
0x40001a7	      0xb802000000	                              mov eax, 2	       190	vax.c	FUNCTION_3	SWITCH_1
0x40001ac	            0xeb27	                           jmp 0x40001d5	       190	vax.c	FUNCTION_3	SWITCH_1
0x40001ae	      0xb805000000	                              mov eax, 5	       202	vax.c	FUNCTION_3	SWITCH_1
0x40001b3	            0xeb20	                           jmp 0x40001d5	       202	vax.c	FUNCTION_3	SWITCH_1
0x40001b5	        0x488d7b01	                      lea rdi, [rbx + 1]	       204	vax.c	FUNCTION_3	SWITCH_1	CALL_2
0x40001b9	      0xe8d2ffffff	              call sym.vax_operandlength	       204	vax.c	FUNCTION_3	SWITCH_1	CALL_2
0x40001be	        0x4883c001	                              add rax, 1	       204	vax.c	FUNCTION_3	SWITCH_1	CALL_2
0x40001c2	            0xeb11	                           jmp 0x40001d5	       204	vax.c	FUNCTION_3	SWITCH_1	CALL_2
0x40001c4	      0xe800000000	                          call 0x40001c9	       207	vax.c	FUNCTION_3	CALL_3
0x40001c9	      0xb801000000	                              mov eax, 1	       185	vax.c	FUNCTION_3	SWITCH_1
0x40001ce	            0xeb05	                           jmp 0x40001d5	       185	vax.c	FUNCTION_3	SWITCH_1
0x40001d0	      0xb803000000	                              mov eax, 3	       195	vax.c	FUNCTION_3	SWITCH_1
0x40001d5	              0x5b	                                 pop rbx	       208	vax.c	FUNCTION_3
0x40001d6	              0xc3	                                     ret	       208	vax.c	FUNCTION_3
vax_operandname	DO,0:functions,0:CALL,1:FOR,0:SWITCH,1:IF,0:ELSE,0:WHILE,0	48
0x40000fb	          0x83ff14	                           cmp edi, 0x14	       124	vax.c	FUNCTION_2	SWITCH_1
0x40000fe	            0x777b	                            ja 0x400017b	       124	vax.c	FUNCTION_2	SWITCH_1
0x4000100	            0x89ff	                            mov edi, edi	       124	vax.c	FUNCTION_2	SWITCH_1
0x4000102	    0xff24fd000000	                       jmp qword [rdi*8]	       124	vax.c	FUNCTION_2	SWITCH_1
0x4000109	      0xb800000000	                              mov eax, 0	       129	vax.c	FUNCTION_2	SWITCH_1
0x400010e	              0xc3	                                     ret	       129	vax.c	FUNCTION_2	SWITCH_1
0x400010f	      0xb800000000	                              mov eax, 0	       133	vax.c	FUNCTION_2	SWITCH_1
0x4000114	              0xc3	                                     ret	       133	vax.c	FUNCTION_2	SWITCH_1
0x4000115	      0xb800000000	                              mov eax, 0	       135	vax.c	FUNCTION_2	SWITCH_1
0x400011a	              0xc3	                                     ret	       135	vax.c	FUNCTION_2	SWITCH_1
0x400011b	      0xb800000000	                              mov eax, 0	       137	vax.c	FUNCTION_2	SWITCH_1
0x4000120	              0xc3	                                     ret	       137	vax.c	FUNCTION_2	SWITCH_1
0x4000121	      0xb800000000	                              mov eax, 0	       139	vax.c	FUNCTION_2	SWITCH_1
0x4000126	              0xc3	                                     ret	       139	vax.c	FUNCTION_2	SWITCH_1
0x4000127	      0xb800000000	                              mov eax, 0	       141	vax.c	FUNCTION_2	SWITCH_1
0x400012c	              0xc3	                                     ret	       141	vax.c	FUNCTION_2	SWITCH_1
0x400012d	      0xb800000000	                              mov eax, 0	       143	vax.c	FUNCTION_2	SWITCH_1
0x4000132	              0xc3	                                     ret	       143	vax.c	FUNCTION_2	SWITCH_1
0x4000133	      0xb800000000	                              mov eax, 0	       145	vax.c	FUNCTION_2	SWITCH_1
0x4000138	              0xc3	                                     ret	       145	vax.c	FUNCTION_2	SWITCH_1
0x4000139	      0xb800000000	                              mov eax, 0	       147	vax.c	FUNCTION_2	SWITCH_1
0x400013e	              0xc3	                                     ret	       147	vax.c	FUNCTION_2	SWITCH_1
0x400013f	      0xb800000000	                              mov eax, 0	       149	vax.c	FUNCTION_2	SWITCH_1
0x4000144	              0xc3	                                     ret	       149	vax.c	FUNCTION_2	SWITCH_1
0x4000145	      0xb800000000	                              mov eax, 0	       151	vax.c	FUNCTION_2	SWITCH_1
0x400014a	              0xc3	                                     ret	       151	vax.c	FUNCTION_2	SWITCH_1
0x400014b	      0xb800000000	                              mov eax, 0	       153	vax.c	FUNCTION_2	SWITCH_1
0x4000150	              0xc3	                                     ret	       153	vax.c	FUNCTION_2	SWITCH_1
0x4000151	      0xb800000000	                              mov eax, 0	       155	vax.c	FUNCTION_2	SWITCH_1
0x4000156	              0xc3	                                     ret	       155	vax.c	FUNCTION_2	SWITCH_1
0x4000157	      0xb800000000	                              mov eax, 0	       157	vax.c	FUNCTION_2	SWITCH_1
0x400015c	              0xc3	                                     ret	       157	vax.c	FUNCTION_2	SWITCH_1
0x400015d	      0xb800000000	                              mov eax, 0	       159	vax.c	FUNCTION_2	SWITCH_1
0x4000162	              0xc3	                                     ret	       159	vax.c	FUNCTION_2	SWITCH_1
0x4000163	      0xb800000000	                              mov eax, 0	       161	vax.c	FUNCTION_2	SWITCH_1
0x4000168	              0xc3	                                     ret	       161	vax.c	FUNCTION_2	SWITCH_1
0x4000169	      0xb800000000	                              mov eax, 0	       163	vax.c	FUNCTION_2	SWITCH_1
0x400016e	              0xc3	                                     ret	       163	vax.c	FUNCTION_2	SWITCH_1
0x400016f	      0xb800000000	                              mov eax, 0	       165	vax.c	FUNCTION_2	SWITCH_1
0x4000174	              0xc3	                                     ret	       165	vax.c	FUNCTION_2	SWITCH_1
0x4000175	      0xb800000000	                              mov eax, 0	       167	vax.c	FUNCTION_2	SWITCH_1
0x400017a	              0xc3	                                     ret	       167	vax.c	FUNCTION_2	SWITCH_1
0x400017b	        0x4883ec08	                              sub rsp, 8	       122	vax.c	FUNCTION_2
0x400017f	      0xe800000000	                          call 0x4000184	       170	vax.c	FUNCTION_2	CALL_1
0x4000184	      0xb800000000	                              mov eax, 0	       127	vax.c	FUNCTION_2	SWITCH_1
0x4000189	              0xc3	                                     ret	       127	vax.c	FUNCTION_2	SWITCH_1
0x400018a	      0xb800000000	                              mov eax, 0	       131	vax.c	FUNCTION_2	SWITCH_1
0x400018f	              0xc3	                                     ret	       171	vax.c	FUNCTION_2
