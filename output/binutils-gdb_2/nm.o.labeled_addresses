print_object_filename_sysv	ELSE,2:WHILE,0:FOR,0:CALL,4:DO,0:functions,0:IF,2:SWITCH,0	44
0x400037b	              0x53	                                push rbx	      1364	nm.c	FUNCTION_25	IF_1
0x400037c	          0x4889fb	                            mov rbx, rdi	      1364	nm.c	FUNCTION_25	IF_1
0x400037f	    0x833d00000000	               cmp dword [0x04000386], 0	      1365	nm.c	FUNCTION_25	CALL_1
0x4000386	            0x742b	                            je 0x40003b3	      1365	nm.c	FUNCTION_25	CALL_1
0x4000388	      0xba05000000	                              mov edx, 5	      1366	nm.c	FUNCTION_25	ELSE_1
0x400038d	      0xbe00000000	                              mov esi, 0	      1366	nm.c	FUNCTION_25	ELSE_1
0x4000392	      0xbf00000000	                              mov edi, 0	      1366	nm.c	FUNCTION_25	ELSE_1
0x4000397	      0xe800000000	                          call 0x400039c	      1366	nm.c	FUNCTION_25	ELSE_1
0x400039c	          0x4889da	                            mov rdx, rbx	       104	stdio2.h	CALL_28
0x400039f	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_28
0x40003a2	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x40003a7	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_28
0x40003ac	      0xe800000000	                          call 0x40003b1	       104	stdio2.h	CALL_28
0x40003b1	            0xeb29	                           jmp 0x40003dc	       104	stdio2.h	CALL_28
0x40003b3	      0xba05000000	                              mov edx, 5	      1368	nm.c	FUNCTION_25	IF_2
0x40003b8	      0xbe00000000	                              mov esi, 0	      1368	nm.c	FUNCTION_25	IF_2
0x40003bd	      0xbf00000000	                              mov edi, 0	      1368	nm.c	FUNCTION_25	IF_2
0x40003c2	      0xe800000000	                          call 0x40003c7	      1368	nm.c	FUNCTION_25	IF_2
0x40003c7	          0x4889da	                            mov rdx, rbx	       104	stdio2.h	CALL_28
0x40003ca	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_28
0x40003cd	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x40003d2	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_28
0x40003d7	      0xe800000000	                          call 0x40003dc	       104	stdio2.h	CALL_28
0x40003dc	    0x833d00000000	           cmp dword [0x040003e3], 0x20 	      1369	nm.c	FUNCTION_25	IF_2	CALL_3
0x40003e3	            0x7528	                           jne 0x400040d	      1369	nm.c	FUNCTION_25	IF_2	CALL_3
0x40003e5	      0xba05000000	                              mov edx, 5	      1370	nm.c	FUNCTION_25	IF_2	ELSE_2
0x40003ea	      0xbe00000000	                              mov esi, 0	      1370	nm.c	FUNCTION_25	IF_2	ELSE_2
0x40003ef	      0xbf00000000	                              mov edi, 0	      1370	nm.c	FUNCTION_25	IF_2	ELSE_2
0x40003f4	      0xe800000000	                          call 0x40003f9	      1370	nm.c	FUNCTION_25	IF_2	ELSE_2
0x40003f9	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_28
0x40003fc	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x4000401	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_28
0x4000406	      0xe800000000	                          call 0x400040b	       104	stdio2.h	CALL_28
0x400040b	            0xeb26	                           jmp 0x4000433	       104	stdio2.h	CALL_28
0x400040d	      0xba05000000	                              mov edx, 5	      1373	nm.c	IF_2	ELSE_2
0x4000412	      0xbe00000000	                              mov esi, 0	      1373	nm.c	IF_2	ELSE_2
0x4000417	      0xbf00000000	                              mov edi, 0	      1373	nm.c	IF_2	ELSE_2
0x400041c	      0xe800000000	                          call 0x4000421	      1373	nm.c	IF_2	ELSE_2
0x4000421	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_28
0x4000424	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x4000429	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_28
0x400042e	      0xe800000000	                          call 0x4000433	       104	stdio2.h	CALL_28
0x4000433	              0x5b	                                 pop rbx	      1375	nm.c	IF_2	ELSE_2
0x4000434	              0xc3	                                     ret	      1375	nm.c	IF_2	ELSE_2
print_value	ELSE,1:WHILE,2:FOR,0:CALL,3:DO,0:functions,0:IF,1:SWITCH,1	29
0x4000435	              0x53	                                push rbx	      1477	nm.c	FUNCTION_36	SWITCH_1
0x4000436	    0x8b1d00000000	            mov ebx, dword [0x0400043c] 	      1478	nm.c	FUNCTION_36	SWITCH_1
0x400043c	          0x83fb20	                           cmp ebx, 0x20	      1478	nm.c	FUNCTION_36	SWITCH_1
0x400043f	            0x7407	                            je 0x4000448	      1478	nm.c	FUNCTION_36	SWITCH_1
0x4000441	          0x83fb40	                           cmp ebx, 0x40	      1478	nm.c	FUNCTION_36	SWITCH_1
0x4000444	            0x741b	                            je 0x4000461	      1478	nm.c	FUNCTION_36	SWITCH_1
0x4000446	            0xeb32	                           jmp 0x400047a	      1478	nm.c	FUNCTION_36	SWITCH_1
0x4000448	          0x4889f2	                            mov rdx, rsi	       104	stdio2.h	CALL_28
0x400044b	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x4000450	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x4000455	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_28
0x400045a	      0xe800000000	                          call 0x400045f	       104	stdio2.h	CALL_28
0x400045f	            0xeb3c	                           jmp 0x400049d	       104	stdio2.h	CALL_28
0x4000461	          0x4889f2	                            mov rdx, rsi	       104	stdio2.h	CALL_28
0x4000464	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x4000469	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x400046e	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_28
0x4000473	      0xe800000000	                          call 0x4000478	       104	stdio2.h	CALL_28
0x4000478	            0xeb23	                           jmp 0x400049d	       104	stdio2.h	CALL_28
0x400047a	      0xba05000000	                              mov edx, 5	      1511	nm.c	
0x400047f	      0xbe00000000	                              mov esi, 0	      1511	nm.c	
0x4000484	      0xbf00000000	                              mov edi, 0	      1511	nm.c	
0x4000489	      0xe800000000	                          call 0x400048e	      1511	nm.c	
0x400048e	            0x89de	                            mov esi, ebx	      1511	nm.c	
0x4000490	          0x4889c7	                            mov rdi, rax	      1511	nm.c	
0x4000493	      0xb800000000	                              mov eax, 0	      1511	nm.c	
0x4000498	      0xe800000000	                          call 0x400049d	      1511	nm.c	
0x400049d	              0x5b	                                 pop rbx	      1514	nm.c	
0x400049e	              0xc3	                                     ret	      1514	nm.c	
print_symbol_info_sysv	ELSE,9:WHILE,0:FOR,0:CALL,7:DO,0:functions,0:IF,9:SWITCH,0	262
0x400072a	            0x4155	                                push r13	      1560	nm.c	FUNCTION_38	IF_1	IF_2
0x400072c	            0x4154	                                push r12	      1560	nm.c	FUNCTION_38	IF_1	IF_2
0x400072e	              0x55	                                push rbp	      1560	nm.c	FUNCTION_38	IF_1	IF_2
0x400072f	              0x53	                                push rbx	      1560	nm.c	FUNCTION_38	IF_1	IF_2
0x4000730	        0x4883ec08	                              sub rsp, 8	      1560	nm.c	FUNCTION_38	IF_1	IF_2
0x4000734	          0x4889fb	                            mov rbx, rdi	      1560	nm.c	FUNCTION_38	IF_1	IF_2
0x4000737	          0x4989f4	                            mov r12, rsi	      1560	nm.c	FUNCTION_38	IF_1	IF_2
0x400073a	          0x488b07	                    mov rax, qword [rdi]	      1561	nm.c	FUNCTION_38	IF_1	IF_2
0x400073d	        0x488b7010	            mov rsi, qword [rax + 0x10] 	      1561	nm.c	FUNCTION_38	IF_1	IF_2
0x4000741	          0x4c89e2	                            mov rdx, r12	      1561	nm.c	FUNCTION_38	IF_1	IF_2
0x4000744	      0xbf00000000	                              mov edi, 0	      1561	nm.c	FUNCTION_38	IF_1	IF_2
0x4000749	      0xe851fdffff	                  call sym.print_symname	      1561	nm.c	FUNCTION_38	IF_1	IF_2
0x400074e	          0x488b03	                    mov rax, qword [rbx]	      1563	nm.c	FUNCTION_38	IF_1	ELSE_1
0x4000751	         0xfbe7808	               movsx edi, byte [rax + 8]	      1563	nm.c	FUNCTION_38	IF_1	ELSE_1
0x4000755	      0xe800000000	                          call 0x400075a	      1563	nm.c	FUNCTION_38	IF_1	ELSE_1
0x400075a	            0x85c0	                           test eax, eax	      1563	nm.c	FUNCTION_38	IF_1	ELSE_1
0x400075c	            0x7435	                            je 0x4000793	      1563	nm.c	FUNCTION_38	IF_1	ELSE_1
0x400075e	    0x833d00000000	           cmp dword [0x04000765], 0x20 	      1565	nm.c	FUNCTION_38	ELSE_2
0x4000765	            0x7516	                           jne 0x400077d	      1565	nm.c	FUNCTION_38	ELSE_2
0x4000767	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x400076c	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x4000771	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_28
0x4000776	      0xe800000000	                          call 0x400077b	       104	stdio2.h	CALL_28
0x400077b	            0xeb24	                           jmp 0x40007a1	       104	stdio2.h	CALL_28
0x400077d	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x4000782	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x4000787	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_28
0x400078c	      0xe800000000	                          call 0x4000791	       104	stdio2.h	CALL_28
0x4000791	            0xeb0e	                           jmp 0x40007a1	       104	stdio2.h	CALL_28
0x4000793	          0x488b03	                    mov rax, qword [rbx]	      1571	nm.c	FUNCTION_38	IF_3
0x4000796	          0x488b30	                    mov rsi, qword [rax]	      1571	nm.c	FUNCTION_38	IF_3
0x4000799	          0x4c89e7	                            mov rdi, r12	      1571	nm.c	FUNCTION_38	IF_3
0x400079c	      0xe894fcffff	                    call sym.print_value	      1571	nm.c	FUNCTION_38	IF_3
0x40007a1	          0x488b03	                    mov rax, qword [rbx]	      1573	nm.c	FUNCTION_38	IF_3
0x40007a4	         0xfbe5008	               movsx edx, byte [rax + 8]	       104	stdio2.h	CALL_28
0x40007a8	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x40007ad	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x40007b2	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_28
0x40007b7	      0xe800000000	                          call 0x40007bc	       104	stdio2.h	CALL_28
0x40007bc	          0x488b03	                    mov rax, qword [rbx]	      1575	nm.c	FUNCTION_38	IF_3
0x40007bf	        0x8078082d	                cmp byte [rax + 8], 0x2d	      1575	nm.c	FUNCTION_38	IF_3
0x40007c3	            0x754c	                           jne 0x4000811	      1575	nm.c	FUNCTION_38	IF_3
0x40007c5	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       104	stdio2.h	CALL_28
0x40007c9	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x40007ce	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x40007d3	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_28
0x40007d8	      0xe800000000	                          call 0x40007dd	       104	stdio2.h	CALL_28
0x40007dd	          0x488b03	                    mov rax, qword [rbx]	      1579	nm.c	FUNCTION_38	ELSE_3
0x40007e0	         0xfbf501a	           movsx edx, word [rax + 0x1a] 	       104	stdio2.h	CALL_28
0x40007e4	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x40007e9	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x40007ee	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_28
0x40007f3	      0xe800000000	                          call 0x40007f8	       104	stdio2.h	CALL_28
0x40007f8	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x40007fd	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x4000802	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_28
0x4000807	      0xe800000000	                          call 0x400080c	       104	stdio2.h	CALL_28
0x400080c	      0xe92e030000	                           jmp 0x4000b3f	       104	stdio2.h	CALL_28
0x4000811	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1585	nm.c	FUNCTION_38	ELSE_3	ELSE_4	IF_5
0x4000815	          0x4885c0	                           test rax, rax	      1585	nm.c	FUNCTION_38	ELSE_3	ELSE_4	IF_5
0x4000818	     0xf8445010000	                            je 0x4000963	      1585	nm.c	FUNCTION_38	ELSE_3	ELSE_4	IF_5
0x400081e	         0xfb64848	           movzx ecx, byte [rax + 0x48] 	      1585	nm.c	FUNCTION_38	ELSE_3	ELSE_4	IF_5
0x4000822	          0x83e10f	                            and ecx, 0xf	      1585	nm.c	FUNCTION_38	ELSE_3	ELSE_4	IF_5
0x4000825	          0x80f906	                               cmp cl, 6	       349	nm.c	FOR_2	FOR_3	FUNCTION_4	SWITCH_1
0x4000828	            0x7746	                            ja 0x4000870	       349	nm.c	FOR_2	FOR_3	FUNCTION_4	SWITCH_1
0x400082a	           0xfb6c9	                           movzx ecx, cl	       349	nm.c	FOR_2	FOR_3	FUNCTION_4	SWITCH_1
0x400082d	    0xff24cd000000	                       jmp qword [rcx*8]	       349	nm.c	FOR_2	FOR_3	FUNCTION_4	SWITCH_1
0x4000834	      0xba00000000	                              mov edx, 0	       352	nm.c	FOR_2	FOR_3	FUNCTION_4	SWITCH_1
0x4000839	      0xe90c010000	                           jmp 0x400094a	       352	nm.c	FOR_2	FOR_3	FUNCTION_4	SWITCH_1
0x400083e	      0xba00000000	                              mov edx, 0	       353	nm.c	FOR_2	FOR_3	FUNCTION_4	SWITCH_1
0x4000843	      0xe902010000	                           jmp 0x400094a	       353	nm.c	FOR_2	FOR_3	FUNCTION_4	SWITCH_1
0x4000848	      0xba00000000	                              mov edx, 0	       354	nm.c	FOR_2	FOR_3	FUNCTION_4	SWITCH_1
0x400084d	      0xe9f8000000	                           jmp 0x400094a	       354	nm.c	FOR_2	FOR_3	FUNCTION_4	SWITCH_1
0x4000852	      0xba00000000	                              mov edx, 0	       355	nm.c	FOR_2	FOR_3	FUNCTION_4	SWITCH_1
0x4000857	      0xe9ee000000	                           jmp 0x400094a	       355	nm.c	FOR_2	FOR_3	FUNCTION_4	SWITCH_1
0x400085c	      0xba00000000	                              mov edx, 0	       356	nm.c	FOR_2	FOR_3	FUNCTION_4	SWITCH_1
0x4000861	      0xe9e4000000	                           jmp 0x400094a	       356	nm.c	FOR_2	FOR_3	FUNCTION_4	SWITCH_1
0x4000866	      0xba00000000	                              mov edx, 0	       357	nm.c	FOR_2	FOR_3	FUNCTION_4	SWITCH_1
0x400086b	      0xe9da000000	                           jmp 0x400094a	       357	nm.c	FOR_2	FOR_3	FUNCTION_4	SWITCH_1
0x4000870	           0xfb6e9	                           movzx ebp, cl	      1586	nm.c	FUNCTION_38	ELSE_3	ELSE_5
0x4000873	    0x488b3d000000	            mov rdi, qword [0x0400087a] 	       360	nm.c	FOR_2	FOR_3	FUNCTION_4	IF_1
0x400087a	      0xe800000000	                          call 0x400087f	       360	nm.c	FOR_2	FOR_3	FUNCTION_4	IF_1
0x400087f	          0x8d45f3	                    lea eax, [rbp - 0xd]	       361	nm.c	FOR_2	FOR_3	FUNCTION_4	IF_1
0x4000882	          0x83f802	                              cmp eax, 2	       361	nm.c	FOR_2	FOR_3	FUNCTION_4	IF_1
0x4000885	            0x772f	                            ja 0x40008b6	       361	nm.c	FOR_2	FOR_3	FUNCTION_4	IF_1
0x4000887	      0xba05000000	                              mov edx, 5	       362	nm.c	FUNCTION_4	ELSE_1	IF_2
0x400088c	      0xbe00000000	                              mov esi, 0	       362	nm.c	FUNCTION_4	ELSE_1	IF_2
0x4000891	      0xbf00000000	                              mov edi, 0	       362	nm.c	FUNCTION_4	ELSE_1	IF_2
0x4000896	      0xe800000000	                          call 0x400089b	       362	nm.c	FUNCTION_4	ELSE_1	IF_2
0x400089b	            0x89e9	                            mov ecx, ebp	       178	stdio2.h	FUNCTION_48	CALL_1
0x400089d	          0x4889c2	                            mov rdx, rax	       178	stdio2.h	FUNCTION_48	CALL_1
0x40008a0	      0xbe01000000	                              mov esi, 1	       178	stdio2.h	FUNCTION_48	CALL_1
0x40008a5	      0xbf00000000	                              mov edi, 0	       178	stdio2.h	FUNCTION_48	CALL_1
0x40008aa	      0xb800000000	                              mov eax, 0	       178	stdio2.h	FUNCTION_48	CALL_1
0x40008af	      0xe800000000	                          call 0x40008b4	       178	stdio2.h	FUNCTION_48	CALL_1
0x40008b4	            0xeb64	                           jmp 0x400091a	       178	stdio2.h	FUNCTION_48	CALL_1
0x40008b6	          0x8d45f6	                    lea eax, [rbp - 0xa]	       363	nm.c	FUNCTION_4	ELSE_1	IF_2
0x40008b9	          0x83f802	                              cmp eax, 2	       363	nm.c	FUNCTION_4	ELSE_1	IF_2
0x40008bc	            0x772f	                            ja 0x40008ed	       363	nm.c	FUNCTION_4	ELSE_1	IF_2
0x40008be	      0xba05000000	                              mov edx, 5	       364	nm.c	FUNCTION_4	ELSE_2
0x40008c3	      0xbe00000000	                              mov esi, 0	       364	nm.c	FUNCTION_4	ELSE_2
0x40008c8	      0xbf00000000	                              mov edi, 0	       364	nm.c	FUNCTION_4	ELSE_2
0x40008cd	      0xe800000000	                          call 0x40008d2	       364	nm.c	FUNCTION_4	ELSE_2
0x40008d2	            0x89e9	                            mov ecx, ebp	       178	stdio2.h	FUNCTION_48	CALL_1
0x40008d4	          0x4889c2	                            mov rdx, rax	       178	stdio2.h	FUNCTION_48	CALL_1
0x40008d7	      0xbe01000000	                              mov esi, 1	       178	stdio2.h	FUNCTION_48	CALL_1
0x40008dc	      0xbf00000000	                              mov edi, 0	       178	stdio2.h	FUNCTION_48	CALL_1
0x40008e1	      0xb800000000	                              mov eax, 0	       178	stdio2.h	FUNCTION_48	CALL_1
0x40008e6	      0xe800000000	                          call 0x40008eb	       178	stdio2.h	FUNCTION_48	CALL_1
0x40008eb	            0xeb2d	                           jmp 0x400091a	       178	stdio2.h	FUNCTION_48	CALL_1
0x40008ed	      0xba05000000	                              mov edx, 5	       366	nm.c	FUNCTION_4	IF_3
0x40008f2	      0xbe00000000	                              mov esi, 0	       366	nm.c	FUNCTION_4	IF_3
0x40008f7	      0xbf00000000	                              mov edi, 0	       366	nm.c	FUNCTION_4	IF_3
0x40008fc	      0xe800000000	                          call 0x4000901	       366	nm.c	FUNCTION_4	IF_3
0x4000901	            0x89e9	                            mov ecx, ebp	       178	stdio2.h	FUNCTION_48	CALL_1
0x4000903	          0x4889c2	                            mov rdx, rax	       178	stdio2.h	FUNCTION_48	CALL_1
0x4000906	      0xbe01000000	                              mov esi, 1	       178	stdio2.h	FUNCTION_48	CALL_1
0x400090b	      0xbf00000000	                              mov edi, 0	       178	stdio2.h	FUNCTION_48	CALL_1
0x4000910	      0xb800000000	                              mov eax, 0	       178	stdio2.h	FUNCTION_48	CALL_1
0x4000915	      0xe800000000	                          call 0x400091a	       178	stdio2.h	FUNCTION_48	CALL_1
0x400091a	            0x85c0	                           test eax, eax	       367	nm.c	FUNCTION_4	CALL_6
0x400091c	            0x791e	                           jns 0x400093c	       367	nm.c	FUNCTION_4	CALL_6
0x400091e	      0xe800000000	                          call 0x4000923	       368	nm.c	FUNCTION_4
0x4000923	            0x8b38	                    mov edi, dword [rax]	       368	nm.c	FUNCTION_4
0x4000925	      0xe800000000	                          call 0x400092a	       368	nm.c	FUNCTION_4
0x400092a	          0x4889c6	                            mov rsi, rax	       368	nm.c	FUNCTION_4
0x400092d	      0xbf00000000	                              mov edi, 0	       368	nm.c	FUNCTION_4
0x4000932	      0xb800000000	                              mov eax, 0	       368	nm.c	FUNCTION_4
0x4000937	      0xe800000000	                          call 0x400093c	       368	nm.c	FUNCTION_4
0x400093c	    0x488b15000000	            mov rdx, qword [0x04000943] 	       369	nm.c	FUNCTION_4
0x4000943	            0xeb05	                           jmp 0x400094a	       369	nm.c	FUNCTION_4
0x4000945	      0xba00000000	                              mov edx, 0	       351	nm.c	FOR_2	FOR_3	FUNCTION_4	SWITCH_1
0x400094a	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x400094f	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x4000954	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_28
0x4000959	      0xe800000000	                          call 0x400095e	       104	stdio2.h	CALL_28
0x400095e	      0xe922010000	                           jmp 0x4000a85	       104	stdio2.h	CALL_28
0x4000963	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1588	nm.c	FUNCTION_38	ELSE_3
0x4000967	          0x4885c0	                           test rax, rax	      1588	nm.c	FUNCTION_38	ELSE_3
0x400096a	     0xf8401010000	                            je 0x4000a71	      1588	nm.c	FUNCTION_38	ELSE_3
0x4000970	        0x488b6830	            mov rbp, qword [rax + 0x30] 	      1590	nm.c	FUNCTION_38	ELSE_3	CALL_7
0x4000974	         0xfb64528	           movzx eax, byte [rbp + 0x28] 	       378	nm.c	FUNCTION_5	SWITCH_1
0x4000978	            0x3c67	                            cmp al, 0x67	       378	nm.c	FUNCTION_5	SWITCH_1
0x400097a	            0x740d	                            je 0x4000989	       378	nm.c	FUNCTION_5	SWITCH_1
0x400097c	            0x3c68	                            cmp al, 0x68	       378	nm.c	FUNCTION_5	SWITCH_1
0x400097e	            0x7413	                            je 0x4000993	       378	nm.c	FUNCTION_5	SWITCH_1
0x4000980	            0x3c64	                            cmp al, 0x64	       378	nm.c	FUNCTION_5	SWITCH_1
0x4000982	            0x7519	                           jne 0x400099d	       378	nm.c	FUNCTION_5	SWITCH_1
0x4000984	      0xe9bf000000	                           jmp 0x4000a48	       378	nm.c	FUNCTION_5	SWITCH_1
0x4000989	      0xba00000000	                              mov edx, 0	       381	nm.c	FUNCTION_5	SWITCH_1
0x400098e	      0xe9c8000000	                           jmp 0x4000a5b	       381	nm.c	FUNCTION_5	SWITCH_1
0x4000993	      0xba00000000	                              mov edx, 0	       382	nm.c	FUNCTION_5	SWITCH_1
0x4000998	      0xe9be000000	                           jmp 0x4000a5b	       382	nm.c	FUNCTION_5	SWITCH_1
0x400099d	         0xfb74526	           movzx eax, word [rbp + 0x26] 	       385	nm.c	FUNCTION_5	IF_1
0x40009a1	          0x6685c0	                             test ax, ax	       385	nm.c	FUNCTION_5	IF_1
0x40009a4	     0xf84a5000000	                            je 0x4000a4f	       385	nm.c	FUNCTION_5	IF_1
0x40009aa	          0x83e030	                           and eax, 0x30	       388	nm.c	FUNCTION_5	SWITCH_2
0x40009ad	          0xc1f804	                              sar eax, 4	       388	nm.c	FUNCTION_5	SWITCH_2
0x40009b0	          0x83f802	                              cmp eax, 2	       388	nm.c	FUNCTION_5	SWITCH_2
0x40009b3	     0xf849d000000	                            je 0x4000a56	       388	nm.c	FUNCTION_5	SWITCH_2
0x40009b9	          0x83f803	                              cmp eax, 3	       388	nm.c	FUNCTION_5	SWITCH_2
0x40009bc	            0x7410	                            je 0x40009ce	       388	nm.c	FUNCTION_5	SWITCH_2
0x40009be	      0xba00000000	                              mov edx, 0	       391	nm.c	FUNCTION_5	SWITCH_2
0x40009c3	          0x83f801	                              cmp eax, 1	       388	nm.c	FUNCTION_5	SWITCH_2
0x40009c6	     0xf848f000000	                            je 0x4000a5b	       388	nm.c	FUNCTION_5	SWITCH_2
0x40009cc	            0xeb0a	                           jmp 0x40009d8	       388	nm.c	FUNCTION_5	SWITCH_2
0x40009ce	      0xba00000000	                              mov edx, 0	       392	nm.c	FUNCTION_5	SWITCH_2
0x40009d3	      0xe983000000	                           jmp 0x4000a5b	       392	nm.c	FUNCTION_5	SWITCH_2
0x40009d8	    0x488b3d000000	            mov rdi, qword [0x040009df] 	       395	nm.c	FUNCTION_5	CALL_3
0x40009df	      0xe800000000	                          call 0x40009e4	       395	nm.c	FUNCTION_5	CALL_3
0x40009e4	      0x440fb76d26	          movzx r13d, word [rbp + 0x26] 	       396	nm.c	FUNCTION_5	IF_2
0x40009e9	         0xfb66d28	           movzx ebp, byte [rbp + 0x28] 	       396	nm.c	FUNCTION_5	IF_2
0x40009ed	      0xba05000000	                              mov edx, 5	       396	nm.c	FUNCTION_5	IF_2
0x40009f2	      0xbe00000000	                              mov esi, 0	       396	nm.c	FUNCTION_5	IF_2
0x40009f7	      0xbf00000000	                              mov edi, 0	       396	nm.c	FUNCTION_5	IF_2
0x40009fc	      0xe800000000	                          call 0x4000a01	       396	nm.c	FUNCTION_5	IF_2
0x4000a01	          0x4589e8	                           mov r8d, r13d	       178	stdio2.h	FUNCTION_48	CALL_1
0x4000a04	            0x89e9	                            mov ecx, ebp	       178	stdio2.h	FUNCTION_48	CALL_1
0x4000a06	          0x4889c2	                            mov rdx, rax	       178	stdio2.h	FUNCTION_48	CALL_1
0x4000a09	      0xbe01000000	                              mov esi, 1	       178	stdio2.h	FUNCTION_48	CALL_1
0x4000a0e	      0xbf00000000	                              mov edi, 0	       178	stdio2.h	FUNCTION_48	CALL_1
0x4000a13	      0xb800000000	                              mov eax, 0	       178	stdio2.h	FUNCTION_48	CALL_1
0x4000a18	      0xe800000000	                          call 0x4000a1d	       178	stdio2.h	FUNCTION_48	CALL_1
0x4000a1d	            0x85c0	                           test eax, eax	       397	nm.c	FUNCTION_5	CALL_5
0x4000a1f	            0x791e	                           jns 0x4000a3f	       397	nm.c	FUNCTION_5	CALL_5
0x4000a21	      0xe800000000	                          call 0x4000a26	       398	nm.c	FUNCTION_5
0x4000a26	            0x8b38	                    mov edi, dword [rax]	       398	nm.c	FUNCTION_5
0x4000a28	      0xe800000000	                          call 0x4000a2d	       398	nm.c	FUNCTION_5
0x4000a2d	          0x4889c6	                            mov rsi, rax	       398	nm.c	FUNCTION_5
0x4000a30	      0xbf00000000	                              mov edi, 0	       398	nm.c	FUNCTION_5
0x4000a35	      0xb800000000	                              mov eax, 0	       398	nm.c	FUNCTION_5
0x4000a3a	      0xe800000000	                          call 0x4000a3f	       398	nm.c	FUNCTION_5
0x4000a3f	    0x488b15000000	            mov rdx, qword [0x04000a46] 	       399	nm.c	FUNCTION_5
0x4000a46	            0xeb13	                           jmp 0x4000a5b	       399	nm.c	FUNCTION_5
0x4000a48	      0xba00000000	                              mov edx, 0	       380	nm.c	FUNCTION_5	SWITCH_1
0x4000a4d	            0xeb0c	                           jmp 0x4000a5b	       380	nm.c	FUNCTION_5	SWITCH_1
0x4000a4f	      0xba00000000	                              mov edx, 0	       386	nm.c	FUNCTION_5
0x4000a54	            0xeb05	                           jmp 0x4000a5b	       386	nm.c	FUNCTION_5
0x4000a56	      0xba00000000	                              mov edx, 0	       390	nm.c	FUNCTION_5	SWITCH_2
0x4000a5b	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x4000a60	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x4000a65	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_28
0x4000a6a	      0xe800000000	                          call 0x4000a6f	       104	stdio2.h	CALL_28
0x4000a6f	            0xeb14	                           jmp 0x4000a85	       104	stdio2.h	CALL_28
0x4000a71	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x4000a76	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x4000a7b	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_28
0x4000a80	      0xe800000000	                          call 0x4000a85	       104	stdio2.h	CALL_28
0x4000a85	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1594	nm.c	FUNCTION_38	ELSE_3	ELSE_6	IF_7
0x4000a89	          0x4885c0	                           test rax, rax	      1594	nm.c	FUNCTION_38	ELSE_3	ELSE_6	IF_7
0x4000a8c	            0x740b	                            je 0x4000a99	      1594	nm.c	FUNCTION_38	ELSE_3	ELSE_6	IF_7
0x4000a8e	        0x488b7038	            mov rsi, qword [rax + 0x38] 	      1594	nm.c	FUNCTION_38	ELSE_3	ELSE_6	IF_7
0x4000a92	          0x4885f6	                           test rsi, rsi	      1594	nm.c	FUNCTION_38	ELSE_3	ELSE_6	IF_7
0x4000a95	            0x750b	                           jne 0x4000aa2	      1594	nm.c	FUNCTION_38	ELSE_3	ELSE_6	IF_7
0x4000a97	            0xeb13	                           jmp 0x4000aac	      1594	nm.c	FUNCTION_38	ELSE_3	ELSE_6	IF_7
0x4000a99	        0x488b7308	                mov rsi, qword [rbx + 8]	      1594	nm.c	FUNCTION_38	ELSE_3	ELSE_6	IF_7
0x4000a9d	          0x4885f6	                           test rsi, rsi	      1594	nm.c	FUNCTION_38	ELSE_3	ELSE_6	IF_7
0x4000aa0	            0x740a	                            je 0x4000aac	      1594	nm.c	FUNCTION_38	ELSE_3	ELSE_6	IF_7
0x4000aa2	          0x4c89e7	                            mov rdi, r12	      1595	nm.c	FUNCTION_38	ELSE_3	ELSE_6	ELSE_7
0x4000aa5	      0xe88bf9ffff	                    call sym.print_value	      1595	nm.c	FUNCTION_38	ELSE_3	ELSE_6	ELSE_7
0x4000aaa	            0xeb33	                           jmp 0x4000adf	      1595	nm.c	FUNCTION_38	ELSE_3	ELSE_6	ELSE_7
0x4000aac	    0x833d00000000	           cmp dword [0x04000ab3], 0x20 	      1598	nm.c	FUNCTION_38	ELSE_3
0x4000ab3	            0x7516	                           jne 0x4000acb	      1598	nm.c	FUNCTION_38	ELSE_3
0x4000ab5	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x4000aba	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x4000abf	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_28
0x4000ac4	      0xe800000000	                          call 0x4000ac9	       104	stdio2.h	CALL_28
0x4000ac9	            0xeb14	                           jmp 0x4000adf	       104	stdio2.h	CALL_28
0x4000acb	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x4000ad0	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x4000ad5	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_28
0x4000ada	      0xe800000000	                          call 0x4000adf	       104	stdio2.h	CALL_28
0x4000adf	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1604	nm.c	FUNCTION_38	ELSE_3	ELSE_9
0x4000ae3	          0x4885c0	                           test rax, rax	      1604	nm.c	FUNCTION_38	ELSE_3	ELSE_9
0x4000ae6	            0x741d	                            je 0x4000b05	      1604	nm.c	FUNCTION_38	ELSE_3	ELSE_9
0x4000ae8	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1605	nm.c	FUNCTION_38	ELSE_3
0x4000aec	          0x488b10	                    mov rdx, qword [rax]	       104	stdio2.h	CALL_28
0x4000aef	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x4000af4	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x4000af9	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_28
0x4000afe	      0xe800000000	                          call 0x4000b03	       104	stdio2.h	CALL_28
0x4000b03	            0xeb3a	                           jmp 0x4000b3f	       104	stdio2.h	CALL_28
0x4000b05	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1606	nm.c	FUNCTION_38
0x4000b09	          0x4885c0	                           test rax, rax	      1606	nm.c	FUNCTION_38
0x4000b0c	            0x741d	                            je 0x4000b2b	      1606	nm.c	FUNCTION_38
0x4000b0e	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1607	nm.c	
0x4000b12	          0x488b10	                    mov rdx, qword [rax]	       104	stdio2.h	CALL_28
0x4000b15	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x4000b1a	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x4000b1f	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_28
0x4000b24	      0xe800000000	                          call 0x4000b29	       104	stdio2.h	CALL_28
0x4000b29	            0xeb14	                           jmp 0x4000b3f	       104	stdio2.h	CALL_28
0x4000b2b	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x4000b30	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x4000b35	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_28
0x4000b3a	      0xe800000000	                          call 0x4000b3f	       104	stdio2.h	CALL_28
0x4000b3f	        0x4883c408	                              add rsp, 8	      1611	nm.c	FUNCTION_39	CALL_1
0x4000b43	              0x5b	                                 pop rbx	      1611	nm.c	FUNCTION_39	CALL_1
0x4000b44	              0x5d	                                 pop rbp	      1611	nm.c	FUNCTION_39	CALL_1
0x4000b45	            0x415c	                                 pop r12	      1611	nm.c	FUNCTION_39	CALL_1
0x4000b47	            0x415d	                                 pop r13	      1611	nm.c	FUNCTION_39	CALL_1
0x4000b49	              0xc3	                                     ret	      1611	nm.c	FUNCTION_39	CALL_1
print_symbol_info_posix	ELSE,1:WHILE,0:FOR,0:CALL,4:DO,0:functions,0:IF,2:SWITCH,0	48
0x4000505	              0x55	                                push rbp	      1615	nm.c	FUNCTION_39	IF_1
0x4000506	              0x53	                                push rbx	      1615	nm.c	FUNCTION_39	IF_1
0x4000507	        0x4883ec08	                              sub rsp, 8	      1615	nm.c	FUNCTION_39	IF_1
0x400050b	          0x4889fb	                            mov rbx, rdi	      1615	nm.c	FUNCTION_39	IF_1
0x400050e	          0x4889f5	                            mov rbp, rsi	      1615	nm.c	FUNCTION_39	IF_1
0x4000511	          0x488b07	                    mov rax, qword [rdi]	      1616	nm.c	FUNCTION_39	ELSE_1
0x4000514	        0x488b7010	            mov rsi, qword [rax + 0x10] 	      1616	nm.c	FUNCTION_39	ELSE_1
0x4000518	          0x4889ea	                            mov rdx, rbp	      1616	nm.c	FUNCTION_39	ELSE_1
0x400051b	      0xbf00000000	                              mov edi, 0	      1616	nm.c	FUNCTION_39	ELSE_1
0x4000520	      0xe87affffff	                  call sym.print_symname	      1616	nm.c	FUNCTION_39	ELSE_1
0x4000525	          0x488b03	                    mov rax, qword [rbx]	      1617	nm.c	FUNCTION_39	ELSE_1
0x4000528	         0xfbe5008	               movsx edx, byte [rax + 8]	       104	stdio2.h	CALL_28
0x400052c	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x4000531	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x4000536	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_28
0x400053b	      0xe800000000	                          call 0x4000540	       104	stdio2.h	CALL_28
0x4000540	          0x488b03	                    mov rax, qword [rbx]	      1619	nm.c	FUNCTION_39	ELSE_1
0x4000543	         0xfbe7808	               movsx edi, byte [rax + 8]	      1619	nm.c	FUNCTION_39	ELSE_1
0x4000547	      0xe800000000	                          call 0x400054c	      1619	nm.c	FUNCTION_39	ELSE_1
0x400054c	            0x85c0	                           test eax, eax	      1619	nm.c	FUNCTION_39	ELSE_1
0x400054e	            0x7416	                            je 0x4000566	      1619	nm.c	FUNCTION_39	ELSE_1
0x4000550	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x4000555	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x400055a	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_28
0x400055f	      0xe800000000	                          call 0x4000564	       104	stdio2.h	CALL_28
0x4000564	            0xeb3d	                           jmp 0x40005a3	       104	stdio2.h	CALL_28
0x4000566	          0x488b03	                    mov rax, qword [rbx]	      1623	nm.c	FUNCTION_39
0x4000569	          0x488b30	                    mov rsi, qword [rax]	      1623	nm.c	FUNCTION_39
0x400056c	          0x4889ef	                            mov rdi, rbp	      1623	nm.c	FUNCTION_39
0x400056f	      0xe8c1feffff	                    call sym.print_value	      1623	nm.c	FUNCTION_39
0x4000574	      0xbf20000000	                           mov edi, 0x20	       104	stdio2.h	CALL_28
0x4000579	      0xe800000000	                          call 0x400057e	       104	stdio2.h	CALL_28
0x400057e	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1625	nm.c	
0x4000582	          0x4885c0	                           test rax, rax	      1625	nm.c	
0x4000585	            0x740b	                            je 0x4000592	      1625	nm.c	
0x4000587	        0x488b7038	            mov rsi, qword [rax + 0x38] 	      1625	nm.c	
0x400058b	          0x4885f6	                           test rsi, rsi	      1625	nm.c	
0x400058e	            0x750b	                           jne 0x400059b	      1625	nm.c	
0x4000590	            0xeb11	                           jmp 0x40005a3	      1625	nm.c	
0x4000592	        0x488b7308	                mov rsi, qword [rbx + 8]	      1625	nm.c	
0x4000596	          0x4885f6	                           test rsi, rsi	      1625	nm.c	
0x4000599	            0x7408	                            je 0x40005a3	      1625	nm.c	
0x400059b	          0x4889ef	                            mov rdi, rbp	      1626	nm.c	
0x400059e	      0xe892feffff	                    call sym.print_value	      1626	nm.c	
0x40005a3	        0x4883c408	                              add rsp, 8	      1628	nm.c	FUNCTION_40
0x40005a7	              0x5b	                                 pop rbx	      1628	nm.c	FUNCTION_40
0x40005a8	              0x5d	                                 pop rbp	      1628	nm.c	FUNCTION_40
0x40005a9	              0xc3	                                     ret	      1628	nm.c	FUNCTION_40
usage	ELSE,0:WHILE,0:FOR,3:CALL,10:DO,0:functions,0:IF,2:SWITCH,0	69
0x4000b4a	            0x4154	                                push r12	       236	nm.c	FUNCTION_1
0x4000b4c	              0x55	                                push rbp	       236	nm.c	FUNCTION_1
0x4000b4d	              0x53	                                push rbx	       236	nm.c	FUNCTION_1
0x4000b4e	          0x4889fb	                            mov rbx, rdi	       236	nm.c	FUNCTION_1
0x4000b51	            0x89f5	                            mov ebp, esi	       236	nm.c	FUNCTION_1
0x4000b53	    0x4c8b25000000	            mov r12, qword [0x04000b5a] 	       237	nm.c	FUNCTION_1	CALL_1
0x4000b5a	      0xba05000000	                              mov edx, 5	       237	nm.c	FUNCTION_1	CALL_1
0x4000b5f	      0xbe00000000	                              mov esi, 0	       237	nm.c	FUNCTION_1	CALL_1
0x4000b64	      0xbf00000000	                              mov edi, 0	       237	nm.c	FUNCTION_1	CALL_1
0x4000b69	      0xe800000000	                          call 0x4000b6e	       237	nm.c	FUNCTION_1	CALL_1
0x4000b6e	          0x4c89e1	                            mov rcx, r12	        97	stdio2.h	CALL_25
0x4000b71	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_25
0x4000b74	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_25
0x4000b79	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_25
0x4000b7c	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_25
0x4000b81	      0xe800000000	                          call 0x4000b86	        97	stdio2.h	CALL_25
0x4000b86	      0xba05000000	                              mov edx, 5	       238	nm.c	FUNCTION_1	CALL_2
0x4000b8b	      0xbe00000000	                              mov esi, 0	       238	nm.c	FUNCTION_1	CALL_2
0x4000b90	      0xbf00000000	                              mov edi, 0	       238	nm.c	FUNCTION_1	CALL_2
0x4000b95	      0xe800000000	                          call 0x4000b9a	       238	nm.c	FUNCTION_1	CALL_2
0x4000b9a	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_25
0x4000b9d	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_25
0x4000ba2	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_25
0x4000ba5	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_25
0x4000baa	      0xe800000000	                          call 0x4000baf	        97	stdio2.h	CALL_25
0x4000baf	      0xba05000000	                              mov edx, 5	       239	nm.c	FUNCTION_1	CALL_3
0x4000bb4	      0xbe00000000	                              mov esi, 0	       239	nm.c	FUNCTION_1	CALL_3
0x4000bb9	      0xbf00000000	                              mov edi, 0	       239	nm.c	FUNCTION_1	CALL_3
0x4000bbe	      0xe800000000	                          call 0x4000bc3	       239	nm.c	FUNCTION_1	CALL_3
0x4000bc3	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_25
0x4000bc6	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_25
0x4000bcb	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_25
0x4000bce	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_25
0x4000bd3	      0xe800000000	                          call 0x4000bd8	        97	stdio2.h	CALL_25
0x4000bd8	      0xba05000000	                              mov edx, 5	       262	nm.c	FUNCTION_1	IF_1	FOR_1	CALL_5
0x4000bdd	      0xbe00000000	                              mov esi, 0	       262	nm.c	FUNCTION_1	IF_1	FOR_1	CALL_5
0x4000be2	      0xbf00000000	                              mov edi, 0	       262	nm.c	FUNCTION_1	IF_1	FOR_1	CALL_5
0x4000be7	      0xe800000000	                          call 0x4000bec	       262	nm.c	FUNCTION_1	IF_1	FOR_1	CALL_5
0x4000bec	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_25
0x4000bef	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_25
0x4000bf4	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_25
0x4000bf7	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_25
0x4000bfc	      0xe800000000	                          call 0x4000c01	        97	stdio2.h	CALL_25
0x4000c01	      0xba05000000	                              mov edx, 5	       265	nm.c	FUNCTION_1	IF_1	FOR_1
0x4000c06	      0xbe00000000	                              mov esi, 0	       265	nm.c	FUNCTION_1	IF_1	FOR_1
0x4000c0b	      0xbf00000000	                              mov edi, 0	       265	nm.c	FUNCTION_1	IF_1	FOR_1
0x4000c10	      0xe800000000	                          call 0x4000c15	       265	nm.c	FUNCTION_1	IF_1	FOR_1
0x4000c15	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_25
0x4000c18	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_25
0x4000c1d	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_25
0x4000c20	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_25
0x4000c25	      0xe800000000	                          call 0x4000c2a	        97	stdio2.h	CALL_25
0x4000c2a	          0x4889de	                            mov rsi, rbx	       280	nm.c	FUNCTION_1	IF_1	FOR_1	FOR_2	FOR_3	IF_2
0x4000c2d	    0x488b3d000000	            mov rdi, qword [0x04000c34] 	       280	nm.c	FUNCTION_1	IF_1	FOR_1	FOR_2	FOR_3	IF_2
0x4000c34	      0xe800000000	                          call 0x4000c39	       280	nm.c	FUNCTION_1	IF_1	FOR_1	FOR_2	FOR_3	IF_2
0x4000c39	            0x85ed	                           test ebp, ebp	       281	nm.c	FUNCTION_1	IF_1	FOR_1	FOR_2	FOR_3	CALL_9
0x4000c3b	            0x752e	                           jne 0x4000c6b	       281	nm.c	FUNCTION_1	IF_1	FOR_1	FOR_2	FOR_3	CALL_9
0x4000c3d	      0xba05000000	                              mov edx, 5	       282	nm.c	FUNCTION_1	IF_1	FOR_1	FOR_2	FOR_3	CALL_10
0x4000c42	      0xbe00000000	                              mov esi, 0	       282	nm.c	FUNCTION_1	IF_1	FOR_1	FOR_2	FOR_3	CALL_10
0x4000c47	      0xbf00000000	                              mov edi, 0	       282	nm.c	FUNCTION_1	IF_1	FOR_1	FOR_2	FOR_3	CALL_10
0x4000c4c	      0xe800000000	                          call 0x4000c51	       282	nm.c	FUNCTION_1	IF_1	FOR_1	FOR_2	FOR_3	CALL_10
0x4000c51	      0xb900000000	                              mov ecx, 0	        97	stdio2.h	CALL_25
0x4000c56	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_25
0x4000c59	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_25
0x4000c5e	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_25
0x4000c61	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_25
0x4000c66	      0xe800000000	                          call 0x4000c6b	        97	stdio2.h	CALL_25
0x4000c6b	            0x89ef	                            mov edi, ebp	       283	nm.c	FUNCTION_1	IF_1	FOR_1	FOR_2	FOR_3
0x4000c6d	      0xe800000000	                call sym.set_print_width	       283	nm.c	FUNCTION_1	IF_1	FOR_1	FOR_2	FOR_3
non_numeric_forward	ELSE,0:WHILE,0:FOR,0:CALL,8:DO,0:functions,0:IF,5:SWITCH,0	50
0x4000cce	              0x55	                                push rbp	       549	nm.c	FUNCTION_9
0x4000ccf	              0x53	                                push rbx	       549	nm.c	FUNCTION_9
0x4000cd0	        0x4883ec08	                              sub rsp, 8	       549	nm.c	FUNCTION_9
0x4000cd4	          0x4889fa	                            mov rdx, rdi	       549	nm.c	FUNCTION_9
0x4000cd7	          0x4889f5	                            mov rbp, rsi	       549	nm.c	FUNCTION_9
0x4000cda	    0x488b3d000000	            mov rdi, qword [0x04000ce1] 	       553	nm.c	FUNCTION_9	CALL_2
0x4000ce1	        0x488b4708	                mov rax, qword [rdi + 8]	       553	nm.c	FUNCTION_9	CALL_2
0x4000ce5	    0x488b0d000000	            mov rcx, qword [0x04000cec] 	       553	nm.c	FUNCTION_9	CALL_2
0x4000cec	    0x8b3500000000	            mov esi, dword [0x04000cf2] 	       553	nm.c	FUNCTION_9	CALL_2
0x4000cf2	    0xff9060020000	                call qword [rax + 0x260]	       553	nm.c	FUNCTION_9	CALL_2
0x4000cf8	          0x4889c3	                            mov rbx, rax	       553	nm.c	FUNCTION_9	CALL_2
0x4000cfb	    0x488b3d000000	            mov rdi, qword [0x04000d02] 	       554	nm.c	FUNCTION_9	IF_1
0x4000d02	        0x488b4708	                mov rax, qword [rdi + 8]	       554	nm.c	FUNCTION_9	IF_1
0x4000d06	    0x488b0d000000	            mov rcx, qword [0x04000d0d] 	       554	nm.c	FUNCTION_9	IF_1
0x4000d0d	          0x4889ea	                            mov rdx, rbp	       554	nm.c	FUNCTION_9	IF_1
0x4000d10	    0x8b3500000000	            mov esi, dword [0x04000d16] 	       554	nm.c	FUNCTION_9	IF_1
0x4000d16	    0xff9060020000	                call qword [rax + 0x260]	       554	nm.c	FUNCTION_9	IF_1
0x4000d1c	          0x4885db	                           test rbx, rbx	       555	nm.c	FUNCTION_9	CALL_4
0x4000d1f	            0x7405	                            je 0x4000d26	       555	nm.c	FUNCTION_9	CALL_4
0x4000d21	          0x4885c0	                           test rax, rax	       555	nm.c	FUNCTION_9	CALL_4
0x4000d24	            0x750f	                           jne 0x4000d35	       555	nm.c	FUNCTION_9	CALL_4
0x4000d26	    0x488b05000000	            mov rax, qword [0x04000d2d] 	       556	nm.c	FUNCTION_9
0x4000d2d	          0x488b38	                    mov rdi, qword [rax]	       556	nm.c	FUNCTION_9
0x4000d30	      0xe800000000	                          call 0x4000d35	       556	nm.c	FUNCTION_9
0x4000d35	        0x488b7b08	                mov rdi, qword [rbx + 8]	       558	nm.c	FUNCTION_9	CALL_6
0x4000d39	        0x488b7008	                mov rsi, qword [rax + 8]	       559	nm.c	FUNCTION_9
0x4000d3d	          0x4885ff	                           test rdi, rdi	       562	nm.c	FUNCTION_9	IF_3
0x4000d40	           0xf95c0	                                setne al	       562	nm.c	FUNCTION_9	IF_3
0x4000d43	           0xfb6c0	                           movzx eax, al	       562	nm.c	FUNCTION_9	IF_3
0x4000d46	          0x4885f6	                           test rsi, rsi	       561	nm.c	FUNCTION_9	IF_2
0x4000d49	            0x742d	                            je 0x4000d78	       561	nm.c	FUNCTION_9	IF_2
0x4000d4b	          0x4885ff	                           test rdi, rdi	       563	nm.c	FUNCTION_9	IF_3
0x4000d4e	            0x741c	                            je 0x4000d6c	       563	nm.c	FUNCTION_9	IF_3
0x4000d50	          0x803e00	                       cmp byte [rsi], 0	       569	nm.c	FUNCTION_9	IF_4
0x4000d53	            0x750b	                           jne 0x4000d60	       569	nm.c	FUNCTION_9	IF_4
0x4000d55	          0x803f00	                       cmp byte [rdi], 0	       570	nm.c	FUNCTION_9	IF_5
0x4000d58	           0xf95c0	                                setne al	       570	nm.c	FUNCTION_9	IF_5
0x4000d5b	           0xfb6c0	                           movzx eax, al	       570	nm.c	FUNCTION_9	IF_5
0x4000d5e	            0xeb18	                           jmp 0x4000d78	       570	nm.c	FUNCTION_9	IF_5
0x4000d60	          0x803f00	                       cmp byte [rdi], 0	       571	nm.c	FUNCTION_9	IF_5
0x4000d63	            0x740e	                            je 0x4000d73	       571	nm.c	FUNCTION_9	IF_5
0x4000d65	      0xe800000000	                          call 0x4000d6a	       574	nm.c	FUNCTION_9
0x4000d6a	            0xeb0c	                           jmp 0x4000d78	       574	nm.c	FUNCTION_9
0x4000d6c	      0xb8ffffffff	                     mov eax, 0xffffffff	       564	nm.c	FUNCTION_9
0x4000d71	            0xeb05	                           jmp 0x4000d78	       564	nm.c	FUNCTION_9
0x4000d73	      0xb8ffffffff	                     mov eax, 0xffffffff	       572	nm.c	FUNCTION_9
0x4000d78	        0x4883c408	                              add rsp, 8	       578	nm.c	
0x4000d7c	              0x5b	                                 pop rbx	       578	nm.c	
0x4000d7d	              0x5d	                                 pop rbp	       578	nm.c	
0x4000d7e	              0xc3	                                     ret	       578	nm.c	
numeric_forward	ELSE,2:WHILE,0:FOR,0:CALL,10:DO,0:functions,0:IF,5:SWITCH,0	54
0x4000d7f	            0x4154	                                push r12	       588	nm.c	FUNCTION_11
0x4000d81	              0x55	                                push rbp	       588	nm.c	FUNCTION_11
0x4000d82	              0x53	                                push rbx	       588	nm.c	FUNCTION_11
0x4000d83	          0x4889fd	                            mov rbp, rdi	       588	nm.c	FUNCTION_11
0x4000d86	          0x4989f4	                            mov r12, rsi	       588	nm.c	FUNCTION_11
0x4000d89	    0x488b3d000000	            mov rdi, qword [0x04000d90] 	       592	nm.c	FUNCTION_11	CALL_2
0x4000d90	        0x488b4708	                mov rax, qword [rdi + 8]	       592	nm.c	FUNCTION_11	CALL_2
0x4000d94	    0x488b0d000000	            mov rcx, qword [0x04000d9b] 	       592	nm.c	FUNCTION_11	CALL_2
0x4000d9b	          0x4889ea	                            mov rdx, rbp	       592	nm.c	FUNCTION_11	CALL_2
0x4000d9e	    0x8b3500000000	            mov esi, dword [0x04000da4] 	       592	nm.c	FUNCTION_11	CALL_2
0x4000da4	    0xff9060020000	                call qword [rax + 0x260]	       592	nm.c	FUNCTION_11	CALL_2
0x4000daa	          0x4889c3	                            mov rbx, rax	       592	nm.c	FUNCTION_11	CALL_2
0x4000dad	    0x488b3d000000	            mov rdi, qword [0x04000db4] 	       593	nm.c	FUNCTION_11	IF_1
0x4000db4	        0x488b4708	                mov rax, qword [rdi + 8]	       593	nm.c	FUNCTION_11	IF_1
0x4000db8	    0x488b0d000000	            mov rcx, qword [0x04000dbf] 	       593	nm.c	FUNCTION_11	IF_1
0x4000dbf	          0x4c89e2	                            mov rdx, r12	       593	nm.c	FUNCTION_11	IF_1
0x4000dc2	    0x8b3500000000	            mov esi, dword [0x04000dc8] 	       593	nm.c	FUNCTION_11	IF_1
0x4000dc8	    0xff9060020000	                call qword [rax + 0x260]	       593	nm.c	FUNCTION_11	IF_1
0x4000dce	          0x4885db	                           test rbx, rbx	       594	nm.c	FUNCTION_11	CALL_4
0x4000dd1	            0x7405	                            je 0x4000dd8	       594	nm.c	FUNCTION_11	CALL_4
0x4000dd3	          0x4885c0	                           test rax, rax	       594	nm.c	FUNCTION_11	CALL_4
0x4000dd6	            0x750f	                           jne 0x4000de7	       594	nm.c	FUNCTION_11	CALL_4
0x4000dd8	    0x488b05000000	            mov rax, qword [0x04000ddf] 	       595	nm.c	FUNCTION_11
0x4000ddf	          0x488b38	                    mov rdi, qword [rax]	       595	nm.c	FUNCTION_11
0x4000de2	      0xe800000000	                          call 0x4000de7	       595	nm.c	FUNCTION_11
0x4000de7	        0x488b4b20	            mov rcx, qword [rbx + 0x20] 	       597	nm.c	FUNCTION_11	CALL_6
0x4000deb	        0x488b7020	            mov rsi, qword [rax + 0x20] 	       598	nm.c	FUNCTION_11
0x4000def	    0x4881f9000000	                              cmp rcx, 0	       600	nm.c	FUNCTION_11	IF_2
0x4000df6	            0x7510	                           jne 0x4000e08	       600	nm.c	FUNCTION_11	IF_2
0x4000df8	      0xb8ffffffff	                     mov eax, 0xffffffff	       603	nm.c	FUNCTION_11	IF_2
0x4000dfd	    0x4881fe000000	                              cmp rsi, 0	       602	nm.c	FUNCTION_11	IF_2	IF_3
0x4000e04	            0x742a	                            je 0x4000e30	       602	nm.c	FUNCTION_11	IF_2	IF_3
0x4000e06	            0xeb3a	                           jmp 0x4000e42	       602	nm.c	FUNCTION_11	IF_2	IF_3
0x4000e08	    0x4881fe000000	                              cmp rsi, 0	       605	nm.c	FUNCTION_11	ELSE_1	IF_4
0x4000e0f	            0x742c	                            je 0x4000e3d	       605	nm.c	FUNCTION_11	ELSE_1	IF_4
0x4000e11	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       607	nm.c	FUNCTION_11	ELSE_2	IF_5
0x4000e15	        0x48035128	             add rdx, qword [rcx + 0x28]	       607	nm.c	FUNCTION_11	ELSE_2	IF_5
0x4000e19	        0x488b4010	            mov rax, qword [rax + 0x10] 	       607	nm.c	FUNCTION_11	ELSE_2	IF_5
0x4000e1d	        0x48034628	             add rax, qword [rsi + 0x28]	       607	nm.c	FUNCTION_11	ELSE_2	IF_5
0x4000e21	          0x4839c2	                            cmp rdx, rax	       607	nm.c	FUNCTION_11	ELSE_2	IF_5
0x4000e24	            0x740a	                            je 0x4000e30	       607	nm.c	FUNCTION_11	ELSE_2	IF_5
0x4000e26	          0x4839c2	                            cmp rdx, rax	       608	nm.c	FUNCTION_11
0x4000e29	            0x19c0	                            sbb eax, eax	       608	nm.c	FUNCTION_11
0x4000e2b	          0x83c801	                               or eax, 1	       608	nm.c	FUNCTION_11
0x4000e2e	            0xeb12	                           jmp 0x4000e42	       608	nm.c	FUNCTION_11
0x4000e30	          0x4c89e6	                            mov rsi, r12	       610	nm.c	FUNCTION_11
0x4000e33	          0x4889ef	                            mov rdi, rbp	       610	nm.c	FUNCTION_11
0x4000e36	      0xe893feffff	            call sym.non_numeric_forward	       610	nm.c	FUNCTION_11
0x4000e3b	            0xeb05	                           jmp 0x4000e42	       610	nm.c	FUNCTION_11
0x4000e3d	      0xb801000000	                              mov eax, 1	       606	nm.c	FUNCTION_11	ELSE_2	IF_5
0x4000e42	              0x5b	                                 pop rbx	       611	nm.c	
0x4000e43	              0x5d	                                 pop rbp	       611	nm.c	
0x4000e44	            0x415c	                                 pop r12	       611	nm.c	
0x4000e46	              0xc3	                                     ret	       611	nm.c	
print_symbol_filename_posix	ELSE,1:WHILE,0:FOR,0:CALL,3:DO,0:functions,0:IF,2:SWITCH,0	19
0x4000263	    0x833d00000000	               cmp dword [0x0400026a], 0	      1463	nm.c	FUNCTION_35	IF_1	ELSE_1
0x400026a	            0x7440	                            je 0x40002ac	      1463	nm.c	FUNCTION_35	IF_1	ELSE_1
0x400026c	        0x4883ec08	                              sub rsp, 8	      1462	nm.c	FUNCTION_35	IF_1	CALL_2
0x4000270	          0x4885ff	                           test rdi, rdi	      1465	nm.c	FUNCTION_35	IF_1
0x4000273	            0x741c	                            je 0x4000291	      1465	nm.c	FUNCTION_35	IF_1
0x4000275	          0x488b0e	                    mov rcx, qword [rsi]	       104	stdio2.h	CALL_28
0x4000278	          0x488b17	                    mov rdx, qword [rdi]	       104	stdio2.h	CALL_28
0x400027b	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x4000280	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x4000285	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_28
0x400028a	      0xe800000000	                          call 0x400028f	       104	stdio2.h	CALL_28
0x400028f	            0xeb17	                           jmp 0x40002a8	       104	stdio2.h	CALL_28
0x4000291	          0x488b16	                    mov rdx, qword [rsi]	       104	stdio2.h	CALL_28
0x4000294	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x4000299	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x400029e	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_28
0x40002a3	      0xe800000000	                          call 0x40002a8	       104	stdio2.h	CALL_28
0x40002a8	        0x4883c408	                              add rsp, 8	      1471	nm.c	
0x40002ac	            0xf3c3	                                     ret	      1471	nm.c	
set_output_format	ELSE,0:WHILE,0:FOR,0:CALL,2:DO,0:functions,0:IF,0:SWITCH,1	27
0x4000090	              0x53	                                push rbx	       320	nm.c	FOR_1	FOR_2	FOR_3	IF_1	FUNCTION_3
0x4000091	           0xfb607	                   movzx eax, byte [rdi]	       323	nm.c	FOR_2	FOR_3	FUNCTION_3	SWITCH_1
0x4000094	          0x83e842	                           sub eax, 0x42	       323	nm.c	FOR_2	FOR_3	FUNCTION_3	SWITCH_1
0x4000097	            0x3c31	                            cmp al, 0x31	       323	nm.c	FOR_2	FOR_3	FUNCTION_3	SWITCH_1
0x4000099	            0x7711	                            ja 0x40000ac	       323	nm.c	FOR_2	FOR_3	FUNCTION_3	SWITCH_1
0x400009b	           0xfb6c0	                           movzx eax, al	       323	nm.c	FOR_2	FOR_3	FUNCTION_3	SWITCH_1
0x400009e	    0xff24c5000000	                       jmp qword [rax*8]	       323	nm.c	FOR_2	FOR_3	FUNCTION_3	SWITCH_1
0x40000a5	      0xb802000000	                              mov eax, 2	       331	nm.c	FOR_2	FOR_3	FUNCTION_3	SWITCH_1
0x40000aa	            0xeb33	                           jmp 0x40000df	       331	nm.c	FOR_2	FOR_3	FUNCTION_3	SWITCH_1
0x40000ac	          0x4889fb	                            mov rbx, rdi	       331	nm.c	FOR_2	FOR_3	FUNCTION_3	SWITCH_1
0x40000af	      0xba05000000	                              mov edx, 5	       338	nm.c	FOR_2	FOR_3	FUNCTION_3	SWITCH_1
0x40000b4	      0xbe00000000	                              mov esi, 0	       338	nm.c	FOR_2	FOR_3	FUNCTION_3	SWITCH_1
0x40000b9	      0xbf00000000	                              mov edi, 0	       338	nm.c	FOR_2	FOR_3	FUNCTION_3	SWITCH_1
0x40000be	      0xe800000000	                          call 0x40000c3	       338	nm.c	FOR_2	FOR_3	FUNCTION_3	SWITCH_1
0x40000c3	          0x4889de	                            mov rsi, rbx	       338	nm.c	FOR_2	FOR_3	FUNCTION_3	SWITCH_1
0x40000c6	          0x4889c7	                            mov rdi, rax	       338	nm.c	FOR_2	FOR_3	FUNCTION_3	SWITCH_1
0x40000c9	      0xb800000000	                              mov eax, 0	       338	nm.c	FOR_2	FOR_3	FUNCTION_3	SWITCH_1
0x40000ce	      0xe800000000	                          call 0x40000d3	       338	nm.c	FOR_2	FOR_3	FUNCTION_3	SWITCH_1
0x40000d3	      0xb800000000	                              mov eax, 0	       327	nm.c	FOR_2	FOR_3	FUNCTION_3	SWITCH_1
0x40000d8	            0xeb05	                           jmp 0x40000df	       327	nm.c	FOR_2	FOR_3	FUNCTION_3	SWITCH_1
0x40000da	      0xb801000000	                              mov eax, 1	       335	nm.c	FOR_2	FOR_3	FUNCTION_3	SWITCH_1
0x40000df	            0x4898	                                    cdqe	       340	nm.c	FOR_2	FOR_3	FUNCTION_3
0x40000e1	        0x488d0480	                  lea rax, [rax + rax*4]	       340	nm.c	FOR_2	FOR_3	FUNCTION_3
0x40000e5	    0x488d04c50000	                        lea rax, [rax*8]	       340	nm.c	FOR_2	FOR_3	FUNCTION_3
0x40000ed	    0x488905000000	            mov qword [0x040000f4], rax 	       340	nm.c	FOR_2	FOR_3	FUNCTION_3
0x40000f4	              0x5b	                                 pop rbx	       341	nm.c	FOR_2	FOR_3
0x40000f5	              0xc3	                                     ret	       341	nm.c	FOR_2	FOR_3
size_forward1	ELSE,0:WHILE,0:FOR,0:CALL,19:DO,0:functions,0:IF,9:SWITCH,0	172
0x4000e67	            0x4157	                                push r15	       638	nm.c	FUNCTION_13
0x4000e69	            0x4156	                                push r14	       638	nm.c	FUNCTION_13
0x4000e6b	            0x4155	                                push r13	       638	nm.c	FUNCTION_13
0x4000e6d	            0x4154	                                push r12	       638	nm.c	FUNCTION_13
0x4000e6f	              0x55	                                push rbp	       638	nm.c	FUNCTION_13
0x4000e70	              0x53	                                push rbx	       638	nm.c	FUNCTION_13
0x4000e71	        0x4883ec28	                           sub rsp, 0x28	       638	nm.c	FUNCTION_13
0x4000e75	          0x4989fc	                            mov r12, rdi	       638	nm.c	FUNCTION_13
0x4000e78	          0x4989f5	                            mov r13, rsi	       638	nm.c	FUNCTION_13
0x4000e7b	    0x488b3d000000	            mov rdi, qword [0x04000e82] 	       645	nm.c	FUNCTION_13	CALL_2
0x4000e82	        0x488b4708	                mov rax, qword [rdi + 8]	       645	nm.c	FUNCTION_13	CALL_2
0x4000e86	    0x488b0d000000	            mov rcx, qword [0x04000e8d] 	       645	nm.c	FUNCTION_13	CALL_2
0x4000e8d	          0x4c89e2	                            mov rdx, r12	       645	nm.c	FUNCTION_13	CALL_2
0x4000e90	    0x8b3500000000	            mov esi, dword [0x04000e96] 	       645	nm.c	FUNCTION_13	CALL_2
0x4000e96	    0xff9060020000	                call qword [rax + 0x260]	       645	nm.c	FUNCTION_13	CALL_2
0x4000e9c	          0x4889c3	                            mov rbx, rax	       645	nm.c	FUNCTION_13	CALL_2
0x4000e9f	    0x488b3d000000	            mov rdi, qword [0x04000ea6] 	       646	nm.c	FUNCTION_13	IF_1
0x4000ea6	        0x488b4708	                mov rax, qword [rdi + 8]	       646	nm.c	FUNCTION_13	IF_1
0x4000eaa	    0x488b0d000000	            mov rcx, qword [0x04000eb1] 	       646	nm.c	FUNCTION_13	IF_1
0x4000eb1	          0x4c89ea	                            mov rdx, r13	       646	nm.c	FUNCTION_13	IF_1
0x4000eb4	    0x8b3500000000	            mov esi, dword [0x04000eba] 	       646	nm.c	FUNCTION_13	IF_1
0x4000eba	    0xff9060020000	                call qword [rax + 0x260]	       646	nm.c	FUNCTION_13	IF_1
0x4000ec0	          0x4885db	                           test rbx, rbx	       647	nm.c	FUNCTION_13	CALL_4
0x4000ec3	            0x7408	                            je 0x4000ecd	       647	nm.c	FUNCTION_13	CALL_4
0x4000ec5	          0x4889c5	                            mov rbp, rax	       647	nm.c	FUNCTION_13	CALL_4
0x4000ec8	          0x4885c0	                           test rax, rax	       647	nm.c	FUNCTION_13	CALL_4
0x4000ecb	            0x750f	                           jne 0x4000edc	       647	nm.c	FUNCTION_13	CALL_4
0x4000ecd	    0x488b05000000	            mov rax, qword [0x04000ed4] 	       648	nm.c	FUNCTION_13
0x4000ed4	          0x488b38	                    mov rdi, qword [rax]	       648	nm.c	FUNCTION_13
0x4000ed7	      0xe800000000	                          call 0x4000edc	       648	nm.c	FUNCTION_13
0x4000edc	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	       650	nm.c	FUNCTION_13	CALL_6
0x4000ee0	        0x488b4020	            mov rax, qword [rax + 0x20] 	       651	nm.c	FUNCTION_13
0x4000ee4	    0x4881fa000000	                              cmp rdx, 0	       653	nm.c	FUNCTION_13	CALL_8
0x4000eeb	            0x7505	                           jne 0x4000ef2	       653	nm.c	FUNCTION_13	CALL_8
0x4000eed	      0xe800000000	                          call 0x4000ef2	       654	nm.c	FUNCTION_13	IF_3	CALL_9
0x4000ef2	    0x483d00000000	                              cmp rax, 0	       655	nm.c	FUNCTION_13	CALL_10
0x4000ef8	            0x7505	                           jne 0x4000eff	       655	nm.c	FUNCTION_13	CALL_10
0x4000efa	      0xe800000000	                          call 0x4000eff	       656	nm.c	FUNCTION_13
0x4000eff	        0x488b7228	            mov rsi, qword [rdx + 0x28] 	       658	nm.c	FUNCTION_13	IF_4
0x4000f03	          0x4889f2	                            mov rdx, rsi	       658	nm.c	FUNCTION_13	IF_4
0x4000f06	        0x48035310	             add rdx, qword [rbx + 0x10]	       658	nm.c	FUNCTION_13	IF_4
0x4000f0a	        0x488b4828	            mov rcx, qword [rax + 0x28] 	       658	nm.c	FUNCTION_13	IF_4
0x4000f0e	          0x4889c8	                            mov rax, rcx	       658	nm.c	FUNCTION_13	IF_4
0x4000f11	        0x48034510	             add rax, qword [rbp + 0x10]	       658	nm.c	FUNCTION_13	IF_4
0x4000f15	          0x4839c2	                            cmp rdx, rax	       658	nm.c	FUNCTION_13	IF_4
0x4000f18	            0x740d	                            je 0x4000f27	       658	nm.c	FUNCTION_13	IF_4
0x4000f1a	          0x4839c2	                            cmp rdx, rax	       659	nm.c	FUNCTION_13
0x4000f1d	            0x19c0	                            sbb eax, eax	       659	nm.c	FUNCTION_13
0x4000f1f	          0x83c801	                               or eax, 1	       659	nm.c	FUNCTION_13
0x4000f22	      0xe9a7010000	                           jmp 0x40010ce	       659	nm.c	FUNCTION_13
0x4000f27	          0x4839ce	                            cmp rsi, rcx	       661	nm.c	FUNCTION_13	IF_5
0x4000f2a	            0x740d	                            je 0x4000f39	       661	nm.c	FUNCTION_13	IF_5
0x4000f2c	          0x4839ce	                            cmp rsi, rcx	       662	nm.c	FUNCTION_13
0x4000f2f	            0x19c0	                            sbb eax, eax	       662	nm.c	FUNCTION_13
0x4000f31	          0x83c801	                               or eax, 1	       662	nm.c	FUNCTION_13
0x4000f34	      0xe995010000	                           jmp 0x40010ce	       662	nm.c	FUNCTION_13
0x4000f39	        0x4c8b7308	                mov r14, qword [rbx + 8]	       664	nm.c	FUNCTION_13	CALL_12
0x4000f3d	        0x4c8b7d08	                mov r15, qword [rbp + 8]	       665	nm.c	FUNCTION_13	CALL_13
0x4000f41	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	       666	nm.c	FUNCTION_13	CALL_14
0x4000f48	      0xb800000000	                              mov eax, 0	       666	nm.c	FUNCTION_13	CALL_14
0x4000f4d	          0x4889d1	                            mov rcx, rdx	       666	nm.c	FUNCTION_13	CALL_14
0x4000f50	          0x4c89f7	                            mov rdi, r14	       666	nm.c	FUNCTION_13	CALL_14
0x4000f53	            0xf2ae	              repne scasb al, byte [rdi]	       666	nm.c	FUNCTION_13	CALL_14
0x4000f55	          0x48f7d1	                                 not rcx	       666	nm.c	FUNCTION_13	CALL_14
0x4000f58	          0x4801d1	                            add rcx, rdx	       666	nm.c	FUNCTION_13	CALL_14
0x4000f5b	      0x48894c2408	                mov qword [rsp + 8], rcx	       666	nm.c	FUNCTION_13	CALL_14
0x4000f60	          0x4889d1	                            mov rcx, rdx	       667	nm.c	FUNCTION_13
0x4000f63	          0x4c89ff	                            mov rdi, r15	       667	nm.c	FUNCTION_13
0x4000f66	            0xf2ae	              repne scasb al, byte [rdi]	       667	nm.c	FUNCTION_13
0x4000f68	          0x4889c8	                            mov rax, rcx	       667	nm.c	FUNCTION_13
0x4000f6b	          0x48f7d0	                                 not rax	       667	nm.c	FUNCTION_13
0x4000f6e	          0x4801d0	                            add rax, rdx	       667	nm.c	FUNCTION_13
0x4000f71	      0x4889442410	             mov qword [rsp + 0x10], rax	       667	nm.c	FUNCTION_13
0x4000f76	      0xbe00000000	                              mov esi, 0	       672	nm.c	FUNCTION_13	CALL_16
0x4000f7b	          0x4c89f7	                            mov rdi, r14	       672	nm.c	FUNCTION_13	CALL_16
0x4000f7e	      0xe800000000	                          call 0x4000f83	       672	nm.c	FUNCTION_13	CALL_16
0x4000f83	          0x4885c0	                           test rax, rax	       673	nm.c	FUNCTION_13	CALL_17
0x4000f86	     0xf85ff000000	                           jne 0x400108b	       673	nm.c	FUNCTION_13	CALL_17
0x4000f8c	      0xbe00000000	                              mov esi, 0	       673	nm.c	FUNCTION_13	CALL_17
0x4000f91	          0x4c89f7	                            mov rdi, r14	       673	nm.c	FUNCTION_13	CALL_17
0x4000f94	      0xe800000000	                          call 0x4000f99	       673	nm.c	FUNCTION_13	CALL_17
0x4000f99	          0x4885c0	                           test rax, rax	       673	nm.c	FUNCTION_13	CALL_17
0x4000f9c	           0xf95c0	                                setne al	       673	nm.c	FUNCTION_13	CALL_17
0x4000f9f	           0xfb6c0	                           movzx eax, al	       673	nm.c	FUNCTION_13	CALL_17
0x4000fa2	        0x8944241c	             mov dword [rsp + 0x1c], eax	       673	nm.c	FUNCTION_13	CALL_17
0x4000fa6	      0xbe00000000	                              mov esi, 0	       674	nm.c	FUNCTION_13	CALL_18
0x4000fab	          0x4c89ff	                            mov rdi, r15	       674	nm.c	FUNCTION_13	CALL_18
0x4000fae	      0xe800000000	                          call 0x4000fb3	       674	nm.c	FUNCTION_13	CALL_18
0x4000fb3	          0x4885c0	                           test rax, rax	       675	nm.c	FUNCTION_13
0x4000fb6	            0x7530	                           jne 0x4000fe8	       675	nm.c	FUNCTION_13
0x4000fb8	      0xbe00000000	                              mov esi, 0	       675	nm.c	FUNCTION_13
0x4000fbd	          0x4c89ff	                            mov rdi, r15	       675	nm.c	FUNCTION_13
0x4000fc0	      0xe800000000	                          call 0x4000fc5	       675	nm.c	FUNCTION_13
0x4000fc5	          0x4889c2	                            mov rdx, rax	       675	nm.c	FUNCTION_13
0x4000fc8	      0x837c241c00	               cmp dword [rsp + 0x1c], 0	       677	nm.c	FUNCTION_13	IF_6
0x4000fcd	            0x740e	                            je 0x4000fdd	       677	nm.c	FUNCTION_13	IF_6
0x4000fcf	      0xb8ffffffff	                     mov eax, 0xffffffff	       678	nm.c	FUNCTION_13	IF_7
0x4000fd4	          0x4885d2	                           test rdx, rdx	       677	nm.c	FUNCTION_13	IF_6
0x4000fd7	     0xf84f1000000	                            je 0x40010ce	       677	nm.c	FUNCTION_13	IF_6
0x4000fdd	          0x4885d2	                           test rdx, rdx	       675	nm.c	FUNCTION_13
0x4000fe0	           0xf95c0	                                setne al	       675	nm.c	FUNCTION_13
0x4000fe3	           0xfb6c0	                           movzx eax, al	       675	nm.c	FUNCTION_13
0x4000fe6	            0xeb05	                           jmp 0x4000fed	       675	nm.c	FUNCTION_13
0x4000fe8	      0xb801000000	                              mov eax, 1	       675	nm.c	FUNCTION_13
0x4000fed	      0x837c241c00	               cmp dword [rsp + 0x1c], 0	       679	nm.c	FUNCTION_13	IF_7
0x4000ff2	            0x7504	                           jne 0x4000ff8	       679	nm.c	FUNCTION_13	IF_7
0x4000ff4	            0x85c0	                           test eax, eax	       679	nm.c	FUNCTION_13	IF_7
0x4000ff6	            0x756d	                           jne 0x4001065	       679	nm.c	FUNCTION_13	IF_7
0x4000ff8	        0xf6431940	           test byte [rbx + 0x19], 0x40 	       693	nm.c	FUNCTION_13
0x4000ffc	     0xf85ac000000	                           jne 0x40010ae	       693	nm.c	FUNCTION_13
0x4001002	      0x488b442408	                mov rax, qword [rsp + 8]	       693	nm.c	FUNCTION_13
0x4001007	        0x4883f802	                              cmp rax, 2	       693	nm.c	FUNCTION_13
0x400100b	     0xf86ad000000	                           jbe 0x40010be	       693	nm.c	FUNCTION_13
0x4001011	    0x41807c06fe2e	         cmp byte [r14 + rax - 2], 0x2e 	       693	nm.c	FUNCTION_13
0x4001017	     0xf85a1000000	                           jne 0x40010be	       693	nm.c	FUNCTION_13
0x400101d	    0x410fb64406ff	         movzx eax, byte [r14 + rax - 1]	       693	nm.c	FUNCTION_13
0x4001023	            0x3c6f	                            cmp al, 0x6f	       693	nm.c	FUNCTION_13
0x4001025	     0xf8483000000	                            je 0x40010ae	       693	nm.c	FUNCTION_13
0x400102b	            0x3c61	                            cmp al, 0x61	       693	nm.c	FUNCTION_13
0x400102d	     0xf858b000000	                           jne 0x40010be	       693	nm.c	FUNCTION_13
0x4001033	            0xeb79	                           jmp 0x40010ae	       693	nm.c	FUNCTION_13
0x4001035	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       694	nm.c	FUNCTION_13
0x400103a	        0x4883f802	                              cmp rax, 2	       694	nm.c	FUNCTION_13
0x400103e	            0x7640	                           jbe 0x4001080	       694	nm.c	FUNCTION_13
0x4001040	    0x41807c07fe2e	         cmp byte [r15 + rax - 2], 0x2e 	       694	nm.c	FUNCTION_13
0x4001046	            0x7538	                           jne 0x4001080	       694	nm.c	FUNCTION_13
0x4001048	    0x410fb64407ff	         movzx eax, byte [r15 + rax - 1]	       694	nm.c	FUNCTION_13
0x400104e	            0x3c6f	                            cmp al, 0x6f	       694	nm.c	FUNCTION_13
0x4001050	            0x7428	                            je 0x400107a	       694	nm.c	FUNCTION_13
0x4001052	            0x3c61	                            cmp al, 0x61	       694	nm.c	FUNCTION_13
0x4001054	            0x752a	                           jne 0x4001080	       694	nm.c	FUNCTION_13
0x4001056	            0xeb22	                           jmp 0x400107a	       694	nm.c	FUNCTION_13
0x4001058	          0x4c89ee	                            mov rsi, r13	       701	nm.c	FUNCTION_13
0x400105b	          0x4c89e7	                            mov rdi, r12	       701	nm.c	FUNCTION_13
0x400105e	      0xe86bfcffff	            call sym.non_numeric_forward	       701	nm.c	FUNCTION_13
0x4001063	            0xeb69	                           jmp 0x40010ce	       701	nm.c	FUNCTION_13
0x4001065	      0xb801000000	                              mov eax, 1	       680	nm.c	FUNCTION_13
0x400106a	            0xeb62	                           jmp 0x40010ce	       680	nm.c	FUNCTION_13
0x400106c	      0xb801000000	                              mov eax, 1	       699	nm.c	FUNCTION_13
0x4001071	            0xeb5b	                           jmp 0x40010ce	       699	nm.c	FUNCTION_13
0x4001073	      0xb801000000	                              mov eax, 1	       699	nm.c	FUNCTION_13
0x4001078	            0xeb54	                           jmp 0x40010ce	       699	nm.c	FUNCTION_13
0x400107a	            0x85d2	                           test edx, edx	       698	nm.c	FUNCTION_13	IF_9
0x400107c	            0x74ee	                            je 0x400106c	       698	nm.c	FUNCTION_13	IF_9
0x400107e	            0xebd8	                           jmp 0x4001058	       698	nm.c	FUNCTION_13	IF_9
0x4001080	      0xb8ffffffff	                     mov eax, 0xffffffff	       697	nm.c	FUNCTION_13	IF_9
0x4001085	            0x85d2	                           test edx, edx	       696	nm.c	FUNCTION_13	IF_8
0x4001087	            0x74cf	                            je 0x4001058	       696	nm.c	FUNCTION_13	IF_8
0x4001089	            0xeb43	                           jmp 0x40010ce	       696	nm.c	FUNCTION_13	IF_8
0x400108b	      0xbe00000000	                              mov esi, 0	       674	nm.c	FUNCTION_13	CALL_18
0x4001090	          0x4c89ff	                            mov rdi, r15	       674	nm.c	FUNCTION_13	CALL_18
0x4001093	      0xe800000000	                          call 0x4001098	       674	nm.c	FUNCTION_13	CALL_18
0x4001098	          0x4885c0	                           test rax, rax	       675	nm.c	FUNCTION_13
0x400109b	     0xf8557ffffff	                           jne 0x4000ff8	       675	nm.c	FUNCTION_13
0x40010a1	    0xc744241c0100	               mov dword [rsp + 0x1c], 1	       673	nm.c	FUNCTION_13	CALL_17
0x40010a9	      0xe90affffff	                           jmp 0x4000fb8	       673	nm.c	FUNCTION_13	CALL_17
0x40010ae	        0xf6451940	           test byte [rbp + 0x19], 0x40 	       694	nm.c	FUNCTION_13
0x40010b2	            0x75a4	                           jne 0x4001058	       694	nm.c	FUNCTION_13
0x40010b4	      0xba01000000	                              mov edx, 1	       694	nm.c	FUNCTION_13
0x40010b9	      0xe977ffffff	                           jmp 0x4001035	       694	nm.c	FUNCTION_13
0x40010be	        0xf6451940	           test byte [rbp + 0x19], 0x40 	       694	nm.c	FUNCTION_13
0x40010c2	            0x75af	                           jne 0x4001073	       694	nm.c	FUNCTION_13
0x40010c4	      0xba00000000	                              mov edx, 0	       694	nm.c	FUNCTION_13
0x40010c9	      0xe967ffffff	                           jmp 0x4001035	       694	nm.c	FUNCTION_13
0x40010ce	        0x4883c428	                           add rsp, 0x28	       702	nm.c	
0x40010d2	              0x5b	                                 pop rbx	       702	nm.c	
0x40010d3	              0x5d	                                 pop rbp	       702	nm.c	
0x40010d4	            0x415c	                                 pop r12	       702	nm.c	
0x40010d6	            0x415d	                                 pop r13	       702	nm.c	
0x40010d8	            0x415e	                                 pop r14	       702	nm.c	
0x40010da	            0x415f	                                 pop r15	       702	nm.c	
0x40010dc	              0xc3	                                     ret	       702	nm.c	
print_archive_member_posix	ELSE,0:WHILE,0:FOR,0:CALL,0:DO,0:functions,0:IF,1:SWITCH,0	11
0x40001b0	    0x833d00000000	               cmp dword [0x040001b7], 0	      1431	nm.c	
0x40001b7	            0x7522	                           jne 0x40001db	      1431	nm.c	
0x40001b9	        0x4883ec08	                              sub rsp, 8	      1430	nm.c	
0x40001bd	          0x4889f1	                            mov rcx, rsi	      1430	nm.c	
0x40001c0	          0x4889fa	                            mov rdx, rdi	      1430	nm.c	
0x40001c3	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x40001c8	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x40001cd	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_28
0x40001d2	      0xe800000000	                          call 0x40001d7	       104	stdio2.h	CALL_28
0x40001d7	        0x4883c408	                              add rsp, 8	      1433	nm.c	
0x40001db	            0xf3c3	                                     ret	      1433	nm.c	
get_relocs	ELSE,1:WHILE,0:FOR,0:CALL,7:DO,0:functions,0:IF,3:SWITCH,0	48
0x40010dd	            0x4155	                                push r13	       828	nm.c	FUNCTION_16
0x40010df	            0x4154	                                push r12	       828	nm.c	FUNCTION_16
0x40010e1	              0x55	                                push rbp	       828	nm.c	FUNCTION_16
0x40010e2	              0x53	                                push rbx	       828	nm.c	FUNCTION_16
0x40010e3	        0x4883ec08	                              sub rsp, 8	       828	nm.c	FUNCTION_16
0x40010e7	          0x4889d3	                            mov rbx, rdx	       828	nm.c	FUNCTION_16
0x40010ea	          0x488b02	                    mov rax, qword [rdx]	       831	nm.c	FUNCTION_16
0x40010ed	          0x488930	                    mov qword [rax], rsi	       831	nm.c	FUNCTION_16
0x40010f0	        0xf6462004	               test byte [rsi + 0x20], 4	       833	nm.c	FUNCTION_16	IF_1
0x40010f4	            0x7518	                           jne 0x400110e	       833	nm.c	FUNCTION_16	IF_1
0x40010f6	        0x488b4208	                mov rax, qword [rdx + 8]	       835	nm.c	FUNCTION_16	IF_1
0x40010fa	    0x48c700000000	                      mov qword [rax], 0	       835	nm.c	FUNCTION_16	IF_1
0x4001101	        0x488b4210	            mov rax, qword [rdx + 0x10] 	       836	nm.c	FUNCTION_16	IF_1
0x4001105	    0x48c700000000	                      mov qword [rax], 0	       836	nm.c	FUNCTION_16	IF_1
0x400110c	            0xeb5a	                           jmp 0x4001168	       836	nm.c	FUNCTION_16	IF_1
0x400110e	          0x4989fc	                            mov r12, rdi	       836	nm.c	FUNCTION_16	IF_1
0x4001111	          0x4889f5	                            mov rbp, rsi	       836	nm.c	FUNCTION_16	IF_1
0x4001114	      0xe800000000	                          call 0x4001119	       842	nm.c	FUNCTION_16	ELSE_1	IF_2
0x4001119	          0x4885c0	                           test rax, rax	       843	nm.c	FUNCTION_16	ELSE_1	CALL_3
0x400111c	            0x7909	                           jns 0x4001127	       843	nm.c	FUNCTION_16	ELSE_1	CALL_3
0x400111e	        0x498b3c24	                    mov rdi, qword [r12]	       844	nm.c	FUNCTION_16	ELSE_1
0x4001122	      0xe800000000	                          call 0x4001127	       844	nm.c	FUNCTION_16	ELSE_1
0x4001127	        0x4c8b6b08	                mov r13, qword [rbx + 8]	       846	nm.c	FUNCTION_16	ELSE_1	CALL_5
0x400112b	          0x4889c7	                            mov rdi, rax	       846	nm.c	FUNCTION_16	ELSE_1	CALL_5
0x400112e	      0xe800000000	                          call 0x4001133	       846	nm.c	FUNCTION_16	ELSE_1	CALL_5
0x4001133	        0x49894500	                    mov qword [r13], rax	       846	nm.c	FUNCTION_16	ELSE_1	CALL_5
0x4001137	        0x4c8b6b10	            mov r13, qword [rbx + 0x10] 	       847	nm.c	FUNCTION_16	ELSE_1
0x400113b	        0x488b4b18	            mov rcx, qword [rbx + 0x18] 	       847	nm.c	FUNCTION_16	ELSE_1
0x400113f	        0x488b4308	                mov rax, qword [rbx + 8]	       847	nm.c	FUNCTION_16	ELSE_1
0x4001143	          0x488b10	                    mov rdx, qword [rax]	       847	nm.c	FUNCTION_16	ELSE_1
0x4001146	          0x4889ee	                            mov rsi, rbp	       847	nm.c	FUNCTION_16	ELSE_1
0x4001149	          0x4c89e7	                            mov rdi, r12	       847	nm.c	FUNCTION_16	ELSE_1
0x400114c	      0xe800000000	                          call 0x4001151	       847	nm.c	FUNCTION_16	ELSE_1
0x4001151	        0x49894500	                    mov qword [r13], rax	       847	nm.c	FUNCTION_16	ELSE_1
0x4001155	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       849	nm.c	FUNCTION_16	ELSE_1	CALL_7
0x4001159	        0x48833800	                      cmp qword [rax], 0	       849	nm.c	FUNCTION_16	ELSE_1	CALL_7
0x400115d	            0x7909	                           jns 0x4001168	       849	nm.c	FUNCTION_16	ELSE_1	CALL_7
0x400115f	        0x498b3c24	                    mov rdi, qword [r12]	       850	nm.c	FUNCTION_16	ELSE_1
0x4001163	      0xe800000000	                          call 0x4001168	       850	nm.c	FUNCTION_16	ELSE_1
0x4001168	        0x48830308	                      add qword [rbx], 8	       853	nm.c	FUNCTION_16
0x400116c	      0x4883430808	                  add qword [rbx + 8], 8	       854	nm.c	FUNCTION_16
0x4001171	      0x4883431008	               add qword [rbx + 0x10], 8	       855	nm.c	FUNCTION_16
0x4001176	        0x4883c408	                              add rsp, 8	       856	nm.c	
0x400117a	              0x5b	                                 pop rbx	       856	nm.c	
0x400117b	              0x5d	                                 pop rbp	       856	nm.c	
0x400117c	            0x415c	                                 pop r12	       856	nm.c	
0x400117e	            0x415d	                                 pop r13	       856	nm.c	
0x4001180	              0xc3	                                     ret	       856	nm.c	
display_file	ELSE,2:WHILE,0:FOR,0:CALL,15:DO,0:functions,0:IF,7:SWITCH,0	192
0x4001e26	            0x4156	                                push r14	      1298	nm.c	FUNCTION_23
0x4001e28	            0x4155	                                push r13	      1298	nm.c	FUNCTION_23
0x4001e2a	            0x4154	                                push r12	      1298	nm.c	FUNCTION_23
0x4001e2c	              0x55	                                push rbp	      1298	nm.c	FUNCTION_23
0x4001e2d	              0x53	                                push rbx	      1298	nm.c	FUNCTION_23
0x4001e2e	        0x4883ec10	                           sub rsp, 0x10	      1298	nm.c	FUNCTION_23
0x4001e32	          0x4989fd	                            mov r13, rdi	      1298	nm.c	FUNCTION_23
0x4001e35	    0x64488b042528	                mov rax, qword fs:[0x28]	      1298	nm.c	FUNCTION_23
0x4001e3e	      0x4889442408	                mov qword [rsp + 8], rax	      1298	nm.c	FUNCTION_23
0x4001e43	            0x31c0	                            xor eax, eax	      1298	nm.c	FUNCTION_23
0x4001e45	      0xe800000000	                          call 0x4001e4a	      1303	nm.c	FUNCTION_23	IF_1
0x4001e4a	          0x4885c0	                           test rax, rax	      1303	nm.c	FUNCTION_23	IF_1
0x4001e4d	     0xf8ec2020000	                           jle 0x4002115	      1303	nm.c	FUNCTION_23	IF_1
0x4001e53	    0x488b05000000	            mov rax, qword [0x04001e5a] 	      1306	nm.c	FUNCTION_23	IF_2
0x4001e5a	          0x4885c0	                           test rax, rax	      1306	nm.c	FUNCTION_23	IF_2
0x4001e5d	      0xbe00000000	                              mov esi, 0	      1306	nm.c	FUNCTION_23	IF_2
0x4001e62	        0x480f45f0	                         cmovne rsi, rax	      1306	nm.c	FUNCTION_23	IF_2
0x4001e66	          0x4c89ef	                            mov rdi, r13	      1306	nm.c	FUNCTION_23	IF_2
0x4001e69	      0xe800000000	                          call 0x4001e6e	      1306	nm.c	FUNCTION_23	IF_2
0x4001e6e	          0x4889c5	                            mov rbp, rax	      1306	nm.c	FUNCTION_23	IF_2
0x4001e71	          0x4885c0	                           test rax, rax	      1307	nm.c	FUNCTION_23	IF_2
0x4001e74	            0x7512	                           jne 0x4001e88	      1307	nm.c	FUNCTION_23	IF_2
0x4001e76	          0x4c89ef	                            mov rdi, r13	      1309	nm.c	FUNCTION_23	IF_2
0x4001e79	      0xe800000000	                          call 0x4001e7e	      1309	nm.c	FUNCTION_23	IF_2
0x4001e7e	      0xb800000000	                              mov eax, 0	      1310	nm.c	FUNCTION_23	IF_2
0x4001e83	      0xe992020000	                           jmp 0x400211a	      1310	nm.c	FUNCTION_23	IF_2
0x4001e88	    0x833d00000000	               cmp dword [0x04001e8f], 0	      1314	nm.c	FUNCTION_23	IF_3
0x4001e8f	            0x7407	                            je 0x4001e98	      1314	nm.c	FUNCTION_23	IF_3
0x4001e91	    0x814844000010	         or dword [rax + 0x44], 0x100000	      1315	nm.c	FUNCTION_23
0x4001e98	      0xbe02000000	                              mov esi, 2	      1317	nm.c	FUNCTION_23	IF_4
0x4001e9d	          0x4889ef	                            mov rdi, rbp	      1317	nm.c	FUNCTION_23	IF_4
0x4001ea0	      0xe800000000	                          call 0x4001ea5	      1317	nm.c	FUNCTION_23	IF_4
0x4001ea5	            0x85c0	                           test eax, eax	      1317	nm.c	FUNCTION_23	IF_4
0x4001ea7	     0xf84d5010000	                            je 0x4002082	      1317	nm.c	FUNCTION_23	IF_4
0x4001ead	        0x488b7d00	                    mov rdi, qword [rbp]	      1242	nm.c	ELSE_1	FUNCTION_22
0x4001eb1	    0x488b05000000	            mov rax, qword [0x04001eb8] 	      1242	nm.c	ELSE_1	FUNCTION_22
0x4001eb8	          0xff5008	                    call qword [rax + 8]	      1242	nm.c	ELSE_1	FUNCTION_22
0x4001ebb	    0x833d00000000	               cmp dword [0x04001ec2], 0	      1244	nm.c	ELSE_1	FUNCTION_22	CALL_3
0x4001ec2	     0xf84c4000000	                            je 0x4001f8c	      1244	nm.c	ELSE_1	FUNCTION_22	CALL_3
0x4001ec8	          0x4889e2	                            mov rdx, rsp	       430	nm.c	FUNCTION_7	FOR_1
0x4001ecb	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	       430	nm.c	FUNCTION_7	FOR_1
0x4001ed2	          0x4889ef	                            mov rdi, rbp	       430	nm.c	FUNCTION_7	FOR_1
0x4001ed5	      0xe800000000	                          call 0x4001eda	       430	nm.c	FUNCTION_7	FOR_1
0x4001eda	          0x4889c3	                            mov rbx, rax	       430	nm.c	FUNCTION_7	FOR_1
0x4001edd	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	       430	nm.c	FUNCTION_7	FOR_1
0x4001ee1	     0xf84a5000000	                            je 0x4001f8c	       430	nm.c	FUNCTION_7	FOR_1
0x4001ee7	    0x41be00000000	                             mov r14d, 0	       430	nm.c	FUNCTION_7	FOR_1
0x4001eed	          0x4585f6	                         test r14d, r14d	       435	nm.c	FUNCTION_7	FOR_1	IF_1
0x4001ef0	            0x752c	                           jne 0x4001f1e	       435	nm.c	FUNCTION_7	FOR_1	IF_1
0x4001ef2	      0xba05000000	                              mov edx, 5	       437	nm.c	FUNCTION_7	FOR_1	IF_1
0x4001ef7	      0xbe00000000	                              mov esi, 0	       437	nm.c	FUNCTION_7	FOR_1	IF_1
0x4001efc	      0xbf00000000	                              mov edi, 0	       437	nm.c	FUNCTION_7	FOR_1	IF_1
0x4001f01	      0xe800000000	                          call 0x4001f06	       437	nm.c	FUNCTION_7	FOR_1	IF_1
0x4001f06	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_28
0x4001f09	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x4001f0e	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_28
0x4001f13	      0xe800000000	                          call 0x4001f18	       104	stdio2.h	CALL_28
0x4001f18	    0x41be01000000	                             mov r14d, 1	       438	nm.c	FUNCTION_7	FOR_1	IF_1
0x4001f1e	        0x488b4508	                mov rax, qword [rbp + 8]	       440	nm.c	FUNCTION_7	FOR_1	IF_2
0x4001f22	          0x4889de	                            mov rsi, rbx	       440	nm.c	FUNCTION_7	FOR_1	IF_2
0x4001f25	          0x4889ef	                            mov rdi, rbp	       440	nm.c	FUNCTION_7	FOR_1	IF_2
0x4001f28	    0xff90d8010000	                call qword [rax + 0x1d8]	       440	nm.c	FUNCTION_7	FOR_1	IF_2
0x4001f2e	          0x4989c4	                            mov r12, rax	       440	nm.c	FUNCTION_7	FOR_1	IF_2
0x4001f31	          0x4885c0	                           test rax, rax	       441	nm.c	FUNCTION_7	FOR_1	CALL_5
0x4001f34	            0x750a	                           jne 0x4001f40	       441	nm.c	FUNCTION_7	FOR_1	CALL_5
0x4001f36	      0xbf00000000	                              mov edi, 0	       442	nm.c	FUNCTION_7	FOR_1	IF_3
0x4001f3b	      0xe800000000	                          call 0x4001f40	       442	nm.c	FUNCTION_7	FOR_1	IF_3
0x4001f40	        0x488b0424	                    mov rax, qword [rsp]	       443	nm.c	FUNCTION_7	FOR_1	IF_3
0x4001f44	          0x488b30	                    mov rsi, qword [rax]	       443	nm.c	FUNCTION_7	FOR_1	IF_3
0x4001f47	          0x4885f6	                           test rsi, rsi	       443	nm.c	FUNCTION_7	FOR_1	IF_3
0x4001f4a	            0x7425	                            je 0x4001f71	       443	nm.c	FUNCTION_7	FOR_1	IF_3
0x4001f4c	          0x4889ea	                            mov rdx, rbp	       445	nm.c	FUNCTION_7	FOR_1	IF_3	CALL_7
0x4001f4f	      0xbf00000000	                              mov edi, 0	       445	nm.c	FUNCTION_7	FOR_1	IF_3	CALL_7
0x4001f54	      0xe846e5ffff	                  call sym.print_symname	       445	nm.c	FUNCTION_7	FOR_1	IF_3	CALL_7
0x4001f59	        0x498b1424	                    mov rdx, qword [r12]	       104	stdio2.h	CALL_28
0x4001f5d	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x4001f62	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x4001f67	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_28
0x4001f6c	      0xe800000000	                          call 0x4001f71	       104	stdio2.h	CALL_28
0x4001f71	          0x4889e2	                            mov rdx, rsp	       432	nm.c	FUNCTION_7	FOR_1
0x4001f74	          0x4889de	                            mov rsi, rbx	       432	nm.c	FUNCTION_7	FOR_1
0x4001f77	          0x4889ef	                            mov rdi, rbp	       432	nm.c	FUNCTION_7	FOR_1
0x4001f7a	      0xe800000000	                          call 0x4001f7f	       432	nm.c	FUNCTION_7	FOR_1
0x4001f7f	          0x4889c3	                            mov rbx, rax	       432	nm.c	FUNCTION_7	FOR_1
0x4001f82	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	       430	nm.c	FUNCTION_7	FOR_1
0x4001f86	     0xf8561ffffff	                           jne 0x4001eed	       430	nm.c	FUNCTION_7	FOR_1
0x4001f8c	    0x41bc00000000	                             mov r12d, 0	       438	nm.c	FUNCTION_7	FOR_1	IF_1
0x4001f92	            0xeb03	                           jmp 0x4001f97	       438	nm.c	FUNCTION_7	FOR_1	IF_1
0x4001f94	          0x4989dc	                            mov r12, rbx	       438	nm.c	FUNCTION_7	FOR_1	IF_1
0x4001f97	          0x4c89e6	                            mov rsi, r12	      1251	nm.c	ELSE_1	FUNCTION_22	FOR_1
0x4001f9a	          0x4889ef	                            mov rdi, rbp	      1251	nm.c	ELSE_1	FUNCTION_22	FOR_1
0x4001f9d	      0xe800000000	                          call 0x4001fa2	      1251	nm.c	ELSE_1	FUNCTION_22	FOR_1
0x4001fa2	          0x4889c3	                            mov rbx, rax	      1251	nm.c	ELSE_1	FUNCTION_22	FOR_1
0x4001fa5	          0x4885c0	                           test rax, rax	      1253	nm.c	ELSE_1	FUNCTION_22	FOR_1	IF_2
0x4001fa8	            0x7517	                           jne 0x4001fc1	      1253	nm.c	ELSE_1	FUNCTION_22	FOR_1	IF_2
0x4001faa	      0xe800000000	                          call 0x4001faf	      1255	nm.c	ELSE_1	FUNCTION_22	FOR_1	IF_2	CALL_8
0x4001faf	          0x83f809	                              cmp eax, 9	      1255	nm.c	ELSE_1	FUNCTION_22	FOR_1	IF_2	CALL_8
0x4001fb2	     0xf8499000000	                            je 0x4002051	      1255	nm.c	ELSE_1	FUNCTION_22	FOR_1	IF_2	CALL_8
0x4001fb8	        0x488b7d00	                    mov rdi, qword [rbp]	      1256	nm.c	ELSE_1	FUNCTION_22	FOR_1	IF_2
0x4001fbc	      0xe800000000	                          call 0x4001fc1	      1256	nm.c	ELSE_1	FUNCTION_22	FOR_1	IF_2
0x4001fc1	          0x4889e2	                            mov rdx, rsp	      1260	nm.c	ELSE_1	FUNCTION_22	FOR_1	IF_4
0x4001fc4	      0xbe01000000	                              mov esi, 1	      1260	nm.c	ELSE_1	FUNCTION_22	FOR_1	IF_4
0x4001fc9	          0x4889c7	                            mov rdi, rax	      1260	nm.c	ELSE_1	FUNCTION_22	FOR_1	IF_4
0x4001fcc	      0xe800000000	                          call 0x4001fd1	      1260	nm.c	ELSE_1	FUNCTION_22	FOR_1	IF_4
0x4001fd1	            0x85c0	                           test eax, eax	      1260	nm.c	ELSE_1	FUNCTION_22	FOR_1	IF_4
0x4001fd3	            0x7426	                            je 0x4001ffb	      1260	nm.c	ELSE_1	FUNCTION_22	FOR_1	IF_4
0x4001fd5	          0x4889df	                            mov rdi, rbx	      1262	nm.c	ELSE_1	FUNCTION_22	FOR_1	IF_4	CALL_12
0x4001fd8	      0xe895ecffff	                call sym.set_print_width	      1262	nm.c	ELSE_1	FUNCTION_22	FOR_1	IF_4	CALL_12
0x4001fdd	          0x488b33	                    mov rsi, qword [rbx]	      1263	nm.c	ELSE_1	FUNCTION_22	FOR_1	IF_4	CALL_13
0x4001fe0	        0x488b7d00	                    mov rdi, qword [rbp]	      1263	nm.c	ELSE_1	FUNCTION_22	FOR_1	IF_4	CALL_13
0x4001fe4	    0x488b05000000	            mov rax, qword [0x04001feb] 	      1263	nm.c	ELSE_1	FUNCTION_22	FOR_1	IF_4	CALL_13
0x4001feb	          0xff5010	                 call qword [rax + 0x10]	      1263	nm.c	ELSE_1	FUNCTION_22	FOR_1	IF_4	CALL_13
0x4001fee	          0x4889ee	                            mov rsi, rbp	      1265	nm.c	ELSE_1	FUNCTION_22	FOR_1	IF_4
0x4001ff1	          0x4889df	                            mov rdi, rbx	      1265	nm.c	ELSE_1	FUNCTION_22	FOR_1	IF_4
0x4001ff4	      0xe8a1f6ffff	               call sym.display_rel_file	      1265	nm.c	ELSE_1	FUNCTION_22	FOR_1	IF_4
0x4001ff9	            0xeb24	                           jmp 0x400201f	      1265	nm.c	ELSE_1	FUNCTION_22	FOR_1	IF_4
0x4001ffb	          0x488b3b	                    mov rdi, qword [rbx]	      1269	nm.c	FUNCTION_22	FOR_1	IF_5	CALL_17
0x4001ffe	      0xe800000000	                          call 0x4002003	      1269	nm.c	FUNCTION_22	FOR_1	IF_5	CALL_17
0x4002003	      0xe800000000	                          call 0x4002008	      1270	nm.c	FUNCTION_22	FOR_1	IF_5
0x4002008	          0x83f80d	                            cmp eax, 0xd	      1270	nm.c	FUNCTION_22	FOR_1	IF_5
0x400200b	            0x7512	                           jne 0x400201f	      1270	nm.c	FUNCTION_22	FOR_1	IF_5
0x400200d	        0x488b3c24	                    mov rdi, qword [rsp]	      1272	nm.c	FUNCTION_22	FOR_1	IF_5	CALL_19
0x4002011	      0xe800000000	                          call 0x4002016	      1272	nm.c	FUNCTION_22	FOR_1	IF_5	CALL_19
0x4002016	        0x488b3c24	                    mov rdi, qword [rsp]	      1273	nm.c	FUNCTION_22	FOR_1	IF_5
0x400201a	      0xe800000000	                          call 0x400201f	      1273	nm.c	FUNCTION_22	FOR_1	IF_5
0x400201f	          0x4d85e4	                           test r12, r12	      1277	nm.c	FUNCTION_22	FOR_1	ELSE_1	IF_6
0x4002022	     0xf846cffffff	                            je 0x4001f94	      1277	nm.c	FUNCTION_22	FOR_1	ELSE_1	IF_6
0x4002028	          0x4c89e7	                            mov rdi, r12	      1279	nm.c	FUNCTION_22	FOR_1	ELSE_1	IF_6
0x400202b	      0xe800000000	                          call 0x4002030	      1279	nm.c	FUNCTION_22	FOR_1	ELSE_1	IF_6
0x4002030	    0x48c705000000	               mov qword [0x0400203b], 0	      1280	nm.c	FUNCTION_22	FOR_1	ELSE_1	IF_6
0x400203b	    0x48c705000000	               mov qword [0x04002046], 0	      1281	nm.c	FUNCTION_22	FOR_1	ELSE_1	IF_6	IF_7
0x4002046	          0x4939dc	                            cmp r12, rbx	      1282	nm.c	FUNCTION_22	FOR_1	ELSE_1	IF_6	IF_7
0x4002049	     0xf8545ffffff	                           jne 0x4001f94	      1282	nm.c	FUNCTION_22	FOR_1	ELSE_1	IF_6	IF_7
0x400204f	            0xeb2a	                           jmp 0x400207b	      1282	nm.c	FUNCTION_22	FOR_1	ELSE_1	IF_6	IF_7
0x4002051	          0x4d85e4	                           test r12, r12	      1288	nm.c	FUNCTION_22	ELSE_1	IF_8
0x4002054	            0x741e	                            je 0x4002074	      1288	nm.c	FUNCTION_22	ELSE_1	IF_8
0x4002056	          0x4c89e7	                            mov rdi, r12	      1290	nm.c	FUNCTION_22	ELSE_1	IF_8
0x4002059	      0xe800000000	                          call 0x400205e	      1290	nm.c	FUNCTION_22	ELSE_1	IF_8
0x400205e	    0x48c705000000	               mov qword [0x04002069], 0	      1291	nm.c	FUNCTION_22	ELSE_1	IF_8
0x4002069	    0x48c705000000	               mov qword [0x04002074], 0	      1292	nm.c	FUNCTION_22	ELSE_1	IF_8
0x4002074	      0xbb01000000	                              mov ebx, 1	      1299	nm.c	FUNCTION_23
0x4002079	            0xeb6c	                           jmp 0x40020e7	      1299	nm.c	FUNCTION_23
0x400207b	      0xbb01000000	                              mov ebx, 1	      1299	nm.c	FUNCTION_23
0x4002080	            0xeb65	                           jmp 0x40020e7	      1299	nm.c	FUNCTION_23
0x4002082	          0x4889e2	                            mov rdx, rsp	      1321	nm.c	FUNCTION_23	ELSE_1	IF_5
0x4002085	      0xbe01000000	                              mov esi, 1	      1321	nm.c	FUNCTION_23	ELSE_1	IF_5
0x400208a	          0x4889ef	                            mov rdi, rbp	      1321	nm.c	FUNCTION_23	ELSE_1	IF_5
0x400208d	      0xe800000000	                          call 0x4002092	      1321	nm.c	FUNCTION_23	ELSE_1	IF_5
0x4002092	            0x85c0	                           test eax, eax	      1321	nm.c	FUNCTION_23	ELSE_1	IF_5
0x4002094	            0x7428	                            je 0x40020be	      1321	nm.c	FUNCTION_23	ELSE_1	IF_5
0x4002096	          0x4889ef	                            mov rdi, rbp	      1323	nm.c	FUNCTION_23	ELSE_1	IF_5	CALL_8
0x4002099	      0xe8d4ebffff	                call sym.set_print_width	      1323	nm.c	FUNCTION_23	ELSE_1	IF_5	CALL_8
0x400209e	          0x4c89ef	                            mov rdi, r13	      1324	nm.c	FUNCTION_23	ELSE_1	IF_5	CALL_9
0x40020a1	    0x488b05000000	            mov rax, qword [0x040020a8] 	      1324	nm.c	FUNCTION_23	ELSE_1	IF_5	CALL_9
0x40020a8	            0xff10	                        call qword [rax]	      1324	nm.c	FUNCTION_23	ELSE_1	IF_5	CALL_9
0x40020aa	      0xbe00000000	                              mov esi, 0	      1325	nm.c	FUNCTION_23	ELSE_1	IF_5
0x40020af	          0x4889ef	                            mov rdi, rbp	      1325	nm.c	FUNCTION_23	ELSE_1	IF_5
0x40020b2	      0xe8e3f5ffff	               call sym.display_rel_file	      1325	nm.c	FUNCTION_23	ELSE_1	IF_5
0x40020b7	      0xbb01000000	                              mov ebx, 1	      1299	nm.c	FUNCTION_23
0x40020bc	            0xeb29	                           jmp 0x40020e7	      1299	nm.c	FUNCTION_23
0x40020be	          0x4c89ef	                            mov rdi, r13	      1329	nm.c	FUNCTION_23	ELSE_2	IF_6	CALL_11
0x40020c1	      0xe800000000	                          call 0x40020c6	      1329	nm.c	FUNCTION_23	ELSE_2	IF_6	CALL_11
0x40020c6	      0xe800000000	                          call 0x40020cb	      1330	nm.c	FUNCTION_23	ELSE_2	IF_6
0x40020cb	      0xbb00000000	                              mov ebx, 0	      1335	nm.c	FUNCTION_23	ELSE_2
0x40020d0	          0x83f80d	                            cmp eax, 0xd	      1330	nm.c	FUNCTION_23	ELSE_2	IF_6
0x40020d3	            0x7512	                           jne 0x40020e7	      1330	nm.c	FUNCTION_23	ELSE_2	IF_6
0x40020d5	        0x488b3c24	                    mov rdi, qword [rsp]	      1332	nm.c	FUNCTION_23	ELSE_2	IF_6	CALL_13
0x40020d9	      0xe800000000	                          call 0x40020de	      1332	nm.c	FUNCTION_23	ELSE_2	IF_6	CALL_13
0x40020de	        0x488b3c24	                    mov rdi, qword [rsp]	      1333	nm.c	FUNCTION_23	ELSE_2	IF_6
0x40020e2	      0xe800000000	                          call 0x40020e7	      1333	nm.c	FUNCTION_23	ELSE_2	IF_6
0x40020e7	          0x4889ef	                            mov rdi, rbp	      1338	nm.c	FUNCTION_23	CALL_15
0x40020ea	      0xe800000000	                          call 0x40020ef	      1338	nm.c	FUNCTION_23	CALL_15
0x40020ef	            0x85c0	                           test eax, eax	      1338	nm.c	FUNCTION_23	CALL_15
0x40020f1	            0x7508	                           jne 0x40020fb	      1338	nm.c	FUNCTION_23	CALL_15
0x40020f3	          0x4c89ef	                            mov rdi, r13	      1339	nm.c	FUNCTION_23
0x40020f6	      0xe800000000	                          call 0x40020fb	      1339	nm.c	FUNCTION_23
0x40020fb	    0x48c705000000	               mov qword [0x04002106], 0	      1341	nm.c	FUNCTION_23
0x4002106	    0x48c705000000	               mov qword [0x04002111], 0	      1342	nm.c	FUNCTION_23
0x4002111	            0x89d8	                            mov eax, ebx	      1344	nm.c	FUNCTION_23
0x4002113	            0xeb05	                           jmp 0x400211a	      1344	nm.c	FUNCTION_23
0x4002115	      0xb800000000	                              mov eax, 0	      1304	nm.c	FUNCTION_23
0x400211a	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1345	nm.c	
0x400211f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1345	nm.c	
0x4002128	            0x7405	                            je 0x400212f	      1345	nm.c	
0x400212a	      0xe800000000	                          call 0x400212f	      1345	nm.c	
0x400212f	        0x4883c410	                           add rsp, 0x10	      1345	nm.c	
0x4002133	              0x5b	                                 pop rbx	      1345	nm.c	
0x4002134	              0x5d	                                 pop rbp	      1345	nm.c	
0x4002135	            0x415c	                                 pop r12	      1345	nm.c	
0x4002137	            0x415d	                                 pop r13	      1345	nm.c	
0x4002139	            0x415e	                                 pop r14	      1345	nm.c	
0x400213b	              0xc3	                                     ret	      1345	nm.c	
non_numeric_reverse	ELSE,0:WHILE,0:FOR,0:CALL,1:DO,0:functions,0:IF,0:SWITCH,0	5
0x4000e57	        0x4883ec08	                              sub rsp, 8	       582	nm.c	FUNCTION_10	CALL_1
0x4000e5b	      0xe86efeffff	            call sym.non_numeric_forward	       583	nm.c	FUNCTION_10
0x4000e60	            0xf7d8	                                 neg eax	       583	nm.c	FUNCTION_10
0x4000e62	        0x4883c408	                              add rsp, 8	       584	nm.c	
0x4000e66	              0xc3	                                     ret	       584	nm.c	
print_archive_member_bsd	ELSE,0:WHILE,0:FOR,0:CALL,0:DO,0:functions,0:IF,1:SWITCH,0	10
0x4000186	    0x833d00000000	               cmp dword [0x0400018d], 0	      1409	nm.c	IF_2	ELSE_2
0x400018d	            0x751f	                           jne 0x40001ae	      1409	nm.c	IF_2	ELSE_2
0x400018f	        0x4883ec08	                              sub rsp, 8	      1408	nm.c	IF_2	ELSE_2	FUNCTION_30
0x4000193	          0x4889f2	                            mov rdx, rsi	      1408	nm.c	IF_2	ELSE_2	FUNCTION_30
0x4000196	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x400019b	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x40001a0	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_28
0x40001a5	      0xe800000000	                          call 0x40001aa	       104	stdio2.h	CALL_28
0x40001aa	        0x4883c408	                              add rsp, 8	      1411	nm.c	IF_2	ELSE_2
0x40001ae	            0xf3c3	                                     ret	      1411	nm.c	IF_2	ELSE_2
print_archive_filename_sysv	ELSE,0:WHILE,0:FOR,0:CALL,0:DO,0:functions,0:IF,0:SWITCH,0	1
0x400008c	            0xf3c3	                                     ret	      1395	nm.c	IF_2	ELSE_2
print_symbol_filename_sysv	ELSE,0:WHILE,0:FOR,0:CALL,2:DO,0:functions,0:IF,2:SWITCH,0	18
0x4000220	    0x833d00000000	               cmp dword [0x04000227], 0	      1452	nm.c	FUNCTION_34	IF_1
0x4000227	            0x7438	                            je 0x4000261	      1452	nm.c	FUNCTION_34	IF_1
0x4000229	              0x53	                                push rbx	      1451	nm.c	FUNCTION_34	IF_1	CALL_2
0x400022a	          0x4889f3	                            mov rbx, rsi	      1451	nm.c	FUNCTION_34	IF_1	CALL_2
0x400022d	          0x4885ff	                           test rdi, rdi	      1454	nm.c	
0x4000230	            0x7417	                            je 0x4000249	      1454	nm.c	
0x4000232	          0x488b17	                    mov rdx, qword [rdi]	       104	stdio2.h	CALL_28
0x4000235	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x400023a	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x400023f	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_28
0x4000244	      0xe800000000	                          call 0x4000249	       104	stdio2.h	CALL_28
0x4000249	          0x488b13	                    mov rdx, qword [rbx]	       104	stdio2.h	CALL_28
0x400024c	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x4000251	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x4000256	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_28
0x400025b	      0xe800000000	                          call 0x4000260	       104	stdio2.h	CALL_28
0x4000260	              0x5b	                                 pop rbx	      1458	nm.c	FUNCTION_35	IF_1
0x4000261	            0xf3c3	                                     ret	      1458	nm.c	FUNCTION_35	IF_1
display_rel_file	ELSE,3:WHILE,0:FOR,1:CALL,34:DO,0:functions,0:IF,15:SWITCH,0	480
0x400169a	            0x4157	                                push r15	      1097	nm.c	FUNCTION_20
0x400169c	            0x4156	                                push r14	      1097	nm.c	FUNCTION_20
0x400169e	            0x4155	                                push r13	      1097	nm.c	FUNCTION_20
0x40016a0	            0x4154	                                push r12	      1097	nm.c	FUNCTION_20
0x40016a2	              0x55	                                push rbp	      1097	nm.c	FUNCTION_20
0x40016a3	              0x53	                                push rbx	      1097	nm.c	FUNCTION_20
0x40016a4	        0x4883ec58	                           sub rsp, 0x58	      1097	nm.c	FUNCTION_20
0x40016a8	          0x4889fb	                            mov rbx, rdi	      1097	nm.c	FUNCTION_20
0x40016ab	      0x4889742410	             mov qword [rsp + 0x10], rsi	      1097	nm.c	FUNCTION_20
0x40016b0	    0x64488b042528	                mov rax, qword fs:[0x28]	      1097	nm.c	FUNCTION_20
0x40016b9	      0x4889442448	             mov qword [rsp + 0x48], rax	      1097	nm.c	FUNCTION_20
0x40016be	            0x31c0	                            xor eax, eax	      1097	nm.c	FUNCTION_20
0x40016c0	    0x48c744244000	               mov qword [rsp + 0x40], 0	      1102	nm.c	FUNCTION_20
0x40016c9	    0x8b3500000000	            mov esi, dword [0x040016cf] 	      1104	nm.c	FUNCTION_20	IF_1
0x40016cf	            0x85f6	                           test esi, esi	      1104	nm.c	FUNCTION_20	IF_1
0x40016d1	            0x7532	                           jne 0x4001705	      1104	nm.c	FUNCTION_20	IF_1
0x40016d3	        0xf6474502	               test byte [rdi + 0x45], 2	      1106	nm.c	FUNCTION_20	IF_1	IF_2
0x40016d7	            0x752c	                           jne 0x4001705	      1106	nm.c	FUNCTION_20	IF_1	IF_2
0x40016d9	          0x488b1f	                    mov rbx, qword [rdi]	      1108	nm.c	FUNCTION_20	IF_1	IF_2
0x40016dc	      0xba05000000	                              mov edx, 5	      1108	nm.c	FUNCTION_20	IF_1	IF_2
0x40016e1	      0xbe00000000	                              mov esi, 0	      1108	nm.c	FUNCTION_20	IF_1	IF_2
0x40016e6	      0xbf00000000	                              mov edi, 0	      1108	nm.c	FUNCTION_20	IF_1	IF_2
0x40016eb	      0xe800000000	                          call 0x40016f0	      1108	nm.c	FUNCTION_20	IF_1	IF_2
0x40016f0	          0x4889de	                            mov rsi, rbx	      1108	nm.c	FUNCTION_20	IF_1	IF_2
0x40016f3	          0x4889c7	                            mov rdi, rax	      1108	nm.c	FUNCTION_20	IF_1	IF_2
0x40016f6	      0xb800000000	                              mov eax, 0	      1108	nm.c	FUNCTION_20	IF_1	IF_2
0x40016fb	      0xe800000000	                          call 0x4001700	      1108	nm.c	FUNCTION_20	IF_1	IF_2
0x4001700	      0xe9fd060000	                           jmp 0x4001e02	      1109	nm.c	FUNCTION_20	IF_1	IF_2
0x4001705	        0x488b4308	                mov rax, qword [rbx + 8]	      1113	nm.c	FUNCTION_20	IF_3
0x4001709	      0x488d4c2434	                   lea rcx, [rsp + 0x34]	      1113	nm.c	FUNCTION_20	IF_3
0x400170e	      0x488d542438	                   lea rdx, [rsp + 0x38]	      1113	nm.c	FUNCTION_20	IF_3
0x4001713	          0x4889df	                            mov rdi, rbx	      1113	nm.c	FUNCTION_20	IF_3
0x4001716	    0xff9058020000	                call qword [rax + 0x258]	      1113	nm.c	FUNCTION_20	IF_3
0x400171c	          0x4989c7	                            mov r15, rax	      1113	nm.c	FUNCTION_20	IF_3
0x400171f	          0x4885c0	                           test rax, rax	      1114	nm.c	FUNCTION_20	IF_3
0x4001722	            0x7947	                           jns 0x400176b	      1114	nm.c	FUNCTION_20	IF_3
0x4001724	    0x833d00000000	               cmp dword [0x0400172b], 0	      1116	nm.c	FUNCTION_20	IF_3	IF_4
0x400172b	            0x7436	                            je 0x4001763	      1116	nm.c	FUNCTION_20	IF_3	IF_4
0x400172d	      0xe800000000	                          call 0x4001732	      1116	nm.c	FUNCTION_20	IF_3	IF_4
0x4001732	          0x83f807	                              cmp eax, 7	      1116	nm.c	FUNCTION_20	IF_3	IF_4
0x4001735	            0x752c	                           jne 0x4001763	      1116	nm.c	FUNCTION_20	IF_3	IF_4
0x4001737	          0x488b1b	                    mov rbx, qword [rbx]	      1118	nm.c	FUNCTION_20	IF_3	IF_4
0x400173a	      0xba05000000	                              mov edx, 5	      1118	nm.c	FUNCTION_20	IF_3	IF_4
0x400173f	      0xbe00000000	                              mov esi, 0	      1118	nm.c	FUNCTION_20	IF_3	IF_4
0x4001744	      0xbf00000000	                              mov edi, 0	      1118	nm.c	FUNCTION_20	IF_3	IF_4
0x4001749	      0xe800000000	                          call 0x400174e	      1118	nm.c	FUNCTION_20	IF_3	IF_4
0x400174e	          0x4889de	                            mov rsi, rbx	      1118	nm.c	FUNCTION_20	IF_3	IF_4
0x4001751	          0x4889c7	                            mov rdi, rax	      1118	nm.c	FUNCTION_20	IF_3	IF_4
0x4001754	      0xb800000000	                              mov eax, 0	      1118	nm.c	FUNCTION_20	IF_3	IF_4
0x4001759	      0xe800000000	                          call 0x400175e	      1118	nm.c	FUNCTION_20	IF_3	IF_4
0x400175e	      0xe99f060000	                           jmp 0x4001e02	      1119	nm.c	FUNCTION_20	IF_3	IF_4
0x4001763	          0x488b3b	                    mov rdi, qword [rbx]	      1122	nm.c	FUNCTION_20	IF_3
0x4001766	      0xe800000000	                          call 0x400176b	      1122	nm.c	FUNCTION_20	IF_3
0x400176b	          0x4885c0	                           test rax, rax	      1125	nm.c	FUNCTION_20	IF_5
0x400176e	            0x752c	                           jne 0x400179c	      1125	nm.c	FUNCTION_20	IF_5
0x4001770	          0x488b1b	                    mov rbx, qword [rbx]	      1127	nm.c	FUNCTION_20	IF_5
0x4001773	      0xba05000000	                              mov edx, 5	      1127	nm.c	FUNCTION_20	IF_5
0x4001778	      0xbe00000000	                              mov esi, 0	      1127	nm.c	FUNCTION_20	IF_5
0x400177d	      0xbf00000000	                              mov edi, 0	      1127	nm.c	FUNCTION_20	IF_5
0x4001782	      0xe800000000	                          call 0x4001787	      1127	nm.c	FUNCTION_20	IF_5
0x4001787	          0x4889de	                            mov rsi, rbx	      1127	nm.c	FUNCTION_20	IF_5
0x400178a	          0x4889c7	                            mov rdi, rax	      1127	nm.c	FUNCTION_20	IF_5
0x400178d	      0xb800000000	                              mov eax, 0	      1127	nm.c	FUNCTION_20	IF_5
0x4001792	      0xe800000000	                          call 0x4001797	      1127	nm.c	FUNCTION_20	IF_5
0x4001797	      0xe966060000	                           jmp 0x4001e02	      1128	nm.c	FUNCTION_20	IF_5
0x400179c	    0x833d00000000	               cmp dword [0x040017a3], 0	      1131	nm.c	FUNCTION_20	IF_6
0x40017a3	     0xf84f3000000	                            je 0x400189c	      1131	nm.c	FUNCTION_20	IF_6
0x40017a9	      0x837c243408	               cmp dword [rsp + 0x34], 8	      1131	nm.c	FUNCTION_20	IF_6
0x40017ae	     0xf85e8000000	                           jne 0x400189c	      1131	nm.c	FUNCTION_20	IF_6
0x40017b4	    0x833d00000000	               cmp dword [0x040017bb], 0	      1139	nm.c	FUNCTION_20	IF_6	IF_7
0x40017bb	            0x7415	                            je 0x40017d2	      1139	nm.c	FUNCTION_20	IF_6	IF_7
0x40017bd	      0x488b6c2438	            mov rbp, qword [rsp + 0x38] 	      1142	nm.c	FUNCTION_20	IF_6	IF_7
0x40017c2	          0x4889c1	                            mov rcx, rax	      1141	nm.c	FUNCTION_20	IF_6	IF_7
0x40017c5	      0xbe00000000	                              mov esi, 0	      1135	nm.c	FUNCTION_20	IF_6
0x40017ca	    0x41bc00000000	                             mov r12d, 0	      1133	nm.c	FUNCTION_20	IF_6
0x40017d0	            0xeb54	                           jmp 0x4001826	      1133	nm.c	FUNCTION_20	IF_6
0x40017d2	        0x488b4308	                mov rax, qword [rbx + 8]	      1146	nm.c	FUNCTION_20	IF_6	ELSE_1
0x40017d6	          0x4889df	                            mov rdi, rbx	      1146	nm.c	FUNCTION_20	IF_6	ELSE_1
0x40017d9	    0xff9038030000	                call qword [rax + 0x338]	      1146	nm.c	FUNCTION_20	IF_6	ELSE_1
0x40017df	      0x4c8b642438	            mov r12, qword [rsp + 0x38] 	      1149	nm.c	FUNCTION_20	IF_6	ELSE_1
0x40017e4	          0x4885c0	                           test rax, rax	      1151	nm.c	FUNCTION_20	IF_6	ELSE_1	IF_8
0x40017e7	            0x7e2b	                           jle 0x4001814	      1151	nm.c	FUNCTION_20	IF_6	ELSE_1	IF_8
0x40017e9	          0x4889c7	                            mov rdi, rax	      1153	nm.c	FUNCTION_20	IF_6	ELSE_1	IF_8	CALL_17
0x40017ec	      0xe800000000	                          call 0x40017f1	      1153	nm.c	FUNCTION_20	IF_6	ELSE_1	IF_8	CALL_17
0x40017f1	          0x4889c5	                            mov rbp, rax	      1153	nm.c	FUNCTION_20	IF_6	ELSE_1	IF_8	CALL_17
0x40017f4	        0x488b4308	                mov rax, qword [rbx + 8]	      1154	nm.c	FUNCTION_20	IF_6	ELSE_1	IF_8	IF_9
0x40017f8	          0x4889ee	                            mov rsi, rbp	      1154	nm.c	FUNCTION_20	IF_6	ELSE_1	IF_8	IF_9
0x40017fb	          0x4889df	                            mov rdi, rbx	      1154	nm.c	FUNCTION_20	IF_6	ELSE_1	IF_8	IF_9
0x40017fe	    0xff9040030000	                call qword [rax + 0x340]	      1154	nm.c	FUNCTION_20	IF_6	ELSE_1	IF_8	IF_9
0x4001804	          0x4889c1	                            mov rcx, rax	      1154	nm.c	FUNCTION_20	IF_6	ELSE_1	IF_8	IF_9
0x4001807	          0x4885c0	                           test rax, rax	      1155	nm.c	FUNCTION_20	IF_6	ELSE_1	IF_8	CALL_19
0x400180a	            0x7917	                           jns 0x4001823	      1155	nm.c	FUNCTION_20	IF_6	ELSE_1	IF_8	CALL_19
0x400180c	          0x488b3b	                    mov rdi, qword [rbx]	      1156	nm.c	FUNCTION_20	IF_6	ELSE_1	IF_8
0x400180f	      0xe800000000	                          call 0x4001814	      1156	nm.c	FUNCTION_20	IF_6	ELSE_1	IF_8
0x4001814	          0x4c89fe	                            mov rsi, r15	      1148	nm.c	FUNCTION_20	IF_6	ELSE_1
0x4001817	      0xb900000000	                              mov ecx, 0	      1136	nm.c	FUNCTION_20	IF_6
0x400181c	      0xbd00000000	                              mov ebp, 0	      1134	nm.c	FUNCTION_20	IF_6
0x4001821	            0xeb03	                           jmp 0x4001826	      1134	nm.c	FUNCTION_20	IF_6
0x4001823	          0x4c89fe	                            mov rsi, r15	      1148	nm.c	FUNCTION_20	IF_6	ELSE_1
0x4001826	        0x4c8b5308	                mov r10, qword [rbx + 8]	      1160	nm.c	FUNCTION_20	IF_6
0x400182a	      0x4c8d4c2440	                    lea r9, [rsp + 0x40]	      1160	nm.c	FUNCTION_20	IF_6
0x400182f	          0x4989e8	                             mov r8, rbp	      1160	nm.c	FUNCTION_20	IF_6
0x4001832	          0x4c89e2	                            mov rdx, r12	      1160	nm.c	FUNCTION_20	IF_6
0x4001835	          0x4889df	                            mov rdi, rbx	      1160	nm.c	FUNCTION_20	IF_6
0x4001838	    0x41ff92480300	                call qword [r10 + 0x348]	      1160	nm.c	FUNCTION_20	IF_6
0x400183f	          0x4889c5	                            mov rbp, rax	      1160	nm.c	FUNCTION_20	IF_6
0x4001842	          0x4885c0	                           test rax, rax	      1162	nm.c	FUNCTION_20	IF_6	IF_10
0x4001845	            0x7e55	                           jle 0x400189c	      1162	nm.c	FUNCTION_20	IF_6	IF_10
0x4001847	        0x4d8d2c07	                    lea r13, [r15 + rax]	      1168	nm.c	FUNCTION_20	IF_6	IF_10
0x400184b	    0x4a8d3ced0800	                    lea rdi, [r13*8 + 8]	      1168	nm.c	FUNCTION_20	IF_6	IF_10
0x4001853	      0xe800000000	                          call 0x4001858	      1168	nm.c	FUNCTION_20	IF_6	IF_10
0x4001858	          0x4989c4	                            mov r12, rax	      1168	nm.c	FUNCTION_20	IF_6	IF_10
0x400185b	        0x49c1e703	                              shl r15, 3	      1170	nm.c	FUNCTION_20	IF_6	IF_10
0x400185f	          0x4c89fa	                            mov rdx, r15	        53	string3.h	FUNCTION_58	CALL_3
0x4001862	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	        53	string3.h	FUNCTION_58	CALL_3
0x4001867	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_58	CALL_3
0x400186a	      0xe800000000	                          call 0x400186f	        53	string3.h	FUNCTION_58	CALL_3
0x400186f	        0x4b8d043c	                    lea rax, [r12 + r15]	      1171	nm.c	FUNCTION_20	IF_6	IF_10	FOR_1
0x4001873	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	      1171	nm.c	FUNCTION_20	IF_6	IF_10	FOR_1
0x4001878	        0x488d0ce8	                  lea rcx, [rax + rbp*8]	      1171	nm.c	FUNCTION_20	IF_6	IF_10	FOR_1
0x400187c	        0x4883c008	                              add rax, 8	      1173	nm.c	FUNCTION_20	IF_6	IF_10
0x4001880	        0x488950f8	                mov qword [rax - 8], rdx	      1173	nm.c	FUNCTION_20	IF_6	IF_10
0x4001884	        0x4883c230	                           add rdx, 0x30	      1173	nm.c	FUNCTION_20	IF_6	IF_10
0x4001888	          0x4839c8	                            cmp rax, rcx	      1172	nm.c	FUNCTION_20	IF_6	IF_10	FOR_1
0x400188b	            0x75ef	                           jne 0x400187c	      1172	nm.c	FUNCTION_20	IF_6	IF_10	FOR_1
0x400188d	    0x48c701000000	                      mov qword [rcx], 0	      1174	nm.c	FUNCTION_20	IF_6	IF_10
0x4001894	      0x4c89642438	             mov qword [rsp + 0x38], r12	      1175	nm.c	FUNCTION_20	IF_6	IF_10
0x4001899	          0x4d89ef	                            mov r15, r13	      1176	nm.c	FUNCTION_20	IF_6	IF_10
0x400189c	      0x448b742434	           mov r14d, dword [rsp + 0x34] 	      1184	nm.c	FUNCTION_20
0x40018a1	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      1184	nm.c	FUNCTION_20
0x40018a6	      0x4889442418	             mov qword [rsp + 0x18], rax	      1184	nm.c	FUNCTION_20
0x40018ab	    0x8b0500000000	            mov eax, dword [0x040018b1] 	      1184	nm.c	FUNCTION_20
0x40018b1	          0x890424	                    mov dword [rsp], eax	      1184	nm.c	FUNCTION_20
0x40018b4	        0x488b4308	                mov rax, qword [rbx + 8]	       462	nm.c	FUNCTION_8	IF_1
0x40018b8	          0x4889df	                            mov rdi, rbx	       462	nm.c	FUNCTION_8	IF_1
0x40018bb	    0xff9000020000	                call qword [rax + 0x200]	       462	nm.c	FUNCTION_8	IF_1
0x40018c1	      0x4889442408	                mov qword [rsp + 8], rax	       462	nm.c	FUNCTION_8	IF_1
0x40018c6	          0x4885c0	                           test rax, rax	       463	nm.c	FUNCTION_8	CALL_3
0x40018c9	            0x7508	                           jne 0x40018d3	       463	nm.c	FUNCTION_8	CALL_3
0x40018cb	          0x488b3b	                    mov rdi, qword [rbx]	       464	nm.c	FUNCTION_8
0x40018ce	      0xe800000000	                          call 0x40018d3	       464	nm.c	FUNCTION_8
0x40018d3	          0x4489f0	                           mov eax, r14d	       467	nm.c	FUNCTION_8
0x40018d6	      0x4889442420	             mov qword [rsp + 0x20], rax	       467	nm.c	FUNCTION_8
0x40018db	        0x4c0faff8	                           imul r15, rax	       467	nm.c	FUNCTION_8
0x40018df	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       467	nm.c	FUNCTION_8
0x40018e4	          0x4901c7	                            add r15, rax	       467	nm.c	FUNCTION_8
0x40018e7	          0x4c39f8	                            cmp rax, r15	       470	nm.c	FUNCTION_8	FOR_1
0x40018ea	     0xf8357010000	                           jae 0x4001a47	       470	nm.c	FUNCTION_8	FOR_1
0x40018f0	          0x4989c5	                            mov r13, rax	       470	nm.c	FUNCTION_8	FOR_1
0x40018f3	          0x4989c4	                            mov r12, rax	       470	nm.c	FUNCTION_8	FOR_1
0x40018f6	          0x4589f6	                          mov r14d, r14d	       526	nm.c	FUNCTION_8	FOR_1	IF_11
0x40018f9	        0x488b4308	                mov rax, qword [rbx + 8]	       477	nm.c	FUNCTION_8	FOR_1	IF_2
0x40018fd	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       477	nm.c	FUNCTION_8	FOR_1	IF_2
0x4001902	          0x4c89e2	                            mov rdx, r12	       477	nm.c	FUNCTION_8	FOR_1	IF_2
0x4001905	          0x8b3424	                    mov esi, dword [rsp]	       477	nm.c	FUNCTION_8	FOR_1	IF_2
0x4001908	          0x4889df	                            mov rdi, rbx	       477	nm.c	FUNCTION_8	FOR_1	IF_2
0x400190b	    0xff9060020000	                call qword [rax + 0x260]	       477	nm.c	FUNCTION_8	FOR_1	IF_2
0x4001911	          0x4889c5	                            mov rbp, rax	       477	nm.c	FUNCTION_8	FOR_1	IF_2
0x4001914	          0x4885c0	                           test rax, rax	       478	nm.c	FUNCTION_8	FOR_1	CALL_7
0x4001917	            0x7508	                           jne 0x4001921	       478	nm.c	FUNCTION_8	FOR_1	CALL_7
0x4001919	          0x488b3b	                    mov rdi, qword [rbx]	       479	nm.c	FUNCTION_8	FOR_1
0x400191c	      0xe800000000	                          call 0x4001921	       479	nm.c	FUNCTION_8	FOR_1
0x4001921	        0x488b4008	                mov rax, qword [rax + 8]	       481	nm.c	FUNCTION_8	FOR_1	IF_3
0x4001925	          0x80385f	                    cmp byte [rax], 0x5f	       481	nm.c	FUNCTION_8	FOR_1	IF_3
0x4001928	            0x7559	                           jne 0x4001983	       481	nm.c	FUNCTION_8	FOR_1	IF_3
0x400192a	        0x8078015f	                cmp byte [rax + 1], 0x5f	       482	nm.c	FUNCTION_8	FOR_1	IF_3	CALL_8
0x400192e	            0x7553	                           jne 0x4001983	       482	nm.c	FUNCTION_8	FOR_1	IF_3	CALL_8
0x4001930	        0x8078025f	                cmp byte [rax + 2], 0x5f	       483	nm.c	FUNCTION_8	FOR_1	IF_3	CALL_10
0x4001934	        0x400f94c6	                                sete sil	       483	nm.c	FUNCTION_8	FOR_1	IF_3	CALL_10
0x4001938	        0x400fb6f6	                          movzx esi, sil	       483	nm.c	FUNCTION_8	FOR_1	IF_3	CALL_10
0x400193c	          0x4801c6	                            add rsi, rax	       483	nm.c	FUNCTION_8	FOR_1	IF_3	CALL_10
0x400193f	      0xbf00000000	                              mov edi, 0	       483	nm.c	FUNCTION_8	FOR_1	IF_3	CALL_10
0x4001944	      0xb90f000000	                            mov ecx, 0xf	       483	nm.c	FUNCTION_8	FOR_1	IF_3	CALL_10
0x4001949	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       483	nm.c	FUNCTION_8	FOR_1	IF_3	CALL_10
0x400194b	           0xf97c2	                                 seta dl	       483	nm.c	FUNCTION_8	FOR_1	IF_3	CALL_10
0x400194e	           0xf92c0	                                 setb al	       483	nm.c	FUNCTION_8	FOR_1	IF_3	CALL_10
0x4001951	            0x38c2	                              cmp dl, al	       483	nm.c	FUNCTION_8	FOR_1	IF_3	CALL_10
0x4001953	            0x752e	                           jne 0x4001983	       483	nm.c	FUNCTION_8	FOR_1	IF_3	CALL_10
0x4001955	          0x488b03	                    mov rax, qword [rbx]	       485	nm.c	FUNCTION_8	FOR_1
0x4001958	      0x4889442428	             mov qword [rsp + 0x28], rax	       485	nm.c	FUNCTION_8	FOR_1
0x400195d	      0xba05000000	                              mov edx, 5	       484	nm.c	FUNCTION_8	FOR_1	CALL_11
0x4001962	      0xbe00000000	                              mov esi, 0	       484	nm.c	FUNCTION_8	FOR_1	CALL_11
0x4001967	      0xbf00000000	                              mov edi, 0	       484	nm.c	FUNCTION_8	FOR_1	CALL_11
0x400196c	      0xe800000000	                          call 0x4001971	       484	nm.c	FUNCTION_8	FOR_1	CALL_11
0x4001971	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	       484	nm.c	FUNCTION_8	FOR_1	CALL_11
0x4001976	          0x4889c7	                            mov rdi, rax	       484	nm.c	FUNCTION_8	FOR_1	CALL_11
0x4001979	      0xb800000000	                              mov eax, 0	       484	nm.c	FUNCTION_8	FOR_1	CALL_11
0x400197e	      0xe800000000	                          call 0x4001983	       484	nm.c	FUNCTION_8	FOR_1	CALL_11
0x4001983	    0x833d00000000	               cmp dword [0x0400198a], 0	       487	nm.c	FUNCTION_8	FOR_1	CALL_12
0x400198a	            0x7410	                            je 0x400199c	       487	nm.c	FUNCTION_8	FOR_1	CALL_12
0x400198c	    0x48817d200000	               cmp qword [rbp + 0x20], 0	       488	nm.c	FUNCTION_8	FOR_1	ELSE_1	IF_5
0x4001994	           0xf94c0	                                 sete al	       488	nm.c	FUNCTION_8	FOR_1	ELSE_1	IF_5
0x4001997	           0xfb6c0	                           movzx eax, al	       488	nm.c	FUNCTION_8	FOR_1	ELSE_1	IF_5
0x400199a	            0xeb27	                           jmp 0x40019c3	       488	nm.c	FUNCTION_8	FOR_1	ELSE_1	IF_5
0x400199c	    0x833d00000000	               cmp dword [0x040019a3], 0	       489	nm.c	FUNCTION_8	FOR_1	ELSE_1	IF_5
0x40019a3	            0x7422	                            je 0x40019c7	       489	nm.c	FUNCTION_8	FOR_1	ELSE_1	IF_5
0x40019a5	    0xf74518820080	      test dword [rbp + 0x18], 0x800082 	       495	nm.c	FUNCTION_8	FOR_1	ELSE_2
0x40019ac	            0x7519	                           jne 0x40019c7	       495	nm.c	FUNCTION_8	FOR_1	ELSE_2
0x40019ae	        0x488b4520	            mov rax, qword [rbp + 0x20] 	       494	nm.c	FUNCTION_8	FOR_1	ELSE_1	IF_5
0x40019b2	    0x483d00000000	                              cmp rax, 0	       494	nm.c	FUNCTION_8	FOR_1	ELSE_1	IF_5
0x40019b8	            0x740d	                            je 0x40019c7	       494	nm.c	FUNCTION_8	FOR_1	ELSE_1	IF_5
0x40019ba	          0x8b4020	            mov eax, dword [rax + 0x20] 	       488	nm.c	FUNCTION_8	FOR_1	ELSE_1	IF_5
0x40019bd	          0xc1e80c	                            shr eax, 0xc	       488	nm.c	FUNCTION_8	FOR_1	ELSE_1	IF_5
0x40019c0	          0x83e001	                              and eax, 1	       488	nm.c	FUNCTION_8	FOR_1	ELSE_1	IF_5
0x40019c3	            0x85c0	                           test eax, eax	       499	nm.c	FUNCTION_8	FOR_1	IF_6
0x40019c5	            0x7472	                            je 0x4001a39	       499	nm.c	FUNCTION_8	FOR_1	IF_6
0x40019c7	    0x833d00000000	               cmp dword [0x040019ce], 0	       500	nm.c	FUNCTION_8	FOR_1	IF_6
0x40019ce	     0xf85e5030000	                           jne 0x4001db9	       500	nm.c	FUNCTION_8	FOR_1	IF_6
0x40019d4	        0xf6451804	               test byte [rbp + 0x18], 4	       501	nm.c	FUNCTION_8	FOR_1	IF_6
0x40019d8	            0x755f	                           jne 0x4001a39	       501	nm.c	FUNCTION_8	FOR_1	IF_6
0x40019da	      0xe9da030000	                           jmp 0x4001db9	       501	nm.c	FUNCTION_8	FOR_1	IF_6
0x40019df	        0x488b4520	            mov rax, qword [rbp + 0x20] 	       506	nm.c	FUNCTION_8	FOR_1	IF_7	CALL_16
0x40019e3	    0x483d00000000	                              cmp rax, 0	       507	nm.c	FUNCTION_8	FOR_1	IF_7
0x40019e9	            0x744e	                            je 0x4001a39	       507	nm.c	FUNCTION_8	FOR_1	IF_7
0x40019eb	    0x483d00000000	                              cmp rax, 0	       507	nm.c	FUNCTION_8	FOR_1	IF_7
0x40019f1	            0x7446	                            je 0x4001a39	       507	nm.c	FUNCTION_8	FOR_1	IF_7
0x40019f3	    0x833d00000000	               cmp dword [0x040019fa], 0	       511	nm.c	FUNCTION_8	FOR_1	IF_8
0x40019fa	            0x740a	                            je 0x4001a06	       511	nm.c	FUNCTION_8	FOR_1	IF_8
0x40019fc	    0x48817d200000	               cmp qword [rbp + 0x20], 0	       513	nm.c	FUNCTION_8	FOR_1	IF_8	IF_9
0x4001a04	            0x7433	                            je 0x4001a39	       513	nm.c	FUNCTION_8	FOR_1	IF_8	IF_9
0x4001a06	        0x488b4308	                mov rax, qword [rbx + 8]	       518	nm.c	FUNCTION_8	FOR_1	IF_10
0x4001a0a	          0x4889ee	                            mov rsi, rbp	       518	nm.c	FUNCTION_8	FOR_1	IF_10
0x4001a0d	          0x4889df	                            mov rdi, rbx	       518	nm.c	FUNCTION_8	FOR_1	IF_10
0x4001a10	    0xff9028020000	                call qword [rax + 0x228]	       518	nm.c	FUNCTION_8	FOR_1	IF_10
0x4001a16	            0x85c0	                           test eax, eax	       518	nm.c	FUNCTION_8	FOR_1	IF_10
0x4001a18	            0x7409	                            je 0x4001a23	       518	nm.c	FUNCTION_8	FOR_1	IF_10
0x4001a1a	    0x833d00000000	               cmp dword [0x04001a21], 0	       519	nm.c	FUNCTION_8	FOR_1	IF_10
0x4001a21	            0x7416	                            je 0x4001a39	       519	nm.c	FUNCTION_8	FOR_1	IF_10
0x4001a23	          0x4d39ec	                            cmp r12, r13	       524	nm.c	FUNCTION_8	FOR_1	IF_11	CALL_19
0x4001a26	            0x740e	                            je 0x4001a36	       524	nm.c	FUNCTION_8	FOR_1	IF_11	CALL_19
0x4001a28	          0x4c89f2	                            mov rdx, r14	        53	string3.h	FUNCTION_58	CALL_3
0x4001a2b	          0x4c89e6	                            mov rsi, r12	        53	string3.h	FUNCTION_58	CALL_3
0x4001a2e	          0x4c89ef	                            mov rdi, r13	        53	string3.h	FUNCTION_58	CALL_3
0x4001a31	      0xe800000000	                          call 0x4001a36	        53	string3.h	FUNCTION_58	CALL_3
0x4001a36	          0x4d01f5	                            add r13, r14	       526	nm.c	FUNCTION_8	FOR_1	IF_11
0x4001a39	          0x4d01f4	                            add r12, r14	       526	nm.c	FUNCTION_8	FOR_1	IF_11
0x4001a3c	          0x4d39e7	                            cmp r15, r12	       470	nm.c	FUNCTION_8	FOR_1
0x4001a3f	     0xf87b4feffff	                            ja 0x40018f9	       470	nm.c	FUNCTION_8	FOR_1
0x4001a45	            0xeb05	                           jmp 0x4001a4c	       470	nm.c	FUNCTION_8	FOR_1
0x4001a47	      0x4c8b6c2418	            mov r13, qword [rsp + 0x18] 	       468	nm.c	FUNCTION_8
0x4001a4c	          0x4c89e8	                            mov rax, r13	       530	nm.c	FUNCTION_8
0x4001a4f	      0x482b442418	             sub rax, qword [rsp + 0x18]	       530	nm.c	FUNCTION_8
0x4001a54	            0x4899	                                     cqo	       530	nm.c	FUNCTION_8
0x4001a56	      0x48f77c2420	                 idiv qword [rsp + 0x20]	       530	nm.c	FUNCTION_8
0x4001a5b	          0x4989c5	                            mov r13, rax	       530	nm.c	FUNCTION_8
0x4001a5e	          0x4989c4	                            mov r12, rax	       530	nm.c	FUNCTION_8
0x4001a61	    0x48c744242000	               mov qword [rsp + 0x20], 0	      1186	nm.c	FUNCTION_20	IF_11
0x4001a6a	    0x833d00000000	               cmp dword [0x04001a71], 0	      1187	nm.c	FUNCTION_20	IF_11
0x4001a71	     0xf850e020000	                           jne 0x4001c85	      1187	nm.c	FUNCTION_20	IF_11
0x4001a77	    0x48891d000000	            mov qword [0x04001a7e], rbx 	      1189	nm.c	FUNCTION_20	IF_11
0x4001a7e	    0x8b0500000000	            mov eax, dword [0x04001a84] 	      1190	nm.c	FUNCTION_20	IF_11	CALL_24
0x4001a84	    0x890500000000	            mov dword [0x04001a8a], eax 	      1190	nm.c	FUNCTION_20	IF_11	CALL_24
0x4001a8a	        0x488b4308	                mov rax, qword [rbx + 8]	      1191	nm.c	FUNCTION_20	IF_11	CALL_25
0x4001a8e	          0x4889df	                            mov rdi, rbx	      1191	nm.c	FUNCTION_20	IF_11	CALL_25
0x4001a91	    0xff9000020000	                call qword [rax + 0x200]	      1191	nm.c	FUNCTION_20	IF_11	CALL_25
0x4001a97	    0x488905000000	            mov qword [0x04001a9e], rax 	      1191	nm.c	FUNCTION_20	IF_11	CALL_25
0x4001a9e	        0x488b4308	                mov rax, qword [rbx + 8]	      1192	nm.c	FUNCTION_20	IF_11	IF_12
0x4001aa2	          0x4889df	                            mov rdi, rbx	      1192	nm.c	FUNCTION_20	IF_11	IF_12
0x4001aa5	    0xff9000020000	                call qword [rax + 0x200]	      1192	nm.c	FUNCTION_20	IF_11	IF_12
0x4001aab	    0x488905000000	            mov qword [0x04001ab2], rax 	      1192	nm.c	FUNCTION_20	IF_11	IF_12
0x4001ab2	    0x48833d000000	               cmp qword [0x04001aba], 0	      1193	nm.c	FUNCTION_20	IF_11	CALL_27
0x4001aba	            0x7405	                            je 0x4001ac1	      1193	nm.c	FUNCTION_20	IF_11	CALL_27
0x4001abc	          0x4885c0	                           test rax, rax	      1193	nm.c	FUNCTION_20	IF_11	CALL_27
0x4001abf	            0x7508	                           jne 0x4001ac9	      1193	nm.c	FUNCTION_20	IF_11	CALL_27
0x4001ac1	          0x488b3b	                    mov rdi, qword [rbx]	      1194	nm.c	FUNCTION_20	IF_11
0x4001ac4	      0xe800000000	                          call 0x4001ac9	      1194	nm.c	FUNCTION_20	IF_11
0x4001ac9	    0x833d00000000	               cmp dword [0x04001ad0], 0	      1196	nm.c	FUNCTION_20	IF_11	IF_13	CALL_28
0x4001ad0	            0x7539	                           jne 0x4001b0b	      1196	nm.c	FUNCTION_20	IF_11	IF_13	CALL_28
0x4001ad2	    0x486305000000	         movsxd rax, dword [0x04001ad9] 	      1197	nm.c	FUNCTION_20	IF_11	IF_13
0x4001ad9	    0x486315000000	         movsxd rdx, dword [0x04001ae0] 	      1197	nm.c	FUNCTION_20	IF_11	IF_13
0x4001ae0	        0x488d0450	                  lea rax, [rax + rdx*2]	      1197	nm.c	FUNCTION_20	IF_11	IF_13
0x4001ae4	    0x488b0cc50000	                  mov rcx, qword [rax*8]	      1197	nm.c	FUNCTION_20	IF_11	IF_13
0x4001aec	        0x8b542434	            mov edx, dword [rsp + 0x34] 	      1197	nm.c	FUNCTION_20	IF_11	IF_13
0x4001af0	          0x4c89ee	                            mov rsi, r13	      1197	nm.c	FUNCTION_20	IF_11	IF_13
0x4001af3	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      1197	nm.c	FUNCTION_20	IF_11	IF_13
0x4001af8	      0xe800000000	                          call 0x4001afd	      1197	nm.c	FUNCTION_20	IF_11	IF_13
0x4001afd	    0x48c744242000	               mov qword [rsp + 0x20], 0	      1186	nm.c	FUNCTION_20	IF_11
0x4001b06	      0xe97a010000	                           jmp 0x4001c85	      1186	nm.c	FUNCTION_20	IF_11
0x4001b0b	      0x4c8b742438	            mov r14, qword [rsp + 0x38] 	      1200	nm.c	FUNCTION_20	IF_11	ELSE_2
0x4001b10	    0x8b0500000000	            mov eax, dword [0x04001b16] 	      1200	nm.c	FUNCTION_20	IF_11	ELSE_2
0x4001b16	        0x89442428	             mov dword [rsp + 0x28], eax	      1200	nm.c	FUNCTION_20	IF_11	ELSE_2
0x4001b1a	        0x8b442434	            mov eax, dword [rsp + 0x34] 	       736	nm.c	FUNCTION_15
0x4001b1e	          0x4989c7	                            mov r15, rax	       736	nm.c	FUNCTION_15
0x4001b21	      0x4889442418	             mov qword [rsp + 0x18], rax	       736	nm.c	FUNCTION_15
0x4001b26	      0xb900000000	                              mov ecx, 0	       736	nm.c	FUNCTION_15
0x4001b2b	          0x4889c2	                            mov rdx, rax	       736	nm.c	FUNCTION_15
0x4001b2e	          0x4c89ee	                            mov rsi, r13	       736	nm.c	FUNCTION_15
0x4001b31	          0x4c89f7	                            mov rdi, r14	       736	nm.c	FUNCTION_15
0x4001b34	      0xe800000000	                          call 0x4001b39	       736	nm.c	FUNCTION_15
0x4001b39	          0x4c89ef	                            mov rdi, r13	       740	nm.c	FUNCTION_15
0x4001b3c	        0x48c1e704	                              shl rdi, 4	       740	nm.c	FUNCTION_15
0x4001b40	      0xe800000000	                          call 0x4001b45	       740	nm.c	FUNCTION_15
0x4001b45	      0x4889442420	             mov qword [rsp + 0x20], rax	       740	nm.c	FUNCTION_15
0x4001b4a	        0x4d0fafef	                           imul r13, r15	       747	nm.c	FUNCTION_15
0x4001b4e	        0x4f8d3c2e	                    lea r15, [r14 + r13]	       747	nm.c	FUNCTION_15
0x4001b52	          0x4989c5	                            mov r13, rax	       752	nm.c	FUNCTION_15	IF_1
0x4001b55	          0x4d39fe	                            cmp r14, r15	       752	nm.c	FUNCTION_15	IF_1
0x4001b58	     0xf8303010000	                           jae 0x4001c61	       752	nm.c	FUNCTION_15	IF_1
0x4001b5e	    0x488b05000000	            mov rax, qword [0x04001b65] 	       749	nm.c	FUNCTION_15
0x4001b65	          0x4889c1	                            mov rcx, rax	       749	nm.c	FUNCTION_15
0x4001b68	      0x4889442408	                mov qword [rsp + 8], rax	       749	nm.c	FUNCTION_15
0x4001b6d	    0x488b05000000	            mov rax, qword [0x04001b74] 	       750	nm.c	FUNCTION_15
0x4001b74	        0x48890424	                    mov qword [rsp], rax	       750	nm.c	FUNCTION_15
0x4001b78	        0x488b4308	                mov rax, qword [rbx + 8]	       754	nm.c	FUNCTION_15	IF_1
0x4001b7c	          0x4c89f2	                            mov rdx, r14	       754	nm.c	FUNCTION_15	IF_1
0x4001b7f	        0x8b742428	            mov esi, dword [rsp + 0x28] 	       754	nm.c	FUNCTION_15	IF_1
0x4001b83	          0x4889df	                            mov rdi, rbx	       754	nm.c	FUNCTION_15	IF_1
0x4001b86	    0xff9060020000	                call qword [rax + 0x260]	       754	nm.c	FUNCTION_15	IF_1
0x4001b8c	          0x4989c4	                            mov r12, rax	       754	nm.c	FUNCTION_15	IF_1
0x4001b8f	          0x4885c0	                           test rax, rax	       756	nm.c	FUNCTION_15	IF_1	CALL_5
0x4001b92	            0x751f	                           jne 0x4001bb3	       756	nm.c	FUNCTION_15	IF_1	CALL_5
0x4001b94	          0x488b3b	                    mov rdi, qword [rbx]	       757	nm.c	FUNCTION_15	IF_1
0x4001b97	      0xe800000000	                          call 0x4001b9c	       757	nm.c	FUNCTION_15	IF_1
0x4001b9c	        0x488b0424	                    mov rax, qword [rsp]	       756	nm.c	FUNCTION_15	IF_1	CALL_5
0x4001ba0	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       756	nm.c	FUNCTION_15	IF_1	CALL_5
0x4001ba5	        0x48890c24	                    mov qword [rsp], rcx	       756	nm.c	FUNCTION_15	IF_1	CALL_5
0x4001ba9	      0x4889442408	                mov qword [rsp + 8], rax	       756	nm.c	FUNCTION_15	IF_1	CALL_5
0x4001bae	          0x4989ee	                            mov r14, rbp	       756	nm.c	FUNCTION_15	IF_1	CALL_5
0x4001bb1	            0xeb05	                           jmp 0x4001bb8	       756	nm.c	FUNCTION_15	IF_1	CALL_5
0x4001bb3	      0x4c8b6c2420	            mov r13, qword [rsp + 0x20] 	       756	nm.c	FUNCTION_15	IF_1	CALL_5
0x4001bb8	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       767	nm.c	FUNCTION_15	FOR_1	IF_3
0x4001bbd	        0x498d2c06	                    lea rbp, [r14 + rax]	       767	nm.c	FUNCTION_15	FOR_1	IF_3
0x4001bc1	          0x4939ef	                            cmp r15, rbp	       767	nm.c	FUNCTION_15	FOR_1	IF_3
0x4001bc4	     0xf8601020000	                           jbe 0x4001dcb	       767	nm.c	FUNCTION_15	FOR_1	IF_3
0x4001bca	        0x488b4308	                mov rax, qword [rbx + 8]	       769	nm.c	FUNCTION_15	FOR_1	IF_3
0x4001bce	        0x488b0c24	                    mov rcx, qword [rsp]	       769	nm.c	FUNCTION_15	FOR_1	IF_3
0x4001bd2	          0x4889ea	                            mov rdx, rbp	       769	nm.c	FUNCTION_15	FOR_1	IF_3
0x4001bd5	        0x8b742428	            mov esi, dword [rsp + 0x28] 	       769	nm.c	FUNCTION_15	FOR_1	IF_3
0x4001bd9	          0x4889df	                            mov rdi, rbx	       769	nm.c	FUNCTION_15	FOR_1	IF_3
0x4001bdc	    0xff9060020000	                call qword [rax + 0x260]	       769	nm.c	FUNCTION_15	FOR_1	IF_3
0x4001be2	          0x4885c0	                           test rax, rax	       773	nm.c	FUNCTION_15	FOR_1	IF_3	CALL_8
0x4001be5	     0xf85fe010000	                           jne 0x4001de9	       773	nm.c	FUNCTION_15	FOR_1	IF_3	CALL_8
0x4001beb	          0x488b3b	                    mov rdi, qword [rbx]	       774	nm.c	FUNCTION_15	FOR_1	IF_3
0x4001bee	      0xe800000000	                          call 0x4001bf3	       774	nm.c	FUNCTION_15	FOR_1	IF_3
0x4001bf3	        0x488b4b08	                mov rcx, qword [rbx + 8]	       785	nm.c	FUNCTION_15	FOR_1	IF_5
0x4001bf7	        0x83790805	                  cmp dword [rcx + 8], 5	       785	nm.c	FUNCTION_15	FOR_1	IF_5
0x4001bfb	            0x750a	                           jne 0x4001c07	       785	nm.c	FUNCTION_15	FOR_1	IF_5
0x4001bfd	      0x498b542438	            mov rdx, qword [r12 + 0x38] 	       786	nm.c	FUNCTION_15	FOR_1	ELSE_2	IF_6
0x4001c02	          0x4989c4	                            mov r12, rax	       786	nm.c	FUNCTION_15	FOR_1	ELSE_2	IF_6
0x4001c05	            0xeb3b	                           jmp 0x4001c42	       786	nm.c	FUNCTION_15	FOR_1	ELSE_2	IF_6
0x4001c07	        0xf6422110	           test byte [rdx + 0x21], 0x10 	       788	nm.c	FUNCTION_15	FOR_1	ELSE_2	IF_6
0x4001c0b	            0x740a	                            je 0x4001c17	       788	nm.c	FUNCTION_15	FOR_1	ELSE_2	IF_6
0x4001c0d	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	       789	nm.c	FUNCTION_15	FOR_1	ELSE_3
0x4001c12	          0x4989c4	                            mov r12, rax	       789	nm.c	FUNCTION_15	FOR_1	ELSE_3
0x4001c15	            0xeb2b	                           jmp 0x4001c42	       789	nm.c	FUNCTION_15	FOR_1	ELSE_3
0x4001c17	          0x4939ef	                            cmp r15, rbp	       792	nm.c	FUNCTION_15	FOR_1	ELSE_3	IF_7	CALL_12
0x4001c1a	            0x761a	                           jbe 0x4001c36	       792	nm.c	FUNCTION_15	FOR_1	ELSE_3	IF_7	CALL_12
0x4001c1c	        0x48395020	            cmp qword [rax + 0x20], rdx 	       793	nm.c	FUNCTION_15	FOR_1	ELSE_3	IF_7
0x4001c20	            0x7514	                           jne 0x4001c36	       793	nm.c	FUNCTION_15	FOR_1	ELSE_3	IF_7
0x4001c22	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       794	nm.c	FUNCTION_15	FOR_1	ELSE_3	ELSE_4
0x4001c26	      0x492b542410	             sub rdx, qword [r12 + 0x10]	       801	nm.c	FUNCTION_15	FOR_1	IF_8
0x4001c2b	          0x4989c4	                            mov r12, rax	       801	nm.c	FUNCTION_15	FOR_1	IF_8
0x4001c2e	     0xf8468ffffff	                            je 0x4001b9c	       801	nm.c	FUNCTION_15	FOR_1	IF_8
0x4001c34	            0xeb13	                           jmp 0x4001c49	       801	nm.c	FUNCTION_15	FOR_1	IF_8
0x4001c36	        0x488b5238	            mov rdx, qword [rdx + 0x38] 	       796	nm.c	FUNCTION_15	FOR_1	ELSE_3	ELSE_4	CALL_14
0x4001c3a	      0x492b542410	             sub rdx, qword [r12 + 0x10]	       796	nm.c	FUNCTION_15	FOR_1	ELSE_3	ELSE_4	CALL_14
0x4001c3f	          0x4989c4	                            mov r12, rax	       796	nm.c	FUNCTION_15	FOR_1	ELSE_3	ELSE_4	CALL_14
0x4001c42	          0x4885d2	                           test rdx, rdx	       801	nm.c	FUNCTION_15	FOR_1	IF_8
0x4001c45	            0x7411	                            je 0x4001c58	       801	nm.c	FUNCTION_15	FOR_1	IF_8
0x4001c47	            0xeb03	                           jmp 0x4001c4c	       801	nm.c	FUNCTION_15	FOR_1	IF_8
0x4001c49	          0x4989c4	                            mov r12, rax	       801	nm.c	FUNCTION_15	FOR_1	IF_8
0x4001c4c	        0x4d897500	                    mov qword [r13], r14	       803	nm.c	FUNCTION_15	FOR_1	IF_8
0x4001c50	        0x49895508	                mov qword [r13 + 8], rdx	       804	nm.c	FUNCTION_15	FOR_1	IF_8
0x4001c54	        0x4983c510	                           add r13, 0x10	       805	nm.c	FUNCTION_15	FOR_1	IF_8
0x4001c58	          0x4939ef	                            cmp r15, rbp	       760	nm.c	FUNCTION_15	FOR_1
0x4001c5b	     0xf873bffffff	                            ja 0x4001b9c	       760	nm.c	FUNCTION_15	FOR_1
0x4001c61	          0x4c89ee	                            mov rsi, r13	       815	nm.c	FUNCTION_15
0x4001c64	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       815	nm.c	FUNCTION_15
0x4001c69	          0x4829c6	                            sub rsi, rax	       815	nm.c	FUNCTION_15
0x4001c6c	        0x48c1fe04	                              sar rsi, 4	       815	nm.c	FUNCTION_15
0x4001c70	          0x4989f4	                            mov r12, rsi	       815	nm.c	FUNCTION_15
0x4001c73	      0xb900000000	                              mov ecx, 0	       818	nm.c	FUNCTION_15
0x4001c78	      0xba10000000	                           mov edx, 0x10	       818	nm.c	FUNCTION_15
0x4001c7d	          0x4889c7	                            mov rdi, rax	       818	nm.c	FUNCTION_15
0x4001c80	      0xe800000000	                          call 0x4001c85	       818	nm.c	FUNCTION_15
0x4001c85	    0x833d00000000	               cmp dword [0x04001c8c], 0	      1204	nm.c	FUNCTION_20	CALL_30
0x4001c8c	     0xf8586000000	                           jne 0x4001d18	      1204	nm.c	FUNCTION_20	CALL_30
0x4001c92	      0x448b6c2434	           mov r13d, dword [rsp + 0x34] 	      1205	nm.c	FUNCTION_20	ELSE_3
0x4001c97	      0x488b6c2438	            mov rbp, qword [rsp + 0x38] 	      1205	nm.c	FUNCTION_20	ELSE_3
0x4001c9c	    0x448b3d000000	           mov r15d, dword [0x04001ca3] 	      1205	nm.c	FUNCTION_20	ELSE_3
0x4001ca3	        0x488b4308	                mov rax, qword [rbx + 8]	      1074	nm.c	FUNCTION_19	IF_1
0x4001ca7	          0x4889df	                            mov rdi, rbx	      1074	nm.c	FUNCTION_19	IF_1
0x4001caa	    0xff9000020000	                call qword [rax + 0x200]	      1074	nm.c	FUNCTION_19	IF_1
0x4001cb0	          0x4989c6	                            mov r14, rax	      1074	nm.c	FUNCTION_19	IF_1
0x4001cb3	          0x4885c0	                           test rax, rax	      1075	nm.c	FUNCTION_19	CALL_3
0x4001cb6	            0x7508	                           jne 0x4001cc0	      1075	nm.c	FUNCTION_19	CALL_3
0x4001cb8	          0x488b3b	                    mov rdi, qword [rbx]	      1076	nm.c	FUNCTION_19
0x4001cbb	      0xe800000000	                          call 0x4001cc0	      1076	nm.c	FUNCTION_19
0x4001cc0	          0x4489e8	                           mov eax, r13d	      1079	nm.c	FUNCTION_19
0x4001cc3	        0x4c0fafe0	                           imul r12, rax	      1079	nm.c	FUNCTION_19
0x4001cc7	          0x4901ec	                            add r12, rbp	      1079	nm.c	FUNCTION_19
0x4001cca	          0x4c39e5	                            cmp rbp, r12	      1081	nm.c	FUNCTION_19	FOR_1
0x4001ccd	     0xf83c1000000	                           jae 0x4001d94	      1081	nm.c	FUNCTION_19	FOR_1
0x4001cd3	          0x4589ed	                          mov r13d, r13d	      1081	nm.c	FUNCTION_19	FOR_1
0x4001cd6	        0x488b4308	                mov rax, qword [rbx + 8]	      1085	nm.c	FUNCTION_19	FOR_1	IF_2
0x4001cda	          0x4c89f1	                            mov rcx, r14	      1085	nm.c	FUNCTION_19	FOR_1	IF_2
0x4001cdd	          0x4889ea	                            mov rdx, rbp	      1085	nm.c	FUNCTION_19	FOR_1	IF_2
0x4001ce0	          0x4489fe	                           mov esi, r15d	      1085	nm.c	FUNCTION_19	FOR_1	IF_2
0x4001ce3	          0x4889df	                            mov rdi, rbx	      1085	nm.c	FUNCTION_19	FOR_1	IF_2
0x4001ce6	    0xff9060020000	                call qword [rax + 0x260]	      1085	nm.c	FUNCTION_19	FOR_1	IF_2
0x4001cec	          0x4885c0	                           test rax, rax	      1086	nm.c	FUNCTION_19	FOR_1	CALL_6
0x4001cef	            0x7508	                           jne 0x4001cf9	      1086	nm.c	FUNCTION_19	FOR_1	CALL_6
0x4001cf1	          0x488b3b	                    mov rdi, qword [rbx]	      1087	nm.c	FUNCTION_19	FOR_1
0x4001cf4	      0xe800000000	                          call 0x4001cf9	      1087	nm.c	FUNCTION_19	FOR_1
0x4001cf9	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      1089	nm.c	FUNCTION_19	FOR_1
0x4001cfe	      0xba00000000	                              mov edx, 0	      1089	nm.c	FUNCTION_19	FOR_1
0x4001d03	          0x4889c6	                            mov rsi, rax	      1089	nm.c	FUNCTION_19	FOR_1
0x4001d06	          0x4889df	                            mov rdi, rbx	      1089	nm.c	FUNCTION_19	FOR_1
0x4001d09	      0xe873f4ffff	                   call sym.print_symbol	      1089	nm.c	FUNCTION_19	FOR_1
0x4001d0e	          0x4c01ed	                            add rbp, r13	      1089	nm.c	FUNCTION_19	FOR_1
0x4001d11	          0x4939ec	                            cmp r12, rbp	      1081	nm.c	FUNCTION_19	FOR_1
0x4001d14	            0x77c0	                            ja 0x4001cd6	      1081	nm.c	FUNCTION_19	FOR_1
0x4001d16	            0xeb7c	                           jmp 0x4001d94	      1081	nm.c	FUNCTION_19	FOR_1
0x4001d18	    0x448b35000000	           mov r14d, dword [0x04001d1f] 	      1207	nm.c	FUNCTION_20
0x4001d1f	        0x488b4308	                mov rax, qword [rbx + 8]	      1034	nm.c	FUNCTION_18	IF_1
0x4001d23	          0x4889df	                            mov rdi, rbx	      1034	nm.c	FUNCTION_18	IF_1
0x4001d26	    0xff9000020000	                call qword [rax + 0x200]	      1034	nm.c	FUNCTION_18	IF_1
0x4001d2c	          0x4989c5	                            mov r13, rax	      1034	nm.c	FUNCTION_18	IF_1
0x4001d2f	          0x4885c0	                           test rax, rax	      1035	nm.c	FUNCTION_18	CALL_3
0x4001d32	            0x7508	                           jne 0x4001d3c	      1035	nm.c	FUNCTION_18	CALL_3
0x4001d34	          0x488b3b	                    mov rdi, qword [rbx]	      1036	nm.c	FUNCTION_18
0x4001d37	      0xe800000000	                          call 0x4001d3c	      1036	nm.c	FUNCTION_18
0x4001d3c	        0x49c1e404	                              shl r12, 4	      1039	nm.c	FUNCTION_18
0x4001d40	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1039	nm.c	FUNCTION_18
0x4001d45	          0x4901c4	                            add r12, rax	      1039	nm.c	FUNCTION_18
0x4001d48	          0x4c39e0	                            cmp rax, r12	      1041	nm.c	FUNCTION_18	FOR_1
0x4001d4b	            0x7347	                           jae 0x4001d94	      1041	nm.c	FUNCTION_18	FOR_1
0x4001d4d	          0x4889c5	                            mov rbp, rax	      1041	nm.c	FUNCTION_18	FOR_1
0x4001d50	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	      1041	nm.c	FUNCTION_18	FOR_1
0x4001d55	        0x488b4308	                mov rax, qword [rbx + 8]	      1045	nm.c	FUNCTION_18	FOR_1	IF_2
0x4001d59	          0x4c89e9	                            mov rcx, r13	      1045	nm.c	FUNCTION_18	FOR_1	IF_2
0x4001d5c	        0x488b5500	                    mov rdx, qword [rbp]	      1045	nm.c	FUNCTION_18	FOR_1	IF_2
0x4001d60	          0x4489f6	                           mov esi, r14d	      1045	nm.c	FUNCTION_18	FOR_1	IF_2
0x4001d63	          0x4889df	                            mov rdi, rbx	      1045	nm.c	FUNCTION_18	FOR_1	IF_2
0x4001d66	    0xff9060020000	                call qword [rax + 0x260]	      1045	nm.c	FUNCTION_18	FOR_1	IF_2
0x4001d6c	          0x4885c0	                           test rax, rax	      1046	nm.c	FUNCTION_18	FOR_1	CALL_6
0x4001d6f	            0x7508	                           jne 0x4001d79	      1046	nm.c	FUNCTION_18	FOR_1	CALL_6
0x4001d71	          0x488b3b	                    mov rdi, qword [rbx]	      1047	nm.c	FUNCTION_18	FOR_1
0x4001d74	      0xe800000000	                          call 0x4001d79	      1047	nm.c	FUNCTION_18	FOR_1
0x4001d79	        0x488b5508	                mov rdx, qword [rbp + 8]	      1049	nm.c	FUNCTION_18	FOR_1
0x4001d7d	          0x4c89f9	                            mov rcx, r15	      1049	nm.c	FUNCTION_18	FOR_1
0x4001d80	          0x4889c6	                            mov rsi, rax	      1049	nm.c	FUNCTION_18	FOR_1
0x4001d83	          0x4889df	                            mov rdi, rbx	      1049	nm.c	FUNCTION_18	FOR_1
0x4001d86	      0xe8f6f3ffff	                   call sym.print_symbol	      1049	nm.c	FUNCTION_18	FOR_1
0x4001d8b	        0x4883c510	                           add rbp, 0x10	      1041	nm.c	FUNCTION_18	FOR_1
0x4001d8f	          0x4939ec	                            cmp r12, rbp	      1041	nm.c	FUNCTION_18	FOR_1
0x4001d92	            0x77c1	                            ja 0x4001d55	      1041	nm.c	FUNCTION_18	FOR_1
0x4001d94	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      1209	nm.c	FUNCTION_20	CALL_32
0x4001d99	          0x4885ff	                           test rdi, rdi	      1209	nm.c	FUNCTION_20	CALL_32
0x4001d9c	            0x7405	                            je 0x4001da3	      1209	nm.c	FUNCTION_20	CALL_32
0x4001d9e	      0xe800000000	                          call 0x4001da3	      1210	nm.c	FUNCTION_20	CALL_33
0x4001da3	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      1211	nm.c	FUNCTION_20	CALL_34
0x4001da8	      0xe800000000	                          call 0x4001dad	      1211	nm.c	FUNCTION_20	CALL_34
0x4001dad	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      1212	nm.c	FUNCTION_20
0x4001db2	      0xe800000000	                          call 0x4001db7	      1212	nm.c	FUNCTION_20
0x4001db7	            0xeb49	                           jmp 0x4001e02	      1212	nm.c	FUNCTION_20
0x4001db9	    0x833d00000000	               cmp dword [0x04001dc0], 0	       505	nm.c	FUNCTION_8	FOR_1	IF_7	CALL_15
0x4001dc0	     0xf8519fcffff	                           jne 0x40019df	       505	nm.c	FUNCTION_8	FOR_1	IF_7	CALL_15
0x4001dc6	      0xe928fcffff	                           jmp 0x40019f3	       505	nm.c	FUNCTION_8	FOR_1	IF_7	CALL_15
0x4001dcb	      0x498b542420	            mov rdx, qword [r12 + 0x20] 	       779	nm.c	FUNCTION_15	FOR_1
0x4001dd0	      0xb800000000	                              mov eax, 0	       777	nm.c	FUNCTION_15	FOR_1
0x4001dd5	    0x41f744241800	      test dword [r12 + 0x18], 0x200100 	       784	nm.c	FUNCTION_15	FOR_1	IF_5	CALL_10
0x4001dde	     0xf840ffeffff	                            je 0x4001bf3	       784	nm.c	FUNCTION_15	FOR_1	IF_5	CALL_10
0x4001de4	      0xe94dfeffff	                           jmp 0x4001c36	       784	nm.c	FUNCTION_15	FOR_1	IF_5	CALL_10
0x4001de9	      0x498b542420	            mov rdx, qword [r12 + 0x20] 	       779	nm.c	FUNCTION_15	FOR_1
0x4001dee	    0x41f744241800	      test dword [r12 + 0x18], 0x200100 	       784	nm.c	FUNCTION_15	FOR_1	IF_5	CALL_10
0x4001df7	     0xf851ffeffff	                           jne 0x4001c1c	       784	nm.c	FUNCTION_15	FOR_1	IF_5	CALL_10
0x4001dfd	      0xe9f1fdffff	                           jmp 0x4001bf3	       784	nm.c	FUNCTION_15	FOR_1	IF_5	CALL_10
0x4001e02	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      1213	nm.c	
0x4001e07	    0x644833042528	                xor rax, qword fs:[0x28]	      1213	nm.c	
0x4001e10	            0x7405	                            je 0x4001e17	      1213	nm.c	
0x4001e12	      0xe800000000	                          call 0x4001e17	      1213	nm.c	
0x4001e17	        0x4883c458	                           add rsp, 0x58	      1213	nm.c	
0x4001e1b	              0x5b	                                 pop rbx	      1213	nm.c	
0x4001e1c	              0x5d	                                 pop rbp	      1213	nm.c	
0x4001e1d	            0x415c	                                 pop r12	      1213	nm.c	
0x4001e1f	            0x415d	                                 pop r13	      1213	nm.c	
0x4001e21	            0x415e	                                 pop r14	      1213	nm.c	
0x4001e23	            0x415f	                                 pop r15	      1213	nm.c	
0x4001e25	              0xc3	                                     ret	      1213	nm.c	
print_symname	ELSE,0:WHILE,0:FOR,0:CALL,2:DO,0:functions,0:IF,2:SWITCH,0	32
0x400049f	            0x4154	                                push r12	       407	nm.c	FUNCTION_6	IF_1
0x40004a1	              0x55	                                push rbp	       407	nm.c	FUNCTION_6	IF_1
0x40004a2	              0x53	                                push rbx	       407	nm.c	FUNCTION_6	IF_1
0x40004a3	          0x4889fd	                            mov rbp, rdi	       407	nm.c	FUNCTION_6	IF_1
0x40004a6	          0x4889f3	                            mov rbx, rsi	       407	nm.c	FUNCTION_6	IF_1
0x40004a9	    0x833d00000000	               cmp dword [0x040004b0], 0	       408	nm.c	FUNCTION_6	IF_1
0x40004b0	            0x7439	                            je 0x40004eb	       408	nm.c	FUNCTION_6	IF_1
0x40004b2	          0x4889d7	                            mov rdi, rdx	       408	nm.c	FUNCTION_6	IF_1
0x40004b5	          0x803e00	                       cmp byte [rsi], 0	       408	nm.c	FUNCTION_6	IF_1
0x40004b8	            0x7431	                            je 0x40004eb	       408	nm.c	FUNCTION_6	IF_1
0x40004ba	      0xba03000000	                              mov edx, 3	       410	nm.c	FUNCTION_6	IF_1
0x40004bf	      0xe800000000	                          call 0x40004c4	       410	nm.c	FUNCTION_6	IF_1
0x40004c4	          0x4989c4	                            mov r12, rax	       410	nm.c	FUNCTION_6	IF_1
0x40004c7	          0x4885c0	                           test rax, rax	       412	nm.c	FUNCTION_6	IF_1	IF_2
0x40004ca	            0x741f	                            je 0x40004eb	       412	nm.c	FUNCTION_6	IF_1	IF_2
0x40004cc	          0x4889c2	                            mov rdx, rax	       104	stdio2.h	CALL_28
0x40004cf	          0x4889ee	                            mov rsi, rbp	       104	stdio2.h	CALL_28
0x40004d2	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x40004d7	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_28
0x40004dc	      0xe800000000	                          call 0x40004e1	       104	stdio2.h	CALL_28
0x40004e1	          0x4c89e7	                            mov rdi, r12	       415	nm.c	FUNCTION_6	IF_1	IF_2
0x40004e4	      0xe800000000	                          call 0x40004e9	       415	nm.c	FUNCTION_6	IF_1	IF_2
0x40004e9	            0xeb15	                           jmp 0x4000500	       416	nm.c	FUNCTION_6	IF_1	IF_2
0x40004eb	          0x4889da	                            mov rdx, rbx	       104	stdio2.h	CALL_28
0x40004ee	          0x4889ee	                            mov rsi, rbp	       104	stdio2.h	CALL_28
0x40004f1	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x40004f6	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_28
0x40004fb	      0xe800000000	                          call 0x4000500	       104	stdio2.h	CALL_28
0x4000500	              0x5b	                                 pop rbx	       421	nm.c	
0x4000501	              0x5d	                                 pop rbp	       421	nm.c	
0x4000502	            0x415c	                                 pop r12	       421	nm.c	
0x4000504	              0xc3	                                     ret	       421	nm.c	
print_object_filename_bsd	ELSE,0:WHILE,0:FOR,0:CALL,0:DO,0:functions,0:IF,1:SWITCH,0	12
0x40000f6	    0x833d00000000	               cmp dword [0x040000fd], 0	      1358	nm.c	FUNCTION_24	IF_1
0x40000fd	            0x7428	                            je 0x4000127	      1358	nm.c	FUNCTION_24	IF_1
0x40000ff	    0x833d00000000	               cmp dword [0x04000106], 0	      1358	nm.c	FUNCTION_24	IF_1
0x4000106	            0x751f	                           jne 0x4000127	      1358	nm.c	FUNCTION_24	IF_1
0x4000108	        0x4883ec08	                              sub rsp, 8	      1357	nm.c	FUNCTION_24	IF_1
0x400010c	          0x4889fa	                            mov rdx, rdi	      1357	nm.c	FUNCTION_24	IF_1
0x400010f	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x4000114	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x4000119	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_28
0x400011e	      0xe800000000	                          call 0x4000123	       104	stdio2.h	CALL_28
0x4000123	        0x4883c408	                              add rsp, 8	      1360	nm.c	
0x4000127	            0xf3c3	                                     ret	      1360	nm.c	
print_symbol_info_bsd	ELSE,2:WHILE,0:FOR,0:CALL,5:DO,0:functions,0:IF,5:SWITCH,0	100
0x40005aa	              0x55	                                push rbp	      1520	nm.c	FUNCTION_37	IF_1
0x40005ab	              0x53	                                push rbx	      1520	nm.c	FUNCTION_37	IF_1
0x40005ac	        0x4883ec08	                              sub rsp, 8	      1520	nm.c	FUNCTION_37	IF_1
0x40005b0	          0x4889fb	                            mov rbx, rdi	      1520	nm.c	FUNCTION_37	IF_1
0x40005b3	          0x4889f5	                            mov rbp, rsi	      1520	nm.c	FUNCTION_37	IF_1
0x40005b6	          0x488b07	                    mov rax, qword [rdi]	      1521	nm.c	FUNCTION_37	IF_1
0x40005b9	         0xfbe7808	               movsx edi, byte [rax + 8]	      1521	nm.c	FUNCTION_37	IF_1
0x40005bd	      0xe800000000	                          call 0x40005c2	      1521	nm.c	FUNCTION_37	IF_1
0x40005c2	            0x85c0	                           test eax, eax	      1521	nm.c	FUNCTION_37	IF_1
0x40005c4	            0x7436	                            je 0x40005fc	      1521	nm.c	FUNCTION_37	IF_1
0x40005c6	    0x833d00000000	           cmp dword [0x040005cd], 0x40 	      1523	nm.c	FUNCTION_37	ELSE_1
0x40005cd	            0x7514	                           jne 0x40005e3	      1523	nm.c	FUNCTION_37	ELSE_1
0x40005cf	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x40005d4	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x40005d9	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_28
0x40005de	      0xe800000000	                          call 0x40005e3	       104	stdio2.h	CALL_28
0x40005e3	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x40005e8	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x40005ed	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_28
0x40005f2	      0xe800000000	                          call 0x40005f7	       104	stdio2.h	CALL_28
0x40005f7	      0xe98a000000	                           jmp 0x4000686	       104	stdio2.h	CALL_28
0x40005fc	    0x833d00000000	               cmp dword [0x04000603], 0	      1533	nm.c	FUNCTION_37	ELSE_1	IF_4
0x4000603	            0x7426	                            je 0x400062b	      1533	nm.c	FUNCTION_37	ELSE_1	IF_4
0x4000605	    0x833d00000000	               cmp dword [0x0400060c], 0	      1533	nm.c	FUNCTION_37	ELSE_1	IF_4
0x400060c	            0x751d	                           jne 0x400062b	      1533	nm.c	FUNCTION_37	ELSE_1	IF_4
0x400060e	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1534	nm.c	FUNCTION_37	ELSE_1	IF_4
0x4000612	          0x4885c0	                           test rax, rax	      1534	nm.c	FUNCTION_37	ELSE_1	IF_4
0x4000615	            0x7406	                            je 0x400061d	      1534	nm.c	FUNCTION_37	ELSE_1	IF_4
0x4000617	        0x488b7038	            mov rsi, qword [rax + 0x38] 	      1534	nm.c	FUNCTION_37	ELSE_1	IF_4
0x400061b	            0xeb04	                           jmp 0x4000621	      1534	nm.c	FUNCTION_37	ELSE_1	IF_4
0x400061d	        0x488b7308	                mov rsi, qword [rbx + 8]	      1534	nm.c	FUNCTION_37	ELSE_1	IF_4
0x4000621	          0x4889ef	                            mov rdi, rbp	      1534	nm.c	FUNCTION_37	ELSE_1	IF_4
0x4000624	      0xe80cfeffff	                    call sym.print_value	      1534	nm.c	FUNCTION_37	ELSE_1	IF_4
0x4000629	            0xeb0e	                           jmp 0x4000639	      1534	nm.c	FUNCTION_37	ELSE_1	IF_4
0x400062b	          0x488b03	                    mov rax, qword [rbx]	      1536	nm.c	FUNCTION_37	ELSE_1	IF_4
0x400062e	          0x488b30	                    mov rsi, qword [rax]	      1536	nm.c	FUNCTION_37	ELSE_1	IF_4
0x4000631	          0x4889ef	                            mov rdi, rbp	      1536	nm.c	FUNCTION_37	ELSE_1	IF_4
0x4000634	      0xe8fcfdffff	                    call sym.print_value	      1536	nm.c	FUNCTION_37	ELSE_1	IF_4
0x4000639	    0x833d00000000	               cmp dword [0x04000640], 0	      1537	nm.c	FUNCTION_37	ELSE_1
0x4000640	            0x7444	                            je 0x4000686	      1537	nm.c	FUNCTION_37	ELSE_1
0x4000642	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1537	nm.c	FUNCTION_37	ELSE_1
0x4000646	          0x4885c0	                           test rax, rax	      1537	nm.c	FUNCTION_37	ELSE_1
0x4000649	            0x740a	                            je 0x4000655	      1537	nm.c	FUNCTION_37	ELSE_1
0x400064b	      0x4883783800	               cmp qword [rax + 0x38], 0	      1537	nm.c	FUNCTION_37	ELSE_1
0x4000650	           0xf95c0	                                setne al	      1537	nm.c	FUNCTION_37	ELSE_1
0x4000653	            0xeb08	                           jmp 0x400065d	      1537	nm.c	FUNCTION_37	ELSE_1
0x4000655	      0x48837b0800	                  cmp qword [rbx + 8], 0	      1537	nm.c	FUNCTION_37	ELSE_1
0x400065a	           0xf95c0	                                setne al	      1537	nm.c	FUNCTION_37	ELSE_1
0x400065d	            0x84c0	                             test al, al	      1537	nm.c	FUNCTION_37	ELSE_1
0x400065f	            0x7425	                            je 0x4000686	      1537	nm.c	FUNCTION_37	ELSE_1
0x4000661	      0xbf20000000	                           mov edi, 0x20	       104	stdio2.h	CALL_28
0x4000666	      0xe800000000	                          call 0x400066b	       104	stdio2.h	CALL_28
0x400066b	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1540	nm.c	FUNCTION_37
0x400066f	          0x4885c0	                           test rax, rax	      1540	nm.c	FUNCTION_37
0x4000672	            0x7406	                            je 0x400067a	      1540	nm.c	FUNCTION_37
0x4000674	        0x488b7038	            mov rsi, qword [rax + 0x38] 	      1540	nm.c	FUNCTION_37
0x4000678	            0xeb04	                           jmp 0x400067e	      1540	nm.c	FUNCTION_37
0x400067a	        0x488b7308	                mov rsi, qword [rbx + 8]	      1540	nm.c	FUNCTION_37
0x400067e	          0x4889ef	                            mov rdi, rbp	      1540	nm.c	FUNCTION_37
0x4000681	      0xe8affdffff	                    call sym.print_value	      1540	nm.c	FUNCTION_37
0x4000686	          0x488b03	                    mov rax, qword [rbx]	      1544	nm.c	FUNCTION_37	IF_5
0x4000689	         0xfbe5008	               movsx edx, byte [rax + 8]	       104	stdio2.h	CALL_28
0x400068d	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x4000692	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x4000697	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_28
0x400069c	      0xe800000000	                          call 0x40006a1	       104	stdio2.h	CALL_28
0x40006a1	          0x488b03	                    mov rax, qword [rbx]	      1546	nm.c	FUNCTION_37	IF_5
0x40006a4	        0x8078082d	                cmp byte [rax + 8], 0x2d	      1546	nm.c	FUNCTION_37	IF_5
0x40006a8	            0x7565	                           jne 0x400070f	      1546	nm.c	FUNCTION_37	IF_5
0x40006aa	      0xbf20000000	                           mov edi, 0x20	       104	stdio2.h	CALL_28
0x40006af	      0xe800000000	                          call 0x40006b4	       104	stdio2.h	CALL_28
0x40006b4	          0x488b03	                    mov rax, qword [rbx]	      1550	nm.c	FUNCTION_37	CALL_5
0x40006b7	         0xfbe5019	           movsx edx, byte [rax + 0x19] 	       104	stdio2.h	CALL_28
0x40006bb	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x40006c0	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x40006c5	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_28
0x40006ca	      0xe800000000	                          call 0x40006cf	       104	stdio2.h	CALL_28
0x40006cf	      0xbf20000000	                           mov edi, 0x20	       104	stdio2.h	CALL_28
0x40006d4	      0xe800000000	                          call 0x40006d9	       104	stdio2.h	CALL_28
0x40006d9	          0x488b03	                    mov rax, qword [rbx]	      1552	nm.c	
0x40006dc	         0xfbf501a	           movsx edx, word [rax + 0x1a] 	       104	stdio2.h	CALL_28
0x40006e0	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x40006e5	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x40006ea	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_28
0x40006ef	      0xe800000000	                          call 0x40006f4	       104	stdio2.h	CALL_28
0x40006f4	          0x488b03	                    mov rax, qword [rbx]	      1553	nm.c	
0x40006f7	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       104	stdio2.h	CALL_28
0x40006fb	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x4000700	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x4000705	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_28
0x400070a	      0xe800000000	                          call 0x400070f	       104	stdio2.h	CALL_28
0x400070f	          0x488b03	                    mov rax, qword [rbx]	      1555	nm.c	FUNCTION_38
0x4000712	        0x488b7010	            mov rsi, qword [rax + 0x10] 	      1555	nm.c	FUNCTION_38
0x4000716	          0x4889ea	                            mov rdx, rbp	      1555	nm.c	FUNCTION_38
0x4000719	      0xbf00000000	                              mov edi, 0	      1555	nm.c	FUNCTION_38
0x400071e	      0xe87cfdffff	                  call sym.print_symname	      1555	nm.c	FUNCTION_38
0x4000723	        0x4883c408	                              add rsp, 8	      1556	nm.c	FUNCTION_38	CALL_1
0x4000727	              0x5b	                                 pop rbx	      1556	nm.c	FUNCTION_38	CALL_1
0x4000728	              0x5d	                                 pop rbp	      1556	nm.c	FUNCTION_38	CALL_1
0x4000729	              0xc3	                                     ret	      1556	nm.c	FUNCTION_38	CALL_1
numeric_reverse	ELSE,0:WHILE,0:FOR,0:CALL,1:DO,0:functions,0:IF,0:SWITCH,0	5
0x4000e47	        0x4883ec08	                              sub rsp, 8	       615	nm.c	FUNCTION_12	CALL_1
0x4000e4b	      0xe82fffffff	                call sym.numeric_forward	       616	nm.c	FUNCTION_12
0x4000e50	            0xf7d8	                                 neg eax	       616	nm.c	FUNCTION_12
0x4000e52	        0x4883c408	                              add rsp, 8	       617	nm.c	
0x4000e56	              0xc3	                                     ret	       617	nm.c	
set_print_width	ELSE,1:WHILE,0:FOR,0:CALL,5:DO,0:functions,0:IF,2:SWITCH,0	26
0x4000c72	              0x53	                                push rbx	      1217	nm.c	FUNCTION_21	CALL_1
0x4000c73	          0x4889fb	                            mov rbx, rdi	      1217	nm.c	FUNCTION_21	CALL_1
0x4000c76	      0xe800000000	                          call 0x4000c7b	      1218	nm.c	FUNCTION_21
0x4000c7b	    0x890500000000	            mov dword [0x04000c81], eax 	      1218	nm.c	FUNCTION_21
0x4000c81	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1220	nm.c	FUNCTION_21	IF_1
0x4000c84	            0x7546	                           jne 0x4000ccc	      1220	nm.c	FUNCTION_21	IF_1
0x4000c86	        0x488b4308	                mov rax, qword [rbx + 8]	      1227	nm.c	FUNCTION_21	IF_1	IF_2	CALL_5
0x4000c8a	          0x488b18	                    mov rbx, qword [rax]	      1227	nm.c	FUNCTION_21	IF_1	IF_2	CALL_5
0x4000c8d	      0xbe00000000	                              mov esi, 0	      1227	nm.c	FUNCTION_21	IF_1	IF_2	CALL_5
0x4000c92	          0x4889df	                            mov rdi, rbx	      1227	nm.c	FUNCTION_21	IF_1	IF_2	CALL_5
0x4000c95	      0xe800000000	                          call 0x4000c9a	      1227	nm.c	FUNCTION_21	IF_1	IF_2	CALL_5
0x4000c9a	          0x4885c0	                           test rax, rax	      1227	nm.c	FUNCTION_21	IF_1	IF_2	CALL_5
0x4000c9d	            0x7517	                           jne 0x4000cb6	      1227	nm.c	FUNCTION_21	IF_1	IF_2	CALL_5
0x4000c9f	          0x803b6d	                    cmp byte [rbx], 0x6d	      1228	nm.c	FUNCTION_21	IF_1	IF_2
0x4000ca2	            0x751e	                           jne 0x4000cc2	      1228	nm.c	FUNCTION_21	IF_1	IF_2
0x4000ca4	        0x807b016d	                cmp byte [rbx + 1], 0x6d	      1228	nm.c	FUNCTION_21	IF_1	IF_2
0x4000ca8	            0x7518	                           jne 0x4000cc2	      1228	nm.c	FUNCTION_21	IF_1	IF_2
0x4000caa	        0x807b026f	                cmp byte [rbx + 2], 0x6f	      1228	nm.c	FUNCTION_21	IF_1	IF_2
0x4000cae	            0x7512	                           jne 0x4000cc2	      1228	nm.c	FUNCTION_21	IF_1	IF_2
0x4000cb0	        0x807b0300	                   cmp byte [rbx + 3], 0	      1228	nm.c	FUNCTION_21	IF_1	IF_2
0x4000cb4	            0x750c	                           jne 0x4000cc2	      1228	nm.c	FUNCTION_21	IF_1	IF_2
0x4000cb6	    0xc70500000000	           mov dword [0x04000cc0], 0x40 	      1229	nm.c	FUNCTION_21	IF_1	ELSE_1
0x4000cc0	            0xeb0a	                           jmp 0x4000ccc	      1229	nm.c	FUNCTION_21	IF_1	ELSE_1
0x4000cc2	    0xc70500000000	           mov dword [0x04000ccc], 0x20 	      1231	nm.c	FUNCTION_21	IF_1	ELSE_1
0x4000ccc	              0x5b	                                 pop rbx	      1233	nm.c	ELSE_1
0x4000ccd	              0xc3	                                     ret	      1233	nm.c	ELSE_1
print_archive_filename_bsd	ELSE,0:WHILE,0:FOR,0:CALL,0:DO,0:functions,0:IF,1:SWITCH,0	10
0x400015c	    0x833d00000000	               cmp dword [0x04000163], 0	      1389	nm.c	IF_2	ELSE_2
0x4000163	            0x741f	                            je 0x4000184	      1389	nm.c	IF_2	ELSE_2
0x4000165	        0x4883ec08	                              sub rsp, 8	      1388	nm.c	IF_2	ELSE_2	FUNCTION_27
0x4000169	          0x4889fa	                            mov rdx, rdi	      1388	nm.c	IF_2	ELSE_2	FUNCTION_27
0x400016c	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x4000171	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x4000176	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_28
0x400017b	      0xe800000000	                          call 0x4000180	       104	stdio2.h	CALL_28
0x4000180	        0x4883c408	                              add rsp, 8	      1391	nm.c	IF_2	ELSE_2
0x4000184	            0xf3c3	                                     ret	      1391	nm.c	IF_2	ELSE_2
print_symbol_filename_bsd	ELSE,0:WHILE,0:FOR,0:CALL,2:DO,0:functions,0:IF,2:SWITCH,0	18
0x40001dd	    0x833d00000000	               cmp dword [0x040001e4], 0	      1441	nm.c	FUNCTION_33	IF_1
0x40001e4	            0x7438	                            je 0x400021e	      1441	nm.c	FUNCTION_33	IF_1
0x40001e6	              0x53	                                push rbx	      1440	nm.c	FUNCTION_33	IF_1	CALL_2
0x40001e7	          0x4889f3	                            mov rbx, rsi	      1440	nm.c	FUNCTION_33	IF_1	CALL_2
0x40001ea	          0x4885ff	                           test rdi, rdi	      1443	nm.c	
0x40001ed	            0x7417	                            je 0x4000206	      1443	nm.c	
0x40001ef	          0x488b17	                    mov rdx, qword [rdi]	       104	stdio2.h	CALL_28
0x40001f2	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x40001f7	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x40001fc	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_28
0x4000201	      0xe800000000	                          call 0x4000206	       104	stdio2.h	CALL_28
0x4000206	          0x488b13	                    mov rdx, qword [rbx]	       104	stdio2.h	CALL_28
0x4000209	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x400020e	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x4000213	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_28
0x4000218	      0xe800000000	                          call 0x400021d	       104	stdio2.h	CALL_28
0x400021d	              0x5b	                                 pop rbx	      1447	nm.c	FUNCTION_34	IF_1
0x400021e	            0xf3c3	                                     ret	      1447	nm.c	FUNCTION_34	IF_1
size_forward2	ELSE,2:WHILE,0:FOR,0:CALL,0:DO,0:functions,0:IF,2:SWITCH,0	22
0x4000040	        0x488b5708	                mov rdx, qword [rdi + 8]	       713	nm.c	FUNCTION_14	IF_1
0x4000044	        0x488b4608	                mov rax, qword [rsi + 8]	       713	nm.c	FUNCTION_14	IF_1
0x4000048	          0x4839c2	                            cmp rdx, rax	       713	nm.c	FUNCTION_14	IF_1
0x400004b	            0x730d	                           jae 0x400005a	       713	nm.c	FUNCTION_14	IF_1
0x400004d	    0x833d00000000	               cmp dword [0x04000054], 1	       714	nm.c	FUNCTION_14	ELSE_1	IF_2
0x4000054	            0x19c0	                            sbb eax, eax	       714	nm.c	FUNCTION_14	ELSE_1	IF_2
0x4000056	          0x83c801	                               or eax, 1	       714	nm.c	FUNCTION_14	ELSE_1	IF_2
0x4000059	              0xc3	                                     ret	       719	nm.c	
0x400005a	          0x4839c2	                            cmp rdx, rax	       715	nm.c	FUNCTION_14	ELSE_1	IF_2
0x400005d	            0x7610	                           jbe 0x400006f	       715	nm.c	FUNCTION_14	ELSE_1	IF_2
0x400005f	    0x833d00000000	               cmp dword [0x04000066], 1	       716	nm.c	FUNCTION_14	ELSE_2
0x4000066	            0x19c0	                            sbb eax, eax	       716	nm.c	FUNCTION_14	ELSE_2
0x4000068	          0x83e002	                              and eax, 2	       716	nm.c	FUNCTION_14	ELSE_2
0x400006b	          0x83e801	                              sub eax, 1	       716	nm.c	FUNCTION_14	ELSE_2
0x400006e	              0xc3	                                     ret	       716	nm.c	FUNCTION_14	ELSE_2
0x400006f	        0x4883ec08	                              sub rsp, 8	       709	nm.c	FUNCTION_14
0x4000073	    0x486305000000	         movsxd rax, dword [0x0400007a] 	       718	nm.c	FUNCTION_14
0x400007a	          0x488b36	                    mov rsi, qword [rsi]	       718	nm.c	FUNCTION_14
0x400007d	          0x488b3f	                    mov rdi, qword [rdi]	       718	nm.c	FUNCTION_14
0x4000080	    0xff14c5000000	                      call qword [rax*8]	       718	nm.c	FUNCTION_14
0x4000087	        0x4883c408	                              add rsp, 8	       719	nm.c	
0x400008b	              0xc3	                                     ret	       719	nm.c	
print_archive_filename_posix	ELSE,0:WHILE,0:FOR,0:CALL,0:DO,0:functions,0:IF,0:SWITCH,0	1
0x400008e	            0xf3c3	                                     ret	      1400	nm.c	IF_2	ELSE_2
print_archive_member_sysv	ELSE,2:WHILE,0:FOR,0:CALL,4:DO,0:functions,0:IF,2:SWITCH,0	51
0x40002ae	              0x55	                                push rbp	      1415	nm.c	IF_2	ELSE_2	FUNCTION_31	ELSE_1
0x40002af	              0x53	                                push rbx	      1415	nm.c	IF_2	ELSE_2	FUNCTION_31	ELSE_1
0x40002b0	        0x4883ec08	                              sub rsp, 8	      1415	nm.c	IF_2	ELSE_2	FUNCTION_31	ELSE_1
0x40002b4	          0x4889fb	                            mov rbx, rdi	      1415	nm.c	IF_2	ELSE_2	FUNCTION_31	ELSE_1
0x40002b7	          0x4889f5	                            mov rbp, rsi	      1415	nm.c	IF_2	ELSE_2	FUNCTION_31	ELSE_1
0x40002ba	    0x833d00000000	               cmp dword [0x040002c1], 0	      1416	nm.c	IF_2	ELSE_2	FUNCTION_31	CALL_2
0x40002c1	            0x742e	                            je 0x40002f1	      1416	nm.c	IF_2	ELSE_2	FUNCTION_31	CALL_2
0x40002c3	      0xba05000000	                              mov edx, 5	      1417	nm.c	IF_2	ELSE_2	FUNCTION_31
0x40002c8	      0xbe00000000	                              mov esi, 0	      1417	nm.c	IF_2	ELSE_2	FUNCTION_31
0x40002cd	      0xbf00000000	                              mov edi, 0	      1417	nm.c	IF_2	ELSE_2	FUNCTION_31
0x40002d2	      0xe800000000	                          call 0x40002d7	      1417	nm.c	IF_2	ELSE_2	FUNCTION_31
0x40002d7	          0x4889e9	                            mov rcx, rbp	       104	stdio2.h	CALL_28
0x40002da	          0x4889da	                            mov rdx, rbx	       104	stdio2.h	CALL_28
0x40002dd	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_28
0x40002e0	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x40002e5	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_28
0x40002ea	      0xe800000000	                          call 0x40002ef	       104	stdio2.h	CALL_28
0x40002ef	            0xeb2c	                           jmp 0x400031d	       104	stdio2.h	CALL_28
0x40002f1	      0xba05000000	                              mov edx, 5	      1419	nm.c	ELSE_2	FUNCTION_31
0x40002f6	      0xbe00000000	                              mov esi, 0	      1419	nm.c	ELSE_2	FUNCTION_31
0x40002fb	      0xbf00000000	                              mov edi, 0	      1419	nm.c	ELSE_2	FUNCTION_31
0x4000300	      0xe800000000	                          call 0x4000305	      1419	nm.c	ELSE_2	FUNCTION_31
0x4000305	          0x4889e9	                            mov rcx, rbp	       104	stdio2.h	CALL_28
0x4000308	          0x4889da	                            mov rdx, rbx	       104	stdio2.h	CALL_28
0x400030b	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_28
0x400030e	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x4000313	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_28
0x4000318	      0xe800000000	                          call 0x400031d	       104	stdio2.h	CALL_28
0x400031d	    0x833d00000000	           cmp dword [0x04000324], 0x20 	      1420	nm.c	FUNCTION_31	CALL_4
0x4000324	            0x7528	                           jne 0x400034e	      1420	nm.c	FUNCTION_31	CALL_4
0x4000326	      0xba05000000	                              mov edx, 5	      1421	nm.c	FUNCTION_31
0x400032b	      0xbe00000000	                              mov esi, 0	      1421	nm.c	FUNCTION_31
0x4000330	      0xbf00000000	                              mov edi, 0	      1421	nm.c	FUNCTION_31
0x4000335	      0xe800000000	                          call 0x400033a	      1421	nm.c	FUNCTION_31
0x400033a	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_28
0x400033d	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x4000342	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_28
0x4000347	      0xe800000000	                          call 0x400034c	       104	stdio2.h	CALL_28
0x400034c	            0xeb26	                           jmp 0x4000374	       104	stdio2.h	CALL_28
0x400034e	      0xba05000000	                              mov edx, 5	      1424	nm.c	
0x4000353	      0xbe00000000	                              mov esi, 0	      1424	nm.c	
0x4000358	      0xbf00000000	                              mov edi, 0	      1424	nm.c	
0x400035d	      0xe800000000	                          call 0x4000362	      1424	nm.c	
0x4000362	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_28
0x4000365	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x400036a	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_28
0x400036f	      0xe800000000	                          call 0x4000374	       104	stdio2.h	CALL_28
0x4000374	        0x4883c408	                              add rsp, 8	      1426	nm.c	FUNCTION_32	IF_1
0x4000378	              0x5b	                                 pop rbx	      1426	nm.c	FUNCTION_32	IF_1
0x4000379	              0x5d	                                 pop rbp	      1426	nm.c	FUNCTION_32	IF_1
0x400037a	              0xc3	                                     ret	      1426	nm.c	FUNCTION_32	IF_1
print_object_filename_posix	ELSE,0:WHILE,0:FOR,0:CALL,0:DO,0:functions,0:IF,1:SWITCH,0	12
0x4000129	    0x833d00000000	               cmp dword [0x04000130], 0	      1380	nm.c	IF_2	ELSE_2
0x4000130	            0x7428	                            je 0x400015a	      1380	nm.c	IF_2	ELSE_2
0x4000132	    0x833d00000000	               cmp dword [0x04000139], 0	      1380	nm.c	IF_2	ELSE_2
0x4000139	            0x751f	                           jne 0x400015a	      1380	nm.c	IF_2	ELSE_2
0x400013b	        0x4883ec08	                              sub rsp, 8	      1379	nm.c	IF_2	ELSE_2	FUNCTION_26
0x400013f	          0x4889fa	                            mov rdx, rdi	      1379	nm.c	IF_2	ELSE_2	FUNCTION_26
0x4000142	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_28
0x4000147	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_28
0x400014c	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_28
0x4000151	      0xe800000000	                          call 0x4000156	       104	stdio2.h	CALL_28
0x4000156	        0x4883c408	                              add rsp, 8	      1382	nm.c	IF_2	ELSE_2
0x400015a	            0xf3c3	                                     ret	      1382	nm.c	IF_2	ELSE_2
