bfd_set_default_target	WHILE,0:functions,0:SWITCH,0:CALL,2:IF,2:ELSE,0:DO,0:FOR,0	21
0x4000172	              0x53	                                push rbx	      1424	targets.c	FUNCTION_2
0x4000173	          0x4889fb	                            mov rbx, rdi	      1424	targets.c	FUNCTION_2
0x4000176	    0x488b05000000	            mov rax, qword [0x0400017d] 	      1427	targets.c	FUNCTION_2	IF_1
0x400017d	          0x4885c0	                           test rax, rax	      1427	targets.c	FUNCTION_2	IF_1
0x4000180	            0x7411	                            je 0x4000193	      1427	targets.c	FUNCTION_2	IF_1
0x4000182	          0x488b30	                    mov rsi, qword [rax]	      1428	targets.c	FUNCTION_2	IF_1	CALL_1
0x4000185	      0xe800000000	                          call 0x400018a	      1428	targets.c	FUNCTION_2	IF_1	CALL_1
0x400018a	      0xba01000000	                              mov edx, 1	      1429	targets.c	FUNCTION_2	IF_1
0x400018f	            0x85c0	                           test eax, eax	      1428	targets.c	FUNCTION_2	IF_1	CALL_1
0x4000191	            0x7420	                            je 0x40001b3	      1428	targets.c	FUNCTION_2	IF_1	CALL_1
0x4000193	          0x4889df	                            mov rdi, rbx	      1431	targets.c	FUNCTION_2	CALL_2
0x4000196	      0xe8a5feffff	                    call sym.find_target	      1431	targets.c	FUNCTION_2	CALL_2
0x400019b	          0x4885c0	                           test rax, rax	      1432	targets.c	FUNCTION_2	IF_2
0x400019e	            0x740e	                            je 0x40001ae	      1432	targets.c	FUNCTION_2	IF_2
0x40001a0	    0x488905000000	            mov qword [0x040001a7], rax 	      1435	targets.c	FUNCTION_2
0x40001a7	      0xba01000000	                              mov edx, 1	      1436	targets.c	FUNCTION_2
0x40001ac	            0xeb05	                           jmp 0x40001b3	      1436	targets.c	FUNCTION_2
0x40001ae	      0xba00000000	                              mov edx, 0	      1433	targets.c	FUNCTION_2	IF_2
0x40001b3	            0x89d0	                            mov eax, edx	      1437	targets.c	FUNCTION_2
0x40001b5	              0x5b	                                 pop rbx	      1437	targets.c	FUNCTION_2
0x40001b6	              0xc3	                                     ret	      1437	targets.c	FUNCTION_2
_bfd_find_arch_match	WHILE,1:functions,0:SWITCH,0:CALL,2:IF,2:ELSE,0:DO,0:FOR,0	54
0x40000d6	          0x4885f6	                           test rsi, rsi	      1504	targets.c	FUNCTION_4	IF_1
0x40000d9	            0x747d	                            je 0x4000158	      1504	targets.c	FUNCTION_4	IF_1
0x40000db	            0x4157	                                push r15	      1503	targets.c	FUNCTION_4
0x40000dd	            0x4156	                                push r14	      1503	targets.c	FUNCTION_4
0x40000df	            0x4155	                                push r13	      1503	targets.c	FUNCTION_4
0x40000e1	            0x4154	                                push r12	      1503	targets.c	FUNCTION_4
0x40000e3	              0x55	                                push rbp	      1503	targets.c	FUNCTION_4
0x40000e4	              0x53	                                push rbx	      1503	targets.c	FUNCTION_4
0x40000e5	        0x4883ec08	                              sub rsp, 8	      1503	targets.c	FUNCTION_4
0x40000e9	          0x4989fc	                            mov r12, rdi	      1503	targets.c	FUNCTION_4
0x40000ec	          0x4889f5	                            mov rbp, rsi	      1503	targets.c	FUNCTION_4
0x40000ef	          0x4989d7	                            mov r15, rdx	      1503	targets.c	FUNCTION_4
0x40000f2	          0x488b1e	                    mov rbx, qword [rsi]	      1507	targets.c	FUNCTION_4	WHILE_1
0x40000f5	          0x4885db	                           test rbx, rbx	      1507	targets.c	FUNCTION_4	WHILE_1
0x40000f8	            0x7464	                            je 0x400015e	      1507	targets.c	FUNCTION_4	WHILE_1
0x40000fa	    0x49c7c6ffffff	             mov r14, 0xffffffffffffffff	      1510	targets.c	FUNCTION_4	WHILE_1	CALL_2
0x4000101	    0x41bd00000000	                             mov r13d, 0	      1510	targets.c	FUNCTION_4	WHILE_1	CALL_2
0x4000107	          0x4c89e6	                            mov rsi, r12	      1509	targets.c	FUNCTION_4	WHILE_1	CALL_1
0x400010a	          0x4889df	                            mov rdi, rbx	      1509	targets.c	FUNCTION_4	WHILE_1	CALL_1
0x400010d	      0xe800000000	                          call 0x4000112	      1509	targets.c	FUNCTION_4	WHILE_1	CALL_1
0x4000112	          0x4889c2	                            mov rdx, rax	      1509	targets.c	FUNCTION_4	WHILE_1	CALL_1
0x4000115	          0x4885c0	                           test rax, rax	      1510	targets.c	FUNCTION_4	WHILE_1	CALL_2
0x4000118	            0x742a	                            je 0x4000144	      1510	targets.c	FUNCTION_4	WHILE_1	CALL_2
0x400011a	          0x4c89f1	                            mov rcx, r14	      1510	targets.c	FUNCTION_4	WHILE_1	CALL_2
0x400011d	          0x4c89e7	                            mov rdi, r12	      1510	targets.c	FUNCTION_4	WHILE_1	CALL_2
0x4000120	          0x4489e8	                           mov eax, r13d	      1510	targets.c	FUNCTION_4	WHILE_1	CALL_2
0x4000123	            0xf2ae	              repne scasb al, byte [rdi]	      1510	targets.c	FUNCTION_4	WHILE_1	CALL_2
0x4000125	          0x48f7d1	                                 not rcx	      1510	targets.c	FUNCTION_4	WHILE_1	CALL_2
0x4000128	          0x4839da	                            cmp rdx, rbx	      1512	targets.c	FUNCTION_4	WHILE_1	IF_2
0x400012b	            0x7406	                            je 0x4000133	      1512	targets.c	FUNCTION_4	WHILE_1	IF_2
0x400012d	        0x807aff3a	                cmp byte [rdx - 1], 0x3a	      1512	targets.c	FUNCTION_4	WHILE_1	IF_2
0x4000131	            0x7511	                           jne 0x4000144	      1512	targets.c	FUNCTION_4	WHILE_1	IF_2
0x4000133	      0x807c0aff00	             cmp byte [rdx + rcx - 1], 0	      1513	targets.c	FUNCTION_4	WHILE_1	IF_2
0x4000138	            0x750a	                           jne 0x4000144	      1513	targets.c	FUNCTION_4	WHILE_1	IF_2
0x400013a	          0x49891f	                    mov qword [r15], rbx	      1515	targets.c	FUNCTION_4	WHILE_1	IF_2
0x400013d	      0xb801000000	                              mov eax, 1	      1516	targets.c	FUNCTION_4	WHILE_1	IF_2
0x4000142	            0xeb1f	                           jmp 0x4000163	      1516	targets.c	FUNCTION_4	WHILE_1	IF_2
0x4000144	        0x4883c508	                              add rbp, 8	      1518	targets.c	FUNCTION_4	WHILE_1
0x4000148	        0x488b5d00	                    mov rbx, qword [rbp]	      1507	targets.c	FUNCTION_4	WHILE_1
0x400014c	          0x4885db	                           test rbx, rbx	      1507	targets.c	FUNCTION_4	WHILE_1
0x400014f	            0x75b6	                           jne 0x4000107	      1507	targets.c	FUNCTION_4	WHILE_1
0x4000151	      0xb800000000	                              mov eax, 0	      1520	targets.c	FUNCTION_4
0x4000156	            0xeb0b	                           jmp 0x4000163	      1520	targets.c	FUNCTION_4
0x4000158	      0xb800000000	                              mov eax, 0	      1505	targets.c	FUNCTION_4	IF_1
0x400015d	              0xc3	                                     ret	      1521	targets.c	FUNCTION_4
0x400015e	      0xb800000000	                              mov eax, 0	      1520	targets.c	FUNCTION_4
0x4000163	        0x4883c408	                              add rsp, 8	      1521	targets.c	FUNCTION_4
0x4000167	              0x5b	                                 pop rbx	      1521	targets.c	FUNCTION_4
0x4000168	              0x5d	                                 pop rbp	      1521	targets.c	FUNCTION_4
0x4000169	            0x415c	                                 pop r12	      1521	targets.c	FUNCTION_4
0x400016b	            0x415d	                                 pop r13	      1521	targets.c	FUNCTION_4
0x400016d	            0x415e	                                 pop r14	      1521	targets.c	FUNCTION_4
0x400016f	            0x415f	                                 pop r15	      1521	targets.c	FUNCTION_4
0x4000171	              0xc3	                                     ret	      1521	targets.c	FUNCTION_4
find_target	WHILE,1:functions,0:SWITCH,0:CALL,3:IF,2:ELSE,0:DO,0:FOR,2	47
0x4000040	            0x4154	                                push r12	      1384	targets.c	FUNCTION_1
0x4000042	              0x55	                                push rbp	      1384	targets.c	FUNCTION_1
0x4000043	              0x53	                                push rbx	      1384	targets.c	FUNCTION_1
0x4000044	          0x4989fc	                            mov r12, rdi	      1384	targets.c	FUNCTION_1
0x4000047	    0x488b2d000000	            mov rbp, qword [0x0400004e] 	      1388	targets.c	FUNCTION_1	FOR_1
0x400004e	        0x488b5d00	                    mov rbx, qword [rbp]	      1388	targets.c	FUNCTION_1	FOR_1
0x4000052	          0x4885db	                           test rbx, rbx	      1388	targets.c	FUNCTION_1	FOR_1
0x4000055	            0x7428	                            je 0x400007f	      1388	targets.c	FUNCTION_1	FOR_1
0x4000057	          0x488b33	                    mov rsi, qword [rbx]	      1389	targets.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x400005a	          0x4c89e7	                            mov rdi, r12	      1389	targets.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x400005d	      0xe800000000	                          call 0x4000062	      1389	targets.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000062	            0x85c0	                           test eax, eax	      1389	targets.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000064	            0x7468	                            je 0x40000ce	      1389	targets.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000066	        0x4883c508	                              add rbp, 8	      1388	targets.c	FUNCTION_1	FOR_1
0x400006a	        0x488b5d00	                    mov rbx, qword [rbp]	      1388	targets.c	FUNCTION_1	FOR_1
0x400006e	          0x4885db	                           test rbx, rbx	      1388	targets.c	FUNCTION_1	FOR_1
0x4000071	            0x75e4	                           jne 0x4000057	      1388	targets.c	FUNCTION_1	FOR_1
0x4000073	      0xbf00000000	                              mov edi, 0	      1388	targets.c	FUNCTION_1	FOR_1
0x4000078	      0xbd00000000	                              mov ebp, 0	      1388	targets.c	FUNCTION_1	FOR_1
0x400007d	            0xeb0a	                           jmp 0x4000089	      1388	targets.c	FUNCTION_1	FOR_1
0x400007f	      0xbf00000000	                              mov edi, 0	      1388	targets.c	FUNCTION_1	FOR_1
0x4000084	      0xbd00000000	                              mov ebp, 0	      1388	targets.c	FUNCTION_1	FOR_1
0x4000089	      0xba00000000	                              mov edx, 0	      1397	targets.c	FUNCTION_1	FOR_2	IF_2	CALL_2
0x400008e	          0x4c89e6	                            mov rsi, r12	      1397	targets.c	FUNCTION_1	FOR_2	IF_2	CALL_2
0x4000091	      0xe800000000	                          call 0x4000096	      1397	targets.c	FUNCTION_1	FOR_2	IF_2	CALL_2
0x4000096	            0x85c0	                           test eax, eax	      1397	targets.c	FUNCTION_1	FOR_2	IF_2	CALL_2
0x4000098	            0x7518	                           jne 0x40000b2	      1397	targets.c	FUNCTION_1	FOR_2	IF_2	CALL_2
0x400009a	        0x488b5d08	                mov rbx, qword [rbp + 8]	      1399	targets.c	FUNCTION_1	FOR_2	IF_2	WHILE_1
0x400009e	          0x4885db	                           test rbx, rbx	      1399	targets.c	FUNCTION_1	FOR_2	IF_2	WHILE_1
0x40000a1	            0x752b	                           jne 0x40000ce	      1399	targets.c	FUNCTION_1	FOR_2	IF_2	WHILE_1
0x40000a3	        0x4883c510	                           add rbp, 0x10	      1400	targets.c	FUNCTION_1	FOR_2	IF_2	WHILE_1
0x40000a7	        0x488b5d08	                mov rbx, qword [rbp + 8]	      1399	targets.c	FUNCTION_1	FOR_2	IF_2	WHILE_1
0x40000ab	          0x4885db	                           test rbx, rbx	      1399	targets.c	FUNCTION_1	FOR_2	IF_2	WHILE_1
0x40000ae	            0x74f3	                            je 0x40000a3	      1399	targets.c	FUNCTION_1	FOR_2	IF_2	WHILE_1
0x40000b0	            0xeb1c	                           jmp 0x40000ce	      1399	targets.c	FUNCTION_1	FOR_2	IF_2	WHILE_1
0x40000b2	        0x4883c510	                           add rbp, 0x10	      1395	targets.c	FUNCTION_1	FOR_2
0x40000b6	        0x488b7d00	                    mov rdi, qword [rbp]	      1395	targets.c	FUNCTION_1	FOR_2
0x40000ba	          0x4885ff	                           test rdi, rdi	      1395	targets.c	FUNCTION_1	FOR_2
0x40000bd	            0x75ca	                           jne 0x4000089	      1395	targets.c	FUNCTION_1	FOR_2
0x40000bf	      0xbf02000000	                              mov edi, 2	      1405	targets.c	FUNCTION_1	CALL_3
0x40000c4	      0xe800000000	                          call 0x40000c9	      1405	targets.c	FUNCTION_1	CALL_3
0x40000c9	      0xbb00000000	                              mov ebx, 0	      1406	targets.c	FUNCTION_1
0x40000ce	          0x4889d8	                            mov rax, rbx	      1407	targets.c	FUNCTION_1
0x40000d1	              0x5b	                                 pop rbx	      1407	targets.c	FUNCTION_1
0x40000d2	              0x5d	                                 pop rbp	      1407	targets.c	FUNCTION_1
0x40000d3	            0x415c	                                 pop r12	      1407	targets.c	FUNCTION_1
0x40000d5	              0xc3	                                     ret	      1407	targets.c	FUNCTION_1
bfd_find_target	WHILE,0:functions,0:SWITCH,0:CALL,3:IF,7:ELSE,2:DO,0:FOR,0	41
0x40001b7	              0x53	                                push rbx	      1461	targets.c	FUNCTION_3
0x40001b8	          0x4889f8	                            mov rax, rdi	      1461	targets.c	FUNCTION_3
0x40001bb	          0x4889f3	                            mov rbx, rsi	      1461	targets.c	FUNCTION_3
0x40001be	          0x4885ff	                           test rdi, rdi	      1465	targets.c	FUNCTION_3	IF_1
0x40001c1	            0x750f	                           jne 0x40001d2	      1465	targets.c	FUNCTION_3	IF_1
0x40001c3	      0xbf00000000	                              mov edi, 0	      1468	targets.c	FUNCTION_3	CALL_1
0x40001c8	      0xe800000000	                          call 0x40001cd	      1468	targets.c	FUNCTION_3	CALL_1
0x40001cd	          0x4885c0	                           test rax, rax	      1471	targets.c	FUNCTION_3	IF_2	CALL_2
0x40001d0	            0x7419	                            je 0x40001eb	      1471	targets.c	FUNCTION_3	IF_2	CALL_2
0x40001d2	      0xbf00000000	                              mov edi, 0	      1471	targets.c	FUNCTION_3	IF_2	CALL_2
0x40001d7	      0xb908000000	                              mov ecx, 8	      1471	targets.c	FUNCTION_3	IF_2	CALL_2
0x40001dc	          0x4889c6	                            mov rsi, rax	      1471	targets.c	FUNCTION_3	IF_2	CALL_2
0x40001df	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1471	targets.c	FUNCTION_3	IF_2	CALL_2
0x40001e1	           0xf97c1	                                 seta cl	      1471	targets.c	FUNCTION_3	IF_2	CALL_2
0x40001e4	           0xf92c2	                                 setb dl	      1471	targets.c	FUNCTION_3	IF_2	CALL_2
0x40001e7	            0x38d1	                              cmp cl, dl	      1471	targets.c	FUNCTION_3	IF_2	CALL_2
0x40001e9	            0x7525	                           jne 0x4000210	      1471	targets.c	FUNCTION_3	IF_2	CALL_2
0x40001eb	    0x488b05000000	            mov rax, qword [0x040001f2] 	      1473	targets.c	FUNCTION_3	IF_2	IF_3
0x40001f2	          0x4885c0	                           test rax, rax	      1473	targets.c	FUNCTION_3	IF_2	IF_3
0x40001f5	            0x750a	                           jne 0x4000201	      1473	targets.c	FUNCTION_3	IF_2	IF_3
0x40001f7	    0x488b05000000	            mov rax, qword [0x040001fe] 	      1476	targets.c	FUNCTION_3	IF_2	ELSE_2
0x40001fe	          0x488b00	                    mov rax, qword [rax]	      1476	targets.c	FUNCTION_3	IF_2	ELSE_2
0x4000201	          0x4885db	                           test rbx, rbx	      1477	targets.c	FUNCTION_3	IF_2	ELSE_2	IF_4
0x4000204	            0x7430	                            je 0x4000236	      1477	targets.c	FUNCTION_3	IF_2	ELSE_2	IF_4
0x4000206	        0x48894308	                mov qword [rbx + 8], rax	      1479	targets.c	FUNCTION_3	IF_2	ELSE_2	IF_4
0x400020a	        0x804b4704	                 or byte [rbx + 0x47], 4	      1480	targets.c	FUNCTION_3	IF_2	ELSE_2	IF_4
0x400020e	            0xeb26	                           jmp 0x4000236	      1480	targets.c	FUNCTION_3	IF_2	ELSE_2	IF_4
0x4000210	          0x4885db	                           test rbx, rbx	      1485	targets.c	FUNCTION_3	IF_5
0x4000213	            0x7413	                            je 0x4000228	      1485	targets.c	FUNCTION_3	IF_5
0x4000215	        0x806347fb	             and byte [rbx + 0x47], 0xfb	      1486	targets.c	FUNCTION_3	IF_5
0x4000219	          0x4889c7	                            mov rdi, rax	      1488	targets.c	FUNCTION_3	CALL_3
0x400021c	      0xe81ffeffff	                    call sym.find_target	      1488	targets.c	FUNCTION_3	CALL_3
0x4000221	          0x4885c0	                           test rax, rax	      1489	targets.c	FUNCTION_3	IF_6
0x4000224	            0x750c	                           jne 0x4000232	      1489	targets.c	FUNCTION_3	IF_6
0x4000226	            0xeb0e	                           jmp 0x4000236	      1489	targets.c	FUNCTION_3	IF_6
0x4000228	          0x4889c7	                            mov rdi, rax	      1488	targets.c	FUNCTION_3	CALL_3
0x400022b	      0xe810feffff	                    call sym.find_target	      1488	targets.c	FUNCTION_3	CALL_3
0x4000230	            0xeb04	                           jmp 0x4000236	      1488	targets.c	FUNCTION_3	CALL_3
0x4000232	        0x48894308	                mov qword [rbx + 8], rax	      1493	targets.c	FUNCTION_3	IF_7
0x4000236	              0x5b	                                 pop rbx	      1495	targets.c	FUNCTION_3
0x4000237	              0xc3	                                     ret	      1495	targets.c	FUNCTION_3
bfd_target_list	WHILE,0:functions,0:SWITCH,0:CALL,1:IF,2:ELSE,0:DO,0:FOR,2	41
0x400037d	        0x4883ec08	                              sub rsp, 8	      1629	targets.c	FUNCTION_6
0x4000381	    0x488b05000000	            mov rax, qword [0x04000388] 	      1635	targets.c	FUNCTION_6	FOR_1
0x4000388	        0x48833800	                      cmp qword [rax], 0	      1635	targets.c	FUNCTION_6	FOR_1
0x400038c	            0x7414	                            je 0x40003a2	      1635	targets.c	FUNCTION_6	FOR_1
0x400038e	      0xba00000000	                              mov edx, 0	      1635	targets.c	FUNCTION_6	FOR_1
0x4000393	          0x83c201	                              add edx, 1	      1636	targets.c	FUNCTION_6	FOR_1
0x4000396	        0x4883c008	                              add rax, 8	      1635	targets.c	FUNCTION_6	FOR_1
0x400039a	        0x48833800	                      cmp qword [rax], 0	      1635	targets.c	FUNCTION_6	FOR_1
0x400039e	            0x75f3	                           jne 0x4000393	      1635	targets.c	FUNCTION_6	FOR_1
0x40003a0	            0xeb05	                           jmp 0x40003a7	      1635	targets.c	FUNCTION_6	FOR_1
0x40003a2	      0xba00000000	                              mov edx, 0	      1630	targets.c	FUNCTION_6
0x40003a7	          0x8d7a01	                      lea edi, [rdx + 1]	      1639	targets.c	FUNCTION_6	CALL_1
0x40003aa	          0x4863ff	                         movsxd rdi, edi	      1639	targets.c	FUNCTION_6	CALL_1
0x40003ad	        0x48c1e703	                              shl rdi, 3	      1639	targets.c	FUNCTION_6	CALL_1
0x40003b1	      0xe800000000	                          call 0x40003b6	      1639	targets.c	FUNCTION_6	CALL_1
0x40003b6	          0x4885c0	                           test rax, rax	      1641	targets.c	FUNCTION_6	IF_1
0x40003b9	            0x7447	                            je 0x4000402	      1641	targets.c	FUNCTION_6	IF_1
0x40003bb	    0x488b15000000	            mov rdx, qword [0x040003c2] 	      1644	targets.c	FUNCTION_6	FOR_2
0x40003c2	          0x488b0a	                    mov rcx, qword [rdx]	      1644	targets.c	FUNCTION_6	FOR_2
0x40003c5	          0x4885c9	                           test rcx, rcx	      1644	targets.c	FUNCTION_6	FOR_2
0x40003c8	            0x742c	                            je 0x40003f6	      1644	targets.c	FUNCTION_6	FOR_2
0x40003ca	          0x4889c7	                            mov rdi, rax	      1644	targets.c	FUNCTION_6	FOR_2
0x40003cd	    0x488b35000000	            mov rsi, qword [0x040003d4] 	      1645	targets.c	FUNCTION_6	FOR_2	IF_2
0x40003d4	          0x4839d6	                            cmp rsi, rdx	      1645	targets.c	FUNCTION_6	FOR_2	IF_2
0x40003d7	            0x7405	                            je 0x40003de	      1645	targets.c	FUNCTION_6	FOR_2	IF_2
0x40003d9	          0x48390e	                    cmp qword [rsi], rcx	      1646	targets.c	FUNCTION_6	FOR_2	IF_2
0x40003dc	            0x740a	                            je 0x40003e8	      1646	targets.c	FUNCTION_6	FOR_2	IF_2
0x40003de	          0x488b09	                    mov rcx, qword [rcx]	      1647	targets.c	FUNCTION_6	FOR_2	IF_2
0x40003e1	          0x48890f	                    mov qword [rdi], rcx	      1647	targets.c	FUNCTION_6	FOR_2	IF_2
0x40003e4	        0x488d7f08	                      lea rdi, [rdi + 8]	      1647	targets.c	FUNCTION_6	FOR_2	IF_2
0x40003e8	        0x4883c208	                              add rdx, 8	      1644	targets.c	FUNCTION_6	FOR_2
0x40003ec	          0x488b0a	                    mov rcx, qword [rdx]	      1644	targets.c	FUNCTION_6	FOR_2
0x40003ef	          0x4885c9	                           test rcx, rcx	      1644	targets.c	FUNCTION_6	FOR_2
0x40003f2	            0x75d9	                           jne 0x40003cd	      1644	targets.c	FUNCTION_6	FOR_2
0x40003f4	            0xeb03	                           jmp 0x40003f9	      1644	targets.c	FUNCTION_6	FOR_2
0x40003f6	          0x4889c7	                            mov rdi, rax	      1639	targets.c	FUNCTION_6	CALL_1
0x40003f9	    0x48c707000000	                      mov qword [rdi], 0	      1649	targets.c	FUNCTION_6
0x4000400	            0xeb05	                           jmp 0x4000407	      1650	targets.c	FUNCTION_6
0x4000402	      0xb800000000	                              mov eax, 0	      1642	targets.c	FUNCTION_6	IF_1
0x4000407	        0x4883c408	                              add rsp, 8	      1651	targets.c	FUNCTION_6
0x400040b	              0xc3	                                     ret	      1651	targets.c	FUNCTION_6
bfd_get_target_info	WHILE,1:functions,0:SWITCH,0:CALL,9:IF,12:ELSE,1:DO,0:FOR,0	96
0x4000238	            0x4155	                                push r13	      1556	targets.c	FUNCTION_5
0x400023a	            0x4154	                                push r12	      1556	targets.c	FUNCTION_5
0x400023c	              0x55	                                push rbp	      1556	targets.c	FUNCTION_5
0x400023d	              0x53	                                push rbx	      1556	targets.c	FUNCTION_5
0x400023e	        0x4883ec48	                           sub rsp, 0x48	      1556	targets.c	FUNCTION_5
0x4000242	          0x4989d5	                            mov r13, rdx	      1556	targets.c	FUNCTION_5
0x4000245	          0x4989cc	                            mov r12, rcx	      1556	targets.c	FUNCTION_5
0x4000248	          0x4c89c5	                             mov rbp, r8	      1556	targets.c	FUNCTION_5
0x400024b	    0x64488b042528	                mov rax, qword fs:[0x28]	      1556	targets.c	FUNCTION_5
0x4000254	      0x4889442438	             mov qword [rsp + 0x38], rax	      1556	targets.c	FUNCTION_5
0x4000259	            0x31c0	                            xor eax, eax	      1556	targets.c	FUNCTION_5
0x400025b	          0x4885d2	                           test rdx, rdx	      1559	targets.c	FUNCTION_5	IF_1
0x400025e	            0x7406	                            je 0x4000266	      1559	targets.c	FUNCTION_5	IF_1
0x4000260	    0xc70200000000	                      mov dword [rdx], 0	      1560	targets.c	FUNCTION_5	IF_1
0x4000266	          0x4d85e4	                           test r12, r12	      1561	targets.c	FUNCTION_5	IF_2
0x4000269	            0x7408	                            je 0x4000273	      1561	targets.c	FUNCTION_5	IF_2
0x400026b	    0x41c70424ffff	            mov dword [r12], 0xffffffff 	      1562	targets.c	FUNCTION_5	IF_2
0x4000273	          0x4885ed	                           test rbp, rbp	      1563	targets.c	FUNCTION_5	IF_3
0x4000276	            0x7408	                            je 0x4000280	      1563	targets.c	FUNCTION_5	IF_3
0x4000278	    0x48c745000000	                      mov qword [rbp], 0	      1564	targets.c	FUNCTION_5	IF_3
0x4000280	      0xe800000000	                          call 0x4000285	      1565	targets.c	FUNCTION_5	CALL_1
0x4000285	          0x4889c3	                            mov rbx, rax	      1565	targets.c	FUNCTION_5	CALL_1
0x4000288	          0x4885c0	                           test rax, rax	      1566	targets.c	FUNCTION_5	IF_4
0x400028b	     0xf84c7000000	                            je 0x4000358	      1566	targets.c	FUNCTION_5	IF_4
0x4000291	          0x4d85ed	                           test r13, r13	      1568	targets.c	FUNCTION_5	IF_5
0x4000294	            0x740e	                            je 0x40002a4	      1568	targets.c	FUNCTION_5	IF_5
0x4000296	        0x83780c00	                cmp dword [rax + 0xc], 0	      1569	targets.c	FUNCTION_5	IF_5
0x400029a	           0xf94c0	                                 sete al	      1569	targets.c	FUNCTION_5	IF_5
0x400029d	           0xfb6c0	                           movzx eax, al	      1569	targets.c	FUNCTION_5	IF_5
0x40002a0	        0x41894500	                    mov dword [r13], eax	      1569	targets.c	FUNCTION_5	IF_5
0x40002a4	          0x4d85e4	                           test r12, r12	      1571	targets.c	FUNCTION_5	IF_6
0x40002a7	            0x7408	                            je 0x40002b1	      1571	targets.c	FUNCTION_5	IF_6
0x40002a9	         0xfb6431c	           movzx eax, byte [rbx + 0x1c] 	      1572	targets.c	FUNCTION_5	IF_6
0x40002ad	        0x41890424	                    mov dword [r12], eax	      1572	targets.c	FUNCTION_5	IF_6
0x40002b1	          0x4889d8	                            mov rax, rbx	      1610	targets.c	FUNCTION_5
0x40002b4	          0x4885ed	                           test rbp, rbp	      1574	targets.c	FUNCTION_5	IF_7
0x40002b7	     0xf84a0000000	                            je 0x400035d	      1574	targets.c	FUNCTION_5	IF_7
0x40002bd	          0x4c8b2b	                    mov r13, qword [rbx]	      1576	targets.c	FUNCTION_5	IF_7
0x40002c0	      0xe800000000	                          call 0x40002c5	      1577	targets.c	FUNCTION_5	IF_7	CALL_2
0x40002c5	          0x4989c4	                            mov r12, rax	      1577	targets.c	FUNCTION_5	IF_7	CALL_2
0x40002c8	          0x4885c0	                           test rax, rax	      1579	targets.c	FUNCTION_5	IF_7	IF_8
0x40002cb	            0x7476	                            je 0x4000343	      1579	targets.c	FUNCTION_5	IF_7	IF_8
0x40002cd	          0x4d85ed	                           test r13, r13	      1579	targets.c	FUNCTION_5	IF_7	IF_8
0x40002d0	            0x7471	                            je 0x4000343	      1579	targets.c	FUNCTION_5	IF_7	IF_8
0x40002d2	      0xbe2d000000	                           mov esi, 0x2d	      1581	targets.c	FUNCTION_5	IF_7	IF_8	CALL_3
0x40002d7	          0x4c89ef	                            mov rdi, r13	      1581	targets.c	FUNCTION_5	IF_7	IF_8	CALL_3
0x40002da	      0xe800000000	                          call 0x40002df	      1581	targets.c	FUNCTION_5	IF_7	IF_8	CALL_3
0x40002df	          0x4885c0	                           test rax, rax	      1583	targets.c	FUNCTION_5	IF_7	IF_8	IF_9
0x40002e2	            0x7451	                            je 0x4000335	      1583	targets.c	FUNCTION_5	IF_7	IF_8	IF_9
0x40002e4	        0x4c8d6801	                      lea r13, [rax + 1]	      1585	targets.c	FUNCTION_5	IF_7	IF_8	IF_9
0x40002e8	          0x4889ea	                            mov rdx, rbp	      1589	targets.c	FUNCTION_5	IF_7	IF_8	IF_9	IF_10	CALL_4
0x40002eb	          0x4c89e6	                            mov rsi, r12	      1589	targets.c	FUNCTION_5	IF_7	IF_8	IF_9	IF_10	CALL_4
0x40002ee	          0x4c89ef	                            mov rdi, r13	      1589	targets.c	FUNCTION_5	IF_7	IF_8	IF_9	IF_10	CALL_4
0x40002f1	      0xe8e0fdffff	           call sym._bfd_find_arch_match	      1589	targets.c	FUNCTION_5	IF_7	IF_8	IF_9	IF_10	CALL_4
0x40002f6	            0x85c0	                           test eax, eax	      1589	targets.c	FUNCTION_5	IF_7	IF_8	IF_9	IF_10	CALL_4
0x40002f8	            0x7549	                           jne 0x4000343	      1589	targets.c	FUNCTION_5	IF_7	IF_8	IF_9	IF_10	CALL_4
0x40002fa	      0xba32000000	                           mov edx, 0x32	       110	string3.h	FUNCTION_15	CALL_3
0x40002ff	          0x4c89ee	                            mov rsi, r13	       110	string3.h	FUNCTION_15	CALL_3
0x4000302	          0x4889e7	                            mov rdi, rsp	       110	string3.h	FUNCTION_15	CALL_3
0x4000305	      0xe800000000	                          call 0x400030a	       110	string3.h	FUNCTION_15	CALL_3
0x400030a	            0xeb15	                           jmp 0x4000321	       110	string3.h	FUNCTION_15	CALL_3
0x400030c	          0xc60000	                       mov byte [rax], 0	      1596	targets.c	FUNCTION_5	IF_7	IF_8	IF_9	IF_10	WHILE_1
0x400030f	          0x4889ea	                            mov rdx, rbp	      1597	targets.c	FUNCTION_5	IF_7	IF_8	IF_9	IF_10	WHILE_1	IF_11	CALL_7
0x4000312	          0x4c89e6	                            mov rsi, r12	      1597	targets.c	FUNCTION_5	IF_7	IF_8	IF_9	IF_10	WHILE_1	IF_11	CALL_7
0x4000315	          0x4889e7	                            mov rdi, rsp	      1597	targets.c	FUNCTION_5	IF_7	IF_8	IF_9	IF_10	WHILE_1	IF_11	CALL_7
0x4000318	      0xe8b9fdffff	           call sym._bfd_find_arch_match	      1597	targets.c	FUNCTION_5	IF_7	IF_8	IF_9	IF_10	WHILE_1	IF_11	CALL_7
0x400031d	            0x85c0	                           test eax, eax	      1597	targets.c	FUNCTION_5	IF_7	IF_8	IF_9	IF_10	WHILE_1	IF_11	CALL_7
0x400031f	            0x7522	                           jne 0x4000343	      1597	targets.c	FUNCTION_5	IF_7	IF_8	IF_9	IF_10	WHILE_1	IF_11	CALL_7
0x4000321	      0xbe2d000000	                           mov esi, 0x2d	      1594	targets.c	FUNCTION_5	IF_7	IF_8	IF_9	IF_10	WHILE_1	CALL_6
0x4000326	          0x4889e7	                            mov rdi, rsp	      1594	targets.c	FUNCTION_5	IF_7	IF_8	IF_9	IF_10	WHILE_1	CALL_6
0x4000329	      0xe800000000	                          call 0x400032e	      1594	targets.c	FUNCTION_5	IF_7	IF_8	IF_9	IF_10	WHILE_1	CALL_6
0x400032e	          0x4885c0	                           test rax, rax	      1594	targets.c	FUNCTION_5	IF_7	IF_8	IF_9	IF_10	WHILE_1	CALL_6
0x4000331	            0x75d9	                           jne 0x400030c	      1594	targets.c	FUNCTION_5	IF_7	IF_8	IF_9	IF_10	WHILE_1	CALL_6
0x4000333	            0xeb0e	                           jmp 0x4000343	      1594	targets.c	FUNCTION_5	IF_7	IF_8	IF_9	IF_10	WHILE_1	CALL_6
0x4000335	          0x4889ea	                            mov rdx, rbp	      1604	targets.c	FUNCTION_5	IF_7	IF_8	CALL_8
0x4000338	          0x4c89e6	                            mov rsi, r12	      1604	targets.c	FUNCTION_5	IF_7	IF_8	CALL_8
0x400033b	          0x4c89ef	                            mov rdi, r13	      1604	targets.c	FUNCTION_5	IF_7	IF_8	CALL_8
0x400033e	      0xe893fdffff	           call sym._bfd_find_arch_match	      1604	targets.c	FUNCTION_5	IF_7	IF_8	CALL_8
0x4000343	          0x4889d8	                            mov rax, rbx	      1610	targets.c	FUNCTION_5
0x4000346	          0x4d85e4	                           test r12, r12	      1607	targets.c	FUNCTION_5	IF_7	IF_12
0x4000349	            0x7412	                            je 0x400035d	      1607	targets.c	FUNCTION_5	IF_7	IF_12
0x400034b	          0x4c89e7	                            mov rdi, r12	      1608	targets.c	FUNCTION_5	IF_7	CALL_9
0x400034e	      0xe800000000	                          call 0x4000353	      1608	targets.c	FUNCTION_5	IF_7	CALL_9
0x4000353	          0x4889d8	                            mov rax, rbx	      1610	targets.c	FUNCTION_5
0x4000356	            0xeb05	                           jmp 0x400035d	      1610	targets.c	FUNCTION_5
0x4000358	      0xb800000000	                              mov eax, 0	      1567	targets.c	FUNCTION_5	IF_4
0x400035d	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	      1611	targets.c	FUNCTION_5
0x4000362	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1611	targets.c	FUNCTION_5
0x400036b	            0x7405	                            je 0x4000372	      1611	targets.c	FUNCTION_5
0x400036d	      0xe800000000	                          call 0x4000372	      1611	targets.c	FUNCTION_5
0x4000372	        0x4883c448	                           add rsp, 0x48	      1611	targets.c	FUNCTION_5
0x4000376	              0x5b	                                 pop rbx	      1611	targets.c	FUNCTION_5
0x4000377	              0x5d	                                 pop rbp	      1611	targets.c	FUNCTION_5
0x4000378	            0x415c	                                 pop r12	      1611	targets.c	FUNCTION_5
0x400037a	            0x415d	                                 pop r13	      1611	targets.c	FUNCTION_5
0x400037c	              0xc3	                                     ret	      1611	targets.c	FUNCTION_5
bfd_flavour_name	WHILE,0:functions,0:SWITCH,1:CALL,1:IF,0:ELSE,0:DO,0:FOR,0	51
0x4000448	          0x83ff14	                           cmp edi, 0x14	      1696	targets.c	FUNCTION_8	SWITCH_1
0x400044b	            0x777b	                            ja 0x40004c8	      1696	targets.c	FUNCTION_8	SWITCH_1
0x400044d	            0x89ff	                            mov edi, edi	      1696	targets.c	FUNCTION_8	SWITCH_1
0x400044f	    0xff24fd000000	                       jmp qword [rdi*8]	      1696	targets.c	FUNCTION_8	SWITCH_1
0x4000456	      0xb800000000	                              mov eax, 0	      1699	targets.c	FUNCTION_8	SWITCH_1
0x400045b	              0xc3	                                     ret	      1699	targets.c	FUNCTION_8	SWITCH_1
0x400045c	      0xb800000000	                              mov eax, 0	      1701	targets.c	FUNCTION_8	SWITCH_1
0x4000461	              0xc3	                                     ret	      1701	targets.c	FUNCTION_8	SWITCH_1
0x4000462	      0xb800000000	                              mov eax, 0	      1702	targets.c	FUNCTION_8	SWITCH_1
0x4000467	              0xc3	                                     ret	      1702	targets.c	FUNCTION_8	SWITCH_1
0x4000468	      0xb800000000	                              mov eax, 0	      1703	targets.c	FUNCTION_8	SWITCH_1
0x400046d	              0xc3	                                     ret	      1703	targets.c	FUNCTION_8	SWITCH_1
0x400046e	      0xb800000000	                              mov eax, 0	      1704	targets.c	FUNCTION_8	SWITCH_1
0x4000473	              0xc3	                                     ret	      1704	targets.c	FUNCTION_8	SWITCH_1
0x4000474	      0xb800000000	                              mov eax, 0	      1705	targets.c	FUNCTION_8	SWITCH_1
0x4000479	              0xc3	                                     ret	      1705	targets.c	FUNCTION_8	SWITCH_1
0x400047a	      0xb800000000	                              mov eax, 0	      1706	targets.c	FUNCTION_8	SWITCH_1
0x400047f	              0xc3	                                     ret	      1706	targets.c	FUNCTION_8	SWITCH_1
0x4000480	      0xb800000000	                              mov eax, 0	      1707	targets.c	FUNCTION_8	SWITCH_1
0x4000485	              0xc3	                                     ret	      1707	targets.c	FUNCTION_8	SWITCH_1
0x4000486	      0xb800000000	                              mov eax, 0	      1708	targets.c	FUNCTION_8	SWITCH_1
0x400048b	              0xc3	                                     ret	      1708	targets.c	FUNCTION_8	SWITCH_1
0x400048c	      0xb800000000	                              mov eax, 0	      1709	targets.c	FUNCTION_8	SWITCH_1
0x4000491	              0xc3	                                     ret	      1709	targets.c	FUNCTION_8	SWITCH_1
0x4000492	      0xb800000000	                              mov eax, 0	      1710	targets.c	FUNCTION_8	SWITCH_1
0x4000497	              0xc3	                                     ret	      1710	targets.c	FUNCTION_8	SWITCH_1
0x4000498	      0xb800000000	                              mov eax, 0	      1711	targets.c	FUNCTION_8	SWITCH_1
0x400049d	              0xc3	                                     ret	      1711	targets.c	FUNCTION_8	SWITCH_1
0x400049e	      0xb800000000	                              mov eax, 0	      1712	targets.c	FUNCTION_8	SWITCH_1
0x40004a3	              0xc3	                                     ret	      1712	targets.c	FUNCTION_8	SWITCH_1
0x40004a4	      0xb800000000	                              mov eax, 0	      1713	targets.c	FUNCTION_8	SWITCH_1
0x40004a9	              0xc3	                                     ret	      1713	targets.c	FUNCTION_8	SWITCH_1
0x40004aa	      0xb800000000	                              mov eax, 0	      1714	targets.c	FUNCTION_8	SWITCH_1
0x40004af	              0xc3	                                     ret	      1714	targets.c	FUNCTION_8	SWITCH_1
0x40004b0	      0xb800000000	                              mov eax, 0	      1715	targets.c	FUNCTION_8	SWITCH_1
0x40004b5	              0xc3	                                     ret	      1715	targets.c	FUNCTION_8	SWITCH_1
0x40004b6	      0xb800000000	                              mov eax, 0	      1716	targets.c	FUNCTION_8	SWITCH_1
0x40004bb	              0xc3	                                     ret	      1716	targets.c	FUNCTION_8	SWITCH_1
0x40004bc	      0xb800000000	                              mov eax, 0	      1717	targets.c	FUNCTION_8	SWITCH_1
0x40004c1	              0xc3	                                     ret	      1717	targets.c	FUNCTION_8	SWITCH_1
0x40004c2	      0xb800000000	                              mov eax, 0	      1718	targets.c	FUNCTION_8	SWITCH_1
0x40004c7	              0xc3	                                     ret	      1718	targets.c	FUNCTION_8	SWITCH_1
0x40004c8	        0x4883ec08	                              sub rsp, 8	      1695	targets.c	FUNCTION_8
0x40004cc	      0xba00000000	                              mov edx, 0	      1723	targets.c	FUNCTION_8	CALL_1
0x40004d1	      0xbebb060000	                          mov esi, 0x6bb	      1723	targets.c	FUNCTION_8	CALL_1
0x40004d6	      0xbf00000000	                              mov edi, 0	      1723	targets.c	FUNCTION_8	CALL_1
0x40004db	      0xe800000000	                          call 0x40004e0	      1723	targets.c	FUNCTION_8	CALL_1
0x40004e0	      0xb800000000	                              mov eax, 0	      1698	targets.c	FUNCTION_8	SWITCH_1
0x40004e5	              0xc3	                                     ret	      1698	targets.c	FUNCTION_8	SWITCH_1
0x40004e6	      0xb800000000	                              mov eax, 0	      1700	targets.c	FUNCTION_8	SWITCH_1
0x40004eb	              0xc3	                                     ret	      1724	targets.c	FUNCTION_8
bfd_iterate_over_targets	WHILE,0:functions,0:SWITCH,0:CALL,1:IF,1:ELSE,0:DO,0:FOR,1	24
0x400040c	            0x4154	                                push r12	      1672	targets.c	FUNCTION_7
0x400040e	              0x55	                                push rbp	      1672	targets.c	FUNCTION_7
0x400040f	              0x53	                                push rbx	      1672	targets.c	FUNCTION_7
0x4000410	          0x4989fc	                            mov r12, rdi	      1672	targets.c	FUNCTION_7
0x4000413	          0x4889f5	                            mov rbp, rsi	      1672	targets.c	FUNCTION_7
0x4000416	    0x488b1d000000	            mov rbx, qword [0x0400041d] 	      1675	targets.c	FUNCTION_7	FOR_1
0x400041d	          0x488b3b	                    mov rdi, qword [rbx]	      1675	targets.c	FUNCTION_7	FOR_1
0x4000420	          0x4885ff	                           test rdi, rdi	      1675	targets.c	FUNCTION_7	FOR_1
0x4000423	            0x741b	                            je 0x4000440	      1675	targets.c	FUNCTION_7	FOR_1
0x4000425	          0x4889ee	                            mov rsi, rbp	      1676	targets.c	FUNCTION_7	FOR_1	IF_1	CALL_1
0x4000428	          0x41ffd4	                                call r12	      1676	targets.c	FUNCTION_7	FOR_1	IF_1	CALL_1
0x400042b	            0x85c0	                           test eax, eax	      1676	targets.c	FUNCTION_7	FOR_1	IF_1	CALL_1
0x400042d	            0x7405	                            je 0x4000434	      1676	targets.c	FUNCTION_7	FOR_1	IF_1	CALL_1
0x400042f	          0x488b3b	                    mov rdi, qword [rbx]	      1677	targets.c	FUNCTION_7	FOR_1	IF_1
0x4000432	            0xeb0c	                           jmp 0x4000440	      1677	targets.c	FUNCTION_7	FOR_1	IF_1
0x4000434	        0x4883c308	                              add rbx, 8	      1675	targets.c	FUNCTION_7	FOR_1
0x4000438	          0x488b3b	                    mov rdi, qword [rbx]	      1675	targets.c	FUNCTION_7	FOR_1
0x400043b	          0x4885ff	                           test rdi, rdi	      1675	targets.c	FUNCTION_7	FOR_1
0x400043e	            0x75e5	                           jne 0x4000425	      1675	targets.c	FUNCTION_7	FOR_1
0x4000440	          0x4889f8	                            mov rax, rdi	      1680	targets.c	FUNCTION_7
0x4000443	              0x5b	                                 pop rbx	      1680	targets.c	FUNCTION_7
0x4000444	              0x5d	                                 pop rbp	      1680	targets.c	FUNCTION_7
0x4000445	            0x415c	                                 pop r12	      1680	targets.c	FUNCTION_7
0x4000447	              0xc3	                                     ret	      1680	targets.c	FUNCTION_7
