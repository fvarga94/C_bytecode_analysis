parse_die	FOR,0:IF,15:ELSE,2:DO,0:SWITCH,1:CALL,11:WHILE,1:functions,0	150
0x4000040	            0x4157	                                push r15	       185	dwarf1.c	FUNCTION_3
0x4000042	            0x4156	                                push r14	       185	dwarf1.c	FUNCTION_3
0x4000044	            0x4155	                                push r13	       185	dwarf1.c	FUNCTION_3
0x4000046	            0x4154	                                push r12	       185	dwarf1.c	FUNCTION_3
0x4000048	              0x55	                                push rbp	       185	dwarf1.c	FUNCTION_3
0x4000049	              0x53	                                push rbx	       185	dwarf1.c	FUNCTION_3
0x400004a	        0x4883ec08	                              sub rsp, 8	       185	dwarf1.c	FUNCTION_3
0x400004e	          0x4989fd	                            mov r13, rdi	       185	dwarf1.c	FUNCTION_3
0x4000051	          0x4989cf	                            mov r15, rcx	       185	dwarf1.c	FUNCTION_3
0x4000054	    0x48c706000000	                      mov qword [rsi], 0	        90	string3.h	FUNCTION_11	CALL_6
0x400005b	    0x48c746300000	               mov qword [rsi + 0x30], 0	        90	string3.h	FUNCTION_11	CALL_6
0x4000063	        0x488d7e08	                      lea rdi, [rsi + 8]	        90	string3.h	FUNCTION_11	CALL_6
0x4000067	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_11	CALL_6
0x400006b	          0x4889f1	                            mov rcx, rsi	        90	string3.h	FUNCTION_11	CALL_6
0x400006e	          0x4829f9	                            sub rcx, rdi	        90	string3.h	FUNCTION_11	CALL_6
0x4000071	          0x83c138	                           add ecx, 0x38	        90	string3.h	FUNCTION_11	CALL_6
0x4000074	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_11	CALL_6
0x4000077	            0x89c9	                            mov ecx, ecx	        90	string3.h	FUNCTION_11	CALL_6
0x4000079	      0xb800000000	                              mov eax, 0	        90	string3.h	FUNCTION_11	CALL_6
0x400007e	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_11	CALL_6
0x4000081	        0x4c8d6204	                      lea r12, [rdx + 4]	       192	dwarf1.c	FUNCTION_3	IF_1
0x4000085	          0x4d39fc	                            cmp r12, r15	       192	dwarf1.c	FUNCTION_3	IF_1
0x4000088	     0xf87b6010000	                            ja 0x4000244	       192	dwarf1.c	FUNCTION_3	IF_1
0x400008e	          0x4889d3	                            mov rbx, rdx	       192	dwarf1.c	FUNCTION_3	IF_1
0x4000091	          0x4889f5	                            mov rbp, rsi	       192	dwarf1.c	FUNCTION_3	IF_1
0x4000094	        0x498b4508	                mov rax, qword [r13 + 8]	       194	dwarf1.c	FUNCTION_3	CALL_2
0x4000098	          0x4889d7	                            mov rdi, rdx	       194	dwarf1.c	FUNCTION_3	CALL_2
0x400009b	          0xff5038	                 call qword [rax + 0x38]	       194	dwarf1.c	FUNCTION_3	CALL_2
0x400009e	          0x4889c2	                            mov rdx, rax	       194	dwarf1.c	FUNCTION_3	CALL_2
0x40000a1	        0x48894500	                    mov qword [rbp], rax	       194	dwarf1.c	FUNCTION_3	CALL_2
0x40000a5	      0xb800000000	                              mov eax, 0	       198	dwarf1.c	FUNCTION_3	IF_2
0x40000aa	          0x4885d2	                           test rdx, rdx	       196	dwarf1.c	FUNCTION_3	IF_2
0x40000ad	     0xf8491010000	                            je 0x4000244	       196	dwarf1.c	FUNCTION_3	IF_2
0x40000b3	        0x4c8d3413	                    lea r14, [rbx + rdx]	       197	dwarf1.c	FUNCTION_3	IF_2
0x40000b7	          0x4d39f7	                            cmp r15, r14	       197	dwarf1.c	FUNCTION_3	IF_2
0x40000ba	     0xf8284010000	                            jb 0x4000244	       197	dwarf1.c	FUNCTION_3	IF_2
0x40000c0	        0x4883fa05	                              cmp rdx, 5	       200	dwarf1.c	FUNCTION_3	IF_3
0x40000c4	            0x7710	                            ja 0x40000d6	       200	dwarf1.c	FUNCTION_3	IF_3
0x40000c6	    0x66c745340000	                mov word [rbp + 0x34], 0	       203	dwarf1.c	FUNCTION_3	IF_3
0x40000cc	      0xb801000000	                              mov eax, 1	       204	dwarf1.c	FUNCTION_3	IF_3
0x40000d1	      0xe96e010000	                           jmp 0x4000244	       204	dwarf1.c	FUNCTION_3	IF_3
0x40000d6	        0x4883c306	                              add rbx, 6	       208	dwarf1.c	FUNCTION_3	IF_4
0x40000da	      0xb800000000	                              mov eax, 0	       209	dwarf1.c	FUNCTION_3	IF_4
0x40000df	          0x4939de	                            cmp r14, rbx	       208	dwarf1.c	FUNCTION_3	IF_4
0x40000e2	     0xf825c010000	                            jb 0x4000244	       208	dwarf1.c	FUNCTION_3	IF_4
0x40000e8	        0x498b4508	                mov rax, qword [r13 + 8]	       210	dwarf1.c	FUNCTION_3	CALL_3
0x40000ec	          0x4c89e7	                            mov rdi, r12	       210	dwarf1.c	FUNCTION_3	CALL_3
0x40000ef	          0xff5050	                 call qword [rax + 0x50]	       210	dwarf1.c	FUNCTION_3	CALL_3
0x40000f2	        0x66894534	               mov word [rbp + 0x34], ax	       210	dwarf1.c	FUNCTION_3	CALL_3
0x40000f6	      0xe929010000	                           jmp 0x4000224	       214	dwarf1.c	FUNCTION_3	WHILE_1
0x40000fb	        0x498b4508	                mov rax, qword [r13 + 8]	       222	dwarf1.c	FUNCTION_3	WHILE_1	CALL_4
0x40000ff	          0x4889df	                            mov rdi, rbx	       222	dwarf1.c	FUNCTION_3	WHILE_1	CALL_4
0x4000102	          0xff5050	                 call qword [rax + 0x50]	       222	dwarf1.c	FUNCTION_3	WHILE_1	CALL_4
0x4000105	            0x89c2	                            mov edx, eax	       225	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x4000107	          0x83e20f	                            and edx, 0xf	       225	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x400010a	        0x6683fa08	                               cmp dx, 8	       225	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x400010e	     0xf870d010000	                            ja 0x4000221	       225	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x4000114	           0xfb7d2	                           movzx edx, dx	       225	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x4000117	    0xff24d5000000	                       jmp qword [rdx*8]	       225	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x400011e	        0x4883c304	                              add rbx, 4	       228	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x4000122	      0xe9fd000000	                           jmp 0x4000224	       229	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x4000127	        0x4883c306	                              add rbx, 6	       232	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5
0x400012b	          0x4939de	                            cmp r14, rbx	       232	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5
0x400012e	     0xf82f0000000	                            jb 0x4000224	       232	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5
0x4000134	        0x6683f812	                            cmp ax, 0x12	       234	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	IF_6
0x4000138	            0x7513	                           jne 0x400014d	       234	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	IF_6
0x400013a	        0x498b4508	                mov rax, qword [r13 + 8]	       235	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	CALL_5
0x400013e	          0x4c89e7	                            mov rdi, r12	       235	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	CALL_5
0x4000141	          0xff5038	                 call qword [rax + 0x38]	       235	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	CALL_5
0x4000144	        0x48894508	                mov qword [rbp + 8], rax	       235	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	CALL_5
0x4000148	      0xe9d7000000	                           jmp 0x4000224	       235	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	CALL_5
0x400014d	        0x663d0601	                           cmp ax, 0x106	       236	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	ELSE_1	IF_7
0x4000151	     0xf85cd000000	                           jne 0x4000224	       236	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	ELSE_1	IF_7
0x4000157	        0x498b4508	                mov rax, qword [r13 + 8]	       238	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	ELSE_1	IF_7	CALL_6
0x400015b	          0x4c89e7	                            mov rdi, r12	       238	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	ELSE_1	IF_7	CALL_6
0x400015e	          0xff5038	                 call qword [rax + 0x38]	       238	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	ELSE_1	IF_7	CALL_6
0x4000161	        0x48894520	            mov qword [rbp + 0x20], rax 	       238	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	ELSE_1	IF_7	CALL_6
0x4000165	    0xc74530010000	               mov dword [rbp + 0x30], 1	       239	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	ELSE_1	IF_7
0x400016c	      0xe9b3000000	                           jmp 0x4000224	       239	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_5	ELSE_1	IF_7
0x4000171	        0x4883c30a	                            add rbx, 0xa	       245	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x4000175	      0xe9aa000000	                           jmp 0x4000224	       246	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x400017a	        0x4883c306	                              add rbx, 6	       248	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8
0x400017e	          0x4939de	                            cmp r14, rbx	       248	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8
0x4000181	     0xf829d000000	                            jb 0x4000224	       248	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8
0x4000187	        0x663d1101	                           cmp ax, 0x111	       250	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8	IF_9
0x400018b	            0x7513	                           jne 0x40001a0	       250	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8	IF_9
0x400018d	        0x498b4508	                mov rax, qword [r13 + 8]	       251	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8	CALL_7
0x4000191	          0x4c89e7	                            mov rdi, r12	       251	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8	CALL_7
0x4000194	          0xff5038	                 call qword [rax + 0x38]	       251	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8	CALL_7
0x4000197	        0x48894510	            mov qword [rbp + 0x10], rax 	       251	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8	CALL_7
0x400019b	      0xe984000000	                           jmp 0x4000224	       251	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8	CALL_7
0x40001a0	        0x663d2101	                           cmp ax, 0x121	       252	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8	ELSE_2	IF_10
0x40001a4	            0x757e	                           jne 0x4000224	       252	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8	ELSE_2	IF_10
0x40001a6	        0x498b4508	                mov rax, qword [r13 + 8]	       253	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8	ELSE_2	IF_10
0x40001aa	          0x4c89e7	                            mov rdi, r12	       253	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8	ELSE_2	IF_10
0x40001ad	          0xff5038	                 call qword [rax + 0x38]	       253	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8	ELSE_2	IF_10
0x40001b0	        0x48894518	            mov qword [rbp + 0x18], rax 	       253	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8	ELSE_2	IF_10
0x40001b4	            0xeb6e	                           jmp 0x4000224	       253	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_8	ELSE_2	IF_10
0x40001b6	        0x4883c304	                              add rbx, 4	       258	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_11
0x40001ba	          0x4939de	                            cmp r14, rbx	       258	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_11
0x40001bd	            0x7216	                            jb 0x40001d5	       258	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_11
0x40001bf	        0x498b4508	                mov rax, qword [r13 + 8]	       260	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_11	CALL_9
0x40001c3	          0x4c89e7	                            mov rdi, r12	       260	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_11	CALL_9
0x40001c6	          0xff5050	                 call qword [rax + 0x50]	       260	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_11	CALL_9
0x40001c9	            0x89c0	                            mov eax, eax	       261	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_11	IF_12
0x40001cb	          0x4901c4	                            add r12, rax	       262	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_11	IF_12
0x40001ce	            0x7268	                            jb 0x4000238	       262	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_11	IF_12
0x40001d0	          0x4d39e6	                            cmp r14, r12	       262	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_11	IF_12
0x40001d3	            0x7263	                            jb 0x4000238	       262	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_11	IF_12
0x40001d5	      0x498d5c2402	                      lea rbx, [r12 + 2]	       266	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40001da	            0xeb48	                           jmp 0x4000224	       267	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40001dc	        0x4883c306	                              add rbx, 6	       269	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_13
0x40001e0	          0x4939de	                            cmp r14, rbx	       269	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_13
0x40001e3	            0x7216	                            jb 0x40001fb	       269	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_13
0x40001e5	        0x498b4508	                mov rax, qword [r13 + 8]	       271	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_13	CALL_10
0x40001e9	          0x4c89e7	                            mov rdi, r12	       271	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_13	CALL_10
0x40001ec	          0xff5038	                 call qword [rax + 0x38]	       271	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_13	CALL_10
0x40001ef	            0x89c0	                            mov eax, eax	       272	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_13	IF_14
0x40001f1	          0x4901c4	                            add r12, rax	       273	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_13	IF_14
0x40001f4	            0x7249	                            jb 0x400023f	       273	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_13	IF_14
0x40001f6	          0x4d39e6	                            cmp r14, r12	       273	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_13	IF_14
0x40001f9	            0x7244	                            jb 0x400023f	       273	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_13	IF_14
0x40001fb	      0x498d5c2404	                      lea rbx, [r12 + 4]	       277	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x4000200	            0xeb22	                           jmp 0x4000224	       278	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x4000202	        0x6683f838	                            cmp ax, 0x38	       280	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_15
0x4000206	            0x7504	                           jne 0x400020c	       280	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_15
0x4000208	        0x4c896528	            mov qword [rbp + 0x28], r12 	       281	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_15
0x400020c	          0x4c89f6	                            mov rsi, r14	       282	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_11
0x400020f	          0x4c29e6	                            sub rsi, r12	       282	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_11
0x4000212	          0x4c89e7	                            mov rdi, r12	       282	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_11
0x4000215	      0xe800000000	                          call 0x400021a	       282	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_11
0x400021a	      0x498d5c0401	                lea rbx, [r12 + rax + 1]	       282	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_11
0x400021f	            0xeb03	                           jmp 0x4000224	       283	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1
0x4000221	          0x4c89e3	                            mov rbx, r12	       223	dwarf1.c	FUNCTION_3	WHILE_1
0x4000224	        0x4c8d6302	                      lea r12, [rbx + 2]	       214	dwarf1.c	FUNCTION_3	WHILE_1
0x4000228	          0x4d39e6	                            cmp r14, r12	       214	dwarf1.c	FUNCTION_3	WHILE_1
0x400022b	     0xf83cafeffff	                           jae 0x40000fb	       214	dwarf1.c	FUNCTION_3	WHILE_1
0x4000231	      0xb801000000	                              mov eax, 1	       287	dwarf1.c	FUNCTION_3
0x4000236	            0xeb0c	                           jmp 0x4000244	       287	dwarf1.c	FUNCTION_3
0x4000238	      0xb800000000	                              mov eax, 0	       263	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_11	IF_12
0x400023d	            0xeb05	                           jmp 0x4000244	       263	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_11	IF_12
0x400023f	      0xb800000000	                              mov eax, 0	       274	dwarf1.c	FUNCTION_3	WHILE_1	SWITCH_1	IF_13	IF_14
0x4000244	        0x4883c408	                              add rsp, 8	       288	dwarf1.c	FUNCTION_3
0x4000248	              0x5b	                                 pop rbx	       288	dwarf1.c	FUNCTION_3
0x4000249	              0x5d	                                 pop rbp	       288	dwarf1.c	FUNCTION_3
0x400024a	            0x415c	                                 pop r12	       288	dwarf1.c	FUNCTION_3
0x400024c	            0x415d	                                 pop r13	       288	dwarf1.c	FUNCTION_3
0x400024e	            0x415e	                                 pop r14	       288	dwarf1.c	FUNCTION_3
0x4000250	            0x415f	                                 pop r15	       288	dwarf1.c	FUNCTION_3
0x4000252	              0xc3	                                     ret	       288	dwarf1.c	FUNCTION_3
dwarf1_unit_find_nearest_line	FOR,2:IF,8:ELSE,0:DO,0:SWITCH,0:CALL,2:WHILE,0:functions,0	249
0x4000253	            0x4157	                                push r15	       427	dwarf1.c	ELSE_1	FUNCTION_6
0x4000255	            0x4156	                                push r14	       427	dwarf1.c	ELSE_1	FUNCTION_6
0x4000257	            0x4155	                                push r13	       427	dwarf1.c	ELSE_1	FUNCTION_6
0x4000259	            0x4154	                                push r12	       427	dwarf1.c	ELSE_1	FUNCTION_6
0x400025b	              0x55	                                push rbp	       427	dwarf1.c	ELSE_1	FUNCTION_6
0x400025c	              0x53	                                push rbx	       427	dwarf1.c	ELSE_1	FUNCTION_6
0x400025d	        0x4883ec78	                           sub rsp, 0x78	       427	dwarf1.c	ELSE_1	FUNCTION_6
0x4000261	    0x64488b042528	                mov rax, qword fs:[0x28]	       427	dwarf1.c	ELSE_1	FUNCTION_6
0x400026a	      0x4889442468	             mov qword [rsp + 0x68], rax	       427	dwarf1.c	ELSE_1	FUNCTION_6
0x400026f	            0x31c0	                            xor eax, eax	       427	dwarf1.c	ELSE_1	FUNCTION_6
0x4000271	        0x48395610	            cmp qword [rsi + 0x10], rdx 	       431	dwarf1.c	ELSE_1	FUNCTION_6	IF_1
0x4000275	     0xf872e030000	                            ja 0x40005a9	       431	dwarf1.c	ELSE_1	FUNCTION_6	IF_1
0x400027b	          0x4989fc	                            mov r12, rdi	       431	dwarf1.c	ELSE_1	FUNCTION_6	IF_1
0x400027e	          0x4889f5	                            mov rbp, rsi	       431	dwarf1.c	ELSE_1	FUNCTION_6	IF_1
0x4000281	          0x4889d3	                            mov rbx, rdx	       431	dwarf1.c	ELSE_1	FUNCTION_6	IF_1
0x4000284	          0x4989cd	                            mov r13, rcx	       431	dwarf1.c	ELSE_1	FUNCTION_6	IF_1
0x4000287	          0x4d89c6	                             mov r14, r8	       431	dwarf1.c	ELSE_1	FUNCTION_6	IF_1
0x400028a	          0x4d89cf	                             mov r15, r9	       431	dwarf1.c	ELSE_1	FUNCTION_6	IF_1
0x400028d	        0x483b5618	            cmp rdx, qword [rsi + 0x18] 	       431	dwarf1.c	ELSE_1	FUNCTION_6	IF_1
0x4000291	     0xf831e030000	                           jae 0x40005b5	       431	dwarf1.c	ELSE_1	FUNCTION_6	IF_1
0x4000297	        0x837e2000	               cmp dword [rsi + 0x20], 0	       433	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2
0x400029b	     0xf8420030000	                            je 0x40005c1	       433	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2
0x40002a1	      0x48837e4000	               cmp qword [rsi + 0x40], 0	       438	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	IF_3
0x40002a6	     0xf85ce010000	                           jne 0x400047a	       438	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	IF_3
0x40002ac	      0x48837f2800	               cmp qword [rdi + 0x28], 0	       300	dwarf1.c	FUNCTION_4	IF_1
0x40002b1	            0x755b	                           jne 0x400030e	       300	dwarf1.c	FUNCTION_4	IF_1
0x40002b3	      0xbe00000000	                              mov esi, 0	       305	dwarf1.c	FUNCTION_4	IF_1	CALL_1
0x40002b8	          0x488b3f	                    mov rdi, qword [rdi]	       305	dwarf1.c	FUNCTION_4	IF_1	CALL_1
0x40002bb	      0xe800000000	                          call 0x40002c0	       305	dwarf1.c	FUNCTION_4	IF_1	CALL_1
0x40002c0	          0x4885c0	                           test rax, rax	       306	dwarf1.c	FUNCTION_4	IF_1	IF_2
0x40002c3	     0xf841d030000	                            je 0x40005e6	       306	dwarf1.c	FUNCTION_4	IF_1	IF_2
0x40002c9	        0x488b7840	            mov rdi, qword [rax + 0x40] 	       309	dwarf1.c	FUNCTION_4	IF_1
0x40002cd	      0x48897c2408	                mov qword [rsp + 8], rdi	       309	dwarf1.c	FUNCTION_4	IF_1
0x40002d2	          0x4885ff	                           test rdi, rdi	       309	dwarf1.c	FUNCTION_4	IF_1
0x40002d5	            0x7509	                           jne 0x40002e0	       309	dwarf1.c	FUNCTION_4	IF_1
0x40002d7	        0x488b7838	            mov rdi, qword [rax + 0x38] 	       309	dwarf1.c	FUNCTION_4	IF_1
0x40002db	      0x48897c2408	                mov qword [rsp + 8], rdi	       309	dwarf1.c	FUNCTION_4	IF_1
0x40002e0	      0x498b4c2408	                mov rcx, qword [r12 + 8]	       311	dwarf1.c	FUNCTION_4	IF_1	CALL_2
0x40002e5	      0xba00000000	                              mov edx, 0	       311	dwarf1.c	FUNCTION_4	IF_1	CALL_2
0x40002ea	          0x4889c6	                            mov rsi, rax	       311	dwarf1.c	FUNCTION_4	IF_1	CALL_2
0x40002ed	        0x498b3c24	                    mov rdi, qword [r12]	       311	dwarf1.c	FUNCTION_4	IF_1	CALL_2
0x40002f1	      0xe800000000	                          call 0x40002f6	       311	dwarf1.c	FUNCTION_4	IF_1	CALL_2
0x40002f6	      0x4989442428	             mov qword [r12 + 0x28], rax	       311	dwarf1.c	FUNCTION_4	IF_1	CALL_2
0x40002fb	          0x4885c0	                           test rax, rax	       314	dwarf1.c	FUNCTION_4	IF_1	IF_3
0x40002fe	     0xf84e2020000	                            je 0x40005e6	       314	dwarf1.c	FUNCTION_4	IF_1	IF_3
0x4000304	      0x4803442408	                add rax, qword [rsp + 8]	       317	dwarf1.c	FUNCTION_4	IF_1
0x4000309	      0x4989442430	             mov qword [r12 + 0x30], rax	       317	dwarf1.c	FUNCTION_4	IF_1
0x400030e	        0x488b4528	            mov rax, qword [rbp + 0x28] 	       320	dwarf1.c	FUNCTION_4
0x4000312	      0x4903442428	             add rax, qword [r12 + 0x28]	       320	dwarf1.c	FUNCTION_4
0x4000317	      0x4889442408	                mov qword [rsp + 8], rax	       320	dwarf1.c	FUNCTION_4
0x400031c	        0x4883c008	                              add rax, 8	       321	dwarf1.c	FUNCTION_4	IF_4
0x4000320	      0x4939442430	            cmp qword [r12 + 0x30], rax 	       321	dwarf1.c	FUNCTION_4	IF_4
0x4000325	     0xf824f010000	                            jb 0x400047a	       321	dwarf1.c	FUNCTION_4	IF_4
0x400032b	        0x498b0424	                    mov rax, qword [r12]	       329	dwarf1.c	FUNCTION_4	IF_4	CALL_3
0x400032f	        0x488b4008	                mov rax, qword [rax + 8]	       329	dwarf1.c	FUNCTION_4	IF_4	CALL_3
0x4000333	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       329	dwarf1.c	FUNCTION_4	IF_4	CALL_3
0x4000338	          0xff5038	                 call qword [rax + 0x38]	       329	dwarf1.c	FUNCTION_4	IF_4	CALL_3
0x400033b	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       329	dwarf1.c	FUNCTION_4	IF_4	CALL_3
0x4000340	          0x4801f8	                            add rax, rdi	       329	dwarf1.c	FUNCTION_4	IF_4	CALL_3
0x4000343	      0x4889442418	             mov qword [rsp + 0x18], rax	       329	dwarf1.c	FUNCTION_4	IF_4	CALL_3
0x4000348	        0x4883c704	                              add rdi, 4	       333	dwarf1.c	FUNCTION_4	IF_4	CALL_4
0x400034c	        0x498b0424	                    mov rax, qword [r12]	       333	dwarf1.c	FUNCTION_4	IF_4	CALL_4
0x4000350	        0x488b4008	                mov rax, qword [rax + 8]	       333	dwarf1.c	FUNCTION_4	IF_4	CALL_4
0x4000354	          0xff5038	                 call qword [rax + 0x38]	       333	dwarf1.c	FUNCTION_4	IF_4	CALL_4
0x4000357	      0x4889442428	             mov qword [rsp + 0x28], rax	       333	dwarf1.c	FUNCTION_4	IF_4	CALL_4
0x400035c	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       334	dwarf1.c	FUNCTION_4	IF_4
0x4000361	        0x488d4f08	                      lea rcx, [rdi + 8]	       334	dwarf1.c	FUNCTION_4	IF_4
0x4000365	      0x48894c2410	             mov qword [rsp + 0x10], rcx	       334	dwarf1.c	FUNCTION_4	IF_4
0x400036a	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       338	dwarf1.c	FUNCTION_4	IF_4
0x400036f	          0x4829c8	                            sub rax, rcx	       338	dwarf1.c	FUNCTION_4	IF_4
0x4000372	          0x4889c1	                            mov rcx, rax	       338	dwarf1.c	FUNCTION_4	IF_4
0x4000375	    0x48ba67666666	          movabs rdx, 0x6666666666666667	       338	dwarf1.c	FUNCTION_4	IF_4
0x400037f	          0x48f7ea	                                imul rdx	       338	dwarf1.c	FUNCTION_4	IF_4
0x4000382	          0x4889d0	                            mov rax, rdx	       338	dwarf1.c	FUNCTION_4	IF_4
0x4000385	        0x48c1f802	                              sar rax, 2	       338	dwarf1.c	FUNCTION_4	IF_4
0x4000389	        0x48c1f93f	                           sar rcx, 0x3f	       338	dwarf1.c	FUNCTION_4	IF_4
0x400038d	          0x4829c8	                            sub rax, rcx	       338	dwarf1.c	FUNCTION_4	IF_4
0x4000390	        0x48894538	            mov qword [rbp + 0x38], rax 	       338	dwarf1.c	FUNCTION_4	IF_4
0x4000394	        0x48c1e004	                              shl rax, 4	       342	dwarf1.c	FUNCTION_4	IF_4	CALL_5
0x4000398	          0x4889c6	                            mov rsi, rax	       342	dwarf1.c	FUNCTION_4	IF_4	CALL_5
0x400039b	        0x498b3c24	                    mov rdi, qword [r12]	       342	dwarf1.c	FUNCTION_4	IF_4	CALL_5
0x400039f	      0xe800000000	                          call 0x40003a4	       342	dwarf1.c	FUNCTION_4	IF_4	CALL_5
0x40003a4	        0x48894540	            mov qword [rbp + 0x40], rax 	       342	dwarf1.c	FUNCTION_4	IF_4	CALL_5
0x40003a8	          0x4885c0	                           test rax, rax	       344	dwarf1.c	FUNCTION_4	IF_4	IF_5
0x40003ab	     0xf8435020000	                            je 0x40005e6	       344	dwarf1.c	FUNCTION_4	IF_4	IF_5
0x40003b1	      0x48837d3800	               cmp qword [rbp + 0x38], 0	       347	dwarf1.c	FUNCTION_4	IF_4	FOR_1
0x40003b6	     0xf84be000000	                            je 0x400047a	       347	dwarf1.c	FUNCTION_4	IF_4	FOR_1
0x40003bc	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       349	dwarf1.c	FUNCTION_4	IF_4	FOR_1	IF_6
0x40003c1	        0x4883c712	                           add rdi, 0x12	       349	dwarf1.c	FUNCTION_4	IF_4	FOR_1	IF_6
0x40003c5	      0x49397c2430	            cmp qword [r12 + 0x30], rdi 	       349	dwarf1.c	FUNCTION_4	IF_4	FOR_1	IF_6
0x40003ca	            0x721d	                            jb 0x40003e9	       349	dwarf1.c	FUNCTION_4	IF_4	FOR_1	IF_6
0x40003cc	    0x48c744240800	                  mov qword [rsp + 8], 0	       349	dwarf1.c	FUNCTION_4	IF_4	FOR_1	IF_6
0x40003d5	            0xeb26	                           jmp 0x40003fd	       349	dwarf1.c	FUNCTION_4	IF_4	FOR_1	IF_6
0x40003d7	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       349	dwarf1.c	FUNCTION_4	IF_4	FOR_1	IF_6
0x40003dc	        0x4883c00a	                            add rax, 0xa	       349	dwarf1.c	FUNCTION_4	IF_4	FOR_1	IF_6
0x40003e0	      0x4939442430	            cmp qword [r12 + 0x30], rax 	       349	dwarf1.c	FUNCTION_4	IF_4	FOR_1	IF_6
0x40003e5	            0x7316	                           jae 0x40003fd	       349	dwarf1.c	FUNCTION_4	IF_4	FOR_1	IF_6
0x40003e7	            0xeb09	                           jmp 0x40003f2	       349	dwarf1.c	FUNCTION_4	IF_4	FOR_1	IF_6
0x40003e9	    0x48c744240800	                  mov qword [rsp + 8], 0	       349	dwarf1.c	FUNCTION_4	IF_4	FOR_1	IF_6
0x40003f2	      0x488b442408	                mov rax, qword [rsp + 8]	       351	dwarf1.c	FUNCTION_4	IF_4	FOR_1	IF_6
0x40003f7	        0x48894538	            mov qword [rbp + 0x38], rax 	       351	dwarf1.c	FUNCTION_4	IF_4	FOR_1	IF_6
0x40003fb	            0xeb7d	                           jmp 0x400047a	       351	dwarf1.c	FUNCTION_4	IF_4	FOR_1	IF_6
0x40003fd	      0x488b442408	                mov rax, qword [rsp + 8]	       355	dwarf1.c	FUNCTION_4	IF_4	FOR_1
0x4000402	        0x48c1e004	                              shl rax, 4	       355	dwarf1.c	FUNCTION_4	IF_4	FOR_1
0x4000406	          0x4889c7	                            mov rdi, rax	       355	dwarf1.c	FUNCTION_4	IF_4	FOR_1
0x4000409	      0x4889442418	             mov qword [rsp + 0x18], rax	       355	dwarf1.c	FUNCTION_4	IF_4	FOR_1
0x400040e	        0x48037d40	             add rdi, qword [rbp + 0x40]	       355	dwarf1.c	FUNCTION_4	IF_4	FOR_1
0x4000412	      0x48897c2420	             mov qword [rsp + 0x20], rdi	       355	dwarf1.c	FUNCTION_4	IF_4	FOR_1
0x4000417	        0x498b0424	                    mov rax, qword [r12]	       356	dwarf1.c	FUNCTION_4	IF_4	FOR_1	CALL_6
0x400041b	        0x488b4008	                mov rax, qword [rax + 8]	       356	dwarf1.c	FUNCTION_4	IF_4	FOR_1	CALL_6
0x400041f	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       356	dwarf1.c	FUNCTION_4	IF_4	FOR_1	CALL_6
0x4000424	          0xff5038	                 call qword [rax + 0x38]	       356	dwarf1.c	FUNCTION_4	IF_4	FOR_1	CALL_6
0x4000427	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	       356	dwarf1.c	FUNCTION_4	IF_4	FOR_1	CALL_6
0x400042c	        0x48894108	                mov qword [rcx + 8], rax	       356	dwarf1.c	FUNCTION_4	IF_4	FOR_1	CALL_6
0x4000430	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       363	dwarf1.c	FUNCTION_4	IF_4	FOR_1
0x4000435	        0x48037d40	             add rdi, qword [rbp + 0x40]	       363	dwarf1.c	FUNCTION_4	IF_4	FOR_1
0x4000439	      0x48897c2418	             mov qword [rsp + 0x18], rdi	       363	dwarf1.c	FUNCTION_4	IF_4	FOR_1
0x400043e	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       364	dwarf1.c	FUNCTION_4	IF_4	FOR_1	CALL_7
0x4000443	        0x488d7906	                      lea rdi, [rcx + 6]	       364	dwarf1.c	FUNCTION_4	IF_4	FOR_1	CALL_7
0x4000447	        0x498b0424	                    mov rax, qword [r12]	       364	dwarf1.c	FUNCTION_4	IF_4	FOR_1	CALL_7
0x400044b	        0x488b4008	                mov rax, qword [rax + 8]	       364	dwarf1.c	FUNCTION_4	IF_4	FOR_1	CALL_7
0x400044f	          0xff5038	                 call qword [rax + 0x38]	       364	dwarf1.c	FUNCTION_4	IF_4	FOR_1	CALL_7
0x4000452	      0x4803442428	             add rax, qword [rsp + 0x28]	       364	dwarf1.c	FUNCTION_4	IF_4	FOR_1	CALL_7
0x4000457	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       364	dwarf1.c	FUNCTION_4	IF_4	FOR_1	CALL_7
0x400045c	          0x488907	                    mov qword [rdi], rax	       364	dwarf1.c	FUNCTION_4	IF_4	FOR_1	CALL_7
0x400045f	    0x48834424100a	             add qword [rsp + 0x10], 0xa	       364	dwarf1.c	FUNCTION_4	IF_4	FOR_1	CALL_7
0x4000465	    0x488344240801	                  add qword [rsp + 8], 1	       347	dwarf1.c	FUNCTION_4	IF_4	FOR_1
0x400046b	      0x488b442408	                mov rax, qword [rsp + 8]	       347	dwarf1.c	FUNCTION_4	IF_4	FOR_1
0x4000470	        0x483b4538	            cmp rax, qword [rbp + 0x38] 	       347	dwarf1.c	FUNCTION_4	IF_4	FOR_1
0x4000474	     0xf825dffffff	                            jb 0x40003d7	       347	dwarf1.c	FUNCTION_4	IF_4	FOR_1
0x400047a	        0x488b5548	            mov rdx, qword [rbp + 0x48] 	       444	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	IF_5
0x400047e	          0x4885d2	                           test rdx, rdx	       444	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	IF_5
0x4000481	     0xf8578010000	                           jne 0x40005ff	       444	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	IF_5
0x4000487	        0x488b5530	            mov rdx, qword [rbp + 0x30] 	       382	dwarf1.c	FUNCTION_5	IF_1
0x400048b	          0x4885d2	                           test rdx, rdx	       382	dwarf1.c	FUNCTION_5	IF_1
0x400048e	     0xf847d010000	                            je 0x4000611	       382	dwarf1.c	FUNCTION_5	IF_1
0x4000494	      0x498b4c2420	            mov rcx, qword [r12 + 0x20] 	       384	dwarf1.c	FUNCTION_5	IF_1	FOR_1
0x4000499	          0x4839ca	                            cmp rdx, rcx	       383	dwarf1.c	FUNCTION_5	IF_1	FOR_1
0x400049c	     0xf836f010000	                           jae 0x4000611	       383	dwarf1.c	FUNCTION_5	IF_1	FOR_1
0x40004a2	      0x488d742430	                   lea rsi, [rsp + 0x30]	       389	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_2	CALL_1
0x40004a7	        0x498b3c24	                    mov rdi, qword [r12]	       389	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_2	CALL_1
0x40004ab	      0xe890fbffff	                      call sym.parse_die	       389	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_2	CALL_1
0x40004b0	            0x85c0	                           test eax, eax	       389	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_2	CALL_1
0x40004b2	            0x7471	                            je 0x4000525	       389	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_2	CALL_1
0x40004b4	       0xfb7442464	           movzx eax, word [rsp + 0x64] 	       393	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_3
0x40004b9	        0x6683f81d	                            cmp ax, 0x1d	       396	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_3
0x40004bd	            0x7744	                            ja 0x4000503	       396	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_3
0x40004bf	      0xba48001020	                     mov edx, 0x20100048	       396	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_3
0x40004c4	        0x480fa3c2	                             bt rdx, rax	       396	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_3
0x40004c8	            0x7339	                           jae 0x4000503	       396	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_3
0x40004ca	      0xbe20000000	                           mov esi, 0x20	       163	dwarf1.c	FUNCTION_2	CALL_1
0x40004cf	        0x498b3c24	                    mov rdi, qword [r12]	       163	dwarf1.c	FUNCTION_2	CALL_1
0x40004d3	      0xe800000000	                          call 0x40004d8	       163	dwarf1.c	FUNCTION_2	CALL_1
0x40004d8	          0x4885c0	                           test rax, rax	       164	dwarf1.c	FUNCTION_2	IF_1
0x40004db	            0x7448	                            je 0x4000525	       164	dwarf1.c	FUNCTION_2	IF_1
0x40004dd	        0x488b5548	            mov rdx, qword [rbp + 0x48] 	       166	dwarf1.c	FUNCTION_2	IF_1
0x40004e1	          0x488910	                    mov qword [rax], rdx	       166	dwarf1.c	FUNCTION_2	IF_1
0x40004e4	        0x48894548	            mov qword [rbp + 0x48], rax 	       167	dwarf1.c	FUNCTION_2	IF_1
0x40004e8	      0x488b542458	            mov rdx, qword [rsp + 0x58] 	       402	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_3
0x40004ed	        0x48895008	                mov qword [rax + 8], rdx	       402	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_3
0x40004f1	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	       403	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_3
0x40004f6	        0x48895010	             mov qword [rax + 0x10], rdx	       403	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_3
0x40004fa	      0x488b542448	            mov rdx, qword [rsp + 0x48] 	       404	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_3
0x40004ff	        0x48895018	             mov qword [rax + 0x18], rdx	       404	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_3
0x4000503	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	       408	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_5
0x4000508	          0x4885d2	                           test rdx, rdx	       408	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_5
0x400050b	     0xf84dc000000	                            je 0x40005ed	       408	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_5
0x4000511	      0x4903542418	             add rdx, qword [r12 + 0x18]	       409	dwarf1.c	FUNCTION_5	IF_1	FOR_1	IF_5
0x4000516	      0x498b4c2420	            mov rcx, qword [r12 + 0x20] 	       384	dwarf1.c	FUNCTION_5	IF_1	FOR_1
0x400051b	          0x4839d1	                            cmp rcx, rdx	       383	dwarf1.c	FUNCTION_5	IF_1	FOR_1
0x400051e	            0x7782	                            ja 0x40004a2	       383	dwarf1.c	FUNCTION_5	IF_1	FOR_1
0x4000520	      0xe9c8000000	                           jmp 0x40005ed	       383	dwarf1.c	FUNCTION_5	IF_1	FOR_1
0x4000525	      0xb800000000	                              mov eax, 0	       447	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	IF_5	IF_6
0x400052a	      0xe9a5000000	                           jmp 0x40005d4	       447	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	IF_5	IF_6
0x400052f	        0x488b5540	            mov rdx, qword [rbp + 0x40] 	       447	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	IF_5	IF_6
0x4000533	      0xb800000000	                              mov eax, 0	       452	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1	IF_7
0x4000538	          0x4889c6	                            mov rsi, rax	       452	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1	IF_7
0x400053b	        0x48c1e604	                              shl rsi, 4	       452	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1	IF_7
0x400053f	          0x483b1a	                    cmp rbx, qword [rdx]	       452	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1	IF_7
0x4000542	            0x7221	                            jb 0x4000565	       452	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1	IF_7
0x4000544	        0x483b5a10	            cmp rbx, qword [rdx + 0x10] 	       453	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1	IF_7
0x4000548	            0x731b	                           jae 0x4000565	       453	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1	IF_7
0x400054a	        0x488b4508	                mov rax, qword [rbp + 8]	       455	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1	IF_7
0x400054e	        0x49894500	                    mov qword [r13], rax	       455	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1	IF_7
0x4000552	        0x488b4540	            mov rax, qword [rbp + 0x40] 	       456	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1	IF_7
0x4000556	      0x488b443008	         mov rax, qword [rax + rsi + 8] 	       456	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1	IF_7
0x400055b	          0x418907	                    mov dword [r15], eax	       456	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1	IF_7
0x400055e	      0xb901000000	                              mov ecx, 1	       457	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1	IF_7
0x4000563	            0xeb12	                           jmp 0x4000577	       458	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1	IF_7
0x4000565	        0x4883c001	                              add rax, 1	       450	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1
0x4000569	        0x4883c210	                           add rdx, 0x10	       450	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1
0x400056d	          0x4839c8	                            cmp rax, rcx	       450	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1
0x4000570	            0x72c6	                            jb 0x4000538	       450	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1
0x4000572	      0xb900000000	                              mov ecx, 0	       428	dwarf1.c	ELSE_1	FUNCTION_6
0x4000577	        0x488b5548	            mov rdx, qword [rbp + 0x48] 	       462	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_2
0x400057b	          0x4885d2	                           test rdx, rdx	       462	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_2
0x400057e	            0x744d	                            je 0x40005cd	       462	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_2
0x4000580	        0x483b5a10	            cmp rbx, qword [rdx + 0x10] 	       466	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_2	IF_8
0x4000584	            0x7214	                            jb 0x400059a	       466	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_2	IF_8
0x4000586	        0x483b5a18	            cmp rbx, qword [rdx + 0x18] 	       467	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_2	IF_8
0x400058a	            0x730e	                           jae 0x400059a	       467	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_2	IF_8
0x400058c	        0x488b4208	                mov rax, qword [rdx + 8]	       469	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_2	IF_8
0x4000590	          0x498906	                    mov qword [r14], rax	       469	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_2	IF_8
0x4000593	      0xb801000000	                              mov eax, 1	       470	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_2	IF_8
0x4000598	            0xeb38	                           jmp 0x40005d2	       471	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_2	IF_8
0x400059a	          0x488b12	                    mov rdx, qword [rdx]	       464	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_2
0x400059d	          0x4885d2	                           test rdx, rdx	       462	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_2
0x40005a0	            0x75de	                           jne 0x4000580	       462	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_2
0x40005a2	      0xb800000000	                              mov eax, 0	       429	dwarf1.c	ELSE_1	FUNCTION_6
0x40005a7	            0xeb29	                           jmp 0x40005d2	       429	dwarf1.c	ELSE_1	FUNCTION_6
0x40005a9	      0xb800000000	                              mov eax, 0	       429	dwarf1.c	ELSE_1	FUNCTION_6
0x40005ae	      0xb900000000	                              mov ecx, 0	       428	dwarf1.c	ELSE_1	FUNCTION_6
0x40005b3	            0xeb1d	                           jmp 0x40005d2	       428	dwarf1.c	ELSE_1	FUNCTION_6
0x40005b5	      0xb800000000	                              mov eax, 0	       429	dwarf1.c	ELSE_1	FUNCTION_6
0x40005ba	      0xb900000000	                              mov ecx, 0	       428	dwarf1.c	ELSE_1	FUNCTION_6
0x40005bf	            0xeb11	                           jmp 0x40005d2	       428	dwarf1.c	ELSE_1	FUNCTION_6
0x40005c1	      0xb800000000	                              mov eax, 0	       429	dwarf1.c	ELSE_1	FUNCTION_6
0x40005c6	      0xb900000000	                              mov ecx, 0	       428	dwarf1.c	ELSE_1	FUNCTION_6
0x40005cb	            0xeb05	                           jmp 0x40005d2	       428	dwarf1.c	ELSE_1	FUNCTION_6
0x40005cd	      0xb800000000	                              mov eax, 0	       429	dwarf1.c	ELSE_1	FUNCTION_6
0x40005d2	             0x9c8	                             or eax, ecx	       477	dwarf1.c	ELSE_1	FUNCTION_6
0x40005d4	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	       478	dwarf1.c	ELSE_1	FUNCTION_6
0x40005d9	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       478	dwarf1.c	ELSE_1	FUNCTION_6
0x40005e2	            0x7445	                            je 0x4000629	       478	dwarf1.c	ELSE_1	FUNCTION_6
0x40005e4	            0xeb3e	                           jmp 0x4000624	       478	dwarf1.c	ELSE_1	FUNCTION_6
0x40005e6	      0xb800000000	                              mov eax, 0	       441	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	IF_3	IF_4
0x40005eb	            0xebe7	                           jmp 0x40005d4	       441	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	IF_3	IF_4
0x40005ed	        0x488b4d38	            mov rcx, qword [rbp + 0x38] 	       450	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1
0x40005f1	          0x4885c9	                           test rcx, rcx	       450	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1
0x40005f4	     0xf8535ffffff	                           jne 0x400052f	       450	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1
0x40005fa	      0xe978ffffff	                           jmp 0x4000577	       450	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1
0x40005ff	        0x488b4d38	            mov rcx, qword [rbp + 0x38] 	       450	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1
0x4000603	          0x4885c9	                           test rcx, rcx	       450	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1
0x4000606	     0xf8523ffffff	                           jne 0x400052f	       450	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1
0x400060c	      0xe96fffffff	                           jmp 0x4000580	       450	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1
0x4000611	        0x488b4d38	            mov rcx, qword [rbp + 0x38] 	       450	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1
0x4000615	      0xb800000000	                              mov eax, 0	       429	dwarf1.c	ELSE_1	FUNCTION_6
0x400061a	          0x4885c9	                           test rcx, rcx	       450	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1
0x400061d	            0x74b3	                            je 0x40005d2	       450	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1
0x400061f	      0xe90bffffff	                           jmp 0x400052f	       450	dwarf1.c	ELSE_1	FUNCTION_6	IF_1	IF_2	FOR_1
0x4000624	      0xe800000000	                          call 0x4000629	       478	dwarf1.c	ELSE_1	FUNCTION_6
0x4000629	        0x4883c478	                           add rsp, 0x78	       478	dwarf1.c	ELSE_1	FUNCTION_6
0x400062d	              0x5b	                                 pop rbx	       478	dwarf1.c	ELSE_1	FUNCTION_6
0x400062e	              0x5d	                                 pop rbp	       478	dwarf1.c	ELSE_1	FUNCTION_6
0x400062f	            0x415c	                                 pop r12	       478	dwarf1.c	ELSE_1	FUNCTION_6
0x4000631	            0x415d	                                 pop r13	       478	dwarf1.c	ELSE_1	FUNCTION_6
0x4000633	            0x415e	                                 pop r14	       478	dwarf1.c	ELSE_1	FUNCTION_6
0x4000635	            0x415f	                                 pop r15	       478	dwarf1.c	ELSE_1	FUNCTION_6
0x4000637	              0xc3	                                     ret	       478	dwarf1.c	ELSE_1	FUNCTION_6
_bfd_dwarf1_find_nearest_line	FOR,1:IF,12:ELSE,2:DO,0:SWITCH,0:CALL,9:WHILE,1:functions,0	183
0x4000638	            0x4157	                                push r15	       491	dwarf1.c	FUNCTION_7
0x400063a	            0x4156	                                push r14	       491	dwarf1.c	FUNCTION_7
0x400063c	            0x4155	                                push r13	       491	dwarf1.c	FUNCTION_7
0x400063e	            0x4154	                                push r12	       491	dwarf1.c	FUNCTION_7
0x4000640	              0x55	                                push rbp	       491	dwarf1.c	FUNCTION_7
0x4000641	              0x53	                                push rbx	       491	dwarf1.c	FUNCTION_7
0x4000642	        0x4883ec58	                           sub rsp, 0x58	       491	dwarf1.c	FUNCTION_7
0x4000646	        0x48893424	                    mov qword [rsp], rsi	       491	dwarf1.c	FUNCTION_7
0x400064a	          0x4d89c4	                             mov r12, r8	       491	dwarf1.c	FUNCTION_7
0x400064d	          0x4d89cd	                             mov r13, r9	       491	dwarf1.c	FUNCTION_7
0x4000650	    0x4c8bbc249000	            mov r15, qword [rsp + 0x90] 	       491	dwarf1.c	FUNCTION_7
0x4000658	    0x64488b042528	                mov rax, qword fs:[0x28]	       491	dwarf1.c	FUNCTION_7
0x4000661	      0x4889442448	             mov qword [rsp + 0x48], rax	       491	dwarf1.c	FUNCTION_7
0x4000666	            0x31c0	                            xor eax, eax	       491	dwarf1.c	FUNCTION_7
0x4000668	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	       492	dwarf1.c	FUNCTION_7	CALL_1
0x400066f	    0x488b98280300	           mov rbx, qword [rax + 0x328] 	       492	dwarf1.c	FUNCTION_7	CALL_1
0x4000676	        0x48034a28	             add rcx, qword [rdx + 0x28]	       497	dwarf1.c	FUNCTION_7
0x400067a	          0x4889cd	                            mov rbp, rcx	       497	dwarf1.c	FUNCTION_7
0x400067d	    0x49c700000000	                       mov qword [r8], 0	       499	dwarf1.c	FUNCTION_7
0x4000684	    0x49c701000000	                       mov qword [r9], 0	       500	dwarf1.c	FUNCTION_7
0x400068b	    0x41c707000000	                      mov dword [r15], 0	       501	dwarf1.c	FUNCTION_7
0x4000692	          0x4885db	                           test rbx, rbx	       503	dwarf1.c	FUNCTION_7	IF_1
0x4000695	     0xf85a1000000	                           jne 0x400073c	       503	dwarf1.c	FUNCTION_7	IF_1
0x400069b	          0x4989fe	                            mov r14, rdi	       503	dwarf1.c	FUNCTION_7	IF_1
0x400069e	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	       508	dwarf1.c	FUNCTION_7	IF_1	CALL_2
0x40006a5	      0x4889442408	                mov qword [rsp + 8], rax	       508	dwarf1.c	FUNCTION_7	IF_1	CALL_2
0x40006aa	      0xbe40000000	                           mov esi, 0x40	       509	dwarf1.c	FUNCTION_7	IF_1	CALL_3
0x40006af	      0xe800000000	                          call 0x40006b4	       509	dwarf1.c	FUNCTION_7	IF_1	CALL_3
0x40006b4	          0x4889c3	                            mov rbx, rax	       509	dwarf1.c	FUNCTION_7	IF_1	CALL_3
0x40006b7	      0x488b442408	                mov rax, qword [rsp + 8]	       509	dwarf1.c	FUNCTION_7	IF_1	CALL_3
0x40006bc	    0x488998280300	            mov qword [rax + 0x328], rbx	       509	dwarf1.c	FUNCTION_7	IF_1	CALL_3
0x40006c3	      0xb800000000	                              mov eax, 0	       512	dwarf1.c	FUNCTION_7	IF_1	IF_2
0x40006c8	          0x4885db	                           test rbx, rbx	       511	dwarf1.c	FUNCTION_7	IF_1	IF_2
0x40006cb	     0xf84d8010000	                            je 0x40008a9	       511	dwarf1.c	FUNCTION_7	IF_1	IF_2
0x40006d1	      0xbe00000000	                              mov esi, 0	       514	dwarf1.c	FUNCTION_7	IF_1	CALL_4
0x40006d6	          0x4c89f7	                            mov rdi, r14	       514	dwarf1.c	FUNCTION_7	IF_1	CALL_4
0x40006d9	      0xe800000000	                          call 0x40006de	       514	dwarf1.c	FUNCTION_7	IF_1	CALL_4
0x40006de	          0x4885c0	                           test rax, rax	       515	dwarf1.c	FUNCTION_7	IF_1	IF_3
0x40006e1	     0xf84a8010000	                            je 0x400088f	       515	dwarf1.c	FUNCTION_7	IF_1	IF_3
0x40006e7	        0x488b7840	            mov rdi, qword [rax + 0x40] 	       521	dwarf1.c	FUNCTION_7	IF_1
0x40006eb	      0x48897c2408	                mov qword [rsp + 8], rdi	       521	dwarf1.c	FUNCTION_7	IF_1
0x40006f0	          0x4885ff	                           test rdi, rdi	       521	dwarf1.c	FUNCTION_7	IF_1
0x40006f3	            0x7509	                           jne 0x40006fe	       521	dwarf1.c	FUNCTION_7	IF_1
0x40006f5	        0x488b7838	            mov rdi, qword [rax + 0x38] 	       521	dwarf1.c	FUNCTION_7	IF_1
0x40006f9	      0x48897c2408	                mov qword [rsp + 8], rdi	       521	dwarf1.c	FUNCTION_7	IF_1
0x40006fe	        0x488b0c24	                    mov rcx, qword [rsp]	       523	dwarf1.c	FUNCTION_7	IF_1	CALL_5
0x4000702	      0xba00000000	                              mov edx, 0	       523	dwarf1.c	FUNCTION_7	IF_1	CALL_5
0x4000707	          0x4889c6	                            mov rsi, rax	       523	dwarf1.c	FUNCTION_7	IF_1	CALL_5
0x400070a	          0x4c89f7	                            mov rdi, r14	       523	dwarf1.c	FUNCTION_7	IF_1	CALL_5
0x400070d	      0xe800000000	                          call 0x4000712	       523	dwarf1.c	FUNCTION_7	IF_1	CALL_5
0x4000712	        0x48894318	             mov qword [rbx + 0x18], rax	       523	dwarf1.c	FUNCTION_7	IF_1	CALL_5
0x4000716	          0x4885c0	                           test rax, rax	       526	dwarf1.c	FUNCTION_7	IF_1	IF_4
0x4000719	     0xf8477010000	                            je 0x4000896	       526	dwarf1.c	FUNCTION_7	IF_1	IF_4
0x400071f	      0x488b542408	                mov rdx, qword [rsp + 8]	       529	dwarf1.c	FUNCTION_7	IF_1
0x4000724	          0x4801c2	                            add rdx, rax	       529	dwarf1.c	FUNCTION_7	IF_1
0x4000727	        0x48895320	             mov qword [rbx + 0x20], rdx	       529	dwarf1.c	FUNCTION_7	IF_1
0x400072b	        0x48894338	             mov qword [rbx + 0x38], rax	       530	dwarf1.c	FUNCTION_7	IF_1
0x400072f	          0x4c8933	                    mov qword [rbx], r14	       531	dwarf1.c	FUNCTION_7	IF_1
0x4000732	        0x488b0424	                    mov rax, qword [rsp]	       532	dwarf1.c	FUNCTION_7	IF_1
0x4000736	        0x48894308	                mov qword [rbx + 8], rax	       532	dwarf1.c	FUNCTION_7	IF_1
0x400073a	            0xeb0b	                           jmp 0x4000747	       532	dwarf1.c	FUNCTION_7	IF_1
0x400073c	      0x48837b1800	               cmp qword [rbx + 0x18], 0	       538	dwarf1.c	FUNCTION_7	IF_5
0x4000741	     0xf8456010000	                            je 0x400089d	       538	dwarf1.c	FUNCTION_7	IF_5
0x4000747	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	       543	dwarf1.c	FUNCTION_7	FOR_1
0x400074b	          0x4885f6	                           test rsi, rsi	       543	dwarf1.c	FUNCTION_7	FOR_1
0x400074e	            0x742d	                            je 0x400077d	       543	dwarf1.c	FUNCTION_7	FOR_1
0x4000750	        0x483b6e10	            cmp rbp, qword [rsi + 0x10] 	       544	dwarf1.c	FUNCTION_7	FOR_1	IF_6
0x4000754	            0x721f	                            jb 0x4000775	       544	dwarf1.c	FUNCTION_7	FOR_1	IF_6
0x4000756	        0x483b6e18	            cmp rbp, qword [rsi + 0x18] 	       544	dwarf1.c	FUNCTION_7	FOR_1	IF_6
0x400075a	            0x7319	                           jae 0x4000775	       544	dwarf1.c	FUNCTION_7	FOR_1	IF_6
0x400075c	          0x4d89f9	                             mov r9, r15	       545	dwarf1.c	FUNCTION_7	FOR_1	IF_6	CALL_6
0x400075f	          0x4d89e8	                             mov r8, r13	       545	dwarf1.c	FUNCTION_7	FOR_1	IF_6	CALL_6
0x4000762	          0x4c89e1	                            mov rcx, r12	       545	dwarf1.c	FUNCTION_7	FOR_1	IF_6	CALL_6
0x4000765	          0x4889ea	                            mov rdx, rbp	       545	dwarf1.c	FUNCTION_7	FOR_1	IF_6	CALL_6
0x4000768	          0x4889df	                            mov rdi, rbx	       545	dwarf1.c	FUNCTION_7	FOR_1	IF_6	CALL_6
0x400076b	      0xe8e3faffff	  call sym.dwarf1_unit_find_nearest_line	       545	dwarf1.c	FUNCTION_7	FOR_1	IF_6	CALL_6
0x4000770	      0xe934010000	                           jmp 0x40008a9	       545	dwarf1.c	FUNCTION_7	FOR_1	IF_6	CALL_6
0x4000775	          0x488b36	                    mov rsi, qword [rsi]	       543	dwarf1.c	FUNCTION_7	FOR_1
0x4000778	          0x4885f6	                           test rsi, rsi	       543	dwarf1.c	FUNCTION_7	FOR_1
0x400077b	            0x75d3	                           jne 0x4000750	       543	dwarf1.c	FUNCTION_7	FOR_1
0x400077d	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	       550	dwarf1.c	FUNCTION_7	WHILE_1
0x4000781	        0x488b4b20	            mov rcx, qword [rbx + 0x20] 	       550	dwarf1.c	FUNCTION_7	WHILE_1
0x4000785	          0x4839ca	                            cmp rdx, rcx	       550	dwarf1.c	FUNCTION_7	WHILE_1
0x4000788	     0xf8316010000	                           jae 0x40008a4	       550	dwarf1.c	FUNCTION_7	WHILE_1
0x400078e	      0x488d742410	                   lea rsi, [rsp + 0x10]	       554	dwarf1.c	FUNCTION_7	WHILE_1	IF_7	CALL_7
0x4000793	          0x488b3b	                    mov rdi, qword [rbx]	       554	dwarf1.c	FUNCTION_7	WHILE_1	IF_7	CALL_7
0x4000796	      0xe8a5f8ffff	                      call sym.parse_die	       554	dwarf1.c	FUNCTION_7	WHILE_1	IF_7	CALL_7
0x400079b	            0x85c0	                           test eax, eax	       554	dwarf1.c	FUNCTION_7	WHILE_1	IF_7	CALL_7
0x400079d	     0xf8406010000	                            je 0x40008a9	       554	dwarf1.c	FUNCTION_7	WHILE_1	IF_7	CALL_7
0x40007a3	    0x66837c244411	            cmp word [rsp + 0x44], 0x11 	       558	dwarf1.c	FUNCTION_7	WHILE_1	IF_8
0x40007a9	     0xf85a4000000	                           jne 0x4000853	       558	dwarf1.c	FUNCTION_7	WHILE_1	IF_8
0x40007af	      0xbe50000000	                           mov esi, 0x50	       145	dwarf1.c	FUNCTION_1	CALL_1
0x40007b4	          0x488b3b	                    mov rdi, qword [rbx]	       145	dwarf1.c	FUNCTION_1	CALL_1
0x40007b7	      0xe800000000	                          call 0x40007bc	       145	dwarf1.c	FUNCTION_1	CALL_1
0x40007bc	          0x4885c0	                           test rax, rax	       146	dwarf1.c	FUNCTION_1	IF_1
0x40007bf	     0xf84c3000000	                            je 0x4000888	       146	dwarf1.c	FUNCTION_1	IF_1
0x40007c5	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       148	dwarf1.c	FUNCTION_1	IF_1
0x40007c9	          0x488910	                    mov qword [rax], rdx	       148	dwarf1.c	FUNCTION_1	IF_1
0x40007cc	        0x48894310	             mov qword [rbx + 0x10], rax	       149	dwarf1.c	FUNCTION_1	IF_1
0x40007d0	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	       565	dwarf1.c	FUNCTION_7	WHILE_1	IF_8
0x40007d5	        0x48895008	                mov qword [rax + 8], rdx	       565	dwarf1.c	FUNCTION_7	WHILE_1	IF_8
0x40007d9	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	       566	dwarf1.c	FUNCTION_7	WHILE_1	IF_8
0x40007de	        0x48897010	             mov qword [rax + 0x10], rsi	       566	dwarf1.c	FUNCTION_7	WHILE_1	IF_8
0x40007e2	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       567	dwarf1.c	FUNCTION_7	WHILE_1	IF_8
0x40007e7	        0x48894818	             mov qword [rax + 0x18], rcx	       567	dwarf1.c	FUNCTION_7	WHILE_1	IF_8
0x40007eb	        0x8b542440	            mov edx, dword [rsp + 0x40] 	       568	dwarf1.c	FUNCTION_7	WHILE_1	IF_8
0x40007ef	          0x895020	             mov dword [rax + 0x20], edx	       568	dwarf1.c	FUNCTION_7	WHILE_1	IF_8
0x40007f2	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	       569	dwarf1.c	FUNCTION_7	WHILE_1	IF_8
0x40007f7	        0x48895028	             mov qword [rax + 0x28], rdx	       569	dwarf1.c	FUNCTION_7	WHILE_1	IF_8
0x40007fb	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	       573	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_10
0x4000800	          0x4885d2	                           test rdx, rdx	       573	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_10
0x4000803	     0xf84d0000000	                            je 0x40008d9	       573	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_10
0x4000809	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       574	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_10
0x400080e	        0x48037b38	             add rdi, qword [rbx + 0x38]	       574	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_10
0x4000812	        0x483b7b20	            cmp rdi, qword [rbx + 0x20] 	       574	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_10
0x4000816	     0xf83a6000000	                           jae 0x40008c2	       574	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_10
0x400081c	          0x4989d0	                             mov r8, rdx	       576	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_10
0x400081f	        0x4c034318	              add r8, qword [rbx + 0x18]	       576	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_10
0x4000823	          0x4c39c7	                             cmp rdi, r8	       576	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_10
0x4000826	     0xf8496000000	                            je 0x40008c2	       576	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_10
0x400082c	        0x48897830	             mov qword [rax + 0x30], rdi	       578	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_10
0x4000830	          0x4839cd	                            cmp rbp, rcx	       582	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11
0x4000833	            0x7328	                           jae 0x400085d	       582	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11
0x4000835	          0x4839f5	                            cmp rbp, rsi	       582	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11
0x4000838	            0x7223	                            jb 0x400085d	       582	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11
0x400083a	          0x4d89f9	                             mov r9, r15	       583	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11	CALL_9
0x400083d	          0x4d89e8	                             mov r8, r13	       583	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11	CALL_9
0x4000840	          0x4c89e1	                            mov rcx, r12	       583	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11	CALL_9
0x4000843	          0x4889ea	                            mov rdx, rbp	       583	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11	CALL_9
0x4000846	          0x4889c6	                            mov rsi, rax	       583	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11	CALL_9
0x4000849	          0x4889df	                            mov rdi, rbx	       583	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11	CALL_9
0x400084c	      0xe802faffff	  call sym.dwarf1_unit_find_nearest_line	       583	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11	CALL_9
0x4000851	            0xeb56	                           jmp 0x40008a9	       583	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11	CALL_9
0x4000853	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	       589	dwarf1.c	FUNCTION_7	WHILE_1	IF_12
0x4000858	          0x4885d2	                           test rdx, rdx	       589	dwarf1.c	FUNCTION_7	WHILE_1	IF_12
0x400085b	            0x740a	                            je 0x4000867	       589	dwarf1.c	FUNCTION_7	WHILE_1	IF_12
0x400085d	        0x48035318	             add rdx, qword [rbx + 0x18]	       590	dwarf1.c	FUNCTION_7	WHILE_1	IF_12
0x4000861	        0x48895338	             mov qword [rbx + 0x38], rdx	       590	dwarf1.c	FUNCTION_7	WHILE_1	IF_12
0x4000865	            0xeb09	                           jmp 0x4000870	       590	dwarf1.c	FUNCTION_7	WHILE_1	IF_12
0x4000867	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       592	dwarf1.c	FUNCTION_7	WHILE_1	ELSE_2
0x400086c	        0x48014338	            add qword [rbx + 0x38], rax 	       592	dwarf1.c	FUNCTION_7	WHILE_1	ELSE_2
0x4000870	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	       550	dwarf1.c	FUNCTION_7	WHILE_1
0x4000874	        0x488b4b20	            mov rcx, qword [rbx + 0x20] 	       550	dwarf1.c	FUNCTION_7	WHILE_1
0x4000878	          0x4839ca	                            cmp rdx, rcx	       550	dwarf1.c	FUNCTION_7	WHILE_1
0x400087b	     0xf820dffffff	                            jb 0x400078e	       550	dwarf1.c	FUNCTION_7	WHILE_1
0x4000881	      0xb800000000	                              mov eax, 0	       595	dwarf1.c	FUNCTION_7
0x4000886	            0xeb21	                           jmp 0x40008a9	       595	dwarf1.c	FUNCTION_7
0x4000888	      0xb800000000	                              mov eax, 0	       563	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_9
0x400088d	            0xeb1a	                           jmp 0x40008a9	       563	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_9
0x400088f	      0xb800000000	                              mov eax, 0	       519	dwarf1.c	FUNCTION_7	IF_1	IF_3
0x4000894	            0xeb13	                           jmp 0x40008a9	       519	dwarf1.c	FUNCTION_7	IF_1	IF_3
0x4000896	      0xb800000000	                              mov eax, 0	       527	dwarf1.c	FUNCTION_7	IF_1	IF_4
0x400089b	            0xeb0c	                           jmp 0x40008a9	       527	dwarf1.c	FUNCTION_7	IF_1	IF_4
0x400089d	      0xb800000000	                              mov eax, 0	       539	dwarf1.c	FUNCTION_7	IF_5
0x40008a2	            0xeb05	                           jmp 0x40008a9	       539	dwarf1.c	FUNCTION_7	IF_5
0x40008a4	      0xb800000000	                              mov eax, 0	       595	dwarf1.c	FUNCTION_7
0x40008a9	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	       596	dwarf1.c	FUNCTION_7
0x40008ae	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       596	dwarf1.c	FUNCTION_7
0x40008b7	            0x7440	                            je 0x40008f9	       596	dwarf1.c	FUNCTION_7
0x40008b9	            0xeb39	                           jmp 0x40008f4	       596	dwarf1.c	FUNCTION_7
0x40008bb	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	       589	dwarf1.c	FUNCTION_7	WHILE_1	IF_12
0x40008c0	            0xeb9b	                           jmp 0x400085d	       589	dwarf1.c	FUNCTION_7	WHILE_1	IF_12
0x40008c2	    0x48c740300000	               mov qword [rax + 0x30], 0	       580	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	ELSE_1
0x40008ca	          0x4839cd	                            cmp rbp, rcx	       582	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11
0x40008cd	            0x73ec	                           jae 0x40008bb	       582	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11
0x40008cf	          0x4839f5	                            cmp rbp, rsi	       582	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11
0x40008d2	            0x72e7	                            jb 0x40008bb	       582	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11
0x40008d4	      0xe961ffffff	                           jmp 0x400083a	       582	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11
0x40008d9	    0x48c740300000	               mov qword [rax + 0x30], 0	       580	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	ELSE_1
0x40008e1	          0x4839cd	                            cmp rbp, rcx	       582	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11
0x40008e4	            0x7381	                           jae 0x4000867	       582	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11
0x40008e6	          0x4839f5	                            cmp rbp, rsi	       582	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11
0x40008e9	     0xf8278ffffff	                            jb 0x4000867	       582	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11
0x40008ef	      0xe946ffffff	                           jmp 0x400083a	       582	dwarf1.c	FUNCTION_7	WHILE_1	IF_8	IF_11
0x40008f4	      0xe800000000	                          call 0x40008f9	       596	dwarf1.c	FUNCTION_7
0x40008f9	        0x4883c458	                           add rsp, 0x58	       596	dwarf1.c	FUNCTION_7
0x40008fd	              0x5b	                                 pop rbx	       596	dwarf1.c	FUNCTION_7
0x40008fe	              0x5d	                                 pop rbp	       596	dwarf1.c	FUNCTION_7
0x40008ff	            0x415c	                                 pop r12	       596	dwarf1.c	FUNCTION_7
0x4000901	            0x415d	                                 pop r13	       596	dwarf1.c	FUNCTION_7
0x4000903	            0x415e	                                 pop r14	       596	dwarf1.c	FUNCTION_7
0x4000905	            0x415f	                                 pop r15	       596	dwarf1.c	FUNCTION_7
0x4000907	              0xc3	                                     ret	       596	dwarf1.c	FUNCTION_7
