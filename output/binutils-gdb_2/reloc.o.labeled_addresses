bfd_install_relocation	FOR,0:CALL,20:functions,0:ELSE,4:SWITCH,1:WHILE,0:IF,12:DO,0	226
0x40005d3	            0x4157	                                push r15	      1022	reloc.c	FUNCTION_5
0x40005d5	            0x4156	                                push r14	      1022	reloc.c	FUNCTION_5
0x40005d7	            0x4155	                                push r13	      1022	reloc.c	FUNCTION_5
0x40005d9	            0x4154	                                push r12	      1022	reloc.c	FUNCTION_5
0x40005db	              0x55	                                push rbp	      1022	reloc.c	FUNCTION_5
0x40005dc	              0x53	                                push rbx	      1022	reloc.c	FUNCTION_5
0x40005dd	        0x4883ec18	                           sub rsp, 0x18	      1022	reloc.c	FUNCTION_5
0x40005e1	          0x4989fc	                            mov r12, rdi	      1022	reloc.c	FUNCTION_5
0x40005e4	          0x4889f3	                            mov rbx, rsi	      1022	reloc.c	FUNCTION_5
0x40005e7	        0x48891424	                    mov qword [rsp], rdx	      1022	reloc.c	FUNCTION_5
0x40005eb	          0x4989cf	                            mov r15, rcx	      1022	reloc.c	FUNCTION_5
0x40005ee	          0x4d89c5	                             mov r13, r8	      1022	reloc.c	FUNCTION_5
0x40005f1	        0x488b6e18	            mov rbp, qword [rsi + 0x18] 	      1027	reloc.c	FUNCTION_5
0x40005f5	          0x488b06	                    mov rax, qword [rsi]	      1032	reloc.c	FUNCTION_5
0x40005f8	          0x4c8b30	                    mov r14, qword [rax]	      1032	reloc.c	FUNCTION_5
0x40005fb	          0x4885ed	                           test rbp, rbp	      1037	reloc.c	FUNCTION_5	IF_1
0x40005fe	            0x742c	                            je 0x400062c	      1037	reloc.c	FUNCTION_5	IF_1
0x4000600	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      1037	reloc.c	FUNCTION_5	IF_1
0x4000604	          0x4885c0	                           test rax, rax	      1037	reloc.c	FUNCTION_5	IF_1
0x4000607	            0x7423	                            je 0x400062c	      1037	reloc.c	FUNCTION_5	IF_1
0x4000609	          0x4889d1	                            mov rcx, rdx	      1047	reloc.c	FUNCTION_5	IF_1	CALL_1
0x400060c	          0x4c29f9	                            sub rcx, r15	      1047	reloc.c	FUNCTION_5	IF_1	CALL_1
0x400060f	        0x4883ec08	                              sub rsp, 8	      1047	reloc.c	FUNCTION_5	IF_1	CALL_1
0x4000613	            0x4151	                                 push r9	      1047	reloc.c	FUNCTION_5	IF_1	CALL_1
0x4000615	          0x4989f9	                             mov r9, rdi	      1047	reloc.c	FUNCTION_5	IF_1	CALL_1
0x4000618	          0x4c89f2	                            mov rdx, r14	      1047	reloc.c	FUNCTION_5	IF_1	CALL_1
0x400061b	            0xffd0	                                call rax	      1047	reloc.c	FUNCTION_5	IF_1	CALL_1
0x400061d	        0x4883c410	                           add rsp, 0x10	      1052	reloc.c	FUNCTION_5	IF_1	IF_2
0x4000621	            0x89c2	                            mov edx, eax	      1053	reloc.c	FUNCTION_5	IF_1	IF_2
0x4000623	          0x83f805	                              cmp eax, 5	      1052	reloc.c	FUNCTION_5	IF_1	IF_2
0x4000626	     0xf8585020000	                           jne 0x40008b1	      1052	reloc.c	FUNCTION_5	IF_1	IF_2
0x400062c	    0x49817e200000	               cmp qword [r14 + 0x20], 0	      1056	reloc.c	FUNCTION_5	IF_3	CALL_2
0x4000634	            0x7512	                           jne 0x4000648	      1056	reloc.c	FUNCTION_5	IF_3	CALL_2
0x4000636	        0x498b4560	            mov rax, qword [r13 + 0x60] 	      1058	reloc.c	FUNCTION_5	IF_3
0x400063a	        0x48014308	                add qword [rbx + 8], rax	      1058	reloc.c	FUNCTION_5	IF_3
0x400063e	      0xba02000000	                              mov edx, 2	      1059	reloc.c	FUNCTION_5	IF_3
0x4000643	      0xe969020000	                           jmp 0x40008b1	      1059	reloc.c	FUNCTION_5	IF_3
0x4000648	        0x488b4308	                mov rax, qword [rbx + 8]	      1066	reloc.c	FUNCTION_5	CALL_3
0x400064c	      0x4889442408	                mov qword [rsp + 8], rax	      1066	reloc.c	FUNCTION_5	CALL_3
0x4000651	          0x4c89e7	                            mov rdi, r12	      1066	reloc.c	FUNCTION_5	CALL_3
0x4000654	      0xe800000000	                          call 0x4000659	      1066	reloc.c	FUNCTION_5	CALL_3
0x4000659	            0x89c0	                            mov eax, eax	      1066	reloc.c	FUNCTION_5	CALL_3
0x400065b	    0x480faf442408	               imul rax, qword [rsp + 8]	      1066	reloc.c	FUNCTION_5	CALL_3
0x4000661	      0x4889442408	                mov qword [rsp + 8], rax	      1066	reloc.c	FUNCTION_5	CALL_3
0x4000666	          0x4889c1	                            mov rcx, rax	      1067	reloc.c	FUNCTION_5	IF_4	CALL_4
0x4000669	          0x4c89ea	                            mov rdx, r13	      1067	reloc.c	FUNCTION_5	IF_4	CALL_4
0x400066c	          0x4c89e6	                            mov rsi, r12	      1067	reloc.c	FUNCTION_5	IF_4	CALL_4
0x400066f	          0x4889ef	                            mov rdi, rbp	      1067	reloc.c	FUNCTION_5	IF_4	CALL_4
0x4000672	      0xe800000000	                          call 0x4000677	      1067	reloc.c	FUNCTION_5	IF_4	CALL_4
0x4000677	      0xba04000000	                              mov edx, 4	      1068	reloc.c	FUNCTION_5	IF_4
0x400067c	            0x85c0	                           test eax, eax	      1067	reloc.c	FUNCTION_5	IF_4	CALL_4
0x400067e	     0xf842d020000	                            je 0x40008b1	      1067	reloc.c	FUNCTION_5	IF_4	CALL_4
0x4000684	        0x498b5620	            mov rdx, qword [r14 + 0x20] 	      1074	reloc.c	FUNCTION_5	IF_5	CALL_5
0x4000688	      0xb800000000	                              mov eax, 0	      1075	reloc.c	FUNCTION_5	IF_5
0x400068d	        0xf6422110	           test byte [rdx + 0x21], 0x10 	      1074	reloc.c	FUNCTION_5	IF_5	CALL_5
0x4000691	            0x7504	                           jne 0x4000697	      1074	reloc.c	FUNCTION_5	IF_5	CALL_5
0x4000693	        0x498b4610	            mov rax, qword [r14 + 0x10] 	      1077	reloc.c	FUNCTION_5	ELSE_1
0x4000697	          0x8b4d30	            mov ecx, dword [rbp + 0x30] 	      1082	reloc.c	FUNCTION_5	IF_6
0x400069a	      0xbe00000000	                              mov esi, 0	      1083	reloc.c	FUNCTION_5	IF_6
0x400069f	            0x85c9	                           test ecx, ecx	      1082	reloc.c	FUNCTION_5	IF_6
0x40006a1	            0x7408	                            je 0x40006ab	      1082	reloc.c	FUNCTION_5	IF_6
0x40006a3	        0x488b7268	            mov rsi, qword [rdx + 0x68] 	      1085	reloc.c	FUNCTION_5	ELSE_2
0x40006a7	        0x488b7628	            mov rsi, qword [rsi + 0x28] 	      1085	reloc.c	FUNCTION_5	ELSE_2
0x40006ab	        0x4c8b4310	              mov r8, qword [rbx + 0x10]	      1090	reloc.c	FUNCTION_5	ELSE_2
0x40006af	          0x4d89c6	                             mov r14, r8	      1090	reloc.c	FUNCTION_5	ELSE_2
0x40006b2	        0x4c037260	             add r14, qword [rdx + 0x60]	      1090	reloc.c	FUNCTION_5	ELSE_2
0x40006b6	          0x4c01f0	                            add rax, r14	      1090	reloc.c	FUNCTION_5	ELSE_2
0x40006b9	        0x4c8d3406	                    lea r14, [rsi + rax]	      1090	reloc.c	FUNCTION_5	ELSE_2
0x40006bd	        0x837d1000	               cmp dword [rbp + 0x10], 0	      1095	reloc.c	FUNCTION_5	ELSE_2	IF_7
0x40006c1	            0x741a	                            je 0x40006dd	      1095	reloc.c	FUNCTION_5	ELSE_2	IF_7
0x40006c3	        0x498b4568	            mov rax, qword [r13 + 0x68] 	      1126	reloc.c	FUNCTION_5	ELSE_2	IF_7
0x40006c7	        0x4d2b7560	             sub r14, qword [r13 + 0x60]	      1125	reloc.c	FUNCTION_5	ELSE_2	IF_7
0x40006cb	        0x4c2b7028	             sub r14, qword [rax + 0x28]	      1125	reloc.c	FUNCTION_5	ELSE_2	IF_7
0x40006cf	        0x837d4800	               cmp dword [rbp + 0x48], 0	      1128	reloc.c	FUNCTION_5	ELSE_2	IF_7	IF_8
0x40006d3	            0x7408	                            je 0x40006dd	      1128	reloc.c	FUNCTION_5	ELSE_2	IF_7	IF_8
0x40006d5	            0x85c9	                           test ecx, ecx	      1128	reloc.c	FUNCTION_5	ELSE_2	IF_7	IF_8
0x40006d7	            0x7404	                            je 0x40006dd	      1128	reloc.c	FUNCTION_5	ELSE_2	IF_7	IF_8
0x40006d9	        0x4c2b7308	                sub r14, qword [rbx + 8]	      1129	reloc.c	FUNCTION_5	ELSE_2	IF_7	IF_8
0x40006dd	            0x85c9	                           test ecx, ecx	      1132	reloc.c	FUNCTION_5	IF_9
0x40006df	            0x7516	                           jne 0x40006f7	      1132	reloc.c	FUNCTION_5	IF_9
0x40006e1	        0x4c897310	             mov qword [rbx + 0x10], r14	      1137	reloc.c	FUNCTION_5	IF_9
0x40006e5	        0x498b4560	            mov rax, qword [r13 + 0x60] 	      1138	reloc.c	FUNCTION_5	IF_9
0x40006e9	        0x48014308	                add qword [rbx + 8], rax	      1138	reloc.c	FUNCTION_5	IF_9
0x40006ed	      0xba02000000	                              mov edx, 2	      1139	reloc.c	FUNCTION_5	IF_9
0x40006f2	      0xe9ba010000	                           jmp 0x40008b1	      1139	reloc.c	FUNCTION_5	IF_9
0x40006f7	        0x498b4560	            mov rax, qword [r13 + 0x60] 	      1148	reloc.c	FUNCTION_5	ELSE_3
0x40006fb	        0x48014308	                add qword [rbx + 8], rax	      1148	reloc.c	FUNCTION_5	ELSE_3
0x40006ff	      0x498b442408	                mov rax, qword [r12 + 8]	      1151	reloc.c	FUNCTION_5	ELSE_3	IF_10
0x4000704	        0x83780802	                  cmp dword [rax + 8], 2	      1151	reloc.c	FUNCTION_5	ELSE_3	IF_10
0x4000708	            0x755b	                           jne 0x4000765	      1151	reloc.c	FUNCTION_5	ELSE_3	IF_10
0x400070a	          0x488b00	                    mov rax, qword [rax]	      1152	reloc.c	FUNCTION_5	ELSE_3	IF_10	CALL_6
0x400070d	      0xbf00000000	                              mov edi, 0	      1152	reloc.c	FUNCTION_5	ELSE_3	IF_10	CALL_6
0x4000712	      0xb912000000	                           mov ecx, 0x12	      1152	reloc.c	FUNCTION_5	ELSE_3	IF_10	CALL_6
0x4000717	          0x4889c6	                            mov rsi, rax	      1152	reloc.c	FUNCTION_5	ELSE_3	IF_10	CALL_6
0x400071a	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1152	reloc.c	FUNCTION_5	ELSE_3	IF_10	CALL_6
0x400071c	           0xf97c1	                                 seta cl	      1152	reloc.c	FUNCTION_5	ELSE_3	IF_10	CALL_6
0x400071f	           0xf92c2	                                 setb dl	      1152	reloc.c	FUNCTION_5	ELSE_3	IF_10	CALL_6
0x4000722	            0x38d1	                              cmp cl, dl	      1152	reloc.c	FUNCTION_5	ELSE_3	IF_10	CALL_6
0x4000724	            0x743f	                            je 0x4000765	      1152	reloc.c	FUNCTION_5	ELSE_3	IF_10	CALL_6
0x4000726	      0xbf00000000	                              mov edi, 0	      1153	reloc.c	FUNCTION_5	ELSE_3	IF_10	CALL_7
0x400072b	      0xb90f000000	                            mov ecx, 0xf	      1153	reloc.c	FUNCTION_5	ELSE_3	IF_10	CALL_7
0x4000730	          0x4889c6	                            mov rsi, rax	      1153	reloc.c	FUNCTION_5	ELSE_3	IF_10	CALL_7
0x4000733	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1153	reloc.c	FUNCTION_5	ELSE_3	IF_10	CALL_7
0x4000735	           0xf97c1	                                 seta cl	      1153	reloc.c	FUNCTION_5	ELSE_3	IF_10	CALL_7
0x4000738	           0xf92c2	                                 setb dl	      1153	reloc.c	FUNCTION_5	ELSE_3	IF_10	CALL_7
0x400073b	            0x38d1	                              cmp cl, dl	      1153	reloc.c	FUNCTION_5	ELSE_3	IF_10	CALL_7
0x400073d	            0x7426	                            je 0x4000765	      1153	reloc.c	FUNCTION_5	ELSE_3	IF_10	CALL_7
0x400073f	          0x4d29c6	                             sub r14, r8	      1224	reloc.c	FUNCTION_5	ELSE_3	IF_10
0x4000742	      0xbf00000000	                              mov edi, 0	      1226	reloc.c	FUNCTION_5	ELSE_3	IF_10	IF_11	CALL_8
0x4000747	      0xb909000000	                              mov ecx, 9	      1226	reloc.c	FUNCTION_5	ELSE_3	IF_10	IF_11	CALL_8
0x400074c	          0x4889c6	                            mov rsi, rax	      1226	reloc.c	FUNCTION_5	ELSE_3	IF_10	IF_11	CALL_8
0x400074f	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1226	reloc.c	FUNCTION_5	ELSE_3	IF_10	IF_11	CALL_8
0x4000751	           0xf97c2	                                 seta dl	      1226	reloc.c	FUNCTION_5	ELSE_3	IF_10	IF_11	CALL_8
0x4000754	           0xf92c0	                                 setb al	      1226	reloc.c	FUNCTION_5	ELSE_3	IF_10	IF_11	CALL_8
0x4000757	            0x38c2	                              cmp dl, al	      1226	reloc.c	FUNCTION_5	ELSE_3	IF_10	IF_11	CALL_8
0x4000759	            0x740e	                            je 0x4000769	      1226	reloc.c	FUNCTION_5	ELSE_3	IF_10	IF_11	CALL_8
0x400075b	    0x48c743100000	               mov qword [rbx + 0x10], 0	      1227	reloc.c	FUNCTION_5	ELSE_3	IF_10	IF_11
0x4000763	            0xeb04	                           jmp 0x4000769	      1227	reloc.c	FUNCTION_5	ELSE_3	IF_10	IF_11
0x4000765	        0x4c897310	             mov qword [rbx + 0x10], r14	      1231	reloc.c	FUNCTION_5	ELSE_3	ELSE_4
0x4000769	      0xbb02000000	                              mov ebx, 2	      1024	reloc.c	FUNCTION_5
0x400076e	        0x837d1800	               cmp dword [rbp + 0x18], 0	      1242	reloc.c	FUNCTION_5	IF_12
0x4000772	            0x741d	                            je 0x4000791	      1242	reloc.c	FUNCTION_5	IF_12
0x4000774	          0x4c89e7	                            mov rdi, r12	      1243	reloc.c	FUNCTION_5	IF_12	CALL_9
0x4000777	      0xe800000000	                          call 0x400077c	      1243	reloc.c	FUNCTION_5	IF_12	CALL_9
0x400077c	          0x8b5504	                mov edx, dword [rbp + 4]	      1243	reloc.c	FUNCTION_5	IF_12	CALL_9
0x400077f	          0x8b750c	              mov esi, dword [rbp + 0xc]	      1243	reloc.c	FUNCTION_5	IF_12	CALL_9
0x4000782	          0x8b7d18	            mov edi, dword [rbp + 0x18] 	      1243	reloc.c	FUNCTION_5	IF_12	CALL_9
0x4000785	          0x4d89f0	                             mov r8, r14	      1243	reloc.c	FUNCTION_5	IF_12	CALL_9
0x4000788	            0x89c1	                            mov ecx, eax	      1243	reloc.c	FUNCTION_5	IF_12	CALL_9
0x400078a	      0xe800000000	                          call 0x400078f	      1243	reloc.c	FUNCTION_5	IF_12	CALL_9
0x400078f	            0x89c3	                            mov ebx, eax	      1243	reloc.c	FUNCTION_5	IF_12	CALL_9
0x4000791	          0x8b4d04	                mov ecx, dword [rbp + 4]	      1276	reloc.c	FUNCTION_5
0x4000794	          0x49d3ee	                             shr r14, cl	      1276	reloc.c	FUNCTION_5
0x4000797	          0x8b4d14	            mov ecx, dword [rbp + 0x14] 	      1279	reloc.c	FUNCTION_5
0x400079a	          0x49d3e6	                             shl r14, cl	      1279	reloc.c	FUNCTION_5
0x400079d	      0x4c8b6c2408	                mov r13, qword [rsp + 8]	      1317	reloc.c	FUNCTION_5
0x40007a2	          0x4d29fd	                            sub r13, r15	      1317	reloc.c	FUNCTION_5
0x40007a5	        0x4c032c24	                    add r13, qword [rsp]	      1317	reloc.c	FUNCTION_5
0x40007a9	          0x8b4508	                mov eax, dword [rbp + 8]	      1319	reloc.c	FUNCTION_5	SWITCH_1
0x40007ac	          0x83c002	                              add eax, 2	      1319	reloc.c	FUNCTION_5	SWITCH_1
0x40007af	          0x83f806	                              cmp eax, 6	      1319	reloc.c	FUNCTION_5	SWITCH_1
0x40007b2	     0xf87f4000000	                            ja 0x40008ac	      1319	reloc.c	FUNCTION_5	SWITCH_1
0x40007b8	            0x89c0	                            mov eax, eax	      1319	reloc.c	FUNCTION_5	SWITCH_1
0x40007ba	    0xff24c5000000	                       jmp qword [rax*8]	      1319	reloc.c	FUNCTION_5	SWITCH_1
0x40007c1	            0x89da	                            mov edx, ebx	      1367	reloc.c	FUNCTION_5
0x40007c3	      0xe9e9000000	                           jmp 0x40008b1	      1367	reloc.c	FUNCTION_5
0x40007c8	      0x410fb65500	                   movzx edx, byte [r13]	      1323	reloc.c	FUNCTION_5	SWITCH_1	CALL_11
0x40007cd	            0x89d0	                            mov eax, edx	      1325	reloc.c	FUNCTION_5	SWITCH_1	CALL_12
0x40007cf	          0x224538	               and al, byte [rbp + 0x38]	      1325	reloc.c	FUNCTION_5	SWITCH_1	CALL_12
0x40007d2	          0x4401f0	                           add eax, r14d	      1325	reloc.c	FUNCTION_5	SWITCH_1	CALL_12
0x40007d5	            0x31d0	                            xor eax, edx	      1325	reloc.c	FUNCTION_5	SWITCH_1	CALL_12
0x40007d7	          0x224540	               and al, byte [rbp + 0x40]	      1325	reloc.c	FUNCTION_5	SWITCH_1	CALL_12
0x40007da	            0x31d0	                            xor eax, edx	      1325	reloc.c	FUNCTION_5	SWITCH_1	CALL_12
0x40007dc	        0x41884500	                      mov byte [r13], al	      1325	reloc.c	FUNCTION_5	SWITCH_1	CALL_12
0x40007e0	            0x89da	                            mov edx, ebx	      1367	reloc.c	FUNCTION_5
0x40007e2	      0xe9ca000000	                           jmp 0x40008b1	      1327	reloc.c	FUNCTION_5	SWITCH_1
0x40007e7	      0x498b442408	                mov rax, qword [r12 + 8]	      1331	reloc.c	FUNCTION_5	SWITCH_1	CALL_13
0x40007ec	          0x4c89ef	                            mov rdi, r13	      1331	reloc.c	FUNCTION_5	SWITCH_1	CALL_13
0x40007ef	          0xff5050	                 call qword [rax + 0x50]	      1331	reloc.c	FUNCTION_5	SWITCH_1	CALL_13
0x40007f2	            0x89c7	                            mov edi, eax	      1333	reloc.c	FUNCTION_5	SWITCH_1	CALL_14
0x40007f4	        0x66237d38	               and di, word [rbp + 0x38]	      1333	reloc.c	FUNCTION_5	SWITCH_1	CALL_14
0x40007f8	          0x4401f7	                           add edi, r14d	      1333	reloc.c	FUNCTION_5	SWITCH_1	CALL_14
0x40007fb	            0x31c7	                            xor edi, eax	      1333	reloc.c	FUNCTION_5	SWITCH_1	CALL_14
0x40007fd	        0x66237d40	               and di, word [rbp + 0x40]	      1333	reloc.c	FUNCTION_5	SWITCH_1	CALL_14
0x4000801	            0x31f8	                            xor eax, edi	      1333	reloc.c	FUNCTION_5	SWITCH_1	CALL_14
0x4000803	        0x480fbff8	                           movsx rdi, ax	      1333	reloc.c	FUNCTION_5	SWITCH_1	CALL_14
0x4000807	      0x498b442408	                mov rax, qword [r12 + 8]	      1333	reloc.c	FUNCTION_5	SWITCH_1	CALL_14
0x400080c	          0x4c89ee	                            mov rsi, r13	      1333	reloc.c	FUNCTION_5	SWITCH_1	CALL_14
0x400080f	          0xff5060	                 call qword [rax + 0x60]	      1333	reloc.c	FUNCTION_5	SWITCH_1	CALL_14
0x4000812	            0x89da	                            mov edx, ebx	      1367	reloc.c	FUNCTION_5
0x4000814	      0xe998000000	                           jmp 0x40008b1	      1335	reloc.c	FUNCTION_5	SWITCH_1
0x4000819	      0x498b442408	                mov rax, qword [r12 + 8]	      1338	reloc.c	FUNCTION_5	SWITCH_1	CALL_15
0x400081e	          0x4c89ef	                            mov rdi, r13	      1338	reloc.c	FUNCTION_5	SWITCH_1	CALL_15
0x4000821	          0xff5038	                 call qword [rax + 0x38]	      1338	reloc.c	FUNCTION_5	SWITCH_1	CALL_15
0x4000824	          0x4889c2	                            mov rdx, rax	      1340	reloc.c	FUNCTION_5	SWITCH_1	CALL_16
0x4000827	        0x48235538	             and rdx, qword [rbp + 0x38]	      1340	reloc.c	FUNCTION_5	SWITCH_1	CALL_16
0x400082b	          0x4c01f2	                            add rdx, r14	      1340	reloc.c	FUNCTION_5	SWITCH_1	CALL_16
0x400082e	          0x4831c2	                            xor rdx, rax	      1340	reloc.c	FUNCTION_5	SWITCH_1	CALL_16
0x4000831	        0x48235540	             and rdx, qword [rbp + 0x40]	      1340	reloc.c	FUNCTION_5	SWITCH_1	CALL_16
0x4000835	          0x4889d7	                            mov rdi, rdx	      1340	reloc.c	FUNCTION_5	SWITCH_1	CALL_16
0x4000838	          0x4831c7	                            xor rdi, rax	      1340	reloc.c	FUNCTION_5	SWITCH_1	CALL_16
0x400083b	      0x498b442408	                mov rax, qword [r12 + 8]	      1340	reloc.c	FUNCTION_5	SWITCH_1	CALL_16
0x4000840	          0x4c89ee	                            mov rsi, r13	      1340	reloc.c	FUNCTION_5	SWITCH_1	CALL_16
0x4000843	          0xff5048	                 call qword [rax + 0x48]	      1340	reloc.c	FUNCTION_5	SWITCH_1	CALL_16
0x4000846	            0x89da	                            mov edx, ebx	      1367	reloc.c	FUNCTION_5
0x4000848	            0xeb67	                           jmp 0x40008b1	      1342	reloc.c	FUNCTION_5	SWITCH_1
0x400084a	      0x498b442408	                mov rax, qword [r12 + 8]	      1345	reloc.c	FUNCTION_5	SWITCH_1	CALL_17
0x400084f	          0x4c89ef	                            mov rdi, r13	      1345	reloc.c	FUNCTION_5	SWITCH_1	CALL_17
0x4000852	          0xff5038	                 call qword [rax + 0x38]	      1345	reloc.c	FUNCTION_5	SWITCH_1	CALL_17
0x4000855	          0x4889c2	                            mov rdx, rax	      1348	reloc.c	FUNCTION_5	SWITCH_1	CALL_18
0x4000858	        0x48235538	             and rdx, qword [rbp + 0x38]	      1348	reloc.c	FUNCTION_5	SWITCH_1	CALL_18
0x400085c	          0x4c29f2	                            sub rdx, r14	      1348	reloc.c	FUNCTION_5	SWITCH_1	CALL_18
0x400085f	          0x4831c2	                            xor rdx, rax	      1348	reloc.c	FUNCTION_5	SWITCH_1	CALL_18
0x4000862	        0x48235540	             and rdx, qword [rbp + 0x40]	      1348	reloc.c	FUNCTION_5	SWITCH_1	CALL_18
0x4000866	          0x4889d7	                            mov rdi, rdx	      1348	reloc.c	FUNCTION_5	SWITCH_1	CALL_18
0x4000869	          0x4831c7	                            xor rdi, rax	      1348	reloc.c	FUNCTION_5	SWITCH_1	CALL_18
0x400086c	      0x498b442408	                mov rax, qword [r12 + 8]	      1348	reloc.c	FUNCTION_5	SWITCH_1	CALL_18
0x4000871	          0x4c89ee	                            mov rsi, r13	      1348	reloc.c	FUNCTION_5	SWITCH_1	CALL_18
0x4000874	          0xff5048	                 call qword [rax + 0x48]	      1348	reloc.c	FUNCTION_5	SWITCH_1	CALL_18
0x4000877	            0x89da	                            mov edx, ebx	      1367	reloc.c	FUNCTION_5
0x4000879	            0xeb36	                           jmp 0x40008b1	      1350	reloc.c	FUNCTION_5	SWITCH_1
0x400087b	      0x498b442408	                mov rax, qword [r12 + 8]	      1358	reloc.c	FUNCTION_5	SWITCH_1	CALL_19
0x4000880	          0x4c89ef	                            mov rdi, r13	      1358	reloc.c	FUNCTION_5	SWITCH_1	CALL_19
0x4000883	          0xff5020	                 call qword [rax + 0x20]	      1358	reloc.c	FUNCTION_5	SWITCH_1	CALL_19
0x4000886	          0x4889c2	                            mov rdx, rax	      1358	reloc.c	FUNCTION_5	SWITCH_1	CALL_19
0x4000889	        0x48235538	             and rdx, qword [rbp + 0x38]	      1358	reloc.c	FUNCTION_5	SWITCH_1	CALL_19
0x400088d	          0x4c01f2	                            add rdx, r14	      1358	reloc.c	FUNCTION_5	SWITCH_1	CALL_19
0x4000890	          0x4831c2	                            xor rdx, rax	      1358	reloc.c	FUNCTION_5	SWITCH_1	CALL_19
0x4000893	        0x48235540	             and rdx, qword [rbp + 0x40]	      1358	reloc.c	FUNCTION_5	SWITCH_1	CALL_19
0x4000897	          0x4831d0	                            xor rax, rdx	      1360	reloc.c	FUNCTION_5	SWITCH_1	CALL_20
0x400089a	          0x4889c7	                            mov rdi, rax	      1360	reloc.c	FUNCTION_5	SWITCH_1	CALL_20
0x400089d	      0x498b442408	                mov rax, qword [r12 + 8]	      1360	reloc.c	FUNCTION_5	SWITCH_1	CALL_20
0x40008a2	          0x4c89ee	                            mov rsi, r13	      1360	reloc.c	FUNCTION_5	SWITCH_1	CALL_20
0x40008a5	          0xff5030	                 call qword [rax + 0x30]	      1360	reloc.c	FUNCTION_5	SWITCH_1	CALL_20
0x40008a8	            0x89da	                            mov edx, ebx	      1367	reloc.c	FUNCTION_5
0x40008aa	            0xeb05	                           jmp 0x40008b1	      1362	reloc.c	FUNCTION_5	SWITCH_1
0x40008ac	      0xba07000000	                              mov edx, 7	      1364	reloc.c	FUNCTION_5	SWITCH_1
0x40008b1	            0x89d0	                            mov eax, edx	      1368	reloc.c	FUNCTION_5
0x40008b3	        0x4883c418	                           add rsp, 0x18	      1368	reloc.c	FUNCTION_5
0x40008b7	              0x5b	                                 pop rbx	      1368	reloc.c	FUNCTION_5
0x40008b8	              0x5d	                                 pop rbp	      1368	reloc.c	FUNCTION_5
0x40008b9	            0x415c	                                 pop r12	      1368	reloc.c	FUNCTION_5
0x40008bb	            0x415d	                                 pop r13	      1368	reloc.c	FUNCTION_5
0x40008bd	            0x415e	                                 pop r14	      1368	reloc.c	FUNCTION_5
0x40008bf	            0x415f	                                 pop r15	      1368	reloc.c	FUNCTION_5
0x40008c1	              0xc3	                                     ret	      1368	reloc.c	FUNCTION_5
_bfd_clear_contents	FOR,0:CALL,15:functions,0:ELSE,0:SWITCH,2:WHILE,0:IF,1:DO,0	132
0x4000bfc	            0x4156	                                push r14	      1621	reloc.c	FUNCTION_8
0x4000bfe	            0x4155	                                push r13	      1621	reloc.c	FUNCTION_8
0x4000c00	            0x4154	                                push r12	      1621	reloc.c	FUNCTION_8
0x4000c02	              0x55	                                push rbp	      1621	reloc.c	FUNCTION_8
0x4000c03	              0x53	                                push rbx	      1621	reloc.c	FUNCTION_8
0x4000c04	          0x4889fd	                            mov rbp, rdi	      1621	reloc.c	FUNCTION_8
0x4000c07	          0x4989f5	                            mov r13, rsi	      1621	reloc.c	FUNCTION_8
0x4000c0a	          0x4989d6	                            mov r14, rdx	      1621	reloc.c	FUNCTION_8
0x4000c0d	          0x4989cc	                            mov r12, rcx	      1621	reloc.c	FUNCTION_8
0x4000c10	      0xe800000000	                          call 0x4000c15	      1626	reloc.c	FUNCTION_8	CALL_1
0x4000c15	          0x83f808	                              cmp eax, 8	      1627	reloc.c	FUNCTION_8	SWITCH_1
0x4000c18	            0x770b	                            ja 0x4000c25	      1627	reloc.c	FUNCTION_8	SWITCH_1
0x4000c1a	            0x89c3	                            mov ebx, eax	      1627	reloc.c	FUNCTION_8	SWITCH_1
0x4000c1c	            0x89c0	                            mov eax, eax	      1627	reloc.c	FUNCTION_8	SWITCH_1
0x4000c1e	    0xff24c5000000	                       jmp qword [rax*8]	      1627	reloc.c	FUNCTION_8	SWITCH_1
0x4000c25	      0xba00000000	                              mov edx, 0	      1630	reloc.c	FUNCTION_8	SWITCH_1	CALL_2
0x4000c2a	      0xbe5e060000	                          mov esi, 0x65e	      1630	reloc.c	FUNCTION_8	SWITCH_1	CALL_2
0x4000c2f	      0xbf00000000	                              mov edi, 0	      1630	reloc.c	FUNCTION_8	SWITCH_1	CALL_2
0x4000c34	      0xe800000000	                          call 0x4000c39	      1630	reloc.c	FUNCTION_8	SWITCH_1	CALL_2
0x4000c39	      0x410fb60424	                   movzx eax, byte [r12]	      1634	reloc.c	FUNCTION_8	SWITCH_1	CALL_3
0x4000c3e	        0x488b5540	            mov rdx, qword [rbp + 0x40] 	      1652	reloc.c	FUNCTION_8
0x4000c42	          0x4889d1	                            mov rcx, rdx	      1652	reloc.c	FUNCTION_8
0x4000c45	          0x48f7d1	                                 not rcx	      1652	reloc.c	FUNCTION_8
0x4000c48	          0x4821c8	                            and rax, rcx	      1652	reloc.c	FUNCTION_8
0x4000c4b	          0x498b36	                    mov rsi, qword [r14]	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4000c4e	      0xbf00000000	                              mov edi, 0	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4000c53	      0xb90e000000	                            mov ecx, 0xe	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4000c58	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4000c5a	        0x400f97c6	                                seta sil	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4000c5e	           0xf92c1	                                 setb cl	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4000c61	          0x4038ce	                             cmp sil, cl	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4000c64	     0xf8423010000	                            je 0x4000d8d	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4000c6a	      0xe9dd000000	                           jmp 0x4000d4c	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4000c6f	        0x498b4508	                mov rax, qword [r13 + 8]	      1637	reloc.c	FUNCTION_8	SWITCH_1	CALL_4
0x4000c73	          0x4c89e7	                            mov rdi, r12	      1637	reloc.c	FUNCTION_8	SWITCH_1	CALL_4
0x4000c76	          0xff5050	                 call qword [rax + 0x50]	      1637	reloc.c	FUNCTION_8	SWITCH_1	CALL_4
0x4000c79	        0x488b5540	            mov rdx, qword [rbp + 0x40] 	      1652	reloc.c	FUNCTION_8
0x4000c7d	          0x4889d1	                            mov rcx, rdx	      1652	reloc.c	FUNCTION_8
0x4000c80	          0x48f7d1	                                 not rcx	      1652	reloc.c	FUNCTION_8
0x4000c83	          0x4821c8	                            and rax, rcx	      1652	reloc.c	FUNCTION_8
0x4000c86	          0x498b36	                    mov rsi, qword [r14]	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4000c89	      0xbf00000000	                              mov edi, 0	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4000c8e	      0xb90e000000	                            mov ecx, 0xe	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4000c93	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4000c95	        0x400f97c6	                                seta sil	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4000c99	           0xf92c1	                                 setb cl	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4000c9c	          0x4038ce	                             cmp sil, cl	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4000c9f	     0xf84ef000000	                            je 0x4000d94	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4000ca5	      0xe9a8000000	                           jmp 0x4000d52	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4000caa	        0x498b4508	                mov rax, qword [r13 + 8]	      1640	reloc.c	FUNCTION_8	SWITCH_1	CALL_5
0x4000cae	          0x4c89e7	                            mov rdi, r12	      1640	reloc.c	FUNCTION_8	SWITCH_1	CALL_5
0x4000cb1	          0xff5038	                 call qword [rax + 0x38]	      1640	reloc.c	FUNCTION_8	SWITCH_1	CALL_5
0x4000cb4	        0x488b5540	            mov rdx, qword [rbp + 0x40] 	      1652	reloc.c	FUNCTION_8
0x4000cb8	          0x4889d1	                            mov rcx, rdx	      1652	reloc.c	FUNCTION_8
0x4000cbb	          0x48f7d1	                                 not rcx	      1652	reloc.c	FUNCTION_8
0x4000cbe	          0x4821c8	                            and rax, rcx	      1652	reloc.c	FUNCTION_8
0x4000cc1	          0x498b36	                    mov rsi, qword [r14]	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4000cc4	      0xbf00000000	                              mov edi, 0	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4000cc9	      0xb90e000000	                            mov ecx, 0xe	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4000cce	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4000cd0	        0x400f97c6	                                seta sil	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4000cd4	           0xf92c1	                                 setb cl	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4000cd7	          0x4038ce	                             cmp sil, cl	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4000cda	     0xf8581000000	                           jne 0x4000d61	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4000ce0	      0xe99a000000	                           jmp 0x4000d7f	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4000ce5	        0x498b4508	                mov rax, qword [r13 + 8]	      1644	reloc.c	FUNCTION_8	SWITCH_1	CALL_6
0x4000ce9	          0x4c89e7	                            mov rdi, r12	      1644	reloc.c	FUNCTION_8	SWITCH_1	CALL_6
0x4000cec	          0xff5020	                 call qword [rax + 0x20]	      1644	reloc.c	FUNCTION_8	SWITCH_1	CALL_6
0x4000cef	        0x488b5540	            mov rdx, qword [rbp + 0x40] 	      1652	reloc.c	FUNCTION_8
0x4000cf3	          0x4889d1	                            mov rcx, rdx	      1652	reloc.c	FUNCTION_8
0x4000cf6	          0x48f7d1	                                 not rcx	      1652	reloc.c	FUNCTION_8
0x4000cf9	          0x4821c8	                            and rax, rcx	      1652	reloc.c	FUNCTION_8
0x4000cfc	          0x498b36	                    mov rsi, qword [r14]	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4000cff	      0xbf00000000	                              mov edi, 0	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4000d04	      0xb90e000000	                            mov ecx, 0xe	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4000d09	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4000d0b	        0x400f97c6	                                seta sil	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4000d0f	           0xf92c1	                                 setb cl	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4000d12	          0x4038ce	                             cmp sil, cl	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4000d15	            0x7559	                           jne 0x4000d70	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4000d17	            0xeb6d	                           jmp 0x4000d86	      1656	reloc.c	FUNCTION_8	IF_1	CALL_9
0x4000d19	        0x4883c801	                               or rax, 1	      1659	reloc.c	FUNCTION_8	IF_1
0x4000d1d	          0x83fb02	                              cmp ebx, 2	      1662	reloc.c	FUNCTION_8	SWITCH_2
0x4000d20	            0x7430	                            je 0x4000d52	      1662	reloc.c	FUNCTION_8	SWITCH_2
0x4000d22	          0x83fb02	                              cmp ebx, 2	      1662	reloc.c	FUNCTION_8	SWITCH_2
0x4000d25	            0x7707	                            ja 0x4000d2e	      1662	reloc.c	FUNCTION_8	SWITCH_2
0x4000d27	          0x83fb01	                              cmp ebx, 1	      1662	reloc.c	FUNCTION_8	SWITCH_2
0x4000d2a	            0x750c	                           jne 0x4000d38	      1662	reloc.c	FUNCTION_8	SWITCH_2
0x4000d2c	            0xeb1e	                           jmp 0x4000d4c	      1662	reloc.c	FUNCTION_8	SWITCH_2
0x4000d2e	          0x83fb04	                              cmp ebx, 4	      1662	reloc.c	FUNCTION_8	SWITCH_2
0x4000d31	            0x742e	                            je 0x4000d61	      1662	reloc.c	FUNCTION_8	SWITCH_2
0x4000d33	          0x83fb08	                              cmp ebx, 8	      1662	reloc.c	FUNCTION_8	SWITCH_2
0x4000d36	            0x7438	                            je 0x4000d70	      1662	reloc.c	FUNCTION_8	SWITCH_2
0x4000d38	      0xba00000000	                              mov edx, 0	      1666	reloc.c	FUNCTION_8	SWITCH_2	CALL_10
0x4000d3d	      0xbe82060000	                          mov esi, 0x682	      1666	reloc.c	FUNCTION_8	SWITCH_2	CALL_10
0x4000d42	      0xbf00000000	                              mov edi, 0	      1666	reloc.c	FUNCTION_8	SWITCH_2	CALL_10
0x4000d47	      0xe800000000	                          call 0x4000d4c	      1666	reloc.c	FUNCTION_8	SWITCH_2	CALL_10
0x4000d4c	        0x41880424	                      mov byte [r12], al	      1668	reloc.c	FUNCTION_8	SWITCH_2	CALL_11
0x4000d50	            0xeb4c	                           jmp 0x4000d9e	      1669	reloc.c	FUNCTION_8	SWITCH_2
0x4000d52	        0x498b5508	                mov rdx, qword [r13 + 8]	      1671	reloc.c	FUNCTION_8	SWITCH_2	CALL_12
0x4000d56	          0x4c89e6	                            mov rsi, r12	      1671	reloc.c	FUNCTION_8	SWITCH_2	CALL_12
0x4000d59	          0x4889c7	                            mov rdi, rax	      1671	reloc.c	FUNCTION_8	SWITCH_2	CALL_12
0x4000d5c	          0xff5260	                 call qword [rdx + 0x60]	      1671	reloc.c	FUNCTION_8	SWITCH_2	CALL_12
0x4000d5f	            0xeb3d	                           jmp 0x4000d9e	      1672	reloc.c	FUNCTION_8	SWITCH_2
0x4000d61	        0x498b5508	                mov rdx, qword [r13 + 8]	      1674	reloc.c	FUNCTION_8	SWITCH_2	CALL_13
0x4000d65	          0x4c89e6	                            mov rsi, r12	      1674	reloc.c	FUNCTION_8	SWITCH_2	CALL_13
0x4000d68	          0x4889c7	                            mov rdi, rax	      1674	reloc.c	FUNCTION_8	SWITCH_2	CALL_13
0x4000d6b	          0xff5248	                 call qword [rdx + 0x48]	      1674	reloc.c	FUNCTION_8	SWITCH_2	CALL_13
0x4000d6e	            0xeb2e	                           jmp 0x4000d9e	      1675	reloc.c	FUNCTION_8	SWITCH_2
0x4000d70	        0x498b5508	                mov rdx, qword [r13 + 8]	      1678	reloc.c	FUNCTION_8	SWITCH_2	CALL_14
0x4000d74	          0x4c89e6	                            mov rsi, r12	      1678	reloc.c	FUNCTION_8	SWITCH_2	CALL_14
0x4000d77	          0x4889c7	                            mov rdi, rax	      1678	reloc.c	FUNCTION_8	SWITCH_2	CALL_14
0x4000d7a	          0xff5230	                 call qword [rdx + 0x30]	      1678	reloc.c	FUNCTION_8	SWITCH_2	CALL_14
0x4000d7d	            0xeb1f	                           jmp 0x4000d9e	      1682	reloc.c	FUNCTION_8	SWITCH_2
0x4000d7f	          0xf6c201	                              test dl, 1	      1658	reloc.c	FUNCTION_8	IF_1
0x4000d82	            0x7595	                           jne 0x4000d19	      1658	reloc.c	FUNCTION_8	IF_1
0x4000d84	            0xebdb	                           jmp 0x4000d61	      1658	reloc.c	FUNCTION_8	IF_1
0x4000d86	          0xf6c201	                              test dl, 1	      1658	reloc.c	FUNCTION_8	IF_1
0x4000d89	            0x758e	                           jne 0x4000d19	      1658	reloc.c	FUNCTION_8	IF_1
0x4000d8b	            0xebe3	                           jmp 0x4000d70	      1658	reloc.c	FUNCTION_8	IF_1
0x4000d8d	          0xf6c201	                              test dl, 1	      1658	reloc.c	FUNCTION_8	IF_1
0x4000d90	            0x74ba	                            je 0x4000d4c	      1658	reloc.c	FUNCTION_8	IF_1
0x4000d92	            0xeb85	                           jmp 0x4000d19	      1658	reloc.c	FUNCTION_8	IF_1
0x4000d94	          0xf6c201	                              test dl, 1	      1658	reloc.c	FUNCTION_8	IF_1
0x4000d97	            0x74b9	                            je 0x4000d52	      1658	reloc.c	FUNCTION_8	IF_1
0x4000d99	      0xe97bffffff	                           jmp 0x4000d19	      1658	reloc.c	FUNCTION_8	IF_1
0x4000d9e	              0x5b	                                 pop rbx	      1684	reloc.c	FUNCTION_8
0x4000d9f	              0x5d	                                 pop rbp	      1684	reloc.c	FUNCTION_8
0x4000da0	            0x415c	                                 pop r12	      1684	reloc.c	FUNCTION_8
0x4000da2	            0x415d	                                 pop r13	      1684	reloc.c	FUNCTION_8
0x4000da4	            0x415e	                                 pop r14	      1684	reloc.c	FUNCTION_8
0x4000da6	              0xc3	                                     ret	      1684	reloc.c	FUNCTION_8
bfd_default_reloc_type_lookup	FOR,0:CALL,5:functions,0:ELSE,0:SWITCH,2:WHILE,0:IF,0:DO,0	34
0x4000dcd	        0x4883ec08	                              sub rsp, 8	      8042	reloc.c	FUNCTION_11
0x4000dd1	    0x81fe2b020000	                          cmp esi, 0x22b	      8043	reloc.c	FUNCTION_11	SWITCH_1
0x4000dd7	            0x755f	                           jne 0x4000e38	      8043	reloc.c	FUNCTION_11	SWITCH_1
0x4000dd9	      0xe800000000	                          call 0x4000dde	      8048	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_1
0x4000dde	            0x89c2	                            mov edx, eax	      8048	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_1
0x4000de0	      0xb800000000	                              mov eax, 0	      8054	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2
0x4000de5	          0x83fa20	                           cmp edx, 0x20	      8048	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_1
0x4000de8	            0x7462	                            je 0x4000e4c	      8048	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_1
0x4000dea	          0x83fa40	                           cmp edx, 0x40	      8048	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_1
0x4000ded	            0x7407	                            je 0x4000df6	      8048	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_1
0x4000def	          0x83fa10	                           cmp edx, 0x10	      8048	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_1
0x4000df2	            0x752e	                           jne 0x4000e22	      8048	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_1
0x4000df4	            0xeb16	                           jmp 0x4000e0c	      8048	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_1
0x4000df6	      0xbe731f0000	                         mov esi, 0x1f73	      8051	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_2
0x4000dfb	      0xbf00000000	                              mov edi, 0	      8051	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_2
0x4000e00	      0xe800000000	                          call 0x4000e05	      8051	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_2
0x4000e05	      0xb800000000	                              mov eax, 0	      8065	reloc.c	FUNCTION_11
0x4000e0a	            0xeb40	                           jmp 0x4000e4c	      8052	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2
0x4000e0c	      0xbe781f0000	                         mov esi, 0x1f78	      8056	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_3
0x4000e11	      0xbf00000000	                              mov edi, 0	      8056	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_3
0x4000e16	      0xe800000000	                          call 0x4000e1b	      8056	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_3
0x4000e1b	      0xb800000000	                              mov eax, 0	      8065	reloc.c	FUNCTION_11
0x4000e20	            0xeb2a	                           jmp 0x4000e4c	      8057	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2
0x4000e22	      0xbe7b1f0000	                         mov esi, 0x1f7b	      8059	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_4
0x4000e27	      0xbf00000000	                              mov edi, 0	      8059	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_4
0x4000e2c	      0xe800000000	                          call 0x4000e31	      8059	reloc.c	FUNCTION_11	SWITCH_1	SWITCH_2	CALL_4
0x4000e31	      0xb800000000	                              mov eax, 0	      8065	reloc.c	FUNCTION_11
0x4000e36	            0xeb14	                           jmp 0x4000e4c	      8065	reloc.c	FUNCTION_11
0x4000e38	      0xbe7f1f0000	                         mov esi, 0x1f7f	      8063	reloc.c	FUNCTION_11	SWITCH_1	CALL_5
0x4000e3d	      0xbf00000000	                              mov edi, 0	      8063	reloc.c	FUNCTION_11	SWITCH_1	CALL_5
0x4000e42	      0xe800000000	                          call 0x4000e47	      8063	reloc.c	FUNCTION_11	SWITCH_1	CALL_5
0x4000e47	      0xb800000000	                              mov eax, 0	      8065	reloc.c	FUNCTION_11
0x4000e4c	        0x4883c408	                              add rsp, 8	      8066	reloc.c	FUNCTION_11
0x4000e50	              0xc3	                                     ret	      8066	reloc.c	FUNCTION_11
bfd_get_reloc_size	FOR,0:CALL,1:functions,0:ELSE,0:SWITCH,1:WHILE,0:IF,0:DO,0	28
0x4000040	        0x4883ec08	                              sub rsp, 8	       431	reloc.c	FUNCTION_1
0x4000044	          0x8b4708	                mov eax, dword [rdi + 8]	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4000047	          0x83c002	                              add eax, 2	       432	reloc.c	FUNCTION_1	SWITCH_1
0x400004a	          0x83f80a	                            cmp eax, 0xa	       432	reloc.c	FUNCTION_1	SWITCH_1
0x400004d	            0x7733	                            ja 0x4000082	       432	reloc.c	FUNCTION_1	SWITCH_1
0x400004f	            0x89c0	                            mov eax, eax	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4000051	    0xff24c5000000	                       jmp qword [rax*8]	       432	reloc.c	FUNCTION_1	SWITCH_1
0x4000058	      0xb801000000	                              mov eax, 1	       435	reloc.c	FUNCTION_1	SWITCH_1
0x400005d	            0xeb43	                           jmp 0x40000a2	       435	reloc.c	FUNCTION_1	SWITCH_1
0x400005f	      0xb804000000	                              mov eax, 4	       437	reloc.c	FUNCTION_1	SWITCH_1
0x4000064	            0xeb3c	                           jmp 0x40000a2	       437	reloc.c	FUNCTION_1	SWITCH_1
0x4000066	      0xb800000000	                              mov eax, 0	       438	reloc.c	FUNCTION_1	SWITCH_1
0x400006b	            0xeb35	                           jmp 0x40000a2	       438	reloc.c	FUNCTION_1	SWITCH_1
0x400006d	      0xb808000000	                              mov eax, 8	       439	reloc.c	FUNCTION_1	SWITCH_1
0x4000072	            0xeb2e	                           jmp 0x40000a2	       439	reloc.c	FUNCTION_1	SWITCH_1
0x4000074	      0xb810000000	                           mov eax, 0x10	       440	reloc.c	FUNCTION_1	SWITCH_1
0x4000079	            0xeb27	                           jmp 0x40000a2	       440	reloc.c	FUNCTION_1	SWITCH_1
0x400007b	      0xb804000000	                              mov eax, 4	       442	reloc.c	FUNCTION_1	SWITCH_1
0x4000080	            0xeb20	                           jmp 0x40000a2	       442	reloc.c	FUNCTION_1	SWITCH_1
0x4000082	      0xba00000000	                              mov edx, 0	       443	reloc.c	FUNCTION_1	SWITCH_1	CALL_1
0x4000087	      0xbebb010000	                          mov esi, 0x1bb	       443	reloc.c	FUNCTION_1	SWITCH_1	CALL_1
0x400008c	      0xbf00000000	                              mov edi, 0	       443	reloc.c	FUNCTION_1	SWITCH_1	CALL_1
0x4000091	      0xe800000000	                          call 0x4000096	       443	reloc.c	FUNCTION_1	SWITCH_1	CALL_1
0x4000096	      0xb803000000	                              mov eax, 3	       434	reloc.c	FUNCTION_1	SWITCH_1
0x400009b	            0xeb05	                           jmp 0x40000a2	       434	reloc.c	FUNCTION_1	SWITCH_1
0x400009d	      0xb802000000	                              mov eax, 2	       436	reloc.c	FUNCTION_1	SWITCH_1
0x40000a2	        0x4883c408	                              add rsp, 8	       445	reloc.c	FUNCTION_1
0x40000a6	              0xc3	                                     ret	       445	reloc.c	FUNCTION_1
bfd_perform_relocation	FOR,0:CALL,26:functions,0:ELSE,4:SWITCH,1:WHILE,0:IF,14:DO,0	298
0x400019c	            0x4157	                                push r15	       615	reloc.c	FUNCTION_4
0x400019e	            0x4156	                                push r14	       615	reloc.c	FUNCTION_4
0x40001a0	            0x4155	                                push r13	       615	reloc.c	FUNCTION_4
0x40001a2	            0x4154	                                push r12	       615	reloc.c	FUNCTION_4
0x40001a4	              0x55	                                push rbp	       615	reloc.c	FUNCTION_4
0x40001a5	              0x53	                                push rbx	       615	reloc.c	FUNCTION_4
0x40001a6	        0x4883ec28	                           sub rsp, 0x28	       615	reloc.c	FUNCTION_4
0x40001aa	          0x4989fe	                            mov r14, rdi	       615	reloc.c	FUNCTION_4
0x40001ad	          0x4889f3	                            mov rbx, rsi	       615	reloc.c	FUNCTION_4
0x40001b0	      0x4889542408	                mov qword [rsp + 8], rdx	       615	reloc.c	FUNCTION_4
0x40001b5	          0x4989cf	                            mov r15, rcx	       615	reloc.c	FUNCTION_4
0x40001b8	          0x4d89c5	                             mov r13, r8	       615	reloc.c	FUNCTION_4
0x40001bb	        0x488b6e18	            mov rbp, qword [rsi + 0x18] 	       620	reloc.c	FUNCTION_4
0x40001bf	          0x488b06	                    mov rax, qword [rsi]	       624	reloc.c	FUNCTION_4
0x40001c2	          0x4c8b20	                    mov r12, qword [rax]	       624	reloc.c	FUNCTION_4
0x40001c5	      0x498b442420	            mov rax, qword [r12 + 0x20] 	       629	reloc.c	FUNCTION_4	IF_1	CALL_1
0x40001ca	    0x483d00000000	                              cmp rax, 0	       629	reloc.c	FUNCTION_4	IF_1	CALL_1
0x40001d0	            0x7526	                           jne 0x40001f8	       629	reloc.c	FUNCTION_4	IF_1	CALL_1
0x40001d2	    0x41f644241880	           test byte [r12 + 0x18], 0x80 	       631	reloc.c	FUNCTION_4	IF_1
0x40001d8	            0x7511	                           jne 0x40001eb	       631	reloc.c	FUNCTION_4	IF_1
0x40001da	    0xc74424140800	               mov dword [rsp + 0x14], 8	       632	reloc.c	FUNCTION_4	IF_1
0x40001e2	          0x4d85c0	                             test r8, r8	       631	reloc.c	FUNCTION_4	IF_1
0x40001e5	     0xf84c9030000	                            je 0x40005b4	       631	reloc.c	FUNCTION_4	IF_1
0x40001eb	    0xc74424140200	               mov dword [rsp + 0x14], 2	       617	reloc.c	FUNCTION_4
0x40001f3	      0xe9bc030000	                           jmp 0x40005b4	       617	reloc.c	FUNCTION_4
0x40001f8	          0x4885ed	                           test rbp, rbp	       637	reloc.c	FUNCTION_4	IF_2
0x40001fb	     0xf849b030000	                            je 0x400059c	       637	reloc.c	FUNCTION_4	IF_2
0x4000201	    0xc74424140200	               mov dword [rsp + 0x14], 2	       617	reloc.c	FUNCTION_4
0x4000209	        0x488b4520	            mov rax, qword [rbp + 0x20] 	       637	reloc.c	FUNCTION_4	IF_2
0x400020d	          0x4885c0	                           test rax, rax	       637	reloc.c	FUNCTION_4	IF_2
0x4000210	     0xf8469030000	                            je 0x400057f	       637	reloc.c	FUNCTION_4	IF_2
0x4000216	        0x4883ec08	                              sub rsp, 8	       645	reloc.c	FUNCTION_4	IF_2	CALL_2
0x400021a	            0x4151	                                 push r9	       645	reloc.c	FUNCTION_4	IF_2	CALL_2
0x400021c	          0x4d89e9	                             mov r9, r13	       645	reloc.c	FUNCTION_4	IF_2	CALL_2
0x400021f	          0x4d89f8	                             mov r8, r15	       645	reloc.c	FUNCTION_4	IF_2	CALL_2
0x4000222	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       645	reloc.c	FUNCTION_4	IF_2	CALL_2
0x4000227	          0x4c89e2	                            mov rdx, r12	       645	reloc.c	FUNCTION_4	IF_2	CALL_2
0x400022a	          0x4889de	                            mov rsi, rbx	       645	reloc.c	FUNCTION_4	IF_2	CALL_2
0x400022d	          0x4c89f7	                            mov rdi, r14	       645	reloc.c	FUNCTION_4	IF_2	CALL_2
0x4000230	            0xffd0	                                call rax	       645	reloc.c	FUNCTION_4	IF_2	CALL_2
0x4000232	        0x4883c410	                           add rsp, 0x10	       648	reloc.c	FUNCTION_4	IF_2	IF_3
0x4000236	            0x89c2	                            mov edx, eax	       649	reloc.c	FUNCTION_4	IF_2	IF_3
0x4000238	          0x83f805	                              cmp eax, 5	       648	reloc.c	FUNCTION_4	IF_2	IF_3
0x400023b	     0xf8581030000	                           jne 0x40005c2	       648	reloc.c	FUNCTION_4	IF_2	IF_3
0x4000241	      0xe939030000	                           jmp 0x400057f	       648	reloc.c	FUNCTION_4	IF_2	IF_3
0x4000246	        0x498b4760	            mov rax, qword [r15 + 0x60] 	       655	reloc.c	FUNCTION_4	IF_4
0x400024a	        0x48014308	                add qword [rbx + 8], rax	       655	reloc.c	FUNCTION_4	IF_4
0x400024e	      0xba02000000	                              mov edx, 2	       656	reloc.c	FUNCTION_4	IF_4
0x4000253	      0xe96a030000	                           jmp 0x40005c2	       656	reloc.c	FUNCTION_4	IF_4
0x4000258	        0x488b4308	                mov rax, qword [rbx + 8]	       664	reloc.c	FUNCTION_4	CALL_4
0x400025c	      0x4889442418	             mov qword [rsp + 0x18], rax	       664	reloc.c	FUNCTION_4	CALL_4
0x4000261	          0x4c89f7	                            mov rdi, r14	       664	reloc.c	FUNCTION_4	CALL_4
0x4000264	      0xe800000000	                          call 0x4000269	       664	reloc.c	FUNCTION_4	CALL_4
0x4000269	            0x89c0	                            mov eax, eax	       664	reloc.c	FUNCTION_4	CALL_4
0x400026b	    0x480faf442418	            imul rax, qword [rsp + 0x18]	       664	reloc.c	FUNCTION_4	CALL_4
0x4000271	      0x4889442418	             mov qword [rsp + 0x18], rax	       664	reloc.c	FUNCTION_4	CALL_4
0x4000276	          0x4889c1	                            mov rcx, rax	       665	reloc.c	FUNCTION_4	IF_6	CALL_5
0x4000279	          0x4c89fa	                            mov rdx, r15	       665	reloc.c	FUNCTION_4	IF_6	CALL_5
0x400027c	          0x4c89f6	                            mov rsi, r14	       665	reloc.c	FUNCTION_4	IF_6	CALL_5
0x400027f	          0x4889ef	                            mov rdi, rbp	       665	reloc.c	FUNCTION_4	IF_6	CALL_5
0x4000282	      0xe800000000	                          call 0x4000287	       665	reloc.c	FUNCTION_4	IF_6	CALL_5
0x4000287	      0xba04000000	                              mov edx, 4	       666	reloc.c	FUNCTION_4	IF_6
0x400028c	            0x85c0	                           test eax, eax	       665	reloc.c	FUNCTION_4	IF_6	CALL_5
0x400028e	     0xf842e030000	                            je 0x40005c2	       665	reloc.c	FUNCTION_4	IF_6	CALL_5
0x4000294	      0x498b542420	            mov rdx, qword [r12 + 0x20] 	       672	reloc.c	FUNCTION_4	IF_7	CALL_6
0x4000299	      0xb800000000	                              mov eax, 0	       673	reloc.c	FUNCTION_4	IF_7
0x400029e	        0xf6422110	           test byte [rdx + 0x21], 0x10 	       672	reloc.c	FUNCTION_4	IF_7	CALL_6
0x40002a2	            0x7505	                           jne 0x40002a9	       672	reloc.c	FUNCTION_4	IF_7	CALL_6
0x40002a4	      0x498b442410	            mov rax, qword [r12 + 0x10] 	       675	reloc.c	FUNCTION_4	ELSE_1
0x40002a9	          0x4d85ed	                           test r13, r13	       680	reloc.c	FUNCTION_4	IF_8
0x40002ac	            0x740b	                            je 0x40002b9	       680	reloc.c	FUNCTION_4	IF_8
0x40002ae	      0xb900000000	                              mov ecx, 0	       682	reloc.c	FUNCTION_4	IF_8
0x40002b3	        0x837d3000	               cmp dword [rbp + 0x30], 0	       680	reloc.c	FUNCTION_4	IF_8
0x40002b7	            0x7414	                            je 0x40002cd	       680	reloc.c	FUNCTION_4	IF_8
0x40002b9	        0x488b4a68	            mov rcx, qword [rdx + 0x68] 	       677	reloc.c	FUNCTION_4
0x40002bd	          0x4885c9	                           test rcx, rcx	       681	reloc.c	FUNCTION_4	IF_8
0x40002c0	            0x7406	                            je 0x40002c8	       681	reloc.c	FUNCTION_4	IF_8
0x40002c2	        0x488b4928	            mov rcx, qword [rcx + 0x28] 	       684	reloc.c	FUNCTION_4	ELSE_2
0x40002c6	            0xeb05	                           jmp 0x40002cd	       684	reloc.c	FUNCTION_4	ELSE_2
0x40002c8	      0xb900000000	                              mov ecx, 0	       682	reloc.c	FUNCTION_4	IF_8
0x40002cd	        0x4c8b4310	              mov r8, qword [rbx + 0x10]	       689	reloc.c	FUNCTION_4	ELSE_2
0x40002d1	          0x4d89c4	                             mov r12, r8	       689	reloc.c	FUNCTION_4	ELSE_2
0x40002d4	        0x4c036260	             add r12, qword [rdx + 0x60]	       689	reloc.c	FUNCTION_4	ELSE_2
0x40002d8	          0x4c01e0	                            add rax, r12	       689	reloc.c	FUNCTION_4	ELSE_2
0x40002db	        0x4c8d2401	                    lea r12, [rcx + rax]	       689	reloc.c	FUNCTION_4	ELSE_2
0x40002df	        0x837d1000	               cmp dword [rbp + 0x10], 0	       694	reloc.c	FUNCTION_4	ELSE_2	IF_9
0x40002e3	            0x7416	                            je 0x40002fb	       694	reloc.c	FUNCTION_4	ELSE_2	IF_9
0x40002e5	        0x498b4768	            mov rax, qword [r15 + 0x68] 	       725	reloc.c	FUNCTION_4	ELSE_2	IF_9
0x40002e9	        0x4d2b6760	             sub r12, qword [r15 + 0x60]	       724	reloc.c	FUNCTION_4	ELSE_2	IF_9
0x40002ed	        0x4c2b6028	             sub r12, qword [rax + 0x28]	       724	reloc.c	FUNCTION_4	ELSE_2	IF_9
0x40002f1	        0x837d4800	               cmp dword [rbp + 0x48], 0	       727	reloc.c	FUNCTION_4	ELSE_2	IF_9	IF_10
0x40002f5	            0x7404	                            je 0x40002fb	       727	reloc.c	FUNCTION_4	ELSE_2	IF_9	IF_10
0x40002f7	        0x4c2b6308	                sub r12, qword [rbx + 8]	       728	reloc.c	FUNCTION_4	ELSE_2	IF_9	IF_10
0x40002fb	          0x4d85ed	                           test r13, r13	       731	reloc.c	FUNCTION_4	IF_11
0x40002fe	            0x7473	                            je 0x4000373	       731	reloc.c	FUNCTION_4	IF_11
0x4000300	        0x837d3000	               cmp dword [rbp + 0x30], 0	       733	reloc.c	FUNCTION_4	IF_11	IF_12
0x4000304	            0x7515	                           jne 0x400031b	       733	reloc.c	FUNCTION_4	IF_11	IF_12
0x4000306	        0x4c896310	             mov qword [rbx + 0x10], r12	       738	reloc.c	FUNCTION_4	IF_11	IF_12
0x400030a	        0x498b4760	            mov rax, qword [r15 + 0x60] 	       739	reloc.c	FUNCTION_4	IF_11	IF_12
0x400030e	        0x48014308	                add qword [rbx + 8], rax	       739	reloc.c	FUNCTION_4	IF_11	IF_12
0x4000312	        0x8b542414	            mov edx, dword [rsp + 0x14] 	       740	reloc.c	FUNCTION_4	IF_11	IF_12
0x4000316	      0xe9a7020000	                           jmp 0x40005c2	       740	reloc.c	FUNCTION_4	IF_11	IF_12
0x400031b	        0x498b4760	            mov rax, qword [r15 + 0x60] 	       750	reloc.c	FUNCTION_4	IF_11	ELSE_3
0x400031f	        0x48014308	                add qword [rbx + 8], rax	       750	reloc.c	FUNCTION_4	IF_11	ELSE_3
0x4000323	        0x498b4608	                mov rax, qword [r14 + 8]	       753	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13
0x4000327	        0x83780802	                  cmp dword [rax + 8], 2	       753	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13
0x400032b	            0x7542	                           jne 0x400036f	       753	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13
0x400032d	          0x488b00	                    mov rax, qword [rax]	       754	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13	CALL_7
0x4000330	      0xbf00000000	                              mov edi, 0	       754	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13	CALL_7
0x4000335	      0xb912000000	                           mov ecx, 0x12	       754	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13	CALL_7
0x400033a	          0x4889c6	                            mov rsi, rax	       754	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13	CALL_7
0x400033d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       754	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13	CALL_7
0x400033f	           0xf97c1	                                 seta cl	       754	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13	CALL_7
0x4000342	           0xf92c2	                                 setb dl	       754	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13	CALL_7
0x4000345	            0x38d1	                              cmp cl, dl	       754	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13	CALL_7
0x4000347	            0x7426	                            je 0x400036f	       754	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13	CALL_7
0x4000349	      0xbf00000000	                              mov edi, 0	       755	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13	CALL_8
0x400034e	      0xb90f000000	                            mov ecx, 0xf	       755	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13	CALL_8
0x4000353	          0x4889c6	                            mov rsi, rax	       755	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13	CALL_8
0x4000356	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       755	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13	CALL_8
0x4000358	           0xf97c2	                                 seta dl	       755	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13	CALL_8
0x400035b	           0xf92c0	                                 setb al	       755	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13	CALL_8
0x400035e	            0x38c2	                              cmp dl, al	       755	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13	CALL_8
0x4000360	            0x740d	                            je 0x400036f	       755	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13	CALL_8
0x4000362	          0x4d29c4	                             sub r12, r8	       826	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13
0x4000365	    0x48c743100000	               mov qword [rbx + 0x10], 0	       827	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13
0x400036d	            0xeb04	                           jmp 0x4000373	       827	reloc.c	FUNCTION_4	IF_11	ELSE_3	IF_13
0x400036f	        0x4c896310	             mov qword [rbx + 0x10], r12	       831	reloc.c	FUNCTION_4	IF_11	ELSE_3	ELSE_4
0x4000373	        0x837d1800	               cmp dword [rbp + 0x18], 0	       844	reloc.c	FUNCTION_4	IF_14
0x4000377	            0x7426	                            je 0x400039f	       844	reloc.c	FUNCTION_4	IF_14
0x4000379	      0x837c241402	               cmp dword [rsp + 0x14], 2	       844	reloc.c	FUNCTION_4	IF_14
0x400037e	            0x751f	                           jne 0x400039f	       844	reloc.c	FUNCTION_4	IF_14
0x4000380	          0x4c89f7	                            mov rdi, r14	       845	reloc.c	FUNCTION_4	IF_14	CALL_9
0x4000383	      0xe800000000	                          call 0x4000388	       845	reloc.c	FUNCTION_4	IF_14	CALL_9
0x4000388	          0x8b5504	                mov edx, dword [rbp + 4]	       845	reloc.c	FUNCTION_4	IF_14	CALL_9
0x400038b	          0x8b750c	              mov esi, dword [rbp + 0xc]	       845	reloc.c	FUNCTION_4	IF_14	CALL_9
0x400038e	          0x8b7d18	            mov edi, dword [rbp + 0x18] 	       845	reloc.c	FUNCTION_4	IF_14	CALL_9
0x4000391	          0x4d89e0	                             mov r8, r12	       845	reloc.c	FUNCTION_4	IF_14	CALL_9
0x4000394	            0x89c1	                            mov ecx, eax	       845	reloc.c	FUNCTION_4	IF_14	CALL_9
0x4000396	      0xe800000000	                          call 0x400039b	       845	reloc.c	FUNCTION_4	IF_14	CALL_9
0x400039b	        0x89442414	             mov dword [rsp + 0x14], eax	       845	reloc.c	FUNCTION_4	IF_14	CALL_9
0x400039f	          0x8b4d04	                mov ecx, dword [rbp + 4]	       878	reloc.c	FUNCTION_4
0x40003a2	          0x49d3ec	                             shr r12, cl	       878	reloc.c	FUNCTION_4
0x40003a5	          0x8b4d14	            mov ecx, dword [rbp + 0x14] 	       881	reloc.c	FUNCTION_4
0x40003a8	          0x49d3e4	                             shl r12, cl	       881	reloc.c	FUNCTION_4
0x40003ab	          0x8b4508	                mov eax, dword [rbp + 8]	       919	reloc.c	FUNCTION_4	SWITCH_1
0x40003ae	          0x83c002	                              add eax, 2	       919	reloc.c	FUNCTION_4	SWITCH_1
0x40003b1	          0x83f807	                              cmp eax, 7	       919	reloc.c	FUNCTION_4	SWITCH_1
0x40003b4	     0xf87be010000	                            ja 0x4000578	       919	reloc.c	FUNCTION_4	SWITCH_1
0x40003ba	            0x89c0	                            mov eax, eax	       919	reloc.c	FUNCTION_4	SWITCH_1
0x40003bc	    0xff24c5000000	                       jmp qword [rax*8]	       919	reloc.c	FUNCTION_4	SWITCH_1
0x40003c3	        0x8b542414	            mov edx, dword [rsp + 0x14] 	       990	reloc.c	FUNCTION_4
0x40003c7	      0xe9f6010000	                           jmp 0x40005c2	       990	reloc.c	FUNCTION_4
0x40003cc	      0x4c8b7c2408	                mov r15, qword [rsp + 8]	       923	reloc.c	FUNCTION_4	SWITCH_1	CALL_11
0x40003d1	          0x4c89fb	                            mov rbx, r15	       923	reloc.c	FUNCTION_4	SWITCH_1	CALL_11
0x40003d4	      0x4c8b6c2418	            mov r13, qword [rsp + 0x18] 	       923	reloc.c	FUNCTION_4	SWITCH_1	CALL_11
0x40003d9	          0x4c01eb	                            add rbx, r13	       923	reloc.c	FUNCTION_4	SWITCH_1	CALL_11
0x40003dc	        0x498b4608	                mov rax, qword [r14 + 8]	       923	reloc.c	FUNCTION_4	SWITCH_1	CALL_11
0x40003e0	          0x4889df	                            mov rdi, rbx	       923	reloc.c	FUNCTION_4	SWITCH_1	CALL_11
0x40003e3	          0xff5038	                 call qword [rax + 0x38]	       923	reloc.c	FUNCTION_4	SWITCH_1	CALL_11
0x40003e6	        0x48c1f808	                              sar rax, 8	       925	reloc.c	FUNCTION_4	SWITCH_1
0x40003ea	          0x4889c2	                            mov rdx, rax	       925	reloc.c	FUNCTION_4	SWITCH_1
0x40003ed	        0x48235538	             and rdx, qword [rbp + 0x38]	       925	reloc.c	FUNCTION_4	SWITCH_1
0x40003f1	          0x4c01e2	                            add rdx, r12	       925	reloc.c	FUNCTION_4	SWITCH_1
0x40003f4	          0x4831c2	                            xor rdx, rax	       925	reloc.c	FUNCTION_4	SWITCH_1
0x40003f7	        0x48235540	             and rdx, qword [rbp + 0x40]	       925	reloc.c	FUNCTION_4	SWITCH_1
0x40003fb	          0x4831c2	                            xor rdx, rax	       925	reloc.c	FUNCTION_4	SWITCH_1
0x40003fe	          0x4889d5	                            mov rbp, rdx	       925	reloc.c	FUNCTION_4	SWITCH_1
0x4000401	          0x4889d7	                            mov rdi, rdx	       926	reloc.c	FUNCTION_4	SWITCH_1	CALL_12
0x4000404	        0x48c1ff08	                              sar rdi, 8	       926	reloc.c	FUNCTION_4	SWITCH_1	CALL_12
0x4000408	        0x498b4608	                mov rax, qword [r14 + 8]	       926	reloc.c	FUNCTION_4	SWITCH_1	CALL_12
0x400040c	          0x4889de	                            mov rsi, rbx	       926	reloc.c	FUNCTION_4	SWITCH_1	CALL_12
0x400040f	          0xff5060	                 call qword [rax + 0x60]	       926	reloc.c	FUNCTION_4	SWITCH_1	CALL_12
0x4000412	      0x43886c2f02	           mov byte [r15 + r13 + 2], bpl	       927	reloc.c	FUNCTION_4	SWITCH_1	CALL_13
0x4000417	        0x8b542414	            mov edx, dword [rsp + 0x14] 	       990	reloc.c	FUNCTION_4
0x400041b	      0xe9a2010000	                           jmp 0x40005c2	       929	reloc.c	FUNCTION_4	SWITCH_1
0x4000420	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       933	reloc.c	FUNCTION_4	SWITCH_1	CALL_14
0x4000425	      0x48034c2418	             add rcx, qword [rsp + 0x18]	       933	reloc.c	FUNCTION_4	SWITCH_1	CALL_14
0x400042a	           0xfb611	                   movzx edx, byte [rcx]	       933	reloc.c	FUNCTION_4	SWITCH_1	CALL_14
0x400042d	            0x89d0	                            mov eax, edx	       935	reloc.c	FUNCTION_4	SWITCH_1	CALL_15
0x400042f	          0x224538	               and al, byte [rbp + 0x38]	       935	reloc.c	FUNCTION_4	SWITCH_1	CALL_15
0x4000432	          0x4401e0	                           add eax, r12d	       935	reloc.c	FUNCTION_4	SWITCH_1	CALL_15
0x4000435	            0x31d0	                            xor eax, edx	       935	reloc.c	FUNCTION_4	SWITCH_1	CALL_15
0x4000437	          0x224540	               and al, byte [rbp + 0x40]	       935	reloc.c	FUNCTION_4	SWITCH_1	CALL_15
0x400043a	            0x31d0	                            xor eax, edx	       935	reloc.c	FUNCTION_4	SWITCH_1	CALL_15
0x400043c	            0x8801	                      mov byte [rcx], al	       935	reloc.c	FUNCTION_4	SWITCH_1	CALL_15
0x400043e	        0x8b542414	            mov edx, dword [rsp + 0x14] 	       990	reloc.c	FUNCTION_4
0x4000442	      0xe97b010000	                           jmp 0x40005c2	       937	reloc.c	FUNCTION_4	SWITCH_1
0x4000447	      0x488b5c2408	                mov rbx, qword [rsp + 8]	       941	reloc.c	FUNCTION_4	SWITCH_1	CALL_16
0x400044c	      0x48035c2418	             add rbx, qword [rsp + 0x18]	       941	reloc.c	FUNCTION_4	SWITCH_1	CALL_16
0x4000451	        0x498b4608	                mov rax, qword [r14 + 8]	       941	reloc.c	FUNCTION_4	SWITCH_1	CALL_16
0x4000455	          0x4889df	                            mov rdi, rbx	       941	reloc.c	FUNCTION_4	SWITCH_1	CALL_16
0x4000458	          0xff5050	                 call qword [rax + 0x50]	       941	reloc.c	FUNCTION_4	SWITCH_1	CALL_16
0x400045b	            0x89c7	                            mov edi, eax	       943	reloc.c	FUNCTION_4	SWITCH_1	CALL_17
0x400045d	        0x66237d38	               and di, word [rbp + 0x38]	       943	reloc.c	FUNCTION_4	SWITCH_1	CALL_17
0x4000461	          0x4401e7	                           add edi, r12d	       943	reloc.c	FUNCTION_4	SWITCH_1	CALL_17
0x4000464	            0x31c7	                            xor edi, eax	       943	reloc.c	FUNCTION_4	SWITCH_1	CALL_17
0x4000466	        0x66237d40	               and di, word [rbp + 0x40]	       943	reloc.c	FUNCTION_4	SWITCH_1	CALL_17
0x400046a	            0x31f8	                            xor eax, edi	       943	reloc.c	FUNCTION_4	SWITCH_1	CALL_17
0x400046c	        0x480fbff8	                           movsx rdi, ax	       943	reloc.c	FUNCTION_4	SWITCH_1	CALL_17
0x4000470	        0x498b4608	                mov rax, qword [r14 + 8]	       943	reloc.c	FUNCTION_4	SWITCH_1	CALL_17
0x4000474	          0x4889de	                            mov rsi, rbx	       943	reloc.c	FUNCTION_4	SWITCH_1	CALL_17
0x4000477	          0xff5060	                 call qword [rax + 0x60]	       943	reloc.c	FUNCTION_4	SWITCH_1	CALL_17
0x400047a	        0x8b542414	            mov edx, dword [rsp + 0x14] 	       990	reloc.c	FUNCTION_4
0x400047e	      0xe93f010000	                           jmp 0x40005c2	       945	reloc.c	FUNCTION_4	SWITCH_1
0x4000483	      0x488b5c2408	                mov rbx, qword [rsp + 8]	       948	reloc.c	FUNCTION_4	SWITCH_1	CALL_18
0x4000488	      0x48035c2418	             add rbx, qword [rsp + 0x18]	       948	reloc.c	FUNCTION_4	SWITCH_1	CALL_18
0x400048d	        0x498b4608	                mov rax, qword [r14 + 8]	       948	reloc.c	FUNCTION_4	SWITCH_1	CALL_18
0x4000491	          0x4889df	                            mov rdi, rbx	       948	reloc.c	FUNCTION_4	SWITCH_1	CALL_18
0x4000494	          0xff5038	                 call qword [rax + 0x38]	       948	reloc.c	FUNCTION_4	SWITCH_1	CALL_18
0x4000497	          0x4889c2	                            mov rdx, rax	       950	reloc.c	FUNCTION_4	SWITCH_1	CALL_19
0x400049a	        0x48235538	             and rdx, qword [rbp + 0x38]	       950	reloc.c	FUNCTION_4	SWITCH_1	CALL_19
0x400049e	          0x4c01e2	                            add rdx, r12	       950	reloc.c	FUNCTION_4	SWITCH_1	CALL_19
0x40004a1	          0x4831c2	                            xor rdx, rax	       950	reloc.c	FUNCTION_4	SWITCH_1	CALL_19
0x40004a4	        0x48235540	             and rdx, qword [rbp + 0x40]	       950	reloc.c	FUNCTION_4	SWITCH_1	CALL_19
0x40004a8	          0x4889d7	                            mov rdi, rdx	       950	reloc.c	FUNCTION_4	SWITCH_1	CALL_19
0x40004ab	          0x4831c7	                            xor rdi, rax	       950	reloc.c	FUNCTION_4	SWITCH_1	CALL_19
0x40004ae	        0x498b4608	                mov rax, qword [r14 + 8]	       950	reloc.c	FUNCTION_4	SWITCH_1	CALL_19
0x40004b2	          0x4889de	                            mov rsi, rbx	       950	reloc.c	FUNCTION_4	SWITCH_1	CALL_19
0x40004b5	          0xff5048	                 call qword [rax + 0x48]	       950	reloc.c	FUNCTION_4	SWITCH_1	CALL_19
0x40004b8	        0x8b542414	            mov edx, dword [rsp + 0x14] 	       990	reloc.c	FUNCTION_4
0x40004bc	      0xe901010000	                           jmp 0x40005c2	       952	reloc.c	FUNCTION_4	SWITCH_1
0x40004c1	      0x488b5c2408	                mov rbx, qword [rsp + 8]	       955	reloc.c	FUNCTION_4	SWITCH_1	CALL_20
0x40004c6	      0x48035c2418	             add rbx, qword [rsp + 0x18]	       955	reloc.c	FUNCTION_4	SWITCH_1	CALL_20
0x40004cb	        0x498b4608	                mov rax, qword [r14 + 8]	       955	reloc.c	FUNCTION_4	SWITCH_1	CALL_20
0x40004cf	          0x4889df	                            mov rdi, rbx	       955	reloc.c	FUNCTION_4	SWITCH_1	CALL_20
0x40004d2	          0xff5038	                 call qword [rax + 0x38]	       955	reloc.c	FUNCTION_4	SWITCH_1	CALL_20
0x40004d5	          0x4889c2	                            mov rdx, rax	       958	reloc.c	FUNCTION_4	SWITCH_1	CALL_21
0x40004d8	        0x48235538	             and rdx, qword [rbp + 0x38]	       958	reloc.c	FUNCTION_4	SWITCH_1	CALL_21
0x40004dc	          0x4c29e2	                            sub rdx, r12	       958	reloc.c	FUNCTION_4	SWITCH_1	CALL_21
0x40004df	          0x4831c2	                            xor rdx, rax	       958	reloc.c	FUNCTION_4	SWITCH_1	CALL_21
0x40004e2	        0x48235540	             and rdx, qword [rbp + 0x40]	       958	reloc.c	FUNCTION_4	SWITCH_1	CALL_21
0x40004e6	          0x4889d7	                            mov rdi, rdx	       958	reloc.c	FUNCTION_4	SWITCH_1	CALL_21
0x40004e9	          0x4831c7	                            xor rdi, rax	       958	reloc.c	FUNCTION_4	SWITCH_1	CALL_21
0x40004ec	        0x498b4608	                mov rax, qword [r14 + 8]	       958	reloc.c	FUNCTION_4	SWITCH_1	CALL_21
0x40004f0	          0x4889de	                            mov rsi, rbx	       958	reloc.c	FUNCTION_4	SWITCH_1	CALL_21
0x40004f3	          0xff5048	                 call qword [rax + 0x48]	       958	reloc.c	FUNCTION_4	SWITCH_1	CALL_21
0x40004f6	        0x8b542414	            mov edx, dword [rsp + 0x14] 	       990	reloc.c	FUNCTION_4
0x40004fa	      0xe9c3000000	                           jmp 0x40005c2	       960	reloc.c	FUNCTION_4	SWITCH_1
0x40004ff	      0x488b5c2408	                mov rbx, qword [rsp + 8]	       964	reloc.c	FUNCTION_4	SWITCH_1	CALL_22
0x4000504	      0x48035c2418	             add rbx, qword [rsp + 0x18]	       964	reloc.c	FUNCTION_4	SWITCH_1	CALL_22
0x4000509	        0x498b4608	                mov rax, qword [r14 + 8]	       964	reloc.c	FUNCTION_4	SWITCH_1	CALL_22
0x400050d	          0x4889df	                            mov rdi, rbx	       964	reloc.c	FUNCTION_4	SWITCH_1	CALL_22
0x4000510	          0xff5050	                 call qword [rax + 0x50]	       964	reloc.c	FUNCTION_4	SWITCH_1	CALL_22
0x4000513	          0x4889c2	                            mov rdx, rax	       967	reloc.c	FUNCTION_4	SWITCH_1	CALL_23
0x4000516	        0x48235538	             and rdx, qword [rbp + 0x38]	       967	reloc.c	FUNCTION_4	SWITCH_1	CALL_23
0x400051a	          0x4c29e2	                            sub rdx, r12	       967	reloc.c	FUNCTION_4	SWITCH_1	CALL_23
0x400051d	          0x4831c2	                            xor rdx, rax	       967	reloc.c	FUNCTION_4	SWITCH_1	CALL_23
0x4000520	        0x48235540	             and rdx, qword [rbp + 0x40]	       967	reloc.c	FUNCTION_4	SWITCH_1	CALL_23
0x4000524	          0x4889d7	                            mov rdi, rdx	       967	reloc.c	FUNCTION_4	SWITCH_1	CALL_23
0x4000527	          0x4831c7	                            xor rdi, rax	       967	reloc.c	FUNCTION_4	SWITCH_1	CALL_23
0x400052a	        0x498b4608	                mov rax, qword [r14 + 8]	       967	reloc.c	FUNCTION_4	SWITCH_1	CALL_23
0x400052e	          0x4889de	                            mov rsi, rbx	       967	reloc.c	FUNCTION_4	SWITCH_1	CALL_23
0x4000531	          0xff5060	                 call qword [rax + 0x60]	       967	reloc.c	FUNCTION_4	SWITCH_1	CALL_23
0x4000534	        0x8b542414	            mov edx, dword [rsp + 0x14] 	       990	reloc.c	FUNCTION_4
0x4000538	      0xe985000000	                           jmp 0x40005c2	       969	reloc.c	FUNCTION_4	SWITCH_1
0x400053d	      0x488b5c2408	                mov rbx, qword [rsp + 8]	       978	reloc.c	FUNCTION_4	SWITCH_1	CALL_24
0x4000542	      0x48035c2418	             add rbx, qword [rsp + 0x18]	       978	reloc.c	FUNCTION_4	SWITCH_1	CALL_24
0x4000547	        0x498b4608	                mov rax, qword [r14 + 8]	       978	reloc.c	FUNCTION_4	SWITCH_1	CALL_24
0x400054b	          0x4889df	                            mov rdi, rbx	       978	reloc.c	FUNCTION_4	SWITCH_1	CALL_24
0x400054e	          0xff5020	                 call qword [rax + 0x20]	       978	reloc.c	FUNCTION_4	SWITCH_1	CALL_24
0x4000551	          0x4889c2	                            mov rdx, rax	       978	reloc.c	FUNCTION_4	SWITCH_1	CALL_24
0x4000554	        0x48235538	             and rdx, qword [rbp + 0x38]	       978	reloc.c	FUNCTION_4	SWITCH_1	CALL_24
0x4000558	          0x4c01e2	                            add rdx, r12	       978	reloc.c	FUNCTION_4	SWITCH_1	CALL_24
0x400055b	          0x4831c2	                            xor rdx, rax	       978	reloc.c	FUNCTION_4	SWITCH_1	CALL_24
0x400055e	        0x48235540	             and rdx, qword [rbp + 0x40]	       978	reloc.c	FUNCTION_4	SWITCH_1	CALL_24
0x4000562	          0x4831d0	                            xor rax, rdx	       980	reloc.c	FUNCTION_4	SWITCH_1	CALL_25
0x4000565	          0x4889c7	                            mov rdi, rax	       980	reloc.c	FUNCTION_4	SWITCH_1	CALL_25
0x4000568	        0x498b4608	                mov rax, qword [r14 + 8]	       980	reloc.c	FUNCTION_4	SWITCH_1	CALL_25
0x400056c	          0x4889de	                            mov rsi, rbx	       980	reloc.c	FUNCTION_4	SWITCH_1	CALL_25
0x400056f	          0xff5030	                 call qword [rax + 0x30]	       980	reloc.c	FUNCTION_4	SWITCH_1	CALL_25
0x4000572	        0x8b542414	            mov edx, dword [rsp + 0x14] 	       990	reloc.c	FUNCTION_4
0x4000576	            0xeb4a	                           jmp 0x40005c2	       985	reloc.c	FUNCTION_4	SWITCH_1
0x4000578	      0xba07000000	                              mov edx, 7	       987	reloc.c	FUNCTION_4	SWITCH_1
0x400057d	            0xeb43	                           jmp 0x40005c2	       987	reloc.c	FUNCTION_4	SWITCH_1
0x400057f	    0x49817c242000	               cmp qword [r12 + 0x20], 0	       653	reloc.c	FUNCTION_4	IF_4
0x4000588	     0xf85cafcffff	                           jne 0x4000258	       653	reloc.c	FUNCTION_4	IF_4
0x400058e	          0x4d85ed	                           test r13, r13	       653	reloc.c	FUNCTION_4	IF_4
0x4000591	     0xf85affcffff	                           jne 0x4000246	       653	reloc.c	FUNCTION_4	IF_4
0x4000597	      0xe9bcfcffff	                           jmp 0x4000258	       653	reloc.c	FUNCTION_4	IF_4
0x400059c	          0x4d85c0	                             test r8, r8	       653	reloc.c	FUNCTION_4	IF_4
0x400059f	            0x740c	                            je 0x40005ad	       653	reloc.c	FUNCTION_4	IF_4
0x40005a1	    0x483d00000000	                              cmp rax, 0	       653	reloc.c	FUNCTION_4	IF_4
0x40005a7	     0xf8499fcffff	                            je 0x4000246	       653	reloc.c	FUNCTION_4	IF_4
0x40005ad	      0xba08000000	                              mov edx, 8	       661	reloc.c	FUNCTION_4	IF_5
0x40005b2	            0xeb0e	                           jmp 0x40005c2	       661	reloc.c	FUNCTION_4	IF_5
0x40005b4	          0x4885ed	                           test rbp, rbp	       637	reloc.c	FUNCTION_4	IF_2
0x40005b7	     0xf854cfcffff	                           jne 0x4000209	       637	reloc.c	FUNCTION_4	IF_2
0x40005bd	      0xba08000000	                              mov edx, 8	       661	reloc.c	FUNCTION_4	IF_5
0x40005c2	            0x89d0	                            mov eax, edx	       991	reloc.c	FUNCTION_4
0x40005c4	        0x4883c428	                           add rsp, 0x28	       991	reloc.c	FUNCTION_4
0x40005c8	              0x5b	                                 pop rbx	       991	reloc.c	FUNCTION_4
0x40005c9	              0x5d	                                 pop rbp	       991	reloc.c	FUNCTION_4
0x40005ca	            0x415c	                                 pop r12	       991	reloc.c	FUNCTION_4
0x40005cc	            0x415d	                                 pop r13	       991	reloc.c	FUNCTION_4
0x40005ce	            0x415e	                                 pop r14	       991	reloc.c	FUNCTION_4
0x40005d0	            0x415f	                                 pop r15	       991	reloc.c	FUNCTION_4
0x40005d2	              0xc3	                                     ret	       991	reloc.c	FUNCTION_4
_bfd_generic_set_reloc	FOR,0:CALL,0:functions,0:ELSE,0:SWITCH,0:WHILE,0:IF,0:DO,0	3
0x4001321	    0x488996800000	             mov qword [rsi + 0x80], rdx	      8383	reloc.c	FUNCTION_18
0x4001328	    0x898e88000000	             mov dword [rsi + 0x88], ecx	      8384	reloc.c	FUNCTION_18
0x400132e	              0xc3	                                     ret	      8384	reloc.c	FUNCTION_18
_bfd_relocate_contents	FOR,0:CALL,15:functions,0:ELSE,0:SWITCH,3:WHILE,0:IF,5:DO,0	192
0x40008c2	            0x4157	                                push r15	      1444	reloc.c	FUNCTION_7
0x40008c4	            0x4156	                                push r14	      1444	reloc.c	FUNCTION_7
0x40008c6	            0x4155	                                push r13	      1444	reloc.c	FUNCTION_7
0x40008c8	            0x4154	                                push r12	      1444	reloc.c	FUNCTION_7
0x40008ca	              0x55	                                push rbp	      1444	reloc.c	FUNCTION_7
0x40008cb	              0x53	                                push rbx	      1444	reloc.c	FUNCTION_7
0x40008cc	        0x4883ec28	                           sub rsp, 0x28	      1444	reloc.c	FUNCTION_7
0x40008d0	          0x4889fd	                            mov rbp, rdi	      1444	reloc.c	FUNCTION_7
0x40008d3	          0x4989f7	                            mov r15, rsi	      1444	reloc.c	FUNCTION_7
0x40008d6	          0x4889d3	                            mov rbx, rdx	      1444	reloc.c	FUNCTION_7
0x40008d9	        0x48890c24	                    mov qword [rsp], rcx	      1444	reloc.c	FUNCTION_7
0x40008dd	        0x448b7704	               mov r14d, dword [rdi + 4]	      1448	reloc.c	FUNCTION_7
0x40008e1	          0x8b4714	            mov eax, dword [rdi + 0x14] 	      1449	reloc.c	FUNCTION_7
0x40008e4	        0x8944240c	              mov dword [rsp + 0xc], eax	      1449	reloc.c	FUNCTION_7
0x40008e8	          0x4889d0	                            mov rax, rdx	      1454	reloc.c	FUNCTION_7	IF_1
0x40008eb	          0x48f7d8	                                 neg rax	      1454	reloc.c	FUNCTION_7	IF_1
0x40008ee	        0x837f0800	                  cmp dword [rdi + 8], 0	      1454	reloc.c	FUNCTION_7	IF_1
0x40008f2	        0x480f48d8	                          cmovs rbx, rax	      1454	reloc.c	FUNCTION_7	IF_1
0x40008f6	      0xe800000000	                          call 0x40008fb	      1457	reloc.c	FUNCTION_7	CALL_1
0x40008fb	          0x83f808	                              cmp eax, 8	      1458	reloc.c	FUNCTION_7	SWITCH_1
0x40008fe	            0x770c	                            ja 0x400090c	      1458	reloc.c	FUNCTION_7	SWITCH_1
0x4000900	          0x4189c4	                           mov r12d, eax	      1458	reloc.c	FUNCTION_7	SWITCH_1
0x4000903	            0x89c0	                            mov eax, eax	      1458	reloc.c	FUNCTION_7	SWITCH_1
0x4000905	    0xff24c5000000	                       jmp qword [rax*8]	      1458	reloc.c	FUNCTION_7	SWITCH_1
0x400090c	      0xba00000000	                              mov edx, 0	      1461	reloc.c	FUNCTION_7	SWITCH_1	CALL_2
0x4000911	      0xbeb5050000	                          mov esi, 0x5b5	      1461	reloc.c	FUNCTION_7	SWITCH_1	CALL_2
0x4000916	      0xbf00000000	                              mov edi, 0	      1461	reloc.c	FUNCTION_7	SWITCH_1	CALL_2
0x400091b	      0xe800000000	                          call 0x4000920	      1461	reloc.c	FUNCTION_7	SWITCH_1	CALL_2
0x4000920	        0x488b0424	                    mov rax, qword [rsp]	      1465	reloc.c	FUNCTION_7	SWITCH_1	CALL_3
0x4000924	        0x440fb628	                  movzx r13d, byte [rax]	      1465	reloc.c	FUNCTION_7	SWITCH_1	CALL_3
0x4000928	            0xeb2e	                           jmp 0x4000958	      1466	reloc.c	FUNCTION_7	SWITCH_1
0x400092a	        0x498b4708	                mov rax, qword [r15 + 8]	      1468	reloc.c	FUNCTION_7	SWITCH_1	CALL_4
0x400092e	        0x488b3c24	                    mov rdi, qword [rsp]	      1468	reloc.c	FUNCTION_7	SWITCH_1	CALL_4
0x4000932	          0xff5050	                 call qword [rax + 0x50]	      1468	reloc.c	FUNCTION_7	SWITCH_1	CALL_4
0x4000935	          0x4989c5	                            mov r13, rax	      1468	reloc.c	FUNCTION_7	SWITCH_1	CALL_4
0x4000938	            0xeb1e	                           jmp 0x4000958	      1469	reloc.c	FUNCTION_7	SWITCH_1
0x400093a	        0x498b4708	                mov rax, qword [r15 + 8]	      1471	reloc.c	FUNCTION_7	SWITCH_1	CALL_5
0x400093e	        0x488b3c24	                    mov rdi, qword [rsp]	      1471	reloc.c	FUNCTION_7	SWITCH_1	CALL_5
0x4000942	          0xff5038	                 call qword [rax + 0x38]	      1471	reloc.c	FUNCTION_7	SWITCH_1	CALL_5
0x4000945	          0x4989c5	                            mov r13, rax	      1471	reloc.c	FUNCTION_7	SWITCH_1	CALL_5
0x4000948	            0xeb0e	                           jmp 0x4000958	      1472	reloc.c	FUNCTION_7	SWITCH_1
0x400094a	        0x498b4708	                mov rax, qword [r15 + 8]	      1475	reloc.c	FUNCTION_7	SWITCH_1	CALL_6
0x400094e	        0x488b3c24	                    mov rdi, qword [rsp]	      1475	reloc.c	FUNCTION_7	SWITCH_1	CALL_6
0x4000952	          0xff5020	                 call qword [rax + 0x20]	      1475	reloc.c	FUNCTION_7	SWITCH_1	CALL_6
0x4000955	          0x4989c5	                            mov r13, rax	      1475	reloc.c	FUNCTION_7	SWITCH_1	CALL_6
0x4000958	    0xc74424100200	               mov dword [rsp + 0x10], 2	      1486	reloc.c	FUNCTION_7
0x4000960	        0x837d1800	               cmp dword [rbp + 0x18], 0	      1487	reloc.c	FUNCTION_7	IF_2
0x4000964	     0xf8449010000	                            je 0x4000ab3	      1487	reloc.c	FUNCTION_7	IF_2
0x400096a	          0x8b450c	              mov eax, dword [rbp + 0xc]	      1496	reloc.c	FUNCTION_7	IF_2
0x400096d	          0x8d48ff	                      lea ecx, [rax - 1]	      1496	reloc.c	FUNCTION_7	IF_2
0x4000970	      0xb801000000	                              mov eax, 1	      1496	reloc.c	FUNCTION_7	IF_2
0x4000975	          0x48d3e0	                             shl rax, cl	      1496	reloc.c	FUNCTION_7	IF_2
0x4000978	      0x488d4400fe	                lea rax, [rax + rax - 2]	      1496	reloc.c	FUNCTION_7	IF_2
0x400097d	        0x4883c801	                               or rax, 1	      1496	reloc.c	FUNCTION_7	IF_2
0x4000981	      0x4889442410	             mov qword [rsp + 0x10], rax	      1497	reloc.c	FUNCTION_7	IF_2
0x4000986	          0x4889c6	                            mov rsi, rax	      1497	reloc.c	FUNCTION_7	IF_2
0x4000989	          0x48f7d6	                                 not rsi	      1497	reloc.c	FUNCTION_7	IF_2
0x400098c	      0x4889742418	             mov qword [rsp + 0x18], rsi	      1497	reloc.c	FUNCTION_7	IF_2
0x4000991	          0x4c89ff	                            mov rdi, r15	      1498	reloc.c	FUNCTION_7	IF_2	CALL_8
0x4000994	      0xe800000000	                          call 0x4000999	      1498	reloc.c	FUNCTION_7	IF_2	CALL_8
0x4000999	          0x8d48ff	                      lea ecx, [rax - 1]	      1498	reloc.c	FUNCTION_7	IF_2	CALL_8
0x400099c	      0xba01000000	                              mov edx, 1	      1498	reloc.c	FUNCTION_7	IF_2	CALL_8
0x40009a1	          0x48d3e2	                             shl rdx, cl	      1498	reloc.c	FUNCTION_7	IF_2	CALL_8
0x40009a4	      0x488d5412fe	                lea rdx, [rdx + rdx - 2]	      1498	reloc.c	FUNCTION_7	IF_2	CALL_8
0x40009a9	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1498	reloc.c	FUNCTION_7	IF_2	CALL_8
0x40009ae	          0x4489f1	                           mov ecx, r14d	      1498	reloc.c	FUNCTION_7	IF_2	CALL_8
0x40009b1	          0x48d3e0	                             shl rax, cl	      1498	reloc.c	FUNCTION_7	IF_2	CALL_8
0x40009b4	        0x4883c801	                               or rax, 1	      1498	reloc.c	FUNCTION_7	IF_2	CALL_8
0x40009b8	          0x4809d0	                             or rax, rdx	      1498	reloc.c	FUNCTION_7	IF_2	CALL_8
0x40009bb	          0x4889da	                            mov rdx, rbx	      1500	reloc.c	FUNCTION_7	IF_2
0x40009be	          0x4821c2	                            and rdx, rax	      1500	reloc.c	FUNCTION_7	IF_2
0x40009c1	          0x4889d6	                            mov rsi, rdx	      1500	reloc.c	FUNCTION_7	IF_2
0x40009c4	          0x48d3ee	                             shr rsi, cl	      1500	reloc.c	FUNCTION_7	IF_2
0x40009c7	        0x4c8b4538	              mov r8, qword [rbp + 0x38]	      1501	reloc.c	FUNCTION_7	IF_2
0x40009cb	          0x4c89ea	                            mov rdx, r13	      1501	reloc.c	FUNCTION_7	IF_2
0x40009ce	          0x4c21c2	                             and rdx, r8	      1501	reloc.c	FUNCTION_7	IF_2
0x40009d1	          0x4821c2	                            and rdx, rax	      1501	reloc.c	FUNCTION_7	IF_2
0x40009d4	       0xfb64c240c	            movzx ecx, byte [rsp + 0xc] 	      1501	reloc.c	FUNCTION_7	IF_2
0x40009d9	          0x48d3ea	                             shr rdx, cl	      1501	reloc.c	FUNCTION_7	IF_2
0x40009dc	          0x4489f1	                           mov ecx, r14d	      1502	reloc.c	FUNCTION_7	IF_2
0x40009df	          0x48d3e8	                             shr rax, cl	      1502	reloc.c	FUNCTION_7	IF_2
0x40009e2	          0x8b4d18	            mov ecx, dword [rbp + 0x18] 	      1504	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x40009e5	          0x83f902	                              cmp ecx, 2	      1504	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x40009e8	            0x7414	                            je 0x40009fe	      1504	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x40009ea	          0x83f903	                              cmp ecx, 3	      1504	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x40009ed	     0xf848b000000	                            je 0x4000a7e	      1504	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x40009f3	          0x83f901	                              cmp ecx, 1	      1504	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x40009f6	     0xf85a3000000	                           jne 0x4000a9f	      1504	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x40009fc	            0xeb10	                           jmp 0x4000a0e	      1504	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x40009fe	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      1510	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x4000a03	          0x48d1e9	                              shr rcx, 1	      1510	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x4000a06	          0x48f7d1	                                 not rcx	      1510	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x4000a09	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      1510	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x4000a0e	    0xc74424100200	               mov dword [rsp + 0x10], 2	      1486	reloc.c	FUNCTION_7
0x4000a16	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      1520	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_3
0x4000a1b	          0x4889f9	                            mov rcx, rdi	      1520	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_3
0x4000a1e	          0x4821f1	                            and rcx, rsi	      1520	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_3
0x4000a21	            0x7413	                            je 0x4000a36	      1520	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_3
0x4000a23	          0x4821c7	                            and rdi, rax	      1520	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_3
0x4000a26	          0x4839f9	                            cmp rcx, rdi	      1521	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_3
0x4000a29	           0xf95c1	                                setne cl	      1521	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_3
0x4000a2c	           0xfb6c9	                           movzx ecx, cl	      1521	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_3
0x4000a2f	          0x83c102	                              add ecx, 2	      1521	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_3
0x4000a32	        0x894c2410	             mov dword [rsp + 0x10], ecx	      1521	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_3
0x4000a36	          0x4c89c7	                             mov rdi, r8	      1529	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x4000a39	          0x48f7d7	                                 not rdi	      1529	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x4000a3c	          0x48d1ef	                              shr rdi, 1	      1529	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x4000a3f	          0x4c21c7	                             and rdi, r8	      1529	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x4000a42	       0xfb64c240c	            movzx ecx, byte [rsp + 0xc] 	      1530	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x4000a47	          0x48d3ef	                             shr rdi, cl	      1530	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x4000a4a	          0x4831fa	                            xor rdx, rdi	      1533	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x4000a4d	          0x4829fa	                            sub rdx, rdi	      1533	reloc.c	FUNCTION_7	IF_2	SWITCH_2
0x4000a50	          0x4889f7	                            mov rdi, rsi	      1551	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_4
0x4000a53	          0x4831d7	                            xor rdi, rdx	      1551	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_4
0x4000a56	          0x48f7d7	                                 not rdi	      1551	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_4
0x4000a59	        0x488d0c16	                    lea rcx, [rsi + rdx]	      1551	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_4
0x4000a5d	          0x4889ca	                            mov rdx, rcx	      1551	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_4
0x4000a60	          0x4831f2	                            xor rdx, rsi	      1551	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_4
0x4000a63	          0x4821fa	                            and rdx, rdi	      1551	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_4
0x4000a66	          0x4821d0	                            and rax, rdx	      1551	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_4
0x4000a69	      0x4823442418	             and rax, qword [rsp + 0x18]	      1551	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_4
0x4000a6e	      0xb803000000	                              mov eax, 3	      1552	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_4
0x4000a73	       0xf44442410	           cmove eax, dword [rsp + 0x10]	      1552	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_4
0x4000a78	        0x89442410	             mov dword [rsp + 0x10], eax	      1552	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_4
0x4000a7c	            0xeb35	                           jmp 0x4000ab3	      1552	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_4
0x4000a7e	        0x488d0c16	                    lea rcx, [rsi + rdx]	      1568	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_5
0x4000a82	          0x4821c8	                            and rax, rcx	      1568	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_5
0x4000a85	          0x4809f2	                             or rdx, rsi	      1568	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_5
0x4000a88	          0x4809d0	                             or rax, rdx	      1568	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_5
0x4000a8b	      0x4823442418	             and rax, qword [rsp + 0x18]	      1568	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_5
0x4000a90	        0x4883f801	                              cmp rax, 1	      1569	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_5
0x4000a94	            0x19c0	                            sbb eax, eax	      1569	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_5
0x4000a96	          0x83c003	                              add eax, 3	      1569	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_5
0x4000a99	        0x89442410	             mov dword [rsp + 0x10], eax	      1569	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_5
0x4000a9d	            0xeb14	                           jmp 0x4000ab3	      1569	reloc.c	FUNCTION_7	IF_2	SWITCH_2	IF_5
0x4000a9f	      0xba00000000	                              mov edx, 0	      1573	reloc.c	FUNCTION_7	IF_2	SWITCH_2	CALL_9
0x4000aa4	      0xbe25060000	                          mov esi, 0x625	      1573	reloc.c	FUNCTION_7	IF_2	SWITCH_2	CALL_9
0x4000aa9	      0xbf00000000	                              mov edi, 0	      1573	reloc.c	FUNCTION_7	IF_2	SWITCH_2	CALL_9
0x4000aae	      0xe800000000	                          call 0x4000ab3	      1573	reloc.c	FUNCTION_7	IF_2	SWITCH_2	CALL_9
0x4000ab3	          0x4489f1	                           mov ecx, r14d	      1578	reloc.c	FUNCTION_7
0x4000ab6	          0x48d3eb	                             shr rbx, cl	      1578	reloc.c	FUNCTION_7
0x4000ab9	          0x4c89ef	                            mov rdi, r13	      1578	reloc.c	FUNCTION_7
0x4000abc	        0x48237d38	             and rdi, qword [rbp + 0x38]	      1578	reloc.c	FUNCTION_7
0x4000ac0	       0xfb64c240c	            movzx ecx, byte [rsp + 0xc] 	      1578	reloc.c	FUNCTION_7
0x4000ac5	          0x48d3e3	                             shl rbx, cl	      1578	reloc.c	FUNCTION_7
0x4000ac8	          0x4801df	                            add rdi, rbx	      1578	reloc.c	FUNCTION_7
0x4000acb	          0x4c31ef	                            xor rdi, r13	      1578	reloc.c	FUNCTION_7
0x4000ace	        0x48237d40	             and rdi, qword [rbp + 0x40]	      1578	reloc.c	FUNCTION_7
0x4000ad2	          0x4c31ef	                            xor rdi, r13	      1582	reloc.c	FUNCTION_7
0x4000ad5	        0x4183fc02	                             cmp r12d, 2	      1586	reloc.c	FUNCTION_7	SWITCH_3
0x4000ad9	            0x743b	                            je 0x4000b16	      1586	reloc.c	FUNCTION_7	SWITCH_3
0x4000adb	        0x4183fc02	                             cmp r12d, 2	      1586	reloc.c	FUNCTION_7	SWITCH_3
0x4000adf	            0x7708	                            ja 0x4000ae9	      1586	reloc.c	FUNCTION_7	SWITCH_3
0x4000ae1	        0x4183fc01	                             cmp r12d, 1	      1586	reloc.c	FUNCTION_7	SWITCH_3
0x4000ae5	            0x7422	                            je 0x4000b09	      1586	reloc.c	FUNCTION_7	SWITCH_3
0x4000ae7	            0xeb0c	                           jmp 0x4000af5	      1586	reloc.c	FUNCTION_7	SWITCH_3
0x4000ae9	        0x4183fc04	                             cmp r12d, 4	      1586	reloc.c	FUNCTION_7	SWITCH_3
0x4000aed	            0x7438	                            je 0x4000b27	      1586	reloc.c	FUNCTION_7	SWITCH_3
0x4000aef	        0x4183fc08	                             cmp r12d, 8	      1586	reloc.c	FUNCTION_7	SWITCH_3
0x4000af3	            0x7443	                            je 0x4000b38	      1586	reloc.c	FUNCTION_7	SWITCH_3
0x4000af5	      0xba00000000	                              mov edx, 0	      1589	reloc.c	FUNCTION_7	SWITCH_3	CALL_10
0x4000afa	      0xbe35060000	                          mov esi, 0x635	      1589	reloc.c	FUNCTION_7	SWITCH_3	CALL_10
0x4000aff	      0xbf00000000	                              mov edi, 0	      1589	reloc.c	FUNCTION_7	SWITCH_3	CALL_10
0x4000b04	      0xe800000000	                          call 0x4000b09	      1589	reloc.c	FUNCTION_7	SWITCH_3	CALL_10
0x4000b09	        0x488b0424	                    mov rax, qword [rsp]	      1591	reloc.c	FUNCTION_7	SWITCH_3	CALL_11
0x4000b0d	          0x408838	                     mov byte [rax], dil	      1591	reloc.c	FUNCTION_7	SWITCH_3	CALL_11
0x4000b10	        0x8b442410	            mov eax, dword [rsp + 0x10] 	      1608	reloc.c	FUNCTION_7
0x4000b14	            0xeb38	                           jmp 0x4000b4e	      1592	reloc.c	FUNCTION_7	SWITCH_3
0x4000b16	        0x498b4708	                mov rax, qword [r15 + 8]	      1594	reloc.c	FUNCTION_7	SWITCH_3	CALL_12
0x4000b1a	        0x488b3424	                    mov rsi, qword [rsp]	      1594	reloc.c	FUNCTION_7	SWITCH_3	CALL_12
0x4000b1e	          0xff5060	                 call qword [rax + 0x60]	      1594	reloc.c	FUNCTION_7	SWITCH_3	CALL_12
0x4000b21	        0x8b442410	            mov eax, dword [rsp + 0x10] 	      1608	reloc.c	FUNCTION_7
0x4000b25	            0xeb27	                           jmp 0x4000b4e	      1595	reloc.c	FUNCTION_7	SWITCH_3
0x4000b27	        0x498b4708	                mov rax, qword [r15 + 8]	      1597	reloc.c	FUNCTION_7	SWITCH_3	CALL_13
0x4000b2b	        0x488b3424	                    mov rsi, qword [rsp]	      1597	reloc.c	FUNCTION_7	SWITCH_3	CALL_13
0x4000b2f	          0xff5048	                 call qword [rax + 0x48]	      1597	reloc.c	FUNCTION_7	SWITCH_3	CALL_13
0x4000b32	        0x8b442410	            mov eax, dword [rsp + 0x10] 	      1608	reloc.c	FUNCTION_7
0x4000b36	            0xeb16	                           jmp 0x4000b4e	      1598	reloc.c	FUNCTION_7	SWITCH_3
0x4000b38	        0x498b4708	                mov rax, qword [r15 + 8]	      1601	reloc.c	FUNCTION_7	SWITCH_3	CALL_14
0x4000b3c	        0x488b3424	                    mov rsi, qword [rsp]	      1601	reloc.c	FUNCTION_7	SWITCH_3	CALL_14
0x4000b40	          0xff5030	                 call qword [rax + 0x30]	      1601	reloc.c	FUNCTION_7	SWITCH_3	CALL_14
0x4000b43	        0x8b442410	            mov eax, dword [rsp + 0x10] 	      1608	reloc.c	FUNCTION_7
0x4000b47	            0xeb05	                           jmp 0x4000b4e	      1605	reloc.c	FUNCTION_7	SWITCH_3
0x4000b49	      0xb802000000	                              mov eax, 2	      1463	reloc.c	FUNCTION_7	SWITCH_1
0x4000b4e	        0x4883c428	                           add rsp, 0x28	      1609	reloc.c	FUNCTION_7
0x4000b52	              0x5b	                                 pop rbx	      1609	reloc.c	FUNCTION_7
0x4000b53	              0x5d	                                 pop rbp	      1609	reloc.c	FUNCTION_7
0x4000b54	            0x415c	                                 pop r12	      1609	reloc.c	FUNCTION_7
0x4000b56	            0x415d	                                 pop r13	      1609	reloc.c	FUNCTION_7
0x4000b58	            0x415e	                                 pop r14	      1609	reloc.c	FUNCTION_7
0x4000b5a	            0x415f	                                 pop r15	      1609	reloc.c	FUNCTION_7
0x4000b5c	              0xc3	                                     ret	      1609	reloc.c	FUNCTION_7
_bfd_unrecognized_reloc	FOR,0:CALL,5:functions,0:ELSE,0:SWITCH,0:WHILE,0:IF,0:DO,0	31
0x400132f	            0x4154	                                push r12	      8405	reloc.c	FUNCTION_19
0x4001331	              0x55	                                push rbp	      8405	reloc.c	FUNCTION_19
0x4001332	              0x53	                                push rbx	      8405	reloc.c	FUNCTION_19
0x4001333	          0x4889fb	                            mov rbx, rdi	      8405	reloc.c	FUNCTION_19
0x4001336	          0x4989f4	                            mov r12, rsi	      8405	reloc.c	FUNCTION_19
0x4001339	            0x89d5	                            mov ebp, edx	      8405	reloc.c	FUNCTION_19
0x400133b	      0xba05000000	                              mov edx, 5	      8407	reloc.c	FUNCTION_19	CALL_2
0x4001340	      0xbe00000000	                              mov esi, 0	      8407	reloc.c	FUNCTION_19	CALL_2
0x4001345	      0xbf00000000	                              mov edi, 0	      8407	reloc.c	FUNCTION_19	CALL_2
0x400134a	      0xe800000000	                          call 0x400134f	      8407	reloc.c	FUNCTION_19	CALL_2
0x400134f	          0x4c89e1	                            mov rcx, r12	      8407	reloc.c	FUNCTION_19	CALL_2
0x4001352	            0x89ea	                            mov edx, ebp	      8407	reloc.c	FUNCTION_19	CALL_2
0x4001354	          0x4889de	                            mov rsi, rbx	      8407	reloc.c	FUNCTION_19	CALL_2
0x4001357	          0x4889c7	                            mov rdi, rax	      8407	reloc.c	FUNCTION_19	CALL_2
0x400135a	      0xb800000000	                              mov eax, 0	      8407	reloc.c	FUNCTION_19	CALL_2
0x400135f	      0xe800000000	                          call 0x4001364	      8407	reloc.c	FUNCTION_19	CALL_2
0x4001364	      0xba05000000	                              mov edx, 5	      8411	reloc.c	FUNCTION_19	CALL_4
0x4001369	      0xbe00000000	                              mov esi, 0	      8411	reloc.c	FUNCTION_19	CALL_4
0x400136e	      0xbf00000000	                              mov edi, 0	      8411	reloc.c	FUNCTION_19	CALL_4
0x4001373	      0xe800000000	                          call 0x4001378	      8411	reloc.c	FUNCTION_19	CALL_4
0x4001378	      0xbe00000000	                              mov esi, 0	      8411	reloc.c	FUNCTION_19	CALL_4
0x400137d	          0x4889c7	                            mov rdi, rax	      8411	reloc.c	FUNCTION_19	CALL_4
0x4001380	      0xb800000000	                              mov eax, 0	      8411	reloc.c	FUNCTION_19	CALL_4
0x4001385	      0xe800000000	                          call 0x400138a	      8411	reloc.c	FUNCTION_19	CALL_4
0x400138a	      0xbf11000000	                           mov edi, 0x11	      8414	reloc.c	FUNCTION_19	CALL_5
0x400138f	      0xe800000000	                          call 0x4001394	      8414	reloc.c	FUNCTION_19	CALL_5
0x4001394	      0xb800000000	                              mov eax, 0	      8416	reloc.c	FUNCTION_19
0x4001399	              0x5b	                                 pop rbx	      8416	reloc.c	FUNCTION_19
0x400139a	              0x5d	                                 pop rbp	      8416	reloc.c	FUNCTION_19
0x400139b	            0x415c	                                 pop r12	      8416	reloc.c	FUNCTION_19
0x400139d	              0xc3	                                     ret	      8416	reloc.c	FUNCTION_19
_bfd_nodynamic_canonicalize_dynamic_reloc	FOR,0:CALL,1:functions,0:ELSE,0:SWITCH,0:WHILE,0:IF,0:DO,0	4
0x40013ba	        0x4883ec08	                              sub rsp, 8	      8437	reloc.c	FUNCTION_22
0x40013be	      0xe800000000	                          call 0x40013c3	      8438	reloc.c	FUNCTION_22	CALL_1
0x40013c3	        0x4883c408	                              add rsp, 8	      8439	reloc.c	FUNCTION_22
0x40013c7	              0xc3	                                     ret	      8439	reloc.c	FUNCTION_22
bfd_generic_get_relocated_section_contents	FOR,1:CALL,22:functions,0:ELSE,1:SWITCH,1:WHILE,0:IF,11:DO,0	258
0x4000efb	            0x4157	                                push r15	      8211	reloc.c	FUNCTION_17
0x4000efd	            0x4156	                                push r14	      8211	reloc.c	FUNCTION_17
0x4000eff	            0x4155	                                push r13	      8211	reloc.c	FUNCTION_17
0x4000f01	            0x4154	                                push r12	      8211	reloc.c	FUNCTION_17
0x4000f03	              0x55	                                push rbp	      8211	reloc.c	FUNCTION_17
0x4000f04	              0x53	                                push rbx	      8211	reloc.c	FUNCTION_17
0x4000f05	        0x4883ec48	                           sub rsp, 0x48	      8211	reloc.c	FUNCTION_17
0x4000f09	      0x48897c2408	                mov qword [rsp + 8], rdi	      8211	reloc.c	FUNCTION_17
0x4000f0e	          0x4989f6	                            mov r14, rsi	      8211	reloc.c	FUNCTION_17
0x4000f11	      0x48894c2428	             mov qword [rsp + 0x28], rcx	      8211	reloc.c	FUNCTION_17
0x4000f16	      0x4489442404	                mov dword [rsp + 4], r8d	      8211	reloc.c	FUNCTION_17
0x4000f1b	          0x4d89cd	                             mov r13, r9	      8211	reloc.c	FUNCTION_17
0x4000f1e	    0x64488b042528	                mov rax, qword fs:[0x28]	      8211	reloc.c	FUNCTION_17
0x4000f27	      0x4889442438	             mov qword [rsp + 0x38], rax	      8211	reloc.c	FUNCTION_17
0x4000f2c	            0x31c0	                            xor eax, eax	      8211	reloc.c	FUNCTION_17
0x4000f2e	        0x488b5a20	            mov rbx, qword [rdx + 0x20] 	      8212	reloc.c	FUNCTION_17
0x4000f32	    0x488babf00000	            mov rbp, qword [rbx + 0xf0] 	      8212	reloc.c	FUNCTION_17
0x4000f39	          0x4889de	                            mov rsi, rbx	      8218	reloc.c	FUNCTION_17	CALL_1
0x4000f3c	          0x4889ef	                            mov rdi, rbp	      8218	reloc.c	FUNCTION_17	CALL_1
0x4000f3f	      0xe800000000	                          call 0x4000f44	      8218	reloc.c	FUNCTION_17	CALL_1
0x4000f44	          0x4885c0	                           test rax, rax	      8219	reloc.c	FUNCTION_17	IF_1
0x4000f47	     0xf889d030000	                            js 0x40012ea	      8219	reloc.c	FUNCTION_17	IF_1
0x4000f4d	          0x4989c4	                            mov r12, rax	      8219	reloc.c	FUNCTION_17	IF_1
0x4000f50	      0x488d542428	                   lea rdx, [rsp + 0x28]	      8223	reloc.c	FUNCTION_17	IF_2	CALL_2
0x4000f55	          0x4889de	                            mov rsi, rbx	      8223	reloc.c	FUNCTION_17	IF_2	CALL_2
0x4000f58	          0x4889ef	                            mov rdi, rbp	      8223	reloc.c	FUNCTION_17	IF_2	CALL_2
0x4000f5b	      0xe800000000	                          call 0x4000f60	      8223	reloc.c	FUNCTION_17	IF_2	CALL_2
0x4000f60	            0x85c0	                           test eax, eax	      8223	reloc.c	FUNCTION_17	IF_2	CALL_2
0x4000f62	     0xf8489030000	                            je 0x40012f1	      8223	reloc.c	FUNCTION_17	IF_2	CALL_2
0x4000f68	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      8226	reloc.c	FUNCTION_17	IF_3
0x4000f6d	          0x4885c0	                           test rax, rax	      8226	reloc.c	FUNCTION_17	IF_3
0x4000f70	     0xf8487030000	                            je 0x40012fd	      8226	reloc.c	FUNCTION_17	IF_3
0x4000f76	          0x4d85e4	                           test r12, r12	      8229	reloc.c	FUNCTION_17	IF_4
0x4000f79	     0xf847e030000	                            je 0x40012fd	      8229	reloc.c	FUNCTION_17	IF_4
0x4000f7f	          0x4c89e7	                            mov rdi, r12	      8232	reloc.c	FUNCTION_17	CALL_3
0x4000f82	      0xe800000000	                          call 0x4000f87	      8232	reloc.c	FUNCTION_17	CALL_3
0x4000f87	          0x4989c7	                            mov r15, rax	      8232	reloc.c	FUNCTION_17	CALL_3
0x4000f8a	          0x4885c0	                           test rax, rax	      8233	reloc.c	FUNCTION_17	IF_5
0x4000f8d	     0xf8465030000	                            je 0x40012f8	      8233	reloc.c	FUNCTION_17	IF_5
0x4000f93	          0x4c89e9	                            mov rcx, r13	      8236	reloc.c	FUNCTION_17	CALL_4
0x4000f96	          0x4889c2	                            mov rdx, rax	      8236	reloc.c	FUNCTION_17	CALL_4
0x4000f99	          0x4889de	                            mov rsi, rbx	      8236	reloc.c	FUNCTION_17	CALL_4
0x4000f9c	          0x4889ef	                            mov rdi, rbp	      8236	reloc.c	FUNCTION_17	CALL_4
0x4000f9f	      0xe800000000	                          call 0x4000fa4	      8236	reloc.c	FUNCTION_17	CALL_4
0x4000fa4	          0x4885c0	                           test rax, rax	      8240	reloc.c	FUNCTION_17	IF_6
0x4000fa7	     0xf882e030000	                            js 0x40012db	      8240	reloc.c	FUNCTION_17	IF_6
0x4000fad	          0x4885c0	                           test rax, rax	      8243	reloc.c	FUNCTION_17	IF_7
0x4000fb0	     0xf8e16030000	                           jle 0x40012cc	      8243	reloc.c	FUNCTION_17	IF_7
0x4000fb6	        0x49833f00	                      cmp qword [r15], 0	      8247	reloc.c	FUNCTION_17	IF_7	FOR_1
0x4000fba	     0xf85d4020000	                           jne 0x4001294	      8247	reloc.c	FUNCTION_17	IF_7	FOR_1
0x4000fc0	      0xe907030000	                           jmp 0x40012cc	      8247	reloc.c	FUNCTION_17	IF_7	FOR_1
0x4000fc5	    0x48c744243000	               mov qword [rsp + 0x30], 0	      8249	reloc.c	FUNCTION_17	IF_7	FOR_1
0x4000fce	        0x498b3424	                    mov rsi, qword [r12]	      8253	reloc.c	FUNCTION_17	IF_7	FOR_1
0x4000fd2	          0x488b06	                    mov rax, qword [rsi]	      8253	reloc.c	FUNCTION_17	IF_7	FOR_1
0x4000fd5	          0x488b00	                    mov rax, qword [rax]	      8253	reloc.c	FUNCTION_17	IF_7	FOR_1
0x4000fd8	          0x4885c0	                           test rax, rax	      8256	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8
0x4000fdb	            0x753a	                           jne 0x4001017	      8256	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8
0x4000fdd	        0x498b4620	            mov rax, qword [r14 + 0x20] 	      8258	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8	CALL_5
0x4000fe1	        0x488b6858	            mov rbp, qword [rax + 0x58] 	      8258	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8	CALL_5
0x4000fe5	        0x4c8b6608	                mov r12, qword [rsi + 8]	      8258	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8	CALL_5
0x4000fe9	      0xba05000000	                              mov edx, 5	      8260	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8	CALL_6
0x4000fee	      0xbe00000000	                              mov esi, 0	      8260	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8	CALL_6
0x4000ff3	      0xbf00000000	                              mov edi, 0	      8260	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8	CALL_6
0x4000ff8	      0xe800000000	                          call 0x4000ffd	      8260	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8	CALL_6
0x4000ffd	          0x4c89e1	                            mov rcx, r12	      8258	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8	CALL_5
0x4001000	          0x4889da	                            mov rdx, rbx	      8258	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8	CALL_5
0x4001003	      0x488b742408	                mov rsi, qword [rsp + 8]	      8258	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8	CALL_5
0x4001008	          0x4889c7	                            mov rdi, rax	      8258	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8	CALL_5
0x400100b	      0xb800000000	                              mov eax, 0	      8258	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8	CALL_5
0x4001010	            0xffd5	                                call rbp	      8258	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8	CALL_5
0x4001012	      0xe9c4020000	                           jmp 0x40012db	      8262	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8
0x4001017	        0x488b4020	            mov rax, qword [rax + 0x20] 	      8265	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_7
0x400101b	    0x483d00000000	                              cmp rax, 0	      8265	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_7
0x4001021	     0xf8499000000	                            je 0x40010c0	      8265	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_7
0x4001027	          0x4885c0	                           test rax, rax	      8265	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_7
0x400102a	     0xf8490000000	                            je 0x40010c0	      8265	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_7
0x4001030	    0x488178680000	               cmp qword [rax + 0x68], 0	      8265	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_7
0x4001038	     0xf8582000000	                           jne 0x40010c0	      8265	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_7
0x400103e	         0xfb74024	           movzx eax, word [rax + 0x24] 	      8265	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_7
0x4001042	        0x66258003	                           and ax, 0x380	      8265	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_7
0x4001046	        0x662d0001	                           sub ax, 0x100	      8265	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_7
0x400104a	        0x66a9fffe	                         test ax, 0xfeff	      8265	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_7
0x400104e	            0x7470	                            je 0x40010c0	      8265	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_7
0x4001050	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      8272	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_9
0x4001055	      0x4889442418	             mov qword [rsp + 0x18], rax	      8272	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_9
0x400105a	        0x4c8b6e08	                mov r13, qword [rsi + 8]	      8272	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_9
0x400105e	          0x4889ef	                            mov rdi, rbp	      8272	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_9
0x4001061	      0xe800000000	                          call 0x4001066	      8272	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_9
0x4001066	            0x89c1	                            mov ecx, eax	      8273	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_10
0x4001068	        0x4c0fafe9	                           imul r13, rcx	      8273	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_10
0x400106c	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      8273	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_10
0x4001071	        0x4a8d0c28	                    lea rcx, [rax + r13]	      8273	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_10
0x4001075	        0x498b0424	                    mov rax, qword [r12]	      8273	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_10
0x4001079	        0x488b7818	            mov rdi, qword [rax + 0x18] 	      8273	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_10
0x400107d	          0x4889da	                            mov rdx, rbx	      8273	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_10
0x4001080	          0x4889ee	                            mov rsi, rbp	      8273	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_10
0x4001083	      0xe800000000	                          call 0x4001088	      8273	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9	CALL_10
0x4001088	        0x498b0424	                    mov rax, qword [r12]	      8275	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9
0x400108c	    0x488b15000000	            mov rdx, qword [0x04001093] 	      8275	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9
0x4001093	          0x488910	                    mov qword [rax], rdx	      8275	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9
0x4001096	        0x498b0424	                    mov rax, qword [r12]	      8276	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9
0x400109a	    0x48c740100000	               mov qword [rax + 0x10], 0	      8276	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9
0x40010a2	        0x498b0424	                    mov rax, qword [r12]	      8277	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9
0x40010a6	    0x48c740180000	               mov qword [rax + 0x18], 0	      8277	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9
0x40010ae	    0x41bd02000000	                             mov r13d, 2	      8278	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_9
0x40010b4	      0x837c240400	                  cmp dword [rsp + 4], 0	      8288	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x40010b9	            0x7529	                           jne 0x40010e4	      8288	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x40010bb	      0xe9c3010000	                           jmp 0x4001283	      8288	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x40010c0	      0x4c8d4c2430	                    lea r9, [rsp + 0x30]	      8281	reloc.c	FUNCTION_17	IF_7	FOR_1	ELSE_1	CALL_11
0x40010c5	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	      8281	reloc.c	FUNCTION_17	IF_7	FOR_1	ELSE_1	CALL_11
0x40010ca	          0x4889d9	                            mov rcx, rbx	      8281	reloc.c	FUNCTION_17	IF_7	FOR_1	ELSE_1	CALL_11
0x40010cd	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      8281	reloc.c	FUNCTION_17	IF_7	FOR_1	ELSE_1	CALL_11
0x40010d2	          0x4889ef	                            mov rdi, rbp	      8281	reloc.c	FUNCTION_17	IF_7	FOR_1	ELSE_1	CALL_11
0x40010d5	      0xe800000000	                          call 0x40010da	      8281	reloc.c	FUNCTION_17	IF_7	FOR_1	ELSE_1	CALL_11
0x40010da	          0x4189c5	                           mov r13d, eax	      8281	reloc.c	FUNCTION_17	IF_7	FOR_1	ELSE_1	CALL_11
0x40010dd	      0x837c240400	                  cmp dword [rsp + 4], 0	      8288	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x40010e2	            0x7420	                            je 0x4001104	      8288	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x40010e4	        0x488b4368	            mov rax, qword [rbx + 0x68] 	      8290	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x40010e8	        0x498b3424	                    mov rsi, qword [r12]	      8293	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x40010ec	    0x8b8888000000	            mov ecx, dword [rax + 0x88] 	      8293	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x40010f2	    0x488b90800000	            mov rdx, qword [rax + 0x80] 	      8293	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x40010f9	        0x488934ca	            mov qword [rdx + rcx*8], rsi	      8293	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x40010fd	    0x838088000000	               add dword [rax + 0x88], 1	      8294	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_10
0x4001104	        0x4183fd02	                             cmp r13d, 2	      8297	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11
0x4001108	     0xf8475010000	                            je 0x4001283	      8297	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11
0x400110e	        0x418d45fd	                      lea eax, [r13 - 3]	      8299	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001112	          0x83f806	                              cmp eax, 6	      8299	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001115	     0xf871e010000	                            ja 0x4001239	      8299	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x400111b	            0x89c0	                            mov eax, eax	      8299	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x400111d	    0xff24c5000000	                       jmp qword [rax*8]	      8299	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001124	        0x498b0424	                    mov rax, qword [r12]	      8304	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001128	          0x488b10	                    mov rdx, qword [rax]	      8303	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_12
0x400112b	          0x488b12	                    mov rdx, qword [rdx]	      8302	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x400112e	        0x488b7208	                mov rsi, qword [rdx + 8]	      8302	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001132	        0x4d8b5620	            mov r10, qword [r14 + 0x20] 	      8302	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001136	    0x41b901000000	                              mov r9d, 1	      8302	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x400113c	        0x4c8b4008	                 mov r8, qword [rax + 8]	      8302	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001140	          0x4889d9	                            mov rcx, rbx	      8302	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001143	          0x4889ea	                            mov rdx, rbp	      8302	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001146	          0x4c89f7	                            mov rdi, r14	      8302	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001149	        0x41ff5230	                 call qword [r10 + 0x30]	      8302	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x400114d	      0xe931010000	                           jmp 0x4001283	      8305	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001152	    0x48837c243000	               cmp qword [rsp + 0x30], 0	      8307	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_13
0x4001158	            0x750f	                           jne 0x4001169	      8307	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_13
0x400115a	      0xbe73200000	                         mov esi, 0x2073	      8307	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_13
0x400115f	      0xbf00000000	                              mov edi, 0	      8307	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_13
0x4001164	      0xe800000000	                          call 0x4001169	      8307	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_13
0x4001169	        0x498b1424	                    mov rdx, qword [r12]	      8308	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x400116d	        0x498b4620	            mov rax, qword [r14 + 0x20] 	      8308	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001171	        0x4c8b4208	                 mov r8, qword [rdx + 8]	      8308	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001175	          0x4889d9	                            mov rcx, rbx	      8308	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001178	          0x4889ea	                            mov rdx, rbp	      8308	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x400117b	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      8308	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001180	          0x4c89f7	                            mov rdi, r14	      8308	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001183	          0xff5040	                 call qword [rax + 0x40]	      8308	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001186	      0xe9f8000000	                           jmp 0x4001283	      8311	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x400118b	        0x498b0424	                    mov rax, qword [r12]	      8317	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x400118f	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      8316	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001193	        0x488b4a28	            mov rcx, qword [rdx + 0x28] 	      8313	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001197	          0x488b10	                    mov rdx, qword [rax]	      8315	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_14
0x400119a	          0x488b12	                    mov rdx, qword [rdx]	      8313	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x400119d	        0x488b5208	                mov rdx, qword [rdx + 8]	      8313	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x40011a1	        0x4d8b5620	            mov r10, qword [r14 + 0x20] 	      8313	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x40011a5	          0xff7008	                    push qword [rax + 8]	      8313	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x40011a8	              0x53	                                push rbx	      8313	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x40011a9	          0x4989e9	                             mov r9, rbp	      8313	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x40011ac	        0x4c8b4010	              mov r8, qword [rax + 0x10]	      8313	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x40011b0	      0xbe00000000	                              mov esi, 0	      8313	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x40011b5	          0x4c89f7	                            mov rdi, r14	      8313	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x40011b8	        0x41ff5238	                 call qword [r10 + 0x38]	      8313	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x40011bc	        0x4883c410	                           add rsp, 0x10	      8318	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x40011c0	      0xe9be000000	                           jmp 0x4001283	      8318	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x40011c5	        0x498b4620	            mov rax, qword [r14 + 0x20] 	      8324	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_15
0x40011c9	        0x488b6858	            mov rbp, qword [rax + 0x58] 	      8324	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_15
0x40011cd	        0x4d8b2424	                    mov r12, qword [r12]	      8324	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_15
0x40011d1	      0xba05000000	                              mov edx, 5	      8326	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_16
0x40011d6	      0xbe00000000	                              mov esi, 0	      8326	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_16
0x40011db	      0xbf00000000	                              mov edi, 0	      8326	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_16
0x40011e0	      0xe800000000	                          call 0x40011e5	      8326	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_16
0x40011e5	          0x4c89e1	                            mov rcx, r12	      8324	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_15
0x40011e8	          0x4889da	                            mov rdx, rbx	      8324	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_15
0x40011eb	      0x488b742408	                mov rsi, qword [rsp + 8]	      8324	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_15
0x40011f0	          0x4889c7	                            mov rdi, rax	      8324	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_15
0x40011f3	      0xb800000000	                              mov eax, 0	      8324	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_15
0x40011f8	            0xffd5	                                call rbp	      8324	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_15
0x40011fa	      0xe9dc000000	                           jmp 0x40012db	      8328	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x40011ff	        0x498b4620	            mov rax, qword [r14 + 0x20] 	      8334	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_17
0x4001203	        0x488b6858	            mov rbp, qword [rax + 0x58] 	      8334	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_17
0x4001207	        0x4d8b2424	                    mov r12, qword [r12]	      8334	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_17
0x400120b	      0xba05000000	                              mov edx, 5	      8336	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_18
0x4001210	      0xbe00000000	                              mov esi, 0	      8336	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_18
0x4001215	      0xbf00000000	                              mov edi, 0	      8336	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_18
0x400121a	      0xe800000000	                          call 0x400121f	      8336	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_18
0x400121f	          0x4c89e1	                            mov rcx, r12	      8334	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_17
0x4001222	          0x4889da	                            mov rdx, rbx	      8334	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_17
0x4001225	      0x488b742408	                mov rsi, qword [rsp + 8]	      8334	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_17
0x400122a	          0x4889c7	                            mov rdi, rax	      8334	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_17
0x400122d	      0xb800000000	                              mov eax, 0	      8334	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_17
0x4001232	            0xffd5	                                call rbp	      8334	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_17
0x4001234	      0xe9a2000000	                           jmp 0x40012db	      8338	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1
0x4001239	        0x498b4620	            mov rax, qword [r14 + 0x20] 	      8343	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_19
0x400123d	        0x488b4058	            mov rax, qword [rax + 0x58] 	      8343	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_19
0x4001241	      0x4889442418	             mov qword [rsp + 0x18], rax	      8343	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_19
0x4001246	        0x498b3c24	                    mov rdi, qword [r12]	      8343	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_19
0x400124a	      0x48897c2420	             mov qword [rsp + 0x20], rdi	      8343	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_19
0x400124f	      0xba05000000	                              mov edx, 5	      8345	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_20
0x4001254	      0xbe00000000	                              mov esi, 0	      8345	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_20
0x4001259	      0xbf00000000	                              mov edi, 0	      8345	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_20
0x400125e	      0xe800000000	                          call 0x4001263	      8345	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_20
0x4001263	          0x4589e8	                           mov r8d, r13d	      8343	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_19
0x4001266	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	      8343	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_19
0x400126b	          0x4889da	                            mov rdx, rbx	      8343	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_19
0x400126e	      0x488b742408	                mov rsi, qword [rsp + 8]	      8343	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_19
0x4001273	          0x4889c7	                            mov rdi, rax	      8343	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_19
0x4001276	      0xb800000000	                              mov eax, 0	      8343	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_19
0x400127b	      0x4c8b5c2418	            mov r11, qword [rsp + 0x18] 	      8343	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_19
0x4001280	          0x41ffd3	                                call r11	      8343	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_11	SWITCH_1	CALL_19
0x4001283	        0x4983c408	                              add r12, 8	      8247	reloc.c	FUNCTION_17	IF_7	FOR_1
0x4001287	      0x49833c2400	                      cmp qword [r12], 0	      8247	reloc.c	FUNCTION_17	IF_7	FOR_1
0x400128c	     0xf8533fdffff	                           jne 0x4000fc5	      8247	reloc.c	FUNCTION_17	IF_7	FOR_1
0x4001292	            0xeb38	                           jmp 0x40012cc	      8247	reloc.c	FUNCTION_17	IF_7	FOR_1
0x4001294	    0x48c744243000	               mov qword [rsp + 0x30], 0	      8249	reloc.c	FUNCTION_17	IF_7	FOR_1
0x400129d	          0x498b37	                    mov rsi, qword [r15]	      8253	reloc.c	FUNCTION_17	IF_7	FOR_1
0x40012a0	          0x488b06	                    mov rax, qword [rsi]	      8253	reloc.c	FUNCTION_17	IF_7	FOR_1
0x40012a3	          0x488b00	                    mov rax, qword [rax]	      8253	reloc.c	FUNCTION_17	IF_7	FOR_1
0x40012a6	          0x4885c0	                           test rax, rax	      8256	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8
0x40012a9	     0xf842efdffff	                            je 0x4000fdd	      8256	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8
0x40012af	      0x837c240400	                  cmp dword [rsp + 4], 0	      8256	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8
0x40012b4	      0xba00000000	                              mov edx, 0	      8256	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8
0x40012b9	    0x480f45542408	             cmovne rdx, qword [rsp + 8]	      8256	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8
0x40012bf	      0x4889542410	             mov qword [rsp + 0x10], rdx	      8256	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8
0x40012c4	          0x4d89fc	                            mov r12, r15	      8256	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8
0x40012c7	      0xe94bfdffff	                           jmp 0x4001017	      8256	reloc.c	FUNCTION_17	IF_7	FOR_1	IF_8
0x40012cc	          0x4c89ff	                            mov rdi, r15	      8354	reloc.c	FUNCTION_17	CALL_21
0x40012cf	      0xe800000000	                          call 0x40012d4	      8354	reloc.c	FUNCTION_17	CALL_21
0x40012d4	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      8355	reloc.c	FUNCTION_17
0x40012d9	            0xeb22	                           jmp 0x40012fd	      8355	reloc.c	FUNCTION_17
0x40012db	          0x4c89ff	                            mov rdi, r15	      8358	reloc.c	FUNCTION_17	CALL_22
0x40012de	      0xe800000000	                          call 0x40012e3	      8358	reloc.c	FUNCTION_17	CALL_22
0x40012e3	      0xb800000000	                              mov eax, 0	      8359	reloc.c	FUNCTION_17
0x40012e8	            0xeb13	                           jmp 0x40012fd	      8359	reloc.c	FUNCTION_17
0x40012ea	      0xb800000000	                              mov eax, 0	      8220	reloc.c	FUNCTION_17	IF_1
0x40012ef	            0xeb0c	                           jmp 0x40012fd	      8220	reloc.c	FUNCTION_17	IF_1
0x40012f1	      0xb800000000	                              mov eax, 0	      8224	reloc.c	FUNCTION_17	IF_2
0x40012f6	            0xeb05	                           jmp 0x40012fd	      8224	reloc.c	FUNCTION_17	IF_2
0x40012f8	      0xb800000000	                              mov eax, 0	      8234	reloc.c	FUNCTION_17	IF_5
0x40012fd	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	      8360	reloc.c	FUNCTION_17
0x4001302	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      8360	reloc.c	FUNCTION_17
0x400130b	            0x7405	                            je 0x4001312	      8360	reloc.c	FUNCTION_17
0x400130d	      0xe800000000	                          call 0x4001312	      8360	reloc.c	FUNCTION_17
0x4001312	        0x4883c448	                           add rsp, 0x48	      8360	reloc.c	FUNCTION_17
0x4001316	              0x5b	                                 pop rbx	      8360	reloc.c	FUNCTION_17
0x4001317	              0x5d	                                 pop rbp	      8360	reloc.c	FUNCTION_17
0x4001318	            0x415c	                                 pop r12	      8360	reloc.c	FUNCTION_17
0x400131a	            0x415d	                                 pop r13	      8360	reloc.c	FUNCTION_17
0x400131c	            0x415e	                                 pop r14	      8360	reloc.c	FUNCTION_17
0x400131e	            0x415f	                                 pop r15	      8360	reloc.c	FUNCTION_17
0x4001320	              0xc3	                                     ret	      8360	reloc.c	FUNCTION_17
bfd_generic_relax_section	FOR,0:CALL,2:functions,0:ELSE,0:SWITCH,0:WHILE,0:IF,1:DO,0	23
0x4000e6a	              0x55	                                push rbp	      8109	reloc.c	FUNCTION_13
0x4000e6b	              0x53	                                push rbx	      8109	reloc.c	FUNCTION_13
0x4000e6c	        0x4883ec08	                              sub rsp, 8	      8109	reloc.c	FUNCTION_13
0x4000e70	          0x4889cb	                            mov rbx, rcx	      8109	reloc.c	FUNCTION_13
0x4000e73	           0xfb602	                   movzx eax, byte [rdx]	      8110	reloc.c	FUNCTION_13	IF_1	CALL_1
0x4000e76	          0x83e003	                              and eax, 3	      8110	reloc.c	FUNCTION_13	IF_1	CALL_1
0x4000e79	            0x3c02	                               cmp al, 2	      8110	reloc.c	FUNCTION_13	IF_1	CALL_1
0x4000e7b	            0x7526	                           jne 0x4000ea3	      8110	reloc.c	FUNCTION_13	IF_1	CALL_1
0x4000e7d	        0x488b4220	            mov rax, qword [rdx + 0x20] 	      8111	reloc.c	FUNCTION_13	IF_1
0x4000e81	        0x488b6858	            mov rbp, qword [rax + 0x58] 	      8111	reloc.c	FUNCTION_13	IF_1
0x4000e85	      0xba05000000	                              mov edx, 5	      8112	reloc.c	FUNCTION_13	CALL_2
0x4000e8a	      0xbe00000000	                              mov esi, 0	      8112	reloc.c	FUNCTION_13	CALL_2
0x4000e8f	      0xbf00000000	                              mov edi, 0	      8112	reloc.c	FUNCTION_13	CALL_2
0x4000e94	      0xe800000000	                          call 0x4000e99	      8112	reloc.c	FUNCTION_13	CALL_2
0x4000e99	          0x4889c7	                            mov rdi, rax	      8111	reloc.c	FUNCTION_13	IF_1
0x4000e9c	      0xb800000000	                              mov eax, 0	      8111	reloc.c	FUNCTION_13	IF_1
0x4000ea1	            0xffd5	                                call rbp	      8111	reloc.c	FUNCTION_13	IF_1
0x4000ea3	    0xc70300000000	                      mov dword [rbx], 0	      8114	reloc.c	FUNCTION_13
0x4000ea9	      0xb801000000	                              mov eax, 1	      8116	reloc.c	FUNCTION_13
0x4000eae	        0x4883c408	                              add rsp, 8	      8116	reloc.c	FUNCTION_13
0x4000eb2	              0x5b	                                 pop rbx	      8116	reloc.c	FUNCTION_13
0x4000eb3	              0x5d	                                 pop rbp	      8116	reloc.c	FUNCTION_13
0x4000eb4	              0xc3	                                     ret	      8116	reloc.c	FUNCTION_13
bfd_generic_gc_sections	FOR,0:CALL,0:functions,0:ELSE,0:SWITCH,0:WHILE,0:IF,0:DO,0	2
0x4000eb5	      0xb801000000	                              mov eax, 1	      8136	reloc.c	FUNCTION_14
0x4000eba	              0xc3	                                     ret	      8136	reloc.c	FUNCTION_14
bfd_reloc_name_lookup	FOR,0:CALL,1:functions,0:ELSE,0:SWITCH,0:WHILE,0:IF,0:DO,0	5
0x4000dba	        0x4883ec08	                              sub rsp, 8	      8020	reloc.c	FUNCTION_10
0x4000dbe	        0x488b4708	                mov rax, qword [rdi + 8]	      8021	reloc.c	FUNCTION_10	CALL_1
0x4000dc2	    0xff9088020000	                call qword [rax + 0x288]	      8021	reloc.c	FUNCTION_10	CALL_1
0x4000dc8	        0x4883c408	                              add rsp, 8	      8022	reloc.c	FUNCTION_10
0x4000dcc	              0xc3	                                     ret	      8022	reloc.c	FUNCTION_10
_bfd_norelocs_bfd_reloc_name_lookup	FOR,0:CALL,1:functions,0:ELSE,0:SWITCH,0:WHILE,0:IF,0:DO,0	4
0x40013ac	        0x4883ec08	                              sub rsp, 8	      8429	reloc.c	FUNCTION_21
0x40013b0	      0xe800000000	                          call 0x40013b5	      8430	reloc.c	FUNCTION_21	CALL_1
0x40013b5	        0x4883c408	                              add rsp, 8	      8431	reloc.c	FUNCTION_21
0x40013b9	              0xc3	                                     ret	      8431	reloc.c	FUNCTION_21
bfd_reloc_offset_in_range	FOR,0:CALL,2:functions,0:ELSE,0:SWITCH,0:WHILE,0:IF,0:DO,0	26
0x4000155	              0x55	                                push rbp	       567	reloc.c	FUNCTION_3
0x4000156	              0x53	                                push rbx	       567	reloc.c	FUNCTION_3
0x4000157	        0x4883ec08	                              sub rsp, 8	       567	reloc.c	FUNCTION_3
0x400015b	          0x4889cd	                            mov rbp, rcx	       567	reloc.c	FUNCTION_3
0x400015e	         0xfb64644	           movzx eax, byte [rsi + 0x44] 	       568	reloc.c	FUNCTION_3	CALL_1
0x4000162	          0x83e018	                           and eax, 0x18	       568	reloc.c	FUNCTION_3	CALL_1
0x4000165	            0x3c10	                            cmp al, 0x10	       568	reloc.c	FUNCTION_3	CALL_1
0x4000167	            0x7409	                            je 0x4000172	       568	reloc.c	FUNCTION_3	CALL_1
0x4000169	        0x488b5a40	            mov rbx, qword [rdx + 0x40] 	       568	reloc.c	FUNCTION_3	CALL_1
0x400016d	          0x4885db	                           test rbx, rbx	       568	reloc.c	FUNCTION_3	CALL_1
0x4000170	            0x7504	                           jne 0x4000176	       568	reloc.c	FUNCTION_3	CALL_1
0x4000172	        0x488b5a38	            mov rbx, qword [rdx + 0x38] 	       568	reloc.c	FUNCTION_3	CALL_1
0x4000176	      0xe800000000	                          call 0x400017b	       569	reloc.c	FUNCTION_3	CALL_2
0x400017b	      0xba00000000	                              mov edx, 0	       574	reloc.c	FUNCTION_3
0x4000180	          0x4839eb	                            cmp rbx, rbp	       574	reloc.c	FUNCTION_3
0x4000183	            0x720e	                            jb 0x4000193	       574	reloc.c	FUNCTION_3
0x4000185	            0x89c0	                            mov eax, eax	       574	reloc.c	FUNCTION_3
0x4000187	          0x4801c5	                            add rbp, rax	       574	reloc.c	FUNCTION_3
0x400018a	          0x4839eb	                            cmp rbx, rbp	       574	reloc.c	FUNCTION_3
0x400018d	           0xf93c2	                                setae dl	       574	reloc.c	FUNCTION_3
0x4000190	           0xfb6d2	                           movzx edx, dl	       574	reloc.c	FUNCTION_3
0x4000193	            0x89d0	                            mov eax, edx	       575	reloc.c	FUNCTION_3
0x4000195	        0x4883c408	                              add rsp, 8	       575	reloc.c	FUNCTION_3
0x4000199	              0x5b	                                 pop rbx	       575	reloc.c	FUNCTION_3
0x400019a	              0x5d	                                 pop rbp	       575	reloc.c	FUNCTION_3
0x400019b	              0xc3	                                     ret	       575	reloc.c	FUNCTION_3
_bfd_norelocs_bfd_reloc_type_lookup	FOR,0:CALL,1:functions,0:ELSE,0:SWITCH,0:WHILE,0:IF,0:DO,0	4
0x400139e	        0x4883ec08	                              sub rsp, 8	      8422	reloc.c	FUNCTION_20
0x40013a2	      0xe800000000	                          call 0x40013a7	      8423	reloc.c	FUNCTION_20	CALL_1
0x40013a7	        0x4883c408	                              add rsp, 8	      8424	reloc.c	FUNCTION_20
0x40013ab	              0xc3	                                     ret	      8424	reloc.c	FUNCTION_20
_bfd_final_link_relocate	FOR,0:CALL,4:functions,0:ELSE,0:SWITCH,0:WHILE,0:IF,3:DO,0	53
0x4000b5d	            0x4157	                                push r15	      1400	reloc.c	FUNCTION_6
0x4000b5f	            0x4156	                                push r14	      1400	reloc.c	FUNCTION_6
0x4000b61	            0x4155	                                push r13	      1400	reloc.c	FUNCTION_6
0x4000b63	            0x4154	                                push r12	      1400	reloc.c	FUNCTION_6
0x4000b65	              0x55	                                push rbp	      1400	reloc.c	FUNCTION_6
0x4000b66	              0x53	                                push rbx	      1400	reloc.c	FUNCTION_6
0x4000b67	        0x4883ec08	                              sub rsp, 8	      1400	reloc.c	FUNCTION_6
0x4000b6b	          0x4989fd	                            mov r13, rdi	      1400	reloc.c	FUNCTION_6
0x4000b6e	          0x4889f5	                            mov rbp, rsi	      1400	reloc.c	FUNCTION_6
0x4000b71	          0x4989d6	                            mov r14, rdx	      1400	reloc.c	FUNCTION_6
0x4000b74	          0x4989cf	                            mov r15, rcx	      1400	reloc.c	FUNCTION_6
0x4000b77	          0x4c89c3	                             mov rbx, r8	      1400	reloc.c	FUNCTION_6
0x4000b7a	          0x4d89cc	                             mov r12, r9	      1400	reloc.c	FUNCTION_6
0x4000b7d	          0x4889f7	                            mov rdi, rsi	      1402	reloc.c	FUNCTION_6	CALL_1
0x4000b80	      0xe800000000	                          call 0x4000b85	      1402	reloc.c	FUNCTION_6	CALL_1
0x4000b85	            0x89c1	                            mov ecx, eax	      1405	reloc.c	FUNCTION_6	IF_1	CALL_2
0x4000b87	        0x480fafcb	                           imul rcx, rbx	      1405	reloc.c	FUNCTION_6	IF_1	CALL_2
0x4000b8b	          0x4c89f2	                            mov rdx, r14	      1405	reloc.c	FUNCTION_6	IF_1	CALL_2
0x4000b8e	          0x4889ee	                            mov rsi, rbp	      1405	reloc.c	FUNCTION_6	IF_1	CALL_2
0x4000b91	          0x4c89ef	                            mov rdi, r13	      1405	reloc.c	FUNCTION_6	IF_1	CALL_2
0x4000b94	      0xe800000000	                          call 0x4000b99	      1405	reloc.c	FUNCTION_6	IF_1	CALL_2
0x4000b99	      0xba04000000	                              mov edx, 4	      1406	reloc.c	FUNCTION_6	IF_1
0x4000b9e	            0x85c0	                           test eax, eax	      1405	reloc.c	FUNCTION_6	IF_1	CALL_2
0x4000ba0	            0x7449	                            je 0x4000beb	      1405	reloc.c	FUNCTION_6	IF_1	CALL_2
0x4000ba2	      0x4c03642440	             add r12, qword [rsp + 0x40]	      1412	reloc.c	FUNCTION_6
0x4000ba7	      0x41837d1000	               cmp dword [r13 + 0x10], 0	      1424	reloc.c	FUNCTION_6	IF_2
0x4000bac	            0x741b	                            je 0x4000bc9	      1424	reloc.c	FUNCTION_6	IF_2
0x4000bae	        0x498b4668	            mov rax, qword [r14 + 0x68] 	      1426	reloc.c	FUNCTION_6	IF_2
0x4000bb2	        0x4d2b6660	             sub r12, qword [r14 + 0x60]	      1426	reloc.c	FUNCTION_6	IF_2
0x4000bb6	        0x4c2b6028	             sub r12, qword [rax + 0x28]	      1426	reloc.c	FUNCTION_6	IF_2
0x4000bba	          0x4c89e0	                            mov rax, r12	      1429	reloc.c	FUNCTION_6	IF_2	IF_3
0x4000bbd	          0x4829d8	                            sub rax, rbx	      1429	reloc.c	FUNCTION_6	IF_2	IF_3
0x4000bc0	      0x41837d4800	               cmp dword [r13 + 0x48], 0	      1429	reloc.c	FUNCTION_6	IF_2	IF_3
0x4000bc5	        0x4c0f45e0	                         cmovne r12, rax	      1429	reloc.c	FUNCTION_6	IF_2	IF_3
0x4000bc9	          0x4889ef	                            mov rdi, rbp	      1434	reloc.c	FUNCTION_6	CALL_4
0x4000bcc	      0xe800000000	                          call 0x4000bd1	      1434	reloc.c	FUNCTION_6	CALL_4
0x4000bd1	            0x89c1	                            mov ecx, eax	      1432	reloc.c	FUNCTION_6	CALL_3
0x4000bd3	        0x480fafd9	                           imul rbx, rcx	      1432	reloc.c	FUNCTION_6	CALL_3
0x4000bd7	        0x498d0c1f	                    lea rcx, [r15 + rbx]	      1432	reloc.c	FUNCTION_6	CALL_3
0x4000bdb	          0x4c89e2	                            mov rdx, r12	      1432	reloc.c	FUNCTION_6	CALL_3
0x4000bde	          0x4889ee	                            mov rsi, rbp	      1432	reloc.c	FUNCTION_6	CALL_3
0x4000be1	          0x4c89ef	                            mov rdi, r13	      1432	reloc.c	FUNCTION_6	CALL_3
0x4000be4	      0xe800000000	                          call 0x4000be9	      1432	reloc.c	FUNCTION_6	CALL_3
0x4000be9	            0x89c2	                            mov edx, eax	      1432	reloc.c	FUNCTION_6	CALL_3
0x4000beb	            0x89d0	                            mov eax, edx	      1435	reloc.c	FUNCTION_6
0x4000bed	        0x4883c408	                              add rsp, 8	      1435	reloc.c	FUNCTION_6
0x4000bf1	              0x5b	                                 pop rbx	      1435	reloc.c	FUNCTION_6
0x4000bf2	              0x5d	                                 pop rbp	      1435	reloc.c	FUNCTION_6
0x4000bf3	            0x415c	                                 pop r12	      1435	reloc.c	FUNCTION_6
0x4000bf5	            0x415d	                                 pop r13	      1435	reloc.c	FUNCTION_6
0x4000bf7	            0x415e	                                 pop r14	      1435	reloc.c	FUNCTION_6
0x4000bf9	            0x415f	                                 pop r15	      1435	reloc.c	FUNCTION_6
0x4000bfb	              0xc3	                                     ret	      1435	reloc.c	FUNCTION_6
bfd_check_overflow	FOR,0:CALL,1:functions,0:ELSE,0:SWITCH,1:WHILE,0:IF,2:DO,0	55
0x40000a7	          0x4189cb	                           mov r11d, ecx	       494	reloc.c	FUNCTION_2
0x40000aa	          0x8d4eff	                      lea ecx, [rsi - 1]	       502	reloc.c	FUNCTION_2
0x40000ad	    0x41b901000000	                              mov r9d, 1	       502	reloc.c	FUNCTION_2
0x40000b3	          0x4c89c8	                             mov rax, r9	       502	reloc.c	FUNCTION_2
0x40000b6	          0x48d3e0	                             shl rax, cl	       502	reloc.c	FUNCTION_2
0x40000b9	      0x488d4400fe	                lea rax, [rax + rax - 2]	       502	reloc.c	FUNCTION_2
0x40000be	        0x4883c801	                               or rax, 1	       502	reloc.c	FUNCTION_2
0x40000c2	          0x4989c2	                            mov r10, rax	       503	reloc.c	FUNCTION_2
0x40000c5	          0x49f7d2	                                 not r10	       503	reloc.c	FUNCTION_2
0x40000c8	        0x418d4bff	                      lea ecx, [r11 - 1]	       504	reloc.c	FUNCTION_2
0x40000cc	          0x49d3e1	                              shl r9, cl	       504	reloc.c	FUNCTION_2
0x40000cf	      0x4b8d7409fe	                  lea rsi, [r9 + r9 - 2]	       504	reloc.c	FUNCTION_2
0x40000d4	        0x4883ce01	                               or rsi, 1	       504	reloc.c	FUNCTION_2
0x40000d8	          0x4989c3	                            mov r11, rax	       504	reloc.c	FUNCTION_2
0x40000db	            0x89d1	                            mov ecx, edx	       504	reloc.c	FUNCTION_2
0x40000dd	          0x49d3e3	                             shl r11, cl	       504	reloc.c	FUNCTION_2
0x40000e0	          0x4c09de	                             or rsi, r11	       504	reloc.c	FUNCTION_2
0x40000e3	          0x4921f0	                             and r8, rsi	       505	reloc.c	FUNCTION_2
0x40000e6	            0x89d1	                            mov ecx, edx	       505	reloc.c	FUNCTION_2
0x40000e8	          0x49d3e8	                              shr r8, cl	       505	reloc.c	FUNCTION_2
0x40000eb	          0x83ff01	                              cmp edi, 1	       507	reloc.c	FUNCTION_2	SWITCH_1
0x40000ee	            0x741e	                            je 0x400010e	       507	reloc.c	FUNCTION_2	SWITCH_1
0x40000f0	          0x83ff01	                              cmp edi, 1	       507	reloc.c	FUNCTION_2	SWITCH_1
0x40000f3	            0x7259	                            jb 0x400014e	       507	reloc.c	FUNCTION_2	SWITCH_1
0x40000f5	          0x83ff02	                              cmp edi, 2	       507	reloc.c	FUNCTION_2	SWITCH_1
0x40000f8	            0x740b	                            je 0x4000105	       507	reloc.c	FUNCTION_2	SWITCH_1
0x40000fa	          0x83ff03	                              cmp edi, 3	       507	reloc.c	FUNCTION_2	SWITCH_1
0x40000fd	            0x742e	                            je 0x400012d	       507	reloc.c	FUNCTION_2	SWITCH_1
0x40000ff	        0x4883ec08	                              sub rsp, 8	       494	reloc.c	FUNCTION_2
0x4000103	            0xeb35	                           jmp 0x400013a	       494	reloc.c	FUNCTION_2
0x4000105	          0x48d1e8	                              shr rax, 1	       515	reloc.c	FUNCTION_2	SWITCH_1
0x4000108	          0x48f7d0	                                 not rax	       515	reloc.c	FUNCTION_2	SWITCH_1
0x400010b	          0x4989c2	                            mov r10, rax	       515	reloc.c	FUNCTION_2	SWITCH_1
0x400010e	      0xb802000000	                              mov eax, 2	       496	reloc.c	FUNCTION_2
0x4000113	          0x4d21d0	                             and r8, r10	       525	reloc.c	FUNCTION_2	SWITCH_1	IF_1
0x4000116	            0x743b	                            je 0x4000153	       525	reloc.c	FUNCTION_2	SWITCH_1	IF_1
0x4000118	            0x89d1	                            mov ecx, edx	       525	reloc.c	FUNCTION_2	SWITCH_1	IF_1
0x400011a	          0x48d3ee	                             shr rsi, cl	       525	reloc.c	FUNCTION_2	SWITCH_1	IF_1
0x400011d	          0x4c21d6	                            and rsi, r10	       525	reloc.c	FUNCTION_2	SWITCH_1	IF_1
0x4000120	          0x4939f0	                             cmp r8, rsi	       526	reloc.c	FUNCTION_2	SWITCH_1	IF_1
0x4000123	           0xf95c0	                                setne al	       526	reloc.c	FUNCTION_2	SWITCH_1	IF_1
0x4000126	           0xfb6c0	                           movzx eax, al	       526	reloc.c	FUNCTION_2	SWITCH_1	IF_1
0x4000129	          0x83c002	                              add eax, 2	       526	reloc.c	FUNCTION_2	SWITCH_1	IF_1
0x400012c	              0xc3	                                     ret	       526	reloc.c	FUNCTION_2	SWITCH_1	IF_1
0x400012d	          0x4d21d0	                             and r8, r10	       531	reloc.c	FUNCTION_2	SWITCH_1	IF_2
0x4000130	        0x4983f801	                               cmp r8, 1	       532	reloc.c	FUNCTION_2	SWITCH_1	IF_2
0x4000134	            0x19c0	                            sbb eax, eax	       532	reloc.c	FUNCTION_2	SWITCH_1	IF_2
0x4000136	          0x83c003	                              add eax, 3	       532	reloc.c	FUNCTION_2	SWITCH_1	IF_2
0x4000139	              0xc3	                                     ret	       532	reloc.c	FUNCTION_2	SWITCH_1	IF_2
0x400013a	      0xba00000000	                              mov edx, 0	       536	reloc.c	FUNCTION_2	SWITCH_1	CALL_1
0x400013f	      0xbe18020000	                          mov esi, 0x218	       536	reloc.c	FUNCTION_2	SWITCH_1	CALL_1
0x4000144	      0xbf00000000	                              mov edi, 0	       536	reloc.c	FUNCTION_2	SWITCH_1	CALL_1
0x4000149	      0xe800000000	                          call 0x400014e	       536	reloc.c	FUNCTION_2	SWITCH_1	CALL_1
0x400014e	      0xb802000000	                              mov eax, 2	       496	reloc.c	FUNCTION_2
0x4000153	            0xf3c3	                                     ret	       540	reloc.c	FUNCTION_2
bfd_generic_merge_sections	FOR,0:CALL,0:functions,0:ELSE,0:SWITCH,0:WHILE,0:IF,0:DO,0	2
0x4000ef5	      0xb801000000	                              mov eax, 1	      8183	reloc.c	FUNCTION_16
0x4000efa	              0xc3	                                     ret	      8183	reloc.c	FUNCTION_16
bfd_generic_lookup_section_flags	FOR,0:CALL,2:functions,0:ELSE,0:SWITCH,0:WHILE,0:IF,1:DO,0	14
0x4000ebb	      0xb801000000	                              mov eax, 1	      8162	reloc.c	FUNCTION_15
0x4000ec0	          0x4885f6	                           test rsi, rsi	      8157	reloc.c	FUNCTION_15	IF_1
0x4000ec3	            0x742e	                            je 0x4000ef3	      8157	reloc.c	FUNCTION_15	IF_1
0x4000ec5	        0x4883ec08	                              sub rsp, 8	      8156	reloc.c	FUNCTION_15
0x4000ec9	      0xba05000000	                              mov edx, 5	      8159	reloc.c	FUNCTION_15	IF_1	CALL_2
0x4000ece	      0xbe00000000	                              mov esi, 0	      8159	reloc.c	FUNCTION_15	IF_1	CALL_2
0x4000ed3	      0xbf00000000	                              mov edi, 0	      8159	reloc.c	FUNCTION_15	IF_1	CALL_2
0x4000ed8	      0xe800000000	                          call 0x4000edd	      8159	reloc.c	FUNCTION_15	IF_1	CALL_2
0x4000edd	          0x4889c7	                            mov rdi, rax	      8159	reloc.c	FUNCTION_15	IF_1	CALL_2
0x4000ee0	      0xb800000000	                              mov eax, 0	      8159	reloc.c	FUNCTION_15	IF_1	CALL_2
0x4000ee5	      0xe800000000	                          call 0x4000eea	      8159	reloc.c	FUNCTION_15	IF_1	CALL_2
0x4000eea	      0xb800000000	                              mov eax, 0	      8160	reloc.c	FUNCTION_15	IF_1
0x4000eef	        0x4883c408	                              add rsp, 8	      8163	reloc.c	FUNCTION_15
0x4000ef3	            0xf3c3	                                     ret	      8163	reloc.c	FUNCTION_15
bfd_get_reloc_code_name	FOR,0:CALL,0:functions,0:ELSE,0:SWITCH,0:WHILE,0:IF,1:DO,0	7
0x4000e51	    0x81ffcd080000	                          cmp edi, 0x8cd	      8083	reloc.c	FUNCTION_12	IF_1
0x4000e57	            0x770b	                            ja 0x4000e64	      8083	reloc.c	FUNCTION_12	IF_1
0x4000e59	            0x89ff	                            mov edi, edi	      8085	reloc.c	FUNCTION_12
0x4000e5b	    0x488b04fd0000	                  mov rax, qword [rdi*8]	      8085	reloc.c	FUNCTION_12
0x4000e63	              0xc3	                                     ret	      8085	reloc.c	FUNCTION_12
0x4000e64	      0xb800000000	                              mov eax, 0	      8084	reloc.c	FUNCTION_12	IF_1
0x4000e69	              0xc3	                                     ret	      8086	reloc.c	FUNCTION_12
bfd_reloc_type_lookup	FOR,0:CALL,1:functions,0:ELSE,0:SWITCH,0:WHILE,0:IF,0:DO,0	5
0x4000da7	        0x4883ec08	                              sub rsp, 8	      8014	reloc.c	FUNCTION_9
0x4000dab	        0x488b4708	                mov rax, qword [rdi + 8]	      8015	reloc.c	FUNCTION_9	CALL_1
0x4000daf	    0xff9080020000	                call qword [rax + 0x280]	      8015	reloc.c	FUNCTION_9	CALL_1
0x4000db5	        0x4883c408	                              add rsp, 8	      8016	reloc.c	FUNCTION_9
0x4000db9	              0xc3	                                     ret	      8016	reloc.c	FUNCTION_9
