bfd_is_section_compressed	FOR,0:DO,0:CALL,1:IF,0:functions,0:SWITCH,0:ELSE,0:WHILE,0	21
0x40007f1	        0x4883ec28	                           sub rsp, 0x28	       449	compress.c	FUNCTION_6
0x40007f5	    0x64488b042528	                mov rax, qword fs:[0x28]	       449	compress.c	FUNCTION_6
0x40007fe	      0x4889442418	             mov qword [rsp + 0x18], rax	       449	compress.c	FUNCTION_6
0x4000803	            0x31c0	                            xor eax, eax	       449	compress.c	FUNCTION_6
0x4000805	      0x488d4c2410	                   lea rcx, [rsp + 0x10]	       452	compress.c	FUNCTION_6	CALL_1
0x400080a	      0x488d54240c	                    lea rdx, [rsp + 0xc]	       452	compress.c	FUNCTION_6	CALL_1
0x400080f	      0xe800000000	                          call 0x4000814	       452	compress.c	FUNCTION_6	CALL_1
0x4000814	            0x85c0	                           test eax, eax	       456	compress.c	FUNCTION_6
0x4000816	            0x7418	                            je 0x4000830	       456	compress.c	FUNCTION_6
0x4000818	      0xb800000000	                              mov eax, 0	       456	compress.c	FUNCTION_6
0x400081d	      0x837c240c00	                cmp dword [rsp + 0xc], 0	       455	compress.c	FUNCTION_6
0x4000822	            0x780c	                            js 0x4000830	       455	compress.c	FUNCTION_6
0x4000824	    0x48837c241000	               cmp qword [rsp + 0x10], 0	       456	compress.c	FUNCTION_6
0x400082a	           0xf95c0	                                setne al	       456	compress.c	FUNCTION_6
0x400082d	           0xfb6c0	                           movzx eax, al	       456	compress.c	FUNCTION_6
0x4000830	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	       457	compress.c	FUNCTION_6
0x4000835	    0x644833142528	                xor rdx, qword fs:[0x28]	       457	compress.c	FUNCTION_6
0x400083e	            0x7405	                            je 0x4000845	       457	compress.c	FUNCTION_6
0x4000840	      0xe800000000	                          call 0x4000845	       457	compress.c	FUNCTION_6
0x4000845	        0x4883c428	                           add rsp, 0x28	       457	compress.c	FUNCTION_6
0x4000849	              0xc3	                                     ret	       457	compress.c	FUNCTION_6
bfd_get_full_section_contents	FOR,0:DO,0:CALL,18:IF,18:functions,0:SWITCH,1:ELSE,1:WHILE,0	171
0x400011f	            0x4157	                                push r15	       224	compress.c	FUNCTION_3
0x4000121	            0x4156	                                push r14	       224	compress.c	FUNCTION_3
0x4000123	            0x4155	                                push r13	       224	compress.c	FUNCTION_3
0x4000125	            0x4154	                                push r12	       224	compress.c	FUNCTION_3
0x4000127	              0x55	                                push rbp	       224	compress.c	FUNCTION_3
0x4000128	              0x53	                                push rbx	       224	compress.c	FUNCTION_3
0x4000129	        0x4883ec18	                           sub rsp, 0x18	       224	compress.c	FUNCTION_3
0x400012d	         0xfb64744	           movzx eax, byte [rdi + 0x44] 	       233	compress.c	FUNCTION_3	IF_1
0x4000131	          0x83e018	                           and eax, 0x18	       233	compress.c	FUNCTION_3	IF_1
0x4000134	            0x3c10	                            cmp al, 0x10	       233	compress.c	FUNCTION_3	IF_1
0x4000136	            0x7409	                            je 0x4000141	       233	compress.c	FUNCTION_3	IF_1
0x4000138	        0x4c8b6640	            mov r12, qword [rsi + 0x40] 	       233	compress.c	FUNCTION_3	IF_1
0x400013c	          0x4d85e4	                           test r12, r12	       233	compress.c	FUNCTION_3	IF_1
0x400013f	            0x751b	                           jne 0x400015c	       233	compress.c	FUNCTION_3	IF_1
0x4000141	        0x4c8b6638	            mov r12, qword [rsi + 0x38] 	       236	compress.c	FUNCTION_3	ELSE_1
0x4000145	          0x4d85e4	                           test r12, r12	       237	compress.c	FUNCTION_3	ELSE_1	IF_2
0x4000148	            0x7512	                           jne 0x400015c	       237	compress.c	FUNCTION_3	ELSE_1	IF_2
0x400014a	    0x48c702000000	                      mov qword [rdx], 0	       239	compress.c	FUNCTION_3	ELSE_1	IF_2
0x4000151	    0x41bd01000000	                             mov r13d, 1	       240	compress.c	FUNCTION_3	ELSE_1	IF_2
0x4000157	      0xe922020000	                           jmp 0x400037e	       240	compress.c	FUNCTION_3	ELSE_1	IF_2
0x400015c	          0x4889d5	                            mov rbp, rdx	       240	compress.c	FUNCTION_3	ELSE_1	IF_2
0x400015f	          0x4889f3	                            mov rbx, rsi	       240	compress.c	FUNCTION_3	ELSE_1	IF_2
0x4000162	        0x48893c24	                    mov qword [rsp], rdi	       240	compress.c	FUNCTION_3	ELSE_1	IF_2
0x4000166	          0x4c8b32	                    mov r14, qword [rdx]	       226	compress.c	FUNCTION_3
0x4000169	         0xfb64624	           movzx eax, byte [rsi + 0x24] 	       243	compress.c	FUNCTION_3	SWITCH_1
0x400016d	          0xc0e804	                               shr al, 4	       243	compress.c	FUNCTION_3	SWITCH_1
0x4000170	          0x83e003	                              and eax, 3	       243	compress.c	FUNCTION_3	SWITCH_1
0x4000173	            0x3c01	                               cmp al, 1	       243	compress.c	FUNCTION_3	SWITCH_1
0x4000175	     0xf849f010000	                            je 0x400031a	       243	compress.c	FUNCTION_3	SWITCH_1
0x400017b	            0x3c01	                               cmp al, 1	       243	compress.c	FUNCTION_3	SWITCH_1
0x400017d	            0x720d	                            jb 0x400018c	       243	compress.c	FUNCTION_3	SWITCH_1
0x400017f	            0x3c02	                               cmp al, 2	       243	compress.c	FUNCTION_3	SWITCH_1
0x4000181	     0xf84a2000000	                            je 0x4000229	       243	compress.c	FUNCTION_3	SWITCH_1
0x4000187	      0xe9d0010000	                           jmp 0x400035c	       243	compress.c	FUNCTION_3	SWITCH_1
0x400018c	          0x4d85f6	                           test r14, r14	       246	compress.c	FUNCTION_3	SWITCH_1	IF_3
0x400018f	            0x7554	                           jne 0x40001e5	       246	compress.c	FUNCTION_3	SWITCH_1	IF_3
0x4000191	          0x4c89e7	                            mov rdi, r12	       248	compress.c	FUNCTION_3	SWITCH_1	IF_3	CALL_1
0x4000194	      0xe800000000	                          call 0x4000199	       248	compress.c	FUNCTION_3	SWITCH_1	IF_3	CALL_1
0x4000199	          0x4989c6	                            mov r14, rax	       248	compress.c	FUNCTION_3	SWITCH_1	IF_3	CALL_1
0x400019c	          0x4885c0	                           test rax, rax	       249	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4
0x400019f	            0x7544	                           jne 0x40001e5	       249	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4
0x40001a1	      0xe800000000	                          call 0x40001a6	       252	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4	IF_5	CALL_2
0x40001a6	    0x41bd00000000	                             mov r13d, 0	       257	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4
0x40001ac	          0x83f806	                              cmp eax, 6	       252	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4	IF_5	CALL_2
0x40001af	     0xf85c9010000	                           jne 0x400037e	       252	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4	IF_5	CALL_2
0x40001b5	      0xba05000000	                              mov edx, 5	       255	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4	IF_5	CALL_4
0x40001ba	      0xbe00000000	                              mov esi, 0	       255	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4	IF_5	CALL_4
0x40001bf	      0xbf00000000	                              mov edi, 0	       255	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4	IF_5	CALL_4
0x40001c4	      0xe800000000	                          call 0x40001c9	       255	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4	IF_5	CALL_4
0x40001c9	          0x4c89e1	                            mov rcx, r12	       253	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4	IF_5	CALL_3
0x40001cc	          0x4889da	                            mov rdx, rbx	       253	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4	IF_5	CALL_3
0x40001cf	        0x488b3424	                    mov rsi, qword [rsp]	       253	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4	IF_5	CALL_3
0x40001d3	          0x4889c7	                            mov rdi, rax	       253	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4	IF_5	CALL_3
0x40001d6	      0xb800000000	                              mov eax, 0	       253	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4	IF_5	CALL_3
0x40001db	      0xe800000000	                          call 0x40001e0	       253	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4	IF_5	CALL_3
0x40001e0	      0xe999010000	                           jmp 0x400037e	       253	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4	IF_5	CALL_3
0x40001e5	          0x4d89e0	                             mov r8, r12	       261	compress.c	FUNCTION_3	SWITCH_1	IF_6	CALL_5
0x40001e8	      0xb900000000	                              mov ecx, 0	       261	compress.c	FUNCTION_3	SWITCH_1	IF_6	CALL_5
0x40001ed	          0x4c89f2	                            mov rdx, r14	       261	compress.c	FUNCTION_3	SWITCH_1	IF_6	CALL_5
0x40001f0	          0x4889de	                            mov rsi, rbx	       261	compress.c	FUNCTION_3	SWITCH_1	IF_6	CALL_5
0x40001f3	        0x488b3c24	                    mov rdi, qword [rsp]	       261	compress.c	FUNCTION_3	SWITCH_1	IF_6	CALL_5
0x40001f7	      0xe800000000	                          call 0x40001fc	       261	compress.c	FUNCTION_3	SWITCH_1	IF_6	CALL_5
0x40001fc	          0x4189c5	                           mov r13d, eax	       261	compress.c	FUNCTION_3	SWITCH_1	IF_6	CALL_5
0x40001ff	            0x85c0	                           test eax, eax	       261	compress.c	FUNCTION_3	SWITCH_1	IF_6	CALL_5
0x4000201	            0x7517	                           jne 0x400021a	       261	compress.c	FUNCTION_3	SWITCH_1	IF_6	CALL_5
0x4000203	        0x4c3b7500	                    cmp r14, qword [rbp]	       263	compress.c	FUNCTION_3	SWITCH_1	IF_6	IF_7
0x4000207	     0xf8471010000	                            je 0x400037e	       263	compress.c	FUNCTION_3	SWITCH_1	IF_6	IF_7
0x400020d	          0x4c89f7	                            mov rdi, r14	       264	compress.c	FUNCTION_3	SWITCH_1	IF_6	CALL_6
0x4000210	      0xe800000000	                          call 0x4000215	       264	compress.c	FUNCTION_3	SWITCH_1	IF_6	CALL_6
0x4000215	      0xe964010000	                           jmp 0x400037e	       264	compress.c	FUNCTION_3	SWITCH_1	IF_6	CALL_6
0x400021a	        0x4c897500	                    mov qword [rbp], r14	       267	compress.c	FUNCTION_3	SWITCH_1
0x400021e	    0x41bd01000000	                             mov r13d, 1	       268	compress.c	FUNCTION_3	SWITCH_1
0x4000224	      0xe955010000	                           jmp 0x400037e	       268	compress.c	FUNCTION_3	SWITCH_1
0x4000229	        0x488b7e48	            mov rdi, qword [rsi + 0x48] 	       272	compress.c	FUNCTION_3	SWITCH_1	CALL_7
0x400022d	      0xe800000000	                          call 0x4000232	       272	compress.c	FUNCTION_3	SWITCH_1	CALL_7
0x4000232	          0x4989c7	                            mov r15, rax	       272	compress.c	FUNCTION_3	SWITCH_1	CALL_7
0x4000235	    0x41bd00000000	                             mov r13d, 0	       274	compress.c	FUNCTION_3	SWITCH_1	IF_8
0x400023b	          0x4885c0	                           test rax, rax	       273	compress.c	FUNCTION_3	SWITCH_1	IF_8
0x400023e	     0xf843a010000	                            je 0x400037e	       273	compress.c	FUNCTION_3	SWITCH_1	IF_8
0x4000244	        0x4c8b6b40	            mov r13, qword [rbx + 0x40] 	       275	compress.c	FUNCTION_3	SWITCH_1
0x4000248	        0x488b4338	            mov rax, qword [rbx + 0x38] 	       276	compress.c	FUNCTION_3	SWITCH_1
0x400024c	      0x4889442408	                mov qword [rsp + 8], rax	       276	compress.c	FUNCTION_3	SWITCH_1
0x4000251	    0x48c743400000	               mov qword [rbx + 0x40], 0	       280	compress.c	FUNCTION_3	SWITCH_1
0x4000259	        0x4c8b4348	              mov r8, qword [rbx + 0x48]	       281	compress.c	FUNCTION_3	SWITCH_1
0x400025d	        0x4c894338	              mov qword [rbx + 0x38], r8	       281	compress.c	FUNCTION_3	SWITCH_1
0x4000261	        0x806324cf	             and byte [rbx + 0x24], 0xcf	       282	compress.c	FUNCTION_3	SWITCH_1
0x4000265	      0xb900000000	                              mov ecx, 0	       283	compress.c	FUNCTION_3	SWITCH_1	CALL_8
0x400026a	          0x4c89fa	                            mov rdx, r15	       283	compress.c	FUNCTION_3	SWITCH_1	CALL_8
0x400026d	          0x4889de	                            mov rsi, rbx	       283	compress.c	FUNCTION_3	SWITCH_1	CALL_8
0x4000270	        0x488b3c24	                    mov rdi, qword [rsp]	       283	compress.c	FUNCTION_3	SWITCH_1	CALL_8
0x4000274	      0xe800000000	                          call 0x4000279	       283	compress.c	FUNCTION_3	SWITCH_1	CALL_8
0x4000279	        0x4c896b40	             mov qword [rbx + 0x40], r13	       286	compress.c	FUNCTION_3	SWITCH_1
0x400027d	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       287	compress.c	FUNCTION_3	SWITCH_1
0x4000282	        0x48894b38	             mov qword [rbx + 0x38], rcx	       287	compress.c	FUNCTION_3	SWITCH_1
0x4000286	         0xfb65324	           movzx edx, byte [rbx + 0x24] 	       288	compress.c	FUNCTION_3	SWITCH_1
0x400028a	          0x83e2cf	                     and edx, 0xffffffcf	       288	compress.c	FUNCTION_3	SWITCH_1
0x400028d	          0x83ca20	                            or edx, 0x20	       288	compress.c	FUNCTION_3	SWITCH_1
0x4000290	          0x885324	               mov byte [rbx + 0x24], dl	       288	compress.c	FUNCTION_3	SWITCH_1
0x4000293	            0x85c0	                           test eax, eax	       289	compress.c	FUNCTION_3	SWITCH_1	IF_9
0x4000295	            0x745f	                            je 0x40002f6	       289	compress.c	FUNCTION_3	SWITCH_1	IF_9
0x4000297	          0x4d85f6	                           test r14, r14	       292	compress.c	FUNCTION_3	SWITCH_1	IF_10
0x400029a	            0x7510	                           jne 0x40002ac	       292	compress.c	FUNCTION_3	SWITCH_1	IF_10
0x400029c	          0x4c89e7	                            mov rdi, r12	       293	compress.c	FUNCTION_3	SWITCH_1	CALL_9
0x400029f	      0xe800000000	                          call 0x40002a4	       293	compress.c	FUNCTION_3	SWITCH_1	CALL_9
0x40002a4	          0x4989c6	                            mov r14, rax	       293	compress.c	FUNCTION_3	SWITCH_1	CALL_9
0x40002a7	          0x4885c0	                           test rax, rax	       294	compress.c	FUNCTION_3	SWITCH_1	IF_11
0x40002aa	            0x744a	                            je 0x40002f6	       294	compress.c	FUNCTION_3	SWITCH_1	IF_11
0x40002ac	          0x4889de	                            mov rsi, rbx	       297	compress.c	FUNCTION_3	SWITCH_1	CALL_10
0x40002af	        0x488b3c24	                    mov rdi, qword [rsp]	       297	compress.c	FUNCTION_3	SWITCH_1	CALL_10
0x40002b3	      0xe800000000	                          call 0x40002b8	       297	compress.c	FUNCTION_3	SWITCH_1	CALL_10
0x40002b8	            0x85c0	                           test eax, eax	       301	compress.c	FUNCTION_3	SWITCH_1	IF_12
0x40002ba	      0xba0c000000	                            mov edx, 0xc	       301	compress.c	FUNCTION_3	SWITCH_1	IF_12
0x40002bf	           0xf44c2	                          cmove eax, edx	       301	compress.c	FUNCTION_3	SWITCH_1	IF_12
0x40002c2	            0x89c0	                            mov eax, eax	       302	compress.c	FUNCTION_3	SWITCH_1	IF_13	CALL_11
0x40002c4	        0x488b7348	            mov rsi, qword [rbx + 0x48] 	       302	compress.c	FUNCTION_3	SWITCH_1	IF_13	CALL_11
0x40002c8	          0x4829c6	                            sub rsi, rax	       302	compress.c	FUNCTION_3	SWITCH_1	IF_13	CALL_11
0x40002cb	        0x498d3c07	                    lea rdi, [r15 + rax]	       302	compress.c	FUNCTION_3	SWITCH_1	IF_13	CALL_11
0x40002cf	          0x4c89e1	                            mov rcx, r12	       302	compress.c	FUNCTION_3	SWITCH_1	IF_13	CALL_11
0x40002d2	          0x4c89f2	                            mov rdx, r14	       302	compress.c	FUNCTION_3	SWITCH_1	IF_13	CALL_11
0x40002d5	      0xe866fdffff	            call sym.decompress_contents	       302	compress.c	FUNCTION_3	SWITCH_1	IF_13	CALL_11
0x40002da	            0x85c0	                           test eax, eax	       302	compress.c	FUNCTION_3	SWITCH_1	IF_13	CALL_11
0x40002dc	            0x7528	                           jne 0x4000306	       302	compress.c	FUNCTION_3	SWITCH_1	IF_13	CALL_11
0x40002de	      0xbf11000000	                           mov edi, 0x11	       305	compress.c	FUNCTION_3	SWITCH_1	IF_13	CALL_12
0x40002e3	      0xe800000000	                          call 0x40002e8	       305	compress.c	FUNCTION_3	SWITCH_1	IF_13	CALL_12
0x40002e8	        0x4c397500	                    cmp qword [rbp], r14	       306	compress.c	FUNCTION_3	SWITCH_1	IF_13	IF_14
0x40002ec	            0x7408	                            je 0x40002f6	       306	compress.c	FUNCTION_3	SWITCH_1	IF_13	IF_14
0x40002ee	          0x4c89f7	                            mov rdi, r14	       307	compress.c	FUNCTION_3	SWITCH_1	IF_13	CALL_13
0x40002f1	      0xe800000000	                          call 0x40002f6	       307	compress.c	FUNCTION_3	SWITCH_1	IF_13	CALL_13
0x40002f6	          0x4c89ff	                            mov rdi, r15	       309	compress.c	FUNCTION_3	SWITCH_1	IF_13	CALL_14
0x40002f9	      0xe800000000	                          call 0x40002fe	       309	compress.c	FUNCTION_3	SWITCH_1	IF_13	CALL_14
0x40002fe	    0x41bd00000000	                             mov r13d, 0	       310	compress.c	FUNCTION_3	SWITCH_1	IF_13
0x4000304	            0xeb78	                           jmp 0x400037e	       310	compress.c	FUNCTION_3	SWITCH_1	IF_13
0x4000306	          0x4c89ff	                            mov rdi, r15	       313	compress.c	FUNCTION_3	SWITCH_1	CALL_15
0x4000309	      0xe800000000	                          call 0x400030e	       313	compress.c	FUNCTION_3	SWITCH_1	CALL_15
0x400030e	        0x4c897500	                    mov qword [rbp], r14	       314	compress.c	FUNCTION_3	SWITCH_1
0x4000312	    0x41bd01000000	                             mov r13d, 1	       315	compress.c	FUNCTION_3	SWITCH_1
0x4000318	            0xeb64	                           jmp 0x400037e	       315	compress.c	FUNCTION_3	SWITCH_1
0x400031a	    0x4883beb00000	               cmp qword [rsi + 0xb0], 0	       318	compress.c	FUNCTION_3	SWITCH_1	IF_15
0x4000322	            0x744c	                            je 0x4000370	       318	compress.c	FUNCTION_3	SWITCH_1	IF_15
0x4000324	          0x4d85f6	                           test r14, r14	       320	compress.c	FUNCTION_3	SWITCH_1	IF_16
0x4000327	            0x7514	                           jne 0x400033d	       320	compress.c	FUNCTION_3	SWITCH_1	IF_16
0x4000329	          0x4c89e7	                            mov rdi, r12	       322	compress.c	FUNCTION_3	SWITCH_1	IF_16	CALL_16
0x400032c	      0xe800000000	                          call 0x4000331	       322	compress.c	FUNCTION_3	SWITCH_1	IF_16	CALL_16
0x4000331	          0x4989c6	                            mov r14, rax	       322	compress.c	FUNCTION_3	SWITCH_1	IF_16	CALL_16
0x4000334	          0x4885c0	                           test rax, rax	       323	compress.c	FUNCTION_3	SWITCH_1	IF_16	IF_17
0x4000337	            0x743f	                            je 0x4000378	       323	compress.c	FUNCTION_3	SWITCH_1	IF_16	IF_17
0x4000339	        0x48894500	                    mov qword [rbp], rax	       325	compress.c	FUNCTION_3	SWITCH_1	IF_16
0x400033d	    0x488bb3b00000	            mov rsi, qword [rbx + 0xb0] 	       328	compress.c	FUNCTION_3	SWITCH_1	IF_18
0x4000344	    0x41bd01000000	                             mov r13d, 1	       330	compress.c	FUNCTION_3	SWITCH_1
0x400034a	          0x4939f6	                            cmp r14, rsi	       328	compress.c	FUNCTION_3	SWITCH_1	IF_18
0x400034d	            0x742f	                            je 0x400037e	       328	compress.c	FUNCTION_3	SWITCH_1	IF_18
0x400034f	          0x4c89e2	                            mov rdx, r12	        53	string3.h	FUNCTION_10	CALL_3
0x4000352	          0x4c89f7	                            mov rdi, r14	        53	string3.h	FUNCTION_10	CALL_3
0x4000355	      0xe800000000	                          call 0x400035a	        53	string3.h	FUNCTION_10	CALL_3
0x400035a	            0xeb22	                           jmp 0x400037e	        53	string3.h	FUNCTION_10	CALL_3
0x400035c	      0xba00000000	                              mov edx, 0	       333	compress.c	FUNCTION_3	SWITCH_1	CALL_18
0x4000361	      0xbe4d010000	                          mov esi, 0x14d	       333	compress.c	FUNCTION_3	SWITCH_1	CALL_18
0x4000366	      0xbf00000000	                              mov edi, 0	       333	compress.c	FUNCTION_3	SWITCH_1	CALL_18
0x400036b	      0xe800000000	                          call 0x4000370	       333	compress.c	FUNCTION_3	SWITCH_1	CALL_18
0x4000370	    0x41bd00000000	                             mov r13d, 0	       319	compress.c	FUNCTION_3	SWITCH_1	IF_15
0x4000376	            0xeb06	                           jmp 0x400037e	       319	compress.c	FUNCTION_3	SWITCH_1	IF_15
0x4000378	    0x41bd00000000	                             mov r13d, 0	       324	compress.c	FUNCTION_3	SWITCH_1	IF_16	IF_17
0x400037e	          0x4489e8	                           mov eax, r13d	       335	compress.c	FUNCTION_3
0x4000381	        0x4883c418	                           add rsp, 0x18	       335	compress.c	FUNCTION_3
0x4000385	              0x5b	                                 pop rbx	       335	compress.c	FUNCTION_3
0x4000386	              0x5d	                                 pop rbp	       335	compress.c	FUNCTION_3
0x4000387	            0x415c	                                 pop r12	       335	compress.c	FUNCTION_3
0x4000389	            0x415d	                                 pop r13	       335	compress.c	FUNCTION_3
0x400038b	            0x415e	                                 pop r14	       335	compress.c	FUNCTION_3
0x400038d	            0x415f	                                 pop r15	       335	compress.c	FUNCTION_3
0x400038f	              0xc3	                                     ret	       335	compress.c	FUNCTION_3
decompress_contents	FOR,0:DO,0:CALL,6:IF,2:functions,0:SWITCH,0:ELSE,0:WHILE,1	68
0x4000040	            0x4154	                                push r12	        34	compress.c	FUNCTION_1
0x4000042	              0x55	                                push rbp	        34	compress.c	FUNCTION_1
0x4000043	              0x53	                                push rbx	        34	compress.c	FUNCTION_1
0x4000044	        0x4883c480	             add rsp, 0xffffffffffffff80	        34	compress.c	FUNCTION_1
0x4000048	          0x4989f9	                             mov r9, rdi	        34	compress.c	FUNCTION_1
0x400004b	          0x4989d4	                            mov r12, rdx	        34	compress.c	FUNCTION_1
0x400004e	          0x4889cd	                            mov rbp, rcx	        34	compress.c	FUNCTION_1
0x4000051	    0x64488b042528	                mov rax, qword fs:[0x28]	        34	compress.c	FUNCTION_1
0x400005a	      0x4889442478	             mov qword [rsp + 0x78], rax	        34	compress.c	FUNCTION_1
0x400005f	            0x31c0	                            xor eax, eax	        34	compress.c	FUNCTION_1
0x4000061	      0xb90e000000	                            mov ecx, 0xe	        90	string3.h	FUNCTION_13	CALL_6
0x4000066	          0x4889e7	                            mov rdi, rsp	        90	string3.h	FUNCTION_13	CALL_6
0x4000069	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_13	CALL_6
0x400006c	        0x89742408	                mov dword [rsp + 8], esi	        46	compress.c	FUNCTION_1
0x4000070	        0x4c890c24	                     mov qword [rsp], r9	        47	compress.c	FUNCTION_1
0x4000074	        0x896c2420	             mov dword [rsp + 0x20], ebp	        48	compress.c	FUNCTION_1
0x4000078	      0xba70000000	                           mov edx, 0x70	        51	compress.c	FUNCTION_1	CALL_3
0x400007d	      0xbe00000000	                              mov esi, 0	        51	compress.c	FUNCTION_1	CALL_3
0x4000082	          0x4889e7	                            mov rdi, rsp	        51	compress.c	FUNCTION_1	CALL_3
0x4000085	      0xe800000000	                          call 0x400008a	        51	compress.c	FUNCTION_1	CALL_3
0x400008a	            0x89c3	                            mov ebx, eax	        51	compress.c	FUNCTION_1	CALL_3
0x400008c	      0x837c240800	                  cmp dword [rsp + 8], 0	        52	compress.c	FUNCTION_1	WHILE_1
0x4000091	            0x7450	                            je 0x40000e3	        52	compress.c	FUNCTION_1	WHILE_1
0x4000093	        0x8b442420	            mov eax, dword [rsp + 0x20] 	        52	compress.c	FUNCTION_1	WHILE_1
0x4000097	            0x85db	                           test ebx, ebx	        54	compress.c	FUNCTION_1	WHILE_1	IF_1
0x4000099	            0x7548	                           jne 0x40000e3	        54	compress.c	FUNCTION_1	WHILE_1	IF_1
0x400009b	            0x85c0	                           test eax, eax	        54	compress.c	FUNCTION_1	WHILE_1	IF_1
0x400009d	            0x7444	                            je 0x40000e3	        54	compress.c	FUNCTION_1	WHILE_1	IF_1
0x400009f	            0x89c0	                            mov eax, eax	        56	compress.c	FUNCTION_1	WHILE_1
0x40000a1	          0x4889e9	                            mov rcx, rbp	        56	compress.c	FUNCTION_1	WHILE_1
0x40000a4	          0x4829c1	                            sub rcx, rax	        56	compress.c	FUNCTION_1	WHILE_1
0x40000a7	          0x4889c8	                            mov rax, rcx	        56	compress.c	FUNCTION_1	WHILE_1
0x40000aa	          0x4c01e0	                            add rax, r12	        56	compress.c	FUNCTION_1	WHILE_1
0x40000ad	      0x4889442418	             mov qword [rsp + 0x18], rax	        56	compress.c	FUNCTION_1	WHILE_1
0x40000b2	      0xbe04000000	                              mov esi, 4	        58	compress.c	FUNCTION_1	WHILE_1	CALL_4
0x40000b7	          0x4889e7	                            mov rdi, rsp	        58	compress.c	FUNCTION_1	WHILE_1	CALL_4
0x40000ba	      0xe800000000	                          call 0x40000bf	        58	compress.c	FUNCTION_1	WHILE_1	CALL_4
0x40000bf	            0x89c3	                            mov ebx, eax	        58	compress.c	FUNCTION_1	WHILE_1	CALL_4
0x40000c1	          0x83f801	                              cmp eax, 1	        59	compress.c	FUNCTION_1	WHILE_1	IF_2
0x40000c4	            0x751d	                           jne 0x40000e3	        59	compress.c	FUNCTION_1	WHILE_1	IF_2
0x40000c6	          0x4889e7	                            mov rdi, rsp	        61	compress.c	FUNCTION_1	WHILE_1	CALL_5
0x40000c9	      0xe800000000	                          call 0x40000ce	        61	compress.c	FUNCTION_1	WHILE_1	CALL_5
0x40000ce	            0x89c3	                            mov ebx, eax	        61	compress.c	FUNCTION_1	WHILE_1	CALL_5
0x40000d0	      0x837c240800	                  cmp dword [rsp + 8], 0	        52	compress.c	FUNCTION_1	WHILE_1
0x40000d5	            0x740c	                            je 0x40000e3	        52	compress.c	FUNCTION_1	WHILE_1
0x40000d7	        0x8b442420	            mov eax, dword [rsp + 0x20] 	        52	compress.c	FUNCTION_1	WHILE_1
0x40000db	            0x85db	                           test ebx, ebx	        54	compress.c	FUNCTION_1	WHILE_1	IF_1
0x40000dd	            0x7504	                           jne 0x40000e3	        54	compress.c	FUNCTION_1	WHILE_1	IF_1
0x40000df	            0x85c0	                           test eax, eax	        54	compress.c	FUNCTION_1	WHILE_1	IF_1
0x40000e1	            0x75bc	                           jne 0x400009f	        54	compress.c	FUNCTION_1	WHILE_1	IF_1
0x40000e3	          0x4889e7	                            mov rdi, rsp	        63	compress.c	FUNCTION_1	CALL_6
0x40000e6	      0xe800000000	                          call 0x40000eb	        63	compress.c	FUNCTION_1	CALL_6
0x40000eb	      0xba00000000	                              mov edx, 0	        64	compress.c	FUNCTION_1
0x40000f0	             0x9c3	                             or ebx, eax	        64	compress.c	FUNCTION_1
0x40000f2	            0x750b	                           jne 0x40000ff	        64	compress.c	FUNCTION_1
0x40000f4	      0x837c242000	               cmp dword [rsp + 0x20], 0	        64	compress.c	FUNCTION_1
0x40000f9	           0xf94c2	                                 sete dl	        64	compress.c	FUNCTION_1
0x40000fc	           0xfb6d2	                           movzx edx, dl	        64	compress.c	FUNCTION_1
0x40000ff	            0x89d0	                            mov eax, edx	        65	compress.c	FUNCTION_1
0x4000101	      0x488b542478	            mov rdx, qword [rsp + 0x78] 	        65	compress.c	FUNCTION_1
0x4000106	    0x644833142528	                xor rdx, qword fs:[0x28]	        65	compress.c	FUNCTION_1
0x400010f	            0x7405	                            je 0x4000116	        65	compress.c	FUNCTION_1
0x4000111	      0xe800000000	                          call 0x4000116	        65	compress.c	FUNCTION_1
0x4000116	        0x4883ec80	             sub rsp, 0xffffffffffffff80	        65	compress.c	FUNCTION_1
0x400011a	              0x5b	                                 pop rbx	        65	compress.c	FUNCTION_1
0x400011b	              0x5d	                                 pop rbp	        65	compress.c	FUNCTION_1
0x400011c	            0x415c	                                 pop r12	        65	compress.c	FUNCTION_1
0x400011e	              0xc3	                                     ret	        65	compress.c	FUNCTION_1
bfd_compress_section	FOR,0:DO,0:CALL,2:IF,1:functions,0:SWITCH,0:ELSE,0:WHILE,0	26
0x4000a21	        0x4883ec08	                              sub rsp, 8	       592	compress.c	FUNCTION_9
0x4000a25	         0xfb64744	           movzx eax, byte [rdi + 0x44] 	       596	compress.c	FUNCTION_9	IF_1
0x4000a29	          0x83e018	                           and eax, 0x18	       596	compress.c	FUNCTION_9	IF_1
0x4000a2c	            0x3c10	                            cmp al, 0x10	       596	compress.c	FUNCTION_9	IF_1
0x4000a2e	            0x7525	                           jne 0x4000a55	       596	compress.c	FUNCTION_9	IF_1
0x4000a30	        0x488b4e38	            mov rcx, qword [rsi + 0x38] 	       593	compress.c	FUNCTION_9
0x4000a34	          0x4885c9	                           test rcx, rcx	       598	compress.c	FUNCTION_9	IF_1
0x4000a37	            0x741c	                            je 0x4000a55	       598	compress.c	FUNCTION_9	IF_1
0x4000a39	          0x4885d2	                           test rdx, rdx	       598	compress.c	FUNCTION_9	IF_1
0x4000a3c	            0x7417	                            je 0x4000a55	       598	compress.c	FUNCTION_9	IF_1
0x4000a3e	    0x4883beb00000	               cmp qword [rsi + 0xb0], 0	       599	compress.c	FUNCTION_9	IF_1
0x4000a46	            0x750d	                           jne 0x4000a55	       599	compress.c	FUNCTION_9	IF_1
0x4000a48	      0x48837e4800	               cmp qword [rsi + 0x48], 0	       600	compress.c	FUNCTION_9	IF_1
0x4000a4d	            0x7506	                           jne 0x4000a55	       600	compress.c	FUNCTION_9	IF_1
0x4000a4f	        0xf6462430	           test byte [rsi + 0x24], 0x30 	       601	compress.c	FUNCTION_9	IF_1
0x4000a53	            0x7411	                            je 0x4000a66	       601	compress.c	FUNCTION_9	IF_1
0x4000a55	      0xbf05000000	                              mov edi, 5	       603	compress.c	FUNCTION_9	IF_1	CALL_1
0x4000a5a	      0xe800000000	                          call 0x4000a5f	       603	compress.c	FUNCTION_9	IF_1	CALL_1
0x4000a5f	      0xb800000000	                              mov eax, 0	       604	compress.c	FUNCTION_9	IF_1
0x4000a64	            0xeb0e	                           jmp 0x4000a74	       604	compress.c	FUNCTION_9	IF_1
0x4000a66	      0xe8f7faffff	  call sym.bfd_compress_section_contents	       608	compress.c	FUNCTION_9	CALL_2
0x4000a6b	          0x4885c0	                           test rax, rax	       608	compress.c	FUNCTION_9	CALL_2
0x4000a6e	           0xf95c0	                                setne al	       608	compress.c	FUNCTION_9	CALL_2
0x4000a71	           0xfb6c0	                           movzx eax, al	       608	compress.c	FUNCTION_9	CALL_2
0x4000a74	        0x4883c408	                              add rsp, 8	       610	compress.c	FUNCTION_9
0x4000a78	              0xc3	                                     ret	       610	compress.c	FUNCTION_9
bfd_init_section_decompress_status	FOR,0:DO,0:CALL,9:IF,5:functions,0:SWITCH,0:ELSE,1:WHILE,0	85
0x400084a	            0x4154	                                push r12	       478	compress.c	FUNCTION_7
0x400084c	              0x55	                                push rbp	       478	compress.c	FUNCTION_7
0x400084d	              0x53	                                push rbx	       478	compress.c	FUNCTION_7
0x400084e	        0x4883ec30	                           sub rsp, 0x30	       478	compress.c	FUNCTION_7
0x4000852	          0x4989fc	                            mov r12, rdi	       478	compress.c	FUNCTION_7
0x4000855	          0x4889f3	                            mov rbx, rsi	       478	compress.c	FUNCTION_7
0x4000858	    0x64488b042528	                mov rax, qword fs:[0x28]	       478	compress.c	FUNCTION_7
0x4000861	      0x4889442428	             mov qword [rsp + 0x28], rax	       478	compress.c	FUNCTION_7
0x4000866	            0x31c0	                            xor eax, eax	       478	compress.c	FUNCTION_7
0x4000868	      0xe800000000	                          call 0x400086d	       484	compress.c	FUNCTION_7	CALL_1
0x400086d	          0x83f818	                           cmp eax, 0x18	       485	compress.c	FUNCTION_7	IF_1
0x4000870	            0x7e14	                           jle 0x4000886	       485	compress.c	FUNCTION_7	IF_1
0x4000872	      0xba00000000	                              mov edx, 0	       486	compress.c	FUNCTION_7	CALL_2
0x4000877	      0xbee6010000	                          mov esi, 0x1e6	       486	compress.c	FUNCTION_7	CALL_2
0x400087c	      0xbf00000000	                              mov edi, 0	       486	compress.c	FUNCTION_7	CALL_2
0x4000881	      0xe800000000	                          call 0x4000886	       486	compress.c	FUNCTION_7	CALL_2
0x4000886	            0x89c5	                            mov ebp, eax	       486	compress.c	FUNCTION_7	CALL_2
0x4000888	            0x85c0	                           test eax, eax	       487	compress.c	FUNCTION_7
0x400088a	    0x41b80c000000	                            mov r8d, 0xc	       487	compress.c	FUNCTION_7
0x4000890	        0x440f45c0	                         cmovne r8d, eax	       487	compress.c	FUNCTION_7
0x4000894	      0x48837b4000	               cmp qword [rbx + 0x40], 0	       490	compress.c	FUNCTION_7	IF_2
0x4000899	            0x752c	                           jne 0x40008c7	       490	compress.c	FUNCTION_7	IF_2
0x400089b	    0x4883bbb00000	               cmp qword [rbx + 0xb0], 0	       491	compress.c	FUNCTION_7	IF_2
0x40008a3	            0x7522	                           jne 0x40008c7	       491	compress.c	FUNCTION_7	IF_2
0x40008a5	        0xf6432430	           test byte [rbx + 0x24], 0x30 	       492	compress.c	FUNCTION_7	IF_2
0x40008a9	            0x751c	                           jne 0x40008c7	       492	compress.c	FUNCTION_7	IF_2
0x40008ab	          0x4d63c0	                          movsxd r8, r8d	       493	compress.c	FUNCTION_7	IF_2	CALL_3
0x40008ae	      0xb900000000	                              mov ecx, 0	       493	compress.c	FUNCTION_7	IF_2	CALL_3
0x40008b3	      0x488d542410	                   lea rdx, [rsp + 0x10]	       493	compress.c	FUNCTION_7	IF_2	CALL_3
0x40008b8	          0x4889de	                            mov rsi, rbx	       493	compress.c	FUNCTION_7	IF_2	CALL_3
0x40008bb	          0x4c89e7	                            mov rdi, r12	       493	compress.c	FUNCTION_7	IF_2	CALL_3
0x40008be	      0xe800000000	                          call 0x40008c3	       493	compress.c	FUNCTION_7	IF_2	CALL_3
0x40008c3	            0x85c0	                           test eax, eax	       493	compress.c	FUNCTION_7	IF_2	CALL_3
0x40008c5	            0x7514	                           jne 0x40008db	       493	compress.c	FUNCTION_7	IF_2	CALL_3
0x40008c7	      0xbf05000000	                              mov edi, 5	       495	compress.c	FUNCTION_7	IF_2	CALL_4
0x40008cc	      0xe800000000	                          call 0x40008d1	       495	compress.c	FUNCTION_7	IF_2	CALL_4
0x40008d1	      0xbd00000000	                              mov ebp, 0	       496	compress.c	FUNCTION_7	IF_2
0x40008d6	      0xe986000000	                           jmp 0x4000961	       496	compress.c	FUNCTION_7	IF_2
0x40008db	            0x85ed	                           test ebp, ebp	       499	compress.c	FUNCTION_7	IF_3
0x40008dd	            0x7538	                           jne 0x4000917	       499	compress.c	FUNCTION_7	IF_3
0x40008df	      0x488d742410	                   lea rsi, [rsp + 0x10]	       503	compress.c	FUNCTION_7	IF_3	IF_4	CALL_5
0x40008e4	      0xbf00000000	                              mov edi, 0	       503	compress.c	FUNCTION_7	IF_3	IF_4	CALL_5
0x40008e9	      0xb904000000	                              mov ecx, 4	       503	compress.c	FUNCTION_7	IF_3	IF_4	CALL_5
0x40008ee	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       503	compress.c	FUNCTION_7	IF_3	IF_4	CALL_5
0x40008f0	           0xf97c2	                                 seta dl	       503	compress.c	FUNCTION_7	IF_3	IF_4	CALL_5
0x40008f3	           0xf92c0	                                 setb al	       503	compress.c	FUNCTION_7	IF_3	IF_4	CALL_5
0x40008f6	            0x38c2	                              cmp dl, al	       503	compress.c	FUNCTION_7	IF_3	IF_4	CALL_5
0x40008f8	            0x740c	                            je 0x4000906	       503	compress.c	FUNCTION_7	IF_3	IF_4	CALL_5
0x40008fa	      0xbf03000000	                              mov edi, 3	       505	compress.c	FUNCTION_7	IF_3	IF_4	CALL_6
0x40008ff	      0xe800000000	                          call 0x4000904	       505	compress.c	FUNCTION_7	IF_3	IF_4	CALL_6
0x4000904	            0xeb5b	                           jmp 0x4000961	       506	compress.c	FUNCTION_7	IF_3	IF_4
0x4000906	      0x488d7c2414	                   lea rdi, [rsp + 0x14]	       508	compress.c	FUNCTION_7	IF_3	CALL_7
0x400090b	      0xe800000000	                          call 0x4000910	       508	compress.c	FUNCTION_7	IF_3	CALL_7
0x4000910	      0x4889442408	                mov qword [rsp + 8], rax	       508	compress.c	FUNCTION_7	IF_3	CALL_7
0x4000915	            0xeb27	                           jmp 0x400093e	       508	compress.c	FUNCTION_7	IF_3	CALL_7
0x4000917	      0x488d4c2408	                      lea rcx, [rsp + 8]	       510	compress.c	FUNCTION_7	ELSE_1	IF_5	CALL_8
0x400091c	          0x4889da	                            mov rdx, rbx	       510	compress.c	FUNCTION_7	ELSE_1	IF_5	CALL_8
0x400091f	      0x488d742410	                   lea rsi, [rsp + 0x10]	       510	compress.c	FUNCTION_7	ELSE_1	IF_5	CALL_8
0x4000924	          0x4c89e7	                            mov rdi, r12	       510	compress.c	FUNCTION_7	ELSE_1	IF_5	CALL_8
0x4000927	      0xe800000000	                          call 0x400092c	       510	compress.c	FUNCTION_7	ELSE_1	IF_5	CALL_8
0x400092c	            0x89c5	                            mov ebp, eax	       510	compress.c	FUNCTION_7	ELSE_1	IF_5	CALL_8
0x400092e	            0x85c0	                           test eax, eax	       510	compress.c	FUNCTION_7	ELSE_1	IF_5	CALL_8
0x4000930	            0x750c	                           jne 0x400093e	       510	compress.c	FUNCTION_7	ELSE_1	IF_5	CALL_8
0x4000932	      0xbf03000000	                              mov edi, 3	       513	compress.c	FUNCTION_7	ELSE_1	IF_5	CALL_9
0x4000937	      0xe800000000	                          call 0x400093c	       513	compress.c	FUNCTION_7	ELSE_1	IF_5	CALL_9
0x400093c	            0xeb23	                           jmp 0x4000961	       514	compress.c	FUNCTION_7	ELSE_1	IF_5
0x400093e	        0x488b4338	            mov rax, qword [rbx + 0x38] 	       517	compress.c	FUNCTION_7
0x4000942	        0x48894348	             mov qword [rbx + 0x48], rax	       517	compress.c	FUNCTION_7
0x4000946	      0x488b442408	                mov rax, qword [rsp + 8]	       518	compress.c	FUNCTION_7
0x400094b	        0x48894338	             mov qword [rbx + 0x38], rax	       518	compress.c	FUNCTION_7
0x400094f	         0xfb64324	           movzx eax, byte [rbx + 0x24] 	       519	compress.c	FUNCTION_7
0x4000953	          0x83e0cf	                     and eax, 0xffffffcf	       519	compress.c	FUNCTION_7
0x4000956	          0x83c820	                            or eax, 0x20	       519	compress.c	FUNCTION_7
0x4000959	          0x884324	               mov byte [rbx + 0x24], al	       519	compress.c	FUNCTION_7
0x400095c	      0xbd01000000	                              mov ebp, 1	       521	compress.c	FUNCTION_7
0x4000961	            0x89e8	                            mov eax, ebp	       522	compress.c	FUNCTION_7
0x4000963	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       522	compress.c	FUNCTION_7
0x4000968	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       522	compress.c	FUNCTION_7
0x4000971	            0x7405	                            je 0x4000978	       522	compress.c	FUNCTION_7
0x4000973	      0xe800000000	                          call 0x4000978	       522	compress.c	FUNCTION_7
0x4000978	        0x4883c430	                           add rsp, 0x30	       522	compress.c	FUNCTION_7
0x400097c	              0x5b	                                 pop rbx	       522	compress.c	FUNCTION_7
0x400097d	              0x5d	                                 pop rbp	       522	compress.c	FUNCTION_7
0x400097e	            0x415c	                                 pop r12	       522	compress.c	FUNCTION_7
0x4000980	              0xc3	                                     ret	       522	compress.c	FUNCTION_7
bfd_cache_section_contents	FOR,0:DO,0:CALL,0:IF,1:functions,0:SWITCH,0:ELSE,0:WHILE,0	11
0x4000390	         0xfb64724	           movzx eax, byte [rdi + 0x24] 	       353	compress.c	FUNCTION_4	IF_1
0x4000394	          0x83e030	                           and eax, 0x30	       353	compress.c	FUNCTION_4	IF_1
0x4000397	            0x3c20	                            cmp al, 0x20	       353	compress.c	FUNCTION_4	IF_1
0x4000399	            0x750d	                           jne 0x40003a8	       353	compress.c	FUNCTION_4	IF_1
0x400039b	         0xfb64724	           movzx eax, byte [rdi + 0x24] 	       354	compress.c	FUNCTION_4	IF_1
0x400039f	          0x83e0cf	                     and eax, 0xffffffcf	       354	compress.c	FUNCTION_4	IF_1
0x40003a2	          0x83c810	                            or eax, 0x10	       354	compress.c	FUNCTION_4	IF_1
0x40003a5	          0x884724	               mov byte [rdi + 0x24], al	       354	compress.c	FUNCTION_4	IF_1
0x40003a8	    0x4889b7b00000	             mov qword [rdi + 0xb0], rsi	       355	compress.c	FUNCTION_4
0x40003af	    0x814f20004000	           or dword [rdi + 0x20], 0x4000	       356	compress.c	FUNCTION_4
0x40003b6	              0xc3	                                     ret	       356	compress.c	FUNCTION_4
bfd_compress_section_contents	FOR,0:DO,0:CALL,17:IF,11:functions,0:SWITCH,0:ELSE,6:WHILE,0	176
0x4000562	            0x4157	                                push r15	        79	compress.c	FUNCTION_2
0x4000564	            0x4156	                                push r14	        79	compress.c	FUNCTION_2
0x4000566	            0x4155	                                push r13	        79	compress.c	FUNCTION_2
0x4000568	            0x4154	                                push r12	        79	compress.c	FUNCTION_2
0x400056a	              0x55	                                push rbp	        79	compress.c	FUNCTION_2
0x400056b	              0x53	                                push rbx	        79	compress.c	FUNCTION_2
0x400056c	        0x4883ec38	                           sub rsp, 0x38	        79	compress.c	FUNCTION_2
0x4000570	          0x4989fd	                            mov r13, rdi	        79	compress.c	FUNCTION_2
0x4000573	          0x4889f5	                            mov rbp, rsi	        79	compress.c	FUNCTION_2
0x4000576	        0x48891424	                    mov qword [rsp], rdx	        79	compress.c	FUNCTION_2
0x400057a	          0x4989cc	                            mov r12, rcx	        79	compress.c	FUNCTION_2
0x400057d	    0x64488b042528	                mov rax, qword fs:[0x28]	        79	compress.c	FUNCTION_2
0x4000586	      0x4889442428	             mov qword [rsp + 0x28], rax	        79	compress.c	FUNCTION_2
0x400058b	            0x31c0	                            xor eax, eax	        79	compress.c	FUNCTION_2
0x400058d	      0xbe00000000	                              mov esi, 0	        87	compress.c	FUNCTION_2	CALL_1
0x4000592	      0xe800000000	                          call 0x4000597	        87	compress.c	FUNCTION_2	CALL_1
0x4000597	            0x89c3	                            mov ebx, eax	        87	compress.c	FUNCTION_2	CALL_1
0x4000599	      0x488d4c2420	                   lea rcx, [rsp + 0x20]	        88	compress.c	FUNCTION_2
0x400059e	      0x488d542414	                   lea rdx, [rsp + 0x14]	        88	compress.c	FUNCTION_2
0x40005a3	          0x4889ee	                            mov rsi, rbp	        88	compress.c	FUNCTION_2
0x40005a6	          0x4c89ef	                            mov rdi, r13	        88	compress.c	FUNCTION_2
0x40005a9	      0xe800000000	                          call 0x40005ae	        88	compress.c	FUNCTION_2
0x40005ae	            0x89c1	                            mov ecx, eax	        88	compress.c	FUNCTION_2
0x40005b0	        0x8944240c	              mov dword [rsp + 0xc], eax	        88	compress.c	FUNCTION_2
0x40005b4	            0x85db	                           test ebx, ebx	        96	compress.c	FUNCTION_2	IF_1
0x40005b6	      0xb80c000000	                            mov eax, 0xc	        96	compress.c	FUNCTION_2	IF_1
0x40005bb	           0xf44d8	                          cmove ebx, eax	        96	compress.c	FUNCTION_2	IF_1
0x40005be	            0x85c9	                           test ecx, ecx	        98	compress.c	FUNCTION_2	IF_2
0x40005c0	            0x744e	                            je 0x4000610	        98	compress.c	FUNCTION_2	IF_2
0x40005c2	        0x8b442414	            mov eax, dword [rsp + 0x14] 	       101	compress.c	FUNCTION_2	IF_2	IF_3
0x40005c6	            0x85c0	                           test eax, eax	       101	compress.c	FUNCTION_2	IF_2	IF_3
0x40005c8	            0x7914	                           jns 0x40005de	       101	compress.c	FUNCTION_2	IF_2	IF_3
0x40005ca	      0xba00000000	                              mov edx, 0	       102	compress.c	FUNCTION_2	IF_2	CALL_3
0x40005cf	      0xbe66000000	                           mov esi, 0x66	       102	compress.c	FUNCTION_2	IF_2	CALL_3
0x40005d4	      0xbf00000000	                              mov edi, 0	       102	compress.c	FUNCTION_2	IF_2	CALL_3
0x40005d9	      0xe800000000	                          call 0x40005de	       102	compress.c	FUNCTION_2	IF_2	CALL_3
0x40005de	          0x4589e6	                          mov r14d, r12d	       118	compress.c	FUNCTION_2	IF_2	ELSE_1
0x40005e1	          0x4129c6	                           sub r14d, eax	       118	compress.c	FUNCTION_2	IF_2	ELSE_1
0x40005e4	            0x85c0	                           test eax, eax	       106	compress.c	FUNCTION_2	IF_2	IF_4
0x40005e6	            0x750d	                           jne 0x40005f5	       106	compress.c	FUNCTION_2	IF_2	IF_4
0x40005e8	    0xc74424140c00	            mov dword [rsp + 0x14], 0xc 	       112	compress.c	FUNCTION_2	IF_2	IF_4
0x40005f0	      0x458d7424f4	                   lea r14d, [r12 - 0xc]	       113	compress.c	FUNCTION_2	IF_2	IF_4
0x40005f5	        0x418d041e	                    lea eax, [r14 + rbx]	       122	compress.c	FUNCTION_2	IF_2
0x40005f9	            0x4898	                                    cdqe	       122	compress.c	FUNCTION_2	IF_2
0x40005fb	      0x4889442418	             mov qword [rsp + 0x18], rax	       122	compress.c	FUNCTION_2	IF_2
0x4000600	      0x4c8b7c2420	            mov r15, qword [rsp + 0x20] 	       128	compress.c	FUNCTION_2	IF_5
0x4000605	          0x4c39f8	                            cmp rax, r15	       128	compress.c	FUNCTION_2	IF_5
0x4000608	     0xf875c010000	                            ja 0x400076a	       128	compress.c	FUNCTION_2	IF_5
0x400060e	            0xeb28	                           jmp 0x4000638	       128	compress.c	FUNCTION_2	IF_5
0x4000610	          0x4c89e7	                            mov rdi, r12	       125	compress.c	FUNCTION_2	CALL_4
0x4000613	      0xe800000000	                          call 0x4000618	       125	compress.c	FUNCTION_2	CALL_4
0x4000618	          0x4863f3	                         movsxd rsi, ebx	       125	compress.c	FUNCTION_2	CALL_4
0x400061b	          0x4801c6	                            add rsi, rax	       125	compress.c	FUNCTION_2	CALL_4
0x400061e	      0x4889742418	             mov qword [rsp + 0x18], rsi	       125	compress.c	FUNCTION_2	CALL_4
0x4000623	          0x4c89ef	                            mov rdi, r13	       138	compress.c	FUNCTION_2	CALL_5
0x4000626	      0xe800000000	                          call 0x400062b	       138	compress.c	FUNCTION_2	CALL_5
0x400062b	          0x4989c7	                            mov r15, rax	       138	compress.c	FUNCTION_2	CALL_5
0x400062e	          0x4885c0	                           test rax, rax	       139	compress.c	FUNCTION_2	IF_6
0x4000631	            0x7571	                           jne 0x40006a4	       139	compress.c	FUNCTION_2	IF_6
0x4000633	      0xe90d010000	                           jmp 0x4000745	       139	compress.c	FUNCTION_2	IF_6
0x4000638	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	       138	compress.c	FUNCTION_2	CALL_5
0x400063d	          0x4c89ef	                            mov rdi, r13	       138	compress.c	FUNCTION_2	CALL_5
0x4000640	      0xe800000000	                          call 0x4000645	       138	compress.c	FUNCTION_2	CALL_5
0x4000645	          0x4989c7	                            mov r15, rax	       138	compress.c	FUNCTION_2	CALL_5
0x4000648	          0x4885c0	                           test rax, rax	       139	compress.c	FUNCTION_2	IF_6
0x400064b	     0xf84fb000000	                            je 0x400074c	       139	compress.c	FUNCTION_2	IF_6
0x4000651	      0x837c240c00	                cmp dword [rsp + 0xc], 0	       142	compress.c	FUNCTION_2	IF_7
0x4000656	     0xf854e010000	                           jne 0x40007aa	       142	compress.c	FUNCTION_2	IF_7
0x400065c	            0xeb46	                           jmp 0x40006a4	       142	compress.c	FUNCTION_2	IF_7
0x400065e	      0xbf11000000	                           mov edi, 0x11	       151	compress.c	FUNCTION_2	IF_7	IF_8	IF_9	CALL_7
0x4000663	      0xe800000000	                          call 0x4000668	       151	compress.c	FUNCTION_2	IF_7	IF_8	IF_9	CALL_7
0x4000668	          0x4889de	                            mov rsi, rbx	       152	compress.c	FUNCTION_2	IF_7	IF_8	IF_9	CALL_8
0x400066b	          0x4c89ef	                            mov rdi, r13	       152	compress.c	FUNCTION_2	IF_7	IF_8	IF_9	CALL_8
0x400066e	      0xe800000000	                          call 0x4000673	       152	compress.c	FUNCTION_2	IF_7	IF_8	IF_9	CALL_8
0x4000673	      0xb800000000	                              mov eax, 0	       153	compress.c	FUNCTION_2	IF_7	IF_8	IF_9
0x4000678	      0xe9db000000	                           jmp 0x4000758	       153	compress.c	FUNCTION_2	IF_7	IF_8	IF_9
0x400067d	        0x488b3c24	                    mov rdi, qword [rsp]	       155	compress.c	FUNCTION_2	IF_7	IF_8	CALL_9
0x4000681	      0xe800000000	                          call 0x4000686	       155	compress.c	FUNCTION_2	IF_7	IF_8	CALL_9
0x4000686	    0x48899db00000	            mov qword [rbp + 0xb0], rbx 	       156	compress.c	FUNCTION_2	IF_7	IF_8
0x400068d	         0xfb64524	           movzx eax, byte [rbp + 0x24] 	       157	compress.c	FUNCTION_2	IF_7	IF_8
0x4000691	          0x83e0cf	                     and eax, 0xffffffcf	       157	compress.c	FUNCTION_2	IF_7	IF_8
0x4000694	          0x83c810	                            or eax, 0x10	       157	compress.c	FUNCTION_2	IF_7	IF_8
0x4000697	          0x884524	               mov byte [rbp + 0x24], al	       157	compress.c	FUNCTION_2	IF_7	IF_8
0x400069a	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       158	compress.c	FUNCTION_2	IF_7	IF_8
0x400069f	      0xe9b4000000	                           jmp 0x4000758	       158	compress.c	FUNCTION_2	IF_7	IF_8
0x40006a4	          0x4863db	                         movsxd rbx, ebx	       170	compress.c	FUNCTION_2	ELSE_5	IF_10	CALL_12
0x40006a7	        0x498d3c1f	                    lea rdi, [r15 + rbx]	       170	compress.c	FUNCTION_2	ELSE_5	IF_10	CALL_12
0x40006ab	          0x4c89e1	                            mov rcx, r12	       170	compress.c	FUNCTION_2	ELSE_5	IF_10	CALL_12
0x40006ae	        0x488b1424	                    mov rdx, qword [rsp]	       170	compress.c	FUNCTION_2	ELSE_5	IF_10	CALL_12
0x40006b2	      0x488d742418	                   lea rsi, [rsp + 0x18]	       170	compress.c	FUNCTION_2	ELSE_5	IF_10	CALL_12
0x40006b7	      0xe800000000	                          call 0x40006bc	       170	compress.c	FUNCTION_2	ELSE_5	IF_10	CALL_12
0x40006bc	            0x85c0	                           test eax, eax	       170	compress.c	FUNCTION_2	ELSE_5	IF_10	CALL_12
0x40006be	            0x741c	                            je 0x40006dc	       170	compress.c	FUNCTION_2	ELSE_5	IF_10	CALL_12
0x40006c0	          0x4c89fe	                            mov rsi, r15	       175	compress.c	FUNCTION_2	ELSE_5	IF_10	CALL_13
0x40006c3	          0x4c89ef	                            mov rdi, r13	       175	compress.c	FUNCTION_2	ELSE_5	IF_10	CALL_13
0x40006c6	      0xe800000000	                          call 0x40006cb	       175	compress.c	FUNCTION_2	ELSE_5	IF_10	CALL_13
0x40006cb	      0xbf11000000	                           mov edi, 0x11	       176	compress.c	FUNCTION_2	ELSE_5	IF_10	CALL_14
0x40006d0	      0xe800000000	                          call 0x40006d5	       176	compress.c	FUNCTION_2	ELSE_5	IF_10	CALL_14
0x40006d5	      0xb800000000	                              mov eax, 0	       177	compress.c	FUNCTION_2	ELSE_5	IF_10
0x40006da	            0xeb7c	                           jmp 0x4000758	       177	compress.c	FUNCTION_2	ELSE_5	IF_10
0x40006dc	      0x48035c2418	             add rbx, qword [rsp + 0x18]	       180	compress.c	FUNCTION_2	ELSE_5
0x40006e1	      0x48895c2418	             mov qword [rsp + 0x18], rbx	       180	compress.c	FUNCTION_2	ELSE_5
0x40006e6	          0x4939dc	                            cmp r12, rbx	       183	compress.c	FUNCTION_2	ELSE_5	IF_11
0x40006e9	            0x7610	                           jbe 0x40006fb	       183	compress.c	FUNCTION_2	ELSE_5	IF_11
0x40006eb	          0x4889ea	                            mov rdx, rbp	       184	compress.c	FUNCTION_2	ELSE_5	CALL_15
0x40006ee	          0x4c89fe	                            mov rsi, r15	       184	compress.c	FUNCTION_2	ELSE_5	CALL_15
0x40006f1	          0x4c89ef	                            mov rdi, r13	       184	compress.c	FUNCTION_2	ELSE_5	CALL_15
0x40006f4	      0xe800000000	                          call 0x40006f9	       184	compress.c	FUNCTION_2	ELSE_5	CALL_15
0x40006f9	            0xeb1f	                           jmp 0x400071a	       184	compress.c	FUNCTION_2	ELSE_5	CALL_15
0x40006fb	          0x4c89fe	                            mov rsi, r15	       189	compress.c	FUNCTION_2	ELSE_5	ELSE_6	CALL_16
0x40006fe	          0x4c89ef	                            mov rdi, r13	       189	compress.c	FUNCTION_2	ELSE_5	ELSE_6	CALL_16
0x4000701	      0xe800000000	                          call 0x4000706	       189	compress.c	FUNCTION_2	ELSE_5	ELSE_6	CALL_16
0x4000706	        0x488b0424	                    mov rax, qword [rsp]	       190	compress.c	FUNCTION_2	ELSE_5	ELSE_6
0x400070a	    0x488985b00000	            mov qword [rbp + 0xb0], rax 	       190	compress.c	FUNCTION_2	ELSE_5	ELSE_6
0x4000711	        0x806524cf	             and byte [rbp + 0x24], 0xcf	       191	compress.c	FUNCTION_2	ELSE_5	ELSE_6
0x4000715	          0x4c89e0	                            mov rax, r12	       192	compress.c	FUNCTION_2	ELSE_5	ELSE_6
0x4000718	            0xeb3e	                           jmp 0x4000758	       192	compress.c	FUNCTION_2	ELSE_5	ELSE_6
0x400071a	        0x488b3c24	                    mov rdi, qword [rsp]	       196	compress.c	FUNCTION_2	CALL_17
0x400071e	      0xe800000000	                          call 0x4000723	       196	compress.c	FUNCTION_2	CALL_17
0x4000723	    0x4c89bdb00000	            mov qword [rbp + 0xb0], r15 	       197	compress.c	FUNCTION_2
0x400072a	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       198	compress.c	FUNCTION_2
0x400072f	        0x48894538	            mov qword [rbp + 0x38], rax 	       198	compress.c	FUNCTION_2
0x4000733	         0xfb64524	           movzx eax, byte [rbp + 0x24] 	       199	compress.c	FUNCTION_2
0x4000737	          0x83e0cf	                     and eax, 0xffffffcf	       199	compress.c	FUNCTION_2
0x400073a	          0x83c810	                            or eax, 0x10	       199	compress.c	FUNCTION_2
0x400073d	          0x884524	               mov byte [rbp + 0x24], al	       199	compress.c	FUNCTION_2
0x4000740	          0x4c89e0	                            mov rax, r12	       201	compress.c	FUNCTION_2
0x4000743	            0xeb13	                           jmp 0x4000758	       201	compress.c	FUNCTION_2
0x4000745	      0xb800000000	                              mov eax, 0	       140	compress.c	FUNCTION_2	IF_6
0x400074a	            0xeb0c	                           jmp 0x4000758	       140	compress.c	FUNCTION_2	IF_6
0x400074c	      0xb800000000	                              mov eax, 0	       140	compress.c	FUNCTION_2	IF_6
0x4000751	            0xeb05	                           jmp 0x4000758	       140	compress.c	FUNCTION_2	IF_6
0x4000753	      0xb800000000	                              mov eax, 0	       140	compress.c	FUNCTION_2	IF_6
0x4000758	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	       202	compress.c	FUNCTION_2
0x400075d	    0x644833142528	                xor rdx, qword fs:[0x28]	       202	compress.c	FUNCTION_2
0x4000766	            0x747a	                            je 0x40007e2	       202	compress.c	FUNCTION_2
0x4000768	            0xeb73	                           jmp 0x40007dd	       202	compress.c	FUNCTION_2
0x400076a	          0x4c89fe	                            mov rsi, r15	       138	compress.c	FUNCTION_2	CALL_5
0x400076d	          0x4c89ef	                            mov rdi, r13	       138	compress.c	FUNCTION_2	CALL_5
0x4000770	      0xe800000000	                          call 0x4000775	       138	compress.c	FUNCTION_2	CALL_5
0x4000775	          0x4889c3	                            mov rbx, rax	       138	compress.c	FUNCTION_2	CALL_5
0x4000778	          0x4885c0	                           test rax, rax	       139	compress.c	FUNCTION_2	IF_6
0x400077b	            0x74d6	                            je 0x4000753	       139	compress.c	FUNCTION_2	IF_6
0x400077d	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       144	compress.c	FUNCTION_2	IF_7
0x4000782	        0x48894538	            mov qword [rbp + 0x38], rax 	       144	compress.c	FUNCTION_2	IF_7
0x4000786	          0x4963f6	                        movsxd rsi, r14d	       147	compress.c	FUNCTION_2	IF_7	IF_8	IF_9	CALL_6
0x4000789	      0x48637c2414	         movsxd rdi, dword [rsp + 0x14] 	       147	compress.c	FUNCTION_2	IF_7	IF_8	IF_9	CALL_6
0x400078e	        0x48033c24	                    add rdi, qword [rsp]	       147	compress.c	FUNCTION_2	IF_7	IF_8	IF_9	CALL_6
0x4000792	          0x4c89f9	                            mov rcx, r15	       147	compress.c	FUNCTION_2	IF_7	IF_8	IF_9	CALL_6
0x4000795	          0x4889da	                            mov rdx, rbx	       147	compress.c	FUNCTION_2	IF_7	IF_8	IF_9	CALL_6
0x4000798	      0xe8a3f8ffff	            call sym.decompress_contents	       147	compress.c	FUNCTION_2	IF_7	IF_8	IF_9	CALL_6
0x400079d	            0x85c0	                           test eax, eax	       147	compress.c	FUNCTION_2	IF_7	IF_8	IF_9	CALL_6
0x400079f	     0xf84b9feffff	                            je 0x400065e	       147	compress.c	FUNCTION_2	IF_7	IF_8	IF_9	CALL_6
0x40007a5	      0xe9d3feffff	                           jmp 0x400067d	       147	compress.c	FUNCTION_2	IF_7	IF_8	IF_9	CALL_6
0x40007aa	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       144	compress.c	FUNCTION_2	IF_7
0x40007af	        0x48894538	            mov qword [rbp + 0x38], rax 	       144	compress.c	FUNCTION_2	IF_7
0x40007b3	          0x4889ea	                            mov rdx, rbp	       162	compress.c	FUNCTION_2	IF_7	ELSE_4	CALL_10
0x40007b6	          0x4c89fe	                            mov rsi, r15	       162	compress.c	FUNCTION_2	IF_7	ELSE_4	CALL_10
0x40007b9	          0x4c89ef	                            mov rdi, r13	       162	compress.c	FUNCTION_2	IF_7	ELSE_4	CALL_10
0x40007bc	      0xe800000000	                          call 0x40007c1	       162	compress.c	FUNCTION_2	IF_7	ELSE_4	CALL_10
0x40007c1	          0x4963d6	                        movsxd rdx, r14d	        59	string3.h	FUNCTION_11	CALL_3
0x40007c4	      0x4863742414	         movsxd rsi, dword [rsp + 0x14] 	        59	string3.h	FUNCTION_11	CALL_3
0x40007c9	        0x48033424	                    add rsi, qword [rsp]	        59	string3.h	FUNCTION_11	CALL_3
0x40007cd	          0x4863fb	                         movsxd rdi, ebx	        59	string3.h	FUNCTION_11	CALL_3
0x40007d0	          0x4c01ff	                            add rdi, r15	        59	string3.h	FUNCTION_11	CALL_3
0x40007d3	      0xe800000000	                          call 0x40007d8	        59	string3.h	FUNCTION_11	CALL_3
0x40007d8	      0xe93dffffff	                           jmp 0x400071a	        59	string3.h	FUNCTION_11	CALL_3
0x40007dd	      0xe800000000	                          call 0x40007e2	       202	compress.c	FUNCTION_2
0x40007e2	        0x4883c438	                           add rsp, 0x38	       202	compress.c	FUNCTION_2
0x40007e6	              0x5b	                                 pop rbx	       202	compress.c	FUNCTION_2
0x40007e7	              0x5d	                                 pop rbp	       202	compress.c	FUNCTION_2
0x40007e8	            0x415c	                                 pop r12	       202	compress.c	FUNCTION_2
0x40007ea	            0x415d	                                 pop r13	       202	compress.c	FUNCTION_2
0x40007ec	            0x415e	                                 pop r14	       202	compress.c	FUNCTION_2
0x40007ee	            0x415f	                                 pop r15	       202	compress.c	FUNCTION_2
0x40007f0	              0xc3	                                     ret	       202	compress.c	FUNCTION_2
bfd_init_section_compress_status	FOR,0:DO,0:CALL,4:IF,3:functions,0:SWITCH,0:ELSE,0:WHILE,0	52
0x4000981	            0x4155	                                push r13	       542	compress.c	FUNCTION_8
0x4000983	            0x4154	                                push r12	       542	compress.c	FUNCTION_8
0x4000985	              0x55	                                push rbp	       542	compress.c	FUNCTION_8
0x4000986	              0x53	                                push rbx	       542	compress.c	FUNCTION_8
0x4000987	        0x4883ec08	                              sub rsp, 8	       542	compress.c	FUNCTION_8
0x400098b	         0xfb64744	           movzx eax, byte [rdi + 0x44] 	       547	compress.c	FUNCTION_8	IF_1
0x400098f	          0x83e018	                           and eax, 0x18	       547	compress.c	FUNCTION_8	IF_1
0x4000992	            0x3c08	                               cmp al, 8	       547	compress.c	FUNCTION_8	IF_1
0x4000994	            0x7526	                           jne 0x40009bc	       547	compress.c	FUNCTION_8	IF_1
0x4000996	          0x4889fd	                            mov rbp, rdi	       547	compress.c	FUNCTION_8	IF_1
0x4000999	          0x4889f3	                            mov rbx, rsi	       547	compress.c	FUNCTION_8	IF_1
0x400099c	        0x4c8b6638	            mov r12, qword [rsi + 0x38] 	       548	compress.c	FUNCTION_8	IF_1
0x40009a0	          0x4d85e4	                           test r12, r12	       548	compress.c	FUNCTION_8	IF_1
0x40009a3	            0x7417	                            je 0x40009bc	       548	compress.c	FUNCTION_8	IF_1
0x40009a5	      0x48837e4000	               cmp qword [rsi + 0x40], 0	       549	compress.c	FUNCTION_8	IF_1
0x40009aa	            0x7510	                           jne 0x40009bc	       549	compress.c	FUNCTION_8	IF_1
0x40009ac	    0x4883beb00000	               cmp qword [rsi + 0xb0], 0	       550	compress.c	FUNCTION_8	IF_1
0x40009b4	            0x7506	                           jne 0x40009bc	       550	compress.c	FUNCTION_8	IF_1
0x40009b6	        0xf6462430	           test byte [rsi + 0x24], 0x30 	       551	compress.c	FUNCTION_8	IF_1
0x40009ba	            0x7411	                            je 0x40009cd	       551	compress.c	FUNCTION_8	IF_1
0x40009bc	      0xbf05000000	                              mov edi, 5	       553	compress.c	FUNCTION_8	IF_1	CALL_1
0x40009c1	      0xe800000000	                          call 0x40009c6	       553	compress.c	FUNCTION_8	IF_1	CALL_1
0x40009c6	      0xb800000000	                              mov eax, 0	       554	compress.c	FUNCTION_8	IF_1
0x40009cb	            0xeb49	                           jmp 0x4000a16	       554	compress.c	FUNCTION_8	IF_1
0x40009cd	          0x4c89e7	                            mov rdi, r12	       559	compress.c	FUNCTION_8	CALL_2
0x40009d0	      0xe800000000	                          call 0x40009d5	       559	compress.c	FUNCTION_8	CALL_2
0x40009d5	          0x4989c5	                            mov r13, rax	       559	compress.c	FUNCTION_8	CALL_2
0x40009d8	      0xb800000000	                              mov eax, 0	       562	compress.c	FUNCTION_8	IF_2
0x40009dd	          0x4d85ed	                           test r13, r13	       561	compress.c	FUNCTION_8	IF_2
0x40009e0	            0x7434	                            je 0x4000a16	       561	compress.c	FUNCTION_8	IF_2
0x40009e2	          0x4d89e0	                             mov r8, r12	       564	compress.c	FUNCTION_8	IF_3	CALL_3
0x40009e5	      0xb900000000	                              mov ecx, 0	       564	compress.c	FUNCTION_8	IF_3	CALL_3
0x40009ea	          0x4c89ea	                            mov rdx, r13	       564	compress.c	FUNCTION_8	IF_3	CALL_3
0x40009ed	          0x4889de	                            mov rsi, rbx	       564	compress.c	FUNCTION_8	IF_3	CALL_3
0x40009f0	          0x4889ef	                            mov rdi, rbp	       564	compress.c	FUNCTION_8	IF_3	CALL_3
0x40009f3	      0xe800000000	                          call 0x40009f8	       564	compress.c	FUNCTION_8	IF_3	CALL_3
0x40009f8	            0x85c0	                           test eax, eax	       564	compress.c	FUNCTION_8	IF_3	CALL_3
0x40009fa	            0x741a	                            je 0x4000a16	       564	compress.c	FUNCTION_8	IF_3	CALL_3
0x40009fc	          0x4c89e1	                            mov rcx, r12	       568	compress.c	FUNCTION_8	CALL_4
0x40009ff	          0x4c89ea	                            mov rdx, r13	       568	compress.c	FUNCTION_8	CALL_4
0x4000a02	          0x4889de	                            mov rsi, rbx	       568	compress.c	FUNCTION_8	CALL_4
0x4000a05	          0x4889ef	                            mov rdi, rbp	       568	compress.c	FUNCTION_8	CALL_4
0x4000a08	      0xe855fbffff	  call sym.bfd_compress_section_contents	       568	compress.c	FUNCTION_8	CALL_4
0x4000a0d	          0x4885c0	                           test rax, rax	       571	compress.c	FUNCTION_8
0x4000a10	           0xf95c0	                                setne al	       571	compress.c	FUNCTION_8
0x4000a13	           0xfb6c0	                           movzx eax, al	       571	compress.c	FUNCTION_8
0x4000a16	        0x4883c408	                              add rsp, 8	       572	compress.c	FUNCTION_8
0x4000a1a	              0x5b	                                 pop rbx	       572	compress.c	FUNCTION_8
0x4000a1b	              0x5d	                                 pop rbp	       572	compress.c	FUNCTION_8
0x4000a1c	            0x415c	                                 pop r12	       572	compress.c	FUNCTION_8
0x4000a1e	            0x415d	                                 pop r13	       572	compress.c	FUNCTION_8
0x4000a20	              0xc3	                                     ret	       572	compress.c	FUNCTION_8
bfd_is_section_compressed_with_header	FOR,0:DO,0:CALL,8:IF,7:functions,0:SWITCH,0:ELSE,4:WHILE,0	120
0x40003b7	            0x4157	                                push r15	       381	compress.c	FUNCTION_5
0x40003b9	            0x4156	                                push r14	       381	compress.c	FUNCTION_5
0x40003bb	            0x4155	                                push r13	       381	compress.c	FUNCTION_5
0x40003bd	            0x4154	                                push r12	       381	compress.c	FUNCTION_5
0x40003bf	              0x55	                                push rbp	       381	compress.c	FUNCTION_5
0x40003c0	              0x53	                                push rbx	       381	compress.c	FUNCTION_5
0x40003c1	        0x4883ec28	                           sub rsp, 0x28	       381	compress.c	FUNCTION_5
0x40003c5	          0x4989fd	                            mov r13, rdi	       381	compress.c	FUNCTION_5
0x40003c8	          0x4889f5	                            mov rbp, rsi	       381	compress.c	FUNCTION_5
0x40003cb	          0x4989d6	                            mov r14, rdx	       381	compress.c	FUNCTION_5
0x40003ce	          0x4989cf	                            mov r15, rcx	       381	compress.c	FUNCTION_5
0x40003d1	    0x64488b042528	                mov rax, qword fs:[0x28]	       381	compress.c	FUNCTION_5
0x40003da	      0x4889442418	             mov qword [rsp + 0x18], rax	       381	compress.c	FUNCTION_5
0x40003df	            0x31c0	                            xor eax, eax	       381	compress.c	FUNCTION_5
0x40003e1	         0xfb65e24	           movzx ebx, byte [rsi + 0x24] 	       385	compress.c	FUNCTION_5
0x40003e5	          0xc0eb04	                               shr bl, 4	       385	compress.c	FUNCTION_5
0x40003e8	          0x83e303	                              and ebx, 3	       385	compress.c	FUNCTION_5
0x40003eb	      0xe800000000	                          call 0x40003f0	       388	compress.c	FUNCTION_5	CALL_1
0x40003f0	          0x83f818	                           cmp eax, 0x18	       389	compress.c	FUNCTION_5	IF_1
0x40003f3	            0x7e14	                           jle 0x4000409	       389	compress.c	FUNCTION_5	IF_1
0x40003f5	      0xba00000000	                              mov edx, 0	       390	compress.c	FUNCTION_5	CALL_2
0x40003fa	      0xbe86010000	                          mov esi, 0x186	       390	compress.c	FUNCTION_5	CALL_2
0x40003ff	      0xbf00000000	                              mov edi, 0	       390	compress.c	FUNCTION_5	CALL_2
0x4000404	      0xe800000000	                          call 0x4000409	       390	compress.c	FUNCTION_5	CALL_2
0x4000409	          0x4189c4	                           mov r12d, eax	       390	compress.c	FUNCTION_5	CALL_2
0x400040c	            0x85c0	                           test eax, eax	       391	compress.c	FUNCTION_5
0x400040e	     0xf84d3000000	                            je 0x40004e7	       391	compress.c	FUNCTION_5
0x4000414	        0x806524cf	             and byte [rbp + 0x24], 0xcf	       394	compress.c	FUNCTION_5
0x4000418	          0x4c63c0	                          movsxd r8, eax	       397	compress.c	FUNCTION_5	IF_2	CALL_3
0x400041b	      0xb900000000	                              mov ecx, 0	       397	compress.c	FUNCTION_5	IF_2	CALL_3
0x4000420	          0x4889e2	                            mov rdx, rsp	       397	compress.c	FUNCTION_5	IF_2	CALL_3
0x4000423	          0x4889ee	                            mov rsi, rbp	       397	compress.c	FUNCTION_5	IF_2	CALL_3
0x4000426	          0x4c89ef	                            mov rdi, r13	       397	compress.c	FUNCTION_5	IF_2	CALL_3
0x4000429	      0xe800000000	                          call 0x400042e	       397	compress.c	FUNCTION_5	IF_2	CALL_3
0x400042e	            0x85c0	                           test eax, eax	       397	compress.c	FUNCTION_5	IF_2	CALL_3
0x4000430	     0xf85ea000000	                           jne 0x4000520	       397	compress.c	FUNCTION_5	IF_2	CALL_3
0x4000436	      0xe9d6000000	                           jmp 0x4000511	       397	compress.c	FUNCTION_5	IF_2	CALL_3
0x400043b	          0x4889e6	                            mov rsi, rsp	       402	compress.c	FUNCTION_5	IF_2	CALL_4
0x400043e	      0xbf00000000	                              mov edi, 0	       402	compress.c	FUNCTION_5	IF_2	CALL_4
0x4000443	      0xb904000000	                              mov ecx, 4	       402	compress.c	FUNCTION_5	IF_2	CALL_4
0x4000448	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       402	compress.c	FUNCTION_5	IF_2	CALL_4
0x400044a	           0xf97c0	                                 seta al	       402	compress.c	FUNCTION_5	IF_2	CALL_4
0x400044d	           0xf92c2	                                 setb dl	       402	compress.c	FUNCTION_5	IF_2	CALL_4
0x4000450	            0x29d0	                            sub eax, edx	       402	compress.c	FUNCTION_5	IF_2	CALL_4
0x4000452	           0xfbec0	                           movsx eax, al	       402	compress.c	FUNCTION_5	IF_2	CALL_4
0x4000455	            0x85c0	                           test eax, eax	       402	compress.c	FUNCTION_5	IF_2	CALL_4
0x4000457	        0x410f94c5	                               sete r13b	       402	compress.c	FUNCTION_5	IF_2	CALL_4
0x400045b	        0x450fb6ed	                        movzx r13d, r13b	       402	compress.c	FUNCTION_5	IF_2	CALL_4
0x400045f	        0x488b5538	            mov rdx, qword [rbp + 0x38] 	       409	compress.c	FUNCTION_5	ELSE_1	ELSE_2
0x4000463	          0x498917	                    mov qword [r15], rdx	       409	compress.c	FUNCTION_5	ELSE_1	ELSE_2
0x4000466	            0x7417	                            je 0x400047f	       410	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4
0x4000468	    0x41bd00000000	                             mov r13d, 0	       410	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4
0x400046e	            0xeb4d	                           jmp 0x40004bd	       410	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4
0x4000470	        0x488b4538	            mov rax, qword [rbp + 0x38] 	       409	compress.c	FUNCTION_5	ELSE_1	ELSE_2
0x4000474	          0x498907	                    mov qword [r15], rax	       409	compress.c	FUNCTION_5	ELSE_1	ELSE_2
0x4000477	    0x41bd00000000	                             mov r13d, 0	       409	compress.c	FUNCTION_5	ELSE_1	ELSE_2
0x400047d	            0xeb3e	                           jmp 0x40004bd	       409	compress.c	FUNCTION_5	ELSE_1	ELSE_2
0x400047f	        0x488b7500	                    mov rsi, qword [rbp]	       422	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	ELSE_3	IF_7	CALL_6
0x4000483	      0xbf00000000	                              mov edi, 0	       422	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	ELSE_3	IF_7	CALL_6
0x4000488	      0xb90b000000	                            mov ecx, 0xb	       422	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	ELSE_3	IF_7	CALL_6
0x400048d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       422	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	ELSE_3	IF_7	CALL_6
0x400048f	           0xf97c2	                                 seta dl	       422	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	ELSE_3	IF_7	CALL_6
0x4000492	           0xf92c0	                                 setb al	       422	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	ELSE_3	IF_7	CALL_6
0x4000495	            0x38c2	                              cmp dl, al	       422	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	ELSE_3	IF_7	CALL_6
0x4000497	            0x750f	                           jne 0x40004a8	       422	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	ELSE_3	IF_7	CALL_6
0x4000499	       0xfb6442404	               movzx eax, byte [rsp + 4]	       423	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	ELSE_3	IF_7	CALL_7
0x400049e	    0xf68400000000	            test byte [rax + rax], 0x10 	       423	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	ELSE_3	IF_7	CALL_7
0x40004a6	            0x750f	                           jne 0x40004b7	       423	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	ELSE_3	IF_7	CALL_7
0x40004a8	      0x488d7c2404	                      lea rdi, [rsp + 4]	       426	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	CALL_8
0x40004ad	      0xe800000000	                          call 0x40004b2	       426	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	CALL_8
0x40004b2	          0x498907	                    mov qword [r15], rax	       426	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	CALL_8
0x40004b5	            0xeb06	                           jmp 0x40004bd	       426	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	CALL_8
0x40004b7	    0x41bd00000000	                             mov r13d, 0	       424	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	ELSE_3	IF_7
0x40004bd	          0x83e303	                              and ebx, 3	       430	compress.c	FUNCTION_5
0x40004c0	          0xc1e304	                              shl ebx, 4	       430	compress.c	FUNCTION_5
0x40004c3	         0xfb64524	           movzx eax, byte [rbp + 0x24] 	       430	compress.c	FUNCTION_5
0x40004c7	          0x83e0cf	                     and eax, 0xffffffcf	       430	compress.c	FUNCTION_5
0x40004ca	             0x9c3	                             or ebx, eax	       430	compress.c	FUNCTION_5
0x40004cc	          0x885d24	               mov byte [rbp + 0x24], bl	       430	compress.c	FUNCTION_5
0x40004cf	          0x458926	                   mov dword [r14], r12d	       431	compress.c	FUNCTION_5
0x40004d2	          0x4489e8	                           mov eax, r13d	       433	compress.c	FUNCTION_5
0x40004d5	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       433	compress.c	FUNCTION_5
0x40004da	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       433	compress.c	FUNCTION_5
0x40004e3	            0x746e	                            je 0x4000553	       433	compress.c	FUNCTION_5
0x40004e5	            0xeb67	                           jmp 0x400054e	       433	compress.c	FUNCTION_5
0x40004e7	        0x806524cf	             and byte [rbp + 0x24], 0xcf	       394	compress.c	FUNCTION_5
0x40004eb	    0x41b80c000000	                            mov r8d, 0xc	       397	compress.c	FUNCTION_5	IF_2	CALL_3
0x40004f1	      0xb900000000	                              mov ecx, 0	       397	compress.c	FUNCTION_5	IF_2	CALL_3
0x40004f6	          0x4889e2	                            mov rdx, rsp	       397	compress.c	FUNCTION_5	IF_2	CALL_3
0x40004f9	          0x4889ee	                            mov rsi, rbp	       397	compress.c	FUNCTION_5	IF_2	CALL_3
0x40004fc	          0x4c89ef	                            mov rdi, r13	       397	compress.c	FUNCTION_5	IF_2	CALL_3
0x40004ff	      0xe800000000	                          call 0x4000504	       397	compress.c	FUNCTION_5	IF_2	CALL_3
0x4000504	            0x85c0	                           test eax, eax	       397	compress.c	FUNCTION_5	IF_2	CALL_3
0x4000506	     0xf852fffffff	                           jne 0x400043b	       397	compress.c	FUNCTION_5	IF_2	CALL_3
0x400050c	      0xe95fffffff	                           jmp 0x4000470	       397	compress.c	FUNCTION_5	IF_2	CALL_3
0x4000511	        0x488b4538	            mov rax, qword [rbp + 0x38] 	       409	compress.c	FUNCTION_5	ELSE_1	ELSE_2
0x4000515	          0x498907	                    mov qword [r15], rax	       409	compress.c	FUNCTION_5	ELSE_1	ELSE_2
0x4000518	    0x41bd00000000	                             mov r13d, 0	       409	compress.c	FUNCTION_5	ELSE_1	ELSE_2
0x400051e	            0xeb9d	                           jmp 0x40004bd	       409	compress.c	FUNCTION_5	ELSE_1	ELSE_2
0x4000520	        0x488b4538	            mov rax, qword [rbp + 0x38] 	       409	compress.c	FUNCTION_5	ELSE_1	ELSE_2
0x4000524	          0x498907	                    mov qword [r15], rax	       409	compress.c	FUNCTION_5	ELSE_1	ELSE_2
0x4000527	          0x4c89f9	                            mov rcx, r15	       414	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	IF_5	IF_6	CALL_5
0x400052a	          0x4889ea	                            mov rdx, rbp	       414	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	IF_5	IF_6	CALL_5
0x400052d	          0x4889e6	                            mov rsi, rsp	       414	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	IF_5	IF_6	CALL_5
0x4000530	          0x4c89ef	                            mov rdi, r13	       414	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	IF_5	IF_6	CALL_5
0x4000533	      0xe800000000	                          call 0x4000538	       414	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	IF_5	IF_6	CALL_5
0x4000538	    0x41bd01000000	                             mov r13d, 1	       414	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	IF_5	IF_6	CALL_5
0x400053e	            0x85c0	                           test eax, eax	       414	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	IF_5	IF_6	CALL_5
0x4000540	      0xb8ffffffff	                     mov eax, 0xffffffff	       414	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	IF_5	IF_6	CALL_5
0x4000545	        0x440f44e0	                         cmove r12d, eax	       414	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	IF_5	IF_6	CALL_5
0x4000549	      0xe96fffffff	                           jmp 0x40004bd	       414	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	IF_5	IF_6	CALL_5
0x400054e	      0xe800000000	                          call 0x4000553	       433	compress.c	FUNCTION_5
0x4000553	        0x4883c428	                           add rsp, 0x28	       433	compress.c	FUNCTION_5
0x4000557	              0x5b	                                 pop rbx	       433	compress.c	FUNCTION_5
0x4000558	              0x5d	                                 pop rbp	       433	compress.c	FUNCTION_5
0x4000559	            0x415c	                                 pop r12	       433	compress.c	FUNCTION_5
0x400055b	            0x415d	                                 pop r13	       433	compress.c	FUNCTION_5
0x400055d	            0x415e	                                 pop r14	       433	compress.c	FUNCTION_5
0x400055f	            0x415f	                                 pop r15	       433	compress.c	FUNCTION_5
0x4000561	              0xc3	                                     ret	       433	compress.c	FUNCTION_5
