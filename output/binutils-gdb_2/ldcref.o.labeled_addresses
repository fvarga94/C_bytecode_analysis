add_cref	CALL,10:DO,0:FOR,1:WHILE,0:ELSE,2:functions,0:SWITCH,0:IF,8	86
0x4000639	            0x4155	                                push r13	       162	ldcref.c	FUNCTION_2
0x400063b	            0x4154	                                push r12	       162	ldcref.c	FUNCTION_2
0x400063d	              0x55	                                push rbp	       162	ldcref.c	FUNCTION_2
0x400063e	              0x53	                                push rbx	       162	ldcref.c	FUNCTION_2
0x400063f	        0x4883ec08	                              sub rsp, 8	       162	ldcref.c	FUNCTION_2
0x4000643	          0x4889fb	                            mov rbx, rdi	       162	ldcref.c	FUNCTION_2
0x4000646	          0x4889f5	                            mov rbp, rsi	       162	ldcref.c	FUNCTION_2
0x4000649	          0x4989d5	                            mov r13, rdx	       162	ldcref.c	FUNCTION_2
0x400064c	    0x833d00000000	               cmp dword [0x04000653], 0	       166	ldcref.c	FUNCTION_2	IF_1
0x4000653	            0x7543	                           jne 0x4000698	       166	ldcref.c	FUNCTION_2	IF_1
0x4000655	      0xba28000000	                           mov edx, 0x28	       168	ldcref.c	FUNCTION_2	IF_1	IF_2	CALL_1
0x400065a	      0xbe00000000	                              mov esi, 0	       168	ldcref.c	FUNCTION_2	IF_1	IF_2	CALL_1
0x400065f	      0xbf00000000	                              mov edi, 0	       168	ldcref.c	FUNCTION_2	IF_1	IF_2	CALL_1
0x4000664	      0xe800000000	                          call 0x4000669	       168	ldcref.c	FUNCTION_2	IF_1	IF_2	CALL_1
0x4000669	            0x85c0	                           test eax, eax	       168	ldcref.c	FUNCTION_2	IF_1	IF_2	CALL_1
0x400066b	            0x7521	                           jne 0x400068e	       168	ldcref.c	FUNCTION_2	IF_1	IF_2	CALL_1
0x400066d	      0xba05000000	                              mov edx, 5	       170	ldcref.c	FUNCTION_2	IF_1	CALL_3
0x4000672	      0xbe00000000	                              mov esi, 0	       170	ldcref.c	FUNCTION_2	IF_1	CALL_3
0x4000677	      0xbf00000000	                              mov edi, 0	       170	ldcref.c	FUNCTION_2	IF_1	CALL_3
0x400067c	      0xe800000000	                          call 0x4000681	       170	ldcref.c	FUNCTION_2	IF_1	CALL_3
0x4000681	          0x4889c7	                            mov rdi, rax	       170	ldcref.c	FUNCTION_2	IF_1	CALL_3
0x4000684	      0xb800000000	                              mov eax, 0	       170	ldcref.c	FUNCTION_2	IF_1	CALL_3
0x4000689	      0xe800000000	                          call 0x400068e	       170	ldcref.c	FUNCTION_2	IF_1	CALL_3
0x400068e	    0xc70500000000	               mov dword [0x04000698], 1	       171	ldcref.c	FUNCTION_2	IF_1
0x4000698	      0xb900000000	                              mov ecx, 0	       174	ldcref.c	FUNCTION_2
0x400069d	      0xba01000000	                              mov edx, 1	       174	ldcref.c	FUNCTION_2
0x40006a2	          0x4889de	                            mov rsi, rbx	       174	ldcref.c	FUNCTION_2
0x40006a5	      0xbf00000000	                              mov edi, 0	       174	ldcref.c	FUNCTION_2
0x40006aa	      0xe800000000	                          call 0x40006af	       174	ldcref.c	FUNCTION_2
0x40006af	          0x4989c4	                            mov r12, rax	       174	ldcref.c	FUNCTION_2
0x40006b2	          0x4885c0	                           test rax, rax	       175	ldcref.c	FUNCTION_2	IF_3
0x40006b5	            0x7521	                           jne 0x40006d8	       175	ldcref.c	FUNCTION_2	IF_3
0x40006b7	      0xba05000000	                              mov edx, 5	       176	ldcref.c	FUNCTION_2	CALL_5
0x40006bc	      0xbe00000000	                              mov esi, 0	       176	ldcref.c	FUNCTION_2	CALL_5
0x40006c1	      0xbf00000000	                              mov edi, 0	       176	ldcref.c	FUNCTION_2	CALL_5
0x40006c6	      0xe800000000	                          call 0x40006cb	       176	ldcref.c	FUNCTION_2	CALL_5
0x40006cb	          0x4889c7	                            mov rdi, rax	       176	ldcref.c	FUNCTION_2	CALL_5
0x40006ce	      0xb800000000	                              mov eax, 0	       176	ldcref.c	FUNCTION_2	CALL_5
0x40006d3	      0xe800000000	                          call 0x40006d8	       176	ldcref.c	FUNCTION_2	CALL_5
0x40006d8	      0x498b5c2420	            mov rbx, qword [r12 + 0x20] 	       178	ldcref.c	FUNCTION_2	FOR_1
0x40006dd	          0x4885db	                           test rbx, rbx	       178	ldcref.c	FUNCTION_2	FOR_1
0x40006e0	            0x7470	                            je 0x4000752	       178	ldcref.c	FUNCTION_2	FOR_1
0x40006e2	        0x483b6b08	                cmp rbp, qword [rbx + 8]	       179	ldcref.c	FUNCTION_2	FOR_1	IF_4
0x40006e6	            0x7508	                           jne 0x40006f0	       179	ldcref.c	FUNCTION_2	FOR_1	IF_4
0x40006e8	            0xeb46	                           jmp 0x4000730	       179	ldcref.c	FUNCTION_2	FOR_1	IF_4
0x40006ea	        0x48396b08	                cmp qword [rbx + 8], rbp	       179	ldcref.c	FUNCTION_2	FOR_1	IF_4
0x40006ee	            0x7440	                            je 0x4000730	       179	ldcref.c	FUNCTION_2	FOR_1	IF_4
0x40006f0	          0x488b1b	                    mov rbx, qword [rbx]	       178	ldcref.c	FUNCTION_2	FOR_1
0x40006f3	          0x4885db	                           test rbx, rbx	       178	ldcref.c	FUNCTION_2	FOR_1
0x40006f6	            0x75f2	                           jne 0x40006ea	       178	ldcref.c	FUNCTION_2	FOR_1
0x40006f8	            0xeb58	                           jmp 0x4000752	       178	ldcref.c	FUNCTION_2	FOR_1
0x40006fa	      0xba05000000	                              mov edx, 5	       186	ldcref.c	FUNCTION_2	IF_5	CALL_8
0x40006ff	      0xbe00000000	                              mov esi, 0	       186	ldcref.c	FUNCTION_2	IF_5	CALL_8
0x4000704	      0xbf00000000	                              mov edi, 0	       186	ldcref.c	FUNCTION_2	IF_5	CALL_8
0x4000709	      0xe800000000	                          call 0x400070e	       186	ldcref.c	FUNCTION_2	IF_5	CALL_8
0x400070e	          0x4889c7	                            mov rdi, rax	       186	ldcref.c	FUNCTION_2	IF_5	CALL_8
0x4000711	      0xb800000000	                              mov eax, 0	       186	ldcref.c	FUNCTION_2	IF_5	CALL_8
0x4000716	      0xe800000000	                          call 0x400071b	       186	ldcref.c	FUNCTION_2	IF_5	CALL_8
0x400071b	      0x498b442420	            mov rax, qword [r12 + 0x20] 	       187	ldcref.c	FUNCTION_2	IF_5
0x4000720	          0x488903	                    mov qword [rbx], rax	       187	ldcref.c	FUNCTION_2	IF_5
0x4000723	      0x49895c2420	             mov qword [r12 + 0x20], rbx	       188	ldcref.c	FUNCTION_2	IF_5
0x4000728	        0x48896b08	                mov qword [rbx + 8], rbp	       189	ldcref.c	FUNCTION_2	IF_5
0x400072c	        0x806310f8	             and byte [rbx + 0x10], 0xf8	       192	ldcref.c	FUNCTION_2	IF_5
0x4000730	    0x4981fd000000	                              cmp r13, 0	       195	ldcref.c	FUNCTION_2	IF_7	CALL_9
0x4000737	            0x7506	                           jne 0x400073f	       195	ldcref.c	FUNCTION_2	IF_7	CALL_9
0x4000739	        0x804b1004	                 or byte [rbx + 0x10], 4	       196	ldcref.c	FUNCTION_2	IF_7
0x400073d	            0xeb2c	                           jmp 0x400076b	       196	ldcref.c	FUNCTION_2	IF_7
0x400073f	      0x41f6452110	           test byte [r13 + 0x21], 0x10 	       197	ldcref.c	FUNCTION_2	ELSE_1	IF_8	CALL_10
0x4000744	            0x7406	                            je 0x400074c	       197	ldcref.c	FUNCTION_2	ELSE_1	IF_8	CALL_10
0x4000746	        0x804b1002	                 or byte [rbx + 0x10], 2	       198	ldcref.c	FUNCTION_2	ELSE_1	IF_8
0x400074a	            0xeb1f	                           jmp 0x400076b	       198	ldcref.c	FUNCTION_2	ELSE_1	IF_8
0x400074c	        0x804b1001	                 or byte [rbx + 0x10], 1	       200	ldcref.c	FUNCTION_2	ELSE_2
0x4000750	            0xeb19	                           jmp 0x400076b	       201	ldcref.c	FUNCTION_2	ELSE_2
0x4000752	      0xbe18000000	                           mov esi, 0x18	       184	ldcref.c	FUNCTION_2	IF_5	CALL_6
0x4000757	      0xbf00000000	                              mov edi, 0	       184	ldcref.c	FUNCTION_2	IF_5	CALL_6
0x400075c	      0xe800000000	                          call 0x4000761	       184	ldcref.c	FUNCTION_2	IF_5	CALL_6
0x4000761	          0x4889c3	                            mov rbx, rax	       184	ldcref.c	FUNCTION_2	IF_5	CALL_6
0x4000764	          0x4885c0	                           test rax, rax	       185	ldcref.c	FUNCTION_2	IF_5	IF_6
0x4000767	            0x75b2	                           jne 0x400071b	       185	ldcref.c	FUNCTION_2	IF_5	IF_6
0x4000769	            0xeb8f	                           jmp 0x40006fa	       185	ldcref.c	FUNCTION_2	IF_5	IF_6
0x400076b	        0x4883c408	                              add rsp, 8	       201	ldcref.c	FUNCTION_2	ELSE_2
0x400076f	              0x5b	                                 pop rbx	       201	ldcref.c	FUNCTION_2	ELSE_2
0x4000770	              0x5d	                                 pop rbp	       201	ldcref.c	FUNCTION_2	ELSE_2
0x4000771	            0x415c	                                 pop r12	       201	ldcref.c	FUNCTION_2	ELSE_2
0x4000773	            0x415d	                                 pop r13	       201	ldcref.c	FUNCTION_2	ELSE_2
0x4000775	              0xc3	                                     ret	       201	ldcref.c	FUNCTION_2	ELSE_2
check_nocrossrefs	CALL,1:DO,0:FOR,0:WHILE,0:ELSE,0:functions,0:SWITCH,0:IF,1	11
0x4000e8c	    0x833d00000000	               cmp dword [0x04000e93], 0	       496	ldcref.c	FUNCTION_8	IF_1
0x4000e93	            0x7426	                            je 0x4000ebb	       496	ldcref.c	FUNCTION_8	IF_1
0x4000e95	        0x4883ec08	                              sub rsp, 8	       495	ldcref.c	FUNCTION_8
0x4000e99	      0xba00000000	                              mov edx, 0	       499	ldcref.c	FUNCTION_8
0x4000e9e	      0xbe00000000	                              mov esi, 0	       499	ldcref.c	FUNCTION_8
0x4000ea3	      0xbf00000000	                              mov edi, 0	       499	ldcref.c	FUNCTION_8
0x4000ea8	      0xe800000000	                          call 0x4000ead	       499	ldcref.c	FUNCTION_8
0x4000ead	      0xbf00000000	                              mov edi, 0	       501	ldcref.c	FUNCTION_8	CALL_1
0x4000eb2	      0xe800000000	                          call 0x4000eb7	       501	ldcref.c	FUNCTION_8	CALL_1
0x4000eb7	        0x4883c408	                              add rsp, 8	       502	ldcref.c	FUNCTION_8
0x4000ebb	            0xf3c3	                                     ret	       502	ldcref.c	FUNCTION_8
check_refs	CALL,5:DO,0:FOR,0:WHILE,0:ELSE,0:functions,0:SWITCH,0:IF,1	47
0x4000134	            0x4156	                                push r14	       618	ldcref.c	FUNCTION_11
0x4000136	            0x4155	                                push r13	       618	ldcref.c	FUNCTION_11
0x4000138	            0x4154	                                push r12	       618	ldcref.c	FUNCTION_11
0x400013a	              0x55	                                push rbp	       618	ldcref.c	FUNCTION_11
0x400013b	              0x53	                                push rbx	       618	ldcref.c	FUNCTION_11
0x400013c	        0x4883ec30	                           sub rsp, 0x30	       618	ldcref.c	FUNCTION_11
0x4000140	          0x4989fe	                            mov r14, rdi	       618	ldcref.c	FUNCTION_11
0x4000143	          0x4189f5	                           mov r13d, esi	       618	ldcref.c	FUNCTION_11
0x4000146	          0x4989d4	                            mov r12, rdx	       618	ldcref.c	FUNCTION_11
0x4000149	          0x4889cb	                            mov rbx, rcx	       618	ldcref.c	FUNCTION_11
0x400014c	          0x4c89c5	                             mov rbp, r8	       618	ldcref.c	FUNCTION_11
0x400014f	    0x64488b042528	                mov rax, qword fs:[0x28]	       618	ldcref.c	FUNCTION_11
0x4000158	      0x4889442428	             mov qword [rsp + 0x28], rax	       618	ldcref.c	FUNCTION_11
0x400015d	            0x31c0	                            xor eax, eax	       618	ldcref.c	FUNCTION_11
0x400015f	          0x4889cf	                            mov rdi, rcx	       627	ldcref.c	FUNCTION_11	IF_1	CALL_1
0x4000162	      0xe800000000	                          call 0x4000167	       627	ldcref.c	FUNCTION_11	IF_1	CALL_1
0x4000167	            0x85c0	                           test eax, eax	       627	ldcref.c	FUNCTION_11	IF_1	CALL_1
0x4000169	            0x7524	                           jne 0x400018f	       627	ldcref.c	FUNCTION_11	IF_1	CALL_1
0x400016b	      0xba05000000	                              mov edx, 5	       628	ldcref.c	FUNCTION_11	CALL_3
0x4000170	      0xbe00000000	                              mov esi, 0	       628	ldcref.c	FUNCTION_11	CALL_3
0x4000175	      0xbf00000000	                              mov edi, 0	       628	ldcref.c	FUNCTION_11	CALL_3
0x400017a	      0xe800000000	                          call 0x400017f	       628	ldcref.c	FUNCTION_11	CALL_3
0x400017f	          0x4889de	                            mov rsi, rbx	       628	ldcref.c	FUNCTION_11	CALL_3
0x4000182	          0x4889c7	                            mov rdi, rax	       628	ldcref.c	FUNCTION_11	CALL_3
0x4000185	      0xb800000000	                              mov eax, 0	       628	ldcref.c	FUNCTION_11	CALL_3
0x400018a	      0xe800000000	                          call 0x400018f	       628	ldcref.c	FUNCTION_11	CALL_3
0x400018f	        0x4c893424	                    mov qword [rsp], r14	       630	ldcref.c	FUNCTION_11
0x4000193	      0x44896c2420	            mov dword [rsp + 0x20], r13d	       631	ldcref.c	FUNCTION_11
0x4000198	      0x4c89642408	                mov qword [rsp + 8], r12	       632	ldcref.c	FUNCTION_11
0x400019d	      0x48896c2410	             mov qword [rsp + 0x10], rbp	       633	ldcref.c	FUNCTION_11
0x40001a2	    0x488b83b00000	            mov rax, qword [rbx + 0xb0] 	       634	ldcref.c	FUNCTION_11	CALL_4
0x40001a9	      0x4889442418	             mov qword [rsp + 0x18], rax	       634	ldcref.c	FUNCTION_11	CALL_4
0x40001ae	          0x4889e2	                            mov rdx, rsp	       635	ldcref.c	FUNCTION_11	CALL_5
0x40001b1	      0xbe00000000	                              mov esi, 0	       635	ldcref.c	FUNCTION_11	CALL_5
0x40001b6	          0x4889df	                            mov rdi, rbx	       635	ldcref.c	FUNCTION_11	CALL_5
0x40001b9	      0xe800000000	                          call 0x40001be	       635	ldcref.c	FUNCTION_11	CALL_5
0x40001be	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       636	ldcref.c	FUNCTION_11
0x40001c3	    0x644833042528	                xor rax, qword fs:[0x28]	       636	ldcref.c	FUNCTION_11
0x40001cc	            0x7405	                            je 0x40001d3	       636	ldcref.c	FUNCTION_11
0x40001ce	      0xe800000000	                          call 0x40001d3	       636	ldcref.c	FUNCTION_11
0x40001d3	        0x4883c430	                           add rsp, 0x30	       636	ldcref.c	FUNCTION_11
0x40001d7	              0x5b	                                 pop rbx	       636	ldcref.c	FUNCTION_11
0x40001d8	              0x5d	                                 pop rbp	       636	ldcref.c	FUNCTION_11
0x40001d9	            0x415c	                                 pop r12	       636	ldcref.c	FUNCTION_11
0x40001db	            0x415d	                                 pop r13	       636	ldcref.c	FUNCTION_11
0x40001dd	            0x415e	                                 pop r14	       636	ldcref.c	FUNCTION_11
0x40001df	              0xc3	                                     ret	       636	ldcref.c	FUNCTION_11
cref_fill_array	CALL,2:DO,0:FOR,0:WHILE,0:ELSE,0:functions,0:SWITCH,0:IF,1	27
0x40000d4	              0x55	                                push rbp	       328	ldcref.c	FUNCTION_4
0x40000d5	              0x53	                                push rbx	       328	ldcref.c	FUNCTION_4
0x40000d6	        0x4883ec08	                              sub rsp, 8	       328	ldcref.c	FUNCTION_4
0x40000da	          0x4889fb	                            mov rbx, rdi	       328	ldcref.c	FUNCTION_4
0x40000dd	          0x4889f5	                            mov rbp, rsi	       328	ldcref.c	FUNCTION_4
0x40000e0	      0x48837f1800	               cmp qword [rdi + 0x18], 0	       331	ldcref.c	FUNCTION_4	CALL_1
0x40000e5	            0x740f	                            je 0x40000f6	       331	ldcref.c	FUNCTION_4	CALL_1
0x40000e7	      0xbe4b010000	                          mov esi, 0x14b	       331	ldcref.c	FUNCTION_4	CALL_1
0x40000ec	      0xbf00000000	                              mov edi, 0	       331	ldcref.c	FUNCTION_4	CALL_1
0x40000f1	      0xe800000000	                          call 0x40000f6	       331	ldcref.c	FUNCTION_4	CALL_1
0x40000f6	        0x488b7308	                mov rsi, qword [rbx + 8]	       332	ldcref.c	FUNCTION_4	CALL_2
0x40000fa	      0xba03000000	                              mov edx, 3	       332	ldcref.c	FUNCTION_4	CALL_2
0x40000ff	    0x488b3d000000	            mov rdi, qword [0x04000106] 	       332	ldcref.c	FUNCTION_4	CALL_2
0x4000106	      0xe800000000	                          call 0x400010b	       332	ldcref.c	FUNCTION_4	CALL_2
0x400010b	        0x48894318	             mov qword [rbx + 0x18], rax	       332	ldcref.c	FUNCTION_4	CALL_2
0x400010f	          0x4885c0	                           test rax, rax	       334	ldcref.c	FUNCTION_4	IF_1
0x4000112	            0x7508	                           jne 0x400011c	       334	ldcref.c	FUNCTION_4	IF_1
0x4000114	        0x488b4308	                mov rax, qword [rbx + 8]	       335	ldcref.c	FUNCTION_4	IF_1
0x4000118	        0x48894318	             mov qword [rbx + 0x18], rax	       335	ldcref.c	FUNCTION_4	IF_1
0x400011c	        0x488b4500	                    mov rax, qword [rbp]	       337	ldcref.c	FUNCTION_4
0x4000120	          0x488918	                    mov qword [rax], rbx	       337	ldcref.c	FUNCTION_4
0x4000123	      0x4883450008	                      add qword [rbp], 8	       339	ldcref.c	FUNCTION_4
0x4000128	      0xb801000000	                              mov eax, 1	       342	ldcref.c	FUNCTION_4
0x400012d	        0x4883c408	                              add rsp, 8	       342	ldcref.c	FUNCTION_4
0x4000131	              0x5b	                                 pop rbx	       342	ldcref.c	FUNCTION_4
0x4000132	              0x5d	                                 pop rbp	       342	ldcref.c	FUNCTION_4
0x4000133	              0xc3	                                     ret	       342	ldcref.c	FUNCTION_4
check_nocrossref	CALL,6:DO,0:FOR,3:WHILE,0:ELSE,0:functions,0:SWITCH,0:IF,5	76
0x40002ed	            0x4157	                                push r15	       553	ldcref.c	FUNCTION_10
0x40002ef	            0x4156	                                push r14	       553	ldcref.c	FUNCTION_10
0x40002f1	            0x4155	                                push r13	       553	ldcref.c	FUNCTION_10
0x40002f3	            0x4154	                                push r12	       553	ldcref.c	FUNCTION_10
0x40002f5	              0x55	                                push rbp	       553	ldcref.c	FUNCTION_10
0x40002f6	              0x53	                                push rbx	       553	ldcref.c	FUNCTION_10
0x40002f7	        0x4883ec08	                              sub rsp, 8	       553	ldcref.c	FUNCTION_10
0x40002fb	          0x4989ff	                            mov r15, rdi	       553	ldcref.c	FUNCTION_10
0x40002fe	        0x488b7708	                mov rsi, qword [rdi + 8]	       561	ldcref.c	FUNCTION_10	CALL_1
0x4000302	    0x41b801000000	                              mov r8d, 1	       561	ldcref.c	FUNCTION_10	CALL_1
0x4000308	      0xb900000000	                              mov ecx, 0	       561	ldcref.c	FUNCTION_10	CALL_1
0x400030d	      0xba00000000	                              mov edx, 0	       561	ldcref.c	FUNCTION_10	CALL_1
0x4000312	    0x488b3d000000	            mov rdi, qword [0x04000319] 	       561	ldcref.c	FUNCTION_10	CALL_1
0x4000319	      0xe800000000	                          call 0x400031e	       561	ldcref.c	FUNCTION_10	CALL_1
0x400031e	          0x4885c0	                           test rax, rax	       563	ldcref.c	FUNCTION_10	IF_1
0x4000321	            0x752d	                           jne 0x4000350	       563	ldcref.c	FUNCTION_10	IF_1
0x4000323	        0x498b5f08	                mov rbx, qword [r15 + 8]	       565	ldcref.c	FUNCTION_10	IF_1	CALL_3
0x4000327	      0xba05000000	                              mov edx, 5	       565	ldcref.c	FUNCTION_10	IF_1	CALL_3
0x400032c	      0xbe00000000	                              mov esi, 0	       565	ldcref.c	FUNCTION_10	IF_1	CALL_3
0x4000331	      0xbf00000000	                              mov edi, 0	       565	ldcref.c	FUNCTION_10	IF_1	CALL_3
0x4000336	      0xe800000000	                          call 0x400033b	       565	ldcref.c	FUNCTION_10	IF_1	CALL_3
0x400033b	          0x4889de	                            mov rsi, rbx	       565	ldcref.c	FUNCTION_10	IF_1	CALL_3
0x400033e	          0x4889c7	                            mov rdi, rax	       565	ldcref.c	FUNCTION_10	IF_1	CALL_3
0x4000341	      0xb800000000	                              mov eax, 0	       565	ldcref.c	FUNCTION_10	IF_1	CALL_3
0x4000346	      0xe800000000	                          call 0x400034b	       565	ldcref.c	FUNCTION_10	IF_1	CALL_3
0x400034b	      0xe988000000	                           jmp 0x40003d8	       567	ldcref.c	FUNCTION_10	IF_1
0x4000350	          0x4889c5	                            mov rbp, rax	       567	ldcref.c	FUNCTION_10	IF_1
0x4000353	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       570	ldcref.c	FUNCTION_10	IF_2
0x4000357	          0x83e803	                              sub eax, 3	       570	ldcref.c	FUNCTION_10	IF_2
0x400035a	            0x3c01	                               cmp al, 1	       570	ldcref.c	FUNCTION_10	IF_2
0x400035c	            0x777a	                            ja 0x40003d8	       570	ldcref.c	FUNCTION_10	IF_2
0x400035e	        0x488b4528	            mov rax, qword [rbp + 0x28] 	       574	ldcref.c	FUNCTION_10
0x4000362	        0x488b4068	            mov rax, qword [rax + 0x68] 	       574	ldcref.c	FUNCTION_10
0x4000366	          0x4885c0	                           test rax, rax	       575	ldcref.c	FUNCTION_10	IF_3
0x4000369	            0x746d	                            je 0x40003d8	       575	ldcref.c	FUNCTION_10	IF_3
0x400036b	          0x4c8b30	                    mov r14, qword [rax]	       577	ldcref.c	FUNCTION_10	CALL_4
0x400036e	    0x4c8b25000000	            mov r12, qword [0x04000375] 	       579	ldcref.c	FUNCTION_10	FOR_1
0x4000375	          0x4d85e4	                           test r12, r12	       579	ldcref.c	FUNCTION_10	FOR_1
0x4000378	            0x745e	                            je 0x40003d8	       579	ldcref.c	FUNCTION_10	FOR_1
0x400037a	      0x4d8b6c2408	                mov r13, qword [r12 + 8]	       580	ldcref.c	FUNCTION_10	FOR_1	FOR_2
0x400037f	          0x4d85ed	                           test r13, r13	       580	ldcref.c	FUNCTION_10	FOR_1	FOR_2
0x4000382	            0x744b	                            je 0x40003cf	       580	ldcref.c	FUNCTION_10	FOR_1	FOR_2
0x4000384	        0x498b7d08	                mov rdi, qword [r13 + 8]	       582	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	CALL_5
0x4000388	          0x4c89f6	                            mov rsi, r14	       582	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	CALL_5
0x400038b	      0xe800000000	                          call 0x4000390	       582	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	CALL_5
0x4000390	            0x85c0	                           test eax, eax	       582	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	CALL_5
0x4000392	            0x752a	                           jne 0x40003be	       582	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	CALL_5
0x4000394	        0x498b5f20	            mov rbx, qword [r15 + 0x20] 	       583	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	FOR_3
0x4000398	          0x4885db	                           test rbx, rbx	       583	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	FOR_3
0x400039b	            0x7421	                            je 0x40003be	       583	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	FOR_3
0x400039d	        0x488b4b08	                mov rcx, qword [rbx + 8]	       584	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	FOR_3	CALL_6
0x40003a1	        0x488b5528	            mov rdx, qword [rbp + 0x28] 	       584	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	FOR_3	CALL_6
0x40003a5	        0x488b7d08	                mov rdi, qword [rbp + 8]	       584	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	FOR_3	CALL_6
0x40003a9	          0x4d89e0	                             mov r8, r12	       584	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	FOR_3	CALL_6
0x40003ac	      0xbe01000000	                              mov esi, 1	       584	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	FOR_3	CALL_6
0x40003b1	      0xe87efdffff	                     call sym.check_refs	       584	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	FOR_3	CALL_6
0x40003b6	          0x488b1b	                    mov rbx, qword [rbx]	       583	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	FOR_3
0x40003b9	          0x4885db	                           test rbx, rbx	       583	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	FOR_3
0x40003bc	            0x75df	                           jne 0x400039d	       583	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_4	FOR_3
0x40003be	    0x41837c241000	               cmp dword [r12 + 0x10], 0	       588	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_5
0x40003c4	            0x7509	                           jne 0x40003cf	       588	ldcref.c	FUNCTION_10	FOR_1	FOR_2	IF_5
0x40003c6	        0x4d8b6d00	                    mov r13, qword [r13]	       580	ldcref.c	FUNCTION_10	FOR_1	FOR_2
0x40003ca	          0x4d85ed	                           test r13, r13	       580	ldcref.c	FUNCTION_10	FOR_1	FOR_2
0x40003cd	            0x75b5	                           jne 0x4000384	       580	ldcref.c	FUNCTION_10	FOR_1	FOR_2
0x40003cf	        0x4d8b2424	                    mov r12, qword [r12]	       579	ldcref.c	FUNCTION_10	FOR_1
0x40003d3	          0x4d85e4	                           test r12, r12	       579	ldcref.c	FUNCTION_10	FOR_1
0x40003d6	            0x75a2	                           jne 0x400037a	       579	ldcref.c	FUNCTION_10	FOR_1
0x40003d8	      0xb801000000	                              mov eax, 1	       593	ldcref.c	FUNCTION_10
0x40003dd	        0x4883c408	                              add rsp, 8	       593	ldcref.c	FUNCTION_10
0x40003e1	              0x5b	                                 pop rbx	       593	ldcref.c	FUNCTION_10
0x40003e2	              0x5d	                                 pop rbp	       593	ldcref.c	FUNCTION_10
0x40003e3	            0x415c	                                 pop r12	       593	ldcref.c	FUNCTION_10
0x40003e5	            0x415d	                                 pop r13	       593	ldcref.c	FUNCTION_10
0x40003e7	            0x415e	                                 pop r14	       593	ldcref.c	FUNCTION_10
0x40003e9	            0x415f	                                 pop r15	       593	ldcref.c	FUNCTION_10
0x40003eb	              0xc3	                                     ret	       593	ldcref.c	FUNCTION_10
output_cref	CALL,10:DO,0:FOR,1:WHILE,1:ELSE,0:functions,0:SWITCH,0:IF,1	247
0x4000aba	            0x4157	                                push r15	       366	ldcref.c	FUNCTION_6
0x4000abc	            0x4156	                                push r14	       366	ldcref.c	FUNCTION_6
0x4000abe	            0x4155	                                push r13	       366	ldcref.c	FUNCTION_6
0x4000ac0	            0x4154	                                push r12	       366	ldcref.c	FUNCTION_6
0x4000ac2	              0x55	                                push rbp	       366	ldcref.c	FUNCTION_6
0x4000ac3	              0x53	                                push rbx	       366	ldcref.c	FUNCTION_6
0x4000ac4	        0x4883ec18	                           sub rsp, 0x18	       366	ldcref.c	FUNCTION_6
0x4000ac8	          0x4889fd	                            mov rbp, rdi	       366	ldcref.c	FUNCTION_6
0x4000acb	    0x64488b042528	                mov rax, qword fs:[0x28]	       366	ldcref.c	FUNCTION_6
0x4000ad4	      0x4889442408	                mov qword [rsp + 8], rax	       366	ldcref.c	FUNCTION_6
0x4000ad9	            0x31c0	                            xor eax, eax	       366	ldcref.c	FUNCTION_6
0x4000adb	      0xba05000000	                              mov edx, 5	       371	ldcref.c	FUNCTION_6	CALL_1
0x4000ae0	      0xbe00000000	                              mov esi, 0	       371	ldcref.c	FUNCTION_6	CALL_1
0x4000ae5	      0xbf00000000	                              mov edi, 0	       371	ldcref.c	FUNCTION_6	CALL_1
0x4000aea	      0xe800000000	                          call 0x4000aef	       371	ldcref.c	FUNCTION_6	CALL_1
0x4000aef	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_14
0x4000af2	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_14
0x4000af7	          0x4889ef	                            mov rdi, rbp	        97	stdio2.h	CALL_14
0x4000afa	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_14
0x4000aff	      0xe800000000	                          call 0x4000b04	        97	stdio2.h	CALL_14
0x4000b04	      0xba05000000	                              mov edx, 5	       372	ldcref.c	FUNCTION_6	CALL_2
0x4000b09	      0xbe00000000	                              mov esi, 0	       372	ldcref.c	FUNCTION_6	CALL_2
0x4000b0e	      0xbf00000000	                              mov edi, 0	       372	ldcref.c	FUNCTION_6	CALL_2
0x4000b13	      0xe800000000	                          call 0x4000b18	       372	ldcref.c	FUNCTION_6	CALL_2
0x4000b18	          0x4889c3	                            mov rbx, rax	       372	ldcref.c	FUNCTION_6	CALL_2
0x4000b1b	          0x4889ee	                            mov rsi, rbp	        97	stdio2.h	CALL_14
0x4000b1e	          0x4889c7	                            mov rdi, rax	        97	stdio2.h	CALL_14
0x4000b21	      0xe800000000	                          call 0x4000b26	        97	stdio2.h	CALL_14
0x4000b26	      0xb800000000	                              mov eax, 0	       374	ldcref.c	FUNCTION_6	CALL_3
0x4000b2b	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       374	ldcref.c	FUNCTION_6	CALL_3
0x4000b32	          0x4889df	                            mov rdi, rbx	       374	ldcref.c	FUNCTION_6	CALL_3
0x4000b35	            0xf2ae	              repne scasb al, byte [rdi]	       374	ldcref.c	FUNCTION_6	CALL_3
0x4000b37	          0x4889c8	                            mov rax, rcx	       374	ldcref.c	FUNCTION_6	CALL_3
0x4000b3a	          0x48f7d0	                                 not rax	       374	ldcref.c	FUNCTION_6	CALL_3
0x4000b3d	        0x4883e801	                              sub rax, 1	       374	ldcref.c	FUNCTION_6	CALL_3
0x4000b41	            0x89c3	                            mov ebx, eax	       374	ldcref.c	FUNCTION_6	CALL_3
0x4000b43	          0x83f831	                           cmp eax, 0x31	       375	ldcref.c	FUNCTION_6	WHILE_1
0x4000b46	            0x7f15	                            jg 0x4000b5d	       375	ldcref.c	FUNCTION_6	WHILE_1
0x4000b48	          0x4889ee	                            mov rsi, rbp	       377	ldcref.c	FUNCTION_6	WHILE_1	CALL_4
0x4000b4b	      0xbf20000000	                           mov edi, 0x20	       377	ldcref.c	FUNCTION_6	WHILE_1	CALL_4
0x4000b50	      0xe800000000	                          call 0x4000b55	       377	ldcref.c	FUNCTION_6	WHILE_1	CALL_4
0x4000b55	          0x83c301	                              add ebx, 1	       378	ldcref.c	FUNCTION_6	WHILE_1
0x4000b58	          0x83fb32	                           cmp ebx, 0x32	       375	ldcref.c	FUNCTION_6	WHILE_1
0x4000b5b	            0x75eb	                           jne 0x4000b48	       375	ldcref.c	FUNCTION_6	WHILE_1
0x4000b5d	      0xba05000000	                              mov edx, 5	       380	ldcref.c	FUNCTION_6	CALL_5
0x4000b62	      0xbe00000000	                              mov esi, 0	       380	ldcref.c	FUNCTION_6	CALL_5
0x4000b67	      0xbf00000000	                              mov edi, 0	       380	ldcref.c	FUNCTION_6	CALL_5
0x4000b6c	      0xe800000000	                          call 0x4000b71	       380	ldcref.c	FUNCTION_6	CALL_5
0x4000b71	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_14
0x4000b74	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_14
0x4000b79	          0x4889ef	                            mov rdi, rbp	        97	stdio2.h	CALL_14
0x4000b7c	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_14
0x4000b81	      0xe800000000	                          call 0x4000b86	        97	stdio2.h	CALL_14
0x4000b86	    0x833d00000000	               cmp dword [0x04000b8d], 0	       382	ldcref.c	FUNCTION_6	IF_1
0x4000b8d	            0x752e	                           jne 0x4000bbd	       382	ldcref.c	FUNCTION_6	IF_1
0x4000b8f	      0xba05000000	                              mov edx, 5	       384	ldcref.c	FUNCTION_6	IF_1	CALL_6
0x4000b94	      0xbe00000000	                              mov esi, 0	       384	ldcref.c	FUNCTION_6	IF_1	CALL_6
0x4000b99	      0xbf00000000	                              mov edi, 0	       384	ldcref.c	FUNCTION_6	IF_1	CALL_6
0x4000b9e	      0xe800000000	                          call 0x4000ba3	       384	ldcref.c	FUNCTION_6	IF_1	CALL_6
0x4000ba3	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_14
0x4000ba6	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_14
0x4000bab	          0x4889ef	                            mov rdi, rbp	        97	stdio2.h	CALL_14
0x4000bae	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_14
0x4000bb3	      0xe800000000	                          call 0x4000bb8	        97	stdio2.h	CALL_14
0x4000bb8	      0xe9ab020000	                           jmp 0x4000e68	        97	stdio2.h	CALL_14
0x4000bbd	    0x488b05000000	            mov rax, qword [0x04000bc4] 	       388	ldcref.c	FUNCTION_6	CALL_7
0x4000bc4	    0x488d3cc50000	                        lea rdi, [rax*8]	       388	ldcref.c	FUNCTION_6	CALL_7
0x4000bcc	      0xe800000000	                          call 0x4000bd1	       388	ldcref.c	FUNCTION_6	CALL_7
0x4000bd1	          0x4989c6	                            mov r14, rax	       388	ldcref.c	FUNCTION_6	CALL_7
0x4000bd4	        0x48890424	                    mov qword [rsp], rax	       390	ldcref.c	FUNCTION_6
0x4000bd8	          0x4889e2	                            mov rdx, rsp	       391	ldcref.c	FUNCTION_6
0x4000bdb	      0xbe00000000	                              mov esi, 0	       391	ldcref.c	FUNCTION_6
0x4000be0	      0xbf00000000	                              mov edi, 0	       391	ldcref.c	FUNCTION_6
0x4000be5	      0xe800000000	                          call 0x4000bea	       391	ldcref.c	FUNCTION_6
0x4000bea	        0x488b0424	                    mov rax, qword [rsp]	       392	ldcref.c	FUNCTION_6	CALL_8
0x4000bee	          0x4c29f0	                            sub rax, r14	       392	ldcref.c	FUNCTION_6	CALL_8
0x4000bf1	        0x48c1f803	                              sar rax, 3	       392	ldcref.c	FUNCTION_6	CALL_8
0x4000bf5	    0x483b05000000	            cmp rax, qword [0x04000bfc] 	       392	ldcref.c	FUNCTION_6	CALL_8
0x4000bfc	            0x740f	                            je 0x4000c0d	       392	ldcref.c	FUNCTION_6	CALL_8
0x4000bfe	      0xbe88010000	                          mov esi, 0x188	       392	ldcref.c	FUNCTION_6	CALL_8
0x4000c03	      0xbf00000000	                              mov edi, 0	       392	ldcref.c	FUNCTION_6	CALL_8
0x4000c08	      0xe800000000	                          call 0x4000c0d	       392	ldcref.c	FUNCTION_6	CALL_8
0x4000c0d	      0xb900000000	                              mov ecx, 0	       394	ldcref.c	FUNCTION_6	CALL_9
0x4000c12	      0xba08000000	                              mov edx, 8	       394	ldcref.c	FUNCTION_6	CALL_9
0x4000c17	    0x488b35000000	            mov rsi, qword [0x04000c1e] 	       394	ldcref.c	FUNCTION_6	CALL_9
0x4000c1e	          0x4c89f7	                            mov rdi, r14	       394	ldcref.c	FUNCTION_6	CALL_9
0x4000c21	      0xe800000000	                          call 0x4000c26	       394	ldcref.c	FUNCTION_6	CALL_9
0x4000c26	    0x488b05000000	            mov rax, qword [0x04000c2d] 	       396	ldcref.c	FUNCTION_6
0x4000c2d	        0x4d8d3cc6	                  lea r15, [r14 + rax*8]	       396	ldcref.c	FUNCTION_6
0x4000c31	          0x4d39fe	                            cmp r14, r15	       397	ldcref.c	FUNCTION_6	FOR_1
0x4000c34	     0xf832e020000	                           jae 0x4000e68	       397	ldcref.c	FUNCTION_6	FOR_1
0x4000c3a	          0x4d8b2e	                    mov r13, qword [r14]	       398	ldcref.c	FUNCTION_6	CALL_10
0x4000c3d	        0x498b7508	                mov rsi, qword [r13 + 8]	       410	ldcref.c	FUNCTION_7	CALL_1
0x4000c41	    0x41b801000000	                              mov r8d, 1	       410	ldcref.c	FUNCTION_7	CALL_1
0x4000c47	      0xb900000000	                              mov ecx, 0	       410	ldcref.c	FUNCTION_7	CALL_1
0x4000c4c	      0xba00000000	                              mov edx, 0	       410	ldcref.c	FUNCTION_7	CALL_1
0x4000c51	    0x488b3d000000	            mov rdi, qword [0x04000c58] 	       410	ldcref.c	FUNCTION_7	CALL_1
0x4000c58	      0xe800000000	                          call 0x4000c5d	       410	ldcref.c	FUNCTION_7	CALL_1
0x4000c5d	          0x4885c0	                           test rax, rax	       412	ldcref.c	FUNCTION_7	IF_1
0x4000c60	            0x752a	                           jne 0x4000c8c	       412	ldcref.c	FUNCTION_7	IF_1
0x4000c62	        0x498b5d08	                mov rbx, qword [r13 + 8]	       413	ldcref.c	FUNCTION_7	IF_1	CALL_3
0x4000c66	      0xba05000000	                              mov edx, 5	       413	ldcref.c	FUNCTION_7	IF_1	CALL_3
0x4000c6b	      0xbe00000000	                              mov esi, 0	       413	ldcref.c	FUNCTION_7	IF_1	CALL_3
0x4000c70	      0xbf00000000	                              mov edi, 0	       413	ldcref.c	FUNCTION_7	IF_1	CALL_3
0x4000c75	      0xe800000000	                          call 0x4000c7a	       413	ldcref.c	FUNCTION_7	IF_1	CALL_3
0x4000c7a	          0x4889de	                            mov rsi, rbx	       413	ldcref.c	FUNCTION_7	IF_1	CALL_3
0x4000c7d	          0x4889c7	                            mov rdi, rax	       413	ldcref.c	FUNCTION_7	IF_1	CALL_3
0x4000c80	      0xb800000000	                              mov eax, 0	       413	ldcref.c	FUNCTION_7	IF_1	CALL_3
0x4000c85	      0xe800000000	                          call 0x4000c8a	       413	ldcref.c	FUNCTION_7	IF_1	CALL_3
0x4000c8a	            0xeb57	                           jmp 0x4000ce3	       413	ldcref.c	FUNCTION_7	IF_1	CALL_3
0x4000c8c	        0x80781803	                cmp byte [rax + 0x18], 3	       419	ldcref.c	FUNCTION_7	ELSE_1	IF_2
0x4000c90	            0x7551	                           jne 0x4000ce3	       419	ldcref.c	FUNCTION_7	ELSE_1	IF_2
0x4000c92	        0x488b4028	            mov rax, qword [rax + 0x28] 	       421	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_3
0x4000c96	      0x4883786800	               cmp qword [rax + 0x68], 0	       421	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_3
0x4000c9b	     0xf84ba010000	                            je 0x4000e5b	       421	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_3
0x4000ca1	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	       423	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4
0x4000ca8	          0x4885c0	                           test rax, rax	       423	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4
0x4000cab	            0x7436	                            je 0x4000ce3	       423	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4
0x4000cad	        0xf6404508	               test byte [rax + 0x45], 8	       424	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4
0x4000cb1	            0x7430	                            je 0x4000ce3	       424	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4
0x4000cb3	        0x498b4520	            mov rax, qword [r13 + 0x20] 	       426	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4	FOR_1
0x4000cb7	          0x4885c0	                           test rax, rax	       426	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4	FOR_1
0x4000cba	     0xf849b010000	                            je 0x4000e5b	       426	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4	FOR_1
0x4000cc0	        0x488b5008	                mov rdx, qword [rax + 8]	       427	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4	FOR_1	IF_5
0x4000cc4	        0xf6424508	               test byte [rdx + 0x45], 8	       427	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4	FOR_1	IF_5
0x4000cc8	            0x750c	                           jne 0x4000cd6	       427	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4	FOR_1	IF_5
0x4000cca	            0xeb17	                           jmp 0x4000ce3	       427	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4	FOR_1	IF_5
0x4000ccc	        0x488b5008	                mov rdx, qword [rax + 8]	       427	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4	FOR_1	IF_5
0x4000cd0	        0xf6424508	               test byte [rdx + 0x45], 8	       427	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4	FOR_1	IF_5
0x4000cd4	            0x740d	                            je 0x4000ce3	       427	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4	FOR_1	IF_5
0x4000cd6	          0x488b00	                    mov rax, qword [rax]	       426	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4	FOR_1
0x4000cd9	          0x4885c0	                           test rax, rax	       426	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4	FOR_1
0x4000cdc	            0x75ee	                           jne 0x4000ccc	       426	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4	FOR_1
0x4000cde	      0xe978010000	                           jmp 0x4000e5b	       426	ldcref.c	FUNCTION_7	ELSE_1	IF_2	IF_4	FOR_1
0x4000ce3	    0x833d00000000	               cmp dword [0x04000cea], 0	       435	ldcref.c	FUNCTION_7	IF_7
0x4000cea	            0x7433	                            je 0x4000d1f	       435	ldcref.c	FUNCTION_7	IF_7
0x4000cec	        0x498b4d18	            mov rcx, qword [r13 + 0x18] 	        97	stdio2.h	CALL_14
0x4000cf0	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_14
0x4000cf5	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_14
0x4000cfa	          0x4889ef	                            mov rdi, rbp	        97	stdio2.h	CALL_14
0x4000cfd	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_14
0x4000d02	      0xe800000000	                          call 0x4000d07	        97	stdio2.h	CALL_14
0x4000d07	        0x498b7d18	            mov rdi, qword [r13 + 0x18] 	       438	ldcref.c	FUNCTION_7	IF_7	CALL_4
0x4000d0b	      0xb800000000	                              mov eax, 0	       438	ldcref.c	FUNCTION_7	IF_7	CALL_4
0x4000d10	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       438	ldcref.c	FUNCTION_7	IF_7	CALL_4
0x4000d17	            0xf2ae	              repne scasb al, byte [rdi]	       438	ldcref.c	FUNCTION_7	IF_7	CALL_4
0x4000d19	            0x89cb	                            mov ebx, ecx	       438	ldcref.c	FUNCTION_7	IF_7	CALL_4
0x4000d1b	            0xf7d3	                                 not ebx	       438	ldcref.c	FUNCTION_7	IF_7	CALL_4
0x4000d1d	            0xeb31	                           jmp 0x4000d50	       438	ldcref.c	FUNCTION_7	IF_7	CALL_4
0x4000d1f	        0x498b4d08	                mov rcx, qword [r13 + 8]	        97	stdio2.h	CALL_14
0x4000d23	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_14
0x4000d28	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_14
0x4000d2d	          0x4889ef	                            mov rdi, rbp	        97	stdio2.h	CALL_14
0x4000d30	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_14
0x4000d35	      0xe800000000	                          call 0x4000d3a	        97	stdio2.h	CALL_14
0x4000d3a	        0x498b7d08	                mov rdi, qword [r13 + 8]	       443	ldcref.c	FUNCTION_7	ELSE_2	CALL_5
0x4000d3e	      0xb800000000	                              mov eax, 0	       443	ldcref.c	FUNCTION_7	ELSE_2	CALL_5
0x4000d43	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       443	ldcref.c	FUNCTION_7	ELSE_2	CALL_5
0x4000d4a	            0xf2ae	              repne scasb al, byte [rdi]	       443	ldcref.c	FUNCTION_7	ELSE_2	CALL_5
0x4000d4c	            0x89cb	                            mov ebx, ecx	       443	ldcref.c	FUNCTION_7	ELSE_2	CALL_5
0x4000d4e	            0xf7d3	                                 not ebx	       443	ldcref.c	FUNCTION_7	ELSE_2	CALL_5
0x4000d50	        0x4d8b6520	            mov r12, qword [r13 + 0x20] 	       446	ldcref.c	FUNCTION_7	FOR_2
0x4000d54	          0x4d85e4	                           test r12, r12	       446	ldcref.c	FUNCTION_7	FOR_2
0x4000d57	     0xf84eb000000	                            je 0x4000e48	       446	ldcref.c	FUNCTION_7	FOR_2
0x4000d5d	    0x41f644241001	               test byte [r12 + 0x10], 1	       448	ldcref.c	FUNCTION_7	FOR_2	IF_8
0x4000d63	            0x7436	                            je 0x4000d9b	       448	ldcref.c	FUNCTION_7	FOR_2	IF_8
0x4000d65	          0x83fb31	                           cmp ebx, 0x31	       450	ldcref.c	FUNCTION_7	FOR_2	IF_8	WHILE_1
0x4000d68	            0x7f15	                            jg 0x4000d7f	       450	ldcref.c	FUNCTION_7	FOR_2	IF_8	WHILE_1
0x4000d6a	          0x4889ee	                            mov rsi, rbp	       452	ldcref.c	FUNCTION_7	FOR_2	IF_8	WHILE_1	CALL_6
0x4000d6d	      0xbf20000000	                           mov edi, 0x20	       452	ldcref.c	FUNCTION_7	FOR_2	IF_8	WHILE_1	CALL_6
0x4000d72	      0xe800000000	                          call 0x4000d77	       452	ldcref.c	FUNCTION_7	FOR_2	IF_8	WHILE_1	CALL_6
0x4000d77	          0x83c301	                              add ebx, 1	       453	ldcref.c	FUNCTION_7	FOR_2	IF_8	WHILE_1
0x4000d7a	          0x83fb32	                           cmp ebx, 0x32	       450	ldcref.c	FUNCTION_7	FOR_2	IF_8	WHILE_1
0x4000d7d	            0x75eb	                           jne 0x4000d6a	       450	ldcref.c	FUNCTION_7	FOR_2	IF_8	WHILE_1
0x4000d7f	      0x498b542408	                mov rdx, qword [r12 + 8]	       455	ldcref.c	FUNCTION_7	FOR_2	IF_8	CALL_7
0x4000d84	      0xbe00000000	                              mov esi, 0	       455	ldcref.c	FUNCTION_7	FOR_2	IF_8	CALL_7
0x4000d89	          0x4889ef	                            mov rdi, rbp	       455	ldcref.c	FUNCTION_7	FOR_2	IF_8	CALL_7
0x4000d8c	      0xb800000000	                              mov eax, 0	       455	ldcref.c	FUNCTION_7	FOR_2	IF_8	CALL_7
0x4000d91	      0xe800000000	                          call 0x4000d96	       455	ldcref.c	FUNCTION_7	FOR_2	IF_8	CALL_7
0x4000d96	      0xbb00000000	                              mov ebx, 0	       456	ldcref.c	FUNCTION_7	FOR_2	IF_8
0x4000d9b	        0x4d8b2424	                    mov r12, qword [r12]	       446	ldcref.c	FUNCTION_7	FOR_2
0x4000d9f	          0x4d85e4	                           test r12, r12	       446	ldcref.c	FUNCTION_7	FOR_2
0x4000da2	            0x75b9	                           jne 0x4000d5d	       446	ldcref.c	FUNCTION_7	FOR_2
0x4000da4	        0x4d8b6520	            mov r12, qword [r13 + 0x20] 	       460	ldcref.c	FUNCTION_7	FOR_3
0x4000da8	          0x4d85e4	                           test r12, r12	       460	ldcref.c	FUNCTION_7	FOR_3
0x4000dab	     0xf8497000000	                            je 0x4000e48	       460	ldcref.c	FUNCTION_7	FOR_3
0x4000db1	    0x41f644241002	               test byte [r12 + 0x10], 2	       462	ldcref.c	FUNCTION_7	FOR_3	IF_9
0x4000db7	            0x7436	                            je 0x4000def	       462	ldcref.c	FUNCTION_7	FOR_3	IF_9
0x4000db9	          0x83fb31	                           cmp ebx, 0x31	       464	ldcref.c	FUNCTION_7	FOR_3	IF_9	WHILE_2
0x4000dbc	            0x7f15	                            jg 0x4000dd3	       464	ldcref.c	FUNCTION_7	FOR_3	IF_9	WHILE_2
0x4000dbe	          0x4889ee	                            mov rsi, rbp	       466	ldcref.c	FUNCTION_7	FOR_3	IF_9	WHILE_2	CALL_8
0x4000dc1	      0xbf20000000	                           mov edi, 0x20	       466	ldcref.c	FUNCTION_7	FOR_3	IF_9	WHILE_2	CALL_8
0x4000dc6	      0xe800000000	                          call 0x4000dcb	       466	ldcref.c	FUNCTION_7	FOR_3	IF_9	WHILE_2	CALL_8
0x4000dcb	          0x83c301	                              add ebx, 1	       467	ldcref.c	FUNCTION_7	FOR_3	IF_9	WHILE_2
0x4000dce	          0x83fb32	                           cmp ebx, 0x32	       464	ldcref.c	FUNCTION_7	FOR_3	IF_9	WHILE_2
0x4000dd1	            0x75eb	                           jne 0x4000dbe	       464	ldcref.c	FUNCTION_7	FOR_3	IF_9	WHILE_2
0x4000dd3	      0x498b542408	                mov rdx, qword [r12 + 8]	       469	ldcref.c	FUNCTION_7	FOR_3	IF_9	CALL_9
0x4000dd8	      0xbe00000000	                              mov esi, 0	       469	ldcref.c	FUNCTION_7	FOR_3	IF_9	CALL_9
0x4000ddd	          0x4889ef	                            mov rdi, rbp	       469	ldcref.c	FUNCTION_7	FOR_3	IF_9	CALL_9
0x4000de0	      0xb800000000	                              mov eax, 0	       469	ldcref.c	FUNCTION_7	FOR_3	IF_9	CALL_9
0x4000de5	      0xe800000000	                          call 0x4000dea	       469	ldcref.c	FUNCTION_7	FOR_3	IF_9	CALL_9
0x4000dea	      0xbb00000000	                              mov ebx, 0	       470	ldcref.c	FUNCTION_7	FOR_3	IF_9
0x4000def	        0x4d8b2424	                    mov r12, qword [r12]	       460	ldcref.c	FUNCTION_7	FOR_3
0x4000df3	          0x4d85e4	                           test r12, r12	       460	ldcref.c	FUNCTION_7	FOR_3
0x4000df6	            0x75b9	                           jne 0x4000db1	       460	ldcref.c	FUNCTION_7	FOR_3
0x4000df8	        0x4d8b6520	            mov r12, qword [r13 + 0x20] 	       474	ldcref.c	FUNCTION_7	FOR_4
0x4000dfc	          0x4d85e4	                           test r12, r12	       474	ldcref.c	FUNCTION_7	FOR_4
0x4000dff	            0x7447	                            je 0x4000e48	       474	ldcref.c	FUNCTION_7	FOR_4
0x4000e01	    0x41f644241003	               test byte [r12 + 0x10], 3	       476	ldcref.c	FUNCTION_7	FOR_4	IF_10
0x4000e07	            0x7536	                           jne 0x4000e3f	       476	ldcref.c	FUNCTION_7	FOR_4	IF_10
0x4000e09	          0x83fb31	                           cmp ebx, 0x31	       478	ldcref.c	FUNCTION_7	FOR_4	IF_10	WHILE_3
0x4000e0c	            0x7f15	                            jg 0x4000e23	       478	ldcref.c	FUNCTION_7	FOR_4	IF_10	WHILE_3
0x4000e0e	          0x4889ee	                            mov rsi, rbp	       480	ldcref.c	FUNCTION_7	FOR_4	IF_10	WHILE_3	CALL_10
0x4000e11	      0xbf20000000	                           mov edi, 0x20	       480	ldcref.c	FUNCTION_7	FOR_4	IF_10	WHILE_3	CALL_10
0x4000e16	      0xe800000000	                          call 0x4000e1b	       480	ldcref.c	FUNCTION_7	FOR_4	IF_10	WHILE_3	CALL_10
0x4000e1b	          0x83c301	                              add ebx, 1	       481	ldcref.c	FUNCTION_7	FOR_4	IF_10	WHILE_3
0x4000e1e	          0x83fb32	                           cmp ebx, 0x32	       478	ldcref.c	FUNCTION_7	FOR_4	IF_10	WHILE_3
0x4000e21	            0x75eb	                           jne 0x4000e0e	       478	ldcref.c	FUNCTION_7	FOR_4	IF_10	WHILE_3
0x4000e23	      0x498b542408	                mov rdx, qword [r12 + 8]	       483	ldcref.c	FUNCTION_7	FOR_4	IF_10	CALL_11
0x4000e28	      0xbe00000000	                              mov esi, 0	       483	ldcref.c	FUNCTION_7	FOR_4	IF_10	CALL_11
0x4000e2d	          0x4889ef	                            mov rdi, rbp	       483	ldcref.c	FUNCTION_7	FOR_4	IF_10	CALL_11
0x4000e30	      0xb800000000	                              mov eax, 0	       483	ldcref.c	FUNCTION_7	FOR_4	IF_10	CALL_11
0x4000e35	      0xe800000000	                          call 0x4000e3a	       483	ldcref.c	FUNCTION_7	FOR_4	IF_10	CALL_11
0x4000e3a	      0xbb00000000	                              mov ebx, 0	       484	ldcref.c	FUNCTION_7	FOR_4	IF_10
0x4000e3f	        0x4d8b2424	                    mov r12, qword [r12]	       474	ldcref.c	FUNCTION_7	FOR_4
0x4000e43	          0x4d85e4	                           test r12, r12	       474	ldcref.c	FUNCTION_7	FOR_4
0x4000e46	            0x75b9	                           jne 0x4000e01	       474	ldcref.c	FUNCTION_7	FOR_4
0x4000e48	            0x85db	                           test ebx, ebx	       488	ldcref.c	FUNCTION_7	CALL_12
0x4000e4a	            0x740f	                            je 0x4000e5b	       488	ldcref.c	FUNCTION_7	CALL_12
0x4000e4c	      0xbee8010000	                          mov esi, 0x1e8	       488	ldcref.c	FUNCTION_7	CALL_12
0x4000e51	      0xbf00000000	                              mov edi, 0	       488	ldcref.c	FUNCTION_7	CALL_12
0x4000e56	      0xe800000000	                          call 0x4000e5b	       488	ldcref.c	FUNCTION_7	CALL_12
0x4000e5b	        0x4983c608	                              add r14, 8	       397	ldcref.c	FUNCTION_6	FOR_1
0x4000e5f	          0x4d39f7	                            cmp r15, r14	       397	ldcref.c	FUNCTION_6	FOR_1
0x4000e62	     0xf87d2fdffff	                            ja 0x4000c3a	       397	ldcref.c	FUNCTION_6	FOR_1
0x4000e68	      0x488b442408	                mov rax, qword [rsp + 8]	       399	ldcref.c	FUNCTION_6
0x4000e6d	    0x644833042528	                xor rax, qword fs:[0x28]	       399	ldcref.c	FUNCTION_6
0x4000e76	            0x7405	                            je 0x4000e7d	       399	ldcref.c	FUNCTION_6
0x4000e78	      0xe800000000	                          call 0x4000e7d	       399	ldcref.c	FUNCTION_6
0x4000e7d	        0x4883c418	                           add rsp, 0x18	       399	ldcref.c	FUNCTION_6
0x4000e81	              0x5b	                                 pop rbx	       399	ldcref.c	FUNCTION_6
0x4000e82	              0x5d	                                 pop rbp	       399	ldcref.c	FUNCTION_6
0x4000e83	            0x415c	                                 pop r12	       399	ldcref.c	FUNCTION_6
0x4000e85	            0x415d	                                 pop r13	       399	ldcref.c	FUNCTION_6
0x4000e87	            0x415e	                                 pop r14	       399	ldcref.c	FUNCTION_6
0x4000e89	            0x415f	                                 pop r15	       399	ldcref.c	FUNCTION_6
0x4000e8b	              0xc3	                                     ret	       399	ldcref.c	FUNCTION_6
check_reloc_refs	CALL,22:DO,0:FOR,2:WHILE,0:ELSE,0:functions,0:SWITCH,0:IF,7	157
0x40003ec	            0x4157	                                push r15	       646	ldcref.c	FUNCTION_12
0x40003ee	            0x4156	                                push r14	       646	ldcref.c	FUNCTION_12
0x40003f0	            0x4155	                                push r13	       646	ldcref.c	FUNCTION_12
0x40003f2	            0x4154	                                push r12	       646	ldcref.c	FUNCTION_12
0x40003f4	              0x55	                                push rbp	       646	ldcref.c	FUNCTION_12
0x40003f5	              0x53	                                push rbx	       646	ldcref.c	FUNCTION_12
0x40003f6	        0x4883ec48	                           sub rsp, 0x48	       646	ldcref.c	FUNCTION_12
0x40003fa	      0x48897c2408	                mov qword [rsp + 8], rdi	       646	ldcref.c	FUNCTION_12
0x40003ff	          0x4989f7	                            mov r15, rsi	       646	ldcref.c	FUNCTION_12
0x4000402	          0x4989d6	                            mov r14, rdx	       646	ldcref.c	FUNCTION_12
0x4000405	        0x488b4668	            mov rax, qword [rsi + 0x68] 	       661	ldcref.c	FUNCTION_12	CALL_1
0x4000409	          0x488b18	                    mov rbx, qword [rax]	       661	ldcref.c	FUNCTION_12	CALL_1
0x400040c	        0x488b4208	                mov rax, qword [rdx + 8]	       663	ldcref.c	FUNCTION_12
0x4000410	        0x488b4068	            mov rax, qword [rax + 0x68] 	       664	ldcref.c	FUNCTION_12	CALL_2
0x4000414	          0x488b00	                    mov rax, qword [rax]	       664	ldcref.c	FUNCTION_12	CALL_2
0x4000417	      0x4889442410	             mov qword [rsp + 0x10], rax	       664	ldcref.c	FUNCTION_12	CALL_2
0x400041c	          0x4889c6	                            mov rsi, rax	       667	ldcref.c	FUNCTION_12	IF_1	CALL_3
0x400041f	          0x4889df	                            mov rdi, rbx	       667	ldcref.c	FUNCTION_12	IF_1	CALL_3
0x4000422	      0xe800000000	                          call 0x4000427	       667	ldcref.c	FUNCTION_12	IF_1	CALL_3
0x4000427	            0x85c0	                           test eax, eax	       667	ldcref.c	FUNCTION_12	IF_1	CALL_3
0x4000429	     0xf84fb010000	                            je 0x400062a	       667	ldcref.c	FUNCTION_12	IF_1	CALL_3
0x400042f	        0x498b4610	            mov rax, qword [r14 + 0x10] 	       670	ldcref.c	FUNCTION_12	FOR_1
0x4000433	        0x488b6808	                mov rbp, qword [rax + 8]	       670	ldcref.c	FUNCTION_12	FOR_1
0x4000437	          0x4885ed	                           test rbp, rbp	       670	ldcref.c	FUNCTION_12	FOR_1
0x400043a	     0xf84ea010000	                            je 0x400062a	       670	ldcref.c	FUNCTION_12	FOR_1
0x4000440	        0x488b7508	                mov rsi, qword [rbp + 8]	       671	ldcref.c	FUNCTION_12	FOR_1	IF_2	CALL_4
0x4000444	          0x4889df	                            mov rdi, rbx	       671	ldcref.c	FUNCTION_12	FOR_1	IF_2	CALL_4
0x4000447	      0xe800000000	                          call 0x400044c	       671	ldcref.c	FUNCTION_12	FOR_1	IF_2	CALL_4
0x400044c	            0x85c0	                           test eax, eax	       671	ldcref.c	FUNCTION_12	FOR_1	IF_2	CALL_4
0x400044e	            0x740e	                            je 0x400045e	       671	ldcref.c	FUNCTION_12	FOR_1	IF_2	CALL_4
0x4000450	        0x488b6d00	                    mov rbp, qword [rbp]	       670	ldcref.c	FUNCTION_12	FOR_1
0x4000454	          0x4885ed	                           test rbp, rbp	       670	ldcref.c	FUNCTION_12	FOR_1
0x4000457	            0x75e7	                           jne 0x4000440	       670	ldcref.c	FUNCTION_12	FOR_1
0x4000459	      0xe9cc010000	                           jmp 0x400062a	       670	ldcref.c	FUNCTION_12	FOR_1
0x400045e	          0x4885ed	                           test rbp, rbp	       674	ldcref.c	FUNCTION_12	IF_3
0x4000461	     0xf84c3010000	                            je 0x400062a	       674	ldcref.c	FUNCTION_12	IF_3
0x4000467	          0x498b06	                    mov rax, qword [r14]	       685	ldcref.c	FUNCTION_12
0x400046a	      0x4889442418	             mov qword [rsp + 0x18], rax	       685	ldcref.c	FUNCTION_12
0x400046f	        0x418b4620	            mov eax, dword [r14 + 0x20] 	       686	ldcref.c	FUNCTION_12
0x4000473	        0x89442424	             mov dword [rsp + 0x24], eax	       686	ldcref.c	FUNCTION_12
0x4000477	          0x4c89fe	                            mov rsi, r15	       688	ldcref.c	FUNCTION_12	CALL_5
0x400047a	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       688	ldcref.c	FUNCTION_12	CALL_5
0x400047f	      0xe800000000	                          call 0x4000484	       688	ldcref.c	FUNCTION_12	CALL_5
0x4000484	          0x4889c5	                            mov rbp, rax	       688	ldcref.c	FUNCTION_12	CALL_5
0x4000487	          0x4885c0	                           test rax, rax	       689	ldcref.c	FUNCTION_12	IF_4
0x400048a	            0x7926	                           jns 0x40004b2	       689	ldcref.c	FUNCTION_12	IF_4
0x400048c	      0xba05000000	                              mov edx, 5	       690	ldcref.c	FUNCTION_12	CALL_7
0x4000491	      0xbe00000000	                              mov esi, 0	       690	ldcref.c	FUNCTION_12	CALL_7
0x4000496	      0xbf00000000	                              mov edi, 0	       690	ldcref.c	FUNCTION_12	CALL_7
0x400049b	      0xe800000000	                          call 0x40004a0	       690	ldcref.c	FUNCTION_12	CALL_7
0x40004a0	      0x488b742408	                mov rsi, qword [rsp + 8]	       690	ldcref.c	FUNCTION_12	CALL_7
0x40004a5	          0x4889c7	                            mov rdi, rax	       690	ldcref.c	FUNCTION_12	CALL_7
0x40004a8	      0xb800000000	                              mov eax, 0	       690	ldcref.c	FUNCTION_12	CALL_7
0x40004ad	      0xe800000000	                          call 0x40004b2	       690	ldcref.c	FUNCTION_12	CALL_7
0x40004b2	          0x4885ed	                           test rbp, rbp	       691	ldcref.c	FUNCTION_12	IF_5
0x40004b5	     0xf846f010000	                            je 0x400062a	       691	ldcref.c	FUNCTION_12	IF_5
0x40004bb	          0x4889ef	                            mov rdi, rbp	       694	ldcref.c	FUNCTION_12	CALL_8
0x40004be	      0xe800000000	                          call 0x40004c3	       694	ldcref.c	FUNCTION_12	CALL_8
0x40004c3	      0x4889442428	             mov qword [rsp + 0x28], rax	       694	ldcref.c	FUNCTION_12	CALL_8
0x40004c8	        0x498b4e18	            mov rcx, qword [r14 + 0x18] 	       695	ldcref.c	FUNCTION_12	CALL_9
0x40004cc	          0x4889c2	                            mov rdx, rax	       695	ldcref.c	FUNCTION_12	CALL_9
0x40004cf	          0x4c89fe	                            mov rsi, r15	       695	ldcref.c	FUNCTION_12	CALL_9
0x40004d2	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       695	ldcref.c	FUNCTION_12	CALL_9
0x40004d7	      0xe800000000	                          call 0x40004dc	       695	ldcref.c	FUNCTION_12	CALL_9
0x40004dc	          0x4889c5	                            mov rbp, rax	       695	ldcref.c	FUNCTION_12	CALL_9
0x40004df	          0x4885c0	                           test rax, rax	       696	ldcref.c	FUNCTION_12	IF_6
0x40004e2	            0x7926	                           jns 0x400050a	       696	ldcref.c	FUNCTION_12	IF_6
0x40004e4	      0xba05000000	                              mov edx, 5	       697	ldcref.c	FUNCTION_12	CALL_11
0x40004e9	      0xbe00000000	                              mov esi, 0	       697	ldcref.c	FUNCTION_12	CALL_11
0x40004ee	      0xbf00000000	                              mov edi, 0	       697	ldcref.c	FUNCTION_12	CALL_11
0x40004f3	      0xe800000000	                          call 0x40004f8	       697	ldcref.c	FUNCTION_12	CALL_11
0x40004f8	      0x488b742408	                mov rsi, qword [rsp + 8]	       697	ldcref.c	FUNCTION_12	CALL_11
0x40004fd	          0x4889c7	                            mov rdi, rax	       697	ldcref.c	FUNCTION_12	CALL_11
0x4000500	      0xb800000000	                              mov eax, 0	       697	ldcref.c	FUNCTION_12	CALL_11
0x4000505	      0xe800000000	                          call 0x400050a	       697	ldcref.c	FUNCTION_12	CALL_11
0x400050a	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       700	ldcref.c	FUNCTION_12
0x400050f	        0x488d0ce8	                  lea rcx, [rax + rbp*8]	       700	ldcref.c	FUNCTION_12
0x4000513	          0x4839c8	                            cmp rax, rcx	       701	ldcref.c	FUNCTION_12	FOR_2
0x4000516	     0xf8304010000	                           jae 0x4000620	       701	ldcref.c	FUNCTION_12	FOR_2
0x400051c	          0x4c8b20	                    mov r12, qword [rax]	       701	ldcref.c	FUNCTION_12	FOR_2
0x400051f	          0x4d85e4	                           test r12, r12	       701	ldcref.c	FUNCTION_12	FOR_2
0x4000522	     0xf84f8000000	                            je 0x4000620	       701	ldcref.c	FUNCTION_12	FOR_2
0x4000528	          0x4889c5	                            mov rbp, rax	       701	ldcref.c	FUNCTION_12	FOR_2
0x400052b	      0x48895c2430	             mov qword [rsp + 0x30], rbx	       701	ldcref.c	FUNCTION_12	FOR_2
0x4000530	          0x4989cd	                            mov r13, rcx	       701	ldcref.c	FUNCTION_12	FOR_2
0x4000533	      0x4c897c2438	             mov qword [rsp + 0x38], r15	       701	ldcref.c	FUNCTION_12	FOR_2
0x4000538	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	       701	ldcref.c	FUNCTION_12	FOR_2
0x400053d	      0x4c89742418	             mov qword [rsp + 0x18], r14	       701	ldcref.c	FUNCTION_12	FOR_2
0x4000542	      0x448b742424	           mov r14d, dword [rsp + 0x24] 	       701	ldcref.c	FUNCTION_12	FOR_2
0x4000547	        0x498b0424	                    mov rax, qword [r12]	       705	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x400054b	          0x4885c0	                           test rax, rax	       705	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x400054e	     0xf84b6000000	                            je 0x400060a	       705	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x4000554	          0x488b18	                    mov rbx, qword [rax]	       706	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x4000557	          0x4885db	                           test rbx, rbx	       706	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x400055a	     0xf84aa000000	                            je 0x400060a	       706	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x4000560	          0x4585f6	                         test r14d, r14d	       707	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x4000563	            0x741d	                            je 0x4000582	       707	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x4000565	        0x488b4320	            mov rax, qword [rbx + 0x20] 	       708	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_13
0x4000569	    0x483d00000000	                              cmp rax, 0	       708	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_13
0x400056f	            0x7429	                            je 0x400059a	       708	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_13
0x4000571	        0xf6402110	           test byte [rax + 0x21], 0x10 	       709	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_15
0x4000575	            0x7523	                           jne 0x400059a	       709	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_15
0x4000577	        0xf6431882	           test byte [rbx + 0x18], 0x82 	       710	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x400057b	            0x751d	                           jne 0x400059a	       710	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x400057d	      0xe988000000	                           jmp 0x400060a	       710	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x4000582	    0xf74318010100	         test dword [rbx + 0x18], 0x101 	       713	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x4000589	            0x747f	                            je 0x400060a	       713	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x400058b	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       715	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_16
0x4000590	        0x488b4008	                mov rax, qword [rax + 8]	       715	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_16
0x4000594	        0x48394320	            cmp qword [rbx + 0x20], rax 	       715	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_16
0x4000598	            0x7570	                           jne 0x400060a	       715	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_16
0x400059a	          0x4d85ff	                           test r15, r15	       716	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x400059d	            0x7413	                            je 0x40005b2	       716	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x400059f	        0x488b7b08	                mov rdi, qword [rbx + 8]	       717	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_18
0x40005a3	          0x4c89fe	                            mov rsi, r15	       717	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_18
0x40005a6	      0xe800000000	                          call 0x40005ab	       717	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_18
0x40005ab	            0x85c0	                           test eax, eax	       716	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x40005ad	           0xf94c0	                                 sete al	       716	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x40005b0	            0xeb09	                           jmp 0x40005bb	       716	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x40005b2	          0x8b4318	            mov eax, dword [rbx + 0x18] 	       716	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x40005b5	          0xc1e808	                              shr eax, 8	       716	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x40005b8	          0x83e001	                              and eax, 1	       716	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x40005bb	            0x84c0	                             test al, al	       716	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x40005bd	            0x744b	                            je 0x400060a	       716	ldcref.c	FUNCTION_12	FOR_2	IF_7
0x40005bf	        0x488b5b08	                mov rbx, qword [rbx + 8]	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x40005c3	      0x4d8b642408	                mov r12, qword [r12 + 8]	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x40005c8	      0xba05000000	                              mov edx, 5	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x40005cd	      0xbe00000000	                              mov esi, 0	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x40005d2	      0xbf00000000	                              mov edi, 0	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x40005d7	      0xe800000000	                          call 0x40005dc	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x40005dc	        0x4883ec08	                              sub rsp, 8	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x40005e0	        0xff742418	                 push qword [rsp + 0x18]	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x40005e4	          0x4989d9	                             mov r9, rbx	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x40005e7	      0x4c8b442440	              mov r8, qword [rsp + 0x40]	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x40005ec	          0x4c89e1	                            mov rcx, r12	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x40005ef	      0x488b542448	            mov rdx, qword [rsp + 0x48] 	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x40005f4	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x40005f9	          0x4889c7	                            mov rdi, rax	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x40005fc	      0xb800000000	                              mov eax, 0	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x4000601	      0xe800000000	                          call 0x4000606	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x4000606	        0x4883c410	                           add rsp, 0x10	       724	ldcref.c	FUNCTION_12	FOR_2	IF_7	CALL_20
0x400060a	        0x4883c508	                              add rbp, 8	       701	ldcref.c	FUNCTION_12	FOR_2
0x400060e	          0x4939ed	                            cmp r13, rbp	       701	ldcref.c	FUNCTION_12	FOR_2
0x4000611	            0x760d	                           jbe 0x4000620	       701	ldcref.c	FUNCTION_12	FOR_2
0x4000613	        0x4c8b6500	                    mov r12, qword [rbp]	       701	ldcref.c	FUNCTION_12	FOR_2
0x4000617	          0x4d85e4	                           test r12, r12	       701	ldcref.c	FUNCTION_12	FOR_2
0x400061a	     0xf8527ffffff	                           jne 0x4000547	       701	ldcref.c	FUNCTION_12	FOR_2
0x4000620	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	       730	ldcref.c	FUNCTION_12	CALL_22
0x4000625	      0xe800000000	                          call 0x400062a	       730	ldcref.c	FUNCTION_12	CALL_22
0x400062a	        0x4883c448	                           add rsp, 0x48	       731	ldcref.c	FUNCTION_12
0x400062e	              0x5b	                                 pop rbx	       731	ldcref.c	FUNCTION_12
0x400062f	              0x5d	                                 pop rbp	       731	ldcref.c	FUNCTION_12
0x4000630	            0x415c	                                 pop r12	       731	ldcref.c	FUNCTION_12
0x4000632	            0x415d	                                 pop r13	       731	ldcref.c	FUNCTION_12
0x4000634	            0x415e	                                 pop r14	       731	ldcref.c	FUNCTION_12
0x4000636	            0x415f	                                 pop r15	       731	ldcref.c	FUNCTION_12
0x4000638	              0xc3	                                     ret	       731	ldcref.c	FUNCTION_12
handle_asneeded_cref	CALL,11:DO,0:FOR,9:WHILE,0:ELSE,1:functions,0:SWITCH,0:IF,6	193
0x4000776	            0x4155	                                push r13	       210	ldcref.c	ELSE_2	FUNCTION_3
0x4000778	            0x4154	                                push r12	       210	ldcref.c	ELSE_2	FUNCTION_3
0x400077a	              0x55	                                push rbp	       210	ldcref.c	ELSE_2	FUNCTION_3
0x400077b	              0x53	                                push rbx	       210	ldcref.c	ELSE_2	FUNCTION_3
0x400077c	        0x4883ec08	                              sub rsp, 8	       210	ldcref.c	ELSE_2	FUNCTION_3
0x4000780	      0xb801000000	                              mov eax, 1	       214	ldcref.c	ELSE_2	FUNCTION_3	IF_1
0x4000785	    0x833d00000000	               cmp dword [0x0400078c], 0	       213	ldcref.c	ELSE_2	FUNCTION_3	IF_1
0x400078c	     0xf841d030000	                            je 0x4000aaf	       213	ldcref.c	ELSE_2	FUNCTION_3	IF_1
0x4000792	            0x85f6	                           test esi, esi	       216	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x4000794	     0xf85d5010000	                           jne 0x400096f	       216	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x400079a	    0x448b15000000	           mov r10d, dword [0x040007a1] 	       220	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1
0x40007a1	          0x4585d2	                         test r10d, r10d	       220	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1
0x40007a4	     0xf848c000000	                            je 0x4000836	       220	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1
0x40007aa	    0x488b05000000	            mov rax, qword [0x040007b1] 	       226	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2
0x40007b1	    0x448b05000000	            mov r8d, dword [0x040007b8] 	       228	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2
0x40007b8	    0x488b3d000000	            mov rdi, qword [0x040007bf] 	       228	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2
0x40007bf	    0x488b15000000	            mov rdx, qword [0x040007c6] 	       228	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2
0x40007c6	          0x4989c1	                             mov r9, rax	       228	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2
0x40007c9	        0x418d4aff	                      lea ecx, [r10 - 1]	       228	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2
0x40007cd	      0x4c8d5cc808	              lea r11, [rax + rcx*8 + 8]	       228	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2
0x40007d2	      0xb800000000	                              mov eax, 0	       228	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2
0x40007d7	      0xb900000000	                              mov ecx, 0	       228	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2
0x40007dc	          0x498b31	                     mov rsi, qword [r9]	       226	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2
0x40007df	          0x4885f6	                           test rsi, rsi	       226	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2
0x40007e2	            0x7433	                            je 0x4000817	       226	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2
0x40007e4	          0x4c01c7	                             add rdi, r8	       228	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2
0x40007e7	        0x488b4620	            mov rax, qword [rsi + 0x20] 	       230	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2	FOR_3
0x40007eb	          0x4885c0	                           test rax, rax	       230	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2	FOR_3
0x40007ee	            0x741a	                            je 0x400080a	       230	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2	FOR_3
0x40007f0	        0x4883c218	                           add rdx, 0x18	       230	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2	FOR_3
0x40007f4	            0xeb03	                           jmp 0x40007f9	       230	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2	FOR_3
0x40007f6	          0x4889ca	                            mov rdx, rcx	       230	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2	FOR_3
0x40007f9	          0x488b00	                    mov rax, qword [rax]	       230	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2	FOR_3
0x40007fc	        0x488d4a18	                   lea rcx, [rdx + 0x18]	       230	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2	FOR_3
0x4000800	          0x4885c0	                           test rax, rax	       230	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2	FOR_3
0x4000803	            0x75f1	                           jne 0x40007f6	       230	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2	FOR_3
0x4000805	      0xb901000000	                              mov ecx, 1	       230	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2	FOR_3
0x400080a	          0x488b36	                    mov rsi, qword [rsi]	       226	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2
0x400080d	          0x4885f6	                           test rsi, rsi	       226	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2
0x4000810	            0x75d2	                           jne 0x40007e4	       226	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2
0x4000812	      0xb801000000	                              mov eax, 1	       226	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2
0x4000817	        0x4983c108	                               add r9, 8	       226	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1	FOR_2
0x400081b	          0x4d39cb	                             cmp r11, r9	       220	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1
0x400081e	            0x75bc	                           jne 0x40007dc	       220	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1
0x4000820	            0x84c9	                             test cl, cl	       220	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1
0x4000822	            0x7407	                            je 0x400082b	       220	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1
0x4000824	    0x488915000000	            mov qword [0x0400082b], rdx 	       220	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1
0x400082b	            0x84c0	                             test al, al	       220	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1
0x400082d	            0x7407	                            je 0x4000836	       220	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1
0x400082f	    0x48893d000000	            mov qword [0x04000836], rdi 	       220	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_1
0x4000836	          0x4489d0	                           mov eax, r10d	       235	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x4000839	        0x48c1e003	                              shl rax, 3	       235	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x400083d	    0x488905000000	            mov qword [0x04000844], rax 	       235	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x4000844	    0x488b3d000000	            mov rdi, qword [0x0400084b] 	       236	ldcref.c	ELSE_2	FUNCTION_3	IF_2	CALL_1
0x400084b	    0x48033d000000	             add rdi, qword [0x04000852]	       236	ldcref.c	ELSE_2	FUNCTION_3	IF_2	CALL_1
0x4000852	          0x4801c7	                            add rdi, rax	       236	ldcref.c	ELSE_2	FUNCTION_3	IF_2	CALL_1
0x4000855	      0xe800000000	                          call 0x400085a	       236	ldcref.c	ELSE_2	FUNCTION_3	IF_2	CALL_1
0x400085a	    0x488905000000	            mov qword [0x04000861], rax 	       236	ldcref.c	ELSE_2	FUNCTION_3	IF_2	CALL_1
0x4000861	      0xbe01000000	                              mov esi, 1	       238	ldcref.c	ELSE_2	FUNCTION_3	IF_2	CALL_2
0x4000866	      0xbf00000000	                              mov edi, 0	       238	ldcref.c	ELSE_2	FUNCTION_3	IF_2	CALL_2
0x400086b	      0xe800000000	                          call 0x4000870	       238	ldcref.c	ELSE_2	FUNCTION_3	IF_2	CALL_2
0x4000870	          0x4889c2	                            mov rdx, rax	       238	ldcref.c	ELSE_2	FUNCTION_3	IF_2	CALL_2
0x4000873	    0x488905000000	            mov qword [0x0400087a], rax 	       238	ldcref.c	ELSE_2	FUNCTION_3	IF_2	CALL_2
0x400087a	      0xb800000000	                              mov eax, 0	       240	ldcref.c	ELSE_2	FUNCTION_3	IF_2	IF_3
0x400087f	          0x4885d2	                           test rdx, rdx	       239	ldcref.c	ELSE_2	FUNCTION_3	IF_2	IF_3
0x4000882	     0xf8427020000	                            je 0x4000aaf	       239	ldcref.c	ELSE_2	FUNCTION_3	IF_2	IF_3
0x4000888	    0x488b1d000000	            mov rbx, qword [0x0400088f] 	       242	ldcref.c	ELSE_2	FUNCTION_3	IF_2	CALL_3
0x400088f	    0x4c8b25000000	            mov r12, qword [0x04000896] 	       242	ldcref.c	ELSE_2	FUNCTION_3	IF_2	CALL_3
0x4000896	          0x4889da	                            mov rdx, rbx	        53	string3.h	FUNCTION_30	CALL_3
0x4000899	    0x488b35000000	            mov rsi, qword [0x040008a0] 	        53	string3.h	FUNCTION_30	CALL_3
0x40008a0	          0x4c89e7	                            mov rdi, r12	        53	string3.h	FUNCTION_30	CALL_3
0x40008a3	      0xe800000000	                          call 0x40008a8	        53	string3.h	FUNCTION_30	CALL_3
0x40008a8	          0x4901dc	                            add r12, rbx	       243	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x40008ab	          0x4c89e3	                            mov rbx, r12	       244	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x40008ae	    0x48031d000000	             add rbx, qword [0x040008b5]	       244	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x40008b5	    0x488b05000000	            mov rax, qword [0x040008bc] 	       245	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x40008bc	    0x488905000000	            mov qword [0x040008c3], rax 	       245	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x40008c3	    0x8b0500000000	            mov eax, dword [0x040008c9] 	       246	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x40008c9	    0x890500000000	            mov dword [0x040008cf], eax 	       246	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x40008cf	    0x8b1500000000	            mov edx, dword [0x040008d5] 	       247	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x40008d5	    0x891500000000	            mov dword [0x040008db], edx 	       247	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x40008db	    0x488b15000000	            mov rdx, qword [0x040008e2] 	       248	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x40008e2	    0x488915000000	            mov qword [0x040008e9], rdx 	       248	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x40008e9	            0x85c0	                           test eax, eax	       250	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4
0x40008eb	     0xf84b9010000	                            je 0x4000aaa	       250	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4
0x40008f1	    0x41bd00000000	                             mov r13d, 0	       250	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4
0x40008f7	          0x4489e8	                           mov eax, r13d	       256	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5
0x40008fa	    0x488b15000000	            mov rdx, qword [0x04000901] 	       256	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5
0x4000901	        0x488b2cc2	            mov rbp, qword [rdx + rax*8]	       256	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5
0x4000905	          0x4885ed	                           test rbp, rbp	       256	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5
0x4000908	            0x744e	                            je 0x4000958	       256	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5
0x400090a	    0x8b1500000000	            mov edx, dword [0x04000910] 	        53	string3.h	FUNCTION_30	CALL_3
0x4000910	          0x4889ee	                            mov rsi, rbp	        53	string3.h	FUNCTION_30	CALL_3
0x4000913	          0x4c89e7	                            mov rdi, r12	        53	string3.h	FUNCTION_30	CALL_3
0x4000916	      0xe800000000	                          call 0x400091b	        53	string3.h	FUNCTION_30	CALL_3
0x400091b	    0x8b0500000000	            mov eax, dword [0x04000921] 	       259	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5
0x4000921	          0x4901c4	                            add r12, rax	       259	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5
0x4000924	        0x488b4520	            mov rax, qword [rbp + 0x20] 	       261	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5	FOR_6
0x4000928	          0x4885c0	                           test rax, rax	       261	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5	FOR_6
0x400092b	            0x7422	                            je 0x400094f	       261	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5	FOR_6
0x400092d	          0x488b10	                    mov rdx, qword [rax]	        53	string3.h	FUNCTION_30	CALL_3
0x4000930	          0x488913	                    mov qword [rbx], rdx	        53	string3.h	FUNCTION_30	CALL_3
0x4000933	        0x488b5008	                mov rdx, qword [rax + 8]	        53	string3.h	FUNCTION_30	CALL_3
0x4000937	        0x48895308	                mov qword [rbx + 8], rdx	        53	string3.h	FUNCTION_30	CALL_3
0x400093b	        0x488b5010	            mov rdx, qword [rax + 0x10] 	        53	string3.h	FUNCTION_30	CALL_3
0x400093f	        0x48895310	             mov qword [rbx + 0x10], rdx	        53	string3.h	FUNCTION_30	CALL_3
0x4000943	        0x4883c318	                           add rbx, 0x18	       264	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5	FOR_6
0x4000947	          0x488b00	                    mov rax, qword [rax]	       261	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5	FOR_6
0x400094a	          0x4885c0	                           test rax, rax	       261	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5	FOR_6
0x400094d	            0x75de	                           jne 0x400092d	       261	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5	FOR_6
0x400094f	        0x488b6d00	                    mov rbp, qword [rbp]	       256	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5
0x4000953	          0x4885ed	                           test rbp, rbp	       256	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5
0x4000956	            0x75b2	                           jne 0x400090a	       256	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4	FOR_5
0x4000958	        0x4183c501	                             add r13d, 1	       250	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4
0x400095c	    0x44392d000000	           cmp dword [0x04000963], r13d 	       250	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4
0x4000963	            0x7792	                            ja 0x40008f7	       250	ldcref.c	ELSE_2	FUNCTION_3	IF_2	FOR_4
0x4000965	      0xb801000000	                              mov eax, 1	       268	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x400096a	      0xe940010000	                           jmp 0x4000aaf	       268	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x400096f	          0x83fe01	                              cmp esi, 1	       271	ldcref.c	ELSE_2	FUNCTION_3	IF_4
0x4000972	     0xf850a010000	                           jne 0x4000a82	       271	ldcref.c	ELSE_2	FUNCTION_3	IF_4
0x4000978	    0x488b35000000	            mov rsi, qword [0x0400097f] 	       275	ldcref.c	ELSE_2	FUNCTION_3	IF_4	IF_5
0x400097f	          0x4885f6	                           test rsi, rsi	       275	ldcref.c	ELSE_2	FUNCTION_3	IF_4	IF_5
0x4000982	            0x751e	                           jne 0x40009a2	       275	ldcref.c	ELSE_2	FUNCTION_3	IF_4	IF_5
0x4000984	      0xbf00000000	                              mov edi, 0	       279	ldcref.c	ELSE_2	FUNCTION_3	IF_4	IF_5	CALL_6
0x4000989	      0xe800000000	                          call 0x400098e	       279	ldcref.c	ELSE_2	FUNCTION_3	IF_4	IF_5	CALL_6
0x400098e	    0xc70500000000	               mov dword [0x04000998], 0	       280	ldcref.c	ELSE_2	FUNCTION_3	IF_4	IF_5
0x4000998	      0xb801000000	                              mov eax, 1	       281	ldcref.c	ELSE_2	FUNCTION_3	IF_4	IF_5
0x400099d	      0xe90d010000	                           jmp 0x4000aaf	       281	ldcref.c	ELSE_2	FUNCTION_3	IF_4	IF_5
0x40009a2	    0x488b15000000	            mov rdx, qword [0x040009a9] 	       284	ldcref.c	ELSE_2	FUNCTION_3	IF_4
0x40009a9	        0x4c8d2416	                    lea r12, [rsi + rdx]	       284	ldcref.c	ELSE_2	FUNCTION_3	IF_4
0x40009ad	          0x4c89e3	                            mov rbx, r12	       285	ldcref.c	ELSE_2	FUNCTION_3	IF_4
0x40009b0	    0x48031d000000	             add rbx, qword [0x040009b7]	       285	ldcref.c	ELSE_2	FUNCTION_3	IF_4
0x40009b7	    0x488b3d000000	            mov rdi, qword [0x040009be] 	       286	ldcref.c	ELSE_2	FUNCTION_3	IF_4
0x40009be	    0x48893d000000	            mov qword [0x040009c5], rdi 	       286	ldcref.c	ELSE_2	FUNCTION_3	IF_4
0x40009c5	    0x8b0500000000	            mov eax, dword [0x040009cb] 	       287	ldcref.c	ELSE_2	FUNCTION_3	IF_4
0x40009cb	    0x890500000000	            mov dword [0x040009d1], eax 	       287	ldcref.c	ELSE_2	FUNCTION_3	IF_4
0x40009d1	    0x8b0500000000	            mov eax, dword [0x040009d7] 	       288	ldcref.c	ELSE_2	FUNCTION_3	IF_4
0x40009d7	    0x890500000000	            mov dword [0x040009dd], eax 	       288	ldcref.c	ELSE_2	FUNCTION_3	IF_4
0x40009dd	      0xe800000000	                          call 0x40009e2	        53	string3.h	FUNCTION_30	CALL_3
0x40009e2	    0x488b05000000	            mov rax, qword [0x040009e9] 	       290	ldcref.c	ELSE_2	FUNCTION_3	IF_4
0x40009e9	    0x488905000000	            mov qword [0x040009f0], rax 	       290	ldcref.c	ELSE_2	FUNCTION_3	IF_4
0x40009f0	    0x833d00000000	               cmp dword [0x040009f7], 0	       292	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7
0x40009f7	            0x7474	                            je 0x4000a6d	       292	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7
0x40009f9	    0x41bd00000000	                             mov r13d, 0	       292	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7
0x40009ff	          0x4489e8	                           mov eax, r13d	       298	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8
0x4000a02	    0x488b15000000	            mov rdx, qword [0x04000a09] 	       298	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8
0x4000a09	        0x488b2cc2	            mov rbp, qword [rdx + rax*8]	       298	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8
0x4000a0d	          0x4885ed	                           test rbp, rbp	       298	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8
0x4000a10	            0x744e	                            je 0x4000a60	       298	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8
0x4000a12	    0x8b1500000000	            mov edx, dword [0x04000a18] 	        53	string3.h	FUNCTION_30	CALL_3
0x4000a18	          0x4c89e6	                            mov rsi, r12	        53	string3.h	FUNCTION_30	CALL_3
0x4000a1b	          0x4889ef	                            mov rdi, rbp	        53	string3.h	FUNCTION_30	CALL_3
0x4000a1e	      0xe800000000	                          call 0x4000a23	        53	string3.h	FUNCTION_30	CALL_3
0x4000a23	    0x8b0500000000	            mov eax, dword [0x04000a29] 	       301	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8
0x4000a29	          0x4901c4	                            add r12, rax	       301	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8
0x4000a2c	        0x488b4520	            mov rax, qword [rbp + 0x20] 	       303	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8	FOR_9
0x4000a30	          0x4885c0	                           test rax, rax	       303	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8	FOR_9
0x4000a33	            0x7422	                            je 0x4000a57	       303	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8	FOR_9
0x4000a35	          0x488b13	                    mov rdx, qword [rbx]	        53	string3.h	FUNCTION_30	CALL_3
0x4000a38	          0x488910	                    mov qword [rax], rdx	        53	string3.h	FUNCTION_30	CALL_3
0x4000a3b	        0x488b4b08	                mov rcx, qword [rbx + 8]	        53	string3.h	FUNCTION_30	CALL_3
0x4000a3f	        0x48894808	                mov qword [rax + 8], rcx	        53	string3.h	FUNCTION_30	CALL_3
0x4000a43	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	        53	string3.h	FUNCTION_30	CALL_3
0x4000a47	        0x48894810	             mov qword [rax + 0x10], rcx	        53	string3.h	FUNCTION_30	CALL_3
0x4000a4b	        0x4883c318	                           add rbx, 0x18	       306	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8	FOR_9
0x4000a4f	          0x4889d0	                            mov rax, rdx	       303	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8	FOR_9
0x4000a52	          0x4885d2	                           test rdx, rdx	       303	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8	FOR_9
0x4000a55	            0x75de	                           jne 0x4000a35	       303	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8	FOR_9
0x4000a57	        0x488b6d00	                    mov rbp, qword [rbp]	       298	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8
0x4000a5b	          0x4885ed	                           test rbp, rbp	       298	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8
0x4000a5e	            0x75b2	                           jne 0x4000a12	       298	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7	FOR_8
0x4000a60	        0x4183c501	                             add r13d, 1	       292	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7
0x4000a64	    0x44392d000000	           cmp dword [0x04000a6b], r13d 	       292	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7
0x4000a6b	            0x7792	                            ja 0x40009ff	       292	ldcref.c	ELSE_2	FUNCTION_3	IF_4	FOR_7
0x4000a6d	    0x488b35000000	            mov rsi, qword [0x04000a74] 	       311	ldcref.c	ELSE_2	FUNCTION_3	IF_4	CALL_10
0x4000a74	    0x488b3d000000	            mov rdi, qword [0x04000a7b] 	       311	ldcref.c	ELSE_2	FUNCTION_3	IF_4	CALL_10
0x4000a7b	      0xe800000000	                          call 0x4000a80	       311	ldcref.c	ELSE_2	FUNCTION_3	IF_4	CALL_10
0x4000a80	            0xeb0a	                           jmp 0x4000a8c	       311	ldcref.c	ELSE_2	FUNCTION_3	IF_4	CALL_10
0x4000a82	      0xb800000000	                              mov eax, 0	       315	ldcref.c	ELSE_2	FUNCTION_3	ELSE_1	IF_6
0x4000a87	          0x83fe02	                              cmp esi, 2	       314	ldcref.c	ELSE_2	FUNCTION_3	ELSE_1	IF_6
0x4000a8a	            0x7523	                           jne 0x4000aaf	       314	ldcref.c	ELSE_2	FUNCTION_3	ELSE_1	IF_6
0x4000a8c	    0x488b3d000000	            mov rdi, qword [0x04000a93] 	       317	ldcref.c	ELSE_2	FUNCTION_3	CALL_11
0x4000a93	      0xe800000000	                          call 0x4000a98	       317	ldcref.c	ELSE_2	FUNCTION_3	CALL_11
0x4000a98	    0x48c705000000	               mov qword [0x04000aa3], 0	       318	ldcref.c	ELSE_2	FUNCTION_3
0x4000aa3	      0xb801000000	                              mov eax, 1	       319	ldcref.c	ELSE_2	FUNCTION_3
0x4000aa8	            0xeb05	                           jmp 0x4000aaf	       319	ldcref.c	ELSE_2	FUNCTION_3
0x4000aaa	      0xb801000000	                              mov eax, 1	       268	ldcref.c	ELSE_2	FUNCTION_3	IF_2
0x4000aaf	        0x4883c408	                              add rsp, 8	       320	ldcref.c	ELSE_2	FUNCTION_3
0x4000ab3	              0x5b	                                 pop rbx	       320	ldcref.c	ELSE_2	FUNCTION_3
0x4000ab4	              0x5d	                                 pop rbp	       320	ldcref.c	ELSE_2	FUNCTION_3
0x4000ab5	            0x415c	                                 pop r12	       320	ldcref.c	ELSE_2	FUNCTION_3
0x4000ab7	            0x415d	                                 pop r13	       320	ldcref.c	ELSE_2	FUNCTION_3
0x4000ab9	              0xc3	                                     ret	       320	ldcref.c	ELSE_2	FUNCTION_3
check_local_sym_xref	CALL,6:DO,0:FOR,3:WHILE,0:ELSE,0:functions,0:SWITCH,0:IF,7	79
0x40001e0	            0x4157	                                push r15	       508	ldcref.c	FUNCTION_9
0x40001e2	            0x4156	                                push r14	       508	ldcref.c	FUNCTION_9
0x40001e4	            0x4155	                                push r13	       508	ldcref.c	FUNCTION_9
0x40001e6	            0x4154	                                push r12	       508	ldcref.c	FUNCTION_9
0x40001e8	              0x55	                                push rbp	       508	ldcref.c	FUNCTION_9
0x40001e9	              0x53	                                push rbx	       508	ldcref.c	FUNCTION_9
0x40001ea	        0x4883ec18	                           sub rsp, 0x18	       508	ldcref.c	FUNCTION_9
0x40001ee	        0x4c8b7720	            mov r14, qword [rdi + 0x20] 	       512	ldcref.c	FUNCTION_9
0x40001f2	          0x4d85f6	                           test r14, r14	       513	ldcref.c	FUNCTION_9	IF_1
0x40001f5	     0xf84e3000000	                            je 0x40002de	       513	ldcref.c	FUNCTION_9	IF_1
0x40001fb	          0x4c89f7	                            mov rdi, r14	       516	ldcref.c	FUNCTION_9	IF_2	CALL_1
0x40001fe	      0xe800000000	                          call 0x4000203	       516	ldcref.c	FUNCTION_9	IF_2	CALL_1
0x4000203	            0x85c0	                           test eax, eax	       516	ldcref.c	FUNCTION_9	IF_2	CALL_1
0x4000205	            0x7524	                           jne 0x400022b	       516	ldcref.c	FUNCTION_9	IF_2	CALL_1
0x4000207	      0xba05000000	                              mov edx, 5	       517	ldcref.c	FUNCTION_9	CALL_3
0x400020c	      0xbe00000000	                              mov esi, 0	       517	ldcref.c	FUNCTION_9	CALL_3
0x4000211	      0xbf00000000	                              mov edi, 0	       517	ldcref.c	FUNCTION_9	CALL_3
0x4000216	      0xe800000000	                          call 0x400021b	       517	ldcref.c	FUNCTION_9	CALL_3
0x400021b	          0x4c89f6	                            mov rsi, r14	       517	ldcref.c	FUNCTION_9	CALL_3
0x400021e	          0x4889c7	                            mov rdi, rax	       517	ldcref.c	FUNCTION_9	CALL_3
0x4000221	      0xb800000000	                              mov eax, 0	       517	ldcref.c	FUNCTION_9	CALL_3
0x4000226	      0xe800000000	                          call 0x400022b	       517	ldcref.c	FUNCTION_9	CALL_3
0x400022b	    0x498b86b00000	            mov rax, qword [r14 + 0xb0] 	       519	ldcref.c	FUNCTION_9	FOR_1	CALL_4
0x4000232	      0x4889442408	                mov qword [rsp + 8], rax	       519	ldcref.c	FUNCTION_9	FOR_1	CALL_4
0x4000237	          0x4c8b28	                    mov r13, qword [rax]	       519	ldcref.c	FUNCTION_9	FOR_1	CALL_4
0x400023a	          0x4d85ed	                           test r13, r13	       519	ldcref.c	FUNCTION_9	FOR_1	CALL_4
0x400023d	     0xf849b000000	                            je 0x40002de	       519	ldcref.c	FUNCTION_9	FOR_1	CALL_4
0x4000243	        0x418b4518	            mov eax, dword [r13 + 0x18] 	       522	ldcref.c	FUNCTION_9	FOR_1	IF_3
0x4000247	      0xa902700000	                        test eax, 0x7002	       522	ldcref.c	FUNCTION_9	FOR_1	IF_3
0x400024c	            0x7579	                           jne 0x40002c7	       522	ldcref.c	FUNCTION_9	FOR_1	IF_3
0x400024e	      0xa901010000	                         test eax, 0x101	       524	ldcref.c	FUNCTION_9	FOR_1	IF_4
0x4000253	            0x7472	                            je 0x40002c7	       524	ldcref.c	FUNCTION_9	FOR_1	IF_4
0x4000255	        0x498b5520	            mov rdx, qword [r13 + 0x20] 	       525	ldcref.c	FUNCTION_9	FOR_1	IF_4
0x4000259	        0x488b5268	            mov rdx, qword [rdx + 0x68] 	       525	ldcref.c	FUNCTION_9	FOR_1	IF_4
0x400025d	          0x4885d2	                           test rdx, rdx	       525	ldcref.c	FUNCTION_9	FOR_1	IF_4
0x4000260	            0x7465	                            je 0x40002c7	       525	ldcref.c	FUNCTION_9	FOR_1	IF_4
0x4000262	          0x4c8b22	                    mov r12, qword [rdx]	       531	ldcref.c	FUNCTION_9	FOR_1	IF_4
0x4000265	    0x41bf00000000	                             mov r15d, 0	       532	ldcref.c	FUNCTION_9	FOR_1	IF_4
0x400026b	          0xf6c401	                              test ah, 1	       533	ldcref.c	FUNCTION_9	FOR_1	IF_4	IF_5
0x400026e	            0x7504	                           jne 0x4000274	       533	ldcref.c	FUNCTION_9	FOR_1	IF_4	IF_5
0x4000270	        0x4d8b7d08	                mov r15, qword [r13 + 8]	       534	ldcref.c	FUNCTION_9	FOR_1	IF_4	IF_5
0x4000274	    0x488b2d000000	            mov rbp, qword [0x0400027b] 	       535	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2
0x400027b	          0x4885ed	                           test rbp, rbp	       535	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2
0x400027e	            0x7447	                            je 0x40002c7	       535	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2
0x4000280	        0x488b5d08	                mov rbx, qword [rbp + 8]	       536	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3
0x4000284	          0x4885db	                           test rbx, rbx	       536	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3
0x4000287	            0x7435	                            je 0x40002be	       536	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3
0x4000289	        0x488b7b08	                mov rdi, qword [rbx + 8]	       538	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3	IF_6	CALL_5
0x400028d	          0x4c89e6	                            mov rsi, r12	       538	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3	IF_6	CALL_5
0x4000290	      0xe800000000	                          call 0x4000295	       538	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3	IF_6	CALL_5
0x4000295	            0x85c0	                           test eax, eax	       538	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3	IF_6	CALL_5
0x4000297	            0x7517	                           jne 0x40002b0	       538	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3	IF_6	CALL_5
0x4000299	        0x498b5520	            mov rdx, qword [r13 + 0x20] 	       539	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3	CALL_6
0x400029d	          0x4989e8	                             mov r8, rbp	       539	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3	CALL_6
0x40002a0	          0x4c89f1	                            mov rcx, r14	       539	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3	CALL_6
0x40002a3	      0xbe00000000	                              mov esi, 0	       539	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3	CALL_6
0x40002a8	          0x4c89ff	                            mov rdi, r15	       539	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3	CALL_6
0x40002ab	      0xe884feffff	                     call sym.check_refs	       539	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3	CALL_6
0x40002b0	        0x837d1000	               cmp dword [rbp + 0x10], 0	       542	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3	IF_7
0x40002b4	            0x7508	                           jne 0x40002be	       542	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3	IF_7
0x40002b6	          0x488b1b	                    mov rbx, qword [rbx]	       536	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3
0x40002b9	          0x4885db	                           test rbx, rbx	       536	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3
0x40002bc	            0x75cb	                           jne 0x4000289	       536	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2	FOR_3
0x40002be	        0x488b6d00	                    mov rbp, qword [rbp]	       535	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2
0x40002c2	          0x4885ed	                           test rbp, rbp	       535	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2
0x40002c5	            0x75b9	                           jne 0x4000280	       535	ldcref.c	FUNCTION_9	FOR_1	IF_4	FOR_2
0x40002c7	    0x488344240808	                  add qword [rsp + 8], 8	       519	ldcref.c	FUNCTION_9	FOR_1	CALL_4
0x40002cd	      0x488b442408	                mov rax, qword [rsp + 8]	       519	ldcref.c	FUNCTION_9	FOR_1	CALL_4
0x40002d2	          0x4c8b28	                    mov r13, qword [rax]	       519	ldcref.c	FUNCTION_9	FOR_1	CALL_4
0x40002d5	          0x4d85ed	                           test r13, r13	       519	ldcref.c	FUNCTION_9	FOR_1	CALL_4
0x40002d8	     0xf8565ffffff	                           jne 0x4000243	       519	ldcref.c	FUNCTION_9	FOR_1	CALL_4
0x40002de	        0x4883c418	                           add rsp, 0x18	       547	ldcref.c	FUNCTION_9
0x40002e2	              0x5b	                                 pop rbx	       547	ldcref.c	FUNCTION_9
0x40002e3	              0x5d	                                 pop rbp	       547	ldcref.c	FUNCTION_9
0x40002e4	            0x415c	                                 pop r12	       547	ldcref.c	FUNCTION_9
0x40002e6	            0x415d	                                 pop r13	       547	ldcref.c	FUNCTION_9
0x40002e8	            0x415e	                                 pop r14	       547	ldcref.c	FUNCTION_9
0x40002ea	            0x415f	                                 pop r15	       547	ldcref.c	FUNCTION_9
0x40002ec	              0xc3	                                     ret	       547	ldcref.c	FUNCTION_9
cref_sort_array	CALL,2:DO,0:FOR,0:WHILE,0:ELSE,1:functions,0:SWITCH,0:IF,1	16
0x400009a	        0x4883ec08	                              sub rsp, 8	       348	ldcref.c	FUNCTION_5
0x400009e	    0x833d00000000	               cmp dword [0x040000a5], 0	       354	ldcref.c	FUNCTION_5	IF_1
0x40000a5	            0x7415	                            je 0x40000bc	       354	ldcref.c	FUNCTION_5	IF_1
0x40000a7	          0x488b06	                    mov rax, qword [rsi]	       355	ldcref.c	FUNCTION_5	CALL_1
0x40000aa	        0x488b7018	            mov rsi, qword [rax + 0x18] 	       355	ldcref.c	FUNCTION_5	CALL_1
0x40000ae	          0x488b07	                    mov rax, qword [rdi]	       355	ldcref.c	FUNCTION_5	CALL_1
0x40000b1	        0x488b7818	            mov rdi, qword [rax + 0x18] 	       355	ldcref.c	FUNCTION_5	CALL_1
0x40000b5	      0xe800000000	                          call 0x40000ba	       355	ldcref.c	FUNCTION_5	CALL_1
0x40000ba	            0xeb13	                           jmp 0x40000cf	       355	ldcref.c	FUNCTION_5	CALL_1
0x40000bc	          0x488b06	                    mov rax, qword [rsi]	       357	ldcref.c	FUNCTION_5	CALL_2
0x40000bf	        0x488b7008	                mov rsi, qword [rax + 8]	       357	ldcref.c	FUNCTION_5	CALL_2
0x40000c3	          0x488b07	                    mov rax, qword [rdi]	       357	ldcref.c	FUNCTION_5	CALL_2
0x40000c6	        0x488b7808	                mov rdi, qword [rax + 8]	       357	ldcref.c	FUNCTION_5	CALL_2
0x40000ca	      0xe800000000	                          call 0x40000cf	       357	ldcref.c	FUNCTION_5	CALL_2
0x40000cf	        0x4883c408	                              add rsp, 8	       358	ldcref.c	FUNCTION_5
0x40000d3	              0xc3	                                     ret	       358	ldcref.c	FUNCTION_5
cref_hash_newfunc	CALL,2:DO,0:FOR,0:WHILE,0:ELSE,0:functions,0:SWITCH,0:IF,3	26
0x4000040	              0x55	                                push rbp	       126	ldcref.c	FUNCTION_1
0x4000041	              0x53	                                push rbx	       126	ldcref.c	FUNCTION_1
0x4000042	        0x4883ec08	                              sub rsp, 8	       126	ldcref.c	FUNCTION_1
0x4000046	          0x4889f3	                            mov rbx, rsi	       126	ldcref.c	FUNCTION_1
0x4000049	          0x4889d5	                            mov rbp, rdx	       126	ldcref.c	FUNCTION_1
0x400004c	          0x4885ff	                           test rdi, rdi	       131	ldcref.c	FUNCTION_1	IF_1
0x400004f	            0x751a	                           jne 0x400006b	       131	ldcref.c	FUNCTION_1	IF_1
0x4000051	      0xbe28000000	                           mov esi, 0x28	       132	ldcref.c	FUNCTION_1	IF_1
0x4000056	          0x4889df	                            mov rdi, rbx	       132	ldcref.c	FUNCTION_1	IF_1
0x4000059	      0xe800000000	                          call 0x400005e	       132	ldcref.c	FUNCTION_1	IF_1
0x400005e	          0x4889c7	                            mov rdi, rax	       132	ldcref.c	FUNCTION_1	IF_1
0x4000061	      0xb800000000	                              mov eax, 0	       135	ldcref.c	FUNCTION_1	IF_2
0x4000066	          0x4885ff	                           test rdi, rdi	       134	ldcref.c	FUNCTION_1	IF_2
0x4000069	            0x7428	                            je 0x4000093	       134	ldcref.c	FUNCTION_1	IF_2
0x400006b	          0x4889ea	                            mov rdx, rbp	       138	ldcref.c	FUNCTION_1
0x400006e	          0x4889de	                            mov rsi, rbx	       138	ldcref.c	FUNCTION_1
0x4000071	      0xe800000000	                          call 0x4000076	       138	ldcref.c	FUNCTION_1
0x4000076	          0x4885c0	                           test rax, rax	       140	ldcref.c	FUNCTION_1	IF_3
0x4000079	            0x7418	                            je 0x4000093	       140	ldcref.c	FUNCTION_1	IF_3
0x400007b	    0x48c740180000	               mov qword [rax + 0x18], 0	       143	ldcref.c	FUNCTION_1	IF_3
0x4000083	    0x48c740200000	               mov qword [rax + 0x20], 0	       144	ldcref.c	FUNCTION_1	IF_3
0x400008b	    0x488305000000	               add qword [0x04000093], 1	       148	ldcref.c	FUNCTION_1	IF_3
0x4000093	        0x4883c408	                              add rsp, 8	       152	ldcref.c	FUNCTION_1
0x4000097	              0x5b	                                 pop rbx	       152	ldcref.c	FUNCTION_1
0x4000098	              0x5d	                                 pop rbp	       152	ldcref.c	FUNCTION_1
0x4000099	              0xc3	                                     ret	       152	ldcref.c	FUNCTION_1
