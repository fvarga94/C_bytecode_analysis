eh_frame_estimate_size_before_relax	SWITCH,0:functions,0:IF,3:DO,0:ELSE,3:WHILE,0:CALL,2:FOR,0	36
0x40006ae	              0x55	                                push rbp	       472	ehopt.c	FUNCTION_3
0x40006af	              0x53	                                push rbx	       472	ehopt.c	FUNCTION_3
0x40006b0	        0x4883ec08	                              sub rsp, 8	       472	ehopt.c	FUNCTION_3
0x40006b4	          0x4889fd	                            mov rbp, rdi	       472	ehopt.c	FUNCTION_3
0x40006b7	          0x8b5f60	            mov ebx, dword [rdi + 0x60] 	       474	ehopt.c	FUNCTION_3
0x40006ba	          0xc1eb03	                              shr ebx, 3	       474	ehopt.c	FUNCTION_3
0x40006bd	        0x488b7f28	            mov rdi, qword [rdi + 0x28] 	       477	ehopt.c	FUNCTION_3	CALL_1
0x40006c1	      0xe800000000	                          call 0x40006c6	       477	ehopt.c	FUNCTION_3	CALL_1
0x40006c6	            0x85db	                           test ebx, ebx	       479	ehopt.c	FUNCTION_3	CALL_2
0x40006c8	            0x7f14	                            jg 0x40006de	       479	ehopt.c	FUNCTION_3	CALL_2
0x40006ca	      0xba00000000	                              mov edx, 0	       479	ehopt.c	FUNCTION_3	CALL_2
0x40006cf	      0xbedf010000	                          mov esi, 0x1df	       479	ehopt.c	FUNCTION_3	CALL_2
0x40006d4	      0xbf00000000	                              mov edi, 0	       479	ehopt.c	FUNCTION_3	CALL_2
0x40006d9	      0xe800000000	                          call 0x40006de	       479	ehopt.c	FUNCTION_3	CALL_2
0x40006de	          0x4863db	                         movsxd rbx, ebx	       480	ehopt.c	FUNCTION_3
0x40006e1	            0x4899	                                     cqo	       480	ehopt.c	FUNCTION_3
0x40006e3	          0x48f7fb	                                idiv rbx	       480	ehopt.c	FUNCTION_3
0x40006e6	          0x4889c1	                            mov rcx, rax	       480	ehopt.c	FUNCTION_3
0x40006e9	      0xb800000000	                              mov eax, 0	       482	ehopt.c	FUNCTION_3	IF_1
0x40006ee	        0x4883f93f	                           cmp rcx, 0x3f	       481	ehopt.c	FUNCTION_3	IF_1
0x40006f2	            0x7e1f	                           jle 0x4000713	       481	ehopt.c	FUNCTION_3	IF_1
0x40006f4	      0xb801000000	                              mov eax, 1	       484	ehopt.c	FUNCTION_3	ELSE_1	IF_2
0x40006f9	    0x4881f9ff0000	                           cmp rcx, 0xff	       483	ehopt.c	FUNCTION_3	ELSE_1	IF_2
0x4000700	            0x7e11	                           jle 0x4000713	       483	ehopt.c	FUNCTION_3	ELSE_1	IF_2
0x4000702	    0x4881f9000001	                        cmp rcx, 0x10000	       488	ehopt.c	FUNCTION_3	ELSE_3
0x4000709	           0xf9dc0	                                setge al	       488	ehopt.c	FUNCTION_3	ELSE_3
0x400070c	           0xfb6c0	                           movzx eax, al	       488	ehopt.c	FUNCTION_3	ELSE_3
0x400070f	        0x8d440002	                lea eax, [rax + rax + 2]	       488	ehopt.c	FUNCTION_3	ELSE_3
0x4000713	          0x8b5560	            mov edx, dword [rbp + 0x60] 	       490	ehopt.c	FUNCTION_3
0x4000716	          0x83e2f8	                     and edx, 0xfffffff8	       490	ehopt.c	FUNCTION_3
0x4000719	             0x9c2	                             or edx, eax	       490	ehopt.c	FUNCTION_3
0x400071b	          0x895560	            mov dword [rbp + 0x60], edx 	       490	ehopt.c	FUNCTION_3
0x400071e	        0x4883c408	                              add rsp, 8	       493	ehopt.c	FUNCTION_3
0x4000722	              0x5b	                                 pop rbx	       493	ehopt.c	FUNCTION_3
0x4000723	              0x5d	                                 pop rbp	       493	ehopt.c	FUNCTION_3
0x4000724	              0xc3	                                     ret	       493	ehopt.c	FUNCTION_3
eh_frame_convert_frag	SWITCH,1:functions,0:IF,0:DO,0:ELSE,0:WHILE,0:CALL,7:FOR,0	78
0x4000735	            0x4154	                                push r12	       515	ehopt.c	FUNCTION_5
0x4000737	              0x55	                                push rbp	       515	ehopt.c	FUNCTION_5
0x4000738	              0x53	                                push rbx	       515	ehopt.c	FUNCTION_5
0x4000739	          0x4889fb	                            mov rbx, rdi	       515	ehopt.c	FUNCTION_5
0x400073c	        0x4c8b6730	            mov r12, qword [rdi + 0x30] 	       520	ehopt.c	FUNCTION_5
0x4000740	        0x488b6f20	            mov rbp, qword [rdi + 0x20] 	       521	ehopt.c	FUNCTION_5
0x4000744	        0x488b7f28	            mov rdi, qword [rdi + 0x28] 	       523	ehopt.c	FUNCTION_5	CALL_1
0x4000748	      0xe800000000	                          call 0x400074d	       523	ehopt.c	FUNCTION_5	CALL_1
0x400074d	          0x8b4b60	            mov ecx, dword [rbx + 0x60] 	       525	ehopt.c	FUNCTION_5
0x4000750	            0x89cf	                            mov edi, ecx	       525	ehopt.c	FUNCTION_5
0x4000752	          0xc1ef03	                              shr edi, 3	       525	ehopt.c	FUNCTION_5
0x4000755	            0x85ff	                           test edi, edi	       526	ehopt.c	FUNCTION_5	CALL_2
0x4000757	            0x7f14	                            jg 0x400076d	       526	ehopt.c	FUNCTION_5	CALL_2
0x4000759	      0xba00000000	                              mov edx, 0	       526	ehopt.c	FUNCTION_5	CALL_2
0x400075e	      0xbe0e020000	                          mov esi, 0x20e	       526	ehopt.c	FUNCTION_5	CALL_2
0x4000763	      0xbf00000000	                              mov edi, 0	       526	ehopt.c	FUNCTION_5	CALL_2
0x4000768	      0xe800000000	                          call 0x400076d	       526	ehopt.c	FUNCTION_5	CALL_2
0x400076d	          0x4863ff	                         movsxd rdi, edi	       527	ehopt.c	FUNCTION_5
0x4000770	            0x4899	                                     cqo	       527	ehopt.c	FUNCTION_5
0x4000772	          0x48f7ff	                                idiv rdi	       527	ehopt.c	FUNCTION_5
0x4000775	          0x83e107	                              and ecx, 7	       528	ehopt.c	FUNCTION_5	SWITCH_1
0x4000778	          0x83f901	                              cmp ecx, 1	       528	ehopt.c	FUNCTION_5	SWITCH_1
0x400077b	            0x7439	                            je 0x40007b6	       528	ehopt.c	FUNCTION_5	SWITCH_1
0x400077d	          0x83f901	                              cmp ecx, 1	       528	ehopt.c	FUNCTION_5	SWITCH_1
0x4000780	            0x720a	                            jb 0x400078c	       528	ehopt.c	FUNCTION_5	SWITCH_1
0x4000782	          0x83f902	                              cmp ecx, 2	       528	ehopt.c	FUNCTION_5	SWITCH_1
0x4000785	            0x745e	                            je 0x40007e5	       528	ehopt.c	FUNCTION_5	SWITCH_1
0x4000787	      0xe996000000	                           jmp 0x4000822	       528	ehopt.c	FUNCTION_5	SWITCH_1
0x400078c	        0x4883f83f	                           cmp rax, 0x3f	       531	ehopt.c	FUNCTION_5	SWITCH_1	CALL_3
0x4000790	            0x7e14	                           jle 0x40007a6	       531	ehopt.c	FUNCTION_5	SWITCH_1	CALL_3
0x4000792	      0xba00000000	                              mov edx, 0	       531	ehopt.c	FUNCTION_5	SWITCH_1	CALL_3
0x4000797	      0xbe13020000	                          mov esi, 0x213	       531	ehopt.c	FUNCTION_5	SWITCH_1	CALL_3
0x400079c	      0xbf00000000	                              mov edi, 0	       531	ehopt.c	FUNCTION_5	SWITCH_1	CALL_3
0x40007a1	      0xe800000000	                          call 0x40007a6	       531	ehopt.c	FUNCTION_5	SWITCH_1	CALL_3
0x40007a6	          0x4863ed	                         movsxd rbp, ebp	       532	ehopt.c	FUNCTION_5	SWITCH_1
0x40007a9	          0x83c840	                            or eax, 0x40	       532	ehopt.c	FUNCTION_5	SWITCH_1
0x40007ac	      0x4188442c7c	         mov byte [r12 + rbp + 0x7c], al	       532	ehopt.c	FUNCTION_5	SWITCH_1
0x40007b1	      0xe982000000	                           jmp 0x4000838	       533	ehopt.c	FUNCTION_5	SWITCH_1
0x40007b6	    0x483dff000000	                           cmp rax, 0xff	       536	ehopt.c	FUNCTION_5	SWITCH_1	CALL_4
0x40007bc	            0x7e14	                           jle 0x40007d2	       536	ehopt.c	FUNCTION_5	SWITCH_1	CALL_4
0x40007be	      0xba00000000	                              mov edx, 0	       536	ehopt.c	FUNCTION_5	SWITCH_1	CALL_4
0x40007c3	      0xbe18020000	                          mov esi, 0x218	       536	ehopt.c	FUNCTION_5	SWITCH_1	CALL_4
0x40007c8	      0xbf00000000	                              mov edi, 0	       536	ehopt.c	FUNCTION_5	SWITCH_1	CALL_4
0x40007cd	      0xe800000000	                          call 0x40007d2	       536	ehopt.c	FUNCTION_5	SWITCH_1	CALL_4
0x40007d2	          0x4863ed	                         movsxd rbp, ebp	       537	ehopt.c	FUNCTION_5	SWITCH_1
0x40007d5	    0x41c6442c7c02	          mov byte [r12 + rbp + 0x7c], 2	       537	ehopt.c	FUNCTION_5	SWITCH_1
0x40007db	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       538	ehopt.c	FUNCTION_5	SWITCH_1
0x40007df	        0x8844137c	         mov byte [rbx + rdx + 0x7c], al	       538	ehopt.c	FUNCTION_5	SWITCH_1
0x40007e3	            0xeb53	                           jmp 0x4000838	       539	ehopt.c	FUNCTION_5	SWITCH_1
0x40007e5	    0x483dffff0000	                         cmp rax, 0xffff	       542	ehopt.c	FUNCTION_5	SWITCH_1	CALL_5
0x40007eb	            0x7e14	                           jle 0x4000801	       542	ehopt.c	FUNCTION_5	SWITCH_1	CALL_5
0x40007ed	      0xba00000000	                              mov edx, 0	       542	ehopt.c	FUNCTION_5	SWITCH_1	CALL_5
0x40007f2	      0xbe1e020000	                          mov esi, 0x21e	       542	ehopt.c	FUNCTION_5	SWITCH_1	CALL_5
0x40007f7	      0xbf00000000	                              mov edi, 0	       542	ehopt.c	FUNCTION_5	SWITCH_1	CALL_5
0x40007fc	      0xe800000000	                          call 0x4000801	       542	ehopt.c	FUNCTION_5	SWITCH_1	CALL_5
0x4000801	          0x4863ed	                         movsxd rbp, ebp	       543	ehopt.c	FUNCTION_5	SWITCH_1
0x4000804	    0x41c6442c7c03	          mov byte [r12 + rbp + 0x7c], 3	       543	ehopt.c	FUNCTION_5	SWITCH_1
0x400080a	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       544	ehopt.c	FUNCTION_5	SWITCH_1	CALL_6
0x400080e	      0x488d7c137c	            lea rdi, [rbx + rdx + 0x7c] 	       544	ehopt.c	FUNCTION_5	SWITCH_1	CALL_6
0x4000813	      0xba02000000	                              mov edx, 2	       544	ehopt.c	FUNCTION_5	SWITCH_1	CALL_6
0x4000818	          0x4889c6	                            mov rsi, rax	       544	ehopt.c	FUNCTION_5	SWITCH_1	CALL_6
0x400081b	      0xe800000000	                          call 0x4000820	       544	ehopt.c	FUNCTION_5	SWITCH_1	CALL_6
0x4000820	            0xeb16	                           jmp 0x4000838	       545	ehopt.c	FUNCTION_5	SWITCH_1
0x4000822	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       548	ehopt.c	FUNCTION_5	SWITCH_1	CALL_7
0x4000826	      0x488d7c137c	            lea rdi, [rbx + rdx + 0x7c] 	       548	ehopt.c	FUNCTION_5	SWITCH_1	CALL_7
0x400082b	      0xba04000000	                              mov edx, 4	       548	ehopt.c	FUNCTION_5	SWITCH_1	CALL_7
0x4000830	          0x4889c6	                            mov rsi, rax	       548	ehopt.c	FUNCTION_5	SWITCH_1	CALL_7
0x4000833	      0xe800000000	                          call 0x4000838	       548	ehopt.c	FUNCTION_5	SWITCH_1	CALL_7
0x4000838	          0x8b4360	            mov eax, dword [rbx + 0x60] 	       552	ehopt.c	FUNCTION_5
0x400083b	          0x83e007	                              and eax, 7	       552	ehopt.c	FUNCTION_5
0x400083e	        0x48014310	            add qword [rbx + 0x10], rax 	       552	ehopt.c	FUNCTION_5
0x4000842	    0xc7435c010000	               mov dword [rbx + 0x5c], 1	       553	ehopt.c	FUNCTION_5
0x4000849	    0xc74360000000	               mov dword [rbx + 0x60], 0	       554	ehopt.c	FUNCTION_5
0x4000850	    0x48c743200000	               mov qword [rbx + 0x20], 0	       555	ehopt.c	FUNCTION_5
0x4000858	              0x5b	                                 pop rbx	       556	ehopt.c	FUNCTION_5
0x4000859	              0x5d	                                 pop rbp	       556	ehopt.c	FUNCTION_5
0x400085a	            0x415c	                                 pop r12	       556	ehopt.c	FUNCTION_5
0x400085c	              0xc3	                                     ret	       556	ehopt.c	FUNCTION_5
eh_frame_relax_frag	SWITCH,0:functions,0:IF,0:DO,0:ELSE,0:WHILE,0:CALL,1:FOR,0	7
0x4000725	              0x53	                                push rbx	       501	ehopt.c	FUNCTION_4
0x4000726	          0x8b5f60	            mov ebx, dword [rdi + 0x60] 	       504	ehopt.c	FUNCTION_4
0x4000729	          0x83e307	                              and ebx, 7	       504	ehopt.c	FUNCTION_4
0x400072c	      0xe800000000	                          call 0x4000731	       505	ehopt.c	FUNCTION_4	CALL_1
0x4000731	            0x29d8	                            sub eax, ebx	       506	ehopt.c	FUNCTION_4
0x4000733	              0x5b	                                 pop rbx	       507	ehopt.c	FUNCTION_4
0x4000734	              0xc3	                                     ret	       507	ehopt.c	FUNCTION_4
check_eh_frame	SWITCH,1:functions,0:IF,25:DO,0:ELSE,12:WHILE,0:CALL,14:FOR,0	427
0x4000040	            0x4156	                                push r14	       257	ehopt.c	FUNCTION_2
0x4000042	            0x4155	                                push r13	       257	ehopt.c	FUNCTION_2
0x4000044	            0x4154	                                push r12	       257	ehopt.c	FUNCTION_2
0x4000046	              0x55	                                push rbp	       257	ehopt.c	FUNCTION_2
0x4000047	              0x53	                                push rbx	       257	ehopt.c	FUNCTION_2
0x4000048	        0x4883ec20	                           sub rsp, 0x20	       257	ehopt.c	FUNCTION_2
0x400004c	    0x64488b042528	                mov rax, qword fs:[0x28]	       257	ehopt.c	FUNCTION_2
0x4000055	      0x4889442418	             mov qword [rsp + 0x18], rax	       257	ehopt.c	FUNCTION_2
0x400005a	            0x31c0	                            xor eax, eax	       257	ehopt.c	FUNCTION_2
0x400005c	    0x8b2d00000000	            mov ebp, dword [0x04000062] 	       278	ehopt.c	FUNCTION_2	IF_1
0x4000062	      0xbb00000000	                              mov ebx, 0	       279	ehopt.c	FUNCTION_2	IF_1
0x4000067	            0x85ed	                           test ebp, ebp	       278	ehopt.c	FUNCTION_2	IF_1
0x4000069	     0xf85c3050000	                           jne 0x4000632	       278	ehopt.c	FUNCTION_2	IF_1
0x400006f	          0x4989fd	                            mov r13, rdi	       278	ehopt.c	FUNCTION_2	IF_1
0x4000072	          0x4989f4	                            mov r12, rsi	       278	ehopt.c	FUNCTION_2	IF_1
0x4000075	    0x488b05000000	            mov rax, qword [0x0400007c] 	       287	ehopt.c	FUNCTION_2	IF_3	CALL_2
0x400007c	          0x488b00	                    mov rax, qword [rax]	       287	ehopt.c	FUNCTION_2	IF_3	CALL_2
0x400007f	      0xbf00000000	                              mov edi, 0	       287	ehopt.c	FUNCTION_2	IF_3	CALL_2
0x4000084	      0xb909000000	                              mov ecx, 9	       287	ehopt.c	FUNCTION_2	IF_3	CALL_2
0x4000089	          0x4889c6	                            mov rsi, rax	       287	ehopt.c	FUNCTION_2	IF_3	CALL_2
0x400008c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       287	ehopt.c	FUNCTION_2	IF_3	CALL_2
0x400008e	           0xf97c1	                                 seta cl	       287	ehopt.c	FUNCTION_2	IF_3	CALL_2
0x4000091	           0xf92c2	                                 setb dl	       287	ehopt.c	FUNCTION_2	IF_3	CALL_2
0x4000094	            0x38d1	                              cmp cl, dl	       287	ehopt.c	FUNCTION_2	IF_3	CALL_2
0x4000096	            0x750c	                           jne 0x40000a4	       287	ehopt.c	FUNCTION_2	IF_3	CALL_2
0x4000098	    0x41be00000000	                             mov r14d, 0	       289	ehopt.c	FUNCTION_2	IF_3
0x400009e	        0x8078095f	                cmp byte [rax + 9], 0x5f	       288	ehopt.c	FUNCTION_2	IF_3	CALL_3
0x40000a2	            0x7525	                           jne 0x40000c9	       288	ehopt.c	FUNCTION_2	IF_3	CALL_3
0x40000a4	      0xbf00000000	                              mov edi, 0	       290	ehopt.c	FUNCTION_2	ELSE_1	IF_4	CALL_5
0x40000a9	      0xb90c000000	                            mov ecx, 0xc	       290	ehopt.c	FUNCTION_2	ELSE_1	IF_4	CALL_5
0x40000ae	          0x4889c6	                            mov rsi, rax	       290	ehopt.c	FUNCTION_2	ELSE_1	IF_4	CALL_5
0x40000b1	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       290	ehopt.c	FUNCTION_2	ELSE_1	IF_4	CALL_5
0x40000b3	           0xf97c2	                                 seta dl	       290	ehopt.c	FUNCTION_2	ELSE_1	IF_4	CALL_5
0x40000b6	           0xf92c0	                                 setb al	       290	ehopt.c	FUNCTION_2	ELSE_1	IF_4	CALL_5
0x40000b9	            0x89eb	                            mov ebx, ebp	       293	ehopt.c	FUNCTION_2	ELSE_2
0x40000bb	            0x38c2	                              cmp dl, al	       290	ehopt.c	FUNCTION_2	ELSE_1	IF_4	CALL_5
0x40000bd	     0xf856f050000	                           jne 0x4000632	       290	ehopt.c	FUNCTION_2	ELSE_1	IF_4	CALL_5
0x40000c3	    0x41be00000000	                             mov r14d, 0	       291	ehopt.c	FUNCTION_2	ELSE_1	IF_4
0x40000c9	        0x41833e00	                      cmp dword [r14], 0	       295	ehopt.c	FUNCTION_2	ELSE_2	IF_5	CALL_6
0x40000cd	            0x742d	                            je 0x40000fc	       295	ehopt.c	FUNCTION_2	ELSE_2	IF_5	CALL_6
0x40000cf	        0x498b7e10	            mov rdi, qword [r14 + 0x10] 	       295	ehopt.c	FUNCTION_2	ELSE_2	IF_5	CALL_6
0x40000d3	      0xe800000000	                          call 0x40000d8	       295	ehopt.c	FUNCTION_2	ELSE_2	IF_5	CALL_6
0x40000d8	            0x89c3	                            mov ebx, eax	       295	ehopt.c	FUNCTION_2	ELSE_2	IF_5	CALL_6
0x40000da	            0x85c0	                           test eax, eax	       295	ehopt.c	FUNCTION_2	ELSE_2	IF_5	CALL_6
0x40000dc	            0x7409	                            je 0x40000e7	       295	ehopt.c	FUNCTION_2	ELSE_2	IF_5	CALL_6
0x40000de	    0x41c706000000	                      mov dword [r14], 0	       300	ehopt.c	FUNCTION_2	ELSE_2	IF_5
0x40000e5	            0xeb15	                           jmp 0x40000fc	       300	ehopt.c	FUNCTION_2	ELSE_2	IF_5
0x40000e7	          0x418b06	                    mov eax, dword [r14]	       303	ehopt.c	FUNCTION_2	SWITCH_1
0x40000ea	          0x83f807	                              cmp eax, 7	       303	ehopt.c	FUNCTION_2	SWITCH_1
0x40000ed	     0xf873f050000	                            ja 0x4000632	       303	ehopt.c	FUNCTION_2	SWITCH_1
0x40000f3	            0x89c2	                            mov edx, eax	       303	ehopt.c	FUNCTION_2	SWITCH_1
0x40000f5	    0xff24d5000000	                       jmp qword [rdx*8]	       303	ehopt.c	FUNCTION_2	SWITCH_1
0x40000fc	            0x89eb	                            mov ebx, ebp	       463	ehopt.c	FUNCTION_2
0x40000fe	      0x41833c2404	                      cmp dword [r12], 4	       306	ehopt.c	FUNCTION_2	SWITCH_1	IF_6
0x4000103	     0xf8529050000	                           jne 0x4000632	       306	ehopt.c	FUNCTION_2	SWITCH_1	IF_6
0x4000109	      0x410fb64518	           movzx eax, byte [r13 + 0x18] 	       317	ehopt.c	FUNCTION_2	SWITCH_1	IF_6	IF_7
0x400010e	            0x3c03	                               cmp al, 3	       317	ehopt.c	FUNCTION_2	SWITCH_1	IF_6	IF_7
0x4000110	            0x7408	                            je 0x400011a	       317	ehopt.c	FUNCTION_2	SWITCH_1	IF_6	IF_7
0x4000112	            0x3c14	                            cmp al, 0x14	       317	ehopt.c	FUNCTION_2	SWITCH_1	IF_6	IF_7
0x4000114	     0xf8518050000	                           jne 0x4000632	       317	ehopt.c	FUNCTION_2	SWITCH_1	IF_6	IF_7
0x400011a	        0x498b7d00	                    mov rdi, qword [r13]	       318	ehopt.c	FUNCTION_2	SWITCH_1	IF_6	IF_7	CALL_7
0x400011e	      0xe800000000	                          call 0x4000123	       318	ehopt.c	FUNCTION_2	SWITCH_1	IF_6	IF_7	CALL_7
0x4000123	            0x89c3	                            mov ebx, eax	       318	ehopt.c	FUNCTION_2	SWITCH_1	IF_6	IF_7	CALL_7
0x4000125	            0x85c0	                           test eax, eax	       318	ehopt.c	FUNCTION_2	SWITCH_1	IF_6	IF_7	CALL_7
0x4000127	     0xf8503050000	                           jne 0x4000630	       318	ehopt.c	FUNCTION_2	SWITCH_1	IF_6	IF_7	CALL_7
0x400012d	    0x41c706010000	                      mov dword [r14], 1	       320	ehopt.c	FUNCTION_2	SWITCH_1	IF_6	IF_7
0x4000134	        0x498b4500	                    mov rax, qword [r13]	       321	ehopt.c	FUNCTION_2	SWITCH_1	IF_6	IF_7
0x4000138	        0x49894610	             mov qword [r14 + 0x10], rax	       321	ehopt.c	FUNCTION_2	SWITCH_1	IF_6	IF_7
0x400013c	      0xe9f1040000	                           jmp 0x4000632	       321	ehopt.c	FUNCTION_2	SWITCH_1	IF_6	IF_7
0x4000141	          0x83c001	                              add eax, 1	       329	ehopt.c	FUNCTION_2	SWITCH_1
0x4000144	          0x418906	                    mov dword [r14], eax	       329	ehopt.c	FUNCTION_2	SWITCH_1
0x4000147	      0xe9e6040000	                           jmp 0x4000632	       330	ehopt.c	FUNCTION_2	SWITCH_1
0x400014c	        0x458b4604	                mov r8d, dword [r14 + 4]	       334	ehopt.c	FUNCTION_2	SWITCH_1	IF_8
0x4000150	          0x4585c0	                           test r8d, r8d	       334	ehopt.c	FUNCTION_2	SWITCH_1	IF_8
0x4000153	     0xf852d020000	                           jne 0x4000386	       334	ehopt.c	FUNCTION_2	SWITCH_1	IF_8
0x4000159	    0x488b05000000	            mov rax, qword [0x04000160] 	       115	ehopt.c	FUNCTION_1	CALL_1
0x4000160	    0x488b90a80000	            mov rdx, qword [rax + 0xa8] 	       115	ehopt.c	FUNCTION_1	CALL_1
0x4000167	          0x4c8b0a	                     mov r9, qword [rdx]	       115	ehopt.c	FUNCTION_1	CALL_1
0x400016a	          0x498b11	                     mov rdx, qword [r9]	       115	ehopt.c	FUNCTION_1	CALL_1
0x400016d	          0x488b30	                    mov rsi, qword [rax]	       122	ehopt.c	FUNCTION_1	IF_1	CALL_4
0x4000170	      0xbf00000000	                              mov edi, 0	       122	ehopt.c	FUNCTION_1	IF_1	CALL_4
0x4000175	      0xb90c000000	                            mov ecx, 0xc	       122	ehopt.c	FUNCTION_1	IF_1	CALL_4
0x400017a	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       122	ehopt.c	FUNCTION_1	IF_1	CALL_4
0x400017c	        0x400f97c7	                                seta dil	       122	ehopt.c	FUNCTION_1	IF_1	CALL_4
0x4000180	           0xf92c0	                                 setb al	       122	ehopt.c	FUNCTION_1	IF_1	CALL_4
0x4000183	            0x29c7	                            sub edi, eax	       122	ehopt.c	FUNCTION_1	IF_1	CALL_4
0x4000185	        0x400fbeff	                          movsx edi, dil	       122	ehopt.c	FUNCTION_1	IF_1	CALL_4
0x4000189	          0x4885d2	                           test rdx, rdx	       128	ehopt.c	FUNCTION_1	ELSE_1	WHILE_1
0x400018c	     0xf84dd010000	                            je 0x400036f	       128	ehopt.c	FUNCTION_1	ELSE_1	WHILE_1
0x4000192	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	       128	ehopt.c	FUNCTION_1	ELSE_1	WHILE_1
0x4000196	        0x4883f904	                              cmp rcx, 4	       128	ehopt.c	FUNCTION_1	ELSE_1	WHILE_1
0x400019a	     0xf8fa6040000	                            jg 0x4000646	       128	ehopt.c	FUNCTION_1	ELSE_1	WHILE_1
0x40001a0	      0xbe04000000	                              mov esi, 4	       128	ehopt.c	FUNCTION_1	ELSE_1	WHILE_1
0x40001a5	            0x89f0	                            mov eax, esi	       130	ehopt.c	FUNCTION_1	ELSE_1	WHILE_1
0x40001a7	            0x29c8	                            sub eax, ecx	       130	ehopt.c	FUNCTION_1	ELSE_1	WHILE_1
0x40001a9	            0x89c6	                            mov esi, eax	       130	ehopt.c	FUNCTION_1	ELSE_1	WHILE_1
0x40001ab	        0x488b5238	            mov rdx, qword [rdx + 0x38] 	       131	ehopt.c	FUNCTION_1	ELSE_1	WHILE_1
0x40001af	          0x4885d2	                           test rdx, rdx	       128	ehopt.c	FUNCTION_1	ELSE_1	WHILE_1
0x40001b2	     0xf84b7010000	                            je 0x400036f	       128	ehopt.c	FUNCTION_1	ELSE_1	WHILE_1
0x40001b8	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	       128	ehopt.c	FUNCTION_1	ELSE_1	WHILE_1
0x40001bc	            0x4898	                                    cdqe	       128	ehopt.c	FUNCTION_1	ELSE_1	WHILE_1
0x40001be	          0x4839c1	                            cmp rcx, rax	       128	ehopt.c	FUNCTION_1	ELSE_1	WHILE_1
0x40001c1	            0x7ee2	                           jle 0x40001a5	       128	ehopt.c	FUNCTION_1	ELSE_1	WHILE_1
0x40001c3	      0xe983040000	                           jmp 0x400064b	       128	ehopt.c	FUNCTION_1	ELSE_1	WHILE_1
0x40001c8	          0x4863c6	                         movsxd rax, esi	       135	ehopt.c	FUNCTION_1	IF_2
0x40001cb	       0xfb644027c	     movzx eax, byte [rdx + rax + 0x7c] 	       135	ehopt.c	FUNCTION_1	IF_2
0x40001d0	            0x85ff	                           test edi, edi	       135	ehopt.c	FUNCTION_1	IF_2
0x40001d2	        0x400f94c7	                                sete dil	       135	ehopt.c	FUNCTION_1	IF_2
0x40001d6	          0x4000c7	                             add dil, al	       135	ehopt.c	FUNCTION_1	IF_2
0x40001d9	     0xf85a2040000	                           jne 0x4000681	       135	ehopt.c	FUNCTION_1	IF_2
0x40001df	          0x8d7e01	                      lea edi, [rsi + 1]	       136	ehopt.c	FUNCTION_1	IF_2
0x40001e2	          0x4863ff	                         movsxd rdi, edi	       136	ehopt.c	FUNCTION_1	IF_2
0x40001e5	        0x3a443a7c	        cmp al, byte [rdx + rdi + 0x7c] 	       136	ehopt.c	FUNCTION_1	IF_2
0x40001e9	     0xf8592040000	                           jne 0x4000681	       136	ehopt.c	FUNCTION_1	IF_2
0x40001ef	          0x8d7e02	                      lea edi, [rsi + 2]	       137	ehopt.c	FUNCTION_1	IF_2
0x40001f2	          0x4863ff	                         movsxd rdi, edi	       137	ehopt.c	FUNCTION_1	IF_2
0x40001f5	        0x3a443a7c	        cmp al, byte [rdx + rdi + 0x7c] 	       137	ehopt.c	FUNCTION_1	IF_2
0x40001f9	     0xf8582040000	                           jne 0x4000681	       137	ehopt.c	FUNCTION_1	IF_2
0x40001ff	          0x8d7e03	                      lea edi, [rsi + 3]	       138	ehopt.c	FUNCTION_1	IF_2
0x4000202	          0x4863ff	                         movsxd rdi, edi	       138	ehopt.c	FUNCTION_1	IF_2
0x4000205	        0x3a443a7c	        cmp al, byte [rdx + rdi + 0x7c] 	       138	ehopt.c	FUNCTION_1	IF_2
0x4000209	     0xf8572040000	                           jne 0x4000681	       138	ehopt.c	FUNCTION_1	IF_2
0x400020f	          0x8d4604	                      lea eax, [rsi + 4]	       143	ehopt.c	FUNCTION_1
0x4000212	          0x4863f0	                         movsxd rsi, eax	       144	ehopt.c	FUNCTION_1	WHILE_2
0x4000215	          0x4839f1	                            cmp rcx, rsi	       144	ehopt.c	FUNCTION_1	WHILE_2
0x4000218	     0xf8f46040000	                            jg 0x4000664	       144	ehopt.c	FUNCTION_1	WHILE_2
0x400021e	            0x29c8	                            sub eax, ecx	       146	ehopt.c	FUNCTION_1	WHILE_2
0x4000220	        0x488b5238	            mov rdx, qword [rdx + 0x38] 	       147	ehopt.c	FUNCTION_1	WHILE_2
0x4000224	          0x4885d2	                           test rdx, rdx	       144	ehopt.c	FUNCTION_1	WHILE_2
0x4000227	     0xf8442010000	                            je 0x400036f	       144	ehopt.c	FUNCTION_1	WHILE_2
0x400022d	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	       144	ehopt.c	FUNCTION_1	WHILE_2
0x4000231	          0x4863f0	                         movsxd rsi, eax	       144	ehopt.c	FUNCTION_1	WHILE_2
0x4000234	          0x4839f1	                            cmp rcx, rsi	       144	ehopt.c	FUNCTION_1	WHILE_2
0x4000237	            0x7ee5	                           jle 0x400021e	       144	ehopt.c	FUNCTION_1	WHILE_2
0x4000239	      0xe926040000	                           jmp 0x4000664	       144	ehopt.c	FUNCTION_1	WHILE_2
0x400023e	          0x4863c8	                         movsxd rcx, eax	       151	ehopt.c	FUNCTION_1	IF_3
0x4000241	      0x807c0a7c01	         cmp byte [rdx + rcx + 0x7c], 1 	       151	ehopt.c	FUNCTION_1	IF_3
0x4000246	     0xf8535040000	                           jne 0x4000681	       151	ehopt.c	FUNCTION_1	IF_3
0x400024c	        0x4d8b4920	               mov r9, qword [r9 + 0x20]	       116	ehopt.c	FUNCTION_1	CALL_2
0x4000250	          0x83c001	                              add eax, 1	       157	ehopt.c	FUNCTION_1
0x4000253	      0xb900000000	                              mov ecx, 0	       156	ehopt.c	FUNCTION_1
0x4000258	            0xeb0f	                           jmp 0x4000269	       156	ehopt.c	FUNCTION_1
0x400025a	            0x29f8	                            sub eax, edi	       162	ehopt.c	FUNCTION_1	WHILE_3	WHILE_4
0x400025c	        0x488b5238	            mov rdx, qword [rdx + 0x38] 	       163	ehopt.c	FUNCTION_1	WHILE_3	WHILE_4
0x4000260	          0x4885d2	                           test rdx, rdx	       160	ehopt.c	FUNCTION_1	WHILE_3	WHILE_4
0x4000263	     0xf8406010000	                            je 0x400036f	       160	ehopt.c	FUNCTION_1	WHILE_3	WHILE_4
0x4000269	        0x488b7a10	            mov rdi, qword [rdx + 0x10] 	       160	ehopt.c	FUNCTION_1	WHILE_3	WHILE_4
0x400026d	          0x4863f0	                         movsxd rsi, eax	       160	ehopt.c	FUNCTION_1	WHILE_3	WHILE_4
0x4000270	          0x4839f7	                            cmp rdi, rsi	       160	ehopt.c	FUNCTION_1	WHILE_3	WHILE_4
0x4000273	            0x7ee5	                           jle 0x400025a	       160	ehopt.c	FUNCTION_1	WHILE_3	WHILE_4
0x4000275	       0xfb674327c	     movzx esi, byte [rdx + rsi + 0x7c] 	       168	ehopt.c	FUNCTION_1	WHILE_3	WHILE_5
0x400027a	          0x4084f6	                           test sil, sil	       168	ehopt.c	FUNCTION_1	WHILE_3	WHILE_5
0x400027d	     0xf84f6030000	                            je 0x4000679	       168	ehopt.c	FUNCTION_1	WHILE_3	WHILE_5
0x4000283	          0x83f908	                              cmp ecx, 8	       170	ehopt.c	FUNCTION_1	WHILE_3	WHILE_5	IF_5
0x4000286	            0x770a	                            ja 0x4000292	       170	ehopt.c	FUNCTION_1	WHILE_3	WHILE_5	IF_5
0x4000288	          0x4c63d1	                         movsxd r10, ecx	       172	ehopt.c	FUNCTION_1	WHILE_3	WHILE_5	IF_5
0x400028b	        0x42883414	               mov byte [rsp + r10], sil	       172	ehopt.c	FUNCTION_1	WHILE_3	WHILE_5	IF_5
0x400028f	          0x83c101	                              add ecx, 1	       173	ehopt.c	FUNCTION_1	WHILE_3	WHILE_5	IF_5
0x4000292	          0x83c001	                              add eax, 1	       175	ehopt.c	FUNCTION_1	WHILE_3	WHILE_5
0x4000295	          0x4863f0	                         movsxd rsi, eax	       168	ehopt.c	FUNCTION_1	WHILE_3	WHILE_5
0x4000298	          0x4839f7	                            cmp rdi, rsi	       168	ehopt.c	FUNCTION_1	WHILE_3	WHILE_5
0x400029b	            0x7ec3	                           jle 0x4000260	       168	ehopt.c	FUNCTION_1	WHILE_3	WHILE_5
0x400029d	       0xfb674327c	     movzx esi, byte [rdx + rsi + 0x7c] 	       168	ehopt.c	FUNCTION_1	WHILE_3	WHILE_5
0x40002a2	          0x4084f6	                           test sil, sil	       168	ehopt.c	FUNCTION_1	WHILE_3	WHILE_5
0x40002a5	            0x75dc	                           jne 0x4000283	       168	ehopt.c	FUNCTION_1	WHILE_3	WHILE_5
0x40002a7	      0xe9cd030000	                           jmp 0x4000679	       168	ehopt.c	FUNCTION_1	WHILE_3	WHILE_5
0x40002ac	            0x29f8	                            sub eax, edi	       183	ehopt.c	FUNCTION_1	WHILE_6
0x40002ae	        0x488b5238	            mov rdx, qword [rdx + 0x38] 	       184	ehopt.c	FUNCTION_1	WHILE_6
0x40002b2	          0x4885d2	                           test rdx, rdx	       181	ehopt.c	FUNCTION_1	WHILE_6
0x40002b5	     0xf84b4000000	                            je 0x400036f	       181	ehopt.c	FUNCTION_1	WHILE_6
0x40002bb	          0x4863f0	                         movsxd rsi, eax	       181	ehopt.c	FUNCTION_1	WHILE_6
0x40002be	        0x488b7a10	            mov rdi, qword [rdx + 0x10] 	       181	ehopt.c	FUNCTION_1	WHILE_6
0x40002c2	          0x4839f7	                            cmp rdi, rsi	       181	ehopt.c	FUNCTION_1	WHILE_6
0x40002c5	            0x7ee5	                           jle 0x40002ac	       181	ehopt.c	FUNCTION_1	WHILE_6
0x40002c7	          0x4863c9	                         movsxd rcx, ecx	       189	ehopt.c	FUNCTION_1
0x40002ca	        0xc6040c00	                 mov byte [rsp + rcx], 0	       189	ehopt.c	FUNCTION_1
0x40002ce	         0xfb63c24	                   movzx edi, byte [rsp]	       190	ehopt.c	FUNCTION_1	IF_8
0x40002d2	          0x4084ff	                           test dil, dil	       190	ehopt.c	FUNCTION_1	IF_8
0x40002d5	            0x7465	                            je 0x400033c	       190	ehopt.c	FUNCTION_1	IF_8
0x40002d7	        0x4080ff65	                           cmp dil, 0x65	       194	ehopt.c	FUNCTION_1	ELSE_2	IF_9	CALL_5
0x40002db	            0x7555	                           jne 0x4000332	       194	ehopt.c	FUNCTION_1	ELSE_2	IF_9	CALL_5
0x40002dd	      0x807c240168	                cmp byte [rsp + 1], 0x68	       194	ehopt.c	FUNCTION_1	ELSE_2	IF_9	CALL_5
0x40002e2	     0xf8599030000	                           jne 0x4000681	       194	ehopt.c	FUNCTION_1	ELSE_2	IF_9	CALL_5
0x40002e8	      0x807c240200	                   cmp byte [rsp + 2], 0	       194	ehopt.c	FUNCTION_1	ELSE_2	IF_9	CALL_5
0x40002ed	            0x7409	                            je 0x40002f8	       194	ehopt.c	FUNCTION_1	ELSE_2	IF_9	CALL_5
0x40002ef	      0xe98d030000	                           jmp 0x4000681	       194	ehopt.c	FUNCTION_1	ELSE_2	IF_9	CALL_5
0x40002f4	        0x4d8b4940	               mov r9, qword [r9 + 0x40]	       200	ehopt.c	FUNCTION_1	ELSE_2	IF_9	WHILE_7
0x40002f8	          0x4d85c9	                             test r9, r9	       198	ehopt.c	FUNCTION_1	ELSE_2	IF_9	WHILE_7
0x40002fb	            0x740e	                            je 0x400030b	       198	ehopt.c	FUNCTION_1	ELSE_2	IF_9	WHILE_7
0x40002fd	        0x49395108	                 cmp qword [r9 + 8], rdx	       199	ehopt.c	FUNCTION_1	ELSE_2	IF_9	WHILE_7
0x4000301	            0x75f1	                           jne 0x40002f4	       199	ehopt.c	FUNCTION_1	ELSE_2	IF_9	WHILE_7
0x4000303	        0x493b7110	              cmp rsi, qword [r9 + 0x10]	       199	ehopt.c	FUNCTION_1	ELSE_2	IF_9	WHILE_7
0x4000307	            0x75eb	                           jne 0x40002f4	       199	ehopt.c	FUNCTION_1	ELSE_2	IF_9	WHILE_7
0x4000309	            0xeb05	                           jmp 0x4000310	       199	ehopt.c	FUNCTION_1	ELSE_2	IF_9	WHILE_7
0x400030b	          0x83c004	                              add eax, 4	       202	ehopt.c	FUNCTION_1	ELSE_2	IF_9	IF_10
0x400030e	            0xeb14	                           jmp 0x4000324	       202	ehopt.c	FUNCTION_1	ELSE_2	IF_9	IF_10
0x4000310	      0x410fb64902	                movzx ecx, byte [r9 + 2]	       204	ehopt.c	FUNCTION_1	ELSE_2	IF_9	ELSE_3
0x4000315	             0x1c8	                            add eax, ecx	       204	ehopt.c	FUNCTION_1	ELSE_2	IF_9	ELSE_3
0x4000317	            0xeb0b	                           jmp 0x4000324	       204	ehopt.c	FUNCTION_1	ELSE_2	IF_9	ELSE_3
0x4000319	            0x29c8	                            sub eax, ecx	       207	ehopt.c	FUNCTION_1	ELSE_2	IF_9	ELSE_3	WHILE_8
0x400031b	        0x488b5238	            mov rdx, qword [rdx + 0x38] 	       208	ehopt.c	FUNCTION_1	ELSE_2	IF_9	ELSE_3	WHILE_8
0x400031f	          0x4885d2	                           test rdx, rdx	       205	ehopt.c	FUNCTION_1	ELSE_2	IF_9	ELSE_3	WHILE_8
0x4000322	            0x744b	                            je 0x400036f	       205	ehopt.c	FUNCTION_1	ELSE_2	IF_9	ELSE_3	WHILE_8
0x4000324	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	       205	ehopt.c	FUNCTION_1	ELSE_2	IF_9	ELSE_3	WHILE_8
0x4000328	          0x4863f0	                         movsxd rsi, eax	       205	ehopt.c	FUNCTION_1	ELSE_2	IF_9	ELSE_3	WHILE_8
0x400032b	          0x4839f1	                            cmp rcx, rsi	       205	ehopt.c	FUNCTION_1	ELSE_2	IF_9	ELSE_3	WHILE_8
0x400032e	            0x7ee9	                           jle 0x4000319	       205	ehopt.c	FUNCTION_1	ELSE_2	IF_9	ELSE_3	WHILE_8
0x4000330	            0xeb0a	                           jmp 0x400033c	       205	ehopt.c	FUNCTION_1	ELSE_2	IF_9	ELSE_3	WHILE_8
0x4000332	        0x4080ff7a	                           cmp dil, 0x7a	       213	ehopt.c	FUNCTION_1	ELSE_4	IF_12
0x4000336	     0xf8545030000	                           jne 0x4000681	       213	ehopt.c	FUNCTION_1	ELSE_4	IF_12
0x400033c	            0x4898	                                    cdqe	       219	ehopt.c	FUNCTION_1
0x400033e	       0xfbe44027c	     movsx eax, byte [rdx + rax + 0x7c] 	       219	ehopt.c	FUNCTION_1
0x4000343	           0xfb6d0	                           movzx edx, al	       219	ehopt.c	FUNCTION_1
0x4000346	      0x2580000000	                           and eax, 0x80	       220	ehopt.c	FUNCTION_1	IF_13
0x400034b	      0xb800000000	                              mov eax, 0	       221	ehopt.c	FUNCTION_1	IF_13
0x4000350	           0xf45d0	                         cmovne edx, eax	       221	ehopt.c	FUNCTION_1	IF_13
0x4000353	        0x41895608	                mov dword [r14 + 8], edx	       223	ehopt.c	FUNCTION_1
0x4000357	        0x4080ff7a	                           cmp dil, 0x7a	       224	ehopt.c	FUNCTION_1
0x400035b	           0xf94c0	                                 sete al	       224	ehopt.c	FUNCTION_1
0x400035e	           0xfb6c0	                           movzx eax, al	       224	ehopt.c	FUNCTION_1
0x4000361	        0x4189460c	              mov dword [r14 + 0xc], eax	       224	ehopt.c	FUNCTION_1
0x4000365	    0x41c746040100	                  mov dword [r14 + 4], 1	       335	ehopt.c	FUNCTION_2	SWITCH_1	IF_8	CALL_8
0x400036d	            0xeb17	                           jmp 0x4000386	       335	ehopt.c	FUNCTION_2	SWITCH_1	IF_8	CALL_8
0x400036f	    0x41c746040000	                  mov dword [r14 + 4], 0	       335	ehopt.c	FUNCTION_2	SWITCH_1	IF_8	CALL_8
0x4000377	    0x41c706080000	                      mov dword [r14], 8	       336	ehopt.c	FUNCTION_2	SWITCH_1	IF_8
0x400037e	          0x4489c3	                            mov ebx, r8d	       463	ehopt.c	FUNCTION_2
0x4000381	      0xe9ac020000	                           jmp 0x4000632	       336	ehopt.c	FUNCTION_2	SWITCH_1	IF_8
0x4000386	        0x418b460c	              mov eax, dword [r14 + 0xc]	       337	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_3	IF_9
0x400038a	            0x85c0	                           test eax, eax	       337	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_3	IF_9
0x400038c	            0x741c	                            je 0x40003aa	       337	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_3	IF_9
0x400038e	    0x41c706040000	                      mov dword [r14], 4	       339	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_3	IF_9
0x4000395	    0x41c746240000	               mov dword [r14 + 0x24], 0	       340	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_3	IF_9
0x400039d	    0x41c746280000	               mov dword [r14 + 0x28], 0	       341	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_3	IF_9
0x40003a5	      0xe988020000	                           jmp 0x4000632	       341	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_3	IF_9
0x40003aa	    0x41c706060000	                      mov dword [r14], 6	       344	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_4
0x40003b1	            0x89c3	                            mov ebx, eax	       463	ehopt.c	FUNCTION_2
0x40003b3	      0xe97a020000	                           jmp 0x4000632	       463	ehopt.c	FUNCTION_2
0x40003b8	        0x418b0424	                    mov eax, dword [r12]	       349	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_4	IF_10
0x40003bc	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       349	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_4	IF_10
0x40003bf	            0x751b	                           jne 0x40003dc	       349	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_4	IF_10
0x40003c1	      0x41807d1802	                cmp byte [r13 + 0x18], 2	       349	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_4	IF_10
0x40003c6	            0x754e	                           jne 0x4000416	       349	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_4	IF_10
0x40003c8	        0x498b4510	            mov rax, qword [r13 + 0x10] 	       351	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_4	IF_10
0x40003cc	        0x41894624	             mov dword [r14 + 0x24], eax	       351	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_4	IF_10
0x40003d0	    0x41c706050000	                      mov dword [r14], 5	       352	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_4	IF_10
0x40003d7	      0xe9b2020000	                           jmp 0x400068e	       352	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_4	IF_10
0x40003dc	          0x83f801	                              cmp eax, 1	       354	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11
0x40003df	            0x7535	                           jne 0x4000416	       354	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11
0x40003e1	      0x41807d1802	                cmp byte [r13 + 0x18], 2	       354	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11
0x40003e6	            0x752e	                           jne 0x4000416	       354	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11
0x40003e8	        0x498b5510	            mov rdx, qword [r13 + 0x10] 	       356	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11
0x40003ec	        0x418b4e28	            mov ecx, dword [r14 + 0x28] 	       357	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11
0x40003f0	            0x89d0	                            mov eax, edx	       357	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11
0x40003f2	          0x83e07f	                           and eax, 0x7f	       357	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11
0x40003f5	            0xd3e0	                             shl eax, cl	       357	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11
0x40003f7	        0x41094624	              or dword [r14 + 0x24], eax	       357	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11
0x40003fb	          0x83c107	                              add ecx, 7	       358	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11
0x40003fe	        0x41894e28	             mov dword [r14 + 0x28], ecx	       358	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11
0x4000402	            0x84d2	                             test dl, dl	       359	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11	IF_12
0x4000404	     0xf8828020000	                            js 0x4000632	       359	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11	IF_12
0x400040a	    0x41c706050000	                      mov dword [r14], 5	       360	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11	IF_12
0x4000411	      0xe978020000	                           jmp 0x400068e	       360	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_5	IF_11	IF_12
0x4000416	    0x41c706080000	                      mov dword [r14], 8	       363	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_6
0x400041d	      0xe910020000	                           jmp 0x4000632	       363	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_6
0x4000422	    0x41c706060000	                      mov dword [r14], 6	       365	ehopt.c	FUNCTION_2	SWITCH_1	IF_13
0x4000429	            0x89c3	                            mov ebx, eax	       463	ehopt.c	FUNCTION_2
0x400042b	      0xe902020000	                           jmp 0x4000632	       463	ehopt.c	FUNCTION_2
0x4000430	        0x418b0424	                    mov eax, dword [r12]	       369	ehopt.c	FUNCTION_2	SWITCH_1	IF_14
0x4000434	            0x85c0	                           test eax, eax	       369	ehopt.c	FUNCTION_2	SWITCH_1	IF_14
0x4000436	            0x790c	                           jns 0x4000444	       369	ehopt.c	FUNCTION_2	SWITCH_1	IF_14
0x4000438	    0x41c706080000	                      mov dword [r14], 8	       370	ehopt.c	FUNCTION_2	SWITCH_1	IF_14
0x400043f	      0xe9ee010000	                           jmp 0x4000632	       370	ehopt.c	FUNCTION_2	SWITCH_1	IF_14
0x4000444	        0x418b7624	            mov esi, dword [r14 + 0x24] 	       373	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_7
0x4000448	            0x29c6	                            sub esi, eax	       373	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_7
0x400044a	        0x41897624	             mov dword [r14 + 0x24], esi	       373	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_7
0x400044e	            0x85f6	                           test esi, esi	       374	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_7	IF_15
0x4000450	            0x750e	                           jne 0x4000460	       374	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_7	IF_15
0x4000452	    0x41c706060000	                      mov dword [r14], 6	       375	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_7	IF_15
0x4000459	            0x89f3	                            mov ebx, esi	       463	ehopt.c	FUNCTION_2
0x400045b	      0xe9d2010000	                           jmp 0x4000632	       463	ehopt.c	FUNCTION_2
0x4000460	            0x85f6	                           test esi, esi	       376	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_7	ELSE_8	IF_16
0x4000462	     0xf89ca010000	                           jns 0x4000632	       376	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_7	ELSE_8	IF_16
0x4000468	    0x41c706080000	                      mov dword [r14], 8	       377	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_7	ELSE_8	IF_16
0x400046f	      0xe9be010000	                           jmp 0x4000632	       377	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_7	ELSE_8	IF_16
0x4000474	      0x41833c2401	                      cmp dword [r12], 1	       382	ehopt.c	FUNCTION_2	SWITCH_1	IF_17
0x4000479	     0xf85b3010000	                           jne 0x4000632	       382	ehopt.c	FUNCTION_2	SWITCH_1	IF_17
0x400047f	      0x41807d1802	                cmp byte [r13 + 0x18], 2	       383	ehopt.c	FUNCTION_2	SWITCH_1	IF_17
0x4000484	     0xf85a8010000	                           jne 0x4000632	       383	ehopt.c	FUNCTION_2	SWITCH_1	IF_17
0x400048a	      0x49837d1004	               cmp qword [r13 + 0x10], 4	       384	ehopt.c	FUNCTION_2	SWITCH_1	IF_17
0x400048f	     0xf859d010000	                           jne 0x4000632	       384	ehopt.c	FUNCTION_2	SWITCH_1	IF_17
0x4000495	      0xbf01000000	                              mov edi, 1	       388	ehopt.c	FUNCTION_2	SWITCH_1	IF_17	CALL_9
0x400049a	      0xe800000000	                          call 0x400049f	       388	ehopt.c	FUNCTION_2	SWITCH_1	IF_17	CALL_9
0x400049f	    0x41c706070000	                      mov dword [r14], 7	       389	ehopt.c	FUNCTION_2	SWITCH_1	IF_17
0x40004a6	    0x488b05000000	            mov rax, qword [0x040004ad] 	       390	ehopt.c	FUNCTION_2	SWITCH_1	IF_17
0x40004ad	        0x49894618	             mov qword [r14 + 0x18], rax	       390	ehopt.c	FUNCTION_2	SWITCH_1	IF_17
0x40004b1	      0xe800000000	                          call 0x40004b6	       391	ehopt.c	FUNCTION_2	SWITCH_1	IF_17	CALL_10
0x40004b6	        0x41894620	             mov dword [r14 + 0x20], eax	       391	ehopt.c	FUNCTION_2	SWITCH_1	IF_17	CALL_10
0x40004ba	      0xe973010000	                           jmp 0x4000632	       391	ehopt.c	FUNCTION_2	SWITCH_1	IF_17	CALL_10
0x40004bf	    0x41c706060000	                      mov dword [r14], 6	       396	ehopt.c	FUNCTION_2	SWITCH_1
0x40004c6	      0x41833c2404	                      cmp dword [r12], 4	       397	ehopt.c	FUNCTION_2	SWITCH_1	IF_18
0x40004cb	     0xf8561010000	                           jne 0x4000632	       397	ehopt.c	FUNCTION_2	SWITCH_1	IF_18
0x40004d1	      0x410fb64518	           movzx eax, byte [r13 + 0x18] 	       399	ehopt.c	FUNCTION_2	SWITCH_1	IF_19
0x40004d6	            0x3c02	                               cmp al, 2	       399	ehopt.c	FUNCTION_2	SWITCH_1	IF_19
0x40004d8	            0x756b	                           jne 0x4000545	       399	ehopt.c	FUNCTION_2	SWITCH_1	IF_19
0x40004da	        0x498b4510	            mov rax, qword [r13 + 0x10] 	       405	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	IF_20
0x40004de	        0x4883f83f	                           cmp rax, 0x3f	       405	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	IF_20
0x40004e2	            0x7f19	                            jg 0x40004fd	       405	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	IF_20
0x40004e4	        0x498b4e18	            mov rcx, qword [r14 + 0x18] 	       407	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	IF_20
0x40004e8	        0x49635620	         movsxd rdx, dword [r14 + 0x20] 	       408	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	IF_20
0x40004ec	          0x83c840	                            or eax, 0x40	       408	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	IF_20
0x40004ef	        0x8844117c	         mov byte [rcx + rdx + 0x7c], al	       408	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	IF_20
0x40004f3	      0xbb01000000	                              mov ebx, 1	       410	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	IF_20
0x40004f8	      0xe935010000	                           jmp 0x4000632	       410	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	IF_20
0x40004fd	    0x483dff000000	                           cmp rax, 0xff	       412	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	ELSE_9	IF_21
0x4000503	            0x7f1a	                            jg 0x400051f	       412	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	ELSE_9	IF_21
0x4000505	        0x498b5618	            mov rdx, qword [r14 + 0x18] 	       414	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	ELSE_9	IF_21
0x4000509	        0x49634620	         movsxd rax, dword [r14 + 0x20] 	       414	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	ELSE_9	IF_21
0x400050d	      0xc644027c02	          mov byte [rdx + rax + 0x7c], 2	       414	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	ELSE_9	IF_21
0x4000512	    0x41c704240100	                      mov dword [r12], 1	       415	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	ELSE_9	IF_21
0x400051a	      0xe913010000	                           jmp 0x4000632	       415	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	ELSE_9	IF_21
0x400051f	    0x483dffff0000	                         cmp rax, 0xffff	       417	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	ELSE_10	IF_22
0x4000525	     0xf8f07010000	                            jg 0x4000632	       417	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	ELSE_10	IF_22
0x400052b	        0x498b5618	            mov rdx, qword [r14 + 0x18] 	       419	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	ELSE_10	IF_22
0x400052f	        0x49634620	         movsxd rax, dword [r14 + 0x20] 	       419	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	ELSE_10	IF_22
0x4000533	      0xc644027c03	          mov byte [rdx + rax + 0x7c], 3	       419	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	ELSE_10	IF_22
0x4000538	    0x41c704240200	                      mov dword [r12], 2	       420	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	ELSE_10	IF_22
0x4000540	      0xe9ed000000	                           jmp 0x4000632	       420	ehopt.c	FUNCTION_2	SWITCH_1	IF_19	ELSE_10	IF_22
0x4000545	            0x3c14	                            cmp al, 0x14	       423	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_11	IF_23
0x4000547	            0x754d	                           jne 0x4000596	       423	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_11	IF_23
0x4000549	      0x41837e0801	                  cmp dword [r14 + 8], 1	       423	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_11	IF_23
0x400054e	     0xf85de000000	                           jne 0x4000632	       423	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_11	IF_23
0x4000554	        0x498b6e18	            mov rbp, qword [r14 + 0x18] 	       430	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_11	IF_23
0x4000558	        0x49635e20	         movsxd rbx, dword [r14 + 0x20] 	       429	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_11	IF_23	CALL_12
0x400055c	          0x4c89ef	                            mov rdi, r13	       429	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_11	IF_23	CALL_12
0x400055f	      0xe800000000	                          call 0x4000564	       429	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_11	IF_23	CALL_12
0x4000564	          0x4989c0	                             mov r8, rax	       429	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_11	IF_23	CALL_12
0x4000567	        0x4883ec08	                              sub rsp, 8	       429	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_11	IF_23	CALL_12
0x400056b	              0x55	                                push rbp	       429	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_11	IF_23	CALL_12
0x400056c	          0x4989d9	                             mov r9, rbx	       429	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_11	IF_23	CALL_12
0x400056f	      0xb908000000	                              mov ecx, 8	       429	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_11	IF_23	CALL_12
0x4000574	      0xba00000000	                              mov edx, 0	       429	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_11	IF_23	CALL_12
0x4000579	      0xbe04000000	                              mov esi, 4	       429	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_11	IF_23	CALL_12
0x400057e	      0xbf0c000000	                            mov edi, 0xc	       429	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_11	IF_23	CALL_12
0x4000583	      0xe800000000	                          call 0x4000588	       429	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_11	IF_23	CALL_12
0x4000588	        0x4883c410	                           add rsp, 0x10	       431	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_11	IF_23
0x400058c	      0xbb01000000	                              mov ebx, 1	       431	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_11	IF_23
0x4000591	      0xe99c000000	                           jmp 0x4000632	       431	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_11	IF_23
0x4000596	            0x3c0b	                             cmp al, 0xb	       433	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24
0x4000598	            0x7408	                            je 0x40005a2	       433	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24
0x400059a	            0x3c0e	                             cmp al, 0xe	       433	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24
0x400059c	     0xf8590000000	                           jne 0x4000632	       433	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24
0x40005a2	        0x418b7608	                mov esi, dword [r14 + 8]	       435	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24
0x40005a6	          0x83fe01	                              cmp esi, 1	       435	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24
0x40005a9	     0xf8683000000	                           jbe 0x4000632	       435	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24
0x40005af	        0x498b5500	                    mov rdx, qword [r13]	       437	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x40005b3	      0x48837a0800	                  cmp qword [rdx + 8], 0	       437	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x40005b8	            0x7478	                            je 0x4000632	       437	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x40005ba	        0x498b4d08	                mov rcx, qword [r13 + 8]	       438	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x40005be	      0x4883790800	                  cmp qword [rcx + 8], 0	       438	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x40005c3	            0x746d	                            je 0x4000632	       438	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x40005c5	        0x807a2814	            cmp byte [rdx + 0x28], 0x14 	       439	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x40005c9	            0x7567	                           jne 0x4000632	       439	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x40005cb	        0x80792802	                cmp byte [rcx + 0x28], 2	       440	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x40005cf	            0x7561	                           jne 0x4000632	       440	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x40005d1	            0x3c0b	                             cmp al, 0xb	       443	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x40005d3	            0x7506	                           jne 0x40005db	       443	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x40005d5	        0x488b4120	            mov rax, qword [rcx + 0x20] 	       443	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x40005d9	            0xeb0c	                           jmp 0x40005e7	       443	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x40005db	        0x488b4920	            mov rcx, qword [rcx + 0x20] 	       443	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x40005df	      0xb801000000	                              mov eax, 1	       443	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x40005e4	          0x48d3e0	                             shl rax, cl	       443	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x40005e7	            0x89f6	                            mov esi, esi	       441	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x40005e9	          0x4839f0	                            cmp rax, rsi	       441	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x40005ec	            0x7544	                           jne 0x4000632	       441	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x40005ee	        0x498b6e18	            mov rbp, qword [r14 + 0x18] 	       452	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x40005f2	        0x49635e20	         movsxd rbx, dword [r14 + 0x20] 	       450	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25	CALL_13
0x40005f6	        0x488d7a10	                   lea rdi, [rdx + 0x10]	       450	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25	CALL_13
0x40005fa	      0xe800000000	                          call 0x40005ff	       450	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25	CALL_13
0x40005ff	          0x4989c0	                             mov r8, rax	       450	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25	CALL_13
0x4000602	        0x418b4e08	                mov ecx, dword [r14 + 8]	       450	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25	CALL_13
0x4000606	          0xc1e103	                              shl ecx, 3	       450	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25	CALL_13
0x4000609	        0x4883ec08	                              sub rsp, 8	       450	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25	CALL_13
0x400060d	              0x55	                                push rbp	       450	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25	CALL_13
0x400060e	          0x4989d9	                             mov r9, rbx	       450	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25	CALL_13
0x4000611	      0xba00000000	                              mov edx, 0	       450	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25	CALL_13
0x4000616	      0xbe04000000	                              mov esi, 4	       450	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25	CALL_13
0x400061b	      0xbf0c000000	                            mov edi, 0xc	       450	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25	CALL_13
0x4000620	      0xe800000000	                          call 0x4000625	       450	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25	CALL_13
0x4000625	        0x4883c410	                           add rsp, 0x10	       453	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x4000629	      0xbb01000000	                              mov ebx, 1	       453	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x400062e	            0xeb02	                           jmp 0x4000632	       453	ehopt.c	FUNCTION_2	SWITCH_1	ELSE_12	IF_24	IF_25
0x4000630	            0x89eb	                            mov ebx, ebp	       463	ehopt.c	FUNCTION_2
0x4000632	            0x89d8	                            mov eax, ebx	       464	ehopt.c	FUNCTION_2
0x4000634	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	       464	ehopt.c	FUNCTION_2
0x4000639	    0x644833142528	                xor rdx, qword fs:[0x28]	       464	ehopt.c	FUNCTION_2
0x4000642	            0x745d	                            je 0x40006a1	       464	ehopt.c	FUNCTION_2
0x4000644	            0xeb56	                           jmp 0x400069c	       464	ehopt.c	FUNCTION_2
0x4000646	      0xbe04000000	                              mov esi, 4	       127	ehopt.c	FUNCTION_1	ELSE_1
0x400064b	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	       134	ehopt.c	FUNCTION_1	IF_2
0x400064f	          0x4863c6	                         movsxd rax, esi	       134	ehopt.c	FUNCTION_1	IF_2
0x4000652	          0x4989cb	                            mov r11, rcx	       134	ehopt.c	FUNCTION_1	IF_2
0x4000655	          0x4929c3	                            sub r11, rax	       134	ehopt.c	FUNCTION_1	IF_2
0x4000658	        0x4983fb03	                              cmp r11, 3	       134	ehopt.c	FUNCTION_1	IF_2
0x400065c	     0xf8f66fbffff	                            jg 0x40001c8	       134	ehopt.c	FUNCTION_1	IF_2
0x4000662	            0xeb1d	                           jmp 0x4000681	       134	ehopt.c	FUNCTION_1	IF_2
0x4000664	          0x4863c8	                         movsxd rcx, eax	       150	ehopt.c	FUNCTION_1	IF_3
0x4000667	        0x488b7a10	            mov rdi, qword [rdx + 0x10] 	       150	ehopt.c	FUNCTION_1	IF_3
0x400066b	          0x4829cf	                            sub rdi, rcx	       150	ehopt.c	FUNCTION_1	IF_3
0x400066e	          0x4885ff	                           test rdi, rdi	       150	ehopt.c	FUNCTION_1	IF_3
0x4000671	     0xf8fc7fbffff	                            jg 0x400023e	       150	ehopt.c	FUNCTION_1	IF_3
0x4000677	            0xeb08	                           jmp 0x4000681	       150	ehopt.c	FUNCTION_1	IF_3
0x4000679	          0x83c001	                              add eax, 1	       180	ehopt.c	FUNCTION_1
0x400067c	      0xe93afcffff	                           jmp 0x40002bb	       180	ehopt.c	FUNCTION_1
0x4000681	    0x41c746040000	                  mov dword [r14 + 4], 0	       335	ehopt.c	FUNCTION_2	SWITCH_1	IF_8	CALL_8
0x4000689	      0xe9e9fcffff	                           jmp 0x4000377	       335	ehopt.c	FUNCTION_2	SWITCH_1	IF_8	CALL_8
0x400068e	        0x418b4624	            mov eax, dword [r14 + 0x24] 	       364	ehopt.c	FUNCTION_2	SWITCH_1	IF_13
0x4000692	            0x85c0	                           test eax, eax	       364	ehopt.c	FUNCTION_2	SWITCH_1	IF_13
0x4000694	     0xf8488fdffff	                            je 0x4000422	       364	ehopt.c	FUNCTION_2	SWITCH_1	IF_13
0x400069a	            0xeb96	                           jmp 0x4000632	       364	ehopt.c	FUNCTION_2	SWITCH_1	IF_13
0x400069c	      0xe800000000	                          call 0x40006a1	       464	ehopt.c	FUNCTION_2
0x40006a1	        0x4883c420	                           add rsp, 0x20	       464	ehopt.c	FUNCTION_2
0x40006a5	              0x5b	                                 pop rbx	       464	ehopt.c	FUNCTION_2
0x40006a6	              0x5d	                                 pop rbp	       464	ehopt.c	FUNCTION_2
0x40006a7	            0x415c	                                 pop r12	       464	ehopt.c	FUNCTION_2
0x40006a9	            0x415d	                                 pop r13	       464	ehopt.c	FUNCTION_2
0x40006ab	            0x415e	                                 pop r14	       464	ehopt.c	FUNCTION_2
0x40006ad	              0xc3	                                     ret	       464	ehopt.c	FUNCTION_2
