srec_print_symbol	CALL,1:IF,0:functions,0:FOR,0:ELSE,0:WHILE,0:DO,0:SWITCH,1	23
0x40002de	              0x55	                                push rbp	      1241	srec.c	FUNCTION_25
0x40002df	              0x53	                                push rbx	      1241	srec.c	FUNCTION_25
0x40002e0	        0x4883ec08	                              sub rsp, 8	      1241	srec.c	FUNCTION_25
0x40002e4	          0x4889f5	                            mov rbp, rsi	      1241	srec.c	FUNCTION_25
0x40002e7	          0x4889d3	                            mov rbx, rdx	      1241	srec.c	FUNCTION_25
0x40002ea	            0x85c9	                           test ecx, ecx	      1244	srec.c	FUNCTION_25	SWITCH_1
0x40002ec	            0x750b	                           jne 0x40002f9	      1244	srec.c	FUNCTION_25	SWITCH_1
0x40002ee	        0x488b7a08	                mov rdi, qword [rdx + 8]	        97	stdio2.h	CALL_27
0x40002f2	      0xe800000000	                          call 0x40002f7	        97	stdio2.h	CALL_27
0x40002f7	            0xeb27	                           jmp 0x4000320	        97	stdio2.h	CALL_27
0x40002f9	      0xe800000000	                          call 0x40002fe	      1250	srec.c	FUNCTION_25	SWITCH_1	CALL_1
0x40002fe	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      1251	srec.c	FUNCTION_25	SWITCH_1
0x4000302	        0x4c8b4308	                 mov r8, qword [rbx + 8]	        97	stdio2.h	CALL_27
0x4000306	          0x488b08	                    mov rcx, qword [rax]	        97	stdio2.h	CALL_27
0x4000309	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_27
0x400030e	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_27
0x4000313	          0x4889ef	                            mov rdi, rbp	        97	stdio2.h	CALL_27
0x4000316	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_27
0x400031b	      0xe800000000	                          call 0x4000320	        97	stdio2.h	CALL_27
0x4000320	        0x4883c408	                              add rsp, 8	      1255	srec.c	FUNCTION_25
0x4000324	              0x5b	                                 pop rbx	      1255	srec.c	FUNCTION_25
0x4000325	              0x5d	                                 pop rbp	      1255	srec.c	FUNCTION_25
0x4000326	              0xc3	                                     ret	      1255	srec.c	FUNCTION_25
srec_init	CALL,1:IF,1:functions,0:FOR,0:ELSE,0:WHILE,0:DO,0:SWITCH,0	7
0x4000d8c	    0x833d00000000	               cmp dword [0x04000d93], 0	       183	srec.c	FUNCTION_1	IF_1
0x4000d93	            0x7517	                           jne 0x4000dac	       183	srec.c	FUNCTION_1	IF_1
0x4000d95	        0x4883ec08	                              sub rsp, 8	       180	srec.c	FUNCTION_1
0x4000d99	    0xc70500000000	               mov dword [0x04000da3], 1	       185	srec.c	FUNCTION_1	IF_1
0x4000da3	      0xe800000000	                          call 0x4000da8	       186	srec.c	FUNCTION_1	IF_1	CALL_1
0x4000da8	        0x4883c408	                              add rsp, 8	       188	srec.c	FUNCTION_1
0x4000dac	            0xf3c3	                                     ret	       188	srec.c	FUNCTION_1
srec_write_object_contents	CALL,1:IF,0:functions,0:FOR,0:ELSE,0:WHILE,0:DO,0:SWITCH,0	5
0x4000d66	        0x4883ec08	                              sub rsp, 8	      1163	srec.c	FUNCTION_19
0x4000d6a	      0xbe00000000	                              mov esi, 0	      1164	srec.c	FUNCTION_19	CALL_1
0x4000d6f	      0xe875fcffff	call sym.internal_srec_write_object_contents	      1164	srec.c	FUNCTION_19	CALL_1
0x4000d74	        0x4883c408	                              add rsp, 8	      1165	srec.c	FUNCTION_19
0x4000d78	              0xc3	                                     ret	      1165	srec.c	FUNCTION_19
symbolsrec_write_object_contents	CALL,1:IF,0:functions,0:FOR,0:ELSE,0:WHILE,0:DO,0:SWITCH,0	5
0x4000d79	        0x4883ec08	                              sub rsp, 8	      1169	srec.c	FUNCTION_20
0x4000d7d	      0xbe01000000	                              mov esi, 1	      1170	srec.c	FUNCTION_20	CALL_1
0x4000d82	      0xe862fcffff	call sym.internal_srec_write_object_contents	      1170	srec.c	FUNCTION_20	CALL_1
0x4000d87	        0x4883c408	                              add rsp, 8	      1171	srec.c	FUNCTION_20
0x4000d8b	              0xc3	                                     ret	      1171	srec.c	FUNCTION_20
srec_write_record	CALL,1:IF,0:functions,0:FOR,1:ELSE,0:WHILE,0:DO,0:SWITCH,1	145
0x40007b3	              0x55	                                push rbp	       959	srec.c	FUNCTION_13
0x40007b4	              0x53	                                push rbx	       959	srec.c	FUNCTION_13
0x40007b5	    0x4881ec180200	                          sub rsp, 0x218	       959	srec.c	FUNCTION_13
0x40007bc	          0x4889fb	                            mov rbx, rdi	       959	srec.c	FUNCTION_13
0x40007bf	    0x64488b042528	                mov rax, qword fs:[0x28]	       959	srec.c	FUNCTION_13
0x40007c8	    0x488984240802	            mov qword [rsp + 0x208], rax	       959	srec.c	FUNCTION_13
0x40007d0	            0x31c0	                            xor eax, eax	       959	srec.c	FUNCTION_13
0x40007d2	        0xc6042453	                    mov byte [rsp], 0x53	       967	srec.c	FUNCTION_13
0x40007d6	          0x8d4630	                   lea eax, [rsi + 0x30]	       968	srec.c	FUNCTION_13
0x40007d9	        0x88442401	                  mov byte [rsp + 1], al	       968	srec.c	FUNCTION_13
0x40007dd	          0x83fe09	                              cmp esi, 9	       973	srec.c	FUNCTION_13	SWITCH_1
0x40007e0	     0xf87f2000000	                            ja 0x40008d8	       973	srec.c	FUNCTION_13	SWITCH_1
0x40007e6	            0x89f6	                            mov esi, esi	       973	srec.c	FUNCTION_13	SWITCH_1
0x40007e8	    0xff24f5000000	                       jmp qword [rsi*8]	       973	srec.c	FUNCTION_13	SWITCH_1
0x40007ef	          0x4989d3	                            mov r11, rdx	       977	srec.c	FUNCTION_13	SWITCH_1
0x40007f2	        0x49c1eb18	                           shr r11, 0x18	       977	srec.c	FUNCTION_13	SWITCH_1
0x40007f6	          0x4c89d8	                            mov rax, r11	       977	srec.c	FUNCTION_13	SWITCH_1
0x40007f9	          0x83e00f	                            and eax, 0xf	       977	srec.c	FUNCTION_13	SWITCH_1
0x40007fc	     0xfb680000000	                   movzx eax, byte [rax]	       977	srec.c	FUNCTION_13	SWITCH_1
0x4000803	        0x88442405	                  mov byte [rsp + 5], al	       977	srec.c	FUNCTION_13	SWITCH_1
0x4000807	          0x4889d0	                            mov rax, rdx	       977	srec.c	FUNCTION_13	SWITCH_1
0x400080a	        0x48c1e81c	                           shr rax, 0x1c	       977	srec.c	FUNCTION_13	SWITCH_1
0x400080e	          0x83e00f	                            and eax, 0xf	       977	srec.c	FUNCTION_13	SWITCH_1
0x4000811	     0xfb680000000	                   movzx eax, byte [rax]	       977	srec.c	FUNCTION_13	SWITCH_1
0x4000818	        0x88442404	                  mov byte [rsp + 4], al	       977	srec.c	FUNCTION_13	SWITCH_1
0x400081c	        0x450fb6db	                        movzx r11d, r11b	       977	srec.c	FUNCTION_13	SWITCH_1
0x4000820	      0x488d742406	                      lea rsi, [rsp + 6]	       978	srec.c	FUNCTION_13	SWITCH_1
0x4000825	            0xeb0b	                           jmp 0x4000832	       978	srec.c	FUNCTION_13	SWITCH_1
0x4000827	      0x488d742404	                      lea rsi, [rsp + 4]	       971	srec.c	FUNCTION_13
0x400082c	    0x41bb00000000	                             mov r11d, 0	       961	srec.c	FUNCTION_13
0x4000832	          0x4889d0	                            mov rax, rdx	       982	srec.c	FUNCTION_13	SWITCH_1
0x4000835	        0x48c1e810	                           shr rax, 0x10	       982	srec.c	FUNCTION_13	SWITCH_1
0x4000839	          0x4889c7	                            mov rdi, rax	       982	srec.c	FUNCTION_13	SWITCH_1
0x400083c	          0x83e70f	                            and edi, 0xf	       982	srec.c	FUNCTION_13	SWITCH_1
0x400083f	     0xfb6bf000000	                   movzx edi, byte [rdi]	       982	srec.c	FUNCTION_13	SWITCH_1
0x4000846	        0x40887e01	                 mov byte [rsi + 1], dil	       982	srec.c	FUNCTION_13	SWITCH_1
0x400084a	          0x4889d7	                            mov rdi, rdx	       982	srec.c	FUNCTION_13	SWITCH_1
0x400084d	        0x48c1ef14	                           shr rdi, 0x14	       982	srec.c	FUNCTION_13	SWITCH_1
0x4000851	          0x83e70f	                            and edi, 0xf	       982	srec.c	FUNCTION_13	SWITCH_1
0x4000854	     0xfb6bf000000	                   movzx edi, byte [rdi]	       982	srec.c	FUNCTION_13	SWITCH_1
0x400085b	          0x40883e	                     mov byte [rsi], dil	       982	srec.c	FUNCTION_13	SWITCH_1
0x400085e	           0xfb6c0	                           movzx eax, al	       982	srec.c	FUNCTION_13	SWITCH_1
0x4000861	          0x4101c3	                           add r11d, eax	       982	srec.c	FUNCTION_13	SWITCH_1
0x4000864	        0x4883c602	                              add rsi, 2	       983	srec.c	FUNCTION_13	SWITCH_1
0x4000868	            0xeb0b	                           jmp 0x4000875	       983	srec.c	FUNCTION_13	SWITCH_1
0x400086a	      0x488d742404	                      lea rsi, [rsp + 4]	       971	srec.c	FUNCTION_13
0x400086f	    0x41bb00000000	                             mov r11d, 0	       961	srec.c	FUNCTION_13
0x4000875	          0x4889d0	                            mov rax, rdx	       988	srec.c	FUNCTION_13	SWITCH_1
0x4000878	        0x48c1e808	                              shr rax, 8	       988	srec.c	FUNCTION_13	SWITCH_1
0x400087c	          0x4889c7	                            mov rdi, rax	       988	srec.c	FUNCTION_13	SWITCH_1
0x400087f	          0x83e70f	                            and edi, 0xf	       988	srec.c	FUNCTION_13	SWITCH_1
0x4000882	     0xfb6bf000000	                   movzx edi, byte [rdi]	       988	srec.c	FUNCTION_13	SWITCH_1
0x4000889	        0x40887e01	                 mov byte [rsi + 1], dil	       988	srec.c	FUNCTION_13	SWITCH_1
0x400088d	          0x4889d7	                            mov rdi, rdx	       988	srec.c	FUNCTION_13	SWITCH_1
0x4000890	        0x48c1ef0c	                            shr rdi, 0xc	       988	srec.c	FUNCTION_13	SWITCH_1
0x4000894	          0x83e70f	                            and edi, 0xf	       988	srec.c	FUNCTION_13	SWITCH_1
0x4000897	     0xfb6bf000000	                   movzx edi, byte [rdi]	       988	srec.c	FUNCTION_13	SWITCH_1
0x400089e	          0x40883e	                     mov byte [rsi], dil	       988	srec.c	FUNCTION_13	SWITCH_1
0x40008a1	          0x4889d7	                            mov rdi, rdx	       990	srec.c	FUNCTION_13	SWITCH_1
0x40008a4	          0x83e70f	                            and edi, 0xf	       990	srec.c	FUNCTION_13	SWITCH_1
0x40008a7	     0xfb6bf000000	                   movzx edi, byte [rdi]	       990	srec.c	FUNCTION_13	SWITCH_1
0x40008ae	        0x40887e03	                 mov byte [rsi + 3], dil	       990	srec.c	FUNCTION_13	SWITCH_1
0x40008b2	          0x4889d7	                            mov rdi, rdx	       990	srec.c	FUNCTION_13	SWITCH_1
0x40008b5	        0x48c1ef04	                              shr rdi, 4	       990	srec.c	FUNCTION_13	SWITCH_1
0x40008b9	          0x83e70f	                            and edi, 0xf	       990	srec.c	FUNCTION_13	SWITCH_1
0x40008bc	     0xfb6bf000000	                   movzx edi, byte [rdi]	       990	srec.c	FUNCTION_13	SWITCH_1
0x40008c3	        0x40887e02	                 mov byte [rsi + 2], dil	       990	srec.c	FUNCTION_13	SWITCH_1
0x40008c7	           0xfb6c0	                           movzx eax, al	       990	srec.c	FUNCTION_13	SWITCH_1
0x40008ca	           0xfb6d2	                           movzx edx, dl	       990	srec.c	FUNCTION_13	SWITCH_1
0x40008cd	             0x1c2	                            add edx, eax	       990	srec.c	FUNCTION_13	SWITCH_1
0x40008cf	          0x4101d3	                           add r11d, edx	       990	srec.c	FUNCTION_13	SWITCH_1
0x40008d2	        0x4883c604	                              add rsi, 4	       991	srec.c	FUNCTION_13	SWITCH_1
0x40008d6	            0xeb0b	                           jmp 0x40008e3	       992	srec.c	FUNCTION_13	SWITCH_1
0x40008d8	      0x488d742404	                      lea rsi, [rsp + 4]	       971	srec.c	FUNCTION_13
0x40008dd	    0x41bb00000000	                             mov r11d, 0	       961	srec.c	FUNCTION_13
0x40008e3	          0x4c39c1	                             cmp rcx, r8	       995	srec.c	FUNCTION_13	FOR_1
0x40008e6	            0x734a	                           jae 0x4000932	       995	srec.c	FUNCTION_13	FOR_1
0x40008e8	          0x4989f1	                             mov r9, rsi	       995	srec.c	FUNCTION_13	FOR_1
0x40008eb	          0x4889ca	                            mov rdx, rcx	       995	srec.c	FUNCTION_13	FOR_1
0x40008ee	           0xfb602	                   movzx eax, byte [rdx]	       997	srec.c	FUNCTION_13	FOR_1
0x40008f1	          0x4889c7	                            mov rdi, rax	       997	srec.c	FUNCTION_13	FOR_1
0x40008f4	          0x83e70f	                            and edi, 0xf	       997	srec.c	FUNCTION_13	FOR_1
0x40008f7	     0xfb6bf000000	                   movzx edi, byte [rdi]	       997	srec.c	FUNCTION_13	FOR_1
0x40008fe	        0x41887901	                  mov byte [r9 + 1], dil	       997	srec.c	FUNCTION_13	FOR_1
0x4000902	          0x4189c2	                           mov r10d, eax	       997	srec.c	FUNCTION_13	FOR_1
0x4000905	        0x41c0ea04	                             shr r10b, 4	       997	srec.c	FUNCTION_13	FOR_1
0x4000909	        0x4183e20f	                           and r10d, 0xf	       997	srec.c	FUNCTION_13	FOR_1
0x400090d	    0x410fb6ba0000	                   movzx edi, byte [r10]	       997	srec.c	FUNCTION_13	FOR_1
0x4000915	          0x418839	                      mov byte [r9], dil	       997	srec.c	FUNCTION_13	FOR_1
0x4000918	           0xfb6c0	                           movzx eax, al	       997	srec.c	FUNCTION_13	FOR_1
0x400091b	          0x4101c3	                           add r11d, eax	       997	srec.c	FUNCTION_13	FOR_1
0x400091e	        0x4983c102	                               add r9, 2	       998	srec.c	FUNCTION_13	FOR_1
0x4000922	        0x4883c201	                              add rdx, 1	       995	srec.c	FUNCTION_13	FOR_1
0x4000926	          0x4939d0	                             cmp r8, rdx	       995	srec.c	FUNCTION_13	FOR_1
0x4000929	            0x75c3	                           jne 0x40008ee	       995	srec.c	FUNCTION_13	FOR_1
0x400092b	          0x4929c8	                             sub r8, rcx	       995	srec.c	FUNCTION_13	FOR_1
0x400092e	        0x4a8d3446	                   lea rsi, [rsi + r8*2]	       995	srec.c	FUNCTION_13	FOR_1
0x4000932	          0x4889e7	                            mov rdi, rsp	      1002	srec.c	FUNCTION_13
0x4000935	      0x488d442402	                      lea rax, [rsp + 2]	      1002	srec.c	FUNCTION_13
0x400093a	          0x4889f1	                            mov rcx, rsi	      1002	srec.c	FUNCTION_13
0x400093d	          0x4829c1	                            sub rcx, rax	      1002	srec.c	FUNCTION_13
0x4000940	          0x4889c8	                            mov rax, rcx	      1002	srec.c	FUNCTION_13
0x4000943	          0x4889ca	                            mov rdx, rcx	      1002	srec.c	FUNCTION_13
0x4000946	        0x48c1ea3f	                           shr rdx, 0x3f	      1002	srec.c	FUNCTION_13
0x400094a	          0x4801d0	                            add rax, rdx	      1002	srec.c	FUNCTION_13
0x400094d	          0x4889c2	                            mov rdx, rax	      1002	srec.c	FUNCTION_13
0x4000950	          0x48d1fa	                              sar rdx, 1	      1002	srec.c	FUNCTION_13
0x4000953	          0x4889d1	                            mov rcx, rdx	      1002	srec.c	FUNCTION_13
0x4000956	          0x83e10f	                            and ecx, 0xf	      1002	srec.c	FUNCTION_13
0x4000959	     0xfb689000000	                   movzx ecx, byte [rcx]	      1002	srec.c	FUNCTION_13
0x4000960	        0x884c2403	                  mov byte [rsp + 3], cl	      1002	srec.c	FUNCTION_13
0x4000964	        0x48c1f805	                              sar rax, 5	      1002	srec.c	FUNCTION_13
0x4000968	          0x83e00f	                            and eax, 0xf	      1002	srec.c	FUNCTION_13
0x400096b	     0xfb680000000	                   movzx eax, byte [rax]	      1002	srec.c	FUNCTION_13
0x4000972	        0x88442402	                  mov byte [rsp + 2], al	      1002	srec.c	FUNCTION_13
0x4000976	           0xfb6d2	                           movzx edx, dl	      1002	srec.c	FUNCTION_13
0x4000979	          0x4101d3	                           add r11d, edx	      1002	srec.c	FUNCTION_13
0x400097c	          0x41f7d3	                                not r11d	      1004	srec.c	FUNCTION_13
0x400097f	        0x450fb6db	                        movzx r11d, r11b	      1004	srec.c	FUNCTION_13
0x4000983	          0x4489d8	                           mov eax, r11d	      1005	srec.c	FUNCTION_13
0x4000986	          0x83e00f	                            and eax, 0xf	      1005	srec.c	FUNCTION_13
0x4000989	     0xfb680000000	                   movzx eax, byte [rax]	      1005	srec.c	FUNCTION_13
0x4000990	          0x884601	                  mov byte [rsi + 1], al	      1005	srec.c	FUNCTION_13
0x4000993	        0x41c1eb04	                             shr r11d, 4	      1005	srec.c	FUNCTION_13
0x4000997	          0x4589db	                          mov r11d, r11d	      1005	srec.c	FUNCTION_13
0x400099a	    0x410fb6830000	                   movzx eax, byte [r11]	      1005	srec.c	FUNCTION_13
0x40009a2	            0x8806	                      mov byte [rsi], al	      1005	srec.c	FUNCTION_13
0x40009a4	        0xc646020d	                 mov byte [rsi + 2], 0xd	      1008	srec.c	FUNCTION_13
0x40009a8	        0xc646030a	                 mov byte [rsi + 3], 0xa	      1009	srec.c	FUNCTION_13
0x40009ac	        0x488d6e04	                      lea rbp, [rsi + 4]	      1009	srec.c	FUNCTION_13
0x40009b0	          0x4829e5	                            sub rbp, rsp	      1010	srec.c	FUNCTION_13
0x40009b3	          0x4889da	                            mov rdx, rbx	      1012	srec.c	FUNCTION_13	CALL_1
0x40009b6	          0x4889ee	                            mov rsi, rbp	      1012	srec.c	FUNCTION_13	CALL_1
0x40009b9	      0xe800000000	                          call 0x40009be	      1012	srec.c	FUNCTION_13	CALL_1
0x40009be	          0x4839c5	                            cmp rbp, rax	      1012	srec.c	FUNCTION_13	CALL_1
0x40009c1	           0xf94c0	                                 sete al	      1012	srec.c	FUNCTION_13	CALL_1
0x40009c4	           0xfb6c0	                           movzx eax, al	      1012	srec.c	FUNCTION_13	CALL_1
0x40009c7	    0x488b9c240802	           mov rbx, qword [rsp + 0x208] 	      1013	srec.c	FUNCTION_13
0x40009cf	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1013	srec.c	FUNCTION_13
0x40009d8	            0x7405	                            je 0x40009df	      1013	srec.c	FUNCTION_13
0x40009da	      0xe800000000	                          call 0x40009df	      1013	srec.c	FUNCTION_13
0x40009df	    0x4881c4180200	                          add rsp, 0x218	      1013	srec.c	FUNCTION_13
0x40009e6	              0x5b	                                 pop rbx	      1013	srec.c	FUNCTION_13
0x40009e7	              0x5d	                                 pop rbp	      1013	srec.c	FUNCTION_13
0x40009e8	              0xc3	                                     ret	      1013	srec.c	FUNCTION_13
srec_get_symbol_info	CALL,1:IF,0:functions,0:FOR,0:ELSE,0:WHILE,0:DO,0:SWITCH,0	6
0x40002ca	        0x4883ec08	                              sub rsp, 8	      1232	srec.c	FUNCTION_24
0x40002ce	          0x4889f7	                            mov rdi, rsi	      1232	srec.c	FUNCTION_24
0x40002d1	          0x4889d6	                            mov rsi, rdx	      1233	srec.c	FUNCTION_24	CALL_1
0x40002d4	      0xe800000000	                          call 0x40002d9	      1233	srec.c	FUNCTION_24	CALL_1
0x40002d9	        0x4883c408	                              add rsp, 8	      1234	srec.c	FUNCTION_24
0x40002dd	              0xc3	                                     ret	      1234	srec.c	FUNCTION_24
srec_get_symtab_upper_bound	CALL,1:IF,0:functions,0:FOR,0:ELSE,0:WHILE,0:DO,0:SWITCH,0	4
0x4000046	    0x8b87b8000000	            mov eax, dword [rdi + 0xb8] 	      1185	srec.c	FUNCTION_22	CALL_1
0x400004c	          0x8d4001	                      lea eax, [rax + 1]	      1185	srec.c	FUNCTION_22	CALL_1
0x400004f	        0x48c1e003	                              shl rax, 3	      1185	srec.c	FUNCTION_22	CALL_1
0x4000053	              0xc3	                                     ret	      1186	srec.c	FUNCTION_22
srec_sizeof_headers	CALL,0:IF,0:functions,0:FOR,0:ELSE,0:WHILE,0:DO,0:SWITCH,0	2
0x4000040	      0xb800000000	                              mov eax, 0	      1178	srec.c	FUNCTION_21
0x4000045	              0xc3	                                     ret	      1178	srec.c	FUNCTION_21
srec_scan	CALL,47:IF,36:functions,0:FOR,0:ELSE,4:WHILE,7:DO,1:SWITCH,2	617
0x4000ec2	            0x4157	                                push r15	       297	srec.c	ELSE_1	FUNCTION_6
0x4000ec4	            0x4156	                                push r14	       297	srec.c	ELSE_1	FUNCTION_6
0x4000ec6	            0x4155	                                push r13	       297	srec.c	ELSE_1	FUNCTION_6
0x4000ec8	            0x4154	                                push r12	       297	srec.c	ELSE_1	FUNCTION_6
0x4000eca	              0x55	                                push rbp	       297	srec.c	ELSE_1	FUNCTION_6
0x4000ecb	              0x53	                                push rbx	       297	srec.c	ELSE_1	FUNCTION_6
0x4000ecc	        0x4883ec78	                           sub rsp, 0x78	       297	srec.c	ELSE_1	FUNCTION_6
0x4000ed0	          0x4889fb	                            mov rbx, rdi	       297	srec.c	ELSE_1	FUNCTION_6
0x4000ed3	    0x64488b042528	                mov rax, qword fs:[0x28]	       297	srec.c	ELSE_1	FUNCTION_6
0x4000edc	      0x4889442468	             mov qword [rsp + 0x68], rax	       297	srec.c	ELSE_1	FUNCTION_6
0x4000ee1	            0x31c0	                            xor eax, eax	       297	srec.c	ELSE_1	FUNCTION_6
0x4000ee3	    0xc744243c0000	               mov dword [rsp + 0x3c], 0	       300	srec.c	ELSE_1	FUNCTION_6
0x4000eeb	      0xba00000000	                              mov edx, 0	       306	srec.c	ELSE_1	FUNCTION_6	IF_1	CALL_1
0x4000ef0	      0xbe00000000	                              mov esi, 0	       306	srec.c	ELSE_1	FUNCTION_6	IF_1	CALL_1
0x4000ef5	      0xe800000000	                          call 0x4000efa	       306	srec.c	ELSE_1	FUNCTION_6	IF_1	CALL_1
0x4000efa	        0x89442418	             mov dword [rsp + 0x18], eax	       306	srec.c	ELSE_1	FUNCTION_6	IF_1	CALL_1
0x4000efe	            0x85c0	                           test eax, eax	       306	srec.c	ELSE_1	FUNCTION_6	IF_1	CALL_1
0x4000f00	     0xf85d5080000	                           jne 0x40017db	       306	srec.c	ELSE_1	FUNCTION_6	IF_1	CALL_1
0x4000f06	    0x48c744240800	                  mov qword [rsp + 8], 0	       306	srec.c	ELSE_1	FUNCTION_6	IF_1	CALL_1
0x4000f0f	    0x48c744242000	               mov qword [rsp + 0x20], 0	       306	srec.c	ELSE_1	FUNCTION_6	IF_1	CALL_1
0x4000f18	    0x48c744241000	               mov qword [rsp + 0x10], 0	       306	srec.c	ELSE_1	FUNCTION_6	IF_1	CALL_1
0x4000f21	    0xc744241c0100	               mov dword [rsp + 0x1c], 1	       306	srec.c	ELSE_1	FUNCTION_6	IF_1	CALL_1
0x4000f29	      0xe94b080000	                           jmp 0x4001779	       306	srec.c	ELSE_1	FUNCTION_6	IF_1	CALL_1
0x4000f2e	          0x83f853	                           cmp eax, 0x53	       313	srec.c	ELSE_1	FUNCTION_6	WHILE_1	IF_2
0x4000f31	           0xf95c1	                                setne cl	       313	srec.c	ELSE_1	FUNCTION_6	WHILE_1	IF_2
0x4000f34	          0x83f80d	                            cmp eax, 0xd	       313	srec.c	ELSE_1	FUNCTION_6	WHILE_1	IF_2
0x4000f37	           0xf95c2	                                setne dl	       313	srec.c	ELSE_1	FUNCTION_6	WHILE_1	IF_2
0x4000f3a	            0x84d1	                             test cl, dl	       313	srec.c	ELSE_1	FUNCTION_6	WHILE_1	IF_2
0x4000f3c	            0x7418	                            je 0x4000f56	       313	srec.c	ELSE_1	FUNCTION_6	WHILE_1	IF_2
0x4000f3e	          0x83f80a	                            cmp eax, 0xa	       313	srec.c	ELSE_1	FUNCTION_6	WHILE_1	IF_2
0x4000f41	           0xf95c2	                                setne dl	       313	srec.c	ELSE_1	FUNCTION_6	WHILE_1	IF_2
0x4000f44	            0x84d2	                             test dl, dl	       314	srec.c	ELSE_1	FUNCTION_6	WHILE_1	IF_2
0x4000f46	      0xba00000000	                              mov edx, 0	       314	srec.c	ELSE_1	FUNCTION_6	WHILE_1	IF_2
0x4000f4b	    0x480f44542408	              cmove rdx, qword [rsp + 8]	       314	srec.c	ELSE_1	FUNCTION_6	WHILE_1	IF_2
0x4000f51	      0x4889542408	                mov qword [rsp + 8], rdx	       314	srec.c	ELSE_1	FUNCTION_6	WHILE_1	IF_2
0x4000f56	          0x83f820	                           cmp eax, 0x20	       316	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1
0x4000f59	     0xf8484000000	                            je 0x4000fe3	       316	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1
0x4000f5f	          0x83f820	                           cmp eax, 0x20	       316	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1
0x4000f62	            0x7f10	                            jg 0x4000f74	       316	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1
0x4000f64	          0x83f80a	                            cmp eax, 0xa	       316	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1
0x4000f67	            0x7430	                            je 0x4000f99	       316	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1
0x4000f69	          0x83f80d	                            cmp eax, 0xd	       316	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1
0x4000f6c	     0xf8407080000	                            je 0x4001779	       316	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1
0x4000f72	            0xeb0e	                           jmp 0x4000f82	       316	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1
0x4000f74	          0x83f824	                           cmp eax, 0x24	       316	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1
0x4000f77	            0x742a	                            je 0x4000fa3	       316	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1
0x4000f79	          0x83f853	                           cmp eax, 0x53	       316	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1
0x4000f7c	     0xf84a6020000	                            je 0x4001228	       316	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1
0x4000f82	        0x8b4c243c	            mov ecx, dword [rsp + 0x3c] 	       319	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	CALL_3
0x4000f86	            0x89c2	                            mov edx, eax	       319	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	CALL_3
0x4000f88	        0x8b74241c	            mov esi, dword [rsp + 0x1c] 	       319	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	CALL_3
0x4000f8c	          0x4889df	                            mov rdi, rbx	       319	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	CALL_3
0x4000f8f	      0xe878feffff	                  call sym.srec_bad_byte	       319	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	CALL_3
0x4000f94	      0xe92e080000	                           jmp 0x40017c7	       320	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1
0x4000f99	      0x8344241c01	               add dword [rsp + 0x1c], 1	       323	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1
0x4000f9e	      0xe9d6070000	                           jmp 0x4001779	       324	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1
0x4000fa3	      0x488d74243c	                   lea rsi, [rsp + 0x3c]	       331	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	WHILE_2	CALL_4
0x4000fa8	          0x4889df	                            mov rdi, rbx	       331	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	WHILE_2	CALL_4
0x4000fab	      0xe877f3ffff	                  call sym.srec_get_byte	       331	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	WHILE_2	CALL_4
0x4000fb0	          0x83f80a	                            cmp eax, 0xa	       332	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	WHILE_2
0x4000fb3	            0x7405	                            je 0x4000fba	       332	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	WHILE_2
0x4000fb5	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       332	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	WHILE_2
0x4000fb8	            0x75e9	                           jne 0x4000fa3	       332	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	WHILE_2
0x4000fba	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       334	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	IF_3
0x4000fbd	            0x751a	                           jne 0x4000fd9	       334	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	IF_3
0x4000fbf	        0x8b4c243c	            mov ecx, dword [rsp + 0x3c] 	       336	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	IF_3	CALL_5
0x4000fc3	      0xbaffffffff	                     mov edx, 0xffffffff	       336	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	IF_3	CALL_5
0x4000fc8	        0x8b74241c	            mov esi, dword [rsp + 0x1c] 	       336	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	IF_3	CALL_5
0x4000fcc	          0x4889df	                            mov rdi, rbx	       336	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	IF_3	CALL_5
0x4000fcf	      0xe838feffff	                  call sym.srec_bad_byte	       336	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	IF_3	CALL_5
0x4000fd4	      0xe9ee070000	                           jmp 0x40017c7	       337	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	IF_3
0x4000fd9	      0x8344241c01	               add dword [rsp + 0x1c], 1	       340	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1
0x4000fde	      0xe996070000	                           jmp 0x4001779	       341	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1
0x4000fe3	      0x488d74243c	                   lea rsi, [rsp + 0x3c]	       351	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_6
0x4000fe8	          0x4889df	                            mov rdi, rbx	       351	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_6
0x4000feb	      0xe837f3ffff	                  call sym.srec_get_byte	       351	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_6
0x4000ff0	          0x4189c4	                           mov r12d, eax	       351	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_6
0x4000ff3	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       351	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_6
0x4000ff6	     0xf84fd070000	                            je 0x40017f9	       351	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_6
0x4000ffc	          0x83f820	                           cmp eax, 0x20	       352	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1
0x4000fff	            0x74e2	                            je 0x4000fe3	       352	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1
0x4001001	          0x83f809	                              cmp eax, 9	       352	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1
0x4001004	     0xf8506080000	                           jne 0x4001810	       352	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1
0x400100a	            0xebd7	                           jmp 0x4000fe3	       352	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1
0x400100c	      0xbf0b000000	                            mov edi, 0xb	       365	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_8
0x4001011	      0xe800000000	                          call 0x4001016	       365	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_8
0x4001016	          0x4989c6	                            mov r14, rax	       365	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_8
0x4001019	          0x4885c0	                           test rax, rax	       366	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_6
0x400101c	     0xf84a5070000	                            je 0x40017c7	       366	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_6
0x4001022	        0x488d6801	                      lea rbp, [rax + 1]	       371	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1
0x4001026	          0x448820	                    mov byte [rax], r12b	       371	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1
0x4001029	    0x41bd0a000000	                           mov r13d, 0xa	       364	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1
0x400102f	            0xeb32	                           jmp 0x4001063	       372	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	CALL_9
0x4001031	          0x4989ef	                            mov r15, rbp	       375	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7
0x4001034	          0x4d29f7	                            sub r15, r14	       375	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7
0x4001037	          0x4d39fd	                            cmp r13, r15	       375	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7
0x400103a	            0x771f	                            ja 0x400105b	       375	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7
0x400103c	          0x4d01ed	                            add r13, r13	       379	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7
0x400103f	        0x498d7501	                      lea rsi, [r13 + 1]	       380	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7	CALL_11
0x4001043	          0x4c89f7	                            mov rdi, r14	       380	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7	CALL_11
0x4001046	      0xe800000000	                          call 0x400104b	       380	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7	CALL_11
0x400104b	          0x4885c0	                           test rax, rax	       381	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7	IF_8
0x400104e	     0xf8466070000	                            je 0x40017ba	       381	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7	IF_8
0x4001054	        0x4a8d2c38	                    lea rbp, [rax + r15]	       383	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7
0x4001058	          0x4989c6	                            mov r14, rax	       384	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	IF_7
0x400105b	        0x44886500	                    mov byte [rbp], r12b	       387	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3
0x400105f	        0x488d6d01	                      lea rbp, [rbp + 1]	       387	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3
0x4001063	      0x488d74243c	                   lea rsi, [rsp + 0x3c]	       372	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	CALL_9
0x4001068	          0x4889df	                            mov rdi, rbx	       372	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	CALL_9
0x400106b	      0xe8b7f2ffff	                  call sym.srec_get_byte	       372	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	CALL_9
0x4001070	          0x4189c4	                           mov r12d, eax	       372	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	CALL_9
0x4001073	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       372	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	CALL_9
0x4001076	            0x740f	                            je 0x4001087	       372	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	CALL_9
0x4001078	           0xfb6c0	                           movzx eax, al	       373	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	CALL_10
0x400107b	    0xf68400000000	            test byte [rax + rax], 0x40 	       373	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	CALL_10
0x4001083	            0x74ac	                            je 0x4001031	       373	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	CALL_10
0x4001085	            0xeb1a	                           jmp 0x40010a1	       373	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3	CALL_10
0x4001087	        0x8b4c243c	            mov ecx, dword [rsp + 0x3c] 	       392	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_9	CALL_12
0x400108b	      0xbaffffffff	                     mov edx, 0xffffffff	       392	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_9	CALL_12
0x4001090	        0x8b74241c	            mov esi, dword [rsp + 0x1c] 	       392	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_9	CALL_12
0x4001094	          0x4889df	                            mov rdi, rbx	       392	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_9	CALL_12
0x4001097	      0xe870fdffff	                  call sym.srec_bad_byte	       392	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_9	CALL_12
0x400109c	      0xe919070000	                           jmp 0x40017ba	       393	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_9
0x40010a1	        0xc6450000	                       mov byte [rbp], 0	       396	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1
0x40010a5	        0x488d7501	                      lea rsi, [rbp + 1]	       397	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_13
0x40010a9	          0x4c29f6	                            sub rsi, r14	       397	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_13
0x40010ac	          0x4889df	                            mov rdi, rbx	       397	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_13
0x40010af	      0xe800000000	                          call 0x40010b4	       397	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_13
0x40010b4	          0x4889c5	                            mov rbp, rax	       397	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_13
0x40010b7	          0x4885c0	                           test rax, rax	       398	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_10
0x40010ba	     0xf84fa060000	                            je 0x40017ba	       398	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_10
0x40010c0	          0x4c89f6	                            mov rsi, r14	       110	string3.h	FUNCTION_49	CALL_3
0x40010c3	          0x4889c7	                            mov rdi, rax	       110	string3.h	FUNCTION_49	CALL_3
0x40010c6	      0xe800000000	                          call 0x40010cb	       110	string3.h	FUNCTION_49	CALL_3
0x40010cb	          0x4c89f7	                            mov rdi, r14	       401	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_15
0x40010ce	      0xe800000000	                          call 0x40010d3	       401	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	CALL_15
0x40010d3	      0x488d74243c	                   lea rsi, [rsp + 0x3c]	       404	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_4	CALL_16
0x40010d8	          0x4889df	                            mov rdi, rbx	       404	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_4	CALL_16
0x40010db	      0xe847f2ffff	                  call sym.srec_get_byte	       404	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_4	CALL_16
0x40010e0	          0x4189c4	                           mov r12d, eax	       404	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_4	CALL_16
0x40010e3	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       404	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_4	CALL_16
0x40010e6	            0x740c	                            je 0x40010f4	       404	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_4	CALL_16
0x40010e8	          0x83f820	                           cmp eax, 0x20	       405	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_4
0x40010eb	            0x74e6	                            je 0x40010d3	       405	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_4
0x40010ed	          0x83f809	                              cmp eax, 9	       405	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_4
0x40010f0	            0x74e1	                            je 0x40010d3	       405	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_4
0x40010f2	            0xeb1a	                           jmp 0x400110e	       405	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_4
0x40010f4	        0x8b4c243c	            mov ecx, dword [rsp + 0x3c] 	       409	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_11	CALL_17
0x40010f8	      0xbaffffffff	                     mov edx, 0xffffffff	       409	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_11	CALL_17
0x40010fd	        0x8b74241c	            mov esi, dword [rsp + 0x1c] 	       409	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_11	CALL_17
0x4001101	          0x4889df	                            mov rdi, rbx	       409	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_11	CALL_17
0x4001104	      0xe803fdffff	                  call sym.srec_bad_byte	       409	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_11	CALL_17
0x4001109	      0xe9b9060000	                           jmp 0x40017c7	       410	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_11
0x400110e	          0x83f824	                           cmp eax, 0x24	       414	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_12
0x4001111	            0x7568	                           jne 0x400117b	       414	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_12
0x4001113	      0x488d74243c	                   lea rsi, [rsp + 0x3c]	       416	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_12	CALL_18
0x4001118	          0x4889df	                            mov rdi, rbx	       416	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_12	CALL_18
0x400111b	      0xe807f2ffff	                  call sym.srec_get_byte	       416	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_12	CALL_18
0x4001120	          0x4189c4	                           mov r12d, eax	       416	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_12	CALL_18
0x4001123	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       417	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_12	IF_13
0x4001126	            0x7553	                           jne 0x400117b	       417	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_12	IF_13
0x4001128	        0x8b4c243c	            mov ecx, dword [rsp + 0x3c] 	       419	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_12	IF_13	CALL_19
0x400112c	      0xbaffffffff	                     mov edx, 0xffffffff	       419	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_12	IF_13	CALL_19
0x4001131	        0x8b74241c	            mov esi, dword [rsp + 0x1c] 	       419	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_12	IF_13	CALL_19
0x4001135	          0x4889df	                            mov rdi, rbx	       419	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_12	IF_13	CALL_19
0x4001138	      0xe8cffcffff	                  call sym.srec_bad_byte	       419	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_12	IF_13	CALL_19
0x400113d	      0xe985060000	                           jmp 0x40017c7	       420	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_12	IF_13
0x4001142	        0x49c1e504	                              shl r13, 4	       427	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5
0x4001146	           0xfb6c0	                           movzx eax, al	       428	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5
0x4001149	          0x4901c5	                            add r13, rax	       428	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5
0x400114c	      0x488d74243c	                   lea rsi, [rsp + 0x3c]	       429	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5	CALL_20
0x4001151	          0x4889df	                            mov rdi, rbx	       429	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5	CALL_20
0x4001154	      0xe8cef1ffff	                  call sym.srec_get_byte	       429	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5	CALL_20
0x4001159	          0x4189c4	                           mov r12d, eax	       429	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5	CALL_20
0x400115c	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       430	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5	IF_14
0x400115f	            0x7520	                           jne 0x4001181	       430	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5	IF_14
0x4001161	        0x8b4c243c	            mov ecx, dword [rsp + 0x3c] 	       432	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5	IF_14	CALL_21
0x4001165	      0xbaffffffff	                     mov edx, 0xffffffff	       432	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5	IF_14	CALL_21
0x400116a	        0x8b74241c	            mov esi, dword [rsp + 0x1c] 	       432	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5	IF_14	CALL_21
0x400116e	          0x4889df	                            mov rdi, rbx	       432	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5	IF_14	CALL_21
0x4001171	      0xe896fcffff	                  call sym.srec_bad_byte	       432	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5	IF_14	CALL_21
0x4001176	      0xe94c060000	                           jmp 0x40017c7	       433	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5	IF_14
0x400117b	    0x41bd00000000	                             mov r13d, 0	       387	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_3
0x4001181	        0x410fb6c4	                         movzx eax, r12b	       425	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5
0x4001185	     0xfb680000000	                   movzx eax, byte [rax]	       425	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5
0x400118c	            0x3c63	                            cmp al, 0x63	       425	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5
0x400118e	            0x75b2	                           jne 0x4001142	       425	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	WHILE_5
0x4001190	      0xbe18000000	                           mov esi, 0x18	       273	srec.c	FUNCTION_5	CALL_1
0x4001195	          0x4889df	                            mov rdi, rbx	       273	srec.c	FUNCTION_5	CALL_1
0x4001198	      0xe800000000	                          call 0x400119d	       273	srec.c	FUNCTION_5	CALL_1
0x400119d	          0x4885c0	                           test rax, rax	       274	srec.c	FUNCTION_5	IF_1
0x40011a0	     0xf8421060000	                            je 0x40017c7	       274	srec.c	FUNCTION_5	IF_1
0x40011a6	        0x48896808	                mov qword [rax + 8], rbp	       277	srec.c	FUNCTION_5
0x40011aa	        0x4c896810	             mov qword [rax + 0x10], r13	       278	srec.c	FUNCTION_5
0x40011ae	    0x488b93f80000	            mov rdx, qword [rbx + 0xf8] 	       280	srec.c	FUNCTION_5	IF_2
0x40011b5	      0x48837a1800	               cmp qword [rdx + 0x18], 0	       280	srec.c	FUNCTION_5	IF_2
0x40011ba	            0x7506	                           jne 0x40011c2	       280	srec.c	FUNCTION_5	IF_2
0x40011bc	        0x48894218	             mov qword [rdx + 0x18], rax	       281	srec.c	FUNCTION_5	IF_2
0x40011c0	            0xeb07	                           jmp 0x40011c9	       281	srec.c	FUNCTION_5	IF_2
0x40011c2	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	       283	srec.c	FUNCTION_5	ELSE_1
0x40011c6	          0x488902	                    mov qword [rdx], rax	       283	srec.c	FUNCTION_5	ELSE_1
0x40011c9	    0x488b93f80000	            mov rdx, qword [rbx + 0xf8] 	       284	srec.c	FUNCTION_5	ELSE_1
0x40011d0	        0x48894220	             mov qword [rdx + 0x20], rax	       284	srec.c	FUNCTION_5	ELSE_1
0x40011d4	    0x48c700000000	                      mov qword [rax], 0	       285	srec.c	FUNCTION_5	ELSE_1
0x40011db	    0x8383b8000000	               add dword [rbx + 0xb8], 1	       287	srec.c	FUNCTION_5	ELSE_1
0x40011e2	        0x4183fc20	                          cmp r12d, 0x20	       441	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	WHILE_6
0x40011e6	     0xf84f7fdffff	                            je 0x4000fe3	       441	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	WHILE_6
0x40011ec	        0x4183fc09	                             cmp r12d, 9	       441	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	WHILE_6
0x40011f0	     0xf84edfdffff	                            je 0x4000fe3	       441	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	WHILE_6
0x40011f6	        0x4183fc0a	                           cmp r12d, 0xa	       443	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	IF_16
0x40011fa	            0x750a	                           jne 0x4001206	       443	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	IF_16
0x40011fc	      0x8344241c01	               add dword [rsp + 0x1c], 1	       444	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	IF_16
0x4001201	      0xe973050000	                           jmp 0x4001779	       444	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	IF_16
0x4001206	        0x4183fc0d	                           cmp r12d, 0xd	       445	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	IF_17
0x400120a	     0xf8469050000	                            je 0x4001779	       445	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	IF_17
0x4001210	        0x8b4c243c	            mov ecx, dword [rsp + 0x3c] 	       447	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	IF_17	CALL_23
0x4001214	          0x4489e2	                           mov edx, r12d	       447	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	IF_17	CALL_23
0x4001217	        0x8b74241c	            mov esi, dword [rsp + 0x1c] 	       447	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	IF_17	CALL_23
0x400121b	          0x4889df	                            mov rdi, rbx	       447	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	IF_17	CALL_23
0x400121e	      0xe8e9fbffff	                  call sym.srec_bad_byte	       447	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	IF_17	CALL_23
0x4001223	      0xe99f050000	                           jmp 0x40017c7	       448	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	IF_17
0x4001228	          0x4889df	                            mov rdi, rbx	       464	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	CALL_24
0x400122b	      0xe800000000	                          call 0x4001230	       464	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	CALL_24
0x4001230	      0x4889442428	             mov qword [rsp + 0x28], rax	       464	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	CALL_24
0x4001235	          0x4889da	                            mov rdx, rbx	       466	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_18	CALL_25
0x4001238	      0xbe03000000	                              mov esi, 3	       466	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_18	CALL_25
0x400123d	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       466	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_18	CALL_25
0x4001242	      0xe800000000	                          call 0x4001247	       466	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_18	CALL_25
0x4001247	        0x4883f803	                              cmp rax, 3	       466	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_18	CALL_25
0x400124b	     0xf8576050000	                           jne 0x40017c7	       466	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_18	CALL_25
0x4001251	       0xfb6542441	           movzx edx, byte [rsp + 0x41] 	       469	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19
0x4001256	          0x4863c2	                         movsxd rax, edx	       469	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19
0x4001259	     0xfb680000000	                   movzx eax, byte [rax]	       469	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19
0x4001260	            0x3c63	                            cmp al, 0x63	       469	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19
0x4001262	            0x7415	                            je 0x4001279	       469	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19
0x4001264	       0xfb6542442	           movzx edx, byte [rsp + 0x42] 	       469	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19
0x4001269	          0x4863ca	                         movsxd rcx, edx	       469	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19
0x400126c	     0xfb6a9000000	                   movzx ebp, byte [rcx]	       469	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19
0x4001273	        0x4080fd63	                           cmp bpl, 0x63	       469	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19
0x4001277	            0x7515	                           jne 0x400128e	       469	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19
0x4001279	        0x8b4c243c	            mov ecx, dword [rsp + 0x3c] 	       475	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19	CALL_26
0x400127d	        0x8b74241c	            mov esi, dword [rsp + 0x1c] 	       475	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19	CALL_26
0x4001281	          0x4889df	                            mov rdi, rbx	       475	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19	CALL_26
0x4001284	      0xe883fbffff	                  call sym.srec_bad_byte	       475	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19	CALL_26
0x4001289	      0xe939050000	                           jmp 0x40017c7	       476	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_19
0x400128e	           0xfb6c0	                           movzx eax, al	       479	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1
0x4001291	          0xc1e004	                              shl eax, 4	       479	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1
0x4001294	        0x400fb6ed	                          movzx ebp, bpl	       479	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1
0x4001298	             0x1c5	                            add ebp, eax	       479	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1
0x400129a	          0x4189ed	                           mov r13d, ebp	       479	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1
0x400129d	       0xfb6442440	           movzx eax, byte [rsp + 0x40] 	       481	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_21
0x40012a2	            0x3c32	                            cmp al, 0x32	       481	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_21
0x40012a4	            0x7415	                            je 0x40012bb	       481	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_21
0x40012a6	            0x3c38	                            cmp al, 0x38	       481	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_21
0x40012a8	            0x7411	                            je 0x40012bb	       481	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_21
0x40012aa	          0x83e0fb	                     and eax, 0xfffffffb	       483	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	ELSE_3	IF_22
0x40012ad	            0x3c33	                            cmp al, 0x33	       484	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	ELSE_3	IF_22
0x40012af	           0xf94c0	                                 sete al	       484	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	ELSE_3	IF_22
0x40012b2	           0xfb6c0	                           movzx eax, al	       484	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	ELSE_3	IF_22
0x40012b5	        0x8d440003	                lea eax, [rax + rax + 3]	       484	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	ELSE_3	IF_22
0x40012b9	            0xeb05	                           jmp 0x40012c0	       484	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	ELSE_3	IF_22
0x40012bb	      0xb804000000	                              mov eax, 4	       482	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_21
0x40012c0	            0x39e8	                            cmp eax, ebp	       485	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_23
0x40012c2	            0x7639	                           jbe 0x40012fd	       485	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_23
0x40012c4	      0xba05000000	                              mov edx, 5	       488	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_23	CALL_28
0x40012c9	      0xbe00000000	                              mov esi, 0	       488	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_23	CALL_28
0x40012ce	      0xbf00000000	                              mov edi, 0	       488	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_23	CALL_28
0x40012d3	      0xe800000000	                          call 0x40012d8	       488	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_23	CALL_28
0x40012d8	            0x89e9	                            mov ecx, ebp	       488	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_23	CALL_28
0x40012da	        0x8b54241c	            mov edx, dword [rsp + 0x1c] 	       488	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_23	CALL_28
0x40012de	          0x4889de	                            mov rsi, rbx	       488	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_23	CALL_28
0x40012e1	          0x4889c7	                            mov rdi, rax	       488	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_23	CALL_28
0x40012e4	      0xb800000000	                              mov eax, 0	       488	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_23	CALL_28
0x40012e9	      0xe800000000	                          call 0x40012ee	       488	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_23	CALL_28
0x40012ee	      0xbf11000000	                           mov edi, 0x11	       490	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_23	CALL_29
0x40012f3	      0xe800000000	                          call 0x40012f8	       490	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_23	CALL_29
0x40012f8	      0xe9ca040000	                           jmp 0x40017c7	       491	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_23
0x40012fd	      0x448d642d00	                   lea r12d, [rbp + rbp]	       494	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24
0x4001302	          0x4589e4	                          mov r12d, r12d	       494	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24
0x4001305	      0x4c39642420	            cmp qword [rsp + 0x20], r12 	       494	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24
0x400130a	            0x732f	                           jae 0x400133b	       494	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24
0x400130c	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       496	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24	IF_25
0x4001311	          0x4885c0	                           test rax, rax	       496	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24	IF_25
0x4001314	            0x7408	                            je 0x400131e	       496	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24	IF_25
0x4001316	          0x4889c7	                            mov rdi, rax	       497	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24	CALL_30
0x4001319	      0xe800000000	                          call 0x400131e	       497	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24	CALL_30
0x400131e	            0x89ef	                            mov edi, ebp	       498	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24	CALL_31
0x4001320	          0x4801ff	                            add rdi, rdi	       498	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24	CALL_31
0x4001323	      0xe800000000	                          call 0x4001328	       498	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24	CALL_31
0x4001328	      0x4889442410	             mov qword [rsp + 0x10], rax	       498	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24	CALL_31
0x400132d	          0x4885c0	                           test rax, rax	       499	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24	IF_26
0x4001330	     0xf8491040000	                            je 0x40017c7	       499	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24	IF_26
0x4001336	      0x4c89642420	             mov qword [rsp + 0x20], r12	       501	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_24
0x400133b	            0x89ee	                            mov esi, ebp	       504	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_27	CALL_32
0x400133d	          0x4801f6	                            add rsi, rsi	       504	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_27	CALL_32
0x4001340	          0x4889da	                            mov rdx, rbx	       504	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_27	CALL_32
0x4001343	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       504	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_27	CALL_32
0x4001348	      0xe800000000	                          call 0x400134d	       504	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_27	CALL_32
0x400134d	          0x4939c4	                            cmp r12, rax	       504	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_27	CALL_32
0x4001350	     0xf8571040000	                           jne 0x40017c7	       504	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	IF_27	CALL_32
0x4001356	        0x448d7dff	                     lea r15d, [rbp - 1]	       508	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1
0x400135a	       0xfb6442440	           movzx eax, byte [rsp + 0x40] 	       512	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400135f	          0x83e830	                           sub eax, 0x30	       512	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001362	            0x3c09	                               cmp al, 9	       512	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001364	     0xf870f040000	                            ja 0x4001779	       512	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400136a	           0xfb6c0	                           movzx eax, al	       512	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400136d	    0xff24c5000000	                       jmp qword [rax*8]	       512	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001374	    0x48c744240800	                  mov qword [rsp + 8], 0	       518	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400137d	      0xe9f7030000	                           jmp 0x4001779	       518	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001382	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       522	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001387	           0xfb607	                   movzx eax, byte [rdi]	       522	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400138a	     0xfb690000000	                   movzx edx, byte [rax]	       522	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001391	         0xfb64701	               movzx eax, byte [rdi + 1]	       522	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001395	     0xfb680000000	                   movzx eax, byte [rax]	       522	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400139c	          0x8d0c28	                    lea ecx, [rax + rbp]	       522	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400139f	          0x4189d5	                           mov r13d, edx	       522	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40013a2	        0x41c1e504	                             shl r13d, 4	       522	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40013a6	          0x4101cd	                           add r13d, ecx	       522	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40013a9	           0xfb6d2	                           movzx edx, dl	       523	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40013ac	          0xc1e204	                              shl edx, 4	       523	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40013af	           0xfb6c0	                           movzx eax, al	       523	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40013b2	             0x1d0	                            add eax, edx	       523	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40013b4	            0x89c0	                            mov eax, eax	       523	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40013b6	        0x488d7702	                      lea rsi, [rdi + 2]	       524	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40013ba	        0x448d7dfe	                     lea r15d, [rbp - 2]	       525	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40013be	            0xeb0a	                           jmp 0x40013ca	       525	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40013c0	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       512	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40013c5	      0xb800000000	                              mov eax, 0	       510	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1
0x40013ca	           0xfb616	                   movzx edx, byte [rsi]	       528	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40013cd	     0xfb68a000000	                   movzx ecx, byte [rdx]	       528	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40013d4	         0xfb65601	               movzx edx, byte [rsi + 1]	       528	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40013d8	     0xfb692000000	                   movzx edx, byte [rdx]	       528	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40013df	          0x4101d5	                           add r13d, edx	       528	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40013e2	            0x89cf	                            mov edi, ecx	       528	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40013e4	          0xc1e704	                              shl edi, 4	       528	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40013e7	          0x4101fd	                           add r13d, edi	       528	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40013ea	        0x48c1e008	                              shl rax, 8	       529	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40013ee	           0xfb6c9	                           movzx ecx, cl	       529	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40013f1	          0xc1e104	                              shl ecx, 4	       529	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40013f4	           0xfb6d2	                           movzx edx, dl	       529	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40013f7	             0x1ca	                            add edx, ecx	       529	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40013f9	            0x89d2	                            mov edx, edx	       529	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40013fb	          0x4809d0	                             or rax, rdx	       529	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40013fe	        0x488d6e02	                      lea rbp, [rsi + 2]	       530	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001402	        0x4183ef01	                             sub r15d, 1	       531	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001406	            0xeb0a	                           jmp 0x4001412	       531	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001408	      0x488b6c2410	            mov rbp, qword [rsp + 0x10] 	       512	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400140d	      0xb800000000	                              mov eax, 0	       510	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1
0x4001412	         0xfb65500	                   movzx edx, byte [rbp]	       534	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001416	     0xfb6ba000000	                   movzx edi, byte [rdx]	       534	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400141d	         0xfb65501	               movzx edx, byte [rbp + 1]	       534	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001421	     0xfb68a000000	                   movzx ecx, byte [rdx]	       534	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001428	        0x48c1e008	                              shl rax, 8	       535	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400142c	         0xfb65502	               movzx edx, byte [rbp + 2]	       537	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001430	     0xfb6b2000000	                   movzx esi, byte [rdx]	       537	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001437	         0xfb65503	               movzx edx, byte [rbp + 3]	       537	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400143b	     0xfb692000000	                   movzx edx, byte [rdx]	       537	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001442	        0x448d0411	                    lea r8d, [rcx + rdx]	       537	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001446	        0x478d2428	                    lea r12d, [r8 + r13]	       537	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400144a	          0x4189f8	                            mov r8d, edi	       537	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400144d	        0x41c1e004	                              shl r8d, 4	       537	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001451	          0x4501e0	                           add r8d, r12d	       537	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001454	          0x4189f4	                           mov r12d, esi	       537	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001457	        0x41c1e404	                             shl r12d, 4	       537	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400145b	          0x4501c4	                           add r12d, r8d	       537	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400145e	        0x440fb6ef	                         movzx r13d, dil	       538	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001462	          0x4489ef	                           mov edi, r13d	       538	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001465	          0xc1e704	                              shl edi, 4	       538	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001468	           0xfb6c9	                           movzx ecx, cl	       538	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400146b	        0x448d2c0f	                   lea r13d, [rdi + rcx]	       538	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400146f	          0x4589ed	                          mov r13d, r13d	       538	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001472	          0x4909c5	                             or r13, rax	       538	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001475	        0x49c1e508	                              shl r13, 8	       538	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001479	        0x400fb6f6	                          movzx esi, sil	       538	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400147d	          0xc1e604	                              shl esi, 4	       538	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001480	           0xfb6d2	                           movzx edx, dl	       538	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001483	             0x1f2	                            add edx, esi	       538	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001485	            0x89d2	                            mov edx, edx	       538	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001487	          0x4909d5	                             or r13, rdx	       538	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400148a	        0x4883c504	                              add rbp, 4	       539	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400148e	        0x458d77fe	                     lea r14d, [r15 - 2]	       540	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001492	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       542	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_28
0x4001497	          0x4885c9	                           test rcx, rcx	       542	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_28
0x400149a	            0x7434	                            je 0x40014d0	       542	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_28
0x400149c	        0x488b4138	            mov rax, qword [rcx + 0x38] 	       543	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_28
0x40014a0	          0x4889c2	                            mov rdx, rax	       543	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_28
0x40014a3	        0x48035128	             add rdx, qword [rcx + 0x28]	       543	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_28
0x40014a7	          0x4939d5	                            cmp r13, rdx	       543	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_28
0x40014aa	            0x7524	                           jne 0x40014d0	       543	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_28
0x40014ac	          0x4489f2	                           mov edx, r14d	       547	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_28
0x40014af	          0x4801d0	                            add rax, rdx	       547	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_28
0x40014b2	        0x48894138	             mov qword [rcx + 0x38], rax	       547	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_28
0x40014b6	        0x418d47fd	                      lea eax, [r15 - 3]	       547	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_28
0x40014ba	      0x488d4c4502	              lea rcx, [rbp + rax*2 + 2]	       547	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_28
0x40014bf	          0x4585f6	                         test r14d, r14d	       570	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	WHILE_7
0x40014c2	     0xf85ab000000	                           jne 0x4001573	       570	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	WHILE_7
0x40014c8	          0x4889e9	                            mov rcx, rbp	       570	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	WHILE_7
0x40014cb	      0xe9c7000000	                           jmp 0x4001597	       570	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	WHILE_7
0x40014d0	    0x448b83a00000	            mov r8d, dword [rbx + 0xa0] 	        33	stdio2.h	FUNCTION_26	CALL_1
0x40014d7	        0x4183c001	                              add r8d, 1	        33	stdio2.h	FUNCTION_26	CALL_1
0x40014db	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_26	CALL_1
0x40014e0	      0xba14000000	                           mov edx, 0x14	        33	stdio2.h	FUNCTION_26	CALL_1
0x40014e5	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_26	CALL_1
0x40014ea	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	        33	stdio2.h	FUNCTION_26	CALL_1
0x40014ef	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_26	CALL_1
0x40014f4	      0xe800000000	                          call 0x40014f9	        33	stdio2.h	FUNCTION_26	CALL_1
0x40014f9	      0xb800000000	                              mov eax, 0	       557	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_34
0x40014fe	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       557	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_34
0x4001505	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	       557	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_34
0x400150a	            0xf2ae	              repne scasb al, byte [rdi]	       557	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_34
0x400150c	          0x48f7d1	                                 not rcx	       557	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_34
0x400150f	          0x4889ce	                            mov rsi, rcx	       557	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_34
0x4001512	          0x4889df	                            mov rdi, rbx	       558	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_35
0x4001515	      0xe800000000	                          call 0x400151a	       558	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_35
0x400151a	      0x488d742450	                   lea rsi, [rsp + 0x50]	       110	string3.h	FUNCTION_49	CALL_3
0x400151f	      0x4889442408	                mov qword [rsp + 8], rax	       110	string3.h	FUNCTION_49	CALL_3
0x4001524	          0x4889c7	                            mov rdi, rax	       110	string3.h	FUNCTION_49	CALL_3
0x4001527	      0xe800000000	                          call 0x400152c	       110	string3.h	FUNCTION_49	CALL_3
0x400152c	      0xba03010000	                          mov edx, 0x103	       561	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_37
0x4001531	      0x488b742408	                mov rsi, qword [rsp + 8]	       561	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_37
0x4001536	          0x4889df	                            mov rdi, rbx	       561	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_37
0x4001539	      0xe800000000	                          call 0x400153e	       561	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_37
0x400153e	          0x4889c1	                            mov rcx, rax	       561	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_37
0x4001541	      0x4889442408	                mov qword [rsp + 8], rax	       561	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	CALL_37
0x4001546	          0x4885c0	                           test rax, rax	       562	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	IF_29
0x4001549	     0xf8478020000	                            je 0x40017c7	       562	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4	IF_29
0x400154f	        0x4c896828	             mov qword [rax + 0x28], r13	       564	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4
0x4001553	        0x4c896830	             mov qword [rax + 0x30], r13	       565	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4
0x4001557	          0x4489f2	                           mov edx, r14d	       566	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4
0x400155a	        0x48895038	             mov qword [rax + 0x38], rdx	       566	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4
0x400155e	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       567	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4
0x4001563	        0x4883e801	                              sub rax, 1	       567	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4
0x4001567	    0x488981900000	             mov qword [rcx + 0x90], rax	       567	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4
0x400156e	      0xe943ffffff	                           jmp 0x40014b6	       567	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	ELSE_4
0x4001573	         0xfb64500	                   movzx eax, byte [rbp]	       572	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	WHILE_7
0x4001577	     0xfb680000000	                   movzx eax, byte [rax]	       572	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	WHILE_7
0x400157e	          0xc1e004	                              shl eax, 4	       572	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	WHILE_7
0x4001581	         0xfb65501	               movzx edx, byte [rbp + 1]	       572	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	WHILE_7
0x4001585	     0x28200000000	                      add al, byte [rdx]	       572	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	WHILE_7
0x400158b	          0x4101c4	                           add r12d, eax	       572	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	WHILE_7
0x400158e	        0x4883c502	                              add rbp, 2	       573	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	WHILE_7
0x4001592	          0x4839cd	                            cmp rbp, rcx	       570	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	WHILE_7
0x4001595	            0x75dc	                           jne 0x4001573	       570	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	WHILE_7
0x4001597	          0x41f7d4	                                not r12d	       577	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30
0x400159a	        0x410fb6c4	                         movzx eax, r12b	       577	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30
0x400159e	           0xfb611	                   movzx edx, byte [rcx]	       577	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30
0x40015a1	     0xfb692000000	                   movzx edx, byte [rdx]	       577	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30
0x40015a8	          0xc1e204	                              shl edx, 4	       577	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30
0x40015ab	            0x89d6	                            mov esi, edx	       577	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30
0x40015ad	         0xfb65101	               movzx edx, byte [rcx + 1]	       577	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30
0x40015b1	     0xfb692000000	                   movzx edx, byte [rdx]	       577	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30
0x40015b8	             0x1f2	                            add edx, esi	       577	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30
0x40015ba	            0x39d0	                            cmp eax, edx	       577	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30
0x40015bc	     0xf84b7010000	                            je 0x4001779	       577	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30
0x40015c2	      0xba05000000	                              mov edx, 5	       581	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30	CALL_39
0x40015c7	      0xbe00000000	                              mov esi, 0	       581	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30	CALL_39
0x40015cc	      0xbf00000000	                              mov edi, 0	       581	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30	CALL_39
0x40015d1	      0xe800000000	                          call 0x40015d6	       581	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30	CALL_39
0x40015d6	        0x8b54241c	            mov edx, dword [rsp + 0x1c] 	       579	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30	CALL_38
0x40015da	          0x4889de	                            mov rsi, rbx	       579	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30	CALL_38
0x40015dd	          0x4889c7	                            mov rdi, rax	       579	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30	CALL_38
0x40015e0	      0xb800000000	                              mov eax, 0	       579	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30	CALL_38
0x40015e5	      0xe800000000	                          call 0x40015ea	       579	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30	CALL_38
0x40015ea	      0xbf11000000	                           mov edi, 0x11	       583	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30	CALL_40
0x40015ef	      0xe800000000	                          call 0x40015f4	       583	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30	CALL_40
0x40015f4	      0xe9ce010000	                           jmp 0x40017c7	       584	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_30
0x40015f9	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       590	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40015fe	           0xfb607	                   movzx eax, byte [rdi]	       590	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001601	     0xfb690000000	                   movzx edx, byte [rax]	       590	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001608	         0xfb64701	               movzx eax, byte [rdi + 1]	       590	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400160c	     0xfb680000000	                   movzx eax, byte [rax]	       590	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001613	          0x4101c5	                           add r13d, eax	       590	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001616	            0x89d1	                            mov ecx, edx	       590	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001618	          0xc1e104	                              shl ecx, 4	       590	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400161b	          0x4101cd	                           add r13d, ecx	       590	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400161e	        0x440fb6ca	                           movzx r9d, dl	       591	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001622	        0x41c1e104	                              shl r9d, 4	       591	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001626	           0xfb6c0	                           movzx eax, al	       591	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001629	          0x4101c1	                            add r9d, eax	       591	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400162c	          0x4589c9	                            mov r9d, r9d	       591	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400162f	        0x488d7702	                      lea rsi, [rdi + 2]	       592	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001633	            0xeb0b	                           jmp 0x4001640	       592	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001635	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       512	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400163a	    0x41b900000000	                              mov r9d, 0	       510	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1
0x4001640	           0xfb606	                   movzx eax, byte [rsi]	       595	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001643	     0xfb690000000	                   movzx edx, byte [rax]	       595	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400164a	         0xfb64601	               movzx eax, byte [rsi + 1]	       595	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400164e	     0xfb680000000	                   movzx eax, byte [rax]	       595	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001655	          0x4101c5	                           add r13d, eax	       595	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001658	            0x89d1	                            mov ecx, edx	       595	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400165a	          0xc1e104	                              shl ecx, 4	       595	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400165d	          0x4101cd	                           add r13d, ecx	       595	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001660	        0x49c1e108	                               shl r9, 8	       596	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001664	           0xfb6d2	                           movzx edx, dl	       596	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001667	          0xc1e204	                              shl edx, 4	       596	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400166a	           0xfb6c0	                           movzx eax, al	       596	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400166d	             0x1d0	                            add eax, edx	       596	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400166f	            0x89c0	                            mov eax, eax	       596	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001671	          0x4909c1	                              or r9, rax	       596	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001674	        0x4883c602	                              add rsi, 2	       597	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001678	            0xeb0b	                           jmp 0x4001685	       597	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400167a	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       512	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400167f	    0x41b900000000	                              mov r9d, 0	       510	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1
0x4001685	           0xfb606	                   movzx eax, byte [rsi]	       600	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001688	    0x440fb6900000	                  movzx r10d, byte [rax]	       600	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001690	         0xfb64601	               movzx eax, byte [rsi + 1]	       600	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001694	     0xfb680000000	                   movzx eax, byte [rax]	       600	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400169b	        0x49c1e108	                               shl r9, 8	       601	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x400169f	         0xfb65602	               movzx edx, byte [rsi + 2]	       603	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40016a3	     0xfb692000000	                   movzx edx, byte [rdx]	       603	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40016aa	         0xfb64e03	               movzx ecx, byte [rsi + 3]	       603	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40016ae	    0x440fb6810000	                   movzx r8d, byte [rcx]	       603	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40016b6	        0x428d0c00	                     lea ecx, [rax + r8]	       603	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40016ba	          0x4101cd	                           add r13d, ecx	       603	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40016bd	          0x4489d7	                           mov edi, r10d	       603	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40016c0	          0xc1e704	                              shl edi, 4	       603	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40016c3	          0x4101fd	                           add r13d, edi	       603	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40016c6	            0x89d7	                            mov edi, edx	       603	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40016c8	          0xc1e704	                              shl edi, 4	       603	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40016cb	          0x4401ef	                           add edi, r13d	       603	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40016ce	        0x450fb6d2	                        movzx r10d, r10b	       604	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40016d2	        0x41c1e204	                             shl r10d, 4	       604	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40016d6	           0xfb6c8	                           movzx ecx, al	       604	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40016d9	          0x4401d1	                           add ecx, r10d	       604	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40016dc	            0x89c8	                            mov eax, ecx	       604	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40016de	          0x4c09c8	                              or rax, r9	       604	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40016e1	        0x48c1e008	                              shl rax, 8	       604	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40016e5	          0x4889c1	                            mov rcx, rax	       604	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40016e8	           0xfb6d2	                           movzx edx, dl	       608	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40016eb	            0x89d0	                            mov eax, edx	       608	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40016ed	          0xc1e004	                              shl eax, 4	       608	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40016f0	        0x410fb6d0	                          movzx edx, r8b	       608	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40016f4	             0x1c2	                            add edx, eax	       608	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40016f6	            0x89d0	                            mov eax, edx	       608	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40016f8	          0x4809c8	                             or rax, rcx	       608	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x40016fb	    0x488983a80000	             mov qword [rbx + 0xa8], rax	       608	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001702	            0xf7d7	                                 not edi	       611	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31
0x4001704	        0x400fb6c7	                          movzx eax, dil	       611	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31
0x4001708	         0xfb65604	               movzx edx, byte [rsi + 4]	       611	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31
0x400170c	     0xfb692000000	                   movzx edx, byte [rdx]	       611	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31
0x4001713	            0x89d1	                            mov ecx, edx	       611	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31
0x4001715	          0xc1e104	                              shl ecx, 4	       611	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31
0x4001718	         0xfb65605	               movzx edx, byte [rsi + 5]	       611	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31
0x400171c	     0xfb692000000	                   movzx edx, byte [rdx]	       611	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31
0x4001723	             0x1ca	                            add edx, ecx	       611	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31
0x4001725	            0x39d0	                            cmp eax, edx	       611	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31
0x4001727	            0x7434	                            je 0x400175d	       611	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31
0x4001729	      0xba05000000	                              mov edx, 5	       615	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31	CALL_42
0x400172e	      0xbe00000000	                              mov esi, 0	       615	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31	CALL_42
0x4001733	      0xbf00000000	                              mov edi, 0	       615	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31	CALL_42
0x4001738	      0xe800000000	                          call 0x400173d	       615	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31	CALL_42
0x400173d	        0x8b54241c	            mov edx, dword [rsp + 0x1c] 	       613	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31	CALL_41
0x4001741	          0x4889de	                            mov rsi, rbx	       613	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31	CALL_41
0x4001744	          0x4889c7	                            mov rdi, rax	       613	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31	CALL_41
0x4001747	      0xb800000000	                              mov eax, 0	       613	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31	CALL_41
0x400174c	      0xe800000000	                          call 0x4001751	       613	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31	CALL_41
0x4001751	      0xbf11000000	                           mov edi, 0x11	       617	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31	CALL_43
0x4001756	      0xe800000000	                          call 0x400175b	       617	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31	CALL_43
0x400175b	            0xeb6a	                           jmp 0x40017c7	       618	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_31
0x400175d	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       621	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_32
0x4001762	          0x4885c0	                           test rax, rax	       621	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_32
0x4001765	            0x7408	                            je 0x400176f	       621	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	IF_32
0x4001767	          0x4889c7	                            mov rdi, rax	       622	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	CALL_44
0x400176a	      0xe800000000	                          call 0x400176f	       622	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2	CALL_44
0x400176f	    0xc74424180100	               mov dword [rsp + 0x18], 1	       624	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001777	            0xeb6a	                           jmp 0x40017e3	       624	srec.c	FUNCTION_6	WHILE_1	SWITCH_1	ELSE_1	SWITCH_2
0x4001779	      0x488d74243c	                   lea rsi, [rsp + 0x3c]	       309	srec.c	ELSE_1	FUNCTION_6	WHILE_1	CALL_2
0x400177e	          0x4889df	                            mov rdi, rbx	       309	srec.c	ELSE_1	FUNCTION_6	WHILE_1	CALL_2
0x4001781	      0xe8a1ebffff	                  call sym.srec_get_byte	       309	srec.c	ELSE_1	FUNCTION_6	WHILE_1	CALL_2
0x4001786	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       309	srec.c	ELSE_1	FUNCTION_6	WHILE_1	CALL_2
0x4001789	     0xf859ff7ffff	                           jne 0x4000f2e	       309	srec.c	ELSE_1	FUNCTION_6	WHILE_1	CALL_2
0x400178f	      0x837c243c00	               cmp dword [rsp + 0x3c], 0	       631	srec.c	FUNCTION_6	ELSE_1	IF_33
0x4001794	            0x7531	                           jne 0x40017c7	       631	srec.c	FUNCTION_6	ELSE_1	IF_33
0x4001796	    0xc74424180100	               mov dword [rsp + 0x18], 1	       637	srec.c	FUNCTION_6	ELSE_1
0x400179e	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       634	srec.c	FUNCTION_6	ELSE_1	IF_34
0x40017a3	          0x4885c0	                           test rax, rax	       634	srec.c	FUNCTION_6	ELSE_1	IF_34
0x40017a6	            0x743b	                            je 0x40017e3	       634	srec.c	FUNCTION_6	ELSE_1	IF_34
0x40017a8	          0x4889c7	                            mov rdi, rax	       635	srec.c	FUNCTION_6	ELSE_1	CALL_45
0x40017ab	      0xe800000000	                          call 0x40017b0	       635	srec.c	FUNCTION_6	ELSE_1	CALL_45
0x40017b0	    0xc74424180100	               mov dword [rsp + 0x18], 1	       637	srec.c	FUNCTION_6	ELSE_1
0x40017b8	            0xeb29	                           jmp 0x40017e3	       637	srec.c	FUNCTION_6	ELSE_1
0x40017ba	          0x4d85f6	                           test r14, r14	       640	srec.c	FUNCTION_6	ELSE_1	IF_35
0x40017bd	            0x7408	                            je 0x40017c7	       640	srec.c	FUNCTION_6	ELSE_1	IF_35
0x40017bf	          0x4c89f7	                            mov rdi, r14	       641	srec.c	FUNCTION_6	ELSE_1	CALL_46
0x40017c2	      0xe800000000	                          call 0x40017c7	       641	srec.c	FUNCTION_6	ELSE_1	CALL_46
0x40017c7	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       642	srec.c	FUNCTION_6	ELSE_1	IF_36
0x40017cc	          0x4885c0	                           test rax, rax	       642	srec.c	FUNCTION_6	ELSE_1	IF_36
0x40017cf	            0x7412	                            je 0x40017e3	       642	srec.c	FUNCTION_6	ELSE_1	IF_36
0x40017d1	          0x4889c7	                            mov rdi, rax	       643	srec.c	FUNCTION_6	ELSE_1	CALL_47
0x40017d4	      0xe800000000	                          call 0x40017d9	       643	srec.c	FUNCTION_6	ELSE_1	CALL_47
0x40017d9	            0xeb08	                           jmp 0x40017e3	       643	srec.c	FUNCTION_6	ELSE_1	CALL_47
0x40017db	    0xc74424180000	               mov dword [rsp + 0x18], 0	       644	srec.c	FUNCTION_6	ELSE_1
0x40017e3	        0x8b442418	            mov eax, dword [rsp + 0x18] 	       645	srec.c	FUNCTION_6	ELSE_1
0x40017e7	      0x488b4c2468	            mov rcx, qword [rsp + 0x68] 	       645	srec.c	FUNCTION_6	ELSE_1
0x40017ec	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       645	srec.c	FUNCTION_6	ELSE_1
0x40017f5	            0x7435	                            je 0x400182c	       645	srec.c	FUNCTION_6	ELSE_1
0x40017f7	            0xeb2e	                           jmp 0x4001827	       645	srec.c	FUNCTION_6	ELSE_1
0x40017f9	        0x8b4c243c	            mov ecx, dword [rsp + 0x3c] 	       360	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_5	CALL_7
0x40017fd	      0xbaffffffff	                     mov edx, 0xffffffff	       360	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_5	CALL_7
0x4001802	        0x8b74241c	            mov esi, dword [rsp + 0x1c] 	       360	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_5	CALL_7
0x4001806	          0x4889df	                            mov rdi, rbx	       360	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_5	CALL_7
0x4001809	      0xe8fef5ffff	                  call sym.srec_bad_byte	       360	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_5	CALL_7
0x400180e	            0xebb7	                           jmp 0x40017c7	       361	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_5
0x4001810	          0x83f80a	                            cmp eax, 0xa	       355	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_4
0x4001813	     0xf84ddf9ffff	                            je 0x40011f6	       355	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_4
0x4001819	          0x83f80d	                            cmp eax, 0xd	       355	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_4
0x400181c	     0xf85eaf7ffff	                           jne 0x400100c	       355	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_4
0x4001822	      0xe9cff9ffff	                           jmp 0x40011f6	       355	srec.c	ELSE_1	FUNCTION_6	WHILE_1	SWITCH_1	DO_1	IF_4
0x4001827	      0xe800000000	                          call 0x400182c	       645	srec.c	FUNCTION_6	ELSE_1
0x400182c	        0x4883c478	                           add rsp, 0x78	       645	srec.c	FUNCTION_6	ELSE_1
0x4001830	              0x5b	                                 pop rbx	       645	srec.c	FUNCTION_6	ELSE_1
0x4001831	              0x5d	                                 pop rbp	       645	srec.c	FUNCTION_6	ELSE_1
0x4001832	            0x415c	                                 pop r12	       645	srec.c	FUNCTION_6	ELSE_1
0x4001834	            0x415d	                                 pop r13	       645	srec.c	FUNCTION_6	ELSE_1
0x4001836	            0x415e	                                 pop r14	       645	srec.c	FUNCTION_6	ELSE_1
0x4001838	            0x415f	                                 pop r15	       645	srec.c	FUNCTION_6	ELSE_1
0x400183a	              0xc3	                                     ret	       645	srec.c	FUNCTION_6	ELSE_1
symbolsrec_object_p	CALL,7:IF,5:functions,0:FOR,0:ELSE,0:WHILE,0:DO,0:SWITCH,0	62
0x4001951	              0x55	                                push rbp	       686	srec.c	FUNCTION_8
0x4001952	              0x53	                                push rbx	       686	srec.c	FUNCTION_8
0x4001953	        0x4883ec18	                           sub rsp, 0x18	       686	srec.c	FUNCTION_8
0x4001957	          0x4889fb	                            mov rbx, rdi	       686	srec.c	FUNCTION_8
0x400195a	    0x64488b042528	                mov rax, qword fs:[0x28]	       686	srec.c	FUNCTION_8
0x4001963	      0x4889442408	                mov qword [rsp + 8], rax	       686	srec.c	FUNCTION_8
0x4001968	            0x31c0	                            xor eax, eax	       686	srec.c	FUNCTION_8
0x400196a	      0xe81df4ffff	                      call sym.srec_init	       690	srec.c	FUNCTION_8	CALL_1
0x400196f	      0xba00000000	                              mov edx, 0	       692	srec.c	FUNCTION_8	IF_1	CALL_2
0x4001974	      0xbe00000000	                              mov esi, 0	       692	srec.c	FUNCTION_8	IF_1	CALL_2
0x4001979	          0x4889df	                            mov rdi, rbx	       692	srec.c	FUNCTION_8	IF_1	CALL_2
0x400197c	      0xe800000000	                          call 0x4001981	       692	srec.c	FUNCTION_8	IF_1	CALL_2
0x4001981	      0xba00000000	                              mov edx, 0	       694	srec.c	FUNCTION_8	IF_1
0x4001986	            0x85c0	                           test eax, eax	       692	srec.c	FUNCTION_8	IF_1	CALL_2
0x4001988	     0xf8593000000	                           jne 0x4001a21	       692	srec.c	FUNCTION_8	IF_1	CALL_2
0x400198e	          0x4889da	                            mov rdx, rbx	       693	srec.c	FUNCTION_8	IF_1	CALL_3
0x4001991	      0xbe02000000	                              mov esi, 2	       693	srec.c	FUNCTION_8	IF_1	CALL_3
0x4001996	          0x4889e7	                            mov rdi, rsp	       693	srec.c	FUNCTION_8	IF_1	CALL_3
0x4001999	      0xe800000000	                          call 0x400199e	       693	srec.c	FUNCTION_8	IF_1	CALL_3
0x400199e	      0xba00000000	                              mov edx, 0	       694	srec.c	FUNCTION_8	IF_1
0x40019a3	        0x4883f802	                              cmp rax, 2	       693	srec.c	FUNCTION_8	IF_1	CALL_3
0x40019a7	            0x7578	                           jne 0x4001a21	       693	srec.c	FUNCTION_8	IF_1	CALL_3
0x40019a9	        0x803c2424	                    cmp byte [rsp], 0x24	       696	srec.c	FUNCTION_8	IF_2
0x40019ad	            0x7507	                           jne 0x40019b6	       696	srec.c	FUNCTION_8	IF_2
0x40019af	      0x807c240124	                cmp byte [rsp + 1], 0x24	       696	srec.c	FUNCTION_8	IF_2
0x40019b4	            0x7411	                            je 0x40019c7	       696	srec.c	FUNCTION_8	IF_2
0x40019b6	      0xbf03000000	                              mov edi, 3	       698	srec.c	FUNCTION_8	IF_2	CALL_4
0x40019bb	      0xe800000000	                          call 0x40019c0	       698	srec.c	FUNCTION_8	IF_2	CALL_4
0x40019c0	      0xba00000000	                              mov edx, 0	       699	srec.c	FUNCTION_8	IF_2
0x40019c5	            0xeb5a	                           jmp 0x4001a21	       699	srec.c	FUNCTION_8	IF_2
0x40019c7	    0x488babf80000	            mov rbp, qword [rbx + 0xf8] 	       702	srec.c	FUNCTION_8
0x40019ce	          0x4889df	                            mov rdi, rbx	       703	srec.c	FUNCTION_8	IF_3	CALL_6
0x40019d1	      0xe8d8f3ffff	                  call sym.srec_mkobject	       703	srec.c	FUNCTION_8	IF_3	CALL_6
0x40019d6	            0x85c0	                           test eax, eax	       703	srec.c	FUNCTION_8	IF_3	CALL_6
0x40019d8	            0x740c	                            je 0x40019e6	       703	srec.c	FUNCTION_8	IF_3	CALL_6
0x40019da	          0x4889df	                            mov rdi, rbx	       703	srec.c	FUNCTION_8	IF_3	CALL_6
0x40019dd	      0xe8e0f4ffff	                      call sym.srec_scan	       703	srec.c	FUNCTION_8	IF_3	CALL_6
0x40019e2	            0x85c0	                           test eax, eax	       703	srec.c	FUNCTION_8	IF_3	CALL_6
0x40019e4	            0x7527	                           jne 0x4001a0d	       703	srec.c	FUNCTION_8	IF_3	CALL_6
0x40019e6	    0x488bb3f80000	            mov rsi, qword [rbx + 0xf8] 	       705	srec.c	FUNCTION_8	IF_3	IF_4
0x40019ed	          0x4885f6	                           test rsi, rsi	       705	srec.c	FUNCTION_8	IF_3	IF_4
0x40019f0	            0x740d	                            je 0x40019ff	       705	srec.c	FUNCTION_8	IF_3	IF_4
0x40019f2	          0x4839f5	                            cmp rbp, rsi	       705	srec.c	FUNCTION_8	IF_3	IF_4
0x40019f5	            0x7408	                            je 0x40019ff	       705	srec.c	FUNCTION_8	IF_3	IF_4
0x40019f7	          0x4889df	                            mov rdi, rbx	       706	srec.c	FUNCTION_8	IF_3	CALL_7
0x40019fa	      0xe800000000	                          call 0x40019ff	       706	srec.c	FUNCTION_8	IF_3	CALL_7
0x40019ff	    0x4889abf80000	             mov qword [rbx + 0xf8], rbp	       707	srec.c	FUNCTION_8	IF_3
0x4001a06	      0xba00000000	                              mov edx, 0	       708	srec.c	FUNCTION_8	IF_3
0x4001a0b	            0xeb14	                           jmp 0x4001a21	       708	srec.c	FUNCTION_8	IF_3
0x4001a0d	    0x83bbb8000000	               cmp dword [rbx + 0xb8], 0	       711	srec.c	FUNCTION_8	IF_5
0x4001a14	            0x7407	                            je 0x4001a1d	       711	srec.c	FUNCTION_8	IF_5
0x4001a16	    0x814b44000200	            or dword [rbx + 0x44], 0x200	       712	srec.c	FUNCTION_8	IF_5
0x4001a1d	        0x488b5308	                mov rdx, qword [rbx + 8]	       714	srec.c	FUNCTION_8
0x4001a21	          0x4889d0	                            mov rax, rdx	       715	srec.c	FUNCTION_8
0x4001a24	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       715	srec.c	FUNCTION_8
0x4001a29	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       715	srec.c	FUNCTION_8
0x4001a32	            0x7405	                            je 0x4001a39	       715	srec.c	FUNCTION_8
0x4001a34	      0xe800000000	                          call 0x4001a39	       715	srec.c	FUNCTION_8
0x4001a39	        0x4883c418	                           add rsp, 0x18	       715	srec.c	FUNCTION_8
0x4001a3d	              0x5b	                                 pop rbx	       715	srec.c	FUNCTION_8
0x4001a3e	              0x5d	                                 pop rbp	       715	srec.c	FUNCTION_8
0x4001a3f	              0xc3	                                     ret	       715	srec.c	FUNCTION_8
internal_srec_write_object_contents	CALL,4:IF,4:functions,0:FOR,0:ELSE,0:WHILE,1:DO,0:SWITCH,0	228
0x40009e9	            0x4157	                                push r15	      1136	srec.c	FUNCTION_18
0x40009eb	            0x4156	                                push r14	      1136	srec.c	FUNCTION_18
0x40009ed	            0x4155	                                push r13	      1136	srec.c	FUNCTION_18
0x40009ef	            0x4154	                                push r12	      1136	srec.c	FUNCTION_18
0x40009f1	              0x55	                                push rbp	      1136	srec.c	FUNCTION_18
0x40009f2	              0x53	                                push rbx	      1136	srec.c	FUNCTION_18
0x40009f3	        0x4883ec58	                           sub rsp, 0x58	      1136	srec.c	FUNCTION_18
0x40009f7	          0x4889f8	                            mov rax, rdi	      1136	srec.c	FUNCTION_18
0x40009fa	        0x48893c24	                    mov qword [rsp], rdi	      1136	srec.c	FUNCTION_18
0x40009fe	    0x64488b3c2528	                mov rdi, qword fs:[0x28]	      1136	srec.c	FUNCTION_18
0x4000a07	      0x48897c2448	             mov qword [rsp + 0x48], rdi	      1136	srec.c	FUNCTION_18
0x4000a0c	            0x31ff	                            xor edi, edi	      1136	srec.c	FUNCTION_18
0x4000a0e	    0x4c8bb8f80000	            mov r15, qword [rax + 0xf8] 	      1137	srec.c	FUNCTION_18
0x4000a15	            0x85f6	                           test esi, esi	      1140	srec.c	FUNCTION_18	IF_1
0x4000a17	     0xf84e3010000	                            je 0x4000c00	      1140	srec.c	FUNCTION_18	IF_1
0x4000a1d	    0x8b98b8000000	            mov ebx, dword [rax + 0xb8] 	      1084	srec.c	FUNCTION_17	CALL_1
0x4000a23	            0x85db	                           test ebx, ebx	      1086	srec.c	FUNCTION_17	IF_1
0x4000a25	     0xf84d5010000	                            je 0x4000c00	      1086	srec.c	FUNCTION_17	IF_1
0x4000a2b	          0x4889c2	                            mov rdx, rax	      1089	srec.c	FUNCTION_17	IF_1	CALL_2
0x4000a2e	    0x488ba8b00000	            mov rbp, qword [rax + 0xb0] 	      1089	srec.c	FUNCTION_17	IF_1	CALL_2
0x4000a35	          0x488b38	                    mov rdi, qword [rax]	      1091	srec.c	FUNCTION_17	IF_1	CALL_3
0x4000a38	      0xb800000000	                              mov eax, 0	      1091	srec.c	FUNCTION_17	IF_1	CALL_3
0x4000a3d	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1091	srec.c	FUNCTION_17	IF_1	CALL_3
0x4000a44	            0xf2ae	              repne scasb al, byte [rdi]	      1091	srec.c	FUNCTION_17	IF_1	CALL_3
0x4000a46	          0x4889c8	                            mov rax, rcx	      1091	srec.c	FUNCTION_17	IF_1	CALL_3
0x4000a49	          0x48f7d0	                                 not rax	      1091	srec.c	FUNCTION_17	IF_1	CALL_3
0x4000a4c	        0x4c8d60ff	                      lea r12, [rax - 1]	      1091	srec.c	FUNCTION_17	IF_1	CALL_3
0x4000a50	      0xbe03000000	                              mov esi, 3	      1092	srec.c	FUNCTION_17	IF_1	IF_2	CALL_4
0x4000a55	      0xbf00000000	                              mov edi, 0	      1092	srec.c	FUNCTION_17	IF_1	IF_2	CALL_4
0x4000a5a	      0xe800000000	                          call 0x4000a5f	      1092	srec.c	FUNCTION_17	IF_1	IF_2	CALL_4
0x4000a5f	        0x4883f803	                              cmp rax, 3	      1092	srec.c	FUNCTION_17	IF_1	IF_2	CALL_4
0x4000a63	     0xf85d4020000	                           jne 0x4000d3d	      1092	srec.c	FUNCTION_17	IF_1	IF_2	CALL_4
0x4000a69	        0x488b0424	                    mov rax, qword [rsp]	      1093	srec.c	FUNCTION_17	IF_1	IF_2	CALL_5
0x4000a6d	          0x4889c2	                            mov rdx, rax	      1093	srec.c	FUNCTION_17	IF_1	IF_2	CALL_5
0x4000a70	          0x4c89e6	                            mov rsi, r12	      1093	srec.c	FUNCTION_17	IF_1	IF_2	CALL_5
0x4000a73	          0x488b38	                    mov rdi, qword [rax]	      1093	srec.c	FUNCTION_17	IF_1	IF_2	CALL_5
0x4000a76	      0xe800000000	                          call 0x4000a7b	      1093	srec.c	FUNCTION_17	IF_1	IF_2	CALL_5
0x4000a7b	          0x4939c4	                            cmp r12, rax	      1093	srec.c	FUNCTION_17	IF_1	IF_2	CALL_5
0x4000a7e	     0xf85b9020000	                           jne 0x4000d3d	      1093	srec.c	FUNCTION_17	IF_1	IF_2	CALL_5
0x4000a84	        0x488b1424	                    mov rdx, qword [rsp]	      1094	srec.c	FUNCTION_17	IF_1	IF_2	CALL_6
0x4000a88	      0xbe02000000	                              mov esi, 2	      1094	srec.c	FUNCTION_17	IF_1	IF_2	CALL_6
0x4000a8d	      0xbf00000000	                              mov edi, 0	      1094	srec.c	FUNCTION_17	IF_1	IF_2	CALL_6
0x4000a92	      0xe800000000	                          call 0x4000a97	      1094	srec.c	FUNCTION_17	IF_1	IF_2	CALL_6
0x4000a97	        0x4883f802	                              cmp rax, 2	      1094	srec.c	FUNCTION_17	IF_1	IF_2	CALL_6
0x4000a9b	     0xf859c020000	                           jne 0x4000d3d	      1094	srec.c	FUNCTION_17	IF_1	IF_2	CALL_6
0x4000aa1	            0x85db	                           test ebx, ebx	      1097	srec.c	FUNCTION_17	IF_1	FOR_1
0x4000aa3	     0xf8e3a010000	                           jle 0x4000be3	      1097	srec.c	FUNCTION_17	IF_1	FOR_1
0x4000aa9	          0x4989ec	                            mov r12, rbp	      1097	srec.c	FUNCTION_17	IF_1	FOR_1
0x4000aac	          0x8d43ff	                      lea eax, [rbx - 1]	      1097	srec.c	FUNCTION_17	IF_1	FOR_1
0x4000aaf	      0x4c8d74c508	              lea r14, [rbp + rax*8 + 8]	      1097	srec.c	FUNCTION_17	IF_1	FOR_1
0x4000ab4	    0x41bd00000000	                             mov r13d, 0	      1106	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_8
0x4000aba	      0x488d442412	                   lea rax, [rsp + 0x12]	        33	stdio2.h	FUNCTION_26	CALL_1
0x4000abf	      0x4889442408	                mov qword [rsp + 8], rax	        33	stdio2.h	FUNCTION_26	CALL_1
0x4000ac4	        0x498b1c24	                    mov rbx, qword [r12]	      1099	srec.c	FUNCTION_17	IF_1	FOR_1
0x4000ac8	          0x4889de	                            mov rsi, rbx	      1100	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_7
0x4000acb	        0x488b3c24	                    mov rdi, qword [rsp]	      1100	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_7
0x4000acf	      0xe800000000	                          call 0x4000ad4	      1100	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_7
0x4000ad4	            0x85c0	                           test eax, eax	      1100	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_7
0x4000ad6	     0xf85fa000000	                           jne 0x4000bd6	      1100	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_7
0x4000adc	        0xf6431804	               test byte [rbx + 0x18], 4	      1101	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3
0x4000ae0	     0xf85f0000000	                           jne 0x4000bd6	      1101	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3
0x4000ae6	        0x488b7b08	                mov rdi, qword [rbx + 8]	      1106	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_8
0x4000aea	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1106	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_8
0x4000af1	          0x4489e8	                           mov eax, r13d	      1106	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_8
0x4000af4	            0xf2ae	              repne scasb al, byte [rdi]	      1106	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_8
0x4000af6	          0x48f7d1	                                 not rcx	      1106	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_8
0x4000af9	        0x488d69ff	                      lea rbp, [rcx - 1]	      1106	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_8
0x4000afd	        0x488b1424	                    mov rdx, qword [rsp]	      1107	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_4	CALL_9
0x4000b01	      0xbe02000000	                              mov esi, 2	      1107	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_4	CALL_9
0x4000b06	      0xbf00000000	                              mov edi, 0	      1107	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_4	CALL_9
0x4000b0b	      0xe800000000	                          call 0x4000b10	      1107	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_4	CALL_9
0x4000b10	        0x4883f802	                              cmp rax, 2	      1107	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_4	CALL_9
0x4000b14	     0xf8523020000	                           jne 0x4000d3d	      1107	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_4	CALL_9
0x4000b1a	        0x488b7b08	                mov rdi, qword [rbx + 8]	      1108	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_4	CALL_10
0x4000b1e	        0x488b1424	                    mov rdx, qword [rsp]	      1108	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_4	CALL_10
0x4000b22	          0x4889ee	                            mov rsi, rbp	      1108	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_4	CALL_10
0x4000b25	      0xe800000000	                          call 0x4000b2a	      1108	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_4	CALL_10
0x4000b2a	          0x4839c5	                            cmp rbp, rax	      1108	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_4	CALL_10
0x4000b2d	     0xf850a020000	                           jne 0x4000d3d	      1108	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_4	CALL_10
0x4000b33	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      1111	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_11
0x4000b37	        0x488b5068	            mov rdx, qword [rax + 0x68] 	      1111	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_11
0x4000b3b	        0x4c8b4310	              mov r8, qword [rbx + 0x10]	        33	stdio2.h	FUNCTION_26	CALL_1
0x4000b3f	        0x4c034230	              add r8, qword [rdx + 0x30]	        33	stdio2.h	FUNCTION_26	CALL_1
0x4000b43	        0x4c034060	              add r8, qword [rax + 0x60]	        33	stdio2.h	FUNCTION_26	CALL_1
0x4000b47	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_26	CALL_1
0x4000b4c	      0xba29000000	                           mov edx, 0x29	        33	stdio2.h	FUNCTION_26	CALL_1
0x4000b51	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_26	CALL_1
0x4000b56	      0x488b7c2408	                mov rdi, qword [rsp + 8]	        33	stdio2.h	FUNCTION_26	CALL_1
0x4000b5b	          0x4489e8	                           mov eax, r13d	        33	stdio2.h	FUNCTION_26	CALL_1
0x4000b5e	      0xe800000000	                          call 0x4000b63	        33	stdio2.h	FUNCTION_26	CALL_1
0x4000b63	      0x807c241230	            cmp byte [rsp + 0x12], 0x30 	      1115	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	WHILE_1
0x4000b68	            0x751d	                           jne 0x4000b87	      1115	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	WHILE_1
0x4000b6a	      0x807c241300	                cmp byte [rsp + 0x13], 0	      1115	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	WHILE_1
0x4000b6f	            0x741d	                            je 0x4000b8e	      1115	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	WHILE_1
0x4000b71	      0x488d542412	                   lea rdx, [rsp + 0x12]	      1115	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	WHILE_1
0x4000b76	        0x4883c201	                              add rdx, 1	      1116	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	WHILE_1
0x4000b7a	          0x803a30	                    cmp byte [rdx], 0x30	      1115	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	WHILE_1
0x4000b7d	            0x7514	                           jne 0x4000b93	      1115	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	WHILE_1
0x4000b7f	        0x807a0100	                   cmp byte [rdx + 1], 0	      1115	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	WHILE_1
0x4000b83	            0x75f1	                           jne 0x4000b76	      1115	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	WHILE_1
0x4000b85	            0xeb0c	                           jmp 0x4000b93	      1115	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	WHILE_1
0x4000b87	      0x488d542412	                   lea rdx, [rsp + 0x12]	      1114	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3
0x4000b8c	            0xeb05	                           jmp 0x4000b93	      1114	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3
0x4000b8e	      0x488d542412	                   lea rdx, [rsp + 0x12]	      1114	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3
0x4000b93	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1117	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_12
0x4000b9a	          0x4889d7	                            mov rdi, rdx	      1117	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_12
0x4000b9d	          0x4489e8	                           mov eax, r13d	      1117	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_12
0x4000ba0	            0xf2ae	              repne scasb al, byte [rdi]	      1117	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_12
0x4000ba2	          0x48f7d1	                                 not rcx	      1117	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_12
0x4000ba5	          0x4889cb	                            mov rbx, rcx	      1117	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	CALL_12
0x4000ba8	      0xc6440aff0d	          mov byte [rdx + rcx - 1], 0xd 	      1118	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3
0x4000bad	        0xc6040a0a	               mov byte [rdx + rcx], 0xa	      1119	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3
0x4000bb1	        0xc642ff24	                mov byte [rdx - 1], 0x24	      1120	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3
0x4000bb5	        0xc642fe20	                mov byte [rdx - 2], 0x20	      1121	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3
0x4000bb9	        0x4883c303	                              add rbx, 3	      1122	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3
0x4000bbd	        0x488d7afe	                      lea rdi, [rdx - 2]	      1121	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3
0x4000bc1	        0x488b1424	                    mov rdx, qword [rsp]	      1123	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_5	CALL_13
0x4000bc5	          0x4889de	                            mov rsi, rbx	      1123	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_5	CALL_13
0x4000bc8	      0xe800000000	                          call 0x4000bcd	      1123	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_5	CALL_13
0x4000bcd	          0x4839c3	                            cmp rbx, rax	      1123	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_5	CALL_13
0x4000bd0	     0xf8567010000	                           jne 0x4000d3d	      1123	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_5	CALL_13
0x4000bd6	        0x4983c408	                              add r12, 8	      1123	srec.c	FUNCTION_17	IF_1	FOR_1	IF_3	IF_5	CALL_13
0x4000bda	          0x4d39f4	                            cmp r12, r14	      1097	srec.c	FUNCTION_17	IF_1	FOR_1
0x4000bdd	     0xf85e1feffff	                           jne 0x4000ac4	      1097	srec.c	FUNCTION_17	IF_1	FOR_1
0x4000be3	        0x488b1424	                    mov rdx, qword [rsp]	      1127	srec.c	FUNCTION_17	IF_1	IF_6	CALL_14
0x4000be7	      0xbe05000000	                              mov esi, 5	      1127	srec.c	FUNCTION_17	IF_1	IF_6	CALL_14
0x4000bec	      0xbf00000000	                              mov edi, 0	      1127	srec.c	FUNCTION_17	IF_1	IF_6	CALL_14
0x4000bf1	      0xe800000000	                          call 0x4000bf6	      1127	srec.c	FUNCTION_17	IF_1	IF_6	CALL_14
0x4000bf6	        0x4883f805	                              cmp rax, 5	      1142	srec.c	FUNCTION_18	IF_1	IF_2	CALL_1
0x4000bfa	     0xf8526010000	                           jne 0x4000d26	      1142	srec.c	FUNCTION_18	IF_1	IF_2	CALL_1
0x4000c00	        0x488b1c24	                    mov rbx, qword [rsp]	      1018	srec.c	FUNCTION_14	CALL_1
0x4000c04	          0x488b13	                    mov rdx, qword [rbx]	      1018	srec.c	FUNCTION_14	CALL_1
0x4000c07	      0xb800000000	                              mov eax, 0	      1018	srec.c	FUNCTION_14	CALL_1
0x4000c0c	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1018	srec.c	FUNCTION_14	CALL_1
0x4000c13	          0x4889d7	                            mov rdi, rdx	      1018	srec.c	FUNCTION_14	CALL_1
0x4000c16	            0xf2ae	              repne scasb al, byte [rdi]	      1018	srec.c	FUNCTION_14	CALL_1
0x4000c18	          0x4889c8	                            mov rax, rcx	      1018	srec.c	FUNCTION_14	CALL_1
0x4000c1b	          0x48f7d0	                                 not rax	      1018	srec.c	FUNCTION_14	CALL_1
0x4000c1e	        0x4883e801	                              sub rax, 1	      1018	srec.c	FUNCTION_14	CALL_1
0x4000c22	          0x83f828	                           cmp eax, 0x28	      1024	srec.c	FUNCTION_14	CALL_2
0x4000c25	    0x41b828000000	                           mov r8d, 0x28	      1024	srec.c	FUNCTION_14	CALL_2
0x4000c2b	        0x410f47c0	                          cmova eax, r8d	      1024	srec.c	FUNCTION_14	CALL_2
0x4000c2f	          0x4189c0	                            mov r8d, eax	      1024	srec.c	FUNCTION_14	CALL_2
0x4000c32	          0x4901d0	                             add r8, rdx	      1024	srec.c	FUNCTION_14	CALL_2
0x4000c35	          0x4889d1	                            mov rcx, rdx	      1024	srec.c	FUNCTION_14	CALL_2
0x4000c38	      0xba00000000	                              mov edx, 0	      1024	srec.c	FUNCTION_14	CALL_2
0x4000c3d	      0xbe00000000	                              mov esi, 0	      1024	srec.c	FUNCTION_14	CALL_2
0x4000c42	          0x4889df	                            mov rdi, rbx	      1024	srec.c	FUNCTION_14	CALL_2
0x4000c45	      0xe869fbffff	              call sym.srec_write_record	      1024	srec.c	FUNCTION_14	CALL_2
0x4000c4a	            0x85c0	                           test eax, eax	      1146	srec.c	FUNCTION_18	IF_3	CALL_2
0x4000c4c	     0xf84d9000000	                            je 0x4000d2b	      1146	srec.c	FUNCTION_18	IF_3	CALL_2
0x4000c52	          0x4d8b37	                    mov r14, qword [r15]	      1150	srec.c	FUNCTION_18
0x4000c55	          0x4d85f6	                           test r14, r14	      1152	srec.c	FUNCTION_18	WHILE_1
0x4000c58	     0xf849f000000	                            je 0x4000cfd	      1152	srec.c	FUNCTION_18	WHILE_1
0x4000c5e	        0x4d8b6e08	                mov r13, qword [r14 + 8]	      1035	srec.c	FUNCTION_15
0x4000c62	    0x8b0500000000	            mov eax, dword [0x04000c68] 	      1043	srec.c	FUNCTION_15	IF_1
0x4000c68	            0x85c0	                           test eax, eax	      1043	srec.c	FUNCTION_15	IF_1
0x4000c6a	            0x750c	                           jne 0x4000c78	      1043	srec.c	FUNCTION_15	IF_1
0x4000c6c	    0xc70500000000	               mov dword [0x04000c76], 1	      1044	srec.c	FUNCTION_15	IF_1
0x4000c76	            0xeb13	                           jmp 0x4000c8b	      1044	srec.c	FUNCTION_15	IF_1
0x4000c78	      0xbafd000000	                           mov edx, 0xfd	      1045	srec.c	FUNCTION_15	ELSE_1	IF_2
0x4000c7d	        0x412b5710	             sub edx, dword [r15 + 0x10]	      1045	srec.c	FUNCTION_15	ELSE_1	IF_2
0x4000c81	            0x39d0	                            cmp eax, edx	      1045	srec.c	FUNCTION_15	ELSE_1	IF_2
0x4000c83	            0x7606	                           jbe 0x4000c8b	      1045	srec.c	FUNCTION_15	ELSE_1	IF_2
0x4000c85	    0x891500000000	            mov dword [0x04000c8b], edx 	      1046	srec.c	FUNCTION_15	ELSE_1	IF_2
0x4000c8b	        0x498b5e18	            mov rbx, qword [r14 + 0x18] 	      1048	srec.c	FUNCTION_15	WHILE_1
0x4000c8f	          0x4885db	                           test rbx, rbx	      1048	srec.c	FUNCTION_15	WHILE_1
0x4000c92	     0xf84ac000000	                            je 0x4000d44	      1048	srec.c	FUNCTION_15	WHILE_1
0x4000c98	      0xbd00000000	                              mov ebp, 0	      1048	srec.c	FUNCTION_15	WHILE_1
0x4000c9d	            0x29eb	                            sub ebx, ebp	      1051	srec.c	FUNCTION_15	WHILE_1
0x4000c9f	    0x8b0500000000	            mov eax, dword [0x04000ca5] 	      1053	srec.c	FUNCTION_15	WHILE_1	IF_3
0x4000ca5	            0x39c3	                            cmp ebx, eax	      1053	srec.c	FUNCTION_15	WHILE_1	IF_3
0x4000ca7	           0xf47d8	                          cmova ebx, eax	      1053	srec.c	FUNCTION_15	WHILE_1	IF_3
0x4000caa	        0x498b4610	            mov rax, qword [r14 + 0x10] 	      1056	srec.c	FUNCTION_15	WHILE_1	CALL_1
0x4000cae	      0x4889442408	                mov qword [rsp + 8], rax	      1056	srec.c	FUNCTION_15	WHILE_1	CALL_1
0x4000cb3	        0x488b3c24	                    mov rdi, qword [rsp]	      1056	srec.c	FUNCTION_15	WHILE_1	CALL_1
0x4000cb7	      0xe800000000	                          call 0x4000cbc	      1056	srec.c	FUNCTION_15	WHILE_1	CALL_1
0x4000cbc	            0x89c1	                            mov ecx, eax	      1056	srec.c	FUNCTION_15	WHILE_1	CALL_1
0x4000cbe	          0x4189dc	                           mov r12d, ebx	      1058	srec.c	FUNCTION_15	WHILE_1	IF_4	CALL_2
0x4000cc1	          0x4d01ec	                            add r12, r13	      1058	srec.c	FUNCTION_15	WHILE_1	IF_4	CALL_2
0x4000cc4	            0x89e8	                            mov eax, ebp	      1058	srec.c	FUNCTION_15	WHILE_1	IF_4	CALL_2
0x4000cc6	      0xba00000000	                              mov edx, 0	      1058	srec.c	FUNCTION_15	WHILE_1	IF_4	CALL_2
0x4000ccb	            0xf7f1	                                 div ecx	      1058	srec.c	FUNCTION_15	WHILE_1	IF_4	CALL_2
0x4000ccd	            0x89c2	                            mov edx, eax	      1058	srec.c	FUNCTION_15	WHILE_1	IF_4	CALL_2
0x4000ccf	      0x4803542408	                add rdx, qword [rsp + 8]	      1058	srec.c	FUNCTION_15	WHILE_1	IF_4	CALL_2
0x4000cd4	        0x418b7710	            mov esi, dword [r15 + 0x10] 	      1058	srec.c	FUNCTION_15	WHILE_1	IF_4	CALL_2
0x4000cd8	          0x4d89e0	                             mov r8, r12	      1058	srec.c	FUNCTION_15	WHILE_1	IF_4	CALL_2
0x4000cdb	          0x4c89e9	                            mov rcx, r13	      1058	srec.c	FUNCTION_15	WHILE_1	IF_4	CALL_2
0x4000cde	        0x488b3c24	                    mov rdi, qword [rsp]	      1058	srec.c	FUNCTION_15	WHILE_1	IF_4	CALL_2
0x4000ce2	      0xe8ccfaffff	              call sym.srec_write_record	      1058	srec.c	FUNCTION_15	WHILE_1	IF_4	CALL_2
0x4000ce7	            0x85c0	                           test eax, eax	      1058	srec.c	FUNCTION_15	WHILE_1	IF_4	CALL_2
0x4000ce9	            0x7440	                            je 0x4000d2b	      1058	srec.c	FUNCTION_15	WHILE_1	IF_4	CALL_2
0x4000ceb	             0x1dd	                            add ebp, ebx	      1065	srec.c	FUNCTION_15	WHILE_1
0x4000ced	        0x498b5e18	            mov rbx, qword [r14 + 0x18] 	      1048	srec.c	FUNCTION_15	WHILE_1
0x4000cf1	          0x4d89e5	                            mov r13, r12	      1066	srec.c	FUNCTION_15	WHILE_1
0x4000cf4	            0x89e8	                            mov eax, ebp	      1048	srec.c	FUNCTION_15	WHILE_1
0x4000cf6	          0x4839c3	                            cmp rbx, rax	      1048	srec.c	FUNCTION_15	WHILE_1
0x4000cf9	            0x77a2	                            ja 0x4000c9d	      1048	srec.c	FUNCTION_15	WHILE_1
0x4000cfb	            0xeb47	                           jmp 0x4000d44	      1048	srec.c	FUNCTION_15	WHILE_1
0x4000cfd	        0x488b0424	                    mov rax, qword [rsp]	      1075	srec.c	FUNCTION_16	CALL_1
0x4000d01	    0x488b90a80000	            mov rdx, qword [rax + 0xa8] 	      1075	srec.c	FUNCTION_16	CALL_1
0x4000d08	      0xbe0a000000	                            mov esi, 0xa	      1075	srec.c	FUNCTION_16	CALL_1
0x4000d0d	        0x412b7710	             sub esi, dword [r15 + 0x10]	      1075	srec.c	FUNCTION_16	CALL_1
0x4000d11	    0x41b800000000	                              mov r8d, 0	      1075	srec.c	FUNCTION_16	CALL_1
0x4000d17	      0xb900000000	                              mov ecx, 0	      1075	srec.c	FUNCTION_16	CALL_1
0x4000d1c	          0x4889c7	                            mov rdi, rax	      1075	srec.c	FUNCTION_16	CALL_1
0x4000d1f	      0xe88ffaffff	              call sym.srec_write_record	      1075	srec.c	FUNCTION_16	CALL_1
0x4000d24	            0xeb05	                           jmp 0x4000d2b	      1158	srec.c	FUNCTION_18	CALL_4
0x4000d26	      0xb800000000	                              mov eax, 0	      1143	srec.c	FUNCTION_18	IF_1	IF_2
0x4000d2b	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      1159	srec.c	FUNCTION_18
0x4000d30	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      1159	srec.c	FUNCTION_18
0x4000d39	            0x741c	                            je 0x4000d57	      1159	srec.c	FUNCTION_18
0x4000d3b	            0xeb15	                           jmp 0x4000d52	      1159	srec.c	FUNCTION_18
0x4000d3d	      0xb800000000	                              mov eax, 0	      1143	srec.c	FUNCTION_18	IF_1	IF_2
0x4000d42	            0xebe7	                           jmp 0x4000d2b	      1143	srec.c	FUNCTION_18	IF_1	IF_2
0x4000d44	          0x4d8b36	                    mov r14, qword [r14]	      1156	srec.c	FUNCTION_18	WHILE_1
0x4000d47	          0x4d85f6	                           test r14, r14	      1152	srec.c	FUNCTION_18	WHILE_1
0x4000d4a	     0xf850effffff	                           jne 0x4000c5e	      1152	srec.c	FUNCTION_18	WHILE_1
0x4000d50	            0xebab	                           jmp 0x4000cfd	      1152	srec.c	FUNCTION_18	WHILE_1
0x4000d52	      0xe800000000	                          call 0x4000d57	      1159	srec.c	FUNCTION_18
0x4000d57	        0x4883c458	                           add rsp, 0x58	      1159	srec.c	FUNCTION_18
0x4000d5b	              0x5b	                                 pop rbx	      1159	srec.c	FUNCTION_18
0x4000d5c	              0x5d	                                 pop rbp	      1159	srec.c	FUNCTION_18
0x4000d5d	            0x415c	                                 pop r12	      1159	srec.c	FUNCTION_18
0x4000d5f	            0x415d	                                 pop r13	      1159	srec.c	FUNCTION_18
0x4000d61	            0x415e	                                 pop r14	      1159	srec.c	FUNCTION_18
0x4000d63	            0x415f	                                 pop r15	      1159	srec.c	FUNCTION_18
0x4000d65	              0xc3	                                     ret	      1159	srec.c	FUNCTION_18
srec_get_section_contents	CALL,4:IF,5:functions,0:FOR,0:ELSE,0:WHILE,0:DO,0:SWITCH,0	258
0x4000390	            0x4157	                                push r15	       839	srec.c	FUNCTION_10
0x4000392	            0x4156	                                push r14	       839	srec.c	FUNCTION_10
0x4000394	            0x4155	                                push r13	       839	srec.c	FUNCTION_10
0x4000396	            0x4154	                                push r12	       839	srec.c	FUNCTION_10
0x4000398	              0x55	                                push rbp	       839	srec.c	FUNCTION_10
0x4000399	              0x53	                                push rbx	       839	srec.c	FUNCTION_10
0x400039a	        0x4883ec58	                           sub rsp, 0x58	       839	srec.c	FUNCTION_10
0x400039e	    0x64488b042528	                mov rax, qword fs:[0x28]	       839	srec.c	FUNCTION_10
0x40003a7	      0x4889442448	             mov qword [rsp + 0x48], rax	       839	srec.c	FUNCTION_10
0x40003ac	            0x31c0	                            xor eax, eax	       839	srec.c	FUNCTION_10
0x40003ae	    0x41bc01000000	                             mov r12d, 1	       841	srec.c	FUNCTION_10	IF_1
0x40003b4	          0x4d85c0	                             test r8, r8	       840	srec.c	FUNCTION_10	IF_1
0x40003b7	     0xf84cf030000	                            je 0x400078c	       840	srec.c	FUNCTION_10	IF_1
0x40003bd	          0x4989fe	                            mov r14, rdi	       840	srec.c	FUNCTION_10	IF_1
0x40003c0	          0x4989f5	                            mov r13, rsi	       840	srec.c	FUNCTION_10	IF_1
0x40003c3	          0x4989d7	                            mov r15, rdx	       840	srec.c	FUNCTION_10	IF_1
0x40003c6	          0x4889cd	                            mov rbp, rcx	       840	srec.c	FUNCTION_10	IF_1
0x40003c9	          0x4c89c3	                             mov rbx, r8	       840	srec.c	FUNCTION_10	IF_1
0x40003cc	          0x4c89c0	                             mov rax, r8	       843	srec.c	FUNCTION_10	IF_2
0x40003cf	          0x4801c8	                            add rax, rcx	       843	srec.c	FUNCTION_10	IF_2
0x40003d2	            0x7209	                            jb 0x40003dd	       843	srec.c	FUNCTION_10	IF_2
0x40003d4	        0x488b7638	            mov rsi, qword [rsi + 0x38] 	       844	srec.c	FUNCTION_10	IF_2
0x40003d8	          0x4839f0	                            cmp rax, rsi	       844	srec.c	FUNCTION_10	IF_2
0x40003db	            0x7615	                           jbe 0x40003f2	       844	srec.c	FUNCTION_10	IF_2
0x40003dd	      0xbf05000000	                              mov edi, 5	       846	srec.c	FUNCTION_10	IF_2	CALL_1
0x40003e2	      0xe800000000	                          call 0x40003e7	       846	srec.c	FUNCTION_10	IF_2	CALL_1
0x40003e7	    0x41bc00000000	                             mov r12d, 0	       847	srec.c	FUNCTION_10	IF_2
0x40003ed	      0xe99a030000	                           jmp 0x400078c	       847	srec.c	FUNCTION_10	IF_2
0x40003f2	    0x4983bde00000	               cmp qword [r13 + 0xe0], 0	       850	srec.c	FUNCTION_10	IF_3
0x40003fa	     0xf8571030000	                           jne 0x4000771	       850	srec.c	FUNCTION_10	IF_3
0x4000400	      0xe800000000	                          call 0x4000405	       852	srec.c	FUNCTION_10	IF_3	CALL_2
0x4000405	      0x4889442418	             mov qword [rsp + 0x18], rax	       852	srec.c	FUNCTION_10	IF_3	CALL_2
0x400040a	    0x498985e00000	             mov qword [r13 + 0xe0], rax	       852	srec.c	FUNCTION_10	IF_3	CALL_2
0x4000411	    0x41bc00000000	                             mov r12d, 0	       854	srec.c	FUNCTION_10	IF_3	IF_4
0x4000417	          0x4885c0	                           test rax, rax	       853	srec.c	FUNCTION_10	IF_3	IF_4
0x400041a	     0xf846c030000	                            je 0x400078c	       853	srec.c	FUNCTION_10	IF_3	IF_4
0x4000420	    0xc744243c0000	               mov dword [rsp + 0x3c], 0	       724	srec.c	FUNCTION_9
0x4000428	    0x498bb5900000	            mov rsi, qword [r13 + 0x90] 	       728	srec.c	FUNCTION_9	IF_1	CALL_1
0x400042f	      0xba00000000	                              mov edx, 0	       728	srec.c	FUNCTION_9	IF_1	CALL_1
0x4000434	          0x4c89f7	                            mov rdi, r14	       728	srec.c	FUNCTION_9	IF_1	CALL_1
0x4000437	      0xe800000000	                          call 0x400043c	       728	srec.c	FUNCTION_9	IF_1	CALL_1
0x400043c	            0x85c0	                           test eax, eax	       728	srec.c	FUNCTION_9	IF_1	CALL_1
0x400043e	     0xf8525030000	                           jne 0x4000769	       728	srec.c	FUNCTION_9	IF_1	CALL_1
0x4000444	    0x48c744241000	               mov qword [rsp + 0x10], 0	       728	srec.c	FUNCTION_9	IF_1	CALL_1
0x400044d	    0x48c704240000	                      mov qword [rsp], 0	       728	srec.c	FUNCTION_9	IF_1	CALL_1
0x4000455	    0x48c744240800	                  mov qword [rsp + 8], 0	       728	srec.c	FUNCTION_9	IF_1	CALL_1
0x400045e	        0x8944242c	             mov dword [rsp + 0x2c], eax	       728	srec.c	FUNCTION_9	IF_1	CALL_1
0x4000462	      0x4c897c2420	             mov qword [rsp + 0x20], r15	       728	srec.c	FUNCTION_9	IF_1	CALL_1
0x4000467	      0xe986020000	                           jmp 0x40006f2	       728	srec.c	FUNCTION_9	IF_1	CALL_1
0x400046c	          0x83f80d	                            cmp eax, 0xd	       738	srec.c	FUNCTION_9	WHILE_1	IF_2
0x400046f	     0xf847d020000	                            je 0x40006f2	       738	srec.c	FUNCTION_9	WHILE_1	IF_2
0x4000475	          0x83f80a	                            cmp eax, 0xa	       738	srec.c	FUNCTION_9	WHILE_1	IF_2
0x4000478	     0xf8474020000	                            je 0x40006f2	       738	srec.c	FUNCTION_9	WHILE_1	IF_2
0x400047e	          0x83f853	                           cmp eax, 0x53	       743	srec.c	FUNCTION_9	WHILE_1	CALL_3
0x4000481	            0x740f	                            je 0x4000492	       743	srec.c	FUNCTION_9	WHILE_1	CALL_3
0x4000483	      0xbee7020000	                          mov esi, 0x2e7	       743	srec.c	FUNCTION_9	WHILE_1	CALL_3
0x4000488	      0xbf00000000	                              mov edi, 0	       743	srec.c	FUNCTION_9	WHILE_1	CALL_3
0x400048d	      0xe800000000	                          call 0x4000492	       743	srec.c	FUNCTION_9	WHILE_1	CALL_3
0x4000492	          0x4c89f2	                            mov rdx, r14	       745	srec.c	FUNCTION_9	WHILE_1	IF_3	CALL_4
0x4000495	      0xbe03000000	                              mov esi, 3	       745	srec.c	FUNCTION_9	WHILE_1	IF_3	CALL_4
0x400049a	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       745	srec.c	FUNCTION_9	WHILE_1	IF_3	CALL_4
0x400049f	      0xe800000000	                          call 0x40004a4	       745	srec.c	FUNCTION_9	WHILE_1	IF_3	CALL_4
0x40004a4	        0x4883f803	                              cmp rax, 3	       745	srec.c	FUNCTION_9	WHILE_1	IF_3	CALL_4
0x40004a8	     0xf8598020000	                           jne 0x4000746	       745	srec.c	FUNCTION_9	WHILE_1	IF_3	CALL_4
0x40004ae	       0xfb6442441	           movzx eax, byte [rsp + 0x41] 	       748	srec.c	FUNCTION_9	WHILE_1	CALL_5
0x40004b3	    0x80b800000000	                    cmp byte [rax], 0x63	       748	srec.c	FUNCTION_9	WHILE_1	CALL_5
0x40004ba	            0x740e	                            je 0x40004ca	       748	srec.c	FUNCTION_9	WHILE_1	CALL_5
0x40004bc	       0xfb6442442	           movzx eax, byte [rsp + 0x42] 	       748	srec.c	FUNCTION_9	WHILE_1	CALL_5
0x40004c1	    0x80b800000000	                    cmp byte [rax], 0x63	       748	srec.c	FUNCTION_9	WHILE_1	CALL_5
0x40004c8	            0x750f	                           jne 0x40004d9	       748	srec.c	FUNCTION_9	WHILE_1	CALL_5
0x40004ca	      0xbeec020000	                          mov esi, 0x2ec	       748	srec.c	FUNCTION_9	WHILE_1	CALL_5
0x40004cf	      0xbf00000000	                              mov edi, 0	       748	srec.c	FUNCTION_9	WHILE_1	CALL_5
0x40004d4	      0xe800000000	                          call 0x40004d9	       748	srec.c	FUNCTION_9	WHILE_1	CALL_5
0x40004d9	       0xfb6442441	           movzx eax, byte [rsp + 0x41] 	       750	srec.c	FUNCTION_9	WHILE_1
0x40004de	    0x440fb6a00000	                  movzx r12d, byte [rax]	       750	srec.c	FUNCTION_9	WHILE_1
0x40004e6	        0x41c1e404	                             shl r12d, 4	       750	srec.c	FUNCTION_9	WHILE_1
0x40004ea	       0xfb6442442	           movzx eax, byte [rsp + 0x42] 	       750	srec.c	FUNCTION_9	WHILE_1
0x40004ef	     0xfb680000000	                   movzx eax, byte [rax]	       750	srec.c	FUNCTION_9	WHILE_1
0x40004f6	          0x4101c4	                           add r12d, eax	       750	srec.c	FUNCTION_9	WHILE_1
0x40004f9	        0x478d3c24	                   lea r15d, [r12 + r12]	       752	srec.c	FUNCTION_9	WHILE_1	IF_4
0x40004fd	          0x4589ff	                          mov r15d, r15d	       752	srec.c	FUNCTION_9	WHILE_1	IF_4
0x4000500	      0x4c3b7c2410	            cmp r15, qword [rsp + 0x10] 	       752	srec.c	FUNCTION_9	WHILE_1	IF_4
0x4000505	            0x762e	                           jbe 0x4000535	       752	srec.c	FUNCTION_9	WHILE_1	IF_4
0x4000507	        0x488b0424	                    mov rax, qword [rsp]	       754	srec.c	FUNCTION_9	WHILE_1	IF_4	IF_5
0x400050b	          0x4885c0	                           test rax, rax	       754	srec.c	FUNCTION_9	WHILE_1	IF_4	IF_5
0x400050e	            0x7408	                            je 0x4000518	       754	srec.c	FUNCTION_9	WHILE_1	IF_4	IF_5
0x4000510	          0x4889c7	                            mov rdi, rax	       755	srec.c	FUNCTION_9	WHILE_1	IF_4	CALL_6
0x4000513	      0xe800000000	                          call 0x4000518	       755	srec.c	FUNCTION_9	WHILE_1	IF_4	CALL_6
0x4000518	          0x4489e7	                           mov edi, r12d	       756	srec.c	FUNCTION_9	WHILE_1	IF_4	CALL_7
0x400051b	          0x4801ff	                            add rdi, rdi	       756	srec.c	FUNCTION_9	WHILE_1	IF_4	CALL_7
0x400051e	      0xe800000000	                          call 0x4000523	       756	srec.c	FUNCTION_9	WHILE_1	IF_4	CALL_7
0x4000523	        0x48890424	                    mov qword [rsp], rax	       756	srec.c	FUNCTION_9	WHILE_1	IF_4	CALL_7
0x4000527	          0x4885c0	                           test rax, rax	       757	srec.c	FUNCTION_9	WHILE_1	IF_4	IF_6
0x400052a	     0xf841d020000	                            je 0x400074d	       757	srec.c	FUNCTION_9	WHILE_1	IF_4	IF_6
0x4000530	      0x4c897c2410	             mov qword [rsp + 0x10], r15	       759	srec.c	FUNCTION_9	WHILE_1	IF_4
0x4000535	          0x4489e6	                           mov esi, r12d	       762	srec.c	FUNCTION_9	WHILE_1	IF_7	CALL_8
0x4000538	          0x4801f6	                            add rsi, rsi	       762	srec.c	FUNCTION_9	WHILE_1	IF_7	CALL_8
0x400053b	          0x4c89f2	                            mov rdx, r14	       762	srec.c	FUNCTION_9	WHILE_1	IF_7	CALL_8
0x400053e	        0x488b3c24	                    mov rdi, qword [rsp]	       762	srec.c	FUNCTION_9	WHILE_1	IF_7	CALL_8
0x4000542	      0xe800000000	                          call 0x4000547	       762	srec.c	FUNCTION_9	WHILE_1	IF_7	CALL_8
0x4000547	          0x4939c7	                            cmp r15, rax	       762	srec.c	FUNCTION_9	WHILE_1	IF_7	CALL_8
0x400054a	     0xf8504020000	                           jne 0x4000754	       762	srec.c	FUNCTION_9	WHILE_1	IF_7	CALL_8
0x4000550	       0xfb6442440	           movzx eax, byte [rsp + 0x40] 	       767	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x4000555	            0x3c32	                            cmp al, 0x32	       767	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x4000557	            0x746f	                            je 0x40005c8	       767	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x4000559	            0x3c33	                            cmp al, 0x33	       767	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x400055b	            0x7441	                            je 0x400059e	       767	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x400055d	            0x3c31	                            cmp al, 0x31	       767	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x400055f	     0xf8499000000	                            je 0x40005fe	       767	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x4000565	      0x4c8b7c2420	            mov r15, qword [rsp + 0x20] 	       767	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x400056a	      0x488b442408	                mov rax, qword [rsp + 8]	       770	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	CALL_9
0x400056f	        0x49394538	            cmp qword [r13 + 0x38], rax 	       770	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	CALL_9
0x4000573	            0x740f	                            je 0x4000584	       770	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	CALL_9
0x4000575	      0xbe02030000	                          mov esi, 0x302	       770	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	CALL_9
0x400057a	      0xbf00000000	                              mov edi, 0	       770	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	CALL_9
0x400057f	      0xe800000000	                          call 0x4000584	       770	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	CALL_9
0x4000584	        0x488b0424	                    mov rax, qword [rsp]	       771	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	IF_8
0x4000588	          0x4885c0	                           test rax, rax	       771	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	IF_8
0x400058b	     0xf84e0010000	                            je 0x4000771	       771	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	IF_8
0x4000591	          0x4889c7	                            mov rdi, rax	       772	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	CALL_10
0x4000594	      0xe800000000	                          call 0x4000599	       772	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	CALL_10
0x4000599	      0xe9d3010000	                           jmp 0x4000771	       772	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	CALL_10
0x400059e	        0x488b0c24	                    mov rcx, qword [rsp]	       776	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40005a2	           0xfb601	                   movzx eax, byte [rcx]	       776	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40005a5	     0xfb680000000	                   movzx eax, byte [rax]	       776	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40005ac	          0xc1e004	                              shl eax, 4	       776	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40005af	         0xfb65101	               movzx edx, byte [rcx + 1]	       776	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40005b3	     0xfb692000000	                   movzx edx, byte [rdx]	       776	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40005ba	             0x1d0	                            add eax, edx	       776	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40005bc	            0x89c0	                            mov eax, eax	       776	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40005be	        0x488d7902	                      lea rdi, [rcx + 2]	       777	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40005c2	        0x4183ec01	                             sub r12d, 1	       778	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40005c6	            0xeb09	                           jmp 0x40005d1	       778	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40005c8	        0x488b3c24	                    mov rdi, qword [rsp]	       767	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40005cc	      0xb800000000	                              mov eax, 0	       765	srec.c	FUNCTION_9	WHILE_1
0x40005d1	        0x48c1e008	                              shl rax, 8	       781	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40005d5	           0xfb617	                   movzx edx, byte [rdi]	       781	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40005d8	     0xfb692000000	                   movzx edx, byte [rdx]	       781	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40005df	          0xc1e204	                              shl edx, 4	       781	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40005e2	         0xfb64f01	               movzx ecx, byte [rdi + 1]	       781	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40005e6	     0xfb689000000	                   movzx ecx, byte [rcx]	       781	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40005ed	             0x1ca	                            add edx, ecx	       781	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40005ef	            0x89d2	                            mov edx, edx	       781	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40005f1	          0x4809d0	                             or rax, rdx	       781	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40005f4	        0x4883c702	                              add rdi, 2	       782	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40005f8	        0x4183ec01	                             sub r12d, 1	       783	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40005fc	            0xeb09	                           jmp 0x4000607	       783	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x40005fe	        0x488b3c24	                    mov rdi, qword [rsp]	       767	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x4000602	      0xb800000000	                              mov eax, 0	       765	srec.c	FUNCTION_9	WHILE_1
0x4000607	        0x48c1e008	                              shl rax, 8	       786	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x400060b	          0x4889c2	                            mov rdx, rax	       786	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x400060e	           0xfb607	                   movzx eax, byte [rdi]	       786	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x4000611	     0xfb680000000	                   movzx eax, byte [rax]	       788	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x4000618	          0xc1e004	                              shl eax, 4	       788	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x400061b	         0xfb64f01	               movzx ecx, byte [rdi + 1]	       786	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x400061f	     0xfb689000000	                   movzx ecx, byte [rcx]	       788	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x4000626	             0x1c8	                            add eax, ecx	       788	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x4000628	            0x89c0	                            mov eax, eax	       788	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x400062a	          0x4809d0	                             or rax, rdx	       788	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x400062d	        0x48c1e008	                              shl rax, 8	       788	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x4000631	        0x488d4f04	                      lea rcx, [rdi + 4]	       789	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x4000635	         0xfb65702	               movzx edx, byte [rdi + 2]	       788	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x4000639	     0xfb692000000	                   movzx edx, byte [rdx]	       792	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	IF_9
0x4000640	          0xc1e204	                              shl edx, 4	       792	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	IF_9
0x4000643	         0xfb67703	               movzx esi, byte [rdi + 3]	       788	srec.c	FUNCTION_9	WHILE_1	SWITCH_1
0x4000647	     0xfb6be000000	                   movzx edi, byte [rsi]	       792	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	IF_9
0x400064e	          0x8d343a	                    lea esi, [rdx + rdi]	       792	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	IF_9
0x4000651	            0x89f2	                            mov edx, esi	       792	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	IF_9
0x4000653	          0x4809c2	                             or rdx, rax	       792	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	IF_9
0x4000656	      0x488b442408	                mov rax, qword [rsp + 8]	       792	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	IF_9
0x400065b	        0x49034528	             add rax, qword [r13 + 0x28]	       792	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	IF_9
0x400065f	          0x4839c2	                            cmp rdx, rax	       792	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	IF_9
0x4000662	            0x7439	                            je 0x400069d	       792	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	IF_9
0x4000664	      0x4c8b7c2420	            mov r15, qword [rsp + 0x20] 	       792	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	IF_9
0x4000669	      0x488b442408	                mov rax, qword [rsp + 8]	       795	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	IF_9	CALL_11
0x400066e	        0x493b4538	            cmp rax, qword [r13 + 0x38] 	       795	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	IF_9	CALL_11
0x4000672	            0x740f	                            je 0x4000683	       795	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	IF_9	CALL_11
0x4000674	      0xbe1b030000	                          mov esi, 0x31b	       795	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	IF_9	CALL_11
0x4000679	      0xbf00000000	                              mov edi, 0	       795	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	IF_9	CALL_11
0x400067e	      0xe800000000	                          call 0x4000683	       795	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	IF_9	CALL_11
0x4000683	        0x488b0424	                    mov rax, qword [rsp]	       796	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	IF_9	IF_10
0x4000687	          0x4885c0	                           test rax, rax	       796	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	IF_9	IF_10
0x400068a	     0xf84e1000000	                            je 0x4000771	       796	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	IF_9	IF_10
0x4000690	          0x4889c7	                            mov rdi, rax	       797	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	IF_9	CALL_12
0x4000693	      0xe800000000	                          call 0x4000698	       797	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	IF_9	CALL_12
0x4000698	      0xe9d4000000	                           jmp 0x4000771	       797	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	IF_9	CALL_12
0x400069d	      0x458d4c24fc	                      lea r9d, [r12 - 4]	       804	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	WHILE_2
0x40006a2	        0x4183fc03	                             cmp r12d, 3	       804	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	WHILE_2
0x40006a6	            0x744a	                            je 0x40006f2	       804	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	WHILE_2
0x40006a8	          0x4589c9	                            mov r9d, r9d	       804	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	WHILE_2
0x40006ab	        0x4d8d4101	                        lea r8, [r9 + 1]	       804	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	WHILE_2
0x40006af	      0xb800000000	                              mov eax, 0	       804	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	WHILE_2
0x40006b4	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       806	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	WHILE_2
0x40006b9	      0x48037c2408	                add rdi, qword [rsp + 8]	       806	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	WHILE_2
0x40006be	         0xfb61441	           movzx edx, byte [rcx + rax*2]	       806	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	WHILE_2
0x40006c2	     0xfb692000000	                   movzx edx, byte [rdx]	       806	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	WHILE_2
0x40006c9	          0xc1e204	                              shl edx, 4	       806	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	WHILE_2
0x40006cc	       0xfb6744101	      movzx esi, byte [rcx + rax*2 + 1] 	       806	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	WHILE_2
0x40006d1	     0x29600000000	                      add dl, byte [rsi]	       806	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	WHILE_2
0x40006d7	          0x881407	                mov byte [rdi + rax], dl	       806	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	WHILE_2
0x40006da	        0x4883c001	                              add rax, 1	       806	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	WHILE_2
0x40006de	          0x4c39c0	                             cmp rax, r8	       804	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	WHILE_2
0x40006e1	            0x75db	                           jne 0x40006be	       804	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	WHILE_2
0x40006e3	      0x488b442408	                mov rax, qword [rsp + 8]	       804	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	WHILE_2
0x40006e8	      0x4a8d440801	                 lea rax, [rax + r9 + 1]	       804	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	WHILE_2
0x40006ed	      0x4889442408	                mov qword [rsp + 8], rax	       804	srec.c	FUNCTION_9	WHILE_1	SWITCH_1	WHILE_2
0x40006f2	      0x488d74243c	                   lea rsi, [rsp + 0x3c]	       731	srec.c	FUNCTION_9	WHILE_1	CALL_2
0x40006f7	          0x4c89f7	                            mov rdi, r14	       731	srec.c	FUNCTION_9	WHILE_1	CALL_2
0x40006fa	      0xe828fcffff	                  call sym.srec_get_byte	       731	srec.c	FUNCTION_9	WHILE_1	CALL_2
0x40006ff	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       731	srec.c	FUNCTION_9	WHILE_1	CALL_2
0x4000702	     0xf8564fdffff	                           jne 0x400046c	       731	srec.c	FUNCTION_9	WHILE_1	CALL_2
0x4000708	      0x448b64242c	           mov r12d, dword [rsp + 0x2c] 	       731	srec.c	FUNCTION_9	WHILE_1	CALL_2
0x400070d	      0x4c8b7c2420	            mov r15, qword [rsp + 0x20] 	       731	srec.c	FUNCTION_9	WHILE_1	CALL_2
0x4000712	      0x837c243c00	               cmp dword [rsp + 0x3c], 0	       815	srec.c	FUNCTION_9	IF_11
0x4000717	            0x7540	                           jne 0x4000759	       815	srec.c	FUNCTION_9	IF_11
0x4000719	      0x488b442408	                mov rax, qword [rsp + 8]	       818	srec.c	FUNCTION_9	CALL_13
0x400071e	        0x493b4538	            cmp rax, qword [r13 + 0x38] 	       818	srec.c	FUNCTION_9	CALL_13
0x4000722	            0x740f	                            je 0x4000733	       818	srec.c	FUNCTION_9	CALL_13
0x4000724	      0xbe32030000	                          mov esi, 0x332	       818	srec.c	FUNCTION_9	CALL_13
0x4000729	      0xbf00000000	                              mov edi, 0	       818	srec.c	FUNCTION_9	CALL_13
0x400072e	      0xe800000000	                          call 0x4000733	       818	srec.c	FUNCTION_9	CALL_13
0x4000733	        0x488b0424	                    mov rax, qword [rsp]	       820	srec.c	FUNCTION_9	IF_12
0x4000737	          0x4885c0	                           test rax, rax	       820	srec.c	FUNCTION_9	IF_12
0x400073a	            0x7435	                            je 0x4000771	       820	srec.c	FUNCTION_9	IF_12
0x400073c	          0x4889c7	                            mov rdi, rax	       821	srec.c	FUNCTION_9	CALL_14
0x400073f	      0xe800000000	                          call 0x4000744	       821	srec.c	FUNCTION_9	CALL_14
0x4000744	            0xeb2b	                           jmp 0x4000771	       821	srec.c	FUNCTION_9	CALL_14
0x4000746	      0x448b64242c	           mov r12d, dword [rsp + 0x2c] 	       821	srec.c	FUNCTION_9	CALL_14
0x400074b	            0xeb0c	                           jmp 0x4000759	       821	srec.c	FUNCTION_9	CALL_14
0x400074d	      0x448b64242c	           mov r12d, dword [rsp + 0x2c] 	       821	srec.c	FUNCTION_9	CALL_14
0x4000752	            0xeb05	                           jmp 0x4000759	       821	srec.c	FUNCTION_9	CALL_14
0x4000754	      0x448b64242c	           mov r12d, dword [rsp + 0x2c] 	       821	srec.c	FUNCTION_9	CALL_14
0x4000759	        0x488b3c24	                    mov rdi, qword [rsp]	       826	srec.c	FUNCTION_9	IF_13
0x400075d	          0x4885ff	                           test rdi, rdi	       826	srec.c	FUNCTION_9	IF_13
0x4000760	            0x742a	                            je 0x400078c	       826	srec.c	FUNCTION_9	IF_13
0x4000762	      0xe800000000	                          call 0x4000767	       827	srec.c	FUNCTION_9	CALL_15
0x4000767	            0xeb23	                           jmp 0x400078c	       827	srec.c	FUNCTION_9	CALL_15
0x4000769	    0x41bc00000000	                             mov r12d, 0	       858	srec.c	FUNCTION_10	IF_3	IF_5
0x400076f	            0xeb1b	                           jmp 0x400078c	       858	srec.c	FUNCTION_10	IF_3	IF_5
0x4000771	          0x4889ee	                            mov rsi, rbp	        53	string3.h	FUNCTION_43	CALL_3
0x4000774	    0x4903b5e00000	             add rsi, qword [r13 + 0xe0]	        53	string3.h	FUNCTION_43	CALL_3
0x400077b	          0x4889da	                            mov rdx, rbx	        53	string3.h	FUNCTION_43	CALL_3
0x400077e	          0x4c89ff	                            mov rdi, r15	        53	string3.h	FUNCTION_43	CALL_3
0x4000781	      0xe800000000	                          call 0x4000786	        53	string3.h	FUNCTION_43	CALL_3
0x4000786	    0x41bc01000000	                             mov r12d, 1	       864	srec.c	FUNCTION_10
0x400078c	          0x4489e0	                           mov eax, r12d	       865	srec.c	FUNCTION_10
0x400078f	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	       865	srec.c	FUNCTION_10
0x4000794	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       865	srec.c	FUNCTION_10
0x400079d	            0x7405	                            je 0x40007a4	       865	srec.c	FUNCTION_10
0x400079f	      0xe800000000	                          call 0x40007a4	       865	srec.c	FUNCTION_10
0x40007a4	        0x4883c458	                           add rsp, 0x58	       865	srec.c	FUNCTION_10
0x40007a8	              0x5b	                                 pop rbx	       865	srec.c	FUNCTION_10
0x40007a9	              0x5d	                                 pop rbp	       865	srec.c	FUNCTION_10
0x40007aa	            0x415c	                                 pop r12	       865	srec.c	FUNCTION_10
0x40007ac	            0x415d	                                 pop r13	       865	srec.c	FUNCTION_10
0x40007ae	            0x415e	                                 pop r14	       865	srec.c	FUNCTION_10
0x40007b0	            0x415f	                                 pop r15	       865	srec.c	FUNCTION_10
0x40007b2	              0xc3	                                     ret	       865	srec.c	FUNCTION_10
srec_set_section_contents	CALL,4:IF,8:functions,0:FOR,1:ELSE,4:WHILE,0:DO,0:SWITCH,0	105
0x400012c	            0x4157	                                push r15	       887	srec.c	FUNCTION_12
0x400012e	            0x4156	                                push r14	       887	srec.c	FUNCTION_12
0x4000130	            0x4155	                                push r13	       887	srec.c	FUNCTION_12
0x4000132	            0x4154	                                push r12	       887	srec.c	FUNCTION_12
0x4000134	              0x55	                                push rbp	       887	srec.c	FUNCTION_12
0x4000135	              0x53	                                push rbx	       887	srec.c	FUNCTION_12
0x4000136	        0x4883ec18	                           sub rsp, 0x18	       887	srec.c	FUNCTION_12
0x400013a	          0x4889fb	                            mov rbx, rdi	       887	srec.c	FUNCTION_12
0x400013d	          0x4989f5	                            mov r13, rsi	       887	srec.c	FUNCTION_12
0x4000140	      0x4889542408	                mov qword [rsp + 8], rdx	       887	srec.c	FUNCTION_12
0x4000145	        0x48890c24	                    mov qword [rsp], rcx	       887	srec.c	FUNCTION_12
0x4000149	          0x4d89c4	                             mov r12, r8	       887	srec.c	FUNCTION_12
0x400014c	      0xe800000000	                          call 0x4000151	       888	srec.c	FUNCTION_12	CALL_1
0x4000151	          0x4189c6	                           mov r14d, eax	       888	srec.c	FUNCTION_12	CALL_1
0x4000154	    0x4c8bbbf80000	            mov r15, qword [rbx + 0xf8] 	       889	srec.c	FUNCTION_12
0x400015b	      0xbe20000000	                           mov esi, 0x20	       892	srec.c	FUNCTION_12	CALL_2
0x4000160	          0x4889df	                            mov rdi, rbx	       892	srec.c	FUNCTION_12	CALL_2
0x4000163	      0xe800000000	                          call 0x4000168	       892	srec.c	FUNCTION_12	CALL_2
0x4000168	          0x4885c0	                           test rax, rax	       893	srec.c	FUNCTION_12	IF_1
0x400016b	     0xf8420010000	                            je 0x4000291	       893	srec.c	FUNCTION_12	IF_1
0x4000171	          0x4889c5	                            mov rbp, rax	       893	srec.c	FUNCTION_12	IF_1
0x4000174	      0xb801000000	                              mov eax, 1	       946	srec.c	FUNCTION_12
0x4000179	          0x4d85e4	                           test r12, r12	       896	srec.c	FUNCTION_12	IF_2
0x400017c	     0xf8414010000	                            je 0x4000296	       896	srec.c	FUNCTION_12	IF_2
0x4000182	        0x418b5520	            mov edx, dword [r13 + 0x20] 	       898	srec.c	FUNCTION_12	IF_2
0x4000186	          0x83e203	                              and edx, 3	       898	srec.c	FUNCTION_12	IF_2
0x4000189	          0x83fa03	                              cmp edx, 3	       898	srec.c	FUNCTION_12	IF_2
0x400018c	     0xf8504010000	                           jne 0x4000296	       898	srec.c	FUNCTION_12	IF_2
0x4000192	          0x4c89e6	                            mov rsi, r12	       902	srec.c	FUNCTION_12	IF_2	CALL_3
0x4000195	          0x4889df	                            mov rdi, rbx	       902	srec.c	FUNCTION_12	IF_2	CALL_3
0x4000198	      0xe800000000	                          call 0x400019d	       902	srec.c	FUNCTION_12	IF_2	CALL_3
0x400019d	          0x4889c3	                            mov rbx, rax	       902	srec.c	FUNCTION_12	IF_2	CALL_3
0x40001a0	      0xb800000000	                              mov eax, 0	       904	srec.c	FUNCTION_12	IF_2	IF_3
0x40001a5	          0x4885db	                           test rbx, rbx	       903	srec.c	FUNCTION_12	IF_2	IF_3
0x40001a8	     0xf84e8000000	                            je 0x4000296	       903	srec.c	FUNCTION_12	IF_2	IF_3
0x40001ae	          0x4c89e2	                            mov rdx, r12	        53	string3.h	FUNCTION_43	CALL_3
0x40001b1	      0x488b742408	                mov rsi, qword [rsp + 8]	        53	string3.h	FUNCTION_43	CALL_3
0x40001b6	          0x4889df	                            mov rdi, rbx	        53	string3.h	FUNCTION_43	CALL_3
0x40001b9	      0xe800000000	                          call 0x40001be	        53	string3.h	FUNCTION_43	CALL_3
0x40001be	    0x833d00000000	               cmp dword [0x040001c5], 0	       909	srec.c	FUNCTION_12	IF_2	IF_4
0x40001c5	            0x740a	                            je 0x40001d1	       909	srec.c	FUNCTION_12	IF_2	IF_4
0x40001c7	    0x41c747100300	               mov dword [r15 + 0x10], 3	       910	srec.c	FUNCTION_12	IF_2	IF_4
0x40001cf	            0xeb44	                           jmp 0x4000215	       910	srec.c	FUNCTION_12	IF_2	IF_4
0x40001d1	        0x488b0424	                    mov rax, qword [rsp]	       911	srec.c	FUNCTION_12	IF_2	ELSE_1	IF_5
0x40001d5	          0x4c01e0	                            add rax, r12	       911	srec.c	FUNCTION_12	IF_2	ELSE_1	IF_5
0x40001d8	          0x4963ce	                        movsxd rcx, r14d	       911	srec.c	FUNCTION_12	IF_2	ELSE_1	IF_5
0x40001db	      0xba00000000	                              mov edx, 0	       911	srec.c	FUNCTION_12	IF_2	ELSE_1	IF_5
0x40001e0	          0x48f7f1	                                 div rcx	       911	srec.c	FUNCTION_12	IF_2	ELSE_1	IF_5
0x40001e3	        0x498b5530	            mov rdx, qword [r13 + 0x30] 	       911	srec.c	FUNCTION_12	IF_2	ELSE_1	IF_5
0x40001e7	      0x488d4410ff	                lea rax, [rax + rdx - 1]	       911	srec.c	FUNCTION_12	IF_2	ELSE_1	IF_5
0x40001ec	    0x483dffff0000	                         cmp rax, 0xffff	       911	srec.c	FUNCTION_12	IF_2	ELSE_1	IF_5
0x40001f2	            0x7621	                           jbe 0x4000215	       911	srec.c	FUNCTION_12	IF_2	ELSE_1	IF_5
0x40001f4	    0x483dffffff00	                       cmp rax, 0xffffff	       913	srec.c	FUNCTION_12	IF_2	ELSE_2	IF_6
0x40001fa	            0x7711	                            ja 0x400020d	       913	srec.c	FUNCTION_12	IF_2	ELSE_2	IF_6
0x40001fc	      0x41837f1002	               cmp dword [r15 + 0x10], 2	       914	srec.c	FUNCTION_12	IF_2	ELSE_2	IF_6
0x4000201	            0x770a	                            ja 0x400020d	       914	srec.c	FUNCTION_12	IF_2	ELSE_2	IF_6
0x4000203	    0x41c747100200	               mov dword [r15 + 0x10], 2	       915	srec.c	FUNCTION_12	IF_2	ELSE_2	IF_6
0x400020b	            0xeb08	                           jmp 0x4000215	       915	srec.c	FUNCTION_12	IF_2	ELSE_2	IF_6
0x400020d	    0x41c747100300	               mov dword [r15 + 0x10], 3	       917	srec.c	FUNCTION_12	IF_2	ELSE_3
0x4000215	        0x48895d08	                mov qword [rbp + 8], rbx	       919	srec.c	FUNCTION_12	IF_2	ELSE_3
0x4000219	          0x4d63f6	                        movsxd r14, r14d	       920	srec.c	FUNCTION_12	IF_2	ELSE_3
0x400021c	        0x488b0424	                    mov rax, qword [rsp]	       920	srec.c	FUNCTION_12	IF_2	ELSE_3
0x4000220	            0x4899	                                     cqo	       920	srec.c	FUNCTION_12	IF_2	ELSE_3
0x4000222	          0x49f7fe	                                idiv r14	       920	srec.c	FUNCTION_12	IF_2	ELSE_3
0x4000225	        0x49034530	             add rax, qword [r13 + 0x30]	       920	srec.c	FUNCTION_12	IF_2	ELSE_3
0x4000229	        0x48894510	            mov qword [rbp + 0x10], rax 	       920	srec.c	FUNCTION_12	IF_2	ELSE_3
0x400022d	        0x4c896518	            mov qword [rbp + 0x18], r12 	       921	srec.c	FUNCTION_12	IF_2	ELSE_3
0x4000231	        0x498b5708	                mov rdx, qword [r15 + 8]	       925	srec.c	FUNCTION_12	IF_2	ELSE_3	IF_7
0x4000235	          0x4885d2	                           test rdx, rdx	       925	srec.c	FUNCTION_12	IF_2	ELSE_3	IF_7
0x4000238	            0x741c	                            je 0x4000256	       925	srec.c	FUNCTION_12	IF_2	ELSE_3	IF_7
0x400023a	        0x483b4210	            cmp rax, qword [rdx + 0x10] 	       926	srec.c	FUNCTION_12	IF_2	ELSE_3	IF_7
0x400023e	            0x7216	                            jb 0x4000256	       926	srec.c	FUNCTION_12	IF_2	ELSE_3	IF_7
0x4000240	          0x48892a	                    mov qword [rdx], rbp	       928	srec.c	FUNCTION_12	IF_2	ELSE_3	IF_7
0x4000243	    0x48c745000000	                      mov qword [rbp], 0	       929	srec.c	FUNCTION_12	IF_2	ELSE_3	IF_7
0x400024b	        0x49896f08	                mov qword [r15 + 8], rbp	       930	srec.c	FUNCTION_12	IF_2	ELSE_3	IF_7
0x400024f	      0xb801000000	                              mov eax, 1	       946	srec.c	FUNCTION_12
0x4000254	            0xeb40	                           jmp 0x4000296	       930	srec.c	FUNCTION_12	IF_2	ELSE_3	IF_7
0x4000256	          0x4c89fa	                            mov rdx, r15	       936	srec.c	FUNCTION_12	IF_2	ELSE_4	FOR_1
0x4000259	          0x498b0f	                    mov rcx, qword [r15]	       936	srec.c	FUNCTION_12	IF_2	ELSE_4	FOR_1
0x400025c	          0x4885c9	                           test rcx, rcx	       936	srec.c	FUNCTION_12	IF_2	ELSE_4	FOR_1
0x400025f	            0x7417	                            je 0x4000278	       936	srec.c	FUNCTION_12	IF_2	ELSE_4	FOR_1
0x4000261	        0x483b4110	            cmp rax, qword [rcx + 0x10] 	       937	srec.c	FUNCTION_12	IF_2	ELSE_4	FOR_1
0x4000265	            0x7611	                           jbe 0x4000278	       937	srec.c	FUNCTION_12	IF_2	ELSE_4	FOR_1
0x4000267	          0x4889ca	                            mov rdx, rcx	       938	srec.c	FUNCTION_12	IF_2	ELSE_4	FOR_1
0x400026a	          0x488b09	                    mov rcx, qword [rcx]	       938	srec.c	FUNCTION_12	IF_2	ELSE_4	FOR_1
0x400026d	          0x4885c9	                           test rcx, rcx	       936	srec.c	FUNCTION_12	IF_2	ELSE_4	FOR_1
0x4000270	            0x7406	                            je 0x4000278	       936	srec.c	FUNCTION_12	IF_2	ELSE_4	FOR_1
0x4000272	        0x483b4110	            cmp rax, qword [rcx + 0x10] 	       937	srec.c	FUNCTION_12	IF_2	ELSE_4	FOR_1
0x4000276	            0x77ef	                            ja 0x4000267	       937	srec.c	FUNCTION_12	IF_2	ELSE_4	FOR_1
0x4000278	        0x48894d00	                    mov qword [rbp], rcx	       940	srec.c	FUNCTION_12	IF_2	ELSE_4
0x400027c	          0x48892a	                    mov qword [rdx], rbp	       941	srec.c	FUNCTION_12	IF_2	ELSE_4
0x400027f	      0xb801000000	                              mov eax, 1	       946	srec.c	FUNCTION_12
0x4000284	      0x48837d0000	                      cmp qword [rbp], 0	       942	srec.c	FUNCTION_12	IF_2	ELSE_4	IF_8
0x4000289	            0x750b	                           jne 0x4000296	       942	srec.c	FUNCTION_12	IF_2	ELSE_4	IF_8
0x400028b	        0x49896f08	                mov qword [r15 + 8], rbp	       943	srec.c	FUNCTION_12	IF_2	ELSE_4	IF_8
0x400028f	            0xeb05	                           jmp 0x4000296	       943	srec.c	FUNCTION_12	IF_2	ELSE_4	IF_8
0x4000291	      0xb800000000	                              mov eax, 0	       894	srec.c	FUNCTION_12	IF_1
0x4000296	        0x4883c418	                           add rsp, 0x18	       947	srec.c	FUNCTION_12
0x400029a	              0x5b	                                 pop rbx	       947	srec.c	FUNCTION_12
0x400029b	              0x5d	                                 pop rbp	       947	srec.c	FUNCTION_12
0x400029c	            0x415c	                                 pop r12	       947	srec.c	FUNCTION_12
0x400029e	            0x415d	                                 pop r13	       947	srec.c	FUNCTION_12
0x40002a0	            0x415e	                                 pop r14	       947	srec.c	FUNCTION_12
0x40002a2	            0x415f	                                 pop r15	       947	srec.c	FUNCTION_12
0x40002a4	              0xc3	                                     ret	       947	srec.c	FUNCTION_12
srec_object_p	CALL,7:IF,5:functions,0:FOR,0:ELSE,0:WHILE,0:DO,0:SWITCH,0	69
0x400183b	              0x55	                                push rbp	       651	srec.c	FUNCTION_7
0x400183c	              0x53	                                push rbx	       651	srec.c	FUNCTION_7
0x400183d	        0x4883ec18	                           sub rsp, 0x18	       651	srec.c	FUNCTION_7
0x4001841	          0x4889fb	                            mov rbx, rdi	       651	srec.c	FUNCTION_7
0x4001844	    0x64488b042528	                mov rax, qword fs:[0x28]	       651	srec.c	FUNCTION_7
0x400184d	      0x4889442408	                mov qword [rsp + 8], rax	       651	srec.c	FUNCTION_7
0x4001852	            0x31c0	                            xor eax, eax	       651	srec.c	FUNCTION_7
0x4001854	      0xe833f5ffff	                      call sym.srec_init	       655	srec.c	FUNCTION_7	CALL_1
0x4001859	      0xba00000000	                              mov edx, 0	       657	srec.c	FUNCTION_7	IF_1	CALL_2
0x400185e	      0xbe00000000	                              mov esi, 0	       657	srec.c	FUNCTION_7	IF_1	CALL_2
0x4001863	          0x4889df	                            mov rdi, rbx	       657	srec.c	FUNCTION_7	IF_1	CALL_2
0x4001866	      0xe800000000	                          call 0x400186b	       657	srec.c	FUNCTION_7	IF_1	CALL_2
0x400186b	      0xba00000000	                              mov edx, 0	       659	srec.c	FUNCTION_7	IF_1
0x4001870	            0x85c0	                           test eax, eax	       657	srec.c	FUNCTION_7	IF_1	CALL_2
0x4001872	     0xf85ba000000	                           jne 0x4001932	       657	srec.c	FUNCTION_7	IF_1	CALL_2
0x4001878	          0x4889da	                            mov rdx, rbx	       658	srec.c	FUNCTION_7	IF_1	CALL_3
0x400187b	      0xbe04000000	                              mov esi, 4	       658	srec.c	FUNCTION_7	IF_1	CALL_3
0x4001880	          0x4889e7	                            mov rdi, rsp	       658	srec.c	FUNCTION_7	IF_1	CALL_3
0x4001883	      0xe800000000	                          call 0x4001888	       658	srec.c	FUNCTION_7	IF_1	CALL_3
0x4001888	      0xba00000000	                              mov edx, 0	       659	srec.c	FUNCTION_7	IF_1
0x400188d	        0x4883f804	                              cmp rax, 4	       658	srec.c	FUNCTION_7	IF_1	CALL_3
0x4001891	     0xf859b000000	                           jne 0x4001932	       658	srec.c	FUNCTION_7	IF_1	CALL_3
0x4001897	        0x803c2453	                    cmp byte [rsp], 0x53	       661	srec.c	FUNCTION_7	IF_2
0x400189b	            0x752a	                           jne 0x40018c7	       661	srec.c	FUNCTION_7	IF_2
0x400189d	       0xfb6442401	               movzx eax, byte [rsp + 1]	       661	srec.c	FUNCTION_7	IF_2
0x40018a2	    0x80b800000000	                    cmp byte [rax], 0x63	       661	srec.c	FUNCTION_7	IF_2
0x40018a9	            0x741c	                            je 0x40018c7	       661	srec.c	FUNCTION_7	IF_2
0x40018ab	       0xfb6442402	               movzx eax, byte [rsp + 2]	       661	srec.c	FUNCTION_7	IF_2
0x40018b0	    0x80b800000000	                    cmp byte [rax], 0x63	       661	srec.c	FUNCTION_7	IF_2
0x40018b7	            0x740e	                            je 0x40018c7	       661	srec.c	FUNCTION_7	IF_2
0x40018b9	       0xfb6442403	               movzx eax, byte [rsp + 3]	       661	srec.c	FUNCTION_7	IF_2
0x40018be	    0x80b800000000	                    cmp byte [rax], 0x63	       661	srec.c	FUNCTION_7	IF_2
0x40018c5	            0x7511	                           jne 0x40018d8	       661	srec.c	FUNCTION_7	IF_2
0x40018c7	      0xbf03000000	                              mov edi, 3	       663	srec.c	FUNCTION_7	IF_2	CALL_4
0x40018cc	      0xe800000000	                          call 0x40018d1	       663	srec.c	FUNCTION_7	IF_2	CALL_4
0x40018d1	      0xba00000000	                              mov edx, 0	       664	srec.c	FUNCTION_7	IF_2
0x40018d6	            0xeb5a	                           jmp 0x4001932	       664	srec.c	FUNCTION_7	IF_2
0x40018d8	    0x488babf80000	            mov rbp, qword [rbx + 0xf8] 	       667	srec.c	FUNCTION_7
0x40018df	          0x4889df	                            mov rdi, rbx	       668	srec.c	FUNCTION_7	IF_3	CALL_6
0x40018e2	      0xe8c7f4ffff	                  call sym.srec_mkobject	       668	srec.c	FUNCTION_7	IF_3	CALL_6
0x40018e7	            0x85c0	                           test eax, eax	       668	srec.c	FUNCTION_7	IF_3	CALL_6
0x40018e9	            0x740c	                            je 0x40018f7	       668	srec.c	FUNCTION_7	IF_3	CALL_6
0x40018eb	          0x4889df	                            mov rdi, rbx	       668	srec.c	FUNCTION_7	IF_3	CALL_6
0x40018ee	      0xe8cff5ffff	                      call sym.srec_scan	       668	srec.c	FUNCTION_7	IF_3	CALL_6
0x40018f3	            0x85c0	                           test eax, eax	       668	srec.c	FUNCTION_7	IF_3	CALL_6
0x40018f5	            0x7527	                           jne 0x400191e	       668	srec.c	FUNCTION_7	IF_3	CALL_6
0x40018f7	    0x488bb3f80000	            mov rsi, qword [rbx + 0xf8] 	       670	srec.c	FUNCTION_7	IF_3	IF_4
0x40018fe	          0x4885f6	                           test rsi, rsi	       670	srec.c	FUNCTION_7	IF_3	IF_4
0x4001901	            0x740d	                            je 0x4001910	       670	srec.c	FUNCTION_7	IF_3	IF_4
0x4001903	          0x4839f5	                            cmp rbp, rsi	       670	srec.c	FUNCTION_7	IF_3	IF_4
0x4001906	            0x7408	                            je 0x4001910	       670	srec.c	FUNCTION_7	IF_3	IF_4
0x4001908	          0x4889df	                            mov rdi, rbx	       671	srec.c	FUNCTION_7	IF_3	CALL_7
0x400190b	      0xe800000000	                          call 0x4001910	       671	srec.c	FUNCTION_7	IF_3	CALL_7
0x4001910	    0x4889abf80000	             mov qword [rbx + 0xf8], rbp	       672	srec.c	FUNCTION_7	IF_3
0x4001917	      0xba00000000	                              mov edx, 0	       673	srec.c	FUNCTION_7	IF_3
0x400191c	            0xeb14	                           jmp 0x4001932	       673	srec.c	FUNCTION_7	IF_3
0x400191e	    0x83bbb8000000	               cmp dword [rbx + 0xb8], 0	       676	srec.c	FUNCTION_7	IF_5
0x4001925	            0x7407	                            je 0x400192e	       676	srec.c	FUNCTION_7	IF_5
0x4001927	    0x814b44000200	            or dword [rbx + 0x44], 0x200	       677	srec.c	FUNCTION_7	IF_5
0x400192e	        0x488b5308	                mov rdx, qword [rbx + 8]	       679	srec.c	FUNCTION_7
0x4001932	          0x4889d0	                            mov rax, rdx	       680	srec.c	FUNCTION_7
0x4001935	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       680	srec.c	FUNCTION_7
0x400193a	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       680	srec.c	FUNCTION_7
0x4001943	            0x7405	                            je 0x400194a	       680	srec.c	FUNCTION_7
0x4001945	      0xe800000000	                          call 0x400194a	       680	srec.c	FUNCTION_7
0x400194a	        0x4883c418	                           add rsp, 0x18	       680	srec.c	FUNCTION_7
0x400194e	              0x5b	                                 pop rbx	       680	srec.c	FUNCTION_7
0x400194f	              0x5d	                                 pop rbp	       680	srec.c	FUNCTION_7
0x4001950	              0xc3	                                     ret	       680	srec.c	FUNCTION_7
srec_mkobject	CALL,2:IF,1:functions,0:FOR,0:ELSE,0:WHILE,0:DO,0:SWITCH,0	20
0x4000dae	              0x53	                                push rbx	       194	srec.c	FUNCTION_2
0x4000daf	          0x4889fb	                            mov rbx, rdi	       194	srec.c	FUNCTION_2
0x4000db2	      0xe8d5ffffff	                      call sym.srec_init	       197	srec.c	FUNCTION_2	CALL_1
0x4000db7	      0xbe30000000	                           mov esi, 0x30	       199	srec.c	FUNCTION_2	CALL_2
0x4000dbc	          0x4889df	                            mov rdi, rbx	       199	srec.c	FUNCTION_2	CALL_2
0x4000dbf	      0xe800000000	                          call 0x4000dc4	       199	srec.c	FUNCTION_2	CALL_2
0x4000dc4	          0x4885c0	                           test rax, rax	       200	srec.c	FUNCTION_2	IF_1
0x4000dc7	            0x743c	                            je 0x4000e05	       200	srec.c	FUNCTION_2	IF_1
0x4000dc9	    0x488983f80000	             mov qword [rbx + 0xf8], rax	       203	srec.c	FUNCTION_2
0x4000dd0	    0xc74010010000	               mov dword [rax + 0x10], 1	       204	srec.c	FUNCTION_2
0x4000dd7	    0x48c700000000	                      mov qword [rax], 0	       205	srec.c	FUNCTION_2
0x4000dde	    0x48c740080000	                  mov qword [rax + 8], 0	       206	srec.c	FUNCTION_2
0x4000de6	    0x48c740180000	               mov qword [rax + 0x18], 0	       207	srec.c	FUNCTION_2
0x4000dee	    0x48c740200000	               mov qword [rax + 0x20], 0	       208	srec.c	FUNCTION_2
0x4000df6	    0x48c740280000	               mov qword [rax + 0x28], 0	       209	srec.c	FUNCTION_2
0x4000dfe	      0xb801000000	                              mov eax, 1	       211	srec.c	FUNCTION_2
0x4000e03	            0xeb05	                           jmp 0x4000e0a	       211	srec.c	FUNCTION_2
0x4000e05	      0xb800000000	                              mov eax, 0	       201	srec.c	FUNCTION_2	IF_1
0x4000e0a	              0x5b	                                 pop rbx	       212	srec.c	FUNCTION_2
0x4000e0b	              0xc3	                                     ret	       212	srec.c	FUNCTION_2
srec_set_arch_mach	CALL,1:IF,1:functions,0:FOR,0:ELSE,0:WHILE,0:DO,0:SWITCH,0	10
0x40002a5	            0x85f6	                           test esi, esi	       872	srec.c	FUNCTION_11	IF_1
0x40002a7	            0x740b	                            je 0x40002b4	       872	srec.c	FUNCTION_11	IF_1
0x40002a9	        0x4883ec08	                              sub rsp, 8	       871	srec.c	FUNCTION_11
0x40002ad	      0xe800000000	                          call 0x40002b2	       873	srec.c	FUNCTION_11	CALL_1
0x40002b2	            0xeb11	                           jmp 0x40002c5	       873	srec.c	FUNCTION_11	CALL_1
0x40002b4	    0x48c787c00000	               mov qword [rdi + 0xc0], 0	       875	srec.c	FUNCTION_11
0x40002bf	      0xb801000000	                              mov eax, 1	       876	srec.c	FUNCTION_11
0x40002c4	              0xc3	                                     ret	       876	srec.c	FUNCTION_11
0x40002c5	        0x4883c408	                              add rsp, 8	       877	srec.c	FUNCTION_11
0x40002c9	              0xc3	                                     ret	       877	srec.c	FUNCTION_11
srec_bad_byte	CALL,5:IF,3:functions,0:FOR,0:ELSE,2:WHILE,0:DO,0:SWITCH,0	48
0x4000e0c	              0x55	                                push rbp	       241	srec.c	FUNCTION_4
0x4000e0d	              0x53	                                push rbx	       241	srec.c	FUNCTION_4
0x4000e0e	        0x4883ec38	                           sub rsp, 0x38	       241	srec.c	FUNCTION_4
0x4000e12	    0x64488b042528	                mov rax, qword fs:[0x28]	       241	srec.c	FUNCTION_4
0x4000e1b	      0x4889442428	             mov qword [rsp + 0x28], rax	       241	srec.c	FUNCTION_4
0x4000e20	            0x31c0	                            xor eax, eax	       241	srec.c	FUNCTION_4
0x4000e22	          0x83faff	             cmp edx, 0xffffffffffffffff	       242	srec.c	FUNCTION_4	IF_1
0x4000e25	            0x7510	                           jne 0x4000e37	       242	srec.c	FUNCTION_4	IF_1
0x4000e27	            0x85c9	                           test ecx, ecx	       244	srec.c	FUNCTION_4	IF_1	IF_2
0x4000e29	            0x757b	                           jne 0x4000ea6	       244	srec.c	FUNCTION_4	IF_1	IF_2
0x4000e2b	      0xbf12000000	                           mov edi, 0x12	       245	srec.c	FUNCTION_4	IF_1	CALL_1
0x4000e30	      0xe800000000	                          call 0x4000e35	       245	srec.c	FUNCTION_4	IF_1	CALL_1
0x4000e35	            0xeb6f	                           jmp 0x4000ea6	       245	srec.c	FUNCTION_4	IF_1	CALL_1
0x4000e37	          0x4889fb	                            mov rbx, rdi	       245	srec.c	FUNCTION_4	IF_1	CALL_1
0x4000e3a	            0x89f5	                            mov ebp, esi	       245	srec.c	FUNCTION_4	IF_1	CALL_1
0x4000e3c	           0xfb6c2	                           movzx eax, dl	       251	srec.c	FUNCTION_4	ELSE_1	IF_3	CALL_2
0x4000e3f	    0xf68400000000	            test byte [rax + rax], 0x10 	       251	srec.c	FUNCTION_4	ELSE_1	IF_3	CALL_2
0x4000e47	            0x7522	                           jne 0x4000e6b	       251	srec.c	FUNCTION_4	ELSE_1	IF_3	CALL_2
0x4000e49	        0x440fb6c2	                           movzx r8d, dl	        33	stdio2.h	FUNCTION_26	CALL_1
0x4000e4d	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_26	CALL_1
0x4000e52	      0xba28000000	                           mov edx, 0x28	        33	stdio2.h	FUNCTION_26	CALL_1
0x4000e57	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_26	CALL_1
0x4000e5c	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_26	CALL_1
0x4000e5f	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_26	CALL_1
0x4000e64	      0xe800000000	                          call 0x4000e69	        33	stdio2.h	FUNCTION_26	CALL_1
0x4000e69	            0xeb08	                           jmp 0x4000e73	        33	stdio2.h	FUNCTION_26	CALL_1
0x4000e6b	          0x881424	                      mov byte [rsp], dl	       255	srec.c	FUNCTION_4	ELSE_1	ELSE_2
0x4000e6e	      0xc644240100	                   mov byte [rsp + 1], 0	       256	srec.c	FUNCTION_4	ELSE_1	ELSE_2
0x4000e73	      0xba05000000	                              mov edx, 5	       260	srec.c	FUNCTION_4	ELSE_1	CALL_4
0x4000e78	      0xbe00000000	                              mov esi, 0	       260	srec.c	FUNCTION_4	ELSE_1	CALL_4
0x4000e7d	      0xbf00000000	                              mov edi, 0	       260	srec.c	FUNCTION_4	ELSE_1	CALL_4
0x4000e82	      0xe800000000	                          call 0x4000e87	       260	srec.c	FUNCTION_4	ELSE_1	CALL_4
0x4000e87	          0x4889e1	                            mov rcx, rsp	       258	srec.c	FUNCTION_4	ELSE_1	CALL_3
0x4000e8a	            0x89ea	                            mov edx, ebp	       258	srec.c	FUNCTION_4	ELSE_1	CALL_3
0x4000e8c	          0x4889de	                            mov rsi, rbx	       258	srec.c	FUNCTION_4	ELSE_1	CALL_3
0x4000e8f	          0x4889c7	                            mov rdi, rax	       258	srec.c	FUNCTION_4	ELSE_1	CALL_3
0x4000e92	      0xb800000000	                              mov eax, 0	       258	srec.c	FUNCTION_4	ELSE_1	CALL_3
0x4000e97	      0xe800000000	                          call 0x4000e9c	       258	srec.c	FUNCTION_4	ELSE_1	CALL_3
0x4000e9c	      0xbf11000000	                           mov edi, 0x11	       262	srec.c	FUNCTION_4	ELSE_1	CALL_5
0x4000ea1	      0xe800000000	                          call 0x4000ea6	       262	srec.c	FUNCTION_4	ELSE_1	CALL_5
0x4000ea6	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       264	srec.c	FUNCTION_4
0x4000eab	    0x644833042528	                xor rax, qword fs:[0x28]	       264	srec.c	FUNCTION_4
0x4000eb4	            0x7405	                            je 0x4000ebb	       264	srec.c	FUNCTION_4
0x4000eb6	      0xe800000000	                          call 0x4000ebb	       264	srec.c	FUNCTION_4
0x4000ebb	        0x4883c438	                           add rsp, 0x38	       264	srec.c	FUNCTION_4
0x4000ebf	              0x5b	                                 pop rbx	       264	srec.c	FUNCTION_4
0x4000ec0	              0x5d	                                 pop rbp	       264	srec.c	FUNCTION_4
0x4000ec1	              0xc3	                                     ret	       264	srec.c	FUNCTION_4
srec_get_byte	CALL,2:IF,2:functions,0:FOR,0:ELSE,0:WHILE,0:DO,0:SWITCH,0	27
0x4000327	              0x53	                                push rbx	       219	srec.c	FUNCTION_3
0x4000328	        0x4883ec10	                           sub rsp, 0x10	       219	srec.c	FUNCTION_3
0x400032c	          0x4889fa	                            mov rdx, rdi	       219	srec.c	FUNCTION_3
0x400032f	          0x4889f3	                            mov rbx, rsi	       219	srec.c	FUNCTION_3
0x4000332	    0x64488b042528	                mov rax, qword fs:[0x28]	       219	srec.c	FUNCTION_3
0x400033b	      0x4889442408	                mov qword [rsp + 8], rax	       219	srec.c	FUNCTION_3
0x4000340	            0x31c0	                            xor eax, eax	       219	srec.c	FUNCTION_3
0x4000342	      0xbe01000000	                              mov esi, 1	       222	srec.c	FUNCTION_3	IF_1	CALL_1
0x4000347	      0x488d7c2407	                      lea rdi, [rsp + 7]	       222	srec.c	FUNCTION_3	IF_1	CALL_1
0x400034c	      0xe800000000	                          call 0x4000351	       222	srec.c	FUNCTION_3	IF_1	CALL_1
0x4000351	        0x4883f801	                              cmp rax, 1	       222	srec.c	FUNCTION_3	IF_1	CALL_1
0x4000355	            0x7419	                            je 0x4000370	       222	srec.c	FUNCTION_3	IF_1	CALL_1
0x4000357	      0xe800000000	                          call 0x400035c	       224	srec.c	FUNCTION_3	IF_1	IF_2	CALL_2
0x400035c	            0x89c2	                            mov edx, eax	       224	srec.c	FUNCTION_3	IF_1	IF_2	CALL_2
0x400035e	      0xb8ffffffff	                     mov eax, 0xffffffff	       226	srec.c	FUNCTION_3	IF_1
0x4000363	          0x83fa12	                           cmp edx, 0x12	       224	srec.c	FUNCTION_3	IF_1	IF_2	CALL_2
0x4000366	            0x740d	                            je 0x4000375	       224	srec.c	FUNCTION_3	IF_1	IF_2	CALL_2
0x4000368	    0xc70301000000	                      mov dword [rbx], 1	       225	srec.c	FUNCTION_3	IF_1	IF_2
0x400036e	            0xeb05	                           jmp 0x4000375	       225	srec.c	FUNCTION_3	IF_1	IF_2
0x4000370	       0xfb6442407	               movzx eax, byte [rsp + 7]	       229	srec.c	FUNCTION_3
0x4000375	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       230	srec.c	FUNCTION_3
0x400037a	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       230	srec.c	FUNCTION_3
0x4000383	            0x7405	                            je 0x400038a	       230	srec.c	FUNCTION_3
0x4000385	      0xe800000000	                          call 0x400038a	       230	srec.c	FUNCTION_3
0x400038a	        0x4883c410	                           add rsp, 0x10	       230	srec.c	FUNCTION_3
0x400038e	              0x5b	                                 pop rbx	       230	srec.c	FUNCTION_3
0x400038f	              0xc3	                                     ret	       230	srec.c	FUNCTION_3
srec_canonicalize_symtab	CALL,2:IF,2:functions,0:FOR,2:ELSE,0:WHILE,0:DO,0:SWITCH,0	61
0x4000054	            0x4155	                                push r13	      1192	srec.c	FUNCTION_23
0x4000056	            0x4154	                                push r12	      1192	srec.c	FUNCTION_23
0x4000058	              0x55	                                push rbp	      1192	srec.c	FUNCTION_23
0x4000059	              0x53	                                push rbx	      1192	srec.c	FUNCTION_23
0x400005a	        0x4883ec08	                              sub rsp, 8	      1192	srec.c	FUNCTION_23
0x400005e	          0x4889f3	                            mov rbx, rsi	      1192	srec.c	FUNCTION_23
0x4000061	    0x448ba7b80000	           mov r12d, dword [rdi + 0xb8] 	      1193	srec.c	FUNCTION_23	CALL_1
0x4000068	          0x4489e5	                           mov ebp, r12d	      1193	srec.c	FUNCTION_23	CALL_1
0x400006b	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	      1197	srec.c	FUNCTION_23
0x4000072	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1197	srec.c	FUNCTION_23
0x4000076	          0x4885c0	                           test rax, rax	      1198	srec.c	FUNCTION_23	IF_1
0x4000079	            0x7508	                           jne 0x4000083	      1198	srec.c	FUNCTION_23	IF_1
0x400007b	          0x4989fd	                            mov r13, rdi	      1198	srec.c	FUNCTION_23	IF_1
0x400007e	          0x4885ed	                           test rbp, rbp	      1198	srec.c	FUNCTION_23	IF_1
0x4000081	            0x750c	                           jne 0x400008f	      1198	srec.c	FUNCTION_23	IF_1
0x4000083	      0xba00000000	                              mov edx, 0	      1221	srec.c	FUNCTION_23	FOR_2
0x4000088	          0x4885ed	                           test rbp, rbp	      1221	srec.c	FUNCTION_23	FOR_2
0x400008b	            0x756b	                           jne 0x40000f8	      1221	srec.c	FUNCTION_23	FOR_2
0x400008d	            0xeb7f	                           jmp 0x400010e	      1221	srec.c	FUNCTION_23	FOR_2
0x400008f	      0x488d746d00	                  lea rsi, [rbp + rbp*2]	      1203	srec.c	FUNCTION_23	IF_1	CALL_2
0x4000094	        0x48c1e604	                              shl rsi, 4	      1203	srec.c	FUNCTION_23	IF_1	CALL_2
0x4000098	      0xe800000000	                          call 0x400009d	      1203	srec.c	FUNCTION_23	IF_1	CALL_2
0x400009d	          0x4885c0	                           test rax, rax	      1204	srec.c	FUNCTION_23	IF_1	IF_2
0x40000a0	            0x7478	                            je 0x400011a	      1204	srec.c	FUNCTION_23	IF_1	IF_2
0x40000a2	    0x498b95f80000	            mov rdx, qword [r13 + 0xf8] 	      1206	srec.c	FUNCTION_23	IF_1
0x40000a9	        0x48894228	             mov qword [rdx + 0x28], rax	      1206	srec.c	FUNCTION_23	IF_1
0x40000ad	    0x498b95f80000	            mov rdx, qword [r13 + 0xf8] 	      1208	srec.c	FUNCTION_23	IF_1	FOR_1
0x40000b4	        0x488b4a18	            mov rcx, qword [rdx + 0x18] 	      1208	srec.c	FUNCTION_23	IF_1	FOR_1
0x40000b8	          0x4885c9	                           test rcx, rcx	      1208	srec.c	FUNCTION_23	IF_1	FOR_1
0x40000bb	            0x74c6	                            je 0x4000083	      1208	srec.c	FUNCTION_23	IF_1	FOR_1
0x40000bd	          0x4889c2	                            mov rdx, rax	      1208	srec.c	FUNCTION_23	IF_1	FOR_1
0x40000c0	          0x4c892a	                    mov qword [rdx], r13	      1212	srec.c	FUNCTION_23	IF_1	FOR_1
0x40000c3	        0x488b7108	                mov rsi, qword [rcx + 8]	      1213	srec.c	FUNCTION_23	IF_1	FOR_1
0x40000c7	        0x48897208	                mov qword [rdx + 8], rsi	      1213	srec.c	FUNCTION_23	IF_1	FOR_1
0x40000cb	        0x488b7110	            mov rsi, qword [rcx + 0x10] 	      1214	srec.c	FUNCTION_23	IF_1	FOR_1
0x40000cf	        0x48897210	             mov qword [rdx + 0x10], rsi	      1214	srec.c	FUNCTION_23	IF_1	FOR_1
0x40000d3	    0xc74218020000	               mov dword [rdx + 0x18], 2	      1215	srec.c	FUNCTION_23	IF_1	FOR_1
0x40000da	    0x48c742200000	               mov qword [rdx + 0x20], 0	      1216	srec.c	FUNCTION_23	IF_1	FOR_1
0x40000e2	    0x48c742280000	               mov qword [rdx + 0x28], 0	      1217	srec.c	FUNCTION_23	IF_1	FOR_1
0x40000ea	          0x488b09	                    mov rcx, qword [rcx]	      1210	srec.c	FUNCTION_23	IF_1	FOR_1
0x40000ed	        0x4883c230	                           add rdx, 0x30	      1210	srec.c	FUNCTION_23	IF_1	FOR_1
0x40000f1	          0x4885c9	                           test rcx, rcx	      1208	srec.c	FUNCTION_23	IF_1	FOR_1
0x40000f4	            0x75ca	                           jne 0x40000c0	      1208	srec.c	FUNCTION_23	IF_1	FOR_1
0x40000f6	            0xeb8b	                           jmp 0x4000083	      1208	srec.c	FUNCTION_23	IF_1	FOR_1
0x40000f8	        0x4883c308	                              add rbx, 8	      1222	srec.c	FUNCTION_23	FOR_2
0x40000fc	        0x488943f8	                mov qword [rbx - 8], rax	      1222	srec.c	FUNCTION_23	FOR_2
0x4000100	          0x83c201	                              add edx, 1	      1221	srec.c	FUNCTION_23	FOR_2
0x4000103	        0x488d4030	                   lea rax, [rax + 0x30]	      1222	srec.c	FUNCTION_23	FOR_2
0x4000107	            0x89d1	                            mov ecx, edx	      1221	srec.c	FUNCTION_23	FOR_2
0x4000109	          0x4839cd	                            cmp rbp, rcx	      1221	srec.c	FUNCTION_23	FOR_2
0x400010c	            0x77ea	                            ja 0x40000f8	      1221	srec.c	FUNCTION_23	FOR_2
0x400010e	    0x48c703000000	                      mov qword [rbx], 0	      1223	srec.c	FUNCTION_23
0x4000115	          0x4489e0	                           mov eax, r12d	      1225	srec.c	FUNCTION_23
0x4000118	            0xeb07	                           jmp 0x4000121	      1225	srec.c	FUNCTION_23
0x400011a	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      1205	srec.c	FUNCTION_23	IF_1	IF_2
0x4000121	        0x4883c408	                              add rsp, 8	      1226	srec.c	FUNCTION_23
0x4000125	              0x5b	                                 pop rbx	      1226	srec.c	FUNCTION_23
0x4000126	              0x5d	                                 pop rbp	      1226	srec.c	FUNCTION_23
0x4000127	            0x415c	                                 pop r12	      1226	srec.c	FUNCTION_23
0x4000129	            0x415d	                                 pop r13	      1226	srec.c	FUNCTION_23
0x400012b	              0xc3	                                     ret	      1226	srec.c	FUNCTION_23
