deflate_slow	CALL,9:ELSE,2:IF,15:FOR,1:DO,1:functions,0:WHILE,0:SWITCH,0	303
0x4000640	              0x55	                                push rbp	      1929	deflate.c	
0x4000641	              0x53	                                push rbx	      1929	deflate.c	
0x4000642	        0x4883ec08	                              sub rsp, 8	      1929	deflate.c	
0x4000646	          0x4889fb	                            mov rbx, rdi	      1929	deflate.c	
0x4000649	            0x89f5	                            mov ebp, esi	      1929	deflate.c	
0x400064b	    0x81bbb4000000	          cmp dword [rbx + 0xb4], 0x105 	      1940	deflate.c	FUNCTION_22	FOR_1
0x4000655	            0x7725	                            ja 0x400067c	      1940	deflate.c	FUNCTION_22	FOR_1
0x4000657	          0x4889df	                            mov rdi, rbx	      1941	deflate.c	FUNCTION_22	FOR_1
0x400065a	      0xe85afdffff	                    call sym.fill_window	      1941	deflate.c	FUNCTION_22	FOR_1
0x400065f	    0x8b83b4000000	            mov eax, dword [rbx + 0xb4] 	      1942	deflate.c	FUNCTION_22	FOR_1
0x4000665	            0x85ed	                           test ebp, ebp	      1942	deflate.c	FUNCTION_22	FOR_1
0x4000667	            0x750b	                           jne 0x4000674	      1942	deflate.c	FUNCTION_22	FOR_1
0x4000669	      0x3d05010000	                          cmp eax, 0x105	      1942	deflate.c	FUNCTION_22	FOR_1
0x400066e	     0xf86e2040000	                           jbe 0x4000b56	      1942	deflate.c	FUNCTION_22	FOR_1
0x4000674	            0x85c0	                           test eax, eax	      1945	deflate.c	FUNCTION_22	FOR_1	IF_1	CALL_1
0x4000676	     0xf84ac030000	                            je 0x4000a28	      1945	deflate.c	FUNCTION_22	FOR_1	IF_1	CALL_1
0x400067c	    0x83bbb4000000	               cmp dword [rbx + 0xb4], 2	      1952	deflate.c	FUNCTION_22	FOR_1
0x4000683	     0xf86e2040000	                           jbe 0x4000b6b	      1952	deflate.c	FUNCTION_22	FOR_1
0x4000689	    0x8b93ac000000	            mov edx, dword [rbx + 0xac] 	      1953	deflate.c	FUNCTION_22	FOR_1
0x400068f	          0x8d4202	                      lea eax, [rdx + 2]	      1953	deflate.c	FUNCTION_22	FOR_1
0x4000692	        0x488b4b60	            mov rcx, qword [rbx + 0x60] 	      1953	deflate.c	FUNCTION_22	FOR_1
0x4000696	         0xfb63401	             movzx esi, byte [rcx + rax]	      1953	deflate.c	FUNCTION_22	FOR_1
0x400069a	    0x8b8b90000000	            mov ecx, dword [rbx + 0x90] 	      1953	deflate.c	FUNCTION_22	FOR_1
0x40006a0	    0x8b8380000000	            mov eax, dword [rbx + 0x80] 	      1953	deflate.c	FUNCTION_22	FOR_1
0x40006a6	            0xd3e0	                             shl eax, cl	      1953	deflate.c	FUNCTION_22	FOR_1
0x40006a8	            0x31f0	                            xor eax, esi	      1953	deflate.c	FUNCTION_22	FOR_1
0x40006aa	    0x23838c000000	             and eax, dword [rbx + 0x8c]	      1953	deflate.c	FUNCTION_22	FOR_1
0x40006b0	    0x898380000000	             mov dword [rbx + 0x80], eax	      1953	deflate.c	FUNCTION_22	FOR_1
0x40006b6	            0x89c0	                            mov eax, eax	      1953	deflate.c	FUNCTION_22	FOR_1
0x40006b8	        0x488b4b78	            mov rcx, qword [rbx + 0x78] 	      1953	deflate.c	FUNCTION_22	FOR_1
0x40006bc	         0xfb73441	           movzx esi, word [rcx + rax*2]	      1953	deflate.c	FUNCTION_22	FOR_1
0x40006c0	          0x235358	             and edx, dword [rbx + 0x58]	      1953	deflate.c	FUNCTION_22	FOR_1
0x40006c3	        0x488b4370	            mov rax, qword [rbx + 0x70] 	      1953	deflate.c	FUNCTION_22	FOR_1
0x40006c7	        0x66893450	              mov word [rax + rdx*2], si	      1953	deflate.c	FUNCTION_22	FOR_1
0x40006cb	           0xfb7f6	                           movzx esi, si	      1953	deflate.c	FUNCTION_22	FOR_1
0x40006ce	    0x8b9380000000	            mov edx, dword [rbx + 0x80] 	      1953	deflate.c	FUNCTION_22	FOR_1
0x40006d4	        0x488b4378	            mov rax, qword [rbx + 0x78] 	      1953	deflate.c	FUNCTION_22	FOR_1
0x40006d8	    0x8b8bac000000	            mov ecx, dword [rbx + 0xac] 	      1953	deflate.c	FUNCTION_22	FOR_1
0x40006de	        0x66890c50	              mov word [rax + rdx*2], cx	      1953	deflate.c	FUNCTION_22	FOR_1
0x40006e2	    0x8b83a0000000	            mov eax, dword [rbx + 0xa0] 	      1958	deflate.c	FUNCTION_22	FOR_1	IF_4
0x40006e8	    0x8983b8000000	             mov dword [rbx + 0xb8], eax	      1958	deflate.c	FUNCTION_22	FOR_1	IF_4
0x40006ee	    0x8b93b0000000	            mov edx, dword [rbx + 0xb0] 	      1958	deflate.c	FUNCTION_22	FOR_1	IF_4
0x40006f4	    0x8993a4000000	             mov dword [rbx + 0xa4], edx	      1958	deflate.c	FUNCTION_22	FOR_1	IF_4
0x40006fa	    0xc783a0000000	               mov dword [rbx + 0xa0], 2	      1959	deflate.c	FUNCTION_22	FOR_1
0x4000704	            0x85f6	                           test esi, esi	      1961	deflate.c	FUNCTION_22	FOR_1
0x4000706	            0x745a	                            je 0x4000762	      1961	deflate.c	FUNCTION_22	FOR_1
0x4000708	    0x3b83c0000000	            cmp eax, dword [rbx + 0xc0] 	      1961	deflate.c	FUNCTION_22	FOR_1
0x400070e	            0x7352	                           jae 0x4000762	      1961	deflate.c	FUNCTION_22	FOR_1
0x4000710	    0x8b93ac000000	            mov edx, dword [rbx + 0xac] 	      1961	deflate.c	FUNCTION_22	FOR_1
0x4000716	            0x29f2	                            sub edx, esi	      1961	deflate.c	FUNCTION_22	FOR_1
0x4000718	          0x8b4350	            mov eax, dword [rbx + 0x50] 	      1961	deflate.c	FUNCTION_22	FOR_1
0x400071b	      0x2d06010000	                          sub eax, 0x106	      1961	deflate.c	FUNCTION_22	FOR_1
0x4000720	            0x39c2	                            cmp edx, eax	      1961	deflate.c	FUNCTION_22	FOR_1
0x4000722	            0x773e	                            ja 0x4000762	      1961	deflate.c	FUNCTION_22	FOR_1
0x4000724	          0x4889df	                            mov rdi, rbx	      1967	deflate.c	FUNCTION_22	FOR_1	IF_5
0x4000727	      0xe834faffff	                  call sym.longest_match	      1967	deflate.c	FUNCTION_22	FOR_1	IF_5
0x400072c	    0x8983a0000000	             mov dword [rbx + 0xa0], eax	      1967	deflate.c	FUNCTION_22	FOR_1	IF_5
0x4000732	          0x83f805	                              cmp eax, 5	      1970	deflate.c	FUNCTION_22	FOR_1	IF_5
0x4000735	            0x772b	                            ja 0x4000762	      1970	deflate.c	FUNCTION_22	FOR_1	IF_5
0x4000737	    0x83bbc8000000	               cmp dword [rbx + 0xc8], 1	      1970	deflate.c	FUNCTION_22	FOR_1	IF_5
0x400073e	            0x7418	                            je 0x4000758	      1970	deflate.c	FUNCTION_22	FOR_1	IF_5
0x4000740	          0x83f803	                              cmp eax, 3	      1972	deflate.c	FUNCTION_22	FOR_1	IF_5
0x4000743	            0x751d	                           jne 0x4000762	      1972	deflate.c	FUNCTION_22	FOR_1	IF_5
0x4000745	    0x8b83ac000000	            mov eax, dword [rbx + 0xac] 	      1972	deflate.c	FUNCTION_22	FOR_1	IF_5
0x400074b	    0x2b83b0000000	             sub eax, dword [rbx + 0xb0]	      1972	deflate.c	FUNCTION_22	FOR_1	IF_5
0x4000751	      0x3d00100000	                         cmp eax, 0x1000	      1972	deflate.c	FUNCTION_22	FOR_1	IF_5
0x4000756	            0x760a	                           jbe 0x4000762	      1972	deflate.c	FUNCTION_22	FOR_1	IF_5
0x4000758	    0xc783a0000000	               mov dword [rbx + 0xa0], 2	      1980	deflate.c	FUNCTION_22	FOR_1	IF_5	IF_6
0x4000762	    0x8b83b8000000	            mov eax, dword [rbx + 0xb8] 	      1986	deflate.c	FUNCTION_22	FOR_1	IF_5
0x4000768	          0x83f802	                              cmp eax, 2	      1986	deflate.c	FUNCTION_22	FOR_1	IF_5
0x400076b	     0xf86cc010000	                           jbe 0x400093d	      1986	deflate.c	FUNCTION_22	FOR_1	IF_5
0x4000771	    0x3b83a0000000	            cmp eax, dword [rbx + 0xa0] 	      1986	deflate.c	FUNCTION_22	FOR_1	IF_5
0x4000777	     0xf82c0010000	                            jb 0x400093d	      1986	deflate.c	FUNCTION_22	FOR_1	IF_5
0x400077d	    0x8b93ac000000	            mov edx, dword [rbx + 0xac] 	      1987	deflate.c	FUNCTION_22	FOR_1
0x4000783	            0x89d6	                            mov esi, edx	      1987	deflate.c	FUNCTION_22	FOR_1
0x4000785	     0x3b3b4000000	             add esi, dword [rbx + 0xb4]	      1987	deflate.c	FUNCTION_22	FOR_1
0x400078b	          0x83ee03	                              sub esi, 3	      1987	deflate.c	FUNCTION_22	FOR_1
0x400078e	          0x83e803	                              sub eax, 3	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000791	    0x662b93a40000	               sub dx, word [rbx + 0xa4]	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000798	    0x8bbb0c170000	          mov edi, dword [rbx + 0x170c] 	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400079e	    0x488b8b101700	          mov rcx, qword [rbx + 0x1710] 	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40007a5	        0x448d42ff	                      lea r8d, [rdx - 1]	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40007a9	      0x6644890479	             mov word [rcx + rdi*2], r8w	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40007ae	    0x488bbb001700	          mov rdi, qword [rbx + 0x1700] 	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40007b5	    0x8b8b0c170000	          mov ecx, dword [rbx + 0x170c] 	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40007bb	        0x448d4101	                      lea r8d, [rcx + 1]	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40007bf	    0x4489830c1700	          mov dword [rbx + 0x170c], r8d 	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40007c6	            0x89c9	                            mov ecx, ecx	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40007c8	          0x88040f	                mov byte [rdi + rcx], al	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40007cb	          0x83ea02	                              sub edx, 2	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40007ce	           0xfb6c0	                           movzx eax, al	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40007d1	     0xfb680000000	                   movzx eax, byte [rax]	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40007d8	    0x66838483d804	       add word [rbx + rax*4 + 0x4d8], 1	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40007e1	      0x6681faff00	                            cmp dx, 0xff	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40007e6	            0x770c	                            ja 0x40007f4	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40007e8	           0xfb7d2	                           movzx edx, dx	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40007eb	     0xfb682000000	                   movzx eax, byte [rdx]	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40007f2	            0xeb17	                           jmp 0x400080b	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40007f4	        0x66c1ea07	                               shr dx, 7	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40007f8	    0x488d82000100	                  lea rax, [rdx + 0x100]	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40007ff	      0x25ff030000	                          and eax, 0x3ff	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000804	     0xfb680000000	                   movzx eax, byte [rax]	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400080b	            0x4898	                                    cdqe	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400080d	    0x66838483c809	       add word [rbx + rax*4 + 0x9c8], 1	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000816	    0x448b830c1700	          mov r8d, dword [rbx + 0x170c] 	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400081d	    0x8b8308170000	          mov eax, dword [rbx + 0x1708] 	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000823	          0x8d78ff	                      lea edi, [rax - 1]	      1992	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000826	    0x8b93b8000000	            mov edx, dword [rbx + 0xb8] 	      2000	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400082c	    0x8b83b4000000	            mov eax, dword [rbx + 0xb4] 	      2000	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000832	          0x83c001	                              add eax, 1	      2000	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000835	            0x29d0	                            sub eax, edx	      2000	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000837	    0x8983b4000000	             mov dword [rbx + 0xb4], eax	      2000	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400083d	          0x83ea02	                              sub edx, 2	      2001	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000840	    0x8993b8000000	             mov dword [rbx + 0xb8], edx	      2001	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000846	    0x8b83ac000000	            mov eax, dword [rbx + 0xac] 	      2003	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400084c	          0x8d5001	                      lea edx, [rax + 1]	      2003	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400084f	    0x8993ac000000	             mov dword [rbx + 0xac], edx	      2003	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000855	            0x39d6	                            cmp esi, edx	      2003	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000857	            0x7252	                            jb 0x40008ab	      2003	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000859	          0x8d4003	                      lea eax, [rax + 3]	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400085c	        0x488b4b60	            mov rcx, qword [rbx + 0x60] 	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000860	      0x440fb60c01	             movzx r9d, byte [rcx + rax]	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000865	    0x8b8b90000000	            mov ecx, dword [rbx + 0x90] 	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400086b	    0x8b8380000000	            mov eax, dword [rbx + 0x80] 	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000871	            0xd3e0	                             shl eax, cl	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000873	          0x4431c8	                            xor eax, r9d	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000876	    0x23838c000000	             and eax, dword [rbx + 0x8c]	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400087c	    0x898380000000	             mov dword [rbx + 0x80], eax	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000882	            0x89c0	                            mov eax, eax	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000884	        0x488b4b78	            mov rcx, qword [rbx + 0x78] 	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000888	         0xfb70c41	           movzx ecx, word [rcx + rax*2]	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400088c	          0x235358	             and edx, dword [rbx + 0x58]	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400088f	        0x488b4370	            mov rax, qword [rbx + 0x70] 	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000893	        0x66890c50	              mov word [rax + rdx*2], cx	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000897	    0x8b9380000000	            mov edx, dword [rbx + 0x80] 	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400089d	        0x488b4378	            mov rax, qword [rbx + 0x78] 	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40008a1	    0x8b8bac000000	            mov ecx, dword [rbx + 0xac] 	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40008a7	        0x66890c50	              mov word [rax + rdx*2], cx	      2004	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40008ab	    0x8b83b8000000	            mov eax, dword [rbx + 0xb8] 	      2006	deflate.c	FUNCTION_22	FOR_1	IF_7	DO_1
0x40008b1	          0x83e801	                              sub eax, 1	      2006	deflate.c	FUNCTION_22	FOR_1	IF_7	DO_1
0x40008b4	    0x8983b8000000	             mov dword [rbx + 0xb8], eax	      2006	deflate.c	FUNCTION_22	FOR_1	IF_7	DO_1
0x40008ba	            0x85c0	                           test eax, eax	      2006	deflate.c	FUNCTION_22	FOR_1	IF_7	DO_1
0x40008bc	            0x7588	                           jne 0x4000846	      2006	deflate.c	FUNCTION_22	FOR_1	IF_7	DO_1
0x40008be	    0xc783a8000000	               mov dword [rbx + 0xa8], 0	      2007	deflate.c	FUNCTION_22	FOR_1	IF_7	DO_1	IF_8
0x40008c8	    0xc783a0000000	               mov dword [rbx + 0xa0], 2	      2008	deflate.c	FUNCTION_22	FOR_1	IF_7	DO_1	IF_8
0x40008d2	    0x8b83ac000000	            mov eax, dword [rbx + 0xac] 	      2009	deflate.c	FUNCTION_22	FOR_1	IF_7	DO_1	IF_8
0x40008d8	          0x83c001	                              add eax, 1	      2009	deflate.c	FUNCTION_22	FOR_1	IF_7	DO_1	IF_8
0x40008db	    0x8983ac000000	             mov dword [rbx + 0xac], eax	      2009	deflate.c	FUNCTION_22	FOR_1	IF_7	DO_1	IF_8
0x40008e1	          0x4139f8	                            cmp r8d, edi	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40008e4	     0xf8561fdffff	                           jne 0x400064b	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40008ea	    0x488b8b980000	            mov rcx, qword [rbx + 0x98] 	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40008f1	            0x89c2	                            mov edx, eax	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40008f3	          0x4829ca	                            sub rdx, rcx	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40008f6	      0xbe00000000	                              mov esi, 0	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40008fb	          0x4885c9	                           test rcx, rcx	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x40008fe	            0x7809	                            js 0x4000909	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000900	            0x89c9	                            mov ecx, ecx	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000902	          0x4889ce	                            mov rsi, rcx	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000905	        0x48037360	             add rsi, qword [rbx + 0x60]	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000909	      0xb900000000	                              mov ecx, 0	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400090e	          0x4889df	                            mov rdi, rbx	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000911	      0xe800000000	                          call 0x4000916	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000916	    0x8b83ac000000	            mov eax, dword [rbx + 0xac] 	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400091c	    0x488983980000	             mov qword [rbx + 0x98], rax	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000923	          0x488b3b	                    mov rdi, qword [rbx]	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000926	      0xe8a0fcffff	                  call sym.flush_pending	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400092b	          0x488b03	                    mov rax, qword [rbx]	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400092e	        0x83782000	               cmp dword [rax + 0x20], 0	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000932	     0xf8513fdffff	                           jne 0x400064b	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000938	      0xe920020000	                           jmp 0x4000b5d	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400093d	    0x83bba8000000	               cmp dword [rbx + 0xa8], 0	      2013	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000944	     0xf84c1000000	                            je 0x4000a0b	      2013	deflate.c	FUNCTION_22	FOR_1	IF_7
0x400094a	    0x8b83ac000000	            mov eax, dword [rbx + 0xac] 	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4000950	          0x8d40ff	                      lea eax, [rax - 1]	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4000953	        0x488b5360	            mov rdx, qword [rbx + 0x60] 	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4000957	         0xfb60402	             movzx eax, byte [rdx + rax]	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x400095b	    0x8b8b0c170000	          mov ecx, dword [rbx + 0x170c] 	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4000961	    0x488b93101700	          mov rdx, qword [rbx + 0x1710] 	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4000968	    0x66c7044a0000	               mov word [rdx + rcx*2], 0	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x400096e	    0x488b8b001700	          mov rcx, qword [rbx + 0x1700] 	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4000975	    0x8b930c170000	          mov edx, dword [rbx + 0x170c] 	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x400097b	          0x8d7201	                      lea esi, [rdx + 1]	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x400097e	    0x89b30c170000	          mov dword [rbx + 0x170c], esi 	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4000984	            0x89d2	                            mov edx, edx	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4000986	          0x880411	                mov byte [rcx + rdx], al	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4000989	           0xfb6c0	                           movzx eax, al	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x400098c	    0x66838483d400	        add word [rbx + rax*4 + 0xd4], 1	      2019	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4000995	    0x8b8308170000	          mov eax, dword [rbx + 0x1708] 	      2020	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x400099b	          0x83e801	                              sub eax, 1	      2020	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x400099e	    0x39830c170000	          cmp dword [rbx + 0x170c], eax 	      2020	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x40009a4	            0x7545	                           jne 0x40009eb	      2020	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x40009a6	    0x488b83980000	            mov rax, qword [rbx + 0x98] 	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x40009ad	    0x8b93ac000000	            mov edx, dword [rbx + 0xac] 	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x40009b3	          0x4829c2	                            sub rdx, rax	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x40009b6	      0xbe00000000	                              mov esi, 0	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x40009bb	          0x4885c0	                           test rax, rax	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x40009be	            0x7809	                            js 0x40009c9	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x40009c0	            0x89c0	                            mov eax, eax	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x40009c2	        0x48034360	             add rax, qword [rbx + 0x60]	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x40009c6	          0x4889c6	                            mov rsi, rax	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x40009c9	      0xb900000000	                              mov ecx, 0	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x40009ce	          0x4889df	                            mov rdi, rbx	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x40009d1	      0xe800000000	                          call 0x40009d6	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x40009d6	    0x8b83ac000000	            mov eax, dword [rbx + 0xac] 	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x40009dc	    0x488983980000	             mov qword [rbx + 0x98], rax	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x40009e3	          0x488b3b	                    mov rdi, qword [rbx]	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x40009e6	      0xe8e0fbffff	                  call sym.flush_pending	      2021	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x40009eb	    0x8383ac000000	               add dword [rbx + 0xac], 1	      2023	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10	CALL_6
0x40009f2	    0x83abb4000000	               sub dword [rbx + 0xb4], 1	      2024	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10	IF_11
0x40009f9	          0x488b03	                    mov rax, qword [rbx]	      2025	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10	IF_11
0x40009fc	        0x83782000	               cmp dword [rax + 0x20], 0	      2025	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10	IF_11
0x4000a00	     0xf8545fcffff	                           jne 0x400064b	      2025	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10	IF_11
0x4000a06	      0xe959010000	                           jmp 0x4000b64	      2025	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10	IF_11
0x4000a0b	    0xc783a8000000	               mov dword [rbx + 0xa8], 1	      2030	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10
0x4000a15	    0x8383ac000000	               add dword [rbx + 0xac], 1	      2031	deflate.c	FUNCTION_22	FOR_1	ELSE_2
0x4000a1c	    0x83abb4000000	               sub dword [rbx + 0xb4], 1	      2032	deflate.c	FUNCTION_22	FOR_1	ELSE_2
0x4000a23	      0xe923fcffff	                           jmp 0x400064b	      2032	deflate.c	FUNCTION_22	FOR_1	ELSE_2
0x4000a28	    0x83bba8000000	               cmp dword [rbx + 0xa8], 0	      2036	deflate.c	FUNCTION_22	FOR_1	ELSE_2
0x4000a2f	            0x7455	                            je 0x4000a86	      2036	deflate.c	FUNCTION_22	FOR_1	ELSE_2
0x4000a31	    0x8b83ac000000	            mov eax, dword [rbx + 0xac] 	      2038	deflate.c	FUNCTION_22	FOR_1
0x4000a37	          0x8d40ff	                      lea eax, [rax - 1]	      2038	deflate.c	FUNCTION_22	FOR_1
0x4000a3a	        0x488b5360	            mov rdx, qword [rbx + 0x60] 	      2038	deflate.c	FUNCTION_22	FOR_1
0x4000a3e	         0xfb60402	             movzx eax, byte [rdx + rax]	      2038	deflate.c	FUNCTION_22	FOR_1
0x4000a42	    0x8b8b0c170000	          mov ecx, dword [rbx + 0x170c] 	      2038	deflate.c	FUNCTION_22	FOR_1
0x4000a48	    0x488b93101700	          mov rdx, qword [rbx + 0x1710] 	      2038	deflate.c	FUNCTION_22	FOR_1
0x4000a4f	    0x66c7044a0000	               mov word [rdx + rcx*2], 0	      2038	deflate.c	FUNCTION_22	FOR_1
0x4000a55	    0x488b8b001700	          mov rcx, qword [rbx + 0x1700] 	      2038	deflate.c	FUNCTION_22	FOR_1
0x4000a5c	    0x8b930c170000	          mov edx, dword [rbx + 0x170c] 	      2038	deflate.c	FUNCTION_22	FOR_1
0x4000a62	          0x8d7201	                      lea esi, [rdx + 1]	      2038	deflate.c	FUNCTION_22	FOR_1
0x4000a65	    0x89b30c170000	          mov dword [rbx + 0x170c], esi 	      2038	deflate.c	FUNCTION_22	FOR_1
0x4000a6b	            0x89d2	                            mov edx, edx	      2038	deflate.c	FUNCTION_22	FOR_1
0x4000a6d	          0x880411	                mov byte [rcx + rdx], al	      2038	deflate.c	FUNCTION_22	FOR_1
0x4000a70	           0xfb6c0	                           movzx eax, al	      2038	deflate.c	FUNCTION_22	FOR_1
0x4000a73	    0x66838483d400	        add word [rbx + rax*4 + 0xd4], 1	      2038	deflate.c	FUNCTION_22	FOR_1
0x4000a7c	    0xc783a8000000	               mov dword [rbx + 0xa8], 0	      2039	deflate.c	FUNCTION_22	CALL_7
0x4000a86	    0x8b93ac000000	            mov edx, dword [rbx + 0xac] 	      2041	deflate.c	FUNCTION_22	IF_13	CALL_8
0x4000a8c	          0x83fa02	                              cmp edx, 2	      2041	deflate.c	FUNCTION_22	IF_13	CALL_8
0x4000a8f	      0xb802000000	                              mov eax, 2	      2041	deflate.c	FUNCTION_22	IF_13	CALL_8
0x4000a94	           0xf46c2	                         cmovbe eax, edx	      2041	deflate.c	FUNCTION_22	IF_13	CALL_8
0x4000a97	    0x89832c170000	          mov dword [rbx + 0x172c], eax 	      2041	deflate.c	FUNCTION_22	IF_13	CALL_8
0x4000a9d	          0x83fd04	                              cmp ebp, 4	      2042	deflate.c	FUNCTION_22	IF_13	CALL_9
0x4000aa0	            0x7552	                           jne 0x4000af4	      2042	deflate.c	FUNCTION_22	IF_13	CALL_9
0x4000aa2	    0x488b83980000	            mov rax, qword [rbx + 0x98] 	      2043	deflate.c	FUNCTION_22	IF_13
0x4000aa9	            0x89d2	                            mov edx, edx	      2043	deflate.c	FUNCTION_22	IF_13
0x4000aab	          0x4829c2	                            sub rdx, rax	      2043	deflate.c	FUNCTION_22	IF_13
0x4000aae	      0xbe00000000	                              mov esi, 0	      2043	deflate.c	FUNCTION_22	IF_13
0x4000ab3	          0x4885c0	                           test rax, rax	      2043	deflate.c	FUNCTION_22	IF_13
0x4000ab6	            0x7809	                            js 0x4000ac1	      2043	deflate.c	FUNCTION_22	IF_13
0x4000ab8	            0x89c0	                            mov eax, eax	      2043	deflate.c	FUNCTION_22	IF_13
0x4000aba	        0x48034360	             add rax, qword [rbx + 0x60]	      2043	deflate.c	FUNCTION_22	IF_13
0x4000abe	          0x4889c6	                            mov rsi, rax	      2043	deflate.c	FUNCTION_22	IF_13
0x4000ac1	      0xb901000000	                              mov ecx, 1	      2043	deflate.c	FUNCTION_22	IF_13
0x4000ac6	          0x4889df	                            mov rdi, rbx	      2043	deflate.c	FUNCTION_22	IF_13
0x4000ac9	      0xe800000000	                          call 0x4000ace	      2043	deflate.c	FUNCTION_22	IF_13
0x4000ace	    0x8b83ac000000	            mov eax, dword [rbx + 0xac] 	      2043	deflate.c	FUNCTION_22	IF_13
0x4000ad4	    0x488983980000	             mov qword [rbx + 0x98], rax	      2043	deflate.c	FUNCTION_22	IF_13
0x4000adb	          0x488b3b	                    mov rdi, qword [rbx]	      2043	deflate.c	FUNCTION_22	IF_13
0x4000ade	      0xe8e8faffff	                  call sym.flush_pending	      2043	deflate.c	FUNCTION_22	IF_13
0x4000ae3	          0x488b03	                    mov rax, qword [rbx]	      2043	deflate.c	FUNCTION_22	IF_13
0x4000ae6	        0x83782001	               cmp dword [rax + 0x20], 1	      2044	deflate.c	FUNCTION_22	IF_13
0x4000aea	            0x19c0	                            sbb eax, eax	      2044	deflate.c	FUNCTION_22	IF_13
0x4000aec	          0x83c003	                              add eax, 3	      2044	deflate.c	FUNCTION_22	IF_13
0x4000aef	      0xe99e000000	                           jmp 0x4000b92	      2044	deflate.c	FUNCTION_22	IF_13
0x4000af4	      0xb801000000	                              mov eax, 1	      2048	deflate.c	FUNCTION_22	IF_14
0x4000af9	    0x83bb0c170000	             cmp dword [rbx + 0x170c], 0	      2046	deflate.c	FUNCTION_22	IF_14
0x4000b00	     0xf848c000000	                            je 0x4000b92	      2046	deflate.c	FUNCTION_22	IF_14
0x4000b06	    0x488b83980000	            mov rax, qword [rbx + 0x98] 	      2047	deflate.c	FUNCTION_22	IF_14
0x4000b0d	            0x89d2	                            mov edx, edx	      2047	deflate.c	FUNCTION_22	IF_14
0x4000b0f	          0x4829c2	                            sub rdx, rax	      2047	deflate.c	FUNCTION_22	IF_14
0x4000b12	      0xbe00000000	                              mov esi, 0	      2047	deflate.c	FUNCTION_22	IF_14
0x4000b17	          0x4885c0	                           test rax, rax	      2047	deflate.c	FUNCTION_22	IF_14
0x4000b1a	            0x7809	                            js 0x4000b25	      2047	deflate.c	FUNCTION_22	IF_14
0x4000b1c	            0x89c0	                            mov eax, eax	      2047	deflate.c	FUNCTION_22	IF_14
0x4000b1e	        0x48034360	             add rax, qword [rbx + 0x60]	      2047	deflate.c	FUNCTION_22	IF_14
0x4000b22	          0x4889c6	                            mov rsi, rax	      2047	deflate.c	FUNCTION_22	IF_14
0x4000b25	      0xb900000000	                              mov ecx, 0	      2047	deflate.c	FUNCTION_22	IF_14
0x4000b2a	          0x4889df	                            mov rdi, rbx	      2047	deflate.c	FUNCTION_22	IF_14
0x4000b2d	      0xe800000000	                          call 0x4000b32	      2047	deflate.c	FUNCTION_22	IF_14
0x4000b32	    0x8b83ac000000	            mov eax, dword [rbx + 0xac] 	      2047	deflate.c	FUNCTION_22	IF_14
0x4000b38	    0x488983980000	             mov qword [rbx + 0x98], rax	      2047	deflate.c	FUNCTION_22	IF_14
0x4000b3f	          0x488b3b	                    mov rdi, qword [rbx]	      2047	deflate.c	FUNCTION_22	IF_14
0x4000b42	      0xe884faffff	                  call sym.flush_pending	      2047	deflate.c	FUNCTION_22	IF_14
0x4000b47	          0x488b03	                    mov rax, qword [rbx]	      2047	deflate.c	FUNCTION_22	IF_14
0x4000b4a	        0x83782000	               cmp dword [rax + 0x20], 0	      1943	deflate.c	FUNCTION_22	FOR_1
0x4000b4e	           0xf95c0	                                setne al	      1943	deflate.c	FUNCTION_22	FOR_1
0x4000b51	           0xfb6c0	                           movzx eax, al	      1943	deflate.c	FUNCTION_22	FOR_1
0x4000b54	            0xeb3c	                           jmp 0x4000b92	      1943	deflate.c	FUNCTION_22	FOR_1
0x4000b56	      0xb800000000	                              mov eax, 0	      1943	deflate.c	FUNCTION_22	FOR_1
0x4000b5b	            0xeb35	                           jmp 0x4000b92	      1943	deflate.c	FUNCTION_22	FOR_1
0x4000b5d	      0xb800000000	                              mov eax, 0	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000b62	            0xeb2e	                           jmp 0x4000b92	      2011	deflate.c	FUNCTION_22	FOR_1	IF_7
0x4000b64	      0xb800000000	                              mov eax, 0	      2025	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10	IF_11
0x4000b69	            0xeb27	                           jmp 0x4000b92	      2025	deflate.c	FUNCTION_22	FOR_1	ELSE_1	IF_10	IF_11
0x4000b6b	    0x8b83a0000000	            mov eax, dword [rbx + 0xa0] 	      1958	deflate.c	FUNCTION_22	FOR_1	IF_4
0x4000b71	    0x8983b8000000	             mov dword [rbx + 0xb8], eax	      1958	deflate.c	FUNCTION_22	FOR_1	IF_4
0x4000b77	    0x8b83b0000000	            mov eax, dword [rbx + 0xb0] 	      1958	deflate.c	FUNCTION_22	FOR_1	IF_4
0x4000b7d	    0x8983a4000000	             mov dword [rbx + 0xa4], eax	      1958	deflate.c	FUNCTION_22	FOR_1	IF_4
0x4000b83	    0xc783a0000000	               mov dword [rbx + 0xa0], 2	      1959	deflate.c	FUNCTION_22	FOR_1
0x4000b8d	      0xe9d0fbffff	                           jmp 0x4000762	      1959	deflate.c	FUNCTION_22	FOR_1
0x4000b92	        0x4883c408	                              add rsp, 8	      2049	deflate.c	FUNCTION_22	IF_14
0x4000b96	              0x5b	                                 pop rbx	      2049	deflate.c	FUNCTION_22	IF_14
0x4000b97	              0x5d	                                 pop rbp	      2049	deflate.c	FUNCTION_22	IF_14
0x4000b98	              0xc3	                                     ret	      2049	deflate.c	FUNCTION_22	IF_14
deflateReset	CALL,2:ELSE,0:IF,1:FOR,0:DO,0:functions,0:WHILE,0:SWITCH,0	46
0x400177a	              0x55	                                push rbp	       507	deflate.c	
0x400177b	              0x53	                                push rbx	       507	deflate.c	
0x400177c	        0x4883ec08	                              sub rsp, 8	       507	deflate.c	
0x4001780	          0x4889fb	                            mov rbx, rdi	       507	deflate.c	
0x4001783	      0xe800000000	                          call 0x4001788	       510	deflate.c	
0x4001788	            0x89c5	                            mov ebp, eax	       510	deflate.c	
0x400178a	            0x85c0	                           test eax, eax	       511	deflate.c	FUNCTION_5
0x400178c	     0xf85cc000000	                           jne 0x400185e	       511	deflate.c	FUNCTION_5
0x4001792	        0x488b5b38	            mov rbx, qword [rbx + 0x38] 	       512	deflate.c	FUNCTION_5
0x4001796	          0x8b4350	            mov eax, dword [rbx + 0x50] 	      1197	deflate.c	
0x4001799	          0x4801c0	                            add rax, rax	      1197	deflate.c	
0x400179c	        0x48894368	             mov qword [rbx + 0x68], rax	      1197	deflate.c	
0x40017a0	    0x8b8384000000	            mov eax, dword [rbx + 0x84] 	      1199	deflate.c	
0x40017a6	          0x8d50ff	                      lea edx, [rax - 1]	      1199	deflate.c	
0x40017a9	        0x488b4378	            mov rax, qword [rbx + 0x78] 	      1199	deflate.c	
0x40017ad	    0x66c704500000	               mov word [rax + rdx*2], 0	      1199	deflate.c	
0x40017b3	    0x8b8384000000	            mov eax, dword [rbx + 0x84] 	        90	string3.h	FUNCTION_28	CALL_6
0x40017b9	          0x8d50ff	                      lea edx, [rax - 1]	        90	string3.h	FUNCTION_28	CALL_6
0x40017bc	          0x4801d2	                            add rdx, rdx	        90	string3.h	FUNCTION_28	CALL_6
0x40017bf	        0x488b7b78	            mov rdi, qword [rbx + 0x78] 	        90	string3.h	FUNCTION_28	CALL_6
0x40017c3	      0xbe00000000	                              mov esi, 0	        90	string3.h	FUNCTION_28	CALL_6
0x40017c8	      0xe800000000	                          call 0x40017cd	        90	string3.h	FUNCTION_28	CALL_6
0x40017cd	    0x486383c40000	         movsxd rax, dword [rbx + 0xc4] 	      1203	deflate.c	FUNCTION_16
0x40017d4	        0x48c1e004	                              shl rax, 4	      1203	deflate.c	FUNCTION_16
0x40017d8	    0x488d90000000	                          lea rdx, [rax]	      1203	deflate.c	FUNCTION_16
0x40017df	     0xfb788000000	                   movzx ecx, word [rax]	      1203	deflate.c	FUNCTION_16
0x40017e6	    0x898bc0000000	             mov dword [rbx + 0xc0], ecx	      1203	deflate.c	FUNCTION_16
0x40017ec	     0xfb780000000	                   movzx eax, word [rax]	      1204	deflate.c	FUNCTION_16
0x40017f3	    0x8983cc000000	             mov dword [rbx + 0xcc], eax	      1204	deflate.c	FUNCTION_16
0x40017f9	         0xfb74204	               movzx eax, word [rdx + 4]	      1205	deflate.c	FUNCTION_16
0x40017fd	    0x8983d0000000	             mov dword [rbx + 0xd0], eax	      1205	deflate.c	FUNCTION_16
0x4001803	         0xfb74206	               movzx eax, word [rdx + 6]	      1206	deflate.c	FUNCTION_16
0x4001807	    0x8983bc000000	             mov dword [rbx + 0xbc], eax	      1206	deflate.c	FUNCTION_16
0x400180d	    0xc783ac000000	               mov dword [rbx + 0xac], 0	      1208	deflate.c	FUNCTION_16
0x4001817	    0x48c783980000	               mov qword [rbx + 0x98], 0	      1209	deflate.c	FUNCTION_16
0x4001822	    0xc783b4000000	               mov dword [rbx + 0xb4], 0	      1210	deflate.c	FUNCTION_16
0x400182c	    0xc7832c170000	            mov dword [rbx + 0x172c], 0 	      1211	deflate.c	FUNCTION_16
0x4001836	    0xc783b8000000	               mov dword [rbx + 0xb8], 2	      1212	deflate.c	FUNCTION_16
0x4001840	    0xc783a0000000	               mov dword [rbx + 0xa0], 2	      1212	deflate.c	FUNCTION_16
0x400184a	    0xc783a8000000	               mov dword [rbx + 0xa8], 0	      1213	deflate.c	FUNCTION_16
0x4001854	    0xc78380000000	               mov dword [rbx + 0x80], 0	      1214	deflate.c	FUNCTION_16
0x400185e	            0x89e8	                            mov eax, ebp	       514	deflate.c	FUNCTION_5	CALL_1
0x4001860	        0x4883c408	                              add rsp, 8	       514	deflate.c	FUNCTION_5	CALL_1
0x4001864	              0x5b	                                 pop rbx	       514	deflate.c	FUNCTION_5	CALL_1
0x4001865	              0x5d	                                 pop rbp	       514	deflate.c	FUNCTION_5	CALL_1
0x4001866	              0xc3	                                     ret	       514	deflate.c	FUNCTION_5	CALL_1
deflateBound	CALL,1:ELSE,0:IF,7:FOR,0:DO,2:functions,0:WHILE,0:SWITCH,1	91
0x40019cf	            0x4155	                                push r13	       655	deflate.c	
0x40019d1	            0x4154	                                push r12	       655	deflate.c	
0x40019d3	              0x55	                                push rbp	       655	deflate.c	
0x40019d4	              0x53	                                push rbx	       655	deflate.c	
0x40019d5	          0x4989fc	                            mov r12, rdi	       655	deflate.c	
0x40019d8	          0x4889f3	                            mov rbx, rsi	       655	deflate.c	
0x40019db	        0x488d6e07	                      lea rbp, [rsi + 7]	       661	deflate.c	FUNCTION_10
0x40019df	        0x488d463f	                   lea rax, [rsi + 0x3f]	       661	deflate.c	FUNCTION_10
0x40019e3	        0x48c1e806	                              shr rax, 6	       661	deflate.c	FUNCTION_10
0x40019e7	          0x4889ea	                            mov rdx, rbp	       661	deflate.c	FUNCTION_10
0x40019ea	        0x48c1ea03	                              shr rdx, 3	       661	deflate.c	FUNCTION_10
0x40019ee	          0x4801d0	                            add rax, rdx	       661	deflate.c	FUNCTION_10
0x40019f1	        0x4c8d2c30	                    lea r13, [rax + rsi]	       661	deflate.c	FUNCTION_10
0x40019f5	      0xe8bfe6ffff	              call sym.deflateStateCheck	       664	deflate.c	FUNCTION_10
0x40019fa	            0x85c0	                           test eax, eax	       664	deflate.c	FUNCTION_10
0x40019fc	            0x7409	                            je 0x4001a07	       664	deflate.c	FUNCTION_10
0x40019fe	        0x498d450b	                    lea rax, [r13 + 0xb]	       665	deflate.c	FUNCTION_10
0x4001a02	      0xe9e5000000	                           jmp 0x4001aec	       665	deflate.c	FUNCTION_10
0x4001a07	      0x498b442438	            mov rax, qword [r12 + 0x38] 	       668	deflate.c	FUNCTION_10	IF_1	CALL_1
0x4001a0c	          0x8b5030	            mov edx, dword [rax + 0x30] 	       669	deflate.c	FUNCTION_10	IF_1
0x4001a0f	          0x83fa01	                              cmp edx, 1	       669	deflate.c	FUNCTION_10	IF_1
0x4001a12	            0x7416	                            je 0x4001a2a	       669	deflate.c	FUNCTION_10	IF_1
0x4001a14	          0x83fa02	                              cmp edx, 2	       669	deflate.c	FUNCTION_10	IF_1
0x4001a17	            0x7425	                            je 0x4001a3e	       669	deflate.c	FUNCTION_10	IF_1
0x4001a19	          0x83fa01	                              cmp edx, 1	       699	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x4001a1c	          0x4819d2	                            sbb rdx, rdx	       699	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x4001a1f	          0x48f7d2	                                 not rdx	       699	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x4001a22	          0x83e206	                              and edx, 6	       699	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x4001a25	      0xe989000000	                           jmp 0x4001ab3	       699	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x4001a2a	    0x83b8ac000000	               cmp dword [rax + 0xac], 1	       674	deflate.c	FUNCTION_10	SWITCH_1
0x4001a31	          0x4819d2	                            sbb rdx, rdx	       674	deflate.c	FUNCTION_10	SWITCH_1
0x4001a34	        0x4883e2fc	             and rdx, 0xfffffffffffffffc	       674	deflate.c	FUNCTION_10	SWITCH_1
0x4001a38	        0x4883c20a	                            add rdx, 0xa	       674	deflate.c	FUNCTION_10	SWITCH_1
0x4001a3c	            0xeb75	                           jmp 0x4001ab3	       674	deflate.c	FUNCTION_10	SWITCH_1
0x4001a3e	        0x488b7838	            mov rdi, qword [rax + 0x38] 	       679	deflate.c	FUNCTION_10	SWITCH_1
0x4001a42	          0x4885ff	                           test rdi, rdi	       679	deflate.c	FUNCTION_10	SWITCH_1
0x4001a45	            0x7467	                            je 0x4001aae	       679	deflate.c	FUNCTION_10	SWITCH_1
0x4001a47	      0x48837f1800	               cmp qword [rdi + 0x18], 0	       681	deflate.c	FUNCTION_10	SWITCH_1
0x4001a4c	            0x740c	                            je 0x4001a5a	       681	deflate.c	FUNCTION_10	SWITCH_1
0x4001a4e	          0x8b5720	            mov edx, dword [rdi + 0x20] 	       682	deflate.c	FUNCTION_10	SWITCH_1
0x4001a51	          0x8d7202	                      lea esi, [rdx + 2]	       682	deflate.c	FUNCTION_10	SWITCH_1
0x4001a54	        0x4883c612	                           add rsi, 0x12	       682	deflate.c	FUNCTION_10	SWITCH_1
0x4001a58	            0xeb05	                           jmp 0x4001a5f	       682	deflate.c	FUNCTION_10	SWITCH_1
0x4001a5a	      0xbe12000000	                           mov esi, 0x12	       678	deflate.c	FUNCTION_10	SWITCH_1
0x4001a5f	        0x488b5728	            mov rdx, qword [rdi + 0x28] 	       683	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x4001a63	          0x4885d2	                           test rdx, rdx	       684	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x4001a66	            0x7413	                            je 0x4001a7b	       684	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x4001a68	          0x4889f1	                            mov rcx, rsi	       684	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x4001a6b	          0x4829f2	                            sub rdx, rsi	       687	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x4001a6e	        0x4883c101	                              add rcx, 1	       686	deflate.c	FUNCTION_10	SWITCH_1	IF_2	IF_3
0x4001a72	      0x807c0aff00	             cmp byte [rdx + rcx - 1], 0	       687	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x4001a77	            0x75f5	                           jne 0x4001a6e	       687	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x4001a79	            0xeb03	                           jmp 0x4001a7e	       687	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x4001a7b	          0x4889f1	                            mov rcx, rsi	       687	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x4001a7e	        0x488b7738	            mov rsi, qword [rdi + 0x38] 	       688	deflate.c	FUNCTION_10	SWITCH_1	IF_2	IF_4
0x4001a82	          0x4885f6	                           test rsi, rsi	       689	deflate.c	FUNCTION_10	SWITCH_1	IF_2	IF_4	DO_1
0x4001a85	            0x7416	                            je 0x4001a9d	       689	deflate.c	FUNCTION_10	SWITCH_1	IF_2	IF_4	DO_1
0x4001a87	          0x4889ca	                            mov rdx, rcx	       689	deflate.c	FUNCTION_10	SWITCH_1	IF_2	IF_4	DO_1
0x4001a8a	          0x4829ce	                            sub rsi, rcx	       692	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x4001a8d	          0x4889f1	                            mov rcx, rsi	       692	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x4001a90	        0x4883c201	                              add rdx, 1	       691	deflate.c	FUNCTION_10	SWITCH_1	IF_2	IF_4	DO_1
0x4001a94	      0x807c11ff00	             cmp byte [rcx + rdx - 1], 0	       692	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x4001a99	            0x75f5	                           jne 0x4001a90	       692	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x4001a9b	            0xeb03	                           jmp 0x4001aa0	       692	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x4001a9d	          0x4889ca	                            mov rdx, rcx	       692	deflate.c	FUNCTION_10	SWITCH_1	IF_2
0x4001aa0	        0x488d4a02	                      lea rcx, [rdx + 2]	       694	deflate.c	FUNCTION_10	SWITCH_1	IF_2	IF_5	DO_2
0x4001aa4	        0x837f4400	               cmp dword [rdi + 0x44], 0	       694	deflate.c	FUNCTION_10	SWITCH_1	IF_2	IF_5	DO_2
0x4001aa8	        0x480f45d1	                         cmovne rdx, rcx	       694	deflate.c	FUNCTION_10	SWITCH_1	IF_2	IF_5	DO_2
0x4001aac	            0xeb05	                           jmp 0x4001ab3	       694	deflate.c	FUNCTION_10	SWITCH_1	IF_2	IF_5	DO_2
0x4001aae	      0xba12000000	                           mov edx, 0x12	       678	deflate.c	FUNCTION_10	SWITCH_1
0x4001ab3	        0x8378540f	            cmp dword [rax + 0x54], 0xf 	       703	deflate.c	FUNCTION_10	SWITCH_1
0x4001ab7	            0x7509	                           jne 0x4001ac2	       703	deflate.c	FUNCTION_10	SWITCH_1
0x4001ab9	    0x83b888000000	            cmp dword [rax + 0x88], 0xf 	       703	deflate.c	FUNCTION_10	SWITCH_1
0x4001ac0	            0x7407	                            je 0x4001ac9	       703	deflate.c	FUNCTION_10	SWITCH_1
0x4001ac2	      0x4a8d442a05	                lea rax, [rdx + r13 + 5]	       704	deflate.c	FUNCTION_10	SWITCH_1
0x4001ac7	            0xeb23	                           jmp 0x4001aec	       704	deflate.c	FUNCTION_10	SWITCH_1
0x4001ac9	          0x4889d8	                            mov rax, rbx	       707	deflate.c	FUNCTION_10	IF_7
0x4001acc	        0x48c1e80c	                            shr rax, 0xc	       707	deflate.c	FUNCTION_10	IF_7
0x4001ad0	          0x4801c5	                            add rbp, rax	       707	deflate.c	FUNCTION_10	IF_7
0x4001ad3	          0x4889d8	                            mov rax, rbx	       707	deflate.c	FUNCTION_10	IF_7
0x4001ad6	        0x48c1e80e	                            shr rax, 0xe	       707	deflate.c	FUNCTION_10	IF_7
0x4001ada	          0x4801c5	                            add rbp, rax	       707	deflate.c	FUNCTION_10	IF_7
0x4001add	          0x4889de	                            mov rsi, rbx	       707	deflate.c	FUNCTION_10	IF_7
0x4001ae0	        0x48c1ee19	                           shr rsi, 0x19	       707	deflate.c	FUNCTION_10	IF_7
0x4001ae4	      0x488d443500	                    lea rax, [rbp + rsi]	       707	deflate.c	FUNCTION_10	IF_7
0x4001ae9	          0x4801d0	                            add rax, rdx	       707	deflate.c	FUNCTION_10	IF_7
0x4001aec	              0x5b	                                 pop rbx	       709	deflate.c	FUNCTION_10
0x4001aed	              0x5d	                                 pop rbp	       709	deflate.c	FUNCTION_10
0x4001aee	            0x415c	                                 pop r12	       709	deflate.c	FUNCTION_10
0x4001af0	            0x415d	                                 pop r13	       709	deflate.c	FUNCTION_10
0x4001af2	              0xc3	                                     ret	       709	deflate.c	FUNCTION_10
deflateCopy	CALL,13:ELSE,0:IF,3:FOR,0:DO,0:functions,0:WHILE,0:SWITCH,0	149
0x400300b	            0x4155	                                push r13	      1105	deflate.c	
0x400300d	            0x4154	                                push r12	      1105	deflate.c	
0x400300f	              0x55	                                push rbp	      1105	deflate.c	
0x4003010	              0x53	                                push rbx	      1105	deflate.c	
0x4003011	        0x4883ec08	                              sub rsp, 8	      1105	deflate.c	
0x4003015	          0x4889fd	                            mov rbp, rdi	      1105	deflate.c	
0x4003018	          0x4889f3	                            mov rbx, rsi	      1105	deflate.c	
0x400301b	          0x4889f7	                            mov rdi, rsi	      1114	deflate.c	FUNCTION_15
0x400301e	      0xe896d0ffff	              call sym.deflateStateCheck	      1114	deflate.c	FUNCTION_15
0x4003023	          0x4885ed	                           test rbp, rbp	      1114	deflate.c	FUNCTION_15
0x4003026	     0xf8411020000	                            je 0x400323d	      1114	deflate.c	FUNCTION_15
0x400302c	            0x85c0	                           test eax, eax	      1114	deflate.c	FUNCTION_15
0x400302e	     0xf8509020000	                           jne 0x400323d	      1114	deflate.c	FUNCTION_15
0x4003034	        0x4c8b6338	            mov r12, qword [rbx + 0x38] 	      1118	deflate.c	FUNCTION_15	IF_1	CALL_1
0x4003038	          0x488b03	                    mov rax, qword [rbx]	        53	string3.h	FUNCTION_25	CALL_3
0x400303b	        0x48894500	                    mov qword [rbp], rax	        53	string3.h	FUNCTION_25	CALL_3
0x400303f	        0x488b4308	                mov rax, qword [rbx + 8]	        53	string3.h	FUNCTION_25	CALL_3
0x4003043	        0x48894508	                mov qword [rbp + 8], rax	        53	string3.h	FUNCTION_25	CALL_3
0x4003047	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        53	string3.h	FUNCTION_25	CALL_3
0x400304b	        0x48894510	            mov qword [rbp + 0x10], rax 	        53	string3.h	FUNCTION_25	CALL_3
0x400304f	        0x488b4318	            mov rax, qword [rbx + 0x18] 	        53	string3.h	FUNCTION_25	CALL_3
0x4003053	        0x48894518	            mov qword [rbp + 0x18], rax 	        53	string3.h	FUNCTION_25	CALL_3
0x4003057	        0x488b4320	            mov rax, qword [rbx + 0x20] 	        53	string3.h	FUNCTION_25	CALL_3
0x400305b	        0x48894520	            mov qword [rbp + 0x20], rax 	        53	string3.h	FUNCTION_25	CALL_3
0x400305f	        0x488b4328	            mov rax, qword [rbx + 0x28] 	        53	string3.h	FUNCTION_25	CALL_3
0x4003063	        0x48894528	            mov qword [rbp + 0x28], rax 	        53	string3.h	FUNCTION_25	CALL_3
0x4003067	        0x488b4330	            mov rax, qword [rbx + 0x30] 	        53	string3.h	FUNCTION_25	CALL_3
0x400306b	        0x48894530	            mov qword [rbp + 0x30], rax 	        53	string3.h	FUNCTION_25	CALL_3
0x400306f	        0x488b4338	            mov rax, qword [rbx + 0x38] 	        53	string3.h	FUNCTION_25	CALL_3
0x4003073	        0x48894538	            mov qword [rbp + 0x38], rax 	        53	string3.h	FUNCTION_25	CALL_3
0x4003077	        0x488b4340	            mov rax, qword [rbx + 0x40] 	        53	string3.h	FUNCTION_25	CALL_3
0x400307b	        0x48894540	            mov qword [rbp + 0x40], rax 	        53	string3.h	FUNCTION_25	CALL_3
0x400307f	        0x488b5348	            mov rdx, qword [rbx + 0x48] 	        53	string3.h	FUNCTION_25	CALL_3
0x4003083	        0x48895548	            mov qword [rbp + 0x48], rdx 	        53	string3.h	FUNCTION_25	CALL_3
0x4003087	        0x488b7b50	            mov rdi, qword [rbx + 0x50] 	        53	string3.h	FUNCTION_25	CALL_3
0x400308b	        0x48897d50	            mov qword [rbp + 0x50], rdi 	        53	string3.h	FUNCTION_25	CALL_3
0x400308f	        0x488b5358	            mov rdx, qword [rbx + 0x58] 	        53	string3.h	FUNCTION_25	CALL_3
0x4003093	        0x48895558	            mov qword [rbp + 0x58], rdx 	        53	string3.h	FUNCTION_25	CALL_3
0x4003097	        0x488b5360	            mov rdx, qword [rbx + 0x60] 	        53	string3.h	FUNCTION_25	CALL_3
0x400309b	        0x48895560	            mov qword [rbp + 0x60], rdx 	        53	string3.h	FUNCTION_25	CALL_3
0x400309f	        0x488b5368	            mov rdx, qword [rbx + 0x68] 	        53	string3.h	FUNCTION_25	CALL_3
0x40030a3	        0x48895568	            mov qword [rbp + 0x68], rdx 	        53	string3.h	FUNCTION_25	CALL_3
0x40030a7	      0xba40170000	                         mov edx, 0x1740	      1122	deflate.c	FUNCTION_15
0x40030ac	      0xbe01000000	                              mov esi, 1	      1122	deflate.c	FUNCTION_15
0x40030b1	            0xffd0	                                call rax	      1122	deflate.c	FUNCTION_15
0x40030b3	          0x4889c3	                            mov rbx, rax	      1122	deflate.c	FUNCTION_15
0x40030b6	          0x4885c0	                           test rax, rax	      1123	deflate.c	FUNCTION_15
0x40030b9	     0xf8485010000	                            je 0x4003244	      1123	deflate.c	FUNCTION_15
0x40030bf	        0x48894538	            mov qword [rbp + 0x38], rax 	      1124	deflate.c	FUNCTION_15	CALL_2
0x40030c3	        0x498b0424	                    mov rax, qword [r12]	        53	string3.h	FUNCTION_25	CALL_3
0x40030c7	          0x488903	                    mov qword [rbx], rax	        53	string3.h	FUNCTION_25	CALL_3
0x40030ca	    0x498b84243817	          mov rax, qword [r12 + 0x1738] 	        53	string3.h	FUNCTION_25	CALL_3
0x40030d2	    0x488983381700	          mov qword [rbx + 0x1738], rax 	        53	string3.h	FUNCTION_25	CALL_3
0x40030d9	        0x488d7b08	                      lea rdi, [rbx + 8]	        53	string3.h	FUNCTION_25	CALL_3
0x40030dd	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        53	string3.h	FUNCTION_25	CALL_3
0x40030e1	          0x4889d9	                            mov rcx, rbx	        53	string3.h	FUNCTION_25	CALL_3
0x40030e4	          0x4829f9	                            sub rcx, rdi	        53	string3.h	FUNCTION_25	CALL_3
0x40030e7	          0x4c89e6	                            mov rsi, r12	        53	string3.h	FUNCTION_25	CALL_3
0x40030ea	          0x4829ce	                            sub rsi, rcx	        53	string3.h	FUNCTION_25	CALL_3
0x40030ed	    0x81c140170000	                         add ecx, 0x1740	        53	string3.h	FUNCTION_25	CALL_3
0x40030f3	          0xc1e903	                              shr ecx, 3	        53	string3.h	FUNCTION_25	CALL_3
0x40030f6	            0x89c9	                            mov ecx, ecx	        53	string3.h	FUNCTION_25	CALL_3
0x40030f8	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	        53	string3.h	FUNCTION_25	CALL_3
0x40030fb	          0x48892b	                    mov qword [rbx], rbp	      1126	deflate.c	FUNCTION_15	CALL_3
0x40030fe	          0x8b7350	            mov esi, dword [rbx + 0x50] 	      1128	deflate.c	FUNCTION_15
0x4003101	        0x488b7d50	            mov rdi, qword [rbp + 0x50] 	      1128	deflate.c	FUNCTION_15
0x4003105	      0xba02000000	                              mov edx, 2	      1128	deflate.c	FUNCTION_15
0x400310a	          0xff5540	                 call qword [rbp + 0x40]	      1128	deflate.c	FUNCTION_15
0x400310d	        0x48894360	             mov qword [rbx + 0x60], rax	      1128	deflate.c	FUNCTION_15
0x4003111	          0x8b7350	            mov esi, dword [rbx + 0x50] 	      1129	deflate.c	FUNCTION_15	CALL_4
0x4003114	        0x488b7d50	            mov rdi, qword [rbp + 0x50] 	      1129	deflate.c	FUNCTION_15	CALL_4
0x4003118	      0xba02000000	                              mov edx, 2	      1129	deflate.c	FUNCTION_15	CALL_4
0x400311d	          0xff5540	                 call qword [rbp + 0x40]	      1129	deflate.c	FUNCTION_15	CALL_4
0x4003120	        0x48894370	             mov qword [rbx + 0x70], rax	      1129	deflate.c	FUNCTION_15	CALL_4
0x4003124	    0x8bb384000000	            mov esi, dword [rbx + 0x84] 	      1130	deflate.c	FUNCTION_15
0x400312a	        0x488b7d50	            mov rdi, qword [rbp + 0x50] 	      1130	deflate.c	FUNCTION_15
0x400312e	      0xba02000000	                              mov edx, 2	      1130	deflate.c	FUNCTION_15
0x4003133	          0xff5540	                 call qword [rbp + 0x40]	      1130	deflate.c	FUNCTION_15
0x4003136	        0x48894378	             mov qword [rbx + 0x78], rax	      1130	deflate.c	FUNCTION_15
0x400313a	    0x8bb308170000	          mov esi, dword [rbx + 0x1708] 	      1131	deflate.c	FUNCTION_15
0x4003140	        0x488b7d50	            mov rdi, qword [rbp + 0x50] 	      1131	deflate.c	FUNCTION_15
0x4003144	      0xba04000000	                              mov edx, 4	      1131	deflate.c	FUNCTION_15
0x4003149	          0xff5540	                 call qword [rbp + 0x40]	      1131	deflate.c	FUNCTION_15
0x400314c	          0x4989c5	                            mov r13, rax	      1131	deflate.c	FUNCTION_15
0x400314f	        0x48894310	             mov qword [rbx + 0x10], rax	      1132	deflate.c	FUNCTION_15	CALL_5
0x4003153	        0x488b7b60	            mov rdi, qword [rbx + 0x60] 	      1134	deflate.c	FUNCTION_15	CALL_7
0x4003157	          0x4885ff	                           test rdi, rdi	      1134	deflate.c	FUNCTION_15	CALL_7
0x400315a	            0x7413	                            je 0x400316f	      1134	deflate.c	FUNCTION_15	CALL_7
0x400315c	      0x48837b7000	               cmp qword [rbx + 0x70], 0	      1134	deflate.c	FUNCTION_15	CALL_7
0x4003161	            0x740c	                            je 0x400316f	      1134	deflate.c	FUNCTION_15	CALL_7
0x4003163	      0x48837b7800	               cmp qword [rbx + 0x78], 0	      1134	deflate.c	FUNCTION_15	CALL_7
0x4003168	            0x7405	                            je 0x400316f	      1134	deflate.c	FUNCTION_15	CALL_7
0x400316a	          0x4885c0	                           test rax, rax	      1134	deflate.c	FUNCTION_15	CALL_7
0x400316d	            0x7512	                           jne 0x4003181	      1134	deflate.c	FUNCTION_15	CALL_7
0x400316f	          0x4889ef	                            mov rdi, rbp	      1136	deflate.c	FUNCTION_15
0x4003172	      0xe800000000	                          call 0x4003177	      1136	deflate.c	FUNCTION_15
0x4003177	      0xb8fcffffff	                     mov eax, 0xfffffffc	      1137	deflate.c	FUNCTION_15
0x400317c	      0xe9c8000000	                           jmp 0x4003249	      1137	deflate.c	FUNCTION_15
0x4003181	          0x8b4350	            mov eax, dword [rbx + 0x50] 	        53	string3.h	FUNCTION_25	CALL_3
0x4003184	          0x8d1400	                    lea edx, [rax + rax]	        53	string3.h	FUNCTION_25	CALL_3
0x4003187	            0x89d2	                            mov edx, edx	        53	string3.h	FUNCTION_25	CALL_3
0x4003189	      0x498b742460	            mov rsi, qword [r12 + 0x60] 	        53	string3.h	FUNCTION_25	CALL_3
0x400318e	      0xe800000000	                          call 0x4003193	        53	string3.h	FUNCTION_25	CALL_3
0x4003193	        0x488b7b70	            mov rdi, qword [rbx + 0x70] 	        53	string3.h	FUNCTION_25	CALL_3
0x4003197	          0x8b5350	            mov edx, dword [rbx + 0x50] 	        53	string3.h	FUNCTION_25	CALL_3
0x400319a	          0x4801d2	                            add rdx, rdx	        53	string3.h	FUNCTION_25	CALL_3
0x400319d	      0x498b742470	            mov rsi, qword [r12 + 0x70] 	        53	string3.h	FUNCTION_25	CALL_3
0x40031a2	      0xe800000000	                          call 0x40031a7	        53	string3.h	FUNCTION_25	CALL_3
0x40031a7	        0x488b7b78	            mov rdi, qword [rbx + 0x78] 	        53	string3.h	FUNCTION_25	CALL_3
0x40031ab	    0x8b9384000000	            mov edx, dword [rbx + 0x84] 	        53	string3.h	FUNCTION_25	CALL_3
0x40031b1	          0x4801d2	                            add rdx, rdx	        53	string3.h	FUNCTION_25	CALL_3
0x40031b4	      0x498b742478	            mov rsi, qword [r12 + 0x78] 	        53	string3.h	FUNCTION_25	CALL_3
0x40031b9	      0xe800000000	                          call 0x40031be	        53	string3.h	FUNCTION_25	CALL_3
0x40031be	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	        53	string3.h	FUNCTION_25	CALL_3
0x40031c2	          0x8b5318	            mov edx, dword [rbx + 0x18] 	        53	string3.h	FUNCTION_25	CALL_3
0x40031c5	      0x498b742410	            mov rsi, qword [r12 + 0x10] 	        53	string3.h	FUNCTION_25	CALL_3
0x40031ca	      0xe800000000	                          call 0x40031cf	        53	string3.h	FUNCTION_25	CALL_3
0x40031cf	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	      1145	deflate.c	FUNCTION_15	CALL_11
0x40031d3	          0x4889ca	                            mov rdx, rcx	      1145	deflate.c	FUNCTION_15	CALL_11
0x40031d6	      0x492b542410	             sub rdx, qword [r12 + 0x10]	      1145	deflate.c	FUNCTION_15	CALL_11
0x40031db	      0x4903542420	             add rdx, qword [r12 + 0x20]	      1145	deflate.c	FUNCTION_15	CALL_11
0x40031e0	        0x48895320	             mov qword [rbx + 0x20], rdx	      1145	deflate.c	FUNCTION_15	CALL_11
0x40031e4	    0x8b8308170000	          mov eax, dword [rbx + 0x1708] 	      1146	deflate.c	FUNCTION_15	CALL_12
0x40031ea	            0x89c2	                            mov edx, eax	      1146	deflate.c	FUNCTION_15	CALL_12
0x40031ec	            0xd1ea	                              shr edx, 1	      1146	deflate.c	FUNCTION_15	CALL_12
0x40031ee	            0x89d2	                            mov edx, edx	      1146	deflate.c	FUNCTION_15	CALL_12
0x40031f0	      0x498d545500	                  lea rdx, [r13 + rdx*2]	      1146	deflate.c	FUNCTION_15	CALL_12
0x40031f5	    0x488993101700	          mov qword [rbx + 0x1710], rdx 	      1146	deflate.c	FUNCTION_15	CALL_12
0x40031fc	            0x89c0	                            mov eax, eax	      1147	deflate.c	FUNCTION_15	CALL_13
0x40031fe	        0x488d0440	                  lea rax, [rax + rax*2]	      1147	deflate.c	FUNCTION_15	CALL_13
0x4003202	          0x4801c8	                            add rax, rcx	      1147	deflate.c	FUNCTION_15	CALL_13
0x4003205	    0x488983001700	          mov qword [rbx + 0x1700], rax 	      1147	deflate.c	FUNCTION_15	CALL_13
0x400320c	    0x488d83d40000	                   lea rax, [rbx + 0xd4]	      1149	deflate.c	FUNCTION_15
0x4003213	    0x488983580b00	            mov qword [rbx + 0xb58], rax	      1149	deflate.c	FUNCTION_15
0x400321a	    0x488d83c80900	                  lea rax, [rbx + 0x9c8]	      1150	deflate.c	FUNCTION_15
0x4003221	    0x488983700b00	            mov qword [rbx + 0xb70], rax	      1150	deflate.c	FUNCTION_15
0x4003228	    0x488d83bc0a00	                  lea rax, [rbx + 0xabc]	      1151	deflate.c	FUNCTION_15
0x400322f	    0x488983880b00	            mov qword [rbx + 0xb88], rax	      1151	deflate.c	FUNCTION_15
0x4003236	      0xb800000000	                              mov eax, 0	      1153	deflate.c	FUNCTION_15
0x400323b	            0xeb0c	                           jmp 0x4003249	      1153	deflate.c	FUNCTION_15
0x400323d	      0xb8feffffff	                     mov eax, 0xfffffffe	      1115	deflate.c	FUNCTION_15
0x4003242	            0xeb05	                           jmp 0x4003249	      1115	deflate.c	FUNCTION_15
0x4003244	      0xb8fcffffff	                     mov eax, 0xfffffffc	      1123	deflate.c	FUNCTION_15
0x4003249	        0x4883c408	                              add rsp, 8	      1155	deflate.c	FUNCTION_15
0x400324d	              0x5b	                                 pop rbx	      1155	deflate.c	FUNCTION_15
0x400324e	              0x5d	                                 pop rbp	      1155	deflate.c	FUNCTION_15
0x400324f	            0x415c	                                 pop r12	      1155	deflate.c	FUNCTION_15
0x4003251	            0x415d	                                 pop r13	      1155	deflate.c	FUNCTION_15
0x4003253	              0xc3	                                     ret	      1155	deflate.c	FUNCTION_15
deflateParams	CALL,3:ELSE,1:IF,10:FOR,0:DO,0:functions,0:WHILE,0:SWITCH,0	89
0x4002b25	            0x4156	                                push r14	       572	deflate.c	
0x4002b27	            0x4155	                                push r13	       572	deflate.c	
0x4002b29	            0x4154	                                push r12	       572	deflate.c	
0x4002b2b	              0x55	                                push rbp	       572	deflate.c	
0x4002b2c	              0x53	                                push rbx	       572	deflate.c	
0x4002b2d	          0x4989fe	                            mov r14, rdi	       572	deflate.c	
0x4002b30	            0x89f3	                            mov ebx, esi	       572	deflate.c	
0x4002b32	          0x4189d4	                           mov r12d, edx	       572	deflate.c	
0x4002b35	      0xe87fd5ffff	              call sym.deflateStateCheck	       576	deflate.c	FUNCTION_8
0x4002b3a	            0x85c0	                           test eax, eax	       576	deflate.c	FUNCTION_8
0x4002b3c	     0xf8527010000	                           jne 0x4002c69	       576	deflate.c	FUNCTION_8
0x4002b42	          0x4189c5	                           mov r13d, eax	       576	deflate.c	FUNCTION_8
0x4002b45	        0x498b6e38	            mov rbp, qword [r14 + 0x38] 	       577	deflate.c	FUNCTION_8
0x4002b49	          0x83fbff	             cmp ebx, 0xffffffffffffffff	       582	deflate.c	FUNCTION_8
0x4002b4c	      0xb806000000	                              mov eax, 6	       582	deflate.c	FUNCTION_8
0x4002b51	           0xf44d8	                          cmove ebx, eax	       582	deflate.c	FUNCTION_8
0x4002b54	          0x83fb09	                              cmp ebx, 9	       584	deflate.c	FUNCTION_8	IF_2
0x4002b57	     0xf8714010000	                            ja 0x4002c71	       584	deflate.c	FUNCTION_8	IF_2
0x4002b5d	        0x4183fc04	                             cmp r12d, 4	       584	deflate.c	FUNCTION_8	IF_2
0x4002b61	     0xf870a010000	                            ja 0x4002c71	       584	deflate.c	FUNCTION_8	IF_2
0x4002b67	    0x443ba5c80000	           cmp r12d, dword [rbp + 0xc8] 	       589	deflate.c	FUNCTION_8	IF_4
0x4002b6e	            0x7522	                           jne 0x4002b92	       589	deflate.c	FUNCTION_8	IF_4
0x4002b70	    0x486395c40000	         movsxd rdx, dword [rbp + 0xc4] 	       587	deflate.c	FUNCTION_8
0x4002b77	        0x48c1e204	                              shl rdx, 4	       587	deflate.c	FUNCTION_8
0x4002b7b	          0x4863c3	                         movsxd rax, ebx	       589	deflate.c	FUNCTION_8	IF_4
0x4002b7e	        0x48c1e004	                              shl rax, 4	       589	deflate.c	FUNCTION_8	IF_4
0x4002b82	    0x488b80000000	                    mov rax, qword [rax]	       589	deflate.c	FUNCTION_8	IF_4
0x4002b89	    0x483982000000	                    cmp qword [rdx], rax	       589	deflate.c	FUNCTION_8	IF_4
0x4002b90	            0x742b	                            je 0x4002bbd	       589	deflate.c	FUNCTION_8	IF_4
0x4002b92	    0x4883bd381700	             cmp qword [rbp + 0x1738], 0	       589	deflate.c	FUNCTION_8	IF_4
0x4002b9a	            0x7421	                            je 0x4002bbd	       589	deflate.c	FUNCTION_8	IF_4
0x4002b9c	      0xbe05000000	                              mov esi, 5	       592	deflate.c	FUNCTION_8
0x4002ba1	          0x4c89f7	                            mov rdi, r14	       592	deflate.c	FUNCTION_8
0x4002ba4	      0xe800000000	                          call 0x4002ba9	       592	deflate.c	FUNCTION_8
0x4002ba9	          0x83f8fe	             cmp eax, 0xfffffffffffffffe	       593	deflate.c	FUNCTION_8	IF_5
0x4002bac	     0xf84c7000000	                            je 0x4002c79	       593	deflate.c	FUNCTION_8	IF_5
0x4002bb2	      0x41837e2000	               cmp dword [r14 + 0x20], 0	       595	deflate.c	FUNCTION_8	IF_5
0x4002bb7	     0xf84c4000000	                            je 0x4002c81	       595	deflate.c	FUNCTION_8	IF_5
0x4002bbd	    0x8b85c4000000	            mov eax, dword [rbp + 0xc4] 	       598	deflate.c	FUNCTION_8	IF_5	IF_6
0x4002bc3	            0x39c3	                            cmp ebx, eax	       598	deflate.c	FUNCTION_8	IF_5	IF_6
0x4002bc5	     0xf8495000000	                            je 0x4002c60	       598	deflate.c	FUNCTION_8	IF_5	IF_6
0x4002bcb	            0x85c0	                           test eax, eax	       599	deflate.c	FUNCTION_8	IF_5	IF_7
0x4002bcd	            0x7550	                           jne 0x4002c1f	       599	deflate.c	FUNCTION_8	IF_5	IF_7
0x4002bcf	    0x8b8528170000	          mov eax, dword [rbp + 0x1728] 	       599	deflate.c	FUNCTION_8	IF_5	IF_7
0x4002bd5	            0x85c0	                           test eax, eax	       599	deflate.c	FUNCTION_8	IF_5	IF_7
0x4002bd7	            0x7446	                            je 0x4002c1f	       599	deflate.c	FUNCTION_8	IF_5	IF_7
0x4002bd9	          0x83f801	                              cmp eax, 1	       600	deflate.c	FUNCTION_8	IF_5	IF_7
0x4002bdc	            0x750a	                           jne 0x4002be8	       600	deflate.c	FUNCTION_8	IF_5	IF_7
0x4002bde	          0x4889ef	                            mov rdi, rbp	       601	deflate.c	FUNCTION_8	IF_5
0x4002be1	      0xe85ad4ffff	                     call sym.slide_hash	       601	deflate.c	FUNCTION_8	IF_5
0x4002be6	            0xeb13	                           jmp 0x4002bfb	       601	deflate.c	FUNCTION_8	IF_5
0x4002be8	    0x8b8584000000	            mov eax, dword [rbp + 0x84] 	       603	deflate.c	FUNCTION_8	IF_8	IF_9
0x4002bee	          0x8d50ff	                      lea edx, [rax - 1]	       603	deflate.c	FUNCTION_8	IF_8	IF_9
0x4002bf1	        0x488b4578	            mov rax, qword [rbp + 0x78] 	       603	deflate.c	FUNCTION_8	IF_8	IF_9
0x4002bf5	    0x66c704500000	               mov word [rax + rdx*2], 0	       603	deflate.c	FUNCTION_8	IF_8	IF_9
0x4002bfb	    0x8b8584000000	            mov eax, dword [rbp + 0x84] 	        90	string3.h	FUNCTION_28	CALL_6
0x4002c01	          0x8d50ff	                      lea edx, [rax - 1]	        90	string3.h	FUNCTION_28	CALL_6
0x4002c04	          0x4801d2	                            add rdx, rdx	        90	string3.h	FUNCTION_28	CALL_6
0x4002c07	        0x488b7d78	            mov rdi, qword [rbp + 0x78] 	        90	string3.h	FUNCTION_28	CALL_6
0x4002c0b	      0xbe00000000	                              mov esi, 0	        90	string3.h	FUNCTION_28	CALL_6
0x4002c10	      0xe800000000	                          call 0x4002c15	        90	string3.h	FUNCTION_28	CALL_6
0x4002c15	    0xc78528170000	            mov dword [rbp + 0x1728], 0 	       604	deflate.c	FUNCTION_8	IF_8	IF_9	IF_10
0x4002c1f	    0x899dc4000000	            mov dword [rbp + 0xc4], ebx 	       606	deflate.c	FUNCTION_8	IF_8	IF_9	ELSE_1
0x4002c25	          0x4863db	                         movsxd rbx, ebx	       607	deflate.c	FUNCTION_8	IF_8	IF_9	ELSE_1
0x4002c28	        0x48c1e304	                              shl rbx, 4	       607	deflate.c	FUNCTION_8	IF_8	IF_9	ELSE_1
0x4002c2c	     0xfb793000000	                   movzx edx, word [rbx]	       607	deflate.c	FUNCTION_8	IF_8	IF_9	ELSE_1
0x4002c33	    0x8995c0000000	            mov dword [rbp + 0xc0], edx 	       607	deflate.c	FUNCTION_8	IF_8	IF_9	ELSE_1
0x4002c39	     0xfb793000000	                   movzx edx, word [rbx]	       608	deflate.c	FUNCTION_8	IF_8	IF_9
0x4002c40	    0x8995cc000000	            mov dword [rbp + 0xcc], edx 	       608	deflate.c	FUNCTION_8	IF_8	IF_9
0x4002c46	     0xfb793000000	                   movzx edx, word [rbx]	       609	deflate.c	FUNCTION_8	IF_8	IF_9
0x4002c4d	    0x8995d0000000	            mov dword [rbp + 0xd0], edx 	       609	deflate.c	FUNCTION_8	IF_8	IF_9
0x4002c53	     0xfb783000000	                   movzx eax, word [rbx]	       610	deflate.c	FUNCTION_8	IF_8
0x4002c5a	    0x8985bc000000	            mov dword [rbp + 0xbc], eax 	       610	deflate.c	FUNCTION_8	IF_8
0x4002c60	    0x4489a5c80000	           mov dword [rbp + 0xc8], r12d 	       612	deflate.c	FUNCTION_8	IF_8
0x4002c67	            0xeb1e	                           jmp 0x4002c87	       613	deflate.c	FUNCTION_8	IF_8
0x4002c69	    0x41bdfeffffff	                    mov r13d, 0xfffffffe	       576	deflate.c	FUNCTION_8
0x4002c6f	            0xeb16	                           jmp 0x4002c87	       576	deflate.c	FUNCTION_8
0x4002c71	    0x41bdfeffffff	                    mov r13d, 0xfffffffe	       585	deflate.c	FUNCTION_8
0x4002c77	            0xeb0e	                           jmp 0x4002c87	       585	deflate.c	FUNCTION_8
0x4002c79	    0x41bdfeffffff	                    mov r13d, 0xfffffffe	       594	deflate.c	FUNCTION_8	IF_5
0x4002c7f	            0xeb06	                           jmp 0x4002c87	       594	deflate.c	FUNCTION_8	IF_5
0x4002c81	    0x41bdfbffffff	                    mov r13d, 0xfffffffb	       596	deflate.c	FUNCTION_8	IF_5	CALL_2
0x4002c87	          0x4489e8	                           mov eax, r13d	       614	deflate.c	FUNCTION_8	IF_8
0x4002c8a	              0x5b	                                 pop rbx	       614	deflate.c	FUNCTION_8	IF_8
0x4002c8b	              0x5d	                                 pop rbp	       614	deflate.c	FUNCTION_8	IF_8
0x4002c8c	            0x415c	                                 pop r12	       614	deflate.c	FUNCTION_8	IF_8
0x4002c8e	            0x415d	                                 pop r13	       614	deflate.c	FUNCTION_8	IF_8
0x4002c90	            0x415e	                                 pop r14	       614	deflate.c	FUNCTION_8	IF_8
0x4002c92	              0xc3	                                     ret	       614	deflate.c	FUNCTION_8	IF_8
deflateEnd	CALL,6:ELSE,0:IF,1:FOR,0:DO,0:functions,0:WHILE,0:SWITCH,0	47
0x4002c93	            0x4154	                                push r12	      1078	deflate.c	
0x4002c95	              0x55	                                push rbp	      1078	deflate.c	
0x4002c96	              0x53	                                push rbx	      1078	deflate.c	
0x4002c97	          0x4889fb	                            mov rbx, rdi	      1078	deflate.c	
0x4002c9a	      0xe81ad4ffff	              call sym.deflateStateCheck	      1081	deflate.c	
0x4002c9f	            0x85c0	                           test eax, eax	      1081	deflate.c	
0x4002ca1	            0x7577	                           jne 0x4002d1a	      1081	deflate.c	
0x4002ca3	            0x89c5	                            mov ebp, eax	      1081	deflate.c	
0x4002ca5	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      1083	deflate.c	FUNCTION_14
0x4002ca9	        0x448b6008	               mov r12d, dword [rax + 8]	      1083	deflate.c	FUNCTION_14
0x4002cad	        0x488b7010	            mov rsi, qword [rax + 0x10] 	      1086	deflate.c	FUNCTION_14
0x4002cb1	          0x4885f6	                           test rsi, rsi	      1086	deflate.c	FUNCTION_14
0x4002cb4	            0x7407	                            je 0x4002cbd	      1086	deflate.c	FUNCTION_14
0x4002cb6	        0x488b7b50	            mov rdi, qword [rbx + 0x50] 	      1086	deflate.c	FUNCTION_14
0x4002cba	          0xff5348	                 call qword [rbx + 0x48]	      1086	deflate.c	FUNCTION_14
0x4002cbd	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      1087	deflate.c	FUNCTION_14
0x4002cc1	        0x488b7078	            mov rsi, qword [rax + 0x78] 	      1087	deflate.c	FUNCTION_14
0x4002cc5	          0x4885f6	                           test rsi, rsi	      1087	deflate.c	FUNCTION_14
0x4002cc8	            0x7407	                            je 0x4002cd1	      1087	deflate.c	FUNCTION_14
0x4002cca	        0x488b7b50	            mov rdi, qword [rbx + 0x50] 	      1087	deflate.c	FUNCTION_14
0x4002cce	          0xff5348	                 call qword [rbx + 0x48]	      1087	deflate.c	FUNCTION_14
0x4002cd1	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      1088	deflate.c	FUNCTION_14
0x4002cd5	        0x488b7070	            mov rsi, qword [rax + 0x70] 	      1088	deflate.c	FUNCTION_14
0x4002cd9	          0x4885f6	                           test rsi, rsi	      1088	deflate.c	FUNCTION_14
0x4002cdc	            0x7407	                            je 0x4002ce5	      1088	deflate.c	FUNCTION_14
0x4002cde	        0x488b7b50	            mov rdi, qword [rbx + 0x50] 	      1088	deflate.c	FUNCTION_14
0x4002ce2	          0xff5348	                 call qword [rbx + 0x48]	      1088	deflate.c	FUNCTION_14
0x4002ce5	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      1089	deflate.c	FUNCTION_14
0x4002ce9	        0x488b7060	            mov rsi, qword [rax + 0x60] 	      1089	deflate.c	FUNCTION_14
0x4002ced	          0x4885f6	                           test rsi, rsi	      1089	deflate.c	FUNCTION_14
0x4002cf0	            0x7407	                            je 0x4002cf9	      1089	deflate.c	FUNCTION_14
0x4002cf2	        0x488b7b50	            mov rdi, qword [rbx + 0x50] 	      1089	deflate.c	FUNCTION_14
0x4002cf6	          0xff5348	                 call qword [rbx + 0x48]	      1089	deflate.c	FUNCTION_14
0x4002cf9	        0x488b7338	            mov rsi, qword [rbx + 0x38] 	      1091	deflate.c	FUNCTION_14	CALL_3
0x4002cfd	        0x488b7b50	            mov rdi, qword [rbx + 0x50] 	      1091	deflate.c	FUNCTION_14	CALL_3
0x4002d01	          0xff5348	                 call qword [rbx + 0x48]	      1091	deflate.c	FUNCTION_14	CALL_3
0x4002d04	    0x48c743380000	               mov qword [rbx + 0x38], 0	      1092	deflate.c	FUNCTION_14	CALL_4
0x4002d0c	        0x4183fc71	                          cmp r12d, 0x71	      1094	deflate.c	FUNCTION_14
0x4002d10	      0xb8fdffffff	                     mov eax, 0xfffffffd	      1094	deflate.c	FUNCTION_14
0x4002d15	           0xf44e8	                          cmove ebp, eax	      1094	deflate.c	FUNCTION_14
0x4002d18	            0xeb05	                           jmp 0x4002d1f	      1094	deflate.c	FUNCTION_14
0x4002d1a	      0xbdfeffffff	                     mov ebp, 0xfffffffe	      1081	deflate.c	
0x4002d1f	            0x89e8	                            mov eax, ebp	      1095	deflate.c	FUNCTION_14	CALL_6
0x4002d21	              0x5b	                                 pop rbx	      1095	deflate.c	FUNCTION_14	CALL_6
0x4002d22	              0x5d	                                 pop rbp	      1095	deflate.c	FUNCTION_14	CALL_6
0x4002d23	            0x415c	                                 pop r12	      1095	deflate.c	FUNCTION_14	CALL_6
0x4002d25	              0xc3	                                     ret	      1095	deflate.c	FUNCTION_14	CALL_6
deflateSetHeader	CALL,1:ELSE,0:IF,1:FOR,0:DO,0:functions,0:WHILE,0:SWITCH,0	18
0x4001867	              0x55	                                push rbp	       520	deflate.c	
0x4001868	              0x53	                                push rbx	       520	deflate.c	
0x4001869	          0x4889fb	                            mov rbx, rdi	       520	deflate.c	
0x400186c	          0x4889f5	                            mov rbp, rsi	       520	deflate.c	
0x400186f	      0xe845e8ffff	              call sym.deflateStateCheck	       521	deflate.c	
0x4001874	            0x85c0	                           test eax, eax	       521	deflate.c	
0x4001876	            0x7510	                           jne 0x4001888	       521	deflate.c	
0x4001878	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	       521	deflate.c	
0x400187c	        0x837a3002	               cmp dword [rdx + 0x30], 2	       521	deflate.c	
0x4001880	            0x750d	                           jne 0x400188f	       521	deflate.c	
0x4001882	        0x48896a38	             mov qword [rdx + 0x38], rbp	       523	deflate.c	
0x4001886	            0xeb0c	                           jmp 0x4001894	       524	deflate.c	FUNCTION_6
0x4001888	      0xb8feffffff	                     mov eax, 0xfffffffe	       522	deflate.c	
0x400188d	            0xeb05	                           jmp 0x4001894	       522	deflate.c	
0x400188f	      0xb8feffffff	                     mov eax, 0xfffffffe	       522	deflate.c	
0x4001894	              0x5b	                                 pop rbx	       525	deflate.c	FUNCTION_6	IF_1	CALL_1
0x4001895	              0x5d	                                 pop rbp	       525	deflate.c	FUNCTION_6	IF_1	CALL_1
0x4001896	              0xc3	                                     ret	       525	deflate.c	FUNCTION_6	IF_1	CALL_1
deflate	CALL,62:ELSE,7:IF,49:FOR,0:DO,2:functions,0:WHILE,1:SWITCH,0	1022
0x4001af3	            0x4157	                                push r15	       766	deflate.c	
0x4001af5	            0x4156	                                push r14	       766	deflate.c	
0x4001af7	            0x4155	                                push r13	       766	deflate.c	
0x4001af9	            0x4154	                                push r12	       766	deflate.c	
0x4001afb	              0x55	                                push rbp	       766	deflate.c	
0x4001afc	              0x53	                                push rbx	       766	deflate.c	
0x4001afd	        0x4883ec18	                           sub rsp, 0x18	       766	deflate.c	
0x4001b01	          0x4889fd	                            mov rbp, rdi	       766	deflate.c	
0x4001b04	          0x4189f5	                           mov r13d, esi	       766	deflate.c	
0x4001b07	      0xe8ade5ffff	              call sym.deflateStateCheck	       770	deflate.c	FUNCTION_13
0x4001b0c	        0x8944240c	              mov dword [rsp + 0xc], eax	       770	deflate.c	FUNCTION_13
0x4001b10	            0x85c0	                           test eax, eax	       770	deflate.c	FUNCTION_13
0x4001b12	     0xf85ba0f0000	                           jne 0x4002ad2	       770	deflate.c	FUNCTION_13
0x4001b18	        0x4183fd05	                             cmp r13d, 5	       770	deflate.c	FUNCTION_13
0x4001b1c	     0xf87ba0f0000	                            ja 0x4002adc	       770	deflate.c	FUNCTION_13
0x4001b22	        0x488b5d38	            mov rbx, qword [rbp + 0x38] 	       773	deflate.c	FUNCTION_13
0x4001b26	      0x48837d1800	               cmp qword [rbp + 0x18], 0	       775	deflate.c	FUNCTION_13	IF_1
0x4001b2b	            0x7422	                            je 0x4001b4f	       775	deflate.c	FUNCTION_13	IF_1
0x4001b2d	        0x837d0800	                  cmp dword [rbp + 8], 0	       775	deflate.c	FUNCTION_13	IF_1
0x4001b31	            0x7407	                            je 0x4001b3a	       775	deflate.c	FUNCTION_13	IF_1
0x4001b33	      0x48837d0000	                      cmp qword [rbp], 0	       776	deflate.c	FUNCTION_13	IF_1
0x4001b38	            0x7415	                            je 0x4001b4f	       776	deflate.c	FUNCTION_13	IF_1
0x4001b3a	          0x8b4308	                mov eax, dword [rbx + 8]	       777	deflate.c	FUNCTION_13
0x4001b3d	        0x4183fd04	                             cmp r13d, 4	       777	deflate.c	FUNCTION_13
0x4001b41	           0xf95c2	                                setne dl	       777	deflate.c	FUNCTION_13
0x4001b44	      0x3d9a020000	                          cmp eax, 0x29a	       777	deflate.c	FUNCTION_13
0x4001b49	            0x751c	                           jne 0x4001b67	       777	deflate.c	FUNCTION_13
0x4001b4b	            0x84d2	                             test dl, dl	       777	deflate.c	FUNCTION_13
0x4001b4d	            0x7418	                            je 0x4001b67	       777	deflate.c	FUNCTION_13
0x4001b4f	    0x488b05000000	            mov rax, qword [0x04001b56] 	       778	deflate.c	FUNCTION_13
0x4001b56	        0x48894530	            mov qword [rbp + 0x30], rax 	       778	deflate.c	FUNCTION_13
0x4001b5a	    0xc744240cfeff	      mov dword [rsp + 0xc], 0xfffffffe 	       778	deflate.c	FUNCTION_13
0x4001b62	      0xe9ab0f0000	                           jmp 0x4002b12	       778	deflate.c	FUNCTION_13
0x4001b67	        0x837d2000	               cmp dword [rbp + 0x20], 0	       780	deflate.c	FUNCTION_13	IF_2
0x4001b6b	            0x7518	                           jne 0x4001b85	       780	deflate.c	FUNCTION_13	IF_2
0x4001b6d	    0x488b05000000	            mov rax, qword [0x04001b74] 	       780	deflate.c	FUNCTION_13	IF_2
0x4001b74	        0x48894530	            mov qword [rbp + 0x30], rax 	       780	deflate.c	FUNCTION_13	IF_2
0x4001b78	    0xc744240cfbff	      mov dword [rsp + 0xc], 0xfffffffb 	       780	deflate.c	FUNCTION_13	IF_2
0x4001b80	      0xe98d0f0000	                           jmp 0x4002b12	       780	deflate.c	FUNCTION_13	IF_2
0x4001b85	          0x8b4b4c	            mov ecx, dword [rbx + 0x4c] 	       782	deflate.c	FUNCTION_13	IF_2	CALL_2
0x4001b88	        0x44896b4c	            mov dword [rbx + 0x4c], r13d	       783	deflate.c	FUNCTION_13	IF_2
0x4001b8c	      0x48837b2800	               cmp qword [rbx + 0x28], 0	       786	deflate.c	FUNCTION_13
0x4001b91	            0x741a	                            je 0x4001bad	       786	deflate.c	FUNCTION_13
0x4001b93	          0x4889ef	                            mov rdi, rbp	       787	deflate.c	FUNCTION_13
0x4001b96	      0xe830eaffff	                  call sym.flush_pending	       787	deflate.c	FUNCTION_13
0x4001b9b	        0x837d2000	               cmp dword [rbp + 0x20], 0	       788	deflate.c	FUNCTION_13
0x4001b9f	            0x755d	                           jne 0x4001bfe	       788	deflate.c	FUNCTION_13
0x4001ba1	    0xc7434cffffff	     mov dword [rbx + 0x4c], 0xffffffff 	       795	deflate.c	FUNCTION_13	IF_4	IF_5
0x4001ba8	      0xe9650f0000	                           jmp 0x4002b12	       796	deflate.c	FUNCTION_13	IF_4	IF_5
0x4001bad	        0x837d0800	                  cmp dword [rbp + 8], 0	       803	deflate.c	FUNCTION_13	IF_4
0x4001bb1	     0xf85390f0000	                           jne 0x4002af0	       803	deflate.c	FUNCTION_13	IF_4
0x4001bb7	      0x438d742d00	                    lea esi, [r13 + r13]	       803	deflate.c	FUNCTION_13	IF_4
0x4001bbc	        0x4183fd04	                             cmp r13d, 4	       803	deflate.c	FUNCTION_13	IF_4
0x4001bc0	      0xb809000000	                              mov eax, 9	       803	deflate.c	FUNCTION_13	IF_4
0x4001bc5	        0x8b7c240c	              mov edi, dword [rsp + 0xc]	       803	deflate.c	FUNCTION_13	IF_4
0x4001bc9	           0xf4ec7	                         cmovle eax, edi	       803	deflate.c	FUNCTION_13	IF_4
0x4001bcc	            0x29c6	                            sub esi, eax	       803	deflate.c	FUNCTION_13	IF_4
0x4001bce	          0x8d0409	                    lea eax, [rcx + rcx]	       803	deflate.c	FUNCTION_13	IF_4
0x4001bd1	          0x83f904	                              cmp ecx, 4	       803	deflate.c	FUNCTION_13	IF_4
0x4001bd4	      0xb909000000	                              mov ecx, 9	       803	deflate.c	FUNCTION_13	IF_4
0x4001bd9	           0xf4ecf	                         cmovle ecx, edi	       803	deflate.c	FUNCTION_13	IF_4
0x4001bdc	            0x29c8	                            sub eax, ecx	       803	deflate.c	FUNCTION_13	IF_4
0x4001bde	            0x39c6	                            cmp esi, eax	       803	deflate.c	FUNCTION_13	IF_4
0x4001be0	            0x7f1c	                            jg 0x4001bfe	       803	deflate.c	FUNCTION_13	IF_4
0x4001be2	            0x84d2	                             test dl, dl	       803	deflate.c	FUNCTION_13	IF_4
0x4001be4	            0x7418	                            je 0x4001bfe	       803	deflate.c	FUNCTION_13	IF_4
0x4001be6	    0x488b05000000	            mov rax, qword [0x04001bed] 	       805	deflate.c	FUNCTION_13	IF_4
0x4001bed	        0x48894530	            mov qword [rbp + 0x30], rax 	       805	deflate.c	FUNCTION_13	IF_4
0x4001bf1	    0xc744240cfbff	      mov dword [rsp + 0xc], 0xfffffffb 	       805	deflate.c	FUNCTION_13	IF_4
0x4001bf9	      0xe9140f0000	                           jmp 0x4002b12	       805	deflate.c	FUNCTION_13	IF_4
0x4001bfe	          0x8b4308	                mov eax, dword [rbx + 8]	       809	deflate.c	FUNCTION_13	ELSE_1	IF_6	CALL_5
0x4001c01	      0x3d9a020000	                          cmp eax, 0x29a	       809	deflate.c	FUNCTION_13	ELSE_1	IF_6	CALL_5
0x4001c06	            0x7522	                           jne 0x4001c2a	       809	deflate.c	FUNCTION_13	ELSE_1	IF_6	CALL_5
0x4001c08	        0x837d0800	                  cmp dword [rbp + 8], 0	       809	deflate.c	FUNCTION_13	ELSE_1	IF_6	CALL_5
0x4001c0c	     0xf84c3030000	                            je 0x4001fd5	       809	deflate.c	FUNCTION_13	ELSE_1	IF_6	CALL_5
0x4001c12	    0x488b05000000	            mov rax, qword [0x04001c19] 	       810	deflate.c	FUNCTION_13	ELSE_1	IF_6
0x4001c19	        0x48894530	            mov qword [rbp + 0x30], rax 	       810	deflate.c	FUNCTION_13	ELSE_1	IF_6
0x4001c1d	    0xc744240cfbff	      mov dword [rsp + 0xc], 0xfffffffb 	       810	deflate.c	FUNCTION_13	ELSE_1	IF_6
0x4001c25	      0xe9e80e0000	                           jmp 0x4002b12	       810	deflate.c	FUNCTION_13	ELSE_1	IF_6
0x4001c2a	          0x83f82a	                           cmp eax, 0x2a	       814	deflate.c	FUNCTION_13	IF_7	CALL_6
0x4001c2d	     0xf85d2000000	                           jne 0x4001d05	       814	deflate.c	FUNCTION_13	IF_7	CALL_6
0x4001c33	          0x8b4354	            mov eax, dword [rbx + 0x54] 	       816	deflate.c	FUNCTION_13
0x4001c36	          0xc1e00c	                            shl eax, 0xc	       816	deflate.c	FUNCTION_13
0x4001c39	    0x8d800088ffff	                 lea eax, [rax - 0x7800]	       816	deflate.c	FUNCTION_13
0x4001c3f	      0xb900000000	                              mov ecx, 0	       820	deflate.c	FUNCTION_13	IF_8
0x4001c44	    0x83bbc8000000	               cmp dword [rbx + 0xc8], 1	       819	deflate.c	FUNCTION_13	IF_8
0x4001c4b	            0x7f21	                            jg 0x4001c6e	       819	deflate.c	FUNCTION_13	IF_8
0x4001c4d	    0x8b93c4000000	            mov edx, dword [rbx + 0xc4] 	       819	deflate.c	FUNCTION_13	IF_8
0x4001c53	          0x83fa01	                              cmp edx, 1	       819	deflate.c	FUNCTION_13	IF_8
0x4001c56	            0x7e16	                           jle 0x4001c6e	       819	deflate.c	FUNCTION_13	IF_8
0x4001c58	      0xb901000000	                              mov ecx, 1	       822	deflate.c	FUNCTION_13	IF_8
0x4001c5d	          0x83fa05	                              cmp edx, 5	       821	deflate.c	FUNCTION_13	IF_8
0x4001c60	            0x7e0c	                           jle 0x4001c6e	       821	deflate.c	FUNCTION_13	IF_8
0x4001c62	          0x83fa06	                              cmp edx, 6	       826	deflate.c	FUNCTION_13	IF_8	ELSE_2	IF_10
0x4001c65	           0xf95c1	                                setne cl	       826	deflate.c	FUNCTION_13	IF_8	ELSE_2	IF_10
0x4001c68	           0xfb6c9	                           movzx ecx, cl	       826	deflate.c	FUNCTION_13	IF_8	ELSE_2	IF_10
0x4001c6b	          0x83c102	                              add ecx, 2	       826	deflate.c	FUNCTION_13	IF_8	ELSE_2	IF_10
0x4001c6e	          0xc1e106	                              shl ecx, 6	       827	deflate.c	FUNCTION_13	IF_8	ELSE_3	IF_11
0x4001c71	             0x9c1	                             or ecx, eax	       827	deflate.c	FUNCTION_13	IF_8	ELSE_3	IF_11
0x4001c73	            0x89c8	                            mov eax, ecx	       828	deflate.c	FUNCTION_13	IF_8	ELSE_3	IF_11
0x4001c75	          0x83c820	                            or eax, 0x20	       828	deflate.c	FUNCTION_13	IF_8	ELSE_3	IF_11
0x4001c78	    0x83bbac000000	               cmp dword [rbx + 0xac], 0	       828	deflate.c	FUNCTION_13	IF_8	ELSE_3	IF_11
0x4001c7f	           0xf45c8	                         cmovne ecx, eax	       828	deflate.c	FUNCTION_13	IF_8	ELSE_3	IF_11
0x4001c82	      0xba85104208	                      mov edx, 0x8421085	       829	deflate.c	FUNCTION_13	IF_8	ELSE_4
0x4001c87	            0x89c8	                            mov eax, ecx	       829	deflate.c	FUNCTION_13	IF_8	ELSE_4
0x4001c89	            0xf7e2	                                 mul edx	       829	deflate.c	FUNCTION_13	IF_8	ELSE_4
0x4001c8b	            0x29d1	                            sub ecx, edx	       829	deflate.c	FUNCTION_13	IF_8	ELSE_4
0x4001c8d	            0xd1e9	                              shr ecx, 1	       829	deflate.c	FUNCTION_13	IF_8	ELSE_4
0x4001c8f	             0x1ca	                            add edx, ecx	       829	deflate.c	FUNCTION_13	IF_8	ELSE_4
0x4001c91	          0xc1ea04	                              shr edx, 4	       829	deflate.c	FUNCTION_13	IF_8	ELSE_4
0x4001c94	            0x89d6	                            mov esi, edx	       829	deflate.c	FUNCTION_13	IF_8	ELSE_4
0x4001c96	          0xc1e605	                              shl esi, 5	       829	deflate.c	FUNCTION_13	IF_8	ELSE_4
0x4001c99	            0x29d6	                            sub esi, edx	       829	deflate.c	FUNCTION_13	IF_8	ELSE_4
0x4001c9b	          0x83c61f	                           add esi, 0x1f	       831	deflate.c	FUNCTION_13	IF_8
0x4001c9e	          0x4889df	                            mov rdi, rbx	       831	deflate.c	FUNCTION_13	IF_8
0x4001ca1	      0xe88de4ffff	                    call sym.putShortMSB	       831	deflate.c	FUNCTION_13	IF_8
0x4001ca6	    0x83bbac000000	               cmp dword [rbx + 0xac], 0	       834	deflate.c	FUNCTION_13	IF_8
0x4001cad	            0x741c	                            je 0x4001ccb	       834	deflate.c	FUNCTION_13	IF_8
0x4001caf	        0x488b7560	            mov rsi, qword [rbp + 0x60] 	       835	deflate.c	FUNCTION_13	IF_8	CALL_7
0x4001cb3	        0x48c1ee10	                           shr rsi, 0x10	       835	deflate.c	FUNCTION_13	IF_8	CALL_7
0x4001cb7	          0x4889df	                            mov rdi, rbx	       835	deflate.c	FUNCTION_13	IF_8	CALL_7
0x4001cba	      0xe874e4ffff	                    call sym.putShortMSB	       835	deflate.c	FUNCTION_13	IF_8	CALL_7
0x4001cbf	         0xfb77560	           movzx esi, word [rbp + 0x60] 	       836	deflate.c	FUNCTION_13	IF_8
0x4001cc3	          0x4889df	                            mov rdi, rbx	       836	deflate.c	FUNCTION_13	IF_8
0x4001cc6	      0xe868e4ffff	                    call sym.putShortMSB	       836	deflate.c	FUNCTION_13	IF_8
0x4001ccb	      0xba00000000	                              mov edx, 0	       838	deflate.c	FUNCTION_13	IF_8	IF_13
0x4001cd0	      0xbe00000000	                              mov esi, 0	       838	deflate.c	FUNCTION_13	IF_8	IF_13
0x4001cd5	      0xbf00000000	                              mov edi, 0	       838	deflate.c	FUNCTION_13	IF_8	IF_13
0x4001cda	      0xe800000000	                          call 0x4001cdf	       838	deflate.c	FUNCTION_13	IF_8	IF_13
0x4001cdf	        0x48894560	            mov qword [rbp + 0x60], rax 	       838	deflate.c	FUNCTION_13	IF_8	IF_13
0x4001ce3	    0xc74308710000	               mov dword [rbx + 8], 0x71	       839	deflate.c	FUNCTION_13	IF_8	IF_13	CALL_8
0x4001cea	          0x4889ef	                            mov rdi, rbp	       842	deflate.c	FUNCTION_13	IF_8	CALL_10
0x4001ced	      0xe8d9e8ffff	                  call sym.flush_pending	       842	deflate.c	FUNCTION_13	IF_8	CALL_10
0x4001cf2	      0x48837b2800	               cmp qword [rbx + 0x28], 0	       843	deflate.c	FUNCTION_13	IF_8
0x4001cf7	            0x740c	                            je 0x4001d05	       843	deflate.c	FUNCTION_13	IF_8
0x4001cf9	    0xc7434cffffff	     mov dword [rbx + 0x4c], 0xffffffff 	       844	deflate.c	FUNCTION_13	IF_8
0x4001d00	      0xe90d0e0000	                           jmp 0x4002b12	       845	deflate.c	FUNCTION_13	IF_8
0x4001d05	        0x837b0839	               cmp dword [rbx + 8], 0x39	       849	deflate.c	FUNCTION_13	IF_8	IF_14
0x4001d09	     0xf85c6020000	                           jne 0x4001fd5	       849	deflate.c	FUNCTION_13	IF_8	IF_14
0x4001d0f	      0xba00000000	                              mov edx, 0	       851	deflate.c	FUNCTION_13	IF_8
0x4001d14	      0xbe00000000	                              mov esi, 0	       851	deflate.c	FUNCTION_13	IF_8
0x4001d19	      0xbf00000000	                              mov edi, 0	       851	deflate.c	FUNCTION_13	IF_8
0x4001d1e	      0xe800000000	                          call 0x4001d23	       851	deflate.c	FUNCTION_13	IF_8
0x4001d23	        0x48894560	            mov qword [rbp + 0x60], rax 	       851	deflate.c	FUNCTION_13	IF_8
0x4001d27	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       852	deflate.c	FUNCTION_13
0x4001d2b	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       852	deflate.c	FUNCTION_13
0x4001d2f	        0x488d4801	                      lea rcx, [rax + 1]	       852	deflate.c	FUNCTION_13
0x4001d33	        0x48894b28	             mov qword [rbx + 0x28], rcx	       852	deflate.c	FUNCTION_13
0x4001d37	        0xc604021f	              mov byte [rdx + rax], 0x1f	       852	deflate.c	FUNCTION_13
0x4001d3b	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       853	deflate.c	FUNCTION_13	IF_15
0x4001d3f	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       853	deflate.c	FUNCTION_13	IF_15
0x4001d43	        0x488d4801	                      lea rcx, [rax + 1]	       853	deflate.c	FUNCTION_13	IF_15
0x4001d47	        0x48894b28	             mov qword [rbx + 0x28], rcx	       853	deflate.c	FUNCTION_13	IF_15
0x4001d4b	        0xc604028b	              mov byte [rdx + rax], 0x8b	       853	deflate.c	FUNCTION_13	IF_15
0x4001d4f	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       854	deflate.c	FUNCTION_13	IF_15
0x4001d53	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       854	deflate.c	FUNCTION_13	IF_15
0x4001d57	        0x488d4801	                      lea rcx, [rax + 1]	       854	deflate.c	FUNCTION_13	IF_15
0x4001d5b	        0x48894b28	             mov qword [rbx + 0x28], rcx	       854	deflate.c	FUNCTION_13	IF_15
0x4001d5f	        0xc6040208	                 mov byte [rdx + rax], 8	       854	deflate.c	FUNCTION_13	IF_15
0x4001d63	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	       855	deflate.c	FUNCTION_13	IF_15	CALL_12
0x4001d67	          0x4885d2	                           test rdx, rdx	       855	deflate.c	FUNCTION_13	IF_15	CALL_12
0x4001d6a	     0xf85da000000	                           jne 0x4001e4a	       855	deflate.c	FUNCTION_13	IF_15	CALL_12
0x4001d70	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       856	deflate.c	FUNCTION_13	IF_15	CALL_13
0x4001d74	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       856	deflate.c	FUNCTION_13	IF_15	CALL_13
0x4001d78	        0x488d4801	                      lea rcx, [rax + 1]	       856	deflate.c	FUNCTION_13	IF_15	CALL_13
0x4001d7c	        0x48894b28	             mov qword [rbx + 0x28], rcx	       856	deflate.c	FUNCTION_13	IF_15	CALL_13
0x4001d80	        0xc6040200	                 mov byte [rdx + rax], 0	       856	deflate.c	FUNCTION_13	IF_15	CALL_13
0x4001d84	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       857	deflate.c	FUNCTION_13	IF_15	CALL_14
0x4001d88	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       857	deflate.c	FUNCTION_13	IF_15	CALL_14
0x4001d8c	        0x488d4801	                      lea rcx, [rax + 1]	       857	deflate.c	FUNCTION_13	IF_15	CALL_14
0x4001d90	        0x48894b28	             mov qword [rbx + 0x28], rcx	       857	deflate.c	FUNCTION_13	IF_15	CALL_14
0x4001d94	        0xc6040200	                 mov byte [rdx + rax], 0	       857	deflate.c	FUNCTION_13	IF_15	CALL_14
0x4001d98	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       858	deflate.c	FUNCTION_13	IF_15	CALL_15
0x4001d9c	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       858	deflate.c	FUNCTION_13	IF_15	CALL_15
0x4001da0	        0x488d4801	                      lea rcx, [rax + 1]	       858	deflate.c	FUNCTION_13	IF_15	CALL_15
0x4001da4	        0x48894b28	             mov qword [rbx + 0x28], rcx	       858	deflate.c	FUNCTION_13	IF_15	CALL_15
0x4001da8	        0xc6040200	                 mov byte [rdx + rax], 0	       858	deflate.c	FUNCTION_13	IF_15	CALL_15
0x4001dac	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       859	deflate.c	FUNCTION_13	IF_15	IF_16
0x4001db0	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       859	deflate.c	FUNCTION_13	IF_15	IF_16
0x4001db4	        0x488d4801	                      lea rcx, [rax + 1]	       859	deflate.c	FUNCTION_13	IF_15	IF_16
0x4001db8	        0x48894b28	             mov qword [rbx + 0x28], rcx	       859	deflate.c	FUNCTION_13	IF_15	IF_16
0x4001dbc	        0xc6040200	                 mov byte [rdx + rax], 0	       859	deflate.c	FUNCTION_13	IF_15	IF_16
0x4001dc0	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       860	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_16
0x4001dc4	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       860	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_16
0x4001dc8	        0x488d4801	                      lea rcx, [rax + 1]	       860	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_16
0x4001dcc	        0x48894b28	             mov qword [rbx + 0x28], rcx	       860	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_16
0x4001dd0	        0xc6040200	                 mov byte [rdx + rax], 0	       860	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_16
0x4001dd4	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x4001dd8	        0x488d5001	                      lea rdx, [rax + 1]	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x4001ddc	        0x48895328	             mov qword [rbx + 0x28], rdx	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x4001de0	        0x48034310	             add rax, qword [rbx + 0x10]	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x4001de4	    0x8b8bc4000000	            mov ecx, dword [rbx + 0xc4] 	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x4001dea	      0xba02000000	                              mov edx, 2	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x4001def	          0x83f909	                              cmp ecx, 9	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x4001df2	            0x741a	                            je 0x4001e0e	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x4001df4	    0x83bbc8000000	               cmp dword [rbx + 0xc8], 1	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x4001dfb	            0x7f0c	                            jg 0x4001e09	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x4001dfd	          0x83f901	                              cmp ecx, 1	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x4001e00	            0x7e07	                           jle 0x4001e09	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x4001e02	      0xba00000000	                              mov edx, 0	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x4001e07	            0xeb05	                           jmp 0x4001e0e	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x4001e09	      0xba04000000	                              mov edx, 4	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x4001e0e	            0x8810	                      mov byte [rax], dl	       861	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_17
0x4001e10	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       864	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_20
0x4001e14	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       864	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_20
0x4001e18	        0x488d4801	                      lea rcx, [rax + 1]	       864	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_20
0x4001e1c	        0x48894b28	             mov qword [rbx + 0x28], rcx	       864	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_20
0x4001e20	        0xc6040203	                 mov byte [rdx + rax], 3	       864	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_20
0x4001e24	    0xc74308710000	               mov dword [rbx + 8], 0x71	       865	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_21
0x4001e2b	          0x4889ef	                            mov rdi, rbp	       868	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_22
0x4001e2e	      0xe898e7ffff	                  call sym.flush_pending	       868	deflate.c	FUNCTION_13	IF_15	IF_16	CALL_22
0x4001e33	      0x48837b2800	               cmp qword [rbx + 0x28], 0	       869	deflate.c	FUNCTION_13	IF_15	IF_16
0x4001e38	     0xf8497010000	                            je 0x4001fd5	       869	deflate.c	FUNCTION_13	IF_15	IF_16
0x4001e3e	    0xc7434cffffff	     mov dword [rbx + 0x4c], 0xffffffff 	       870	deflate.c	FUNCTION_13	IF_15	IF_16
0x4001e45	      0xe9c80c0000	                           jmp 0x4002b12	       871	deflate.c	FUNCTION_13	IF_15	IF_16
0x4001e4a	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x4001e4e	        0x488b7328	            mov rsi, qword [rbx + 0x28] 	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x4001e52	        0x488d4601	                      lea rax, [rsi + 1]	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x4001e56	        0x48894328	             mov qword [rbx + 0x28], rax	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x4001e5a	          0x833a00	                      cmp dword [rdx], 0	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x4001e5d	           0xf95c0	                                setne al	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x4001e60	        0x837a4401	               cmp dword [rdx + 0x44], 1	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x4001e64	            0x19c9	                            sbb ecx, ecx	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x4001e66	            0xf7d1	                                 not ecx	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x4001e68	          0x83e102	                              and ecx, 2	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x4001e6b	             0x1c8	                            add eax, ecx	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x4001e6d	      0x48837a1801	               cmp qword [rdx + 0x18], 1	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x4001e72	            0x19c9	                            sbb ecx, ecx	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x4001e74	            0xf7d1	                                 not ecx	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x4001e76	          0x83e104	                              and ecx, 4	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x4001e79	             0x1c8	                            add eax, ecx	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x4001e7b	      0x48837a2801	               cmp qword [rdx + 0x28], 1	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x4001e80	            0x19c9	                            sbb ecx, ecx	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x4001e82	            0xf7d1	                                 not ecx	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x4001e84	          0x83e108	                              and ecx, 8	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x4001e87	             0x1c8	                            add eax, ecx	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x4001e89	      0x48837a3801	               cmp qword [rdx + 0x38], 1	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x4001e8e	            0x19d2	                            sbb edx, edx	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x4001e90	            0xf7d2	                                 not edx	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x4001e92	          0x83e210	                           and edx, 0x10	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x4001e95	             0x1d0	                            add eax, edx	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x4001e97	          0x880437	                mov byte [rdi + rsi], al	       875	deflate.c	FUNCTION_13	IF_15	IF_16	IF_17
0x4001e9a	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       881	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001e9e	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       881	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001ea2	        0x488d4801	                      lea rcx, [rax + 1]	       881	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001ea6	        0x48894b28	             mov qword [rbx + 0x28], rcx	       881	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001eaa	        0x488b4b38	            mov rcx, qword [rbx + 0x38] 	       881	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001eae	        0x488b4908	                mov rcx, qword [rcx + 8]	       881	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001eb2	          0x880c02	                mov byte [rdx + rax], cl	       881	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001eb5	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	       882	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001eb9	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	       882	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001ebd	        0x488d4201	                      lea rax, [rdx + 1]	       882	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001ec1	        0x48894328	             mov qword [rbx + 0x28], rax	       882	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001ec5	        0x488b4338	            mov rax, qword [rbx + 0x38] 	       882	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001ec9	        0x488b4008	                mov rax, qword [rax + 8]	       882	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001ecd	        0x48c1e808	                              shr rax, 8	       882	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001ed1	          0x880411	                mov byte [rcx + rdx], al	       882	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001ed4	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	       883	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001ed8	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	       883	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001edc	        0x488d4201	                      lea rax, [rdx + 1]	       883	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001ee0	        0x48894328	             mov qword [rbx + 0x28], rax	       883	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001ee4	        0x488b4338	            mov rax, qword [rbx + 0x38] 	       883	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001ee8	        0x488b4008	                mov rax, qword [rax + 8]	       883	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001eec	        0x48c1e810	                           shr rax, 0x10	       883	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001ef0	          0x880411	                mov byte [rcx + rdx], al	       883	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001ef3	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	       884	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001ef7	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	       884	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001efb	        0x488d4201	                      lea rax, [rdx + 1]	       884	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001eff	        0x48894328	             mov qword [rbx + 0x28], rax	       884	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001f03	        0x488b4338	            mov rax, qword [rbx + 0x38] 	       884	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001f07	        0x488b4008	                mov rax, qword [rax + 8]	       884	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001f0b	        0x48c1e818	                           shr rax, 0x18	       884	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001f0f	          0x880411	                mov byte [rcx + rdx], al	       884	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001f12	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x4001f16	        0x488d5001	                      lea rdx, [rax + 1]	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x4001f1a	        0x48895328	             mov qword [rbx + 0x28], rdx	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x4001f1e	        0x48034310	             add rax, qword [rbx + 0x10]	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x4001f22	    0x8b8bc4000000	            mov ecx, dword [rbx + 0xc4] 	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x4001f28	      0xba02000000	                              mov edx, 2	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x4001f2d	          0x83f909	                              cmp ecx, 9	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x4001f30	            0x741a	                            je 0x4001f4c	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x4001f32	    0x83bbc8000000	               cmp dword [rbx + 0xc8], 1	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x4001f39	            0x7f0c	                            jg 0x4001f47	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x4001f3b	          0x83f901	                              cmp ecx, 1	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x4001f3e	            0x7e07	                           jle 0x4001f47	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x4001f40	      0xba00000000	                              mov edx, 0	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x4001f45	            0xeb05	                           jmp 0x4001f4c	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x4001f47	      0xba04000000	                              mov edx, 4	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x4001f4c	            0x8810	                      mov byte [rax], dl	       885	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_25
0x4001f4e	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       888	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_28
0x4001f52	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       888	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_28
0x4001f56	        0x488d4801	                      lea rcx, [rax + 1]	       888	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_28
0x4001f5a	        0x48894b28	             mov qword [rbx + 0x28], rcx	       888	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_28
0x4001f5e	        0x488b4b38	            mov rcx, qword [rbx + 0x38] 	       888	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_28
0x4001f62	          0x8b4914	            mov ecx, dword [rcx + 0x14] 	       888	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_28
0x4001f65	          0x880c02	                mov byte [rdx + rax], cl	       888	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_28
0x4001f68	        0x488b4338	            mov rax, qword [rbx + 0x38] 	       889	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_29
0x4001f6c	      0x4883781800	               cmp qword [rax + 0x18], 0	       889	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_29
0x4001f71	            0x7433	                            je 0x4001fa6	       889	deflate.c	FUNCTION_13	IF_15	ELSE_5	CALL_29
0x4001f73	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	       890	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001f77	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	       890	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001f7b	        0x488d7201	                      lea rsi, [rdx + 1]	       890	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001f7f	        0x48897328	             mov qword [rbx + 0x28], rsi	       890	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001f83	          0x8b4020	            mov eax, dword [rax + 0x20] 	       890	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001f86	          0x880411	                mov byte [rcx + rdx], al	       890	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001f89	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	       891	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001f8d	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	       891	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001f91	        0x488d4201	                      lea rax, [rdx + 1]	       891	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001f95	        0x48894328	             mov qword [rbx + 0x28], rax	       891	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001f99	        0x488b4338	            mov rax, qword [rbx + 0x38] 	       891	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001f9d	          0x8b4020	            mov eax, dword [rax + 0x20] 	       891	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001fa0	          0xc1e808	                              shr eax, 8	       891	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001fa3	          0x880411	                mov byte [rcx + rdx], al	       891	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001fa6	        0x488b4338	            mov rax, qword [rbx + 0x38] 	       893	deflate.c	FUNCTION_13	IF_15	ELSE_5	IF_18
0x4001faa	        0x83784400	               cmp dword [rax + 0x44], 0	       893	deflate.c	FUNCTION_13	IF_15	ELSE_5	IF_18
0x4001fae	            0x7414	                            je 0x4001fc4	       893	deflate.c	FUNCTION_13	IF_15	ELSE_5	IF_18
0x4001fb0	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	       894	deflate.c	FUNCTION_13	IF_15	ELSE_5	IF_18	CALL_31
0x4001fb4	        0x488b7d60	            mov rdi, qword [rbp + 0x60] 	       894	deflate.c	FUNCTION_13	IF_15	ELSE_5	IF_18	CALL_31
0x4001fb8	          0x8b5328	            mov edx, dword [rbx + 0x28] 	       894	deflate.c	FUNCTION_13	IF_15	ELSE_5	IF_18	CALL_31
0x4001fbb	      0xe800000000	                          call 0x4001fc0	       894	deflate.c	FUNCTION_13	IF_15	ELSE_5	IF_18	CALL_31
0x4001fc0	        0x48894560	            mov qword [rbp + 0x60], rax 	       894	deflate.c	FUNCTION_13	IF_15	ELSE_5	IF_18	CALL_31
0x4001fc4	    0x48c743400000	               mov qword [rbx + 0x40], 0	       896	deflate.c	FUNCTION_13	IF_15	ELSE_5	IF_18
0x4001fcc	    0xc74308450000	               mov dword [rbx + 8], 0x45	       897	deflate.c	FUNCTION_13	IF_15	ELSE_5	IF_19
0x4001fd3	            0xeb0c	                           jmp 0x4001fe1	       897	deflate.c	FUNCTION_13	IF_15	ELSE_5	IF_19
0x4001fd5	          0x8b4308	                mov eax, dword [rbx + 8]	       900	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001fd8	          0x83f845	                           cmp eax, 0x45	       900	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001fdb	     0xf8523010000	                           jne 0x4002104	       900	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001fe1	        0x488b4338	            mov rax, qword [rbx + 0x38] 	       901	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001fe5	      0x4883781800	               cmp qword [rax + 0x18], 0	       901	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001fea	     0xf840b010000	                            je 0x40020fb	       901	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001ff0	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	       902	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001ff4	        0x48893c24	                    mov qword [rsp], rdi	       902	deflate.c	FUNCTION_13	IF_15	ELSE_5
0x4001ff8	      0x440fb77020	          movzx r14d, word [rax + 0x20] 	       903	deflate.c	FUNCTION_13	IF_15
0x4001ffd	        0x442b7340	            sub r14d, dword [rbx + 0x40]	       903	deflate.c	FUNCTION_13	IF_15
0x4002001	          0x4589f7	                          mov r15d, r14d	       904	deflate.c	FUNCTION_13	IF_20
0x4002004	        0x4c8b6318	            mov r12, qword [rbx + 0x18] 	       904	deflate.c	FUNCTION_13	IF_20
0x4002008	        0x4a8d043f	                    lea rax, [rdi + r15]	       904	deflate.c	FUNCTION_13	IF_20
0x400200c	          0x4c39e0	                            cmp rax, r12	       904	deflate.c	FUNCTION_13	IF_20
0x400200f	     0xf868b000000	                           jbe 0x40020a0	       904	deflate.c	FUNCTION_13	IF_20
0x4002015	          0x4129fc	                           sub r12d, edi	       905	deflate.c	FUNCTION_13	IF_20	IF_21
0x4002018	          0x4589e7	                          mov r15d, r12d	       906	deflate.c	FUNCTION_13	IF_20	IF_21
0x400201b	        0x48037b10	             add rdi, qword [rbx + 0x10]	        53	string3.h	FUNCTION_25	CALL_3
0x400201f	        0x488b4338	            mov rax, qword [rbx + 0x38] 	       907	deflate.c	FUNCTION_13	IF_20	IF_21
0x4002023	        0x488b7340	            mov rsi, qword [rbx + 0x40] 	        53	string3.h	FUNCTION_25	CALL_3
0x4002027	        0x48037018	             add rsi, qword [rax + 0x18]	        53	string3.h	FUNCTION_25	CALL_3
0x400202b	          0x4c89fa	                            mov rdx, r15	        53	string3.h	FUNCTION_25	CALL_3
0x400202e	      0xe800000000	                          call 0x4002033	        53	string3.h	FUNCTION_25	CALL_3
0x4002033	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	       908	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4002037	        0x48895328	             mov qword [rbx + 0x28], rdx	       908	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x400203b	        0x488b4338	            mov rax, qword [rbx + 0x38] 	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x400203f	        0x83784400	               cmp dword [rax + 0x44], 0	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4002043	            0x741f	                            je 0x4002064	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4002045	        0x488b0424	                    mov rax, qword [rsp]	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4002049	          0x4839c2	                            cmp rdx, rax	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x400204c	            0x7616	                           jbe 0x4002064	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x400204e	            0x29c2	                            sub edx, eax	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4002050	          0x4889c6	                            mov rsi, rax	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4002053	        0x48037310	             add rsi, qword [rbx + 0x10]	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4002057	        0x488b7d60	            mov rdi, qword [rbp + 0x60] 	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x400205b	      0xe800000000	                          call 0x4002060	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4002060	        0x48894560	            mov qword [rbp + 0x60], rax 	       909	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4002064	        0x4c017b40	            add qword [rbx + 0x40], r15 	       910	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1	CALL_34
0x4002068	          0x4889ef	                            mov rdi, rbp	       911	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x400206b	      0xe85be5ffff	                  call sym.flush_pending	       911	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4002070	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	       912	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4002074	          0x4885ff	                           test rdi, rdi	       912	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4002077	            0x740c	                            je 0x4002085	       912	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4002079	    0xc7434cffffff	     mov dword [rbx + 0x4c], 0xffffffff 	       913	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4002080	      0xe98d0a0000	                           jmp 0x4002b12	       914	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x4002085	          0x4529e6	                          sub r14d, r12d	       917	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1	IF_22
0x4002088	          0x4589f7	                          mov r15d, r14d	       904	deflate.c	FUNCTION_13	IF_20
0x400208b	        0x4c8b6318	            mov r12, qword [rbx + 0x18] 	       904	deflate.c	FUNCTION_13	IF_20
0x400208f	    0x48c704240000	                      mov qword [rsp], 0	       916	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1	IF_22
0x4002097	          0x4d39e7	                            cmp r15, r12	       904	deflate.c	FUNCTION_13	IF_20
0x400209a	     0xf8775ffffff	                            ja 0x4002015	       904	deflate.c	FUNCTION_13	IF_20
0x40020a0	        0x4c8b3424	                    mov r14, qword [rsp]	        53	string3.h	FUNCTION_25	CALL_3
0x40020a4	          0x4c89f7	                            mov rdi, r14	        53	string3.h	FUNCTION_25	CALL_3
0x40020a7	        0x48037b10	             add rdi, qword [rbx + 0x10]	        53	string3.h	FUNCTION_25	CALL_3
0x40020ab	        0x488b4338	            mov rax, qword [rbx + 0x38] 	       920	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x40020af	        0x488b7340	            mov rsi, qword [rbx + 0x40] 	        53	string3.h	FUNCTION_25	CALL_3
0x40020b3	        0x48037018	             add rsi, qword [rax + 0x18]	        53	string3.h	FUNCTION_25	CALL_3
0x40020b7	          0x4c89fa	                            mov rdx, r15	        53	string3.h	FUNCTION_25	CALL_3
0x40020ba	      0xe800000000	                          call 0x40020bf	        53	string3.h	FUNCTION_25	CALL_3
0x40020bf	        0x4c037b28	             add r15, qword [rbx + 0x28]	       921	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x40020c3	        0x4c897b28	             mov qword [rbx + 0x28], r15	       921	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x40020c7	        0x488b4338	            mov rax, qword [rbx + 0x38] 	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x40020cb	        0x83784400	               cmp dword [rax + 0x44], 0	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x40020cf	            0x7422	                            je 0x40020f3	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x40020d1	          0x4c89f7	                            mov rdi, r14	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x40020d4	          0x4d39f7	                            cmp r15, r14	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x40020d7	            0x761a	                           jbe 0x40020f3	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x40020d9	          0x4489fa	                           mov edx, r15d	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x40020dc	          0x4429f2	                           sub edx, r14d	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x40020df	        0x48037b10	             add rdi, qword [rbx + 0x10]	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x40020e3	          0x4889fe	                            mov rsi, rdi	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x40020e6	        0x488b7d60	            mov rdi, qword [rbp + 0x60] 	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x40020ea	      0xe800000000	                          call 0x40020ef	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x40020ef	        0x48894560	            mov qword [rbp + 0x60], rax 	       922	deflate.c	FUNCTION_13	IF_20	IF_21	WHILE_1
0x40020f3	    0x48c743400000	               mov qword [rbx + 0x40], 0	       923	deflate.c	FUNCTION_13	IF_20	IF_21	CALL_36
0x40020fb	    0xc74308490000	               mov dword [rbx + 8], 0x49	       925	deflate.c	FUNCTION_13	IF_20	IF_21
0x4002102	            0xeb09	                           jmp 0x400210d	       925	deflate.c	FUNCTION_13	IF_20	IF_21
0x4002104	          0x83f849	                           cmp eax, 0x49	       927	deflate.c	FUNCTION_13	IF_20	IF_21
0x4002107	     0xf85c5000000	                           jne 0x40021d2	       927	deflate.c	FUNCTION_13	IF_20	IF_21
0x400210d	        0x488b4338	            mov rax, qword [rbx + 0x38] 	       928	deflate.c	FUNCTION_13	IF_20	IF_21
0x4002111	      0x4883782800	               cmp qword [rax + 0x28], 0	       928	deflate.c	FUNCTION_13	IF_20	IF_21
0x4002116	     0xf84ad000000	                            je 0x40021c9	       928	deflate.c	FUNCTION_13	IF_20	IF_21
0x400211c	        0x488b7328	            mov rsi, qword [rbx + 0x28] 	       929	deflate.c	FUNCTION_13	IF_20
0x4002120	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	       932	deflate.c	FUNCTION_13	IF_23	IF_24
0x4002124	        0x483b5318	            cmp rdx, qword [rbx + 0x18] 	       932	deflate.c	FUNCTION_13	IF_23	IF_24
0x4002128	            0x7542	                           jne 0x400216c	       932	deflate.c	FUNCTION_13	IF_23	IF_24
0x400212a	        0x488b4338	            mov rax, qword [rbx + 0x38] 	       933	deflate.c	FUNCTION_13	IF_23	IF_24
0x400212e	        0x83784400	               cmp dword [rax + 0x44], 0	       933	deflate.c	FUNCTION_13	IF_23	IF_24
0x4002132	            0x7418	                            je 0x400214c	       933	deflate.c	FUNCTION_13	IF_23	IF_24
0x4002134	          0x4839d6	                            cmp rsi, rdx	       933	deflate.c	FUNCTION_13	IF_23	IF_24
0x4002137	            0x7313	                           jae 0x400214c	       933	deflate.c	FUNCTION_13	IF_23	IF_24
0x4002139	            0x29f2	                            sub edx, esi	       933	deflate.c	FUNCTION_13	IF_23	IF_24
0x400213b	        0x48037310	             add rsi, qword [rbx + 0x10]	       933	deflate.c	FUNCTION_13	IF_23	IF_24
0x400213f	        0x488b7d60	            mov rdi, qword [rbp + 0x60] 	       933	deflate.c	FUNCTION_13	IF_23	IF_24
0x4002143	      0xe800000000	                          call 0x4002148	       933	deflate.c	FUNCTION_13	IF_23	IF_24
0x4002148	        0x48894560	            mov qword [rbp + 0x60], rax 	       933	deflate.c	FUNCTION_13	IF_23	IF_24
0x400214c	          0x4889ef	                            mov rdi, rbp	       934	deflate.c	FUNCTION_13	IF_23	IF_24
0x400214f	      0xe877e4ffff	                  call sym.flush_pending	       934	deflate.c	FUNCTION_13	IF_23	IF_24
0x4002154	      0x48837b2800	               cmp qword [rbx + 0x28], 0	       935	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1
0x4002159	            0x740c	                            je 0x4002167	       935	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1
0x400215b	    0xc7434cffffff	     mov dword [rbx + 0x4c], 0xffffffff 	       936	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x4002162	      0xe9ab090000	                           jmp 0x4002b12	       937	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x4002167	      0xbe00000000	                              mov esi, 0	       939	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25	IF_26
0x400216c	        0x488b4338	            mov rax, qword [rbx + 0x38] 	       941	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25	IF_26
0x4002170	        0x488b5028	            mov rdx, qword [rax + 0x28] 	       941	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25	IF_26
0x4002174	        0x488b4340	            mov rax, qword [rbx + 0x40] 	       941	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25	IF_26
0x4002178	        0x488d4801	                      lea rcx, [rax + 1]	       941	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25	IF_26
0x400217c	        0x48894b40	             mov qword [rbx + 0x40], rcx	       941	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25	IF_26
0x4002180	         0xfb60402	             movzx eax, byte [rdx + rax]	       941	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25	IF_26
0x4002184	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	       942	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25	IF_26
0x4002188	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	       942	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25	IF_26
0x400218c	        0x488d7a01	                      lea rdi, [rdx + 1]	       942	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25	IF_26
0x4002190	        0x48897b28	             mov qword [rbx + 0x28], rdi	       942	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25	IF_26
0x4002194	          0x880411	                mov byte [rcx + rdx], al	       942	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25	IF_26
0x4002197	            0x84c0	                             test al, al	       943	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x4002199	            0x7585	                           jne 0x4002120	       943	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x400219b	        0x488b4338	            mov rax, qword [rbx + 0x38] 	       944	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x400219f	        0x83784400	               cmp dword [rax + 0x44], 0	       944	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x40021a3	            0x741c	                            je 0x40021c1	       944	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x40021a5	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	       944	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x40021a9	          0x4839d6	                            cmp rsi, rdx	       944	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x40021ac	            0x7313	                           jae 0x40021c1	       944	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x40021ae	            0x29f2	                            sub edx, esi	       944	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x40021b0	        0x48037310	             add rsi, qword [rbx + 0x10]	       944	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x40021b4	        0x488b7d60	            mov rdi, qword [rbp + 0x60] 	       944	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x40021b8	      0xe800000000	                          call 0x40021bd	       944	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x40021bd	        0x48894560	            mov qword [rbp + 0x60], rax 	       944	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1	IF_25
0x40021c1	    0x48c743400000	               mov qword [rbx + 0x40], 0	       945	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1
0x40021c9	    0xc743085b0000	               mov dword [rbx + 8], 0x5b	       947	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1
0x40021d0	            0xeb09	                           jmp 0x40021db	       947	deflate.c	FUNCTION_13	IF_23	IF_24	DO_1
0x40021d2	          0x83f85b	                           cmp eax, 0x5b	       949	deflate.c	FUNCTION_13	IF_23	IF_24
0x40021d5	     0xf85bd000000	                           jne 0x4002298	       949	deflate.c	FUNCTION_13	IF_23	IF_24
0x40021db	        0x488b4338	            mov rax, qword [rbx + 0x38] 	       950	deflate.c	FUNCTION_13	IF_23	IF_24
0x40021df	      0x4883783800	               cmp qword [rax + 0x38], 0	       950	deflate.c	FUNCTION_13	IF_23	IF_24
0x40021e4	     0xf84a5000000	                            je 0x400228f	       950	deflate.c	FUNCTION_13	IF_23	IF_24
0x40021ea	        0x488b7328	            mov rsi, qword [rbx + 0x28] 	       951	deflate.c	FUNCTION_13	IF_23
0x40021ee	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	       954	deflate.c	FUNCTION_13	IF_27	IF_28
0x40021f2	        0x483b5318	            cmp rdx, qword [rbx + 0x18] 	       954	deflate.c	FUNCTION_13	IF_27	IF_28
0x40021f6	            0x7542	                           jne 0x400223a	       954	deflate.c	FUNCTION_13	IF_27	IF_28
0x40021f8	        0x488b4338	            mov rax, qword [rbx + 0x38] 	       955	deflate.c	FUNCTION_13	IF_27	IF_28
0x40021fc	        0x83784400	               cmp dword [rax + 0x44], 0	       955	deflate.c	FUNCTION_13	IF_27	IF_28
0x4002200	            0x7418	                            je 0x400221a	       955	deflate.c	FUNCTION_13	IF_27	IF_28
0x4002202	          0x4839d6	                            cmp rsi, rdx	       955	deflate.c	FUNCTION_13	IF_27	IF_28
0x4002205	            0x7313	                           jae 0x400221a	       955	deflate.c	FUNCTION_13	IF_27	IF_28
0x4002207	            0x29f2	                            sub edx, esi	       955	deflate.c	FUNCTION_13	IF_27	IF_28
0x4002209	        0x48037310	             add rsi, qword [rbx + 0x10]	       955	deflate.c	FUNCTION_13	IF_27	IF_28
0x400220d	        0x488b7d60	            mov rdi, qword [rbp + 0x60] 	       955	deflate.c	FUNCTION_13	IF_27	IF_28
0x4002211	      0xe800000000	                          call 0x4002216	       955	deflate.c	FUNCTION_13	IF_27	IF_28
0x4002216	        0x48894560	            mov qword [rbp + 0x60], rax 	       955	deflate.c	FUNCTION_13	IF_27	IF_28
0x400221a	          0x4889ef	                            mov rdi, rbp	       956	deflate.c	FUNCTION_13	IF_27	IF_28
0x400221d	      0xe8a9e3ffff	                  call sym.flush_pending	       956	deflate.c	FUNCTION_13	IF_27	IF_28
0x4002222	      0x48837b2800	               cmp qword [rbx + 0x28], 0	       957	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2
0x4002227	            0x740c	                            je 0x4002235	       957	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2
0x4002229	    0xc7434cffffff	     mov dword [rbx + 0x4c], 0xffffffff 	       958	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x4002230	      0xe9dd080000	                           jmp 0x4002b12	       959	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x4002235	      0xbe00000000	                              mov esi, 0	       961	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29	IF_30
0x400223a	        0x488b4338	            mov rax, qword [rbx + 0x38] 	       963	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29	IF_30
0x400223e	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       963	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29	IF_30
0x4002242	        0x488b4340	            mov rax, qword [rbx + 0x40] 	       963	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29	IF_30
0x4002246	        0x488d4801	                      lea rcx, [rax + 1]	       963	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29	IF_30
0x400224a	        0x48894b40	             mov qword [rbx + 0x40], rcx	       963	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29	IF_30
0x400224e	         0xfb60402	             movzx eax, byte [rdx + rax]	       963	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29	IF_30
0x4002252	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	       964	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29	IF_30
0x4002256	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	       964	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29	IF_30
0x400225a	        0x488d7a01	                      lea rdi, [rdx + 1]	       964	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29	IF_30
0x400225e	        0x48897b28	             mov qword [rbx + 0x28], rdi	       964	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29	IF_30
0x4002262	          0x880411	                mov byte [rcx + rdx], al	       964	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29	IF_30
0x4002265	            0x84c0	                             test al, al	       965	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x4002267	            0x7585	                           jne 0x40021ee	       965	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x4002269	        0x488b4338	            mov rax, qword [rbx + 0x38] 	       966	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x400226d	        0x83784400	               cmp dword [rax + 0x44], 0	       966	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x4002271	            0x741c	                            je 0x400228f	       966	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x4002273	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	       966	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x4002277	          0x4839d6	                            cmp rsi, rdx	       966	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x400227a	            0x7313	                           jae 0x400228f	       966	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x400227c	            0x29f2	                            sub edx, esi	       966	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x400227e	        0x48037310	             add rsi, qword [rbx + 0x10]	       966	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x4002282	        0x488b7d60	            mov rdi, qword [rbp + 0x60] 	       966	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x4002286	      0xe800000000	                          call 0x400228b	       966	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x400228b	        0x48894560	            mov qword [rbp + 0x60], rax 	       966	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	IF_29
0x400228f	    0xc74308670000	               mov dword [rbx + 8], 0x67	       968	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	CALL_40
0x4002296	            0xeb09	                           jmp 0x40022a1	       968	deflate.c	FUNCTION_13	IF_27	IF_28	DO_2	CALL_40
0x4002298	          0x83f867	                           cmp eax, 0x67	       970	deflate.c	FUNCTION_13	IF_27	IF_28
0x400229b	     0xf859f000000	                           jne 0x4002340	       970	deflate.c	FUNCTION_13	IF_27	IF_28
0x40022a1	        0x488b4338	            mov rax, qword [rbx + 0x38] 	       971	deflate.c	FUNCTION_13	IF_27	IF_28
0x40022a5	        0x83784400	               cmp dword [rax + 0x44], 0	       971	deflate.c	FUNCTION_13	IF_27	IF_28
0x40022a9	            0x7473	                            je 0x400231e	       971	deflate.c	FUNCTION_13	IF_27	IF_28
0x40022ab	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       972	deflate.c	FUNCTION_13	IF_27
0x40022af	        0x4883c002	                              add rax, 2	       972	deflate.c	FUNCTION_13	IF_27
0x40022b3	        0x483b4318	            cmp rax, qword [rbx + 0x18] 	       972	deflate.c	FUNCTION_13	IF_27
0x40022b7	            0x761b	                           jbe 0x40022d4	       972	deflate.c	FUNCTION_13	IF_27
0x40022b9	          0x4889ef	                            mov rdi, rbp	       973	deflate.c	FUNCTION_13	IF_27
0x40022bc	      0xe80ae3ffff	                  call sym.flush_pending	       973	deflate.c	FUNCTION_13	IF_27
0x40022c1	      0x48837b2800	               cmp qword [rbx + 0x28], 0	       974	deflate.c	FUNCTION_13	IF_31
0x40022c6	            0x740c	                            je 0x40022d4	       974	deflate.c	FUNCTION_13	IF_31
0x40022c8	    0xc7434cffffff	     mov dword [rbx + 0x4c], 0xffffffff 	       975	deflate.c	FUNCTION_13	IF_31	IF_32
0x40022cf	      0xe93e080000	                           jmp 0x4002b12	       976	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33
0x40022d4	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       979	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x40022d8	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       979	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x40022dc	        0x488d4801	                      lea rcx, [rax + 1]	       979	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x40022e0	        0x48894b28	             mov qword [rbx + 0x28], rcx	       979	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x40022e4	        0x488b4d60	            mov rcx, qword [rbp + 0x60] 	       979	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x40022e8	          0x880c02	                mov byte [rdx + rax], cl	       979	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x40022eb	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	       980	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x40022ef	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	       980	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x40022f3	        0x488d4201	                      lea rax, [rdx + 1]	       980	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x40022f7	        0x48894328	             mov qword [rbx + 0x28], rax	       980	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x40022fb	        0x488b4560	            mov rax, qword [rbp + 0x60] 	       980	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x40022ff	        0x48c1e808	                              shr rax, 8	       980	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x4002303	          0x880411	                mov byte [rcx + rdx], al	       980	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x4002306	      0xba00000000	                              mov edx, 0	       981	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x400230b	      0xbe00000000	                              mov esi, 0	       981	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x4002310	      0xbf00000000	                              mov edi, 0	       981	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x4002315	      0xe800000000	                          call 0x400231a	       981	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x400231a	        0x48894560	            mov qword [rbp + 0x60], rax 	       981	deflate.c	FUNCTION_13	IF_31	IF_32	IF_33	IF_34
0x400231e	    0xc74308710000	               mov dword [rbx + 8], 0x71	       983	deflate.c	FUNCTION_13	IF_31	IF_32	CALL_42
0x4002325	          0x4889ef	                            mov rdi, rbp	       986	deflate.c	FUNCTION_13	IF_31	IF_32
0x4002328	      0xe89ee2ffff	                  call sym.flush_pending	       986	deflate.c	FUNCTION_13	IF_31	IF_32
0x400232d	      0x48837b2800	               cmp qword [rbx + 0x28], 0	       987	deflate.c	FUNCTION_13	IF_31
0x4002332	            0x740c	                            je 0x4002340	       987	deflate.c	FUNCTION_13	IF_31
0x4002334	    0xc7434cffffff	     mov dword [rbx + 0x4c], 0xffffffff 	       988	deflate.c	FUNCTION_13	IF_31
0x400233b	      0xe9d2070000	                           jmp 0x4002b12	       989	deflate.c	FUNCTION_13	IF_31
0x4002340	        0x837d0800	                  cmp dword [rbp + 8], 0	       996	deflate.c	FUNCTION_13
0x4002344	            0x751f	                           jne 0x4002365	       996	deflate.c	FUNCTION_13
0x4002346	    0x83bbb4000000	               cmp dword [rbx + 0xb4], 0	       996	deflate.c	FUNCTION_13
0x400234d	            0x7516	                           jne 0x4002365	       996	deflate.c	FUNCTION_13
0x400234f	          0x4585ed	                         test r13d, r13d	       996	deflate.c	FUNCTION_13
0x4002352	     0xf84ba070000	                            je 0x4002b12	       996	deflate.c	FUNCTION_13
0x4002358	    0x817b089a0200	              cmp dword [rbx + 8], 0x29a	       997	deflate.c	FUNCTION_13
0x400235f	     0xf843c060000	                            je 0x40029a1	       997	deflate.c	FUNCTION_13
0x4002365	    0x8b83c4000000	            mov eax, dword [rbx + 0xc4] 	      1000	deflate.c	FUNCTION_13	IF_36
0x400236b	            0x85c0	                           test eax, eax	      1000	deflate.c	FUNCTION_13	IF_36
0x400236d	            0x7510	                           jne 0x400237f	      1000	deflate.c	FUNCTION_13	IF_36
0x400236f	          0x4489ee	                           mov esi, r13d	      1000	deflate.c	FUNCTION_13	IF_36
0x4002372	          0x4889df	                            mov rdi, rbx	      1000	deflate.c	FUNCTION_13	IF_36
0x4002375	      0xe82cecffff	                 call sym.deflate_stored	      1000	deflate.c	FUNCTION_13	IF_36
0x400237a	      0xe93b050000	                           jmp 0x40028ba	      1000	deflate.c	FUNCTION_13	IF_36
0x400237f	    0x8b93c8000000	            mov edx, dword [rbx + 0xc8] 	      1001	deflate.c	FUNCTION_13	IF_36
0x4002385	          0x83fa02	                              cmp edx, 2	      1000	deflate.c	FUNCTION_13	IF_36
0x4002388	     0xf85c2010000	                           jne 0x4002550	      1000	deflate.c	FUNCTION_13	IF_36
0x400238e	    0x83bbb4000000	               cmp dword [rbx + 0xb4], 0	      2138	deflate.c	FUNCTION_24
0x4002395	            0x751f	                           jne 0x40023b6	      2138	deflate.c	FUNCTION_24
0x4002397	          0x4889df	                            mov rdi, rbx	      2139	deflate.c	FUNCTION_24
0x400239a	      0xe81ae0ffff	                    call sym.fill_window	      2139	deflate.c	FUNCTION_24
0x400239f	    0x83bbb4000000	               cmp dword [rbx + 0xb4], 0	      2140	deflate.c	FUNCTION_24	FOR_1
0x40023a6	            0x750e	                           jne 0x40023b6	      2140	deflate.c	FUNCTION_24	FOR_1
0x40023a8	          0x4585ed	                         test r13d, r13d	      2141	deflate.c	FUNCTION_24	FOR_1
0x40023ab	     0xf85d5000000	                           jne 0x4002486	      2141	deflate.c	FUNCTION_24	FOR_1
0x40023b1	      0xe91a050000	                           jmp 0x40028d0	      2141	deflate.c	FUNCTION_24	FOR_1
0x40023b6	    0xc783a0000000	               mov dword [rbx + 0xa0], 0	      2148	deflate.c	FUNCTION_24	FOR_1	IF_1	IF_2
0x40023c0	    0x8b83ac000000	            mov eax, dword [rbx + 0xac] 	      2150	deflate.c	FUNCTION_24	FOR_1
0x40023c6	        0x488b5360	            mov rdx, qword [rbx + 0x60] 	      2150	deflate.c	FUNCTION_24	FOR_1
0x40023ca	         0xfb60402	             movzx eax, byte [rdx + rax]	      2150	deflate.c	FUNCTION_24	FOR_1
0x40023ce	    0x8b8b0c170000	          mov ecx, dword [rbx + 0x170c] 	      2150	deflate.c	FUNCTION_24	FOR_1
0x40023d4	    0x488b93101700	          mov rdx, qword [rbx + 0x1710] 	      2150	deflate.c	FUNCTION_24	FOR_1
0x40023db	    0x66c7044a0000	               mov word [rdx + rcx*2], 0	      2150	deflate.c	FUNCTION_24	FOR_1
0x40023e1	    0x488b8b001700	          mov rcx, qword [rbx + 0x1700] 	      2150	deflate.c	FUNCTION_24	FOR_1
0x40023e8	    0x8b930c170000	          mov edx, dword [rbx + 0x170c] 	      2150	deflate.c	FUNCTION_24	FOR_1
0x40023ee	          0x8d7201	                      lea esi, [rdx + 1]	      2150	deflate.c	FUNCTION_24	FOR_1
0x40023f1	    0x89b30c170000	          mov dword [rbx + 0x170c], esi 	      2150	deflate.c	FUNCTION_24	FOR_1
0x40023f7	            0x89d2	                            mov edx, edx	      2150	deflate.c	FUNCTION_24	FOR_1
0x40023f9	          0x880411	                mov byte [rcx + rdx], al	      2150	deflate.c	FUNCTION_24	FOR_1
0x40023fc	           0xfb6c0	                           movzx eax, al	      2150	deflate.c	FUNCTION_24	FOR_1
0x40023ff	    0x66838483d400	        add word [rbx + rax*4 + 0xd4], 1	      2150	deflate.c	FUNCTION_24	FOR_1
0x4002408	    0x8b8308170000	          mov eax, dword [rbx + 0x1708] 	      2150	deflate.c	FUNCTION_24	FOR_1
0x400240e	          0x8d50ff	                      lea edx, [rax - 1]	      2150	deflate.c	FUNCTION_24	FOR_1
0x4002411	    0x83abb4000000	               sub dword [rbx + 0xb4], 1	      2151	deflate.c	FUNCTION_24	FOR_1
0x4002418	    0x8b83ac000000	            mov eax, dword [rbx + 0xac] 	      2152	deflate.c	FUNCTION_24	FOR_1
0x400241e	          0x83c001	                              add eax, 1	      2152	deflate.c	FUNCTION_24	FOR_1
0x4002421	    0x8983ac000000	             mov dword [rbx + 0xac], eax	      2152	deflate.c	FUNCTION_24	FOR_1
0x4002427	    0x39930c170000	          cmp dword [rbx + 0x170c], edx 	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x400242d	     0xf855bffffff	                           jne 0x400238e	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x4002433	    0x488b8b980000	            mov rcx, qword [rbx + 0x98] 	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x400243a	            0x89c2	                            mov edx, eax	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x400243c	          0x4829ca	                            sub rdx, rcx	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x400243f	      0xbe00000000	                              mov esi, 0	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x4002444	          0x4885c9	                           test rcx, rcx	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x4002447	            0x7809	                            js 0x4002452	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x4002449	            0x89c9	                            mov ecx, ecx	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x400244b	          0x4889ce	                            mov rsi, rcx	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x400244e	        0x48037360	             add rsi, qword [rbx + 0x60]	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x4002452	      0xb900000000	                              mov ecx, 0	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x4002457	          0x4889df	                            mov rdi, rbx	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x400245a	      0xe800000000	                          call 0x400245f	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x400245f	    0x8b83ac000000	            mov eax, dword [rbx + 0xac] 	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x4002465	    0x488983980000	             mov qword [rbx + 0x98], rax	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x400246c	          0x488b3b	                    mov rdi, qword [rbx]	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x400246f	      0xe857e1ffff	                  call sym.flush_pending	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x4002474	          0x488b03	                    mov rax, qword [rbx]	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x4002477	        0x83782000	               cmp dword [rax + 0x20], 0	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x400247b	     0xf850dffffff	                           jne 0x400238e	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x4002481	      0xe94a040000	                           jmp 0x40028d0	      2153	deflate.c	FUNCTION_24	FOR_1	CALL_2
0x4002486	    0xc7832c170000	            mov dword [rbx + 0x172c], 0 	      2155	deflate.c	FUNCTION_24	FOR_1
0x4002490	        0x4183fd04	                             cmp r13d, 4	      2156	deflate.c	FUNCTION_24	FOR_1
0x4002494	            0x7556	                           jne 0x40024ec	      2156	deflate.c	FUNCTION_24	FOR_1
0x4002496	    0x488b83980000	            mov rax, qword [rbx + 0x98] 	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x400249d	    0x8b93ac000000	            mov edx, dword [rbx + 0xac] 	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x40024a3	          0x4829c2	                            sub rdx, rax	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x40024a6	      0xbe00000000	                              mov esi, 0	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x40024ab	          0x4885c0	                           test rax, rax	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x40024ae	            0x7809	                            js 0x40024b9	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x40024b0	            0x89c0	                            mov eax, eax	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x40024b2	        0x48034360	             add rax, qword [rbx + 0x60]	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x40024b6	          0x4889c6	                            mov rsi, rax	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x40024b9	      0xb901000000	                              mov ecx, 1	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x40024be	          0x4889df	                            mov rdi, rbx	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x40024c1	      0xe800000000	                          call 0x40024c6	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x40024c6	    0x8b83ac000000	            mov eax, dword [rbx + 0xac] 	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x40024cc	    0x488983980000	             mov qword [rbx + 0x98], rax	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x40024d3	          0x488b3b	                    mov rdi, qword [rbx]	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x40024d6	      0xe8f0e0ffff	                  call sym.flush_pending	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x40024db	          0x488b03	                    mov rax, qword [rbx]	      2157	deflate.c	FUNCTION_24	FOR_1	IF_4
0x40024de	        0x83782001	               cmp dword [rax + 0x20], 1	      2158	deflate.c	FUNCTION_24	FOR_1
0x40024e2	            0x19c0	                            sbb eax, eax	      2158	deflate.c	FUNCTION_24	FOR_1
0x40024e4	          0x83c003	                              add eax, 3	      2158	deflate.c	FUNCTION_24	FOR_1
0x40024e7	      0xe9d6030000	                           jmp 0x40028c2	      2158	deflate.c	FUNCTION_24	FOR_1
0x40024ec	    0x83bb0c170000	             cmp dword [rbx + 0x170c], 0	      2160	deflate.c	FUNCTION_24	IF_5
0x40024f3	     0xf84f6030000	                            je 0x40028ef	      2160	deflate.c	FUNCTION_24	IF_5
0x40024f9	    0x488b83980000	            mov rax, qword [rbx + 0x98] 	      2161	deflate.c	FUNCTION_24	IF_5
0x4002500	    0x8b93ac000000	            mov edx, dword [rbx + 0xac] 	      2161	deflate.c	FUNCTION_24	IF_5
0x4002506	          0x4829c2	                            sub rdx, rax	      2161	deflate.c	FUNCTION_24	IF_5
0x4002509	      0xbe00000000	                              mov esi, 0	      2161	deflate.c	FUNCTION_24	IF_5
0x400250e	          0x4885c0	                           test rax, rax	      2161	deflate.c	FUNCTION_24	IF_5
0x4002511	            0x7809	                            js 0x400251c	      2161	deflate.c	FUNCTION_24	IF_5
0x4002513	            0x89c0	                            mov eax, eax	      2161	deflate.c	FUNCTION_24	IF_5
0x4002515	        0x48034360	             add rax, qword [rbx + 0x60]	      2161	deflate.c	FUNCTION_24	IF_5
0x4002519	          0x4889c6	                            mov rsi, rax	      2161	deflate.c	FUNCTION_24	IF_5
0x400251c	      0xb900000000	                              mov ecx, 0	      2161	deflate.c	FUNCTION_24	IF_5
0x4002521	          0x4889df	                            mov rdi, rbx	      2161	deflate.c	FUNCTION_24	IF_5
0x4002524	      0xe800000000	                          call 0x4002529	      2161	deflate.c	FUNCTION_24	IF_5
0x4002529	    0x8b83ac000000	            mov eax, dword [rbx + 0xac] 	      2161	deflate.c	FUNCTION_24	IF_5
0x400252f	    0x488983980000	             mov qword [rbx + 0x98], rax	      2161	deflate.c	FUNCTION_24	IF_5
0x4002536	          0x488b3b	                    mov rdi, qword [rbx]	      2161	deflate.c	FUNCTION_24	IF_5
0x4002539	      0xe88de0ffff	                  call sym.flush_pending	      2161	deflate.c	FUNCTION_24	IF_5
0x400253e	          0x488b03	                    mov rax, qword [rbx]	      2161	deflate.c	FUNCTION_24	IF_5
0x4002541	        0x83782000	               cmp dword [rax + 0x20], 0	      1000	deflate.c	FUNCTION_13	IF_36
0x4002545	           0xf95c0	                                setne al	      2161	deflate.c	FUNCTION_24	IF_5
0x4002548	           0xfb6c0	                           movzx eax, al	      2161	deflate.c	FUNCTION_24	IF_5
0x400254b	      0xe96a030000	                           jmp 0x40028ba	      2161	deflate.c	FUNCTION_24	IF_5
0x4002550	          0x83fa03	                              cmp edx, 3	      1000	deflate.c	FUNCTION_13	IF_36
0x4002553	     0xf854f030000	                           jne 0x40028a8	      1000	deflate.c	FUNCTION_13	IF_36
0x4002559	    0x41bc02010000	                         mov r12d, 0x102	      2091	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x400255f	    0x81bbb4000000	          cmp dword [rbx + 0xb4], 0x102 	      2070	deflate.c	FUNCTION_23	FOR_1
0x4002569	            0x7726	                            ja 0x4002591	      2070	deflate.c	FUNCTION_23	FOR_1
0x400256b	          0x4889df	                            mov rdi, rbx	      2071	deflate.c	FUNCTION_23	FOR_1
0x400256e	      0xe846deffff	                    call sym.fill_window	      2071	deflate.c	FUNCTION_23	FOR_1
0x4002573	    0x8b83b4000000	            mov eax, dword [rbx + 0xb4] 	      2072	deflate.c	FUNCTION_23	FOR_1
0x4002579	          0x4585ed	                         test r13d, r13d	      2072	deflate.c	FUNCTION_23	FOR_1
0x400257c	            0x750b	                           jne 0x4002589	      2072	deflate.c	FUNCTION_23	FOR_1
0x400257e	      0x3d02010000	                          cmp eax, 0x102	      2072	deflate.c	FUNCTION_23	FOR_1
0x4002583	     0xf8647030000	                           jbe 0x40028d0	      2072	deflate.c	FUNCTION_23	FOR_1
0x4002589	            0x85c0	                           test eax, eax	      2075	deflate.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x400258b	     0xf8453020000	                            je 0x40027e4	      2075	deflate.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x4002591	    0xc783a0000000	               mov dword [rbx + 0xa0], 0	      2079	deflate.c	FUNCTION_23	FOR_1	IF_1	IF_3
0x400259b	    0x8b93b4000000	            mov edx, dword [rbx + 0xb4] 	      2080	deflate.c	FUNCTION_23	FOR_1	IF_1
0x40025a1	          0x83fa02	                              cmp edx, 2	      2080	deflate.c	FUNCTION_23	FOR_1	IF_1
0x40025a4	     0xf8670010000	                           jbe 0x400271a	      2080	deflate.c	FUNCTION_23	FOR_1	IF_1
0x40025aa	    0x8b83ac000000	            mov eax, dword [rbx + 0xac] 	      2080	deflate.c	FUNCTION_23	FOR_1	IF_1
0x40025b0	            0x85c0	                           test eax, eax	      2080	deflate.c	FUNCTION_23	FOR_1	IF_1
0x40025b2	     0xf8462010000	                            je 0x400271a	      2080	deflate.c	FUNCTION_23	FOR_1	IF_1
0x40025b8	        0x488b7b60	            mov rdi, qword [rbx + 0x60] 	      2081	deflate.c	FUNCTION_23	FOR_1
0x40025bc	            0x89c0	                            mov eax, eax	      2081	deflate.c	FUNCTION_23	FOR_1
0x40025be	      0x488d4c07ff	                lea rcx, [rdi + rax - 1]	      2081	deflate.c	FUNCTION_23	FOR_1
0x40025c3	           0xfb631	                   movzx esi, byte [rcx]	      2082	deflate.c	FUNCTION_23	FOR_1
0x40025c6	      0x440fb64101	               movzx r8d, byte [rcx + 1]	      2083	deflate.c	FUNCTION_23	FOR_1
0x40025cb	          0x4439c6	                            cmp esi, r8d	      2083	deflate.c	FUNCTION_23	FOR_1
0x40025ce	     0xf8546010000	                           jne 0x400271a	      2083	deflate.c	FUNCTION_23	FOR_1
0x40025d4	      0x440fb64102	               movzx r8d, byte [rcx + 2]	      2083	deflate.c	FUNCTION_23	FOR_1
0x40025d9	          0x4439c6	                            cmp esi, r8d	      2083	deflate.c	FUNCTION_23	FOR_1
0x40025dc	     0xf8538010000	                           jne 0x400271a	      2083	deflate.c	FUNCTION_23	FOR_1
0x40025e2	      0x440fb64103	               movzx r8d, byte [rcx + 3]	      2083	deflate.c	FUNCTION_23	FOR_1
0x40025e7	          0x4439c6	                            cmp esi, r8d	      2083	deflate.c	FUNCTION_23	FOR_1
0x40025ea	     0xf852a010000	                           jne 0x400271a	      2083	deflate.c	FUNCTION_23	FOR_1
0x40025f0	        0x4883c103	                              add rcx, 3	      2083	deflate.c	FUNCTION_23	FOR_1
0x40025f4	    0x488dbc070201	           lea rdi, [rdi + rax + 0x102] 	      2084	deflate.c	FUNCTION_23	FOR_1	IF_4
0x40025fc	         0xfb64101	               movzx eax, byte [rcx + 1]	      2090	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5	DO_1
0x4002600	            0x39c6	                            cmp esi, eax	      2090	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5	DO_1
0x4002602	            0x7406	                            je 0x400260a	      2090	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5	DO_1
0x4002604	        0x4883c101	                              add rcx, 1	      2090	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5	DO_1
0x4002608	            0xeb64	                           jmp 0x400266e	      2090	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5	DO_1
0x400260a	         0xfb64102	               movzx eax, byte [rcx + 2]	      2086	deflate.c	FUNCTION_23	FOR_1	IF_4
0x400260e	            0x39c6	                            cmp esi, eax	      2086	deflate.c	FUNCTION_23	FOR_1	IF_4
0x4002610	            0x7406	                            je 0x4002618	      2086	deflate.c	FUNCTION_23	FOR_1	IF_4
0x4002612	        0x4883c102	                              add rcx, 2	      2086	deflate.c	FUNCTION_23	FOR_1	IF_4
0x4002616	            0xeb56	                           jmp 0x400266e	      2086	deflate.c	FUNCTION_23	FOR_1	IF_4
0x4002618	         0xfb64103	               movzx eax, byte [rcx + 3]	      2086	deflate.c	FUNCTION_23	FOR_1	IF_4
0x400261c	            0x39c6	                            cmp esi, eax	      2086	deflate.c	FUNCTION_23	FOR_1	IF_4
0x400261e	            0x7406	                            je 0x4002626	      2086	deflate.c	FUNCTION_23	FOR_1	IF_4
0x4002620	        0x4883c103	                              add rcx, 3	      2086	deflate.c	FUNCTION_23	FOR_1	IF_4
0x4002624	            0xeb48	                           jmp 0x400266e	      2086	deflate.c	FUNCTION_23	FOR_1	IF_4
0x4002626	         0xfb64104	               movzx eax, byte [rcx + 4]	      2087	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x400262a	            0x39c6	                            cmp esi, eax	      2087	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x400262c	            0x7406	                            je 0x4002634	      2087	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x400262e	        0x4883c104	                              add rcx, 4	      2087	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x4002632	            0xeb3a	                           jmp 0x400266e	      2087	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x4002634	         0xfb64105	               movzx eax, byte [rcx + 5]	      2087	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x4002638	            0x39c6	                            cmp esi, eax	      2087	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x400263a	            0x7406	                            je 0x4002642	      2087	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x400263c	        0x4883c105	                              add rcx, 5	      2087	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x4002640	            0xeb2c	                           jmp 0x400266e	      2087	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x4002642	         0xfb64106	               movzx eax, byte [rcx + 6]	      2088	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x4002646	            0x39c6	                            cmp esi, eax	      2088	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x4002648	            0x7406	                            je 0x4002650	      2088	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x400264a	        0x4883c106	                              add rcx, 6	      2088	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x400264e	            0xeb1e	                           jmp 0x400266e	      2088	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x4002650	         0xfb64107	               movzx eax, byte [rcx + 7]	      2088	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x4002654	            0x39c6	                            cmp esi, eax	      2088	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x4002656	            0x7406	                            je 0x400265e	      2088	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x4002658	        0x4883c107	                              add rcx, 7	      2088	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x400265c	            0xeb10	                           jmp 0x400266e	      2088	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x400265e	        0x4883c108	                              add rcx, 8	      2088	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x4002662	           0xfb601	                   movzx eax, byte [rcx]	      2089	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5	DO_1
0x4002665	            0x39f0	                            cmp eax, esi	      2089	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5	DO_1
0x4002667	            0x7505	                           jne 0x400266e	      2089	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5	DO_1
0x4002669	          0x4839cf	                            cmp rdi, rcx	      2089	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5	DO_1
0x400266c	            0x778e	                            ja 0x40025fc	      2089	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5	DO_1
0x400266e	          0x4829cf	                            sub rdi, rcx	      2091	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x4002671	          0x4489e0	                           mov eax, r12d	      2091	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x4002674	            0x29f8	                            sub eax, edi	      2091	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x4002676	    0x8983a0000000	             mov dword [rbx + 0xa0], eax	      2091	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x400267c	            0x39c2	                            cmp edx, eax	      2092	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x400267e	            0x730a	                           jae 0x400268a	      2092	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x4002680	    0x8993a0000000	             mov dword [rbx + 0xa0], edx	      2093	deflate.c	FUNCTION_23	FOR_1	IF_4	IF_5
0x4002686	            0x89d0	                            mov eax, edx	      2099	deflate.c	FUNCTION_23	FOR_1	IF_4	CALL_2
0x4002688	            0xeb09	                           jmp 0x4002693	      2099	deflate.c	FUNCTION_23	FOR_1	IF_4	CALL_2
0x400268a	          0x83f802	                              cmp eax, 2	      2099	deflate.c	FUNCTION_23	FOR_1	IF_4	CALL_2
0x400268d	     0xf8687000000	                           jbe 0x400271a	      2099	deflate.c	FUNCTION_23	FOR_1	IF_4	CALL_2
0x4002693	          0x83e803	                              sub eax, 3	      2102	deflate.c	FUNCTION_23	FOR_1
0x4002696	    0x8b8b0c170000	          mov ecx, dword [rbx + 0x170c] 	      2102	deflate.c	FUNCTION_23	FOR_1
0x400269c	    0x488b93101700	          mov rdx, qword [rbx + 0x1710] 	      2102	deflate.c	FUNCTION_23	FOR_1
0x40026a3	    0x66c7044a0100	               mov word [rdx + rcx*2], 1	      2102	deflate.c	FUNCTION_23	FOR_1
0x40026a9	    0x488b8b001700	          mov rcx, qword [rbx + 0x1700] 	      2102	deflate.c	FUNCTION_23	FOR_1
0x40026b0	    0x8b930c170000	          mov edx, dword [rbx + 0x170c] 	      2102	deflate.c	FUNCTION_23	FOR_1
0x40026b6	          0x8d7201	                      lea esi, [rdx + 1]	      2102	deflate.c	FUNCTION_23	FOR_1
0x40026b9	    0x89b30c170000	          mov dword [rbx + 0x170c], esi 	      2102	deflate.c	FUNCTION_23	FOR_1
0x40026bf	            0x89d2	                            mov edx, edx	      2102	deflate.c	FUNCTION_23	FOR_1
0x40026c1	          0x880411	                mov byte [rcx + rdx], al	      2102	deflate.c	FUNCTION_23	FOR_1
0x40026c4	           0xfb6c0	                           movzx eax, al	      2102	deflate.c	FUNCTION_23	FOR_1
0x40026c7	     0xfb680000000	                   movzx eax, byte [rax]	      2102	deflate.c	FUNCTION_23	FOR_1
0x40026ce	    0x66838483d804	       add word [rbx + rax*4 + 0x4d8], 1	      2102	deflate.c	FUNCTION_23	FOR_1
0x40026d7	     0xfb605000000	           movzx eax, byte [0x040026de] 	      2102	deflate.c	FUNCTION_23	FOR_1
0x40026de	    0x66838483c809	       add word [rbx + rax*4 + 0x9c8], 1	      2102	deflate.c	FUNCTION_23	FOR_1
0x40026e7	    0x8b8308170000	          mov eax, dword [rbx + 0x1708] 	      2102	deflate.c	FUNCTION_23	FOR_1
0x40026ed	          0x83e801	                              sub eax, 1	      2102	deflate.c	FUNCTION_23	FOR_1
0x40026f0	    0x3b830c170000	          cmp eax, dword [rbx + 0x170c] 	      2102	deflate.c	FUNCTION_23	FOR_1
0x40026f6	           0xf94c0	                                 sete al	      2102	deflate.c	FUNCTION_23	FOR_1
0x40026f9	           0xfb6c0	                           movzx eax, al	      2102	deflate.c	FUNCTION_23	FOR_1
0x40026fc	    0x8b93a0000000	            mov edx, dword [rbx + 0xa0] 	      2104	deflate.c	FUNCTION_23	FOR_1	IF_7
0x4002702	    0x2993b4000000	             sub dword [rbx + 0xb4], edx	      2104	deflate.c	FUNCTION_23	FOR_1	IF_7
0x4002708	     0x193ac000000	             add dword [rbx + 0xac], edx	      2105	deflate.c	FUNCTION_23	FOR_1	IF_7
0x400270e	    0xc783a0000000	               mov dword [rbx + 0xa0], 0	      2106	deflate.c	FUNCTION_23	FOR_1	IF_7	CALL_3
0x4002718	            0xeb6b	                           jmp 0x4002785	      2106	deflate.c	FUNCTION_23	FOR_1	IF_7	CALL_3
0x400271a	    0x8b83ac000000	            mov eax, dword [rbx + 0xac] 	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x4002720	        0x488b5360	            mov rdx, qword [rbx + 0x60] 	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x4002724	         0xfb60402	             movzx eax, byte [rdx + rax]	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x4002728	    0x8b8b0c170000	          mov ecx, dword [rbx + 0x170c] 	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x400272e	    0x488b93101700	          mov rdx, qword [rbx + 0x1710] 	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x4002735	    0x66c7044a0000	               mov word [rdx + rcx*2], 0	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x400273b	    0x488b8b001700	          mov rcx, qword [rbx + 0x1700] 	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x4002742	    0x8b930c170000	          mov edx, dword [rbx + 0x170c] 	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x4002748	          0x8d7201	                      lea esi, [rdx + 1]	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x400274b	    0x89b30c170000	          mov dword [rbx + 0x170c], esi 	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x4002751	            0x89d2	                            mov edx, edx	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x4002753	          0x880411	                mov byte [rcx + rdx], al	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x4002756	           0xfb6c0	                           movzx eax, al	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x4002759	    0x66838483d400	        add word [rbx + rax*4 + 0xd4], 1	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x4002762	    0x8b8308170000	          mov eax, dword [rbx + 0x1708] 	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x4002768	          0x83e801	                              sub eax, 1	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x400276b	    0x3b830c170000	          cmp eax, dword [rbx + 0x170c] 	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x4002771	           0xf94c0	                                 sete al	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x4002774	           0xfb6c0	                           movzx eax, al	      2110	deflate.c	FUNCTION_23	FOR_1	IF_7
0x4002777	    0x83abb4000000	               sub dword [rbx + 0xb4], 1	      2111	deflate.c	FUNCTION_23	FOR_1	ELSE_1
0x400277e	    0x8383ac000000	               add dword [rbx + 0xac], 1	      2112	deflate.c	FUNCTION_23	FOR_1	ELSE_1
0x4002785	            0x85c0	                           test eax, eax	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x4002787	     0xf84d2fdffff	                            je 0x400255f	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x400278d	    0x488b83980000	            mov rax, qword [rbx + 0x98] 	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x4002794	    0x8b93ac000000	            mov edx, dword [rbx + 0xac] 	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x400279a	          0x4829c2	                            sub rdx, rax	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x400279d	      0xbe00000000	                              mov esi, 0	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x40027a2	          0x4885c0	                           test rax, rax	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x40027a5	            0x7809	                            js 0x40027b0	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x40027a7	            0x89c0	                            mov eax, eax	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x40027a9	        0x48034360	             add rax, qword [rbx + 0x60]	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x40027ad	          0x4889c6	                            mov rsi, rax	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x40027b0	      0xb900000000	                              mov ecx, 0	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x40027b5	          0x4889df	                            mov rdi, rbx	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x40027b8	      0xe800000000	                          call 0x40027bd	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x40027bd	    0x8b83ac000000	            mov eax, dword [rbx + 0xac] 	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x40027c3	    0x488983980000	             mov qword [rbx + 0x98], rax	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x40027ca	          0x488b3b	                    mov rdi, qword [rbx]	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x40027cd	      0xe8f9ddffff	                  call sym.flush_pending	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x40027d2	          0x488b03	                    mov rax, qword [rbx]	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x40027d5	        0x83782000	               cmp dword [rax + 0x20], 0	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x40027d9	     0xf8580fdffff	                           jne 0x400255f	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x40027df	      0xe9ec000000	                           jmp 0x40028d0	      2114	deflate.c	FUNCTION_23	FOR_1	ELSE_1	CALL_5
0x40027e4	    0xc7832c170000	            mov dword [rbx + 0x172c], 0 	      2116	deflate.c	FUNCTION_23	FOR_1	ELSE_1
0x40027ee	        0x4183fd04	                             cmp r13d, 4	      2117	deflate.c	FUNCTION_23	FOR_1	ELSE_1
0x40027f2	            0x7553	                           jne 0x4002847	      2117	deflate.c	FUNCTION_23	FOR_1	ELSE_1
0x40027f4	    0x488b83980000	            mov rax, qword [rbx + 0x98] 	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x40027fb	    0x8b93ac000000	            mov edx, dword [rbx + 0xac] 	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x4002801	          0x4829c2	                            sub rdx, rax	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x4002804	      0xbe00000000	                              mov esi, 0	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x4002809	          0x4885c0	                           test rax, rax	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x400280c	            0x7809	                            js 0x4002817	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x400280e	            0x89c0	                            mov eax, eax	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x4002810	        0x48034360	             add rax, qword [rbx + 0x60]	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x4002814	          0x4889c6	                            mov rsi, rax	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x4002817	      0xb901000000	                              mov ecx, 1	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x400281c	          0x4889df	                            mov rdi, rbx	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x400281f	      0xe800000000	                          call 0x4002824	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x4002824	    0x8b83ac000000	            mov eax, dword [rbx + 0xac] 	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x400282a	    0x488983980000	             mov qword [rbx + 0x98], rax	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x4002831	          0x488b3b	                    mov rdi, qword [rbx]	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x4002834	      0xe892ddffff	                  call sym.flush_pending	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x4002839	          0x488b03	                    mov rax, qword [rbx]	      2118	deflate.c	FUNCTION_23	FOR_1	IF_8
0x400283c	        0x83782001	               cmp dword [rax + 0x20], 1	      2119	deflate.c	FUNCTION_23	FOR_1
0x4002840	            0x19c0	                            sbb eax, eax	      2119	deflate.c	FUNCTION_23	FOR_1
0x4002842	          0x83c003	                              add eax, 3	      2119	deflate.c	FUNCTION_23	FOR_1
0x4002845	            0xeb7b	                           jmp 0x40028c2	      2119	deflate.c	FUNCTION_23	FOR_1
0x4002847	    0x83bb0c170000	             cmp dword [rbx + 0x170c], 0	      2121	deflate.c	FUNCTION_23	IF_9
0x400284e	     0xf849b000000	                            je 0x40028ef	      2121	deflate.c	FUNCTION_23	IF_9
0x4002854	    0x488b83980000	            mov rax, qword [rbx + 0x98] 	      2122	deflate.c	FUNCTION_23	IF_9
0x400285b	    0x8b93ac000000	            mov edx, dword [rbx + 0xac] 	      2122	deflate.c	FUNCTION_23	IF_9
0x4002861	          0x4829c2	                            sub rdx, rax	      2122	deflate.c	FUNCTION_23	IF_9
0x4002864	      0xbe00000000	                              mov esi, 0	      2122	deflate.c	FUNCTION_23	IF_9
0x4002869	          0x4885c0	                           test rax, rax	      2122	deflate.c	FUNCTION_23	IF_9
0x400286c	            0x7809	                            js 0x4002877	      2122	deflate.c	FUNCTION_23	IF_9
0x400286e	            0x89c0	                            mov eax, eax	      2122	deflate.c	FUNCTION_23	IF_9
0x4002870	        0x48034360	             add rax, qword [rbx + 0x60]	      2122	deflate.c	FUNCTION_23	IF_9
0x4002874	          0x4889c6	                            mov rsi, rax	      2122	deflate.c	FUNCTION_23	IF_9
0x4002877	      0xb900000000	                              mov ecx, 0	      2122	deflate.c	FUNCTION_23	IF_9
0x400287c	          0x4889df	                            mov rdi, rbx	      2122	deflate.c	FUNCTION_23	IF_9
0x400287f	      0xe800000000	                          call 0x4002884	      2122	deflate.c	FUNCTION_23	IF_9
0x4002884	    0x8b83ac000000	            mov eax, dword [rbx + 0xac] 	      2122	deflate.c	FUNCTION_23	IF_9
0x400288a	    0x488983980000	             mov qword [rbx + 0x98], rax	      2122	deflate.c	FUNCTION_23	IF_9
0x4002891	          0x488b3b	                    mov rdi, qword [rbx]	      2122	deflate.c	FUNCTION_23	IF_9
0x4002894	      0xe832ddffff	                  call sym.flush_pending	      2122	deflate.c	FUNCTION_23	IF_9
0x4002899	          0x488b03	                    mov rax, qword [rbx]	      2122	deflate.c	FUNCTION_23	IF_9
0x400289c	        0x83782000	               cmp dword [rax + 0x20], 0	      1000	deflate.c	FUNCTION_13	IF_36
0x40028a0	           0xf95c0	                                setne al	      2122	deflate.c	FUNCTION_23	IF_9
0x40028a3	           0xfb6c0	                           movzx eax, al	      2122	deflate.c	FUNCTION_23	IF_9
0x40028a6	            0xeb12	                           jmp 0x40028ba	      2122	deflate.c	FUNCTION_23	IF_9
0x40028a8	            0x4898	                                    cdqe	      1003	deflate.c	FUNCTION_13	IF_36
0x40028aa	        0x48c1e004	                              shl rax, 4	      1003	deflate.c	FUNCTION_13	IF_36
0x40028ae	          0x4489ee	                           mov esi, r13d	      1000	deflate.c	FUNCTION_13	IF_36
0x40028b1	          0x4889df	                            mov rdi, rbx	      1000	deflate.c	FUNCTION_13	IF_36
0x40028b4	    0xff9000000000	                        call qword [rax]	      1000	deflate.c	FUNCTION_13	IF_36
0x40028ba	          0x8d50fe	                      lea edx, [rax - 2]	      1005	deflate.c	FUNCTION_13	IF_36	CALL_47
0x40028bd	          0x83fa01	                              cmp edx, 1	      1005	deflate.c	FUNCTION_13	IF_36	CALL_47
0x40028c0	            0x7707	                            ja 0x40028c9	      1005	deflate.c	FUNCTION_13	IF_36	CALL_47
0x40028c2	    0xc743089a0200	              mov dword [rbx + 8], 0x29a	      1006	deflate.c	FUNCTION_13	IF_36	CALL_48
0x40028c9	      0xa9fdffffff	                    test eax, 0xfffffffd	      1008	deflate.c	FUNCTION_13	IF_36
0x40028ce	            0x7516	                           jne 0x40028e6	      1008	deflate.c	FUNCTION_13	IF_36
0x40028d0	        0x837d2000	               cmp dword [rbp + 0x20], 0	      1009	deflate.c	FUNCTION_13	IF_36	IF_37
0x40028d4	     0xf8538020000	                           jne 0x4002b12	      1009	deflate.c	FUNCTION_13	IF_36	IF_37
0x40028da	    0xc7434cffffff	     mov dword [rbx + 0x4c], 0xffffffff 	      1010	deflate.c	FUNCTION_13	IF_36	IF_37
0x40028e1	      0xe92c020000	                           jmp 0x4002b12	      1010	deflate.c	FUNCTION_13	IF_36	IF_37
0x40028e6	          0x83f801	                              cmp eax, 1	      1021	deflate.c	FUNCTION_13	IF_36	IF_38
0x40028e9	     0xf85b2000000	                           jne 0x40029a1	      1021	deflate.c	FUNCTION_13	IF_36	IF_38
0x40028ef	        0x4183fd01	                             cmp r13d, 1	      1022	deflate.c	FUNCTION_13	IF_36	IF_38
0x40028f3	            0x750d	                           jne 0x4002902	      1022	deflate.c	FUNCTION_13	IF_36	IF_38
0x40028f5	          0x4889df	                            mov rdi, rbx	      1023	deflate.c	FUNCTION_13	IF_36	IF_38
0x40028f8	      0xe800000000	                          call 0x40028fd	      1023	deflate.c	FUNCTION_13	IF_36	IF_38
0x40028fd	      0xe9fe010000	                           jmp 0x4002b00	      1023	deflate.c	FUNCTION_13	IF_36	IF_38
0x4002902	        0x4183fd05	                             cmp r13d, 5	      1024	deflate.c	FUNCTION_13	IF_36	IF_38
0x4002906	     0xf84f4010000	                            je 0x4002b00	      1024	deflate.c	FUNCTION_13	IF_36	IF_38
0x400290c	      0xb900000000	                              mov ecx, 0	      1025	deflate.c	FUNCTION_13	IF_36	IF_40
0x4002911	      0xba00000000	                              mov edx, 0	      1025	deflate.c	FUNCTION_13	IF_36	IF_40
0x4002916	      0xbe00000000	                              mov esi, 0	      1025	deflate.c	FUNCTION_13	IF_36	IF_40
0x400291b	          0x4889df	                            mov rdi, rbx	      1025	deflate.c	FUNCTION_13	IF_36	IF_40
0x400291e	      0xe800000000	                          call 0x4002923	      1025	deflate.c	FUNCTION_13	IF_36	IF_40
0x4002923	        0x4183fd03	                             cmp r13d, 3	      1029	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42	CALL_50
0x4002927	            0x755e	                           jne 0x4002987	      1029	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42	CALL_50
0x4002929	    0x8b8384000000	            mov eax, dword [rbx + 0x84] 	      1030	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42
0x400292f	          0x8d50ff	                      lea edx, [rax - 1]	      1030	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42
0x4002932	        0x488b4378	            mov rax, qword [rbx + 0x78] 	      1030	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42
0x4002936	    0x66c704500000	               mov word [rax + rdx*2], 0	      1030	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42
0x400293c	    0x8b8384000000	            mov eax, dword [rbx + 0x84] 	        90	string3.h	FUNCTION_28	CALL_6
0x4002942	          0x8d50ff	                      lea edx, [rax - 1]	        90	string3.h	FUNCTION_28	CALL_6
0x4002945	          0x4801d2	                            add rdx, rdx	        90	string3.h	FUNCTION_28	CALL_6
0x4002948	        0x488b7b78	            mov rdi, qword [rbx + 0x78] 	        90	string3.h	FUNCTION_28	CALL_6
0x400294c	      0xbe00000000	                              mov esi, 0	        90	string3.h	FUNCTION_28	CALL_6
0x4002951	      0xe800000000	                          call 0x4002956	        90	string3.h	FUNCTION_28	CALL_6
0x4002956	    0x83bbb4000000	               cmp dword [rbx + 0xb4], 0	      1031	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42
0x400295d	     0xf859d010000	                           jne 0x4002b00	      1031	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42
0x4002963	    0xc783ac000000	               mov dword [rbx + 0xac], 0	      1032	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42
0x400296d	    0x48c783980000	               mov qword [rbx + 0x98], 0	      1033	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42	IF_43
0x4002978	    0xc7832c170000	            mov dword [rbx + 0x172c], 0 	      1034	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42	IF_43
0x4002982	      0xe979010000	                           jmp 0x4002b00	      1034	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42	IF_43
0x4002987	          0x4889ef	                            mov rdi, rbp	      1038	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42	IF_43	IF_44
0x400298a	      0xe83cdcffff	                  call sym.flush_pending	      1038	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42	IF_43	IF_44
0x400298f	        0x837d2000	               cmp dword [rbp + 0x20], 0	      1039	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42	IF_43	IF_44
0x4002993	            0x750c	                           jne 0x40029a1	      1039	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42	IF_43	IF_44
0x4002995	    0xc7434cffffff	     mov dword [rbx + 0x4c], 0xffffffff 	      1040	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42	IF_43
0x400299c	      0xe971010000	                           jmp 0x4002b12	      1041	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42
0x40029a1	        0x4183fd04	                             cmp r13d, 4	      1046	deflate.c	FUNCTION_13	IF_36	IF_40	IF_45
0x40029a5	     0xf8567010000	                           jne 0x4002b12	      1046	deflate.c	FUNCTION_13	IF_36	IF_40	IF_45
0x40029ab	          0x8b4330	            mov eax, dword [rbx + 0x30] 	      1047	deflate.c	FUNCTION_13	IF_36	IF_40
0x40029ae	            0x85c0	                           test eax, eax	      1047	deflate.c	FUNCTION_13	IF_36	IF_40
0x40029b0	     0xf8e30010000	                           jle 0x4002ae6	      1047	deflate.c	FUNCTION_13	IF_36	IF_40
0x40029b6	          0x83f802	                              cmp eax, 2	      1051	deflate.c	FUNCTION_13	IF_47
0x40029b9	     0xf85d2000000	                           jne 0x4002a91	      1051	deflate.c	FUNCTION_13	IF_47
0x40029bf	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	      1052	deflate.c	FUNCTION_13
0x40029c3	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      1052	deflate.c	FUNCTION_13
0x40029c7	        0x488d4801	                      lea rcx, [rax + 1]	      1052	deflate.c	FUNCTION_13
0x40029cb	        0x48894b28	             mov qword [rbx + 0x28], rcx	      1052	deflate.c	FUNCTION_13
0x40029cf	        0x488b4d60	            mov rcx, qword [rbp + 0x60] 	      1052	deflate.c	FUNCTION_13
0x40029d3	          0x880c02	                mov byte [rdx + rax], cl	      1052	deflate.c	FUNCTION_13
0x40029d6	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	      1053	deflate.c	FUNCTION_13
0x40029da	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	      1053	deflate.c	FUNCTION_13
0x40029de	        0x488d4201	                      lea rax, [rdx + 1]	      1053	deflate.c	FUNCTION_13
0x40029e2	        0x48894328	             mov qword [rbx + 0x28], rax	      1053	deflate.c	FUNCTION_13
0x40029e6	        0x488b4560	            mov rax, qword [rbp + 0x60] 	      1053	deflate.c	FUNCTION_13
0x40029ea	        0x48c1e808	                              shr rax, 8	      1053	deflate.c	FUNCTION_13
0x40029ee	          0x880411	                mov byte [rcx + rdx], al	      1053	deflate.c	FUNCTION_13
0x40029f1	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	      1054	deflate.c	FUNCTION_13
0x40029f5	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	      1054	deflate.c	FUNCTION_13
0x40029f9	        0x488d4201	                      lea rax, [rdx + 1]	      1054	deflate.c	FUNCTION_13
0x40029fd	        0x48894328	             mov qword [rbx + 0x28], rax	      1054	deflate.c	FUNCTION_13
0x4002a01	        0x488b4560	            mov rax, qword [rbp + 0x60] 	      1054	deflate.c	FUNCTION_13
0x4002a05	        0x48c1e810	                           shr rax, 0x10	      1054	deflate.c	FUNCTION_13
0x4002a09	          0x880411	                mov byte [rcx + rdx], al	      1054	deflate.c	FUNCTION_13
0x4002a0c	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	      1055	deflate.c	FUNCTION_13	IF_48
0x4002a10	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	      1055	deflate.c	FUNCTION_13	IF_48
0x4002a14	        0x488d4201	                      lea rax, [rdx + 1]	      1055	deflate.c	FUNCTION_13	IF_48
0x4002a18	        0x48894328	             mov qword [rbx + 0x28], rax	      1055	deflate.c	FUNCTION_13	IF_48
0x4002a1c	        0x488b4560	            mov rax, qword [rbp + 0x60] 	      1055	deflate.c	FUNCTION_13	IF_48
0x4002a20	        0x48c1e818	                           shr rax, 0x18	      1055	deflate.c	FUNCTION_13	IF_48
0x4002a24	          0x880411	                mov byte [rcx + rdx], al	      1055	deflate.c	FUNCTION_13	IF_48
0x4002a27	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	      1056	deflate.c	FUNCTION_13	IF_48	CALL_52
0x4002a2b	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      1056	deflate.c	FUNCTION_13	IF_48	CALL_52
0x4002a2f	        0x488d4801	                      lea rcx, [rax + 1]	      1056	deflate.c	FUNCTION_13	IF_48	CALL_52
0x4002a33	        0x48894b28	             mov qword [rbx + 0x28], rcx	      1056	deflate.c	FUNCTION_13	IF_48	CALL_52
0x4002a37	        0x488b4d10	            mov rcx, qword [rbp + 0x10] 	      1056	deflate.c	FUNCTION_13	IF_48	CALL_52
0x4002a3b	          0x880c02	                mov byte [rdx + rax], cl	      1056	deflate.c	FUNCTION_13	IF_48	CALL_52
0x4002a3e	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	      1057	deflate.c	FUNCTION_13	IF_48	CALL_53
0x4002a42	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	      1057	deflate.c	FUNCTION_13	IF_48	CALL_53
0x4002a46	        0x488d4201	                      lea rax, [rdx + 1]	      1057	deflate.c	FUNCTION_13	IF_48	CALL_53
0x4002a4a	        0x48894328	             mov qword [rbx + 0x28], rax	      1057	deflate.c	FUNCTION_13	IF_48	CALL_53
0x4002a4e	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      1057	deflate.c	FUNCTION_13	IF_48	CALL_53
0x4002a52	        0x48c1e808	                              shr rax, 8	      1057	deflate.c	FUNCTION_13	IF_48	CALL_53
0x4002a56	          0x880411	                mov byte [rcx + rdx], al	      1057	deflate.c	FUNCTION_13	IF_48	CALL_53
0x4002a59	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	      1058	deflate.c	FUNCTION_13	IF_48	CALL_54
0x4002a5d	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	      1058	deflate.c	FUNCTION_13	IF_48	CALL_54
0x4002a61	        0x488d4201	                      lea rax, [rdx + 1]	      1058	deflate.c	FUNCTION_13	IF_48	CALL_54
0x4002a65	        0x48894328	             mov qword [rbx + 0x28], rax	      1058	deflate.c	FUNCTION_13	IF_48	CALL_54
0x4002a69	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      1058	deflate.c	FUNCTION_13	IF_48	CALL_54
0x4002a6d	        0x48c1e810	                           shr rax, 0x10	      1058	deflate.c	FUNCTION_13	IF_48	CALL_54
0x4002a71	          0x880411	                mov byte [rcx + rdx], al	      1058	deflate.c	FUNCTION_13	IF_48	CALL_54
0x4002a74	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	      1059	deflate.c	FUNCTION_13	IF_48	CALL_55
0x4002a78	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	      1059	deflate.c	FUNCTION_13	IF_48	CALL_55
0x4002a7c	        0x488d4201	                      lea rax, [rdx + 1]	      1059	deflate.c	FUNCTION_13	IF_48	CALL_55
0x4002a80	        0x48894328	             mov qword [rbx + 0x28], rax	      1059	deflate.c	FUNCTION_13	IF_48	CALL_55
0x4002a84	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      1059	deflate.c	FUNCTION_13	IF_48	CALL_55
0x4002a88	        0x48c1e818	                           shr rax, 0x18	      1059	deflate.c	FUNCTION_13	IF_48	CALL_55
0x4002a8c	          0x880411	                mov byte [rcx + rdx], al	      1059	deflate.c	FUNCTION_13	IF_48	CALL_55
0x4002a8f	            0xeb1c	                           jmp 0x4002aad	      1059	deflate.c	FUNCTION_13	IF_48	CALL_55
0x4002a91	        0x488b7560	            mov rsi, qword [rbp + 0x60] 	      1064	deflate.c	FUNCTION_13	IF_48
0x4002a95	        0x48c1ee10	                           shr rsi, 0x10	      1064	deflate.c	FUNCTION_13	IF_48
0x4002a99	          0x4889df	                            mov rdi, rbx	      1064	deflate.c	FUNCTION_13	IF_48
0x4002a9c	      0xe892d6ffff	                    call sym.putShortMSB	      1064	deflate.c	FUNCTION_13	IF_48
0x4002aa1	         0xfb77560	           movzx esi, word [rbp + 0x60] 	      1065	deflate.c	FUNCTION_13	ELSE_7
0x4002aa5	          0x4889df	                            mov rdi, rbx	      1065	deflate.c	FUNCTION_13	ELSE_7
0x4002aa8	      0xe886d6ffff	                    call sym.putShortMSB	      1065	deflate.c	FUNCTION_13	ELSE_7
0x4002aad	          0x4889ef	                            mov rdi, rbp	      1067	deflate.c	FUNCTION_13	ELSE_7
0x4002ab0	      0xe816dbffff	                  call sym.flush_pending	      1067	deflate.c	FUNCTION_13	ELSE_7
0x4002ab5	          0x8b4330	            mov eax, dword [rbx + 0x30] 	      1071	deflate.c	FUNCTION_13	CALL_62
0x4002ab8	            0x85c0	                           test eax, eax	      1071	deflate.c	FUNCTION_13	CALL_62
0x4002aba	            0x7e05	                           jle 0x4002ac1	      1071	deflate.c	FUNCTION_13	CALL_62
0x4002abc	            0xf7d8	                                 neg eax	      1071	deflate.c	FUNCTION_13	CALL_62
0x4002abe	          0x894330	             mov dword [rbx + 0x30], eax	      1071	deflate.c	FUNCTION_13	CALL_62
0x4002ac1	      0x48837b2800	               cmp qword [rbx + 0x28], 0	      1072	deflate.c	FUNCTION_13
0x4002ac6	           0xf94c0	                                 sete al	      1072	deflate.c	FUNCTION_13
0x4002ac9	           0xfb6c0	                           movzx eax, al	      1072	deflate.c	FUNCTION_13
0x4002acc	        0x8944240c	              mov dword [rsp + 0xc], eax	      1072	deflate.c	FUNCTION_13
0x4002ad0	            0xeb40	                           jmp 0x4002b12	      1072	deflate.c	FUNCTION_13
0x4002ad2	    0xc744240cfeff	      mov dword [rsp + 0xc], 0xfffffffe 	       771	deflate.c	FUNCTION_13
0x4002ada	            0xeb36	                           jmp 0x4002b12	       771	deflate.c	FUNCTION_13
0x4002adc	    0xc744240cfeff	      mov dword [rsp + 0xc], 0xfffffffe 	       771	deflate.c	FUNCTION_13
0x4002ae4	            0xeb2c	                           jmp 0x4002b12	       771	deflate.c	FUNCTION_13
0x4002ae6	    0xc744240c0100	                mov dword [rsp + 0xc], 1	      1047	deflate.c	FUNCTION_13	IF_36	IF_40
0x4002aee	            0xeb22	                           jmp 0x4002b12	      1047	deflate.c	FUNCTION_13	IF_36	IF_40
0x4002af0	      0x3d9a020000	                          cmp eax, 0x29a	       809	deflate.c	FUNCTION_13	ELSE_1	IF_6	CALL_5
0x4002af5	     0xf852ff1ffff	                           jne 0x4001c2a	       809	deflate.c	FUNCTION_13	ELSE_1	IF_6	CALL_5
0x4002afb	      0xe912f1ffff	                           jmp 0x4001c12	       809	deflate.c	FUNCTION_13	ELSE_1	IF_6	CALL_5
0x4002b00	          0x4889ef	                            mov rdi, rbp	      1038	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42	IF_43	IF_44
0x4002b03	      0xe8c3daffff	                  call sym.flush_pending	      1038	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42	IF_43	IF_44
0x4002b08	        0x837d2000	               cmp dword [rbp + 0x20], 0	      1039	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42	IF_43	IF_44
0x4002b0c	     0xf8483feffff	                            je 0x4002995	      1039	deflate.c	FUNCTION_13	IF_36	IF_40	ELSE_6	IF_42	IF_43	IF_44
0x4002b12	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      1073	deflate.c	FUNCTION_13
0x4002b16	        0x4883c418	                           add rsp, 0x18	      1073	deflate.c	FUNCTION_13
0x4002b1a	              0x5b	                                 pop rbx	      1073	deflate.c	FUNCTION_13
0x4002b1b	              0x5d	                                 pop rbp	      1073	deflate.c	FUNCTION_13
0x4002b1c	            0x415c	                                 pop r12	      1073	deflate.c	FUNCTION_13
0x4002b1e	            0x415d	                                 pop r13	      1073	deflate.c	FUNCTION_13
0x4002b20	            0x415e	                                 pop r14	      1073	deflate.c	FUNCTION_13
0x4002b22	            0x415f	                                 pop r15	      1073	deflate.c	FUNCTION_13
0x4002b24	              0xc3	                                     ret	      1073	deflate.c	FUNCTION_13
deflateGetDictionary	CALL,2:ELSE,0:IF,4:FOR,0:DO,0:functions,0:WHILE,0:SWITCH,0	43
0x4001641	            0x4155	                                push r13	       449	deflate.c	
0x4001643	            0x4154	                                push r12	       449	deflate.c	
0x4001645	              0x55	                                push rbp	       449	deflate.c	
0x4001646	              0x53	                                push rbx	       449	deflate.c	
0x4001647	        0x4883ec08	                              sub rsp, 8	       449	deflate.c	
0x400164b	          0x4889fb	                            mov rbx, rdi	       449	deflate.c	
0x400164e	          0x4989f5	                            mov r13, rsi	       449	deflate.c	
0x4001651	          0x4989d4	                            mov r12, rdx	       449	deflate.c	
0x4001654	      0xe860eaffff	              call sym.deflateStateCheck	       453	deflate.c	FUNCTION_3
0x4001659	            0x85c0	                           test eax, eax	       453	deflate.c	FUNCTION_3
0x400165b	            0x7549	                           jne 0x40016a6	       453	deflate.c	FUNCTION_3
0x400165d	            0x89c5	                            mov ebp, eax	       453	deflate.c	FUNCTION_3
0x400165f	        0x488b4b38	            mov rcx, qword [rbx + 0x38] 	       455	deflate.c	FUNCTION_3
0x4001663	    0x8bb1ac000000	            mov esi, dword [rcx + 0xac] 	       456	deflate.c	FUNCTION_3
0x4001669	    0x8b81b4000000	            mov eax, dword [rcx + 0xb4] 	       456	deflate.c	FUNCTION_3
0x400166f	          0x8d1c06	                    lea ebx, [rsi + rax]	       456	deflate.c	FUNCTION_3
0x4001672	          0x8b5150	            mov edx, dword [rcx + 0x50] 	       457	deflate.c	FUNCTION_3	IF_1	CALL_1
0x4001675	            0x39d3	                            cmp ebx, edx	       457	deflate.c	FUNCTION_3	IF_1	CALL_1
0x4001677	           0xf47da	                          cmova ebx, edx	       457	deflate.c	FUNCTION_3	IF_1	CALL_1
0x400167a	          0x4d85ed	                           test r13, r13	       459	deflate.c	FUNCTION_3
0x400167d	            0x741c	                            je 0x400169b	       459	deflate.c	FUNCTION_3
0x400167f	            0x85db	                           test ebx, ebx	       459	deflate.c	FUNCTION_3
0x4001681	            0x7418	                            je 0x400169b	       459	deflate.c	FUNCTION_3
0x4001683	            0x89da	                            mov edx, ebx	       460	deflate.c	FUNCTION_3
0x4001685	            0x89f6	                            mov esi, esi	        53	string3.h	FUNCTION_25	CALL_3
0x4001687	            0x89c0	                            mov eax, eax	        53	string3.h	FUNCTION_25	CALL_3
0x4001689	          0x4801c6	                            add rsi, rax	        53	string3.h	FUNCTION_25	CALL_3
0x400168c	          0x4829d6	                            sub rsi, rdx	        53	string3.h	FUNCTION_25	CALL_3
0x400168f	        0x48037160	             add rsi, qword [rcx + 0x60]	        53	string3.h	FUNCTION_25	CALL_3
0x4001693	          0x4c89ef	                            mov rdi, r13	        53	string3.h	FUNCTION_25	CALL_3
0x4001696	      0xe800000000	                          call 0x400169b	        53	string3.h	FUNCTION_25	CALL_3
0x400169b	          0x4d85e4	                           test r12, r12	       461	deflate.c	FUNCTION_3	IF_2
0x400169e	            0x740b	                            je 0x40016ab	       461	deflate.c	FUNCTION_3	IF_2
0x40016a0	        0x41891c24	                    mov dword [r12], ebx	       462	deflate.c	FUNCTION_3	IF_2
0x40016a4	            0xeb05	                           jmp 0x40016ab	       462	deflate.c	FUNCTION_3	IF_2
0x40016a6	      0xbdfeffffff	                     mov ebp, 0xfffffffe	       454	deflate.c	FUNCTION_3
0x40016ab	            0x89e8	                            mov eax, ebp	       464	deflate.c	FUNCTION_3	CALL_2
0x40016ad	        0x4883c408	                              add rsp, 8	       464	deflate.c	FUNCTION_3	CALL_2
0x40016b1	              0x5b	                                 pop rbx	       464	deflate.c	FUNCTION_3	CALL_2
0x40016b2	              0x5d	                                 pop rbp	       464	deflate.c	FUNCTION_3	CALL_2
0x40016b3	            0x415c	                                 pop r12	       464	deflate.c	FUNCTION_3	CALL_2
0x40016b5	            0x415d	                                 pop r13	       464	deflate.c	FUNCTION_3	CALL_2
0x40016b7	              0xc3	                                     ret	       464	deflate.c	FUNCTION_3	CALL_2
deflate_stored	CALL,11:ELSE,1:IF,20:FOR,0:DO,1:functions,0:WHILE,0:SWITCH,0	314
0x4000fa6	            0x4157	                                push r15	      1646	deflate.c	
0x4000fa8	            0x4156	                                push r14	      1646	deflate.c	
0x4000faa	            0x4155	                                push r13	      1646	deflate.c	
0x4000fac	            0x4154	                                push r12	      1646	deflate.c	
0x4000fae	              0x55	                                push rbp	      1646	deflate.c	
0x4000faf	              0x53	                                push rbx	      1646	deflate.c	
0x4000fb0	        0x4883ec28	                           sub rsp, 0x28	      1646	deflate.c	
0x4000fb4	          0x4889fb	                            mov rbx, rdi	      1646	deflate.c	
0x4000fb7	          0x4189f6	                           mov r14d, esi	      1646	deflate.c	
0x4000fba	        0x488b4718	            mov rax, qword [rdi + 0x18] 	      1651	deflate.c	FUNCTION_20
0x4000fbe	        0x4883e805	                              sub rax, 5	      1651	deflate.c	FUNCTION_20
0x4000fc2	          0x8b5750	            mov edx, dword [rdi + 0x50] 	      1651	deflate.c	FUNCTION_20
0x4000fc5	          0x4839d0	                            cmp rax, rdx	      1651	deflate.c	FUNCTION_20
0x4000fc8	        0x480f46d0	                         cmovbe rdx, rax	      1651	deflate.c	FUNCTION_20
0x4000fcc	        0x48891424	                    mov qword [rsp], rdx	      1651	deflate.c	FUNCTION_20
0x4000fd0	          0x488b07	                    mov rax, qword [rdi]	      1658	deflate.c	FUNCTION_20
0x4000fd3	          0x8b4008	                mov eax, dword [rax + 8]	      1658	deflate.c	FUNCTION_20
0x4000fd6	        0x8944241c	             mov dword [rsp + 0x1c], eax	      1658	deflate.c	FUNCTION_20
0x4000fda	    0x8b8334170000	          mov eax, dword [rbx + 0x1734] 	      1665	deflate.c	FUNCTION_20	DO_1
0x4000fe0	          0x83c02a	                           add eax, 0x2a	      1665	deflate.c	FUNCTION_20	DO_1
0x4000fe3	          0xc1f803	                              sar eax, 3	      1665	deflate.c	FUNCTION_20	DO_1
0x4000fe6	          0x488b13	                    mov rdx, qword [rbx]	      1666	deflate.c	FUNCTION_20	DO_1
0x4000fe9	          0x8b6a20	            mov ebp, dword [rdx + 0x20] 	      1666	deflate.c	FUNCTION_20	DO_1
0x4000fec	            0x39e8	                            cmp eax, ebp	      1666	deflate.c	FUNCTION_20	DO_1
0x4000fee	     0xf8754010000	                            ja 0x4001148	      1666	deflate.c	FUNCTION_20	DO_1
0x4000ff4	            0x29c5	                            sub ebp, eax	      1669	deflate.c	FUNCTION_20	DO_1
0x4000ff6	    0x448ba3ac0000	           mov r12d, dword [rbx + 0xac] 	      1670	deflate.c	FUNCTION_20	DO_1	IF_1
0x4000ffd	    0x442ba3980000	            sub r12d, dword [rbx + 0x98]	      1670	deflate.c	FUNCTION_20	DO_1	IF_1
0x4001004	          0x8b4208	                mov eax, dword [rdx + 8]	      1671	deflate.c	FUNCTION_20	DO_1	IF_1
0x4001007	          0x4489e1	                           mov ecx, r12d	      1671	deflate.c	FUNCTION_20	DO_1	IF_1
0x400100a	            0x89c2	                            mov edx, eax	      1671	deflate.c	FUNCTION_20	DO_1	IF_1
0x400100c	          0x4801d1	                            add rcx, rdx	      1671	deflate.c	FUNCTION_20	DO_1	IF_1
0x400100f	        0x418d1404	                    lea edx, [r12 + rax]	      1672	deflate.c	FUNCTION_20	DO_1
0x4001013	    0x4881f9feff00	                         cmp rcx, 0xfffe	      1672	deflate.c	FUNCTION_20	DO_1
0x400101a	      0xbeffff0000	                         mov esi, 0xffff	      1672	deflate.c	FUNCTION_20	DO_1
0x400101f	           0xf47d6	                          cmova edx, esi	      1672	deflate.c	FUNCTION_20	DO_1
0x4001022	            0x39ea	                            cmp edx, ebp	      1672	deflate.c	FUNCTION_20	DO_1
0x4001024	           0xf46ea	                         cmovbe ebp, edx	      1672	deflate.c	FUNCTION_20	DO_1
0x4001027	          0x392c24	                    cmp dword [rsp], ebp	      1681	deflate.c	FUNCTION_20	DO_1
0x400102a	            0x762d	                           jbe 0x4001059	      1681	deflate.c	FUNCTION_20	DO_1
0x400102c	            0x85ed	                           test ebp, ebp	      1681	deflate.c	FUNCTION_20	DO_1
0x400102e	           0xf94c1	                                 sete cl	      1681	deflate.c	FUNCTION_20	DO_1
0x4001031	        0x4183fe04	                             cmp r14d, 4	      1681	deflate.c	FUNCTION_20	DO_1
0x4001035	           0xf95c2	                                setne dl	      1681	deflate.c	FUNCTION_20	DO_1
0x4001038	            0x84d1	                             test cl, dl	      1681	deflate.c	FUNCTION_20	DO_1
0x400103a	     0xf8510010000	                           jne 0x4001150	      1681	deflate.c	FUNCTION_20	DO_1
0x4001040	          0x4585f6	                         test r14d, r14d	      1681	deflate.c	FUNCTION_20	DO_1
0x4001043	     0xf8407010000	                            je 0x4001150	      1681	deflate.c	FUNCTION_20	DO_1
0x4001049	          0x4401e0	                           add eax, r12d	      1682	deflate.c	FUNCTION_20	DO_1
0x400104c	            0x39e8	                            cmp eax, ebp	      1682	deflate.c	FUNCTION_20	DO_1
0x400104e	     0xf8444030000	                            je 0x4001398	      1682	deflate.c	FUNCTION_20	DO_1
0x4001054	      0xe9ff000000	                           jmp 0x4001158	      1682	deflate.c	FUNCTION_20	DO_1
0x4001059	      0xb900000000	                              mov ecx, 0	      1689	deflate.c	FUNCTION_20	DO_1
0x400105e	        0x4183fe04	                             cmp r14d, 4	      1689	deflate.c	FUNCTION_20	DO_1
0x4001062	            0x750b	                           jne 0x400106f	      1689	deflate.c	FUNCTION_20	DO_1
0x4001064	          0x4401e0	                           add eax, r12d	      1689	deflate.c	FUNCTION_20	DO_1
0x4001067	            0x39e8	                            cmp eax, ebp	      1689	deflate.c	FUNCTION_20	DO_1
0x4001069	           0xf94c1	                                 sete cl	      1689	deflate.c	FUNCTION_20	DO_1
0x400106c	           0xfb6c9	                           movzx ecx, cl	      1689	deflate.c	FUNCTION_20	DO_1
0x400106f	          0x4189cf	                           mov r15d, ecx	      1689	deflate.c	FUNCTION_20	DO_1
0x4001072	      0xba00000000	                              mov edx, 0	      1690	deflate.c	FUNCTION_20	DO_1
0x4001077	      0xbe00000000	                              mov esi, 0	      1690	deflate.c	FUNCTION_20	DO_1
0x400107c	          0x4889df	                            mov rdi, rbx	      1690	deflate.c	FUNCTION_20	DO_1
0x400107f	      0xe800000000	                          call 0x4001084	      1690	deflate.c	FUNCTION_20	DO_1
0x4001084	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	      1693	deflate.c	FUNCTION_20	DO_1
0x4001088	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      1693	deflate.c	FUNCTION_20	DO_1
0x400108c	      0x40886c02fc	           mov byte [rdx + rax - 4], bpl	      1693	deflate.c	FUNCTION_20	DO_1
0x4001091	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	      1694	deflate.c	FUNCTION_20	DO_1	CALL_1
0x4001095	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      1694	deflate.c	FUNCTION_20	DO_1	CALL_1
0x4001099	            0x89e9	                            mov ecx, ebp	      1694	deflate.c	FUNCTION_20	DO_1	CALL_1
0x400109b	          0xc1e908	                              shr ecx, 8	      1694	deflate.c	FUNCTION_20	DO_1	CALL_1
0x400109e	        0x884c02fd	            mov byte [rdx + rax - 3], cl	      1694	deflate.c	FUNCTION_20	DO_1	CALL_1
0x40010a2	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	      1695	deflate.c	FUNCTION_20	DO_1
0x40010a6	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      1695	deflate.c	FUNCTION_20	DO_1
0x40010aa	            0x89e9	                            mov ecx, ebp	      1695	deflate.c	FUNCTION_20	DO_1
0x40010ac	            0xf7d1	                                 not ecx	      1695	deflate.c	FUNCTION_20	DO_1
0x40010ae	        0x884c02fe	            mov byte [rdx + rax - 2], cl	      1695	deflate.c	FUNCTION_20	DO_1
0x40010b2	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	      1696	deflate.c	FUNCTION_20	DO_1
0x40010b6	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	      1696	deflate.c	FUNCTION_20	DO_1
0x40010ba	            0x89e8	                            mov eax, ebp	      1696	deflate.c	FUNCTION_20	DO_1
0x40010bc	            0xf7d0	                                 not eax	      1696	deflate.c	FUNCTION_20	DO_1
0x40010be	          0xc1e808	                              shr eax, 8	      1696	deflate.c	FUNCTION_20	DO_1
0x40010c1	        0x884411ff	            mov byte [rcx + rdx - 1], al	      1696	deflate.c	FUNCTION_20	DO_1
0x40010c5	          0x488b3b	                    mov rdi, qword [rbx]	      1699	deflate.c	FUNCTION_20	DO_1
0x40010c8	      0xe8fef4ffff	                  call sym.flush_pending	      1699	deflate.c	FUNCTION_20	DO_1
0x40010cd	          0x4585e4	                         test r12d, r12d	      1708	deflate.c	FUNCTION_20	DO_1
0x40010d0	            0x7443	                            je 0x4001115	      1708	deflate.c	FUNCTION_20	DO_1
0x40010d2	          0x4139ec	                           cmp r12d, ebp	      1708	deflate.c	FUNCTION_20	DO_1
0x40010d5	        0x440f47e5	                         cmova r12d, ebp	      1708	deflate.c	FUNCTION_20	DO_1
0x40010d9	          0x4589e5	                          mov r13d, r12d	      1711	deflate.c	FUNCTION_20	DO_1
0x40010dc	          0x488b03	                    mov rax, qword [rbx]	      1711	deflate.c	FUNCTION_20	DO_1
0x40010df	        0x488b7818	            mov rdi, qword [rax + 0x18] 	        53	string3.h	FUNCTION_25	CALL_3
0x40010e3	    0x488bb3980000	            mov rsi, qword [rbx + 0x98] 	        53	string3.h	FUNCTION_25	CALL_3
0x40010ea	        0x48037360	             add rsi, qword [rbx + 0x60]	        53	string3.h	FUNCTION_25	CALL_3
0x40010ee	          0x4c89ea	                            mov rdx, r13	        53	string3.h	FUNCTION_25	CALL_3
0x40010f1	      0xe800000000	                          call 0x40010f6	        53	string3.h	FUNCTION_25	CALL_3
0x40010f6	          0x488b03	                    mov rax, qword [rbx]	      1712	deflate.c	FUNCTION_20	DO_1	IF_5
0x40010f9	        0x4c016818	            add qword [rax + 0x18], r13 	      1712	deflate.c	FUNCTION_20	DO_1	IF_5
0x40010fd	          0x488b03	                    mov rax, qword [rbx]	      1713	deflate.c	FUNCTION_20	DO_1	IF_5	IF_6
0x4001100	        0x44296020	            sub dword [rax + 0x20], r12d	      1713	deflate.c	FUNCTION_20	DO_1	IF_5	IF_6
0x4001104	          0x488b03	                    mov rax, qword [rbx]	      1714	deflate.c	FUNCTION_20	DO_1	IF_5	IF_6
0x4001107	        0x4c016828	            add qword [rax + 0x28], r13 	      1714	deflate.c	FUNCTION_20	DO_1	IF_5	IF_6
0x400110b	    0x4c01ab980000	            add qword [rbx + 0x98], r13 	      1715	deflate.c	FUNCTION_20	DO_1	IF_5	CALL_3
0x4001112	          0x4429e5	                           sub ebp, r12d	      1716	deflate.c	FUNCTION_20	DO_1	IF_5
0x4001115	            0x85ed	                           test ebp, ebp	      1722	deflate.c	FUNCTION_20	DO_1
0x4001117	            0x7424	                            je 0x400113d	      1722	deflate.c	FUNCTION_20	DO_1
0x4001119	          0x488b3b	                    mov rdi, qword [rbx]	      1723	deflate.c	FUNCTION_20	DO_1
0x400111c	        0x488b7718	            mov rsi, qword [rdi + 0x18] 	      1723	deflate.c	FUNCTION_20	DO_1
0x4001120	            0x89ea	                            mov edx, ebp	      1723	deflate.c	FUNCTION_20	DO_1
0x4001122	      0xe80df2ffff	                       call sym.read_buf	      1723	deflate.c	FUNCTION_20	DO_1
0x4001127	          0x488b03	                    mov rax, qword [rbx]	      1724	deflate.c	FUNCTION_20	DO_1
0x400112a	            0x89ea	                            mov edx, ebp	      1724	deflate.c	FUNCTION_20	DO_1
0x400112c	        0x48015018	            add qword [rax + 0x18], rdx 	      1724	deflate.c	FUNCTION_20	DO_1
0x4001130	          0x488b03	                    mov rax, qword [rbx]	      1725	deflate.c	FUNCTION_20	DO_1
0x4001133	          0x296820	             sub dword [rax + 0x20], ebp	      1725	deflate.c	FUNCTION_20	DO_1
0x4001136	          0x488b03	                    mov rax, qword [rbx]	      1726	deflate.c	FUNCTION_20	DO_1	IF_7
0x4001139	        0x48015028	            add qword [rax + 0x28], rdx 	      1726	deflate.c	FUNCTION_20	DO_1	IF_7
0x400113d	          0x4585ff	                         test r15d, r15d	      1728	deflate.c	FUNCTION_20	DO_1	IF_7
0x4001140	     0xf8494feffff	                            je 0x4000fda	      1728	deflate.c	FUNCTION_20	DO_1	IF_7
0x4001146	            0xeb16	                           jmp 0x400115e	      1728	deflate.c	FUNCTION_20	DO_1	IF_7
0x4001148	    0x41bf00000000	                             mov r15d, 0	      1728	deflate.c	FUNCTION_20	DO_1	IF_7
0x400114e	            0xeb0e	                           jmp 0x400115e	      1728	deflate.c	FUNCTION_20	DO_1	IF_7
0x4001150	    0x41bf00000000	                             mov r15d, 0	      1728	deflate.c	FUNCTION_20	DO_1	IF_7
0x4001156	            0xeb06	                           jmp 0x400115e	      1728	deflate.c	FUNCTION_20	DO_1	IF_7
0x4001158	    0x41bf00000000	                             mov r15d, 0	      1728	deflate.c	FUNCTION_20	DO_1	IF_7
0x400115e	          0x488b03	                    mov rax, qword [rbx]	      1736	deflate.c	FUNCTION_20
0x4001161	        0x8b6c241c	            mov ebp, dword [rsp + 0x1c] 	      1737	deflate.c	FUNCTION_20
0x4001165	          0x2b6808	                sub ebp, dword [rax + 8]	      1737	deflate.c	FUNCTION_20
0x4001168	     0xf84b7000000	                            je 0x4001225	      1737	deflate.c	FUNCTION_20
0x400116e	          0x8b4b50	            mov ecx, dword [rbx + 0x50] 	      1741	deflate.c	FUNCTION_20	IF_8
0x4001171	            0x39cd	                            cmp ebp, ecx	      1741	deflate.c	FUNCTION_20	IF_8
0x4001173	            0x7226	                            jb 0x400119b	      1741	deflate.c	FUNCTION_20	IF_8
0x4001175	    0xc78328170000	            mov dword [rbx + 0x1728], 2 	      1742	deflate.c	FUNCTION_20	IF_8
0x400117f	            0x89ca	                            mov edx, ecx	      1743	deflate.c	FUNCTION_20	IF_8
0x4001181	        0x488b7b60	            mov rdi, qword [rbx + 0x60] 	        53	string3.h	FUNCTION_25	CALL_3
0x4001185	          0x488b30	                    mov rsi, qword [rax]	        53	string3.h	FUNCTION_25	CALL_3
0x4001188	          0x4829d6	                            sub rsi, rdx	        53	string3.h	FUNCTION_25	CALL_3
0x400118b	      0xe800000000	                          call 0x4001190	        53	string3.h	FUNCTION_25	CALL_3
0x4001190	          0x8b4350	            mov eax, dword [rbx + 0x50] 	      1744	deflate.c	FUNCTION_20	IF_8
0x4001193	    0x8983ac000000	             mov dword [rbx + 0xac], eax	      1744	deflate.c	FUNCTION_20	IF_8
0x4001199	            0xeb65	                           jmp 0x4001200	      1744	deflate.c	FUNCTION_20	IF_8
0x400119b	    0x8b93ac000000	            mov edx, dword [rbx + 0xac] 	      1747	deflate.c	FUNCTION_20	IF_8	IF_9	CALL_5
0x40011a1	          0x4189ec	                           mov r12d, ebp	      1747	deflate.c	FUNCTION_20	IF_8	IF_9	CALL_5
0x40011a4	            0x89d0	                            mov eax, edx	      1747	deflate.c	FUNCTION_20	IF_8	IF_9	CALL_5
0x40011a6	        0x488b7368	            mov rsi, qword [rbx + 0x68] 	      1747	deflate.c	FUNCTION_20	IF_8	IF_9	CALL_5
0x40011aa	          0x4829c6	                            sub rsi, rax	      1747	deflate.c	FUNCTION_20	IF_8	IF_9	CALL_5
0x40011ad	          0x4c39e6	                            cmp rsi, r12	      1747	deflate.c	FUNCTION_20	IF_8	IF_9	CALL_5
0x40011b0	            0x772d	                            ja 0x40011df	      1747	deflate.c	FUNCTION_20	IF_8	IF_9	CALL_5
0x40011b2	            0x29ca	                            sub edx, ecx	      1749	deflate.c	FUNCTION_20	IF_8	IF_9
0x40011b4	    0x8993ac000000	             mov dword [rbx + 0xac], edx	      1749	deflate.c	FUNCTION_20	IF_8	IF_9
0x40011ba	        0x488b7b60	            mov rdi, qword [rbx + 0x60] 	      1750	deflate.c	FUNCTION_20	IF_8	ELSE_1
0x40011be	            0x89d2	                            mov edx, edx	        53	string3.h	FUNCTION_25	CALL_3
0x40011c0	            0x89c9	                            mov ecx, ecx	        53	string3.h	FUNCTION_25	CALL_3
0x40011c2	        0x488d340f	                    lea rsi, [rdi + rcx]	        53	string3.h	FUNCTION_25	CALL_3
0x40011c6	      0xe800000000	                          call 0x40011cb	        53	string3.h	FUNCTION_25	CALL_3
0x40011cb	    0x8b8328170000	          mov eax, dword [rbx + 0x1728] 	      1751	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10
0x40011d1	          0x83f801	                              cmp eax, 1	      1751	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10
0x40011d4	            0x7709	                            ja 0x40011df	      1751	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10
0x40011d6	          0x83c001	                              add eax, 1	      1752	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10
0x40011d9	    0x898328170000	          mov dword [rbx + 0x1728], eax 	      1752	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10
0x40011df	    0x8bbbac000000	            mov edi, dword [rbx + 0xac] 	        53	string3.h	FUNCTION_25	CALL_3
0x40011e5	        0x48037b60	             add rdi, qword [rbx + 0x60]	        53	string3.h	FUNCTION_25	CALL_3
0x40011e9	          0x488b03	                    mov rax, qword [rbx]	      1754	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10	CALL_6
0x40011ec	          0x488b30	                    mov rsi, qword [rax]	        53	string3.h	FUNCTION_25	CALL_3
0x40011ef	          0x4c29e6	                            sub rsi, r12	        53	string3.h	FUNCTION_25	CALL_3
0x40011f2	          0x4c89e2	                            mov rdx, r12	        53	string3.h	FUNCTION_25	CALL_3
0x40011f5	      0xe800000000	                          call 0x40011fa	        53	string3.h	FUNCTION_25	CALL_3
0x40011fa	     0x1abac000000	             add dword [rbx + 0xac], ebp	      1755	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10	IF_11
0x4001200	    0x8b83ac000000	            mov eax, dword [rbx + 0xac] 	      1757	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10
0x4001206	    0x488983980000	             mov qword [rbx + 0x98], rax	      1757	deflate.c	FUNCTION_20	IF_8	ELSE_1	IF_10
0x400120d	    0x8b932c170000	          mov edx, dword [rbx + 0x172c] 	      1758	deflate.c	FUNCTION_20	IF_8	ELSE_1	CALL_7
0x4001213	          0x8b4350	            mov eax, dword [rbx + 0x50] 	      1758	deflate.c	FUNCTION_20	IF_8	ELSE_1	CALL_7
0x4001216	            0x29d0	                            sub eax, edx	      1758	deflate.c	FUNCTION_20	IF_8	ELSE_1	CALL_7
0x4001218	            0x39e8	                            cmp eax, ebp	      1758	deflate.c	FUNCTION_20	IF_8	ELSE_1	CALL_7
0x400121a	           0xf47c5	                          cmova eax, ebp	      1758	deflate.c	FUNCTION_20	IF_8	ELSE_1	CALL_7
0x400121d	             0x1d0	                            add eax, edx	      1758	deflate.c	FUNCTION_20	IF_8	ELSE_1	CALL_7
0x400121f	    0x89832c170000	          mov dword [rbx + 0x172c], eax 	      1758	deflate.c	FUNCTION_20	IF_8	ELSE_1	CALL_7
0x4001225	    0x8b93ac000000	            mov edx, dword [rbx + 0xac] 	      1760	deflate.c	FUNCTION_20	IF_8	ELSE_1
0x400122b	            0x89d0	                            mov eax, edx	      1760	deflate.c	FUNCTION_20	IF_8	ELSE_1
0x400122d	    0x483983381700	          cmp qword [rbx + 0x1738], rax 	      1760	deflate.c	FUNCTION_20	IF_8	ELSE_1
0x4001234	            0x7307	                           jae 0x400123d	      1760	deflate.c	FUNCTION_20	IF_8	ELSE_1
0x4001236	    0x488983381700	          mov qword [rbx + 0x1738], rax 	      1761	deflate.c	FUNCTION_20	IF_8
0x400123d	      0xb803000000	                              mov eax, 3	      1765	deflate.c	FUNCTION_20	IF_12
0x4001242	          0x4585ff	                         test r15d, r15d	      1764	deflate.c	FUNCTION_20	IF_12
0x4001245	     0xf85b2010000	                           jne 0x40013fd	      1764	deflate.c	FUNCTION_20	IF_12
0x400124b	    0x41f7c6fbffff	                   test r14d, 0xfffffffb	      1768	deflate.c	FUNCTION_20	IF_13
0x4001252	            0x741d	                            je 0x4001271	      1768	deflate.c	FUNCTION_20	IF_13
0x4001254	          0x488b03	                    mov rax, qword [rbx]	      1769	deflate.c	FUNCTION_20	IF_13
0x4001257	        0x83780800	                  cmp dword [rax + 8], 0	      1768	deflate.c	FUNCTION_20	IF_13
0x400125b	            0x7514	                           jne 0x4001271	      1768	deflate.c	FUNCTION_20	IF_13
0x400125d	            0x89d2	                            mov edx, edx	      1769	deflate.c	FUNCTION_20	IF_13
0x400125f	    0x483b93980000	            cmp rdx, qword [rbx + 0x98] 	      1769	deflate.c	FUNCTION_20	IF_13
0x4001266	     0xf8585000000	                           jne 0x40012f1	      1769	deflate.c	FUNCTION_20	IF_13
0x400126c	      0xe912010000	                           jmp 0x4001383	      1769	deflate.c	FUNCTION_20	IF_13
0x4001271	            0x89d5	                            mov ebp, edx	      1773	deflate.c	FUNCTION_20	IF_14
0x4001273	            0xf7d5	                                 not ebp	      1773	deflate.c	FUNCTION_20	IF_14
0x4001275	           0x36b68	             add ebp, dword [rbx + 0x68]	      1773	deflate.c	FUNCTION_20	IF_14
0x4001278	          0x488b03	                    mov rax, qword [rbx]	      1774	deflate.c	FUNCTION_20	IF_14
0x400127b	          0x3b6808	                cmp ebp, dword [rax + 8]	      1774	deflate.c	FUNCTION_20	IF_14
0x400127e	            0x734b	                           jae 0x40012cb	      1774	deflate.c	FUNCTION_20	IF_14
0x4001280	    0x488b8b980000	            mov rcx, qword [rbx + 0x98] 	      1774	deflate.c	FUNCTION_20	IF_14
0x4001287	          0x8b4350	            mov eax, dword [rbx + 0x50] 	      1774	deflate.c	FUNCTION_20	IF_14
0x400128a	            0x89c6	                            mov esi, eax	      1774	deflate.c	FUNCTION_20	IF_14
0x400128c	          0x4839f1	                            cmp rcx, rsi	      1774	deflate.c	FUNCTION_20	IF_14
0x400128f	            0x7c3a	                            jl 0x40012cb	      1774	deflate.c	FUNCTION_20	IF_14
0x4001291	          0x4829f1	                            sub rcx, rsi	      1776	deflate.c	FUNCTION_20
0x4001294	    0x48898b980000	             mov qword [rbx + 0x98], rcx	      1776	deflate.c	FUNCTION_20
0x400129b	            0x29c2	                            sub edx, eax	      1777	deflate.c	FUNCTION_20
0x400129d	    0x8993ac000000	             mov dword [rbx + 0xac], edx	      1777	deflate.c	FUNCTION_20
0x40012a3	        0x488b7b60	            mov rdi, qword [rbx + 0x60] 	      1778	deflate.c	FUNCTION_20	IF_15
0x40012a7	            0x89d2	                            mov edx, edx	        53	string3.h	FUNCTION_25	CALL_3
0x40012a9	            0x89c0	                            mov eax, eax	        53	string3.h	FUNCTION_25	CALL_3
0x40012ab	        0x488d3407	                    lea rsi, [rdi + rax]	        53	string3.h	FUNCTION_25	CALL_3
0x40012af	      0xe800000000	                          call 0x40012b4	        53	string3.h	FUNCTION_25	CALL_3
0x40012b4	    0x8b8328170000	          mov eax, dword [rbx + 0x1728] 	      1779	deflate.c	FUNCTION_20	IF_15
0x40012ba	          0x83f801	                              cmp eax, 1	      1779	deflate.c	FUNCTION_20	IF_15
0x40012bd	            0x7709	                            ja 0x40012c8	      1779	deflate.c	FUNCTION_20	IF_15
0x40012bf	          0x83c001	                              add eax, 1	      1780	deflate.c	FUNCTION_20	IF_15
0x40012c2	    0x898328170000	          mov dword [rbx + 0x1728], eax 	      1780	deflate.c	FUNCTION_20	IF_15
0x40012c8	           0x36b50	             add ebp, dword [rbx + 0x50]	      1781	deflate.c	FUNCTION_20	IF_15
0x40012cb	          0x488b3b	                    mov rdi, qword [rbx]	      1783	deflate.c	FUNCTION_20	IF_15	IF_16
0x40012ce	          0x8b4708	                mov eax, dword [rdi + 8]	      1783	deflate.c	FUNCTION_20	IF_15	IF_16
0x40012d1	            0x39c5	                            cmp ebp, eax	      1783	deflate.c	FUNCTION_20	IF_15	IF_16
0x40012d3	           0xf47e8	                          cmova ebp, eax	      1783	deflate.c	FUNCTION_20	IF_15	IF_16
0x40012d6	            0x85ed	                           test ebp, ebp	      1785	deflate.c	FUNCTION_20	IF_15
0x40012d8	            0x7417	                            je 0x40012f1	      1785	deflate.c	FUNCTION_20	IF_15
0x40012da	    0x8bb3ac000000	            mov esi, dword [rbx + 0xac] 	      1786	deflate.c	FUNCTION_20	IF_15
0x40012e0	        0x48037360	             add rsi, qword [rbx + 0x60]	      1786	deflate.c	FUNCTION_20	IF_15
0x40012e4	            0x89ea	                            mov edx, ebp	      1786	deflate.c	FUNCTION_20	IF_15
0x40012e6	      0xe849f0ffff	                       call sym.read_buf	      1786	deflate.c	FUNCTION_20	IF_15
0x40012eb	     0x1abac000000	             add dword [rbx + 0xac], ebp	      1787	deflate.c	FUNCTION_20	IF_17
0x40012f1	    0x8b93ac000000	            mov edx, dword [rbx + 0xac] 	      1789	deflate.c	FUNCTION_20	IF_18
0x40012f7	            0x89d0	                            mov eax, edx	      1789	deflate.c	FUNCTION_20	IF_18
0x40012f9	    0x483983381700	          cmp qword [rbx + 0x1738], rax 	      1789	deflate.c	FUNCTION_20	IF_18
0x4001300	            0x7307	                           jae 0x4001309	      1789	deflate.c	FUNCTION_20	IF_18
0x4001302	    0x488983381700	          mov qword [rbx + 0x1738], rax 	      1790	deflate.c	FUNCTION_20	IF_18	CALL_9
0x4001309	    0x8b8334170000	          mov eax, dword [rbx + 0x1734] 	      1799	deflate.c	FUNCTION_20
0x400130f	          0x83c02a	                           add eax, 0x2a	      1799	deflate.c	FUNCTION_20
0x4001312	          0xc1f803	                              sar eax, 3	      1799	deflate.c	FUNCTION_20
0x4001315	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	      1799	deflate.c	FUNCTION_20
0x4001319	          0x4829c6	                            sub rsi, rax	      1799	deflate.c	FUNCTION_20
0x400131c	          0x4889f0	                            mov rax, rsi	      1799	deflate.c	FUNCTION_20
0x400131f	    0x4881feffff00	                         cmp rsi, 0xffff	      1799	deflate.c	FUNCTION_20
0x4001326	      0xb9ffff0000	                         mov ecx, 0xffff	      1799	deflate.c	FUNCTION_20
0x400132b	        0x480f47c1	                          cmova rax, rcx	      1799	deflate.c	FUNCTION_20
0x400132f	            0x89c1	                            mov ecx, eax	      1799	deflate.c	FUNCTION_20
0x4001331	    0x488bb3980000	            mov rsi, qword [rbx + 0x98] 	      1801	deflate.c	FUNCTION_20
0x4001338	            0x29f2	                            sub edx, esi	      1801	deflate.c	FUNCTION_20
0x400133a	          0x394350	            cmp dword [rbx + 0x50], eax 	      1802	deflate.c	FUNCTION_20
0x400133d	         0xf464350	          cmovbe eax, dword [rbx + 0x50]	      1802	deflate.c	FUNCTION_20
0x4001341	            0x39d0	                            cmp eax, edx	      1802	deflate.c	FUNCTION_20
0x4001343	            0x7624	                           jbe 0x4001369	      1802	deflate.c	FUNCTION_20
0x4001345	            0x85d2	                           test edx, edx	      1803	deflate.c	FUNCTION_20
0x4001347	        0x400f95c7	                               setne dil	      1803	deflate.c	FUNCTION_20
0x400134b	        0x4183fe04	                             cmp r14d, 4	      1803	deflate.c	FUNCTION_20
0x400134f	           0xf94c0	                                 sete al	      1803	deflate.c	FUNCTION_20
0x4001352	          0x4008c7	                              or dil, al	      1803	deflate.c	FUNCTION_20
0x4001355	            0x7433	                            je 0x400138a	      1803	deflate.c	FUNCTION_20
0x4001357	          0x4585f6	                         test r14d, r14d	      1803	deflate.c	FUNCTION_20
0x400135a	            0x742e	                            je 0x400138a	      1803	deflate.c	FUNCTION_20
0x400135c	          0x488b03	                    mov rax, qword [rbx]	      1804	deflate.c	FUNCTION_20
0x400135f	        0x83780800	                  cmp dword [rax + 8], 0	      1804	deflate.c	FUNCTION_20
0x4001363	            0x752c	                           jne 0x4001391	      1804	deflate.c	FUNCTION_20
0x4001365	            0x39d1	                            cmp ecx, edx	      1804	deflate.c	FUNCTION_20
0x4001367	            0x7228	                            jb 0x4001391	      1804	deflate.c	FUNCTION_20
0x4001369	            0x39d1	                            cmp ecx, edx	      1805	deflate.c	FUNCTION_20
0x400136b	           0xf47ca	                          cmova ecx, edx	      1805	deflate.c	FUNCTION_20
0x400136e	        0x4183fe04	                             cmp r14d, 4	      1807	deflate.c	FUNCTION_20	IF_20
0x4001372	            0x755f	                           jne 0x40013d3	      1807	deflate.c	FUNCTION_20	IF_20
0x4001374	          0x488b03	                    mov rax, qword [rbx]	      1806	deflate.c	FUNCTION_20	IF_20
0x4001377	        0x83780800	                  cmp dword [rax + 8], 0	      1807	deflate.c	FUNCTION_20	IF_20
0x400137b	            0x7556	                           jne 0x40013d3	      1807	deflate.c	FUNCTION_20	IF_20
0x400137d	            0x39ca	                            cmp edx, ecx	      1807	deflate.c	FUNCTION_20	IF_20
0x400137f	            0x7552	                           jne 0x40013d3	      1807	deflate.c	FUNCTION_20	IF_20
0x4001381	            0xeb24	                           jmp 0x40013a7	      1807	deflate.c	FUNCTION_20	IF_20
0x4001383	      0xb801000000	                              mov eax, 1	      1770	deflate.c	FUNCTION_20
0x4001388	            0xeb73	                           jmp 0x40013fd	      1770	deflate.c	FUNCTION_20
0x400138a	      0xb800000000	                              mov eax, 0	      1814	deflate.c	FUNCTION_20	IF_20	CALL_11
0x400138f	            0xeb6c	                           jmp 0x40013fd	      1814	deflate.c	FUNCTION_20	IF_20	CALL_11
0x4001391	      0xb800000000	                              mov eax, 0	      1814	deflate.c	FUNCTION_20	IF_20	CALL_11
0x4001396	            0xeb65	                           jmp 0x40013fd	      1814	deflate.c	FUNCTION_20	IF_20	CALL_11
0x4001398	        0x4183fe04	                             cmp r14d, 4	      1689	deflate.c	FUNCTION_20	DO_1
0x400139c	           0xf94c1	                                 sete cl	      1689	deflate.c	FUNCTION_20	DO_1
0x400139f	           0xfb6c9	                           movzx ecx, cl	      1689	deflate.c	FUNCTION_20	DO_1
0x40013a2	      0xe9c8fcffff	                           jmp 0x400106f	      1689	deflate.c	FUNCTION_20	DO_1
0x40013a7	            0x89cd	                            mov ebp, ecx	      1808	deflate.c	FUNCTION_20	IF_20
0x40013a9	        0x48037360	             add rsi, qword [rbx + 0x60]	      1808	deflate.c	FUNCTION_20	IF_20
0x40013ad	      0xb901000000	                              mov ecx, 1	      1808	deflate.c	FUNCTION_20	IF_20
0x40013b2	          0x4889ea	                            mov rdx, rbp	      1808	deflate.c	FUNCTION_20	IF_20
0x40013b5	          0x4889df	                            mov rdi, rbx	      1808	deflate.c	FUNCTION_20	IF_20
0x40013b8	      0xe800000000	                          call 0x40013bd	      1808	deflate.c	FUNCTION_20	IF_20
0x40013bd	    0x4801ab980000	            add qword [rbx + 0x98], rbp 	      1809	deflate.c	FUNCTION_20	IF_20
0x40013c4	          0x488b3b	                    mov rdi, qword [rbx]	      1810	deflate.c	FUNCTION_20	IF_20
0x40013c7	      0xe8fff1ffff	                  call sym.flush_pending	      1810	deflate.c	FUNCTION_20	IF_20
0x40013cc	      0xb802000000	                              mov eax, 2	      1814	deflate.c	FUNCTION_20	IF_20	CALL_11
0x40013d1	            0xeb2a	                           jmp 0x40013fd	      1814	deflate.c	FUNCTION_20	IF_20	CALL_11
0x40013d3	            0x89cd	                            mov ebp, ecx	      1808	deflate.c	FUNCTION_20	IF_20
0x40013d5	        0x48037360	             add rsi, qword [rbx + 0x60]	      1808	deflate.c	FUNCTION_20	IF_20
0x40013d9	      0xb900000000	                              mov ecx, 0	      1808	deflate.c	FUNCTION_20	IF_20
0x40013de	          0x4889ea	                            mov rdx, rbp	      1808	deflate.c	FUNCTION_20	IF_20
0x40013e1	          0x4889df	                            mov rdi, rbx	      1808	deflate.c	FUNCTION_20	IF_20
0x40013e4	      0xe800000000	                          call 0x40013e9	      1808	deflate.c	FUNCTION_20	IF_20
0x40013e9	    0x4801ab980000	            add qword [rbx + 0x98], rbp 	      1809	deflate.c	FUNCTION_20	IF_20
0x40013f0	          0x488b3b	                    mov rdi, qword [rbx]	      1810	deflate.c	FUNCTION_20	IF_20
0x40013f3	      0xe8d3f1ffff	                  call sym.flush_pending	      1810	deflate.c	FUNCTION_20	IF_20
0x40013f8	      0xb800000000	                              mov eax, 0	      1814	deflate.c	FUNCTION_20	IF_20	CALL_11
0x40013fd	        0x4883c428	                           add rsp, 0x28	      1815	deflate.c	FUNCTION_20	IF_20
0x4001401	              0x5b	                                 pop rbx	      1815	deflate.c	FUNCTION_20	IF_20
0x4001402	              0x5d	                                 pop rbp	      1815	deflate.c	FUNCTION_20	IF_20
0x4001403	            0x415c	                                 pop r12	      1815	deflate.c	FUNCTION_20	IF_20
0x4001405	            0x415d	                                 pop r13	      1815	deflate.c	FUNCTION_20	IF_20
0x4001407	            0x415e	                                 pop r14	      1815	deflate.c	FUNCTION_20	IF_20
0x4001409	            0x415f	                                 pop r15	      1815	deflate.c	FUNCTION_20	IF_20
0x400140b	              0xc3	                                     ret	      1815	deflate.c	FUNCTION_20	IF_20
longest_match	CALL,5:ELSE,0:IF,2:FOR,0:DO,1:functions,0:WHILE,0:SWITCH,0	122
0x4000160	            0x4157	                                push r15	      1239	deflate.c	
0x4000162	            0x4156	                                push r14	      1239	deflate.c	
0x4000164	            0x4155	                                push r13	      1239	deflate.c	
0x4000166	            0x4154	                                push r12	      1239	deflate.c	
0x4000168	              0x55	                                push rbp	      1239	deflate.c	
0x4000169	              0x53	                                push rbx	      1239	deflate.c	
0x400016a	    0x8b8fbc000000	            mov ecx, dword [rdi + 0xbc] 	      1240	deflate.c	
0x4000170	        0x4c8b4f60	              mov r9, qword [rdi + 0x60]	      1241	deflate.c	
0x4000174	    0x8b97ac000000	            mov edx, dword [rdi + 0xac] 	      1241	deflate.c	
0x400017a	          0x4189d3	                           mov r11d, edx	      1241	deflate.c	
0x400017d	        0x4f8d2419	                     lea r12, [r9 + r11]	      1241	deflate.c	
0x4000181	    0x448b87b80000	            mov r8d, dword [rdi + 0xb8] 	      1244	deflate.c	FUNCTION_17
0x4000188	          0x4489c0	                            mov eax, r8d	      1244	deflate.c	FUNCTION_17
0x400018b	    0x448bb7d00000	           mov r14d, dword [rdi + 0xd0] 	      1245	deflate.c	FUNCTION_17
0x4000192	          0x8b5f50	            mov ebx, dword [rdi + 0x50] 	      1246	deflate.c	FUNCTION_17
0x4000195	    0x8dabfafeffff	                  lea ebp, [rbx - 0x106]	      1247	deflate.c	FUNCTION_17
0x400019b	    0x41ba00000000	                             mov r10d, 0	      1247	deflate.c	FUNCTION_17
0x40001a1	            0x39ea	                            cmp edx, ebp	      1247	deflate.c	FUNCTION_17
0x40001a3	            0x760a	                           jbe 0x40001af	      1247	deflate.c	FUNCTION_17
0x40001a5	    0x448d92060100	                 lea r10d, [rdx + 0x106]	      1247	deflate.c	FUNCTION_17
0x40001ac	          0x4129da	                           sub r10d, ebx	      1247	deflate.c	FUNCTION_17
0x40001af	        0x488b6f70	            mov rbp, qword [rdi + 0x70] 	      1251	deflate.c	FUNCTION_17	CALL_2
0x40001b3	          0x8b5f58	            mov ebx, dword [rdi + 0x58] 	      1252	deflate.c	FUNCTION_17
0x40001b6	    0x4f8dbc190201	            lea r15, [r9 + r11 + 0x102] 	      1262	deflate.c	FUNCTION_17
0x40001be	          0x4963d0	                         movsxd rdx, r8d	      1263	deflate.c	FUNCTION_17
0x40001c1	    0x450fb66c14ff	        movzx r13d, byte [r12 + rdx - 1]	      1263	deflate.c	FUNCTION_17
0x40001c7	      0x450fb61c14	            movzx r11d, byte [r12 + rdx]	      1264	deflate.c	FUNCTION_17
0x40001cc	            0x89ca	                            mov edx, ecx	      1274	deflate.c	FUNCTION_17	CALL_3
0x40001ce	          0xc1ea02	                              shr edx, 2	      1274	deflate.c	FUNCTION_17	CALL_3
0x40001d1	    0x443b87cc0000	            cmp r8d, dword [rdi + 0xcc] 	      1274	deflate.c	FUNCTION_17	CALL_3
0x40001d8	           0xf43ca	                         cmovae ecx, edx	      1274	deflate.c	FUNCTION_17	CALL_3
0x40001db	    0x8b97b4000000	            mov edx, dword [rdi + 0xb4] 	      1279	deflate.c	FUNCTION_17	IF_1
0x40001e1	          0x4439f2	                           cmp edx, r14d	      1279	deflate.c	FUNCTION_17	IF_1
0x40001e4	        0x440f42f2	                         cmovb r14d, edx	      1279	deflate.c	FUNCTION_17	IF_1
0x40001e8	            0x89f2	                            mov edx, esi	      1285	deflate.c	FUNCTION_17	CALL_4
0x40001ea	          0x4c01ca	                             add rdx, r9	      1285	deflate.c	FUNCTION_17	CALL_4
0x40001ed	          0x4c63c0	                          movsxd r8, eax	      1330	deflate.c	FUNCTION_17	DO_1
0x40001f0	        0x463a1c02	               cmp r11b, byte [rdx + r8]	      1330	deflate.c	FUNCTION_17	DO_1
0x40001f4	     0xf8508010000	                           jne 0x4000302	      1330	deflate.c	FUNCTION_17	DO_1
0x40001fa	      0x463a6c02ff	           cmp r13b, byte [rdx + r8 - 1]	      1330	deflate.c	FUNCTION_17	DO_1
0x40001ff	     0xf85fd000000	                           jne 0x4000302	      1330	deflate.c	FUNCTION_17	DO_1
0x4000205	      0x450fb60424	                   movzx r8d, byte [r12]	      1331	deflate.c	FUNCTION_17	DO_1
0x400020a	          0x443802	                     cmp byte [rdx], r8b	      1331	deflate.c	FUNCTION_17	DO_1
0x400020d	     0xf85ef000000	                           jne 0x4000302	      1331	deflate.c	FUNCTION_17	DO_1
0x4000213	    0x450fb6442401	               movzx r8d, byte [r12 + 1]	      1332	deflate.c	FUNCTION_17	DO_1
0x4000219	        0x44384201	                 cmp byte [rdx + 1], r8b	      1332	deflate.c	FUNCTION_17	DO_1
0x400021d	     0xf85df000000	                           jne 0x4000302	      1332	deflate.c	FUNCTION_17	DO_1
0x4000223	        0x4983c402	                              add r12, 2	      1341	deflate.c	FUNCTION_17	DO_1
0x4000227	        0x4883c202	                              add rdx, 2	      1341	deflate.c	FUNCTION_17	DO_1
0x400022b	      0x440fb64201	               movzx r8d, byte [rdx + 1]	      1352	deflate.c	FUNCTION_17	DO_1	DO_3
0x4000230	      0x4538442401	                 cmp byte [r12 + 1], r8b	      1352	deflate.c	FUNCTION_17	DO_1	DO_3
0x4000235	            0x7409	                            je 0x4000240	      1352	deflate.c	FUNCTION_17	DO_1	DO_3
0x4000237	        0x4983c401	                              add r12, 1	      1352	deflate.c	FUNCTION_17	DO_1	DO_3
0x400023b	      0xe987000000	                           jmp 0x40002c7	      1352	deflate.c	FUNCTION_17	DO_1	DO_3
0x4000240	      0x440fb64202	               movzx r8d, byte [rdx + 2]	      1348	deflate.c	FUNCTION_17	DO_1
0x4000245	      0x4538442402	                 cmp byte [r12 + 2], r8b	      1348	deflate.c	FUNCTION_17	DO_1
0x400024a	            0x7406	                            je 0x4000252	      1348	deflate.c	FUNCTION_17	DO_1
0x400024c	        0x4983c402	                              add r12, 2	      1348	deflate.c	FUNCTION_17	DO_1
0x4000250	            0xeb75	                           jmp 0x40002c7	      1348	deflate.c	FUNCTION_17	DO_1
0x4000252	      0x440fb64203	               movzx r8d, byte [rdx + 3]	      1348	deflate.c	FUNCTION_17	DO_1
0x4000257	      0x4538442403	                 cmp byte [r12 + 3], r8b	      1348	deflate.c	FUNCTION_17	DO_1
0x400025c	            0x7406	                            je 0x4000264	      1348	deflate.c	FUNCTION_17	DO_1
0x400025e	        0x4983c403	                              add r12, 3	      1348	deflate.c	FUNCTION_17	DO_1
0x4000262	            0xeb63	                           jmp 0x40002c7	      1348	deflate.c	FUNCTION_17	DO_1
0x4000264	      0x440fb64204	               movzx r8d, byte [rdx + 4]	      1349	deflate.c	FUNCTION_17	DO_1
0x4000269	      0x4538442404	                 cmp byte [r12 + 4], r8b	      1349	deflate.c	FUNCTION_17	DO_1
0x400026e	            0x7406	                            je 0x4000276	      1349	deflate.c	FUNCTION_17	DO_1
0x4000270	        0x4983c404	                              add r12, 4	      1349	deflate.c	FUNCTION_17	DO_1
0x4000274	            0xeb51	                           jmp 0x40002c7	      1349	deflate.c	FUNCTION_17	DO_1
0x4000276	      0x440fb64205	               movzx r8d, byte [rdx + 5]	      1349	deflate.c	FUNCTION_17	DO_1
0x400027b	      0x4538442405	                 cmp byte [r12 + 5], r8b	      1349	deflate.c	FUNCTION_17	DO_1
0x4000280	            0x7406	                            je 0x4000288	      1349	deflate.c	FUNCTION_17	DO_1
0x4000282	        0x4983c405	                              add r12, 5	      1349	deflate.c	FUNCTION_17	DO_1
0x4000286	            0xeb3f	                           jmp 0x40002c7	      1349	deflate.c	FUNCTION_17	DO_1
0x4000288	      0x440fb64206	               movzx r8d, byte [rdx + 6]	      1350	deflate.c	FUNCTION_17	DO_1
0x400028d	      0x4538442406	                 cmp byte [r12 + 6], r8b	      1350	deflate.c	FUNCTION_17	DO_1
0x4000292	            0x7406	                            je 0x400029a	      1350	deflate.c	FUNCTION_17	DO_1
0x4000294	        0x4983c406	                              add r12, 6	      1350	deflate.c	FUNCTION_17	DO_1
0x4000298	            0xeb2d	                           jmp 0x40002c7	      1350	deflate.c	FUNCTION_17	DO_1
0x400029a	      0x440fb64207	               movzx r8d, byte [rdx + 7]	      1350	deflate.c	FUNCTION_17	DO_1
0x400029f	      0x4538442407	                 cmp byte [r12 + 7], r8b	      1350	deflate.c	FUNCTION_17	DO_1
0x40002a4	            0x7406	                            je 0x40002ac	      1350	deflate.c	FUNCTION_17	DO_1
0x40002a6	        0x4983c407	                              add r12, 7	      1350	deflate.c	FUNCTION_17	DO_1
0x40002aa	            0xeb1b	                           jmp 0x40002c7	      1350	deflate.c	FUNCTION_17	DO_1
0x40002ac	        0x4983c408	                              add r12, 8	      1350	deflate.c	FUNCTION_17	DO_1
0x40002b0	        0x4883c208	                              add rdx, 8	      1350	deflate.c	FUNCTION_17	DO_1
0x40002b4	        0x440fb602	                   movzx r8d, byte [rdx]	      1351	deflate.c	FUNCTION_17	DO_1	DO_3
0x40002b8	        0x45380424	                     cmp byte [r12], r8b	      1351	deflate.c	FUNCTION_17	DO_1	DO_3
0x40002bc	            0x7509	                           jne 0x40002c7	      1351	deflate.c	FUNCTION_17	DO_1	DO_3
0x40002be	          0x4d39e7	                            cmp r15, r12	      1351	deflate.c	FUNCTION_17	DO_1	DO_3
0x40002c1	     0xf8764ffffff	                            ja 0x400022b	      1351	deflate.c	FUNCTION_17	DO_1	DO_3
0x40002c7	          0x4c89fa	                            mov rdx, r15	      1356	deflate.c	FUNCTION_17	DO_1
0x40002ca	          0x4c29e2	                            sub rdx, r12	      1356	deflate.c	FUNCTION_17	DO_1
0x40002cd	    0x41b802010000	                          mov r8d, 0x102	      1356	deflate.c	FUNCTION_17	DO_1
0x40002d3	          0x4129d0	                            sub r8d, edx	      1356	deflate.c	FUNCTION_17	DO_1
0x40002d6	    0x4d8da7fefeff	                  lea r12, [r15 - 0x102]	      1357	deflate.c	FUNCTION_17	DO_1
0x40002dd	          0x4439c0	                            cmp eax, r8d	      1361	deflate.c	FUNCTION_17	DO_1
0x40002e0	            0x7d20	                           jge 0x4000302	      1361	deflate.c	FUNCTION_17	DO_1
0x40002e2	    0x89b7b0000000	             mov dword [rdi + 0xb0], esi	      1362	deflate.c	FUNCTION_17	DO_1
0x40002e8	          0x4539c6	                           cmp r14d, r8d	      1364	deflate.c	FUNCTION_17	DO_1
0x40002eb	            0x7e2c	                           jle 0x4000319	      1364	deflate.c	FUNCTION_17	DO_1
0x40002ed	          0x4963c0	                         movsxd rax, r8d	      1368	deflate.c	FUNCTION_17	DO_1	IF_6	IF_7
0x40002f0	    0x450fb66c04ff	        movzx r13d, byte [r12 + rax - 1]	      1368	deflate.c	FUNCTION_17	DO_1	IF_6	IF_7
0x40002f6	    0x450fb69c07fe	    movzx r11d, byte [r15 + rax - 0x102]	      1369	deflate.c	FUNCTION_17	DO_1	IF_6
0x40002ff	          0x4489c0	                            mov eax, r8d	      1356	deflate.c	FUNCTION_17	DO_1
0x4000302	            0x21de	                            and esi, ebx	      1372	deflate.c	FUNCTION_17	DO_1	IF_6
0x4000304	       0xfb7747500	           movzx esi, word [rbp + rsi*2]	      1372	deflate.c	FUNCTION_17	DO_1	IF_6
0x4000309	          0x4139f2	                           cmp r10d, esi	      1373	deflate.c	FUNCTION_17	DO_1	IF_6
0x400030c	            0x730e	                           jae 0x400031c	      1373	deflate.c	FUNCTION_17	DO_1	IF_6
0x400030e	          0x83e901	                              sub ecx, 1	      1373	deflate.c	FUNCTION_17	DO_1	IF_6
0x4000311	     0xf85d1feffff	                           jne 0x40001e8	      1373	deflate.c	FUNCTION_17	DO_1	IF_6
0x4000317	            0xeb03	                           jmp 0x400031c	      1373	deflate.c	FUNCTION_17	DO_1	IF_6
0x4000319	          0x4489c0	                            mov eax, r8d	      1356	deflate.c	FUNCTION_17	DO_1
0x400031c	    0x3987b4000000	            cmp dword [rdi + 0xb4], eax 	      1356	deflate.c	FUNCTION_17	DO_1
0x4000322	     0xf4687b40000	          cmovbe eax, dword [rdi + 0xb4]	      1356	deflate.c	FUNCTION_17	DO_1
0x4000329	              0x5b	                                 pop rbx	      1377	deflate.c	FUNCTION_17	WHILE_1
0x400032a	              0x5d	                                 pop rbp	      1377	deflate.c	FUNCTION_17	WHILE_1
0x400032b	            0x415c	                                 pop r12	      1377	deflate.c	FUNCTION_17	WHILE_1
0x400032d	            0x415d	                                 pop r13	      1377	deflate.c	FUNCTION_17	WHILE_1
0x400032f	            0x415e	                                 pop r14	      1377	deflate.c	FUNCTION_17	WHILE_1
0x4000331	            0x415f	                                 pop r15	      1377	deflate.c	FUNCTION_17	WHILE_1
0x4000333	              0xc3	                                     ret	      1377	deflate.c	FUNCTION_17	WHILE_1
deflateStateCheck	CALL,0:ELSE,0:IF,2:FOR,0:DO,0:functions,0:WHILE,0:SWITCH,0	37
0x40000b9	          0x4885ff	                           test rdi, rdi	       357	deflate.c	
0x40000bc	            0x745c	                            je 0x400011a	       357	deflate.c	
0x40000be	      0x48837f4000	               cmp qword [rdi + 0x40], 0	       357	deflate.c	
0x40000c3	            0x745b	                            je 0x4000120	       357	deflate.c	
0x40000c5	      0x48837f4800	               cmp qword [rdi + 0x48], 0	       358	deflate.c	
0x40000ca	            0x745a	                            je 0x4000126	       358	deflate.c	
0x40000cc	        0x488b5738	            mov rdx, qword [rdi + 0x38] 	       360	deflate.c	FUNCTION_2
0x40000d0	          0x4885d2	                           test rdx, rdx	       361	deflate.c	FUNCTION_2	IF_1
0x40000d3	            0x7457	                            je 0x400012c	       361	deflate.c	FUNCTION_2	IF_1
0x40000d5	      0xb801000000	                              mov eax, 1	       371	deflate.c	FUNCTION_2	IF_2
0x40000da	          0x483b3a	                    cmp rdi, qword [rdx]	       361	deflate.c	FUNCTION_2	IF_1
0x40000dd	            0x7552	                           jne 0x4000131	       361	deflate.c	FUNCTION_2	IF_1
0x40000df	          0x8b7208	                mov esi, dword [rdx + 8]	       361	deflate.c	FUNCTION_2	IF_1
0x40000e2	          0x8d4ed6	                   lea ecx, [rsi - 0x2a]	       361	deflate.c	FUNCTION_2	IF_1
0x40000e5	      0xba01000000	                              mov edx, 1	       361	deflate.c	FUNCTION_2	IF_1
0x40000ea	          0x83f93d	                           cmp ecx, 0x3d	       361	deflate.c	FUNCTION_2	IF_1
0x40000ed	            0x7714	                            ja 0x4000103	       361	deflate.c	FUNCTION_2	IF_1
0x40000ef	    0x48ba01800088	          movabs rdx, 0x2002000088008001	       361	deflate.c	FUNCTION_2	IF_1
0x40000f9	          0x48d3ea	                             shr rdx, cl	       361	deflate.c	FUNCTION_2	IF_1
0x40000fc	        0x4883f201	                              xor rdx, 1	       361	deflate.c	FUNCTION_2	IF_1
0x4000100	          0x83e201	                              and edx, 1	       361	deflate.c	FUNCTION_2	IF_1
0x4000103	          0x83fe71	                           cmp esi, 0x71	       359	deflate.c	FUNCTION_2
0x4000106	           0xf95c1	                                setne cl	       359	deflate.c	FUNCTION_2
0x4000109	    0x81fe9a020000	                          cmp esi, 0x29a	       359	deflate.c	FUNCTION_2
0x400010f	           0xf95c0	                                setne al	       359	deflate.c	FUNCTION_2
0x4000112	            0x21c8	                            and eax, ecx	       359	deflate.c	FUNCTION_2
0x4000114	            0x21c2	                            and edx, eax	       359	deflate.c	FUNCTION_2
0x4000116	           0xfb6c2	                           movzx eax, dl	       359	deflate.c	FUNCTION_2
0x4000119	              0xc3	                                     ret	       359	deflate.c	FUNCTION_2
0x400011a	      0xb801000000	                              mov eax, 1	       359	deflate.c	FUNCTION_2
0x400011f	              0xc3	                                     ret	       359	deflate.c	FUNCTION_2
0x4000120	      0xb801000000	                              mov eax, 1	       359	deflate.c	FUNCTION_2
0x4000125	              0xc3	                                     ret	       359	deflate.c	FUNCTION_2
0x4000126	      0xb801000000	                              mov eax, 1	       359	deflate.c	FUNCTION_2
0x400012b	              0xc3	                                     ret	       359	deflate.c	FUNCTION_2
0x400012c	      0xb801000000	                              mov eax, 1	       371	deflate.c	FUNCTION_2	IF_2
0x4000131	            0xf3c3	                                     ret	       373	deflate.c	FUNCTION_2	IF_2
putShortMSB	CALL,2:ELSE,0:IF,0:FOR,0:DO,0:functions,0:WHILE,0:SWITCH,0	13
0x4000133	        0x488b5710	            mov rdx, qword [rdi + 0x10] 	       720	deflate.c	
0x4000137	        0x488b4728	            mov rax, qword [rdi + 0x28] 	       720	deflate.c	
0x400013b	        0x488d4801	                      lea rcx, [rax + 1]	       720	deflate.c	
0x400013f	        0x48894f28	             mov qword [rdi + 0x28], rcx	       720	deflate.c	
0x4000143	            0x89f1	                            mov ecx, esi	       720	deflate.c	
0x4000145	          0xc1e908	                              shr ecx, 8	       720	deflate.c	
0x4000148	          0x880c02	                mov byte [rdx + rax], cl	       720	deflate.c	
0x400014b	        0x488b5710	            mov rdx, qword [rdi + 0x10] 	       721	deflate.c	
0x400014f	        0x488b4728	            mov rax, qword [rdi + 0x28] 	       721	deflate.c	
0x4000153	        0x488d4801	                      lea rcx, [rax + 1]	       721	deflate.c	
0x4000157	        0x48894f28	             mov qword [rdi + 0x28], rcx	       721	deflate.c	
0x400015b	        0x40883402	               mov byte [rdx + rax], sil	       721	deflate.c	
0x400015f	              0xc3	                                     ret	       721	deflate.c	
flush_pending	CALL,2:ELSE,0:IF,3:FOR,0:DO,0:functions,0:WHILE,0:SWITCH,0	37
0x40005cb	            0x4155	                                push r13	       732	deflate.c	
0x40005cd	            0x4154	                                push r12	       732	deflate.c	
0x40005cf	              0x55	                                push rbp	       732	deflate.c	
0x40005d0	              0x53	                                push rbx	       732	deflate.c	
0x40005d1	        0x4883ec08	                              sub rsp, 8	       732	deflate.c	
0x40005d5	          0x4889fd	                            mov rbp, rdi	       732	deflate.c	
0x40005d8	        0x4c8b6738	            mov r12, qword [rdi + 0x38] 	       734	deflate.c	
0x40005dc	          0x4c89e7	                            mov rdi, r12	       736	deflate.c	FUNCTION_12
0x40005df	      0xe800000000	                          call 0x40005e4	       736	deflate.c	FUNCTION_12
0x40005e4	      0x498b442428	            mov rax, qword [r12 + 0x28] 	       737	deflate.c	FUNCTION_12
0x40005e9	          0x8b5d20	            mov ebx, dword [rbp + 0x20] 	       738	deflate.c	FUNCTION_12
0x40005ec	            0x39d8	                            cmp eax, ebx	       738	deflate.c	FUNCTION_12
0x40005ee	           0xf46d8	                         cmovbe ebx, eax	       738	deflate.c	FUNCTION_12
0x40005f1	            0x85db	                           test ebx, ebx	       739	deflate.c	FUNCTION_12
0x40005f3	            0x7440	                            je 0x4000635	       739	deflate.c	FUNCTION_12
0x40005f5	          0x4189dd	                           mov r13d, ebx	       741	deflate.c	FUNCTION_12
0x40005f8	        0x488b7d18	            mov rdi, qword [rbp + 0x18] 	        53	string3.h	FUNCTION_25	CALL_3
0x40005fc	      0x498b742420	            mov rsi, qword [r12 + 0x20] 	        53	string3.h	FUNCTION_25	CALL_3
0x4000601	          0x4c89ea	                            mov rdx, r13	        53	string3.h	FUNCTION_25	CALL_3
0x4000604	      0xe800000000	                          call 0x4000609	        53	string3.h	FUNCTION_25	CALL_3
0x4000609	        0x4c016d18	            add qword [rbp + 0x18], r13 	       742	deflate.c	FUNCTION_12	IF_1
0x400060d	      0x4d016c2420	            add qword [r12 + 0x20], r13 	       743	deflate.c	FUNCTION_12	IF_2
0x4000612	        0x4c016d28	            add qword [rbp + 0x28], r13 	       744	deflate.c	FUNCTION_12
0x4000616	          0x295d20	             sub dword [rbp + 0x20], ebx	       745	deflate.c	FUNCTION_12	CALL_2
0x4000619	      0x498b442428	            mov rax, qword [r12 + 0x28] 	       746	deflate.c	FUNCTION_12
0x400061e	          0x4c29e8	                            sub rax, r13	       746	deflate.c	FUNCTION_12
0x4000621	      0x4989442428	             mov qword [r12 + 0x28], rax	       746	deflate.c	FUNCTION_12
0x4000626	          0x4885c0	                           test rax, rax	       747	deflate.c	FUNCTION_12
0x4000629	            0x750a	                           jne 0x4000635	       747	deflate.c	FUNCTION_12
0x400062b	      0x498b442410	            mov rax, qword [r12 + 0x10] 	       748	deflate.c	FUNCTION_12
0x4000630	      0x4989442420	             mov qword [r12 + 0x20], rax	       748	deflate.c	FUNCTION_12
0x4000635	        0x4883c408	                              add rsp, 8	       750	deflate.c	FUNCTION_12
0x4000639	              0x5b	                                 pop rbx	       750	deflate.c	FUNCTION_12
0x400063a	              0x5d	                                 pop rbp	       750	deflate.c	FUNCTION_12
0x400063b	            0x415c	                                 pop r12	       750	deflate.c	FUNCTION_12
0x400063d	            0x415d	                                 pop r13	       750	deflate.c	FUNCTION_12
0x400063f	              0xc3	                                     ret	       750	deflate.c	FUNCTION_12
slide_hash	CALL,0:ELSE,0:IF,0:FOR,0:DO,2:functions,0:WHILE,0:SWITCH,0	39
0x4000040	          0x8b4750	            mov eax, dword [rdi + 0x50] 	       206	deflate.c	
0x4000043	    0x8b8f84000000	            mov ecx, dword [rdi + 0x84] 	       208	deflate.c	FUNCTION_1
0x4000049	            0x89ce	                            mov esi, ecx	       209	deflate.c	FUNCTION_1
0x400004b	        0x488b5778	            mov rdx, qword [rdi + 0x78] 	       209	deflate.c	FUNCTION_1
0x400004f	        0x488d1472	                  lea rdx, [rdx + rsi*2]	       209	deflate.c	FUNCTION_1
0x4000053	          0x8d49ff	                      lea ecx, [rcx - 1]	       209	deflate.c	FUNCTION_1
0x4000056	          0x4801c9	                            add rcx, rcx	       209	deflate.c	FUNCTION_1
0x4000059	          0x4889d6	                            mov rsi, rdx	       209	deflate.c	FUNCTION_1
0x400005c	          0x4829ce	                            sub rsi, rcx	       209	deflate.c	FUNCTION_1
0x400005f	        0x4c8d46fe	                       lea r8, [rsi - 2]	       209	deflate.c	FUNCTION_1
0x4000063	        0x4883ea02	                              sub rdx, 2	       211	deflate.c	FUNCTION_1
0x4000067	           0xfb732	                   movzx esi, word [rdx]	       211	deflate.c	FUNCTION_1
0x400006a	            0x89f1	                            mov ecx, esi	       212	deflate.c	FUNCTION_1
0x400006c	            0x29c1	                            sub ecx, eax	       212	deflate.c	FUNCTION_1
0x400006e	            0x39f0	                            cmp eax, esi	       212	deflate.c	FUNCTION_1
0x4000070	      0xbe00000000	                              mov esi, 0	       212	deflate.c	FUNCTION_1
0x4000075	           0xf47ce	                          cmova ecx, esi	       212	deflate.c	FUNCTION_1
0x4000078	          0x66890a	                      mov word [rdx], cx	       212	deflate.c	FUNCTION_1
0x400007b	          0x4c39c2	                             cmp rdx, r8	       213	deflate.c	FUNCTION_1
0x400007e	            0x75e3	                           jne 0x4000063	       213	deflate.c	FUNCTION_1
0x4000080	            0x89c2	                            mov edx, eax	       216	deflate.c	FUNCTION_1	DO_1
0x4000082	        0x488b4f70	            mov rcx, qword [rdi + 0x70] 	       216	deflate.c	FUNCTION_1	DO_1
0x4000086	        0x488d1451	                  lea rdx, [rcx + rdx*2]	       216	deflate.c	FUNCTION_1	DO_1
0x400008a	          0x8d48ff	                      lea ecx, [rax - 1]	       216	deflate.c	FUNCTION_1	DO_1
0x400008d	          0x4801c9	                            add rcx, rcx	       216	deflate.c	FUNCTION_1	DO_1
0x4000090	          0x4889d7	                            mov rdi, rdx	       216	deflate.c	FUNCTION_1	DO_1
0x4000093	          0x4829cf	                            sub rdi, rcx	       216	deflate.c	FUNCTION_1	DO_1
0x4000096	        0x488d7ffe	                      lea rdi, [rdi - 2]	       216	deflate.c	FUNCTION_1	DO_1
0x400009a	        0x4883ea02	                              sub rdx, 2	       218	deflate.c	FUNCTION_1
0x400009e	           0xfb732	                   movzx esi, word [rdx]	       218	deflate.c	FUNCTION_1
0x40000a1	            0x89f1	                            mov ecx, esi	       219	deflate.c	FUNCTION_1
0x40000a3	            0x29c1	                            sub ecx, eax	       219	deflate.c	FUNCTION_1
0x40000a5	            0x39f0	                            cmp eax, esi	       219	deflate.c	FUNCTION_1
0x40000a7	      0xbe00000000	                              mov esi, 0	       219	deflate.c	FUNCTION_1
0x40000ac	           0xf47ce	                          cmova ecx, esi	       219	deflate.c	FUNCTION_1
0x40000af	          0x66890a	                      mov word [rdx], cx	       219	deflate.c	FUNCTION_1
0x40000b2	          0x4839fa	                            cmp rdx, rdi	       223	deflate.c	FUNCTION_1	DO_2
0x40000b5	            0x75e3	                           jne 0x400009a	       223	deflate.c	FUNCTION_1	DO_2
0x40000b7	            0xf3c3	                                     ret	       225	deflate.c	FUNCTION_1	DO_2
fill_window	CALL,9:ELSE,2:IF,12:FOR,0:DO,1:functions,0:WHILE,1:SWITCH,0	133
0x40003b9	            0x4155	                                push r13	      1484	deflate.c	
0x40003bb	            0x4154	                                push r12	      1484	deflate.c	
0x40003bd	              0x55	                                push rbp	      1484	deflate.c	
0x40003be	              0x53	                                push rbx	      1484	deflate.c	
0x40003bf	        0x4883ec08	                              sub rsp, 8	      1484	deflate.c	
0x40003c3	          0x4889fb	                            mov rbx, rdi	      1484	deflate.c	
0x40003c6	          0x8b6f50	            mov ebp, dword [rdi + 0x50] 	      1487	deflate.c	
0x40003c9	          0x4189ec	                           mov r12d, ebp	        53	string3.h	FUNCTION_25	CALL_3
0x40003cc	    0x8b93ac000000	            mov edx, dword [rbx + 0xac] 	      1492	deflate.c	FUNCTION_19
0x40003d2	        0x4c8b6b68	            mov r13, qword [rbx + 0x68] 	      1492	deflate.c	FUNCTION_19
0x40003d6	    0x442babb40000	            sub r13d, dword [rbx + 0xb4]	      1492	deflate.c	FUNCTION_19
0x40003dd	          0x4129d5	                           sub r13d, edx	      1492	deflate.c	FUNCTION_19
0x40003e0	            0x89e8	                            mov eax, ebp	      1510	deflate.c	FUNCTION_19	DO_1
0x40003e2	           0x34350	             add eax, dword [rbx + 0x50]	      1510	deflate.c	FUNCTION_19	DO_1
0x40003e5	      0x2d06010000	                          sub eax, 0x106	      1510	deflate.c	FUNCTION_19	DO_1
0x40003ea	            0x39c2	                            cmp edx, eax	      1510	deflate.c	FUNCTION_19	DO_1
0x40003ec	            0x7230	                            jb 0x400041e	      1510	deflate.c	FUNCTION_19	DO_1
0x40003ee	        0x488b7b60	            mov rdi, qword [rbx + 0x60] 	      1512	deflate.c	FUNCTION_19	DO_1
0x40003f2	            0x89ea	                            mov edx, ebp	        53	string3.h	FUNCTION_25	CALL_3
0x40003f4	          0x4429ea	                           sub edx, r13d	        53	string3.h	FUNCTION_25	CALL_3
0x40003f7	        0x4a8d3427	                    lea rsi, [rdi + r12]	        53	string3.h	FUNCTION_25	CALL_3
0x40003fb	      0xe800000000	                          call 0x4000400	        53	string3.h	FUNCTION_25	CALL_3
0x4000400	    0x29abb0000000	             sub dword [rbx + 0xb0], ebp	      1513	deflate.c	FUNCTION_19	DO_1
0x4000406	    0x29abac000000	             sub dword [rbx + 0xac], ebp	      1514	deflate.c	FUNCTION_19	DO_1	IF_4	CALL_2
0x400040c	    0x4c29a3980000	             sub qword [rbx + 0x98], r12	      1515	deflate.c	FUNCTION_19	DO_1	IF_4
0x4000413	          0x4889df	                            mov rdi, rbx	      1516	deflate.c	FUNCTION_19	DO_1	IF_4	CALL_3
0x4000416	      0xe825fcffff	                     call sym.slide_hash	      1516	deflate.c	FUNCTION_19	DO_1	IF_4	CALL_3
0x400041b	          0x4101ed	                           add r13d, ebp	      1517	deflate.c	FUNCTION_19	DO_1	IF_4
0x400041e	          0x488b3b	                    mov rdi, qword [rbx]	      1519	deflate.c	FUNCTION_19	DO_1	IF_4
0x4000421	        0x837f0800	                  cmp dword [rdi + 8], 0	      1519	deflate.c	FUNCTION_19	DO_1	IF_4
0x4000425	     0xf84fc000000	                            je 0x4000527	      1519	deflate.c	FUNCTION_19	DO_1	IF_4
0x400042b	    0x8bb3ac000000	            mov esi, dword [rbx + 0xac] 	      1534	deflate.c	FUNCTION_19	DO_1	IF_5
0x4000431	    0x8b83b4000000	            mov eax, dword [rbx + 0xb4] 	      1534	deflate.c	FUNCTION_19	DO_1	IF_5
0x4000437	          0x4801c6	                            add rsi, rax	      1534	deflate.c	FUNCTION_19	DO_1	IF_5
0x400043a	        0x48037360	             add rsi, qword [rbx + 0x60]	      1534	deflate.c	FUNCTION_19	DO_1	IF_5
0x400043e	          0x4489ea	                           mov edx, r13d	      1534	deflate.c	FUNCTION_19	DO_1	IF_5
0x4000441	      0xe8eefeffff	                       call sym.read_buf	      1534	deflate.c	FUNCTION_19	DO_1	IF_5
0x4000446	     0x383b4000000	             add eax, dword [rbx + 0xb4]	      1535	deflate.c	FUNCTION_19	DO_1
0x400044c	    0x8983b4000000	             mov dword [rbx + 0xb4], eax	      1535	deflate.c	FUNCTION_19	DO_1
0x4000452	    0x8b932c170000	          mov edx, dword [rbx + 0x172c] 	      1538	deflate.c	FUNCTION_19	DO_1	CALL_6
0x4000458	             0x1d0	                            add eax, edx	      1538	deflate.c	FUNCTION_19	DO_1	CALL_6
0x400045a	          0x83f802	                              cmp eax, 2	      1538	deflate.c	FUNCTION_19	DO_1	CALL_6
0x400045d	     0xf86ab000000	                           jbe 0x400050e	      1538	deflate.c	FUNCTION_19	DO_1	CALL_6
0x4000463	    0x8b83ac000000	            mov eax, dword [rbx + 0xac] 	      1539	deflate.c	FUNCTION_19	DO_1
0x4000469	            0x29d0	                            sub eax, edx	      1539	deflate.c	FUNCTION_19	DO_1
0x400046b	            0x89c2	                            mov edx, eax	      1539	deflate.c	FUNCTION_19	DO_1
0x400046d	        0x488b4b60	            mov rcx, qword [rbx + 0x60] 	      1540	deflate.c	FUNCTION_19	DO_1
0x4000471	            0x89c0	                            mov eax, eax	      1540	deflate.c	FUNCTION_19	DO_1
0x4000473	         0xfb60401	             movzx eax, byte [rcx + rax]	      1540	deflate.c	FUNCTION_19	DO_1
0x4000477	    0x898380000000	             mov dword [rbx + 0x80], eax	      1540	deflate.c	FUNCTION_19	DO_1
0x400047d	          0x8d7201	                      lea esi, [rdx + 1]	      1541	deflate.c	FUNCTION_19	DO_1
0x4000480	         0xfb63431	             movzx esi, byte [rcx + rsi]	      1541	deflate.c	FUNCTION_19	DO_1
0x4000484	    0x8b8b90000000	            mov ecx, dword [rbx + 0x90] 	      1541	deflate.c	FUNCTION_19	DO_1
0x400048a	            0xd3e0	                             shl eax, cl	      1541	deflate.c	FUNCTION_19	DO_1
0x400048c	            0x31f0	                            xor eax, esi	      1541	deflate.c	FUNCTION_19	DO_1
0x400048e	    0x23838c000000	             and eax, dword [rbx + 0x8c]	      1541	deflate.c	FUNCTION_19	DO_1
0x4000494	    0x898380000000	             mov dword [rbx + 0x80], eax	      1541	deflate.c	FUNCTION_19	DO_1
0x400049a	            0xeb69	                           jmp 0x4000505	      1545	deflate.c	FUNCTION_19	DO_1	IF_6
0x400049c	          0x8d4202	                      lea eax, [rdx + 2]	      1546	deflate.c	FUNCTION_19	DO_1	IF_6
0x400049f	        0x488b4b60	            mov rcx, qword [rbx + 0x60] 	      1546	deflate.c	FUNCTION_19	DO_1	IF_6
0x40004a3	         0xfb63401	             movzx esi, byte [rcx + rax]	      1546	deflate.c	FUNCTION_19	DO_1	IF_6
0x40004a7	    0x8b8b90000000	            mov ecx, dword [rbx + 0x90] 	      1546	deflate.c	FUNCTION_19	DO_1	IF_6
0x40004ad	    0x8b8380000000	            mov eax, dword [rbx + 0x80] 	      1546	deflate.c	FUNCTION_19	DO_1	IF_6
0x40004b3	            0xd3e0	                             shl eax, cl	      1546	deflate.c	FUNCTION_19	DO_1	IF_6
0x40004b5	            0x31f0	                            xor eax, esi	      1546	deflate.c	FUNCTION_19	DO_1	IF_6
0x40004b7	    0x23838c000000	             and eax, dword [rbx + 0x8c]	      1546	deflate.c	FUNCTION_19	DO_1	IF_6
0x40004bd	    0x898380000000	             mov dword [rbx + 0x80], eax	      1546	deflate.c	FUNCTION_19	DO_1	IF_6
0x40004c3	            0x89c0	                            mov eax, eax	      1548	deflate.c	FUNCTION_19	DO_1	IF_6
0x40004c5	        0x488b4b78	            mov rcx, qword [rbx + 0x78] 	      1548	deflate.c	FUNCTION_19	DO_1	IF_6
0x40004c9	         0xfb73441	           movzx esi, word [rcx + rax*2]	      1548	deflate.c	FUNCTION_19	DO_1	IF_6
0x40004cd	            0x89d1	                            mov ecx, edx	      1548	deflate.c	FUNCTION_19	DO_1	IF_6
0x40004cf	          0x234b58	             and ecx, dword [rbx + 0x58]	      1548	deflate.c	FUNCTION_19	DO_1	IF_6
0x40004d2	        0x488b4370	            mov rax, qword [rbx + 0x70] 	      1548	deflate.c	FUNCTION_19	DO_1	IF_6
0x40004d6	        0x66893448	              mov word [rax + rcx*2], si	      1548	deflate.c	FUNCTION_19	DO_1	IF_6
0x40004da	    0x8b8b80000000	            mov ecx, dword [rbx + 0x80] 	      1550	deflate.c	FUNCTION_19	DO_1	IF_6
0x40004e0	        0x488b4378	            mov rax, qword [rbx + 0x78] 	      1550	deflate.c	FUNCTION_19	DO_1	IF_6
0x40004e4	        0x66891448	              mov word [rax + rcx*2], dx	      1550	deflate.c	FUNCTION_19	DO_1	IF_6
0x40004e8	          0x83c201	                              add edx, 1	      1551	deflate.c	FUNCTION_19	DO_1	IF_6
0x40004eb	    0x8b832c170000	          mov eax, dword [rbx + 0x172c] 	      1552	deflate.c	FUNCTION_19	DO_1	IF_6
0x40004f1	          0x83e801	                              sub eax, 1	      1552	deflate.c	FUNCTION_19	DO_1	IF_6
0x40004f4	    0x89832c170000	          mov dword [rbx + 0x172c], eax 	      1552	deflate.c	FUNCTION_19	DO_1	IF_6
0x40004fa	     0x383b4000000	             add eax, dword [rbx + 0xb4]	      1553	deflate.c	FUNCTION_19	DO_1	IF_6
0x4000500	          0x83f802	                              cmp eax, 2	      1553	deflate.c	FUNCTION_19	DO_1	IF_6
0x4000503	            0x7609	                           jbe 0x400050e	      1553	deflate.c	FUNCTION_19	DO_1	IF_6
0x4000505	    0x83bb2c170000	             cmp dword [rbx + 0x172c], 0	      1545	deflate.c	FUNCTION_19	DO_1	IF_6
0x400050c	            0x758e	                           jne 0x400049c	      1545	deflate.c	FUNCTION_19	DO_1	IF_6
0x400050e	    0x81bbb4000000	          cmp dword [rbx + 0xb4], 0x105 	      1561	deflate.c	FUNCTION_19	DO_1
0x4000518	            0x770d	                            ja 0x4000527	      1561	deflate.c	FUNCTION_19	DO_1
0x400051a	          0x488b03	                    mov rax, qword [rbx]	      1561	deflate.c	FUNCTION_19	DO_1
0x400051d	        0x83780800	                  cmp dword [rax + 8], 0	      1561	deflate.c	FUNCTION_19	DO_1
0x4000521	     0xf85a5feffff	                           jne 0x40003cc	      1561	deflate.c	FUNCTION_19	DO_1
0x4000527	    0x488b8b381700	          mov rcx, qword [rbx + 0x1738] 	      1570	deflate.c	FUNCTION_19	DO_1
0x400052e	        0x488b4368	            mov rax, qword [rbx + 0x68] 	      1570	deflate.c	FUNCTION_19	DO_1
0x4000532	          0x4839c1	                            cmp rcx, rax	      1570	deflate.c	FUNCTION_19	DO_1
0x4000535	     0xf8385000000	                           jae 0x40005c0	      1570	deflate.c	FUNCTION_19	DO_1
0x400053b	    0x8babac000000	            mov ebp, dword [rbx + 0xac] 	      1571	deflate.c	FUNCTION_19	DO_1
0x4000541	    0x8b93b4000000	            mov edx, dword [rbx + 0xb4] 	      1571	deflate.c	FUNCTION_19	DO_1
0x4000547	      0x4c8d641500	                    lea r12, [rbp + rdx]	      1571	deflate.c	FUNCTION_19	DO_1
0x400054c	          0x4c39e1	                            cmp rcx, r12	      1574	deflate.c	FUNCTION_19	IF_8
0x400054f	            0x7331	                           jae 0x4000582	      1574	deflate.c	FUNCTION_19	IF_8
0x4000551	          0x4c29e0	                            sub rax, r12	      1578	deflate.c	FUNCTION_19	IF_8	IF_9
0x4000554	    0x483d02010000	                          cmp rax, 0x102	      1578	deflate.c	FUNCTION_19	IF_8	IF_9
0x400055a	      0xbd02010000	                          mov ebp, 0x102	      1578	deflate.c	FUNCTION_19	IF_8	IF_9
0x400055f	        0x480f46e8	                         cmovbe rbp, rax	      1578	deflate.c	FUNCTION_19	IF_8	IF_9
0x4000563	            0x89ea	                            mov edx, ebp	        90	string3.h	FUNCTION_28	CALL_6
0x4000565	          0x4c89e7	                            mov rdi, r12	        90	string3.h	FUNCTION_28	CALL_6
0x4000568	        0x48037b60	             add rdi, qword [rbx + 0x60]	        90	string3.h	FUNCTION_28	CALL_6
0x400056c	      0xbe00000000	                              mov esi, 0	        90	string3.h	FUNCTION_28	CALL_6
0x4000571	      0xe800000000	                          call 0x4000576	        90	string3.h	FUNCTION_28	CALL_6
0x4000576	          0x4c01e5	                            add rbp, r12	      1582	deflate.c	FUNCTION_19	IF_8	IF_9
0x4000579	    0x4889ab381700	          mov qword [rbx + 0x1738], rbp 	      1582	deflate.c	FUNCTION_19	IF_8	IF_9
0x4000580	            0xeb3e	                           jmp 0x40005c0	      1582	deflate.c	FUNCTION_19	IF_8	IF_9
0x4000582	    0x498d94240201	                  lea rdx, [r12 + 0x102]	      1584	deflate.c	FUNCTION_19	IF_8	IF_9	IF_10
0x400058a	          0x4839d1	                            cmp rcx, rdx	      1584	deflate.c	FUNCTION_19	IF_8	IF_9	IF_10
0x400058d	            0x7331	                           jae 0x40005c0	      1584	deflate.c	FUNCTION_19	IF_8	IF_9	IF_10
0x400058f	          0x4c89e5	                            mov rbp, r12	      1589	deflate.c	FUNCTION_19	IF_8	ELSE_2	IF_11
0x4000592	          0x4829cd	                            sub rbp, rcx	      1589	deflate.c	FUNCTION_19	IF_8	ELSE_2	IF_11
0x4000595	    0x488dad020100	                  lea rbp, [rbp + 0x102]	      1589	deflate.c	FUNCTION_19	IF_8	ELSE_2	IF_11
0x400059c	          0x4829c8	                            sub rax, rcx	      1590	deflate.c	FUNCTION_19	IF_8	ELSE_2	IF_11
0x400059f	          0x4839c5	                            cmp rbp, rax	      1590	deflate.c	FUNCTION_19	IF_8	ELSE_2	IF_11
0x40005a2	        0x480f47e8	                          cmova rbp, rax	      1590	deflate.c	FUNCTION_19	IF_8	ELSE_2	IF_11
0x40005a6	            0x89ea	                            mov edx, ebp	        90	string3.h	FUNCTION_28	CALL_6
0x40005a8	          0x4889cf	                            mov rdi, rcx	        90	string3.h	FUNCTION_28	CALL_6
0x40005ab	        0x48037b60	             add rdi, qword [rbx + 0x60]	        90	string3.h	FUNCTION_28	CALL_6
0x40005af	      0xbe00000000	                              mov esi, 0	        90	string3.h	FUNCTION_28	CALL_6
0x40005b4	      0xe800000000	                          call 0x40005b9	        90	string3.h	FUNCTION_28	CALL_6
0x40005b9	    0x4801ab381700	          add qword [rbx + 0x1738], rbp 	      1593	deflate.c	FUNCTION_19	IF_8	ELSE_2	IF_11
0x40005c0	        0x4883c408	                              add rsp, 8	      1599	deflate.c	FUNCTION_19	IF_8
0x40005c4	              0x5b	                                 pop rbx	      1599	deflate.c	FUNCTION_19	IF_8
0x40005c5	              0x5d	                                 pop rbp	      1599	deflate.c	FUNCTION_19	IF_8
0x40005c6	            0x415c	                                 pop r12	      1599	deflate.c	FUNCTION_19	IF_8
0x40005c8	            0x415d	                                 pop r13	      1599	deflate.c	FUNCTION_19	IF_8
0x40005ca	              0xc3	                                     ret	      1599	deflate.c	FUNCTION_19	IF_8
deflatePrime	CALL,2:ELSE,0:IF,3:FOR,0:DO,1:functions,0:WHILE,0:SWITCH,0	54
0x40018dc	            0x4157	                                push r15	       546	deflate.c	
0x40018de	            0x4156	                                push r14	       546	deflate.c	
0x40018e0	            0x4155	                                push r13	       546	deflate.c	
0x40018e2	            0x4154	                                push r12	       546	deflate.c	
0x40018e4	              0x55	                                push rbp	       546	deflate.c	
0x40018e5	              0x53	                                push rbx	       546	deflate.c	
0x40018e6	        0x4883ec08	                              sub rsp, 8	       546	deflate.c	
0x40018ea	          0x4889fb	                            mov rbx, rdi	       546	deflate.c	
0x40018ed	          0x4189f4	                           mov r12d, esi	       546	deflate.c	
0x40018f0	          0x4189d5	                           mov r13d, edx	       546	deflate.c	
0x40018f3	      0xe8c1e7ffff	              call sym.deflateStateCheck	       550	deflate.c	FUNCTION_7
0x40018f8	            0x85c0	                           test eax, eax	       550	deflate.c	FUNCTION_7
0x40018fa	            0x7566	                           jne 0x4001962	       550	deflate.c	FUNCTION_7
0x40018fc	          0x4189c7	                           mov r15d, eax	       550	deflate.c	FUNCTION_7
0x40018ff	        0x488b6b38	            mov rbp, qword [rbx + 0x38] 	       551	deflate.c	FUNCTION_7
0x4001903	        0x488b4520	            mov rax, qword [rbp + 0x20] 	       552	deflate.c	FUNCTION_7
0x4001907	        0x4883c002	                              add rax, 2	       552	deflate.c	FUNCTION_7
0x400190b	    0x483985101700	          cmp qword [rbp + 0x1710], rax 	       552	deflate.c	FUNCTION_7
0x4001912	            0x7256	                            jb 0x400196a	       552	deflate.c	FUNCTION_7
0x4001914	    0x41be10000000	                          mov r14d, 0x10	       555	deflate.c	FUNCTION_7
0x400191a	    0x8b9534170000	          mov edx, dword [rbp + 0x1734] 	       555	deflate.c	FUNCTION_7
0x4001920	          0x4489f3	                           mov ebx, r14d	       555	deflate.c	FUNCTION_7
0x4001923	            0x29d3	                            sub ebx, edx	       555	deflate.c	FUNCTION_7
0x4001925	          0x4139dc	                           cmp r12d, ebx	       555	deflate.c	FUNCTION_7
0x4001928	        0x410f4edc	                        cmovle ebx, r12d	       555	deflate.c	FUNCTION_7
0x400192c	      0xb801000000	                              mov eax, 1	       558	deflate.c	FUNCTION_7	DO_1
0x4001931	            0x89d9	                            mov ecx, ebx	       558	deflate.c	FUNCTION_7	DO_1
0x4001933	            0xd3e0	                             shl eax, cl	       558	deflate.c	FUNCTION_7	DO_1
0x4001935	          0x83e801	                              sub eax, 1	       558	deflate.c	FUNCTION_7	DO_1
0x4001938	          0x4421e8	                           and eax, r13d	       558	deflate.c	FUNCTION_7	DO_1
0x400193b	            0x89d1	                            mov ecx, edx	       558	deflate.c	FUNCTION_7	DO_1
0x400193d	            0xd3e0	                             shl eax, cl	       558	deflate.c	FUNCTION_7	DO_1
0x400193f	    0x660985301700	              or word [rbp + 0x1730], ax	       558	deflate.c	FUNCTION_7	DO_1
0x4001946	             0x1da	                            add edx, ebx	       559	deflate.c	FUNCTION_7	DO_1
0x4001948	    0x899534170000	          mov dword [rbp + 0x1734], edx 	       559	deflate.c	FUNCTION_7	DO_1
0x400194e	          0x4889ef	                            mov rdi, rbp	       560	deflate.c	FUNCTION_7	DO_1	IF_3
0x4001951	      0xe800000000	                          call 0x4001956	       560	deflate.c	FUNCTION_7	DO_1	IF_3
0x4001956	            0x89d9	                            mov ecx, ebx	       561	deflate.c	FUNCTION_7	DO_1	IF_3
0x4001958	          0x41d3fd	                            sar r13d, cl	       561	deflate.c	FUNCTION_7	DO_1	IF_3
0x400195b	          0x4129dc	                           sub r12d, ebx	       563	deflate.c	FUNCTION_7	DO_1
0x400195e	            0x75ba	                           jne 0x400191a	       563	deflate.c	FUNCTION_7	DO_1
0x4001960	            0xeb0e	                           jmp 0x4001970	       563	deflate.c	FUNCTION_7	DO_1
0x4001962	    0x41bffeffffff	                    mov r15d, 0xfffffffe	       550	deflate.c	FUNCTION_7
0x4001968	            0xeb06	                           jmp 0x4001970	       550	deflate.c	FUNCTION_7
0x400196a	    0x41bffbffffff	                    mov r15d, 0xfffffffb	       553	deflate.c	FUNCTION_7
0x4001970	          0x4489f8	                           mov eax, r15d	       565	deflate.c	FUNCTION_7	DO_1
0x4001973	        0x4883c408	                              add rsp, 8	       565	deflate.c	FUNCTION_7	DO_1
0x4001977	              0x5b	                                 pop rbx	       565	deflate.c	FUNCTION_7	DO_1
0x4001978	              0x5d	                                 pop rbp	       565	deflate.c	FUNCTION_7	DO_1
0x4001979	            0x415c	                                 pop r12	       565	deflate.c	FUNCTION_7	DO_1
0x400197b	            0x415d	                                 pop r13	       565	deflate.c	FUNCTION_7	DO_1
0x400197d	            0x415e	                                 pop r14	       565	deflate.c	FUNCTION_7	DO_1
0x400197f	            0x415f	                                 pop r15	       565	deflate.c	FUNCTION_7	DO_1
0x4001981	              0xc3	                                     ret	       565	deflate.c	FUNCTION_7	DO_1
deflate_fast	CALL,6:ELSE,2:IF,10:FOR,1:DO,1:functions,0:WHILE,0:SWITCH,0	241
0x4000b99	              0x55	                                push rbp	      1827	deflate.c	
0x4000b9a	              0x53	                                push rbx	      1827	deflate.c	
0x4000b9b	        0x4883ec08	                              sub rsp, 8	      1827	deflate.c	
0x4000b9f	          0x4889fb	                            mov rbx, rdi	      1827	deflate.c	
0x4000ba2	            0x89f5	                            mov ebp, esi	      1827	deflate.c	
0x4000ba4	    0x81bbb4000000	          cmp dword [rbx + 0xb4], 0x105 	      1837	deflate.c	FUNCTION_21	FOR_1
0x4000bae	            0x7725	                            ja 0x4000bd5	      1837	deflate.c	FUNCTION_21	FOR_1
0x4000bb0	          0x4889df	                            mov rdi, rbx	      1838	deflate.c	FUNCTION_21	FOR_1
0x4000bb3	      0xe801f8ffff	                    call sym.fill_window	      1838	deflate.c	FUNCTION_21	FOR_1
0x4000bb8	    0x8b83b4000000	            mov eax, dword [rbx + 0xb4] 	      1839	deflate.c	FUNCTION_21	FOR_1
0x4000bbe	            0x85ed	                           test ebp, ebp	      1839	deflate.c	FUNCTION_21	FOR_1
0x4000bc0	            0x750b	                           jne 0x4000bcd	      1839	deflate.c	FUNCTION_21	FOR_1
0x4000bc2	      0x3d05010000	                          cmp eax, 0x105	      1839	deflate.c	FUNCTION_21	FOR_1
0x4000bc7	     0xf86c6030000	                           jbe 0x4000f93	      1839	deflate.c	FUNCTION_21	FOR_1
0x4000bcd	            0x85c0	                           test eax, eax	      1842	deflate.c	FUNCTION_21	FOR_1	IF_1	CALL_1
0x4000bcf	     0xf84f5020000	                            je 0x4000eca	      1842	deflate.c	FUNCTION_21	FOR_1	IF_1	CALL_1
0x4000bd5	    0x83bbb4000000	               cmp dword [rbx + 0xb4], 2	      1849	deflate.c	FUNCTION_21	FOR_1
0x4000bdc	            0x767f	                           jbe 0x4000c5d	      1849	deflate.c	FUNCTION_21	FOR_1
0x4000bde	    0x8b93ac000000	            mov edx, dword [rbx + 0xac] 	      1850	deflate.c	FUNCTION_21	FOR_1
0x4000be4	          0x8d4202	                      lea eax, [rdx + 2]	      1850	deflate.c	FUNCTION_21	FOR_1
0x4000be7	        0x488b4b60	            mov rcx, qword [rbx + 0x60] 	      1850	deflate.c	FUNCTION_21	FOR_1
0x4000beb	         0xfb63401	             movzx esi, byte [rcx + rax]	      1850	deflate.c	FUNCTION_21	FOR_1
0x4000bef	    0x8b8b90000000	            mov ecx, dword [rbx + 0x90] 	      1850	deflate.c	FUNCTION_21	FOR_1
0x4000bf5	    0x8b8380000000	            mov eax, dword [rbx + 0x80] 	      1850	deflate.c	FUNCTION_21	FOR_1
0x4000bfb	            0xd3e0	                             shl eax, cl	      1850	deflate.c	FUNCTION_21	FOR_1
0x4000bfd	            0x31f0	                            xor eax, esi	      1850	deflate.c	FUNCTION_21	FOR_1
0x4000bff	    0x23838c000000	             and eax, dword [rbx + 0x8c]	      1850	deflate.c	FUNCTION_21	FOR_1
0x4000c05	    0x898380000000	             mov dword [rbx + 0x80], eax	      1850	deflate.c	FUNCTION_21	FOR_1
0x4000c0b	            0x89c0	                            mov eax, eax	      1850	deflate.c	FUNCTION_21	FOR_1
0x4000c0d	        0x488b4b78	            mov rcx, qword [rbx + 0x78] 	      1850	deflate.c	FUNCTION_21	FOR_1
0x4000c11	         0xfb73441	           movzx esi, word [rcx + rax*2]	      1850	deflate.c	FUNCTION_21	FOR_1
0x4000c15	          0x235358	             and edx, dword [rbx + 0x58]	      1850	deflate.c	FUNCTION_21	FOR_1
0x4000c18	        0x488b4370	            mov rax, qword [rbx + 0x70] 	      1850	deflate.c	FUNCTION_21	FOR_1
0x4000c1c	        0x66893450	              mov word [rax + rdx*2], si	      1850	deflate.c	FUNCTION_21	FOR_1
0x4000c20	           0xfb7f6	                           movzx esi, si	      1850	deflate.c	FUNCTION_21	FOR_1
0x4000c23	    0x8b9380000000	            mov edx, dword [rbx + 0x80] 	      1850	deflate.c	FUNCTION_21	FOR_1
0x4000c29	        0x488b4378	            mov rax, qword [rbx + 0x78] 	      1850	deflate.c	FUNCTION_21	FOR_1
0x4000c2d	    0x8b8bac000000	            mov ecx, dword [rbx + 0xac] 	      1850	deflate.c	FUNCTION_21	FOR_1
0x4000c33	        0x66890c50	              mov word [rax + rdx*2], cx	      1850	deflate.c	FUNCTION_21	FOR_1
0x4000c37	            0x85f6	                           test esi, esi	      1856	deflate.c	FUNCTION_21	FOR_1
0x4000c39	            0x7422	                            je 0x4000c5d	      1856	deflate.c	FUNCTION_21	FOR_1
0x4000c3b	    0x8b93ac000000	            mov edx, dword [rbx + 0xac] 	      1856	deflate.c	FUNCTION_21	FOR_1
0x4000c41	            0x29f2	                            sub edx, esi	      1856	deflate.c	FUNCTION_21	FOR_1
0x4000c43	          0x8b4350	            mov eax, dword [rbx + 0x50] 	      1856	deflate.c	FUNCTION_21	FOR_1
0x4000c46	      0x2d06010000	                          sub eax, 0x106	      1856	deflate.c	FUNCTION_21	FOR_1
0x4000c4b	            0x39c2	                            cmp edx, eax	      1856	deflate.c	FUNCTION_21	FOR_1
0x4000c4d	            0x770e	                            ja 0x4000c5d	      1856	deflate.c	FUNCTION_21	FOR_1
0x4000c4f	          0x4889df	                            mov rdi, rbx	      1861	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000c52	      0xe809f5ffff	                  call sym.longest_match	      1861	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000c57	    0x8983a0000000	             mov dword [rbx + 0xa0], eax	      1861	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000c5d	    0x8b83a0000000	            mov eax, dword [rbx + 0xa0] 	      1864	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000c63	          0x83f802	                              cmp eax, 2	      1864	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000c66	     0xf8692010000	                           jbe 0x4000dfe	      1864	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000c6c	          0x8d50fd	                      lea edx, [rax - 3]	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000c6f	    0x8b83ac000000	            mov eax, dword [rbx + 0xac] 	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000c75	    0x662b83b00000	               sub ax, word [rbx + 0xb0]	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000c7c	    0x8bb30c170000	          mov esi, dword [rbx + 0x170c] 	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000c82	    0x488b8b101700	          mov rcx, qword [rbx + 0x1710] 	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000c89	        0x66890471	              mov word [rcx + rsi*2], ax	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000c8d	    0x488bb3001700	          mov rsi, qword [rbx + 0x1700] 	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000c94	    0x8b8b0c170000	          mov ecx, dword [rbx + 0x170c] 	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000c9a	          0x8d7901	                      lea edi, [rcx + 1]	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000c9d	    0x89bb0c170000	          mov dword [rbx + 0x170c], edi 	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000ca3	            0x89c9	                            mov ecx, ecx	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000ca5	          0x88140e	                mov byte [rsi + rcx], dl	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000ca8	          0x83e801	                              sub eax, 1	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000cab	           0xfb6d2	                           movzx edx, dl	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000cae	     0xfb692000000	                   movzx edx, byte [rdx]	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000cb5	    0x66838493d804	       add word [rbx + rdx*4 + 0x4d8], 1	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000cbe	        0x663dff00	                            cmp ax, 0xff	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000cc2	            0x770c	                            ja 0x4000cd0	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000cc4	           0xfb7c0	                           movzx eax, ax	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000cc7	     0xfb680000000	                   movzx eax, byte [rax]	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000cce	            0xeb17	                           jmp 0x4000ce7	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000cd0	        0x66c1e807	                               shr ax, 7	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000cd4	    0x488d80000100	                  lea rax, [rax + 0x100]	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000cdb	      0x25ff030000	                          and eax, 0x3ff	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000ce0	     0xfb680000000	                   movzx eax, byte [rax]	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000ce7	            0x4898	                                    cdqe	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000ce9	    0x66838483c809	       add word [rbx + rax*4 + 0x9c8], 1	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000cf2	    0x8b8308170000	          mov eax, dword [rbx + 0x1708] 	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000cf8	          0x83e801	                              sub eax, 1	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000cfb	    0x3b830c170000	          cmp eax, dword [rbx + 0x170c] 	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000d01	        0x400f94c6	                                sete sil	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000d05	        0x400fb6f6	                          movzx esi, sil	      1867	deflate.c	FUNCTION_21	FOR_1	IF_5
0x4000d09	    0x8b83a0000000	            mov eax, dword [rbx + 0xa0] 	      1870	deflate.c	FUNCTION_21	FOR_1	IF_6
0x4000d0f	    0x8b93b4000000	            mov edx, dword [rbx + 0xb4] 	      1870	deflate.c	FUNCTION_21	FOR_1	IF_6
0x4000d15	            0x29c2	                            sub edx, eax	      1870	deflate.c	FUNCTION_21	FOR_1	IF_6
0x4000d17	    0x8993b4000000	             mov dword [rbx + 0xb4], edx	      1870	deflate.c	FUNCTION_21	FOR_1	IF_6
0x4000d1d	    0x3b83c0000000	            cmp eax, dword [rbx + 0xc0] 	      1876	deflate.c	FUNCTION_21	FOR_1	IF_6
0x4000d23	     0xf8790000000	                            ja 0x4000db9	      1876	deflate.c	FUNCTION_21	FOR_1	IF_6
0x4000d29	          0x83fa02	                              cmp edx, 2	      1876	deflate.c	FUNCTION_21	FOR_1	IF_6
0x4000d2c	     0xf8687000000	                           jbe 0x4000db9	      1876	deflate.c	FUNCTION_21	FOR_1	IF_6
0x4000d32	          0x83e801	                              sub eax, 1	      1878	deflate.c	FUNCTION_21	FOR_1	IF_6
0x4000d35	    0x8983a0000000	             mov dword [rbx + 0xa0], eax	      1878	deflate.c	FUNCTION_21	FOR_1	IF_6
0x4000d3b	    0x8b83ac000000	            mov eax, dword [rbx + 0xac] 	      1880	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4000d41	          0x8d5001	                      lea edx, [rax + 1]	      1880	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4000d44	    0x8993ac000000	             mov dword [rbx + 0xac], edx	      1880	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4000d4a	          0x8d4003	                      lea eax, [rax + 3]	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4000d4d	        0x488b4b60	            mov rcx, qword [rbx + 0x60] 	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4000d51	         0xfb63c01	             movzx edi, byte [rcx + rax]	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4000d55	    0x8b8b90000000	            mov ecx, dword [rbx + 0x90] 	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4000d5b	    0x8b8380000000	            mov eax, dword [rbx + 0x80] 	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4000d61	            0xd3e0	                             shl eax, cl	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4000d63	            0x31f8	                            xor eax, edi	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4000d65	    0x23838c000000	             and eax, dword [rbx + 0x8c]	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4000d6b	    0x898380000000	             mov dword [rbx + 0x80], eax	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4000d71	            0x89c0	                            mov eax, eax	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4000d73	        0x488b4b78	            mov rcx, qword [rbx + 0x78] 	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4000d77	         0xfb70c41	           movzx ecx, word [rcx + rax*2]	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4000d7b	          0x235358	             and edx, dword [rbx + 0x58]	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4000d7e	        0x488b4370	            mov rax, qword [rbx + 0x70] 	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4000d82	        0x66890c50	              mov word [rax + rdx*2], cx	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4000d86	    0x8b9380000000	            mov edx, dword [rbx + 0x80] 	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4000d8c	        0x488b4378	            mov rax, qword [rbx + 0x78] 	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4000d90	    0x8b8bac000000	            mov ecx, dword [rbx + 0xac] 	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4000d96	        0x66890c50	              mov word [rax + rdx*2], cx	      1881	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4000d9a	    0x8b83a0000000	            mov eax, dword [rbx + 0xa0] 	      1885	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7	DO_1
0x4000da0	          0x83e801	                              sub eax, 1	      1885	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7	DO_1
0x4000da3	    0x8983a0000000	             mov dword [rbx + 0xa0], eax	      1885	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7	DO_1
0x4000da9	            0x85c0	                           test eax, eax	      1885	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7	DO_1
0x4000dab	            0x758e	                           jne 0x4000d3b	      1885	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7	DO_1
0x4000dad	    0x8383ac000000	               add dword [rbx + 0xac], 1	      1886	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7	DO_1
0x4000db4	      0xe9b2000000	                           jmp 0x4000e6b	      1886	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7	DO_1
0x4000db9	     0x383ac000000	             add eax, dword [rbx + 0xac]	      1890	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4000dbf	    0x8983ac000000	             mov dword [rbx + 0xac], eax	      1890	deflate.c	FUNCTION_21	FOR_1	IF_6	IF_7
0x4000dc5	    0xc783a0000000	               mov dword [rbx + 0xa0], 0	      1891	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000dcf	        0x488b4b60	            mov rcx, qword [rbx + 0x60] 	      1892	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000dd3	            0x89c2	                            mov edx, eax	      1892	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000dd5	         0xfb61411	             movzx edx, byte [rcx + rdx]	      1892	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000dd9	    0x899380000000	             mov dword [rbx + 0x80], edx	      1892	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000ddf	          0x8d4001	                      lea eax, [rax + 1]	      1893	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000de2	         0xfb60401	             movzx eax, byte [rcx + rax]	      1893	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000de6	    0x8b8b90000000	            mov ecx, dword [rbx + 0x90] 	      1893	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000dec	            0xd3e2	                             shl edx, cl	      1893	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000dee	            0x31c2	                            xor edx, eax	      1893	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000df0	    0x23938c000000	             and edx, dword [rbx + 0x8c]	      1893	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000df6	    0x899380000000	             mov dword [rbx + 0x80], edx	      1893	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000dfc	            0xeb6d	                           jmp 0x4000e6b	      1893	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000dfe	    0x8b83ac000000	            mov eax, dword [rbx + 0xac] 	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000e04	        0x488b5360	            mov rdx, qword [rbx + 0x60] 	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000e08	         0xfb60402	             movzx eax, byte [rdx + rax]	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000e0c	    0x8b8b0c170000	          mov ecx, dword [rbx + 0x170c] 	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000e12	    0x488b93101700	          mov rdx, qword [rbx + 0x1710] 	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000e19	    0x66c7044a0000	               mov word [rdx + rcx*2], 0	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000e1f	    0x488b8b001700	          mov rcx, qword [rbx + 0x1700] 	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000e26	    0x8b930c170000	          mov edx, dword [rbx + 0x170c] 	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000e2c	          0x8d7201	                      lea esi, [rdx + 1]	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000e2f	    0x89b30c170000	          mov dword [rbx + 0x170c], esi 	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000e35	            0x89d2	                            mov edx, edx	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000e37	          0x880411	                mov byte [rcx + rdx], al	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000e3a	           0xfb6c0	                           movzx eax, al	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000e3d	    0x66838483d400	        add word [rbx + rax*4 + 0xd4], 1	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000e46	    0x8b8308170000	          mov eax, dword [rbx + 0x1708] 	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000e4c	          0x83e801	                              sub eax, 1	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000e4f	    0x3b830c170000	          cmp eax, dword [rbx + 0x170c] 	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000e55	        0x400f94c6	                                sete sil	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000e59	        0x400fb6f6	                          movzx esi, sil	      1904	deflate.c	FUNCTION_21	FOR_1	IF_6	ELSE_1
0x4000e5d	    0x83abb4000000	               sub dword [rbx + 0xb4], 1	      1905	deflate.c	FUNCTION_21	FOR_1	ELSE_2
0x4000e64	    0x8383ac000000	               add dword [rbx + 0xac], 1	      1906	deflate.c	FUNCTION_21	FOR_1	ELSE_2
0x4000e6b	            0x85f6	                           test esi, esi	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4000e6d	     0xf8431fdffff	                            je 0x4000ba4	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4000e73	    0x488b83980000	            mov rax, qword [rbx + 0x98] 	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4000e7a	    0x8b93ac000000	            mov edx, dword [rbx + 0xac] 	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4000e80	          0x4829c2	                            sub rdx, rax	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4000e83	      0xbe00000000	                              mov esi, 0	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4000e88	          0x4885c0	                           test rax, rax	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4000e8b	            0x7809	                            js 0x4000e96	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4000e8d	            0x89c0	                            mov eax, eax	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4000e8f	        0x48034360	             add rax, qword [rbx + 0x60]	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4000e93	          0x4889c6	                            mov rsi, rax	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4000e96	      0xb900000000	                              mov ecx, 0	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4000e9b	          0x4889df	                            mov rdi, rbx	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4000e9e	      0xe800000000	                          call 0x4000ea3	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4000ea3	    0x8b83ac000000	            mov eax, dword [rbx + 0xac] 	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4000ea9	    0x488983980000	             mov qword [rbx + 0x98], rax	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4000eb0	          0x488b3b	                    mov rdi, qword [rbx]	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4000eb3	      0xe813f7ffff	                  call sym.flush_pending	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4000eb8	          0x488b03	                    mov rax, qword [rbx]	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4000ebb	        0x83782000	               cmp dword [rax + 0x20], 0	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4000ebf	     0xf85dffcffff	                           jne 0x4000ba4	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4000ec5	      0xe9d0000000	                           jmp 0x4000f9a	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4000eca	    0x8b93ac000000	            mov edx, dword [rbx + 0xac] 	      1910	deflate.c	FUNCTION_21	FOR_1	ELSE_2
0x4000ed0	          0x83fa02	                              cmp edx, 2	      1910	deflate.c	FUNCTION_21	FOR_1	ELSE_2
0x4000ed3	      0xb802000000	                              mov eax, 2	      1910	deflate.c	FUNCTION_21	FOR_1	ELSE_2
0x4000ed8	           0xf46c2	                         cmovbe eax, edx	      1910	deflate.c	FUNCTION_21	FOR_1	ELSE_2
0x4000edb	    0x89832c170000	          mov dword [rbx + 0x172c], eax 	      1910	deflate.c	FUNCTION_21	FOR_1	ELSE_2
0x4000ee1	          0x83fd04	                              cmp ebp, 4	      1911	deflate.c	FUNCTION_21	FOR_1	ELSE_2
0x4000ee4	            0x754f	                           jne 0x4000f35	      1911	deflate.c	FUNCTION_21	FOR_1	ELSE_2
0x4000ee6	    0x488b83980000	            mov rax, qword [rbx + 0x98] 	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x4000eed	            0x89d2	                            mov edx, edx	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x4000eef	          0x4829c2	                            sub rdx, rax	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x4000ef2	      0xbe00000000	                              mov esi, 0	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x4000ef7	          0x4885c0	                           test rax, rax	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x4000efa	            0x7809	                            js 0x4000f05	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x4000efc	            0x89c0	                            mov eax, eax	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x4000efe	        0x48034360	             add rax, qword [rbx + 0x60]	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x4000f02	          0x4889c6	                            mov rsi, rax	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x4000f05	      0xb901000000	                              mov ecx, 1	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x4000f0a	          0x4889df	                            mov rdi, rbx	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x4000f0d	      0xe800000000	                          call 0x4000f12	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x4000f12	    0x8b83ac000000	            mov eax, dword [rbx + 0xac] 	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x4000f18	    0x488983980000	             mov qword [rbx + 0x98], rax	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x4000f1f	          0x488b3b	                    mov rdi, qword [rbx]	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x4000f22	      0xe8a4f6ffff	                  call sym.flush_pending	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x4000f27	          0x488b03	                    mov rax, qword [rbx]	      1912	deflate.c	FUNCTION_21	FOR_1	IF_8
0x4000f2a	        0x83782001	               cmp dword [rax + 0x20], 1	      1913	deflate.c	FUNCTION_21	FOR_1
0x4000f2e	            0x19c0	                            sbb eax, eax	      1913	deflate.c	FUNCTION_21	FOR_1
0x4000f30	          0x83c003	                              add eax, 3	      1913	deflate.c	FUNCTION_21	FOR_1
0x4000f33	            0xeb6a	                           jmp 0x4000f9f	      1913	deflate.c	FUNCTION_21	FOR_1
0x4000f35	      0xb801000000	                              mov eax, 1	      1917	deflate.c	FUNCTION_21	IF_9
0x4000f3a	    0x83bb0c170000	             cmp dword [rbx + 0x170c], 0	      1915	deflate.c	FUNCTION_21	IF_9
0x4000f41	            0x745c	                            je 0x4000f9f	      1915	deflate.c	FUNCTION_21	IF_9
0x4000f43	    0x488b83980000	            mov rax, qword [rbx + 0x98] 	      1916	deflate.c	FUNCTION_21	IF_9
0x4000f4a	            0x89d2	                            mov edx, edx	      1916	deflate.c	FUNCTION_21	IF_9
0x4000f4c	          0x4829c2	                            sub rdx, rax	      1916	deflate.c	FUNCTION_21	IF_9
0x4000f4f	      0xbe00000000	                              mov esi, 0	      1916	deflate.c	FUNCTION_21	IF_9
0x4000f54	          0x4885c0	                           test rax, rax	      1916	deflate.c	FUNCTION_21	IF_9
0x4000f57	            0x7809	                            js 0x4000f62	      1916	deflate.c	FUNCTION_21	IF_9
0x4000f59	            0x89c0	                            mov eax, eax	      1916	deflate.c	FUNCTION_21	IF_9
0x4000f5b	        0x48034360	             add rax, qword [rbx + 0x60]	      1916	deflate.c	FUNCTION_21	IF_9
0x4000f5f	          0x4889c6	                            mov rsi, rax	      1916	deflate.c	FUNCTION_21	IF_9
0x4000f62	      0xb900000000	                              mov ecx, 0	      1916	deflate.c	FUNCTION_21	IF_9
0x4000f67	          0x4889df	                            mov rdi, rbx	      1916	deflate.c	FUNCTION_21	IF_9
0x4000f6a	      0xe800000000	                          call 0x4000f6f	      1916	deflate.c	FUNCTION_21	IF_9
0x4000f6f	    0x8b83ac000000	            mov eax, dword [rbx + 0xac] 	      1916	deflate.c	FUNCTION_21	IF_9
0x4000f75	    0x488983980000	             mov qword [rbx + 0x98], rax	      1916	deflate.c	FUNCTION_21	IF_9
0x4000f7c	          0x488b3b	                    mov rdi, qword [rbx]	      1916	deflate.c	FUNCTION_21	IF_9
0x4000f7f	      0xe847f6ffff	                  call sym.flush_pending	      1916	deflate.c	FUNCTION_21	IF_9
0x4000f84	          0x488b03	                    mov rax, qword [rbx]	      1916	deflate.c	FUNCTION_21	IF_9
0x4000f87	        0x83782000	               cmp dword [rax + 0x20], 0	      1840	deflate.c	FUNCTION_21	FOR_1
0x4000f8b	           0xf95c0	                                setne al	      1840	deflate.c	FUNCTION_21	FOR_1
0x4000f8e	           0xfb6c0	                           movzx eax, al	      1840	deflate.c	FUNCTION_21	FOR_1
0x4000f91	            0xeb0c	                           jmp 0x4000f9f	      1840	deflate.c	FUNCTION_21	FOR_1
0x4000f93	      0xb800000000	                              mov eax, 0	      1840	deflate.c	FUNCTION_21	FOR_1
0x4000f98	            0xeb05	                           jmp 0x4000f9f	      1840	deflate.c	FUNCTION_21	FOR_1
0x4000f9a	      0xb800000000	                              mov eax, 0	      1908	deflate.c	FUNCTION_21	FOR_1	ELSE_2	CALL_6
0x4000f9f	        0x4883c408	                              add rsp, 8	      1918	deflate.c	FUNCTION_21	IF_9
0x4000fa3	              0x5b	                                 pop rbx	      1918	deflate.c	FUNCTION_21	IF_9
0x4000fa4	              0x5d	                                 pop rbp	      1918	deflate.c	FUNCTION_21	IF_9
0x4000fa5	              0xc3	                                     ret	      1918	deflate.c	FUNCTION_21	IF_9
deflateResetKeep	CALL,4:ELSE,0:IF,2:FOR,0:DO,0:functions,0:WHILE,0:SWITCH,0	51
0x40016b8	            0x4154	                                push r12	       469	deflate.c	
0x40016ba	              0x55	                                push rbp	       469	deflate.c	
0x40016bb	              0x53	                                push rbx	       469	deflate.c	
0x40016bc	          0x4889fd	                            mov rbp, rdi	       469	deflate.c	
0x40016bf	      0xe8f5e9ffff	              call sym.deflateStateCheck	       472	deflate.c	
0x40016c4	            0x85c0	                           test eax, eax	       472	deflate.c	
0x40016c6	     0xf8581000000	                           jne 0x400174d	       472	deflate.c	
0x40016cc	          0x4189c4	                           mov r12d, eax	       472	deflate.c	
0x40016cf	    0x48c745280000	               mov qword [rbp + 0x28], 0	       476	deflate.c	FUNCTION_4	IF_1	CALL_1
0x40016d7	    0x48c745100000	               mov qword [rbp + 0x10], 0	       476	deflate.c	FUNCTION_4	IF_1	CALL_1
0x40016df	    0x48c745300000	               mov qword [rbp + 0x30], 0	       477	deflate.c	FUNCTION_4	IF_1
0x40016e7	    0xc74558020000	               mov dword [rbp + 0x58], 2	       478	deflate.c	FUNCTION_4	IF_1
0x40016ee	        0x488b5d38	            mov rbx, qword [rbp + 0x38] 	       480	deflate.c	FUNCTION_4
0x40016f2	    0x48c743280000	               mov qword [rbx + 0x28], 0	       481	deflate.c	FUNCTION_4
0x40016fa	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       482	deflate.c	FUNCTION_4
0x40016fe	        0x48894320	             mov qword [rbx + 0x20], rax	       482	deflate.c	FUNCTION_4
0x4001702	          0x8b4330	            mov eax, dword [rbx + 0x30] 	       484	deflate.c	FUNCTION_4
0x4001705	            0x85c0	                           test eax, eax	       484	deflate.c	FUNCTION_4
0x4001707	            0x7905	                           jns 0x400170e	       484	deflate.c	FUNCTION_4
0x4001709	            0xf7d8	                                 neg eax	       485	deflate.c	FUNCTION_4
0x400170b	          0x894330	             mov dword [rbx + 0x30], eax	       485	deflate.c	FUNCTION_4
0x400170e	          0x8b4330	            mov eax, dword [rbx + 0x30] 	       489	deflate.c	FUNCTION_4	IF_2
0x4001711	          0x83f802	                              cmp eax, 2	       489	deflate.c	FUNCTION_4	IF_2
0x4001714	            0x743f	                            je 0x4001755	       489	deflate.c	FUNCTION_4	IF_2
0x4001716	          0x83f801	                              cmp eax, 1	       491	deflate.c	FUNCTION_4
0x4001719	            0x19c0	                            sbb eax, eax	       491	deflate.c	FUNCTION_4
0x400171b	          0x83e047	                           and eax, 0x47	       491	deflate.c	FUNCTION_4
0x400171e	          0x83c02a	                           add eax, 0x2a	       491	deflate.c	FUNCTION_4
0x4001721	          0x894308	                mov dword [rbx + 8], eax	       487	deflate.c	FUNCTION_4
0x4001724	      0xba00000000	                              mov edx, 0	       494	deflate.c	FUNCTION_4
0x4001729	      0xbe00000000	                              mov esi, 0	       494	deflate.c	FUNCTION_4
0x400172e	      0xbf00000000	                              mov edi, 0	       494	deflate.c	FUNCTION_4
0x4001733	      0xe800000000	                          call 0x4001738	       494	deflate.c	FUNCTION_4
0x4001738	        0x48894560	            mov qword [rbp + 0x60], rax 	       492	deflate.c	FUNCTION_4
0x400173c	    0xc7434c000000	               mov dword [rbx + 0x4c], 0	       497	deflate.c	FUNCTION_4
0x4001743	          0x4889df	                            mov rdi, rbx	       499	deflate.c	FUNCTION_4
0x4001746	      0xe800000000	                          call 0x400174b	       499	deflate.c	FUNCTION_4
0x400174b	            0xeb25	                           jmp 0x4001772	       501	deflate.c	FUNCTION_4
0x400174d	    0x41bcfeffffff	                    mov r12d, 0xfffffffe	       473	deflate.c	FUNCTION_4
0x4001753	            0xeb1d	                           jmp 0x4001772	       473	deflate.c	FUNCTION_4
0x4001755	    0xc74308390000	               mov dword [rbx + 8], 0x39	       487	deflate.c	FUNCTION_4
0x400175c	      0xba00000000	                              mov edx, 0	       494	deflate.c	FUNCTION_4
0x4001761	      0xbe00000000	                              mov esi, 0	       494	deflate.c	FUNCTION_4
0x4001766	      0xbf00000000	                              mov edi, 0	       494	deflate.c	FUNCTION_4
0x400176b	      0xe800000000	                          call 0x4001770	       494	deflate.c	FUNCTION_4
0x4001770	            0xebc6	                           jmp 0x4001738	       494	deflate.c	FUNCTION_4
0x4001772	          0x4489e0	                           mov eax, r12d	       502	deflate.c	FUNCTION_4
0x4001775	              0x5b	                                 pop rbx	       502	deflate.c	FUNCTION_4
0x4001776	              0x5d	                                 pop rbp	       502	deflate.c	FUNCTION_4
0x4001777	            0x415c	                                 pop r12	       502	deflate.c	FUNCTION_4
0x4001779	              0xc3	                                     ret	       502	deflate.c	FUNCTION_4
deflateTune	CALL,1:ELSE,0:IF,1:FOR,0:DO,0:functions,0:WHILE,0:SWITCH,0	26
0x4001982	            0x4156	                                push r14	       623	deflate.c	
0x4001984	            0x4155	                                push r13	       623	deflate.c	
0x4001986	            0x4154	                                push r12	       623	deflate.c	
0x4001988	              0x55	                                push rbp	       623	deflate.c	
0x4001989	              0x53	                                push rbx	       623	deflate.c	
0x400198a	          0x4989fe	                            mov r14, rdi	       623	deflate.c	
0x400198d	          0x4189f5	                           mov r13d, esi	       623	deflate.c	
0x4001990	          0x4189d4	                           mov r12d, edx	       623	deflate.c	
0x4001993	            0x89cd	                            mov ebp, ecx	       623	deflate.c	
0x4001995	          0x4489c3	                            mov ebx, r8d	       623	deflate.c	
0x4001998	      0xe81ce7ffff	              call sym.deflateStateCheck	       626	deflate.c	
0x400199d	            0x85c0	                           test eax, eax	       626	deflate.c	
0x400199f	            0x7520	                           jne 0x40019c1	       626	deflate.c	
0x40019a1	        0x498b5638	            mov rdx, qword [r14 + 0x38] 	       627	deflate.c	FUNCTION_9
0x40019a5	    0x4489aacc0000	            mov dword [rdx + 0xcc], r13d	       628	deflate.c	FUNCTION_9
0x40019ac	    0x4489a2c00000	            mov dword [rdx + 0xc0], r12d	       629	deflate.c	FUNCTION_9
0x40019b3	    0x89aad0000000	             mov dword [rdx + 0xd0], ebp	       630	deflate.c	FUNCTION_9	CALL_1
0x40019b9	    0x899abc000000	             mov dword [rdx + 0xbc], ebx	       631	deflate.c	FUNCTION_9
0x40019bf	            0xeb05	                           jmp 0x40019c6	       632	deflate.c	FUNCTION_9
0x40019c1	      0xb8feffffff	                     mov eax, 0xfffffffe	       626	deflate.c	
0x40019c6	              0x5b	                                 pop rbx	       633	deflate.c	FUNCTION_9
0x40019c7	              0x5d	                                 pop rbp	       633	deflate.c	FUNCTION_9
0x40019c8	            0x415c	                                 pop r12	       633	deflate.c	FUNCTION_9
0x40019ca	            0x415d	                                 pop r13	       633	deflate.c	FUNCTION_9
0x40019cc	            0x415e	                                 pop r14	       633	deflate.c	FUNCTION_9
0x40019ce	              0xc3	                                     ret	       633	deflate.c	FUNCTION_9
