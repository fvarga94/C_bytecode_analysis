opncls_bseek	DO,0:functions,0:FOR,0:CALL,0:IF,0:SWITCH,1:ELSE,0:WHILE,0	16
0x4000049	        0x488b4f10	            mov rcx, qword [rdi + 0x10] 	       489	opncls.c	FUNCTION_10
0x400004d	          0x83fa01	                              cmp edx, 1	       490	opncls.c	FUNCTION_10	SWITCH_1
0x4000050	            0x741e	                            je 0x4000070	       490	opncls.c	FUNCTION_10	SWITCH_1
0x4000052	      0xb8ffffffff	                     mov eax, 0xffffffff	       494	opncls.c	FUNCTION_10	SWITCH_1
0x4000057	          0x83fa02	                              cmp edx, 2	       490	opncls.c	FUNCTION_10	SWITCH_1
0x400005a	            0x741d	                            je 0x4000079	       490	opncls.c	FUNCTION_10	SWITCH_1
0x400005c	            0x85d2	                           test edx, edx	       490	opncls.c	FUNCTION_10	SWITCH_1
0x400005e	            0x7406	                            je 0x4000066	       490	opncls.c	FUNCTION_10	SWITCH_1
0x4000060	      0xb800000000	                              mov eax, 0	       496	opncls.c	FUNCTION_10
0x4000065	              0xc3	                                     ret	       496	opncls.c	FUNCTION_10
0x4000066	        0x48897120	             mov qword [rcx + 0x20], rsi	       492	opncls.c	FUNCTION_10	SWITCH_1
0x400006a	      0xb800000000	                              mov eax, 0	       496	opncls.c	FUNCTION_10
0x400006f	              0xc3	                                     ret	       492	opncls.c	FUNCTION_10	SWITCH_1
0x4000070	        0x48017120	            add qword [rcx + 0x20], rsi 	       493	opncls.c	FUNCTION_10	SWITCH_1
0x4000074	      0xb800000000	                              mov eax, 0	       496	opncls.c	FUNCTION_10
0x4000079	            0xf3c3	                                     ret	       497	opncls.c	FUNCTION_10
bfd_fdopenr	DO,0:functions,0:FOR,0:CALL,5:IF,1:SWITCH,1:ELSE,0:WHILE,0	42
0x4000a5c	            0x4154	                                push r12	       331	opncls.c	FUNCTION_7
0x4000a5e	              0x55	                                push rbp	       331	opncls.c	FUNCTION_7
0x4000a5f	              0x53	                                push rbx	       331	opncls.c	FUNCTION_7
0x4000a60	          0x4889fd	                            mov rbp, rdi	       331	opncls.c	FUNCTION_7
0x4000a63	          0x4989f4	                            mov r12, rsi	       331	opncls.c	FUNCTION_7
0x4000a66	            0x89d3	                            mov ebx, edx	       331	opncls.c	FUNCTION_7
0x4000a68	      0xba00000000	                              mov edx, 0	       340	opncls.c	FUNCTION_7	CALL_1
0x4000a6d	      0xbe03000000	                              mov esi, 3	       340	opncls.c	FUNCTION_7	CALL_1
0x4000a72	            0x89df	                            mov edi, ebx	       340	opncls.c	FUNCTION_7	CALL_1
0x4000a74	      0xb800000000	                              mov eax, 0	       340	opncls.c	FUNCTION_7	CALL_1
0x4000a79	      0xe800000000	                          call 0x4000a7e	       340	opncls.c	FUNCTION_7	CALL_1
0x4000a7e	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       341	opncls.c	FUNCTION_7	IF_1
0x4000a81	            0x7527	                           jne 0x4000aaa	       341	opncls.c	FUNCTION_7	IF_1
0x4000a83	      0xe800000000	                          call 0x4000a88	       343	opncls.c	FUNCTION_7	IF_1
0x4000a88	          0x4889c5	                            mov rbp, rax	       343	opncls.c	FUNCTION_7	IF_1
0x4000a8b	          0x448b20	                   mov r12d, dword [rax]	       343	opncls.c	FUNCTION_7	IF_1
0x4000a8e	            0x89df	                            mov edi, ebx	       345	opncls.c	FUNCTION_7	IF_1	CALL_2
0x4000a90	      0xe800000000	                          call 0x4000a95	       345	opncls.c	FUNCTION_7	IF_1	CALL_2
0x4000a95	        0x44896500	                   mov dword [rbp], r12d	       346	opncls.c	FUNCTION_7	IF_1
0x4000a99	      0xbf01000000	                              mov edi, 1	       347	opncls.c	FUNCTION_7	IF_1	CALL_3
0x4000a9e	      0xe800000000	                          call 0x4000aa3	       347	opncls.c	FUNCTION_7	IF_1	CALL_3
0x4000aa3	      0xb800000000	                              mov eax, 0	       348	opncls.c	FUNCTION_7	IF_1
0x4000aa8	            0xeb37	                           jmp 0x4000ae1	       348	opncls.c	FUNCTION_7	IF_1
0x4000aaa	          0x83e003	                              and eax, 3	       352	opncls.c	FUNCTION_7	SWITCH_1
0x4000aad	            0x7420	                            je 0x4000acf	       352	opncls.c	FUNCTION_7	SWITCH_1
0x4000aaf	          0x83f802	                              cmp eax, 2	       352	opncls.c	FUNCTION_7	SWITCH_1
0x4000ab2	            0x7f07	                            jg 0x4000abb	       352	opncls.c	FUNCTION_7	SWITCH_1
0x4000ab4	      0xba00000000	                              mov edx, 0	       355	opncls.c	FUNCTION_7	SWITCH_1
0x4000ab9	            0xeb19	                           jmp 0x4000ad4	       355	opncls.c	FUNCTION_7	SWITCH_1
0x4000abb	      0xba00000000	                              mov edx, 0	       357	opncls.c	FUNCTION_7	SWITCH_1	CALL_4
0x4000ac0	      0xbe65010000	                          mov esi, 0x165	       357	opncls.c	FUNCTION_7	SWITCH_1	CALL_4
0x4000ac5	      0xbf00000000	                              mov edi, 0	       357	opncls.c	FUNCTION_7	SWITCH_1	CALL_4
0x4000aca	      0xe800000000	                          call 0x4000acf	       357	opncls.c	FUNCTION_7	SWITCH_1	CALL_4
0x4000acf	      0xba00000000	                              mov edx, 0	       354	opncls.c	FUNCTION_7	SWITCH_1
0x4000ad4	            0x89d9	                            mov ecx, ebx	       361	opncls.c	FUNCTION_7	CALL_5
0x4000ad6	          0x4c89e6	                            mov rsi, r12	       361	opncls.c	FUNCTION_7	CALL_5
0x4000ad9	          0x4889ef	                            mov rdi, rbp	       361	opncls.c	FUNCTION_7	CALL_5
0x4000adc	      0xe800000000	                          call 0x4000ae1	       361	opncls.c	FUNCTION_7	CALL_5
0x4000ae1	              0x5b	                                 pop rbx	       362	opncls.c	FUNCTION_7
0x4000ae2	              0x5d	                                 pop rbp	       362	opncls.c	FUNCTION_7
0x4000ae3	            0x415c	                                 pop r12	       362	opncls.c	FUNCTION_7
0x4000ae5	              0xc3	                                     ret	       362	opncls.c	FUNCTION_7
bfd_get_debug_link_info	DO,0:functions,0:FOR,0:CALL,1:IF,0:SWITCH,0:ELSE,0:WHILE,0	4
0x40015ed	        0x4883ec08	                              sub rsp, 8	      1241	opncls.c	FUNCTION_32
0x40015f1	      0xe87eebffff	      call sym.bfd_get_debug_link_info_1	      1242	opncls.c	FUNCTION_32	CALL_1
0x40015f6	        0x4883c408	                              add rsp, 8	      1243	opncls.c	FUNCTION_32
0x40015fa	              0xc3	                                     ret	      1243	opncls.c	FUNCTION_32
bfd_openr	DO,0:functions,0:FOR,0:CALL,1:IF,0:SWITCH,0:ELSE,0:WHILE,0	6
0x4000a44	        0x4883ec08	                              sub rsp, 8	       287	opncls.c	FUNCTION_6
0x4000a48	      0xb9ffffffff	                     mov ecx, 0xffffffff	       288	opncls.c	FUNCTION_6	CALL_1
0x4000a4d	      0xba00000000	                              mov edx, 0	       288	opncls.c	FUNCTION_6	CALL_1
0x4000a52	      0xe800000000	                          call 0x4000a57	       288	opncls.c	FUNCTION_6	CALL_1
0x4000a57	        0x4883c408	                              add rsp, 8	       289	opncls.c	FUNCTION_6
0x4000a5b	              0xc3	                                     ret	       289	opncls.c	FUNCTION_6
bfd_create	DO,0:functions,0:FOR,0:CALL,3:IF,2:SWITCH,0:ELSE,0:WHILE,0	27
0x4000cfd	            0x4154	                                push r12	       796	opncls.c	FUNCTION_22
0x4000cff	              0x55	                                push rbp	       796	opncls.c	FUNCTION_22
0x4000d00	              0x53	                                push rbx	       796	opncls.c	FUNCTION_22
0x4000d01	          0x4989fc	                            mov r12, rdi	       796	opncls.c	FUNCTION_22
0x4000d04	          0x4889f5	                            mov rbp, rsi	       796	opncls.c	FUNCTION_22
0x4000d07	      0xe800000000	                          call 0x4000d0c	       799	opncls.c	FUNCTION_22	CALL_1
0x4000d0c	          0x4885c0	                           test rax, rax	       800	opncls.c	FUNCTION_22	IF_1
0x4000d0f	            0x7431	                            je 0x4000d42	       800	opncls.c	FUNCTION_22	IF_1
0x4000d11	          0x4889c3	                            mov rbx, rax	       800	opncls.c	FUNCTION_22	IF_1
0x4000d14	          0x4c89e7	                            mov rdi, r12	       804	opncls.c	FUNCTION_22	CALL_2
0x4000d17	      0xe800000000	                          call 0x4000d1c	       804	opncls.c	FUNCTION_22	CALL_2
0x4000d1c	          0x488903	                    mov qword [rbx], rax	       804	opncls.c	FUNCTION_22	CALL_2
0x4000d1f	          0x4885ed	                           test rbp, rbp	       805	opncls.c	FUNCTION_22	IF_2
0x4000d22	            0x7408	                            je 0x4000d2c	       805	opncls.c	FUNCTION_22	IF_2
0x4000d24	        0x488b4508	                mov rax, qword [rbp + 8]	       806	opncls.c	FUNCTION_22	IF_2
0x4000d28	        0x48894308	                mov qword [rbx + 8], rax	       806	opncls.c	FUNCTION_22	IF_2
0x4000d2c	        0x806344e7	             and byte [rbx + 0x44], 0xe7	       807	opncls.c	FUNCTION_22
0x4000d30	      0xbe01000000	                              mov esi, 1	       808	opncls.c	FUNCTION_22	CALL_3
0x4000d35	          0x4889df	                            mov rdi, rbx	       808	opncls.c	FUNCTION_22	CALL_3
0x4000d38	      0xe800000000	                          call 0x4000d3d	       808	opncls.c	FUNCTION_22	CALL_3
0x4000d3d	          0x4889d8	                            mov rax, rbx	       810	opncls.c	FUNCTION_22
0x4000d40	            0xeb05	                           jmp 0x4000d47	       810	opncls.c	FUNCTION_22
0x4000d42	      0xb800000000	                              mov eax, 0	       801	opncls.c	FUNCTION_22	IF_1
0x4000d47	              0x5b	                                 pop rbx	       811	opncls.c	FUNCTION_22
0x4000d48	              0x5d	                                 pop rbp	       811	opncls.c	FUNCTION_22
0x4000d49	            0x415c	                                 pop r12	       811	opncls.c	FUNCTION_22
0x4000d4b	              0xc3	                                     ret	       811	opncls.c	FUNCTION_22
opncls_bflush	DO,0:functions,0:FOR,0:CALL,0:IF,0:SWITCH,0:ELSE,0:WHILE,0	2
0x40000c8	      0xb800000000	                              mov eax, 0	       537	opncls.c	FUNCTION_14
0x40000cd	              0xc3	                                     ret	       537	opncls.c	FUNCTION_14
bfd_alloc	DO,0:functions,0:FOR,0:CALL,3:IF,2:SWITCH,0:ELSE,0:WHILE,0	34
0x4000ecc	              0x53	                                push rbx	       931	opncls.c	FUNCTION_25
0x4000ecd	          0x4885f6	                           test rsi, rsi	       935	opncls.c	FUNCTION_25	IF_1
0x4000ed0	            0x7911	                           jns 0x4000ee3	       935	opncls.c	FUNCTION_25	IF_1
0x4000ed2	      0xbf06000000	                              mov edi, 6	       945	opncls.c	FUNCTION_25	IF_1	CALL_1
0x4000ed7	      0xe800000000	                          call 0x4000edc	       945	opncls.c	FUNCTION_25	IF_1	CALL_1
0x4000edc	      0xbb00000000	                              mov ebx, 0	       946	opncls.c	FUNCTION_25	IF_1
0x4000ee1	            0xeb4f	                           jmp 0x4000f32	       946	opncls.c	FUNCTION_25	IF_1
0x4000ee3	    0x488bbf080100	           mov rdi, qword [rdi + 0x108] 	       949	opncls.c	FUNCTION_25	CALL_2
0x4000eea	          0x4885f6	                           test rsi, rsi	       949	opncls.c	FUNCTION_25	CALL_2
0x4000eed	            0x740c	                            je 0x4000efb	       949	opncls.c	FUNCTION_25	CALL_2
0x4000eef	        0x4883c607	                              add rsi, 7	       949	opncls.c	FUNCTION_25	CALL_2
0x4000ef3	        0x4883e6f8	             and rsi, 0xfffffffffffffff8	       949	opncls.c	FUNCTION_25	CALL_2
0x4000ef7	            0x7422	                            je 0x4000f1b	       949	opncls.c	FUNCTION_25	CALL_2
0x4000ef9	            0xeb05	                           jmp 0x4000f00	       949	opncls.c	FUNCTION_25	CALL_2
0x4000efb	      0xbe08000000	                              mov esi, 8	       949	opncls.c	FUNCTION_25	CALL_2
0x4000f00	          0x8b4708	                mov eax, dword [rdi + 8]	       949	opncls.c	FUNCTION_25	CALL_2
0x4000f03	            0x89c2	                            mov edx, eax	       949	opncls.c	FUNCTION_25	CALL_2
0x4000f05	          0x4839f2	                            cmp rdx, rsi	       949	opncls.c	FUNCTION_25	CALL_2
0x4000f08	            0x7211	                            jb 0x4000f1b	       949	opncls.c	FUNCTION_25	CALL_2
0x4000f0a	          0x488b1f	                    mov rbx, qword [rdi]	       949	opncls.c	FUNCTION_25	CALL_2
0x4000f0d	        0x488d1433	                    lea rdx, [rbx + rsi]	       949	opncls.c	FUNCTION_25	CALL_2
0x4000f11	          0x488917	                    mov qword [rdi], rdx	       949	opncls.c	FUNCTION_25	CALL_2
0x4000f14	            0x29f0	                            sub eax, esi	       949	opncls.c	FUNCTION_25	CALL_2
0x4000f16	          0x894708	                mov dword [rdi + 8], eax	       949	opncls.c	FUNCTION_25	CALL_2
0x4000f19	            0xeb08	                           jmp 0x4000f23	       949	opncls.c	FUNCTION_25	CALL_2
0x4000f1b	      0xe800000000	                          call 0x4000f20	       949	opncls.c	FUNCTION_25	CALL_2
0x4000f20	          0x4889c3	                            mov rbx, rax	       949	opncls.c	FUNCTION_25	CALL_2
0x4000f23	          0x4885db	                           test rbx, rbx	       950	opncls.c	FUNCTION_25	IF_2
0x4000f26	            0x750a	                           jne 0x4000f32	       950	opncls.c	FUNCTION_25	IF_2
0x4000f28	      0xbf06000000	                              mov edi, 6	       951	opncls.c	FUNCTION_25	CALL_3
0x4000f2d	      0xe800000000	                          call 0x4000f32	       951	opncls.c	FUNCTION_25	CALL_3
0x4000f32	          0x4889d8	                            mov rax, rbx	       953	opncls.c	FUNCTION_25
0x4000f35	              0x5b	                                 pop rbx	       953	opncls.c	FUNCTION_25
0x4000f36	              0xc3	                                     ret	       953	opncls.c	FUNCTION_25
bfd_release	DO,0:functions,0:FOR,0:CALL,1:IF,0:SWITCH,0:ELSE,0:WHILE,0	5
0x400150f	        0x4883ec08	                              sub rsp, 8	      1042	opncls.c	FUNCTION_29
0x4001513	    0x488bbf080100	           mov rdi, qword [rdi + 0x108] 	      1043	opncls.c	FUNCTION_29	CALL_1
0x400151a	      0xe800000000	                          call 0x400151f	      1043	opncls.c	FUNCTION_29	CALL_1
0x400151f	        0x4883c408	                              add rsp, 8	      1044	opncls.c	FUNCTION_29
0x4001523	              0xc3	                                     ret	      1044	opncls.c	FUNCTION_29
bfd_make_writable	DO,0:functions,0:FOR,0:CALL,2:IF,2:SWITCH,0:ELSE,0:WHILE,0	28
0x4000d4c	              0x53	                                push rbx	       832	opncls.c	FUNCTION_23
0x4000d4d	        0xf6474418	           test byte [rdi + 0x44], 0x18 	       835	opncls.c	FUNCTION_23	IF_1
0x4000d51	            0x7411	                            je 0x4000d64	       835	opncls.c	FUNCTION_23	IF_1
0x4000d53	      0xbf05000000	                              mov edi, 5	       837	opncls.c	FUNCTION_23	IF_1	CALL_1
0x4000d58	      0xe800000000	                          call 0x4000d5d	       837	opncls.c	FUNCTION_23	IF_1	CALL_1
0x4000d5d	      0xb800000000	                              mov eax, 0	       838	opncls.c	FUNCTION_23	IF_1
0x4000d62	            0xeb5d	                           jmp 0x4000dc1	       838	opncls.c	FUNCTION_23	IF_1
0x4000d64	          0x4889fb	                            mov rbx, rdi	       838	opncls.c	FUNCTION_23	IF_1
0x4000d67	      0xbf10000000	                           mov edi, 0x10	       841	opncls.c	FUNCTION_23	CALL_2
0x4000d6c	      0xe800000000	                          call 0x4000d71	       841	opncls.c	FUNCTION_23	CALL_2
0x4000d71	          0x4885c0	                           test rax, rax	       842	opncls.c	FUNCTION_23	IF_2
0x4000d74	            0x7446	                            je 0x4000dbc	       842	opncls.c	FUNCTION_23	IF_2
0x4000d76	        0x48894310	             mov qword [rbx + 0x10], rax	       844	opncls.c	FUNCTION_23
0x4000d7a	    0x48c700000000	                      mov qword [rax], 0	       846	opncls.c	FUNCTION_23
0x4000d81	    0x48c740080000	                  mov qword [rax + 8], 0	       847	opncls.c	FUNCTION_23
0x4000d89	    0x814b44000001	          or dword [rbx + 0x44], 0x10000	       849	opncls.c	FUNCTION_23
0x4000d90	    0x48c743180000	               mov qword [rbx + 0x18], 0	       850	opncls.c	FUNCTION_23
0x4000d98	    0x48c743580000	               mov qword [rbx + 0x58], 0	       851	opncls.c	FUNCTION_23
0x4000da0	         0xfb64344	           movzx eax, byte [rbx + 0x44] 	       852	opncls.c	FUNCTION_23
0x4000da4	          0x83e0e7	                     and eax, 0xffffffe7	       852	opncls.c	FUNCTION_23
0x4000da7	          0x83c810	                            or eax, 0x10	       852	opncls.c	FUNCTION_23
0x4000daa	          0x884344	               mov byte [rbx + 0x44], al	       852	opncls.c	FUNCTION_23
0x4000dad	    0x48c743300000	               mov qword [rbx + 0x30], 0	       853	opncls.c	FUNCTION_23
0x4000db5	      0xb801000000	                              mov eax, 1	       855	opncls.c	FUNCTION_23
0x4000dba	            0xeb05	                           jmp 0x4000dc1	       855	opncls.c	FUNCTION_23
0x4000dbc	      0xb800000000	                              mov eax, 0	       843	opncls.c	FUNCTION_23	IF_2
0x4000dc1	              0x5b	                                 pop rbx	       856	opncls.c	FUNCTION_23
0x4000dc2	              0xc3	                                     ret	       856	opncls.c	FUNCTION_23
get_build_id_name	DO,0:functions,0:FOR,0:CALL,6:IF,3:SWITCH,0:ELSE,0:WHILE,1	84
0x400120c	            0x4157	                                push r15	      1929	opncls.c	FUNCTION_43
0x400120e	            0x4156	                                push r14	      1929	opncls.c	FUNCTION_43
0x4001210	            0x4155	                                push r13	      1929	opncls.c	FUNCTION_43
0x4001212	            0x4154	                                push r12	      1929	opncls.c	FUNCTION_43
0x4001214	              0x55	                                push rbp	      1929	opncls.c	FUNCTION_43
0x4001215	              0x53	                                push rbx	      1929	opncls.c	FUNCTION_43
0x4001216	        0x4883ec18	                           sub rsp, 0x18	      1929	opncls.c	FUNCTION_43
0x400121a	      0x4889742408	                mov qword [rsp + 8], rsi	      1929	opncls.c	FUNCTION_43
0x400121f	          0x4885ff	                           test rdi, rdi	      1937	opncls.c	FUNCTION_43	IF_1
0x4001222	            0x740b	                            je 0x400122f	      1937	opncls.c	FUNCTION_43	IF_1
0x4001224	        0x48833f00	                      cmp qword [rdi], 0	      1937	opncls.c	FUNCTION_43	IF_1
0x4001228	            0x7405	                            je 0x400122f	      1937	opncls.c	FUNCTION_43	IF_1
0x400122a	          0x4885f6	                           test rsi, rsi	      1937	opncls.c	FUNCTION_43	IF_1
0x400122d	            0x7514	                           jne 0x4001243	      1937	opncls.c	FUNCTION_43	IF_1
0x400122f	      0xbf05000000	                              mov edi, 5	      1939	opncls.c	FUNCTION_43	IF_1	CALL_1
0x4001234	      0xe800000000	                          call 0x4001239	      1939	opncls.c	FUNCTION_43	IF_1	CALL_1
0x4001239	      0xb800000000	                              mov eax, 0	      1940	opncls.c	FUNCTION_43	IF_1
0x400123e	      0xe9f8000000	                           jmp 0x400133b	      1940	opncls.c	FUNCTION_43	IF_1
0x4001243	      0xe8effcffff	                   call sym.get_build_id	      1943	opncls.c	FUNCTION_43	CALL_2
0x4001248	          0x4989c7	                            mov r15, rax	      1943	opncls.c	FUNCTION_43	CALL_2
0x400124b	          0x4885c0	                           test rax, rax	      1944	opncls.c	FUNCTION_43	IF_2
0x400124e	     0xf84e2000000	                            je 0x4001336	      1944	opncls.c	FUNCTION_43	IF_2
0x4001254	          0x488b00	                    mov rax, qword [rax]	      1948	opncls.c	FUNCTION_43	CALL_5
0x4001257	      0x488d7c0012	            lea rdi, [rax + rax + 0x12] 	      1948	opncls.c	FUNCTION_43	CALL_5
0x400125c	      0xe800000000	                          call 0x4001261	      1948	opncls.c	FUNCTION_43	CALL_5
0x4001261	          0x4989c6	                            mov r14, rax	      1948	opncls.c	FUNCTION_43	CALL_5
0x4001264	          0x4885c0	                           test rax, rax	      1949	opncls.c	FUNCTION_43	IF_3
0x4001267	            0x7514	                           jne 0x400127d	      1949	opncls.c	FUNCTION_43	IF_3
0x4001269	      0xbf06000000	                              mov edi, 6	      1951	opncls.c	FUNCTION_43	IF_3	CALL_6
0x400126e	      0xe800000000	                          call 0x4001273	      1951	opncls.c	FUNCTION_43	IF_3	CALL_6
0x4001273	      0xb800000000	                              mov eax, 0	      1952	opncls.c	FUNCTION_43	IF_3
0x4001278	      0xe9be000000	                           jmp 0x400133b	      1952	opncls.c	FUNCTION_43	IF_3
0x400127d	          0x4d8b27	                    mov r12, qword [r15]	      1956	opncls.c	FUNCTION_43
0x4001280	    0x48b82e627569	          movabs rax, 0x692d646c6975622e	        33	stdio2.h	FUNCTION_58	CALL_1
0x400128a	          0x498906	                    mov qword [r14], rax	        33	stdio2.h	FUNCTION_58	CALL_1
0x400128d	    0x6641c7460864	              mov word [r14 + 8], 0x2f64	        33	stdio2.h	FUNCTION_58	CALL_1
0x4001294	      0x41c6460a00	                 mov byte [r14 + 0xa], 0	        33	stdio2.h	FUNCTION_58	CALL_1
0x4001299	        0x498d5e0a	                    lea rbx, [r14 + 0xa]	      1958	opncls.c	FUNCTION_43
0x400129d	        0x4d8d6f09	                      lea r13, [r15 + 9]	      1959	opncls.c	FUNCTION_43
0x40012a1	      0x450fb64708	               movzx r8d, byte [r15 + 8]	        33	stdio2.h	FUNCTION_58	CALL_1
0x40012a6	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_58	CALL_1
0x40012ab	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_58	CALL_1
0x40012b2	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_58	CALL_1
0x40012b7	          0x4889df	                            mov rdi, rbx	        33	stdio2.h	FUNCTION_58	CALL_1
0x40012ba	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_58	CALL_1
0x40012bf	      0xe800000000	                          call 0x40012c4	        33	stdio2.h	FUNCTION_58	CALL_1
0x40012c4	          0x4863e8	                         movsxd rbp, eax	      1959	opncls.c	FUNCTION_43
0x40012c7	          0x4801dd	                            add rbp, rbx	      1959	opncls.c	FUNCTION_43
0x40012ca	    0x66c745002f00	                    mov word [rbp], 0x2f	        33	stdio2.h	FUNCTION_58	CALL_1
0x40012d0	        0x4883c501	                              add rbp, 1	      1960	opncls.c	FUNCTION_43
0x40012d4	        0x4983fc01	                              cmp r12, 1	      1961	opncls.c	FUNCTION_43	WHILE_1
0x40012d8	            0x743e	                            je 0x4001318	      1961	opncls.c	FUNCTION_43	WHILE_1
0x40012da	          0x4c89eb	                            mov rbx, r13	      1961	opncls.c	FUNCTION_43	WHILE_1
0x40012dd	        0x4983ec01	                              sub r12, 1	      1961	opncls.c	FUNCTION_43	WHILE_1
0x40012e1	        0x4883c301	                              add rbx, 1	      1962	opncls.c	FUNCTION_43	WHILE_1
0x40012e5	      0x440fb643ff	               movzx r8d, byte [rbx - 1]	        33	stdio2.h	FUNCTION_58	CALL_1
0x40012ea	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_58	CALL_1
0x40012ef	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_58	CALL_1
0x40012f6	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_58	CALL_1
0x40012fb	          0x4889ef	                            mov rdi, rbp	        33	stdio2.h	FUNCTION_58	CALL_1
0x40012fe	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_58	CALL_1
0x4001303	      0xe800000000	                          call 0x4001308	        33	stdio2.h	FUNCTION_58	CALL_1
0x4001308	            0x4898	                                    cdqe	      1962	opncls.c	FUNCTION_43	WHILE_1
0x400130a	          0x4801c5	                            add rbp, rax	      1962	opncls.c	FUNCTION_43	WHILE_1
0x400130d	          0x4c89e0	                            mov rax, r12	      1962	opncls.c	FUNCTION_43	WHILE_1
0x4001310	          0x4829d8	                            sub rax, rbx	      1962	opncls.c	FUNCTION_43	WHILE_1
0x4001313	          0x4c01e8	                            add rax, r13	      1961	opncls.c	FUNCTION_43	WHILE_1
0x4001316	            0x75c9	                           jne 0x40012e1	      1961	opncls.c	FUNCTION_43	WHILE_1
0x4001318	    0xc745002e6465	             mov dword [rbp], 0x6265642e	        33	stdio2.h	FUNCTION_58	CALL_1
0x400131f	    0x66c745047567	              mov word [rbp + 4], 0x6775	        33	stdio2.h	FUNCTION_58	CALL_1
0x4001325	        0xc6450600	                   mov byte [rbp + 6], 0	        33	stdio2.h	FUNCTION_58	CALL_1
0x4001329	      0x488b442408	                mov rax, qword [rsp + 8]	      1965	opncls.c	FUNCTION_43
0x400132e	          0x4c8938	                    mov qword [rax], r15	      1965	opncls.c	FUNCTION_43
0x4001331	          0x4c89f0	                            mov rax, r14	      1966	opncls.c	FUNCTION_43
0x4001334	            0xeb05	                           jmp 0x400133b	      1966	opncls.c	FUNCTION_43
0x4001336	      0xb800000000	                              mov eax, 0	      1945	opncls.c	FUNCTION_43	IF_2
0x400133b	        0x4883c418	                           add rsp, 0x18	      1967	opncls.c	FUNCTION_43
0x400133f	              0x5b	                                 pop rbx	      1967	opncls.c	FUNCTION_43
0x4001340	              0x5d	                                 pop rbp	      1967	opncls.c	FUNCTION_43
0x4001341	            0x415c	                                 pop r12	      1967	opncls.c	FUNCTION_43
0x4001343	            0x415d	                                 pop r13	      1967	opncls.c	FUNCTION_43
0x4001345	            0x415e	                                 pop r14	      1967	opncls.c	FUNCTION_43
0x4001347	            0x415f	                                 pop r15	      1967	opncls.c	FUNCTION_43
0x4001349	              0xc3	                                     ret	      1967	opncls.c	FUNCTION_43
bfd_follow_build_id_debuglink	DO,0:functions,0:FOR,0:CALL,1:IF,0:SWITCH,0:ELSE,0:WHILE,0	15
0x4001a21	        0x4883ec18	                           sub rsp, 0x18	      2055	opncls.c	FUNCTION_45
0x4001a25	    0x64488b042528	                mov rax, qword fs:[0x28]	      2055	opncls.c	FUNCTION_45
0x4001a2e	      0x4889442408	                mov qword [rsp + 8], rax	      2055	opncls.c	FUNCTION_45
0x4001a33	            0x31c0	                            xor eax, eax	      2055	opncls.c	FUNCTION_45
0x4001a35	          0x4989e1	                             mov r9, rsp	      2058	opncls.c	FUNCTION_45	CALL_1
0x4001a38	    0x41b800000000	                              mov r8d, 0	      2058	opncls.c	FUNCTION_45	CALL_1
0x4001a3e	      0xb900000000	                              mov ecx, 0	      2058	opncls.c	FUNCTION_45	CALL_1
0x4001a43	      0xba00000000	                              mov edx, 0	      2058	opncls.c	FUNCTION_45	CALL_1
0x4001a48	      0xe876e8ffff	       call sym.find_separate_debug_file	      2058	opncls.c	FUNCTION_45	CALL_1
0x4001a4d	      0x488b542408	                mov rdx, qword [rsp + 8]	      2061	opncls.c	FUNCTION_45
0x4001a52	    0x644833142528	                xor rdx, qword fs:[0x28]	      2061	opncls.c	FUNCTION_45
0x4001a5b	            0x7405	                            je 0x4001a62	      2061	opncls.c	FUNCTION_45
0x4001a5d	      0xe800000000	                          call 0x4001a62	      2061	opncls.c	FUNCTION_45
0x4001a62	        0x4883c418	                           add rsp, 0x18	      2061	opncls.c	FUNCTION_45
0x4001a66	              0xc3	                                     ret	      2061	opncls.c	FUNCTION_45
bfd_make_readable	DO,0:functions,0:FOR,0:CALL,3:IF,3:SWITCH,0:ELSE,0:WHILE,0	54
0x4000dc3	              0x53	                                push rbx	       877	opncls.c	FUNCTION_24
0x4000dc4	         0xfb64744	           movzx eax, byte [rdi + 0x44] 	       878	opncls.c	FUNCTION_24	IF_1
0x4000dc8	          0x83e018	                           and eax, 0x18	       878	opncls.c	FUNCTION_24	IF_1
0x4000dcb	            0x3c10	                            cmp al, 0x10	       878	opncls.c	FUNCTION_24	IF_1
0x4000dcd	            0x7509	                           jne 0x4000dd8	       878	opncls.c	FUNCTION_24	IF_1
0x4000dcf	          0x4889fb	                            mov rbx, rdi	       878	opncls.c	FUNCTION_24	IF_1
0x4000dd2	        0xf6474601	               test byte [rdi + 0x46], 1	       878	opncls.c	FUNCTION_24	IF_1
0x4000dd6	            0x7514	                           jne 0x4000dec	       878	opncls.c	FUNCTION_24	IF_1
0x4000dd8	      0xbf05000000	                              mov edi, 5	       880	opncls.c	FUNCTION_24	IF_1	CALL_1
0x4000ddd	      0xe800000000	                          call 0x4000de2	       880	opncls.c	FUNCTION_24	IF_1	CALL_1
0x4000de2	      0xb800000000	                              mov eax, 0	       881	opncls.c	FUNCTION_24	IF_1
0x4000de7	      0xe9de000000	                           jmp 0x4000eca	       881	opncls.c	FUNCTION_24	IF_1
0x4000dec	        0x488b5708	                mov rdx, qword [rdi + 8]	       884	opncls.c	FUNCTION_24	IF_2
0x4000df0	         0xfb64744	           movzx eax, byte [rdi + 0x44] 	       884	opncls.c	FUNCTION_24	IF_2
0x4000df4	          0x83e007	                              and eax, 7	       884	opncls.c	FUNCTION_24	IF_2
0x4000df7	    0xff94c2f00000	        call qword [rdx + rax*8 + 0xf0] 	       884	opncls.c	FUNCTION_24	IF_2
0x4000dfe	            0x85c0	                           test eax, eax	       884	opncls.c	FUNCTION_24	IF_2
0x4000e00	     0xf84c4000000	                            je 0x4000eca	       884	opncls.c	FUNCTION_24	IF_2
0x4000e06	        0x488b4308	                mov rax, qword [rbx + 8]	       887	opncls.c	FUNCTION_24	IF_3
0x4000e0a	          0x4889df	                            mov rdi, rbx	       887	opncls.c	FUNCTION_24	IF_3
0x4000e0d	    0xff9010010000	                call qword [rax + 0x110]	       887	opncls.c	FUNCTION_24	IF_3
0x4000e13	            0x85c0	                           test eax, eax	       887	opncls.c	FUNCTION_24	IF_3
0x4000e15	     0xf84af000000	                            je 0x4000eca	       887	opncls.c	FUNCTION_24	IF_3
0x4000e1b	    0x48c783c00000	               mov qword [rbx + 0xc0], 0	       890	opncls.c	FUNCTION_24
0x4000e26	    0x48c743300000	               mov qword [rbx + 0x30], 0	       892	opncls.c	FUNCTION_24
0x4000e2e	        0x806344f8	             and byte [rbx + 0x44], 0xf8	       893	opncls.c	FUNCTION_24
0x4000e32	    0x48c783d00000	               mov qword [rbx + 0xd0], 0	       894	opncls.c	FUNCTION_24
0x4000e3d	    0x48c743580000	               mov qword [rbx + 0x58], 0	       895	opncls.c	FUNCTION_24
0x4000e45	    0xc783a0000000	               mov dword [rbx + 0xa0], 0	       898	opncls.c	FUNCTION_24
0x4000e4f	    0x48c783000100	              mov qword [rbx + 0x100], 0	       899	opncls.c	FUNCTION_24
0x4000e5a	         0xfb64347	           movzx eax, byte [rbx + 0x47] 	       900	opncls.c	FUNCTION_24
0x4000e5e	          0x83e0b5	                     and eax, 0xffffffb5	       900	opncls.c	FUNCTION_24
0x4000e61	          0x884347	               mov byte [rbx + 0x47], al	       900	opncls.c	FUNCTION_24
0x4000e64	    0x814b44000001	          or dword [rbx + 0x44], 0x10000	       901	opncls.c	FUNCTION_24
0x4000e6b	         0xfb64347	           movzx eax, byte [rbx + 0x47] 	       902	opncls.c	FUNCTION_24
0x4000e6f	          0x83e0ef	                     and eax, 0xffffffef	       902	opncls.c	FUNCTION_24
0x4000e72	          0x83c804	                               or eax, 4	       904	opncls.c	FUNCTION_24
0x4000e75	          0x884347	               mov byte [rbx + 0x47], al	       904	opncls.c	FUNCTION_24
0x4000e78	         0xfb64344	           movzx eax, byte [rbx + 0x44] 	       905	opncls.c	FUNCTION_24
0x4000e7c	          0x83e0e7	                     and eax, 0xffffffe7	       905	opncls.c	FUNCTION_24
0x4000e7f	          0x83c808	                               or eax, 8	       905	opncls.c	FUNCTION_24
0x4000e82	          0x884344	               mov byte [rbx + 0x44], al	       905	opncls.c	FUNCTION_24
0x4000e85	    0x48c783900000	               mov qword [rbx + 0x90], 0	       906	opncls.c	FUNCTION_24
0x4000e90	    0xc783b8000000	               mov dword [rbx + 0xb8], 0	       907	opncls.c	FUNCTION_24
0x4000e9a	    0x48c783b00000	               mov qword [rbx + 0xb0], 0	       908	opncls.c	FUNCTION_24
0x4000ea5	    0x48c783f80000	               mov qword [rbx + 0xf8], 0	       909	opncls.c	FUNCTION_24
0x4000eb0	          0x4889df	                            mov rdi, rbx	       911	opncls.c	FUNCTION_24	CALL_2
0x4000eb3	      0xe800000000	                          call 0x4000eb8	       911	opncls.c	FUNCTION_24	CALL_2
0x4000eb8	      0xbe01000000	                              mov esi, 1	       912	opncls.c	FUNCTION_24	CALL_3
0x4000ebd	          0x4889df	                            mov rdi, rbx	       912	opncls.c	FUNCTION_24	CALL_3
0x4000ec0	      0xe800000000	                          call 0x4000ec5	       912	opncls.c	FUNCTION_24	CALL_3
0x4000ec5	      0xb801000000	                              mov eax, 1	       914	opncls.c	FUNCTION_24
0x4000eca	              0x5b	                                 pop rbx	       915	opncls.c	FUNCTION_24
0x4000ecb	              0xc3	                                     ret	       915	opncls.c	FUNCTION_24
get_build_id	DO,0:functions,0:FOR,0:CALL,15:IF,8:SWITCH,0:ELSE,0:WHILE,0	140
0x4000f37	            0x4157	                                push r15	      1825	opncls.c	FUNCTION_42
0x4000f39	            0x4156	                                push r14	      1825	opncls.c	FUNCTION_42
0x4000f3b	            0x4155	                                push r13	      1825	opncls.c	FUNCTION_42
0x4000f3d	            0x4154	                                push r12	      1825	opncls.c	FUNCTION_42
0x4000f3f	              0x55	                                push rbp	      1825	opncls.c	FUNCTION_42
0x4000f40	              0x53	                                push rbx	      1825	opncls.c	FUNCTION_42
0x4000f41	        0x4883ec28	                           sub rsp, 0x28	      1825	opncls.c	FUNCTION_42
0x4000f45	          0x4889fb	                            mov rbx, rdi	      1825	opncls.c	FUNCTION_42
0x4000f48	    0x64488b042528	                mov rax, qword fs:[0x28]	      1825	opncls.c	FUNCTION_42
0x4000f51	      0x4889442418	             mov qword [rsp + 0x18], rax	      1825	opncls.c	FUNCTION_42
0x4000f56	            0x31c0	                            xor eax, eax	      1825	opncls.c	FUNCTION_42
0x4000f58	          0x4885ff	                           test rdi, rdi	      1833	opncls.c	FUNCTION_42	CALL_1
0x4000f5b	            0x750f	                           jne 0x4000f6c	      1833	opncls.c	FUNCTION_42	CALL_1
0x4000f5d	      0xbe29070000	                          mov esi, 0x729	      1833	opncls.c	FUNCTION_42	CALL_1
0x4000f62	      0xbf00000000	                              mov edi, 0	      1833	opncls.c	FUNCTION_42	CALL_1
0x4000f67	      0xe800000000	                          call 0x4000f6c	      1833	opncls.c	FUNCTION_42	CALL_1
0x4000f6c	    0x488b93100100	           mov rdx, qword [rbx + 0x110] 	      1835	opncls.c	FUNCTION_42	IF_1
0x4000f73	          0x4885d2	                           test rdx, rdx	      1835	opncls.c	FUNCTION_42	IF_1
0x4000f76	            0x740d	                            je 0x4000f85	      1835	opncls.c	FUNCTION_42	IF_1
0x4000f78	          0x4889d0	                            mov rax, rdx	      1837	opncls.c	FUNCTION_42	IF_1
0x4000f7b	        0x48833a00	                      cmp qword [rdx], 0	      1835	opncls.c	FUNCTION_42	IF_1
0x4000f7f	     0xf85a9010000	                           jne 0x400112e	      1835	opncls.c	FUNCTION_42	IF_1
0x4000f85	      0xbe00000000	                              mov esi, 0	      1839	opncls.c	FUNCTION_42	CALL_2
0x4000f8a	          0x4889df	                            mov rdi, rbx	      1839	opncls.c	FUNCTION_42	CALL_2
0x4000f8d	      0xe800000000	                          call 0x4000f92	      1839	opncls.c	FUNCTION_42	CALL_2
0x4000f92	          0x4889c5	                            mov rbp, rax	      1839	opncls.c	FUNCTION_42	CALL_2
0x4000f95	          0x4885c0	                           test rax, rax	      1840	opncls.c	FUNCTION_42	IF_2
0x4000f98	            0x7514	                           jne 0x4000fae	      1840	opncls.c	FUNCTION_42	IF_2
0x4000f9a	      0xbf10000000	                           mov edi, 0x10	      1842	opncls.c	FUNCTION_42	IF_2	CALL_3
0x4000f9f	      0xe800000000	                          call 0x4000fa4	      1842	opncls.c	FUNCTION_42	IF_2	CALL_3
0x4000fa4	      0xb800000000	                              mov eax, 0	      1843	opncls.c	FUNCTION_42	IF_2
0x4000fa9	      0xe980010000	                           jmp 0x400112e	      1843	opncls.c	FUNCTION_42	IF_2
0x4000fae	      0x4883783823	           cmp qword [rax + 0x38], 0x23 	      1848	opncls.c	FUNCTION_42	IF_3
0x4000fb3	            0x7714	                            ja 0x4000fc9	      1848	opncls.c	FUNCTION_42	IF_3
0x4000fb5	      0xbf05000000	                              mov edi, 5	      1850	opncls.c	FUNCTION_42	IF_3	CALL_4
0x4000fba	      0xe800000000	                          call 0x4000fbf	      1850	opncls.c	FUNCTION_42	IF_3	CALL_4
0x4000fbf	      0xb800000000	                              mov eax, 0	      1851	opncls.c	FUNCTION_42	IF_3
0x4000fc4	      0xe965010000	                           jmp 0x400112e	      1851	opncls.c	FUNCTION_42	IF_3
0x4000fc9	      0x488d542410	                   lea rdx, [rsp + 0x10]	      1854	opncls.c	FUNCTION_42	IF_4	CALL_5
0x4000fce	          0x4889c6	                            mov rsi, rax	      1854	opncls.c	FUNCTION_42	IF_4	CALL_5
0x4000fd1	          0x4889df	                            mov rdi, rbx	      1854	opncls.c	FUNCTION_42	IF_4	CALL_5
0x4000fd4	      0xe800000000	                          call 0x4000fd9	      1854	opncls.c	FUNCTION_42	IF_4	CALL_5
0x4000fd9	            0x85c0	                           test eax, eax	      1854	opncls.c	FUNCTION_42	IF_4	CALL_5
0x4000fdb	            0x7522	                           jne 0x4000fff	      1854	opncls.c	FUNCTION_42	IF_4	CALL_5
0x4000fdd	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1856	opncls.c	FUNCTION_42	IF_4	IF_5
0x4000fe2	      0xb800000000	                              mov eax, 0	      1858	opncls.c	FUNCTION_42	IF_4
0x4000fe7	          0x4885ff	                           test rdi, rdi	      1856	opncls.c	FUNCTION_42	IF_4	IF_5
0x4000fea	     0xf843e010000	                            je 0x400112e	      1856	opncls.c	FUNCTION_42	IF_4	IF_5
0x4000ff0	      0xe800000000	                          call 0x4000ff5	      1857	opncls.c	FUNCTION_42	IF_4	CALL_6
0x4000ff5	      0xb800000000	                              mov eax, 0	      1858	opncls.c	FUNCTION_42	IF_4
0x4000ffa	      0xe92f010000	                           jmp 0x400112e	      1858	opncls.c	FUNCTION_42	IF_4
0x4000fff	        0x4c8b7d38	            mov r15, qword [rbp + 0x38] 	      1864	opncls.c	FUNCTION_42
0x4001003	        0x4983ff0c	                            cmp r15, 0xc	      1865	opncls.c	FUNCTION_42	IF_6
0x4001007	            0x771e	                            ja 0x4001027	      1865	opncls.c	FUNCTION_42	IF_6
0x4001009	      0xbf05000000	                              mov edi, 5	      1867	opncls.c	FUNCTION_42	IF_6	CALL_7
0x400100e	      0xe800000000	                          call 0x4001013	      1867	opncls.c	FUNCTION_42	IF_6	CALL_7
0x4001013	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1868	opncls.c	FUNCTION_42	IF_6	CALL_8
0x4001018	      0xe800000000	                          call 0x400101d	      1868	opncls.c	FUNCTION_42	IF_6	CALL_8
0x400101d	      0xb800000000	                              mov eax, 0	      1869	opncls.c	FUNCTION_42	IF_6
0x4001022	      0xe907010000	                           jmp 0x400112e	      1869	opncls.c	FUNCTION_42	IF_6
0x4001027	      0x488b6c2410	            mov rbp, qword [rsp + 0x10] 	      1872	opncls.c	FUNCTION_42
0x400102c	        0x488d7d08	                      lea rdi, [rbp + 8]	      1873	opncls.c	FUNCTION_42
0x4001030	        0x488b4308	                mov rax, qword [rbx + 8]	      1873	opncls.c	FUNCTION_42
0x4001034	    0xff9080000000	                 call qword [rax + 0x80]	      1873	opncls.c	FUNCTION_42
0x400103a	      0x4889442408	                mov qword [rsp + 8], rax	      1873	opncls.c	FUNCTION_42
0x400103f	        0x488b4308	                mov rax, qword [rbx + 8]	      1874	opncls.c	FUNCTION_42
0x4001043	          0x4889ef	                            mov rdi, rbp	      1874	opncls.c	FUNCTION_42
0x4001046	    0xff9080000000	                 call qword [rax + 0x80]	      1874	opncls.c	FUNCTION_42
0x400104c	          0x4989c4	                            mov r12, rax	      1874	opncls.c	FUNCTION_42
0x400104f	        0x488d7d04	                      lea rdi, [rbp + 4]	      1876	opncls.c	FUNCTION_42
0x4001053	        0x488b4308	                mov rax, qword [rbx + 8]	      1876	opncls.c	FUNCTION_42
0x4001057	    0xff9080000000	                 call qword [rax + 0x80]	      1876	opncls.c	FUNCTION_42
0x400105d	          0x4989c5	                            mov r13, rax	      1876	opncls.c	FUNCTION_42
0x4001060	      0x498d442403	                      lea rax, [r12 + 3]	      1877	opncls.c	FUNCTION_42
0x4001065	          0x4989c6	                            mov r14, rax	      1877	opncls.c	FUNCTION_42
0x4001068	        0x4983e6fc	             and r14, 0xfffffffffffffffc	      1877	opncls.c	FUNCTION_42
0x400106c	          0x4939c4	                            cmp r12, rax	      1877	opncls.c	FUNCTION_42
0x400106f	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	      1877	opncls.c	FUNCTION_42
0x4001076	        0x4c0f47f2	                          cmova r14, rdx	      1877	opncls.c	FUNCTION_42
0x400107a	    0x48837c240803	                  cmp qword [rsp + 8], 3	      1882	opncls.c	FUNCTION_42	IF_7
0x4001080	           0xf95c1	                                setne cl	      1882	opncls.c	FUNCTION_42	IF_7
0x4001083	          0x4d85ed	                           test r13, r13	      1882	opncls.c	FUNCTION_42	IF_7
0x4001086	           0xf94c2	                                 sete dl	      1882	opncls.c	FUNCTION_42	IF_7
0x4001089	             0x8d1	                               or cl, dl	      1882	opncls.c	FUNCTION_42	IF_7
0x400108b	            0x7539	                           jne 0x40010c6	      1882	opncls.c	FUNCTION_42	IF_7
0x400108d	        0x4983fc04	                              cmp r12, 4	      1882	opncls.c	FUNCTION_42	IF_7
0x4001091	            0x7533	                           jne 0x40010c6	      1882	opncls.c	FUNCTION_42	IF_7
0x4001093	        0x807d0c47	              cmp byte [rbp + 0xc], 0x47	      1883	opncls.c	FUNCTION_42	IF_7	CALL_9
0x4001097	            0x752d	                           jne 0x40010c6	      1883	opncls.c	FUNCTION_42	IF_7	CALL_9
0x4001099	        0x807d0d4e	              cmp byte [rbp + 0xd], 0x4e	      1883	opncls.c	FUNCTION_42	IF_7	CALL_9
0x400109d	            0x7527	                           jne 0x40010c6	      1883	opncls.c	FUNCTION_42	IF_7	CALL_9
0x400109f	        0x807d0e55	              cmp byte [rbp + 0xe], 0x55	      1883	opncls.c	FUNCTION_42	IF_7	CALL_9
0x40010a3	            0x7521	                           jne 0x40010c6	      1883	opncls.c	FUNCTION_42	IF_7	CALL_9
0x40010a5	        0x807d0f00	                 cmp byte [rbp + 0xf], 0	      1883	opncls.c	FUNCTION_42	IF_7	CALL_9
0x40010a9	            0x751b	                           jne 0x40010c6	      1883	opncls.c	FUNCTION_42	IF_7	CALL_9
0x40010ab	      0xba0b000000	                            mov edx, 0xb	      1884	opncls.c	FUNCTION_42	IF_7
0x40010b0	          0x4939c4	                            cmp r12, rax	      1884	opncls.c	FUNCTION_42	IF_7
0x40010b3	            0x7708	                            ja 0x40010bd	      1884	opncls.c	FUNCTION_42	IF_7
0x40010b5	        0x4883e0fc	             and rax, 0xfffffffffffffffc	      1884	opncls.c	FUNCTION_42	IF_7
0x40010b9	        0x488d500c	                    lea rdx, [rax + 0xc]	      1884	opncls.c	FUNCTION_42	IF_7
0x40010bd	        0x4a8d042a	                    lea rax, [rdx + r13]	      1884	opncls.c	FUNCTION_42	IF_7
0x40010c1	          0x4939c7	                            cmp r15, rax	      1884	opncls.c	FUNCTION_42	IF_7
0x40010c4	            0x731b	                           jae 0x40010e1	      1884	opncls.c	FUNCTION_42	IF_7
0x40010c6	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1886	opncls.c	FUNCTION_42	IF_7	CALL_10
0x40010cb	      0xe800000000	                          call 0x40010d0	      1886	opncls.c	FUNCTION_42	IF_7	CALL_10
0x40010d0	      0xbf05000000	                              mov edi, 5	      1887	opncls.c	FUNCTION_42	IF_7	CALL_11
0x40010d5	      0xe800000000	                          call 0x40010da	      1887	opncls.c	FUNCTION_42	IF_7	CALL_11
0x40010da	      0xb800000000	                              mov eax, 0	      1888	opncls.c	FUNCTION_42	IF_7
0x40010df	            0xeb4d	                           jmp 0x400112e	      1888	opncls.c	FUNCTION_42	IF_7
0x40010e1	        0x498d7510	                   lea rsi, [r13 + 0x10]	      1891	opncls.c	FUNCTION_42	CALL_12
0x40010e5	          0x4889df	                            mov rdi, rbx	      1891	opncls.c	FUNCTION_42	CALL_12
0x40010e8	      0xe800000000	                          call 0x40010ed	      1891	opncls.c	FUNCTION_42	CALL_12
0x40010ed	          0x4989c4	                            mov r12, rax	      1891	opncls.c	FUNCTION_42	CALL_12
0x40010f0	          0x4885c0	                           test rax, rax	      1892	opncls.c	FUNCTION_42	IF_8
0x40010f3	            0x7511	                           jne 0x4001106	      1892	opncls.c	FUNCTION_42	IF_8
0x40010f5	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1894	opncls.c	FUNCTION_42	IF_8	CALL_13
0x40010fa	      0xe800000000	                          call 0x40010ff	      1894	opncls.c	FUNCTION_42	IF_8	CALL_13
0x40010ff	      0xb800000000	                              mov eax, 0	      1895	opncls.c	FUNCTION_42	IF_8
0x4001104	            0xeb28	                           jmp 0x400112e	      1895	opncls.c	FUNCTION_42	IF_8
0x4001106	          0x4c8928	                    mov qword [rax], r13	      1898	opncls.c	FUNCTION_42
0x4001109	        0x488d7808	                      lea rdi, [rax + 8]	        53	string3.h	FUNCTION_46	CALL_3
0x400110d	      0x4a8d74350c	              lea rsi, [rbp + r14 + 0xc]	        53	string3.h	FUNCTION_46	CALL_3
0x4001112	          0x4c89ea	                            mov rdx, r13	        53	string3.h	FUNCTION_46	CALL_3
0x4001115	      0xe800000000	                          call 0x400111a	        53	string3.h	FUNCTION_46	CALL_3
0x400111a	    0x4c89a3100100	            mov qword [rbx + 0x110], r12	      1900	opncls.c	FUNCTION_42
0x4001121	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1901	opncls.c	FUNCTION_42	CALL_15
0x4001126	      0xe800000000	                          call 0x400112b	      1901	opncls.c	FUNCTION_42	CALL_15
0x400112b	          0x4c89e0	                            mov rax, r12	      1903	opncls.c	FUNCTION_42
0x400112e	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1904	opncls.c	FUNCTION_42
0x4001133	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1904	opncls.c	FUNCTION_42
0x400113c	            0x7405	                            je 0x4001143	      1904	opncls.c	FUNCTION_42
0x400113e	      0xe800000000	                          call 0x4001143	      1904	opncls.c	FUNCTION_42
0x4001143	        0x4883c428	                           add rsp, 0x28	      1904	opncls.c	FUNCTION_42
0x4001147	              0x5b	                                 pop rbx	      1904	opncls.c	FUNCTION_42
0x4001148	              0x5d	                                 pop rbp	      1904	opncls.c	FUNCTION_42
0x4001149	            0x415c	                                 pop r12	      1904	opncls.c	FUNCTION_42
0x400114b	            0x415d	                                 pop r13	      1904	opncls.c	FUNCTION_42
0x400114d	            0x415e	                                 pop r14	      1904	opncls.c	FUNCTION_42
0x400114f	            0x415f	                                 pop r15	      1904	opncls.c	FUNCTION_42
0x4001151	              0xc3	                                     ret	      1904	opncls.c	FUNCTION_42
separate_debug_file_exists	DO,0:functions,0:FOR,0:CALL,6:IF,1:SWITCH,0:ELSE,0:WHILE,1	47
0x400154f	            0x4154	                                push r12	      1325	opncls.c	FUNCTION_34
0x4001551	              0x55	                                push rbp	      1325	opncls.c	FUNCTION_34
0x4001552	              0x53	                                push rbx	      1325	opncls.c	FUNCTION_34
0x4001553	          0x4889fb	                            mov rbx, rdi	      1325	opncls.c	FUNCTION_34
0x4001556	          0x4889f5	                            mov rbp, rsi	      1325	opncls.c	FUNCTION_34
0x4001559	          0x4885ff	                           test rdi, rdi	      1332	opncls.c	FUNCTION_34	CALL_1
0x400155c	            0x750f	                           jne 0x400156d	      1332	opncls.c	FUNCTION_34	CALL_1
0x400155e	      0xbe34050000	                          mov esi, 0x534	      1332	opncls.c	FUNCTION_34	CALL_1
0x4001563	      0xbf00000000	                              mov edi, 0	      1332	opncls.c	FUNCTION_34	CALL_1
0x4001568	      0xe800000000	                          call 0x400156d	      1332	opncls.c	FUNCTION_34	CALL_1
0x400156d	          0x4885ed	                           test rbp, rbp	      1333	opncls.c	FUNCTION_34	CALL_2
0x4001570	            0x750f	                           jne 0x4001581	      1333	opncls.c	FUNCTION_34	CALL_2
0x4001572	      0xbe35050000	                          mov esi, 0x535	      1333	opncls.c	FUNCTION_34	CALL_2
0x4001577	      0xbf00000000	                              mov edi, 0	      1333	opncls.c	FUNCTION_34	CALL_2
0x400157c	      0xe800000000	                          call 0x4001581	      1333	opncls.c	FUNCTION_34	CALL_2
0x4001581	        0x4c8b6500	                    mov r12, qword [rbp]	      1335	opncls.c	FUNCTION_34
0x4001585	      0xbe00000000	                              mov esi, 0	      1337	opncls.c	FUNCTION_34	CALL_3
0x400158a	          0x4889df	                            mov rdi, rbx	      1337	opncls.c	FUNCTION_34	CALL_3
0x400158d	      0xe800000000	                          call 0x4001592	      1337	opncls.c	FUNCTION_34	CALL_3
0x4001592	          0x4889c5	                            mov rbp, rax	      1337	opncls.c	FUNCTION_34	CALL_3
0x4001595	          0x4885c0	                           test rax, rax	      1338	opncls.c	FUNCTION_34	IF_1
0x4001598	            0x7449	                            je 0x40015e3	      1338	opncls.c	FUNCTION_34	IF_1
0x400159a	      0xbb00000000	                              mov ebx, 0	      1338	opncls.c	FUNCTION_34	IF_1
0x400159f	            0xeb13	                           jmp 0x40015b4	      1338	opncls.c	FUNCTION_34	IF_1
0x40015a1	          0x4889c2	                            mov rdx, rax	      1342	opncls.c	FUNCTION_34	CALL_5
0x40015a4	      0xbe00000000	                              mov esi, 0	      1342	opncls.c	FUNCTION_34	CALL_5
0x40015a9	          0x4889df	                            mov rdi, rbx	      1342	opncls.c	FUNCTION_34	CALL_5
0x40015ac	      0xe800000000	                          call 0x40015b1	      1342	opncls.c	FUNCTION_34	CALL_5
0x40015b1	          0x4889c3	                            mov rbx, rax	      1342	opncls.c	FUNCTION_34	CALL_5
0x40015b4	          0x4889e9	                            mov rcx, rbp	       295	stdio2.h	FUNCTION_72	CALL_9
0x40015b7	      0xba00200000	                         mov edx, 0x2000	       295	stdio2.h	FUNCTION_72	CALL_9
0x40015bc	      0xbe01000000	                              mov esi, 1	       295	stdio2.h	FUNCTION_72	CALL_9
0x40015c1	      0xbf00000000	                              mov edi, 0	       295	stdio2.h	FUNCTION_72	CALL_9
0x40015c6	      0xe800000000	                          call 0x40015cb	       295	stdio2.h	FUNCTION_72	CALL_9
0x40015cb	          0x4885c0	                           test rax, rax	      1341	opncls.c	FUNCTION_34	WHILE_1	CALL_4
0x40015ce	            0x75d1	                           jne 0x40015a1	      1341	opncls.c	FUNCTION_34	WHILE_1	CALL_4
0x40015d0	          0x4889ef	                            mov rdi, rbp	      1344	opncls.c	FUNCTION_34	CALL_6
0x40015d3	      0xe800000000	                          call 0x40015d8	      1344	opncls.c	FUNCTION_34	CALL_6
0x40015d8	          0x4c39e3	                            cmp rbx, r12	      1346	opncls.c	FUNCTION_34
0x40015db	           0xf94c0	                                 sete al	      1346	opncls.c	FUNCTION_34
0x40015de	           0xfb6c0	                           movzx eax, al	      1346	opncls.c	FUNCTION_34
0x40015e1	            0xeb05	                           jmp 0x40015e8	      1346	opncls.c	FUNCTION_34
0x40015e3	      0xb800000000	                              mov eax, 0	      1339	opncls.c	FUNCTION_34	IF_1
0x40015e8	              0x5b	                                 pop rbx	      1347	opncls.c	FUNCTION_34
0x40015e9	              0x5d	                                 pop rbp	      1347	opncls.c	FUNCTION_34
0x40015ea	            0x415c	                                 pop r12	      1347	opncls.c	FUNCTION_34
0x40015ec	              0xc3	                                     ret	      1347	opncls.c	FUNCTION_34
bfd_zalloc	DO,0:functions,0:FOR,0:CALL,2:IF,1:SWITCH,0:ELSE,0:WHILE,0	17
0x4001399	              0x55	                                push rbp	       995	opncls.c	FUNCTION_27
0x400139a	              0x53	                                push rbx	       995	opncls.c	FUNCTION_27
0x400139b	        0x4883ec08	                              sub rsp, 8	       995	opncls.c	FUNCTION_27
0x400139f	          0x4889f5	                            mov rbp, rsi	       995	opncls.c	FUNCTION_27
0x40013a2	      0xe800000000	                          call 0x40013a7	       998	opncls.c	FUNCTION_27	CALL_1
0x40013a7	          0x4889c3	                            mov rbx, rax	       998	opncls.c	FUNCTION_27	CALL_1
0x40013aa	          0x4885c0	                           test rax, rax	       999	opncls.c	FUNCTION_27	IF_1
0x40013ad	            0x7410	                            je 0x40013bf	       999	opncls.c	FUNCTION_27	IF_1
0x40013af	          0x4889ea	                            mov rdx, rbp	        90	string3.h	FUNCTION_49	CALL_6
0x40013b2	      0xbe00000000	                              mov esi, 0	        90	string3.h	FUNCTION_49	CALL_6
0x40013b7	          0x4889c7	                            mov rdi, rax	        90	string3.h	FUNCTION_49	CALL_6
0x40013ba	      0xe800000000	                          call 0x40013bf	        90	string3.h	FUNCTION_49	CALL_6
0x40013bf	          0x4889d8	                            mov rax, rbx	      1002	opncls.c	FUNCTION_27
0x40013c2	        0x4883c408	                              add rsp, 8	      1002	opncls.c	FUNCTION_27
0x40013c6	              0x5b	                                 pop rbx	      1002	opncls.c	FUNCTION_27
0x40013c7	              0x5d	                                 pop rbp	      1002	opncls.c	FUNCTION_27
0x40013c8	              0xc3	                                     ret	      1002	opncls.c	FUNCTION_27
_bfd_delete_bfd	DO,0:functions,0:FOR,0:CALL,5:IF,2:SWITCH,0:ELSE,0:WHILE,0	18
0x400012e	              0x53	                                push rbx	       122	opncls.c	FUNCTION_3
0x400012f	          0x4889fb	                            mov rbx, rdi	       122	opncls.c	FUNCTION_3
0x4000132	    0x4883bf080100	              cmp qword [rdi + 0x108], 0	       123	opncls.c	FUNCTION_3	IF_1
0x400013a	            0x7415	                            je 0x4000151	       123	opncls.c	FUNCTION_3	IF_1
0x400013c	        0x488d7f68	                   lea rdi, [rdi + 0x68]	       125	opncls.c	FUNCTION_3	IF_1	CALL_1
0x4000140	      0xe800000000	                          call 0x4000145	       125	opncls.c	FUNCTION_3	IF_1	CALL_1
0x4000145	    0x488bbb080100	           mov rdi, qword [rbx + 0x108] 	       126	opncls.c	FUNCTION_3	IF_1	CALL_2
0x400014c	      0xe800000000	                          call 0x4000151	       126	opncls.c	FUNCTION_3	IF_1	CALL_2
0x4000151	          0x488b3b	                    mov rdi, qword [rbx]	       129	opncls.c	FUNCTION_3	IF_2
0x4000154	          0x4885ff	                           test rdi, rdi	       129	opncls.c	FUNCTION_3	IF_2
0x4000157	            0x7405	                            je 0x400015e	       129	opncls.c	FUNCTION_3	IF_2
0x4000159	      0xe800000000	                          call 0x400015e	       130	opncls.c	FUNCTION_3	CALL_3
0x400015e	    0x488bbbc80000	            mov rdi, qword [rbx + 0xc8] 	       131	opncls.c	FUNCTION_3	CALL_4
0x4000165	      0xe800000000	                          call 0x400016a	       131	opncls.c	FUNCTION_3	CALL_4
0x400016a	          0x4889df	                            mov rdi, rbx	       132	opncls.c	FUNCTION_3	CALL_5
0x400016d	      0xe800000000	                          call 0x4000172	       132	opncls.c	FUNCTION_3	CALL_5
0x4000172	              0x5b	                                 pop rbx	       133	opncls.c	FUNCTION_3
0x4000173	              0xc3	                                     ret	       133	opncls.c	FUNCTION_3
bfd_follow_gnu_debuglink	DO,0:functions,0:FOR,0:CALL,1:IF,0:SWITCH,0:ELSE,0:WHILE,0	15
0x4001794	        0x4883ec18	                           sub rsp, 0x18	      1591	opncls.c	FUNCTION_37
0x4001798	    0x64488b042528	                mov rax, qword fs:[0x28]	      1591	opncls.c	FUNCTION_37
0x40017a1	      0x4889442408	                mov qword [rsp + 8], rax	      1591	opncls.c	FUNCTION_37
0x40017a6	            0x31c0	                            xor eax, eax	      1591	opncls.c	FUNCTION_37
0x40017a8	          0x4989e1	                             mov r9, rsp	      1594	opncls.c	FUNCTION_37	CALL_1
0x40017ab	    0x41b800000000	                              mov r8d, 0	      1594	opncls.c	FUNCTION_37	CALL_1
0x40017b1	      0xb900000000	                              mov ecx, 0	      1594	opncls.c	FUNCTION_37	CALL_1
0x40017b6	      0xba01000000	                              mov edx, 1	      1594	opncls.c	FUNCTION_37	CALL_1
0x40017bb	      0xe803ebffff	       call sym.find_separate_debug_file	      1594	opncls.c	FUNCTION_37	CALL_1
0x40017c0	      0x488b542408	                mov rdx, qword [rsp + 8]	      1597	opncls.c	FUNCTION_37
0x40017c5	    0x644833142528	                xor rdx, qword fs:[0x28]	      1597	opncls.c	FUNCTION_37
0x40017ce	            0x7405	                            je 0x40017d5	      1597	opncls.c	FUNCTION_37
0x40017d0	      0xe800000000	                          call 0x40017d5	      1597	opncls.c	FUNCTION_37
0x40017d5	        0x4883c418	                           add rsp, 0x18	      1597	opncls.c	FUNCTION_37
0x40017d9	              0xc3	                                     ret	      1597	opncls.c	FUNCTION_37
bfd_create_gnu_debuglink_section	DO,0:functions,0:FOR,0:CALL,8:IF,4:SWITCH,0:ELSE,0:WHILE,0	54
0x40017fe	            0x4154	                                push r12	      1667	opncls.c	FUNCTION_40
0x4001800	              0x55	                                push rbp	      1667	opncls.c	FUNCTION_40
0x4001801	              0x53	                                push rbx	      1667	opncls.c	FUNCTION_40
0x4001802	          0x4885ff	                           test rdi, rdi	      1672	opncls.c	FUNCTION_40	IF_1
0x4001805	            0x7408	                            je 0x400180f	      1672	opncls.c	FUNCTION_40	IF_1
0x4001807	          0x4889fd	                            mov rbp, rdi	      1672	opncls.c	FUNCTION_40	IF_1
0x400180a	          0x4885f6	                           test rsi, rsi	      1672	opncls.c	FUNCTION_40	IF_1
0x400180d	            0x7514	                           jne 0x4001823	      1672	opncls.c	FUNCTION_40	IF_1
0x400180f	      0xbf05000000	                              mov edi, 5	      1674	opncls.c	FUNCTION_40	IF_1	CALL_1
0x4001814	      0xe800000000	                          call 0x4001819	      1674	opncls.c	FUNCTION_40	IF_1	CALL_1
0x4001819	      0xb800000000	                              mov eax, 0	      1675	opncls.c	FUNCTION_40	IF_1
0x400181e	      0xe98f000000	                           jmp 0x40018b2	      1675	opncls.c	FUNCTION_40	IF_1
0x4001823	          0x4889f7	                            mov rdi, rsi	      1679	opncls.c	FUNCTION_40	CALL_2
0x4001826	      0xe800000000	                          call 0x400182b	      1679	opncls.c	FUNCTION_40	CALL_2
0x400182b	          0x4989c4	                            mov r12, rax	      1679	opncls.c	FUNCTION_40	CALL_2
0x400182e	      0xbe00000000	                              mov esi, 0	      1681	opncls.c	FUNCTION_40	CALL_3
0x4001833	          0x4889ef	                            mov rdi, rbp	      1681	opncls.c	FUNCTION_40	CALL_3
0x4001836	      0xe800000000	                          call 0x400183b	      1681	opncls.c	FUNCTION_40	CALL_3
0x400183b	          0x4885c0	                           test rax, rax	      1682	opncls.c	FUNCTION_40	IF_2
0x400183e	            0x7411	                            je 0x4001851	      1682	opncls.c	FUNCTION_40	IF_2
0x4001840	      0xbf05000000	                              mov edi, 5	      1685	opncls.c	FUNCTION_40	IF_2	CALL_4
0x4001845	      0xe800000000	                          call 0x400184a	      1685	opncls.c	FUNCTION_40	IF_2	CALL_4
0x400184a	      0xb800000000	                              mov eax, 0	      1686	opncls.c	FUNCTION_40	IF_2
0x400184f	            0xeb61	                           jmp 0x40018b2	      1686	opncls.c	FUNCTION_40	IF_2
0x4001851	      0xba08210000	                         mov edx, 0x2108	      1690	opncls.c	FUNCTION_40	CALL_5
0x4001856	      0xbe00000000	                              mov esi, 0	      1690	opncls.c	FUNCTION_40	CALL_5
0x400185b	          0x4889ef	                            mov rdi, rbp	      1690	opncls.c	FUNCTION_40	CALL_5
0x400185e	      0xe800000000	                          call 0x4001863	      1690	opncls.c	FUNCTION_40	CALL_5
0x4001863	          0x4889c3	                            mov rbx, rax	      1690	opncls.c	FUNCTION_40	CALL_5
0x4001866	          0x4885c0	                           test rax, rax	      1691	opncls.c	FUNCTION_40	IF_3
0x4001869	            0x743b	                            je 0x40018a6	      1691	opncls.c	FUNCTION_40	IF_3
0x400186b	      0xb800000000	                              mov eax, 0	      1696	opncls.c	FUNCTION_40	CALL_6
0x4001870	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1696	opncls.c	FUNCTION_40	CALL_6
0x4001877	          0x4c89e7	                            mov rdi, r12	      1696	opncls.c	FUNCTION_40	CALL_6
0x400187a	            0xf2ae	              repne scasb al, byte [rdi]	      1696	opncls.c	FUNCTION_40	CALL_6
0x400187c	          0x48f7d1	                                 not rcx	      1696	opncls.c	FUNCTION_40	CALL_6
0x400187f	        0x488d5103	                      lea rdx, [rcx + 3]	      1697	opncls.c	FUNCTION_40
0x4001883	        0x4883e2fc	             and rdx, 0xfffffffffffffffc	      1698	opncls.c	FUNCTION_40
0x4001887	        0x4883c204	                              add rdx, 4	      1701	opncls.c	FUNCTION_40	IF_4	CALL_7
0x400188b	          0x4889de	                            mov rsi, rbx	      1701	opncls.c	FUNCTION_40	IF_4	CALL_7
0x400188e	          0x4889ef	                            mov rdi, rbp	      1701	opncls.c	FUNCTION_40	IF_4	CALL_7
0x4001891	      0xe800000000	                          call 0x4001896	      1701	opncls.c	FUNCTION_40	IF_4	CALL_7
0x4001896	            0x85c0	                           test eax, eax	      1701	opncls.c	FUNCTION_40	IF_4	CALL_7
0x4001898	            0x7413	                            je 0x40018ad	      1701	opncls.c	FUNCTION_40	IF_4	CALL_7
0x400189a	    0xc74370020000	               mov dword [rbx + 0x70], 2	      1696	bfd.h	FUNCTION_77
0x40018a1	          0x4889d8	                            mov rax, rbx	      1710	opncls.c	FUNCTION_40
0x40018a4	            0xeb0c	                           jmp 0x40018b2	      1710	opncls.c	FUNCTION_40
0x40018a6	      0xb800000000	                              mov eax, 0	      1692	opncls.c	FUNCTION_40	IF_3
0x40018ab	            0xeb05	                           jmp 0x40018b2	      1692	opncls.c	FUNCTION_40	IF_3
0x40018ad	      0xb800000000	                              mov eax, 0	      1703	opncls.c	FUNCTION_40	IF_4
0x40018b2	              0x5b	                                 pop rbx	      1711	opncls.c	FUNCTION_40
0x40018b3	              0x5d	                                 pop rbp	      1711	opncls.c	FUNCTION_40
0x40018b4	            0x415c	                                 pop r12	      1711	opncls.c	FUNCTION_40
0x40018b6	              0xc3	                                     ret	      1711	opncls.c	FUNCTION_40
bfd_openw	DO,0:functions,0:FOR,0:CALL,7:IF,3:SWITCH,0:ELSE,0:WHILE,0	42
0x4000b72	            0x4154	                                push r12	       645	opncls.c	FUNCTION_18
0x4000b74	              0x55	                                push rbp	       645	opncls.c	FUNCTION_18
0x4000b75	              0x53	                                push rbx	       645	opncls.c	FUNCTION_18
0x4000b76	          0x4989fc	                            mov r12, rdi	       645	opncls.c	FUNCTION_18
0x4000b79	          0x4889f5	                            mov rbp, rsi	       645	opncls.c	FUNCTION_18
0x4000b7c	      0xe800000000	                          call 0x4000b81	       651	opncls.c	FUNCTION_18	CALL_1
0x4000b81	          0x4885c0	                           test rax, rax	       652	opncls.c	FUNCTION_18	IF_1
0x4000b84	            0x7460	                            je 0x4000be6	       652	opncls.c	FUNCTION_18	IF_1
0x4000b86	          0x4889c3	                            mov rbx, rax	       652	opncls.c	FUNCTION_18	IF_1
0x4000b89	          0x4889c6	                            mov rsi, rax	       655	opncls.c	FUNCTION_18	CALL_2
0x4000b8c	          0x4889ef	                            mov rdi, rbp	       655	opncls.c	FUNCTION_18	CALL_2
0x4000b8f	      0xe800000000	                          call 0x4000b94	       655	opncls.c	FUNCTION_18	CALL_2
0x4000b94	          0x4885c0	                           test rax, rax	       656	opncls.c	FUNCTION_18	IF_2
0x4000b97	            0x750f	                           jne 0x4000ba8	       656	opncls.c	FUNCTION_18	IF_2
0x4000b99	          0x4889df	                            mov rdi, rbx	       658	opncls.c	FUNCTION_18	IF_2	CALL_3
0x4000b9c	      0xe88df5ffff	                call sym._bfd_delete_bfd	       658	opncls.c	FUNCTION_18	IF_2	CALL_3
0x4000ba1	      0xb800000000	                              mov eax, 0	       659	opncls.c	FUNCTION_18	IF_2
0x4000ba6	            0xeb48	                           jmp 0x4000bf0	       659	opncls.c	FUNCTION_18	IF_2
0x4000ba8	          0x4c89e7	                            mov rdi, r12	       664	opncls.c	FUNCTION_18	CALL_4
0x4000bab	      0xe800000000	                          call 0x4000bb0	       664	opncls.c	FUNCTION_18	CALL_4
0x4000bb0	          0x488903	                    mov qword [rbx], rax	       664	opncls.c	FUNCTION_18	CALL_4
0x4000bb3	         0xfb64344	           movzx eax, byte [rbx + 0x44] 	       665	opncls.c	FUNCTION_18
0x4000bb7	          0x83e0e7	                     and eax, 0xffffffe7	       665	opncls.c	FUNCTION_18
0x4000bba	          0x83c810	                            or eax, 0x10	       665	opncls.c	FUNCTION_18
0x4000bbd	          0x884344	               mov byte [rbx + 0x44], al	       665	opncls.c	FUNCTION_18
0x4000bc0	          0x4889df	                            mov rdi, rbx	       667	opncls.c	FUNCTION_18	IF_3	CALL_5
0x4000bc3	      0xe800000000	                          call 0x4000bc8	       667	opncls.c	FUNCTION_18	IF_3	CALL_5
0x4000bc8	          0x4885c0	                           test rax, rax	       667	opncls.c	FUNCTION_18	IF_3	CALL_5
0x4000bcb	            0x7520	                           jne 0x4000bed	       667	opncls.c	FUNCTION_18	IF_3	CALL_5
0x4000bcd	      0xbf01000000	                              mov edi, 1	       670	opncls.c	FUNCTION_18	IF_3	CALL_6
0x4000bd2	      0xe800000000	                          call 0x4000bd7	       670	opncls.c	FUNCTION_18	IF_3	CALL_6
0x4000bd7	          0x4889df	                            mov rdi, rbx	       671	opncls.c	FUNCTION_18	IF_3	CALL_7
0x4000bda	      0xe84ff5ffff	                call sym._bfd_delete_bfd	       671	opncls.c	FUNCTION_18	IF_3	CALL_7
0x4000bdf	      0xb800000000	                              mov eax, 0	       672	opncls.c	FUNCTION_18	IF_3
0x4000be4	            0xeb0a	                           jmp 0x4000bf0	       672	opncls.c	FUNCTION_18	IF_3
0x4000be6	      0xb800000000	                              mov eax, 0	       653	opncls.c	FUNCTION_18	IF_1
0x4000beb	            0xeb03	                           jmp 0x4000bf0	       653	opncls.c	FUNCTION_18	IF_1
0x4000bed	          0x4889d8	                            mov rax, rbx	       675	opncls.c	FUNCTION_18
0x4000bf0	              0x5b	                                 pop rbx	       676	opncls.c	FUNCTION_18
0x4000bf1	              0x5d	                                 pop rbp	       676	opncls.c	FUNCTION_18
0x4000bf2	            0x415c	                                 pop r12	       676	opncls.c	FUNCTION_18
0x4000bf4	              0xc3	                                     ret	       676	opncls.c	FUNCTION_18
opncls_bstat	DO,0:functions,0:FOR,0:CALL,1:IF,1:SWITCH,0:ELSE,0:WHILE,0	23
0x40000d6	          0x4989f8	                             mov r8, rdi	       541	opncls.c	FUNCTION_15
0x40000d9	        0x4c8b4f10	              mov r9, qword [rdi + 0x10]	       542	opncls.c	FUNCTION_15
0x40000dd	    0x48c706000000	                      mov qword [rsi], 0	        90	string3.h	FUNCTION_49	CALL_6
0x40000e4	    0x48c786880000	               mov qword [rsi + 0x88], 0	        90	string3.h	FUNCTION_49	CALL_6
0x40000ef	        0x488d7e08	                      lea rdi, [rsi + 8]	        90	string3.h	FUNCTION_49	CALL_6
0x40000f3	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_49	CALL_6
0x40000f7	          0x4889f1	                            mov rcx, rsi	        90	string3.h	FUNCTION_49	CALL_6
0x40000fa	          0x4829f9	                            sub rcx, rdi	        90	string3.h	FUNCTION_49	CALL_6
0x40000fd	    0x81c190000000	                           add ecx, 0x90	        90	string3.h	FUNCTION_49	CALL_6
0x4000103	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_49	CALL_6
0x4000106	            0x89c9	                            mov ecx, ecx	        90	string3.h	FUNCTION_49	CALL_6
0x4000108	      0xb800000000	                              mov eax, 0	        90	string3.h	FUNCTION_49	CALL_6
0x400010d	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_49	CALL_6
0x4000110	        0x498b4918	              mov rcx, qword [r9 + 0x18]	       545	opncls.c	FUNCTION_15	IF_1
0x4000114	          0x4885c9	                           test rcx, rcx	       545	opncls.c	FUNCTION_15	IF_1
0x4000117	            0x7413	                            je 0x400012c	       545	opncls.c	FUNCTION_15	IF_1
0x4000119	        0x4883ec08	                              sub rsp, 8	       541	opncls.c	FUNCTION_15
0x400011d	          0x4889f2	                            mov rdx, rsi	       541	opncls.c	FUNCTION_15
0x4000120	          0x4c89c7	                             mov rdi, r8	       541	opncls.c	FUNCTION_15
0x4000123	          0x498b31	                     mov rsi, qword [r9]	       548	opncls.c	FUNCTION_15
0x4000126	            0xffd1	                                call rcx	       548	opncls.c	FUNCTION_15
0x4000128	        0x4883c408	                              add rsp, 8	       549	opncls.c	FUNCTION_15
0x400012c	            0xf3c3	                                     ret	       549	opncls.c	FUNCTION_15
opncls_bmmap	DO,0:functions,0:FOR,0:CALL,0:IF,0:SWITCH,0:ELSE,0:WHILE,0	2
0x40000ce	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       562	opncls.c	FUNCTION_16
0x40000d5	              0xc3	                                     ret	       562	opncls.c	FUNCTION_16
bfd_close	DO,0:functions,0:FOR,0:CALL,2:IF,2:SWITCH,0:ELSE,0:WHILE,0	14
0x4000cd3	              0x53	                                push rbx	       728	opncls.c	FUNCTION_20
0x4000cd4	          0x4889fb	                            mov rbx, rdi	       728	opncls.c	FUNCTION_20
0x4000cd7	        0xf6474410	           test byte [rdi + 0x44], 0x10 	       729	opncls.c	FUNCTION_20	IF_1	CALL_1
0x4000cdb	            0x7416	                            je 0x4000cf3	       729	opncls.c	FUNCTION_20	IF_1	CALL_1
0x4000cdd	        0x488b5708	                mov rdx, qword [rdi + 8]	       731	opncls.c	FUNCTION_20	IF_1	IF_2
0x4000ce1	         0xfb64744	           movzx eax, byte [rdi + 0x44] 	       731	opncls.c	FUNCTION_20	IF_1	IF_2
0x4000ce5	          0x83e007	                              and eax, 7	       731	opncls.c	FUNCTION_20	IF_1	IF_2
0x4000ce8	    0xff94c2f00000	        call qword [rdx + rax*8 + 0xf0] 	       731	opncls.c	FUNCTION_20	IF_1	IF_2
0x4000cef	            0x85c0	                           test eax, eax	       731	opncls.c	FUNCTION_20	IF_1	IF_2
0x4000cf1	            0x7408	                            je 0x4000cfb	       731	opncls.c	FUNCTION_20	IF_1	IF_2
0x4000cf3	          0x4889df	                            mov rdi, rbx	       735	opncls.c	FUNCTION_20	CALL_2
0x4000cf6	      0xe800000000	                          call 0x4000cfb	       735	opncls.c	FUNCTION_20	CALL_2
0x4000cfb	              0x5b	                                 pop rbx	       736	opncls.c	FUNCTION_20
0x4000cfc	              0xc3	                                     ret	       736	opncls.c	FUNCTION_20
bfd_alloc2	DO,0:functions,0:FOR,0:CALL,2:IF,1:SWITCH,0:ELSE,0:WHILE,0	22
0x400134a	        0x4883ec08	                              sub rsp, 8	       969	opncls.c	FUNCTION_26
0x400134e	          0x4889d1	                            mov rcx, rdx	       969	opncls.c	FUNCTION_26
0x4001351	          0x4889f2	                            mov rdx, rsi	       971	opncls.c	FUNCTION_26	IF_1
0x4001354	          0x4809ca	                             or rdx, rcx	       971	opncls.c	FUNCTION_26	IF_1
0x4001357	      0xb8ffffffff	                     mov eax, 0xffffffff	       971	opncls.c	FUNCTION_26	IF_1
0x400135c	          0x4839c2	                            cmp rdx, rax	       971	opncls.c	FUNCTION_26	IF_1
0x400135f	            0x762a	                           jbe 0x400138b	       971	opncls.c	FUNCTION_26	IF_1
0x4001361	          0x4885c9	                           test rcx, rcx	       971	opncls.c	FUNCTION_26	IF_1
0x4001364	            0x7425	                            je 0x400138b	       971	opncls.c	FUNCTION_26	IF_1
0x4001366	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       972	opncls.c	FUNCTION_26	IF_1
0x400136d	      0xba00000000	                              mov edx, 0	       972	opncls.c	FUNCTION_26	IF_1
0x4001372	          0x48f7f1	                                 div rcx	       972	opncls.c	FUNCTION_26	IF_1
0x4001375	          0x4839c6	                            cmp rsi, rax	       972	opncls.c	FUNCTION_26	IF_1
0x4001378	            0x7611	                           jbe 0x400138b	       972	opncls.c	FUNCTION_26	IF_1
0x400137a	      0xbf06000000	                              mov edi, 6	       974	opncls.c	FUNCTION_26	IF_1	CALL_1
0x400137f	      0xe800000000	                          call 0x4001384	       974	opncls.c	FUNCTION_26	IF_1	CALL_1
0x4001384	      0xb800000000	                              mov eax, 0	       975	opncls.c	FUNCTION_26	IF_1
0x4001389	            0xeb09	                           jmp 0x4001394	       975	opncls.c	FUNCTION_26	IF_1
0x400138b	        0x480faff1	                           imul rsi, rcx	       978	opncls.c	FUNCTION_26	CALL_2
0x400138f	      0xe800000000	                          call 0x4001394	       978	opncls.c	FUNCTION_26	CALL_2
0x4001394	        0x4883c408	                              add rsp, 8	       979	opncls.c	FUNCTION_26
0x4001398	              0xc3	                                     ret	       979	opncls.c	FUNCTION_26
check_build_id_file	DO,0:functions,0:FOR,0:CALL,9:IF,3:SWITCH,0:ELSE,0:WHILE,0	57
0x4001152	            0x4154	                                push r12	      1988	opncls.c	FUNCTION_44
0x4001154	              0x55	                                push rbp	      1988	opncls.c	FUNCTION_44
0x4001155	              0x53	                                push rbx	      1988	opncls.c	FUNCTION_44
0x4001156	          0x4889fb	                            mov rbx, rdi	      1988	opncls.c	FUNCTION_44
0x4001159	          0x4989f4	                            mov r12, rsi	      1988	opncls.c	FUNCTION_44
0x400115c	          0x4885ff	                           test rdi, rdi	      1994	opncls.c	FUNCTION_44	CALL_1
0x400115f	            0x750f	                           jne 0x4001170	      1994	opncls.c	FUNCTION_44	CALL_1
0x4001161	      0xbeca070000	                          mov esi, 0x7ca	      1994	opncls.c	FUNCTION_44	CALL_1
0x4001166	      0xbf00000000	                              mov edi, 0	      1994	opncls.c	FUNCTION_44	CALL_1
0x400116b	      0xe800000000	                          call 0x4001170	      1994	opncls.c	FUNCTION_44	CALL_1
0x4001170	          0x4d85e4	                           test r12, r12	      1995	opncls.c	FUNCTION_44	CALL_2
0x4001173	            0x750f	                           jne 0x4001184	      1995	opncls.c	FUNCTION_44	CALL_2
0x4001175	      0xbecb070000	                          mov esi, 0x7cb	      1995	opncls.c	FUNCTION_44	CALL_2
0x400117a	      0xbf00000000	                              mov edi, 0	      1995	opncls.c	FUNCTION_44	CALL_2
0x400117f	      0xe800000000	                          call 0x4001184	      1995	opncls.c	FUNCTION_44	CALL_2
0x4001184	      0xbe00000000	                              mov esi, 0	      1997	opncls.c	FUNCTION_44	CALL_3
0x4001189	          0x4889df	                            mov rdi, rbx	      1997	opncls.c	FUNCTION_44	CALL_3
0x400118c	      0xe800000000	                          call 0x4001191	      1997	opncls.c	FUNCTION_44	CALL_3
0x4001191	          0x4889c5	                            mov rbp, rax	      1997	opncls.c	FUNCTION_44	CALL_3
0x4001194	      0xbb00000000	                              mov ebx, 0	      1999	opncls.c	FUNCTION_44	IF_1
0x4001199	          0x4885c0	                           test rax, rax	      1998	opncls.c	FUNCTION_44	IF_1
0x400119c	            0x7467	                            je 0x4001205	      1998	opncls.c	FUNCTION_44	IF_1
0x400119e	      0xbe01000000	                              mov esi, 1	      2002	opncls.c	FUNCTION_44	IF_2	CALL_4
0x40011a3	          0x4889c7	                            mov rdi, rax	      2002	opncls.c	FUNCTION_44	IF_2	CALL_4
0x40011a6	      0xe800000000	                          call 0x40011ab	      2002	opncls.c	FUNCTION_44	IF_2	CALL_4
0x40011ab	            0x89c3	                            mov ebx, eax	      2002	opncls.c	FUNCTION_44	IF_2	CALL_4
0x40011ad	            0x85c0	                           test eax, eax	      2002	opncls.c	FUNCTION_44	IF_2	CALL_4
0x40011af	            0x750a	                           jne 0x40011bb	      2002	opncls.c	FUNCTION_44	IF_2	CALL_4
0x40011b1	          0x4889ef	                            mov rdi, rbp	      2004	opncls.c	FUNCTION_44	IF_2	CALL_5
0x40011b4	      0xe800000000	                          call 0x40011b9	      2004	opncls.c	FUNCTION_44	IF_2	CALL_5
0x40011b9	            0xeb4a	                           jmp 0x4001205	      2005	opncls.c	FUNCTION_44	IF_2
0x40011bb	          0x4889ef	                            mov rdi, rbp	      2008	opncls.c	FUNCTION_44	CALL_6
0x40011be	      0xe874fdffff	                   call sym.get_build_id	      2008	opncls.c	FUNCTION_44	CALL_6
0x40011c3	          0x4885c0	                           test rax, rax	      2009	opncls.c	FUNCTION_44	IF_3
0x40011c6	            0x750f	                           jne 0x40011d7	      2009	opncls.c	FUNCTION_44	IF_3
0x40011c8	          0x4889ef	                            mov rdi, rbp	      2011	opncls.c	FUNCTION_44	IF_3	CALL_7
0x40011cb	      0xe800000000	                          call 0x40011d0	      2011	opncls.c	FUNCTION_44	IF_3	CALL_7
0x40011d0	      0xbb00000000	                              mov ebx, 0	      2012	opncls.c	FUNCTION_44	IF_3
0x40011d5	            0xeb2e	                           jmp 0x4001205	      2012	opncls.c	FUNCTION_44	IF_3
0x40011d7	        0x498b3424	                    mov rsi, qword [r12]	      2015	opncls.c	FUNCTION_44
0x40011db	          0x488b10	                    mov rdx, qword [rax]	      2017	opncls.c	FUNCTION_44
0x40011de	      0xbb00000000	                              mov ebx, 0	      2018	opncls.c	FUNCTION_44	CALL_8
0x40011e3	          0x483b16	                    cmp rdx, qword [rsi]	      2018	opncls.c	FUNCTION_44	CALL_8
0x40011e6	            0x7515	                           jne 0x40011fd	      2018	opncls.c	FUNCTION_44	CALL_8
0x40011e8	        0x4883c608	                              add rsi, 8	      2018	opncls.c	FUNCTION_44	CALL_8
0x40011ec	        0x488d7808	                      lea rdi, [rax + 8]	      2018	opncls.c	FUNCTION_44	CALL_8
0x40011f0	      0xe800000000	                          call 0x40011f5	      2018	opncls.c	FUNCTION_44	CALL_8
0x40011f5	            0x85c0	                           test eax, eax	      2018	opncls.c	FUNCTION_44	CALL_8
0x40011f7	           0xf94c3	                                 sete bl	      2018	opncls.c	FUNCTION_44	CALL_8
0x40011fa	           0xfb6db	                           movzx ebx, bl	      2018	opncls.c	FUNCTION_44	CALL_8
0x40011fd	          0x4889ef	                            mov rdi, rbp	      2020	opncls.c	FUNCTION_44	CALL_9
0x4001200	      0xe800000000	                          call 0x4001205	      2020	opncls.c	FUNCTION_44	CALL_9
0x4001205	            0x89d8	                            mov eax, ebx	      2023	opncls.c	FUNCTION_44
0x4001207	              0x5b	                                 pop rbx	      2023	opncls.c	FUNCTION_44
0x4001208	              0x5d	                                 pop rbp	      2023	opncls.c	FUNCTION_44
0x4001209	            0x415c	                                 pop r12	      2023	opncls.c	FUNCTION_44
0x400120b	              0xc3	                                     ret	      2023	opncls.c	FUNCTION_44
_bfd_free_cached_info	DO,0:functions,0:FOR,0:CALL,2:IF,1:SWITCH,0:ELSE,0:WHILE,0	19
0x400089c	    0x4883bf080100	              cmp qword [rdi + 0x108], 0	       140	opncls.c	FUNCTION_4	IF_1
0x40008a4	            0x7462	                            je 0x4000908	       140	opncls.c	FUNCTION_4	IF_1
0x40008a6	              0x53	                                push rbx	       139	opncls.c	FUNCTION_4
0x40008a7	          0x4889fb	                            mov rbx, rdi	       139	opncls.c	FUNCTION_4
0x40008aa	        0x488d7f68	                   lea rdi, [rdi + 0x68]	       142	opncls.c	FUNCTION_4	IF_1	CALL_1
0x40008ae	      0xe800000000	                          call 0x40008b3	       142	opncls.c	FUNCTION_4	IF_1	CALL_1
0x40008b3	    0x488bbb080100	           mov rdi, qword [rbx + 0x108] 	       143	opncls.c	FUNCTION_4	IF_1	CALL_2
0x40008ba	      0xe800000000	                          call 0x40008bf	       143	opncls.c	FUNCTION_4	IF_1	CALL_2
0x40008bf	    0x48c783900000	               mov qword [rbx + 0x90], 0	       145	opncls.c	FUNCTION_4	IF_1
0x40008ca	    0x48c783980000	               mov qword [rbx + 0x98], 0	       146	opncls.c	FUNCTION_4	IF_1
0x40008d5	    0x48c783b00000	               mov qword [rbx + 0xb0], 0	       147	opncls.c	FUNCTION_4	IF_1
0x40008e0	    0x48c783f80000	               mov qword [rbx + 0xf8], 0	       148	opncls.c	FUNCTION_4	IF_1
0x40008eb	    0x48c783000100	              mov qword [rbx + 0x100], 0	       149	opncls.c	FUNCTION_4	IF_1
0x40008f6	    0x48c783080100	              mov qword [rbx + 0x108], 0	       150	opncls.c	FUNCTION_4	IF_1
0x4000901	      0xb801000000	                              mov eax, 1	       154	opncls.c	FUNCTION_4
0x4000906	              0x5b	                                 pop rbx	       154	opncls.c	FUNCTION_4
0x4000907	              0xc3	                                     ret	       154	opncls.c	FUNCTION_4
0x4000908	      0xb801000000	                              mov eax, 1	       154	opncls.c	FUNCTION_4
0x400090d	              0xc3	                                     ret	       154	opncls.c	FUNCTION_4
find_separate_debug_file	DO,0:functions,0:FOR,2:CALL,35:IF,17:SWITCH,0:ELSE,2:WHILE,0	309
0x40002c3	            0x4157	                                push r15	      1416	opncls.c	FUNCTION_36
0x40002c5	            0x4156	                                push r14	      1416	opncls.c	FUNCTION_36
0x40002c7	            0x4155	                                push r13	      1416	opncls.c	FUNCTION_36
0x40002c9	            0x4154	                                push r12	      1416	opncls.c	FUNCTION_36
0x40002cb	              0x55	                                push rbp	      1416	opncls.c	FUNCTION_36
0x40002cc	              0x53	                                push rbx	      1416	opncls.c	FUNCTION_36
0x40002cd	        0x4883ec18	                           sub rsp, 0x18	      1416	opncls.c	FUNCTION_36
0x40002d1	          0x4889fd	                            mov rbp, rdi	      1416	opncls.c	FUNCTION_36
0x40002d4	          0x4989f5	                            mov r13, rsi	      1416	opncls.c	FUNCTION_36
0x40002d7	        0x89542404	                mov dword [rsp + 4], edx	      1416	opncls.c	FUNCTION_36
0x40002db	          0x4889cb	                            mov rbx, rcx	      1416	opncls.c	FUNCTION_36
0x40002de	      0x4c89442408	                 mov qword [rsp + 8], r8	      1416	opncls.c	FUNCTION_36
0x40002e3	          0x4d89cf	                             mov r15, r9	      1416	opncls.c	FUNCTION_36
0x40002e6	          0x4885ff	                           test rdi, rdi	      1424	opncls.c	FUNCTION_36	CALL_1
0x40002e9	            0x750f	                           jne 0x40002fa	      1424	opncls.c	FUNCTION_36	CALL_1
0x40002eb	      0xbe90050000	                          mov esi, 0x590	      1424	opncls.c	FUNCTION_36	CALL_1
0x40002f0	      0xbf00000000	                              mov edi, 0	      1424	opncls.c	FUNCTION_36	CALL_1
0x40002f5	      0xe800000000	                          call 0x40002fa	      1424	opncls.c	FUNCTION_36	CALL_1
0x40002fa	          0x4d85ed	                           test r13, r13	      1426	opncls.c	FUNCTION_36	IF_1
0x40002fd	      0xb800000000	                              mov eax, 0	      1426	opncls.c	FUNCTION_36	IF_1
0x4000302	        0x4c0f44e8	                          cmove r13, rax	      1426	opncls.c	FUNCTION_36	IF_1
0x4000306	      0x48837d0000	                      cmp qword [rbp], 0	      1429	opncls.c	FUNCTION_36	IF_2
0x400030b	            0x7514	                           jne 0x4000321	      1429	opncls.c	FUNCTION_36	IF_2
0x400030d	      0xbf05000000	                              mov edi, 5	      1431	opncls.c	FUNCTION_36	IF_2	CALL_2
0x4000312	      0xe800000000	                          call 0x4000317	      1431	opncls.c	FUNCTION_36	IF_2	CALL_2
0x4000317	      0xb800000000	                              mov eax, 0	      1432	opncls.c	FUNCTION_36	IF_2
0x400031c	      0xe92d040000	                           jmp 0x400074e	      1432	opncls.c	FUNCTION_36	IF_2
0x4000321	          0x4c89fe	                            mov rsi, r15	      1435	opncls.c	FUNCTION_36	CALL_3
0x4000324	          0x4889ef	                            mov rdi, rbp	      1435	opncls.c	FUNCTION_36	CALL_3
0x4000327	            0xffd3	                                call rbx	      1435	opncls.c	FUNCTION_36	CALL_3
0x4000329	          0x4989c4	                            mov r12, rax	      1435	opncls.c	FUNCTION_36	CALL_3
0x400032c	          0x4885c0	                           test rax, rax	      1437	opncls.c	FUNCTION_36	IF_3
0x400032f	     0xf8481020000	                            je 0x40005b6	      1437	opncls.c	FUNCTION_36	IF_3
0x4000335	          0x803800	                       cmp byte [rax], 0	      1440	opncls.c	FUNCTION_36	IF_4
0x4000338	            0x751c	                           jne 0x4000356	      1440	opncls.c	FUNCTION_36	IF_4
0x400033a	          0x4889c7	                            mov rdi, rax	      1442	opncls.c	FUNCTION_36	IF_4	CALL_4
0x400033d	      0xe800000000	                          call 0x4000342	      1442	opncls.c	FUNCTION_36	IF_4	CALL_4
0x4000342	      0xbf10000000	                           mov edi, 0x10	      1443	opncls.c	FUNCTION_36	IF_4	CALL_5
0x4000347	      0xe800000000	                          call 0x400034c	      1443	opncls.c	FUNCTION_36	IF_4	CALL_5
0x400034c	      0xb800000000	                              mov eax, 0	      1444	opncls.c	FUNCTION_36	IF_4
0x4000351	      0xe9f8030000	                           jmp 0x400074e	      1444	opncls.c	FUNCTION_36	IF_4
0x4000356	      0x837c240400	                  cmp dword [rsp + 4], 0	      1447	opncls.c	FUNCTION_36	IF_5
0x400035b	     0xf8481000000	                            je 0x40003e2	      1447	opncls.c	FUNCTION_36	IF_5
0x4000361	        0x488b5500	                    mov rdx, qword [rbp]	      1449	opncls.c	FUNCTION_36	IF_5	FOR_1	CALL_6
0x4000365	      0xb800000000	                              mov eax, 0	      1449	opncls.c	FUNCTION_36	IF_5	FOR_1	CALL_6
0x400036a	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1449	opncls.c	FUNCTION_36	IF_5	FOR_1	CALL_6
0x4000371	          0x4889d7	                            mov rdi, rdx	      1449	opncls.c	FUNCTION_36	IF_5	FOR_1	CALL_6
0x4000374	            0xf2ae	              repne scasb al, byte [rdi]	      1449	opncls.c	FUNCTION_36	IF_5	FOR_1	CALL_6
0x4000376	          0x48f7d1	                                 not rcx	      1449	opncls.c	FUNCTION_36	IF_5	FOR_1	CALL_6
0x4000379	        0x4883e901	                              sub rcx, 1	      1449	opncls.c	FUNCTION_36	IF_5	FOR_1	CALL_6
0x400037d	            0x7422	                            je 0x40003a1	      1449	opncls.c	FUNCTION_36	IF_5	FOR_1	CALL_6
0x400037f	        0x488d59ff	                      lea rbx, [rcx - 1]	      1450	opncls.c	FUNCTION_36	IF_5	FOR_1	IF_6	CALL_7
0x4000383	      0x807c0aff2f	         cmp byte [rdx + rcx - 1], 0x2f 	      1450	opncls.c	FUNCTION_36	IF_5	FOR_1	IF_6	CALL_7
0x4000388	            0x7510	                           jne 0x400039a	      1450	opncls.c	FUNCTION_36	IF_5	FOR_1	IF_6	CALL_7
0x400038a	            0xeb1a	                           jmp 0x40003a6	      1450	opncls.c	FUNCTION_36	IF_5	FOR_1	IF_6	CALL_7
0x400038c	        0x488d43ff	                      lea rax, [rbx - 1]	      1450	opncls.c	FUNCTION_36	IF_5	FOR_1	IF_6	CALL_7
0x4000390	      0x807c1aff2f	         cmp byte [rdx + rbx - 1], 0x2f 	      1450	opncls.c	FUNCTION_36	IF_5	FOR_1	IF_6	CALL_7
0x4000395	            0x7412	                            je 0x40003a9	      1450	opncls.c	FUNCTION_36	IF_5	FOR_1	IF_6	CALL_7
0x4000397	          0x4889c3	                            mov rbx, rax	      1450	opncls.c	FUNCTION_36	IF_5	FOR_1	IF_6	CALL_7
0x400039a	          0x4885db	                           test rbx, rbx	      1449	opncls.c	FUNCTION_36	IF_5	FOR_1	CALL_6
0x400039d	            0x75ed	                           jne 0x400038c	      1449	opncls.c	FUNCTION_36	IF_5	FOR_1	CALL_6
0x400039f	            0xeb08	                           jmp 0x40003a9	      1449	opncls.c	FUNCTION_36	IF_5	FOR_1	CALL_6
0x40003a1	          0x4889cb	                            mov rbx, rcx	      1449	opncls.c	FUNCTION_36	IF_5	FOR_1	CALL_6
0x40003a4	            0xeb03	                           jmp 0x40003a9	      1449	opncls.c	FUNCTION_36	IF_5	FOR_1	CALL_6
0x40003a6	          0x4889cb	                            mov rbx, rcx	      1449	opncls.c	FUNCTION_36	IF_5	FOR_1	CALL_6
0x40003a9	        0x488d7b01	                      lea rdi, [rbx + 1]	      1453	opncls.c	FUNCTION_36	IF_5	CALL_8
0x40003ad	      0xe800000000	                          call 0x40003b2	      1453	opncls.c	FUNCTION_36	IF_5	CALL_8
0x40003b2	          0x4989c6	                            mov r14, rax	      1453	opncls.c	FUNCTION_36	IF_5	CALL_8
0x40003b5	          0x4885c0	                           test rax, rax	      1454	opncls.c	FUNCTION_36	IF_5	IF_7
0x40003b8	            0x7512	                           jne 0x40003cc	      1454	opncls.c	FUNCTION_36	IF_5	IF_7
0x40003ba	          0x4c89e7	                            mov rdi, r12	      1456	opncls.c	FUNCTION_36	IF_5	IF_7	CALL_9
0x40003bd	      0xe800000000	                          call 0x40003c2	      1456	opncls.c	FUNCTION_36	IF_5	IF_7	CALL_9
0x40003c2	      0xb800000000	                              mov eax, 0	      1457	opncls.c	FUNCTION_36	IF_5	IF_7
0x40003c7	      0xe982030000	                           jmp 0x400074e	      1457	opncls.c	FUNCTION_36	IF_5	IF_7
0x40003cc	        0x488b7500	                    mov rsi, qword [rbp]	        53	string3.h	FUNCTION_46	CALL_3
0x40003d0	          0x4889da	                            mov rdx, rbx	        53	string3.h	FUNCTION_46	CALL_3
0x40003d3	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_46	CALL_3
0x40003d6	      0xe800000000	                          call 0x40003db	        53	string3.h	FUNCTION_46	CALL_3
0x40003db	      0x41c6041e00	                 mov byte [r14 + rbx], 0	      1460	opncls.c	FUNCTION_36	IF_5
0x40003e0	            0xeb15	                           jmp 0x40003f7	      1460	opncls.c	FUNCTION_36	IF_5
0x40003e2	      0xbf01000000	                              mov edi, 1	      1464	opncls.c	FUNCTION_36	ELSE_1	CALL_11
0x40003e7	      0xe800000000	                          call 0x40003ec	      1464	opncls.c	FUNCTION_36	ELSE_1	CALL_11
0x40003ec	          0x4989c6	                            mov r14, rax	      1464	opncls.c	FUNCTION_36	ELSE_1	CALL_11
0x40003ef	          0xc60000	                       mov byte [rax], 0	      1465	opncls.c	FUNCTION_36	ELSE_1
0x40003f2	      0xbb00000000	                              mov ebx, 0	      1466	opncls.c	FUNCTION_36	ELSE_1
0x40003f7	        0x488b7d00	                    mov rdi, qword [rbp]	      1471	opncls.c	FUNCTION_36	CALL_12
0x40003fb	      0xe800000000	                          call 0x4000400	      1471	opncls.c	FUNCTION_36	CALL_12
0x4000400	          0x4889c5	                            mov rbp, rax	      1471	opncls.c	FUNCTION_36	CALL_12
0x4000403	      0xb800000000	                              mov eax, 0	      1472	opncls.c	FUNCTION_36	FOR_2	CALL_13
0x4000408	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1472	opncls.c	FUNCTION_36	FOR_2	CALL_13
0x400040f	          0x4889ef	                            mov rdi, rbp	      1472	opncls.c	FUNCTION_36	FOR_2	CALL_13
0x4000412	            0xf2ae	              repne scasb al, byte [rdi]	      1472	opncls.c	FUNCTION_36	FOR_2	CALL_13
0x4000414	          0x48f7d1	                                 not rcx	      1472	opncls.c	FUNCTION_36	FOR_2	CALL_13
0x4000417	        0x4883e901	                              sub rcx, 1	      1472	opncls.c	FUNCTION_36	FOR_2	CALL_13
0x400041b	            0x7422	                            je 0x400043f	      1472	opncls.c	FUNCTION_36	FOR_2	CALL_13
0x400041d	        0x488d51ff	                      lea rdx, [rcx - 1]	      1473	opncls.c	FUNCTION_36	FOR_2	IF_8	CALL_14
0x4000421	      0x807c0dff2f	         cmp byte [rbp + rcx - 1], 0x2f 	      1473	opncls.c	FUNCTION_36	FOR_2	IF_8	CALL_14
0x4000426	            0x7510	                           jne 0x4000438	      1473	opncls.c	FUNCTION_36	FOR_2	IF_8	CALL_14
0x4000428	            0xeb1a	                           jmp 0x4000444	      1473	opncls.c	FUNCTION_36	FOR_2	IF_8	CALL_14
0x400042a	        0x488d42ff	                      lea rax, [rdx - 1]	      1473	opncls.c	FUNCTION_36	FOR_2	IF_8	CALL_14
0x400042e	      0x807c15ff2f	         cmp byte [rbp + rdx - 1], 0x2f 	      1473	opncls.c	FUNCTION_36	FOR_2	IF_8	CALL_14
0x4000433	            0x7412	                            je 0x4000447	      1473	opncls.c	FUNCTION_36	FOR_2	IF_8	CALL_14
0x4000435	          0x4889c2	                            mov rdx, rax	      1473	opncls.c	FUNCTION_36	FOR_2	IF_8	CALL_14
0x4000438	          0x4885d2	                           test rdx, rdx	      1472	opncls.c	FUNCTION_36	FOR_2	CALL_13
0x400043b	            0x75ed	                           jne 0x400042a	      1472	opncls.c	FUNCTION_36	FOR_2	CALL_13
0x400043d	            0xeb08	                           jmp 0x4000447	      1472	opncls.c	FUNCTION_36	FOR_2	CALL_13
0x400043f	          0x4889ca	                            mov rdx, rcx	      1472	opncls.c	FUNCTION_36	FOR_2	CALL_13
0x4000442	            0xeb03	                           jmp 0x4000447	      1472	opncls.c	FUNCTION_36	FOR_2	CALL_13
0x4000444	          0x4889ca	                            mov rdx, rcx	      1472	opncls.c	FUNCTION_36	FOR_2	CALL_13
0x4000447	      0xc644150000	                 mov byte [rbp + rdx], 0	      1475	opncls.c	FUNCTION_36
0x400044c	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	      1485	opncls.c	FUNCTION_36	CALL_16
0x4000453	      0xb800000000	                              mov eax, 0	      1485	opncls.c	FUNCTION_36	CALL_16
0x4000458	          0x4889f1	                            mov rcx, rsi	      1485	opncls.c	FUNCTION_36	CALL_16
0x400045b	          0x4c89ef	                            mov rdi, r13	      1485	opncls.c	FUNCTION_36	CALL_16
0x400045e	            0xf2ae	              repne scasb al, byte [rdi]	      1485	opncls.c	FUNCTION_36	CALL_16
0x4000460	          0x4989c8	                             mov r8, rcx	      1485	opncls.c	FUNCTION_36	CALL_16
0x4000463	          0x4889f1	                            mov rcx, rsi	      1494	opncls.c	FUNCTION_36	CALL_20
0x4000466	          0x4c89e7	                            mov rdi, r12	      1494	opncls.c	FUNCTION_36	CALL_20
0x4000469	            0xf2ae	              repne scasb al, byte [rdi]	      1494	opncls.c	FUNCTION_36	CALL_20
0x400046b	          0x4889c8	                            mov rax, rcx	      1494	opncls.c	FUNCTION_36	CALL_20
0x400046e	          0x48f7d0	                                 not rax	      1494	opncls.c	FUNCTION_36	CALL_20
0x4000471	          0x4c29c0	                             sub rax, r8	      1484	opncls.c	FUNCTION_36
0x4000474	          0x4839d3	                            cmp rbx, rdx	      1484	opncls.c	FUNCTION_36
0x4000477	        0x480f42da	                          cmovb rbx, rdx	      1484	opncls.c	FUNCTION_36
0x400047b	      0x488d7c1826	            lea rdi, [rax + rbx + 0x26] 	      1484	opncls.c	FUNCTION_36
0x4000480	      0xe800000000	                          call 0x4000485	      1484	opncls.c	FUNCTION_36
0x4000485	          0x4889c3	                            mov rbx, rax	      1484	opncls.c	FUNCTION_36
0x4000488	          0x4885c0	                           test rax, rax	      1496	opncls.c	FUNCTION_36	IF_9
0x400048b	     0xf8405010000	                            je 0x4000596	      1496	opncls.c	FUNCTION_36	IF_9
0x4000491	          0x4d89e1	                             mov r9, r12	        33	stdio2.h	FUNCTION_58	CALL_1
0x4000494	          0x4d89f0	                             mov r8, r14	        33	stdio2.h	FUNCTION_58	CALL_1
0x4000497	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_58	CALL_1
0x400049c	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_58	CALL_1
0x40004a3	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_58	CALL_1
0x40004a8	          0x4889c7	                            mov rdi, rax	        33	stdio2.h	FUNCTION_58	CALL_1
0x40004ab	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_58	CALL_1
0x40004b0	      0xe800000000	                          call 0x40004b5	        33	stdio2.h	FUNCTION_58	CALL_1
0x40004b5	          0x4c89fe	                            mov rsi, r15	      1509	opncls.c	FUNCTION_36	IF_10	CALL_21
0x40004b8	          0x4889df	                            mov rdi, rbx	      1509	opncls.c	FUNCTION_36	IF_10	CALL_21
0x40004bb	      0x488b442408	                mov rax, qword [rsp + 8]	      1509	opncls.c	FUNCTION_36	IF_10	CALL_21
0x40004c0	            0xffd0	                                call rax	      1509	opncls.c	FUNCTION_36	IF_10	CALL_21
0x40004c2	            0x85c0	                           test eax, eax	      1509	opncls.c	FUNCTION_36	IF_10	CALL_21
0x40004c4	     0xf85cc000000	                           jne 0x4000596	      1509	opncls.c	FUNCTION_36	IF_10	CALL_21
0x40004ca	          0x4d89e1	                             mov r9, r12	        33	stdio2.h	FUNCTION_58	CALL_1
0x40004cd	          0x4d89f0	                             mov r8, r14	        33	stdio2.h	FUNCTION_58	CALL_1
0x40004d0	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_58	CALL_1
0x40004d5	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_58	CALL_1
0x40004dc	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_58	CALL_1
0x40004e1	          0x4889df	                            mov rdi, rbx	        33	stdio2.h	FUNCTION_58	CALL_1
0x40004e4	      0xe800000000	                          call 0x40004e9	        33	stdio2.h	FUNCTION_58	CALL_1
0x40004e9	          0x4c89fe	                            mov rsi, r15	      1514	opncls.c	FUNCTION_36	IF_11	CALL_22
0x40004ec	          0x4889df	                            mov rdi, rbx	      1514	opncls.c	FUNCTION_36	IF_11	CALL_22
0x40004ef	      0x488b442408	                mov rax, qword [rsp + 8]	      1514	opncls.c	FUNCTION_36	IF_11	CALL_22
0x40004f4	            0xffd0	                                call rax	      1514	opncls.c	FUNCTION_36	IF_11	CALL_22
0x40004f6	            0x85c0	                           test eax, eax	      1514	opncls.c	FUNCTION_36	IF_11	CALL_22
0x40004f8	     0xf8598000000	                           jne 0x4000596	      1514	opncls.c	FUNCTION_36	IF_11	CALL_22
0x40004fe	      0x837c240400	                  cmp dword [rsp + 4], 0	      1519	opncls.c	FUNCTION_36
0x4000503	     0xf85fa010000	                           jne 0x4000703	      1519	opncls.c	FUNCTION_36
0x4000509	      0xe9a7010000	                           jmp 0x40006b5	      1519	opncls.c	FUNCTION_36
0x400050e	    0x41807c05fe2f	         cmp byte [r13 + rax - 2], 0x2f 	      1539	opncls.c	FUNCTION_36	IF_14	IF_15
0x4000514	            0x7424	                            je 0x400053a	      1539	opncls.c	FUNCTION_36	IF_14	IF_15
0x4000516	        0x807d002f	                    cmp byte [rbp], 0x2f	      1540	opncls.c	FUNCTION_36	IF_14	IF_15
0x400051a	            0x741e	                            je 0x400053a	      1540	opncls.c	FUNCTION_36	IF_14	IF_15
0x400051c	      0xb800000000	                              mov eax, 0	       148	string3.h	FUNCTION_56	CALL_3
0x4000521	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       148	string3.h	FUNCTION_56	CALL_3
0x4000528	          0x4889df	                            mov rdi, rbx	       148	string3.h	FUNCTION_56	CALL_3
0x400052b	            0xf2ae	              repne scasb al, byte [rdi]	       148	string3.h	FUNCTION_56	CALL_3
0x400052d	          0x4889c8	                            mov rax, rcx	       148	string3.h	FUNCTION_56	CALL_3
0x4000530	          0x48f7d0	                                 not rax	       148	string3.h	FUNCTION_56	CALL_3
0x4000533	    0x66c74403ff2f	         mov word [rbx + rax - 1], 0x2f 	       148	string3.h	FUNCTION_56	CALL_3
0x400053a	          0x4889ee	                            mov rsi, rbp	       148	string3.h	FUNCTION_56	CALL_3
0x400053d	          0x4889df	                            mov rdi, rbx	       148	string3.h	FUNCTION_56	CALL_3
0x4000540	      0xe800000000	                          call 0x4000545	       148	string3.h	FUNCTION_56	CALL_3
0x4000545	            0xeb26	                           jmp 0x400056d	       148	string3.h	FUNCTION_56	CALL_3
0x4000547	    0x41807c05fe2f	         cmp byte [r13 + rax - 2], 0x2f 	      1546	opncls.c	FUNCTION_36	ELSE_2	IF_16
0x400054d	            0x741e	                            je 0x400056d	      1546	opncls.c	FUNCTION_36	ELSE_2	IF_16
0x400054f	      0xb800000000	                              mov eax, 0	       148	string3.h	FUNCTION_56	CALL_3
0x4000554	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       148	string3.h	FUNCTION_56	CALL_3
0x400055b	          0x4889df	                            mov rdi, rbx	       148	string3.h	FUNCTION_56	CALL_3
0x400055e	            0xf2ae	              repne scasb al, byte [rdi]	       148	string3.h	FUNCTION_56	CALL_3
0x4000560	          0x4889c8	                            mov rax, rcx	       148	string3.h	FUNCTION_56	CALL_3
0x4000563	          0x48f7d0	                                 not rax	       148	string3.h	FUNCTION_56	CALL_3
0x4000566	    0x66c74403ff2f	         mov word [rbx + rax - 1], 0x2f 	       148	string3.h	FUNCTION_56	CALL_3
0x400056d	          0x4c89e6	                            mov rsi, r12	       148	string3.h	FUNCTION_56	CALL_3
0x4000570	          0x4889df	                            mov rdi, rbx	       148	string3.h	FUNCTION_56	CALL_3
0x4000573	      0xe800000000	                          call 0x4000578	       148	string3.h	FUNCTION_56	CALL_3
0x4000578	          0x4c89fe	                            mov rsi, r15	      1551	opncls.c	FUNCTION_36	IF_17	CALL_31
0x400057b	          0x4889df	                            mov rdi, rbx	      1551	opncls.c	FUNCTION_36	IF_17	CALL_31
0x400057e	      0x488b442408	                mov rax, qword [rsp + 8]	      1551	opncls.c	FUNCTION_36	IF_17	CALL_31
0x4000583	            0xffd0	                                call rax	      1551	opncls.c	FUNCTION_36	IF_17	CALL_31
0x4000585	            0x85c0	                           test eax, eax	      1551	opncls.c	FUNCTION_36	IF_17	CALL_31
0x4000587	            0x750d	                           jne 0x4000596	      1551	opncls.c	FUNCTION_36	IF_17	CALL_31
0x4000589	          0x4889df	                            mov rdi, rbx	      1555	opncls.c	FUNCTION_36	CALL_32
0x400058c	      0xe800000000	                          call 0x4000591	      1555	opncls.c	FUNCTION_36	CALL_32
0x4000591	      0xbb00000000	                              mov ebx, 0	      1556	opncls.c	FUNCTION_36
0x4000596	          0x4c89e7	                            mov rdi, r12	      1559	opncls.c	FUNCTION_36	CALL_33
0x4000599	      0xe800000000	                          call 0x400059e	      1559	opncls.c	FUNCTION_36	CALL_33
0x400059e	          0x4c89f7	                            mov rdi, r14	      1560	opncls.c	FUNCTION_36	CALL_34
0x40005a1	      0xe800000000	                          call 0x40005a6	      1560	opncls.c	FUNCTION_36	CALL_34
0x40005a6	          0x4889ef	                            mov rdi, rbp	      1561	opncls.c	FUNCTION_36	CALL_35
0x40005a9	      0xe800000000	                          call 0x40005ae	      1561	opncls.c	FUNCTION_36	CALL_35
0x40005ae	          0x4889d8	                            mov rax, rbx	      1562	opncls.c	FUNCTION_36
0x40005b1	      0xe998010000	                           jmp 0x400074e	      1562	opncls.c	FUNCTION_36
0x40005b6	      0xb800000000	                              mov eax, 0	      1438	opncls.c	FUNCTION_36	IF_3
0x40005bb	      0xe98e010000	                           jmp 0x400074e	      1438	opncls.c	FUNCTION_36	IF_3
0x40005c0	          0x4c89ee	                            mov rsi, r13	       110	string3.h	FUNCTION_52	CALL_3
0x40005c3	          0x4889df	                            mov rdi, rbx	       110	string3.h	FUNCTION_52	CALL_3
0x40005c6	      0xe800000000	                          call 0x40005cb	       110	string3.h	FUNCTION_52	CALL_3
0x40005cb	      0xb800000000	                              mov eax, 0	      1535	opncls.c	FUNCTION_36	CALL_26
0x40005d0	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1535	opncls.c	FUNCTION_36	CALL_26
0x40005d7	          0x4c89ef	                            mov rdi, r13	      1535	opncls.c	FUNCTION_36	CALL_26
0x40005da	            0xf2ae	              repne scasb al, byte [rdi]	      1535	opncls.c	FUNCTION_36	CALL_26
0x40005dc	          0x4889c8	                            mov rax, rcx	      1535	opncls.c	FUNCTION_36	CALL_26
0x40005df	          0x48f7d0	                                 not rax	      1535	opncls.c	FUNCTION_36	CALL_26
0x40005e2	        0x4883f802	                              cmp rax, 2	      1546	opncls.c	FUNCTION_36	ELSE_2	IF_16
0x40005e6	     0xf855bffffff	                           jne 0x4000547	      1546	opncls.c	FUNCTION_36	ELSE_2	IF_16
0x40005ec	      0xe97cffffff	                           jmp 0x400056d	      1546	opncls.c	FUNCTION_36	ELSE_2	IF_16
0x40005f1	        0x4883ec08	                              sub rsp, 8	        33	stdio2.h	FUNCTION_58	CALL_1
0x40005f5	            0x4154	                                push r12	        33	stdio2.h	FUNCTION_58	CALL_1
0x40005f7	    0x41b900000000	                              mov r9d, 0	        33	stdio2.h	FUNCTION_58	CALL_1
0x40005fd	    0x41b800000000	                              mov r8d, 0	        33	stdio2.h	FUNCTION_58	CALL_1
0x4000603	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_58	CALL_1
0x4000608	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_58	CALL_1
0x400060f	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_58	CALL_1
0x4000614	          0x4889df	                            mov rdi, rbx	        33	stdio2.h	FUNCTION_58	CALL_1
0x4000617	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_58	CALL_1
0x400061c	      0xe800000000	                          call 0x4000621	        33	stdio2.h	FUNCTION_58	CALL_1
0x4000621	          0x4c89fe	                            mov rsi, r15	      1529	opncls.c	FUNCTION_36	IF_13	CALL_24
0x4000624	          0x4889df	                            mov rdi, rbx	      1529	opncls.c	FUNCTION_36	IF_13	CALL_24
0x4000627	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1529	opncls.c	FUNCTION_36	IF_13	CALL_24
0x400062c	            0xffd0	                                call rax	      1529	opncls.c	FUNCTION_36	IF_13	CALL_24
0x400062e	        0x4883c410	                           add rsp, 0x10	      1529	opncls.c	FUNCTION_36	IF_13	CALL_24
0x4000632	            0x85c0	                           test eax, eax	      1529	opncls.c	FUNCTION_36	IF_13	CALL_24
0x4000634	     0xf855cffffff	                           jne 0x4000596	      1529	opncls.c	FUNCTION_36	IF_13	CALL_24
0x400063a	            0xeb84	                           jmp 0x40005c0	      1529	opncls.c	FUNCTION_36	IF_13	CALL_24
0x400063c	          0x4c89ee	                            mov rsi, r13	       110	string3.h	FUNCTION_52	CALL_3
0x400063f	          0x4889df	                            mov rdi, rbx	       110	string3.h	FUNCTION_52	CALL_3
0x4000642	      0xe800000000	                          call 0x4000647	       110	string3.h	FUNCTION_52	CALL_3
0x4000647	      0xb800000000	                              mov eax, 0	      1535	opncls.c	FUNCTION_36	CALL_26
0x400064c	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1535	opncls.c	FUNCTION_36	CALL_26
0x4000653	          0x4c89ef	                            mov rdi, r13	      1535	opncls.c	FUNCTION_36	CALL_26
0x4000656	            0xf2ae	              repne scasb al, byte [rdi]	      1535	opncls.c	FUNCTION_36	CALL_26
0x4000658	          0x4889c8	                            mov rax, rcx	      1535	opncls.c	FUNCTION_36	CALL_26
0x400065b	          0x48f7d0	                                 not rax	      1535	opncls.c	FUNCTION_36	CALL_26
0x400065e	        0x4883f802	                              cmp rax, 2	      1538	opncls.c	FUNCTION_36	IF_14	IF_15
0x4000662	     0xf85a6feffff	                           jne 0x400050e	      1538	opncls.c	FUNCTION_36	IF_14	IF_15
0x4000668	      0xe9cdfeffff	                           jmp 0x400053a	      1538	opncls.c	FUNCTION_36	IF_14	IF_15
0x400066d	        0x4883ec08	                              sub rsp, 8	        33	stdio2.h	FUNCTION_58	CALL_1
0x4000671	            0x4154	                                push r12	        33	stdio2.h	FUNCTION_58	CALL_1
0x4000673	          0x4989e9	                             mov r9, rbp	        33	stdio2.h	FUNCTION_58	CALL_1
0x4000676	    0x41b800000000	                              mov r8d, 0	        33	stdio2.h	FUNCTION_58	CALL_1
0x400067c	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_58	CALL_1
0x4000681	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_58	CALL_1
0x4000688	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_58	CALL_1
0x400068d	          0x4889df	                            mov rdi, rbx	        33	stdio2.h	FUNCTION_58	CALL_1
0x4000690	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_58	CALL_1
0x4000695	      0xe800000000	                          call 0x400069a	        33	stdio2.h	FUNCTION_58	CALL_1
0x400069a	          0x4c89fe	                            mov rsi, r15	      1529	opncls.c	FUNCTION_36	IF_13	CALL_24
0x400069d	          0x4889df	                            mov rdi, rbx	      1529	opncls.c	FUNCTION_36	IF_13	CALL_24
0x40006a0	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1529	opncls.c	FUNCTION_36	IF_13	CALL_24
0x40006a5	            0xffd0	                                call rax	      1529	opncls.c	FUNCTION_36	IF_13	CALL_24
0x40006a7	        0x4883c410	                           add rsp, 0x10	      1529	opncls.c	FUNCTION_36	IF_13	CALL_24
0x40006ab	            0x85c0	                           test eax, eax	      1529	opncls.c	FUNCTION_36	IF_13	CALL_24
0x40006ad	     0xf85e3feffff	                           jne 0x4000596	      1529	opncls.c	FUNCTION_36	IF_13	CALL_24
0x40006b3	            0xeb87	                           jmp 0x400063c	      1529	opncls.c	FUNCTION_36	IF_13	CALL_24
0x40006b5	        0x4883ec08	                              sub rsp, 8	        33	stdio2.h	FUNCTION_58	CALL_1
0x40006b9	            0x4154	                                push r12	        33	stdio2.h	FUNCTION_58	CALL_1
0x40006bb	    0x41b900000000	                              mov r9d, 0	        33	stdio2.h	FUNCTION_58	CALL_1
0x40006c1	    0x41b800000000	                              mov r8d, 0	        33	stdio2.h	FUNCTION_58	CALL_1
0x40006c7	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_58	CALL_1
0x40006cc	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_58	CALL_1
0x40006d3	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_58	CALL_1
0x40006d8	          0x4889df	                            mov rdi, rbx	        33	stdio2.h	FUNCTION_58	CALL_1
0x40006db	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_58	CALL_1
0x40006e0	      0xe800000000	                          call 0x40006e5	        33	stdio2.h	FUNCTION_58	CALL_1
0x40006e5	          0x4c89fe	                            mov rsi, r15	      1521	opncls.c	FUNCTION_36	IF_12	CALL_23
0x40006e8	          0x4889df	                            mov rdi, rbx	      1521	opncls.c	FUNCTION_36	IF_12	CALL_23
0x40006eb	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1521	opncls.c	FUNCTION_36	IF_12	CALL_23
0x40006f0	            0xffd0	                                call rax	      1521	opncls.c	FUNCTION_36	IF_12	CALL_23
0x40006f2	        0x4883c410	                           add rsp, 0x10	      1521	opncls.c	FUNCTION_36	IF_12	CALL_23
0x40006f6	            0x85c0	                           test eax, eax	      1521	opncls.c	FUNCTION_36	IF_12	CALL_23
0x40006f8	     0xf8598feffff	                           jne 0x4000596	      1521	opncls.c	FUNCTION_36	IF_12	CALL_23
0x40006fe	      0xe9eefeffff	                           jmp 0x40005f1	      1521	opncls.c	FUNCTION_36	IF_12	CALL_23
0x4000703	        0x4883ec08	                              sub rsp, 8	        33	stdio2.h	FUNCTION_58	CALL_1
0x4000707	            0x4154	                                push r12	        33	stdio2.h	FUNCTION_58	CALL_1
0x4000709	          0x4989e9	                             mov r9, rbp	        33	stdio2.h	FUNCTION_58	CALL_1
0x400070c	    0x41b800000000	                              mov r8d, 0	        33	stdio2.h	FUNCTION_58	CALL_1
0x4000712	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_58	CALL_1
0x4000717	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_58	CALL_1
0x400071e	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_58	CALL_1
0x4000723	          0x4889df	                            mov rdi, rbx	        33	stdio2.h	FUNCTION_58	CALL_1
0x4000726	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_58	CALL_1
0x400072b	      0xe800000000	                          call 0x4000730	        33	stdio2.h	FUNCTION_58	CALL_1
0x4000730	          0x4c89fe	                            mov rsi, r15	      1521	opncls.c	FUNCTION_36	IF_12	CALL_23
0x4000733	          0x4889df	                            mov rdi, rbx	      1521	opncls.c	FUNCTION_36	IF_12	CALL_23
0x4000736	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1521	opncls.c	FUNCTION_36	IF_12	CALL_23
0x400073b	            0xffd0	                                call rax	      1521	opncls.c	FUNCTION_36	IF_12	CALL_23
0x400073d	        0x4883c410	                           add rsp, 0x10	      1521	opncls.c	FUNCTION_36	IF_12	CALL_23
0x4000741	            0x85c0	                           test eax, eax	      1521	opncls.c	FUNCTION_36	IF_12	CALL_23
0x4000743	     0xf8424ffffff	                            je 0x400066d	      1521	opncls.c	FUNCTION_36	IF_12	CALL_23
0x4000749	      0xe948feffff	                           jmp 0x4000596	      1521	opncls.c	FUNCTION_36	IF_12	CALL_23
0x400074e	        0x4883c418	                           add rsp, 0x18	      1563	opncls.c	FUNCTION_36
0x4000752	              0x5b	                                 pop rbx	      1563	opncls.c	FUNCTION_36
0x4000753	              0x5d	                                 pop rbp	      1563	opncls.c	FUNCTION_36
0x4000754	            0x415c	                                 pop r12	      1563	opncls.c	FUNCTION_36
0x4000756	            0x415d	                                 pop r13	      1563	opncls.c	FUNCTION_36
0x4000758	            0x415e	                                 pop r14	      1563	opncls.c	FUNCTION_36
0x400075a	            0x415f	                                 pop r15	      1563	opncls.c	FUNCTION_36
0x400075c	              0xc3	                                     ret	      1563	opncls.c	FUNCTION_36
_bfd_new_bfd_contained_in	DO,0:functions,0:FOR,0:CALL,1:IF,2:SWITCH,0:ELSE,0:WHILE,0	39
0x400081a	              0x53	                                push rbx	       100	opncls.c	FUNCTION_2
0x400081b	          0x4889fb	                            mov rbx, rdi	       100	opncls.c	FUNCTION_2
0x400081e	      0xe800000000	                          call 0x4000823	       103	opncls.c	FUNCTION_2	CALL_1
0x4000823	          0x4885c0	                           test rax, rax	       104	opncls.c	FUNCTION_2	IF_1
0x4000826	            0x746d	                            je 0x4000895	       104	opncls.c	FUNCTION_2	IF_1
0x4000828	        0x488b5308	                mov rdx, qword [rbx + 8]	       106	opncls.c	FUNCTION_2
0x400082c	        0x48895008	                mov qword [rax + 8], rdx	       106	opncls.c	FUNCTION_2
0x4000830	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	       107	opncls.c	FUNCTION_2
0x4000834	        0x48895018	             mov qword [rax + 0x18], rdx	       107	opncls.c	FUNCTION_2
0x4000838	    0x48817b180000	               cmp qword [rbx + 0x18], 0	       108	opncls.c	FUNCTION_2	IF_2
0x4000840	            0x7508	                           jne 0x400084a	       108	opncls.c	FUNCTION_2	IF_2
0x4000842	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       109	opncls.c	FUNCTION_2	IF_2
0x4000846	        0x48895010	             mov qword [rax + 0x10], rdx	       109	opncls.c	FUNCTION_2	IF_2
0x400084a	    0x488998d00000	             mov qword [rax + 0xd0], rbx	       110	opncls.c	FUNCTION_2
0x4000851	         0xfb65044	           movzx edx, byte [rax + 0x44] 	       111	opncls.c	FUNCTION_2
0x4000855	          0x83e2e7	                     and edx, 0xffffffe7	       111	opncls.c	FUNCTION_2
0x4000858	          0x83ca08	                               or edx, 8	       111	opncls.c	FUNCTION_2
0x400085b	          0x885044	               mov byte [rax + 0x44], dl	       111	opncls.c	FUNCTION_2
0x400085e	         0xfb65347	           movzx edx, byte [rbx + 0x47] 	       112	opncls.c	FUNCTION_2
0x4000862	          0x83e204	                              and edx, 4	       112	opncls.c	FUNCTION_2
0x4000865	         0xfb64847	           movzx ecx, byte [rax + 0x47] 	       112	opncls.c	FUNCTION_2
0x4000869	          0x83e1fb	                     and ecx, 0xfffffffb	       112	opncls.c	FUNCTION_2
0x400086c	             0x9ca	                             or edx, ecx	       112	opncls.c	FUNCTION_2
0x400086e	          0x885047	               mov byte [rax + 0x47], dl	       112	opncls.c	FUNCTION_2
0x4000871	         0xfb64b48	           movzx ecx, byte [rbx + 0x48] 	       113	opncls.c	FUNCTION_2
0x4000875	          0x83e140	                           and ecx, 0x40	       113	opncls.c	FUNCTION_2
0x4000878	         0xfb67048	           movzx esi, byte [rax + 0x48] 	       113	opncls.c	FUNCTION_2
0x400087c	          0x83e6bf	                     and esi, 0xffffffbf	       113	opncls.c	FUNCTION_2
0x400087f	             0x9f1	                             or ecx, esi	       113	opncls.c	FUNCTION_2
0x4000881	          0x884848	               mov byte [rax + 0x48], cl	       113	opncls.c	FUNCTION_2
0x4000884	         0xfb64b47	           movzx ecx, byte [rbx + 0x47] 	       114	opncls.c	FUNCTION_2
0x4000888	          0x83e120	                           and ecx, 0x20	       114	opncls.c	FUNCTION_2
0x400088b	          0x83e2df	                     and edx, 0xffffffdf	       114	opncls.c	FUNCTION_2
0x400088e	             0x9ca	                             or edx, ecx	       114	opncls.c	FUNCTION_2
0x4000890	          0x885047	               mov byte [rax + 0x47], dl	       114	opncls.c	FUNCTION_2
0x4000893	            0xeb05	                           jmp 0x400089a	       115	opncls.c	FUNCTION_2
0x4000895	      0xb800000000	                              mov eax, 0	       105	opncls.c	FUNCTION_2	IF_1
0x400089a	              0x5b	                                 pop rbx	       116	opncls.c	FUNCTION_2
0x400089b	              0xc3	                                     ret	       116	opncls.c	FUNCTION_2
bfd_openstreamr	DO,0:functions,0:FOR,0:CALL,6:IF,3:SWITCH,0:ELSE,0:WHILE,0	46
0x4000ae6	            0x4155	                                push r13	       382	opncls.c	FUNCTION_8
0x4000ae8	            0x4154	                                push r12	       382	opncls.c	FUNCTION_8
0x4000aea	              0x55	                                push rbp	       382	opncls.c	FUNCTION_8
0x4000aeb	              0x53	                                push rbx	       382	opncls.c	FUNCTION_8
0x4000aec	        0x4883ec08	                              sub rsp, 8	       382	opncls.c	FUNCTION_8
0x4000af0	          0x4989fc	                            mov r12, rdi	       382	opncls.c	FUNCTION_8
0x4000af3	          0x4889f5	                            mov rbp, rsi	       382	opncls.c	FUNCTION_8
0x4000af6	          0x4989d5	                            mov r13, rdx	       382	opncls.c	FUNCTION_8
0x4000af9	      0xe800000000	                          call 0x4000afe	       387	opncls.c	FUNCTION_8	CALL_1
0x4000afe	          0x4885c0	                           test rax, rax	       388	opncls.c	FUNCTION_8	IF_1
0x4000b01	            0x745c	                            je 0x4000b5f	       388	opncls.c	FUNCTION_8	IF_1
0x4000b03	          0x4889c3	                            mov rbx, rax	       388	opncls.c	FUNCTION_8	IF_1
0x4000b06	          0x4889c6	                            mov rsi, rax	       391	opncls.c	FUNCTION_8	CALL_2
0x4000b09	          0x4889ef	                            mov rdi, rbp	       391	opncls.c	FUNCTION_8	CALL_2
0x4000b0c	      0xe800000000	                          call 0x4000b11	       391	opncls.c	FUNCTION_8	CALL_2
0x4000b11	          0x4885c0	                           test rax, rax	       392	opncls.c	FUNCTION_8	IF_2
0x4000b14	            0x750f	                           jne 0x4000b25	       392	opncls.c	FUNCTION_8	IF_2
0x4000b16	          0x4889df	                            mov rdi, rbx	       394	opncls.c	FUNCTION_8	IF_2	CALL_3
0x4000b19	      0xe810f6ffff	                call sym._bfd_delete_bfd	       394	opncls.c	FUNCTION_8	IF_2	CALL_3
0x4000b1e	      0xba00000000	                              mov edx, 0	       395	opncls.c	FUNCTION_8	IF_2
0x4000b23	            0xeb3f	                           jmp 0x4000b64	       395	opncls.c	FUNCTION_8	IF_2
0x4000b25	        0x4c896b10	             mov qword [rbx + 0x10], r13	       398	opncls.c	FUNCTION_8
0x4000b29	          0x4c89e7	                            mov rdi, r12	       401	opncls.c	FUNCTION_8	CALL_4
0x4000b2c	      0xe800000000	                          call 0x4000b31	       401	opncls.c	FUNCTION_8	CALL_4
0x4000b31	          0x488903	                    mov qword [rbx], rax	       401	opncls.c	FUNCTION_8	CALL_4
0x4000b34	         0xfb64344	           movzx eax, byte [rbx + 0x44] 	       402	opncls.c	FUNCTION_8
0x4000b38	          0x83e0e7	                     and eax, 0xffffffe7	       402	opncls.c	FUNCTION_8
0x4000b3b	          0x83c808	                               or eax, 8	       402	opncls.c	FUNCTION_8
0x4000b3e	          0x884344	               mov byte [rbx + 0x44], al	       402	opncls.c	FUNCTION_8
0x4000b41	          0x4889df	                            mov rdi, rbx	       404	opncls.c	FUNCTION_8	IF_3	CALL_5
0x4000b44	      0xe800000000	                          call 0x4000b49	       404	opncls.c	FUNCTION_8	IF_3	CALL_5
0x4000b49	          0x4889da	                            mov rdx, rbx	       410	opncls.c	FUNCTION_8
0x4000b4c	            0x85c0	                           test eax, eax	       404	opncls.c	FUNCTION_8	IF_3	CALL_5
0x4000b4e	            0x7514	                           jne 0x4000b64	       404	opncls.c	FUNCTION_8	IF_3	CALL_5
0x4000b50	          0x4889df	                            mov rdi, rbx	       406	opncls.c	FUNCTION_8	IF_3	CALL_6
0x4000b53	      0xe8d6f5ffff	                call sym._bfd_delete_bfd	       406	opncls.c	FUNCTION_8	IF_3	CALL_6
0x4000b58	      0xba00000000	                              mov edx, 0	       407	opncls.c	FUNCTION_8	IF_3
0x4000b5d	            0xeb05	                           jmp 0x4000b64	       407	opncls.c	FUNCTION_8	IF_3
0x4000b5f	      0xba00000000	                              mov edx, 0	       389	opncls.c	FUNCTION_8	IF_1
0x4000b64	          0x4889d0	                            mov rax, rdx	       411	opncls.c	FUNCTION_8
0x4000b67	        0x4883c408	                              add rsp, 8	       411	opncls.c	FUNCTION_8
0x4000b6b	              0x5b	                                 pop rbx	       411	opncls.c	FUNCTION_8
0x4000b6c	              0x5d	                                 pop rbp	       411	opncls.c	FUNCTION_8
0x4000b6d	            0x415c	                                 pop r12	       411	opncls.c	FUNCTION_8
0x4000b6f	            0x415d	                                 pop r13	       411	opncls.c	FUNCTION_8
0x4000b71	              0xc3	                                     ret	       411	opncls.c	FUNCTION_8
bfd_get_alt_debug_link_info	DO,0:functions,0:FOR,0:CALL,10:IF,5:SWITCH,0:ELSE,0:WHILE,0	90
0x40015fb	            0x4157	                                push r15	      1266	opncls.c	FUNCTION_33
0x40015fd	            0x4156	                                push r14	      1266	opncls.c	FUNCTION_33
0x40015ff	            0x4155	                                push r13	      1266	opncls.c	FUNCTION_33
0x4001601	            0x4154	                                push r12	      1266	opncls.c	FUNCTION_33
0x4001603	              0x55	                                push rbp	      1266	opncls.c	FUNCTION_33
0x4001604	              0x53	                                push rbx	      1266	opncls.c	FUNCTION_33
0x4001605	        0x4883ec18	                           sub rsp, 0x18	      1266	opncls.c	FUNCTION_33
0x4001609	          0x4889fb	                            mov rbx, rdi	      1266	opncls.c	FUNCTION_33
0x400160c	          0x4989f5	                            mov r13, rsi	      1266	opncls.c	FUNCTION_33
0x400160f	          0x4989d6	                            mov r14, rdx	      1266	opncls.c	FUNCTION_33
0x4001612	    0x64488b042528	                mov rax, qword fs:[0x28]	      1266	opncls.c	FUNCTION_33
0x400161b	      0x4889442408	                mov qword [rsp + 8], rax	      1266	opncls.c	FUNCTION_33
0x4001620	            0x31c0	                            xor eax, eax	      1266	opncls.c	FUNCTION_33
0x4001622	          0x4885ff	                           test rdi, rdi	      1273	opncls.c	FUNCTION_33	CALL_1
0x4001625	            0x750f	                           jne 0x4001636	      1273	opncls.c	FUNCTION_33	CALL_1
0x4001627	      0xbef9040000	                          mov esi, 0x4f9	      1273	opncls.c	FUNCTION_33	CALL_1
0x400162c	      0xbf00000000	                              mov edi, 0	      1273	opncls.c	FUNCTION_33	CALL_1
0x4001631	      0xe800000000	                          call 0x4001636	      1273	opncls.c	FUNCTION_33	CALL_1
0x4001636	          0x4d85ed	                           test r13, r13	      1274	opncls.c	FUNCTION_33	CALL_2
0x4001639	            0x750f	                           jne 0x400164a	      1274	opncls.c	FUNCTION_33	CALL_2
0x400163b	      0xbefa040000	                          mov esi, 0x4fa	      1274	opncls.c	FUNCTION_33	CALL_2
0x4001640	      0xbf00000000	                              mov edi, 0	      1274	opncls.c	FUNCTION_33	CALL_2
0x4001645	      0xe800000000	                          call 0x400164a	      1274	opncls.c	FUNCTION_33	CALL_2
0x400164a	          0x4d85f6	                           test r14, r14	      1275	opncls.c	FUNCTION_33	CALL_3
0x400164d	            0x750f	                           jne 0x400165e	      1275	opncls.c	FUNCTION_33	CALL_3
0x400164f	      0xbefb040000	                          mov esi, 0x4fb	      1275	opncls.c	FUNCTION_33	CALL_3
0x4001654	      0xbf00000000	                              mov edi, 0	      1275	opncls.c	FUNCTION_33	CALL_3
0x4001659	      0xe800000000	                          call 0x400165e	      1275	opncls.c	FUNCTION_33	CALL_3
0x400165e	      0xbe00000000	                              mov esi, 0	      1277	opncls.c	FUNCTION_33	CALL_4
0x4001663	          0x4889df	                            mov rdi, rbx	      1277	opncls.c	FUNCTION_33	CALL_4
0x4001666	      0xe800000000	                          call 0x400166b	      1277	opncls.c	FUNCTION_33	CALL_4
0x400166b	          0x4989c4	                            mov r12, rax	      1277	opncls.c	FUNCTION_33	CALL_4
0x400166e	          0x4885c0	                           test rax, rax	      1279	opncls.c	FUNCTION_33	IF_1
0x4001671	     0xf8499000000	                            je 0x4001710	      1279	opncls.c	FUNCTION_33	IF_1
0x4001677	        0x488b6838	            mov rbp, qword [rax + 0x38] 	      1282	opncls.c	FUNCTION_33
0x400167b	      0xba00000000	                              mov edx, 0	      1284	opncls.c	FUNCTION_33	IF_2
0x4001680	        0x4883fd07	                              cmp rbp, 7	      1283	opncls.c	FUNCTION_33	IF_2	CALL_5
0x4001684	     0xf868b000000	                           jbe 0x4001715	      1283	opncls.c	FUNCTION_33	IF_2	CALL_5
0x400168a	          0x4889df	                            mov rdi, rbx	      1283	opncls.c	FUNCTION_33	IF_2	CALL_5
0x400168d	      0xe800000000	                          call 0x4001692	      1283	opncls.c	FUNCTION_33	IF_2	CALL_5
0x4001692	      0xba00000000	                              mov edx, 0	      1284	opncls.c	FUNCTION_33	IF_2
0x4001697	          0x4839c5	                            cmp rbp, rax	      1283	opncls.c	FUNCTION_33	IF_2	CALL_5
0x400169a	            0x7379	                           jae 0x4001715	      1283	opncls.c	FUNCTION_33	IF_2	CALL_5
0x400169c	          0x4889e2	                            mov rdx, rsp	      1286	opncls.c	FUNCTION_33	IF_3	CALL_6
0x400169f	          0x4c89e6	                            mov rsi, r12	      1286	opncls.c	FUNCTION_33	IF_3	CALL_6
0x40016a2	          0x4889df	                            mov rdi, rbx	      1286	opncls.c	FUNCTION_33	IF_3	CALL_6
0x40016a5	      0xe800000000	                          call 0x40016aa	      1286	opncls.c	FUNCTION_33	IF_3	CALL_6
0x40016aa	            0x85c0	                           test eax, eax	      1286	opncls.c	FUNCTION_33	IF_3	CALL_6
0x40016ac	            0x751a	                           jne 0x40016c8	      1286	opncls.c	FUNCTION_33	IF_3	CALL_6
0x40016ae	        0x488b3c24	                    mov rdi, qword [rsp]	      1288	opncls.c	FUNCTION_33	IF_3	IF_4
0x40016b2	      0xba00000000	                              mov edx, 0	      1290	opncls.c	FUNCTION_33	IF_3
0x40016b7	          0x4885ff	                           test rdi, rdi	      1288	opncls.c	FUNCTION_33	IF_3	IF_4
0x40016ba	            0x7459	                            je 0x4001715	      1288	opncls.c	FUNCTION_33	IF_3	IF_4
0x40016bc	      0xe800000000	                          call 0x40016c1	      1289	opncls.c	FUNCTION_33	IF_3	CALL_7
0x40016c1	      0xba00000000	                              mov edx, 0	      1290	opncls.c	FUNCTION_33	IF_3
0x40016c6	            0xeb4d	                           jmp 0x4001715	      1290	opncls.c	FUNCTION_33	IF_3
0x40016c8	        0x4c8b3c24	                    mov r15, qword [rsp]	      1294	opncls.c	FUNCTION_33
0x40016cc	          0x4889ee	                            mov rsi, rbp	      1295	opncls.c	FUNCTION_33	CALL_8
0x40016cf	          0x4c89ff	                            mov rdi, r15	      1295	opncls.c	FUNCTION_33	CALL_8
0x40016d2	      0xe800000000	                          call 0x40016d7	      1295	opncls.c	FUNCTION_33	CALL_8
0x40016d7	          0x8d5801	                      lea ebx, [rax + 1]	      1296	opncls.c	FUNCTION_33	IF_5
0x40016da	      0xba00000000	                              mov edx, 0	      1297	opncls.c	FUNCTION_33	IF_5
0x40016df	      0x493b5c2438	            cmp rbx, qword [r12 + 0x38] 	      1296	opncls.c	FUNCTION_33	IF_5
0x40016e4	            0x732f	                           jae 0x4001715	      1296	opncls.c	FUNCTION_33	IF_5
0x40016e6	          0x4889ef	                            mov rdi, rbp	      1299	opncls.c	FUNCTION_33
0x40016e9	          0x4829df	                            sub rdi, rbx	      1299	opncls.c	FUNCTION_33
0x40016ec	        0x49897d00	                    mov qword [r13], rdi	      1299	opncls.c	FUNCTION_33
0x40016f0	      0xe800000000	                          call 0x40016f5	      1300	opncls.c	FUNCTION_33	CALL_9
0x40016f5	          0x498906	                    mov qword [r14], rax	      1300	opncls.c	FUNCTION_33	CALL_9
0x40016f8	          0x4889de	                            mov rsi, rbx	        53	string3.h	FUNCTION_46	CALL_3
0x40016fb	        0x48033424	                    add rsi, qword [rsp]	        53	string3.h	FUNCTION_46	CALL_3
0x40016ff	        0x498b5500	                    mov rdx, qword [r13]	        53	string3.h	FUNCTION_46	CALL_3
0x4001703	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_46	CALL_3
0x4001706	      0xe800000000	                          call 0x400170b	        53	string3.h	FUNCTION_46	CALL_3
0x400170b	          0x4c89fa	                            mov rdx, r15	      1303	opncls.c	FUNCTION_33
0x400170e	            0xeb05	                           jmp 0x4001715	      1303	opncls.c	FUNCTION_33
0x4001710	      0xba00000000	                              mov edx, 0	      1280	opncls.c	FUNCTION_33	IF_1
0x4001715	          0x4889d0	                            mov rax, rdx	      1304	opncls.c	FUNCTION_33
0x4001718	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1304	opncls.c	FUNCTION_33
0x400171d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1304	opncls.c	FUNCTION_33
0x4001726	            0x7405	                            je 0x400172d	      1304	opncls.c	FUNCTION_33
0x4001728	      0xe800000000	                          call 0x400172d	      1304	opncls.c	FUNCTION_33
0x400172d	        0x4883c418	                           add rsp, 0x18	      1304	opncls.c	FUNCTION_33
0x4001731	              0x5b	                                 pop rbx	      1304	opncls.c	FUNCTION_33
0x4001732	              0x5d	                                 pop rbp	      1304	opncls.c	FUNCTION_33
0x4001733	            0x415c	                                 pop r12	      1304	opncls.c	FUNCTION_33
0x4001735	            0x415d	                                 pop r13	      1304	opncls.c	FUNCTION_33
0x4001737	            0x415e	                                 pop r14	      1304	opncls.c	FUNCTION_33
0x4001739	            0x415f	                                 pop r15	      1304	opncls.c	FUNCTION_33
0x400173b	              0xc3	                                     ret	      1304	opncls.c	FUNCTION_33
opncls_bclose	DO,0:functions,0:FOR,0:CALL,0:IF,1:SWITCH,0:ELSE,0:WHILE,0	12
0x40000a3	              0x53	                                push rbx	       521	opncls.c	FUNCTION_13
0x40000a4	          0x4889fb	                            mov rbx, rdi	       521	opncls.c	FUNCTION_13
0x40000a7	        0x488b4f10	            mov rcx, qword [rdi + 0x10] 	       522	opncls.c	FUNCTION_13
0x40000ab	        0x488b5110	            mov rdx, qword [rcx + 0x10] 	       527	opncls.c	FUNCTION_13	IF_1
0x40000af	      0xb800000000	                              mov eax, 0	       525	opncls.c	FUNCTION_13
0x40000b4	          0x4885d2	                           test rdx, rdx	       527	opncls.c	FUNCTION_13	IF_1
0x40000b7	            0x7405	                            je 0x40000be	       527	opncls.c	FUNCTION_13	IF_1
0x40000b9	          0x488b31	                    mov rsi, qword [rcx]	       528	opncls.c	FUNCTION_13	IF_1
0x40000bc	            0xffd2	                                call rdx	       528	opncls.c	FUNCTION_13	IF_1
0x40000be	    0x48c743100000	               mov qword [rbx + 0x10], 0	       529	opncls.c	FUNCTION_13
0x40000c6	              0x5b	                                 pop rbx	       531	opncls.c	FUNCTION_13
0x40000c7	              0xc3	                                     ret	       531	opncls.c	FUNCTION_13
opncls_btell	DO,0:functions,0:FOR,0:CALL,0:IF,0:SWITCH,0:ELSE,0:WHILE,0	3
0x4000040	        0x488b4710	            mov rax, qword [rdi + 0x10] 	       483	opncls.c	FUNCTION_9
0x4000044	        0x488b4020	            mov rax, qword [rax + 0x20] 	       483	opncls.c	FUNCTION_9
0x4000048	              0xc3	                                     ret	       484	opncls.c	FUNCTION_9
bfd_zalloc2	DO,0:functions,0:FOR,0:CALL,3:IF,2:SWITCH,0:ELSE,0:WHILE,0	36
0x400149b	              0x55	                                push rbp	      1018	opncls.c	FUNCTION_28
0x400149c	              0x53	                                push rbx	      1018	opncls.c	FUNCTION_28
0x400149d	        0x4883ec08	                              sub rsp, 8	      1018	opncls.c	FUNCTION_28
0x40014a1	          0x4889d1	                            mov rcx, rdx	      1018	opncls.c	FUNCTION_28
0x40014a4	          0x4889f2	                            mov rdx, rsi	      1022	opncls.c	FUNCTION_28	IF_1
0x40014a7	          0x4809ca	                             or rdx, rcx	      1022	opncls.c	FUNCTION_28	IF_1
0x40014aa	      0xb8ffffffff	                     mov eax, 0xffffffff	      1022	opncls.c	FUNCTION_28	IF_1
0x40014af	          0x4839c2	                            cmp rdx, rax	      1022	opncls.c	FUNCTION_28	IF_1
0x40014b2	            0x762a	                           jbe 0x40014de	      1022	opncls.c	FUNCTION_28	IF_1
0x40014b4	          0x4885c9	                           test rcx, rcx	      1022	opncls.c	FUNCTION_28	IF_1
0x40014b7	            0x7425	                            je 0x40014de	      1022	opncls.c	FUNCTION_28	IF_1
0x40014b9	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      1023	opncls.c	FUNCTION_28	IF_1
0x40014c0	      0xba00000000	                              mov edx, 0	      1023	opncls.c	FUNCTION_28	IF_1
0x40014c5	          0x48f7f1	                                 div rcx	      1023	opncls.c	FUNCTION_28	IF_1
0x40014c8	          0x4839c6	                            cmp rsi, rax	      1023	opncls.c	FUNCTION_28	IF_1
0x40014cb	            0x7611	                           jbe 0x40014de	      1023	opncls.c	FUNCTION_28	IF_1
0x40014cd	      0xbf06000000	                              mov edi, 6	      1025	opncls.c	FUNCTION_28	IF_1	CALL_1
0x40014d2	      0xe800000000	                          call 0x40014d7	      1025	opncls.c	FUNCTION_28	IF_1	CALL_1
0x40014d7	      0xb800000000	                              mov eax, 0	      1026	opncls.c	FUNCTION_28	IF_1
0x40014dc	            0xeb2a	                           jmp 0x4001508	      1026	opncls.c	FUNCTION_28	IF_1
0x40014de	          0x4889f3	                            mov rbx, rsi	      1029	opncls.c	FUNCTION_28
0x40014e1	        0x480fafd9	                           imul rbx, rcx	      1029	opncls.c	FUNCTION_28
0x40014e5	          0x4889de	                            mov rsi, rbx	      1031	opncls.c	FUNCTION_28	CALL_2
0x40014e8	      0xe800000000	                          call 0x40014ed	      1031	opncls.c	FUNCTION_28	CALL_2
0x40014ed	          0x4889c5	                            mov rbp, rax	      1031	opncls.c	FUNCTION_28	CALL_2
0x40014f0	          0x4885c0	                           test rax, rax	      1032	opncls.c	FUNCTION_28	IF_2
0x40014f3	            0x7413	                            je 0x4001508	      1032	opncls.c	FUNCTION_28	IF_2
0x40014f5	          0x4889da	                            mov rdx, rbx	        90	string3.h	FUNCTION_49	CALL_6
0x40014f8	      0xbe00000000	                              mov esi, 0	        90	string3.h	FUNCTION_49	CALL_6
0x40014fd	          0x4889c7	                            mov rdi, rax	        90	string3.h	FUNCTION_49	CALL_6
0x4001500	      0xe800000000	                          call 0x4001505	        90	string3.h	FUNCTION_49	CALL_6
0x4001505	          0x4889e8	                            mov rax, rbp	      1034	opncls.c	FUNCTION_28
0x4001508	        0x4883c408	                              add rsp, 8	      1035	opncls.c	FUNCTION_28
0x400150c	              0x5b	                                 pop rbx	      1035	opncls.c	FUNCTION_28
0x400150d	              0x5d	                                 pop rbp	      1035	opncls.c	FUNCTION_28
0x400150e	              0xc3	                                     ret	      1035	opncls.c	FUNCTION_28
bfd_openr_iovec	DO,0:functions,0:FOR,0:CALL,7:IF,3:SWITCH,0:ELSE,0:WHILE,0	64
0x40013c9	            0x4157	                                push r15	       578	opncls.c	FUNCTION_17
0x40013cb	            0x4156	                                push r14	       578	opncls.c	FUNCTION_17
0x40013cd	            0x4155	                                push r13	       578	opncls.c	FUNCTION_17
0x40013cf	            0x4154	                                push r12	       578	opncls.c	FUNCTION_17
0x40013d1	              0x55	                                push rbp	       578	opncls.c	FUNCTION_17
0x40013d2	              0x53	                                push rbx	       578	opncls.c	FUNCTION_17
0x40013d3	        0x4883ec18	                           sub rsp, 0x18	       578	opncls.c	FUNCTION_17
0x40013d7	          0x4989fd	                            mov r13, rdi	       578	opncls.c	FUNCTION_17
0x40013da	          0x4889f5	                            mov rbp, rsi	       578	opncls.c	FUNCTION_17
0x40013dd	          0x4989d4	                            mov r12, rdx	       578	opncls.c	FUNCTION_17
0x40013e0	      0x48894c2408	                mov qword [rsp + 8], rcx	       578	opncls.c	FUNCTION_17
0x40013e5	          0x4d89c7	                             mov r15, r8	       578	opncls.c	FUNCTION_17
0x40013e8	          0x4d89ce	                             mov r14, r9	       578	opncls.c	FUNCTION_17
0x40013eb	      0xe800000000	                          call 0x40013f0	       584	opncls.c	FUNCTION_17	CALL_2
0x40013f0	          0x4885c0	                           test rax, rax	       585	opncls.c	FUNCTION_17	IF_1
0x40013f3	     0xf848e000000	                            je 0x4001487	       585	opncls.c	FUNCTION_17	IF_1
0x40013f9	          0x4889c3	                            mov rbx, rax	       585	opncls.c	FUNCTION_17	IF_1
0x40013fc	          0x4889c6	                            mov rsi, rax	       588	opncls.c	FUNCTION_17	CALL_3
0x40013ff	          0x4889ef	                            mov rdi, rbp	       588	opncls.c	FUNCTION_17	CALL_3
0x4001402	      0xe800000000	                          call 0x4001407	       588	opncls.c	FUNCTION_17	CALL_3
0x4001407	          0x4885c0	                           test rax, rax	       589	opncls.c	FUNCTION_17	IF_2
0x400140a	            0x750f	                           jne 0x400141b	       589	opncls.c	FUNCTION_17	IF_2
0x400140c	          0x4889df	                            mov rdi, rbx	       591	opncls.c	FUNCTION_17	IF_2	CALL_4
0x400140f	      0xe81aedffff	                call sym._bfd_delete_bfd	       591	opncls.c	FUNCTION_17	IF_2	CALL_4
0x4001414	      0xb800000000	                              mov eax, 0	       592	opncls.c	FUNCTION_17	IF_2
0x4001419	            0xeb71	                           jmp 0x400148c	       592	opncls.c	FUNCTION_17	IF_2
0x400141b	          0x4c89ef	                            mov rdi, r13	       597	opncls.c	FUNCTION_17	CALL_5
0x400141e	      0xe800000000	                          call 0x4001423	       597	opncls.c	FUNCTION_17	CALL_5
0x4001423	          0x488903	                    mov qword [rbx], rax	       597	opncls.c	FUNCTION_17	CALL_5
0x4001426	         0xfb64344	           movzx eax, byte [rbx + 0x44] 	       598	opncls.c	FUNCTION_17
0x400142a	          0x83e0e7	                     and eax, 0xffffffe7	       598	opncls.c	FUNCTION_17
0x400142d	          0x83c808	                               or eax, 8	       598	opncls.c	FUNCTION_17
0x4001430	          0x884344	               mov byte [rbx + 0x44], al	       598	opncls.c	FUNCTION_17
0x4001433	      0x488b742408	                mov rsi, qword [rsp + 8]	       601	opncls.c	FUNCTION_17
0x4001438	          0x4889df	                            mov rdi, rbx	       601	opncls.c	FUNCTION_17
0x400143b	          0x41ffd4	                                call r12	       601	opncls.c	FUNCTION_17
0x400143e	          0x4889c5	                            mov rbp, rax	       601	opncls.c	FUNCTION_17
0x4001441	          0x4885c0	                           test rax, rax	       602	opncls.c	FUNCTION_17	IF_3
0x4001444	            0x750f	                           jne 0x4001455	       602	opncls.c	FUNCTION_17	IF_3
0x4001446	          0x4889df	                            mov rdi, rbx	       604	opncls.c	FUNCTION_17	IF_3	CALL_6
0x4001449	      0xe8e0ecffff	                call sym._bfd_delete_bfd	       604	opncls.c	FUNCTION_17	IF_3	CALL_6
0x400144e	      0xb800000000	                              mov eax, 0	       605	opncls.c	FUNCTION_17	IF_3
0x4001453	            0xeb37	                           jmp 0x400148c	       605	opncls.c	FUNCTION_17	IF_3
0x4001455	      0xbe28000000	                           mov esi, 0x28	       608	opncls.c	FUNCTION_17	CALL_7
0x400145a	          0x4889df	                            mov rdi, rbx	       608	opncls.c	FUNCTION_17	CALL_7
0x400145d	      0xe800000000	                          call 0x4001462	       608	opncls.c	FUNCTION_17	CALL_7
0x4001462	          0x488928	                    mov qword [rax], rbp	       609	opncls.c	FUNCTION_17
0x4001465	        0x4c897808	                mov qword [rax + 8], r15	       610	opncls.c	FUNCTION_17
0x4001469	        0x4c897010	             mov qword [rax + 0x10], r14	       611	opncls.c	FUNCTION_17
0x400146d	      0x488b542450	            mov rdx, qword [rsp + 0x50] 	       612	opncls.c	FUNCTION_17
0x4001472	        0x48895018	             mov qword [rax + 0x18], rdx	       612	opncls.c	FUNCTION_17
0x4001476	    0x48c743180000	               mov qword [rbx + 0x18], 0	       614	opncls.c	FUNCTION_17
0x400147e	        0x48894310	             mov qword [rbx + 0x10], rax	       615	opncls.c	FUNCTION_17
0x4001482	          0x4889d8	                            mov rax, rbx	       617	opncls.c	FUNCTION_17
0x4001485	            0xeb05	                           jmp 0x400148c	       617	opncls.c	FUNCTION_17
0x4001487	      0xb800000000	                              mov eax, 0	       586	opncls.c	FUNCTION_17	IF_1
0x400148c	        0x4883c418	                           add rsp, 0x18	       618	opncls.c	FUNCTION_17
0x4001490	              0x5b	                                 pop rbx	       618	opncls.c	FUNCTION_17
0x4001491	              0x5d	                                 pop rbp	       618	opncls.c	FUNCTION_17
0x4001492	            0x415c	                                 pop r12	       618	opncls.c	FUNCTION_17
0x4001494	            0x415d	                                 pop r13	       618	opncls.c	FUNCTION_17
0x4001496	            0x415e	                                 pop r14	       618	opncls.c	FUNCTION_17
0x4001498	            0x415f	                                 pop r15	       618	opncls.c	FUNCTION_17
0x400149a	              0xc3	                                     ret	       618	opncls.c	FUNCTION_17
bfd_follow_gnu_debugaltlink	DO,0:functions,0:FOR,0:CALL,1:IF,0:SWITCH,0:ELSE,0:WHILE,0	8
0x40017da	        0x4883ec08	                              sub rsp, 8	      1640	opncls.c	FUNCTION_39
0x40017de	    0x41b900000000	                              mov r9d, 0	      1641	opncls.c	FUNCTION_39	CALL_1
0x40017e4	    0x41b800000000	                              mov r8d, 0	      1641	opncls.c	FUNCTION_39	CALL_1
0x40017ea	      0xb900000000	                              mov ecx, 0	      1641	opncls.c	FUNCTION_39	CALL_1
0x40017ef	      0xba01000000	                              mov edx, 1	      1641	opncls.c	FUNCTION_39	CALL_1
0x40017f4	      0xe8caeaffff	       call sym.find_separate_debug_file	      1641	opncls.c	FUNCTION_39	CALL_1
0x40017f9	        0x4883c408	                              add rsp, 8	      1645	opncls.c	FUNCTION_39
0x40017fd	              0xc3	                                     ret	      1645	opncls.c	FUNCTION_39
bfd_calc_gnu_debuglink_crc32	DO,0:functions,0:FOR,1:CALL,0:IF,0:SWITCH,0:ELSE,0:WHILE,0	15
0x4001524	            0x89f8	                            mov eax, edi	      1142	opncls.c	FUNCTION_30
0x4001526	            0xf7d0	                                 not eax	      1142	opncls.c	FUNCTION_30
0x4001528	          0x4801f2	                            add rdx, rsi	      1143	opncls.c	FUNCTION_30	FOR_1
0x400152b	          0x4839d6	                            cmp rsi, rdx	      1143	opncls.c	FUNCTION_30	FOR_1
0x400152e	            0x731c	                           jae 0x400154c	      1143	opncls.c	FUNCTION_30	FOR_1
0x4001530	            0x89c1	                            mov ecx, eax	      1144	opncls.c	FUNCTION_30	FOR_1
0x4001532	            0x320e	                      xor cl, byte [rsi]	      1144	opncls.c	FUNCTION_30	FOR_1
0x4001534	           0xfb6c9	                           movzx ecx, cl	      1144	opncls.c	FUNCTION_30	FOR_1
0x4001537	        0x48c1e808	                              shr rax, 8	      1144	opncls.c	FUNCTION_30	FOR_1
0x400153b	    0x483304cd0000	                  xor rax, qword [rcx*8]	      1144	opncls.c	FUNCTION_30	FOR_1
0x4001543	        0x4883c601	                              add rsi, 1	      1143	opncls.c	FUNCTION_30	FOR_1
0x4001547	          0x4839f2	                            cmp rdx, rsi	      1143	opncls.c	FUNCTION_30	FOR_1
0x400154a	            0x75e4	                           jne 0x4001530	      1143	opncls.c	FUNCTION_30	FOR_1
0x400154c	            0xf7d0	                                 not eax	      1145	opncls.c	FUNCTION_30
0x400154e	              0xc3	                                     ret	      1146	opncls.c	FUNCTION_30
bfd_fill_in_gnu_debuglink_section	DO,0:functions,0:FOR,0:CALL,13:IF,4:SWITCH,0:ELSE,0:WHILE,1	101
0x40018b7	            0x4157	                                push r15	      1737	opncls.c	FUNCTION_41
0x40018b9	            0x4156	                                push r14	      1737	opncls.c	FUNCTION_41
0x40018bb	            0x4155	                                push r13	      1737	opncls.c	FUNCTION_41
0x40018bd	            0x4154	                                push r12	      1737	opncls.c	FUNCTION_41
0x40018bf	              0x55	                                push rbp	      1737	opncls.c	FUNCTION_41
0x40018c0	              0x53	                                push rbx	      1737	opncls.c	FUNCTION_41
0x40018c1	        0x4883ec28	                           sub rsp, 0x28	      1737	opncls.c	FUNCTION_41
0x40018c5	      0x4889742408	                mov qword [rsp + 8], rsi	      1737	opncls.c	FUNCTION_41
0x40018ca	          0x4989d4	                            mov r12, rdx	      1737	opncls.c	FUNCTION_41
0x40018cd	          0x4885f6	                           test rsi, rsi	      1747	opncls.c	FUNCTION_41	IF_1
0x40018d0	           0xf94c2	                                 sete dl	      1747	opncls.c	FUNCTION_41	IF_1
0x40018d3	          0x4d85e4	                           test r12, r12	      1747	opncls.c	FUNCTION_41	IF_1
0x40018d6	           0xf94c0	                                 sete al	      1747	opncls.c	FUNCTION_41	IF_1
0x40018d9	             0x8c2	                               or dl, al	      1747	opncls.c	FUNCTION_41	IF_1
0x40018db	            0x7508	                           jne 0x40018e5	      1747	opncls.c	FUNCTION_41	IF_1
0x40018dd	          0x4989ff	                            mov r15, rdi	      1747	opncls.c	FUNCTION_41	IF_1
0x40018e0	          0x4885ff	                           test rdi, rdi	      1747	opncls.c	FUNCTION_41	IF_1
0x40018e3	            0x7515	                           jne 0x40018fa	      1747	opncls.c	FUNCTION_41	IF_1
0x40018e5	      0xbf05000000	                              mov edi, 5	      1749	opncls.c	FUNCTION_41	IF_1	CALL_1
0x40018ea	      0xe800000000	                          call 0x40018ef	      1749	opncls.c	FUNCTION_41	IF_1	CALL_1
0x40018ef	    0x41bd00000000	                             mov r13d, 0	      1750	opncls.c	FUNCTION_41	IF_1
0x40018f5	      0xe915010000	                           jmp 0x4001a0f	      1750	opncls.c	FUNCTION_41	IF_1
0x40018fa	      0xbe00000000	                              mov esi, 0	      1759	opncls.c	FUNCTION_41	CALL_2
0x40018ff	          0x4c89e7	                            mov rdi, r12	      1759	opncls.c	FUNCTION_41	CALL_2
0x4001902	      0xe800000000	                          call 0x4001907	      1759	opncls.c	FUNCTION_41	CALL_2
0x4001907	          0x4889c5	                            mov rbp, rax	      1759	opncls.c	FUNCTION_41	CALL_2
0x400190a	      0xbb00000000	                              mov ebx, 0	      1759	opncls.c	FUNCTION_41	CALL_2
0x400190f	          0x4885c0	                           test rax, rax	      1760	opncls.c	FUNCTION_41	IF_2
0x4001912	            0x7528	                           jne 0x400193c	      1760	opncls.c	FUNCTION_41	IF_2
0x4001914	      0xbf01000000	                              mov edi, 1	      1762	opncls.c	FUNCTION_41	IF_2	CALL_3
0x4001919	      0xe800000000	                          call 0x400191e	      1762	opncls.c	FUNCTION_41	IF_2	CALL_3
0x400191e	    0x41bd00000000	                             mov r13d, 0	      1763	opncls.c	FUNCTION_41	IF_2
0x4001924	      0xe9e6000000	                           jmp 0x4001a0f	      1763	opncls.c	FUNCTION_41	IF_2
0x4001929	          0x4889c2	                            mov rdx, rax	      1768	opncls.c	FUNCTION_41	CALL_5
0x400192c	      0xbe00000000	                              mov esi, 0	      1768	opncls.c	FUNCTION_41	CALL_5
0x4001931	          0x4889df	                            mov rdi, rbx	      1768	opncls.c	FUNCTION_41	CALL_5
0x4001934	      0xe800000000	                          call 0x4001939	      1768	opncls.c	FUNCTION_41	CALL_5
0x4001939	          0x4889c3	                            mov rbx, rax	      1768	opncls.c	FUNCTION_41	CALL_5
0x400193c	          0x4889e9	                            mov rcx, rbp	       295	stdio2.h	FUNCTION_72	CALL_9
0x400193f	      0xba00200000	                         mov edx, 0x2000	       295	stdio2.h	FUNCTION_72	CALL_9
0x4001944	      0xbe01000000	                              mov esi, 1	       295	stdio2.h	FUNCTION_72	CALL_9
0x4001949	      0xbf00000000	                              mov edi, 0	       295	stdio2.h	FUNCTION_72	CALL_9
0x400194e	      0xe800000000	                          call 0x4001953	       295	stdio2.h	FUNCTION_72	CALL_9
0x4001953	          0x4885c0	                           test rax, rax	      1767	opncls.c	FUNCTION_41	WHILE_1	CALL_4
0x4001956	            0x75d1	                           jne 0x4001929	      1767	opncls.c	FUNCTION_41	WHILE_1	CALL_4
0x4001958	          0x4889ef	                            mov rdi, rbp	      1769	opncls.c	FUNCTION_41	CALL_6
0x400195b	      0xe800000000	                          call 0x4001960	      1769	opncls.c	FUNCTION_41	CALL_6
0x4001960	          0x4c89e7	                            mov rdi, r12	      1773	opncls.c	FUNCTION_41	CALL_7
0x4001963	      0xe800000000	                          call 0x4001968	      1773	opncls.c	FUNCTION_41	CALL_7
0x4001968	          0x4889c7	                            mov rdi, rax	      1773	opncls.c	FUNCTION_41	CALL_7
0x400196b	      0xb800000000	                              mov eax, 0	      1775	opncls.c	FUNCTION_41	CALL_8
0x4001970	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1775	opncls.c	FUNCTION_41	CALL_8
0x4001977	      0x48897c2410	             mov qword [rsp + 0x10], rdi	      1775	opncls.c	FUNCTION_41	CALL_8
0x400197c	            0xf2ae	              repne scasb al, byte [rdi]	      1775	opncls.c	FUNCTION_41	CALL_8
0x400197e	          0x48f7d1	                                 not rcx	      1775	opncls.c	FUNCTION_41	CALL_8
0x4001981	        0x4c8d71ff	                      lea r14, [rcx - 1]	      1775	opncls.c	FUNCTION_41	CALL_8
0x4001985	        0x488d6903	                      lea rbp, [rcx + 3]	      1777	opncls.c	FUNCTION_41
0x4001989	        0x4883e5fc	             and rbp, 0xfffffffffffffffc	      1778	opncls.c	FUNCTION_41
0x400198d	        0x488d4504	                      lea rax, [rbp + 4]	      1779	opncls.c	FUNCTION_41
0x4001991	      0x4889442418	             mov qword [rsp + 0x18], rax	      1781	opncls.c	FUNCTION_41	CALL_9
0x4001996	          0x4889c7	                            mov rdi, rax	      1781	opncls.c	FUNCTION_41	CALL_9
0x4001999	      0xe800000000	                          call 0x400199e	      1781	opncls.c	FUNCTION_41	CALL_9
0x400199e	          0x4989c4	                            mov r12, rax	      1781	opncls.c	FUNCTION_41	CALL_9
0x40019a1	    0x41bd00000000	                             mov r13d, 0	      1785	opncls.c	FUNCTION_41	IF_3
0x40019a7	          0x4885c0	                           test rax, rax	      1782	opncls.c	FUNCTION_41	IF_3
0x40019aa	            0x7463	                            je 0x4001a0f	      1782	opncls.c	FUNCTION_41	IF_3
0x40019ac	          0x4c89f2	                            mov rdx, r14	        53	string3.h	FUNCTION_46	CALL_3
0x40019af	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	        53	string3.h	FUNCTION_46	CALL_3
0x40019b4	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_46	CALL_3
0x40019b7	      0xe800000000	                          call 0x40019bc	        53	string3.h	FUNCTION_46	CALL_3
0x40019bc	          0x4889ea	                            mov rdx, rbp	        90	string3.h	FUNCTION_49	CALL_6
0x40019bf	          0x4c29f2	                            sub rdx, r14	        90	string3.h	FUNCTION_49	CALL_6
0x40019c2	        0x4b8d3c34	                    lea rdi, [r12 + r14]	        90	string3.h	FUNCTION_49	CALL_6
0x40019c6	      0xbe00000000	                              mov esi, 0	        90	string3.h	FUNCTION_49	CALL_6
0x40019cb	      0xe800000000	                          call 0x40019d0	        90	string3.h	FUNCTION_49	CALL_6
0x40019d0	        0x498d342c	                    lea rsi, [r12 + rbp]	      1792	opncls.c	FUNCTION_41
0x40019d4	        0x498b4708	                mov rax, qword [r15 + 8]	      1792	opncls.c	FUNCTION_41
0x40019d8	          0x4889df	                            mov rdi, rbx	      1792	opncls.c	FUNCTION_41
0x40019db	          0xff5048	                 call qword [rax + 0x48]	      1792	opncls.c	FUNCTION_41
0x40019de	      0x4c8b442418	              mov r8, qword [rsp + 0x18]	      1794	opncls.c	FUNCTION_41	IF_4	CALL_12
0x40019e3	      0xb900000000	                              mov ecx, 0	      1794	opncls.c	FUNCTION_41	IF_4	CALL_12
0x40019e8	          0x4c89e2	                            mov rdx, r12	      1794	opncls.c	FUNCTION_41	IF_4	CALL_12
0x40019eb	      0x488b742408	                mov rsi, qword [rsp + 8]	      1794	opncls.c	FUNCTION_41	IF_4	CALL_12
0x40019f0	          0x4c89ff	                            mov rdi, r15	      1794	opncls.c	FUNCTION_41	IF_4	CALL_12
0x40019f3	      0xe800000000	                          call 0x40019f8	      1794	opncls.c	FUNCTION_41	IF_4	CALL_12
0x40019f8	          0x4189c5	                           mov r13d, eax	      1794	opncls.c	FUNCTION_41	IF_4	CALL_12
0x40019fb	            0x85c0	                           test eax, eax	      1794	opncls.c	FUNCTION_41	IF_4	CALL_12
0x40019fd	            0x750a	                           jne 0x4001a09	      1794	opncls.c	FUNCTION_41	IF_4	CALL_12
0x40019ff	          0x4c89e7	                            mov rdi, r12	      1797	opncls.c	FUNCTION_41	IF_4	CALL_13
0x4001a02	      0xe800000000	                          call 0x4001a07	      1797	opncls.c	FUNCTION_41	IF_4	CALL_13
0x4001a07	            0xeb06	                           jmp 0x4001a0f	      1798	opncls.c	FUNCTION_41	IF_4
0x4001a09	    0x41bd01000000	                             mov r13d, 1	      1801	opncls.c	FUNCTION_41
0x4001a0f	          0x4489e8	                           mov eax, r13d	      1802	opncls.c	FUNCTION_41
0x4001a12	        0x4883c428	                           add rsp, 0x28	      1802	opncls.c	FUNCTION_41
0x4001a16	              0x5b	                                 pop rbx	      1802	opncls.c	FUNCTION_41
0x4001a17	              0x5d	                                 pop rbp	      1802	opncls.c	FUNCTION_41
0x4001a18	            0x415c	                                 pop r12	      1802	opncls.c	FUNCTION_41
0x4001a1a	            0x415d	                                 pop r13	      1802	opncls.c	FUNCTION_41
0x4001a1c	            0x415e	                                 pop r14	      1802	opncls.c	FUNCTION_41
0x4001a1e	            0x415f	                                 pop r15	      1802	opncls.c	FUNCTION_41
0x4001a20	              0xc3	                                     ret	      1802	opncls.c	FUNCTION_41
separate_alt_debug_file_exists	DO,0:functions,0:FOR,0:CALL,3:IF,1:SWITCH,0:ELSE,0:WHILE,0	18
0x4000285	              0x53	                                push rbx	      1363	opncls.c	FUNCTION_35
0x4000286	          0x4889fb	                            mov rbx, rdi	      1363	opncls.c	FUNCTION_35
0x4000289	          0x4885ff	                           test rdi, rdi	      1366	opncls.c	FUNCTION_35	CALL_1
0x400028c	            0x750f	                           jne 0x400029d	      1366	opncls.c	FUNCTION_35	CALL_1
0x400028e	      0xbe56050000	                          mov esi, 0x556	      1366	opncls.c	FUNCTION_35	CALL_1
0x4000293	      0xbf00000000	                              mov edi, 0	      1366	opncls.c	FUNCTION_35	CALL_1
0x4000298	      0xe800000000	                          call 0x400029d	      1366	opncls.c	FUNCTION_35	CALL_1
0x400029d	      0xbe00000000	                              mov esi, 0	      1368	opncls.c	FUNCTION_35	CALL_2
0x40002a2	          0x4889df	                            mov rdi, rbx	      1368	opncls.c	FUNCTION_35	CALL_2
0x40002a5	      0xe800000000	                          call 0x40002aa	      1368	opncls.c	FUNCTION_35	CALL_2
0x40002aa	          0x4889c7	                            mov rdi, rax	      1368	opncls.c	FUNCTION_35	CALL_2
0x40002ad	      0xb800000000	                              mov eax, 0	      1370	opncls.c	FUNCTION_35	IF_1
0x40002b2	          0x4885ff	                           test rdi, rdi	      1369	opncls.c	FUNCTION_35	IF_1
0x40002b5	            0x740a	                            je 0x40002c1	      1369	opncls.c	FUNCTION_35	IF_1
0x40002b7	      0xe800000000	                          call 0x40002bc	      1372	opncls.c	FUNCTION_35	CALL_3
0x40002bc	      0xb801000000	                              mov eax, 1	      1374	opncls.c	FUNCTION_35
0x40002c1	              0x5b	                                 pop rbx	      1375	opncls.c	FUNCTION_35
0x40002c2	              0xc3	                                     ret	      1375	opncls.c	FUNCTION_35
opncls_bread	DO,0:functions,0:FOR,0:CALL,0:IF,1:SWITCH,0:ELSE,0:WHILE,0	12
0x400007b	              0x53	                                push rbx	       501	opncls.c	FUNCTION_11
0x400007c	        0x488b5f10	            mov rbx, qword [rdi + 0x10] 	       502	opncls.c	FUNCTION_11
0x4000080	        0x4c8b4320	              mov r8, qword [rbx + 0x20]	       503	opncls.c	FUNCTION_11
0x4000084	          0x4889d1	                            mov rcx, rdx	       503	opncls.c	FUNCTION_11
0x4000087	          0x4889f2	                            mov rdx, rsi	       503	opncls.c	FUNCTION_11
0x400008a	          0x488b33	                    mov rsi, qword [rbx]	       503	opncls.c	FUNCTION_11
0x400008d	          0xff5308	                    call qword [rbx + 8]	       503	opncls.c	FUNCTION_11
0x4000090	          0x4885c0	                           test rax, rax	       505	opncls.c	FUNCTION_11	IF_1
0x4000093	            0x7804	                            js 0x4000099	       505	opncls.c	FUNCTION_11	IF_1
0x4000095	        0x48014320	            add qword [rbx + 0x20], rax 	       507	opncls.c	FUNCTION_11
0x4000099	              0x5b	                                 pop rbx	       509	opncls.c	FUNCTION_11
0x400009a	              0xc3	                                     ret	       509	opncls.c	FUNCTION_11
opncls_bwrite	DO,0:functions,0:FOR,0:CALL,0:IF,0:SWITCH,0:ELSE,0:WHILE,0	2
0x400009b	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       517	opncls.c	FUNCTION_12
0x40000a2	              0xc3	                                     ret	       517	opncls.c	FUNCTION_12
bfd_fopen	DO,0:functions,0:FOR,0:CALL,13:IF,10:SWITCH,0:ELSE,3:WHILE,0	96
0x400090e	            0x4156	                                push r14	       196	opncls.c	FUNCTION_5
0x4000910	            0x4155	                                push r13	       196	opncls.c	FUNCTION_5
0x4000912	            0x4154	                                push r12	       196	opncls.c	FUNCTION_5
0x4000914	              0x55	                                push rbp	       196	opncls.c	FUNCTION_5
0x4000915	              0x53	                                push rbx	       196	opncls.c	FUNCTION_5
0x4000916	          0x4989fd	                            mov r13, rdi	       196	opncls.c	FUNCTION_5
0x4000919	          0x4989f6	                            mov r14, rsi	       196	opncls.c	FUNCTION_5
0x400091c	          0x4989d4	                            mov r12, rdx	       196	opncls.c	FUNCTION_5
0x400091f	            0x89cd	                            mov ebp, ecx	       196	opncls.c	FUNCTION_5
0x4000921	      0xe800000000	                          call 0x4000926	       200	opncls.c	FUNCTION_5	CALL_1
0x4000926	          0x4885c0	                           test rax, rax	       201	opncls.c	FUNCTION_5	IF_1
0x4000929	            0x751f	                           jne 0x400094a	       201	opncls.c	FUNCTION_5	IF_1
0x400092b	      0xb800000000	                              mov eax, 0	       205	opncls.c	FUNCTION_5	IF_1
0x4000930	          0x83fdff	             cmp ebp, 0xffffffffffffffff	       203	opncls.c	FUNCTION_5	IF_1	IF_2
0x4000933	     0xf8402010000	                            je 0x4000a3b	       203	opncls.c	FUNCTION_5	IF_1	IF_2
0x4000939	            0x89ef	                            mov edi, ebp	       204	opncls.c	FUNCTION_5	IF_1	CALL_2
0x400093b	      0xe800000000	                          call 0x4000940	       204	opncls.c	FUNCTION_5	IF_1	CALL_2
0x4000940	      0xb800000000	                              mov eax, 0	       205	opncls.c	FUNCTION_5	IF_1
0x4000945	      0xe9f1000000	                           jmp 0x4000a3b	       205	opncls.c	FUNCTION_5	IF_1
0x400094a	          0x4889c3	                            mov rbx, rax	       205	opncls.c	FUNCTION_5	IF_1
0x400094d	          0x4889c6	                            mov rsi, rax	       208	opncls.c	FUNCTION_5	CALL_3
0x4000950	          0x4c89f7	                            mov rdi, r14	       208	opncls.c	FUNCTION_5	CALL_3
0x4000953	      0xe800000000	                          call 0x4000958	       208	opncls.c	FUNCTION_5	CALL_3
0x4000958	          0x4885c0	                           test rax, rax	       209	opncls.c	FUNCTION_5	IF_3
0x400095b	            0x751e	                           jne 0x400097b	       209	opncls.c	FUNCTION_5	IF_3
0x400095d	          0x83fdff	             cmp ebp, 0xffffffffffffffff	       211	opncls.c	FUNCTION_5	IF_3	IF_4
0x4000960	            0x7407	                            je 0x4000969	       211	opncls.c	FUNCTION_5	IF_3	IF_4
0x4000962	            0x89ef	                            mov edi, ebp	       212	opncls.c	FUNCTION_5	IF_3	CALL_4
0x4000964	      0xe800000000	                          call 0x4000969	       212	opncls.c	FUNCTION_5	IF_3	CALL_4
0x4000969	          0x4889df	                            mov rdi, rbx	       213	opncls.c	FUNCTION_5	IF_3	CALL_5
0x400096c	      0xe8bdf7ffff	                call sym._bfd_delete_bfd	       213	opncls.c	FUNCTION_5	IF_3	CALL_5
0x4000971	      0xb800000000	                              mov eax, 0	       214	opncls.c	FUNCTION_5	IF_3
0x4000976	      0xe9c0000000	                           jmp 0x4000a3b	       214	opncls.c	FUNCTION_5	IF_3
0x400097b	          0x83fdff	             cmp ebp, 0xffffffffffffffff	       218	opncls.c	FUNCTION_5	IF_5
0x400097e	            0x7410	                            je 0x4000990	       218	opncls.c	FUNCTION_5	IF_5
0x4000980	          0x4c89e6	                            mov rsi, r12	       219	opncls.c	FUNCTION_5	CALL_6
0x4000983	            0x89ef	                            mov edi, ebp	       219	opncls.c	FUNCTION_5	CALL_6
0x4000985	      0xe800000000	                          call 0x400098a	       219	opncls.c	FUNCTION_5	CALL_6
0x400098a	        0x48894310	             mov qword [rbx + 0x10], rax	       219	opncls.c	FUNCTION_5	CALL_6
0x400098e	            0xeb0f	                           jmp 0x400099f	       219	opncls.c	FUNCTION_5	CALL_6
0x4000990	          0x4c89e6	                            mov rsi, r12	       222	opncls.c	FUNCTION_5	CALL_7
0x4000993	          0x4c89ef	                            mov rdi, r13	       222	opncls.c	FUNCTION_5	CALL_7
0x4000996	      0xe800000000	                          call 0x400099b	       222	opncls.c	FUNCTION_5	CALL_7
0x400099b	        0x48894310	             mov qword [rbx + 0x10], rax	       222	opncls.c	FUNCTION_5	CALL_7
0x400099f	      0x48837b1000	               cmp qword [rbx + 0x10], 0	       223	opncls.c	FUNCTION_5	IF_6
0x40009a4	            0x7519	                           jne 0x40009bf	       223	opncls.c	FUNCTION_5	IF_6
0x40009a6	      0xbf01000000	                              mov edi, 1	       225	opncls.c	FUNCTION_5	IF_6	CALL_8
0x40009ab	      0xe800000000	                          call 0x40009b0	       225	opncls.c	FUNCTION_5	IF_6	CALL_8
0x40009b0	          0x4889df	                            mov rdi, rbx	       226	opncls.c	FUNCTION_5	IF_6	CALL_9
0x40009b3	      0xe876f7ffff	                call sym._bfd_delete_bfd	       226	opncls.c	FUNCTION_5	IF_6	CALL_9
0x40009b8	      0xb800000000	                              mov eax, 0	       227	opncls.c	FUNCTION_5	IF_6
0x40009bd	            0xeb7c	                           jmp 0x4000a3b	       227	opncls.c	FUNCTION_5	IF_6
0x40009bf	          0x4c89ef	                            mov rdi, r13	       234	opncls.c	FUNCTION_5	CALL_10
0x40009c2	      0xe800000000	                          call 0x40009c7	       234	opncls.c	FUNCTION_5	CALL_10
0x40009c7	          0x488903	                    mov qword [rbx], rax	       234	opncls.c	FUNCTION_5	CALL_10
0x40009ca	      0x410fb61424	                   movzx edx, byte [r12]	       238	opncls.c	FUNCTION_5	IF_7
0x40009cf	          0x8d429f	                   lea eax, [rdx - 0x61]	       238	opncls.c	FUNCTION_5	IF_7
0x40009d2	            0x3c16	                            cmp al, 0x16	       238	opncls.c	FUNCTION_5	IF_7
0x40009d4	            0x7719	                            ja 0x40009ef	       238	opncls.c	FUNCTION_5	IF_7
0x40009d6	      0xb901004200	                       mov ecx, 0x420001	       238	opncls.c	FUNCTION_5	IF_7
0x40009db	        0x480fa3c1	                             bt rcx, rax	       238	opncls.c	FUNCTION_5	IF_7
0x40009df	            0x730e	                           jae 0x40009ef	       238	opncls.c	FUNCTION_5	IF_7
0x40009e1	    0x41807c24012b	                cmp byte [r12 + 1], 0x2b	       239	opncls.c	FUNCTION_5	IF_7
0x40009e7	            0x7506	                           jne 0x40009ef	       239	opncls.c	FUNCTION_5	IF_7
0x40009e9	        0x804b4418	              or byte [rbx + 0x44], 0x18	       240	opncls.c	FUNCTION_5	IF_7
0x40009ed	            0xeb21	                           jmp 0x4000a10	       240	opncls.c	FUNCTION_5	IF_7
0x40009ef	          0x80fa72	                            cmp dl, 0x72	       241	opncls.c	FUNCTION_5	ELSE_2	IF_8
0x40009f2	            0x750f	                           jne 0x4000a03	       241	opncls.c	FUNCTION_5	ELSE_2	IF_8
0x40009f4	         0xfb64344	           movzx eax, byte [rbx + 0x44] 	       242	opncls.c	FUNCTION_5	ELSE_2	IF_8
0x40009f8	          0x83e0e7	                     and eax, 0xffffffe7	       242	opncls.c	FUNCTION_5	ELSE_2	IF_8
0x40009fb	          0x83c808	                               or eax, 8	       242	opncls.c	FUNCTION_5	ELSE_2	IF_8
0x40009fe	          0x884344	               mov byte [rbx + 0x44], al	       242	opncls.c	FUNCTION_5	ELSE_2	IF_8
0x4000a01	            0xeb0d	                           jmp 0x4000a10	       242	opncls.c	FUNCTION_5	ELSE_2	IF_8
0x4000a03	         0xfb64344	           movzx eax, byte [rbx + 0x44] 	       244	opncls.c	FUNCTION_5	ELSE_3
0x4000a07	          0x83e0e7	                     and eax, 0xffffffe7	       244	opncls.c	FUNCTION_5	ELSE_3
0x4000a0a	          0x83c810	                            or eax, 0x10	       244	opncls.c	FUNCTION_5	ELSE_3
0x4000a0d	          0x884344	               mov byte [rbx + 0x44], al	       244	opncls.c	FUNCTION_5	ELSE_3
0x4000a10	          0x4889df	                            mov rdi, rbx	       246	opncls.c	FUNCTION_5	ELSE_3	IF_9	CALL_11
0x4000a13	      0xe800000000	                          call 0x4000a18	       246	opncls.c	FUNCTION_5	ELSE_3	IF_9	CALL_11
0x4000a18	            0x85c0	                           test eax, eax	       246	opncls.c	FUNCTION_5	ELSE_3	IF_9	CALL_11
0x4000a1a	            0x750f	                           jne 0x4000a2b	       246	opncls.c	FUNCTION_5	ELSE_3	IF_9	CALL_11
0x4000a1c	          0x4889df	                            mov rdi, rbx	       248	opncls.c	FUNCTION_5	ELSE_3	IF_9	CALL_12
0x4000a1f	      0xe80af7ffff	                call sym._bfd_delete_bfd	       248	opncls.c	FUNCTION_5	ELSE_3	IF_9	CALL_12
0x4000a24	      0xb800000000	                              mov eax, 0	       249	opncls.c	FUNCTION_5	ELSE_3	IF_9
0x4000a29	            0xeb10	                           jmp 0x4000a3b	       249	opncls.c	FUNCTION_5	ELSE_3	IF_9
0x4000a2b	        0x804b4708	                 or byte [rbx + 0x47], 8	       251	opncls.c	FUNCTION_5
0x4000a2f	          0x4889d8	                            mov rax, rbx	       260	opncls.c	FUNCTION_5
0x4000a32	          0x83fdff	             cmp ebp, 0xffffffffffffffff	       257	opncls.c	FUNCTION_5	IF_10
0x4000a35	            0x7504	                           jne 0x4000a3b	       257	opncls.c	FUNCTION_5	IF_10
0x4000a37	        0x804b4702	                 or byte [rbx + 0x47], 2	      7070	bfd.h	FUNCTION_78
0x4000a3b	              0x5b	                                 pop rbx	       261	opncls.c	FUNCTION_5
0x4000a3c	              0x5d	                                 pop rbp	       261	opncls.c	FUNCTION_5
0x4000a3d	            0x415c	                                 pop r12	       261	opncls.c	FUNCTION_5
0x4000a3f	            0x415d	                                 pop r13	       261	opncls.c	FUNCTION_5
0x4000a41	            0x415e	                                 pop r14	       261	opncls.c	FUNCTION_5
0x4000a43	              0xc3	                                     ret	       261	opncls.c	FUNCTION_5
get_alt_debug_link_info_shim	DO,0:functions,0:FOR,0:CALL,2:IF,0:SWITCH,0:ELSE,0:WHILE,0	20
0x400173c	              0x53	                                push rbx	      1604	opncls.c	FUNCTION_38
0x400173d	        0x4883ec20	                           sub rsp, 0x20	      1604	opncls.c	FUNCTION_38
0x4001741	    0x64488b042528	                mov rax, qword fs:[0x28]	      1604	opncls.c	FUNCTION_38
0x400174a	      0x4889442418	             mov qword [rsp + 0x18], rax	      1604	opncls.c	FUNCTION_38
0x400174f	            0x31c0	                            xor eax, eax	      1604	opncls.c	FUNCTION_38
0x4001751	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1606	opncls.c	FUNCTION_38
0x400175a	      0x488d542410	                   lea rdx, [rsp + 0x10]	      1607	opncls.c	FUNCTION_38	CALL_1
0x400175f	      0x488d742408	                      lea rsi, [rsp + 8]	      1607	opncls.c	FUNCTION_38	CALL_1
0x4001764	      0xe800000000	                          call 0x4001769	      1607	opncls.c	FUNCTION_38	CALL_1
0x4001769	          0x4889c3	                            mov rbx, rax	      1607	opncls.c	FUNCTION_38	CALL_1
0x400176c	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1609	opncls.c	FUNCTION_38	CALL_2
0x4001771	      0xe800000000	                          call 0x4001776	      1609	opncls.c	FUNCTION_38	CALL_2
0x4001776	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1612	opncls.c	FUNCTION_38
0x400177b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1612	opncls.c	FUNCTION_38
0x4001784	            0x7405	                            je 0x400178b	      1612	opncls.c	FUNCTION_38
0x4001786	      0xe800000000	                          call 0x400178b	      1612	opncls.c	FUNCTION_38
0x400178b	          0x4889d8	                            mov rax, rbx	      1612	opncls.c	FUNCTION_38
0x400178e	        0x4883c420	                           add rsp, 0x20	      1612	opncls.c	FUNCTION_38
0x4001792	              0x5b	                                 pop rbx	      1612	opncls.c	FUNCTION_38
0x4001793	              0xc3	                                     ret	      1612	opncls.c	FUNCTION_38
bfd_get_debug_link_info_1	DO,0:functions,0:FOR,0:CALL,7:IF,5:SWITCH,0:ELSE,0:WHILE,0	78
0x4000174	            0x4155	                                push r13	      1176	opncls.c	FUNCTION_31
0x4000176	            0x4154	                                push r12	      1176	opncls.c	FUNCTION_31
0x4000178	              0x55	                                push rbp	      1176	opncls.c	FUNCTION_31
0x4000179	              0x53	                                push rbx	      1176	opncls.c	FUNCTION_31
0x400017a	        0x4883ec18	                           sub rsp, 0x18	      1176	opncls.c	FUNCTION_31
0x400017e	          0x4889fb	                            mov rbx, rdi	      1176	opncls.c	FUNCTION_31
0x4000181	          0x4989f5	                            mov r13, rsi	      1176	opncls.c	FUNCTION_31
0x4000184	    0x64488b042528	                mov rax, qword fs:[0x28]	      1176	opncls.c	FUNCTION_31
0x400018d	      0x4889442408	                mov qword [rsp + 8], rax	      1176	opncls.c	FUNCTION_31
0x4000192	            0x31c0	                            xor eax, eax	      1176	opncls.c	FUNCTION_31
0x4000194	          0x4885ff	                           test rdi, rdi	      1184	opncls.c	FUNCTION_31	CALL_1
0x4000197	            0x750f	                           jne 0x40001a8	      1184	opncls.c	FUNCTION_31	CALL_1
0x4000199	      0xbea0040000	                          mov esi, 0x4a0	      1184	opncls.c	FUNCTION_31	CALL_1
0x400019e	      0xbf00000000	                              mov edi, 0	      1184	opncls.c	FUNCTION_31	CALL_1
0x40001a3	      0xe800000000	                          call 0x40001a8	      1184	opncls.c	FUNCTION_31	CALL_1
0x40001a8	          0x4d85ed	                           test r13, r13	      1185	opncls.c	FUNCTION_31	CALL_2
0x40001ab	            0x750f	                           jne 0x40001bc	      1185	opncls.c	FUNCTION_31	CALL_2
0x40001ad	      0xbea1040000	                          mov esi, 0x4a1	      1185	opncls.c	FUNCTION_31	CALL_2
0x40001b2	      0xbf00000000	                              mov edi, 0	      1185	opncls.c	FUNCTION_31	CALL_2
0x40001b7	      0xe800000000	                          call 0x40001bc	      1185	opncls.c	FUNCTION_31	CALL_2
0x40001bc	      0xbe00000000	                              mov esi, 0	      1187	opncls.c	FUNCTION_31	CALL_3
0x40001c1	          0x4889df	                            mov rdi, rbx	      1187	opncls.c	FUNCTION_31	CALL_3
0x40001c4	      0xe800000000	                          call 0x40001c9	      1187	opncls.c	FUNCTION_31	CALL_3
0x40001c9	          0x4889c5	                            mov rbp, rax	      1187	opncls.c	FUNCTION_31	CALL_3
0x40001cc	          0x4885c0	                           test rax, rax	      1189	opncls.c	FUNCTION_31	IF_1
0x40001cf	     0xf8488000000	                            je 0x400025d	      1189	opncls.c	FUNCTION_31	IF_1
0x40001d5	        0x4c8b6038	            mov r12, qword [rax + 0x38] 	      1192	opncls.c	FUNCTION_31
0x40001d9	      0xba00000000	                              mov edx, 0	      1196	opncls.c	FUNCTION_31	IF_2
0x40001de	        0x4983fc07	                              cmp r12, 7	      1195	opncls.c	FUNCTION_31	IF_2	CALL_4
0x40001e2	            0x767e	                           jbe 0x4000262	      1195	opncls.c	FUNCTION_31	IF_2	CALL_4
0x40001e4	          0x4889df	                            mov rdi, rbx	      1195	opncls.c	FUNCTION_31	IF_2	CALL_4
0x40001e7	      0xe800000000	                          call 0x40001ec	      1195	opncls.c	FUNCTION_31	IF_2	CALL_4
0x40001ec	      0xba00000000	                              mov edx, 0	      1196	opncls.c	FUNCTION_31	IF_2
0x40001f1	          0x4939c4	                            cmp r12, rax	      1195	opncls.c	FUNCTION_31	IF_2	CALL_4
0x40001f4	            0x736c	                           jae 0x4000262	      1195	opncls.c	FUNCTION_31	IF_2	CALL_4
0x40001f6	          0x4889e2	                            mov rdx, rsp	      1198	opncls.c	FUNCTION_31	IF_3	CALL_5
0x40001f9	          0x4889ee	                            mov rsi, rbp	      1198	opncls.c	FUNCTION_31	IF_3	CALL_5
0x40001fc	          0x4889df	                            mov rdi, rbx	      1198	opncls.c	FUNCTION_31	IF_3	CALL_5
0x40001ff	      0xe800000000	                          call 0x4000204	      1198	opncls.c	FUNCTION_31	IF_3	CALL_5
0x4000204	            0x85c0	                           test eax, eax	      1198	opncls.c	FUNCTION_31	IF_3	CALL_5
0x4000206	            0x751a	                           jne 0x4000222	      1198	opncls.c	FUNCTION_31	IF_3	CALL_5
0x4000208	        0x488b3c24	                    mov rdi, qword [rsp]	      1200	opncls.c	FUNCTION_31	IF_3	IF_4
0x400020c	      0xba00000000	                              mov edx, 0	      1202	opncls.c	FUNCTION_31	IF_3
0x4000211	          0x4885ff	                           test rdi, rdi	      1200	opncls.c	FUNCTION_31	IF_3	IF_4
0x4000214	            0x744c	                            je 0x4000262	      1200	opncls.c	FUNCTION_31	IF_3	IF_4
0x4000216	      0xe800000000	                          call 0x400021b	      1201	opncls.c	FUNCTION_31	IF_3	CALL_6
0x400021b	      0xba00000000	                              mov edx, 0	      1202	opncls.c	FUNCTION_31	IF_3
0x4000220	            0xeb40	                           jmp 0x4000262	      1202	opncls.c	FUNCTION_31	IF_3
0x4000222	        0x488b2c24	                    mov rbp, qword [rsp]	      1206	opncls.c	FUNCTION_31
0x4000226	          0x4c89e6	                            mov rsi, r12	      1208	opncls.c	FUNCTION_31	CALL_7
0x4000229	          0x4889ef	                            mov rdi, rbp	      1208	opncls.c	FUNCTION_31	CALL_7
0x400022c	      0xe800000000	                          call 0x4000231	      1208	opncls.c	FUNCTION_31	CALL_7
0x4000231	          0x83c004	                              add eax, 4	      1209	opncls.c	FUNCTION_31
0x4000234	          0x83e0fc	                     and eax, 0xfffffffc	      1209	opncls.c	FUNCTION_31
0x4000237	          0x8d4804	                      lea ecx, [rax + 4]	      1210	opncls.c	FUNCTION_31	IF_5
0x400023a	            0x89c9	                            mov ecx, ecx	      1210	opncls.c	FUNCTION_31	IF_5
0x400023c	      0xba00000000	                              mov edx, 0	      1211	opncls.c	FUNCTION_31	IF_5
0x4000241	          0x4939cc	                            cmp r12, rcx	      1210	opncls.c	FUNCTION_31	IF_5
0x4000244	            0x721c	                            jb 0x4000262	      1210	opncls.c	FUNCTION_31	IF_5
0x4000246	            0x89c0	                            mov eax, eax	      1213	opncls.c	FUNCTION_31
0x4000248	      0x488d7c0500	                    lea rdi, [rbp + rax]	      1213	opncls.c	FUNCTION_31
0x400024d	        0x488b4308	                mov rax, qword [rbx + 8]	      1213	opncls.c	FUNCTION_31
0x4000251	          0xff5038	                 call qword [rax + 0x38]	      1213	opncls.c	FUNCTION_31
0x4000254	        0x49894500	                    mov qword [r13], rax	      1213	opncls.c	FUNCTION_31
0x4000258	          0x4889ea	                            mov rdx, rbp	      1214	opncls.c	FUNCTION_31
0x400025b	            0xeb05	                           jmp 0x4000262	      1214	opncls.c	FUNCTION_31
0x400025d	      0xba00000000	                              mov edx, 0	      1190	opncls.c	FUNCTION_31	IF_1
0x4000262	          0x4889d0	                            mov rax, rdx	      1215	opncls.c	FUNCTION_31
0x4000265	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1215	opncls.c	FUNCTION_31
0x400026a	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1215	opncls.c	FUNCTION_31
0x4000273	            0x7405	                            je 0x400027a	      1215	opncls.c	FUNCTION_31
0x4000275	      0xe800000000	                          call 0x400027a	      1215	opncls.c	FUNCTION_31
0x400027a	        0x4883c418	                           add rsp, 0x18	      1215	opncls.c	FUNCTION_31
0x400027e	              0x5b	                                 pop rbx	      1215	opncls.c	FUNCTION_31
0x400027f	              0x5d	                                 pop rbp	      1215	opncls.c	FUNCTION_31
0x4000280	            0x415c	                                 pop r12	      1215	opncls.c	FUNCTION_31
0x4000282	            0x415d	                                 pop r13	      1215	opncls.c	FUNCTION_31
0x4000284	              0xc3	                                     ret	      1215	opncls.c	FUNCTION_31
_bfd_new_bfd	DO,0:functions,0:FOR,0:CALL,6:IF,4:SWITCH,0:ELSE,1:WHILE,0	47
0x400075d	              0x53	                                push rbx	        59	opncls.c	FUNCTION_1
0x400075e	      0xbf18010000	                          mov edi, 0x118	        62	opncls.c	FUNCTION_1	CALL_1
0x4000763	      0xe800000000	                          call 0x4000768	        62	opncls.c	FUNCTION_1	CALL_1
0x4000768	          0x4885c0	                           test rax, rax	        63	opncls.c	FUNCTION_1	IF_1
0x400076b	     0xf849f000000	                            je 0x4000810	        63	opncls.c	FUNCTION_1	IF_1
0x4000771	          0x4889c3	                            mov rbx, rax	        63	opncls.c	FUNCTION_1	IF_1
0x4000774	    0x8b0500000000	            mov eax, dword [0x0400077a] 	        66	opncls.c	FUNCTION_1	IF_2
0x400077a	            0x85c0	                           test eax, eax	        66	opncls.c	FUNCTION_1	IF_2
0x400077c	            0x741d	                            je 0x400079b	        66	opncls.c	FUNCTION_1	IF_2
0x400077e	    0x8b0d00000000	            mov ecx, dword [0x04000784] 	        68	opncls.c	FUNCTION_1	IF_2
0x4000784	          0x8d51ff	                      lea edx, [rcx - 1]	        68	opncls.c	FUNCTION_1	IF_2
0x4000787	    0x891500000000	            mov dword [0x0400078d], edx 	        68	opncls.c	FUNCTION_1	IF_2
0x400078d	          0x895340	             mov dword [rbx + 0x40], edx	        68	opncls.c	FUNCTION_1	IF_2
0x4000790	          0x83e801	                              sub eax, 1	        69	opncls.c	FUNCTION_1	IF_2
0x4000793	    0x890500000000	            mov dword [0x04000799], eax 	        69	opncls.c	FUNCTION_1	IF_2
0x4000799	            0xeb12	                           jmp 0x40007ad	        69	opncls.c	FUNCTION_1	IF_2
0x400079b	    0x8b0500000000	            mov eax, dword [0x040007a1] 	        72	opncls.c	FUNCTION_1	ELSE_1
0x40007a1	          0x8d5001	                      lea edx, [rax + 1]	        72	opncls.c	FUNCTION_1	ELSE_1
0x40007a4	    0x891500000000	            mov dword [0x040007aa], edx 	        72	opncls.c	FUNCTION_1	ELSE_1
0x40007aa	          0x894340	             mov dword [rbx + 0x40], eax	        72	opncls.c	FUNCTION_1	ELSE_1
0x40007ad	      0xe800000000	                          call 0x40007b2	        74	opncls.c	FUNCTION_1	CALL_2
0x40007b2	    0x488983080100	            mov qword [rbx + 0x108], rax	        74	opncls.c	FUNCTION_1	CALL_2
0x40007b9	          0x4885c0	                           test rax, rax	        75	opncls.c	FUNCTION_1	IF_3
0x40007bc	            0x7519	                           jne 0x40007d7	        75	opncls.c	FUNCTION_1	IF_3
0x40007be	      0xbf06000000	                              mov edi, 6	        77	opncls.c	FUNCTION_1	IF_3	CALL_3
0x40007c3	      0xe800000000	                          call 0x40007c8	        77	opncls.c	FUNCTION_1	IF_3	CALL_3
0x40007c8	          0x4889df	                            mov rdi, rbx	        78	opncls.c	FUNCTION_1	IF_3	CALL_4
0x40007cb	      0xe800000000	                          call 0x40007d0	        78	opncls.c	FUNCTION_1	IF_3	CALL_4
0x40007d0	      0xba00000000	                              mov edx, 0	        79	opncls.c	FUNCTION_1	IF_3
0x40007d5	            0xeb3e	                           jmp 0x4000815	        79	opncls.c	FUNCTION_1	IF_3
0x40007d7	    0x48c783c00000	               mov qword [rbx + 0xc0], 0	        82	opncls.c	FUNCTION_1
0x40007e2	        0x488d7b68	                   lea rdi, [rbx + 0x68]	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x40007e6	      0xb90d000000	                            mov ecx, 0xd	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x40007eb	      0xba30010000	                          mov edx, 0x130	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x40007f0	      0xbe00000000	                              mov esi, 0	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x40007f5	      0xe800000000	                          call 0x40007fa	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x40007fa	          0x4889da	                            mov rdx, rbx	        91	opncls.c	FUNCTION_1
0x40007fd	            0x85c0	                           test eax, eax	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x40007ff	            0x7514	                           jne 0x4000815	        84	opncls.c	FUNCTION_1	IF_4	CALL_5
0x4000801	          0x4889df	                            mov rdi, rbx	        87	opncls.c	FUNCTION_1	IF_4	CALL_6
0x4000804	      0xe800000000	                          call 0x4000809	        87	opncls.c	FUNCTION_1	IF_4	CALL_6
0x4000809	      0xba00000000	                              mov edx, 0	        88	opncls.c	FUNCTION_1	IF_4
0x400080e	            0xeb05	                           jmp 0x4000815	        88	opncls.c	FUNCTION_1	IF_4
0x4000810	      0xba00000000	                              mov edx, 0	        64	opncls.c	FUNCTION_1	IF_1
0x4000815	          0x4889d0	                            mov rax, rdx	        92	opncls.c	FUNCTION_1
0x4000818	              0x5b	                                 pop rbx	        92	opncls.c	FUNCTION_1
0x4000819	              0xc3	                                     ret	        92	opncls.c	FUNCTION_1
