ctor_cmp	IF,6:DO,0:FOR,0:CALL,2:SWITCH,0:functions,0:ELSE,3:WHILE,0	40
0x40000bf	            0x4155	                                push r13	       153	ldctor.c	FUNCTION_3
0x40000c1	            0x4154	                                push r12	       153	ldctor.c	FUNCTION_3
0x40000c3	              0x55	                                push rbp	       153	ldctor.c	FUNCTION_3
0x40000c4	              0x53	                                push rbx	       153	ldctor.c	FUNCTION_3
0x40000c5	        0x4883ec08	                              sub rsp, 8	       153	ldctor.c	FUNCTION_3
0x40000c9	          0x4989fc	                            mov r12, rdi	       153	ldctor.c	FUNCTION_3
0x40000cc	          0x4889f5	                            mov rbp, rsi	       153	ldctor.c	FUNCTION_3
0x40000cf	          0x488b07	                    mov rax, qword [rdi]	       163	ldctor.c	FUNCTION_3
0x40000d2	        0x488b7808	                mov rdi, qword [rax + 8]	       163	ldctor.c	FUNCTION_3
0x40000d6	          0x4885ff	                           test rdi, rdi	       165	ldctor.c	FUNCTION_3	IF_1
0x40000d9	      0xb800000000	                              mov eax, 0	       165	ldctor.c	FUNCTION_3	IF_1
0x40000de	        0x480f44f8	                          cmove rdi, rax	       165	ldctor.c	FUNCTION_3	IF_1
0x40000e2	          0x488b06	                    mov rax, qword [rsi]	       166	ldctor.c	FUNCTION_3
0x40000e5	        0x488b5808	                mov rbx, qword [rax + 8]	       166	ldctor.c	FUNCTION_3
0x40000e9	          0x4885db	                           test rbx, rbx	       168	ldctor.c	FUNCTION_3	IF_2
0x40000ec	      0xb800000000	                              mov eax, 0	       168	ldctor.c	FUNCTION_3	IF_2
0x40000f1	        0x480f44d8	                          cmove rbx, rax	       168	ldctor.c	FUNCTION_3	IF_2
0x40000f5	      0xe846ffffff	                      call sym.ctor_prio	       174	ldctor.c	FUNCTION_3	CALL_1
0x40000fa	          0x4189c5	                           mov r13d, eax	       174	ldctor.c	FUNCTION_3	CALL_1
0x40000fd	          0x4889df	                            mov rdi, rbx	       175	ldctor.c	FUNCTION_3	CALL_2
0x4000100	      0xe83bffffff	                      call sym.ctor_prio	       175	ldctor.c	FUNCTION_3	CALL_2
0x4000105	      0xba01000000	                              mov edx, 1	       179	ldctor.c	FUNCTION_3	IF_3
0x400010a	          0x4139c5	                           cmp r13d, eax	       178	ldctor.c	FUNCTION_3	IF_3
0x400010d	            0x7c1a	                            jl 0x4000129	       178	ldctor.c	FUNCTION_3	IF_3
0x400010f	          0x4939ec	                            cmp r12, rbp	       185	ldctor.c	FUNCTION_3	IF_5
0x4000112	            0x7210	                            jb 0x4000124	       185	ldctor.c	FUNCTION_3	IF_5
0x4000114	          0x4139c5	                           cmp r13d, eax	       185	ldctor.c	FUNCTION_3	IF_5
0x4000117	            0x7f0b	                            jg 0x4000124	       185	ldctor.c	FUNCTION_3	IF_5
0x4000119	          0x4939ec	                            cmp r12, rbp	       179	ldctor.c	FUNCTION_3	IF_3
0x400011c	           0xf97c2	                                 seta dl	       179	ldctor.c	FUNCTION_3	IF_3
0x400011f	           0xfb6d2	                           movzx edx, dl	       179	ldctor.c	FUNCTION_3	IF_3
0x4000122	            0xeb05	                           jmp 0x4000129	       179	ldctor.c	FUNCTION_3	IF_3
0x4000124	      0xbaffffffff	                     mov edx, 0xffffffff	       186	ldctor.c	FUNCTION_3	IF_5
0x4000129	            0x89d0	                            mov eax, edx	       191	ldctor.c	FUNCTION_3	ELSE_3
0x400012b	        0x4883c408	                              add rsp, 8	       191	ldctor.c	FUNCTION_3	ELSE_3
0x400012f	              0x5b	                                 pop rbx	       191	ldctor.c	FUNCTION_3	ELSE_3
0x4000130	              0x5d	                                 pop rbp	       191	ldctor.c	FUNCTION_3	ELSE_3
0x4000131	            0x415c	                                 pop r12	       191	ldctor.c	FUNCTION_3	ELSE_3
0x4000133	            0x415d	                                 pop r13	       191	ldctor.c	FUNCTION_3	ELSE_3
0x4000135	              0xc3	                                     ret	       191	ldctor.c	FUNCTION_3	ELSE_3
ldctor_build_sets	IF,16:DO,0:FOR,6:CALL,50:SWITCH,1:functions,0:ELSE,4:WHILE,1	323
0x40002b3	    0x833d00000000	               cmp dword [0x040002ba], 0	       207	ldctor.c	ELSE_3	FUNCTION_4	IF_1
0x40002ba	     0xf8517050000	                           jne 0x40007d7	       207	ldctor.c	ELSE_3	FUNCTION_4	IF_1
0x40002c0	            0x4157	                                push r15	       200	ldctor.c	ELSE_3	FUNCTION_4
0x40002c2	            0x4156	                                push r14	       200	ldctor.c	ELSE_3	FUNCTION_4
0x40002c4	            0x4155	                                push r13	       200	ldctor.c	ELSE_3	FUNCTION_4
0x40002c6	            0x4154	                                push r12	       200	ldctor.c	ELSE_3	FUNCTION_4
0x40002c8	              0x55	                                push rbp	       200	ldctor.c	ELSE_3	FUNCTION_4
0x40002c9	              0x53	                                push rbx	       200	ldctor.c	ELSE_3	FUNCTION_4
0x40002ca	        0x4883ec08	                              sub rsp, 8	       200	ldctor.c	ELSE_3	FUNCTION_4
0x40002ce	    0xc70500000000	               mov dword [0x040002d8], 1	       209	ldctor.c	ELSE_3	FUNCTION_4
0x40002d8	    0x833d00000000	               cmp dword [0x040002df], 0	       211	ldctor.c	ELSE_3	FUNCTION_4	IF_2
0x40002df	     0xf84cf000000	                            je 0x40003b4	       211	ldctor.c	ELSE_3	FUNCTION_4	IF_2
0x40002e5	    0x488b2d000000	            mov rbp, qword [0x040002ec] 	       213	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1
0x40002ec	          0x4885ed	                           test rbp, rbp	       213	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1
0x40002ef	     0xf84bf000000	                            je 0x40003b4	       213	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1
0x40002f5	        0x488b4520	            mov rax, qword [rbp + 0x20] 	       219	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	IF_3
0x40002f9	          0x4885c0	                           test rax, rax	       219	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	IF_3
0x40002fc	     0xf84a5000000	                            je 0x40003a7	       219	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	IF_3
0x4000302	      0xbb00000000	                              mov ebx, 0	       219	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	IF_3
0x4000307	            0xeb03	                           jmp 0x400030c	       219	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	IF_3
0x4000309	          0x4489eb	                           mov ebx, r13d	       224	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_2
0x400030c	        0x448d6b01	                     lea r13d, [rbx + 1]	       224	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_2
0x4000310	          0x488b00	                    mov rax, qword [rax]	       223	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_2
0x4000313	          0x4885c0	                           test rax, rax	       223	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_2
0x4000316	            0x75f1	                           jne 0x4000309	       223	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_2
0x4000318	          0x4d63ed	                        movsxd r13, r13d	       226	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	CALL_1
0x400031b	    0x4a8d3ced0000	                        lea rdi, [r13*8]	       226	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	CALL_1
0x4000323	      0xe800000000	                          call 0x4000328	       226	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	CALL_1
0x4000328	          0x4989c4	                            mov r12, rax	       226	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	CALL_1
0x400032b	        0x488b4520	            mov rax, qword [rbp + 0x20] 	       229	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_3
0x400032f	          0x4885c0	                           test rax, rax	       229	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_3
0x4000332	            0x7417	                            je 0x400034b	       229	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_3
0x4000334	      0xba00000000	                              mov edx, 0	       229	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_3
0x4000339	          0x4863ca	                         movsxd rcx, edx	       231	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_3
0x400033c	        0x498904cc	            mov qword [r12 + rcx*8], rax	       231	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_3
0x4000340	          0x83c201	                              add edx, 1	       232	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_3
0x4000343	          0x488b00	                    mov rax, qword [rax]	       229	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_3
0x4000346	          0x4885c0	                           test rax, rax	       229	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_3
0x4000349	            0x75ee	                           jne 0x4000339	       229	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_3
0x400034b	      0xb900000000	                              mov ecx, 0	       235	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	CALL_2
0x4000350	      0xba08000000	                              mov edx, 8	       235	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	CALL_2
0x4000355	          0x4c89ee	                            mov rsi, r13	       235	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	CALL_2
0x4000358	          0x4c89e7	                            mov rdi, r12	       235	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	CALL_2
0x400035b	      0xe800000000	                          call 0x4000360	       235	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	CALL_2
0x4000360	        0x498b0424	                    mov rax, qword [r12]	       237	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1
0x4000364	        0x48894520	            mov qword [rbp + 0x20], rax 	       238	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1
0x4000368	            0x85db	                           test ebx, ebx	       239	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_4
0x400036a	            0x7e20	                           jle 0x400038c	       239	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_4
0x400036c	          0x4c89e0	                            mov rax, r12	       239	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_4
0x400036f	          0x8d53ff	                      lea edx, [rbx - 1]	       239	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_4
0x4000372	      0x498d74d408	              lea rsi, [r12 + rdx*8 + 8]	       239	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_4
0x4000377	          0x488b10	                    mov rdx, qword [rax]	       240	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_4
0x400037a	        0x488b4808	                mov rcx, qword [rax + 8]	       240	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_4
0x400037e	          0x48890a	                    mov qword [rdx], rcx	       240	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_4
0x4000381	        0x4883c008	                              add rax, 8	       240	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_4
0x4000385	          0x4839f0	                            cmp rax, rsi	       239	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_4
0x4000388	            0x75ed	                           jne 0x4000377	       239	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_4
0x400038a	            0xeb05	                           jmp 0x4000391	       239	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_4
0x400038c	      0xbb00000000	                              mov ebx, 0	       239	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	FOR_4
0x4000391	          0x4863db	                         movsxd rbx, ebx	       241	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1
0x4000394	        0x498b04dc	            mov rax, qword [r12 + rbx*8]	       241	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1
0x4000398	    0x48c700000000	                      mov qword [rax], 0	       241	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1
0x400039f	          0x4c89e7	                            mov rdi, r12	       243	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	CALL_3
0x40003a2	      0xe800000000	                          call 0x40003a7	       243	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1	CALL_3
0x40003a7	        0x488b6d00	                    mov rbp, qword [rbp]	       213	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1
0x40003ab	          0x4885ed	                           test rbp, rbp	       213	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1
0x40003ae	     0xf8541ffffff	                           jne 0x40002f5	       213	ldctor.c	ELSE_3	FUNCTION_4	IF_2	FOR_1
0x40003b4	      0xbf00000000	                              mov edi, 0	       247	ldctor.c	ELSE_3	FUNCTION_4	CALL_4
0x40003b9	      0xe800000000	                          call 0x40003be	       247	ldctor.c	ELSE_3	FUNCTION_4	CALL_4
0x40003be	      0xbf00000000	                              mov edi, 0	       248	ldctor.c	ELSE_3	FUNCTION_4	CALL_5
0x40003c3	      0xe800000000	                          call 0x40003c8	       248	ldctor.c	ELSE_3	FUNCTION_4	CALL_5
0x40003c8	    0x4c8b25000000	            mov r12, qword [0x040003cf] 	       251	ldctor.c	ELSE_3	FUNCTION_4	FOR_5
0x40003cf	          0x4d85e4	                           test r12, r12	       251	ldctor.c	ELSE_3	FUNCTION_4	FOR_5
0x40003d2	     0xf84ec030000	                            je 0x40007c4	       251	ldctor.c	ELSE_3	FUNCTION_4	FOR_5
0x40003d8	    0x41bd00000000	                             mov r13d, 0	       251	ldctor.c	ELSE_3	FUNCTION_4	FOR_5
0x40003de	      0x498b442408	                mov rax, qword [r12 + 8]	       260	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_4
0x40003e3	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       260	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_4
0x40003e7	          0x83e803	                              sub eax, 3	       260	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_4
0x40003ea	            0x3c01	                               cmp al, 1	       260	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_4
0x40003ec	     0xf86c5030000	                           jbe 0x40007b7	       260	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_4
0x40003f2	      0x418b742410	            mov esi, dword [r12 + 0x10] 	       274	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_6
0x40003f7	    0x488b3d000000	            mov rdi, qword [0x040003fe] 	       274	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_6
0x40003fe	      0xe800000000	                          call 0x4000403	       274	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_6
0x4000403	          0x4989c7	                            mov r15, rax	       274	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_6
0x4000406	          0x4885c0	                           test rax, rax	       275	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5
0x4000409	     0xf854c010000	                           jne 0x400055b	       275	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5
0x400040f	     0xfb605000000	           movzx eax, byte [0x04000416] 	       277	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_7
0x4000416	          0x83e003	                              and eax, 3	       277	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_7
0x4000419	            0x3c02	                               cmp al, 2	       277	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_7
0x400041b	            0x7553	                           jne 0x4000470	       277	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_7
0x400041d	      0x498b442408	                mov rax, qword [r12 + 8]	       279	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_9
0x4000422	        0x4c8b7008	                mov r14, qword [rax + 8]	       279	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_9
0x4000426	      0x418b7c2410	            mov edi, dword [r12 + 0x10] 	       279	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_9
0x400042b	      0xe800000000	                          call 0x4000430	       279	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_9
0x4000430	          0x4889c5	                            mov rbp, rax	       279	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_9
0x4000433	    0x488b05000000	            mov rax, qword [0x0400043a] 	       280	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_10
0x400043a	        0x488b4008	                mov rax, qword [rax + 8]	       279	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_9
0x400043e	          0x488b18	                    mov rbx, qword [rax]	       279	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_9
0x4000441	      0xba05000000	                              mov edx, 5	       279	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_9
0x4000446	      0xbe00000000	                              mov esi, 0	       279	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_9
0x400044b	      0xbf00000000	                              mov edi, 0	       279	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_9
0x4000450	      0xe800000000	                          call 0x4000455	       279	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_9
0x4000455	          0x4c89f1	                            mov rcx, r14	       279	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_9
0x4000458	          0x4889ea	                            mov rdx, rbp	       279	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_9
0x400045b	          0x4889de	                            mov rsi, rbx	       279	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_9
0x400045e	          0x4889c7	                            mov rdi, rax	       279	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_9
0x4000461	      0xb800000000	                              mov eax, 0	       279	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_9
0x4000466	      0xe800000000	                          call 0x400046b	       279	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6	CALL_9
0x400046b	      0xe947030000	                           jmp 0x40007b7	       283	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_6
0x4000470	      0x498b442420	            mov rax, qword [r12 + 0x20] 	       288	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_7
0x4000475	        0x488b4010	            mov rax, qword [rax + 0x10] 	       288	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_7
0x4000479	    0x488bb8f00000	            mov rdi, qword [rax + 0xf0] 	       288	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_7
0x4000480	          0x4885ff	                           test rdi, rdi	       288	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_7
0x4000483	            0x7429	                            je 0x40004ae	       288	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_7
0x4000485	      0x418b742410	            mov esi, dword [r12 + 0x10] 	       289	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_7	CALL_12
0x400048a	      0xe800000000	                          call 0x400048f	       289	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_7	CALL_12
0x400048f	          0x4989c7	                            mov r15, rax	       289	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_7	CALL_12
0x4000492	          0x4885c0	                           test rax, rax	       291	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8
0x4000495	     0xf85c0000000	                           jne 0x400055b	       291	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8
0x400049b	      0x498b442420	            mov rax, qword [r12 + 0x20] 	       294	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9
0x40004a0	        0x488b4010	            mov rax, qword [rax + 0x10] 	       294	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9
0x40004a4	    0x4883b8f00000	               cmp qword [rax + 0xf0], 0	       294	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9
0x40004ac	            0x7551	                           jne 0x40004ff	       294	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9
0x40004ae	      0x498b442408	                mov rax, qword [r12 + 8]	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x40004b3	        0x4c8b7008	                mov r14, qword [rax + 8]	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x40004b7	      0x418b7c2410	            mov edi, dword [r12 + 0x10] 	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x40004bc	      0xe800000000	                          call 0x40004c1	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x40004c1	          0x4889c5	                            mov rbp, rax	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x40004c4	      0x498b442420	            mov rax, qword [r12 + 0x20] 	       296	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_15
0x40004c9	        0x488b4010	            mov rax, qword [rax + 0x10] 	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x40004cd	          0x488b18	                    mov rbx, qword [rax]	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x40004d0	      0xba05000000	                              mov edx, 5	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x40004d5	      0xbe00000000	                              mov esi, 0	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x40004da	      0xbf00000000	                              mov edi, 0	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x40004df	      0xe800000000	                          call 0x40004e4	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x40004e4	          0x4c89f1	                            mov rcx, r14	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x40004e7	          0x4889ea	                            mov rdx, rbp	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x40004ea	          0x4889de	                            mov rsi, rbx	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x40004ed	          0x4889c7	                            mov rdi, rax	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x40004f0	      0xb800000000	                              mov eax, 0	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x40004f5	      0xe800000000	                          call 0x40004fa	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x40004fa	      0xe9b8020000	                           jmp 0x40007b7	       295	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	IF_9	CALL_14
0x40004ff	      0x498b442408	                mov rax, qword [r12 + 8]	       300	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1	CALL_18
0x4000504	        0x4c8b7008	                mov r14, qword [rax + 8]	       300	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1	CALL_18
0x4000508	      0x418b7c2410	            mov edi, dword [r12 + 0x10] 	       300	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1	CALL_18
0x400050d	      0xe800000000	                          call 0x4000512	       300	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1	CALL_18
0x4000512	          0x4889c5	                            mov rbp, rax	       300	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1	CALL_18
0x4000515	      0x498b442420	            mov rax, qword [r12 + 0x20] 	       301	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1	CALL_19
0x400051a	        0x488b4010	            mov rax, qword [rax + 0x10] 	       301	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1	CALL_19
0x400051e	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	       301	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1	CALL_19
0x4000525	        0x488b4008	                mov rax, qword [rax + 8]	       300	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1	CALL_18
0x4000529	          0x488b18	                    mov rbx, qword [rax]	       300	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1	CALL_18
0x400052c	      0xba05000000	                              mov edx, 5	       300	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1	CALL_18
0x4000531	      0xbe00000000	                              mov esi, 0	       300	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1	CALL_18
0x4000536	      0xbf00000000	                              mov edi, 0	       300	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1	CALL_18
0x400053b	      0xe800000000	                          call 0x4000540	       300	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1	CALL_18
0x4000540	          0x4c89f1	                            mov rcx, r14	       300	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1	CALL_18
0x4000543	          0x4889ea	                            mov rdx, rbp	       300	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1	CALL_18
0x4000546	          0x4889de	                            mov rsi, rbx	       300	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1	CALL_18
0x4000549	          0x4889c7	                            mov rdi, rax	       300	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1	CALL_18
0x400054c	      0xb800000000	                              mov eax, 0	       300	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1	CALL_18
0x4000551	      0xe800000000	                          call 0x4000556	       300	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1	CALL_18
0x4000556	      0xe95c020000	                           jmp 0x40007b7	       300	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	IF_5	IF_8	ELSE_1	CALL_18
0x400055b	          0x4c89ff	                            mov rdi, r15	       308	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_21
0x400055e	      0xe800000000	                          call 0x4000563	       308	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_21
0x4000563	            0x89c3	                            mov ebx, eax	       308	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_21
0x4000565	          0x83f802	                              cmp eax, 2	       309	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x4000568	            0x7424	                            je 0x400058e	       309	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x400056a	          0x83f802	                              cmp eax, 2	       309	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x400056d	            0x770d	                            ja 0x400057c	       309	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x400056f	    0x41be1e010000	                         mov r14d, 0x11e	       311	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x4000575	          0x83f801	                              cmp eax, 1	       309	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x4000578	            0x7473	                            je 0x40005ed	       309	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x400057a	            0xeb30	                           jmp 0x40005ac	       309	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x400057c	    0x41be1c010000	                         mov r14d, 0x11c	       313	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x4000582	          0x83f804	                              cmp eax, 4	       309	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x4000585	            0x7466	                            je 0x40005ed	       309	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x4000587	          0x83f808	                              cmp eax, 8	       309	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x400058a	            0x740a	                            je 0x4000596	       309	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x400058c	            0xeb1e	                           jmp 0x40005ac	       309	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x400058e	    0x41be1d010000	                         mov r14d, 0x11d	       312	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x4000594	            0xeb57	                           jmp 0x40005ed	       312	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x4000596	      0x41837f1802	               cmp dword [r15 + 0x18], 2	       318	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	ELSE_2
0x400059b	        0x410f94c6	                               sete r14b	       318	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	ELSE_2
0x400059f	        0x450fb6f6	                        movzx r14d, r14b	       318	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	ELSE_2
0x40005a3	    0x4181c61a0100	                         add r14d, 0x11a	       318	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	ELSE_2
0x40005aa	            0xeb41	                           jmp 0x40005ed	       318	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	ELSE_2
0x40005ac	      0x498b442408	                mov rax, qword [r12 + 8]	       321	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	CALL_23
0x40005b1	        0x488b6808	                mov rbp, qword [rax + 8]	       321	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	CALL_23
0x40005b5	          0x4c89ff	                            mov rdi, r15	       321	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	CALL_23
0x40005b8	      0xe800000000	                          call 0x40005bd	       321	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	CALL_23
0x40005bd	          0x4189c6	                           mov r14d, eax	       321	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	CALL_23
0x40005c0	      0xba05000000	                              mov edx, 5	       321	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	CALL_23
0x40005c5	      0xbe00000000	                              mov esi, 0	       321	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	CALL_23
0x40005ca	      0xbf00000000	                              mov edi, 0	       321	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	CALL_23
0x40005cf	      0xe800000000	                          call 0x40005d4	       321	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	CALL_23
0x40005d4	          0x4889ea	                            mov rdx, rbp	       321	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	CALL_23
0x40005d7	          0x4489f6	                           mov esi, r14d	       321	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	CALL_23
0x40005da	          0x4889c7	                            mov rdi, rax	       321	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	CALL_23
0x40005dd	      0xb800000000	                              mov eax, 0	       321	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	CALL_23
0x40005e2	      0xe800000000	                          call 0x40005e7	       321	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1	CALL_23
0x40005e7	    0x41be1c010000	                         mov r14d, 0x11c	       323	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	SWITCH_1
0x40005ed	          0x4863fb	                         movsxd rdi, ebx	       327	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_26
0x40005f0	      0xe800000000	                          call 0x40005f5	       327	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_26
0x40005f5	          0x4889c6	                            mov rsi, rax	       327	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_26
0x40005f8	      0xbf17010000	                          mov edi, 0x117	       327	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_26
0x40005fd	      0xe800000000	                          call 0x4000602	       327	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_26
0x4000602	      0xba00000000	                              mov edx, 0	       327	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_26
0x4000607	          0x4889c6	                            mov rsi, rax	       327	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_26
0x400060a	      0xbf00000000	                              mov edi, 0	       327	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_26
0x400060f	      0xe800000000	                          call 0x4000614	       327	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_26
0x4000614	          0x4889c7	                            mov rdi, rax	       327	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_26
0x4000617	      0xe800000000	                          call 0x400061c	       327	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_26
0x400061c	      0xbe00000000	                              mov esi, 0	       331	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_30
0x4000621	      0xbf03010000	                          mov edi, 0x103	       331	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_30
0x4000626	      0xe800000000	                          call 0x400062b	       331	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_30
0x400062b	      0x498b542408	                mov rdx, qword [r12 + 8]	       331	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_30
0x4000630	        0x488b7a08	                mov rdi, qword [rdx + 8]	       331	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_30
0x4000634	      0xba00000000	                              mov edx, 0	       331	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_30
0x4000639	          0x4889c6	                            mov rsi, rax	       331	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_30
0x400063c	      0xe800000000	                          call 0x4000641	       331	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_30
0x4000641	          0x4889c7	                            mov rdi, rax	       331	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_30
0x4000644	      0xe800000000	                          call 0x4000649	       331	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_30
0x4000649	      0x498b7c2418	            mov rdi, qword [r12 + 0x18] 	       334	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_33
0x400064e	      0xe800000000	                          call 0x4000653	       334	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_33
0x4000653	          0x4889c6	                            mov rsi, rax	       334	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_33
0x4000656	          0x4489f7	                           mov edi, r14d	       334	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_33
0x4000659	      0xe800000000	                          call 0x400065e	       334	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	CALL_33
0x400065e	      0x498b6c2420	            mov rbp, qword [r12 + 0x20] 	       336	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6
0x4000663	          0x4885ed	                           test rbp, rbp	       336	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6
0x4000666	     0xf8436010000	                            je 0x40007a2	       336	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6
0x400066c	    0x48833d000000	               cmp qword [0x04000674], 0	       338	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11
0x4000674	     0xf84bf000000	                            je 0x4000739	       338	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11
0x400067a	          0x4585ed	                         test r13d, r13d	       342	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_12
0x400067d	            0x7527	                           jne 0x40006a6	       342	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_12
0x400067f	      0xba05000000	                              mov edx, 5	       344	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_12	CALL_35
0x4000684	      0xbe00000000	                              mov esi, 0	       344	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_12	CALL_35
0x4000689	      0xbf00000000	                              mov edi, 0	       344	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_12	CALL_35
0x400068e	      0xe800000000	                          call 0x4000693	       344	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_12	CALL_35
0x4000693	          0x4889c7	                            mov rdi, rax	       344	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_12	CALL_35
0x4000696	      0xb800000000	                              mov eax, 0	       344	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_12	CALL_35
0x400069b	      0xe800000000	                          call 0x40006a0	       344	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_12	CALL_35
0x40006a0	    0x41bd01000000	                             mov r13d, 1	       345	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_12
0x40006a6	      0x498b442408	                mov rax, qword [r12 + 8]	       348	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	CALL_36
0x40006ab	        0x488b7008	                mov rsi, qword [rax + 8]	       348	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	CALL_36
0x40006af	      0xbf00000000	                              mov edi, 0	       348	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	CALL_36
0x40006b4	      0xb800000000	                              mov eax, 0	       348	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	CALL_36
0x40006b9	      0xe800000000	                          call 0x40006be	       348	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	CALL_36
0x40006be	      0x498b442408	                mov rax, qword [r12 + 8]	       349	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	CALL_37
0x40006c3	        0x488b7808	                mov rdi, qword [rax + 8]	       349	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	CALL_37
0x40006c7	      0xb800000000	                              mov eax, 0	       349	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	CALL_37
0x40006cc	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       349	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	CALL_37
0x40006d3	            0xf2ae	              repne scasb al, byte [rdi]	       349	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	CALL_37
0x40006d5	          0x48f7d1	                                 not rcx	       349	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	CALL_37
0x40006d8	        0x4883e901	                              sub rcx, 1	       349	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	CALL_37
0x40006dc	            0x89cb	                            mov ebx, ecx	       349	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	CALL_37
0x40006de	          0x83f912	                           cmp ecx, 0x12	       351	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_13
0x40006e1	            0x7e0c	                           jle 0x40006ef	       351	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_13
0x40006e3	      0xe800000000	                          call 0x40006e8	       353	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_13	CALL_38
0x40006e8	      0xbb00000000	                              mov ebx, 0	       354	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_13
0x40006ed	            0xeb05	                           jmp 0x40006f4	       354	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_13
0x40006ef	          0x83f913	                           cmp ecx, 0x13	       356	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	WHILE_1
0x40006f2	            0x7f0d	                            jg 0x4000701	       356	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	WHILE_1
0x40006f4	      0xe800000000	                          call 0x40006f9	       358	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	WHILE_1	CALL_39
0x40006f9	          0x83c301	                              add ebx, 1	       359	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	WHILE_1
0x40006fc	          0x83fb13	                           cmp ebx, 0x13	       356	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	WHILE_1
0x40006ff	            0x7ef3	                           jle 0x40006f4	       356	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	WHILE_1
0x4000701	        0x488b7508	                mov rsi, qword [rbp + 8]	       362	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_14
0x4000705	          0x4885f6	                           test rsi, rsi	       362	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_14
0x4000708	            0x7411	                            je 0x400071b	       362	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	IF_14
0x400070a	      0xbf00000000	                              mov edi, 0	       363	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	CALL_40
0x400070f	      0xb800000000	                              mov eax, 0	       363	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	CALL_40
0x4000714	      0xe800000000	                          call 0x4000719	       363	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	CALL_40
0x4000719	            0xeb1e	                           jmp 0x4000739	       363	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6	IF_11	CALL_40
0x400071b	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	       365	ldctor.c	FUNCTION_4	FOR_5	FOR_6	IF_11	ELSE_3	CALL_41
0x400071f	        0x488b4d18	            mov rcx, qword [rbp + 0x18] 	       365	ldctor.c	FUNCTION_4	FOR_5	FOR_6	IF_11	ELSE_3	CALL_41
0x4000723	    0x488bb2f00000	            mov rsi, qword [rdx + 0xf0] 	       365	ldctor.c	FUNCTION_4	FOR_5	FOR_6	IF_11	ELSE_3	CALL_41
0x400072a	      0xbf00000000	                              mov edi, 0	       365	ldctor.c	FUNCTION_4	FOR_5	FOR_6	IF_11	ELSE_3	CALL_41
0x400072f	      0xb800000000	                              mov eax, 0	       365	ldctor.c	FUNCTION_4	FOR_5	FOR_6	IF_11	ELSE_3	CALL_41
0x4000734	      0xe800000000	                          call 0x4000739	       365	ldctor.c	FUNCTION_4	FOR_5	FOR_6	IF_11	ELSE_3	CALL_41
0x4000739	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       369	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_15	CALL_42
0x400073d	    0x483d00000000	                              cmp rax, 0	       369	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_15	CALL_42
0x4000743	            0x7407	                            je 0x400074c	       369	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_15	CALL_42
0x4000745	    0x814820000020	         or dword [rax + 0x20], 0x200000	       370	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_15
0x400074c	     0xfb605000000	           movzx eax, byte [0x04000753] 	       372	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_16	CALL_43
0x4000753	          0x83e003	                              and eax, 3	       372	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_16	CALL_43
0x4000756	            0x3c02	                               cmp al, 2	       372	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_16	CALL_43
0x4000758	            0x7523	                           jne 0x400077d	       372	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_16	CALL_43
0x400075a	        0x488b7d18	            mov rdi, qword [rbp + 0x18] 	       374	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	CALL_45
0x400075e	      0xe800000000	                          call 0x4000763	       374	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	CALL_45
0x4000763	          0x4989c0	                             mov r8, rax	       374	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	CALL_45
0x4000766	        0x488b4d08	                mov rcx, qword [rbp + 8]	       373	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_16	CALL_44
0x400076a	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	       373	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_16	CALL_44
0x400076e	      0x418b7c2410	            mov edi, dword [r12 + 0x10] 	       373	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_16	CALL_44
0x4000773	          0x4c89fe	                            mov rsi, r15	       373	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_16	CALL_44
0x4000776	      0xe800000000	                          call 0x400077b	       373	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_16	CALL_44
0x400077b	            0xeb18	                           jmp 0x4000795	       373	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	IF_16	CALL_44
0x400077d	        0x488b7518	            mov rsi, qword [rbp + 0x18] 	       376	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	CALL_47
0x4000781	        0x488b7d10	            mov rdi, qword [rbp + 0x10] 	       376	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	CALL_47
0x4000785	      0xe800000000	                          call 0x400078a	       376	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	CALL_47
0x400078a	          0x4889c6	                            mov rsi, rax	       376	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	CALL_47
0x400078d	          0x4489f7	                           mov edi, r14d	       376	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	CALL_47
0x4000790	      0xe800000000	                          call 0x4000795	       376	ldctor.c	FUNCTION_4	FOR_5	FOR_6	ELSE_3	CALL_47
0x4000795	        0x488b6d00	                    mov rbp, qword [rbp]	       336	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6
0x4000799	          0x4885ed	                           test rbp, rbp	       336	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6
0x400079c	     0xf85cafeffff	                           jne 0x400066c	       336	ldctor.c	ELSE_3	FUNCTION_4	FOR_5	FOR_6
0x40007a2	      0xbf00000000	                              mov edi, 0	       379	ldctor.c	FUNCTION_4	FOR_5	ELSE_3	CALL_49
0x40007a7	      0xe800000000	                          call 0x40007ac	       379	ldctor.c	FUNCTION_4	FOR_5	ELSE_3	CALL_49
0x40007ac	          0x4889c6	                            mov rsi, rax	       379	ldctor.c	FUNCTION_4	FOR_5	ELSE_3	CALL_49
0x40007af	          0x4489f7	                           mov edi, r14d	       379	ldctor.c	FUNCTION_4	FOR_5	ELSE_3	CALL_49
0x40007b2	      0xe800000000	                          call 0x40007b7	       379	ldctor.c	FUNCTION_4	FOR_5	ELSE_3	CALL_49
0x40007b7	        0x4d8b2424	                    mov r12, qword [r12]	       251	ldctor.c	ELSE_3	FUNCTION_4	FOR_5
0x40007bb	          0x4d85e4	                           test r12, r12	       251	ldctor.c	ELSE_3	FUNCTION_4	FOR_5
0x40007be	     0xf851afcffff	                           jne 0x40003de	       251	ldctor.c	ELSE_3	FUNCTION_4	FOR_5
0x40007c4	      0xe800000000	                          call 0x40007c9	       382	ldctor.c	FUNCTION_4	ELSE_3	CALL_50
0x40007c9	        0x4883c408	                              add rsp, 8	       383	ldctor.c	FUNCTION_4	ELSE_3
0x40007cd	              0x5b	                                 pop rbx	       383	ldctor.c	FUNCTION_4	ELSE_3
0x40007ce	              0x5d	                                 pop rbp	       383	ldctor.c	FUNCTION_4	ELSE_3
0x40007cf	            0x415c	                                 pop r12	       383	ldctor.c	FUNCTION_4	ELSE_3
0x40007d1	            0x415d	                                 pop r13	       383	ldctor.c	FUNCTION_4	ELSE_3
0x40007d3	            0x415e	                                 pop r14	       383	ldctor.c	FUNCTION_4	ELSE_3
0x40007d5	            0x415f	                                 pop r15	       383	ldctor.c	FUNCTION_4	ELSE_3
0x40007d7	            0xf3c3	                                     ret	       383	ldctor.c	FUNCTION_4	ELSE_3
ldctor_add_set_entry	IF,4:DO,0:FOR,2:CALL,9:SWITCH,0:functions,0:ELSE,1:WHILE,0	101
0x4000136	            0x4157	                                push r15	        60	ldctor.c	FUNCTION_1
0x4000138	            0x4156	                                push r14	        60	ldctor.c	FUNCTION_1
0x400013a	            0x4155	                                push r13	        60	ldctor.c	FUNCTION_1
0x400013c	            0x4154	                                push r12	        60	ldctor.c	FUNCTION_1
0x400013e	              0x55	                                push rbp	        60	ldctor.c	FUNCTION_1
0x400013f	              0x53	                                push rbx	        60	ldctor.c	FUNCTION_1
0x4000140	        0x4883ec08	                              sub rsp, 8	        60	ldctor.c	FUNCTION_1
0x4000144	          0x4889fd	                            mov rbp, rdi	        60	ldctor.c	FUNCTION_1
0x4000147	          0x4189f7	                           mov r15d, esi	        60	ldctor.c	FUNCTION_1
0x400014a	          0x4989d5	                            mov r13, rdx	        60	ldctor.c	FUNCTION_1
0x400014d	          0x4989cc	                            mov r12, rcx	        60	ldctor.c	FUNCTION_1
0x4000150	          0x4d89c6	                             mov r14, r8	        60	ldctor.c	FUNCTION_1
0x4000153	    0x488b1d000000	            mov rbx, qword [0x0400015a] 	        65	ldctor.c	FUNCTION_1	FOR_1
0x400015a	          0x4885db	                           test rbx, rbx	        65	ldctor.c	FUNCTION_1	FOR_1
0x400015d	     0xf84fa000000	                            je 0x400025d	        65	ldctor.c	FUNCTION_1	FOR_1
0x4000163	        0x483b7b08	                cmp rdi, qword [rbx + 8]	        66	ldctor.c	FUNCTION_1	FOR_1	IF_1
0x4000167	            0x750f	                           jne 0x4000178	        66	ldctor.c	FUNCTION_1	FOR_1	IF_1
0x4000169	      0xe927010000	                           jmp 0x4000295	        66	ldctor.c	FUNCTION_1	FOR_1	IF_1
0x400016e	        0x48396b08	                cmp qword [rbx + 8], rbp	        66	ldctor.c	FUNCTION_1	FOR_1	IF_1
0x4000172	     0xf841d010000	                            je 0x4000295	        66	ldctor.c	FUNCTION_1	FOR_1	IF_1
0x4000178	          0x488b1b	                    mov rbx, qword [rbx]	        65	ldctor.c	FUNCTION_1	FOR_1
0x400017b	          0x4885db	                           test rbx, rbx	        65	ldctor.c	FUNCTION_1	FOR_1
0x400017e	            0x75ee	                           jne 0x400016e	        65	ldctor.c	FUNCTION_1	FOR_1
0x4000180	      0xe9d8000000	                           jmp 0x400025d	        65	ldctor.c	FUNCTION_1	FOR_1
0x4000185	        0x488b5d08	                mov rbx, qword [rbp + 8]	        83	ldctor.c	FUNCTION_1	ELSE_1	IF_3	CALL_3
0x4000189	      0xba05000000	                              mov edx, 5	        83	ldctor.c	FUNCTION_1	ELSE_1	IF_3	CALL_3
0x400018e	      0xbe00000000	                              mov esi, 0	        83	ldctor.c	FUNCTION_1	ELSE_1	IF_3	CALL_3
0x4000193	      0xbf00000000	                              mov edi, 0	        83	ldctor.c	FUNCTION_1	ELSE_1	IF_3	CALL_3
0x4000198	      0xe800000000	                          call 0x400019d	        83	ldctor.c	FUNCTION_1	ELSE_1	IF_3	CALL_3
0x400019d	          0x4889de	                            mov rsi, rbx	        83	ldctor.c	FUNCTION_1	ELSE_1	IF_3	CALL_3
0x40001a0	          0x4889c7	                            mov rdi, rax	        83	ldctor.c	FUNCTION_1	ELSE_1	IF_3	CALL_3
0x40001a3	      0xb800000000	                              mov eax, 0	        83	ldctor.c	FUNCTION_1	ELSE_1	IF_3	CALL_3
0x40001a8	      0xe800000000	                          call 0x40001ad	        83	ldctor.c	FUNCTION_1	ELSE_1	IF_3	CALL_3
0x40001ad	      0xe9f2000000	                           jmp 0x40002a4	        85	ldctor.c	FUNCTION_1	ELSE_1	IF_3
0x40001b2	        0x488b4320	            mov rax, qword [rbx + 0x20] 	        95	ldctor.c	FUNCTION_1	ELSE_1	IF_4
0x40001b6	          0x4885c0	                           test rax, rax	        95	ldctor.c	FUNCTION_1	ELSE_1	IF_4
0x40001b9	            0x7461	                            je 0x400021c	        95	ldctor.c	FUNCTION_1	ELSE_1	IF_4
0x40001bb	    0x498b9424f000	            mov rdx, qword [r12 + 0xf0] 	        96	ldctor.c	FUNCTION_1	ELSE_1	IF_4
0x40001c3	          0x4885d2	                           test rdx, rdx	        96	ldctor.c	FUNCTION_1	ELSE_1	IF_4
0x40001c6	            0x7454	                            je 0x400021c	        96	ldctor.c	FUNCTION_1	ELSE_1	IF_4
0x40001c8	        0x488b4010	            mov rax, qword [rax + 0x10] 	        97	ldctor.c	FUNCTION_1	ELSE_1	IF_4
0x40001cc	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	        97	ldctor.c	FUNCTION_1	ELSE_1	IF_4
0x40001d3	          0x4885c0	                           test rax, rax	        97	ldctor.c	FUNCTION_1	ELSE_1	IF_4
0x40001d6	            0x7444	                            je 0x400021c	        97	ldctor.c	FUNCTION_1	ELSE_1	IF_4
0x40001d8	        0x488b4808	                mov rcx, qword [rax + 8]	        98	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_5
0x40001dc	        0x488b4208	                mov rax, qword [rdx + 8]	        98	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_5
0x40001e0	          0x488b31	                    mov rsi, qword [rcx]	        98	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_5
0x40001e3	          0x488b38	                    mov rdi, qword [rax]	        98	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_5
0x40001e6	      0xe800000000	                          call 0x40001eb	        98	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_5
0x40001eb	            0x85c0	                           test eax, eax	        98	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_5
0x40001ed	            0x742d	                            je 0x400021c	        98	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_5
0x40001ef	        0x488b5d08	                mov rbx, qword [rbp + 8]	       101	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_8
0x40001f3	      0xba05000000	                              mov edx, 5	       101	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_8
0x40001f8	      0xbe00000000	                              mov esi, 0	       101	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_8
0x40001fd	      0xbf00000000	                              mov edi, 0	       101	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_8
0x4000202	      0xe800000000	                          call 0x4000207	       101	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_8
0x4000207	          0x4889de	                            mov rsi, rbx	       101	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_8
0x400020a	          0x4889c7	                            mov rdi, rax	       101	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_8
0x400020d	      0xb800000000	                              mov eax, 0	       101	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_8
0x4000212	      0xe800000000	                          call 0x4000217	       101	ldctor.c	FUNCTION_1	ELSE_1	IF_4	CALL_8
0x4000217	      0xe988000000	                           jmp 0x40002a4	       103	ldctor.c	FUNCTION_1	ELSE_1	IF_4
0x400021c	      0xbf20000000	                           mov edi, 0x20	       107	ldctor.c	FUNCTION_1	CALL_9
0x4000221	      0xe800000000	                          call 0x4000226	       107	ldctor.c	FUNCTION_1	CALL_9
0x4000226	    0x48c700000000	                      mov qword [rax], 0	       108	ldctor.c	FUNCTION_1
0x400022d	        0x4c896808	                mov qword [rax + 8], r13	       109	ldctor.c	FUNCTION_1
0x4000231	        0x4c896010	             mov qword [rax + 0x10], r12	       110	ldctor.c	FUNCTION_1
0x4000235	        0x4c897018	             mov qword [rax + 0x18], r14	       111	ldctor.c	FUNCTION_1
0x4000239	        0x488b4b20	            mov rcx, qword [rbx + 0x20] 	       113	ldctor.c	FUNCTION_1	FOR_2
0x400023d	          0x4885c9	                           test rcx, rcx	       113	ldctor.c	FUNCTION_1	FOR_2
0x4000240	            0x7509	                           jne 0x400024b	       113	ldctor.c	FUNCTION_1	FOR_2
0x4000242	        0x488d4b20	                   lea rcx, [rbx + 0x20]	       113	ldctor.c	FUNCTION_1	FOR_2
0x4000246	            0xeb0b	                           jmp 0x4000253	       113	ldctor.c	FUNCTION_1	FOR_2
0x4000248	          0x4889d1	                            mov rcx, rdx	       113	ldctor.c	FUNCTION_1	FOR_2
0x400024b	          0x488b11	                    mov rdx, qword [rcx]	       113	ldctor.c	FUNCTION_1	FOR_2
0x400024e	          0x4885d2	                           test rdx, rdx	       113	ldctor.c	FUNCTION_1	FOR_2
0x4000251	            0x75f5	                           jne 0x4000248	       113	ldctor.c	FUNCTION_1	FOR_2
0x4000253	          0x488901	                    mov qword [rcx], rax	       115	ldctor.c	FUNCTION_1
0x4000256	      0x4883431801	               add qword [rbx + 0x18], 1	       117	ldctor.c	FUNCTION_1
0x400025b	            0xeb47	                           jmp 0x40002a4	       117	ldctor.c	FUNCTION_1
0x400025d	      0xbf28000000	                           mov edi, 0x28	        71	ldctor.c	FUNCTION_1	IF_2	CALL_1
0x4000262	      0xe800000000	                          call 0x4000267	        71	ldctor.c	FUNCTION_1	IF_2	CALL_1
0x4000267	          0x4889c3	                            mov rbx, rax	        71	ldctor.c	FUNCTION_1	IF_2	CALL_1
0x400026a	    0x488b05000000	            mov rax, qword [0x04000271] 	        72	ldctor.c	FUNCTION_1	IF_2
0x4000271	          0x488903	                    mov qword [rbx], rax	        72	ldctor.c	FUNCTION_1	IF_2
0x4000274	    0x48891d000000	            mov qword [0x0400027b], rbx 	        73	ldctor.c	FUNCTION_1	IF_2
0x400027b	        0x48896b08	                mov qword [rbx + 8], rbp	        74	ldctor.c	FUNCTION_1	IF_2
0x400027f	        0x44897b10	            mov dword [rbx + 0x10], r15d	        75	ldctor.c	FUNCTION_1	IF_2
0x4000283	    0x48c743180000	               mov qword [rbx + 0x18], 0	        76	ldctor.c	FUNCTION_1	IF_2
0x400028b	    0x48c743200000	               mov qword [rbx + 0x20], 0	        77	ldctor.c	FUNCTION_1	IF_2
0x4000293	            0xeb87	                           jmp 0x400021c	        77	ldctor.c	FUNCTION_1	IF_2
0x4000295	        0x44397b10	           cmp dword [rbx + 0x10], r15d 	        81	ldctor.c	FUNCTION_1	ELSE_1	IF_3
0x4000299	     0xf8413ffffff	                            je 0x40001b2	        81	ldctor.c	FUNCTION_1	ELSE_1	IF_3
0x400029f	      0xe9e1feffff	                           jmp 0x4000185	        81	ldctor.c	FUNCTION_1	ELSE_1	IF_3
0x40002a4	        0x4883c408	                              add rsp, 8	       118	ldctor.c	FUNCTION_1
0x40002a8	              0x5b	                                 pop rbx	       118	ldctor.c	FUNCTION_1
0x40002a9	              0x5d	                                 pop rbp	       118	ldctor.c	FUNCTION_1
0x40002aa	            0x415c	                                 pop r12	       118	ldctor.c	FUNCTION_1
0x40002ac	            0x415d	                                 pop r13	       118	ldctor.c	FUNCTION_1
0x40002ae	            0x415e	                                 pop r14	       118	ldctor.c	FUNCTION_1
0x40002b0	            0x415f	                                 pop r15	       118	ldctor.c	FUNCTION_1
0x40002b2	              0xc3	                                     ret	       118	ldctor.c	FUNCTION_1
