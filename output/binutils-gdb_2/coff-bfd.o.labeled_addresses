bfd_coff_get_syment	FOR,0:WHILE,0:SWITCH,0:ELSE,0:IF,2:functions,0:CALL,3:DO,0	40
0x4000040	        0x4883ec08	                              sub rsp, 8	        34	coff-bfd.c	FUNCTION_1
0x4000044	          0x488b0e	                    mov rcx, qword [rsi]	        37	coff-bfd.c	FUNCTION_1	CALL_1
0x4000047	        0x488b4108	                mov rax, qword [rcx + 8]	        37	coff-bfd.c	FUNCTION_1	CALL_1
0x400004b	          0x8b4008	                mov eax, dword [rax + 8]	        37	coff-bfd.c	FUNCTION_1	CALL_1
0x400004e	          0x83e802	                              sub eax, 2	        37	coff-bfd.c	FUNCTION_1	CALL_1
0x4000051	      0xa9fdffffff	                    test eax, 0xfffffffd	        37	coff-bfd.c	FUNCTION_1	CALL_1
0x4000056	            0x751e	                           jne 0x4000076	        37	coff-bfd.c	FUNCTION_1	CALL_1
0x4000058	    0x4883b9f80000	               cmp qword [rcx + 0xf8], 0	        37	coff-bfd.c	FUNCTION_1	CALL_1
0x4000060	            0x7414	                            je 0x4000076	        37	coff-bfd.c	FUNCTION_1	CALL_1
0x4000062	          0x4885f6	                           test rsi, rsi	        38	coff-bfd.c	FUNCTION_1	IF_1
0x4000065	            0x740f	                            je 0x4000076	        38	coff-bfd.c	FUNCTION_1	IF_1
0x4000067	        0x488b4630	            mov rax, qword [rsi + 0x30] 	        38	coff-bfd.c	FUNCTION_1	IF_1
0x400006b	          0x4885c0	                           test rax, rax	        38	coff-bfd.c	FUNCTION_1	IF_1
0x400006e	            0x7406	                            je 0x4000076	        38	coff-bfd.c	FUNCTION_1	IF_1
0x4000070	        0x83783000	               cmp dword [rax + 0x30], 0	        39	coff-bfd.c	FUNCTION_1	IF_1
0x4000074	            0x7511	                           jne 0x4000087	        39	coff-bfd.c	FUNCTION_1	IF_1
0x4000076	      0xbf05000000	                              mov edi, 5	        41	coff-bfd.c	FUNCTION_1	IF_1	CALL_2
0x400007b	      0xe800000000	                          call 0x4000080	        41	coff-bfd.c	FUNCTION_1	IF_1	CALL_2
0x4000080	      0xb800000000	                              mov eax, 0	        42	coff-bfd.c	FUNCTION_1	IF_1
0x4000085	            0xeb4a	                           jmp 0x40000d1	        42	coff-bfd.c	FUNCTION_1	IF_1
0x4000087	        0x488b4808	                mov rcx, qword [rax + 8]	        45	coff-bfd.c	FUNCTION_1
0x400008b	          0x48890a	                    mov qword [rdx], rcx	        45	coff-bfd.c	FUNCTION_1
0x400008e	        0x488b4810	            mov rcx, qword [rax + 0x10] 	        45	coff-bfd.c	FUNCTION_1
0x4000092	        0x48894a08	                mov qword [rdx + 8], rcx	        45	coff-bfd.c	FUNCTION_1
0x4000096	        0x488b4818	            mov rcx, qword [rax + 0x18] 	        45	coff-bfd.c	FUNCTION_1
0x400009a	        0x48894a10	             mov qword [rdx + 0x10], rcx	        45	coff-bfd.c	FUNCTION_1
0x400009e	        0x488b4820	            mov rcx, qword [rax + 0x20] 	        45	coff-bfd.c	FUNCTION_1
0x40000a2	        0x48894a18	             mov qword [rdx + 0x18], rcx	        45	coff-bfd.c	FUNCTION_1
0x40000a6	        0x488b4028	            mov rax, qword [rax + 0x28] 	        45	coff-bfd.c	FUNCTION_1
0x40000aa	        0x48894220	             mov qword [rdx + 0x20], rax	        45	coff-bfd.c	FUNCTION_1
0x40000ae	        0x488b4e30	            mov rcx, qword [rsi + 0x30] 	        47	coff-bfd.c	FUNCTION_1	IF_2
0x40000b2	      0xb801000000	                              mov eax, 1	        53	coff-bfd.c	FUNCTION_1
0x40000b7	        0xf6410401	                  test byte [rcx + 4], 1	        47	coff-bfd.c	FUNCTION_1	IF_2
0x40000bb	            0x7414	                            je 0x40000d1	        47	coff-bfd.c	FUNCTION_1	IF_2
0x40000bd	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	        49	coff-bfd.c	FUNCTION_1	CALL_3
0x40000c4	        0x488b4020	            mov rax, qword [rax + 0x20] 	        48	coff-bfd.c	FUNCTION_1	IF_2
0x40000c8	        0x48294210	             sub qword [rdx + 0x10], rax	        48	coff-bfd.c	FUNCTION_1	IF_2
0x40000cc	      0xb801000000	                              mov eax, 1	        53	coff-bfd.c	FUNCTION_1
0x40000d1	        0x4883c408	                              add rsp, 8	        54	coff-bfd.c	FUNCTION_1
0x40000d5	              0xc3	                                     ret	        54	coff-bfd.c	FUNCTION_1
bfd_coff_get_auxent	FOR,0:WHILE,0:SWITCH,0:ELSE,0:IF,4:functions,0:CALL,6:DO,0	81
0x40000d6	            0x4154	                                push r12	        63	coff-bfd.c	FUNCTION_2
0x40000d8	              0x55	                                push rbp	        63	coff-bfd.c	FUNCTION_2
0x40000d9	              0x53	                                push rbx	        63	coff-bfd.c	FUNCTION_2
0x40000da	          0x4889cd	                            mov rbp, rcx	        63	coff-bfd.c	FUNCTION_2
0x40000dd	          0x488b0e	                    mov rcx, qword [rsi]	        67	coff-bfd.c	FUNCTION_2	CALL_1
0x40000e0	        0x488b4108	                mov rax, qword [rcx + 8]	        67	coff-bfd.c	FUNCTION_2	CALL_1
0x40000e4	          0x8b4008	                mov eax, dword [rax + 8]	        67	coff-bfd.c	FUNCTION_2	CALL_1
0x40000e7	          0x83e802	                              sub eax, 2	        67	coff-bfd.c	FUNCTION_2	CALL_1
0x40000ea	      0xa9fdffffff	                    test eax, 0xfffffffd	        67	coff-bfd.c	FUNCTION_2	CALL_1
0x40000ef	            0x7529	                           jne 0x400011a	        67	coff-bfd.c	FUNCTION_2	CALL_1
0x40000f1	          0x4989fc	                            mov r12, rdi	        67	coff-bfd.c	FUNCTION_2	CALL_1
0x40000f4	    0x4883b9f80000	               cmp qword [rcx + 0xf8], 0	        67	coff-bfd.c	FUNCTION_2	CALL_1
0x40000fc	            0x741c	                            je 0x400011a	        67	coff-bfd.c	FUNCTION_2	CALL_1
0x40000fe	          0x4885f6	                           test rsi, rsi	        69	coff-bfd.c	FUNCTION_2	IF_1
0x4000101	            0x7417	                            je 0x400011a	        69	coff-bfd.c	FUNCTION_2	IF_1
0x4000103	        0x488b5e30	            mov rbx, qword [rsi + 0x30] 	        70	coff-bfd.c	FUNCTION_2	IF_1
0x4000107	          0x4885db	                           test rbx, rbx	        70	coff-bfd.c	FUNCTION_2	IF_1
0x400010a	            0x740e	                            je 0x400011a	        70	coff-bfd.c	FUNCTION_2	IF_1
0x400010c	        0x837b3000	               cmp dword [rbx + 0x30], 0	        71	coff-bfd.c	FUNCTION_2	IF_1
0x4000110	            0x7408	                            je 0x400011a	        71	coff-bfd.c	FUNCTION_2	IF_1
0x4000112	         0xfb64329	           movzx eax, byte [rbx + 0x29] 	        72	coff-bfd.c	FUNCTION_2	IF_1
0x4000116	            0x39d0	                            cmp eax, edx	        72	coff-bfd.c	FUNCTION_2	IF_1
0x4000118	            0x7f14	                            jg 0x400012e	        72	coff-bfd.c	FUNCTION_2	IF_1
0x400011a	      0xbf05000000	                              mov edi, 5	        74	coff-bfd.c	FUNCTION_2	IF_1	CALL_2
0x400011f	      0xe800000000	                          call 0x4000124	        74	coff-bfd.c	FUNCTION_2	IF_1	CALL_2
0x4000124	      0xb800000000	                              mov eax, 0	        75	coff-bfd.c	FUNCTION_2	IF_1
0x4000129	      0xe9e4000000	                           jmp 0x4000212	        75	coff-bfd.c	FUNCTION_2	IF_1
0x400012e	          0x4863d2	                         movsxd rdx, edx	        78	coff-bfd.c	FUNCTION_2
0x4000131	        0x4883c201	                              add rdx, 1	        78	coff-bfd.c	FUNCTION_2
0x4000135	    0x488d04d50000	                        lea rax, [rdx*8]	        78	coff-bfd.c	FUNCTION_2
0x400013d	        0x48c1e206	                              shl rdx, 6	        78	coff-bfd.c	FUNCTION_2
0x4000141	          0x4829c2	                            sub rdx, rax	        78	coff-bfd.c	FUNCTION_2
0x4000144	          0x4801d3	                            add rbx, rdx	        78	coff-bfd.c	FUNCTION_2
0x4000147	        0x837b3000	               cmp dword [rbx + 0x30], 0	        80	coff-bfd.c	FUNCTION_2	CALL_3
0x400014b	            0x740f	                            je 0x400015c	        80	coff-bfd.c	FUNCTION_2	CALL_3
0x400014d	      0xbe50000000	                           mov esi, 0x50	        80	coff-bfd.c	FUNCTION_2	CALL_3
0x4000152	      0xbf00000000	                              mov edi, 0	        80	coff-bfd.c	FUNCTION_2	CALL_3
0x4000157	      0xe800000000	                          call 0x400015c	        80	coff-bfd.c	FUNCTION_2	CALL_3
0x400015c	        0x488b4308	                mov rax, qword [rbx + 8]	        81	coff-bfd.c	FUNCTION_2
0x4000160	        0x48894500	                    mov qword [rbp], rax	        81	coff-bfd.c	FUNCTION_2
0x4000164	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        81	coff-bfd.c	FUNCTION_2
0x4000168	        0x48894508	                mov qword [rbp + 8], rax	        81	coff-bfd.c	FUNCTION_2
0x400016c	        0x488b4318	            mov rax, qword [rbx + 0x18] 	        81	coff-bfd.c	FUNCTION_2
0x4000170	        0x48894510	            mov qword [rbp + 0x10], rax 	        81	coff-bfd.c	FUNCTION_2
0x4000174	        0x488b4320	            mov rax, qword [rbx + 0x20] 	        81	coff-bfd.c	FUNCTION_2
0x4000178	        0x48894518	            mov qword [rbp + 0x18], rax 	        81	coff-bfd.c	FUNCTION_2
0x400017c	        0x488b4328	            mov rax, qword [rbx + 0x28] 	        81	coff-bfd.c	FUNCTION_2
0x4000180	        0x48894520	            mov qword [rbp + 0x20], rax 	        81	coff-bfd.c	FUNCTION_2
0x4000184	        0xf6430402	                  test byte [rbx + 4], 2	        83	coff-bfd.c	FUNCTION_2	IF_2
0x4000188	            0x7426	                            je 0x40001b0	        83	coff-bfd.c	FUNCTION_2	IF_2
0x400018a	    0x498b9424f800	            mov rdx, qword [r12 + 0xf8] 	        86	coff-bfd.c	FUNCTION_2	CALL_4
0x4000192	        0x488b4500	                    mov rax, qword [rbp]	        84	coff-bfd.c	FUNCTION_2	IF_2
0x4000196	        0x482b4220	             sub rax, qword [rdx + 0x20]	        84	coff-bfd.c	FUNCTION_2	IF_2
0x400019a	        0x48c1f803	                              sar rax, 3	        84	coff-bfd.c	FUNCTION_2	IF_2
0x400019e	    0x48bab76ddbb6	          movabs rdx, 0x6db6db6db6db6db7	        84	coff-bfd.c	FUNCTION_2	IF_2
0x40001a8	        0x480fafc2	                           imul rax, rdx	        84	coff-bfd.c	FUNCTION_2	IF_2
0x40001ac	        0x48894500	                    mov qword [rbp], rax	        84	coff-bfd.c	FUNCTION_2	IF_2
0x40001b0	        0xf6430404	                  test byte [rbx + 4], 4	        88	coff-bfd.c	FUNCTION_2	IF_3
0x40001b4	            0x7426	                            je 0x40001dc	        88	coff-bfd.c	FUNCTION_2	IF_3
0x40001b6	    0x498b9424f800	            mov rdx, qword [r12 + 0xf8] 	        91	coff-bfd.c	FUNCTION_2	CALL_5
0x40001be	        0x488b4518	            mov rax, qword [rbp + 0x18] 	        89	coff-bfd.c	FUNCTION_2	IF_3
0x40001c2	        0x482b4220	             sub rax, qword [rdx + 0x20]	        89	coff-bfd.c	FUNCTION_2	IF_3
0x40001c6	        0x48c1f803	                              sar rax, 3	        89	coff-bfd.c	FUNCTION_2	IF_3
0x40001ca	    0x48bab76ddbb6	          movabs rdx, 0x6db6db6db6db6db7	        89	coff-bfd.c	FUNCTION_2	IF_3
0x40001d4	        0x480fafc2	                           imul rax, rdx	        89	coff-bfd.c	FUNCTION_2	IF_3
0x40001d8	        0x48894518	            mov qword [rbp + 0x18], rax 	        89	coff-bfd.c	FUNCTION_2	IF_3
0x40001dc	      0xb801000000	                              mov eax, 1	        98	coff-bfd.c	FUNCTION_2
0x40001e1	        0xf6430408	                  test byte [rbx + 4], 8	        93	coff-bfd.c	FUNCTION_2	IF_4
0x40001e5	            0x742b	                            je 0x4000212	        93	coff-bfd.c	FUNCTION_2	IF_4
0x40001e7	    0x498b9424f800	            mov rdx, qword [r12 + 0xf8] 	        96	coff-bfd.c	FUNCTION_2	CALL_6
0x40001ef	        0x488b4500	                    mov rax, qword [rbp]	        94	coff-bfd.c	FUNCTION_2	IF_4
0x40001f3	        0x482b4220	             sub rax, qword [rdx + 0x20]	        94	coff-bfd.c	FUNCTION_2	IF_4
0x40001f7	        0x48c1f803	                              sar rax, 3	        94	coff-bfd.c	FUNCTION_2	IF_4
0x40001fb	    0x48bab76ddbb6	          movabs rdx, 0x6db6db6db6db6db7	        94	coff-bfd.c	FUNCTION_2	IF_4
0x4000205	        0x480fafc2	                           imul rax, rdx	        94	coff-bfd.c	FUNCTION_2	IF_4
0x4000209	        0x48894500	                    mov qword [rbp], rax	        94	coff-bfd.c	FUNCTION_2	IF_4
0x400020d	      0xb801000000	                              mov eax, 1	        98	coff-bfd.c	FUNCTION_2
0x4000212	              0x5b	                                 pop rbx	        99	coff-bfd.c	FUNCTION_2
0x4000213	              0x5d	                                 pop rbp	        99	coff-bfd.c	FUNCTION_2
0x4000214	            0x415c	                                 pop r12	        99	coff-bfd.c	FUNCTION_2
0x4000216	              0xc3	                                     ret	        99	coff-bfd.c	FUNCTION_2
