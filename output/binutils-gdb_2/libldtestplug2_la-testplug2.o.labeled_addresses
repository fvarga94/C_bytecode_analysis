set_ret_val	functions,0:IF,4:CALL,4:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,4	46
0x4000076	          0x4889f8	                            mov rax, rdi	       289	testplug2.c	FUNCTION_5
0x4000079	          0x4189f0	                            mov r8d, esi	       289	testplug2.c	FUNCTION_5
0x400007c	      0xbe00000000	                              mov esi, 0	       290	testplug2.c	FUNCTION_5	IF_1	CALL_1
0x4000081	      0xb907000000	                              mov ecx, 7	       290	testplug2.c	FUNCTION_5	IF_1	CALL_1
0x4000086	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       290	testplug2.c	FUNCTION_5	IF_1	CALL_1
0x4000088	           0xf97c1	                                 seta cl	       290	testplug2.c	FUNCTION_5	IF_1	CALL_1
0x400008b	           0xf92c2	                                 setb dl	       290	testplug2.c	FUNCTION_5	IF_1	CALL_1
0x400008e	            0x38d1	                              cmp cl, dl	       290	testplug2.c	FUNCTION_5	IF_1	CALL_1
0x4000090	            0x750d	                           jne 0x400009f	       290	testplug2.c	FUNCTION_5	IF_1	CALL_1
0x4000092	    0x448905000000	            mov dword [0x04000099], r8d 	       291	testplug2.c	FUNCTION_5	IF_1
0x4000099	      0xb800000000	                              mov eax, 0	       300	testplug2.c	FUNCTION_5	ELSE_4
0x400009e	              0xc3	                                     ret	       300	testplug2.c	FUNCTION_5	ELSE_4
0x400009f	      0xbe00000000	                              mov esi, 0	       292	testplug2.c	FUNCTION_5	ELSE_1	IF_2	CALL_2
0x40000a4	      0xb90a000000	                            mov ecx, 0xa	       292	testplug2.c	FUNCTION_5	ELSE_1	IF_2	CALL_2
0x40000a9	          0x4889c7	                            mov rdi, rax	       292	testplug2.c	FUNCTION_5	ELSE_1	IF_2	CALL_2
0x40000ac	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       292	testplug2.c	FUNCTION_5	ELSE_1	IF_2	CALL_2
0x40000ae	           0xf97c1	                                 seta cl	       292	testplug2.c	FUNCTION_5	ELSE_1	IF_2	CALL_2
0x40000b1	           0xf92c2	                                 setb dl	       292	testplug2.c	FUNCTION_5	ELSE_1	IF_2	CALL_2
0x40000b4	            0x38d1	                              cmp cl, dl	       292	testplug2.c	FUNCTION_5	ELSE_1	IF_2	CALL_2
0x40000b6	            0x750d	                           jne 0x40000c5	       292	testplug2.c	FUNCTION_5	ELSE_1	IF_2	CALL_2
0x40000b8	    0x448905000000	            mov dword [0x040000bf], r8d 	       293	testplug2.c	FUNCTION_5	ELSE_1	IF_2
0x40000bf	      0xb800000000	                              mov eax, 0	       300	testplug2.c	FUNCTION_5	ELSE_4
0x40000c4	              0xc3	                                     ret	       300	testplug2.c	FUNCTION_5	ELSE_4
0x40000c5	      0xbe00000000	                              mov esi, 0	       294	testplug2.c	FUNCTION_5	ELSE_2	IF_3	CALL_3
0x40000ca	      0xb90f000000	                            mov ecx, 0xf	       294	testplug2.c	FUNCTION_5	ELSE_2	IF_3	CALL_3
0x40000cf	          0x4889c7	                            mov rdi, rax	       294	testplug2.c	FUNCTION_5	ELSE_2	IF_3	CALL_3
0x40000d2	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       294	testplug2.c	FUNCTION_5	ELSE_2	IF_3	CALL_3
0x40000d4	           0xf97c1	                                 seta cl	       294	testplug2.c	FUNCTION_5	ELSE_2	IF_3	CALL_3
0x40000d7	           0xf92c2	                                 setb dl	       294	testplug2.c	FUNCTION_5	ELSE_2	IF_3	CALL_3
0x40000da	            0x38d1	                              cmp cl, dl	       294	testplug2.c	FUNCTION_5	ELSE_2	IF_3	CALL_3
0x40000dc	            0x750d	                           jne 0x40000eb	       294	testplug2.c	FUNCTION_5	ELSE_2	IF_3	CALL_3
0x40000de	    0x448905000000	            mov dword [0x040000e5], r8d 	       295	testplug2.c	FUNCTION_5	ELSE_2	IF_3
0x40000e5	      0xb800000000	                              mov eax, 0	       300	testplug2.c	FUNCTION_5	ELSE_4
0x40000ea	              0xc3	                                     ret	       300	testplug2.c	FUNCTION_5	ELSE_4
0x40000eb	      0xbe00000000	                              mov esi, 0	       296	testplug2.c	FUNCTION_5	ELSE_3	IF_4	CALL_4
0x40000f0	      0xb908000000	                              mov ecx, 8	       296	testplug2.c	FUNCTION_5	ELSE_3	IF_4	CALL_4
0x40000f5	          0x4889c7	                            mov rdi, rax	       296	testplug2.c	FUNCTION_5	ELSE_3	IF_4	CALL_4
0x40000f8	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       296	testplug2.c	FUNCTION_5	ELSE_3	IF_4	CALL_4
0x40000fa	           0xf97c1	                                 seta cl	       296	testplug2.c	FUNCTION_5	ELSE_3	IF_4	CALL_4
0x40000fd	           0xf92c2	                                 setb dl	       296	testplug2.c	FUNCTION_5	ELSE_3	IF_4	CALL_4
0x4000100	      0xb803000000	                              mov eax, 3	       299	testplug2.c	FUNCTION_5	ELSE_4
0x4000105	            0x38d1	                              cmp cl, dl	       296	testplug2.c	FUNCTION_5	ELSE_3	IF_4	CALL_4
0x4000107	            0x750c	                           jne 0x4000115	       296	testplug2.c	FUNCTION_5	ELSE_3	IF_4	CALL_4
0x4000109	    0x448905000000	            mov dword [0x04000110], r8d 	       297	testplug2.c	FUNCTION_5	ELSE_3	IF_4
0x4000110	      0xb800000000	                              mov eax, 0	       300	testplug2.c	FUNCTION_5	ELSE_4
0x4000115	            0xf3c3	                                     ret	       301	testplug2.c	FUNCTION_5	ELSE_4
record_claim_file	functions,0:IF,1:CALL,2:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,0	26
0x400020f	              0x55	                                push rbp	       148	testplug2.c	FUNCTION_1
0x4000210	              0x53	                                push rbx	       148	testplug2.c	FUNCTION_1
0x4000211	        0x4883ec08	                              sub rsp, 8	       148	testplug2.c	FUNCTION_1
0x4000215	          0x4889fd	                            mov rbp, rdi	       148	testplug2.c	FUNCTION_1
0x4000218	          0x4889f3	                            mov rbx, rsi	       148	testplug2.c	FUNCTION_1
0x400021b	      0xbf48000000	                           mov edi, 0x48	       151	testplug2.c	FUNCTION_1	CALL_1
0x4000220	      0xe800000000	                          call 0x4000225	       151	testplug2.c	FUNCTION_1	CALL_1
0x4000225	          0x4889c2	                            mov rdx, rax	       151	testplug2.c	FUNCTION_1	CALL_1
0x4000228	      0xb803000000	                              mov eax, 3	       153	testplug2.c	FUNCTION_1	IF_1
0x400022d	          0x4885d2	                           test rdx, rdx	       152	testplug2.c	FUNCTION_1	IF_1
0x4000230	            0x7435	                            je 0x4000267	       152	testplug2.c	FUNCTION_1	IF_1
0x4000232	      0xb909000000	                              mov ecx, 9	        90	string3.h	FUNCTION_17	CALL_6
0x4000237	      0xb800000000	                              mov eax, 0	        90	string3.h	FUNCTION_17	CALL_6
0x400023c	          0x4889d7	                            mov rdi, rdx	        90	string3.h	FUNCTION_17	CALL_6
0x400023f	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_17	CALL_6
0x4000242	        0x48896a08	                mov qword [rdx + 8], rbp	       156	testplug2.c	FUNCTION_1
0x4000246	        0x48895a20	             mov qword [rdx + 0x20], rbx	       157	testplug2.c	FUNCTION_1
0x400024a	    0x488b05000000	            mov rax, qword [0x04000251] 	       159	testplug2.c	FUNCTION_1
0x4000251	          0x488910	                    mov qword [rax], rdx	       159	testplug2.c	FUNCTION_1
0x4000254	    0x488915000000	            mov qword [0x0400025b], rdx 	       160	testplug2.c	FUNCTION_1
0x400025b	    0x488915000000	            mov qword [0x04000262], rdx 	       162	testplug2.c	FUNCTION_1
0x4000262	      0xb800000000	                              mov eax, 0	       163	testplug2.c	FUNCTION_1
0x4000267	        0x4883c408	                              add rsp, 8	       164	testplug2.c	FUNCTION_1
0x400026b	              0x5b	                                 pop rbx	       164	testplug2.c	FUNCTION_1
0x400026c	              0x5d	                                 pop rbp	       164	testplug2.c	FUNCTION_1
0x400026d	              0xc3	                                     ret	       164	testplug2.c	FUNCTION_1
xstrdup	functions,0:IF,0:CALL,3:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,0	19
0x40009dc	              0x55	                                push rbp	       502	testplug2.c	FUNCTION_10
0x40009dd	              0x53	                                push rbx	       502	testplug2.c	FUNCTION_10
0x40009de	        0x4883ec08	                              sub rsp, 8	       502	testplug2.c	FUNCTION_10
0x40009e2	          0x4889fd	                            mov rbp, rdi	       502	testplug2.c	FUNCTION_10
0x40009e5	      0xb800000000	                              mov eax, 0	       503	testplug2.c	FUNCTION_10	CALL_1
0x40009ea	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       503	testplug2.c	FUNCTION_10	CALL_1
0x40009f1	            0xf2ae	              repne scasb al, byte [rdi]	       503	testplug2.c	FUNCTION_10	CALL_1
0x40009f3	          0x4889cb	                            mov rbx, rcx	       503	testplug2.c	FUNCTION_10	CALL_1
0x40009f6	          0x48f7d3	                                 not rbx	       503	testplug2.c	FUNCTION_10	CALL_1
0x40009f9	        0x488d7b01	                      lea rdi, [rbx + 1]	       504	testplug2.c	FUNCTION_10	CALL_2
0x40009fd	      0xe800000000	                          call 0x4000a02	       504	testplug2.c	FUNCTION_10	CALL_2
0x4000a02	          0x4889da	                            mov rdx, rbx	        53	string3.h	FUNCTION_14	CALL_3
0x4000a05	          0x4889ee	                            mov rsi, rbp	        53	string3.h	FUNCTION_14	CALL_3
0x4000a08	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_14	CALL_3
0x4000a0b	      0xe800000000	                          call 0x4000a10	        53	string3.h	FUNCTION_14	CALL_3
0x4000a10	        0x4883c408	                              add rsp, 8	       506	testplug2.c	FUNCTION_10
0x4000a14	              0x5b	                                 pop rbx	       506	testplug2.c	FUNCTION_10
0x4000a15	              0x5d	                                 pop rbp	       506	testplug2.c	FUNCTION_10
0x4000a16	              0xc3	                                     ret	       506	testplug2.c	FUNCTION_10
record_claimed_file_symbol	functions,0:IF,4:CALL,2:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,0	165
0x400026e	            0x4157	                                push r15	       258	testplug2.c	ELSE_2	FUNCTION_4
0x4000270	            0x4156	                                push r14	       258	testplug2.c	ELSE_2	FUNCTION_4
0x4000272	            0x4155	                                push r13	       258	testplug2.c	ELSE_2	FUNCTION_4
0x4000274	            0x4154	                                push r12	       258	testplug2.c	ELSE_2	FUNCTION_4
0x4000276	              0x55	                                push rbp	       258	testplug2.c	ELSE_2	FUNCTION_4
0x4000277	              0x53	                                push rbx	       258	testplug2.c	ELSE_2	FUNCTION_4
0x4000278	        0x4883ec68	                           sub rsp, 0x68	       258	testplug2.c	ELSE_2	FUNCTION_4
0x400027c	    0x64488b042528	                mov rax, qword fs:[0x28]	       258	testplug2.c	ELSE_2	FUNCTION_4
0x4000285	      0x4889442458	             mov qword [rsp + 0x58], rax	       258	testplug2.c	ELSE_2	FUNCTION_4
0x400028a	            0x31c0	                            xor eax, eax	       258	testplug2.c	ELSE_2	FUNCTION_4
0x400028c	      0xb803000000	                              mov eax, 3	       263	testplug2.c	ELSE_2	FUNCTION_4	IF_1
0x4000291	    0x48833d000000	               cmp qword [0x04000299], 0	       262	testplug2.c	ELSE_2	FUNCTION_4	IF_1
0x4000299	     0xf8424020000	                            je 0x40004c3	       262	testplug2.c	ELSE_2	FUNCTION_4	IF_1
0x400029f	          0x4889fb	                            mov rbx, rdi	       262	testplug2.c	ELSE_2	FUNCTION_4	IF_1
0x40002a2	      0xbe3a000000	                           mov esi, 0x3a	       198	testplug2.c	FUNCTION_3	CALL_1
0x40002a7	      0xe800000000	                          call 0x40002ac	       198	testplug2.c	FUNCTION_3	CALL_1
0x40002ac	          0x4889c5	                            mov rbp, rax	       198	testplug2.c	FUNCTION_3	CALL_1
0x40002af	          0x4885c0	                           test rax, rax	       199	testplug2.c	FUNCTION_3	IF_1
0x40002b2	     0xf841d020000	                            je 0x40004d5	       199	testplug2.c	FUNCTION_3	IF_1
0x40002b8	        0x4c8d6801	                      lea r13, [rax + 1]	       201	testplug2.c	FUNCTION_3	CALL_2
0x40002bc	      0xbe3a000000	                           mov esi, 0x3a	       201	testplug2.c	FUNCTION_3	CALL_2
0x40002c1	          0x4c89ef	                            mov rdi, r13	       201	testplug2.c	FUNCTION_3	CALL_2
0x40002c4	      0xe800000000	                          call 0x40002c9	       201	testplug2.c	FUNCTION_3	CALL_2
0x40002c9	          0x4989c4	                            mov r12, rax	       201	testplug2.c	FUNCTION_3	CALL_2
0x40002cc	          0x4839eb	                            cmp rbx, rbp	       205	testplug2.c	FUNCTION_3	IF_3
0x40002cf	     0xf8400020000	                            je 0x40004d5	       205	testplug2.c	FUNCTION_3	IF_3
0x40002d5	          0x4885c0	                           test rax, rax	       205	testplug2.c	FUNCTION_3	IF_3
0x40002d8	     0xf84f7010000	                            je 0x40004d5	       205	testplug2.c	FUNCTION_3	IF_3
0x40002de	        0x4c8d7801	                      lea r15, [rax + 1]	       210	testplug2.c	FUNCTION_3	CALL_3
0x40002e2	      0xbe3a000000	                           mov esi, 0x3a	       210	testplug2.c	FUNCTION_3	CALL_3
0x40002e7	          0x4c89ff	                            mov rdi, r15	       210	testplug2.c	FUNCTION_3	CALL_3
0x40002ea	      0xe800000000	                          call 0x40002ef	       210	testplug2.c	FUNCTION_3	CALL_3
0x40002ef	          0x4885c0	                           test rax, rax	       211	testplug2.c	FUNCTION_3	IF_4
0x40002f2	     0xf84dd010000	                            je 0x40004d5	       211	testplug2.c	FUNCTION_3	IF_4
0x40002f8	        0x488d7801	                      lea rdi, [rax + 1]	       213	testplug2.c	FUNCTION_3	CALL_4
0x40002fc	      0xbe3a000000	                           mov esi, 0x3a	       213	testplug2.c	FUNCTION_3	CALL_4
0x4000301	      0xe800000000	                          call 0x4000306	       213	testplug2.c	FUNCTION_3	CALL_4
0x4000306	          0x4885c0	                           test rax, rax	       214	testplug2.c	FUNCTION_3	IF_5
0x4000309	     0xf84c6010000	                            je 0x40004d5	       214	testplug2.c	FUNCTION_3	IF_5
0x400030f	        0x488d7801	                      lea rdi, [rax + 1]	       216	testplug2.c	FUNCTION_3	CALL_5
0x4000313	      0xbe3a000000	                           mov esi, 0x3a	       216	testplug2.c	FUNCTION_3	CALL_5
0x4000318	      0xe800000000	                          call 0x400031d	       216	testplug2.c	FUNCTION_3	CALL_5
0x400031d	          0x4989c6	                            mov r14, rax	       216	testplug2.c	FUNCTION_3	CALL_5
0x4000320	      0x488d442420	                   lea rax, [rsp + 0x20]	       221	testplug2.c	FUNCTION_3	CALL_6
0x4000325	      0x488d4c2434	                   lea rcx, [rsp + 0x34]	       221	testplug2.c	FUNCTION_3	CALL_6
0x400032a	        0x488d5010	                   lea rdx, [rax + 0x10]	       221	testplug2.c	FUNCTION_3	CALL_6
0x400032e	      0x4c8d442418	                    lea r8, [rsp + 0x18]	       221	testplug2.c	FUNCTION_3	CALL_6
0x4000333	      0xbe00000000	                              mov esi, 0	       221	testplug2.c	FUNCTION_3	CALL_6
0x4000338	          0x4c89ff	                            mov rdi, r15	       221	testplug2.c	FUNCTION_3	CALL_6
0x400033b	      0xb800000000	                              mov eax, 0	       221	testplug2.c	FUNCTION_3	CALL_6
0x4000340	      0xe800000000	                          call 0x4000345	       221	testplug2.c	FUNCTION_3	CALL_6
0x4000345	          0x83f803	                              cmp eax, 3	       222	testplug2.c	FUNCTION_3	IF_6
0x4000348	     0xf8587010000	                           jne 0x40004d5	       222	testplug2.c	FUNCTION_3	IF_6
0x400034e	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       226	testplug2.c	FUNCTION_3
0x4000353	      0x4889442438	             mov qword [rsp + 0x38], rax	       226	testplug2.c	FUNCTION_3
0x4000358	    0xc74424480000	               mov dword [rsp + 0x48], 0	       227	testplug2.c	FUNCTION_3
0x4000360	          0x4889e8	                            mov rax, rbp	       228	testplug2.c	FUNCTION_3	CALL_7
0x4000363	          0x4829d8	                            sub rax, rbx	       228	testplug2.c	FUNCTION_3	CALL_7
0x4000366	      0x4889442408	                mov qword [rsp + 8], rax	       228	testplug2.c	FUNCTION_3	CALL_7
0x400036b	        0x488d7801	                      lea rdi, [rax + 1]	       228	testplug2.c	FUNCTION_3	CALL_7
0x400036f	      0xe800000000	                          call 0x4000374	       228	testplug2.c	FUNCTION_3	CALL_7
0x4000374	          0x4989c7	                            mov r15, rax	       228	testplug2.c	FUNCTION_3	CALL_7
0x4000377	      0x4889442420	             mov qword [rsp + 0x20], rax	       228	testplug2.c	FUNCTION_3	CALL_7
0x400037c	          0x4885c0	                           test rax, rax	       229	testplug2.c	FUNCTION_3	IF_7
0x400037f	     0xf8450010000	                            je 0x40004d5	       229	testplug2.c	FUNCTION_3	IF_7
0x4000385	      0x488b542408	                mov rdx, qword [rsp + 8]	        53	string3.h	FUNCTION_14	CALL_3
0x400038a	          0x4889de	                            mov rsi, rbx	        53	string3.h	FUNCTION_14	CALL_3
0x400038d	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_14	CALL_3
0x4000390	      0xe800000000	                          call 0x4000395	        53	string3.h	FUNCTION_14	CALL_3
0x4000395	      0x488b442408	                mov rax, qword [rsp + 8]	       232	testplug2.c	FUNCTION_3
0x400039a	      0x41c6040700	                 mov byte [r15 + rax], 0	       232	testplug2.c	FUNCTION_3
0x400039f	          0x4d39e5	                            cmp r13, r12	       233	testplug2.c	FUNCTION_3	IF_8
0x40003a2	            0x7334	                           jae 0x40003d8	       233	testplug2.c	FUNCTION_3	IF_8
0x40003a4	          0x4c89e7	                            mov rdi, r12	       235	testplug2.c	FUNCTION_3	IF_8	CALL_9
0x40003a7	          0x4829ef	                            sub rdi, rbp	       235	testplug2.c	FUNCTION_3	IF_8	CALL_9
0x40003aa	      0xe800000000	                          call 0x40003af	       235	testplug2.c	FUNCTION_3	IF_8	CALL_9
0x40003af	          0x4889c3	                            mov rbx, rax	       235	testplug2.c	FUNCTION_3	IF_8	CALL_9
0x40003b2	      0x4889442428	             mov qword [rsp + 0x28], rax	       235	testplug2.c	FUNCTION_3	IF_8	CALL_9
0x40003b7	          0x4885c0	                           test rax, rax	       236	testplug2.c	FUNCTION_3	IF_8	IF_9
0x40003ba	     0xf8415010000	                            je 0x40004d5	       236	testplug2.c	FUNCTION_3	IF_8	IF_9
0x40003c0	          0x4d29ec	                            sub r12, r13	       238	testplug2.c	FUNCTION_3	IF_8	CALL_10
0x40003c3	          0x4c89e2	                            mov rdx, r12	        53	string3.h	FUNCTION_14	CALL_3
0x40003c6	          0x4c89ee	                            mov rsi, r13	        53	string3.h	FUNCTION_14	CALL_3
0x40003c9	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_14	CALL_3
0x40003cc	      0xe800000000	                          call 0x40003d1	        53	string3.h	FUNCTION_14	CALL_3
0x40003d1	      0x42c6042300	                 mov byte [rbx + r12], 0	       239	testplug2.c	FUNCTION_3	IF_8
0x40003d6	            0xeb09	                           jmp 0x40003e1	       239	testplug2.c	FUNCTION_3	IF_8
0x40003d8	    0x48c744242800	               mov qword [rsp + 0x28], 0	       242	testplug2.c	FUNCTION_3	ELSE_1
0x40003e1	          0x4d85f6	                           test r14, r14	       243	testplug2.c	FUNCTION_3	ELSE_1	IF_10
0x40003e4	            0x7445	                            je 0x400042b	       243	testplug2.c	FUNCTION_3	ELSE_1	IF_10
0x40003e6	      0x41807e0100	                   cmp byte [r14 + 1], 0	       243	testplug2.c	FUNCTION_3	ELSE_1	IF_10
0x40003eb	            0x743e	                            je 0x400042b	       243	testplug2.c	FUNCTION_3	ELSE_1	IF_10
0x40003ed	        0x4983c601	                              add r14, 1	       245	testplug2.c	FUNCTION_3	ELSE_1	IF_10	CALL_12
0x40003f1	      0xb800000000	                              mov eax, 0	       245	testplug2.c	FUNCTION_3	ELSE_1	IF_10	CALL_12
0x40003f6	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       245	testplug2.c	FUNCTION_3	ELSE_1	IF_10	CALL_12
0x40003fd	          0x4c89f7	                            mov rdi, r14	       245	testplug2.c	FUNCTION_3	ELSE_1	IF_10	CALL_12
0x4000400	            0xf2ae	              repne scasb al, byte [rdi]	       245	testplug2.c	FUNCTION_3	ELSE_1	IF_10	CALL_12
0x4000402	          0x48f7d1	                                 not rcx	       245	testplug2.c	FUNCTION_3	ELSE_1	IF_10	CALL_12
0x4000405	          0x4889cf	                            mov rdi, rcx	       245	testplug2.c	FUNCTION_3	ELSE_1	IF_10	CALL_12
0x4000408	      0xe800000000	                          call 0x400040d	       245	testplug2.c	FUNCTION_3	ELSE_1	IF_10	CALL_12
0x400040d	      0x4889442440	             mov qword [rsp + 0x40], rax	       245	testplug2.c	FUNCTION_3	ELSE_1	IF_10	CALL_12
0x4000412	          0x4885c0	                           test rax, rax	       246	testplug2.c	FUNCTION_3	ELSE_1	IF_10	IF_11
0x4000415	     0xf84ba000000	                            je 0x40004d5	       246	testplug2.c	FUNCTION_3	ELSE_1	IF_10	IF_11
0x400041b	          0x4c89f6	                            mov rsi, r14	       110	string3.h	FUNCTION_20	CALL_3
0x400041e	          0x4889c7	                            mov rdi, rax	       110	string3.h	FUNCTION_20	CALL_3
0x4000421	      0xe800000000	                          call 0x4000426	       110	string3.h	FUNCTION_20	CALL_3
0x4000426	      0xe9b1000000	                           jmp 0x40004dc	       110	string3.h	FUNCTION_20	CALL_3
0x400042b	    0x48c744244000	               mov qword [rsp + 0x40], 0	       251	testplug2.c	FUNCTION_3	ELSE_2
0x4000434	      0xe9a3000000	                           jmp 0x40004dc	       251	testplug2.c	FUNCTION_3	ELSE_2
0x4000439	          0x8d2c00	                    lea ebp, [rax + rax]	       274	testplug2.c	ELSE_2	FUNCTION_4	IF_3
0x400043c	            0x85c0	                           test eax, eax	       274	testplug2.c	ELSE_2	FUNCTION_4	IF_3
0x400043e	      0xb80a000000	                            mov eax, 0xa	       274	testplug2.c	ELSE_2	FUNCTION_4	IF_3
0x4000443	           0xf44e8	                          cmove ebp, eax	       274	testplug2.c	ELSE_2	FUNCTION_4	IF_3
0x4000446	          0x4863c5	                         movsxd rax, ebp	       275	testplug2.c	ELSE_2	FUNCTION_4	IF_3	CALL_2
0x4000449	        0x488d3440	                  lea rsi, [rax + rax*2]	       275	testplug2.c	ELSE_2	FUNCTION_4	IF_3	CALL_2
0x400044d	        0x48c1e604	                              shl rsi, 4	       275	testplug2.c	ELSE_2	FUNCTION_4	IF_3	CALL_2
0x4000451	        0x488b7b38	            mov rdi, qword [rbx + 0x38] 	       275	testplug2.c	ELSE_2	FUNCTION_4	IF_3	CALL_2
0x4000455	      0xe800000000	                          call 0x400045a	       275	testplug2.c	ELSE_2	FUNCTION_4	IF_3	CALL_2
0x400045a	          0x4889c2	                            mov rdx, rax	       275	testplug2.c	ELSE_2	FUNCTION_4	IF_3	CALL_2
0x400045d	        0x48894338	             mov qword [rbx + 0x38], rax	       275	testplug2.c	ELSE_2	FUNCTION_4	IF_3	CALL_2
0x4000461	      0xb803000000	                              mov eax, 3	       278	testplug2.c	ELSE_2	FUNCTION_4	IF_3	IF_4
0x4000466	          0x4885d2	                           test rdx, rdx	       277	testplug2.c	ELSE_2	FUNCTION_4	IF_3	IF_4
0x4000469	            0x7458	                            je 0x40004c3	       277	testplug2.c	ELSE_2	FUNCTION_4	IF_3	IF_4
0x400046b	          0x896b40	             mov dword [rbx + 0x40], ebp	       279	testplug2.c	ELSE_2	FUNCTION_4	IF_3
0x400046e	        0x488b4b38	            mov rcx, qword [rbx + 0x38] 	       281	testplug2.c	ELSE_2	FUNCTION_4
0x4000472	          0x8b5344	            mov edx, dword [rbx + 0x44] 	       281	testplug2.c	ELSE_2	FUNCTION_4
0x4000475	          0x8d4201	                      lea eax, [rdx + 1]	       281	testplug2.c	ELSE_2	FUNCTION_4
0x4000478	          0x894344	             mov dword [rbx + 0x44], eax	       281	testplug2.c	ELSE_2	FUNCTION_4
0x400047b	          0x4863d2	                         movsxd rdx, edx	       281	testplug2.c	ELSE_2	FUNCTION_4
0x400047e	        0x488d0452	                  lea rax, [rdx + rdx*2]	       281	testplug2.c	ELSE_2	FUNCTION_4
0x4000482	        0x48c1e004	                              shl rax, 4	       281	testplug2.c	ELSE_2	FUNCTION_4
0x4000486	          0x4801c8	                            add rax, rcx	       281	testplug2.c	ELSE_2	FUNCTION_4
0x4000489	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	       281	testplug2.c	ELSE_2	FUNCTION_4
0x400048e	          0x488910	                    mov qword [rax], rdx	       281	testplug2.c	ELSE_2	FUNCTION_4
0x4000491	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	       281	testplug2.c	ELSE_2	FUNCTION_4
0x4000496	        0x48895008	                mov qword [rax + 8], rdx	       281	testplug2.c	ELSE_2	FUNCTION_4
0x400049a	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	       281	testplug2.c	ELSE_2	FUNCTION_4
0x400049f	        0x48895010	             mov qword [rax + 0x10], rdx	       281	testplug2.c	ELSE_2	FUNCTION_4
0x40004a3	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	       281	testplug2.c	ELSE_2	FUNCTION_4
0x40004a8	        0x48895018	             mov qword [rax + 0x18], rdx	       281	testplug2.c	ELSE_2	FUNCTION_4
0x40004ac	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	       281	testplug2.c	ELSE_2	FUNCTION_4
0x40004b1	        0x48895020	             mov qword [rax + 0x20], rdx	       281	testplug2.c	ELSE_2	FUNCTION_4
0x40004b5	      0x488b542448	            mov rdx, qword [rsp + 0x48] 	       281	testplug2.c	ELSE_2	FUNCTION_4
0x40004ba	        0x48895028	             mov qword [rax + 0x28], rdx	       281	testplug2.c	ELSE_2	FUNCTION_4
0x40004be	      0xb800000000	                              mov eax, 0	       283	testplug2.c	ELSE_2	FUNCTION_4
0x40004c3	      0x488b4c2458	            mov rcx, qword [rsp + 0x58] 	       284	testplug2.c	ELSE_2	FUNCTION_4
0x40004c8	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       284	testplug2.c	ELSE_2	FUNCTION_4
0x40004d1	            0x7422	                            je 0x40004f5	       284	testplug2.c	ELSE_2	FUNCTION_4
0x40004d3	            0xeb1b	                           jmp 0x40004f0	       284	testplug2.c	ELSE_2	FUNCTION_4
0x40004d5	      0xb803000000	                              mov eax, 3	       267	testplug2.c	ELSE_2	FUNCTION_4	IF_2
0x40004da	            0xebe7	                           jmp 0x40004c3	       267	testplug2.c	ELSE_2	FUNCTION_4	IF_2
0x40004dc	    0x488b1d000000	            mov rbx, qword [0x040004e3] 	       270	testplug2.c	ELSE_2	FUNCTION_4	IF_3
0x40004e3	          0x8b4340	            mov eax, dword [rbx + 0x40] 	       270	testplug2.c	ELSE_2	FUNCTION_4	IF_3
0x40004e6	          0x3b4344	            cmp eax, dword [rbx + 0x44] 	       270	testplug2.c	ELSE_2	FUNCTION_4	IF_3
0x40004e9	            0x7583	                           jne 0x400046e	       270	testplug2.c	ELSE_2	FUNCTION_4	IF_3
0x40004eb	      0xe949ffffff	                           jmp 0x4000439	       270	testplug2.c	ELSE_2	FUNCTION_4	IF_3
0x40004f0	      0xe800000000	                          call 0x40004f5	       284	testplug2.c	ELSE_2	FUNCTION_4
0x40004f5	        0x4883c468	                           add rsp, 0x68	       284	testplug2.c	ELSE_2	FUNCTION_4
0x40004f9	              0x5b	                                 pop rbx	       284	testplug2.c	ELSE_2	FUNCTION_4
0x40004fa	              0x5d	                                 pop rbp	       284	testplug2.c	ELSE_2	FUNCTION_4
0x40004fb	            0x415c	                                 pop r12	       284	testplug2.c	ELSE_2	FUNCTION_4
0x40004fd	            0x415d	                                 pop r13	       284	testplug2.c	ELSE_2	FUNCTION_4
0x40004ff	            0x415e	                                 pop r14	       284	testplug2.c	ELSE_2	FUNCTION_4
0x4000501	            0x415f	                                 pop r15	       284	testplug2.c	ELSE_2	FUNCTION_4
0x4000503	              0xc3	                                     ret	       284	testplug2.c	ELSE_2	FUNCTION_4
onload	functions,0:IF,10:CALL,10:FOR,0:SWITCH,0:DO,1:WHILE,0:ELSE,0	314
0x4000504	      0xb803000000	                              mov eax, 3	       441	testplug2.c	FUNCTION_9	IF_1
0x4000509	          0x4885ff	                           test rdi, rdi	       440	testplug2.c	FUNCTION_9	IF_1
0x400050c	     0xf84c8040000	                            je 0x40009da	       440	testplug2.c	FUNCTION_9	IF_1
0x4000512	              0x53	                                push rbx	       435	testplug2.c	FUNCTION_9
0x4000513	          0x4889fb	                            mov rbx, rdi	       435	testplug2.c	FUNCTION_9
0x4000516	          0x833f0b	                    cmp dword [rdi], 0xb	       445	testplug2.c	FUNCTION_9	IF_2
0x4000519	            0x750b	                           jne 0x4000526	       445	testplug2.c	FUNCTION_9	IF_2
0x400051b	        0x488b4708	                mov rax, qword [rdi + 8]	       446	testplug2.c	FUNCTION_9	IF_2
0x400051f	    0x488905000000	            mov qword [0x04000526], rax 	       446	testplug2.c	FUNCTION_9	IF_2
0x4000526	            0x8b03	                    mov eax, dword [rbx]	       372	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x4000528	          0x83e804	                              sub eax, 4	       372	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x400052b	          0x83f815	                           cmp eax, 0x15	       372	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x400052e	     0xf8734030000	                            ja 0x4000868	       372	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x4000534	            0x89c0	                            mov eax, eax	       372	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x4000536	    0xff24c5000000	                       jmp qword [rax*8]	       372	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x400053d	        0x488b4308	                mov rax, qword [rbx + 8]	       375	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1	CALL_1
0x4000541	      0xbe00000000	                              mov esi, 0	       327	testplug2.c	ELSE_4	FUNCTION_7	IF_1	CALL_1
0x4000546	      0xb905000000	                              mov ecx, 5	       327	testplug2.c	ELSE_4	FUNCTION_7	IF_1	CALL_1
0x400054b	          0x4889c7	                            mov rdi, rax	       327	testplug2.c	ELSE_4	FUNCTION_7	IF_1	CALL_1
0x400054e	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       327	testplug2.c	ELSE_4	FUNCTION_7	IF_1	CALL_1
0x4000550	           0xf97c1	                                 seta cl	       327	testplug2.c	ELSE_4	FUNCTION_7	IF_1	CALL_1
0x4000553	           0xf92c2	                                 setb dl	       327	testplug2.c	ELSE_4	FUNCTION_7	IF_1	CALL_1
0x4000556	            0x38d1	                              cmp cl, dl	       327	testplug2.c	ELSE_4	FUNCTION_7	IF_1	CALL_1
0x4000558	            0x752c	                           jne 0x4000586	       327	testplug2.c	ELSE_4	FUNCTION_7	IF_1	CALL_1
0x400055a	    0x488b15000000	            mov rdx, qword [0x04000561] 	       329	testplug2.c	ELSE_4	FUNCTION_7	IF_1
0x4000561	          0x4885d2	                           test rdx, rdx	       329	testplug2.c	ELSE_4	FUNCTION_7	IF_1
0x4000564	            0x7411	                            je 0x4000577	       329	testplug2.c	ELSE_4	FUNCTION_7	IF_1
0x4000566	      0xbe00000000	                              mov esi, 0	       329	testplug2.c	ELSE_4	FUNCTION_7	IF_1
0x400056b	      0xbf03000000	                              mov edi, 3	       329	testplug2.c	ELSE_4	FUNCTION_7	IF_1
0x4000570	      0xb800000000	                              mov eax, 0	       329	testplug2.c	ELSE_4	FUNCTION_7	IF_1
0x4000575	            0xffd2	                                call rdx	       329	testplug2.c	ELSE_4	FUNCTION_7	IF_1
0x4000577	      0xbf00000000	                              mov edi, 0	       330	testplug2.c	ELSE_4	FUNCTION_7	IF_1	CALL_2
0x400057c	      0xe800000000	                          call 0x4000581	       330	testplug2.c	ELSE_4	FUNCTION_7	IF_1	CALL_2
0x4000581	      0xe9ef020000	                           jmp 0x4000875	       330	testplug2.c	ELSE_4	FUNCTION_7	IF_1	CALL_2
0x4000586	      0xbe00000000	                              mov esi, 0	       332	testplug2.c	ELSE_4	FUNCTION_7	ELSE_1	IF_2	CALL_3
0x400058b	      0xb905000000	                              mov ecx, 5	       332	testplug2.c	ELSE_4	FUNCTION_7	ELSE_1	IF_2	CALL_3
0x4000590	          0x4889c7	                            mov rdi, rax	       332	testplug2.c	ELSE_4	FUNCTION_7	ELSE_1	IF_2	CALL_3
0x4000593	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       332	testplug2.c	ELSE_4	FUNCTION_7	ELSE_1	IF_2	CALL_3
0x4000595	           0xf97c1	                                 seta cl	       332	testplug2.c	ELSE_4	FUNCTION_7	ELSE_1	IF_2	CALL_3
0x4000598	           0xf92c2	                                 setb dl	       332	testplug2.c	ELSE_4	FUNCTION_7	ELSE_1	IF_2	CALL_3
0x400059b	            0x38d1	                              cmp cl, dl	       332	testplug2.c	ELSE_4	FUNCTION_7	ELSE_1	IF_2	CALL_3
0x400059d	            0x752c	                           jne 0x40005cb	       332	testplug2.c	ELSE_4	FUNCTION_7	ELSE_1	IF_2	CALL_3
0x400059f	    0x488b15000000	            mov rdx, qword [0x040005a6] 	       334	testplug2.c	ELSE_4	FUNCTION_7	ELSE_1	IF_2
0x40005a6	          0x4885d2	                           test rdx, rdx	       334	testplug2.c	ELSE_4	FUNCTION_7	ELSE_1	IF_2
0x40005a9	            0x7411	                            je 0x40005bc	       334	testplug2.c	ELSE_4	FUNCTION_7	ELSE_1	IF_2
0x40005ab	      0xbe00000000	                              mov esi, 0	       334	testplug2.c	ELSE_4	FUNCTION_7	ELSE_1	IF_2
0x40005b0	      0xbf02000000	                              mov edi, 2	       334	testplug2.c	ELSE_4	FUNCTION_7	ELSE_1	IF_2
0x40005b5	      0xb800000000	                              mov eax, 0	       334	testplug2.c	ELSE_4	FUNCTION_7	ELSE_1	IF_2
0x40005ba	            0xffd2	                                call rdx	       334	testplug2.c	ELSE_4	FUNCTION_7	ELSE_1	IF_2
0x40005bc	      0xbf00000000	                              mov edi, 0	       335	testplug2.c	ELSE_4	FUNCTION_7	ELSE_1	IF_2	CALL_4
0x40005c1	      0xe800000000	                          call 0x40005c6	       335	testplug2.c	ELSE_4	FUNCTION_7	ELSE_1	IF_2	CALL_4
0x40005c6	      0xe9aa020000	                           jmp 0x4000875	       335	testplug2.c	ELSE_4	FUNCTION_7	ELSE_1	IF_2	CALL_4
0x40005cb	      0xbe00000000	                              mov esi, 0	       337	testplug2.c	ELSE_4	FUNCTION_7	ELSE_2	IF_3	CALL_5
0x40005d0	      0xb907000000	                              mov ecx, 7	       337	testplug2.c	ELSE_4	FUNCTION_7	ELSE_2	IF_3	CALL_5
0x40005d5	          0x4889c7	                            mov rdi, rax	       337	testplug2.c	ELSE_4	FUNCTION_7	ELSE_2	IF_3	CALL_5
0x40005d8	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       337	testplug2.c	ELSE_4	FUNCTION_7	ELSE_2	IF_3	CALL_5
0x40005da	           0xf97c1	                                 seta cl	       337	testplug2.c	ELSE_4	FUNCTION_7	ELSE_2	IF_3	CALL_5
0x40005dd	           0xf92c2	                                 setb dl	       337	testplug2.c	ELSE_4	FUNCTION_7	ELSE_2	IF_3	CALL_5
0x40005e0	            0x38d1	                              cmp cl, dl	       337	testplug2.c	ELSE_4	FUNCTION_7	ELSE_2	IF_3	CALL_5
0x40005e2	            0x752c	                           jne 0x4000610	       337	testplug2.c	ELSE_4	FUNCTION_7	ELSE_2	IF_3	CALL_5
0x40005e4	    0x488b15000000	            mov rdx, qword [0x040005eb] 	       339	testplug2.c	ELSE_4	FUNCTION_7	ELSE_2	IF_3
0x40005eb	          0x4885d2	                           test rdx, rdx	       339	testplug2.c	ELSE_4	FUNCTION_7	ELSE_2	IF_3
0x40005ee	            0x7411	                            je 0x4000601	       339	testplug2.c	ELSE_4	FUNCTION_7	ELSE_2	IF_3
0x40005f0	      0xbe00000000	                              mov esi, 0	       339	testplug2.c	ELSE_4	FUNCTION_7	ELSE_2	IF_3
0x40005f5	      0xbf01000000	                              mov edi, 1	       339	testplug2.c	ELSE_4	FUNCTION_7	ELSE_2	IF_3
0x40005fa	      0xb800000000	                              mov eax, 0	       339	testplug2.c	ELSE_4	FUNCTION_7	ELSE_2	IF_3
0x40005ff	            0xffd2	                                call rdx	       339	testplug2.c	ELSE_4	FUNCTION_7	ELSE_2	IF_3
0x4000601	      0xbf00000000	                              mov edi, 0	       340	testplug2.c	ELSE_4	FUNCTION_7	ELSE_2	IF_3	CALL_6
0x4000606	      0xe800000000	                          call 0x400060b	       340	testplug2.c	ELSE_4	FUNCTION_7	ELSE_2	IF_3	CALL_6
0x400060b	      0xe965020000	                           jmp 0x4000875	       340	testplug2.c	ELSE_4	FUNCTION_7	ELSE_2	IF_3	CALL_6
0x4000610	      0xbe00000000	                              mov esi, 0	       342	testplug2.c	ELSE_4	FUNCTION_7	ELSE_3	IF_4	CALL_7
0x4000615	      0xb904000000	                              mov ecx, 4	       342	testplug2.c	ELSE_4	FUNCTION_7	ELSE_3	IF_4	CALL_7
0x400061a	          0x4889c7	                            mov rdi, rax	       342	testplug2.c	ELSE_4	FUNCTION_7	ELSE_3	IF_4	CALL_7
0x400061d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       342	testplug2.c	ELSE_4	FUNCTION_7	ELSE_3	IF_4	CALL_7
0x400061f	           0xf97c1	                                 seta cl	       342	testplug2.c	ELSE_4	FUNCTION_7	ELSE_3	IF_4	CALL_7
0x4000622	           0xf92c2	                                 setb dl	       342	testplug2.c	ELSE_4	FUNCTION_7	ELSE_3	IF_4	CALL_7
0x4000625	            0x38d1	                              cmp cl, dl	       342	testplug2.c	ELSE_4	FUNCTION_7	ELSE_3	IF_4	CALL_7
0x4000627	            0x7513	                           jne 0x400063c	       342	testplug2.c	ELSE_4	FUNCTION_7	ELSE_3	IF_4	CALL_7
0x4000629	        0x488d7804	                      lea rdi, [rax + 4]	       343	testplug2.c	ELSE_4	FUNCTION_7	ELSE_3	IF_4
0x400062d	      0xbe03000000	                              mov esi, 3	       343	testplug2.c	ELSE_4	FUNCTION_7	ELSE_3	IF_4
0x4000632	      0xe83ffaffff	                    call sym.set_ret_val	       343	testplug2.c	ELSE_4	FUNCTION_7	ELSE_3	IF_4
0x4000637	      0xe931020000	                           jmp 0x400086d	       343	testplug2.c	ELSE_4	FUNCTION_7	ELSE_3	IF_4
0x400063c	      0xbe00000000	                              mov esi, 0	       344	testplug2.c	FUNCTION_7	IF_5	CALL_9
0x4000641	      0xb904000000	                              mov ecx, 4	       344	testplug2.c	FUNCTION_7	IF_5	CALL_9
0x4000646	          0x4889c7	                            mov rdi, rax	       344	testplug2.c	FUNCTION_7	IF_5	CALL_9
0x4000649	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       344	testplug2.c	FUNCTION_7	IF_5	CALL_9
0x400064b	           0xf97c1	                                 seta cl	       344	testplug2.c	FUNCTION_7	IF_5	CALL_9
0x400064e	           0xf92c2	                                 setb dl	       344	testplug2.c	FUNCTION_7	IF_5	CALL_9
0x4000651	            0x38d1	                              cmp cl, dl	       344	testplug2.c	FUNCTION_7	IF_5	CALL_9
0x4000653	            0x7513	                           jne 0x4000668	       344	testplug2.c	FUNCTION_7	IF_5	CALL_9
0x4000655	        0x488d7804	                      lea rdi, [rax + 4]	       345	testplug2.c	FUNCTION_7	ELSE_4	CALL_10
0x4000659	      0xbe00000000	                              mov esi, 0	       345	testplug2.c	FUNCTION_7	ELSE_4	CALL_10
0x400065e	      0xe813faffff	                    call sym.set_ret_val	       345	testplug2.c	FUNCTION_7	ELSE_4	CALL_10
0x4000663	      0xe905020000	                           jmp 0x400086d	       345	testplug2.c	FUNCTION_7	ELSE_4	CALL_10
0x4000668	      0xbe00000000	                              mov esi, 0	       346	testplug2.c	FUNCTION_7	ELSE_4	ELSE_5	IF_6	CALL_11
0x400066d	      0xb908000000	                              mov ecx, 8	       346	testplug2.c	FUNCTION_7	ELSE_4	ELSE_5	IF_6	CALL_11
0x4000672	          0x4889c7	                            mov rdi, rax	       346	testplug2.c	FUNCTION_7	ELSE_4	ELSE_5	IF_6	CALL_11
0x4000675	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       346	testplug2.c	FUNCTION_7	ELSE_4	ELSE_5	IF_6	CALL_11
0x4000677	           0xf97c1	                                 seta cl	       346	testplug2.c	FUNCTION_7	ELSE_4	ELSE_5	IF_6	CALL_11
0x400067a	           0xf92c2	                                 setb dl	       346	testplug2.c	FUNCTION_7	ELSE_4	ELSE_5	IF_6	CALL_11
0x400067d	            0x38d1	                              cmp cl, dl	       346	testplug2.c	FUNCTION_7	ELSE_4	ELSE_5	IF_6	CALL_11
0x400067f	            0x7513	                           jne 0x4000694	       346	testplug2.c	FUNCTION_7	ELSE_4	ELSE_5	IF_6	CALL_11
0x4000681	        0x488d7808	                      lea rdi, [rax + 8]	       347	testplug2.c	FUNCTION_7	ELSE_4	ELSE_5	IF_6
0x4000685	      0xbe01000000	                              mov esi, 1	       347	testplug2.c	FUNCTION_7	ELSE_4	ELSE_5	IF_6
0x400068a	      0xe888faffff	              call sym.set_register_hook	       347	testplug2.c	FUNCTION_7	ELSE_4	ELSE_5	IF_6
0x400068f	      0xe9d9010000	                           jmp 0x400086d	       347	testplug2.c	FUNCTION_7	ELSE_4	ELSE_5	IF_6
0x4000694	      0xbe00000000	                              mov esi, 0	       348	testplug2.c	FUNCTION_7	ELSE_4	ELSE_6	IF_7	CALL_13
0x4000699	      0xb90a000000	                            mov ecx, 0xa	       348	testplug2.c	FUNCTION_7	ELSE_4	ELSE_6	IF_7	CALL_13
0x400069e	          0x4889c7	                            mov rdi, rax	       348	testplug2.c	FUNCTION_7	ELSE_4	ELSE_6	IF_7	CALL_13
0x40006a1	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       348	testplug2.c	FUNCTION_7	ELSE_4	ELSE_6	IF_7	CALL_13
0x40006a3	           0xf97c1	                                 seta cl	       348	testplug2.c	FUNCTION_7	ELSE_4	ELSE_6	IF_7	CALL_13
0x40006a6	           0xf92c2	                                 setb dl	       348	testplug2.c	FUNCTION_7	ELSE_4	ELSE_6	IF_7	CALL_13
0x40006a9	            0x38d1	                              cmp cl, dl	       348	testplug2.c	FUNCTION_7	ELSE_4	ELSE_6	IF_7	CALL_13
0x40006ab	            0x7513	                           jne 0x40006c0	       348	testplug2.c	FUNCTION_7	ELSE_4	ELSE_6	IF_7	CALL_13
0x40006ad	        0x488d780a	                    lea rdi, [rax + 0xa]	       349	testplug2.c	FUNCTION_7	ELSE_4	ELSE_6	IF_7
0x40006b1	      0xbe00000000	                              mov esi, 0	       349	testplug2.c	FUNCTION_7	ELSE_4	ELSE_6	IF_7
0x40006b6	      0xe85cfaffff	              call sym.set_register_hook	       349	testplug2.c	FUNCTION_7	ELSE_4	ELSE_6	IF_7
0x40006bb	      0xe9ad010000	                           jmp 0x400086d	       349	testplug2.c	FUNCTION_7	ELSE_4	ELSE_6	IF_7
0x40006c0	      0xbe00000000	                              mov esi, 0	       350	testplug2.c	FUNCTION_7	ELSE_4	ELSE_7	IF_8	CALL_15
0x40006c5	      0xb906000000	                              mov ecx, 6	       350	testplug2.c	FUNCTION_7	ELSE_4	ELSE_7	IF_8	CALL_15
0x40006ca	          0x4889c7	                            mov rdi, rax	       350	testplug2.c	FUNCTION_7	ELSE_4	ELSE_7	IF_8	CALL_15
0x40006cd	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       350	testplug2.c	FUNCTION_7	ELSE_4	ELSE_7	IF_8	CALL_15
0x40006cf	           0xf97c1	                                 seta cl	       350	testplug2.c	FUNCTION_7	ELSE_4	ELSE_7	IF_8	CALL_15
0x40006d2	           0xf92c2	                                 setb dl	       350	testplug2.c	FUNCTION_7	ELSE_4	ELSE_7	IF_8	CALL_15
0x40006d5	            0x38d1	                              cmp cl, dl	       350	testplug2.c	FUNCTION_7	ELSE_4	ELSE_7	IF_8	CALL_15
0x40006d7	            0x7513	                           jne 0x40006ec	       350	testplug2.c	FUNCTION_7	ELSE_4	ELSE_7	IF_8	CALL_15
0x40006d9	        0x488d7806	                      lea rdi, [rax + 6]	       351	testplug2.c	FUNCTION_7	ELSE_4	ELSE_7	IF_8
0x40006dd	      0xbe00000000	                              mov esi, 0	       351	testplug2.c	FUNCTION_7	ELSE_4	ELSE_7	IF_8
0x40006e2	      0xe828fbffff	              call sym.record_claim_file	       351	testplug2.c	FUNCTION_7	ELSE_4	ELSE_7	IF_8
0x40006e7	      0xe981010000	                           jmp 0x400086d	       351	testplug2.c	FUNCTION_7	ELSE_4	ELSE_7	IF_8
0x40006ec	      0xbe00000000	                              mov esi, 0	       352	testplug2.c	FUNCTION_7	ELSE_4	ELSE_8	IF_9	CALL_17
0x40006f1	      0xb904000000	                              mov ecx, 4	       352	testplug2.c	FUNCTION_7	ELSE_4	ELSE_8	IF_9	CALL_17
0x40006f6	          0x4889c7	                            mov rdi, rax	       352	testplug2.c	FUNCTION_7	ELSE_4	ELSE_8	IF_9	CALL_17
0x40006f9	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       352	testplug2.c	FUNCTION_7	ELSE_4	ELSE_8	IF_9	CALL_17
0x40006fb	           0xf97c1	                                 seta cl	       352	testplug2.c	FUNCTION_7	ELSE_4	ELSE_8	IF_9	CALL_17
0x40006fe	           0xf92c2	                                 setb dl	       352	testplug2.c	FUNCTION_7	ELSE_4	ELSE_8	IF_9	CALL_17
0x4000701	            0x38d1	                              cmp cl, dl	       352	testplug2.c	FUNCTION_7	ELSE_4	ELSE_8	IF_9	CALL_17
0x4000703	            0x750e	                           jne 0x4000713	       352	testplug2.c	FUNCTION_7	ELSE_4	ELSE_8	IF_9	CALL_17
0x4000705	        0x488d7804	                      lea rdi, [rax + 4]	       353	testplug2.c	FUNCTION_7	ELSE_4	ELSE_8	IF_9
0x4000709	      0xe860fbffff	     call sym.record_claimed_file_symbol	       353	testplug2.c	FUNCTION_7	ELSE_4	ELSE_8	IF_9
0x400070e	      0xe95a010000	                           jmp 0x400086d	       353	testplug2.c	FUNCTION_7	ELSE_4	ELSE_8	IF_9
0x4000713	      0xbe00000000	                              mov esi, 0	       354	testplug2.c	FUNCTION_7	ELSE_4	ELSE_9	IF_10	CALL_19
0x4000718	      0xb904000000	                              mov ecx, 4	       354	testplug2.c	FUNCTION_7	ELSE_4	ELSE_9	IF_10	CALL_19
0x400071d	          0x4889c7	                            mov rdi, rax	       354	testplug2.c	FUNCTION_7	ELSE_4	ELSE_9	IF_10	CALL_19
0x4000720	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       354	testplug2.c	FUNCTION_7	ELSE_4	ELSE_9	IF_10	CALL_19
0x4000722	           0xf97c1	                                 seta cl	       354	testplug2.c	FUNCTION_7	ELSE_4	ELSE_9	IF_10	CALL_19
0x4000725	           0xf92c2	                                 setb dl	       354	testplug2.c	FUNCTION_7	ELSE_4	ELSE_9	IF_10	CALL_19
0x4000728	            0x38d1	                              cmp cl, dl	       354	testplug2.c	FUNCTION_7	ELSE_4	ELSE_9	IF_10	CALL_19
0x400072a	            0x7513	                           jne 0x400073f	       354	testplug2.c	FUNCTION_7	ELSE_4	ELSE_9	IF_10	CALL_19
0x400072c	        0x488d7804	                      lea rdi, [rax + 4]	       355	testplug2.c	FUNCTION_7	ELSE_4	ELSE_9	IF_10
0x4000730	      0xbe00000000	                              mov esi, 0	       355	testplug2.c	FUNCTION_7	ELSE_4	ELSE_9	IF_10
0x4000735	      0xe888faffff	                call sym.record_add_file	       355	testplug2.c	FUNCTION_7	ELSE_4	ELSE_9	IF_10
0x400073a	      0xe92e010000	                           jmp 0x400086d	       355	testplug2.c	FUNCTION_7	ELSE_4	ELSE_9	IF_10
0x400073f	      0xbe00000000	                              mov esi, 0	       356	testplug2.c	FUNCTION_7	ELSE_4	ELSE_10	IF_11	CALL_21
0x4000744	      0xb904000000	                              mov ecx, 4	       356	testplug2.c	FUNCTION_7	ELSE_4	ELSE_10	IF_11	CALL_21
0x4000749	          0x4889c7	                            mov rdi, rax	       356	testplug2.c	FUNCTION_7	ELSE_4	ELSE_10	IF_11	CALL_21
0x400074c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       356	testplug2.c	FUNCTION_7	ELSE_4	ELSE_10	IF_11	CALL_21
0x400074e	           0xf97c1	                                 seta cl	       356	testplug2.c	FUNCTION_7	ELSE_4	ELSE_10	IF_11	CALL_21
0x4000751	           0xf92c2	                                 setb dl	       356	testplug2.c	FUNCTION_7	ELSE_4	ELSE_10	IF_11	CALL_21
0x4000754	            0x38d1	                              cmp cl, dl	       356	testplug2.c	FUNCTION_7	ELSE_4	ELSE_10	IF_11	CALL_21
0x4000756	            0x7513	                           jne 0x400076b	       356	testplug2.c	FUNCTION_7	ELSE_4	ELSE_10	IF_11	CALL_21
0x4000758	        0x488d7804	                      lea rdi, [rax + 4]	       357	testplug2.c	FUNCTION_7	ELSE_4	ELSE_10	IF_11
0x400075c	      0xbe01000000	                              mov esi, 1	       357	testplug2.c	FUNCTION_7	ELSE_4	ELSE_10	IF_11
0x4000761	      0xe85cfaffff	                call sym.record_add_file	       357	testplug2.c	FUNCTION_7	ELSE_4	ELSE_10	IF_11
0x4000766	      0xe902010000	                           jmp 0x400086d	       357	testplug2.c	FUNCTION_7	ELSE_4	ELSE_10	IF_11
0x400076b	      0xbe00000000	                              mov esi, 0	       358	testplug2.c	FUNCTION_7	ELSE_4	ELSE_11	IF_12	CALL_23
0x4000770	      0xb904000000	                              mov ecx, 4	       358	testplug2.c	FUNCTION_7	ELSE_4	ELSE_11	IF_12	CALL_23
0x4000775	          0x4889c7	                            mov rdi, rax	       358	testplug2.c	FUNCTION_7	ELSE_4	ELSE_11	IF_12	CALL_23
0x4000778	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       358	testplug2.c	FUNCTION_7	ELSE_4	ELSE_11	IF_12	CALL_23
0x400077a	           0xf97c1	                                 seta cl	       358	testplug2.c	FUNCTION_7	ELSE_4	ELSE_11	IF_12	CALL_23
0x400077d	           0xf92c2	                                 setb dl	       358	testplug2.c	FUNCTION_7	ELSE_4	ELSE_11	IF_12	CALL_23
0x4000780	            0x38d1	                              cmp cl, dl	       358	testplug2.c	FUNCTION_7	ELSE_4	ELSE_11	IF_12	CALL_23
0x4000782	            0x7513	                           jne 0x4000797	       358	testplug2.c	FUNCTION_7	ELSE_4	ELSE_11	IF_12	CALL_23
0x4000784	        0x488d7804	                      lea rdi, [rax + 4]	       359	testplug2.c	FUNCTION_7	ELSE_4	ELSE_11	IF_12
0x4000788	      0xbe02000000	                              mov esi, 2	       359	testplug2.c	FUNCTION_7	ELSE_4	ELSE_11	IF_12
0x400078d	      0xe830faffff	                call sym.record_add_file	       359	testplug2.c	FUNCTION_7	ELSE_4	ELSE_11	IF_12
0x4000792	      0xe9d6000000	                           jmp 0x400086d	       359	testplug2.c	FUNCTION_7	ELSE_4	ELSE_11	IF_12
0x4000797	      0xbe00000000	                              mov esi, 0	       360	testplug2.c	FUNCTION_7	ELSE_4	ELSE_12	IF_13	CALL_25
0x400079c	      0xb910000000	                           mov ecx, 0x10	       360	testplug2.c	FUNCTION_7	ELSE_4	ELSE_12	IF_13	CALL_25
0x40007a1	          0x4889c7	                            mov rdi, rax	       360	testplug2.c	FUNCTION_7	ELSE_4	ELSE_12	IF_13	CALL_25
0x40007a4	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       360	testplug2.c	FUNCTION_7	ELSE_4	ELSE_12	IF_13	CALL_25
0x40007a6	           0xf97c2	                                 seta dl	       360	testplug2.c	FUNCTION_7	ELSE_4	ELSE_12	IF_13	CALL_25
0x40007a9	           0xf92c0	                                 setb al	       360	testplug2.c	FUNCTION_7	ELSE_4	ELSE_12	IF_13	CALL_25
0x40007ac	            0x38c2	                              cmp dl, al	       360	testplug2.c	FUNCTION_7	ELSE_4	ELSE_12	IF_13	CALL_25
0x40007ae	     0xf8520020000	                           jne 0x40009d4	       360	testplug2.c	FUNCTION_7	ELSE_4	ELSE_12	IF_13	CALL_25
0x40007b4	    0xc70500000000	               mov dword [0x040007be], 1	       361	testplug2.c	FUNCTION_7	ELSE_4	ELSE_12	IF_13
0x40007be	      0xe9b2000000	                           jmp 0x4000875	       361	testplug2.c	FUNCTION_7	ELSE_4	ELSE_12	IF_13
0x40007c3	        0x488b4308	                mov rax, qword [rbx + 8]	       389	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x40007c7	    0x488905000000	            mov qword [0x040007ce], rax 	       389	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x40007ce	      0xe9a2000000	                           jmp 0x4000875	       389	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x40007d3	        0x488b4308	                mov rax, qword [rbx + 8]	       392	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x40007d7	    0x488905000000	            mov qword [0x040007de], rax 	       392	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x40007de	      0xe992000000	                           jmp 0x4000875	       392	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x40007e3	        0x488b4308	                mov rax, qword [rbx + 8]	       395	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x40007e7	    0x488905000000	            mov qword [0x040007ee], rax 	       395	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x40007ee	      0xe982000000	                           jmp 0x4000875	       395	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x40007f3	        0x488b4308	                mov rax, qword [rbx + 8]	       398	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x40007f7	    0x488905000000	            mov qword [0x040007fe], rax 	       398	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x40007fe	            0xeb75	                           jmp 0x4000875	       398	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x4000800	        0x488b4308	                mov rax, qword [rbx + 8]	       404	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x4000804	    0x488905000000	            mov qword [0x0400080b], rax 	       404	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x400080b	            0xeb68	                           jmp 0x4000875	       404	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x400080d	        0x488b4308	                mov rax, qword [rbx + 8]	       407	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x4000811	    0x488905000000	            mov qword [0x04000818], rax 	       407	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x4000818	            0xeb5b	                           jmp 0x4000875	       407	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x400081a	        0x488b4308	                mov rax, qword [rbx + 8]	       410	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x400081e	    0x488905000000	            mov qword [0x04000825], rax 	       410	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x4000825	            0xeb4e	                           jmp 0x4000875	       410	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x4000827	        0x488b4308	                mov rax, qword [rbx + 8]	       413	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x400082b	    0x488905000000	            mov qword [0x04000832], rax 	       413	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x4000832	            0xeb41	                           jmp 0x4000875	       413	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x4000834	        0x488b4308	                mov rax, qword [rbx + 8]	       416	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x4000838	    0x488905000000	            mov qword [0x0400083f], rax 	       416	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x400083f	            0xeb34	                           jmp 0x4000875	       416	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x4000841	        0x488b4308	                mov rax, qword [rbx + 8]	       419	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x4000845	    0x488905000000	            mov qword [0x0400084c], rax 	       419	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x400084c	            0xeb27	                           jmp 0x4000875	       419	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x400084e	        0x488b4308	                mov rax, qword [rbx + 8]	       422	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x4000852	    0x488905000000	            mov qword [0x04000859], rax 	       422	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x4000859	            0xeb1a	                           jmp 0x4000875	       422	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x400085b	        0x488b4308	                mov rax, qword [rbx + 8]	       425	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x400085f	    0x488905000000	            mov qword [0x04000866], rax 	       425	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x4000866	            0xeb0d	                           jmp 0x4000875	       425	testplug2.c	ELSE_13	FUNCTION_8	SWITCH_1
0x4000868	      0xb800000000	                              mov eax, 0	       429	testplug2.c	ELSE_13	FUNCTION_8
0x400086d	            0x85c0	                           test eax, eax	       449	testplug2.c	FUNCTION_9	DO_1	IF_3	CALL_1
0x400086f	     0xf8564010000	                           jne 0x40009d9	       449	testplug2.c	FUNCTION_9	DO_1	IF_3	CALL_1
0x4000875	        0x4883c310	                           add rbx, 0x10	       451	testplug2.c	FUNCTION_9
0x4000879	        0x837bf000	               cmp dword [rbx - 0x10], 0	       451	testplug2.c	FUNCTION_9
0x400087d	     0xf85a3fcffff	                           jne 0x4000526	       451	testplug2.c	FUNCTION_9
0x4000883	    0x833d00000000	               cmp dword [0x0400088a], 0	       454	testplug2.c	FUNCTION_9	IF_4
0x400088a	            0x743f	                            je 0x40008cb	       454	testplug2.c	FUNCTION_9	IF_4
0x400088c	    0x488b05000000	            mov rax, qword [0x04000893] 	       456	testplug2.c	FUNCTION_9	IF_4	IF_5
0x4000893	          0x4885c0	                           test rax, rax	       456	testplug2.c	FUNCTION_9	IF_4	IF_5
0x4000896	            0x752c	                           jne 0x40008c4	       456	testplug2.c	FUNCTION_9	IF_4	IF_5
0x4000898	    0x488b15000000	            mov rdx, qword [0x0400089f] 	       458	testplug2.c	FUNCTION_9	IF_4	IF_5
0x400089f	          0x4885d2	                           test rdx, rdx	       458	testplug2.c	FUNCTION_9	IF_4	IF_5
0x40008a2	            0x740c	                            je 0x40008b0	       458	testplug2.c	FUNCTION_9	IF_4	IF_5
0x40008a4	      0xbe00000000	                              mov esi, 0	       458	testplug2.c	FUNCTION_9	IF_4	IF_5
0x40008a9	      0xbf03000000	                              mov edi, 3	       458	testplug2.c	FUNCTION_9	IF_4	IF_5
0x40008ae	            0xffd2	                                call rdx	       458	testplug2.c	FUNCTION_9	IF_4	IF_5
0x40008b0	      0xbf00000000	                              mov edi, 0	       459	testplug2.c	FUNCTION_9	IF_4	IF_5	CALL_2
0x40008b5	      0xe800000000	                          call 0x40008ba	       459	testplug2.c	FUNCTION_9	IF_4	IF_5	CALL_2
0x40008ba	      0xb803000000	                              mov eax, 3	       460	testplug2.c	FUNCTION_9	IF_4	IF_5
0x40008bf	      0xe915010000	                           jmp 0x40009d9	       460	testplug2.c	FUNCTION_9	IF_4	IF_5
0x40008c4	      0xbf00000000	                              mov edi, 0	       462	testplug2.c	FUNCTION_9	IF_4
0x40008c9	            0xffd0	                                call rax	       462	testplug2.c	FUNCTION_9	IF_4
0x40008cb	    0x833d00000000	               cmp dword [0x040008d2], 0	       464	testplug2.c	FUNCTION_9	IF_6
0x40008d2	            0x743f	                            je 0x4000913	       464	testplug2.c	FUNCTION_9	IF_6
0x40008d4	    0x488b05000000	            mov rax, qword [0x040008db] 	       466	testplug2.c	FUNCTION_9	IF_6	IF_7
0x40008db	          0x4885c0	                           test rax, rax	       466	testplug2.c	FUNCTION_9	IF_6	IF_7
0x40008de	            0x752c	                           jne 0x400090c	       466	testplug2.c	FUNCTION_9	IF_6	IF_7
0x40008e0	    0x488b15000000	            mov rdx, qword [0x040008e7] 	       468	testplug2.c	FUNCTION_9	IF_6	IF_7
0x40008e7	          0x4885d2	                           test rdx, rdx	       468	testplug2.c	FUNCTION_9	IF_6	IF_7
0x40008ea	            0x740c	                            je 0x40008f8	       468	testplug2.c	FUNCTION_9	IF_6	IF_7
0x40008ec	      0xbe00000000	                              mov esi, 0	       468	testplug2.c	FUNCTION_9	IF_6	IF_7
0x40008f1	      0xbf03000000	                              mov edi, 3	       468	testplug2.c	FUNCTION_9	IF_6	IF_7
0x40008f6	            0xffd2	                                call rdx	       468	testplug2.c	FUNCTION_9	IF_6	IF_7
0x40008f8	      0xbf00000000	                              mov edi, 0	       469	testplug2.c	FUNCTION_9	IF_6	IF_7	CALL_3
0x40008fd	      0xe800000000	                          call 0x4000902	       469	testplug2.c	FUNCTION_9	IF_6	IF_7	CALL_3
0x4000902	      0xb803000000	                              mov eax, 3	       470	testplug2.c	FUNCTION_9	IF_6	IF_7
0x4000907	      0xe9cd000000	                           jmp 0x40009d9	       470	testplug2.c	FUNCTION_9	IF_6	IF_7
0x400090c	      0xbf00000000	                              mov edi, 0	       472	testplug2.c	FUNCTION_9	IF_6
0x4000911	            0xffd0	                                call rax	       472	testplug2.c	FUNCTION_9	IF_6
0x4000913	    0x833d00000000	               cmp dword [0x0400091a], 0	       474	testplug2.c	FUNCTION_9	IF_8
0x400091a	            0x743f	                            je 0x400095b	       474	testplug2.c	FUNCTION_9	IF_8
0x400091c	    0x488b05000000	            mov rax, qword [0x04000923] 	       476	testplug2.c	FUNCTION_9	IF_8	IF_9
0x4000923	          0x4885c0	                           test rax, rax	       476	testplug2.c	FUNCTION_9	IF_8	IF_9
0x4000926	            0x752c	                           jne 0x4000954	       476	testplug2.c	FUNCTION_9	IF_8	IF_9
0x4000928	    0x488b15000000	            mov rdx, qword [0x0400092f] 	       478	testplug2.c	FUNCTION_9	IF_8	IF_9
0x400092f	          0x4885d2	                           test rdx, rdx	       478	testplug2.c	FUNCTION_9	IF_8	IF_9
0x4000932	            0x740c	                            je 0x4000940	       478	testplug2.c	FUNCTION_9	IF_8	IF_9
0x4000934	      0xbe00000000	                              mov esi, 0	       478	testplug2.c	FUNCTION_9	IF_8	IF_9
0x4000939	      0xbf03000000	                              mov edi, 3	       478	testplug2.c	FUNCTION_9	IF_8	IF_9
0x400093e	            0xffd2	                                call rdx	       478	testplug2.c	FUNCTION_9	IF_8	IF_9
0x4000940	      0xbf00000000	                              mov edi, 0	       479	testplug2.c	FUNCTION_9	IF_8	IF_9	CALL_4
0x4000945	      0xe800000000	                          call 0x400094a	       479	testplug2.c	FUNCTION_9	IF_8	IF_9	CALL_4
0x400094a	      0xb803000000	                              mov eax, 3	       480	testplug2.c	FUNCTION_9	IF_8	IF_9
0x400094f	      0xe985000000	                           jmp 0x40009d9	       480	testplug2.c	FUNCTION_9	IF_8	IF_9
0x4000954	      0xbf00000000	                              mov edi, 0	       482	testplug2.c	FUNCTION_9	IF_8
0x4000959	            0xffd0	                                call rax	       482	testplug2.c	FUNCTION_9	IF_8
0x400095b	    0x833d00000000	               cmp dword [0x04000962], 0	       488	testplug2.c	FUNCTION_9	IF_10
0x4000962	            0x7568	                           jne 0x40009cc	       488	testplug2.c	FUNCTION_9	IF_10
0x4000964	      0xbef8000000	                           mov esi, 0xf8	       489	testplug2.c	FUNCTION_9	IF_10	CALL_5
0x4000969	      0xbf00000000	                              mov edi, 0	       489	testplug2.c	FUNCTION_9	IF_10	CALL_5
0x400096e	      0xe89cf8ffff	              call sym.record_claim_file	       489	testplug2.c	FUNCTION_9	IF_10	CALL_5
0x4000973	            0x85c0	                           test eax, eax	       489	testplug2.c	FUNCTION_9	IF_10	CALL_5
0x4000975	            0x754b	                           jne 0x40009c2	       489	testplug2.c	FUNCTION_9	IF_10	CALL_5
0x4000977	      0xbf00000000	                              mov edi, 0	       490	testplug2.c	FUNCTION_9	IF_10	CALL_6
0x400097c	      0xe8edf8ffff	     call sym.record_claimed_file_symbol	       490	testplug2.c	FUNCTION_9	IF_10	CALL_6
0x4000981	            0x85c0	                           test eax, eax	       490	testplug2.c	FUNCTION_9	IF_10	CALL_6
0x4000983	            0x753d	                           jne 0x40009c2	       490	testplug2.c	FUNCTION_9	IF_10	CALL_6
0x4000985	      0xbf00000000	                              mov edi, 0	       491	testplug2.c	FUNCTION_9	IF_10	CALL_7
0x400098a	      0xe8dff8ffff	     call sym.record_claimed_file_symbol	       491	testplug2.c	FUNCTION_9	IF_10	CALL_7
0x400098f	            0x85c0	                           test eax, eax	       491	testplug2.c	FUNCTION_9	IF_10	CALL_7
0x4000991	            0x752f	                           jne 0x40009c2	       491	testplug2.c	FUNCTION_9	IF_10	CALL_7
0x4000993	      0xbef8000000	                           mov esi, 0xf8	       492	testplug2.c	FUNCTION_9	IF_10	CALL_8
0x4000998	      0xbf00000000	                              mov edi, 0	       492	testplug2.c	FUNCTION_9	IF_10	CALL_8
0x400099d	      0xe86df8ffff	              call sym.record_claim_file	       492	testplug2.c	FUNCTION_9	IF_10	CALL_8
0x40009a2	            0x85c0	                           test eax, eax	       492	testplug2.c	FUNCTION_9	IF_10	CALL_8
0x40009a4	            0x751c	                           jne 0x40009c2	       492	testplug2.c	FUNCTION_9	IF_10	CALL_8
0x40009a6	      0xbf00000000	                              mov edi, 0	       493	testplug2.c	FUNCTION_9	IF_10	CALL_9
0x40009ab	      0xe8bef8ffff	     call sym.record_claimed_file_symbol	       493	testplug2.c	FUNCTION_9	IF_10	CALL_9
0x40009b0	            0x85c0	                           test eax, eax	       493	testplug2.c	FUNCTION_9	IF_10	CALL_9
0x40009b2	            0x750e	                           jne 0x40009c2	       493	testplug2.c	FUNCTION_9	IF_10	CALL_9
0x40009b4	      0xbf00000000	                              mov edi, 0	       494	testplug2.c	FUNCTION_9	IF_10	CALL_10
0x40009b9	      0xe8b0f8ffff	     call sym.record_claimed_file_symbol	       494	testplug2.c	FUNCTION_9	IF_10	CALL_10
0x40009be	            0x85c0	                           test eax, eax	       494	testplug2.c	FUNCTION_9	IF_10	CALL_10
0x40009c0	            0x740a	                            je 0x40009cc	       494	testplug2.c	FUNCTION_9	IF_10	CALL_10
0x40009c2	    0xc70500000000	               mov dword [0x040009cc], 3	       495	testplug2.c	FUNCTION_9	IF_10
0x40009cc	    0x8b0500000000	            mov eax, dword [0x040009d2] 	       497	testplug2.c	FUNCTION_9
0x40009d2	            0xeb05	                           jmp 0x40009d9	       497	testplug2.c	FUNCTION_9
0x40009d4	      0xb803000000	                              mov eax, 3	       363	testplug2.c	FUNCTION_7	ELSE_4	ELSE_13
0x40009d9	              0x5b	                                 pop rbx	       498	testplug2.c	FUNCTION_9
0x40009da	            0xf3c3	                                     ret	       498	testplug2.c	FUNCTION_9
record_add_file	functions,0:IF,1:CALL,1:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,0	22
0x40001c2	              0x55	                                push rbp	       169	testplug2.c	FUNCTION_2
0x40001c3	              0x53	                                push rbx	       169	testplug2.c	FUNCTION_2
0x40001c4	        0x4883ec08	                              sub rsp, 8	       169	testplug2.c	FUNCTION_2
0x40001c8	          0x4889fd	                            mov rbp, rdi	       169	testplug2.c	FUNCTION_2
0x40001cb	            0x89f3	                            mov ebx, esi	       169	testplug2.c	FUNCTION_2
0x40001cd	      0xbf18000000	                           mov edi, 0x18	       172	testplug2.c	FUNCTION_2	CALL_1
0x40001d2	      0xe800000000	                          call 0x40001d7	       172	testplug2.c	FUNCTION_2	CALL_1
0x40001d7	          0x4889c2	                            mov rdx, rax	       172	testplug2.c	FUNCTION_2	CALL_1
0x40001da	      0xb803000000	                              mov eax, 3	       174	testplug2.c	FUNCTION_2	IF_1
0x40001df	          0x4885d2	                           test rdx, rdx	       173	testplug2.c	FUNCTION_2	IF_1
0x40001e2	            0x7424	                            je 0x4000208	       173	testplug2.c	FUNCTION_2	IF_1
0x40001e4	    0x48c702000000	                      mov qword [rdx], 0	       175	testplug2.c	FUNCTION_2
0x40001eb	        0x48896a08	                mov qword [rdx + 8], rbp	       176	testplug2.c	FUNCTION_2
0x40001ef	          0x895a10	             mov dword [rdx + 0x10], ebx	       177	testplug2.c	FUNCTION_2
0x40001f2	    0x488b05000000	            mov rax, qword [0x040001f9] 	       179	testplug2.c	FUNCTION_2
0x40001f9	          0x488910	                    mov qword [rax], rdx	       179	testplug2.c	FUNCTION_2
0x40001fc	    0x488915000000	            mov qword [0x04000203], rdx 	       180	testplug2.c	FUNCTION_2
0x4000203	      0xb800000000	                              mov eax, 0	       181	testplug2.c	FUNCTION_2
0x4000208	        0x4883c408	                              add rsp, 8	       182	testplug2.c	FUNCTION_2
0x400020c	              0x5b	                                 pop rbx	       182	testplug2.c	FUNCTION_2
0x400020d	              0x5d	                                 pop rbp	       182	testplug2.c	FUNCTION_2
0x400020e	              0xc3	                                     ret	       182	testplug2.c	FUNCTION_2
onclaim_file	functions,0:IF,5:CALL,5:FOR,1:SWITCH,0:DO,0:WHILE,1:ELSE,1	114
0x4000dd4	            0x4157	                                push r15	       511	testplug2.c	FUNCTION_11
0x4000dd6	            0x4156	                                push r14	       511	testplug2.c	FUNCTION_11
0x4000dd8	            0x4155	                                push r13	       511	testplug2.c	FUNCTION_11
0x4000dda	            0x4154	                                push r12	       511	testplug2.c	FUNCTION_11
0x4000ddc	              0x55	                                push rbp	       511	testplug2.c	FUNCTION_11
0x4000ddd	              0x53	                                push rbx	       511	testplug2.c	FUNCTION_11
0x4000dde	        0x4883ec08	                              sub rsp, 8	       511	testplug2.c	FUNCTION_11
0x4000de2	          0x4989fc	                            mov r12, rdi	       511	testplug2.c	FUNCTION_11
0x4000de5	          0x4989f7	                            mov r15, rsi	       511	testplug2.c	FUNCTION_11
0x4000de8	    0x488b1d000000	            mov rbx, qword [0x04000def] 	       513	testplug2.c	FUNCTION_11
0x4000def	          0x488b17	                    mov rdx, qword [rdi]	       514	testplug2.c	FUNCTION_11	CALL_1
0x4000df2	      0xb800000000	                              mov eax, 0	       514	testplug2.c	FUNCTION_11	CALL_1
0x4000df7	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       514	testplug2.c	FUNCTION_11	CALL_1
0x4000dfe	          0x4889d7	                            mov rdi, rdx	       514	testplug2.c	FUNCTION_11	CALL_1
0x4000e01	            0xf2ae	              repne scasb al, byte [rdi]	       514	testplug2.c	FUNCTION_11	CALL_1
0x4000e03	          0x48f7d1	                                 not rcx	       514	testplug2.c	FUNCTION_11	CALL_1
0x4000e06	        0x488d69ff	                      lea rbp, [rcx - 1]	       514	testplug2.c	FUNCTION_11	CALL_1
0x4000e0a	          0x4889d7	                            mov rdi, rdx	       515	testplug2.c	FUNCTION_11	CALL_2
0x4000e0d	      0xe800000000	                          call 0x4000e12	       515	testplug2.c	FUNCTION_11	CALL_2
0x4000e12	          0x4989c5	                            mov r13, rax	       515	testplug2.c	FUNCTION_11	CALL_2
0x4000e15	          0x4801c5	                            add rbp, rax	       516	testplug2.c	FUNCTION_11
0x4000e18	         0xfb64500	                   movzx eax, byte [rbp]	       520	testplug2.c	FUNCTION_11
0x4000e1c	            0x3c61	                            cmp al, 0x61	       520	testplug2.c	FUNCTION_11
0x4000e1e	            0x750f	                           jne 0x4000e2f	       520	testplug2.c	FUNCTION_11
0x4000e20	        0x807dff2e	                cmp byte [rbp - 1], 0x2e	       520	testplug2.c	FUNCTION_11
0x4000e24	     0xf8514010000	                           jne 0x4000f3e	       520	testplug2.c	FUNCTION_11
0x4000e2a	      0xe9ea000000	                           jmp 0x4000f19	       520	testplug2.c	FUNCTION_11
0x4000e2f	          0x4939ed	                            cmp r13, rbp	       521	testplug2.c	FUNCTION_11	FOR_1
0x4000e32	            0x7420	                            je 0x4000e54	       521	testplug2.c	FUNCTION_11	FOR_1
0x4000e34	            0x3c2f	                            cmp al, 0x2f	       522	testplug2.c	FUNCTION_11	FOR_1	IF_1	CALL_3
0x4000e36	            0x7410	                            je 0x4000e48	       522	testplug2.c	FUNCTION_11	FOR_1	IF_1	CALL_3
0x4000e38	    0x41be00000000	                             mov r14d, 0	       522	testplug2.c	FUNCTION_11	FOR_1	IF_1	CALL_3
0x4000e3e	            0xeb24	                           jmp 0x4000e64	       522	testplug2.c	FUNCTION_11	FOR_1	IF_1	CALL_3
0x4000e40	        0x807d002f	                    cmp byte [rbp], 0x2f	       522	testplug2.c	FUNCTION_11	FOR_1	IF_1	CALL_3
0x4000e44	            0x751e	                           jne 0x4000e64	       522	testplug2.c	FUNCTION_11	FOR_1	IF_1	CALL_3
0x4000e46	            0xeb06	                           jmp 0x4000e4e	       522	testplug2.c	FUNCTION_11	FOR_1	IF_1	CALL_3
0x4000e48	    0x41be00000000	                             mov r14d, 0	       522	testplug2.c	FUNCTION_11	FOR_1	IF_1	CALL_3
0x4000e4e	        0x4883c501	                              add rbp, 1	       524	testplug2.c	FUNCTION_11	FOR_1	IF_1
0x4000e52	            0xeb06	                           jmp 0x4000e5a	       525	testplug2.c	FUNCTION_11	FOR_1	IF_1
0x4000e54	    0x41be00000000	                             mov r14d, 0	       521	testplug2.c	FUNCTION_11	FOR_1
0x4000e5a	          0x4885db	                           test rbx, rbx	       528	testplug2.c	FUNCTION_11	WHILE_1
0x4000e5d	            0x7510	                           jne 0x4000e6f	       528	testplug2.c	FUNCTION_11	WHILE_1
0x4000e5f	      0xe9c9000000	                           jmp 0x4000f2d	       528	testplug2.c	FUNCTION_11	WHILE_1
0x4000e64	        0x4883ed01	                              sub rbp, 1	       521	testplug2.c	FUNCTION_11	FOR_1
0x4000e68	          0x4939ed	                            cmp r13, rbp	       521	testplug2.c	FUNCTION_11	FOR_1
0x4000e6b	            0x75d3	                           jne 0x4000e40	       521	testplug2.c	FUNCTION_11	FOR_1
0x4000e6d	            0xebeb	                           jmp 0x4000e5a	       521	testplug2.c	FUNCTION_11	FOR_1
0x4000e6f	        0x488b7308	                mov rsi, qword [rbx + 8]	       532	testplug2.c	FUNCTION_11	WHILE_1	IF_2	CALL_4
0x4000e73	          0x4889ef	                            mov rdi, rbp	       532	testplug2.c	FUNCTION_11	WHILE_1	IF_2	CALL_4
0x4000e76	      0xe800000000	                          call 0x4000e7b	       532	testplug2.c	FUNCTION_11	WHILE_1	IF_2	CALL_4
0x4000e7b	            0x85c0	                           test eax, eax	       532	testplug2.c	FUNCTION_11	WHILE_1	IF_2	CALL_4
0x4000e7d	            0x7518	                           jne 0x4000e97	       532	testplug2.c	FUNCTION_11	WHILE_1	IF_2	CALL_4
0x4000e7f	      0x498b442418	            mov rax, qword [r12 + 0x18] 	       533	testplug2.c	FUNCTION_11	WHILE_1	IF_2
0x4000e84	        0x48394320	            cmp qword [rbx + 0x20], rax 	       533	testplug2.c	FUNCTION_11	WHILE_1	IF_2
0x4000e88	            0x750d	                           jne 0x4000e97	       533	testplug2.c	FUNCTION_11	WHILE_1	IF_2
0x4000e8a	          0x4585f6	                         test r14d, r14d	       534	testplug2.c	FUNCTION_11	WHILE_1	IF_2
0x4000e8d	            0x7415	                            je 0x4000ea4	       534	testplug2.c	FUNCTION_11	WHILE_1	IF_2
0x4000e8f	    0x49837c241000	               cmp qword [r12 + 0x10], 0	       534	testplug2.c	FUNCTION_11	WHILE_1	IF_2
0x4000e95	            0x750d	                           jne 0x4000ea4	       534	testplug2.c	FUNCTION_11	WHILE_1	IF_2
0x4000e97	          0x488b1b	                    mov rbx, qword [rbx]	       536	testplug2.c	FUNCTION_11	WHILE_1
0x4000e9a	          0x4885db	                           test rbx, rbx	       528	testplug2.c	FUNCTION_11	WHILE_1
0x4000e9d	            0x75d0	                           jne 0x4000e6f	       528	testplug2.c	FUNCTION_11	WHILE_1
0x4000e9f	      0xe989000000	                           jmp 0x4000f2d	       528	testplug2.c	FUNCTION_11	WHILE_1
0x4000ea4	          0x4c89ef	                            mov rdi, r13	       539	testplug2.c	FUNCTION_11	CALL_5
0x4000ea7	      0xe800000000	                          call 0x4000eac	       539	testplug2.c	FUNCTION_11	CALL_5
0x4000eac	          0x4885db	                           test rbx, rbx	       543	testplug2.c	FUNCTION_11
0x4000eaf	           0xf95c0	                                setne al	       543	testplug2.c	FUNCTION_11
0x4000eb2	           0xfb6c0	                           movzx eax, al	       543	testplug2.c	FUNCTION_11
0x4000eb5	          0x418907	                    mov dword [r15], eax	       543	testplug2.c	FUNCTION_11
0x4000eb8	            0x7457	                            je 0x4000f11	       544	testplug2.c	FUNCTION_11	IF_3
0x4000eba	    0xc74330010000	               mov dword [rbx + 0x30], 1	       546	testplug2.c	FUNCTION_11	IF_3
0x4000ec1	        0x498b0424	                    mov rax, qword [r12]	       547	testplug2.c	FUNCTION_11	IF_3
0x4000ec5	        0x48894308	                mov qword [rbx + 8], rax	       547	testplug2.c	FUNCTION_11	IF_3
0x4000ec9	      0x498b442408	                mov rax, qword [r12 + 8]	       547	testplug2.c	FUNCTION_11	IF_3
0x4000ece	        0x48894310	             mov qword [rbx + 0x10], rax	       547	testplug2.c	FUNCTION_11	IF_3
0x4000ed2	      0x498b442410	            mov rax, qword [r12 + 0x10] 	       547	testplug2.c	FUNCTION_11	IF_3
0x4000ed7	        0x48894318	             mov qword [rbx + 0x18], rax	       547	testplug2.c	FUNCTION_11	IF_3
0x4000edb	      0x498b442418	            mov rax, qword [r12 + 0x18] 	       547	testplug2.c	FUNCTION_11	IF_3
0x4000ee0	        0x48894320	             mov qword [rbx + 0x20], rax	       547	testplug2.c	FUNCTION_11	IF_3
0x4000ee4	      0x498b442420	            mov rax, qword [r12 + 0x20] 	       547	testplug2.c	FUNCTION_11	IF_3
0x4000ee9	        0x48894328	             mov qword [rbx + 0x28], rax	       547	testplug2.c	FUNCTION_11	IF_3
0x4000eed	          0x8b7344	            mov esi, dword [rbx + 0x44] 	       548	testplug2.c	FUNCTION_11	IF_3	IF_4
0x4000ef0	            0x85f6	                           test esi, esi	       548	testplug2.c	FUNCTION_11	IF_3	IF_4
0x4000ef2	            0x741d	                            je 0x4000f11	       548	testplug2.c	FUNCTION_11	IF_3	IF_4
0x4000ef4	    0x488b0d000000	            mov rcx, qword [0x04000efb] 	       548	testplug2.c	FUNCTION_11	IF_3	IF_4
0x4000efb	      0xb803000000	                              mov eax, 3	       549	testplug2.c	FUNCTION_11	IF_3	IF_4
0x4000f00	          0x4885c9	                           test rcx, rcx	       548	testplug2.c	FUNCTION_11	IF_3	IF_4
0x4000f03	            0x744d	                            je 0x4000f52	       548	testplug2.c	FUNCTION_11	IF_3	IF_4
0x4000f05	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	       551	testplug2.c	FUNCTION_11	IF_3	ELSE_1	IF_5
0x4000f09	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	       551	testplug2.c	FUNCTION_11	IF_3	ELSE_1	IF_5
0x4000f0d	            0xffd1	                                call rcx	       551	testplug2.c	FUNCTION_11	IF_3	ELSE_1	IF_5
0x4000f0f	            0xeb41	                           jmp 0x4000f52	       551	testplug2.c	FUNCTION_11	IF_3	ELSE_1	IF_5
0x4000f11	    0x8b0500000000	            mov eax, dword [0x04000f17] 	       555	testplug2.c	FUNCTION_11
0x4000f17	            0xeb39	                           jmp 0x4000f52	       555	testplug2.c	FUNCTION_11
0x4000f19	    0x41be01000000	                             mov r14d, 1	       520	testplug2.c	FUNCTION_11
0x4000f1f	          0x4939ed	                            cmp r13, rbp	       521	testplug2.c	FUNCTION_11	FOR_1
0x4000f22	     0xf853cffffff	                           jne 0x4000e64	       521	testplug2.c	FUNCTION_11	FOR_1
0x4000f28	      0xe92dffffff	                           jmp 0x4000e5a	       521	testplug2.c	FUNCTION_11	FOR_1
0x4000f2d	          0x4c89ef	                            mov rdi, r13	       539	testplug2.c	FUNCTION_11	CALL_5
0x4000f30	      0xe800000000	                          call 0x4000f35	       539	testplug2.c	FUNCTION_11	CALL_5
0x4000f35	    0x41c707000000	                      mov dword [r15], 0	       543	testplug2.c	FUNCTION_11
0x4000f3c	            0xebd3	                           jmp 0x4000f11	       543	testplug2.c	FUNCTION_11
0x4000f3e	    0x41be00000000	                             mov r14d, 0	       521	testplug2.c	FUNCTION_11	FOR_1
0x4000f44	          0x4939ed	                            cmp r13, rbp	       521	testplug2.c	FUNCTION_11	FOR_1
0x4000f47	     0xf8517ffffff	                           jne 0x4000e64	       521	testplug2.c	FUNCTION_11	FOR_1
0x4000f4d	      0xe908ffffff	                           jmp 0x4000e5a	       521	testplug2.c	FUNCTION_11	FOR_1
0x4000f52	        0x4883c408	                              add rsp, 8	       556	testplug2.c	FUNCTION_11
0x4000f56	              0x5b	                                 pop rbx	       556	testplug2.c	FUNCTION_11
0x4000f57	              0x5d	                                 pop rbp	       556	testplug2.c	FUNCTION_11
0x4000f58	            0x415c	                                 pop r12	       556	testplug2.c	FUNCTION_11
0x4000f5a	            0x415d	                                 pop r13	       556	testplug2.c	FUNCTION_11
0x4000f5c	            0x415e	                                 pop r14	       556	testplug2.c	FUNCTION_11
0x4000f5e	            0x415f	                                 pop r15	       556	testplug2.c	FUNCTION_11
0x4000f60	              0xc3	                                     ret	       556	testplug2.c	FUNCTION_11
set_register_hook	functions,0:IF,4:CALL,4:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,4	47
0x4000117	          0x4889f8	                            mov rax, rdi	       306	testplug2.c	ELSE_4	FUNCTION_6
0x400011a	          0x4189f0	                            mov r8d, esi	       306	testplug2.c	ELSE_4	FUNCTION_6
0x400011d	      0xbe00000000	                              mov esi, 0	       307	testplug2.c	ELSE_4	FUNCTION_6	IF_1	CALL_1
0x4000122	      0xb90a000000	                            mov ecx, 0xa	       307	testplug2.c	ELSE_4	FUNCTION_6	IF_1	CALL_1
0x4000127	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       307	testplug2.c	ELSE_4	FUNCTION_6	IF_1	CALL_1
0x4000129	           0xf97c1	                                 seta cl	       307	testplug2.c	ELSE_4	FUNCTION_6	IF_1	CALL_1
0x400012c	           0xf92c2	                                 setb dl	       307	testplug2.c	ELSE_4	FUNCTION_6	IF_1	CALL_1
0x400012f	            0x38d1	                              cmp cl, dl	       307	testplug2.c	ELSE_4	FUNCTION_6	IF_1	CALL_1
0x4000131	            0x750d	                           jne 0x4000140	       307	testplug2.c	ELSE_4	FUNCTION_6	IF_1	CALL_1
0x4000133	    0x448905000000	            mov dword [0x0400013a], r8d 	       308	testplug2.c	ELSE_4	FUNCTION_6	IF_1
0x400013a	      0xb800000000	                              mov eax, 0	       320	testplug2.c	FUNCTION_6
0x400013f	              0xc3	                                     ret	       320	testplug2.c	FUNCTION_6
0x4000140	      0xbe00000000	                              mov esi, 0	       309	testplug2.c	ELSE_4	FUNCTION_6	ELSE_1	IF_2	CALL_2
0x4000145	      0xb90f000000	                            mov ecx, 0xf	       309	testplug2.c	ELSE_4	FUNCTION_6	ELSE_1	IF_2	CALL_2
0x400014a	          0x4889c7	                            mov rdi, rax	       309	testplug2.c	ELSE_4	FUNCTION_6	ELSE_1	IF_2	CALL_2
0x400014d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       309	testplug2.c	ELSE_4	FUNCTION_6	ELSE_1	IF_2	CALL_2
0x400014f	           0xf97c1	                                 seta cl	       309	testplug2.c	ELSE_4	FUNCTION_6	ELSE_1	IF_2	CALL_2
0x4000152	           0xf92c2	                                 setb dl	       309	testplug2.c	ELSE_4	FUNCTION_6	ELSE_1	IF_2	CALL_2
0x4000155	            0x38d1	                              cmp cl, dl	       309	testplug2.c	ELSE_4	FUNCTION_6	ELSE_1	IF_2	CALL_2
0x4000157	            0x750d	                           jne 0x4000166	       309	testplug2.c	ELSE_4	FUNCTION_6	ELSE_1	IF_2	CALL_2
0x4000159	    0x448905000000	            mov dword [0x04000160], r8d 	       310	testplug2.c	ELSE_4	FUNCTION_6	ELSE_1	IF_2
0x4000160	      0xb800000000	                              mov eax, 0	       320	testplug2.c	FUNCTION_6
0x4000165	              0xc3	                                     ret	       320	testplug2.c	FUNCTION_6
0x4000166	      0xbe00000000	                              mov esi, 0	       311	testplug2.c	ELSE_4	FUNCTION_6	ELSE_2	IF_3	CALL_3
0x400016b	      0xb915000000	                           mov ecx, 0x15	       311	testplug2.c	ELSE_4	FUNCTION_6	ELSE_2	IF_3	CALL_3
0x4000170	          0x4889c7	                            mov rdi, rax	       311	testplug2.c	ELSE_4	FUNCTION_6	ELSE_2	IF_3	CALL_3
0x4000173	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       311	testplug2.c	ELSE_4	FUNCTION_6	ELSE_2	IF_3	CALL_3
0x4000175	           0xf97c1	                                 seta cl	       311	testplug2.c	ELSE_4	FUNCTION_6	ELSE_2	IF_3	CALL_3
0x4000178	           0xf92c2	                                 setb dl	       311	testplug2.c	ELSE_4	FUNCTION_6	ELSE_2	IF_3	CALL_3
0x400017b	            0x38d1	                              cmp cl, dl	       311	testplug2.c	ELSE_4	FUNCTION_6	ELSE_2	IF_3	CALL_3
0x400017d	            0x7517	                           jne 0x4000196	       311	testplug2.c	ELSE_4	FUNCTION_6	ELSE_2	IF_3	CALL_3
0x400017f	    0x448905000000	            mov dword [0x04000186], r8d 	       313	testplug2.c	ELSE_4	FUNCTION_6	ELSE_2	IF_3
0x4000186	    0xc70500000000	               mov dword [0x04000190], 1	       314	testplug2.c	ELSE_4	FUNCTION_6	ELSE_2	IF_3
0x4000190	      0xb800000000	                              mov eax, 0	       320	testplug2.c	FUNCTION_6
0x4000195	              0xc3	                                     ret	       320	testplug2.c	FUNCTION_6
0x4000196	      0xbe00000000	                              mov esi, 0	       316	testplug2.c	ELSE_4	FUNCTION_6	ELSE_3	IF_4	CALL_4
0x400019b	      0xb908000000	                              mov ecx, 8	       316	testplug2.c	ELSE_4	FUNCTION_6	ELSE_3	IF_4	CALL_4
0x40001a0	          0x4889c7	                            mov rdi, rax	       316	testplug2.c	ELSE_4	FUNCTION_6	ELSE_3	IF_4	CALL_4
0x40001a3	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       316	testplug2.c	ELSE_4	FUNCTION_6	ELSE_3	IF_4	CALL_4
0x40001a5	           0xf97c1	                                 seta cl	       316	testplug2.c	ELSE_4	FUNCTION_6	ELSE_3	IF_4	CALL_4
0x40001a8	           0xf92c2	                                 setb dl	       316	testplug2.c	ELSE_4	FUNCTION_6	ELSE_3	IF_4	CALL_4
0x40001ab	      0xb803000000	                              mov eax, 3	       319	testplug2.c	FUNCTION_6
0x40001b0	            0x38d1	                              cmp cl, dl	       316	testplug2.c	ELSE_4	FUNCTION_6	ELSE_3	IF_4	CALL_4
0x40001b2	            0x750c	                           jne 0x40001c0	       316	testplug2.c	ELSE_4	FUNCTION_6	ELSE_3	IF_4	CALL_4
0x40001b4	    0x448905000000	            mov dword [0x040001bb], r8d 	       317	testplug2.c	ELSE_4	FUNCTION_6	ELSE_3	IF_4
0x40001bb	      0xb800000000	                              mov eax, 0	       320	testplug2.c	FUNCTION_6
0x40001c0	            0xf3c3	                                     ret	       321	testplug2.c	FUNCTION_6	ELSE_4
oncleanup	functions,0:IF,0:CALL,1:FOR,0:SWITCH,0:DO,0:WHILE,0:ELSE,0	13
0x4000040	        0x4883ec08	                              sub rsp, 8	       664	testplug2.c	FUNCTION_13
0x4000044	    0x488b15000000	            mov rdx, qword [0x0400004b] 	       665	testplug2.c	FUNCTION_13
0x400004b	          0x4885d2	                           test rdx, rdx	       665	testplug2.c	FUNCTION_13
0x400004e	            0x7411	                            je 0x4000061	       665	testplug2.c	FUNCTION_13
0x4000050	      0xbe00000000	                              mov esi, 0	       665	testplug2.c	FUNCTION_13
0x4000055	      0xbf00000000	                              mov edi, 0	       665	testplug2.c	FUNCTION_13
0x400005a	      0xb800000000	                              mov eax, 0	       665	testplug2.c	FUNCTION_13
0x400005f	            0xffd2	                                call rdx	       665	testplug2.c	FUNCTION_13
0x4000061	      0xbf00000000	                              mov edi, 0	       666	testplug2.c	FUNCTION_13	CALL_1
0x4000066	      0xe800000000	                          call 0x400006b	       666	testplug2.c	FUNCTION_13	CALL_1
0x400006b	    0x8b0500000000	            mov eax, dword [0x04000071] 	       668	testplug2.c	FUNCTION_13
0x4000071	        0x4883c408	                              add rsp, 8	       668	testplug2.c	FUNCTION_13
0x4000075	              0xc3	                                     ret	       668	testplug2.c	FUNCTION_13
