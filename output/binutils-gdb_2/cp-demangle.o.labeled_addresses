d_compact_number	SWITCH,0:CALL,4:IF,3:WHILE,0:ELSE,2:DO,0:FOR,0:functions,0	29
0x40003de	              0x53	                                push rbx	      3069	cp-demangle.c	FUNCTION_44
0x40003df	          0x4889fb	                            mov rbx, rdi	      3069	cp-demangle.c	FUNCTION_44
0x40003e2	        0x488b4718	            mov rax, qword [rdi + 0x18] 	      3071	cp-demangle.c	FUNCTION_44	IF_1	CALL_1
0x40003e6	           0xfb600	                   movzx eax, byte [rax]	      3071	cp-demangle.c	FUNCTION_44	IF_1	CALL_1
0x40003e9	            0x3c5f	                            cmp al, 0x5f	      3071	cp-demangle.c	FUNCTION_44	IF_1	CALL_1
0x40003eb	            0x7438	                            je 0x4000425	      3071	cp-demangle.c	FUNCTION_44	IF_1	CALL_1
0x40003ed	            0x3c6e	                            cmp al, 0x6e	      3073	cp-demangle.c	FUNCTION_44	ELSE_1	IF_2	CALL_2
0x40003ef	            0x7426	                            je 0x4000417	      3073	cp-demangle.c	FUNCTION_44	ELSE_1	IF_2	CALL_2
0x40003f1	      0xe8ddfdffff	                       call sym.d_number	      3076	cp-demangle.c	FUNCTION_44	CALL_3
0x40003f6	          0x83c001	                              add eax, 1	      3078	cp-demangle.c	FUNCTION_44	IF_3	CALL_4
0x40003f9	            0x89c1	                            mov ecx, eax	      3078	cp-demangle.c	FUNCTION_44	IF_3	CALL_4
0x40003fb	            0x7821	                            js 0x400041e	      3078	cp-demangle.c	FUNCTION_44	IF_3	CALL_4
0x40003fd	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      3078	cp-demangle.c	FUNCTION_44	IF_3	CALL_4
0x4000401	      0xb8ffffffff	                     mov eax, 0xffffffff	      3079	cp-demangle.c	FUNCTION_44	IF_3
0x4000406	          0x803a5f	                    cmp byte [rdx], 0x5f	      3078	cp-demangle.c	FUNCTION_44	IF_3	CALL_4
0x4000409	            0x7525	                           jne 0x4000430	      3078	cp-demangle.c	FUNCTION_44	IF_3	CALL_4
0x400040b	        0x4883c201	                              add rdx, 1	      3078	cp-demangle.c	FUNCTION_44	IF_3	CALL_4
0x400040f	        0x48895318	             mov qword [rbx + 0x18], rdx	      3078	cp-demangle.c	FUNCTION_44	IF_3	CALL_4
0x4000413	            0x89c8	                            mov eax, ecx	      3080	cp-demangle.c	FUNCTION_44
0x4000415	            0xeb19	                           jmp 0x4000430	      3080	cp-demangle.c	FUNCTION_44
0x4000417	      0xb8ffffffff	                     mov eax, 0xffffffff	      3074	cp-demangle.c	FUNCTION_44	ELSE_1	IF_2
0x400041c	            0xeb12	                           jmp 0x4000430	      3074	cp-demangle.c	FUNCTION_44	ELSE_1	IF_2
0x400041e	      0xb8ffffffff	                     mov eax, 0xffffffff	      3079	cp-demangle.c	FUNCTION_44	IF_3
0x4000423	            0xeb0b	                           jmp 0x4000430	      3079	cp-demangle.c	FUNCTION_44	IF_3
0x4000425	        0x488b5718	            mov rdx, qword [rdi + 0x18] 	      3078	cp-demangle.c	FUNCTION_44	IF_3	CALL_4
0x4000429	      0xb900000000	                              mov ecx, 0	      3072	cp-demangle.c	FUNCTION_44	IF_1
0x400042e	            0xebdb	                           jmp 0x400040b	      3072	cp-demangle.c	FUNCTION_44	IF_1
0x4000430	              0x5b	                                 pop rbx	      3081	cp-demangle.c	FUNCTION_44
0x4000431	              0xc3	                                     ret	      3081	cp-demangle.c	FUNCTION_44
d_print_mod_list	SWITCH,0:CALL,15:IF,7:WHILE,1:ELSE,3:DO,0:FOR,0:functions,0	215
0x4005124	            0x4157	                                push r15	      5793	cp-demangle.c	FUNCTION_89
0x4005126	            0x4156	                                push r14	      5793	cp-demangle.c	FUNCTION_89
0x4005128	            0x4155	                                push r13	      5793	cp-demangle.c	FUNCTION_89
0x400512a	            0x4154	                                push r12	      5793	cp-demangle.c	FUNCTION_89
0x400512c	              0x55	                                push rbp	      5793	cp-demangle.c	FUNCTION_89
0x400512d	              0x53	                                push rbx	      5793	cp-demangle.c	FUNCTION_89
0x400512e	        0x4883ec48	                           sub rsp, 0x48	      5793	cp-demangle.c	FUNCTION_89
0x4005132	    0x64488b042528	                mov rax, qword fs:[0x28]	      5793	cp-demangle.c	FUNCTION_89
0x400513b	      0x4889442438	             mov qword [rsp + 0x38], rax	      5793	cp-demangle.c	FUNCTION_89
0x4005140	            0x31c0	                            xor eax, eax	      5793	cp-demangle.c	FUNCTION_89
0x4005142	          0x4885d2	                           test rdx, rdx	      5796	cp-demangle.c	FUNCTION_89	IF_1	CALL_1
0x4005145	     0xf84ad030000	                            je 0x40054f8	      5796	cp-demangle.c	FUNCTION_89	IF_1	CALL_1
0x400514b	          0x4889fb	                            mov rbx, rdi	      5796	cp-demangle.c	FUNCTION_89	IF_1	CALL_1
0x400514e	          0x4189f4	                           mov r12d, esi	      5796	cp-demangle.c	FUNCTION_89	IF_1	CALL_1
0x4005151	          0x4889d5	                            mov rbp, rdx	      5796	cp-demangle.c	FUNCTION_89	IF_1	CALL_1
0x4005154	          0x4189cd	                           mov r13d, ecx	      5796	cp-demangle.c	FUNCTION_89	IF_1	CALL_1
0x4005157	    0x83bf30010000	              cmp dword [rdi + 0x130], 0	      5796	cp-demangle.c	FUNCTION_89	IF_1	CALL_1
0x400515e	     0xf8594030000	                           jne 0x40054f8	      5796	cp-demangle.c	FUNCTION_89	IF_1	CALL_1
0x4005164	        0x837a1000	               cmp dword [rdx + 0x10], 0	      5799	cp-demangle.c	FUNCTION_89	IF_2
0x4005168	            0x7513	                           jne 0x400517d	      5799	cp-demangle.c	FUNCTION_89	IF_2
0x400516a	            0x85c9	                           test ecx, ecx	      5800	cp-demangle.c	FUNCTION_89	IF_2
0x400516c	            0x7526	                           jne 0x4005194	      5800	cp-demangle.c	FUNCTION_89	IF_2
0x400516e	        0x488b4208	                mov rax, qword [rdx + 8]	      5801	cp-demangle.c	FUNCTION_89	IF_2	CALL_2
0x4005172	            0x8b38	                    mov edi, dword [rax]	      5801	cp-demangle.c	FUNCTION_89	IF_2	CALL_2
0x4005174	      0xe8c7aeffff	       call sym.is_fnqual_component_type	      5801	cp-demangle.c	FUNCTION_89	IF_2	CALL_2
0x4005179	            0x85c0	                           test eax, eax	      5801	cp-demangle.c	FUNCTION_89	IF_2	CALL_2
0x400517b	            0x7417	                            je 0x4005194	      5801	cp-demangle.c	FUNCTION_89	IF_2	CALL_2
0x400517d	          0x4489e9	                           mov ecx, r13d	      5803	cp-demangle.c	FUNCTION_89	IF_2	CALL_3
0x4005180	        0x488b5500	                    mov rdx, qword [rbp]	      5803	cp-demangle.c	FUNCTION_89	IF_2	CALL_3
0x4005184	          0x4489e6	                           mov esi, r12d	      5803	cp-demangle.c	FUNCTION_89	IF_2	CALL_3
0x4005187	          0x4889df	                            mov rdi, rbx	      5803	cp-demangle.c	FUNCTION_89	IF_2	CALL_3
0x400518a	      0xe895ffffff	               call sym.d_print_mod_list	      5803	cp-demangle.c	FUNCTION_89	IF_2	CALL_3
0x400518f	      0xe964030000	                           jmp 0x40054f8	      5804	cp-demangle.c	FUNCTION_89	IF_2
0x4005194	    0xc74510010000	               mov dword [rbp + 0x10], 1	      5807	cp-demangle.c	FUNCTION_89
0x400519b	    0x4c8bbb200100	           mov r15, qword [rbx + 0x120] 	      5809	cp-demangle.c	FUNCTION_89
0x40051a2	        0x488b4518	            mov rax, qword [rbp + 0x18] 	      5810	cp-demangle.c	FUNCTION_89
0x40051a6	    0x488983200100	            mov qword [rbx + 0x120], rax	      5810	cp-demangle.c	FUNCTION_89
0x40051ad	        0x488b5508	                mov rdx, qword [rbp + 8]	      5812	cp-demangle.c	FUNCTION_89	IF_3
0x40051b1	            0x8b02	                    mov eax, dword [rdx]	      5812	cp-demangle.c	FUNCTION_89	IF_3
0x40051b3	          0x83f829	                           cmp eax, 0x29	      5812	cp-demangle.c	FUNCTION_89	IF_3
0x40051b6	            0x751b	                           jne 0x40051d3	      5812	cp-demangle.c	FUNCTION_89	IF_3
0x40051b8	        0x488b4d00	                    mov rcx, qword [rbp]	      5814	cp-demangle.c	FUNCTION_89	IF_3	CALL_4
0x40051bc	          0x4489e6	                           mov esi, r12d	      5814	cp-demangle.c	FUNCTION_89	IF_3	CALL_4
0x40051bf	          0x4889df	                            mov rdi, rbx	      5814	cp-demangle.c	FUNCTION_89	IF_3	CALL_4
0x40051c2	      0xe8f6050000	          call sym.d_print_function_type	      5814	cp-demangle.c	FUNCTION_89	IF_3	CALL_4
0x40051c7	    0x4c89bb200100	            mov qword [rbx + 0x120], r15	      5815	cp-demangle.c	FUNCTION_89	IF_3
0x40051ce	      0xe925030000	                           jmp 0x40054f8	      5816	cp-demangle.c	FUNCTION_89	IF_3
0x40051d3	          0x83f82a	                           cmp eax, 0x2a	      5818	cp-demangle.c	FUNCTION_89	ELSE_1	IF_4
0x40051d6	            0x751b	                           jne 0x40051f3	      5818	cp-demangle.c	FUNCTION_89	ELSE_1	IF_4
0x40051d8	        0x488b4d00	                    mov rcx, qword [rbp]	      5820	cp-demangle.c	FUNCTION_89	ELSE_1	IF_4	CALL_5
0x40051dc	          0x4489e6	                           mov esi, r12d	      5820	cp-demangle.c	FUNCTION_89	ELSE_1	IF_4	CALL_5
0x40051df	          0x4889df	                            mov rdi, rbx	      5820	cp-demangle.c	FUNCTION_89	ELSE_1	IF_4	CALL_5
0x40051e2	      0xe835030000	             call sym.d_print_array_type	      5820	cp-demangle.c	FUNCTION_89	ELSE_1	IF_4	CALL_5
0x40051e7	    0x4c89bb200100	            mov qword [rbx + 0x120], r15	      5821	cp-demangle.c	FUNCTION_89	ELSE_1	IF_4
0x40051ee	      0xe905030000	                           jmp 0x40054f8	      5822	cp-demangle.c	FUNCTION_89	ELSE_1	IF_4
0x40051f3	          0x83f802	                              cmp eax, 2	      5824	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5
0x40051f6	     0xf85d8020000	                           jne 0x40054d4	      5824	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5
0x40051fc	    0x4c8bab280100	           mov r13, qword [rbx + 0x128] 	      5834	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5
0x4005203	    0x48c783280100	              mov qword [rbx + 0x128], 0	      5835	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5
0x400520e	        0x488b4508	                mov rax, qword [rbp + 8]	      5836	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	CALL_6
0x4005212	        0x488b5008	                mov rdx, qword [rax + 8]	      5836	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	CALL_6
0x4005216	          0x4489e6	                           mov esi, r12d	      5836	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	CALL_6
0x4005219	          0x4889df	                            mov rdi, rbx	      5836	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	CALL_6
0x400521c	      0xe8c1f4ffff	                   call sym.d_print_comp	      5836	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	CALL_6
0x4005221	    0x4c89ab280100	            mov qword [rbx + 0x128], r13	      5837	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5
0x4005228	        0x41f6c404	                            test r12b, 4	      5839	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	IF_6
0x400522c	            0x7574	                           jne 0x40052a2	      5839	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	IF_6
0x400522e	    0x41bd00000000	                             mov r13d, 0	      5839	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	IF_6
0x4005234	      0x450fb67500	                  movzx r14d, byte [r13]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4005239	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005244	            0x752f	                           jne 0x4005275	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005246	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400524d	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005254	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005259	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400525c	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005262	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x400526d	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4005275	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x400527c	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4005280	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4005287	        0x44883403	              mov byte [rbx + rax], r14b	      4235	cp-demangle.c	FUNCTION_72
0x400528b	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x4005292	        0x4983c501	                              add r13, 1	      4236	cp-demangle.c	FUNCTION_72
0x4005296	      0xb800000000	                              mov eax, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400529b	          0x4c39e8	                            cmp rax, r13	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400529e	            0x7594	                           jne 0x4005234	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40052a0	            0xeb59	                           jmp 0x40052fb	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40052a2	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40052ad	            0x752f	                           jne 0x40052de	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40052af	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40052b6	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40052bd	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40052c2	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40052c5	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40052cb	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x40052d6	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40052de	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x40052e5	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x40052e9	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40052f0	        0xc604032e	              mov byte [rbx + rax], 0x2e	      4235	cp-demangle.c	FUNCTION_72
0x40052f4	    0xc68308010000	           mov byte [rbx + 0x108], 0x2e 	      4236	cp-demangle.c	FUNCTION_72
0x40052fb	        0x488b4508	                mov rax, qword [rbp + 8]	      5844	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5
0x40052ff	        0x488b6810	            mov rbp, qword [rax + 0x10] 	      5844	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5
0x4005303	        0x837d0046	                   cmp dword [rbp], 0x46	      5846	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	IF_7
0x4005307	     0xf85a4010000	                           jne 0x40054b1	      5846	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	IF_7
0x400530d	    0x41bd00000000	                             mov r13d, 0	      5846	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	IF_7
0x4005313	      0x450fb67500	                  movzx r14d, byte [r13]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4005318	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005323	            0x752f	                           jne 0x4005354	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005325	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400532c	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005333	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005338	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400533b	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005341	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x400534c	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4005354	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x400535b	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x400535f	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4005366	        0x44883403	              mov byte [rbx + rax], r14b	      4235	cp-demangle.c	FUNCTION_72
0x400536a	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x4005371	        0x4983c501	                              add r13, 1	      4236	cp-demangle.c	FUNCTION_72
0x4005375	      0xb800000000	                              mov eax, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400537a	          0x4c39e8	                            cmp rax, r13	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400537d	            0x7594	                           jne 0x4005313	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400537f	          0x8b4510	            mov eax, dword [rbp + 0x10] 	        33	stdio2.h	FUNCTION_109	CALL_1
0x4005382	      0x4c8d6c2410	                   lea r13, [rsp + 0x10]	        33	stdio2.h	FUNCTION_109	CALL_1
0x4005387	        0x448d4001	                      lea r8d, [rax + 1]	        33	stdio2.h	FUNCTION_109	CALL_1
0x400538b	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_109	CALL_1
0x4005390	      0xba19000000	                           mov edx, 0x19	        33	stdio2.h	FUNCTION_109	CALL_1
0x4005395	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_109	CALL_1
0x400539a	          0x4c89ef	                            mov rdi, r13	        33	stdio2.h	FUNCTION_109	CALL_1
0x400539d	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_109	CALL_1
0x40053a2	      0xe800000000	                          call 0x40053a7	        33	stdio2.h	FUNCTION_109	CALL_1
0x40053a7	      0xb800000000	                              mov eax, 0	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40053ac	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40053b3	          0x4c89ef	                            mov rdi, r13	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40053b6	            0xf2ae	              repne scasb al, byte [rdi]	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40053b8	          0x48f7d1	                                 not rcx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40053bb	        0x4883e901	                              sub rcx, 1	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40053bf	      0x48894c2408	                mov qword [rsp + 8], rcx	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40053c4	            0x7470	                            je 0x4005436	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40053c6	    0x41bd00000000	                             mov r13d, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40053cc	    0x460fb6742c10	    movzx r14d, byte [rsp + r13 + 0x10] 	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x40053d2	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40053dd	            0x752f	                           jne 0x400540e	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40053df	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40053e6	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40053ed	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40053f2	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40053f5	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40053fb	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4005406	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400540e	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4005415	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4005419	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4005420	        0x44883403	              mov byte [rbx + rax], r14b	      4235	cp-demangle.c	FUNCTION_72
0x4005424	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x400542b	        0x4983c501	                              add r13, 1	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400542f	      0x4c396c2408	                cmp qword [rsp + 8], r13	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4005434	            0x7596	                           jne 0x40053cc	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4005436	    0x41bd00000000	                             mov r13d, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400543c	      0x450fb67500	                  movzx r14d, byte [r13]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4005441	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400544c	            0x752f	                           jne 0x400547d	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400544e	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4005455	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400545c	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005461	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005464	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400546a	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4005475	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400547d	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4005484	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4005488	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x400548f	        0x44883403	              mov byte [rbx + rax], r14b	      4235	cp-demangle.c	FUNCTION_72
0x4005493	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x400549a	        0x4983c501	                              add r13, 1	      4236	cp-demangle.c	FUNCTION_72
0x400549e	    0x4981fd000000	                              cmp r13, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40054a5	            0x7595	                           jne 0x400543c	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40054a7	        0x488b6d08	                mov rbp, qword [rbp + 8]	      5851	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	IF_7
0x40054ab	            0xeb04	                           jmp 0x40054b1	      5851	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	IF_7
0x40054ad	        0x488b6d08	                mov rbp, qword [rbp + 8]	      5855	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	WHILE_1
0x40054b1	          0x8b7d00	                    mov edi, dword [rbp]	      5854	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	WHILE_1	CALL_12
0x40054b4	      0xe887abffff	       call sym.is_fnqual_component_type	      5854	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	WHILE_1	CALL_12
0x40054b9	            0x85c0	                           test eax, eax	      5854	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	WHILE_1	CALL_12
0x40054bb	            0x75f0	                           jne 0x40054ad	      5854	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	WHILE_1	CALL_12
0x40054bd	          0x4889ea	                            mov rdx, rbp	      5857	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	CALL_13
0x40054c0	          0x4489e6	                           mov esi, r12d	      5857	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	CALL_13
0x40054c3	          0x4889df	                            mov rdi, rbx	      5857	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	CALL_13
0x40054c6	      0xe817f2ffff	                   call sym.d_print_comp	      5857	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	CALL_13
0x40054cb	    0x4c89bb200100	            mov qword [rbx + 0x120], r15	      5859	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5
0x40054d2	            0xeb24	                           jmp 0x40054f8	      5860	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5
0x40054d4	          0x4489e6	                           mov esi, r12d	      5863	cp-demangle.c	FUNCTION_89	CALL_14
0x40054d7	          0x4889df	                            mov rdi, rbx	      5863	cp-demangle.c	FUNCTION_89	CALL_14
0x40054da	      0xe8a0f2ffff	                    call sym.d_print_mod	      5863	cp-demangle.c	FUNCTION_89	CALL_14
0x40054df	    0x4c89bb200100	            mov qword [rbx + 0x120], r15	      5865	cp-demangle.c	FUNCTION_89
0x40054e6	          0x4489e9	                           mov ecx, r13d	      5867	cp-demangle.c	FUNCTION_89	CALL_15
0x40054e9	        0x488b5500	                    mov rdx, qword [rbp]	      5867	cp-demangle.c	FUNCTION_89	CALL_15
0x40054ed	          0x4489e6	                           mov esi, r12d	      5867	cp-demangle.c	FUNCTION_89	CALL_15
0x40054f0	          0x4889df	                            mov rdi, rbx	      5867	cp-demangle.c	FUNCTION_89	CALL_15
0x40054f3	      0xe82cfcffff	               call sym.d_print_mod_list	      5867	cp-demangle.c	FUNCTION_89	CALL_15
0x40054f8	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      5868	cp-demangle.c	FUNCTION_89
0x40054fd	    0x644833042528	                xor rax, qword fs:[0x28]	      5868	cp-demangle.c	FUNCTION_89
0x4005506	            0x7405	                            je 0x400550d	      5868	cp-demangle.c	FUNCTION_89
0x4005508	      0xe800000000	                          call 0x400550d	      5868	cp-demangle.c	FUNCTION_89
0x400550d	        0x4883c448	                           add rsp, 0x48	      5868	cp-demangle.c	FUNCTION_89
0x4005511	              0x5b	                                 pop rbx	      5868	cp-demangle.c	FUNCTION_89
0x4005512	              0x5d	                                 pop rbp	      5868	cp-demangle.c	FUNCTION_89
0x4005513	            0x415c	                                 pop r12	      5868	cp-demangle.c	FUNCTION_89
0x4005515	            0x415d	                                 pop r13	      5868	cp-demangle.c	FUNCTION_89
0x4005517	            0x415e	                                 pop r14	      5868	cp-demangle.c	FUNCTION_89
0x4005519	            0x415f	                                 pop r15	      5868	cp-demangle.c	FUNCTION_89
0x400551b	              0xc3	                                     ret	      5868	cp-demangle.c	FUNCTION_89
d_exprlist	SWITCH,0:CALL,7:IF,4:WHILE,1:ELSE,0:DO,0:FOR,0:functions,0	51
0x4008b8e	            0x4154	                                push r12	      3200	cp-demangle.c	FUNCTION_49
0x4008b90	              0x55	                                push rbp	      3200	cp-demangle.c	FUNCTION_49
0x4008b91	              0x53	                                push rbx	      3200	cp-demangle.c	FUNCTION_49
0x4008b92	        0x4883ec10	                           sub rsp, 0x10	      3200	cp-demangle.c	FUNCTION_49
0x4008b96	          0x4889fb	                            mov rbx, rdi	      3200	cp-demangle.c	FUNCTION_49
0x4008b99	          0x4189f4	                           mov r12d, esi	      3200	cp-demangle.c	FUNCTION_49
0x4008b9c	    0x64488b042528	                mov rax, qword fs:[0x28]	      3200	cp-demangle.c	FUNCTION_49
0x4008ba5	      0x4889442408	                mov qword [rsp + 8], rax	      3200	cp-demangle.c	FUNCTION_49
0x4008baa	            0x31c0	                            xor eax, eax	      3200	cp-demangle.c	FUNCTION_49
0x4008bac	    0x48c704240000	                      mov qword [rsp], 0	      3201	cp-demangle.c	FUNCTION_49
0x4008bb4	        0x488b4718	            mov rax, qword [rdi + 0x18] 	      3204	cp-demangle.c	FUNCTION_49	IF_1	CALL_1
0x4008bb8	          0x4889e5	                            mov rbp, rsp	      3204	cp-demangle.c	FUNCTION_49	IF_1	CALL_1
0x4008bbb	          0x403830	                     cmp byte [rax], sil	      3204	cp-demangle.c	FUNCTION_49	IF_1	CALL_1
0x4008bbe	            0x751e	                           jne 0x4008bde	      3204	cp-demangle.c	FUNCTION_49	IF_1	CALL_1
0x4008bc0	        0x4883c001	                              add rax, 1	      3206	cp-demangle.c	FUNCTION_49	IF_1	CALL_2
0x4008bc4	        0x48894718	             mov qword [rdi + 0x18], rax	      3206	cp-demangle.c	FUNCTION_49	IF_1	CALL_2
0x4008bc8	      0xb900000000	                              mov ecx, 0	      3207	cp-demangle.c	FUNCTION_49	IF_1	CALL_3
0x4008bcd	      0xba00000000	                              mov edx, 0	      3207	cp-demangle.c	FUNCTION_49	IF_1	CALL_3
0x4008bd2	      0xbe2e000000	                           mov esi, 0x2e	      3207	cp-demangle.c	FUNCTION_49	IF_1	CALL_3
0x4008bd7	      0xe8b474ffff	                    call sym.d_make_comp	      3207	cp-demangle.c	FUNCTION_49	IF_1	CALL_3
0x4008bdc	            0xeb4b	                           jmp 0x4008c29	      3207	cp-demangle.c	FUNCTION_49	IF_1	CALL_3
0x4008bde	          0x4889df	                            mov rdi, rbx	      3212	cp-demangle.c	FUNCTION_49	WHILE_1	CALL_4
0x4008be1	      0xe868e7ffff	                   call sym.d_expression	      3212	cp-demangle.c	FUNCTION_49	WHILE_1	CALL_4
0x4008be6	          0x4885c0	                           test rax, rax	      3213	cp-demangle.c	FUNCTION_49	WHILE_1	IF_2
0x4008be9	            0x7439	                            je 0x4008c24	      3213	cp-demangle.c	FUNCTION_49	WHILE_1	IF_2
0x4008beb	      0xb900000000	                              mov ecx, 0	      3216	cp-demangle.c	FUNCTION_49	WHILE_1	CALL_5
0x4008bf0	          0x4889c2	                            mov rdx, rax	      3216	cp-demangle.c	FUNCTION_49	WHILE_1	CALL_5
0x4008bf3	      0xbe2e000000	                           mov esi, 0x2e	      3216	cp-demangle.c	FUNCTION_49	WHILE_1	CALL_5
0x4008bf8	          0x4889df	                            mov rdi, rbx	      3216	cp-demangle.c	FUNCTION_49	WHILE_1	CALL_5
0x4008bfb	      0xe89074ffff	                    call sym.d_make_comp	      3216	cp-demangle.c	FUNCTION_49	WHILE_1	CALL_5
0x4008c00	        0x48894500	                    mov qword [rbp], rax	      3216	cp-demangle.c	FUNCTION_49	WHILE_1	CALL_5
0x4008c04	          0x4885c0	                           test rax, rax	      3217	cp-demangle.c	FUNCTION_49	WHILE_1	IF_3
0x4008c07	            0x7420	                            je 0x4008c29	      3217	cp-demangle.c	FUNCTION_49	WHILE_1	IF_3
0x4008c09	        0x488d6810	                   lea rbp, [rax + 0x10]	      3219	cp-demangle.c	FUNCTION_49	WHILE_1
0x4008c0d	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      3221	cp-demangle.c	FUNCTION_49	WHILE_1	IF_4	CALL_6
0x4008c11	          0x443a20	                    cmp r12b, byte [rax]	      3221	cp-demangle.c	FUNCTION_49	WHILE_1	IF_4	CALL_6
0x4008c14	            0x75c8	                           jne 0x4008bde	      3221	cp-demangle.c	FUNCTION_49	WHILE_1	IF_4	CALL_6
0x4008c16	        0x4883c001	                              add rax, 1	      3223	cp-demangle.c	FUNCTION_49	WHILE_1	IF_4	CALL_7
0x4008c1a	        0x48894318	             mov qword [rbx + 0x18], rax	      3223	cp-demangle.c	FUNCTION_49	WHILE_1	IF_4	CALL_7
0x4008c1e	        0x488b0424	                    mov rax, qword [rsp]	      3228	cp-demangle.c	FUNCTION_49
0x4008c22	            0xeb05	                           jmp 0x4008c29	      3228	cp-demangle.c	FUNCTION_49
0x4008c24	      0xb800000000	                              mov eax, 0	      3214	cp-demangle.c	FUNCTION_49	WHILE_1	IF_2
0x4008c29	      0x488b542408	                mov rdx, qword [rsp + 8]	      3229	cp-demangle.c	FUNCTION_49
0x4008c2e	    0x644833142528	                xor rdx, qword fs:[0x28]	      3229	cp-demangle.c	FUNCTION_49
0x4008c37	            0x7405	                            je 0x4008c3e	      3229	cp-demangle.c	FUNCTION_49
0x4008c39	      0xe800000000	                          call 0x4008c3e	      3229	cp-demangle.c	FUNCTION_49
0x4008c3e	        0x4883c410	                           add rsp, 0x10	      3229	cp-demangle.c	FUNCTION_49
0x4008c42	              0x5b	                                 pop rbx	      3229	cp-demangle.c	FUNCTION_49
0x4008c43	              0x5d	                                 pop rbp	      3229	cp-demangle.c	FUNCTION_49
0x4008c44	            0x415c	                                 pop r12	      3229	cp-demangle.c	FUNCTION_49
0x4008c46	              0xc3	                                     ret	      3229	cp-demangle.c	FUNCTION_49
d_count_templates_scopes	SWITCH,1:CALL,8:IF,2:WHILE,0:ELSE,0:DO,0:FOR,0:functions,0	48
0x400054b	          0x4885d2	                           test rdx, rdx	      4038	cp-demangle.c	FUNCTION_67	IF_1
0x400054e	     0xf8494000000	                            je 0x40005e8	      4038	cp-demangle.c	FUNCTION_67	IF_1
0x4000554	          0x833a4f	                   cmp dword [rdx], 0x4f	      4041	cp-demangle.c	FUNCTION_67	SWITCH_1
0x4000557	     0xf878b000000	                            ja 0x40005e8	      4041	cp-demangle.c	FUNCTION_67	SWITCH_1
0x400055d	            0x4154	                                push r12	      4037	cp-demangle.c	FUNCTION_67
0x400055f	              0x55	                                push rbp	      4037	cp-demangle.c	FUNCTION_67
0x4000560	              0x53	                                push rbx	      4037	cp-demangle.c	FUNCTION_67
0x4000561	          0x4889d3	                            mov rbx, rdx	      4037	cp-demangle.c	FUNCTION_67
0x4000564	          0x4989f4	                            mov r12, rsi	      4037	cp-demangle.c	FUNCTION_67
0x4000567	          0x4889fd	                            mov rbp, rdi	      4037	cp-demangle.c	FUNCTION_67
0x400056a	            0x8b02	                    mov eax, dword [rdx]	      4041	cp-demangle.c	FUNCTION_67	SWITCH_1
0x400056c	    0xff24c5000000	                       jmp qword [rax*8]	      4041	cp-demangle.c	FUNCTION_67	SWITCH_1
0x4000573	          0x830701	                      add dword [rdi], 1	      4055	cp-demangle.c	FUNCTION_67	SWITCH_1
0x4000576	            0xeb0c	                           jmp 0x4000584	      4056	cp-demangle.c	FUNCTION_67	SWITCH_1
0x4000578	        0x488b4208	                mov rax, qword [rdx + 8]	      4060	cp-demangle.c	FUNCTION_67	SWITCH_1	IF_2
0x400057c	          0x833805	                      cmp dword [rax], 5	      4060	cp-demangle.c	FUNCTION_67	SWITCH_1	IF_2
0x400057f	            0x7503	                           jne 0x4000584	      4060	cp-demangle.c	FUNCTION_67	SWITCH_1	IF_2
0x4000581	          0x830601	                      add dword [rsi], 1	      4061	cp-demangle.c	FUNCTION_67	SWITCH_1	IF_2
0x4000584	        0x488b5308	                mov rdx, qword [rbx + 8]	      4125	cp-demangle.c	FUNCTION_67	SWITCH_1	CALL_1
0x4000588	          0x4c89e6	                            mov rsi, r12	      4125	cp-demangle.c	FUNCTION_67	SWITCH_1	CALL_1
0x400058b	          0x4889ef	                            mov rdi, rbp	      4125	cp-demangle.c	FUNCTION_67	SWITCH_1	CALL_1
0x400058e	      0xe8b8ffffff	       call sym.d_count_templates_scopes	      4125	cp-demangle.c	FUNCTION_67	SWITCH_1	CALL_1
0x4000593	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	      4127	cp-demangle.c	FUNCTION_67	SWITCH_1	CALL_2
0x4000597	          0x4c89e6	                            mov rsi, r12	      4127	cp-demangle.c	FUNCTION_67	SWITCH_1	CALL_2
0x400059a	          0x4889ef	                            mov rdi, rbp	      4127	cp-demangle.c	FUNCTION_67	SWITCH_1	CALL_2
0x400059d	      0xe8a9ffffff	       call sym.d_count_templates_scopes	      4127	cp-demangle.c	FUNCTION_67	SWITCH_1	CALL_2
0x40005a2	            0xeb40	                           jmp 0x40005e4	      4129	cp-demangle.c	FUNCTION_67	SWITCH_1
0x40005a4	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      4132	cp-demangle.c	FUNCTION_67	SWITCH_1	CALL_3
0x40005a8	      0xe89effffff	       call sym.d_count_templates_scopes	      4132	cp-demangle.c	FUNCTION_67	SWITCH_1	CALL_3
0x40005ad	            0xeb35	                           jmp 0x40005e4	      4134	cp-demangle.c	FUNCTION_67	SWITCH_1
0x40005af	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      4137	cp-demangle.c	FUNCTION_67	SWITCH_1	CALL_4
0x40005b3	      0xe893ffffff	       call sym.d_count_templates_scopes	      4137	cp-demangle.c	FUNCTION_67	SWITCH_1	CALL_4
0x40005b8	            0xeb2a	                           jmp 0x40005e4	      4139	cp-demangle.c	FUNCTION_67	SWITCH_1
0x40005ba	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      4142	cp-demangle.c	FUNCTION_67	SWITCH_1	CALL_5
0x40005be	      0xe888ffffff	       call sym.d_count_templates_scopes	      4142	cp-demangle.c	FUNCTION_67	SWITCH_1	CALL_5
0x40005c3	            0xeb1f	                           jmp 0x40005e4	      4144	cp-demangle.c	FUNCTION_67	SWITCH_1
0x40005c5	        0x488b5208	                mov rdx, qword [rdx + 8]	      4147	cp-demangle.c	FUNCTION_67	SWITCH_1	CALL_6
0x40005c9	      0xe87dffffff	       call sym.d_count_templates_scopes	      4147	cp-demangle.c	FUNCTION_67	SWITCH_1	CALL_6
0x40005ce	            0xeb14	                           jmp 0x40005e4	      4149	cp-demangle.c	FUNCTION_67	SWITCH_1
0x40005d0	        0x488b5208	                mov rdx, qword [rdx + 8]	      4153	cp-demangle.c	FUNCTION_67	SWITCH_1	CALL_7
0x40005d4	      0xe872ffffff	       call sym.d_count_templates_scopes	      4153	cp-demangle.c	FUNCTION_67	SWITCH_1	CALL_7
0x40005d9	            0xeb09	                           jmp 0x40005e4	      4155	cp-demangle.c	FUNCTION_67	SWITCH_1
0x40005db	        0x488b5208	                mov rdx, qword [rdx + 8]	      4159	cp-demangle.c	FUNCTION_67	SWITCH_1	CALL_8
0x40005df	      0xe867ffffff	       call sym.d_count_templates_scopes	      4159	cp-demangle.c	FUNCTION_67	SWITCH_1	CALL_8
0x40005e4	              0x5b	                                 pop rbx	      4163	cp-demangle.c	FUNCTION_67
0x40005e5	              0x5d	                                 pop rbp	      4163	cp-demangle.c	FUNCTION_67
0x40005e6	            0x415c	                                 pop r12	      4163	cp-demangle.c	FUNCTION_67
0x40005e8	            0xf3c3	                                     ret	      4163	cp-demangle.c	FUNCTION_67
d_pack_length	SWITCH,0:CALL,0:IF,0:WHILE,1:ELSE,0:DO,0:FOR,0:functions,0	22
0x400078d	          0x4885ff	                           test rdi, rdi	      4445	cp-demangle.c	FUNCTION_80	WHILE_1
0x4000790	            0x742b	                            je 0x40007bd	      4445	cp-demangle.c	FUNCTION_80	WHILE_1
0x4000792	          0x833f2f	                   cmp dword [rdi], 0x2f	      4445	cp-demangle.c	FUNCTION_80	WHILE_1
0x4000795	            0x752c	                           jne 0x40007c3	      4445	cp-demangle.c	FUNCTION_80	WHILE_1
0x4000797	      0x48837f0800	                  cmp qword [rdi + 8], 0	      4446	cp-demangle.c	FUNCTION_80	WHILE_1
0x400079c	            0x742b	                            je 0x40007c9	      4446	cp-demangle.c	FUNCTION_80	WHILE_1
0x400079e	      0xb800000000	                              mov eax, 0	      4446	cp-demangle.c	FUNCTION_80	WHILE_1
0x40007a3	          0x83c001	                              add eax, 1	      4448	cp-demangle.c	FUNCTION_80	WHILE_1
0x40007a6	        0x488b7f10	            mov rdi, qword [rdi + 0x10] 	      4449	cp-demangle.c	FUNCTION_80	WHILE_1
0x40007aa	          0x4885ff	                           test rdi, rdi	      4445	cp-demangle.c	FUNCTION_80	WHILE_1
0x40007ad	            0x741f	                            je 0x40007ce	      4445	cp-demangle.c	FUNCTION_80	WHILE_1
0x40007af	          0x833f2f	                   cmp dword [rdi], 0x2f	      4445	cp-demangle.c	FUNCTION_80	WHILE_1
0x40007b2	            0x751a	                           jne 0x40007ce	      4445	cp-demangle.c	FUNCTION_80	WHILE_1
0x40007b4	      0x48837f0800	                  cmp qword [rdi + 8], 0	      4446	cp-demangle.c	FUNCTION_80	WHILE_1
0x40007b9	            0x75e8	                           jne 0x40007a3	      4446	cp-demangle.c	FUNCTION_80	WHILE_1
0x40007bb	            0xf3c3	                                     ret	      4446	cp-demangle.c	FUNCTION_80	WHILE_1
0x40007bd	      0xb800000000	                              mov eax, 0	      4444	cp-demangle.c	FUNCTION_80
0x40007c2	              0xc3	                                     ret	      4444	cp-demangle.c	FUNCTION_80
0x40007c3	      0xb800000000	                              mov eax, 0	      4444	cp-demangle.c	FUNCTION_80
0x40007c8	              0xc3	                                     ret	      4444	cp-demangle.c	FUNCTION_80
0x40007c9	      0xb800000000	                              mov eax, 0	      4444	cp-demangle.c	FUNCTION_80
0x40007ce	            0xf3c3	                                     ret	      4452	cp-demangle.c	FUNCTION_80
d_abi_tags	SWITCH,0:CALL,4:IF,0:WHILE,1:ELSE,0:DO,0:FOR,0:functions,0	28
0x4006137	            0x4154	                                push r12	      1366	cp-demangle.c	ELSE_4	FUNCTION_19
0x4006139	              0x55	                                push rbp	      1366	cp-demangle.c	ELSE_4	FUNCTION_19
0x400613a	              0x53	                                push rbx	      1366	cp-demangle.c	ELSE_4	FUNCTION_19
0x400613b	          0x4889fb	                            mov rbx, rdi	      1366	cp-demangle.c	ELSE_4	FUNCTION_19
0x400613e	          0x4889f5	                            mov rbp, rsi	      1366	cp-demangle.c	ELSE_4	FUNCTION_19
0x4006141	        0x4c8b6740	            mov r12, qword [rdi + 0x40] 	      1371	cp-demangle.c	ELSE_4	FUNCTION_19
0x4006145	        0x488b4718	            mov rax, qword [rdi + 0x18] 	      1373	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_1
0x4006149	          0x803842	                    cmp byte [rax], 0x42	      1373	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_1
0x400614c	            0x752f	                           jne 0x400617d	      1373	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_1
0x400614e	        0x4883c001	                              add rax, 1	      1377	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_2
0x4006152	        0x48894318	             mov qword [rbx + 0x18], rax	      1377	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_2
0x4006156	          0x4889df	                            mov rdi, rbx	      1378	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_3
0x4006159	      0xe80cffffff	                  call sym.d_source_name	      1378	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_3
0x400615e	          0x4889c1	                            mov rcx, rax	      1379	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_4
0x4006161	          0x4889ea	                            mov rdx, rbp	      1379	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_4
0x4006164	      0xbe4b000000	                           mov esi, 0x4b	      1379	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_4
0x4006169	          0x4889df	                            mov rdi, rbx	      1379	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_4
0x400616c	      0xe81f9fffff	                    call sym.d_make_comp	      1379	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_4
0x4006171	          0x4889c5	                            mov rbp, rax	      1379	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_4
0x4006174	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1373	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_1
0x4006178	          0x803842	                    cmp byte [rax], 0x42	      1373	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_1
0x400617b	            0x74d1	                            je 0x400614e	      1373	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_1
0x400617d	        0x4c896340	             mov qword [rbx + 0x40], r12	      1382	cp-demangle.c	ELSE_4	FUNCTION_19
0x4006181	          0x4889e8	                            mov rax, rbp	      1385	cp-demangle.c	ELSE_4	FUNCTION_19
0x4006184	              0x5b	                                 pop rbx	      1385	cp-demangle.c	ELSE_4	FUNCTION_19
0x4006185	              0x5d	                                 pop rbp	      1385	cp-demangle.c	ELSE_4	FUNCTION_19
0x4006186	            0x415c	                                 pop r12	      1385	cp-demangle.c	ELSE_4	FUNCTION_19
0x4006188	              0xc3	                                     ret	      1385	cp-demangle.c	ELSE_4	FUNCTION_19
cplus_demangle_v3_callback	SWITCH,0:CALL,1:IF,0:WHILE,0:ELSE,0:DO,0:FOR,0:functions,0	4
0x4009b96	        0x4883ec08	                              sub rsp, 8	      6462	cp-demangle.c	FUNCTION_101
0x4009b9a	      0xe8d2faffff	            call sym.d_demangle_callback	      6463	cp-demangle.c	FUNCTION_101	CALL_1
0x4009b9f	        0x4883c408	                              add rsp, 8	      6464	cp-demangle.c	FUNCTION_101
0x4009ba3	              0xc3	                                     ret	      6464	cp-demangle.c	FUNCTION_101
is_ctor_dtor_or_conversion	SWITCH,1:CALL,1:IF,1:WHILE,0:ELSE,0:DO,0:FOR,0:functions,0	25
0x400011e	          0x4885ff	                           test rdi, rdi	      1277	cp-demangle.c	FUNCTION_17	IF_1
0x4000121	            0x7430	                            je 0x4000153	      1277	cp-demangle.c	FUNCTION_17	IF_1
0x4000123	            0x8b07	                    mov eax, dword [rdi]	      1279	cp-demangle.c	FUNCTION_17	SWITCH_1
0x4000125	          0x83f808	                              cmp eax, 8	      1279	cp-demangle.c	FUNCTION_17	SWITCH_1
0x4000128	            0x770f	                            ja 0x4000139	      1279	cp-demangle.c	FUNCTION_17	SWITCH_1
0x400012a	          0x83f807	                              cmp eax, 7	      1279	cp-demangle.c	FUNCTION_17	SWITCH_1
0x400012d	            0x730f	                           jae 0x400013e	      1279	cp-demangle.c	FUNCTION_17	SWITCH_1
0x400012f	          0x83e801	                              sub eax, 1	      1279	cp-demangle.c	FUNCTION_17	SWITCH_1
0x4000132	          0x83f801	                              cmp eax, 1	      1279	cp-demangle.c	FUNCTION_17	SWITCH_1
0x4000135	            0x760d	                           jbe 0x4000144	      1279	cp-demangle.c	FUNCTION_17	SWITCH_1
0x4000137	            0xeb20	                           jmp 0x4000159	      1279	cp-demangle.c	FUNCTION_17	SWITCH_1
0x4000139	          0x83f834	                           cmp eax, 0x34	      1279	cp-demangle.c	FUNCTION_17	SWITCH_1
0x400013c	            0x751b	                           jne 0x4000159	      1279	cp-demangle.c	FUNCTION_17	SWITCH_1
0x400013e	      0xb801000000	                              mov eax, 1	      1289	cp-demangle.c	FUNCTION_17	SWITCH_1
0x4000143	              0xc3	                                     ret	      1291	cp-demangle.c	FUNCTION_17
0x4000144	        0x4883ec08	                              sub rsp, 8	      1276	cp-demangle.c	FUNCTION_17
0x4000148	        0x488b7f10	            mov rdi, qword [rdi + 0x10] 	      1285	cp-demangle.c	FUNCTION_17	SWITCH_1	CALL_1
0x400014c	      0xe8cdffffff	     call sym.is_ctor_dtor_or_conversion	      1285	cp-demangle.c	FUNCTION_17	SWITCH_1	CALL_1
0x4000151	            0xeb0c	                           jmp 0x400015f	      1285	cp-demangle.c	FUNCTION_17	SWITCH_1	CALL_1
0x4000153	      0xb800000000	                              mov eax, 0	      1278	cp-demangle.c	FUNCTION_17	IF_1
0x4000158	              0xc3	                                     ret	      1278	cp-demangle.c	FUNCTION_17	IF_1
0x4000159	      0xb800000000	                              mov eax, 0	      1282	cp-demangle.c	FUNCTION_17	SWITCH_1
0x400015e	              0xc3	                                     ret	      1282	cp-demangle.c	FUNCTION_17	SWITCH_1
0x400015f	        0x4883c408	                              add rsp, 8	      1291	cp-demangle.c	FUNCTION_17
0x4000163	              0xc3	                                     ret	      1291	cp-demangle.c	FUNCTION_17
d_number_component	SWITCH,0:CALL,2:IF,1:WHILE,0:ELSE,0:DO,0:FOR,0:functions,0	16
0x400029d	              0x55	                                push rbp	      1720	cp-demangle.c	FUNCTION_26
0x400029e	              0x53	                                push rbx	      1720	cp-demangle.c	FUNCTION_26
0x400029f	          0x4889fd	                            mov rbp, rdi	      1720	cp-demangle.c	FUNCTION_26
0x40002a2	      0xe8c1fdffff	                   call sym.d_make_empty	      1721	cp-demangle.c	FUNCTION_26	CALL_1
0x40002a7	          0x4889c3	                            mov rbx, rax	      1721	cp-demangle.c	FUNCTION_26	CALL_1
0x40002aa	          0x4885c0	                           test rax, rax	      1722	cp-demangle.c	FUNCTION_26	IF_1
0x40002ad	            0x7414	                            je 0x40002c3	      1722	cp-demangle.c	FUNCTION_26	IF_1
0x40002af	    0xc70041000000	                   mov dword [rax], 0x41	      1724	cp-demangle.c	FUNCTION_26	IF_1
0x40002b5	          0x4889ef	                            mov rdi, rbp	      1725	cp-demangle.c	FUNCTION_26	IF_1	CALL_2
0x40002b8	      0xe816ffffff	                       call sym.d_number	      1725	cp-demangle.c	FUNCTION_26	IF_1	CALL_2
0x40002bd	            0x4898	                                    cdqe	      1725	cp-demangle.c	FUNCTION_26	IF_1	CALL_2
0x40002bf	        0x48894308	                mov qword [rbx + 8], rax	      1725	cp-demangle.c	FUNCTION_26	IF_1	CALL_2
0x40002c3	          0x4889d8	                            mov rax, rbx	      1728	cp-demangle.c	FUNCTION_26
0x40002c6	              0x5b	                                 pop rbx	      1728	cp-demangle.c	FUNCTION_26
0x40002c7	              0x5d	                                 pop rbp	      1728	cp-demangle.c	FUNCTION_26
0x40002c8	              0xc3	                                     ret	      1728	cp-demangle.c	FUNCTION_26
d_lookup_template_argument	SWITCH,0:CALL,2:IF,1:WHILE,0:ELSE,0:DO,0:FOR,0:functions,0	10
0x40006d3	    0x488b87200100	           mov rax, qword [rdi + 0x120] 	      4378	cp-demangle.c	FUNCTION_78	IF_1
0x40006da	          0x4885c0	                           test rax, rax	      4378	cp-demangle.c	FUNCTION_78	IF_1
0x40006dd	            0x750b	                           jne 0x40006ea	      4378	cp-demangle.c	FUNCTION_78	IF_1
0x40006df	    0xc78730010000	              mov dword [rdi + 0x130], 1	      4207	cp-demangle.c	FUNCTION_69
0x40006e9	              0xc3	                                     ret	      4381	cp-demangle.c	FUNCTION_78	IF_1
0x40006ea	        0x488b7608	                mov rsi, qword [rsi + 8]	      4384	cp-demangle.c	FUNCTION_78	CALL_2
0x40006ee	        0x488b4008	                mov rax, qword [rax + 8]	      4384	cp-demangle.c	FUNCTION_78	CALL_2
0x40006f2	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      4384	cp-demangle.c	FUNCTION_78	CALL_2
0x40006f6	      0xe87fffffff	      call sym.d_index_template_argument	      4384	cp-demangle.c	FUNCTION_78	CALL_2
0x40006fb	            0xf3c3	                                     ret	      4387	cp-demangle.c	FUNCTION_78
d_print_expr_op	SWITCH,0:CALL,2:IF,1:WHILE,0:ELSE,1:DO,0:FOR,0:functions,0	40
0x4005a81	            0x4156	                                push r14	      6099	cp-demangle.c	FUNCTION_93
0x4005a83	            0x4155	                                push r13	      6099	cp-demangle.c	FUNCTION_93
0x4005a85	            0x4154	                                push r12	      6099	cp-demangle.c	FUNCTION_93
0x4005a87	              0x55	                                push rbp	      6099	cp-demangle.c	FUNCTION_93
0x4005a88	              0x53	                                push rbx	      6099	cp-demangle.c	FUNCTION_93
0x4005a89	          0x4889fb	                            mov rbx, rdi	      6099	cp-demangle.c	FUNCTION_93
0x4005a8c	          0x833a31	                   cmp dword [rdx], 0x31	      6100	cp-demangle.c	FUNCTION_93	IF_1
0x4005a8f	            0x757f	                           jne 0x4005b10	      6100	cp-demangle.c	FUNCTION_93	IF_1
0x4005a91	        0x488b4208	                mov rax, qword [rdx + 8]	      6102	cp-demangle.c	FUNCTION_93	IF_1
0x4005a95	        0x4c636810	         movsxd r13, dword [rax + 0x10] 	      6101	cp-demangle.c	FUNCTION_93	IF_1	CALL_1
0x4005a99	        0x4c8b7008	                mov r14, qword [rax + 8]	      6101	cp-demangle.c	FUNCTION_93	IF_1	CALL_1
0x4005a9d	          0x4d85ed	                           test r13, r13	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4005aa0	            0x7473	                            je 0x4005b15	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4005aa2	      0xbd00000000	                              mov ebp, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4005aa7	      0x450fb6242e	            movzx r12d, byte [r14 + rbp]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4005aac	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005ab7	            0x752f	                           jne 0x4005ae8	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005ab9	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4005ac0	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005ac7	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005acc	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005acf	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005ad5	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4005ae0	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4005ae8	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4005aef	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4005af3	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4005afa	        0x44882403	              mov byte [rbx + rax], r12b	      4235	cp-demangle.c	FUNCTION_72
0x4005afe	    0x4488a3080100	            mov byte [rbx + 0x108], r12b	      4236	cp-demangle.c	FUNCTION_72
0x4005b05	        0x4883c501	                              add rbp, 1	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4005b09	          0x4939ed	                            cmp r13, rbp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4005b0c	            0x7599	                           jne 0x4005aa7	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4005b0e	            0xeb05	                           jmp 0x4005b15	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4005b10	      0xe8cdebffff	                   call sym.d_print_comp	      6104	cp-demangle.c	FUNCTION_93	CALL_2
0x4005b15	              0x5b	                                 pop rbx	      6105	cp-demangle.c	FUNCTION_93
0x4005b16	              0x5d	                                 pop rbp	      6105	cp-demangle.c	FUNCTION_93
0x4005b17	            0x415c	                                 pop r12	      6105	cp-demangle.c	FUNCTION_93
0x4005b19	            0x415d	                                 pop r13	      6105	cp-demangle.c	FUNCTION_93
0x4005b1b	            0x415e	                                 pop r14	      6105	cp-demangle.c	FUNCTION_93
0x4005b1d	              0xc3	                                     ret	      6105	cp-demangle.c	FUNCTION_93
d_index_template_argument	SWITCH,0:CALL,0:IF,4:WHILE,0:ELSE,0:DO,0:FOR,1:functions,0	35
0x400067a	            0x85f6	                           test esi, esi	      4351	cp-demangle.c	FUNCTION_77	IF_1
0x400067c	            0x7839	                            js 0x40006b7	      4351	cp-demangle.c	FUNCTION_77	IF_1
0x400067e	          0x4885ff	                           test rdi, rdi	      4355	cp-demangle.c	FUNCTION_77	FOR_1
0x4000681	            0x7438	                            je 0x40006bb	      4355	cp-demangle.c	FUNCTION_77	FOR_1
0x4000683	          0x833f2f	                   cmp dword [rdi], 0x2f	      4359	cp-demangle.c	FUNCTION_77	FOR_1	IF_2
0x4000686	            0x7539	                           jne 0x40006c1	      4359	cp-demangle.c	FUNCTION_77	FOR_1	IF_2
0x4000688	            0x85f6	                           test esi, esi	      4361	cp-demangle.c	FUNCTION_77	FOR_1	IF_3
0x400068a	            0x7f0b	                            jg 0x4000697	      4361	cp-demangle.c	FUNCTION_77	FOR_1	IF_3
0x400068c	            0xeb1b	                           jmp 0x40006a9	      4361	cp-demangle.c	FUNCTION_77	FOR_1	IF_3
0x400068e	          0x833f2f	                   cmp dword [rdi], 0x2f	      4359	cp-demangle.c	FUNCTION_77	FOR_1	IF_2
0x4000691	            0x7534	                           jne 0x40006c7	      4359	cp-demangle.c	FUNCTION_77	FOR_1	IF_2
0x4000693	            0x85f6	                           test esi, esi	      4361	cp-demangle.c	FUNCTION_77	FOR_1	IF_3
0x4000695	            0x741b	                            je 0x40006b2	      4361	cp-demangle.c	FUNCTION_77	FOR_1	IF_3
0x4000697	          0x83ee01	                              sub esi, 1	      4363	cp-demangle.c	FUNCTION_77	FOR_1
0x400069a	        0x488b7f10	            mov rdi, qword [rdi + 0x10] 	      4357	cp-demangle.c	FUNCTION_77	FOR_1
0x400069e	          0x4885ff	                           test rdi, rdi	      4355	cp-demangle.c	FUNCTION_77	FOR_1
0x40006a1	            0x75eb	                           jne 0x400068e	      4355	cp-demangle.c	FUNCTION_77	FOR_1
0x40006a3	      0xb800000000	                              mov eax, 0	      4366	cp-demangle.c	FUNCTION_77	IF_4
0x40006a8	              0xc3	                                     ret	      4366	cp-demangle.c	FUNCTION_77	IF_4
0x40006a9	            0x85f6	                           test esi, esi	      4365	cp-demangle.c	FUNCTION_77	IF_4
0x40006ab	            0x7520	                           jne 0x40006cd	      4365	cp-demangle.c	FUNCTION_77	IF_4
0x40006ad	          0x4885ff	                           test rdi, rdi	      4365	cp-demangle.c	FUNCTION_77	IF_4
0x40006b0	            0x741b	                            je 0x40006cd	      4365	cp-demangle.c	FUNCTION_77	IF_4
0x40006b2	        0x488b4708	                mov rax, qword [rdi + 8]	      4368	cp-demangle.c	FUNCTION_77
0x40006b6	              0xc3	                                     ret	      4368	cp-demangle.c	FUNCTION_77
0x40006b7	          0x4889f8	                            mov rax, rdi	      4353	cp-demangle.c	FUNCTION_77	IF_1
0x40006ba	              0xc3	                                     ret	      4353	cp-demangle.c	FUNCTION_77	IF_1
0x40006bb	      0xb800000000	                              mov eax, 0	      4366	cp-demangle.c	FUNCTION_77	IF_4
0x40006c0	              0xc3	                                     ret	      4366	cp-demangle.c	FUNCTION_77	IF_4
0x40006c1	      0xb800000000	                              mov eax, 0	      4360	cp-demangle.c	FUNCTION_77	FOR_1	IF_2
0x40006c6	              0xc3	                                     ret	      4360	cp-demangle.c	FUNCTION_77	FOR_1	IF_2
0x40006c7	      0xb800000000	                              mov eax, 0	      4360	cp-demangle.c	FUNCTION_77	FOR_1	IF_2
0x40006cc	              0xc3	                                     ret	      4360	cp-demangle.c	FUNCTION_77	FOR_1	IF_2
0x40006cd	      0xb800000000	                              mov eax, 0	      4366	cp-demangle.c	FUNCTION_77	IF_4
0x40006d2	              0xc3	                                     ret	      4369	cp-demangle.c	FUNCTION_77
d_print_mod	SWITCH,1:CALL,30:IF,4:WHILE,0:ELSE,0:DO,0:FOR,0:functions,0	440
0x400477f	            0x4157	                                push r15	      5875	cp-demangle.c	FUNCTION_90
0x4004781	            0x4156	                                push r14	      5875	cp-demangle.c	FUNCTION_90
0x4004783	            0x4155	                                push r13	      5875	cp-demangle.c	FUNCTION_90
0x4004785	            0x4154	                                push r12	      5875	cp-demangle.c	FUNCTION_90
0x4004787	              0x55	                                push rbp	      5875	cp-demangle.c	FUNCTION_90
0x4004788	              0x53	                                push rbx	      5875	cp-demangle.c	FUNCTION_90
0x4004789	        0x4883ec08	                              sub rsp, 8	      5875	cp-demangle.c	FUNCTION_90
0x400478d	          0x4889fb	                            mov rbx, rdi	      5875	cp-demangle.c	FUNCTION_90
0x4004790	          0x4189f5	                           mov r13d, esi	      5875	cp-demangle.c	FUNCTION_90
0x4004793	          0x4889d5	                            mov rbp, rdx	      5875	cp-demangle.c	FUNCTION_90
0x4004796	            0x8b02	                    mov eax, dword [rdx]	      5876	cp-demangle.c	FUNCTION_90	SWITCH_1
0x4004798	          0x83e803	                              sub eax, 3	      5876	cp-demangle.c	FUNCTION_90	SWITCH_1
0x400479b	          0x83f84c	                           cmp eax, 0x4c	      5876	cp-demangle.c	FUNCTION_90	SWITCH_1
0x400479e	     0xf8763090000	                            ja 0x4005107	      5876	cp-demangle.c	FUNCTION_90	SWITCH_1
0x40047a4	            0x89c0	                            mov eax, eax	      5876	cp-demangle.c	FUNCTION_90	SWITCH_1
0x40047a6	    0xff24c5000000	                       jmp qword [rax*8]	      5876	cp-demangle.c	FUNCTION_90	SWITCH_1
0x40047ad	      0xbd00000000	                              mov ebp, 0	      5876	cp-demangle.c	FUNCTION_90	SWITCH_1
0x40047b2	    0x41bd00000000	                             mov r13d, 0	      5876	cp-demangle.c	FUNCTION_90	SWITCH_1
0x40047b8	      0x440fb66500	                  movzx r12d, byte [rbp]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x40047bd	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40047c8	            0x752f	                           jne 0x40047f9	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40047ca	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40047d1	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40047d8	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40047dd	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40047e0	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40047e6	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x40047f1	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40047f9	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4004800	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4004804	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x400480b	        0x44882403	              mov byte [rbx + rax], r12b	      4235	cp-demangle.c	FUNCTION_72
0x400480f	    0x4488a3080100	            mov byte [rbx + 0x108], r12b	      4236	cp-demangle.c	FUNCTION_72
0x4004816	        0x4883c501	                              add rbp, 1	      4236	cp-demangle.c	FUNCTION_72
0x400481a	          0x4939ed	                            cmp r13, rbp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400481d	            0x7599	                           jne 0x40047b8	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400481f	      0xe9f1080000	                           jmp 0x4005115	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4004824	      0xbd00000000	                              mov ebp, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4004829	    0x41bd00000000	                             mov r13d, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400482f	      0x440fb66500	                  movzx r12d, byte [rbp]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4004834	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400483f	            0x752f	                           jne 0x4004870	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004841	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4004848	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400484f	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004854	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004857	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400485d	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4004868	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4004870	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4004877	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x400487b	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4004882	        0x44882403	              mov byte [rbx + rax], r12b	      4235	cp-demangle.c	FUNCTION_72
0x4004886	    0x4488a3080100	            mov byte [rbx + 0x108], r12b	      4236	cp-demangle.c	FUNCTION_72
0x400488d	        0x4883c501	                              add rbp, 1	      4236	cp-demangle.c	FUNCTION_72
0x4004891	          0x4939ed	                            cmp r13, rbp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4004894	            0x7599	                           jne 0x400482f	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4004896	      0xe97a080000	                           jmp 0x4005115	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400489b	      0xbd00000000	                              mov ebp, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40048a0	    0x41bd00000000	                             mov r13d, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40048a6	      0x440fb66500	                  movzx r12d, byte [rbp]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x40048ab	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40048b6	            0x752f	                           jne 0x40048e7	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40048b8	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40048bf	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40048c6	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40048cb	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40048ce	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40048d4	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x40048df	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40048e7	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x40048ee	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x40048f2	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40048f9	        0x44882403	              mov byte [rbx + rax], r12b	      4235	cp-demangle.c	FUNCTION_72
0x40048fd	    0x4488a3080100	            mov byte [rbx + 0x108], r12b	      4236	cp-demangle.c	FUNCTION_72
0x4004904	        0x4883c501	                              add rbp, 1	      4236	cp-demangle.c	FUNCTION_72
0x4004908	          0x4939ed	                            cmp r13, rbp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400490b	            0x7599	                           jne 0x40048a6	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400490d	      0xe903080000	                           jmp 0x4005115	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4004912	      0xbd00000000	                              mov ebp, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4004917	    0x41bd00000000	                             mov r13d, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400491d	      0x440fb66500	                  movzx r12d, byte [rbp]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4004922	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400492d	            0x752f	                           jne 0x400495e	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400492f	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4004936	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400493d	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004942	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004945	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400494b	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4004956	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400495e	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4004965	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4004969	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4004970	        0x44882403	              mov byte [rbx + rax], r12b	      4235	cp-demangle.c	FUNCTION_72
0x4004974	    0x4488a3080100	            mov byte [rbx + 0x108], r12b	      4236	cp-demangle.c	FUNCTION_72
0x400497b	        0x4883c501	                              add rbp, 1	      4236	cp-demangle.c	FUNCTION_72
0x400497f	          0x4939ed	                            cmp r13, rbp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4004982	            0x7599	                           jne 0x400491d	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4004984	      0xe98c070000	                           jmp 0x4005115	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4004989	    0x41bc00000000	                             mov r12d, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400498f	    0x41bf00000000	                             mov r15d, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4004995	      0x450fb63424	                  movzx r14d, byte [r12]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x400499a	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40049a5	            0x752f	                           jne 0x40049d6	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40049a7	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40049ae	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40049b5	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40049ba	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40049bd	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40049c3	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x40049ce	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40049d6	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x40049dd	        0x488d7001	                      lea rsi, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x40049e1	    0x4889b3000100	            mov qword [rbx + 0x100], rsi	      4235	cp-demangle.c	FUNCTION_72
0x40049e8	        0x44883403	              mov byte [rbx + rax], r14b	      4235	cp-demangle.c	FUNCTION_72
0x40049ec	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x40049f3	        0x4983c401	                              add r12, 1	      4236	cp-demangle.c	FUNCTION_72
0x40049f7	          0x4d39e7	                            cmp r15, r12	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40049fa	            0x7599	                           jne 0x4004995	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40049fc	      0x48837d1000	               cmp qword [rbp + 0x10], 0	      5895	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_1
0x4004a01	     0xf840e070000	                            je 0x4005115	      5895	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_1
0x4004a07	    0x4881feff0000	                           cmp rsi, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004a0e	            0x7527	                           jne 0x4004a37	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004a10	        0xc6043300	                 mov byte [rbx + rsi], 0	      4221	cp-demangle.c	FUNCTION_71
0x4004a14	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004a1b	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004a1e	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004a24	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4004a2f	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4004a37	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4004a3e	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4004a42	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4004a49	        0xc6040328	              mov byte [rbx + rax], 0x28	      4235	cp-demangle.c	FUNCTION_72
0x4004a4d	    0xc68308010000	           mov byte [rbx + 0x108], 0x28 	      4236	cp-demangle.c	FUNCTION_72
0x4004a54	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	      5898	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_1	CALL_7
0x4004a58	          0x4489ee	                           mov esi, r13d	      5898	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_1	CALL_7
0x4004a5b	          0x4889df	                            mov rdi, rbx	      5898	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_1	CALL_7
0x4004a5e	      0xe87ffcffff	                   call sym.d_print_comp	      5898	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_1	CALL_7
0x4004a63	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004a6e	            0x752f	                           jne 0x4004a9f	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004a70	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4004a77	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004a7e	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004a83	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004a86	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004a8c	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4004a97	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4004a9f	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4004aa6	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4004aaa	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4004ab1	        0xc6040329	              mov byte [rbx + rax], 0x29	      4235	cp-demangle.c	FUNCTION_72
0x4004ab5	    0xc68308010000	           mov byte [rbx + 0x108], 0x29 	      4236	cp-demangle.c	FUNCTION_72
0x4004abc	      0xe954060000	                           jmp 0x4005115	      4236	cp-demangle.c	FUNCTION_72
0x4004ac1	    0x41bc00000000	                             mov r12d, 0	      4236	cp-demangle.c	FUNCTION_72
0x4004ac7	    0x41bf00000000	                             mov r15d, 0	      4236	cp-demangle.c	FUNCTION_72
0x4004acd	      0x450fb63424	                  movzx r14d, byte [r12]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4004ad2	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004add	            0x752f	                           jne 0x4004b0e	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004adf	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4004ae6	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004aed	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004af2	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004af5	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004afb	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4004b06	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4004b0e	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4004b15	        0x488d7001	                      lea rsi, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4004b19	    0x4889b3000100	            mov qword [rbx + 0x100], rsi	      4235	cp-demangle.c	FUNCTION_72
0x4004b20	        0x44883403	              mov byte [rbx + rax], r14b	      4235	cp-demangle.c	FUNCTION_72
0x4004b24	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x4004b2b	        0x4983c401	                              add r12, 1	      4236	cp-demangle.c	FUNCTION_72
0x4004b2f	          0x4d39e7	                            cmp r15, r12	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4004b32	            0x7599	                           jne 0x4004acd	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4004b34	      0x48837d1000	               cmp qword [rbp + 0x10], 0	      5904	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_2
0x4004b39	     0xf84d6050000	                            je 0x4005115	      5904	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_2
0x4004b3f	    0x4881feff0000	                           cmp rsi, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004b46	            0x7527	                           jne 0x4004b6f	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004b48	        0xc6043300	                 mov byte [rbx + rsi], 0	      4221	cp-demangle.c	FUNCTION_71
0x4004b4c	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004b53	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004b56	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004b5c	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4004b67	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4004b6f	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4004b76	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4004b7a	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4004b81	        0xc6040328	              mov byte [rbx + rax], 0x28	      4235	cp-demangle.c	FUNCTION_72
0x4004b85	    0xc68308010000	           mov byte [rbx + 0x108], 0x28 	      4236	cp-demangle.c	FUNCTION_72
0x4004b8c	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	      5907	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_2	CALL_11
0x4004b90	          0x4489ee	                           mov esi, r13d	      5907	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_2	CALL_11
0x4004b93	          0x4889df	                            mov rdi, rbx	      5907	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_2	CALL_11
0x4004b96	      0xe847fbffff	                   call sym.d_print_comp	      5907	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_2	CALL_11
0x4004b9b	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004ba6	            0x752f	                           jne 0x4004bd7	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004ba8	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4004baf	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004bb6	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004bbb	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004bbe	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004bc4	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4004bcf	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4004bd7	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4004bde	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4004be2	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4004be9	        0xc6040329	              mov byte [rbx + rax], 0x29	      4235	cp-demangle.c	FUNCTION_72
0x4004bed	    0xc68308010000	           mov byte [rbx + 0x108], 0x29 	      4236	cp-demangle.c	FUNCTION_72
0x4004bf4	      0xe91c050000	                           jmp 0x4005115	      4236	cp-demangle.c	FUNCTION_72
0x4004bf9	    0x4881bf000100	          cmp qword [rdi + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004c04	            0x752c	                           jne 0x4004c32	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004c06	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4004c0d	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004c14	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004c19	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004c1f	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4004c2a	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4004c32	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4004c39	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4004c3d	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4004c44	        0xc6040320	              mov byte [rbx + rax], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x4004c48	    0xc68308010000	           mov byte [rbx + 0x108], 0x20 	      4236	cp-demangle.c	FUNCTION_72
0x4004c4f	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	      5913	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_14
0x4004c53	          0x4489ee	                           mov esi, r13d	      5913	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_14
0x4004c56	          0x4889df	                            mov rdi, rbx	      5913	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_14
0x4004c59	      0xe884faffff	                   call sym.d_print_comp	      5913	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_14
0x4004c5e	      0xe9b2040000	                           jmp 0x4005115	      5914	cp-demangle.c	FUNCTION_90	SWITCH_1
0x4004c63	        0x40f6c604	                             test sil, 4	      5917	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_3
0x4004c67	     0xf85a8040000	                           jne 0x4005115	      5917	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_3
0x4004c6d	    0x4881bf000100	          cmp qword [rdi + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004c78	            0x752c	                           jne 0x4004ca6	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004c7a	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4004c81	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004c88	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004c8d	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004c93	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4004c9e	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4004ca6	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4004cad	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4004cb1	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4004cb8	        0xc604032a	              mov byte [rbx + rax], 0x2a	      4235	cp-demangle.c	FUNCTION_72
0x4004cbc	    0xc68308010000	           mov byte [rbx + 0x108], 0x2a 	      4236	cp-demangle.c	FUNCTION_72
0x4004cc3	      0xe94d040000	                           jmp 0x4005115	      4236	cp-demangle.c	FUNCTION_72
0x4004cc8	    0x4881bf000100	          cmp qword [rdi + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004cd3	            0x752c	                           jne 0x4004d01	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004cd5	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4004cdc	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004ce3	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004ce8	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004cee	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4004cf9	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4004d01	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4004d08	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4004d0c	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4004d13	        0xc6040320	              mov byte [rbx + rax], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x4004d17	    0xc68308010000	           mov byte [rbx + 0x108], 0x20 	      4236	cp-demangle.c	FUNCTION_72
0x4004d1e	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004d29	            0x752f	                           jne 0x4004d5a	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004d2b	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4004d32	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004d39	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004d3e	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004d41	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004d47	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4004d52	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4004d5a	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4004d61	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4004d65	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4004d6c	        0xc6040326	              mov byte [rbx + rax], 0x26	      4235	cp-demangle.c	FUNCTION_72
0x4004d70	    0xc68308010000	           mov byte [rbx + 0x108], 0x26 	      4236	cp-demangle.c	FUNCTION_72
0x4004d77	      0xe999030000	                           jmp 0x4005115	      4236	cp-demangle.c	FUNCTION_72
0x4004d7c	    0x4881bf000100	          cmp qword [rdi + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004d87	            0x752c	                           jne 0x4004db5	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004d89	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4004d90	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004d97	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004d9c	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004da2	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4004dad	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4004db5	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4004dbc	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4004dc0	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4004dc7	        0xc6040320	              mov byte [rbx + rax], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x4004dcb	    0xc68308010000	           mov byte [rbx + 0x108], 0x20 	      4236	cp-demangle.c	FUNCTION_72
0x4004dd2	      0xbd00000000	                              mov ebp, 0	      4236	cp-demangle.c	FUNCTION_72
0x4004dd7	    0x41bd00000000	                             mov r13d, 0	      4236	cp-demangle.c	FUNCTION_72
0x4004ddd	      0x440fb66500	                  movzx r12d, byte [rbp]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4004de2	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004ded	            0x752f	                           jne 0x4004e1e	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004def	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4004df6	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004dfd	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004e02	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004e05	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004e0b	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4004e16	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4004e1e	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4004e25	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4004e29	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4004e30	        0x44882403	              mov byte [rbx + rax], r12b	      4235	cp-demangle.c	FUNCTION_72
0x4004e34	    0x4488a3080100	            mov byte [rbx + 0x108], r12b	      4236	cp-demangle.c	FUNCTION_72
0x4004e3b	        0x4883c501	                              add rbp, 1	      4236	cp-demangle.c	FUNCTION_72
0x4004e3f	          0x4939ed	                            cmp r13, rbp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4004e42	            0x7599	                           jne 0x4004ddd	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4004e44	      0xe9cc020000	                           jmp 0x4005115	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4004e49	      0xbd00000000	                              mov ebp, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4004e4e	    0x41bd00000000	                             mov r13d, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4004e54	      0x440fb66500	                  movzx r12d, byte [rbp]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4004e59	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004e64	            0x752f	                           jne 0x4004e95	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004e66	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4004e6d	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004e74	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004e79	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004e7c	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004e82	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4004e8d	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4004e95	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4004e9c	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4004ea0	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4004ea7	        0x44882403	              mov byte [rbx + rax], r12b	      4235	cp-demangle.c	FUNCTION_72
0x4004eab	    0x4488a3080100	            mov byte [rbx + 0x108], r12b	      4236	cp-demangle.c	FUNCTION_72
0x4004eb2	        0x4883c501	                              add rbp, 1	      4236	cp-demangle.c	FUNCTION_72
0x4004eb6	          0x4939ed	                            cmp r13, rbp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4004eb9	            0x7599	                           jne 0x4004e54	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4004ebb	      0xe955020000	                           jmp 0x4005115	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4004ec0	      0xbd00000000	                              mov ebp, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4004ec5	    0x41bd00000000	                             mov r13d, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4004ecb	      0x440fb66500	                  movzx r12d, byte [rbp]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4004ed0	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004edb	            0x752f	                           jne 0x4004f0c	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004edd	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4004ee4	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004eeb	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004ef0	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004ef3	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004ef9	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4004f04	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4004f0c	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4004f13	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4004f17	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4004f1e	        0x44882403	              mov byte [rbx + rax], r12b	      4235	cp-demangle.c	FUNCTION_72
0x4004f22	    0x4488a3080100	            mov byte [rbx + 0x108], r12b	      4236	cp-demangle.c	FUNCTION_72
0x4004f29	        0x4883c501	                              add rbp, 1	      4236	cp-demangle.c	FUNCTION_72
0x4004f2d	          0x4939ed	                            cmp r13, rbp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4004f30	            0x7599	                           jne 0x4004ecb	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4004f32	      0xe9de010000	                           jmp 0x4005115	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4004f37	    0x80bf08010000	           cmp byte [rdi + 0x108], 0x28 	      5940	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_4	CALL_22
0x4004f3e	            0x7456	                            je 0x4004f96	      5940	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_4	CALL_22
0x4004f40	    0x4881bf000100	          cmp qword [rdi + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004f4b	            0x752c	                           jne 0x4004f79	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004f4d	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4004f54	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004f5b	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004f60	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004f66	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4004f71	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4004f79	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4004f80	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4004f84	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4004f8b	        0xc6040320	              mov byte [rbx + rax], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x4004f8f	    0xc68308010000	           mov byte [rbx + 0x108], 0x20 	      4236	cp-demangle.c	FUNCTION_72
0x4004f96	        0x488b5508	                mov rdx, qword [rbp + 8]	      5942	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_24
0x4004f9a	          0x4489ee	                           mov esi, r13d	      5942	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_24
0x4004f9d	          0x4889df	                            mov rdi, rbx	      5942	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_24
0x4004fa0	      0xe83df7ffff	                   call sym.d_print_comp	      5942	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_24
0x4004fa5	      0xbd00000000	                              mov ebp, 0	      5942	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_24
0x4004faa	    0x41bd00000000	                             mov r13d, 0	      5942	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_24
0x4004fb0	      0x440fb66500	                  movzx r12d, byte [rbp]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4004fb5	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004fc0	            0x752f	                           jne 0x4004ff1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004fc2	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4004fc9	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004fd0	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004fd5	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004fd8	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004fde	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4004fe9	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4004ff1	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4004ff8	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4004ffc	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4005003	        0x44882403	              mov byte [rbx + rax], r12b	      4235	cp-demangle.c	FUNCTION_72
0x4005007	    0x4488a3080100	            mov byte [rbx + 0x108], r12b	      4236	cp-demangle.c	FUNCTION_72
0x400500e	        0x4883c501	                              add rbp, 1	      4236	cp-demangle.c	FUNCTION_72
0x4005012	          0x4939ed	                            cmp r13, rbp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4005015	            0x7599	                           jne 0x4004fb0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4005017	      0xe9f9000000	                           jmp 0x4005115	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400501c	        0x488b5208	                mov rdx, qword [rdx + 8]	      5946	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_26
0x4005020	      0xe8bdf6ffff	                   call sym.d_print_comp	      5946	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_26
0x4005025	      0xe9eb000000	                           jmp 0x4005115	      5947	cp-demangle.c	FUNCTION_90	SWITCH_1
0x400502a	    0x41bc00000000	                             mov r12d, 0	      5947	cp-demangle.c	FUNCTION_90	SWITCH_1
0x4005030	    0x41bf00000000	                             mov r15d, 0	      5947	cp-demangle.c	FUNCTION_90	SWITCH_1
0x4005036	      0x450fb63424	                  movzx r14d, byte [r12]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x400503b	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005046	            0x752f	                           jne 0x4005077	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005048	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400504f	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005056	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400505b	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400505e	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005064	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x400506f	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4005077	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x400507e	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4005082	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4005089	        0x44883403	              mov byte [rbx + rax], r14b	      4235	cp-demangle.c	FUNCTION_72
0x400508d	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x4005094	        0x4983c401	                              add r12, 1	      4236	cp-demangle.c	FUNCTION_72
0x4005098	          0x4d39e7	                            cmp r15, r12	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400509b	            0x7599	                           jne 0x4005036	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400509d	        0x488b5508	                mov rdx, qword [rbp + 8]	      5950	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_28
0x40050a1	          0x4489ee	                           mov esi, r13d	      5950	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_28
0x40050a4	          0x4889df	                            mov rdi, rbx	      5950	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_28
0x40050a7	      0xe836f6ffff	                   call sym.d_print_comp	      5950	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_28
0x40050ac	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40050b7	            0x752f	                           jne 0x40050e8	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40050b9	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40050c0	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40050c7	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40050cc	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40050cf	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40050d5	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x40050e0	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40050e8	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x40050ef	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x40050f3	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40050fa	        0xc6040329	              mov byte [rbx + rax], 0x29	      4235	cp-demangle.c	FUNCTION_72
0x40050fe	    0xc68308010000	           mov byte [rbx + 0x108], 0x29 	      4236	cp-demangle.c	FUNCTION_72
0x4005105	            0xeb0e	                           jmp 0x4005115	      4236	cp-demangle.c	FUNCTION_72
0x4005107	          0x4889ea	                            mov rdx, rbp	      5957	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_30
0x400510a	          0x4489ee	                           mov esi, r13d	      5957	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_30
0x400510d	          0x4889df	                            mov rdi, rbx	      5957	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_30
0x4005110	      0xe8cdf5ffff	                   call sym.d_print_comp	      5957	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_30
0x4005115	        0x4883c408	                              add rsp, 8	      5960	cp-demangle.c	FUNCTION_90
0x4005119	              0x5b	                                 pop rbx	      5960	cp-demangle.c	FUNCTION_90
0x400511a	              0x5d	                                 pop rbp	      5960	cp-demangle.c	FUNCTION_90
0x400511b	            0x415c	                                 pop r12	      5960	cp-demangle.c	FUNCTION_90
0x400511d	            0x415d	                                 pop r13	      5960	cp-demangle.c	FUNCTION_90
0x400511f	            0x415e	                                 pop r14	      5960	cp-demangle.c	FUNCTION_90
0x4005121	            0x415f	                                 pop r15	      5960	cp-demangle.c	FUNCTION_90
0x4005123	              0xc3	                                     ret	      5960	cp-demangle.c	FUNCTION_90
d_make_empty	SWITCH,0:CALL,0:IF,1:WHILE,0:ELSE,0:DO,0:FOR,0:functions,0	12
0x4000068	          0x8b4728	            mov eax, dword [rdi + 0x28] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400006b	          0x3b472c	            cmp eax, dword [rdi + 0x2c] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400006e	            0x7d1a	                           jge 0x400008a	       933	cp-demangle.c	FUNCTION_3	IF_1
0x4000070	            0x4898	                                    cdqe	       935	cp-demangle.c	FUNCTION_3
0x4000072	        0x488d1440	                  lea rdx, [rax + rax*2]	       935	cp-demangle.c	FUNCTION_3
0x4000076	        0x488b4720	            mov rax, qword [rdi + 0x20] 	       935	cp-demangle.c	FUNCTION_3
0x400007a	        0x488d04d0	                  lea rax, [rax + rdx*8]	       935	cp-demangle.c	FUNCTION_3
0x400007e	    0xc74004000000	                  mov dword [rax + 4], 0	       936	cp-demangle.c	FUNCTION_3
0x4000085	        0x83472801	               add dword [rdi + 0x28], 1	       937	cp-demangle.c	FUNCTION_3
0x4000089	              0xc3	                                     ret	       938	cp-demangle.c	FUNCTION_3
0x400008a	      0xb800000000	                              mov eax, 0	       934	cp-demangle.c	FUNCTION_3	IF_1
0x400008f	              0xc3	                                     ret	       939	cp-demangle.c	FUNCTION_3
d_unqualified_name	SWITCH,1:CALL,17:IF,11:WHILE,0:ELSE,5:DO,0:FOR,0:functions,0	283
0x4006e70	            0x4155	                                push r13	      1611	cp-demangle.c	FUNCTION_23
0x4006e72	            0x4154	                                push r12	      1611	cp-demangle.c	FUNCTION_23
0x4006e74	              0x55	                                push rbp	      1611	cp-demangle.c	FUNCTION_23
0x4006e75	              0x53	                                push rbx	      1611	cp-demangle.c	FUNCTION_23
0x4006e76	        0x4883ec08	                              sub rsp, 8	      1611	cp-demangle.c	FUNCTION_23
0x4006e7a	          0x4889fb	                            mov rbx, rdi	      1611	cp-demangle.c	FUNCTION_23
0x4006e7d	        0x488b4f18	            mov rcx, qword [rdi + 0x18] 	      1615	cp-demangle.c	FUNCTION_23	CALL_1
0x4006e81	           0xfb611	                   movzx edx, byte [rcx]	      1615	cp-demangle.c	FUNCTION_23	CALL_1
0x4006e84	          0x8d42d0	                   lea eax, [rdx - 0x30]	      1616	cp-demangle.c	FUNCTION_23	IF_1
0x4006e87	            0x3c09	                               cmp al, 9	      1616	cp-demangle.c	FUNCTION_23	IF_1
0x4006e89	            0x770d	                            ja 0x4006e98	      1616	cp-demangle.c	FUNCTION_23	IF_1
0x4006e8b	      0xe8daf1ffff	                  call sym.d_source_name	      1617	cp-demangle.c	FUNCTION_23	CALL_2
0x4006e90	          0x4889c5	                            mov rbp, rax	      1617	cp-demangle.c	FUNCTION_23	CALL_2
0x4006e93	      0xe989030000	                           jmp 0x4007221	      1617	cp-demangle.c	FUNCTION_23	CALL_2
0x4006e98	          0x8d429f	                   lea eax, [rdx - 0x61]	      1618	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2
0x4006e9b	            0x3c19	                            cmp al, 0x19	      1618	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2
0x4006e9d	     0xf8787000000	                            ja 0x4006f2a	      1618	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2
0x4006ea3	          0x80fa6f	                            cmp dl, 0x6f	      1620	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_3	CALL_3
0x4006ea6	            0x750e	                           jne 0x4006eb6	      1620	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_3	CALL_3
0x4006ea8	        0x8079016e	                cmp byte [rcx + 1], 0x6e	      1620	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_3	CALL_3
0x4006eac	            0x7508	                           jne 0x4006eb6	      1620	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_3	CALL_3
0x4006eae	        0x4883c102	                              add rcx, 2	      1621	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	CALL_4
0x4006eb2	        0x48894f18	             mov qword [rdi + 0x18], rcx	      1621	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	CALL_4
0x4006eb6	          0x4889df	                            mov rdi, rbx	      1622	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	CALL_5
0x4006eb9	      0xe846fdffff	                call sym.d_operator_name	      1622	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	CALL_5
0x4006ebe	          0x4889c5	                            mov rbp, rax	      1622	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	CALL_5
0x4006ec1	          0x4885c0	                           test rax, rax	      1623	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4
0x4006ec4	     0xf8457030000	                            je 0x4007221	      1623	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4
0x4006eca	          0x833831	                   cmp dword [rax], 0x31	      1623	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4
0x4006ecd	     0xf854e030000	                           jne 0x4007221	      1623	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4
0x4006ed3	        0x488b5008	                mov rdx, qword [rax + 8]	      1625	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4
0x4006ed7	          0x8b4348	            mov eax, dword [rbx + 0x48] 	      1625	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4
0x4006eda	           0x34210	             add eax, dword [rdx + 0x10]	      1625	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4
0x4006edd	          0x83c007	                              add eax, 7	      1625	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4
0x4006ee0	          0x894348	             mov dword [rbx + 0x48], eax	      1625	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4
0x4006ee3	        0x488b4508	                mov rax, qword [rbp + 8]	      1626	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4	IF_5	CALL_6
0x4006ee7	          0x488b00	                    mov rax, qword [rax]	      1626	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4	IF_5	CALL_6
0x4006eea	          0x80386c	                    cmp byte [rax], 0x6c	      1626	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4	IF_5	CALL_6
0x4006eed	     0xf852e030000	                           jne 0x4007221	      1626	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4	IF_5	CALL_6
0x4006ef3	        0x80780169	                cmp byte [rax + 1], 0x69	      1626	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4	IF_5	CALL_6
0x4006ef7	     0xf8524030000	                           jne 0x4007221	      1626	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4	IF_5	CALL_6
0x4006efd	        0x80780200	                   cmp byte [rax + 2], 0	      1626	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4	IF_5	CALL_6
0x4006f01	     0xf851a030000	                           jne 0x4007221	      1626	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4	IF_5	CALL_6
0x4006f07	          0x4889df	                            mov rdi, rbx	      1627	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4	IF_5	CALL_7
0x4006f0a	      0xe85bf1ffff	                  call sym.d_source_name	      1627	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4	IF_5	CALL_7
0x4006f0f	          0x4889c1	                            mov rcx, rax	      1627	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4	IF_5	CALL_7
0x4006f12	          0x4889ea	                            mov rdx, rbp	      1627	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4	IF_5	CALL_7
0x4006f15	      0xbe36000000	                           mov esi, 0x36	      1627	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4	IF_5	CALL_7
0x4006f1a	          0x4889df	                            mov rdi, rbx	      1627	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4	IF_5	CALL_7
0x4006f1d	      0xe86e91ffff	                    call sym.d_make_comp	      1627	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4	IF_5	CALL_7
0x4006f22	          0x4889c5	                            mov rbp, rax	      1627	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4	IF_5	CALL_7
0x4006f25	      0xe9f7020000	                           jmp 0x4007221	      1627	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4	IF_5	CALL_7
0x4006f2a	          0x8d42bd	                   lea eax, [rdx - 0x43]	      1631	cp-demangle.c	FUNCTION_23	ELSE_2	IF_6
0x4006f2d	            0x3c01	                               cmp al, 1	      1631	cp-demangle.c	FUNCTION_23	ELSE_2	IF_6
0x4006f2f	     0xf8781010000	                            ja 0x40070b6	      1631	cp-demangle.c	FUNCTION_23	ELSE_2	IF_6
0x4006f35	        0x4c8b6740	            mov r12, qword [rdi + 0x40] 	      2201	cp-demangle.c	FUNCTION_33	IF_1
0x4006f39	          0x4d85e4	                           test r12, r12	      2201	cp-demangle.c	FUNCTION_33	IF_1
0x4006f3c	            0x741f	                            je 0x4006f5d	      2201	cp-demangle.c	FUNCTION_33	IF_1
0x4006f3e	        0x418b0424	                    mov eax, dword [r12]	      2203	cp-demangle.c	FUNCTION_33	IF_1	IF_2
0x4006f42	            0x85c0	                           test eax, eax	      2203	cp-demangle.c	FUNCTION_33	IF_1	IF_2
0x4006f44	            0x750a	                           jne 0x4006f50	      2203	cp-demangle.c	FUNCTION_33	IF_1	IF_2
0x4006f46	      0x418b442410	            mov eax, dword [r12 + 0x10] 	      2204	cp-demangle.c	FUNCTION_33	IF_1	IF_2
0x4006f4b	           0x14748	             add dword [rdi + 0x48], eax	      2204	cp-demangle.c	FUNCTION_33	IF_1	IF_2
0x4006f4e	            0xeb0d	                           jmp 0x4006f5d	      2204	cp-demangle.c	FUNCTION_33	IF_1	IF_2
0x4006f50	          0x83f818	                           cmp eax, 0x18	      2205	cp-demangle.c	FUNCTION_33	IF_1	ELSE_1	IF_3
0x4006f53	            0x7508	                           jne 0x4006f5d	      2205	cp-demangle.c	FUNCTION_33	IF_1	ELSE_1	IF_3
0x4006f55	      0x418b442410	            mov eax, dword [r12 + 0x10] 	      2206	cp-demangle.c	FUNCTION_33	IF_1	ELSE_1	IF_3
0x4006f5a	           0x14748	             add dword [rdi + 0x48], eax	      2206	cp-demangle.c	FUNCTION_33	IF_1	ELSE_1	IF_3
0x4006f5d	           0xfb601	                   movzx eax, byte [rcx]	      2208	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_1
0x4006f60	            0x3c43	                            cmp al, 0x43	      2208	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_1
0x4006f62	            0x740d	                            je 0x4006f71	      2208	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_1
0x4006f64	            0x3c44	                            cmp al, 0x44	      2208	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_1
0x4006f66	     0xf84da000000	                            je 0x4007046	      2208	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_1
0x4006f6c	      0xe988020000	                           jmp 0x40071f9	      2208	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_1
0x4006f71	         0xfb64101	               movzx eax, byte [rcx + 1]	      2215	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_4	CALL_2
0x4006f75	            0x3c49	                            cmp al, 0x49	      2215	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_4	CALL_2
0x4006f77	     0xf85d9020000	                           jne 0x4007256	      2215	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_4	CALL_2
0x4006f7d	        0x488d5101	                      lea rdx, [rcx + 1]	      2218	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_4	CALL_3
0x4006f81	        0x48895318	             mov qword [rbx + 0x18], rdx	      2218	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_4	CALL_3
0x4006f85	         0xfb64102	               movzx eax, byte [rcx + 2]	      2221	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2	CALL_4
0x4006f89	          0x83e831	                           sub eax, 0x31	      2221	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2	CALL_4
0x4006f8c	            0x3c04	                               cmp al, 4	      2221	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2	CALL_4
0x4006f8e	     0xf876c020000	                            ja 0x4007200	      2221	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2	CALL_4
0x4006f94	           0xfb6c0	                           movzx eax, al	      2221	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2	CALL_4
0x4006f97	    0xff24c5000000	                       jmp qword [rax*8]	      2221	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2	CALL_4
0x4006f9e	          0x4889d1	                            mov rcx, rdx	      2221	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2	CALL_4
0x4006fa1	      0xb801000000	                              mov eax, 1	      2217	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_4
0x4006fa6	            0xeb05	                           jmp 0x4006fad	      2217	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_4
0x4006fa8	      0xb800000000	                              mov eax, 0	      2213	cp-demangle.c	FUNCTION_33	SWITCH_1
0x4006fad	    0x41bd02000000	                             mov r13d, 2	      2227	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2
0x4006fb3	            0xeb50	                           jmp 0x4007005	      2227	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2
0x4006fb5	          0x4889d1	                            mov rcx, rdx	      2221	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2	CALL_4
0x4006fb8	      0xb801000000	                              mov eax, 1	      2217	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_4
0x4006fbd	            0xeb05	                           jmp 0x4006fc4	      2217	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_4
0x4006fbf	      0xb800000000	                              mov eax, 0	      2213	cp-demangle.c	FUNCTION_33	SWITCH_1
0x4006fc4	    0x41bd03000000	                             mov r13d, 3	      2230	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2
0x4006fca	            0xeb39	                           jmp 0x4007005	      2230	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2
0x4006fcc	          0x4889d1	                            mov rcx, rdx	      2221	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2	CALL_4
0x4006fcf	      0xb801000000	                              mov eax, 1	      2217	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_4
0x4006fd4	            0xeb05	                           jmp 0x4006fdb	      2217	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_4
0x4006fd6	      0xb800000000	                              mov eax, 0	      2213	cp-demangle.c	FUNCTION_33	SWITCH_1
0x4006fdb	    0x41bd04000000	                             mov r13d, 4	      2233	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2
0x4006fe1	            0xeb22	                           jmp 0x4007005	      2233	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2
0x4006fe3	          0x4889d1	                            mov rcx, rdx	      2221	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2	CALL_4
0x4006fe6	      0xb801000000	                              mov eax, 1	      2217	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_4
0x4006feb	            0xeb05	                           jmp 0x4006ff2	      2217	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_4
0x4006fed	      0xb800000000	                              mov eax, 0	      2213	cp-demangle.c	FUNCTION_33	SWITCH_1
0x4006ff2	    0x41bd05000000	                             mov r13d, 5	      2236	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2
0x4006ff8	            0xeb0b	                           jmp 0x4007005	      2236	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2
0x4006ffa	      0xb800000000	                              mov eax, 0	      2213	cp-demangle.c	FUNCTION_33	SWITCH_1
0x4006fff	    0x41bd01000000	                             mov r13d, 1	      2224	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2
0x4007005	        0x4883c102	                              add rcx, 2	      2242	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_5
0x4007009	        0x48894b18	             mov qword [rbx + 0x18], rcx	      2242	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_5
0x400700d	            0x85c0	                           test eax, eax	      2244	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_5
0x400700f	            0x7408	                            je 0x4007019	      2244	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_5
0x4007011	          0x4889df	                            mov rdi, rbx	      2245	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_5
0x4007014	      0xe800000000	                          call 0x4007019	      2245	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_5
0x4007019	        0x4c8b6340	            mov r12, qword [rbx + 0x40] 	      2247	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_6
0x400701d	          0x4889df	                            mov rdi, rbx	      1143	cp-demangle.c	FUNCTION_11	CALL_1
0x4007020	      0xe84390ffff	                   call sym.d_make_empty	      1143	cp-demangle.c	FUNCTION_11	CALL_1
0x4007025	          0x4889c5	                            mov rbp, rax	      1143	cp-demangle.c	FUNCTION_11	CALL_1
0x4007028	          0x4c89e2	                            mov rdx, r12	      1144	cp-demangle.c	FUNCTION_11	IF_1
0x400702b	          0x4489ee	                           mov esi, r13d	      1144	cp-demangle.c	FUNCTION_11	IF_1
0x400702e	          0x4889c7	                            mov rdi, rax	      1144	cp-demangle.c	FUNCTION_11	IF_1
0x4007031	      0xe800000000	                          call 0x4007036	      1144	cp-demangle.c	FUNCTION_11	IF_1
0x4007036	            0x85c0	                           test eax, eax	      1145	cp-demangle.c	FUNCTION_11	IF_1
0x4007038	      0xb800000000	                              mov eax, 0	      1145	cp-demangle.c	FUNCTION_11	IF_1
0x400703d	        0x480f44e8	                          cmove rbp, rax	      1145	cp-demangle.c	FUNCTION_11	IF_1
0x4007041	      0xe9db010000	                           jmp 0x4007221	      1145	cp-demangle.c	FUNCTION_11	IF_1
0x4007046	         0xfb64101	               movzx eax, byte [rcx + 1]	      2254	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3	CALL_7
0x400704a	          0x83e830	                           sub eax, 0x30	      2254	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3	CALL_7
0x400704d	            0x3c05	                               cmp al, 5	      2254	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3	CALL_7
0x400704f	     0xf87b2010000	                            ja 0x4007207	      2254	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3	CALL_7
0x4007055	           0xfb6c0	                           movzx eax, al	      2254	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3	CALL_7
0x4007058	    0xff24c5000000	                       jmp qword [rax*8]	      2254	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3	CALL_7
0x400705f	    0x41bd02000000	                             mov r13d, 2	      2260	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3
0x4007065	            0xeb1e	                           jmp 0x4007085	      2260	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3
0x4007067	    0x41bd03000000	                             mov r13d, 3	      2263	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3
0x400706d	            0xeb16	                           jmp 0x4007085	      2263	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3
0x400706f	    0x41bd04000000	                             mov r13d, 4	      2267	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3
0x4007075	            0xeb0e	                           jmp 0x4007085	      2267	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3
0x4007077	    0x41bd05000000	                             mov r13d, 5	      2270	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3
0x400707d	            0xeb06	                           jmp 0x4007085	      2270	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3
0x400707f	    0x41bd01000000	                             mov r13d, 1	      2257	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3
0x4007085	        0x4883c102	                              add rcx, 2	      2275	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_8
0x4007089	        0x48894b18	             mov qword [rbx + 0x18], rcx	      2275	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_8
0x400708d	          0x4889df	                            mov rdi, rbx	      1157	cp-demangle.c	FUNCTION_12	CALL_1
0x4007090	      0xe8d38fffff	                   call sym.d_make_empty	      1157	cp-demangle.c	FUNCTION_12	CALL_1
0x4007095	          0x4889c5	                            mov rbp, rax	      1157	cp-demangle.c	FUNCTION_12	CALL_1
0x4007098	          0x4c89e2	                            mov rdx, r12	      1158	cp-demangle.c	FUNCTION_12	IF_1
0x400709b	          0x4489ee	                           mov esi, r13d	      1158	cp-demangle.c	FUNCTION_12	IF_1
0x400709e	          0x4889c7	                            mov rdi, rax	      1158	cp-demangle.c	FUNCTION_12	IF_1
0x40070a1	      0xe800000000	                          call 0x40070a6	      1158	cp-demangle.c	FUNCTION_12	IF_1
0x40070a6	            0x85c0	                           test eax, eax	      1159	cp-demangle.c	FUNCTION_12	IF_1
0x40070a8	      0xb800000000	                              mov eax, 0	      1159	cp-demangle.c	FUNCTION_12	IF_1
0x40070ad	        0x480f44e8	                          cmove rbp, rax	      1159	cp-demangle.c	FUNCTION_12	IF_1
0x40070b1	      0xe96b010000	                           jmp 0x4007221	      1159	cp-demangle.c	FUNCTION_12	IF_1
0x40070b6	          0x80fa4c	                            cmp dl, 0x4c	      1633	cp-demangle.c	FUNCTION_23	ELSE_3	IF_7
0x40070b9	            0x752e	                           jne 0x40070e9	      1633	cp-demangle.c	FUNCTION_23	ELSE_3	IF_7
0x40070bb	        0x4883c101	                              add rcx, 1	      1635	cp-demangle.c	FUNCTION_23	ELSE_3	IF_7	CALL_10
0x40070bf	        0x48894f18	             mov qword [rdi + 0x18], rcx	      1635	cp-demangle.c	FUNCTION_23	ELSE_3	IF_7	CALL_10
0x40070c3	      0xe8a2efffff	                  call sym.d_source_name	      1637	cp-demangle.c	FUNCTION_23	ELSE_3	IF_7	CALL_11
0x40070c8	          0x4889c5	                            mov rbp, rax	      1637	cp-demangle.c	FUNCTION_23	ELSE_3	IF_7	CALL_11
0x40070cb	          0x4885c0	                           test rax, rax	      1638	cp-demangle.c	FUNCTION_23	ELSE_3	IF_7	IF_8
0x40070ce	     0xf8466010000	                            je 0x400723a	      1638	cp-demangle.c	FUNCTION_23	ELSE_3	IF_7	IF_8
0x40070d4	          0x4889df	                            mov rdi, rbx	      1640	cp-demangle.c	FUNCTION_23	ELSE_3	IF_7	IF_9	CALL_12
0x40070d7	      0xe8ce93ffff	                call sym.d_discriminator	      1640	cp-demangle.c	FUNCTION_23	ELSE_3	IF_7	IF_9	CALL_12
0x40070dc	            0x85c0	                           test eax, eax	      1640	cp-demangle.c	FUNCTION_23	ELSE_3	IF_7	IF_9	CALL_12
0x40070de	     0xf853d010000	                           jne 0x4007221	      1640	cp-demangle.c	FUNCTION_23	ELSE_3	IF_7	IF_9	CALL_12
0x40070e4	      0xe958010000	                           jmp 0x4007241	      1640	cp-demangle.c	FUNCTION_23	ELSE_3	IF_7	IF_9	CALL_12
0x40070e9	      0xb800000000	                              mov eax, 0	      1658	cp-demangle.c	FUNCTION_23	ELSE_5
0x40070ee	          0x80fa55	                            cmp dl, 0x55	      1643	cp-demangle.c	FUNCTION_23	ELSE_4	IF_10
0x40070f1	     0xf8583010000	                           jne 0x400727a	      1643	cp-demangle.c	FUNCTION_23	ELSE_4	IF_10
0x40070f7	         0xfb64101	               movzx eax, byte [rcx + 1]	      1645	cp-demangle.c	FUNCTION_23	ELSE_4	IF_10	SWITCH_1	CALL_13
0x40070fb	            0x3c6c	                            cmp al, 0x6c	      1645	cp-demangle.c	FUNCTION_23	ELSE_4	IF_10	SWITCH_1	CALL_13
0x40070fd	            0x740d	                            je 0x400710c	      1645	cp-demangle.c	FUNCTION_23	ELSE_4	IF_10	SWITCH_1	CALL_13
0x40070ff	            0x3c74	                            cmp al, 0x74	      1645	cp-demangle.c	FUNCTION_23	ELSE_4	IF_10	SWITCH_1	CALL_13
0x4007101	     0xf8496000000	                            je 0x400719d	      1645	cp-demangle.c	FUNCTION_23	ELSE_4	IF_10	SWITCH_1	CALL_13
0x4007107	      0xe93c010000	                           jmp 0x4007248	      1645	cp-demangle.c	FUNCTION_23	ELSE_4	IF_10	SWITCH_1	CALL_13
0x400710c	        0x488d4101	                      lea rax, [rcx + 1]	      3690	cp-demangle.c	ELSE_1	FUNCTION_56	IF_1	CALL_1
0x4007110	        0x48894718	             mov qword [rdi + 0x18], rax	      3690	cp-demangle.c	ELSE_1	FUNCTION_56	IF_1	CALL_1
0x4007114	      0xbd00000000	                              mov ebp, 0	      3693	cp-demangle.c	ELSE_1	FUNCTION_56	IF_2
0x4007119	        0x8079016c	                cmp byte [rcx + 1], 0x6c	      3692	cp-demangle.c	ELSE_1	FUNCTION_56	IF_2	CALL_2
0x400711d	     0xf85fe000000	                           jne 0x4007221	      3692	cp-demangle.c	ELSE_1	FUNCTION_56	IF_2	CALL_2
0x4007123	        0x4883c102	                              add rcx, 2	      3692	cp-demangle.c	ELSE_1	FUNCTION_56	IF_2	CALL_2
0x4007127	        0x48894f18	             mov qword [rdi + 0x18], rcx	      3692	cp-demangle.c	ELSE_1	FUNCTION_56	IF_2	CALL_2
0x400712b	      0xe846fcffff	                     call sym.d_parmlist	      3695	cp-demangle.c	ELSE_1	FUNCTION_56	CALL_3
0x4007130	          0x4989c4	                            mov r12, rax	      3695	cp-demangle.c	ELSE_1	FUNCTION_56	CALL_3
0x4007133	          0x4885c0	                           test rax, rax	      3696	cp-demangle.c	ELSE_1	FUNCTION_56	IF_3
0x4007136	     0xf84d2000000	                            je 0x400720e	      3696	cp-demangle.c	ELSE_1	FUNCTION_56	IF_3
0x400713c	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      3699	cp-demangle.c	ELSE_1	FUNCTION_56	IF_4	CALL_4
0x4007140	          0x803845	                    cmp byte [rax], 0x45	      3699	cp-demangle.c	ELSE_1	FUNCTION_56	IF_4	CALL_4
0x4007143	     0xf85d8000000	                           jne 0x4007221	      3699	cp-demangle.c	ELSE_1	FUNCTION_56	IF_4	CALL_4
0x4007149	        0x4883c001	                              add rax, 1	      3699	cp-demangle.c	ELSE_1	FUNCTION_56	IF_4	CALL_4
0x400714d	        0x48894318	             mov qword [rbx + 0x18], rax	      3699	cp-demangle.c	ELSE_1	FUNCTION_56	IF_4	CALL_4
0x4007151	          0x4889df	                            mov rdi, rbx	      3702	cp-demangle.c	ELSE_1	FUNCTION_56	CALL_5
0x4007154	      0xe88592ffff	               call sym.d_compact_number	      3702	cp-demangle.c	ELSE_1	FUNCTION_56	CALL_5
0x4007159	          0x4189c5	                           mov r13d, eax	      3702	cp-demangle.c	ELSE_1	FUNCTION_56	CALL_5
0x400715c	            0x85c0	                           test eax, eax	      3703	cp-demangle.c	ELSE_1	FUNCTION_56	IF_5
0x400715e	     0xf88b1000000	                            js 0x4007215	      3703	cp-demangle.c	ELSE_1	FUNCTION_56	IF_5
0x4007164	          0x4889df	                            mov rdi, rbx	      3706	cp-demangle.c	ELSE_1	FUNCTION_56	CALL_6
0x4007167	      0xe8fc8effff	                   call sym.d_make_empty	      3706	cp-demangle.c	ELSE_1	FUNCTION_56	CALL_6
0x400716c	          0x4889c5	                            mov rbp, rax	      3706	cp-demangle.c	ELSE_1	FUNCTION_56	CALL_6
0x400716f	          0x4885c0	                           test rax, rax	      3707	cp-demangle.c	ELSE_1	FUNCTION_56	IF_6
0x4007172	            0x740e	                            je 0x4007182	      3707	cp-demangle.c	ELSE_1	FUNCTION_56	IF_6
0x4007174	    0xc70045000000	                   mov dword [rax], 0x45	      3709	cp-demangle.c	ELSE_1	FUNCTION_56	IF_6
0x400717a	        0x4c896008	                mov qword [rax + 8], r12	      3710	cp-demangle.c	ELSE_1	FUNCTION_56	IF_6
0x400717e	        0x44896810	            mov dword [rax + 0x10], r13d	      3711	cp-demangle.c	ELSE_1	FUNCTION_56	IF_6
0x4007182	          0x4889ee	                            mov rsi, rbp	      3714	cp-demangle.c	ELSE_1	FUNCTION_56	IF_7	CALL_7
0x4007185	          0x4889df	                            mov rdi, rbx	      3714	cp-demangle.c	ELSE_1	FUNCTION_56	IF_7	CALL_7
0x4007188	      0xe89093ffff	             call sym.d_add_substitution	      3714	cp-demangle.c	ELSE_1	FUNCTION_56	IF_7	CALL_7
0x400718d	            0x85c0	                           test eax, eax	      3715	cp-demangle.c	ELSE_1	FUNCTION_56	IF_7
0x400718f	      0xb800000000	                              mov eax, 0	      3715	cp-demangle.c	ELSE_1	FUNCTION_56	IF_7
0x4007194	        0x480f44e8	                          cmove rbp, rax	      3715	cp-demangle.c	ELSE_1	FUNCTION_56	IF_7
0x4007198	      0xe984000000	                           jmp 0x4007221	      3715	cp-demangle.c	ELSE_1	FUNCTION_56	IF_7
0x400719d	        0x488d4101	                      lea rax, [rcx + 1]	      3728	cp-demangle.c	FUNCTION_57	IF_1	CALL_1
0x40071a1	        0x48894718	             mov qword [rdi + 0x18], rax	      3728	cp-demangle.c	FUNCTION_57	IF_1	CALL_1
0x40071a5	      0xbd00000000	                              mov ebp, 0	      3731	cp-demangle.c	FUNCTION_57	IF_2
0x40071aa	        0x80790174	                cmp byte [rcx + 1], 0x74	      3730	cp-demangle.c	FUNCTION_57	IF_2	CALL_2
0x40071ae	            0x7571	                           jne 0x4007221	      3730	cp-demangle.c	FUNCTION_57	IF_2	CALL_2
0x40071b0	        0x4883c102	                              add rcx, 2	      3730	cp-demangle.c	FUNCTION_57	IF_2	CALL_2
0x40071b4	        0x48894f18	             mov qword [rdi + 0x18], rcx	      3730	cp-demangle.c	FUNCTION_57	IF_2	CALL_2
0x40071b8	      0xe82192ffff	               call sym.d_compact_number	      3733	cp-demangle.c	FUNCTION_57	CALL_3
0x40071bd	          0x4189c4	                           mov r12d, eax	      3733	cp-demangle.c	FUNCTION_57	CALL_3
0x40071c0	            0x85c0	                           test eax, eax	      3734	cp-demangle.c	FUNCTION_57	IF_3
0x40071c2	            0x7858	                            js 0x400721c	      3734	cp-demangle.c	FUNCTION_57	IF_3
0x40071c4	          0x4889df	                            mov rdi, rbx	      3737	cp-demangle.c	FUNCTION_57	CALL_4
0x40071c7	      0xe89c8effff	                   call sym.d_make_empty	      3737	cp-demangle.c	FUNCTION_57	CALL_4
0x40071cc	          0x4889c5	                            mov rbp, rax	      3737	cp-demangle.c	FUNCTION_57	CALL_4
0x40071cf	          0x4885c0	                           test rax, rax	      3738	cp-demangle.c	FUNCTION_57	IF_4
0x40071d2	            0x740d	                            je 0x40071e1	      3738	cp-demangle.c	FUNCTION_57	IF_4
0x40071d4	    0xc70047000000	                   mov dword [rax], 0x47	      3740	cp-demangle.c	FUNCTION_57	IF_4
0x40071da	          0x4d63e4	                        movsxd r12, r12d	      3741	cp-demangle.c	FUNCTION_57	IF_4
0x40071dd	        0x4c896008	                mov qword [rax + 8], r12	      3741	cp-demangle.c	FUNCTION_57	IF_4
0x40071e1	          0x4889ee	                            mov rsi, rbp	      3744	cp-demangle.c	FUNCTION_57	IF_5	CALL_5
0x40071e4	          0x4889df	                            mov rdi, rbx	      3744	cp-demangle.c	FUNCTION_57	IF_5	CALL_5
0x40071e7	      0xe83193ffff	             call sym.d_add_substitution	      3744	cp-demangle.c	FUNCTION_57	IF_5	CALL_5
0x40071ec	            0x85c0	                           test eax, eax	      3745	cp-demangle.c	FUNCTION_57	IF_5
0x40071ee	      0xb800000000	                              mov eax, 0	      3745	cp-demangle.c	FUNCTION_57	IF_5
0x40071f3	        0x480f44e8	                          cmove rbp, rax	      3745	cp-demangle.c	FUNCTION_57	IF_5
0x40071f7	            0xeb28	                           jmp 0x4007221	      3745	cp-demangle.c	FUNCTION_57	IF_5
0x40071f9	      0xbd00000000	                              mov ebp, 0	      2280	cp-demangle.c	FUNCTION_33	SWITCH_1
0x40071fe	            0xeb21	                           jmp 0x4007221	      2280	cp-demangle.c	FUNCTION_33	SWITCH_1
0x4007200	      0xbd00000000	                              mov ebp, 0	      2239	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2
0x4007205	            0xeb1a	                           jmp 0x4007221	      2239	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2
0x4007207	      0xbd00000000	                              mov ebp, 0	      2273	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3
0x400720c	            0xeb13	                           jmp 0x4007221	      2273	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3
0x400720e	      0xbd00000000	                              mov ebp, 0	      3697	cp-demangle.c	ELSE_1	FUNCTION_56	IF_3
0x4007213	            0xeb0c	                           jmp 0x4007221	      3697	cp-demangle.c	ELSE_1	FUNCTION_56	IF_3
0x4007215	      0xbd00000000	                              mov ebp, 0	      3704	cp-demangle.c	ELSE_1	FUNCTION_56	IF_5
0x400721a	            0xeb05	                           jmp 0x4007221	      3704	cp-demangle.c	ELSE_1	FUNCTION_56	IF_5
0x400721c	      0xbd00000000	                              mov ebp, 0	      3735	cp-demangle.c	FUNCTION_57	IF_3
0x4007221	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      1660	cp-demangle.c	FUNCTION_23	IF_11	CALL_16
0x4007225	          0x4889e8	                            mov rax, rbp	      1660	cp-demangle.c	FUNCTION_23	IF_11	CALL_16
0x4007228	          0x803a42	                    cmp byte [rdx], 0x42	      1660	cp-demangle.c	FUNCTION_23	IF_11	CALL_16
0x400722b	            0x754d	                           jne 0x400727a	      1660	cp-demangle.c	FUNCTION_23	IF_11	CALL_16
0x400722d	          0x4889ee	                            mov rsi, rbp	      1661	cp-demangle.c	FUNCTION_23	CALL_17
0x4007230	          0x4889df	                            mov rdi, rbx	      1661	cp-demangle.c	FUNCTION_23	CALL_17
0x4007233	      0xe8ffeeffff	                     call sym.d_abi_tags	      1661	cp-demangle.c	FUNCTION_23	CALL_17
0x4007238	            0xeb40	                           jmp 0x400727a	      1661	cp-demangle.c	FUNCTION_23	CALL_17
0x400723a	      0xb800000000	                              mov eax, 0	      1639	cp-demangle.c	FUNCTION_23	ELSE_3	IF_7	IF_8
0x400723f	            0xeb39	                           jmp 0x400727a	      1639	cp-demangle.c	FUNCTION_23	ELSE_3	IF_7	IF_8
0x4007241	      0xb800000000	                              mov eax, 0	      1641	cp-demangle.c	FUNCTION_23	ELSE_3	IF_7	IF_9
0x4007246	            0xeb32	                           jmp 0x400727a	      1641	cp-demangle.c	FUNCTION_23	ELSE_3	IF_7	IF_9
0x4007248	      0xb800000000	                              mov eax, 0	      1654	cp-demangle.c	FUNCTION_23	ELSE_4	IF_10	SWITCH_1
0x400724d	            0xeb2b	                           jmp 0x400727a	      1654	cp-demangle.c	FUNCTION_23	ELSE_4	IF_10	SWITCH_1
0x400724f	      0xb800000000	                              mov eax, 0	      2239	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2
0x4007254	            0xeb24	                           jmp 0x400727a	      2239	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2
0x4007256	          0x83e831	                           sub eax, 0x31	      2221	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2	CALL_4
0x4007259	            0x3c04	                               cmp al, 4	      2221	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2	CALL_4
0x400725b	            0x77f2	                            ja 0x400724f	      2221	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2	CALL_4
0x400725d	           0xfb6c0	                           movzx eax, al	      2221	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2	CALL_4
0x4007260	    0xff24c5000000	                       jmp qword [rax*8]	      2221	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2	CALL_4
0x4007267	        0x4883c103	                              add rcx, 3	      2242	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_5
0x400726b	        0x48894b18	             mov qword [rbx + 0x18], rcx	      2242	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_5
0x400726f	    0x41bd01000000	                             mov r13d, 1	      2224	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2
0x4007275	      0xe997fdffff	                           jmp 0x4007011	      2224	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2
0x400727a	        0x4883c408	                              add rsp, 8	      1663	cp-demangle.c	FUNCTION_23
0x400727e	              0x5b	                                 pop rbx	      1663	cp-demangle.c	FUNCTION_23
0x400727f	              0x5d	                                 pop rbp	      1663	cp-demangle.c	FUNCTION_23
0x4007280	            0x415c	                                 pop r12	      1663	cp-demangle.c	FUNCTION_23
0x4007282	            0x415d	                                 pop r13	      1663	cp-demangle.c	FUNCTION_23
0x4007284	              0xc3	                                     ret	      1663	cp-demangle.c	FUNCTION_23
d_function_type	SWITCH,0:CALL,6:IF,3:WHILE,0:ELSE,0:DO,0:FOR,0:functions,0	29
0x40072ef	        0x488b5718	            mov rdx, qword [rdi + 0x18] 	      2848	cp-demangle.c	FUNCTION_37	IF_1	CALL_1
0x40072f3	      0xb900000000	                              mov ecx, 0	      2849	cp-demangle.c	FUNCTION_37	IF_1
0x40072f8	          0x803a46	                    cmp byte [rdx], 0x46	      2848	cp-demangle.c	FUNCTION_37	IF_1	CALL_1
0x40072fb	            0x754d	                           jne 0x400734a	      2848	cp-demangle.c	FUNCTION_37	IF_1	CALL_1
0x40072fd	              0x53	                                push rbx	      2845	cp-demangle.c	FUNCTION_37
0x40072fe	        0x488d4201	                      lea rax, [rdx + 1]	      2848	cp-demangle.c	FUNCTION_37	IF_1	CALL_1
0x4007302	        0x48894718	             mov qword [rdi + 0x18], rax	      2848	cp-demangle.c	FUNCTION_37	IF_1	CALL_1
0x4007306	        0x807a0159	                cmp byte [rdx + 1], 0x59	      2850	cp-demangle.c	FUNCTION_37	IF_2	CALL_2
0x400730a	            0x7508	                           jne 0x4007314	      2850	cp-demangle.c	FUNCTION_37	IF_2	CALL_2
0x400730c	        0x4883c202	                              add rdx, 2	      2854	cp-demangle.c	FUNCTION_37	IF_2	CALL_3
0x4007310	        0x48895718	             mov qword [rdi + 0x18], rdx	      2854	cp-demangle.c	FUNCTION_37	IF_2	CALL_3
0x4007314	          0x4889fb	                            mov rbx, rdi	      2854	cp-demangle.c	FUNCTION_37	IF_2	CALL_3
0x4007317	      0xbe01000000	                              mov esi, 1	      2856	cp-demangle.c	FUNCTION_37	CALL_4
0x400731c	      0xe864ffffff	           call sym.d_bare_function_type	      2856	cp-demangle.c	FUNCTION_37	CALL_4
0x4007321	          0x4889c6	                            mov rsi, rax	      2857	cp-demangle.c	FUNCTION_37	CALL_5
0x4007324	          0x4889df	                            mov rdi, rbx	      2857	cp-demangle.c	FUNCTION_37	CALL_5
0x4007327	      0xe86a90ffff	                call sym.d_ref_qualifier	      2857	cp-demangle.c	FUNCTION_37	CALL_5
0x400732c	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      2859	cp-demangle.c	FUNCTION_37	IF_3	CALL_6
0x4007330	      0xb900000000	                              mov ecx, 0	      2860	cp-demangle.c	FUNCTION_37	IF_3
0x4007335	          0x803a45	                    cmp byte [rdx], 0x45	      2859	cp-demangle.c	FUNCTION_37	IF_3	CALL_6
0x4007338	            0x750b	                           jne 0x4007345	      2859	cp-demangle.c	FUNCTION_37	IF_3	CALL_6
0x400733a	        0x4883c201	                              add rdx, 1	      2859	cp-demangle.c	FUNCTION_37	IF_3	CALL_6
0x400733e	        0x48895318	             mov qword [rbx + 0x18], rdx	      2859	cp-demangle.c	FUNCTION_37	IF_3	CALL_6
0x4007342	          0x4889c1	                            mov rcx, rax	      2861	cp-demangle.c	FUNCTION_37
0x4007345	          0x4889c8	                            mov rax, rcx	      2862	cp-demangle.c	FUNCTION_37
0x4007348	              0x5b	                                 pop rbx	      2862	cp-demangle.c	FUNCTION_37
0x4007349	              0xc3	                                     ret	      2862	cp-demangle.c	FUNCTION_37
0x400734a	          0x4889c8	                            mov rax, rcx	      2862	cp-demangle.c	FUNCTION_37
0x400734d	              0xc3	                                     ret	      2862	cp-demangle.c	FUNCTION_37
d_discriminator	SWITCH,0:CALL,7:IF,5:WHILE,0:ELSE,1:DO,0:FOR,0:functions,0	36
0x40004aa	        0x488b5718	            mov rdx, qword [rdi + 0x18] 	      3658	cp-demangle.c	FUNCTION_55	IF_1	CALL_1
0x40004ae	      0xb801000000	                              mov eax, 1	      3659	cp-demangle.c	FUNCTION_55	IF_1
0x40004b3	          0x803a5f	                    cmp byte [rdx], 0x5f	      3658	cp-demangle.c	FUNCTION_55	IF_1	CALL_1
0x40004b6	            0x7563	                           jne 0x400051b	      3658	cp-demangle.c	FUNCTION_55	IF_1	CALL_1
0x40004b8	              0x55	                                push rbp	      3655	cp-demangle.c	FUNCTION_55
0x40004b9	              0x53	                                push rbx	      3655	cp-demangle.c	FUNCTION_55
0x40004ba	        0x488d4201	                      lea rax, [rdx + 1]	      3660	cp-demangle.c	FUNCTION_55	CALL_2
0x40004be	        0x48894718	             mov qword [rdi + 0x18], rax	      3660	cp-demangle.c	FUNCTION_55	CALL_2
0x40004c2	      0xbd01000000	                              mov ebp, 1	      3656	cp-demangle.c	FUNCTION_55
0x40004c7	        0x807a015f	                cmp byte [rdx + 1], 0x5f	      3661	cp-demangle.c	FUNCTION_55	IF_2	CALL_3
0x40004cb	            0x750d	                           jne 0x40004da	      3661	cp-demangle.c	FUNCTION_55	IF_2	CALL_3
0x40004cd	        0x4883c202	                              add rdx, 2	      3664	cp-demangle.c	FUNCTION_55	IF_2	CALL_4
0x40004d1	        0x48895718	             mov qword [rdi + 0x18], rdx	      3664	cp-demangle.c	FUNCTION_55	IF_2	CALL_4
0x40004d5	      0xbd02000000	                              mov ebp, 2	      3663	cp-demangle.c	FUNCTION_55	IF_2
0x40004da	          0x4889fb	                            mov rbx, rdi	      3663	cp-demangle.c	FUNCTION_55	IF_2
0x40004dd	      0xe8f1fcffff	                       call sym.d_number	      3667	cp-demangle.c	FUNCTION_55	CALL_5
0x40004e2	            0x85c0	                           test eax, eax	      3668	cp-demangle.c	FUNCTION_55	IF_3
0x40004e4	            0x7827	                            js 0x400050d	      3668	cp-demangle.c	FUNCTION_55	IF_3
0x40004e6	          0x83fd01	                              cmp ebp, 1	      3670	cp-demangle.c	FUNCTION_55	IF_4
0x40004e9	            0x7e29	                           jle 0x4000514	      3670	cp-demangle.c	FUNCTION_55	IF_4
0x40004eb	          0x83f809	                              cmp eax, 9	      3670	cp-demangle.c	FUNCTION_55	IF_4
0x40004ee	            0x7e24	                           jle 0x4000514	      3670	cp-demangle.c	FUNCTION_55	IF_4
0x40004f0	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      3672	cp-demangle.c	FUNCTION_55	IF_4	IF_5	CALL_6
0x40004f4	      0xb800000000	                              mov eax, 0	      3675	cp-demangle.c	FUNCTION_55	IF_4	ELSE_1
0x40004f9	          0x803a5f	                    cmp byte [rdx], 0x5f	      3672	cp-demangle.c	FUNCTION_55	IF_4	IF_5	CALL_6
0x40004fc	            0x751b	                           jne 0x4000519	      3672	cp-demangle.c	FUNCTION_55	IF_4	IF_5	CALL_6
0x40004fe	        0x4883c201	                              add rdx, 1	      3673	cp-demangle.c	FUNCTION_55	IF_4	CALL_7
0x4000502	        0x48895318	             mov qword [rbx + 0x18], rdx	      3673	cp-demangle.c	FUNCTION_55	IF_4	CALL_7
0x4000506	      0xb801000000	                              mov eax, 1	      3678	cp-demangle.c	FUNCTION_55	ELSE_1
0x400050b	            0xeb0c	                           jmp 0x4000519	      3678	cp-demangle.c	FUNCTION_55	ELSE_1
0x400050d	      0xb800000000	                              mov eax, 0	      3669	cp-demangle.c	FUNCTION_55	IF_3
0x4000512	            0xeb05	                           jmp 0x4000519	      3669	cp-demangle.c	FUNCTION_55	IF_3
0x4000514	      0xb801000000	                              mov eax, 1	      3678	cp-demangle.c	FUNCTION_55	ELSE_1
0x4000519	              0x5b	                                 pop rbx	      3679	cp-demangle.c	FUNCTION_55	ELSE_1
0x400051a	              0x5d	                                 pop rbp	      3679	cp-demangle.c	FUNCTION_55	ELSE_1
0x400051b	            0xf3c3	                                     ret	      3679	cp-demangle.c	FUNCTION_55	ELSE_1
d_find_pack	SWITCH,1:CALL,6:IF,3:WHILE,0:ELSE,0:DO,0:FOR,0:functions,0	45
0x40006fd	          0x4885f6	                           test rsi, rsi	      4396	cp-demangle.c	FUNCTION_79	IF_1
0x4000700	            0x7472	                            je 0x4000774	      4396	cp-demangle.c	FUNCTION_79	IF_1
0x4000702	              0x55	                                push rbp	      4394	cp-demangle.c	FUNCTION_79
0x4000703	              0x53	                                push rbx	      4394	cp-demangle.c	FUNCTION_79
0x4000704	        0x4883ec08	                              sub rsp, 8	      4394	cp-demangle.c	FUNCTION_79
0x4000708	          0x4889f3	                            mov rbx, rsi	      4394	cp-demangle.c	FUNCTION_79
0x400070b	          0x4889fd	                            mov rbp, rdi	      4394	cp-demangle.c	FUNCTION_79
0x400070e	          0x833e4b	                   cmp dword [rsi], 0x4b	      4399	cp-demangle.c	FUNCTION_79	SWITCH_1
0x4000711	            0x7742	                            ja 0x4000755	      4399	cp-demangle.c	FUNCTION_79	SWITCH_1
0x4000713	            0x8b06	                    mov eax, dword [rsi]	      4399	cp-demangle.c	FUNCTION_79	SWITCH_1
0x4000715	    0xff24c5000000	                       jmp qword [rax*8]	      4399	cp-demangle.c	FUNCTION_79	SWITCH_1
0x400071c	      0xe8b2ffffff	     call sym.d_lookup_template_argument	      4402	cp-demangle.c	FUNCTION_79	SWITCH_1	CALL_1
0x4000721	          0x4885c0	                           test rax, rax	      4403	cp-demangle.c	FUNCTION_79	SWITCH_1	IF_2
0x4000724	            0x745b	                            je 0x4000781	      4403	cp-demangle.c	FUNCTION_79	SWITCH_1	IF_2
0x4000726	          0x83382f	                   cmp dword [rax], 0x2f	      4404	cp-demangle.c	FUNCTION_79	SWITCH_1	IF_2
0x4000729	      0xba00000000	                              mov edx, 0	      4404	cp-demangle.c	FUNCTION_79	SWITCH_1	IF_2
0x400072e	        0x480f45c2	                         cmovne rax, rdx	      4404	cp-demangle.c	FUNCTION_79	SWITCH_1	IF_2
0x4000732	            0xeb52	                           jmp 0x4000786	      4404	cp-demangle.c	FUNCTION_79	SWITCH_1	IF_2
0x4000734	        0x488b7610	            mov rsi, qword [rsi + 0x10] 	      4425	cp-demangle.c	FUNCTION_79	SWITCH_1	CALL_2
0x4000738	      0xe8c0ffffff	                    call sym.d_find_pack	      4425	cp-demangle.c	FUNCTION_79	SWITCH_1	CALL_2
0x400073d	            0xeb47	                           jmp 0x4000786	      4425	cp-demangle.c	FUNCTION_79	SWITCH_1	CALL_2
0x400073f	        0x488b7610	            mov rsi, qword [rsi + 0x10] 	      4427	cp-demangle.c	FUNCTION_79	SWITCH_1	CALL_3
0x4000743	      0xe8b5ffffff	                    call sym.d_find_pack	      4427	cp-demangle.c	FUNCTION_79	SWITCH_1	CALL_3
0x4000748	            0xeb3c	                           jmp 0x4000786	      4427	cp-demangle.c	FUNCTION_79	SWITCH_1	CALL_3
0x400074a	        0x488b7610	            mov rsi, qword [rsi + 0x10] 	      4429	cp-demangle.c	FUNCTION_79	SWITCH_1	CALL_4
0x400074e	      0xe8aaffffff	                    call sym.d_find_pack	      4429	cp-demangle.c	FUNCTION_79	SWITCH_1	CALL_4
0x4000753	            0xeb31	                           jmp 0x4000786	      4429	cp-demangle.c	FUNCTION_79	SWITCH_1	CALL_4
0x4000755	        0x488b7308	                mov rsi, qword [rbx + 8]	      4432	cp-demangle.c	FUNCTION_79	SWITCH_1	CALL_5
0x4000759	          0x4889ef	                            mov rdi, rbp	      4432	cp-demangle.c	FUNCTION_79	SWITCH_1	CALL_5
0x400075c	      0xe89cffffff	                    call sym.d_find_pack	      4432	cp-demangle.c	FUNCTION_79	SWITCH_1	CALL_5
0x4000761	          0x4885c0	                           test rax, rax	      4433	cp-demangle.c	FUNCTION_79	SWITCH_1	IF_3
0x4000764	            0x7520	                           jne 0x4000786	      4433	cp-demangle.c	FUNCTION_79	SWITCH_1	IF_3
0x4000766	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	      4435	cp-demangle.c	FUNCTION_79	SWITCH_1	CALL_6
0x400076a	          0x4889ef	                            mov rdi, rbp	      4435	cp-demangle.c	FUNCTION_79	SWITCH_1	CALL_6
0x400076d	      0xe88bffffff	                    call sym.d_find_pack	      4435	cp-demangle.c	FUNCTION_79	SWITCH_1	CALL_6
0x4000772	            0xeb12	                           jmp 0x4000786	      4435	cp-demangle.c	FUNCTION_79	SWITCH_1	CALL_6
0x4000774	      0xb800000000	                              mov eax, 0	      4397	cp-demangle.c	FUNCTION_79	IF_1
0x4000779	              0xc3	                                     ret	      4437	cp-demangle.c	FUNCTION_79
0x400077a	      0xb800000000	                              mov eax, 0	      4408	cp-demangle.c	FUNCTION_79	SWITCH_1
0x400077f	            0xeb05	                           jmp 0x4000786	      4408	cp-demangle.c	FUNCTION_79	SWITCH_1
0x4000781	      0xb800000000	                              mov eax, 0	      4405	cp-demangle.c	FUNCTION_79	SWITCH_1
0x4000786	        0x4883c408	                              add rsp, 8	      4437	cp-demangle.c	FUNCTION_79
0x400078a	              0x5b	                                 pop rbx	      4437	cp-demangle.c	FUNCTION_79
0x400078b	              0x5d	                                 pop rbp	      4437	cp-demangle.c	FUNCTION_79
0x400078c	              0xc3	                                     ret	      4437	cp-demangle.c	FUNCTION_79
cplus_demangle_v3	SWITCH,0:CALL,1:IF,0:WHILE,0:ELSE,0:DO,0:FOR,0:functions,0	12
0x4009b60	        0x4883ec18	                           sub rsp, 0x18	      6453	cp-demangle.c	FUNCTION_100
0x4009b64	    0x64488b042528	                mov rax, qword fs:[0x28]	      6453	cp-demangle.c	FUNCTION_100
0x4009b6d	      0x4889442408	                mov qword [rsp + 8], rax	      6453	cp-demangle.c	FUNCTION_100
0x4009b72	            0x31c0	                            xor eax, eax	      6453	cp-demangle.c	FUNCTION_100
0x4009b74	          0x4889e2	                            mov rdx, rsp	      6456	cp-demangle.c	FUNCTION_100	CALL_1
0x4009b77	      0xe840feffff	                     call sym.d_demangle	      6456	cp-demangle.c	FUNCTION_100	CALL_1
0x4009b7c	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      6457	cp-demangle.c	FUNCTION_100
0x4009b81	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      6457	cp-demangle.c	FUNCTION_100
0x4009b8a	            0x7405	                            je 0x4009b91	      6457	cp-demangle.c	FUNCTION_100
0x4009b8c	      0xe800000000	                          call 0x4009b91	      6457	cp-demangle.c	FUNCTION_100
0x4009b91	        0x4883c418	                           add rsp, 0x18	      6457	cp-demangle.c	FUNCTION_100
0x4009b95	              0xc3	                                     ret	      6457	cp-demangle.c	FUNCTION_100
d_parmlist	SWITCH,0:CALL,3:IF,6:WHILE,1:ELSE,0:DO,0:FOR,0:functions,0	74
0x4006d76	              0x55	                                push rbp	      2868	cp-demangle.c	FUNCTION_38
0x4006d77	              0x53	                                push rbx	      2868	cp-demangle.c	FUNCTION_38
0x4006d78	        0x4883ec18	                           sub rsp, 0x18	      2868	cp-demangle.c	FUNCTION_38
0x4006d7c	    0x64488b042528	                mov rax, qword fs:[0x28]	      2868	cp-demangle.c	FUNCTION_38
0x4006d85	      0x4889442408	                mov qword [rsp + 8], rax	      2868	cp-demangle.c	FUNCTION_38
0x4006d8a	            0x31c0	                            xor eax, eax	      2868	cp-demangle.c	FUNCTION_38
0x4006d8c	    0x48c704240000	                      mov qword [rsp], 0	      2872	cp-demangle.c	FUNCTION_38
0x4006d94	        0x488b5718	            mov rdx, qword [rdi + 0x18] 	      2878	cp-demangle.c	FUNCTION_38	WHILE_1	CALL_1
0x4006d98	           0xfb602	                   movzx eax, byte [rdx]	      2878	cp-demangle.c	FUNCTION_38	WHILE_1	CALL_1
0x4006d9b	            0x84c0	                             test al, al	      2879	cp-demangle.c	FUNCTION_38	WHILE_1	IF_1
0x4006d9d	        0x400f94c6	                                sete sil	      2879	cp-demangle.c	FUNCTION_38	WHILE_1	IF_1
0x4006da1	            0x3c45	                            cmp al, 0x45	      2879	cp-demangle.c	FUNCTION_38	WHILE_1	IF_1
0x4006da3	           0xf94c1	                                 sete cl	      2879	cp-demangle.c	FUNCTION_38	WHILE_1	IF_1
0x4006da6	          0x4008ce	                              or sil, cl	      2879	cp-demangle.c	FUNCTION_38	WHILE_1	IF_1
0x4006da9	     0xf8599000000	                           jne 0x4006e48	      2879	cp-demangle.c	FUNCTION_38	WHILE_1	IF_1
0x4006daf	          0x4889fb	                            mov rbx, rdi	      2879	cp-demangle.c	FUNCTION_38	WHILE_1	IF_1
0x4006db2	            0x3c2e	                            cmp al, 0x2e	      2879	cp-demangle.c	FUNCTION_38	WHILE_1	IF_1
0x4006db4	     0xf848e000000	                            je 0x4006e48	      2879	cp-demangle.c	FUNCTION_38	WHILE_1	IF_1
0x4006dba	          0x4889e5	                            mov rbp, rsp	      2879	cp-demangle.c	FUNCTION_38	WHILE_1	IF_1
0x4006dbd	            0x3c52	                            cmp al, 0x52	      2881	cp-demangle.c	FUNCTION_38	WHILE_1	IF_2
0x4006dbf	            0x7404	                            je 0x4006dc5	      2881	cp-demangle.c	FUNCTION_38	WHILE_1	IF_2
0x4006dc1	            0x3c4f	                            cmp al, 0x4f	      2881	cp-demangle.c	FUNCTION_38	WHILE_1	IF_2
0x4006dc3	            0x7506	                           jne 0x4006dcb	      2881	cp-demangle.c	FUNCTION_38	WHILE_1	IF_2
0x4006dc5	        0x807a0145	                cmp byte [rdx + 1], 0x45	      2882	cp-demangle.c	FUNCTION_38	WHILE_1	IF_2	CALL_2
0x4006dc9	            0x744a	                            je 0x4006e15	      2882	cp-demangle.c	FUNCTION_38	WHILE_1	IF_2	CALL_2
0x4006dcb	          0x4889df	                            mov rdi, rbx	      2885	cp-demangle.c	FUNCTION_38	WHILE_1
0x4006dce	      0xe800000000	                          call 0x4006dd3	      2885	cp-demangle.c	FUNCTION_38	WHILE_1
0x4006dd3	          0x4885c0	                           test rax, rax	      2886	cp-demangle.c	FUNCTION_38	WHILE_1	IF_3
0x4006dd6	            0x7477	                            je 0x4006e4f	      2886	cp-demangle.c	FUNCTION_38	WHILE_1	IF_3
0x4006dd8	      0xb900000000	                              mov ecx, 0	      2888	cp-demangle.c	FUNCTION_38	WHILE_1	CALL_3
0x4006ddd	          0x4889c2	                            mov rdx, rax	      2888	cp-demangle.c	FUNCTION_38	WHILE_1	CALL_3
0x4006de0	      0xbe2e000000	                           mov esi, 0x2e	      2888	cp-demangle.c	FUNCTION_38	WHILE_1	CALL_3
0x4006de5	          0x4889df	                            mov rdi, rbx	      2888	cp-demangle.c	FUNCTION_38	WHILE_1	CALL_3
0x4006de8	      0xe8a392ffff	                    call sym.d_make_comp	      2888	cp-demangle.c	FUNCTION_38	WHILE_1	CALL_3
0x4006ded	        0x48894500	                    mov qword [rbp], rax	      2888	cp-demangle.c	FUNCTION_38	WHILE_1	CALL_3
0x4006df1	          0x4885c0	                           test rax, rax	      2889	cp-demangle.c	FUNCTION_38	WHILE_1	IF_4
0x4006df4	            0x745e	                            je 0x4006e54	      2889	cp-demangle.c	FUNCTION_38	WHILE_1	IF_4
0x4006df6	        0x488d6810	                   lea rbp, [rax + 0x10]	      2891	cp-demangle.c	FUNCTION_38	WHILE_1
0x4006dfa	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      2878	cp-demangle.c	FUNCTION_38	WHILE_1	CALL_1
0x4006dfe	           0xfb602	                   movzx eax, byte [rdx]	      2878	cp-demangle.c	FUNCTION_38	WHILE_1	CALL_1
0x4006e01	            0x84c0	                             test al, al	      2879	cp-demangle.c	FUNCTION_38	WHILE_1	IF_1
0x4006e03	        0x400f94c6	                                sete sil	      2879	cp-demangle.c	FUNCTION_38	WHILE_1	IF_1
0x4006e07	            0x3c45	                            cmp al, 0x45	      2879	cp-demangle.c	FUNCTION_38	WHILE_1	IF_1
0x4006e09	           0xf94c1	                                 sete cl	      2879	cp-demangle.c	FUNCTION_38	WHILE_1	IF_1
0x4006e0c	          0x4008ce	                              or sil, cl	      2879	cp-demangle.c	FUNCTION_38	WHILE_1	IF_1
0x4006e0f	            0x7504	                           jne 0x4006e15	      2879	cp-demangle.c	FUNCTION_38	WHILE_1	IF_1
0x4006e11	            0x3c2e	                            cmp al, 0x2e	      2879	cp-demangle.c	FUNCTION_38	WHILE_1	IF_1
0x4006e13	            0x75a8	                           jne 0x4006dbd	      2879	cp-demangle.c	FUNCTION_38	WHILE_1	IF_1
0x4006e15	        0x488b0424	                    mov rax, qword [rsp]	      2897	cp-demangle.c	FUNCTION_38	IF_5
0x4006e19	          0x4885c0	                           test rax, rax	      2897	cp-demangle.c	FUNCTION_38	IF_5
0x4006e1c	            0x7436	                            je 0x4006e54	      2897	cp-demangle.c	FUNCTION_38	IF_5
0x4006e1e	      0x4883781000	               cmp qword [rax + 0x10], 0	      2901	cp-demangle.c	FUNCTION_38	IF_6
0x4006e23	            0x752f	                           jne 0x4006e54	      2901	cp-demangle.c	FUNCTION_38	IF_6
0x4006e25	        0x488b5008	                mov rdx, qword [rax + 8]	      2902	cp-demangle.c	FUNCTION_38	IF_6
0x4006e29	          0x833a27	                   cmp dword [rdx], 0x27	      2902	cp-demangle.c	FUNCTION_38	IF_6
0x4006e2c	            0x7526	                           jne 0x4006e54	      2902	cp-demangle.c	FUNCTION_38	IF_6
0x4006e2e	        0x488b5208	                mov rdx, qword [rdx + 8]	      2903	cp-demangle.c	FUNCTION_38	IF_6
0x4006e32	        0x837a1c09	               cmp dword [rdx + 0x1c], 9	      2903	cp-demangle.c	FUNCTION_38	IF_6
0x4006e36	            0x751c	                           jne 0x4006e54	      2903	cp-demangle.c	FUNCTION_38	IF_6
0x4006e38	          0x8b5208	                mov edx, dword [rdx + 8]	      2905	cp-demangle.c	FUNCTION_38	IF_6
0x4006e3b	          0x295348	             sub dword [rbx + 0x48], edx	      2905	cp-demangle.c	FUNCTION_38	IF_6
0x4006e3e	    0x48c740080000	                  mov qword [rax + 8], 0	      2906	cp-demangle.c	FUNCTION_38	IF_6
0x4006e46	            0xeb0c	                           jmp 0x4006e54	      2906	cp-demangle.c	FUNCTION_38	IF_6
0x4006e48	      0xb800000000	                              mov eax, 0	      2898	cp-demangle.c	FUNCTION_38	IF_5
0x4006e4d	            0xeb05	                           jmp 0x4006e54	      2898	cp-demangle.c	FUNCTION_38	IF_5
0x4006e4f	      0xb800000000	                              mov eax, 0	      2887	cp-demangle.c	FUNCTION_38	WHILE_1	IF_3
0x4006e54	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      2910	cp-demangle.c	FUNCTION_38
0x4006e59	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      2910	cp-demangle.c	FUNCTION_38
0x4006e62	            0x7405	                            je 0x4006e69	      2910	cp-demangle.c	FUNCTION_38
0x4006e64	      0xe800000000	                          call 0x4006e69	      2910	cp-demangle.c	FUNCTION_38
0x4006e69	        0x4883c418	                           add rsp, 0x18	      2910	cp-demangle.c	FUNCTION_38
0x4006e6d	              0x5b	                                 pop rbx	      2910	cp-demangle.c	FUNCTION_38
0x4006e6e	              0x5d	                                 pop rbp	      2910	cp-demangle.c	FUNCTION_38
0x4006e6f	              0xc3	                                     ret	      2910	cp-demangle.c	FUNCTION_38
d_print_array_type	SWITCH,0:CALL,7:IF,7:WHILE,0:ELSE,1:DO,0:FOR,1:functions,0	138
0x400551c	            0x4157	                                push r15	      6046	cp-demangle.c	FUNCTION_92
0x400551e	            0x4156	                                push r14	      6046	cp-demangle.c	FUNCTION_92
0x4005520	            0x4155	                                push r13	      6046	cp-demangle.c	FUNCTION_92
0x4005522	            0x4154	                                push r12	      6046	cp-demangle.c	FUNCTION_92
0x4005524	              0x55	                                push rbp	      6046	cp-demangle.c	FUNCTION_92
0x4005525	              0x53	                                push rbx	      6046	cp-demangle.c	FUNCTION_92
0x4005526	        0x4883ec18	                           sub rsp, 0x18	      6046	cp-demangle.c	FUNCTION_92
0x400552a	          0x4889fb	                            mov rbx, rdi	      6046	cp-demangle.c	FUNCTION_92
0x400552d	          0x4189f7	                           mov r15d, esi	      6046	cp-demangle.c	FUNCTION_92
0x4005530	      0x4889542408	                mov qword [rsp + 8], rdx	      6046	cp-demangle.c	FUNCTION_92
0x4005535	          0x4885c9	                           test rcx, rcx	      6050	cp-demangle.c	FUNCTION_92	IF_1
0x4005538	     0xf84fc000000	                            je 0x400563a	      6050	cp-demangle.c	FUNCTION_92	IF_1
0x400553e	          0x4989cd	                            mov r13, rcx	      6050	cp-demangle.c	FUNCTION_92	IF_1
0x4005541	        0x83791000	               cmp dword [rcx + 0x10], 0	      6058	cp-demangle.c	FUNCTION_92	IF_1	FOR_1	IF_2
0x4005545	            0x740d	                            je 0x4005554	      6058	cp-demangle.c	FUNCTION_92	IF_1	FOR_1	IF_2
0x4005547	          0x4889c8	                            mov rax, rcx	      6058	cp-demangle.c	FUNCTION_92	IF_1	FOR_1	IF_2
0x400554a	            0xeb24	                           jmp 0x4005570	      6058	cp-demangle.c	FUNCTION_92	IF_1	FOR_1	IF_2
0x400554c	        0x83781000	               cmp dword [rax + 0x10], 0	      6058	cp-demangle.c	FUNCTION_92	IF_1	FOR_1	IF_2
0x4005550	            0x751e	                           jne 0x4005570	      6058	cp-demangle.c	FUNCTION_92	IF_1	FOR_1	IF_2
0x4005552	            0xeb03	                           jmp 0x4005557	      6058	cp-demangle.c	FUNCTION_92	IF_1	FOR_1	IF_2
0x4005554	          0x4889c8	                            mov rax, rcx	      6058	cp-demangle.c	FUNCTION_92	IF_1	FOR_1	IF_2
0x4005557	        0x488b4008	                mov rax, qword [rax + 8]	      6060	cp-demangle.c	FUNCTION_92	IF_1	FOR_1	IF_2	IF_3
0x400555b	      0xbd00000000	                              mov ebp, 0	      6060	cp-demangle.c	FUNCTION_92	IF_1	FOR_1	IF_2	IF_3
0x4005560	    0x41be00000000	                             mov r14d, 0	      6060	cp-demangle.c	FUNCTION_92	IF_1	FOR_1	IF_2	IF_3
0x4005566	          0x83382a	                   cmp dword [rax], 0x2a	      6060	cp-demangle.c	FUNCTION_92	IF_1	FOR_1	IF_2	IF_3
0x4005569	            0x7517	                           jne 0x4005582	      6060	cp-demangle.c	FUNCTION_92	IF_1	FOR_1	IF_2	IF_3
0x400556b	      0xe9f0010000	                           jmp 0x4005760	      6060	cp-demangle.c	FUNCTION_92	IF_1	FOR_1	IF_2	IF_3
0x4005570	          0x488b00	                    mov rax, qword [rax]	      6056	cp-demangle.c	FUNCTION_92	IF_1	FOR_1
0x4005573	          0x4885c0	                           test rax, rax	      6056	cp-demangle.c	FUNCTION_92	IF_1	FOR_1
0x4005576	            0x75d4	                           jne 0x400554c	      6056	cp-demangle.c	FUNCTION_92	IF_1	FOR_1
0x4005578	      0xbd01000000	                              mov ebp, 1	      6049	cp-demangle.c	FUNCTION_92
0x400557d	      0xe9e3010000	                           jmp 0x4005765	      6049	cp-demangle.c	FUNCTION_92
0x4005582	      0x440fb66500	                  movzx r12d, byte [rbp]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4005587	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005592	            0x752f	                           jne 0x40055c3	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005594	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400559b	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40055a2	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40055a7	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40055aa	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40055b0	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x40055bb	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40055c3	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x40055ca	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x40055ce	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40055d5	        0x44882403	              mov byte [rbx + rax], r12b	      4235	cp-demangle.c	FUNCTION_72
0x40055d9	    0x4488a3080100	            mov byte [rbx + 0x108], r12b	      4236	cp-demangle.c	FUNCTION_72
0x40055e0	        0x4883c501	                              add rbp, 1	      4236	cp-demangle.c	FUNCTION_72
0x40055e4	          0x4c39f5	                            cmp rbp, r14	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40055e7	            0x7599	                           jne 0x4005582	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40055e9	      0xe997010000	                           jmp 0x4005785	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40055ee	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40055f5	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40055fc	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005601	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005604	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400560a	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4005615	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400561d	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4005624	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4005628	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x400562f	        0xc6040329	              mov byte [rbx + rax], 0x29	      4235	cp-demangle.c	FUNCTION_72
0x4005633	    0xc68308010000	           mov byte [rbx + 0x108], 0x29 	      4236	cp-demangle.c	FUNCTION_72
0x400563a	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005645	            0x752f	                           jne 0x4005676	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005647	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400564e	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005655	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400565a	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400565d	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005663	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x400566e	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4005676	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x400567d	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4005681	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4005688	        0xc6040320	              mov byte [rbx + rax], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x400568c	    0xc68308010000	           mov byte [rbx + 0x108], 0x20 	      4236	cp-demangle.c	FUNCTION_72
0x4005693	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400569e	            0x752f	                           jne 0x40056cf	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40056a0	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40056a7	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40056ae	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40056b3	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40056b6	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40056bc	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x40056c7	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40056cf	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x40056d6	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x40056da	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40056e1	        0xc604035b	              mov byte [rbx + rax], 0x5b	      4235	cp-demangle.c	FUNCTION_72
0x40056e5	    0xc68308010000	           mov byte [rbx + 0x108], 0x5b 	      4236	cp-demangle.c	FUNCTION_72
0x40056ec	      0x488b442408	                mov rax, qword [rsp + 8]	      6088	cp-demangle.c	FUNCTION_92	IF_7
0x40056f1	        0x488b5008	                mov rdx, qword [rax + 8]	      6088	cp-demangle.c	FUNCTION_92	IF_7
0x40056f5	          0x4885d2	                           test rdx, rdx	      6088	cp-demangle.c	FUNCTION_92	IF_7
0x40056f8	            0x740b	                            je 0x4005705	      6088	cp-demangle.c	FUNCTION_92	IF_7
0x40056fa	          0x4489fe	                           mov esi, r15d	      6089	cp-demangle.c	FUNCTION_92	CALL_6
0x40056fd	          0x4889df	                            mov rdi, rbx	      6089	cp-demangle.c	FUNCTION_92	CALL_6
0x4005700	      0xe8ddefffff	                   call sym.d_print_comp	      6089	cp-demangle.c	FUNCTION_92	CALL_6
0x4005705	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005710	            0x752f	                           jne 0x4005741	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005712	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4005719	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005720	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005725	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005728	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400572e	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4005739	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4005741	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4005748	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x400574c	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4005753	        0xc604035d	              mov byte [rbx + rax], 0x5d	      4235	cp-demangle.c	FUNCTION_72
0x4005757	    0xc68308010000	           mov byte [rbx + 0x108], 0x5d 	      4236	cp-demangle.c	FUNCTION_72
0x400575e	            0xeb4e	                           jmp 0x40057ae	      6092	cp-demangle.c	FUNCTION_92
0x4005760	      0xbd00000000	                              mov ebp, 0	      6062	cp-demangle.c	FUNCTION_92	IF_1	FOR_1	IF_2	IF_3
0x4005765	      0xb900000000	                              mov ecx, 0	      6077	cp-demangle.c	FUNCTION_92	IF_1	CALL_2
0x400576a	          0x4c89ea	                            mov rdx, r13	      6077	cp-demangle.c	FUNCTION_92	IF_1	CALL_2
0x400576d	          0x4489fe	                           mov esi, r15d	      6077	cp-demangle.c	FUNCTION_92	IF_1	CALL_2
0x4005770	          0x4889df	                            mov rdi, rbx	      6077	cp-demangle.c	FUNCTION_92	IF_1	CALL_2
0x4005773	      0xe8acf9ffff	               call sym.d_print_mod_list	      6077	cp-demangle.c	FUNCTION_92	IF_1	CALL_2
0x4005778	            0x85ed	                           test ebp, ebp	      6083	cp-demangle.c	FUNCTION_92	IF_6
0x400577a	     0xf8413ffffff	                            je 0x4005693	      6083	cp-demangle.c	FUNCTION_92	IF_6
0x4005780	      0xe9b5feffff	                           jmp 0x400563a	      6083	cp-demangle.c	FUNCTION_92	IF_6
0x4005785	      0xb900000000	                              mov ecx, 0	      6077	cp-demangle.c	FUNCTION_92	IF_1	CALL_2
0x400578a	          0x4c89ea	                            mov rdx, r13	      6077	cp-demangle.c	FUNCTION_92	IF_1	CALL_2
0x400578d	          0x4489fe	                           mov esi, r15d	      6077	cp-demangle.c	FUNCTION_92	IF_1	CALL_2
0x4005790	          0x4889df	                            mov rdi, rbx	      6077	cp-demangle.c	FUNCTION_92	IF_1	CALL_2
0x4005793	      0xe88cf9ffff	               call sym.d_print_mod_list	      6077	cp-demangle.c	FUNCTION_92	IF_1	CALL_2
0x4005798	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40057a3	     0xf8574feffff	                           jne 0x400561d	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40057a9	      0xe940feffff	                           jmp 0x40055ee	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40057ae	        0x4883c418	                           add rsp, 0x18	      6092	cp-demangle.c	FUNCTION_92
0x40057b2	              0x5b	                                 pop rbx	      6092	cp-demangle.c	FUNCTION_92
0x40057b3	              0x5d	                                 pop rbp	      6092	cp-demangle.c	FUNCTION_92
0x40057b4	            0x415c	                                 pop r12	      6092	cp-demangle.c	FUNCTION_92
0x40057b6	            0x415d	                                 pop r13	      6092	cp-demangle.c	FUNCTION_92
0x40057b8	            0x415e	                                 pop r14	      6092	cp-demangle.c	FUNCTION_92
0x40057ba	            0x415f	                                 pop r15	      6092	cp-demangle.c	FUNCTION_92
0x40057bc	              0xc3	                                     ret	      6092	cp-demangle.c	FUNCTION_92
d_bare_function_type	SWITCH,0:CALL,4:IF,4:WHILE,0:ELSE,1:DO,0:FOR,0:functions,0	35
0x4007285	              0x55	                                push rbp	      2916	cp-demangle.c	FUNCTION_39
0x4007286	              0x53	                                push rbx	      2916	cp-demangle.c	FUNCTION_39
0x4007287	        0x4883ec08	                              sub rsp, 8	      2916	cp-demangle.c	FUNCTION_39
0x400728b	          0x4889fb	                            mov rbx, rdi	      2916	cp-demangle.c	FUNCTION_39
0x400728e	        0x488b4718	            mov rax, qword [rdi + 0x18] 	      2923	cp-demangle.c	FUNCTION_39	CALL_1
0x4007292	          0x80384a	                    cmp byte [rax], 0x4a	      2924	cp-demangle.c	FUNCTION_39	IF_1
0x4007295	            0x750a	                           jne 0x40072a1	      2924	cp-demangle.c	FUNCTION_39	IF_1
0x4007297	        0x4883c001	                              add rax, 1	      2926	cp-demangle.c	FUNCTION_39	IF_1	CALL_2
0x400729b	        0x48894718	             mov qword [rdi + 0x18], rax	      2926	cp-demangle.c	FUNCTION_39	IF_1	CALL_2
0x400729f	            0xeb09	                           jmp 0x40072aa	      2926	cp-demangle.c	FUNCTION_39	IF_1	CALL_2
0x40072a1	      0xbd00000000	                              mov ebp, 0	      2937	cp-demangle.c	FUNCTION_39	ELSE_1
0x40072a6	            0x85f6	                           test esi, esi	      2930	cp-demangle.c	FUNCTION_39	IF_2
0x40072a8	            0x7410	                            je 0x40072ba	      2930	cp-demangle.c	FUNCTION_39	IF_2
0x40072aa	          0x4889df	                            mov rdi, rbx	      2932	cp-demangle.c	FUNCTION_39	IF_2
0x40072ad	      0xe800000000	                          call 0x40072b2	      2932	cp-demangle.c	FUNCTION_39	IF_2
0x40072b2	          0x4889c5	                            mov rbp, rax	      2932	cp-demangle.c	FUNCTION_39	IF_2
0x40072b5	          0x4885c0	                           test rax, rax	      2933	cp-demangle.c	FUNCTION_39	IF_2	IF_3
0x40072b8	            0x7422	                            je 0x40072dc	      2933	cp-demangle.c	FUNCTION_39	IF_2	IF_3
0x40072ba	          0x4889df	                            mov rdi, rbx	      2939	cp-demangle.c	FUNCTION_39	CALL_3
0x40072bd	      0xe8b4faffff	                     call sym.d_parmlist	      2939	cp-demangle.c	FUNCTION_39	CALL_3
0x40072c2	          0x4885c0	                           test rax, rax	      2940	cp-demangle.c	FUNCTION_39	IF_4
0x40072c5	            0x741c	                            je 0x40072e3	      2940	cp-demangle.c	FUNCTION_39	IF_4
0x40072c7	          0x4889c1	                            mov rcx, rax	      2943	cp-demangle.c	FUNCTION_39	CALL_4
0x40072ca	          0x4889ea	                            mov rdx, rbp	      2943	cp-demangle.c	FUNCTION_39	CALL_4
0x40072cd	      0xbe29000000	                           mov esi, 0x29	      2943	cp-demangle.c	FUNCTION_39	CALL_4
0x40072d2	          0x4889df	                            mov rdi, rbx	      2943	cp-demangle.c	FUNCTION_39	CALL_4
0x40072d5	      0xe8b68dffff	                    call sym.d_make_comp	      2943	cp-demangle.c	FUNCTION_39	CALL_4
0x40072da	            0xeb0c	                           jmp 0x40072e8	      2943	cp-demangle.c	FUNCTION_39	CALL_4
0x40072dc	      0xb800000000	                              mov eax, 0	      2934	cp-demangle.c	FUNCTION_39	IF_2	IF_3
0x40072e1	            0xeb05	                           jmp 0x40072e8	      2934	cp-demangle.c	FUNCTION_39	IF_2	IF_3
0x40072e3	      0xb800000000	                              mov eax, 0	      2941	cp-demangle.c	FUNCTION_39	IF_4
0x40072e8	        0x4883c408	                              add rsp, 8	      2945	cp-demangle.c	FUNCTION_39
0x40072ec	              0x5b	                                 pop rbx	      2945	cp-demangle.c	FUNCTION_39
0x40072ed	              0x5d	                                 pop rbp	      2945	cp-demangle.c	FUNCTION_39
0x40072ee	              0xc3	                                     ret	      2945	cp-demangle.c	FUNCTION_39
d_operator_name	SWITCH,0:CALL,7:IF,6:WHILE,1:ELSE,4:DO,0:FOR,0:functions,0	110
0x4006c04	            0x4154	                                push r12	      1856	cp-demangle.c	FUNCTION_28
0x4006c06	              0x55	                                push rbp	      1856	cp-demangle.c	FUNCTION_28
0x4006c07	              0x53	                                push rbx	      1856	cp-demangle.c	FUNCTION_28
0x4006c08	          0x4889fd	                            mov rbp, rdi	      1856	cp-demangle.c	FUNCTION_28
0x4006c0b	        0x488b4718	            mov rax, qword [rdi + 0x18] 	      1860	cp-demangle.c	FUNCTION_28	CALL_1
0x4006c0f	          0x803800	                       cmp byte [rax], 0	      1860	cp-demangle.c	FUNCTION_28	CALL_1
0x4006c12	            0x7467	                            je 0x4006c7b	      1860	cp-demangle.c	FUNCTION_28	CALL_1
0x4006c14	        0x488d5001	                      lea rdx, [rax + 1]	      1860	cp-demangle.c	FUNCTION_28	CALL_1
0x4006c18	        0x48895718	             mov qword [rdi + 0x18], rdx	      1860	cp-demangle.c	FUNCTION_28	CALL_1
0x4006c1c	        0x440fb600	                   movzx r8d, byte [rax]	      1860	cp-demangle.c	FUNCTION_28	CALL_1
0x4006c20	        0x80780100	                   cmp byte [rax + 1], 0	      1861	cp-demangle.c	FUNCTION_28	CALL_2
0x4006c24	     0xf8433010000	                            je 0x4006d5d	      1861	cp-demangle.c	FUNCTION_28	CALL_2
0x4006c2a	        0x488d5002	                      lea rdx, [rax + 2]	      1861	cp-demangle.c	FUNCTION_28	CALL_2
0x4006c2e	        0x48895718	             mov qword [rdi + 0x18], rdx	      1861	cp-demangle.c	FUNCTION_28	CALL_2
0x4006c32	         0xfb65801	               movzx ebx, byte [rax + 1]	      1861	cp-demangle.c	FUNCTION_28	CALL_2
0x4006c36	        0x4180f876	                           cmp r8b, 0x76	      1862	cp-demangle.c	FUNCTION_28	IF_1
0x4006c3a	            0x754a	                           jne 0x4006c86	      1862	cp-demangle.c	FUNCTION_28	IF_1
0x4006c3c	          0x8d43d0	                   lea eax, [rbx - 0x30]	      1862	cp-demangle.c	FUNCTION_28	IF_1
0x4006c3f	            0x3c09	                               cmp al, 9	      1862	cp-demangle.c	FUNCTION_28	IF_1
0x4006c41	     0xf879c000000	                            ja 0x4006ce3	      1862	cp-demangle.c	FUNCTION_28	IF_1
0x4006c47	      0xe81ef4ffff	                  call sym.d_source_name	      1863	cp-demangle.c	FUNCTION_28	CALL_4
0x4006c4c	          0x4989c4	                            mov r12, rax	      1863	cp-demangle.c	FUNCTION_28	CALL_4
0x4006c4f	          0x4889ef	                            mov rdi, rbp	      1115	cp-demangle.c	FUNCTION_9	CALL_1
0x4006c52	      0xe81194ffff	                   call sym.d_make_empty	      1115	cp-demangle.c	FUNCTION_9	CALL_1
0x4006c57	          0x4889c5	                            mov rbp, rax	      1115	cp-demangle.c	FUNCTION_9	CALL_1
0x4006c5a	           0xfbef3	                           movsx esi, bl	      1116	cp-demangle.c	FUNCTION_9	IF_1
0x4006c5d	          0x83ee30	                           sub esi, 0x30	      1116	cp-demangle.c	FUNCTION_9	IF_1
0x4006c60	          0x4c89e2	                            mov rdx, r12	      1116	cp-demangle.c	FUNCTION_9	IF_1
0x4006c63	          0x4889c7	                            mov rdi, rax	      1116	cp-demangle.c	FUNCTION_9	IF_1
0x4006c66	      0xe800000000	                          call 0x4006c6b	      1116	cp-demangle.c	FUNCTION_9	IF_1
0x4006c6b	            0x85c0	                           test eax, eax	      1118	cp-demangle.c	FUNCTION_9
0x4006c6d	      0xb800000000	                              mov eax, 0	      1118	cp-demangle.c	FUNCTION_9
0x4006c72	        0x480f45c5	                         cmovne rax, rbp	      1118	cp-demangle.c	FUNCTION_9
0x4006c76	      0xe9f6000000	                           jmp 0x4006d71	      1118	cp-demangle.c	FUNCTION_9
0x4006c7b	    0x41b800000000	                              mov r8d, 0	      1860	cp-demangle.c	FUNCTION_28	CALL_1
0x4006c81	      0xbb00000000	                              mov ebx, 0	      1861	cp-demangle.c	FUNCTION_28	CALL_2
0x4006c86	        0x4180f863	                           cmp r8b, 0x63	      1864	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2
0x4006c8a	            0x7557	                           jne 0x4006ce3	      1864	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2
0x4006c8c	          0x80fb76	                            cmp bl, 0x76	      1864	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2
0x4006c8f	            0x7552	                           jne 0x4006ce3	      1864	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2
0x4006c91	          0x8b5d50	            mov ebx, dword [rbp + 0x50] 	      1867	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2
0x4006c94	        0x837d4c00	               cmp dword [rbp + 0x4c], 0	      1870	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2
0x4006c98	           0xf94c0	                                 sete al	      1870	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2
0x4006c9b	           0xfb6c0	                           movzx eax, al	      1870	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2
0x4006c9e	          0x894550	            mov dword [rbp + 0x50], eax 	      1870	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2
0x4006ca1	          0x4889ef	                            mov rdi, rbp	      1871	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2
0x4006ca4	      0xe800000000	                          call 0x4006ca9	      1871	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2
0x4006ca9	        0x837d5000	               cmp dword [rbp + 0x50], 0	      1872	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2	IF_3
0x4006cad	            0x7417	                            je 0x4006cc6	      1872	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2	IF_3
0x4006caf	      0xb900000000	                              mov ecx, 0	      1873	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2	CALL_5
0x4006cb4	          0x4889c2	                            mov rdx, rax	      1873	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2	CALL_5
0x4006cb7	      0xbe34000000	                           mov esi, 0x34	      1873	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2	CALL_5
0x4006cbc	          0x4889ef	                            mov rdi, rbp	      1873	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2	CALL_5
0x4006cbf	      0xe8cc93ffff	                    call sym.d_make_comp	      1873	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2	CALL_5
0x4006cc4	            0xeb15	                           jmp 0x4006cdb	      1873	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2	CALL_5
0x4006cc6	      0xb900000000	                              mov ecx, 0	      1875	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2	CALL_6
0x4006ccb	          0x4889c2	                            mov rdx, rax	      1875	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2	CALL_6
0x4006cce	      0xbe33000000	                           mov esi, 0x33	      1875	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2	CALL_6
0x4006cd3	          0x4889ef	                            mov rdi, rbp	      1875	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2	CALL_6
0x4006cd6	      0xe8b593ffff	                    call sym.d_make_comp	      1875	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2	CALL_6
0x4006cdb	          0x895d50	            mov dword [rbp + 0x50], ebx 	      1876	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2
0x4006cde	      0xe98e000000	                           jmp 0x4006d71	      1877	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2
0x4006ce3	      0xbe43000000	                           mov esi, 0x43	      1861	cp-demangle.c	FUNCTION_28	CALL_2
0x4006ce8	      0xba00000000	                              mov edx, 0	      1861	cp-demangle.c	FUNCTION_28	CALL_2
0x4006ced	            0x89f0	                            mov eax, esi	      1894	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1
0x4006cef	            0x29d0	                            sub eax, edx	      1894	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1
0x4006cf1	            0x89c1	                            mov ecx, eax	      1894	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1
0x4006cf3	          0xc1e91f	                           shr ecx, 0x1f	      1894	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1
0x4006cf6	             0x1c8	                            add eax, ecx	      1894	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1
0x4006cf8	            0xd1f8	                              sar eax, 1	      1894	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1
0x4006cfa	             0x1d0	                            add eax, edx	      1894	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1
0x4006cfc	          0x4863c8	                         movsxd rcx, eax	      1895	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1
0x4006cff	        0x488d0c49	                  lea rcx, [rcx + rcx*2]	      1895	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1
0x4006d03	    0x4c8d24cd0000	                        lea r12, [rcx*8]	      1895	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1
0x4006d0b	    0x488b3ccd0000	                  mov rdi, qword [rcx*8]	      1897	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_4
0x4006d13	           0xfb60f	                   movzx ecx, byte [rdi]	      1897	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_4
0x4006d16	          0x4438c1	                             cmp cl, r8b	      1897	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_4
0x4006d19	            0x753b	                           jne 0x4006d56	      1897	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_4
0x4006d1b	         0xfb64f01	               movzx ecx, byte [rdi + 1]	      1897	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_4
0x4006d1f	            0x38d9	                              cmp cl, bl	      1897	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_4
0x4006d21	            0x7519	                           jne 0x4006d3c	      1897	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_4
0x4006d23	          0x4889ef	                            mov rdi, rbp	      1098	cp-demangle.c	FUNCTION_8	CALL_1
0x4006d26	      0xe83d93ffff	                   call sym.d_make_empty	      1098	cp-demangle.c	FUNCTION_8	CALL_1
0x4006d2b	          0x4885c0	                           test rax, rax	      1099	cp-demangle.c	FUNCTION_8	IF_1
0x4006d2e	            0x7441	                            je 0x4006d71	      1099	cp-demangle.c	FUNCTION_8	IF_1
0x4006d30	    0xc70031000000	                   mov dword [rax], 0x31	      1101	cp-demangle.c	FUNCTION_8	IF_1
0x4006d36	        0x4c896008	                mov qword [rax + 8], r12	      1102	cp-demangle.c	FUNCTION_8	IF_1
0x4006d3a	            0xeb35	                           jmp 0x4006d71	      1102	cp-demangle.c	FUNCTION_8	IF_1
0x4006d3c	            0x38d9	                              cmp cl, bl	      1900	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_5
0x4006d3e	            0x7f05	                            jg 0x4006d45	      1900	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_5
0x4006d40	          0x8d5001	                      lea edx, [rax + 1]	      1903	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	ELSE_4
0x4006d43	            0xeb06	                           jmp 0x4006d4b	      1903	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	ELSE_4
0x4006d45	            0x89c6	                            mov esi, eax	      1901	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_5
0x4006d47	            0xeb02	                           jmp 0x4006d4b	      1901	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_5
0x4006d49	            0x89c6	                            mov esi, eax	      1901	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_5
0x4006d4b	            0x39f2	                            cmp edx, esi	      1904	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_6
0x4006d4d	            0x759e	                           jne 0x4006ced	      1904	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_6
0x4006d4f	      0xb800000000	                              mov eax, 0	      1905	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_6
0x4006d54	            0xeb1b	                           jmp 0x4006d71	      1905	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_6
0x4006d56	          0x4438c1	                             cmp cl, r8b	      1900	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_5
0x4006d59	            0x7fee	                            jg 0x4006d49	      1900	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_5
0x4006d5b	            0xebe3	                           jmp 0x4006d40	      1900	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_5
0x4006d5d	      0xbb00000000	                              mov ebx, 0	      1861	cp-demangle.c	FUNCTION_28	CALL_2
0x4006d62	        0x4180f876	                           cmp r8b, 0x76	      1862	cp-demangle.c	FUNCTION_28	IF_1
0x4006d66	     0xf8477ffffff	                            je 0x4006ce3	      1862	cp-demangle.c	FUNCTION_28	IF_1
0x4006d6c	      0xe915ffffff	                           jmp 0x4006c86	      1862	cp-demangle.c	FUNCTION_28	IF_1
0x4006d71	              0x5b	                                 pop rbx	      1908	cp-demangle.c	FUNCTION_28
0x4006d72	              0x5d	                                 pop rbp	      1908	cp-demangle.c	FUNCTION_28
0x4006d73	            0x415c	                                 pop r12	      1908	cp-demangle.c	FUNCTION_28
0x4006d75	              0xc3	                                     ret	      1908	cp-demangle.c	FUNCTION_28
d_number	SWITCH,0:CALL,5:IF,4:WHILE,1:ELSE,0:DO,0:FOR,0:functions,0	60
0x40001d3	        0x488b4718	            mov rax, qword [rdi + 0x18] 	      1691	cp-demangle.c	FUNCTION_25	CALL_1
0x40001d7	           0xfb608	                   movzx ecx, byte [rax]	      1691	cp-demangle.c	FUNCTION_25	CALL_1
0x40001da	          0x80f96e	                            cmp cl, 0x6e	      1692	cp-demangle.c	FUNCTION_25	IF_1
0x40001dd	     0xf85a6000000	                           jne 0x4000289	      1692	cp-demangle.c	FUNCTION_25	IF_1
0x40001e3	        0x488d5001	                      lea rdx, [rax + 1]	      1695	cp-demangle.c	FUNCTION_25	IF_1	CALL_2
0x40001e7	        0x48895718	             mov qword [rdi + 0x18], rdx	      1695	cp-demangle.c	FUNCTION_25	IF_1	CALL_2
0x40001eb	         0xfb64801	               movzx ecx, byte [rax + 1]	      1696	cp-demangle.c	FUNCTION_25	IF_1	CALL_3
0x40001ef	          0x8d41d0	                   lea eax, [rcx - 0x30]	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x40001f2	            0x3c09	                               cmp al, 9	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x40001f4	            0x773c	                            ja 0x4000232	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x40001f6	    0x41ba01000000	                             mov r10d, 1	      1694	cp-demangle.c	FUNCTION_25	IF_1
0x40001fc	           0xfbec9	                           movsx ecx, cl	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x40001ff	      0xba2f000080	                     mov edx, 0x8000002f	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x4000204	            0x29ca	                            sub edx, ecx	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x4000206	      0xb8ffffffff	                     mov eax, 0xffffffff	      1709	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400020b	          0x83faf7	             cmp edx, 0xfffffffffffffff7	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400020e	     0xf8c87000000	                            jl 0x400029b	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x4000214	    0x41b800000000	                              mov r8d, 0	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400021a	    0x41bbffffff7f	                    mov r11d, 0x7fffffff	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x4000220	    0x41b967666666	                     mov r9d, 0x66666667	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x4000226	            0xeb33	                           jmp 0x400025b	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x4000228	          0x4489c0	                            mov eax, r8d	      1710	cp-demangle.c	FUNCTION_25	WHILE_1
0x400022b	          0x4585d2	                         test r10d, r10d	      1704	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2	IF_3
0x400022e	            0x7508	                           jne 0x4000238	      1704	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2	IF_3
0x4000230	            0xf3c3	                                     ret	      1704	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2	IF_3
0x4000232	    0x41b800000000	                              mov r8d, 0	      1699	cp-demangle.c	FUNCTION_25
0x4000238	          0x4489c0	                            mov eax, r8d	      1705	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2	IF_3
0x400023b	            0xf7d8	                                 neg eax	      1705	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2	IF_3
0x400023d	              0xc3	                                     ret	      1705	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2	IF_3
0x400023e	           0xfbec9	                           movsx ecx, cl	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x4000241	          0x8d41d0	                   lea eax, [rcx - 0x30]	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x4000244	          0x4489de	                           mov esi, r11d	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x4000247	            0x29c6	                            sub esi, eax	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x4000249	            0x89f0	                            mov eax, esi	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400024b	          0x41f7e9	                                imul r9d	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400024e	          0xc1fa02	                              sar edx, 2	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x4000251	          0xc1fe1f	                           sar esi, 0x1f	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x4000254	            0x29f2	                            sub edx, esi	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x4000256	          0x4439c2	                            cmp edx, r8d	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x4000259	            0x7c22	                            jl 0x400027d	      1708	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x400025b	        0x438d0480	                    lea eax, [r8 + r8*4]	      1710	cp-demangle.c	FUNCTION_25	WHILE_1
0x400025f	      0x448d4441d0	           lea r8d, [rcx + rax*2 - 0x30]	      1710	cp-demangle.c	FUNCTION_25	WHILE_1
0x4000264	        0x488b4718	            mov rax, qword [rdi + 0x18] 	      1711	cp-demangle.c	FUNCTION_25	WHILE_1	CALL_4
0x4000268	        0x488d5001	                      lea rdx, [rax + 1]	      1711	cp-demangle.c	FUNCTION_25	WHILE_1	CALL_4
0x400026c	        0x48895718	             mov qword [rdi + 0x18], rdx	      1711	cp-demangle.c	FUNCTION_25	WHILE_1	CALL_4
0x4000270	         0xfb64801	               movzx ecx, byte [rax + 1]	      1712	cp-demangle.c	FUNCTION_25	WHILE_1	CALL_5
0x4000274	          0x8d41d0	                   lea eax, [rcx - 0x30]	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x4000277	            0x3c09	                               cmp al, 9	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x4000279	            0x76c3	                           jbe 0x400023e	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x400027b	            0xebab	                           jmp 0x4000228	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x400027d	      0xb8ffffffff	                     mov eax, 0xffffffff	      1709	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x4000282	              0xc3	                                     ret	      1709	cp-demangle.c	FUNCTION_25	WHILE_1	IF_4
0x4000283	      0xb800000000	                              mov eax, 0	      1699	cp-demangle.c	FUNCTION_25
0x4000288	              0xc3	                                     ret	      1699	cp-demangle.c	FUNCTION_25
0x4000289	          0x8d41d0	                   lea eax, [rcx - 0x30]	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x400028c	            0x3c09	                               cmp al, 9	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x400028e	            0x77f3	                            ja 0x4000283	      1702	cp-demangle.c	FUNCTION_25	WHILE_1	IF_2
0x4000290	    0x41ba00000000	                             mov r10d, 0	      1690	cp-demangle.c	FUNCTION_25
0x4000296	      0xe961ffffff	                           jmp 0x40001fc	      1690	cp-demangle.c	FUNCTION_25
0x400029b	            0xf3c3	                                     ret	      1714	cp-demangle.c	FUNCTION_25
has_return_type	SWITCH,1:CALL,3:IF,1:WHILE,0:ELSE,0:DO,0:FOR,0:functions,0	38
0x4000164	        0x4883ec08	                              sub rsp, 8	      1255	cp-demangle.c	FUNCTION_16
0x4000168	          0x4885ff	                           test rdi, rdi	      1256	cp-demangle.c	FUNCTION_16	IF_1
0x400016b	            0x7455	                            je 0x40001c2	      1256	cp-demangle.c	FUNCTION_16	IF_1
0x400016d	            0x8b07	                    mov eax, dword [rdi]	      1258	cp-demangle.c	FUNCTION_16	SWITCH_1
0x400016f	          0x83f820	                           cmp eax, 0x20	      1258	cp-demangle.c	FUNCTION_16	SWITCH_1
0x4000172	            0x7711	                            ja 0x4000185	      1258	cp-demangle.c	FUNCTION_16	SWITCH_1
0x4000174	          0x83f81c	                           cmp eax, 0x1c	      1258	cp-demangle.c	FUNCTION_16	SWITCH_1
0x4000177	            0x733e	                           jae 0x40001b7	      1258	cp-demangle.c	FUNCTION_16	SWITCH_1
0x4000179	          0x83f802	                              cmp eax, 2	      1258	cp-demangle.c	FUNCTION_16	SWITCH_1
0x400017c	            0x741b	                            je 0x4000199	      1258	cp-demangle.c	FUNCTION_16	SWITCH_1
0x400017e	          0x83f804	                              cmp eax, 4	      1258	cp-demangle.c	FUNCTION_16	SWITCH_1
0x4000181	            0x7421	                            je 0x40001a4	      1258	cp-demangle.c	FUNCTION_16	SWITCH_1
0x4000183	            0xeb44	                           jmp 0x40001c9	      1258	cp-demangle.c	FUNCTION_16	SWITCH_1
0x4000185	          0x83f84c	                           cmp eax, 0x4c	      1258	cp-demangle.c	FUNCTION_16	SWITCH_1
0x4000188	            0x742d	                            je 0x40001b7	      1258	cp-demangle.c	FUNCTION_16	SWITCH_1
0x400018a	          0x83f84c	                           cmp eax, 0x4c	      1258	cp-demangle.c	FUNCTION_16	SWITCH_1
0x400018d	            0x723a	                            jb 0x40001c9	      1258	cp-demangle.c	FUNCTION_16	SWITCH_1
0x400018f	          0x83e84e	                           sub eax, 0x4e	      1258	cp-demangle.c	FUNCTION_16	SWITCH_1
0x4000192	          0x83f801	                              cmp eax, 1	      1258	cp-demangle.c	FUNCTION_16	SWITCH_1
0x4000195	            0x7620	                           jbe 0x40001b7	      1258	cp-demangle.c	FUNCTION_16	SWITCH_1
0x4000197	            0xeb30	                           jmp 0x40001c9	      1258	cp-demangle.c	FUNCTION_16	SWITCH_1
0x4000199	        0x488b7f10	            mov rdi, qword [rdi + 0x10] 	      1263	cp-demangle.c	FUNCTION_16	SWITCH_1	CALL_1
0x400019d	      0xe8c2ffffff	                call sym.has_return_type	      1263	cp-demangle.c	FUNCTION_16	SWITCH_1	CALL_1
0x40001a2	            0xeb2a	                           jmp 0x40001ce	      1263	cp-demangle.c	FUNCTION_16	SWITCH_1	CALL_1
0x40001a4	        0x488b7f08	                mov rdi, qword [rdi + 8]	      1265	cp-demangle.c	FUNCTION_16	SWITCH_1	CALL_2
0x40001a8	      0xe871ffffff	     call sym.is_ctor_dtor_or_conversion	      1265	cp-demangle.c	FUNCTION_16	SWITCH_1	CALL_2
0x40001ad	            0x85c0	                           test eax, eax	      1265	cp-demangle.c	FUNCTION_16	SWITCH_1	CALL_2
0x40001af	           0xf94c0	                                 sete al	      1265	cp-demangle.c	FUNCTION_16	SWITCH_1	CALL_2
0x40001b2	           0xfb6c0	                           movzx eax, al	      1265	cp-demangle.c	FUNCTION_16	SWITCH_1	CALL_2
0x40001b5	            0xeb17	                           jmp 0x40001ce	      1265	cp-demangle.c	FUNCTION_16	SWITCH_1	CALL_2
0x40001b7	        0x488b7f08	                mov rdi, qword [rdi + 8]	      1267	cp-demangle.c	FUNCTION_16	SWITCH_1	CALL_3
0x40001bb	      0xe8a4ffffff	                call sym.has_return_type	      1267	cp-demangle.c	FUNCTION_16	SWITCH_1	CALL_3
0x40001c0	            0xeb0c	                           jmp 0x40001ce	      1267	cp-demangle.c	FUNCTION_16	SWITCH_1	CALL_3
0x40001c2	      0xb800000000	                              mov eax, 0	      1257	cp-demangle.c	FUNCTION_16	IF_1
0x40001c7	            0xeb05	                           jmp 0x40001ce	      1257	cp-demangle.c	FUNCTION_16	IF_1
0x40001c9	      0xb800000000	                              mov eax, 0	      1261	cp-demangle.c	FUNCTION_16	SWITCH_1
0x40001ce	        0x4883c408	                              add rsp, 8	      1269	cp-demangle.c	FUNCTION_16
0x40001d2	              0xc3	                                     ret	      1269	cp-demangle.c	FUNCTION_16
d_demangle_callback	SWITCH,1:CALL,12:IF,4:WHILE,0:ELSE,2:DO,0:FOR,0:functions,0	213
0x4009671	              0x55	                                push rbp	      6201	cp-demangle.c	FUNCTION_96
0x4009672	          0x4889e5	                            mov rbp, rsp	      6201	cp-demangle.c	FUNCTION_96
0x4009675	            0x4157	                                push r15	      6201	cp-demangle.c	FUNCTION_96
0x4009677	            0x4156	                                push r14	      6201	cp-demangle.c	FUNCTION_96
0x4009679	            0x4155	                                push r13	      6201	cp-demangle.c	FUNCTION_96
0x400967b	            0x4154	                                push r12	      6201	cp-demangle.c	FUNCTION_96
0x400967d	              0x53	                                push rbx	      6201	cp-demangle.c	FUNCTION_96
0x400967e	        0x4883ec68	                           sub rsp, 0x68	      6201	cp-demangle.c	FUNCTION_96
0x4009682	          0x4989f8	                             mov r8, rdi	      6201	cp-demangle.c	FUNCTION_96
0x4009685	            0x89f3	                            mov ebx, esi	      6201	cp-demangle.c	FUNCTION_96
0x4009687	          0x4989d4	                            mov r12, rdx	      6201	cp-demangle.c	FUNCTION_96
0x400968a	          0x4989cd	                            mov r13, rcx	      6201	cp-demangle.c	FUNCTION_96
0x400968d	    0x64488b042528	                mov rax, qword fs:[0x28]	      6201	cp-demangle.c	FUNCTION_96
0x4009696	        0x488945c8	             mov qword [rbp - 0x38], rax	      6201	cp-demangle.c	FUNCTION_96
0x400969a	            0x31c0	                            xor eax, eax	      6201	cp-demangle.c	FUNCTION_96
0x400969c	          0x803f5f	                    cmp byte [rdi], 0x5f	      6214	cp-demangle.c	FUNCTION_96	IF_1
0x400969f	            0x750a	                           jne 0x40096ab	      6214	cp-demangle.c	FUNCTION_96	IF_1
0x40096a1	        0x807f015a	                cmp byte [rdi + 1], 0x5a	      6214	cp-demangle.c	FUNCTION_96	IF_1
0x40096a5	     0xf846e020000	                            je 0x4009919	      6214	cp-demangle.c	FUNCTION_96	IF_1
0x40096ab	      0xbf00000000	                              mov edi, 0	      6216	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2	CALL_1
0x40096b0	      0xb908000000	                              mov ecx, 8	      6216	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2	CALL_1
0x40096b5	          0x4c89c6	                             mov rsi, r8	      6216	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2	CALL_1
0x40096b8	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      6216	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2	CALL_1
0x40096ba	           0xf97c2	                                 seta dl	      6216	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2	CALL_1
0x40096bd	           0xf92c0	                                 setb al	      6216	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2	CALL_1
0x40096c0	            0x38c2	                              cmp dl, al	      6216	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2	CALL_1
0x40096c2	     0xf85db000000	                           jne 0x40097a3	      6216	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2	CALL_1
0x40096c8	      0x410fb64008	                movzx eax, byte [r8 + 8]	      6217	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x40096cd	          0x83e824	                           sub eax, 0x24	      6217	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x40096d0	            0x3c3b	                            cmp al, 0x3b	      6217	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x40096d2	     0xf87cb000000	                            ja 0x40097a3	      6217	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x40096d8	    0x48ba01040000	          movabs rdx, 0x800000000000401 	      6217	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x40096e2	        0x480fa3c2	                             bt rdx, rax	      6217	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x40096e6	     0xf83b7000000	                           jae 0x40097a3	      6217	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x40096ec	      0x410fb64009	                movzx eax, byte [r8 + 9]	      6218	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x40096f1	            0x3c44	                            cmp al, 0x44	      6218	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x40096f3	            0x7408	                            je 0x40096fd	      6218	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x40096f5	            0x3c49	                            cmp al, 0x49	      6218	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x40096f7	     0xf85a6000000	                           jne 0x40097a3	      6218	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x40096fd	      0x4180780a5f	               cmp byte [r8 + 0xa], 0x5f	      6219	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4009702	     0xf859b000000	                           jne 0x40097a3	      6219	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4009708	            0x3c49	                            cmp al, 0x49	      6220	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x400970a	        0x410f95c6	                              setne r14b	      6220	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x400970e	        0x450fb6f6	                        movzx r14d, r14b	      6220	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4009712	        0x4183c602	                             add r14d, 2	      6220	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4009716	      0xb800000000	                              mov eax, 0	      6228	cp-demangle.c	FUNCTION_96	CALL_2
0x400971b	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      6228	cp-demangle.c	FUNCTION_96	CALL_2
0x4009722	          0x4c89c7	                             mov rdi, r8	      6228	cp-demangle.c	FUNCTION_96	CALL_2
0x4009725	            0xf2ae	              repne scasb al, byte [rdi]	      6228	cp-demangle.c	FUNCTION_96	CALL_2
0x4009727	          0x4889ce	                            mov rsi, rcx	      6228	cp-demangle.c	FUNCTION_96	CALL_2
0x400972a	          0x48f7d6	                                 not rsi	      6228	cp-demangle.c	FUNCTION_96	CALL_2
0x400972d	        0x488d56ff	                      lea rdx, [rsi - 1]	      6228	cp-demangle.c	FUNCTION_96	CALL_2
0x4009731	    0x488d8d70ffff	                   lea rcx, [rbp - 0x90]	      6228	cp-demangle.c	FUNCTION_96	CALL_2
0x4009738	            0x89de	                            mov esi, ebx	      6228	cp-demangle.c	FUNCTION_96	CALL_2
0x400973a	          0x4c89c7	                             mov rdi, r8	      6228	cp-demangle.c	FUNCTION_96	CALL_2
0x400973d	      0xe800000000	                          call 0x4009742	      6228	cp-demangle.c	FUNCTION_96	CALL_2
0x4009742	          0x4989e7	                            mov r15, rsp	      6230	cp-demangle.c	FUNCTION_96
0x4009745	        0x4863459c	          movsxd rax, dword [rbp - 0x64]	      6232	cp-demangle.c	FUNCTION_96
0x4009749	        0x488d0440	                  lea rax, [rax + rax*2]	      6232	cp-demangle.c	FUNCTION_96
0x400974d	      0xb910000000	                           mov ecx, 0x10	      6232	cp-demangle.c	FUNCTION_96
0x4009752	    0x488d04c51600	                 lea rax, [rax*8 + 0x16]	      6232	cp-demangle.c	FUNCTION_96
0x400975a	      0xba00000000	                              mov edx, 0	      6232	cp-demangle.c	FUNCTION_96
0x400975f	          0x48f7f1	                                 div rcx	      6232	cp-demangle.c	FUNCTION_96
0x4009762	        0x48c1e004	                              shl rax, 4	      6232	cp-demangle.c	FUNCTION_96
0x4009766	          0x4829c4	                            sub rsp, rax	      6232	cp-demangle.c	FUNCTION_96
0x4009769	          0x4889e6	                            mov rsi, rsp	      6232	cp-demangle.c	FUNCTION_96
0x400976c	        0x486345ac	          movsxd rax, dword [rbp - 0x54]	      6233	cp-demangle.c	FUNCTION_96
0x4009770	    0x488d04c51600	                 lea rax, [rax*8 + 0x16]	      6233	cp-demangle.c	FUNCTION_96
0x4009778	      0xba00000000	                              mov edx, 0	      6233	cp-demangle.c	FUNCTION_96
0x400977d	          0x48f7f1	                                 div rcx	      6233	cp-demangle.c	FUNCTION_96
0x4009780	        0x48c1e004	                              shl rax, 4	      6233	cp-demangle.c	FUNCTION_96
0x4009784	          0x4829c4	                            sub rsp, rax	      6233	cp-demangle.c	FUNCTION_96
0x4009787	        0x48897590	             mov qword [rbp - 0x70], rsi	      6235	cp-demangle.c	FUNCTION_96
0x400978b	        0x488965a0	             mov qword [rbp - 0x60], rsp	      6236	cp-demangle.c	FUNCTION_96
0x400978f	        0x488b4588	             mov rax, qword [rbp - 0x78]	      6252	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_3
0x4009793	        0x488d700b	                    lea rsi, [rax + 0xb]	      6252	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_3
0x4009797	        0x48897588	             mov qword [rbp - 0x78], rsi	      6252	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_3
0x400979b	        0x80780b5f	              cmp byte [rax + 0xb], 0x5f	      1053	cp-demangle.c	FUNCTION_5	IF_1	CALL_2
0x400979f	            0x7412	                            je 0x40097b3	      1053	cp-demangle.c	FUNCTION_5	IF_1	CALL_2
0x40097a1	            0xeb16	                           jmp 0x40097b9	      1053	cp-demangle.c	FUNCTION_5	IF_1	CALL_2
0x40097a3	            0x89d8	                            mov eax, ebx	      6223	cp-demangle.c	FUNCTION_96	ELSE_2	IF_3
0x40097a5	          0x83e010	                           and eax, 0x10	      6223	cp-demangle.c	FUNCTION_96	ELSE_2	IF_3
0x40097a8	     0xf85de000000	                           jne 0x400988c	      6223	cp-demangle.c	FUNCTION_96	ELSE_2	IF_3
0x40097ae	      0xe9c1000000	                           jmp 0x4009874	      6223	cp-demangle.c	FUNCTION_96	ELSE_2	IF_3
0x40097b3	        0x80780c5a	              cmp byte [rax + 0xc], 0x5a	      1053	cp-demangle.c	FUNCTION_5	IF_1	CALL_2
0x40097b7	            0x742c	                            je 0x40097e5	      1053	cp-demangle.c	FUNCTION_5	IF_1	CALL_2
0x40097b9	      0xb800000000	                              mov eax, 0	      1054	cp-demangle.c	FUNCTION_5	CALL_4
0x40097be	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1054	cp-demangle.c	FUNCTION_5	CALL_4
0x40097c5	          0x4889f7	                            mov rdi, rsi	      1054	cp-demangle.c	FUNCTION_5	CALL_4
0x40097c8	            0xf2ae	              repne scasb al, byte [rdi]	      1054	cp-demangle.c	FUNCTION_5	CALL_4
0x40097ca	          0x4889ca	                            mov rdx, rcx	      1054	cp-demangle.c	FUNCTION_5	CALL_4
0x40097cd	          0x48f7d2	                                 not rdx	      1054	cp-demangle.c	FUNCTION_5	CALL_4
0x40097d0	        0x488d52ff	                      lea rdx, [rdx - 1]	      1054	cp-demangle.c	FUNCTION_5	CALL_4
0x40097d4	    0x488dbd70ffff	                   lea rdi, [rbp - 0x90]	      1054	cp-demangle.c	FUNCTION_5	CALL_4
0x40097db	      0xe85ac8ffff	                    call sym.d_make_name	      1054	cp-demangle.c	FUNCTION_5	CALL_4
0x40097e0	          0x4889c2	                            mov rdx, rax	      1054	cp-demangle.c	FUNCTION_5	CALL_4
0x40097e3	            0xeb1c	                           jmp 0x4009801	      1054	cp-demangle.c	FUNCTION_5	CALL_4
0x40097e5	        0x4883c00d	                            add rax, 0xd	      1055	cp-demangle.c	FUNCTION_5	CALL_5
0x40097e9	        0x48894588	             mov qword [rbp - 0x78], rax	      1055	cp-demangle.c	FUNCTION_5	CALL_5
0x40097ed	      0xbe00000000	                              mov esi, 0	      1056	cp-demangle.c	FUNCTION_5	CALL_6
0x40097f2	    0x488dbd70ffff	                   lea rdi, [rbp - 0x90]	      1056	cp-demangle.c	FUNCTION_5	CALL_6
0x40097f9	      0xe86ce9ffff	                     call sym.d_encoding	      1056	cp-demangle.c	FUNCTION_5	CALL_6
0x40097fe	          0x4889c2	                            mov rdx, rax	      1056	cp-demangle.c	FUNCTION_5	CALL_6
0x4009801	        0x4183fe02	                             cmp r14d, 2	      6253	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_4
0x4009805	        0x400f95c6	                               setne sil	      6253	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_4
0x4009809	        0x400fb6f6	                          movzx esi, sil	      6253	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_4
0x400980d	          0x83c643	                           add esi, 0x43	      6253	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_4
0x4009810	      0xb900000000	                              mov ecx, 0	      6253	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_4
0x4009815	    0x488dbd70ffff	                   lea rdi, [rbp - 0x90]	      6253	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_4
0x400981c	      0xe86f68ffff	                    call sym.d_make_comp	      6253	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_4
0x4009821	          0x4889c6	                            mov rsi, rax	      6253	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_4
0x4009824	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      6259	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_9
0x4009828	      0xb800000000	                              mov eax, 0	      6259	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_9
0x400982d	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      6259	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_9
0x4009834	          0x4889d7	                            mov rdi, rdx	      6259	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_9
0x4009837	            0xf2ae	              repne scasb al, byte [rdi]	      6259	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_9
0x4009839	          0x48f7d1	                                 not rcx	      6259	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_9
0x400983c	      0x488d440aff	                lea rax, [rdx + rcx - 1]	      6259	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_9
0x4009841	        0x48894588	             mov qword [rbp - 0x78], rax	      6259	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_9
0x4009845	          0xf6c301	                              test bl, 1	      6269	cp-demangle.c	FUNCTION_96	IF_4	CALL_11
0x4009848	            0x740e	                            je 0x4009858	      6269	cp-demangle.c	FUNCTION_96	IF_4	CALL_11
0x400984a	      0xb800000000	                              mov eax, 0	      6278	cp-demangle.c	FUNCTION_96
0x400984f	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      6269	cp-demangle.c	FUNCTION_96	IF_4	CALL_11
0x4009853	          0x803a00	                       cmp byte [rdx], 0	      6269	cp-demangle.c	FUNCTION_96	IF_4	CALL_11
0x4009856	            0x7519	                           jne 0x4009871	      6269	cp-demangle.c	FUNCTION_96	IF_4	CALL_11
0x4009858	          0x4885f6	                           test rsi, rsi	      6278	cp-demangle.c	FUNCTION_96
0x400985b	            0x740f	                            je 0x400986c	      6278	cp-demangle.c	FUNCTION_96
0x400985d	          0x4c89e9	                            mov rcx, r13	      6278	cp-demangle.c	FUNCTION_96
0x4009860	          0x4c89e2	                            mov rdx, r12	      6278	cp-demangle.c	FUNCTION_96
0x4009863	            0x89df	                            mov edi, ebx	      6278	cp-demangle.c	FUNCTION_96
0x4009865	      0xe800000000	                          call 0x400986a	      6278	cp-demangle.c	FUNCTION_96
0x400986a	            0xeb05	                           jmp 0x4009871	      6278	cp-demangle.c	FUNCTION_96
0x400986c	      0xb800000000	                              mov eax, 0	      6278	cp-demangle.c	FUNCTION_96
0x4009871	          0x4c89fc	                            mov rsp, r15	      6278	cp-demangle.c	FUNCTION_96
0x4009874	        0x488b5dc8	             mov rbx, qword [rbp - 0x38]	      6282	cp-demangle.c	FUNCTION_96
0x4009878	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      6282	cp-demangle.c	FUNCTION_96
0x4009881	     0xf8426010000	                            je 0x40099ad	      6282	cp-demangle.c	FUNCTION_96
0x4009887	      0xe91c010000	                           jmp 0x40099a8	      6282	cp-demangle.c	FUNCTION_96
0x400988c	      0xb800000000	                              mov eax, 0	      6228	cp-demangle.c	FUNCTION_96	CALL_2
0x4009891	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      6228	cp-demangle.c	FUNCTION_96	CALL_2
0x4009898	          0x4c89c7	                             mov rdi, r8	      6228	cp-demangle.c	FUNCTION_96	CALL_2
0x400989b	            0xf2ae	              repne scasb al, byte [rdi]	      6228	cp-demangle.c	FUNCTION_96	CALL_2
0x400989d	          0x4889ce	                            mov rsi, rcx	      6228	cp-demangle.c	FUNCTION_96	CALL_2
0x40098a0	          0x48f7d6	                                 not rsi	      6228	cp-demangle.c	FUNCTION_96	CALL_2
0x40098a3	        0x488d56ff	                      lea rdx, [rsi - 1]	      6228	cp-demangle.c	FUNCTION_96	CALL_2
0x40098a7	    0x488d8d70ffff	                   lea rcx, [rbp - 0x90]	      6228	cp-demangle.c	FUNCTION_96	CALL_2
0x40098ae	            0x89de	                            mov esi, ebx	      6228	cp-demangle.c	FUNCTION_96	CALL_2
0x40098b0	          0x4c89c7	                             mov rdi, r8	      6228	cp-demangle.c	FUNCTION_96	CALL_2
0x40098b3	      0xe800000000	                          call 0x40098b8	      6228	cp-demangle.c	FUNCTION_96	CALL_2
0x40098b8	          0x4989e7	                            mov r15, rsp	      6230	cp-demangle.c	FUNCTION_96
0x40098bb	        0x4863459c	          movsxd rax, dword [rbp - 0x64]	      6232	cp-demangle.c	FUNCTION_96
0x40098bf	        0x488d0440	                  lea rax, [rax + rax*2]	      6232	cp-demangle.c	FUNCTION_96
0x40098c3	      0xb910000000	                           mov ecx, 0x10	      6232	cp-demangle.c	FUNCTION_96
0x40098c8	    0x488d04c51600	                 lea rax, [rax*8 + 0x16]	      6232	cp-demangle.c	FUNCTION_96
0x40098d0	      0xba00000000	                              mov edx, 0	      6232	cp-demangle.c	FUNCTION_96
0x40098d5	          0x48f7f1	                                 div rcx	      6232	cp-demangle.c	FUNCTION_96
0x40098d8	        0x48c1e004	                              shl rax, 4	      6232	cp-demangle.c	FUNCTION_96
0x40098dc	          0x4829c4	                            sub rsp, rax	      6232	cp-demangle.c	FUNCTION_96
0x40098df	          0x4889e6	                            mov rsi, rsp	      6232	cp-demangle.c	FUNCTION_96
0x40098e2	        0x486345ac	          movsxd rax, dword [rbp - 0x54]	      6233	cp-demangle.c	FUNCTION_96
0x40098e6	    0x488d04c51600	                 lea rax, [rax*8 + 0x16]	      6233	cp-demangle.c	FUNCTION_96
0x40098ee	      0xba00000000	                              mov edx, 0	      6233	cp-demangle.c	FUNCTION_96
0x40098f3	          0x48f7f1	                                 div rcx	      6233	cp-demangle.c	FUNCTION_96
0x40098f6	        0x48c1e004	                              shl rax, 4	      6233	cp-demangle.c	FUNCTION_96
0x40098fa	          0x4829c4	                            sub rsp, rax	      6233	cp-demangle.c	FUNCTION_96
0x40098fd	        0x48897590	             mov qword [rbp - 0x70], rsi	      6235	cp-demangle.c	FUNCTION_96
0x4009901	        0x488965a0	             mov qword [rbp - 0x60], rsp	      6236	cp-demangle.c	FUNCTION_96
0x4009905	    0x488dbd70ffff	                   lea rdi, [rbp - 0x90]	      6245	cp-demangle.c	FUNCTION_96	SWITCH_1
0x400990c	      0xe800000000	                          call 0x4009911	      6245	cp-demangle.c	FUNCTION_96	SWITCH_1
0x4009911	          0x4889c6	                            mov rsi, rax	      6245	cp-demangle.c	FUNCTION_96	SWITCH_1
0x4009914	      0xe92cffffff	                           jmp 0x4009845	      6246	cp-demangle.c	FUNCTION_96	SWITCH_1
0x4009919	      0xb800000000	                              mov eax, 0	      6228	cp-demangle.c	FUNCTION_96	CALL_2
0x400991e	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      6228	cp-demangle.c	FUNCTION_96	CALL_2
0x4009925	            0xf2ae	              repne scasb al, byte [rdi]	      6228	cp-demangle.c	FUNCTION_96	CALL_2
0x4009927	          0x4889ce	                            mov rsi, rcx	      6228	cp-demangle.c	FUNCTION_96	CALL_2
0x400992a	          0x48f7d6	                                 not rsi	      6228	cp-demangle.c	FUNCTION_96	CALL_2
0x400992d	        0x488d56ff	                      lea rdx, [rsi - 1]	      6228	cp-demangle.c	FUNCTION_96	CALL_2
0x4009931	    0x488d8d70ffff	                   lea rcx, [rbp - 0x90]	      6228	cp-demangle.c	FUNCTION_96	CALL_2
0x4009938	            0x89de	                            mov esi, ebx	      6228	cp-demangle.c	FUNCTION_96	CALL_2
0x400993a	          0x4c89c7	                             mov rdi, r8	      6228	cp-demangle.c	FUNCTION_96	CALL_2
0x400993d	      0xe800000000	                          call 0x4009942	      6228	cp-demangle.c	FUNCTION_96	CALL_2
0x4009942	          0x4989e7	                            mov r15, rsp	      6230	cp-demangle.c	FUNCTION_96
0x4009945	        0x4863459c	          movsxd rax, dword [rbp - 0x64]	      6232	cp-demangle.c	FUNCTION_96
0x4009949	        0x488d0440	                  lea rax, [rax + rax*2]	      6232	cp-demangle.c	FUNCTION_96
0x400994d	      0xb910000000	                           mov ecx, 0x10	      6232	cp-demangle.c	FUNCTION_96
0x4009952	    0x488d04c51600	                 lea rax, [rax*8 + 0x16]	      6232	cp-demangle.c	FUNCTION_96
0x400995a	      0xba00000000	                              mov edx, 0	      6232	cp-demangle.c	FUNCTION_96
0x400995f	          0x48f7f1	                                 div rcx	      6232	cp-demangle.c	FUNCTION_96
0x4009962	        0x48c1e004	                              shl rax, 4	      6232	cp-demangle.c	FUNCTION_96
0x4009966	          0x4829c4	                            sub rsp, rax	      6232	cp-demangle.c	FUNCTION_96
0x4009969	          0x4889e6	                            mov rsi, rsp	      6232	cp-demangle.c	FUNCTION_96
0x400996c	        0x486345ac	          movsxd rax, dword [rbp - 0x54]	      6233	cp-demangle.c	FUNCTION_96
0x4009970	    0x488d04c51600	                 lea rax, [rax*8 + 0x16]	      6233	cp-demangle.c	FUNCTION_96
0x4009978	      0xba00000000	                              mov edx, 0	      6233	cp-demangle.c	FUNCTION_96
0x400997d	          0x48f7f1	                                 div rcx	      6233	cp-demangle.c	FUNCTION_96
0x4009980	        0x48c1e004	                              shl rax, 4	      6233	cp-demangle.c	FUNCTION_96
0x4009984	          0x4829c4	                            sub rsp, rax	      6233	cp-demangle.c	FUNCTION_96
0x4009987	        0x48897590	             mov qword [rbp - 0x70], rsi	      6235	cp-demangle.c	FUNCTION_96
0x400998b	        0x488965a0	             mov qword [rbp - 0x60], rsp	      6236	cp-demangle.c	FUNCTION_96
0x400998f	      0xbe01000000	                              mov esi, 1	      6248	cp-demangle.c	FUNCTION_96	SWITCH_1
0x4009994	    0x488dbd70ffff	                   lea rdi, [rbp - 0x90]	      6248	cp-demangle.c	FUNCTION_96	SWITCH_1
0x400999b	      0xe800000000	                          call 0x40099a0	      6248	cp-demangle.c	FUNCTION_96	SWITCH_1
0x40099a0	          0x4889c6	                            mov rsi, rax	      6248	cp-demangle.c	FUNCTION_96	SWITCH_1
0x40099a3	      0xe99dfeffff	                           jmp 0x4009845	      6249	cp-demangle.c	FUNCTION_96	SWITCH_1
0x40099a8	      0xe800000000	                          call 0x40099ad	      6282	cp-demangle.c	FUNCTION_96
0x40099ad	        0x488d65d8	                   lea rsp, [rbp - 0x28]	      6282	cp-demangle.c	FUNCTION_96
0x40099b1	              0x5b	                                 pop rbx	      6282	cp-demangle.c	FUNCTION_96
0x40099b2	            0x415c	                                 pop r12	      6282	cp-demangle.c	FUNCTION_96
0x40099b4	            0x415d	                                 pop r13	      6282	cp-demangle.c	FUNCTION_96
0x40099b6	            0x415e	                                 pop r14	      6282	cp-demangle.c	FUNCTION_96
0x40099b8	            0x415f	                                 pop r15	      6282	cp-demangle.c	FUNCTION_96
0x40099ba	              0x5d	                                 pop rbp	      6282	cp-demangle.c	FUNCTION_96
0x40099bb	              0xc3	                                     ret	      6282	cp-demangle.c	FUNCTION_96
d_encoding	SWITCH,0:CALL,9:IF,7:WHILE,2:ELSE,4:DO,0:FOR,0:functions,0	447
0x400816a	            0x4156	                                push r14	      1304	cp-demangle.c	FUNCTION_18
0x400816c	            0x4155	                                push r13	      1304	cp-demangle.c	FUNCTION_18
0x400816e	            0x4154	                                push r12	      1304	cp-demangle.c	FUNCTION_18
0x4008170	              0x55	                                push rbp	      1304	cp-demangle.c	FUNCTION_18
0x4008171	              0x53	                                push rbx	      1304	cp-demangle.c	FUNCTION_18
0x4008172	          0x4889fd	                            mov rbp, rdi	      1304	cp-demangle.c	FUNCTION_18
0x4008175	        0x488b4718	            mov rax, qword [rdi + 0x18] 	      1305	cp-demangle.c	FUNCTION_18	CALL_1
0x4008179	           0xfb610	                   movzx edx, byte [rax]	      1305	cp-demangle.c	FUNCTION_18	CALL_1
0x400817c	          0x80fa47	                            cmp dl, 0x47	      1308	cp-demangle.c	FUNCTION_18	IF_1
0x400817f	            0x740c	                            je 0x400818d	      1308	cp-demangle.c	FUNCTION_18	IF_1
0x4008181	          0x4189f4	                           mov r12d, esi	      1308	cp-demangle.c	FUNCTION_18	IF_1
0x4008184	          0x80fa54	                            cmp dl, 0x54	      1308	cp-demangle.c	FUNCTION_18	IF_1
0x4008187	     0xf855e050000	                           jne 0x40086eb	      1308	cp-demangle.c	FUNCTION_18	IF_1
0x400818d	          0x8b4d48	            mov ecx, dword [rbp + 0x48] 	      2027	cp-demangle.c	FUNCTION_31
0x4008190	          0x8d5114	                   lea edx, [rcx + 0x14]	      2027	cp-demangle.c	FUNCTION_31
0x4008193	          0x895548	            mov dword [rbp + 0x48], edx 	      2027	cp-demangle.c	FUNCTION_31
0x4008196	           0xfb610	                   movzx edx, byte [rax]	      2028	cp-demangle.c	FUNCTION_31	IF_1	CALL_1
0x4008199	          0x80fa54	                            cmp dl, 0x54	      2028	cp-demangle.c	FUNCTION_31	IF_1	CALL_1
0x400819c	     0xf854a060000	                           jne 0x40087ec	      2028	cp-demangle.c	FUNCTION_31	IF_1	CALL_1
0x40081a2	        0x488d5001	                      lea rdx, [rax + 1]	      2028	cp-demangle.c	FUNCTION_31	IF_1	CALL_1
0x40081a6	        0x48895518	            mov qword [rbp + 0x18], rdx 	      2028	cp-demangle.c	FUNCTION_31	IF_1	CALL_1
0x40081aa	      0xbb00000000	                              mov ebx, 0	      2103	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1
0x40081af	        0x80780100	                   cmp byte [rax + 1], 0	      2030	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_2
0x40081b3	     0xf844c060000	                            je 0x4008805	      2030	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_2
0x40081b9	        0x488d5002	                      lea rdx, [rax + 2]	      2030	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_2
0x40081bd	        0x48895518	            mov qword [rbp + 0x18], rdx 	      2030	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_2
0x40081c1	         0xfb64001	               movzx eax, byte [rax + 1]	      2030	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_2
0x40081c5	          0x83e843	                           sub eax, 0x43	      2030	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_2
0x40081c8	            0x3c33	                            cmp al, 0x33	      2030	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_2
0x40081ca	     0xf87cf050000	                            ja 0x400879f	      2030	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_2
0x40081d0	           0xfb6c0	                           movzx eax, al	      2030	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_2
0x40081d3	    0xff24c5000000	                       jmp qword [rax*8]	      2030	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_2
0x40081da	          0x83c10f	                            add ecx, 0xf	      2033	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1
0x40081dd	          0x894d48	            mov dword [rbp + 0x48], ecx 	      2033	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1
0x40081e0	          0x4889ef	                            mov rdi, rbp	      2034	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_3
0x40081e3	      0xe800000000	                          call 0x40081e8	      2034	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_3
0x40081e8	      0xb900000000	                              mov ecx, 0	      2034	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_3
0x40081ed	          0x4889c2	                            mov rdx, rax	      2034	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_3
0x40081f0	      0xbe09000000	                              mov esi, 9	      2034	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_3
0x40081f5	          0x4889ef	                            mov rdi, rbp	      2034	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_3
0x40081f8	      0xe8937effff	                    call sym.d_make_comp	      2034	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_3
0x40081fd	          0x4889c3	                            mov rbx, rax	      2034	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_3
0x4008200	      0xe900060000	                           jmp 0x4008805	      2034	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_3
0x4008205	          0x83c10a	                            add ecx, 0xa	      2037	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1
0x4008208	          0x894d48	            mov dword [rbp + 0x48], ecx 	      2037	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1
0x400820b	          0x4889ef	                            mov rdi, rbp	      2038	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_4
0x400820e	      0xe800000000	                          call 0x4008213	      2038	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_4
0x4008213	      0xb900000000	                              mov ecx, 0	      2038	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_4
0x4008218	          0x4889c2	                            mov rdx, rax	      2038	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_4
0x400821b	      0xbe0a000000	                            mov esi, 0xa	      2038	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_4
0x4008220	          0x4889ef	                            mov rdi, rbp	      2038	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_4
0x4008223	      0xe8687effff	                    call sym.d_make_comp	      2038	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_4
0x4008228	          0x4889c3	                            mov rbx, rax	      2038	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_4
0x400822b	      0xe9d5050000	                           jmp 0x4008805	      2038	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_4
0x4008230	          0x4889ef	                            mov rdi, rbp	      2041	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_5
0x4008233	      0xe800000000	                          call 0x4008238	      2041	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_5
0x4008238	      0xb900000000	                              mov ecx, 0	      2041	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_5
0x400823d	          0x4889c2	                            mov rdx, rax	      2041	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_5
0x4008240	      0xbe0c000000	                            mov esi, 0xc	      2041	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_5
0x4008245	          0x4889ef	                            mov rdi, rbp	      2041	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_5
0x4008248	      0xe8437effff	                    call sym.d_make_comp	      2041	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_5
0x400824d	          0x4889c3	                            mov rbx, rax	      2041	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_5
0x4008250	      0xe9b0050000	                           jmp 0x4008805	      2041	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_5
0x4008255	          0x4889ef	                            mov rdi, rbp	      2044	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_6
0x4008258	      0xe800000000	                          call 0x400825d	      2044	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_6
0x400825d	      0xb900000000	                              mov ecx, 0	      2044	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_6
0x4008262	          0x4889c2	                            mov rdx, rax	      2044	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_6
0x4008265	      0xbe0d000000	                            mov esi, 0xd	      2044	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_6
0x400826a	          0x4889ef	                            mov rdi, rbp	      2044	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_6
0x400826d	      0xe81e7effff	                    call sym.d_make_comp	      2044	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_6
0x4008272	          0x4889c3	                            mov rbx, rax	      2044	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_6
0x4008275	      0xe98b050000	                           jmp 0x4008805	      2044	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_6
0x400827a	      0xbe68000000	                           mov esi, 0x68	      2048	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_2	CALL_7
0x400827f	          0x4889ef	                            mov rdi, rbp	      2048	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_2	CALL_7
0x4008282	      0xe84280ffff	                  call sym.d_call_offset	      2048	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_2	CALL_7
0x4008287	      0xbb00000000	                              mov ebx, 0	      2049	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_2
0x400828c	            0x85c0	                           test eax, eax	      2048	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_2	CALL_7
0x400828e	     0xf8471050000	                            je 0x4008805	      2048	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_2	CALL_7
0x4008294	      0xbe00000000	                              mov esi, 0	      2050	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_8
0x4008299	          0x4889ef	                            mov rdi, rbp	      2050	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_8
0x400829c	      0xe8c9feffff	                     call sym.d_encoding	      2050	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_8
0x40082a1	      0xb900000000	                              mov ecx, 0	      2050	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_8
0x40082a6	          0x4889c2	                            mov rdx, rax	      2050	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_8
0x40082a9	      0xbe0f000000	                            mov esi, 0xf	      2050	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_8
0x40082ae	          0x4889ef	                            mov rdi, rbp	      2050	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_8
0x40082b1	      0xe8da7dffff	                    call sym.d_make_comp	      2050	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_8
0x40082b6	          0x4889c3	                            mov rbx, rax	      2050	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_8
0x40082b9	      0xe947050000	                           jmp 0x4008805	      2050	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_8
0x40082be	      0xbe76000000	                           mov esi, 0x76	      2054	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_3	CALL_10
0x40082c3	          0x4889ef	                            mov rdi, rbp	      2054	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_3	CALL_10
0x40082c6	      0xe8fe7fffff	                  call sym.d_call_offset	      2054	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_3	CALL_10
0x40082cb	      0xbb00000000	                              mov ebx, 0	      2055	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_3
0x40082d0	            0x85c0	                           test eax, eax	      2054	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_3	CALL_10
0x40082d2	     0xf842d050000	                            je 0x4008805	      2054	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_3	CALL_10
0x40082d8	      0xbe00000000	                              mov esi, 0	      2056	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_11
0x40082dd	          0x4889ef	                            mov rdi, rbp	      2056	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_11
0x40082e0	      0xe885feffff	                     call sym.d_encoding	      2056	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_11
0x40082e5	      0xb900000000	                              mov ecx, 0	      2056	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_11
0x40082ea	          0x4889c2	                            mov rdx, rax	      2056	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_11
0x40082ed	      0xbe10000000	                           mov esi, 0x10	      2056	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_11
0x40082f2	          0x4889ef	                            mov rdi, rbp	      2056	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_11
0x40082f5	      0xe8967dffff	                    call sym.d_make_comp	      2056	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_11
0x40082fa	          0x4889c3	                            mov rbx, rax	      2056	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_11
0x40082fd	      0xe903050000	                           jmp 0x4008805	      2056	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_11
0x4008302	      0xbe00000000	                              mov esi, 0	      2060	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_4	CALL_13
0x4008307	          0x4889ef	                            mov rdi, rbp	      2060	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_4	CALL_13
0x400830a	      0xe8ba7fffff	                  call sym.d_call_offset	      2060	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_4	CALL_13
0x400830f	      0xbb00000000	                              mov ebx, 0	      2061	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_4
0x4008314	            0x85c0	                           test eax, eax	      2060	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_4	CALL_13
0x4008316	     0xf84e9040000	                            je 0x4008805	      2060	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_4	CALL_13
0x400831c	      0xbe00000000	                              mov esi, 0	      2062	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_5	CALL_14
0x4008321	          0x4889ef	                            mov rdi, rbp	      2062	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_5	CALL_14
0x4008324	      0xe8a07fffff	                  call sym.d_call_offset	      2062	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_5	CALL_14
0x4008329	            0x85c0	                           test eax, eax	      2062	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_5	CALL_14
0x400832b	     0xf84d4040000	                            je 0x4008805	      2062	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_5	CALL_14
0x4008331	      0xbe00000000	                              mov esi, 0	      2064	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_15
0x4008336	          0x4889ef	                            mov rdi, rbp	      2064	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_15
0x4008339	      0xe82cfeffff	                     call sym.d_encoding	      2064	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_15
0x400833e	      0xb900000000	                              mov ecx, 0	      2064	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_15
0x4008343	          0x4889c2	                            mov rdx, rax	      2064	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_15
0x4008346	      0xbe11000000	                           mov esi, 0x11	      2064	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_15
0x400834b	          0x4889ef	                            mov rdi, rbp	      2064	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_15
0x400834e	      0xe83d7dffff	                    call sym.d_make_comp	      2064	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_15
0x4008353	          0x4889c3	                            mov rbx, rax	      2064	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_15
0x4008356	      0xe9aa040000	                           jmp 0x4008805	      2064	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_15
0x400835b	          0x4889ef	                            mov rdi, rbp	      2073	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1
0x400835e	      0xe800000000	                          call 0x4008363	      2073	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1
0x4008363	          0x4989c4	                            mov r12, rax	      2073	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1
0x4008366	          0x4889ef	                            mov rdi, rbp	      2074	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_17
0x4008369	      0xe8657effff	                       call sym.d_number	      2074	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_17
0x400836e	            0x85c0	                           test eax, eax	      2075	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_6
0x4008370	     0xf8830040000	                            js 0x40087a6	      2075	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_6
0x4008376	        0x488b4518	            mov rax, qword [rbp + 0x18] 	      2077	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_7	CALL_18
0x400837a	      0xbb00000000	                              mov ebx, 0	      2078	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_7
0x400837f	          0x80385f	                    cmp byte [rax], 0x5f	      2077	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_7	CALL_18
0x4008382	     0xf857d040000	                           jne 0x4008805	      2077	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_7	CALL_18
0x4008388	        0x4883c001	                              add rax, 1	      2077	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_7	CALL_18
0x400838c	        0x48894518	            mov qword [rbp + 0x18], rax 	      2077	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_7	CALL_18
0x4008390	          0x4889ef	                            mov rdi, rbp	      2079	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1
0x4008393	      0xe800000000	                          call 0x4008398	      2079	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1
0x4008398	        0x83454805	               add dword [rbp + 0x48], 5	      2082	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1
0x400839c	          0x4c89e1	                            mov rcx, r12	      2083	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_19
0x400839f	          0x4889c2	                            mov rdx, rax	      2083	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_19
0x40083a2	      0xbe0b000000	                            mov esi, 0xb	      2083	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_19
0x40083a7	          0x4889ef	                            mov rdi, rbp	      2083	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_19
0x40083aa	      0xe8e17cffff	                    call sym.d_make_comp	      2083	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_19
0x40083af	          0x4889c3	                            mov rbx, rax	      2083	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_19
0x40083b2	      0xe94e040000	                           jmp 0x4008805	      2083	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_19
0x40083b7	          0x4889ef	                            mov rdi, rbp	      2088	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_20
0x40083ba	      0xe800000000	                          call 0x40083bf	      2088	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_20
0x40083bf	      0xb900000000	                              mov ecx, 0	      2088	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_20
0x40083c4	          0x4889c2	                            mov rdx, rax	      2088	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_20
0x40083c7	      0xbe0e000000	                            mov esi, 0xe	      2088	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_20
0x40083cc	          0x4889ef	                            mov rdi, rbp	      2088	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_20
0x40083cf	      0xe8bc7cffff	                    call sym.d_make_comp	      2088	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_20
0x40083d4	          0x4889c3	                            mov rbx, rax	      2088	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_20
0x40083d7	      0xe929040000	                           jmp 0x4008805	      2088	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_20
0x40083dc	          0x4889ef	                            mov rdi, rbp	      2091	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_21
0x40083df	      0xe800000000	                          call 0x40083e4	      2091	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_21
0x40083e4	      0xb900000000	                              mov ecx, 0	      2091	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_21
0x40083e9	          0x4889c2	                            mov rdx, rax	      2091	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_21
0x40083ec	      0xbe12000000	                           mov esi, 0x12	      2091	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_21
0x40083f1	          0x4889ef	                            mov rdi, rbp	      2091	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_21
0x40083f4	      0xe8977cffff	                    call sym.d_make_comp	      2091	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_21
0x40083f9	          0x4889c3	                            mov rbx, rax	      2091	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_21
0x40083fc	      0xe904040000	                           jmp 0x4008805	      2091	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_21
0x4008401	          0x4889ef	                            mov rdi, rbp	      2095	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_22
0x4008404	      0xe8a2f8ffff	                         call sym.d_name	      2095	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_22
0x4008409	      0xb900000000	                              mov ecx, 0	      2095	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_22
0x400840e	          0x4889c2	                            mov rdx, rax	      2095	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_22
0x4008411	      0xbe14000000	                           mov esi, 0x14	      2095	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_22
0x4008416	          0x4889ef	                            mov rdi, rbp	      2095	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_22
0x4008419	      0xe8727cffff	                    call sym.d_make_comp	      2095	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_22
0x400841e	          0x4889c3	                            mov rbx, rax	      2095	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_22
0x4008421	      0xe9df030000	                           jmp 0x4008805	      2095	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_22
0x4008426	          0x4889ef	                            mov rdi, rbp	      2099	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_24
0x4008429	      0xe87df8ffff	                         call sym.d_name	      2099	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_24
0x400842e	      0xb900000000	                              mov ecx, 0	      2099	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_24
0x4008433	          0x4889c2	                            mov rdx, rax	      2099	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_24
0x4008436	      0xbe15000000	                           mov esi, 0x15	      2099	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_24
0x400843b	          0x4889ef	                            mov rdi, rbp	      2099	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_24
0x400843e	      0xe84d7cffff	                    call sym.d_make_comp	      2099	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_24
0x4008443	          0x4889c3	                            mov rbx, rax	      2099	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_24
0x4008446	      0xe9ba030000	                           jmp 0x4008805	      2099	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	CALL_24
0x400844b	        0x488d5001	                      lea rdx, [rax + 1]	      2106	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	CALL_26
0x400844f	        0x48895518	            mov qword [rbp + 0x18], rdx 	      2106	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	CALL_26
0x4008453	      0xbb00000000	                              mov ebx, 0	      2146	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2
0x4008458	        0x80780100	                   cmp byte [rax + 1], 0	      2108	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_27
0x400845c	     0xf84a3030000	                            je 0x4008805	      2108	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_27
0x4008462	        0x488d5002	                      lea rdx, [rax + 2]	      2108	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_27
0x4008466	        0x48895518	            mov qword [rbp + 0x18], rdx 	      2108	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_27
0x400846a	         0xfb64801	               movzx ecx, byte [rax + 1]	      2108	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_27
0x400846e	          0x8d51bf	                   lea edx, [rcx - 0x41]	      2108	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_27
0x4008471	          0x80fa31	                            cmp dl, 0x31	      2108	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_27
0x4008474	     0xf8733030000	                            ja 0x40087ad	      2108	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_27
0x400847a	           0xfb6d2	                           movzx edx, dl	      2108	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_27
0x400847d	    0xff24d5000000	                       jmp qword [rdx*8]	      2108	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_27
0x4008484	          0x4889ef	                            mov rdi, rbp	      2111	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_28
0x4008487	      0xe81ff8ffff	                         call sym.d_name	      2111	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_28
0x400848c	      0xb900000000	                              mov ecx, 0	      2111	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_28
0x4008491	          0x4889c2	                            mov rdx, rax	      2111	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_28
0x4008494	      0xbe13000000	                           mov esi, 0x13	      2111	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_28
0x4008499	          0x4889ef	                            mov rdi, rbp	      2111	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_28
0x400849c	      0xe8ef7bffff	                    call sym.d_make_comp	      2111	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_28
0x40084a1	          0x4889c3	                            mov rbx, rax	      2111	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_28
0x40084a4	      0xe95c030000	                           jmp 0x4008805	      2111	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_28
0x40084a9	          0x4889ef	                            mov rdi, rbp	      2116	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_30
0x40084ac	      0xe8faf7ffff	                         call sym.d_name	      2116	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_30
0x40084b1	          0x4889c3	                            mov rbx, rax	      2116	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_30
0x40084b4	          0x4889ef	                            mov rdi, rbp	      2117	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_31
0x40084b7	      0xe8e17dffff	             call sym.d_number_component	      2117	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_31
0x40084bc	          0x4889c1	                            mov rcx, rax	      2117	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_31
0x40084bf	          0x4889da	                            mov rdx, rbx	      2117	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_31
0x40084c2	      0xbe16000000	                           mov esi, 0x16	      2117	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_31
0x40084c7	          0x4889ef	                            mov rdi, rbp	      2117	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_31
0x40084ca	      0xe8c17bffff	                    call sym.d_make_comp	      2117	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_31
0x40084cf	          0x4889c3	                            mov rbx, rax	      2117	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_31
0x40084d2	      0xe92e030000	                           jmp 0x4008805	      2117	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_31
0x40084d7	      0xbe00000000	                              mov esi, 0	      2122	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_33
0x40084dc	          0x4889ef	                            mov rdi, rbp	      2122	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_33
0x40084df	      0xe886fcffff	                     call sym.d_encoding	      2122	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_33
0x40084e4	      0xb900000000	                              mov ecx, 0	      2122	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_33
0x40084e9	          0x4889c2	                            mov rdx, rax	      2122	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_33
0x40084ec	      0xbe17000000	                           mov esi, 0x17	      2122	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_33
0x40084f1	          0x4889ef	                            mov rdi, rbp	      2122	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_33
0x40084f4	      0xe8977bffff	                    call sym.d_make_comp	      2122	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_33
0x40084f9	          0x4889c3	                            mov rbx, rax	      2122	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_33
0x40084fc	      0xe904030000	                           jmp 0x4008805	      2122	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	CALL_33
0x4008501	        0x80780200	                   cmp byte [rax + 2], 0	      2126	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_35
0x4008505	            0x7438	                            je 0x400853f	      2126	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_35
0x4008507	        0x488d5003	                      lea rdx, [rax + 3]	      2126	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_35
0x400850b	        0x48895518	            mov qword [rbp + 0x18], rdx 	      2126	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_35
0x400850f	        0x8078026e	                cmp byte [rax + 2], 0x6e	      2126	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_35
0x4008513	            0x752a	                           jne 0x400853f	      2126	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_35
0x4008515	      0xbe00000000	                              mov esi, 0	      2129	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_36
0x400851a	          0x4889ef	                            mov rdi, rbp	      2129	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_36
0x400851d	      0xe848fcffff	                     call sym.d_encoding	      2129	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_36
0x4008522	      0xb900000000	                              mov ecx, 0	      2129	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_36
0x4008527	          0x4889c2	                            mov rdx, rax	      2129	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_36
0x400852a	      0xbe49000000	                           mov esi, 0x49	      2129	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_36
0x400852f	          0x4889ef	                            mov rdi, rbp	      2129	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_36
0x4008532	      0xe8597bffff	                    call sym.d_make_comp	      2129	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_36
0x4008537	          0x4889c3	                            mov rbx, rax	      2129	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_36
0x400853a	      0xe9c6020000	                           jmp 0x4008805	      2129	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_36
0x400853f	      0xbe00000000	                              mov esi, 0	      2138	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_38
0x4008544	          0x4889ef	                            mov rdi, rbp	      2138	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_38
0x4008547	      0xe81efcffff	                     call sym.d_encoding	      2138	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_38
0x400854c	      0xb900000000	                              mov ecx, 0	      2138	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_38
0x4008551	          0x4889c2	                            mov rdx, rax	      2138	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_38
0x4008554	      0xbe48000000	                           mov esi, 0x48	      2138	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_38
0x4008559	          0x4889ef	                            mov rdi, rbp	      2138	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_38
0x400855c	      0xe82f7bffff	                    call sym.d_make_comp	      2138	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_38
0x4008561	          0x4889c3	                            mov rbx, rax	      2138	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_38
0x4008564	      0xe99c020000	                           jmp 0x4008805	      2138	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2	SWITCH_3	CALL_38
0x4008569	          0x4889ef	                            mov rdi, rbp	      1932	cp-demangle.c	FUNCTION_30	CALL_1
0x400856c	      0xe8627cffff	                       call sym.d_number	      1932	cp-demangle.c	FUNCTION_30	CALL_1
0x4008571	          0x83f801	                              cmp eax, 1	      1933	cp-demangle.c	FUNCTION_30	IF_1
0x4008574	     0xf8e3a020000	                           jle 0x40087b4	      1933	cp-demangle.c	FUNCTION_30	IF_1
0x400857a	        0x488b5518	            mov rdx, qword [rbp + 0x18] 	      1937	cp-demangle.c	FUNCTION_30	IF_2	CALL_2
0x400857e	          0x803a00	                       cmp byte [rdx], 0	      1937	cp-demangle.c	FUNCTION_30	IF_2	CALL_2
0x4008581	     0xf8434020000	                            je 0x40087bb	      1937	cp-demangle.c	FUNCTION_30	IF_2	CALL_2
0x4008587	        0x4c8d6a01	                      lea r13, [rdx + 1]	      1937	cp-demangle.c	FUNCTION_30	IF_2	CALL_2
0x400858b	        0x4c896d18	            mov qword [rbp + 0x18], r13 	      1937	cp-demangle.c	FUNCTION_30	IF_2	CALL_2
0x400858f	      0xbb00000000	                              mov ebx, 0	      1938	cp-demangle.c	FUNCTION_30	IF_2
0x4008594	          0x803a5f	                    cmp byte [rdx], 0x5f	      1937	cp-demangle.c	FUNCTION_30	IF_2	CALL_2
0x4008597	     0xf8568020000	                           jne 0x4008805	      1937	cp-demangle.c	FUNCTION_30	IF_2	CALL_2
0x400859d	        0x448d60ff	                     lea r12d, [rax - 1]	      1939	cp-demangle.c	FUNCTION_30
0x40085a1	          0x4585e4	                         test r12d, r12d	      1944	cp-demangle.c	FUNCTION_30	WHILE_1
0x40085a4	     0xf8e1e010000	                           jle 0x40086c8	      1944	cp-demangle.c	FUNCTION_30	WHILE_1
0x40085aa	         0xfb64201	               movzx eax, byte [rdx + 1]	      1946	cp-demangle.c	FUNCTION_30	WHILE_1
0x40085ae	            0x84c0	                             test al, al	      1947	cp-demangle.c	FUNCTION_30	WHILE_1	IF_3
0x40085b0	     0xf840c020000	                            je 0x40087c2	      1947	cp-demangle.c	FUNCTION_30	WHILE_1	IF_3
0x40085b6	    0x41be00000000	                             mov r14d, 0	      1947	cp-demangle.c	FUNCTION_30	WHILE_1	IF_3
0x40085bc	            0xeb0d	                           jmp 0x40085cb	      1947	cp-demangle.c	FUNCTION_30	WHILE_1	IF_3
0x40085be	      0x410fb64500	                   movzx eax, byte [r13]	      1946	cp-demangle.c	FUNCTION_30	WHILE_1
0x40085c3	            0x84c0	                             test al, al	      1947	cp-demangle.c	FUNCTION_30	WHILE_1	IF_3
0x40085c5	     0xf84fe010000	                            je 0x40087c9	      1947	cp-demangle.c	FUNCTION_30	WHILE_1	IF_3
0x40085cb	            0x3c24	                            cmp al, 0x24	      1951	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4
0x40085cd	            0x7420	                            je 0x40085ef	      1951	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4
0x40085cf	          0x4585e4	                         test r12d, r12d	      1979	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	WHILE_2
0x40085d2	     0xf8e8f000000	                           jle 0x4008667	      1979	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	WHILE_2
0x40085d8	      0x410fb64500	                   movzx eax, byte [r13]	      1979	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	WHILE_2
0x40085dd	            0x3c24	                            cmp al, 0x24	      1979	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	WHILE_2
0x40085df	            0x7404	                            je 0x40085e5	      1979	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	WHILE_2
0x40085e1	            0x84c0	                             test al, al	      1979	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	WHILE_2
0x40085e3	            0x755f	                           jne 0x4008644	      1979	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	WHILE_2
0x40085e5	      0xbb00000000	                              mov ebx, 0	      1979	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	WHILE_2
0x40085ea	      0xe982000000	                           jmp 0x4008671	      1979	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	WHILE_2
0x40085ef	      0x410fb65501	               movzx edx, byte [r13 + 1]	      1954	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x40085f4	          0x80fa53	                            cmp dl, 0x53	      1954	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x40085f7	            0x7417	                            je 0x4008610	      1954	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x40085f9	          0x80fa5f	                            cmp dl, 0x5f	      1954	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x40085fc	            0x740b	                            je 0x4008609	      1954	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x40085fe	          0x80fa24	                            cmp dl, 0x24	      1954	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4008601	     0xf85c9010000	                           jne 0x40087d0	      1954	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4008607	            0xeb0c	                           jmp 0x4008615	      1954	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4008609	      0xb82e000000	                           mov eax, 0x2e	      1960	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x400860e	            0xeb05	                           jmp 0x4008615	      1960	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4008610	      0xb82f000000	                           mov eax, 0x2f	      1957	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4008615	           0xfbed8	                           movsx ebx, al	      1968	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	CALL_4
0x4008618	          0x4889ef	                            mov rdi, rbp	      1914	cp-demangle.c	FUNCTION_29	CALL_1
0x400861b	      0xe8487affff	                   call sym.d_make_empty	      1914	cp-demangle.c	FUNCTION_29	CALL_1
0x4008620	          0x4885c0	                           test rax, rax	      1915	cp-demangle.c	FUNCTION_29	IF_1
0x4008623	     0xf84d2010000	                            je 0x40087fb	      1915	cp-demangle.c	FUNCTION_29	IF_1
0x4008629	    0xc70040000000	                   mov dword [rax], 0x40	      1917	cp-demangle.c	FUNCTION_29	IF_1
0x400862f	          0x895808	                mov dword [rax + 8], ebx	      1918	cp-demangle.c	FUNCTION_29	IF_1
0x4008632	        0x488b4d18	            mov rcx, qword [rbp + 0x18] 	      1969	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	CALL_5
0x4008636	        0x4c8d6902	                      lea r13, [rcx + 2]	      1969	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	CALL_5
0x400863a	        0x4c896d18	            mov qword [rbp + 0x18], r13 	      1969	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	CALL_5
0x400863e	        0x4183ec02	                             sub r12d, 2	      1971	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4
0x4008642	            0xeb51	                           jmp 0x4008695	      1971	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4
0x4008644	        0x498d4501	                      lea rax, [r13 + 1]	      1971	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4
0x4008648	      0xbb00000000	                              mov ebx, 0	      1979	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	WHILE_2
0x400864d	          0x83c301	                              add ebx, 1	      1980	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	WHILE_2
0x4008650	          0x4439e3	                           cmp ebx, r12d	      1979	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	WHILE_2
0x4008653	            0x7419	                            je 0x400866e	      1979	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	WHILE_2
0x4008655	           0xfb610	                   movzx edx, byte [rax]	      1979	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	WHILE_2
0x4008658	        0x4883c001	                              add rax, 1	      1979	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	WHILE_2
0x400865c	            0x84d2	                             test dl, dl	      1979	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	WHILE_2
0x400865e	            0x7411	                            je 0x4008671	      1979	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	WHILE_2
0x4008660	          0x80fa24	                            cmp dl, 0x24	      1979	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	WHILE_2
0x4008663	            0x75e8	                           jne 0x400864d	      1979	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	WHILE_2
0x4008665	            0xeb0a	                           jmp 0x4008671	      1979	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	WHILE_2
0x4008667	      0xbb00000000	                              mov ebx, 0	      1979	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	WHILE_2
0x400866c	            0xeb03	                           jmp 0x4008671	      1979	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	WHILE_2
0x400866e	          0x4489e3	                           mov ebx, r12d	      1980	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	WHILE_2
0x4008671	            0x89da	                            mov edx, ebx	      1982	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	CALL_7
0x4008673	          0x4c89ee	                            mov rsi, r13	      1982	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	CALL_7
0x4008676	          0x4889ef	                            mov rdi, rbp	      1982	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	CALL_7
0x4008679	      0xe8bcd9ffff	                    call sym.d_make_name	      1982	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	CALL_7
0x400867e	          0x4c63eb	                         movsxd r13, ebx	      1983	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	CALL_8
0x4008681	        0x4c036d18	             add r13, qword [rbp + 0x18]	      1983	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	CALL_8
0x4008685	        0x4c896d18	            mov qword [rbp + 0x18], r13 	      1983	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	CALL_8
0x4008689	          0x4129dc	                           sub r12d, ebx	      1985	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1
0x400868c	          0x4885c0	                           test rax, rax	      1987	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	IF_6
0x400868f	     0xf8442010000	                            je 0x40087d7	      1987	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	IF_6
0x4008695	          0x4d85f6	                           test r14, r14	      1991	cp-demangle.c	FUNCTION_30	WHILE_1	IF_7
0x4008698	            0x7420	                            je 0x40086ba	      1991	cp-demangle.c	FUNCTION_30	WHILE_1	IF_7
0x400869a	          0x4889c1	                            mov rcx, rax	      1995	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_2	CALL_10
0x400869d	          0x4c89f2	                            mov rdx, r14	      1995	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_2	CALL_10
0x40086a0	      0xbe3f000000	                           mov esi, 0x3f	      1995	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_2	CALL_10
0x40086a5	          0x4889ef	                            mov rdi, rbp	      1995	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_2	CALL_10
0x40086a8	      0xe8e379ffff	                    call sym.d_make_comp	      1995	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_2	CALL_10
0x40086ad	          0x4989c6	                            mov r14, rax	      1995	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_2	CALL_10
0x40086b0	          0x4885c0	                           test rax, rax	      1996	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_2	IF_8
0x40086b3	            0x7508	                           jne 0x40086bd	      1996	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_2	IF_8
0x40086b5	      0xe924010000	                           jmp 0x40087de	      1996	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_2	IF_8
0x40086ba	          0x4989c6	                            mov r14, rax	      1992	cp-demangle.c	FUNCTION_30	WHILE_1	IF_7
0x40086bd	          0x4585e4	                         test r12d, r12d	      1944	cp-demangle.c	FUNCTION_30	WHILE_1
0x40086c0	     0xf8ff8feffff	                            jg 0x40085be	      1944	cp-demangle.c	FUNCTION_30	WHILE_1
0x40086c6	            0xeb06	                           jmp 0x40086ce	      1944	cp-demangle.c	FUNCTION_30	WHILE_1
0x40086c8	    0x41be00000000	                             mov r14d, 0	      1926	cp-demangle.c	FUNCTION_30
0x40086ce	      0xb900000000	                              mov ecx, 0	      2001	cp-demangle.c	FUNCTION_30	CALL_11
0x40086d3	          0x4c89f2	                            mov rdx, r14	      2001	cp-demangle.c	FUNCTION_30	CALL_11
0x40086d6	      0xbe3e000000	                           mov esi, 0x3e	      2001	cp-demangle.c	FUNCTION_30	CALL_11
0x40086db	          0x4889ef	                            mov rdi, rbp	      2001	cp-demangle.c	FUNCTION_30	CALL_11
0x40086de	      0xe8ad79ffff	                    call sym.d_make_comp	      2001	cp-demangle.c	FUNCTION_30	CALL_11
0x40086e3	          0x4889c3	                            mov rbx, rax	      2001	cp-demangle.c	FUNCTION_30	CALL_11
0x40086e6	      0xe91a010000	                           jmp 0x4008805	      2001	cp-demangle.c	FUNCTION_30	CALL_11
0x40086eb	      0xe8bbf5ffff	                         call sym.d_name	      1312	cp-demangle.c	FUNCTION_18	ELSE_1	CALL_3
0x40086f0	          0x4889c3	                            mov rbx, rax	      1312	cp-demangle.c	FUNCTION_18	ELSE_1	CALL_3
0x40086f3	          0x4885c0	                           test rax, rax	      1314	cp-demangle.c	FUNCTION_18	ELSE_1	IF_2
0x40086f6	     0xf8409010000	                            je 0x4008805	      1314	cp-demangle.c	FUNCTION_18	ELSE_1	IF_2
0x40086fc	          0x4585e4	                         test r12d, r12d	      1316	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_2	IF_3
0x40086ff	            0x7441	                            je 0x4008742	      1316	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_2	IF_3
0x4008701	        0xf6451001	               test byte [rbp + 0x10], 1	      1316	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_2	IF_3
0x4008705	            0x7406	                            je 0x400870d	      1316	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_2	IF_3
0x4008707	            0xeb39	                           jmp 0x4008742	      1316	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_2	IF_3
0x4008709	        0x488b5b08	                mov rbx, qword [rbx + 8]	      1322	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_2	IF_3	WHILE_1
0x400870d	            0x8b2b	                    mov ebp, dword [rbx]	      1321	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_2	IF_3	WHILE_1	CALL_4
0x400870f	            0x89ef	                            mov edi, ebp	      1321	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_2	IF_3	WHILE_1	CALL_4
0x4008711	      0xe82a79ffff	       call sym.is_fnqual_component_type	      1321	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_2	IF_3	WHILE_1	CALL_4
0x4008716	            0x85c0	                           test eax, eax	      1321	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_2	IF_3	WHILE_1	CALL_4
0x4008718	            0x75ef	                           jne 0x4008709	      1321	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_2	IF_3	WHILE_1	CALL_4
0x400871a	          0x83fd02	                              cmp ebp, 2	      1328	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_2	IF_3	IF_4
0x400871d	     0xf85e2000000	                           jne 0x4008805	      1328	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_2	IF_3	IF_4
0x4008723	            0xeb08	                           jmp 0x400872d	      1328	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_2	IF_3	IF_4
0x4008725	        0x488b4508	                mov rax, qword [rbp + 8]	      1330	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_2	IF_3	IF_4	WHILE_2
0x4008729	        0x48894310	             mov qword [rbx + 0x10], rax	      1330	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_2	IF_3	IF_4	WHILE_2
0x400872d	        0x488b6b10	            mov rbp, qword [rbx + 0x10] 	      1329	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_2	IF_3	IF_4	WHILE_2	CALL_5
0x4008731	          0x8b7d00	                    mov edi, dword [rbp]	      1329	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_2	IF_3	IF_4	WHILE_2	CALL_5
0x4008734	      0xe80779ffff	       call sym.is_fnqual_component_type	      1329	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_2	IF_3	IF_4	WHILE_2	CALL_5
0x4008739	            0x85c0	                           test eax, eax	      1329	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_2	IF_3	IF_4	WHILE_2	CALL_5
0x400873b	            0x75e8	                           jne 0x4008725	      1329	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_2	IF_3	IF_4	WHILE_2	CALL_5
0x400873d	      0xe9c3000000	                           jmp 0x4008805	      1329	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_2	IF_3	IF_4	WHILE_2	CALL_5
0x4008742	        0x488b4518	            mov rax, qword [rbp + 0x18] 	      1334	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	CALL_6
0x4008746	           0xfb600	                   movzx eax, byte [rax]	      1334	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	CALL_6
0x4008749	            0x84c0	                             test al, al	      1335	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	IF_5
0x400874b	     0xf84b4000000	                            je 0x4008805	      1335	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	IF_5
0x4008751	            0x3c45	                            cmp al, 0x45	      1335	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	IF_5
0x4008753	     0xf84ac000000	                            je 0x4008805	      1335	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	IF_5
0x4008759	          0x4889df	                            mov rdi, rbx	      1339	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	IF_5	CALL_8
0x400875c	      0xe8037affff	                call sym.has_return_type	      1339	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	IF_5	CALL_8
0x4008761	            0x89c6	                            mov esi, eax	      1339	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	IF_5	CALL_8
0x4008763	          0x4889ef	                            mov rdi, rbp	      1339	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	IF_5	CALL_8
0x4008766	      0xe81aebffff	           call sym.d_bare_function_type	      1339	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	IF_5	CALL_8
0x400876b	          0x4885c0	                           test rax, rax	      1340	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	IF_5	IF_6
0x400876e	            0x7475	                            je 0x40087e5	      1340	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	IF_5	IF_6
0x4008770	          0x4585e4	                         test r12d, r12d	      1346	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	IF_5	IF_6	IF_7
0x4008773	            0x7512	                           jne 0x4008787	      1346	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	IF_5	IF_6	IF_7
0x4008775	          0x833b02	                      cmp dword [rbx], 2	      1346	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	IF_5	IF_6	IF_7
0x4008778	            0x750d	                           jne 0x4008787	      1346	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	IF_5	IF_6	IF_7
0x400877a	          0x833829	                   cmp dword [rax], 0x29	      1347	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	IF_5	IF_6	IF_7
0x400877d	            0x7508	                           jne 0x4008787	      1347	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	IF_5	IF_6	IF_7
0x400877f	    0x48c740080000	                  mov qword [rax + 8], 0	      1348	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	IF_5	IF_6	IF_7
0x4008787	          0x4889c1	                            mov rcx, rax	      1350	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	IF_5	IF_6	CALL_9
0x400878a	          0x4889da	                            mov rdx, rbx	      1350	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	IF_5	IF_6	CALL_9
0x400878d	      0xbe03000000	                              mov esi, 3	      1350	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	IF_5	IF_6	CALL_9
0x4008792	          0x4889ef	                            mov rdi, rbp	      1350	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	IF_5	IF_6	CALL_9
0x4008795	      0xe8f678ffff	                    call sym.d_make_comp	      1350	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	IF_5	IF_6	CALL_9
0x400879a	          0x4889c3	                            mov rbx, rax	      1350	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	IF_5	IF_6	CALL_9
0x400879d	            0xeb66	                           jmp 0x4008805	      1350	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	IF_5	IF_6	CALL_9
0x400879f	      0xbb00000000	                              mov ebx, 0	      2103	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1
0x40087a4	            0xeb5f	                           jmp 0x4008805	      2103	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1
0x40087a6	      0xbb00000000	                              mov ebx, 0	      2076	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_6
0x40087ab	            0xeb58	                           jmp 0x4008805	      2076	cp-demangle.c	FUNCTION_31	IF_1	SWITCH_1	IF_6
0x40087ad	      0xbb00000000	                              mov ebx, 0	      2146	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2
0x40087b2	            0xeb51	                           jmp 0x4008805	      2146	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	SWITCH_2
0x40087b4	      0xbb00000000	                              mov ebx, 0	      1934	cp-demangle.c	FUNCTION_30	IF_1
0x40087b9	            0xeb4a	                           jmp 0x4008805	      1934	cp-demangle.c	FUNCTION_30	IF_1
0x40087bb	      0xbb00000000	                              mov ebx, 0	      1938	cp-demangle.c	FUNCTION_30	IF_2
0x40087c0	            0xeb43	                           jmp 0x4008805	      1938	cp-demangle.c	FUNCTION_30	IF_2
0x40087c2	      0xbb00000000	                              mov ebx, 0	      1948	cp-demangle.c	FUNCTION_30	WHILE_1	IF_3
0x40087c7	            0xeb3c	                           jmp 0x4008805	      1948	cp-demangle.c	FUNCTION_30	WHILE_1	IF_3
0x40087c9	      0xbb00000000	                              mov ebx, 0	      1948	cp-demangle.c	FUNCTION_30	WHILE_1	IF_3
0x40087ce	            0xeb35	                           jmp 0x4008805	      1948	cp-demangle.c	FUNCTION_30	WHILE_1	IF_3
0x40087d0	      0xbb00000000	                              mov ebx, 0	      1966	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x40087d5	            0xeb2e	                           jmp 0x4008805	      1966	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x40087d7	      0xbb00000000	                              mov ebx, 0	      1988	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	IF_6
0x40087dc	            0xeb27	                           jmp 0x4008805	      1988	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_1	IF_6
0x40087de	      0xbb00000000	                              mov ebx, 0	      1997	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_2	IF_8
0x40087e3	            0xeb20	                           jmp 0x4008805	      1997	cp-demangle.c	FUNCTION_30	WHILE_1	ELSE_2	IF_8
0x40087e5	      0xbb00000000	                              mov ebx, 0	      1354	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	IF_5	ELSE_4
0x40087ea	            0xeb19	                           jmp 0x4008805	      1354	cp-demangle.c	FUNCTION_18	ELSE_1	ELSE_3	IF_5	ELSE_4
0x40087ec	      0xbb00000000	                              mov ebx, 0	      2150	cp-demangle.c	FUNCTION_31	ELSE_2
0x40087f1	          0x80fa47	                            cmp dl, 0x47	      2106	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	CALL_26
0x40087f4	            0x750f	                           jne 0x4008805	      2106	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	CALL_26
0x40087f6	      0xe950fcffff	                           jmp 0x400844b	      2106	cp-demangle.c	FUNCTION_31	ELSE_1	IF_8	CALL_26
0x40087fb	      0x4883451802	               add qword [rbp + 0x18], 2	      1969	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	CALL_5
0x4008800	      0xbb00000000	                              mov ebx, 0	      1974	cp-demangle.c	FUNCTION_30	WHILE_1	IF_4	IF_5
0x4008805	          0x4889d8	                            mov rax, rbx	      1360	cp-demangle.c	FUNCTION_18	ELSE_4
0x4008808	              0x5b	                                 pop rbx	      1360	cp-demangle.c	FUNCTION_18	ELSE_4
0x4008809	              0x5d	                                 pop rbp	      1360	cp-demangle.c	FUNCTION_18	ELSE_4
0x400880a	            0x415c	                                 pop r12	      1360	cp-demangle.c	FUNCTION_18	ELSE_4
0x400880c	            0x415d	                                 pop r13	      1360	cp-demangle.c	FUNCTION_18	ELSE_4
0x400880e	            0x415e	                                 pop r14	      1360	cp-demangle.c	FUNCTION_18	ELSE_4
0x4008810	              0xc3	                                     ret	      1360	cp-demangle.c	FUNCTION_18	ELSE_4
d_name	SWITCH,1:CALL,19:IF,6:WHILE,0:ELSE,2:DO,0:FOR,0:functions,0	329
0x4007cab	            0x4157	                                push r15	      1401	cp-demangle.c	FUNCTION_20
0x4007cad	            0x4156	                                push r14	      1401	cp-demangle.c	FUNCTION_20
0x4007caf	            0x4155	                                push r13	      1401	cp-demangle.c	FUNCTION_20
0x4007cb1	            0x4154	                                push r12	      1401	cp-demangle.c	FUNCTION_20
0x4007cb3	              0x55	                                push rbp	      1401	cp-demangle.c	FUNCTION_20
0x4007cb4	              0x53	                                push rbx	      1401	cp-demangle.c	FUNCTION_20
0x4007cb5	        0x4883ec18	                           sub rsp, 0x18	      1401	cp-demangle.c	FUNCTION_20
0x4007cb9	          0x4889fd	                            mov rbp, rdi	      1401	cp-demangle.c	FUNCTION_20
0x4007cbc	    0x64488b042528	                mov rax, qword fs:[0x28]	      1401	cp-demangle.c	FUNCTION_20
0x4007cc5	      0x4889442408	                mov qword [rsp + 8], rax	      1401	cp-demangle.c	FUNCTION_20
0x4007cca	            0x31c0	                            xor eax, eax	      1401	cp-demangle.c	FUNCTION_20
0x4007ccc	        0x488b5718	            mov rdx, qword [rdi + 0x18] 	      1402	cp-demangle.c	FUNCTION_20	CALL_1
0x4007cd0	           0xfb602	                   movzx eax, byte [rdx]	      1405	cp-demangle.c	FUNCTION_20	SWITCH_1
0x4007cd3	            0x3c53	                            cmp al, 0x53	      1405	cp-demangle.c	FUNCTION_20	SWITCH_1
0x4007cd5	     0xf84fe020000	                            je 0x4007fd9	      1405	cp-demangle.c	FUNCTION_20	SWITCH_1
0x4007cdb	            0x3c53	                            cmp al, 0x53	      1405	cp-demangle.c	FUNCTION_20	SWITCH_1
0x4007cdd	            0x7f09	                            jg 0x4007ce8	      1405	cp-demangle.c	FUNCTION_20	SWITCH_1
0x4007cdf	            0x3c4e	                            cmp al, 0x4e	      1405	cp-demangle.c	FUNCTION_20	SWITCH_1
0x4007ce1	            0x741a	                            je 0x4007cfd	      1405	cp-demangle.c	FUNCTION_20	SWITCH_1
0x4007ce3	      0xe988030000	                           jmp 0x4008070	      1405	cp-demangle.c	FUNCTION_20	SWITCH_1
0x4007ce8	            0x3c55	                            cmp al, 0x55	      1405	cp-demangle.c	FUNCTION_20	SWITCH_1
0x4007cea	     0xf84df020000	                            je 0x4007fcf	      1405	cp-demangle.c	FUNCTION_20	SWITCH_1
0x4007cf0	            0x3c5a	                            cmp al, 0x5a	      1405	cp-demangle.c	FUNCTION_20	SWITCH_1
0x4007cf2	     0xf84d0010000	                            je 0x4007ec8	      1405	cp-demangle.c	FUNCTION_20	SWITCH_1
0x4007cf8	      0xe973030000	                           jmp 0x4008070	      1405	cp-demangle.c	FUNCTION_20	SWITCH_1
0x4007cfd	        0x4883c201	                              add rdx, 1	      1487	cp-demangle.c	FUNCTION_21	IF_1	CALL_1
0x4007d01	        0x48895718	             mov qword [rdi + 0x18], rdx	      1487	cp-demangle.c	FUNCTION_21	IF_1	CALL_1
0x4007d05	      0xba01000000	                              mov edx, 1	      1490	cp-demangle.c	FUNCTION_21	CALL_2
0x4007d0a	          0x4889e6	                            mov rsi, rsp	      1490	cp-demangle.c	FUNCTION_21	CALL_2
0x4007d0d	      0xe876fdffff	                call sym.d_cv_qualifiers	      1490	cp-demangle.c	FUNCTION_21	CALL_2
0x4007d12	          0x4989c7	                            mov r15, rax	      1490	cp-demangle.c	FUNCTION_21	CALL_2
0x4007d15	          0x4885c0	                           test rax, rax	      1491	cp-demangle.c	FUNCTION_21	IF_2
0x4007d18	     0xf8496010000	                            je 0x4007eb4	      1491	cp-demangle.c	FUNCTION_21	IF_2
0x4007d1e	      0xbe00000000	                              mov esi, 0	      1496	cp-demangle.c	FUNCTION_21	CALL_3
0x4007d23	          0x4889ef	                            mov rdi, rbp	      1496	cp-demangle.c	FUNCTION_21	CALL_3
0x4007d26	      0xe86b86ffff	                call sym.d_ref_qualifier	      1496	cp-demangle.c	FUNCTION_21	CALL_3
0x4007d2b	          0x4989c6	                            mov r14, rax	      1496	cp-demangle.c	FUNCTION_21	CALL_3
0x4007d2e	    0x41bc00000000	                             mov r12d, 0	      1529	cp-demangle.c	FUNCTION_22
0x4007d34	    0x49bdff030810	                movabs r13, 0x20100803ff	      1556	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x4007d3e	            0xeb03	                           jmp 0x4007d43	      1556	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x4007d40	          0x4989c4	                            mov r12, rax	      1563	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_3	IF_5
0x4007d43	        0x488b5518	            mov rdx, qword [rbp + 0x18] 	      1537	cp-demangle.c	FUNCTION_22	WHILE_1	CALL_1
0x4007d47	           0xfb61a	                   movzx ebx, byte [rdx]	      1537	cp-demangle.c	FUNCTION_22	WHILE_1	CALL_1
0x4007d4a	            0x84db	                             test bl, bl	      1538	cp-demangle.c	FUNCTION_22	WHILE_1	IF_1
0x4007d4c	     0xf84a9030000	                            je 0x40080fb	      1538	cp-demangle.c	FUNCTION_22	WHILE_1	IF_1
0x4007d52	          0x80fb44	                            cmp bl, 0x44	      1546	cp-demangle.c	FUNCTION_22	WHILE_1	IF_2
0x4007d55	            0x7525	                           jne 0x4007d7c	      1546	cp-demangle.c	FUNCTION_22	WHILE_1	IF_2
0x4007d57	         0xfb64201	               movzx eax, byte [rdx + 1]	      1549	cp-demangle.c	FUNCTION_22	WHILE_1	IF_2	IF_3
0x4007d5b	          0x83e0df	                     and eax, 0xffffffdf	      1549	cp-demangle.c	FUNCTION_22	WHILE_1	IF_2	IF_3
0x4007d5e	            0x3c54	                            cmp al, 0x54	      1549	cp-demangle.c	FUNCTION_22	WHILE_1	IF_2	IF_3
0x4007d60	            0x750d	                           jne 0x4007d6f	      1549	cp-demangle.c	FUNCTION_22	WHILE_1	IF_2	IF_3
0x4007d62	          0x4889ef	                            mov rdi, rbp	      1551	cp-demangle.c	FUNCTION_22	WHILE_1	IF_2	IF_3
0x4007d65	      0xe800000000	                          call 0x4007d6a	      1551	cp-demangle.c	FUNCTION_22	WHILE_1	IF_2	IF_3
0x4007d6a	      0xe979030000	                           jmp 0x40080e8	      1551	cp-demangle.c	FUNCTION_22	WHILE_1	IF_2	IF_3
0x4007d6f	          0x4889ef	                            mov rdi, rbp	      1554	cp-demangle.c	FUNCTION_22	WHILE_1	IF_2	CALL_3
0x4007d72	      0xe8f9f0ffff	             call sym.d_unqualified_name	      1554	cp-demangle.c	FUNCTION_22	WHILE_1	IF_2	CALL_3
0x4007d77	      0xe96c030000	                           jmp 0x40080e8	      1554	cp-demangle.c	FUNCTION_22	WHILE_1	IF_2	CALL_3
0x4007d7c	          0x8d4bd0	                   lea ecx, [rbx - 0x30]	      1556	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x4007d7f	      0xb801000000	                              mov eax, 1	      1556	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x4007d84	          0x80f925	                            cmp cl, 0x25	      1556	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x4007d87	            0x770d	                            ja 0x4007d96	      1556	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x4007d89	          0x4c89e8	                            mov rax, r13	      1556	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x4007d8c	          0x48d3e8	                             shr rax, cl	      1556	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x4007d8f	        0x4883f001	                              xor rax, 1	      1556	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x4007d93	          0x83e001	                              and eax, 1	      1556	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x4007d96	          0x8d4b9f	                   lea ecx, [rbx - 0x61]	      1556	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x4007d99	          0x80f919	                            cmp cl, 0x19	      1556	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x4007d9c	           0xf96c1	                                setbe cl	      1556	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x4007d9f	            0x38c1	                              cmp cl, al	      1556	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x4007da1	            0x7307	                           jae 0x4007daa	      1556	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x4007da3	          0x80fb53	                            cmp bl, 0x53	      1562	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_3	IF_5
0x4007da6	            0x7535	                           jne 0x4007ddd	      1562	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_3	IF_5
0x4007da8	            0xeb17	                           jmp 0x4007dc1	      1562	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_3	IF_5
0x4007daa	          0x4889ef	                            mov rdi, rbp	      1561	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x4007dad	      0xe8bef0ffff	             call sym.d_unqualified_name	      1561	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x4007db2	      0xbe01000000	                              mov esi, 1	      1545	cp-demangle.c	FUNCTION_22	WHILE_1
0x4007db7	          0x4d85e4	                           test r12, r12	      1588	cp-demangle.c	FUNCTION_22	WHILE_1	IF_12
0x4007dba	            0x7574	                           jne 0x4007e30	      1588	cp-demangle.c	FUNCTION_22	WHILE_1	IF_12
0x4007dbc	      0xe982000000	                           jmp 0x4007e43	      1588	cp-demangle.c	FUNCTION_22	WHILE_1	IF_12
0x4007dc1	      0xbe01000000	                              mov esi, 1	      1563	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_3	IF_5
0x4007dc6	          0x4889ef	                            mov rdi, rbp	      1563	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_3	IF_5
0x4007dc9	      0xe8bbe3ffff	                 call sym.d_substitution	      1563	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_3	IF_5
0x4007dce	      0xbe01000000	                              mov esi, 1	      1545	cp-demangle.c	FUNCTION_22	WHILE_1
0x4007dd3	          0x4d85e4	                           test r12, r12	      1588	cp-demangle.c	FUNCTION_22	WHILE_1	IF_12
0x4007dd6	            0x7558	                           jne 0x4007e30	      1588	cp-demangle.c	FUNCTION_22	WHILE_1	IF_12
0x4007dd8	      0xe963ffffff	                           jmp 0x4007d40	      1588	cp-demangle.c	FUNCTION_22	WHILE_1	IF_12
0x4007ddd	          0x80fb49	                            cmp bl, 0x49	      1564	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_4	IF_6
0x4007de0	            0x7518	                           jne 0x4007dfa	      1564	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_4	IF_6
0x4007de2	          0x4d85e4	                           test r12, r12	      1566	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_4	IF_6	IF_7
0x4007de5	     0xf8410030000	                            je 0x40080fb	      1566	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_4	IF_6	IF_7
0x4007deb	          0x4889ef	                            mov rdi, rbp	      1569	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_4	IF_6	CALL_6
0x4007dee	      0xe8700d0000	                call sym.d_template_args	      1569	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_4	IF_6	CALL_6
0x4007df3	      0xbe04000000	                              mov esi, 4	      1568	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_4	IF_6
0x4007df8	            0xeb36	                           jmp 0x4007e30	      1568	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_4	IF_6
0x4007dfa	          0x80fb54	                            cmp bl, 0x54	      1571	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_5	IF_8
0x4007dfd	            0x750d	                           jne 0x4007e0c	      1571	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_5	IF_8
0x4007dff	          0x4889ef	                            mov rdi, rbp	      1572	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_5	IF_8
0x4007e02	      0xe82b86ffff	               call sym.d_template_param	      1572	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_5	IF_8
0x4007e07	      0xe9dc020000	                           jmp 0x40080e8	      1572	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_5	IF_8
0x4007e0c	          0x80fb45	                            cmp bl, 0x45	      1573	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_6	IF_9
0x4007e0f	            0x7467	                            je 0x4007e78	      1573	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_6	IF_9
0x4007e11	          0x80fb4d	                            cmp bl, 0x4d	      1580	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_7	IF_10	IF_11
0x4007e14	     0xf85e1020000	                           jne 0x40080fb	      1580	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_7	IF_10	IF_11
0x4007e1a	          0x4d85e4	                           test r12, r12	      1580	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_7	IF_10	IF_11
0x4007e1d	     0xf84d8020000	                            je 0x40080fb	      1580	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_7	IF_10	IF_11
0x4007e23	        0x4883c201	                              add rdx, 1	      1582	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_7	IF_10	CALL_8
0x4007e27	        0x48895518	            mov qword [rbp + 0x18], rdx 	      1582	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_7	IF_10	CALL_8
0x4007e2b	      0xe913ffffff	                           jmp 0x4007d43	      1582	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_7	IF_10	CALL_8
0x4007e30	          0x4889c1	                            mov rcx, rax	      1591	cp-demangle.c	FUNCTION_22	WHILE_1	CALL_9
0x4007e33	          0x4c89e2	                            mov rdx, r12	      1591	cp-demangle.c	FUNCTION_22	WHILE_1	CALL_9
0x4007e36	          0x4889ef	                            mov rdi, rbp	      1591	cp-demangle.c	FUNCTION_22	WHILE_1	CALL_9
0x4007e39	      0xe85282ffff	                    call sym.d_make_comp	      1591	cp-demangle.c	FUNCTION_22	WHILE_1	CALL_9
0x4007e3e	          0x4989c4	                            mov r12, rax	      1591	cp-demangle.c	FUNCTION_22	WHILE_1	CALL_9
0x4007e41	            0xeb03	                           jmp 0x4007e46	      1591	cp-demangle.c	FUNCTION_22	WHILE_1	CALL_9
0x4007e43	          0x4989c4	                            mov r12, rax	      1561	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x4007e46	          0x80fb53	                            cmp bl, 0x53	      1593	cp-demangle.c	FUNCTION_22	WHILE_1	IF_13	CALL_10
0x4007e49	            0x7508	                           jne 0x4007e53	      1593	cp-demangle.c	FUNCTION_22	WHILE_1	IF_13	CALL_10
0x4007e4b	      0xe9f3feffff	                           jmp 0x4007d43	      1593	cp-demangle.c	FUNCTION_22	WHILE_1	IF_13	CALL_10
0x4007e50	          0x4989c4	                            mov r12, rax	      1588	cp-demangle.c	FUNCTION_22	WHILE_1	IF_12
0x4007e53	        0x488b4518	            mov rax, qword [rbp + 0x18] 	      1593	cp-demangle.c	FUNCTION_22	WHILE_1	IF_13	CALL_10
0x4007e57	          0x803845	                    cmp byte [rax], 0x45	      1593	cp-demangle.c	FUNCTION_22	WHILE_1	IF_13	CALL_10
0x4007e5a	     0xf84e3feffff	                            je 0x4007d43	      1593	cp-demangle.c	FUNCTION_22	WHILE_1	IF_13	CALL_10
0x4007e60	          0x4c89e6	                            mov rsi, r12	      1595	cp-demangle.c	FUNCTION_22	WHILE_1	IF_13	IF_14	CALL_11
0x4007e63	          0x4889ef	                            mov rdi, rbp	      1595	cp-demangle.c	FUNCTION_22	WHILE_1	IF_13	IF_14	CALL_11
0x4007e66	      0xe8b286ffff	             call sym.d_add_substitution	      1595	cp-demangle.c	FUNCTION_22	WHILE_1	IF_13	IF_14	CALL_11
0x4007e6b	            0x85c0	                           test eax, eax	      1595	cp-demangle.c	FUNCTION_22	WHILE_1	IF_13	IF_14	CALL_11
0x4007e6d	     0xf85d0feffff	                           jne 0x4007d43	      1595	cp-demangle.c	FUNCTION_22	WHILE_1	IF_13	IF_14	CALL_11
0x4007e73	      0xe983020000	                           jmp 0x40080fb	      1595	cp-demangle.c	FUNCTION_22	WHILE_1	IF_13	IF_14	CALL_11
0x4007e78	          0x4d8927	                    mov qword [r15], r12	      1498	cp-demangle.c	FUNCTION_21	CALL_4
0x4007e7b	          0x4d85e4	                           test r12, r12	      1499	cp-demangle.c	FUNCTION_21	IF_3
0x4007e7e	            0x743e	                            je 0x4007ebe	      1499	cp-demangle.c	FUNCTION_21	IF_3
0x4007e80	          0x4d85f6	                           test r14, r14	      1502	cp-demangle.c	FUNCTION_21	IF_4
0x4007e83	            0x740c	                            je 0x4007e91	      1502	cp-demangle.c	FUNCTION_21	IF_4
0x4007e85	        0x488b0424	                    mov rax, qword [rsp]	      1504	cp-demangle.c	FUNCTION_21	IF_4
0x4007e89	        0x49894608	                mov qword [r14 + 8], rax	      1504	cp-demangle.c	FUNCTION_21	IF_4
0x4007e8d	        0x4c893424	                    mov qword [rsp], r14	      1505	cp-demangle.c	FUNCTION_21	IF_4
0x4007e91	        0x488b5518	            mov rdx, qword [rbp + 0x18] 	      1508	cp-demangle.c	FUNCTION_21	IF_5	CALL_5
0x4007e95	      0xb800000000	                              mov eax, 0	      1509	cp-demangle.c	FUNCTION_21	IF_5
0x4007e9a	          0x803a45	                    cmp byte [rdx], 0x45	      1508	cp-demangle.c	FUNCTION_21	IF_5	CALL_5
0x4007e9d	     0xf8533020000	                           jne 0x40080d6	      1508	cp-demangle.c	FUNCTION_21	IF_5	CALL_5
0x4007ea3	        0x4883c201	                              add rdx, 1	      1508	cp-demangle.c	FUNCTION_21	IF_5	CALL_5
0x4007ea7	        0x48895518	            mov qword [rbp + 0x18], rdx 	      1508	cp-demangle.c	FUNCTION_21	IF_5	CALL_5
0x4007eab	        0x488b0424	                    mov rax, qword [rsp]	      1511	cp-demangle.c	FUNCTION_21
0x4007eaf	      0xe922020000	                           jmp 0x40080d6	      1511	cp-demangle.c	FUNCTION_21
0x4007eb4	      0xb800000000	                              mov eax, 0	      1492	cp-demangle.c	FUNCTION_21	IF_2
0x4007eb9	      0xe918020000	                           jmp 0x40080d6	      1492	cp-demangle.c	FUNCTION_21	IF_2
0x4007ebe	      0xb800000000	                              mov eax, 0	      1500	cp-demangle.c	FUNCTION_21	IF_3
0x4007ec3	      0xe90e020000	                           jmp 0x40080d6	      1500	cp-demangle.c	FUNCTION_21	IF_3
0x4007ec8	        0x4883c201	                              add rdx, 1	      3587	cp-demangle.c	FUNCTION_54	IF_1	CALL_1
0x4007ecc	        0x48895718	             mov qword [rdi + 0x18], rdx	      3587	cp-demangle.c	FUNCTION_54	IF_1	CALL_1
0x4007ed0	      0xbe00000000	                              mov esi, 0	      3590	cp-demangle.c	FUNCTION_54	CALL_2
0x4007ed5	      0xe890020000	                     call sym.d_encoding	      3590	cp-demangle.c	FUNCTION_54	CALL_2
0x4007eda	          0x4889c3	                            mov rbx, rax	      3590	cp-demangle.c	FUNCTION_54	CALL_2
0x4007edd	          0x4885c0	                           test rax, rax	      3591	cp-demangle.c	FUNCTION_54	IF_2
0x4007ee0	     0xf84d1010000	                            je 0x40080b7	      3591	cp-demangle.c	FUNCTION_54	IF_2
0x4007ee6	        0x488b5518	            mov rdx, qword [rbp + 0x18] 	      3594	cp-demangle.c	FUNCTION_54	IF_3	CALL_3
0x4007eea	      0xb800000000	                              mov eax, 0	      3595	cp-demangle.c	FUNCTION_54	IF_3
0x4007eef	          0x803a45	                    cmp byte [rdx], 0x45	      3594	cp-demangle.c	FUNCTION_54	IF_3	CALL_3
0x4007ef2	     0xf85de010000	                           jne 0x40080d6	      3594	cp-demangle.c	FUNCTION_54	IF_3	CALL_3
0x4007ef8	        0x488d4201	                      lea rax, [rdx + 1]	      3594	cp-demangle.c	FUNCTION_54	IF_3	CALL_3
0x4007efc	        0x48894518	            mov qword [rbp + 0x18], rax 	      3594	cp-demangle.c	FUNCTION_54	IF_3	CALL_3
0x4007f00	         0xfb64201	               movzx eax, byte [rdx + 1]	      3597	cp-demangle.c	FUNCTION_54	IF_4	CALL_4
0x4007f04	            0x3c73	                            cmp al, 0x73	      3597	cp-demangle.c	FUNCTION_54	IF_4	CALL_4
0x4007f06	            0x7533	                           jne 0x4007f3b	      3597	cp-demangle.c	FUNCTION_54	IF_4	CALL_4
0x4007f08	        0x4883c202	                              add rdx, 2	      3599	cp-demangle.c	FUNCTION_54	IF_4	CALL_5
0x4007f0c	        0x48895518	            mov qword [rbp + 0x18], rdx 	      3599	cp-demangle.c	FUNCTION_54	IF_4	CALL_5
0x4007f10	          0x4889ef	                            mov rdi, rbp	      3600	cp-demangle.c	FUNCTION_54	IF_4	IF_5	CALL_6
0x4007f13	      0xe89285ffff	                call sym.d_discriminator	      3600	cp-demangle.c	FUNCTION_54	IF_4	IF_5	CALL_6
0x4007f18	            0x89c2	                            mov edx, eax	      3600	cp-demangle.c	FUNCTION_54	IF_4	IF_5	CALL_6
0x4007f1a	      0xb800000000	                              mov eax, 0	      3601	cp-demangle.c	FUNCTION_54	IF_4	IF_5
0x4007f1f	            0x85d2	                           test edx, edx	      3600	cp-demangle.c	FUNCTION_54	IF_4	IF_5	CALL_6
0x4007f21	     0xf84af010000	                            je 0x40080d6	      3600	cp-demangle.c	FUNCTION_54	IF_4	IF_5	CALL_6
0x4007f27	      0xba0e000000	                            mov edx, 0xe	      3602	cp-demangle.c	FUNCTION_54	IF_4	CALL_7
0x4007f2c	      0xbe00000000	                              mov esi, 0	      3602	cp-demangle.c	FUNCTION_54	IF_4	CALL_7
0x4007f31	          0x4889ef	                            mov rdi, rbp	      3602	cp-demangle.c	FUNCTION_54	IF_4	CALL_7
0x4007f34	      0xe801e1ffff	                    call sym.d_make_name	      3602	cp-demangle.c	FUNCTION_54	IF_4	CALL_7
0x4007f39	            0xeb66	                           jmp 0x4007fa1	      3602	cp-demangle.c	FUNCTION_54	IF_4	CALL_7
0x4007f3b	            0x3c64	                            cmp al, 0x64	      3608	cp-demangle.c	FUNCTION_54	ELSE_1	IF_6	CALL_8
0x4007f3d	     0xf85db010000	                           jne 0x400811e	      3608	cp-demangle.c	FUNCTION_54	ELSE_1	IF_6	CALL_8
0x4007f43	        0x4883c202	                              add rdx, 2	      3611	cp-demangle.c	FUNCTION_54	ELSE_1	IF_6	CALL_9
0x4007f47	        0x48895518	            mov qword [rbp + 0x18], rdx 	      3611	cp-demangle.c	FUNCTION_54	ELSE_1	IF_6	CALL_9
0x4007f4b	          0x4889ef	                            mov rdi, rbp	      3612	cp-demangle.c	FUNCTION_54	ELSE_1	IF_6	CALL_10
0x4007f4e	      0xe88b84ffff	               call sym.d_compact_number	      3612	cp-demangle.c	FUNCTION_54	ELSE_1	IF_6	CALL_10
0x4007f53	          0x4189c4	                           mov r12d, eax	      3612	cp-demangle.c	FUNCTION_54	ELSE_1	IF_6	CALL_10
0x4007f56	            0x85c0	                           test eax, eax	      3613	cp-demangle.c	FUNCTION_54	ELSE_1	IF_6	IF_7
0x4007f58	     0xf89ab010000	                           jns 0x4008109	      3613	cp-demangle.c	FUNCTION_54	ELSE_1	IF_6	IF_7
0x4007f5e	      0xe95b010000	                           jmp 0x40080be	      3613	cp-demangle.c	FUNCTION_54	ELSE_1	IF_6	IF_7
0x4007f63	          0x4989c5	                            mov r13, rax	      3617	cp-demangle.c	FUNCTION_54	ELSE_1	CALL_11
0x4007f66	    0x41bcffffffff	                    mov r12d, 0xffffffff	      3606	cp-demangle.c	FUNCTION_54	ELSE_1
0x4007f6c	          0x4889ef	                            mov rdi, rbp	      3626	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8	IF_9	CALL_12
0x4007f6f	      0xe83685ffff	                call sym.d_discriminator	      3626	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8	IF_9	CALL_12
0x4007f74	            0x85c0	                           test eax, eax	      3626	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8	IF_9	CALL_12
0x4007f76	     0xf8449010000	                            je 0x40080c5	      3626	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8	IF_9	CALL_12
0x4007f7c	          0x4585e4	                         test r12d, r12d	      3630	cp-demangle.c	FUNCTION_54	ELSE_1	IF_10
0x4007f7f	            0x781d	                            js 0x4007f9e	      3630	cp-demangle.c	FUNCTION_54	ELSE_1	IF_10
0x4007f81	          0x4889ef	                            mov rdi, rbp	      1125	cp-demangle.c	FUNCTION_10	CALL_1
0x4007f84	      0xe8df80ffff	                   call sym.d_make_empty	      1125	cp-demangle.c	FUNCTION_10	CALL_1
0x4007f89	          0x4885c0	                           test rax, rax	      1126	cp-demangle.c	FUNCTION_10	IF_1
0x4007f8c	            0x7413	                            je 0x4007fa1	      1126	cp-demangle.c	FUNCTION_10	IF_1
0x4007f8e	    0xc70046000000	                   mov dword [rax], 0x46	      1128	cp-demangle.c	FUNCTION_10	IF_1
0x4007f94	        0x44896010	            mov dword [rax + 0x10], r12d	      1129	cp-demangle.c	FUNCTION_10	IF_1
0x4007f98	        0x4c896808	                mov qword [rax + 8], r13	      1130	cp-demangle.c	FUNCTION_10	IF_1
0x4007f9c	            0xeb03	                           jmp 0x4007fa1	      1130	cp-demangle.c	FUNCTION_10	IF_1
0x4007f9e	          0x4c89e8	                            mov rax, r13	      3630	cp-demangle.c	FUNCTION_54	ELSE_1	IF_10
0x4007fa1	          0x833b03	                      cmp dword [rbx], 3	      3637	cp-demangle.c	FUNCTION_54	IF_11
0x4007fa4	            0x7511	                           jne 0x4007fb7	      3637	cp-demangle.c	FUNCTION_54	IF_11
0x4007fa6	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	      3638	cp-demangle.c	FUNCTION_54	IF_11
0x4007faa	          0x833a29	                   cmp dword [rdx], 0x29	      3638	cp-demangle.c	FUNCTION_54	IF_11
0x4007fad	            0x7508	                           jne 0x4007fb7	      3638	cp-demangle.c	FUNCTION_54	IF_11
0x4007faf	    0x48c742080000	                  mov qword [rdx + 8], 0	      3639	cp-demangle.c	FUNCTION_54	IF_11
0x4007fb7	          0x4889c1	                            mov rcx, rax	      3641	cp-demangle.c	FUNCTION_54	CALL_14
0x4007fba	          0x4889da	                            mov rdx, rbx	      3641	cp-demangle.c	FUNCTION_54	CALL_14
0x4007fbd	      0xbe02000000	                              mov esi, 2	      3641	cp-demangle.c	FUNCTION_54	CALL_14
0x4007fc2	          0x4889ef	                            mov rdi, rbp	      3641	cp-demangle.c	FUNCTION_54	CALL_14
0x4007fc5	      0xe8c680ffff	                    call sym.d_make_comp	      3641	cp-demangle.c	FUNCTION_54	CALL_14
0x4007fca	      0xe907010000	                           jmp 0x40080d6	      3641	cp-demangle.c	FUNCTION_54	CALL_14
0x4007fcf	      0xe89ceeffff	             call sym.d_unqualified_name	      1414	cp-demangle.c	FUNCTION_20	SWITCH_1	CALL_4
0x4007fd4	      0xe9fd000000	                           jmp 0x40080d6	      1414	cp-demangle.c	FUNCTION_20	SWITCH_1	CALL_4
0x4007fd9	        0x807a0174	                cmp byte [rdx + 1], 0x74	      1420	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_1	CALL_5
0x4007fdd	            0x741c	                            je 0x4007ffb	      1420	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_1	CALL_5
0x4007fdf	      0xbe00000000	                              mov esi, 0	      1422	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_1	CALL_6
0x4007fe4	      0xe8a0e1ffff	                 call sym.d_substitution	      1422	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_1	CALL_6
0x4007fe9	          0x4889c3	                            mov rbx, rax	      1422	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_1	CALL_6
0x4007fec	        0x488b5518	            mov rdx, qword [rbp + 0x18] 	      1435	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_2	CALL_11
0x4007ff0	          0x803a49	                    cmp byte [rdx], 0x49	      1435	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_2	CALL_11
0x4007ff3	     0xf85dd000000	                           jne 0x40080d6	      1435	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_2	CALL_11
0x4007ff9	            0xeb58	                           jmp 0x4008053	      1435	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_2	CALL_11
0x4007ffb	        0x4883c202	                              add rdx, 2	      1427	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_1	CALL_7
0x4007fff	        0x48895718	             mov qword [rdi + 0x18], rdx	      1427	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_1	CALL_7
0x4008003	      0xe868eeffff	             call sym.d_unqualified_name	      1428	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_1	CALL_8
0x4008008	          0x4889c3	                            mov rbx, rax	      1428	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_1	CALL_8
0x400800b	      0xba03000000	                              mov edx, 3	      1428	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_1	CALL_8
0x4008010	      0xbe00000000	                              mov esi, 0	      1428	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_1	CALL_8
0x4008015	          0x4889ef	                            mov rdi, rbp	      1428	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_1	CALL_8
0x4008018	      0xe81de0ffff	                    call sym.d_make_name	      1428	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_1	CALL_8
0x400801d	          0x4889d9	                            mov rcx, rbx	      1428	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_1	CALL_8
0x4008020	          0x4889c2	                            mov rdx, rax	      1428	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_1	CALL_8
0x4008023	      0xbe01000000	                              mov esi, 1	      1428	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_1	CALL_8
0x4008028	          0x4889ef	                            mov rdi, rbp	      1428	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_1	CALL_8
0x400802b	      0xe86080ffff	                    call sym.d_make_comp	      1428	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_1	CALL_8
0x4008030	          0x4889c3	                            mov rbx, rax	      1428	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_1	CALL_8
0x4008033	        0x83454803	               add dword [rbp + 0x48], 3	      1431	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_1
0x4008037	        0x488b4518	            mov rax, qword [rbp + 0x18] 	      1435	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_2	CALL_11
0x400803b	          0x803849	                    cmp byte [rax], 0x49	      1435	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_2	CALL_11
0x400803e	     0xf8588000000	                           jne 0x40080cc	      1435	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_2	CALL_11
0x4008044	          0x4889de	                            mov rsi, rbx	      1449	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_2	IF_3	IF_4	CALL_12
0x4008047	          0x4889ef	                            mov rdi, rbp	      1449	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_2	IF_3	IF_4	CALL_12
0x400804a	      0xe8ce84ffff	             call sym.d_add_substitution	      1449	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_2	IF_3	IF_4	CALL_12
0x400804f	            0x85c0	                           test eax, eax	      1449	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_2	IF_3	IF_4	CALL_12
0x4008051	            0x747e	                            je 0x40080d1	      1449	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_2	IF_3	IF_4	CALL_12
0x4008053	          0x4889ef	                            mov rdi, rbp	      1452	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_2	CALL_13
0x4008056	      0xe8080b0000	                call sym.d_template_args	      1452	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_2	CALL_13
0x400805b	          0x4889c1	                            mov rcx, rax	      1452	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_2	CALL_13
0x400805e	          0x4889da	                            mov rdx, rbx	      1452	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_2	CALL_13
0x4008061	      0xbe04000000	                              mov esi, 4	      1452	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_2	CALL_13
0x4008066	          0x4889ef	                            mov rdi, rbp	      1452	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_2	CALL_13
0x4008069	      0xe82280ffff	                    call sym.d_make_comp	      1452	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_2	CALL_13
0x400806e	            0xeb66	                           jmp 0x40080d6	      1452	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_2	CALL_13
0x4008070	          0x4889ef	                            mov rdi, rbp	      1461	cp-demangle.c	FUNCTION_20	SWITCH_1	CALL_15
0x4008073	      0xe8f8edffff	             call sym.d_unqualified_name	      1461	cp-demangle.c	FUNCTION_20	SWITCH_1	CALL_15
0x4008078	          0x4889c3	                            mov rbx, rax	      1461	cp-demangle.c	FUNCTION_20	SWITCH_1	CALL_15
0x400807b	        0x488b5518	            mov rdx, qword [rbp + 0x18] 	      1462	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_5	CALL_16
0x400807f	          0x803a49	                    cmp byte [rdx], 0x49	      1462	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_5	CALL_16
0x4008082	            0x7552	                           jne 0x40080d6	      1462	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_5	CALL_16
0x4008084	          0x4889c6	                            mov rsi, rax	      1467	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_5	IF_6	CALL_17
0x4008087	          0x4889ef	                            mov rdi, rbp	      1467	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_5	IF_6	CALL_17
0x400808a	      0xe88e84ffff	             call sym.d_add_substitution	      1467	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_5	IF_6	CALL_17
0x400808f	            0x89c2	                            mov edx, eax	      1467	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_5	IF_6	CALL_17
0x4008091	      0xb800000000	                              mov eax, 0	      1468	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_5	IF_6
0x4008096	            0x85d2	                           test edx, edx	      1467	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_5	IF_6	CALL_17
0x4008098	            0x743c	                            je 0x40080d6	      1467	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_5	IF_6	CALL_17
0x400809a	          0x4889ef	                            mov rdi, rbp	      1469	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_5	CALL_18
0x400809d	      0xe8c10a0000	                call sym.d_template_args	      1469	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_5	CALL_18
0x40080a2	          0x4889c1	                            mov rcx, rax	      1469	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_5	CALL_18
0x40080a5	          0x4889da	                            mov rdx, rbx	      1469	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_5	CALL_18
0x40080a8	      0xbe04000000	                              mov esi, 4	      1469	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_5	CALL_18
0x40080ad	          0x4889ef	                            mov rdi, rbp	      1469	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_5	CALL_18
0x40080b0	      0xe8db7fffff	                    call sym.d_make_comp	      1469	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_5	CALL_18
0x40080b5	            0xeb1f	                           jmp 0x40080d6	      1469	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_5	CALL_18
0x40080b7	      0xb800000000	                              mov eax, 0	      3592	cp-demangle.c	FUNCTION_54	IF_2
0x40080bc	            0xeb18	                           jmp 0x40080d6	      3592	cp-demangle.c	FUNCTION_54	IF_2
0x40080be	      0xb800000000	                              mov eax, 0	      3614	cp-demangle.c	FUNCTION_54	ELSE_1	IF_6	IF_7
0x40080c3	            0xeb11	                           jmp 0x40080d6	      3614	cp-demangle.c	FUNCTION_54	ELSE_1	IF_6	IF_7
0x40080c5	      0xb800000000	                              mov eax, 0	      3627	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8	IF_9
0x40080ca	            0xeb0a	                           jmp 0x40080d6	      3627	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8	IF_9
0x40080cc	          0x4889d8	                            mov rax, rbx	      1428	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_1	CALL_8
0x40080cf	            0xeb05	                           jmp 0x40080d6	      1428	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_1	CALL_8
0x40080d1	      0xb800000000	                              mov eax, 0	      1450	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_2	IF_3	IF_4
0x40080d6	      0x488b742408	                mov rsi, qword [rsp + 8]	      1474	cp-demangle.c	FUNCTION_20
0x40080db	    0x644833342528	                xor rsi, qword fs:[0x28]	      1474	cp-demangle.c	FUNCTION_20
0x40080e4	            0x7475	                            je 0x400815b	      1474	cp-demangle.c	FUNCTION_20
0x40080e6	            0xeb6e	                           jmp 0x4008156	      1474	cp-demangle.c	FUNCTION_20
0x40080e8	      0xbe01000000	                              mov esi, 1	      1588	cp-demangle.c	FUNCTION_22	WHILE_1	IF_12
0x40080ed	          0x4d85e4	                           test r12, r12	      1588	cp-demangle.c	FUNCTION_22	WHILE_1	IF_12
0x40080f0	     0xf853afdffff	                           jne 0x4007e30	      1588	cp-demangle.c	FUNCTION_22	WHILE_1	IF_12
0x40080f6	      0xe955fdffff	                           jmp 0x4007e50	      1588	cp-demangle.c	FUNCTION_22	WHILE_1	IF_12
0x40080fb	    0x49c707000000	                      mov qword [r15], 0	      1498	cp-demangle.c	FUNCTION_21	CALL_4
0x4008102	      0xb800000000	                              mov eax, 0	      1500	cp-demangle.c	FUNCTION_21	IF_3
0x4008107	            0xebcd	                           jmp 0x40080d6	      1500	cp-demangle.c	FUNCTION_21	IF_3
0x4008109	          0x4889ef	                            mov rdi, rbp	      3617	cp-demangle.c	FUNCTION_54	ELSE_1	CALL_11
0x400810c	      0xe89afbffff	                         call sym.d_name	      3617	cp-demangle.c	FUNCTION_54	ELSE_1	CALL_11
0x4008111	          0x4989c5	                            mov r13, rax	      3617	cp-demangle.c	FUNCTION_54	ELSE_1	CALL_11
0x4008114	          0x4885c0	                           test rax, rax	      3619	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8
0x4008117	            0x7517	                           jne 0x4008130	      3619	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8
0x4008119	      0xe963feffff	                           jmp 0x4007f81	      3619	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8
0x400811e	          0x4889ef	                            mov rdi, rbp	      3617	cp-demangle.c	FUNCTION_54	ELSE_1	CALL_11
0x4008121	      0xe885fbffff	                         call sym.d_name	      3617	cp-demangle.c	FUNCTION_54	ELSE_1	CALL_11
0x4008126	          0x4885c0	                           test rax, rax	      3619	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8
0x4008129	            0x7518	                           jne 0x4008143	      3619	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8
0x400812b	      0xe971feffff	                           jmp 0x4007fa1	      3619	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8
0x4008130	            0x8b00	                    mov eax, dword [rax]	      3623	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8
0x4008132	          0x83e0fd	                     and eax, 0xfffffffd	      3623	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8
0x4008135	          0x83f845	                           cmp eax, 0x45	      3623	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8
0x4008138	     0xf852efeffff	                           jne 0x4007f6c	      3623	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8
0x400813e	      0xe93efeffff	                           jmp 0x4007f81	      3623	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8
0x4008143	            0x8b10	                    mov edx, dword [rax]	      3623	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8
0x4008145	          0x83e2fd	                     and edx, 0xfffffffd	      3623	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8
0x4008148	          0x83fa45	                           cmp edx, 0x45	      3623	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8
0x400814b	     0xf8450feffff	                            je 0x4007fa1	      3623	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8
0x4008151	      0xe90dfeffff	                           jmp 0x4007f63	      3623	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8
0x4008156	      0xe800000000	                          call 0x400815b	      1474	cp-demangle.c	FUNCTION_20
0x400815b	        0x4883c418	                           add rsp, 0x18	      1474	cp-demangle.c	FUNCTION_20
0x400815f	              0x5b	                                 pop rbx	      1474	cp-demangle.c	FUNCTION_20
0x4008160	              0x5d	                                 pop rbp	      1474	cp-demangle.c	FUNCTION_20
0x4008161	            0x415c	                                 pop r12	      1474	cp-demangle.c	FUNCTION_20
0x4008163	            0x415d	                                 pop r13	      1474	cp-demangle.c	FUNCTION_20
0x4008165	            0x415e	                                 pop r14	      1474	cp-demangle.c	FUNCTION_20
0x4008167	            0x415f	                                 pop r15	      1474	cp-demangle.c	FUNCTION_20
0x4008169	              0xc3	                                     ret	      1474	cp-demangle.c	FUNCTION_20
d_expr_primary	SWITCH,0:CALL,13:IF,7:WHILE,1:ELSE,1:DO,0:FOR,0:functions,0	83
0x4008942	        0x488b5718	            mov rdx, qword [rdi + 0x18] 	      3523	cp-demangle.c	FUNCTION_53	IF_1	CALL_1
0x4008946	      0xb900000000	                              mov ecx, 0	      3524	cp-demangle.c	FUNCTION_53	IF_1
0x400894b	          0x803a4c	                    cmp byte [rdx], 0x4c	      3523	cp-demangle.c	FUNCTION_53	IF_1	CALL_1
0x400894e	     0xf85f3000000	                           jne 0x4008a47	      3523	cp-demangle.c	FUNCTION_53	IF_1	CALL_1
0x4008954	            0x4154	                                push r12	      3520	cp-demangle.c	FUNCTION_53
0x4008956	              0x55	                                push rbp	      3520	cp-demangle.c	FUNCTION_53
0x4008957	              0x53	                                push rbx	      3520	cp-demangle.c	FUNCTION_53
0x4008958	          0x4889fb	                            mov rbx, rdi	      3520	cp-demangle.c	FUNCTION_53
0x400895b	        0x488d4201	                      lea rax, [rdx + 1]	      3523	cp-demangle.c	FUNCTION_53	IF_1	CALL_1
0x400895f	        0x48894718	             mov qword [rdi + 0x18], rax	      3523	cp-demangle.c	FUNCTION_53	IF_1	CALL_1
0x4008963	         0xfb64201	               movzx eax, byte [rdx + 1]	      3525	cp-demangle.c	FUNCTION_53	IF_2	CALL_2
0x4008967	            0x3c5f	                            cmp al, 0x5f	      3525	cp-demangle.c	FUNCTION_53	IF_2	CALL_2
0x4008969	            0x7404	                            je 0x400896f	      3525	cp-demangle.c	FUNCTION_53	IF_2	CALL_2
0x400896b	            0x3c5a	                            cmp al, 0x5a	      3525	cp-demangle.c	FUNCTION_53	IF_2	CALL_2
0x400896d	            0x7512	                           jne 0x4008981	      3525	cp-demangle.c	FUNCTION_53	IF_2	CALL_2
0x400896f	      0xbe00000000	                              mov esi, 0	      3528	cp-demangle.c	FUNCTION_53	IF_2
0x4008974	          0x4889df	                            mov rdi, rbx	      3528	cp-demangle.c	FUNCTION_53	IF_2
0x4008977	      0xe800000000	                          call 0x400897c	      3528	cp-demangle.c	FUNCTION_53	IF_2
0x400897c	      0xe990000000	                           jmp 0x4008a11	      3528	cp-demangle.c	FUNCTION_53	IF_2
0x4008981	      0xe800000000	                          call 0x4008986	      3535	cp-demangle.c	FUNCTION_53	ELSE_1
0x4008986	          0x4889c5	                            mov rbp, rax	      3535	cp-demangle.c	FUNCTION_53	ELSE_1
0x4008989	          0x4885c0	                           test rax, rax	      3536	cp-demangle.c	FUNCTION_53	ELSE_1	IF_3
0x400898c	     0xf849a000000	                            je 0x4008a2c	      3536	cp-demangle.c	FUNCTION_53	ELSE_1	IF_3
0x4008992	          0x833827	                   cmp dword [rax], 0x27	      3541	cp-demangle.c	FUNCTION_53	ELSE_1	IF_4
0x4008995	            0x7510	                           jne 0x40089a7	      3541	cp-demangle.c	FUNCTION_53	ELSE_1	IF_4
0x4008997	        0x488b4008	                mov rax, qword [rax + 8]	      3542	cp-demangle.c	FUNCTION_53	ELSE_1	IF_4
0x400899b	        0x83781c00	               cmp dword [rax + 0x1c], 0	      3542	cp-demangle.c	FUNCTION_53	ELSE_1	IF_4
0x400899f	            0x7406	                            je 0x40089a7	      3542	cp-demangle.c	FUNCTION_53	ELSE_1	IF_4
0x40089a1	          0x8b4008	                mov eax, dword [rax + 8]	      3543	cp-demangle.c	FUNCTION_53	ELSE_1	IF_4
0x40089a4	          0x294348	             sub dword [rbx + 0x48], eax	      3543	cp-demangle.c	FUNCTION_53	ELSE_1	IF_4
0x40089a7	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      3557	cp-demangle.c	FUNCTION_53	ELSE_1	IF_5	CALL_4
0x40089ab	    0x41bc3c000000	                          mov r12d, 0x3c	      3556	cp-demangle.c	FUNCTION_53	ELSE_1
0x40089b1	          0x80386e	                    cmp byte [rax], 0x6e	      3557	cp-demangle.c	FUNCTION_53	ELSE_1	IF_5	CALL_4
0x40089b4	            0x750e	                           jne 0x40089c4	      3557	cp-demangle.c	FUNCTION_53	ELSE_1	IF_5	CALL_4
0x40089b6	        0x4883c001	                              add rax, 1	      3560	cp-demangle.c	FUNCTION_53	ELSE_1	IF_5	CALL_5
0x40089ba	        0x48894318	             mov qword [rbx + 0x18], rax	      3560	cp-demangle.c	FUNCTION_53	ELSE_1	IF_5	CALL_5
0x40089be	    0x41bc3d000000	                          mov r12d, 0x3d	      3559	cp-demangle.c	FUNCTION_53	ELSE_1	IF_5
0x40089c4	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	      3562	cp-demangle.c	FUNCTION_53	ELSE_1	CALL_6
0x40089c8	           0xfb606	                   movzx eax, byte [rsi]	      3563	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	CALL_7
0x40089cb	            0x3c45	                            cmp al, 0x45	      3563	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	CALL_7
0x40089cd	            0x7423	                            je 0x40089f2	      3563	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	CALL_7
0x40089cf	            0x84c0	                             test al, al	      3565	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	IF_6	CALL_8
0x40089d1	            0x7460	                            je 0x4008a33	      3565	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	IF_6	CALL_8
0x40089d3	        0x488d4601	                      lea rax, [rsi + 1]	      3565	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	IF_6	CALL_8
0x40089d7	            0xeb08	                           jmp 0x40089e1	      3565	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	IF_6	CALL_8
0x40089d9	        0x4883c001	                              add rax, 1	      3565	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	IF_6	CALL_8
0x40089dd	            0x84c9	                             test cl, cl	      3565	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	IF_6	CALL_8
0x40089df	            0x7459	                            je 0x4008a3a	      3565	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	IF_6	CALL_8
0x40089e1	          0x4889c2	                            mov rdx, rax	      3567	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	CALL_9
0x40089e4	        0x48894318	             mov qword [rbx + 0x18], rax	      3567	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	CALL_9
0x40089e8	           0xfb608	                   movzx ecx, byte [rax]	      3563	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	CALL_7
0x40089eb	          0x80f945	                            cmp cl, 0x45	      3563	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	CALL_7
0x40089ee	            0x75e9	                           jne 0x40089d9	      3563	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	CALL_7
0x40089f0	            0xeb03	                           jmp 0x40089f5	      3563	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	CALL_7
0x40089f2	          0x4889f2	                            mov rdx, rsi	      3563	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	CALL_7
0x40089f5	          0x4829f2	                            sub rdx, rsi	      3569	cp-demangle.c	FUNCTION_53	ELSE_1	CALL_12
0x40089f8	          0x4889df	                            mov rdi, rbx	      3569	cp-demangle.c	FUNCTION_53	ELSE_1	CALL_12
0x40089fb	      0xe83ad6ffff	                    call sym.d_make_name	      3569	cp-demangle.c	FUNCTION_53	ELSE_1	CALL_12
0x4008a00	          0x4889c1	                            mov rcx, rax	      3569	cp-demangle.c	FUNCTION_53	ELSE_1	CALL_12
0x4008a03	          0x4889ea	                            mov rdx, rbp	      3569	cp-demangle.c	FUNCTION_53	ELSE_1	CALL_12
0x4008a06	          0x4489e6	                           mov esi, r12d	      3569	cp-demangle.c	FUNCTION_53	ELSE_1	CALL_12
0x4008a09	          0x4889df	                            mov rdi, rbx	      3569	cp-demangle.c	FUNCTION_53	ELSE_1	CALL_12
0x4008a0c	      0xe87f76ffff	                    call sym.d_make_comp	      3569	cp-demangle.c	FUNCTION_53	ELSE_1	CALL_12
0x4008a11	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      3571	cp-demangle.c	FUNCTION_53	IF_7	CALL_13
0x4008a15	      0xb900000000	                              mov ecx, 0	      3572	cp-demangle.c	FUNCTION_53	IF_7
0x4008a1a	          0x803a45	                    cmp byte [rdx], 0x45	      3571	cp-demangle.c	FUNCTION_53	IF_7	CALL_13
0x4008a1d	            0x7520	                           jne 0x4008a3f	      3571	cp-demangle.c	FUNCTION_53	IF_7	CALL_13
0x4008a1f	        0x4883c201	                              add rdx, 1	      3571	cp-demangle.c	FUNCTION_53	IF_7	CALL_13
0x4008a23	        0x48895318	             mov qword [rbx + 0x18], rdx	      3571	cp-demangle.c	FUNCTION_53	IF_7	CALL_13
0x4008a27	          0x4889c1	                            mov rcx, rax	      3573	cp-demangle.c	FUNCTION_53
0x4008a2a	            0xeb13	                           jmp 0x4008a3f	      3573	cp-demangle.c	FUNCTION_53
0x4008a2c	      0xb900000000	                              mov ecx, 0	      3537	cp-demangle.c	FUNCTION_53	ELSE_1	IF_3
0x4008a31	            0xeb0c	                           jmp 0x4008a3f	      3537	cp-demangle.c	FUNCTION_53	ELSE_1	IF_3
0x4008a33	      0xb900000000	                              mov ecx, 0	      3566	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	IF_6
0x4008a38	            0xeb05	                           jmp 0x4008a3f	      3566	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	IF_6
0x4008a3a	      0xb900000000	                              mov ecx, 0	      3566	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	IF_6
0x4008a3f	          0x4889c8	                            mov rax, rcx	      3574	cp-demangle.c	FUNCTION_53
0x4008a42	              0x5b	                                 pop rbx	      3574	cp-demangle.c	FUNCTION_53
0x4008a43	              0x5d	                                 pop rbp	      3574	cp-demangle.c	FUNCTION_53
0x4008a44	            0x415c	                                 pop r12	      3574	cp-demangle.c	FUNCTION_53
0x4008a46	              0xc3	                                     ret	      3574	cp-demangle.c	FUNCTION_53
0x4008a47	          0x4889c8	                            mov rax, rcx	      3574	cp-demangle.c	FUNCTION_53
0x4008a4a	              0xc3	                                     ret	      3574	cp-demangle.c	FUNCTION_53
d_ref_qualifier	SWITCH,0:CALL,3:IF,2:WHILE,0:ELSE,1:DO,0:FOR,0:functions,0	20
0x4000396	          0x4889f0	                            mov rax, rsi	      2815	cp-demangle.c	FUNCTION_36
0x4000399	        0x488b4f18	            mov rcx, qword [rdi + 0x18] 	      2819	cp-demangle.c	FUNCTION_36	CALL_1
0x400039d	        0x440fb601	                   movzx r8d, byte [rcx]	      2819	cp-demangle.c	FUNCTION_36	CALL_1
0x40003a1	        0x4180f852	                           cmp r8b, 0x52	      2820	cp-demangle.c	FUNCTION_36	IF_1
0x40003a5	            0x7406	                            je 0x40003ad	      2820	cp-demangle.c	FUNCTION_36	IF_1
0x40003a7	        0x4180f84f	                           cmp r8b, 0x4f	      2820	cp-demangle.c	FUNCTION_36	IF_1
0x40003ab	            0x752f	                           jne 0x40003dc	      2820	cp-demangle.c	FUNCTION_36	IF_1
0x40003ad	        0x4180f852	                           cmp r8b, 0x52	      2823	cp-demangle.c	FUNCTION_36	IF_1	IF_2
0x40003b1	            0x750b	                           jne 0x40003be	      2823	cp-demangle.c	FUNCTION_36	IF_1	IF_2
0x40003b3	        0x83474802	               add dword [rdi + 0x48], 2	      2826	cp-demangle.c	FUNCTION_36	IF_1	IF_2
0x40003b7	      0xbe1f000000	                           mov esi, 0x1f	      2825	cp-demangle.c	FUNCTION_36	IF_1	IF_2
0x40003bc	            0xeb09	                           jmp 0x40003c7	      2825	cp-demangle.c	FUNCTION_36	IF_1	IF_2
0x40003be	        0x83474803	               add dword [rdi + 0x48], 3	      2831	cp-demangle.c	FUNCTION_36	IF_1	ELSE_1
0x40003c2	      0xbe20000000	                           mov esi, 0x20	      2830	cp-demangle.c	FUNCTION_36	IF_1	ELSE_1
0x40003c7	        0x4883c101	                              add rcx, 1	      2833	cp-demangle.c	FUNCTION_36	IF_1	CALL_2
0x40003cb	        0x48894f18	             mov qword [rdi + 0x18], rcx	      2833	cp-demangle.c	FUNCTION_36	IF_1	CALL_2
0x40003cf	      0xb900000000	                              mov ecx, 0	      2835	cp-demangle.c	FUNCTION_36	IF_1	CALL_3
0x40003d4	          0x4889c2	                            mov rdx, rax	      2835	cp-demangle.c	FUNCTION_36	IF_1	CALL_3
0x40003d7	      0xe8b4fcffff	                    call sym.d_make_comp	      2835	cp-demangle.c	FUNCTION_36	IF_1	CALL_3
0x40003dc	            0xf3c3	                                     ret	      2839	cp-demangle.c	FUNCTION_36
d_print_comp_inner	SWITCH,4:CALL,237:IF,91:WHILE,5:ELSE,17:DO,0:FOR,3:functions,0	3062
0x4000977	            0x4157	                                push r15	      4623	cp-demangle.c	FUNCTION_86
0x4000979	            0x4156	                                push r14	      4623	cp-demangle.c	FUNCTION_86
0x400097b	            0x4155	                                push r13	      4623	cp-demangle.c	FUNCTION_86
0x400097d	            0x4154	                                push r12	      4623	cp-demangle.c	FUNCTION_86
0x400097f	              0x55	                                push rbp	      4623	cp-demangle.c	FUNCTION_86
0x4000980	              0x53	                                push rbx	      4623	cp-demangle.c	FUNCTION_86
0x4000981	    0x4881ecf80000	                           sub rsp, 0xf8	      4623	cp-demangle.c	FUNCTION_86
0x4000988	          0x4889fb	                            mov rbx, rdi	      4623	cp-demangle.c	FUNCTION_86
0x400098b	    0x64488b042528	                mov rax, qword fs:[0x28]	      4623	cp-demangle.c	FUNCTION_86
0x4000994	    0x48898424e800	             mov qword [rsp + 0xe8], rax	      4623	cp-demangle.c	FUNCTION_86
0x400099c	            0x31c0	                            xor eax, eax	      4623	cp-demangle.c	FUNCTION_86
0x400099e	          0x4885d2	                           test rdx, rdx	      4635	cp-demangle.c	FUNCTION_86	IF_1
0x40009a1	            0x750f	                           jne 0x40009b2	      4635	cp-demangle.c	FUNCTION_86	IF_1
0x40009a3	    0xc78730010000	              mov dword [rdi + 0x130], 1	      4207	cp-demangle.c	FUNCTION_69
0x40009ad	      0xe9063d0000	                           jmp 0x40046b8	      4207	cp-demangle.c	FUNCTION_69
0x40009b2	          0x4189f5	                           mov r13d, esi	      4207	cp-demangle.c	FUNCTION_69
0x40009b5	          0x4889d5	                            mov rbp, rdx	      4207	cp-demangle.c	FUNCTION_69
0x40009b8	    0x83bf30010000	              cmp dword [rdi + 0x130], 0	      4640	cp-demangle.c	FUNCTION_86	IF_2	CALL_2
0x40009bf	     0xf85f33c0000	                           jne 0x40046b8	      4640	cp-demangle.c	FUNCTION_86	IF_2	CALL_2
0x40009c5	            0x8b02	                    mov eax, dword [rdx]	      4643	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40009c7	          0x83f84f	                           cmp eax, 0x4f	      4643	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40009ca	     0xf87db3b0000	                            ja 0x40045ab	      4643	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40009d0	            0x89c2	                            mov edx, eax	      4643	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40009d2	    0xff24d5000000	                       jmp qword [rdx*8]	      4643	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40009d9	        0x40f6c604	                             test sil, 4	      4646	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_3
0x40009dd	     0xf8582000000	                           jne 0x4000a65	      4646	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_3
0x40009e3	        0x4c636d10	         movsxd r13, dword [rbp + 0x10] 	      4647	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_3
0x40009e7	        0x4c8b7508	                mov r14, qword [rbp + 8]	      4647	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_3
0x40009eb	          0x4d85ed	                           test r13, r13	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40009ee	     0xf84c43c0000	                            je 0x40046b8	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40009f4	      0xbd00000000	                              mov ebp, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40009f9	      0x450fb6242e	            movzx r12d, byte [r14 + rbp]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x40009fe	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4000a09	            0x752f	                           jne 0x4000a3a	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4000a0b	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4000a12	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4000a19	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4000a1e	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4000a21	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4000a27	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4000a32	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4000a3a	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4000a41	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4000a45	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4000a4c	        0x44882403	              mov byte [rbx + rax], r12b	      4235	cp-demangle.c	FUNCTION_72
0x4000a50	    0x4488a3080100	            mov byte [rbx + 0x108], r12b	      4236	cp-demangle.c	FUNCTION_72
0x4000a57	        0x4883c501	                              add rbp, 1	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4000a5b	          0x4939ed	                            cmp r13, rbp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4000a5e	            0x7599	                           jne 0x40009f9	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4000a60	      0xe9533c0000	                           jmp 0x40046b8	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4000a65	        0x4c8b6508	                mov r12, qword [rbp + 8]	      4649	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_4
0x4000a69	        0x4c636d10	         movsxd r13, dword [rbp + 0x10] 	      5746	cp-demangle.c	FUNCTION_88
0x4000a6d	          0x4d01e5	                            add r13, r12	      5746	cp-demangle.c	FUNCTION_88
0x4000a70	          0x4d39ec	                            cmp r12, r13	      5747	cp-demangle.c	FUNCTION_88	FOR_1
0x4000a73	     0xf833f3c0000	                           jae 0x40046b8	      5747	cp-demangle.c	FUNCTION_88	FOR_1
0x4000a79	          0x4c89e8	                            mov rax, r13	      5749	cp-demangle.c	FUNCTION_88	FOR_1	IF_1
0x4000a7c	          0x4c29e0	                            sub rax, r12	      5749	cp-demangle.c	FUNCTION_88	FOR_1	IF_1
0x4000a7f	        0x4883f803	                              cmp rax, 3	      5749	cp-demangle.c	FUNCTION_88	FOR_1	IF_1
0x4000a83	     0xf8ef2000000	                           jle 0x4000b7b	      5749	cp-demangle.c	FUNCTION_88	FOR_1	IF_1
0x4000a89	      0x41803c245f	                    cmp byte [r12], 0x5f	      5750	cp-demangle.c	FUNCTION_88	FOR_1	IF_1
0x4000a8e	     0xf85e7000000	                           jne 0x4000b7b	      5750	cp-demangle.c	FUNCTION_88	FOR_1	IF_1
0x4000a94	    0x41807c24015f	                cmp byte [r12 + 1], 0x5f	      5751	cp-demangle.c	FUNCTION_88	FOR_1	IF_1
0x4000a9a	     0xf85db000000	                           jne 0x4000b7b	      5751	cp-demangle.c	FUNCTION_88	FOR_1	IF_1
0x4000aa0	    0x41807c240255	                cmp byte [r12 + 2], 0x55	      5752	cp-demangle.c	FUNCTION_88	FOR_1	IF_1
0x4000aa6	     0xf85cf000000	                           jne 0x4000b7b	      5752	cp-demangle.c	FUNCTION_88	FOR_1	IF_1
0x4000aac	      0x498d6c2403	                      lea rbp, [r12 + 3]	      5758	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2
0x4000ab1	          0x4939ed	                            cmp r13, rbp	      5758	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2
0x4000ab4	     0xf86c1000000	                           jbe 0x4000b7b	      5758	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2
0x4000aba	      0xb900000000	                              mov ecx, 0	      5758	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2
0x4000abf	         0xfb64500	                   movzx eax, byte [rbp]	      5762	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	IF_2
0x4000ac3	          0x8d50d0	                   lea edx, [rax - 0x30]	      5762	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	IF_2
0x4000ac6	          0x80fa09	                               cmp dl, 9	      5762	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	IF_2
0x4000ac9	            0x7708	                            ja 0x4000ad3	      5762	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	IF_2
0x4000acb	           0xfbec0	                           movsx eax, al	      5763	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	IF_2
0x4000ace	          0x8d50d0	                   lea edx, [rax - 0x30]	      5763	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	IF_2
0x4000ad1	            0xeb1e	                           jmp 0x4000af1	      5763	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	IF_2
0x4000ad3	          0x8d50bf	                   lea edx, [rax - 0x41]	      5764	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_1	IF_3
0x4000ad6	          0x80fa05	                               cmp dl, 5	      5764	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_1	IF_3
0x4000ad9	            0x7708	                            ja 0x4000ae3	      5764	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_1	IF_3
0x4000adb	           0xfbec0	                           movsx eax, al	      5765	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_1	IF_3
0x4000ade	          0x8d50c9	                   lea edx, [rax - 0x37]	      5765	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_1	IF_3
0x4000ae1	            0xeb0e	                           jmp 0x4000af1	      5765	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_1	IF_3
0x4000ae3	          0x8d509f	                   lea edx, [rax - 0x61]	      5766	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_2	IF_4
0x4000ae6	          0x80fa05	                               cmp dl, 5	      5766	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_2	IF_4
0x4000ae9	            0x771b	                            ja 0x4000b06	      5766	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_2	IF_4
0x4000aeb	           0xfbec0	                           movsx eax, al	      5767	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_2	IF_4
0x4000aee	          0x8d50a9	                   lea edx, [rax - 0x57]	      5767	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_2	IF_4
0x4000af1	        0x48c1e104	                              shl rcx, 4	      5771	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_3
0x4000af5	          0x4863c2	                         movsxd rax, edx	      5771	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_3
0x4000af8	          0x4801c1	                            add rcx, rax	      5771	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_3
0x4000afb	        0x4883c501	                              add rbp, 1	      5758	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2
0x4000aff	          0x4939ed	                            cmp r13, rbp	      5758	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2
0x4000b02	            0x75bb	                           jne 0x4000abf	      5758	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2
0x4000b04	            0xeb75	                           jmp 0x4000b7b	      5758	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2
0x4000b06	          0x4939ed	                            cmp r13, rbp	      5775	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	ELSE_3	IF_5
0x4000b09	            0x7670	                           jbe 0x4000b7b	      5775	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	ELSE_3	IF_5
0x4000b0b	        0x807d005f	                    cmp byte [rbp], 0x5f	      5775	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	ELSE_3	IF_5
0x4000b0f	            0x756a	                           jne 0x4000b7b	      5775	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	ELSE_3	IF_5
0x4000b11	    0x4881f9ff0000	                           cmp rcx, 0xff	      5775	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	ELSE_3	IF_5
0x4000b18	            0x7761	                            ja 0x4000b7b	      5775	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	ELSE_3	IF_5
0x4000b1a	          0x4189cc	                           mov r12d, ecx	      5777	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	ELSE_3	IF_5	CALL_1
0x4000b1d	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4000b28	            0x752f	                           jne 0x4000b59	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4000b2a	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4000b31	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4000b38	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4000b3d	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4000b40	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4000b46	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4000b51	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4000b59	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4000b60	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4000b64	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4000b6b	        0x44882403	              mov byte [rbx + rax], r12b	      4235	cp-demangle.c	FUNCTION_72
0x4000b6f	    0x4488a3080100	            mov byte [rbx + 0x108], r12b	      4236	cp-demangle.c	FUNCTION_72
0x4000b76	          0x4989ec	                            mov r12, rbp	      4236	cp-demangle.c	FUNCTION_72
0x4000b79	            0xeb5e	                           jmp 0x4000bd9	      4236	cp-demangle.c	FUNCTION_72
0x4000b7b	      0x410fb62c24	                   movzx ebp, byte [r12]	      5783	cp-demangle.c	FUNCTION_88	FOR_1	CALL_2
0x4000b80	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4000b8b	            0x752f	                           jne 0x4000bbc	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4000b8d	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4000b94	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4000b9b	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4000ba0	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4000ba3	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4000ba9	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4000bb4	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4000bbc	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4000bc3	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4000bc7	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4000bce	        0x40882c03	               mov byte [rbx + rax], bpl	      4235	cp-demangle.c	FUNCTION_72
0x4000bd2	    0x4088ab080100	             mov byte [rbx + 0x108], bpl	      4236	cp-demangle.c	FUNCTION_72
0x4000bd9	        0x4983c401	                              add r12, 1	      5747	cp-demangle.c	FUNCTION_88	FOR_1
0x4000bdd	          0x4d39e5	                            cmp r13, r12	      5747	cp-demangle.c	FUNCTION_88	FOR_1
0x4000be0	     0xf8793feffff	                            ja 0x4000a79	      5747	cp-demangle.c	FUNCTION_88	FOR_1
0x4000be6	      0xe9cd3a0000	                           jmp 0x40046b8	      5747	cp-demangle.c	FUNCTION_88	FOR_1
0x4000beb	        0x488b5508	                mov rdx, qword [rbp + 8]	      4653	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_5
0x4000bef	      0xe8ee3a0000	                   call sym.d_print_comp	      4653	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_5
0x4000bf4	    0x41bc00000000	                             mov r12d, 0	      4653	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_5
0x4000bfa	    0x41bf00000000	                             mov r15d, 0	      4653	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_5
0x4000c00	      0x450fb63424	                  movzx r14d, byte [r12]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4000c05	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4000c10	            0x752f	                           jne 0x4000c41	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4000c12	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4000c19	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4000c20	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4000c25	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4000c28	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4000c2e	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4000c39	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4000c41	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4000c48	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4000c4c	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4000c53	        0x44883403	              mov byte [rbx + rax], r14b	      4235	cp-demangle.c	FUNCTION_72
0x4000c57	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x4000c5e	        0x4983c401	                              add r12, 1	      4236	cp-demangle.c	FUNCTION_72
0x4000c62	          0x4d39e7	                            cmp r15, r12	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4000c65	            0x7599	                           jne 0x4000c00	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4000c67	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	      4655	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_7
0x4000c6b	          0x4489ee	                           mov esi, r13d	      4655	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_7
0x4000c6e	          0x4889df	                            mov rdi, rbx	      4655	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_7
0x4000c71	      0xe86c3a0000	                   call sym.d_print_comp	      4655	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_7
0x4000c76	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4000c81	            0x752f	                           jne 0x4000cb2	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4000c83	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4000c8a	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4000c91	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4000c96	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4000c99	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4000c9f	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4000caa	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4000cb2	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4000cb9	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4000cbd	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4000cc4	        0xc604035d	              mov byte [rbx + rax], 0x5d	      4235	cp-demangle.c	FUNCTION_72
0x4000cc8	    0xc68308010000	           mov byte [rbx + 0x108], 0x5d 	      4236	cp-demangle.c	FUNCTION_72
0x4000ccf	      0xe9e4390000	                           jmp 0x40046b8	      4236	cp-demangle.c	FUNCTION_72
0x4000cd4	        0x488b5508	                mov rdx, qword [rbp + 8]	      4661	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_9
0x4000cd8	      0xe8053a0000	                   call sym.d_print_comp	      4661	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_9
0x4000cdd	        0x41f6c504	                            test r13b, 4	      4662	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_4
0x4000ce1	            0x7575	                           jne 0x4000d58	      4662	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_4
0x4000ce3	    0x41bc00000000	                             mov r12d, 0	      4662	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_4
0x4000ce9	    0x41bf00000000	                             mov r15d, 0	      4662	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_4
0x4000cef	      0x450fb63424	                  movzx r14d, byte [r12]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4000cf4	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4000cff	            0x752f	                           jne 0x4000d30	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4000d01	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4000d08	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4000d0f	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4000d14	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4000d17	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4000d1d	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4000d28	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4000d30	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4000d37	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4000d3b	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4000d42	        0x44883403	              mov byte [rbx + rax], r14b	      4235	cp-demangle.c	FUNCTION_72
0x4000d46	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x4000d4d	        0x4983c401	                              add r12, 1	      4236	cp-demangle.c	FUNCTION_72
0x4000d51	          0x4d39e7	                            cmp r15, r12	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4000d54	            0x7599	                           jne 0x4000cef	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4000d56	            0xeb59	                           jmp 0x4000db1	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4000d58	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4000d63	            0x752f	                           jne 0x4000d94	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4000d65	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4000d6c	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4000d73	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4000d78	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4000d7b	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4000d81	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4000d8c	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4000d94	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4000d9b	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4000d9f	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4000da6	        0xc604032e	              mov byte [rbx + rax], 0x2e	      4235	cp-demangle.c	FUNCTION_72
0x4000daa	    0xc68308010000	           mov byte [rbx + 0x108], 0x2e 	      4236	cp-demangle.c	FUNCTION_72
0x4000db1	        0x488b6d10	            mov rbp, qword [rbp + 0x10] 	      4667	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4000db5	        0x837d0046	                   cmp dword [rbp], 0x46	      4668	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_5
0x4000db9	            0x7536	                           jne 0x4000df1	      4668	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_5
0x4000dbb	      0xba0d000000	                            mov edx, 0xd	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4000dc0	      0xbe00000000	                              mov esi, 0	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4000dc5	          0x4889df	                            mov rdi, rbx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4000dc8	      0xe81df8ffff	                call sym.d_append_buffer	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4000dcd	          0x8b4510	            mov eax, dword [rbp + 0x10] 	      4671	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_5	CALL_13
0x4000dd0	          0x8d7001	                      lea esi, [rax + 1]	      4671	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_5	CALL_13
0x4000dd3	          0x4889df	                            mov rdi, rbx	      4671	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_5	CALL_13
0x4000dd6	      0xe8bcfaffff	                   call sym.d_append_num	      4671	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_5	CALL_13
0x4000ddb	      0xba03000000	                              mov edx, 3	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4000de0	      0xbe00000000	                              mov esi, 0	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4000de5	          0x4889df	                            mov rdi, rbx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4000de8	      0xe8fdf7ffff	                call sym.d_append_buffer	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4000ded	        0x488b6d08	                mov rbp, qword [rbp + 8]	      4673	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_5
0x4000df1	          0x4889ea	                            mov rdx, rbp	      4675	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_15
0x4000df4	          0x4489ee	                           mov esi, r13d	      4675	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_15
0x4000df7	          0x4889df	                            mov rdi, rbx	      4675	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_15
0x4000dfa	      0xe8e3380000	                   call sym.d_print_comp	      4675	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_15
0x4000dff	      0xe9b4380000	                           jmp 0x40046b8	      4677	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4000e04	    0x488b87280100	           mov rax, qword [rdi + 0x128] 	      4690	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4000e0b	      0x4889442418	             mov qword [rsp + 0x18], rax	      4690	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4000e10	    0x48c787280100	              mov qword [rdi + 0x128], 0	      4691	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4000e1b	        0x4c8b7508	                mov r14, qword [rbp + 8]	      4693	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4000e1f	          0x4d85f6	                           test r14, r14	      4694	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4000e22	            0x751e	                           jne 0x4000e42	      4694	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4000e24	      0xe980000000	                           jmp 0x4000ea9	      4694	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4000e29	        0x4983c420	                           add r12, 0x20	      4694	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4000e2d	        0x4183ff04	                             cmp r15d, 4	      4696	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1	IF_6
0x4000e31	            0x7526	                           jne 0x4000e59	      4696	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1	IF_6
0x4000e33	    0xc78330010000	              mov dword [rbx + 0x130], 1	      4207	cp-demangle.c	FUNCTION_69
0x4000e3d	      0xe976380000	                           jmp 0x40046b8	      4207	cp-demangle.c	FUNCTION_69
0x4000e42	    0x488b87200100	           mov rax, qword [rdi + 0x120] 	      4706	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4000e49	      0x4889442408	                mov qword [rsp + 8], rax	      4706	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4000e4e	      0x4c8d642440	                   lea r12, [rsp + 0x40]	      4706	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4000e53	    0x41bf00000000	                             mov r15d, 0	      4706	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4000e59	    0x488b83280100	           mov rax, qword [rbx + 0x128] 	      4702	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4000e60	        0x49890424	                    mov qword [r12], rax	      4702	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4000e64	    0x4c89a3280100	            mov qword [rbx + 0x128], r12	      4703	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4000e6b	      0x4d89742408	                mov qword [r12 + 8], r14	      4704	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4000e70	    0x41c744241000	               mov dword [r12 + 0x10], 0	      4705	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4000e79	      0x488b442408	                mov rax, qword [rsp + 8]	      4706	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4000e7e	      0x4989442418	             mov qword [r12 + 0x18], rax	      4706	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4000e83	        0x4183c701	                             add r15d, 1	      4707	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4000e87	          0x418b06	                    mov eax, dword [r14]	      4709	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1	IF_7	CALL_17
0x4000e8a	        0x89442410	             mov dword [rsp + 0x10], eax	      4709	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1	IF_7	CALL_17
0x4000e8e	            0x89c7	                            mov edi, eax	      4709	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1	IF_7	CALL_17
0x4000e90	      0xe8abf1ffff	       call sym.is_fnqual_component_type	      4709	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1	IF_7	CALL_17
0x4000e95	            0x85c0	                           test eax, eax	      4709	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1	IF_7	CALL_17
0x4000e97	            0x740b	                            je 0x4000ea4	      4709	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1	IF_7	CALL_17
0x4000e99	        0x4d8b7608	                mov r14, qword [r14 + 8]	      4712	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4000e9d	          0x4d85f6	                           test r14, r14	      4694	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4000ea0	            0x7587	                           jne 0x4000e29	      4694	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4000ea2	            0xeb05	                           jmp 0x4000ea9	      4694	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4000ea4	          0x4d85f6	                           test r14, r14	      4715	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_8
0x4000ea7	            0x750f	                           jne 0x4000eb8	      4715	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_8
0x4000ea9	    0xc78330010000	              mov dword [rbx + 0x130], 1	      4207	cp-demangle.c	FUNCTION_69
0x4000eb3	      0xe900380000	                           jmp 0x40046b8	      4207	cp-demangle.c	FUNCTION_69
0x4000eb8	      0x837c241002	               cmp dword [rsp + 0x10], 2	      4725	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9
0x4000ebd	     0xf85bd000000	                           jne 0x4000f80	      4725	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9
0x4000ec3	        0x4d8b7610	            mov r14, qword [r14 + 0x10] 	      4727	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9
0x4000ec7	        0x41833e46	                   cmp dword [r14], 0x46	      4728	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	IF_10
0x4000ecb	            0x7504	                           jne 0x4000ed1	      4728	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	IF_10
0x4000ecd	        0x4d8b7608	                mov r14, qword [r14 + 8]	      4729	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	IF_10
0x4000ed1	          0x4d85f6	                           test r14, r14	      4730	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	IF_11
0x4000ed4	     0xf8596000000	                           jne 0x4000f70	      4730	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	IF_11
0x4000eda	    0xc78330010000	              mov dword [rbx + 0x130], 1	      4207	cp-demangle.c	FUNCTION_69
0x4000ee4	      0xe9cf370000	                           jmp 0x40046b8	      4207	cp-demangle.c	FUNCTION_69
0x4000ee9	        0x4183ff03	                             cmp r15d, 3	      4737	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	IF_12
0x4000eed	            0x760f	                           jbe 0x4000efe	      4737	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	IF_12
0x4000eef	    0xc78330010000	              mov dword [rbx + 0x130], 1	      4207	cp-demangle.c	FUNCTION_69
0x4000ef9	      0xe9ba370000	                           jmp 0x40046b8	      4207	cp-demangle.c	FUNCTION_69
0x4000efe	          0x4489fa	                           mov edx, r15d	      4743	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4000f01	        0x48c1e205	                              shl rdx, 5	      4743	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4000f05	        0x418d47ff	                      lea eax, [r15 - 1]	      4743	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4000f09	        0x48c1e005	                              shl rax, 5	      4743	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4000f0d	      0x488b4c0440	      mov rcx, qword [rsp + rax + 0x40] 	      4743	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4000f12	      0x48894c1440	       mov qword [rsp + rdx + 0x40], rcx	      4743	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4000f17	      0x488b4c0448	      mov rcx, qword [rsp + rax + 0x48] 	      4743	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4000f1c	      0x48894c1448	       mov qword [rsp + rdx + 0x48], rcx	      4743	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4000f21	      0x488b4c0450	      mov rcx, qword [rsp + rax + 0x50] 	      4743	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4000f26	      0x48894c1450	       mov qword [rsp + rdx + 0x50], rcx	      4743	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4000f2b	      0x488b4c0458	      mov rcx, qword [rsp + rax + 0x58] 	      4743	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4000f30	      0x48894c1458	       mov qword [rsp + rdx + 0x58], rcx	      4743	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4000f35	      0x488d4c2440	                   lea rcx, [rsp + 0x40]	      4744	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4000f3a	          0x4801c1	                            add rcx, rax	      4744	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4000f3d	      0x48894c1440	       mov qword [rsp + rdx + 0x40], rcx	      4744	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4000f42	      0x488d4c2440	                   lea rcx, [rsp + 0x40]	      4745	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4000f47	          0x4801ca	                            add rdx, rcx	      4745	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4000f4a	    0x488993280100	            mov qword [rbx + 0x128], rdx	      4745	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4000f51	      0x4c89740448	       mov qword [rsp + rax + 0x48], r14	      4747	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4000f56	    0xc74404500000	         mov dword [rsp + rax + 0x50], 0	      4748	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4000f5e	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      4749	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4000f63	      0x48894c0458	       mov qword [rsp + rax + 0x58], rcx	      4749	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4000f68	        0x4183c701	                             add r15d, 1	      4750	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4000f6c	        0x4d8b7608	                mov r14, qword [r14 + 8]	      4752	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4000f70	          0x418b3e	                    mov edi, dword [r14]	      4735	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	CALL_20
0x4000f73	      0xe8c8f0ffff	       call sym.is_fnqual_component_type	      4735	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	CALL_20
0x4000f78	            0x85c0	                           test eax, eax	      4735	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	CALL_20
0x4000f7a	     0xf8569ffffff	                           jne 0x4000ee9	      4735	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	CALL_20
0x4000f80	        0x41833e04	                      cmp dword [r14], 4	      4758	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_13
0x4000f84	            0x751b	                           jne 0x4000fa1	      4758	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_13
0x4000f86	      0x488b442408	                mov rax, qword [rsp + 8]	      4760	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_13
0x4000f8b	      0x4889442420	             mov qword [rsp + 0x20], rax	      4760	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_13
0x4000f90	      0x488d442420	                   lea rax, [rsp + 0x20]	      4761	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_13
0x4000f95	    0x488983200100	            mov qword [rbx + 0x120], rax	      4761	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_13
0x4000f9c	      0x4c89742428	             mov qword [rsp + 0x28], r14	      4762	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_13
0x4000fa1	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	      4765	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_22
0x4000fa5	          0x4489ee	                           mov esi, r13d	      4765	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_22
0x4000fa8	          0x4889df	                            mov rdi, rbx	      4765	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_22
0x4000fab	      0xe832370000	                   call sym.d_print_comp	      4765	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_22
0x4000fb0	        0x41833e04	                      cmp dword [r14], 4	      4767	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_14
0x4000fb4	            0x750c	                           jne 0x4000fc2	      4767	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_14
0x4000fb6	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4768	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_14
0x4000fbb	    0x488983200100	            mov qword [rbx + 0x120], rax	      4768	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_14
0x4000fc2	          0x4585ff	                         test r15d, r15d	      4772	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_3
0x4000fc5	     0xf848b000000	                            je 0x4001056	      4772	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_3
0x4000fcb	        0x4183ef01	                             sub r15d, 1	      4774	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_3
0x4000fcf	          0x4489f8	                           mov eax, r15d	      4775	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_3	IF_15
0x4000fd2	        0x48c1e005	                              shl rax, 5	      4775	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_3	IF_15
0x4000fd6	      0x837c045000	         cmp dword [rsp + rax + 0x50], 0	      4775	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_3	IF_15
0x4000fdb	            0x7570	                           jne 0x400104d	      4775	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_3	IF_15
0x4000fdd	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4000fe8	            0x752f	                           jne 0x4001019	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4000fea	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4000ff1	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4000ff8	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4000ffd	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001000	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001006	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4001011	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4001019	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4001020	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4001024	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x400102b	        0xc6040320	              mov byte [rbx + rax], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x400102f	    0xc68308010000	           mov byte [rbx + 0x108], 0x20 	      4236	cp-demangle.c	FUNCTION_72
0x4001036	          0x4489f8	                           mov eax, r15d	      4778	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_3	IF_15	CALL_24
0x4001039	        0x48c1e005	                              shl rax, 5	      4778	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_3	IF_15	CALL_24
0x400103d	      0x488b540448	      mov rdx, qword [rsp + rax + 0x48] 	      4778	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_3	IF_15	CALL_24
0x4001042	          0x4489ee	                           mov esi, r13d	      4778	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_3	IF_15	CALL_24
0x4001045	          0x4889df	                            mov rdi, rbx	      4778	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_3	IF_15	CALL_24
0x4001048	      0xe832370000	                    call sym.d_print_mod	      4778	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_3	IF_15	CALL_24
0x400104d	          0x4585ff	                         test r15d, r15d	      4772	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_3
0x4001050	     0xf8575ffffff	                           jne 0x4000fcb	      4772	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_3
0x4001056	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4782	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400105b	    0x488983280100	            mov qword [rbx + 0x128], rax	      4782	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001062	      0xe951360000	                           jmp 0x40046b8	      4784	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001067	    0x4c8ba7700100	           mov r12, qword [rdi + 0x170] 	      4795	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400106e	    0x4889af700100	            mov qword [rdi + 0x170], rbp	      4796	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001075	    0x4c8bb7280100	           mov r14, qword [rdi + 0x128] 	      4802	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400107c	    0x48c787280100	              mov qword [rdi + 0x128], 0	      4803	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001087	        0x488b5508	                mov rdx, qword [rbp + 8]	      4805	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400108b	        0x40f6c604	                             test sil, 4	      4807	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16
0x400108f	            0x744b	                            je 0x40010dc	      4807	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16
0x4001091	          0x833a00	                      cmp dword [rdx], 0	      4808	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16
0x4001094	            0x7546	                           jne 0x40010dc	      4808	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16
0x4001096	        0x837a1006	               cmp dword [rdx + 0x10], 6	      4809	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16
0x400109a	            0x7540	                           jne 0x40010dc	      4809	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16
0x400109c	        0x488b7208	                mov rsi, qword [rdx + 8]	      4810	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16	CALL_25
0x40010a0	      0xbf00000000	                              mov edi, 0	      4810	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16	CALL_25
0x40010a5	      0xb906000000	                              mov ecx, 6	      4810	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16	CALL_25
0x40010aa	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4810	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16	CALL_25
0x40010ac	           0xf97c1	                                 seta cl	      4810	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16	CALL_25
0x40010af	           0xf92c0	                                 setb al	      4810	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16	CALL_25
0x40010b2	            0x38c1	                              cmp cl, al	      4810	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16	CALL_25
0x40010b4	            0x7526	                           jne 0x40010dc	      4810	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16	CALL_25
0x40010b6	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	      4815	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16	CALL_26
0x40010ba	          0x4489ee	                           mov esi, r13d	      4815	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16	CALL_26
0x40010bd	          0x4889df	                            mov rdi, rbx	      4815	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16	CALL_26
0x40010c0	      0xe81d360000	                   call sym.d_print_comp	      4815	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16	CALL_26
0x40010c5	      0xba02000000	                              mov edx, 2	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40010ca	      0xbe00000000	                              mov esi, 0	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40010cf	          0x4889df	                            mov rdi, rbx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40010d2	      0xe813f5ffff	                call sym.d_append_buffer	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40010d7	      0xe990010000	                           jmp 0x400126c	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40010dc	          0x4489ee	                           mov esi, r13d	      4820	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	CALL_28
0x40010df	          0x4889df	                            mov rdi, rbx	      4820	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	CALL_28
0x40010e2	      0xe8fb350000	                   call sym.d_print_comp	      4820	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	CALL_28
0x40010e7	    0x80bb08010000	           cmp byte [rbx + 0x108], 0x3c 	      4821	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	IF_17	CALL_29
0x40010ee	            0x7559	                           jne 0x4001149	      4821	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	IF_17	CALL_29
0x40010f0	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40010fb	            0x752f	                           jne 0x400112c	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40010fd	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4001104	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400110b	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001110	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001113	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001119	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4001124	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400112c	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4001133	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4001137	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x400113e	        0xc6040320	              mov byte [rbx + rax], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x4001142	    0xc68308010000	           mov byte [rbx + 0x108], 0x20 	      4236	cp-demangle.c	FUNCTION_72
0x4001149	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001154	            0x752f	                           jne 0x4001185	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001156	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400115d	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001164	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001169	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400116c	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001172	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x400117d	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4001185	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x400118c	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4001190	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4001197	        0xc604033c	              mov byte [rbx + rax], 0x3c	      4235	cp-demangle.c	FUNCTION_72
0x400119b	    0xc68308010000	           mov byte [rbx + 0x108], 0x3c 	      4236	cp-demangle.c	FUNCTION_72
0x40011a2	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	      4824	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	CALL_32
0x40011a6	          0x4489ee	                           mov esi, r13d	      4824	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	CALL_32
0x40011a9	          0x4889df	                            mov rdi, rbx	      4824	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	CALL_32
0x40011ac	      0xe831350000	                   call sym.d_print_comp	      4824	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	CALL_32
0x40011b1	    0x80bb08010000	           cmp byte [rbx + 0x108], 0x3e 	      4827	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	IF_18	CALL_33
0x40011b8	            0x7559	                           jne 0x4001213	      4827	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	IF_18	CALL_33
0x40011ba	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40011c5	            0x752f	                           jne 0x40011f6	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40011c7	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40011ce	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40011d5	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40011da	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40011dd	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40011e3	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x40011ee	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40011f6	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x40011fd	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4001201	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4001208	        0xc6040320	              mov byte [rbx + rax], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x400120c	    0xc68308010000	           mov byte [rbx + 0x108], 0x20 	      4236	cp-demangle.c	FUNCTION_72
0x4001213	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400121e	            0x752f	                           jne 0x400124f	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001220	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4001227	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400122e	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001233	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001236	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400123c	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4001247	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400124f	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4001256	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x400125a	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4001261	        0xc604033e	              mov byte [rbx + rax], 0x3e	      4235	cp-demangle.c	FUNCTION_72
0x4001265	    0xc68308010000	           mov byte [rbx + 0x108], 0x3e 	      4236	cp-demangle.c	FUNCTION_72
0x400126c	    0x4c89b3280100	            mov qword [rbx + 0x128], r14	      4832	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001273	    0x4c89a3700100	            mov qword [rbx + 0x170], r12	      4833	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400127a	      0xe939340000	                           jmp 0x40046b8	      4835	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400127f	    0x83bf38010000	              cmp dword [rdi + 0x138], 0	      4839	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_19
0x4001286	     0xf8435010000	                            je 0x40013c1	      4839	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_19
0x400128c	    0x41bc00000000	                             mov r12d, 0	      4839	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_19
0x4001292	    0x41be00000000	                             mov r14d, 0	      4839	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_19
0x4001298	      0x450fb62c24	                  movzx r13d, byte [r12]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x400129d	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40012a8	            0x752f	                           jne 0x40012d9	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40012aa	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40012b1	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40012b8	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40012bd	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40012c0	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40012c6	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x40012d1	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40012d9	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x40012e0	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x40012e4	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40012eb	        0x44882c03	              mov byte [rbx + rax], r13b	      4235	cp-demangle.c	FUNCTION_72
0x40012ef	    0x4488ab080100	            mov byte [rbx + 0x108], r13b	      4236	cp-demangle.c	FUNCTION_72
0x40012f6	        0x4983c401	                              add r12, 1	      4236	cp-demangle.c	FUNCTION_72
0x40012fa	          0x4d39f4	                            cmp r12, r14	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40012fd	            0x7599	                           jne 0x4001298	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40012ff	        0x488b4508	                mov rax, qword [rbp + 8]	        33	stdio2.h	FUNCTION_109	CALL_1
0x4001303	    0x488dac24c000	                   lea rbp, [rsp + 0xc0]	        33	stdio2.h	FUNCTION_109	CALL_1
0x400130b	        0x448d4001	                      lea r8d, [rax + 1]	        33	stdio2.h	FUNCTION_109	CALL_1
0x400130f	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_109	CALL_1
0x4001314	      0xba19000000	                           mov edx, 0x19	        33	stdio2.h	FUNCTION_109	CALL_1
0x4001319	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_109	CALL_1
0x400131e	          0x4889ef	                            mov rdi, rbp	        33	stdio2.h	FUNCTION_109	CALL_1
0x4001321	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_109	CALL_1
0x4001326	      0xe800000000	                          call 0x400132b	        33	stdio2.h	FUNCTION_109	CALL_1
0x400132b	      0xb800000000	                              mov eax, 0	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4001330	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4001337	          0x4889ef	                            mov rdi, rbp	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400133a	            0xf2ae	              repne scasb al, byte [rdi]	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400133c	          0x48f7d1	                                 not rcx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400133f	        0x4883e901	                              sub rcx, 1	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001343	          0x4989cd	                            mov r13, rcx	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001346	     0xf846c330000	                            je 0x40046b8	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400134c	      0xbd00000000	                              mov ebp, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001351	    0x440fb6a42cc0	    movzx r12d, byte [rsp + rbp + 0xc0] 	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x400135a	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001365	            0x752f	                           jne 0x4001396	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001367	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400136e	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001375	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400137a	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400137d	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001383	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x400138e	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4001396	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x400139d	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x40013a1	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40013a8	        0x44882403	              mov byte [rbx + rax], r12b	      4235	cp-demangle.c	FUNCTION_72
0x40013ac	    0x4488a3080100	            mov byte [rbx + 0x108], r12b	      4236	cp-demangle.c	FUNCTION_72
0x40013b3	        0x4883c501	                              add rbp, 1	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40013b7	          0x4939ed	                            cmp r13, rbp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40013ba	            0x7595	                           jne 0x4001351	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40013bc	      0xe9f7320000	                           jmp 0x40046b8	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40013c1	          0x4889ee	                            mov rsi, rbp	      4850	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	CALL_38
0x40013c4	      0xe80af3ffff	     call sym.d_lookup_template_argument	      4850	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	CALL_38
0x40013c9	          0x4885c0	                           test rax, rax	      4852	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	IF_20
0x40013cc	            0x7418	                            je 0x40013e6	      4852	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	IF_20
0x40013ce	          0x83382f	                   cmp dword [rax], 0x2f	      4852	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	IF_20
0x40013d1	            0x7522	                           jne 0x40013f5	      4852	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	IF_20
0x40013d3	    0x8bb33c010000	           mov esi, dword [rbx + 0x13c] 	      4853	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	CALL_39
0x40013d9	          0x4889c7	                            mov rdi, rax	      4853	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	CALL_39
0x40013dc	      0xe899f2ffff	      call sym.d_index_template_argument	      4853	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	CALL_39
0x40013e1	          0x4885c0	                           test rax, rax	      4855	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	IF_21
0x40013e4	            0x750f	                           jne 0x40013f5	      4855	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	IF_21
0x40013e6	    0xc78330010000	              mov dword [rbx + 0x130], 1	      4207	cp-demangle.c	FUNCTION_69
0x40013f0	      0xe9c3320000	                           jmp 0x40046b8	      4207	cp-demangle.c	FUNCTION_69
0x40013f5	    0x488bab200100	           mov rbp, qword [rbx + 0x120] 	      4866	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4
0x40013fc	        0x488b5500	                    mov rdx, qword [rbp]	      4867	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4
0x4001400	    0x488993200100	            mov qword [rbx + 0x120], rdx	      4867	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4
0x4001407	          0x4889c2	                            mov rdx, rax	      4869	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	CALL_41
0x400140a	          0x4489ee	                           mov esi, r13d	      4869	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	CALL_41
0x400140d	          0x4889df	                            mov rdi, rbx	      4869	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	CALL_41
0x4001410	      0xe8cd320000	                   call sym.d_print_comp	      4869	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	CALL_41
0x4001415	    0x4889ab200100	            mov qword [rbx + 0x120], rbp	      4871	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4
0x400141c	      0xe997320000	                           jmp 0x40046b8	      4871	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4
0x4001421	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	      4876	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_42
0x4001425	      0xe8b8320000	                   call sym.d_print_comp	      4876	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_42
0x400142a	      0xe989320000	                           jmp 0x40046b8	      4877	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400142f	    0x4881bf000100	          cmp qword [rdi + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400143a	            0x752c	                           jne 0x4001468	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400143c	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4001443	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400144a	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400144f	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001455	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4001460	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4001468	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x400146f	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4001473	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x400147a	        0xc604037e	              mov byte [rbx + rax], 0x7e	      4235	cp-demangle.c	FUNCTION_72
0x400147e	    0xc68308010000	           mov byte [rbx + 0x108], 0x7e 	      4236	cp-demangle.c	FUNCTION_72
0x4001485	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	      4881	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_44
0x4001489	          0x4489ee	                           mov esi, r13d	      4881	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_44
0x400148c	          0x4889df	                            mov rdi, rbx	      4881	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_44
0x400148f	      0xe84e320000	                   call sym.d_print_comp	      4881	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_44
0x4001494	      0xe91f320000	                           jmp 0x40046b8	      4882	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001499	    0x41bc00000000	                             mov r12d, 0	      4882	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400149f	    0x41bf00000000	                             mov r15d, 0	      4882	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40014a5	      0x450fb63424	                  movzx r14d, byte [r12]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x40014aa	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40014b5	            0x752f	                           jne 0x40014e6	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40014b7	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40014be	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40014c5	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40014ca	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40014cd	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40014d3	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x40014de	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40014e6	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x40014ed	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x40014f1	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40014f8	        0x44883403	              mov byte [rbx + rax], r14b	      4235	cp-demangle.c	FUNCTION_72
0x40014fc	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x4001503	        0x4983c401	                              add r12, 1	      4236	cp-demangle.c	FUNCTION_72
0x4001507	          0x4d39fc	                            cmp r12, r15	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400150a	            0x7599	                           jne 0x40014a5	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400150c	        0x488b5508	                mov rdx, qword [rbp + 8]	      4886	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_46
0x4001510	          0x4489ee	                           mov esi, r13d	      4886	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_46
0x4001513	          0x4889df	                            mov rdi, rbx	      4886	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_46
0x4001516	      0xe8c7310000	                   call sym.d_print_comp	      4886	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_46
0x400151b	      0xe998310000	                           jmp 0x40046b8	      4887	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001520	    0x41bc00000000	                             mov r12d, 0	      4887	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001526	    0x41bf00000000	                             mov r15d, 0	      4887	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400152c	      0x450fb63424	                  movzx r14d, byte [r12]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4001531	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400153c	            0x752f	                           jne 0x400156d	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400153e	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4001545	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400154c	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001551	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001554	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400155a	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4001565	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400156d	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4001574	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4001578	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x400157f	        0x44883403	              mov byte [rbx + rax], r14b	      4235	cp-demangle.c	FUNCTION_72
0x4001583	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x400158a	        0x4983c401	                              add r12, 1	      4236	cp-demangle.c	FUNCTION_72
0x400158e	          0x4d39fc	                            cmp r12, r15	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001591	            0x7599	                           jne 0x400152c	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001593	        0x488b5508	                mov rdx, qword [rbp + 8]	      4891	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_48
0x4001597	          0x4489ee	                           mov esi, r13d	      4891	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_48
0x400159a	          0x4889df	                            mov rdi, rbx	      4891	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_48
0x400159d	      0xe840310000	                   call sym.d_print_comp	      4891	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_48
0x40015a2	      0xe911310000	                           jmp 0x40046b8	      4892	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40015a7	    0x41bc00000000	                             mov r12d, 0	      4892	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40015ad	    0x41bf00000000	                             mov r15d, 0	      4892	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40015b3	      0x450fb63424	                  movzx r14d, byte [r12]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x40015b8	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40015c3	            0x752f	                           jne 0x40015f4	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40015c5	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40015cc	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40015d3	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40015d8	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40015db	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40015e1	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x40015ec	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40015f4	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x40015fb	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x40015ff	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4001606	        0x44883403	              mov byte [rbx + rax], r14b	      4235	cp-demangle.c	FUNCTION_72
0x400160a	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x4001611	        0x4983c401	                              add r12, 1	      4236	cp-demangle.c	FUNCTION_72
0x4001615	          0x4d39fc	                            cmp r12, r15	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001618	            0x7599	                           jne 0x40015b3	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400161a	        0x488b5508	                mov rdx, qword [rbp + 8]	      4896	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_50
0x400161e	          0x4489ee	                           mov esi, r13d	      4896	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_50
0x4001621	          0x4889df	                            mov rdi, rbx	      4896	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_50
0x4001624	      0xe8b9300000	                   call sym.d_print_comp	      4896	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_50
0x4001629	    0x41bc00000000	                             mov r12d, 0	      4896	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_50
0x400162f	    0x41bf00000000	                             mov r15d, 0	      4896	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_50
0x4001635	      0x450fb63424	                  movzx r14d, byte [r12]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x400163a	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001645	            0x752f	                           jne 0x4001676	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001647	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400164e	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001655	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400165a	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400165d	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001663	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x400166e	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4001676	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x400167d	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4001681	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4001688	        0x44883403	              mov byte [rbx + rax], r14b	      4235	cp-demangle.c	FUNCTION_72
0x400168c	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x4001693	        0x4983c401	                              add r12, 1	      4236	cp-demangle.c	FUNCTION_72
0x4001697	          0x4d39fc	                            cmp r12, r15	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400169a	            0x7599	                           jne 0x4001635	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400169c	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	      4898	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_52
0x40016a0	          0x4489ee	                           mov esi, r13d	      4898	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_52
0x40016a3	          0x4889df	                            mov rdi, rbx	      4898	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_52
0x40016a6	      0xe837300000	                   call sym.d_print_comp	      4898	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_52
0x40016ab	      0xe908300000	                           jmp 0x40046b8	      4899	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40016b0	    0x41bc00000000	                             mov r12d, 0	      4899	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40016b6	    0x41bf00000000	                             mov r15d, 0	      4899	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40016bc	      0x450fb63424	                  movzx r14d, byte [r12]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x40016c1	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40016cc	            0x752f	                           jne 0x40016fd	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40016ce	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40016d5	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40016dc	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40016e1	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40016e4	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40016ea	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x40016f5	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40016fd	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4001704	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4001708	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x400170f	        0x44883403	              mov byte [rbx + rax], r14b	      4235	cp-demangle.c	FUNCTION_72
0x4001713	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x400171a	        0x4983c401	                              add r12, 1	      4236	cp-demangle.c	FUNCTION_72
0x400171e	          0x4d39fc	                            cmp r12, r15	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001721	            0x7599	                           jne 0x40016bc	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001723	        0x488b5508	                mov rdx, qword [rbp + 8]	      4903	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_54
0x4001727	          0x4489ee	                           mov esi, r13d	      4903	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_54
0x400172a	          0x4889df	                            mov rdi, rbx	      4903	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_54
0x400172d	      0xe8b02f0000	                   call sym.d_print_comp	      4903	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_54
0x4001732	      0xe9812f0000	                           jmp 0x40046b8	      4904	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001737	    0x41bc00000000	                             mov r12d, 0	      4904	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400173d	    0x41bf00000000	                             mov r15d, 0	      4904	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001743	      0x450fb63424	                  movzx r14d, byte [r12]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4001748	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001753	            0x752f	                           jne 0x4001784	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001755	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400175c	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001763	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001768	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400176b	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001771	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x400177c	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4001784	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x400178b	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x400178f	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4001796	        0x44883403	              mov byte [rbx + rax], r14b	      4235	cp-demangle.c	FUNCTION_72
0x400179a	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x40017a1	        0x4983c401	                              add r12, 1	      4236	cp-demangle.c	FUNCTION_72
0x40017a5	          0x4d39fc	                            cmp r12, r15	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40017a8	            0x7599	                           jne 0x4001743	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40017aa	        0x488b5508	                mov rdx, qword [rbp + 8]	      4908	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_56
0x40017ae	          0x4489ee	                           mov esi, r13d	      4908	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_56
0x40017b1	          0x4889df	                            mov rdi, rbx	      4908	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_56
0x40017b4	      0xe8292f0000	                   call sym.d_print_comp	      4908	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_56
0x40017b9	      0xe9fa2e0000	                           jmp 0x40046b8	      4909	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40017be	    0x41bc00000000	                             mov r12d, 0	      4909	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40017c4	    0x41bf00000000	                             mov r15d, 0	      4909	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40017ca	      0x450fb63424	                  movzx r14d, byte [r12]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x40017cf	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40017da	            0x752f	                           jne 0x400180b	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40017dc	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40017e3	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40017ea	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40017ef	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40017f2	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40017f8	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4001803	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400180b	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4001812	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4001816	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x400181d	        0x44883403	              mov byte [rbx + rax], r14b	      4235	cp-demangle.c	FUNCTION_72
0x4001821	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x4001828	        0x4983c401	                              add r12, 1	      4236	cp-demangle.c	FUNCTION_72
0x400182c	          0x4d39fc	                            cmp r12, r15	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400182f	            0x7599	                           jne 0x40017ca	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001831	        0x488b5508	                mov rdx, qword [rbp + 8]	      4913	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_58
0x4001835	          0x4489ee	                           mov esi, r13d	      4913	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_58
0x4001838	          0x4889df	                            mov rdi, rbx	      4913	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_58
0x400183b	      0xe8a22e0000	                   call sym.d_print_comp	      4913	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_58
0x4001840	      0xe9732e0000	                           jmp 0x40046b8	      4914	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001845	    0x41bc00000000	                             mov r12d, 0	      4914	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400184b	    0x41bf00000000	                             mov r15d, 0	      4914	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001851	      0x450fb63424	                  movzx r14d, byte [r12]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4001856	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001861	            0x752f	                           jne 0x4001892	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001863	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400186a	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001871	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001876	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001879	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400187f	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x400188a	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4001892	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4001899	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x400189d	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40018a4	        0x44883403	              mov byte [rbx + rax], r14b	      4235	cp-demangle.c	FUNCTION_72
0x40018a8	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x40018af	        0x4983c401	                              add r12, 1	      4236	cp-demangle.c	FUNCTION_72
0x40018b3	          0x4d39fc	                            cmp r12, r15	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40018b6	            0x7599	                           jne 0x4001851	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40018b8	        0x488b5508	                mov rdx, qword [rbp + 8]	      4918	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_60
0x40018bc	          0x4489ee	                           mov esi, r13d	      4918	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_60
0x40018bf	          0x4889df	                            mov rdi, rbx	      4918	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_60
0x40018c2	      0xe81b2e0000	                   call sym.d_print_comp	      4918	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_60
0x40018c7	      0xe9ec2d0000	                           jmp 0x40046b8	      4919	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40018cc	    0x41bc00000000	                             mov r12d, 0	      4919	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40018d2	    0x41bf00000000	                             mov r15d, 0	      4919	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40018d8	      0x450fb63424	                  movzx r14d, byte [r12]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x40018dd	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40018e8	            0x752f	                           jne 0x4001919	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40018ea	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40018f1	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40018f8	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40018fd	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001900	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001906	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4001911	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4001919	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4001920	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4001924	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x400192b	        0x44883403	              mov byte [rbx + rax], r14b	      4235	cp-demangle.c	FUNCTION_72
0x400192f	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x4001936	        0x4983c401	                              add r12, 1	      4236	cp-demangle.c	FUNCTION_72
0x400193a	          0x4d39fc	                            cmp r12, r15	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400193d	            0x7599	                           jne 0x40018d8	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400193f	        0x488b5508	                mov rdx, qword [rbp + 8]	      4923	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_62
0x4001943	          0x4489ee	                           mov esi, r13d	      4923	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_62
0x4001946	          0x4889df	                            mov rdi, rbx	      4923	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_62
0x4001949	      0xe8942d0000	                   call sym.d_print_comp	      4923	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_62
0x400194e	      0xe9652d0000	                           jmp 0x40046b8	      4924	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001953	    0x41bc00000000	                             mov r12d, 0	      4924	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001959	    0x41bf00000000	                             mov r15d, 0	      4924	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400195f	      0x450fb63424	                  movzx r14d, byte [r12]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4001964	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400196f	            0x752f	                           jne 0x40019a0	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001971	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4001978	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400197f	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001984	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001987	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400198d	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4001998	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40019a0	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x40019a7	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x40019ab	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40019b2	        0x44883403	              mov byte [rbx + rax], r14b	      4235	cp-demangle.c	FUNCTION_72
0x40019b6	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x40019bd	        0x4983c401	                              add r12, 1	      4236	cp-demangle.c	FUNCTION_72
0x40019c1	          0x4d39fc	                            cmp r12, r15	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40019c4	            0x7599	                           jne 0x400195f	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40019c6	        0x488b5508	                mov rdx, qword [rbp + 8]	      4928	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_64
0x40019ca	          0x4489ee	                           mov esi, r13d	      4928	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_64
0x40019cd	          0x4889df	                            mov rdi, rbx	      4928	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_64
0x40019d0	      0xe80d2d0000	                   call sym.d_print_comp	      4928	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_64
0x40019d5	      0xe9de2c0000	                           jmp 0x40046b8	      4929	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40019da	    0x41bc00000000	                             mov r12d, 0	      4929	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40019e0	    0x41bf00000000	                             mov r15d, 0	      4929	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40019e6	      0x450fb63424	                  movzx r14d, byte [r12]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x40019eb	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40019f6	            0x752f	                           jne 0x4001a27	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40019f8	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40019ff	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001a06	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001a0b	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001a0e	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001a14	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4001a1f	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4001a27	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4001a2e	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4001a32	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4001a39	        0x44883403	              mov byte [rbx + rax], r14b	      4235	cp-demangle.c	FUNCTION_72
0x4001a3d	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x4001a44	        0x4983c401	                              add r12, 1	      4236	cp-demangle.c	FUNCTION_72
0x4001a48	          0x4d39fc	                            cmp r12, r15	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001a4b	            0x7599	                           jne 0x40019e6	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001a4d	        0x488b5508	                mov rdx, qword [rbp + 8]	      4933	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_66
0x4001a51	          0x4489ee	                           mov esi, r13d	      4933	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_66
0x4001a54	          0x4889df	                            mov rdi, rbx	      4933	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_66
0x4001a57	      0xe8862c0000	                   call sym.d_print_comp	      4933	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_66
0x4001a5c	      0xe9572c0000	                           jmp 0x40046b8	      4934	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001a61	    0x41bc00000000	                             mov r12d, 0	      4934	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001a67	    0x41bf00000000	                             mov r15d, 0	      4934	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001a6d	      0x450fb63424	                  movzx r14d, byte [r12]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4001a72	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001a7d	            0x752f	                           jne 0x4001aae	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001a7f	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4001a86	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001a8d	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001a92	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001a95	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001a9b	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4001aa6	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4001aae	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4001ab5	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4001ab9	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4001ac0	        0x44883403	              mov byte [rbx + rax], r14b	      4235	cp-demangle.c	FUNCTION_72
0x4001ac4	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x4001acb	        0x4983c401	                              add r12, 1	      4236	cp-demangle.c	FUNCTION_72
0x4001acf	          0x4d39fc	                            cmp r12, r15	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001ad2	            0x7599	                           jne 0x4001a6d	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001ad4	        0x488b5508	                mov rdx, qword [rbp + 8]	      4938	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_68
0x4001ad8	          0x4489ee	                           mov esi, r13d	      4938	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_68
0x4001adb	          0x4889df	                            mov rdi, rbx	      4938	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_68
0x4001ade	      0xe8ff2b0000	                   call sym.d_print_comp	      4938	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_68
0x4001ae3	      0xe9d02b0000	                           jmp 0x40046b8	      4939	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001ae8	    0x41bc00000000	                             mov r12d, 0	      4939	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001aee	    0x41bf00000000	                             mov r15d, 0	      4939	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001af4	      0x450fb63424	                  movzx r14d, byte [r12]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4001af9	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001b04	            0x752f	                           jne 0x4001b35	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001b06	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4001b0d	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001b14	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001b19	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001b1c	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001b22	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4001b2d	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4001b35	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4001b3c	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4001b40	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4001b47	        0x44883403	              mov byte [rbx + rax], r14b	      4235	cp-demangle.c	FUNCTION_72
0x4001b4b	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x4001b52	        0x4983c401	                              add r12, 1	      4236	cp-demangle.c	FUNCTION_72
0x4001b56	          0x4d39fc	                            cmp r12, r15	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001b59	            0x7599	                           jne 0x4001af4	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001b5b	        0x488b5508	                mov rdx, qword [rbp + 8]	      4943	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_70
0x4001b5f	          0x4489ee	                           mov esi, r13d	      4943	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_70
0x4001b62	          0x4889df	                            mov rdi, rbx	      4943	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_70
0x4001b65	      0xe8782b0000	                   call sym.d_print_comp	      4943	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_70
0x4001b6a	      0xe9492b0000	                           jmp 0x40046b8	      4944	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001b6f	    0x41bc00000000	                             mov r12d, 0	      4944	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001b75	    0x41bf00000000	                             mov r15d, 0	      4944	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001b7b	      0x450fb63424	                  movzx r14d, byte [r12]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4001b80	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001b8b	            0x752f	                           jne 0x4001bbc	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001b8d	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4001b94	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001b9b	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001ba0	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001ba3	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001ba9	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4001bb4	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4001bbc	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4001bc3	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4001bc7	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4001bce	        0x44883403	              mov byte [rbx + rax], r14b	      4235	cp-demangle.c	FUNCTION_72
0x4001bd2	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x4001bd9	        0x4983c401	                              add r12, 1	      4236	cp-demangle.c	FUNCTION_72
0x4001bdd	          0x4d39fc	                            cmp r12, r15	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001be0	            0x7599	                           jne 0x4001b7b	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001be2	        0x488b5508	                mov rdx, qword [rbp + 8]	      4948	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_72
0x4001be6	          0x4489ee	                           mov esi, r13d	      4948	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_72
0x4001be9	          0x4889df	                            mov rdi, rbx	      4948	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_72
0x4001bec	      0xe8f12a0000	                   call sym.d_print_comp	      4948	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_72
0x4001bf1	      0xe9c22a0000	                           jmp 0x40046b8	      4949	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001bf6	    0x41bc00000000	                             mov r12d, 0	      4949	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001bfc	    0x41bf00000000	                             mov r15d, 0	      4949	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001c02	      0x450fb63424	                  movzx r14d, byte [r12]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4001c07	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001c12	            0x752f	                           jne 0x4001c43	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001c14	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4001c1b	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001c22	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001c27	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001c2a	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001c30	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4001c3b	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4001c43	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4001c4a	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4001c4e	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4001c55	        0x44883403	              mov byte [rbx + rax], r14b	      4235	cp-demangle.c	FUNCTION_72
0x4001c59	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x4001c60	        0x4983c401	                              add r12, 1	      4236	cp-demangle.c	FUNCTION_72
0x4001c64	          0x4d39fc	                            cmp r12, r15	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001c67	            0x7599	                           jne 0x4001c02	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001c69	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	      4953	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_74
0x4001c6d	          0x4489ee	                           mov esi, r13d	      4953	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_74
0x4001c70	          0x4889df	                            mov rdi, rbx	      4953	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_74
0x4001c73	      0xe86a2a0000	                   call sym.d_print_comp	      4953	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_74
0x4001c78	    0x41bc00000000	                             mov r12d, 0	      4953	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_74
0x4001c7e	    0x41bf00000000	                             mov r15d, 0	      4953	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_74
0x4001c84	      0x450fb63424	                  movzx r14d, byte [r12]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4001c89	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001c94	            0x752f	                           jne 0x4001cc5	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001c96	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4001c9d	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001ca4	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001ca9	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001cac	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001cb2	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4001cbd	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4001cc5	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4001ccc	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4001cd0	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4001cd7	        0x44883403	              mov byte [rbx + rax], r14b	      4235	cp-demangle.c	FUNCTION_72
0x4001cdb	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x4001ce2	        0x4983c401	                              add r12, 1	      4236	cp-demangle.c	FUNCTION_72
0x4001ce6	          0x4d39e7	                            cmp r15, r12	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001ce9	            0x7599	                           jne 0x4001c84	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001ceb	        0x488b5508	                mov rdx, qword [rbp + 8]	      4955	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_76
0x4001cef	          0x4489ee	                           mov esi, r13d	      4955	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_76
0x4001cf2	          0x4889df	                            mov rdi, rbx	      4955	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_76
0x4001cf5	      0xe8e8290000	                   call sym.d_print_comp	      4955	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_76
0x4001cfa	      0xe9b9290000	                           jmp 0x40046b8	      4956	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001cff	    0x41bc00000000	                             mov r12d, 0	      4956	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001d05	    0x41bf00000000	                             mov r15d, 0	      4956	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001d0b	      0x450fb63424	                  movzx r14d, byte [r12]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4001d10	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001d1b	            0x752f	                           jne 0x4001d4c	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001d1d	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4001d24	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001d2b	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001d30	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001d33	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001d39	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4001d44	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4001d4c	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4001d53	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4001d57	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4001d5e	        0x44883403	              mov byte [rbx + rax], r14b	      4235	cp-demangle.c	FUNCTION_72
0x4001d62	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x4001d69	        0x4983c401	                              add r12, 1	      4236	cp-demangle.c	FUNCTION_72
0x4001d6d	          0x4d39fc	                            cmp r12, r15	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001d70	            0x7599	                           jne 0x4001d0b	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001d72	        0x488b5508	                mov rdx, qword [rbp + 8]	      4960	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_78
0x4001d76	          0x4489ee	                           mov esi, r13d	      4960	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_78
0x4001d79	          0x4889df	                            mov rdi, rbx	      4960	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_78
0x4001d7c	      0xe861290000	                   call sym.d_print_comp	      4960	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_78
0x4001d81	      0xe932290000	                           jmp 0x40046b8	      4961	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001d86	    0x41bc00000000	                             mov r12d, 0	      4961	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001d8c	    0x41bf00000000	                             mov r15d, 0	      4961	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001d92	      0x450fb63424	                  movzx r14d, byte [r12]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4001d97	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001da2	            0x752f	                           jne 0x4001dd3	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001da4	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4001dab	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001db2	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001db7	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001dba	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001dc0	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4001dcb	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4001dd3	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4001dda	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4001dde	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4001de5	        0x44883403	              mov byte [rbx + rax], r14b	      4235	cp-demangle.c	FUNCTION_72
0x4001de9	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x4001df0	        0x4983c401	                              add r12, 1	      4236	cp-demangle.c	FUNCTION_72
0x4001df4	          0x4d39e7	                            cmp r15, r12	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001df7	            0x7599	                           jne 0x4001d92	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001df9	        0x488b5508	                mov rdx, qword [rbp + 8]	      4965	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_80
0x4001dfd	          0x4489ee	                           mov esi, r13d	      4965	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_80
0x4001e00	          0x4889df	                            mov rdi, rbx	      4965	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_80
0x4001e03	      0xe8da280000	                   call sym.d_print_comp	      4965	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_80
0x4001e08	      0xe9ab280000	                           jmp 0x40046b8	      4966	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001e0d	    0x41bc00000000	                             mov r12d, 0	      4966	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001e13	    0x41bf00000000	                             mov r15d, 0	      4966	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001e19	      0x450fb63424	                  movzx r14d, byte [r12]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4001e1e	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001e29	            0x752f	                           jne 0x4001e5a	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001e2b	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4001e32	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001e39	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001e3e	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001e41	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001e47	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4001e52	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4001e5a	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4001e61	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4001e65	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4001e6c	        0x44883403	              mov byte [rbx + rax], r14b	      4235	cp-demangle.c	FUNCTION_72
0x4001e70	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x4001e77	        0x4983c401	                              add r12, 1	      4236	cp-demangle.c	FUNCTION_72
0x4001e7b	          0x4d39e7	                            cmp r15, r12	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001e7e	            0x7599	                           jne 0x4001e19	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001e80	        0x488b5508	                mov rdx, qword [rbp + 8]	      4970	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_82
0x4001e84	          0x4489ee	                           mov esi, r13d	      4970	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_82
0x4001e87	          0x4889df	                            mov rdi, rbx	      4970	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_82
0x4001e8a	      0xe853280000	                   call sym.d_print_comp	      4970	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_82
0x4001e8f	      0xe924280000	                           jmp 0x40046b8	      4971	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001e94	        0x4c636d10	         movsxd r13, dword [rbp + 0x10] 	      4974	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_83
0x4001e98	        0x4c8b7508	                mov r14, qword [rbp + 8]	      4974	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_83
0x4001e9c	          0x4d85ed	                           test r13, r13	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001e9f	     0xf8413280000	                            je 0x40046b8	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001ea5	      0xbd00000000	                              mov ebp, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001eaa	      0x450fb6242e	            movzx r12d, byte [r14 + rbp]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4001eaf	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001eba	            0x752f	                           jne 0x4001eeb	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001ebc	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4001ec3	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001eca	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001ecf	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001ed2	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001ed8	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4001ee3	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4001eeb	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4001ef2	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4001ef6	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4001efd	        0x44882403	              mov byte [rbx + rax], r12b	      4235	cp-demangle.c	FUNCTION_72
0x4001f01	    0x4488a3080100	            mov byte [rbx + 0x108], r12b	      4236	cp-demangle.c	FUNCTION_72
0x4001f08	        0x4883c501	                              add rbp, 1	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001f0c	          0x4939ed	                            cmp r13, rbp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001f0f	            0x7599	                           jne 0x4001eaa	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001f11	      0xe9a2270000	                           jmp 0x40046b8	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001f16	    0x488b97280100	           mov rdx, qword [rdi + 0x128] 	      4987	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1
0x4001f1d	          0x4885d2	                           test rdx, rdx	      4987	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1
0x4001f20	     0xf84c5260000	                            je 0x40045eb	      4987	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1
0x4001f26	        0x837a1000	               cmp dword [rdx + 0x10], 0	      4989	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22
0x4001f2a	            0x752a	                           jne 0x4001f56	      4989	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22
0x4001f2c	        0x488b4a08	                mov rcx, qword [rdx + 8]	      4991	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22	IF_23
0x4001f30	            0x8b09	                    mov ecx, dword [rcx]	      4991	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22	IF_23
0x4001f32	          0x8d71e7	                   lea esi, [rcx - 0x19]	      4991	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22	IF_23
0x4001f35	          0x83fe02	                              cmp esi, 2	      4991	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22	IF_23
0x4001f38	     0xf87b5260000	                            ja 0x40045f3	      4991	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22	IF_23
0x4001f3e	            0x39c8	                            cmp eax, ecx	      4995	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22	IF_24
0x4001f40	            0x7514	                           jne 0x4001f56	      4995	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22	IF_24
0x4001f42	        0x488b5508	                mov rdx, qword [rbp + 8]	      4997	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22	IF_24	CALL_84
0x4001f46	          0x4489ee	                           mov esi, r13d	      4997	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22	IF_24	CALL_84
0x4001f49	          0x4889df	                            mov rdi, rbx	      4997	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22	IF_24	CALL_84
0x4001f4c	      0xe891270000	                   call sym.d_print_comp	      4997	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22	IF_24	CALL_84
0x4001f51	      0xe962270000	                           jmp 0x40046b8	      4998	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22	IF_24
0x4001f56	          0x488b12	                    mov rdx, qword [rdx]	      4987	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1
0x4001f59	          0x4885d2	                           test rdx, rdx	      4987	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1
0x4001f5c	            0x75c8	                           jne 0x4001f26	      4987	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1
0x4001f5e	    0x41be00000000	                             mov r14d, 0	      4633	cp-demangle.c	FUNCTION_86
0x4001f64	      0xe99a260000	                           jmp 0x4004603	      4633	cp-demangle.c	FUNCTION_86
0x4001f69	        0x488b4508	                mov rax, qword [rbp + 8]	      5009	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001f6d	    0x83bf38010000	              cmp dword [rdi + 0x138], 0	      5010	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25
0x4001f74	     0xf8570010000	                           jne 0x40020ea	      5010	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25
0x4001f7a	    0x41be00000000	                             mov r14d, 0	      4633	cp-demangle.c	FUNCTION_86
0x4001f80	          0x833805	                      cmp dword [rax], 5	      5011	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25
0x4001f83	     0xf8567010000	                           jne 0x40020f0	      5011	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25
0x4001f89	    0x8bbf58010000	           mov edi, dword [rdi + 0x158] 	      4547	cp-demangle.c	FUNCTION_84	FOR_1
0x4001f8f	            0x85ff	                           test edi, edi	      4547	cp-demangle.c	FUNCTION_84	FOR_1
0x4001f91	            0x7e3d	                           jle 0x4001fd0	      4547	cp-demangle.c	FUNCTION_84	FOR_1
0x4001f93	    0x488bb3500100	           mov rsi, qword [rbx + 0x150] 	      4548	cp-demangle.c	FUNCTION_84	FOR_1	IF_1
0x4001f9a	          0x483b06	                    cmp rax, qword [rsi]	      4548	cp-demangle.c	FUNCTION_84	FOR_1	IF_1
0x4001f9d	            0x7428	                            je 0x4001fc7	      4548	cp-demangle.c	FUNCTION_84	FOR_1	IF_1
0x4001f9f	        0x488d5610	                   lea rdx, [rsi + 0x10]	      4548	cp-demangle.c	FUNCTION_84	FOR_1	IF_1
0x4001fa3	          0x8d4fff	                      lea ecx, [rdi - 1]	      4548	cp-demangle.c	FUNCTION_84	FOR_1	IF_1
0x4001fa6	        0x4883c101	                              add rcx, 1	      4548	cp-demangle.c	FUNCTION_84	FOR_1	IF_1
0x4001faa	        0x48c1e104	                              shl rcx, 4	      4548	cp-demangle.c	FUNCTION_84	FOR_1	IF_1
0x4001fae	          0x4801f1	                            add rcx, rsi	      4548	cp-demangle.c	FUNCTION_84	FOR_1	IF_1
0x4001fb1	            0xeb0d	                           jmp 0x4001fc0	      4548	cp-demangle.c	FUNCTION_84	FOR_1	IF_1
0x4001fb3	          0x4889d6	                            mov rsi, rdx	      4548	cp-demangle.c	FUNCTION_84	FOR_1	IF_1
0x4001fb6	        0x4883c210	                           add rdx, 0x10	      4548	cp-demangle.c	FUNCTION_84	FOR_1	IF_1
0x4001fba	        0x483b42f0	             cmp rax, qword [rdx - 0x10]	      4548	cp-demangle.c	FUNCTION_84	FOR_1	IF_1
0x4001fbe	            0x7407	                            je 0x4001fc7	      4548	cp-demangle.c	FUNCTION_84	FOR_1	IF_1
0x4001fc0	          0x4839ca	                            cmp rdx, rcx	      4547	cp-demangle.c	FUNCTION_84	FOR_1
0x4001fc3	            0x75ee	                           jne 0x4001fb3	      4547	cp-demangle.c	FUNCTION_84	FOR_1
0x4001fc5	            0xeb09	                           jmp 0x4001fd0	      4547	cp-demangle.c	FUNCTION_84	FOR_1
0x4001fc7	          0x4885f6	                           test rsi, rsi	      5016	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_26
0x4001fca	     0xf85a1000000	                           jne 0x4002071	      5016	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_26
0x4001fd0	    0x39bb5c010000	           cmp dword [rbx + 0x15c], edi 	      4507	cp-demangle.c	FUNCTION_83	IF_1
0x4001fd6	            0x7f0f	                            jg 0x4001fe7	      4507	cp-demangle.c	FUNCTION_83	IF_1
0x4001fd8	    0xc78330010000	              mov dword [rbx + 0x130], 1	      4207	cp-demangle.c	FUNCTION_69
0x4001fe2	      0xe9d1260000	                           jmp 0x40046b8	      4207	cp-demangle.c	FUNCTION_69
0x4001fe7	          0x4863d7	                         movsxd rdx, edi	      4512	cp-demangle.c	FUNCTION_83
0x4001fea	        0x48c1e204	                              shl rdx, 4	      4512	cp-demangle.c	FUNCTION_83
0x4001fee	    0x480393500100	            add rdx, qword [rbx + 0x150]	      4512	cp-demangle.c	FUNCTION_83
0x4001ff5	          0x83c701	                              add edi, 1	      4513	cp-demangle.c	FUNCTION_83
0x4001ff8	    0x89bb58010000	            mov dword [rbx + 0x158], edi	      4513	cp-demangle.c	FUNCTION_83
0x4001ffe	          0x488902	                    mov qword [rdx], rax	      4515	cp-demangle.c	FUNCTION_83
0x4002001	        0x4883c208	                              add rdx, 8	      4516	cp-demangle.c	FUNCTION_83
0x4002005	    0x488bbb200100	           mov rdi, qword [rbx + 0x120] 	      4518	cp-demangle.c	FUNCTION_83	FOR_1
0x400200c	            0xeb45	                           jmp 0x4002053	      4518	cp-demangle.c	FUNCTION_83	FOR_1
0x400200e	    0x8bb368010000	           mov esi, dword [rbx + 0x168] 	      4522	cp-demangle.c	FUNCTION_83	FOR_1	IF_2
0x4002014	    0x3bb36c010000	           cmp esi, dword [rbx + 0x16c] 	      4522	cp-demangle.c	FUNCTION_83	FOR_1	IF_2
0x400201a	            0x7c0f	                            jl 0x400202b	      4522	cp-demangle.c	FUNCTION_83	FOR_1	IF_2
0x400201c	    0xc78330010000	              mov dword [rbx + 0x130], 1	      4207	cp-demangle.c	FUNCTION_69
0x4002026	      0xe98d260000	                           jmp 0x40046b8	      4207	cp-demangle.c	FUNCTION_69
0x400202b	          0x4863ce	                         movsxd rcx, esi	      4527	cp-demangle.c	FUNCTION_83	FOR_1
0x400202e	        0x48c1e104	                              shl rcx, 4	      4527	cp-demangle.c	FUNCTION_83	FOR_1
0x4002032	    0x48038b600100	            add rcx, qword [rbx + 0x160]	      4527	cp-demangle.c	FUNCTION_83	FOR_1
0x4002039	          0x83c601	                              add esi, 1	      4528	cp-demangle.c	FUNCTION_83	FOR_1
0x400203c	    0x89b368010000	            mov dword [rbx + 0x168], esi	      4528	cp-demangle.c	FUNCTION_83	FOR_1
0x4002042	        0x488b7708	                mov rsi, qword [rdi + 8]	      4530	cp-demangle.c	FUNCTION_83	FOR_1
0x4002046	        0x48897108	                mov qword [rcx + 8], rsi	      4530	cp-demangle.c	FUNCTION_83	FOR_1
0x400204a	          0x48890a	                    mov qword [rdx], rcx	      4531	cp-demangle.c	FUNCTION_83	FOR_1
0x400204d	          0x4889ca	                            mov rdx, rcx	      4532	cp-demangle.c	FUNCTION_83	FOR_1
0x4002050	          0x488b3f	                    mov rdi, qword [rdi]	      4518	cp-demangle.c	FUNCTION_83	FOR_1
0x4002053	          0x4885ff	                           test rdi, rdi	      4518	cp-demangle.c	FUNCTION_83	FOR_1
0x4002056	            0x75b6	                           jne 0x400200e	      4518	cp-demangle.c	FUNCTION_83	FOR_1
0x4002058	    0x48c702000000	                      mov qword [rdx], 0	      4535	cp-demangle.c	FUNCTION_83
0x400205f	    0x83bb30010000	              cmp dword [rbx + 0x130], 0	      5023	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_26	IF_27	CALL_87
0x4002066	     0xf8411260000	                            je 0x400467d	      5023	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_26	IF_27	CALL_87
0x400206c	      0xe947260000	                           jmp 0x40046b8	      5023	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_26	IF_27	CALL_87
0x4002071	    0x488bbb480100	           mov rdi, qword [rbx + 0x148] 	      5034	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2
0x4002078	          0x4885ff	                           test rdi, rdi	      5034	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2
0x400207b	     0xf8439250000	                            je 0x40045ba	      5034	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2
0x4002081	          0x483b07	                    cmp rax, qword [rdi]	      5037	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2	IF_28
0x4002084	     0xf84f3250000	                            je 0x400467d	      5037	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2	IF_28
0x400208a	          0x4889fa	                            mov rdx, rdi	      5037	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2	IF_28
0x400208d	            0xeb1a	                           jmp 0x40020a9	      5037	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2	IF_28
0x400208f	          0x488b0a	                    mov rcx, qword [rdx]	      5037	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2	IF_28
0x4002092	          0x4839c8	                            cmp rax, rcx	      5037	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2	IF_28
0x4002095	     0xf84e2250000	                            je 0x400467d	      5037	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2	IF_28
0x400209b	          0x4839d7	                            cmp rdi, rdx	      5039	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2	IF_28
0x400209e	            0x7409	                            je 0x40020a9	      5039	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2	IF_28
0x40020a0	          0x4839cd	                            cmp rbp, rcx	      5039	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2	IF_28
0x40020a3	     0xf84d4250000	                            je 0x400467d	      5039	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2	IF_28
0x40020a9	        0x488b5208	                mov rdx, qword [rdx + 8]	      5035	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2
0x40020ad	          0x4885d2	                           test rdx, rdx	      5034	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2
0x40020b0	            0x75dd	                           jne 0x400208f	      5034	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2
0x40020b2	      0xe903250000	                           jmp 0x40045ba	      5034	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2
0x40020b7	          0x83382f	                   cmp dword [rax], 0x2f	      5055	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_30
0x40020ba	            0x7534	                           jne 0x40020f0	      5055	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_30
0x40020bc	    0x8bb33c010000	           mov esi, dword [rbx + 0x13c] 	      5056	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	CALL_89
0x40020c2	          0x4889c7	                            mov rdi, rax	      5056	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	CALL_89
0x40020c5	      0xe8b0e5ffff	      call sym.d_index_template_argument	      5056	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	CALL_89
0x40020ca	          0x4885c0	                           test rax, rax	      5058	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_31
0x40020cd	            0x7521	                           jne 0x40020f0	      5058	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_31
0x40020cf	          0x4585f6	                         test r14d, r14d	      5060	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_31	IF_32
0x40020d2	            0x7407	                            je 0x40020db	      5060	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_31	IF_32
0x40020d4	    0x4c89a3200100	            mov qword [rbx + 0x120], r12	      5061	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_31	IF_32
0x40020db	    0xc78330010000	              mov dword [rbx + 0x130], 1	      4207	cp-demangle.c	FUNCTION_69
0x40020e5	      0xe9ce250000	                           jmp 0x40046b8	      4207	cp-demangle.c	FUNCTION_69
0x40020ea	    0x41be00000000	                             mov r14d, 0	      4633	cp-demangle.c	FUNCTION_86
0x40020f0	            0x8b10	                    mov edx, dword [rax]	      5070	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_33
0x40020f2	          0x83fa23	                           cmp edx, 0x23	      5070	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_33
0x40020f5	     0xf8400250000	                            je 0x40045fb	      5070	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_33
0x40020fb	          0x3b5500	                    cmp edx, dword [rbp]	      5071	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_33
0x40020fe	     0xf84fc240000	                            je 0x4004600	      5071	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_33
0x4002104	          0x83fa24	                           cmp edx, 0x24	      5073	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_6	IF_34
0x4002107	     0xf85f6240000	                           jne 0x4004603	      5073	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_6	IF_34
0x400210d	        0x488b5008	                mov rdx, qword [rax + 8]	      5074	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_6	IF_34
0x4002111	            0xeb0b	                           jmp 0x400211e	      5074	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_6	IF_34
0x4002113	    0x41be00000000	                             mov r14d, 0	      4633	cp-demangle.c	FUNCTION_86
0x4002119	      0xba00000000	                              mov edx, 0	      4626	cp-demangle.c	FUNCTION_86
0x400211e	    0x488b83280100	           mov rax, qword [rbx + 0x128] 	      5088	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002125	      0x4889442420	             mov qword [rsp + 0x20], rax	      5088	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400212a	      0x488d442420	                   lea rax, [rsp + 0x20]	      5089	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400212f	    0x488983280100	            mov qword [rbx + 0x128], rax	      5089	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002136	      0x48896c2428	             mov qword [rsp + 0x28], rbp	      5090	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400213b	    0xc74424300000	               mov dword [rsp + 0x30], 0	      5091	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002143	    0x488b83200100	           mov rax, qword [rbx + 0x120] 	      5092	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400214a	      0x4889442438	             mov qword [rsp + 0x38], rax	      5092	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400214f	          0x4885d2	                           test rdx, rdx	      5094	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_35
0x4002152	            0x7504	                           jne 0x4002158	      5094	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_35
0x4002154	        0x488b5508	                mov rdx, qword [rbp + 8]	      5095	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_35
0x4002158	          0x4489ee	                           mov esi, r13d	      5097	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_91
0x400215b	          0x4889df	                            mov rdi, rbx	      5097	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_91
0x400215e	      0xe87f250000	                   call sym.d_print_comp	      5097	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_91
0x4002163	      0x837c243000	               cmp dword [rsp + 0x30], 0	      5101	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_36
0x4002168	            0x750e	                           jne 0x4002178	      5101	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_36
0x400216a	          0x4889ea	                            mov rdx, rbp	      5102	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_92
0x400216d	          0x4489ee	                           mov esi, r13d	      5102	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_92
0x4002170	          0x4889df	                            mov rdi, rbx	      5102	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_92
0x4002173	      0xe807260000	                    call sym.d_print_mod	      5102	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_92
0x4002178	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      5104	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400217d	    0x488983280100	            mov qword [rbx + 0x128], rax	      5104	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002184	          0x4585f6	                         test r14d, r14d	      5106	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_37
0x4002187	     0xf842b250000	                            je 0x40046b8	      5106	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_37
0x400218d	    0x4c89a3200100	            mov qword [rbx + 0x120], r12	      5107	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_37
0x4002194	      0xe91f250000	                           jmp 0x40046b8	      5107	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_37
0x4002199	        0x40f6c604	                             test sil, 4	      5113	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_38
0x400219d	     0xf8585000000	                           jne 0x4002228	      5113	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_38
0x40021a3	        0x488b4508	                mov rax, qword [rbp + 8]	      5115	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_38
0x40021a7	        0x4c636808	            movsxd r13, dword [rax + 8] 	      5114	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_38	CALL_93
0x40021ab	          0x4c8b30	                    mov r14, qword [rax]	      5114	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_38	CALL_93
0x40021ae	          0x4d85ed	                           test r13, r13	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40021b1	     0xf8401250000	                            je 0x40046b8	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40021b7	      0xbd00000000	                              mov ebp, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40021bc	      0x450fb6242e	            movzx r12d, byte [r14 + rbp]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x40021c1	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40021cc	            0x752f	                           jne 0x40021fd	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40021ce	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40021d5	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40021dc	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40021e1	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40021e4	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40021ea	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x40021f5	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40021fd	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4002204	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4002208	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x400220f	        0x44882403	              mov byte [rbx + rax], r12b	      4235	cp-demangle.c	FUNCTION_72
0x4002213	    0x4488a3080100	            mov byte [rbx + 0x108], r12b	      4236	cp-demangle.c	FUNCTION_72
0x400221a	        0x4883c501	                              add rbp, 1	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400221e	          0x4939ed	                            cmp r13, rbp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002221	            0x7599	                           jne 0x40021bc	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002223	      0xe990240000	                           jmp 0x40046b8	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002228	        0x488b4508	                mov rax, qword [rbp + 8]	      5118	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_7
0x400222c	        0x4c636818	         movsxd r13, dword [rax + 0x18] 	      5117	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_7	CALL_94
0x4002230	        0x4c8b7010	            mov r14, qword [rax + 0x10] 	      5117	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_7	CALL_94
0x4002234	          0x4d85ed	                           test r13, r13	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002237	     0xf847b240000	                            je 0x40046b8	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400223d	      0xbd00000000	                              mov ebp, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002242	      0x450fb6242e	            movzx r12d, byte [r14 + rbp]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4002247	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002252	            0x752f	                           jne 0x4002283	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002254	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400225b	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002262	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002267	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400226a	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002270	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x400227b	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4002283	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x400228a	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x400228e	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4002295	        0x44882403	              mov byte [rbx + rax], r12b	      4235	cp-demangle.c	FUNCTION_72
0x4002299	    0x4488a3080100	            mov byte [rbx + 0x108], r12b	      4236	cp-demangle.c	FUNCTION_72
0x40022a0	        0x4883c501	                              add rbp, 1	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40022a4	          0x4939ed	                            cmp r13, rbp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40022a7	            0x7599	                           jne 0x4002242	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40022a9	      0xe90a240000	                           jmp 0x40046b8	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40022ae	        0x488b5508	                mov rdx, qword [rbp + 8]	      5122	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_95
0x40022b2	      0xe82b240000	                   call sym.d_print_comp	      5122	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_95
0x40022b7	      0xe9fc230000	                           jmp 0x40046b8	      5123	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40022bc	          0x4189f4	                           mov r12d, esi	      5127	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_39
0x40022bf	        0x4183e420	                          and r12d, 0x20	      5127	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_39
0x40022c3	     0xf8470230000	                            je 0x4004639	      5127	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_39
0x40022c9	          0x4189f6	                           mov r14d, esi	      5128	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_39	CALL_96
0x40022cc	        0x4183e69f	                    and r14d, 0xffffff9f	      5128	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_39	CALL_96
0x40022d0	    0x488b8f280100	           mov rcx, qword [rdi + 0x128] 	      5128	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_39	CALL_96
0x40022d7	          0x4889ea	                            mov rdx, rbp	      5128	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_39	CALL_96
0x40022da	          0x4489f6	                           mov esi, r14d	      5128	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_39	CALL_96
0x40022dd	      0xe8db340000	          call sym.d_print_function_type	      5128	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_39	CALL_96
0x40022e2	        0x488b5508	                mov rdx, qword [rbp + 8]	      5133	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_40
0x40022e6	          0x4885d2	                           test rdx, rdx	      5133	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_40
0x40022e9	     0xf84d2000000	                            je 0x40023c1	      5133	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_40
0x40022ef	          0x4489f6	                           mov esi, r14d	      5134	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_40	CALL_97
0x40022f2	          0x4889df	                            mov rdi, rbx	      5134	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_40	CALL_97
0x40022f5	      0xe8e8230000	                   call sym.d_print_comp	      5134	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_40	CALL_97
0x40022fa	      0xe9b9230000	                           jmp 0x40046b8	      5134	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_40	CALL_97
0x40022ff	        0x41f6c540	                         test r13b, 0x40	      5136	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41
0x4002303	     0xf85b8000000	                           jne 0x40023c1	      5136	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41
0x4002309	    0x488b83280100	           mov rax, qword [rbx + 0x128] 	      5142	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41
0x4002310	      0x4889442420	             mov qword [rsp + 0x20], rax	      5142	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41
0x4002315	      0x488d442420	                   lea rax, [rsp + 0x20]	      5143	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41
0x400231a	    0x488983280100	            mov qword [rbx + 0x128], rax	      5143	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41
0x4002321	      0x48896c2428	             mov qword [rsp + 0x28], rbp	      5144	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41
0x4002326	    0xc74424300000	               mov dword [rsp + 0x30], 0	      5145	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41
0x400232e	    0x488b83200100	           mov rax, qword [rbx + 0x120] 	      5146	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41
0x4002335	      0x4889442438	             mov qword [rsp + 0x38], rax	      5146	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41
0x400233a	        0x488b5508	                mov rdx, qword [rbp + 8]	      5148	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41	CALL_98
0x400233e	          0x4489ee	                           mov esi, r13d	      5148	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41	CALL_98
0x4002341	          0x83e69f	                     and esi, 0xffffff9f	      5148	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41	CALL_98
0x4002344	          0x4889df	                            mov rdi, rbx	      5148	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41	CALL_98
0x4002347	      0xe896230000	                   call sym.d_print_comp	      5148	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41	CALL_98
0x400234c	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      5151	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41
0x4002351	    0x488983280100	            mov qword [rbx + 0x128], rax	      5151	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41
0x4002358	      0x837c243000	               cmp dword [rsp + 0x30], 0	      5153	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41	IF_42
0x400235d	     0xf8555230000	                           jne 0x40046b8	      5153	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41	IF_42
0x4002363	          0x4585e4	                         test r12d, r12d	      5158	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41	IF_43
0x4002366	            0x7559	                           jne 0x40023c1	      5158	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41	IF_43
0x4002368	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002373	            0x752f	                           jne 0x40023a4	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002375	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400237c	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002383	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002388	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400238b	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002391	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x400239c	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40023a4	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x40023ab	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x40023af	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40023b6	        0xc6040320	              mov byte [rbx + rax], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x40023ba	    0xc68308010000	           mov byte [rbx + 0x108], 0x20 	      4236	cp-demangle.c	FUNCTION_72
0x40023c1	          0x4585e4	                         test r12d, r12d	      5162	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_44
0x40023c4	     0xf85ee220000	                           jne 0x40046b8	      5162	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_44
0x40023ca	    0x488b8b280100	           mov rcx, qword [rbx + 0x128] 	      5163	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_44	CALL_100
0x40023d1	          0x4489ee	                           mov esi, r13d	      5163	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_44	CALL_100
0x40023d4	          0x83e69f	                     and esi, 0xffffff9f	      5163	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_44	CALL_100
0x40023d7	          0x4889ea	                            mov rdx, rbp	      5163	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_44	CALL_100
0x40023da	          0x4889df	                            mov rdi, rbx	      5163	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_44	CALL_100
0x40023dd	      0xe8db330000	          call sym.d_print_function_type	      5163	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_44	CALL_100
0x40023e2	      0xe9d1220000	                           jmp 0x40046b8	      5163	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_44	CALL_100
0x40023e7	    0x4c8bb7280100	           mov r14, qword [rdi + 0x128] 	      5185	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40023ee	      0x4c89742440	             mov qword [rsp + 0x40], r14	      5187	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40023f3	      0x488d442440	                   lea rax, [rsp + 0x40]	      5188	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40023f8	    0x488987280100	            mov qword [rdi + 0x128], rax	      5188	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40023ff	      0x48896c2448	             mov qword [rsp + 0x48], rbp	      5189	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002404	    0xc74424500000	               mov dword [rsp + 0x50], 0	      5190	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400240c	    0x488b87200100	           mov rax, qword [rdi + 0x120] 	      5191	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002413	      0x4889442458	             mov qword [rsp + 0x58], rax	      5191	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002418	          0x4d85f6	                           test r14, r14	      5195	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x400241b	     0xf8428220000	                            je 0x4004649	      5195	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x4002421	        0x498b4608	                mov rax, qword [r14 + 8]	      5196	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x4002425	            0x8b00	                    mov eax, dword [rax]	      5196	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x4002427	          0x83e819	                           sub eax, 0x19	      5196	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x400242a	          0x83f802	                              cmp eax, 2	      5196	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x400242d	     0xf8716220000	                            ja 0x4004649	      5196	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x4002433	          0x4c89f0	                            mov rax, r14	      5196	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x4002436	    0x41bc01000000	                             mov r12d, 1	      5196	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x400243c	        0x83781000	               cmp dword [rax + 0x10], 0	      5200	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x4002440	            0x7565	                           jne 0x40024a7	      5200	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x4002442	        0x4183fc03	                             cmp r12d, 3	      5202	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45	IF_46
0x4002446	            0x760f	                           jbe 0x4002457	      5202	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45	IF_46
0x4002448	    0xc78330010000	              mov dword [rbx + 0x130], 1	      4207	cp-demangle.c	FUNCTION_69
0x4002452	      0xe961220000	                           jmp 0x40046b8	      4207	cp-demangle.c	FUNCTION_69
0x4002457	          0x4489e2	                           mov edx, r12d	      5208	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x400245a	        0x48c1e205	                              shl rdx, 5	      5208	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x400245e	          0x488b08	                    mov rcx, qword [rax]	      5208	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x4002461	      0x48894c1440	       mov qword [rsp + rdx + 0x40], rcx	      5208	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x4002466	        0x488b4808	                mov rcx, qword [rax + 8]	      5208	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x400246a	      0x48894c1448	       mov qword [rsp + rdx + 0x48], rcx	      5208	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x400246f	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      5208	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x4002473	      0x48894c1450	       mov qword [rsp + rdx + 0x50], rcx	      5208	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x4002478	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      5208	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x400247c	      0x48894c1458	       mov qword [rsp + rdx + 0x58], rcx	      5208	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x4002481	    0x488b8b280100	           mov rcx, qword [rbx + 0x128] 	      5209	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x4002488	      0x48894c1440	       mov qword [rsp + rdx + 0x40], rcx	      5209	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x400248d	      0x488d4c2440	                   lea rcx, [rsp + 0x40]	      5210	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x4002492	          0x4801ca	                            add rdx, rcx	      5210	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x4002495	    0x488993280100	            mov qword [rbx + 0x128], rdx	      5210	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x400249c	    0xc74010010000	               mov dword [rax + 0x10], 1	      5211	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x40024a3	        0x4183c401	                             add r12d, 1	      5212	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x40024a7	          0x488b00	                    mov rax, qword [rax]	      5215	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x40024aa	          0x4885c0	                           test rax, rax	      5195	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x40024ad	            0x7412	                            je 0x40024c1	      5195	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x40024af	        0x488b5008	                mov rdx, qword [rax + 8]	      5196	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x40024b3	            0x8b12	                    mov edx, dword [rdx]	      5196	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x40024b5	          0x83ea19	                           sub edx, 0x19	      5196	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x40024b8	          0x83fa02	                              cmp edx, 2	      5196	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x40024bb	     0xf867bffffff	                           jbe 0x400243c	      5196	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x40024c1	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	      5218	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_102
0x40024c5	          0x4489ee	                           mov esi, r13d	      5218	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_102
0x40024c8	          0x4889df	                            mov rdi, rbx	      5218	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_102
0x40024cb	      0xe812220000	                   call sym.d_print_comp	      5218	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_102
0x40024d0	    0x4c89b3280100	            mov qword [rbx + 0x128], r14	      5220	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40024d7	      0x837c245000	               cmp dword [rsp + 0x50], 0	      5222	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_47
0x40024dc	     0xf85d6210000	                           jne 0x40046b8	      5222	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_47
0x40024e2	        0x4183fc01	                             cmp r12d, 1	      5225	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_5
0x40024e6	            0x7621	                           jbe 0x4002509	      5225	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_5
0x40024e8	        0x4183ec01	                             sub r12d, 1	      5227	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_5
0x40024ec	          0x4489e0	                           mov eax, r12d	      5228	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_5	CALL_103
0x40024ef	        0x48c1e005	                              shl rax, 5	      5228	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_5	CALL_103
0x40024f3	      0x488b540448	      mov rdx, qword [rsp + rax + 0x48] 	      5228	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_5	CALL_103
0x40024f8	          0x4489ee	                           mov esi, r13d	      5228	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_5	CALL_103
0x40024fb	          0x4889df	                            mov rdi, rbx	      5228	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_5	CALL_103
0x40024fe	      0xe87c220000	                    call sym.d_print_mod	      5228	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_5	CALL_103
0x4002503	        0x4183fc01	                             cmp r12d, 1	      5225	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_5
0x4002507	            0x75df	                           jne 0x40024e8	      5225	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_5
0x4002509	    0x488b8b280100	           mov rcx, qword [rbx + 0x128] 	      5231	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_104
0x4002510	          0x4889ea	                            mov rdx, rbp	      5231	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_104
0x4002513	          0x4489ee	                           mov esi, r13d	      5231	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_104
0x4002516	          0x4889df	                            mov rdi, rbx	      5231	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_104
0x4002519	      0xe8fe2f0000	             call sym.d_print_array_type	      5231	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_104
0x400251e	      0xe995210000	                           jmp 0x40046b8	      5233	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002523	    0x488b87280100	           mov rax, qword [rdi + 0x128] 	      5241	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400252a	      0x4889442420	             mov qword [rsp + 0x20], rax	      5241	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400252f	      0x488d442420	                   lea rax, [rsp + 0x20]	      5242	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002534	    0x488987280100	            mov qword [rdi + 0x128], rax	      5242	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400253b	      0x48896c2428	             mov qword [rsp + 0x28], rbp	      5243	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002540	    0xc74424300000	               mov dword [rsp + 0x30], 0	      5244	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002548	    0x488b87200100	           mov rax, qword [rdi + 0x120] 	      5245	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400254f	      0x4889442438	             mov qword [rsp + 0x38], rax	      5245	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002554	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	      5247	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_105
0x4002558	      0xe885210000	                   call sym.d_print_comp	      5247	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_105
0x400255d	      0x837c243000	               cmp dword [rsp + 0x30], 0	      5251	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_48
0x4002562	            0x750e	                           jne 0x4002572	      5251	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_48
0x4002564	          0x4889ea	                            mov rdx, rbp	      5252	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_106
0x4002567	          0x4489ee	                           mov esi, r13d	      5252	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_106
0x400256a	          0x4889df	                            mov rdi, rbx	      5252	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_106
0x400256d	      0xe80d220000	                    call sym.d_print_mod	      5252	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_106
0x4002572	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      5254	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002577	    0x488983280100	            mov qword [rbx + 0x128], rax	      5254	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400257e	      0xe935210000	                           jmp 0x40046b8	      5254	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002583	      0x66837d1200	                cmp word [rbp + 0x12], 0	      5260	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_49
0x4002588	            0x7473	                            je 0x40025fd	      5260	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_49
0x400258a	    0x41bc00000000	                             mov r12d, 0	      5260	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_49
0x4002590	    0x41bf00000000	                             mov r15d, 0	      5260	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_49
0x4002596	      0x450fb63424	                  movzx r14d, byte [r12]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x400259b	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40025a6	            0x752f	                           jne 0x40025d7	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40025a8	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40025af	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40025b6	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40025bb	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40025be	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40025c4	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x40025cf	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40025d7	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x40025de	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x40025e2	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40025e9	        0x44883403	              mov byte [rbx + rax], r14b	      4235	cp-demangle.c	FUNCTION_72
0x40025ed	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x40025f4	        0x4983c401	                              add r12, 1	      4236	cp-demangle.c	FUNCTION_72
0x40025f8	          0x4d39fc	                            cmp r12, r15	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40025fb	            0x7599	                           jne 0x4002596	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40025fd	        0x488b5508	                mov rdx, qword [rbp + 8]	      5263	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_50
0x4002601	    0x48817a080000	                  cmp qword [rdx + 8], 0	      5263	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_50
0x4002609	            0x7464	                            je 0x400266f	      5263	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_50
0x400260b	          0x4489ee	                           mov esi, r13d	      5266	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_50	CALL_108
0x400260e	          0x4889df	                            mov rdi, rbx	      5266	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_50	CALL_108
0x4002611	      0xe8cc200000	                   call sym.d_print_comp	      5266	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_50	CALL_108
0x4002616	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002621	            0x752f	                           jne 0x4002652	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002623	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400262a	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002631	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002636	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002639	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400263f	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x400264a	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4002652	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4002659	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x400265d	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4002664	        0xc6040320	              mov byte [rbx + rax], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x4002668	    0xc68308010000	           mov byte [rbx + 0x108], 0x20 	      4236	cp-demangle.c	FUNCTION_72
0x400266f	      0x66837d1000	                cmp word [rbp + 0x10], 0	      5269	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_51
0x4002674	            0x7477	                            je 0x40026ed	      5269	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_51
0x4002676	      0xbd00000000	                              mov ebp, 0	      5269	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_51
0x400267b	    0x41bd00000000	                             mov r13d, 0	      5269	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_51
0x4002681	      0x440fb66500	                  movzx r12d, byte [rbp]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4002686	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002691	            0x752f	                           jne 0x40026c2	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002693	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400269a	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40026a1	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40026a6	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40026a9	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40026af	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x40026ba	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40026c2	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x40026c9	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x40026cd	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40026d4	        0x44882403	              mov byte [rbx + rax], r12b	      4235	cp-demangle.c	FUNCTION_72
0x40026d8	    0x4488a3080100	            mov byte [rbx + 0x108], r12b	      4236	cp-demangle.c	FUNCTION_72
0x40026df	        0x4883c501	                              add rbp, 1	      4236	cp-demangle.c	FUNCTION_72
0x40026e3	          0x4c39ed	                            cmp rbp, r13	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40026e6	            0x7599	                           jne 0x4002681	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40026e8	      0xe9cb1f0000	                           jmp 0x40046b8	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40026ed	      0xbd00000000	                              mov ebp, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40026f2	    0x41bd00000000	                             mov r13d, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40026f8	      0x440fb66500	                  movzx r12d, byte [rbp]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x40026fd	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002708	            0x752f	                           jne 0x4002739	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400270a	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4002711	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002718	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400271d	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002720	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002726	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4002731	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4002739	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4002740	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4002744	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x400274b	        0x44882403	              mov byte [rbx + rax], r12b	      4235	cp-demangle.c	FUNCTION_72
0x400274f	    0x4488a3080100	            mov byte [rbx + 0x108], r12b	      4236	cp-demangle.c	FUNCTION_72
0x4002756	        0x4883c501	                              add rbp, 1	      4236	cp-demangle.c	FUNCTION_72
0x400275a	          0x4939ed	                            cmp r13, rbp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400275d	            0x7599	                           jne 0x40026f8	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400275f	      0xe9541f0000	                           jmp 0x40046b8	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002764	        0x488b5508	                mov rdx, qword [rbp + 8]	      5277	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_52
0x4002768	          0x4885d2	                           test rdx, rdx	      5277	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_52
0x400276b	            0x7405	                            je 0x4002772	      5277	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_52
0x400276d	      0xe8701f0000	                   call sym.d_print_comp	      5278	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_112
0x4002772	      0x48837d1000	               cmp qword [rbp + 0x10], 0	      5279	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53
0x4002777	     0xf843b1f0000	                            je 0x40046b8	      5279	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53
0x400277d	    0x488bb3000100	           mov rsi, qword [rbx + 0x100] 	      5285	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	IF_54
0x4002784	    0x4881fefd0000	                           cmp rsi, 0xfd	      5285	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	IF_54
0x400278b	            0x7627	                           jbe 0x40027b4	      5285	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	IF_54
0x400278d	        0xc6043300	                 mov byte [rbx + rsi], 0	      4221	cp-demangle.c	FUNCTION_71
0x4002791	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002798	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400279b	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40027a1	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x40027ac	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40027b4	    0x41bc00000000	                             mov r12d, 0	      4224	cp-demangle.c	FUNCTION_71
0x40027ba	      0x450fb63424	                  movzx r14d, byte [r12]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x40027bf	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40027ca	            0x752f	                           jne 0x40027fb	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40027cc	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40027d3	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40027da	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40027df	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40027e2	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40027e8	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x40027f3	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40027fb	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4002802	        0x4c8d7801	                      lea r15, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4002806	    0x4c89bb000100	            mov qword [rbx + 0x100], r15	      4235	cp-demangle.c	FUNCTION_72
0x400280d	        0x44883403	              mov byte [rbx + rax], r14b	      4235	cp-demangle.c	FUNCTION_72
0x4002811	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x4002818	        0x4983c401	                              add r12, 1	      4236	cp-demangle.c	FUNCTION_72
0x400281c	      0xb800000000	                              mov eax, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002821	          0x4c39e0	                            cmp rax, r12	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002824	            0x7594	                           jne 0x40027ba	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002826	    0x4c8ba3400100	           mov r12, qword [rbx + 0x140] 	      5289	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53
0x400282d	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	      5290	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	CALL_115
0x4002831	          0x4489ee	                           mov esi, r13d	      5290	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	CALL_115
0x4002834	          0x4889df	                            mov rdi, rbx	      5290	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	CALL_115
0x4002837	      0xe8a61e0000	                   call sym.d_print_comp	      5290	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	CALL_115
0x400283c	    0x4c3ba3400100	           cmp r12, qword [rbx + 0x140] 	      5293	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	IF_55
0x4002843	     0xf856f1e0000	                           jne 0x40046b8	      5293	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	IF_55
0x4002849	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      5293	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	IF_55
0x4002850	          0x4c39f8	                            cmp rax, r15	      5293	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	IF_55
0x4002853	     0xf855f1e0000	                           jne 0x40046b8	      5293	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	IF_55
0x4002859	        0x4883e802	                              sub rax, 2	      5294	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	IF_55
0x400285d	    0x488983000100	            mov qword [rbx + 0x100], rax	      5294	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	IF_55
0x4002864	      0xe94f1e0000	                           jmp 0x40046b8	      5294	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	IF_55
0x4002869	        0x488b5508	                mov rdx, qword [rbp + 8]	      5300	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400286d	        0x488b6d10	            mov rbp, qword [rbp + 0x10] 	      5301	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002871	          0x4885d2	                           test rdx, rdx	      5303	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_56
0x4002874	            0x7405	                            je 0x400287b	      5303	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_56
0x4002876	      0xe8671e0000	                   call sym.d_print_comp	      5304	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_116
0x400287b	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002886	            0x752f	                           jne 0x40028b7	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002888	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400288f	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002896	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400289b	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400289e	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40028a4	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x40028af	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40028b7	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x40028be	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x40028c2	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40028c9	        0xc604037b	              mov byte [rbx + rax], 0x7b	      4235	cp-demangle.c	FUNCTION_72
0x40028cd	    0xc68308010000	           mov byte [rbx + 0x108], 0x7b 	      4236	cp-demangle.c	FUNCTION_72
0x40028d4	          0x4889ea	                            mov rdx, rbp	      5306	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_118
0x40028d7	          0x4489ee	                           mov esi, r13d	      5306	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_118
0x40028da	          0x4889df	                            mov rdi, rbx	      5306	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_118
0x40028dd	      0xe8001e0000	                   call sym.d_print_comp	      5306	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_118
0x40028e2	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40028ed	            0x752f	                           jne 0x400291e	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40028ef	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40028f6	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40028fd	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002902	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002905	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400290b	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4002916	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400291e	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4002925	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4002929	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4002930	        0xc604037d	              mov byte [rbx + rax], 0x7d	      4235	cp-demangle.c	FUNCTION_72
0x4002934	    0xc68308010000	           mov byte [rbx + 0x108], 0x7d 	      4236	cp-demangle.c	FUNCTION_72
0x400293b	      0xe9781d0000	                           jmp 0x40046b8	      4236	cp-demangle.c	FUNCTION_72
0x4002940	        0x4c8b7d08	                mov r15, qword [rbp + 8]	      5313	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002944	        0x458b6f10	           mov r13d, dword [r15 + 0x10] 	      5314	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002948	      0xbd00000000	                              mov ebp, 0	      5314	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400294d	    0x41be00000000	                             mov r14d, 0	      5314	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002953	      0x440fb66500	                  movzx r12d, byte [rbp]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4002958	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002963	            0x752f	                           jne 0x4002994	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002965	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400296c	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002973	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002978	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400297b	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002981	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x400298c	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4002994	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x400299b	        0x488d7001	                      lea rsi, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x400299f	    0x4889b3000100	            mov qword [rbx + 0x100], rsi	      4235	cp-demangle.c	FUNCTION_72
0x40029a6	        0x44882403	              mov byte [rbx + rax], r12b	      4235	cp-demangle.c	FUNCTION_72
0x40029aa	    0x4488a3080100	            mov byte [rbx + 0x108], r12b	      4236	cp-demangle.c	FUNCTION_72
0x40029b1	        0x4883c501	                              add rbp, 1	      4236	cp-demangle.c	FUNCTION_72
0x40029b5	          0x4939ee	                            cmp r14, rbp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40029b8	            0x7599	                           jne 0x4002953	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40029ba	        0x498b4708	                mov rax, qword [r15 + 8]	      5318	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_57
0x40029be	           0xfb600	                   movzx eax, byte [rax]	      5318	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_57
0x40029c1	          0x83e861	                           sub eax, 0x61	      5318	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_57
0x40029c4	            0x3c19	                            cmp al, 0x19	      5318	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_57
0x40029c6	            0x774d	                            ja 0x4002a15	      5318	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_57
0x40029c8	    0x4881feff0000	                           cmp rsi, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40029cf	            0x7527	                           jne 0x40029f8	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40029d1	        0xc6043300	                 mov byte [rbx + rsi], 0	      4221	cp-demangle.c	FUNCTION_71
0x40029d5	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40029dc	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40029df	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40029e5	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x40029f0	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40029f8	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x40029ff	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4002a03	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4002a0a	        0xc6040320	              mov byte [rbx + rax], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x4002a0e	    0xc68308010000	           mov byte [rbx + 0x108], 0x20 	      4236	cp-demangle.c	FUNCTION_72
0x4002a15	        0x4d8b7708	                mov r14, qword [r15 + 8]	      5321	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_58
0x4002a19	          0x4963c5	                        movsxd rax, r13d	      5321	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_58
0x4002a1c	    0x41807c06ff20	         cmp byte [r14 + rax - 1], 0x20 	      5322	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_58
0x4002a22	           0xf94c0	                                 sete al	      5322	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_58
0x4002a25	           0xfb6c0	                           movzx eax, al	      5322	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_58
0x4002a28	          0x4129c5	                           sub r13d, eax	      5322	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_58
0x4002a2b	          0x4d63ed	                        movsxd r13, r13d	      5323	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_122
0x4002a2e	          0x4d85ed	                           test r13, r13	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002a31	     0xf84811c0000	                            je 0x40046b8	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002a37	      0xbd00000000	                              mov ebp, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002a3c	      0x450fb6242e	            movzx r12d, byte [r14 + rbp]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4002a41	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002a4c	            0x752f	                           jne 0x4002a7d	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002a4e	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4002a55	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002a5c	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002a61	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002a64	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002a6a	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4002a75	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4002a7d	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4002a84	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4002a88	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4002a8f	        0x44882403	              mov byte [rbx + rax], r12b	      4235	cp-demangle.c	FUNCTION_72
0x4002a93	    0x4488a3080100	            mov byte [rbx + 0x108], r12b	      4236	cp-demangle.c	FUNCTION_72
0x4002a9a	        0x4883c501	                              add rbp, 1	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002a9e	          0x4939ed	                            cmp r13, rbp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002aa1	            0x7599	                           jne 0x4002a3c	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002aa3	      0xe9101c0000	                           jmp 0x40046b8	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002aa8	    0x41bc00000000	                             mov r12d, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002aae	    0x41bf00000000	                             mov r15d, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002ab4	      0x450fb63424	                  movzx r14d, byte [r12]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4002ab9	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002ac4	            0x752f	                           jne 0x4002af5	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002ac6	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4002acd	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002ad4	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002ad9	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002adc	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002ae2	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4002aed	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4002af5	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4002afc	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4002b00	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4002b07	        0x44883403	              mov byte [rbx + rax], r14b	      4235	cp-demangle.c	FUNCTION_72
0x4002b0b	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x4002b12	        0x4983c401	                              add r12, 1	      4236	cp-demangle.c	FUNCTION_72
0x4002b16	          0x4d39e7	                            cmp r15, r12	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002b19	            0x7599	                           jne 0x4002ab4	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002b1b	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	      5329	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_124
0x4002b1f	          0x4489ee	                           mov esi, r13d	      5329	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_124
0x4002b22	          0x4889df	                            mov rdi, rbx	      5329	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_124
0x4002b25	      0xe8b81b0000	                   call sym.d_print_comp	      5329	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_124
0x4002b2a	      0xe9891b0000	                           jmp 0x40046b8	      5330	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002b2f	    0x41bc00000000	                             mov r12d, 0	      5330	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002b35	    0x41bf00000000	                             mov r15d, 0	      5330	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002b3b	      0x450fb63424	                  movzx r14d, byte [r12]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4002b40	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002b4b	            0x752f	                           jne 0x4002b7c	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002b4d	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4002b54	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002b5b	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002b60	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002b63	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002b69	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4002b74	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4002b7c	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4002b83	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4002b87	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4002b8e	        0x44883403	              mov byte [rbx + rax], r14b	      4235	cp-demangle.c	FUNCTION_72
0x4002b92	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x4002b99	        0x4983c401	                              add r12, 1	      4236	cp-demangle.c	FUNCTION_72
0x4002b9d	          0x4d39e7	                            cmp r15, r12	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002ba0	            0x7599	                           jne 0x4002b3b	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002ba2	    0x488b83700100	           mov rax, qword [rbx + 0x170] 	      6126	cp-demangle.c	FUNCTION_95	IF_1
0x4002ba9	          0x4885c0	                           test rax, rax	      6126	cp-demangle.c	FUNCTION_95	IF_1
0x4002bac	            0x741d	                            je 0x4002bcb	      6126	cp-demangle.c	FUNCTION_95	IF_1
0x4002bae	    0x488b93200100	           mov rdx, qword [rbx + 0x120] 	      6128	cp-demangle.c	FUNCTION_95	IF_1
0x4002bb5	      0x4889542420	             mov qword [rsp + 0x20], rdx	      6128	cp-demangle.c	FUNCTION_95	IF_1
0x4002bba	      0x488d4c2420	                   lea rcx, [rsp + 0x20]	      6129	cp-demangle.c	FUNCTION_95	IF_1
0x4002bbf	    0x48898b200100	            mov qword [rbx + 0x120], rcx	      6129	cp-demangle.c	FUNCTION_95	IF_1
0x4002bc6	      0x4889442428	             mov qword [rsp + 0x28], rax	      6130	cp-demangle.c	FUNCTION_95	IF_1
0x4002bcb	        0x488b5508	                mov rdx, qword [rbp + 8]	      6133	cp-demangle.c	FUNCTION_95	IF_2
0x4002bcf	          0x833a04	                      cmp dword [rdx], 4	      6133	cp-demangle.c	FUNCTION_95	IF_2
0x4002bd2	            0x742a	                            je 0x4002bfe	      6133	cp-demangle.c	FUNCTION_95	IF_2
0x4002bd4	          0x4489ee	                           mov esi, r13d	      6135	cp-demangle.c	FUNCTION_95	IF_2	CALL_1
0x4002bd7	          0x4889df	                            mov rdi, rbx	      6135	cp-demangle.c	FUNCTION_95	IF_2	CALL_1
0x4002bda	      0xe8031b0000	                   call sym.d_print_comp	      6135	cp-demangle.c	FUNCTION_95	IF_2	CALL_1
0x4002bdf	    0x4883bb700100	              cmp qword [rbx + 0x170], 0	      6136	cp-demangle.c	FUNCTION_95	IF_2	IF_3
0x4002be7	     0xf84cb1a0000	                            je 0x40046b8	      6136	cp-demangle.c	FUNCTION_95	IF_2	IF_3
0x4002bed	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      6137	cp-demangle.c	FUNCTION_95	IF_2	IF_3
0x4002bf2	    0x488983200100	            mov qword [rbx + 0x120], rax	      6137	cp-demangle.c	FUNCTION_95	IF_2	IF_3
0x4002bf9	      0xe9ba1a0000	                           jmp 0x40046b8	      6137	cp-demangle.c	FUNCTION_95	IF_2	IF_3
0x4002bfe	        0x488b5208	                mov rdx, qword [rdx + 8]	      6141	cp-demangle.c	FUNCTION_95	ELSE_1	CALL_2
0x4002c02	          0x4489ee	                           mov esi, r13d	      6141	cp-demangle.c	FUNCTION_95	ELSE_1	CALL_2
0x4002c05	          0x4889df	                            mov rdi, rbx	      6141	cp-demangle.c	FUNCTION_95	ELSE_1	CALL_2
0x4002c08	      0xe8d51a0000	                   call sym.d_print_comp	      6141	cp-demangle.c	FUNCTION_95	ELSE_1	CALL_2
0x4002c0d	    0x4883bb700100	              cmp qword [rbx + 0x170], 0	      6146	cp-demangle.c	FUNCTION_95	ELSE_1	IF_4
0x4002c15	            0x740c	                            je 0x4002c23	      6146	cp-demangle.c	FUNCTION_95	ELSE_1	IF_4
0x4002c17	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      6147	cp-demangle.c	FUNCTION_95	ELSE_1	IF_4
0x4002c1c	    0x488983200100	            mov qword [rbx + 0x120], rax	      6147	cp-demangle.c	FUNCTION_95	ELSE_1	IF_4
0x4002c23	    0x80bb08010000	           cmp byte [rbx + 0x108], 0x3c 	      6149	cp-demangle.c	FUNCTION_95	ELSE_1	IF_5	CALL_3
0x4002c2a	            0x7559	                           jne 0x4002c85	      6149	cp-demangle.c	FUNCTION_95	ELSE_1	IF_5	CALL_3
0x4002c2c	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002c37	            0x752f	                           jne 0x4002c68	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002c39	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4002c40	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002c47	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002c4c	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002c4f	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002c55	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4002c60	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4002c68	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4002c6f	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4002c73	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4002c7a	        0xc6040320	              mov byte [rbx + rax], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x4002c7e	    0xc68308010000	           mov byte [rbx + 0x108], 0x20 	      4236	cp-demangle.c	FUNCTION_72
0x4002c85	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002c90	            0x752f	                           jne 0x4002cc1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002c92	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4002c99	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002ca0	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002ca5	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002ca8	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002cae	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4002cb9	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4002cc1	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4002cc8	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4002ccc	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4002cd3	        0xc604033c	              mov byte [rbx + rax], 0x3c	      4235	cp-demangle.c	FUNCTION_72
0x4002cd7	    0xc68308010000	           mov byte [rbx + 0x108], 0x3c 	      4236	cp-demangle.c	FUNCTION_72
0x4002cde	        0x488b4508	                mov rax, qword [rbp + 8]	      6152	cp-demangle.c	FUNCTION_95	ELSE_1	CALL_6
0x4002ce2	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      6152	cp-demangle.c	FUNCTION_95	ELSE_1	CALL_6
0x4002ce6	          0x4489ee	                           mov esi, r13d	      6152	cp-demangle.c	FUNCTION_95	ELSE_1	CALL_6
0x4002ce9	          0x4889df	                            mov rdi, rbx	      6152	cp-demangle.c	FUNCTION_95	ELSE_1	CALL_6
0x4002cec	      0xe8f1190000	                   call sym.d_print_comp	      6152	cp-demangle.c	FUNCTION_95	ELSE_1	CALL_6
0x4002cf1	    0x80bb08010000	           cmp byte [rbx + 0x108], 0x3e 	      6155	cp-demangle.c	FUNCTION_95	ELSE_1	IF_6	CALL_7
0x4002cf8	            0x7559	                           jne 0x4002d53	      6155	cp-demangle.c	FUNCTION_95	ELSE_1	IF_6	CALL_7
0x4002cfa	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002d05	            0x752f	                           jne 0x4002d36	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002d07	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4002d0e	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002d15	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002d1a	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002d1d	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002d23	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4002d2e	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4002d36	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4002d3d	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4002d41	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4002d48	        0xc6040320	              mov byte [rbx + rax], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x4002d4c	    0xc68308010000	           mov byte [rbx + 0x108], 0x20 	      4236	cp-demangle.c	FUNCTION_72
0x4002d53	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002d5e	            0x752f	                           jne 0x4002d8f	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002d60	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4002d67	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002d6e	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002d73	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002d76	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002d7c	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4002d87	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4002d8f	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4002d96	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4002d9a	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4002da1	        0xc604033e	              mov byte [rbx + rax], 0x3e	      4235	cp-demangle.c	FUNCTION_72
0x4002da5	    0xc68308010000	           mov byte [rbx + 0x108], 0x3e 	      4236	cp-demangle.c	FUNCTION_72
0x4002dac	      0xe907190000	                           jmp 0x40046b8	      4236	cp-demangle.c	FUNCTION_72
0x4002db1	        0x488b5508	                mov rdx, qword [rbp + 8]	      5338	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_127
0x4002db5	      0xe8c72c0000	                call sym.d_print_expr_op	      5338	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_127
0x4002dba	      0xe9f9180000	                           jmp 0x40046b8	      5339	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002dbf	        0x4c8b7508	                mov r14, qword [rbp + 8]	      5343	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002dc3	        0x488b6d10	            mov rbp, qword [rbp + 0x10] 	      5344	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002dc7	          0x418b06	                    mov eax, dword [r14]	      5347	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59
0x4002dca	    0x41bc00000000	                             mov r12d, 0	      5345	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002dd0	          0x83f831	                           cmp eax, 0x31	      5347	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59
0x4002dd3	     0xf853b010000	                           jne 0x4002f14	      5347	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59
0x4002dd9	        0x498b5608	                mov rdx, qword [r14 + 8]	      5349	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59
0x4002ddd	          0x4c8b22	                    mov r12, qword [rdx]	      5349	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59
0x4002de0	      0x410fb61424	                   movzx edx, byte [r12]	      5350	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	CALL_128
0x4002de5	          0x80fa61	                            cmp dl, 0x61	      5350	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	CALL_128
0x4002de8	            0x752c	                           jne 0x4002e16	      5350	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	CALL_128
0x4002dea	    0x41807c240164	                cmp byte [r12 + 1], 0x64	      5350	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	CALL_128
0x4002df0	            0x7524	                           jne 0x4002e16	      5350	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	CALL_128
0x4002df2	    0x41807c240200	                   cmp byte [r12 + 2], 0	      5350	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	CALL_128
0x4002df8	            0x751c	                           jne 0x4002e16	      5350	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	CALL_128
0x4002dfa	        0x837d0003	                      cmp dword [rbp], 3	      5354	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	IF_61
0x4002dfe	            0x7516	                           jne 0x4002e16	      5354	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	IF_61
0x4002e00	        0x488b4d08	                mov rcx, qword [rbp + 8]	      5355	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	IF_61
0x4002e04	          0x833901	                      cmp dword [rcx], 1	      5355	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	IF_61
0x4002e07	            0x7535	                           jne 0x4002e3e	      5355	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	IF_61
0x4002e09	        0x488b7510	            mov rsi, qword [rbp + 0x10] 	      5356	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	IF_61
0x4002e0d	          0x833e29	                   cmp dword [rsi], 0x29	      5357	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	IF_61
0x4002e10	        0x480f44e9	                          cmove rbp, rcx	      5357	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	IF_61
0x4002e14	            0xeb28	                           jmp 0x4002e3e	      5357	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	IF_61
0x4002e16	        0x837d0038	                   cmp dword [rbp], 0x38	      5359	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_62
0x4002e1a	            0x7522	                           jne 0x4002e3e	      5359	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_62
0x4002e1c	        0x488b5508	                mov rdx, qword [rbp + 8]	      5363	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_62	CALL_129
0x4002e20	          0x4489ee	                           mov esi, r13d	      5363	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_62	CALL_129
0x4002e23	          0x4889df	                            mov rdi, rbx	      5363	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_62	CALL_129
0x4002e26	      0xe8f32c0000	                call sym.d_print_subexpr	      5363	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_62	CALL_129
0x4002e2b	          0x4c89f2	                            mov rdx, r14	      5364	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_62	CALL_130
0x4002e2e	          0x4489ee	                           mov esi, r13d	      5364	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_62	CALL_130
0x4002e31	          0x4889df	                            mov rdi, rbx	      5364	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_62	CALL_130
0x4002e34	      0xe8482c0000	                call sym.d_print_expr_op	      5364	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_62	CALL_130
0x4002e39	      0xe97a180000	                           jmp 0x40046b8	      5365	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_62
0x4002e3e	          0x4d85e4	                           test r12, r12	      5370	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_63	CALL_131
0x4002e41	     0xf84d2000000	                            je 0x4002f19	      5370	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_63	CALL_131
0x4002e47	          0x80fa73	                            cmp dl, 0x73	      5370	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_63	CALL_131
0x4002e4a	     0xf85c4000000	                           jne 0x4002f14	      5370	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_63	CALL_131
0x4002e50	    0x41807c24015a	                cmp byte [r12 + 1], 0x5a	      5370	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_63	CALL_131
0x4002e56	     0xf8540180000	                           jne 0x400469c	      5370	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_63	CALL_131
0x4002e5c	    0x41807c240200	                   cmp byte [r12 + 2], 0	      5370	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_63	CALL_131
0x4002e62	     0xf8534180000	                           jne 0x400469c	      5370	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_63	CALL_131
0x4002e68	          0x4889ee	                            mov rsi, rbp	      5372	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_63	CALL_132
0x4002e6b	          0x4889df	                            mov rdi, rbx	      5372	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_63	CALL_132
0x4002e6e	      0xe88ad8ffff	                    call sym.d_find_pack	      5372	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_63	CALL_132
0x4002e73	          0x4889c7	                            mov rdi, rax	      5373	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_63	CALL_133
0x4002e76	      0xe812d9ffff	                  call sym.d_pack_length	      5373	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_63	CALL_133
0x4002e7b	            0x89c6	                            mov esi, eax	      5374	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_63	CALL_134
0x4002e7d	          0x4889df	                            mov rdi, rbx	      5374	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_63	CALL_134
0x4002e80	      0xe812daffff	                   call sym.d_append_num	      5374	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_63	CALL_134
0x4002e85	      0xe92e180000	                           jmp 0x40046b8	      5375	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_63
0x4002e8a	    0x41807c240200	                   cmp byte [r12 + 2], 0	      5377	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_10	IF_64	CALL_135
0x4002e90	     0xf8583000000	                           jne 0x4002f19	      5377	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_10	IF_64	CALL_135
0x4002e96	          0x4885ed	                           test rbp, rbp	      4461	cp-demangle.c	FUNCTION_81	FOR_1
0x4002e99	            0x7453	                            je 0x4002eee	      4461	cp-demangle.c	FUNCTION_81	FOR_1
0x4002e9b	        0x837d002f	                   cmp dword [rbp], 0x2f	      4461	cp-demangle.c	FUNCTION_81	FOR_1
0x4002e9f	            0x7555	                           jne 0x4002ef6	      4461	cp-demangle.c	FUNCTION_81	FOR_1
0x4002ea1	        0x488b4508	                mov rax, qword [rbp + 8]	      4464	cp-demangle.c	FUNCTION_81	FOR_1
0x4002ea5	          0x4885c0	                           test rax, rax	      4465	cp-demangle.c	FUNCTION_81	FOR_1	IF_1
0x4002ea8	            0x7454	                            je 0x4002efe	      4465	cp-demangle.c	FUNCTION_81	FOR_1	IF_1
0x4002eaa	    0x41bc00000000	                             mov r12d, 0	      4465	cp-demangle.c	FUNCTION_81	FOR_1	IF_1
0x4002eb0	            0xeb09	                           jmp 0x4002ebb	      4465	cp-demangle.c	FUNCTION_81	FOR_1	IF_1
0x4002eb2	        0x488b4508	                mov rax, qword [rbp + 8]	      4464	cp-demangle.c	FUNCTION_81	FOR_1
0x4002eb6	          0x4885c0	                           test rax, rax	      4465	cp-demangle.c	FUNCTION_81	FOR_1	IF_1
0x4002eb9	            0x7449	                            je 0x4002f04	      4465	cp-demangle.c	FUNCTION_81	FOR_1	IF_1
0x4002ebb	          0x83384a	                   cmp dword [rax], 0x4a	      4467	cp-demangle.c	FUNCTION_81	FOR_1	IF_2
0x4002ebe	            0x7519	                           jne 0x4002ed9	      4467	cp-demangle.c	FUNCTION_81	FOR_1	IF_2
0x4002ec0	        0x488b7008	                mov rsi, qword [rax + 8]	      4469	cp-demangle.c	FUNCTION_81	FOR_1	IF_2	CALL_1
0x4002ec4	          0x4889df	                            mov rdi, rbx	      4469	cp-demangle.c	FUNCTION_81	FOR_1	IF_2	CALL_1
0x4002ec7	      0xe831d8ffff	                    call sym.d_find_pack	      4469	cp-demangle.c	FUNCTION_81	FOR_1	IF_2	CALL_1
0x4002ecc	          0x4889c7	                            mov rdi, rax	      4470	cp-demangle.c	FUNCTION_81	FOR_1	IF_2	CALL_2
0x4002ecf	      0xe8b9d8ffff	                  call sym.d_pack_length	      4470	cp-demangle.c	FUNCTION_81	FOR_1	IF_2	CALL_2
0x4002ed4	          0x4101c4	                           add r12d, eax	      4470	cp-demangle.c	FUNCTION_81	FOR_1	IF_2	CALL_2
0x4002ed7	            0xeb04	                           jmp 0x4002edd	      4470	cp-demangle.c	FUNCTION_81	FOR_1	IF_2	CALL_2
0x4002ed9	        0x4183c401	                             add r12d, 1	      4473	cp-demangle.c	FUNCTION_81	FOR_1	ELSE_1
0x4002edd	        0x488b6d10	            mov rbp, qword [rbp + 0x10] 	      4462	cp-demangle.c	FUNCTION_81	FOR_1
0x4002ee1	          0x4885ed	                           test rbp, rbp	      4461	cp-demangle.c	FUNCTION_81	FOR_1
0x4002ee4	            0x741e	                            je 0x4002f04	      4461	cp-demangle.c	FUNCTION_81	FOR_1
0x4002ee6	        0x837d002f	                   cmp dword [rbp], 0x2f	      4461	cp-demangle.c	FUNCTION_81	FOR_1
0x4002eea	            0x74c6	                            je 0x4002eb2	      4461	cp-demangle.c	FUNCTION_81	FOR_1
0x4002eec	            0xeb16	                           jmp 0x4002f04	      4461	cp-demangle.c	FUNCTION_81	FOR_1
0x4002eee	    0x41bc00000000	                             mov r12d, 0	      4461	cp-demangle.c	FUNCTION_81	FOR_1
0x4002ef4	            0xeb0e	                           jmp 0x4002f04	      4461	cp-demangle.c	FUNCTION_81	FOR_1
0x4002ef6	    0x41bc00000000	                             mov r12d, 0	      4461	cp-demangle.c	FUNCTION_81	FOR_1
0x4002efc	            0xeb06	                           jmp 0x4002f04	      4461	cp-demangle.c	FUNCTION_81	FOR_1
0x4002efe	    0x41bc00000000	                             mov r12d, 0	      4465	cp-demangle.c	FUNCTION_81	FOR_1	IF_1
0x4002f04	          0x4489e6	                           mov esi, r12d	      5380	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_10	IF_64	CALL_137
0x4002f07	          0x4889df	                            mov rdi, rbx	      5380	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_10	IF_64	CALL_137
0x4002f0a	      0xe888d9ffff	                   call sym.d_append_num	      5380	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_10	IF_64	CALL_137
0x4002f0f	      0xe9a4170000	                           jmp 0x40046b8	      5381	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_10	IF_64
0x4002f14	          0x83f833	                           cmp eax, 0x33	      5384	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_65
0x4002f17	            0x7413	                            je 0x4002f2c	      5384	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_65
0x4002f19	          0x4c89f2	                            mov rdx, r14	      5385	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_138
0x4002f1c	          0x4489ee	                           mov esi, r13d	      5385	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_138
0x4002f1f	          0x4889df	                            mov rdi, rbx	      5385	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_138
0x4002f22	      0xe85a2b0000	                call sym.d_print_expr_op	      5385	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_138
0x4002f27	      0xe9c1000000	                           jmp 0x4002fed	      5385	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_138
0x4002f2c	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002f37	            0x752f	                           jne 0x4002f68	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002f39	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4002f40	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002f47	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002f4c	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002f4f	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002f55	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4002f60	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4002f68	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4002f6f	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4002f73	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4002f7a	        0xc6040328	              mov byte [rbx + rax], 0x28	      4235	cp-demangle.c	FUNCTION_72
0x4002f7e	    0xc68308010000	           mov byte [rbx + 0x108], 0x28 	      4236	cp-demangle.c	FUNCTION_72
0x4002f85	        0x498b5608	                mov rdx, qword [r14 + 8]	      6113	cp-demangle.c	FUNCTION_94	CALL_1
0x4002f89	          0x4489ee	                           mov esi, r13d	      6113	cp-demangle.c	FUNCTION_94	CALL_1
0x4002f8c	          0x4889df	                            mov rdi, rbx	      6113	cp-demangle.c	FUNCTION_94	CALL_1
0x4002f8f	      0xe84e170000	                   call sym.d_print_comp	      6113	cp-demangle.c	FUNCTION_94	CALL_1
0x4002f94	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002f9f	            0x752f	                           jne 0x4002fd0	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002fa1	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4002fa8	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002faf	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002fb4	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002fb7	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002fbd	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4002fc8	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4002fd0	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4002fd7	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4002fdb	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4002fe2	        0xc6040329	              mov byte [rbx + rax], 0x29	      4235	cp-demangle.c	FUNCTION_72
0x4002fe6	    0xc68308010000	           mov byte [rbx + 0x108], 0x29 	      4236	cp-demangle.c	FUNCTION_72
0x4002fed	          0x4d85e4	                           test r12, r12	      5392	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_66	CALL_142
0x4002ff0	     0xf8419010000	                            je 0x400310f	      5392	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_66	CALL_142
0x4002ff6	      0x410fb60424	                   movzx eax, byte [r12]	      5392	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_66	CALL_142
0x4002ffb	            0x3c67	                            cmp al, 0x67	      5392	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_66	CALL_142
0x4002ffd	            0x752b	                           jne 0x400302a	      5392	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_66	CALL_142
0x4002fff	    0x41807c240173	                cmp byte [r12 + 1], 0x73	      5392	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_66	CALL_142
0x4003005	     0xf8504010000	                           jne 0x400310f	      5392	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_66	CALL_142
0x400300b	    0x41807c240200	                   cmp byte [r12 + 2], 0	      5392	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_66	CALL_142
0x4003011	     0xf85f8000000	                           jne 0x400310f	      5392	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_66	CALL_142
0x4003017	          0x4889ea	                            mov rdx, rbp	      5394	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_143
0x400301a	          0x4489ee	                           mov esi, r13d	      5394	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_143
0x400301d	          0x4889df	                            mov rdi, rbx	      5394	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_143
0x4003020	      0xe8bd160000	                   call sym.d_print_comp	      5394	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_143
0x4003025	      0xe98e160000	                           jmp 0x40046b8	      5394	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_143
0x400302a	            0x3c73	                            cmp al, 0x73	      5395	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_12	IF_67	CALL_144
0x400302c	     0xf85dd000000	                           jne 0x400310f	      5395	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_12	IF_67	CALL_144
0x4003032	    0x41807c240174	                cmp byte [r12 + 1], 0x74	      5395	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_12	IF_67	CALL_144
0x4003038	     0xf85d1000000	                           jne 0x400310f	      5395	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_12	IF_67	CALL_144
0x400303e	    0x41807c240200	                   cmp byte [r12 + 2], 0	      5395	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_12	IF_67	CALL_144
0x4003044	     0xf85c5000000	                           jne 0x400310f	      5395	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_12	IF_67	CALL_144
0x400304a	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003055	            0x752f	                           jne 0x4003086	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003057	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400305e	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003065	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400306a	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400306d	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003073	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x400307e	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4003086	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x400308d	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4003091	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4003098	        0xc6040328	              mov byte [rbx + rax], 0x28	      4235	cp-demangle.c	FUNCTION_72
0x400309c	    0xc68308010000	           mov byte [rbx + 0x108], 0x28 	      4236	cp-demangle.c	FUNCTION_72
0x40030a3	          0x4889ea	                            mov rdx, rbp	      5399	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_12	IF_67	CALL_146
0x40030a6	          0x4489ee	                           mov esi, r13d	      5399	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_12	IF_67	CALL_146
0x40030a9	          0x4889df	                            mov rdi, rbx	      5399	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_12	IF_67	CALL_146
0x40030ac	      0xe831160000	                   call sym.d_print_comp	      5399	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_12	IF_67	CALL_146
0x40030b1	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40030bc	            0x752f	                           jne 0x40030ed	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40030be	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40030c5	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40030cc	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40030d1	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40030d4	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40030da	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x40030e5	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40030ed	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x40030f4	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x40030f8	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40030ff	        0xc6040329	              mov byte [rbx + rax], 0x29	      4235	cp-demangle.c	FUNCTION_72
0x4003103	    0xc68308010000	           mov byte [rbx + 0x108], 0x29 	      4236	cp-demangle.c	FUNCTION_72
0x400310a	      0xe9a9150000	                           jmp 0x40046b8	      4236	cp-demangle.c	FUNCTION_72
0x400310f	          0x4889ea	                            mov rdx, rbp	      5403	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_148
0x4003112	          0x4489ee	                           mov esi, r13d	      5403	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_148
0x4003115	          0x4889df	                            mov rdi, rbx	      5403	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_148
0x4003118	      0xe8012a0000	                call sym.d_print_subexpr	      5403	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_148
0x400311d	      0xe996150000	                           jmp 0x40046b8	      5403	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_148
0x4003122	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      5408	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_68
0x4003126	          0x833838	                   cmp dword [rax], 0x38	      5408	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_68
0x4003129	            0x740f	                            je 0x400313a	      5408	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_68
0x400312b	    0xc78730010000	              mov dword [rdi + 0x130], 1	      4207	cp-demangle.c	FUNCTION_69
0x4003135	      0xe97e150000	                           jmp 0x40046b8	      4207	cp-demangle.c	FUNCTION_69
0x400313a	        0x4c8b6508	                mov r12, qword [rbp + 8]	      5414	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_150
0x400313e	          0x4c89e7	                            mov rdi, r12	      5414	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_150
0x4003141	      0xe837d3ffff	                 call sym.op_is_new_cast	      5414	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_150
0x4003146	            0x85c0	                           test eax, eax	      5414	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_150
0x4003148	     0xf84fd000000	                            je 0x400324b	      5414	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_150
0x400314e	          0x4c89e2	                            mov rdx, r12	      5416	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_151
0x4003151	          0x4489ee	                           mov esi, r13d	      5416	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_151
0x4003154	          0x4889df	                            mov rdi, rbx	      5416	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_151
0x4003157	      0xe825290000	                call sym.d_print_expr_op	      5416	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_151
0x400315c	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003167	            0x752f	                           jne 0x4003198	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003169	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4003170	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003177	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400317c	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400317f	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003185	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4003190	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4003198	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x400319f	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x40031a3	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40031aa	        0xc604033c	              mov byte [rbx + rax], 0x3c	      4235	cp-demangle.c	FUNCTION_72
0x40031ae	    0xc68308010000	           mov byte [rbx + 0x108], 0x3c 	      4236	cp-demangle.c	FUNCTION_72
0x40031b5	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      5418	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_153
0x40031b9	        0x488b5008	                mov rdx, qword [rax + 8]	      5418	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_153
0x40031bd	          0x4489ee	                           mov esi, r13d	      5418	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_153
0x40031c0	          0x4889df	                            mov rdi, rbx	      5418	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_153
0x40031c3	      0xe81a150000	                   call sym.d_print_comp	      5418	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_153
0x40031c8	      0xba02000000	                              mov edx, 2	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40031cd	      0xbe00000000	                              mov esi, 0	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40031d2	          0x4889df	                            mov rdi, rbx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40031d5	      0xe810d4ffff	                call sym.d_append_buffer	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40031da	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      5420	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_155
0x40031de	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      5420	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_155
0x40031e2	          0x4489ee	                           mov esi, r13d	      5420	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_155
0x40031e5	          0x4889df	                            mov rdi, rbx	      5420	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_155
0x40031e8	      0xe8f5140000	                   call sym.d_print_comp	      5420	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_155
0x40031ed	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40031f8	            0x752f	                           jne 0x4003229	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40031fa	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4003201	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003208	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400320d	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003210	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003216	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4003221	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4003229	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4003230	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4003234	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x400323b	        0xc6040329	              mov byte [rbx + rax], 0x29	      4235	cp-demangle.c	FUNCTION_72
0x400323f	    0xc68308010000	           mov byte [rbx + 0x108], 0x29 	      4236	cp-demangle.c	FUNCTION_72
0x4003246	      0xe96d140000	                           jmp 0x40046b8	      4236	cp-demangle.c	FUNCTION_72
0x400324b	          0x4889ea	                            mov rdx, rbp	      5425	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_70	CALL_157
0x400324e	          0x4489ee	                           mov esi, r13d	      5425	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_70	CALL_157
0x4003251	          0x4889df	                            mov rdi, rbx	      5425	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_70	CALL_157
0x4003254	      0xe8bc290000	  call sym.d_maybe_print_fold_expression	      5425	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_70	CALL_157
0x4003259	            0x85c0	                           test eax, eax	      5425	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_70	CALL_157
0x400325b	     0xf8557140000	                           jne 0x40046b8	      5425	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_70	CALL_157
0x4003261	        0x488b4508	                mov rax, qword [rbp + 8]	      5431	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_71
0x4003265	          0x833831	                   cmp dword [rax], 0x31	      5431	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_71
0x4003268	            0x756c	                           jne 0x40032d6	      5431	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_71
0x400326a	        0x488b4008	                mov rax, qword [rax + 8]	      5432	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_71
0x400326e	        0x83781001	               cmp dword [rax + 0x10], 1	      5432	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_71
0x4003272	            0x7562	                           jne 0x40032d6	      5432	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_71
0x4003274	        0x488b4008	                mov rax, qword [rax + 8]	      5433	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_71
0x4003278	          0x80383e	                    cmp byte [rax], 0x3e	      5433	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_71
0x400327b	            0x7559	                           jne 0x40032d6	      5433	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_71
0x400327d	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003288	            0x752f	                           jne 0x40032b9	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400328a	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4003291	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003298	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400329d	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40032a0	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40032a6	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x40032b1	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40032b9	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x40032c0	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x40032c4	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40032cb	        0xc6040328	              mov byte [rbx + rax], 0x28	      4235	cp-demangle.c	FUNCTION_72
0x40032cf	    0xc68308010000	           mov byte [rbx + 0x108], 0x28 	      4236	cp-demangle.c	FUNCTION_72
0x40032d6	        0x488b4508	                mov rax, qword [rbp + 8]	      5436	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	CALL_159
0x40032da	        0x488b4008	                mov rax, qword [rax + 8]	      5436	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	CALL_159
0x40032de	          0x488b00	                    mov rax, qword [rax]	      5436	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	CALL_159
0x40032e1	          0x803863	                    cmp byte [rax], 0x63	      5436	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	CALL_159
0x40032e4	            0x753d	                           jne 0x4003323	      5436	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	CALL_159
0x40032e6	        0x8078016c	                cmp byte [rax + 1], 0x6c	      5436	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	CALL_159
0x40032ea	            0x7537	                           jne 0x4003323	      5436	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	CALL_159
0x40032ec	        0x80780200	                   cmp byte [rax + 2], 0	      5436	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	CALL_159
0x40032f0	            0x7531	                           jne 0x4003323	      5436	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	CALL_159
0x40032f2	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      5437	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72
0x40032f6	        0x488b4008	                mov rax, qword [rax + 8]	      5437	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72
0x40032fa	          0x833803	                      cmp dword [rax], 3	      5437	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72
0x40032fd	            0x7524	                           jne 0x4003323	      5437	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72
0x40032ff	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      5445	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	IF_73
0x4003303	          0x833a29	                   cmp dword [rdx], 0x29	      5445	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	IF_73
0x4003306	            0x740a	                            je 0x4003312	      5445	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	IF_73
0x4003308	    0xc78330010000	              mov dword [rbx + 0x130], 1	      4207	cp-demangle.c	FUNCTION_69
0x4003312	        0x488b5008	                mov rdx, qword [rax + 8]	      5447	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	CALL_161
0x4003316	          0x4489ee	                           mov esi, r13d	      5447	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	CALL_161
0x4003319	          0x4889df	                            mov rdi, rbx	      5447	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	CALL_161
0x400331c	      0xe8fd270000	                call sym.d_print_subexpr	      5447	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	CALL_161
0x4003321	            0xeb13	                           jmp 0x4003336	      5438	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72
0x4003323	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      5450	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_162
0x4003327	        0x488b5008	                mov rdx, qword [rax + 8]	      5450	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_162
0x400332b	          0x4489ee	                           mov esi, r13d	      5450	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_162
0x400332e	          0x4889df	                            mov rdi, rbx	      5450	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_162
0x4003331	      0xe8e8270000	                call sym.d_print_subexpr	      5450	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_162
0x4003336	        0x488b5508	                mov rdx, qword [rbp + 8]	      5451	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_163
0x400333a	        0x488b4208	                mov rax, qword [rdx + 8]	      5451	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_163
0x400333e	          0x488b00	                    mov rax, qword [rax]	      5451	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_163
0x4003341	           0xfb608	                   movzx ecx, byte [rax]	      5451	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_163
0x4003344	          0x83f969	                           cmp ecx, 0x69	      5451	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_163
0x4003347	     0xf85db000000	                           jne 0x4003428	      5451	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_163
0x400334d	        0x80780178	                cmp byte [rax + 1], 0x78	      5451	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_163
0x4003351	     0xf85e2000000	                           jne 0x4003439	      5451	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_163
0x4003357	        0x80780200	                   cmp byte [rax + 2], 0	      5451	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_163
0x400335b	     0xf85d8000000	                           jne 0x4003439	      5451	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_163
0x4003361	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400336c	            0x752f	                           jne 0x400339d	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400336e	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4003375	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400337c	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003381	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003384	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400338a	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4003395	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400339d	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x40033a4	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x40033a8	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40033af	        0xc604035b	              mov byte [rbx + rax], 0x5b	      4235	cp-demangle.c	FUNCTION_72
0x40033b3	    0xc68308010000	           mov byte [rbx + 0x108], 0x5b 	      4236	cp-demangle.c	FUNCTION_72
0x40033ba	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      5454	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_165
0x40033be	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      5454	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_165
0x40033c2	          0x4489ee	                           mov esi, r13d	      5454	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_165
0x40033c5	          0x4889df	                            mov rdi, rbx	      5454	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_165
0x40033c8	      0xe815130000	                   call sym.d_print_comp	      5454	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_165
0x40033cd	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40033d8	            0x752f	                           jne 0x4003409	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40033da	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40033e1	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40033e8	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40033ed	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40033f0	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40033f6	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4003401	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4003409	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4003410	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4003414	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x400341b	        0xc604035d	              mov byte [rbx + rax], 0x5d	      4235	cp-demangle.c	FUNCTION_72
0x400341f	    0xc68308010000	           mov byte [rbx + 0x108], 0x5d 	      4236	cp-demangle.c	FUNCTION_72
0x4003426	            0xeb2f	                           jmp 0x4003457	      4236	cp-demangle.c	FUNCTION_72
0x4003428	          0x83f963	                           cmp ecx, 0x63	      5459	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_15	IF_75	CALL_167
0x400342b	            0x750c	                           jne 0x4003439	      5459	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_15	IF_75	CALL_167
0x400342d	        0x8078016c	                cmp byte [rax + 1], 0x6c	      5459	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_15	IF_75	CALL_167
0x4003431	            0x7506	                           jne 0x4003439	      5459	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_15	IF_75	CALL_167
0x4003433	        0x80780200	                   cmp byte [rax + 2], 0	      5459	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_15	IF_75	CALL_167
0x4003437	            0x740b	                            je 0x4003444	      5459	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_15	IF_75	CALL_167
0x4003439	          0x4489ee	                           mov esi, r13d	      5460	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_15	CALL_168
0x400343c	          0x4889df	                            mov rdi, rbx	      5460	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_15	CALL_168
0x400343f	      0xe83d260000	                call sym.d_print_expr_op	      5460	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_15	CALL_168
0x4003444	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      5461	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_15	CALL_169
0x4003448	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      5461	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_15	CALL_169
0x400344c	          0x4489ee	                           mov esi, r13d	      5461	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_15	CALL_169
0x400344f	          0x4889df	                            mov rdi, rbx	      5461	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_15	CALL_169
0x4003452	      0xe8c7260000	                call sym.d_print_subexpr	      5461	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_15	CALL_169
0x4003457	        0x488b4508	                mov rax, qword [rbp + 8]	      5464	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_76
0x400345b	          0x833831	                   cmp dword [rax], 0x31	      5464	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_76
0x400345e	     0xf8554120000	                           jne 0x40046b8	      5464	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_76
0x4003464	        0x488b4008	                mov rax, qword [rax + 8]	      5465	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_76
0x4003468	        0x83781001	               cmp dword [rax + 0x10], 1	      5465	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_76
0x400346c	     0xf8546120000	                           jne 0x40046b8	      5465	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_76
0x4003472	        0x488b4008	                mov rax, qword [rax + 8]	      5466	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_76
0x4003476	          0x80383e	                    cmp byte [rax], 0x3e	      5466	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_76
0x4003479	     0xf8539120000	                           jne 0x40046b8	      5466	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_76
0x400347f	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400348a	            0x752f	                           jne 0x40034bb	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400348c	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4003493	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400349a	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400349f	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40034a2	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40034a8	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x40034b3	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40034bb	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x40034c2	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x40034c6	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40034cd	        0xc6040329	              mov byte [rbx + rax], 0x29	      4235	cp-demangle.c	FUNCTION_72
0x40034d1	    0xc68308010000	           mov byte [rbx + 0x108], 0x29 	      4236	cp-demangle.c	FUNCTION_72
0x40034d8	      0xe9db110000	                           jmp 0x40046b8	      4236	cp-demangle.c	FUNCTION_72
0x40034dd	    0xc78730010000	              mov dword [rdi + 0x130], 1	      4207	cp-demangle.c	FUNCTION_69
0x40034e7	      0xe9cc110000	                           jmp 0x40046b8	      4207	cp-demangle.c	FUNCTION_69
0x40034ec	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      5477	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_77
0x40034f0	          0x83383a	                   cmp dword [rax], 0x3a	      5477	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_77
0x40034f3	            0x7509	                           jne 0x40034fe	      5477	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_77
0x40034f5	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5478	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_77
0x40034f9	          0x83383b	                   cmp dword [rax], 0x3b	      5478	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_77
0x40034fc	            0x740f	                            je 0x400350d	      5478	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_77
0x40034fe	    0xc78330010000	              mov dword [rbx + 0x130], 1	      4207	cp-demangle.c	FUNCTION_69
0x4003508	      0xe9ab110000	                           jmp 0x40046b8	      4207	cp-demangle.c	FUNCTION_69
0x400350d	          0x4889ea	                            mov rdx, rbp	      5483	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_78	CALL_173
0x4003510	      0xe800270000	  call sym.d_maybe_print_fold_expression	      5483	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_78	CALL_173
0x4003515	            0x85c0	                           test eax, eax	      5483	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_78	CALL_173
0x4003517	     0xf859b110000	                           jne 0x40046b8	      5483	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_78	CALL_173
0x400351d	        0x4c8b7508	                mov r14, qword [rbp + 8]	      5486	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4003521	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      5487	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4003525	        0x4c8b6008	                mov r12, qword [rax + 8]	      5487	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4003529	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5488	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400352d	        0x4c8b7808	                mov r15, qword [rax + 8]	      5488	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4003531	        0x488b6810	            mov rbp, qword [rax + 0x10] 	      5489	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4003535	        0x498b4608	                mov rax, qword [r14 + 8]	      5491	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_174
0x4003539	          0x488b00	                    mov rax, qword [rax]	      5491	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_174
0x400353c	          0x803871	                    cmp byte [rax], 0x71	      5491	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_174
0x400353f	            0x755b	                           jne 0x400359c	      5491	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_174
0x4003541	        0x80780175	                cmp byte [rax + 1], 0x75	      5491	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_174
0x4003545	            0x7555	                           jne 0x400359c	      5491	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_174
0x4003547	        0x80780200	                   cmp byte [rax + 2], 0	      5491	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_174
0x400354b	            0x754f	                           jne 0x400359c	      5491	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_174
0x400354d	          0x4c89e2	                            mov rdx, r12	      5493	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_175
0x4003550	          0x4489ee	                           mov esi, r13d	      5493	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_175
0x4003553	          0x4889df	                            mov rdi, rbx	      5493	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_175
0x4003556	      0xe8c3250000	                call sym.d_print_subexpr	      5493	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_175
0x400355b	          0x4c89f2	                            mov rdx, r14	      5494	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_176
0x400355e	          0x4489ee	                           mov esi, r13d	      5494	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_176
0x4003561	          0x4889df	                            mov rdi, rbx	      5494	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_176
0x4003564	      0xe818250000	                call sym.d_print_expr_op	      5494	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_176
0x4003569	          0x4c89fa	                            mov rdx, r15	      5495	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_177
0x400356c	          0x4489ee	                           mov esi, r13d	      5495	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_177
0x400356f	          0x4889df	                            mov rdi, rbx	      5495	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_177
0x4003572	      0xe8a7250000	                call sym.d_print_subexpr	      5495	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_177
0x4003577	      0xba03000000	                              mov edx, 3	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400357c	      0xbe00000000	                              mov esi, 0	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003581	          0x4889df	                            mov rdi, rbx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003584	      0xe861d0ffff	                call sym.d_append_buffer	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003589	          0x4889ea	                            mov rdx, rbp	      5497	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_179
0x400358c	          0x4489ee	                           mov esi, r13d	      5497	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_179
0x400358f	          0x4889df	                            mov rdi, rbx	      5497	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_179
0x4003592	      0xe887250000	                call sym.d_print_subexpr	      5497	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_179
0x4003597	      0xe91c110000	                           jmp 0x40046b8	      5497	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_179
0x400359c	      0xba04000000	                              mov edx, 4	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40035a1	      0xbe00000000	                              mov esi, 0	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40035a6	          0x4889df	                            mov rdi, rbx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40035a9	      0xe83cd0ffff	                call sym.d_append_buffer	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40035ae	    0x49837c240800	                  cmp qword [r12 + 8], 0	      5502	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	IF_80
0x40035b4	            0x7467	                            je 0x400361d	      5502	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	IF_80
0x40035b6	          0x4c89e2	                            mov rdx, r12	      5504	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	IF_80	CALL_181
0x40035b9	          0x4489ee	                           mov esi, r13d	      5504	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	IF_80	CALL_181
0x40035bc	          0x4889df	                            mov rdi, rbx	      5504	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	IF_80	CALL_181
0x40035bf	      0xe85a250000	                call sym.d_print_subexpr	      5504	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	IF_80	CALL_181
0x40035c4	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40035cf	            0x752f	                           jne 0x4003600	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40035d1	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40035d8	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40035df	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40035e4	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40035e7	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40035ed	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x40035f8	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4003600	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4003607	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x400360b	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4003612	        0xc6040320	              mov byte [rbx + rax], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x4003616	    0xc68308010000	           mov byte [rbx + 0x108], 0x20 	      4236	cp-demangle.c	FUNCTION_72
0x400361d	          0x4c89fa	                            mov rdx, r15	      5507	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	CALL_183
0x4003620	          0x4489ee	                           mov esi, r13d	      5507	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	CALL_183
0x4003623	          0x4889df	                            mov rdi, rbx	      5507	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	CALL_183
0x4003626	      0xe8b7100000	                   call sym.d_print_comp	      5507	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	CALL_183
0x400362b	          0x4885ed	                           test rbp, rbp	      5508	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	IF_81
0x400362e	     0xf8484100000	                            je 0x40046b8	      5508	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	IF_81
0x4003634	          0x4889ea	                            mov rdx, rbp	      5509	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	CALL_184
0x4003637	          0x4489ee	                           mov esi, r13d	      5509	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	CALL_184
0x400363a	          0x4889df	                            mov rdi, rbx	      5509	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	CALL_184
0x400363d	      0xe8dc240000	                call sym.d_print_subexpr	      5509	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	CALL_184
0x4003642	      0xe971100000	                           jmp 0x40046b8	      5509	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	CALL_184
0x4003647	    0xc78730010000	              mov dword [rdi + 0x130], 1	      4207	cp-demangle.c	FUNCTION_69
0x4003651	      0xe962100000	                           jmp 0x40046b8	      4207	cp-demangle.c	FUNCTION_69
0x4003656	        0x488b5508	                mov rdx, qword [rbp + 8]	      5527	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82
0x400365a	    0x41bc00000000	                             mov r12d, 0	      5526	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4003660	          0x833a27	                   cmp dword [rdx], 0x27	      5527	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82
0x4003663	     0xf8505020000	                           jne 0x400386e	      5527	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82
0x4003669	        0x488b5208	                mov rdx, qword [rdx + 8]	      5529	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82
0x400366d	        0x448b621c	           mov r12d, dword [rdx + 0x1c] 	      5529	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82
0x4003671	        0x4183fc01	                             cmp r12d, 1	      5530	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2
0x4003675	     0xf82f3010000	                            jb 0x400386e	      5530	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2
0x400367b	        0x4183fc06	                             cmp r12d, 6	      5530	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2
0x400367f	            0x760f	                           jbe 0x4003690	      5530	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2
0x4003681	        0x4183fc07	                             cmp r12d, 7	      5530	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2
0x4003685	     0xf8496010000	                            je 0x4003821	      5530	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2
0x400368b	      0xe9de010000	                           jmp 0x400386e	      5530	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2
0x4003690	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	      5538	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83
0x4003694	          0x833a00	                      cmp dword [rdx], 0	      5538	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83
0x4003697	     0xf85d1010000	                           jne 0x400386e	      5538	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83
0x400369d	          0x83f83d	                           cmp eax, 0x3d	      5540	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	IF_84
0x40036a0	            0x7556	                           jne 0x40036f8	      5540	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	IF_84
0x40036a2	    0x4881bf000100	          cmp qword [rdi + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40036ad	            0x752c	                           jne 0x40036db	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40036af	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40036b6	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40036bd	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40036c2	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40036c8	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x40036d3	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40036db	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x40036e2	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x40036e6	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40036ed	        0xc604032d	              mov byte [rbx + rax], 0x2d	      4235	cp-demangle.c	FUNCTION_72
0x40036f1	    0xc68308010000	           mov byte [rbx + 0x108], 0x2d 	      4236	cp-demangle.c	FUNCTION_72
0x40036f8	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	      5542	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	CALL_187
0x40036fc	          0x4489ee	                           mov esi, r13d	      5542	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	CALL_187
0x40036ff	          0x4889df	                            mov rdi, rbx	      5542	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	CALL_187
0x4003702	      0xe8db0f0000	                   call sym.d_print_comp	      5542	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	CALL_187
0x4003707	        0x4183ec02	                             sub r12d, 2	      5543	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	SWITCH_3
0x400370b	        0x4183fc04	                             cmp r12d, 4	      5543	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	SWITCH_3
0x400370f	     0xf87a30f0000	                            ja 0x40046b8	      5543	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	SWITCH_3
0x4003715	          0x4589e4	                          mov r12d, r12d	      5543	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	SWITCH_3
0x4003718	    0x42ff24e50000	                       jmp qword [r12*8]	      5543	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	SWITCH_3
0x4003720	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400372b	            0x752f	                           jne 0x400375c	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400372d	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4003734	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400373b	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003740	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003743	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003749	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4003754	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400375c	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4003763	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4003767	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x400376e	        0xc6040375	              mov byte [rbx + rax], 0x75	      4235	cp-demangle.c	FUNCTION_72
0x4003772	    0xc68308010000	           mov byte [rbx + 0x108], 0x75 	      4236	cp-demangle.c	FUNCTION_72
0x4003779	      0xe93a0f0000	                           jmp 0x40046b8	      4236	cp-demangle.c	FUNCTION_72
0x400377e	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003789	            0x752f	                           jne 0x40037ba	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400378b	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4003792	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003799	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400379e	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40037a1	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40037a7	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x40037b2	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40037ba	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x40037c1	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x40037c5	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40037cc	        0xc604036c	              mov byte [rbx + rax], 0x6c	      4235	cp-demangle.c	FUNCTION_72
0x40037d0	    0xc68308010000	           mov byte [rbx + 0x108], 0x6c 	      4236	cp-demangle.c	FUNCTION_72
0x40037d7	      0xe9dc0e0000	                           jmp 0x40046b8	      4236	cp-demangle.c	FUNCTION_72
0x40037dc	      0xba02000000	                              mov edx, 2	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40037e1	      0xbe00000000	                              mov esi, 0	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40037e6	          0x4889df	                            mov rdi, rbx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40037e9	      0xe8fccdffff	                call sym.d_append_buffer	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40037ee	      0xe9c50e0000	                           jmp 0x40046b8	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40037f3	      0xba02000000	                              mov edx, 2	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40037f8	      0xbe00000000	                              mov esi, 0	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40037fd	          0x4889df	                            mov rdi, rbx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003800	      0xe8e5cdffff	                call sym.d_append_buffer	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003805	      0xe9ae0e0000	                           jmp 0x40046b8	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400380a	      0xba03000000	                              mov edx, 3	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400380f	      0xbe00000000	                              mov esi, 0	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003814	          0x4889df	                            mov rdi, rbx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003817	      0xe8cecdffff	                call sym.d_append_buffer	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400381c	      0xe9970e0000	                           jmp 0x40046b8	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003821	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	      5568	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85
0x4003825	          0x833a00	                      cmp dword [rdx], 0	      5568	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85
0x4003828	            0x7544	                           jne 0x400386e	      5568	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85
0x400382a	        0x837a1001	               cmp dword [rdx + 0x10], 1	      5570	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85
0x400382e	            0x753e	                           jne 0x400386e	      5570	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85
0x4003830	          0x83f83c	                           cmp eax, 0x3c	      5570	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85
0x4003833	            0x7539	                           jne 0x400386e	      5570	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85
0x4003835	        0x488b4208	                mov rax, qword [rdx + 8]	      5572	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85	SWITCH_4
0x4003839	           0xfb600	                   movzx eax, byte [rax]	      5572	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85	SWITCH_4
0x400383c	            0x3c30	                            cmp al, 0x30	      5572	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85	SWITCH_4
0x400383e	            0x7406	                            je 0x4003846	      5572	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85	SWITCH_4
0x4003840	            0x3c31	                            cmp al, 0x31	      5572	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85	SWITCH_4
0x4003842	            0x7416	                            je 0x400385a	      5572	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85	SWITCH_4
0x4003844	            0xeb28	                           jmp 0x400386e	      5572	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85	SWITCH_4
0x4003846	      0xba05000000	                              mov edx, 5	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400384b	      0xbe00000000	                              mov esi, 0	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003850	      0xe895cdffff	                call sym.d_append_buffer	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003855	      0xe95e0e0000	                           jmp 0x40046b8	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400385a	      0xba04000000	                              mov edx, 4	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400385f	      0xbe00000000	                              mov esi, 0	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003864	      0xe881cdffff	                call sym.d_append_buffer	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003869	      0xe94a0e0000	                           jmp 0x40046b8	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400386e	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003879	            0x752f	                           jne 0x40038aa	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400387b	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4003882	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003889	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400388e	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003891	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003897	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x40038a2	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40038aa	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x40038b1	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x40038b5	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40038bc	        0xc6040328	              mov byte [rbx + rax], 0x28	      4235	cp-demangle.c	FUNCTION_72
0x40038c0	    0xc68308010000	           mov byte [rbx + 0x108], 0x28 	      4236	cp-demangle.c	FUNCTION_72
0x40038c7	        0x488b5508	                mov rdx, qword [rbp + 8]	      5592	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_196
0x40038cb	          0x4489ee	                           mov esi, r13d	      5592	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_196
0x40038ce	          0x4889df	                            mov rdi, rbx	      5592	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_196
0x40038d1	      0xe80c0e0000	                   call sym.d_print_comp	      5592	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_196
0x40038d6	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40038dd	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40038e3	            0x7545	                           jne 0x400392a	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40038e5	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40038ec	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40038f3	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40038f8	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40038fb	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003901	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4003909	    0x48c783000100	              mov qword [rbx + 0x100], 1	      4235	cp-demangle.c	FUNCTION_72
0x4003914	          0xc60329	                    mov byte [rbx], 0x29	      4235	cp-demangle.c	FUNCTION_72
0x4003917	    0xc68308010000	           mov byte [rbx + 0x108], 0x29 	      4236	cp-demangle.c	FUNCTION_72
0x400391e	        0x837d003d	                   cmp dword [rbp], 0x3d	      5594	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_86
0x4003922	     0xf85850d0000	                           jne 0x40046ad	      5594	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_86
0x4003928	            0xeb54	                           jmp 0x400397e	      5594	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_86
0x400392a	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x400392e	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4003935	        0xc6040329	              mov byte [rbx + rax], 0x29	      4235	cp-demangle.c	FUNCTION_72
0x4003939	    0xc68308010000	           mov byte [rbx + 0x108], 0x29 	      4236	cp-demangle.c	FUNCTION_72
0x4003940	        0x837d003d	                   cmp dword [rbp], 0x3d	      5594	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_86
0x4003944	            0x7555	                           jne 0x400399b	      5594	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_86
0x4003946	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400394d	            0x752f	                           jne 0x400397e	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400394f	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4003956	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400395d	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003962	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003965	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400396b	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4003976	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400397e	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4003985	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4003989	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4003990	        0xc604032d	              mov byte [rbx + rax], 0x2d	      4235	cp-demangle.c	FUNCTION_72
0x4003994	    0xc68308010000	           mov byte [rbx + 0x108], 0x2d 	      4236	cp-demangle.c	FUNCTION_72
0x400399b	        0x4183fc08	                             cmp r12d, 8	      5596	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_87
0x400399f	     0xf85c70c0000	                           jne 0x400466c	      5596	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_87
0x40039a5	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40039b0	            0x752f	                           jne 0x40039e1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40039b2	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40039b9	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40039c0	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40039c5	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40039c8	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40039ce	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x40039d9	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40039e1	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x40039e8	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x40039ec	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40039f3	        0xc604035b	              mov byte [rbx + rax], 0x5b	      4235	cp-demangle.c	FUNCTION_72
0x40039f7	    0xc68308010000	           mov byte [rbx + 0x108], 0x5b 	      4236	cp-demangle.c	FUNCTION_72
0x40039fe	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	      5598	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_200
0x4003a02	          0x4489ee	                           mov esi, r13d	      5598	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_200
0x4003a05	          0x4889df	                            mov rdi, rbx	      5598	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_200
0x4003a08	      0xe8d50c0000	                   call sym.d_print_comp	      5598	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_200
0x4003a0d	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003a18	            0x752f	                           jne 0x4003a49	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003a1a	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4003a21	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003a28	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003a2d	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003a30	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003a36	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4003a41	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4003a49	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4003a50	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4003a54	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4003a5b	        0xc604035d	              mov byte [rbx + rax], 0x5d	      4235	cp-demangle.c	FUNCTION_72
0x4003a5f	    0xc68308010000	           mov byte [rbx + 0x108], 0x5d 	      4236	cp-demangle.c	FUNCTION_72
0x4003a66	      0xe94d0c0000	                           jmp 0x40046b8	      4236	cp-demangle.c	FUNCTION_72
0x4003a6b	    0x4c8da424c000	                   lea r12, [rsp + 0xc0]	        33	stdio2.h	FUNCTION_109	CALL_1
0x4003a73	        0x448b4508	                mov r8d, dword [rbp + 8]	        33	stdio2.h	FUNCTION_109	CALL_1
0x4003a77	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_109	CALL_1
0x4003a7c	      0xba19000000	                           mov edx, 0x19	        33	stdio2.h	FUNCTION_109	CALL_1
0x4003a81	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_109	CALL_1
0x4003a86	          0x4c89e7	                            mov rdi, r12	        33	stdio2.h	FUNCTION_109	CALL_1
0x4003a89	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_109	CALL_1
0x4003a8e	      0xe800000000	                          call 0x4003a93	        33	stdio2.h	FUNCTION_109	CALL_1
0x4003a93	      0xb800000000	                              mov eax, 0	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003a98	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003a9f	          0x4c89e7	                            mov rdi, r12	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003aa2	            0xf2ae	              repne scasb al, byte [rdi]	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003aa4	          0x48f7d1	                                 not rcx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003aa7	        0x4883e901	                              sub rcx, 1	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4003aab	          0x4989cd	                            mov r13, rcx	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4003aae	     0xf84040c0000	                            je 0x40046b8	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4003ab4	      0xbd00000000	                              mov ebp, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4003ab9	    0x440fb6a42cc0	    movzx r12d, byte [rsp + rbp + 0xc0] 	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4003ac2	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003acd	            0x752f	                           jne 0x4003afe	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003acf	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4003ad6	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003add	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003ae2	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003ae5	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003aeb	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4003af6	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4003afe	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4003b05	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4003b09	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4003b10	        0x44882403	              mov byte [rbx + rax], r12b	      4235	cp-demangle.c	FUNCTION_72
0x4003b14	    0x4488a3080100	            mov byte [rbx + 0x108], r12b	      4236	cp-demangle.c	FUNCTION_72
0x4003b1b	        0x4883c501	                              add rbp, 1	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4003b1f	          0x4939ed	                            cmp r13, rbp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4003b22	            0x7595	                           jne 0x4003ab9	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4003b24	      0xe98f0b0000	                           jmp 0x40046b8	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4003b29	    0x41bc00000000	                             mov r12d, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4003b2f	    0x41bf00000000	                             mov r15d, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4003b35	      0x450fb63424	                  movzx r14d, byte [r12]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4003b3a	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003b45	            0x752f	                           jne 0x4003b76	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003b47	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4003b4e	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003b55	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003b5a	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003b5d	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003b63	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4003b6e	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4003b76	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4003b7d	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4003b81	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4003b88	        0x44883403	              mov byte [rbx + rax], r14b	      4235	cp-demangle.c	FUNCTION_72
0x4003b8c	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x4003b93	        0x4983c401	                              add r12, 1	      4236	cp-demangle.c	FUNCTION_72
0x4003b97	          0x4d39e7	                            cmp r15, r12	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4003b9a	            0x7599	                           jne 0x4003b35	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4003b9c	        0x488b5508	                mov rdx, qword [rbp + 8]	      5610	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_204
0x4003ba0	          0x4489ee	                           mov esi, r13d	      5610	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_204
0x4003ba3	          0x4889df	                            mov rdi, rbx	      5610	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_204
0x4003ba6	      0xe8370b0000	                   call sym.d_print_comp	      5610	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_204
0x4003bab	      0xe9080b0000	                           jmp 0x40046b8	      5611	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4003bb0	        0x488b5508	                mov rdx, qword [rbp + 8]	      5614	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_205
0x4003bb4	      0xe8290b0000	                   call sym.d_print_comp	      5614	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_205
0x4003bb9	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	      5615	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_206
0x4003bbd	          0x4489ee	                           mov esi, r13d	      5615	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_206
0x4003bc0	          0x4889df	                            mov rdi, rbx	      5615	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_206
0x4003bc3	      0xe81a0b0000	                   call sym.d_print_comp	      5615	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_206
0x4003bc8	      0xe9eb0a0000	                           jmp 0x40046b8	      5616	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4003bcd	          0x8b6d08	                mov ebp, dword [rbp + 8]	      5619	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_207
0x4003bd0	    0x4881bf000100	          cmp qword [rdi + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003bdb	            0x752c	                           jne 0x4003c09	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003bdd	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4003be4	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003beb	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003bf0	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003bf6	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4003c01	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4003c09	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4003c10	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4003c14	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4003c1b	        0x40882c03	               mov byte [rbx + rax], bpl	      4235	cp-demangle.c	FUNCTION_72
0x4003c1f	    0x4088ab080100	             mov byte [rbx + 0x108], bpl	      4236	cp-demangle.c	FUNCTION_72
0x4003c26	      0xe98d0a0000	                           jmp 0x40046b8	      4236	cp-demangle.c	FUNCTION_72
0x4003c2b	    0x41bc00000000	                             mov r12d, 0	      4236	cp-demangle.c	FUNCTION_72
0x4003c31	    0x41bf00000000	                             mov r15d, 0	      4236	cp-demangle.c	FUNCTION_72
0x4003c37	      0x450fb63424	                  movzx r14d, byte [r12]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4003c3c	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003c47	            0x752f	                           jne 0x4003c78	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003c49	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4003c50	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003c57	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003c5c	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003c5f	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003c65	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4003c70	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4003c78	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4003c7f	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4003c83	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4003c8a	        0x44883403	              mov byte [rbx + rax], r14b	      4235	cp-demangle.c	FUNCTION_72
0x4003c8e	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x4003c95	        0x4983c401	                              add r12, 1	      4236	cp-demangle.c	FUNCTION_72
0x4003c99	          0x4d39e7	                            cmp r15, r12	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4003c9c	            0x7599	                           jne 0x4003c37	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4003c9e	        0x488b5508	                mov rdx, qword [rbp + 8]	      5624	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_209
0x4003ca2	          0x4489ee	                           mov esi, r13d	      5624	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_209
0x4003ca5	          0x4889df	                            mov rdi, rbx	      5624	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_209
0x4003ca8	      0xe8350a0000	                   call sym.d_print_comp	      5624	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_209
0x4003cad	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003cb8	            0x752f	                           jne 0x4003ce9	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003cba	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4003cc1	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003cc8	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003ccd	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003cd0	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003cd6	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4003ce1	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4003ce9	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4003cf0	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4003cf4	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4003cfb	        0xc6040329	              mov byte [rbx + rax], 0x29	      4235	cp-demangle.c	FUNCTION_72
0x4003cff	    0xc68308010000	           mov byte [rbx + 0x108], 0x29 	      4236	cp-demangle.c	FUNCTION_72
0x4003d06	      0xe9ad090000	                           jmp 0x40046b8	      4236	cp-demangle.c	FUNCTION_72
0x4003d0b	        0x488b7508	                mov rsi, qword [rbp + 8]	      5632	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_211
0x4003d0f	      0xe8e9c9ffff	                    call sym.d_find_pack	      5632	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_211
0x4003d14	          0x4885c0	                           test rax, rax	      5633	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_89
0x4003d17	            0x7526	                           jne 0x4003d3f	      5633	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_89
0x4003d19	        0x488b5508	                mov rdx, qword [rbp + 8]	      5638	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_89	CALL_212
0x4003d1d	          0x4489ee	                           mov esi, r13d	      5638	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_89	CALL_212
0x4003d20	          0x4889df	                            mov rdi, rbx	      5638	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_89	CALL_212
0x4003d23	      0xe8f61d0000	                call sym.d_print_subexpr	      5638	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_89	CALL_212
0x4003d28	      0xba03000000	                              mov edx, 3	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003d2d	      0xbe00000000	                              mov esi, 0	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003d32	          0x4889df	                            mov rdi, rbx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003d35	      0xe8b0c8ffff	                call sym.d_append_buffer	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003d3a	      0xe979090000	                           jmp 0x40046b8	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003d3f	          0x4889c7	                            mov rdi, rax	      5643	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_214
0x4003d42	      0xe846caffff	                  call sym.d_pack_length	      5643	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_214
0x4003d47	        0x89442408	                mov dword [rsp + 8], eax	      5643	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_214
0x4003d4b	        0x488b4d08	                mov rcx, qword [rbp + 8]	      5644	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4003d4f	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      5644	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4003d54	            0x85c0	                           test eax, eax	      5645	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3
0x4003d56	     0xf8e5c090000	                           jle 0x40046b8	      5645	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3
0x4003d5c	    0x41bf00000000	                             mov r15d, 0	      5645	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3
0x4003d62	          0x83e801	                              sub eax, 1	      5649	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3	IF_90
0x4003d65	        0x89442418	             mov dword [rsp + 0x18], eax	      5649	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3	IF_90
0x4003d69	    0x4489bb3c0100	           mov dword [rbx + 0x13c], r15d	      5647	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3
0x4003d70	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      5648	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3	CALL_215
0x4003d75	          0x4489ee	                           mov esi, r13d	      5648	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3	CALL_215
0x4003d78	          0x4889df	                            mov rdi, rbx	      5648	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3	CALL_215
0x4003d7b	      0xe862090000	                   call sym.d_print_comp	      5648	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3	CALL_215
0x4003d80	      0x44397c2418	           cmp dword [rsp + 0x18], r15d 	      5649	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3	IF_90
0x4003d85	            0x7e72	                           jle 0x4003df9	      5649	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3	IF_90
0x4003d87	      0xbd00000000	                              mov ebp, 0	      5649	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3	IF_90
0x4003d8c	    0x41be00000000	                             mov r14d, 0	      5649	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3	IF_90
0x4003d92	      0x440fb66500	                  movzx r12d, byte [rbp]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4003d97	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003da2	            0x752f	                           jne 0x4003dd3	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003da4	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4003dab	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003db2	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003db7	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003dba	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003dc0	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4003dcb	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4003dd3	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4003dda	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4003dde	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4003de5	        0x44882403	              mov byte [rbx + rax], r12b	      4235	cp-demangle.c	FUNCTION_72
0x4003de9	    0x4488a3080100	            mov byte [rbx + 0x108], r12b	      4236	cp-demangle.c	FUNCTION_72
0x4003df0	        0x4883c501	                              add rbp, 1	      4236	cp-demangle.c	FUNCTION_72
0x4003df4	          0x4939ee	                            cmp r14, rbp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4003df7	            0x7599	                           jne 0x4003d92	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4003df9	        0x4183c701	                             add r15d, 1	      5645	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3
0x4003dfd	      0x44397c2408	               cmp dword [rsp + 8], r15d	      5645	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3
0x4003e02	     0xf8561ffffff	                           jne 0x4003d69	      5645	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3
0x4003e08	      0xe9ab080000	                           jmp 0x40046b8	      5645	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3
0x4003e0d	        0x4c8b7508	                mov r14, qword [rbp + 8]	      5657	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4003e11	      0xbd00000000	                              mov ebp, 0	      5657	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4003e16	    0x41bd00000000	                             mov r13d, 0	      5657	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4003e1c	          0x4d85f6	                           test r14, r14	      5658	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_91
0x4003e1f	            0x7577	                           jne 0x4003e98	      5658	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_91
0x4003e21	      0xbd00000000	                              mov ebp, 0	      5658	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_91
0x4003e26	    0x41bd00000000	                             mov r13d, 0	      5658	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_91
0x4003e2c	      0x440fb66500	                  movzx r12d, byte [rbp]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4003e31	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003e3c	            0x752f	                           jne 0x4003e6d	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003e3e	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4003e45	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003e4c	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003e51	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003e54	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003e5a	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4003e65	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4003e6d	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4003e74	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4003e78	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4003e7f	        0x44882403	              mov byte [rbx + rax], r12b	      4235	cp-demangle.c	FUNCTION_72
0x4003e83	    0x4488a3080100	            mov byte [rbx + 0x108], r12b	      4236	cp-demangle.c	FUNCTION_72
0x4003e8a	        0x4883c501	                              add rbp, 1	      4236	cp-demangle.c	FUNCTION_72
0x4003e8e	          0x4c39ed	                            cmp rbp, r13	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4003e91	            0x7599	                           jne 0x4003e2c	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4003e93	      0xe920080000	                           jmp 0x40046b8	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4003e98	      0x440fb66500	                  movzx r12d, byte [rbp]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4003e9d	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003ea8	            0x752f	                           jne 0x4003ed9	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003eaa	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4003eb1	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003eb8	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003ebd	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003ec0	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003ec6	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4003ed1	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4003ed9	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4003ee0	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4003ee4	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4003eeb	        0x44882403	              mov byte [rbx + rax], r12b	      4235	cp-demangle.c	FUNCTION_72
0x4003eef	    0x4488a3080100	            mov byte [rbx + 0x108], r12b	      4236	cp-demangle.c	FUNCTION_72
0x4003ef6	        0x4883c501	                              add rbp, 1	      4236	cp-demangle.c	FUNCTION_72
0x4003efa	          0x4939ed	                            cmp r13, rbp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4003efd	            0x7599	                           jne 0x4003e98	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4003eff	    0x488dac24c000	                   lea rbp, [rsp + 0xc0]	        33	stdio2.h	FUNCTION_109	CALL_1
0x4003f07	          0x4589f0	                           mov r8d, r14d	        33	stdio2.h	FUNCTION_109	CALL_1
0x4003f0a	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_109	CALL_1
0x4003f0f	      0xba19000000	                           mov edx, 0x19	        33	stdio2.h	FUNCTION_109	CALL_1
0x4003f14	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_109	CALL_1
0x4003f19	          0x4889ef	                            mov rdi, rbp	        33	stdio2.h	FUNCTION_109	CALL_1
0x4003f1c	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_109	CALL_1
0x4003f21	      0xe800000000	                          call 0x4003f26	        33	stdio2.h	FUNCTION_109	CALL_1
0x4003f26	      0xb800000000	                              mov eax, 0	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003f2b	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003f32	          0x4889ef	                            mov rdi, rbp	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003f35	            0xf2ae	              repne scasb al, byte [rdi]	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003f37	          0x48f7d1	                                 not rcx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003f3a	        0x4883e901	                              sub rcx, 1	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4003f3e	          0x4989cd	                            mov r13, rcx	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4003f41	            0x7470	                            je 0x4003fb3	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4003f43	      0xbd00000000	                              mov ebp, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4003f48	    0x440fb6a42cc0	    movzx r12d, byte [rsp + rbp + 0xc0] 	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4003f51	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003f5c	            0x752f	                           jne 0x4003f8d	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003f5e	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4003f65	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003f6c	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003f71	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003f74	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003f7a	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4003f85	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4003f8d	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4003f94	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4003f98	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4003f9f	        0x44882403	              mov byte [rbx + rax], r12b	      4235	cp-demangle.c	FUNCTION_72
0x4003fa3	    0x4488a3080100	            mov byte [rbx + 0x108], r12b	      4236	cp-demangle.c	FUNCTION_72
0x4003faa	        0x4883c501	                              add rbp, 1	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4003fae	          0x4939ed	                            cmp r13, rbp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4003fb1	            0x7595	                           jne 0x4003f48	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4003fb3	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003fbe	            0x752f	                           jne 0x4003fef	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003fc0	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4003fc7	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003fce	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003fd3	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003fd6	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003fdc	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4003fe7	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4003fef	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4003ff6	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4003ffa	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4004001	        0xc604037d	              mov byte [rbx + rax], 0x7d	      4235	cp-demangle.c	FUNCTION_72
0x4004005	    0xc68308010000	           mov byte [rbx + 0x108], 0x7d 	      4236	cp-demangle.c	FUNCTION_72
0x400400c	      0xe9a7060000	                           jmp 0x40046b8	      4236	cp-demangle.c	FUNCTION_72
0x4004011	    0x41bc00000000	                             mov r12d, 0	      4236	cp-demangle.c	FUNCTION_72
0x4004017	    0x41bf00000000	                             mov r15d, 0	      4236	cp-demangle.c	FUNCTION_72
0x400401d	      0x450fb63424	                  movzx r14d, byte [r12]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4004022	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400402d	            0x752f	                           jne 0x400405e	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400402f	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4004036	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400403d	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004042	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004045	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400404b	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4004056	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400405e	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4004065	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4004069	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4004070	        0x44883403	              mov byte [rbx + rax], r14b	      4235	cp-demangle.c	FUNCTION_72
0x4004074	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x400407b	        0x4983c401	                              add r12, 1	      4236	cp-demangle.c	FUNCTION_72
0x400407f	          0x4d39e7	                            cmp r15, r12	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4004082	            0x7599	                           jne 0x400401d	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4004084	        0x488b5508	                mov rdx, qword [rbp + 8]	      5671	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_222
0x4004088	          0x4489ee	                           mov esi, r13d	      5671	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_222
0x400408b	          0x4889df	                            mov rdi, rbx	      5671	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_222
0x400408e	      0xe84f060000	                   call sym.d_print_comp	      5671	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_222
0x4004093	      0xe920060000	                           jmp 0x40046b8	      5672	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4004098	    0x41bc00000000	                             mov r12d, 0	      5672	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400409e	    0x41bf00000000	                             mov r15d, 0	      5672	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40040a4	      0x450fb63424	                  movzx r14d, byte [r12]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x40040a9	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40040b4	            0x752f	                           jne 0x40040e5	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40040b6	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40040bd	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40040c4	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40040c9	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40040cc	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40040d2	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x40040dd	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40040e5	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x40040ec	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x40040f0	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40040f7	        0x44883403	              mov byte [rbx + rax], r14b	      4235	cp-demangle.c	FUNCTION_72
0x40040fb	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x4004102	        0x4983c401	                              add r12, 1	      4236	cp-demangle.c	FUNCTION_72
0x4004106	          0x4d39e7	                            cmp r15, r12	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4004109	            0x7599	                           jne 0x40040a4	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400410b	        0x488b5508	                mov rdx, qword [rbp + 8]	      5676	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_224
0x400410f	          0x4489ee	                           mov esi, r13d	      5676	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_224
0x4004112	          0x4889df	                            mov rdi, rbx	      5676	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_224
0x4004115	      0xe8c8050000	                   call sym.d_print_comp	      5676	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_224
0x400411a	      0xe999050000	                           jmp 0x40046b8	      5677	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400411f	    0x41bc00000000	                             mov r12d, 0	      5677	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4004125	    0x41bf00000000	                             mov r15d, 0	      5677	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400412b	      0x450fb63424	                  movzx r14d, byte [r12]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4004130	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400413b	            0x752f	                           jne 0x400416c	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400413d	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4004144	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400414b	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004150	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004153	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004159	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4004164	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400416c	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4004173	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4004177	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x400417e	        0x44883403	              mov byte [rbx + rax], r14b	      4235	cp-demangle.c	FUNCTION_72
0x4004182	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x4004189	        0x4983c401	                              add r12, 1	      4236	cp-demangle.c	FUNCTION_72
0x400418d	          0x4d39e7	                            cmp r15, r12	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4004190	            0x7599	                           jne 0x400412b	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4004192	    0x838338010000	              add dword [rbx + 0x138], 1	      5683	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4004199	        0x488b5508	                mov rdx, qword [rbp + 8]	      5684	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_226
0x400419d	          0x4489ee	                           mov esi, r13d	      5684	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_226
0x40041a0	          0x4889df	                            mov rdi, rbx	      5684	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_226
0x40041a3	      0xe83a050000	                   call sym.d_print_comp	      5684	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_226
0x40041a8	    0x83ab38010000	              sub dword [rbx + 0x138], 1	      5685	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40041af	    0x41bc00000000	                             mov r12d, 0	      5685	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40041b5	    0x41be00000000	                             mov r14d, 0	      5685	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40041bb	      0x450fb62c24	                  movzx r13d, byte [r12]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x40041c0	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40041cb	            0x752f	                           jne 0x40041fc	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40041cd	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40041d4	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40041db	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40041e0	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40041e3	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40041e9	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x40041f4	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40041fc	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4004203	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4004207	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x400420e	        0x44882c03	              mov byte [rbx + rax], r13b	      4235	cp-demangle.c	FUNCTION_72
0x4004212	    0x4488ab080100	            mov byte [rbx + 0x108], r13b	      4236	cp-demangle.c	FUNCTION_72
0x4004219	        0x4983c401	                              add r12, 1	      4236	cp-demangle.c	FUNCTION_72
0x400421d	          0x4d39e6	                            cmp r14, r12	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4004220	            0x7599	                           jne 0x40041bb	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4004222	          0x8b4510	            mov eax, dword [rbp + 0x10] 	        33	stdio2.h	FUNCTION_109	CALL_1
0x4004225	    0x488dac24c000	                   lea rbp, [rsp + 0xc0]	        33	stdio2.h	FUNCTION_109	CALL_1
0x400422d	        0x448d4001	                      lea r8d, [rax + 1]	        33	stdio2.h	FUNCTION_109	CALL_1
0x4004231	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_109	CALL_1
0x4004236	      0xba19000000	                           mov edx, 0x19	        33	stdio2.h	FUNCTION_109	CALL_1
0x400423b	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_109	CALL_1
0x4004240	          0x4889ef	                            mov rdi, rbp	        33	stdio2.h	FUNCTION_109	CALL_1
0x4004243	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_109	CALL_1
0x4004248	      0xe800000000	                          call 0x400424d	        33	stdio2.h	FUNCTION_109	CALL_1
0x400424d	      0xb800000000	                              mov eax, 0	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4004252	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4004259	          0x4889ef	                            mov rdi, rbp	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400425c	            0xf2ae	              repne scasb al, byte [rdi]	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400425e	          0x48f7d1	                                 not rcx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4004261	        0x4883e901	                              sub rcx, 1	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4004265	          0x4989cd	                            mov r13, rcx	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4004268	            0x7470	                            je 0x40042da	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400426a	      0xbd00000000	                              mov ebp, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400426f	    0x440fb6a42cc0	    movzx r12d, byte [rsp + rbp + 0xc0] 	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4004278	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004283	            0x752f	                           jne 0x40042b4	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004285	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400428c	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004293	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004298	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400429b	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40042a1	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x40042ac	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40042b4	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x40042bb	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x40042bf	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40042c6	        0x44882403	              mov byte [rbx + rax], r12b	      4235	cp-demangle.c	FUNCTION_72
0x40042ca	    0x4488a3080100	            mov byte [rbx + 0x108], r12b	      4236	cp-demangle.c	FUNCTION_72
0x40042d1	        0x4883c501	                              add rbp, 1	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40042d5	          0x4939ed	                            cmp r13, rbp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40042d8	            0x7595	                           jne 0x400426f	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40042da	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40042e5	            0x752f	                           jne 0x4004316	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40042e7	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40042ee	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40042f5	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40042fa	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40042fd	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004303	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x400430e	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4004316	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x400431d	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4004321	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4004328	        0xc604037d	              mov byte [rbx + rax], 0x7d	      4235	cp-demangle.c	FUNCTION_72
0x400432c	    0xc68308010000	           mov byte [rbx + 0x108], 0x7d 	      4236	cp-demangle.c	FUNCTION_72
0x4004333	      0xe980030000	                           jmp 0x40046b8	      4236	cp-demangle.c	FUNCTION_72
0x4004338	    0x41bc00000000	                             mov r12d, 0	      4236	cp-demangle.c	FUNCTION_72
0x400433e	    0x41be00000000	                             mov r14d, 0	      4236	cp-demangle.c	FUNCTION_72
0x4004344	      0x450fb62c24	                  movzx r13d, byte [r12]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4004349	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004354	            0x752f	                           jne 0x4004385	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004356	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400435d	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004364	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004369	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400436c	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004372	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x400437d	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4004385	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x400438c	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4004390	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4004397	        0x44882c03	              mov byte [rbx + rax], r13b	      4235	cp-demangle.c	FUNCTION_72
0x400439b	    0x4488ab080100	            mov byte [rbx + 0x108], r13b	      4236	cp-demangle.c	FUNCTION_72
0x40043a2	        0x4983c401	                              add r12, 1	      4236	cp-demangle.c	FUNCTION_72
0x40043a6	          0x4d39e6	                            cmp r14, r12	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40043a9	            0x7599	                           jne 0x4004344	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40043ab	        0x488b4508	                mov rax, qword [rbp + 8]	        33	stdio2.h	FUNCTION_109	CALL_1
0x40043af	    0x488dac24c000	                   lea rbp, [rsp + 0xc0]	        33	stdio2.h	FUNCTION_109	CALL_1
0x40043b7	        0x448d4001	                      lea r8d, [rax + 1]	        33	stdio2.h	FUNCTION_109	CALL_1
0x40043bb	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_109	CALL_1
0x40043c0	      0xba19000000	                           mov edx, 0x19	        33	stdio2.h	FUNCTION_109	CALL_1
0x40043c5	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_109	CALL_1
0x40043ca	          0x4889ef	                            mov rdi, rbp	        33	stdio2.h	FUNCTION_109	CALL_1
0x40043cd	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_109	CALL_1
0x40043d2	      0xe800000000	                          call 0x40043d7	        33	stdio2.h	FUNCTION_109	CALL_1
0x40043d7	      0xb800000000	                              mov eax, 0	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40043dc	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40043e3	          0x4889ef	                            mov rdi, rbp	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40043e6	            0xf2ae	              repne scasb al, byte [rdi]	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40043e8	          0x48f7d1	                                 not rcx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40043eb	        0x4883e901	                              sub rcx, 1	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40043ef	          0x4989cd	                            mov r13, rcx	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40043f2	            0x7470	                            je 0x4004464	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40043f4	      0xbd00000000	                              mov ebp, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40043f9	    0x440fb6a42cc0	    movzx r12d, byte [rsp + rbp + 0xc0] 	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4004402	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400440d	            0x752f	                           jne 0x400443e	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400440f	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4004416	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400441d	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004422	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004425	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400442b	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4004436	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400443e	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4004445	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4004449	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4004450	        0x44882403	              mov byte [rbx + rax], r12b	      4235	cp-demangle.c	FUNCTION_72
0x4004454	    0x4488a3080100	            mov byte [rbx + 0x108], r12b	      4236	cp-demangle.c	FUNCTION_72
0x400445b	        0x4883c501	                              add rbp, 1	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400445f	          0x4939ed	                            cmp r13, rbp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4004462	            0x7595	                           jne 0x40043f9	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4004464	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400446f	            0x752f	                           jne 0x40044a0	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004471	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4004478	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400447f	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004484	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004487	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400448d	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4004498	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40044a0	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x40044a7	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x40044ab	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40044b2	        0xc604037d	              mov byte [rbx + rax], 0x7d	      4235	cp-demangle.c	FUNCTION_72
0x40044b6	    0xc68308010000	           mov byte [rbx + 0x108], 0x7d 	      4236	cp-demangle.c	FUNCTION_72
0x40044bd	      0xe9f6010000	                           jmp 0x40046b8	      4236	cp-demangle.c	FUNCTION_72
0x40044c2	        0x488b5508	                mov rdx, qword [rbp + 8]	      5698	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_233
0x40044c6	      0xe817020000	                   call sym.d_print_comp	      5698	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_233
0x40044cb	    0x41bc00000000	                             mov r12d, 0	      5698	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_233
0x40044d1	    0x41bf00000000	                             mov r15d, 0	      5698	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_233
0x40044d7	      0x450fb63424	                  movzx r14d, byte [r12]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x40044dc	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40044e7	            0x752f	                           jne 0x4004518	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40044e9	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40044f0	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40044f7	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40044fc	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40044ff	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004505	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4004510	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4004518	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x400451f	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4004523	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x400452a	        0x44883403	              mov byte [rbx + rax], r14b	      4235	cp-demangle.c	FUNCTION_72
0x400452e	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x4004535	        0x4983c401	                              add r12, 1	      4236	cp-demangle.c	FUNCTION_72
0x4004539	          0x4d39e7	                            cmp r15, r12	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400453c	            0x7599	                           jne 0x40044d7	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400453e	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	      5700	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_235
0x4004542	          0x4489ee	                           mov esi, r13d	      5700	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_235
0x4004545	          0x4889df	                            mov rdi, rbx	      5700	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_235
0x4004548	      0xe895010000	                   call sym.d_print_comp	      5700	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_235
0x400454d	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004558	            0x752f	                           jne 0x4004589	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400455a	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4004561	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004568	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400456d	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004570	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004576	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4004581	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4004589	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4004590	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4004594	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x400459b	        0xc604035d	              mov byte [rbx + rax], 0x5d	      4235	cp-demangle.c	FUNCTION_72
0x400459f	    0xc68308010000	           mov byte [rbx + 0x108], 0x5d 	      4236	cp-demangle.c	FUNCTION_72
0x40045a6	      0xe90d010000	                           jmp 0x40046b8	      4236	cp-demangle.c	FUNCTION_72
0x40045ab	    0xc78330010000	              mov dword [rbx + 0x130], 1	      4207	cp-demangle.c	FUNCTION_69
0x40045b5	      0xe9fe000000	                           jmp 0x40046b8	      4207	cp-demangle.c	FUNCTION_69
0x40045ba	    0x4c8ba3200100	           mov r12, qword [rbx + 0x120] 	      5048	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	IF_29
0x40045c1	        0x488b5608	                mov rdx, qword [rsi + 8]	      5049	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	IF_29
0x40045c5	    0x488993200100	            mov qword [rbx + 0x120], rdx	      5049	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	IF_29
0x40045cc	          0x4889c6	                            mov rsi, rax	      5054	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	CALL_88
0x40045cf	          0x4889df	                            mov rdi, rbx	      5054	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	CALL_88
0x40045d2	      0xe8fcc0ffff	     call sym.d_lookup_template_argument	      5054	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	CALL_88
0x40045d7	    0x41be01000000	                             mov r14d, 1	      5050	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	IF_29
0x40045dd	          0x4885c0	                           test rax, rax	      5055	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_30
0x40045e0	     0xf85d1daffff	                           jne 0x40020b7	      5055	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_30
0x40045e6	      0xe9e9daffff	                           jmp 0x40020d4	      5055	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_30
0x40045eb	    0x41be00000000	                             mov r14d, 0	      4633	cp-demangle.c	FUNCTION_86
0x40045f1	            0xeb10	                           jmp 0x4004603	      4633	cp-demangle.c	FUNCTION_86
0x40045f3	    0x41be00000000	                             mov r14d, 0	      4633	cp-demangle.c	FUNCTION_86
0x40045f9	            0xeb08	                           jmp 0x4004603	      4633	cp-demangle.c	FUNCTION_86
0x40045fb	          0x4889c5	                            mov rbp, rax	      5072	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_33
0x40045fe	            0xeb03	                           jmp 0x4004603	      5072	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_33
0x4004600	          0x4889c5	                            mov rbp, rax	      5072	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_33
0x4004603	    0x488b83280100	           mov rax, qword [rbx + 0x128] 	      5088	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400460a	      0x4889442420	             mov qword [rsp + 0x20], rax	      5088	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400460f	      0x488d442420	                   lea rax, [rsp + 0x20]	      5089	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4004614	    0x488983280100	            mov qword [rbx + 0x128], rax	      5089	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400461b	      0x48896c2428	             mov qword [rsp + 0x28], rbp	      5090	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4004620	    0xc74424300000	               mov dword [rsp + 0x30], 0	      5091	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4004628	    0x488b83200100	           mov rax, qword [rbx + 0x120] 	      5092	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400462f	      0x4889442438	             mov qword [rsp + 0x38], rax	      5092	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4004634	      0xe91bdbffff	                           jmp 0x4002154	      5092	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4004639	      0x48837d0800	                  cmp qword [rbp + 8], 0	      5136	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41
0x400463e	     0xf85bbdcffff	                           jne 0x40022ff	      5136	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41
0x4004644	      0xe981ddffff	                           jmp 0x40023ca	      5136	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41
0x4004649	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	      5218	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_102
0x400464d	          0x4489ee	                           mov esi, r13d	      5218	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_102
0x4004650	          0x4889df	                            mov rdi, rbx	      5218	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_102
0x4004653	      0xe88a000000	                   call sym.d_print_comp	      5218	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_102
0x4004658	    0x4c89b3280100	            mov qword [rbx + 0x128], r14	      5220	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400465f	      0x837c245000	               cmp dword [rsp + 0x50], 0	      5222	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_47
0x4004664	     0xf849fdeffff	                            je 0x4002509	      5222	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_47
0x400466a	            0xeb4c	                           jmp 0x40046b8	      5222	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_47
0x400466c	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	      5598	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_200
0x4004670	          0x4489ee	                           mov esi, r13d	      5598	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_200
0x4004673	          0x4889df	                            mov rdi, rbx	      5598	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_200
0x4004676	      0xe867000000	                   call sym.d_print_comp	      5598	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_200
0x400467b	            0xeb3b	                           jmp 0x40046b8	      5598	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_200
0x400467d	          0x4889c6	                            mov rsi, rax	      5054	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	CALL_88
0x4004680	          0x4889df	                            mov rdi, rbx	      5054	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	CALL_88
0x4004683	      0xe84bc0ffff	     call sym.d_lookup_template_argument	      5054	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	CALL_88
0x4004688	    0x41be00000000	                             mov r14d, 0	      5055	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_30
0x400468e	          0x4885c0	                           test rax, rax	      5055	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_30
0x4004691	     0xf8520daffff	                           jne 0x40020b7	      5055	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_30
0x4004697	      0xe93fdaffff	                           jmp 0x40020db	      5055	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_30
0x400469c	    0x41807c240150	                cmp byte [r12 + 1], 0x50	      5377	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_10	IF_64	CALL_135
0x40046a2	     0xf84e2e7ffff	                            je 0x4002e8a	      5377	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_10	IF_64	CALL_135
0x40046a8	      0xe96ce8ffff	                           jmp 0x4002f19	      5377	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_10	IF_64	CALL_135
0x40046ad	        0x4183fc08	                             cmp r12d, 8	      5596	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_87
0x40046b1	            0x75b9	                           jne 0x400466c	      5596	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_87
0x40046b3	      0xe929f3ffff	                           jmp 0x40039e1	      5596	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_87
0x40046b8	    0x488b8424e800	            mov rax, qword [rsp + 0xe8] 	      5708	cp-demangle.c	FUNCTION_86
0x40046c0	    0x644833042528	                xor rax, qword fs:[0x28]	      5708	cp-demangle.c	FUNCTION_86
0x40046c9	            0x7405	                            je 0x40046d0	      5708	cp-demangle.c	FUNCTION_86
0x40046cb	      0xe800000000	                          call 0x40046d0	      5708	cp-demangle.c	FUNCTION_86
0x40046d0	    0x4881c4f80000	                           add rsp, 0xf8	      5708	cp-demangle.c	FUNCTION_86
0x40046d7	              0x5b	                                 pop rbx	      5708	cp-demangle.c	FUNCTION_86
0x40046d8	              0x5d	                                 pop rbp	      5708	cp-demangle.c	FUNCTION_86
0x40046d9	            0x415c	                                 pop r12	      5708	cp-demangle.c	FUNCTION_86
0x40046db	            0x415d	                                 pop r13	      5708	cp-demangle.c	FUNCTION_86
0x40046dd	            0x415e	                                 pop r14	      5708	cp-demangle.c	FUNCTION_86
0x40046df	            0x415f	                                 pop r15	      5708	cp-demangle.c	FUNCTION_86
0x40046e1	              0xc3	                                     ret	      5708	cp-demangle.c	FUNCTION_86
d_print_subexpr	SWITCH,0:CALL,3:IF,3:WHILE,0:ELSE,0:DO,0:FOR,0:functions,0	51
0x4005b1e	            0x4154	                                push r12	      4484	cp-demangle.c	ELSE_1	FUNCTION_82
0x4005b20	              0x55	                                push rbp	      4484	cp-demangle.c	ELSE_1	FUNCTION_82
0x4005b21	              0x53	                                push rbx	      4484	cp-demangle.c	ELSE_1	FUNCTION_82
0x4005b22	          0x4889fb	                            mov rbx, rdi	      4484	cp-demangle.c	ELSE_1	FUNCTION_82
0x4005b25	          0x4189f4	                           mov r12d, esi	      4484	cp-demangle.c	ELSE_1	FUNCTION_82
0x4005b28	          0x4889d5	                            mov rbp, rdx	      4484	cp-demangle.c	ELSE_1	FUNCTION_82
0x4005b2b	            0x8b02	                    mov eax, dword [rdx]	      4486	cp-demangle.c	ELSE_1	FUNCTION_82	IF_1
0x4005b2d	          0x83f830	                           cmp eax, 0x30	      4488	cp-demangle.c	ELSE_1	FUNCTION_82	IF_1
0x4005b30	            0x7714	                            ja 0x4005b46	      4488	cp-demangle.c	ELSE_1	FUNCTION_82	IF_1
0x4005b32	    0x48ba43000000	            movabs rdx, 0x1000000000043 	      4491	cp-demangle.c	ELSE_1	FUNCTION_82	IF_2
0x4005b3c	        0x480fa3c2	                             bt rdx, rax	      4491	cp-demangle.c	ELSE_1	FUNCTION_82	IF_2
0x4005b40	     0xf82c2000000	                            jb 0x4005c08	      4491	cp-demangle.c	ELSE_1	FUNCTION_82	IF_2
0x4005b46	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005b51	            0x752f	                           jne 0x4005b82	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005b53	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4005b5a	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005b61	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005b66	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005b69	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005b6f	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4005b7a	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4005b82	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4005b89	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4005b8d	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4005b94	        0xc6040328	              mov byte [rbx + rax], 0x28	      4235	cp-demangle.c	FUNCTION_72
0x4005b98	    0xc68308010000	           mov byte [rbx + 0x108], 0x28 	      4236	cp-demangle.c	FUNCTION_72
0x4005b9f	          0x4889ea	                            mov rdx, rbp	      4493	cp-demangle.c	ELSE_1	FUNCTION_82	CALL_2
0x4005ba2	          0x4489e6	                           mov esi, r12d	      4493	cp-demangle.c	ELSE_1	FUNCTION_82	CALL_2
0x4005ba5	          0x4889df	                            mov rdi, rbx	      4493	cp-demangle.c	ELSE_1	FUNCTION_82	CALL_2
0x4005ba8	      0xe835ebffff	                   call sym.d_print_comp	      4493	cp-demangle.c	ELSE_1	FUNCTION_82	CALL_2
0x4005bad	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005bb8	            0x752f	                           jne 0x4005be9	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005bba	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4005bc1	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005bc8	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005bcd	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005bd0	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005bd6	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4005be1	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4005be9	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4005bf0	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4005bf4	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4005bfb	        0xc6040329	              mov byte [rbx + rax], 0x29	      4235	cp-demangle.c	FUNCTION_72
0x4005bff	    0xc68308010000	           mov byte [rbx + 0x108], 0x29 	      4236	cp-demangle.c	FUNCTION_72
0x4005c06	            0xeb08	                           jmp 0x4005c10	      4496	cp-demangle.c	ELSE_1	FUNCTION_82
0x4005c08	          0x4889ea	                            mov rdx, rbp	      4493	cp-demangle.c	ELSE_1	FUNCTION_82	CALL_2
0x4005c0b	      0xe8d2eaffff	                   call sym.d_print_comp	      4493	cp-demangle.c	ELSE_1	FUNCTION_82	CALL_2
0x4005c10	              0x5b	                                 pop rbx	      4496	cp-demangle.c	ELSE_1	FUNCTION_82
0x4005c11	              0x5d	                                 pop rbp	      4496	cp-demangle.c	ELSE_1	FUNCTION_82
0x4005c12	            0x415c	                                 pop r12	      4496	cp-demangle.c	ELSE_1	FUNCTION_82
0x4005c14	              0xc3	                                     ret	      4496	cp-demangle.c	ELSE_1	FUNCTION_82
d_substitution	SWITCH,0:CALL,9:IF,14:WHILE,0:ELSE,4:DO,1:FOR,1:functions,0	142
0x4006189	            0x4156	                                push r14	      3837	cp-demangle.c	FUNCTION_60
0x400618b	            0x4155	                                push r13	      3837	cp-demangle.c	FUNCTION_60
0x400618d	            0x4154	                                push r12	      3837	cp-demangle.c	FUNCTION_60
0x400618f	              0x55	                                push rbp	      3837	cp-demangle.c	FUNCTION_60
0x4006190	              0x53	                                push rbx	      3837	cp-demangle.c	FUNCTION_60
0x4006191	        0x488b5718	            mov rdx, qword [rdi + 0x18] 	      3840	cp-demangle.c	FUNCTION_60	IF_1	CALL_1
0x4006195	      0xb800000000	                              mov eax, 0	      3841	cp-demangle.c	FUNCTION_60	IF_1
0x400619a	          0x803a53	                    cmp byte [rdx], 0x53	      3840	cp-demangle.c	FUNCTION_60	IF_1	CALL_1
0x400619d	     0xf85bd010000	                           jne 0x4006360	      3840	cp-demangle.c	FUNCTION_60	IF_1	CALL_1
0x40061a3	        0x488d4201	                      lea rax, [rdx + 1]	      3840	cp-demangle.c	FUNCTION_60	IF_1	CALL_1
0x40061a7	        0x48894718	             mov qword [rdi + 0x18], rax	      3840	cp-demangle.c	FUNCTION_60	IF_1	CALL_1
0x40061ab	        0x807a0100	                   cmp byte [rdx + 1], 0	      3843	cp-demangle.c	FUNCTION_60	CALL_2
0x40061af	     0xf84a2000000	                            je 0x4006257	      3843	cp-demangle.c	FUNCTION_60	CALL_2
0x40061b5	        0x488d4202	                      lea rax, [rdx + 2]	      3843	cp-demangle.c	FUNCTION_60	CALL_2
0x40061b9	        0x48894718	             mov qword [rdi + 0x18], rax	      3843	cp-demangle.c	FUNCTION_60	CALL_2
0x40061bd	         0xfb64201	               movzx eax, byte [rdx + 1]	      3843	cp-demangle.c	FUNCTION_60	CALL_2
0x40061c1	            0x89c1	                            mov ecx, eax	      3844	cp-demangle.c	FUNCTION_60	IF_2
0x40061c3	          0x8d50d0	                   lea edx, [rax - 0x30]	      3844	cp-demangle.c	FUNCTION_60	IF_2
0x40061c6	          0x80fa09	                               cmp dl, 9	      3844	cp-demangle.c	FUNCTION_60	IF_2
0x40061c9	            0x7610	                           jbe 0x40061db	      3844	cp-demangle.c	FUNCTION_60	IF_2
0x40061cb	            0x3c5f	                            cmp al, 0x5f	      3844	cp-demangle.c	FUNCTION_60	IF_2
0x40061cd	            0x740c	                            je 0x40061db	      3844	cp-demangle.c	FUNCTION_60	IF_2
0x40061cf	          0x83e941	                           sub ecx, 0x41	      3844	cp-demangle.c	FUNCTION_60	IF_2
0x40061d2	          0x80f919	                            cmp cl, 0x19	      3844	cp-demangle.c	FUNCTION_60	IF_2
0x40061d5	     0xf8781000000	                            ja 0x400625c	      3844	cp-demangle.c	FUNCTION_60	IF_2
0x40061db	      0xba00000000	                              mov edx, 0	      3844	cp-demangle.c	FUNCTION_60	IF_2
0x40061e0	      0xb900000000	                              mov ecx, 0	      3848	cp-demangle.c	FUNCTION_60	IF_2
0x40061e5	            0x3c5f	                            cmp al, 0x5f	      3849	cp-demangle.c	FUNCTION_60	IF_2	IF_3
0x40061e7	            0x7456	                            je 0x400623f	      3849	cp-demangle.c	FUNCTION_60	IF_2	IF_3
0x40061e9	            0xeb07	                           jmp 0x40061f2	      3849	cp-demangle.c	FUNCTION_60	IF_2	IF_3
0x40061eb	      0xb800000000	                              mov eax, 0	      3864	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	CALL_3
0x40061f0	            0x89ca	                            mov edx, ecx	      3864	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	CALL_3
0x40061f2	          0x8d48d0	                   lea ecx, [rax - 0x30]	      3855	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	IF_4
0x40061f5	          0x80f909	                               cmp cl, 9	      3855	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	IF_4
0x40061f8	            0x770c	                            ja 0x4006206	      3855	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	IF_4
0x40061fa	          0x8d0cd2	                  lea ecx, [rdx + rdx*8]	      3856	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	IF_4
0x40061fd	           0xfbec0	                           movsx eax, al	      3856	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	IF_4
0x4006200	        0x8d4c88d0	           lea ecx, [rax + rcx*4 - 0x30]	      3856	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	IF_4
0x4006204	            0xeb16	                           jmp 0x400621c	      3856	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	IF_4
0x4006206	          0x8d48bf	                   lea ecx, [rax - 0x41]	      3857	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	ELSE_1	IF_5
0x4006209	          0x80f919	                            cmp cl, 0x19	      3857	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	ELSE_1	IF_5
0x400620c	     0xf873b010000	                            ja 0x400634d	      3857	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	ELSE_1	IF_5
0x4006212	          0x8d0cd2	                  lea ecx, [rdx + rdx*8]	      3858	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	ELSE_1	IF_5
0x4006215	           0xfbec0	                           movsx eax, al	      3858	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	ELSE_1	IF_5
0x4006218	        0x8d4c88c9	           lea ecx, [rax + rcx*4 - 0x37]	      3858	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	ELSE_1	IF_5
0x400621c	            0x39ca	                            cmp edx, ecx	      3861	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	IF_6
0x400621e	     0xf8730010000	                            ja 0x4006354	      3861	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	IF_6
0x4006224	        0x488b4718	            mov rax, qword [rdi + 0x18] 	      3864	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	CALL_3
0x4006228	          0x803800	                       cmp byte [rax], 0	      3864	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	CALL_3
0x400622b	            0x74be	                            je 0x40061eb	      3864	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	CALL_3
0x400622d	        0x488d5001	                      lea rdx, [rax + 1]	      3864	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	CALL_3
0x4006231	        0x48895718	             mov qword [rdi + 0x18], rdx	      3864	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	CALL_3
0x4006235	           0xfb600	                   movzx eax, byte [rax]	      3864	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	CALL_3
0x4006238	            0x3c5f	                            cmp al, 0x5f	      3866	cp-demangle.c	FUNCTION_60	IF_2	IF_3
0x400623a	            0x75b4	                           jne 0x40061f0	      3866	cp-demangle.c	FUNCTION_60	IF_2	IF_3
0x400623c	          0x83c101	                              add ecx, 1	      3868	cp-demangle.c	FUNCTION_60	IF_2	IF_3
0x400623f	          0x3b4f38	            cmp ecx, dword [rdi + 0x38] 	      3871	cp-demangle.c	FUNCTION_60	IF_2	IF_7
0x4006242	     0xf8313010000	                           jae 0x400635b	      3871	cp-demangle.c	FUNCTION_60	IF_2	IF_7
0x4006248	            0x89c9	                            mov ecx, ecx	      3874	cp-demangle.c	FUNCTION_60	IF_2
0x400624a	        0x488b4730	            mov rax, qword [rdi + 0x30] 	      3874	cp-demangle.c	FUNCTION_60	IF_2
0x400624e	        0x488b04c8	            mov rax, qword [rax + rcx*8]	      3874	cp-demangle.c	FUNCTION_60	IF_2
0x4006252	      0xe909010000	                           jmp 0x4006360	      3874	cp-demangle.c	FUNCTION_60	IF_2
0x4006257	      0xb800000000	                              mov eax, 0	      3843	cp-demangle.c	FUNCTION_60	CALL_2
0x400625c	          0x8b5710	            mov edx, dword [rdi + 0x10] 	      3882	cp-demangle.c	FUNCTION_60	ELSE_3
0x400625f	          0x83e208	                              and edx, 8	      3882	cp-demangle.c	FUNCTION_60	ELSE_3
0x4006262	        0x400f95c5	                               setne bpl	      3882	cp-demangle.c	FUNCTION_60	ELSE_3
0x4006266	        0x400fb6ed	                          movzx ebp, bpl	      3882	cp-demangle.c	FUNCTION_60	ELSE_3
0x400626a	            0x7519	                           jne 0x4006285	      3883	cp-demangle.c	FUNCTION_60	ELSE_3	IF_8
0x400626c	            0x85f6	                           test esi, esi	      3883	cp-demangle.c	FUNCTION_60	ELSE_3	IF_8
0x400626e	            0x7415	                            je 0x4006285	      3883	cp-demangle.c	FUNCTION_60	ELSE_3	IF_8
0x4006270	        0x488b5718	            mov rdx, qword [rdi + 0x18] 	      3887	cp-demangle.c	FUNCTION_60	ELSE_3	IF_8	CALL_4
0x4006274	           0xfb612	                   movzx edx, byte [rdx]	      3888	cp-demangle.c	FUNCTION_60	ELSE_3	IF_8	IF_9
0x4006277	          0x83ea43	                           sub edx, 0x43	      3888	cp-demangle.c	FUNCTION_60	ELSE_3	IF_8	IF_9
0x400627a	          0x80fa01	                               cmp dl, 1	      3889	cp-demangle.c	FUNCTION_60	ELSE_3	IF_8	IF_9
0x400627d	      0xba01000000	                              mov edx, 1	      3889	cp-demangle.c	FUNCTION_60	ELSE_3	IF_8	IF_9
0x4006282	           0xf46ea	                         cmovbe ebp, edx	      3889	cp-demangle.c	FUNCTION_60	ELSE_3	IF_8	IF_9
0x4006285	            0x3c74	                            cmp al, 0x74	      3896	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10
0x4006287	            0x7414	                            je 0x400629d	      3896	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10
0x4006289	      0xbb00000000	                              mov ebx, 0	      3896	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10
0x400628e	      0xe9a2000000	                           jmp 0x4006335	      3896	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10
0x4006293	            0x3803	                      cmp byte [rbx], al	      3896	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10
0x4006295	     0xf859a000000	                           jne 0x4006335	      3896	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10
0x400629b	            0xeb05	                           jmp 0x40062a2	      3896	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10
0x400629d	      0xbb00000000	                              mov ebx, 0	      3894	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1
0x40062a2	          0x4989fc	                            mov r12, rdi	      3894	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1
0x40062a5	        0x4c8b6b28	            mov r13, qword [rbx + 0x28] 	      3902	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_11
0x40062a9	          0x4d85ed	                           test r13, r13	      3902	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_11
0x40062ac	            0x7421	                            je 0x40062cf	      3902	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_11
0x40062ae	        0x448b7330	           mov r14d, dword [rbx + 0x30] 	      3903	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_11	CALL_5
0x40062b2	      0xe8b19dffff	                   call sym.d_make_empty	      1202	cp-demangle.c	FUNCTION_15	CALL_1
0x40062b7	          0x4885c0	                           test rax, rax	      1203	cp-demangle.c	FUNCTION_15	IF_1
0x40062ba	            0x740e	                            je 0x40062ca	      1203	cp-demangle.c	FUNCTION_15	IF_1
0x40062bc	    0xc70018000000	                   mov dword [rax], 0x18	      1205	cp-demangle.c	FUNCTION_15	IF_1
0x40062c2	        0x4c896808	                mov qword [rax + 8], r13	      1206	cp-demangle.c	FUNCTION_15	IF_1
0x40062c6	        0x44897010	            mov dword [rax + 0x10], r14d	      1207	cp-demangle.c	FUNCTION_15	IF_1
0x40062ca	      0x4989442440	             mov qword [r12 + 0x40], rax	      3903	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_11	CALL_5
0x40062cf	            0x85ed	                           test ebp, ebp	      3905	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_12
0x40062d1	            0x7409	                            je 0x40062dc	      3905	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_12
0x40062d3	        0x488b6b18	            mov rbp, qword [rbx + 0x18] 	      3907	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_12
0x40062d7	          0x8b5b20	            mov ebx, dword [rbx + 0x20] 	      3908	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_12
0x40062da	            0xeb07	                           jmp 0x40062e3	      3908	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_12
0x40062dc	        0x488b6b08	                mov rbp, qword [rbx + 8]	      3912	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	ELSE_4
0x40062e0	          0x8b5b10	            mov ebx, dword [rbx + 0x10] 	      3913	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	ELSE_4
0x40062e3	      0x41015c2448	             add dword [r12 + 0x48], ebx	      3915	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10
0x40062e8	          0x4c89e7	                            mov rdi, r12	      1202	cp-demangle.c	FUNCTION_15	CALL_1
0x40062eb	      0xe8789dffff	                   call sym.d_make_empty	      1202	cp-demangle.c	FUNCTION_15	CALL_1
0x40062f0	          0x4889c6	                            mov rsi, rax	      1202	cp-demangle.c	FUNCTION_15	CALL_1
0x40062f3	          0x4885c0	                           test rax, rax	      1203	cp-demangle.c	FUNCTION_15	IF_1
0x40062f6	            0x740d	                            je 0x4006305	      1203	cp-demangle.c	FUNCTION_15	IF_1
0x40062f8	    0xc70018000000	                   mov dword [rax], 0x18	      1205	cp-demangle.c	FUNCTION_15	IF_1
0x40062fe	        0x48896808	                mov qword [rax + 8], rbp	      1206	cp-demangle.c	FUNCTION_15	IF_1
0x4006302	          0x895810	             mov dword [rax + 0x10], ebx	      1207	cp-demangle.c	FUNCTION_15	IF_1
0x4006305	      0x498b542418	            mov rdx, qword [r12 + 0x18] 	      3917	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_13	CALL_7
0x400630a	          0x4889f0	                            mov rax, rsi	      3916	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	CALL_6
0x400630d	          0x803a42	                    cmp byte [rdx], 0x42	      3917	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_13	CALL_7
0x4006310	            0x754e	                           jne 0x4006360	      3917	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_13	CALL_7
0x4006312	          0x4c89e7	                            mov rdi, r12	      3921	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_13	CALL_8
0x4006315	      0xe81dfeffff	                     call sym.d_abi_tags	      3921	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_13	CALL_8
0x400631a	          0x4889c3	                            mov rbx, rax	      3921	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_13	CALL_8
0x400631d	          0x4889c6	                            mov rsi, rax	      3922	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_13	IF_14	CALL_9
0x4006320	          0x4c89e7	                            mov rdi, r12	      3922	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_13	IF_14	CALL_9
0x4006323	      0xe8f5a1ffff	             call sym.d_add_substitution	      3922	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_13	IF_14	CALL_9
0x4006328	            0x85c0	                           test eax, eax	      3921	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_13	CALL_8
0x400632a	      0xb800000000	                              mov eax, 0	      3921	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_13	CALL_8
0x400632f	        0x480f45c3	                         cmovne rax, rbx	      3921	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_13	CALL_8
0x4006333	            0xeb2b	                           jmp 0x4006360	      3921	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_13	CALL_8
0x4006335	        0x4883c338	                           add rbx, 0x38	      3894	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1
0x4006339	    0x4881fb000000	                              cmp rbx, 0	      3894	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1
0x4006340	     0xf854dffffff	                           jne 0x4006293	      3894	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1
0x4006346	      0xb800000000	                              mov eax, 0	      3929	cp-demangle.c	FUNCTION_60	ELSE_3
0x400634b	            0xeb13	                           jmp 0x4006360	      3929	cp-demangle.c	FUNCTION_60	ELSE_3
0x400634d	      0xb800000000	                              mov eax, 0	      3860	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	ELSE_2
0x4006352	            0xeb0c	                           jmp 0x4006360	      3860	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	ELSE_2
0x4006354	      0xb800000000	                              mov eax, 0	      3862	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	IF_6
0x4006359	            0xeb05	                           jmp 0x4006360	      3862	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	IF_6
0x400635b	      0xb800000000	                              mov eax, 0	      3872	cp-demangle.c	FUNCTION_60	IF_2	IF_7
0x4006360	              0x5b	                                 pop rbx	      3931	cp-demangle.c	FUNCTION_60
0x4006361	              0x5d	                                 pop rbp	      3931	cp-demangle.c	FUNCTION_60
0x4006362	            0x415c	                                 pop r12	      3931	cp-demangle.c	FUNCTION_60
0x4006364	            0x415d	                                 pop r13	      3931	cp-demangle.c	FUNCTION_60
0x4006366	            0x415e	                                 pop r14	      3931	cp-demangle.c	FUNCTION_60
0x4006368	              0xc3	                                     ret	      3931	cp-demangle.c	FUNCTION_60
java_demangle_v3	SWITCH,0:CALL,1:IF,0:WHILE,0:ELSE,0:DO,0:FOR,0:functions,0	13
0x4009ba4	        0x4883ec18	                           sub rsp, 0x18	      6474	cp-demangle.c	FUNCTION_102
0x4009ba8	    0x64488b042528	                mov rax, qword fs:[0x28]	      6474	cp-demangle.c	FUNCTION_102
0x4009bb1	      0x4889442408	                mov qword [rsp + 8], rax	      6474	cp-demangle.c	FUNCTION_102
0x4009bb6	            0x31c0	                            xor eax, eax	      6474	cp-demangle.c	FUNCTION_102
0x4009bb8	          0x4889e2	                            mov rdx, rsp	      6477	cp-demangle.c	FUNCTION_102	CALL_1
0x4009bbb	      0xbe25000000	                           mov esi, 0x25	      6477	cp-demangle.c	FUNCTION_102	CALL_1
0x4009bc0	      0xe8f7fdffff	                     call sym.d_demangle	      6477	cp-demangle.c	FUNCTION_102	CALL_1
0x4009bc5	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      6478	cp-demangle.c	FUNCTION_102
0x4009bca	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      6478	cp-demangle.c	FUNCTION_102
0x4009bd3	            0x7405	                            je 0x4009bda	      6478	cp-demangle.c	FUNCTION_102
0x4009bd5	      0xe800000000	                          call 0x4009bda	      6478	cp-demangle.c	FUNCTION_102
0x4009bda	        0x4883c418	                           add rsp, 0x18	      6478	cp-demangle.c	FUNCTION_102
0x4009bde	              0xc3	                                     ret	      6478	cp-demangle.c	FUNCTION_102
op_is_new_cast	SWITCH,0:CALL,0:IF,0:WHILE,0:ELSE,0:DO,0:FOR,0:functions,0	15
0x400047d	        0x488b4708	                mov rax, qword [rdi + 8]	      3237	cp-demangle.c	FUNCTION_50
0x4000481	          0x488b10	                    mov rdx, qword [rax]	      3237	cp-demangle.c	FUNCTION_50
0x4000484	      0xb800000000	                              mov eax, 0	      3239	cp-demangle.c	FUNCTION_50
0x4000489	        0x807a0163	                cmp byte [rdx + 1], 0x63	      3239	cp-demangle.c	FUNCTION_50
0x400048d	            0x7519	                           jne 0x40004a8	      3239	cp-demangle.c	FUNCTION_50
0x400048f	           0xfb612	                   movzx edx, byte [rdx]	      3240	cp-demangle.c	FUNCTION_50
0x4000492	          0x8d429d	                   lea eax, [rdx - 0x63]	      3239	cp-demangle.c	FUNCTION_50
0x4000495	            0x3c01	                               cmp al, 1	      3239	cp-demangle.c	FUNCTION_50
0x4000497	           0xf96c1	                                setbe cl	      3239	cp-demangle.c	FUNCTION_50
0x400049a	          0x83ea72	                           sub edx, 0x72	      3239	cp-demangle.c	FUNCTION_50
0x400049d	          0x80fa01	                               cmp dl, 1	      3239	cp-demangle.c	FUNCTION_50
0x40004a0	           0xf96c0	                                setbe al	      3239	cp-demangle.c	FUNCTION_50
0x40004a3	             0x9c8	                             or eax, ecx	      3239	cp-demangle.c	FUNCTION_50
0x40004a5	           0xfb6c0	                           movzx eax, al	      3239	cp-demangle.c	FUNCTION_50
0x40004a8	            0xf3c3	                                     ret	      3241	cp-demangle.c	FUNCTION_50
is_fnqual_component_type	SWITCH,1:CALL,0:IF,0:WHILE,0:ELSE,0:DO,0:FOR,0:functions,0	15
0x4000040	          0x83ff4c	                           cmp edi, 0x4c	       587	cp-demangle.c	FUNCTION_1	SWITCH_1
0x4000043	            0x741d	                            je 0x4000062	       587	cp-demangle.c	FUNCTION_1	SWITCH_1
0x4000045	          0x83ff4c	                           cmp edi, 0x4c	       587	cp-demangle.c	FUNCTION_1	SWITCH_1
0x4000048	            0x770a	                            ja 0x4000054	       587	cp-demangle.c	FUNCTION_1	SWITCH_1
0x400004a	          0x83ef1c	                           sub edi, 0x1c	       587	cp-demangle.c	FUNCTION_1	SWITCH_1
0x400004d	          0x83ff04	                              cmp edi, 4	       587	cp-demangle.c	FUNCTION_1	SWITCH_1
0x4000050	            0x770a	                            ja 0x400005c	       587	cp-demangle.c	FUNCTION_1	SWITCH_1
0x4000052	            0xeb0e	                           jmp 0x4000062	       587	cp-demangle.c	FUNCTION_1	SWITCH_1
0x4000054	          0x83ef4e	                           sub edi, 0x4e	       587	cp-demangle.c	FUNCTION_1	SWITCH_1
0x4000057	          0x83ff01	                              cmp edi, 1	       587	cp-demangle.c	FUNCTION_1	SWITCH_1
0x400005a	            0x7606	                           jbe 0x4000062	       587	cp-demangle.c	FUNCTION_1	SWITCH_1
0x400005c	      0xb800000000	                              mov eax, 0	       594	cp-demangle.c	FUNCTION_1
0x4000061	              0xc3	                                     ret	       594	cp-demangle.c	FUNCTION_1
0x4000062	      0xb801000000	                              mov eax, 1	       590	cp-demangle.c	FUNCTION_1	SWITCH_1
0x4000067	              0xc3	                                     ret	       595	cp-demangle.c	FUNCTION_1
d_maybe_print_fold_expression	SWITCH,1:CALL,15:IF,2:WHILE,0:ELSE,0:DO,0:FOR,0:functions,0	202
0x4005c15	        0x488b4208	                mov rax, qword [rdx + 8]	      4564	cp-demangle.c	FUNCTION_85
0x4005c19	        0x488b4008	                mov rax, qword [rax + 8]	      4564	cp-demangle.c	FUNCTION_85
0x4005c1d	          0x488b08	                    mov rcx, qword [rax]	      4564	cp-demangle.c	FUNCTION_85
0x4005c20	      0xb800000000	                              mov eax, 0	      4566	cp-demangle.c	FUNCTION_85	IF_1
0x4005c25	          0x803966	                    cmp byte [rcx], 0x66	      4565	cp-demangle.c	FUNCTION_85	IF_1
0x4005c28	     0xf85d6030000	                           jne 0x4006004	      4565	cp-demangle.c	FUNCTION_85	IF_1
0x4005c2e	            0x4157	                                push r15	      4560	cp-demangle.c	FUNCTION_85
0x4005c30	            0x4156	                                push r14	      4560	cp-demangle.c	FUNCTION_85
0x4005c32	            0x4155	                                push r13	      4560	cp-demangle.c	FUNCTION_85
0x4005c34	            0x4154	                                push r12	      4560	cp-demangle.c	FUNCTION_85
0x4005c36	              0x55	                                push rbp	      4560	cp-demangle.c	FUNCTION_85
0x4005c37	              0x53	                                push rbx	      4560	cp-demangle.c	FUNCTION_85
0x4005c38	        0x4883ec18	                           sub rsp, 0x18	      4560	cp-demangle.c	FUNCTION_85
0x4005c3c	        0x488b4210	            mov rax, qword [rdx + 0x10] 	      4568	cp-demangle.c	FUNCTION_85
0x4005c40	        0x488b5008	                mov rdx, qword [rax + 8]	      4569	cp-demangle.c	FUNCTION_85
0x4005c44	        0x48891424	                    mov qword [rsp], rdx	      4569	cp-demangle.c	FUNCTION_85
0x4005c48	        0x4c8b6810	            mov r13, qword [rax + 0x10] 	      4570	cp-demangle.c	FUNCTION_85
0x4005c4c	    0x41be00000000	                             mov r14d, 0	      4571	cp-demangle.c	FUNCTION_85
0x4005c52	      0x41837d003b	                   cmp dword [r13], 0x3b	      4572	cp-demangle.c	FUNCTION_85	IF_2
0x4005c57	            0x7508	                           jne 0x4005c61	      4572	cp-demangle.c	FUNCTION_85	IF_2
0x4005c59	        0x4d8b7510	            mov r14, qword [r13 + 0x10] 	      4574	cp-demangle.c	FUNCTION_85	IF_2
0x4005c5d	        0x4d8b6d08	                mov r13, qword [r13 + 8]	      4575	cp-demangle.c	FUNCTION_85	IF_2
0x4005c61	        0x8974240c	              mov dword [rsp + 0xc], esi	      4575	cp-demangle.c	FUNCTION_85	IF_2
0x4005c65	          0x4889fb	                            mov rbx, rdi	      4575	cp-demangle.c	FUNCTION_85	IF_2
0x4005c68	    0x448bbf3c0100	          mov r15d, dword [rdi + 0x13c] 	      4579	cp-demangle.c	FUNCTION_85
0x4005c6f	    0xc7873c010000	    mov dword [rdi + 0x13c], 0xffffffff 	      4580	cp-demangle.c	FUNCTION_85
0x4005c79	         0xfb64101	               movzx eax, byte [rcx + 1]	      4582	cp-demangle.c	FUNCTION_85	SWITCH_1
0x4005c7d	            0x3c52	                            cmp al, 0x52	      4582	cp-demangle.c	FUNCTION_85	SWITCH_1
0x4005c7f	     0xf8403020000	                            je 0x4005e88	      4582	cp-demangle.c	FUNCTION_85	SWITCH_1
0x4005c85	            0x3c52	                            cmp al, 0x52	      4582	cp-demangle.c	FUNCTION_85	SWITCH_1
0x4005c87	            0x7f0d	                            jg 0x4005c96	      4582	cp-demangle.c	FUNCTION_85	SWITCH_1
0x4005c89	            0x3c4c	                            cmp al, 0x4c	      4582	cp-demangle.c	FUNCTION_85	SWITCH_1
0x4005c8b	     0xf84f7010000	                            je 0x4005e88	      4582	cp-demangle.c	FUNCTION_85	SWITCH_1
0x4005c91	      0xe954030000	                           jmp 0x4005fea	      4582	cp-demangle.c	FUNCTION_85	SWITCH_1
0x4005c96	            0x3c6c	                            cmp al, 0x6c	      4582	cp-demangle.c	FUNCTION_85	SWITCH_1
0x4005c98	            0x740d	                            je 0x4005ca7	      4582	cp-demangle.c	FUNCTION_85	SWITCH_1
0x4005c9a	            0x3c72	                            cmp al, 0x72	      4582	cp-demangle.c	FUNCTION_85	SWITCH_1
0x4005c9c	     0xf84f7000000	                            je 0x4005d99	      4582	cp-demangle.c	FUNCTION_85	SWITCH_1
0x4005ca2	      0xe943030000	                           jmp 0x4005fea	      4582	cp-demangle.c	FUNCTION_85	SWITCH_1
0x4005ca7	      0xbd00000000	                              mov ebp, 0	      4582	cp-demangle.c	FUNCTION_85	SWITCH_1
0x4005cac	    0x41be00000000	                             mov r14d, 0	      4582	cp-demangle.c	FUNCTION_85	SWITCH_1
0x4005cb2	      0x440fb66500	                  movzx r12d, byte [rbp]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4005cb7	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005cc2	            0x752f	                           jne 0x4005cf3	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005cc4	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4005ccb	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005cd2	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005cd7	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005cda	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005ce0	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4005ceb	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4005cf3	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4005cfa	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4005cfe	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4005d05	        0x44882403	              mov byte [rbx + rax], r12b	      4235	cp-demangle.c	FUNCTION_72
0x4005d09	    0x4488a3080100	            mov byte [rbx + 0x108], r12b	      4236	cp-demangle.c	FUNCTION_72
0x4005d10	        0x4883c501	                              add rbp, 1	      4236	cp-demangle.c	FUNCTION_72
0x4005d14	          0x4939ee	                            cmp r14, rbp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4005d17	            0x7599	                           jne 0x4005cb2	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4005d19	        0x488b1424	                    mov rdx, qword [rsp]	      4587	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_2
0x4005d1d	      0x448b74240c	            mov r14d, dword [rsp + 0xc] 	      4587	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_2
0x4005d22	          0x4489f6	                           mov esi, r14d	      4587	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_2
0x4005d25	          0x4889df	                            mov rdi, rbx	      4587	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_2
0x4005d28	      0xe854fdffff	                call sym.d_print_expr_op	      4587	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_2
0x4005d2d	          0x4c89ea	                            mov rdx, r13	      4588	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_3
0x4005d30	          0x4489f6	                           mov esi, r14d	      4588	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_3
0x4005d33	          0x4889df	                            mov rdi, rbx	      4588	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_3
0x4005d36	      0xe8e3fdffff	                call sym.d_print_subexpr	      4588	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_3
0x4005d3b	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005d46	            0x752f	                           jne 0x4005d77	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005d48	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4005d4f	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005d56	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005d5b	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005d5e	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005d64	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4005d6f	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4005d77	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4005d7e	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4005d82	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4005d89	        0xc6040329	              mov byte [rbx + rax], 0x29	      4235	cp-demangle.c	FUNCTION_72
0x4005d8d	    0xc68308010000	           mov byte [rbx + 0x108], 0x29 	      4236	cp-demangle.c	FUNCTION_72
0x4005d94	      0xe951020000	                           jmp 0x4005fea	      4236	cp-demangle.c	FUNCTION_72
0x4005d99	    0x4881bf000100	          cmp qword [rdi + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005da4	            0x752c	                           jne 0x4005dd2	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005da6	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4005dad	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005db4	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005db9	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005dbf	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4005dca	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4005dd2	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4005dd9	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4005ddd	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4005de4	        0xc6040328	              mov byte [rbx + rax], 0x28	      4235	cp-demangle.c	FUNCTION_72
0x4005de8	    0xc68308010000	           mov byte [rbx + 0x108], 0x28 	      4236	cp-demangle.c	FUNCTION_72
0x4005def	          0x4c89ea	                            mov rdx, r13	      4595	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_6
0x4005df2	      0x448b74240c	            mov r14d, dword [rsp + 0xc] 	      4595	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_6
0x4005df7	          0x4489f6	                           mov esi, r14d	      4595	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_6
0x4005dfa	          0x4889df	                            mov rdi, rbx	      4595	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_6
0x4005dfd	      0xe81cfdffff	                call sym.d_print_subexpr	      4595	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_6
0x4005e02	        0x488b1424	                    mov rdx, qword [rsp]	      4596	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_7
0x4005e06	          0x4489f6	                           mov esi, r14d	      4596	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_7
0x4005e09	          0x4889df	                            mov rdi, rbx	      4596	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_7
0x4005e0c	      0xe870fcffff	                call sym.d_print_expr_op	      4596	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_7
0x4005e11	      0xbd00000000	                              mov ebp, 0	      4596	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_7
0x4005e16	    0x41bd00000000	                             mov r13d, 0	      4596	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_7
0x4005e1c	      0x440fb66500	                  movzx r12d, byte [rbp]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4005e21	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005e2c	            0x752f	                           jne 0x4005e5d	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005e2e	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4005e35	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005e3c	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005e41	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005e44	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005e4a	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4005e55	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4005e5d	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4005e64	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4005e68	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4005e6f	        0x44882403	              mov byte [rbx + rax], r12b	      4235	cp-demangle.c	FUNCTION_72
0x4005e73	    0x4488a3080100	            mov byte [rbx + 0x108], r12b	      4236	cp-demangle.c	FUNCTION_72
0x4005e7a	        0x4883c501	                              add rbp, 1	      4236	cp-demangle.c	FUNCTION_72
0x4005e7e	          0x4c39ed	                            cmp rbp, r13	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4005e81	            0x7599	                           jne 0x4005e1c	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4005e83	      0xe962010000	                           jmp 0x4005fea	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4005e88	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005e93	            0x752f	                           jne 0x4005ec4	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005e95	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4005e9c	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005ea3	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005ea8	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005eab	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005eb1	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4005ebc	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4005ec4	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4005ecb	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4005ecf	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4005ed6	        0xc6040328	              mov byte [rbx + rax], 0x28	      4235	cp-demangle.c	FUNCTION_72
0x4005eda	    0xc68308010000	           mov byte [rbx + 0x108], 0x28 	      4236	cp-demangle.c	FUNCTION_72
0x4005ee1	          0x4c89ea	                            mov rdx, r13	      4605	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_10
0x4005ee4	        0x8b6c240c	              mov ebp, dword [rsp + 0xc]	      4605	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_10
0x4005ee8	            0x89ee	                            mov esi, ebp	      4605	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_10
0x4005eea	          0x4889df	                            mov rdi, rbx	      4605	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_10
0x4005eed	      0xe82cfcffff	                call sym.d_print_subexpr	      4605	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_10
0x4005ef2	        0x488b1424	                    mov rdx, qword [rsp]	      4606	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_11
0x4005ef6	            0x89ee	                            mov esi, ebp	      4606	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_11
0x4005ef8	          0x4889df	                            mov rdi, rbx	      4606	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_11
0x4005efb	      0xe881fbffff	                call sym.d_print_expr_op	      4606	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_11
0x4005f00	      0xbd00000000	                              mov ebp, 0	      4606	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_11
0x4005f05	    0x41bd00000000	                             mov r13d, 0	      4606	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_11
0x4005f0b	      0x440fb66500	                  movzx r12d, byte [rbp]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4005f10	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005f1b	            0x752f	                           jne 0x4005f4c	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005f1d	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4005f24	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005f2b	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005f30	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005f33	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005f39	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4005f44	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4005f4c	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4005f53	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4005f57	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4005f5e	        0x44882403	              mov byte [rbx + rax], r12b	      4235	cp-demangle.c	FUNCTION_72
0x4005f62	    0x4488a3080100	            mov byte [rbx + 0x108], r12b	      4236	cp-demangle.c	FUNCTION_72
0x4005f69	        0x4883c501	                              add rbp, 1	      4236	cp-demangle.c	FUNCTION_72
0x4005f6d	          0x4939ed	                            cmp r13, rbp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4005f70	            0x7599	                           jne 0x4005f0b	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4005f72	        0x488b1424	                    mov rdx, qword [rsp]	      4608	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_13
0x4005f76	        0x8b6c240c	              mov ebp, dword [rsp + 0xc]	      4608	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_13
0x4005f7a	            0x89ee	                            mov esi, ebp	      4608	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_13
0x4005f7c	          0x4889df	                            mov rdi, rbx	      4608	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_13
0x4005f7f	      0xe8fdfaffff	                call sym.d_print_expr_op	      4608	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_13
0x4005f84	          0x4c89f2	                            mov rdx, r14	      4609	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_14
0x4005f87	            0x89ee	                            mov esi, ebp	      4609	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_14
0x4005f89	          0x4889df	                            mov rdi, rbx	      4609	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_14
0x4005f8c	      0xe88dfbffff	                call sym.d_print_subexpr	      4609	cp-demangle.c	FUNCTION_85	SWITCH_1	CALL_14
0x4005f91	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005f9c	            0x752f	                           jne 0x4005fcd	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005f9e	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4005fa5	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005fac	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005fb1	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005fb4	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005fba	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4005fc5	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4005fcd	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4005fd4	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4005fd8	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4005fdf	        0xc6040329	              mov byte [rbx + rax], 0x29	      4235	cp-demangle.c	FUNCTION_72
0x4005fe3	    0xc68308010000	           mov byte [rbx + 0x108], 0x29 	      4236	cp-demangle.c	FUNCTION_72
0x4005fea	    0x4489bb3c0100	           mov dword [rbx + 0x13c], r15d	      4614	cp-demangle.c	FUNCTION_85
0x4005ff1	      0xb801000000	                              mov eax, 1	      4615	cp-demangle.c	FUNCTION_85
0x4005ff6	        0x4883c418	                           add rsp, 0x18	      4616	cp-demangle.c	FUNCTION_85
0x4005ffa	              0x5b	                                 pop rbx	      4616	cp-demangle.c	FUNCTION_85
0x4005ffb	              0x5d	                                 pop rbp	      4616	cp-demangle.c	FUNCTION_85
0x4005ffc	            0x415c	                                 pop r12	      4616	cp-demangle.c	FUNCTION_85
0x4005ffe	            0x415d	                                 pop r13	      4616	cp-demangle.c	FUNCTION_85
0x4006000	            0x415e	                                 pop r14	      4616	cp-demangle.c	FUNCTION_85
0x4006002	            0x415f	                                 pop r15	      4616	cp-demangle.c	FUNCTION_85
0x4006004	            0xf3c3	                                     ret	      4616	cp-demangle.c	FUNCTION_85
d_print_function_type	SWITCH,1:CALL,11:IF,8:WHILE,0:ELSE,0:DO,0:FOR,1:functions,0	141
0x40057bd	            0x4156	                                push r14	      5968	cp-demangle.c	FUNCTION_91
0x40057bf	            0x4155	                                push r13	      5968	cp-demangle.c	FUNCTION_91
0x40057c1	            0x4154	                                push r12	      5968	cp-demangle.c	FUNCTION_91
0x40057c3	              0x55	                                push rbp	      5968	cp-demangle.c	FUNCTION_91
0x40057c4	              0x53	                                push rbx	      5968	cp-demangle.c	FUNCTION_91
0x40057c5	          0x4889fb	                            mov rbx, rdi	      5968	cp-demangle.c	FUNCTION_91
0x40057c8	          0x4189f4	                           mov r12d, esi	      5968	cp-demangle.c	FUNCTION_91
0x40057cb	          0x4989d5	                            mov r13, rdx	      5968	cp-demangle.c	FUNCTION_91
0x40057ce	          0x4889cd	                            mov rbp, rcx	      5968	cp-demangle.c	FUNCTION_91
0x40057d1	          0x4885c9	                           test rcx, rcx	      5976	cp-demangle.c	FUNCTION_91	FOR_1
0x40057d4	     0xf8437010000	                            je 0x4005911	      5976	cp-demangle.c	FUNCTION_91	FOR_1
0x40057da	        0x83791000	               cmp dword [rcx + 0x10], 0	      5978	cp-demangle.c	FUNCTION_91	FOR_1	IF_1
0x40057de	     0xf852d010000	                           jne 0x4005911	      5978	cp-demangle.c	FUNCTION_91	FOR_1	IF_1
0x40057e4	          0x4889ca	                            mov rdx, rcx	      5978	cp-demangle.c	FUNCTION_91	FOR_1	IF_1
0x40057e7	            0xeb0a	                           jmp 0x40057f3	      5978	cp-demangle.c	FUNCTION_91	FOR_1	IF_1
0x40057e9	        0x837a1000	               cmp dword [rdx + 0x10], 0	      5978	cp-demangle.c	FUNCTION_91	FOR_1	IF_1
0x40057ed	     0xf851e010000	                           jne 0x4005911	      5978	cp-demangle.c	FUNCTION_91	FOR_1	IF_1
0x40057f3	        0x488b4208	                mov rax, qword [rdx + 8]	      5981	cp-demangle.c	FUNCTION_91	FOR_1	SWITCH_1
0x40057f7	            0x8b00	                    mov eax, dword [rax]	      5981	cp-demangle.c	FUNCTION_91	FOR_1	SWITCH_1
0x40057f9	          0x83e819	                           sub eax, 0x19	      5981	cp-demangle.c	FUNCTION_91	FOR_1	SWITCH_1
0x40057fc	          0x83f812	                           cmp eax, 0x12	      5981	cp-demangle.c	FUNCTION_91	FOR_1	SWITCH_1
0x40057ff	            0x7709	                            ja 0x400580a	      5981	cp-demangle.c	FUNCTION_91	FOR_1	SWITCH_1
0x4005801	            0x89c0	                            mov eax, eax	      5981	cp-demangle.c	FUNCTION_91	FOR_1	SWITCH_1
0x4005803	    0xff24c5000000	                       jmp qword [rax*8]	      5981	cp-demangle.c	FUNCTION_91	FOR_1	SWITCH_1
0x400580a	          0x488b12	                    mov rdx, qword [rdx]	      5976	cp-demangle.c	FUNCTION_91	FOR_1
0x400580d	          0x4885d2	                           test rdx, rdx	      5976	cp-demangle.c	FUNCTION_91	FOR_1
0x4005810	            0x75d7	                           jne 0x40057e9	      5976	cp-demangle.c	FUNCTION_91	FOR_1
0x4005812	      0xe9fa000000	                           jmp 0x4005911	      5976	cp-demangle.c	FUNCTION_91	FOR_1
0x4005817	     0xfb683080100	          movzx eax, byte [rbx + 0x108] 	      6012	cp-demangle.c	FUNCTION_91	IF_3	IF_4	IF_5	CALL_2
0x400581e	          0x83e0fd	                     and eax, 0xfffffffd	      6012	cp-demangle.c	FUNCTION_91	IF_3	IF_4	IF_5	CALL_2
0x4005821	            0x3c28	                            cmp al, 0x28	      6012	cp-demangle.c	FUNCTION_91	IF_3	IF_4	IF_5	CALL_2
0x4005823	     0xf853d020000	                           jne 0x4005a66	      6012	cp-demangle.c	FUNCTION_91	IF_3	IF_4	IF_5	CALL_2
0x4005829	            0xeb59	                           jmp 0x4005884	      6012	cp-demangle.c	FUNCTION_91	IF_3	IF_4	IF_5	CALL_2
0x400582b	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005836	            0x752f	                           jne 0x4005867	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005838	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400583f	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005846	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400584b	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400584e	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005854	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x400585f	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4005867	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x400586e	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4005872	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4005879	        0xc6040320	              mov byte [rbx + rax], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x400587d	    0xc68308010000	           mov byte [rbx + 0x108], 0x20 	      4236	cp-demangle.c	FUNCTION_72
0x4005884	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400588f	            0x752f	                           jne 0x40058c0	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005891	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4005898	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400589f	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40058a4	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40058a7	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40058ad	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x40058b8	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40058c0	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x40058c7	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x40058cb	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40058d2	        0xc6040328	              mov byte [rbx + rax], 0x28	      4235	cp-demangle.c	FUNCTION_72
0x40058d6	    0xc68308010000	           mov byte [rbx + 0x108], 0x28 	      4236	cp-demangle.c	FUNCTION_72
0x40058dd	    0x4c8bb3280100	           mov r14, qword [rbx + 0x128] 	      6020	cp-demangle.c	FUNCTION_91
0x40058e4	    0x48c783280100	              mov qword [rbx + 0x128], 0	      6021	cp-demangle.c	FUNCTION_91
0x40058ef	      0xb900000000	                              mov ecx, 0	      6023	cp-demangle.c	FUNCTION_91	CALL_6
0x40058f4	          0x4889ea	                            mov rdx, rbp	      6023	cp-demangle.c	FUNCTION_91	CALL_6
0x40058f7	          0x4489e6	                           mov esi, r12d	      6023	cp-demangle.c	FUNCTION_91	CALL_6
0x40058fa	          0x4889df	                            mov rdi, rbx	      6023	cp-demangle.c	FUNCTION_91	CALL_6
0x40058fd	      0xe822f8ffff	               call sym.d_print_mod_list	      6023	cp-demangle.c	FUNCTION_91	CALL_6
0x4005902	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400590d	            0x7558	                           jne 0x4005967	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400590f	            0xeb27	                           jmp 0x4005938	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005911	    0x4c8bb3280100	           mov r14, qword [rbx + 0x128] 	      6020	cp-demangle.c	FUNCTION_91
0x4005918	    0x48c783280100	              mov qword [rbx + 0x128], 0	      6021	cp-demangle.c	FUNCTION_91
0x4005923	      0xb900000000	                              mov ecx, 0	      6023	cp-demangle.c	FUNCTION_91	CALL_6
0x4005928	          0x4889ea	                            mov rdx, rbp	      6023	cp-demangle.c	FUNCTION_91	CALL_6
0x400592b	          0x4489e6	                           mov esi, r12d	      6023	cp-demangle.c	FUNCTION_91	CALL_6
0x400592e	          0x4889df	                            mov rdi, rbx	      6023	cp-demangle.c	FUNCTION_91	CALL_6
0x4005931	      0xe8eef7ffff	               call sym.d_print_mod_list	      6023	cp-demangle.c	FUNCTION_91	CALL_6
0x4005936	            0xeb4c	                           jmp 0x4005984	      6023	cp-demangle.c	FUNCTION_91	CALL_6
0x4005938	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400593f	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005946	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400594b	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400594e	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005954	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x400595f	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4005967	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x400596e	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4005972	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4005979	        0xc6040329	              mov byte [rbx + rax], 0x29	      4235	cp-demangle.c	FUNCTION_72
0x400597d	    0xc68308010000	           mov byte [rbx + 0x108], 0x29 	      4236	cp-demangle.c	FUNCTION_72
0x4005984	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400598f	            0x752f	                           jne 0x40059c0	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005991	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4005998	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400599f	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40059a4	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40059a7	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40059ad	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x40059b8	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40059c0	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x40059c7	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x40059cb	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40059d2	        0xc6040328	              mov byte [rbx + rax], 0x28	      4235	cp-demangle.c	FUNCTION_72
0x40059d6	    0xc68308010000	           mov byte [rbx + 0x108], 0x28 	      4236	cp-demangle.c	FUNCTION_72
0x40059dd	        0x498b5510	            mov rdx, qword [r13 + 0x10] 	      6030	cp-demangle.c	FUNCTION_91	IF_8
0x40059e1	          0x4885d2	                           test rdx, rdx	      6030	cp-demangle.c	FUNCTION_91	IF_8
0x40059e4	            0x740b	                            je 0x40059f1	      6030	cp-demangle.c	FUNCTION_91	IF_8
0x40059e6	          0x4489e6	                           mov esi, r12d	      6031	cp-demangle.c	FUNCTION_91	CALL_9
0x40059e9	          0x4889df	                            mov rdi, rbx	      6031	cp-demangle.c	FUNCTION_91	CALL_9
0x40059ec	      0xe8f1ecffff	                   call sym.d_print_comp	      6031	cp-demangle.c	FUNCTION_91	CALL_9
0x40059f1	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40059fc	            0x752f	                           jne 0x4005a2d	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40059fe	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4005a05	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005a0c	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005a11	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005a14	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005a1a	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4005a25	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4005a2d	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4005a34	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4005a38	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4005a3f	        0xc6040329	              mov byte [rbx + rax], 0x29	      4235	cp-demangle.c	FUNCTION_72
0x4005a43	    0xc68308010000	           mov byte [rbx + 0x108], 0x29 	      4236	cp-demangle.c	FUNCTION_72
0x4005a4a	      0xb901000000	                              mov ecx, 1	      6035	cp-demangle.c	FUNCTION_91	CALL_11
0x4005a4f	          0x4889ea	                            mov rdx, rbp	      6035	cp-demangle.c	FUNCTION_91	CALL_11
0x4005a52	          0x4489e6	                           mov esi, r12d	      6035	cp-demangle.c	FUNCTION_91	CALL_11
0x4005a55	          0x4889df	                            mov rdi, rbx	      6035	cp-demangle.c	FUNCTION_91	CALL_11
0x4005a58	      0xe8c7f6ffff	               call sym.d_print_mod_list	      6035	cp-demangle.c	FUNCTION_91	CALL_11
0x4005a5d	    0x4c89b3280100	            mov qword [rbx + 0x128], r14	      6037	cp-demangle.c	FUNCTION_91
0x4005a64	            0xeb12	                           jmp 0x4005a78	      6038	cp-demangle.c	FUNCTION_91
0x4005a66	    0x80bb08010000	           cmp byte [rbx + 0x108], 0x20 	      6015	cp-demangle.c	FUNCTION_91	IF_3	IF_6	CALL_3
0x4005a6d	     0xf85b8fdffff	                           jne 0x400582b	      6015	cp-demangle.c	FUNCTION_91	IF_3	IF_6	CALL_3
0x4005a73	      0xe90cfeffff	                           jmp 0x4005884	      6015	cp-demangle.c	FUNCTION_91	IF_3	IF_6	CALL_3
0x4005a78	              0x5b	                                 pop rbx	      6038	cp-demangle.c	FUNCTION_91
0x4005a79	              0x5d	                                 pop rbp	      6038	cp-demangle.c	FUNCTION_91
0x4005a7a	            0x415c	                                 pop r12	      6038	cp-demangle.c	FUNCTION_91
0x4005a7c	            0x415d	                                 pop r13	      6038	cp-demangle.c	FUNCTION_91
0x4005a7e	            0x415e	                                 pop r14	      6038	cp-demangle.c	FUNCTION_91
0x4005a80	              0xc3	                                     ret	      6038	cp-demangle.c	FUNCTION_91
d_expression	SWITCH,0:CALL,1:IF,0:WHILE,0:ELSE,0:DO,0:FOR,0:functions,0	480
0x400734e	            0x4156	                                push r14	      3503	cp-demangle.c	FUNCTION_52
0x4007350	            0x4155	                                push r13	      3503	cp-demangle.c	FUNCTION_52
0x4007352	            0x4154	                                push r12	      3503	cp-demangle.c	FUNCTION_52
0x4007354	              0x55	                                push rbp	      3503	cp-demangle.c	FUNCTION_52
0x4007355	              0x53	                                push rbx	      3503	cp-demangle.c	FUNCTION_52
0x4007356	          0x4889fb	                            mov rbx, rdi	      3503	cp-demangle.c	FUNCTION_52
0x4007359	          0x8b6f4c	            mov ebp, dword [rdi + 0x4c] 	      3505	cp-demangle.c	FUNCTION_52
0x400735c	    0xc7474c010000	               mov dword [rdi + 0x4c], 1	      3507	cp-demangle.c	FUNCTION_52
0x4007363	        0x488b5718	            mov rdx, qword [rdi + 0x18] 	      3259	cp-demangle.c	FUNCTION_51	CALL_1
0x4007367	           0xfb602	                   movzx eax, byte [rdx]	      3259	cp-demangle.c	FUNCTION_51	CALL_1
0x400736a	            0x3c4c	                            cmp al, 0x4c	      3260	cp-demangle.c	FUNCTION_51	IF_1
0x400736c	            0x750a	                           jne 0x4007378	      3260	cp-demangle.c	FUNCTION_51	IF_1
0x400736e	      0xe8cf150000	                 call sym.d_expr_primary	      3261	cp-demangle.c	FUNCTION_51	CALL_2
0x4007373	      0xe904070000	                           jmp 0x4007a7c	      3261	cp-demangle.c	FUNCTION_51	CALL_2
0x4007378	            0x3c54	                            cmp al, 0x54	      3262	cp-demangle.c	FUNCTION_51	ELSE_1	IF_2
0x400737a	            0x750a	                           jne 0x4007386	      3262	cp-demangle.c	FUNCTION_51	ELSE_1	IF_2
0x400737c	      0xe8b190ffff	               call sym.d_template_param	      3263	cp-demangle.c	FUNCTION_51	ELSE_1	IF_2
0x4007381	      0xe9f6060000	                           jmp 0x4007a7c	      3263	cp-demangle.c	FUNCTION_51	ELSE_1	IF_2
0x4007386	            0x3c73	                            cmp al, 0x73	      3264	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	CALL_4
0x4007388	     0xf85a8000000	                           jne 0x4007436	      3264	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	CALL_4
0x400738e	         0xfb64a01	               movzx ecx, byte [rdx + 1]	      3264	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	CALL_4
0x4007392	          0x80f972	                            cmp cl, 0x72	      3264	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	CALL_4
0x4007395	            0x756f	                           jne 0x4007406	      3264	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	CALL_4
0x4007397	        0x4883c202	                              add rdx, 2	      3269	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	CALL_5
0x400739b	        0x48895718	             mov qword [rdi + 0x18], rdx	      3269	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	CALL_5
0x400739f	      0xe800000000	                          call 0x40073a4	      3270	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3
0x40073a4	          0x4989c4	                            mov r12, rax	      3270	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3
0x40073a7	          0x4889df	                            mov rdi, rbx	      3271	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	CALL_6
0x40073aa	      0xe8c1faffff	             call sym.d_unqualified_name	      3271	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	CALL_6
0x40073af	          0x4989c5	                            mov r13, rax	      3271	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	CALL_6
0x40073b2	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      3272	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	IF_4	CALL_7
0x40073b6	          0x803849	                    cmp byte [rax], 0x49	      3272	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	IF_4	CALL_7
0x40073b9	            0x7418	                            je 0x40073d3	      3272	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	IF_4	CALL_7
0x40073bb	          0x4c89e9	                            mov rcx, r13	      3273	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	CALL_8
0x40073be	          0x4c89e2	                            mov rdx, r12	      3273	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	CALL_8
0x40073c1	      0xbe01000000	                              mov esi, 1	      3273	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	CALL_8
0x40073c6	          0x4889df	                            mov rdi, rbx	      3273	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	CALL_8
0x40073c9	      0xe8c28cffff	                    call sym.d_make_comp	      3273	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	CALL_8
0x40073ce	      0xe9a9060000	                           jmp 0x4007a7c	      3273	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	CALL_8
0x40073d3	          0x4889df	                            mov rdi, rbx	      3275	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	ELSE_3	CALL_9
0x40073d6	      0xe888170000	                call sym.d_template_args	      3275	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	ELSE_3	CALL_9
0x40073db	          0x4889c1	                            mov rcx, rax	      3275	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	ELSE_3	CALL_9
0x40073de	          0x4c89ea	                            mov rdx, r13	      3275	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	ELSE_3	CALL_9
0x40073e1	      0xbe04000000	                              mov esi, 4	      3275	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	ELSE_3	CALL_9
0x40073e6	          0x4889df	                            mov rdi, rbx	      3275	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	ELSE_3	CALL_9
0x40073e9	      0xe8a28cffff	                    call sym.d_make_comp	      3275	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	ELSE_3	CALL_9
0x40073ee	          0x4889c1	                            mov rcx, rax	      3275	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	ELSE_3	CALL_9
0x40073f1	          0x4c89e2	                            mov rdx, r12	      3275	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	ELSE_3	CALL_9
0x40073f4	      0xbe01000000	                              mov esi, 1	      3275	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	ELSE_3	CALL_9
0x40073f9	          0x4889df	                            mov rdi, rbx	      3275	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	ELSE_3	CALL_9
0x40073fc	      0xe88f8cffff	                    call sym.d_make_comp	      3275	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	ELSE_3	CALL_9
0x4007401	      0xe976060000	                           jmp 0x4007a7c	      3275	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	ELSE_3	CALL_9
0x4007406	          0x80f970	                            cmp cl, 0x70	      3279	cp-demangle.c	FUNCTION_51	ELSE_4	IF_5	CALL_12
0x4007409	     0xf85f8000000	                           jne 0x4007507	      3279	cp-demangle.c	FUNCTION_51	ELSE_4	IF_5	CALL_12
0x400740f	        0x4883c202	                              add rdx, 2	      3281	cp-demangle.c	FUNCTION_51	ELSE_4	IF_5	CALL_13
0x4007413	        0x48895718	             mov qword [rdi + 0x18], rdx	      3281	cp-demangle.c	FUNCTION_51	ELSE_4	IF_5	CALL_13
0x4007417	      0xe82b180000	                 call sym.d_expression_1	      3282	cp-demangle.c	FUNCTION_51	ELSE_4	IF_5	CALL_14
0x400741c	      0xb900000000	                              mov ecx, 0	      3282	cp-demangle.c	FUNCTION_51	ELSE_4	IF_5	CALL_14
0x4007421	          0x4889c2	                            mov rdx, rax	      3282	cp-demangle.c	FUNCTION_51	ELSE_4	IF_5	CALL_14
0x4007424	      0xbe4a000000	                           mov esi, 0x4a	      3282	cp-demangle.c	FUNCTION_51	ELSE_4	IF_5	CALL_14
0x4007429	          0x4889df	                            mov rdi, rbx	      3282	cp-demangle.c	FUNCTION_51	ELSE_4	IF_5	CALL_14
0x400742c	      0xe85f8cffff	                    call sym.d_make_comp	      3282	cp-demangle.c	FUNCTION_51	ELSE_4	IF_5	CALL_14
0x4007431	      0xe946060000	                           jmp 0x4007a7c	      3282	cp-demangle.c	FUNCTION_51	ELSE_4	IF_5	CALL_14
0x4007436	            0x3c66	                            cmp al, 0x66	      3285	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	CALL_16
0x4007438	            0x7568	                           jne 0x40074a2	      3285	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	CALL_16
0x400743a	        0x807a0170	                cmp byte [rdx + 1], 0x70	      3285	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	CALL_16
0x400743e	     0xf8521010000	                           jne 0x4007565	      3285	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	CALL_16
0x4007444	        0x488d4202	                      lea rax, [rdx + 2]	      3289	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	CALL_17
0x4007448	        0x48894718	             mov qword [rdi + 0x18], rax	      3289	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	CALL_17
0x400744c	        0x807a0254	                cmp byte [rdx + 2], 0x54	      3290	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	IF_7	CALL_18
0x4007450	            0x7510	                           jne 0x4007462	      3290	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	IF_7	CALL_18
0x4007452	        0x4883c203	                              add rdx, 3	      3293	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	IF_7	CALL_19
0x4007456	        0x48895718	             mov qword [rdi + 0x18], rdx	      3293	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	IF_7	CALL_19
0x400745a	    0x41bc00000000	                             mov r12d, 0	      3294	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	IF_7
0x4007460	            0xeb1d	                           jmp 0x400747f	      3294	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	IF_7
0x4007462	      0xe8778fffff	               call sym.d_compact_number	      3298	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	ELSE_6	CALL_20
0x4007467	            0x89c2	                            mov edx, eax	      3299	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	ELSE_6	IF_8
0x4007469	    0x81e2ffffff7f	                     and edx, 0x7fffffff	      3299	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	ELSE_6	IF_8
0x400746f	    0x81faffffff7f	                     cmp edx, 0x7fffffff	      3299	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	ELSE_6	IF_8
0x4007475	     0xf84c8040000	                            je 0x4007943	      3299	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	ELSE_6	IF_8
0x400747b	        0x448d6001	                     lea r12d, [rax + 1]	      3301	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	ELSE_6
0x400747f	          0x4889df	                            mov rdi, rbx	      1186	cp-demangle.c	FUNCTION_14	CALL_1
0x4007482	      0xe8e18bffff	                   call sym.d_make_empty	      1186	cp-demangle.c	FUNCTION_14	CALL_1
0x4007487	          0x4885c0	                           test rax, rax	      1187	cp-demangle.c	FUNCTION_14	IF_1
0x400748a	     0xf84ec050000	                            je 0x4007a7c	      1187	cp-demangle.c	FUNCTION_14	IF_1
0x4007490	    0xc70006000000	                      mov dword [rax], 6	      1189	cp-demangle.c	FUNCTION_14	IF_1
0x4007496	          0x4d63e4	                        movsxd r12, r12d	      1190	cp-demangle.c	FUNCTION_14	IF_1
0x4007499	        0x4c896008	                mov qword [rax + 8], r12	      1190	cp-demangle.c	FUNCTION_14	IF_1
0x400749d	      0xe9da050000	                           jmp 0x4007a7c	      1190	cp-demangle.c	FUNCTION_14	IF_1
0x40074a2	          0x8d48d0	                   lea ecx, [rax - 0x30]	      3305	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9
0x40074a5	          0x80f909	                               cmp cl, 9	      3305	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9
0x40074a8	            0x7610	                           jbe 0x40074ba	      3305	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9
0x40074aa	            0x3c6f	                            cmp al, 0x6f	      3306	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	CALL_22
0x40074ac	            0x7559	                           jne 0x4007507	      3306	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	CALL_22
0x40074ae	        0x807a016e	                cmp byte [rdx + 1], 0x6e	      3306	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	CALL_22
0x40074b2	     0xf85ad000000	                           jne 0x4007565	      3306	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	CALL_22
0x40074b8	            0xeb04	                           jmp 0x40074be	      3306	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	CALL_22
0x40074ba	            0x3c6f	                            cmp al, 0x6f	      3312	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	IF_10
0x40074bc	            0x7508	                           jne 0x40074c6	      3312	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	IF_10
0x40074be	        0x4883c202	                              add rdx, 2	      3314	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	CALL_23
0x40074c2	        0x48895318	             mov qword [rbx + 0x18], rdx	      3314	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	CALL_23
0x40074c6	          0x4889df	                            mov rdi, rbx	      3316	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	CALL_24
0x40074c9	      0xe8a2f9ffff	             call sym.d_unqualified_name	      3316	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	CALL_24
0x40074ce	          0x4989c4	                            mov r12, rax	      3316	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	CALL_24
0x40074d1	          0x4885c0	                           test rax, rax	      3317	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	IF_11
0x40074d4	     0xf8473040000	                            je 0x400794d	      3317	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	IF_11
0x40074da	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      3319	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	IF_12	CALL_25
0x40074de	          0x803a49	                    cmp byte [rdx], 0x49	      3319	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	IF_12	CALL_25
0x40074e1	     0xf8595050000	                           jne 0x4007a7c	      3319	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	IF_12	CALL_25
0x40074e7	          0x4889df	                            mov rdi, rbx	      3320	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	IF_12	CALL_26
0x40074ea	      0xe874160000	                call sym.d_template_args	      3320	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	IF_12	CALL_26
0x40074ef	          0x4889c1	                            mov rcx, rax	      3320	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	IF_12	CALL_26
0x40074f2	          0x4c89e2	                            mov rdx, r12	      3320	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	IF_12	CALL_26
0x40074f5	      0xbe04000000	                              mov esi, 4	      3320	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	IF_12	CALL_26
0x40074fa	          0x4889df	                            mov rdi, rbx	      3320	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	IF_12	CALL_26
0x40074fd	      0xe88e8bffff	                    call sym.d_make_comp	      3320	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	IF_12	CALL_26
0x4007502	      0xe975050000	                           jmp 0x4007a7c	      3320	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	IF_12	CALL_26
0x4007507	            0x3c69	                            cmp al, 0x69	      3325	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13
0x4007509	            0x7404	                            je 0x400750f	      3325	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13
0x400750b	            0x3c74	                            cmp al, 0x74	      3325	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13
0x400750d	            0x7556	                           jne 0x4007565	      3325	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13
0x400750f	        0x807a016c	                cmp byte [rdx + 1], 0x6c	      3326	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	CALL_28
0x4007513	            0x7550	                           jne 0x4007565	      3326	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	CALL_28
0x4007515	    0x41bc00000000	                             mov r12d, 0	      3329	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13
0x400751b	            0x3c74	                            cmp al, 0x74	      3330	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	IF_14
0x400751d	            0x7519	                           jne 0x4007538	      3330	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	IF_14
0x400751f	          0x4889df	                            mov rdi, rbx	      3331	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	IF_14
0x4007522	      0xe800000000	                          call 0x4007527	      3331	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	IF_14
0x4007527	          0x4989c4	                            mov r12, rax	      3331	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	IF_14
0x400752a	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      3332	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	IF_15	CALL_29
0x400752e	        0x807a0100	                   cmp byte [rdx + 1], 0	      3332	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	IF_15	CALL_29
0x4007532	     0xf841f040000	                            je 0x4007957	      3332	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	IF_15	CALL_29
0x4007538	        0x4883c202	                              add rdx, 2	      3334	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	CALL_30
0x400753c	        0x48895318	             mov qword [rbx + 0x18], rdx	      3334	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	CALL_30
0x4007540	      0xbe45000000	                           mov esi, 0x45	      3335	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	CALL_31
0x4007545	          0x4889df	                            mov rdi, rbx	      3335	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	CALL_31
0x4007548	      0xe841160000	                     call sym.d_exprlist	      3335	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	CALL_31
0x400754d	          0x4889c1	                            mov rcx, rax	      3335	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	CALL_31
0x4007550	          0x4c89e2	                            mov rdx, r12	      3335	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	CALL_31
0x4007553	      0xbe30000000	                           mov esi, 0x30	      3335	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	CALL_31
0x4007558	          0x4889df	                            mov rdi, rbx	      3335	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	CALL_31
0x400755b	      0xe8308bffff	                    call sym.d_make_comp	      3335	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	CALL_31
0x4007560	      0xe917050000	                           jmp 0x4007a7c	      3335	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	CALL_31
0x4007565	          0x4889df	                            mov rdi, rbx	      3344	cp-demangle.c	FUNCTION_51	ELSE_10	CALL_33
0x4007568	      0xe897f6ffff	                call sym.d_operator_name	      3344	cp-demangle.c	FUNCTION_51	ELSE_10	CALL_33
0x400756d	          0x4989c4	                            mov r12, rax	      3344	cp-demangle.c	FUNCTION_51	ELSE_10	CALL_33
0x4007570	          0x4885c0	                           test rax, rax	      3345	cp-demangle.c	FUNCTION_51	ELSE_10	IF_16
0x4007573	     0xf84e8030000	                            je 0x4007961	      3345	cp-demangle.c	FUNCTION_51	ELSE_10	IF_16
0x4007579	          0x833831	                   cmp dword [rax], 0x31	      3348	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17
0x400757c	     0xf85d8040000	                           jne 0x4007a5a	      3348	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17
0x4007582	        0x488b4008	                mov rax, qword [rax + 8]	      3350	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17
0x4007586	          0x4c8b28	                    mov r13, qword [rax]	      3350	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17
0x4007589	          0x8b4010	            mov eax, dword [rax + 0x10] 	      3351	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17
0x400758c	          0x83e802	                              sub eax, 2	      3351	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17
0x400758f	           0x14348	             add dword [rbx + 0x48], eax	      3351	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17
0x4007592	      0x41807d0073	                    cmp byte [r13], 0x73	      3352	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17	IF_18	CALL_34
0x4007597	     0xf856c040000	                           jne 0x4007a09	      3352	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17	IF_18	CALL_34
0x400759d	      0x41807d0174	                cmp byte [r13 + 1], 0x74	      3352	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17	IF_18	CALL_34
0x40075a2	     0xf8561040000	                           jne 0x4007a09	      3352	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17	IF_18	CALL_34
0x40075a8	      0x41807d0200	                   cmp byte [r13 + 2], 0	      3352	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17	IF_18	CALL_34
0x40075ad	     0xf8512040000	                           jne 0x40079c5	      3352	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17	IF_18	CALL_34
0x40075b3	          0x4889df	                            mov rdi, rbx	      3353	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17	IF_18	CALL_35
0x40075b6	      0xe800000000	                          call 0x40075bb	      3353	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17	IF_18	CALL_35
0x40075bb	          0x4889c1	                            mov rcx, rax	      3353	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17	IF_18	CALL_35
0x40075be	          0x4c89e2	                            mov rdx, r12	      3353	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17	IF_18	CALL_35
0x40075c1	      0xbe36000000	                           mov esi, 0x36	      3353	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17	IF_18	CALL_35
0x40075c6	          0x4889df	                            mov rdi, rbx	      3353	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17	IF_18	CALL_35
0x40075c9	      0xe8c28affff	                    call sym.d_make_comp	      3353	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17	IF_18	CALL_35
0x40075ce	      0xe9a9040000	                           jmp 0x4007a7c	      3353	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17	IF_18	CALL_35
0x40075d3	    0x41bd00000000	                             mov r13d, 0	      3341	cp-demangle.c	FUNCTION_51	ELSE_10
0x40075d9	      0x498b442408	                mov rax, qword [r12 + 8]	      3362	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_1
0x40075de	          0x8b4014	            mov eax, dword [rax + 0x14] 	      3362	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_1
0x40075e1	            0xeb0b	                           jmp 0x40075ee	      3362	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_1
0x40075e3	    0x41bd00000000	                             mov r13d, 0	      3341	cp-demangle.c	FUNCTION_51	ELSE_10
0x40075e9	      0x418b442408	                mov eax, dword [r12 + 8]	      3365	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_1
0x40075ee	          0x83f801	                              cmp eax, 1	      3372	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2
0x40075f1	            0x743f	                            je 0x4007632	      3372	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2
0x40075f3	          0x83f801	                              cmp eax, 1	      3372	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2
0x40075f6	            0x7f09	                            jg 0x4007601	      3372	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2
0x40075f8	            0x85c0	                           test eax, eax	      3372	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2
0x40075fa	            0x741c	                            je 0x4007618	      3372	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2
0x40075fc	      0xe96a030000	                           jmp 0x400796b	      3372	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2
0x4007601	          0x83f802	                              cmp eax, 2	      3372	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2
0x4007604	     0xf84d6000000	                            je 0x40076e0	      3372	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2
0x400760a	          0x83f803	                              cmp eax, 3	      3372	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2
0x400760d	     0xf84ca010000	                            je 0x40077dd	      3372	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2
0x4007613	      0xe953030000	                           jmp 0x400796b	      3372	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2
0x4007618	      0xb900000000	                              mov ecx, 0	      3375	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_36
0x400761d	          0x4c89e2	                            mov rdx, r12	      3375	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_36
0x4007620	      0xbe35000000	                           mov esi, 0x35	      3375	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_36
0x4007625	          0x4889df	                            mov rdi, rbx	      3375	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_36
0x4007628	      0xe8638affff	                    call sym.d_make_comp	      3375	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_36
0x400762d	      0xe94a040000	                           jmp 0x4007a7c	      3375	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_36
0x4007632	          0x4d85ed	                           test r13, r13	      3382	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_19
0x4007635	     0xf84aa030000	                            je 0x40079e5	      3382	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_19
0x400763b	      0x410fb64500	                   movzx eax, byte [r13]	      3382	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_19
0x4007640	            0x3c70	                            cmp al, 0x70	      3382	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_19
0x4007642	            0x7408	                            je 0x400764c	      3382	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_19
0x4007644	            0x3c6d	                            cmp al, 0x6d	      3382	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_19
0x4007646	     0xf85ab030000	                           jne 0x40079f7	      3382	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_19
0x400764c	        0x413a4501	                  cmp al, byte [r13 + 1]	      3383	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_19
0x4007650	     0xf85a1030000	                           jne 0x40079f7	      3383	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_19
0x4007656	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      3385	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_37
0x400765a	    0x41be01000000	                             mov r14d, 1	      3385	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_37
0x4007660	          0x80385f	                    cmp byte [rax], 0x5f	      3385	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_37
0x4007663	            0x7524	                           jne 0x4007689	      3385	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_37
0x4007665	        0x4883c001	                              add rax, 1	      3385	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_37
0x4007669	        0x48894318	             mov qword [rbx + 0x18], rax	      3385	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_37
0x400766d	      0xe985030000	                           jmp 0x40079f7	      3385	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_37
0x4007672	        0x4883c001	                              add rax, 1	      3388	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_20	CALL_38
0x4007676	        0x48894318	             mov qword [rbx + 0x18], rax	      3388	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_20	CALL_38
0x400767a	      0xbe45000000	                           mov esi, 0x45	      3389	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_39
0x400767f	          0x4889df	                            mov rdi, rbx	      3389	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_39
0x4007682	      0xe807150000	                     call sym.d_exprlist	      3389	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_39
0x4007687	            0xeb3f	                           jmp 0x40076c8	      3389	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_39
0x4007689	      0x41807d0073	                    cmp byte [r13], 0x73	      3390	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_11	IF_21	CALL_40
0x400768e	            0x7518	                           jne 0x40076a8	      3390	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_11	IF_21	CALL_40
0x4007690	      0x41807d0150	                cmp byte [r13 + 1], 0x50	      3390	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_11	IF_21	CALL_40
0x4007695	            0x7511	                           jne 0x40076a8	      3390	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_11	IF_21	CALL_40
0x4007697	      0x41807d0200	                   cmp byte [r13 + 2], 0	      3390	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_11	IF_21	CALL_40
0x400769c	            0x750a	                           jne 0x40076a8	      3390	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_11	IF_21	CALL_40
0x400769e	          0x4889df	                            mov rdi, rbx	      3391	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_11	IF_21
0x40076a1	      0xe8a5130000	              call sym.d_template_args_1	      3391	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_11	IF_21
0x40076a6	            0xeb08	                           jmp 0x40076b0	      3391	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_11	IF_21
0x40076a8	          0x4889df	                            mov rdi, rbx	      3393	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_42
0x40076ab	      0xe897150000	                 call sym.d_expression_1	      3393	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_42
0x40076b0	          0x4585f6	                         test r14d, r14d	      3395	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_22
0x40076b3	            0x7413	                            je 0x40076c8	      3395	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_22
0x40076b5	          0x4889c1	                            mov rcx, rax	      3397	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_22	CALL_43
0x40076b8	          0x4889c2	                            mov rdx, rax	      3397	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_22	CALL_43
0x40076bb	      0xbe38000000	                           mov esi, 0x38	      3397	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_22	CALL_43
0x40076c0	          0x4889df	                            mov rdi, rbx	      3397	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_22	CALL_43
0x40076c3	      0xe8c889ffff	                    call sym.d_make_comp	      3397	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_22	CALL_43
0x40076c8	          0x4889c1	                            mov rcx, rax	      3400	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_44
0x40076cb	          0x4c89e2	                            mov rdx, r12	      3400	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_44
0x40076ce	      0xbe36000000	                           mov esi, 0x36	      3400	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_44
0x40076d3	          0x4889df	                            mov rdi, rbx	      3400	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_44
0x40076d6	      0xe8b589ffff	                    call sym.d_make_comp	      3400	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_44
0x40076db	      0xe99c030000	                           jmp 0x4007a7c	      3400	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_44
0x40076e0	          0x4d85ed	                           test r13, r13	      3407	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_23
0x40076e3	     0xf848c020000	                            je 0x4007975	      3407	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_23
0x40076e9	          0x4c89e7	                            mov rdi, r12	      3409	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_24	CALL_45
0x40076ec	      0xe88c8dffff	                 call sym.op_is_new_cast	      3409	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_24	CALL_45
0x40076f1	            0x85c0	                           test eax, eax	      3409	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_24	CALL_45
0x40076f3	            0x740d	                            je 0x4007702	      3409	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_24	CALL_45
0x40076f5	          0x4889df	                            mov rdi, rbx	      3410	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_24
0x40076f8	      0xe800000000	                          call 0x40076fd	      3410	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_24
0x40076fd	          0x4989c6	                            mov r14, rax	      3410	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_24
0x4007700	            0xeb1f	                           jmp 0x4007721	      3410	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_24
0x4007702	      0x41807d0066	                    cmp byte [r13], 0x66	      3411	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_13	IF_25
0x4007707	            0x750d	                           jne 0x4007716	      3411	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_13	IF_25
0x4007709	          0x4889df	                            mov rdi, rbx	      3413	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_13	IF_25
0x400770c	      0xe8f3f4ffff	                call sym.d_operator_name	      3413	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_13	IF_25
0x4007711	          0x4989c6	                            mov r14, rax	      3413	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_13	IF_25
0x4007714	            0xeb0b	                           jmp 0x4007721	      3413	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_13	IF_25
0x4007716	          0x4889df	                            mov rdi, rbx	      3415	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_47
0x4007719	      0xe829150000	                 call sym.d_expression_1	      3415	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_47
0x400771e	          0x4989c6	                            mov r14, rax	      3415	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_47
0x4007721	      0x410fb64500	                   movzx eax, byte [r13]	      3416	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_26	CALL_48
0x4007726	          0x83f863	                           cmp eax, 0x63	      3416	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_26	CALL_48
0x4007729	            0x7520	                           jne 0x400774b	      3416	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_26	CALL_48
0x400772b	      0x41807d016c	                cmp byte [r13 + 1], 0x6c	      3416	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_26	CALL_48
0x4007730	            0x7575	                           jne 0x40077a7	      3416	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_26	CALL_48
0x4007732	      0x41807d0200	                   cmp byte [r13 + 2], 0	      3416	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_26	CALL_48
0x4007737	            0x756e	                           jne 0x40077a7	      3416	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_26	CALL_48
0x4007739	      0xbe45000000	                           mov esi, 0x45	      3417	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_49
0x400773e	          0x4889df	                            mov rdi, rbx	      3417	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_49
0x4007741	      0xe848140000	                     call sym.d_exprlist	      3417	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_49
0x4007746	          0x4989c5	                            mov r13, rax	      3417	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_49
0x4007749	            0xeb67	                           jmp 0x40077b2	      3417	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_49
0x400774b	          0x83f864	                           cmp eax, 0x64	      3418	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	CALL_51
0x400774e	            0x7510	                           jne 0x4007760	      3418	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	CALL_51
0x4007750	      0x41807d0174	                cmp byte [r13 + 1], 0x74	      3418	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	CALL_51
0x4007755	            0x7550	                           jne 0x40077a7	      3418	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	CALL_51
0x4007757	      0x41807d0200	                   cmp byte [r13 + 2], 0	      3418	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	CALL_51
0x400775c	            0x7415	                            je 0x4007773	      3418	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	CALL_51
0x400775e	            0xeb47	                           jmp 0x40077a7	      3418	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	CALL_51
0x4007760	          0x83f870	                           cmp eax, 0x70	      3418	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	CALL_51
0x4007763	            0x7542	                           jne 0x40077a7	      3418	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	CALL_51
0x4007765	      0x41807d0174	                cmp byte [r13 + 1], 0x74	      3418	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	CALL_51
0x400776a	            0x753b	                           jne 0x40077a7	      3418	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	CALL_51
0x400776c	      0x41807d0200	                   cmp byte [r13 + 2], 0	      3418	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	CALL_51
0x4007771	            0x7534	                           jne 0x40077a7	      3418	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	CALL_51
0x4007773	          0x4889df	                            mov rdi, rbx	      3420	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	CALL_52
0x4007776	      0xe8f5f6ffff	             call sym.d_unqualified_name	      3420	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	CALL_52
0x400777b	          0x4989c5	                            mov r13, rax	      3420	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	CALL_52
0x400777e	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      3421	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	IF_28	CALL_53
0x4007782	          0x803849	                    cmp byte [rax], 0x49	      3421	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	IF_28	CALL_53
0x4007785	            0x752b	                           jne 0x40077b2	      3421	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	IF_28	CALL_53
0x4007787	          0x4889df	                            mov rdi, rbx	      3422	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	IF_28	CALL_54
0x400778a	      0xe8d4130000	                call sym.d_template_args	      3422	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	IF_28	CALL_54
0x400778f	          0x4889c1	                            mov rcx, rax	      3422	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	IF_28	CALL_54
0x4007792	          0x4c89ea	                            mov rdx, r13	      3422	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	IF_28	CALL_54
0x4007795	      0xbe04000000	                              mov esi, 4	      3422	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	IF_28	CALL_54
0x400779a	          0x4889df	                            mov rdi, rbx	      3422	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	IF_28	CALL_54
0x400779d	      0xe8ee88ffff	                    call sym.d_make_comp	      3422	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	IF_28	CALL_54
0x40077a2	          0x4989c5	                            mov r13, rax	      3422	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	IF_28	CALL_54
0x40077a5	            0xeb0b	                           jmp 0x40077b2	      3422	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	IF_28	CALL_54
0x40077a7	          0x4889df	                            mov rdi, rbx	      3426	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_56
0x40077aa	      0xe898140000	                 call sym.d_expression_1	      3426	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_56
0x40077af	          0x4989c5	                            mov r13, rax	      3426	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_56
0x40077b2	          0x4c89e9	                            mov rcx, r13	      3428	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_57
0x40077b5	          0x4c89f2	                            mov rdx, r14	      3428	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_57
0x40077b8	      0xbe38000000	                           mov esi, 0x38	      3428	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_57
0x40077bd	          0x4889df	                            mov rdi, rbx	      3428	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_57
0x40077c0	      0xe8cb88ffff	                    call sym.d_make_comp	      3428	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_57
0x40077c5	          0x4889c1	                            mov rcx, rax	      3428	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_57
0x40077c8	          0x4c89e2	                            mov rdx, r12	      3428	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_57
0x40077cb	      0xbe37000000	                           mov esi, 0x37	      3428	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_57
0x40077d0	          0x4889df	                            mov rdi, rbx	      3428	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_57
0x40077d3	      0xe8b888ffff	                    call sym.d_make_comp	      3428	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_57
0x40077d8	      0xe99f020000	                           jmp 0x4007a7c	      3428	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_57
0x40077dd	          0x4d85ed	                           test r13, r13	      3439	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_29
0x40077e0	     0xf8499010000	                            je 0x400797f	      3439	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_29
0x40077e6	      0x41807d0071	                    cmp byte [r13], 0x71	      3441	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_17	IF_30	CALL_59
0x40077eb	            0x753d	                           jne 0x400782a	      3441	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_17	IF_30	CALL_59
0x40077ed	      0x41807d0175	                cmp byte [r13 + 1], 0x75	      3441	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_17	IF_30	CALL_59
0x40077f2	            0x7536	                           jne 0x400782a	      3441	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_17	IF_30	CALL_59
0x40077f4	      0x41807d0200	                   cmp byte [r13 + 2], 0	      3441	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_17	IF_30	CALL_59
0x40077f9	            0x752f	                           jne 0x400782a	      3441	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_17	IF_30	CALL_59
0x40077fb	          0x4889df	                            mov rdi, rbx	      3444	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_17	IF_30	CALL_60
0x40077fe	      0xe844140000	                 call sym.d_expression_1	      3444	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_17	IF_30	CALL_60
0x4007803	          0x4989c5	                            mov r13, rax	      3444	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_17	IF_30	CALL_60
0x4007806	          0x4889df	                            mov rdi, rbx	      3445	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_17	IF_30	CALL_61
0x4007809	      0xe839140000	                 call sym.d_expression_1	      3445	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_17	IF_30	CALL_61
0x400780e	          0x4989c6	                            mov r14, rax	      3445	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_17	IF_30	CALL_61
0x4007811	          0x4889df	                            mov rdi, rbx	      3446	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_17	IF_30	CALL_62
0x4007814	      0xe82e140000	                 call sym.d_expression_1	      3446	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_17	IF_30	CALL_62
0x4007819	          0x4889c1	                            mov rcx, rax	      3446	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_17	IF_30	CALL_62
0x400781c	          0x4885c0	                           test rax, rax	      3447	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_17	IF_30	IF_31
0x400781f	     0xf85e3000000	                           jne 0x4007908	      3447	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_17	IF_30	IF_31
0x4007825	      0xe95f010000	                           jmp 0x4007989	      3447	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_17	IF_30	IF_31
0x400782a	      0x410fb65500	                   movzx edx, byte [r13]	      3450	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_18	IF_32
0x400782f	          0x80fa66	                            cmp dl, 0x66	      3450	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_18	IF_32
0x4007832	            0x752f	                           jne 0x4007863	      3450	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_18	IF_32
0x4007834	          0x4889df	                            mov rdi, rbx	      3453	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_18	IF_32	CALL_63
0x4007837	      0xe8c8f3ffff	                call sym.d_operator_name	      3453	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_18	IF_32	CALL_63
0x400783c	          0x4989c5	                            mov r13, rax	      3453	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_18	IF_32	CALL_63
0x400783f	          0x4889df	                            mov rdi, rbx	      3454	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_18	IF_32	CALL_64
0x4007842	      0xe800140000	                 call sym.d_expression_1	      3454	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_18	IF_32	CALL_64
0x4007847	          0x4989c6	                            mov r14, rax	      3454	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_18	IF_32	CALL_64
0x400784a	          0x4889df	                            mov rdi, rbx	      3455	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_18	IF_32	CALL_65
0x400784d	      0xe8f5130000	                 call sym.d_expression_1	      3455	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_18	IF_32	CALL_65
0x4007852	          0x4889c1	                            mov rcx, rax	      3455	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_18	IF_32	CALL_65
0x4007855	          0x4885c0	                           test rax, rax	      3456	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_18	IF_32	IF_33
0x4007858	     0xf85aa000000	                           jne 0x4007908	      3456	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_18	IF_32	IF_33
0x400785e	      0xe930010000	                           jmp 0x4007993	      3456	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_18	IF_32	IF_33
0x4007863	      0xb800000000	                              mov eax, 0	      3486	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_23
0x4007868	          0x80fa6e	                            cmp dl, 0x6e	      3459	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34
0x400786b	     0xf850b020000	                           jne 0x4007a7c	      3459	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34
0x4007871	      0x410fb65501	               movzx edx, byte [r13 + 1]	      3462	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	IF_35
0x4007876	          0x80fa77	                            cmp dl, 0x77	      3462	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	IF_35
0x4007879	            0x7409	                            je 0x4007884	      3462	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	IF_35
0x400787b	          0x80fa61	                            cmp dl, 0x61	      3462	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	IF_35
0x400787e	     0xf85f8010000	                           jne 0x4007a7c	      3462	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	IF_35
0x4007884	      0xbe5f000000	                           mov esi, 0x5f	      3464	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	CALL_66
0x4007889	          0x4889df	                            mov rdi, rbx	      3464	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	CALL_66
0x400788c	      0xe8fd120000	                     call sym.d_exprlist	      3464	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	CALL_66
0x4007891	          0x4989c5	                            mov r13, rax	      3464	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	CALL_66
0x4007894	          0x4889df	                            mov rdi, rbx	      3465	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34
0x4007897	      0xe800000000	                          call 0x400789c	      3465	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34
0x400789c	          0x4989c6	                            mov r14, rax	      3465	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34
0x400789f	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      3466	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	IF_36	CALL_67
0x40078a3	           0xfb602	                   movzx eax, byte [rdx]	      3466	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	IF_36	CALL_67
0x40078a6	            0x3c45	                            cmp al, 0x45	      3466	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	IF_36	CALL_67
0x40078a8	            0x750f	                           jne 0x40078b9	      3466	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	IF_36	CALL_67
0x40078aa	        0x4883c201	                              add rdx, 1	      3468	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	IF_36	CALL_68
0x40078ae	        0x48895318	             mov qword [rbx + 0x18], rdx	      3468	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	IF_36	CALL_68
0x40078b2	      0xb900000000	                              mov ecx, 0	      3469	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	IF_36
0x40078b7	            0xeb4f	                           jmp 0x4007908	      3469	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	IF_36
0x40078b9	            0x3c70	                            cmp al, 0x70	      3471	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_20	IF_37	CALL_69
0x40078bb	            0x7529	                           jne 0x40078e6	      3471	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_20	IF_37	CALL_69
0x40078bd	      0xb800000000	                              mov eax, 0	      3483	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_22
0x40078c2	        0x807a0169	                cmp byte [rdx + 1], 0x69	      3472	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_20	IF_37	CALL_70
0x40078c6	     0xf85b0010000	                           jne 0x4007a7c	      3472	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_20	IF_37	CALL_70
0x40078cc	        0x4883c202	                              add rdx, 2	      3475	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_20	IF_37	CALL_71
0x40078d0	        0x48895318	             mov qword [rbx + 0x18], rdx	      3475	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_20	IF_37	CALL_71
0x40078d4	      0xbe45000000	                           mov esi, 0x45	      3476	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_20	IF_37	CALL_72
0x40078d9	          0x4889df	                            mov rdi, rbx	      3476	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_20	IF_37	CALL_72
0x40078dc	      0xe8ad120000	                     call sym.d_exprlist	      3476	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_20	IF_37	CALL_72
0x40078e1	          0x4889c1	                            mov rcx, rax	      3476	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_20	IF_37	CALL_72
0x40078e4	            0xeb22	                           jmp 0x4007908	      3476	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_20	IF_37	CALL_72
0x40078e6	            0x3c69	                            cmp al, 0x69	      3478	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_21	IF_38	CALL_73
0x40078e8	     0xf85af000000	                           jne 0x400799d	      3478	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_21	IF_38	CALL_73
0x40078ee	      0xb800000000	                              mov eax, 0	      3483	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_22
0x40078f3	        0x807a016c	                cmp byte [rdx + 1], 0x6c	      3479	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_21	IF_38	CALL_74
0x40078f7	     0xf857f010000	                           jne 0x4007a7c	      3479	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_21	IF_38	CALL_74
0x40078fd	          0x4889df	                            mov rdi, rbx	      3481	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_21	IF_38
0x4007900	      0xe842130000	                 call sym.d_expression_1	      3481	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_21	IF_38
0x4007905	          0x4889c1	                            mov rcx, rax	      3481	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_21	IF_38
0x4007908	          0x4c89f2	                            mov rdx, r14	      3487	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_76
0x400790b	      0xbe3b000000	                           mov esi, 0x3b	      3487	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_76
0x4007910	          0x4889df	                            mov rdi, rbx	      3487	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_76
0x4007913	      0xe87887ffff	                    call sym.d_make_comp	      3487	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_76
0x4007918	          0x4889c1	                            mov rcx, rax	      3487	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_76
0x400791b	          0x4c89ea	                            mov rdx, r13	      3487	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_76
0x400791e	      0xbe3a000000	                           mov esi, 0x3a	      3487	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_76
0x4007923	          0x4889df	                            mov rdi, rbx	      3487	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_76
0x4007926	      0xe86587ffff	                    call sym.d_make_comp	      3487	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_76
0x400792b	          0x4889c1	                            mov rcx, rax	      3487	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_76
0x400792e	          0x4c89e2	                            mov rdx, r12	      3487	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_76
0x4007931	      0xbe39000000	                           mov esi, 0x39	      3487	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_76
0x4007936	          0x4889df	                            mov rdi, rbx	      3487	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_76
0x4007939	      0xe85287ffff	                    call sym.d_make_comp	      3487	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_76
0x400793e	      0xe939010000	                           jmp 0x4007a7c	      3487	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_76
0x4007943	      0xb800000000	                              mov eax, 0	      3300	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	ELSE_6	IF_8
0x4007948	      0xe92f010000	                           jmp 0x4007a7c	      3300	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	ELSE_6	IF_8
0x400794d	      0xb800000000	                              mov eax, 0	      3318	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	IF_11
0x4007952	      0xe925010000	                           jmp 0x4007a7c	      3318	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	IF_11
0x4007957	      0xb800000000	                              mov eax, 0	      3333	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	IF_15
0x400795c	      0xe91b010000	                           jmp 0x4007a7c	      3333	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	IF_15
0x4007961	      0xb800000000	                              mov eax, 0	      3346	cp-demangle.c	FUNCTION_51	ELSE_10	IF_16
0x4007966	      0xe911010000	                           jmp 0x4007a7c	      3346	cp-demangle.c	FUNCTION_51	ELSE_10	IF_16
0x400796b	      0xb800000000	                              mov eax, 0	      3496	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2
0x4007970	      0xe907010000	                           jmp 0x4007a7c	      3496	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2
0x4007975	      0xb800000000	                              mov eax, 0	      3408	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_23
0x400797a	      0xe9fd000000	                           jmp 0x4007a7c	      3408	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_23
0x400797f	      0xb800000000	                              mov eax, 0	      3440	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_29
0x4007984	      0xe9f3000000	                           jmp 0x4007a7c	      3440	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_29
0x4007989	      0xb800000000	                              mov eax, 0	      3448	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_17	IF_30	IF_31
0x400798e	      0xe9e9000000	                           jmp 0x4007a7c	      3448	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_17	IF_30	IF_31
0x4007993	      0xb800000000	                              mov eax, 0	      3457	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_18	IF_32	IF_33
0x4007998	      0xe9df000000	                           jmp 0x4007a7c	      3457	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_18	IF_32	IF_33
0x400799d	      0xb800000000	                              mov eax, 0	      3483	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_22
0x40079a2	      0xe9d5000000	                           jmp 0x4007a7c	      3483	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_22
0x40079a7	      0xb800000000	                              mov eax, 0	      3360	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_1
0x40079ac	      0xe9cb000000	                           jmp 0x4007a7c	      3360	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_1
0x40079b1	      0xb800000000	                              mov eax, 0	      3360	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_1
0x40079b6	      0xe9c1000000	                           jmp 0x4007a7c	      3360	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_1
0x40079bb	      0xb800000000	                              mov eax, 0	      3360	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_1
0x40079c0	      0xe9b7000000	                           jmp 0x4007a7c	      3360	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_1
0x40079c5	        0x418b0424	                    mov eax, dword [r12]	      3357	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_1
0x40079c9	          0x83f832	                           cmp eax, 0x32	      3357	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_1
0x40079cc	     0xf8417fcffff	                            je 0x40075e9	      3357	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_1
0x40079d2	          0x83f833	                           cmp eax, 0x33	      3357	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_1
0x40079d5	     0xf8457fcffff	                            je 0x4007632	      3357	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_1
0x40079db	          0x83f831	                           cmp eax, 0x31	      3357	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_1
0x40079de	            0x75c7	                           jne 0x40079a7	      3357	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_1
0x40079e0	      0xe9f4fbffff	                           jmp 0x40075d9	      3357	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_1
0x40079e5	      0x41833c2433	                   cmp dword [r12], 0x33	      3387	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_20
0x40079ea	            0x743e	                            je 0x4007a2a	      3387	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_20
0x40079ec	    0x41be00000000	                             mov r14d, 0	      3380	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2
0x40079f2	      0xe9b1fcffff	                           jmp 0x40076a8	      3380	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2
0x40079f7	      0x41833c2433	                   cmp dword [r12], 0x33	      3387	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_20
0x40079fc	            0x7444	                            je 0x4007a42	      3387	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_20
0x40079fe	    0x41be00000000	                             mov r14d, 0	      3387	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_20
0x4007a04	      0xe980fcffff	                           jmp 0x4007689	      3387	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_20
0x4007a09	        0x418b0424	                    mov eax, dword [r12]	      3357	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_1
0x4007a0d	          0x83f832	                           cmp eax, 0x32	      3357	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_1
0x4007a10	     0xf84d3fbffff	                            je 0x40075e9	      3357	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_1
0x4007a16	          0x83f833	                           cmp eax, 0x33	      3357	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_1
0x4007a19	     0xf8413fcffff	                            je 0x4007632	      3357	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_1
0x4007a1f	          0x83f831	                           cmp eax, 0x31	      3357	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_1
0x4007a22	     0xf84b1fbffff	                            je 0x40075d9	      3357	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_1
0x4007a28	            0xeb87	                           jmp 0x40079b1	      3357	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_1
0x4007a2a	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      3388	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_20	CALL_38
0x4007a2e	    0x41be00000000	                             mov r14d, 0	      3387	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_20
0x4007a34	          0x80385f	                    cmp byte [rax], 0x5f	      3387	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_20
0x4007a37	     0xf856bfcffff	                           jne 0x40076a8	      3387	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_20
0x4007a3d	      0xe930fcffff	                           jmp 0x4007672	      3387	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_20
0x4007a42	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      3388	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_20	CALL_38
0x4007a46	          0x80385f	                    cmp byte [rax], 0x5f	      3387	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_20
0x4007a49	     0xf8423fcffff	                            je 0x4007672	      3387	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_20
0x4007a4f	    0x41be00000000	                             mov r14d, 0	      3387	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_20
0x4007a55	      0xe92ffcffff	                           jmp 0x4007689	      3387	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_20
0x4007a5a	            0x8b00	                    mov eax, dword [rax]	      3357	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_1
0x4007a5c	          0x83f832	                           cmp eax, 0x32	      3357	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_1
0x4007a5f	     0xf847efbffff	                            je 0x40075e3	      3357	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_1
0x4007a65	          0x83f833	                           cmp eax, 0x33	      3357	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_1
0x4007a68	     0xf8477ffffff	                            je 0x40079e5	      3357	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_1
0x4007a6e	          0x83f831	                           cmp eax, 0x31	      3357	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_1
0x4007a71	     0xf8544ffffff	                           jne 0x40079bb	      3357	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_1
0x4007a77	      0xe957fbffff	                           jmp 0x40075d3	      3357	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_1
0x4007a7c	          0x896b4c	             mov dword [rbx + 0x4c], ebp	      3509	cp-demangle.c	FUNCTION_52
0x4007a7f	              0x5b	                                 pop rbx	      3511	cp-demangle.c	FUNCTION_52
0x4007a80	              0x5d	                                 pop rbp	      3511	cp-demangle.c	FUNCTION_52
0x4007a81	            0x415c	                                 pop r12	      3511	cp-demangle.c	FUNCTION_52
0x4007a83	            0x415d	                                 pop r13	      3511	cp-demangle.c	FUNCTION_52
0x4007a85	            0x415e	                                 pop r14	      3511	cp-demangle.c	FUNCTION_52
0x4007a87	              0xc3	                                     ret	      3511	cp-demangle.c	FUNCTION_52
is_gnu_v3_mangled_dtor	SWITCH,0:CALL,1:IF,1:WHILE,0:ELSE,0:DO,0:FOR,0:functions,0	17
0x4009c40	        0x4883ec18	                           sub rsp, 0x18	      6587	cp-demangle.c	FUNCTION_106
0x4009c44	    0x64488b042528	                mov rax, qword fs:[0x28]	      6587	cp-demangle.c	FUNCTION_106
0x4009c4d	      0x4889442408	                mov qword [rsp + 8], rax	      6587	cp-demangle.c	FUNCTION_106
0x4009c52	            0x31c0	                            xor eax, eax	      6587	cp-demangle.c	FUNCTION_106
0x4009c54	      0x488d542404	                      lea rdx, [rsp + 4]	      6591	cp-demangle.c	FUNCTION_106	IF_1	CALL_1
0x4009c59	          0x4889e6	                            mov rsi, rsp	      6591	cp-demangle.c	FUNCTION_106	IF_1	CALL_1
0x4009c5c	      0xe8effdffff	                call sym.is_ctor_or_dtor	      6591	cp-demangle.c	FUNCTION_106	IF_1	CALL_1
0x4009c61	      0xba00000000	                              mov edx, 0	      6592	cp-demangle.c	FUNCTION_106	IF_1
0x4009c66	            0x85c0	                           test eax, eax	      6591	cp-demangle.c	FUNCTION_106	IF_1	CALL_1
0x4009c68	       0xf45542404	             cmovne edx, dword [rsp + 4]	      6593	cp-demangle.c	FUNCTION_106
0x4009c6d	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      6594	cp-demangle.c	FUNCTION_106
0x4009c72	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      6594	cp-demangle.c	FUNCTION_106
0x4009c7b	            0x7405	                            je 0x4009c82	      6594	cp-demangle.c	FUNCTION_106
0x4009c7d	      0xe800000000	                          call 0x4009c82	      6594	cp-demangle.c	FUNCTION_106
0x4009c82	            0x89d0	                            mov eax, edx	      6594	cp-demangle.c	FUNCTION_106
0x4009c84	        0x4883c418	                           add rsp, 0x18	      6594	cp-demangle.c	FUNCTION_106
0x4009c88	              0xc3	                                     ret	      6594	cp-demangle.c	FUNCTION_106
d_template_param	SWITCH,0:CALL,3:IF,2:WHILE,0:ELSE,0:DO,0:FOR,0:functions,0	25
0x4000432	        0x488b5718	            mov rdx, qword [rdi + 0x18] 	      3092	cp-demangle.c	FUNCTION_45	IF_1	CALL_1
0x4000436	      0xb800000000	                              mov eax, 0	      3093	cp-demangle.c	FUNCTION_45	IF_1
0x400043b	          0x803a54	                    cmp byte [rdx], 0x54	      3092	cp-demangle.c	FUNCTION_45	IF_1	CALL_1
0x400043e	            0x753b	                           jne 0x400047b	      3092	cp-demangle.c	FUNCTION_45	IF_1	CALL_1
0x4000440	              0x55	                                push rbp	      3089	cp-demangle.c	FUNCTION_45
0x4000441	              0x53	                                push rbx	      3089	cp-demangle.c	FUNCTION_45
0x4000442	          0x4889fb	                            mov rbx, rdi	      3089	cp-demangle.c	FUNCTION_45
0x4000445	        0x4883c201	                              add rdx, 1	      3092	cp-demangle.c	FUNCTION_45	IF_1	CALL_1
0x4000449	        0x48895718	             mov qword [rdi + 0x18], rdx	      3092	cp-demangle.c	FUNCTION_45	IF_1	CALL_1
0x400044d	      0xe88cffffff	               call sym.d_compact_number	      3095	cp-demangle.c	FUNCTION_45	CALL_2
0x4000452	            0x89c5	                            mov ebp, eax	      3095	cp-demangle.c	FUNCTION_45	CALL_2
0x4000454	            0x85c0	                           test eax, eax	      3096	cp-demangle.c	FUNCTION_45	IF_2
0x4000456	            0x781c	                            js 0x4000474	      3096	cp-demangle.c	FUNCTION_45	IF_2
0x4000458	          0x4889df	                            mov rdi, rbx	      1170	cp-demangle.c	FUNCTION_13	CALL_1
0x400045b	      0xe808fcffff	                   call sym.d_make_empty	      1170	cp-demangle.c	FUNCTION_13	CALL_1
0x4000460	          0x4885c0	                           test rax, rax	      1171	cp-demangle.c	FUNCTION_13	IF_1
0x4000463	            0x7414	                            je 0x4000479	      1171	cp-demangle.c	FUNCTION_13	IF_1
0x4000465	    0xc70005000000	                      mov dword [rax], 5	      1173	cp-demangle.c	FUNCTION_13	IF_1
0x400046b	          0x4863ed	                         movsxd rbp, ebp	      1174	cp-demangle.c	FUNCTION_13	IF_1
0x400046e	        0x48896808	                mov qword [rax + 8], rbp	      1174	cp-demangle.c	FUNCTION_13	IF_1
0x4000472	            0xeb05	                           jmp 0x4000479	      1174	cp-demangle.c	FUNCTION_13	IF_1
0x4000474	      0xb800000000	                              mov eax, 0	      3097	cp-demangle.c	FUNCTION_45	IF_2
0x4000479	              0x5b	                                 pop rbx	      3100	cp-demangle.c	FUNCTION_45
0x400047a	              0x5d	                                 pop rbp	      3100	cp-demangle.c	FUNCTION_45
0x400047b	            0xf3c3	                                     ret	      3100	cp-demangle.c	FUNCTION_45
d_make_comp	SWITCH,1:CALL,1:IF,4:WHILE,0:ELSE,0:DO,0:FOR,0:functions,0	38
0x4000090	            0x4154	                                push r12	       947	cp-demangle.c	FUNCTION_4
0x4000092	              0x55	                                push rbp	       947	cp-demangle.c	FUNCTION_4
0x4000093	              0x53	                                push rbx	       947	cp-demangle.c	FUNCTION_4
0x4000094	          0x83fe4f	                           cmp esi, 0x4f	       953	cp-demangle.c	FUNCTION_4	SWITCH_1
0x4000097	            0x773f	                            ja 0x40000d8	       953	cp-demangle.c	FUNCTION_4	SWITCH_1
0x4000099	            0x89f0	                            mov eax, esi	       953	cp-demangle.c	FUNCTION_4	SWITCH_1
0x400009b	    0xff24c5000000	                       jmp qword [rax*8]	       953	cp-demangle.c	FUNCTION_4	SWITCH_1
0x40000a2	          0x4885d2	                           test rdx, rdx	       974	cp-demangle.c	FUNCTION_4	SWITCH_1	IF_1
0x40000a5	            0x7438	                            je 0x40000df	       974	cp-demangle.c	FUNCTION_4	SWITCH_1	IF_1
0x40000a7	          0x4885c9	                           test rcx, rcx	       974	cp-demangle.c	FUNCTION_4	SWITCH_1	IF_1
0x40000aa	            0x750e	                           jne 0x40000ba	       974	cp-demangle.c	FUNCTION_4	SWITCH_1	IF_1
0x40000ac	            0xeb31	                           jmp 0x40000df	       974	cp-demangle.c	FUNCTION_4	SWITCH_1	IF_1
0x40000ae	          0x4885d2	                           test rdx, rdx	      1010	cp-demangle.c	FUNCTION_4	SWITCH_1	IF_2
0x40000b1	            0x7507	                           jne 0x40000ba	      1010	cp-demangle.c	FUNCTION_4	SWITCH_1	IF_2
0x40000b3	            0xeb31	                           jmp 0x40000e6	      1010	cp-demangle.c	FUNCTION_4	SWITCH_1	IF_2
0x40000b5	          0x4885c9	                           test rcx, rcx	      1018	cp-demangle.c	FUNCTION_4	SWITCH_1	IF_3
0x40000b8	            0x7433	                            je 0x40000ed	      1018	cp-demangle.c	FUNCTION_4	SWITCH_1	IF_3
0x40000ba	          0x4989cc	                            mov r12, rcx	      1018	cp-demangle.c	FUNCTION_4	SWITCH_1	IF_3
0x40000bd	          0x4889d5	                            mov rbp, rdx	      1018	cp-demangle.c	FUNCTION_4	SWITCH_1	IF_3
0x40000c0	            0x89f3	                            mov ebx, esi	      1018	cp-demangle.c	FUNCTION_4	SWITCH_1	IF_3
0x40000c2	      0xe8a1ffffff	                   call sym.d_make_empty	      1038	cp-demangle.c	FUNCTION_4	CALL_1
0x40000c7	          0x4885c0	                           test rax, rax	      1039	cp-demangle.c	FUNCTION_4	IF_4
0x40000ca	            0x7426	                            je 0x40000f2	      1039	cp-demangle.c	FUNCTION_4	IF_4
0x40000cc	            0x8918	                    mov dword [rax], ebx	      1041	cp-demangle.c	FUNCTION_4	IF_4
0x40000ce	        0x48896808	                mov qword [rax + 8], rbp	      1042	cp-demangle.c	FUNCTION_4	IF_4
0x40000d2	        0x4c896010	             mov qword [rax + 0x10], r12	      1043	cp-demangle.c	FUNCTION_4	IF_4
0x40000d6	            0xeb1a	                           jmp 0x40000f2	      1043	cp-demangle.c	FUNCTION_4	IF_4
0x40000d8	      0xb800000000	                              mov eax, 0	      1035	cp-demangle.c	FUNCTION_4	SWITCH_1
0x40000dd	            0xeb13	                           jmp 0x40000f2	      1035	cp-demangle.c	FUNCTION_4	SWITCH_1
0x40000df	      0xb800000000	                              mov eax, 0	       975	cp-demangle.c	FUNCTION_4	SWITCH_1	IF_1
0x40000e4	            0xeb0c	                           jmp 0x40000f2	       975	cp-demangle.c	FUNCTION_4	SWITCH_1	IF_1
0x40000e6	      0xb800000000	                              mov eax, 0	      1011	cp-demangle.c	FUNCTION_4	SWITCH_1	IF_2
0x40000eb	            0xeb05	                           jmp 0x40000f2	      1011	cp-demangle.c	FUNCTION_4	SWITCH_1	IF_2
0x40000ed	      0xb800000000	                              mov eax, 0	      1019	cp-demangle.c	FUNCTION_4	SWITCH_1	IF_3
0x40000f2	              0x5b	                                 pop rbx	      1046	cp-demangle.c	FUNCTION_4
0x40000f3	              0x5d	                                 pop rbp	      1046	cp-demangle.c	FUNCTION_4
0x40000f4	            0x415c	                                 pop r12	      1046	cp-demangle.c	FUNCTION_4
0x40000f6	              0xc3	                                     ret	      1046	cp-demangle.c	FUNCTION_4
d_add_substitution	SWITCH,0:CALL,0:IF,2:WHILE,0:ELSE,0:DO,0:FOR,0:functions,0	14
0x400051d	          0x4885f6	                           test rsi, rsi	      3782	cp-demangle.c	FUNCTION_59	IF_1
0x4000520	            0x7422	                            je 0x4000544	      3782	cp-demangle.c	FUNCTION_59	IF_1
0x4000522	          0x8b5738	            mov edx, dword [rdi + 0x38] 	      3784	cp-demangle.c	FUNCTION_59	IF_2
0x4000525	      0xb800000000	                              mov eax, 0	      3785	cp-demangle.c	FUNCTION_59	IF_2
0x400052a	          0x3b573c	            cmp edx, dword [rdi + 0x3c] 	      3784	cp-demangle.c	FUNCTION_59	IF_2
0x400052d	            0x7d1a	                           jge 0x4000549	      3784	cp-demangle.c	FUNCTION_59	IF_2
0x400052f	          0x4863d2	                         movsxd rdx, edx	      3786	cp-demangle.c	FUNCTION_59
0x4000532	        0x488b4730	            mov rax, qword [rdi + 0x30] 	      3786	cp-demangle.c	FUNCTION_59
0x4000536	        0x488934d0	            mov qword [rax + rdx*8], rsi	      3786	cp-demangle.c	FUNCTION_59
0x400053a	        0x83473801	               add dword [rdi + 0x38], 1	      3787	cp-demangle.c	FUNCTION_59
0x400053e	      0xb801000000	                              mov eax, 1	      3788	cp-demangle.c	FUNCTION_59
0x4000543	              0xc3	                                     ret	      3788	cp-demangle.c	FUNCTION_59
0x4000544	      0xb800000000	                              mov eax, 0	      3783	cp-demangle.c	FUNCTION_59	IF_1
0x4000549	            0xf3c3	                                     ret	      3789	cp-demangle.c	FUNCTION_59
d_make_builtin_type	SWITCH,0:CALL,1:IF,2:WHILE,0:ELSE,0:DO,0:FOR,0:functions,0	14
0x40000f7	          0x4885f6	                           test rsi, rsi	      1080	cp-demangle.c	FUNCTION_7	IF_1
0x40000fa	            0x741a	                            je 0x4000116	      1080	cp-demangle.c	FUNCTION_7	IF_1
0x40000fc	              0x53	                                push rbx	      1077	cp-demangle.c	FUNCTION_7
0x40000fd	          0x4889f3	                            mov rbx, rsi	      1077	cp-demangle.c	FUNCTION_7
0x4000100	      0xe863ffffff	                   call sym.d_make_empty	      1082	cp-demangle.c	FUNCTION_7	CALL_1
0x4000105	          0x4885c0	                           test rax, rax	      1083	cp-demangle.c	FUNCTION_7	IF_2
0x4000108	            0x7412	                            je 0x400011c	      1083	cp-demangle.c	FUNCTION_7	IF_2
0x400010a	    0xc70027000000	                   mov dword [rax], 0x27	      1085	cp-demangle.c	FUNCTION_7	IF_2
0x4000110	        0x48895808	                mov qword [rax + 8], rbx	      1086	cp-demangle.c	FUNCTION_7	IF_2
0x4000114	            0xeb06	                           jmp 0x400011c	      1086	cp-demangle.c	FUNCTION_7	IF_2
0x4000116	      0xb800000000	                              mov eax, 0	      1081	cp-demangle.c	FUNCTION_7	IF_1
0x400011b	              0xc3	                                     ret	      1081	cp-demangle.c	FUNCTION_7	IF_1
0x400011c	              0x5b	                                 pop rbx	      1089	cp-demangle.c	FUNCTION_7
0x400011d	              0xc3	                                     ret	      1089	cp-demangle.c	FUNCTION_7
d_make_name	SWITCH,0:CALL,1:IF,1:WHILE,0:ELSE,0:DO,0:FOR,0:functions,0	18
0x400603a	            0x4154	                                push r12	      1063	cp-demangle.c	FUNCTION_6
0x400603c	              0x55	                                push rbp	      1063	cp-demangle.c	FUNCTION_6
0x400603d	              0x53	                                push rbx	      1063	cp-demangle.c	FUNCTION_6
0x400603e	          0x4889f5	                            mov rbp, rsi	      1063	cp-demangle.c	FUNCTION_6
0x4006041	          0x4189d4	                           mov r12d, edx	      1063	cp-demangle.c	FUNCTION_6
0x4006044	      0xe81fa0ffff	                   call sym.d_make_empty	      1066	cp-demangle.c	FUNCTION_6	CALL_1
0x4006049	          0x4889c3	                            mov rbx, rax	      1066	cp-demangle.c	FUNCTION_6	CALL_1
0x400604c	          0x4489e2	                           mov edx, r12d	      1067	cp-demangle.c	FUNCTION_6	IF_1
0x400604f	          0x4889ee	                            mov rsi, rbp	      1067	cp-demangle.c	FUNCTION_6	IF_1
0x4006052	          0x4889c7	                            mov rdi, rax	      1067	cp-demangle.c	FUNCTION_6	IF_1
0x4006055	      0xe800000000	                          call 0x400605a	      1067	cp-demangle.c	FUNCTION_6	IF_1
0x400605a	            0x85c0	                           test eax, eax	      1067	cp-demangle.c	FUNCTION_6	IF_1
0x400605c	      0xb800000000	                              mov eax, 0	      1069	cp-demangle.c	FUNCTION_6
0x4006061	        0x480f45c3	                         cmovne rax, rbx	      1069	cp-demangle.c	FUNCTION_6
0x4006065	              0x5b	                                 pop rbx	      1070	cp-demangle.c	FUNCTION_6
0x4006066	              0x5d	                                 pop rbp	      1070	cp-demangle.c	FUNCTION_6
0x4006067	            0x415c	                                 pop r12	      1070	cp-demangle.c	FUNCTION_6
0x4006069	              0xc3	                                     ret	      1070	cp-demangle.c	FUNCTION_6
next_is_type_qual	SWITCH,0:CALL,2:IF,3:WHILE,0:ELSE,0:DO,0:FOR,0:functions,0	22
0x400034c	        0x488b7718	            mov rsi, qword [rdi + 0x18] 	      2290	cp-demangle.c	FUNCTION_34	CALL_1
0x4000350	           0xfb60e	                   movzx ecx, byte [rsi]	      2290	cp-demangle.c	FUNCTION_34	CALL_1
0x4000353	          0x8d51b5	                   lea edx, [rcx - 0x4b]	      2291	cp-demangle.c	FUNCTION_34	IF_1
0x4000356	          0x80fa27	                            cmp dl, 0x27	      2291	cp-demangle.c	FUNCTION_34	IF_1
0x4000359	            0x7715	                            ja 0x4000370	      2291	cp-demangle.c	FUNCTION_34	IF_1
0x400035b	      0xb801000000	                              mov eax, 1	      2292	cp-demangle.c	FUNCTION_34	IF_1
0x4000360	    0x48bf01080000	                movabs rdi, 0x8000000801	      2291	cp-demangle.c	FUNCTION_34	IF_1
0x400036a	        0x480fa3d7	                             bt rdi, rdx	      2291	cp-demangle.c	FUNCTION_34	IF_1
0x400036e	            0x7224	                            jb 0x4000394	      2291	cp-demangle.c	FUNCTION_34	IF_1
0x4000370	      0xb800000000	                              mov eax, 0	      2299	cp-demangle.c	FUNCTION_34
0x4000375	          0x80f944	                            cmp cl, 0x44	      2293	cp-demangle.c	FUNCTION_34	IF_2
0x4000378	            0x751a	                           jne 0x4000394	      2293	cp-demangle.c	FUNCTION_34	IF_2
0x400037a	         0xfb65601	               movzx edx, byte [rsi + 1]	      2295	cp-demangle.c	FUNCTION_34	IF_2	CALL_2
0x400037e	          0x8d4289	                   lea eax, [rdx - 0x77]	      2292	cp-demangle.c	FUNCTION_34	IF_1
0x4000381	            0x3c01	                               cmp al, 1	      2292	cp-demangle.c	FUNCTION_34	IF_1
0x4000383	           0xf96c1	                                setbe cl	      2292	cp-demangle.c	FUNCTION_34	IF_1
0x4000386	          0x83e2df	                     and edx, 0xffffffdf	      2292	cp-demangle.c	FUNCTION_34	IF_1
0x4000389	          0x80fa4f	                            cmp dl, 0x4f	      2292	cp-demangle.c	FUNCTION_34	IF_1
0x400038c	           0xf94c0	                                 sete al	      2292	cp-demangle.c	FUNCTION_34	IF_1
0x400038f	             0x9c8	                             or eax, ecx	      2292	cp-demangle.c	FUNCTION_34	IF_1
0x4000391	           0xfb6c0	                           movzx eax, al	      2292	cp-demangle.c	FUNCTION_34	IF_1
0x4000394	            0xf3c3	                                     ret	      2300	cp-demangle.c	FUNCTION_34
d_template_args_1	SWITCH,0:CALL,7:IF,4:WHILE,1:ELSE,0:DO,0:FOR,0:functions,0	80
0x4008a4b	            0x4154	                                push r12	      3119	cp-demangle.c	FUNCTION_47
0x4008a4d	              0x55	                                push rbp	      3119	cp-demangle.c	FUNCTION_47
0x4008a4e	              0x53	                                push rbx	      3119	cp-demangle.c	FUNCTION_47
0x4008a4f	        0x4883ec10	                           sub rsp, 0x10	      3119	cp-demangle.c	FUNCTION_47
0x4008a53	          0x4889fb	                            mov rbx, rdi	      3119	cp-demangle.c	FUNCTION_47
0x4008a56	    0x64488b042528	                mov rax, qword fs:[0x28]	      3119	cp-demangle.c	FUNCTION_47
0x4008a5f	      0x4889442408	                mov qword [rsp + 8], rax	      3119	cp-demangle.c	FUNCTION_47
0x4008a64	            0x31c0	                            xor eax, eax	      3119	cp-demangle.c	FUNCTION_47
0x4008a66	        0x4c8b6740	            mov r12, qword [rdi + 0x40] 	      3127	cp-demangle.c	FUNCTION_47
0x4008a6a	        0x488b4718	            mov rax, qword [rdi + 0x18] 	      3129	cp-demangle.c	FUNCTION_47	IF_1	CALL_1
0x4008a6e	          0x803845	                    cmp byte [rax], 0x45	      3129	cp-demangle.c	FUNCTION_47	IF_1	CALL_1
0x4008a71	            0x7521	                           jne 0x4008a94	      3129	cp-demangle.c	FUNCTION_47	IF_1	CALL_1
0x4008a73	        0x4883c001	                              add rax, 1	      3132	cp-demangle.c	FUNCTION_47	IF_1	CALL_2
0x4008a77	        0x48894718	             mov qword [rdi + 0x18], rax	      3132	cp-demangle.c	FUNCTION_47	IF_1	CALL_2
0x4008a7b	      0xb900000000	                              mov ecx, 0	      3133	cp-demangle.c	FUNCTION_47	IF_1	CALL_3
0x4008a80	      0xba00000000	                              mov edx, 0	      3133	cp-demangle.c	FUNCTION_47	IF_1	CALL_3
0x4008a85	      0xbe2f000000	                           mov esi, 0x2f	      3133	cp-demangle.c	FUNCTION_47	IF_1	CALL_3
0x4008a8a	      0xe80176ffff	                    call sym.d_make_comp	      3133	cp-demangle.c	FUNCTION_47	IF_1	CALL_3
0x4008a8f	      0xe9b1000000	                           jmp 0x4008b45	      3133	cp-demangle.c	FUNCTION_47	IF_1	CALL_3
0x4008a94	    0x48c704240000	                      mov qword [rsp], 0	      3136	cp-demangle.c	FUNCTION_47
0x4008a9c	          0x4889e5	                            mov rbp, rsp	      3137	cp-demangle.c	FUNCTION_47
0x4008a9f	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      3173	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_1
0x4008aa3	           0xfb602	                   movzx eax, byte [rdx]	      3173	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_1
0x4008aa6	            0x3c4c	                            cmp al, 0x4c	      3173	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_1
0x4008aa8	            0x7434	                            je 0x4008ade	      3173	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_1
0x4008aaa	            0x3c4c	                            cmp al, 0x4c	      3173	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_1
0x4008aac	            0x7f09	                            jg 0x4008ab7	      3173	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_1
0x4008aae	          0x83e849	                           sub eax, 0x49	      3173	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_1
0x4008ab1	            0x3c01	                               cmp al, 1	      3173	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_1
0x4008ab3	            0x7633	                           jbe 0x4008ae8	      3173	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_1
0x4008ab5	            0xeb3b	                           jmp 0x4008af2	      3173	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_1
0x4008ab7	            0x3c58	                            cmp al, 0x58	      3173	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_1
0x4008ab9	            0x7537	                           jne 0x4008af2	      3173	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_1
0x4008abb	        0x4883c201	                              add rdx, 1	      3176	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_2
0x4008abf	        0x48895318	             mov qword [rbx + 0x18], rdx	      3176	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_2
0x4008ac3	          0x4889df	                            mov rdi, rbx	      3177	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_3
0x4008ac6	      0xe883e8ffff	                   call sym.d_expression	      3177	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_3
0x4008acb	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      3178	cp-demangle.c	FUNCTION_48	SWITCH_1	IF_1	CALL_4
0x4008acf	          0x803a45	                    cmp byte [rdx], 0x45	      3178	cp-demangle.c	FUNCTION_48	SWITCH_1	IF_1	CALL_4
0x4008ad2	            0x756c	                           jne 0x4008b40	      3178	cp-demangle.c	FUNCTION_48	SWITCH_1	IF_1	CALL_4
0x4008ad4	        0x4883c201	                              add rdx, 1	      3178	cp-demangle.c	FUNCTION_48	SWITCH_1	IF_1	CALL_4
0x4008ad8	        0x48895318	             mov qword [rbx + 0x18], rdx	      3178	cp-demangle.c	FUNCTION_48	SWITCH_1	IF_1	CALL_4
0x4008adc	            0xeb1c	                           jmp 0x4008afa	      3178	cp-demangle.c	FUNCTION_48	SWITCH_1	IF_1	CALL_4
0x4008ade	          0x4889df	                            mov rdi, rbx	      3183	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_5
0x4008ae1	      0xe85cfeffff	                 call sym.d_expr_primary	      3183	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_5
0x4008ae6	            0xeb12	                           jmp 0x4008afa	      3183	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_5
0x4008ae8	          0x4889df	                            mov rdi, rbx	      3188	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_6
0x4008aeb	      0xe873000000	                call sym.d_template_args	      3188	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_6
0x4008af0	            0xeb08	                           jmp 0x4008afa	      3188	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_6
0x4008af2	          0x4889df	                            mov rdi, rbx	      3191	cp-demangle.c	FUNCTION_48	SWITCH_1
0x4008af5	      0xe800000000	                          call 0x4008afa	      3191	cp-demangle.c	FUNCTION_48	SWITCH_1
0x4008afa	          0x4885c0	                           test rax, rax	      3143	cp-demangle.c	FUNCTION_47	WHILE_1	IF_2
0x4008afd	            0x7446	                            je 0x4008b45	      3143	cp-demangle.c	FUNCTION_47	WHILE_1	IF_2
0x4008aff	      0xb900000000	                              mov ecx, 0	      3146	cp-demangle.c	FUNCTION_47	WHILE_1	CALL_5
0x4008b04	          0x4889c2	                            mov rdx, rax	      3146	cp-demangle.c	FUNCTION_47	WHILE_1	CALL_5
0x4008b07	      0xbe2f000000	                           mov esi, 0x2f	      3146	cp-demangle.c	FUNCTION_47	WHILE_1	CALL_5
0x4008b0c	          0x4889df	                            mov rdi, rbx	      3146	cp-demangle.c	FUNCTION_47	WHILE_1	CALL_5
0x4008b0f	      0xe87c75ffff	                    call sym.d_make_comp	      3146	cp-demangle.c	FUNCTION_47	WHILE_1	CALL_5
0x4008b14	        0x48894500	                    mov qword [rbp], rax	      3146	cp-demangle.c	FUNCTION_47	WHILE_1	CALL_5
0x4008b18	          0x4885c0	                           test rax, rax	      3147	cp-demangle.c	FUNCTION_47	WHILE_1	IF_3
0x4008b1b	            0x7428	                            je 0x4008b45	      3147	cp-demangle.c	FUNCTION_47	WHILE_1	IF_3
0x4008b1d	        0x488d6810	                   lea rbp, [rax + 0x10]	      3149	cp-demangle.c	FUNCTION_47	WHILE_1
0x4008b21	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      3151	cp-demangle.c	FUNCTION_47	WHILE_1	IF_4	CALL_6
0x4008b25	          0x803845	                    cmp byte [rax], 0x45	      3151	cp-demangle.c	FUNCTION_47	WHILE_1	IF_4	CALL_6
0x4008b28	     0xf8571ffffff	                           jne 0x4008a9f	      3151	cp-demangle.c	FUNCTION_47	WHILE_1	IF_4	CALL_6
0x4008b2e	        0x4883c001	                              add rax, 1	      3153	cp-demangle.c	FUNCTION_47	WHILE_1	IF_4	CALL_7
0x4008b32	        0x48894318	             mov qword [rbx + 0x18], rax	      3153	cp-demangle.c	FUNCTION_47	WHILE_1	IF_4	CALL_7
0x4008b36	        0x4c896340	             mov qword [rbx + 0x40], r12	      3158	cp-demangle.c	FUNCTION_47
0x4008b3a	        0x488b0424	                    mov rax, qword [rsp]	      3160	cp-demangle.c	FUNCTION_47
0x4008b3e	            0xeb05	                           jmp 0x4008b45	      3160	cp-demangle.c	FUNCTION_47
0x4008b40	      0xb800000000	                              mov eax, 0	      3144	cp-demangle.c	FUNCTION_47	WHILE_1	IF_2
0x4008b45	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      3161	cp-demangle.c	FUNCTION_47
0x4008b4a	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3161	cp-demangle.c	FUNCTION_47
0x4008b53	            0x7405	                            je 0x4008b5a	      3161	cp-demangle.c	FUNCTION_47
0x4008b55	      0xe800000000	                          call 0x4008b5a	      3161	cp-demangle.c	FUNCTION_47
0x4008b5a	        0x4883c410	                           add rsp, 0x10	      3161	cp-demangle.c	FUNCTION_47
0x4008b5e	              0x5b	                                 pop rbx	      3161	cp-demangle.c	FUNCTION_47
0x4008b5f	              0x5d	                                 pop rbp	      3161	cp-demangle.c	FUNCTION_47
0x4008b60	            0x415c	                                 pop r12	      3161	cp-demangle.c	FUNCTION_47
0x4008b62	              0xc3	                                     ret	      3161	cp-demangle.c	FUNCTION_47
d_template_args	SWITCH,0:CALL,4:IF,1:WHILE,0:ELSE,0:DO,0:FOR,0:functions,0	12
0x4008b63	        0x488b4f18	            mov rcx, qword [rdi + 0x18] 	      3107	cp-demangle.c	FUNCTION_46	IF_1	CALL_1
0x4008b67	           0xfb601	                   movzx eax, byte [rcx]	      3107	cp-demangle.c	FUNCTION_46	IF_1	CALL_1
0x4008b6a	          0x8d50b7	                   lea edx, [rax - 0x49]	      3107	cp-demangle.c	FUNCTION_46	IF_1	CALL_1
0x4008b6d	      0xb800000000	                              mov eax, 0	      3109	cp-demangle.c	FUNCTION_46	IF_1
0x4008b72	          0x80fa01	                               cmp dl, 1	      3107	cp-demangle.c	FUNCTION_46	IF_1	CALL_1
0x4008b75	            0x7715	                            ja 0x4008b8c	      3107	cp-demangle.c	FUNCTION_46	IF_1	CALL_1
0x4008b77	        0x4883ec08	                              sub rsp, 8	      3106	cp-demangle.c	FUNCTION_46
0x4008b7b	        0x4883c101	                              add rcx, 1	      3110	cp-demangle.c	FUNCTION_46	CALL_3
0x4008b7f	        0x48894f18	             mov qword [rdi + 0x18], rcx	      3110	cp-demangle.c	FUNCTION_46	CALL_3
0x4008b83	      0xe8c3feffff	              call sym.d_template_args_1	      3112	cp-demangle.c	FUNCTION_46	CALL_4
0x4008b88	        0x4883c408	                              add rsp, 8	      3113	cp-demangle.c	FUNCTION_46
0x4008b8c	            0xf3c3	                                     ret	      3113	cp-demangle.c	FUNCTION_46
is_gnu_v3_mangled_ctor	SWITCH,0:CALL,1:IF,1:WHILE,0:ELSE,0:DO,0:FOR,0:functions,0	17
0x4009bf8	        0x4883ec18	                           sub rsp, 0x18	      6572	cp-demangle.c	FUNCTION_105
0x4009bfc	    0x64488b042528	                mov rax, qword fs:[0x28]	      6572	cp-demangle.c	FUNCTION_105
0x4009c05	      0x4889442408	                mov qword [rsp + 8], rax	      6572	cp-demangle.c	FUNCTION_105
0x4009c0a	            0x31c0	                            xor eax, eax	      6572	cp-demangle.c	FUNCTION_105
0x4009c0c	      0x488d542404	                      lea rdx, [rsp + 4]	      6576	cp-demangle.c	FUNCTION_105	IF_1	CALL_1
0x4009c11	          0x4889e6	                            mov rsi, rsp	      6576	cp-demangle.c	FUNCTION_105	IF_1	CALL_1
0x4009c14	      0xe837feffff	                call sym.is_ctor_or_dtor	      6576	cp-demangle.c	FUNCTION_105	IF_1	CALL_1
0x4009c19	      0xba00000000	                              mov edx, 0	      6577	cp-demangle.c	FUNCTION_105	IF_1
0x4009c1e	            0x85c0	                           test eax, eax	      6576	cp-demangle.c	FUNCTION_105	IF_1	CALL_1
0x4009c20	         0xf451424	                 cmovne edx, dword [rsp]	      6578	cp-demangle.c	FUNCTION_105
0x4009c24	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      6579	cp-demangle.c	FUNCTION_105
0x4009c29	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      6579	cp-demangle.c	FUNCTION_105
0x4009c32	            0x7405	                            je 0x4009c39	      6579	cp-demangle.c	FUNCTION_105
0x4009c34	      0xe800000000	                          call 0x4009c39	      6579	cp-demangle.c	FUNCTION_105
0x4009c39	            0x89d0	                            mov eax, edx	      6579	cp-demangle.c	FUNCTION_105
0x4009c3b	        0x4883c418	                           add rsp, 0x18	      6579	cp-demangle.c	FUNCTION_105
0x4009c3f	              0xc3	                                     ret	      6579	cp-demangle.c	FUNCTION_105
d_cv_qualifiers	SWITCH,1:CALL,10:IF,13:WHILE,2:ELSE,6:DO,0:FOR,0:functions,0	157
0x4007a88	            0x4157	                                push r15	      2708	cp-demangle.c	FUNCTION_35
0x4007a8a	            0x4156	                                push r14	      2708	cp-demangle.c	FUNCTION_35
0x4007a8c	            0x4155	                                push r13	      2708	cp-demangle.c	FUNCTION_35
0x4007a8e	            0x4154	                                push r12	      2708	cp-demangle.c	FUNCTION_35
0x4007a90	              0x55	                                push rbp	      2708	cp-demangle.c	FUNCTION_35
0x4007a91	              0x53	                                push rbx	      2708	cp-demangle.c	FUNCTION_35
0x4007a92	        0x4883ec18	                           sub rsp, 0x18	      2708	cp-demangle.c	FUNCTION_35
0x4007a96	          0x4889fb	                            mov rbx, rdi	      2708	cp-demangle.c	FUNCTION_35
0x4007a99	          0x4989f5	                            mov r13, rsi	      2708	cp-demangle.c	FUNCTION_35
0x4007a9c	        0x8954240c	              mov dword [rsp + 0xc], edx	      2708	cp-demangle.c	FUNCTION_35
0x4007aa0	        0x488b4718	            mov rax, qword [rdi + 0x18] 	      2713	cp-demangle.c	FUNCTION_35	CALL_1
0x4007aa4	           0xfb628	                   movzx ebp, byte [rax]	      2713	cp-demangle.c	FUNCTION_35	CALL_1
0x4007aa7	          0x83fa01	                              cmp edx, 1	      2713	cp-demangle.c	FUNCTION_35	CALL_1
0x4007aaa	          0x4519f6	                          sbb r14d, r14d	      2713	cp-demangle.c	FUNCTION_35	CALL_1
0x4007aad	        0x4183e6fd	                    and r14d, 0xfffffffd	      2713	cp-demangle.c	FUNCTION_35	CALL_1
0x4007ab1	        0x4183c61c	                          add r14d, 0x1c	      2713	cp-demangle.c	FUNCTION_35	CALL_1
0x4007ab5	          0x83fa01	                              cmp edx, 1	      2713	cp-demangle.c	FUNCTION_35	CALL_1
0x4007ab8	          0x4519ff	                          sbb r15d, r15d	      2713	cp-demangle.c	FUNCTION_35	CALL_1
0x4007abb	        0x4183e7fd	                    and r15d, 0xfffffffd	      2713	cp-demangle.c	FUNCTION_35	CALL_1
0x4007abf	        0x4183c71d	                          add r15d, 0x1d	      2713	cp-demangle.c	FUNCTION_35	CALL_1
0x4007ac3	          0x83fa01	                              cmp edx, 1	      2713	cp-demangle.c	FUNCTION_35	CALL_1
0x4007ac6	            0x19c0	                            sbb eax, eax	      2713	cp-demangle.c	FUNCTION_35	CALL_1
0x4007ac8	          0x83e0fd	                     and eax, 0xfffffffd	      2713	cp-demangle.c	FUNCTION_35	CALL_1
0x4007acb	          0x83c01e	                           add eax, 0x1e	      2713	cp-demangle.c	FUNCTION_35	CALL_1
0x4007ace	        0x89442408	                mov dword [rsp + 8], eax	      2713	cp-demangle.c	FUNCTION_35	CALL_1
0x4007ad2	          0x4989f4	                            mov r12, rsi	      2714	cp-demangle.c	FUNCTION_35	WHILE_1	CALL_2
0x4007ad5	      0xe92a010000	                           jmp 0x4007c04	      2714	cp-demangle.c	FUNCTION_35	WHILE_1	CALL_2
0x4007ada	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      2719	cp-demangle.c	FUNCTION_35	WHILE_1	CALL_3
0x4007ade	        0x488d5001	                      lea rdx, [rax + 1]	      2719	cp-demangle.c	FUNCTION_35	WHILE_1	CALL_3
0x4007ae2	        0x48895318	             mov qword [rbx + 0x18], rdx	      2719	cp-demangle.c	FUNCTION_35	WHILE_1	CALL_3
0x4007ae6	        0x4080fd72	                           cmp bpl, 0x72	      2720	cp-demangle.c	FUNCTION_35	WHILE_1	IF_1
0x4007aea	            0x7511	                           jne 0x4007afd	      2720	cp-demangle.c	FUNCTION_35	WHILE_1	IF_1
0x4007aec	        0x83434809	               add dword [rbx + 0x48], 9	      2725	cp-demangle.c	FUNCTION_35	WHILE_1	IF_1
0x4007af0	          0x4489f6	                           mov esi, r14d	      2722	cp-demangle.c	FUNCTION_35	WHILE_1	IF_1
0x4007af3	      0xb900000000	                              mov ecx, 0	      2717	cp-demangle.c	FUNCTION_35	WHILE_1
0x4007af8	      0xe9e2000000	                           jmp 0x4007bdf	      2717	cp-demangle.c	FUNCTION_35	WHILE_1
0x4007afd	        0x4080fd56	                           cmp bpl, 0x56	      2727	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_1	IF_2
0x4007b01	            0x7511	                           jne 0x4007b14	      2727	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_1	IF_2
0x4007b03	        0x83434809	               add dword [rbx + 0x48], 9	      2732	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_1	IF_2
0x4007b07	          0x4489fe	                           mov esi, r15d	      2729	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_1	IF_2
0x4007b0a	      0xb900000000	                              mov ecx, 0	      2717	cp-demangle.c	FUNCTION_35	WHILE_1
0x4007b0f	      0xe9cb000000	                           jmp 0x4007bdf	      2717	cp-demangle.c	FUNCTION_35	WHILE_1
0x4007b14	        0x4080fd4b	                           cmp bpl, 0x4b	      2734	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_2	IF_3
0x4007b18	            0x7512	                           jne 0x4007b2c	      2734	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_2	IF_3
0x4007b1a	        0x83434806	               add dword [rbx + 0x48], 6	      2739	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_2	IF_3
0x4007b1e	        0x8b742408	                mov esi, dword [rsp + 8]	      2736	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_2	IF_3
0x4007b22	      0xb900000000	                              mov ecx, 0	      2717	cp-demangle.c	FUNCTION_35	WHILE_1
0x4007b27	      0xe9b3000000	                           jmp 0x4007bdf	      2717	cp-demangle.c	FUNCTION_35	WHILE_1
0x4007b2c	        0x80780100	                   cmp byte [rax + 1], 0	      2743	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	CALL_4
0x4007b30	     0xf842d010000	                            je 0x4007c63	      2743	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	CALL_4
0x4007b36	        0x488d5002	                      lea rdx, [rax + 2]	      2743	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	CALL_4
0x4007b3a	        0x48895318	             mov qword [rbx + 0x18], rdx	      2743	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	CALL_4
0x4007b3e	         0xfb64001	               movzx eax, byte [rax + 1]	      2743	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	CALL_4
0x4007b42	            0x3c78	                            cmp al, 0x78	      2744	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	IF_4
0x4007b44	            0x7513	                           jne 0x4007b59	      2744	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	IF_4
0x4007b46	        0x83434811	            add dword [rbx + 0x48], 0x11	      2747	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	IF_4
0x4007b4a	      0xb900000000	                              mov ecx, 0	      2717	cp-demangle.c	FUNCTION_35	WHILE_1
0x4007b4f	      0xbe4c000000	                           mov esi, 0x4c	      2746	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	IF_4
0x4007b54	      0xe986000000	                           jmp 0x4007bdf	      2746	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	IF_4
0x4007b59	            0x89c2	                            mov edx, eax	      2749	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5
0x4007b5b	          0x83e2df	                     and edx, 0xffffffdf	      2749	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5
0x4007b5e	          0x80fa4f	                            cmp dl, 0x4f	      2749	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5
0x4007b61	            0x7542	                           jne 0x4007ba5	      2749	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5
0x4007b63	        0x83434809	               add dword [rbx + 0x48], 9	      2753	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5
0x4007b67	      0xb900000000	                              mov ecx, 0	      2717	cp-demangle.c	FUNCTION_35	WHILE_1
0x4007b6c	      0xbe4e000000	                           mov esi, 0x4e	      2752	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5
0x4007b71	            0x3c4f	                            cmp al, 0x4f	      2754	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5	IF_6
0x4007b73	            0x756a	                           jne 0x4007bdf	      2754	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5	IF_6
0x4007b75	          0x4889df	                            mov rdi, rbx	      2756	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5	IF_6	CALL_5
0x4007b78	      0xe8d1f7ffff	                   call sym.d_expression	      2756	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5	IF_6	CALL_5
0x4007b7d	          0x4889c1	                            mov rcx, rax	      2756	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5	IF_6	CALL_5
0x4007b80	          0x4885c0	                           test rax, rax	      2757	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5	IF_6	IF_7
0x4007b83	     0xf84e1000000	                            je 0x4007c6a	      2757	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5	IF_6	IF_7
0x4007b89	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      2759	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5	IF_6	IF_8	CALL_6
0x4007b8d	          0x803845	                    cmp byte [rax], 0x45	      2759	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5	IF_6	IF_8	CALL_6
0x4007b90	     0xf85db000000	                           jne 0x4007c71	      2759	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5	IF_6	IF_8	CALL_6
0x4007b96	        0x4883c001	                              add rax, 1	      2759	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5	IF_6	IF_8	CALL_6
0x4007b9a	        0x48894318	             mov qword [rbx + 0x18], rax	      2759	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5	IF_6	IF_8	CALL_6
0x4007b9e	      0xbe4e000000	                           mov esi, 0x4e	      2752	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5
0x4007ba3	            0xeb3a	                           jmp 0x4007bdf	      2752	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5
0x4007ba5	            0x3c77	                            cmp al, 0x77	      2763	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9
0x4007ba7	     0xf85cb000000	                           jne 0x4007c78	      2763	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9
0x4007bad	        0x83434806	               add dword [rbx + 0x48], 6	      2766	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9
0x4007bb1	          0x4889df	                            mov rdi, rbx	      2767	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9	CALL_7
0x4007bb4	      0xe8bdf1ffff	                     call sym.d_parmlist	      2767	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9	CALL_7
0x4007bb9	          0x4889c1	                            mov rcx, rax	      2767	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9	CALL_7
0x4007bbc	          0x4885c0	                           test rax, rax	      2768	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9	IF_10
0x4007bbf	     0xf84ba000000	                            je 0x4007c7f	      2768	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9	IF_10
0x4007bc5	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      2770	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9	IF_11	CALL_8
0x4007bc9	          0x803845	                    cmp byte [rax], 0x45	      2770	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9	IF_11	CALL_8
0x4007bcc	     0xf85b4000000	                           jne 0x4007c86	      2770	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9	IF_11	CALL_8
0x4007bd2	        0x4883c001	                              add rax, 1	      2770	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9	IF_11	CALL_8
0x4007bd6	        0x48894318	             mov qword [rbx + 0x18], rax	      2770	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9	IF_11	CALL_8
0x4007bda	      0xbe4f000000	                           mov esi, 0x4f	      2765	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9
0x4007bdf	      0xba00000000	                              mov edx, 0	      2777	cp-demangle.c	FUNCTION_35	WHILE_1	CALL_9
0x4007be4	          0x4889df	                            mov rdi, rbx	      2777	cp-demangle.c	FUNCTION_35	WHILE_1	CALL_9
0x4007be7	      0xe8a484ffff	                    call sym.d_make_comp	      2777	cp-demangle.c	FUNCTION_35	WHILE_1	CALL_9
0x4007bec	        0x49890424	                    mov qword [r12], rax	      2777	cp-demangle.c	FUNCTION_35	WHILE_1	CALL_9
0x4007bf0	          0x4885c0	                           test rax, rax	      2778	cp-demangle.c	FUNCTION_35	WHILE_1	IF_12
0x4007bf3	     0xf8494000000	                            je 0x4007c8d	      2778	cp-demangle.c	FUNCTION_35	WHILE_1	IF_12
0x4007bf9	        0x4c8d6008	                      lea r12, [rax + 8]	      2780	cp-demangle.c	FUNCTION_35	WHILE_1
0x4007bfd	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      2782	cp-demangle.c	FUNCTION_35	WHILE_1	CALL_10
0x4007c01	           0xfb628	                   movzx ebp, byte [rax]	      2782	cp-demangle.c	FUNCTION_35	WHILE_1	CALL_10
0x4007c04	          0x4889df	                            mov rdi, rbx	      2714	cp-demangle.c	FUNCTION_35	WHILE_1	CALL_2
0x4007c07	      0xe84087ffff	              call sym.next_is_type_qual	      2714	cp-demangle.c	FUNCTION_35	WHILE_1	CALL_2
0x4007c0c	            0x85c0	                           test eax, eax	      2714	cp-demangle.c	FUNCTION_35	WHILE_1	CALL_2
0x4007c0e	     0xf85c6feffff	                           jne 0x4007ada	      2714	cp-demangle.c	FUNCTION_35	WHILE_1	CALL_2
0x4007c14	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      2785	cp-demangle.c	FUNCTION_35	IF_13
0x4007c19	            0x7579	                           jne 0x4007c94	      2785	cp-demangle.c	FUNCTION_35	IF_13
0x4007c1b	        0x4080fd46	                           cmp bpl, 0x46	      2785	cp-demangle.c	FUNCTION_35	IF_13
0x4007c1f	            0x7573	                           jne 0x4007c94	      2785	cp-demangle.c	FUNCTION_35	IF_13
0x4007c21	          0x4d39ec	                            cmp r12, r13	      2787	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2
0x4007c24	            0x7473	                            je 0x4007c99	      2787	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2
0x4007c26	        0x498b5500	                    mov rdx, qword [r13]	      2789	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2	SWITCH_1
0x4007c2a	            0x8b02	                    mov eax, dword [rdx]	      2789	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2	SWITCH_1
0x4007c2c	          0x83f81a	                           cmp eax, 0x1a	      2789	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2	SWITCH_1
0x4007c2f	            0x7412	                            je 0x4007c43	      2789	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2	SWITCH_1
0x4007c31	          0x83f81b	                           cmp eax, 0x1b	      2789	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2	SWITCH_1
0x4007c34	            0x7415	                            je 0x4007c4b	      2789	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2	SWITCH_1
0x4007c36	          0x83f819	                           cmp eax, 0x19	      2789	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2	SWITCH_1
0x4007c39	            0x7516	                           jne 0x4007c51	      2789	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2	SWITCH_1
0x4007c3b	    0xc7021c000000	                   mov dword [rdx], 0x1c	      2792	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2	SWITCH_1
0x4007c41	            0xeb0e	                           jmp 0x4007c51	      2793	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2	SWITCH_1
0x4007c43	    0xc7021d000000	                   mov dword [rdx], 0x1d	      2795	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2	SWITCH_1
0x4007c49	            0xeb06	                           jmp 0x4007c51	      2796	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2	SWITCH_1
0x4007c4b	    0xc7021e000000	                   mov dword [rdx], 0x1e	      2798	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2	SWITCH_1
0x4007c51	        0x4d8b6d00	                    mov r13, qword [r13]	      2803	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2
0x4007c55	        0x4983c508	                              add r13, 8	      2803	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2
0x4007c59	          0x4d39ec	                            cmp r12, r13	      2787	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2
0x4007c5c	            0x75c8	                           jne 0x4007c26	      2787	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2
0x4007c5e	          0x4c89e8	                            mov rax, r13	      2803	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2
0x4007c61	            0xeb39	                           jmp 0x4007c9c	      2803	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2
0x4007c63	      0xb800000000	                              mov eax, 0	      2774	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_6
0x4007c68	            0xeb32	                           jmp 0x4007c9c	      2774	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_6
0x4007c6a	      0xb800000000	                              mov eax, 0	      2758	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5	IF_6	IF_7
0x4007c6f	            0xeb2b	                           jmp 0x4007c9c	      2758	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5	IF_6	IF_7
0x4007c71	      0xb800000000	                              mov eax, 0	      2760	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5	IF_6	IF_8
0x4007c76	            0xeb24	                           jmp 0x4007c9c	      2760	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5	IF_6	IF_8
0x4007c78	      0xb800000000	                              mov eax, 0	      2774	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_6
0x4007c7d	            0xeb1d	                           jmp 0x4007c9c	      2774	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_6
0x4007c7f	      0xb800000000	                              mov eax, 0	      2769	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9	IF_10
0x4007c84	            0xeb16	                           jmp 0x4007c9c	      2769	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9	IF_10
0x4007c86	      0xb800000000	                              mov eax, 0	      2771	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9	IF_11
0x4007c8b	            0xeb0f	                           jmp 0x4007c9c	      2771	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9	IF_11
0x4007c8d	      0xb800000000	                              mov eax, 0	      2779	cp-demangle.c	FUNCTION_35	WHILE_1	IF_12
0x4007c92	            0xeb08	                           jmp 0x4007c9c	      2779	cp-demangle.c	FUNCTION_35	WHILE_1	IF_12
0x4007c94	          0x4c89e0	                            mov rax, r12	      2779	cp-demangle.c	FUNCTION_35	WHILE_1	IF_12
0x4007c97	            0xeb03	                           jmp 0x4007c9c	      2779	cp-demangle.c	FUNCTION_35	WHILE_1	IF_12
0x4007c99	          0x4c89e8	                            mov rax, r13	      2807	cp-demangle.c	FUNCTION_35
0x4007c9c	        0x4883c418	                           add rsp, 0x18	      2808	cp-demangle.c	FUNCTION_35
0x4007ca0	              0x5b	                                 pop rbx	      2808	cp-demangle.c	FUNCTION_35
0x4007ca1	              0x5d	                                 pop rbp	      2808	cp-demangle.c	FUNCTION_35
0x4007ca2	            0x415c	                                 pop r12	      2808	cp-demangle.c	FUNCTION_35
0x4007ca4	            0x415d	                                 pop r13	      2808	cp-demangle.c	FUNCTION_35
0x4007ca6	            0x415e	                                 pop r14	      2808	cp-demangle.c	FUNCTION_35
0x4007ca8	            0x415f	                                 pop r15	      2808	cp-demangle.c	FUNCTION_35
0x4007caa	              0xc3	                                     ret	      2808	cp-demangle.c	FUNCTION_35
is_ctor_or_dtor	SWITCH,1:CALL,1:IF,0:WHILE,1:ELSE,0:DO,0:FOR,0:functions,0	72
0x4009a50	              0x55	                                push rbp	      6501	cp-demangle.c	FUNCTION_104
0x4009a51	          0x4889e5	                            mov rbp, rsp	      6501	cp-demangle.c	FUNCTION_104
0x4009a54	            0x4154	                                push r12	      6501	cp-demangle.c	FUNCTION_104
0x4009a56	              0x53	                                push rbx	      6501	cp-demangle.c	FUNCTION_104
0x4009a57	        0x4883ec60	                           sub rsp, 0x60	      6501	cp-demangle.c	FUNCTION_104
0x4009a5b	          0x4989f8	                             mov r8, rdi	      6501	cp-demangle.c	FUNCTION_104
0x4009a5e	          0x4989f4	                            mov r12, rsi	      6501	cp-demangle.c	FUNCTION_104
0x4009a61	          0x4889d3	                            mov rbx, rdx	      6501	cp-demangle.c	FUNCTION_104
0x4009a64	    0x64488b042528	                mov rax, qword fs:[0x28]	      6501	cp-demangle.c	FUNCTION_104
0x4009a6d	        0x488945e8	             mov qword [rbp - 0x18], rax	      6501	cp-demangle.c	FUNCTION_104
0x4009a71	            0x31c0	                            xor eax, eax	      6501	cp-demangle.c	FUNCTION_104
0x4009a73	    0xc70600000000	                      mov dword [rsi], 0	      6506	cp-demangle.c	FUNCTION_104
0x4009a79	    0xc70200000000	                      mov dword [rdx], 0	      6507	cp-demangle.c	FUNCTION_104
0x4009a7f	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      6509	cp-demangle.c	FUNCTION_104	CALL_1
0x4009a86	            0xf2ae	              repne scasb al, byte [rdi]	      6509	cp-demangle.c	FUNCTION_104	CALL_1
0x4009a88	          0x48f7d1	                                 not rcx	      6509	cp-demangle.c	FUNCTION_104	CALL_1
0x4009a8b	        0x488d51ff	                      lea rdx, [rcx - 1]	      6509	cp-demangle.c	FUNCTION_104	CALL_1
0x4009a8f	        0x488d4d90	                   lea rcx, [rbp - 0x70]	      6509	cp-demangle.c	FUNCTION_104	CALL_1
0x4009a93	      0xbe00400000	                         mov esi, 0x4000	      6509	cp-demangle.c	FUNCTION_104	CALL_1
0x4009a98	          0x4c89c7	                             mov rdi, r8	      6509	cp-demangle.c	FUNCTION_104	CALL_1
0x4009a9b	      0xe800000000	                          call 0x4009aa0	      6509	cp-demangle.c	FUNCTION_104	CALL_1
0x4009aa0	        0x486345bc	          movsxd rax, dword [rbp - 0x44]	      6513	cp-demangle.c	FUNCTION_104
0x4009aa4	        0x488d0440	                  lea rax, [rax + rax*2]	      6513	cp-demangle.c	FUNCTION_104
0x4009aa8	      0xb910000000	                           mov ecx, 0x10	      6513	cp-demangle.c	FUNCTION_104
0x4009aad	    0x488d04c51600	                 lea rax, [rax*8 + 0x16]	      6513	cp-demangle.c	FUNCTION_104
0x4009ab5	      0xba00000000	                              mov edx, 0	      6513	cp-demangle.c	FUNCTION_104
0x4009aba	          0x48f7f1	                                 div rcx	      6513	cp-demangle.c	FUNCTION_104
0x4009abd	        0x48c1e004	                              shl rax, 4	      6513	cp-demangle.c	FUNCTION_104
0x4009ac1	          0x4829c4	                            sub rsp, rax	      6513	cp-demangle.c	FUNCTION_104
0x4009ac4	          0x4889e6	                            mov rsi, rsp	      6513	cp-demangle.c	FUNCTION_104
0x4009ac7	        0x486345cc	          movsxd rax, dword [rbp - 0x34]	      6514	cp-demangle.c	FUNCTION_104
0x4009acb	    0x488d04c51600	                 lea rax, [rax*8 + 0x16]	      6514	cp-demangle.c	FUNCTION_104
0x4009ad3	      0xba00000000	                              mov edx, 0	      6514	cp-demangle.c	FUNCTION_104
0x4009ad8	          0x48f7f1	                                 div rcx	      6514	cp-demangle.c	FUNCTION_104
0x4009adb	        0x48c1e004	                              shl rax, 4	      6514	cp-demangle.c	FUNCTION_104
0x4009adf	          0x4829c4	                            sub rsp, rax	      6514	cp-demangle.c	FUNCTION_104
0x4009ae2	        0x488975b0	             mov qword [rbp - 0x50], rsi	      6516	cp-demangle.c	FUNCTION_104
0x4009ae6	        0x488965c0	             mov qword [rbp - 0x40], rsp	      6517	cp-demangle.c	FUNCTION_104
0x4009aea	      0xbe01000000	                              mov esi, 1	      6523	cp-demangle.c	FUNCTION_104
0x4009aef	        0x488d7d90	                   lea rdi, [rbp - 0x70]	      6523	cp-demangle.c	FUNCTION_104
0x4009af3	      0xe800000000	                          call 0x4009af8	      6523	cp-demangle.c	FUNCTION_104
0x4009af8	          0x4889c2	                            mov rdx, rax	      6523	cp-demangle.c	FUNCTION_104
0x4009afb	      0xb800000000	                              mov eax, 0	      6528	cp-demangle.c	FUNCTION_104
0x4009b00	            0xeb3c	                           jmp 0x4009b3e	      6529	cp-demangle.c	FUNCTION_104	WHILE_1
0x4009b02	          0x833a08	                      cmp dword [rdx], 8	      6531	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x4009b05	            0x773c	                            ja 0x4009b43	      6531	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x4009b07	            0x8b0a	                    mov ecx, dword [rdx]	      6531	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x4009b09	    0xff24cd000000	                       jmp qword [rcx*8]	      6531	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x4009b10	        0x488b5208	                mov rdx, qword [rdx + 8]	      6544	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x4009b14	            0xeb28	                           jmp 0x4009b3e	      6545	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x4009b16	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      6548	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x4009b1a	            0xeb22	                           jmp 0x4009b3e	      6549	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x4009b1c	          0x8b4208	                mov eax, dword [rdx + 8]	      6551	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x4009b1f	        0x41890424	                    mov dword [r12], eax	      6551	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x4009b23	      0xb801000000	                              mov eax, 1	      6552	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x4009b28	      0xba00000000	                              mov edx, 0	      6553	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x4009b2d	            0xeb0f	                           jmp 0x4009b3e	      6554	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x4009b2f	          0x8b4208	                mov eax, dword [rdx + 8]	      6556	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x4009b32	            0x8903	                    mov dword [rbx], eax	      6556	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x4009b34	      0xb801000000	                              mov eax, 1	      6557	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x4009b39	      0xba00000000	                              mov edx, 0	      6558	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x4009b3e	          0x4885d2	                           test rdx, rdx	      6529	cp-demangle.c	FUNCTION_104	WHILE_1
0x4009b41	            0x75bf	                           jne 0x4009b02	      6529	cp-demangle.c	FUNCTION_104	WHILE_1
0x4009b43	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	      6565	cp-demangle.c	FUNCTION_104
0x4009b47	    0x644833342528	                xor rsi, qword fs:[0x28]	      6565	cp-demangle.c	FUNCTION_104
0x4009b50	            0x7405	                            je 0x4009b57	      6565	cp-demangle.c	FUNCTION_104
0x4009b52	      0xe800000000	                          call 0x4009b57	      6565	cp-demangle.c	FUNCTION_104
0x4009b57	        0x488d65f0	                   lea rsp, [rbp - 0x10]	      6565	cp-demangle.c	FUNCTION_104
0x4009b5b	              0x5b	                                 pop rbx	      6565	cp-demangle.c	FUNCTION_104
0x4009b5c	            0x415c	                                 pop r12	      6565	cp-demangle.c	FUNCTION_104
0x4009b5e	              0x5d	                                 pop rbp	      6565	cp-demangle.c	FUNCTION_104
0x4009b5f	              0xc3	                                     ret	      6565	cp-demangle.c	FUNCTION_104
d_print_comp	SWITCH,0:CALL,2:IF,1:WHILE,0:ELSE,0:DO,0:FOR,0:functions,0	37
0x40046e2	              0x55	                                push rbp	      5713	cp-demangle.c	FUNCTION_87
0x40046e3	              0x53	                                push rbx	      5713	cp-demangle.c	FUNCTION_87
0x40046e4	        0x4883ec28	                           sub rsp, 0x28	      5713	cp-demangle.c	FUNCTION_87
0x40046e8	          0x4889fd	                            mov rbp, rdi	      5713	cp-demangle.c	FUNCTION_87
0x40046eb	    0x64488b042528	                mov rax, qword fs:[0x28]	      5713	cp-demangle.c	FUNCTION_87
0x40046f4	      0x4889442418	             mov qword [rsp + 0x18], rax	      5713	cp-demangle.c	FUNCTION_87
0x40046f9	            0x31c0	                            xor eax, eax	      5713	cp-demangle.c	FUNCTION_87
0x40046fb	          0x4885d2	                           test rdx, rdx	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x40046fe	            0x7417	                            je 0x4004717	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4004700	          0x4889d3	                            mov rbx, rdx	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4004703	          0x8b4204	                mov eax, dword [rdx + 4]	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4004706	          0x83f801	                              cmp eax, 1	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4004709	            0x7f0c	                            jg 0x4004717	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x400470b	    0x81bf34010000	         cmp dword [rdi + 0x134], 0x400 	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4004715	            0x7e0c	                           jle 0x4004723	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4004717	    0xc78530010000	              mov dword [rbp + 0x130], 1	      4207	cp-demangle.c	FUNCTION_69
0x4004721	            0xeb40	                           jmp 0x4004763	      4207	cp-demangle.c	FUNCTION_69
0x4004723	          0x83c001	                              add eax, 1	      5721	cp-demangle.c	FUNCTION_87
0x4004726	          0x894204	                mov dword [rdx + 4], eax	      5721	cp-demangle.c	FUNCTION_87
0x4004729	    0x838734010000	              add dword [rdi + 0x134], 1	      5722	cp-demangle.c	FUNCTION_87
0x4004730	        0x48891424	                    mov qword [rsp], rdx	      5724	cp-demangle.c	FUNCTION_87
0x4004734	    0x488b87480100	           mov rax, qword [rdi + 0x148] 	      5725	cp-demangle.c	FUNCTION_87
0x400473b	      0x4889442408	                mov qword [rsp + 8], rax	      5725	cp-demangle.c	FUNCTION_87
0x4004740	    0x4889a7480100	            mov qword [rdi + 0x148], rsp	      5726	cp-demangle.c	FUNCTION_87
0x4004747	      0xe82bc2ffff	             call sym.d_print_comp_inner	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x400474c	      0x488b442408	                mov rax, qword [rsp + 8]	      5730	cp-demangle.c	FUNCTION_87
0x4004751	    0x488985480100	           mov qword [rbp + 0x148], rax 	      5730	cp-demangle.c	FUNCTION_87
0x4004758	        0x836b0401	                  sub dword [rbx + 4], 1	      5731	cp-demangle.c	FUNCTION_87
0x400475c	    0x83ad34010000	              sub dword [rbp + 0x134], 1	      5732	cp-demangle.c	FUNCTION_87
0x4004763	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5733	cp-demangle.c	FUNCTION_87
0x4004768	    0x644833042528	                xor rax, qword fs:[0x28]	      5733	cp-demangle.c	FUNCTION_87
0x4004771	            0x7405	                            je 0x4004778	      5733	cp-demangle.c	FUNCTION_87
0x4004773	      0xe800000000	                          call 0x4004778	      5733	cp-demangle.c	FUNCTION_87
0x4004778	        0x4883c428	                           add rsp, 0x28	      5733	cp-demangle.c	FUNCTION_87
0x400477c	              0x5b	                                 pop rbx	      5733	cp-demangle.c	FUNCTION_87
0x400477d	              0x5d	                                 pop rbp	      5733	cp-demangle.c	FUNCTION_87
0x400477e	              0xc3	                                     ret	      5733	cp-demangle.c	FUNCTION_87
d_growable_string_callback_adapter	SWITCH,0:CALL,1:IF,0:WHILE,0:ELSE,0:DO,0:FOR,0:functions,0	57
0x40007d0	            0x4155	                                push r13	      4021	cp-demangle.c	FUNCTION_66
0x40007d2	            0x4154	                                push r12	      4021	cp-demangle.c	FUNCTION_66
0x40007d4	              0x55	                                push rbp	      4021	cp-demangle.c	FUNCTION_66
0x40007d5	              0x53	                                push rbx	      4021	cp-demangle.c	FUNCTION_66
0x40007d6	        0x4883ec08	                              sub rsp, 8	      4021	cp-demangle.c	FUNCTION_66
0x40007da	          0x4989fd	                            mov r13, rdi	      4021	cp-demangle.c	FUNCTION_66
0x40007dd	          0x4989f4	                            mov r12, rsi	      4021	cp-demangle.c	FUNCTION_66
0x40007e0	          0x4889d5	                            mov rbp, rdx	      4021	cp-demangle.c	FUNCTION_66
0x40007e3	        0x488b4208	                mov rax, qword [rdx + 8]	      4005	cp-demangle.c	FUNCTION_65
0x40007e7	      0x488d440601	                lea rax, [rsi + rax + 1]	      4005	cp-demangle.c	FUNCTION_65
0x40007ec	        0x488b5a10	            mov rbx, qword [rdx + 0x10] 	      4006	cp-demangle.c	FUNCTION_65	IF_1
0x40007f0	          0x4839d8	                            cmp rax, rbx	      4006	cp-demangle.c	FUNCTION_65	IF_1
0x40007f3	            0x766c	                           jbe 0x4000861	      4006	cp-demangle.c	FUNCTION_65	IF_1
0x40007f5	        0x837a1800	               cmp dword [rdx + 0x18], 0	      3973	cp-demangle.c	FUNCTION_64	IF_1
0x40007f9	     0xf858d000000	                           jne 0x400088c	      3973	cp-demangle.c	FUNCTION_64	IF_1
0x40007ff	          0x4885db	                           test rbx, rbx	      3979	cp-demangle.c	FUNCTION_64
0x4000802	            0x750b	                           jne 0x400080f	      3979	cp-demangle.c	FUNCTION_64
0x4000804	        0x4883f802	                              cmp rax, 2	      3980	cp-demangle.c	FUNCTION_64	WHILE_1
0x4000808	            0x760f	                           jbe 0x4000819	      3980	cp-demangle.c	FUNCTION_64	WHILE_1
0x400080a	      0xbb02000000	                              mov ebx, 2	      3979	cp-demangle.c	FUNCTION_64
0x400080f	          0x4801db	                            add rbx, rbx	      3981	cp-demangle.c	FUNCTION_64	WHILE_1
0x4000812	          0x4839d8	                            cmp rax, rbx	      3980	cp-demangle.c	FUNCTION_64	WHILE_1
0x4000815	            0x77f8	                            ja 0x400080f	      3980	cp-demangle.c	FUNCTION_64	WHILE_1
0x4000817	            0xeb05	                           jmp 0x400081e	      3980	cp-demangle.c	FUNCTION_64	WHILE_1
0x4000819	      0xbb02000000	                              mov ebx, 2	      3979	cp-demangle.c	FUNCTION_64
0x400081e	          0x4889de	                            mov rsi, rbx	      3983	cp-demangle.c	FUNCTION_64	CALL_1
0x4000821	        0x488b7d00	                    mov rdi, qword [rbp]	      3983	cp-demangle.c	FUNCTION_64	CALL_1
0x4000825	      0xe800000000	                          call 0x400082a	      3983	cp-demangle.c	FUNCTION_64	CALL_1
0x400082a	          0x4885c0	                           test rax, rax	      3984	cp-demangle.c	FUNCTION_64	IF_2
0x400082d	            0x752a	                           jne 0x4000859	      3984	cp-demangle.c	FUNCTION_64	IF_2
0x400082f	        0x488b7d00	                    mov rdi, qword [rbp]	      3986	cp-demangle.c	FUNCTION_64	IF_2	CALL_2
0x4000833	      0xe800000000	                          call 0x4000838	      3986	cp-demangle.c	FUNCTION_64	IF_2	CALL_2
0x4000838	    0x48c745000000	                      mov qword [rbp], 0	      3987	cp-demangle.c	FUNCTION_64	IF_2
0x4000840	    0x48c745080000	                  mov qword [rbp + 8], 0	      3988	cp-demangle.c	FUNCTION_64	IF_2
0x4000848	    0x48c745100000	               mov qword [rbp + 0x10], 0	      3989	cp-demangle.c	FUNCTION_64	IF_2
0x4000850	    0xc74518010000	               mov dword [rbp + 0x18], 1	      3990	cp-demangle.c	FUNCTION_64	IF_2
0x4000857	            0xeb33	                           jmp 0x400088c	      3990	cp-demangle.c	FUNCTION_64	IF_2
0x4000859	        0x48894500	                    mov qword [rbp], rax	      3993	cp-demangle.c	FUNCTION_64
0x400085d	        0x48895d10	            mov qword [rbp + 0x10], rbx 	      3994	cp-demangle.c	FUNCTION_64
0x4000861	        0x837d1800	               cmp dword [rbp + 0x18], 0	      4009	cp-demangle.c	FUNCTION_65	IF_2
0x4000865	            0x7525	                           jne 0x400088c	      4009	cp-demangle.c	FUNCTION_65	IF_2
0x4000867	        0x488b7d08	                mov rdi, qword [rbp + 8]	        53	string3.h	FUNCTION_126	CALL_3
0x400086b	        0x48037d00	                    add rdi, qword [rbp]	        53	string3.h	FUNCTION_126	CALL_3
0x400086f	          0x4c89e2	                            mov rdx, r12	        53	string3.h	FUNCTION_126	CALL_3
0x4000872	          0x4c89ee	                            mov rsi, r13	        53	string3.h	FUNCTION_126	CALL_3
0x4000875	      0xe800000000	                          call 0x400087a	        53	string3.h	FUNCTION_126	CALL_3
0x400087a	          0x4c89e0	                            mov rax, r12	      4013	cp-demangle.c	FUNCTION_65
0x400087d	        0x48034500	                    add rax, qword [rbp]	      4013	cp-demangle.c	FUNCTION_65
0x4000881	        0x48034508	                add rax, qword [rbp + 8]	      4013	cp-demangle.c	FUNCTION_65
0x4000885	          0xc60000	                       mov byte [rax], 0	      4013	cp-demangle.c	FUNCTION_65
0x4000888	        0x4c016508	                add qword [rbp + 8], r12	      4014	cp-demangle.c	FUNCTION_65
0x400088c	        0x4883c408	                              add rsp, 8	      4025	cp-demangle.c	FUNCTION_66
0x4000890	              0x5b	                                 pop rbx	      4025	cp-demangle.c	FUNCTION_66
0x4000891	              0x5d	                                 pop rbp	      4025	cp-demangle.c	FUNCTION_66
0x4000892	            0x415c	                                 pop r12	      4025	cp-demangle.c	FUNCTION_66
0x4000894	            0x415d	                                 pop r13	      4025	cp-demangle.c	FUNCTION_66
0x4000896	              0xc3	                                     ret	      4025	cp-demangle.c	FUNCTION_66
d_demangle	SWITCH,0:CALL,3:IF,1:WHILE,0:ELSE,0:DO,0:FOR,0:functions,0	32
0x40099bc	              0x53	                                push rbx	      6293	cp-demangle.c	FUNCTION_97
0x40099bd	        0x4883ec30	                           sub rsp, 0x30	      6293	cp-demangle.c	FUNCTION_97
0x40099c1	          0x4889d3	                            mov rbx, rdx	      6293	cp-demangle.c	FUNCTION_97
0x40099c4	    0x64488b042528	                mov rax, qword fs:[0x28]	      6293	cp-demangle.c	FUNCTION_97
0x40099cd	      0x4889442428	             mov qword [rsp + 0x28], rax	      6293	cp-demangle.c	FUNCTION_97
0x40099d2	            0x31c0	                            xor eax, eax	      6293	cp-demangle.c	FUNCTION_97
0x40099d4	    0x48c704240000	                      mov qword [rsp], 0	      3956	cp-demangle.c	FUNCTION_63
0x40099dc	    0x48c744240800	                  mov qword [rsp + 8], 0	      3957	cp-demangle.c	FUNCTION_63
0x40099e5	    0x48c744241000	               mov qword [rsp + 0x10], 0	      3958	cp-demangle.c	FUNCTION_63
0x40099ee	    0xc74424180000	               mov dword [rsp + 0x18], 0	      3959	cp-demangle.c	FUNCTION_63
0x40099f6	          0x4889e1	                            mov rcx, rsp	      6299	cp-demangle.c	FUNCTION_97	CALL_2
0x40099f9	      0xba00000000	                              mov edx, 0	      6299	cp-demangle.c	FUNCTION_97	CALL_2
0x40099fe	      0xe86efcffff	            call sym.d_demangle_callback	      6299	cp-demangle.c	FUNCTION_97	CALL_2
0x4009a03	            0x85c0	                           test eax, eax	      6301	cp-demangle.c	FUNCTION_97	IF_1
0x4009a05	            0x7517	                           jne 0x4009a1e	      6301	cp-demangle.c	FUNCTION_97	IF_1
0x4009a07	        0x488b3c24	                    mov rdi, qword [rsp]	      6303	cp-demangle.c	FUNCTION_97	IF_1	CALL_3
0x4009a0b	      0xe800000000	                          call 0x4009a10	      6303	cp-demangle.c	FUNCTION_97	IF_1	CALL_3
0x4009a10	    0x48c703000000	                      mov qword [rbx], 0	      6304	cp-demangle.c	FUNCTION_97	IF_1
0x4009a17	      0xb800000000	                              mov eax, 0	      6305	cp-demangle.c	FUNCTION_97	IF_1
0x4009a1c	            0xeb17	                           jmp 0x4009a35	      6305	cp-demangle.c	FUNCTION_97	IF_1
0x4009a1e	      0xb801000000	                              mov eax, 1	      6308	cp-demangle.c	FUNCTION_97
0x4009a23	      0x837c241800	               cmp dword [rsp + 0x18], 0	      6308	cp-demangle.c	FUNCTION_97
0x4009a28	    0x480f44442410	           cmove rax, qword [rsp + 0x10]	      6308	cp-demangle.c	FUNCTION_97
0x4009a2e	          0x488903	                    mov qword [rbx], rax	      6308	cp-demangle.c	FUNCTION_97
0x4009a31	        0x488b0424	                    mov rax, qword [rsp]	      6309	cp-demangle.c	FUNCTION_97
0x4009a35	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      6310	cp-demangle.c	FUNCTION_97
0x4009a3a	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      6310	cp-demangle.c	FUNCTION_97
0x4009a43	            0x7405	                            je 0x4009a4a	      6310	cp-demangle.c	FUNCTION_97
0x4009a45	      0xe800000000	                          call 0x4009a4a	      6310	cp-demangle.c	FUNCTION_97
0x4009a4a	        0x4883c430	                           add rsp, 0x30	      6310	cp-demangle.c	FUNCTION_97
0x4009a4e	              0x5b	                                 pop rbx	      6310	cp-demangle.c	FUNCTION_97
0x4009a4f	              0xc3	                                     ret	      6310	cp-demangle.c	FUNCTION_97
d_source_name	SWITCH,0:CALL,2:IF,1:WHILE,0:ELSE,0:DO,0:FOR,0:functions,0	62
0x400606a	            0x4154	                                push r12	      1669	cp-demangle.c	FUNCTION_24
0x400606c	              0x55	                                push rbp	      1669	cp-demangle.c	FUNCTION_24
0x400606d	              0x53	                                push rbx	      1669	cp-demangle.c	FUNCTION_24
0x400606e	          0x4889fb	                            mov rbx, rdi	      1669	cp-demangle.c	FUNCTION_24
0x4006071	      0xe85da1ffff	                       call sym.d_number	      1673	cp-demangle.c	FUNCTION_24	CALL_1
0x4006076	            0x85c0	                           test eax, eax	      1674	cp-demangle.c	FUNCTION_24	IF_1
0x4006078	     0xf8eaf000000	                           jle 0x400612d	      1674	cp-demangle.c	FUNCTION_24	IF_1
0x400607e	            0x89c5	                            mov ebp, eax	      1674	cp-demangle.c	FUNCTION_24	IF_1
0x4006080	        0x4c8b6318	            mov r12, qword [rbx + 0x18] 	      1737	cp-demangle.c	FUNCTION_27	CALL_1
0x4006084	        0x488b4308	                mov rax, qword [rbx + 8]	      1739	cp-demangle.c	FUNCTION_27	IF_1
0x4006088	          0x4c29e0	                            sub rax, r12	      1739	cp-demangle.c	FUNCTION_27	IF_1
0x400608b	          0x4863d5	                         movsxd rdx, ebp	      1739	cp-demangle.c	FUNCTION_27	IF_1
0x400608e	          0x4839d0	                            cmp rax, rdx	      1739	cp-demangle.c	FUNCTION_27	IF_1
0x4006091	     0xf8c8b000000	                            jl 0x4006122	      1739	cp-demangle.c	FUNCTION_27	IF_1
0x4006097	          0x4889d0	                            mov rax, rdx	      1742	cp-demangle.c	FUNCTION_27	CALL_2
0x400609a	          0x4c01e0	                            add rax, r12	      1742	cp-demangle.c	FUNCTION_27	CALL_2
0x400609d	        0x48894318	             mov qword [rbx + 0x18], rax	      1742	cp-demangle.c	FUNCTION_27	CALL_2
0x40060a1	        0xf6431004	               test byte [rbx + 0x10], 4	      1747	cp-demangle.c	FUNCTION_27	IF_2
0x40060a5	            0x740d	                            je 0x40060b4	      1747	cp-demangle.c	FUNCTION_27	IF_2
0x40060a7	          0x803824	                    cmp byte [rax], 0x24	      1748	cp-demangle.c	FUNCTION_27	IF_2	CALL_3
0x40060aa	            0x7508	                           jne 0x40060b4	      1748	cp-demangle.c	FUNCTION_27	IF_2	CALL_3
0x40060ac	        0x4883c001	                              add rax, 1	      1749	cp-demangle.c	FUNCTION_27	CALL_4
0x40060b0	        0x48894318	             mov qword [rbx + 0x18], rax	      1749	cp-demangle.c	FUNCTION_27	CALL_4
0x40060b4	          0x83fd09	                              cmp ebp, 9	      1754	cp-demangle.c	FUNCTION_27	IF_3
0x40060b7	            0x7e5a	                           jle 0x4006113	      1754	cp-demangle.c	FUNCTION_27	IF_3
0x40060b9	      0xba08000000	                              mov edx, 8	      1755	cp-demangle.c	FUNCTION_27	IF_3	CALL_5
0x40060be	      0xbe00000000	                              mov esi, 0	      1755	cp-demangle.c	FUNCTION_27	IF_3	CALL_5
0x40060c3	          0x4c89e7	                            mov rdi, r12	      1755	cp-demangle.c	FUNCTION_27	IF_3	CALL_5
0x40060c6	      0xe800000000	                          call 0x40060cb	      1755	cp-demangle.c	FUNCTION_27	IF_3	CALL_5
0x40060cb	            0x85c0	                           test eax, eax	      1755	cp-demangle.c	FUNCTION_27	IF_3	CALL_5
0x40060cd	            0x7544	                           jne 0x4006113	      1755	cp-demangle.c	FUNCTION_27	IF_3	CALL_5
0x40060cf	    0x410fb6442408	               movzx eax, byte [r12 + 8]	      1761	cp-demangle.c	FUNCTION_27	IF_3	IF_4
0x40060d5	          0x83e824	                           sub eax, 0x24	      1761	cp-demangle.c	FUNCTION_27	IF_3	IF_4
0x40060d8	            0x3c3b	                            cmp al, 0x3b	      1761	cp-demangle.c	FUNCTION_27	IF_3	IF_4
0x40060da	            0x7737	                            ja 0x4006113	      1761	cp-demangle.c	FUNCTION_27	IF_3	IF_4
0x40060dc	    0x48ba01040000	          movabs rdx, 0x800000000000401 	      1761	cp-demangle.c	FUNCTION_27	IF_3	IF_4
0x40060e6	        0x480fa3c2	                             bt rdx, rax	      1761	cp-demangle.c	FUNCTION_27	IF_3	IF_4
0x40060ea	            0x7327	                           jae 0x4006113	      1761	cp-demangle.c	FUNCTION_27	IF_3	IF_4
0x40060ec	    0x41807c24094e	                cmp byte [r12 + 9], 0x4e	      1762	cp-demangle.c	FUNCTION_27	IF_3	IF_4
0x40060f2	            0x751f	                           jne 0x4006113	      1762	cp-demangle.c	FUNCTION_27	IF_3	IF_4
0x40060f4	          0x8b4348	            mov eax, dword [rbx + 0x48] 	      1764	cp-demangle.c	FUNCTION_27	IF_3	IF_4
0x40060f7	          0x83c016	                           add eax, 0x16	      1764	cp-demangle.c	FUNCTION_27	IF_3	IF_4
0x40060fa	            0x29e8	                            sub eax, ebp	      1764	cp-demangle.c	FUNCTION_27	IF_3	IF_4
0x40060fc	          0x894348	             mov dword [rbx + 0x48], eax	      1764	cp-demangle.c	FUNCTION_27	IF_3	IF_4
0x40060ff	      0xba15000000	                           mov edx, 0x15	      1765	cp-demangle.c	FUNCTION_27	IF_3	IF_4	CALL_6
0x4006104	      0xbe00000000	                              mov esi, 0	      1765	cp-demangle.c	FUNCTION_27	IF_3	IF_4	CALL_6
0x4006109	          0x4889df	                            mov rdi, rbx	      1765	cp-demangle.c	FUNCTION_27	IF_3	IF_4	CALL_6
0x400610c	      0xe829ffffff	                    call sym.d_make_name	      1765	cp-demangle.c	FUNCTION_27	IF_3	IF_4	CALL_6
0x4006111	            0xeb14	                           jmp 0x4006127	      1765	cp-demangle.c	FUNCTION_27	IF_3	IF_4	CALL_6
0x4006113	            0x89ea	                            mov edx, ebp	      1770	cp-demangle.c	FUNCTION_27	CALL_7
0x4006115	          0x4c89e6	                            mov rsi, r12	      1770	cp-demangle.c	FUNCTION_27	CALL_7
0x4006118	          0x4889df	                            mov rdi, rbx	      1770	cp-demangle.c	FUNCTION_27	CALL_7
0x400611b	      0xe81affffff	                    call sym.d_make_name	      1770	cp-demangle.c	FUNCTION_27	CALL_7
0x4006120	            0xeb05	                           jmp 0x4006127	      1770	cp-demangle.c	FUNCTION_27	CALL_7
0x4006122	      0xb800000000	                              mov eax, 0	      1740	cp-demangle.c	FUNCTION_27	IF_1
0x4006127	        0x48894340	             mov qword [rbx + 0x40], rax	      1677	cp-demangle.c	FUNCTION_24
0x400612b	            0xeb05	                           jmp 0x4006132	      1678	cp-demangle.c	FUNCTION_24
0x400612d	      0xb800000000	                              mov eax, 0	      1675	cp-demangle.c	FUNCTION_24	IF_1
0x4006132	              0x5b	                                 pop rbx	      1679	cp-demangle.c	FUNCTION_24
0x4006133	              0x5d	                                 pop rbp	      1679	cp-demangle.c	FUNCTION_24
0x4006134	            0x415c	                                 pop r12	      1679	cp-demangle.c	FUNCTION_24
0x4006136	              0xc3	                                     ret	      1679	cp-demangle.c	FUNCTION_24
java_demangle_v3_callback	SWITCH,0:CALL,1:IF,0:WHILE,0:ELSE,0:DO,0:FOR,0:functions,0	7
0x4009bdf	        0x4883ec08	                              sub rsp, 8	      6483	cp-demangle.c	FUNCTION_103
0x4009be3	          0x4889d1	                            mov rcx, rdx	      6484	cp-demangle.c	FUNCTION_103	CALL_1
0x4009be6	          0x4889f2	                            mov rdx, rsi	      6484	cp-demangle.c	FUNCTION_103	CALL_1
0x4009be9	      0xbe25000000	                           mov esi, 0x25	      6484	cp-demangle.c	FUNCTION_103	CALL_1
0x4009bee	      0xe87efaffff	            call sym.d_demangle_callback	      6484	cp-demangle.c	FUNCTION_103	CALL_1
0x4009bf3	        0x4883c408	                              add rsp, 8	      6487	cp-demangle.c	FUNCTION_103
0x4009bf7	              0xc3	                                     ret	      6487	cp-demangle.c	FUNCTION_103
d_call_offset	SWITCH,0:CALL,6:IF,5:WHILE,0:ELSE,2:DO,0:FOR,0:functions,0	40
0x40002c9	              0x53	                                push rbx	      2168	cp-demangle.c	ELSE_2	FUNCTION_32
0x40002ca	          0x4889fb	                            mov rbx, rdi	      2168	cp-demangle.c	ELSE_2	FUNCTION_32
0x40002cd	            0x85f6	                           test esi, esi	      2169	cp-demangle.c	ELSE_2	FUNCTION_32	IF_1
0x40002cf	            0x7519	                           jne 0x40002ea	      2169	cp-demangle.c	ELSE_2	FUNCTION_32	IF_1
0x40002d1	        0x488b5718	            mov rdx, qword [rdi + 0x18] 	      2170	cp-demangle.c	ELSE_2	FUNCTION_32	CALL_1
0x40002d5	      0xb800000000	                              mov eax, 0	      2182	cp-demangle.c	FUNCTION_32	ELSE_2
0x40002da	          0x803a00	                       cmp byte [rdx], 0	      2170	cp-demangle.c	ELSE_2	FUNCTION_32	CALL_1
0x40002dd	            0x746b	                            je 0x400034a	      2170	cp-demangle.c	ELSE_2	FUNCTION_32	CALL_1
0x40002df	        0x488d4201	                      lea rax, [rdx + 1]	      2170	cp-demangle.c	ELSE_2	FUNCTION_32	CALL_1
0x40002e3	        0x48894718	             mov qword [rdi + 0x18], rax	      2170	cp-demangle.c	ELSE_2	FUNCTION_32	CALL_1
0x40002e7	           0xfbe32	                   movsx esi, byte [rdx]	      2170	cp-demangle.c	ELSE_2	FUNCTION_32	CALL_1
0x40002ea	          0x83fe68	                           cmp esi, 0x68	      2172	cp-demangle.c	ELSE_2	FUNCTION_32	IF_2
0x40002ed	            0x750a	                           jne 0x40002f9	      2172	cp-demangle.c	ELSE_2	FUNCTION_32	IF_2
0x40002ef	          0x4889df	                            mov rdi, rbx	      2173	cp-demangle.c	ELSE_2	FUNCTION_32	CALL_2
0x40002f2	      0xe8dcfeffff	                       call sym.d_number	      2173	cp-demangle.c	ELSE_2	FUNCTION_32	CALL_2
0x40002f7	            0xeb30	                           jmp 0x4000329	      2173	cp-demangle.c	ELSE_2	FUNCTION_32	CALL_2
0x40002f9	      0xb800000000	                              mov eax, 0	      2182	cp-demangle.c	FUNCTION_32	ELSE_2
0x40002fe	          0x83fe76	                           cmp esi, 0x76	      2174	cp-demangle.c	ELSE_2	FUNCTION_32	ELSE_1	IF_3
0x4000301	            0x7547	                           jne 0x400034a	      2174	cp-demangle.c	ELSE_2	FUNCTION_32	ELSE_1	IF_3
0x4000303	          0x4889df	                            mov rdi, rbx	      2176	cp-demangle.c	ELSE_2	FUNCTION_32	ELSE_1	IF_3	CALL_3
0x4000306	      0xe8c8feffff	                       call sym.d_number	      2176	cp-demangle.c	ELSE_2	FUNCTION_32	ELSE_1	IF_3	CALL_3
0x400030b	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      2177	cp-demangle.c	ELSE_2	FUNCTION_32	ELSE_1	IF_3	IF_4	CALL_4
0x400030f	      0xb800000000	                              mov eax, 0	      2178	cp-demangle.c	ELSE_2	FUNCTION_32	ELSE_1	IF_3	IF_4
0x4000314	          0x803a5f	                    cmp byte [rdx], 0x5f	      2177	cp-demangle.c	ELSE_2	FUNCTION_32	ELSE_1	IF_3	IF_4	CALL_4
0x4000317	            0x7531	                           jne 0x400034a	      2177	cp-demangle.c	ELSE_2	FUNCTION_32	ELSE_1	IF_3	IF_4	CALL_4
0x4000319	        0x4883c201	                              add rdx, 1	      2177	cp-demangle.c	ELSE_2	FUNCTION_32	ELSE_1	IF_3	IF_4	CALL_4
0x400031d	        0x48895318	             mov qword [rbx + 0x18], rdx	      2177	cp-demangle.c	ELSE_2	FUNCTION_32	ELSE_1	IF_3	IF_4	CALL_4
0x4000321	          0x4889df	                            mov rdi, rbx	      2179	cp-demangle.c	ELSE_2	FUNCTION_32	ELSE_1	IF_3	CALL_5
0x4000324	      0xe8aafeffff	                       call sym.d_number	      2179	cp-demangle.c	ELSE_2	FUNCTION_32	ELSE_1	IF_3	CALL_5
0x4000329	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      2184	cp-demangle.c	FUNCTION_32	ELSE_2	IF_5	CALL_6
0x400032d	      0xb801000000	                              mov eax, 1	      2184	cp-demangle.c	FUNCTION_32	ELSE_2	IF_5	CALL_6
0x4000332	          0x803a5f	                    cmp byte [rdx], 0x5f	      2184	cp-demangle.c	FUNCTION_32	ELSE_2	IF_5	CALL_6
0x4000335	            0x750d	                           jne 0x4000344	      2184	cp-demangle.c	FUNCTION_32	ELSE_2	IF_5	CALL_6
0x4000337	        0x4883c201	                              add rdx, 1	      2184	cp-demangle.c	FUNCTION_32	ELSE_2	IF_5	CALL_6
0x400033b	        0x48895318	             mov qword [rbx + 0x18], rdx	      2184	cp-demangle.c	FUNCTION_32	ELSE_2	IF_5	CALL_6
0x400033f	      0xb800000000	                              mov eax, 0	      2184	cp-demangle.c	FUNCTION_32	ELSE_2	IF_5	CALL_6
0x4000344	          0x83f001	                              xor eax, 1	      2178	cp-demangle.c	ELSE_2	FUNCTION_32	ELSE_1	IF_3	IF_4
0x4000347	           0xfb6c0	                           movzx eax, al	      2178	cp-demangle.c	ELSE_2	FUNCTION_32	ELSE_1	IF_3	IF_4
0x400034a	              0x5b	                                 pop rbx	      2188	cp-demangle.c	FUNCTION_32	ELSE_2
0x400034b	              0xc3	                                     ret	      2188	cp-demangle.c	FUNCTION_32	ELSE_2
