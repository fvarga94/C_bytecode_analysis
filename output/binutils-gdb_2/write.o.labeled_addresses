relax_seg	CALL,2:FOR,0:SWITCH,0:WHILE,0:DO,0:functions,0:IF,1:ELSE,0	16
0x40029a2	    0x488b86a80000	            mov rax, qword [rsi + 0xa8] 	       551	write.c	FUNCTION_13	CALL_1
0x40029a9	          0x4885c0	                           test rax, rax	       554	write.c	FUNCTION_13	IF_1
0x40029ac	            0x7422	                            je 0x40029d0	       554	write.c	FUNCTION_13	IF_1
0x40029ae	          0x488b00	                    mov rax, qword [rax]	       554	write.c	FUNCTION_13	IF_1
0x40029b1	          0x4885c0	                           test rax, rax	       554	write.c	FUNCTION_13	IF_1
0x40029b4	            0x741a	                            je 0x40029d0	       554	write.c	FUNCTION_13	IF_1
0x40029b6	              0x53	                                push rbx	       550	write.c	FUNCTION_13
0x40029b7	          0x4889d3	                            mov rbx, rdx	       550	write.c	FUNCTION_13
0x40029ba	            0x8b12	                    mov edx, dword [rdx]	       555	write.c	FUNCTION_13	IF_1	CALL_2
0x40029bc	          0x488b38	                    mov rdi, qword [rax]	       555	write.c	FUNCTION_13	IF_1	CALL_2
0x40029bf	      0xe800000000	                          call 0x40029c4	       555	write.c	FUNCTION_13	IF_1	CALL_2
0x40029c4	            0x85c0	                           test eax, eax	       555	write.c	FUNCTION_13	IF_1	CALL_2
0x40029c6	            0x7407	                            je 0x40029cf	       555	write.c	FUNCTION_13	IF_1	CALL_2
0x40029c8	    0xc74304010000	                  mov dword [rbx + 4], 1	       556	write.c	FUNCTION_13	IF_1
0x40029cf	              0x5b	                                 pop rbx	       557	write.c	FUNCTION_13
0x40029d0	            0xf3c3	                                     ret	       557	write.c	FUNCTION_13
renumber_sections	CALL,0:FOR,0:SWITCH,0:WHILE,0:DO,0:functions,0:IF,0:ELSE,0	4
0x4000040	            0x8b02	                    mov eax, dword [rdx]	       384	write.c	FUNCTION_9
0x4000042	          0x89460c	              mov dword [rsi + 0xc], eax	       384	write.c	FUNCTION_9
0x4000045	          0x830201	                      add dword [rdx], 1	       385	write.c	FUNCTION_9
0x4000048	              0xc3	                                     ret	       385	write.c	FUNCTION_9
size_seg	CALL,12:FOR,2:SWITCH,0:WHILE,1:DO,0:functions,0:IF,6:ELSE,3	242
0x4000ee7	            0x4157	                                push r15	       561	write.c	FUNCTION_14
0x4000ee9	            0x4156	                                push r14	       561	write.c	FUNCTION_14
0x4000eeb	            0x4155	                                push r13	       561	write.c	FUNCTION_14
0x4000eed	            0x4154	                                push r12	       561	write.c	FUNCTION_14
0x4000eef	              0x55	                                push rbp	       561	write.c	FUNCTION_14
0x4000ef0	              0x53	                                push rbx	       561	write.c	FUNCTION_14
0x4000ef1	        0x4883ec08	                              sub rsp, 8	       561	write.c	FUNCTION_14
0x4000ef5	          0x4989fe	                            mov r14, rdi	       561	write.c	FUNCTION_14
0x4000ef8	          0x4989f4	                            mov r12, rsi	       561	write.c	FUNCTION_14
0x4000efb	      0xbe00000000	                              mov esi, 0	       568	write.c	FUNCTION_14	CALL_1
0x4000f00	          0x4c89e7	                            mov rdi, r12	       568	write.c	FUNCTION_14	CALL_1
0x4000f03	      0xe800000000	                          call 0x4000f08	       568	write.c	FUNCTION_14	CALL_1
0x4000f08	    0x4d8bac24a800	            mov r13, qword [r12 + 0xa8] 	       570	write.c	FUNCTION_14	CALL_2
0x4000f10	          0x4d85ed	                           test r13, r13	       571	write.c	FUNCTION_14	IF_1
0x4000f13	     0xf8439030000	                            je 0x4001252	       571	write.c	FUNCTION_14	IF_1
0x4000f19	        0x498b4500	                    mov rax, qword [r13]	       571	write.c	FUNCTION_14	IF_1
0x4000f1d	          0x4885c0	                           test rax, rax	       571	write.c	FUNCTION_14	IF_1
0x4000f20	     0xf842c030000	                            je 0x4001252	       571	write.c	FUNCTION_14	IF_1
0x4000f26	          0x488b18	                    mov rbx, qword [rax]	       573	write.c	FUNCTION_14	IF_1	FOR_1
0x4000f29	          0x4885db	                           test rbx, rbx	       573	write.c	FUNCTION_14	IF_1	FOR_1
0x4000f2c	     0xf84f0010000	                            je 0x4001122	       573	write.c	FUNCTION_14	IF_1	FOR_1
0x4000f32	          0x8b6b5c	            mov ebp, dword [rbx + 0x5c] 	       436	write.c	FUNCTION_12	SWITCH_1
0x4000f35	          0x83fd0d	                            cmp ebp, 0xd	       436	write.c	FUNCTION_12	SWITCH_1
0x4000f38	     0xf87aa010000	                            ja 0x40010e8	       436	write.c	FUNCTION_12	SWITCH_1
0x4000f3e	            0x89e8	                            mov eax, ebp	       436	write.c	FUNCTION_12	SWITCH_1
0x4000f40	    0xff24c5000000	                       jmp qword [rax*8]	       436	write.c	FUNCTION_12	SWITCH_1
0x4000f47	          0x83fd03	                              cmp ebp, 3	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x4000f4a	            0x7530	                           jne 0x4000f7c	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x4000f4c	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x4000f50	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x4000f54	          0x488b12	                    mov rdx, qword [rdx]	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x4000f57	          0x482b13	                    sub rdx, qword [rbx]	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x4000f5a	          0x4829c2	                            sub rdx, rax	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x4000f5d	        0x488d4aff	                      lea rcx, [rdx - 1]	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x4000f61	    0x4881f9fe0f00	                          cmp rcx, 0xffe	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x4000f68	            0x7712	                            ja 0x4000f7c	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x4000f6a	      0x488d74037c	            lea rsi, [rbx + rax + 0x7c] 	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x4000f6f	      0xb900000000	                              mov ecx, 0	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x4000f74	          0x4889df	                            mov rdi, rbx	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x4000f77	      0xe800000000	                          call 0x4000f7c	       446	write.c	FUNCTION_12	SWITCH_1	CALL_1
0x4000f7c	        0x488b4338	            mov rax, qword [rbx + 0x38] 	       449	write.c	FUNCTION_12	SWITCH_1	CALL_2
0x4000f80	          0x4885c0	                           test rax, rax	       449	write.c	FUNCTION_12	SWITCH_1	CALL_2
0x4000f83	            0x7514	                           jne 0x4000f99	       449	write.c	FUNCTION_12	SWITCH_1	CALL_2
0x4000f85	      0xba00000000	                              mov edx, 0	       449	write.c	FUNCTION_12	SWITCH_1	CALL_2
0x4000f8a	      0xbec1010000	                          mov esi, 0x1c1	       449	write.c	FUNCTION_12	SWITCH_1	CALL_2
0x4000f8f	      0xbf00000000	                              mov edi, 0	       449	write.c	FUNCTION_12	SWITCH_1	CALL_2
0x4000f94	      0xe800000000	                          call 0x4000f99	       449	write.c	FUNCTION_12	SWITCH_1	CALL_2
0x4000f99	          0x488b00	                    mov rax, qword [rax]	       450	write.c	FUNCTION_12	SWITCH_1
0x4000f9c	          0x482b03	                    sub rax, qword [rbx]	       450	write.c	FUNCTION_12	SWITCH_1
0x4000f9f	        0x482b4310	             sub rax, qword [rbx + 0x10]	       450	write.c	FUNCTION_12	SWITCH_1
0x4000fa3	      0xba00000000	                              mov edx, 0	       450	write.c	FUNCTION_12	SWITCH_1
0x4000fa8	        0x48f77318	                  div qword [rbx + 0x18]	       450	write.c	FUNCTION_12	SWITCH_1
0x4000fac	          0x4889c5	                            mov rbp, rax	       450	write.c	FUNCTION_12	SWITCH_1
0x4000faf	        0x48894320	             mov qword [rbx + 0x20], rax	       450	write.c	FUNCTION_12	SWITCH_1
0x4000fb3	          0x4885c0	                           test rax, rax	       453	write.c	FUNCTION_12	SWITCH_1	IF_1
0x4000fb6	            0x7933	                           jns 0x4000feb	       453	write.c	FUNCTION_12	SWITCH_1	IF_1
0x4000fb8	      0xba05000000	                              mov edx, 5	       456	write.c	FUNCTION_12	SWITCH_1	IF_1	CALL_4
0x4000fbd	      0xbe00000000	                              mov esi, 0	       456	write.c	FUNCTION_12	SWITCH_1	IF_1	CALL_4
0x4000fc2	      0xbf00000000	                              mov edi, 0	       456	write.c	FUNCTION_12	SWITCH_1	IF_1	CALL_4
0x4000fc7	      0xe800000000	                          call 0x4000fcc	       456	write.c	FUNCTION_12	SWITCH_1	IF_1	CALL_4
0x4000fcc	          0x8b7348	            mov esi, dword [rbx + 0x48] 	       455	write.c	FUNCTION_12	SWITCH_1	IF_1	CALL_3
0x4000fcf	        0x488b7b40	            mov rdi, qword [rbx + 0x40] 	       455	write.c	FUNCTION_12	SWITCH_1	IF_1	CALL_3
0x4000fd3	          0x4889e9	                            mov rcx, rbp	       455	write.c	FUNCTION_12	SWITCH_1	IF_1	CALL_3
0x4000fd6	          0x4889c2	                            mov rdx, rax	       455	write.c	FUNCTION_12	SWITCH_1	IF_1	CALL_3
0x4000fd9	      0xb800000000	                              mov eax, 0	       455	write.c	FUNCTION_12	SWITCH_1	IF_1	CALL_3
0x4000fde	      0xe800000000	                          call 0x4000fe3	       455	write.c	FUNCTION_12	SWITCH_1	IF_1	CALL_3
0x4000fe3	    0x48c743200000	               mov qword [rbx + 0x20], 0	       458	write.c	FUNCTION_12	SWITCH_1	IF_1
0x4000feb	        0x837b5c09	               cmp dword [rbx + 0x5c], 9	       461	write.c	FUNCTION_12	SWITCH_1	IF_2
0x4000fef	           0xf94c0	                                 sete al	       461	write.c	FUNCTION_12	SWITCH_1	IF_2
0x4000ff2	           0xfb6c0	                           movzx eax, al	       461	write.c	FUNCTION_12	SWITCH_1	IF_2
0x4000ff5	        0x8d44c001	              lea eax, [rax + rax*8 + 1]	       461	write.c	FUNCTION_12	SWITCH_1	IF_2
0x4000ff9	          0x89435c	             mov dword [rbx + 0x5c], eax	       461	write.c	FUNCTION_12	SWITCH_1	IF_2
0x4000ffc	      0xe914010000	                           jmp 0x4001115	       461	write.c	FUNCTION_12	SWITCH_1	IF_2
0x4001001	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	       472	write.c	FUNCTION_12	SWITCH_1	CALL_5
0x4001005	      0xe800000000	                          call 0x400100a	       472	write.c	FUNCTION_12	SWITCH_1	CALL_5
0x400100a	          0x4889c5	                            mov rbp, rax	       472	write.c	FUNCTION_12	SWITCH_1	CALL_5
0x400100d	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	       475	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_6
0x4001011	      0xe800000000	                          call 0x4001016	       475	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_6
0x4001016	            0x85c0	                           test eax, eax	       475	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_6
0x4001018	            0x7537	                           jne 0x4001051	       475	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_6
0x400101a	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	       477	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_7
0x400101e	      0xe800000000	                          call 0x4001023	       477	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_7
0x4001023	          0x4989c7	                            mov r15, rax	       477	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_7
0x4001026	      0xba05000000	                              mov edx, 5	       478	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_8
0x400102b	      0xbe00000000	                              mov esi, 0	       478	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_8
0x4001030	      0xbf00000000	                              mov edi, 0	       478	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_8
0x4001035	      0xe800000000	                          call 0x400103a	       478	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_8
0x400103a	          0x8b7348	            mov esi, dword [rbx + 0x48] 	       477	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_7
0x400103d	        0x488b7b40	            mov rdi, qword [rbx + 0x40] 	       477	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_7
0x4001041	          0x4c89f9	                            mov rcx, r15	       477	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_7
0x4001044	          0x4889c2	                            mov rdx, rax	       477	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_7
0x4001047	      0xb800000000	                              mov eax, 0	       477	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_7
0x400104c	      0xe800000000	                          call 0x4001051	       477	write.c	FUNCTION_12	SWITCH_1	IF_3	CALL_7
0x4001051	          0x8b5360	            mov edx, dword [rbx + 0x60] 	       482	write.c	FUNCTION_12	SWITCH_1	CALL_10
0x4001054	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       482	write.c	FUNCTION_12	SWITCH_1	CALL_10
0x4001058	      0x488d7c037c	            lea rdi, [rbx + rax + 0x7c] 	       482	write.c	FUNCTION_12	SWITCH_1	CALL_10
0x400105d	          0x4889ee	                            mov rsi, rbp	       482	write.c	FUNCTION_12	SWITCH_1	CALL_10
0x4001060	      0xe800000000	                          call 0x4001065	       482	write.c	FUNCTION_12	SWITCH_1	CALL_10
0x4001065	            0x4898	                                    cdqe	       485	write.c	FUNCTION_12	SWITCH_1
0x4001067	        0x48014310	            add qword [rbx + 0x10], rax 	       485	write.c	FUNCTION_12	SWITCH_1
0x400106b	    0xc7435c010000	               mov dword [rbx + 0x5c], 1	       486	write.c	FUNCTION_12	SWITCH_1
0x4001072	    0x48c743180000	               mov qword [rbx + 0x18], 0	       487	write.c	FUNCTION_12	SWITCH_1
0x400107a	    0x48c743200000	               mov qword [rbx + 0x20], 0	       488	write.c	FUNCTION_12	SWITCH_1
0x4001082	    0x48c743280000	               mov qword [rbx + 0x28], 0	       489	write.c	FUNCTION_12	SWITCH_1
0x400108a	      0xe986000000	                           jmp 0x4001115	       489	write.c	FUNCTION_12	SWITCH_1
0x400108f	          0x4889df	                            mov rdi, rbx	       494	write.c	FUNCTION_12	SWITCH_1	CALL_11
0x4001092	      0xe800000000	                          call 0x4001097	       494	write.c	FUNCTION_12	SWITCH_1	CALL_11
0x4001097	            0xeb7c	                           jmp 0x4001115	       494	write.c	FUNCTION_12	SWITCH_1	CALL_11
0x4001099	          0x4889df	                            mov rdi, rbx	       498	write.c	FUNCTION_12	SWITCH_1	CALL_12
0x400109c	      0xe800000000	                          call 0x40010a1	       498	write.c	FUNCTION_12	SWITCH_1	CALL_12
0x40010a1	            0xeb72	                           jmp 0x4001115	       498	write.c	FUNCTION_12	SWITCH_1	CALL_12
0x40010a3	          0x4889da	                            mov rdx, rbx	       502	write.c	FUNCTION_12	SWITCH_1	CALL_13
0x40010a6	          0x4c89e6	                            mov rsi, r12	       502	write.c	FUNCTION_12	SWITCH_1	CALL_13
0x40010a9	    0x488b3d000000	            mov rdi, qword [0x040010b0] 	       502	write.c	FUNCTION_12	SWITCH_1	CALL_13
0x40010b0	      0xe800000000	                          call 0x40010b5	       502	write.c	FUNCTION_12	SWITCH_1	CALL_13
0x40010b5	        0x488b4338	            mov rax, qword [rbx + 0x38] 	       504	write.c	FUNCTION_12	SWITCH_1	CALL_14
0x40010b9	          0x4885c0	                           test rax, rax	       504	write.c	FUNCTION_12	SWITCH_1	CALL_14
0x40010bc	            0x7420	                            je 0x40010de	       504	write.c	FUNCTION_12	SWITCH_1	CALL_14
0x40010be	          0x488b00	                    mov rax, qword [rax]	       504	write.c	FUNCTION_12	SWITCH_1	CALL_14
0x40010c1	          0x482b03	                    sub rax, qword [rbx]	       504	write.c	FUNCTION_12	SWITCH_1	CALL_14
0x40010c4	        0x483b4310	            cmp rax, qword [rbx + 0x10] 	       504	write.c	FUNCTION_12	SWITCH_1	CALL_14
0x40010c8	            0x7414	                            je 0x40010de	       504	write.c	FUNCTION_12	SWITCH_1	CALL_14
0x40010ca	      0xba00000000	                              mov edx, 0	       504	write.c	FUNCTION_12	SWITCH_1	CALL_14
0x40010cf	      0xbefa010000	                          mov esi, 0x1fa	       504	write.c	FUNCTION_12	SWITCH_1	CALL_14
0x40010d4	      0xbf00000000	                              mov edi, 0	       504	write.c	FUNCTION_12	SWITCH_1	CALL_14
0x40010d9	      0xe800000000	                          call 0x40010de	       504	write.c	FUNCTION_12	SWITCH_1	CALL_14
0x40010de	          0x4889df	                            mov rdi, rbx	       511	write.c	FUNCTION_12	SWITCH_1	CALL_15
0x40010e1	      0xe800000000	                          call 0x40010e6	       511	write.c	FUNCTION_12	SWITCH_1	CALL_15
0x40010e6	            0xeb2d	                           jmp 0x4001115	       511	write.c	FUNCTION_12	SWITCH_1	CALL_15
0x40010e8	      0xba05000000	                              mov edx, 5	       534	write.c	FUNCTION_12	SWITCH_1	CALL_17
0x40010ed	      0xbe00000000	                              mov esi, 0	       534	write.c	FUNCTION_12	SWITCH_1	CALL_17
0x40010f2	      0xbf00000000	                              mov edi, 0	       534	write.c	FUNCTION_12	SWITCH_1	CALL_17
0x40010f7	      0xe800000000	                          call 0x40010fc	       534	write.c	FUNCTION_12	SWITCH_1	CALL_17
0x40010fc	            0x89ee	                            mov esi, ebp	       534	write.c	FUNCTION_12	SWITCH_1	CALL_17
0x40010fe	      0xb900000000	                              mov ecx, 0	       534	write.c	FUNCTION_12	SWITCH_1	CALL_17
0x4001103	      0xba16020000	                          mov edx, 0x216	       534	write.c	FUNCTION_12	SWITCH_1	CALL_17
0x4001108	          0x4889c7	                            mov rdi, rax	       534	write.c	FUNCTION_12	SWITCH_1	CALL_17
0x400110b	      0xb800000000	                              mov eax, 0	       534	write.c	FUNCTION_12	SWITCH_1	CALL_17
0x4001110	      0xe800000000	                          call 0x4001115	       534	write.c	FUNCTION_12	SWITCH_1	CALL_17
0x4001115	        0x488b5b38	            mov rbx, qword [rbx + 0x38] 	       573	write.c	FUNCTION_14	IF_1	FOR_1
0x4001119	          0x4885db	                           test rbx, rbx	       573	write.c	FUNCTION_14	IF_1	FOR_1
0x400111c	     0xf8510feffff	                           jne 0x4000f32	       573	write.c	FUNCTION_14	IF_1	FOR_1
0x4001122	        0x498b4500	                    mov rax, qword [r13]	       575	write.c	FUNCTION_14	IF_1	FOR_2
0x4001126	          0x488b08	                    mov rcx, qword [rax]	       575	write.c	FUNCTION_14	IF_1	FOR_2
0x4001129	            0xeb03	                           jmp 0x400112e	       575	write.c	FUNCTION_14	IF_1	FOR_2
0x400112b	          0x4889c1	                            mov rcx, rax	       577	write.c	FUNCTION_14	IF_1	FOR_2
0x400112e	        0x488b4138	            mov rax, qword [rcx + 0x38] 	       576	write.c	FUNCTION_14	IF_1	FOR_2
0x4001132	          0x4885c0	                           test rax, rax	       575	write.c	FUNCTION_14	IF_1	FOR_2
0x4001135	            0x75f4	                           jne 0x400112b	       575	write.c	FUNCTION_14	IF_1	FOR_2
0x4001137	        0x488b6910	            mov rbp, qword [rcx + 0x10] 	       580	write.c	FUNCTION_14	IF_1
0x400113b	      0x418b542420	            mov edx, dword [r12 + 0x20] 	       585	write.c	FUNCTION_14
0x4001140	          0x480329	                    add rbp, qword [rcx]	       586	write.c	FUNCTION_14	IF_2
0x4001143	            0x7517	                           jne 0x400115c	       586	write.c	FUNCTION_14	IF_2
0x4001145	    0x49837c243800	               cmp qword [r12 + 0x38], 0	       586	write.c	FUNCTION_14	IF_2
0x400114b	            0x7423	                            je 0x4001170	       586	write.c	FUNCTION_14	IF_2
0x400114d	      0xbd00000000	                              mov ebp, 0	       586	write.c	FUNCTION_14	IF_2
0x4001152	          0xf6c601	                              test dh, 1	       586	write.c	FUNCTION_14	IF_2
0x4001155	            0x741e	                            je 0x4001175	       586	write.c	FUNCTION_14	IF_2
0x4001157	      0xe916010000	                           jmp 0x4001272	       586	write.c	FUNCTION_14	IF_2
0x400115c	      0x410fb64508	               movzx eax, byte [r13 + 8]	       590	write.c	FUNCTION_14	IF_3
0x4001161	          0x83e002	                              and eax, 2	       590	write.c	FUNCTION_14	IF_3
0x4001164	            0x89d1	                            mov ecx, edx	       591	write.c	FUNCTION_14	IF_3
0x4001166	          0x80cd01	                                or ch, 1	       591	write.c	FUNCTION_14	IF_3
0x4001169	            0x84c0	                             test al, al	       591	write.c	FUNCTION_14	IF_3
0x400116b	           0xf44d1	                          cmove edx, ecx	       591	write.c	FUNCTION_14	IF_3
0x400116e	            0xeb05	                           jmp 0x4001175	       591	write.c	FUNCTION_14	IF_3
0x4001170	      0xbd00000000	                              mov ebp, 0	       591	write.c	FUNCTION_14	IF_3
0x4001175	          0x83e2fb	                     and edx, 0xfffffffb	       594	write.c	FUNCTION_14	CALL_4
0x4001178	          0x4c89e6	                            mov rsi, r12	       594	write.c	FUNCTION_14	CALL_4
0x400117b	          0x4c89f7	                            mov rdi, r14	       594	write.c	FUNCTION_14	CALL_4
0x400117e	      0xe800000000	                          call 0x4001183	       594	write.c	FUNCTION_14	CALL_4
0x4001183	            0x85c0	                           test eax, eax	       595	write.c	FUNCTION_14	CALL_5
0x4001185	            0x7514	                           jne 0x400119b	       595	write.c	FUNCTION_14	CALL_5
0x4001187	      0xba00000000	                              mov edx, 0	       595	write.c	FUNCTION_14	CALL_5
0x400118c	      0xbe53020000	                          mov esi, 0x253	       595	write.c	FUNCTION_14	CALL_5
0x4001191	      0xbf00000000	                              mov edi, 0	       595	write.c	FUNCTION_14	CALL_5
0x4001196	      0xe800000000	                          call 0x400119b	       595	write.c	FUNCTION_14	CALL_5
0x400119b	    0x833d00000000	               cmp dword [0x040011a2], 0	       599	write.c	FUNCTION_14	IF_4
0x40011a2	     0xf85b4000000	                           jne 0x400125c	       599	write.c	FUNCTION_14	IF_4
0x40011a8	          0x4889ee	                            mov rsi, rbp	       602	write.c	FUNCTION_14	CALL_6
0x40011ab	          0x4c89e7	                            mov rdi, r12	       602	write.c	FUNCTION_14	CALL_6
0x40011ae	      0xe800000000	                          call 0x40011b3	       602	write.c	FUNCTION_14	CALL_6
0x40011b3	          0x4889c3	                            mov rbx, rax	       602	write.c	FUNCTION_14	CALL_6
0x40011b6	          0x4889c2	                            mov rdx, rax	       603	write.c	FUNCTION_14	CALL_7
0x40011b9	          0x4c89e6	                            mov rsi, r12	       603	write.c	FUNCTION_14	CALL_7
0x40011bc	          0x4c89f7	                            mov rdi, r14	       603	write.c	FUNCTION_14	CALL_7
0x40011bf	      0xe800000000	                          call 0x40011c4	       603	write.c	FUNCTION_14	CALL_7
0x40011c4	            0x85c0	                           test eax, eax	       604	write.c	FUNCTION_14	CALL_8
0x40011c6	            0x7514	                           jne 0x40011dc	       604	write.c	FUNCTION_14	CALL_8
0x40011c8	      0xba00000000	                              mov edx, 0	       604	write.c	FUNCTION_14	CALL_8
0x40011cd	      0xbe5c020000	                          mov esi, 0x25c	       604	write.c	FUNCTION_14	CALL_8
0x40011d2	      0xbf00000000	                              mov edi, 0	       604	write.c	FUNCTION_14	CALL_8
0x40011d7	      0xe800000000	                          call 0x40011dc	       604	write.c	FUNCTION_14	CALL_8
0x40011dc	          0x4839eb	                            cmp rbx, rbp	       608	write.c	FUNCTION_14	CALL_9
0x40011df	            0x7314	                           jae 0x40011f5	       608	write.c	FUNCTION_14	CALL_9
0x40011e1	      0xba00000000	                              mov edx, 0	       608	write.c	FUNCTION_14	CALL_9
0x40011e6	      0xbe60020000	                          mov esi, 0x260	       608	write.c	FUNCTION_14	CALL_9
0x40011eb	      0xbf00000000	                              mov edi, 0	       608	write.c	FUNCTION_14	CALL_9
0x40011f0	      0xe800000000	                          call 0x40011f5	       608	write.c	FUNCTION_14	CALL_9
0x40011f5	          0x4839eb	                            cmp rbx, rbp	       609	write.c	FUNCTION_14	IF_5
0x40011f8	            0x7478	                            je 0x4001272	       609	write.c	FUNCTION_14	IF_5
0x40011fa	        0x498b5500	                    mov rdx, qword [r13]	       611	write.c	FUNCTION_14	IF_5
0x40011fe	        0x488b4208	                mov rax, qword [rdx + 8]	       611	write.c	FUNCTION_14	IF_5
0x4001202	          0x488b32	                    mov rsi, qword [rdx]	       612	write.c	FUNCTION_14	IF_5
0x4001205	            0xeb03	                           jmp 0x400120a	       613	write.c	FUNCTION_14	IF_5	WHILE_1
0x4001207	          0x4889ce	                            mov rsi, rcx	       614	write.c	FUNCTION_14	IF_5	WHILE_1
0x400120a	        0x488b4e38	            mov rcx, qword [rsi + 0x38] 	       613	write.c	FUNCTION_14	IF_5	WHILE_1
0x400120e	          0x4839c8	                            cmp rax, rcx	       613	write.c	FUNCTION_14	IF_5	WHILE_1
0x4001211	            0x75f4	                           jne 0x4001207	       613	write.c	FUNCTION_14	IF_5	WHILE_1
0x4001213	          0x488928	                    mov qword [rax], rbp	       615	write.c	FUNCTION_14	IF_5
0x4001216	          0x4829eb	                            sub rbx, rbp	       616	write.c	FUNCTION_14	IF_5	IF_6
0x4001219	        0x488b4e18	            mov rcx, qword [rsi + 0x18] 	       616	write.c	FUNCTION_14	IF_5	IF_6
0x400121d	          0x4889d8	                            mov rax, rbx	       616	write.c	FUNCTION_14	IF_5	IF_6
0x4001220	      0xba00000000	                              mov edx, 0	       616	write.c	FUNCTION_14	IF_5	IF_6
0x4001225	          0x48f7f1	                                 div rcx	       616	write.c	FUNCTION_14	IF_5	IF_6
0x4001228	          0x4885d2	                           test rdx, rdx	       616	write.c	FUNCTION_14	IF_5	IF_6
0x400122b	            0x7511	                           jne 0x400123e	       616	write.c	FUNCTION_14	IF_5	IF_6
0x400122d	          0x4889d8	                            mov rax, rbx	       617	write.c	FUNCTION_14	IF_5	IF_6
0x4001230	      0xba00000000	                              mov edx, 0	       617	write.c	FUNCTION_14	IF_5	IF_6
0x4001235	          0x48f7f1	                                 div rcx	       617	write.c	FUNCTION_14	IF_5	IF_6
0x4001238	        0x48014620	            add qword [rsi + 0x20], rax 	       617	write.c	FUNCTION_14	IF_5	IF_6
0x400123c	            0xeb34	                           jmp 0x4001272	       617	write.c	FUNCTION_14	IF_5	IF_6
0x400123e	      0xba00000000	                              mov edx, 0	       623	write.c	FUNCTION_14	IF_5	CALL_10
0x4001243	      0xbe6f020000	                          mov esi, 0x26f	       623	write.c	FUNCTION_14	IF_5	CALL_10
0x4001248	      0xbf00000000	                              mov edi, 0	       623	write.c	FUNCTION_14	IF_5	CALL_10
0x400124d	      0xe800000000	                          call 0x4001252	       623	write.c	FUNCTION_14	IF_5	CALL_10
0x4001252	      0x418b542420	            mov edx, dword [r12 + 0x20] 	       585	write.c	FUNCTION_14
0x4001257	      0xe9e9feffff	                           jmp 0x4001145	       585	write.c	FUNCTION_14
0x400125c	          0x4889ea	                            mov rdx, rbp	       603	write.c	FUNCTION_14	CALL_7
0x400125f	          0x4c89e6	                            mov rsi, r12	       603	write.c	FUNCTION_14	CALL_7
0x4001262	          0x4c89f7	                            mov rdi, r14	       603	write.c	FUNCTION_14	CALL_7
0x4001265	      0xe800000000	                          call 0x400126a	       603	write.c	FUNCTION_14	CALL_7
0x400126a	            0x85c0	                           test eax, eax	       604	write.c	FUNCTION_14	CALL_8
0x400126c	     0xf8456ffffff	                            je 0x40011c8	       604	write.c	FUNCTION_14	CALL_8
0x4001272	        0x4883c408	                              add rsp, 8	       632	write.c	FUNCTION_14
0x4001276	              0x5b	                                 pop rbx	       632	write.c	FUNCTION_14
0x4001277	              0x5d	                                 pop rbp	       632	write.c	FUNCTION_14
0x4001278	            0x415c	                                 pop r12	       632	write.c	FUNCTION_14
0x400127a	            0x415d	                                 pop r13	       632	write.c	FUNCTION_14
0x400127c	            0x415e	                                 pop r14	       632	write.c	FUNCTION_14
0x400127e	            0x415f	                                 pop r15	       632	write.c	FUNCTION_14
0x4001280	              0xc3	                                     ret	       632	write.c	FUNCTION_14
get_frag_for_reloc	CALL,2:FOR,3:SWITCH,0:WHILE,0:DO,0:functions,0:IF,3:ELSE,0	54
0x40008c2	              0x53	                                push rbx	      1196	write.c	FUNCTION_20
0x40008c3	          0x4889d3	                            mov rbx, rdx	      1196	write.c	FUNCTION_20
0x40008c6	          0x4885ff	                           test rdi, rdi	      1199	write.c	FUNCTION_20	FOR_1
0x40008c9	            0x741e	                            je 0x40008e9	      1199	write.c	FUNCTION_20	FOR_1
0x40008cb	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	      1200	write.c	FUNCTION_20	FOR_1	IF_1
0x40008cf	          0x488b07	                    mov rax, qword [rdi]	      1200	write.c	FUNCTION_20	FOR_1	IF_1
0x40008d2	          0x4839d0	                            cmp rax, rdx	      1200	write.c	FUNCTION_20	FOR_1	IF_1
0x40008d5	            0x7709	                            ja 0x40008e0	      1200	write.c	FUNCTION_20	FOR_1	IF_1
0x40008d7	        0x48034710	             add rax, qword [rdi + 0x10]	      1201	write.c	FUNCTION_20	FOR_1	IF_1
0x40008db	          0x4839c2	                            cmp rdx, rax	      1201	write.c	FUNCTION_20	FOR_1	IF_1
0x40008de	            0x727e	                            jb 0x400095e	      1201	write.c	FUNCTION_20	FOR_1	IF_1
0x40008e0	        0x488b7f38	            mov rdi, qword [rdi + 0x38] 	      1199	write.c	FUNCTION_20	FOR_1
0x40008e4	          0x4885ff	                           test rdi, rdi	      1199	write.c	FUNCTION_20	FOR_1
0x40008e7	            0x75e6	                           jne 0x40008cf	      1199	write.c	FUNCTION_20	FOR_1
0x40008e9	          0x488b06	                    mov rax, qword [rsi]	      1204	write.c	FUNCTION_20	FOR_2
0x40008ec	          0x488b38	                    mov rdi, qword [rax]	      1204	write.c	FUNCTION_20	FOR_2
0x40008ef	          0x4885ff	                           test rdi, rdi	      1204	write.c	FUNCTION_20	FOR_2
0x40008f2	            0x743b	                            je 0x400092f	      1204	write.c	FUNCTION_20	FOR_2
0x40008f4	        0x488b4b20	            mov rcx, qword [rbx + 0x20] 	      1205	write.c	FUNCTION_20	FOR_2	IF_2
0x40008f8	          0x4889f8	                            mov rax, rdi	      1205	write.c	FUNCTION_20	FOR_2	IF_2
0x40008fb	          0x488b10	                    mov rdx, qword [rax]	      1205	write.c	FUNCTION_20	FOR_2	IF_2
0x40008fe	          0x4839ca	                            cmp rdx, rcx	      1205	write.c	FUNCTION_20	FOR_2	IF_2
0x4000901	            0x7709	                            ja 0x400090c	      1205	write.c	FUNCTION_20	FOR_2	IF_2
0x4000903	        0x48035010	             add rdx, qword [rax + 0x10]	      1206	write.c	FUNCTION_20	FOR_2	IF_2
0x4000907	          0x4839d1	                            cmp rcx, rdx	      1206	write.c	FUNCTION_20	FOR_2	IF_2
0x400090a	            0x725a	                            jb 0x4000966	      1206	write.c	FUNCTION_20	FOR_2	IF_2
0x400090c	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1204	write.c	FUNCTION_20	FOR_2
0x4000910	          0x4885c0	                           test rax, rax	      1204	write.c	FUNCTION_20	FOR_2
0x4000913	            0x75e6	                           jne 0x40008fb	      1204	write.c	FUNCTION_20	FOR_2
0x4000915	          0x488b07	                    mov rax, qword [rdi]	      1210	write.c	FUNCTION_20	FOR_3	IF_3
0x4000918	          0x4839c1	                            cmp rcx, rax	      1210	write.c	FUNCTION_20	FOR_3	IF_3
0x400091b	            0x7209	                            jb 0x4000926	      1210	write.c	FUNCTION_20	FOR_3	IF_3
0x400091d	        0x48034710	             add rax, qword [rdi + 0x10]	      1211	write.c	FUNCTION_20	FOR_3	IF_3
0x4000921	          0x4839c1	                            cmp rcx, rax	      1211	write.c	FUNCTION_20	FOR_3	IF_3
0x4000924	            0x763d	                           jbe 0x4000963	      1211	write.c	FUNCTION_20	FOR_3	IF_3
0x4000926	        0x488b7f38	            mov rdi, qword [rdi + 0x38] 	      1209	write.c	FUNCTION_20	FOR_3
0x400092a	          0x4885ff	                           test rdi, rdi	      1209	write.c	FUNCTION_20	FOR_3
0x400092d	            0x75e6	                           jne 0x4000915	      1209	write.c	FUNCTION_20	FOR_3
0x400092f	      0xba05000000	                              mov edx, 5	      1215	write.c	FUNCTION_20	CALL_2
0x4000934	      0xbe00000000	                              mov esi, 0	      1215	write.c	FUNCTION_20	CALL_2
0x4000939	      0xbf00000000	                              mov edi, 0	      1215	write.c	FUNCTION_20	CALL_2
0x400093e	      0xe800000000	                          call 0x4000943	      1215	write.c	FUNCTION_20	CALL_2
0x4000943	          0x8b7340	            mov esi, dword [rbx + 0x40] 	      1214	write.c	FUNCTION_20	CALL_1
0x4000946	        0x488b7b38	            mov rdi, qword [rbx + 0x38] 	      1214	write.c	FUNCTION_20	CALL_1
0x400094a	          0x4889c2	                            mov rdx, rax	      1214	write.c	FUNCTION_20	CALL_1
0x400094d	      0xb800000000	                              mov eax, 0	      1214	write.c	FUNCTION_20	CALL_1
0x4000952	      0xe800000000	                          call 0x4000957	      1214	write.c	FUNCTION_20	CALL_1
0x4000957	      0xb800000000	                              mov eax, 0	      1216	write.c	FUNCTION_20
0x400095c	            0xeb08	                           jmp 0x4000966	      1216	write.c	FUNCTION_20
0x400095e	          0x4889f8	                            mov rax, rdi	      1216	write.c	FUNCTION_20
0x4000961	            0xeb03	                           jmp 0x4000966	      1216	write.c	FUNCTION_20
0x4000963	          0x4889f8	                            mov rax, rdi	      1216	write.c	FUNCTION_20
0x4000966	              0x5b	                                 pop rbx	      1217	write.c	FUNCTION_20
0x4000967	              0xc3	                                     ret	      1217	write.c	FUNCTION_20
number_to_chars_bigendian	CALL,1:FOR,0:SWITCH,0:WHILE,1:DO,0:functions,0:IF,1:ELSE,0	16
0x4003739	            0x85d2	                           test edx, edx	      3105	write.c	FUNCTION_37	IF_1
0x400373b	            0x7e05	                           jle 0x4003742	      3105	write.c	FUNCTION_37	IF_1
0x400373d	          0x83ea01	                              sub edx, 1	      3107	write.c	FUNCTION_37	WHILE_1
0x4003740	            0xeb18	                           jmp 0x400375a	      3107	write.c	FUNCTION_37	WHILE_1
0x4003742	        0x4883ec08	                              sub rsp, 8	      3104	write.c	FUNCTION_37
0x4003746	      0xba00000000	                              mov edx, 0	      3106	write.c	FUNCTION_37	CALL_1
0x400374b	      0xbe220c0000	                          mov esi, 0xc22	      3106	write.c	FUNCTION_37	CALL_1
0x4003750	      0xbf00000000	                              mov edi, 0	      3106	write.c	FUNCTION_37	CALL_1
0x4003755	      0xe800000000	                          call 0x400375a	      3106	write.c	FUNCTION_37	CALL_1
0x400375a	          0x4863c2	                         movsxd rax, edx	      3109	write.c	FUNCTION_37	WHILE_1
0x400375d	        0x40883407	               mov byte [rdi + rax], sil	      3109	write.c	FUNCTION_37	WHILE_1
0x4003761	        0x48c1ee08	                              shr rsi, 8	      3110	write.c	FUNCTION_37	WHILE_1
0x4003765	          0x83ea01	                              sub edx, 1	      3107	write.c	FUNCTION_37	WHILE_1
0x4003768	          0x83faff	             cmp edx, 0xffffffffffffffff	      3107	write.c	FUNCTION_37	WHILE_1
0x400376b	            0x75ed	                           jne 0x400375a	      3107	write.c	FUNCTION_37	WHILE_1
0x400376d	            0xf3c3	                                     ret	      3107	write.c	FUNCTION_37	WHILE_1
print_fixup	CALL,4:FOR,0:SWITCH,0:WHILE,0:DO,0:functions,0:IF,7:ELSE,0	123
0x40037cb	              0x55	                                push rbp	      3137	write.c	FUNCTION_40
0x40037cc	              0x53	                                push rbx	      3137	write.c	FUNCTION_40
0x40037cd	        0x4883ec08	                              sub rsp, 8	      3137	write.c	FUNCTION_40
0x40037d1	          0x4889fb	                            mov rbx, rdi	      3137	write.c	FUNCTION_40
0x40037d4	    0xc70500000000	               mov dword [0x040037de], 1	      3138	write.c	FUNCTION_40
0x40037de	    0x488b0d000000	            mov rcx, qword [0x040037e5] 	        97	stdio2.h	CALL_12
0x40037e5	      0xba04000000	                              mov edx, 4	        97	stdio2.h	CALL_12
0x40037ea	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_12
0x40037ef	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_12
0x40037f4	      0xe800000000	                          call 0x40037f9	        97	stdio2.h	CALL_12
0x40037f9	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_12
0x40037fc	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_12
0x4003801	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_12
0x4003806	    0x488b3d000000	            mov rdi, qword [0x0400380d] 	        97	stdio2.h	CALL_12
0x400380d	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_12
0x4003812	      0xe800000000	                          call 0x4003817	        97	stdio2.h	CALL_12
0x4003817	        0x488b4b60	            mov rcx, qword [rbx + 0x60] 	        97	stdio2.h	CALL_12
0x400381b	        0x448b4368	            mov r8d, dword [rbx + 0x68] 	        97	stdio2.h	CALL_12
0x400381f	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_12
0x4003824	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_12
0x4003829	    0x488b3d000000	            mov rdi, qword [0x04003830] 	        97	stdio2.h	CALL_12
0x4003830	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_12
0x4003835	      0xe800000000	                          call 0x400383a	        97	stdio2.h	CALL_12
0x400383a	          0xf60301	                      test byte [rbx], 1	      3142	write.c	FUNCTION_40	IF_1
0x400383d	            0x741b	                            je 0x400385a	      3142	write.c	FUNCTION_40	IF_1
0x400383f	    0x488b0d000000	            mov rcx, qword [0x04003846] 	        97	stdio2.h	CALL_12
0x4003846	      0xba06000000	                              mov edx, 6	        97	stdio2.h	CALL_12
0x400384b	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_12
0x4003850	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_12
0x4003855	      0xe800000000	                          call 0x400385a	        97	stdio2.h	CALL_12
0x400385a	         0xfb64b01	               movzx ecx, byte [rbx + 1]	      3144	write.c	FUNCTION_40	IF_2
0x400385e	            0x84c9	                             test cl, cl	      3144	write.c	FUNCTION_40	IF_2
0x4003860	            0x741e	                            je 0x4003880	      3144	write.c	FUNCTION_40	IF_2
0x4003862	           0xfbec9	                           movsx ecx, cl	        97	stdio2.h	CALL_12
0x4003865	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_12
0x400386a	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_12
0x400386f	    0x488b3d000000	            mov rdi, qword [0x04003876] 	        97	stdio2.h	CALL_12
0x4003876	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_12
0x400387b	      0xe800000000	                          call 0x4003880	        97	stdio2.h	CALL_12
0x4003880	          0xf60306	                      test byte [rbx], 6	      3146	write.c	FUNCTION_40	IF_3
0x4003883	            0x741b	                            je 0x40038a0	      3146	write.c	FUNCTION_40	IF_3
0x4003885	    0x488b0d000000	            mov rcx, qword [0x0400388c] 	        97	stdio2.h	CALL_12
0x400388c	      0xba08000000	                              mov edx, 8	        97	stdio2.h	CALL_12
0x4003891	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_12
0x4003896	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_12
0x400389b	      0xe800000000	                          call 0x40038a0	        97	stdio2.h	CALL_12
0x40038a0	          0xf60308	                      test byte [rbx], 8	      3154	write.c	FUNCTION_40	IF_4
0x40038a3	            0x741b	                            je 0x40038c0	      3154	write.c	FUNCTION_40	IF_4
0x40038a5	    0x488b0d000000	            mov rcx, qword [0x040038ac] 	        97	stdio2.h	CALL_12
0x40038ac	      0xba06000000	                              mov edx, 6	        97	stdio2.h	CALL_12
0x40038b1	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_12
0x40038b6	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_12
0x40038bb	      0xe800000000	                          call 0x40038c0	        97	stdio2.h	CALL_12
0x40038c0	          0xf60320	                   test byte [rbx], 0x20	      3156	write.c	FUNCTION_40	IF_5
0x40038c3	            0x741b	                            je 0x40038e0	      3156	write.c	FUNCTION_40	IF_5
0x40038c5	    0x488b0d000000	            mov rcx, qword [0x040038cc] 	        97	stdio2.h	CALL_12
0x40038cc	      0xba05000000	                              mov edx, 5	        97	stdio2.h	CALL_12
0x40038d1	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_12
0x40038d6	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_12
0x40038db	      0xe800000000	                          call 0x40038e0	        97	stdio2.h	CALL_12
0x40038e0	         0xfb64b02	               movzx ecx, byte [rbx + 2]	        97	stdio2.h	CALL_12
0x40038e4	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_12
0x40038e9	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_12
0x40038ee	    0x488b3d000000	            mov rdi, qword [0x040038f5] 	        97	stdio2.h	CALL_12
0x40038f5	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_12
0x40038fa	      0xe800000000	                          call 0x40038ff	        97	stdio2.h	CALL_12
0x40038ff	        0x488b4b08	                mov rcx, qword [rbx + 8]	        97	stdio2.h	CALL_12
0x4003903	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_12
0x4003908	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_12
0x400390d	    0x488b3d000000	            mov rdi, qword [0x04003914] 	        97	stdio2.h	CALL_12
0x4003914	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_12
0x4003919	      0xe800000000	                          call 0x400391e	        97	stdio2.h	CALL_12
0x400391e	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	        97	stdio2.h	CALL_12
0x4003922	        0x4c8b4b58	              mov r9, qword [rbx + 0x58]	        97	stdio2.h	CALL_12
0x4003926	        0x4c8b4328	              mov r8, qword [rbx + 0x28]	        97	stdio2.h	CALL_12
0x400392a	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_12
0x400392f	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_12
0x4003934	    0x488b3d000000	            mov rdi, qword [0x0400393b] 	        97	stdio2.h	CALL_12
0x400393b	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_12
0x4003940	      0xe800000000	                          call 0x4003945	        97	stdio2.h	CALL_12
0x4003945	          0x8b6b50	            mov ebp, dword [rbx + 0x50] 	      3164	write.c	FUNCTION_40	CALL_1
0x4003948	            0x89ef	                            mov edi, ebp	      3164	write.c	FUNCTION_40	CALL_1
0x400394a	      0xe800000000	                          call 0x400394f	      3164	write.c	FUNCTION_40	CALL_1
0x400394f	          0x4189e8	                            mov r8d, ebp	        97	stdio2.h	CALL_12
0x4003952	          0x4889c1	                            mov rcx, rax	        97	stdio2.h	CALL_12
0x4003955	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_12
0x400395a	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_12
0x400395f	    0x488b3d000000	            mov rdi, qword [0x04003966] 	        97	stdio2.h	CALL_12
0x4003966	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_12
0x400396b	      0xe800000000	                          call 0x4003970	        97	stdio2.h	CALL_12
0x4003970	      0x48837b1800	               cmp qword [rbx + 0x18], 0	      3166	write.c	FUNCTION_40	IF_6
0x4003975	            0x743c	                            je 0x40039b3	      3166	write.c	FUNCTION_40	IF_6
0x4003977	    0x488b0d000000	            mov rcx, qword [0x0400397e] 	        97	stdio2.h	CALL_12
0x400397e	      0xba06000000	                              mov edx, 6	        97	stdio2.h	CALL_12
0x4003983	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_12
0x4003988	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_12
0x400398d	      0xe800000000	                          call 0x4003992	        97	stdio2.h	CALL_12
0x4003992	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	      3169	write.c	FUNCTION_40	IF_6	CALL_2
0x4003996	    0x488b3d000000	            mov rdi, qword [0x0400399d] 	      3169	write.c	FUNCTION_40	IF_6	CALL_2
0x400399d	      0xe800000000	                          call 0x40039a2	      3169	write.c	FUNCTION_40	IF_6	CALL_2
0x40039a2	    0x488b35000000	            mov rsi, qword [0x040039a9] 	        97	stdio2.h	CALL_12
0x40039a9	      0xbf3e000000	                           mov edi, 0x3e	        97	stdio2.h	CALL_12
0x40039ae	      0xe800000000	                          call 0x40039b3	        97	stdio2.h	CALL_12
0x40039b3	      0x48837b2000	               cmp qword [rbx + 0x20], 0	      3172	write.c	FUNCTION_40	IF_7
0x40039b8	            0x743c	                            je 0x40039f6	      3172	write.c	FUNCTION_40	IF_7
0x40039ba	    0x488b0d000000	            mov rcx, qword [0x040039c1] 	        97	stdio2.h	CALL_12
0x40039c1	      0xba06000000	                              mov edx, 6	        97	stdio2.h	CALL_12
0x40039c6	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_12
0x40039cb	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_12
0x40039d0	      0xe800000000	                          call 0x40039d5	        97	stdio2.h	CALL_12
0x40039d5	        0x488b7320	            mov rsi, qword [rbx + 0x20] 	      3175	write.c	FUNCTION_40	IF_7	CALL_3
0x40039d9	    0x488b3d000000	            mov rdi, qword [0x040039e0] 	      3175	write.c	FUNCTION_40	IF_7	CALL_3
0x40039e0	      0xe800000000	                          call 0x40039e5	      3175	write.c	FUNCTION_40	IF_7	CALL_3
0x40039e5	    0x488b35000000	            mov rsi, qword [0x040039ec] 	        97	stdio2.h	CALL_12
0x40039ec	      0xbf3e000000	                           mov edi, 0x3e	        97	stdio2.h	CALL_12
0x40039f1	      0xe800000000	                          call 0x40039f6	        97	stdio2.h	CALL_12
0x40039f6	    0x488b35000000	            mov rsi, qword [0x040039fd] 	        97	stdio2.h	CALL_12
0x40039fd	      0xbf0a000000	                            mov edi, 0xa	        97	stdio2.h	CALL_12
0x4003a02	      0xe800000000	                          call 0x4003a07	        97	stdio2.h	CALL_12
0x4003a07	        0x4883c408	                              add rsp, 8	      3182	write.c	FUNCTION_40
0x4003a0b	              0x5b	                                 pop rbx	      3182	write.c	FUNCTION_40
0x4003a0c	              0x5d	                                 pop rbp	      3182	write.c	FUNCTION_40
0x4003a0d	              0xc3	                                     ret	      3182	write.c	FUNCTION_40
fix_new	CALL,1:FOR,0:SWITCH,0:WHILE,0:DO,0:functions,0:IF,0:ELSE,0	10
0x4001874	        0x4883ec10	                           sub rsp, 0x10	       238	write.c	ELSE_2	FUNCTION_2
0x4001878	            0x6a00	                                  push 0	       239	write.c	ELSE_2	FUNCTION_2	CALL_1
0x400187a	        0x8b442420	            mov eax, dword [rsp + 0x20] 	       239	write.c	ELSE_2	FUNCTION_2	CALL_1
0x400187e	              0x50	                                push rax	       239	write.c	ELSE_2	FUNCTION_2	CALL_1
0x400187f	            0x4151	                                 push r9	       239	write.c	ELSE_2	FUNCTION_2	CALL_1
0x4001881	          0x4d89c1	                              mov r9, r8	       239	write.c	ELSE_2	FUNCTION_2	CALL_1
0x4001884	    0x41b800000000	                              mov r8d, 0	       239	write.c	ELSE_2	FUNCTION_2	CALL_1
0x400188a	      0xe8cbe8ffff	               call sym.fix_new_internal	       239	write.c	ELSE_2	FUNCTION_2	CALL_1
0x400188f	        0x4883c428	                           add rsp, 0x28	       241	write.c	ELSE_2	FUNCTION_2
0x4001893	              0xc3	                                     ret	       241	write.c	ELSE_2	FUNCTION_2
number_to_chars_littleendian	CALL,1:FOR,0:SWITCH,0:WHILE,1:DO,0:functions,0:IF,1:ELSE,0	16
0x400376f	            0x85d2	                           test edx, edx	      3117	write.c	FUNCTION_38	IF_1
0x4003771	            0x7e0a	                           jle 0x400377d	      3117	write.c	FUNCTION_38	IF_1
0x4003773	          0x8d42ff	                      lea eax, [rdx - 1]	      3117	write.c	FUNCTION_38	IF_1
0x4003776	      0x488d440701	                lea rax, [rdi + rax + 1]	      3117	write.c	FUNCTION_38	IF_1
0x400377b	            0xeb18	                           jmp 0x4003795	      3117	write.c	FUNCTION_38	IF_1
0x400377d	        0x4883ec08	                              sub rsp, 8	      3116	write.c	FUNCTION_38
0x4003781	      0xba00000000	                              mov edx, 0	      3118	write.c	FUNCTION_38	CALL_1
0x4003786	      0xbe2e0c0000	                          mov esi, 0xc2e	      3118	write.c	FUNCTION_38	CALL_1
0x400378b	      0xbf00000000	                              mov edi, 0	      3118	write.c	FUNCTION_38	CALL_1
0x4003790	      0xe800000000	                          call 0x4003795	      3118	write.c	FUNCTION_38	CALL_1
0x4003795	        0x4883c701	                              add rdi, 1	      3121	write.c	FUNCTION_38	WHILE_1
0x4003799	        0x408877ff	                 mov byte [rdi - 1], sil	      3121	write.c	FUNCTION_38	WHILE_1
0x400379d	        0x48c1ee08	                              shr rsi, 8	      3122	write.c	FUNCTION_38	WHILE_1
0x40037a1	          0x4839f8	                            cmp rax, rdi	      3119	write.c	FUNCTION_38	WHILE_1
0x40037a4	            0x75ef	                           jne 0x4003795	      3119	write.c	FUNCTION_38	WHILE_1
0x40037a6	            0xf3c3	                                     ret	      3119	write.c	FUNCTION_38	WHILE_1
record_alignment	CALL,1:FOR,0:SWITCH,0:WHILE,0:DO,0:functions,0:IF,2:ELSE,0	6
0x4002030	    0x4881ff000000	                              cmp rdi, 0	       361	write.c	FUNCTION_7	IF_1
0x4002037	            0x7408	                            je 0x4002041	       361	write.c	FUNCTION_7	IF_1
0x4002039	          0x397770	            cmp dword [rdi + 0x70], esi 	       364	write.c	FUNCTION_7	IF_2
0x400203c	            0x7303	                           jae 0x4002041	       364	write.c	FUNCTION_7	IF_2
0x400203e	          0x897770	             mov dword [rdi + 0x70], esi	      1696	bfd.h	FUNCTION_72
0x4002041	            0xf3c3	                                     ret	      1696	bfd.h	FUNCTION_72
install_reloc	CALL,9:FOR,0:SWITCH,1:WHILE,0:DO,0:functions,0:IF,1:ELSE,0	92
0x4000968	            0x4156	                                push r14	      1160	write.c	FUNCTION_19
0x400096a	            0x4155	                                push r13	      1160	write.c	FUNCTION_19
0x400096c	            0x4154	                                push r12	      1160	write.c	FUNCTION_19
0x400096e	              0x55	                                push rbp	      1160	write.c	FUNCTION_19
0x400096f	              0x53	                                push rbx	      1160	write.c	FUNCTION_19
0x4000970	        0x4883ec10	                           sub rsp, 0x10	      1160	write.c	FUNCTION_19
0x4000974	          0x4989fe	                            mov r14, rdi	      1160	write.c	FUNCTION_19
0x4000977	          0x4889f3	                            mov rbx, rsi	      1160	write.c	FUNCTION_19
0x400097a	          0x4889d5	                            mov rbp, rdx	      1160	write.c	FUNCTION_19
0x400097d	          0x4989cc	                            mov r12, rcx	      1160	write.c	FUNCTION_19
0x4000980	          0x4589c5	                           mov r13d, r8d	      1160	write.c	FUNCTION_19
0x4000983	    0x64488b042528	                mov rax, qword fs:[0x28]	      1160	write.c	FUNCTION_19
0x400098c	      0x4889442408	                mov qword [rsp + 8], rax	      1160	write.c	FUNCTION_19
0x4000991	            0x31c0	                            xor eax, eax	      1160	write.c	FUNCTION_19
0x4000993	          0x488b06	                    mov rax, qword [rsi]	      1165	write.c	FUNCTION_19	IF_1
0x4000996	          0x4885c0	                           test rax, rax	      1165	write.c	FUNCTION_19	IF_1
0x4000999	            0x7446	                            je 0x40009e1	      1165	write.c	FUNCTION_19	IF_1
0x400099b	          0x488b00	                    mov rax, qword [rax]	      1166	write.c	FUNCTION_19	IF_1
0x400099e	          0x4885c0	                           test rax, rax	      1166	write.c	FUNCTION_19	IF_1
0x40009a1	            0x743e	                            je 0x40009e1	      1166	write.c	FUNCTION_19	IF_1
0x40009a3	          0x8b5018	            mov edx, dword [rax + 0x18] 	      1167	write.c	FUNCTION_19	IF_1
0x40009a6	          0xf6c220	                           test dl, 0x20	      1167	write.c	FUNCTION_19	IF_1
0x40009a9	            0x7536	                           jne 0x40009e1	      1167	write.c	FUNCTION_19	IF_1
0x40009ab	          0xf6c601	                              test dh, 1	      1168	write.c	FUNCTION_19	IF_1
0x40009ae	            0x740a	                            je 0x40009ba	      1168	write.c	FUNCTION_19	IF_1
0x40009b0	    0x488178200000	               cmp qword [rax + 0x20], 0	      1169	write.c	FUNCTION_19	IF_1
0x40009b8	            0x7427	                            je 0x40009e1	      1169	write.c	FUNCTION_19	IF_1
0x40009ba	      0xba05000000	                              mov edx, 5	      1171	write.c	FUNCTION_19	CALL_2
0x40009bf	      0xbe00000000	                              mov esi, 0	      1171	write.c	FUNCTION_19	CALL_2
0x40009c4	      0xbf00000000	                              mov edi, 0	      1171	write.c	FUNCTION_19	CALL_2
0x40009c9	      0xe800000000	                          call 0x40009ce	      1171	write.c	FUNCTION_19	CALL_2
0x40009ce	          0x4889c2	                            mov rdx, rax	      1171	write.c	FUNCTION_19	CALL_2
0x40009d1	          0x4489ee	                           mov esi, r13d	      1171	write.c	FUNCTION_19	CALL_2
0x40009d4	          0x4c89e7	                            mov rdi, r12	      1171	write.c	FUNCTION_19	CALL_2
0x40009d7	      0xb800000000	                              mov eax, 0	      1171	write.c	FUNCTION_19	CALL_2
0x40009dc	      0xe800000000	                          call 0x40009e1	      1171	write.c	FUNCTION_19	CALL_2
0x40009e1	        0x488d557c	                   lea rdx, [rbp + 0x7c]	      1174	write.c	FUNCTION_19
0x40009e5	          0x4989e1	                             mov r9, rsp	      1173	write.c	FUNCTION_19	CALL_3
0x40009e8	          0x4d89f0	                             mov r8, r14	      1173	write.c	FUNCTION_19	CALL_3
0x40009eb	        0x488b4d00	                    mov rcx, qword [rbp]	      1173	write.c	FUNCTION_19	CALL_3
0x40009ef	          0x4889de	                            mov rsi, rbx	      1173	write.c	FUNCTION_19	CALL_3
0x40009f2	    0x488b3d000000	            mov rdi, qword [0x040009f9] 	      1173	write.c	FUNCTION_19	CALL_3
0x40009f9	      0xe800000000	                          call 0x40009fe	      1173	write.c	FUNCTION_19	CALL_3
0x40009fe	            0x89c3	                            mov ebx, eax	      1173	write.c	FUNCTION_19	CALL_3
0x4000a00	          0x83f803	                              cmp eax, 3	      1176	write.c	FUNCTION_19	SWITCH_1
0x4000a03	            0x740c	                            je 0x4000a11	      1176	write.c	FUNCTION_19	SWITCH_1
0x4000a05	          0x83f804	                              cmp eax, 4	      1176	write.c	FUNCTION_19	SWITCH_1
0x4000a08	            0x7430	                            je 0x4000a3a	      1176	write.c	FUNCTION_19	SWITCH_1
0x4000a0a	          0x83f802	                              cmp eax, 2	      1176	write.c	FUNCTION_19	SWITCH_1
0x4000a0d	            0x7554	                           jne 0x4000a63	      1176	write.c	FUNCTION_19	SWITCH_1
0x4000a0f	            0xeb7b	                           jmp 0x4000a8c	      1176	write.c	FUNCTION_19	SWITCH_1
0x4000a11	      0xba05000000	                              mov edx, 5	      1181	write.c	FUNCTION_19	SWITCH_1	CALL_5
0x4000a16	      0xbe00000000	                              mov esi, 0	      1181	write.c	FUNCTION_19	SWITCH_1	CALL_5
0x4000a1b	      0xbf00000000	                              mov edi, 0	      1181	write.c	FUNCTION_19	SWITCH_1	CALL_5
0x4000a20	      0xe800000000	                          call 0x4000a25	      1181	write.c	FUNCTION_19	SWITCH_1	CALL_5
0x4000a25	          0x4889c2	                            mov rdx, rax	      1181	write.c	FUNCTION_19	SWITCH_1	CALL_5
0x4000a28	          0x4489ee	                           mov esi, r13d	      1181	write.c	FUNCTION_19	SWITCH_1	CALL_5
0x4000a2b	          0x4c89e7	                            mov rdi, r12	      1181	write.c	FUNCTION_19	SWITCH_1	CALL_5
0x4000a2e	      0xb800000000	                              mov eax, 0	      1181	write.c	FUNCTION_19	SWITCH_1	CALL_5
0x4000a33	      0xe800000000	                          call 0x4000a38	      1181	write.c	FUNCTION_19	SWITCH_1	CALL_5
0x4000a38	            0xeb52	                           jmp 0x4000a8c	      1182	write.c	FUNCTION_19	SWITCH_1
0x4000a3a	      0xba05000000	                              mov edx, 5	      1184	write.c	FUNCTION_19	SWITCH_1	CALL_7
0x4000a3f	      0xbe00000000	                              mov esi, 0	      1184	write.c	FUNCTION_19	SWITCH_1	CALL_7
0x4000a44	      0xbf00000000	                              mov edi, 0	      1184	write.c	FUNCTION_19	SWITCH_1	CALL_7
0x4000a49	      0xe800000000	                          call 0x4000a4e	      1184	write.c	FUNCTION_19	SWITCH_1	CALL_7
0x4000a4e	          0x4889c2	                            mov rdx, rax	      1184	write.c	FUNCTION_19	SWITCH_1	CALL_7
0x4000a51	          0x4489ee	                           mov esi, r13d	      1184	write.c	FUNCTION_19	SWITCH_1	CALL_7
0x4000a54	          0x4c89e7	                            mov rdi, r12	      1184	write.c	FUNCTION_19	SWITCH_1	CALL_7
0x4000a57	      0xb800000000	                              mov eax, 0	      1184	write.c	FUNCTION_19	SWITCH_1	CALL_7
0x4000a5c	      0xe800000000	                          call 0x4000a61	      1184	write.c	FUNCTION_19	SWITCH_1	CALL_7
0x4000a61	            0xeb29	                           jmp 0x4000a8c	      1185	write.c	FUNCTION_19	SWITCH_1
0x4000a63	      0xba05000000	                              mov edx, 5	      1187	write.c	FUNCTION_19	SWITCH_1	CALL_9
0x4000a68	      0xbe00000000	                              mov esi, 0	      1187	write.c	FUNCTION_19	SWITCH_1	CALL_9
0x4000a6d	      0xbf00000000	                              mov edi, 0	      1187	write.c	FUNCTION_19	SWITCH_1	CALL_9
0x4000a72	      0xe800000000	                          call 0x4000a77	      1187	write.c	FUNCTION_19	SWITCH_1	CALL_9
0x4000a77	            0x89d9	                            mov ecx, ebx	      1187	write.c	FUNCTION_19	SWITCH_1	CALL_9
0x4000a79	          0x4489ea	                           mov edx, r13d	      1187	write.c	FUNCTION_19	SWITCH_1	CALL_9
0x4000a7c	          0x4c89e6	                            mov rsi, r12	      1187	write.c	FUNCTION_19	SWITCH_1	CALL_9
0x4000a7f	          0x4889c7	                            mov rdi, rax	      1187	write.c	FUNCTION_19	SWITCH_1	CALL_9
0x4000a82	      0xb800000000	                              mov eax, 0	      1187	write.c	FUNCTION_19	SWITCH_1	CALL_9
0x4000a87	      0xe800000000	                          call 0x4000a8c	      1187	write.c	FUNCTION_19	SWITCH_1	CALL_9
0x4000a8c	      0x488b442408	                mov rax, qword [rsp + 8]	      1190	write.c	FUNCTION_19
0x4000a91	    0x644833042528	                xor rax, qword fs:[0x28]	      1190	write.c	FUNCTION_19
0x4000a9a	            0x7405	                            je 0x4000aa1	      1190	write.c	FUNCTION_19
0x4000a9c	      0xe800000000	                          call 0x4000aa1	      1190	write.c	FUNCTION_19
0x4000aa1	        0x4883c410	                           add rsp, 0x10	      1190	write.c	FUNCTION_19
0x4000aa5	              0x5b	                                 pop rbx	      1190	write.c	FUNCTION_19
0x4000aa6	              0x5d	                                 pop rbp	      1190	write.c	FUNCTION_19
0x4000aa7	            0x415c	                                 pop r12	      1190	write.c	FUNCTION_19
0x4000aa9	            0x415d	                                 pop r13	      1190	write.c	FUNCTION_19
0x4000aab	            0x415e	                                 pop r14	      1190	write.c	FUNCTION_19
0x4000aad	              0xc3	                                     ret	      1190	write.c	FUNCTION_19
write_object_file	CALL,91:FOR,8:SWITCH,0:WHILE,1:DO,0:functions,0:IF,28:ELSE,2	795
0x40029d2	            0x4157	                                push r15	      2065	write.c	FUNCTION_33
0x40029d4	            0x4156	                                push r14	      2065	write.c	FUNCTION_33
0x40029d6	            0x4155	                                push r13	      2065	write.c	FUNCTION_33
0x40029d8	            0x4154	                                push r12	      2065	write.c	FUNCTION_33
0x40029da	              0x55	                                push rbp	      2065	write.c	FUNCTION_33
0x40029db	              0x53	                                push rbx	      2065	write.c	FUNCTION_33
0x40029dc	        0x4883ec48	                           sub rsp, 0x48	      2065	write.c	FUNCTION_33
0x40029e0	    0x64488b042528	                mov rax, qword fs:[0x28]	      2065	write.c	FUNCTION_33
0x40029e9	      0x4889442438	             mov qword [rsp + 0x38], rax	      2065	write.c	FUNCTION_33
0x40029ee	            0x31c0	                            xor eax, eax	      2065	write.c	FUNCTION_33
0x40029f0	    0x488b05000000	            mov rax, qword [0x040029f7] 	      1856	write.c	FUNCTION_29	FOR_1
0x40029f7	    0x488b98900000	            mov rbx, qword [rax + 0x90] 	      1856	write.c	FUNCTION_29	FOR_1
0x40029fe	          0x4885db	                           test rbx, rbx	      1856	write.c	FUNCTION_29	FOR_1
0x4002a01	            0x7411	                            je 0x4002a14	      1856	write.c	FUNCTION_29	FOR_1
0x4002a03	          0x4889df	                            mov rdi, rbx	      1857	write.c	FUNCTION_29	CALL_1
0x4002a06	      0xe876e8ffff	         call sym.subsegs_finish_section	      1857	write.c	FUNCTION_29	CALL_1
0x4002a0b	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      1856	write.c	FUNCTION_29	FOR_1
0x4002a0f	          0x4885db	                           test rbx, rbx	      1856	write.c	FUNCTION_29	FOR_1
0x4002a12	            0x75ef	                           jne 0x4002a03	      1856	write.c	FUNCTION_29	FOR_1
0x4002a14	    0x488b05000000	            mov rax, qword [0x04002a1b] 	      2088	write.c	FUNCTION_33
0x4002a1b	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      2088	write.c	FUNCTION_33
0x4002a1f	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2088	write.c	FUNCTION_33
0x4002a23	          0x4885c0	                           test rax, rax	      2088	write.c	FUNCTION_33
0x4002a26	            0x7406	                            je 0x4002a2e	      2088	write.c	FUNCTION_33
0x4002a28	        0x48895010	             mov qword [rax + 0x10], rdx	      2088	write.c	FUNCTION_33
0x4002a2c	            0xeb0e	                           jmp 0x4002a3c	      2088	write.c	FUNCTION_33
0x4002a2e	    0x488b0d000000	            mov rcx, qword [0x04002a35] 	      2088	write.c	FUNCTION_33
0x4002a35	    0x488991900000	             mov qword [rcx + 0x90], rdx	      2088	write.c	FUNCTION_33
0x4002a3c	          0x4885d2	                           test rdx, rdx	      2088	write.c	FUNCTION_33
0x4002a3f	            0x7406	                            je 0x4002a47	      2088	write.c	FUNCTION_33
0x4002a41	        0x48894218	             mov qword [rdx + 0x18], rax	      2088	write.c	FUNCTION_33
0x4002a45	            0xeb0e	                           jmp 0x4002a55	      2088	write.c	FUNCTION_33
0x4002a47	    0x488b15000000	            mov rdx, qword [0x04002a4e] 	      2088	write.c	FUNCTION_33
0x4002a4e	    0x488982980000	             mov qword [rdx + 0x98], rax	      2088	write.c	FUNCTION_33
0x4002a55	    0x488b05000000	            mov rax, qword [0x04002a5c] 	      2089	write.c	FUNCTION_33
0x4002a5c	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      2089	write.c	FUNCTION_33
0x4002a60	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2089	write.c	FUNCTION_33
0x4002a64	          0x4885c0	                           test rax, rax	      2089	write.c	FUNCTION_33
0x4002a67	            0x7406	                            je 0x4002a6f	      2089	write.c	FUNCTION_33
0x4002a69	        0x48895010	             mov qword [rax + 0x10], rdx	      2089	write.c	FUNCTION_33
0x4002a6d	            0xeb0e	                           jmp 0x4002a7d	      2089	write.c	FUNCTION_33
0x4002a6f	    0x488b0d000000	            mov rcx, qword [0x04002a76] 	      2089	write.c	FUNCTION_33
0x4002a76	    0x488991900000	             mov qword [rcx + 0x90], rdx	      2089	write.c	FUNCTION_33
0x4002a7d	          0x4885d2	                           test rdx, rdx	      2089	write.c	FUNCTION_33
0x4002a80	            0x7406	                            je 0x4002a88	      2089	write.c	FUNCTION_33
0x4002a82	        0x48894218	             mov qword [rdx + 0x18], rax	      2089	write.c	FUNCTION_33
0x4002a86	            0xeb0e	                           jmp 0x4002a96	      2089	write.c	FUNCTION_33
0x4002a88	    0x488b15000000	            mov rdx, qword [0x04002a8f] 	      2089	write.c	FUNCTION_33
0x4002a8f	    0x488982980000	             mov qword [rdx + 0x98], rax	      2089	write.c	FUNCTION_33
0x4002a96	    0x488b3d000000	            mov rdi, qword [0x04002a9d] 	      2090	write.c	FUNCTION_33
0x4002a9d	    0x83afa0000000	               sub dword [rdi + 0xa0], 2	      2090	write.c	FUNCTION_33
0x4002aa4	    0xc74424300000	               mov dword [rsp + 0x30], 0	      2091	write.c	FUNCTION_33
0x4002aac	      0x488d542430	                   lea rdx, [rsp + 0x30]	      2092	write.c	FUNCTION_33	CALL_2
0x4002ab1	      0xbe00000000	                              mov esi, 0	      2092	write.c	FUNCTION_33	CALL_2
0x4002ab6	      0xe800000000	                          call 0x4002abb	      2092	write.c	FUNCTION_33	CALL_2
0x4002abb	      0xba00000000	                              mov edx, 0	      2095	write.c	FUNCTION_33	CALL_3
0x4002ac0	      0xbe00000000	                              mov esi, 0	      2095	write.c	FUNCTION_33	CALL_3
0x4002ac5	    0x488b3d000000	            mov rdi, qword [0x04002acc] 	      2095	write.c	FUNCTION_33	CALL_3
0x4002acc	      0xe800000000	                          call 0x4002ad1	      2095	write.c	FUNCTION_33	CALL_3
0x4002ad1	    0x803d00000000	                cmp byte [0x04002ad8], 0	      2100	write.c	FUNCTION_33	IF_1
0x4002ad8	            0x7457	                            je 0x4002b31	      2100	write.c	FUNCTION_33	IF_1
0x4002ada	    0x488b15000000	            mov rdx, qword [0x04002ae1] 	      1729	write.c	FUNCTION_26	CALL_1
0x4002ae1	    0x488b82a80000	            mov rax, qword [rdx + 0xa8] 	      1729	write.c	FUNCTION_26	CALL_1
0x4002ae8	          0x488b00	                    mov rax, qword [rax]	      1729	write.c	FUNCTION_26	CALL_1
0x4002aeb	        0x488b4808	                mov rcx, qword [rax + 8]	      1729	write.c	FUNCTION_26	CALL_1
0x4002aef	    0x488b05000000	            mov rax, qword [0x04002af6] 	      1730	write.c	FUNCTION_26	CALL_2
0x4002af6	    0x488bb0a80000	            mov rsi, qword [rax + 0xa8] 	      1730	write.c	FUNCTION_26	CALL_2
0x4002afd	          0x488b36	                    mov rsi, qword [rsi]	      1730	write.c	FUNCTION_26	CALL_2
0x4002b00	          0x488b36	                    mov rsi, qword [rsi]	      1730	write.c	FUNCTION_26	CALL_2
0x4002b03	        0x48897138	             mov qword [rcx + 0x38], rsi	      1729	write.c	FUNCTION_26	CALL_1
0x4002b07	    0x488b92a80000	            mov rdx, qword [rdx + 0xa8] 	      1731	write.c	FUNCTION_26	CALL_3
0x4002b0e	          0x488b12	                    mov rdx, qword [rdx]	      1731	write.c	FUNCTION_26	CALL_3
0x4002b11	    0x488b88a80000	            mov rcx, qword [rax + 0xa8] 	      1732	write.c	FUNCTION_26	CALL_4
0x4002b18	          0x488b09	                    mov rcx, qword [rcx]	      1732	write.c	FUNCTION_26	CALL_4
0x4002b1b	        0x488b4908	                mov rcx, qword [rcx + 8]	      1732	write.c	FUNCTION_26	CALL_4
0x4002b1f	        0x48894a08	                mov qword [rdx + 8], rcx	      1731	write.c	FUNCTION_26	CALL_3
0x4002b23	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	      1733	write.c	FUNCTION_26	CALL_5
0x4002b2a	    0x48c700000000	                      mov qword [rax], 0	      1733	write.c	FUNCTION_26	CALL_5
0x4002b31	    0xc74424300000	               mov dword [rsp + 0x30], 0	      2105	write.c	FUNCTION_33
0x4002b39	    0xc74424340000	               mov dword [rsp + 0x34], 0	      2128	write.c	FUNCTION_33	WHILE_1
0x4002b41	      0x488d542430	                   lea rdx, [rsp + 0x30]	      2129	write.c	FUNCTION_33	WHILE_1	CALL_5
0x4002b46	      0xbe00000000	                              mov esi, 0	      2129	write.c	FUNCTION_33	WHILE_1	CALL_5
0x4002b4b	    0x488b3d000000	            mov rdi, qword [0x04002b52] 	      2129	write.c	FUNCTION_33	WHILE_1	CALL_5
0x4002b52	      0xe800000000	                          call 0x4002b57	      2129	write.c	FUNCTION_33	WHILE_1	CALL_5
0x4002b57	      0x8344243001	               add dword [rsp + 0x30], 1	      2130	write.c	FUNCTION_33	WHILE_1
0x4002b5c	      0x837c243400	               cmp dword [rsp + 0x34], 0	      2131	write.c	FUNCTION_33	WHILE_1	IF_3
0x4002b61	            0x75d6	                           jne 0x4002b39	      2131	write.c	FUNCTION_33	WHILE_1	IF_3
0x4002b63	    0xc70500000000	               mov dword [0x04002b6d], 1	      2142	write.c	FUNCTION_33
0x4002b6d	      0xba00000000	                              mov edx, 0	      2144	write.c	FUNCTION_33	CALL_6
0x4002b72	      0xbe00000000	                              mov esi, 0	      2144	write.c	FUNCTION_33	CALL_6
0x4002b77	    0x488b3d000000	            mov rdi, qword [0x04002b7e] 	      2144	write.c	FUNCTION_33	CALL_6
0x4002b7e	      0xe800000000	                          call 0x4002b83	      2144	write.c	FUNCTION_33	CALL_6
0x4002b83	    0xc70500000000	               mov dword [0x04002b8d], 1	      2147	write.c	FUNCTION_33
0x4002b8d	      0xe800000000	                          call 0x4002b92	      2149	write.c	FUNCTION_33	CALL_7
0x4002b92	    0x488b3d000000	            mov rdi, qword [0x04002b99] 	      1869	write.c	FUNCTION_30	CALL_1
0x4002b99	      0xe800000000	                          call 0x4002b9e	      1869	write.c	FUNCTION_30	CALL_1
0x4002b9e	          0x4889c5	                            mov rbp, rax	      1869	write.c	FUNCTION_30	CALL_1
0x4002ba1	          0x4885c0	                           test rax, rax	      1870	write.c	FUNCTION_30	IF_1
0x4002ba4	     0xf84100b0000	                            je 0x40036ba	      1870	write.c	FUNCTION_30	IF_1
0x4002baa	    0x488b05000000	            mov rax, qword [0x04002bb1] 	      1873	write.c	FUNCTION_30	CALL_2
0x4002bb1	        0x488b4008	                mov rax, qword [rax + 8]	      1873	write.c	FUNCTION_30	CALL_2
0x4002bb5	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      1873	write.c	FUNCTION_30	CALL_2
0x4002bbc	    0x488bb8280300	           mov rdi, qword [rax + 0x328] 	      1873	write.c	FUNCTION_30	CALL_2
0x4002bc3	          0x4885ff	                           test rdi, rdi	      1875	write.c	FUNCTION_30	IF_2
0x4002bc6	      0xb800000000	                              mov eax, 0	      1875	write.c	FUNCTION_30	IF_2
0x4002bcb	        0x480f44f8	                          cmove rdi, rax	      1875	write.c	FUNCTION_30	IF_2
0x4002bcf	      0xbe00000000	                              mov esi, 0	      1876	write.c	FUNCTION_30	CALL_3
0x4002bd4	      0xe800000000	                          call 0x4002bd9	      1876	write.c	FUNCTION_30	CALL_3
0x4002bd9	          0x4889c3	                            mov rbx, rax	      1876	write.c	FUNCTION_30	CALL_3
0x4002bdc	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      1877	write.c	FUNCTION_30	CALL_4
0x4002be3	    0x488b15000000	            mov rdx, qword [0x04002bea] 	      1878	write.c	FUNCTION_30	CALL_5
0x4002bea	        0x488b5208	                mov rdx, qword [rdx + 8]	      1878	write.c	FUNCTION_30	CALL_5
0x4002bee	    0x488b92680300	           mov rdx, qword [rdx + 0x368] 	      1878	write.c	FUNCTION_30	CALL_5
0x4002bf5	    0x8b9238030000	           mov edx, dword [rdx + 0x338] 	      1878	write.c	FUNCTION_30	CALL_5
0x4002bfb	          0x895004	                mov dword [rax + 4], edx	      1878	write.c	FUNCTION_30	CALL_5
0x4002bfe	      0xba28000000	                           mov edx, 0x28	      1879	write.c	FUNCTION_30	CALL_6
0x4002c03	          0x4889de	                            mov rsi, rbx	      1879	write.c	FUNCTION_30	CALL_6
0x4002c06	    0x488b3d000000	            mov rdi, qword [0x04002c0d] 	      1879	write.c	FUNCTION_30	CALL_6
0x4002c0d	      0xe800000000	                          call 0x4002c12	      1879	write.c	FUNCTION_30	CALL_6
0x4002c12	      0xe800000000	                          call 0x4002c17	      1880	write.c	FUNCTION_30	CALL_7
0x4002c17	          0x4889ef	                            mov rdi, rbp	      1881	write.c	FUNCTION_30	CALL_8
0x4002c1a	      0xe800000000	                          call 0x4002c1f	      1881	write.c	FUNCTION_30	CALL_8
0x4002c1f	          0x4889ea	                            mov rdx, rbp	      1882	write.c	FUNCTION_30	CALL_9
0x4002c22	          0x4889c6	                            mov rsi, rax	      1882	write.c	FUNCTION_30	CALL_9
0x4002c25	    0x488b3d000000	            mov rdi, qword [0x04002c2c] 	      1882	write.c	FUNCTION_30	CALL_9
0x4002c2c	      0xe800000000	                          call 0x4002c31	      1882	write.c	FUNCTION_30	CALL_9
0x4002c31	          0x4889df	                            mov rdi, rbx	      1884	write.c	FUNCTION_30	CALL_10
0x4002c34	      0xe848e6ffff	         call sym.subsegs_finish_section	      1884	write.c	FUNCTION_30	CALL_10
0x4002c39	    0x488b83a80000	            mov rax, qword [rbx + 0xa8] 	      1885	write.c	FUNCTION_30	CALL_12
0x4002c40	          0x488b00	                    mov rax, qword [rax]	      1885	write.c	FUNCTION_30	CALL_12
0x4002c43	      0xba00000000	                              mov edx, 0	      1885	write.c	FUNCTION_30	CALL_12
0x4002c48	          0x4889de	                            mov rsi, rbx	      1885	write.c	FUNCTION_30	CALL_12
0x4002c4b	          0x488b38	                    mov rdi, qword [rax]	      1885	write.c	FUNCTION_30	CALL_12
0x4002c4e	      0xe800000000	                          call 0x4002c53	      1885	write.c	FUNCTION_30	CALL_12
0x4002c53	      0xba00000000	                              mov edx, 0	      1886	write.c	FUNCTION_30	CALL_13
0x4002c58	          0x4889de	                            mov rsi, rbx	      1886	write.c	FUNCTION_30	CALL_13
0x4002c5b	    0x488b3d000000	            mov rdi, qword [0x04002c62] 	      1886	write.c	FUNCTION_30	CALL_13
0x4002c62	      0xe880e2ffff	                       call sym.size_seg	      1886	write.c	FUNCTION_30	CALL_13
0x4002c67	    0x488b1d000000	            mov rbx, qword [0x04002c6e] 	      2261	write.c	FUNCTION_33	IF_9
0x4002c6e	          0x4885db	                           test rbx, rbx	      2261	write.c	FUNCTION_33	IF_9
0x4002c71	            0x7418	                            je 0x4002c8b	      2261	write.c	FUNCTION_33	IF_9
0x4002c73	          0x4889df	                            mov rdi, rbx	      2266	write.c	FUNCTION_33	IF_9	CALL_20
0x4002c76	      0xe800000000	                          call 0x4002c7b	      2266	write.c	FUNCTION_33	IF_9	CALL_20
0x4002c7b	          0x4889df	                            mov rdi, rbx	      2265	write.c	FUNCTION_33	IF_9	FOR_7	CALL_19
0x4002c7e	      0xe800000000	                          call 0x4002c83	      2265	write.c	FUNCTION_33	IF_9	FOR_7	CALL_19
0x4002c83	          0x4889c3	                            mov rbx, rax	      2265	write.c	FUNCTION_33	IF_9	FOR_7	CALL_19
0x4002c86	          0x4885c0	                           test rax, rax	      2265	write.c	FUNCTION_33	IF_9	FOR_7	CALL_19
0x4002c89	            0x75e8	                           jne 0x4002c73	      2265	write.c	FUNCTION_33	IF_9	FOR_7	CALL_19
0x4002c8b	      0xe800000000	                          call 0x4002c90	      2268	write.c	FUNCTION_33	CALL_21
0x4002c90	    0x488b3d000000	            mov rdi, qword [0x04002c97] 	       679	write.c	FUNCTION_15	CALL_1
0x4002c97	      0xe800000000	                          call 0x4002c9c	       679	write.c	FUNCTION_15	CALL_1
0x4002c9c	          0x8d48ff	                      lea ecx, [rax - 1]	       679	write.c	FUNCTION_15	CALL_1
0x4002c9f	      0xba02000000	                              mov edx, 2	       679	write.c	FUNCTION_15	CALL_1
0x4002ca4	          0x48d3e2	                             shl rdx, cl	       680	write.c	FUNCTION_15
0x4002ca7	        0x488d42ff	                      lea rax, [rdx - 1]	       681	write.c	FUNCTION_15
0x4002cab	      0x4889442408	                mov qword [rsp + 8], rax	       681	write.c	FUNCTION_15
0x4002cb0	    0x488b1d000000	            mov rbx, qword [0x04002cb7] 	       683	write.c	FUNCTION_15	FOR_1
0x4002cb7	          0x4885db	                           test rbx, rbx	       683	write.c	FUNCTION_15	FOR_1
0x4002cba	     0xf8424020000	                            je 0x4002ee4	       683	write.c	FUNCTION_15	FOR_1
0x4002cc0	        0x4c8b7b10	            mov r15, qword [rbx + 0x10] 	       685	write.c	FUNCTION_15	FOR_1
0x4002cc4	        0x488b7b08	                mov rdi, qword [rbx + 8]	       691	write.c	FUNCTION_15	FOR_1	CALL_2
0x4002cc8	      0xe800000000	                          call 0x4002ccd	       691	write.c	FUNCTION_15	FOR_1	CALL_2
0x4002ccd	        0x488b7b08	                mov rdi, qword [rbx + 8]	       692	write.c	FUNCTION_15	FOR_1	CALL_3
0x4002cd1	      0xe800000000	                          call 0x4002cd6	       692	write.c	FUNCTION_15	FOR_1	CALL_3
0x4002cd6	         0xfb65018	           movzx edx, byte [rax + 0x18] 	       696	write.c	FUNCTION_15	FOR_1	IF_1
0x4002cda	          0x80fa02	                               cmp dl, 2	       696	write.c	FUNCTION_15	FOR_1	IF_1
0x4002cdd	            0x7511	                           jne 0x4002cf0	       696	write.c	FUNCTION_15	FOR_1	IF_1
0x4002cdf	        0x488b6b08	                mov rbp, qword [rbx + 8]	       697	write.c	FUNCTION_15	FOR_1	IF_1
0x4002ce3	    0x41bd00000000	                             mov r13d, 0	       694	write.c	FUNCTION_15	FOR_1
0x4002ce9	          0x4885ed	                           test rbp, rbp	       704	write.c	FUNCTION_15	FOR_1	IF_3
0x4002cec	            0x7460	                            je 0x4002d4e	       704	write.c	FUNCTION_15	FOR_1	IF_3
0x4002cee	            0xeb25	                           jmp 0x4002d15	       704	write.c	FUNCTION_15	FOR_1	IF_3
0x4002cf0	    0x41bd00000000	                             mov r13d, 0	       694	write.c	FUNCTION_15	FOR_1
0x4002cf6	          0x80fa03	                               cmp dl, 3	       698	write.c	FUNCTION_15	FOR_1	ELSE_1	IF_2
0x4002cf9	            0x7553	                           jne 0x4002d4e	       698	write.c	FUNCTION_15	FOR_1	ELSE_1	IF_2
0x4002cfb	          0x488b28	                    mov rbp, qword [rax]	       700	write.c	FUNCTION_15	FOR_1	ELSE_1	IF_2
0x4002cfe	        0x4c8b6810	            mov r13, qword [rax + 0x10] 	       701	write.c	FUNCTION_15	FOR_1	ELSE_1	IF_2
0x4002d02	          0x4889ef	                            mov rdi, rbp	       702	write.c	FUNCTION_15	FOR_1	ELSE_1	IF_2	CALL_4
0x4002d05	      0xe800000000	                          call 0x4002d0a	       702	write.c	FUNCTION_15	FOR_1	ELSE_1	IF_2	CALL_4
0x4002d0a	          0x4885ed	                           test rbp, rbp	       704	write.c	FUNCTION_15	FOR_1	IF_3
0x4002d0d	            0x743f	                            je 0x4002d4e	       704	write.c	FUNCTION_15	FOR_1	IF_3
0x4002d0f	        0x80781802	                cmp byte [rax + 0x18], 2	       705	write.c	FUNCTION_15	FOR_1	IF_3
0x4002d13	            0x7539	                           jne 0x4002d4e	       705	write.c	FUNCTION_15	FOR_1	IF_3
0x4002d15	          0x4889ef	                            mov rdi, rbp	       706	write.c	FUNCTION_15	FOR_1	IF_3	CALL_5
0x4002d18	      0xe800000000	                          call 0x4002d1d	       706	write.c	FUNCTION_15	FOR_1	IF_3	CALL_5
0x4002d1d	          0x4989c4	                            mov r12, rax	       706	write.c	FUNCTION_15	FOR_1	IF_3	CALL_5
0x4002d20	    0x483d00000000	                              cmp rax, 0	       707	write.c	FUNCTION_15	FOR_1	IF_3	CALL_6
0x4002d26	           0xf94c2	                                 sete dl	       707	write.c	FUNCTION_15	FOR_1	IF_3	CALL_6
0x4002d29	          0x4885c0	                           test rax, rax	       707	write.c	FUNCTION_15	FOR_1	IF_3	CALL_6
0x4002d2c	           0xf94c0	                                 sete al	       707	write.c	FUNCTION_15	FOR_1	IF_3	CALL_6
0x4002d2f	             0x8c2	                               or dl, al	       707	write.c	FUNCTION_15	FOR_1	IF_3	CALL_6
0x4002d31	            0x751b	                           jne 0x4002d4e	       707	write.c	FUNCTION_15	FOR_1	IF_3	CALL_6
0x4002d33	    0x4981fc000000	                              cmp r12, 0	       707	write.c	FUNCTION_15	FOR_1	IF_3	CALL_6
0x4002d3a	            0x7412	                            je 0x4002d4e	       707	write.c	FUNCTION_15	FOR_1	IF_3	CALL_6
0x4002d3c	    0x4c3b25000000	            cmp r12, qword [0x04002d43] 	       707	write.c	FUNCTION_15	FOR_1	IF_3	CALL_6
0x4002d43	            0x7409	                            je 0x4002d4e	       707	write.c	FUNCTION_15	FOR_1	IF_3	CALL_6
0x4002d45	    0x4c3b25000000	            cmp r12, qword [0x04002d4c] 	       707	write.c	FUNCTION_15	FOR_1	IF_3	CALL_6
0x4002d4c	            0x7530	                           jne 0x4002d7e	       707	write.c	FUNCTION_15	FOR_1	IF_3	CALL_6
0x4002d4e	      0xba05000000	                              mov edx, 5	       709	write.c	FUNCTION_15	FOR_1	IF_3	CALL_8
0x4002d53	      0xbe00000000	                              mov esi, 0	       709	write.c	FUNCTION_15	FOR_1	IF_3	CALL_8
0x4002d58	      0xbf00000000	                              mov edi, 0	       709	write.c	FUNCTION_15	FOR_1	IF_3	CALL_8
0x4002d5d	      0xe800000000	                          call 0x4002d62	       709	write.c	FUNCTION_15	FOR_1	IF_3	CALL_8
0x4002d62	          0x8b7340	            mov esi, dword [rbx + 0x40] 	       709	write.c	FUNCTION_15	FOR_1	IF_3	CALL_8
0x4002d65	        0x488b7b38	            mov rdi, qword [rbx + 0x38] 	       709	write.c	FUNCTION_15	FOR_1	IF_3	CALL_8
0x4002d69	          0x4889c2	                            mov rdx, rax	       709	write.c	FUNCTION_15	FOR_1	IF_3	CALL_8
0x4002d6c	      0xb800000000	                              mov eax, 0	       709	write.c	FUNCTION_15	FOR_1	IF_3	CALL_8
0x4002d71	      0xe800000000	                          call 0x4002d76	       709	write.c	FUNCTION_15	FOR_1	IF_3	CALL_8
0x4002d76	    0x41bc00000000	                             mov r12d, 0	       710	write.c	FUNCTION_15	FOR_1	IF_3
0x4002d7c	            0xeb0b	                           jmp 0x4002d89	       710	write.c	FUNCTION_15	FOR_1	IF_3
0x4002d7e	          0x4889ef	                            mov rdi, rbp	       713	write.c	FUNCTION_15	FOR_1	CALL_9
0x4002d81	      0xe800000000	                          call 0x4002d86	       713	write.c	FUNCTION_15	FOR_1	CALL_9
0x4002d86	          0x4901c5	                            add r13, rax	       713	write.c	FUNCTION_15	FOR_1	CALL_9
0x4002d89	        0x4c8b7320	            mov r14, qword [rbx + 0x20] 	       716	write.c	FUNCTION_15	FOR_1
0x4002d8d	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       717	write.c	FUNCTION_15	FOR_1	IF_4
0x4002d91	          0x4885ff	                           test rdi, rdi	       717	write.c	FUNCTION_15	FOR_1	IF_4
0x4002d94	     0xf84f8000000	                            je 0x4002e92	       717	write.c	FUNCTION_15	FOR_1	IF_4
0x4002d9a	      0xe800000000	                          call 0x4002d9f	       719	write.c	FUNCTION_15	FOR_1	IF_4	CALL_10
0x4002d9f	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       720	write.c	FUNCTION_15	FOR_1	IF_4	CALL_11
0x4002da3	      0xe800000000	                          call 0x4002da8	       720	write.c	FUNCTION_15	FOR_1	IF_4	CALL_11
0x4002da8	         0xfb65018	           movzx edx, byte [rax + 0x18] 	       721	write.c	FUNCTION_15	FOR_1	IF_4	IF_5
0x4002dac	          0x80fa02	                               cmp dl, 2	       721	write.c	FUNCTION_15	FOR_1	IF_4	IF_5
0x4002daf	            0x7506	                           jne 0x4002db7	       721	write.c	FUNCTION_15	FOR_1	IF_4	IF_5
0x4002db1	        0x488b6b18	            mov rbp, qword [rbx + 0x18] 	       722	write.c	FUNCTION_15	FOR_1	IF_4	IF_5
0x4002db5	            0xeb52	                           jmp 0x4002e09	       722	write.c	FUNCTION_15	FOR_1	IF_4	IF_5
0x4002db7	      0xbd00000000	                              mov ebp, 0	       715	write.c	FUNCTION_15	FOR_1
0x4002dbc	          0x80fa03	                               cmp dl, 3	       723	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_3	IF_6
0x4002dbf	            0x7515	                           jne 0x4002dd6	       723	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_3	IF_6
0x4002dc1	          0x488b28	                    mov rbp, qword [rax]	       725	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_3	IF_6
0x4002dc4	        0x4c037010	             add r14, qword [rax + 0x10]	       726	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_3	IF_6
0x4002dc8	          0x4889ef	                            mov rdi, rbp	       727	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_3	IF_6	CALL_12
0x4002dcb	      0xe800000000	                          call 0x4002dd0	       727	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_3	IF_6	CALL_12
0x4002dd0	        0x80781802	                cmp byte [rax + 0x18], 2	       729	write.c	FUNCTION_15	FOR_1	IF_4	IF_7
0x4002dd4	            0x7433	                            je 0x4002e09	       729	write.c	FUNCTION_15	FOR_1	IF_4	IF_7
0x4002dd6	      0xba05000000	                              mov edx, 5	       731	write.c	FUNCTION_15	FOR_1	IF_4	IF_7	CALL_14
0x4002ddb	      0xbe00000000	                              mov esi, 0	       731	write.c	FUNCTION_15	FOR_1	IF_4	IF_7	CALL_14
0x4002de0	      0xbf00000000	                              mov edi, 0	       731	write.c	FUNCTION_15	FOR_1	IF_4	IF_7	CALL_14
0x4002de5	      0xe800000000	                          call 0x4002dea	       731	write.c	FUNCTION_15	FOR_1	IF_4	IF_7	CALL_14
0x4002dea	          0x8b7340	            mov esi, dword [rbx + 0x40] 	       731	write.c	FUNCTION_15	FOR_1	IF_4	IF_7	CALL_14
0x4002ded	        0x488b7b38	            mov rdi, qword [rbx + 0x38] 	       731	write.c	FUNCTION_15	FOR_1	IF_4	IF_7	CALL_14
0x4002df1	          0x4889c2	                            mov rdx, rax	       731	write.c	FUNCTION_15	FOR_1	IF_4	IF_7	CALL_14
0x4002df4	      0xb800000000	                              mov eax, 0	       731	write.c	FUNCTION_15	FOR_1	IF_4	IF_7	CALL_14
0x4002df9	      0xe800000000	                          call 0x4002dfe	       731	write.c	FUNCTION_15	FOR_1	IF_4	IF_7	CALL_14
0x4002dfe	    0x41bc00000000	                             mov r12d, 0	       732	write.c	FUNCTION_15	FOR_1	IF_4	IF_7
0x4002e04	      0xe984000000	                           jmp 0x4002e8d	       732	write.c	FUNCTION_15	FOR_1	IF_4	IF_7
0x4002e09	          0x4885ed	                           test rbp, rbp	       734	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8
0x4002e0c	            0x747f	                            je 0x4002e8d	       734	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8
0x4002e0e	          0x4d85e4	                           test r12, r12	       734	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8
0x4002e11	            0x747a	                            je 0x4002e8d	       734	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8
0x4002e13	          0x4889ef	                            mov rdi, rbp	       742	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	CALL_16
0x4002e16	      0xe800000000	                          call 0x4002e1b	       742	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	CALL_16
0x4002e1b	            0x85c0	                           test eax, eax	       742	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	CALL_16
0x4002e1d	            0x7466	                            je 0x4002e85	       742	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	CALL_16
0x4002e1f	          0x4889ef	                            mov rdi, rbp	       742	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	CALL_16
0x4002e22	      0xe800000000	                          call 0x4002e27	       742	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	CALL_16
0x4002e27	            0x85c0	                           test eax, eax	       742	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	CALL_16
0x4002e29	            0x755a	                           jne 0x4002e85	       742	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	CALL_16
0x4002e2b	    0x41f644242504	               test byte [r12 + 0x25], 4	       743	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9
0x4002e31	            0x7519	                           jne 0x4002e4c	       743	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9
0x4002e33	      0x41837f3000	               cmp dword [r15 + 0x30], 0	       744	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9
0x4002e38	            0x744b	                            je 0x4002e85	       744	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9
0x4002e3a	      0x41837f1000	               cmp dword [r15 + 0x10], 0	       745	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9
0x4002e3f	            0x740b	                            je 0x4002e4c	       745	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9
0x4002e41	      0x488b442408	                mov rax, qword [rsp + 8]	       746	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9
0x4002e46	        0x493b4738	            cmp rax, qword [r15 + 0x38] 	       746	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9
0x4002e4a	            0x7539	                           jne 0x4002e85	       746	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9
0x4002e4c	          0x4889ef	                            mov rdi, rbp	       748	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	CALL_17
0x4002e4f	      0xe800000000	                          call 0x4002e54	       748	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	CALL_17
0x4002e54	      0x4889442410	             mov qword [rsp + 0x10], rax	       748	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	CALL_17
0x4002e59	          0x8b4020	            mov eax, dword [rax + 0x20] 	       749	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	IF_10
0x4002e5c	      0xa900008000	                      test eax, 0x800000	       750	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	IF_10
0x4002e61	            0x7405	                            je 0x4002e68	       750	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	IF_10
0x4002e63	          0x4d85f6	                           test r14, r14	       750	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	IF_10
0x4002e66	            0x751d	                           jne 0x4002e85	       750	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	IF_10
0x4002e68	          0xf6c404	                              test ah, 4	       749	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	IF_10
0x4002e6b	            0x7518	                           jne 0x4002e85	       749	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	IF_10
0x4002e6d	          0x4889ef	                            mov rdi, rbp	       753	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	IF_10	CALL_18
0x4002e70	      0xe800000000	                          call 0x4002e75	       753	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	IF_10	CALL_18
0x4002e75	          0x4901c6	                            add r14, rax	       753	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	IF_10	CALL_18
0x4002e78	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       754	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	IF_10	CALL_19
0x4002e7d	      0xe800000000	                          call 0x4002e82	       754	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	IF_10	CALL_19
0x4002e82	          0x4889c5	                            mov rbp, rax	       754	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	IF_9	IF_10	CALL_19
0x4002e85	          0x4889ef	                            mov rdi, rbp	       757	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	CALL_20
0x4002e88	      0xe800000000	                          call 0x4002e8d	       757	write.c	FUNCTION_15	FOR_1	IF_4	ELSE_4	IF_8	CALL_20
0x4002e8d	          0x4885ed	                           test rbp, rbp	       760	write.c	FUNCTION_15	FOR_1	IF_11
0x4002e90	            0x7522	                           jne 0x4002eb4	       760	write.c	FUNCTION_15	FOR_1	IF_11
0x4002e92	    0x48833d000000	               cmp qword [0x04002e9a], 0	       762	write.c	FUNCTION_15	FOR_1	IF_11	IF_12
0x4002e9a	            0x7511	                           jne 0x4002ead	       762	write.c	FUNCTION_15	FOR_1	IF_11	IF_12
0x4002e9c	      0xbf00000000	                              mov edi, 0	       763	write.c	FUNCTION_15	FOR_1	IF_11	CALL_21
0x4002ea1	      0xe800000000	                          call 0x4002ea6	       763	write.c	FUNCTION_15	FOR_1	IF_11	CALL_21
0x4002ea6	    0x488905000000	            mov qword [0x04002ead], rax 	       763	write.c	FUNCTION_15	FOR_1	IF_11	CALL_21
0x4002ead	    0x488b2d000000	            mov rbp, qword [0x04002eb4] 	       764	write.c	FUNCTION_15	FOR_1	IF_11
0x4002eb4	        0x4c896308	                mov qword [rbx + 8], r12	       767	write.c	FUNCTION_15	FOR_1
0x4002eb8	          0x4889ef	                            mov rdi, rbp	       768	write.c	FUNCTION_15	FOR_1	CALL_22
0x4002ebb	      0xe800000000	                          call 0x4002ec0	       768	write.c	FUNCTION_15	FOR_1	CALL_22
0x4002ec0	        0x48894310	             mov qword [rbx + 0x10], rax	       768	write.c	FUNCTION_15	FOR_1	CALL_22
0x4002ec4	        0x488d4310	                   lea rax, [rbx + 0x10]	       769	write.c	FUNCTION_15	FOR_1
0x4002ec8	        0x48894318	             mov qword [rbx + 0x18], rax	       769	write.c	FUNCTION_15	FOR_1
0x4002ecc	        0x4c896b20	             mov qword [rbx + 0x20], r13	       770	write.c	FUNCTION_15	FOR_1
0x4002ed0	        0x4c897328	             mov qword [rbx + 0x28], r14	       771	write.c	FUNCTION_15	FOR_1
0x4002ed4	        0x4c897b30	             mov qword [rbx + 0x30], r15	       772	write.c	FUNCTION_15	FOR_1
0x4002ed8	          0x488b1b	                    mov rbx, qword [rbx]	       683	write.c	FUNCTION_15	FOR_1
0x4002edb	          0x4885db	                           test rbx, rbx	       683	write.c	FUNCTION_15	FOR_1
0x4002ede	     0xf85dcfdffff	                           jne 0x4002cc0	       683	write.c	FUNCTION_15	FOR_1
0x4002ee4	    0x833d00000000	               cmp dword [0x04002eeb], 0	      1955	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_1
0x4002eeb	     0xf84de070000	                            je 0x40036cf	      1955	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_1
0x4002ef1	      0xbe00000000	                              mov esi, 0	      1956	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_1	CALL_1
0x4002ef6	    0x488b3d000000	            mov rdi, qword [0x04002efd] 	      1956	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_1	CALL_1
0x4002efd	      0xe800000000	                          call 0x4002f02	      1956	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_1	CALL_1
0x4002f02	          0x4885c0	                           test rax, rax	      1956	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_1	CALL_1
0x4002f05	     0xf85e5020000	                           jne 0x40031f0	      1956	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_1	CALL_1
0x4002f0b	      0xbe00000000	                              mov esi, 0	      1961	write.c	ELSE_1	ELSE_2	FUNCTION_32	CALL_2
0x4002f10	      0xbf00000000	                              mov edi, 0	      1961	write.c	ELSE_1	ELSE_2	FUNCTION_32	CALL_2
0x4002f15	      0xe800000000	                          call 0x4002f1a	      1961	write.c	ELSE_1	ELSE_2	FUNCTION_32	CALL_2
0x4002f1a	          0x4889c5	                            mov rbp, rax	      1961	write.c	ELSE_1	ELSE_2	FUNCTION_32	CALL_2
0x4002f1d	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      1962	write.c	ELSE_1	ELSE_2	FUNCTION_32	CALL_3
0x4002f24	    0xc74004070000	                  mov dword [rax + 4], 7	      1962	write.c	ELSE_1	ELSE_2	FUNCTION_32	CALL_3
0x4002f2b	      0xba28010000	                          mov edx, 0x128	      1963	write.c	ELSE_1	ELSE_2	FUNCTION_32	CALL_4
0x4002f30	          0x4889ee	                            mov rsi, rbp	      1963	write.c	ELSE_1	ELSE_2	FUNCTION_32	CALL_4
0x4002f33	    0x488b3d000000	            mov rdi, qword [0x04002f3a] 	      1963	write.c	ELSE_1	ELSE_2	FUNCTION_32	CALL_4
0x4002f3a	      0xe800000000	                          call 0x4002f3f	      1963	write.c	ELSE_1	ELSE_2	FUNCTION_32	CALL_4
0x4002f3f	    0xc74570020000	               mov dword [rbp + 0x70], 2	      1696	bfd.h	FUNCTION_72
0x4002f46	    0x488b3d000000	            mov rdi, qword [0x04002f4d] 	      1969	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_2	CALL_6
0x4002f4d	      0xe800000000	                          call 0x4002f52	      1969	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_2	CALL_6
0x4002f52	          0x83f820	                           cmp eax, 0x20	      1969	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_2	CALL_6
0x4002f55	            0x7766	                            ja 0x4002fbd	      1969	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_2	CALL_6
0x4002f57	    0x488b05000000	            mov rax, qword [0x04002f5e] 	      1978	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_2	IF_3	CALL_7
0x4002f5e	        0x488b4008	                mov rax, qword [rax + 8]	      1978	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_2	IF_3	CALL_7
0x4002f62	          0x488b18	                    mov rbx, qword [rax]	      1978	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_2	IF_3	CALL_7
0x4002f65	      0xbe00000000	                              mov esi, 0	      1978	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_2	IF_3	CALL_7
0x4002f6a	          0x4889df	                            mov rdi, rbx	      1978	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_2	IF_3	CALL_7
0x4002f6d	      0xe800000000	                          call 0x4002f72	      1978	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_2	IF_3	CALL_7
0x4002f72	          0x4885c0	                           test rax, rax	      1978	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_2	IF_3	CALL_7
0x4002f75	     0xf85cc000000	                           jne 0x4003047	      1978	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_2	IF_3	CALL_7
0x4002f7b	      0xbe00000000	                              mov esi, 0	      1980	write.c	ELSE_2	FUNCTION_32	IF_2	IF_4	CALL_8
0x4002f80	          0x4889df	                            mov rdi, rbx	      1980	write.c	ELSE_2	FUNCTION_32	IF_2	IF_4	CALL_8
0x4002f83	      0xe800000000	                          call 0x4002f88	      1980	write.c	ELSE_2	FUNCTION_32	IF_2	IF_4	CALL_8
0x4002f88	        0x4883f801	                              cmp rax, 1	      1983	write.c	FUNCTION_32	IF_2	ELSE_1	ELSE_2
0x4002f8c	          0x4519e4	                          sbb r12d, r12d	      1983	write.c	FUNCTION_32	IF_2	ELSE_1	ELSE_2
0x4002f8f	    0x4181e4c8f9ff	                    and r12d, 0xfffff9c8	      1983	write.c	FUNCTION_32	IF_2	ELSE_1	ELSE_2
0x4002f96	    0x4181c43a0600	                         add r12d, 0x63a	      1983	write.c	FUNCTION_32	IF_2	ELSE_1	ELSE_2
0x4002f9d	    0x48c744241818	           mov qword [rsp + 0x18], 0x18 	      1983	write.c	FUNCTION_32	IF_2	ELSE_1	ELSE_2
0x4002fa6	    0x48c744241008	               mov qword [rsp + 0x10], 8	      1983	write.c	FUNCTION_32	IF_2	ELSE_1	ELSE_2
0x4002faf	    0x48c74424081c	               mov qword [rsp + 8], 0x1c	      1983	write.c	FUNCTION_32	IF_2	ELSE_1	ELSE_2
0x4002fb8	      0xe9ab000000	                           jmp 0x4003068	      1983	write.c	FUNCTION_32	IF_2	ELSE_1	ELSE_2
0x4002fbd	    0x488b05000000	            mov rax, qword [0x04002fc4] 	      1994	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	IF_5	CALL_9
0x4002fc4	        0x488b4008	                mov rax, qword [rax + 8]	      1994	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	IF_5	CALL_9
0x4002fc8	          0x488b18	                    mov rbx, qword [rax]	      1994	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	IF_5	CALL_9
0x4002fcb	      0xbe00000000	                              mov esi, 0	      1994	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	IF_5	CALL_9
0x4002fd0	          0x4889df	                            mov rdi, rbx	      1994	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	IF_5	CALL_9
0x4002fd3	      0xe800000000	                          call 0x4002fd8	      1994	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	IF_5	CALL_9
0x4002fd8	          0x4885c0	                           test rax, rax	      1994	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	IF_5	CALL_9
0x4002fdb	            0x7431	                            je 0x400300e	      1994	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	IF_5	CALL_9
0x4002fdd	    0x833d00000000	               cmp dword [0x04002fe4], 1	      1995	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	IF_5
0x4002fe4	          0x4519e4	                          sbb r12d, r12d	      1995	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	IF_5
0x4002fe7	          0x41f7d4	                                not r12d	      1995	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	IF_5
0x4002fea	    0x4181c4a90500	                         add r12d, 0x5a9	      1995	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	IF_5
0x4002ff1	    0x48c74424181c	           mov qword [rsp + 0x18], 0x1c 	      1995	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	IF_5
0x4002ffa	    0x48c744241010	           mov qword [rsp + 0x10], 0x10 	      1995	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	IF_5
0x4003003	    0x48c744240824	               mov qword [rsp + 8], 0x24	      1995	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	IF_5
0x400300c	            0xeb5a	                           jmp 0x4003068	      1995	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	IF_5
0x400300e	      0xbe00000000	                              mov esi, 0	      1996	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_6	CALL_10
0x4003013	          0x4889df	                            mov rdi, rbx	      1996	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_6	CALL_10
0x4003016	      0xe800000000	                          call 0x400301b	      1996	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_6	CALL_10
0x400301b	        0x4883f801	                              cmp rax, 1	      1999	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	ELSE_5
0x400301f	          0x4519e4	                          sbb r12d, r12d	      1999	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	ELSE_5
0x4003022	        0x4183e4b1	                    and r12d, 0xffffffb1	      1999	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	ELSE_5
0x4003026	        0x4183c450	                          add r12d, 0x50	      1999	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	ELSE_5
0x400302a	    0x48c74424181c	           mov qword [rsp + 0x18], 0x1c 	      1999	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	ELSE_5
0x4003033	    0x48c744241010	           mov qword [rsp + 0x10], 0x10 	      1999	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	ELSE_5
0x400303c	    0x48c744240824	               mov qword [rsp + 8], 0x24	      1999	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	ELSE_5
0x4003045	            0xeb21	                           jmp 0x4003068	      1999	write.c	FUNCTION_32	ELSE_1	ELSE_2	ELSE_3	ELSE_5
0x4003047	    0x41bc67060000	                         mov r12d, 0x667	      1979	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_2	IF_3
0x400304d	    0x48c744241818	           mov qword [rsp + 0x18], 0x18 	      1973	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_2
0x4003056	    0x48c744241008	               mov qword [rsp + 0x10], 8	      1972	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_2
0x400305f	    0x48c74424081c	               mov qword [rsp + 8], 0x1c	      1971	write.c	ELSE_1	ELSE_2	FUNCTION_32	IF_2
0x4003068	    0x488b1d000000	            mov rbx, qword [0x0400306f] 	      2007	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1
0x400306f	          0x4885db	                           test rbx, rbx	      2007	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1
0x4003072	     0xf8442010000	                            je 0x40031ba	      2007	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1
0x4003078	    0x41bd00000000	                             mov r13d, 0	      2007	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1
0x400307e	    0x41be00000000	                             mov r14d, 0	      2007	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1
0x4003084	    0x49bf47412401	            movabs r15, 0x31613301244147	        53	string3.h	FUNCTION_58	CALL_3
0x400308e	        0x488b4308	                mov rax, qword [rbx + 8]	      2008	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x4003092	          0x4885c0	                           test rax, rax	      2008	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x4003095	     0xf84f3000000	                            je 0x400318e	      2008	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x400309b	        0xf6401901	               test byte [rax + 0x19], 1	      2009	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x400309f	     0xf84e9000000	                            je 0x400318e	      2009	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x40030a5	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2010	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x40030a9	          0x4885c0	                           test rax, rax	      2010	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x40030ac	     0xf84dc000000	                            je 0x400318e	      2010	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x40030b2	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2012	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x40030b5	      0x2510000200	                        and eax, 0x20010	      2012	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x40030ba	          0x83f810	                           cmp eax, 0x10	      2012	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x40030bd	     0xf85cb000000	                           jne 0x400318e	      2012	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x40030c3	          0x4889df	                            mov rdi, rbx	      2014	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_12
0x40030c6	      0xe800000000	                          call 0x40030cb	      2014	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_12
0x40030cb	      0xbf00000000	                              mov edi, 0	      2014	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_12
0x40030d0	      0xb90d000000	                            mov ecx, 0xd	      2014	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_12
0x40030d5	          0x4889c6	                            mov rsi, rax	      2014	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_12
0x40030d8	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2014	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_12
0x40030da	           0xf97c2	                                 seta dl	      2014	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_12
0x40030dd	           0xf92c0	                                 setb al	      2014	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_12
0x40030e0	            0x38c2	                              cmp dl, al	      2014	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_12
0x40030e2	     0xf84a6000000	                            je 0x400318e	      2014	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_12
0x40030e8	      0xe800000000	                          call 0x40030ed	      2017	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_13
0x40030ed	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      2018	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_14
0x40030f2	      0xe800000000	                          call 0x40030f7	      2018	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_14
0x40030f7	          0x4989c5	                            mov r13, rax	      2018	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_14
0x40030fa	      0x488b542408	                mov rdx, qword [rsp + 8]	        90	string3.h	FUNCTION_61	CALL_6
0x40030ff	      0xbe00000000	                              mov esi, 0	        90	string3.h	FUNCTION_61	CALL_6
0x4003104	          0x4889c7	                            mov rdi, rax	        90	string3.h	FUNCTION_61	CALL_6
0x4003107	      0xe800000000	                          call 0x400310c	        90	string3.h	FUNCTION_61	CALL_6
0x400310c	    0x833d00000000	               cmp dword [0x04003113], 0	      2021	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	IF_8
0x4003113	            0x741a	                            je 0x400312f	      2021	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	IF_8
0x4003115	      0x41c6450308	                   mov byte [r13 + 3], 8	      2023	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	IF_8
0x400311a	       0xfb6442410	           movzx eax, byte [rsp + 0x10] 	      2024	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	IF_8
0x400311f	        0x41884507	                  mov byte [r13 + 7], al	      2024	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	IF_8
0x4003123	      0x41c6450a01	                 mov byte [r13 + 0xa], 1	      2025	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	IF_8
0x4003128	      0x41c6450b00	                 mov byte [r13 + 0xb], 0	      2026	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	IF_8
0x400312d	            0xeb18	                           jmp 0x4003147	      2026	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	IF_8
0x400312f	      0x41c6450008	                       mov byte [r13], 8	      2030	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	ELSE_6
0x4003134	       0xfb6442410	           movzx eax, byte [rsp + 0x10] 	      2031	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	ELSE_6
0x4003139	        0x41884504	                  mov byte [r13 + 4], al	      2031	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	ELSE_6
0x400313d	      0x41c6450800	                   mov byte [r13 + 8], 0	      2032	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	ELSE_6
0x4003142	      0x41c6450901	                   mov byte [r13 + 9], 1	      2033	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	ELSE_6
0x4003147	        0x4d897d0c	              mov qword [r13 + 0xc], r15	        53	string3.h	FUNCTION_58	CALL_3
0x400314b	          0x4d89e9	                             mov r9, r13	      2041	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_17
0x400314e	    0x41b800000000	                              mov r8d, 0	      2041	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_17
0x4003154	          0x4489e1	                           mov ecx, r12d	      2041	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_17
0x4003157	      0xba14000000	                           mov edx, 0x14	      2041	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_17
0x400315c	          0x4889de	                            mov rsi, rbx	      2041	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_17
0x400315f	          0x4889ef	                            mov rdi, rbp	      2041	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_17
0x4003162	      0xe80be2ffff	              call sym.create_note_reloc	      2041	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_17
0x4003167	        0x488b4308	                mov rax, qword [rbx + 8]	      2045	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x400316b	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2044	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_18
0x400316f	          0x4d89e9	                             mov r9, r13	      2044	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_18
0x4003172	        0x4c8b4038	              mov r8, qword [rax + 0x38]	      2044	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_18
0x4003176	          0x4489e1	                           mov ecx, r12d	      2044	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_18
0x4003179	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      2044	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_18
0x400317e	          0x4889de	                            mov rsi, rbx	      2044	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_18
0x4003181	          0x4889ef	                            mov rdi, rbp	      2044	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_18
0x4003184	      0xe8e9e1ffff	              call sym.create_note_reloc	      2044	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7	CALL_18
0x4003189	      0x4c03742408	                add r14, qword [rsp + 8]	      2048	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1	IF_7
0x400318e	        0x488b5b30	            mov rbx, qword [rbx + 0x30] 	      2007	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1
0x4003192	          0x4885db	                           test rbx, rbx	      2007	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1
0x4003195	     0xf85f3feffff	                           jne 0x400308e	      2007	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1
0x400319b	          0x4d85f6	                           test r14, r14	      2053	write.c	FUNCTION_32	ELSE_1	ELSE_2	IF_9
0x400319e	            0x741a	                            je 0x40031ba	      2053	write.c	FUNCTION_32	ELSE_1	ELSE_2	IF_9
0x40031a0	          0x4d89f0	                             mov r8, r14	      2054	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_19
0x40031a3	      0xb900000000	                              mov ecx, 0	      2054	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_19
0x40031a8	          0x4c89ea	                            mov rdx, r13	      2054	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_19
0x40031ab	          0x4889ee	                            mov rsi, rbp	      2054	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_19
0x40031ae	    0x488b3d000000	            mov rdi, qword [0x040031b5] 	      2054	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_19
0x40031b5	      0xe800000000	                          call 0x40031ba	      2054	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_19
0x40031ba	          0x4889ef	                            mov rdi, rbp	      2055	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_20
0x40031bd	      0xe8bfe0ffff	         call sym.subsegs_finish_section	      2055	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_20
0x40031c2	    0x488b85a80000	            mov rax, qword [rbp + 0xa8] 	      2056	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_22
0x40031c9	          0x488b00	                    mov rax, qword [rax]	      2056	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_22
0x40031cc	      0xba00000000	                              mov edx, 0	      2056	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_22
0x40031d1	          0x4889ee	                            mov rsi, rbp	      2056	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_22
0x40031d4	          0x488b38	                    mov rdi, qword [rax]	      2056	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_22
0x40031d7	      0xe800000000	                          call 0x40031dc	      2056	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_22
0x40031dc	      0xba00000000	                              mov edx, 0	      2057	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_23
0x40031e1	          0x4889ee	                            mov rsi, rbp	      2057	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_23
0x40031e4	    0x488b3d000000	            mov rdi, qword [0x040031eb] 	      2057	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_23
0x40031eb	      0xe8f7dcffff	                       call sym.size_seg	      2057	write.c	FUNCTION_32	ELSE_1	ELSE_2	CALL_23
0x40031f0	      0xe800000000	                          call 0x40031f5	      2282	write.c	FUNCTION_33	CALL_26
0x40031f5	      0xba00000000	                              mov edx, 0	      2285	write.c	FUNCTION_33	CALL_27
0x40031fa	      0xbe00000000	                              mov esi, 0	      2285	write.c	FUNCTION_33	CALL_27
0x40031ff	    0x488b3d000000	            mov rdi, qword [0x04003206] 	      2285	write.c	FUNCTION_33	CALL_27
0x4003206	      0xe800000000	                          call 0x400320b	      2285	write.c	FUNCTION_33	CALL_27
0x400320b	      0xba00000000	                              mov edx, 0	      2294	write.c	FUNCTION_33	CALL_30
0x4003210	      0xbe00000000	                              mov esi, 0	      2294	write.c	FUNCTION_33	CALL_30
0x4003215	    0x488b3d000000	            mov rdi, qword [0x0400321c] 	      2294	write.c	FUNCTION_33	CALL_30
0x400321c	      0xe800000000	                          call 0x4003221	      2294	write.c	FUNCTION_33	CALL_30
0x4003221	    0x488b1d000000	            mov rbx, qword [0x04003228] 	      2297	write.c	FUNCTION_33	IF_11
0x4003228	          0x4885db	                           test rbx, rbx	      2297	write.c	FUNCTION_33	IF_11
0x400322b	     0xf84cf020000	                            je 0x4003500	      2297	write.c	FUNCTION_33	IF_11
0x4003231	      0xbd00000000	                              mov ebp, 0	      2007	write.c	FUNCTION_32	ELSE_1	ELSE_2	FOR_1
0x4003236	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	      2304	write.c	FUNCTION_33	IF_11	FOR_8
0x400323e	            0x85ed	                           test ebp, ebp	      2307	write.c	FUNCTION_33	IF_11	FOR_8	IF_12
0x4003240	            0x741c	                            je 0x400325e	      2307	write.c	FUNCTION_33	IF_11	FOR_8	IF_12
0x4003242	          0x4889df	                            mov rdi, rbx	      2311	write.c	FUNCTION_33	IF_11	FOR_8	IF_12	CALL_33
0x4003245	      0xe800000000	                          call 0x400324a	      2311	write.c	FUNCTION_33	IF_11	FOR_8	IF_12	CALL_33
0x400324a	          0x4889c5	                            mov rbp, rax	      2311	write.c	FUNCTION_33	IF_11	FOR_8	IF_12	CALL_33
0x400324d	          0x4889df	                            mov rdi, rbx	      2311	write.c	FUNCTION_33	IF_11	FOR_8	IF_12	CALL_33
0x4003250	      0xe800000000	                          call 0x4003255	      2311	write.c	FUNCTION_33	IF_11	FOR_8	IF_12	CALL_33
0x4003255	        0x48894510	            mov qword [rbp + 0x10], rax 	      2311	write.c	FUNCTION_33	IF_11	FOR_8	IF_12	CALL_33
0x4003259	      0xe989020000	                           jmp 0x40034e7	      2313	write.c	FUNCTION_33	IF_11	FOR_8	IF_12
0x400325e	          0x4889df	                            mov rdi, rbx	      2316	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	CALL_34
0x4003261	      0xe800000000	                          call 0x4003266	      2316	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	CALL_34
0x4003266	            0x85c0	                           test eax, eax	      2316	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	CALL_34
0x4003268	            0x7452	                            je 0x40032bc	      2316	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	CALL_34
0x400326a	          0x4889df	                            mov rdi, rbx	      2318	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	IF_14	CALL_35
0x400326d	      0xe800000000	                          call 0x4003272	      2318	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	IF_14	CALL_35
0x4003272	            0x85c0	                           test eax, eax	      2318	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	IF_14	CALL_35
0x4003274	            0x742f	                            je 0x40032a5	      2318	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	IF_14	CALL_35
0x4003276	          0x4889df	                            mov rdi, rbx	      2319	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	IF_14	CALL_37
0x4003279	      0xe800000000	                          call 0x400327e	      2319	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	IF_14	CALL_37
0x400327e	          0x4889c5	                            mov rbp, rax	      2319	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	IF_14	CALL_37
0x4003281	      0xba05000000	                              mov edx, 5	      2319	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	IF_14	CALL_37
0x4003286	      0xbe00000000	                              mov esi, 0	      2319	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	IF_14	CALL_37
0x400328b	      0xbf00000000	                              mov edi, 0	      2319	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	IF_14	CALL_37
0x4003290	      0xe800000000	                          call 0x4003295	      2319	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	IF_14	CALL_37
0x4003295	          0x4889ee	                            mov rsi, rbp	      2319	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	IF_14	CALL_37
0x4003298	          0x4889c7	                            mov rdi, rax	      2319	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	IF_14	CALL_37
0x400329b	      0xb800000000	                              mov eax, 0	      2319	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	IF_14	CALL_37
0x40032a0	      0xe800000000	                          call 0x40032a5	      2319	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	IF_14	CALL_37
0x40032a5	      0xba00000000	                              mov edx, 0	      2321	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	CALL_39
0x40032aa	      0xbe00000000	                              mov esi, 0	      2321	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	CALL_39
0x40032af	          0x4889df	                            mov rdi, rbx	      2321	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	CALL_39
0x40032b2	      0xe800000000	                          call 0x40032b7	      2321	write.c	FUNCTION_33	IF_11	FOR_8	IF_13	CALL_39
0x40032b7	      0xe92b020000	                           jmp 0x40034e7	      2322	write.c	FUNCTION_33	IF_11	FOR_8	IF_13
0x40032bc	          0x4889df	                            mov rdi, rbx	      2325	write.c	FUNCTION_33	IF_11	FOR_8	CALL_40
0x40032bf	      0xe800000000	                          call 0x40032c4	      2325	write.c	FUNCTION_33	IF_11	FOR_8	CALL_40
0x40032c4	          0x4889c5	                            mov rbp, rax	      2325	write.c	FUNCTION_33	IF_11	FOR_8	CALL_40
0x40032c7	          0x4885c0	                           test rax, rax	      2326	write.c	FUNCTION_33	IF_11	FOR_8	IF_15
0x40032ca	            0x7448	                            je 0x4003314	      2326	write.c	FUNCTION_33	IF_11	FOR_8	IF_15
0x40032cc	          0x4889df	                            mov rdi, rbx	      2329	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	CALL_42
0x40032cf	      0xe800000000	                          call 0x40032d4	      2329	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	CALL_42
0x40032d4	          0x4889c7	                            mov rdi, rax	      2328	write.c	FUNCTION_33	IF_11	FOR_8	IF_15
0x40032d7	      0xe800000000	                          call 0x40032dc	      2328	write.c	FUNCTION_33	IF_11	FOR_8	IF_15
0x40032dc	          0x4989c4	                            mov r12, rax	      2328	write.c	FUNCTION_33	IF_11	FOR_8	IF_15
0x40032df	          0x4839c5	                            cmp rbp, rax	      2332	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	IF_16	CALL_43
0x40032e2	            0x7430	                            je 0x4003314	      2332	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	IF_16	CALL_43
0x40032e4	          0x4889df	                            mov rdi, rbx	      2332	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	IF_16	CALL_43
0x40032e7	      0xe800000000	                          call 0x40032ec	      2332	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	IF_16	CALL_43
0x40032ec	            0x85c0	                           test eax, eax	      2332	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	IF_16	CALL_43
0x40032ee	            0x7524	                           jne 0x4003314	      2332	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	IF_16	CALL_43
0x40032f0	      0xba05000000	                              mov edx, 5	      2333	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	CALL_45
0x40032f5	      0xbe00000000	                              mov esi, 0	      2333	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	CALL_45
0x40032fa	      0xbf00000000	                              mov edi, 0	      2333	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	CALL_45
0x40032ff	      0xe800000000	                          call 0x4003304	      2333	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	CALL_45
0x4003304	          0x4c89e6	                            mov rsi, r12	      2333	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	CALL_45
0x4003307	          0x4889c7	                            mov rdi, rax	      2333	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	CALL_45
0x400330a	      0xb800000000	                              mov eax, 0	      2333	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	CALL_45
0x400330f	      0xe800000000	                          call 0x4003314	      2333	write.c	FUNCTION_33	IF_11	FOR_8	IF_15	CALL_45
0x4003314	          0x4889df	                            mov rdi, rbx	      2339	write.c	FUNCTION_33	IF_11	FOR_8	CALL_46
0x4003317	      0xe800000000	                          call 0x400331c	      2339	write.c	FUNCTION_33	IF_11	FOR_8	CALL_46
0x400331c	          0x4889df	                            mov rdi, rbx	      2343	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	CALL_47
0x400331f	      0xe800000000	                          call 0x4003324	      2343	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	CALL_47
0x4003324	            0x85c0	                           test eax, eax	      2343	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	CALL_47
0x4003326	            0x7510	                           jne 0x4003338	      2343	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	CALL_47
0x4003328	          0x4889df	                            mov rdi, rbx	      2344	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	CALL_48
0x400332b	      0xe800000000	                          call 0x4003330	      2344	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	CALL_48
0x4003330	            0x85c0	                           test eax, eax	      2344	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	CALL_48
0x4003332	     0xf84d5000000	                            je 0x400340d	      2344	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	CALL_48
0x4003338	          0x4889df	                            mov rdi, rbx	      2346	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	CALL_49
0x400333b	      0xe800000000	                          call 0x4003340	      2346	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	CALL_49
0x4003340	          0x4889c5	                            mov rbp, rax	      2346	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	CALL_49
0x4003343	          0x4889df	                            mov rdi, rbx	      2348	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_50
0x4003346	      0xe800000000	                          call 0x400334b	      2348	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_50
0x400334b	            0x85c0	                           test eax, eax	      2348	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_50
0x400334d	            0x745e	                            je 0x40033ad	      2348	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_50
0x400334f	        0x807d004c	                    cmp byte [rbp], 0x4c	      2349	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18
0x4003353	            0x7512	                           jne 0x4003367	      2349	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18
0x4003355	        0x807d0130	                cmp byte [rbp + 1], 0x30	      2349	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18
0x4003359	            0x750c	                           jne 0x4003367	      2349	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18
0x400335b	        0x807d0201	                   cmp byte [rbp + 2], 1	      2349	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18
0x400335f	            0x7506	                           jne 0x4003367	      2349	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18
0x4003361	        0x807d0300	                   cmp byte [rbp + 3], 0	      2349	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18
0x4003365	            0x7446	                            je 0x40033ad	      2349	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18
0x4003367	          0x4889df	                            mov rdi, rbx	      2350	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_51
0x400336a	      0xe800000000	                          call 0x400336f	      2350	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_51
0x400336f	            0x85c0	                           test eax, eax	      2350	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_51
0x4003371	            0x753a	                           jne 0x40033ad	      2350	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_51
0x4003373	          0x4889df	                            mov rdi, rbx	      2352	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_52
0x4003376	      0xe800000000	                          call 0x400337b	      2352	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_52
0x400337b	          0x488b38	                    mov rdi, qword [rax]	      2354	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_54
0x400337e	      0xe800000000	                          call 0x4003383	      2354	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_54
0x4003383	          0x4989c4	                            mov r12, rax	      2354	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_54
0x4003386	      0xba05000000	                              mov edx, 5	      2354	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_54
0x400338b	      0xbe00000000	                              mov esi, 0	      2354	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_54
0x4003390	      0xbf00000000	                              mov edi, 0	      2354	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_54
0x4003395	      0xe800000000	                          call 0x400339a	      2354	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_54
0x400339a	          0x4c89e2	                            mov rdx, r12	      2354	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_54
0x400339d	          0x4889ee	                            mov rsi, rbp	      2354	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_54
0x40033a0	          0x4889c7	                            mov rdi, rax	      2354	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_54
0x40033a3	      0xb800000000	                              mov eax, 0	      2354	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_54
0x40033a8	      0xe800000000	                          call 0x40033ad	      2354	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_18	CALL_54
0x40033ad	          0x4889df	                            mov rdi, rbx	      2357	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	CALL_56
0x40033b0	      0xe800000000	                          call 0x40033b5	      2357	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	CALL_56
0x40033b5	    0x483b05000000	            cmp rax, qword [0x040033bc] 	      2357	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	CALL_56
0x40033bc	            0x7538	                           jne 0x40033f6	      2357	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	CALL_56
0x40033be	          0x4889df	                            mov rdi, rbx	      2360	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	IF_20	CALL_57
0x40033c1	      0xe800000000	                          call 0x40033c6	      2360	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	IF_20	CALL_57
0x40033c6	    0x488b15000000	            mov rdx, qword [0x040033cd] 	      2360	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	IF_20	CALL_57
0x40033cd	          0x483b02	                    cmp rax, qword [rdx]	      2360	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	IF_20	CALL_57
0x40033d0	            0x7424	                            je 0x40033f6	      2360	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	IF_20	CALL_57
0x40033d2	      0xba05000000	                              mov edx, 5	      2361	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	IF_20	CALL_59
0x40033d7	      0xbe00000000	                              mov esi, 0	      2361	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	IF_20	CALL_59
0x40033dc	      0xbf00000000	                              mov edi, 0	      2361	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	IF_20	CALL_59
0x40033e1	      0xe800000000	                          call 0x40033e6	      2361	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	IF_20	CALL_59
0x40033e6	          0x4889ee	                            mov rsi, rbp	      2361	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	IF_20	CALL_59
0x40033e9	          0x4889c7	                            mov rdi, rax	      2361	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	IF_20	CALL_59
0x40033ec	      0xb800000000	                              mov eax, 0	      2361	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	IF_20	CALL_59
0x40033f1	      0xe800000000	                          call 0x40033f6	      2361	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	IF_19	IF_20	CALL_59
0x40033f6	      0xba00000000	                              mov edx, 0	      2364	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	CALL_60
0x40033fb	      0xbe00000000	                              mov esi, 0	      2364	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	CALL_60
0x4003400	          0x4889df	                            mov rdi, rbx	      2364	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	CALL_60
0x4003403	      0xe800000000	                          call 0x4003408	      2364	write.c	FUNCTION_33	IF_11	FOR_8	IF_17	CALL_60
0x4003408	      0xe9da000000	                           jmp 0x40034e7	      2365	write.c	FUNCTION_33	IF_11	FOR_8	IF_17
0x400340d	      0x488d74242c	                   lea rsi, [rsp + 0x2c]	      2369	write.c	FUNCTION_33	IF_11	FOR_8	CALL_61
0x4003412	          0x4889df	                            mov rdi, rbx	      2369	write.c	FUNCTION_33	IF_11	FOR_8	CALL_61
0x4003415	      0xe800000000	                          call 0x400341a	      2369	write.c	FUNCTION_33	IF_11	FOR_8	CALL_61
0x400341a	    0x48391d000000	            cmp qword [0x04003421], rbx 	      2381	write.c	FUNCTION_33	IF_11	FOR_8	IF_22
0x4003421	            0x7443	                            je 0x4003466	      2381	write.c	FUNCTION_33	IF_11	FOR_8	IF_22
0x4003423	          0x4889df	                            mov rdi, rbx	      2387	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_65
0x4003426	      0xe800000000	                          call 0x400342b	      2387	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_65
0x400342b	            0x85c0	                           test eax, eax	      2387	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_65
0x400342d	            0x754b	                           jne 0x400347a	      2387	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_65
0x400342f	      0x837c242c00	               cmp dword [rsp + 0x2c], 0	      2388	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_66
0x4003434	            0x7524	                           jne 0x400345a	      2388	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_66
0x4003436	          0x4889df	                            mov rdi, rbx	      2388	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_66
0x4003439	      0xe800000000	                          call 0x400343e	      2388	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_66
0x400343e	            0x85c0	                           test eax, eax	      2388	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_66
0x4003440	            0x7518	                           jne 0x400345a	      2388	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_66
0x4003442	          0x4889df	                            mov rdi, rbx	      2389	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_68
0x4003445	      0xe800000000	                          call 0x400344a	      2389	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_68
0x400344a	            0x85c0	                           test eax, eax	      2388	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_66
0x400344c	            0x742c	                            je 0x400347a	      2388	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_66
0x400344e	          0x4889df	                            mov rdi, rbx	      2389	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_68
0x4003451	      0xe800000000	                          call 0x4003456	      2389	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_68
0x4003456	            0x85c0	                           test eax, eax	      2389	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_68
0x4003458	            0x7520	                           jne 0x400347a	      2389	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_68
0x400345a	          0x4889df	                            mov rdi, rbx	      2390	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_69
0x400345d	      0xe800000000	                          call 0x4003462	      2390	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_69
0x4003462	            0x85c0	                           test eax, eax	      2390	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_69
0x4003464	            0x7514	                           jne 0x400347a	      2390	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_69
0x4003466	      0xba00000000	                              mov edx, 0	      2392	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_70
0x400346b	      0xbe00000000	                              mov esi, 0	      2392	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_70
0x4003470	          0x4889df	                            mov rdi, rbx	      2392	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_70
0x4003473	      0xe800000000	                          call 0x4003478	      2392	write.c	FUNCTION_33	IF_11	FOR_8	IF_22	CALL_70
0x4003478	            0xeb6d	                           jmp 0x40034e7	      2397	write.c	FUNCTION_33	IF_11	FOR_8	IF_22
0x400347a	          0x4889df	                            mov rdi, rbx	      2401	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_71
0x400347d	      0xe800000000	                          call 0x4003482	      2401	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_71
0x4003482	            0x85c0	                           test eax, eax	      2401	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_71
0x4003484	            0x7537	                           jne 0x40034bd	      2401	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_71
0x4003486	          0x4889df	                            mov rdi, rbx	      2403	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_73
0x4003489	      0xe800000000	                          call 0x400348e	      2403	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_73
0x400348e	          0x4889c5	                            mov rbp, rax	      2403	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_73
0x4003491	      0xba05000000	                              mov edx, 5	      2403	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_73
0x4003496	      0xbe00000000	                              mov esi, 0	      2403	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_73
0x400349b	      0xbf00000000	                              mov edi, 0	      2403	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_73
0x40034a0	      0xe800000000	                          call 0x40034a5	      2403	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_73
0x40034a5	          0x4889ee	                            mov rsi, rbp	      2403	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_73
0x40034a8	          0x4889c7	                            mov rdi, rax	      2403	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_73
0x40034ab	      0xb800000000	                              mov eax, 0	      2403	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_73
0x40034b0	      0xe800000000	                          call 0x40034b5	      2403	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_73
0x40034b5	          0x4889df	                            mov rdi, rbx	      2405	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_75
0x40034b8	      0xe800000000	                          call 0x40034bd	      2405	write.c	FUNCTION_33	IF_11	FOR_8	IF_23	CALL_75
0x40034bd	          0x4889df	                            mov rdi, rbx	      2410	write.c	FUNCTION_33	IF_11	FOR_8	CALL_77
0x40034c0	      0xe800000000	                          call 0x40034c5	      2410	write.c	FUNCTION_33	IF_11	FOR_8	CALL_77
0x40034c5	          0x4889c5	                            mov rbp, rax	      2410	write.c	FUNCTION_33	IF_11	FOR_8	CALL_77
0x40034c8	          0x4889df	                            mov rdi, rbx	      2410	write.c	FUNCTION_33	IF_11	FOR_8	CALL_77
0x40034cb	      0xe800000000	                          call 0x40034d0	      2410	write.c	FUNCTION_33	IF_11	FOR_8	CALL_77
0x40034d0	        0x48894510	            mov qword [rbp + 0x10], rax 	      2410	write.c	FUNCTION_33	IF_11	FOR_8	CALL_77
0x40034d4	          0x4889df	                            mov rdi, rbx	      2415	write.c	FUNCTION_33	IF_11	FOR_8	IF_24	CALL_78
0x40034d7	      0xe800000000	                          call 0x40034dc	      2415	write.c	FUNCTION_33	IF_11	FOR_8	IF_24	CALL_78
0x40034dc	          0x8b6818	            mov ebp, dword [rax + 0x18] 	      2416	write.c	FUNCTION_33	IF_11	FOR_8	IF_24
0x40034df	          0xc1ed0c	                            shr ebp, 0xc	      2416	write.c	FUNCTION_33	IF_11	FOR_8	IF_24
0x40034e2	          0x83e501	                              and ebp, 1	      2416	write.c	FUNCTION_33	IF_11	FOR_8	IF_24
0x40034e5	            0xeb05	                           jmp 0x40034ec	      2416	write.c	FUNCTION_33	IF_11	FOR_8	IF_24
0x40034e7	      0xbd00000000	                              mov ebp, 0	      2313	write.c	FUNCTION_33	IF_11	FOR_8	IF_12
0x40034ec	          0x4889df	                            mov rdi, rbx	      2302	write.c	FUNCTION_33	IF_11	FOR_8	CALL_31
0x40034ef	      0xe800000000	                          call 0x40034f4	      2302	write.c	FUNCTION_33	IF_11	FOR_8	CALL_31
0x40034f4	          0x4889c3	                            mov rbx, rax	      2302	write.c	FUNCTION_33	IF_11	FOR_8	CALL_31
0x40034f7	          0x4885c0	                           test rax, rax	      2302	write.c	FUNCTION_33	IF_11	FOR_8	CALL_31
0x40034fa	     0xf8536fdffff	                           jne 0x4003236	      2302	write.c	FUNCTION_33	IF_11	FOR_8	CALL_31
0x4003500	      0xe800000000	                          call 0x4003505	      2428	write.c	FUNCTION_33	CALL_81
0x4003505	      0xe800000000	                          call 0x400350a	      2432	write.c	FUNCTION_33	IF_25	CALL_82
0x400350a	            0x85c0	                           test eax, eax	      2432	write.c	FUNCTION_33	IF_25	CALL_82
0x400350c	     0xf8503020000	                           jne 0x4003715	      2432	write.c	FUNCTION_33	IF_25	CALL_82
0x4003512	    0x488b05000000	            mov rax, qword [0x04003519] 	      1748	write.c	FUNCTION_27	FOR_1	CALL_1
0x4003519	          0x4885c0	                           test rax, rax	      1748	write.c	FUNCTION_27	FOR_1	CALL_1
0x400351c	     0xf84c8000000	                            je 0x40035ea	      1748	write.c	FUNCTION_27	FOR_1	CALL_1
0x4003522	      0xbb00000000	                              mov ebx, 0	      1748	write.c	FUNCTION_27	FOR_1	CALL_1
0x4003527	          0x83c301	                              add ebx, 1	      1749	write.c	FUNCTION_27	FOR_1
0x400352a	          0x4889c7	                            mov rdi, rax	      1748	write.c	FUNCTION_27	FOR_1	CALL_1
0x400352d	      0xe800000000	                          call 0x4003532	      1748	write.c	FUNCTION_27	FOR_1	CALL_1
0x4003532	          0x4885c0	                           test rax, rax	      1748	write.c	FUNCTION_27	FOR_1	CALL_1
0x4003535	            0x75f0	                           jne 0x4003527	      1748	write.c	FUNCTION_27	FOR_1	CALL_1
0x4003537	    0x41bd00000000	                             mov r13d, 0	      1769	write.c	FUNCTION_27	ELSE_1
0x400353d	            0x85db	                           test ebx, ebx	      1751	write.c	FUNCTION_27	IF_1
0x400353f	     0xf84b0000000	                            je 0x40035f5	      1751	write.c	FUNCTION_27	IF_1
0x4003545	          0x4863f3	                         movsxd rsi, ebx	      1756	write.c	FUNCTION_27	IF_1	CALL_2
0x4003548	        0x48c1e603	                              shl rsi, 3	      1756	write.c	FUNCTION_27	IF_1	CALL_2
0x400354c	    0x488b3d000000	            mov rdi, qword [0x04003553] 	      1756	write.c	FUNCTION_27	IF_1	CALL_2
0x4003553	      0xe800000000	                          call 0x4003558	      1756	write.c	FUNCTION_27	IF_1	CALL_2
0x4003558	          0x4989c5	                            mov r13, rax	      1756	write.c	FUNCTION_27	IF_1	CALL_2
0x400355b	    0x488b2d000000	            mov rbp, qword [0x04003562] 	      1757	write.c	FUNCTION_27	IF_1
0x4003562	            0x85db	                           test ebx, ebx	      1758	write.c	FUNCTION_27	IF_1	FOR_2	CALL_3
0x4003564	     0xf8e8b000000	                           jle 0x40035f5	      1758	write.c	FUNCTION_27	IF_1	FOR_2	CALL_3
0x400356a	    0x41bc00000000	                             mov r12d, 0	      1758	write.c	FUNCTION_27	IF_1	FOR_2	CALL_3
0x4003570	          0x4889ef	                            mov rdi, rbp	      1760	write.c	FUNCTION_27	IF_1	FOR_2	CALL_4
0x4003573	      0xe800000000	                          call 0x4003578	      1760	write.c	FUNCTION_27	IF_1	FOR_2	CALL_4
0x4003578	      0x4b8944e500	            mov qword [r13 + r12*8], rax	      1760	write.c	FUNCTION_27	IF_1	FOR_2	CALL_4
0x400357d	          0x8b5018	            mov edx, dword [rax + 0x18] 	      1761	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x4003580	    0x81fa00010000	                          cmp edx, 0x100	      1761	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x4003586	            0x753e	                           jne 0x40035c6	      1761	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x4003588	        0x488b4820	            mov rcx, qword [rax + 0x20] 	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x400358c	    0x4881f9000000	                              cmp rcx, 0	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x4003593	        0x400f95c7	                               setne dil	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x4003597	    0x4881f9000000	                              cmp rcx, 0	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x400359e	        0x400f95c6	                               setne sil	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x40035a2	            0x21fe	                            and esi, edi	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x40035a4	    0x4881f9000000	                              cmp rcx, 0	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x40035ab	        0x400f95c7	                               setne dil	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x40035af	          0x4084fe	                           test sil, dil	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x40035b2	            0x7409	                            je 0x40035bd	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x40035b4	    0x4881f9000000	                              cmp rcx, 0	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x40035bb	            0x7509	                           jne 0x40035c6	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x40035bd	    0x483b81f80000	            cmp rax, qword [rcx + 0xf8] 	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x40035c4	            0x7406	                            je 0x40035cc	      1762	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x40035c6	          0x83ca20	                            or edx, 0x20	      1764	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x40035c9	          0x895018	             mov dword [rax + 0x18], edx	      1764	write.c	FUNCTION_27	IF_1	FOR_2	IF_2
0x40035cc	          0x4889ef	                            mov rdi, rbp	      1765	write.c	FUNCTION_27	IF_1	FOR_2	CALL_5
0x40035cf	      0xe800000000	                          call 0x40035d4	      1765	write.c	FUNCTION_27	IF_1	FOR_2	CALL_5
0x40035d4	          0x4889ef	                            mov rdi, rbp	      1758	write.c	FUNCTION_27	IF_1	FOR_2	CALL_3
0x40035d7	      0xe800000000	                          call 0x40035dc	      1758	write.c	FUNCTION_27	IF_1	FOR_2	CALL_3
0x40035dc	          0x4889c5	                            mov rbp, rax	      1758	write.c	FUNCTION_27	IF_1	FOR_2	CALL_3
0x40035df	        0x4983c401	                              add r12, 1	      1758	write.c	FUNCTION_27	IF_1	FOR_2	CALL_3
0x40035e3	          0x4439e3	                           cmp ebx, r12d	      1758	write.c	FUNCTION_27	IF_1	FOR_2	CALL_3
0x40035e6	            0x7f88	                            jg 0x4003570	      1758	write.c	FUNCTION_27	IF_1	FOR_2	CALL_3
0x40035e8	            0xeb0b	                           jmp 0x40035f5	      1758	write.c	FUNCTION_27	IF_1	FOR_2	CALL_3
0x40035ea	      0xbb00000000	                              mov ebx, 0	      1747	write.c	FUNCTION_27
0x40035ef	    0x41bd00000000	                             mov r13d, 0	      1769	write.c	FUNCTION_27	ELSE_1
0x40035f5	            0x89da	                            mov edx, ebx	      1770	write.c	FUNCTION_27	CALL_6
0x40035f7	          0x4c89ee	                            mov rsi, r13	      1770	write.c	FUNCTION_27	CALL_6
0x40035fa	    0x488b3d000000	            mov rdi, qword [0x04003601] 	      1770	write.c	FUNCTION_27	CALL_6
0x4003601	      0xe800000000	                          call 0x4003606	      1770	write.c	FUNCTION_27	CALL_6
0x4003606	            0x85c0	                           test eax, eax	      1771	write.c	FUNCTION_27	CALL_7
0x4003608	            0x7514	                           jne 0x400361e	      1771	write.c	FUNCTION_27	CALL_7
0x400360a	      0xba00000000	                              mov edx, 0	      1771	write.c	FUNCTION_27	CALL_7
0x400360f	      0xbeeb060000	                          mov esi, 0x6eb	      1771	write.c	FUNCTION_27	CALL_7
0x4003614	      0xbf00000000	                              mov edi, 0	      1771	write.c	FUNCTION_27	CALL_7
0x4003619	      0xe800000000	                          call 0x400361e	      1771	write.c	FUNCTION_27	CALL_7
0x400361e	    0xc70500000000	               mov dword [0x04003628], 1	      1772	write.c	FUNCTION_27
0x4003628	      0xe800000000	                          call 0x400362d	      2447	write.c	FUNCTION_33	CALL_85
0x400362d	      0xba00000000	                              mov edx, 0	      2453	write.c	FUNCTION_33	CALL_87
0x4003632	      0xbe00000000	                              mov esi, 0	      2453	write.c	FUNCTION_33	CALL_87
0x4003637	    0x488b3d000000	            mov rdi, qword [0x0400363e] 	      2453	write.c	FUNCTION_33	CALL_87
0x400363e	      0xe800000000	                          call 0x4003643	      2453	write.c	FUNCTION_33	CALL_87
0x4003643	      0xe800000000	                          call 0x4003648	      2459	write.c	FUNCTION_33	CALL_89
0x4003648	    0x833d00000000	               cmp dword [0x0400364f], 0	      2463	write.c	FUNCTION_33	IF_26
0x400364f	            0x740e	                            je 0x400365f	      2463	write.c	FUNCTION_33	IF_26
0x4003651	    0x488b05000000	            mov rax, qword [0x04003658] 	      2464	write.c	FUNCTION_33	IF_26
0x4003658	    0x814844000080	        or dword [rax + 0x44], 0x1800000	      2464	write.c	FUNCTION_33	IF_26
0x400365f	    0x8b0500000000	            mov eax, dword [0x04003665] 	      2471	write.c	FUNCTION_33	IF_27
0x4003665	            0x85c0	                           test eax, eax	      2471	write.c	FUNCTION_33	IF_27
0x4003667	            0x7439	                            je 0x40036a2	      2471	write.c	FUNCTION_33	IF_27
0x4003669	          0x83f805	                              cmp eax, 5	      2473	write.c	FUNCTION_33	IF_27	IF_28
0x400366c	            0x7510	                           jne 0x400367e	      2473	write.c	FUNCTION_33	IF_27	IF_28
0x400366e	    0x488b05000000	            mov rax, qword [0x04003675] 	      2474	write.c	FUNCTION_33	IF_27	IF_28
0x4003675	    0x814844000048	         or dword [rax + 0x44], 0x480000	      2474	write.c	FUNCTION_33	IF_27	IF_28
0x400367c	            0xeb0e	                           jmp 0x400368c	      2474	write.c	FUNCTION_33	IF_27	IF_28
0x400367e	    0x488b05000000	            mov rax, qword [0x04003685] 	      2476	write.c	FUNCTION_33	IF_27	ELSE_2
0x4003685	    0x814844000008	          or dword [rax + 0x44], 0x80000	      2476	write.c	FUNCTION_33	IF_27	ELSE_2
0x400368c	      0xba00000000	                              mov edx, 0	      2477	write.c	FUNCTION_33	IF_27	CALL_90
0x4003691	      0xbe00000000	                              mov esi, 0	      2477	write.c	FUNCTION_33	IF_27	CALL_90
0x4003696	    0x488b3d000000	            mov rdi, qword [0x0400369d] 	      2477	write.c	FUNCTION_33	IF_27	CALL_90
0x400369d	      0xe800000000	                          call 0x40036a2	      2477	write.c	FUNCTION_33	IF_27	CALL_90
0x40036a2	      0xba00000000	                              mov edx, 0	      2480	write.c	FUNCTION_33	CALL_91
0x40036a7	      0xbe00000000	                              mov esi, 0	      2480	write.c	FUNCTION_33	CALL_91
0x40036ac	    0x488b3d000000	            mov rdi, qword [0x040036b3] 	      2480	write.c	FUNCTION_33	CALL_91
0x40036b3	      0xe800000000	                          call 0x40036b8	      2480	write.c	FUNCTION_33	CALL_91
0x40036b8	            0xeb5b	                           jmp 0x4003715	      2480	write.c	FUNCTION_33	CALL_91
0x40036ba	    0x488b1d000000	            mov rbx, qword [0x040036c1] 	      2261	write.c	FUNCTION_33	IF_9
0x40036c1	          0x4885db	                           test rbx, rbx	      2261	write.c	FUNCTION_33	IF_9
0x40036c4	     0xf85a9f5ffff	                           jne 0x4002c73	      2261	write.c	FUNCTION_33	IF_9
0x40036ca	      0xe9bcf5ffff	                           jmp 0x4002c8b	      2261	write.c	FUNCTION_33	IF_9
0x40036cf	      0xe800000000	                          call 0x40036d4	      2282	write.c	FUNCTION_33	CALL_26
0x40036d4	      0xba00000000	                              mov edx, 0	      2285	write.c	FUNCTION_33	CALL_27
0x40036d9	      0xbe00000000	                              mov esi, 0	      2285	write.c	FUNCTION_33	CALL_27
0x40036de	    0x488b3d000000	            mov rdi, qword [0x040036e5] 	      2285	write.c	FUNCTION_33	CALL_27
0x40036e5	      0xe800000000	                          call 0x40036ea	      2285	write.c	FUNCTION_33	CALL_27
0x40036ea	      0xba00000000	                              mov edx, 0	      2294	write.c	FUNCTION_33	CALL_30
0x40036ef	      0xbe00000000	                              mov esi, 0	      2294	write.c	FUNCTION_33	CALL_30
0x40036f4	    0x488b3d000000	            mov rdi, qword [0x040036fb] 	      2294	write.c	FUNCTION_33	CALL_30
0x40036fb	      0xe800000000	                          call 0x4003700	      2294	write.c	FUNCTION_33	CALL_30
0x4003700	    0x488b1d000000	            mov rbx, qword [0x04003707] 	      2297	write.c	FUNCTION_33	IF_11
0x4003707	          0x4885db	                           test rbx, rbx	      2297	write.c	FUNCTION_33	IF_11
0x400370a	     0xf8521fbffff	                           jne 0x4003231	      2297	write.c	FUNCTION_33	IF_11
0x4003710	      0xe9ebfdffff	                           jmp 0x4003500	      2297	write.c	FUNCTION_33	IF_11
0x4003715	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      2481	write.c	FUNCTION_33
0x400371a	    0x644833042528	                xor rax, qword fs:[0x28]	      2481	write.c	FUNCTION_33
0x4003723	            0x7405	                            je 0x400372a	      2481	write.c	FUNCTION_33
0x4003725	      0xe800000000	                          call 0x400372a	      2481	write.c	FUNCTION_33
0x400372a	        0x4883c448	                           add rsp, 0x48	      2481	write.c	FUNCTION_33
0x400372e	              0x5b	                                 pop rbx	      2481	write.c	FUNCTION_33
0x400372f	              0x5d	                                 pop rbp	      2481	write.c	FUNCTION_33
0x4003730	            0x415c	                                 pop r12	      2481	write.c	FUNCTION_33
0x4003732	            0x415d	                                 pop r13	      2481	write.c	FUNCTION_33
0x4003734	            0x415e	                                 pop r14	      2481	write.c	FUNCTION_33
0x4003736	            0x415f	                                 pop r15	      2481	write.c	FUNCTION_33
0x4003738	              0xc3	                                     ret	      2481	write.c	FUNCTION_33
generic_force_reloc	CALL,1:FOR,0:SWITCH,0:WHILE,0:DO,0:functions,0:IF,2:ELSE,0	19
0x40019fa	          0x8b4750	            mov eax, dword [rdi + 0x50] 	       327	write.c	FUNCTION_5	IF_1
0x40019fd	      0x2da3050000	                          sub eax, 0x5a3	       327	write.c	FUNCTION_5	IF_1
0x4001a02	          0x83f801	                              cmp eax, 1	       327	write.c	FUNCTION_5	IF_1
0x4001a05	            0x7629	                           jbe 0x4001a30	       327	write.c	FUNCTION_5	IF_1
0x4001a07	          0x4889fa	                            mov rdx, rdi	       327	write.c	FUNCTION_5	IF_1
0x4001a0a	        0x488b7f18	            mov rdi, qword [rdi + 0x18] 	       331	write.c	FUNCTION_5	IF_2
0x4001a0e	      0xb800000000	                              mov eax, 0	       332	write.c	FUNCTION_5	IF_2
0x4001a13	          0x4885ff	                           test rdi, rdi	       331	write.c	FUNCTION_5	IF_2
0x4001a16	            0x7422	                            je 0x4001a3a	       331	write.c	FUNCTION_5	IF_2
0x4001a18	        0x4883ec08	                              sub rsp, 8	       326	write.c	FUNCTION_5
0x4001a1c	      0x48837a2000	               cmp qword [rdx + 0x20], 0	       334	write.c	FUNCTION_5	CALL_1
0x4001a21	        0x400f94c6	                                sete sil	       334	write.c	FUNCTION_5	CALL_1
0x4001a25	        0x400fb6f6	                          movzx esi, sil	       334	write.c	FUNCTION_5	CALL_1
0x4001a29	      0xe800000000	                          call 0x4001a2e	       334	write.c	FUNCTION_5	CALL_1
0x4001a2e	            0xeb06	                           jmp 0x4001a36	       334	write.c	FUNCTION_5	CALL_1
0x4001a30	      0xb801000000	                              mov eax, 1	       329	write.c	FUNCTION_5	IF_1
0x4001a35	              0xc3	                                     ret	       329	write.c	FUNCTION_5	IF_1
0x4001a36	        0x4883c408	                              add rsp, 8	       335	write.c	FUNCTION_5
0x4001a3a	            0xf3c3	                                     ret	       335	write.c	FUNCTION_5
fix_new_internal	CALL,8:FOR,0:SWITCH,0:WHILE,0:DO,0:functions,0:IF,4:ELSE,2	115
0x400015a	            0x4157	                                push r15	       154	write.c	FUNCTION_1
0x400015c	            0x4156	                                push r14	       154	write.c	FUNCTION_1
0x400015e	            0x4155	                                push r13	       154	write.c	FUNCTION_1
0x4000160	            0x4154	                                push r12	       154	write.c	FUNCTION_1
0x4000162	              0x55	                                push rbp	       154	write.c	FUNCTION_1
0x4000163	              0x53	                                push rbx	       154	write.c	FUNCTION_1
0x4000164	        0x4883ec18	                           sub rsp, 0x18	       154	write.c	FUNCTION_1
0x4000168	          0x4989fc	                            mov r12, rdi	       154	write.c	FUNCTION_1
0x400016b	        0x8974240c	              mov dword [rsp + 0xc], esi	       154	write.c	FUNCTION_1
0x400016f	            0x89d5	                            mov ebp, edx	       154	write.c	FUNCTION_1
0x4000171	          0x4989cf	                            mov r15, rcx	       154	write.c	FUNCTION_1
0x4000174	          0x4d89c6	                             mov r14, r8	       154	write.c	FUNCTION_1
0x4000177	          0x4d89cd	                             mov r13, r9	       154	write.c	FUNCTION_1
0x400017a	    0x830500000000	               add dword [0x04000181], 1	       157	write.c	FUNCTION_1
0x4000181	    0x488b05000000	            mov rax, qword [0x04000188] 	       159	write.c	FUNCTION_1	CALL_1
0x4000188	    0x482b05000000	             sub rax, qword [0x0400018f]	       159	write.c	FUNCTION_1	CALL_1
0x400018f	        0x4883f86f	                           cmp rax, 0x6f	       159	write.c	FUNCTION_1	CALL_1
0x4000193	            0x770f	                            ja 0x40001a4	       159	write.c	FUNCTION_1	CALL_1
0x4000195	      0xbe70000000	                           mov esi, 0x70	       159	write.c	FUNCTION_1	CALL_1
0x400019a	      0xbf00000000	                              mov edi, 0	       159	write.c	FUNCTION_1	CALL_1
0x400019f	      0xe800000000	                          call 0x40001a4	       159	write.c	FUNCTION_1	CALL_1
0x40001a4	    0x488b05000000	            mov rax, qword [0x040001ab] 	       159	write.c	FUNCTION_1	CALL_1
0x40001ab	        0x4883c070	                           add rax, 0x70	       159	write.c	FUNCTION_1	CALL_1
0x40001af	    0x488b1d000000	            mov rbx, qword [0x040001b6] 	       159	write.c	FUNCTION_1	CALL_1
0x40001b6	          0x4839d8	                            cmp rax, rbx	       159	write.c	FUNCTION_1	CALL_1
0x40001b9	            0x7507	                           jne 0x40001c2	       159	write.c	FUNCTION_1	CALL_1
0x40001bb	    0x800d00000000	                 or byte [0x040001c2], 2	       159	write.c	FUNCTION_1	CALL_1
0x40001c2	    0x488b15000000	            mov rdx, qword [0x040001c9] 	       159	write.c	FUNCTION_1	CALL_1
0x40001c9	          0x4801d0	                            add rax, rdx	       159	write.c	FUNCTION_1	CALL_1
0x40001cc	          0x48f7d2	                                 not rdx	       159	write.c	FUNCTION_1	CALL_1
0x40001cf	          0x4821d0	                            and rax, rdx	       159	write.c	FUNCTION_1	CALL_1
0x40001d2	    0x488905000000	            mov qword [0x040001d9], rax 	       159	write.c	FUNCTION_1	CALL_1
0x40001d9	    0x488b15000000	            mov rdx, qword [0x040001e0] 	       159	write.c	FUNCTION_1	CALL_1
0x40001e0	    0x488b0d000000	            mov rcx, qword [0x040001e7] 	       159	write.c	FUNCTION_1	CALL_1
0x40001e7	          0x4829d0	                            sub rax, rdx	       159	write.c	FUNCTION_1	CALL_1
0x40001ea	          0x4889ce	                            mov rsi, rcx	       159	write.c	FUNCTION_1	CALL_1
0x40001ed	          0x4829d6	                            sub rsi, rdx	       159	write.c	FUNCTION_1	CALL_1
0x40001f0	          0x4839f0	                            cmp rax, rsi	       159	write.c	FUNCTION_1	CALL_1
0x40001f3	            0x7607	                           jbe 0x40001fc	       159	write.c	FUNCTION_1	CALL_1
0x40001f5	    0x48890d000000	            mov qword [0x040001fc], rcx 	       159	write.c	FUNCTION_1	CALL_1
0x40001fc	    0x488b05000000	            mov rax, qword [0x04000203] 	       159	write.c	FUNCTION_1	CALL_1
0x4000203	    0x488905000000	            mov qword [0x0400020a], rax 	       159	write.c	FUNCTION_1	CALL_1
0x400020a	        0x4c896308	                mov qword [rbx + 8], r12	       161	write.c	FUNCTION_1
0x400020e	      0x486344240c	          movsxd rax, dword [rsp + 0xc] 	       162	write.c	FUNCTION_1
0x4000213	        0x48894310	             mov qword [rbx + 0x10], rax	       162	write.c	FUNCTION_1
0x4000217	        0x40886b02	                 mov byte [rbx + 2], bpl	       163	write.c	FUNCTION_1
0x400021b	        0x400fb6c5	                          movzx eax, bpl	       165	write.c	FUNCTION_1	IF_1
0x400021f	            0x39c5	                            cmp ebp, eax	       165	write.c	FUNCTION_1	IF_1
0x4000221	            0x7437	                            je 0x400025a	       165	write.c	FUNCTION_1	IF_1
0x4000223	      0xba05000000	                              mov edx, 5	       167	write.c	FUNCTION_1	IF_1	CALL_3
0x4000228	      0xbe00000000	                              mov esi, 0	       167	write.c	FUNCTION_1	IF_1	CALL_3
0x400022d	      0xbf00000000	                              mov edi, 0	       167	write.c	FUNCTION_1	IF_1	CALL_3
0x4000232	      0xe800000000	                          call 0x4000237	       167	write.c	FUNCTION_1	IF_1	CALL_3
0x4000237	            0x89ee	                            mov esi, ebp	       167	write.c	FUNCTION_1	IF_1	CALL_3
0x4000239	          0x4889c7	                            mov rdi, rax	       167	write.c	FUNCTION_1	IF_1	CALL_3
0x400023c	      0xb800000000	                              mov eax, 0	       167	write.c	FUNCTION_1	IF_1	CALL_3
0x4000241	      0xe800000000	                          call 0x4000246	       167	write.c	FUNCTION_1	IF_1	CALL_3
0x4000246	      0xba00000000	                              mov edx, 0	       168	write.c	FUNCTION_1	IF_1	CALL_4
0x400024b	      0xbea8000000	                           mov esi, 0xa8	       168	write.c	FUNCTION_1	IF_1	CALL_4
0x4000250	      0xbf00000000	                              mov edi, 0	       168	write.c	FUNCTION_1	IF_1	CALL_4
0x4000255	      0xe800000000	                          call 0x400025a	       168	write.c	FUNCTION_1	IF_1	CALL_4
0x400025a	        0x4c897b18	             mov qword [rbx + 0x18], r15	       170	write.c	FUNCTION_1
0x400025e	        0x4c897320	             mov qword [rbx + 0x20], r14	       171	write.c	FUNCTION_1
0x4000262	        0x4c896b28	             mov qword [rbx + 0x28], r13	       172	write.c	FUNCTION_1
0x4000266	    0x488b05000000	            mov rax, qword [0x0400026d] 	       173	write.c	FUNCTION_1
0x400026d	        0x48894330	             mov qword [rbx + 0x30], rax	       173	write.c	FUNCTION_1
0x4000271	    0x488b05000000	            mov rax, qword [0x04000278] 	       174	write.c	FUNCTION_1
0x4000278	        0x48894338	             mov qword [rbx + 0x38], rax	       174	write.c	FUNCTION_1
0x400027c	        0x8b442458	            mov eax, dword [rsp + 0x58] 	       176	write.c	FUNCTION_1
0x4000280	          0x894350	             mov dword [rbx + 0x50], eax	       176	write.c	FUNCTION_1
0x4000283	        0xc6430100	                   mov byte [rbx + 1], 0	       178	write.c	FUNCTION_1
0x4000287	    0x48c743480000	               mov qword [rbx + 0x48], 0	       179	write.c	FUNCTION_1
0x400028f	    0x48c743580000	               mov qword [rbx + 0x58], 0	       180	write.c	FUNCTION_1
0x4000297	       0xfb6442450	           movzx eax, byte [rsp + 0x50] 	       185	write.c	FUNCTION_1
0x400029c	          0x83e001	                              and eax, 1	       185	write.c	FUNCTION_1
0x400029f	            0x8803	                      mov byte [rbx], al	       185	write.c	FUNCTION_1
0x40002a1	        0x488d7b68	                   lea rdi, [rbx + 0x68]	       196	write.c	FUNCTION_1	CALL_6
0x40002a5	      0xe800000000	                          call 0x40002aa	       196	write.c	FUNCTION_1	CALL_6
0x40002aa	        0x48894360	             mov qword [rbx + 0x60], rax	       196	write.c	FUNCTION_1	CALL_6
0x40002ae	    0x833d00000000	               cmp dword [0x040002b5], 0	       202	write.c	FUNCTION_1
0x40002b5	            0x7418	                            je 0x40002cf	       202	write.c	FUNCTION_1
0x40002b7	    0x488b05000000	            mov rax, qword [0x040002be] 	       201	write.c	FUNCTION_1	CALL_7
0x40002be	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	       201	write.c	FUNCTION_1	CALL_7
0x40002c5	        0x488d5010	                   lea rdx, [rax + 0x10]	       202	write.c	FUNCTION_1
0x40002c9	        0x4883c018	                           add rax, 0x18	       205	write.c	FUNCTION_1
0x40002cd	            0xeb0f	                           jmp 0x40002de	       205	write.c	FUNCTION_1
0x40002cf	    0x488b05000000	            mov rax, qword [0x040002d6] 	       202	write.c	FUNCTION_1
0x40002d6	        0x488d5020	                   lea rdx, [rax + 0x20]	       202	write.c	FUNCTION_1
0x40002da	        0x4883c028	                           add rax, 0x28	       205	write.c	FUNCTION_1
0x40002de	      0x837c246000	               cmp dword [rsp + 0x60], 0	       207	write.c	FUNCTION_1	IF_2
0x40002e3	            0x7416	                            je 0x40002fb	       207	write.c	FUNCTION_1	IF_2
0x40002e5	          0x488b0a	                    mov rcx, qword [rdx]	       209	write.c	FUNCTION_1	IF_2
0x40002e8	        0x48894b40	             mov qword [rbx + 0x40], rcx	       209	write.c	FUNCTION_1	IF_2
0x40002ec	          0x48891a	                    mov qword [rdx], rbx	       210	write.c	FUNCTION_1	IF_2
0x40002ef	      0x48837b4000	               cmp qword [rbx + 0x40], 0	       211	write.c	FUNCTION_1	IF_2	IF_3
0x40002f4	            0x7521	                           jne 0x4000317	       211	write.c	FUNCTION_1	IF_2	IF_3
0x40002f6	          0x488918	                    mov qword [rax], rbx	       212	write.c	FUNCTION_1	IF_2	IF_3
0x40002f9	            0xeb1c	                           jmp 0x4000317	       212	write.c	FUNCTION_1	IF_2	IF_3
0x40002fb	    0x48c743400000	               mov qword [rbx + 0x40], 0	       216	write.c	FUNCTION_1	ELSE_1
0x4000303	          0x488b08	                    mov rcx, qword [rax]	       217	write.c	FUNCTION_1	ELSE_1	IF_4
0x4000306	          0x4885c9	                           test rcx, rcx	       217	write.c	FUNCTION_1	ELSE_1	IF_4
0x4000309	            0x7406	                            je 0x4000311	       217	write.c	FUNCTION_1	ELSE_1	IF_4
0x400030b	        0x48895940	             mov qword [rcx + 0x40], rbx	       218	write.c	FUNCTION_1	ELSE_1	IF_4
0x400030f	            0xeb03	                           jmp 0x4000314	       218	write.c	FUNCTION_1	ELSE_1	IF_4
0x4000311	          0x48891a	                    mov qword [rdx], rbx	       220	write.c	FUNCTION_1	ELSE_1	ELSE_2
0x4000314	          0x488918	                    mov qword [rax], rbx	       221	write.c	FUNCTION_1	ELSE_1	ELSE_2
0x4000317	          0x4889d8	                            mov rax, rbx	       226	write.c	FUNCTION_1	ELSE_2
0x400031a	        0x4883c418	                           add rsp, 0x18	       226	write.c	FUNCTION_1	ELSE_2
0x400031e	              0x5b	                                 pop rbx	       226	write.c	FUNCTION_1	ELSE_2
0x400031f	              0x5d	                                 pop rbp	       226	write.c	FUNCTION_1	ELSE_2
0x4000320	            0x415c	                                 pop r12	       226	write.c	FUNCTION_1	ELSE_2
0x4000322	            0x415d	                                 pop r13	       226	write.c	FUNCTION_1	ELSE_2
0x4000324	            0x415e	                                 pop r14	       226	write.c	FUNCTION_1	ELSE_2
0x4000326	            0x415f	                                 pop r15	       226	write.c	FUNCTION_1	ELSE_2
0x4000328	              0xc3	                                     ret	       226	write.c	FUNCTION_1	ELSE_2
chain_frchains_together	CALL,2:FOR,0:SWITCH,0:WHILE,0:DO,0:functions,0:IF,1:ELSE,0	61
0x4000049	    0x4881ec080100	                          sub rsp, 0x108	       418	write.c	FUNCTION_11
0x4000050	    0x64488b042528	                mov rax, qword fs:[0x28]	       418	write.c	FUNCTION_11
0x4000059	    0x48898424f800	             mov qword [rsp + 0xf8], rax	       418	write.c	FUNCTION_11
0x4000061	            0x31c0	                            xor eax, eax	       418	write.c	FUNCTION_11
0x4000063	    0x488b86a80000	            mov rax, qword [rsi + 0xa8] 	       423	write.c	FUNCTION_11	CALL_1
0x400006a	          0x4885c0	                           test rax, rax	       424	write.c	FUNCTION_11	IF_1
0x400006d	     0xf84bd000000	                            je 0x4000130	       424	write.c	FUNCTION_11	IF_1
0x4000073	          0x4c8b08	                     mov r9, qword [rax]	       426	write.c	FUNCTION_11	CALL_2
0x4000076	          0x4d85c9	                             test r9, r9	       394	write.c	FUNCTION_10	FOR_1
0x4000079	     0xf8491000000	                            je 0x4000110	       394	write.c	FUNCTION_10	FOR_1
0x400007f	          0x498b01	                     mov rax, qword [r9]	       396	write.c	FUNCTION_10	FOR_1
0x4000082	    0x48898424a800	             mov qword [rsp + 0xa8], rax	       396	write.c	FUNCTION_10	FOR_1
0x400008a	        0x498b5108	                 mov rdx, qword [r9 + 8]	       397	write.c	FUNCTION_10	FOR_1
0x400008e	        0x837a5c00	               cmp dword [rdx + 0x5c], 0	       398	write.c	FUNCTION_10	FOR_1	CALL_1
0x4000092	            0x7419	                            je 0x40000ad	       398	write.c	FUNCTION_10	FOR_1	CALL_1
0x4000094	          0x4c89c8	                             mov rax, r9	       398	write.c	FUNCTION_10	FOR_1	CALL_1
0x4000097	          0x4989e0	                             mov r8, rsp	       398	write.c	FUNCTION_10	FOR_1	CALL_1
0x400009a	            0xeb25	                           jmp 0x40000c1	       398	write.c	FUNCTION_10	FOR_1	CALL_1
0x400009c	          0x488b08	                    mov rcx, qword [rax]	       396	write.c	FUNCTION_10	FOR_1
0x400009f	        0x48894a38	             mov qword [rdx + 0x38], rcx	       396	write.c	FUNCTION_10	FOR_1
0x40000a3	        0x488b5008	                mov rdx, qword [rax + 8]	       397	write.c	FUNCTION_10	FOR_1
0x40000a7	        0x837a5c00	               cmp dword [rdx + 0x5c], 0	       398	write.c	FUNCTION_10	FOR_1	CALL_1
0x40000ab	            0x7514	                           jne 0x40000c1	       398	write.c	FUNCTION_10	FOR_1	CALL_1
0x40000ad	      0xba00000000	                              mov edx, 0	       398	write.c	FUNCTION_10	FOR_1	CALL_1
0x40000b2	      0xbe8e010000	                          mov esi, 0x18e	       398	write.c	FUNCTION_10	FOR_1	CALL_1
0x40000b7	      0xbf00000000	                              mov edi, 0	       398	write.c	FUNCTION_10	FOR_1	CALL_1
0x40000bc	      0xe800000000	                          call 0x40000c1	       398	write.c	FUNCTION_10	FOR_1	CALL_1
0x40000c1	        0x488b4820	            mov rcx, qword [rax + 0x20] 	       399	write.c	FUNCTION_10	FOR_1	IF_1
0x40000c5	          0x4885c9	                           test rcx, rcx	       399	write.c	FUNCTION_10	FOR_1	IF_1
0x40000c8	            0x742d	                            je 0x40000f7	       399	write.c	FUNCTION_10	FOR_1	IF_1
0x40000ca	    0x488bbea80000	            mov rdi, qword [rsi + 0xa8] 	       401	write.c	FUNCTION_10	FOR_1	IF_1	IF_2	CALL_2
0x40000d1	      0x48837f1000	               cmp qword [rdi + 0x10], 0	       401	write.c	FUNCTION_10	FOR_1	IF_1	IF_2	CALL_2
0x40000d6	            0x7504	                           jne 0x40000dc	       401	write.c	FUNCTION_10	FOR_1	IF_1	IF_2	CALL_2
0x40000d8	        0x48894f10	             mov qword [rdi + 0x10], rcx	       402	write.c	FUNCTION_10	FOR_1	IF_1	CALL_3
0x40000dc	        0x488b4820	            mov rcx, qword [rax + 0x20] 	       403	write.c	FUNCTION_10	FOR_1	IF_1
0x40000e0	        0x49894840	              mov qword [r8 + 0x40], rcx	       403	write.c	FUNCTION_10	FOR_1	IF_1
0x40000e4	    0x488b8ea80000	            mov rcx, qword [rsi + 0xa8] 	       404	write.c	FUNCTION_10	FOR_1	IF_1	CALL_4
0x40000eb	        0x488b7828	            mov rdi, qword [rax + 0x28] 	       404	write.c	FUNCTION_10	FOR_1	IF_1	CALL_4
0x40000ef	        0x48897918	             mov qword [rcx + 0x18], rdi	       404	write.c	FUNCTION_10	FOR_1	IF_1	CALL_4
0x40000f3	        0x4c8b4028	              mov r8, qword [rax + 0x28]	       405	write.c	FUNCTION_10	FOR_1	IF_1
0x40000f7	        0x488b4010	            mov rax, qword [rax + 0x10] 	       394	write.c	FUNCTION_10	FOR_1
0x40000fb	          0x4885c0	                           test rax, rax	       394	write.c	FUNCTION_10	FOR_1
0x40000fe	            0x759c	                           jne 0x400009c	       394	write.c	FUNCTION_10	FOR_1
0x4000100	      0x488d442470	                   lea rax, [rsp + 0x70]	       408	write.c	FUNCTION_10	CALL_5
0x4000105	          0x4839c2	                            cmp rdx, rax	       408	write.c	FUNCTION_10	CALL_5
0x4000108	            0x7406	                            je 0x4000110	       408	write.c	FUNCTION_10	CALL_5
0x400010a	        0x837a5c00	               cmp dword [rdx + 0x5c], 0	       408	write.c	FUNCTION_10	CALL_5
0x400010e	            0x7514	                           jne 0x4000124	       408	write.c	FUNCTION_10	CALL_5
0x4000110	      0xba00000000	                              mov edx, 0	       408	write.c	FUNCTION_10	CALL_5
0x4000115	      0xbe99010000	                          mov esi, 0x199	       408	write.c	FUNCTION_10	CALL_5
0x400011a	      0xbf00000000	                              mov edi, 0	       408	write.c	FUNCTION_10	CALL_5
0x400011f	      0xe800000000	                          call 0x4000124	       408	write.c	FUNCTION_10	CALL_5
0x4000124	    0x48c742380000	               mov qword [rdx + 0x38], 0	       410	write.c	FUNCTION_10
0x400012c	        0x49895108	                 mov qword [r9 + 8], rdx	       426	write.c	FUNCTION_11	CALL_2
0x4000130	    0xc70500000000	               mov dword [0x0400013a], 1	       430	write.c	FUNCTION_11
0x400013a	    0x488b8424f800	            mov rax, qword [rsp + 0xf8] 	       431	write.c	FUNCTION_11
0x4000142	    0x644833042528	                xor rax, qword fs:[0x28]	       431	write.c	FUNCTION_11
0x400014b	            0x7405	                            je 0x4000152	       431	write.c	FUNCTION_11
0x400014d	      0xe800000000	                          call 0x4000152	       431	write.c	FUNCTION_11
0x4000152	    0x4881c4080100	                          add rsp, 0x108	       431	write.c	FUNCTION_11
0x4000159	              0xc3	                                     ret	       431	write.c	FUNCTION_11
write_contents	CALL,29:FOR,3:SWITCH,0:WHILE,1:DO,0:functions,0:IF,11:ELSE,2	259
0x4001476	            0x4157	                                push r15	      1596	write.c	FUNCTION_25
0x4001478	            0x4156	                                push r14	      1596	write.c	FUNCTION_25
0x400147a	            0x4155	                                push r13	      1596	write.c	FUNCTION_25
0x400147c	            0x4154	                                push r12	      1596	write.c	FUNCTION_25
0x400147e	              0x55	                                push rbp	      1596	write.c	FUNCTION_25
0x400147f	              0x53	                                push rbx	      1596	write.c	FUNCTION_25
0x4001480	    0x4881ec280100	                          sub rsp, 0x128	      1596	write.c	FUNCTION_25
0x4001487	        0x48893424	                    mov qword [rsp], rsi	      1596	write.c	FUNCTION_25
0x400148b	    0x64488b042528	                mov rax, qword fs:[0x28]	      1596	write.c	FUNCTION_25
0x4001494	    0x488984241801	            mov qword [rsp + 0x118], rax	      1596	write.c	FUNCTION_25
0x400149c	            0x31c0	                            xor eax, eax	      1596	write.c	FUNCTION_25
0x400149e	    0x488b86a80000	            mov rax, qword [rsi + 0xa8] 	      1597	write.c	FUNCTION_25	CALL_1
0x40014a5	          0x4885c0	                           test rax, rax	      1602	write.c	FUNCTION_25	IF_1
0x40014a8	     0xf849c030000	                            je 0x400184a	      1602	write.c	FUNCTION_25	IF_1
0x40014ae	        0xf6462101	               test byte [rsi + 0x21], 1	      1603	write.c	FUNCTION_25	IF_1
0x40014b2	     0xf8492030000	                            je 0x400184a	      1603	write.c	FUNCTION_25	IF_1
0x40014b8	          0x488b00	                    mov rax, qword [rax]	      1606	write.c	FUNCTION_25	FOR_1
0x40014bb	          0x4c8b38	                    mov r15, qword [rax]	      1606	write.c	FUNCTION_25	FOR_1
0x40014be	          0x4d85ff	                           test r15, r15	      1606	write.c	FUNCTION_25	FOR_1
0x40014c1	     0xf8483030000	                            je 0x400184a	      1606	write.c	FUNCTION_25	FOR_1
0x40014c7	        0x418b475c	            mov eax, dword [r15 + 0x5c] 	      1615	write.c	FUNCTION_25	FOR_1	CALL_2
0x40014cb	          0x83f801	                              cmp eax, 1	      1615	write.c	FUNCTION_25	FOR_1	CALL_2
0x40014ce	            0x7405	                            je 0x40014d5	      1615	write.c	FUNCTION_25	FOR_1	CALL_2
0x40014d0	          0x83f80a	                            cmp eax, 0xa	      1615	write.c	FUNCTION_25	FOR_1	CALL_2
0x40014d3	            0x7516	                           jne 0x40014eb	      1615	write.c	FUNCTION_25	FOR_1	CALL_2
0x40014d5	    0x41bc00000000	                             mov r12d, 0	      1615	write.c	FUNCTION_25	FOR_1	CALL_2
0x40014db	            0xeb22	                           jmp 0x40014ff	      1615	write.c	FUNCTION_25	FOR_1	CALL_2
0x40014dd	        0x418b475c	            mov eax, dword [r15 + 0x5c] 	      1615	write.c	FUNCTION_25	FOR_1	CALL_2
0x40014e1	          0x83f801	                              cmp eax, 1	      1615	write.c	FUNCTION_25	FOR_1	CALL_2
0x40014e4	            0x7419	                            je 0x40014ff	      1615	write.c	FUNCTION_25	FOR_1	CALL_2
0x40014e6	          0x83f80a	                            cmp eax, 0xa	      1615	write.c	FUNCTION_25	FOR_1	CALL_2
0x40014e9	            0x7414	                            je 0x40014ff	      1615	write.c	FUNCTION_25	FOR_1	CALL_2
0x40014eb	      0xba00000000	                              mov edx, 0	      1615	write.c	FUNCTION_25	FOR_1	CALL_2
0x40014f0	      0xbe4f060000	                          mov esi, 0x64f	      1615	write.c	FUNCTION_25	FOR_1	CALL_2
0x40014f5	      0xbf00000000	                              mov edi, 0	      1615	write.c	FUNCTION_25	FOR_1	CALL_2
0x40014fa	      0xe800000000	                          call 0x40014ff	      1615	write.c	FUNCTION_25	FOR_1	CALL_2
0x40014ff	        0x4d8b4710	              mov r8, qword [r15 + 0x10]	      1616	write.c	FUNCTION_25	FOR_1	IF_2
0x4001503	          0x4d85c0	                             test r8, r8	      1616	write.c	FUNCTION_25	FOR_1	IF_2
0x4001506	            0x7479	                            je 0x4001581	      1616	write.c	FUNCTION_25	FOR_1	IF_2
0x4001508	        0x498d577c	                   lea rdx, [r15 + 0x7c]	      1619	write.c	FUNCTION_25	FOR_1	IF_2
0x400150c	          0x4c89e1	                            mov rcx, r12	      1618	write.c	FUNCTION_25	FOR_1	IF_2	CALL_3
0x400150f	        0x488b3424	                    mov rsi, qword [rsp]	      1618	write.c	FUNCTION_25	FOR_1	IF_2	CALL_3
0x4001513	    0x488b3d000000	            mov rdi, qword [0x0400151a] 	      1618	write.c	FUNCTION_25	FOR_1	IF_2	CALL_3
0x400151a	      0xe800000000	                          call 0x400151f	      1618	write.c	FUNCTION_25	FOR_1	IF_2	CALL_3
0x400151f	            0x85c0	                           test eax, eax	      1621	write.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x4001521	            0x755a	                           jne 0x400157d	      1621	write.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x4001523	      0xe800000000	                          call 0x4001528	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x4001528	            0x89c7	                            mov edi, eax	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x400152a	      0xe800000000	                          call 0x400152f	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x400152f	          0x4989c4	                            mov r12, rax	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x4001532	    0x488b05000000	            mov rax, qword [0x04001539] 	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x4001539	          0x488b28	                    mov rbp, qword [rax]	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x400153c	        0x488b0424	                    mov rax, qword [rsp]	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x4001540	          0x4c8b28	                    mov r13, qword [rax]	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x4001543	        0x498b5f10	            mov rbx, qword [r15 + 0x10] 	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x4001547	    0x41b805000000	                              mov r8d, 5	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x400154d	          0x4889d9	                            mov rcx, rbx	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x4001550	      0xba00000000	                              mov edx, 0	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x4001555	      0xbe00000000	                              mov esi, 0	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x400155a	      0xbf00000000	                              mov edi, 0	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x400155f	      0xe800000000	                          call 0x4001564	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x4001564	          0x4d89e0	                             mov r8, r12	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x4001567	          0x4889e9	                            mov rcx, rbp	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x400156a	          0x4c89ea	                            mov rdx, r13	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x400156d	          0x4889de	                            mov rsi, rbx	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x4001570	          0x4889c7	                            mov rdi, rax	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x4001573	      0xb800000000	                              mov eax, 0	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x4001578	      0xe800000000	                          call 0x400157d	      1622	write.c	FUNCTION_25	FOR_1	IF_2	IF_3	CALL_5
0x400157d	        0x4d036710	             add r12, qword [r15 + 0x10]	      1630	write.c	FUNCTION_25	FOR_1	IF_2
0x4001581	        0x4d8b6f18	            mov r13, qword [r15 + 0x18] 	      1633	write.c	FUNCTION_25	FOR_1
0x4001585	          0x4d89ee	                            mov r14, r13	      1633	write.c	FUNCTION_25	FOR_1
0x4001588	        0x498b5f20	            mov rbx, qword [r15 + 0x20] 	      1634	write.c	FUNCTION_25	FOR_1
0x400158c	        0x498b4710	            mov rax, qword [r15 + 0x10] 	      1635	write.c	FUNCTION_25	FOR_1
0x4001590	      0x498d6c077c	            lea rbp, [r15 + rax + 0x7c] 	      1635	write.c	FUNCTION_25	FOR_1
0x4001595	      0x41837f5c0a	            cmp dword [r15 + 0x5c], 0xa 	      1637	write.c	FUNCTION_25	FOR_1	IF_4
0x400159a	     0xf85ce000000	                           jne 0x400166e	      1637	write.c	FUNCTION_25	FOR_1	IF_4
0x40015a0	          0x4889d8	                            mov rax, rbx	      1639	write.c	FUNCTION_25	FOR_1	IF_4	CALL_8
0x40015a3	        0x48c1e83f	                           shr rax, 0x3f	      1639	write.c	FUNCTION_25	FOR_1	IF_4	CALL_8
0x40015a7	            0x84c0	                             test al, al	      1639	write.c	FUNCTION_25	FOR_1	IF_4	CALL_8
0x40015a9	            0x7506	                           jne 0x40015b1	      1639	write.c	FUNCTION_25	FOR_1	IF_4	CALL_8
0x40015ab	        0x4983fd01	                              cmp r13, 1	      1639	write.c	FUNCTION_25	FOR_1	IF_4	CALL_8
0x40015af	            0x7414	                            je 0x40015c5	      1639	write.c	FUNCTION_25	FOR_1	IF_4	CALL_8
0x40015b1	      0xba00000000	                              mov edx, 0	      1639	write.c	FUNCTION_25	FOR_1	IF_4	CALL_8
0x40015b6	      0xbe67060000	                          mov esi, 0x667	      1639	write.c	FUNCTION_25	FOR_1	IF_4	CALL_8
0x40015bb	      0xbf00000000	                              mov edi, 0	      1639	write.c	FUNCTION_25	FOR_1	IF_4	CALL_8
0x40015c0	      0xe800000000	                          call 0x40015c5	      1639	write.c	FUNCTION_25	FOR_1	IF_4	CALL_8
0x40015c5	          0x4885db	                           test rbx, rbx	      1640	write.c	FUNCTION_25	FOR_1	IF_4	IF_5
0x40015c8	     0xf8e6f020000	                           jle 0x400183d	      1640	write.c	FUNCTION_25	FOR_1	IF_4	IF_5
0x40015ce	          0x4889df	                            mov rdi, rbx	      1642	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_9
0x40015d1	      0xe800000000	                          call 0x40015d6	      1642	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_9
0x40015d6	          0x4989c5	                            mov r13, rax	      1642	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_9
0x40015d9	         0xfbe4d00	                   movsx ecx, byte [rbp]	      1643	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_10
0x40015dd	          0x4889da	                            mov rdx, rbx	      1643	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_10
0x40015e0	          0x4889c6	                            mov rsi, rax	      1643	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_10
0x40015e3	          0x4c89ff	                            mov rdi, r15	      1643	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_10
0x40015e6	      0xe800000000	                          call 0x40015eb	      1643	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_10
0x40015eb	          0x4989d8	                             mov r8, rbx	      1644	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_11
0x40015ee	          0x4c89e1	                            mov rcx, r12	      1644	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_11
0x40015f1	          0x4c89ea	                            mov rdx, r13	      1644	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_11
0x40015f4	        0x488b3424	                    mov rsi, qword [rsp]	      1644	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_11
0x40015f8	    0x488b3d000000	            mov rdi, qword [0x040015ff] 	      1644	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_11
0x40015ff	      0xe800000000	                          call 0x4001604	      1644	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_11
0x4001604	            0x85c0	                           test eax, eax	      1647	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6
0x4001606	            0x7556	                           jne 0x400165e	      1647	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6
0x4001608	      0xe800000000	                          call 0x400160d	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x400160d	            0x89c7	                            mov edi, eax	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x400160f	      0xe800000000	                          call 0x4001614	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x4001614	          0x4989c4	                            mov r12, rax	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x4001617	    0x488b05000000	            mov rax, qword [0x0400161e] 	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x400161e	          0x488b28	                    mov rbp, qword [rax]	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x4001621	        0x488b0424	                    mov rax, qword [rsp]	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x4001625	          0x4c8b28	                    mov r13, qword [rax]	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x4001628	    0x41b805000000	                              mov r8d, 5	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x400162e	          0x4889d9	                            mov rcx, rbx	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x4001631	      0xba00000000	                              mov edx, 0	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x4001636	      0xbe00000000	                              mov esi, 0	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x400163b	      0xbf00000000	                              mov edi, 0	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x4001640	      0xe800000000	                          call 0x4001645	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x4001645	          0x4d89e0	                             mov r8, r12	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x4001648	          0x4889e9	                            mov rcx, rbp	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x400164b	          0x4c89ea	                            mov rdx, r13	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x400164e	          0x4889de	                            mov rsi, rbx	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x4001651	          0x4889c7	                            mov rdi, rax	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x4001654	      0xb800000000	                              mov eax, 0	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x4001659	      0xe800000000	                          call 0x400165e	      1648	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x400165e	          0x4901dc	                            add r12, rbx	      1655	write.c	FUNCTION_25	FOR_1	IF_4	IF_5
0x4001661	          0x4c89ef	                            mov rdi, r13	      1656	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_16
0x4001664	      0xe800000000	                          call 0x4001669	      1656	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_16
0x4001669	      0xe9cf010000	                           jmp 0x400183d	      1656	write.c	FUNCTION_25	FOR_1	IF_4	IF_5	CALL_16
0x400166e	          0x4885db	                           test rbx, rbx	      1661	write.c	FUNCTION_25	FOR_1	CALL_17
0x4001671	            0x7914	                           jns 0x4001687	      1661	write.c	FUNCTION_25	FOR_1	CALL_17
0x4001673	      0xba00000000	                              mov edx, 0	      1661	write.c	FUNCTION_25	FOR_1	CALL_17
0x4001678	      0xbe7d060000	                          mov esi, 0x67d	      1661	write.c	FUNCTION_25	FOR_1	CALL_17
0x400167d	      0xbf00000000	                              mov edi, 0	      1661	write.c	FUNCTION_25	FOR_1	CALL_17
0x4001682	      0xe800000000	                          call 0x4001687	      1661	write.c	FUNCTION_25	FOR_1	CALL_17
0x4001687	          0x4d85ed	                           test r13, r13	      1662	write.c	FUNCTION_25	FOR_1	IF_7
0x400168a	     0xf84ad010000	                            je 0x400183d	      1662	write.c	FUNCTION_25	FOR_1	IF_7
0x4001690	          0x4885db	                           test rbx, rbx	      1662	write.c	FUNCTION_25	FOR_1	IF_7
0x4001693	     0xf84a4010000	                            je 0x400183d	      1662	write.c	FUNCTION_25	FOR_1	IF_7
0x4001699	    0x4981fd000100	                          cmp r13, 0x100	      1665	write.c	FUNCTION_25	FOR_1	IF_7	IF_8
0x40016a0	     0xf868a000000	                           jbe 0x4001730	      1665	write.c	FUNCTION_25	FOR_1	IF_7	IF_8
0x40016a6	          0x4885db	                           test rbx, rbx	      1668	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1
0x40016a9	     0xf848e010000	                            je 0x400183d	      1668	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1
0x40016af	          0x4d89f0	                             mov r8, r14	      1670	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	CALL_18
0x40016b2	          0x4c89e1	                            mov rcx, r12	      1670	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	CALL_18
0x40016b5	          0x4889ea	                            mov rdx, rbp	      1670	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	CALL_18
0x40016b8	        0x488b3424	                    mov rsi, qword [rsp]	      1670	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	CALL_18
0x40016bc	    0x488b3d000000	            mov rdi, qword [0x040016c3] 	      1670	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	CALL_18
0x40016c3	      0xe800000000	                          call 0x40016c8	      1670	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	CALL_18
0x40016c8	            0x85c0	                           test eax, eax	      1674	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9
0x40016ca	            0x7556	                           jne 0x4001722	      1674	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9
0x40016cc	      0xe800000000	                          call 0x40016d1	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x40016d1	            0x89c7	                            mov edi, eax	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x40016d3	      0xe800000000	                          call 0x40016d8	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x40016d8	          0x4889c5	                            mov rbp, rax	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x40016db	    0x488b05000000	            mov rax, qword [0x040016e2] 	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x40016e2	          0x488b18	                    mov rbx, qword [rax]	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x40016e5	        0x488b0424	                    mov rax, qword [rsp]	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x40016e9	          0x4c8b20	                    mov r12, qword [rax]	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x40016ec	    0x41b805000000	                              mov r8d, 5	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x40016f2	          0x4c89f1	                            mov rcx, r14	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x40016f5	      0xba00000000	                              mov edx, 0	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x40016fa	      0xbe00000000	                              mov esi, 0	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x40016ff	      0xbf00000000	                              mov edi, 0	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x4001704	      0xe800000000	                          call 0x4001709	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x4001709	          0x4989e8	                             mov r8, rbp	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x400170c	          0x4889d9	                            mov rcx, rbx	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x400170f	          0x4c89e2	                            mov rdx, r12	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x4001712	          0x4c89ee	                            mov rsi, r13	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x4001715	          0x4889c7	                            mov rdi, rax	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x4001718	      0xb800000000	                              mov eax, 0	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x400171d	      0xe800000000	                          call 0x4001722	      1675	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1	IF_9	CALL_20
0x4001722	          0x4d01f4	                            add r12, r14	      1683	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1
0x4001725	        0x4883eb01	                              sub rbx, 1	      1668	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1
0x4001729	            0x7584	                           jne 0x40016af	      1668	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1
0x400172b	      0xe90d010000	                           jmp 0x400183d	      1668	write.c	FUNCTION_25	FOR_1	IF_7	IF_8	WHILE_1
0x4001730	        0x4983fd01	                              cmp r13, 1	      1692	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	IF_10
0x4001734	            0x7531	                           jne 0x4001767	      1692	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	IF_10
0x4001736	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	        90	string3.h	FUNCTION_61	CALL_6
0x400173b	         0xfb64500	                   movzx eax, byte [rbp]	        90	string3.h	FUNCTION_61	CALL_6
0x400173f	    0x48b901010101	           movabs rcx, 0x101010101010101	        90	string3.h	FUNCTION_61	CALL_6
0x4001749	        0x480fafc1	                           imul rax, rcx	        90	string3.h	FUNCTION_61	CALL_6
0x400174d	      0xb920000000	                           mov ecx, 0x20	        90	string3.h	FUNCTION_61	CALL_6
0x4001752	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_61	CALL_6
0x4001755	    0xc74424080001	              mov dword [rsp + 8], 0x100	      1694	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	IF_10
0x400175d	          0x4885db	                           test rbx, rbx	      1704	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3
0x4001760	            0x7f3d	                            jg 0x400179f	      1704	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3
0x4001762	      0xe9d6000000	                           jmp 0x400183d	      1704	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3
0x4001767	      0xb800010000	                          mov eax, 0x100	      1700	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	ELSE_2
0x400176c	      0xba00000000	                              mov edx, 0	      1700	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	ELSE_2
0x4001771	          0x49f7f5	                                 div r13	      1700	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	ELSE_2
0x4001774	        0x89442408	                mov dword [rsp + 8], eax	      1700	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	ELSE_2
0x4001778	            0x85c0	                           test eax, eax	      1701	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	ELSE_2	FOR_2
0x400177a	            0x74e1	                            je 0x400175d	      1701	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	ELSE_2	FOR_2
0x400177c	        0x8944240c	              mov dword [rsp + 0xc], eax	      1701	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	ELSE_2	FOR_2
0x4001780	      0x4c8d6c2410	                   lea r13, [rsp + 0x10]	      1701	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	ELSE_2	FOR_2
0x4001785	          0x4c89f2	                            mov rdx, r14	        53	string3.h	FUNCTION_58	CALL_3
0x4001788	          0x4889ee	                            mov rsi, rbp	        53	string3.h	FUNCTION_58	CALL_3
0x400178b	          0x4c89ef	                            mov rdi, r13	        53	string3.h	FUNCTION_58	CALL_3
0x400178e	      0xe800000000	                          call 0x4001793	        53	string3.h	FUNCTION_58	CALL_3
0x4001793	          0x4d01f5	                            add r13, r14	      1701	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	ELSE_2	FOR_2
0x4001796	      0x836c240c01	                sub dword [rsp + 0xc], 1	      1701	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	ELSE_2	FOR_2
0x400179b	            0x75e8	                           jne 0x4001785	      1701	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	ELSE_2	FOR_2
0x400179d	            0xebbe	                           jmp 0x400175d	      1701	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	ELSE_2	FOR_2
0x400179f	      0x48636c2408	            movsxd rbp, dword [rsp + 8] 	      1706	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3
0x40017a4	          0x4839dd	                            cmp rbp, rbx	      1706	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3
0x40017a7	        0x480f4feb	                          cmovg rbp, rbx	      1706	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3
0x40017ab	        0x896c2408	                mov dword [rsp + 8], ebp	      1706	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3
0x40017af	          0x4c63ed	                         movsxd r13, ebp	      1707	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	CALL_25
0x40017b2	        0x4d0fafee	                           imul r13, r14	      1707	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	CALL_25
0x40017b6	          0x4d89e8	                             mov r8, r13	      1707	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	CALL_25
0x40017b9	          0x4c89e1	                            mov rcx, r12	      1707	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	CALL_25
0x40017bc	      0x488d542410	                   lea rdx, [rsp + 0x10]	      1707	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	CALL_25
0x40017c1	        0x488b3424	                    mov rsi, qword [rsp]	      1707	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	CALL_25
0x40017c5	    0x488b3d000000	            mov rdi, qword [0x040017cc] 	      1707	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	CALL_25
0x40017cc	      0xe800000000	                          call 0x40017d1	      1707	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	CALL_25
0x40017d1	            0x85c0	                           test eax, eax	      1710	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11
0x40017d3	            0x7556	                           jne 0x400182b	      1710	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11
0x40017d5	      0xe800000000	                          call 0x40017da	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x40017da	            0x89c7	                            mov edi, eax	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x40017dc	      0xe800000000	                          call 0x40017e1	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x40017e1	          0x4989c4	                            mov r12, rax	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x40017e4	    0x488b05000000	            mov rax, qword [0x040017eb] 	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x40017eb	          0x488b28	                    mov rbp, qword [rax]	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x40017ee	        0x488b0424	                    mov rax, qword [rsp]	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x40017f2	          0x488b18	                    mov rbx, qword [rax]	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x40017f5	    0x41b805000000	                              mov r8d, 5	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x40017fb	          0x4c89e9	                            mov rcx, r13	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x40017fe	      0xba00000000	                              mov edx, 0	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x4001803	      0xbe00000000	                              mov esi, 0	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x4001808	      0xbf00000000	                              mov edi, 0	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x400180d	      0xe800000000	                          call 0x4001812	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x4001812	          0x4d89e0	                             mov r8, r12	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x4001815	          0x4889e9	                            mov rcx, rbp	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x4001818	          0x4889da	                            mov rdx, rbx	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x400181b	          0x4c89ee	                            mov rsi, r13	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x400181e	          0x4889c7	                            mov rdi, rax	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x4001821	      0xb800000000	                              mov eax, 0	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x4001826	      0xe800000000	                          call 0x400182b	      1711	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3	IF_11	CALL_27
0x400182b	          0x4d01ec	                            add r12, r13	      1719	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3
0x400182e	          0x4863ed	                         movsxd rbp, ebp	      1704	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3
0x4001831	          0x4829eb	                            sub rbx, rbp	      1704	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3
0x4001834	          0x4885db	                           test rbx, rbx	      1704	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3
0x4001837	     0xf8f62ffffff	                            jg 0x400179f	      1704	write.c	FUNCTION_25	FOR_1	IF_7	ELSE_1	FOR_3
0x400183d	        0x4d8b7f38	            mov r15, qword [r15 + 0x38] 	      1608	write.c	FUNCTION_25	FOR_1
0x4001841	          0x4d85ff	                           test r15, r15	      1606	write.c	FUNCTION_25	FOR_1
0x4001844	     0xf8593fcffff	                           jne 0x40014dd	      1606	write.c	FUNCTION_25	FOR_1
0x400184a	    0x488b84241801	           mov rax, qword [rsp + 0x118] 	      1724	write.c	FUNCTION_25
0x4001852	    0x644833042528	                xor rax, qword fs:[0x28]	      1724	write.c	FUNCTION_25
0x400185b	            0x7405	                            je 0x4001862	      1724	write.c	FUNCTION_25
0x400185d	      0xe800000000	                          call 0x4001862	      1724	write.c	FUNCTION_25
0x4001862	    0x4881c4280100	                          add rsp, 0x128	      1724	write.c	FUNCTION_25
0x4001869	              0x5b	                                 pop rbx	      1724	write.c	FUNCTION_25
0x400186a	              0x5d	                                 pop rbp	      1724	write.c	FUNCTION_25
0x400186b	            0x415c	                                 pop r12	      1724	write.c	FUNCTION_25
0x400186d	            0x415d	                                 pop r13	      1724	write.c	FUNCTION_25
0x400186f	            0x415e	                                 pop r14	      1724	write.c	FUNCTION_25
0x4001871	            0x415f	                                 pop r15	      1724	write.c	FUNCTION_25
0x4001873	              0xc3	                                     ret	      1724	write.c	FUNCTION_25
compress_debug	CALL,29:FOR,2:SWITCH,0:WHILE,1:DO,0:functions,0:IF,17:ELSE,1	272
0x400048d	            0x4157	                                push r15	      1424	write.c	FUNCTION_23
0x400048f	            0x4156	                                push r14	      1424	write.c	FUNCTION_23
0x4000491	            0x4155	                                push r13	      1424	write.c	FUNCTION_23
0x4000493	            0x4154	                                push r12	      1424	write.c	FUNCTION_23
0x4000495	              0x55	                                push rbp	      1424	write.c	FUNCTION_23
0x4000496	              0x53	                                push rbx	      1424	write.c	FUNCTION_23
0x4000497	    0x4881ec880000	                           sub rsp, 0x88	      1424	write.c	FUNCTION_23
0x400049e	      0x48897c2408	                mov qword [rsp + 8], rdi	      1424	write.c	FUNCTION_23
0x40004a3	    0x64488b042528	                mov rax, qword fs:[0x28]	      1424	write.c	FUNCTION_23
0x40004ac	      0x4889442478	             mov qword [rsp + 0x78], rax	      1424	write.c	FUNCTION_23
0x40004b1	            0x31c0	                            xor eax, eax	      1424	write.c	FUNCTION_23
0x40004b3	    0x4c8bbea80000	            mov r15, qword [rsi + 0xa8] 	      1425	write.c	FUNCTION_23	CALL_1
0x40004ba	        0x4c8b7638	            mov r14, qword [rsi + 0x38] 	      1430	write.c	FUNCTION_23
0x40004be	        0x4983fe1f	                           cmp r14, 0x1f	      1441	write.c	FUNCTION_23	IF_1
0x40004c2	     0xf86d3030000	                           jbe 0x400089b	      1441	write.c	FUNCTION_23	IF_1
0x40004c8	          0x4889f5	                            mov rbp, rsi	      1441	write.c	FUNCTION_23	IF_1
0x40004cb	          0x4d85ff	                           test r15, r15	      1441	write.c	FUNCTION_23	IF_1
0x40004ce	     0xf84c7030000	                            je 0x400089b	      1441	write.c	FUNCTION_23	IF_1
0x40004d4	          0x8b4620	            mov eax, dword [rsi + 0x20] 	      1442	write.c	FUNCTION_23	IF_1
0x40004d7	      0x2501010000	                          and eax, 0x101	      1442	write.c	FUNCTION_23	IF_1
0x40004dc	          0x83f801	                              cmp eax, 1	      1442	write.c	FUNCTION_23	IF_1
0x40004df	     0xf84b6030000	                            je 0x400089b	      1442	write.c	FUNCTION_23	IF_1
0x40004e5	          0x488b36	                    mov rsi, qword [rsi]	      1445	write.c	FUNCTION_23
0x40004e8	      0x4889742418	             mov qword [rsp + 0x18], rsi	      1445	write.c	FUNCTION_23
0x40004ed	      0xbf00000000	                              mov edi, 0	      1446	write.c	FUNCTION_23	IF_2	CALL_2
0x40004f2	      0xb907000000	                              mov ecx, 7	      1446	write.c	FUNCTION_23	IF_2	CALL_2
0x40004f7	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1446	write.c	FUNCTION_23	IF_2	CALL_2
0x40004f9	           0xf97c2	                                 seta dl	      1446	write.c	FUNCTION_23	IF_2	CALL_2
0x40004fc	           0xf92c0	                                 setb al	      1446	write.c	FUNCTION_23	IF_2	CALL_2
0x40004ff	            0x38c2	                              cmp dl, al	      1446	write.c	FUNCTION_23	IF_2	CALL_2
0x4000501	     0xf8594030000	                           jne 0x400089b	      1446	write.c	FUNCTION_23	IF_2	CALL_2
0x4000507	          0x498b07	                    mov rax, qword [r15]	      1429	write.c	FUNCTION_23
0x400050a	      0x4889442420	             mov qword [rsp + 0x20], rax	      1429	write.c	FUNCTION_23
0x400050f	      0xe800000000	                          call 0x4000514	      1449	write.c	FUNCTION_23	CALL_3
0x4000514	      0x4889442438	             mov qword [rsp + 0x38], rax	      1449	write.c	FUNCTION_23	CALL_3
0x4000519	          0x4885c0	                           test rax, rax	      1450	write.c	FUNCTION_23	IF_3
0x400051c	     0xf8479030000	                            je 0x400089b	      1450	write.c	FUNCTION_23	IF_3
0x4000522	    0xc74424440000	               mov dword [rsp + 0x44], 0	      1461	write.c	FUNCTION_23	ELSE_1
0x400052a	      0xbb0c000000	                            mov ebx, 0xc	      1462	write.c	FUNCTION_23	ELSE_1
0x400052f	    0x833d00000000	               cmp dword [0x04000536], 5	      1453	write.c	FUNCTION_23	IF_4
0x4000536	            0x7517	                           jne 0x400054f	      1453	write.c	FUNCTION_23	IF_4
0x4000538	      0xbe00000000	                              mov esi, 0	      1456	write.c	FUNCTION_23	IF_4	CALL_4
0x400053d	    0x488b3d000000	            mov rdi, qword [0x04000544] 	      1456	write.c	FUNCTION_23	IF_4	CALL_4
0x4000544	      0xe800000000	                          call 0x4000549	      1456	write.c	FUNCTION_23	IF_4	CALL_4
0x4000549	            0x89c3	                            mov ebx, eax	      1456	write.c	FUNCTION_23	IF_4	CALL_4
0x400054b	        0x89442444	             mov dword [rsp + 0x44], eax	      1456	write.c	FUNCTION_23	IF_4	CALL_4
0x400054f	      0x4c8b642420	            mov r12, qword [rsp + 0x20] 	      1429	write.c	FUNCTION_23
0x4000554	          0x4c89e0	                            mov rax, r12	      1429	write.c	FUNCTION_23
0x4000557	        0x4883c030	                           add rax, 0x30	      1429	write.c	FUNCTION_23
0x400055b	      0x4889442410	             mov qword [rsp + 0x10], rax	      1429	write.c	FUNCTION_23
0x4000560	          0x4889c7	                            mov rdi, rax	      1466	write.c	FUNCTION_23	CALL_5
0x4000563	      0xe800000000	                          call 0x4000568	      1466	write.c	FUNCTION_23	CALL_5
0x4000568	      0x4889442430	             mov qword [rsp + 0x30], rax	      1466	write.c	FUNCTION_23	CALL_5
0x400056d	          0x4c89e7	                            mov rdi, r12	      1467	write.c	FUNCTION_23	IF_5	CALL_6
0x4000570	      0x498b442448	            mov rax, qword [r12 + 0x48] 	      1467	write.c	FUNCTION_23	IF_5	CALL_6
0x4000575	          0x4189dc	                           mov r12d, ebx	      1467	write.c	FUNCTION_23	IF_5	CALL_6
0x4000578	        0x488b7f50	            mov rdi, qword [rdi + 0x50] 	      1467	write.c	FUNCTION_23	IF_5	CALL_6
0x400057c	      0x48897c2428	             mov qword [rsp + 0x28], rdi	      1467	write.c	FUNCTION_23	IF_5	CALL_6
0x4000581	          0x4889fa	                            mov rdx, rdi	      1467	write.c	FUNCTION_23	IF_5	CALL_6
0x4000584	          0x4829c2	                            sub rdx, rax	      1467	write.c	FUNCTION_23	IF_5	CALL_6
0x4000587	          0x4c39e2	                            cmp rdx, r12	      1467	write.c	FUNCTION_23	IF_5	CALL_6
0x400058a	            0x7359	                           jae 0x40005e5	      1467	write.c	FUNCTION_23	IF_5	CALL_6
0x400058c	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1468	write.c	FUNCTION_23	CALL_7
0x4000591	      0xe800000000	                          call 0x4000596	      1468	write.c	FUNCTION_23	CALL_7
0x4000596	      0x4889442430	             mov qword [rsp + 0x30], rax	      1468	write.c	FUNCTION_23	CALL_7
0x400059b	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      1469	write.c	FUNCTION_23	IF_6	CALL_8
0x40005a0	        0x488b4748	            mov rax, qword [rdi + 0x48] 	      1469	write.c	FUNCTION_23	IF_6	CALL_8
0x40005a4	        0x488b7f50	            mov rdi, qword [rdi + 0x50] 	      1469	write.c	FUNCTION_23	IF_6	CALL_8
0x40005a8	      0x48897c2428	             mov qword [rsp + 0x28], rdi	      1469	write.c	FUNCTION_23	IF_6	CALL_8
0x40005ad	          0x4889fa	                            mov rdx, rdi	      1469	write.c	FUNCTION_23	IF_6	CALL_8
0x40005b0	          0x4829c2	                            sub rdx, rax	      1469	write.c	FUNCTION_23	IF_6	CALL_8
0x40005b3	          0x4939d4	                            cmp r12, rdx	      1469	write.c	FUNCTION_23	IF_6	CALL_8
0x40005b6	            0x762d	                           jbe 0x40005e5	      1469	write.c	FUNCTION_23	IF_6	CALL_8
0x40005b8	    0x41b805000000	                              mov r8d, 5	      1470	write.c	FUNCTION_23	IF_6	CALL_10
0x40005be	          0x4c89e1	                            mov rcx, r12	      1470	write.c	FUNCTION_23	IF_6	CALL_10
0x40005c1	      0xba00000000	                              mov edx, 0	      1470	write.c	FUNCTION_23	IF_6	CALL_10
0x40005c6	      0xbe00000000	                              mov esi, 0	      1470	write.c	FUNCTION_23	IF_6	CALL_10
0x40005cb	      0xbf00000000	                              mov edi, 0	      1470	write.c	FUNCTION_23	IF_6	CALL_10
0x40005d0	      0xe800000000	                          call 0x40005d5	      1470	write.c	FUNCTION_23	IF_6	CALL_10
0x40005d5	          0x4c89e6	                            mov rsi, r12	      1470	write.c	FUNCTION_23	IF_6	CALL_10
0x40005d8	          0x4889c7	                            mov rdi, rax	      1470	write.c	FUNCTION_23	IF_6	CALL_10
0x40005db	      0xb800000000	                              mov eax, 0	      1470	write.c	FUNCTION_23	IF_6	CALL_10
0x40005e0	      0xe800000000	                          call 0x40005e5	      1470	write.c	FUNCTION_23	IF_6	CALL_10
0x40005e5	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      1474	write.c	FUNCTION_23
0x40005ea	      0x48897c2468	             mov qword [rsp + 0x68], rdi	      1474	write.c	FUNCTION_23
0x40005ef	          0x4c01e0	                            add rax, r12	      1475	write.c	FUNCTION_23	CALL_11
0x40005f2	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      1475	write.c	FUNCTION_23	CALL_11
0x40005f7	        0x48894248	             mov qword [rdx + 0x48], rax	      1475	write.c	FUNCTION_23	CALL_11
0x40005fb	    0xc7475c010000	               mov dword [rdi + 0x5c], 1	      1476	write.c	FUNCTION_23
0x4000602	            0x89d8	                            mov eax, ebx	      1477	write.c	FUNCTION_23
0x4000604	        0x48894710	             mov qword [rdi + 0x10], rax	      1477	write.c	FUNCTION_23
0x4000608	          0x498b07	                    mov rax, qword [r15]	      1483	write.c	FUNCTION_23	FOR_1
0x400060b	          0x4c8b28	                    mov r13, qword [rax]	      1483	write.c	FUNCTION_23	FOR_1
0x400060e	          0x4d85ed	                           test r13, r13	      1483	write.c	FUNCTION_23	FOR_1
0x4000611	     0xf84ea000000	                            je 0x4000701	      1483	write.c	FUNCTION_23	FOR_1
0x4000617	      0x41837d5c01	               cmp dword [r13 + 0x5c], 1	      1492	write.c	FUNCTION_23	FOR_1	CALL_12
0x400061c	            0x751d	                           jne 0x400063b	      1492	write.c	FUNCTION_23	FOR_1	CALL_12
0x400061e	      0x4c897c2448	             mov qword [rsp + 0x48], r15	      1492	write.c	FUNCTION_23	FOR_1	CALL_12
0x4000623	      0x4c89742450	             mov qword [rsp + 0x50], r14	      1492	write.c	FUNCTION_23	FOR_1	CALL_12
0x4000628	      0x4c8b7c2438	            mov r15, qword [rsp + 0x38] 	      1492	write.c	FUNCTION_23	FOR_1	CALL_12
0x400062d	      0x48896c2458	             mov qword [rsp + 0x58], rbp	      1492	write.c	FUNCTION_23	FOR_1	CALL_12
0x4000632	            0xeb1b	                           jmp 0x400064f	      1492	write.c	FUNCTION_23	FOR_1	CALL_12
0x4000634	      0x41837d5c01	               cmp dword [r13 + 0x5c], 1	      1492	write.c	FUNCTION_23	FOR_1	CALL_12
0x4000639	            0x7414	                            je 0x400064f	      1492	write.c	FUNCTION_23	FOR_1	CALL_12
0x400063b	      0xba00000000	                              mov edx, 0	      1492	write.c	FUNCTION_23	FOR_1	CALL_12
0x4000640	      0xbed4050000	                          mov esi, 0x5d4	      1492	write.c	FUNCTION_23	FOR_1	CALL_12
0x4000645	      0xbf00000000	                              mov edi, 0	      1492	write.c	FUNCTION_23	FOR_1	CALL_12
0x400064a	      0xe800000000	                          call 0x400064f	      1492	write.c	FUNCTION_23	FOR_1	CALL_12
0x400064f	        0x498b5510	            mov rdx, qword [r13 + 0x10] 	      1493	write.c	FUNCTION_23	FOR_1	IF_7
0x4000653	          0x4885d2	                           test rdx, rdx	      1493	write.c	FUNCTION_23	FOR_1	IF_7
0x4000656	            0x7423	                            je 0x400067b	      1493	write.c	FUNCTION_23	FOR_1	IF_7
0x4000658	        0x498d757c	                   lea rsi, [r13 + 0x7c]	      1495	write.c	FUNCTION_23	FOR_1	IF_7	CALL_13
0x400065c	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	      1495	write.c	FUNCTION_23	FOR_1	IF_7	CALL_13
0x4000661	      0x488d4c2468	                   lea rcx, [rsp + 0x68]	      1495	write.c	FUNCTION_23	FOR_1	IF_7	CALL_13
0x4000666	          0x4c89ff	                            mov rdi, r15	      1495	write.c	FUNCTION_23	FOR_1	IF_7	CALL_13
0x4000669	      0xe8bbfcffff	                  call sym.compress_frag	      1495	write.c	FUNCTION_23	FOR_1	IF_7	CALL_13
0x400066e	            0x85c0	                           test eax, eax	      1497	write.c	FUNCTION_23	FOR_1	IF_7	IF_8
0x4000670	     0xf8825020000	                            js 0x400089b	      1497	write.c	FUNCTION_23	FOR_1	IF_7	IF_8
0x4000676	            0x4898	                                    cdqe	      1499	write.c	FUNCTION_23	FOR_1	IF_7
0x4000678	          0x4901c4	                            add r12, rax	      1499	write.c	FUNCTION_23	FOR_1	IF_7
0x400067b	        0x498b6d18	            mov rbp, qword [r13 + 0x18] 	      1502	write.c	FUNCTION_23	FOR_1
0x400067f	        0x498b5d20	            mov rbx, qword [r13 + 0x20] 	      1503	write.c	FUNCTION_23	FOR_1
0x4000683	          0x4885db	                           test rbx, rbx	      1504	write.c	FUNCTION_23	FOR_1	CALL_14
0x4000686	            0x7914	                           jns 0x400069c	      1504	write.c	FUNCTION_23	FOR_1	CALL_14
0x4000688	      0xba00000000	                              mov edx, 0	      1504	write.c	FUNCTION_23	FOR_1	CALL_14
0x400068d	      0xbee0050000	                          mov esi, 0x5e0	      1504	write.c	FUNCTION_23	FOR_1	CALL_14
0x4000692	      0xbf00000000	                              mov edi, 0	      1504	write.c	FUNCTION_23	FOR_1	CALL_14
0x4000697	      0xe800000000	                          call 0x400069c	      1504	write.c	FUNCTION_23	FOR_1	CALL_14
0x400069c	          0x4885ed	                           test rbp, rbp	      1505	write.c	FUNCTION_23	FOR_1	IF_9
0x400069f	            0x7444	                            je 0x40006e5	      1505	write.c	FUNCTION_23	FOR_1	IF_9
0x40006a1	          0x4885db	                           test rbx, rbx	      1507	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1
0x40006a4	            0x743f	                            je 0x40006e5	      1507	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1
0x40006a6	        0x4d8d757c	                   lea r14, [r13 + 0x7c]	      1501	write.c	FUNCTION_23	FOR_1
0x40006aa	        0x4d037510	             add r14, qword [r13 + 0x10]	      1509	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1	CALL_15
0x40006ae	      0x4c896c2428	             mov qword [rsp + 0x28], r13	      1509	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1	CALL_15
0x40006b3	      0x4c8b6c2410	            mov r13, qword [rsp + 0x10] 	      1509	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1	CALL_15
0x40006b8	          0x4d89e8	                             mov r8, r13	      1509	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1	CALL_15
0x40006bb	      0x488d4c2468	                   lea rcx, [rsp + 0x68]	      1509	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1	CALL_15
0x40006c0	            0x89ea	                            mov edx, ebp	      1509	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1	CALL_15
0x40006c2	          0x4c89f6	                            mov rsi, r14	      1509	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1	CALL_15
0x40006c5	          0x4c89ff	                            mov rdi, r15	      1509	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1	CALL_15
0x40006c8	      0xe85cfcffff	                  call sym.compress_frag	      1509	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1	CALL_15
0x40006cd	            0x85c0	                           test eax, eax	      1511	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1	IF_10
0x40006cf	     0xf88c6010000	                            js 0x400089b	      1511	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1	IF_10
0x40006d5	            0x4898	                                    cdqe	      1513	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1
0x40006d7	          0x4901c4	                            add r12, rax	      1513	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1
0x40006da	        0x4883eb01	                              sub rbx, 1	      1507	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1
0x40006de	            0x75d8	                           jne 0x40006b8	      1507	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1
0x40006e0	      0x4c8b6c2428	            mov r13, qword [rsp + 0x28] 	      1507	write.c	FUNCTION_23	FOR_1	IF_9	WHILE_1
0x40006e5	        0x4d8b6d38	            mov r13, qword [r13 + 0x38] 	      1485	write.c	FUNCTION_23	FOR_1
0x40006e9	          0x4d85ed	                           test r13, r13	      1483	write.c	FUNCTION_23	FOR_1
0x40006ec	     0xf8542ffffff	                           jne 0x4000634	      1483	write.c	FUNCTION_23	FOR_1
0x40006f2	      0x4c8b7c2448	            mov r15, qword [rsp + 0x48] 	      1483	write.c	FUNCTION_23	FOR_1
0x40006f7	      0x4c8b742450	            mov r14, qword [rsp + 0x50] 	      1483	write.c	FUNCTION_23	FOR_1
0x40006fc	      0x488b6c2458	            mov rbp, qword [rsp + 0x58] 	      1483	write.c	FUNCTION_23	FOR_1
0x4000701	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	      1543	write.c	FUNCTION_23	FOR_2	CALL_24
0x4000706	      0x4c8b6c2438	            mov r13, qword [rsp + 0x38] 	      1543	write.c	FUNCTION_23	FOR_2	CALL_24
0x400070b	      0x48896c2420	             mov qword [rsp + 0x20], rbp	      1543	write.c	FUNCTION_23	FOR_2	CALL_24
0x4000710	      0x488b6c2410	            mov rbp, qword [rsp + 0x10] 	      1543	write.c	FUNCTION_23	FOR_2	CALL_24
0x4000715	        0x488b7350	            mov rsi, qword [rbx + 0x50] 	      1527	write.c	FUNCTION_23	FOR_2	CALL_16
0x4000719	        0x488b4b48	            mov rcx, qword [rbx + 0x48] 	      1527	write.c	FUNCTION_23	FOR_2	CALL_16
0x400071d	          0x4889f2	                            mov rdx, rsi	      1527	write.c	FUNCTION_23	FOR_2	CALL_16
0x4000720	          0x4829ca	                            sub rdx, rcx	      1527	write.c	FUNCTION_23	FOR_2	CALL_16
0x4000723	            0x89d0	                            mov eax, edx	      1527	write.c	FUNCTION_23	FOR_2	CALL_16
0x4000725	        0x89542460	             mov dword [rsp + 0x60], edx	      1527	write.c	FUNCTION_23	FOR_2	CALL_16
0x4000729	            0x85d2	                           test edx, edx	      1528	write.c	FUNCTION_23	FOR_2	IF_11
0x400072b	     0xf8f8c000000	                            jg 0x40007bd	      1528	write.c	FUNCTION_23	FOR_2	IF_11
0x4000731	        0x483b4b40	            cmp rcx, qword [rbx + 0x40] 	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4000735	            0x7507	                           jne 0x400073e	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4000737	    0x808b80000000	                 or byte [rbx + 0x80], 2	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x400073e	        0x488b4360	            mov rax, qword [rbx + 0x60] 	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4000742	          0x4801c1	                            add rcx, rax	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4000745	          0x48f7d0	                                 not rax	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4000748	          0x4821c1	                            and rcx, rax	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x400074b	        0x48894b48	             mov qword [rbx + 0x48], rcx	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x400074f	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4000753	          0x4829c1	                            sub rcx, rax	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4000756	          0x4889f7	                            mov rdi, rsi	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4000759	          0x4829c7	                            sub rdi, rax	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x400075c	          0x4839f9	                            cmp rcx, rdi	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x400075f	            0x7604	                           jbe 0x4000765	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4000761	        0x48897348	             mov qword [rbx + 0x48], rsi	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4000765	        0x488b4348	            mov rax, qword [rbx + 0x48] 	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x4000769	        0x48894340	             mov qword [rbx + 0x40], rax	      1532	write.c	FUNCTION_23	FOR_2	IF_11	CALL_17
0x400076d	          0x4889ef	                            mov rdi, rbp	      1533	write.c	FUNCTION_23	FOR_2	IF_11	CALL_18
0x4000770	      0xe800000000	                          call 0x4000775	      1533	write.c	FUNCTION_23	FOR_2	IF_11	CALL_18
0x4000775	    0xc7405c010000	               mov dword [rax + 0x5c], 1	      1534	write.c	FUNCTION_23	FOR_2	IF_11
0x400077c	      0x488b542468	            mov rdx, qword [rsp + 0x68] 	      1535	write.c	FUNCTION_23	FOR_2	IF_11
0x4000781	        0x48894238	             mov qword [rdx + 0x38], rax	      1535	write.c	FUNCTION_23	FOR_2	IF_11
0x4000785	      0x4889442468	             mov qword [rsp + 0x68], rax	      1536	write.c	FUNCTION_23	FOR_2	IF_11
0x400078a	        0x488b5350	            mov rdx, qword [rbx + 0x50] 	      1537	write.c	FUNCTION_23	FOR_2	IF_11	CALL_19
0x400078e	        0x482b5348	             sub rdx, qword [rbx + 0x48]	      1537	write.c	FUNCTION_23	FOR_2	IF_11	CALL_19
0x4000792	            0x89d0	                            mov eax, edx	      1537	write.c	FUNCTION_23	FOR_2	IF_11	CALL_19
0x4000794	        0x89542460	             mov dword [rsp + 0x60], edx	      1537	write.c	FUNCTION_23	FOR_2	IF_11	CALL_19
0x4000798	            0x85d2	                           test edx, edx	      1539	write.c	FUNCTION_23	FOR_2	IF_12
0x400079a	            0x7f21	                            jg 0x40007bd	      1539	write.c	FUNCTION_23	FOR_2	IF_12
0x400079c	      0xba05000000	                              mov edx, 5	      1540	write.c	FUNCTION_23	FOR_2	CALL_21
0x40007a1	      0xbe00000000	                              mov esi, 0	      1540	write.c	FUNCTION_23	FOR_2	CALL_21
0x40007a6	      0xbf00000000	                              mov edi, 0	      1540	write.c	FUNCTION_23	FOR_2	CALL_21
0x40007ab	      0xe800000000	                          call 0x40007b0	      1540	write.c	FUNCTION_23	FOR_2	CALL_21
0x40007b0	          0x4889c7	                            mov rdi, rax	      1540	write.c	FUNCTION_23	FOR_2	CALL_21
0x40007b3	      0xb800000000	                              mov eax, 0	      1540	write.c	FUNCTION_23	FOR_2	CALL_21
0x40007b8	      0xe800000000	                          call 0x40007bd	      1540	write.c	FUNCTION_23	FOR_2	CALL_21
0x40007bd	        0x488b5348	            mov rdx, qword [rbx + 0x48] 	      1541	write.c	FUNCTION_23	FOR_2	CALL_22
0x40007c1	      0x4889542470	             mov qword [rsp + 0x70], rdx	      1541	write.c	FUNCTION_23	FOR_2	CALL_22
0x40007c6	            0x4898	                                    cdqe	      1542	write.c	FUNCTION_23	FOR_2	CALL_23
0x40007c8	          0x4801d0	                            add rax, rdx	      1542	write.c	FUNCTION_23	FOR_2	CALL_23
0x40007cb	        0x48894348	             mov qword [rbx + 0x48], rax	      1542	write.c	FUNCTION_23	FOR_2	CALL_23
0x40007cf	      0x488d4c2464	                   lea rcx, [rsp + 0x64]	      1543	write.c	FUNCTION_23	FOR_2	CALL_24
0x40007d4	      0x488d542460	                   lea rdx, [rsp + 0x60]	      1543	write.c	FUNCTION_23	FOR_2	CALL_24
0x40007d9	      0x488d742470	                   lea rsi, [rsp + 0x70]	      1543	write.c	FUNCTION_23	FOR_2	CALL_24
0x40007de	          0x4c89ef	                            mov rdi, r13	      1543	write.c	FUNCTION_23	FOR_2	CALL_24
0x40007e1	      0xe800000000	                          call 0x40007e6	      1543	write.c	FUNCTION_23	FOR_2	CALL_24
0x40007e6	            0x85c0	                           test eax, eax	      1544	write.c	FUNCTION_23	FOR_2	IF_13
0x40007e8	     0xf88ad000000	                            js 0x400089b	      1544	write.c	FUNCTION_23	FOR_2	IF_13
0x40007ee	      0x488b4c2468	            mov rcx, qword [rsp + 0x68] 	      1547	write.c	FUNCTION_23	FOR_2
0x40007f3	      0x4863542464	         movsxd rdx, dword [rsp + 0x64] 	      1547	write.c	FUNCTION_23	FOR_2
0x40007f8	        0x48015110	            add qword [rcx + 0x10], rdx 	      1547	write.c	FUNCTION_23	FOR_2
0x40007fc	          0x4901d4	                            add r12, rdx	      1548	write.c	FUNCTION_23	FOR_2
0x40007ff	        0x8b542460	            mov edx, dword [rsp + 0x60] 	      1551	write.c	FUNCTION_23	FOR_2	IF_14
0x4000803	            0x85d2	                           test edx, edx	      1551	write.c	FUNCTION_23	FOR_2	IF_14
0x4000805	            0x7e09	                           jle 0x4000810	      1551	write.c	FUNCTION_23	FOR_2	IF_14
0x4000807	            0xf7da	                                 neg edx	      1552	write.c	FUNCTION_23	FOR_2	CALL_25
0x4000809	          0x4863d2	                         movsxd rdx, edx	      1552	write.c	FUNCTION_23	FOR_2	CALL_25
0x400080c	        0x48015348	            add qword [rbx + 0x48], rdx 	      1552	write.c	FUNCTION_23	FOR_2	CALL_25
0x4000810	            0x85c0	                           test eax, eax	      1554	write.c	FUNCTION_23	FOR_2	IF_15
0x4000812	     0xf85fdfeffff	                           jne 0x4000715	      1554	write.c	FUNCTION_23	FOR_2	IF_15
0x4000818	      0x488b6c2420	            mov rbp, qword [rsp + 0x20] 	      1554	write.c	FUNCTION_23	FOR_2	IF_15
0x400081d	          0x4d39e6	                            cmp r14, r12	      1560	write.c	FUNCTION_23	IF_16
0x4000820	            0x7679	                           jbe 0x400089b	      1560	write.c	FUNCTION_23	IF_16
0x4000822	          0x498b07	                    mov rax, qword [r15]	      1564	write.c	FUNCTION_23
0x4000825	      0x488b5c2430	            mov rbx, qword [rsp + 0x30] 	      1564	write.c	FUNCTION_23
0x400082a	          0x488918	                    mov qword [rax], rbx	      1564	write.c	FUNCTION_23
0x400082d	          0x498b07	                    mov rax, qword [r15]	      1565	write.c	FUNCTION_23
0x4000830	      0x488b542468	            mov rdx, qword [rsp + 0x68] 	      1565	write.c	FUNCTION_23
0x4000835	        0x48895008	                mov qword [rax + 8], rdx	      1565	write.c	FUNCTION_23
0x4000839	        0x488d737c	                   lea rsi, [rbx + 0x7c]	      1478	write.c	FUNCTION_23
0x400083d	          0x4889ea	                            mov rdx, rbp	      1568	write.c	FUNCTION_23	CALL_26
0x4000840	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      1568	write.c	FUNCTION_23	CALL_26
0x4000845	          0x4889df	                            mov rdi, rbx	      1568	write.c	FUNCTION_23	CALL_26
0x4000848	      0xe800000000	                          call 0x400084d	      1568	write.c	FUNCTION_23	CALL_26
0x400084d	          0x4c89e2	                            mov rdx, r12	      1569	write.c	FUNCTION_23	CALL_27
0x4000850	          0x4889ee	                            mov rsi, rbp	      1569	write.c	FUNCTION_23	CALL_27
0x4000853	          0x4889df	                            mov rdi, rbx	      1569	write.c	FUNCTION_23	CALL_27
0x4000856	      0xe800000000	                          call 0x400085b	      1569	write.c	FUNCTION_23	CALL_27
0x400085b	            0x85c0	                           test eax, eax	      1570	write.c	FUNCTION_23	CALL_28
0x400085d	            0x7514	                           jne 0x4000873	      1570	write.c	FUNCTION_23	CALL_28
0x400085f	      0xba00000000	                              mov edx, 0	      1570	write.c	FUNCTION_23	CALL_28
0x4000864	      0xbe22060000	                          mov esi, 0x622	      1570	write.c	FUNCTION_23	CALL_28
0x4000869	      0xbf00000000	                              mov edi, 0	      1570	write.c	FUNCTION_23	CALL_28
0x400086e	      0xe800000000	                          call 0x4000873	      1570	write.c	FUNCTION_23	CALL_28
0x4000873	      0x837c244400	               cmp dword [rsp + 0x44], 0	      1571	write.c	FUNCTION_23	IF_17
0x4000878	            0x7521	                           jne 0x400089b	      1571	write.c	FUNCTION_23	IF_17
0x400087a	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      1573	write.c	FUNCTION_23	IF_17	CALL_29
0x400087f	        0x4883c601	                              add rsi, 1	      1573	write.c	FUNCTION_23	IF_17	CALL_29
0x4000883	      0xba00000000	                              mov edx, 0	      1573	write.c	FUNCTION_23	IF_17	CALL_29
0x4000888	      0xbf00000000	                              mov edi, 0	      1573	write.c	FUNCTION_23	IF_17	CALL_29
0x400088d	      0xb800000000	                              mov eax, 0	      1573	write.c	FUNCTION_23	IF_17	CALL_29
0x4000892	      0xe800000000	                          call 0x4000897	      1573	write.c	FUNCTION_23	IF_17	CALL_29
0x4000897	        0x48894500	                    mov qword [rbp], rax	      1574	write.c	FUNCTION_23	IF_17
0x400089b	      0x488b442478	            mov rax, qword [rsp + 0x78] 	      1576	write.c	FUNCTION_23
0x40008a0	    0x644833042528	                xor rax, qword fs:[0x28]	      1576	write.c	FUNCTION_23
0x40008a9	            0x7405	                            je 0x40008b0	      1576	write.c	FUNCTION_23
0x40008ab	      0xe800000000	                          call 0x40008b0	      1576	write.c	FUNCTION_23
0x40008b0	    0x4881c4880000	                           add rsp, 0x88	      1576	write.c	FUNCTION_23
0x40008b7	              0x5b	                                 pop rbx	      1576	write.c	FUNCTION_23
0x40008b8	              0x5d	                                 pop rbp	      1576	write.c	FUNCTION_23
0x40008b9	            0x415c	                                 pop r12	      1576	write.c	FUNCTION_23
0x40008bb	            0x415d	                                 pop r13	      1576	write.c	FUNCTION_23
0x40008bd	            0x415e	                                 pop r14	      1576	write.c	FUNCTION_23
0x40008bf	            0x415f	                                 pop r15	      1576	write.c	FUNCTION_23
0x40008c1	              0xc3	                                     ret	      1576	write.c	FUNCTION_23
write_print_statistics	CALL,0:FOR,0:SWITCH,0:WHILE,0:DO,0:functions,0:IF,0:ELSE,0	8
0x40037a8	        0x4883ec08	                              sub rsp, 8	      3128	write.c	FUNCTION_39
0x40037ac	    0x8b0d00000000	            mov ecx, dword [0x040037b2] 	        97	stdio2.h	CALL_12
0x40037b2	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_12
0x40037b7	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_12
0x40037bc	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_12
0x40037c1	      0xe800000000	                          call 0x40037c6	        97	stdio2.h	CALL_12
0x40037c6	        0x4883c408	                              add rsp, 8	      3130	write.c	FUNCTION_39
0x40037ca	              0xc3	                                     ret	      3130	write.c	FUNCTION_39
write_relocs	CALL,14:FOR,5:SWITCH,0:WHILE,4:DO,0:functions,0:IF,12:ELSE,1	170
0x4000aae	            0x4157	                                push r15	      1221	write.c	FUNCTION_21
0x4000ab0	            0x4156	                                push r14	      1221	write.c	FUNCTION_21
0x4000ab2	            0x4155	                                push r13	      1221	write.c	FUNCTION_21
0x4000ab4	            0x4154	                                push r12	      1221	write.c	FUNCTION_21
0x4000ab6	              0x55	                                push rbp	      1221	write.c	FUNCTION_21
0x4000ab7	              0x53	                                push rbx	      1221	write.c	FUNCTION_21
0x4000ab8	        0x4883ec38	                           sub rsp, 0x38	      1221	write.c	FUNCTION_21
0x4000abc	    0x488b86a80000	            mov rax, qword [rsi + 0xa8] 	      1222	write.c	FUNCTION_21	CALL_1
0x4000ac3	      0x4889442410	             mov qword [rsp + 0x10], rax	      1222	write.c	FUNCTION_21	CALL_1
0x4000ac8	          0x4885c0	                           test rax, rax	      1231	write.c	FUNCTION_21	IF_1
0x4000acb	     0xf8442020000	                            je 0x4000d13	      1231	write.c	FUNCTION_21	IF_1
0x4000ad1	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1235	write.c	FUNCTION_21	FOR_1
0x4000ad5	          0x4885d2	                           test rdx, rdx	      1235	write.c	FUNCTION_21	FOR_1
0x4000ad8	            0x741b	                            je 0x4000af5	      1235	write.c	FUNCTION_21	FOR_1
0x4000ada	      0xb900000000	                              mov ecx, 0	      1235	write.c	FUNCTION_21	FOR_1
0x4000adf	           0xfb602	                   movzx eax, byte [rdx]	      1236	write.c	FUNCTION_21	FOR_1	IF_2
0x4000ae2	          0x83e020	                           and eax, 0x20	      1236	write.c	FUNCTION_21	FOR_1	IF_2
0x4000ae5	            0x3c01	                               cmp al, 1	      1237	write.c	FUNCTION_21	FOR_1	IF_2
0x4000ae7	          0x83d100	                              adc ecx, 0	      1237	write.c	FUNCTION_21	FOR_1	IF_2
0x4000aea	        0x488b5240	            mov rdx, qword [rdx + 0x40] 	      1235	write.c	FUNCTION_21	FOR_1
0x4000aee	          0x4885d2	                           test rdx, rdx	      1235	write.c	FUNCTION_21	FOR_1
0x4000af1	            0x75ec	                           jne 0x4000adf	      1235	write.c	FUNCTION_21	FOR_1
0x4000af3	            0xeb05	                           jmp 0x4000afa	      1235	write.c	FUNCTION_21	FOR_1
0x4000af5	      0xb900000000	                              mov ecx, 0	      1234	write.c	FUNCTION_21
0x4000afa	      0xba00000000	                              mov edx, 0	      1252	write.c	FUNCTION_21	WHILE_1	IF_3
0x4000aff	      0xbb00000000	                              mov ebx, 0	      1252	write.c	FUNCTION_21	WHILE_1	IF_3
0x4000b04	            0xeb1a	                           jmp 0x4000b20	      1252	write.c	FUNCTION_21	WHILE_1	IF_3
0x4000b06	        0x483b7008	                cmp rsi, qword [rax + 8]	      1248	write.c	FUNCTION_21	WHILE_1	IF_3
0x4000b0a	            0x7511	                           jne 0x4000b1d	      1248	write.c	FUNCTION_21	WHILE_1	IF_3
0x4000b0c	          0x4c8b00	                     mov r8, qword [rax]	      1250	write.c	FUNCTION_21	WHILE_1	IF_3
0x4000b0f	          0x4c8902	                     mov qword [rdx], r8	      1250	write.c	FUNCTION_21	WHILE_1	IF_3
0x4000b12	          0x488918	                    mov qword [rax], rbx	      1251	write.c	FUNCTION_21	WHILE_1	IF_3
0x4000b15	          0x83c101	                              add ecx, 1	      1253	write.c	FUNCTION_21	WHILE_1	IF_3
0x4000b18	          0x4889c3	                            mov rbx, rax	      1252	write.c	FUNCTION_21	WHILE_1	IF_3
0x4000b1b	            0xeb03	                           jmp 0x4000b20	      1252	write.c	FUNCTION_21	WHILE_1	IF_3
0x4000b1d	          0x4889c2	                            mov rdx, rax	      1256	write.c	FUNCTION_21	WHILE_1	ELSE_1
0x4000b20	          0x488b02	                    mov rax, qword [rdx]	      1246	write.c	FUNCTION_21	WHILE_1
0x4000b23	          0x4885c0	                           test rax, rax	      1246	write.c	FUNCTION_21	WHILE_1
0x4000b26	            0x75de	                           jne 0x4000b06	      1246	write.c	FUNCTION_21	WHILE_1
0x4000b28	      0x4889742418	             mov qword [rsp + 0x18], rsi	      1246	write.c	FUNCTION_21	WHILE_1
0x4000b2d	      0x48897c2428	             mov qword [rsp + 0x28], rdi	      1246	write.c	FUNCTION_21	WHILE_1
0x4000b32	            0x89cf	                            mov edi, ecx	      1259	write.c	FUNCTION_21	CALL_2
0x4000b34	      0xbe08000000	                              mov esi, 8	      1259	write.c	FUNCTION_21	CALL_2
0x4000b39	      0xe800000000	                          call 0x4000b3e	      1259	write.c	FUNCTION_21	CALL_2
0x4000b3e	      0x4889442420	             mov qword [rsp + 0x20], rax	      1259	write.c	FUNCTION_21	CALL_2
0x4000b43	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1264	write.c	FUNCTION_21	FOR_2
0x4000b48	        0x4c8b6810	            mov r13, qword [rax + 0x10] 	      1264	write.c	FUNCTION_21	FOR_2
0x4000b4c	          0x4d85ed	                           test r13, r13	      1264	write.c	FUNCTION_21	FOR_2
0x4000b4f	     0xf84a7010000	                            je 0x4000cfc	      1264	write.c	FUNCTION_21	FOR_2
0x4000b55	    0x48c744240800	                  mov qword [rsp + 8], 0	      1264	write.c	FUNCTION_21	FOR_2
0x4000b5e	      0xbd00000000	                              mov ebp, 0	      1264	write.c	FUNCTION_21	FOR_2
0x4000b63	      0x41f6450020	                   test byte [r13], 0x20	      1275	write.c	FUNCTION_21	FOR_2	IF_4
0x4000b68	     0xf85eb000000	                           jne 0x4000c59	      1275	write.c	FUNCTION_21	FOR_2	IF_4
0x4000b6e	      0x410fb64502	               movzx eax, byte [r13 + 2]	      1283	write.c	FUNCTION_21	FOR_2	IF_6
0x4000b73	        0x49034510	             add rax, qword [r13 + 0x10]	      1283	write.c	FUNCTION_21	FOR_2	IF_6
0x4000b77	        0x498b5508	                mov rdx, qword [r13 + 8]	      1283	write.c	FUNCTION_21	FOR_2	IF_6
0x4000b7b	        0x483b4210	            cmp rax, qword [rdx + 0x10] 	      1283	write.c	FUNCTION_21	FOR_2	IF_6
0x4000b7f	            0x7e29	                           jle 0x4000baa	      1283	write.c	FUNCTION_21	FOR_2	IF_6
0x4000b81	      0xba05000000	                              mov edx, 5	      1285	write.c	FUNCTION_21	FOR_2	CALL_4
0x4000b86	      0xbe00000000	                              mov esi, 0	      1285	write.c	FUNCTION_21	FOR_2	CALL_4
0x4000b8b	      0xbf00000000	                              mov edi, 0	      1285	write.c	FUNCTION_21	FOR_2	CALL_4
0x4000b90	      0xe800000000	                          call 0x4000b95	      1285	write.c	FUNCTION_21	FOR_2	CALL_4
0x4000b95	        0x418b7568	            mov esi, dword [r13 + 0x68] 	      1284	write.c	FUNCTION_21	FOR_2	IF_6	CALL_3
0x4000b99	        0x498b7d60	            mov rdi, qword [r13 + 0x60] 	      1284	write.c	FUNCTION_21	FOR_2	IF_6	CALL_3
0x4000b9d	          0x4889c2	                            mov rdx, rax	      1284	write.c	FUNCTION_21	FOR_2	IF_6	CALL_3
0x4000ba0	      0xb800000000	                              mov eax, 0	      1284	write.c	FUNCTION_21	FOR_2	IF_6	CALL_3
0x4000ba5	      0xe800000000	                          call 0x4000baa	      1284	write.c	FUNCTION_21	FOR_2	IF_6	CALL_3
0x4000baa	          0x4c89ee	                            mov rsi, r13	      1288	write.c	FUNCTION_21	FOR_2	CALL_5
0x4000bad	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      1288	write.c	FUNCTION_21	FOR_2	CALL_5
0x4000bb2	      0xe800000000	                          call 0x4000bb7	      1288	write.c	FUNCTION_21	FOR_2	CALL_5
0x4000bb7	          0x4989c6	                            mov r14, rax	      1288	write.c	FUNCTION_21	FOR_2	CALL_5
0x4000bba	          0x4885c0	                           test rax, rax	      1293	write.c	FUNCTION_21	FOR_2	WHILE_2
0x4000bbd	     0xf8496000000	                            je 0x4000c59	      1293	write.c	FUNCTION_21	FOR_2	WHILE_2
0x4000bc3	          0x4885db	                           test rbx, rbx	      1295	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3
0x4000bc6	            0x7466	                            je 0x4000c2e	      1295	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3
0x4000bc8	        0x488b4008	                mov rax, qword [rax + 8]	      1295	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3
0x4000bcc	        0x48394320	            cmp qword [rbx + 0x20], rax 	      1295	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3
0x4000bd0	            0x735c	                           jae 0x4000c2e	      1295	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3
0x4000bd2	          0x4889da	                            mov rdx, rbx	      1297	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	CALL_7
0x4000bd5	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      1297	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	CALL_7
0x4000bda	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1297	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	CALL_7
0x4000bdf	      0xe8defcffff	             call sym.get_frag_for_reloc	      1297	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	CALL_7
0x4000be4	          0x4989c4	                            mov r12, rax	      1297	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	CALL_7
0x4000be7	          0x4885c0	                           test rax, rax	      1298	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	IF_7
0x4000bea	            0x7430	                            je 0x4000c1c	      1298	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	IF_7
0x4000bec	        0x448d7d01	                     lea r15d, [rbp + 1]	      1301	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	IF_7
0x4000bf0	        0x488d7318	                   lea rsi, [rbx + 0x18]	      1301	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	IF_7
0x4000bf4	            0x89ed	                            mov ebp, ebp	      1301	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	IF_7
0x4000bf6	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1301	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	IF_7
0x4000bfb	        0x488934e8	            mov qword [rax + rbp*8], rsi	      1301	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	IF_7
0x4000bff	        0x488b4b38	            mov rcx, qword [rbx + 0x38] 	      1302	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	IF_7	CALL_8
0x4000c03	        0x448b4340	            mov r8d, dword [rbx + 0x40] 	      1302	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	IF_7	CALL_8
0x4000c07	          0x4c89e2	                            mov rdx, r12	      1302	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	IF_7	CALL_8
0x4000c0a	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      1302	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	IF_7	CALL_8
0x4000c0f	      0xe854fdffff	                  call sym.install_reloc	      1302	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	IF_7	CALL_8
0x4000c14	      0x4c89642408	                mov qword [rsp + 8], r12	      1300	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	IF_7
0x4000c19	          0x4489fd	                           mov ebp, r15d	      1301	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3	IF_7
0x4000c1c	          0x488b1b	                    mov rbx, qword [rbx]	      1304	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3
0x4000c1f	          0x4885db	                           test rbx, rbx	      1295	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3
0x4000c22	            0x740a	                            je 0x4000c2e	      1295	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3
0x4000c24	        0x498b4608	                mov rax, qword [r14 + 8]	      1295	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3
0x4000c28	        0x48394320	            cmp qword [rbx + 0x20], rax 	      1295	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3
0x4000c2c	            0x72a4	                            jb 0x4000bd2	      1295	write.c	FUNCTION_21	FOR_2	WHILE_2	WHILE_3
0x4000c2e	        0x448d6501	                     lea r12d, [rbp + 1]	      1306	write.c	FUNCTION_21	FOR_2	WHILE_2
0x4000c32	            0x89ed	                            mov ebp, ebp	      1306	write.c	FUNCTION_21	FOR_2	WHILE_2
0x4000c34	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1306	write.c	FUNCTION_21	FOR_2	WHILE_2
0x4000c39	        0x4c8934e8	            mov qword [rax + rbp*8], r14	      1306	write.c	FUNCTION_21	FOR_2	WHILE_2
0x4000c3d	        0x498b4d60	            mov rcx, qword [r13 + 0x60] 	      1307	write.c	FUNCTION_21	FOR_2	WHILE_2	CALL_9
0x4000c41	        0x498b5508	                mov rdx, qword [r13 + 8]	      1307	write.c	FUNCTION_21	FOR_2	WHILE_2	CALL_9
0x4000c45	        0x458b4568	            mov r8d, dword [r13 + 0x68] 	      1307	write.c	FUNCTION_21	FOR_2	WHILE_2	CALL_9
0x4000c49	          0x4c89f6	                            mov rsi, r14	      1307	write.c	FUNCTION_21	FOR_2	WHILE_2	CALL_9
0x4000c4c	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      1307	write.c	FUNCTION_21	FOR_2	WHILE_2	CALL_9
0x4000c51	      0xe812fdffff	                  call sym.install_reloc	      1307	write.c	FUNCTION_21	FOR_2	WHILE_2	CALL_9
0x4000c56	          0x4489e5	                           mov ebp, r12d	      1306	write.c	FUNCTION_21	FOR_2	WHILE_2
0x4000c59	        0x4d8b6d40	            mov r13, qword [r13 + 0x40] 	      1264	write.c	FUNCTION_21	FOR_2
0x4000c5d	          0x4d85ed	                           test r13, r13	      1264	write.c	FUNCTION_21	FOR_2
0x4000c60	     0xf85fdfeffff	                           jne 0x4000b63	      1264	write.c	FUNCTION_21	FOR_2
0x4000c66	          0x4885db	                           test rbx, rbx	      1317	write.c	FUNCTION_21	WHILE_4
0x4000c69	            0x7452	                            je 0x4000cbd	      1317	write.c	FUNCTION_21	WHILE_4
0x4000c6b	          0x4889da	                            mov rdx, rbx	      1319	write.c	FUNCTION_21	WHILE_4	CALL_10
0x4000c6e	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      1319	write.c	FUNCTION_21	WHILE_4	CALL_10
0x4000c73	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1319	write.c	FUNCTION_21	WHILE_4	CALL_10
0x4000c78	      0xe845fcffff	             call sym.get_frag_for_reloc	      1319	write.c	FUNCTION_21	WHILE_4	CALL_10
0x4000c7d	          0x4989c4	                            mov r12, rax	      1319	write.c	FUNCTION_21	WHILE_4	CALL_10
0x4000c80	          0x4885c0	                           test rax, rax	      1320	write.c	FUNCTION_21	WHILE_4	IF_8
0x4000c83	            0x7430	                            je 0x4000cb5	      1320	write.c	FUNCTION_21	WHILE_4	IF_8
0x4000c85	        0x448d6d01	                     lea r13d, [rbp + 1]	      1323	write.c	FUNCTION_21	WHILE_4	IF_8
0x4000c89	        0x488d7318	                   lea rsi, [rbx + 0x18]	      1323	write.c	FUNCTION_21	WHILE_4	IF_8
0x4000c8d	            0x89ed	                            mov ebp, ebp	      1323	write.c	FUNCTION_21	WHILE_4	IF_8
0x4000c8f	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1323	write.c	FUNCTION_21	WHILE_4	IF_8
0x4000c94	        0x488934e8	            mov qword [rax + rbp*8], rsi	      1323	write.c	FUNCTION_21	WHILE_4	IF_8
0x4000c98	        0x488b4b38	            mov rcx, qword [rbx + 0x38] 	      1324	write.c	FUNCTION_21	WHILE_4	IF_8	CALL_11
0x4000c9c	        0x448b4340	            mov r8d, dword [rbx + 0x40] 	      1324	write.c	FUNCTION_21	WHILE_4	IF_8	CALL_11
0x4000ca0	          0x4c89e2	                            mov rdx, r12	      1324	write.c	FUNCTION_21	WHILE_4	IF_8	CALL_11
0x4000ca3	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      1324	write.c	FUNCTION_21	WHILE_4	IF_8	CALL_11
0x4000ca8	      0xe8bbfcffff	                  call sym.install_reloc	      1324	write.c	FUNCTION_21	WHILE_4	IF_8	CALL_11
0x4000cad	      0x4c89642408	                mov qword [rsp + 8], r12	      1322	write.c	FUNCTION_21	WHILE_4	IF_8
0x4000cb2	          0x4489ed	                           mov ebp, r13d	      1323	write.c	FUNCTION_21	WHILE_4	IF_8
0x4000cb5	          0x488b1b	                    mov rbx, qword [rbx]	      1326	write.c	FUNCTION_21	WHILE_4
0x4000cb8	          0x4885db	                           test rbx, rbx	      1317	write.c	FUNCTION_21	WHILE_4
0x4000cbb	            0x75ae	                           jne 0x4000c6b	      1317	write.c	FUNCTION_21	WHILE_4
0x4000cbd	            0x85ed	                           test ebp, ebp	      1347	write.c	FUNCTION_21	IF_12
0x4000cbf	            0x7452	                            je 0x4000d13	      1347	write.c	FUNCTION_21	IF_12
0x4000cc1	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	      1349	write.c	FUNCTION_21	IF_12
0x4000cc6	          0x8b7b20	            mov edi, dword [rbx + 0x20] 	      1349	write.c	FUNCTION_21	IF_12
0x4000cc9	        0x897c2408	                mov dword [rsp + 8], edi	      1349	write.c	FUNCTION_21	IF_12
0x4000ccd	            0x89fa	                            mov edx, edi	      1351	write.c	FUNCTION_21	IF_12	CALL_13
0x4000ccf	          0x83ca04	                               or edx, 4	      1351	write.c	FUNCTION_21	IF_12	CALL_13
0x4000cd2	          0x4889de	                            mov rsi, rbx	      1351	write.c	FUNCTION_21	IF_12	CALL_13
0x4000cd5	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      1351	write.c	FUNCTION_21	IF_12	CALL_13
0x4000cda	      0xe800000000	                          call 0x4000cdf	      1351	write.c	FUNCTION_21	IF_12	CALL_13
0x4000cdf	    0x488b3d000000	            mov rdi, qword [0x04000ce6] 	      1352	write.c	FUNCTION_21	IF_12
0x4000ce6	        0x488b4708	                mov rax, qword [rdi + 8]	      1352	write.c	FUNCTION_21	IF_12
0x4000cea	            0x89e9	                            mov ecx, ebp	      1352	write.c	FUNCTION_21	IF_12
0x4000cec	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      1352	write.c	FUNCTION_21	IF_12
0x4000cf1	          0x4889de	                            mov rsi, rbx	      1352	write.c	FUNCTION_21	IF_12
0x4000cf4	    0xff9078020000	                call qword [rax + 0x278]	      1352	write.c	FUNCTION_21	IF_12
0x4000cfa	            0xeb17	                           jmp 0x4000d13	      1352	write.c	FUNCTION_21	IF_12
0x4000cfc	    0x48c744240800	                  mov qword [rsp + 8], 0	      1263	write.c	FUNCTION_21
0x4000d05	      0xbd00000000	                              mov ebp, 0	      1261	write.c	FUNCTION_21
0x4000d0a	          0x4885db	                           test rbx, rbx	      1317	write.c	FUNCTION_21	WHILE_4
0x4000d0d	     0xf8558ffffff	                           jne 0x4000c6b	      1317	write.c	FUNCTION_21	WHILE_4
0x4000d13	        0x4883c438	                           add rsp, 0x38	      1374	write.c	FUNCTION_21
0x4000d17	              0x5b	                                 pop rbx	      1374	write.c	FUNCTION_21
0x4000d18	              0x5d	                                 pop rbp	      1374	write.c	FUNCTION_21
0x4000d19	            0x415c	                                 pop r12	      1374	write.c	FUNCTION_21
0x4000d1b	            0x415d	                                 pop r13	      1374	write.c	FUNCTION_21
0x4000d1d	            0x415e	                                 pop r14	      1374	write.c	FUNCTION_21
0x4000d1f	            0x415f	                                 pop r15	      1374	write.c	FUNCTION_21
0x4000d21	              0xc3	                                     ret	      1374	write.c	FUNCTION_21
get_recorded_alignment	CALL,0:FOR,0:SWITCH,0:WHILE,0:DO,0:functions,0:IF,1:ELSE,0	6
0x4002043	    0x4881ff000000	                              cmp rdi, 0	       371	write.c	FUNCTION_8	IF_1
0x400204a	            0x7404	                            je 0x4002050	       371	write.c	FUNCTION_8	IF_1
0x400204c	          0x8b4770	            mov eax, dword [rdi + 0x70] 	       374	write.c	FUNCTION_8
0x400204f	              0xc3	                                     ret	       374	write.c	FUNCTION_8
0x4002050	      0xb800000000	                              mov eax, 0	       372	write.c	FUNCTION_8	IF_1
0x4002055	              0xc3	                                     ret	       375	write.c	FUNCTION_8
relax_frag	CALL,8:FOR,2:SWITCH,0:WHILE,0:DO,0:functions,0:IF,8:ELSE,4	102
0x4002056	            0x4157	                                push r15	      2488	write.c	FUNCTION_34
0x4002058	            0x4156	                                push r14	      2488	write.c	FUNCTION_34
0x400205a	            0x4155	                                push r13	      2488	write.c	FUNCTION_34
0x400205c	            0x4154	                                push r12	      2488	write.c	FUNCTION_34
0x400205e	              0x55	                                push rbp	      2488	write.c	FUNCTION_34
0x400205f	              0x53	                                push rbx	      2488	write.c	FUNCTION_34
0x4002060	        0x4883ec28	                           sub rsp, 0x28	      2488	write.c	FUNCTION_34
0x4002064	      0x48897c2418	             mov qword [rsp + 0x18], rdi	      2488	write.c	FUNCTION_34
0x4002069	          0x4989f4	                            mov r12, rsi	      2488	write.c	FUNCTION_34
0x400206c	      0x4889542410	             mov qword [rsp + 0x10], rdx	      2488	write.c	FUNCTION_34
0x4002071	        0x488b5e20	            mov rbx, qword [rsi + 0x20] 	      2500	write.c	FUNCTION_34
0x4002075	          0x4c8b3e	                    mov r15, qword [rsi]	      2501	write.c	FUNCTION_34
0x4002078	          0x8b6e60	            mov ebp, dword [rsi + 0x60] 	      2503	write.c	FUNCTION_34
0x400207b	            0x89e8	                            mov eax, ebp	      2504	write.c	FUNCTION_34
0x400207d	        0x488d0440	                  lea rax, [rax + rax*2]	      2504	write.c	FUNCTION_34
0x4002081	    0x4c8d34c50000	                        lea r14, [rax*8]	      2504	write.c	FUNCTION_34
0x4002089	        0x4c8b6e28	            mov r13, qword [rsi + 0x28] 	      2505	write.c	FUNCTION_34
0x400208d	          0x4d85ed	                           test r13, r13	      2507	write.c	FUNCTION_34	IF_1
0x4002090	     0xf84a2000000	                            je 0x4002138	      2507	write.c	FUNCTION_34	IF_1
0x4002096	          0x4c89ef	                            mov rdi, r13	      2511	write.c	FUNCTION_34	IF_1	CALL_1
0x4002099	      0xe800000000	                          call 0x400209e	      2511	write.c	FUNCTION_34	IF_1	CALL_1
0x400209e	      0x4889442408	                mov qword [rsp + 8], rax	      2511	write.c	FUNCTION_34	IF_1	CALL_1
0x40020a3	          0x4c89ef	                            mov rdi, r13	      2516	write.c	FUNCTION_34	IF_1	CALL_4
0x40020a6	      0xe800000000	                          call 0x40020ab	      2516	write.c	FUNCTION_34	IF_1	CALL_4
0x40020ab	    0x48817c240800	                  cmp qword [rsp + 8], 0	      2516	write.c	FUNCTION_34	IF_1	CALL_4
0x40020b4	            0x741c	                            je 0x40020d2	      2516	write.c	FUNCTION_34	IF_1	CALL_4
0x40020b6	    0x483d00000000	                              cmp rax, 0	      2516	write.c	FUNCTION_34	IF_1	CALL_4
0x40020bc	            0x7514	                           jne 0x40020d2	      2516	write.c	FUNCTION_34	IF_1	CALL_4
0x40020be	      0xba00000000	                              mov edx, 0	      2516	write.c	FUNCTION_34	IF_1	CALL_4
0x40020c3	      0xbed5090000	                          mov esi, 0x9d5	      2516	write.c	FUNCTION_34	IF_1	CALL_4
0x40020c8	      0xbf00000000	                              mov edi, 0	      2516	write.c	FUNCTION_34	IF_1	CALL_4
0x40020cd	      0xe800000000	                          call 0x40020d2	      2516	write.c	FUNCTION_34	IF_1	CALL_4
0x40020d2	          0x4c89ef	                            mov rdi, r13	      2518	write.c	FUNCTION_34	IF_1	CALL_5
0x40020d5	      0xe800000000	                          call 0x40020da	      2518	write.c	FUNCTION_34	IF_1	CALL_5
0x40020da	          0x4801c3	                            add rbx, rax	      2518	write.c	FUNCTION_34	IF_1	CALL_5
0x40020dd	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      2528	write.c	FUNCTION_34	IF_1	IF_2
0x40020e3	            0x7453	                            je 0x4002138	      2528	write.c	FUNCTION_34	IF_1	IF_2
0x40020e5	      0x488b442408	                mov rax, qword [rsp + 8]	      2529	write.c	FUNCTION_34	IF_1	IF_2
0x40020ea	         0xfb6405a	           movzx eax, byte [rax + 0x5a] 	      2529	write.c	FUNCTION_34	IF_1	IF_2
0x40020ee	      0x413244245a	               xor al, byte [r12 + 0x5a]	      2529	write.c	FUNCTION_34	IF_1	IF_2
0x40020f3	            0xa801	                              test al, 1	      2529	write.c	FUNCTION_34	IF_1	IF_2
0x40020f5	            0x7441	                            je 0x4002138	      2529	write.c	FUNCTION_34	IF_1	IF_2
0x40020f7	          0x4c89ef	                            mov rdi, r13	      2530	write.c	FUNCTION_34	IF_1	IF_2	CALL_6
0x40020fa	      0xe800000000	                          call 0x40020ff	      2530	write.c	FUNCTION_34	IF_1	IF_2	CALL_6
0x40020ff	      0x483b442418	            cmp rax, qword [rsp + 0x18] 	      2530	write.c	FUNCTION_34	IF_1	IF_2	CALL_6
0x4002104	            0x7532	                           jne 0x4002138	      2530	write.c	FUNCTION_34	IF_1	IF_2	CALL_6
0x4002106	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      2532	write.c	FUNCTION_34	IF_1	IF_2	IF_3
0x400210c	            0x7811	                            js 0x400211f	      2532	write.c	FUNCTION_34	IF_1	IF_2	IF_3
0x400210e	      0x488b442408	                mov rax, qword [rsp + 8]	      2533	write.c	FUNCTION_34	IF_1	IF_2	IF_3
0x4002113	    0x410fb7742458	           movzx esi, word [r12 + 0x58] 	      2533	write.c	FUNCTION_34	IF_1	IF_2	IF_3
0x4002119	        0x66397058	               cmp word [rax + 0x58], si	      2533	write.c	FUNCTION_34	IF_1	IF_2	IF_3
0x400211d	            0x7507	                           jne 0x4002126	      2533	write.c	FUNCTION_34	IF_1	IF_2	IF_3
0x400211f	      0x48035c2410	             add rbx, qword [rsp + 0x10]	      2534	write.c	FUNCTION_34	IF_1	IF_2	IF_3
0x4002124	            0xeb12	                           jmp 0x4002138	      2534	write.c	FUNCTION_34	IF_1	IF_2	IF_3
0x4002126	          0x4939df	                            cmp r15, rbx	      2540	write.c	FUNCTION_34	IF_1	IF_2	ELSE_1	IF_4
0x4002129	            0x760d	                           jbe 0x4002138	      2540	write.c	FUNCTION_34	IF_1	IF_2	ELSE_1	IF_4
0x400212b	      0x498b442438	            mov rax, qword [r12 + 0x38] 	      2541	write.c	FUNCTION_34	IF_1	IF_2	ELSE_1	IF_4
0x4002130	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      2541	write.c	FUNCTION_34	IF_1	IF_2	ELSE_1	IF_4
0x4002135	          0x480318	                    add rbx, qword [rax]	      2541	write.c	FUNCTION_34	IF_1	IF_2	ELSE_1	IF_4
0x4002138	          0x4c29fb	                            sub rbx, r15	      2545	write.c	FUNCTION_34
0x400213b	      0x492b5c2410	             sub rbx, qword [r12 + 0x10]	      2556	write.c	FUNCTION_34	IF_5
0x4002140	            0x7928	                           jns 0x400216a	      2556	write.c	FUNCTION_34	IF_5
0x4002142	        0x418b5614	            mov edx, dword [r14 + 0x14] 	      2559	write.c	FUNCTION_34	IF_5	FOR_1
0x4002146	          0x4c89f0	                            mov rax, r14	      2504	write.c	FUNCTION_34
0x4002149	            0xeb13	                           jmp 0x400215e	      2559	write.c	FUNCTION_34	IF_5	FOR_1
0x400214b	            0x89d0	                            mov eax, edx	      2566	write.c	FUNCTION_34	IF_5	ELSE_2
0x400214d	        0x488d0440	                  lea rax, [rax + rax*2]	      2566	write.c	FUNCTION_34	IF_5	ELSE_2
0x4002151	    0x488d04c50000	                        lea rax, [rax*8]	      2566	write.c	FUNCTION_34	IF_5	ELSE_2
0x4002159	            0x89d5	                            mov ebp, edx	      2567	write.c	FUNCTION_34	IF_5	ELSE_2
0x400215b	          0x8b5014	            mov edx, dword [rax + 0x14] 	      2567	write.c	FUNCTION_34	IF_5	ELSE_2
0x400215e	            0x85d2	                           test edx, edx	      2559	write.c	FUNCTION_34	IF_5	FOR_1
0x4002160	            0x742d	                            je 0x400218f	      2559	write.c	FUNCTION_34	IF_5	FOR_1
0x4002162	        0x483b5808	                cmp rbx, qword [rax + 8]	      2560	write.c	FUNCTION_34	IF_5	FOR_1	IF_6
0x4002166	            0x7ce3	                            jl 0x400214b	      2560	write.c	FUNCTION_34	IF_5	FOR_1	IF_6
0x4002168	            0xeb25	                           jmp 0x400218f	      2560	write.c	FUNCTION_34	IF_5	FOR_1	IF_6
0x400216a	        0x418b5614	            mov edx, dword [r14 + 0x14] 	      2573	write.c	FUNCTION_34	ELSE_3	FOR_2
0x400216e	          0x4c89f0	                            mov rax, r14	      2504	write.c	FUNCTION_34
0x4002171	            0xeb13	                           jmp 0x4002186	      2573	write.c	FUNCTION_34	ELSE_3	FOR_2
0x4002173	            0x89d0	                            mov eax, edx	      2580	write.c	FUNCTION_34	ELSE_3	ELSE_4
0x4002175	        0x488d0440	                  lea rax, [rax + rax*2]	      2580	write.c	FUNCTION_34	ELSE_3	ELSE_4
0x4002179	    0x488d04c50000	                        lea rax, [rax*8]	      2580	write.c	FUNCTION_34	ELSE_3	ELSE_4
0x4002181	            0x89d5	                            mov ebp, edx	      2581	write.c	FUNCTION_34	ELSE_3	ELSE_4
0x4002183	          0x8b5014	            mov edx, dword [rax + 0x14] 	      2581	write.c	FUNCTION_34	ELSE_3	ELSE_4
0x4002186	            0x85d2	                           test edx, edx	      2573	write.c	FUNCTION_34	ELSE_3	FOR_2
0x4002188	            0x7405	                            je 0x400218f	      2573	write.c	FUNCTION_34	ELSE_3	FOR_2
0x400218a	          0x483b18	                    cmp rbx, qword [rax]	      2574	write.c	FUNCTION_34	ELSE_3	FOR_2	IF_7
0x400218d	            0x7fe4	                            jg 0x4002173	      2574	write.c	FUNCTION_34	ELSE_3	FOR_2	IF_7
0x400218f	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      2585	write.c	FUNCTION_34
0x4002193	      0x410fb65610	           movzx edx, byte [r14 + 0x10] 	      2585	write.c	FUNCTION_34
0x4002198	            0x29d0	                            sub eax, edx	      2585	write.c	FUNCTION_34
0x400219a	            0x4898	                                    cdqe	      2585	write.c	FUNCTION_34
0x400219c	          0x4885c0	                           test rax, rax	      2586	write.c	FUNCTION_34	IF_8
0x400219f	            0x7405	                            je 0x40021a6	      2586	write.c	FUNCTION_34	IF_8
0x40021a1	      0x41896c2460	             mov dword [r12 + 0x60], ebp	      2587	write.c	FUNCTION_34	IF_8
0x40021a6	        0x4883c428	                           add rsp, 0x28	      2589	write.c	FUNCTION_34
0x40021aa	              0x5b	                                 pop rbx	      2589	write.c	FUNCTION_34
0x40021ab	              0x5d	                                 pop rbp	      2589	write.c	FUNCTION_34
0x40021ac	            0x415c	                                 pop r12	      2589	write.c	FUNCTION_34
0x40021ae	            0x415d	                                 pop r13	      2589	write.c	FUNCTION_34
0x40021b0	            0x415e	                                 pop r14	      2589	write.c	FUNCTION_34
0x40021b2	            0x415f	                                 pop r15	      2589	write.c	FUNCTION_34
0x40021b4	              0xc3	                                     ret	      2589	write.c	FUNCTION_34
fix_at_start	CALL,1:FOR,0:SWITCH,0:WHILE,0:DO,0:functions,0:IF,0:ELSE,0	12
0x40019d3	        0x4883ec10	                           sub rsp, 0x10	       318	write.c	FUNCTION_4
0x40019d7	            0x6a01	                                  push 1	       319	write.c	FUNCTION_4	CALL_1
0x40019d9	            0x4151	                                 push r9	       319	write.c	FUNCTION_4	CALL_1
0x40019db	            0x4150	                                 push r8	       319	write.c	FUNCTION_4	CALL_1
0x40019dd	          0x4989c9	                             mov r9, rcx	       319	write.c	FUNCTION_4	CALL_1
0x40019e0	    0x41b800000000	                              mov r8d, 0	       319	write.c	FUNCTION_4	CALL_1
0x40019e6	          0x4889d1	                            mov rcx, rdx	       319	write.c	FUNCTION_4	CALL_1
0x40019e9	            0x89f2	                            mov edx, esi	       319	write.c	FUNCTION_4	CALL_1
0x40019eb	      0xbe00000000	                              mov esi, 0	       319	write.c	FUNCTION_4	CALL_1
0x40019f0	      0xe865e7ffff	               call sym.fix_new_internal	       319	write.c	FUNCTION_4	CALL_1
0x40019f5	        0x4883c428	                           add rsp, 0x28	       321	write.c	FUNCTION_4
0x40019f9	              0xc3	                                     ret	       321	write.c	FUNCTION_4
compress_frag	CALL,10:FOR,0:SWITCH,0:WHILE,1:DO,0:functions,0:IF,4:ELSE,0	100
0x4000329	            0x4156	                                push r14	      1379	write.c	FUNCTION_22
0x400032b	            0x4155	                                push r13	      1379	write.c	FUNCTION_22
0x400032d	            0x4154	                                push r12	      1379	write.c	FUNCTION_22
0x400032f	              0x55	                                push rbp	      1379	write.c	FUNCTION_22
0x4000330	              0x53	                                push rbx	      1379	write.c	FUNCTION_22
0x4000331	        0x4883ec30	                           sub rsp, 0x30	      1379	write.c	FUNCTION_22
0x4000335	          0x4989fd	                            mov r13, rdi	      1379	write.c	FUNCTION_22
0x4000338	      0x4889742408	                mov qword [rsp + 8], rsi	      1379	write.c	FUNCTION_22
0x400033d	        0x89542404	                mov dword [rsp + 4], edx	      1379	write.c	FUNCTION_22
0x4000341	          0x4989ce	                            mov r14, rcx	      1379	write.c	FUNCTION_22
0x4000344	          0x4c89c3	                             mov rbx, r8	      1379	write.c	FUNCTION_22
0x4000347	    0x64488b042528	                mov rax, qword fs:[0x28]	      1379	write.c	FUNCTION_22
0x4000350	      0x4889442428	             mov qword [rsp + 0x28], rax	      1379	write.c	FUNCTION_22
0x4000355	            0x31c0	                            xor eax, eax	      1379	write.c	FUNCTION_22
0x4000357	          0x488b29	                    mov rbp, qword [rcx]	      1382	write.c	FUNCTION_22
0x400035a	    0x41bc00000000	                             mov r12d, 0	      1381	write.c	FUNCTION_22
0x4000360	      0xe9f1000000	                           jmp 0x4000456	      1388	write.c	FUNCTION_22	WHILE_1
0x4000365	        0x488b7320	            mov rsi, qword [rbx + 0x20] 	      1392	write.c	FUNCTION_22	WHILE_1	CALL_1
0x4000369	        0x488b4b18	            mov rcx, qword [rbx + 0x18] 	      1392	write.c	FUNCTION_22	WHILE_1	CALL_1
0x400036d	          0x4889f0	                            mov rax, rsi	      1392	write.c	FUNCTION_22	WHILE_1	CALL_1
0x4000370	          0x4829c8	                            sub rax, rcx	      1392	write.c	FUNCTION_22	WHILE_1	CALL_1
0x4000373	            0x89c2	                            mov edx, eax	      1392	write.c	FUNCTION_22	WHILE_1	CALL_1
0x4000375	        0x8944241c	             mov dword [rsp + 0x1c], eax	      1392	write.c	FUNCTION_22	WHILE_1	CALL_1
0x4000379	            0x85c0	                           test eax, eax	      1393	write.c	FUNCTION_22	WHILE_1	IF_1
0x400037b	     0xf8f88000000	                            jg 0x4000409	      1393	write.c	FUNCTION_22	WHILE_1	IF_1
0x4000381	        0x483b4b10	            cmp rcx, qword [rbx + 0x10] 	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x4000385	            0x7504	                           jne 0x400038b	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x4000387	        0x804b5002	                 or byte [rbx + 0x50], 2	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x400038b	        0x488b4330	            mov rax, qword [rbx + 0x30] 	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x400038f	          0x4801c1	                            add rcx, rax	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x4000392	          0x48f7d0	                                 not rax	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x4000395	          0x4821c1	                            and rcx, rax	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x4000398	        0x48894b18	             mov qword [rbx + 0x18], rcx	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x400039c	        0x488b4308	                mov rax, qword [rbx + 8]	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x40003a0	          0x4829c1	                            sub rcx, rax	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x40003a3	          0x4889f7	                            mov rdi, rsi	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x40003a6	          0x4829c7	                            sub rdi, rax	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x40003a9	          0x4839f9	                            cmp rcx, rdi	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x40003ac	            0x7604	                           jbe 0x40003b2	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x40003ae	        0x48897318	             mov qword [rbx + 0x18], rsi	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x40003b2	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x40003b6	        0x48894310	             mov qword [rbx + 0x10], rax	      1395	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x40003ba	          0x4889df	                            mov rdi, rbx	      1396	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_3
0x40003bd	      0xe800000000	                          call 0x40003c2	      1396	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_3
0x40003c2	          0x4889c5	                            mov rbp, rax	      1396	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_3
0x40003c5	    0xc7405c010000	               mov dword [rax + 0x5c], 1	      1397	write.c	FUNCTION_22	WHILE_1	IF_1
0x40003cc	          0x498b06	                    mov rax, qword [r14]	      1398	write.c	FUNCTION_22	WHILE_1	IF_1
0x40003cf	        0x48896838	             mov qword [rax + 0x38], rbp	      1398	write.c	FUNCTION_22	WHILE_1	IF_1
0x40003d3	          0x49892e	                    mov qword [r14], rbp	      1399	write.c	FUNCTION_22	WHILE_1	IF_1
0x40003d6	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      1400	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_4
0x40003da	        0x482b4318	             sub rax, qword [rbx + 0x18]	      1400	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_4
0x40003de	            0x89c2	                            mov edx, eax	      1400	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_4
0x40003e0	        0x8944241c	             mov dword [rsp + 0x1c], eax	      1400	write.c	FUNCTION_22	WHILE_1	IF_1	CALL_4
0x40003e4	            0x85c0	                           test eax, eax	      1402	write.c	FUNCTION_22	WHILE_1	IF_2
0x40003e6	            0x7f21	                            jg 0x4000409	      1402	write.c	FUNCTION_22	WHILE_1	IF_2
0x40003e8	      0xba05000000	                              mov edx, 5	      1403	write.c	FUNCTION_22	WHILE_1	CALL_6
0x40003ed	      0xbe00000000	                              mov esi, 0	      1403	write.c	FUNCTION_22	WHILE_1	CALL_6
0x40003f2	      0xbf00000000	                              mov edi, 0	      1403	write.c	FUNCTION_22	WHILE_1	CALL_6
0x40003f7	      0xe800000000	                          call 0x40003fc	      1403	write.c	FUNCTION_22	WHILE_1	CALL_6
0x40003fc	          0x4889c7	                            mov rdi, rax	      1403	write.c	FUNCTION_22	WHILE_1	CALL_6
0x40003ff	      0xb800000000	                              mov eax, 0	      1403	write.c	FUNCTION_22	WHILE_1	CALL_6
0x4000404	      0xe800000000	                          call 0x4000409	      1403	write.c	FUNCTION_22	WHILE_1	CALL_6
0x4000409	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1404	write.c	FUNCTION_22	WHILE_1	CALL_7
0x400040d	      0x4889442420	             mov qword [rsp + 0x20], rax	      1404	write.c	FUNCTION_22	WHILE_1	CALL_7
0x4000412	          0x4863d2	                         movsxd rdx, edx	      1405	write.c	FUNCTION_22	WHILE_1	CALL_8
0x4000415	          0x4801c2	                            add rdx, rax	      1405	write.c	FUNCTION_22	WHILE_1	CALL_8
0x4000418	        0x48895318	             mov qword [rbx + 0x18], rdx	      1405	write.c	FUNCTION_22	WHILE_1	CALL_8
0x400041c	      0x4c8d44241c	                    lea r8, [rsp + 0x1c]	      1406	write.c	FUNCTION_22	WHILE_1	CALL_9
0x4000421	      0x488d4c2420	                   lea rcx, [rsp + 0x20]	      1406	write.c	FUNCTION_22	WHILE_1	CALL_9
0x4000426	      0x488d542404	                      lea rdx, [rsp + 4]	      1406	write.c	FUNCTION_22	WHILE_1	CALL_9
0x400042b	      0x488d742408	                      lea rsi, [rsp + 8]	      1406	write.c	FUNCTION_22	WHILE_1	CALL_9
0x4000430	          0x4c89ef	                            mov rdi, r13	      1406	write.c	FUNCTION_22	WHILE_1	CALL_9
0x4000433	      0xe800000000	                          call 0x4000438	      1406	write.c	FUNCTION_22	WHILE_1	CALL_9
0x4000438	            0x85c0	                           test eax, eax	      1408	write.c	FUNCTION_22	WHILE_1	IF_3
0x400043a	            0x782a	                            js 0x4000466	      1408	write.c	FUNCTION_22	WHILE_1	IF_3
0x400043c	          0x4863d0	                         movsxd rdx, eax	      1411	write.c	FUNCTION_22	WHILE_1
0x400043f	        0x48015510	            add qword [rbp + 0x10], rdx 	      1411	write.c	FUNCTION_22	WHILE_1
0x4000443	          0x4101c4	                           add r12d, eax	      1412	write.c	FUNCTION_22	WHILE_1
0x4000446	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	      1415	write.c	FUNCTION_22	WHILE_1	IF_4
0x400044a	            0x85c0	                           test eax, eax	      1415	write.c	FUNCTION_22	WHILE_1	IF_4
0x400044c	            0x7e08	                           jle 0x4000456	      1415	write.c	FUNCTION_22	WHILE_1	IF_4
0x400044e	            0xf7d8	                                 neg eax	      1416	write.c	FUNCTION_22	WHILE_1	CALL_10
0x4000450	            0x4898	                                    cdqe	      1416	write.c	FUNCTION_22	WHILE_1	CALL_10
0x4000452	        0x48014318	            add qword [rbx + 0x18], rax 	      1416	write.c	FUNCTION_22	WHILE_1	CALL_10
0x4000456	      0x837c240400	                  cmp dword [rsp + 4], 0	      1388	write.c	FUNCTION_22	WHILE_1
0x400045b	     0xf8f04ffffff	                            jg 0x4000365	      1388	write.c	FUNCTION_22	WHILE_1
0x4000461	          0x4489e0	                           mov eax, r12d	      1388	write.c	FUNCTION_22	WHILE_1
0x4000464	            0xeb05	                           jmp 0x400046b	      1388	write.c	FUNCTION_22	WHILE_1
0x4000466	      0xb8ffffffff	                     mov eax, 0xffffffff	      1409	write.c	FUNCTION_22	WHILE_1	IF_3
0x400046b	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      1420	write.c	FUNCTION_22
0x4000470	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      1420	write.c	FUNCTION_22
0x4000479	            0x7405	                            je 0x4000480	      1420	write.c	FUNCTION_22
0x400047b	      0xe800000000	                          call 0x4000480	      1420	write.c	FUNCTION_22
0x4000480	        0x4883c430	                           add rsp, 0x30	      1420	write.c	FUNCTION_22
0x4000484	              0x5b	                                 pop rbx	      1420	write.c	FUNCTION_22
0x4000485	              0x5d	                                 pop rbp	      1420	write.c	FUNCTION_22
0x4000486	            0x415c	                                 pop r12	      1420	write.c	FUNCTION_22
0x4000488	            0x415d	                                 pop r13	      1420	write.c	FUNCTION_22
0x400048a	            0x415e	                                 pop r14	      1420	write.c	FUNCTION_22
0x400048c	              0xc3	                                     ret	      1420	write.c	FUNCTION_22
relax_segment	CALL,54:FOR,5:SWITCH,2:WHILE,0:DO,1:functions,0:IF,27:ELSE,5	515
0x40021b5	            0x4157	                                push r15	      2625	write.c	FUNCTION_36
0x40021b7	            0x4156	                                push r14	      2625	write.c	FUNCTION_36
0x40021b9	            0x4155	                                push r13	      2625	write.c	FUNCTION_36
0x40021bb	            0x4154	                                push r12	      2625	write.c	FUNCTION_36
0x40021bd	              0x55	                                push rbp	      2625	write.c	FUNCTION_36
0x40021be	              0x53	                                push rbx	      2625	write.c	FUNCTION_36
0x40021bf	        0x4883ec38	                           sub rsp, 0x38	      2625	write.c	FUNCTION_36
0x40021c3	          0x4889fb	                            mov rbx, rdi	      2625	write.c	FUNCTION_36
0x40021c6	      0x48897c2418	             mov qword [rsp + 0x18], rdi	      2625	write.c	FUNCTION_36
0x40021cb	          0x4889f7	                            mov rdi, rsi	      2625	write.c	FUNCTION_36
0x40021ce	      0x4889742408	                mov qword [rsp + 8], rsi	      2625	write.c	FUNCTION_36
0x40021d3	        0x89542424	             mov dword [rsp + 0x24], edx	      2625	write.c	FUNCTION_36
0x40021d7	      0xbe00000000	                              mov esi, 0	      2633	write.c	FUNCTION_36	CALL_1
0x40021dc	      0xe800000000	                          call 0x40021e1	      2633	write.c	FUNCTION_36	CALL_1
0x40021e1	          0x4885db	                           test rbx, rbx	      2639	write.c	FUNCTION_36	FOR_1
0x40021e4	     0xf847d010000	                            je 0x4002367	      2639	write.c	FUNCTION_36	FOR_1
0x40021ea	    0x41be00000000	                             mov r14d, 0	      2639	write.c	FUNCTION_36	FOR_1
0x40021f0	      0xbd00000000	                              mov ebp, 0	      2639	write.c	FUNCTION_36	FOR_1
0x40021f5	    0x41bd00000000	                             mov r13d, 0	      2639	write.c	FUNCTION_36	FOR_1
0x40021fb	      0x6644897358	             mov word [rbx + 0x58], r14w	      2643	write.c	FUNCTION_36	FOR_1
0x4002200	        0x80635afe	             and byte [rbx + 0x5a], 0xfe	      2644	write.c	FUNCTION_36	FOR_1
0x4002204	          0x48892b	                    mov qword [rbx], rbp	      2645	write.c	FUNCTION_36	FOR_1
0x4002207	        0x48036b10	             add rbp, qword [rbx + 0x10]	      2646	write.c	FUNCTION_36	FOR_1
0x400220b	          0x4989ec	                            mov r12, rbp	      2646	write.c	FUNCTION_36	FOR_1
0x400220e	        0x448b7b5c	           mov r15d, dword [rbx + 0x5c] 	      2648	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x4002212	        0x4183ff0d	                           cmp r15d, 0xd	      2648	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x4002216	     0xf870a010000	                            ja 0x4002326	      2648	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x400221c	          0x4489f8	                           mov eax, r15d	      2648	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x400221f	    0xff24c5000000	                       jmp qword [rax*8]	      2648	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x4002226	        0x488b6b20	            mov rbp, qword [rbx + 0x20] 	      2651	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x400222a	      0x480faf6b18	            imul rbp, qword [rbx + 0x18]	      2651	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x400222f	          0x4c01e5	                            add rbp, r12	      2651	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x4002232	      0xe91d010000	                           jmp 0x4002354	      2652	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x4002237	        0x488b4b20	            mov rcx, qword [rbx + 0x20] 	      2602	write.c	FUNCTION_35
0x400223b	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      2602	write.c	FUNCTION_35
0x4002242	          0x48d3e0	                             shl rax, cl	      2602	write.c	FUNCTION_35
0x4002245	          0x4889c5	                            mov rbp, rax	      2610	write.c	FUNCTION_35
0x4002248	          0x48f7d5	                                 not rbp	      2610	write.c	FUNCTION_35
0x400224b	          0x4c01e5	                            add rbp, r12	      2610	write.c	FUNCTION_35
0x400224e	          0x4821c5	                            and rbp, rax	      2610	write.c	FUNCTION_35
0x4002251	          0x4c29e5	                            sub rbp, r12	      2610	write.c	FUNCTION_35
0x4002254	          0x8b4360	            mov eax, dword [rbx + 0x60] 	      2660	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_1
0x4002257	            0x85c0	                           test eax, eax	      2660	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_1
0x4002259	            0x7407	                            je 0x4002262	      2660	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_1
0x400225b	            0x89c0	                            mov eax, eax	      2660	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_1
0x400225d	          0x4839e8	                            cmp rax, rbp	      2660	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_1
0x4002260	            0x725c	                            jb 0x40022be	      2660	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_1
0x4002262	        0x4c8b7b18	            mov r15, qword [rbx + 0x18] 	      2663	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2
0x4002266	          0x4889e8	                            mov rax, rbp	      2663	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2
0x4002269	      0xba00000000	                              mov edx, 0	      2663	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2
0x400226e	          0x49f7f7	                                 div r15	      2663	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2
0x4002271	          0x4885d2	                           test rdx, rdx	      2663	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2
0x4002274	            0x744d	                            je 0x40022c3	      2663	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2
0x4002276	    0x41b805000000	                              mov r8d, 5	      2666	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2	CALL_4
0x400227c	          0x4889e9	                            mov rcx, rbp	      2666	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2	CALL_4
0x400227f	      0xba00000000	                              mov edx, 0	      2666	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2	CALL_4
0x4002284	      0xbe00000000	                              mov esi, 0	      2666	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2	CALL_4
0x4002289	      0xbf00000000	                              mov edi, 0	      2666	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2	CALL_4
0x400228e	      0xe800000000	                          call 0x4002293	      2666	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2	CALL_4
0x4002293	          0x8b7348	            mov esi, dword [rbx + 0x48] 	      2665	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2	CALL_3
0x4002296	        0x488b7b40	            mov rdi, qword [rbx + 0x40] 	      2665	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2	CALL_3
0x400229a	          0x4d89f8	                             mov r8, r15	      2665	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2	CALL_3
0x400229d	          0x4889e9	                            mov rcx, rbp	      2665	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2	CALL_3
0x40022a0	          0x4889c2	                            mov rdx, rax	      2665	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2	CALL_3
0x40022a3	      0xb800000000	                              mov eax, 0	      2665	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2	CALL_3
0x40022a8	      0xe800000000	                          call 0x40022ad	      2665	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2	CALL_3
0x40022ad	          0x4889e8	                            mov rax, rbp	      2672	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2
0x40022b0	      0xba00000000	                              mov edx, 0	      2672	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2
0x40022b5	        0x48f77318	                  div qword [rbx + 0x18]	      2672	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2
0x40022b9	          0x4829d5	                            sub rbp, rdx	      2672	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2
0x40022bc	            0xeb05	                           jmp 0x40022c3	      2672	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_2
0x40022be	      0xbd00000000	                              mov ebp, 0	      2661	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_1
0x40022c3	          0x4c01e5	                            add rbp, r12	      2675	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x40022c6	        0x4183c601	                             add r14d, 1	      2676	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x40022ca	      0xe985000000	                           jmp 0x4002354	      2678	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x40022cf	        0x4183c601	                             add r14d, 1	      2682	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x40022d3	            0xeb7f	                           jmp 0x4002354	      2683	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x40022d5	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	      2693	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_3
0x40022d9	          0x4885ff	                           test rdi, rdi	      2693	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_3
0x40022dc	            0x7405	                            je 0x40022e3	      2693	write.c	FUNCTION_36	FOR_1	SWITCH_1	IF_3
0x40022de	      0xe800000000	                          call 0x40022e3	      2694	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_5
0x40022e3	      0x488b742408	                mov rsi, qword [rsp + 8]	      2696	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_6
0x40022e8	          0x4889df	                            mov rdi, rbx	      2696	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_6
0x40022eb	      0xe800000000	                          call 0x40022f0	      2696	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_6
0x40022f0	          0x4863e8	                         movsxd rbp, eax	      2696	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_6
0x40022f3	          0x4c01e5	                            add rbp, r12	      2696	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_6
0x40022f6	            0xeb5c	                           jmp 0x4002354	      2697	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x40022f8	    0x48c743200100	               mov qword [rbx + 0x20], 1	      2708	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x4002300	        0x488d6d01	                      lea rbp, [rbp + 1]	      2708	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x4002304	            0xeb4e	                           jmp 0x4002354	      2709	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x4002306	          0x4889df	                            mov rdi, rbx	      2712	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_7
0x4002309	      0xe800000000	                          call 0x400230e	      2712	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_7
0x400230e	          0x4863e8	                         movsxd rbp, eax	      2712	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_7
0x4002311	          0x4c01e5	                            add rbp, r12	      2712	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_7
0x4002314	            0xeb3e	                           jmp 0x4002354	      2713	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x4002316	          0x4889df	                            mov rdi, rbx	      2716	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_8
0x4002319	      0xe800000000	                          call 0x400231e	      2716	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_8
0x400231e	          0x4863e8	                         movsxd rbp, eax	      2716	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_8
0x4002321	          0x4c01e5	                            add rbp, r12	      2716	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_8
0x4002324	            0xeb2e	                           jmp 0x4002354	      2717	write.c	FUNCTION_36	FOR_1	SWITCH_1
0x4002326	      0xba05000000	                              mov edx, 5	      2720	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_9
0x400232b	      0xbe00000000	                              mov esi, 0	      2720	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_9
0x4002330	      0xbf00000000	                              mov edi, 0	      2720	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_9
0x4002335	      0xe800000000	                          call 0x400233a	      2720	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_9
0x400233a	          0x4489fe	                           mov esi, r15d	      2720	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_9
0x400233d	      0xb900000000	                              mov ecx, 0	      2720	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_9
0x4002342	      0xbaa00a0000	                          mov edx, 0xaa0	      2720	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_9
0x4002347	          0x4889c7	                            mov rdi, rax	      2720	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_9
0x400234a	      0xb800000000	                              mov eax, 0	      2720	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_9
0x400234f	      0xe800000000	                          call 0x4002354	      2720	write.c	FUNCTION_36	FOR_1	SWITCH_1	CALL_9
0x4002354	        0x488b5b38	            mov rbx, qword [rbx + 0x38] 	      2641	write.c	FUNCTION_36	FOR_1
0x4002358	        0x4983c501	                              add r13, 1	      2641	write.c	FUNCTION_36	FOR_1
0x400235c	          0x4885db	                           test rbx, rbx	      2639	write.c	FUNCTION_36	FOR_1
0x400235f	     0xf8596feffff	                           jne 0x40021fb	      2639	write.c	FUNCTION_36	FOR_1
0x4002365	            0xeb06	                           jmp 0x400236d	      2639	write.c	FUNCTION_36	FOR_1
0x4002367	    0x41bd00000000	                             mov r13d, 0	      2639	write.c	FUNCTION_36	FOR_1
0x400236d	          0x4c89e8	                            mov rax, r13	      2770	write.c	FUNCTION_36
0x4002370	        0x490fafc5	                           imul rax, r13	      2770	write.c	FUNCTION_36
0x4002374	          0x4c39e8	                            cmp rax, r13	      2770	write.c	FUNCTION_36
0x4002377	        0x4c0f43e8	                         cmovae r13, rax	      2770	write.c	FUNCTION_36
0x400237b	      0x4c896c2428	             mov qword [rsp + 0x28], r13	      2770	write.c	FUNCTION_36
0x4002380	    0xc74424100000	               mov dword [rsp + 0x10], 0	      2770	write.c	FUNCTION_36
0x4002388	    0xc74424200000	               mov dword [rsp + 0x20], 0	      2770	write.c	FUNCTION_36
0x4002390	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      2781	write.c	FUNCTION_36	DO_1	FOR_2
0x4002395	          0x4889c3	                            mov rbx, rax	      2781	write.c	FUNCTION_36	DO_1	FOR_2
0x4002398	    0xc74424140000	               mov dword [rsp + 0x14], 0	      2781	write.c	FUNCTION_36	DO_1	FOR_2
0x40023a0	    0x41be00000000	                             mov r14d, 0	      2781	write.c	FUNCTION_36	DO_1	FOR_2
0x40023a6	          0x4885c0	                           test rax, rax	      2781	write.c	FUNCTION_36	DO_1	FOR_2
0x40023a9	     0xf84bf050000	                            je 0x400296e	      2781	write.c	FUNCTION_36	DO_1	FOR_2
0x40023af	         0xfb6435a	           movzx eax, byte [rbx + 0x5a] 	      2788	write.c	FUNCTION_36	DO_1	FOR_2
0x40023b3	            0x89c2	                            mov edx, eax	      2788	write.c	FUNCTION_36	DO_1	FOR_2
0x40023b5	          0x83e201	                              and edx, 1	      2788	write.c	FUNCTION_36	DO_1	FOR_2
0x40023b8	          0x83f201	                              xor edx, 1	      2788	write.c	FUNCTION_36	DO_1	FOR_2
0x40023bb	          0x83e0fe	                     and eax, 0xfffffffe	      2788	write.c	FUNCTION_36	DO_1	FOR_2
0x40023be	             0x9d0	                             or eax, edx	      2788	write.c	FUNCTION_36	DO_1	FOR_2
0x40023c0	          0x88435a	               mov byte [rbx + 0x5a], al	      2788	write.c	FUNCTION_36	DO_1	FOR_2
0x40023c3	          0x488b2b	                    mov rbp, qword [rbx]	      2789	write.c	FUNCTION_36	DO_1	FOR_2
0x40023c6	        0x4c893424	                    mov qword [rsp], r14	      2790	write.c	FUNCTION_36	DO_1	FOR_2
0x40023ca	      0x4e8d6c3500	                    lea r13, [rbp + r14]	      2790	write.c	FUNCTION_36	DO_1	FOR_2
0x40023cf	          0x4c892b	                    mov qword [rbx], r13	      2790	write.c	FUNCTION_36	DO_1	FOR_2
0x40023d2	        0x4c8b6328	            mov r12, qword [rbx + 0x28] 	      2791	write.c	FUNCTION_36	DO_1	FOR_2
0x40023d6	        0x4c8b7b20	            mov r15, qword [rbx + 0x20] 	      2792	write.c	FUNCTION_36	DO_1	FOR_2
0x40023da	          0x8b435c	            mov eax, dword [rbx + 0x5c] 	      2794	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x40023dd	          0x83f80d	                            cmp eax, 0xd	      2794	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x40023e0	     0xf87f4030000	                            ja 0x40027da	      2794	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x40023e6	            0x89c2	                            mov edx, eax	      2794	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x40023e8	    0xff24d5000000	                       jmp qword [rdx*8]	      2794	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x40023ef	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	      2874	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_21
0x40023f3	          0x4801d5	                            add rbp, rdx	      2874	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_21
0x40023f6	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      2602	write.c	FUNCTION_35
0x40023fd	          0x4489f9	                           mov ecx, r15d	      2602	write.c	FUNCTION_35
0x4002400	          0x48d3e0	                             shl rax, cl	      2602	write.c	FUNCTION_35
0x4002403	          0x4889c1	                            mov rcx, rax	      2602	write.c	FUNCTION_35
0x4002406	          0x4989c4	                            mov r12, rax	      2602	write.c	FUNCTION_35
0x4002409	          0x49f7d4	                                 not r12	      2602	write.c	FUNCTION_35
0x400240c	      0x4a8d442500	                    lea rax, [rbp + r12]	      2610	write.c	FUNCTION_35
0x4002411	          0x4821c8	                            and rax, rcx	      2610	write.c	FUNCTION_35
0x4002414	          0x4829e8	                            sub rax, rbp	      2610	write.c	FUNCTION_35
0x4002417	          0x4c01ea	                            add rdx, r13	      2876	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_22
0x400241a	          0x4901d4	                            add r12, rdx	      2610	write.c	FUNCTION_35
0x400241d	          0x4921cc	                            and r12, rcx	      2610	write.c	FUNCTION_35
0x4002420	          0x4929d4	                            sub r12, rdx	      2610	write.c	FUNCTION_35
0x4002423	          0x8b5360	            mov edx, dword [rbx + 0x60] 	      2879	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_10
0x4002426	            0x85d2	                           test edx, edx	      2879	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_10
0x4002428	            0x7417	                            je 0x4002441	      2879	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_10
0x400242a	            0x89d2	                            mov edx, edx	      2881	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_10	IF_11
0x400242c	          0x4839c2	                            cmp rdx, rax	      2881	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_10	IF_11
0x400242f	     0xf8208050000	                            jb 0x400293d	      2881	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_10	IF_11
0x4002435	          0x4c39e2	                            cmp rdx, r12	      2884	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_10	IF_12
0x4002438	      0xba00000000	                              mov edx, 0	      2884	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_10	IF_12
0x400243d	        0x4c0f42e2	                          cmovb r12, rdx	      2884	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_10	IF_12
0x4002441	          0x4c89e5	                            mov rbp, r12	      2893	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002444	          0x4829c5	                            sub rbp, rax	      2893	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002447	     0xf89c3030000	                           jns 0x4002810	      2893	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x400244d	        0x8b442410	            mov eax, dword [rsp + 0x10] 	      2894	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002451	            0xa810	                           test al, 0x10	      2894	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002453	     0xf84bc030000	                            je 0x4002815	      2894	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002459	          0x83e00f	                            and eax, 0xf	      2895	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x400245c	          0x83f801	                              cmp eax, 1	      2895	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x400245f	     0xf8eb0030000	                           jle 0x4002815	      2895	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002465	      0x488b442408	                mov rax, qword [rsp + 8]	      2898	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x400246a	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	      2898	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002471	          0x488b00	                    mov rax, qword [rax]	      2898	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002474	        0x48890424	                    mov qword [rsp], rax	      2898	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002478	        0x488d7830	                   lea rdi, [rax + 0x30]	      2898	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x400247c	      0xe800000000	                          call 0x4002481	      2901	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_24
0x4002481	          0x4989c7	                            mov r15, rax	      2901	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_24
0x4002484	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      2902	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_25
0x4002488	        0x488b0c24	                    mov rcx, qword [rsp]	      2902	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_25
0x400248c	        0x48034148	             add rax, qword [rcx + 0x48]	      2902	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_25
0x4002490	        0x48894148	             mov qword [rcx + 0x48], rax	      2902	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_25
0x4002494	        0x483b4140	            cmp rax, qword [rcx + 0x40] 	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x4002498	            0x7507	                           jne 0x40024a1	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x400249a	    0x808980000000	                 or byte [rcx + 0x80], 2	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x40024a1	        0x488b3424	                    mov rsi, qword [rsp]	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x40024a5	        0x488b5660	            mov rdx, qword [rsi + 0x60] 	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x40024a9	          0x4801d0	                            add rax, rdx	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x40024ac	          0x48f7d2	                                 not rdx	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x40024af	          0x4821d0	                            and rax, rdx	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x40024b2	        0x48894648	             mov qword [rsi + 0x48], rax	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x40024b6	        0x488b5638	            mov rdx, qword [rsi + 0x38] 	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x40024ba	        0x488b4e50	            mov rcx, qword [rsi + 0x50] 	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x40024be	          0x4829d0	                            sub rax, rdx	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x40024c1	          0x4889cf	                            mov rdi, rcx	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x40024c4	          0x4829d7	                            sub rdi, rdx	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x40024c7	          0x4839f8	                            cmp rax, rdi	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x40024ca	            0x7604	                           jbe 0x40024d0	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x40024cc	        0x48894e48	             mov qword [rsi + 0x48], rcx	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x40024d0	        0x488b0c24	                    mov rcx, qword [rsp]	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x40024d4	        0x488b4148	            mov rax, qword [rcx + 0x48] 	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x40024d8	        0x48894140	             mov qword [rcx + 0x40], rax	      2903	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	CALL_26
0x40024dc	          0x488b03	                    mov rax, qword [rbx]	        53	string3.h	FUNCTION_58	CALL_3
0x40024df	          0x498907	                    mov qword [r15], rax	        53	string3.h	FUNCTION_58	CALL_3
0x40024e2	        0x488b4308	                mov rax, qword [rbx + 8]	        53	string3.h	FUNCTION_58	CALL_3
0x40024e6	        0x49894708	                mov qword [r15 + 8], rax	        53	string3.h	FUNCTION_58	CALL_3
0x40024ea	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        53	string3.h	FUNCTION_58	CALL_3
0x40024ee	        0x49894710	             mov qword [r15 + 0x10], rax	        53	string3.h	FUNCTION_58	CALL_3
0x40024f2	        0x488b4318	            mov rax, qword [rbx + 0x18] 	        53	string3.h	FUNCTION_58	CALL_3
0x40024f6	        0x49894718	             mov qword [r15 + 0x18], rax	        53	string3.h	FUNCTION_58	CALL_3
0x40024fa	        0x488b4320	            mov rax, qword [rbx + 0x20] 	        53	string3.h	FUNCTION_58	CALL_3
0x40024fe	        0x49894720	             mov qword [r15 + 0x20], rax	        53	string3.h	FUNCTION_58	CALL_3
0x4002502	        0x488b4328	            mov rax, qword [rbx + 0x28] 	        53	string3.h	FUNCTION_58	CALL_3
0x4002506	        0x49894728	             mov qword [r15 + 0x28], rax	        53	string3.h	FUNCTION_58	CALL_3
0x400250a	        0x488b4330	            mov rax, qword [rbx + 0x30] 	        53	string3.h	FUNCTION_58	CALL_3
0x400250e	        0x49894730	             mov qword [r15 + 0x30], rax	        53	string3.h	FUNCTION_58	CALL_3
0x4002512	        0x488b4338	            mov rax, qword [rbx + 0x38] 	        53	string3.h	FUNCTION_58	CALL_3
0x4002516	        0x49894738	             mov qword [r15 + 0x38], rax	        53	string3.h	FUNCTION_58	CALL_3
0x400251a	        0x488b4340	            mov rax, qword [rbx + 0x40] 	        53	string3.h	FUNCTION_58	CALL_3
0x400251e	        0x49894740	             mov qword [r15 + 0x40], rax	        53	string3.h	FUNCTION_58	CALL_3
0x4002522	        0x488b4348	            mov rax, qword [rbx + 0x48] 	        53	string3.h	FUNCTION_58	CALL_3
0x4002526	        0x49894748	             mov qword [r15 + 0x48], rax	        53	string3.h	FUNCTION_58	CALL_3
0x400252a	        0x488b4350	            mov rax, qword [rbx + 0x50] 	        53	string3.h	FUNCTION_58	CALL_3
0x400252e	        0x49894750	             mov qword [r15 + 0x50], rax	        53	string3.h	FUNCTION_58	CALL_3
0x4002532	        0x488b4358	            mov rax, qword [rbx + 0x58] 	        53	string3.h	FUNCTION_58	CALL_3
0x4002536	        0x49894758	             mov qword [r15 + 0x58], rax	        53	string3.h	FUNCTION_58	CALL_3
0x400253a	        0x488b4360	            mov rax, qword [rbx + 0x60] 	        53	string3.h	FUNCTION_58	CALL_3
0x400253e	        0x49894760	             mov qword [r15 + 0x60], rax	        53	string3.h	FUNCTION_58	CALL_3
0x4002542	        0x488b4368	            mov rax, qword [rbx + 0x68] 	        53	string3.h	FUNCTION_58	CALL_3
0x4002546	        0x49894768	             mov qword [r15 + 0x68], rax	        53	string3.h	FUNCTION_58	CALL_3
0x400254a	        0x488b4370	            mov rax, qword [rbx + 0x70] 	        53	string3.h	FUNCTION_58	CALL_3
0x400254e	        0x49894770	             mov qword [r15 + 0x70], rax	        53	string3.h	FUNCTION_58	CALL_3
0x4002552	          0x8b4378	            mov eax, dword [rbx + 0x78] 	        53	string3.h	FUNCTION_58	CALL_3
0x4002555	        0x41894778	             mov dword [r15 + 0x78], eax	        53	string3.h	FUNCTION_58	CALL_3
0x4002559	        0x498d7f7c	                   lea rdi, [r15 + 0x7c]	        53	string3.h	FUNCTION_58	CALL_3
0x400255d	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        53	string3.h	FUNCTION_58	CALL_3
0x4002561	      0x488d74037c	            lea rsi, [rbx + rax + 0x7c] 	        53	string3.h	FUNCTION_58	CALL_3
0x4002566	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	        53	string3.h	FUNCTION_58	CALL_3
0x400256a	      0xe800000000	                          call 0x400256f	        53	string3.h	FUNCTION_58	CALL_3
0x400256f	    0x41c7475c0100	               mov dword [r15 + 0x5c], 1	      2908	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002577	          0x4c89e8	                            mov rax, r13	      2909	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x400257a	        0x48034310	             add rax, qword [rbx + 0x10]	      2909	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x400257e	          0x4901c4	                            add r12, rax	      2909	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002581	          0x4d8927	                    mov qword [r15], r12	      2909	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002584	    0x49c747100000	               mov qword [r15 + 0x10], 0	      2910	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x400258c	        0x488b4b20	            mov rcx, qword [rbx + 0x20] 	      2912	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002590	      0xbe01000000	                              mov esi, 1	      2912	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002595	          0x4889f0	                            mov rax, rsi	      2912	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x4002598	          0x48d3e0	                             shl rax, cl	      2912	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x400259b	            0x4899	                                     cqo	      2912	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x400259d	        0x48f77b18	                 idiv qword [rbx + 0x18]	      2912	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40025a1	        0x49894720	             mov qword [r15 + 0x20], rax	      2911	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40025a5	        0x488b4b20	            mov rcx, qword [rbx + 0x20] 	      2914	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	IF_14
0x40025a9	          0x48d3e6	                             shl rsi, cl	      2914	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	IF_14
0x40025ac	      0x490faf4718	            imul rax, qword [r15 + 0x18]	      2913	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	IF_14
0x40025b1	          0x4839f0	                            cmp rax, rsi	      2913	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	IF_14
0x40025b4	            0x740c	                            je 0x40025c2	      2913	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	IF_14
0x40025b6	        0x49897720	             mov qword [r15 + 0x20], rsi	      2916	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	IF_14
0x40025ba	    0x49c747180100	               mov qword [r15 + 0x18], 1	      2917	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13	IF_14
0x40025c2	        0x498b4720	            mov rax, qword [r15 + 0x20] 	      2920	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40025c6	      0x490faf4718	            imul rax, qword [r15 + 0x18]	      2920	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40025cb	          0x4801c5	                            add rbp, rax	      2920	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40025ce	      0x4a8d443500	                    lea rax, [rbp + r14]	      2923	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40025d3	          0x4929c4	                            sub r12, rax	      2923	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40025d6	          0x4d8927	                    mov qword [r15], r12	      2923	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40025d9	      0x410fb64f5a	           movzx ecx, byte [r15 + 0x5a] 	      2924	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40025de	            0x89c8	                            mov eax, ecx	      2924	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40025e0	          0x83e001	                              and eax, 1	      2924	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40025e3	          0x83f001	                              xor eax, 1	      2924	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40025e6	            0x89c2	                            mov edx, eax	      2924	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40025e8	            0x89c8	                            mov eax, ecx	      2924	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40025ea	          0x83e0fe	                     and eax, 0xfffffffe	      2924	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40025ed	             0x9d0	                             or eax, edx	      2924	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40025ef	        0x4188475a	               mov byte [r15 + 0x5a], al	      2924	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40025f3	        0x4c897b38	             mov qword [rbx + 0x38], r15	      2925	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40025f7	      0xe914020000	                           jmp 0x4002810	      2925	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_13
0x40025fc	          0x4c89fd	                            mov rbp, r15	      2935	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x40025ff	          0x4d85e4	                           test r12, r12	      2938	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_15
0x4002602	            0x742f	                            je 0x4002633	      2938	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_15
0x4002604	          0x4c89e7	                            mov rdi, r12	      2944	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_15	CALL_32
0x4002607	      0xe800000000	                          call 0x400260c	      2944	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_15	CALL_32
0x400260c	      0x4883782800	               cmp qword [rax + 0x28], 0	      2944	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_15	CALL_32
0x4002611	            0x7414	                            je 0x4002627	      2944	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_15	CALL_32
0x4002613	      0xba00000000	                              mov edx, 0	      2944	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_15	CALL_32
0x4002618	      0xbe800b0000	                          mov esi, 0xb80	      2944	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_15	CALL_32
0x400261d	      0xbf00000000	                              mov edi, 0	      2944	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_15	CALL_32
0x4002622	      0xe800000000	                          call 0x4002627	      2944	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_15	CALL_32
0x4002627	          0x4c89e7	                            mov rdi, r12	      2945	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_15	CALL_33
0x400262a	      0xe800000000	                          call 0x400262f	      2945	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_15	CALL_33
0x400262f	        0x498d2c07	                    lea rbp, [r15 + rax]	      2945	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_15	CALL_33
0x4002633	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      2948	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_34
0x4002637	          0x4885c0	                           test rax, rax	      2948	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_34
0x400263a	            0x7514	                           jne 0x4002650	      2948	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_34
0x400263c	      0xba00000000	                              mov edx, 0	      2948	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_34
0x4002641	      0xbe840b0000	                          mov esi, 0xb84	      2948	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_34
0x4002646	      0xbf00000000	                              mov edi, 0	      2948	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_34
0x400264b	      0xe800000000	                          call 0x4002650	      2948	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_34
0x4002650	        0x4c8b2424	                    mov r12, qword [rsp]	      2949	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x4002654	          0x4c0320	                    add r12, qword [rax]	      2949	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x4002657	          0x4c89ea	                            mov rdx, r13	      2955	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16
0x400265a	        0x48035310	             add rdx, qword [rbx + 0x10]	      2955	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16
0x400265e	          0x4839d5	                            cmp rbp, rdx	      2955	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16
0x4002661	     0xf83f6020000	                           jae 0x400295d	      2955	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16
0x4002667	      0x837c242401	               cmp dword [rsp + 0x24], 1	      2970	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16	IF_17
0x400266c	     0xf8e0c030000	                           jle 0x400297e	      2970	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16	IF_17
0x4002672	      0xba05000000	                              mov edx, 5	      2978	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16	CALL_36
0x4002677	      0xbe00000000	                              mov esi, 0	      2978	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16	CALL_36
0x400267c	      0xbf00000000	                              mov edi, 0	      2978	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16	CALL_36
0x4002681	      0xe800000000	                          call 0x4002686	      2978	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16	CALL_36
0x4002686	          0x8b7348	            mov esi, dword [rbx + 0x48] 	      2977	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16	CALL_35
0x4002689	        0x488b7b40	            mov rdi, qword [rbx + 0x40] 	      2977	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16	CALL_35
0x400268d	          0x4889c2	                            mov rdx, rax	      2977	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16	CALL_35
0x4002690	      0xb800000000	                              mov eax, 0	      2977	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16	CALL_35
0x4002695	      0xe800000000	                          call 0x400269a	      2977	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16	CALL_35
0x400269a	    0xc7435c020000	               mov dword [rbx + 0x5c], 2	      2982	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16
0x40026a1	    0xc74360000000	               mov dword [rbx + 0x60], 0	      2983	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16
0x40026a8	    0x48c743200000	               mov qword [rbx + 0x20], 0	      2984	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16
0x40026b0	          0x4d29ec	                            sub r12, r13	      2985	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16
0x40026b3	        0x4c896310	             mov qword [rbx + 0x10], r12	      2985	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16
0x40026b7	      0xe9b8010000	                           jmp 0x4002874	      2985	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16
0x40026bc	          0x4d85e4	                           test r12, r12	      2993	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18
0x40026bf	     0xf84af010000	                            je 0x4002874	      2993	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18
0x40026c5	          0x4c89e7	                            mov rdi, r12	      2997	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	CALL_37
0x40026c8	      0xe800000000	                          call 0x40026cd	      2997	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	CALL_37
0x40026cd	          0x4989c5	                            mov r13, rax	      2997	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	CALL_37
0x40026d0	          0x4c89e7	                            mov rdi, r12	      2998	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_38
0x40026d3	      0xe800000000	                          call 0x40026d8	      2998	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_38
0x40026d8	    0x483d00000000	                              cmp rax, 0	      2998	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_38
0x40026de	            0x7518	                           jne 0x40026f8	      2998	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_38
0x40026e0	          0x4c89e7	                            mov rdi, r12	      2999	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_39
0x40026e3	      0xe800000000	                          call 0x40026e8	      2999	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_39
0x40026e8	            0x85c0	                           test eax, eax	      2999	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_39
0x40026ea	            0x750c	                           jne 0x40026f8	      2999	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_39
0x40026ec	          0x4c89e7	                            mov rdi, r12	      3000	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_40
0x40026ef	      0xe800000000	                          call 0x40026f4	      3000	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_40
0x40026f4	            0x85c0	                           test eax, eax	      3000	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_40
0x40026f6	            0x7535	                           jne 0x400272d	      3000	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_40
0x40026f8	      0xba05000000	                              mov edx, 5	      3003	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_42
0x40026fd	      0xbe00000000	                              mov esi, 0	      3003	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_42
0x4002702	      0xbf00000000	                              mov edi, 0	      3003	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_42
0x4002707	      0xe800000000	                          call 0x400270c	      3003	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_42
0x400270c	          0x8b7348	            mov esi, dword [rbx + 0x48] 	      3002	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_41
0x400270f	        0x488b7b40	            mov rdi, qword [rbx + 0x40] 	      3002	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_41
0x4002713	          0x4889c2	                            mov rdx, rax	      3002	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_41
0x4002716	      0xb800000000	                              mov eax, 0	      3002	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_41
0x400271b	      0xe800000000	                          call 0x4002720	      3002	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19	CALL_41
0x4002720	    0x48c743280000	               mov qword [rbx + 0x28], 0	      3005	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19
0x4002728	      0xe947010000	                           jmp 0x4002874	      3005	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	IF_19
0x400272d	          0x4d85ed	                           test r13, r13	      3007	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20
0x4002730	            0x7940	                           jns 0x4002772	      3007	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20
0x4002732	      0x837c242401	               cmp dword [rsp + 0x24], 1	      3011	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20	IF_21
0x4002737	     0xf8e13020000	                           jle 0x4002950	      3011	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20	IF_21
0x400273d	      0xba05000000	                              mov edx, 5	      3018	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20	CALL_44
0x4002742	      0xbe00000000	                              mov esi, 0	      3018	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20	CALL_44
0x4002747	      0xbf00000000	                              mov edi, 0	      3018	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20	CALL_44
0x400274c	      0xe800000000	                          call 0x4002751	      3018	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20	CALL_44
0x4002751	          0x8b7348	            mov esi, dword [rbx + 0x48] 	      3017	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20	CALL_43
0x4002754	        0x488b7b40	            mov rdi, qword [rbx + 0x40] 	      3017	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20	CALL_43
0x4002758	          0x4889c2	                            mov rdx, rax	      3017	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20	CALL_43
0x400275b	      0xb800000000	                              mov eax, 0	      3017	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20	CALL_43
0x4002760	      0xe800000000	                          call 0x4002765	      3017	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20	CALL_43
0x4002765	    0x48c743280000	               mov qword [rbx + 0x28], 0	      3019	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20
0x400276d	      0xe902010000	                           jmp 0x4002874	      3019	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20
0x4002772	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      3023	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_2
0x4002776	          0x482b28	                    sub rbp, qword [rax]	      3022	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_2
0x4002779	          0x4889e8	                            mov rax, rbp	      3022	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_2
0x400277c	        0x48034310	             add rax, qword [rbx + 0x10]	      3022	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_2
0x4002780	        0x4a8d2c28	                    lea rbp, [rax + r13]	      3022	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_2
0x4002784	      0xe987000000	                           jmp 0x4002810	      3022	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_2
0x4002789	          0x4c89f2	                            mov rdx, r14	      3034	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_46
0x400278c	          0x4889de	                            mov rsi, rbx	      3034	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_46
0x400278f	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      3034	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_46
0x4002794	      0xe800000000	                          call 0x4002799	      3034	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_46
0x4002799	          0x4889c5	                            mov rbp, rax	      3034	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_46
0x400279c	            0xeb72	                           jmp 0x4002810	      3037	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x400279e	          0x4c89e7	                            mov rdi, r12	      3044	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_47
0x40027a1	      0xe800000000	                          call 0x40027a6	      3044	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_47
0x40027a6	          0x8b7360	            mov esi, dword [rbx + 0x60] 	      3045	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_48
0x40027a9	          0x4889c7	                            mov rdi, rax	      3045	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_48
0x40027ac	      0xe800000000	                          call 0x40027b1	      3045	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_48
0x40027b1	            0x89c0	                            mov eax, eax	      3045	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_48
0x40027b3	          0x4889c5	                            mov rbp, rax	      3046	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x40027b6	        0x482b6b20	             sub rbp, qword [rbx + 0x20]	      3046	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x40027ba	        0x48894320	             mov qword [rbx + 0x20], rax	      3047	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x40027be	            0xeb50	                           jmp 0x4002810	      3049	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x40027c0	          0x4889df	                            mov rdi, rbx	      3052	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_49
0x40027c3	      0xe800000000	                          call 0x40027c8	      3052	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_49
0x40027c8	          0x4863e8	                         movsxd rbp, eax	      3052	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_49
0x40027cb	            0xeb43	                           jmp 0x4002810	      3053	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x40027cd	          0x4889df	                            mov rdi, rbx	      3056	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_50
0x40027d0	      0xe800000000	                          call 0x40027d5	      3056	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_50
0x40027d5	          0x4863e8	                         movsxd rbp, eax	      3056	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_50
0x40027d8	            0xeb36	                           jmp 0x4002810	      3057	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x40027da	          0x4189c7	                           mov r15d, eax	      3057	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x40027dd	      0xba05000000	                              mov edx, 5	      3060	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_51
0x40027e2	      0xbe00000000	                              mov esi, 0	      3060	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_51
0x40027e7	      0xbf00000000	                              mov edi, 0	      3060	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_51
0x40027ec	      0xe800000000	                          call 0x40027f1	      3060	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_51
0x40027f1	          0x4489fe	                           mov esi, r15d	      3060	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_51
0x40027f4	      0xb900000000	                              mov ecx, 0	      3060	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_51
0x40027f9	      0xbaf40b0000	                          mov edx, 0xbf4	      3060	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_51
0x40027fe	          0x4889c7	                            mov rdi, rax	      3060	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_51
0x4002801	      0xb800000000	                              mov eax, 0	      3060	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_51
0x4002806	      0xe800000000	                          call 0x400280b	      3060	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	CALL_51
0x400280b	      0xbd00000000	                              mov ebp, 0	      2797	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2
0x4002810	          0x4885ed	                           test rbp, rbp	      3063	write.c	FUNCTION_36	DO_1	FOR_2	IF_22
0x4002813	            0x745f	                            je 0x4002874	      3063	write.c	FUNCTION_36	DO_1	FOR_2	IF_22
0x4002815	          0x4901ee	                            add r14, rbp	      3065	write.c	FUNCTION_36	DO_1	FOR_2	IF_22
0x4002818	          0x8b435c	            mov eax, dword [rbx + 0x5c] 	      3067	write.c	FUNCTION_36	DO_1	FOR_2	IF_22	IF_23
0x400281b	          0x83f80b	                            cmp eax, 0xb	      3067	write.c	FUNCTION_36	DO_1	FOR_2	IF_22	IF_23
0x400281e	            0x750f	                           jne 0x400282f	      3067	write.c	FUNCTION_36	DO_1	FOR_2	IF_22	IF_23
0x4002820	      0x8344241010	            add dword [rsp + 0x10], 0x10	      3068	write.c	FUNCTION_36	DO_1	FOR_2	IF_22	IF_23
0x4002825	    0xc74424140100	               mov dword [rsp + 0x14], 1	      3066	write.c	FUNCTION_36	DO_1	FOR_2	IF_22
0x400282d	            0xeb45	                           jmp 0x4002874	      3066	write.c	FUNCTION_36	DO_1	FOR_2	IF_22
0x400282f	          0x83f802	                              cmp eax, 2	      3069	write.c	FUNCTION_36	DO_1	FOR_2	IF_22	ELSE_3	IF_24
0x4002832	            0x751e	                           jne 0x4002852	      3069	write.c	FUNCTION_36	DO_1	FOR_2	IF_22	ELSE_3	IF_24
0x4002834	        0x8b442410	            mov eax, dword [rsp + 0x10] 	      3071	write.c	FUNCTION_36	DO_1	FOR_2	IF_22	ELSE_3	IF_24
0x4002838	            0xa810	                           test al, 0x10	      3071	write.c	FUNCTION_36	DO_1	FOR_2	IF_22	ELSE_3	IF_24
0x400283a	            0x7428	                            je 0x4002864	      3071	write.c	FUNCTION_36	DO_1	FOR_2	IF_22	ELSE_3	IF_24
0x400283c	          0x4d85f6	                           test r14, r14	      3071	write.c	FUNCTION_36	DO_1	FOR_2	IF_22	ELSE_3	IF_24
0x400283f	            0x7523	                           jne 0x4002864	      3071	write.c	FUNCTION_36	DO_1	FOR_2	IF_22	ELSE_3	IF_24
0x4002841	          0x83c010	                           add eax, 0x10	      3072	write.c	FUNCTION_36	DO_1	FOR_2	IF_22	ELSE_3	IF_24
0x4002844	        0x89442410	             mov dword [rsp + 0x10], eax	      3072	write.c	FUNCTION_36	DO_1	FOR_2	IF_22	ELSE_3	IF_24
0x4002848	    0xc74424140100	               mov dword [rsp + 0x14], 1	      3066	write.c	FUNCTION_36	DO_1	FOR_2	IF_22
0x4002850	            0xeb22	                           jmp 0x4002874	      3072	write.c	FUNCTION_36	DO_1	FOR_2	IF_22	ELSE_3	IF_24
0x4002852	    0xc74424100000	               mov dword [rsp + 0x10], 0	      3074	write.c	FUNCTION_36	DO_1	FOR_2	IF_22	ELSE_4
0x400285a	    0xc74424140100	               mov dword [rsp + 0x14], 1	      3066	write.c	FUNCTION_36	DO_1	FOR_2	IF_22
0x4002862	            0xeb10	                           jmp 0x4002874	      3066	write.c	FUNCTION_36	DO_1	FOR_2	IF_22
0x4002864	    0xc74424100000	               mov dword [rsp + 0x10], 0	      3074	write.c	FUNCTION_36	DO_1	FOR_2	IF_22	ELSE_4
0x400286c	    0xc74424140100	               mov dword [rsp + 0x14], 1	      3066	write.c	FUNCTION_36	DO_1	FOR_2	IF_22
0x4002874	        0x488b5b38	            mov rbx, qword [rbx + 0x38] 	      2781	write.c	FUNCTION_36	DO_1	FOR_2
0x4002878	          0x4885db	                           test rbx, rbx	      2781	write.c	FUNCTION_36	DO_1	FOR_2
0x400287b	     0xf852efbffff	                           jne 0x40023af	      2781	write.c	FUNCTION_36	DO_1	FOR_2
0x4002881	          0x4d85f6	                           test r14, r14	      3078	write.c	FUNCTION_36	DO_1	IF_25
0x4002884	            0x752d	                           jne 0x40028b3	      3078	write.c	FUNCTION_36	DO_1	IF_25
0x4002886	      0xf644241010	           test byte [rsp + 0x10], 0x10 	      3079	write.c	FUNCTION_36	DO_1	IF_25
0x400288b	            0x7530	                           jne 0x40028bd	      3079	write.c	FUNCTION_36	DO_1	IF_25
0x400288d	            0xeb08	                           jmp 0x4002897	      3079	write.c	FUNCTION_36	DO_1	IF_25
0x400288f	    0xc74424140000	               mov dword [rsp + 0x14], 0	      2779	write.c	FUNCTION_36	DO_1
0x4002897	        0x8b542410	            mov edx, dword [rsp + 0x10] 	      3080	write.c	FUNCTION_36	DO_1	IF_25
0x400289b	            0x89d0	                            mov eax, edx	      3080	write.c	FUNCTION_36	DO_1	IF_25
0x400289d	          0x83e0f0	                     and eax, 0xfffffff0	      3080	write.c	FUNCTION_36	DO_1	IF_25
0x40028a0	          0x83c201	                              add edx, 1	      3081	write.c	FUNCTION_36	DO_1	IF_25
0x40028a3	            0x85c0	                           test eax, eax	      3081	write.c	FUNCTION_36	DO_1	IF_25
0x40028a5	      0xb800000000	                              mov eax, 0	      3081	write.c	FUNCTION_36	DO_1	IF_25
0x40028aa	           0xf45c2	                         cmovne eax, edx	      3081	write.c	FUNCTION_36	DO_1	IF_25
0x40028ad	        0x89442410	             mov dword [rsp + 0x10], eax	      3081	write.c	FUNCTION_36	DO_1	IF_25
0x40028b1	            0xeb12	                           jmp 0x40028c5	      3081	write.c	FUNCTION_36	DO_1	IF_25
0x40028b3	    0xc74424100000	               mov dword [rsp + 0x10], 0	      3083	write.c	FUNCTION_36	DO_1	ELSE_5
0x40028bb	            0xeb08	                           jmp 0x40028c5	      3083	write.c	FUNCTION_36	DO_1	ELSE_5
0x40028bd	    0xc74424100000	               mov dword [rsp + 0x10], 0	      3083	write.c	FUNCTION_36	DO_1	ELSE_5
0x40028c5	      0x837c241400	               cmp dword [rsp + 0x14], 0	      3086	write.c	FUNCTION_36
0x40028ca	            0x740e	                            je 0x40028da	      3086	write.c	FUNCTION_36
0x40028cc	    0x48836c242801	               sub qword [rsp + 0x28], 1	      3086	write.c	FUNCTION_36
0x40028d2	     0xf85b8faffff	                           jne 0x4002390	      3086	write.c	FUNCTION_36
0x40028d8	            0xeb0d	                           jmp 0x40028e7	      3086	write.c	FUNCTION_36
0x40028da	    0x48837c241800	               cmp qword [rsp + 0x18], 0	      3093	write.c	FUNCTION_36	FOR_5
0x40028e0	            0x7531	                           jne 0x4002913	      3093	write.c	FUNCTION_36	FOR_5
0x40028e2	      0xe9a8000000	                           jmp 0x400298f	      3093	write.c	FUNCTION_36	FOR_5
0x40028e7	      0x488b442408	                mov rax, qword [rsp + 8]	      3089	write.c	FUNCTION_36	IF_26	CALL_53
0x40028ec	          0x488b18	                    mov rbx, qword [rax]	      3089	write.c	FUNCTION_36	IF_26	CALL_53
0x40028ef	      0xba05000000	                              mov edx, 5	      3089	write.c	FUNCTION_36	IF_26	CALL_53
0x40028f4	      0xbe00000000	                              mov esi, 0	      3089	write.c	FUNCTION_36	IF_26	CALL_53
0x40028f9	      0xbf00000000	                              mov edi, 0	      3089	write.c	FUNCTION_36	IF_26	CALL_53
0x40028fe	      0xe800000000	                          call 0x4002903	      3089	write.c	FUNCTION_36	IF_26	CALL_53
0x4002903	          0x4889de	                            mov rsi, rbx	      3089	write.c	FUNCTION_36	IF_26	CALL_53
0x4002906	          0x4889c7	                            mov rdi, rax	      3089	write.c	FUNCTION_36	IF_26	CALL_53
0x4002909	      0xb800000000	                              mov eax, 0	      3089	write.c	FUNCTION_36	IF_26	CALL_53
0x400290e	      0xe800000000	                          call 0x4002913	      3089	write.c	FUNCTION_36	IF_26	CALL_53
0x4002913	        0x8b4c2420	            mov ecx, dword [rsp + 0x20] 	      3089	write.c	FUNCTION_36	IF_26	CALL_53
0x4002917	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      3089	write.c	FUNCTION_36	IF_26	CALL_53
0x400291c	          0x488b10	                    mov rdx, qword [rax]	      3094	write.c	FUNCTION_36	FOR_5	IF_27
0x400291f	        0x48395008	                cmp qword [rax + 8], rdx	      3094	write.c	FUNCTION_36	FOR_5	IF_27
0x4002923	            0x7409	                            je 0x400292e	      3094	write.c	FUNCTION_36	FOR_5	IF_27
0x4002925	        0x48895008	                mov qword [rax + 8], rdx	      3096	write.c	FUNCTION_36	FOR_5	IF_27
0x4002929	      0xb901000000	                              mov ecx, 1	      3097	write.c	FUNCTION_36	FOR_5	IF_27
0x400292e	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3093	write.c	FUNCTION_36	FOR_5
0x4002932	          0x4885c0	                           test rax, rax	      3093	write.c	FUNCTION_36	FOR_5
0x4002935	            0x75e5	                           jne 0x400291c	      3093	write.c	FUNCTION_36	FOR_5
0x4002937	        0x894c2420	             mov dword [rsp + 0x20], ecx	      3093	write.c	FUNCTION_36	FOR_5
0x400293b	            0xeb52	                           jmp 0x400298f	      3093	write.c	FUNCTION_36	FOR_5
0x400293d	      0xb800000000	                              mov eax, 0	      2882	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_10	IF_11
0x4002942	          0x4c39e2	                            cmp rdx, r12	      2883	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_10	IF_12
0x4002945	     0xf83f6faffff	                           jae 0x4002441	      2883	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_10	IF_12
0x400294b	      0xe924ffffff	                           jmp 0x4002874	      2883	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_10	IF_12
0x4002950	    0xc74424200100	               mov dword [rsp + 0x20], 1	      3013	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20	IF_21
0x4002958	      0xe917ffffff	                           jmp 0x4002874	      3013	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_18	ELSE_1	IF_20	IF_21
0x400295d	          0x4c29e5	                            sub rbp, r12	      3063	write.c	FUNCTION_36	DO_1	FOR_2	IF_22
0x4002960	     0xf85affeffff	                           jne 0x4002815	      3063	write.c	FUNCTION_36	DO_1	FOR_2	IF_22
0x4002966	          0x4889c3	                            mov rbx, rax	      2781	write.c	FUNCTION_36	DO_1	FOR_2
0x4002969	      0xe941faffff	                           jmp 0x40023af	      2781	write.c	FUNCTION_36	DO_1	FOR_2
0x400296e	      0xf644241010	           test byte [rsp + 0x10], 0x10 	      3079	write.c	FUNCTION_36	DO_1	IF_25
0x4002973	     0xf8416ffffff	                            je 0x400288f	      3079	write.c	FUNCTION_36	DO_1	IF_25
0x4002979	      0xe95cffffff	                           jmp 0x40028da	      3079	write.c	FUNCTION_36	DO_1	IF_25
0x400297e	        0x488b5b38	            mov rbx, qword [rbx + 0x38] 	      2781	write.c	FUNCTION_36	DO_1	FOR_2
0x4002982	    0xc74424200100	               mov dword [rsp + 0x20], 1	      2973	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16	IF_17
0x400298a	      0xe920faffff	                           jmp 0x40023af	      2973	write.c	FUNCTION_36	DO_1	FOR_2	SWITCH_2	IF_16	IF_17
0x400298f	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      3100	write.c	FUNCTION_36
0x4002993	        0x4883c438	                           add rsp, 0x38	      3100	write.c	FUNCTION_36
0x4002997	              0x5b	                                 pop rbx	      3100	write.c	FUNCTION_36
0x4002998	              0x5d	                                 pop rbp	      3100	write.c	FUNCTION_36
0x4002999	            0x415c	                                 pop r12	      3100	write.c	FUNCTION_36
0x400299b	            0x415d	                                 pop r13	      3100	write.c	FUNCTION_36
0x400299d	            0x415e	                                 pop r14	      3100	write.c	FUNCTION_36
0x400299f	            0x415f	                                 pop r15	      3100	write.c	FUNCTION_36
0x40029a1	              0xc3	                                     ret	      3100	write.c	FUNCTION_36
fix_new_exp	CALL,6:FOR,0:SWITCH,1:WHILE,0:DO,0:functions,0:IF,0:ELSE,0	86
0x4001894	            0x4157	                                push r15	       254	write.c	FUNCTION_3
0x4001896	            0x4156	                                push r14	       254	write.c	FUNCTION_3
0x4001898	            0x4155	                                push r13	       254	write.c	FUNCTION_3
0x400189a	            0x4154	                                push r12	       254	write.c	FUNCTION_3
0x400189c	              0x55	                                push rbp	       254	write.c	FUNCTION_3
0x400189d	              0x53	                                push rbx	       254	write.c	FUNCTION_3
0x400189e	        0x4883ec08	                              sub rsp, 8	       254	write.c	FUNCTION_3
0x40018a2	          0x4989fc	                            mov r12, rdi	       254	write.c	FUNCTION_3
0x40018a5	          0x4189f5	                           mov r13d, esi	       254	write.c	FUNCTION_3
0x40018a8	          0x4189d6	                           mov r14d, edx	       254	write.c	FUNCTION_3
0x40018ab	          0x4889cb	                            mov rbx, rcx	       254	write.c	FUNCTION_3
0x40018ae	          0x4589c7	                           mov r15d, r8d	       254	write.c	FUNCTION_3
0x40018b1	          0x4489cd	                            mov ebp, r9d	       254	write.c	FUNCTION_3
0x40018b4	        0x80791814	            cmp byte [rcx + 0x18], 0x14 	       259	write.c	FUNCTION_3	SWITCH_1
0x40018b8	     0xf87c1000000	                            ja 0x400197f	       259	write.c	FUNCTION_3	SWITCH_1
0x40018be	         0xfb64118	           movzx eax, byte [rcx + 0x18] 	       259	write.c	FUNCTION_3	SWITCH_1
0x40018c2	    0xff24c5000000	                       jmp qword [rax*8]	       259	write.c	FUNCTION_3	SWITCH_1
0x40018c9	      0xba05000000	                              mov edx, 5	       265	write.c	FUNCTION_3	SWITCH_1	CALL_2
0x40018ce	      0xbe00000000	                              mov esi, 0	       265	write.c	FUNCTION_3	SWITCH_1	CALL_2
0x40018d3	      0xbf00000000	                              mov edi, 0	       265	write.c	FUNCTION_3	SWITCH_1	CALL_2
0x40018d8	      0xe800000000	                          call 0x40018dd	       265	write.c	FUNCTION_3	SWITCH_1	CALL_2
0x40018dd	          0x4889c7	                            mov rdi, rax	       265	write.c	FUNCTION_3	SWITCH_1	CALL_2
0x40018e0	      0xb800000000	                              mov eax, 0	       265	write.c	FUNCTION_3	SWITCH_1	CALL_2
0x40018e5	      0xe800000000	                          call 0x40018ea	       265	write.c	FUNCTION_3	SWITCH_1	CALL_2
0x40018ea	    0x41b900000000	                              mov r9d, 0	       257	write.c	FUNCTION_3
0x40018f0	    0x41b800000000	                              mov r8d, 0	       256	write.c	FUNCTION_3
0x40018f6	      0xb900000000	                              mov ecx, 0	       255	write.c	FUNCTION_3
0x40018fb	      0xe9a9000000	                           jmp 0x40019a9	       266	write.c	FUNCTION_3	SWITCH_1
0x4001900	          0x4889cf	                            mov rdi, rcx	       272	write.c	FUNCTION_3	SWITCH_1	CALL_3
0x4001903	      0xe800000000	                          call 0x4001908	       272	write.c	FUNCTION_3	SWITCH_1	CALL_3
0x4001908	        0xc6431803	                mov byte [rbx + 0x18], 3	       274	write.c	FUNCTION_3	SWITCH_1
0x400190c	    0x48c743080000	                  mov qword [rbx + 8], 0	       275	write.c	FUNCTION_3	SWITCH_1
0x4001914	          0x488903	                    mov qword [rbx], rax	       276	write.c	FUNCTION_3	SWITCH_1
0x4001917	    0x48c743100000	               mov qword [rbx + 0x10], 0	       277	write.c	FUNCTION_3	SWITCH_1
0x400191f	          0x4189e9	                            mov r9d, ebp	       279	write.c	FUNCTION_3	SWITCH_1	CALL_4
0x4001922	          0x4589f8	                           mov r8d, r15d	       279	write.c	FUNCTION_3	SWITCH_1	CALL_4
0x4001925	          0x4889d9	                            mov rcx, rbx	       279	write.c	FUNCTION_3	SWITCH_1	CALL_4
0x4001928	          0x4489f2	                           mov edx, r14d	       279	write.c	FUNCTION_3	SWITCH_1	CALL_4
0x400192b	          0x4489ee	                           mov esi, r13d	       279	write.c	FUNCTION_3	SWITCH_1	CALL_4
0x400192e	          0x4c89e7	                            mov rdi, r12	       279	write.c	FUNCTION_3	SWITCH_1	CALL_4
0x4001931	      0xe800000000	                          call 0x4001936	       279	write.c	FUNCTION_3	SWITCH_1	CALL_4
0x4001936	      0xe989000000	                           jmp 0x40019c4	       279	write.c	FUNCTION_3	SWITCH_1	CALL_4
0x400193b	          0x488b09	                    mov rcx, qword [rcx]	       283	write.c	FUNCTION_3	SWITCH_1
0x400193e	        0x4c8b4b10	              mov r9, qword [rbx + 0x10]	       284	write.c	FUNCTION_3	SWITCH_1
0x4001942	    0x41b800000000	                              mov r8d, 0	       256	write.c	FUNCTION_3
0x4001948	      0xbd3e000000	                           mov ebp, 0x3e	       285	write.c	FUNCTION_3	SWITCH_1
0x400194d	            0xeb5a	                           jmp 0x40019a9	       286	write.c	FUNCTION_3	SWITCH_1
0x400194f	          0x4c8b01	                     mov r8, qword [rcx]	       289	write.c	FUNCTION_3	SWITCH_1
0x4001952	        0x4c8b4910	              mov r9, qword [rcx + 0x10]	       290	write.c	FUNCTION_3	SWITCH_1
0x4001956	      0xb900000000	                              mov ecx, 0	       255	write.c	FUNCTION_3
0x400195b	            0xeb4c	                           jmp 0x40019a9	       291	write.c	FUNCTION_3	SWITCH_1
0x400195d	        0x4c8b4108	                 mov r8, qword [rcx + 8]	       294	write.c	FUNCTION_3	SWITCH_1
0x4001961	            0xeb06	                           jmp 0x4001969	       294	write.c	FUNCTION_3	SWITCH_1
0x4001963	    0x41b800000000	                              mov r8d, 0	       256	write.c	FUNCTION_3
0x4001969	          0x488b0b	                    mov rcx, qword [rbx]	       297	write.c	FUNCTION_3	SWITCH_1
0x400196c	            0xeb0b	                           jmp 0x4001979	       297	write.c	FUNCTION_3	SWITCH_1
0x400196e	    0x41b800000000	                              mov r8d, 0	       256	write.c	FUNCTION_3
0x4001974	      0xb900000000	                              mov ecx, 0	       255	write.c	FUNCTION_3
0x4001979	        0x4c8b4b10	              mov r9, qword [rbx + 0x10]	       300	write.c	FUNCTION_3	SWITCH_1
0x400197d	            0xeb2a	                           jmp 0x40019a9	       301	write.c	FUNCTION_3	SWITCH_1
0x400197f	          0x4889df	                            mov rdi, rbx	       304	write.c	FUNCTION_3	SWITCH_1	CALL_5
0x4001982	      0xe800000000	                          call 0x4001987	       304	write.c	FUNCTION_3	SWITCH_1	CALL_5
0x4001987	          0x4889c1	                            mov rcx, rax	       304	write.c	FUNCTION_3	SWITCH_1	CALL_5
0x400198a	    0x41b900000000	                              mov r9d, 0	       257	write.c	FUNCTION_3
0x4001990	    0x41b800000000	                              mov r8d, 0	       256	write.c	FUNCTION_3
0x4001996	            0xeb11	                           jmp 0x40019a9	       305	write.c	FUNCTION_3	SWITCH_1
0x4001998	    0x41b900000000	                              mov r9d, 0	       257	write.c	FUNCTION_3
0x400199e	    0x41b800000000	                              mov r8d, 0	       256	write.c	FUNCTION_3
0x40019a4	      0xb900000000	                              mov ecx, 0	       255	write.c	FUNCTION_3
0x40019a9	        0x4883ec08	                              sub rsp, 8	       308	write.c	FUNCTION_3	CALL_6
0x40019ad	            0x6a00	                                  push 0	       308	write.c	FUNCTION_3	CALL_6
0x40019af	              0x55	                                push rbp	       308	write.c	FUNCTION_3	CALL_6
0x40019b0	            0x4157	                                push r15	       308	write.c	FUNCTION_3	CALL_6
0x40019b2	          0x4489f2	                           mov edx, r14d	       308	write.c	FUNCTION_3	CALL_6
0x40019b5	          0x4489ee	                           mov esi, r13d	       308	write.c	FUNCTION_3	CALL_6
0x40019b8	          0x4c89e7	                            mov rdi, r12	       308	write.c	FUNCTION_3	CALL_6
0x40019bb	      0xe89ae7ffff	               call sym.fix_new_internal	       308	write.c	FUNCTION_3	CALL_6
0x40019c0	        0x4883c420	                           add rsp, 0x20	       308	write.c	FUNCTION_3	CALL_6
0x40019c4	        0x4883c408	                              add rsp, 8	       310	write.c	FUNCTION_3
0x40019c8	              0x5b	                                 pop rbx	       310	write.c	FUNCTION_3
0x40019c9	              0x5d	                                 pop rbp	       310	write.c	FUNCTION_3
0x40019ca	            0x415c	                                 pop r12	       310	write.c	FUNCTION_3
0x40019cc	            0x415d	                                 pop r13	       310	write.c	FUNCTION_3
0x40019ce	            0x415e	                                 pop r14	       310	write.c	FUNCTION_3
0x40019d0	            0x415f	                                 pop r15	       310	write.c	FUNCTION_3
0x40019d2	              0xc3	                                     ret	       310	write.c	FUNCTION_3
adjust_reloc_syms	CALL,23:FOR,1:SWITCH,0:WHILE,1:DO,0:functions,0:IF,15:ELSE,1	124
0x4000d22	    0x488b86a80000	            mov rax, qword [rsi + 0xa8] 	       784	write.c	FUNCTION_16	CALL_1
0x4000d29	          0x4885c0	                           test rax, rax	       787	write.c	FUNCTION_16	IF_1
0x4000d2c	     0xf84b3010000	                            je 0x4000ee5	       787	write.c	FUNCTION_16	IF_1
0x4000d32	            0x4155	                                push r13	       783	write.c	FUNCTION_16
0x4000d34	            0x4154	                                push r12	       783	write.c	FUNCTION_16
0x4000d36	              0x55	                                push rbp	       783	write.c	FUNCTION_16
0x4000d37	              0x53	                                push rbx	       783	write.c	FUNCTION_16
0x4000d38	        0x4883ec08	                              sub rsp, 8	       783	write.c	FUNCTION_16
0x4000d3c	          0x4989f5	                            mov r13, rsi	       783	write.c	FUNCTION_16
0x4000d3f	        0x4c8b6010	            mov r12, qword [rax + 0x10] 	       792	write.c	FUNCTION_16	FOR_1
0x4000d43	          0x4d85e4	                           test r12, r12	       792	write.c	FUNCTION_16	FOR_1
0x4000d46	     0xf848f010000	                            je 0x4000edb	       792	write.c	FUNCTION_16	FOR_1
0x4000d4c	      0x41f6042420	                   test byte [r12], 0x20	       793	write.c	FUNCTION_16	FOR_1	IF_2
0x4000d51	     0xf8576010000	                           jne 0x4000ecd	       793	write.c	FUNCTION_16	FOR_1	IF_2
0x4000d57	      0x498b5c2418	            mov rbx, qword [r12 + 0x18] 	       796	write.c	FUNCTION_16	ELSE_1	IF_3
0x4000d5c	          0x4885db	                           test rbx, rbx	       796	write.c	FUNCTION_16	ELSE_1	IF_3
0x4000d5f	     0xf8468010000	                            je 0x4000ecd	       796	write.c	FUNCTION_16	ELSE_1	IF_3
0x4000d65	          0x4889df	                            mov rdi, rbx	       812	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_3
0x4000d68	      0xe800000000	                          call 0x4000d6d	       812	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_3
0x4000d6d	      0x498b7c2420	            mov rdi, qword [r12 + 0x20] 	       814	write.c	FUNCTION_16	ELSE_1	IF_3	IF_4
0x4000d72	          0x4885ff	                           test rdi, rdi	       814	write.c	FUNCTION_16	ELSE_1	IF_3	IF_4
0x4000d75	            0x7430	                            je 0x4000da7	       814	write.c	FUNCTION_16	ELSE_1	IF_3	IF_4
0x4000d77	      0xe800000000	                          call 0x4000d7c	       815	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_4
0x4000d7c	            0xeb29	                           jmp 0x4000da7	       815	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_4
0x4000d7e	          0x4889df	                            mov rdi, rbx	       822	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_7
0x4000d81	      0xe800000000	                          call 0x4000d86	       822	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_7
0x4000d86	          0x488b28	                    mov rbp, qword [rax]	       822	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_7
0x4000d89	          0x4839eb	                            cmp rbx, rbp	       823	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	IF_5
0x4000d8c	            0x7434	                            je 0x4000dc2	       823	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	IF_5
0x4000d8e	          0x4889df	                            mov rdi, rbx	       825	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_8
0x4000d91	      0xe800000000	                          call 0x4000d96	       825	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_8
0x4000d96	        0x488b4010	            mov rax, qword [rax + 0x10] 	       825	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_8
0x4000d9a	      0x4901442428	            add qword [r12 + 0x28], rax 	       825	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_8
0x4000d9f	      0x49896c2418	             mov qword [r12 + 0x18], rbp	       826	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1
0x4000da4	          0x4889eb	                            mov rbx, rbp	       827	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1
0x4000da7	          0x4889df	                            mov rdi, rbx	       819	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_5
0x4000daa	      0xe800000000	                          call 0x4000daf	       819	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_5
0x4000daf	            0x85c0	                           test eax, eax	       819	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_5
0x4000db1	            0x75cb	                           jne 0x4000d7e	       819	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_5
0x4000db3	          0x4889df	                            mov rdi, rbx	       820	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_6
0x4000db6	      0xe800000000	                          call 0x4000dbb	       820	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_6
0x4000dbb	            0x85c0	                           test eax, eax	       820	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_6
0x4000dbd	            0x75bf	                           jne 0x4000d7e	       820	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_6
0x4000dbf	          0x4889dd	                            mov rbp, rbx	       820	write.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1	CALL_6
0x4000dc2	          0x4889ef	                            mov rdi, rbp	       830	write.c	FUNCTION_16	ELSE_1	IF_3	IF_6	CALL_9
0x4000dc5	      0xe800000000	                          call 0x4000dca	       830	write.c	FUNCTION_16	ELSE_1	IF_3	IF_6	CALL_9
0x4000dca	            0x85c0	                           test eax, eax	       830	write.c	FUNCTION_16	ELSE_1	IF_3	IF_6	CALL_9
0x4000dcc	            0x7422	                            je 0x4000df0	       830	write.c	FUNCTION_16	ELSE_1	IF_3	IF_6	CALL_9
0x4000dce	          0x4889ef	                            mov rdi, rbp	       832	write.c	FUNCTION_16	ELSE_1	IF_3	IF_6	CALL_10
0x4000dd1	      0xe800000000	                          call 0x4000dd6	       832	write.c	FUNCTION_16	ELSE_1	IF_3	IF_6	CALL_10
0x4000dd6	      0x4901442428	            add qword [r12 + 0x28], rax 	       832	write.c	FUNCTION_16	ELSE_1	IF_3	IF_6	CALL_10
0x4000ddb	          0x4889ef	                            mov rdi, rbp	       833	write.c	FUNCTION_16	ELSE_1	IF_3	IF_6	CALL_11
0x4000dde	      0xe800000000	                          call 0x4000de3	       833	write.c	FUNCTION_16	ELSE_1	IF_3	IF_6	CALL_11
0x4000de3	          0x488b00	                    mov rax, qword [rax]	       833	write.c	FUNCTION_16	ELSE_1	IF_3	IF_6	CALL_11
0x4000de6	      0x4989442418	             mov qword [r12 + 0x18], rax	       833	write.c	FUNCTION_16	ELSE_1	IF_3	IF_6	CALL_11
0x4000deb	      0xe9dd000000	                           jmp 0x4000ecd	       834	write.c	FUNCTION_16	ELSE_1	IF_3	IF_6
0x4000df0	      0x498b7c2418	            mov rdi, qword [r12 + 0x18] 	       839	write.c	FUNCTION_16	ELSE_1	IF_3	IF_7	CALL_12
0x4000df5	      0xbe01000000	                              mov esi, 1	       839	write.c	FUNCTION_16	ELSE_1	IF_3	IF_7	CALL_12
0x4000dfa	      0xe800000000	                          call 0x4000dff	       839	write.c	FUNCTION_16	ELSE_1	IF_3	IF_7	CALL_12
0x4000dff	            0x85c0	                           test eax, eax	       839	write.c	FUNCTION_16	ELSE_1	IF_3	IF_7	CALL_12
0x4000e01	     0xf85c6000000	                           jne 0x4000ecd	       839	write.c	FUNCTION_16	ELSE_1	IF_3	IF_7	CALL_12
0x4000e07	          0x4c89e7	                            mov rdi, r12	       846	write.c	FUNCTION_16	ELSE_1	IF_3	IF_8	CALL_13
0x4000e0a	      0xe800000000	                          call 0x4000e0f	       846	write.c	FUNCTION_16	ELSE_1	IF_3	IF_8	CALL_13
0x4000e0f	            0x85c0	                           test eax, eax	       846	write.c	FUNCTION_16	ELSE_1	IF_3	IF_8	CALL_13
0x4000e11	     0xf84b6000000	                            je 0x4000ecd	       846	write.c	FUNCTION_16	ELSE_1	IF_3	IF_8	CALL_13
0x4000e17	          0x4889ef	                            mov rdi, rbp	       852	write.c	FUNCTION_16	ELSE_1	IF_3	IF_9	CALL_14
0x4000e1a	      0xe800000000	                          call 0x4000e1f	       852	write.c	FUNCTION_16	ELSE_1	IF_3	IF_9	CALL_14
0x4000e1f	            0x85c0	                           test eax, eax	       852	write.c	FUNCTION_16	ELSE_1	IF_3	IF_9	CALL_14
0x4000e21	     0xf85a6000000	                           jne 0x4000ecd	       852	write.c	FUNCTION_16	ELSE_1	IF_3	IF_9	CALL_14
0x4000e27	          0x4889ef	                            mov rdi, rbp	       855	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_15
0x4000e2a	      0xe800000000	                          call 0x4000e2f	       855	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_15
0x4000e2f	          0x4889c3	                            mov rbx, rax	       855	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_15
0x4000e32	          0x4885c0	                           test rax, rax	       856	write.c	FUNCTION_16	ELSE_1	IF_3	IF_10
0x4000e35	            0x7514	                           jne 0x4000e4b	       856	write.c	FUNCTION_16	ELSE_1	IF_3	IF_10
0x4000e37	      0xba00000000	                              mov edx, 0	       857	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_16
0x4000e3c	      0xbe59030000	                          mov esi, 0x359	       857	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_16
0x4000e41	      0xbf00000000	                              mov edi, 0	       857	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_16
0x4000e46	      0xe800000000	                          call 0x4000e4b	       857	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_16
0x4000e4b	    0x483d00000000	                              cmp rax, 0	       859	write.c	FUNCTION_16	ELSE_1	IF_3	IF_11
0x4000e51	            0x747a	                            je 0x4000ecd	       859	write.c	FUNCTION_16	ELSE_1	IF_3	IF_11
0x4000e53	    0x483b05000000	            cmp rax, qword [0x04000e5a] 	       860	write.c	FUNCTION_16	ELSE_1	IF_3	IF_11
0x4000e5a	            0x7471	                            je 0x4000ecd	       860	write.c	FUNCTION_16	ELSE_1	IF_3	IF_11
0x4000e5c	          0x4939c5	                            cmp r13, rax	       871	write.c	FUNCTION_16	ELSE_1	IF_3	IF_12	CALL_17
0x4000e5f	            0x742b	                            je 0x4000e8c	       871	write.c	FUNCTION_16	ELSE_1	IF_3	IF_12	CALL_17
0x4000e61	          0x4889ef	                            mov rdi, rbp	       871	write.c	FUNCTION_16	ELSE_1	IF_3	IF_12	CALL_17
0x4000e64	      0xe800000000	                          call 0x4000e69	       871	write.c	FUNCTION_16	ELSE_1	IF_3	IF_12	CALL_17
0x4000e69	            0x85c0	                           test eax, eax	       871	write.c	FUNCTION_16	ELSE_1	IF_3	IF_12	CALL_17
0x4000e6b	            0x751f	                           jne 0x4000e8c	       871	write.c	FUNCTION_16	ELSE_1	IF_3	IF_12	CALL_17
0x4000e6d	        0xf6432202	               test byte [rbx + 0x22], 2	       873	write.c	FUNCTION_16	ELSE_1	IF_3	IF_12	IF_13
0x4000e71	            0x755a	                           jne 0x4000ecd	       873	write.c	FUNCTION_16	ELSE_1	IF_3	IF_12	IF_13
0x4000e73	          0x488b33	                    mov rsi, qword [rbx]	       878	write.c	FUNCTION_16	ELSE_1	IF_3	IF_12	IF_13	CALL_19
0x4000e76	      0xbf00000000	                              mov edi, 0	       878	write.c	FUNCTION_16	ELSE_1	IF_3	IF_12	IF_13	CALL_19
0x4000e7b	      0xb90d000000	                            mov ecx, 0xd	       878	write.c	FUNCTION_16	ELSE_1	IF_3	IF_12	IF_13	CALL_19
0x4000e80	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       878	write.c	FUNCTION_16	ELSE_1	IF_3	IF_12	IF_13	CALL_19
0x4000e82	           0xf97c2	                                 seta dl	       878	write.c	FUNCTION_16	ELSE_1	IF_3	IF_12	IF_13	CALL_19
0x4000e85	           0xf92c0	                                 setb al	       878	write.c	FUNCTION_16	ELSE_1	IF_3	IF_12	IF_13	CALL_19
0x4000e88	            0x38c2	                              cmp dl, al	       874	write.c	FUNCTION_16	ELSE_1	IF_3	IF_12	IF_13
0x4000e8a	            0x7441	                            je 0x4000ecd	       874	write.c	FUNCTION_16	ELSE_1	IF_3	IF_12	IF_13
0x4000e8c	          0x8b4320	            mov eax, dword [rbx + 0x20] 	       885	write.c	FUNCTION_16	ELSE_1	IF_3	IF_14
0x4000e8f	      0xa900008000	                      test eax, 0x800000	       885	write.c	FUNCTION_16	ELSE_1	IF_3	IF_14
0x4000e94	            0x7410	                            je 0x4000ea6	       885	write.c	FUNCTION_16	ELSE_1	IF_3	IF_14
0x4000e96	    0x49837c242800	               cmp qword [r12 + 0x28], 0	       886	write.c	FUNCTION_16	ELSE_1	IF_3	IF_14
0x4000e9c	            0x752f	                           jne 0x4000ecd	       886	write.c	FUNCTION_16	ELSE_1	IF_3	IF_14
0x4000e9e	    0x49837c242000	               cmp qword [r12 + 0x20], 0	       886	write.c	FUNCTION_16	ELSE_1	IF_3	IF_14
0x4000ea4	            0x7527	                           jne 0x4000ecd	       886	write.c	FUNCTION_16	ELSE_1	IF_3	IF_14
0x4000ea6	          0xf6c404	                              test ah, 4	       890	write.c	FUNCTION_16	ELSE_1	IF_3	IF_15
0x4000ea9	            0x7522	                           jne 0x4000ecd	       890	write.c	FUNCTION_16	ELSE_1	IF_3	IF_15
0x4000eab	          0x4889ef	                            mov rdi, rbp	       896	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_20
0x4000eae	      0xe800000000	                          call 0x4000eb3	       896	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_20
0x4000eb3	      0x4901442428	            add qword [r12 + 0x28], rax 	       896	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_20
0x4000eb8	          0x4889ef	                            mov rdi, rbp	       897	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_22
0x4000ebb	      0xe800000000	                          call 0x4000ec0	       897	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_22
0x4000ec0	          0x4889c7	                            mov rdi, rax	       897	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_22
0x4000ec3	      0xe800000000	                          call 0x4000ec8	       897	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_22
0x4000ec8	      0x4989442418	             mov qword [r12 + 0x18], rax	       897	write.c	FUNCTION_16	ELSE_1	IF_3	CALL_22
0x4000ecd	      0x4d8b642440	            mov r12, qword [r12 + 0x40] 	       792	write.c	FUNCTION_16	FOR_1
0x4000ed2	          0x4d85e4	                           test r12, r12	       792	write.c	FUNCTION_16	FOR_1
0x4000ed5	     0xf8571feffff	                           jne 0x4000d4c	       792	write.c	FUNCTION_16	FOR_1
0x4000edb	        0x4883c408	                              add rsp, 8	       905	write.c	FUNCTION_16
0x4000edf	              0x5b	                                 pop rbx	       905	write.c	FUNCTION_16
0x4000ee0	              0x5d	                                 pop rbp	       905	write.c	FUNCTION_16
0x4000ee1	            0x415c	                                 pop r12	       905	write.c	FUNCTION_16
0x4000ee3	            0x415d	                                 pop r13	       905	write.c	FUNCTION_16
0x4000ee5	            0xf3c3	                                     ret	       905	write.c	FUNCTION_16
fix_segment	CALL,2:FOR,0:SWITCH,0:WHILE,0:DO,0:functions,0:IF,0:ELSE,0	360
0x4001a3c	            0x4157	                                push r15	      1151	write.c	FUNCTION_18
0x4001a3e	            0x4156	                                push r14	      1151	write.c	FUNCTION_18
0x4001a40	            0x4155	                                push r13	      1151	write.c	FUNCTION_18
0x4001a42	            0x4154	                                push r12	      1151	write.c	FUNCTION_18
0x4001a44	              0x55	                                push rbp	      1151	write.c	FUNCTION_18
0x4001a45	              0x53	                                push rbx	      1151	write.c	FUNCTION_18
0x4001a46	    0x4881eca80000	                           sub rsp, 0xa8	      1151	write.c	FUNCTION_18
0x4001a4d	    0x64488b042528	                mov rax, qword fs:[0x28]	      1151	write.c	FUNCTION_18
0x4001a56	    0x488984249800	             mov qword [rsp + 0x98], rax	      1151	write.c	FUNCTION_18
0x4001a5e	            0x31c0	                            xor eax, eax	      1151	write.c	FUNCTION_18
0x4001a60	    0x488b86a80000	            mov rax, qword [rsi + 0xa8] 	      1154	write.c	FUNCTION_18	CALL_2
0x4001a67	        0x488b5810	            mov rbx, qword [rax + 0x10] 	      1154	write.c	FUNCTION_18	CALL_2
0x4001a6b	          0x4885db	                           test rbx, rbx	       923	write.c	FUNCTION_17	IF_1
0x4001a6e	     0xf846d050000	                            je 0x4001fe1	       923	write.c	FUNCTION_17	IF_1
0x4001a74	          0x4989f4	                            mov r12, rsi	       923	write.c	FUNCTION_17	IF_1
0x4001a77	    0x48833d000000	               cmp qword [0x04001a7f], 0	       923	write.c	FUNCTION_17	IF_1
0x4001a7f	     0xf8501050000	                           jne 0x4001f86	       923	write.c	FUNCTION_17	IF_1
0x4001a85	      0xbf00000000	                              mov edi, 0	       924	write.c	FUNCTION_17	CALL_1
0x4001a8a	      0xe800000000	                          call 0x4001a8f	       924	write.c	FUNCTION_17	CALL_1
0x4001a8f	    0x488905000000	            mov qword [0x04001a96], rax 	       924	write.c	FUNCTION_17	CALL_1
0x4001a96	      0xe9eb040000	                           jmp 0x4001f86	       924	write.c	FUNCTION_17	CALL_1
0x4001a9b	          0xf60320	                   test byte [rbx], 0x20	       933	write.c	FUNCTION_17	IF_2	FOR_1	IF_3
0x4001a9e	            0x7529	                           jne 0x4001ac9	       933	write.c	FUNCTION_17	IF_2	FOR_1	IF_3
0x4001aa0	      0x48837b1800	               cmp qword [rbx + 0x18], 0	       935	write.c	FUNCTION_17	IF_2	FOR_1	IF_3	IF_4
0x4001aa5	            0x750b	                           jne 0x4001ab2	       935	write.c	FUNCTION_17	IF_2	FOR_1	IF_3	IF_4
0x4001aa7	    0x488b05000000	            mov rax, qword [0x04001aae] 	       941	write.c	FUNCTION_17	IF_2	FOR_1	IF_3	IF_4
0x4001aae	        0x48894318	             mov qword [rbx + 0x18], rax	       941	write.c	FUNCTION_17	IF_2	FOR_1	IF_3	IF_4
0x4001ab2	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       943	write.c	FUNCTION_17	IF_2	FOR_1	IF_3	CALL_2
0x4001ab6	      0xe800000000	                          call 0x4001abb	       943	write.c	FUNCTION_17	IF_2	FOR_1	IF_3	CALL_2
0x4001abb	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	       944	write.c	FUNCTION_17	IF_2	FOR_1	IF_3	IF_5
0x4001abf	          0x4885ff	                           test rdi, rdi	       944	write.c	FUNCTION_17	IF_2	FOR_1	IF_3	IF_5
0x4001ac2	            0x7405	                            je 0x4001ac9	       944	write.c	FUNCTION_17	IF_2	FOR_1	IF_3	IF_5
0x4001ac4	      0xe800000000	                          call 0x4001ac9	       945	write.c	FUNCTION_17	IF_2	FOR_1	IF_3	CALL_3
0x4001ac9	        0x488b5b40	            mov rbx, qword [rbx + 0x40] 	       932	write.c	FUNCTION_17	IF_2	FOR_1
0x4001acd	          0x4885db	                           test rbx, rbx	       932	write.c	FUNCTION_17	IF_2	FOR_1
0x4001ad0	            0x75c9	                           jne 0x4001a9b	       932	write.c	FUNCTION_17	IF_2	FOR_1
0x4001ad2	      0xe90a050000	                           jmp 0x4001fe1	       932	write.c	FUNCTION_17	IF_2	FOR_1
0x4001ad7	        0x4c8b6b08	                mov r13, qword [rbx + 8]	       957	write.c	FUNCTION_17	FOR_2
0x4001adb	          0x4d85ed	                           test r13, r13	       958	write.c	FUNCTION_17	FOR_2	CALL_5
0x4001ade	            0x7514	                           jne 0x4001af4	       958	write.c	FUNCTION_17	FOR_2	CALL_5
0x4001ae0	      0xba00000000	                              mov edx, 0	       958	write.c	FUNCTION_17	FOR_2	CALL_5
0x4001ae5	      0xbebe030000	                          mov esi, 0x3be	       958	write.c	FUNCTION_17	FOR_2	CALL_5
0x4001aea	      0xbf00000000	                              mov edi, 0	       958	write.c	FUNCTION_17	FOR_2	CALL_5
0x4001aef	      0xe800000000	                          call 0x4001af4	       958	write.c	FUNCTION_17	FOR_2	CALL_5
0x4001af4	          0x4889df	                            mov rdi, rbx	       960	write.c	FUNCTION_17	FOR_2	CALL_6
0x4001af7	      0xe800000000	                          call 0x4001afc	       960	write.c	FUNCTION_17	FOR_2	CALL_6
0x4001afc	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       962	write.c	FUNCTION_17	FOR_2
0x4001b00	      0x4889442418	             mov qword [rsp + 0x18], rax	       962	write.c	FUNCTION_17	FOR_2
0x4001b05	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       964	write.c	FUNCTION_17	FOR_2	IF_6
0x4001b09	          0x4885ff	                           test rdi, rdi	       964	write.c	FUNCTION_17	FOR_2	IF_6
0x4001b0c	     0xf8483040000	                            je 0x4001f95	       964	write.c	FUNCTION_17	FOR_2	IF_6
0x4001b12	      0xe800000000	                          call 0x4001b17	       965	write.c	FUNCTION_17	FOR_2	CALL_7
0x4001b17	          0x4889c5	                            mov rbp, rax	       965	write.c	FUNCTION_17	FOR_2	CALL_7
0x4001b1a	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	       967	write.c	FUNCTION_17	FOR_2	IF_7
0x4001b1e	          0x4885ff	                           test rdi, rdi	       967	write.c	FUNCTION_17	FOR_2	IF_7
0x4001b21	     0xf8427020000	                            je 0x4001d4e	       967	write.c	FUNCTION_17	FOR_2	IF_7
0x4001b27	      0xe800000000	                          call 0x4001b2c	       970	write.c	FUNCTION_17	FOR_2	IF_7	CALL_8
0x4001b2c	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	       971	write.c	FUNCTION_17	FOR_2	IF_7	CALL_9
0x4001b30	      0xe800000000	                          call 0x4001b35	       971	write.c	FUNCTION_17	FOR_2	IF_7	CALL_9
0x4001b35	          0x4989c6	                            mov r14, rax	       971	write.c	FUNCTION_17	FOR_2	IF_7	CALL_9
0x4001b38	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       972	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x4001b3c	          0x4885ff	                           test rdi, rdi	       973	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x4001b3f	     0xf8490000000	                            je 0x4001bd5	       973	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x4001b45	          0x4839e8	                            cmp rax, rbp	       973	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x4001b48	     0xf8587000000	                           jne 0x4001bd5	       973	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x4001b4e	      0xbe00000000	                              mov esi, 0	       974	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_10
0x4001b53	      0xe800000000	                          call 0x4001b58	       974	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_10
0x4001b58	            0x85c0	                           test eax, eax	       974	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_10
0x4001b5a	            0x7579	                           jne 0x4001bd5	       974	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_10
0x4001b5c	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	       975	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_11
0x4001b60	      0xbe00000000	                              mov esi, 0	       975	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_11
0x4001b65	      0xe800000000	                          call 0x4001b6a	       975	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_11
0x4001b6a	    0x4881fd000000	                              cmp rbp, 0	       976	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x4001b71	           0xf95c2	                                setne dl	       976	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x4001b74	            0x85c0	                           test eax, eax	       976	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x4001b76	           0xf94c0	                                 sete al	       976	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x4001b79	            0x84c2	                             test dl, al	       976	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x4001b7b	            0x7458	                            je 0x4001bd5	       976	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x4001b7d	    0x4881fd000000	                              cmp rbp, 0	       976	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x4001b84	            0x744f	                            je 0x4001bd5	       976	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x4001b86	    0x48392d000000	            cmp qword [0x04001b8d], rbp 	       976	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x4001b8d	            0x7446	                            je 0x4001bd5	       976	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x4001b8f	    0x48392d000000	            cmp qword [0x04001b96], rbp 	       976	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x4001b96	            0x743d	                            je 0x4001bd5	       976	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x4001b98	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       978	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_12
0x4001b9c	      0xe800000000	                          call 0x4001ba1	       978	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_12
0x4001ba1	      0x4801442418	            add qword [rsp + 0x18], rax 	       978	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_12
0x4001ba6	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	       979	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_13
0x4001baa	      0xe800000000	                          call 0x4001baf	       979	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_13
0x4001baf	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       979	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_13
0x4001bb4	          0x4829c1	                            sub rcx, rax	       979	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_13
0x4001bb7	      0x48894c2418	             mov qword [rsp + 0x18], rcx	       979	write.c	FUNCTION_17	FOR_2	IF_7	IF_8	CALL_13
0x4001bbc	        0x48894b28	             mov qword [rbx + 0x28], rcx	       980	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x4001bc0	    0x48c743180000	               mov qword [rbx + 0x18], 0	       981	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x4001bc8	    0x48c743200000	               mov qword [rbx + 0x20], 0	       982	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x4001bd0	      0xe94a020000	                           jmp 0x4001e1f	       982	write.c	FUNCTION_17	FOR_2	IF_7	IF_8
0x4001bd5	    0x4981fe000000	                              cmp r14, 0	       988	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9
0x4001bdc	            0x7546	                           jne 0x4001c24	       988	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9
0x4001bde	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	       989	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9	CALL_14
0x4001be2	      0xbe00000000	                              mov esi, 0	       989	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9	CALL_14
0x4001be7	      0xe800000000	                          call 0x4001bec	       989	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9	CALL_14
0x4001bec	            0x85c0	                           test eax, eax	       989	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9	CALL_14
0x4001bee	            0x7534	                           jne 0x4001c24	       989	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9	CALL_14
0x4001bf0	    0x48392d000000	            cmp qword [0x04001bf7], rbp 	       990	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9
0x4001bf7	     0xf84d6030000	                            je 0x4001fd3	       990	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9
0x4001bfd	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	       992	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9	CALL_15
0x4001c01	      0xe800000000	                          call 0x4001c06	       992	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9	CALL_15
0x4001c06	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       992	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9	CALL_15
0x4001c0b	          0x4829c1	                            sub rcx, rax	       992	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9	CALL_15
0x4001c0e	      0x48894c2418	             mov qword [rsp + 0x18], rcx	       992	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9	CALL_15
0x4001c13	        0x48894b28	             mov qword [rbx + 0x28], rcx	       993	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9
0x4001c17	    0x48c743200000	               mov qword [rbx + 0x20], 0	       994	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9
0x4001c1f	      0xe92a010000	                           jmp 0x4001d4e	       994	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_1	IF_9
0x4001c24	          0x4d39f4	                            cmp r12, r14	       996	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x4001c27	            0x7568	                           jne 0x4001c91	       996	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x4001c29	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	       997	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	CALL_16
0x4001c2d	      0xbe00000000	                              mov esi, 0	       997	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	CALL_16
0x4001c32	      0xe800000000	                          call 0x4001c37	       997	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	CALL_16
0x4001c37	            0x85c0	                           test eax, eax	       997	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	CALL_16
0x4001c39	            0x7556	                           jne 0x4001c91	       997	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	CALL_16
0x4001c3b	    0x48392d000000	            cmp qword [0x04001c42], rbp 	       998	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x4001c42	            0x7472	                            je 0x4001cb6	       998	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x4001c44	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      1000	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	CALL_17
0x4001c48	      0xe800000000	                          call 0x4001c4d	      1000	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	CALL_17
0x4001c4d	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1000	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	CALL_17
0x4001c52	          0x4829c1	                            sub rcx, rax	      1000	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	CALL_17
0x4001c55	          0x4889c8	                            mov rax, rcx	      1000	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	CALL_17
0x4001c58	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      1000	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	CALL_17
0x4001c5d	        0x488b4b38	            mov rcx, qword [rbx + 0x38] 	      1002	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x4001c61	        0x488b5330	            mov rdx, qword [rbx + 0x30] 	      1001	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x4001c65	          0x480311	                    add rdx, qword [rcx]	      1001	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x4001c68	          0x4801d0	                            add rax, rdx	      1001	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x4001c6b	        0x48894328	             mov qword [rbx + 0x28], rax	      1001	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x4001c6f	          0xf60301	                      test byte [rbx], 1	      1007	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	IF_11
0x4001c72	            0x750d	                           jne 0x4001c81	      1007	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	IF_11
0x4001c74	          0x4889df	                            mov rdi, rbx	      1016	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	IF_11
0x4001c77	      0xe800000000	                          call 0x4001c7c	      1016	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	IF_11
0x4001c7c	      0x4801442418	            add qword [rsp + 0x18], rax 	      1016	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10	IF_11
0x4001c81	    0x48c743200000	               mov qword [rbx + 0x20], 0	      1017	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x4001c89	          0x800b01	                        or byte [rbx], 1	      1018	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x4001c8c	      0xe9bd000000	                           jmp 0x4001d4e	      1018	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x4001c91	    0x488b15000000	            mov rdx, qword [0x04001c98] 	      1020	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12
0x4001c98	          0x4839ea	                            cmp rdx, rbp	      1020	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12
0x4001c9b	            0x7419	                            je 0x4001cb6	      1020	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12
0x4001c9d	          0x8b4350	            mov eax, dword [rbx + 0x50] 	      1020	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12
0x4001ca0	          0x83e845	                           sub eax, 0x45	      1020	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12
0x4001ca3	          0x83f801	                              cmp eax, 1	      1020	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12
0x4001ca6	     0xf86a2000000	                           jbe 0x4001d4e	      1020	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12
0x4001cac	          0x4939d6	                            cmp r14, rdx	      1023	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	IF_13
0x4001caf	            0x7405	                            je 0x4001cb6	      1023	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	IF_13
0x4001cb1	          0x4839ea	                            cmp rdx, rbp	      1023	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	IF_13
0x4001cb4	            0x752a	                           jne 0x4001ce0	      1023	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	IF_13
0x4001cb6	      0xba05000000	                              mov edx, 5	      1026	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	CALL_19
0x4001cbb	      0xbe00000000	                              mov esi, 0	      1026	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	CALL_19
0x4001cc0	      0xbf00000000	                              mov edi, 0	      1026	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	CALL_19
0x4001cc5	      0xe800000000	                          call 0x4001cca	      1026	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	CALL_19
0x4001cca	          0x8b7368	            mov esi, dword [rbx + 0x68] 	      1025	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	IF_13	CALL_18
0x4001ccd	        0x488b7b60	            mov rdi, qword [rbx + 0x60] 	      1025	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	IF_13	CALL_18
0x4001cd1	          0x4889c2	                            mov rdx, rax	      1025	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	IF_13	CALL_18
0x4001cd4	      0xb800000000	                              mov eax, 0	      1025	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	IF_13	CALL_18
0x4001cd9	      0xe800000000	                          call 0x4001cde	      1025	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	IF_13	CALL_18
0x4001cde	            0xeb6e	                           jmp 0x4001d4e	      1025	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	IF_13	CALL_18
0x4001ce0	          0x4d8b3e	                    mov r15, qword [r14]	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_20
0x4001ce3	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_20
0x4001ce7	      0xe800000000	                          call 0x4001cec	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_20
0x4001cec	      0x4889442408	                mov qword [rsp + 8], rax	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_20
0x4001cf1	        0x4c8b7500	                    mov r14, qword [rbp]	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_20
0x4001cf5	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      1030	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_22
0x4001cf9	    0x48c704240000	                      mov qword [rsp], 0	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_20
0x4001d01	          0x4885ff	                           test rdi, rdi	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_20
0x4001d04	            0x7409	                            je 0x4001d0f	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_20
0x4001d06	      0xe800000000	                          call 0x4001d0b	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_20
0x4001d0b	        0x48890424	                    mov qword [rsp], rax	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_20
0x4001d0f	      0xba05000000	                              mov edx, 5	      1029	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_21
0x4001d14	      0xbe00000000	                              mov esi, 0	      1029	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_21
0x4001d19	      0xbf00000000	                              mov edi, 0	      1029	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_21
0x4001d1e	      0xe800000000	                          call 0x4001d23	      1029	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_21
0x4001d23	          0x8b7368	            mov esi, dword [rbx + 0x68] 	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_20
0x4001d26	        0x488b7b60	            mov rdi, qword [rbx + 0x60] 	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_20
0x4001d2a	        0x4883ec08	                              sub rsp, 8	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_20
0x4001d2e	            0x4157	                                push r15	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_20
0x4001d30	      0x4c8b4c2418	              mov r9, qword [rsp + 0x18]	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_20
0x4001d35	          0x4d89f0	                             mov r8, r14	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_20
0x4001d38	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_20
0x4001d3d	          0x4889c2	                            mov rdx, rax	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_20
0x4001d40	      0xb800000000	                              mov eax, 0	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_20
0x4001d45	      0xe800000000	                          call 0x4001d4a	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_20
0x4001d4a	        0x4883c410	                           add rsp, 0x10	      1028	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_3	IF_12	ELSE_4	CALL_20
0x4001d4e	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      1041	write.c	FUNCTION_17	FOR_2	IF_15
0x4001d52	          0x4885ff	                           test rdi, rdi	      1041	write.c	FUNCTION_17	FOR_2	IF_15
0x4001d55	     0xf84c4000000	                            je 0x4001e1f	      1041	write.c	FUNCTION_17	FOR_2	IF_15
0x4001d5b	          0x4939ec	                            cmp r12, rbp	      1043	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001d5e	            0x7579	                           jne 0x4001dd9	      1043	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001d60	      0xbe00000000	                              mov esi, 0	      1044	write.c	FUNCTION_17	FOR_2	IF_15	IF_16	CALL_27
0x4001d65	      0xe800000000	                          call 0x4001d6a	      1044	write.c	FUNCTION_17	FOR_2	IF_15	IF_16	CALL_27
0x4001d6a	            0x85c0	                           test eax, eax	      1044	write.c	FUNCTION_17	FOR_2	IF_15	IF_16	CALL_27
0x4001d6c	            0x756b	                           jne 0x4001dd9	      1044	write.c	FUNCTION_17	FOR_2	IF_15	IF_16	CALL_27
0x4001d6e	          0xf60301	                      test byte [rbx], 1	      1045	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001d71	     0xf8430020000	                            je 0x4001fa7	      1045	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001d77	          0x4889df	                            mov rdi, rbx	      1045	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001d7a	      0xe800000000	                          call 0x4001d7f	      1045	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001d7f	            0x85c0	                           test eax, eax	      1045	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001d81	            0x7556	                           jne 0x4001dd9	      1045	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001d83	          0x8b4350	            mov eax, dword [rbx + 0x50] 	      1045	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001d86	      0x2d65010000	                          sub eax, 0x165	      1045	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001d8b	          0x83f836	                           cmp eax, 0x36	      1045	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001d8e	            0x7710	                            ja 0x4001da0	      1045	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001d90	    0x48b941000000	           movabs rcx, 0x60000000000041 	      1045	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001d9a	        0x480fa3c1	                             bt rcx, rax	      1045	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001d9e	            0x7239	                            jb 0x4001dd9	      1045	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001da0	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      1050	write.c	FUNCTION_17	FOR_2	IF_15	IF_16	CALL_28
0x4001da4	      0xe800000000	                          call 0x4001da9	      1050	write.c	FUNCTION_17	FOR_2	IF_15	IF_16	CALL_28
0x4001da9	      0x4803442418	             add rax, qword [rsp + 0x18]	      1050	write.c	FUNCTION_17	FOR_2	IF_15	IF_16	CALL_28
0x4001dae	      0x4889442418	             mov qword [rsp + 0x18], rax	      1050	write.c	FUNCTION_17	FOR_2	IF_15	IF_16	CALL_28
0x4001db3	        0x48894328	             mov qword [rbx + 0x28], rax	      1051	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001db7	          0xf60301	                      test byte [rbx], 1	      1052	write.c	FUNCTION_17	FOR_2	IF_15	IF_16	IF_17
0x4001dba	            0x740d	                            je 0x4001dc9	      1052	write.c	FUNCTION_17	FOR_2	IF_15	IF_16	IF_17
0x4001dbc	          0x4889df	                            mov rdi, rbx	      1053	write.c	FUNCTION_17	FOR_2	IF_15	IF_16	IF_17
0x4001dbf	      0xe800000000	                          call 0x4001dc4	      1053	write.c	FUNCTION_17	FOR_2	IF_15	IF_16	IF_17
0x4001dc4	      0x4829442418	             sub qword [rsp + 0x18], rax	      1053	write.c	FUNCTION_17	FOR_2	IF_15	IF_16	IF_17
0x4001dc9	    0x48c743180000	               mov qword [rbx + 0x18], 0	      1054	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001dd1	          0x8023fe	                    and byte [rbx], 0xfe	      1055	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001dd4	          0x4c89e5	                            mov rbp, r12	      1055	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001dd7	            0xeb46	                           jmp 0x4001e1f	      1055	write.c	FUNCTION_17	FOR_2	IF_15	IF_16
0x4001dd9	    0x4881fd000000	                              cmp rbp, 0	      1057	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18
0x4001de0	            0x753d	                           jne 0x4001e1f	      1057	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18
0x4001de2	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      1058	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18	CALL_29
0x4001de6	      0xbe00000000	                              mov esi, 0	      1058	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18	CALL_29
0x4001deb	      0xe800000000	                          call 0x4001df0	      1058	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18	CALL_29
0x4001df0	            0x85c0	                           test eax, eax	      1058	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18	CALL_29
0x4001df2	            0x752b	                           jne 0x4001e1f	      1058	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18	CALL_29
0x4001df4	          0x4889df	                            mov rdi, rbx	      1059	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18
0x4001df7	      0xe800000000	                          call 0x4001dfc	      1059	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18
0x4001dfc	            0x85c0	                           test eax, eax	      1059	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18
0x4001dfe	            0x751f	                           jne 0x4001e1f	      1059	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18
0x4001e00	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      1061	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18	CALL_30
0x4001e04	      0xe800000000	                          call 0x4001e09	      1061	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18	CALL_30
0x4001e09	      0x4803442418	             add rax, qword [rsp + 0x18]	      1061	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18	CALL_30
0x4001e0e	      0x4889442418	             mov qword [rsp + 0x18], rax	      1061	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18	CALL_30
0x4001e13	        0x48894328	             mov qword [rbx + 0x28], rax	      1062	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18
0x4001e17	    0x48c743180000	               mov qword [rbx + 0x18], 0	      1063	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18
0x4001e1f	          0xf60301	                      test byte [rbx], 1	      1071	write.c	FUNCTION_17	FOR_2	IF_20
0x4001e22	            0x7426	                            je 0x4001e4a	      1071	write.c	FUNCTION_17	FOR_2	IF_20
0x4001e24	          0x4889df	                            mov rdi, rbx	      1073	write.c	FUNCTION_17	FOR_2	IF_20
0x4001e27	      0xe800000000	                          call 0x4001e2c	      1073	write.c	FUNCTION_17	FOR_2	IF_20
0x4001e2c	      0x4829442418	             sub qword [rsp + 0x18], rax	      1073	write.c	FUNCTION_17	FOR_2	IF_20
0x4001e31	          0xf60320	                   test byte [rbx], 0x20	      1074	write.c	FUNCTION_17	FOR_2	IF_20	IF_21
0x4001e34	            0x7557	                           jne 0x4001e8d	      1074	write.c	FUNCTION_17	FOR_2	IF_20	IF_21
0x4001e36	      0x48837b1800	               cmp qword [rbx + 0x18], 0	      1074	write.c	FUNCTION_17	FOR_2	IF_20	IF_21
0x4001e3b	            0x7512	                           jne 0x4001e4f	      1074	write.c	FUNCTION_17	FOR_2	IF_20	IF_21
0x4001e3d	    0x488b05000000	            mov rax, qword [0x04001e44] 	      1080	write.c	FUNCTION_17	FOR_2	IF_20	IF_21
0x4001e44	        0x48894318	             mov qword [rbx + 0x18], rax	      1080	write.c	FUNCTION_17	FOR_2	IF_20	IF_21
0x4001e48	            0xeb05	                           jmp 0x4001e4f	      1080	write.c	FUNCTION_17	FOR_2	IF_20	IF_21
0x4001e4a	          0xf60320	                   test byte [rbx], 0x20	      1084	write.c	FUNCTION_17	FOR_2	IF_22
0x4001e4d	            0x753e	                           jne 0x4001e8d	      1084	write.c	FUNCTION_17	FOR_2	IF_22
0x4001e4f	          0x4c89e2	                            mov rdx, r12	      1085	write.c	FUNCTION_17	FOR_2	CALL_32
0x4001e52	      0x488d742418	                   lea rsi, [rsp + 0x18]	      1085	write.c	FUNCTION_17	FOR_2	CALL_32
0x4001e57	          0x4889df	                            mov rdi, rbx	      1085	write.c	FUNCTION_17	FOR_2	CALL_32
0x4001e5a	      0xe800000000	                          call 0x4001e5f	      1085	write.c	FUNCTION_17	FOR_2	CALL_32
0x4001e5f	          0xf60320	                   test byte [rbx], 0x20	      1087	write.c	FUNCTION_17	FOR_2	IF_23
0x4001e62	            0x7529	                           jne 0x4001e8d	      1087	write.c	FUNCTION_17	FOR_2	IF_23
0x4001e64	      0x48837b1800	               cmp qword [rbx + 0x18], 0	      1089	write.c	FUNCTION_17	FOR_2	IF_23	IF_24
0x4001e69	            0x750b	                           jne 0x4001e76	      1089	write.c	FUNCTION_17	FOR_2	IF_23	IF_24
0x4001e6b	    0x488b05000000	            mov rax, qword [0x04001e72] 	      1090	write.c	FUNCTION_17	FOR_2	IF_23	IF_24
0x4001e72	        0x48894318	             mov qword [rbx + 0x18], rax	      1090	write.c	FUNCTION_17	FOR_2	IF_23	IF_24
0x4001e76	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      1091	write.c	FUNCTION_17	FOR_2	IF_23	CALL_33
0x4001e7a	      0xe800000000	                          call 0x4001e7f	      1091	write.c	FUNCTION_17	FOR_2	IF_23	CALL_33
0x4001e7f	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      1092	write.c	FUNCTION_17	FOR_2	IF_23	IF_25
0x4001e83	          0x4885ff	                           test rdi, rdi	      1092	write.c	FUNCTION_17	FOR_2	IF_23	IF_25
0x4001e86	            0x7405	                            je 0x4001e8d	      1092	write.c	FUNCTION_17	FOR_2	IF_23	IF_25
0x4001e88	      0xe800000000	                          call 0x4001e8d	      1093	write.c	FUNCTION_17	FOR_2	IF_23	CALL_34
0x4001e8d	      0x48837b4800	               cmp qword [rbx + 0x48], 0	      1096	write.c	FUNCTION_17	FOR_2	IF_26
0x4001e92	     0xf85df000000	                           jne 0x4001f77	      1096	write.c	FUNCTION_17	FOR_2	IF_26
0x4001e98	           0xfb603	                   movzx eax, byte [rbx]	      1096	write.c	FUNCTION_17	FOR_2	IF_26
0x4001e9b	            0xa840	                           test al, 0x40	      1096	write.c	FUNCTION_17	FOR_2	IF_26
0x4001e9d	     0xf85d4000000	                           jne 0x4001f77	      1096	write.c	FUNCTION_17	FOR_2	IF_26
0x4001ea3	         0xfb65302	               movzx edx, byte [rbx + 2]	      1096	write.c	FUNCTION_17	FOR_2	IF_26
0x4001ea7	          0x8d4aff	                      lea ecx, [rdx - 1]	      1098	write.c	FUNCTION_17	FOR_2	IF_26	IF_27
0x4001eaa	          0x80f906	                               cmp cl, 6	      1098	write.c	FUNCTION_17	FOR_2	IF_26	IF_27
0x4001ead	     0xf87c4000000	                            ja 0x4001f77	      1098	write.c	FUNCTION_17	FOR_2	IF_26	IF_27
0x4001eb3	           0xfb6ca	                           movzx ecx, dl	      1104	write.c	FUNCTION_17	FOR_2	IF_26	IF_27
0x4001eb6	          0xc1e103	                              shl ecx, 3	      1104	write.c	FUNCTION_17	FOR_2	IF_26	IF_27
0x4001eb9	           0xfbec0	                           movsx eax, al	      1104	write.c	FUNCTION_17	FOR_2	IF_26	IF_27
0x4001ebc	          0xc1e81f	                           shr eax, 0x1f	      1104	write.c	FUNCTION_17	FOR_2	IF_26	IF_27
0x4001ebf	            0x29c1	                            sub ecx, eax	      1104	write.c	FUNCTION_17	FOR_2	IF_26	IF_27
0x4001ec1	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      1104	write.c	FUNCTION_17	FOR_2	IF_26	IF_27
0x4001ec8	          0x48d3e0	                             shl rax, cl	      1104	write.c	FUNCTION_17	FOR_2	IF_26	IF_27
0x4001ecb	          0x4889c2	                            mov rdx, rax	      1105	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28
0x4001ece	      0x4823542418	             and rdx, qword [rsp + 0x18]	      1105	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28
0x4001ed3	          0x4839d0	                            cmp rax, rdx	      1105	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28
0x4001ed6	     0xf849b000000	                            je 0x4001f77	      1105	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28
0x4001edc	          0x4885d2	                           test rdx, rdx	      1105	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28
0x4001edf	     0xf8492000000	                            je 0x4001f77	      1105	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28
0x4001ee5	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	      1108	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_35
0x4001ee9	        0x49037500	                    add rsi, qword [r13]	      1108	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_35
0x4001eed	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1108	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_35
0x4001ef2	      0xe800000000	                          call 0x4001ef7	      1108	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_35
0x4001ef7	      0x4c8b442418	              mov r8, qword [rsp + 0x18]	      1109	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	IF_29
0x4001efc	    0x4981f8e80300	                           cmp r8, 0x3e8	      1109	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	IF_29
0x4001f03	            0x760f	                           jbe 0x4001f14	      1109	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	IF_29
0x4001f05	          0x4c89c6	                             mov rsi, r8	      1110	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_36
0x4001f08	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      1110	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_36
0x4001f0d	      0xe800000000	                          call 0x4001f12	      1110	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_36
0x4001f12	            0xeb1e	                           jmp 0x4001f32	      1110	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_36
0x4001f14	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_41	CALL_1
0x4001f19	      0xba32000000	                           mov edx, 0x32	        33	stdio2.h	FUNCTION_41	CALL_1
0x4001f1e	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_41	CALL_1
0x4001f23	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	        33	stdio2.h	FUNCTION_41	CALL_1
0x4001f28	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_41	CALL_1
0x4001f2d	      0xe800000000	                          call 0x4001f32	        33	stdio2.h	FUNCTION_41	CALL_1
0x4001f32	      0x440fb66b02	              movzx r13d, byte [rbx + 2]	      1119	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28
0x4001f37	        0x410fb6cd	                         movzx ecx, r13b	      1114	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_38
0x4001f3b	    0x41b805000000	                              mov r8d, 5	      1114	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_38
0x4001f41	      0xba00000000	                              mov edx, 0	      1114	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_38
0x4001f46	      0xbe00000000	                              mov esi, 0	      1114	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_38
0x4001f4b	      0xbf00000000	                              mov edi, 0	      1114	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_38
0x4001f50	      0xe800000000	                          call 0x4001f55	      1114	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_38
0x4001f55	          0x8b7368	            mov esi, dword [rbx + 0x68] 	      1113	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_37
0x4001f58	        0x488b7b60	            mov rdi, qword [rbx + 0x60] 	      1113	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_37
0x4001f5c	      0x4c8d4c2420	                    lea r9, [rsp + 0x20]	      1113	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_37
0x4001f61	        0x450fb6c5	                         movzx r8d, r13b	      1113	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_37
0x4001f65	      0x488d4c2460	                   lea rcx, [rsp + 0x60]	      1113	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_37
0x4001f6a	          0x4889c2	                            mov rdx, rax	      1113	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_37
0x4001f6d	      0xb800000000	                              mov eax, 0	      1113	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_37
0x4001f72	      0xe800000000	                          call 0x4001f77	      1113	write.c	FUNCTION_17	FOR_2	IF_26	IF_27	IF_28	CALL_37
0x4001f77	        0x488b5b40	            mov rbx, qword [rbx + 0x40] 	       950	write.c	FUNCTION_17	FOR_2
0x4001f7b	          0x4885db	                           test rbx, rbx	       950	write.c	FUNCTION_17	FOR_2
0x4001f7e	     0xf8553fbffff	                           jne 0x4001ad7	       950	write.c	FUNCTION_17	FOR_2
0x4001f84	            0xeb5b	                           jmp 0x4001fe1	       950	write.c	FUNCTION_17	FOR_2
0x4001f86	    0x833d00000000	               cmp dword [0x04001f8d], 0	       930	write.c	FUNCTION_17	IF_2
0x4001f8d	     0xf8508fbffff	                           jne 0x4001a9b	       930	write.c	FUNCTION_17	IF_2
0x4001f93	            0xeb27	                           jmp 0x4001fbc	       930	write.c	FUNCTION_17	IF_2
0x4001f95	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	       967	write.c	FUNCTION_17	FOR_2	IF_7
0x4001f99	          0x4885ff	                           test rdi, rdi	       967	write.c	FUNCTION_17	FOR_2	IF_7
0x4001f9c	     0xf8585fbffff	                           jne 0x4001b27	       967	write.c	FUNCTION_17	FOR_2	IF_7
0x4001fa2	      0xe978feffff	                           jmp 0x4001e1f	       967	write.c	FUNCTION_17	FOR_2	IF_7
0x4001fa7	    0x4981fc000000	                              cmp r12, 0	      1057	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18
0x4001fae	     0xf842efeffff	                            je 0x4001de2	      1057	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18
0x4001fb4	          0x4c89e5	                            mov rbp, r12	      1057	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18
0x4001fb7	      0xe98efeffff	                           jmp 0x4001e4a	      1057	write.c	FUNCTION_17	FOR_2	IF_15	ELSE_6	IF_18
0x4001fbc	        0x4c8b6b08	                mov r13, qword [rbx + 8]	       957	write.c	FUNCTION_17	FOR_2
0x4001fc0	          0x4d85ed	                           test r13, r13	       958	write.c	FUNCTION_17	FOR_2	CALL_5
0x4001fc3	     0xf8417fbffff	                            je 0x4001ae0	       958	write.c	FUNCTION_17	FOR_2	CALL_5
0x4001fc9	      0xbd00000000	                              mov ebp, 0	       958	write.c	FUNCTION_17	FOR_2	CALL_5
0x4001fce	      0xe921fbffff	                           jmp 0x4001af4	       958	write.c	FUNCTION_17	FOR_2	CALL_5
0x4001fd3	          0x4d39f4	                            cmp r12, r14	       996	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x4001fd6	     0xf85dafcffff	                           jne 0x4001cb6	       996	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x4001fdc	      0xe948fcffff	                           jmp 0x4001c29	       996	write.c	FUNCTION_17	FOR_2	IF_7	ELSE_2	IF_10
0x4001fe1	    0x488b84249800	            mov rax, qword [rsp + 0x98] 	      1155	write.c	FUNCTION_18
0x4001fe9	    0x644833042528	                xor rax, qword fs:[0x28]	      1155	write.c	FUNCTION_18
0x4001ff2	            0x7405	                            je 0x4001ff9	      1155	write.c	FUNCTION_18
0x4001ff4	      0xe800000000	                          call 0x4001ff9	      1155	write.c	FUNCTION_18
0x4001ff9	    0x4881c4a80000	                           add rsp, 0xa8	      1155	write.c	FUNCTION_18
0x4002000	              0x5b	                                 pop rbx	      1155	write.c	FUNCTION_18
0x4002001	              0x5d	                                 pop rbp	      1155	write.c	FUNCTION_18
0x4002002	            0x415c	                                 pop r12	      1155	write.c	FUNCTION_18
0x4002004	            0x415d	                                 pop r13	      1155	write.c	FUNCTION_18
0x4002006	            0x415e	                                 pop r14	      1155	write.c	FUNCTION_18
0x4002008	            0x415f	                                 pop r15	      1155	write.c	FUNCTION_18
0x400200a	              0xc3	                                     ret	      1155	write.c	FUNCTION_18
subsegs_finish_section	CALL,8:FOR,1:SWITCH,0:WHILE,1:DO,0:functions,0:IF,5:ELSE,1	64
0x4001281	    0x488b87a80000	            mov rax, qword [rdi + 0xa8] 	      1800	write.c	FUNCTION_28	CALL_1
0x4001288	          0x4885c0	                           test rax, rax	      1801	write.c	FUNCTION_28	IF_1
0x400128b	     0xf84df000000	                            je 0x4001370	      1801	write.c	FUNCTION_28	IF_1
0x4001291	            0x4154	                                push r12	      1798	write.c	FUNCTION_28
0x4001293	              0x55	                                push rbp	      1798	write.c	FUNCTION_28
0x4001294	              0x53	                                push rbx	      1798	write.c	FUNCTION_28
0x4001295	          0x4989fc	                            mov r12, rdi	      1798	write.c	FUNCTION_28
0x4001298	          0x488b28	                    mov rbp, qword [rax]	      1804	write.c	FUNCTION_28	FOR_1
0x400129b	          0x4885ed	                           test rbp, rbp	      1804	write.c	FUNCTION_28	FOR_1
0x400129e	     0xf84c8000000	                            je 0x400136c	      1804	write.c	FUNCTION_28	FOR_1
0x40012a4	          0x8b7518	            mov esi, dword [rbp + 0x18] 	      1810	write.c	FUNCTION_28	FOR_1	CALL_2
0x40012a7	          0x4c89e7	                            mov rdi, r12	      1810	write.c	FUNCTION_28	FOR_1	CALL_2
0x40012aa	      0xe800000000	                          call 0x40012af	      1810	write.c	FUNCTION_28	FOR_1	CALL_2
0x40012af	      0xe800000000	                          call 0x40012b4	      1815	write.c	FUNCTION_28	FOR_1	IF_2	CALL_3
0x40012b4	            0x85c0	                           test eax, eax	      1815	write.c	FUNCTION_28	FOR_1	IF_2	CALL_3
0x40012b6	            0x740a	                            je 0x40012c2	      1815	write.c	FUNCTION_28	FOR_1	IF_2	CALL_3
0x40012b8	    0xc70500000000	               mov dword [0x040012c2], 1	      1816	write.c	FUNCTION_28	FOR_1	IF_2
0x40012c2	    0x488b3d000000	            mov rdi, qword [0x040012c9] 	      1819	write.c	FUNCTION_28	FOR_1	IF_3
0x40012c9	      0xbb00000000	                              mov ebx, 0	      1818	write.c	FUNCTION_28	FOR_1
0x40012ce	        0xf6472280	           test byte [rdi + 0x22], 0x80 	      1819	write.c	FUNCTION_28	FOR_1	IF_3
0x40012d2	            0x742d	                            je 0x4001301	      1819	write.c	FUNCTION_28	FOR_1	IF_3
0x40012d4	    0x8b87c4000000	            mov eax, dword [rdi + 0xc4] 	      1820	write.c	FUNCTION_28	FOR_1	IF_3
0x40012da	            0x85c0	                           test eax, eax	      1820	write.c	FUNCTION_28	FOR_1	IF_3
0x40012dc	            0x7423	                            je 0x4001301	      1820	write.c	FUNCTION_28	FOR_1	IF_3
0x40012de	            0xa801	                              test al, 1	      1825	write.c	FUNCTION_28	FOR_1	IF_3	WHILE_1
0x40012e0	            0x7510	                           jne 0x40012f2	      1825	write.c	FUNCTION_28	FOR_1	IF_3	WHILE_1
0x40012e2	      0xba00000000	                              mov edx, 0	      1825	write.c	FUNCTION_28	FOR_1	IF_3	WHILE_1
0x40012e7	          0x83c201	                              add edx, 1	      1827	write.c	FUNCTION_28	FOR_1	IF_3	WHILE_1
0x40012ea	            0xd1e8	                              shr eax, 1	      1828	write.c	FUNCTION_28	FOR_1	IF_3	WHILE_1
0x40012ec	            0xa801	                              test al, 1	      1825	write.c	FUNCTION_28	FOR_1	IF_3	WHILE_1
0x40012ee	            0x74f7	                            je 0x40012e7	      1825	write.c	FUNCTION_28	FOR_1	IF_3	WHILE_1
0x40012f0	            0xeb05	                           jmp 0x40012f7	      1825	write.c	FUNCTION_28	FOR_1	IF_3	WHILE_1
0x40012f2	      0xba00000000	                              mov edx, 0	      1825	write.c	FUNCTION_28	FOR_1	IF_3	WHILE_1
0x40012f7	            0x85d2	                           test edx, edx	      1825	write.c	FUNCTION_28	FOR_1	IF_3	WHILE_1
0x40012f9	      0xbb00000000	                              mov ebx, 0	      1825	write.c	FUNCTION_28	FOR_1	IF_3	WHILE_1
0x40012fe	           0xf49da	                         cmovns ebx, edx	      1825	write.c	FUNCTION_28	FOR_1	IF_3	WHILE_1
0x4001301	      0xe800000000	                          call 0x4001306	      1835	write.c	FUNCTION_28	FOR_1	IF_5	CALL_4
0x4001306	            0x85c0	                           test eax, eax	      1835	write.c	FUNCTION_28	FOR_1	IF_5	CALL_4
0x4001308	            0x740e	                            je 0x4001318	      1835	write.c	FUNCTION_28	FOR_1	IF_5	CALL_4
0x400130a	      0xbe00000000	                              mov esi, 0	      1836	write.c	FUNCTION_28	FOR_1	CALL_5
0x400130f	            0x89df	                            mov edi, ebx	      1836	write.c	FUNCTION_28	FOR_1	CALL_5
0x4001311	      0xe800000000	                          call 0x4001316	      1836	write.c	FUNCTION_28	FOR_1	CALL_5
0x4001316	            0xeb11	                           jmp 0x4001329	      1836	write.c	FUNCTION_28	FOR_1	CALL_5
0x4001318	      0xba00000000	                              mov edx, 0	      1838	write.c	FUNCTION_28	FOR_1	CALL_6
0x400131d	      0xbe00000000	                              mov esi, 0	      1838	write.c	FUNCTION_28	FOR_1	CALL_6
0x4001322	            0x89df	                            mov edi, ebx	      1838	write.c	FUNCTION_28	FOR_1	CALL_6
0x4001324	      0xe800000000	                          call 0x4001329	      1838	write.c	FUNCTION_28	FOR_1	CALL_6
0x4001329	    0x488b3d000000	            mov rdi, qword [0x04001330] 	      1845	write.c	FUNCTION_28	FOR_1	CALL_7
0x4001330	      0xe800000000	                          call 0x4001335	      1845	write.c	FUNCTION_28	FOR_1	CALL_7
0x4001335	    0x488b05000000	            mov rax, qword [0x0400133c] 	      1846	write.c	FUNCTION_28	FOR_1
0x400133c	    0x48c740100000	               mov qword [rax + 0x10], 0	      1846	write.c	FUNCTION_28	FOR_1
0x4001344	      0x4883783800	               cmp qword [rax + 0x38], 0	      1847	write.c	FUNCTION_28	FOR_1	CALL_8
0x4001349	            0x7414	                            je 0x400135f	      1847	write.c	FUNCTION_28	FOR_1	CALL_8
0x400134b	      0xba00000000	                              mov edx, 0	      1847	write.c	FUNCTION_28	FOR_1	CALL_8
0x4001350	      0xbe37070000	                          mov esi, 0x737	      1847	write.c	FUNCTION_28	FOR_1	CALL_8
0x4001355	      0xbf00000000	                              mov edi, 0	      1847	write.c	FUNCTION_28	FOR_1	CALL_8
0x400135a	      0xe800000000	                          call 0x400135f	      1847	write.c	FUNCTION_28	FOR_1	CALL_8
0x400135f	        0x488b6d10	            mov rbp, qword [rbp + 0x10] 	      1806	write.c	FUNCTION_28	FOR_1
0x4001363	          0x4885ed	                           test rbp, rbp	      1804	write.c	FUNCTION_28	FOR_1
0x4001366	     0xf8538ffffff	                           jne 0x40012a4	      1804	write.c	FUNCTION_28	FOR_1
0x400136c	              0x5b	                                 pop rbx	      1849	write.c	FUNCTION_28
0x400136d	              0x5d	                                 pop rbp	      1849	write.c	FUNCTION_28
0x400136e	            0x415c	                                 pop r12	      1849	write.c	FUNCTION_28
0x4001370	            0xf3c3	                                     ret	      1849	write.c	FUNCTION_28
append	CALL,1:FOR,0:SWITCH,0:WHILE,0:DO,0:functions,0:IF,1:ELSE,0	14
0x400200b	          0x4885d2	                           test rdx, rdx	       342	write.c	FUNCTION_6	IF_1
0x400200e	            0x741e	                            je 0x400202e	       342	write.c	FUNCTION_6	IF_1
0x4002010	              0x55	                                push rbp	       340	write.c	FUNCTION_6
0x4002011	              0x53	                                push rbx	       340	write.c	FUNCTION_6
0x4002012	        0x4883ec08	                              sub rsp, 8	       340	write.c	FUNCTION_6
0x4002016	          0x4889d3	                            mov rbx, rdx	       340	write.c	FUNCTION_6
0x4002019	          0x4889fd	                            mov rbp, rdi	       340	write.c	FUNCTION_6
0x400201c	          0x488b3f	                    mov rdi, qword [rdi]	        53	string3.h	FUNCTION_58	CALL_3
0x400201f	      0xe800000000	                          call 0x4002024	        53	string3.h	FUNCTION_58	CALL_3
0x4002024	        0x48015d00	                    add qword [rbp], rbx	       346	write.c	FUNCTION_6
0x4002028	        0x4883c408	                              add rsp, 8	       347	write.c	FUNCTION_6
0x400202c	              0x5b	                                 pop rbx	       347	write.c	FUNCTION_6
0x400202d	              0x5d	                                 pop rbp	       347	write.c	FUNCTION_6
0x400202e	            0xf3c3	                                     ret	       347	write.c	FUNCTION_6
create_note_reloc	CALL,7:FOR,0:SWITCH,0:WHILE,0:DO,0:functions,0:IF,4:ELSE,2	70
0x4001372	            0x4157	                                push r15	      1900	write.c	FUNCTION_31
0x4001374	            0x4156	                                push r14	      1900	write.c	FUNCTION_31
0x4001376	            0x4155	                                push r13	      1900	write.c	FUNCTION_31
0x4001378	            0x4154	                                push r12	      1900	write.c	FUNCTION_31
0x400137a	              0x55	                                push rbp	      1900	write.c	FUNCTION_31
0x400137b	              0x53	                                push rbx	      1900	write.c	FUNCTION_31
0x400137c	        0x4883ec18	                           sub rsp, 0x18	      1900	write.c	FUNCTION_31
0x4001380	          0x4889fd	                            mov rbp, rdi	      1900	write.c	FUNCTION_31
0x4001383	          0x4989f6	                            mov r14, rsi	      1900	write.c	FUNCTION_31
0x4001386	          0x4989d4	                            mov r12, rdx	      1900	write.c	FUNCTION_31
0x4001389	        0x894c240c	              mov dword [rsp + 0xc], ecx	      1900	write.c	FUNCTION_31
0x400138d	          0x4d89c5	                             mov r13, r8	      1900	write.c	FUNCTION_31
0x4001390	          0x4d89cf	                             mov r15, r9	      1900	write.c	FUNCTION_31
0x4001393	      0xbf48000000	                           mov edi, 0x48	      1903	write.c	FUNCTION_31	CALL_1
0x4001398	      0xe800000000	                          call 0x400139d	      1903	write.c	FUNCTION_31	CALL_1
0x400139d	          0x4889c3	                            mov rbx, rax	      1903	write.c	FUNCTION_31	CALL_1
0x40013a0	        0x48896808	                mov qword [rax + 8], rbp	      1906	write.c	FUNCTION_31
0x40013a4	        0x498b4608	                mov rax, qword [r14 + 8]	      1907	write.c	FUNCTION_31
0x40013a8	        0x48894310	             mov qword [rbx + 0x10], rax	      1907	write.c	FUNCTION_31
0x40013ac	        0x488d4310	                   lea rax, [rbx + 0x10]	      1908	write.c	FUNCTION_31
0x40013b0	        0x48894318	             mov qword [rbx + 0x18], rax	      1908	write.c	FUNCTION_31
0x40013b4	        0x4c896320	             mov qword [rbx + 0x20], r12	      1909	write.c	FUNCTION_31
0x40013b8	        0x4c896b28	             mov qword [rbx + 0x28], r13	      1910	write.c	FUNCTION_31
0x40013bc	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      1911	write.c	FUNCTION_31	CALL_2
0x40013c0	    0x488b3d000000	            mov rdi, qword [0x040013c7] 	      1911	write.c	FUNCTION_31	CALL_2
0x40013c7	      0xe800000000	                          call 0x40013cc	      1911	write.c	FUNCTION_31	CALL_2
0x40013cc	        0x48894330	             mov qword [rbx + 0x30], rax	      1911	write.c	FUNCTION_31	CALL_2
0x40013d0	          0x4885c0	                           test rax, rax	      1913	write.c	FUNCTION_31	IF_1
0x40013d3	            0x7523	                           jne 0x40013f8	      1913	write.c	FUNCTION_31	IF_1
0x40013d5	      0xba05000000	                              mov edx, 5	      1915	write.c	FUNCTION_31	IF_1	CALL_4
0x40013da	      0xbe00000000	                              mov esi, 0	      1915	write.c	FUNCTION_31	IF_1	CALL_4
0x40013df	      0xbf00000000	                              mov edi, 0	      1915	write.c	FUNCTION_31	IF_1	CALL_4
0x40013e4	      0xe800000000	                          call 0x40013e9	      1915	write.c	FUNCTION_31	IF_1	CALL_4
0x40013e9	          0x4889c7	                            mov rdi, rax	      1915	write.c	FUNCTION_31	IF_1	CALL_4
0x40013ec	      0xb800000000	                              mov eax, 0	      1915	write.c	FUNCTION_31	IF_1	CALL_4
0x40013f1	      0xe800000000	                          call 0x40013f6	      1915	write.c	FUNCTION_31	IF_1	CALL_4
0x40013f6	            0xeb6f	                           jmp 0x4001467	      1916	write.c	FUNCTION_31	IF_1
0x40013f8	    0x48c743380000	               mov qword [rbx + 0x38], 0	      1919	write.c	FUNCTION_31	CALL_5
0x4001400	    0xc74340000000	               mov dword [rbx + 0x40], 0	      1920	write.c	FUNCTION_31
0x4001407	    0x488b05000000	            mov rax, qword [0x0400140e] 	      1922	write.c	FUNCTION_31
0x400140e	          0x488903	                    mov qword [rbx], rax	      1922	write.c	FUNCTION_31
0x4001411	    0x48891d000000	            mov qword [0x04001418], rbx 	      1923	write.c	FUNCTION_31
0x4001418	        0xf6452504	               test byte [rbp + 0x25], 4	      1926	write.c	FUNCTION_31	IF_2
0x400141c	            0x741d	                            je 0x400143b	      1926	write.c	FUNCTION_31	IF_2
0x400141e	    0x488b05000000	            mov rax, qword [0x04001425] 	      1929	write.c	FUNCTION_31	IF_2	CALL_6
0x4001425	        0x488b4008	                mov rax, qword [rax + 8]	      1929	write.c	FUNCTION_31	IF_2	CALL_6
0x4001429	      0xbe00000000	                              mov esi, 0	      1929	write.c	FUNCTION_31	IF_2	CALL_6
0x400142e	          0x488b38	                    mov rdi, qword [rax]	      1929	write.c	FUNCTION_31	IF_2	CALL_6
0x4001431	      0xe800000000	                          call 0x4001436	      1929	write.c	FUNCTION_31	IF_2	CALL_6
0x4001436	          0x4885c0	                           test rax, rax	      1929	write.c	FUNCTION_31	IF_2	CALL_6
0x4001439	            0x742c	                            je 0x4001467	      1929	write.c	FUNCTION_31	IF_2	CALL_6
0x400143b	    0x833d00000000	               cmp dword [0x04001442], 0	      1931	write.c	FUNCTION_31	IF_2	IF_3
0x4001442	            0x741f	                            je 0x4001463	      1931	write.c	FUNCTION_31	IF_2	IF_3
0x4001444	    0x488b3d000000	            mov rdi, qword [0x0400144b] 	      1933	write.c	FUNCTION_31	IF_2	IF_3	IF_4	CALL_7
0x400144b	      0xe800000000	                          call 0x4001450	      1933	write.c	FUNCTION_31	IF_2	IF_3	IF_4	CALL_7
0x4001450	          0x83f820	                           cmp eax, 0x20	      1933	write.c	FUNCTION_31	IF_2	IF_3	IF_4	CALL_7
0x4001453	            0x7707	                            ja 0x400145c	      1933	write.c	FUNCTION_31	IF_2	IF_3	IF_4	CALL_7
0x4001455	      0x47886c2703	          mov byte [r15 + r12 + 3], r13b	      1934	write.c	FUNCTION_31	IF_2	IF_3	IF_4
0x400145a	            0xeb0b	                           jmp 0x4001467	      1934	write.c	FUNCTION_31	IF_2	IF_3	IF_4
0x400145c	      0x47886c2707	          mov byte [r15 + r12 + 7], r13b	      1936	write.c	FUNCTION_31	IF_2	IF_3	ELSE_1
0x4001461	            0xeb04	                           jmp 0x4001467	      1936	write.c	FUNCTION_31	IF_2	IF_3	ELSE_1
0x4001463	        0x47882c27	              mov byte [r15 + r12], r13b	      1939	write.c	FUNCTION_31	IF_2	ELSE_1	ELSE_2
0x4001467	        0x4883c418	                           add rsp, 0x18	      1941	write.c	FUNCTION_31	ELSE_1	ELSE_2
0x400146b	              0x5b	                                 pop rbx	      1941	write.c	FUNCTION_31	ELSE_1	ELSE_2
0x400146c	              0x5d	                                 pop rbp	      1941	write.c	FUNCTION_31	ELSE_1	ELSE_2
0x400146d	            0x415c	                                 pop r12	      1941	write.c	FUNCTION_31	ELSE_1	ELSE_2
0x400146f	            0x415d	                                 pop r13	      1941	write.c	FUNCTION_31	ELSE_1	ELSE_2
0x4001471	            0x415e	                                 pop r14	      1941	write.c	FUNCTION_31	ELSE_1	ELSE_2
0x4001473	            0x415f	                                 pop r15	      1941	write.c	FUNCTION_31	ELSE_1	ELSE_2
0x4001475	              0xc3	                                     ret	      1941	write.c	FUNCTION_31	ELSE_1	ELSE_2
