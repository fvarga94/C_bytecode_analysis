next_brace_sub	DO,0:ELSE,1:IF,4:WHILE,1:SWITCH,0:FOR,0:CALL,0:functions,0	42
0x4000040	      0xb800000000	                              mov eax, 0	       295	glob.c	FUNCTION_9
0x4000045	          0xc1ee06	                              shr esi, 6	       297	glob.c	FUNCTION_9	WHILE_1	IF_1
0x4000048	          0x83f601	                              xor esi, 1	       297	glob.c	FUNCTION_9	WHILE_1	IF_1
0x400004b	          0x83e601	                              and esi, 1	       297	glob.c	FUNCTION_9	WHILE_1	IF_1
0x400004e	            0xeb40	                           jmp 0x4000090	       296	glob.c	FUNCTION_9	WHILE_1
0x4000050	          0x4084f6	                           test sil, sil	       297	glob.c	FUNCTION_9	WHILE_1	IF_1
0x4000053	            0x7411	                            je 0x4000066	       297	glob.c	FUNCTION_9	WHILE_1	IF_1
0x4000055	          0x80fa5c	                            cmp dl, 0x5c	       297	glob.c	FUNCTION_9	WHILE_1	IF_1
0x4000058	            0x750c	                           jne 0x4000066	       297	glob.c	FUNCTION_9	WHILE_1	IF_1
0x400005a	        0x807f0100	                   cmp byte [rdi + 1], 0	       299	glob.c	FUNCTION_9	WHILE_1	IF_1	IF_2
0x400005e	            0x743d	                            je 0x400009d	       299	glob.c	FUNCTION_9	WHILE_1	IF_1	IF_2
0x4000060	        0x4883c702	                              add rdi, 2	       301	glob.c	FUNCTION_9	WHILE_1	IF_1
0x4000064	            0xeb2a	                           jmp 0x4000090	       301	glob.c	FUNCTION_9	WHILE_1	IF_1
0x4000066	          0x80fa7d	                            cmp dl, 0x7d	       305	glob.c	FUNCTION_9	ELSE_1	IF_3
0x4000069	            0x750b	                           jne 0x4000076	       305	glob.c	FUNCTION_9	ELSE_1	IF_3
0x400006b	        0x488d50ff	                      lea rdx, [rax - 1]	       305	glob.c	FUNCTION_9	ELSE_1	IF_3
0x400006f	          0x4885c0	                           test rax, rax	       305	glob.c	FUNCTION_9	ELSE_1	IF_3
0x4000072	            0x7537	                           jne 0x40000ab	       305	glob.c	FUNCTION_9	ELSE_1	IF_3
0x4000074	            0xeb2d	                           jmp 0x40000a3	       305	glob.c	FUNCTION_9	ELSE_1	IF_3
0x4000076	          0x4885c0	                           test rax, rax	       305	glob.c	FUNCTION_9	ELSE_1	IF_3
0x4000079	            0x7505	                           jne 0x4000080	       305	glob.c	FUNCTION_9	ELSE_1	IF_3
0x400007b	          0x80fa2c	                            cmp dl, 0x2c	       305	glob.c	FUNCTION_9	ELSE_1	IF_3
0x400007e	            0x7427	                            je 0x40000a7	       305	glob.c	FUNCTION_9	ELSE_1	IF_3
0x4000080	        0x4883c701	                              add rdi, 1	       308	glob.c	FUNCTION_9	ELSE_1	IF_4
0x4000084	          0x80fa7b	                            cmp dl, 0x7b	       309	glob.c	FUNCTION_9	ELSE_1	IF_4
0x4000087	           0xf94c2	                                 sete dl	       309	glob.c	FUNCTION_9	ELSE_1	IF_4
0x400008a	           0xfb6d2	                           movzx edx, dl	       309	glob.c	FUNCTION_9	ELSE_1	IF_4
0x400008d	          0x4801d0	                            add rax, rdx	       309	glob.c	FUNCTION_9	ELSE_1	IF_4
0x4000090	           0xfb617	                   movzx edx, byte [rdi]	       296	glob.c	FUNCTION_9	WHILE_1
0x4000093	            0x84d2	                             test dl, dl	       296	glob.c	FUNCTION_9	WHILE_1
0x4000095	            0x75b9	                           jne 0x4000050	       296	glob.c	FUNCTION_9	WHILE_1
0x4000097	      0xb800000000	                              mov eax, 0	       312	glob.c	FUNCTION_9
0x400009c	              0xc3	                                     ret	       312	glob.c	FUNCTION_9
0x400009d	      0xb800000000	                              mov eax, 0	       312	glob.c	FUNCTION_9
0x40000a2	              0xc3	                                     ret	       312	glob.c	FUNCTION_9
0x40000a3	          0x4889f8	                            mov rax, rdi	       312	glob.c	FUNCTION_9
0x40000a6	              0xc3	                                     ret	       312	glob.c	FUNCTION_9
0x40000a7	          0x4889f8	                            mov rax, rdi	       312	glob.c	FUNCTION_9
0x40000aa	              0xc3	                                     ret	       312	glob.c	FUNCTION_9
0x40000ab	        0x4883c701	                              add rdi, 1	       308	glob.c	FUNCTION_9	ELSE_1	IF_4
0x40000af	          0x4889d0	                            mov rax, rdx	       305	glob.c	FUNCTION_9	ELSE_1	IF_3
0x40000b2	            0xebdc	                           jmp 0x4000090	       305	glob.c	FUNCTION_9	ELSE_1	IF_3
prefix_array	DO,0:ELSE,2:IF,5:WHILE,1:SWITCH,0:FOR,1:CALL,7:functions,0	77
0x40000eb	            0x4157	                                push r15	      1391	glob.c	FUNCTION_13
0x40000ed	            0x4156	                                push r14	      1391	glob.c	FUNCTION_13
0x40000ef	            0x4155	                                push r13	      1391	glob.c	FUNCTION_13
0x40000f1	            0x4154	                                push r12	      1391	glob.c	FUNCTION_13
0x40000f3	              0x55	                                push rbp	      1391	glob.c	FUNCTION_13
0x40000f4	              0x53	                                push rbx	      1391	glob.c	FUNCTION_13
0x40000f5	        0x4883ec28	                           sub rsp, 0x28	      1391	glob.c	FUNCTION_13
0x40000f9	          0x4989f8	                             mov r8, rdi	      1391	glob.c	FUNCTION_13
0x40000fc	      0xb800000000	                              mov eax, 0	      1393	glob.c	FUNCTION_13	CALL_1
0x4000101	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1393	glob.c	FUNCTION_13	CALL_1
0x4000108	            0xf2ae	              repne scasb al, byte [rdi]	      1393	glob.c	FUNCTION_13	CALL_1
0x400010a	          0x48f7d1	                                 not rcx	      1393	glob.c	FUNCTION_13	CALL_1
0x400010d	        0x488d41ff	                      lea rax, [rcx - 1]	      1393	glob.c	FUNCTION_13	CALL_1
0x4000111	      0x4889442408	                mov qword [rsp + 8], rax	      1393	glob.c	FUNCTION_13	CALL_1
0x4000116	        0x4883f801	                              cmp rax, 1	      1401	glob.c	FUNCTION_13	IF_1
0x400011a	            0x750f	                           jne 0x400012b	      1401	glob.c	FUNCTION_13	IF_1
0x400011c	        0x4180382f	                     cmp byte [r8], 0x2f	      1393	glob.c	FUNCTION_13	CALL_1
0x4000120	           0xf95c0	                                setne al	      1393	glob.c	FUNCTION_13	CALL_1
0x4000123	           0xfb6c0	                           movzx eax, al	      1393	glob.c	FUNCTION_13	CALL_1
0x4000126	      0x4889442408	                mov qword [rsp + 8], rax	      1393	glob.c	FUNCTION_13	CALL_1
0x400012b	          0x4885d2	                           test rdx, rdx	      1420	glob.c	FUNCTION_13	FOR_1
0x400012e	     0xf84ab000000	                            je 0x40001df	      1420	glob.c	FUNCTION_13	FOR_1
0x4000134	      0x4889542418	             mov qword [rsp + 0x18], rdx	      1420	glob.c	FUNCTION_13	FOR_1
0x4000139	          0x4989f6	                            mov r14, rsi	      1420	glob.c	FUNCTION_13	FOR_1
0x400013c	      0x4c89442410	              mov qword [rsp + 0x10], r8	      1420	glob.c	FUNCTION_13	FOR_1
0x4000141	      0xbb00000000	                              mov ebx, 0	      1420	glob.c	FUNCTION_13	FOR_1
0x4000146	      0x488b442408	                mov rax, qword [rsp + 8]	      1423	glob.c	FUNCTION_13	FOR_1	CALL_3
0x400014b	        0x4c8d7801	                      lea r15, [rax + 1]	      1423	glob.c	FUNCTION_13	FOR_1	CALL_3
0x400014f	        0x4d8b2cde	            mov r13, qword [r14 + rbx*8]	      1422	glob.c	FUNCTION_13	FOR_1	CALL_2
0x4000153	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1422	glob.c	FUNCTION_13	FOR_1	CALL_2
0x400015a	          0x4c89ef	                            mov rdi, r13	      1422	glob.c	FUNCTION_13	FOR_1	CALL_2
0x400015d	      0xb800000000	                              mov eax, 0	      1422	glob.c	FUNCTION_13	FOR_1	CALL_2
0x4000162	            0xf2ae	              repne scasb al, byte [rdi]	      1422	glob.c	FUNCTION_13	FOR_1	CALL_2
0x4000164	          0x48f7d1	                                 not rcx	      1422	glob.c	FUNCTION_13	FOR_1	CALL_2
0x4000167	          0x4889cd	                            mov rbp, rcx	      1422	glob.c	FUNCTION_13	FOR_1	CALL_2
0x400016a	        0x498d3c0f	                    lea rdi, [r15 + rcx]	      1423	glob.c	FUNCTION_13	FOR_1	CALL_3
0x400016e	      0xe800000000	                          call 0x4000173	      1423	glob.c	FUNCTION_13	FOR_1	CALL_3
0x4000173	          0x4989c4	                            mov r12, rax	      1423	glob.c	FUNCTION_13	FOR_1	CALL_3
0x4000176	          0x4885c0	                           test rax, rax	      1424	glob.c	FUNCTION_13	FOR_1	IF_5
0x4000179	            0x751e	                           jne 0x4000199	      1424	glob.c	FUNCTION_13	FOR_1	IF_5
0x400017b	          0x4885db	                           test rbx, rbx	      1426	glob.c	FUNCTION_13	FOR_1	IF_5	WHILE_1
0x400017e	            0x7466	                            je 0x40001e6	      1426	glob.c	FUNCTION_13	FOR_1	IF_5	WHILE_1
0x4000180	        0x4883eb01	                              sub rbx, 1	      1427	glob.c	FUNCTION_13	FOR_1	IF_5	CALL_4
0x4000184	        0x498b3cde	            mov rdi, qword [r14 + rbx*8]	      1427	glob.c	FUNCTION_13	FOR_1	IF_5	CALL_4
0x4000188	      0xe800000000	                          call 0x400018d	      1427	glob.c	FUNCTION_13	FOR_1	IF_5	CALL_4
0x400018d	          0x4885db	                           test rbx, rbx	      1426	glob.c	FUNCTION_13	FOR_1	IF_5	WHILE_1
0x4000190	            0x75ee	                           jne 0x4000180	      1426	glob.c	FUNCTION_13	FOR_1	IF_5	WHILE_1
0x4000192	      0xb801000000	                              mov eax, 1	      1428	glob.c	FUNCTION_13	FOR_1	IF_5
0x4000197	            0xeb52	                           jmp 0x40001eb	      1428	glob.c	FUNCTION_13	FOR_1	IF_5
0x4000199	      0x488b542408	                mov rdx, qword [rsp + 8]	        67	string3.h	FUNCTION_20	CALL_3
0x400019e	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	        67	string3.h	FUNCTION_20	CALL_3
0x40001a3	          0x4889c7	                            mov rdi, rax	        67	string3.h	FUNCTION_20	CALL_3
0x40001a6	      0xe800000000	                          call 0x40001ab	        67	string3.h	FUNCTION_20	CALL_3
0x40001ab	          0xc6002f	                    mov byte [rax], 0x2f	      1433	glob.c	FUNCTION_13	FOR_1
0x40001ae	        0x488d7801	                      lea rdi, [rax + 1]	        67	string3.h	FUNCTION_20	CALL_3
0x40001b2	          0x4889ea	                            mov rdx, rbp	        67	string3.h	FUNCTION_20	CALL_3
0x40001b5	          0x4c89ee	                            mov rsi, r13	        67	string3.h	FUNCTION_20	CALL_3
0x40001b8	      0xe800000000	                          call 0x40001bd	        67	string3.h	FUNCTION_20	CALL_3
0x40001bd	          0x4c89ef	                            mov rdi, r13	      1436	glob.c	FUNCTION_13	FOR_1	CALL_7
0x40001c0	      0xe800000000	                          call 0x40001c5	      1436	glob.c	FUNCTION_13	FOR_1	CALL_7
0x40001c5	        0x4d8924de	            mov qword [r14 + rbx*8], r12	      1437	glob.c	FUNCTION_13	FOR_1
0x40001c9	        0x4883c301	                              add rbx, 1	      1420	glob.c	FUNCTION_13	FOR_1
0x40001cd	      0x48395c2418	            cmp qword [rsp + 0x18], rbx 	      1420	glob.c	FUNCTION_13	FOR_1
0x40001d2	     0xf8577ffffff	                           jne 0x400014f	      1420	glob.c	FUNCTION_13	FOR_1
0x40001d8	      0xb800000000	                              mov eax, 0	      1440	glob.c	FUNCTION_13
0x40001dd	            0xeb0c	                           jmp 0x40001eb	      1440	glob.c	FUNCTION_13
0x40001df	      0xb800000000	                              mov eax, 0	      1440	glob.c	FUNCTION_13
0x40001e4	            0xeb05	                           jmp 0x40001eb	      1440	glob.c	FUNCTION_13
0x40001e6	      0xb801000000	                              mov eax, 1	      1428	glob.c	FUNCTION_13	FOR_1	IF_5
0x40001eb	        0x4883c428	                           add rsp, 0x28	      1441	glob.c	FUNCTION_13
0x40001ef	              0x5b	                                 pop rbx	      1441	glob.c	FUNCTION_13
0x40001f0	              0x5d	                                 pop rbp	      1441	glob.c	FUNCTION_13
0x40001f1	            0x415c	                                 pop r12	      1441	glob.c	FUNCTION_13
0x40001f3	            0x415d	                                 pop r13	      1441	glob.c	FUNCTION_13
0x40001f5	            0x415e	                                 pop r14	      1441	glob.c	FUNCTION_13
0x40001f7	            0x415f	                                 pop r15	      1441	glob.c	FUNCTION_13
0x40001f9	              0xc3	                                     ret	      1441	glob.c	FUNCTION_13
__glob_pattern_type	DO,0:ELSE,0:IF,3:WHILE,0:SWITCH,1:FOR,1:CALL,0:functions,0	45
0x40002f4	           0xfb617	                   movzx edx, byte [rdi]	      1452	glob.c	FUNCTION_14	FOR_1
0x40002f7	            0x84d2	                             test dl, dl	      1452	glob.c	FUNCTION_14	FOR_1
0x40002f9	            0x7460	                            je 0x400035b	      1452	glob.c	FUNCTION_14	FOR_1
0x40002fb	      0xb800000000	                              mov eax, 0	      1452	glob.c	FUNCTION_14	FOR_1
0x4000300	          0x80fa5b	                            cmp dl, 0x5b	      1453	glob.c	FUNCTION_14	FOR_1	SWITCH_1
0x4000303	            0x7434	                            je 0x4000339	      1453	glob.c	FUNCTION_14	FOR_1	SWITCH_1
0x4000305	          0x80fa5b	                            cmp dl, 0x5b	      1453	glob.c	FUNCTION_14	FOR_1	SWITCH_1
0x4000308	            0x7f0c	                            jg 0x4000316	      1453	glob.c	FUNCTION_14	FOR_1	SWITCH_1
0x400030a	          0x80fa2a	                            cmp dl, 0x2a	      1453	glob.c	FUNCTION_14	FOR_1	SWITCH_1
0x400030d	            0x7452	                            je 0x4000361	      1453	glob.c	FUNCTION_14	FOR_1	SWITCH_1
0x400030f	          0x80fa3f	                            cmp dl, 0x3f	      1453	glob.c	FUNCTION_14	FOR_1	SWITCH_1
0x4000312	            0x744d	                            je 0x4000361	      1453	glob.c	FUNCTION_14	FOR_1	SWITCH_1
0x4000314	            0xeb34	                           jmp 0x400034a	      1453	glob.c	FUNCTION_14	FOR_1	SWITCH_1
0x4000316	          0x80fa5c	                            cmp dl, 0x5c	      1453	glob.c	FUNCTION_14	FOR_1	SWITCH_1
0x4000319	            0x7407	                            je 0x4000322	      1453	glob.c	FUNCTION_14	FOR_1	SWITCH_1
0x400031b	          0x80fa5d	                            cmp dl, 0x5d	      1453	glob.c	FUNCTION_14	FOR_1	SWITCH_1
0x400031e	            0x7421	                            je 0x4000341	      1453	glob.c	FUNCTION_14	FOR_1	SWITCH_1
0x4000320	            0xeb28	                           jmp 0x400034a	      1453	glob.c	FUNCTION_14	FOR_1	SWITCH_1
0x4000322	          0x4889fa	                            mov rdx, rdi	      1453	glob.c	FUNCTION_14	FOR_1	SWITCH_1
0x4000325	            0x85f6	                           test esi, esi	      1460	glob.c	FUNCTION_14	FOR_1	SWITCH_1	IF_1
0x4000327	            0x7424	                            je 0x400034d	      1460	glob.c	FUNCTION_14	FOR_1	SWITCH_1	IF_1
0x4000329	        0x807f0101	                   cmp byte [rdi + 1], 1	      1463	glob.c	FUNCTION_14	FOR_1	SWITCH_1	IF_1	IF_2
0x400032d	        0x4883dfff	             sbb rdi, 0xffffffffffffffff	      1463	glob.c	FUNCTION_14	FOR_1	SWITCH_1	IF_1	IF_2
0x4000331	          0x4889fa	                            mov rdx, rdi	      1463	glob.c	FUNCTION_14	FOR_1	SWITCH_1	IF_1	IF_2
0x4000334	          0x83c802	                               or eax, 2	      1464	glob.c	FUNCTION_14	FOR_1	SWITCH_1	IF_1
0x4000337	            0xeb14	                           jmp 0x400034d	      1464	glob.c	FUNCTION_14	FOR_1	SWITCH_1	IF_1
0x4000339	          0x83c804	                               or eax, 4	      1469	glob.c	FUNCTION_14	FOR_1	SWITCH_1
0x400033c	          0x4889fa	                            mov rdx, rdi	      1470	glob.c	FUNCTION_14	FOR_1	SWITCH_1
0x400033f	            0xeb0c	                           jmp 0x400034d	      1470	glob.c	FUNCTION_14	FOR_1	SWITCH_1
0x4000341	            0xa804	                              test al, 4	      1473	glob.c	FUNCTION_14	FOR_1	SWITCH_1	IF_3
0x4000343	            0x7522	                           jne 0x4000367	      1473	glob.c	FUNCTION_14	FOR_1	SWITCH_1	IF_3
0x4000345	          0x4889fa	                            mov rdx, rdi	      1473	glob.c	FUNCTION_14	FOR_1	SWITCH_1	IF_3
0x4000348	            0xeb03	                           jmp 0x400034d	      1473	glob.c	FUNCTION_14	FOR_1	SWITCH_1	IF_3
0x400034a	          0x4889fa	                            mov rdx, rdi	      1453	glob.c	FUNCTION_14	FOR_1	SWITCH_1
0x400034d	        0x488d7a01	                      lea rdi, [rdx + 1]	      1452	glob.c	FUNCTION_14	FOR_1
0x4000351	         0xfb65201	               movzx edx, byte [rdx + 1]	      1452	glob.c	FUNCTION_14	FOR_1
0x4000355	            0x84d2	                             test dl, dl	      1452	glob.c	FUNCTION_14	FOR_1
0x4000357	            0x75a7	                           jne 0x4000300	      1452	glob.c	FUNCTION_14	FOR_1
0x4000359	            0xf3c3	                                     ret	      1452	glob.c	FUNCTION_14	FOR_1
0x400035b	      0xb800000000	                              mov eax, 0	      1450	glob.c	FUNCTION_14
0x4000360	              0xc3	                                     ret	      1450	glob.c	FUNCTION_14
0x4000361	      0xb801000000	                              mov eax, 1	      1457	glob.c	FUNCTION_14	FOR_1	SWITCH_1
0x4000366	              0xc3	                                     ret	      1457	glob.c	FUNCTION_14	FOR_1	SWITCH_1
0x4000367	      0xb801000000	                              mov eax, 1	      1474	glob.c	FUNCTION_14	FOR_1	SWITCH_1	IF_3
0x400036c	              0xc3	                                     ret	      1479	glob.c	FUNCTION_14
link_exists2_p	DO,0:ELSE,0:IF,1:WHILE,0:SWITCH,0:FOR,0:CALL,4:functions,0	49
0x40001fa	              0x55	                                push rbp	      1504	glob.c	FUNCTION_15
0x40001fb	          0x4889e5	                            mov rbp, rsp	      1504	glob.c	FUNCTION_15
0x40001fe	            0x4156	                                push r14	      1504	glob.c	FUNCTION_15
0x4000200	            0x4155	                                push r13	      1504	glob.c	FUNCTION_15
0x4000202	            0x4154	                                push r12	      1504	glob.c	FUNCTION_15
0x4000204	              0x53	                                push rbx	      1504	glob.c	FUNCTION_15
0x4000205	    0x4881eca00000	                           sub rsp, 0xa0	      1504	glob.c	FUNCTION_15
0x400020c	          0x4989f8	                             mov r8, rdi	      1504	glob.c	FUNCTION_15
0x400020f	          0x4989d5	                            mov r13, rdx	      1504	glob.c	FUNCTION_15
0x4000212	          0x4989ce	                            mov r14, rcx	      1504	glob.c	FUNCTION_15
0x4000215	    0x64488b042528	                mov rax, qword fs:[0x28]	      1504	glob.c	FUNCTION_15
0x400021e	        0x488945d8	             mov qword [rbp - 0x28], rax	      1504	glob.c	FUNCTION_15
0x4000222	            0x31c0	                            xor eax, eax	      1504	glob.c	FUNCTION_15
0x4000224	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1505	glob.c	FUNCTION_15	CALL_1
0x400022b	          0x4889d7	                            mov rdi, rdx	      1505	glob.c	FUNCTION_15	CALL_1
0x400022e	            0xf2ae	              repne scasb al, byte [rdi]	      1505	glob.c	FUNCTION_15	CALL_1
0x4000230	          0x4889cb	                            mov rbx, rcx	      1505	glob.c	FUNCTION_15	CALL_1
0x4000233	          0x48f7d3	                                 not rbx	      1505	glob.c	FUNCTION_15	CALL_1
0x4000236	      0x488d441e1f	            lea rax, [rsi + rbx + 0x1f] 	      1506	glob.c	FUNCTION_15
0x400023b	        0x4883e0f0	             and rax, 0xfffffffffffffff0	      1506	glob.c	FUNCTION_15
0x400023f	          0x4829c4	                            sub rsp, rax	      1506	glob.c	FUNCTION_15
0x4000242	      0x4c8d64240f	                    lea r12, [rsp + 0xf]	      1506	glob.c	FUNCTION_15
0x4000247	        0x4983e4f0	             and r12, 0xfffffffffffffff0	      1506	glob.c	FUNCTION_15
0x400024b	          0x4889f2	                            mov rdx, rsi	        67	string3.h	FUNCTION_20	CALL_3
0x400024e	          0x4c89c6	                             mov rsi, r8	        67	string3.h	FUNCTION_20	CALL_3
0x4000251	          0x4c89e7	                            mov rdi, r12	        67	string3.h	FUNCTION_20	CALL_3
0x4000254	      0xe800000000	                          call 0x4000259	        67	string3.h	FUNCTION_20	CALL_3
0x4000259	          0xc6002f	                    mov byte [rax], 0x2f	        67	string3.h	FUNCTION_20	CALL_3
0x400025c	        0x488d7801	                      lea rdi, [rax + 1]	        67	string3.h	FUNCTION_20	CALL_3
0x4000260	          0x4889da	                            mov rdx, rbx	        67	string3.h	FUNCTION_20	CALL_3
0x4000263	          0x4c89ee	                            mov rsi, r13	        67	string3.h	FUNCTION_20	CALL_3
0x4000266	      0xe800000000	                          call 0x400026b	        67	string3.h	FUNCTION_20	CALL_3
0x400026b	    0x488db540ffff	                   lea rsi, [rbp - 0xc0]	      1519	glob.c	FUNCTION_15
0x4000272	          0x4c89e7	                            mov rdi, r12	      1519	glob.c	FUNCTION_15
0x4000275	        0x41ff5640	                 call qword [r14 + 0x40]	      1519	glob.c	FUNCTION_15
0x4000279	            0x85c0	                           test eax, eax	      1519	glob.c	FUNCTION_15
0x400027b	           0xf94c0	                                 sete al	      1519	glob.c	FUNCTION_15
0x400027e	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1520	glob.c	FUNCTION_15
0x4000282	    0x644833142528	                xor rdx, qword fs:[0x28]	      1520	glob.c	FUNCTION_15
0x400028b	            0x7405	                            je 0x4000292	      1520	glob.c	FUNCTION_15
0x400028d	      0xe800000000	                          call 0x4000292	      1520	glob.c	FUNCTION_15
0x4000292	           0xfb6c0	                           movzx eax, al	      1520	glob.c	FUNCTION_15
0x4000295	        0x488d65e0	                   lea rsp, [rbp - 0x20]	      1520	glob.c	FUNCTION_15
0x4000299	              0x5b	                                 pop rbx	      1520	glob.c	FUNCTION_15
0x400029a	            0x415c	                                 pop r12	      1520	glob.c	FUNCTION_15
0x400029c	            0x415d	                                 pop r13	      1520	glob.c	FUNCTION_15
0x400029e	            0x415e	                                 pop r14	      1520	glob.c	FUNCTION_15
0x40002a0	              0x5d	                                 pop rbp	      1520	glob.c	FUNCTION_15
0x40002a1	              0xc3	                                     ret	      1520	glob.c	FUNCTION_15
glob_in_dir	DO,0:ELSE,10:IF,31:WHILE,3:SWITCH,0:FOR,2:CALL,31:functions,0	382
0x400036d	            0x4157	                                push r15	      1552	glob.c	FUNCTION_17
0x400036f	            0x4156	                                push r14	      1552	glob.c	FUNCTION_17
0x4000371	            0x4155	                                push r13	      1552	glob.c	FUNCTION_17
0x4000373	            0x4154	                                push r12	      1552	glob.c	FUNCTION_17
0x4000375	              0x55	                                push rbp	      1552	glob.c	FUNCTION_17
0x4000376	              0x53	                                push rbx	      1552	glob.c	FUNCTION_17
0x4000377	    0x4881ecf80200	                          sub rsp, 0x2f8	      1552	glob.c	FUNCTION_17
0x400037e	          0x4989f9	                             mov r9, rdi	      1552	glob.c	FUNCTION_17
0x4000381	      0x48897c2410	             mov qword [rsp + 0x10], rdi	      1552	glob.c	FUNCTION_17
0x4000386	      0x4889742420	             mov qword [rsp + 0x20], rsi	      1552	glob.c	FUNCTION_17
0x400038b	          0x4189d7	                           mov r15d, edx	      1552	glob.c	FUNCTION_17
0x400038e	        0x89542428	             mov dword [rsp + 0x28], edx	      1552	glob.c	FUNCTION_17
0x4000392	          0x4889cd	                            mov rbp, rcx	      1552	glob.c	FUNCTION_17
0x4000395	          0x4d89c4	                             mov r12, r8	      1552	glob.c	FUNCTION_17
0x4000398	    0x64488b042528	                mov rax, qword fs:[0x28]	      1552	glob.c	FUNCTION_17
0x40003a1	    0x48898424e802	            mov qword [rsp + 0x2e8], rax	      1552	glob.c	FUNCTION_17
0x40003a9	            0x31c0	                            xor eax, eax	      1552	glob.c	FUNCTION_17
0x40003ab	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1553	glob.c	FUNCTION_17	CALL_1
0x40003b2	          0x4889f7	                            mov rdi, rsi	      1553	glob.c	FUNCTION_17	CALL_1
0x40003b5	            0xf2ae	              repne scasb al, byte [rdi]	      1553	glob.c	FUNCTION_17	CALL_1
0x40003b7	          0x4889c8	                            mov rax, rcx	      1553	glob.c	FUNCTION_17	CALL_1
0x40003ba	          0x48f7d0	                                 not rax	      1553	glob.c	FUNCTION_17	CALL_1
0x40003bd	        0x4883e801	                              sub rax, 1	      1553	glob.c	FUNCTION_17	CALL_1
0x40003c1	      0x4889442430	             mov qword [rsp + 0x30], rax	      1553	glob.c	FUNCTION_17	CALL_1
0x40003c6	    0x48c78424d000	               mov qword [rsp + 0xd0], 0	      1572	glob.c	FUNCTION_17
0x40003d2	    0x48c78424d800	           mov qword [rsp + 0xd8], 0x40 	      1573	glob.c	FUNCTION_17
0x40003de	            0x89d3	                            mov ebx, edx	      1575	glob.c	FUNCTION_17	CALL_2
0x40003e0	          0x83e340	                           and ebx, 0x40	      1575	glob.c	FUNCTION_17	CALL_2
0x40003e3	        0x400f94c6	                                sete sil	      1575	glob.c	FUNCTION_17	CALL_2
0x40003e7	        0x400fb6f6	                          movzx esi, sil	      1575	glob.c	FUNCTION_17	CALL_2
0x40003eb	          0x4c89cf	                             mov rdi, r9	      1575	glob.c	FUNCTION_17	CALL_2
0x40003ee	      0xe800000000	                          call 0x40003f3	      1575	glob.c	FUNCTION_17	CALL_2
0x40003f3	            0x85c0	                           test eax, eax	      1576	glob.c	FUNCTION_17	IF_1
0x40003f5	     0xf85c6000000	                           jne 0x40004c1	      1576	glob.c	FUNCTION_17	IF_1
0x40003fb	          0x4489fb	                           mov ebx, r15d	      1576	glob.c	FUNCTION_17	IF_1
0x40003fe	    0x41f7c7100800	                        test r15d, 0x810	      1576	glob.c	FUNCTION_17	IF_1
0x4000405	            0x740c	                            je 0x4000413	      1576	glob.c	FUNCTION_17	IF_1
0x4000407	          0x83cb10	                            or ebx, 0x10	      1581	glob.c	FUNCTION_17	IF_1
0x400040a	        0x895c2428	             mov dword [rsp + 0x28], ebx	      1581	glob.c	FUNCTION_17	IF_1
0x400040e	      0xe900050000	                           jmp 0x4000913	      1581	glob.c	FUNCTION_17	IF_1
0x4000413	      0xb800000000	                              mov eax, 0	      1592	glob.c	FUNCTION_17	ELSE_1	IF_2	CALL_3
0x4000418	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1592	glob.c	FUNCTION_17	ELSE_1	IF_2	CALL_3
0x400041f	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1592	glob.c	FUNCTION_17	ELSE_1	IF_2	CALL_3
0x4000424	            0xf2ae	              repne scasb al, byte [rdi]	      1592	glob.c	FUNCTION_17	ELSE_1	IF_2	CALL_3
0x4000426	          0x48f7d1	                                 not rcx	      1592	glob.c	FUNCTION_17	ELSE_1	IF_2	CALL_3
0x4000429	          0x4889cb	                            mov rbx, rcx	      1592	glob.c	FUNCTION_17	ELSE_1	IF_2	CALL_3
0x400042c	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      1602	glob.c	FUNCTION_17	ELSE_1	IF_2	ELSE_2	CALL_6
0x4000431	      0x488d7c0801	                lea rdi, [rax + rcx + 1]	      1602	glob.c	FUNCTION_17	ELSE_1	IF_2	ELSE_2	CALL_6
0x4000436	      0xe800000000	                          call 0x400043b	      1602	glob.c	FUNCTION_17	ELSE_1	IF_2	ELSE_2	CALL_6
0x400043b	          0x4889c5	                            mov rbp, rax	      1602	glob.c	FUNCTION_17	ELSE_1	IF_2	ELSE_2	CALL_6
0x400043e	      0xb801000000	                              mov eax, 1	      1604	glob.c	FUNCTION_17	ELSE_1	IF_2	ELSE_2	IF_4
0x4000443	          0x4885ed	                           test rbp, rbp	      1603	glob.c	FUNCTION_17	ELSE_1	IF_2	ELSE_2	IF_4
0x4000446	     0xf84b2040000	                            je 0x40008fe	      1603	glob.c	FUNCTION_17	ELSE_1	IF_2	ELSE_2	IF_4
0x400044c	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	        67	string3.h	FUNCTION_20	CALL_3
0x4000451	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	        67	string3.h	FUNCTION_20	CALL_3
0x4000456	          0x4889ef	                            mov rdi, rbp	        67	string3.h	FUNCTION_20	CALL_3
0x4000459	      0xe800000000	                          call 0x400045e	        67	string3.h	FUNCTION_20	CALL_3
0x400045e	          0xc6002f	                    mov byte [rax], 0x2f	        67	string3.h	FUNCTION_20	CALL_3
0x4000461	        0x488d7801	                      lea rdi, [rax + 1]	        67	string3.h	FUNCTION_20	CALL_3
0x4000465	          0x4889da	                            mov rdx, rbx	        67	string3.h	FUNCTION_20	CALL_3
0x4000468	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	        67	string3.h	FUNCTION_20	CALL_3
0x400046d	      0xe800000000	                          call 0x4000472	        67	string3.h	FUNCTION_20	CALL_3
0x4000472	    0xf74424280002	         test dword [rsp + 0x28], 0x200 	      1612	glob.c	FUNCTION_17	ELSE_1	IF_2	IF_5
0x400047a	            0x7414	                            je 0x4000490	      1612	glob.c	FUNCTION_17	ELSE_1	IF_2	IF_5
0x400047c	      0x488d742440	                   lea rsi, [rsp + 0x40]	      1611	glob.c	FUNCTION_17	ELSE_1	IF_2	IF_5
0x4000481	          0x4889ef	                            mov rdi, rbp	      1611	glob.c	FUNCTION_17	ELSE_1	IF_2	IF_5
0x4000484	      0x41ff542440	                 call qword [r12 + 0x40]	      1611	glob.c	FUNCTION_17	ELSE_1	IF_2	IF_5
0x4000489	            0x85c0	                           test eax, eax	      1612	glob.c	FUNCTION_17	ELSE_1	IF_2	IF_5
0x400048b	           0xf94c0	                                 sete al	      1612	glob.c	FUNCTION_17	ELSE_1	IF_2	IF_5
0x400048e	            0xeb12	                           jmp 0x40004a2	      1612	glob.c	FUNCTION_17	ELSE_1	IF_2	IF_5
0x4000490	      0x488d742440	                   lea rsi, [rsp + 0x40]	      1612	glob.c	FUNCTION_17	ELSE_1	IF_2	IF_5
0x4000495	          0x4889ef	                            mov rdi, rbp	      1612	glob.c	FUNCTION_17	ELSE_1	IF_2	IF_5
0x4000498	      0xe800000000	                          call 0x400049d	      1612	glob.c	FUNCTION_17	ELSE_1	IF_2	IF_5
0x400049d	            0x85c0	                           test eax, eax	      1612	glob.c	FUNCTION_17	ELSE_1	IF_2	IF_5
0x400049f	           0xf94c0	                                 sete al	      1612	glob.c	FUNCTION_17	ELSE_1	IF_2	IF_5
0x40004a2	        0x8b742428	            mov esi, dword [rsp + 0x28] 	      1615	glob.c	FUNCTION_17	ELSE_1	IF_2	IF_5
0x40004a6	            0x89f2	                            mov edx, esi	      1615	glob.c	FUNCTION_17	ELSE_1	IF_2	IF_5
0x40004a8	          0x83ca10	                            or edx, 0x10	      1615	glob.c	FUNCTION_17	ELSE_1	IF_2	IF_5
0x40004ab	            0x84c0	                             test al, al	      1615	glob.c	FUNCTION_17	ELSE_1	IF_2	IF_5
0x40004ad	           0xf44d6	                          cmove edx, esi	      1615	glob.c	FUNCTION_17	ELSE_1	IF_2	IF_5
0x40004b0	        0x89542428	             mov dword [rsp + 0x28], edx	      1615	glob.c	FUNCTION_17	ELSE_1	IF_2	IF_5
0x40004b4	          0x4889ef	                            mov rdi, rbp	      1618	glob.c	FUNCTION_17	ELSE_1	IF_2	CALL_10
0x40004b7	      0xe800000000	                          call 0x40004bc	      1618	glob.c	FUNCTION_17	ELSE_1	IF_2	CALL_10
0x40004bc	      0xe952040000	                           jmp 0x4000913	      1618	glob.c	FUNCTION_17	ELSE_1	IF_2	CALL_10
0x40004c1	        0x8b442428	            mov eax, dword [rsp + 0x28] 	      1618	glob.c	FUNCTION_17	ELSE_1	IF_2	CALL_10
0x40004c5	      0x2500020000	                          and eax, 0x200	      1618	glob.c	FUNCTION_17	ELSE_1	IF_2	CALL_10
0x40004ca	        0x8944243c	             mov dword [rsp + 0x3c], eax	      1618	glob.c	FUNCTION_17	ELSE_1	IF_2	CALL_10
0x40004ce	          0x4c63f8	                         movsxd r15, eax	      1622	glob.c	FUNCTION_17	ELSE_3
0x40004d1	          0x4d85ff	                           test r15, r15	      1624	glob.c	FUNCTION_17	ELSE_3
0x40004d4	            0x741d	                            je 0x40004f3	      1624	glob.c	FUNCTION_17	ELSE_3
0x40004d6	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      1624	glob.c	FUNCTION_17	ELSE_3
0x40004db	      0x41ff542430	                 call qword [r12 + 0x30]	      1624	glob.c	FUNCTION_17	ELSE_3
0x40004e0	        0x48890424	                    mov qword [rsp], rax	      1624	glob.c	FUNCTION_17	ELSE_3
0x40004e4	          0x4885c0	                           test rax, rax	      1625	glob.c	FUNCTION_17	ELSE_3	IF_7
0x40004e7	            0x741d	                            je 0x4000506	      1625	glob.c	FUNCTION_17	ELSE_3	IF_7
0x40004e9	    0xc7442438ffff	     mov dword [rsp + 0x38], 0xffffffff 	      1635	glob.c	FUNCTION_17	ELSE_3	ELSE_4	CALL_11
0x40004f1	            0xeb60	                           jmp 0x4000553	      1635	glob.c	FUNCTION_17	ELSE_3	ELSE_4	CALL_11
0x40004f3	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      1624	glob.c	FUNCTION_17	ELSE_3
0x40004f8	      0xe800000000	                          call 0x40004fd	      1624	glob.c	FUNCTION_17	ELSE_3
0x40004fd	        0x48890424	                    mov qword [rsp], rax	      1624	glob.c	FUNCTION_17	ELSE_3
0x4000501	          0x4885c0	                           test rax, rax	      1625	glob.c	FUNCTION_17	ELSE_3	IF_7
0x4000504	            0x7540	                           jne 0x4000546	      1625	glob.c	FUNCTION_17	ELSE_3	IF_7
0x4000506	      0xe800000000	                          call 0x400050b	      1627	glob.c	FUNCTION_17	ELSE_3	IF_7	IF_8
0x400050b	            0x8b30	                    mov esi, dword [rax]	      1627	glob.c	FUNCTION_17	ELSE_3	IF_7	IF_8
0x400050d	          0x83fe14	                           cmp esi, 0x14	      1627	glob.c	FUNCTION_17	ELSE_3	IF_7	IF_8
0x4000510	     0xf84fd030000	                            je 0x4000913	      1627	glob.c	FUNCTION_17	ELSE_3	IF_7	IF_8
0x4000516	          0x4885ed	                           test rbp, rbp	      1628	glob.c	FUNCTION_17	ELSE_3	IF_7	IF_8
0x4000519	            0x7416	                            je 0x4000531	      1628	glob.c	FUNCTION_17	ELSE_3	IF_7	IF_8
0x400051b	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      1628	glob.c	FUNCTION_17	ELSE_3	IF_7	IF_8
0x4000520	            0xffd5	                                call rbp	      1628	glob.c	FUNCTION_17	ELSE_3	IF_7	IF_8
0x4000522	            0x89c2	                            mov edx, eax	      1628	glob.c	FUNCTION_17	ELSE_3	IF_7	IF_8
0x4000524	      0xb802000000	                              mov eax, 2	      1630	glob.c	FUNCTION_17	ELSE_3	IF_7	IF_8
0x4000529	            0x85d2	                           test edx, edx	      1628	glob.c	FUNCTION_17	ELSE_3	IF_7	IF_8
0x400052b	     0xf85cd030000	                           jne 0x40008fe	      1628	glob.c	FUNCTION_17	ELSE_3	IF_7	IF_8
0x4000531	      0xb802000000	                              mov eax, 2	      1630	glob.c	FUNCTION_17	ELSE_3	IF_7	IF_8
0x4000536	      0xf644242801	               test byte [rsp + 0x28], 1	      1629	glob.c	FUNCTION_17	ELSE_3	IF_7	IF_8
0x400053b	     0xf85bd030000	                           jne 0x40008fe	      1629	glob.c	FUNCTION_17	ELSE_3	IF_7	IF_8
0x4000541	      0xe9cd030000	                           jmp 0x4000913	      1629	glob.c	FUNCTION_17	ELSE_3	IF_7	IF_8
0x4000546	        0x488b3c24	                    mov rdi, qword [rsp]	      1635	glob.c	FUNCTION_17	ELSE_3	ELSE_4	CALL_11
0x400054a	      0xe800000000	                          call 0x400054f	      1635	glob.c	FUNCTION_17	ELSE_3	ELSE_4	CALL_11
0x400054f	        0x89442438	             mov dword [rsp + 0x38], eax	      1635	glob.c	FUNCTION_17	ELSE_3	ELSE_4	CALL_11
0x4000553	        0x8b742428	            mov esi, dword [rsp + 0x28] 	      1636	glob.c	FUNCTION_17	ELSE_3	ELSE_4
0x4000557	            0x89f0	                            mov eax, esi	      1636	glob.c	FUNCTION_17	ELSE_3	ELSE_4
0x4000559	      0x2580000000	                           and eax, 0x80	      1636	glob.c	FUNCTION_17	ELSE_3	ELSE_4
0x400055e	          0x83f801	                              cmp eax, 1	      1636	glob.c	FUNCTION_17	ELSE_3	ELSE_4
0x4000561	            0x19c0	                            sbb eax, eax	      1636	glob.c	FUNCTION_17	ELSE_3	ELSE_4
0x4000563	          0x83e004	                              and eax, 4	      1636	glob.c	FUNCTION_17	ELSE_3	ELSE_4
0x4000566	            0x85db	                           test ebx, ebx	      1637	glob.c	FUNCTION_17	ELSE_3	ELSE_4
0x4000568	      0xba02000000	                              mov edx, 2	      1637	glob.c	FUNCTION_17	ELSE_3	ELSE_4
0x400056d	           0xf45da	                         cmovne ebx, edx	      1637	glob.c	FUNCTION_17	ELSE_3	ELSE_4
0x4000570	             0x9d8	                             or eax, ebx	      1636	glob.c	FUNCTION_17	ELSE_3	ELSE_4
0x4000572	        0x8944241c	             mov dword [rsp + 0x1c], eax	      1636	glob.c	FUNCTION_17	ELSE_3	ELSE_4
0x4000576	            0x89f0	                            mov eax, esi	      1642	glob.c	FUNCTION_17	ELSE_3	ELSE_4
0x4000578	          0x80cc01	                                or ah, 1	      1642	glob.c	FUNCTION_17	ELSE_3	ELSE_4
0x400057b	        0x8944242c	             mov dword [rsp + 0x2c], eax	      1642	glob.c	FUNCTION_17	ELSE_3	ELSE_4
0x400057f	      0xbd00000000	                              mov ebp, 0	      1565	glob.c	FUNCTION_17
0x4000584	    0x48c744240800	                  mov qword [rsp + 8], 0	      1564	glob.c	FUNCTION_17
0x400058d	    0x488d9c24d000	                   lea rbx, [rsp + 0xd0]	      1562	glob.c	FUNCTION_17
0x4000595	            0x89f0	                            mov eax, esi	      1666	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_12	CALL_16
0x4000597	      0x2500200000	                         and eax, 0x2000	      1666	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_12	CALL_16
0x400059c	        0x89442418	             mov dword [rsp + 0x18], eax	      1666	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_12	CALL_16
0x40005a0	          0x4d85ff	                           test r15, r15	      1648	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_9
0x40005a3	            0x7424	                            je 0x40005c9	      1648	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_9
0x40005a5	        0x488b3c24	                    mov rdi, qword [rsp]	      1649	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	CALL_12
0x40005a9	      0x41ff542428	                 call qword [r12 + 0x28]	      1649	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	CALL_12
0x40005ae	          0x4885c0	                           test rax, rax	       187	glob.c	FUNCTION_5	IF_1
0x40005b1	     0xf843f010000	                            je 0x40006f6	       187	glob.c	FUNCTION_5	IF_1
0x40005b7	        0x4c8d6813	                   lea r13, [rax + 0x13]	       192	glob.c	FUNCTION_5
0x40005bb	      0x440fb67012	          movzx r14d, byte [rax + 0x12] 	       192	glob.c	FUNCTION_5
0x40005c0	        0x48833800	                      cmp qword [rax], 0	       192	glob.c	FUNCTION_5
0x40005c4	           0xf94c0	                                 sete al	       192	glob.c	FUNCTION_5
0x40005c7	            0xeb22	                           jmp 0x40005eb	       192	glob.c	FUNCTION_5
0x40005c9	        0x488b3c24	                    mov rdi, qword [rsp]	      1653	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	ELSE_5	CALL_13
0x40005cd	      0xe800000000	                          call 0x40005d2	      1653	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	ELSE_5	CALL_13
0x40005d2	          0x4885c0	                           test rax, rax	       187	glob.c	FUNCTION_5	IF_1
0x40005d5	     0xf841b010000	                            je 0x40006f6	       187	glob.c	FUNCTION_5	IF_1
0x40005db	        0x4c8d6813	                   lea r13, [rax + 0x13]	       192	glob.c	FUNCTION_5
0x40005df	      0x440fb67012	          movzx r14d, byte [rax + 0x12] 	       192	glob.c	FUNCTION_5
0x40005e4	        0x48833800	                      cmp qword [rax], 0	       192	glob.c	FUNCTION_5
0x40005e8	           0xf94c0	                                 sete al	       192	glob.c	FUNCTION_5
0x40005eb	          0x4d85ed	                           test r13, r13	      1659	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_10
0x40005ee	     0xf8402010000	                            je 0x40006f6	      1659	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_10
0x40005f4	            0x84c0	                             test al, al	      1661	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_11
0x40005f6	            0x75a8	                           jne 0x40005a0	      1661	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_11
0x40005f8	      0x837c241800	               cmp dword [rsp + 0x18], 0	      1666	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_12	CALL_16
0x40005fd	            0x740c	                            je 0x400060b	      1666	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_12	CALL_16
0x40005ff	        0x41f6c6fb	                         test r14b, 0xfb	      1666	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_12	CALL_16
0x4000603	            0x7406	                            je 0x400060b	      1666	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_12	CALL_16
0x4000605	        0x4180fe0a	                           cmp r14b, 0xa	      1666	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_12	CALL_16
0x4000609	            0x7595	                           jne 0x40005a0	      1666	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_12	CALL_16
0x400060b	        0x8b54241c	            mov edx, dword [rsp + 0x1c] 	      1669	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	CALL_17
0x400060f	          0x4c89ee	                            mov rsi, r13	      1669	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	CALL_17
0x4000612	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1669	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	CALL_17
0x4000617	      0xe800000000	                          call 0x400061c	      1669	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	CALL_17
0x400061c	            0x85c0	                           test eax, eax	      1669	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	CALL_17
0x400061e	            0x7580	                           jne 0x40005a0	      1669	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	CALL_17
0x4000620	          0x4584f6	                         test r14b, r14b	      1673	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	CALL_18
0x4000623	            0x7406	                            je 0x400062b	      1673	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	CALL_18
0x4000625	        0x4180fe0a	                           cmp r14b, 0xa	      1673	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	CALL_18
0x4000629	            0x7544	                           jne 0x400066f	      1673	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	CALL_18
0x400062b	      0x837c243c00	               cmp dword [rsp + 0x3c], 0	      1528	glob.c	FUNCTION_16	IF_1
0x4000630	            0x7417	                            je 0x4000649	      1528	glob.c	FUNCTION_16	IF_1
0x4000632	          0x4c89e1	                            mov rcx, r12	      1529	glob.c	FUNCTION_16	CALL_1
0x4000635	          0x4c89ea	                            mov rdx, r13	      1529	glob.c	FUNCTION_16	CALL_1
0x4000638	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      1529	glob.c	FUNCTION_16	CALL_1
0x400063d	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      1529	glob.c	FUNCTION_16	CALL_1
0x4000642	      0xe8b3fbffff	                 call sym.link_exists2_p	      1529	glob.c	FUNCTION_16	CALL_1
0x4000647	            0xeb1e	                           jmp 0x4000667	      1529	glob.c	FUNCTION_16	CALL_1
0x4000649	      0xb900000000	                              mov ecx, 0	      1535	glob.c	FUNCTION_16	ELSE_1
0x400064e	      0x488d542440	                   lea rdx, [rsp + 0x40]	      1535	glob.c	FUNCTION_16	ELSE_1
0x4000653	          0x4c89ee	                            mov rsi, r13	      1535	glob.c	FUNCTION_16	ELSE_1
0x4000656	        0x8b7c2438	            mov edi, dword [rsp + 0x38] 	      1535	glob.c	FUNCTION_16	ELSE_1
0x400065a	      0xe800000000	                          call 0x400065f	      1535	glob.c	FUNCTION_16	ELSE_1
0x400065f	            0x85c0	                           test eax, eax	      1535	glob.c	FUNCTION_16	ELSE_1
0x4000661	           0xf94c0	                                 sete al	      1535	glob.c	FUNCTION_16	ELSE_1
0x4000664	           0xfb6c0	                           movzx eax, al	      1535	glob.c	FUNCTION_16	ELSE_1
0x4000667	            0x85c0	                           test eax, eax	      1674	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	CALL_19
0x4000669	     0xf8431ffffff	                            je 0x40005a0	      1674	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	CALL_19
0x400066f	        0x483b6b08	                cmp rbp, qword [rbx + 8]	      1677	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_15
0x4000673	            0x7538	                           jne 0x40006ad	      1677	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_15
0x4000675	      0x4c8d742d00	                    lea r14, [rbp + rbp]	      1680	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_15
0x400067a	          0x4889ef	                            mov rdi, rbp	      1682	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_15	CALL_20
0x400067d	        0x48c1e704	                              shl rdi, 4	      1682	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_15	CALL_20
0x4000681	        0x4883c710	                           add rdi, 0x10	      1682	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_15	CALL_20
0x4000685	    0x48b8feffffff	          movabs rax, 0xffffffffffffffe 	      1684	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_15	IF_16
0x400068f	          0x4839c5	                            cmp rbp, rax	      1684	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_15	IF_16
0x4000692	            0x7755	                            ja 0x40006e9	      1684	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_15	IF_16
0x4000694	      0xe800000000	                          call 0x4000699	      1690	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_15	ELSE_6	IF_18	CALL_22
0x4000699	          0x4885c0	                           test rax, rax	      1690	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_15	ELSE_6	IF_18	CALL_22
0x400069c	            0x744b	                            je 0x40006e9	      1690	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_15	ELSE_6	IF_18	CALL_22
0x400069e	        0x4c897008	                mov qword [rax + 8], r14	      1693	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_15
0x40006a2	          0x488918	                    mov qword [rax], rbx	      1694	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_15
0x40006a5	          0x4889c3	                            mov rbx, rax	      1695	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_15
0x40006a8	      0xbd00000000	                              mov ebp, 0	      1696	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_15
0x40006ad	          0x4c89ef	                            mov rdi, r13	      1698	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14
0x40006b0	      0xe800000000	                          call 0x40006b5	      1698	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14
0x40006b5	      0x488944eb10	     mov qword [rbx + rbp*8 + 0x10], rax	      1698	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14
0x40006ba	          0x4885c0	                           test rax, rax	      1699	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_19
0x40006bd	            0x742a	                            je 0x40006e9	      1699	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_19
0x40006bf	        0x4883c501	                              add rbp, 1	      1701	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14
0x40006c3	    0x488344240801	                  add qword [rsp + 8], 1	      1702	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14
0x40006c9	      0x488b742408	                mov rsi, qword [rsp + 8]	      1702	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14
0x40006ce	      0x498b442410	            mov rax, qword [r12 + 0x10] 	      1703	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_20
0x40006d3	          0x48f7d0	                                 not rax	      1703	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_20
0x40006d6	          0x4839c6	                            cmp rsi, rax	      1703	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_20
0x40006d9	     0xf82c1feffff	                            jb 0x40005a0	      1703	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_20
0x40006df	            0xeb08	                           jmp 0x40006e9	      1703	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_20
0x40006e1	        0x8b442428	            mov eax, dword [rsp + 0x28] 	      1703	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_20
0x40006e5	        0x8944242c	             mov dword [rsp + 0x2c], eax	      1703	glob.c	FUNCTION_17	ELSE_3	ELSE_4	WHILE_1	IF_13	IF_14	IF_20
0x40006e9	    0x4c8db424d000	                   lea r14, [rsp + 0xd0]	      1757	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2	IF_27
0x40006f1	      0xe9cc000000	                           jmp 0x40007c2	      1757	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2	IF_27
0x40006f6	    0x48837c240800	                  cmp qword [rsp + 8], 0	      1711	glob.c	FUNCTION_17	IF_21
0x40006fc	     0xf8522020000	                           jne 0x4000924	      1711	glob.c	FUNCTION_17	IF_21
0x4000702	    0x41bd03000000	                             mov r13d, 3	      1721	glob.c	FUNCTION_17
0x4000708	      0xf644242810	           test byte [rsp + 0x28], 0x10 	      1711	glob.c	FUNCTION_17	IF_21
0x400070d	     0xf84b2010000	                            je 0x40008c5	      1711	glob.c	FUNCTION_17	IF_21
0x4000713	        0x8b44242c	            mov eax, dword [rsp + 0x2c] 	      1642	glob.c	FUNCTION_17	ELSE_3	ELSE_4
0x4000717	        0x89442428	             mov dword [rsp + 0x28], eax	      1642	glob.c	FUNCTION_17	ELSE_3	ELSE_4
0x400071b	            0xeb15	                           jmp 0x4000732	      1642	glob.c	FUNCTION_17	ELSE_3	ELSE_4
0x400071d	      0xbd00000000	                              mov ebp, 0	      1711	glob.c	FUNCTION_17	IF_21
0x4000722	    0x488d9c24d000	                   lea rbx, [rsp + 0xd0]	      1711	glob.c	FUNCTION_17	IF_21
0x400072a	    0x48c704240000	                      mov qword [rsp], 0	      1711	glob.c	FUNCTION_17	IF_21
0x4000732	      0xb800000000	                              mov eax, 0	      1713	glob.c	FUNCTION_17	IF_21	CALL_23
0x4000737	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1713	glob.c	FUNCTION_17	IF_21	CALL_23
0x400073e	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1713	glob.c	FUNCTION_17	IF_21	CALL_23
0x4000743	            0xf2ae	              repne scasb al, byte [rdi]	      1713	glob.c	FUNCTION_17	IF_21	CALL_23
0x4000745	          0x48f7d1	                                 not rcx	      1713	glob.c	FUNCTION_17	IF_21	CALL_23
0x4000748	          0x4889cf	                            mov rdi, rcx	      1713	glob.c	FUNCTION_17	IF_21	CALL_23
0x400074b	        0x4c8d69ff	                      lea r13, [rcx - 1]	      1713	glob.c	FUNCTION_17	IF_21	CALL_23
0x400074f	      0xe800000000	                          call 0x4000754	      1715	glob.c	FUNCTION_17	IF_21	CALL_24
0x4000754	      0x488944eb10	     mov qword [rbx + rbp*8 + 0x10], rax	      1715	glob.c	FUNCTION_17	IF_21	CALL_24
0x4000759	          0x4885c0	                           test rax, rax	      1716	glob.c	FUNCTION_17	IF_21	IF_22
0x400075c	            0x7483	                            je 0x40006e1	      1716	glob.c	FUNCTION_17	IF_21	IF_22
0x400075e	        0x4883c501	                              add rbp, 1	      1718	glob.c	FUNCTION_17	IF_21	CALL_25
0x4000762	          0x4c89ea	                            mov rdx, r13	        67	string3.h	FUNCTION_20	CALL_3
0x4000765	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	        67	string3.h	FUNCTION_20	CALL_3
0x400076a	          0x4889c7	                            mov rdi, rax	        67	string3.h	FUNCTION_20	CALL_3
0x400076d	      0xe800000000	                          call 0x4000772	        67	string3.h	FUNCTION_20	CALL_3
0x4000772	          0xc60000	                       mov byte [rax], 0	      1718	glob.c	FUNCTION_17	IF_21	CALL_25
0x4000775	        0x8b442428	            mov eax, dword [rsp + 0x28] 	      1718	glob.c	FUNCTION_17	IF_21	CALL_25
0x4000779	        0x8944242c	             mov dword [rsp + 0x2c], eax	      1718	glob.c	FUNCTION_17	IF_21	CALL_25
0x400077d	    0x48c744240801	                  mov qword [rsp + 8], 1	      1714	glob.c	FUNCTION_17	IF_21
0x4000786	      0xe999010000	                           jmp 0x4000924	      1714	glob.c	FUNCTION_17	IF_21
0x400078b	      0x488d740a01	                lea rsi, [rdx + rcx + 1]	      1732	glob.c	FUNCTION_17	IF_23	CALL_26
0x4000790	      0x4803742408	                add rsi, qword [rsp + 8]	      1732	glob.c	FUNCTION_17	IF_23	CALL_26
0x4000795	        0x48c1e603	                              shl rsi, 3	      1732	glob.c	FUNCTION_17	IF_23	CALL_26
0x4000799	      0x498b7c2408	                mov rdi, qword [r12 + 8]	      1732	glob.c	FUNCTION_17	IF_23	CALL_26
0x400079e	      0xe800000000	                          call 0x40007a3	      1732	glob.c	FUNCTION_17	IF_23	CALL_26
0x40007a3	          0x4989c5	                            mov r13, rax	      1732	glob.c	FUNCTION_17	IF_23	CALL_26
0x40007a6	          0x4885c0	                           test rax, rax	      1736	glob.c	FUNCTION_17	IF_23	IF_25
0x40007a9	     0xf843affffff	                            je 0x40006e9	      1736	glob.c	FUNCTION_17	IF_23	IF_25
0x40007af	    0x4c8dbc24d000	                   lea r15, [rsp + 0xd0]	      1736	glob.c	FUNCTION_17	IF_23	IF_25
0x40007b7	          0x4889df	                            mov rdi, rbx	      1736	glob.c	FUNCTION_17	IF_23	IF_25
0x40007ba	            0xeb6f	                           jmp 0x400082b	      1736	glob.c	FUNCTION_17	IF_23	IF_25
0x40007bc	          0x4d89ee	                            mov r14, r13	      1757	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2	IF_27
0x40007bf	          0x4c89eb	                            mov rbx, r13	      1757	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2	IF_27
0x40007c2	          0x4885ed	                           test rbp, rbp	      1743	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2	FOR_1
0x40007c5	            0x7419	                            je 0x40007e0	      1743	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2	FOR_1
0x40007c7	    0x41bd00000000	                             mov r13d, 0	      1743	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2	FOR_1
0x40007cd	      0x4a8b7ceb10	    mov rdi, qword [rbx + r13*8 + 0x10] 	      1744	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2	CALL_27
0x40007d2	      0xe800000000	                          call 0x40007d7	      1744	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2	CALL_27
0x40007d7	        0x4983c501	                              add r13, 1	      1743	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2	FOR_1
0x40007db	          0x4c39ed	                            cmp rbp, r13	      1743	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2	FOR_1
0x40007de	            0x75ed	                           jne 0x40007cd	      1743	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2	FOR_1
0x40007e0	          0x4c8b2b	                    mov r13, qword [rbx]	      1745	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2
0x40007e3	          0x4d85ed	                           test r13, r13	      1750	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2	IF_26
0x40007e6	            0x752a	                           jne 0x4000812	      1750	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2	IF_26
0x40007e8	    0x488d8424d000	                   lea rax, [rsp + 0xd0]	      1752	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2	IF_26	CALL_28
0x40007f0	          0x4839c3	                            cmp rbx, rax	      1752	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2	IF_26	CALL_28
0x40007f3	     0xf84c6000000	                            je 0x40008bf	      1752	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2	IF_26	CALL_28
0x40007f9	      0xb900000000	                              mov ecx, 0	      1752	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2	IF_26	CALL_28
0x40007fe	      0xbad8060000	                          mov edx, 0x6d8	      1752	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2	IF_26	CALL_28
0x4000803	      0xbe00000000	                              mov esi, 0	      1752	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2	IF_26	CALL_28
0x4000808	      0xbf00000000	                              mov edi, 0	      1752	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2	IF_26	CALL_28
0x400080d	      0xe800000000	                          call 0x4000812	      1752	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2	IF_26	CALL_28
0x4000812	        0x498b6d08	                mov rbp, qword [r13 + 8]	      1755	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2
0x4000816	          0x4c39f3	                            cmp rbx, r14	      1756	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2	IF_27
0x4000819	            0x74a1	                            je 0x40007bc	      1756	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2	IF_27
0x400081b	          0x4889df	                            mov rdi, rbx	      1759	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2	CALL_29
0x400081e	      0xe800000000	                          call 0x4000823	      1759	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2	CALL_29
0x4000823	            0xeb9a	                           jmp 0x40007bf	      1759	glob.c	FUNCTION_17	IF_23	IF_25	WHILE_2	CALL_29
0x4000825	          0x4989df	                            mov r15, rbx	      1784	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	IF_29
0x4000828	          0x4889df	                            mov rdi, rbx	      1784	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	IF_29
0x400082b	          0x4885ed	                           test rbp, rbp	      1769	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	FOR_2
0x400082e	            0x7429	                            je 0x4000859	      1769	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	FOR_2
0x4000830	      0xba00000000	                              mov edx, 0	      1769	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	FOR_2
0x4000835	        0x498b0424	                    mov rax, qword [r12]	      1770	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	FOR_2
0x4000839	        0x488d4801	                      lea rcx, [rax + 1]	      1770	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	FOR_2
0x400083d	        0x49890c24	                    mov qword [r12], rcx	      1770	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	FOR_2
0x4000841	      0x488b4cd710	    mov rcx, qword [rdi + rdx*8 + 0x10] 	      1771	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	FOR_2
0x4000846	      0x4903442410	             add rax, qword [r12 + 0x10]	      1771	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	FOR_2
0x400084b	      0x49894cc500	            mov qword [r13 + rax*8], rcx	      1771	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	FOR_2
0x4000850	        0x4883c201	                              add rdx, 1	      1769	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	FOR_2
0x4000854	          0x4839d5	                            cmp rbp, rdx	      1769	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	FOR_2
0x4000857	            0x75dc	                           jne 0x4000835	      1769	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	FOR_2
0x4000859	          0x488b1f	                    mov rbx, qword [rdi]	      1772	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3
0x400085c	          0x4885db	                           test rbx, rbx	      1777	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	IF_28
0x400085f	            0x7526	                           jne 0x4000887	      1777	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	IF_28
0x4000861	    0x488d8424d000	                   lea rax, [rsp + 0xd0]	      1779	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	IF_28	CALL_30
0x4000869	          0x4839c7	                            cmp rdi, rax	      1779	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	IF_28	CALL_30
0x400086c	            0x7429	                            je 0x4000897	      1779	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	IF_28	CALL_30
0x400086e	      0xb900000000	                              mov ecx, 0	      1779	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	IF_28	CALL_30
0x4000873	      0xbaf3060000	                          mov edx, 0x6f3	      1779	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	IF_28	CALL_30
0x4000878	      0xbe00000000	                              mov esi, 0	      1779	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	IF_28	CALL_30
0x400087d	      0xbf00000000	                              mov edi, 0	      1779	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	IF_28	CALL_30
0x4000882	      0xe800000000	                          call 0x4000887	      1779	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	IF_28	CALL_30
0x4000887	        0x488b6b08	                mov rbp, qword [rbx + 8]	      1782	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3
0x400088b	          0x4c39ff	                            cmp rdi, r15	      1783	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	IF_29
0x400088e	            0x7495	                            je 0x4000825	      1783	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	IF_29
0x4000890	      0xe800000000	                          call 0x4000895	      1786	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	CALL_31
0x4000895	            0xeb91	                           jmp 0x4000828	      1786	glob.c	FUNCTION_17	IF_23	ELSE_8	WHILE_3	CALL_31
0x4000897	      0x4d896c2408	                mov qword [r12 + 8], r13	      1789	glob.c	FUNCTION_17	IF_23	ELSE_8
0x400089c	        0x498b0424	                    mov rax, qword [r12]	      1791	glob.c	FUNCTION_17	IF_23	ELSE_8
0x40008a0	      0x4903442410	             add rax, qword [r12 + 0x10]	      1791	glob.c	FUNCTION_17	IF_23	ELSE_8
0x40008a5	    0x49c744c50000	              mov qword [r13 + rax*8], 0	      1791	glob.c	FUNCTION_17	IF_23	ELSE_8
0x40008ae	        0x8b44242c	            mov eax, dword [rsp + 0x2c] 	      1793	glob.c	FUNCTION_17	IF_23	ELSE_8
0x40008b2	      0x4189442418	             mov dword [r12 + 0x18], eax	      1793	glob.c	FUNCTION_17	IF_23	ELSE_8
0x40008b7	    0x41bd00000000	                             mov r13d, 0	      1725	glob.c	FUNCTION_17	IF_23
0x40008bd	            0xeb06	                           jmp 0x40008c5	      1725	glob.c	FUNCTION_17	IF_23
0x40008bf	    0x41bd01000000	                             mov r13d, 1	      1761	glob.c	FUNCTION_17	IF_23	IF_25
0x40008c5	      0x48833c2400	                      cmp qword [rsp], 0	      1797	glob.c	FUNCTION_17	IF_30
0x40008ca	            0x742f	                            je 0x40008fb	      1797	glob.c	FUNCTION_17	IF_30
0x40008cc	      0xe800000000	                          call 0x40008d1	      1799	glob.c	FUNCTION_17	IF_30
0x40008d1	          0x4889c3	                            mov rbx, rax	      1799	glob.c	FUNCTION_17	IF_30
0x40008d4	            0x8b28	                    mov ebp, dword [rax]	      1799	glob.c	FUNCTION_17	IF_30
0x40008d6	    0xf744242c0002	         test dword [rsp + 0x2c], 0x200 	      1800	glob.c	FUNCTION_17	IF_30	IF_31
0x40008de	            0x740b	                            je 0x40008eb	      1800	glob.c	FUNCTION_17	IF_30	IF_31
0x40008e0	        0x488b3c24	                    mov rdi, qword [rsp]	      1801	glob.c	FUNCTION_17	IF_30	IF_31
0x40008e4	      0x41ff542420	                 call qword [r12 + 0x20]	      1801	glob.c	FUNCTION_17	IF_30	IF_31
0x40008e9	            0xeb09	                           jmp 0x40008f4	      1801	glob.c	FUNCTION_17	IF_30	IF_31
0x40008eb	        0x488b3c24	                    mov rdi, qword [rsp]	      1803	glob.c	FUNCTION_17	IF_30	ELSE_10
0x40008ef	      0xe800000000	                          call 0x40008f4	      1803	glob.c	FUNCTION_17	IF_30	ELSE_10
0x40008f4	            0x892b	                    mov dword [rbx], ebp	      1804	glob.c	FUNCTION_17	IF_30
0x40008f6	          0x4489e8	                           mov eax, r13d	      1804	glob.c	FUNCTION_17	IF_30
0x40008f9	            0xeb03	                           jmp 0x40008fe	      1804	glob.c	FUNCTION_17	IF_30
0x40008fb	          0x4489e8	                           mov eax, r13d	      1804	glob.c	FUNCTION_17	IF_30
0x40008fe	    0x488bb424e802	           mov rsi, qword [rsp + 0x2e8] 	      1808	glob.c	FUNCTION_17
0x4000906	    0x644833342528	                xor rsi, qword fs:[0x28]	      1808	glob.c	FUNCTION_17
0x400090f	            0x7446	                            je 0x4000957	      1808	glob.c	FUNCTION_17
0x4000911	            0xeb3f	                           jmp 0x4000952	      1808	glob.c	FUNCTION_17
0x4000913	      0xb803000000	                              mov eax, 3	      1721	glob.c	FUNCTION_17
0x4000918	      0xf644242810	           test byte [rsp + 0x28], 0x10 	      1711	glob.c	FUNCTION_17	IF_21
0x400091d	            0x74df	                            je 0x40008fe	      1711	glob.c	FUNCTION_17	IF_21
0x400091f	      0xe9f9fdffff	                           jmp 0x400071d	      1711	glob.c	FUNCTION_17	IF_21
0x4000924	        0x498b1424	                    mov rdx, qword [r12]	      1727	glob.c	FUNCTION_17	IF_23	IF_24
0x4000928	      0x498b4c2410	            mov rcx, qword [r12 + 0x10] 	      1728	glob.c	FUNCTION_17	IF_23	IF_24
0x400092d	    0x48b8ffffffff	         movabs rax, 0x1fffffffffffffff 	      1727	glob.c	FUNCTION_17	IF_23	IF_24
0x4000937	          0x4829d0	                            sub rax, rdx	      1727	glob.c	FUNCTION_17	IF_23	IF_24
0x400093a	      0x488b742408	                mov rsi, qword [rsp + 8]	      1727	glob.c	FUNCTION_17	IF_23	IF_24
0x400093f	      0x488d740e01	                lea rsi, [rsi + rcx + 1]	      1727	glob.c	FUNCTION_17	IF_23	IF_24
0x4000944	          0x4839f0	                            cmp rax, rsi	      1727	glob.c	FUNCTION_17	IF_23	IF_24
0x4000947	     0xf829cfdffff	                            jb 0x40006e9	      1727	glob.c	FUNCTION_17	IF_23	IF_24
0x400094d	      0xe939feffff	                           jmp 0x400078b	      1727	glob.c	FUNCTION_17	IF_23	IF_24
0x4000952	      0xe800000000	                          call 0x4000957	      1808	glob.c	FUNCTION_17
0x4000957	    0x4881c4f80200	                          add rsp, 0x2f8	      1808	glob.c	FUNCTION_17
0x400095e	              0x5b	                                 pop rbx	      1808	glob.c	FUNCTION_17
0x400095f	              0x5d	                                 pop rbp	      1808	glob.c	FUNCTION_17
0x4000960	            0x415c	                                 pop r12	      1808	glob.c	FUNCTION_17
0x4000962	            0x415d	                                 pop r13	      1808	glob.c	FUNCTION_17
0x4000964	            0x415e	                                 pop r14	      1808	glob.c	FUNCTION_17
0x4000966	            0x415f	                                 pop r15	      1808	glob.c	FUNCTION_17
0x4000968	              0xc3	                                     ret	      1808	glob.c	FUNCTION_17
collated_compare	DO,0:ELSE,0:IF,3:WHILE,0:SWITCH,0:FOR,0:CALL,1:functions,0	19
0x40000b4	          0x488b3f	                    mov rdi, qword [rdi]	      1372	glob.c	FUNCTION_12
0x40000b7	          0x488b36	                    mov rsi, qword [rsi]	      1373	glob.c	FUNCTION_12
0x40000ba	          0x4839f7	                            cmp rdi, rsi	      1375	glob.c	FUNCTION_12	IF_1
0x40000bd	            0x7415	                            je 0x40000d4	      1375	glob.c	FUNCTION_12	IF_1
0x40000bf	          0x4885ff	                           test rdi, rdi	      1377	glob.c	FUNCTION_12	IF_2
0x40000c2	            0x7416	                            je 0x40000da	      1377	glob.c	FUNCTION_12	IF_2
0x40000c4	          0x4885f6	                           test rsi, rsi	      1379	glob.c	FUNCTION_12	IF_3
0x40000c7	            0x7417	                            je 0x40000e0	      1379	glob.c	FUNCTION_12	IF_3
0x40000c9	        0x4883ec08	                              sub rsp, 8	      1371	glob.c	FUNCTION_12
0x40000cd	      0xe800000000	                          call 0x40000d2	      1381	glob.c	FUNCTION_12	CALL_1
0x40000d2	            0xeb12	                           jmp 0x40000e6	      1381	glob.c	FUNCTION_12	CALL_1
0x40000d4	      0xb800000000	                              mov eax, 0	      1376	glob.c	FUNCTION_12	IF_1
0x40000d9	              0xc3	                                     ret	      1382	glob.c	FUNCTION_12
0x40000da	      0xb801000000	                              mov eax, 1	      1378	glob.c	FUNCTION_12	IF_2
0x40000df	              0xc3	                                     ret	      1378	glob.c	FUNCTION_12	IF_2
0x40000e0	      0xb8ffffffff	                     mov eax, 0xffffffff	      1380	glob.c	FUNCTION_12	IF_3
0x40000e5	              0xc3	                                     ret	      1380	glob.c	FUNCTION_12	IF_3
0x40000e6	        0x4883c408	                              add rsp, 8	      1382	glob.c	FUNCTION_12
0x40000ea	              0xc3	                                     ret	      1382	glob.c	FUNCTION_12
