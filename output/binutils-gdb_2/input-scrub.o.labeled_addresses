bump_line_counters	ELSE,0:SWITCH,0:DO,0:FOR,0:WHILE,0:functions,0:IF,2:CALL,0	9
0x4000655	    0x48833d000000	cmp qword [0x0400065d], 0xffffffffffffffff	       426	input-scrub.c	FUNCTION_12	IF_1
0x400065d	            0x751a	                           jne 0x4000679	       426	input-scrub.c	FUNCTION_12	IF_1
0x400065f	    0x830500000000	               add dword [0x04000666], 1	       428	input-scrub.c	FUNCTION_12	IF_1
0x4000666	    0x8b0500000000	            mov eax, dword [0x0400066c] 	       429	input-scrub.c	FUNCTION_12	IF_1	IF_2
0x400066c	            0x85c0	                           test eax, eax	       429	input-scrub.c	FUNCTION_12	IF_1	IF_2
0x400066e	            0x7809	                            js 0x4000679	       429	input-scrub.c	FUNCTION_12	IF_1	IF_2
0x4000670	          0x83c001	                              add eax, 1	       430	input-scrub.c	FUNCTION_12	IF_1	IF_2
0x4000673	    0x890500000000	            mov dword [0x04000679], eax 	       430	input-scrub.c	FUNCTION_12	IF_1	IF_2
0x4000679	            0xf3c3	                                     ret	       430	input-scrub.c	FUNCTION_12	IF_1	IF_2
as_where_physical	ELSE,0:SWITCH,0:DO,0:FOR,0:WHILE,0:functions,0:IF,3:CALL,0	12
0x400074e	    0x488b05000000	            mov rax, qword [0x04000755] 	       495	input-scrub.c	FUNCTION_15	IF_1
0x4000755	          0x4885c0	                           test rax, rax	       495	input-scrub.c	FUNCTION_15	IF_1
0x4000758	            0x740e	                            je 0x4000768	       495	input-scrub.c	FUNCTION_15	IF_1
0x400075a	          0x4885ff	                           test rdi, rdi	       497	input-scrub.c	FUNCTION_15	IF_1	IF_2
0x400075d	            0x7414	                            je 0x4000773	       497	input-scrub.c	FUNCTION_15	IF_1	IF_2
0x400075f	    0x8b1500000000	            mov edx, dword [0x04000765] 	       498	input-scrub.c	FUNCTION_15	IF_1	IF_2
0x4000765	            0x8917	                    mov dword [rdi], edx	       498	input-scrub.c	FUNCTION_15	IF_1	IF_2
0x4000767	              0xc3	                                     ret	       498	input-scrub.c	FUNCTION_15	IF_1	IF_2
0x4000768	          0x4885ff	                           test rdi, rdi	       502	input-scrub.c	FUNCTION_15	IF_3
0x400076b	            0x7406	                            je 0x4000773	       502	input-scrub.c	FUNCTION_15	IF_3
0x400076d	    0xc70700000000	                      mov dword [rdi], 0	       503	input-scrub.c	FUNCTION_15	IF_3
0x4000773	            0xf3c3	                                     ret	       505	input-scrub.c	FUNCTION_15
input_scrub_end	ELSE,0:SWITCH,0:DO,0:FOR,0:WHILE,0:functions,0:IF,1:CALL,2	9
0x400018d	    0x488b3d000000	            mov rdi, qword [0x04000194] 	       225	input-scrub.c	FUNCTION_5	IF_1
0x4000194	          0x4885ff	                           test rdi, rdi	       225	input-scrub.c	FUNCTION_5	IF_1
0x4000197	            0x741d	                            je 0x40001b6	       225	input-scrub.c	FUNCTION_5	IF_1
0x4000199	        0x4883ec08	                              sub rsp, 8	       224	input-scrub.c	FUNCTION_5
0x400019d	      0xe800000000	                          call 0x40001a2	       227	input-scrub.c	FUNCTION_5	IF_1	CALL_1
0x40001a2	    0x48c705000000	               mov qword [0x040001ad], 0	       228	input-scrub.c	FUNCTION_5	IF_1
0x40001ad	      0xe800000000	                          call 0x40001b2	       229	input-scrub.c	FUNCTION_5	IF_1	CALL_2
0x40001b2	        0x4883c408	                              add rsp, 8	       231	input-scrub.c	FUNCTION_5
0x40001b6	            0xf3c3	                                     ret	       231	input-scrub.c	FUNCTION_5
seen_at_least_1_file	ELSE,0:SWITCH,0:DO,0:FOR,0:WHILE,0:functions,0:IF,0:CALL,0	4
0x4000646	    0x48833d000000	               cmp qword [0x0400064e], 0	       420	input-scrub.c	FUNCTION_11
0x400064e	           0xf95c0	                                setne al	       420	input-scrub.c	FUNCTION_11
0x4000651	           0xfb6c0	                           movzx eax, al	       420	input-scrub.c	FUNCTION_11
0x4000654	              0xc3	                                     ret	       421	input-scrub.c	FUNCTION_11
input_scrub_begin	ELSE,0:SWITCH,0:DO,0:FOR,0:WHILE,0:functions,0:IF,0:CALL,6	8
0x400015f	        0x4883ec08	                              sub rsp, 8	       211	input-scrub.c	FUNCTION_4
0x4000163	    0x48c705000000	               mov qword [0x0400016e], 0	       216	input-scrub.c	FUNCTION_4
0x400016e	    0x48c705000000	               mov qword [0x04000179], 0	       217	input-scrub.c	FUNCTION_4
0x4000179	      0xe8c2feffff	             call sym.input_scrub_reinit	       218	input-scrub.c	FUNCTION_4	CALL_5
0x400017e	      0xbf00000000	                              mov edi, 0	       219	input-scrub.c	FUNCTION_4	CALL_6
0x4000183	      0xe800000000	                          call 0x4000188	       219	input-scrub.c	FUNCTION_4	CALL_6
0x4000188	        0x4883c408	                              add rsp, 8	       220	input-scrub.c	FUNCTION_4
0x400018c	              0xc3	                                     ret	       220	input-scrub.c	FUNCTION_4
input_scrub_include_file	ELSE,0:SWITCH,0:DO,0:FOR,0:WHILE,0:functions,0:IF,0:CALL,2	9
0x40002df	              0x53	                                push rbx	       253	input-scrub.c	FUNCTION_7
0x40002e0	          0x4889fb	                            mov rbx, rdi	       253	input-scrub.c	FUNCTION_7
0x40002e3	          0x4889f7	                            mov rdi, rsi	       254	input-scrub.c	FUNCTION_7	CALL_1
0x40002e6	      0xe89afdffff	               call sym.input_scrub_push	       254	input-scrub.c	FUNCTION_7	CALL_1
0x40002eb	    0x488905000000	            mov qword [0x040002f2], rax 	       254	input-scrub.c	FUNCTION_7	CALL_1
0x40002f2	          0x4889df	                            mov rdi, rbx	       255	input-scrub.c	FUNCTION_7	CALL_2
0x40002f5	      0xe800000000	                          call 0x40002fa	       255	input-scrub.c	FUNCTION_7	CALL_2
0x40002fa	              0x5b	                                 pop rbx	       256	input-scrub.c	FUNCTION_7
0x40002fb	              0xc3	                                     ret	       256	input-scrub.c	FUNCTION_7
input_scrub_pop	ELSE,0:SWITCH,0:DO,0:FOR,0:WHILE,0:functions,0:IF,0:CALL,4	45
0x40001b8	              0x55	                                push rbp	       184	input-scrub.c	FUNCTION_3
0x40001b9	              0x53	                                push rbx	       184	input-scrub.c	FUNCTION_3
0x40001ba	        0x4883ec08	                              sub rsp, 8	       184	input-scrub.c	FUNCTION_3
0x40001be	          0x4889fb	                            mov rbx, rdi	       184	input-scrub.c	FUNCTION_3
0x40001c1	      0xe800000000	                          call 0x40001c6	       187	input-scrub.c	FUNCTION_3	CALL_1
0x40001c6	        0x488b7b70	            mov rdi, qword [rbx + 0x70] 	       189	input-scrub.c	FUNCTION_3	CALL_2
0x40001ca	      0xe800000000	                          call 0x40001cf	       189	input-scrub.c	FUNCTION_3	CALL_2
0x40001cf	        0x488b6b78	            mov rbp, qword [rbx + 0x78] 	       190	input-scrub.c	FUNCTION_3
0x40001d3	          0x488b03	                    mov rax, qword [rbx]	       191	input-scrub.c	FUNCTION_3
0x40001d6	    0x488905000000	            mov qword [0x040001dd], rax 	       191	input-scrub.c	FUNCTION_3
0x40001dd	        0x488b4320	            mov rax, qword [rbx + 0x20] 	       192	input-scrub.c	FUNCTION_3
0x40001e1	    0x488905000000	            mov qword [0x040001e8], rax 	       192	input-scrub.c	FUNCTION_3
0x40001e8	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       193	input-scrub.c	FUNCTION_3
0x40001ec	    0x488905000000	            mov qword [0x040001f3], rax 	       193	input-scrub.c	FUNCTION_3
0x40001f3	        0x488b4330	            mov rax, qword [rbx + 0x30] 	       194	input-scrub.c	FUNCTION_3
0x40001f7	    0x488905000000	            mov qword [0x040001fe], rax 	       194	input-scrub.c	FUNCTION_3
0x40001fe	          0x8b4338	            mov eax, dword [rbx + 0x38] 	       195	input-scrub.c	FUNCTION_3
0x4000201	    0x890500000000	            mov dword [0x04000207], eax 	       195	input-scrub.c	FUNCTION_3
0x4000207	          0x8b433c	            mov eax, dword [rbx + 0x3c] 	       196	input-scrub.c	FUNCTION_3
0x400020a	    0x890500000000	            mov dword [0x04000210], eax 	       196	input-scrub.c	FUNCTION_3
0x4000210	        0x488b4340	            mov rax, qword [rbx + 0x40] 	       197	input-scrub.c	FUNCTION_3
0x4000214	    0x488905000000	            mov qword [0x0400021b], rax 	       197	input-scrub.c	FUNCTION_3
0x400021b	        0x488b4348	            mov rax, qword [rbx + 0x48] 	       198	input-scrub.c	FUNCTION_3
0x400021f	    0x488905000000	            mov qword [0x04000226], rax 	       198	input-scrub.c	FUNCTION_3
0x4000226	        0x488b4350	            mov rax, qword [rbx + 0x50] 	       198	input-scrub.c	FUNCTION_3
0x400022a	    0x488905000000	            mov qword [0x04000231], rax 	       198	input-scrub.c	FUNCTION_3
0x4000231	        0x488b4358	            mov rax, qword [rbx + 0x58] 	       198	input-scrub.c	FUNCTION_3
0x4000235	    0x488905000000	            mov qword [0x0400023c], rax 	       198	input-scrub.c	FUNCTION_3
0x400023c	          0x8b4360	            mov eax, dword [rbx + 0x60] 	       199	input-scrub.c	FUNCTION_3
0x400023f	    0x890500000000	            mov dword [0x04000245], eax 	       199	input-scrub.c	FUNCTION_3
0x4000245	        0x488b4308	                mov rax, qword [rbx + 8]	       200	input-scrub.c	FUNCTION_3
0x4000249	    0x488905000000	            mov qword [0x04000250], rax 	       200	input-scrub.c	FUNCTION_3
0x4000250	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       201	input-scrub.c	FUNCTION_3
0x4000254	    0x488905000000	            mov qword [0x0400025b], rax 	       201	input-scrub.c	FUNCTION_3
0x400025b	        0x488b4368	            mov rax, qword [rbx + 0x68] 	       202	input-scrub.c	FUNCTION_3
0x400025f	    0x488905000000	            mov qword [0x04000266], rax 	       202	input-scrub.c	FUNCTION_3
0x4000266	         0xfb64318	           movzx eax, byte [rbx + 0x18] 	       202	input-scrub.c	FUNCTION_3
0x400026a	    0x880500000000	               mov byte [0x04000270], al	       202	input-scrub.c	FUNCTION_3
0x4000270	          0x4889df	                            mov rdi, rbx	       205	input-scrub.c	FUNCTION_3	CALL_4
0x4000273	      0xe800000000	                          call 0x4000278	       205	input-scrub.c	FUNCTION_3	CALL_4
0x4000278	          0x4889e8	                            mov rax, rbp	       207	input-scrub.c	FUNCTION_3
0x400027b	        0x4883c408	                              add rsp, 8	       207	input-scrub.c	FUNCTION_3
0x400027f	              0x5b	                                 pop rbx	       207	input-scrub.c	FUNCTION_3
0x4000280	              0x5d	                                 pop rbp	       207	input-scrub.c	FUNCTION_3
0x4000281	              0xc3	                                     ret	       207	input-scrub.c	FUNCTION_3
input_scrub_new_file	ELSE,0:SWITCH,0:DO,0:FOR,0:WHILE,0:functions,0:IF,0:CALL,2	20
0x4000282	              0x53	                                push rbx	       238	input-scrub.c	FUNCTION_6
0x4000283	          0x4889fb	                            mov rbx, rdi	       238	input-scrub.c	FUNCTION_6
0x4000286	    0x803d00000000	                cmp byte [0x0400028d], 0	       239	input-scrub.c	FUNCTION_6	CALL_1
0x400028d	        0x400f94c6	                                sete sil	       239	input-scrub.c	FUNCTION_6	CALL_1
0x4000291	        0x400fb6f6	                          movzx esi, sil	       239	input-scrub.c	FUNCTION_6	CALL_1
0x4000295	      0xe800000000	                          call 0x400029a	       239	input-scrub.c	FUNCTION_6	CALL_1
0x400029a	          0x4889d8	                            mov rax, rbx	       240	input-scrub.c	FUNCTION_6	CALL_2
0x400029d	          0x803b00	                       cmp byte [rbx], 0	       240	input-scrub.c	FUNCTION_6	CALL_2
0x40002a0	            0x7514	                           jne 0x40002b6	       240	input-scrub.c	FUNCTION_6	CALL_2
0x40002a2	      0xba05000000	                              mov edx, 5	       240	input-scrub.c	FUNCTION_6	CALL_2
0x40002a7	      0xbe00000000	                              mov esi, 0	       240	input-scrub.c	FUNCTION_6	CALL_2
0x40002ac	      0xbf00000000	                              mov edi, 0	       240	input-scrub.c	FUNCTION_6	CALL_2
0x40002b1	      0xe800000000	                          call 0x40002b6	       240	input-scrub.c	FUNCTION_6	CALL_2
0x40002b6	    0x488905000000	            mov qword [0x040002bd], rax 	       240	input-scrub.c	FUNCTION_6	CALL_2
0x40002bd	    0xc70500000000	               mov dword [0x040002c7], 0	       241	input-scrub.c	FUNCTION_6
0x40002c7	    0x48c705000000	               mov qword [0x040002d2], 0	       243	input-scrub.c	FUNCTION_6
0x40002d2	    0x488b05000000	            mov rax, qword [0x040002d9] 	       244	input-scrub.c	FUNCTION_6
0x40002d9	        0x4883c001	                              add rax, 1	       244	input-scrub.c	FUNCTION_6
0x40002dd	              0x5b	                                 pop rbx	       245	input-scrub.c	FUNCTION_6
0x40002de	              0xc3	                                     ret	       245	input-scrub.c	FUNCTION_6
input_scrub_next_buffer	ELSE,1:SWITCH,0:DO,0:FOR,1:WHILE,1:functions,0:IF,10:CALL,15	122
0x4000400	              0x55	                                push rbp	       312	input-scrub.c	FUNCTION_10
0x4000401	              0x53	                                push rbx	       312	input-scrub.c	FUNCTION_10
0x4000402	        0x4883ec08	                              sub rsp, 8	       312	input-scrub.c	FUNCTION_10
0x4000406	          0x4889fd	                            mov rbp, rdi	       312	input-scrub.c	FUNCTION_10
0x4000409	    0x488b15000000	            mov rdx, qword [0x04000410] 	       315	input-scrub.c	FUNCTION_10	IF_1
0x4000410	        0x4883faff	             cmp rdx, 0xffffffffffffffff	       315	input-scrub.c	FUNCTION_10	IF_1
0x4000414	     0xf849d000000	                            je 0x40004b7	       315	input-scrub.c	FUNCTION_10	IF_1
0x400041a	    0x488b05000000	            mov rax, qword [0x04000421] 	       317	input-scrub.c	FUNCTION_10	IF_1	IF_2
0x4000421	          0x4839c2	                            cmp rdx, rax	       317	input-scrub.c	FUNCTION_10	IF_1	IF_2
0x4000424	            0x725c	                            jb 0x4000482	       317	input-scrub.c	FUNCTION_10	IF_1	IF_2
0x4000426	      0xbf00000000	                              mov edi, 0	       319	input-scrub.c	FUNCTION_10	IF_1	IF_2	CALL_1
0x400042b	      0xe800000000	                          call 0x4000430	       319	input-scrub.c	FUNCTION_10	IF_1	IF_2	CALL_1
0x4000430	    0x833d00000000	               cmp dword [0x04000437], 0	       320	input-scrub.c	FUNCTION_10	IF_1	IF_2	IF_3
0x4000437	            0x740b	                            je 0x4000444	       320	input-scrub.c	FUNCTION_10	IF_1	IF_2	IF_3
0x4000439	    0x8b3d00000000	            mov edi, dword [0x0400043f] 	       322	input-scrub.c	FUNCTION_10	IF_1	IF_2	IF_3	CALL_2
0x400043f	      0xe800000000	                          call 0x4000444	       322	input-scrub.c	FUNCTION_10	IF_1	IF_2	IF_3	CALL_2
0x4000444	    0x832d00000000	               sub dword [0x0400044b], 1	       329	input-scrub.c	FUNCTION_10	IF_1	IF_2
0x400044b	    0x48c705000000	               mov qword [0x04000456], 0	       330	input-scrub.c	FUNCTION_10	IF_1	IF_2
0x4000456	    0x48c705000000	               mov qword [0x04000461], 0	       331	input-scrub.c	FUNCTION_10	IF_1	IF_2
0x4000461	    0x488b3d000000	            mov rdi, qword [0x04000468] 	       332	input-scrub.c	FUNCTION_10	IF_1	IF_2	IF_4
0x4000468	          0x4885ff	                           test rdi, rdi	       332	input-scrub.c	FUNCTION_10	IF_1	IF_2	IF_4
0x400046b	            0x7409	                            je 0x4000476	       332	input-scrub.c	FUNCTION_10	IF_1	IF_2	IF_4
0x400046d	      0xe846fdffff	                call sym.input_scrub_pop	       333	input-scrub.c	FUNCTION_10	IF_1	IF_2	CALL_4
0x4000472	        0x48894500	                    mov qword [rbp], rax	       333	input-scrub.c	FUNCTION_10	IF_1	IF_2	CALL_4
0x4000476	    0x488b05000000	            mov rax, qword [0x0400047d] 	       334	input-scrub.c	FUNCTION_10	IF_1	IF_2
0x400047d	      0xe9bd010000	                           jmp 0x400063f	       334	input-scrub.c	FUNCTION_10	IF_1	IF_2
0x4000482	    0x488b0d000000	            mov rcx, qword [0x04000489] 	       337	input-scrub.c	FUNCTION_10	IF_1
0x4000489	          0x4801c8	                            add rax, rcx	       337	input-scrub.c	FUNCTION_10	IF_1
0x400048c	    0x488905000000	            mov qword [0x04000493], rax 	       337	input-scrub.c	FUNCTION_10	IF_1
0x4000493	    0x48c705000000	               mov qword [0x0400049e], 0	       338	input-scrub.c	FUNCTION_10	IF_1
0x400049e	          0x4801ca	                            add rdx, rcx	       339	input-scrub.c	FUNCTION_10	IF_1
0x40004a1	          0x488917	                    mov qword [rdi], rdx	       339	input-scrub.c	FUNCTION_10	IF_1
0x40004a4	    0x488b15000000	            mov rdx, qword [0x040004ab] 	       340	input-scrub.c	FUNCTION_10	IF_1
0x40004ab	    0x488915000000	            mov qword [0x040004b2], rdx 	       340	input-scrub.c	FUNCTION_10	IF_1
0x40004b2	      0xe988010000	                           jmp 0x400063f	       341	input-scrub.c	FUNCTION_10	IF_1
0x40004b7	    0x488b15000000	            mov rdx, qword [0x040004be] 	       344	input-scrub.c	FUNCTION_10	IF_5
0x40004be	          0x4885d2	                           test rdx, rdx	       344	input-scrub.c	FUNCTION_10	IF_5
0x40004c1	            0x7421	                            je 0x40004e4	       344	input-scrub.c	FUNCTION_10	IF_5
0x40004c3	    0x488b1d000000	            mov rbx, qword [0x040004ca] 	       346	input-scrub.c	FUNCTION_10	IF_5	CALL_5
0x40004ca	        0x488d7b01	                      lea rdi, [rbx + 1]	        59	string3.h	FUNCTION_18	CALL_3
0x40004ce	    0x488b35000000	            mov rsi, qword [0x040004d5] 	        59	string3.h	FUNCTION_18	CALL_3
0x40004d5	      0xe800000000	                          call 0x40004da	        59	string3.h	FUNCTION_18	CALL_3
0x40004da	     0xfb605000000	           movzx eax, byte [0x040004e1] 	        53	string3.h	FUNCTION_17	CALL_3
0x40004e1	          0x884301	                  mov byte [rbx + 1], al	        53	string3.h	FUNCTION_17	CALL_3
0x40004e4	    0x488b05000000	            mov rax, qword [0x040004eb] 	       353	input-scrub.c	FUNCTION_10	WHILE_1
0x40004eb	    0x488b15000000	            mov rdx, qword [0x040004f2] 	       353	input-scrub.c	FUNCTION_10	WHILE_1
0x40004f2	      0x488d5c1001	                lea rbx, [rax + rdx + 1]	       353	input-scrub.c	FUNCTION_10	WHILE_1
0x40004f7	        0x4883c001	                              add rax, 1	       355	input-scrub.c	FUNCTION_10	WHILE_1
0x40004fb	        0x48894500	                    mov qword [rbp], rax	       355	input-scrub.c	FUNCTION_10	WHILE_1
0x40004ff	          0x4889df	                            mov rdi, rbx	       356	input-scrub.c	FUNCTION_10	WHILE_1	CALL_7
0x4000502	      0xe800000000	                          call 0x4000507	       356	input-scrub.c	FUNCTION_10	WHILE_1	CALL_7
0x4000507	          0x4885c0	                           test rax, rax	       357	input-scrub.c	FUNCTION_10	WHILE_1	IF_6
0x400050a	            0x754c	                           jne 0x4000558	       357	input-scrub.c	FUNCTION_10	WHILE_1	IF_6
0x400050c	    0x48833d000000	               cmp qword [0x04000514], 0	       359	input-scrub.c	FUNCTION_10	WHILE_1	IF_6	IF_7
0x4000514	     0xf84eb000000	                            je 0x4000605	       359	input-scrub.c	FUNCTION_10	WHILE_1	IF_6	IF_7
0x400051a	      0xba05000000	                              mov edx, 5	       363	input-scrub.c	FUNCTION_10	WHILE_1	IF_6	CALL_9
0x400051f	      0xbe00000000	                              mov esi, 0	       363	input-scrub.c	FUNCTION_10	WHILE_1	IF_6	CALL_9
0x4000524	      0xbf00000000	                              mov edi, 0	       363	input-scrub.c	FUNCTION_10	WHILE_1	IF_6	CALL_9
0x4000529	      0xe800000000	                          call 0x400052e	       363	input-scrub.c	FUNCTION_10	WHILE_1	IF_6	CALL_9
0x400052e	          0x4889c7	                            mov rdi, rax	       363	input-scrub.c	FUNCTION_10	WHILE_1	IF_6	CALL_9
0x4000531	      0xb800000000	                              mov eax, 0	       363	input-scrub.c	FUNCTION_10	WHILE_1	IF_6	CALL_9
0x4000536	      0xe800000000	                          call 0x400053b	       363	input-scrub.c	FUNCTION_10	WHILE_1	IF_6	CALL_9
0x400053b	    0x488b0d000000	            mov rcx, qword [0x04000542] 	       364	input-scrub.c	FUNCTION_10	WHILE_1	IF_6
0x4000542	    0x488b15000000	            mov rdx, qword [0x04000549] 	       364	input-scrub.c	FUNCTION_10	WHILE_1	IF_6
0x4000549	      0x488d441102	                lea rax, [rcx + rdx + 2]	       365	input-scrub.c	FUNCTION_10	WHILE_1	IF_6
0x400054e	      0xc64411010a	           mov byte [rcx + rdx + 1], 0xa	       365	input-scrub.c	FUNCTION_10	WHILE_1	IF_6
0x4000553	          0x4889c2	                            mov rdx, rax	       365	input-scrub.c	FUNCTION_10	WHILE_1	IF_6
0x4000556	            0xeb2a	                           jmp 0x4000582	       365	input-scrub.c	FUNCTION_10	WHILE_1	IF_6
0x4000558	          0xc60000	                       mov byte [rax], 0	       371	input-scrub.c	FUNCTION_10	WHILE_1	ELSE_1
0x400055b	        0x488d50ff	                      lea rdx, [rax - 1]	       374	input-scrub.c	FUNCTION_10	WHILE_1	ELSE_1	FOR_1
0x400055f	        0x8078ff0a	                 cmp byte [rax - 1], 0xa	       374	input-scrub.c	FUNCTION_10	WHILE_1	ELSE_1	FOR_1
0x4000563	            0x7419	                            je 0x400057e	       374	input-scrub.c	FUNCTION_10	WHILE_1	ELSE_1	FOR_1
0x4000565	          0x4839d3	                            cmp rbx, rdx	       375	input-scrub.c	FUNCTION_10	WHILE_1	ELSE_1	FOR_1	IF_8
0x4000568	            0x773d	                            ja 0x40005a7	       375	input-scrub.c	FUNCTION_10	WHILE_1	ELSE_1	FOR_1	IF_8
0x400056a	        0x488d7bff	                      lea rdi, [rbx - 1]	       375	input-scrub.c	FUNCTION_10	WHILE_1	ELSE_1	FOR_1	IF_8
0x400056e	            0xeb05	                           jmp 0x4000575	       375	input-scrub.c	FUNCTION_10	WHILE_1	ELSE_1	FOR_1	IF_8
0x4000570	          0x4839fa	                            cmp rdx, rdi	       375	input-scrub.c	FUNCTION_10	WHILE_1	ELSE_1	FOR_1	IF_8
0x4000573	            0x7432	                            je 0x40005a7	       375	input-scrub.c	FUNCTION_10	WHILE_1	ELSE_1	FOR_1	IF_8
0x4000575	        0x4883ea01	                              sub rdx, 1	       374	input-scrub.c	FUNCTION_10	WHILE_1	ELSE_1	FOR_1
0x4000579	          0x803a0a	                     cmp byte [rdx], 0xa	       374	input-scrub.c	FUNCTION_10	WHILE_1	ELSE_1	FOR_1
0x400057c	            0x75f2	                           jne 0x4000570	       374	input-scrub.c	FUNCTION_10	WHILE_1	ELSE_1	FOR_1
0x400057e	        0x4883c201	                              add rdx, 1	       377	input-scrub.c	FUNCTION_10	WHILE_1	ELSE_1
0x4000582	    0x488915000000	            mov qword [0x04000589], rdx 	       381	input-scrub.c	FUNCTION_10	WHILE_1
0x4000589	          0x4829d0	                            sub rax, rdx	       382	input-scrub.c	FUNCTION_10	WHILE_1
0x400058c	    0x488905000000	            mov qword [0x04000593], rax 	       382	input-scrub.c	FUNCTION_10	WHILE_1
0x4000593	           0xfb602	                   movzx eax, byte [rdx]	       382	input-scrub.c	FUNCTION_10	WHILE_1
0x4000596	    0x880500000000	               mov byte [0x0400059c], al	       382	input-scrub.c	FUNCTION_10	WHILE_1
0x400059c	          0xc60200	                       mov byte [rdx], 0	        53	string3.h	FUNCTION_17	CALL_3
0x400059f	          0x4889d0	                            mov rax, rdx	       387	input-scrub.c	FUNCTION_10	WHILE_1
0x40005a2	      0xe998000000	                           jmp 0x400063f	       387	input-scrub.c	FUNCTION_10	WHILE_1
0x40005a7	    0x488b35000000	            mov rsi, qword [0x040005ae] 	       391	input-scrub.c	FUNCTION_10	WHILE_1
0x40005ae	        0x488d5601	                      lea rdx, [rsi + 1]	       391	input-scrub.c	FUNCTION_10	WHILE_1
0x40005b2	          0x4829d0	                            sub rax, rdx	       391	input-scrub.c	FUNCTION_10	WHILE_1
0x40005b5	    0x488905000000	            mov qword [0x040005bc], rax 	       391	input-scrub.c	FUNCTION_10	WHILE_1
0x40005bc	    0x488b1d000000	            mov rbx, qword [0x040005c3] 	       392	input-scrub.c	FUNCTION_10	WHILE_1	IF_9	CALL_12
0x40005c3	      0xe800000000	                          call 0x40005c8	       392	input-scrub.c	FUNCTION_10	WHILE_1	IF_9	CALL_12
0x40005c8	          0x4829c3	                            sub rbx, rax	       392	input-scrub.c	FUNCTION_10	WHILE_1	IF_9	CALL_12
0x40005cb	    0x483b1d000000	            cmp rbx, qword [0x040005d2] 	       392	input-scrub.c	FUNCTION_10	WHILE_1	IF_9	CALL_12
0x40005d2	     0xf830cffffff	                           jae 0x40004e4	       392	input-scrub.c	FUNCTION_10	WHILE_1	IF_9	CALL_12
0x40005d8	    0x488b05000000	            mov rax, qword [0x040005df] 	       396	input-scrub.c	FUNCTION_10	WHILE_1	IF_9
0x40005df	          0x4801c0	                            add rax, rax	       396	input-scrub.c	FUNCTION_10	WHILE_1	IF_9
0x40005e2	    0x488905000000	            mov qword [0x040005e9], rax 	       396	input-scrub.c	FUNCTION_10	WHILE_1	IF_9
0x40005e9	        0x488d7003	                      lea rsi, [rax + 3]	       397	input-scrub.c	FUNCTION_10	WHILE_1	IF_9	CALL_13
0x40005ed	    0x488b3d000000	            mov rdi, qword [0x040005f4] 	       397	input-scrub.c	FUNCTION_10	WHILE_1	IF_9	CALL_13
0x40005f4	      0xe800000000	                          call 0x40005f9	       397	input-scrub.c	FUNCTION_10	WHILE_1	IF_9	CALL_13
0x40005f9	    0x488905000000	            mov qword [0x04000600], rax 	       397	input-scrub.c	FUNCTION_10	WHILE_1	IF_9	CALL_13
0x4000600	      0xe9dffeffff	                           jmp 0x40004e4	       397	input-scrub.c	FUNCTION_10	WHILE_1	IF_9	CALL_13
0x4000605	    0x833d00000000	               cmp dword [0x0400060c], 0	       404	input-scrub.c	FUNCTION_10	CALL_14
0x400060c	            0x740a	                            je 0x4000618	       404	input-scrub.c	FUNCTION_10	CALL_14
0x400060e	      0xbf00000000	                              mov edi, 0	       404	input-scrub.c	FUNCTION_10	CALL_14
0x4000613	      0xe800000000	                          call 0x4000618	       404	input-scrub.c	FUNCTION_10	CALL_14
0x4000618	    0x48c705000000	               mov qword [0x04000623], 0	       407	input-scrub.c	FUNCTION_10
0x4000623	    0x488b3d000000	            mov rdi, qword [0x0400062a] 	       408	input-scrub.c	FUNCTION_10	IF_10
0x400062a	          0x4885ff	                           test rdi, rdi	       408	input-scrub.c	FUNCTION_10	IF_10
0x400062d	            0x7409	                            je 0x4000638	       408	input-scrub.c	FUNCTION_10	IF_10
0x400062f	      0xe884fbffff	                call sym.input_scrub_pop	       409	input-scrub.c	FUNCTION_10	CALL_15
0x4000634	        0x48894500	                    mov qword [rbp], rax	       409	input-scrub.c	FUNCTION_10	CALL_15
0x4000638	    0x488b05000000	            mov rax, qword [0x0400063f] 	       411	input-scrub.c	FUNCTION_10
0x400063f	        0x4883c408	                              add rsp, 8	       412	input-scrub.c	FUNCTION_10
0x4000643	              0x5b	                                 pop rbx	       412	input-scrub.c	FUNCTION_10
0x4000644	              0x5d	                                 pop rbp	       412	input-scrub.c	FUNCTION_10
0x4000645	              0xc3	                                     ret	       412	input-scrub.c	FUNCTION_10
new_logical_line_flags	ELSE,2:SWITCH,1:DO,0:FOR,0:WHILE,0:functions,0:IF,4:CALL,3	57
0x400067b	              0x53	                                push rbx	       446	input-scrub.c	FUNCTION_13
0x400067c	          0x4889fb	                            mov rbx, rdi	       446	input-scrub.c	FUNCTION_13
0x400067f	          0x83fa01	                              cmp edx, 1	       447	input-scrub.c	FUNCTION_13	SWITCH_1
0x4000682	            0x7417	                            je 0x400069b	       447	input-scrub.c	FUNCTION_13	SWITCH_1
0x4000684	          0x83fa01	                              cmp edx, 1	       447	input-scrub.c	FUNCTION_13	SWITCH_1
0x4000687	            0x7f06	                            jg 0x400068f	       447	input-scrub.c	FUNCTION_13	SWITCH_1
0x4000689	            0x85d2	                           test edx, edx	       447	input-scrub.c	FUNCTION_13	SWITCH_1
0x400068b	            0x7527	                           jne 0x40006b4	       447	input-scrub.c	FUNCTION_13	SWITCH_1
0x400068d	            0xeb39	                           jmp 0x40006c8	       447	input-scrub.c	FUNCTION_13	SWITCH_1
0x400068f	          0x83fa02	                              cmp edx, 2	       447	input-scrub.c	FUNCTION_13	SWITCH_1
0x4000692	            0x7434	                            je 0x40006c8	       447	input-scrub.c	FUNCTION_13	SWITCH_1
0x4000694	          0x83fa04	                              cmp edx, 4	       447	input-scrub.c	FUNCTION_13	SWITCH_1
0x4000697	            0x751b	                           jne 0x40006b4	       447	input-scrub.c	FUNCTION_13	SWITCH_1
0x4000699	            0xeb2d	                           jmp 0x40006c8	       447	input-scrub.c	FUNCTION_13	SWITCH_1
0x400069b	          0x83feff	             cmp esi, 0xffffffffffffffff	       452	input-scrub.c	FUNCTION_13	SWITCH_1	IF_1
0x400069e	            0x7434	                            je 0x40006d4	       452	input-scrub.c	FUNCTION_13	SWITCH_1	IF_1
0x40006a0	      0xba00000000	                              mov edx, 0	       453	input-scrub.c	FUNCTION_13	SWITCH_1	CALL_1
0x40006a5	      0xbec5010000	                          mov esi, 0x1c5	       453	input-scrub.c	FUNCTION_13	SWITCH_1	CALL_1
0x40006aa	      0xbf00000000	                              mov edi, 0	       453	input-scrub.c	FUNCTION_13	SWITCH_1	CALL_1
0x40006af	      0xe800000000	                          call 0x40006b4	       453	input-scrub.c	FUNCTION_13	SWITCH_1	CALL_1
0x40006b4	      0xba00000000	                              mov edx, 0	       460	input-scrub.c	FUNCTION_13	SWITCH_1	CALL_2
0x40006b9	      0xbecc010000	                          mov esi, 0x1cc	       460	input-scrub.c	FUNCTION_13	SWITCH_1	CALL_2
0x40006be	      0xbf00000000	                              mov edi, 0	       460	input-scrub.c	FUNCTION_13	SWITCH_1	CALL_2
0x40006c3	      0xe800000000	                          call 0x40006c8	       460	input-scrub.c	FUNCTION_13	SWITCH_1	CALL_2
0x40006c8	            0x85f6	                           test esi, esi	       463	input-scrub.c	FUNCTION_13	IF_2
0x40006ca	            0x7808	                            js 0x40006d4	       463	input-scrub.c	FUNCTION_13	IF_2
0x40006cc	    0x893500000000	            mov dword [0x040006d2], esi 	       464	input-scrub.c	FUNCTION_13	IF_2
0x40006d2	            0xeb35	                           jmp 0x4000709	       464	input-scrub.c	FUNCTION_13	IF_2
0x40006d4	          0x83feff	             cmp esi, 0xffffffffffffffff	       465	input-scrub.c	FUNCTION_13	ELSE_1	IF_3
0x40006d7	            0x7530	                           jne 0x4000709	       465	input-scrub.c	FUNCTION_13	ELSE_1	IF_3
0x40006d9	          0x4885db	                           test rbx, rbx	       465	input-scrub.c	FUNCTION_13	ELSE_1	IF_3
0x40006dc	            0x742b	                            je 0x4000709	       465	input-scrub.c	FUNCTION_13	ELSE_1	IF_3
0x40006de	          0x803b00	                       cmp byte [rbx], 0	       465	input-scrub.c	FUNCTION_13	ELSE_1	IF_3
0x40006e1	            0x7526	                           jne 0x4000709	       465	input-scrub.c	FUNCTION_13	ELSE_1	IF_3
0x40006e3	          0xf6c204	                              test dl, 4	       465	input-scrub.c	FUNCTION_13	ELSE_1	IF_3
0x40006e6	            0x7421	                            je 0x4000709	       465	input-scrub.c	FUNCTION_13	ELSE_1	IF_3
0x40006e8	    0x488b05000000	            mov rax, qword [0x040006ef] 	       467	input-scrub.c	FUNCTION_13	ELSE_1	IF_3
0x40006ef	    0x488905000000	            mov qword [0x040006f6], rax 	       467	input-scrub.c	FUNCTION_13	ELSE_1	IF_3
0x40006f6	    0x8b0500000000	            mov eax, dword [0x040006fc] 	       468	input-scrub.c	FUNCTION_13	ELSE_1	IF_3
0x40006fc	    0x890500000000	            mov dword [0x04000702], eax 	       468	input-scrub.c	FUNCTION_13	ELSE_1	IF_3
0x4000702	      0xb800000000	                              mov eax, 0	       480	input-scrub.c	FUNCTION_13	ELSE_2
0x4000707	            0xeb30	                           jmp 0x4000739	       480	input-scrub.c	FUNCTION_13	ELSE_2
0x4000709	          0x4885db	                           test rbx, rbx	       472	input-scrub.c	FUNCTION_13	IF_4
0x400070c	            0x7426	                            je 0x4000734	       472	input-scrub.c	FUNCTION_13	IF_4
0x400070e	    0x488b3d000000	            mov rdi, qword [0x04000715] 	       473	input-scrub.c	FUNCTION_13	IF_4
0x4000715	          0x4885ff	                           test rdi, rdi	       473	input-scrub.c	FUNCTION_13	IF_4
0x4000718	            0x740c	                            je 0x4000726	       473	input-scrub.c	FUNCTION_13	IF_4
0x400071a	          0x4889de	                            mov rsi, rbx	       474	input-scrub.c	FUNCTION_13	IF_4	CALL_3
0x400071d	      0xe800000000	                          call 0x4000722	       474	input-scrub.c	FUNCTION_13	IF_4	CALL_3
0x4000722	            0x85c0	                           test eax, eax	       474	input-scrub.c	FUNCTION_13	IF_4	CALL_3
0x4000724	            0x7413	                            je 0x4000739	       474	input-scrub.c	FUNCTION_13	IF_4	CALL_3
0x4000726	    0x48891d000000	            mov qword [0x0400072d], rbx 	       476	input-scrub.c	FUNCTION_13	IF_4
0x400072d	      0xb801000000	                              mov eax, 1	       477	input-scrub.c	FUNCTION_13	IF_4
0x4000732	            0xeb05	                           jmp 0x4000739	       477	input-scrub.c	FUNCTION_13	IF_4
0x4000734	      0xb800000000	                              mov eax, 0	       480	input-scrub.c	FUNCTION_13	ELSE_2
0x4000739	              0x5b	                                 pop rbx	       481	input-scrub.c	FUNCTION_13	ELSE_2
0x400073a	              0xc3	                                     ret	       481	input-scrub.c	FUNCTION_13	ELSE_2
input_scrub_reinit	ELSE,0:SWITCH,0:DO,0:FOR,0:WHILE,0:functions,0:IF,0:CALL,4	13
0x4000040	        0x4883ec08	                              sub rsp, 8	       138	input-scrub.c	FUNCTION_1
0x4000044	      0xe800000000	                          call 0x4000049	       139	input-scrub.c	FUNCTION_1	CALL_1
0x4000049	    0xc70500000000	     mov dword [0x04000053], 0xffffffff 	       140	input-scrub.c	FUNCTION_1
0x4000053	    0x48c705000000	               mov qword [0x0400005e], 0	       141	input-scrub.c	FUNCTION_1
0x400005e	      0xe800000000	                          call 0x4000063	       143	input-scrub.c	FUNCTION_1	CALL_2
0x4000063	          0x4801c0	                            add rax, rax	       143	input-scrub.c	FUNCTION_1	CALL_2
0x4000066	    0x488905000000	            mov qword [0x0400006d], rax 	       143	input-scrub.c	FUNCTION_1	CALL_2
0x400006d	        0x488d7803	                      lea rdi, [rax + 3]	       144	input-scrub.c	FUNCTION_1	CALL_3
0x4000071	      0xe800000000	                          call 0x4000076	       144	input-scrub.c	FUNCTION_1	CALL_3
0x4000076	    0x488905000000	            mov qword [0x0400007d], rax 	       144	input-scrub.c	FUNCTION_1	CALL_3
0x400007d	          0xc6000a	                     mov byte [rax], 0xa	        53	string3.h	FUNCTION_17	CALL_3
0x4000080	        0x4883c408	                              add rsp, 8	       146	input-scrub.c	FUNCTION_1
0x4000084	              0xc3	                                     ret	       146	input-scrub.c	FUNCTION_1
input_scrub_include_sb	ELSE,0:SWITCH,0:DO,0:FOR,0:WHILE,0:functions,0:IF,3:CALL,8	55
0x40002fc	              0x55	                                push rbp	       263	input-scrub.c	FUNCTION_8
0x40002fd	              0x53	                                push rbx	       263	input-scrub.c	FUNCTION_8
0x40002fe	        0x4883ec08	                              sub rsp, 8	       263	input-scrub.c	FUNCTION_8
0x4000302	    0x8b0500000000	            mov eax, dword [0x04000308] 	       266	input-scrub.c	FUNCTION_8	IF_1
0x4000308	    0x3b0500000000	            cmp eax, dword [0x0400030e] 	       266	input-scrub.c	FUNCTION_8	IF_1
0x400030e	            0x7e21	                           jle 0x4000331	       266	input-scrub.c	FUNCTION_8	IF_1
0x4000310	      0xba05000000	                              mov edx, 5	       267	input-scrub.c	FUNCTION_8	CALL_2
0x4000315	      0xbe00000000	                              mov esi, 0	       267	input-scrub.c	FUNCTION_8	CALL_2
0x400031a	      0xbf00000000	                              mov edi, 0	       267	input-scrub.c	FUNCTION_8	CALL_2
0x400031f	      0xe800000000	                          call 0x4000324	       267	input-scrub.c	FUNCTION_8	CALL_2
0x4000324	          0x4889c7	                            mov rdi, rax	       267	input-scrub.c	FUNCTION_8	CALL_2
0x4000327	      0xb800000000	                              mov eax, 0	       267	input-scrub.c	FUNCTION_8	CALL_2
0x400032c	      0xe800000000	                          call 0x4000331	       267	input-scrub.c	FUNCTION_8	CALL_2
0x4000331	          0x4889fb	                            mov rbx, rdi	       267	input-scrub.c	FUNCTION_8	CALL_2
0x4000334	            0x89d5	                            mov ebp, edx	       267	input-scrub.c	FUNCTION_8	CALL_2
0x4000336	          0x83c001	                              add eax, 1	       268	input-scrub.c	FUNCTION_8
0x4000339	    0x890500000000	            mov dword [0x0400033f], eax 	       268	input-scrub.c	FUNCTION_8
0x400033f	          0x4889f7	                            mov rdi, rsi	       277	input-scrub.c	FUNCTION_8	CALL_4
0x4000342	      0xe83efdffff	               call sym.input_scrub_push	       277	input-scrub.c	FUNCTION_8	CALL_4
0x4000347	    0x488905000000	            mov qword [0x0400034e], rax 	       277	input-scrub.c	FUNCTION_8	CALL_4
0x400034e	        0x488b7308	                mov rsi, qword [rbx + 8]	       280	input-scrub.c	FUNCTION_8
0x4000352	          0x4885f6	                           test rsi, rsi	       280	input-scrub.c	FUNCTION_8
0x4000355	            0x746e	                            je 0x40003c5	       280	input-scrub.c	FUNCTION_8
0x4000357	          0x488b03	                    mov rax, qword [rbx]	       280	input-scrub.c	FUNCTION_8
0x400035a	          0x80380a	                     cmp byte [rax], 0xa	       280	input-scrub.c	FUNCTION_8
0x400035d	            0x7541	                           jne 0x40003a0	       280	input-scrub.c	FUNCTION_8
0x400035f	            0xeb64	                           jmp 0x40003c5	       280	input-scrub.c	FUNCTION_8
0x4000361	          0x4889de	                            mov rsi, rbx	       288	input-scrub.c	FUNCTION_8	CALL_7
0x4000364	      0xbf00000000	                              mov edi, 0	       288	input-scrub.c	FUNCTION_8	CALL_7
0x4000369	      0xe800000000	                          call 0x400036e	       288	input-scrub.c	FUNCTION_8	CALL_7
0x400036e	      0xbf00000000	                              mov edi, 0	       292	input-scrub.c	FUNCTION_8	CALL_8
0x4000373	      0xe800000000	                          call 0x4000378	       292	input-scrub.c	FUNCTION_8	CALL_8
0x4000378	    0x48c705000000	               mov qword [0x04000383], 1	       294	input-scrub.c	FUNCTION_8
0x4000383	    0x488b05000000	            mov rax, qword [0x0400038a] 	       298	input-scrub.c	FUNCTION_8
0x400038a	          0x8b503c	            mov edx, dword [rax + 0x3c] 	       298	input-scrub.c	FUNCTION_8
0x400038d	    0x891500000000	            mov dword [0x04000393], edx 	       298	input-scrub.c	FUNCTION_8
0x4000393	        0x488b4030	            mov rax, qword [rax + 0x30] 	       299	input-scrub.c	FUNCTION_8
0x4000397	    0x488905000000	            mov qword [0x0400039e], rax 	       299	input-scrub.c	FUNCTION_8
0x400039e	            0xeb37	                           jmp 0x40003d7	       300	input-scrub.c	FUNCTION_8
0x40003a0	        0x4883c601	                              add rsi, 1	       281	input-scrub.c	FUNCTION_8	CALL_5
0x40003a4	      0xbf00000000	                              mov edi, 0	       281	input-scrub.c	FUNCTION_8	CALL_5
0x40003a9	      0xe800000000	                          call 0x40003ae	       281	input-scrub.c	FUNCTION_8	CALL_5
0x40003ae	    0x892d00000000	            mov dword [0x040003b4], ebp 	       282	input-scrub.c	FUNCTION_8
0x40003b4	      0xbe0a000000	                            mov esi, 0xa	       286	input-scrub.c	FUNCTION_8	IF_3	CALL_6
0x40003b9	      0xbf00000000	                              mov edi, 0	       286	input-scrub.c	FUNCTION_8	IF_3	CALL_6
0x40003be	      0xe800000000	                          call 0x40003c3	       286	input-scrub.c	FUNCTION_8	IF_3	CALL_6
0x40003c3	            0xeb9c	                           jmp 0x4000361	       286	input-scrub.c	FUNCTION_8	IF_3	CALL_6
0x40003c5	      0xbf00000000	                              mov edi, 0	       281	input-scrub.c	FUNCTION_8	CALL_5
0x40003ca	      0xe800000000	                          call 0x40003cf	       281	input-scrub.c	FUNCTION_8	CALL_5
0x40003cf	    0x892d00000000	            mov dword [0x040003d5], ebp 	       282	input-scrub.c	FUNCTION_8
0x40003d5	            0xeb8a	                           jmp 0x4000361	       282	input-scrub.c	FUNCTION_8
0x40003d7	        0x4883c408	                              add rsp, 8	       300	input-scrub.c	FUNCTION_8
0x40003db	              0x5b	                                 pop rbx	       300	input-scrub.c	FUNCTION_8
0x40003dc	              0x5d	                                 pop rbp	       300	input-scrub.c	FUNCTION_8
0x40003dd	              0xc3	                                     ret	       300	input-scrub.c	FUNCTION_8
as_where	ELSE,0:SWITCH,0:DO,0:FOR,0:WHILE,0:functions,0:IF,2:CALL,1	12
0x4000775	    0x488b05000000	            mov rax, qword [0x0400077c] 	       512	input-scrub.c	FUNCTION_16	IF_1
0x400077c	          0x4885c0	                           test rax, rax	       512	input-scrub.c	FUNCTION_16	IF_1
0x400077f	            0x7412	                            je 0x4000793	       512	input-scrub.c	FUNCTION_16	IF_1
0x4000781	          0x4885ff	                           test rdi, rdi	       513	input-scrub.c	FUNCTION_16	IF_1
0x4000784	            0x7412	                            je 0x4000798	       513	input-scrub.c	FUNCTION_16	IF_1
0x4000786	    0x8b1500000000	            mov edx, dword [0x0400078c] 	       513	input-scrub.c	FUNCTION_16	IF_1
0x400078c	            0x85d2	                           test edx, edx	       513	input-scrub.c	FUNCTION_16	IF_1
0x400078e	            0x7803	                            js 0x4000793	       513	input-scrub.c	FUNCTION_16	IF_1
0x4000790	            0x8917	                    mov dword [rdi], edx	       516	input-scrub.c	FUNCTION_16	IF_1	IF_2
0x4000792	              0xc3	                                     ret	       516	input-scrub.c	FUNCTION_16	IF_1	IF_2
0x4000793	      0xe800000000	                          call 0x4000798	       520	input-scrub.c	FUNCTION_16	CALL_1
0x4000798	            0xf3c3	                                     ret	       521	input-scrub.c	FUNCTION_16
input_scrub_push	ELSE,0:SWITCH,0:DO,0:FOR,0:WHILE,0:functions,0:IF,0:CALL,4	47
0x4000085	              0x55	                                push rbp	       154	input-scrub.c	FUNCTION_2
0x4000086	              0x53	                                push rbx	       154	input-scrub.c	FUNCTION_2
0x4000087	        0x4883ec08	                              sub rsp, 8	       154	input-scrub.c	FUNCTION_2
0x400008b	          0x4889fd	                            mov rbp, rdi	       154	input-scrub.c	FUNCTION_2
0x400008e	      0xbf80000000	                           mov edi, 0x80	       157	input-scrub.c	FUNCTION_2	CALL_1
0x4000093	      0xe800000000	                          call 0x4000098	       157	input-scrub.c	FUNCTION_2	CALL_1
0x4000098	          0x4889c3	                            mov rbx, rax	       157	input-scrub.c	FUNCTION_2	CALL_1
0x400009b	        0x48896878	             mov qword [rax + 0x78], rbp	       159	input-scrub.c	FUNCTION_2
0x400009f	    0x488b05000000	            mov rax, qword [0x040000a6] 	       160	input-scrub.c	FUNCTION_2
0x40000a6	          0x488903	                    mov qword [rbx], rax	       160	input-scrub.c	FUNCTION_2
0x40000a9	    0x488b05000000	            mov rax, qword [0x040000b0] 	       161	input-scrub.c	FUNCTION_2
0x40000b0	        0x48894308	                mov qword [rbx + 8], rax	       161	input-scrub.c	FUNCTION_2
0x40000b4	    0x488b05000000	            mov rax, qword [0x040000bb] 	       162	input-scrub.c	FUNCTION_2
0x40000bb	        0x48894310	             mov qword [rbx + 0x10], rax	       162	input-scrub.c	FUNCTION_2
0x40000bf	    0x488b05000000	            mov rax, qword [0x040000c6] 	       163	input-scrub.c	FUNCTION_2
0x40000c6	        0x48894320	             mov qword [rbx + 0x20], rax	       163	input-scrub.c	FUNCTION_2
0x40000ca	    0x488b05000000	            mov rax, qword [0x040000d1] 	       164	input-scrub.c	FUNCTION_2
0x40000d1	        0x48894328	             mov qword [rbx + 0x28], rax	       164	input-scrub.c	FUNCTION_2
0x40000d5	    0x488b05000000	            mov rax, qword [0x040000dc] 	       165	input-scrub.c	FUNCTION_2
0x40000dc	        0x48894330	             mov qword [rbx + 0x30], rax	       165	input-scrub.c	FUNCTION_2
0x40000e0	    0x8b0500000000	            mov eax, dword [0x040000e6] 	       166	input-scrub.c	FUNCTION_2
0x40000e6	          0x894338	             mov dword [rbx + 0x38], eax	       166	input-scrub.c	FUNCTION_2
0x40000e9	    0x8b0500000000	            mov eax, dword [0x040000ef] 	       167	input-scrub.c	FUNCTION_2
0x40000ef	          0x89433c	             mov dword [rbx + 0x3c], eax	       167	input-scrub.c	FUNCTION_2
0x40000f2	    0x488b05000000	            mov rax, qword [0x040000f9] 	       168	input-scrub.c	FUNCTION_2
0x40000f9	        0x48894340	             mov qword [rbx + 0x40], rax	       168	input-scrub.c	FUNCTION_2
0x40000fd	    0x488b05000000	            mov rax, qword [0x04000104] 	       169	input-scrub.c	FUNCTION_2
0x4000104	        0x48894348	             mov qword [rbx + 0x48], rax	       169	input-scrub.c	FUNCTION_2
0x4000108	    0x488b05000000	            mov rax, qword [0x0400010f] 	       169	input-scrub.c	FUNCTION_2
0x400010f	        0x48894350	             mov qword [rbx + 0x50], rax	       169	input-scrub.c	FUNCTION_2
0x4000113	    0x488b05000000	            mov rax, qword [0x0400011a] 	       169	input-scrub.c	FUNCTION_2
0x400011a	        0x48894358	             mov qword [rbx + 0x58], rax	       169	input-scrub.c	FUNCTION_2
0x400011e	    0x8b0500000000	            mov eax, dword [0x04000124] 	       170	input-scrub.c	FUNCTION_2
0x4000124	          0x894360	             mov dword [rbx + 0x60], eax	       170	input-scrub.c	FUNCTION_2
0x4000127	     0xfb605000000	           movzx eax, byte [0x0400012e] 	        53	string3.h	FUNCTION_17	CALL_3
0x400012e	          0x884318	               mov byte [rbx + 0x18], al	        53	string3.h	FUNCTION_17	CALL_3
0x4000131	    0x488b05000000	            mov rax, qword [0x04000138] 	       172	input-scrub.c	FUNCTION_2
0x4000138	        0x48894368	             mov qword [rbx + 0x68], rax	       172	input-scrub.c	FUNCTION_2
0x400013c	      0xe800000000	                          call 0x4000141	       173	input-scrub.c	FUNCTION_2	CALL_3
0x4000141	        0x48894370	             mov qword [rbx + 0x70], rax	       173	input-scrub.c	FUNCTION_2	CALL_3
0x4000145	    0x48c705000000	mov qword [0x04000150], 0xffffffffffffffff 	       175	input-scrub.c	FUNCTION_2
0x4000150	      0xe8ebfeffff	             call sym.input_scrub_reinit	       177	input-scrub.c	FUNCTION_2	CALL_4
0x4000155	          0x4889d8	                            mov rax, rbx	       180	input-scrub.c	FUNCTION_2
0x4000158	        0x4883c408	                              add rsp, 8	       180	input-scrub.c	FUNCTION_2
0x400015c	              0x5b	                                 pop rbx	       180	input-scrub.c	FUNCTION_2
0x400015d	              0x5d	                                 pop rbp	       180	input-scrub.c	FUNCTION_2
0x400015e	              0xc3	                                     ret	       180	input-scrub.c	FUNCTION_2
input_scrub_close	ELSE,0:SWITCH,0:DO,0:FOR,0:WHILE,0:functions,0:IF,0:CALL,1	6
0x40003de	        0x4883ec08	                              sub rsp, 8	       304	input-scrub.c	FUNCTION_9
0x40003e2	      0xe800000000	                          call 0x40003e7	       305	input-scrub.c	FUNCTION_9	CALL_1
0x40003e7	    0xc70500000000	               mov dword [0x040003f1], 0	       306	input-scrub.c	FUNCTION_9
0x40003f1	    0xc70500000000	     mov dword [0x040003fb], 0xffffffff 	       307	input-scrub.c	FUNCTION_9
0x40003fb	        0x4883c408	                              add rsp, 8	       308	input-scrub.c	FUNCTION_9
0x40003ff	              0xc3	                                     ret	       308	input-scrub.c	FUNCTION_9
new_logical_line	ELSE,0:SWITCH,0:DO,0:FOR,0:WHILE,0:functions,0:IF,0:CALL,1	5
0x400073b	        0x4883ec08	                              sub rsp, 8	       485	input-scrub.c	ELSE_2	FUNCTION_14
0x400073f	      0xba00000000	                              mov edx, 0	       486	input-scrub.c	ELSE_2	FUNCTION_14	CALL_1
0x4000744	      0xe800000000	                          call 0x4000749	       486	input-scrub.c	ELSE_2	FUNCTION_14	CALL_1
0x4000749	        0x4883c408	                              add rsp, 8	       487	input-scrub.c	ELSE_2	FUNCTION_14
0x400074d	              0xc3	                                     ret	       487	input-scrub.c	ELSE_2	FUNCTION_14
