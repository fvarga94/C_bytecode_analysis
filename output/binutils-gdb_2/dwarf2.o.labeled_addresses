read_8_bytes	SWITCH,0:FOR,0:WHILE,0:IF,1:functions,0:ELSE,0:DO,0:CALL,1	10
0x4000084	        0x488d4e08	                      lea rcx, [rsi + 8]	       620	dwarf2.c	FUNCTION_10	IF_1
0x4000088	      0xb800000000	                              mov eax, 0	       621	dwarf2.c	FUNCTION_10	IF_1
0x400008d	          0x4839ca	                            cmp rdx, rcx	       620	dwarf2.c	FUNCTION_10	IF_1
0x4000090	            0x7212	                            jb 0x40000a4	       620	dwarf2.c	FUNCTION_10	IF_1
0x4000092	        0x4883ec08	                              sub rsp, 8	       619	dwarf2.c	FUNCTION_10
0x4000096	        0x488b4708	                mov rax, qword [rdi + 8]	       622	dwarf2.c	FUNCTION_10	CALL_1
0x400009a	          0x4889f7	                            mov rdi, rsi	       622	dwarf2.c	FUNCTION_10	CALL_1
0x400009d	          0xff5020	                 call qword [rax + 0x20]	       622	dwarf2.c	FUNCTION_10	CALL_1
0x40000a0	        0x4883c408	                              add rsp, 8	       623	dwarf2.c	FUNCTION_10
0x40000a4	            0xf3c3	                                     ret	       623	dwarf2.c	FUNCTION_10
find_debug_info	SWITCH,0:FOR,2:WHILE,0:IF,8:functions,0:ELSE,0:DO,0:CALL,6	83
0x4000522	            0x4155	                                push r13	      3811	dwarf2.c	FUNCTION_54
0x4000524	            0x4154	                                push r12	      3811	dwarf2.c	FUNCTION_54
0x4000526	              0x55	                                push rbp	      3811	dwarf2.c	FUNCTION_54
0x4000527	              0x53	                                push rbx	      3811	dwarf2.c	FUNCTION_54
0x4000528	        0x4883ec08	                              sub rsp, 8	      3811	dwarf2.c	FUNCTION_54
0x400052c	          0x4989f4	                            mov r12, rsi	      3811	dwarf2.c	FUNCTION_54
0x400052f	          0x4885d2	                           test rdx, rdx	      3815	dwarf2.c	FUNCTION_54	IF_1
0x4000532	            0x756a	                           jne 0x400059e	      3815	dwarf2.c	FUNCTION_54	IF_1
0x4000534	          0x4889fb	                            mov rbx, rdi	      3815	dwarf2.c	FUNCTION_54	IF_1
0x4000537	        0x488b7630	            mov rsi, qword [rsi + 0x30] 	      3818	dwarf2.c	FUNCTION_54	IF_1	CALL_1
0x400053b	      0xe800000000	                          call 0x4000540	      3818	dwarf2.c	FUNCTION_54	IF_1	CALL_1
0x4000540	          0x4885c0	                           test rax, rax	      3819	dwarf2.c	FUNCTION_54	IF_1	IF_2
0x4000543	     0xf85d4000000	                           jne 0x400061d	      3819	dwarf2.c	FUNCTION_54	IF_1	IF_2
0x4000549	      0x498b742438	            mov rsi, qword [r12 + 0x38] 	      3822	dwarf2.c	FUNCTION_54	IF_1
0x400054e	          0x4885f6	                           test rsi, rsi	      3823	dwarf2.c	FUNCTION_54	IF_1	IF_3
0x4000551	            0x7411	                            je 0x4000564	      3823	dwarf2.c	FUNCTION_54	IF_1	IF_3
0x4000553	          0x4889df	                            mov rdi, rbx	      3825	dwarf2.c	FUNCTION_54	IF_1	IF_3	CALL_2
0x4000556	      0xe800000000	                          call 0x400055b	      3825	dwarf2.c	FUNCTION_54	IF_1	IF_3	CALL_2
0x400055b	          0x4885c0	                           test rax, rax	      3826	dwarf2.c	FUNCTION_54	IF_1	IF_3	IF_4
0x400055e	     0xf85b9000000	                           jne 0x400061d	      3826	dwarf2.c	FUNCTION_54	IF_1	IF_3	IF_4
0x4000564	    0x488bab900000	            mov rbp, qword [rbx + 0x90] 	      3830	dwarf2.c	FUNCTION_54	IF_1	FOR_1
0x400056b	          0x4885ed	                           test rbp, rbp	      3830	dwarf2.c	FUNCTION_54	IF_1	FOR_1
0x400056e	     0xf8489000000	                            je 0x40005fd	      3830	dwarf2.c	FUNCTION_54	IF_1	FOR_1
0x4000574	        0x488b7500	                    mov rsi, qword [rbp]	      3831	dwarf2.c	FUNCTION_54	IF_1	FOR_1	IF_5	CALL_3
0x4000578	      0xbf00000000	                              mov edi, 0	      3831	dwarf2.c	FUNCTION_54	IF_1	FOR_1	IF_5	CALL_3
0x400057d	      0xb911000000	                           mov ecx, 0x11	      3831	dwarf2.c	FUNCTION_54	IF_1	FOR_1	IF_5	CALL_3
0x4000582	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      3831	dwarf2.c	FUNCTION_54	IF_1	FOR_1	IF_5	CALL_3
0x4000584	           0xf97c2	                                 seta dl	      3831	dwarf2.c	FUNCTION_54	IF_1	FOR_1	IF_5	CALL_3
0x4000587	           0xf92c0	                                 setb al	      3831	dwarf2.c	FUNCTION_54	IF_1	FOR_1	IF_5	CALL_3
0x400058a	            0x38c2	                              cmp dl, al	      3831	dwarf2.c	FUNCTION_54	IF_1	FOR_1	IF_5	CALL_3
0x400058c	            0x7476	                            je 0x4000604	      3831	dwarf2.c	FUNCTION_54	IF_1	FOR_1	IF_5	CALL_3
0x400058e	        0x488b6d10	            mov rbp, qword [rbp + 0x10] 	      3830	dwarf2.c	FUNCTION_54	IF_1	FOR_1
0x4000592	          0x4885ed	                           test rbp, rbp	      3830	dwarf2.c	FUNCTION_54	IF_1	FOR_1
0x4000595	            0x75dd	                           jne 0x4000574	      3830	dwarf2.c	FUNCTION_54	IF_1	FOR_1
0x4000597	      0xb800000000	                              mov eax, 0	      3834	dwarf2.c	FUNCTION_54	IF_1
0x400059c	            0xeb7f	                           jmp 0x400061d	      3834	dwarf2.c	FUNCTION_54	IF_1
0x400059e	        0x488b6a10	            mov rbp, qword [rdx + 0x10] 	      3837	dwarf2.c	FUNCTION_54	FOR_2
0x40005a2	          0x4885ed	                           test rbp, rbp	      3837	dwarf2.c	FUNCTION_54	FOR_2
0x40005a5	            0x7462	                            je 0x4000609	      3837	dwarf2.c	FUNCTION_54	FOR_2
0x40005a7	        0x4c8b6e30	            mov r13, qword [rsi + 0x30] 	      3839	dwarf2.c	FUNCTION_54	FOR_2
0x40005ab	        0x488b5d00	                    mov rbx, qword [rbp]	      3840	dwarf2.c	FUNCTION_54	FOR_2	IF_6	CALL_4
0x40005af	          0x4c89ee	                            mov rsi, r13	      3840	dwarf2.c	FUNCTION_54	FOR_2	IF_6	CALL_4
0x40005b2	          0x4889df	                            mov rdi, rbx	      3840	dwarf2.c	FUNCTION_54	FOR_2	IF_6	CALL_4
0x40005b5	      0xe800000000	                          call 0x40005ba	      3840	dwarf2.c	FUNCTION_54	FOR_2	IF_6	CALL_4
0x40005ba	            0x85c0	                           test eax, eax	      3840	dwarf2.c	FUNCTION_54	FOR_2	IF_6	CALL_4
0x40005bc	            0x7452	                            je 0x4000610	      3840	dwarf2.c	FUNCTION_54	FOR_2	IF_6	CALL_4
0x40005be	      0x498b742438	            mov rsi, qword [r12 + 0x38] 	      3843	dwarf2.c	FUNCTION_54	FOR_2
0x40005c3	          0x4885f6	                           test rsi, rsi	      3844	dwarf2.c	FUNCTION_54	FOR_2	IF_7	CALL_5
0x40005c6	            0x740c	                            je 0x40005d4	      3844	dwarf2.c	FUNCTION_54	FOR_2	IF_7	CALL_5
0x40005c8	          0x4889df	                            mov rdi, rbx	      3844	dwarf2.c	FUNCTION_54	FOR_2	IF_7	CALL_5
0x40005cb	      0xe800000000	                          call 0x40005d0	      3844	dwarf2.c	FUNCTION_54	FOR_2	IF_7	CALL_5
0x40005d0	            0x85c0	                           test eax, eax	      3844	dwarf2.c	FUNCTION_54	FOR_2	IF_7	CALL_5
0x40005d2	            0x7441	                            je 0x4000615	      3844	dwarf2.c	FUNCTION_54	FOR_2	IF_7	CALL_5
0x40005d4	      0xbf00000000	                              mov edi, 0	      3847	dwarf2.c	FUNCTION_54	FOR_2	IF_8	CALL_6
0x40005d9	      0xb911000000	                           mov ecx, 0x11	      3847	dwarf2.c	FUNCTION_54	FOR_2	IF_8	CALL_6
0x40005de	          0x4889de	                            mov rsi, rbx	      3847	dwarf2.c	FUNCTION_54	FOR_2	IF_8	CALL_6
0x40005e1	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      3847	dwarf2.c	FUNCTION_54	FOR_2	IF_8	CALL_6
0x40005e3	           0xf97c2	                                 seta dl	      3847	dwarf2.c	FUNCTION_54	FOR_2	IF_8	CALL_6
0x40005e6	           0xf92c0	                                 setb al	      3847	dwarf2.c	FUNCTION_54	FOR_2	IF_8	CALL_6
0x40005e9	            0x38c2	                              cmp dl, al	      3847	dwarf2.c	FUNCTION_54	FOR_2	IF_8	CALL_6
0x40005eb	            0x742d	                            je 0x400061a	      3847	dwarf2.c	FUNCTION_54	FOR_2	IF_8	CALL_6
0x40005ed	        0x488b6d10	            mov rbp, qword [rbp + 0x10] 	      3837	dwarf2.c	FUNCTION_54	FOR_2
0x40005f1	          0x4885ed	                           test rbp, rbp	      3837	dwarf2.c	FUNCTION_54	FOR_2
0x40005f4	            0x75b5	                           jne 0x40005ab	      3837	dwarf2.c	FUNCTION_54	FOR_2
0x40005f6	      0xb800000000	                              mov eax, 0	      3851	dwarf2.c	FUNCTION_54
0x40005fb	            0xeb20	                           jmp 0x400061d	      3851	dwarf2.c	FUNCTION_54
0x40005fd	      0xb800000000	                              mov eax, 0	      3834	dwarf2.c	FUNCTION_54	IF_1
0x4000602	            0xeb19	                           jmp 0x400061d	      3834	dwarf2.c	FUNCTION_54	IF_1
0x4000604	          0x4889e8	                            mov rax, rbp	      3834	dwarf2.c	FUNCTION_54	IF_1
0x4000607	            0xeb14	                           jmp 0x400061d	      3834	dwarf2.c	FUNCTION_54	IF_1
0x4000609	      0xb800000000	                              mov eax, 0	      3851	dwarf2.c	FUNCTION_54
0x400060e	            0xeb0d	                           jmp 0x400061d	      3851	dwarf2.c	FUNCTION_54
0x4000610	          0x4889e8	                            mov rax, rbp	      3851	dwarf2.c	FUNCTION_54
0x4000613	            0xeb08	                           jmp 0x400061d	      3851	dwarf2.c	FUNCTION_54
0x4000615	          0x4889e8	                            mov rax, rbp	      3851	dwarf2.c	FUNCTION_54
0x4000618	            0xeb03	                           jmp 0x400061d	      3851	dwarf2.c	FUNCTION_54
0x400061a	          0x4889e8	                            mov rax, rbp	      3851	dwarf2.c	FUNCTION_54
0x400061d	        0x4883c408	                              add rsp, 8	      3852	dwarf2.c	FUNCTION_54
0x4000621	              0x5b	                                 pop rbx	      3852	dwarf2.c	FUNCTION_54
0x4000622	              0x5d	                                 pop rbp	      3852	dwarf2.c	FUNCTION_54
0x4000623	            0x415c	                                 pop r12	      3852	dwarf2.c	FUNCTION_54
0x4000625	            0x415d	                                 pop r13	      3852	dwarf2.c	FUNCTION_54
0x4000627	              0xc3	                                     ret	      3852	dwarf2.c	FUNCTION_54
find_abstract_instance	SWITCH,1:FOR,3:WHILE,0:IF,18:functions,0:ELSE,4:DO,0:CALL,24	321
0x4002e1f	            0x4157	                                push r15	      2806	dwarf2.c	FUNCTION_43
0x4002e21	            0x4156	                                push r14	      2806	dwarf2.c	FUNCTION_43
0x4002e23	            0x4155	                                push r13	      2806	dwarf2.c	FUNCTION_43
0x4002e25	            0x4154	                                push r12	      2806	dwarf2.c	FUNCTION_43
0x4002e27	              0x55	                                push rbp	      2806	dwarf2.c	FUNCTION_43
0x4002e28	              0x53	                                push rbx	      2806	dwarf2.c	FUNCTION_43
0x4002e29	        0x4883ec68	                           sub rsp, 0x68	      2806	dwarf2.c	FUNCTION_43
0x4002e2d	          0x4989fc	                            mov r12, rdi	      2806	dwarf2.c	FUNCTION_43
0x4002e30	          0x4989f7	                            mov r15, rsi	      2806	dwarf2.c	FUNCTION_43
0x4002e33	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      2806	dwarf2.c	FUNCTION_43
0x4002e38	      0x4c89442428	              mov qword [rsp + 0x28], r8	      2806	dwarf2.c	FUNCTION_43
0x4002e3d	      0x4c894c2418	              mov qword [rsp + 0x18], r9	      2806	dwarf2.c	FUNCTION_43
0x4002e42	    0x488b8424a000	            mov rax, qword [rsp + 0xa0] 	      2806	dwarf2.c	FUNCTION_43
0x4002e4a	      0x4889442420	             mov qword [rsp + 0x20], rax	      2806	dwarf2.c	FUNCTION_43
0x4002e4f	    0x64488b042528	                mov rax, qword fs:[0x28]	      2806	dwarf2.c	FUNCTION_43
0x4002e58	      0x4889442458	             mov qword [rsp + 0x58], rax	      2806	dwarf2.c	FUNCTION_43
0x4002e5d	            0x31c0	                            xor eax, eax	      2806	dwarf2.c	FUNCTION_43
0x4002e5f	        0x4c8b6f10	            mov r13, qword [rdi + 0x10] 	      2807	dwarf2.c	FUNCTION_43
0x4002e63	        0x488b6a08	                mov rbp, qword [rdx + 8]	      2812	dwarf2.c	FUNCTION_43
0x4002e67	          0x8b4204	                mov eax, dword [rdx + 4]	      2818	dwarf2.c	FUNCTION_43	IF_1
0x4002e6a	          0x83f810	                           cmp eax, 0x10	      2818	dwarf2.c	FUNCTION_43	IF_1
0x4002e6d	     0xf85ce000000	                           jne 0x4002f41	      2818	dwarf2.c	FUNCTION_43	IF_1
0x4002e73	    0x488b87a00000	            mov rax, qword [rdi + 0xa0] 	      2837	dwarf2.c	FUNCTION_43	IF_1
0x4002e7a	        0x488b5870	            mov rbx, qword [rax + 0x70] 	      2837	dwarf2.c	FUNCTION_43	IF_1
0x4002e7e	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      2838	dwarf2.c	FUNCTION_43	IF_1
0x4002e82	          0x4889d0	                            mov rax, rdx	      2840	dwarf2.c	FUNCTION_43	IF_1	IF_2
0x4002e85	          0x4829d8	                            sub rax, rbx	      2840	dwarf2.c	FUNCTION_43	IF_1	IF_2
0x4002e88	          0x4839c5	                            cmp rbp, rax	      2840	dwarf2.c	FUNCTION_43	IF_1	IF_2
0x4002e8b	            0x7305	                           jae 0x4002e92	      2840	dwarf2.c	FUNCTION_43	IF_1	IF_2
0x4002e8d	          0x4885ed	                           test rbp, rbp	      2840	dwarf2.c	FUNCTION_43	IF_1	IF_2
0x4002e90	            0x7535	                           jne 0x4002ec7	      2840	dwarf2.c	FUNCTION_43	IF_1	IF_2
0x4002e92	      0xba05000000	                              mov edx, 5	      2843	dwarf2.c	FUNCTION_43	IF_1	IF_2	CALL_2
0x4002e97	      0xbe00000000	                              mov esi, 0	      2843	dwarf2.c	FUNCTION_43	IF_1	IF_2	CALL_2
0x4002e9c	      0xbf00000000	                              mov edi, 0	      2843	dwarf2.c	FUNCTION_43	IF_1	IF_2	CALL_2
0x4002ea1	      0xe800000000	                          call 0x4002ea6	      2843	dwarf2.c	FUNCTION_43	IF_1	IF_2	CALL_2
0x4002ea6	          0x4889c7	                            mov rdi, rax	      2842	dwarf2.c	FUNCTION_43	IF_1	IF_2	CALL_1
0x4002ea9	      0xb800000000	                              mov eax, 0	      2842	dwarf2.c	FUNCTION_43	IF_1	IF_2	CALL_1
0x4002eae	      0xe800000000	                          call 0x4002eb3	      2842	dwarf2.c	FUNCTION_43	IF_1	IF_2	CALL_1
0x4002eb3	      0xbf11000000	                           mov edi, 0x11	      2844	dwarf2.c	FUNCTION_43	IF_1	IF_2	CALL_3
0x4002eb8	      0xe800000000	                          call 0x4002ebd	      2844	dwarf2.c	FUNCTION_43	IF_1	IF_2	CALL_3
0x4002ebd	      0xb800000000	                              mov eax, 0	      2845	dwarf2.c	FUNCTION_43	IF_1	IF_2
0x4002ec2	      0xe91b040000	                           jmp 0x40032e2	      2845	dwarf2.c	FUNCTION_43	IF_1	IF_2
0x4002ec7	          0x4801eb	                            add rbx, rbp	      2847	dwarf2.c	FUNCTION_43	IF_1
0x4002eca	        0x483b5f58	            cmp rbx, qword [rdi + 0x58] 	      2850	dwarf2.c	FUNCTION_43	IF_1	IF_3
0x4002ece	            0x720d	                            jb 0x4002edd	      2850	dwarf2.c	FUNCTION_43	IF_1	IF_3
0x4002ed0	        0x4c8b7770	            mov r14, qword [rdi + 0x70] 	      2850	dwarf2.c	FUNCTION_43	IF_1	IF_3
0x4002ed4	          0x4c39f3	                            cmp rbx, r14	      2850	dwarf2.c	FUNCTION_43	IF_1	IF_3
0x4002ed7	     0xf82b5010000	                            jb 0x4003092	      2850	dwarf2.c	FUNCTION_43	IF_1	IF_3
0x4002edd	      0x498b442408	                mov rax, qword [r12 + 8]	      2857	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	FOR_1
0x4002ee2	          0x4885c0	                           test rax, rax	      2857	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	FOR_1
0x4002ee5	            0x741c	                            je 0x4002f03	      2857	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	FOR_1
0x4002ee7	        0x483b5858	            cmp rbx, qword [rax + 0x58] 	      2858	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	FOR_1	IF_4
0x4002eeb	            0x7206	                            jb 0x4002ef3	      2858	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	FOR_1	IF_4
0x4002eed	        0x483b5870	            cmp rbx, qword [rax + 0x70] 	      2858	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	FOR_1	IF_4
0x4002ef1	            0x720b	                            jb 0x4002efe	      2858	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	FOR_1	IF_4
0x4002ef3	        0x488b4008	                mov rax, qword [rax + 8]	      2857	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	FOR_1
0x4002ef7	          0x4885c0	                           test rax, rax	      2857	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	FOR_1
0x4002efa	            0x75eb	                           jne 0x4002ee7	      2857	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	FOR_1
0x4002efc	            0xeb05	                           jmp 0x4002f03	      2857	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	FOR_1
0x4002efe	          0x4885c0	                           test rax, rax	      2861	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	IF_5
0x4002f01	            0x7532	                           jne 0x4002f35	      2861	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	IF_5
0x4002f03	        0x498b0424	                    mov rax, qword [r12]	      2862	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	IF_5	FOR_2
0x4002f07	          0x4885c0	                           test rax, rax	      2862	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	IF_5	FOR_2
0x4002f0a	     0xf847a010000	                            je 0x400308a	      2862	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	IF_5	FOR_2
0x4002f10	        0x483b5858	            cmp rbx, qword [rax + 0x58] 	      2863	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	IF_5	FOR_2	IF_6
0x4002f14	            0x7206	                            jb 0x4002f1c	      2863	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	IF_5	FOR_2	IF_6
0x4002f16	        0x483b5870	            cmp rbx, qword [rax + 0x70] 	      2863	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	IF_5	FOR_2	IF_6
0x4002f1a	            0x7210	                            jb 0x4002f2c	      2863	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	IF_5	FOR_2	IF_6
0x4002f1c	          0x488b00	                    mov rax, qword [rax]	      2862	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	IF_5	FOR_2
0x4002f1f	          0x4885c0	                           test rax, rax	      2862	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	IF_5	FOR_2
0x4002f22	            0x75ec	                           jne 0x4002f10	      2862	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	IF_5	FOR_2
0x4002f24	          0x4989d6	                            mov r14, rdx	      2838	dwarf2.c	FUNCTION_43	IF_1
0x4002f27	      0xe966010000	                           jmp 0x4003092	      2838	dwarf2.c	FUNCTION_43	IF_1
0x4002f2c	          0x4885c0	                           test rax, rax	      2866	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	IF_7
0x4002f2f	     0xf845a010000	                            je 0x400308f	      2866	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	IF_7
0x4002f35	        0x4c8b7070	            mov r14, qword [rax + 0x70] 	      2869	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	IF_7
0x4002f39	          0x4989c4	                            mov r12, rax	      2869	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	IF_7
0x4002f3c	      0xe951010000	                           jmp 0x4003092	      2869	dwarf2.c	FUNCTION_43	IF_1	ELSE_1	IF_7
0x4002f41	      0x3d201f0000	                         cmp eax, 0x1f20	      2874	dwarf2.c	FUNCTION_43	ELSE_2	IF_8
0x4002f46	     0xf85e9000000	                           jne 0x4003035	      2874	dwarf2.c	FUNCTION_43	ELSE_2	IF_8
0x4002f4c	    0x488b9fa00000	            mov rbx, qword [rdi + 0xa0] 	       839	dwarf2.c	FUNCTION_16
0x4002f53	      0x48837b4800	               cmp qword [rbx + 0x48], 0	       841	dwarf2.c	FUNCTION_16	IF_1
0x4002f58	            0x7552	                           jne 0x4002fac	       841	dwarf2.c	FUNCTION_16	IF_1
0x4002f5a	      0xbe00000000	                              mov esi, 0	       844	dwarf2.c	FUNCTION_16	IF_1	CALL_1
0x4002f5f	          0x4c89ef	                            mov rdi, r13	       844	dwarf2.c	FUNCTION_16	IF_1	CALL_1
0x4002f62	      0xe800000000	                          call 0x4002f67	       844	dwarf2.c	FUNCTION_16	IF_1	CALL_1
0x4002f67	      0x4889442408	                mov qword [rsp + 8], rax	       844	dwarf2.c	FUNCTION_16	IF_1	CALL_1
0x4002f6c	          0x4885c0	                           test rax, rax	       846	dwarf2.c	FUNCTION_16	IF_1	IF_2
0x4002f6f	            0x747a	                            je 0x4002feb	       846	dwarf2.c	FUNCTION_16	IF_1	IF_2
0x4002f71	      0xbe00000000	                              mov esi, 0	       849	dwarf2.c	FUNCTION_16	IF_1	IF_3	CALL_2
0x4002f76	          0x4889c7	                            mov rdi, rax	       849	dwarf2.c	FUNCTION_16	IF_1	IF_3	CALL_2
0x4002f79	      0xe800000000	                          call 0x4002f7e	       849	dwarf2.c	FUNCTION_16	IF_1	IF_3	CALL_2
0x4002f7e	          0x4989c6	                            mov r14, rax	       849	dwarf2.c	FUNCTION_16	IF_1	IF_3	CALL_2
0x4002f81	          0x4885c0	                           test rax, rax	       849	dwarf2.c	FUNCTION_16	IF_1	IF_3	CALL_2
0x4002f84	            0x7416	                            je 0x4002f9c	       849	dwarf2.c	FUNCTION_16	IF_1	IF_3	CALL_2
0x4002f86	      0xbe01000000	                              mov esi, 1	       850	dwarf2.c	FUNCTION_16	IF_1	IF_3	CALL_3
0x4002f8b	          0x4889c7	                            mov rdi, rax	       850	dwarf2.c	FUNCTION_16	IF_1	IF_3	CALL_3
0x4002f8e	      0xe800000000	                          call 0x4002f93	       850	dwarf2.c	FUNCTION_16	IF_1	IF_3	CALL_3
0x4002f93	            0x85c0	                           test eax, eax	       850	dwarf2.c	FUNCTION_16	IF_1	IF_3	CALL_3
0x4002f95	            0x7511	                           jne 0x4002fa8	       850	dwarf2.c	FUNCTION_16	IF_1	IF_3	CALL_3
0x4002f97	      0xe958030000	                           jmp 0x40032f4	       850	dwarf2.c	FUNCTION_16	IF_1	IF_3	CALL_3
0x4002f9c	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       856	dwarf2.c	FUNCTION_16	IF_1	IF_3	CALL_5
0x4002fa1	      0xe800000000	                          call 0x4002fa6	       856	dwarf2.c	FUNCTION_16	IF_1	IF_3	CALL_5
0x4002fa6	            0xeb43	                           jmp 0x4002feb	       856	dwarf2.c	FUNCTION_16	IF_1	IF_3	CALL_5
0x4002fa8	        0x4c897348	             mov qword [rbx + 0x48], r14	       859	dwarf2.c	FUNCTION_16	IF_1
0x4002fac	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       862	dwarf2.c	FUNCTION_16	IF_5	CALL_6
0x4002fb0	        0x488d7040	                   lea rsi, [rax + 0x40]	       862	dwarf2.c	FUNCTION_16	IF_5	CALL_6
0x4002fb4	    0x498b8424a000	            mov rax, qword [r12 + 0xa0] 	       862	dwarf2.c	FUNCTION_16	IF_5	CALL_6
0x4002fbc	        0x488b7848	            mov rdi, qword [rax + 0x48] 	       862	dwarf2.c	FUNCTION_16	IF_5	CALL_6
0x4002fc0	        0x4c8d4b68	                    lea r9, [rbx + 0x68]	       862	dwarf2.c	FUNCTION_16	IF_5	CALL_6
0x4002fc4	        0x4c8d4360	                    lea r8, [rbx + 0x60]	       862	dwarf2.c	FUNCTION_16	IF_5	CALL_6
0x4002fc8	          0x4889e9	                            mov rcx, rbp	       862	dwarf2.c	FUNCTION_16	IF_5	CALL_6
0x4002fcb	      0xba00000000	                              mov edx, 0	       862	dwarf2.c	FUNCTION_16	IF_5	CALL_6
0x4002fd0	      0xe853d6ffff	                   call sym.read_section	       862	dwarf2.c	FUNCTION_16	IF_5	CALL_6
0x4002fd5	            0x85c0	                           test eax, eax	       862	dwarf2.c	FUNCTION_16	IF_5	CALL_6
0x4002fd7	            0x7412	                            je 0x4002feb	       862	dwarf2.c	FUNCTION_16	IF_5	CALL_6
0x4002fd9	        0x483b6b68	            cmp rbp, qword [rbx + 0x68] 	       870	dwarf2.c	FUNCTION_16	IF_6
0x4002fdd	            0x730c	                           jae 0x4002feb	       870	dwarf2.c	FUNCTION_16	IF_6
0x4002fdf	          0x4889e8	                            mov rax, rbp	      2877	dwarf2.c	FUNCTION_43	ELSE_2	IF_8	IF_9
0x4002fe2	        0x48034360	             add rax, qword [rbx + 0x60]	      2877	dwarf2.c	FUNCTION_43	ELSE_2	IF_8	IF_9
0x4002fe6	          0x4889c3	                            mov rbx, rax	      2877	dwarf2.c	FUNCTION_43	ELSE_2	IF_8	IF_9
0x4002fe9	            0x7538	                           jne 0x4003023	      2877	dwarf2.c	FUNCTION_43	ELSE_2	IF_8	IF_9
0x4002feb	      0xba05000000	                              mov edx, 5	      2880	dwarf2.c	FUNCTION_43	ELSE_2	IF_8	IF_9	CALL_6
0x4002ff0	      0xbe00000000	                              mov esi, 0	      2880	dwarf2.c	FUNCTION_43	ELSE_2	IF_8	IF_9	CALL_6
0x4002ff5	      0xbf00000000	                              mov edi, 0	      2880	dwarf2.c	FUNCTION_43	ELSE_2	IF_8	IF_9	CALL_6
0x4002ffa	      0xe800000000	                          call 0x4002fff	      2880	dwarf2.c	FUNCTION_43	ELSE_2	IF_8	IF_9	CALL_6
0x4002fff	          0x4889ee	                            mov rsi, rbp	      2879	dwarf2.c	FUNCTION_43	ELSE_2	IF_8	IF_9	CALL_5
0x4003002	          0x4889c7	                            mov rdi, rax	      2879	dwarf2.c	FUNCTION_43	ELSE_2	IF_8	IF_9	CALL_5
0x4003005	      0xb800000000	                              mov eax, 0	      2879	dwarf2.c	FUNCTION_43	ELSE_2	IF_8	IF_9	CALL_5
0x400300a	      0xe800000000	                          call 0x400300f	      2879	dwarf2.c	FUNCTION_43	ELSE_2	IF_8	IF_9	CALL_5
0x400300f	      0xbf11000000	                           mov edi, 0x11	      2882	dwarf2.c	FUNCTION_43	ELSE_2	IF_8	IF_9	CALL_7
0x4003014	      0xe800000000	                          call 0x4003019	      2882	dwarf2.c	FUNCTION_43	ELSE_2	IF_8	IF_9	CALL_7
0x4003019	      0xb800000000	                              mov eax, 0	      2883	dwarf2.c	FUNCTION_43	ELSE_2	IF_8	IF_9
0x400301e	      0xe9bf020000	                           jmp 0x40032e2	      2883	dwarf2.c	FUNCTION_43	ELSE_2	IF_8	IF_9
0x4003023	    0x498b8424a000	            mov rax, qword [r12 + 0xa0] 	      2885	dwarf2.c	FUNCTION_43	ELSE_2	IF_8
0x400302b	        0x4c8b7068	            mov r14, qword [rax + 0x68] 	      2885	dwarf2.c	FUNCTION_43	ELSE_2	IF_8
0x400302f	        0x4c037060	             add r14, qword [rax + 0x60]	      2885	dwarf2.c	FUNCTION_43	ELSE_2	IF_8
0x4003033	            0xeb5d	                           jmp 0x4003092	      2885	dwarf2.c	FUNCTION_43	ELSE_2	IF_8
0x4003035	        0x488b5f58	            mov rbx, qword [rdi + 0x58] 	      2898	dwarf2.c	FUNCTION_43	ELSE_3
0x4003039	        0x4c8b7770	            mov r14, qword [rdi + 0x70] 	      2899	dwarf2.c	FUNCTION_43	ELSE_3
0x400303d	          0x4c89f0	                            mov rax, r14	      2901	dwarf2.c	FUNCTION_43	ELSE_3	IF_10
0x4003040	          0x4829d8	                            sub rax, rbx	      2901	dwarf2.c	FUNCTION_43	ELSE_3	IF_10
0x4003043	          0x4839c5	                            cmp rbp, rax	      2901	dwarf2.c	FUNCTION_43	ELSE_3	IF_10
0x4003046	            0x730d	                           jae 0x4003055	      2901	dwarf2.c	FUNCTION_43	ELSE_3	IF_10
0x4003048	          0x4885ed	                           test rbp, rbp	      2901	dwarf2.c	FUNCTION_43	ELSE_3	IF_10
0x400304b	           0xf94c0	                                 sete al	      2901	dwarf2.c	FUNCTION_43	ELSE_3	IF_10
0x400304e	          0x4801eb	                            add rbx, rbp	      2908	dwarf2.c	FUNCTION_43	ELSE_3
0x4003051	            0x84c0	                             test al, al	      2901	dwarf2.c	FUNCTION_43	ELSE_3	IF_10
0x4003053	            0x743d	                            je 0x4003092	      2901	dwarf2.c	FUNCTION_43	ELSE_3	IF_10
0x4003055	      0xba05000000	                              mov edx, 5	      2904	dwarf2.c	FUNCTION_43	ELSE_3	IF_10	CALL_9
0x400305a	      0xbe00000000	                              mov esi, 0	      2904	dwarf2.c	FUNCTION_43	ELSE_3	IF_10	CALL_9
0x400305f	      0xbf00000000	                              mov edi, 0	      2904	dwarf2.c	FUNCTION_43	ELSE_3	IF_10	CALL_9
0x4003064	      0xe800000000	                          call 0x4003069	      2904	dwarf2.c	FUNCTION_43	ELSE_3	IF_10	CALL_9
0x4003069	          0x4889c7	                            mov rdi, rax	      2903	dwarf2.c	FUNCTION_43	ELSE_3	IF_10	CALL_8
0x400306c	      0xb800000000	                              mov eax, 0	      2903	dwarf2.c	FUNCTION_43	ELSE_3	IF_10	CALL_8
0x4003071	      0xe800000000	                          call 0x4003076	      2903	dwarf2.c	FUNCTION_43	ELSE_3	IF_10	CALL_8
0x4003076	      0xbf11000000	                           mov edi, 0x11	      2905	dwarf2.c	FUNCTION_43	ELSE_3	IF_10	CALL_10
0x400307b	      0xe800000000	                          call 0x4003080	      2905	dwarf2.c	FUNCTION_43	ELSE_3	IF_10	CALL_10
0x4003080	      0xb800000000	                              mov eax, 0	      2906	dwarf2.c	FUNCTION_43	ELSE_3	IF_10
0x4003085	      0xe958020000	                           jmp 0x40032e2	      2906	dwarf2.c	FUNCTION_43	ELSE_3	IF_10
0x400308a	          0x4989d6	                            mov r14, rdx	      2838	dwarf2.c	FUNCTION_43	IF_1
0x400308d	            0xeb03	                           jmp 0x4003092	      2838	dwarf2.c	FUNCTION_43	IF_1
0x400308f	          0x4989d6	                            mov r14, rdx	      2838	dwarf2.c	FUNCTION_43	IF_1
0x4003092	          0x4d89f0	                             mov r8, r14	      2911	dwarf2.c	FUNCTION_43	CALL_11
0x4003095	      0xb900000000	                              mov ecx, 0	      2911	dwarf2.c	FUNCTION_43	CALL_11
0x400309a	      0x488d54243c	                   lea rdx, [rsp + 0x3c]	      2911	dwarf2.c	FUNCTION_43	CALL_11
0x400309f	          0x4889de	                            mov rsi, rbx	      2911	dwarf2.c	FUNCTION_43	CALL_11
0x40030a2	          0x4c89ef	                            mov rdi, r13	      2911	dwarf2.c	FUNCTION_43	CALL_11
0x40030a5	      0xe800000000	                          call 0x40030aa	      2911	dwarf2.c	FUNCTION_43	CALL_11
0x40030aa	          0x4889c5	                            mov rbp, rax	      2911	dwarf2.c	FUNCTION_43	CALL_11
0x40030ad	    0x48c744240800	                  mov qword [rsp + 8], 0	      2814	dwarf2.c	FUNCTION_43
0x40030b6	            0x85c0	                           test eax, eax	      2915	dwarf2.c	FUNCTION_43	IF_11
0x40030b8	     0xf8412020000	                            je 0x40032d0	      2915	dwarf2.c	FUNCTION_43	IF_11
0x40030be	      0x498b742438	            mov rsi, qword [r12 + 0x38] 	      2917	dwarf2.c	FUNCTION_43	IF_11	CALL_12
0x40030c3	            0x89c7	                            mov edi, eax	      2917	dwarf2.c	FUNCTION_43	IF_11	CALL_12
0x40030c5	      0xe827d0ffff	                  call sym.lookup_abbrev	      2917	dwarf2.c	FUNCTION_43	IF_11	CALL_12
0x40030ca	          0x4989c5	                            mov r13, rax	      2917	dwarf2.c	FUNCTION_43	IF_11	CALL_12
0x40030cd	          0x4885c0	                           test rax, rax	      2918	dwarf2.c	FUNCTION_43	IF_11	IF_12
0x40030d0	            0x7414	                            je 0x40030e6	      2918	dwarf2.c	FUNCTION_43	IF_11	IF_12
0x40030d2	        0x83780c00	                cmp dword [rax + 0xc], 0	      2927	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3
0x40030d6	            0x7545	                           jne 0x400311d	      2927	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3
0x40030d8	    0x48c744240800	                  mov qword [rsp + 8], 0	      2927	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3
0x40030e1	      0xe9ea010000	                           jmp 0x40032d0	      2927	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3
0x40030e6	      0xba05000000	                              mov edx, 5	      2921	dwarf2.c	FUNCTION_43	IF_11	IF_12	CALL_14
0x40030eb	      0xbe00000000	                              mov esi, 0	      2921	dwarf2.c	FUNCTION_43	IF_11	IF_12	CALL_14
0x40030f0	      0xbf00000000	                              mov edi, 0	      2921	dwarf2.c	FUNCTION_43	IF_11	IF_12	CALL_14
0x40030f5	      0xe800000000	                          call 0x40030fa	      2921	dwarf2.c	FUNCTION_43	IF_11	IF_12	CALL_14
0x40030fa	            0x89ee	                            mov esi, ebp	      2920	dwarf2.c	FUNCTION_43	IF_11	IF_12	CALL_13
0x40030fc	          0x4889c7	                            mov rdi, rax	      2920	dwarf2.c	FUNCTION_43	IF_11	IF_12	CALL_13
0x40030ff	      0xb800000000	                              mov eax, 0	      2920	dwarf2.c	FUNCTION_43	IF_11	IF_12	CALL_13
0x4003104	      0xe800000000	                          call 0x4003109	      2920	dwarf2.c	FUNCTION_43	IF_11	IF_12	CALL_13
0x4003109	      0xbf11000000	                           mov edi, 0x11	      2922	dwarf2.c	FUNCTION_43	IF_11	IF_12	CALL_15
0x400310e	      0xe800000000	                          call 0x4003113	      2922	dwarf2.c	FUNCTION_43	IF_11	IF_12	CALL_15
0x4003113	      0xb800000000	                              mov eax, 0	      2923	dwarf2.c	FUNCTION_43	IF_11	IF_12
0x4003118	      0xe9c5010000	                           jmp 0x40032e2	      2923	dwarf2.c	FUNCTION_43	IF_11	IF_12
0x400311d	        0x8b44243c	            mov eax, dword [rsp + 0x3c] 	      2913	dwarf2.c	FUNCTION_43
0x4003121	          0x4801c3	                            add rbx, rax	      2913	dwarf2.c	FUNCTION_43
0x4003124	    0x48c744240800	                  mov qword [rsp + 8], 0	      2913	dwarf2.c	FUNCTION_43
0x400312d	      0xbd00000000	                              mov ebp, 0	      2913	dwarf2.c	FUNCTION_43
0x4003132	            0x89e8	                            mov eax, ebp	      2929	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	CALL_16
0x4003134	        0x48c1e004	                              shl rax, 4	      2929	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	CALL_16
0x4003138	        0x49034510	             add rax, qword [r13 + 0x10]	      2929	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	CALL_16
0x400313c	            0x8b10	                    mov edx, dword [rax]	      1285	dwarf2.c	FUNCTION_22
0x400313e	        0x89542440	             mov dword [rsp + 0x40], edx	      1285	dwarf2.c	FUNCTION_22
0x4003142	        0x488b5008	                mov rdx, qword [rax + 8]	      1286	dwarf2.c	FUNCTION_22	CALL_1
0x4003146	          0x8b7004	                mov esi, dword [rax + 4]	      1286	dwarf2.c	FUNCTION_22	CALL_1
0x4003149	          0x4d89f1	                             mov r9, r14	      1286	dwarf2.c	FUNCTION_22	CALL_1
0x400314c	          0x4989d8	                             mov r8, rbx	      1286	dwarf2.c	FUNCTION_22	CALL_1
0x400314f	          0x4c89e1	                            mov rcx, r12	      1286	dwarf2.c	FUNCTION_22	CALL_1
0x4003152	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      1286	dwarf2.c	FUNCTION_22	CALL_1
0x4003157	      0xe8f1dfffff	           call sym.read_attribute_value	      1286	dwarf2.c	FUNCTION_22	CALL_1
0x400315c	          0x4889c3	                            mov rbx, rax	      1286	dwarf2.c	FUNCTION_22	CALL_1
0x400315f	          0x4885c0	                           test rax, rax	      2931	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	IF_13
0x4003162	     0xf8468010000	                            je 0x40032d0	      2931	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	IF_13
0x4003168	          0x4939c7	                            cmp r15, rax	      2935	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	IF_14
0x400316b	            0x7535	                           jne 0x40031a2	      2935	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	IF_14
0x400316d	      0xba05000000	                              mov edx, 5	      2938	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	IF_14	CALL_18
0x4003172	      0xbe00000000	                              mov esi, 0	      2938	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	IF_14	CALL_18
0x4003177	      0xbf00000000	                              mov edi, 0	      2938	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	IF_14	CALL_18
0x400317c	      0xe800000000	                          call 0x4003181	      2938	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	IF_14	CALL_18
0x4003181	          0x4889c7	                            mov rdi, rax	      2937	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	IF_14	CALL_17
0x4003184	      0xb800000000	                              mov eax, 0	      2937	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	IF_14	CALL_17
0x4003189	      0xe800000000	                          call 0x400318e	      2937	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	IF_14	CALL_17
0x400318e	      0xbf11000000	                           mov edi, 0x11	      2939	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	IF_14	CALL_19
0x4003193	      0xe800000000	                          call 0x4003198	      2939	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	IF_14	CALL_19
0x4003198	      0xb800000000	                              mov eax, 0	      2940	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	IF_14
0x400319d	      0xe940010000	                           jmp 0x40032e2	      2940	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	IF_14
0x40031a2	        0x8b442440	            mov eax, dword [rsp + 0x40] 	      2942	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1
0x40031a6	          0x83f83b	                           cmp eax, 0x3b	      2942	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1
0x40031a9	     0xf8408010000	                            je 0x40032b7	      2942	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1
0x40031af	          0x83f83b	                           cmp eax, 0x3b	      2942	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1
0x40031b2	            0x7713	                            ja 0x40031c7	      2942	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1
0x40031b4	          0x83f803	                              cmp eax, 3	      2942	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1
0x40031b7	            0x742c	                            je 0x40031e5	      2942	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1
0x40031b9	          0x83f83a	                           cmp eax, 0x3a	      2942	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1
0x40031bc	     0xf84dd000000	                            je 0x400329f	      2942	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1
0x40031c2	      0xe9fc000000	                           jmp 0x40032c3	      2942	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1
0x40031c7	          0x83f86e	                           cmp eax, 0x6e	      2942	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1
0x40031ca	     0xf849d000000	                            je 0x400326d	      2942	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1
0x40031d0	      0x3d07200000	                         cmp eax, 0x2007	      2942	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1
0x40031d5	     0xf8492000000	                            je 0x400326d	      2942	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1
0x40031db	          0x83f847	                           cmp eax, 0x47	      2942	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1
0x40031de	            0x745c	                            je 0x400323c	      2942	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1
0x40031e0	      0xe9de000000	                           jmp 0x40032c3	      2942	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1
0x40031e5	    0x48837c240800	                  cmp qword [rsp + 8], 0	      2947	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_15	CALL_20
0x40031eb	     0xf85d2000000	                           jne 0x40032c3	      2947	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_15	CALL_20
0x40031f1	        0x8b442444	            mov eax, dword [rsp + 0x44] 	      2947	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_15	CALL_20
0x40031f5	          0x83f81f	                           cmp eax, 0x1f	      1077	dwarf2.c	FUNCTION_20
0x40031f8	            0x770b	                            ja 0x4003205	      1077	dwarf2.c	FUNCTION_20
0x40031fa	      0xb900410080	                     mov ecx, 0x80004100	      1078	dwarf2.c	FUNCTION_20
0x40031ff	        0x480fa3c1	                             bt rcx, rax	      1078	dwarf2.c	FUNCTION_20
0x4003203	            0x720b	                            jb 0x4003210	      1078	dwarf2.c	FUNCTION_20
0x4003205	      0x3d211f0000	                         cmp eax, 0x1f21	      2947	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_15	CALL_20
0x400320a	     0xf85b3000000	                           jne 0x40032c3	      2947	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_15	CALL_20
0x4003210	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      2949	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_15
0x4003215	      0x4889442408	                mov qword [rsp + 8], rax	      2949	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_15
0x400321a	      0x418b7c2440	            mov edi, dword [r12 + 0x40] 	      2950	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_15	IF_16	CALL_21
0x400321f	      0xe80dcfffff	                    call sym.non_mangled	      2950	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_15	IF_16	CALL_21
0x4003224	            0x85c0	                           test eax, eax	      2950	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_15	IF_16	CALL_21
0x4003226	     0xf8497000000	                            je 0x40032c3	      2950	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_15	IF_16	CALL_21
0x400322c	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      2951	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_15	IF_16
0x4003231	    0xc70001000000	                      mov dword [rax], 1	      2951	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_15	IF_16
0x4003237	      0xe987000000	                           jmp 0x40032c3	      2951	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_15	IF_16
0x400323c	        0x4883ec08	                              sub rsp, 8	      2955	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_17	CALL_22
0x4003240	        0xff742428	                 push qword [rsp + 0x28]	      2955	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_17	CALL_22
0x4003244	      0x4c8b4c2428	              mov r9, qword [rsp + 0x28]	      2955	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_17	CALL_22
0x4003249	      0x4c8b442438	              mov r8, qword [rsp + 0x38]	      2955	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_17	CALL_22
0x400324e	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	      2955	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_17	CALL_22
0x4003253	      0x488d542450	                   lea rdx, [rsp + 0x50]	      2955	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_17	CALL_22
0x4003258	          0x4889de	                            mov rsi, rbx	      2955	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_17	CALL_22
0x400325b	          0x4c89e7	                            mov rdi, r12	      2955	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_17	CALL_22
0x400325e	      0xe8bcfbffff	         call sym.find_abstract_instance	      2955	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_17	CALL_22
0x4003263	        0x4883c410	                           add rsp, 0x10	      2955	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_17	CALL_22
0x4003267	            0x85c0	                           test eax, eax	      2955	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_17	CALL_22
0x4003269	            0x7558	                           jne 0x40032c3	      2955	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_17	CALL_22
0x400326b	            0xeb75	                           jmp 0x40032e2	      2955	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_17	CALL_22
0x400326d	        0x8b442444	            mov eax, dword [rsp + 0x44] 	      2964	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_18	CALL_23
0x4003271	          0x83f81f	                           cmp eax, 0x1f	      1077	dwarf2.c	FUNCTION_20
0x4003274	            0x770b	                            ja 0x4003281	      1077	dwarf2.c	FUNCTION_20
0x4003276	      0xb900410080	                     mov ecx, 0x80004100	      1078	dwarf2.c	FUNCTION_20
0x400327b	        0x480fa3c1	                             bt rcx, rax	      1078	dwarf2.c	FUNCTION_20
0x400327f	            0x7207	                            jb 0x4003288	      1078	dwarf2.c	FUNCTION_20
0x4003281	      0x3d211f0000	                         cmp eax, 0x1f21	      2964	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_18	CALL_23
0x4003286	            0x753b	                           jne 0x40032c3	      2964	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_18	CALL_23
0x4003288	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      2966	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_18
0x400328d	      0x4889442408	                mov qword [rsp + 8], rax	      2966	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_18
0x4003292	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      2967	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_18
0x4003297	    0xc70001000000	                      mov dword [rax], 1	      2967	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_18
0x400329d	            0xeb24	                           jmp 0x40032c3	      2967	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	IF_18
0x400329f	      0x498b7c2478	            mov rdi, qword [r12 + 0x78] 	      2971	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	CALL_24
0x40032a4	        0x8b742448	            mov esi, dword [rsp + 0x48] 	      2971	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	CALL_24
0x40032a8	      0xe82bdbffff	                call sym.concat_filename	      2971	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	CALL_24
0x40032ad	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      2971	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	CALL_24
0x40032b2	          0x488901	                    mov qword [rcx], rax	      2971	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1	CALL_24
0x40032b5	            0xeb0c	                           jmp 0x40032c3	      2973	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1
0x40032b7	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      2975	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1
0x40032bc	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	      2975	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1
0x40032c1	            0x8901	                    mov dword [rcx], eax	      2975	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3	SWITCH_1
0x40032c3	          0x83c501	                              add ebp, 1	      2927	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3
0x40032c6	        0x41396d0c	              cmp dword [r13 + 0xc], ebp	      2927	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3
0x40032ca	     0xf8762feffff	                            ja 0x4003132	      2927	dwarf2.c	FUNCTION_43	IF_11	ELSE_4	FOR_3
0x40032d0	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      2983	dwarf2.c	FUNCTION_43
0x40032d5	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      2983	dwarf2.c	FUNCTION_43
0x40032da	          0x488908	                    mov qword [rax], rcx	      2983	dwarf2.c	FUNCTION_43
0x40032dd	      0xb801000000	                              mov eax, 1	      2984	dwarf2.c	FUNCTION_43
0x40032e2	      0x488b4c2458	            mov rcx, qword [rsp + 0x58] 	      2985	dwarf2.c	FUNCTION_43
0x40032e7	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2985	dwarf2.c	FUNCTION_43
0x40032f0	            0x7414	                            je 0x4003306	      2985	dwarf2.c	FUNCTION_43
0x40032f2	            0xeb0d	                           jmp 0x4003301	      2985	dwarf2.c	FUNCTION_43
0x40032f4	          0x4c89f7	                            mov rdi, r14	       853	dwarf2.c	FUNCTION_16	IF_1	IF_3	CALL_4
0x40032f7	      0xe800000000	                          call 0x40032fc	       853	dwarf2.c	FUNCTION_16	IF_1	IF_3	CALL_4
0x40032fc	      0xe99bfcffff	                           jmp 0x4002f9c	       853	dwarf2.c	FUNCTION_16	IF_1	IF_3	CALL_4
0x4003301	      0xe800000000	                          call 0x4003306	      2985	dwarf2.c	FUNCTION_43
0x4003306	        0x4883c468	                           add rsp, 0x68	      2985	dwarf2.c	FUNCTION_43
0x400330a	              0x5b	                                 pop rbx	      2985	dwarf2.c	FUNCTION_43
0x400330b	              0x5d	                                 pop rbp	      2985	dwarf2.c	FUNCTION_43
0x400330c	            0x415c	                                 pop r12	      2985	dwarf2.c	FUNCTION_43
0x400330e	            0x415d	                                 pop r13	      2985	dwarf2.c	FUNCTION_43
0x4003310	            0x415e	                                 pop r14	      2985	dwarf2.c	FUNCTION_43
0x4003312	            0x415f	                                 pop r15	      2985	dwarf2.c	FUNCTION_43
0x4003314	              0xc3	                                     ret	      2985	dwarf2.c	FUNCTION_43
comp_unit_maybe_decode_line_info	SWITCH,0:FOR,0:WHILE,0:IF,5:functions,0:ELSE,0:DO,0:CALL,2	38
0x4003a08	              0x55	                                push rbp	      3641	dwarf2.c	FUNCTION_49
0x4003a09	              0x53	                                push rbx	      3641	dwarf2.c	FUNCTION_49
0x4003a0a	        0x4883ec08	                              sub rsp, 8	      3641	dwarf2.c	FUNCTION_49
0x4003a0e	          0x8b6f44	            mov ebp, dword [rdi + 0x44] 	      3642	dwarf2.c	FUNCTION_49	IF_1
0x4003a11	      0xb800000000	                              mov eax, 0	      3643	dwarf2.c	FUNCTION_49	IF_1
0x4003a16	            0x85ed	                           test ebp, ebp	      3642	dwarf2.c	FUNCTION_49	IF_1
0x4003a18	            0x7561	                           jne 0x4003a7b	      3642	dwarf2.c	FUNCTION_49	IF_1
0x4003a1a	      0xb801000000	                              mov eax, 1	      3669	dwarf2.c	FUNCTION_49
0x4003a1f	      0x48837f7800	               cmp qword [rdi + 0x78], 0	      3645	dwarf2.c	FUNCTION_49	IF_2
0x4003a24	            0x7555	                           jne 0x4003a7b	      3645	dwarf2.c	FUNCTION_49	IF_2
0x4003a26	          0x8b4750	            mov eax, dword [rdi + 0x50] 	      3647	dwarf2.c	FUNCTION_49	IF_2	IF_3
0x4003a29	            0x85c0	                           test eax, eax	      3647	dwarf2.c	FUNCTION_49	IF_2	IF_3
0x4003a2b	            0x7509	                           jne 0x4003a36	      3647	dwarf2.c	FUNCTION_49	IF_2	IF_3
0x4003a2d	    0xc74744010000	               mov dword [rdi + 0x44], 1	      3649	dwarf2.c	FUNCTION_49	IF_2	IF_3
0x4003a34	            0xeb45	                           jmp 0x4003a7b	      3650	dwarf2.c	FUNCTION_49	IF_2	IF_3
0x4003a36	          0x4889fb	                            mov rbx, rdi	      3650	dwarf2.c	FUNCTION_49	IF_2	IF_3
0x4003a39	      0xe834e4ffff	               call sym.decode_line_info	      3653	dwarf2.c	FUNCTION_49	IF_2	CALL_1
0x4003a3e	        0x48894378	             mov qword [rbx + 0x78], rax	      3653	dwarf2.c	FUNCTION_49	IF_2	CALL_1
0x4003a42	          0x4885c0	                           test rax, rax	      3655	dwarf2.c	FUNCTION_49	IF_2	IF_4
0x4003a45	            0x750b	                           jne 0x4003a52	      3655	dwarf2.c	FUNCTION_49	IF_2	IF_4
0x4003a47	    0xc74344010000	               mov dword [rbx + 0x44], 1	      3657	dwarf2.c	FUNCTION_49	IF_2	IF_4
0x4003a4e	            0x89e8	                            mov eax, ebp	      3658	dwarf2.c	FUNCTION_49	IF_2	IF_4
0x4003a50	            0xeb29	                           jmp 0x4003a7b	      3658	dwarf2.c	FUNCTION_49	IF_2	IF_4
0x4003a52	      0xb801000000	                              mov eax, 1	      3669	dwarf2.c	FUNCTION_49
0x4003a57	        0x488b5370	            mov rdx, qword [rbx + 0x70] 	      3661	dwarf2.c	FUNCTION_49	IF_2	IF_5
0x4003a5b	        0x48395368	            cmp qword [rbx + 0x68], rdx 	      3661	dwarf2.c	FUNCTION_49	IF_2	IF_5
0x4003a5f	            0x731a	                           jae 0x4003a7b	      3661	dwarf2.c	FUNCTION_49	IF_2	IF_5
0x4003a61	          0x4889df	                            mov rdi, rbx	      3662	dwarf2.c	FUNCTION_49	IF_2	IF_5	CALL_2
0x4003a64	      0xe8acf8ffff	          call sym.scan_unit_for_symbols	      3662	dwarf2.c	FUNCTION_49	IF_2	IF_5	CALL_2
0x4003a69	            0x85c0	                           test eax, eax	      3662	dwarf2.c	FUNCTION_49	IF_2	IF_5	CALL_2
0x4003a6b	            0x7509	                           jne 0x4003a76	      3662	dwarf2.c	FUNCTION_49	IF_2	IF_5	CALL_2
0x4003a6d	    0xc74344010000	               mov dword [rbx + 0x44], 1	      3664	dwarf2.c	FUNCTION_49	IF_2	IF_5
0x4003a74	            0xeb05	                           jmp 0x4003a7b	      3665	dwarf2.c	FUNCTION_49	IF_2	IF_5
0x4003a76	      0xb801000000	                              mov eax, 1	      3669	dwarf2.c	FUNCTION_49
0x4003a7b	        0x4883c408	                              add rsp, 8	      3670	dwarf2.c	FUNCTION_49
0x4003a7f	              0x5b	                                 pop rbx	      3670	dwarf2.c	FUNCTION_49
0x4003a80	              0x5d	                                 pop rbp	      3670	dwarf2.c	FUNCTION_49
0x4003a81	              0xc3	                                     ret	      3670	dwarf2.c	FUNCTION_49
comp_unit_contains_address	SWITCH,0:FOR,0:WHILE,0:IF,2:functions,0:ELSE,0:DO,1:CALL,0	16
0x40001cb	          0x8b4744	            mov eax, dword [rdi + 0x44] 	      3562	dwarf2.c	FUNCTION_47	IF_1
0x40001ce	            0x85c0	                           test eax, eax	      3562	dwarf2.c	FUNCTION_47	IF_1
0x40001d0	            0x751a	                           jne 0x40001ec	      3562	dwarf2.c	FUNCTION_47	IF_1
0x40001d2	        0x4883c718	                           add rdi, 0x18	      3565	dwarf2.c	FUNCTION_47
0x40001d6	        0x48397708	                cmp qword [rdi + 8], rsi	      3568	dwarf2.c	FUNCTION_47	DO_1	IF_2
0x40001da	            0x7706	                            ja 0x40001e2	      3568	dwarf2.c	FUNCTION_47	DO_1	IF_2
0x40001dc	        0x483b7710	            cmp rsi, qword [rdi + 0x10] 	      3568	dwarf2.c	FUNCTION_47	DO_1	IF_2
0x40001e0	            0x7210	                            jb 0x40001f2	      3568	dwarf2.c	FUNCTION_47	DO_1	IF_2
0x40001e2	          0x488b3f	                    mov rdi, qword [rdi]	      3570	dwarf2.c	FUNCTION_47	DO_1
0x40001e5	          0x4885ff	                           test rdi, rdi	      3572	dwarf2.c	FUNCTION_47
0x40001e8	            0x75ec	                           jne 0x40001d6	      3572	dwarf2.c	FUNCTION_47
0x40001ea	            0xf3c3	                                     ret	      3572	dwarf2.c	FUNCTION_47
0x40001ec	      0xb800000000	                              mov eax, 0	      3563	dwarf2.c	FUNCTION_47	IF_1
0x40001f1	              0xc3	                                     ret	      3563	dwarf2.c	FUNCTION_47	IF_1
0x40001f2	      0xb801000000	                              mov eax, 1	      3569	dwarf2.c	FUNCTION_47	DO_1	IF_2
0x40001f7	              0xc3	                                     ret	      3575	dwarf2.c	FUNCTION_47
read_section	SWITCH,0:FOR,0:WHILE,0:IF,7:functions,0:ELSE,0:DO,0:CALL,12	111
0x4000628	            0x4157	                                push r15	       526	dwarf2.c	FUNCTION_5
0x400062a	            0x4156	                                push r14	       526	dwarf2.c	FUNCTION_5
0x400062c	            0x4155	                                push r13	       526	dwarf2.c	FUNCTION_5
0x400062e	            0x4154	                                push r12	       526	dwarf2.c	FUNCTION_5
0x4000630	              0x55	                                push rbp	       526	dwarf2.c	FUNCTION_5
0x4000631	              0x53	                                push rbx	       526	dwarf2.c	FUNCTION_5
0x4000632	        0x4883ec18	                           sub rsp, 0x18	       526	dwarf2.c	FUNCTION_5
0x4000636	        0x48891424	                    mov qword [rsp], rdx	       526	dwarf2.c	FUNCTION_5
0x400063a	          0x4889cb	                            mov rbx, rcx	       526	dwarf2.c	FUNCTION_5
0x400063d	          0x4d89cd	                             mov r13, r9	       526	dwarf2.c	FUNCTION_5
0x4000640	          0x4c8b36	                    mov r14, qword [rsi]	       528	dwarf2.c	FUNCTION_5
0x4000643	        0x49833800	                       cmp qword [r8], 0	       532	dwarf2.c	FUNCTION_5	IF_1
0x4000647	     0xf8503010000	                           jne 0x4000750	       532	dwarf2.c	FUNCTION_5	IF_1
0x400064d	          0x4989ff	                            mov r15, rdi	       532	dwarf2.c	FUNCTION_5	IF_1
0x4000650	          0x4989f4	                            mov r12, rsi	       532	dwarf2.c	FUNCTION_5	IF_1
0x4000653	          0x4c89c5	                             mov rbp, r8	       532	dwarf2.c	FUNCTION_5	IF_1
0x4000656	          0x4c89f6	                            mov rsi, r14	       534	dwarf2.c	FUNCTION_5	IF_1	CALL_1
0x4000659	      0xe800000000	                          call 0x400065e	       534	dwarf2.c	FUNCTION_5	IF_1	CALL_1
0x400065e	      0x4889442408	                mov qword [rsp + 8], rax	       534	dwarf2.c	FUNCTION_5	IF_1	CALL_1
0x4000663	          0x4885c0	                           test rax, rax	       535	dwarf2.c	FUNCTION_5	IF_1	IF_2
0x4000666	            0x755b	                           jne 0x40006c3	       535	dwarf2.c	FUNCTION_5	IF_1	IF_2
0x4000668	      0x4d8b742408	                mov r14, qword [r12 + 8]	       537	dwarf2.c	FUNCTION_5	IF_1	IF_2
0x400066d	          0x4d85f6	                           test r14, r14	       538	dwarf2.c	FUNCTION_5	IF_1	IF_2	IF_3
0x4000670	            0x7415	                            je 0x4000687	       538	dwarf2.c	FUNCTION_5	IF_1	IF_2	IF_3
0x4000672	          0x4c89f6	                            mov rsi, r14	       539	dwarf2.c	FUNCTION_5	IF_1	IF_2	CALL_2
0x4000675	          0x4c89ff	                            mov rdi, r15	       539	dwarf2.c	FUNCTION_5	IF_1	IF_2	CALL_2
0x4000678	      0xe800000000	                          call 0x400067d	       539	dwarf2.c	FUNCTION_5	IF_1	IF_2	CALL_2
0x400067d	      0x4889442408	                mov qword [rsp + 8], rax	       539	dwarf2.c	FUNCTION_5	IF_1	IF_2	CALL_2
0x4000682	          0x4885c0	                           test rax, rax	       541	dwarf2.c	FUNCTION_5	IF_1	IF_4
0x4000685	            0x753c	                           jne 0x40006c3	       541	dwarf2.c	FUNCTION_5	IF_1	IF_4
0x4000687	        0x498b1c24	                    mov rbx, qword [r12]	       543	dwarf2.c	FUNCTION_5	IF_1	IF_4	CALL_4
0x400068b	      0xba05000000	                              mov edx, 5	       543	dwarf2.c	FUNCTION_5	IF_1	IF_4	CALL_4
0x4000690	      0xbe00000000	                              mov esi, 0	       543	dwarf2.c	FUNCTION_5	IF_1	IF_4	CALL_4
0x4000695	      0xbf00000000	                              mov edi, 0	       543	dwarf2.c	FUNCTION_5	IF_1	IF_4	CALL_4
0x400069a	      0xe800000000	                          call 0x400069f	       543	dwarf2.c	FUNCTION_5	IF_1	IF_4	CALL_4
0x400069f	          0x4889de	                            mov rsi, rbx	       543	dwarf2.c	FUNCTION_5	IF_1	IF_4	CALL_4
0x40006a2	          0x4889c7	                            mov rdi, rax	       543	dwarf2.c	FUNCTION_5	IF_1	IF_4	CALL_4
0x40006a5	      0xb800000000	                              mov eax, 0	       543	dwarf2.c	FUNCTION_5	IF_1	IF_4	CALL_4
0x40006aa	      0xe800000000	                          call 0x40006af	       543	dwarf2.c	FUNCTION_5	IF_1	IF_4	CALL_4
0x40006af	      0xbf11000000	                           mov edi, 0x11	       545	dwarf2.c	FUNCTION_5	IF_1	IF_4	CALL_5
0x40006b4	      0xe800000000	                          call 0x40006b9	       545	dwarf2.c	FUNCTION_5	IF_1	IF_4	CALL_5
0x40006b9	      0xb800000000	                              mov eax, 0	       546	dwarf2.c	FUNCTION_5	IF_1	IF_4
0x40006be	      0xe9e0000000	                           jmp 0x40007a3	       546	dwarf2.c	FUNCTION_5	IF_1	IF_4
0x40006c3	      0x488b442408	                mov rax, qword [rsp + 8]	       549	dwarf2.c	FUNCTION_5	IF_1
0x40006c8	        0x488b7840	            mov rdi, qword [rax + 0x40] 	       549	dwarf2.c	FUNCTION_5	IF_1
0x40006cc	          0x4885ff	                           test rdi, rdi	       549	dwarf2.c	FUNCTION_5	IF_1
0x40006cf	            0x7504	                           jne 0x40006d5	       549	dwarf2.c	FUNCTION_5	IF_1
0x40006d1	        0x488b7838	            mov rdi, qword [rax + 0x38] 	       549	dwarf2.c	FUNCTION_5	IF_1
0x40006d5	        0x49897d00	                    mov qword [r13], rdi	       549	dwarf2.c	FUNCTION_5	IF_1
0x40006d9	        0x4883c701	                              add rdi, 1	       552	dwarf2.c	FUNCTION_5	IF_1	CALL_6
0x40006dd	      0xe800000000	                          call 0x40006e2	       552	dwarf2.c	FUNCTION_5	IF_1	CALL_6
0x40006e2	          0x4989c4	                            mov r12, rax	       552	dwarf2.c	FUNCTION_5	IF_1	CALL_6
0x40006e5	          0x4885c0	                           test rax, rax	       553	dwarf2.c	FUNCTION_5	IF_1	IF_5
0x40006e8	     0xf84b0000000	                            je 0x400079e	       553	dwarf2.c	FUNCTION_5	IF_1	IF_5
0x40006ee	        0x488b0424	                    mov rax, qword [rsp]	       555	dwarf2.c	FUNCTION_5	IF_1	IF_6
0x40006f2	          0x4885c0	                           test rax, rax	       555	dwarf2.c	FUNCTION_5	IF_1	IF_6
0x40006f5	            0x741b	                            je 0x4000712	       555	dwarf2.c	FUNCTION_5	IF_1	IF_6
0x40006f7	          0x4889c1	                            mov rcx, rax	       556	dwarf2.c	FUNCTION_5	IF_1	IF_6	CALL_7
0x40006fa	          0x4c89e2	                            mov rdx, r12	       556	dwarf2.c	FUNCTION_5	IF_1	IF_6	CALL_7
0x40006fd	      0x488b742408	                mov rsi, qword [rsp + 8]	       556	dwarf2.c	FUNCTION_5	IF_1	IF_6	CALL_7
0x4000702	          0x4c89ff	                            mov rdi, r15	       556	dwarf2.c	FUNCTION_5	IF_1	IF_6	CALL_7
0x4000705	      0xe800000000	                          call 0x400070a	       556	dwarf2.c	FUNCTION_5	IF_1	IF_6	CALL_7
0x400070a	          0x4885c0	                           test rax, rax	       555	dwarf2.c	FUNCTION_5	IF_1	IF_6
0x400070d	           0xf94c0	                                 sete al	       555	dwarf2.c	FUNCTION_5	IF_1	IF_6
0x4000710	            0xeb1e	                           jmp 0x4000730	       555	dwarf2.c	FUNCTION_5	IF_1	IF_6
0x4000712	        0x4d8b4500	                     mov r8, qword [r13]	       558	dwarf2.c	FUNCTION_5	IF_1	IF_6	CALL_8
0x4000716	      0xb900000000	                              mov ecx, 0	       558	dwarf2.c	FUNCTION_5	IF_1	IF_6	CALL_8
0x400071b	          0x4c89e2	                            mov rdx, r12	       558	dwarf2.c	FUNCTION_5	IF_1	IF_6	CALL_8
0x400071e	      0x488b742408	                mov rsi, qword [rsp + 8]	       558	dwarf2.c	FUNCTION_5	IF_1	IF_6	CALL_8
0x4000723	          0x4c89ff	                            mov rdi, r15	       558	dwarf2.c	FUNCTION_5	IF_1	IF_6	CALL_8
0x4000726	      0xe800000000	                          call 0x400072b	       558	dwarf2.c	FUNCTION_5	IF_1	IF_6	CALL_8
0x400072b	            0x85c0	                           test eax, eax	       555	dwarf2.c	FUNCTION_5	IF_1	IF_6
0x400072d	           0xf94c0	                                 sete al	       555	dwarf2.c	FUNCTION_5	IF_1	IF_6
0x4000730	            0x84c0	                             test al, al	       555	dwarf2.c	FUNCTION_5	IF_1	IF_6
0x4000732	            0x740f	                            je 0x4000743	       555	dwarf2.c	FUNCTION_5	IF_1	IF_6
0x4000734	          0x4c89e7	                            mov rdi, r12	       560	dwarf2.c	FUNCTION_5	IF_1	IF_6	CALL_9
0x4000737	      0xe800000000	                          call 0x400073c	       560	dwarf2.c	FUNCTION_5	IF_1	IF_6	CALL_9
0x400073c	      0xb800000000	                              mov eax, 0	       561	dwarf2.c	FUNCTION_5	IF_1	IF_6
0x4000741	            0xeb60	                           jmp 0x40007a3	       561	dwarf2.c	FUNCTION_5	IF_1	IF_6
0x4000743	        0x498b4500	                    mov rax, qword [r13]	       563	dwarf2.c	FUNCTION_5	IF_1
0x4000747	      0x41c6040400	                 mov byte [r12 + rax], 0	       563	dwarf2.c	FUNCTION_5	IF_1
0x400074c	        0x4c896500	                    mov qword [rbp], r12	       564	dwarf2.c	FUNCTION_5	IF_1
0x4000750	      0xb801000000	                              mov eax, 1	       580	dwarf2.c	FUNCTION_5
0x4000755	          0x4885db	                           test rbx, rbx	       569	dwarf2.c	FUNCTION_5	IF_7
0x4000758	            0x7449	                            je 0x40007a3	       569	dwarf2.c	FUNCTION_5	IF_7
0x400075a	        0x498b6d00	                    mov rbp, qword [r13]	       569	dwarf2.c	FUNCTION_5	IF_7
0x400075e	          0x4839eb	                            cmp rbx, rbp	       569	dwarf2.c	FUNCTION_5	IF_7
0x4000761	            0x7240	                            jb 0x40007a3	       569	dwarf2.c	FUNCTION_5	IF_7
0x4000763	      0xba05000000	                              mov edx, 5	       572	dwarf2.c	FUNCTION_5	IF_7	CALL_11
0x4000768	      0xbe00000000	                              mov esi, 0	       572	dwarf2.c	FUNCTION_5	IF_7	CALL_11
0x400076d	      0xbf00000000	                              mov edi, 0	       572	dwarf2.c	FUNCTION_5	IF_7	CALL_11
0x4000772	      0xe800000000	                          call 0x4000777	       572	dwarf2.c	FUNCTION_5	IF_7	CALL_11
0x4000777	          0x4889e9	                            mov rcx, rbp	       572	dwarf2.c	FUNCTION_5	IF_7	CALL_11
0x400077a	          0x4c89f2	                            mov rdx, r14	       572	dwarf2.c	FUNCTION_5	IF_7	CALL_11
0x400077d	          0x4889de	                            mov rsi, rbx	       572	dwarf2.c	FUNCTION_5	IF_7	CALL_11
0x4000780	          0x4889c7	                            mov rdi, rax	       572	dwarf2.c	FUNCTION_5	IF_7	CALL_11
0x4000783	      0xb800000000	                              mov eax, 0	       572	dwarf2.c	FUNCTION_5	IF_7	CALL_11
0x4000788	      0xe800000000	                          call 0x400078d	       572	dwarf2.c	FUNCTION_5	IF_7	CALL_11
0x400078d	      0xbf11000000	                           mov edi, 0x11	       576	dwarf2.c	FUNCTION_5	IF_7	CALL_12
0x4000792	      0xe800000000	                          call 0x4000797	       576	dwarf2.c	FUNCTION_5	IF_7	CALL_12
0x4000797	      0xb800000000	                              mov eax, 0	       577	dwarf2.c	FUNCTION_5	IF_7
0x400079c	            0xeb05	                           jmp 0x40007a3	       577	dwarf2.c	FUNCTION_5	IF_7
0x400079e	      0xb800000000	                              mov eax, 0	       554	dwarf2.c	FUNCTION_5	IF_1	IF_5
0x40007a3	        0x4883c418	                           add rsp, 0x18	       581	dwarf2.c	FUNCTION_5
0x40007a7	              0x5b	                                 pop rbx	       581	dwarf2.c	FUNCTION_5
0x40007a8	              0x5d	                                 pop rbp	       581	dwarf2.c	FUNCTION_5
0x40007a9	            0x415c	                                 pop r12	       581	dwarf2.c	FUNCTION_5
0x40007ab	            0x415d	                                 pop r13	       581	dwarf2.c	FUNCTION_5
0x40007ad	            0x415e	                                 pop r14	       581	dwarf2.c	FUNCTION_5
0x40007af	            0x415f	                                 pop r15	       581	dwarf2.c	FUNCTION_5
0x40007b1	              0xc3	                                     ret	       581	dwarf2.c	FUNCTION_5
add_line_info	SWITCH,0:FOR,0:WHILE,1:IF,12:functions,0:ELSE,5:DO,0:CALL,10	181
0x4000b60	            0x4157	                                push r15	      1448	dwarf2.c	FUNCTION_25
0x4000b62	            0x4156	                                push r14	      1448	dwarf2.c	FUNCTION_25
0x4000b64	            0x4155	                                push r13	      1448	dwarf2.c	FUNCTION_25
0x4000b66	            0x4154	                                push r12	      1448	dwarf2.c	FUNCTION_25
0x4000b68	              0x55	                                push rbp	      1448	dwarf2.c	FUNCTION_25
0x4000b69	              0x53	                                push rbx	      1448	dwarf2.c	FUNCTION_25
0x4000b6a	        0x4883ec18	                           sub rsp, 0x18	      1448	dwarf2.c	FUNCTION_25
0x4000b6e	          0x4889fd	                            mov rbp, rdi	      1448	dwarf2.c	FUNCTION_25
0x4000b71	          0x4989f4	                            mov r12, rsi	      1448	dwarf2.c	FUNCTION_25
0x4000b74	          0x4189d7	                           mov r15d, edx	      1448	dwarf2.c	FUNCTION_25
0x4000b77	          0x4989cd	                            mov r13, rcx	      1448	dwarf2.c	FUNCTION_25
0x4000b7a	      0x4489442408	                mov dword [rsp + 8], r8d	      1448	dwarf2.c	FUNCTION_25
0x4000b7f	      0x44894c240c	              mov dword [rsp + 0xc], r9d	      1448	dwarf2.c	FUNCTION_25
0x4000b84	        0x4c8b7730	            mov r14, qword [rdi + 0x30] 	      1450	dwarf2.c	FUNCTION_25
0x4000b88	      0xbe28000000	                           mov esi, 0x28	      1451	dwarf2.c	FUNCTION_25	CALL_1
0x4000b8d	          0x488b3f	                    mov rdi, qword [rdi]	      1451	dwarf2.c	FUNCTION_25	CALL_1
0x4000b90	      0xe800000000	                          call 0x4000b95	      1451	dwarf2.c	FUNCTION_25	CALL_1
0x4000b95	          0x4885c0	                           test rax, rax	      1453	dwarf2.c	FUNCTION_25	IF_1
0x4000b98	     0xf84ef010000	                            je 0x4000d8d	      1453	dwarf2.c	FUNCTION_25	IF_1
0x4000b9e	          0x4889c3	                            mov rbx, rax	      1453	dwarf2.c	FUNCTION_25	IF_1
0x4000ba1	    0x48c700000000	                      mov qword [rax], 0	      1457	dwarf2.c	FUNCTION_25
0x4000ba8	        0x4c896008	                mov qword [rax + 8], r12	      1458	dwarf2.c	FUNCTION_25
0x4000bac	        0x44887824	             mov byte [rax + 0x24], r15b	      1459	dwarf2.c	FUNCTION_25
0x4000bb0	        0x8b442408	                mov eax, dword [rsp + 8]	      1460	dwarf2.c	FUNCTION_25
0x4000bb4	          0x894318	             mov dword [rbx + 0x18], eax	      1460	dwarf2.c	FUNCTION_25
0x4000bb7	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      1461	dwarf2.c	FUNCTION_25
0x4000bbb	          0x89431c	             mov dword [rbx + 0x1c], eax	      1461	dwarf2.c	FUNCTION_25
0x4000bbe	        0x8b442450	            mov eax, dword [rsp + 0x50] 	      1462	dwarf2.c	FUNCTION_25
0x4000bc2	          0x894320	             mov dword [rbx + 0x20], eax	      1462	dwarf2.c	FUNCTION_25
0x4000bc5	       0xfb6442458	           movzx eax, byte [rsp + 0x58] 	      1463	dwarf2.c	FUNCTION_25
0x4000bca	          0x884325	               mov byte [rbx + 0x25], al	      1463	dwarf2.c	FUNCTION_25
0x4000bcd	          0x4d85ed	                           test r13, r13	      1465	dwarf2.c	FUNCTION_25	IF_2
0x4000bd0	            0x7446	                            je 0x4000c18	      1465	dwarf2.c	FUNCTION_25	IF_2
0x4000bd2	      0x41807d0000	                       cmp byte [r13], 0	      1465	dwarf2.c	FUNCTION_25	IF_2
0x4000bd7	            0x743f	                            je 0x4000c18	      1465	dwarf2.c	FUNCTION_25	IF_2
0x4000bd9	      0xb800000000	                              mov eax, 0	      1467	dwarf2.c	FUNCTION_25	IF_2	CALL_3
0x4000bde	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1467	dwarf2.c	FUNCTION_25	IF_2	CALL_3
0x4000be5	          0x4c89ef	                            mov rdi, r13	      1467	dwarf2.c	FUNCTION_25	IF_2	CALL_3
0x4000be8	            0xf2ae	              repne scasb al, byte [rdi]	      1467	dwarf2.c	FUNCTION_25	IF_2	CALL_3
0x4000bea	          0x48f7d1	                                 not rcx	      1467	dwarf2.c	FUNCTION_25	IF_2	CALL_3
0x4000bed	          0x4889ce	                            mov rsi, rcx	      1467	dwarf2.c	FUNCTION_25	IF_2	CALL_3
0x4000bf0	        0x488b7d00	                    mov rdi, qword [rbp]	      1467	dwarf2.c	FUNCTION_25	IF_2	CALL_3
0x4000bf4	      0xe800000000	                          call 0x4000bf9	      1467	dwarf2.c	FUNCTION_25	IF_2	CALL_3
0x4000bf9	          0x4889c7	                            mov rdi, rax	      1467	dwarf2.c	FUNCTION_25	IF_2	CALL_3
0x4000bfc	        0x48894310	             mov qword [rbx + 0x10], rax	      1467	dwarf2.c	FUNCTION_25	IF_2	CALL_3
0x4000c00	      0xb800000000	                              mov eax, 0	      1469	dwarf2.c	FUNCTION_25	IF_2	IF_3
0x4000c05	          0x4885ff	                           test rdi, rdi	      1468	dwarf2.c	FUNCTION_25	IF_2	IF_3
0x4000c08	     0xf84bb010000	                            je 0x4000dc9	      1468	dwarf2.c	FUNCTION_25	IF_2	IF_3
0x4000c0e	          0x4c89ee	                            mov rsi, r13	       110	string3.h	FUNCTION_78	CALL_3
0x4000c11	      0xe800000000	                          call 0x4000c16	       110	string3.h	FUNCTION_78	CALL_3
0x4000c16	            0xeb08	                           jmp 0x4000c20	       110	string3.h	FUNCTION_78	CALL_3
0x4000c18	    0x48c743100000	               mov qword [rbx + 0x10], 0	      1473	dwarf2.c	FUNCTION_25	ELSE_1
0x4000c20	          0x4d85f6	                           test r14, r14	      1490	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x4000c23	            0x7445	                            je 0x4000c6a	      1490	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x4000c25	        0x498b4610	            mov rax, qword [r14 + 0x10] 	      1491	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x4000c29	        0x488b5008	                mov rdx, qword [rax + 8]	      1491	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x4000c2d	          0x4939d4	                            cmp r12, rdx	      1491	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x4000c30	            0x7532	                           jne 0x4000c64	      1491	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x4000c32	        0x443a7824	            cmp r15b, byte [rax + 0x24] 	      1492	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x4000c36	            0x752c	                           jne 0x4000c64	      1492	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x4000c38	         0xfb64825	           movzx ecx, byte [rax + 0x25] 	      1493	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x4000c3c	        0x394c2458	            cmp dword [rsp + 0x58], ecx 	      1493	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x4000c40	            0x7522	                           jne 0x4000c64	      1493	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x4000c42	        0x483b4538	            cmp rax, qword [rbp + 0x38] 	      1497	dwarf2.c	FUNCTION_25	ELSE_1	IF_4	IF_5
0x4000c46	            0x7504	                           jne 0x4000c4c	      1497	dwarf2.c	FUNCTION_25	ELSE_1	IF_4	IF_5
0x4000c48	        0x48895d38	            mov qword [rbp + 0x38], rbx 	      1498	dwarf2.c	FUNCTION_25	ELSE_1	IF_4	IF_5
0x4000c4c	        0x498b4610	            mov rax, qword [r14 + 0x10] 	      1499	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x4000c50	          0x488b00	                    mov rax, qword [rax]	      1499	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x4000c53	          0x488903	                    mov qword [rbx], rax	      1499	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x4000c56	        0x49895e10	             mov qword [r14 + 0x10], rbx	      1500	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x4000c5a	      0xb801000000	                              mov eax, 1	      1557	dwarf2.c	FUNCTION_25
0x4000c5f	      0xe965010000	                           jmp 0x4000dc9	      1500	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x4000c64	        0x80782500	                cmp byte [rax + 0x25], 0	      1502	dwarf2.c	FUNCTION_25	ELSE_2	IF_6
0x4000c68	            0x7438	                            je 0x4000ca2	      1502	dwarf2.c	FUNCTION_25	ELSE_2	IF_6
0x4000c6a	      0xbf28000000	                           mov edi, 0x28	      1506	dwarf2.c	FUNCTION_25	ELSE_2	IF_6	CALL_5
0x4000c6f	      0xe800000000	                          call 0x4000c74	      1506	dwarf2.c	FUNCTION_25	ELSE_2	IF_6	CALL_5
0x4000c74	          0x4885c0	                           test rax, rax	      1507	dwarf2.c	FUNCTION_25	ELSE_2	IF_6	IF_7
0x4000c77	     0xf8417010000	                            je 0x4000d94	      1507	dwarf2.c	FUNCTION_25	ELSE_2	IF_6	IF_7
0x4000c7d	          0x4c8920	                    mov qword [rax], r12	      1509	dwarf2.c	FUNCTION_25	ELSE_2	IF_6
0x4000c80	        0x488b5530	            mov rdx, qword [rbp + 0x30] 	      1510	dwarf2.c	FUNCTION_25	ELSE_2	IF_6
0x4000c84	        0x48895008	                mov qword [rax + 8], rdx	      1510	dwarf2.c	FUNCTION_25	ELSE_2	IF_6
0x4000c88	        0x48895810	             mov qword [rax + 0x10], rbx	      1511	dwarf2.c	FUNCTION_25	ELSE_2	IF_6
0x4000c8c	        0x48895d38	            mov qword [rbp + 0x38], rbx 	      1512	dwarf2.c	FUNCTION_25	ELSE_2	IF_6
0x4000c90	        0x48894530	            mov qword [rbp + 0x30], rax 	      1513	dwarf2.c	FUNCTION_25	ELSE_2	IF_6
0x4000c94	        0x83451001	               add dword [rbp + 0x10], 1	      1514	dwarf2.c	FUNCTION_25	ELSE_2	IF_6
0x4000c98	      0xb801000000	                              mov eax, 1	      1557	dwarf2.c	FUNCTION_25
0x4000c9d	      0xe927010000	                           jmp 0x4000dc9	      1514	dwarf2.c	FUNCTION_25	ELSE_2	IF_6
0x4000ca2	        0x807b2500	                cmp byte [rbx + 0x25], 0	      1516	dwarf2.c	FUNCTION_25	ELSE_3	IF_8
0x4000ca6	            0x7520	                           jne 0x4000cc8	      1516	dwarf2.c	FUNCTION_25	ELSE_3	IF_8
0x4000ca8	        0x488b4b08	                mov rcx, qword [rbx + 8]	      1428	dwarf2.c	FUNCTION_24
0x4000cac	          0x4839d1	                            cmp rcx, rdx	      1429	dwarf2.c	FUNCTION_24
0x4000caf	            0x7717	                            ja 0x4000cc8	      1429	dwarf2.c	FUNCTION_24
0x4000cb1	          0x4839d1	                            cmp rcx, rdx	      1429	dwarf2.c	FUNCTION_24
0x4000cb4	     0xf85e1000000	                           jne 0x4000d9b	      1429	dwarf2.c	FUNCTION_24
0x4000cba	         0xfb67b24	           movzx edi, byte [rbx + 0x24] 	      1430	dwarf2.c	FUNCTION_24
0x4000cbe	        0x40387824	              cmp byte [rax + 0x24], dil	      1430	dwarf2.c	FUNCTION_24
0x4000cc2	     0xf83d3000000	                           jae 0x4000d9b	      1430	dwarf2.c	FUNCTION_24
0x4000cc8	          0x488903	                    mov qword [rbx], rax	      1520	dwarf2.c	FUNCTION_25	ELSE_3	IF_8
0x4000ccb	        0x49895e10	             mov qword [r14 + 0x10], rbx	      1521	dwarf2.c	FUNCTION_25	ELSE_3	IF_8
0x4000ccf	      0xb801000000	                              mov eax, 1	      1557	dwarf2.c	FUNCTION_25
0x4000cd4	      0x48837d3800	               cmp qword [rbp + 0x38], 0	      1524	dwarf2.c	FUNCTION_25	ELSE_3	IF_8	IF_9
0x4000cd9	     0xf85ea000000	                           jne 0x4000dc9	      1524	dwarf2.c	FUNCTION_25	ELSE_3	IF_8	IF_9
0x4000cdf	        0x48895d38	            mov qword [rbp + 0x38], rbx 	      1525	dwarf2.c	FUNCTION_25	ELSE_3	IF_8	IF_9
0x4000ce3	      0xe9e1000000	                           jmp 0x4000dc9	      1525	dwarf2.c	FUNCTION_25	ELSE_3	IF_8	IF_9
0x4000ce8	          0x4839f1	                            cmp rcx, rsi	      1429	dwarf2.c	FUNCTION_24
0x4000ceb	     0xf85bc000000	                           jne 0x4000dad	      1429	dwarf2.c	FUNCTION_24
0x4000cf1	         0xfb67a24	           movzx edi, byte [rdx + 0x24] 	      1430	dwarf2.c	FUNCTION_24
0x4000cf5	        0x40387b24	              cmp byte [rbx + 0x24], dil	      1430	dwarf2.c	FUNCTION_24
0x4000cf9	            0x7731	                            ja 0x4000d2c	      1430	dwarf2.c	FUNCTION_24
0x4000cfb	      0xe9ad000000	                           jmp 0x4000dad	      1430	dwarf2.c	FUNCTION_24
0x4000d00	        0x488b7208	                mov rsi, qword [rdx + 8]	      1428	dwarf2.c	FUNCTION_24
0x4000d04	          0x4839f1	                            cmp rcx, rsi	      1429	dwarf2.c	FUNCTION_24
0x4000d07	            0x770f	                            ja 0x4000d18	      1429	dwarf2.c	FUNCTION_24
0x4000d09	          0x4839f1	                            cmp rcx, rsi	      1429	dwarf2.c	FUNCTION_24
0x4000d0c	            0x751e	                           jne 0x4000d2c	      1429	dwarf2.c	FUNCTION_24
0x4000d0e	         0xfb67a24	           movzx edi, byte [rdx + 0x24] 	      1430	dwarf2.c	FUNCTION_24
0x4000d12	        0x40387b24	              cmp byte [rbx + 0x24], dil	      1430	dwarf2.c	FUNCTION_24
0x4000d16	            0x7614	                           jbe 0x4000d2c	      1430	dwarf2.c	FUNCTION_24
0x4000d18	          0x488913	                    mov qword [rbx], rdx	      1532	dwarf2.c	FUNCTION_25	ELSE_4	IF_10
0x4000d1b	        0x488b4538	            mov rax, qword [rbp + 0x38] 	      1533	dwarf2.c	FUNCTION_25	ELSE_4	IF_10
0x4000d1f	          0x488918	                    mov qword [rax], rbx	      1533	dwarf2.c	FUNCTION_25	ELSE_4	IF_10
0x4000d22	      0xb801000000	                              mov eax, 1	      1557	dwarf2.c	FUNCTION_25
0x4000d27	      0xe99d000000	                           jmp 0x4000dc9	      1533	dwarf2.c	FUNCTION_25	ELSE_4	IF_10
0x4000d2c	          0x488b10	                    mov rdx, qword [rax]	      1540	dwarf2.c	FUNCTION_25	ELSE_5
0x4000d2f	          0x4885d2	                           test rdx, rdx	      1542	dwarf2.c	FUNCTION_25	ELSE_5	WHILE_1
0x4000d32	            0x7505	                           jne 0x4000d39	      1542	dwarf2.c	FUNCTION_25	ELSE_5	WHILE_1
0x4000d34	            0xeb37	                           jmp 0x4000d6d	      1542	dwarf2.c	FUNCTION_25	ELSE_5	WHILE_1
0x4000d36	          0x4889f2	                            mov rdx, rsi	      1549	dwarf2.c	FUNCTION_25	ELSE_5	WHILE_1
0x4000d39	        0x488b7008	                mov rsi, qword [rax + 8]	      1428	dwarf2.c	FUNCTION_24
0x4000d3d	          0x4839f1	                            cmp rcx, rsi	      1429	dwarf2.c	FUNCTION_24
0x4000d40	            0x7720	                            ja 0x4000d62	      1429	dwarf2.c	FUNCTION_24
0x4000d42	          0x4839f1	                            cmp rcx, rsi	      1429	dwarf2.c	FUNCTION_24
0x4000d45	            0x7577	                           jne 0x4000dbe	      1429	dwarf2.c	FUNCTION_24
0x4000d47	         0xfb67824	           movzx edi, byte [rax + 0x24] 	      1430	dwarf2.c	FUNCTION_24
0x4000d4b	        0x40387b24	              cmp byte [rbx + 0x24], dil	      1430	dwarf2.c	FUNCTION_24
0x4000d4f	            0x7711	                            ja 0x4000d62	      1430	dwarf2.c	FUNCTION_24
0x4000d51	            0xeb6b	                           jmp 0x4000dbe	      1430	dwarf2.c	FUNCTION_24
0x4000d53	          0x4839f1	                            cmp rcx, rsi	      1429	dwarf2.c	FUNCTION_24
0x4000d56	            0x750a	                           jne 0x4000d62	      1429	dwarf2.c	FUNCTION_24
0x4000d58	         0xfb67a24	           movzx edi, byte [rdx + 0x24] 	      1430	dwarf2.c	FUNCTION_24
0x4000d5c	        0x40387b24	              cmp byte [rbx + 0x24], dil	      1430	dwarf2.c	FUNCTION_24
0x4000d60	            0x770b	                            ja 0x4000d6d	      1430	dwarf2.c	FUNCTION_24
0x4000d62	          0x488b32	                    mov rsi, qword [rdx]	      1549	dwarf2.c	FUNCTION_25	ELSE_5	WHILE_1
0x4000d65	          0x4889d0	                            mov rax, rdx	      1549	dwarf2.c	FUNCTION_25	ELSE_5	WHILE_1
0x4000d68	          0x4885f6	                           test rsi, rsi	      1542	dwarf2.c	FUNCTION_25	ELSE_5	WHILE_1
0x4000d6b	            0x75c9	                           jne 0x4000d36	      1542	dwarf2.c	FUNCTION_25	ELSE_5	WHILE_1
0x4000d6d	        0x48894538	            mov qword [rbp + 0x38], rax 	      1551	dwarf2.c	FUNCTION_25	ELSE_5
0x4000d71	          0x488b00	                    mov rax, qword [rax]	      1552	dwarf2.c	FUNCTION_25	ELSE_5
0x4000d74	          0x488903	                    mov qword [rbx], rax	      1552	dwarf2.c	FUNCTION_25	ELSE_5
0x4000d77	        0x488b4538	            mov rax, qword [rbp + 0x38] 	      1553	dwarf2.c	FUNCTION_25	ELSE_5
0x4000d7b	          0x488918	                    mov qword [rax], rbx	      1553	dwarf2.c	FUNCTION_25	ELSE_5
0x4000d7e	      0xb801000000	                              mov eax, 1	      1557	dwarf2.c	FUNCTION_25
0x4000d83	          0x4d3b26	                    cmp r12, qword [r14]	      1554	dwarf2.c	FUNCTION_25	ELSE_5	IF_12
0x4000d86	            0x7341	                           jae 0x4000dc9	      1554	dwarf2.c	FUNCTION_25	ELSE_5	IF_12
0x4000d88	          0x4d8926	                    mov qword [r14], r12	      1555	dwarf2.c	FUNCTION_25	ELSE_5	IF_12
0x4000d8b	            0xeb3c	                           jmp 0x4000dc9	      1555	dwarf2.c	FUNCTION_25	ELSE_5	IF_12
0x4000d8d	      0xb800000000	                              mov eax, 0	      1454	dwarf2.c	FUNCTION_25	IF_1
0x4000d92	            0xeb35	                           jmp 0x4000dc9	      1454	dwarf2.c	FUNCTION_25	IF_1
0x4000d94	      0xb800000000	                              mov eax, 0	      1508	dwarf2.c	FUNCTION_25	ELSE_2	IF_6	IF_7
0x4000d99	            0xeb2e	                           jmp 0x4000dc9	      1508	dwarf2.c	FUNCTION_25	ELSE_2	IF_6	IF_7
0x4000d9b	        0x488b5538	            mov rdx, qword [rbp + 0x38] 	      1527	dwarf2.c	FUNCTION_25	ELSE_4	IF_10	CALL_7
0x4000d9f	        0x488b7208	                mov rsi, qword [rdx + 8]	      1428	dwarf2.c	FUNCTION_24
0x4000da3	          0x4839f1	                            cmp rcx, rsi	      1429	dwarf2.c	FUNCTION_24
0x4000da6	            0x7784	                            ja 0x4000d2c	      1429	dwarf2.c	FUNCTION_24
0x4000da8	      0xe93bffffff	                           jmp 0x4000ce8	      1429	dwarf2.c	FUNCTION_24
0x4000dad	          0x488b12	                    mov rdx, qword [rdx]	      1528	dwarf2.c	FUNCTION_25	ELSE_4	IF_10
0x4000db0	          0x4885d2	                           test rdx, rdx	      1528	dwarf2.c	FUNCTION_25	ELSE_4	IF_10
0x4000db3	     0xf8547ffffff	                           jne 0x4000d00	      1528	dwarf2.c	FUNCTION_25	ELSE_4	IF_10
0x4000db9	      0xe95affffff	                           jmp 0x4000d18	      1528	dwarf2.c	FUNCTION_25	ELSE_4	IF_10
0x4000dbe	        0x488b7208	                mov rsi, qword [rdx + 8]	      1428	dwarf2.c	FUNCTION_24
0x4000dc2	          0x4839f1	                            cmp rcx, rsi	      1429	dwarf2.c	FUNCTION_24
0x4000dc5	            0x768c	                           jbe 0x4000d53	      1429	dwarf2.c	FUNCTION_24
0x4000dc7	            0xeba4	                           jmp 0x4000d6d	      1429	dwarf2.c	FUNCTION_24
0x4000dc9	        0x4883c418	                           add rsp, 0x18	      1558	dwarf2.c	FUNCTION_25
0x4000dcd	              0x5b	                                 pop rbx	      1558	dwarf2.c	FUNCTION_25
0x4000dce	              0x5d	                                 pop rbp	      1558	dwarf2.c	FUNCTION_25
0x4000dcf	            0x415c	                                 pop r12	      1558	dwarf2.c	FUNCTION_25
0x4000dd1	            0x415d	                                 pop r13	      1558	dwarf2.c	FUNCTION_25
0x4000dd3	            0x415e	                                 pop r14	      1558	dwarf2.c	FUNCTION_25
0x4000dd5	            0x415f	                                 pop r15	      1558	dwarf2.c	FUNCTION_25
0x4000dd7	              0xc3	                                     ret	      1558	dwarf2.c	FUNCTION_25
info_hash_table_newfunc	SWITCH,0:FOR,0:WHILE,0:IF,3:functions,0:ELSE,0:DO,0:CALL,2	25
0x40010ae	              0x55	                                push rbp	       421	dwarf2.c	FUNCTION_1
0x40010af	              0x53	                                push rbx	       421	dwarf2.c	FUNCTION_1
0x40010b0	        0x4883ec08	                              sub rsp, 8	       421	dwarf2.c	FUNCTION_1
0x40010b4	          0x4889f3	                            mov rbx, rsi	       421	dwarf2.c	FUNCTION_1
0x40010b7	          0x4889d5	                            mov rbp, rdx	       421	dwarf2.c	FUNCTION_1
0x40010ba	          0x4885ff	                           test rdi, rdi	       426	dwarf2.c	FUNCTION_1	IF_1
0x40010bd	            0x7515	                           jne 0x40010d4	       426	dwarf2.c	FUNCTION_1	IF_1
0x40010bf	      0xbe20000000	                           mov esi, 0x20	       428	dwarf2.c	FUNCTION_1	IF_1	CALL_1
0x40010c4	          0x4889df	                            mov rdi, rbx	       428	dwarf2.c	FUNCTION_1	IF_1	CALL_1
0x40010c7	      0xe800000000	                          call 0x40010cc	       428	dwarf2.c	FUNCTION_1	IF_1	CALL_1
0x40010cc	          0x4889c7	                            mov rdi, rax	       428	dwarf2.c	FUNCTION_1	IF_1	CALL_1
0x40010cf	          0x4885c0	                           test rax, rax	       430	dwarf2.c	FUNCTION_1	IF_1	IF_2
0x40010d2	            0x741a	                            je 0x40010ee	       430	dwarf2.c	FUNCTION_1	IF_1	IF_2
0x40010d4	          0x4889ea	                            mov rdx, rbp	       435	dwarf2.c	FUNCTION_1
0x40010d7	          0x4889de	                            mov rsi, rbx	       435	dwarf2.c	FUNCTION_1
0x40010da	      0xe800000000	                          call 0x40010df	       435	dwarf2.c	FUNCTION_1
0x40010df	          0x4885c0	                           test rax, rax	       439	dwarf2.c	FUNCTION_1	IF_3
0x40010e2	            0x740f	                            je 0x40010f3	       439	dwarf2.c	FUNCTION_1	IF_3
0x40010e4	    0x48c740180000	               mov qword [rax + 0x18], 0	       440	dwarf2.c	FUNCTION_1	IF_3
0x40010ec	            0xeb05	                           jmp 0x40010f3	       440	dwarf2.c	FUNCTION_1	IF_3
0x40010ee	      0xb800000000	                              mov eax, 0	       431	dwarf2.c	FUNCTION_1	IF_1	IF_2
0x40010f3	        0x4883c408	                              add rsp, 8	       443	dwarf2.c	FUNCTION_1
0x40010f7	              0x5b	                                 pop rbx	       443	dwarf2.c	FUNCTION_1
0x40010f8	              0x5d	                                 pop rbp	       443	dwarf2.c	FUNCTION_1
0x40010f9	              0xc3	                                     ret	       443	dwarf2.c	FUNCTION_1
non_mangled	SWITCH,1:FOR,0:WHILE,0:IF,0:functions,0:ELSE,0:DO,0:CALL,0	8
0x4000131	          0x83ff1d	                           cmp edi, 0x1d	      1297	dwarf2.c	FUNCTION_23	SWITCH_1
0x4000134	            0x770f	                            ja 0x4000145	      1297	dwarf2.c	FUNCTION_23	SWITCH_1
0x4000136	            0x89ff	                            mov edi, edi	      1297	dwarf2.c	FUNCTION_23	SWITCH_1
0x4000138	    0xff24fd000000	                       jmp qword [rdi*8]	      1297	dwarf2.c	FUNCTION_23	SWITCH_1
0x400013f	      0xb801000000	                              mov eax, 1	      1314	dwarf2.c	FUNCTION_23	SWITCH_1
0x4000144	              0xc3	                                     ret	      1314	dwarf2.c	FUNCTION_23	SWITCH_1
0x4000145	      0xb800000000	                              mov eax, 0	      1300	dwarf2.c	FUNCTION_23	SWITCH_1
0x400014a	              0xc3	                                     ret	      1316	dwarf2.c	FUNCTION_23
read_rangelist	SWITCH,0:FOR,1:WHILE,0:IF,7:functions,0:ELSE,1:DO,0:CALL,4	77
0x4000a46	            0x4157	                                push r15	      2990	dwarf2.c	FUNCTION_44
0x4000a48	            0x4156	                                push r14	      2990	dwarf2.c	FUNCTION_44
0x4000a4a	            0x4155	                                push r13	      2990	dwarf2.c	FUNCTION_44
0x4000a4c	            0x4154	                                push r12	      2990	dwarf2.c	FUNCTION_44
0x4000a4e	              0x55	                                push rbp	      2990	dwarf2.c	FUNCTION_44
0x4000a4f	              0x53	                                push rbx	      2990	dwarf2.c	FUNCTION_44
0x4000a50	        0x4883ec08	                              sub rsp, 8	      2990	dwarf2.c	FUNCTION_44
0x4000a54	          0x4889fd	                            mov rbp, rdi	      2990	dwarf2.c	FUNCTION_44
0x4000a57	          0x4989f6	                            mov r14, rsi	      2990	dwarf2.c	FUNCTION_44
0x4000a5a	          0x4889d3	                            mov rbx, rdx	      2990	dwarf2.c	FUNCTION_44
0x4000a5d	    0x4c8bafb00000	            mov r13, qword [rdi + 0xb0] 	      2993	dwarf2.c	FUNCTION_44
0x4000a64	    0x488b87a00000	            mov rax, qword [rdi + 0xa0] 	      2995	dwarf2.c	FUNCTION_44	IF_1
0x4000a6b	    0x4883b8c00000	               cmp qword [rax + 0xc0], 0	      2995	dwarf2.c	FUNCTION_44	IF_1
0x4000a73	            0x7533	                           jne 0x4000aa8	      2995	dwarf2.c	FUNCTION_44	IF_1
0x4000a75	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      2537	dwarf2.c	FUNCTION_37	CALL_1
0x4000a79	        0x488b7010	            mov rsi, qword [rax + 0x10] 	      2537	dwarf2.c	FUNCTION_37	CALL_1
0x4000a7d	    0x4881c6b00000	                           add rsi, 0xb0	      2537	dwarf2.c	FUNCTION_37	CALL_1
0x4000a84	        0x488b7f10	            mov rdi, qword [rdi + 0x10] 	      2537	dwarf2.c	FUNCTION_37	CALL_1
0x4000a88	    0x4c8d88c80000	                    lea r9, [rax + 0xc8]	      2537	dwarf2.c	FUNCTION_37	CALL_1
0x4000a8f	    0x4c8d80c00000	                    lea r8, [rax + 0xc0]	      2537	dwarf2.c	FUNCTION_37	CALL_1
0x4000a96	      0xb900000000	                              mov ecx, 0	      2537	dwarf2.c	FUNCTION_37	CALL_1
0x4000a9b	      0xe888fbffff	                   call sym.read_section	      2537	dwarf2.c	FUNCTION_37	CALL_1
0x4000aa0	            0x85c0	                           test eax, eax	      2997	dwarf2.c	FUNCTION_44	IF_1	IF_2	CALL_1
0x4000aa2	     0xf84a9000000	                            je 0x4000b51	      2997	dwarf2.c	FUNCTION_44	IF_1	IF_2	CALL_1
0x4000aa8	    0x488b95a00000	            mov rdx, qword [rbp + 0xa0] 	      3001	dwarf2.c	FUNCTION_44
0x4000aaf	    0x4c8ba2c00000	            mov r12, qword [rdx + 0xc0] 	      3001	dwarf2.c	FUNCTION_44
0x4000ab6	      0xb800000000	                              mov eax, 0	      3003	dwarf2.c	FUNCTION_44	IF_3
0x4000abb	          0x4c01e3	                            add rbx, r12	      3002	dwarf2.c	FUNCTION_44	IF_3
0x4000abe	     0xf828d000000	                            jb 0x4000b51	      3002	dwarf2.c	FUNCTION_44	IF_3
0x4000ac4	    0x4c03a2c80000	             add r12, qword [rdx + 0xc8]	      3004	dwarf2.c	FUNCTION_44
0x4000acb	            0xeb03	                           jmp 0x4000ad0	      3004	dwarf2.c	FUNCTION_44
0x4000acd	          0x4989c5	                            mov r13, rax	      3023	dwarf2.c	FUNCTION_44	FOR_1	IF_6
0x4000ad0	     0xfb685ac0000	           movzx eax, byte [rbp + 0xac] 	      3012	dwarf2.c	FUNCTION_44	FOR_1	IF_4
0x4000ad7	             0x1c0	                            add eax, eax	      3012	dwarf2.c	FUNCTION_44	FOR_1	IF_4
0x4000ad9	            0x4898	                                    cdqe	      3012	dwarf2.c	FUNCTION_44	FOR_1	IF_4
0x4000adb	          0x4801d8	                            add rax, rbx	      3012	dwarf2.c	FUNCTION_44	FOR_1	IF_4
0x4000ade	          0x4939c4	                            cmp r12, rax	      3012	dwarf2.c	FUNCTION_44	FOR_1	IF_4
0x4000ae1	            0x7262	                            jb 0x4000b45	      3012	dwarf2.c	FUNCTION_44	FOR_1	IF_4
0x4000ae3	          0x4c89e2	                            mov rdx, r12	      3015	dwarf2.c	FUNCTION_44	FOR_1	CALL_2
0x4000ae6	          0x4889de	                            mov rsi, rbx	      3015	dwarf2.c	FUNCTION_44	FOR_1	CALL_2
0x4000ae9	          0x4889ef	                            mov rdi, rbp	      3015	dwarf2.c	FUNCTION_44	FOR_1	CALL_2
0x4000aec	      0xe86cfeffff	                   call sym.read_address	      3015	dwarf2.c	FUNCTION_44	FOR_1	CALL_2
0x4000af1	          0x4989c7	                            mov r15, rax	      3015	dwarf2.c	FUNCTION_44	FOR_1	CALL_2
0x4000af4	     0xfb685ac0000	           movzx eax, byte [rbp + 0xac] 	      3016	dwarf2.c	FUNCTION_44	FOR_1
0x4000afb	          0x4801c3	                            add rbx, rax	      3016	dwarf2.c	FUNCTION_44	FOR_1
0x4000afe	          0x4c89e2	                            mov rdx, r12	      3017	dwarf2.c	FUNCTION_44	FOR_1	CALL_3
0x4000b01	          0x4889de	                            mov rsi, rbx	      3017	dwarf2.c	FUNCTION_44	FOR_1	CALL_3
0x4000b04	          0x4889ef	                            mov rdi, rbp	      3017	dwarf2.c	FUNCTION_44	FOR_1	CALL_3
0x4000b07	      0xe851feffff	                   call sym.read_address	      3017	dwarf2.c	FUNCTION_44	FOR_1	CALL_3
0x4000b0c	     0xfb695ac0000	           movzx edx, byte [rbp + 0xac] 	      3018	dwarf2.c	FUNCTION_44	FOR_1
0x4000b13	          0x4801d3	                            add rbx, rdx	      3018	dwarf2.c	FUNCTION_44	FOR_1
0x4000b16	          0x4c89f9	                            mov rcx, r15	      3020	dwarf2.c	FUNCTION_44	FOR_1	IF_5
0x4000b19	          0x4809c1	                             or rcx, rax	      3020	dwarf2.c	FUNCTION_44	FOR_1	IF_5
0x4000b1c	            0x742e	                            je 0x4000b4c	      3020	dwarf2.c	FUNCTION_44	FOR_1	IF_5
0x4000b1e	        0x4983ffff	             cmp r15, 0xffffffffffffffff	      3022	dwarf2.c	FUNCTION_44	FOR_1	IF_6
0x4000b22	            0x7506	                           jne 0x4000b2a	      3022	dwarf2.c	FUNCTION_44	FOR_1	IF_6
0x4000b24	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      3022	dwarf2.c	FUNCTION_44	FOR_1	IF_6
0x4000b28	            0x75a3	                           jne 0x4000acd	      3022	dwarf2.c	FUNCTION_44	FOR_1	IF_6
0x4000b2a	      0x498d4c0500	                    lea rcx, [r13 + rax]	      3026	dwarf2.c	FUNCTION_44	FOR_1	ELSE_1	IF_7	CALL_4
0x4000b2f	      0x4b8d543d00	                    lea rdx, [r13 + r15]	      3026	dwarf2.c	FUNCTION_44	FOR_1	ELSE_1	IF_7	CALL_4
0x4000b34	          0x4c89f6	                            mov rsi, r14	      3026	dwarf2.c	FUNCTION_44	FOR_1	ELSE_1	IF_7	CALL_4
0x4000b37	          0x4889ef	                            mov rdi, rbp	      3026	dwarf2.c	FUNCTION_44	FOR_1	ELSE_1	IF_7	CALL_4
0x4000b3a	      0xe873fcffff	                     call sym.arange_add	      3026	dwarf2.c	FUNCTION_44	FOR_1	ELSE_1	IF_7	CALL_4
0x4000b3f	            0x85c0	                           test eax, eax	      3026	dwarf2.c	FUNCTION_44	FOR_1	ELSE_1	IF_7	CALL_4
0x4000b41	            0x758d	                           jne 0x4000ad0	      3026	dwarf2.c	FUNCTION_44	FOR_1	ELSE_1	IF_7	CALL_4
0x4000b43	            0xeb0c	                           jmp 0x4000b51	      3026	dwarf2.c	FUNCTION_44	FOR_1	ELSE_1	IF_7	CALL_4
0x4000b45	      0xb800000000	                              mov eax, 0	      3013	dwarf2.c	FUNCTION_44	FOR_1	IF_4
0x4000b4a	            0xeb05	                           jmp 0x4000b51	      3013	dwarf2.c	FUNCTION_44	FOR_1	IF_4
0x4000b4c	      0xb801000000	                              mov eax, 1	      3031	dwarf2.c	FUNCTION_44
0x4000b51	        0x4883c408	                              add rsp, 8	      3032	dwarf2.c	FUNCTION_44
0x4000b55	              0x5b	                                 pop rbx	      3032	dwarf2.c	FUNCTION_44
0x4000b56	              0x5d	                                 pop rbp	      3032	dwarf2.c	FUNCTION_44
0x4000b57	            0x415c	                                 pop r12	      3032	dwarf2.c	FUNCTION_44
0x4000b59	            0x415d	                                 pop r13	      3032	dwarf2.c	FUNCTION_44
0x4000b5b	            0x415e	                                 pop r14	      3032	dwarf2.c	FUNCTION_44
0x4000b5d	            0x415f	                                 pop r15	      3032	dwarf2.c	FUNCTION_44
0x4000b5f	              0xc3	                                     ret	      3032	dwarf2.c	FUNCTION_44
read_4_bytes	SWITCH,0:FOR,0:WHILE,0:IF,1:functions,0:ELSE,0:DO,0:CALL,1	10
0x4000062	        0x488d4e04	                      lea rcx, [rsi + 4]	       612	dwarf2.c	FUNCTION_9	IF_1
0x4000066	      0xb800000000	                              mov eax, 0	       613	dwarf2.c	FUNCTION_9	IF_1
0x400006b	          0x4839ca	                            cmp rdx, rcx	       612	dwarf2.c	FUNCTION_9	IF_1
0x400006e	            0x7212	                            jb 0x4000082	       612	dwarf2.c	FUNCTION_9	IF_1
0x4000070	        0x4883ec08	                              sub rsp, 8	       611	dwarf2.c	FUNCTION_9
0x4000074	        0x488b4708	                mov rax, qword [rdi + 8]	       614	dwarf2.c	FUNCTION_9	CALL_1
0x4000078	          0x4889f7	                            mov rdi, rsi	       614	dwarf2.c	FUNCTION_9	CALL_1
0x400007b	          0xff5038	                 call qword [rax + 0x38]	       614	dwarf2.c	FUNCTION_9	CALL_1
0x400007e	        0x4883c408	                              add rsp, 8	       615	dwarf2.c	FUNCTION_9
0x4000082	            0xf3c3	                                     ret	       615	dwarf2.c	FUNCTION_9
comp_unit_find_nearest_line	SWITCH,0:FOR,0:WHILE,0:IF,6:functions,0:ELSE,0:DO,0:CALL,4	324
0x4003e85	      0xb800000000	                              mov eax, 0	      3597	dwarf2.c	FUNCTION_48	IF_1
0x4003e8a	        0x837f4400	               cmp dword [rdi + 0x44], 0	      3596	dwarf2.c	FUNCTION_48	IF_1
0x4003e8e	     0xf857c040000	                           jne 0x4004310	      3596	dwarf2.c	FUNCTION_48	IF_1
0x4003e94	            0x4157	                                push r15	      3593	dwarf2.c	FUNCTION_48
0x4003e96	            0x4156	                                push r14	      3593	dwarf2.c	FUNCTION_48
0x4003e98	            0x4155	                                push r13	      3593	dwarf2.c	FUNCTION_48
0x4003e9a	            0x4154	                                push r12	      3593	dwarf2.c	FUNCTION_48
0x4003e9c	              0x55	                                push rbp	      3593	dwarf2.c	FUNCTION_48
0x4003e9d	              0x53	                                push rbx	      3593	dwarf2.c	FUNCTION_48
0x4003e9e	        0x4883ec28	                           sub rsp, 0x28	      3593	dwarf2.c	FUNCTION_48
0x4003ea2	      0x4c894c2408	                 mov qword [rsp + 8], r9	      3593	dwarf2.c	FUNCTION_48
0x4003ea7	        0x4c890424	                     mov qword [rsp], r8	      3593	dwarf2.c	FUNCTION_48
0x4003eab	          0x4989cc	                            mov r12, rcx	      3593	dwarf2.c	FUNCTION_48
0x4003eae	          0x4989d5	                            mov r13, rdx	      3593	dwarf2.c	FUNCTION_48
0x4003eb1	          0x4889f3	                            mov rbx, rsi	      3593	dwarf2.c	FUNCTION_48
0x4003eb4	          0x4889fd	                            mov rbp, rdi	      3593	dwarf2.c	FUNCTION_48
0x4003eb7	      0x48837f7800	               cmp qword [rdi + 0x78], 0	      3599	dwarf2.c	FUNCTION_48	IF_2
0x4003ebc	            0x7558	                           jne 0x4003f16	      3599	dwarf2.c	FUNCTION_48	IF_2
0x4003ebe	        0x837f5000	               cmp dword [rdi + 0x50], 0	      3601	dwarf2.c	FUNCTION_48	IF_2	IF_3
0x4003ec2	            0x750c	                           jne 0x4003ed0	      3601	dwarf2.c	FUNCTION_48	IF_2	IF_3
0x4003ec4	    0xc74744010000	               mov dword [rdi + 0x44], 1	      3603	dwarf2.c	FUNCTION_48	IF_2	IF_3
0x4003ecb	      0xe932040000	                           jmp 0x4004302	      3604	dwarf2.c	FUNCTION_48	IF_2	IF_3
0x4003ed0	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	      3607	dwarf2.c	FUNCTION_48	IF_2	CALL_1
0x4003ed5	      0xe898dfffff	               call sym.decode_line_info	      3607	dwarf2.c	FUNCTION_48	IF_2	CALL_1
0x4003eda	        0x48894578	            mov qword [rbp + 0x78], rax 	      3607	dwarf2.c	FUNCTION_48	IF_2	CALL_1
0x4003ede	          0x4885c0	                           test rax, rax	      3609	dwarf2.c	FUNCTION_48	IF_2	IF_4
0x4003ee1	            0x750c	                           jne 0x4003eef	      3609	dwarf2.c	FUNCTION_48	IF_2	IF_4
0x4003ee3	    0xc74544010000	               mov dword [rbp + 0x44], 1	      3611	dwarf2.c	FUNCTION_48	IF_2	IF_4
0x4003eea	      0xe913040000	                           jmp 0x4004302	      3612	dwarf2.c	FUNCTION_48	IF_2	IF_4
0x4003eef	        0x488b4570	            mov rax, qword [rbp + 0x70] 	      3615	dwarf2.c	FUNCTION_48	IF_2	IF_5
0x4003ef3	        0x48394568	            cmp qword [rbp + 0x68], rax 	      3615	dwarf2.c	FUNCTION_48	IF_2	IF_5
0x4003ef7	            0x731d	                           jae 0x4003f16	      3615	dwarf2.c	FUNCTION_48	IF_2	IF_5
0x4003ef9	          0x4889ef	                            mov rdi, rbp	      3616	dwarf2.c	FUNCTION_48	IF_2	IF_5	CALL_2
0x4003efc	      0xe814f4ffff	          call sym.scan_unit_for_symbols	      3616	dwarf2.c	FUNCTION_48	IF_2	IF_5	CALL_2
0x4003f01	            0x85c0	                           test eax, eax	      3616	dwarf2.c	FUNCTION_48	IF_2	IF_5	CALL_2
0x4003f03	            0x7511	                           jne 0x4003f16	      3616	dwarf2.c	FUNCTION_48	IF_2	IF_5	CALL_2
0x4003f05	    0xc74544010000	               mov dword [rbp + 0x44], 1	      3618	dwarf2.c	FUNCTION_48	IF_2	IF_5
0x4003f0c	      0xb800000000	                              mov eax, 0	      3619	dwarf2.c	FUNCTION_48	IF_2	IF_5
0x4003f11	      0xe9ec030000	                           jmp 0x4004302	      3619	dwarf2.c	FUNCTION_48	IF_2	IF_5
0x4003f16	    0x49c704240000	                      mov qword [r12], 0	      3623	dwarf2.c	FUNCTION_48
0x4003f1e	    0x4c8bb5900000	            mov r14, qword [rbp + 0x90] 	      2639	dwarf2.c	ELSE_1	FUNCTION_40
0x4003f25	          0x4585f6	                         test r14d, r14d	      2647	dwarf2.c	ELSE_1	FUNCTION_40	IF_1
0x4003f28	     0xf8400020000	                            je 0x400412e	      2647	dwarf2.c	ELSE_1	FUNCTION_40	IF_1
0x4003f2e	    0x4883bd880000	               cmp qword [rbp + 0x88], 0	      2574	dwarf2.c	FUNCTION_39	IF_1
0x4003f36	     0xf8590030000	                           jne 0x40042cc	      2574	dwarf2.c	FUNCTION_39	IF_1
0x4003f3c	          0x4489f0	                           mov eax, r14d	      2574	dwarf2.c	FUNCTION_39	IF_1
0x4003f3f	      0x4889442410	             mov qword [rsp + 0x10], rax	      2579	dwarf2.c	FUNCTION_39	CALL_1
0x4003f44	        0x488d0440	                  lea rax, [rax + rax*2]	      2579	dwarf2.c	FUNCTION_39	CALL_1
0x4003f48	    0x488d3cc50000	                        lea rdi, [rax*8]	      2579	dwarf2.c	FUNCTION_39	CALL_1
0x4003f50	      0x48897c2418	             mov qword [rsp + 0x18], rdi	      2578	dwarf2.c	FUNCTION_39
0x4003f55	      0xe800000000	                          call 0x4003f5a	      2578	dwarf2.c	FUNCTION_39
0x4003f5a	          0x4989c7	                            mov r15, rax	      2578	dwarf2.c	FUNCTION_39
0x4003f5d	          0x4885c0	                           test rax, rax	      2580	dwarf2.c	FUNCTION_39	IF_2
0x4003f60	     0xf84c8010000	                            je 0x400412e	      2580	dwarf2.c	FUNCTION_39	IF_2
0x4003f66	    0x488bbd800000	            mov rdi, qword [rbp + 0x80] 	      2585	dwarf2.c	FUNCTION_39	FOR_1
0x4003f6d	          0x4885ff	                           test rdi, rdi	      2585	dwarf2.c	FUNCTION_39	FOR_1
0x4003f70	            0x745e	                            je 0x4003fd0	      2585	dwarf2.c	FUNCTION_39	FOR_1
0x4003f72	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      2585	dwarf2.c	FUNCTION_39	FOR_1
0x4003f77	        0x4c8d0408	                     lea r8, [rax + rcx]	      2585	dwarf2.c	FUNCTION_39	FOR_1
0x4003f7b	      0x4c8b542410	            mov r10, qword [rsp + 0x10] 	      2585	dwarf2.c	FUNCTION_39	FOR_1
0x4003f80	        0x4983ea01	                              sub r10, 1	      2587	dwarf2.c	FUNCTION_39	FOR_1
0x4003f84	          0x4d89c1	                              mov r9, r8	      2587	dwarf2.c	FUNCTION_39	FOR_1
0x4003f87	        0x498978e8	              mov qword [r8 - 0x18], rdi	      2588	dwarf2.c	FUNCTION_39	FOR_1
0x4003f8b	        0x488b4f40	            mov rcx, qword [rdi + 0x40] 	      2591	dwarf2.c	FUNCTION_39	FOR_1
0x4003f8f	        0x488b5748	            mov rdx, qword [rdi + 0x48] 	      2592	dwarf2.c	FUNCTION_39	FOR_1
0x4003f93	        0x488b4738	            mov rax, qword [rdi + 0x38] 	      2594	dwarf2.c	FUNCTION_39	FOR_1	FOR_2
0x4003f97	          0x4885c0	                           test rax, rax	      2594	dwarf2.c	FUNCTION_39	FOR_1	FOR_2
0x4003f9a	            0x741e	                            je 0x4003fba	      2594	dwarf2.c	FUNCTION_39	FOR_1	FOR_2
0x4003f9c	        0x488b7008	                mov rsi, qword [rax + 8]	      2596	dwarf2.c	FUNCTION_39	FOR_1	FOR_2	IF_3
0x4003fa0	          0x4839f1	                            cmp rcx, rsi	      2596	dwarf2.c	FUNCTION_39	FOR_1	FOR_2	IF_3
0x4003fa3	        0x480f47ce	                          cmova rcx, rsi	      2596	dwarf2.c	FUNCTION_39	FOR_1	FOR_2	IF_3
0x4003fa7	        0x488b7010	            mov rsi, qword [rax + 0x10] 	      2598	dwarf2.c	FUNCTION_39	FOR_1	FOR_2	IF_4
0x4003fab	          0x4839f2	                            cmp rdx, rsi	      2598	dwarf2.c	FUNCTION_39	FOR_1	FOR_2	IF_4
0x4003fae	        0x480f42d6	                          cmovb rdx, rsi	      2598	dwarf2.c	FUNCTION_39	FOR_1	FOR_2	IF_4
0x4003fb2	          0x488b00	                    mov rax, qword [rax]	      2594	dwarf2.c	FUNCTION_39	FOR_1	FOR_2
0x4003fb5	          0x4885c0	                           test rax, rax	      2594	dwarf2.c	FUNCTION_39	FOR_1	FOR_2
0x4003fb8	            0x75e2	                           jne 0x4003f9c	      2594	dwarf2.c	FUNCTION_39	FOR_1	FOR_2
0x4003fba	        0x498949f0	              mov qword [r9 - 0x10], rcx	      2602	dwarf2.c	FUNCTION_39	FOR_1
0x4003fbe	        0x498951f8	                 mov qword [r9 - 8], rdx	      2603	dwarf2.c	FUNCTION_39	FOR_1
0x4003fc2	          0x488b3f	                    mov rdi, qword [rdi]	      2585	dwarf2.c	FUNCTION_39	FOR_1
0x4003fc5	        0x4983e818	                            sub r8, 0x18	      2585	dwarf2.c	FUNCTION_39	FOR_1
0x4003fc9	          0x4885ff	                           test rdi, rdi	      2585	dwarf2.c	FUNCTION_39	FOR_1
0x4003fcc	            0x75b2	                           jne 0x4003f80	      2585	dwarf2.c	FUNCTION_39	FOR_1
0x4003fce	            0xeb05	                           jmp 0x4003fd5	      2585	dwarf2.c	FUNCTION_39	FOR_1
0x4003fd0	      0x4c8b542410	            mov r10, qword [rsp + 0x10] 	      2584	dwarf2.c	FUNCTION_39
0x4003fd5	          0x4d85d2	                           test r10, r10	      2606	dwarf2.c	FUNCTION_39	CALL_2
0x4003fd8	            0x740f	                            je 0x4003fe9	      2606	dwarf2.c	FUNCTION_39	CALL_2
0x4003fda	      0xbe2e0a0000	                          mov esi, 0xa2e	      2606	dwarf2.c	FUNCTION_39	CALL_2
0x4003fdf	      0xbf00000000	                              mov edi, 0	      2606	dwarf2.c	FUNCTION_39	CALL_2
0x4003fe4	      0xe800000000	                          call 0x4003fe9	      2606	dwarf2.c	FUNCTION_39	CALL_2
0x4003fe9	      0xb900000000	                              mov ecx, 0	      2609	dwarf2.c	FUNCTION_39	CALL_3
0x4003fee	      0xba18000000	                           mov edx, 0x18	      2609	dwarf2.c	FUNCTION_39	CALL_3
0x4003ff3	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      2609	dwarf2.c	FUNCTION_39	CALL_3
0x4003ff8	          0x4c89ff	                            mov rdi, r15	      2609	dwarf2.c	FUNCTION_39	CALL_3
0x4003ffb	      0xe800000000	                          call 0x4004000	      2609	dwarf2.c	FUNCTION_39	CALL_3
0x4004000	        0x498b4f10	            mov rcx, qword [r15 + 0x10] 	      2615	dwarf2.c	FUNCTION_39
0x4004004	    0x48837c241001	               cmp qword [rsp + 0x10], 1	      2616	dwarf2.c	FUNCTION_39	FOR_3
0x400400a	            0x7627	                           jbe 0x4004033	      2616	dwarf2.c	FUNCTION_39	FOR_3
0x400400c	        0x498d4728	                   lea rax, [r15 + 0x28]	      2616	dwarf2.c	FUNCTION_39	FOR_3
0x4004010	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      2616	dwarf2.c	FUNCTION_39	FOR_3
0x4004015	      0x498d743f10	            lea rsi, [r15 + rdi + 0x10] 	      2616	dwarf2.c	FUNCTION_39	FOR_3
0x400401a	          0x488b10	                    mov rdx, qword [rax]	      2619	dwarf2.c	FUNCTION_39	FOR_3	IF_5
0x400401d	          0x4839ca	                            cmp rdx, rcx	      2619	dwarf2.c	FUNCTION_39	FOR_3	IF_5
0x4004020	            0x7705	                            ja 0x4004027	      2619	dwarf2.c	FUNCTION_39	FOR_3	IF_5
0x4004022	          0x488908	                    mov qword [rax], rcx	      2622	dwarf2.c	FUNCTION_39	FOR_3	ELSE_1
0x4004025	            0xeb03	                           jmp 0x400402a	      2622	dwarf2.c	FUNCTION_39	FOR_3	ELSE_1
0x4004027	          0x4889d1	                            mov rcx, rdx	      2620	dwarf2.c	FUNCTION_39	FOR_3	IF_5
0x400402a	        0x4883c018	                           add rax, 0x18	      2620	dwarf2.c	FUNCTION_39	FOR_3	IF_5
0x400402e	          0x4839c6	                            cmp rsi, rax	      2616	dwarf2.c	FUNCTION_39	FOR_3
0x4004031	            0x75e7	                           jne 0x400401a	      2616	dwarf2.c	FUNCTION_39	FOR_3
0x4004033	    0x4c89bd880000	            mov qword [rbp + 0x88], r15 	      2625	dwarf2.c	FUNCTION_39	ELSE_1
0x400403a	      0xe98d020000	                           jmp 0x40042cc	      2625	dwarf2.c	FUNCTION_39	ELSE_1
0x400403f	          0x4589f6	                          mov r14d, r14d	      2625	dwarf2.c	FUNCTION_39	ELSE_1
0x4004042	          0x4d85f6	                           test r14, r14	      2661	dwarf2.c	ELSE_1	FUNCTION_40	WHILE_1
0x4004045	     0xf84e3000000	                            je 0x400412e	      2661	dwarf2.c	ELSE_1	FUNCTION_40	WHILE_1
0x400404b	          0x4d89f3	                            mov r11, r14	      2661	dwarf2.c	ELSE_1	FUNCTION_40	WHILE_1
0x400404e	          0x4c89f2	                            mov rdx, r14	      2661	dwarf2.c	ELSE_1	FUNCTION_40	WHILE_1
0x4004051	      0xbe00000000	                              mov esi, 0	      2661	dwarf2.c	ELSE_1	FUNCTION_40	WHILE_1
0x4004056	        0x488d0416	                    lea rax, [rsi + rdx]	      2663	dwarf2.c	ELSE_1	FUNCTION_40	WHILE_1
0x400405a	          0x48d1e8	                              shr rax, 1	      2663	dwarf2.c	ELSE_1	FUNCTION_40	WHILE_1
0x400405d	        0x488d0c40	                  lea rcx, [rax + rax*2]	      2664	dwarf2.c	ELSE_1	FUNCTION_40	WHILE_1
0x4004061	        0x488d0ccf	                  lea rcx, [rdi + rcx*8]	      2664	dwarf2.c	ELSE_1	FUNCTION_40	WHILE_1
0x4004065	        0x483b5908	                cmp rbx, qword [rcx + 8]	      2665	dwarf2.c	ELSE_1	FUNCTION_40	WHILE_1	IF_4
0x4004069	            0x720c	                            jb 0x4004077	      2665	dwarf2.c	ELSE_1	FUNCTION_40	WHILE_1	IF_4
0x400406b	        0x483b5910	            cmp rbx, qword [rcx + 0x10] 	      2667	dwarf2.c	FUNCTION_40	WHILE_1	IF_5
0x400406f	            0x720b	                            jb 0x400407c	      2667	dwarf2.c	FUNCTION_40	WHILE_1	IF_5
0x4004071	        0x488d7001	                      lea rsi, [rax + 1]	      2668	dwarf2.c	FUNCTION_40	WHILE_1	IF_5	ELSE_1
0x4004075	            0xeb0b	                           jmp 0x4004082	      2668	dwarf2.c	FUNCTION_40	WHILE_1	IF_5	ELSE_1
0x4004077	          0x4889c2	                            mov rdx, rax	      2666	dwarf2.c	ELSE_1	FUNCTION_40	WHILE_1	IF_4
0x400407a	            0xeb06	                           jmp 0x4004082	      2666	dwarf2.c	ELSE_1	FUNCTION_40	WHILE_1	IF_4
0x400407c	          0x4989c3	                            mov r11, rax	      2670	dwarf2.c	FUNCTION_40	WHILE_1	ELSE_1	ELSE_2
0x400407f	          0x4889c2	                            mov rdx, rax	      2670	dwarf2.c	FUNCTION_40	WHILE_1	ELSE_1	ELSE_2
0x4004082	          0x4839f2	                            cmp rdx, rsi	      2661	dwarf2.c	ELSE_1	FUNCTION_40	WHILE_1
0x4004085	            0x77cf	                            ja 0x4004056	      2661	dwarf2.c	ELSE_1	FUNCTION_40	WHILE_1
0x4004087	          0x4d39de	                            cmp r14, r11	      2678	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2
0x400408a	     0xf869e000000	                           jbe 0x400412e	      2678	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2
0x4004090	        0x4b8d045b	                  lea rax, [r11 + r11*2]	      2680	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	IF_6
0x4004094	        0x4c8d3cc7	                  lea r15, [rdi + rax*8]	      2680	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	IF_6
0x4004098	        0x493b5f08	                cmp rbx, qword [r15 + 8]	      2680	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	IF_6
0x400409c	     0xf828c000000	                            jb 0x400412e	      2680	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	IF_6
0x40040a2	    0x41ba00000000	                             mov r10d, 0	      2680	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	IF_6
0x40040a8	    0x41b900000000	                              mov r9d, 0	      2680	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	IF_6
0x40040ae	      0xbe00000000	                              mov esi, 0	      2680	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	IF_6
0x40040b3	            0xeb0b	                           jmp 0x40040c0	      2680	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	IF_6
0x40040b5	        0x4983c218	                           add r10, 0x18	      2680	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	IF_6
0x40040b9	      0x4b3b5c1708	         cmp rbx, qword [r15 + r10 + 8] 	      2680	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	IF_6
0x40040be	            0x7253	                            jb 0x4004113	      2680	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	IF_6
0x40040c0	        0x4b8b3c17	              mov rdi, qword [r15 + r10]	      2682	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2
0x40040c4	          0x4889f8	                            mov rax, rdi	      2684	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1
0x40040c7	        0x4883c038	                           add rax, 0x38	      2684	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1
0x40040cb	            0x743d	                            je 0x400410a	      2684	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1
0x40040cd	        0x488b5008	                mov rdx, qword [rax + 8]	      2686	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1	IF_7
0x40040d1	          0x4839d3	                            cmp rbx, rdx	      2686	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1	IF_7
0x40040d4	            0x722c	                            jb 0x4004102	      2686	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1	IF_7
0x40040d6	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      2686	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1	IF_7
0x40040da	          0x4839cb	                            cmp rbx, rcx	      2686	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1	IF_7
0x40040dd	            0x7323	                           jae 0x4004102	      2686	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1	IF_7
0x40040df	          0x4885f6	                           test rsi, rsi	      2689	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1	IF_8
0x40040e2	            0x7415	                            je 0x40040f9	      2689	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1	IF_8
0x40040e4	          0x4989c8	                             mov r8, rcx	      2690	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1	IF_8
0x40040e7	          0x4929d0	                             sub r8, rdx	      2690	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1	IF_8
0x40040ea	          0x4d39c8	                              cmp r8, r9	      2690	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1	IF_8
0x40040ed	            0x720a	                            jb 0x40040f9	      2690	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1	IF_8
0x40040ef	          0x4839f7	                            cmp rdi, rsi	      2695	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1	IF_8
0x40040f2	            0x760e	                           jbe 0x4004102	      2695	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1	IF_8
0x40040f4	          0x4d39c8	                              cmp r8, r9	      2695	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1	IF_8
0x40040f7	            0x7509	                           jne 0x4004102	      2695	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1	IF_8
0x40040f9	          0x4829d1	                            sub rcx, rdx	      2698	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1	IF_8
0x40040fc	          0x4989c9	                             mov r9, rcx	      2698	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1	IF_8
0x40040ff	          0x4889fe	                            mov rsi, rdi	      2697	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1	IF_8
0x4004102	          0x488b00	                    mov rax, qword [rax]	      2684	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1
0x4004105	          0x4885c0	                           test rax, rax	      2684	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1
0x4004108	            0x75c3	                           jne 0x40040cd	      2684	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2	FOR_1
0x400410a	        0x4983c301	                              add r11, 1	      2702	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2
0x400410e	          0x4d39de	                            cmp r14, r11	      2678	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2
0x4004111	            0x77a2	                            ja 0x40040b5	      2678	dwarf2.c	FUNCTION_40	ELSE_1	ELSE_2	WHILE_2
0x4004113	          0x4885f6	                           test rsi, rsi	      2705	dwarf2.c	FUNCTION_40	ELSE_1	IF_9
0x4004116	            0x7416	                            je 0x400412e	      2705	dwarf2.c	FUNCTION_40	ELSE_1	IF_9
0x4004118	        0x49893424	                    mov qword [r12], rsi	      2708	dwarf2.c	FUNCTION_40	ELSE_1
0x400411c	        0x837e281d	           cmp dword [rsi + 0x28], 0x1d 	      3625	dwarf2.c	FUNCTION_48	IF_6
0x4004120	            0x750c	                           jne 0x400412e	      3625	dwarf2.c	FUNCTION_48	IF_6
0x4004122	      0x488b442460	            mov rax, qword [rsp + 0x60] 	      3626	dwarf2.c	FUNCTION_48	IF_6
0x4004127	    0x4889b0d00000	             mov qword [rax + 0xd0], rsi	      3626	dwarf2.c	FUNCTION_48	IF_6
0x400412e	        0x488b7d78	            mov rdi, qword [rbp + 0x78] 	      3628	dwarf2.c	FUNCTION_48	CALL_4
0x4004132	          0x8b4f10	            mov ecx, dword [rdi + 0x10] 	      2476	dwarf2.c	FUNCTION_36
0x4004135	            0x85c9	                           test ecx, ecx	      2477	dwarf2.c	FUNCTION_36	WHILE_1
0x4004137	     0xf8e80010000	                           jle 0x40042bd	      2477	dwarf2.c	FUNCTION_36	WHILE_1
0x400413d	        0x4c8b4730	              mov r8, qword [rdi + 0x30]	      2480	dwarf2.c	FUNCTION_36	WHILE_1
0x4004141	      0xbe00000000	                              mov esi, 0	      2480	dwarf2.c	FUNCTION_36	WHILE_1
0x4004146	          0x8d040e	                    lea eax, [rsi + rcx]	      2479	dwarf2.c	FUNCTION_36	WHILE_1
0x4004149	            0x89c2	                            mov edx, eax	      2479	dwarf2.c	FUNCTION_36	WHILE_1
0x400414b	          0xc1ea1f	                           shr edx, 0x1f	      2479	dwarf2.c	FUNCTION_36	WHILE_1
0x400414e	             0x1d0	                            add eax, edx	      2479	dwarf2.c	FUNCTION_36	WHILE_1
0x4004150	            0xd1f8	                              sar eax, 1	      2479	dwarf2.c	FUNCTION_36	WHILE_1
0x4004152	          0x4863d0	                         movsxd rdx, eax	      2480	dwarf2.c	FUNCTION_36	WHILE_1
0x4004155	        0x488d1492	                  lea rdx, [rdx + rdx*4]	      2480	dwarf2.c	FUNCTION_36	WHILE_1
0x4004159	        0x498d2cd0	                   lea rbp, [r8 + rdx*8]	      2480	dwarf2.c	FUNCTION_36	WHILE_1
0x400415d	        0x488b5500	                    mov rdx, qword [rbp]	      2481	dwarf2.c	FUNCTION_36	WHILE_1	IF_1
0x4004161	          0x4839d3	                            cmp rbx, rdx	      2481	dwarf2.c	FUNCTION_36	WHILE_1	IF_1
0x4004164	            0x7213	                            jb 0x4004179	      2481	dwarf2.c	FUNCTION_36	WHILE_1	IF_1
0x4004166	        0x488b7510	            mov rsi, qword [rbp + 0x10] 	      2483	dwarf2.c	FUNCTION_36	WHILE_1	ELSE_1	IF_2
0x400416a	        0x483b5e08	                cmp rbx, qword [rsi + 8]	      2483	dwarf2.c	FUNCTION_36	WHILE_1	ELSE_1	IF_2
0x400416e	     0xf8277010000	                            jb 0x40042eb	      2483	dwarf2.c	FUNCTION_36	WHILE_1	ELSE_1	IF_2
0x4004174	          0x8d7001	                      lea esi, [rax + 1]	      2484	dwarf2.c	FUNCTION_36	WHILE_1	ELSE_1	IF_2
0x4004177	            0xeb02	                           jmp 0x400417b	      2484	dwarf2.c	FUNCTION_36	WHILE_1	ELSE_1	IF_2
0x4004179	            0x89c1	                            mov ecx, eax	      2482	dwarf2.c	FUNCTION_36	WHILE_1	IF_1
0x400417b	            0x39f1	                            cmp ecx, esi	      2477	dwarf2.c	FUNCTION_36	WHILE_1
0x400417d	            0x7fc7	                            jg 0x4004146	      2477	dwarf2.c	FUNCTION_36	WHILE_1
0x400417f	          0x4885ed	                           test rbp, rbp	      2490	dwarf2.c	FUNCTION_36	IF_3
0x4004182	     0xf8435010000	                            je 0x40042bd	      2490	dwarf2.c	FUNCTION_36	IF_3
0x4004188	          0x4839d3	                            cmp rbx, rdx	      2490	dwarf2.c	FUNCTION_36	IF_3
0x400418b	     0xf822c010000	                            jb 0x40042bd	      2490	dwarf2.c	FUNCTION_36	IF_3
0x4004191	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      2490	dwarf2.c	FUNCTION_36	IF_3
0x4004195	        0x483b5808	                cmp rbx, qword [rax + 8]	      2490	dwarf2.c	FUNCTION_36	IF_3
0x4004199	     0xf831e010000	                           jae 0x40042bd	      2490	dwarf2.c	FUNCTION_36	IF_3
0x400419f	      0x48837d1800	               cmp qword [rbp + 0x18], 0	      1719	dwarf2.c	FUNCTION_29	IF_1
0x40041a4	            0x7573	                           jne 0x4004219	      1719	dwarf2.c	FUNCTION_29	IF_1
0x40041a6	          0x4885c0	                           test rax, rax	      1727	dwarf2.c	FUNCTION_29	FOR_1
0x40041a9	            0x746e	                            je 0x4004219	      1727	dwarf2.c	FUNCTION_29	FOR_1
0x40041ab	    0x41bc00000000	                             mov r12d, 0	      1727	dwarf2.c	FUNCTION_29	FOR_1
0x40041b1	        0x4183c401	                             add r12d, 1	      1728	dwarf2.c	FUNCTION_29	FOR_1
0x40041b5	          0x488b00	                    mov rax, qword [rax]	      1727	dwarf2.c	FUNCTION_29	FOR_1
0x40041b8	          0x4885c0	                           test rax, rax	      1727	dwarf2.c	FUNCTION_29	FOR_1
0x40041bb	            0x75f4	                           jne 0x40041b1	      1727	dwarf2.c	FUNCTION_29	FOR_1
0x40041bd	          0x4585e4	                         test r12d, r12d	      1730	dwarf2.c	FUNCTION_29	IF_2
0x40041c0	            0x7457	                            je 0x4004219	      1730	dwarf2.c	FUNCTION_29	IF_2
0x40041c2	          0x4589e7	                          mov r15d, r12d	      1734	dwarf2.c	FUNCTION_29
0x40041c5	    0x4a8d34fd0000	                        lea rsi, [r15*8]	      1735	dwarf2.c	FUNCTION_29	CALL_1
0x40041cd	          0x488b3f	                    mov rdi, qword [rdi]	      1735	dwarf2.c	FUNCTION_29	CALL_1
0x40041d0	      0xe800000000	                          call 0x40041d5	      1735	dwarf2.c	FUNCTION_29	CALL_1
0x40041d5	          0x4989c6	                            mov r14, rax	      1735	dwarf2.c	FUNCTION_29	CALL_1
0x40041d8	          0x4885c0	                           test rax, rax	      1736	dwarf2.c	FUNCTION_29	IF_3
0x40041db	     0xf84dc000000	                            je 0x40042bd	      1736	dwarf2.c	FUNCTION_29	IF_3
0x40041e1	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      1741	dwarf2.c	FUNCTION_29	FOR_2
0x40041e5	          0x4885c0	                           test rax, rax	      1741	dwarf2.c	FUNCTION_29	FOR_2
0x40041e8	            0x7418	                            je 0x4004202	      1741	dwarf2.c	FUNCTION_29	FOR_2
0x40041ea	        0x4183ec01	                             sub r12d, 1	      1742	dwarf2.c	FUNCTION_29	FOR_2
0x40041ee	          0x4489e2	                           mov edx, r12d	      1742	dwarf2.c	FUNCTION_29	FOR_2
0x40041f1	        0x498904d6	            mov qword [r14 + rdx*8], rax	      1742	dwarf2.c	FUNCTION_29	FOR_2
0x40041f5	          0x488b00	                    mov rax, qword [rax]	      1741	dwarf2.c	FUNCTION_29	FOR_2
0x40041f8	          0x4885c0	                           test rax, rax	      1741	dwarf2.c	FUNCTION_29	FOR_2
0x40041fb	            0x75ed	                           jne 0x40041ea	      1741	dwarf2.c	FUNCTION_29	FOR_2
0x40041fd	          0x4585e4	                         test r12d, r12d	      1744	dwarf2.c	FUNCTION_29	CALL_2
0x4004200	            0x740f	                            je 0x4004211	      1744	dwarf2.c	FUNCTION_29	CALL_2
0x4004202	      0xbed0060000	                          mov esi, 0x6d0	      1744	dwarf2.c	FUNCTION_29	CALL_2
0x4004207	      0xbf00000000	                              mov edi, 0	      1744	dwarf2.c	FUNCTION_29	CALL_2
0x400420c	      0xe800000000	                          call 0x4004211	      1744	dwarf2.c	FUNCTION_29	CALL_2
0x4004211	        0x4c897d20	            mov qword [rbp + 0x20], r15 	      1746	dwarf2.c	FUNCTION_29
0x4004215	        0x4c897518	            mov qword [rbp + 0x18], r14 	      1747	dwarf2.c	FUNCTION_29
0x4004219	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      2498	dwarf2.c	FUNCTION_36
0x400421d	            0x89c1	                            mov ecx, eax	      2498	dwarf2.c	FUNCTION_36
0x400421f	            0x85c0	                           test eax, eax	      2500	dwarf2.c	FUNCTION_36	WHILE_2
0x4004221	     0xf8e96000000	                           jle 0x40042bd	      2500	dwarf2.c	FUNCTION_36	WHILE_2
0x4004227	        0x4c8b4d18	              mov r9, qword [rbp + 0x18]	      2503	dwarf2.c	FUNCTION_36	WHILE_2
0x400422b	      0xbe00000000	                              mov esi, 0	      2503	dwarf2.c	FUNCTION_36	WHILE_2
0x4004230	          0x8d040e	                    lea eax, [rsi + rcx]	      2502	dwarf2.c	FUNCTION_36	WHILE_2
0x4004233	            0x89c2	                            mov edx, eax	      2502	dwarf2.c	FUNCTION_36	WHILE_2
0x4004235	          0xc1ea1f	                           shr edx, 0x1f	      2502	dwarf2.c	FUNCTION_36	WHILE_2
0x4004238	             0x1d0	                            add eax, edx	      2502	dwarf2.c	FUNCTION_36	WHILE_2
0x400423a	            0xd1f8	                              sar eax, 1	      2502	dwarf2.c	FUNCTION_36	WHILE_2
0x400423c	          0x4863d0	                         movsxd rdx, eax	      2503	dwarf2.c	FUNCTION_36	WHILE_2
0x400423f	    0x4c8d14d50000	                        lea r10, [rdx*8]	      2503	dwarf2.c	FUNCTION_36	WHILE_2
0x4004247	        0x498b3cd1	             mov rdi, qword [r9 + rdx*8]	      2503	dwarf2.c	FUNCTION_36	WHILE_2
0x400424b	        0x4c8b4708	                 mov r8, qword [rdi + 8]	      2504	dwarf2.c	FUNCTION_36	WHILE_2	IF_5
0x400424f	          0x4c39c3	                             cmp rbx, r8	      2504	dwarf2.c	FUNCTION_36	WHILE_2	IF_5
0x4004252	            0x7214	                            jb 0x4004268	      2504	dwarf2.c	FUNCTION_36	WHILE_2	IF_5
0x4004254	      0x4b8b741108	          mov rsi, qword [r9 + r10 + 8] 	      2506	dwarf2.c	FUNCTION_36	WHILE_2	ELSE_3	IF_6
0x4004259	        0x483b5e08	                cmp rbx, qword [rsi + 8]	      2506	dwarf2.c	FUNCTION_36	WHILE_2	ELSE_3	IF_6
0x400425d	     0xf828f000000	                            jb 0x40042f2	      2506	dwarf2.c	FUNCTION_36	WHILE_2	ELSE_3	IF_6
0x4004263	          0x8d7001	                      lea esi, [rax + 1]	      2507	dwarf2.c	FUNCTION_36	WHILE_2	ELSE_3	IF_6
0x4004266	            0xeb02	                           jmp 0x400426a	      2507	dwarf2.c	FUNCTION_36	WHILE_2	ELSE_3	IF_6
0x4004268	            0x89c1	                            mov ecx, eax	      2502	dwarf2.c	FUNCTION_36	WHILE_2
0x400426a	            0x39f1	                            cmp ecx, esi	      2500	dwarf2.c	FUNCTION_36	WHILE_2
0x400426c	            0x7fc2	                            jg 0x4004230	      2500	dwarf2.c	FUNCTION_36	WHILE_2
0x400426e	          0x4885ff	                           test rdi, rdi	      2513	dwarf2.c	FUNCTION_36	ELSE_4	IF_7
0x4004271	            0x744a	                            je 0x40042bd	      2513	dwarf2.c	FUNCTION_36	ELSE_4	IF_7
0x4004273	          0x4c39c3	                             cmp rbx, r8	      2514	dwarf2.c	FUNCTION_36	ELSE_4	IF_7
0x4004276	            0x7245	                            jb 0x40042bd	      2514	dwarf2.c	FUNCTION_36	ELSE_4	IF_7
0x4004278	      0x498b44d108	        mov rax, qword [r9 + rdx*8 + 8] 	      2515	dwarf2.c	FUNCTION_36	ELSE_4	IF_7
0x400427d	        0x483b5808	                cmp rbx, qword [rax + 8]	      2515	dwarf2.c	FUNCTION_36	ELSE_4	IF_7
0x4004281	            0x733a	                           jae 0x40042bd	      2515	dwarf2.c	FUNCTION_36	ELSE_4	IF_7
0x4004283	        0x807f2500	                cmp byte [rdi + 0x25], 0	      2516	dwarf2.c	FUNCTION_36	ELSE_4	IF_7
0x4004287	            0x7534	                           jne 0x40042bd	      2516	dwarf2.c	FUNCTION_36	ELSE_4	IF_7
0x4004289	        0x483b7d10	            cmp rdi, qword [rbp + 0x10] 	      2516	dwarf2.c	FUNCTION_36	ELSE_4	IF_7
0x400428d	            0x742e	                            je 0x40042bd	      2516	dwarf2.c	FUNCTION_36	ELSE_4	IF_7
0x400428f	        0x488b4710	            mov rax, qword [rdi + 0x10] 	      2518	dwarf2.c	FUNCTION_36	ELSE_4	IF_7
0x4004293	        0x49894500	                    mov qword [r13], rax	      2518	dwarf2.c	FUNCTION_36	ELSE_4	IF_7
0x4004297	          0x8b4718	            mov eax, dword [rdi + 0x18] 	      2519	dwarf2.c	FUNCTION_36	ELSE_4	IF_7
0x400429a	        0x488b1c24	                    mov rbx, qword [rsp]	      2519	dwarf2.c	FUNCTION_36	ELSE_4	IF_7
0x400429e	            0x8903	                    mov dword [rbx], eax	      2519	dwarf2.c	FUNCTION_36	ELSE_4	IF_7
0x40042a0	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      2520	dwarf2.c	FUNCTION_36	ELSE_4	IF_7	IF_8
0x40042a5	          0x4885db	                           test rbx, rbx	      2520	dwarf2.c	FUNCTION_36	ELSE_4	IF_7	IF_8
0x40042a8	            0x7405	                            je 0x40042af	      2520	dwarf2.c	FUNCTION_36	ELSE_4	IF_7	IF_8
0x40042aa	          0x8b4720	            mov eax, dword [rdi + 0x20] 	      2521	dwarf2.c	FUNCTION_36	ELSE_4	IF_7	IF_8
0x40042ad	            0x8903	                    mov dword [rbx], eax	      2521	dwarf2.c	FUNCTION_36	ELSE_4	IF_7	IF_8
0x40042af	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      2522	dwarf2.c	FUNCTION_36	ELSE_4	IF_7
0x40042b3	        0x488b4008	                mov rax, qword [rax + 8]	      2522	dwarf2.c	FUNCTION_36	ELSE_4	IF_7
0x40042b7	        0x482b4500	                    sub rax, qword [rbp]	      2522	dwarf2.c	FUNCTION_36	ELSE_4	IF_7
0x40042bb	            0xeb45	                           jmp 0x4004302	      2522	dwarf2.c	FUNCTION_36	ELSE_4	IF_7
0x40042bd	    0x49c745000000	                      mov qword [r13], 0	      2526	dwarf2.c	FUNCTION_36
0x40042c5	      0xb800000000	                              mov eax, 0	      2527	dwarf2.c	FUNCTION_36
0x40042ca	            0xeb36	                           jmp 0x4004302	      2527	dwarf2.c	FUNCTION_36
0x40042cc	    0x488bbd880000	            mov rdi, qword [rbp + 0x88] 	      2653	dwarf2.c	ELSE_1	FUNCTION_40	IF_3
0x40042d3	        0x418d46ff	                      lea eax, [r14 - 1]	      2653	dwarf2.c	ELSE_1	FUNCTION_40	IF_3
0x40042d7	        0x488d0440	                  lea rax, [rax + rax*2]	      2653	dwarf2.c	ELSE_1	FUNCTION_40	IF_3
0x40042db	      0x483b5cc710	    cmp rbx, qword [rdi + rax*8 + 0x10] 	      2653	dwarf2.c	ELSE_1	FUNCTION_40	IF_3
0x40042e0	     0xf8659fdffff	                           jbe 0x400403f	      2653	dwarf2.c	ELSE_1	FUNCTION_40	IF_3
0x40042e6	      0xe943feffff	                           jmp 0x400412e	      2653	dwarf2.c	ELSE_1	FUNCTION_40	IF_3
0x40042eb	          0x4885ed	                           test rbp, rbp	      2490	dwarf2.c	FUNCTION_36	IF_3
0x40042ee	            0x7509	                           jne 0x40042f9	      2490	dwarf2.c	FUNCTION_36	IF_3
0x40042f0	            0xebcb	                           jmp 0x40042bd	      2490	dwarf2.c	FUNCTION_36	IF_3
0x40042f2	          0x4885ff	                           test rdi, rdi	      2513	dwarf2.c	FUNCTION_36	ELSE_4	IF_7
0x40042f5	            0x7581	                           jne 0x4004278	      2513	dwarf2.c	FUNCTION_36	ELSE_4	IF_7
0x40042f7	            0xebc4	                           jmp 0x40042bd	      2513	dwarf2.c	FUNCTION_36	ELSE_4	IF_7
0x40042f9	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      2490	dwarf2.c	FUNCTION_36	IF_3
0x40042fd	      0xe99dfeffff	                           jmp 0x400419f	      2490	dwarf2.c	FUNCTION_36	IF_3
0x4004302	        0x4883c428	                           add rsp, 0x28	      3632	dwarf2.c	FUNCTION_48
0x4004306	              0x5b	                                 pop rbx	      3632	dwarf2.c	FUNCTION_48
0x4004307	              0x5d	                                 pop rbp	      3632	dwarf2.c	FUNCTION_48
0x4004308	            0x415c	                                 pop r12	      3632	dwarf2.c	FUNCTION_48
0x400430a	            0x415d	                                 pop r13	      3632	dwarf2.c	FUNCTION_48
0x400430c	            0x415e	                                 pop r14	      3632	dwarf2.c	FUNCTION_48
0x400430e	            0x415f	                                 pop r15	      3632	dwarf2.c	FUNCTION_48
0x4004310	            0xf3c3	                                     ret	      3632	dwarf2.c	FUNCTION_48
stash_maybe_update_info_hash_tables	SWITCH,0:FOR,0:WHILE,1:IF,3:functions,0:ELSE,1:DO,0:CALL,1	148
0x4003c48	    0x488b87080100	           mov rax, qword [rdi + 0x108] 	      4121	dwarf2.c	FUNCTION_60	IF_1
0x4003c4f	          0x483907	                    cmp qword [rdi], rax	      4121	dwarf2.c	FUNCTION_60	IF_1
0x4003c52	     0xf84f2010000	                            je 0x4003e4a	      4121	dwarf2.c	FUNCTION_60	IF_1
0x4003c58	            0x4156	                                push r14	      4117	dwarf2.c	FUNCTION_60
0x4003c5a	            0x4155	                                push r13	      4117	dwarf2.c	FUNCTION_60
0x4003c5c	            0x4154	                                push r12	      4117	dwarf2.c	FUNCTION_60
0x4003c5e	              0x55	                                push rbp	      4117	dwarf2.c	FUNCTION_60
0x4003c5f	              0x53	                                push rbx	      4117	dwarf2.c	FUNCTION_60
0x4003c60	          0x4885c0	                           test rax, rax	      4124	dwarf2.c	FUNCTION_60	IF_2
0x4003c63	            0x7406	                            je 0x4003c6b	      4124	dwarf2.c	FUNCTION_60	IF_2
0x4003c65	        0x488b6808	                mov rbp, qword [rax + 8]	      4125	dwarf2.c	FUNCTION_60	IF_2
0x4003c69	            0xeb04	                           jmp 0x4003c6f	      4125	dwarf2.c	FUNCTION_60	IF_2
0x4003c6b	        0x488b6f08	                mov rbp, qword [rdi + 8]	      4127	dwarf2.c	FUNCTION_60	ELSE_1
0x4003c6f	          0x4989fc	                            mov r12, rdi	      4127	dwarf2.c	FUNCTION_60	ELSE_1
0x4003c72	          0x4885ed	                           test rbp, rbp	      4129	dwarf2.c	FUNCTION_60	ELSE_1	WHILE_1
0x4003c75	     0xf84bc010000	                            je 0x4003e37	      4129	dwarf2.c	FUNCTION_60	ELSE_1	WHILE_1
0x4003c7b	    0x4d8bac240001	           mov r13, qword [r12 + 0x100] 	      4131	dwarf2.c	FUNCTION_60	ELSE_1	WHILE_1	IF_3	CALL_1
0x4003c83	    0x4d8bb424f800	            mov r14, qword [r12 + 0xf8] 	      4131	dwarf2.c	FUNCTION_60	ELSE_1	WHILE_1	IF_3	CALL_1
0x4003c8b	    0x4183bc241001	              cmp dword [r12 + 0x110], 2	      3745	dwarf2.c	FUNCTION_53	CALL_1
0x4003c94	            0x750f	                           jne 0x4003ca5	      3745	dwarf2.c	FUNCTION_53	CALL_1
0x4003c96	      0xbea10e0000	                          mov esi, 0xea1	      3745	dwarf2.c	FUNCTION_53	CALL_1
0x4003c9b	      0xbf00000000	                              mov edi, 0	      3745	dwarf2.c	FUNCTION_53	CALL_1
0x4003ca0	      0xe800000000	                          call 0x4003ca5	      3745	dwarf2.c	FUNCTION_53	CALL_1
0x4003ca5	          0x4c89e6	                            mov rsi, r12	      3747	dwarf2.c	FUNCTION_53	IF_1	CALL_2
0x4003ca8	          0x4889ef	                            mov rdi, rbp	      3747	dwarf2.c	FUNCTION_53	IF_1	CALL_2
0x4003cab	      0xe858fdffff	call sym.comp_unit_maybe_decode_line_info	      3747	dwarf2.c	FUNCTION_53	IF_1	CALL_2
0x4003cb0	            0x85c0	                           test eax, eax	      3747	dwarf2.c	FUNCTION_53	IF_1	CALL_2
0x4003cb2	     0xf845f010000	                            je 0x4003e17	      3747	dwarf2.c	FUNCTION_53	IF_1	CALL_2
0x4003cb8	    0x83bdb8000000	               cmp dword [rbp + 0xb8], 0	      3750	dwarf2.c	FUNCTION_53	CALL_3
0x4003cbf	            0x740f	                            je 0x4003cd0	      3750	dwarf2.c	FUNCTION_53	CALL_3
0x4003cc1	      0xbea60e0000	                          mov esi, 0xea6	      3750	dwarf2.c	FUNCTION_53	CALL_3
0x4003cc6	      0xbf00000000	                              mov edi, 0	      3750	dwarf2.c	FUNCTION_53	CALL_3
0x4003ccb	      0xe800000000	                          call 0x4003cd0	      3750	dwarf2.c	FUNCTION_53	CALL_3
0x4003cd0	    0x488b9d800000	            mov rbx, qword [rbp + 0x80] 	      3757	dwarf2.c	FUNCTION_53	CALL_4
0x4003cd7	          0x4885db	                           test rbx, rbx	      3707	dwarf2.c	FUNCTION_51	FOR_1
0x4003cda	            0x7478	                            je 0x4003d54	      3707	dwarf2.c	FUNCTION_51	FOR_1
0x4003cdc	      0xba00000000	                              mov edx, 0	      3707	dwarf2.c	FUNCTION_51	FOR_1
0x4003ce1	            0xeb03	                           jmp 0x4003ce6	      3707	dwarf2.c	FUNCTION_51	FOR_1
0x4003ce3	          0x4889c3	                            mov rbx, rax	      3707	dwarf2.c	FUNCTION_51	FOR_1
0x4003ce6	          0x488b03	                    mov rax, qword [rbx]	      3709	dwarf2.c	FUNCTION_51	FOR_1
0x4003ce9	          0x488913	                    mov qword [rbx], rdx	      3710	dwarf2.c	FUNCTION_51	FOR_1
0x4003cec	          0x4889da	                            mov rdx, rbx	      3710	dwarf2.c	FUNCTION_51	FOR_1
0x4003cef	          0x4885c0	                           test rax, rax	      3707	dwarf2.c	FUNCTION_51	FOR_1
0x4003cf2	            0x75ef	                           jne 0x4003ce3	      3707	dwarf2.c	FUNCTION_51	FOR_1
0x4003cf4	    0x48899d800000	            mov qword [rbp + 0x80], rbx 	      3757	dwarf2.c	FUNCTION_53	CALL_4
0x4003cfb	          0x4885db	                           test rbx, rbx	      3758	dwarf2.c	FUNCTION_53	FOR_1
0x4003cfe	     0xf844c010000	                            je 0x4003e50	      3758	dwarf2.c	FUNCTION_53	FOR_1
0x4003d04	      0xb801000000	                              mov eax, 1	      3758	dwarf2.c	FUNCTION_53	FOR_1
0x4003d09	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	      3763	dwarf2.c	FUNCTION_53	FOR_1	IF_2
0x4003d0d	          0x4885f6	                           test rsi, rsi	      3763	dwarf2.c	FUNCTION_53	FOR_1	IF_2
0x4003d10	            0x7410	                            je 0x4003d22	      3763	dwarf2.c	FUNCTION_53	FOR_1	IF_2
0x4003d12	      0xb900000000	                              mov ecx, 0	      3767	dwarf2.c	FUNCTION_53	FOR_1	IF_2	CALL_5
0x4003d17	          0x4889da	                            mov rdx, rbx	      3767	dwarf2.c	FUNCTION_53	FOR_1	IF_2	CALL_5
0x4003d1a	          0x4c89f7	                            mov rdi, r14	      3767	dwarf2.c	FUNCTION_53	FOR_1	IF_2	CALL_5
0x4003d1d	      0xe8d8d3ffff	         call sym.insert_info_hash_table	      3767	dwarf2.c	FUNCTION_53	FOR_1	IF_2	CALL_5
0x4003d22	          0x488b1b	                    mov rbx, qword [rbx]	      3760	dwarf2.c	FUNCTION_53	FOR_1
0x4003d25	          0x4885db	                           test rbx, rbx	      3758	dwarf2.c	FUNCTION_53	FOR_1
0x4003d28	            0x7404	                            je 0x4003d2e	      3758	dwarf2.c	FUNCTION_53	FOR_1
0x4003d2a	            0x85c0	                           test eax, eax	      3758	dwarf2.c	FUNCTION_53	FOR_1
0x4003d2c	            0x75db	                           jne 0x4003d09	      3758	dwarf2.c	FUNCTION_53	FOR_1
0x4003d2e	    0x488b95800000	            mov rdx, qword [rbp + 0x80] 	      3770	dwarf2.c	FUNCTION_53	CALL_6
0x4003d35	          0x4885d2	                           test rdx, rdx	      3707	dwarf2.c	FUNCTION_51	FOR_1
0x4003d38	            0x7424	                            je 0x4003d5e	      3707	dwarf2.c	FUNCTION_51	FOR_1
0x4003d3a	      0xbe00000000	                              mov esi, 0	      3707	dwarf2.c	FUNCTION_51	FOR_1
0x4003d3f	            0xeb03	                           jmp 0x4003d44	      3707	dwarf2.c	FUNCTION_51	FOR_1
0x4003d41	          0x4889ca	                            mov rdx, rcx	      3707	dwarf2.c	FUNCTION_51	FOR_1
0x4003d44	          0x488b0a	                    mov rcx, qword [rdx]	      3709	dwarf2.c	FUNCTION_51	FOR_1
0x4003d47	          0x488932	                    mov qword [rdx], rsi	      3710	dwarf2.c	FUNCTION_51	FOR_1
0x4003d4a	          0x4889d6	                            mov rsi, rdx	      3710	dwarf2.c	FUNCTION_51	FOR_1
0x4003d4d	          0x4885c9	                           test rcx, rcx	      3707	dwarf2.c	FUNCTION_51	FOR_1
0x4003d50	            0x75ef	                           jne 0x4003d41	      3707	dwarf2.c	FUNCTION_51	FOR_1
0x4003d52	            0xeb0a	                           jmp 0x4003d5e	      3707	dwarf2.c	FUNCTION_51	FOR_1
0x4003d54	      0xb801000000	                              mov eax, 1	      3743	dwarf2.c	FUNCTION_53
0x4003d59	      0xba00000000	                              mov edx, 0	      3707	dwarf2.c	FUNCTION_51	FOR_1
0x4003d5e	    0x488995800000	            mov qword [rbp + 0x80], rdx 	      3770	dwarf2.c	FUNCTION_53	CALL_6
0x4003d65	            0x85c0	                           test eax, eax	      3771	dwarf2.c	FUNCTION_53	IF_3
0x4003d67	     0xf84aa000000	                            je 0x4003e17	      3771	dwarf2.c	FUNCTION_53	IF_3
0x4003d6d	    0x488b9d980000	            mov rbx, qword [rbp + 0x98] 	      3775	dwarf2.c	FUNCTION_53	CALL_7
0x4003d74	          0x4885db	                           test rbx, rbx	      3722	dwarf2.c	FUNCTION_52	FOR_1
0x4003d77	     0xf8480000000	                            je 0x4003dfd	      3722	dwarf2.c	FUNCTION_52	FOR_1
0x4003d7d	      0xb900000000	                              mov ecx, 0	      3722	dwarf2.c	FUNCTION_52	FOR_1
0x4003d82	            0xeb03	                           jmp 0x4003d87	      3722	dwarf2.c	FUNCTION_52	FOR_1
0x4003d84	          0x4889d3	                            mov rbx, rdx	      3722	dwarf2.c	FUNCTION_52	FOR_1
0x4003d87	          0x488b13	                    mov rdx, qword [rbx]	      3724	dwarf2.c	FUNCTION_52	FOR_1
0x4003d8a	          0x48890b	                    mov qword [rbx], rcx	      3725	dwarf2.c	FUNCTION_52	FOR_1
0x4003d8d	          0x4889d9	                            mov rcx, rbx	      3725	dwarf2.c	FUNCTION_52	FOR_1
0x4003d90	          0x4885d2	                           test rdx, rdx	      3722	dwarf2.c	FUNCTION_52	FOR_1
0x4003d93	            0x75ef	                           jne 0x4003d84	      3722	dwarf2.c	FUNCTION_52	FOR_1
0x4003d95	    0x48899d980000	            mov qword [rbp + 0x98], rbx 	      3775	dwarf2.c	FUNCTION_53	CALL_7
0x4003d9c	          0x4885db	                           test rbx, rbx	      3776	dwarf2.c	FUNCTION_53	FOR_2
0x4003d9f	     0xf84c0000000	                            je 0x4003e65	      3776	dwarf2.c	FUNCTION_53	FOR_2
0x4003da5	        0xf6433001	               test byte [rbx + 0x30], 1	      3781	dwarf2.c	FUNCTION_53	FOR_2	IF_4
0x4003da9	            0x7520	                           jne 0x4003dcb	      3781	dwarf2.c	FUNCTION_53	FOR_2	IF_4
0x4003dab	      0x48837b0800	                  cmp qword [rbx + 8], 0	      3782	dwarf2.c	FUNCTION_53	FOR_2	IF_4
0x4003db0	            0x7419	                            je 0x4003dcb	      3782	dwarf2.c	FUNCTION_53	FOR_2	IF_4
0x4003db2	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	      3783	dwarf2.c	FUNCTION_53	FOR_2	IF_4
0x4003db6	          0x4885f6	                           test rsi, rsi	      3783	dwarf2.c	FUNCTION_53	FOR_2	IF_4
0x4003db9	            0x7410	                            je 0x4003dcb	      3783	dwarf2.c	FUNCTION_53	FOR_2	IF_4
0x4003dbb	      0xb900000000	                              mov ecx, 0	      3787	dwarf2.c	FUNCTION_53	FOR_2	IF_4	CALL_8
0x4003dc0	          0x4889da	                            mov rdx, rbx	      3787	dwarf2.c	FUNCTION_53	FOR_2	IF_4	CALL_8
0x4003dc3	          0x4c89ef	                            mov rdi, r13	      3787	dwarf2.c	FUNCTION_53	FOR_2	IF_4	CALL_8
0x4003dc6	      0xe82fd3ffff	         call sym.insert_info_hash_table	      3787	dwarf2.c	FUNCTION_53	FOR_2	IF_4	CALL_8
0x4003dcb	          0x488b1b	                    mov rbx, qword [rbx]	      3778	dwarf2.c	FUNCTION_53	FOR_2
0x4003dce	          0x4885db	                           test rbx, rbx	      3776	dwarf2.c	FUNCTION_53	FOR_2
0x4003dd1	            0x7404	                            je 0x4003dd7	      3776	dwarf2.c	FUNCTION_53	FOR_2
0x4003dd3	            0x85c0	                           test eax, eax	      3776	dwarf2.c	FUNCTION_53	FOR_2
0x4003dd5	            0x75ce	                           jne 0x4003da5	      3776	dwarf2.c	FUNCTION_53	FOR_2
0x4003dd7	    0x488b95980000	            mov rdx, qword [rbp + 0x98] 	      3791	dwarf2.c	FUNCTION_53	CALL_9
0x4003dde	          0x4885d2	                           test rdx, rdx	      3722	dwarf2.c	FUNCTION_52	FOR_1
0x4003de1	            0x741f	                            je 0x4003e02	      3722	dwarf2.c	FUNCTION_52	FOR_1
0x4003de3	      0xbe00000000	                              mov esi, 0	      3722	dwarf2.c	FUNCTION_52	FOR_1
0x4003de8	            0xeb03	                           jmp 0x4003ded	      3722	dwarf2.c	FUNCTION_52	FOR_1
0x4003dea	          0x4889ca	                            mov rdx, rcx	      3722	dwarf2.c	FUNCTION_52	FOR_1
0x4003ded	          0x488b0a	                    mov rcx, qword [rdx]	      3724	dwarf2.c	FUNCTION_52	FOR_1
0x4003df0	          0x488932	                    mov qword [rdx], rsi	      3725	dwarf2.c	FUNCTION_52	FOR_1
0x4003df3	          0x4889d6	                            mov rsi, rdx	      3725	dwarf2.c	FUNCTION_52	FOR_1
0x4003df6	          0x4885c9	                           test rcx, rcx	      3722	dwarf2.c	FUNCTION_52	FOR_1
0x4003df9	            0x75ef	                           jne 0x4003dea	      3722	dwarf2.c	FUNCTION_52	FOR_1
0x4003dfb	            0xeb05	                           jmp 0x4003e02	      3722	dwarf2.c	FUNCTION_52	FOR_1
0x4003dfd	      0xba00000000	                              mov edx, 0	      3722	dwarf2.c	FUNCTION_52	FOR_1
0x4003e02	    0x488995980000	            mov qword [rbp + 0x98], rdx 	      3791	dwarf2.c	FUNCTION_53	CALL_9
0x4003e09	    0xc785b8000000	               mov dword [rbp + 0xb8], 1	      3792	dwarf2.c	FUNCTION_53
0x4003e13	            0x85c0	                           test eax, eax	      4131	dwarf2.c	FUNCTION_60	ELSE_1	WHILE_1	IF_3	CALL_1
0x4003e15	            0x7513	                           jne 0x4003e2a	      4131	dwarf2.c	FUNCTION_60	ELSE_1	WHILE_1	IF_3	CALL_1
0x4003e17	    0x41c784241001	              mov dword [r12 + 0x110], 2	      4134	dwarf2.c	FUNCTION_60	ELSE_1	WHILE_1	IF_3
0x4003e23	      0xb800000000	                              mov eax, 0	      4135	dwarf2.c	FUNCTION_60	ELSE_1	WHILE_1	IF_3
0x4003e28	            0xeb52	                           jmp 0x4003e7c	      4135	dwarf2.c	FUNCTION_60	ELSE_1	WHILE_1	IF_3
0x4003e2a	        0x488b6d08	                mov rbp, qword [rbp + 8]	      4137	dwarf2.c	FUNCTION_60	ELSE_1	WHILE_1
0x4003e2e	          0x4885ed	                           test rbp, rbp	      4129	dwarf2.c	FUNCTION_60	ELSE_1	WHILE_1
0x4003e31	     0xf8544feffff	                           jne 0x4003c7b	      4129	dwarf2.c	FUNCTION_60	ELSE_1	WHILE_1
0x4003e37	        0x498b0424	                    mov rax, qword [r12]	      4140	dwarf2.c	FUNCTION_60
0x4003e3b	    0x498984240801	            mov qword [r12 + 0x108], rax	      4140	dwarf2.c	FUNCTION_60
0x4003e43	      0xb801000000	                              mov eax, 1	      4141	dwarf2.c	FUNCTION_60
0x4003e48	            0xeb32	                           jmp 0x4003e7c	      4141	dwarf2.c	FUNCTION_60
0x4003e4a	      0xb801000000	                              mov eax, 1	      4122	dwarf2.c	FUNCTION_60	IF_1
0x4003e4f	              0xc3	                                     ret	      4142	dwarf2.c	FUNCTION_60
0x4003e50	    0x48c785800000	               mov qword [rbp + 0x80], 0	      3770	dwarf2.c	FUNCTION_53	CALL_6
0x4003e5b	      0xb801000000	                              mov eax, 1	      3743	dwarf2.c	FUNCTION_53
0x4003e60	      0xe908ffffff	                           jmp 0x4003d6d	      3743	dwarf2.c	FUNCTION_53
0x4003e65	    0x48c785980000	               mov qword [rbp + 0x98], 0	      3791	dwarf2.c	FUNCTION_53	CALL_9
0x4003e70	    0xc785b8000000	               mov dword [rbp + 0xb8], 1	      3792	dwarf2.c	FUNCTION_53
0x4003e7a	            0xebae	                           jmp 0x4003e2a	      3792	dwarf2.c	FUNCTION_53
0x4003e7c	              0x5b	                                 pop rbx	      4142	dwarf2.c	FUNCTION_60
0x4003e7d	              0x5d	                                 pop rbp	      4142	dwarf2.c	FUNCTION_60
0x4003e7e	            0x415c	                                 pop r12	      4142	dwarf2.c	FUNCTION_60
0x4003e80	            0x415d	                                 pop r13	      4142	dwarf2.c	FUNCTION_60
0x4003e82	            0x415e	                                 pop r14	      4142	dwarf2.c	FUNCTION_60
0x4003e84	              0xc3	                                     ret	      4142	dwarf2.c	FUNCTION_60
insert_info_hash_table	SWITCH,0:FOR,0:WHILE,0:IF,2:functions,0:ELSE,0:DO,0:CALL,2	27
0x40010fa	            0x4154	                                push r12	       479	dwarf2.c	FUNCTION_3
0x40010fc	              0x55	                                push rbp	       479	dwarf2.c	FUNCTION_3
0x40010fd	              0x53	                                push rbx	       479	dwarf2.c	FUNCTION_3
0x40010fe	          0x4889fd	                            mov rbp, rdi	       479	dwarf2.c	FUNCTION_3
0x4001101	          0x4989d4	                            mov r12, rdx	       479	dwarf2.c	FUNCTION_3
0x4001104	      0xba01000000	                              mov edx, 1	       483	dwarf2.c	FUNCTION_3	CALL_1
0x4001109	      0xe800000000	                          call 0x400110e	       483	dwarf2.c	FUNCTION_3	CALL_1
0x400110e	          0x4889c3	                            mov rbx, rax	       483	dwarf2.c	FUNCTION_3	CALL_1
0x4001111	      0xb800000000	                              mov eax, 0	       486	dwarf2.c	FUNCTION_3	IF_1
0x4001116	          0x4885db	                           test rbx, rbx	       485	dwarf2.c	FUNCTION_3	IF_1
0x4001119	            0x742d	                            je 0x4001148	       485	dwarf2.c	FUNCTION_3	IF_1
0x400111b	      0xbe10000000	                           mov esi, 0x10	       488	dwarf2.c	FUNCTION_3	CALL_2
0x4001120	          0x4889ef	                            mov rdi, rbp	       488	dwarf2.c	FUNCTION_3	CALL_2
0x4001123	      0xe800000000	                          call 0x4001128	       488	dwarf2.c	FUNCTION_3	CALL_2
0x4001128	          0x4885c0	                           test rax, rax	       490	dwarf2.c	FUNCTION_3	IF_2
0x400112b	            0x7416	                            je 0x4001143	       490	dwarf2.c	FUNCTION_3	IF_2
0x400112d	        0x4c896008	                mov qword [rax + 8], r12	       493	dwarf2.c	FUNCTION_3
0x4001131	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	       494	dwarf2.c	FUNCTION_3
0x4001135	          0x488910	                    mov qword [rax], rdx	       494	dwarf2.c	FUNCTION_3
0x4001138	        0x48894318	             mov qword [rbx + 0x18], rax	       495	dwarf2.c	FUNCTION_3
0x400113c	      0xb801000000	                              mov eax, 1	       497	dwarf2.c	FUNCTION_3
0x4001141	            0xeb05	                           jmp 0x4001148	       497	dwarf2.c	FUNCTION_3
0x4001143	      0xb800000000	                              mov eax, 0	       491	dwarf2.c	FUNCTION_3	IF_2
0x4001148	              0x5b	                                 pop rbx	       498	dwarf2.c	FUNCTION_3
0x4001149	              0x5d	                                 pop rbp	       498	dwarf2.c	FUNCTION_3
0x400114a	            0x415c	                                 pop r12	       498	dwarf2.c	FUNCTION_3
0x400114c	              0xc3	                                     ret	       498	dwarf2.c	FUNCTION_3
compare_lookup_funcinfos	SWITCH,0:FOR,0:WHILE,0:IF,4:functions,0:ELSE,0:DO,0:CALL,0	17
0x4000196	        0x488b4f08	                mov rcx, qword [rdi + 8]	      2551	dwarf2.c	FUNCTION_38	IF_1
0x400019a	        0x488b5608	                mov rdx, qword [rsi + 8]	      2551	dwarf2.c	FUNCTION_38	IF_1
0x400019e	          0x4839d1	                            cmp rcx, rdx	      2551	dwarf2.c	FUNCTION_38	IF_1
0x40001a1	            0x721b	                            jb 0x40001be	      2551	dwarf2.c	FUNCTION_38	IF_1
0x40001a3	      0xb801000000	                              mov eax, 1	      2554	dwarf2.c	FUNCTION_38	IF_2
0x40001a8	            0x771f	                            ja 0x40001c9	      2553	dwarf2.c	FUNCTION_38	IF_2
0x40001aa	        0x488b5710	            mov rdx, qword [rdi + 0x10] 	      2555	dwarf2.c	FUNCTION_38	IF_3
0x40001ae	        0x488b4610	            mov rax, qword [rsi + 0x10] 	      2555	dwarf2.c	FUNCTION_38	IF_3
0x40001b2	          0x4839c2	                            cmp rdx, rax	      2555	dwarf2.c	FUNCTION_38	IF_3
0x40001b5	            0x720d	                            jb 0x40001c4	      2555	dwarf2.c	FUNCTION_38	IF_3
0x40001b7	           0xf97c0	                                 seta al	      2552	dwarf2.c	FUNCTION_38	IF_1
0x40001ba	           0xfb6c0	                           movzx eax, al	      2552	dwarf2.c	FUNCTION_38	IF_1
0x40001bd	              0xc3	                                     ret	      2552	dwarf2.c	FUNCTION_38	IF_1
0x40001be	      0xb8ffffffff	                     mov eax, 0xffffffff	      2552	dwarf2.c	FUNCTION_38	IF_1
0x40001c3	              0xc3	                                     ret	      2552	dwarf2.c	FUNCTION_38	IF_1
0x40001c4	      0xb8ffffffff	                     mov eax, 0xffffffff	      2556	dwarf2.c	FUNCTION_38	IF_3
0x40001c9	            0xf3c3	                                     ret	      2561	dwarf2.c	FUNCTION_38
comp_unit_find_line	SWITCH,0:FOR,0:WHILE,0:IF,2:functions,0:ELSE,0:DO,0:CALL,3	132
0x4003a82	            0x4157	                                push r15	      3687	dwarf2.c	FUNCTION_50
0x4003a84	            0x4156	                                push r14	      3687	dwarf2.c	FUNCTION_50
0x4003a86	            0x4155	                                push r13	      3687	dwarf2.c	FUNCTION_50
0x4003a88	            0x4154	                                push r12	      3687	dwarf2.c	FUNCTION_50
0x4003a8a	              0x55	                                push rbp	      3687	dwarf2.c	FUNCTION_50
0x4003a8b	              0x53	                                push rbx	      3687	dwarf2.c	FUNCTION_50
0x4003a8c	        0x4883ec38	                           sub rsp, 0x38	      3687	dwarf2.c	FUNCTION_50
0x4003a90	          0x4889fb	                            mov rbx, rdi	      3687	dwarf2.c	FUNCTION_50
0x4003a93	          0x4889f5	                            mov rbp, rsi	      3687	dwarf2.c	FUNCTION_50
0x4003a96	          0x4989d6	                            mov r14, rdx	      3687	dwarf2.c	FUNCTION_50
0x4003a99	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      3687	dwarf2.c	FUNCTION_50
0x4003a9e	      0x4c89442420	              mov qword [rsp + 0x20], r8	      3687	dwarf2.c	FUNCTION_50
0x4003aa3	          0x4c89ce	                             mov rsi, r9	      3688	dwarf2.c	FUNCTION_50	IF_1	CALL_1
0x4003aa6	      0xe85dffffff	call sym.comp_unit_maybe_decode_line_info	      3688	dwarf2.c	FUNCTION_50	IF_1	CALL_1
0x4003aab	            0x85c0	                           test eax, eax	      3688	dwarf2.c	FUNCTION_50	IF_1	CALL_1
0x4003aad	     0xf8486010000	                            je 0x4003c39	      3688	dwarf2.c	FUNCTION_50	IF_1	CALL_1
0x4003ab3	        0xf6451808	               test byte [rbp + 0x18], 8	      3691	dwarf2.c	FUNCTION_50	IF_2
0x4003ab7	     0xf84ec000000	                            je 0x4003ba9	      3691	dwarf2.c	FUNCTION_50	IF_2
0x4003abd	        0x488b4508	                mov rax, qword [rbp + 8]	      2726	dwarf2.c	FUNCTION_41	CALL_1
0x4003ac1	      0x4889442408	                mov qword [rsp + 8], rax	      2726	dwarf2.c	FUNCTION_41	CALL_1
0x4003ac6	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      2727	dwarf2.c	FUNCTION_41	CALL_2
0x4003aca	        0x48890424	                    mov qword [rsp], rax	      2727	dwarf2.c	FUNCTION_41	CALL_2
0x4003ace	    0x4c8ba3800000	            mov r12, qword [rbx + 0x80] 	      2729	dwarf2.c	FUNCTION_41	FOR_1
0x4003ad5	          0x4d85e4	                           test r12, r12	      2729	dwarf2.c	FUNCTION_41	FOR_1
0x4003ad8	     0xf8448010000	                            je 0x4003c26	      2729	dwarf2.c	FUNCTION_41	FOR_1
0x4003ade	    0x48c744242800	               mov qword [rsp + 0x28], 0	      2729	dwarf2.c	FUNCTION_41	FOR_1
0x4003ae7	    0x48c744241000	               mov qword [rsp + 0x10], 0	      2729	dwarf2.c	FUNCTION_41	FOR_1
0x4003af0	          0x4c89e3	                            mov rbx, r12	      2733	dwarf2.c	FUNCTION_41	FOR_1	FOR_2
0x4003af3	        0x4883c338	                           add rbx, 0x38	      2733	dwarf2.c	FUNCTION_41	FOR_1	FOR_2
0x4003af7	            0x746e	                            je 0x4003b67	      2733	dwarf2.c	FUNCTION_41	FOR_1	FOR_2
0x4003af9	      0x498b442450	            mov rax, qword [r12 + 0x50] 	      2737	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1
0x4003afe	        0x48390424	                    cmp qword [rsp], rax	      2737	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1
0x4003b02	        0x400f94c5	                                sete bpl	      2737	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1
0x4003b06	          0x4885c0	                           test rax, rax	      2737	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1
0x4003b09	           0xf94c0	                                 sete al	      2737	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1
0x4003b0c	             0x9c5	                             or ebp, eax	      2737	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1
0x4003b0e	          0x4084ed	                           test bpl, bpl	      2737	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1
0x4003b11	            0x744c	                            je 0x4003b5f	      2737	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1
0x4003b13	        0x4c8b6b08	                mov r13, qword [rbx + 8]	      2738	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1
0x4003b17	          0x4d39ee	                            cmp r14, r13	      2738	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1
0x4003b1a	            0x7243	                            jb 0x4003b5f	      2738	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1
0x4003b1c	        0x4c8b7b10	            mov r15, qword [rbx + 0x10] 	      2739	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1
0x4003b20	          0x4d39fe	                            cmp r14, r15	      2739	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1
0x4003b23	            0x733a	                           jae 0x4003b5f	      2739	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1
0x4003b25	      0x498b742430	            mov rsi, qword [r12 + 0x30] 	      2740	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1
0x4003b2a	          0x4885f6	                           test rsi, rsi	      2740	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1
0x4003b2d	            0x7430	                            je 0x4003b5f	      2740	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1
0x4003b2f	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      2741	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1	CALL_3
0x4003b34	      0xe800000000	                          call 0x4003b39	      2741	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1	CALL_3
0x4003b39	            0x85c0	                           test eax, eax	      2741	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1	CALL_3
0x4003b3b	            0x7522	                           jne 0x4003b5f	      2741	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1	CALL_3
0x4003b3d	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      2742	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1
0x4003b43	            0x740d	                            je 0x4003b52	      2742	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1
0x4003b45	          0x4c89f8	                            mov rax, r15	      2743	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1
0x4003b48	          0x4c29e8	                            sub rax, r13	      2743	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1
0x4003b4b	      0x483b442428	            cmp rax, qword [rsp + 0x28] 	      2743	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1
0x4003b50	            0x730d	                           jae 0x4003b5f	      2743	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1
0x4003b52	          0x4d29ef	                            sub r15, r13	      2746	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1
0x4003b55	      0x4c897c2428	             mov qword [rsp + 0x28], r15	      2746	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1
0x4003b5a	      0x4c89642410	             mov qword [rsp + 0x10], r12	      2746	dwarf2.c	FUNCTION_41	FOR_1	FOR_2	IF_1
0x4003b5f	          0x488b1b	                    mov rbx, qword [rbx]	      2735	dwarf2.c	FUNCTION_41	FOR_1	FOR_2
0x4003b62	          0x4885db	                           test rbx, rbx	      2733	dwarf2.c	FUNCTION_41	FOR_1	FOR_2
0x4003b65	            0x75a7	                           jne 0x4003b0e	      2733	dwarf2.c	FUNCTION_41	FOR_1	FOR_2
0x4003b67	        0x4d8b2424	                    mov r12, qword [r12]	      2731	dwarf2.c	FUNCTION_41	FOR_1
0x4003b6b	          0x4d85e4	                           test r12, r12	      2729	dwarf2.c	FUNCTION_41	FOR_1
0x4003b6e	            0x7580	                           jne 0x4003af0	      2729	dwarf2.c	FUNCTION_41	FOR_1
0x4003b70	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      2751	dwarf2.c	FUNCTION_41	IF_2
0x4003b75	          0x4885c0	                           test rax, rax	      2751	dwarf2.c	FUNCTION_41	IF_2
0x4003b78	     0xf84af000000	                            je 0x4003c2d	      2751	dwarf2.c	FUNCTION_41	IF_2
0x4003b7e	        0x488b0c24	                    mov rcx, qword [rsp]	      2753	dwarf2.c	FUNCTION_41	IF_2
0x4003b82	        0x48894850	             mov qword [rax + 0x50], rcx	      2753	dwarf2.c	FUNCTION_41	IF_2
0x4003b86	          0x4889c1	                            mov rcx, rax	      2754	dwarf2.c	FUNCTION_41	IF_2
0x4003b89	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2754	dwarf2.c	FUNCTION_41	IF_2
0x4003b8d	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      2754	dwarf2.c	FUNCTION_41	IF_2
0x4003b92	          0x488907	                    mov qword [rdi], rax	      2754	dwarf2.c	FUNCTION_41	IF_2
0x4003b95	          0x8b4124	            mov eax, dword [rcx + 0x24] 	      2755	dwarf2.c	FUNCTION_41	IF_2
0x4003b98	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	      2755	dwarf2.c	FUNCTION_41	IF_2
0x4003b9d	            0x8901	                    mov dword [rcx], eax	      2755	dwarf2.c	FUNCTION_41	IF_2
0x4003b9f	      0xb801000000	                              mov eax, 1	      2756	dwarf2.c	FUNCTION_41	IF_2
0x4003ba4	      0xe990000000	                           jmp 0x4003c39	      2756	dwarf2.c	FUNCTION_41	IF_2
0x4003ba9	        0x4c8b6d08	                mov r13, qword [rbp + 8]	      2774	dwarf2.c	ELSE_1	FUNCTION_42	CALL_1
0x4003bad	        0x488b6d20	            mov rbp, qword [rbp + 0x20] 	      2775	dwarf2.c	ELSE_1	FUNCTION_42	CALL_2
0x4003bb1	    0x488b9b980000	            mov rbx, qword [rbx + 0x98] 	      2778	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1
0x4003bb8	          0x4885db	                           test rbx, rbx	      2778	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1
0x4003bbb	            0x7477	                            je 0x4003c34	      2778	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1
0x4003bbd	        0xf6433001	               test byte [rbx + 0x30], 1	      2779	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1	IF_1
0x4003bc1	            0x7532	                           jne 0x4003bf5	      2779	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1	IF_1
0x4003bc3	        0x4c8b6308	                mov r12, qword [rbx + 8]	      2780	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1	IF_1
0x4003bc7	          0x4d85e4	                           test r12, r12	      2780	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1	IF_1
0x4003bca	            0x7429	                            je 0x4003bf5	      2780	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1	IF_1
0x4003bcc	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	      2781	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1	IF_1
0x4003bd0	          0x4885f6	                           test rsi, rsi	      2781	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1	IF_1
0x4003bd3	            0x7420	                            je 0x4003bf5	      2781	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1	IF_1
0x4003bd5	        0x4c3b7320	            cmp r14, qword [rbx + 0x20] 	      2782	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1	IF_1
0x4003bd9	            0x751a	                           jne 0x4003bf5	      2782	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1	IF_1
0x4003bdb	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      2783	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1	IF_1
0x4003bdf	          0x4839c5	                            cmp rbp, rax	      2783	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1	IF_1
0x4003be2	            0x7405	                            je 0x4003be9	      2783	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1	IF_1
0x4003be4	          0x4885c0	                           test rax, rax	      2783	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1	IF_1
0x4003be7	            0x750c	                           jne 0x4003bf5	      2783	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1	IF_1
0x4003be9	          0x4c89ef	                            mov rdi, r13	      2784	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1	IF_1	CALL_3
0x4003bec	      0xe800000000	                          call 0x4003bf1	      2784	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1	IF_1	CALL_3
0x4003bf1	            0x85c0	                           test eax, eax	      2784	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1	IF_1	CALL_3
0x4003bf3	            0x740f	                            je 0x4003c04	      2784	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1	IF_1	CALL_3
0x4003bf5	          0x488b1b	                    mov rbx, qword [rbx]	      2778	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1
0x4003bf8	          0x4885db	                           test rbx, rbx	      2778	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1
0x4003bfb	            0x75c0	                           jne 0x4003bbd	      2778	dwarf2.c	ELSE_1	FUNCTION_42	FOR_1
0x4003bfd	      0xb800000000	                              mov eax, 0	      2795	dwarf2.c	ELSE_1	FUNCTION_42
0x4003c02	            0xeb35	                           jmp 0x4003c39	      2795	dwarf2.c	ELSE_1	FUNCTION_42
0x4003c04	          0x4885db	                           test rbx, rbx	      2787	dwarf2.c	ELSE_1	FUNCTION_42	IF_2
0x4003c07	            0x7430	                            je 0x4003c39	      2787	dwarf2.c	ELSE_1	FUNCTION_42	IF_2
0x4003c09	        0x48896b28	             mov qword [rbx + 0x28], rbp	      2789	dwarf2.c	ELSE_1	FUNCTION_42	IF_2
0x4003c0d	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      2790	dwarf2.c	ELSE_1	FUNCTION_42	IF_2
0x4003c12	          0x4c8920	                    mov qword [rax], r12	      2790	dwarf2.c	ELSE_1	FUNCTION_42	IF_2
0x4003c15	          0x8b4310	            mov eax, dword [rbx + 0x10] 	      2791	dwarf2.c	ELSE_1	FUNCTION_42	IF_2
0x4003c18	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	      2791	dwarf2.c	ELSE_1	FUNCTION_42	IF_2
0x4003c1d	            0x8901	                    mov dword [rcx], eax	      2791	dwarf2.c	ELSE_1	FUNCTION_42	IF_2
0x4003c1f	      0xb801000000	                              mov eax, 1	      2792	dwarf2.c	ELSE_1	FUNCTION_42	IF_2
0x4003c24	            0xeb13	                           jmp 0x4003c39	      2792	dwarf2.c	ELSE_1	FUNCTION_42	IF_2
0x4003c26	      0xb800000000	                              mov eax, 0	      2759	dwarf2.c	FUNCTION_41	ELSE_1
0x4003c2b	            0xeb0c	                           jmp 0x4003c39	      2759	dwarf2.c	FUNCTION_41	ELSE_1
0x4003c2d	      0xb800000000	                              mov eax, 0	      2759	dwarf2.c	FUNCTION_41	ELSE_1
0x4003c32	            0xeb05	                           jmp 0x4003c39	      2759	dwarf2.c	FUNCTION_41	ELSE_1
0x4003c34	      0xb800000000	                              mov eax, 0	      2795	dwarf2.c	ELSE_1	FUNCTION_42
0x4003c39	        0x4883c438	                           add rsp, 0x38	      3699	dwarf2.c	FUNCTION_50
0x4003c3d	              0x5b	                                 pop rbx	      3699	dwarf2.c	FUNCTION_50
0x4003c3e	              0x5d	                                 pop rbp	      3699	dwarf2.c	FUNCTION_50
0x4003c3f	            0x415c	                                 pop r12	      3699	dwarf2.c	FUNCTION_50
0x4003c41	            0x415d	                                 pop r13	      3699	dwarf2.c	FUNCTION_50
0x4003c43	            0x415e	                                 pop r14	      3699	dwarf2.c	FUNCTION_50
0x4003c45	            0x415f	                                 pop r15	      3699	dwarf2.c	FUNCTION_50
0x4003c47	              0xc3	                                     ret	      3699	dwarf2.c	FUNCTION_50
read_address	SWITCH,2:FOR,0:WHILE,0:IF,3:functions,0:ELSE,1:DO,0:CALL,10	65
0x400095d	        0x4883ec08	                              sub rsp, 8	       877	dwarf2.c	FUNCTION_17
0x4000961	        0x488b4710	            mov rax, qword [rdi + 0x10] 	       880	dwarf2.c	FUNCTION_17	IF_1	CALL_1
0x4000965	        0x4c8b4808	                 mov r9, qword [rax + 8]	       880	dwarf2.c	FUNCTION_17	IF_1	CALL_1
0x4000969	      0x4183790805	                   cmp dword [r9 + 8], 5	       880	dwarf2.c	FUNCTION_17	IF_1	CALL_1
0x400096e	     0xf85b5000000	                           jne 0x4000a29	       880	dwarf2.c	FUNCTION_17	IF_1	CALL_1
0x4000974	    0x498b81680300	            mov rax, qword [r9 + 0x368] 	       881	dwarf2.c	FUNCTION_17	CALL_2
0x400097b	     0xfb680890300	          movzx eax, byte [rax + 0x389] 	       881	dwarf2.c	FUNCTION_17	CALL_2
0x4000982	          0x83e001	                              and eax, 1	       881	dwarf2.c	FUNCTION_17	CALL_2
0x4000985	     0xfb68fac0000	           movzx ecx, byte [rdi + 0xac] 	       883	dwarf2.c	FUNCTION_17	IF_2
0x400098c	           0xfb6f9	                           movzx edi, cl	       883	dwarf2.c	FUNCTION_17	IF_2
0x400098f	          0x4801f7	                            add rdi, rsi	       883	dwarf2.c	FUNCTION_17	IF_2
0x4000992	          0x4839fa	                            cmp rdx, rdi	       883	dwarf2.c	FUNCTION_17	IF_2
0x4000995	     0xf8287000000	                            jb 0x4000a22	       883	dwarf2.c	FUNCTION_17	IF_2
0x400099b	            0x84c0	                             test al, al	       886	dwarf2.c	FUNCTION_17	IF_3
0x400099d	            0x7443	                            je 0x40009e2	       886	dwarf2.c	FUNCTION_17	IF_3
0x400099f	          0x80f904	                               cmp cl, 4	       888	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1
0x40009a2	            0x7418	                            je 0x40009bc	       888	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1
0x40009a4	          0x80f908	                               cmp cl, 8	       888	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1
0x40009a7	            0x7407	                            je 0x40009b0	       888	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1
0x40009a9	          0x80f902	                               cmp cl, 2	       888	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1
0x40009ac	            0x7520	                           jne 0x40009ce	       888	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1
0x40009ae	            0xeb15	                           jmp 0x40009c5	       888	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1
0x40009b0	          0x4889f7	                            mov rdi, rsi	       891	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_3
0x40009b3	        0x41ff5128	                  call qword [r9 + 0x28]	       891	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_3
0x40009b7	      0xe985000000	                           jmp 0x4000a41	       891	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_3
0x40009bc	          0x4889f7	                            mov rdi, rsi	       893	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_4
0x40009bf	        0x41ff5140	                  call qword [r9 + 0x40]	       893	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_4
0x40009c3	            0xeb7c	                           jmp 0x4000a41	       893	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_4
0x40009c5	          0x4889f7	                            mov rdi, rsi	       895	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_5
0x40009c8	        0x41ff5158	                  call qword [r9 + 0x58]	       895	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_5
0x40009cc	            0xeb73	                           jmp 0x4000a41	       895	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_5
0x40009ce	      0xba00000000	                              mov edx, 0	       897	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_6
0x40009d3	      0xbe81030000	                          mov esi, 0x381	       897	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_6
0x40009d8	      0xbf00000000	                              mov edi, 0	       897	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_6
0x40009dd	      0xe800000000	                          call 0x40009e2	       897	dwarf2.c	FUNCTION_17	IF_3	SWITCH_1	CALL_6
0x40009e2	          0x80f904	                               cmp cl, 4	       902	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2
0x40009e5	            0x7415	                            je 0x40009fc	       902	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2
0x40009e7	          0x80f908	                               cmp cl, 8	       902	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2
0x40009ea	            0x7407	                            je 0x40009f3	       902	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2
0x40009ec	          0x80f902	                               cmp cl, 2	       902	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2
0x40009ef	            0x751d	                           jne 0x4000a0e	       902	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2
0x40009f1	            0xeb12	                           jmp 0x4000a05	       902	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2
0x40009f3	          0x4889f7	                            mov rdi, rsi	       905	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_7
0x40009f6	        0x41ff5120	                  call qword [r9 + 0x20]	       905	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_7
0x40009fa	            0xeb45	                           jmp 0x4000a41	       905	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_7
0x40009fc	          0x4889f7	                            mov rdi, rsi	       907	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_8
0x40009ff	        0x41ff5138	                  call qword [r9 + 0x38]	       907	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_8
0x4000a03	            0xeb3c	                           jmp 0x4000a41	       907	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_8
0x4000a05	          0x4889f7	                            mov rdi, rsi	       909	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_9
0x4000a08	        0x41ff5150	                  call qword [r9 + 0x50]	       909	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_9
0x4000a0c	            0xeb33	                           jmp 0x4000a41	       909	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_9
0x4000a0e	      0xba00000000	                              mov edx, 0	       911	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_10
0x4000a13	      0xbe8f030000	                          mov esi, 0x38f	       911	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_10
0x4000a18	      0xbf00000000	                              mov edi, 0	       911	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_10
0x4000a1d	      0xe800000000	                          call 0x4000a22	       911	dwarf2.c	FUNCTION_17	ELSE_1	SWITCH_2	CALL_10
0x4000a22	      0xb800000000	                              mov eax, 0	       884	dwarf2.c	FUNCTION_17	IF_2
0x4000a27	            0xeb18	                           jmp 0x4000a41	       884	dwarf2.c	FUNCTION_17	IF_2
0x4000a29	     0xfb68fac0000	           movzx ecx, byte [rdi + 0xac] 	       883	dwarf2.c	FUNCTION_17	IF_2
0x4000a30	        0x440fb6c1	                           movzx r8d, cl	       883	dwarf2.c	FUNCTION_17	IF_2
0x4000a34	          0x4901f0	                             add r8, rsi	       883	dwarf2.c	FUNCTION_17	IF_2
0x4000a37	      0xb800000000	                              mov eax, 0	       884	dwarf2.c	FUNCTION_17	IF_2
0x4000a3c	          0x4c39c2	                             cmp rdx, r8	       883	dwarf2.c	FUNCTION_17	IF_2
0x4000a3f	            0x73a1	                           jae 0x40009e2	       883	dwarf2.c	FUNCTION_17	IF_2
0x4000a41	        0x4883c408	                              add rsp, 8	       914	dwarf2.c	FUNCTION_17
0x4000a45	              0xc3	                                     ret	       914	dwarf2.c	FUNCTION_17
line_info_add_include_dir_stub	SWITCH,0:FOR,0:WHILE,0:IF,0:functions,0:ELSE,0:DO,0:CALL,1	4
0x40008a2	        0x4883ec08	                              sub rsp, 8	      1850	dwarf2.c	FUNCTION_32
0x40008a6	      0xe896ffffff	      call sym.line_info_add_include_dir	      1851	dwarf2.c	FUNCTION_32	CALL_1
0x40008ab	        0x4883c408	                              add rsp, 8	      1852	dwarf2.c	FUNCTION_32
0x40008af	              0xc3	                                     ret	      1852	dwarf2.c	FUNCTION_32
_bfd_dwarf2_find_symbol_bias	SWITCH,0:FOR,3:WHILE,0:IF,6:functions,0:ELSE,0:DO,0:CALL,3	84
0x4004312	            0x4157	                                push r15	      4460	dwarf2.c	FUNCTION_67
0x4004314	            0x4156	                                push r14	      4460	dwarf2.c	FUNCTION_67
0x4004316	            0x4155	                                push r13	      4460	dwarf2.c	FUNCTION_67
0x4004318	            0x4154	                                push r12	      4460	dwarf2.c	FUNCTION_67
0x400431a	              0x55	                                push rbp	      4460	dwarf2.c	FUNCTION_67
0x400431b	              0x53	                                push rbx	      4460	dwarf2.c	FUNCTION_67
0x400431c	        0x4883ec28	                           sub rsp, 0x28	      4460	dwarf2.c	FUNCTION_67
0x4004320	          0x488b06	                    mov rax, qword [rsi]	      4464	dwarf2.c	FUNCTION_67
0x4004323	      0x4889442418	             mov qword [rsp + 0x18], rax	      4464	dwarf2.c	FUNCTION_67
0x4004328	          0x4885c0	                           test rax, rax	      4466	dwarf2.c	FUNCTION_67	IF_1
0x400432b	     0xf84df000000	                            je 0x4004410	      4466	dwarf2.c	FUNCTION_67	IF_1
0x4004331	      0x48897c2408	                mov qword [rsp + 8], rdi	      4466	dwarf2.c	FUNCTION_67	IF_1
0x4004336	          0x488b00	                    mov rax, qword [rax]	      4469	dwarf2.c	FUNCTION_67	FOR_1
0x4004339	      0x4889442410	             mov qword [rsp + 0x10], rax	      4469	dwarf2.c	FUNCTION_67	FOR_1
0x400433e	          0x4885c0	                           test rax, rax	      4469	dwarf2.c	FUNCTION_67	FOR_1
0x4004341	     0xf84d0000000	                            je 0x4004417	      4469	dwarf2.c	FUNCTION_67	FOR_1
0x4004347	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4473	dwarf2.c	FUNCTION_67	FOR_1	IF_2
0x400434c	    0x4c8ba8800000	            mov r13, qword [rax + 0x80] 	      4473	dwarf2.c	FUNCTION_67	FOR_1	IF_2
0x4004353	          0x4d85ed	                           test r13, r13	      4473	dwarf2.c	FUNCTION_67	FOR_1	IF_2
0x4004356	            0x753b	                           jne 0x4004393	      4473	dwarf2.c	FUNCTION_67	FOR_1	IF_2
0x4004358	      0x4883787800	               cmp qword [rax + 0x78], 0	      4475	dwarf2.c	FUNCTION_67	FOR_1	IF_2	IF_3
0x400435d	            0x7519	                           jne 0x4004378	      4475	dwarf2.c	FUNCTION_67	FOR_1	IF_2	IF_3
0x400435f	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      4476	dwarf2.c	FUNCTION_67	FOR_1	IF_2	CALL_1
0x4004364	          0x4889c3	                            mov rbx, rax	      4476	dwarf2.c	FUNCTION_67	FOR_1	IF_2	CALL_1
0x4004367	          0x4889c7	                            mov rdi, rax	      4476	dwarf2.c	FUNCTION_67	FOR_1	IF_2	CALL_1
0x400436a	      0xe803dbffff	               call sym.decode_line_info	      4476	dwarf2.c	FUNCTION_67	FOR_1	IF_2	CALL_1
0x400436f	        0x48894378	             mov qword [rbx + 0x78], rax	      4476	dwarf2.c	FUNCTION_67	FOR_1	IF_2	CALL_1
0x4004373	          0x4885c0	                           test rax, rax	      4477	dwarf2.c	FUNCTION_67	FOR_1	IF_2	IF_4
0x4004376	            0x740a	                            je 0x4004382	      4477	dwarf2.c	FUNCTION_67	FOR_1	IF_2	IF_4
0x4004378	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      4478	dwarf2.c	FUNCTION_67	FOR_1	IF_2	CALL_2
0x400437d	      0xe893efffff	          call sym.scan_unit_for_symbols	      4478	dwarf2.c	FUNCTION_67	FOR_1	IF_2	CALL_2
0x4004382	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4481	dwarf2.c	FUNCTION_67	FOR_1	FOR_2
0x4004387	    0x4c8ba8800000	            mov r13, qword [rax + 0x80] 	      4481	dwarf2.c	FUNCTION_67	FOR_1	FOR_2
0x400438e	          0x4d85ed	                           test r13, r13	      4481	dwarf2.c	FUNCTION_67	FOR_1	FOR_2
0x4004391	            0x7465	                            je 0x40043f8	      4481	dwarf2.c	FUNCTION_67	FOR_1	FOR_2
0x4004393	        0x4d8b7530	            mov r14, qword [r13 + 0x30] 	      4482	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5
0x4004397	          0x4d85f6	                           test r14, r14	      4482	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5
0x400439a	            0x7453	                            je 0x40043ef	      4482	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5
0x400439c	        0x4d8b7d40	            mov r15, qword [r13 + 0x40] 	      4482	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5
0x40043a0	          0x4d85ff	                           test r15, r15	      4482	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5
0x40043a3	            0x744a	                            je 0x40043ef	      4482	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5
0x40043a5	      0x488b442408	                mov rax, qword [rsp + 8]	      4488	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3
0x40043aa	          0x488b18	                    mov rbx, qword [rax]	      4488	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3
0x40043ad	          0x4885db	                           test rbx, rbx	      4488	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3
0x40043b0	            0x743d	                            je 0x40043ef	      4488	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3
0x40043b2	          0x4889c5	                            mov rbp, rax	      4488	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3
0x40043b5	        0xf6431808	               test byte [rbx + 0x18], 8	      4492	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6
0x40043b9	            0x7427	                            je 0x40043e2	      4492	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6
0x40043bb	        0x4c8b6320	            mov r12, qword [rbx + 0x20] 	      4493	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6
0x40043bf	          0x4d85e4	                           test r12, r12	      4493	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6
0x40043c2	            0x741e	                            je 0x40043e2	      4493	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6
0x40043c4	        0x488b7b08	                mov rdi, qword [rbx + 8]	      4494	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6	CALL_3
0x40043c8	          0x4c89f6	                            mov rsi, r14	      4494	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6	CALL_3
0x40043cb	      0xe800000000	                          call 0x40043d0	      4494	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6	CALL_3
0x40043d0	            0x85c0	                           test eax, eax	      4494	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6	CALL_3
0x40043d2	            0x750e	                           jne 0x40043e2	      4494	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6	CALL_3
0x40043d4	          0x4c89f8	                            mov rax, r15	      4495	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6
0x40043d7	      0x492b442428	             sub rax, qword [r12 + 0x28]	      4495	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6
0x40043dc	        0x482b4310	             sub rax, qword [rbx + 0x10]	      4495	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6
0x40043e0	            0xeb3a	                           jmp 0x400441c	      4495	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6
0x40043e2	        0x4883c508	                              add rbp, 8	      4488	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3
0x40043e6	        0x488b5d00	                    mov rbx, qword [rbp]	      4488	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3
0x40043ea	          0x4885db	                           test rbx, rbx	      4488	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3
0x40043ed	            0x75c6	                           jne 0x40043b5	      4488	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3
0x40043ef	        0x4d8b6d00	                    mov r13, qword [r13]	      4481	dwarf2.c	FUNCTION_67	FOR_1	FOR_2
0x40043f3	          0x4d85ed	                           test r13, r13	      4481	dwarf2.c	FUNCTION_67	FOR_1	FOR_2
0x40043f6	            0x759b	                           jne 0x4004393	      4481	dwarf2.c	FUNCTION_67	FOR_1	FOR_2
0x40043f8	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4469	dwarf2.c	FUNCTION_67	FOR_1
0x40043fd	          0x488b00	                    mov rax, qword [rax]	      4469	dwarf2.c	FUNCTION_67	FOR_1
0x4004400	      0x4889442410	             mov qword [rsp + 0x10], rax	      4469	dwarf2.c	FUNCTION_67	FOR_1
0x4004405	          0x4885c0	                           test rax, rax	      4469	dwarf2.c	FUNCTION_67	FOR_1
0x4004408	     0xf8539ffffff	                           jne 0x4004347	      4469	dwarf2.c	FUNCTION_67	FOR_1
0x400440e	            0xeb0c	                           jmp 0x400441c	      4469	dwarf2.c	FUNCTION_67	FOR_1
0x4004410	      0xb800000000	                              mov eax, 0	      4467	dwarf2.c	FUNCTION_67	IF_1
0x4004415	            0xeb05	                           jmp 0x400441c	      4467	dwarf2.c	FUNCTION_67	IF_1
0x4004417	      0xb800000000	                              mov eax, 0	      4501	dwarf2.c	FUNCTION_67
0x400441c	        0x4883c428	                           add rsp, 0x28	      4502	dwarf2.c	FUNCTION_67
0x4004420	              0x5b	                                 pop rbx	      4502	dwarf2.c	FUNCTION_67
0x4004421	              0x5d	                                 pop rbp	      4502	dwarf2.c	FUNCTION_67
0x4004422	            0x415c	                                 pop r12	      4502	dwarf2.c	FUNCTION_67
0x4004424	            0x415d	                                 pop r13	      4502	dwarf2.c	FUNCTION_67
0x4004426	            0x415e	                                 pop r14	      4502	dwarf2.c	FUNCTION_67
0x4004428	            0x415f	                                 pop r15	      4502	dwarf2.c	FUNCTION_67
0x400442a	              0xc3	                                     ret	      4502	dwarf2.c	FUNCTION_67
_bfd_dwarf2_find_inliner_info	SWITCH,0:FOR,0:WHILE,0:IF,2:functions,0:ELSE,0:DO,0:CALL,0	25
0x400442b	          0x498b38	                     mov rdi, qword [r8]	      4865	dwarf2.c	FUNCTION_69
0x400442e	          0x4885ff	                           test rdi, rdi	      4866	dwarf2.c	FUNCTION_69	IF_1
0x4004431	            0x743b	                            je 0x400446e	      4866	dwarf2.c	FUNCTION_69	IF_1
0x4004433	    0x488b87d00000	            mov rax, qword [rdi + 0xd0] 	      4868	dwarf2.c	FUNCTION_69	IF_1
0x400443a	          0x4885c0	                           test rax, rax	      4870	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x400443d	            0x7435	                            je 0x4004474	      4870	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x400443f	      0x4883780800	                  cmp qword [rax + 8], 0	      4870	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x4004444	            0x7434	                            je 0x400447a	      4870	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x4004446	        0x4c8b4010	              mov r8, qword [rax + 0x10]	      4872	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x400444a	          0x4c8906	                     mov qword [rsi], r8	      4872	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x400444d	        0x488b7008	                mov rsi, qword [rax + 8]	      4873	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x4004451	        0x488b7630	            mov rsi, qword [rsi + 0x30] 	      4873	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x4004455	          0x488932	                    mov qword [rdx], rsi	      4873	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x4004458	          0x8b5020	            mov edx, dword [rax + 0x20] 	      4874	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x400445b	            0x8911	                    mov dword [rcx], edx	      4874	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x400445d	        0x488b4008	                mov rax, qword [rax + 8]	      4875	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x4004461	    0x488987d00000	             mov qword [rdi + 0xd0], rax	      4875	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x4004468	      0xb801000000	                              mov eax, 1	      4876	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x400446d	              0xc3	                                     ret	      4876	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x400446e	      0xb800000000	                              mov eax, 0	      4880	dwarf2.c	FUNCTION_69
0x4004473	              0xc3	                                     ret	      4880	dwarf2.c	FUNCTION_69
0x4004474	      0xb800000000	                              mov eax, 0	      4880	dwarf2.c	FUNCTION_69
0x4004479	              0xc3	                                     ret	      4880	dwarf2.c	FUNCTION_69
0x400447a	      0xb800000000	                              mov eax, 0	      4880	dwarf2.c	FUNCTION_69
0x400447f	              0xc3	                                     ret	      4881	dwarf2.c	FUNCTION_69
_bfd_dwarf2_find_nearest_line	SWITCH,0:FOR,3:WHILE,1:IF,40:functions,0:ELSE,10:DO,0:CALL,23	1076
0x4004d00	            0x4157	                                push r15	      4529	dwarf2.c	FUNCTION_68
0x4004d02	            0x4156	                                push r14	      4529	dwarf2.c	FUNCTION_68
0x4004d04	            0x4155	                                push r13	      4529	dwarf2.c	FUNCTION_68
0x4004d06	            0x4154	                                push r12	      4529	dwarf2.c	FUNCTION_68
0x4004d08	              0x55	                                push rbp	      4529	dwarf2.c	FUNCTION_68
0x4004d09	              0x53	                                push rbx	      4529	dwarf2.c	FUNCTION_68
0x4004d0a	    0x4881ec180100	                          sub rsp, 0x118	      4529	dwarf2.c	FUNCTION_68
0x4004d11	      0x48897c2430	             mov qword [rsp + 0x30], rdi	      4529	dwarf2.c	FUNCTION_68
0x4004d16	      0x4889742448	             mov qword [rsp + 0x48], rsi	      4529	dwarf2.c	FUNCTION_68
0x4004d1b	      0x4889542438	             mov qword [rsp + 0x38], rdx	      4529	dwarf2.c	FUNCTION_68
0x4004d20	      0x48894c2420	             mov qword [rsp + 0x20], rcx	      4529	dwarf2.c	FUNCTION_68
0x4004d25	      0x4c89442450	              mov qword [rsp + 0x50], r8	      4529	dwarf2.c	FUNCTION_68
0x4004d2a	      0x4c894c2468	              mov qword [rsp + 0x68], r9	      4529	dwarf2.c	FUNCTION_68
0x4004d2f	    0x488b84245001	           mov rax, qword [rsp + 0x150] 	      4529	dwarf2.c	FUNCTION_68
0x4004d37	      0x4889442460	             mov qword [rsp + 0x60], rax	      4529	dwarf2.c	FUNCTION_68
0x4004d3c	    0x488bb4245801	           mov rsi, qword [rsp + 0x158] 	      4529	dwarf2.c	FUNCTION_68
0x4004d44	      0x4889742428	             mov qword [rsp + 0x28], rsi	      4529	dwarf2.c	FUNCTION_68
0x4004d49	    0x488bb4246001	           mov rsi, qword [rsp + 0x160] 	      4529	dwarf2.c	FUNCTION_68
0x4004d51	      0x4889742440	             mov qword [rsp + 0x40], rsi	      4529	dwarf2.c	FUNCTION_68
0x4004d56	    0x488bb4246801	           mov rsi, qword [rsp + 0x168] 	      4529	dwarf2.c	FUNCTION_68
0x4004d5e	      0x4889742458	             mov qword [rsp + 0x58], rsi	      4529	dwarf2.c	FUNCTION_68
0x4004d63	    0x488b9c247801	           mov rbx, qword [rsp + 0x178] 	      4529	dwarf2.c	FUNCTION_68
0x4004d6b	    0x64488b342528	                mov rsi, qword fs:[0x28]	      4529	dwarf2.c	FUNCTION_68
0x4004d74	    0x4889b4240801	            mov qword [rsp + 0x108], rsi	      4529	dwarf2.c	FUNCTION_68
0x4004d7c	            0x31f6	                            xor esi, esi	      4529	dwarf2.c	FUNCTION_68
0x4004d7e	    0x48c78424e000	               mov qword [rsp + 0xe0], 0	      4542	dwarf2.c	FUNCTION_68
0x4004d8a	    0x49c701000000	                       mov qword [r9], 0	      4546	dwarf2.c	FUNCTION_68
0x4004d91	          0x4885c0	                           test rax, rax	      4547	dwarf2.c	FUNCTION_68	IF_1
0x4004d94	            0x7407	                            je 0x4004d9d	      4547	dwarf2.c	FUNCTION_68	IF_1
0x4004d96	    0x48c700000000	                      mov qword [rax], 0	      4548	dwarf2.c	FUNCTION_68	IF_1
0x4004d9d	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      4549	dwarf2.c	FUNCTION_68
0x4004da2	    0xc70000000000	                      mov dword [rax], 0	      4549	dwarf2.c	FUNCTION_68
0x4004da8	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      4550	dwarf2.c	FUNCTION_68	IF_2
0x4004dad	          0x4885c0	                           test rax, rax	      4550	dwarf2.c	FUNCTION_68	IF_2
0x4004db0	            0x7406	                            je 0x4004db8	      4550	dwarf2.c	FUNCTION_68	IF_2
0x4004db2	    0xc70000000000	                      mov dword [rax], 0	      4551	dwarf2.c	FUNCTION_68	IF_2
0x4004db8	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      4555	dwarf2.c	FUNCTION_68	IF_3
0x4004dbd	          0x8b4744	            mov eax, dword [rdi + 0x44] 	      4555	dwarf2.c	FUNCTION_68	IF_3
0x4004dc0	        0x89442408	                mov dword [rsp + 8], eax	      4555	dwarf2.c	FUNCTION_68	IF_3
0x4004dc4	          0xc1e805	                              shr eax, 5	      4555	dwarf2.c	FUNCTION_68	IF_3
0x4004dc7	            0xa842	                           test al, 0x42	      4553	dwarf2.c	FUNCTION_68	IF_3	CALL_1
0x4004dc9	        0x410f94c1	                                sete r9b	      4553	dwarf2.c	FUNCTION_68	IF_3	CALL_1
0x4004dcd	        0x450fb6c9	                          movzx r9d, r9b	      4553	dwarf2.c	FUNCTION_68	IF_3	CALL_1
0x4004dd1	          0x4989d8	                             mov r8, rbx	      4553	dwarf2.c	FUNCTION_68	IF_3	CALL_1
0x4004dd4	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	      4553	dwarf2.c	FUNCTION_68	IF_3	CALL_1
0x4004dd9	      0x488b542458	            mov rdx, qword [rsp + 0x58] 	      4553	dwarf2.c	FUNCTION_68	IF_3	CALL_1
0x4004dde	      0xbe00000000	                              mov esi, 0	      4553	dwarf2.c	FUNCTION_68	IF_3	CALL_1
0x4004de3	      0xe800000000	                          call 0x4004de8	      4553	dwarf2.c	FUNCTION_68	IF_3	CALL_1
0x4004de8	            0x85c0	                           test eax, eax	      4553	dwarf2.c	FUNCTION_68	IF_3	CALL_1
0x4004dea	     0xf84ef100000	                            je 0x4005edf	      4553	dwarf2.c	FUNCTION_68	IF_3	CALL_1
0x4004df0	          0x4c8b3b	                    mov r15, qword [rbx]	      4558	dwarf2.c	FUNCTION_68
0x4004df3	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      4560	dwarf2.c	FUNCTION_68
0x4004df8	          0x4885c0	                           test rax, rax	      4560	dwarf2.c	FUNCTION_68
0x4004dfb	           0xf95c1	                                setne cl	      4560	dwarf2.c	FUNCTION_68
0x4004dfe	           0xfb6c9	                           movzx ecx, cl	      4560	dwarf2.c	FUNCTION_68
0x4004e01	        0x894c2474	             mov dword [rsp + 0x74], ecx	      4560	dwarf2.c	FUNCTION_68
0x4004e05	            0x7444	                            je 0x4004e4b	      4561	dwarf2.c	FUNCTION_68	IF_4
0x4004e07	    0x48837c242000	               cmp qword [rsp + 0x20], 0	      4563	dwarf2.c	FUNCTION_68	IF_4	CALL_2
0x4004e0d	           0xf95c2	                                setne dl	      4563	dwarf2.c	FUNCTION_68	IF_4	CALL_2
0x4004e10	    0x48837c245000	               cmp qword [rsp + 0x50], 0	      4563	dwarf2.c	FUNCTION_68	IF_4	CALL_2
0x4004e16	           0xf95c0	                                setne al	      4563	dwarf2.c	FUNCTION_68	IF_4	CALL_2
0x4004e19	             0x8c2	                               or dl, al	      4563	dwarf2.c	FUNCTION_68	IF_4	CALL_2
0x4004e1b	            0x7508	                           jne 0x4004e25	      4563	dwarf2.c	FUNCTION_68	IF_4	CALL_2
0x4004e1d	    0x48837c246000	               cmp qword [rsp + 0x60], 0	      4563	dwarf2.c	FUNCTION_68	IF_4	CALL_2
0x4004e23	            0x740f	                            je 0x4004e34	      4563	dwarf2.c	FUNCTION_68	IF_4	CALL_2
0x4004e25	      0xbed3110000	                         mov esi, 0x11d3	      4563	dwarf2.c	FUNCTION_68	IF_4	CALL_2
0x4004e2a	      0xbf00000000	                              mov edi, 0	      4563	dwarf2.c	FUNCTION_68	IF_4	CALL_2
0x4004e2f	      0xe800000000	                          call 0x4004e34	      4563	dwarf2.c	FUNCTION_68	IF_4	CALL_2
0x4004e34	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      4564	dwarf2.c	FUNCTION_68	IF_4	CALL_3
0x4004e39	        0x488b4820	            mov rcx, qword [rax + 0x20] 	      4564	dwarf2.c	FUNCTION_68	IF_4	CALL_3
0x4004e3d	      0x48894c2420	             mov qword [rsp + 0x20], rcx	      4564	dwarf2.c	FUNCTION_68	IF_4	CALL_3
0x4004e42	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      4565	dwarf2.c	FUNCTION_68	IF_4
0x4004e46	      0xe9b0000000	                           jmp 0x4004efb	      4565	dwarf2.c	FUNCTION_68	IF_4
0x4004e4b	    0x48837c242000	               cmp qword [rsp + 0x20], 0	      4569	dwarf2.c	FUNCTION_68	ELSE_1	CALL_4
0x4004e51	            0x7408	                            je 0x4004e5b	      4569	dwarf2.c	FUNCTION_68	ELSE_1	CALL_4
0x4004e53	    0x48837c246000	               cmp qword [rsp + 0x60], 0	      4569	dwarf2.c	FUNCTION_68	ELSE_1	CALL_4
0x4004e59	            0x750f	                           jne 0x4004e6a	      4569	dwarf2.c	FUNCTION_68	ELSE_1	CALL_4
0x4004e5b	      0xbed9110000	                         mov esi, 0x11d9	      4569	dwarf2.c	FUNCTION_68	ELSE_1	CALL_4
0x4004e60	      0xbf00000000	                              mov edi, 0	      4569	dwarf2.c	FUNCTION_68	ELSE_1	CALL_4
0x4004e65	      0xe800000000	                          call 0x4004e6a	      4569	dwarf2.c	FUNCTION_68	ELSE_1	CALL_4
0x4004e6a	      0x488b542448	            mov rdx, qword [rsp + 0x48] 	      4585	dwarf2.c	FUNCTION_68	ELSE_1	IF_5
0x4004e6f	          0x4885d2	                           test rdx, rdx	      4585	dwarf2.c	FUNCTION_68	ELSE_1	IF_5
0x4004e72	            0x7467	                            je 0x4004edb	      4585	dwarf2.c	FUNCTION_68	ELSE_1	IF_5
0x4004e74	      0x488b4c2450	            mov rcx, qword [rsp + 0x50] 	      4570	dwarf2.c	FUNCTION_68	ELSE_1
0x4004e79	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      4585	dwarf2.c	FUNCTION_68	ELSE_1	IF_5
0x4004e7e	        0xf6462010	           test byte [rsi + 0x20], 0x10 	      4585	dwarf2.c	FUNCTION_68	ELSE_1	IF_5
0x4004e82	            0x7577	                           jne 0x4004efb	      4585	dwarf2.c	FUNCTION_68	ELSE_1	IF_5
0x4004e84	          0x488b02	                    mov rax, qword [rdx]	      4589	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1
0x4004e87	          0x4885c0	                           test rax, rax	      4589	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1
0x4004e8a	            0x7456	                            je 0x4004ee2	      4589	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1
0x4004e8c	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	      4589	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1
0x4004e91	          0x4889f7	                            mov rdi, rsi	      4589	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1
0x4004e94	          0x483b08	                    cmp rcx, qword [rax]	      4590	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x4004e97	            0x752f	                           jne 0x4004ec8	      4590	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x4004e99	        0x483b7820	            cmp rdi, qword [rax + 0x20] 	      4591	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x4004e9d	            0x7529	                           jne 0x4004ec8	      4591	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x4004e9f	      0x488b742450	            mov rsi, qword [rsp + 0x50] 	      4592	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x4004ea4	        0x483b7010	            cmp rsi, qword [rax + 0x10] 	      4592	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x4004ea8	            0x751e	                           jne 0x4004ec8	      4592	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x4004eaa	          0x8b7018	            mov esi, dword [rax + 0x18] 	      4593	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x4004ead	    0xf7c600010000	                         test esi, 0x100	      4593	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x4004eb3	            0x7513	                           jne 0x4004ec8	      4593	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x4004eb5	        0x40f6c602	                             test sil, 2	      4599	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6	IF_7
0x4004eb9	            0x752e	                           jne 0x4004ee9	      4599	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6	IF_7
0x4004ebb	      0x4889442438	             mov qword [rsp + 0x38], rax	      4599	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6	IF_7
0x4004ec0	    0xc74424740100	               mov dword [rsp + 0x74], 1	      4596	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x4004ec8	        0x4883c208	                              add rdx, 8	      4589	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1
0x4004ecc	          0x488b02	                    mov rax, qword [rdx]	      4589	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1
0x4004ecf	          0x4885c0	                           test rax, rax	      4589	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1
0x4004ed2	            0x75c0	                           jne 0x4004e94	      4589	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1
0x4004ed4	      0x488b4c2450	            mov rcx, qword [rsp + 0x50] 	      4570	dwarf2.c	FUNCTION_68	ELSE_1
0x4004ed9	            0xeb20	                           jmp 0x4004efb	      4570	dwarf2.c	FUNCTION_68	ELSE_1
0x4004edb	      0x488b4c2450	            mov rcx, qword [rsp + 0x50] 	      4570	dwarf2.c	FUNCTION_68	ELSE_1
0x4004ee0	            0xeb19	                           jmp 0x4004efb	      4570	dwarf2.c	FUNCTION_68	ELSE_1
0x4004ee2	      0x488b4c2450	            mov rcx, qword [rsp + 0x50] 	      4570	dwarf2.c	FUNCTION_68	ELSE_1
0x4004ee7	            0xeb12	                           jmp 0x4004efb	      4570	dwarf2.c	FUNCTION_68	ELSE_1
0x4004ee9	      0x488b4c2450	            mov rcx, qword [rsp + 0x50] 	      4570	dwarf2.c	FUNCTION_68	ELSE_1
0x4004eee	      0x4889442438	             mov qword [rsp + 0x38], rax	      4570	dwarf2.c	FUNCTION_68	ELSE_1
0x4004ef3	    0xc74424740100	               mov dword [rsp + 0x74], 1	      4596	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x4004efb	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4605	dwarf2.c	FUNCTION_68	IF_8
0x4004f00	        0x488b5068	            mov rdx, qword [rax + 0x68] 	      4605	dwarf2.c	FUNCTION_68	IF_8
0x4004f04	          0x4885d2	                           test rdx, rdx	      4605	dwarf2.c	FUNCTION_68	IF_8
0x4004f07	            0x7412	                            je 0x4004f1b	      4605	dwarf2.c	FUNCTION_68	IF_8
0x4004f09	        0x488b4060	            mov rax, qword [rax + 0x60] 	      4606	dwarf2.c	FUNCTION_68	IF_8
0x4004f0d	        0x48034228	             add rax, qword [rdx + 0x28]	      4606	dwarf2.c	FUNCTION_68	IF_8
0x4004f11	          0x4801c8	                            add rax, rcx	      4606	dwarf2.c	FUNCTION_68	IF_8
0x4004f14	      0x4889442478	             mov qword [rsp + 0x78], rax	      4606	dwarf2.c	FUNCTION_68	IF_8
0x4004f19	            0xeb0e	                           jmp 0x4004f29	      4606	dwarf2.c	FUNCTION_68	IF_8
0x4004f1b	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4608	dwarf2.c	FUNCTION_68	ELSE_2
0x4004f20	        0x48034828	             add rcx, qword [rax + 0x28]	      4608	dwarf2.c	FUNCTION_68	ELSE_2
0x4004f24	      0x48894c2478	             mov qword [rsp + 0x78], rcx	      4608	dwarf2.c	FUNCTION_68	ELSE_2
0x4004f29	      0x49837f1800	               cmp qword [r15 + 0x18], 0	      4612	dwarf2.c	FUNCTION_68	IF_9
0x4004f2e	     0xf84990f0000	                            je 0x4005ecd	      4612	dwarf2.c	FUNCTION_68	IF_9
0x4004f34	    0x49c787d00000	               mov qword [r15 + 0xd0], 0	      4615	dwarf2.c	FUNCTION_68
0x4004f3f	      0x837c247400	               cmp dword [rsp + 0x74], 0	      4618	dwarf2.c	FUNCTION_68	IF_10
0x4004f44	     0xf8473020000	                            je 0x40051bd	      4618	dwarf2.c	FUNCTION_68	IF_10
0x4004f4a	    0x418b87100100	           mov eax, dword [r15 + 0x110] 	      4623	dwarf2.c	FUNCTION_68	IF_10	IF_11
0x4004f51	            0x85c0	                           test eax, eax	      4623	dwarf2.c	FUNCTION_68	IF_10	IF_11
0x4004f53	            0x7571	                           jne 0x4004fc6	      4623	dwarf2.c	FUNCTION_68	IF_10	IF_11
0x4004f55	    0x418b87f00000	            mov eax, dword [r15 + 0xf0] 	      4207	dwarf2.c	FUNCTION_62	IF_1
0x4004f5c	          0x8d5001	                      lea edx, [rax + 1]	      4207	dwarf2.c	FUNCTION_62	IF_1
0x4004f5f	    0x418997f00000	             mov dword [r15 + 0xf0], edx	      4207	dwarf2.c	FUNCTION_62	IF_1
0x4004f66	          0x83f863	                           cmp eax, 0x63	      4207	dwarf2.c	FUNCTION_62	IF_1
0x4004f69	     0xf8ede010000	                           jle 0x400514d	      4207	dwarf2.c	FUNCTION_62	IF_1
0x4004f6f	      0x488b5c2430	            mov rbx, qword [rsp + 0x30] 	      4214	dwarf2.c	FUNCTION_62	CALL_2
0x4004f74	          0x4889df	                            mov rdi, rbx	      4214	dwarf2.c	FUNCTION_62	CALL_2
0x4004f77	      0xe8dfc0ffff	         call sym.create_info_hash_table	      4214	dwarf2.c	FUNCTION_62	CALL_2
0x4004f7c	    0x498987f80000	             mov qword [r15 + 0xf8], rax	      4214	dwarf2.c	FUNCTION_62	CALL_2
0x4004f83	          0x4889df	                            mov rdi, rbx	      4215	dwarf2.c	FUNCTION_62	CALL_3
0x4004f86	      0xe8d0c0ffff	         call sym.create_info_hash_table	      4215	dwarf2.c	FUNCTION_62	CALL_3
0x4004f8b	    0x498987000100	            mov qword [r15 + 0x100], rax	      4215	dwarf2.c	FUNCTION_62	CALL_3
0x4004f92	    0x4983bff80000	               cmp qword [r15 + 0xf8], 0	      4216	dwarf2.c	FUNCTION_62	IF_2
0x4004f9a	            0x7405	                            je 0x4004fa1	      4216	dwarf2.c	FUNCTION_62	IF_2
0x4004f9c	          0x4885c0	                           test rax, rax	      4216	dwarf2.c	FUNCTION_62	IF_2
0x4004f9f	            0x7510	                           jne 0x4004fb1	      4216	dwarf2.c	FUNCTION_62	IF_2
0x4004fa1	    0x41c787100100	              mov dword [r15 + 0x110], 2	      4219	dwarf2.c	FUNCTION_62	IF_2
0x4004fac	      0xe99c010000	                           jmp 0x400514d	      4219	dwarf2.c	FUNCTION_62	IF_2
0x4004fb1	          0x4c89ff	                            mov rdi, r15	      4225	dwarf2.c	FUNCTION_62	CALL_4
0x4004fb4	      0xe88fecffff	call sym.stash_maybe_update_info_hash_tables	      4225	dwarf2.c	FUNCTION_62	CALL_4
0x4004fb9	    0x41c787100100	              mov dword [r15 + 0x110], 1	      4226	dwarf2.c	FUNCTION_62
0x4004fc4	            0xeb09	                           jmp 0x4004fcf	      4226	dwarf2.c	FUNCTION_62
0x4004fc6	          0x83f801	                              cmp eax, 1	      4628	dwarf2.c	FUNCTION_68	IF_10	IF_12
0x4004fc9	     0xf857e010000	                           jne 0x400514d	      4628	dwarf2.c	FUNCTION_68	IF_10	IF_12
0x4004fcf	          0x4c89ff	                            mov rdi, r15	      4629	dwarf2.c	FUNCTION_68	IF_10	CALL_6
0x4004fd2	      0xe871ecffff	call sym.stash_maybe_update_info_hash_tables	      4629	dwarf2.c	FUNCTION_68	IF_10	CALL_6
0x4004fd7	    0x4183bf100100	              cmp dword [r15 + 0x110], 1	      4631	dwarf2.c	FUNCTION_68	IF_10	IF_13
0x4004fdf	     0xf8568010000	                           jne 0x400514d	      4631	dwarf2.c	FUNCTION_68	IF_10	IF_13
0x4004fe5	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      4243	dwarf2.c	FUNCTION_63	IF_1
0x4004fea	        0xf6401808	               test byte [rax + 0x18], 8	      4243	dwarf2.c	FUNCTION_63	IF_1
0x4004fee	     0xf84ce000000	                            je 0x40050c2	      4243	dwarf2.c	FUNCTION_63	IF_1
0x4004ff4	        0x488b5820	            mov rbx, qword [rax + 0x20] 	      4041	dwarf2.c	FUNCTION_58	CALL_2
0x4004ff8	        0x488b7008	                mov rsi, qword [rax + 8]	       508	dwarf2.c	FUNCTION_4	CALL_1
0x4004ffc	    0x498bbff80000	            mov rdi, qword [r15 + 0xf8] 	       508	dwarf2.c	FUNCTION_4	CALL_1
0x4005003	      0xb900000000	                              mov ecx, 0	       508	dwarf2.c	FUNCTION_4	CALL_1
0x4005008	      0xba00000000	                              mov edx, 0	       508	dwarf2.c	FUNCTION_4	CALL_1
0x400500d	      0xe800000000	                          call 0x4005012	       508	dwarf2.c	FUNCTION_4	CALL_1
0x4005012	          0x4885c0	                           test rax, rax	       510	dwarf2.c	FUNCTION_4
0x4005015	     0xf84ed0e0000	                            je 0x4005f08	       510	dwarf2.c	FUNCTION_4
0x400501b	        0x488b7018	            mov rsi, qword [rax + 0x18] 	       510	dwarf2.c	FUNCTION_4
0x400501f	          0x4885f6	                           test rsi, rsi	      4043	dwarf2.c	FUNCTION_58	FOR_1	CALL_3
0x4005022	     0xf8418010000	                            je 0x4005140	      4043	dwarf2.c	FUNCTION_58	FOR_1	CALL_3
0x4005028	    0x41b900000000	                              mov r9d, 0	      4043	dwarf2.c	FUNCTION_58	FOR_1	CALL_3
0x400502e	    0x41b800000000	                              mov r8d, 0	      4043	dwarf2.c	FUNCTION_58	FOR_1	CALL_3
0x4005034	      0x488b7c2478	            mov rdi, qword [rsp + 0x78] 	      4043	dwarf2.c	FUNCTION_58	FOR_1	CALL_3
0x4005039	        0x4c8b5608	                mov r10, qword [rsi + 8]	      4047	dwarf2.c	FUNCTION_58	FOR_1
0x400503d	          0x4c89d0	                            mov rax, r10	      4048	dwarf2.c	FUNCTION_58	FOR_1	FOR_2
0x4005040	        0x4883c038	                           add rax, 0x38	      4048	dwarf2.c	FUNCTION_58	FOR_1	FOR_2
0x4005044	            0x744b	                            je 0x4005091	      4048	dwarf2.c	FUNCTION_58	FOR_1	FOR_2
0x4005046	        0x498b4a50	            mov rcx, qword [r10 + 0x50] 	      4052	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x400504a	          0x4885c9	                           test rcx, rcx	      4052	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x400504d	        0x410f94c3	                               sete r11b	      4052	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x4005051	          0x4839cb	                            cmp rbx, rcx	      4052	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x4005054	           0xf94c2	                                 sete dl	      4052	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x4005057	          0x4409da	                            or edx, r11d	      4052	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x400505a	            0x84d2	                             test dl, dl	      4052	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x400505c	            0x742b	                            je 0x4005089	      4052	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x400505e	        0x488b4808	                mov rcx, qword [rax + 8]	      4053	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x4005062	          0x4839cf	                            cmp rdi, rcx	      4053	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x4005065	            0x7222	                            jb 0x4005089	      4053	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x4005067	        0x4c8b5810	            mov r11, qword [rax + 0x10] 	      4054	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x400506b	          0x4c39df	                            cmp rdi, r11	      4054	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x400506e	            0x7319	                           jae 0x4005089	      4054	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x4005070	          0x4d85c0	                             test r8, r8	      4055	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x4005073	            0x740b	                            je 0x4005080	      4055	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x4005075	          0x4c89dd	                            mov rbp, r11	      4056	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x4005078	          0x4829cd	                            sub rbp, rcx	      4056	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x400507b	          0x4c39cd	                             cmp rbp, r9	      4056	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x400507e	            0x7309	                           jae 0x4005089	      4056	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x4005080	          0x4929cb	                            sub r11, rcx	      4059	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x4005083	          0x4d89d9	                             mov r9, r11	      4059	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x4005086	          0x4d89d0	                             mov r8, r10	      4058	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x4005089	          0x488b00	                    mov rax, qword [rax]	      4050	dwarf2.c	FUNCTION_58	FOR_1	FOR_2
0x400508c	          0x4885c0	                           test rax, rax	      4048	dwarf2.c	FUNCTION_58	FOR_1	FOR_2
0x400508f	            0x75c9	                           jne 0x400505a	      4048	dwarf2.c	FUNCTION_58	FOR_1	FOR_2
0x4005091	          0x488b36	                    mov rsi, qword [rsi]	      4045	dwarf2.c	FUNCTION_58	FOR_1
0x4005094	          0x4885f6	                           test rsi, rsi	      4043	dwarf2.c	FUNCTION_58	FOR_1	CALL_3
0x4005097	            0x75a0	                           jne 0x4005039	      4043	dwarf2.c	FUNCTION_58	FOR_1	CALL_3
0x4005099	          0x4d85c0	                             test r8, r8	      4064	dwarf2.c	FUNCTION_58	IF_2
0x400509c	     0xf84660e0000	                            je 0x4005f08	      4064	dwarf2.c	FUNCTION_58	IF_2
0x40050a2	        0x49895850	              mov qword [r8 + 0x50], rbx	      4066	dwarf2.c	FUNCTION_58	IF_2
0x40050a6	        0x498b4018	              mov rax, qword [r8 + 0x18]	      4067	dwarf2.c	FUNCTION_58	IF_2
0x40050aa	      0x488b4c2468	            mov rcx, qword [rsp + 0x68] 	      4067	dwarf2.c	FUNCTION_58	IF_2
0x40050af	          0x488901	                    mov qword [rcx], rax	      4067	dwarf2.c	FUNCTION_58	IF_2
0x40050b2	        0x418b4024	              mov eax, dword [r8 + 0x24]	      4068	dwarf2.c	FUNCTION_58	IF_2
0x40050b6	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      4068	dwarf2.c	FUNCTION_58	IF_2
0x40050bb	            0x8906	                    mov dword [rsi], eax	      4068	dwarf2.c	FUNCTION_58	IF_2
0x40050bd	      0xe9390e0000	                           jmp 0x4005efb	      4068	dwarf2.c	FUNCTION_58	IF_2
0x40050c2	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      4089	dwarf2.c	FUNCTION_59	CALL_2
0x40050c7	        0x488b5820	            mov rbx, qword [rax + 0x20] 	      4089	dwarf2.c	FUNCTION_59	CALL_2
0x40050cb	        0x488b7008	                mov rsi, qword [rax + 8]	       508	dwarf2.c	FUNCTION_4	CALL_1
0x40050cf	    0x498bbf000100	           mov rdi, qword [r15 + 0x100] 	       508	dwarf2.c	FUNCTION_4	CALL_1
0x40050d6	      0xb900000000	                              mov ecx, 0	       508	dwarf2.c	FUNCTION_4	CALL_1
0x40050db	      0xba00000000	                              mov edx, 0	       508	dwarf2.c	FUNCTION_4	CALL_1
0x40050e0	      0xe800000000	                          call 0x40050e5	       508	dwarf2.c	FUNCTION_4	CALL_1
0x40050e5	          0x4885c0	                           test rax, rax	       510	dwarf2.c	FUNCTION_4
0x40050e8	            0x7456	                            je 0x4005140	       510	dwarf2.c	FUNCTION_4
0x40050ea	        0x488b4018	            mov rax, qword [rax + 0x18] 	       510	dwarf2.c	FUNCTION_4
0x40050ee	          0x4885c0	                           test rax, rax	      4093	dwarf2.c	FUNCTION_59	FOR_1	CALL_3
0x40050f1	     0xf84110e0000	                            je 0x4005f08	      4093	dwarf2.c	FUNCTION_59	FOR_1	CALL_3
0x40050f7	      0x488b4c2478	            mov rcx, qword [rsp + 0x78] 	      4093	dwarf2.c	FUNCTION_59	FOR_1	CALL_3
0x40050fc	        0x488b5008	                mov rdx, qword [rax + 8]	      4097	dwarf2.c	FUNCTION_59	FOR_1
0x4005100	        0x483b4a20	            cmp rcx, qword [rdx + 0x20] 	      4098	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x4005104	            0x752d	                           jne 0x4005133	      4098	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x4005106	        0x488b7228	            mov rsi, qword [rdx + 0x28] 	      4099	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x400510a	          0x4839f3	                            cmp rbx, rsi	      4099	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x400510d	            0x7405	                            je 0x4005114	      4099	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x400510f	          0x4885f6	                           test rsi, rsi	      4099	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x4005112	            0x751f	                           jne 0x4005133	      4099	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x4005114	        0x48895a28	             mov qword [rdx + 0x28], rbx	      4101	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x4005118	        0x488b4208	                mov rax, qword [rdx + 8]	      4102	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x400511c	      0x488b4c2468	            mov rcx, qword [rsp + 0x68] 	      4102	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x4005121	          0x488901	                    mov qword [rcx], rax	      4102	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x4005124	          0x8b4210	            mov eax, dword [rdx + 0x10] 	      4103	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x4005127	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      4103	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x400512c	            0x8906	                    mov dword [rsi], eax	      4103	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x400512e	      0xe9c80d0000	                           jmp 0x4005efb	      4103	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x4005133	          0x488b00	                    mov rax, qword [rax]	      4095	dwarf2.c	FUNCTION_59	FOR_1
0x4005136	          0x4885c0	                           test rax, rax	      4093	dwarf2.c	FUNCTION_59	FOR_1	CALL_3
0x4005139	            0x75c1	                           jne 0x40050fc	      4093	dwarf2.c	FUNCTION_59	FOR_1	CALL_3
0x400513b	      0xe9c80d0000	                           jmp 0x4005f08	      4093	dwarf2.c	FUNCTION_59	FOR_1	CALL_3
0x4005140	    0xc74424700000	               mov dword [rsp + 0x70], 0	      4633	dwarf2.c	FUNCTION_68	IF_10	IF_13	CALL_7
0x4005148	      0xe9b2010000	                           jmp 0x40052ff	      4633	dwarf2.c	FUNCTION_68	IF_10	IF_13	CALL_7
0x400514d	          0x498b1f	                    mov rbx, qword [r15]	      4641	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2
0x4005150	          0x4885db	                           test rbx, rbx	      4641	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2
0x4005153	     0xf849e010000	                            je 0x40052f7	      4641	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2
0x4005159	      0x4c8b642478	            mov r12, qword [rsp + 0x78] 	      4641	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2
0x400515e	      0x488b6c2438	            mov rbp, qword [rsp + 0x38] 	      4641	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2
0x4005163	      0x4c8b6c2468	            mov r13, qword [rsp + 0x68] 	      4641	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2
0x4005168	      0x4c8b742428	            mov r14, qword [rsp + 0x28] 	      4641	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2
0x400516d	        0xf6451808	               test byte [rbp + 0x18], 8	      4642	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15
0x4005171	            0x7416	                            je 0x4005189	      4642	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15
0x4005173	      0x48837b2800	               cmp qword [rbx + 0x28], 0	      4643	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15
0x4005178	            0x740f	                            je 0x4005189	      4643	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15
0x400517a	          0x4c89e6	                            mov rsi, r12	      4644	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15	CALL_8
0x400517d	          0x4889df	                            mov rdi, rbx	      4644	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15	CALL_8
0x4005180	      0xe846b0ffff	     call sym.comp_unit_contains_address	      4644	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15	CALL_8
0x4005185	            0x85c0	                           test eax, eax	      4644	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15	CALL_8
0x4005187	            0x741f	                            je 0x40051a8	      4644	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15	CALL_8
0x4005189	          0x4d89f9	                             mov r9, r15	      4646	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15	CALL_9
0x400518c	          0x4d89f0	                             mov r8, r14	      4646	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15	CALL_9
0x400518f	          0x4c89e9	                            mov rcx, r13	      4646	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15	CALL_9
0x4005192	          0x4c89e2	                            mov rdx, r12	      4646	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15	CALL_9
0x4005195	          0x4889ee	                            mov rsi, rbp	      4646	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15	CALL_9
0x4005198	          0x4889df	                            mov rdi, rbx	      4646	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15	CALL_9
0x400519b	      0xe8e2e8ffff	            call sym.comp_unit_find_line	      4646	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15	CALL_9
0x40051a0	            0x85c0	                           test eax, eax	      4648	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15	IF_16
0x40051a2	     0xf85190c0000	                           jne 0x4005dc1	      4648	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15	IF_16
0x40051a8	          0x488b1b	                    mov rbx, qword [rbx]	      4641	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2
0x40051ab	          0x4885db	                           test rbx, rbx	      4641	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2
0x40051ae	            0x75bd	                           jne 0x400516d	      4641	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2
0x40051b0	    0xc74424700000	               mov dword [rsp + 0x70], 0	      4641	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2
0x40051b8	      0xe942010000	                           jmp 0x40052ff	      4641	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2
0x40051bd	    0x48c78424e800	               mov qword [rsp + 0xe8], 0	      4656	dwarf2.c	FUNCTION_68	ELSE_4
0x40051c9	    0x48c78424f000	               mov qword [rsp + 0xf0], 0	      4657	dwarf2.c	FUNCTION_68	ELSE_4
0x40051d5	    0xc78424d80000	               mov dword [rsp + 0xd8], 0	      4658	dwarf2.c	FUNCTION_68	ELSE_4
0x40051e0	    0xc78424dc0000	               mov dword [rsp + 0xdc], 0	      4659	dwarf2.c	FUNCTION_68	ELSE_4
0x40051eb	          0x498b1f	                    mov rbx, qword [r15]	      4661	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3
0x40051ee	          0x4885db	                           test rbx, rbx	      4661	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3
0x40051f1	     0xf84e1000000	                            je 0x40052d8	      4661	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3
0x40051f7	    0x48c7c5ffffff	             mov rbp, 0xffffffffffffffff	      4661	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3
0x40051fe	      0x4c8b642478	            mov r12, qword [rsp + 0x78] 	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x4005203	      0x4c8b6c2468	            mov r13, qword [rsp + 0x68] 	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x4005208	      0x4c8b742440	            mov r14, qword [rsp + 0x40] 	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x400520d	      0x48837b2800	               cmp qword [rbx + 0x28], 0	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x4005212	            0x7418	                            je 0x400522c	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x4005214	          0x4c89e6	                            mov rsi, r12	      4666	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_10
0x4005217	          0x4889df	                            mov rdi, rbx	      4666	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_10
0x400521a	      0xe8acafffff	     call sym.comp_unit_contains_address	      4666	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_10
0x400521f	      0xb900000000	                              mov ecx, 0	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x4005224	            0x85c0	                           test eax, eax	      4666	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_10
0x4005226	     0xf849a000000	                            je 0x40052c6	      4666	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_10
0x400522c	        0x4883ec08	                              sub rsp, 8	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x4005230	            0x4157	                                push r15	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x4005232	    0x4c8d8c24ec00	                    lea r9, [rsp + 0xec]	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x400523a	    0x4c8d8424e800	                    lea r8, [rsp + 0xe8]	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x4005242	    0x488d8c240001	                  lea rcx, [rsp + 0x100]	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x400524a	    0x488d9424f800	                   lea rdx, [rsp + 0xf8]	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x4005252	          0x4c89e6	                            mov rsi, r12	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x4005255	          0x4889df	                            mov rdi, rbx	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x4005258	      0xe828ecffff	    call sym.comp_unit_find_nearest_line	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x400525d	        0x4883c410	                           add rsp, 0x10	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x4005261	          0x4885c0	                           test rax, rax	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x4005264	           0xf95c2	                                setne dl	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x4005267	           0xfb6ca	                           movzx ecx, dl	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x400526a	          0x4839e8	                            cmp rax, rbp	      4686	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18
0x400526d	            0x7757	                            ja 0x40052c6	      4686	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18
0x400526f	            0x84d2	                             test dl, dl	      4686	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18
0x4005271	            0x7453	                            je 0x40052c6	      4686	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18
0x4005273	          0x4d85ed	                           test r13, r13	      4688	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_19
0x4005276	            0x7411	                            je 0x4005289	      4688	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_19
0x4005278	    0x488b9424e800	            mov rdx, qword [rsp + 0xe8] 	      4688	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_19
0x4005280	          0x4885d2	                           test rdx, rdx	      4688	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_19
0x4005283	            0x7404	                            je 0x4005289	      4688	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_19
0x4005285	        0x49895500	                    mov qword [r13], rdx	      4689	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_19
0x4005289	    0x488b9424f000	            mov rdx, qword [rsp + 0xf0] 	      4690	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_20
0x4005291	          0x4885d2	                           test rdx, rdx	      4690	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_20
0x4005294	            0x7408	                            je 0x400529e	      4690	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_20
0x4005296	    0x48899424e000	             mov qword [rsp + 0xe0], rdx	      4691	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_20
0x400529e	          0x4d85f6	                           test r14, r14	      4692	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_21
0x40052a1	            0x740e	                            je 0x40052b1	      4692	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_21
0x40052a3	    0x8b9424dc0000	            mov edx, dword [rsp + 0xdc] 	      4692	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_21
0x40052aa	            0x85d2	                           test edx, edx	      4692	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_21
0x40052ac	            0x7403	                            je 0x40052b1	      4692	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_21
0x40052ae	          0x418916	                    mov dword [r14], edx	      4693	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_21
0x40052b1	    0x8b9424d80000	            mov edx, dword [rsp + 0xd8] 	      4694	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_22
0x40052b8	          0x4889c5	                            mov rbp, rax	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x40052bb	            0x85d2	                           test edx, edx	      4694	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_22
0x40052bd	            0x7407	                            je 0x40052c6	      4694	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_22
0x40052bf	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      4695	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_22
0x40052c4	            0x8916	                    mov dword [rsi], edx	      4695	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_22
0x40052c6	          0x488b1b	                    mov rbx, qword [rbx]	      4661	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3
0x40052c9	          0x4885db	                           test rbx, rbx	      4661	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3
0x40052cc	     0xf853bffffff	                           jne 0x400520d	      4661	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3
0x40052d2	        0x894c2470	             mov dword [rsp + 0x70], ecx	      4661	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3
0x40052d6	            0xeb08	                           jmp 0x40052e0	      4661	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3
0x40052d8	    0xc74424700000	               mov dword [rsp + 0x70], 0	      4543	dwarf2.c	FUNCTION_68
0x40052e0	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      4701	dwarf2.c	FUNCTION_68	ELSE_4	IF_23
0x40052e5	          0x833800	                      cmp dword [rax], 0	      4701	dwarf2.c	FUNCTION_68	ELSE_4	IF_23
0x40052e8	            0x7415	                            je 0x40052ff	      4701	dwarf2.c	FUNCTION_68	ELSE_4	IF_23
0x40052ea	    0xc74424700100	               mov dword [rsp + 0x70], 1	      4703	dwarf2.c	FUNCTION_68	ELSE_4	IF_23
0x40052f2	      0xe9e20a0000	                           jmp 0x4005dd9	      4703	dwarf2.c	FUNCTION_68	ELSE_4	IF_23
0x40052f7	    0xc74424700000	               mov dword [rsp + 0x70], 0	      4543	dwarf2.c	FUNCTION_68
0x40052ff	    0x83bc24700100	              cmp dword [rsp + 0x170], 0	      4711	dwarf2.c	FUNCTION_68	IF_24
0x4005307	     0xf845f0a0000	                            je 0x4005d6c	      4711	dwarf2.c	FUNCTION_68	IF_24
0x400530d	    0x8b8424700100	           mov eax, dword [rsp + 0x170] 	      4713	dwarf2.c	FUNCTION_68	CALL_12
0x4005314	          0x83e804	                              sub eax, 4	      4713	dwarf2.c	FUNCTION_68	CALL_12
0x4005317	      0xa9fbffffff	                    test eax, 0xfffffffb	      4713	dwarf2.c	FUNCTION_68	CALL_12
0x400531c	     0xf84550a0000	                            je 0x4005d77	      4713	dwarf2.c	FUNCTION_68	CALL_12
0x4005322	      0xbe69120000	                         mov esi, 0x1269	      4713	dwarf2.c	FUNCTION_68	CALL_12
0x4005327	      0xbf00000000	                              mov edi, 0	      4713	dwarf2.c	FUNCTION_68	CALL_12
0x400532c	      0xe800000000	                          call 0x4005331	      4713	dwarf2.c	FUNCTION_68	CALL_12
0x4005331	      0xe9410a0000	                           jmp 0x4005d77	      4713	dwarf2.c	FUNCTION_68	CALL_12
0x4005336	        0x498b7f30	            mov rdi, qword [r15 + 0x30] 	      4722	dwarf2.c	FUNCTION_68	WHILE_1	CALL_13
0x400533a	          0x4c89e6	                            mov rsi, r12	      4722	dwarf2.c	FUNCTION_68	WHILE_1	CALL_13
0x400533d	      0xe820adffff	                   call sym.read_4_bytes	      4722	dwarf2.c	FUNCTION_68	WHILE_1	CALL_13
0x4005342	            0x89c0	                            mov eax, eax	      4722	dwarf2.c	FUNCTION_68	WHILE_1	CALL_13
0x4005344	          0x4839d8	                            cmp rax, rbx	      4725	dwarf2.c	FUNCTION_68	WHILE_1	IF_25
0x4005347	            0x751c	                           jne 0x4005365	      4725	dwarf2.c	FUNCTION_68	WHILE_1	IF_25
0x4005349	        0x498b5720	            mov rdx, qword [r15 + 0x20] 	      4728	dwarf2.c	FUNCTION_68	WHILE_1	IF_25	CALL_14
0x400534d	        0x498b4718	            mov rax, qword [r15 + 0x18] 	      4728	dwarf2.c	FUNCTION_68	WHILE_1	IF_25	CALL_14
0x4005351	        0x488d7004	                      lea rsi, [rax + 4]	      4728	dwarf2.c	FUNCTION_68	WHILE_1	IF_25	CALL_14
0x4005355	        0x498b7f30	            mov rdi, qword [r15 + 0x30] 	      4728	dwarf2.c	FUNCTION_68	WHILE_1	IF_25	CALL_14
0x4005359	      0xe826adffff	                   call sym.read_8_bytes	      4728	dwarf2.c	FUNCTION_68	WHILE_1	IF_25	CALL_14
0x400535e	      0x498347180c	             add qword [r15 + 0x18], 0xc	      4729	dwarf2.c	FUNCTION_68	WHILE_1	IF_25
0x4005363	            0xeb44	                           jmp 0x40053a9	      4729	dwarf2.c	FUNCTION_68	WHILE_1	IF_25
0x4005365	          0x4885c0	                           test rax, rax	      4734	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_5	IF_26
0x4005368	            0x751e	                           jne 0x4005388	      4734	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_5	IF_26
0x400536a	        0x498b5720	            mov rdx, qword [r15 + 0x20] 	      4737	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_5	IF_26	CALL_15
0x400536e	        0x498b4718	            mov rax, qword [r15 + 0x18] 	      4737	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_5	IF_26	CALL_15
0x4005372	        0x488d7004	                      lea rsi, [rax + 4]	      4737	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_5	IF_26	CALL_15
0x4005376	        0x498b7f30	            mov rdi, qword [r15 + 0x30] 	      4737	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_5	IF_26	CALL_15
0x400537a	      0xe8e3acffff	                   call sym.read_4_bytes	      4737	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_5	IF_26	CALL_15
0x400537f	            0x89c0	                            mov eax, eax	      4737	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_5	IF_26	CALL_15
0x4005381	      0x4983471808	               add qword [r15 + 0x18], 8	      4738	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_5	IF_26
0x4005386	            0xeb21	                           jmp 0x40053a9	      4738	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_5	IF_26
0x4005388	          0x4989c6	                            mov r14, rax	      4738	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_5	IF_26
0x400538b	    0x83bc24700100	              cmp dword [rsp + 0x170], 8	      4749	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_6	IF_27
0x4005393	            0x750a	                           jne 0x400539f	      4749	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_6	IF_27
0x4005395	      0x4983471804	               add qword [r15 + 0x18], 4	      4752	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_6	IF_27
0x400539a	      0xe9760b0000	                           jmp 0x4005f15	      4752	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_6	IF_27
0x400539f	      0x4983471804	               add qword [r15 + 0x18], 4	      4755	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7
0x40053a4	      0xe96c0b0000	                           jmp 0x4005f15	      4755	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7
0x40053a9	          0x4885c0	                           test rax, rax	      4757	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28
0x40053ac	     0xf84f2090000	                            je 0x4005da4	      4757	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28
0x40053b2	          0x4989c6	                            mov r14, rax	      4757	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28
0x40053b5	    0xc74424100800	               mov dword [rsp + 0x10], 8	      4757	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28
0x40053bd	        0x498b5f18	            mov rbx, qword [r15 + 0x18] 	      4762	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_29
0x40053c1	        0x4a8d0433	                    lea rax, [rbx + r14]	      4762	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_29
0x40053c5	    0x488984248000	             mov qword [rsp + 0x80], rax	      4762	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_29
0x40053cd	        0x493b4720	            cmp rax, qword [r15 + 0x20] 	      4762	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_29
0x40053d1	     0xf87fd0a0000	                            ja 0x4005ed4	      4762	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_29
0x40053d7	        0x498b7730	            mov rsi, qword [r15 + 0x30] 	      3352	dwarf2.c	FUNCTION_46
0x40053db	          0x4889f7	                            mov rdi, rsi	      3352	dwarf2.c	FUNCTION_46
0x40053de	    0x4889b4249000	             mov qword [rsp + 0x90], rsi	      3352	dwarf2.c	FUNCTION_46
0x40053e6	          0x4889c2	                            mov rdx, rax	      3356	dwarf2.c	FUNCTION_46	CALL_1
0x40053e9	          0x4889de	                            mov rsi, rbx	      3356	dwarf2.c	FUNCTION_46	CALL_1
0x40053ec	      0xe84facffff	                   call sym.read_2_bytes	      3356	dwarf2.c	FUNCTION_46	CALL_1
0x40053f1	            0x89c1	                            mov ecx, eax	      3356	dwarf2.c	FUNCTION_46	CALL_1
0x40053f3	    0x8984249c0000	             mov dword [rsp + 0x9c], eax	      3356	dwarf2.c	FUNCTION_46	CALL_1
0x40053fa	          0x83e802	                              sub eax, 2	      3358	dwarf2.c	FUNCTION_46	IF_1
0x40053fd	          0x83f803	                              cmp eax, 3	      3358	dwarf2.c	FUNCTION_46	IF_1
0x4005400	            0x763f	                           jbe 0x4005441	      3358	dwarf2.c	FUNCTION_46	IF_1
0x4005402	            0x85c9	                           test ecx, ecx	      3364	dwarf2.c	FUNCTION_46	IF_1	IF_2
0x4005404	     0xf84cf090000	                            je 0x4005dd9	      3364	dwarf2.c	FUNCTION_46	IF_1	IF_2
0x400540a	      0xba05000000	                              mov edx, 5	      3367	dwarf2.c	FUNCTION_46	IF_1	IF_2	CALL_3
0x400540f	      0xbe00000000	                              mov esi, 0	      3367	dwarf2.c	FUNCTION_46	IF_1	IF_2	CALL_3
0x4005414	      0xbf00000000	                              mov edi, 0	      3367	dwarf2.c	FUNCTION_46	IF_1	IF_2	CALL_3
0x4005419	      0xe800000000	                          call 0x400541e	      3367	dwarf2.c	FUNCTION_46	IF_1	IF_2	CALL_3
0x400541e	    0x8bb4249c0000	            mov esi, dword [rsp + 0x9c] 	      3366	dwarf2.c	FUNCTION_46	IF_1	IF_2	CALL_2
0x4005425	          0x4889c7	                            mov rdi, rax	      3366	dwarf2.c	FUNCTION_46	IF_1	IF_2	CALL_2
0x4005428	      0xb800000000	                              mov eax, 0	      3366	dwarf2.c	FUNCTION_46	IF_1	IF_2	CALL_2
0x400542d	      0xe800000000	                          call 0x4005432	      3366	dwarf2.c	FUNCTION_46	IF_1	IF_2	CALL_2
0x4005432	      0xbf11000000	                           mov edi, 0x11	      3369	dwarf2.c	FUNCTION_46	IF_1	IF_2	CALL_4
0x4005437	      0xe800000000	                          call 0x400543c	      3369	dwarf2.c	FUNCTION_46	IF_1	IF_2	CALL_4
0x400543c	      0xe998090000	                           jmp 0x4005dd9	      3369	dwarf2.c	FUNCTION_46	IF_1	IF_2	CALL_4
0x4005441	    0x83bc249c0000	               cmp dword [rsp + 0x9c], 4	      3374	dwarf2.c	FUNCTION_46	IF_3
0x4005449	            0x7717	                            ja 0x4005462	      3374	dwarf2.c	FUNCTION_46	IF_3
0x400544b	        0x488d6b02	                      lea rbp, [rbx + 2]	      3357	dwarf2.c	FUNCTION_46
0x400544f	    0x41bd01000000	                             mov r13d, 1	      3375	dwarf2.c	FUNCTION_46	IF_3
0x4005455	    0xc78424880000	     mov dword [rsp + 0x88], 0xffffffff 	      3342	dwarf2.c	FUNCTION_46
0x4005460	            0xeb43	                           jmp 0x40054a5	      3342	dwarf2.c	FUNCTION_46
0x4005462	        0x488d4303	                      lea rax, [rbx + 3]	       588	dwarf2.c	FUNCTION_6	IF_1
0x4005466	      0xba00000000	                              mov edx, 0	       589	dwarf2.c	FUNCTION_6	IF_1
0x400546b	    0x483984248000	            cmp qword [rsp + 0x80], rax 	       588	dwarf2.c	FUNCTION_6	IF_1
0x4005473	            0x7204	                            jb 0x4005479	       588	dwarf2.c	FUNCTION_6	IF_1
0x4005475	         0xfb65302	               movzx edx, byte [rbx + 2]	       590	dwarf2.c	FUNCTION_6	CALL_1
0x4005479	        0x488d6b04	                      lea rbp, [rbx + 4]	       588	dwarf2.c	FUNCTION_6	IF_1
0x400547d	    0x4839ac248000	            cmp qword [rsp + 0x80], rbp 	       588	dwarf2.c	FUNCTION_6	IF_1
0x4005485	            0x7210	                            jb 0x4005497	       588	dwarf2.c	FUNCTION_6	IF_1
0x4005487	         0xfb64303	               movzx eax, byte [rbx + 3]	       590	dwarf2.c	FUNCTION_6	CALL_1
0x400548b	    0x898424880000	             mov dword [rsp + 0x88], eax	       590	dwarf2.c	FUNCTION_6	CALL_1
0x4005492	          0x4189d5	                           mov r13d, edx	      3378	dwarf2.c	FUNCTION_46	ELSE_1	CALL_5
0x4005495	            0xeb0e	                           jmp 0x40054a5	      3378	dwarf2.c	FUNCTION_46	ELSE_1	CALL_5
0x4005497	          0x4189d5	                           mov r13d, edx	      3378	dwarf2.c	FUNCTION_46	ELSE_1	CALL_5
0x400549a	    0xc78424880000	               mov dword [rsp + 0x88], 0	       589	dwarf2.c	FUNCTION_6	IF_1
0x40054a5	        0x8b442410	            mov eax, dword [rsp + 0x10] 	      3385	dwarf2.c	FUNCTION_46	CALL_7
0x40054a9	          0x83e804	                              sub eax, 4	      3385	dwarf2.c	FUNCTION_46	CALL_7
0x40054ac	      0xa9fbffffff	                    test eax, 0xfffffffb	      3385	dwarf2.c	FUNCTION_46	CALL_7
0x40054b1	            0x740f	                            je 0x40054c2	      3385	dwarf2.c	FUNCTION_46	CALL_7
0x40054b3	      0xbe390d0000	                          mov esi, 0xd39	      3385	dwarf2.c	FUNCTION_46	CALL_7
0x40054b8	      0xbf00000000	                              mov edi, 0	      3385	dwarf2.c	FUNCTION_46	CALL_7
0x40054bd	      0xe800000000	                          call 0x40054c2	      3385	dwarf2.c	FUNCTION_46	CALL_7
0x40054c2	      0x837c241004	               cmp dword [rsp + 0x10], 4	      3386	dwarf2.c	FUNCTION_46	IF_4
0x40054c7	            0x751c	                           jne 0x40054e5	      3386	dwarf2.c	FUNCTION_46	IF_4
0x40054c9	    0x488b94248000	            mov rdx, qword [rsp + 0x80] 	      3387	dwarf2.c	FUNCTION_46	CALL_8
0x40054d1	          0x4889ee	                            mov rsi, rbp	      3387	dwarf2.c	FUNCTION_46	CALL_8
0x40054d4	    0x488bbc249000	            mov rdi, qword [rsp + 0x90] 	      3387	dwarf2.c	FUNCTION_46	CALL_8
0x40054dc	      0xe881abffff	                   call sym.read_4_bytes	      3387	dwarf2.c	FUNCTION_46	CALL_8
0x40054e1	            0x89c3	                            mov ebx, eax	      3387	dwarf2.c	FUNCTION_46	CALL_8
0x40054e3	            0xeb1b	                           jmp 0x4005500	      3387	dwarf2.c	FUNCTION_46	CALL_8
0x40054e5	    0x488b94248000	            mov rdx, qword [rsp + 0x80] 	      3389	dwarf2.c	FUNCTION_46	CALL_9
0x40054ed	          0x4889ee	                            mov rsi, rbp	      3389	dwarf2.c	FUNCTION_46	CALL_9
0x40054f0	    0x488bbc249000	            mov rdi, qword [rsp + 0x90] 	      3389	dwarf2.c	FUNCTION_46	CALL_9
0x40054f8	      0xe887abffff	                   call sym.read_8_bytes	      3389	dwarf2.c	FUNCTION_46	CALL_9
0x40054fd	          0x4889c3	                            mov rbx, rax	      3389	dwarf2.c	FUNCTION_46	CALL_9
0x4005500	        0x8b442410	            mov eax, dword [rsp + 0x10] 	      3390	dwarf2.c	FUNCTION_46
0x4005504	      0x488d4c0500	                    lea rcx, [rbp + rax]	      3390	dwarf2.c	FUNCTION_46
0x4005509	    0x48898c24a800	             mov qword [rsp + 0xa8], rcx	      3390	dwarf2.c	FUNCTION_46
0x4005511	    0x83bc249c0000	               cmp dword [rsp + 0x9c], 4	      3392	dwarf2.c	FUNCTION_46	IF_5
0x4005519	            0x7724	                            ja 0x400553f	      3392	dwarf2.c	FUNCTION_46	IF_5
0x400551b	        0x488d5101	                      lea rdx, [rcx + 1]	       588	dwarf2.c	FUNCTION_6	IF_1
0x400551f	    0x483994248000	            cmp qword [rsp + 0x80], rdx 	       588	dwarf2.c	FUNCTION_6	IF_1
0x4005527	     0xf82f5090000	                            jb 0x4005f22	       588	dwarf2.c	FUNCTION_6	IF_1
0x400552d	           0xfb609	                   movzx ecx, byte [rcx]	       590	dwarf2.c	FUNCTION_6	CALL_1
0x4005530	    0x898c24880000	             mov dword [rsp + 0x88], ecx	       590	dwarf2.c	FUNCTION_6	CALL_1
0x4005537	    0x48899424a800	             mov qword [rsp + 0xa8], rdx	      3395	dwarf2.c	FUNCTION_46	IF_5
0x400553f	        0x4183fd02	                             cmp r13d, 2	      3398	dwarf2.c	FUNCTION_46	IF_6
0x4005543	            0x752a	                           jne 0x400556f	      3398	dwarf2.c	FUNCTION_46	IF_6
0x4005545	            0xeb13	                           jmp 0x400555a	      3398	dwarf2.c	FUNCTION_46	IF_6
0x4005547	    0x48899424a800	             mov qword [rsp + 0xa8], rdx	      3395	dwarf2.c	FUNCTION_46	IF_5
0x400554f	    0xc78424880000	               mov dword [rsp + 0x88], 0	       589	dwarf2.c	FUNCTION_6	IF_1
0x400555a	    0x488bb424a800	            mov rsi, qword [rsp + 0xa8] 	      3404	dwarf2.c	FUNCTION_46	IF_6
0x4005562	      0x488d440608	                lea rax, [rsi + rax + 8]	      3404	dwarf2.c	FUNCTION_46	IF_6
0x4005567	    0x48898424a800	             mov qword [rsp + 0xa8], rax	      3404	dwarf2.c	FUNCTION_46	IF_6
0x400556f	    0x83bc24880000	               cmp dword [rsp + 0x88], 8	      3407	dwarf2.c	FUNCTION_46	IF_7
0x4005577	            0x763c	                           jbe 0x40055b5	      3407	dwarf2.c	FUNCTION_46	IF_7
0x4005579	      0xba05000000	                              mov edx, 5	      3411	dwarf2.c	FUNCTION_46	IF_7	CALL_12
0x400557e	      0xbe00000000	                              mov esi, 0	      3411	dwarf2.c	FUNCTION_46	IF_7	CALL_12
0x4005583	      0xbf00000000	                              mov edi, 0	      3411	dwarf2.c	FUNCTION_46	IF_7	CALL_12
0x4005588	      0xe800000000	                          call 0x400558d	      3411	dwarf2.c	FUNCTION_46	IF_7	CALL_12
0x400558d	      0xba08000000	                              mov edx, 8	      3409	dwarf2.c	FUNCTION_46	IF_7	CALL_11
0x4005592	    0x8bb424880000	            mov esi, dword [rsp + 0x88] 	      3409	dwarf2.c	FUNCTION_46	IF_7	CALL_11
0x4005599	          0x4889c7	                            mov rdi, rax	      3409	dwarf2.c	FUNCTION_46	IF_7	CALL_11
0x400559c	      0xb800000000	                              mov eax, 0	      3409	dwarf2.c	FUNCTION_46	IF_7	CALL_11
0x40055a1	      0xe800000000	                          call 0x40055a6	      3409	dwarf2.c	FUNCTION_46	IF_7	CALL_11
0x40055a6	      0xbf11000000	                           mov edi, 0x11	      3415	dwarf2.c	FUNCTION_46	IF_7	CALL_13
0x40055ab	      0xe800000000	                          call 0x40055b0	      3415	dwarf2.c	FUNCTION_46	IF_7	CALL_13
0x40055b0	      0xe924080000	                           jmp 0x4005dd9	      3415	dwarf2.c	FUNCTION_46	IF_7	CALL_13
0x40055b5	    0x8bb424880000	            mov esi, dword [rsp + 0x88] 	      3419	dwarf2.c	FUNCTION_46	IF_8
0x40055bc	            0x89f0	                            mov eax, esi	      3419	dwarf2.c	FUNCTION_46	IF_8
0x40055be	          0x83e802	                              sub eax, 2	      3419	dwarf2.c	FUNCTION_46	IF_8
0x40055c1	      0xa9fdffffff	                    test eax, 0xfffffffd	      3419	dwarf2.c	FUNCTION_46	IF_8
0x40055c6	            0x742a	                            je 0x40055f2	      3419	dwarf2.c	FUNCTION_46	IF_8
0x40055c8	          0x83fe08	                              cmp esi, 8	      3419	dwarf2.c	FUNCTION_46	IF_8
0x40055cb	            0x7425	                            je 0x40055f2	      3419	dwarf2.c	FUNCTION_46	IF_8
0x40055cd	    0x8bb424880000	            mov esi, dword [rsp + 0x88] 	      3421	dwarf2.c	FUNCTION_46	IF_8	CALL_14
0x40055d4	      0xbf00000000	                              mov edi, 0	      3421	dwarf2.c	FUNCTION_46	IF_8	CALL_14
0x40055d9	      0xb800000000	                              mov eax, 0	      3421	dwarf2.c	FUNCTION_46	IF_8	CALL_14
0x40055de	      0xe800000000	                          call 0x40055e3	      3421	dwarf2.c	FUNCTION_46	IF_8	CALL_14
0x40055e3	      0xbf11000000	                           mov edi, 0x11	      3424	dwarf2.c	FUNCTION_46	IF_8	CALL_15
0x40055e8	      0xe800000000	                          call 0x40055ed	      3424	dwarf2.c	FUNCTION_46	IF_8	CALL_15
0x40055ed	      0xe9e7070000	                           jmp 0x4005dd9	      3424	dwarf2.c	FUNCTION_46	IF_8	CALL_15
0x40055f2	        0x498b5778	            mov rdx, qword [r15 + 0x78] 	       954	dwarf2.c	ELSE_1	FUNCTION_19	IF_1	CALL_1
0x40055f6	        0x498b7710	            mov rsi, qword [r15 + 0x10] 	       954	dwarf2.c	ELSE_1	FUNCTION_19	IF_1	CALL_1
0x40055fa	    0x4c8b8c24b800	              mov r9, qword [rsp + 0xb8]	       954	dwarf2.c	ELSE_1	FUNCTION_19	IF_1	CALL_1
0x4005602	    0x4d8d87800000	                    lea r8, [r15 + 0x80]	       954	dwarf2.c	ELSE_1	FUNCTION_19	IF_1	CALL_1
0x4005609	          0x4889d9	                            mov rcx, rbx	       954	dwarf2.c	ELSE_1	FUNCTION_19	IF_1	CALL_1
0x400560c	    0x488bac249000	            mov rbp, qword [rsp + 0x90] 	       954	dwarf2.c	ELSE_1	FUNCTION_19	IF_1	CALL_1
0x4005614	          0x4889ef	                            mov rdi, rbp	       954	dwarf2.c	ELSE_1	FUNCTION_19	IF_1	CALL_1
0x4005617	      0xe80cb0ffff	                   call sym.read_section	       954	dwarf2.c	ELSE_1	FUNCTION_19	IF_1	CALL_1
0x400561c	            0x85c0	                           test eax, eax	       954	dwarf2.c	ELSE_1	FUNCTION_19	IF_1	CALL_1
0x400561e	     0xf84b5070000	                            je 0x4005dd9	       954	dwarf2.c	ELSE_1	FUNCTION_19	IF_1	CALL_1
0x4005624	    0x493b9f880000	            cmp rbx, qword [r15 + 0x88] 	       959	dwarf2.c	ELSE_1	FUNCTION_19	IF_2
0x400562b	     0xf83a8070000	                           jae 0x4005dd9	       959	dwarf2.c	ELSE_1	FUNCTION_19	IF_2
0x4005631	      0xbec8030000	                          mov esi, 0x3c8	       963	dwarf2.c	ELSE_1	FUNCTION_19	CALL_2
0x4005636	          0x4889ef	                            mov rdi, rbp	       963	dwarf2.c	ELSE_1	FUNCTION_19	CALL_2
0x4005639	      0xe800000000	                          call 0x400563e	       963	dwarf2.c	ELSE_1	FUNCTION_19	CALL_2
0x400563e	    0x48898424b000	             mov qword [rsp + 0xb0], rax	       963	dwarf2.c	ELSE_1	FUNCTION_19	CALL_2
0x4005646	          0x4885c0	                           test rax, rax	       964	dwarf2.c	ELSE_1	FUNCTION_19	IF_3
0x4005649	     0xf848a070000	                            je 0x4005dd9	       964	dwarf2.c	ELSE_1	FUNCTION_19	IF_3
0x400564f	    0x498b87800000	            mov rax, qword [r15 + 0x80] 	       967	dwarf2.c	ELSE_1	FUNCTION_19
0x4005656	          0x4801c3	                            add rbx, rax	       967	dwarf2.c	ELSE_1	FUNCTION_19
0x4005659	    0x490387880000	             add rax, qword [r15 + 0x88]	       968	dwarf2.c	ELSE_1	FUNCTION_19
0x4005660	          0x4989c5	                            mov r13, rax	       968	dwarf2.c	ELSE_1	FUNCTION_19
0x4005663	          0x4989c0	                             mov r8, rax	       969	dwarf2.c	ELSE_1	FUNCTION_19	CALL_3
0x4005666	      0xb900000000	                              mov ecx, 0	       969	dwarf2.c	ELSE_1	FUNCTION_19	CALL_3
0x400566b	    0x488d9424f000	                   lea rdx, [rsp + 0xf0]	       969	dwarf2.c	ELSE_1	FUNCTION_19	CALL_3
0x4005673	          0x4889de	                            mov rsi, rbx	       969	dwarf2.c	ELSE_1	FUNCTION_19	CALL_3
0x4005676	          0x4889ef	                            mov rdi, rbp	       969	dwarf2.c	ELSE_1	FUNCTION_19	CALL_3
0x4005679	      0xe800000000	                          call 0x400567e	       969	dwarf2.c	ELSE_1	FUNCTION_19	CALL_3
0x400567e	    0x898424980000	             mov dword [rsp + 0x98], eax	       969	dwarf2.c	ELSE_1	FUNCTION_19	CALL_3
0x4005685	    0x8b9424f00000	            mov edx, dword [rsp + 0xf0] 	       971	dwarf2.c	ELSE_1	FUNCTION_19
0x400568c	          0x4801d3	                            add rbx, rdx	       971	dwarf2.c	ELSE_1	FUNCTION_19
0x400568f	            0x85c0	                           test eax, eax	       974	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4005691	     0xf84d7080000	                            je 0x4005f6e	       974	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4005697	    0x4c89b424c000	             mov qword [rsp + 0xc0], r14	       974	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x400569f	    0x4c89bc24a000	             mov qword [rsp + 0xa0], r15	       974	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x40056a7	    0x4c89a424c800	             mov qword [rsp + 0xc8], r12	       974	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x40056af	          0x4989ef	                            mov r15, rbp	       974	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x40056b2	          0x4d89ee	                            mov r14, r13	       974	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x40056b5	      0xbe20000000	                           mov esi, 0x20	       977	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_4
0x40056ba	          0x4c89ff	                            mov rdi, r15	       977	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_4
0x40056bd	      0xe800000000	                          call 0x40056c2	       977	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_4
0x40056c2	          0x4889c5	                            mov rbp, rax	       977	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_4
0x40056c5	          0x4885c0	                           test rax, rax	       978	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	IF_4
0x40056c8	     0xf84f9060000	                            je 0x4005dc7	       978	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	IF_4
0x40056ce	    0x8b8424980000	            mov eax, dword [rsp + 0x98] 	       982	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x40056d5	          0x894500	                    mov dword [rbp], eax	       982	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x40056d8	          0x4d89f0	                             mov r8, r14	       984	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_5
0x40056db	      0xb900000000	                              mov ecx, 0	       984	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_5
0x40056e0	    0x488d9424f000	                   lea rdx, [rsp + 0xf0]	       984	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_5
0x40056e8	          0x4889de	                            mov rsi, rbx	       984	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_5
0x40056eb	          0x4c89ff	                            mov rdi, r15	       984	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_5
0x40056ee	      0xe800000000	                          call 0x40056f3	       984	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_5
0x40056f3	          0x894504	                mov dword [rbp + 4], eax	       983	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x40056f6	    0x8b8424f00000	            mov eax, dword [rsp + 0xf0] 	       986	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x40056fd	          0x4801d8	                            add rax, rbx	       986	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4005700	        0x488d5801	                      lea rbx, [rax + 1]	       588	dwarf2.c	FUNCTION_6	IF_1
0x4005704	      0xba00000000	                              mov edx, 0	       589	dwarf2.c	FUNCTION_6	IF_1
0x4005709	          0x4939de	                            cmp r14, rbx	       588	dwarf2.c	FUNCTION_6	IF_1
0x400570c	            0x7203	                            jb 0x4005711	       588	dwarf2.c	FUNCTION_6	IF_1
0x400570e	           0xfb610	                   movzx edx, byte [rax]	       590	dwarf2.c	FUNCTION_6	CALL_1
0x4005711	          0x895508	                mov dword [rbp + 8], edx	       987	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_6
0x4005714	          0x4d89f0	                             mov r8, r14	       996	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	CALL_7
0x4005717	      0xb900000000	                              mov ecx, 0	       996	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	CALL_7
0x400571c	    0x488d9424f000	                   lea rdx, [rsp + 0xf0]	       996	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	CALL_7
0x4005724	          0x4889de	                            mov rsi, rbx	       996	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	CALL_7
0x4005727	          0x4c89ff	                            mov rdi, r15	       996	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	CALL_7
0x400572a	      0xe800000000	                          call 0x400572f	       996	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	CALL_7
0x400572f	          0x4989c5	                            mov r13, rax	       996	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	CALL_7
0x4005732	    0x8b8424f00000	            mov eax, dword [rsp + 0xf0] 	       998	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x4005739	          0x4801c3	                            add rbx, rax	       998	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x400573c	          0x4d89f0	                             mov r8, r14	       999	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	CALL_8
0x400573f	      0xb900000000	                              mov ecx, 0	       999	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	CALL_8
0x4005744	    0x488d9424f000	                   lea rdx, [rsp + 0xf0]	       999	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	CALL_8
0x400574c	          0x4889de	                            mov rsi, rbx	       999	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	CALL_8
0x400574f	          0x4c89ff	                            mov rdi, r15	       999	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	CALL_8
0x4005752	      0xe800000000	                          call 0x4005757	       999	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	CALL_8
0x4005757	          0x4989c4	                            mov r12, rax	       999	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	CALL_8
0x400575a	    0x8b8424f00000	            mov eax, dword [rsp + 0xf0] 	      1001	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x4005761	          0x4801c3	                            add rbx, rax	      1001	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x4005764	    0x48c7442408ff	 mov qword [rsp + 8], 0xffffffffffffffff	       994	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x400576d	        0x4183fc21	                          cmp r12d, 0x21	      1002	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_5
0x4005771	            0x752a	                           jne 0x400579d	      1002	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_5
0x4005773	          0x4d89f0	                             mov r8, r14	      1004	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_5	CALL_9
0x4005776	      0xb901000000	                              mov ecx, 1	      1004	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_5	CALL_9
0x400577b	    0x488d9424f000	                   lea rdx, [rsp + 0xf0]	      1004	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_5	CALL_9
0x4005783	          0x4889de	                            mov rsi, rbx	      1004	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_5	CALL_9
0x4005786	          0x4c89ff	                            mov rdi, r15	      1004	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_5	CALL_9
0x4005789	      0xe800000000	                          call 0x400578e	      1004	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_5	CALL_9
0x400578e	      0x4889442408	                mov qword [rsp + 8], rax	      1004	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_5	CALL_9
0x4005793	    0x8b8424f00000	            mov eax, dword [rsp + 0xf0] 	      1007	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_5
0x400579a	          0x4801c3	                            add rbx, rax	      1007	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_5
0x400579d	          0x4585ed	                         test r13d, r13d	      1010	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_6
0x40057a0	     0xf849d000000	                            je 0x4005843	      1010	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_6
0x40057a6	          0x8b450c	              mov eax, dword [rbp + 0xc]	      1013	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7
0x40057a9	            0xa803	                              test al, 3	      1013	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7
0x40057ab	            0x755c	                           jne 0x4005809	      1013	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7
0x40057ad	          0x8d7004	                      lea esi, [rax + 4]	      1017	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7
0x40057b0	        0x48c1e604	                              shl rsi, 4	      1019	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	CALL_10
0x40057b4	        0x488b7d10	            mov rdi, qword [rbp + 0x10] 	      1019	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	CALL_10
0x40057b8	      0xe800000000	                          call 0x40057bd	      1019	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	CALL_10
0x40057bd	          0x4885c0	                           test rax, rax	      1020	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8
0x40057c0	            0x7543	                           jne 0x4005805	      1020	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8
0x40057c2	    0x4c8bbc24a000	            mov r15, qword [rsp + 0xa0] 	      1020	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8
0x40057ca	    0x4c8ba424b000	            mov r12, qword [rsp + 0xb0] 	      1020	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8
0x40057d2	          0x4c89e5	                            mov rbp, r12	      1020	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8
0x40057d5	    0x4981c4c80300	                          add r12, 0x3c8	      1020	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8
0x40057dc	        0x488b5d00	                    mov rbx, qword [rbp]	      1026	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8	FOR_2
0x40057e0	          0x4885db	                           test rbx, rbx	      1028	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8	FOR_2	WHILE_2
0x40057e3	            0x7412	                            je 0x40057f7	      1028	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8	FOR_2	WHILE_2
0x40057e5	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      1030	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8	FOR_2	WHILE_2	CALL_11
0x40057e9	      0xe800000000	                          call 0x40057ee	      1030	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8	FOR_2	WHILE_2	CALL_11
0x40057ee	        0x488b5b18	            mov rbx, qword [rbx + 0x18] 	      1031	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8	FOR_2	WHILE_2
0x40057f2	          0x4885db	                           test rbx, rbx	      1028	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8	FOR_2	WHILE_2
0x40057f5	            0x75ee	                           jne 0x40057e5	      1028	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8	FOR_2	WHILE_2
0x40057f7	        0x4883c508	                              add rbp, 8	      1028	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8	FOR_2	WHILE_2
0x40057fb	          0x4939ec	                            cmp r12, rbp	      1024	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8	FOR_2
0x40057fe	            0x75dc	                           jne 0x40057dc	      1024	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8	FOR_2
0x4005800	      0xe9d4050000	                           jmp 0x4005dd9	      1024	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8	FOR_2
0x4005805	        0x48894510	            mov qword [rbp + 0x10], rax 	      1036	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7
0x4005809	          0x8b450c	              mov eax, dword [rbp + 0xc]	      1040	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x400580c	        0x48c1e004	                              shl rax, 4	      1040	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x4005810	        0x48034510	             add rax, qword [rbp + 0x10]	      1040	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x4005814	          0x448928	                   mov dword [rax], r13d	      1040	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x4005817	          0x8b450c	              mov eax, dword [rbp + 0xc]	      1042	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x400581a	        0x48c1e004	                              shl rax, 4	      1042	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x400581e	        0x48034510	             add rax, qword [rbp + 0x10]	      1042	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x4005822	        0x44896004	               mov dword [rax + 4], r12d	      1042	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x4005826	          0x8b450c	              mov eax, dword [rbp + 0xc]	      1044	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x4005829	        0x48c1e004	                              shl rax, 4	      1044	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x400582d	        0x48034510	             add rax, qword [rbp + 0x10]	      1044	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x4005831	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1044	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x4005836	        0x48894808	                mov qword [rax + 8], rcx	      1044	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x400583a	        0x83450c01	                add dword [rbp + 0xc], 1	      1045	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x400583e	      0xe9d1feffff	                           jmp 0x4005714	      1045	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x4005843	      0xbabf56cf0e	                      mov edx, 0xecf56bf	      1049	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4005848	    0x8b8424980000	            mov eax, dword [rsp + 0x98] 	      1049	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x400584f	            0xf7e2	                                 mul edx	      1049	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4005851	    0x8bb424980000	            mov esi, dword [rsp + 0x98] 	      1049	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4005858	            0x89f0	                            mov eax, esi	      1049	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x400585a	            0x29d0	                            sub eax, edx	      1049	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x400585c	            0xd1e8	                              shr eax, 1	      1049	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x400585e	             0x1d0	                            add eax, edx	      1049	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4005860	          0xc1e806	                              shr eax, 6	      1049	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4005863	          0x6bc079	                     imul eax, eax, 0x79	      1049	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4005866	            0x89f1	                            mov ecx, esi	      1049	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4005868	            0x29c1	                            sub ecx, eax	      1049	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x400586a	          0x4889c8	                            mov rax, rcx	      1049	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x400586d	    0x4c8bac24b000	            mov r13, qword [rsp + 0xb0] 	      1049	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4005875	      0x498d44c500	                  lea rax, [r13 + rax*8]	      1049	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x400587a	          0x488b10	                    mov rdx, qword [rax]	      1049	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x400587d	        0x48895518	            mov qword [rbp + 0x18], rdx 	      1049	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4005881	          0x488928	                    mov qword [rax], rbp	      1050	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4005884	    0x488bb424a000	            mov rsi, qword [rsp + 0xa0] 	      1059	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	IF_9
0x400588c	            0x89d8	                            mov eax, ebx	      1059	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	IF_9
0x400588e	    0x2b8680000000	             sub eax, dword [rsi + 0x80]	      1059	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	IF_9
0x4005894	    0x483b86880000	            cmp rax, qword [rsi + 0x88] 	      1059	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	IF_9
0x400589b	     0xf839b060000	                           jae 0x4005f3c	      1059	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	IF_9
0x40058a1	          0x4d89f0	                             mov r8, r14	      1062	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_12
0x40058a4	      0xb900000000	                              mov ecx, 0	      1062	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_12
0x40058a9	    0x488d9424f000	                   lea rdx, [rsp + 0xf0]	      1062	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_12
0x40058b1	          0x4889de	                            mov rsi, rbx	      1062	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_12
0x40058b4	          0x4c89ff	                            mov rdi, r15	      1062	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_12
0x40058b7	      0xe800000000	                          call 0x40058bc	      1062	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_12
0x40058bc	          0x4889c5	                            mov rbp, rax	      1062	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_12
0x40058bf	    0x898424980000	             mov dword [rsp + 0x98], eax	      1062	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_12
0x40058c6	    0x8b8424f00000	            mov eax, dword [rsp + 0xf0] 	      1064	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x40058cd	          0x4801c3	                            add rbx, rax	      1064	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x40058d0	          0x4c89ee	                            mov rsi, r13	      1065	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	IF_10	CALL_13
0x40058d3	            0x89ef	                            mov edi, ebp	      1065	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	IF_10	CALL_13
0x40058d5	      0xe817a8ffff	                  call sym.lookup_abbrev	      1065	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	IF_10	CALL_13
0x40058da	          0x4885c0	                           test rax, rax	      1065	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	IF_10	CALL_13
0x40058dd	     0xf8573060000	                           jne 0x4005f56	      1065	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	IF_10	CALL_13
0x40058e3	            0x85ed	                           test ebp, ebp	       974	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x40058e5	     0xf85cafdffff	                           jne 0x40056b5	       974	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x40058eb	    0x4c8bb424c000	            mov r14, qword [rsp + 0xc0] 	       974	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x40058f3	    0x4c8bbc24a000	            mov r15, qword [rsp + 0xa0] 	       974	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x40058fb	    0x4c8ba424c800	            mov r12, qword [rsp + 0xc8] 	       974	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4005903	      0xe966060000	                           jmp 0x4005f6e	       974	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4005908	    0x488bb424b000	            mov rsi, qword [rsp + 0xb0] 	      3445	dwarf2.c	FUNCTION_46	CALL_18
0x4005910	            0x89c7	                            mov edi, eax	      3445	dwarf2.c	FUNCTION_46	CALL_18
0x4005912	      0xe8daa7ffff	                  call sym.lookup_abbrev	      3445	dwarf2.c	FUNCTION_46	CALL_18
0x4005917	          0x4989c5	                            mov r13, rax	      3445	dwarf2.c	FUNCTION_46	CALL_18
0x400591a	          0x4885c0	                           test rax, rax	      3446	dwarf2.c	FUNCTION_46	IF_11
0x400591d	            0x7532	                           jne 0x4005951	      3446	dwarf2.c	FUNCTION_46	IF_11
0x400591f	      0xba05000000	                              mov edx, 5	      3448	dwarf2.c	FUNCTION_46	IF_11	CALL_20
0x4005924	      0xbe00000000	                              mov esi, 0	      3448	dwarf2.c	FUNCTION_46	IF_11	CALL_20
0x4005929	      0xbf00000000	                              mov edi, 0	      3448	dwarf2.c	FUNCTION_46	IF_11	CALL_20
0x400592e	      0xe800000000	                          call 0x4005933	      3448	dwarf2.c	FUNCTION_46	IF_11	CALL_20
0x4005933	            0x89ee	                            mov esi, ebp	      3448	dwarf2.c	FUNCTION_46	IF_11	CALL_20
0x4005935	          0x4889c7	                            mov rdi, rax	      3448	dwarf2.c	FUNCTION_46	IF_11	CALL_20
0x4005938	      0xb800000000	                              mov eax, 0	      3448	dwarf2.c	FUNCTION_46	IF_11	CALL_20
0x400593d	      0xe800000000	                          call 0x4005942	      3448	dwarf2.c	FUNCTION_46	IF_11	CALL_20
0x4005942	      0xbf11000000	                           mov edi, 0x11	      3450	dwarf2.c	FUNCTION_46	IF_11	CALL_21
0x4005947	      0xe800000000	                          call 0x400594c	      3450	dwarf2.c	FUNCTION_46	IF_11	CALL_21
0x400594c	      0xe988040000	                           jmp 0x4005dd9	      3450	dwarf2.c	FUNCTION_46	IF_11	CALL_21
0x4005951	      0xbec0000000	                           mov esi, 0xc0	      3455	dwarf2.c	FUNCTION_46	CALL_22
0x4005956	    0x488bbc249000	            mov rdi, qword [rsp + 0x90] 	      3455	dwarf2.c	FUNCTION_46	CALL_22
0x400595e	      0xe800000000	                          call 0x4005963	      3455	dwarf2.c	FUNCTION_46	CALL_22
0x4005963	          0x4889c5	                            mov rbp, rax	      3455	dwarf2.c	FUNCTION_46	CALL_22
0x4005966	          0x4885c0	                           test rax, rax	      3456	dwarf2.c	FUNCTION_46	IF_12
0x4005969	     0xf846a040000	                            je 0x4005dd9	      3456	dwarf2.c	FUNCTION_46	IF_12
0x400596f	    0x488b84249000	            mov rax, qword [rsp + 0x90] 	      3458	dwarf2.c	FUNCTION_46
0x4005977	        0x48894510	            mov qword [rbp + 0x10], rax 	      3458	dwarf2.c	FUNCTION_46
0x400597b	    0x8b84249c0000	            mov eax, dword [rsp + 0x9c] 	      3459	dwarf2.c	FUNCTION_46
0x4005982	    0x8985a8000000	            mov dword [rbp + 0xa8], eax 	      3459	dwarf2.c	FUNCTION_46
0x4005988	     0xfb684248800	           movzx eax, byte [rsp + 0x88] 	      3460	dwarf2.c	FUNCTION_46
0x4005990	    0x8885ac000000	               mov byte [rbp + 0xac], al	      3460	dwarf2.c	FUNCTION_46
0x4005996	       0xfb6442410	           movzx eax, byte [rsp + 0x10] 	      3461	dwarf2.c	FUNCTION_46
0x400599b	    0x8885ad000000	               mov byte [rbp + 0xad], al	      3461	dwarf2.c	FUNCTION_46
0x40059a1	    0x488b8424b000	            mov rax, qword [rsp + 0xb0] 	      3462	dwarf2.c	FUNCTION_46
0x40059a9	        0x48894538	            mov qword [rbp + 0x38], rax 	      3462	dwarf2.c	FUNCTION_46
0x40059ad	    0x488b84248000	            mov rax, qword [rsp + 0x80] 	      3463	dwarf2.c	FUNCTION_46
0x40059b5	        0x48894570	            mov qword [rbp + 0x70], rax 	      3463	dwarf2.c	FUNCTION_46
0x40059b9	    0x4c89bda00000	            mov qword [rbp + 0xa0], r15 	      3464	dwarf2.c	FUNCTION_46
0x40059c0	        0x4c896558	            mov qword [rbp + 0x58], r12 	      3465	dwarf2.c	FUNCTION_46
0x40059c4	      0x41837d0c00	                cmp dword [r13 + 0xc], 0	      3467	dwarf2.c	FUNCTION_46	FOR_1
0x40059c9	     0xf8476020000	                            je 0x4005c45	      3467	dwarf2.c	FUNCTION_46	FOR_1
0x40059cf	    0x48c744241000	               mov qword [rsp + 0x10], 0	      3467	dwarf2.c	FUNCTION_46	FOR_1
0x40059d8	    0x48c744240800	                  mov qword [rsp + 8], 0	      3467	dwarf2.c	FUNCTION_46	FOR_1
0x40059e1	    0xc78424980000	               mov dword [rsp + 0x98], 0	      3467	dwarf2.c	FUNCTION_46	FOR_1
0x40059ec	    0x41bc00000000	                             mov r12d, 0	      3467	dwarf2.c	FUNCTION_46	FOR_1
0x40059f2	        0x488d4d18	                   lea rcx, [rbp + 0x18]	      3502	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_16	CALL_25
0x40059f6	    0x48898c248800	             mov qword [rsp + 0x88], rcx	      3502	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_16	CALL_25
0x40059fe	    0x4c89b4249000	             mov qword [rsp + 0x90], r14	      3502	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_16	CALL_25
0x4005a06	    0x4c89bc248000	             mov qword [rsp + 0x80], r15	      3502	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_16	CALL_25
0x4005a0e	          0x4989c6	                            mov r14, rax	      3502	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_16	CALL_25
0x4005a11	          0x4489e0	                           mov eax, r12d	      3469	dwarf2.c	FUNCTION_46	FOR_1	CALL_23
0x4005a14	        0x48c1e004	                              shl rax, 4	      3469	dwarf2.c	FUNCTION_46	FOR_1	CALL_23
0x4005a18	        0x49034510	             add rax, qword [r13 + 0x10]	      3469	dwarf2.c	FUNCTION_46	FOR_1	CALL_23
0x4005a1c	            0x8b10	                    mov edx, dword [rax]	      1285	dwarf2.c	FUNCTION_22
0x4005a1e	    0x899424f00000	             mov dword [rsp + 0xf0], edx	      1285	dwarf2.c	FUNCTION_22
0x4005a25	        0x488b5008	                mov rdx, qword [rax + 8]	      1286	dwarf2.c	FUNCTION_22	CALL_1
0x4005a29	          0x8b7004	                mov esi, dword [rax + 4]	      1286	dwarf2.c	FUNCTION_22	CALL_1
0x4005a2c	          0x4d89f1	                             mov r9, r14	      1286	dwarf2.c	FUNCTION_22	CALL_1
0x4005a2f	          0x4989d8	                             mov r8, rbx	      1286	dwarf2.c	FUNCTION_22	CALL_1
0x4005a32	          0x4889e9	                            mov rcx, rbp	      1286	dwarf2.c	FUNCTION_22	CALL_1
0x4005a35	    0x488dbc24f000	                   lea rdi, [rsp + 0xf0]	      1286	dwarf2.c	FUNCTION_22	CALL_1
0x4005a3d	      0xe80bb7ffff	           call sym.read_attribute_value	      1286	dwarf2.c	FUNCTION_22	CALL_1
0x4005a42	          0x4889c3	                            mov rbx, rax	      1286	dwarf2.c	FUNCTION_22	CALL_1
0x4005a45	          0x4885c0	                           test rax, rax	      3470	dwarf2.c	FUNCTION_46	FOR_1	IF_13
0x4005a48	     0xf8483030000	                            je 0x4005dd1	      3470	dwarf2.c	FUNCTION_46	FOR_1	IF_13
0x4005a4e	    0x8b8424f00000	            mov eax, dword [rsp + 0xf0] 	      3475	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4005a55	          0x83f812	                           cmp eax, 0x12	      3475	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4005a58	     0xf84a8000000	                            je 0x4005b06	      3475	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4005a5e	          0x83f812	                           cmp eax, 0x12	      3475	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4005a61	            0x7714	                            ja 0x4005a77	      3475	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4005a63	          0x83f810	                           cmp eax, 0x10	      3475	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4005a66	            0x742f	                            je 0x4005a97	      3475	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4005a68	          0x83f810	                           cmp eax, 0x10	      3475	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4005a6b	            0x7775	                            ja 0x4005ae2	      3475	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4005a6d	          0x83f803	                              cmp eax, 3	      3475	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4005a70	            0x743d	                            je 0x4005aaf	      3475	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4005a72	      0xe971010000	                           jmp 0x4005be8	      3475	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4005a77	          0x83f81b	                           cmp eax, 0x1b	      3475	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4005a7a	     0xf84da000000	                            je 0x4005b5a	      3475	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4005a80	          0x83f855	                           cmp eax, 0x55	      3475	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4005a83	     0xf84a4000000	                            je 0x4005b2d	      3475	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4005a89	          0x83f813	                           cmp eax, 0x13	      3475	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4005a8c	     0xf8556010000	                           jne 0x4005be8	      3475	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4005a92	      0xe946010000	                           jmp 0x4005bdd	      3475	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4005a97	    0xc74550010000	               mov dword [rbp + 0x50], 1	      3478	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4005a9e	    0x488b8424f800	            mov rax, qword [rsp + 0xf8] 	      3479	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4005aa6	        0x48894560	            mov qword [rbp + 0x60], rax 	      3479	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4005aaa	      0xe939010000	                           jmp 0x4005be8	      3479	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4005aaf	    0x8b8424f40000	            mov eax, dword [rsp + 0xf4] 	      3483	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_14	CALL_24
0x4005ab6	          0x83f81f	                           cmp eax, 0x1f	      1077	dwarf2.c	FUNCTION_20
0x4005ab9	            0x770b	                            ja 0x4005ac6	      1077	dwarf2.c	FUNCTION_20
0x4005abb	      0xb900410080	                     mov ecx, 0x80004100	      1078	dwarf2.c	FUNCTION_20
0x4005ac0	        0x480fa3c1	                             bt rcx, rax	      1078	dwarf2.c	FUNCTION_20
0x4005ac4	            0x720b	                            jb 0x4005ad1	      1078	dwarf2.c	FUNCTION_20
0x4005ac6	      0x3d211f0000	                         cmp eax, 0x1f21	      3483	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_14	CALL_24
0x4005acb	     0xf8517010000	                           jne 0x4005be8	      3483	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_14	CALL_24
0x4005ad1	    0x488b8424f800	            mov rax, qword [rsp + 0xf8] 	      3484	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_14
0x4005ad9	        0x48894530	            mov qword [rbp + 0x30], rax 	      3484	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_14
0x4005add	      0xe906010000	                           jmp 0x4005be8	      3484	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_14
0x4005ae2	    0x488b8424f800	            mov rax, qword [rsp + 0xf8] 	      3488	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4005aea	      0x4889442408	                mov qword [rsp + 8], rax	      3488	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4005aef	      0x41837d0411	               cmp dword [r13 + 4], 0x11	      3492	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_15
0x4005af4	     0xf85ee000000	                           jne 0x4005be8	      3492	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_15
0x4005afa	    0x488985b00000	            mov qword [rbp + 0xb0], rax 	      3493	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_15
0x4005b01	      0xe9e2000000	                           jmp 0x4005be8	      3493	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_15
0x4005b06	    0x488b8424f800	            mov rax, qword [rsp + 0xf8] 	      3497	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4005b0e	      0x4889442410	             mov qword [rsp + 0x10], rax	      3497	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4005b13	    0x83bc24f40000	               cmp dword [rsp + 0xf4], 1	      3498	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4005b1b	           0xf95c0	                                setne al	      3498	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4005b1e	           0xfb6c0	                           movzx eax, al	      3498	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4005b21	    0x898424980000	             mov dword [rsp + 0x98], eax	      3498	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4005b28	      0xe9bb000000	                           jmp 0x4005be8	      3498	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4005b2d	    0x488b9424f800	            mov rdx, qword [rsp + 0xf8] 	      3502	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_16	CALL_25
0x4005b35	    0x488bb4248800	            mov rsi, qword [rsp + 0x88] 	      3502	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_16	CALL_25
0x4005b3d	          0x4889ef	                            mov rdi, rbp	      3502	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_16	CALL_25
0x4005b40	      0xe801afffff	                 call sym.read_rangelist	      3502	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_16	CALL_25
0x4005b45	            0x85c0	                           test eax, eax	      3502	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_16	CALL_25
0x4005b47	     0xf859b000000	                           jne 0x4005be8	      3502	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_16	CALL_25
0x4005b4d	    0x4c8bbc248000	            mov r15, qword [rsp + 0x80] 	      3502	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_16	CALL_25
0x4005b55	      0xe97f020000	                           jmp 0x4005dd9	      3502	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_16	CALL_25
0x4005b5a	    0x8b8424f40000	            mov eax, dword [rsp + 0xf4] 	      3511	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_17	CALL_26
0x4005b61	          0x83f81f	                           cmp eax, 0x1f	      1077	dwarf2.c	FUNCTION_20
0x4005b64	            0x770b	                            ja 0x4005b71	      1077	dwarf2.c	FUNCTION_20
0x4005b66	      0xb900410080	                     mov ecx, 0x80004100	      1078	dwarf2.c	FUNCTION_20
0x4005b6b	        0x480fa3c1	                             bt rcx, rax	      1078	dwarf2.c	FUNCTION_20
0x4005b6f	            0x7230	                            jb 0x4005ba1	      1078	dwarf2.c	FUNCTION_20
0x4005b71	      0x3d211f0000	                         cmp eax, 0x1f21	      3511	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_17	CALL_26
0x4005b76	            0x7429	                            je 0x4005ba1	      3511	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_17	CALL_26
0x4005b78	      0xba05000000	                              mov edx, 5	      3514	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_17	CALL_28
0x4005b7d	      0xbe00000000	                              mov esi, 0	      3514	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_17	CALL_28
0x4005b82	      0xbf00000000	                              mov edi, 0	      3514	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_17	CALL_28
0x4005b87	      0xe800000000	                          call 0x4005b8c	      3514	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_17	CALL_28
0x4005b8c	          0x4889c7	                            mov rdi, rax	      3513	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_17	CALL_27
0x4005b8f	      0xb800000000	                              mov eax, 0	      3513	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_17	CALL_27
0x4005b94	      0xe800000000	                          call 0x4005b99	      3513	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_17	CALL_27
0x4005b99	    0x41bf00000000	                             mov r15d, 0	      3513	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_17	CALL_27
0x4005b9f	            0xeb36	                           jmp 0x4005bd7	      3513	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_17	CALL_27
0x4005ba1	    0x4c8bbc24f800	            mov r15, qword [rsp + 0xf8] 	      3508	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4005ba9	          0x4d85ff	                           test r15, r15	      3518	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18
0x4005bac	            0x7429	                            je 0x4005bd7	      3518	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18
0x4005bae	      0xbe3a000000	                           mov esi, 0x3a	      3522	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18	CALL_29
0x4005bb3	          0x4c89ff	                            mov rdi, r15	      3522	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18	CALL_29
0x4005bb6	      0xe800000000	                          call 0x4005bbb	      3522	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18	CALL_29
0x4005bbb	          0x4885c0	                           test rax, rax	      3524	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18	IF_19
0x4005bbe	            0x7417	                            je 0x4005bd7	      3524	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18	IF_19
0x4005bc0	          0x4939c7	                            cmp r15, rax	      3524	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18	IF_19
0x4005bc3	            0x7412	                            je 0x4005bd7	      3524	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18	IF_19
0x4005bc5	        0x8078ff2e	                cmp byte [rax - 1], 0x2e	      3524	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18	IF_19
0x4005bc9	            0x750c	                           jne 0x4005bd7	      3524	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18	IF_19
0x4005bcb	        0x488d5001	                      lea rdx, [rax + 1]	      3525	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18	IF_19
0x4005bcf	        0x8078012f	                cmp byte [rax + 1], 0x2f	      3525	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18	IF_19
0x4005bd3	        0x4c0f44fa	                          cmove r15, rdx	      3525	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18	IF_19
0x4005bd7	        0x4c897d48	            mov qword [rbp + 0x48], r15 	      3527	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4005bdb	            0xeb0b	                           jmp 0x4005be8	      3527	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4005bdd	    0x488b8424f800	            mov rax, qword [rsp + 0xf8] 	      3532	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4005be5	          0x894540	            mov dword [rbp + 0x40], eax 	      3532	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4005be8	        0x4183c401	                             add r12d, 1	      3467	dwarf2.c	FUNCTION_46	FOR_1
0x4005bec	        0x453b650c	            cmp r12d, dword [r13 + 0xc] 	      3467	dwarf2.c	FUNCTION_46	FOR_1
0x4005bf0	     0xf821bfeffff	                            jb 0x4005a11	      3467	dwarf2.c	FUNCTION_46	FOR_1
0x4005bf6	    0x4c8bb4249000	            mov r14, qword [rsp + 0x90] 	      3467	dwarf2.c	FUNCTION_46	FOR_1
0x4005bfe	    0x4c8bbc248000	            mov r15, qword [rsp + 0x80] 	      3467	dwarf2.c	FUNCTION_46	FOR_1
0x4005c06	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      3540	dwarf2.c	FUNCTION_46	IF_20
0x4005c0b	          0x4889f0	                            mov rax, rsi	      3540	dwarf2.c	FUNCTION_46	IF_20
0x4005c0e	      0x4803442408	                add rax, qword [rsp + 8]	      3540	dwarf2.c	FUNCTION_46	IF_20
0x4005c13	    0x83bc24980000	               cmp dword [rsp + 0x98], 0	      3540	dwarf2.c	FUNCTION_46	IF_20
0x4005c1b	          0x4889c1	                            mov rcx, rax	      3540	dwarf2.c	FUNCTION_46	IF_20
0x4005c1e	        0x480f44ce	                          cmove rcx, rsi	      3540	dwarf2.c	FUNCTION_46	IF_20
0x4005c22	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      3540	dwarf2.c	FUNCTION_46	IF_20
0x4005c27	          0x4885c9	                           test rcx, rcx	      3541	dwarf2.c	FUNCTION_46	IF_21
0x4005c2a	            0x7419	                            je 0x4005c45	      3541	dwarf2.c	FUNCTION_46	IF_21
0x4005c2c	        0x488d7518	                   lea rsi, [rbp + 0x18]	      3543	dwarf2.c	FUNCTION_46	IF_21	IF_22	CALL_30
0x4005c30	      0x488b542408	                mov rdx, qword [rsp + 8]	      3543	dwarf2.c	FUNCTION_46	IF_21	IF_22	CALL_30
0x4005c35	          0x4889ef	                            mov rdi, rbp	      3543	dwarf2.c	FUNCTION_46	IF_21	IF_22	CALL_30
0x4005c38	      0xe875abffff	                     call sym.arange_add	      3543	dwarf2.c	FUNCTION_46	IF_21	IF_22	CALL_30
0x4005c3d	            0x85c0	                           test eax, eax	      3543	dwarf2.c	FUNCTION_46	IF_21	IF_22	CALL_30
0x4005c3f	     0xf8494010000	                            je 0x4005dd9	      3543	dwarf2.c	FUNCTION_46	IF_21	IF_22	CALL_30
0x4005c45	        0x48895d68	            mov qword [rbp + 0x68], rbx 	      3547	dwarf2.c	FUNCTION_46
0x4005c49	          0x4c89f0	                            mov rax, r14	      4774	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_31
0x4005c4c	        0x49034718	             add rax, qword [r15 + 0x18]	      4774	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_31
0x4005c50	     0xf8261010000	                            jb 0x4005db7	      4774	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_31
0x4005c56	        0x49894718	             mov qword [r15 + 0x18], rax	      4781	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_8
0x4005c5a	          0x498b07	                    mov rax, qword [r15]	      4783	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_32
0x4005c5d	          0x4885c0	                           test rax, rax	      4783	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_32
0x4005c60	            0x7406	                            je 0x4005c68	      4783	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_32
0x4005c62	        0x48896808	                mov qword [rax + 8], rbp	      4784	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_32
0x4005c66	            0xeb04	                           jmp 0x4005c6c	      4784	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_32
0x4005c68	        0x49896f08	                mov qword [r15 + 8], rbp	      4786	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_9
0x4005c6c	          0x498b07	                    mov rax, qword [r15]	      4788	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28
0x4005c6f	        0x48894500	                    mov qword [rbp], rax	      4788	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28
0x4005c73	          0x49892f	                    mov qword [r15], rbp	      4789	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28
0x4005c76	      0x837c247400	               cmp dword [rsp + 0x74], 0	      4796	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33
0x4005c7b	            0x745c	                            je 0x4005cd9	      4796	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33
0x4005c7d	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x4005c82	        0xf6401808	               test byte [rax + 0x18], 8	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x4005c86	            0x7424	                            je 0x4005cac	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x4005c88	      0x48837d2800	               cmp qword [rbp + 0x28], 0	      4798	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33
0x4005c8d	            0x741d	                            je 0x4005cac	      4798	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33
0x4005c8f	      0x488b742478	            mov rsi, qword [rsp + 0x78] 	      4799	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_17
0x4005c94	          0x4889ef	                            mov rdi, rbp	      4799	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_17
0x4005c97	      0xe82fa5ffff	     call sym.comp_unit_contains_address	      4799	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_17
0x4005c9c	    0xc74424700000	               mov dword [rsp + 0x70], 0	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x4005ca4	            0x85c0	                           test eax, eax	      4799	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_17
0x4005ca6	     0xf848b000000	                            je 0x4005d37	      4799	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_17
0x4005cac	          0x4d89f9	                             mov r9, r15	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x4005caf	      0x4c8b442428	              mov r8, qword [rsp + 0x28]	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x4005cb4	      0x488b4c2468	            mov rcx, qword [rsp + 0x68] 	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x4005cb9	      0x488b542478	            mov rdx, qword [rsp + 0x78] 	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x4005cbe	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x4005cc3	          0x4889ef	                            mov rdi, rbp	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x4005cc6	      0xe8b7ddffff	            call sym.comp_unit_find_line	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x4005ccb	            0x85c0	                           test eax, eax	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x4005ccd	           0xf95c0	                                setne al	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x4005cd0	           0xfb6c0	                           movzx eax, al	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x4005cd3	        0x89442470	             mov dword [rsp + 0x70], eax	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x4005cd7	            0xeb5e	                           jmp 0x4005d37	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x4005cd9	      0x48837d2800	               cmp qword [rbp + 0x28], 0	      4807	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_20
0x4005cde	            0x7419	                            je 0x4005cf9	      4807	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_20
0x4005ce0	      0x488b742478	            mov rsi, qword [rsp + 0x78] 	      4806	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_19
0x4005ce5	          0x4889ef	                            mov rdi, rbp	      4806	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_19
0x4005ce8	      0xe8dea4ffff	     call sym.comp_unit_contains_address	      4806	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_19
0x4005ced	    0xc74424700000	               mov dword [rsp + 0x70], 0	      4807	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_20
0x4005cf5	            0x85c0	                           test eax, eax	      4806	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_19
0x4005cf7	            0x743e	                            je 0x4005d37	      4806	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_19
0x4005cf9	        0x4883ec08	                              sub rsp, 8	      4807	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_20
0x4005cfd	            0x4157	                                push r15	      4807	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_20
0x4005cff	      0x4c8b4c2450	              mov r9, qword [rsp + 0x50]	      4807	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_20
0x4005d04	      0x4c8b442438	              mov r8, qword [rsp + 0x38]	      4807	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_20
0x4005d09	    0x488d8c24f000	                   lea rcx, [rsp + 0xf0]	      4807	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_20
0x4005d11	      0x488b542478	            mov rdx, qword [rsp + 0x78] 	      4807	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_20
0x4005d16	    0x488bb4248800	            mov rsi, qword [rsp + 0x88] 	      4807	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_20
0x4005d1e	          0x4889ef	                            mov rdi, rbp	      4807	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_20
0x4005d21	      0xe85fe1ffff	    call sym.comp_unit_find_nearest_line	      4807	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_20
0x4005d26	        0x4883c410	                           add rsp, 0x10	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x4005d2a	          0x4885c0	                           test rax, rax	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x4005d2d	           0xf95c0	                                setne al	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x4005d30	           0xfb6c0	                           movzx eax, al	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x4005d33	        0x89442470	             mov dword [rsp + 0x70], eax	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x4005d37	        0x498b5738	            mov rdx, qword [r15 + 0x38] 	      4815	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_34
0x4005d3b	        0x498b4718	            mov rax, qword [r15 + 0x18] 	      4814	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_34
0x4005d3f	        0x492b4740	             sub rax, qword [r15 + 0x40]	      4814	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_34
0x4005d43	        0x483b4238	            cmp rax, qword [rdx + 0x38] 	      4814	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_34
0x4005d47	            0x751a	                           jne 0x4005d63	      4814	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_34
0x4005d49	        0x498b7f30	            mov rdi, qword [r15 + 0x30] 	      4817	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_34	CALL_21
0x4005d4d	      0x488b742458	            mov rsi, qword [rsp + 0x58] 	      4817	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_34	CALL_21
0x4005d52	      0xe8cba7ffff	                call sym.find_debug_info	      4817	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_34	CALL_21
0x4005d57	        0x49894738	             mov qword [r15 + 0x38], rax	      4817	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_34	CALL_21
0x4005d5b	        0x498b4718	            mov rax, qword [r15 + 0x18] 	      4819	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_34
0x4005d5f	        0x49894740	             mov qword [r15 + 0x40], rax	      4819	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_34
0x4005d63	      0x837c247000	               cmp dword [rsp + 0x70], 0	      4822	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_35
0x4005d68	            0x7435	                            je 0x4005d9f	      4822	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_35
0x4005d6a	            0xeb6d	                           jmp 0x4005dd9	      4822	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_35
0x4005d6c	    0xc78424700100	              mov dword [rsp + 0x170], 4	      4712	dwarf2.c	FUNCTION_68	IF_24
0x4005d77	    0x83bc24700100	              cmp dword [rsp + 0x170], 8	      4712	dwarf2.c	FUNCTION_68	IF_24
0x4005d7f	      0xb804000000	                              mov eax, 4	      4712	dwarf2.c	FUNCTION_68	IF_24
0x4005d84	     0xf4584247001	         cmovne eax, dword [rsp + 0x170]	      4712	dwarf2.c	FUNCTION_68	IF_24
0x4005d8c	        0x8944241c	             mov dword [rsp + 0x1c], eax	      4712	dwarf2.c	FUNCTION_68	IF_24
0x4005d90	    0x498d87880000	                   lea rax, [r15 + 0x88]	       954	dwarf2.c	ELSE_1	FUNCTION_19	IF_1	CALL_1
0x4005d97	    0x48898424b800	             mov qword [rsp + 0xb8], rax	       954	dwarf2.c	ELSE_1	FUNCTION_19	IF_1	CALL_1
0x4005d9f	      0xbbffffffff	                     mov ebx, 0xffffffff	      4725	dwarf2.c	FUNCTION_68	WHILE_1	IF_25
0x4005da4	        0x4d8b6718	            mov r12, qword [r15 + 0x18] 	      4716	dwarf2.c	FUNCTION_68	WHILE_1
0x4005da8	        0x498b5720	            mov rdx, qword [r15 + 0x20] 	      4716	dwarf2.c	FUNCTION_68	WHILE_1
0x4005dac	          0x4939d4	                            cmp r12, rdx	      4716	dwarf2.c	FUNCTION_68	WHILE_1
0x4005daf	     0xf8281f5ffff	                            jb 0x4005336	      4716	dwarf2.c	FUNCTION_68	WHILE_1
0x4005db5	            0xeb22	                           jmp 0x4005dd9	      4716	dwarf2.c	FUNCTION_68	WHILE_1
0x4005db7	    0xc74424700000	               mov dword [rsp + 0x70], 0	      4777	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_31
0x4005dbf	            0xeb18	                           jmp 0x4005dd9	      4777	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_31
0x4005dc1	        0x89442470	             mov dword [rsp + 0x70], eax	      4777	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_31
0x4005dc5	            0xeb12	                           jmp 0x4005dd9	      4777	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_31
0x4005dc7	    0x4c8bbc24a000	            mov r15, qword [rsp + 0xa0] 	      4777	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_31
0x4005dcf	            0xeb08	                           jmp 0x4005dd9	      4777	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_31
0x4005dd1	    0x4c8bbc248000	            mov r15, qword [rsp + 0x80] 	      4777	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_31
0x4005dd9	    0x488b8424e000	            mov rax, qword [rsp + 0xe0] 	      4828	dwarf2.c	FUNCTION_68	IF_36
0x4005de1	          0x4885c0	                           test rax, rax	      4828	dwarf2.c	FUNCTION_68	IF_36
0x4005de4	     0xf8495000000	                            je 0x4005e7f	      4828	dwarf2.c	FUNCTION_68	IF_36
0x4005dea	        0x83782c00	               cmp dword [rax + 0x2c], 0	      4830	dwarf2.c	FUNCTION_68	IF_36	IF_37
0x4005dee	            0x757b	                           jne 0x4005e6b	      4830	dwarf2.c	FUNCTION_68	IF_36	IF_37
0x4005df0	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      4835	dwarf2.c	FUNCTION_68	IF_36	IF_37	CALL_22
0x4005df5	        0x48833800	                      cmp qword [rax], 0	      4835	dwarf2.c	FUNCTION_68	IF_36	IF_37	CALL_22
0x4005df9	    0x41b800000000	                              mov r8d, 0	      4835	dwarf2.c	FUNCTION_68	IF_36	IF_37	CALL_22
0x4005dff	        0x4c0f44c0	                           cmove r8, rax	      4835	dwarf2.c	FUNCTION_68	IF_36	IF_37	CALL_22
0x4005e03	      0x4c8b4c2460	              mov r9, qword [rsp + 0x60]	      4835	dwarf2.c	FUNCTION_68	IF_36	IF_37	CALL_22
0x4005e08	      0x488b4c2450	            mov rcx, qword [rsp + 0x50] 	      4835	dwarf2.c	FUNCTION_68	IF_36	IF_37	CALL_22
0x4005e0d	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	      4835	dwarf2.c	FUNCTION_68	IF_36	IF_37	CALL_22
0x4005e12	          0x4889da	                            mov rdx, rbx	      4835	dwarf2.c	FUNCTION_68	IF_36	IF_37	CALL_22
0x4005e15	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	      4835	dwarf2.c	FUNCTION_68	IF_36	IF_37	CALL_22
0x4005e1a	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      4835	dwarf2.c	FUNCTION_68	IF_36	IF_37	CALL_22
0x4005e1f	      0xe800000000	                          call 0x4005e24	      4835	dwarf2.c	FUNCTION_68	IF_36	IF_37	CALL_22
0x4005e24	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	      4838	dwarf2.c	FUNCTION_68	IF_36	IF_37
0x4005e28	        0x488b4b68	            mov rcx, qword [rbx + 0x68] 	      4839	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_38
0x4005e2c	          0x4885c9	                           test rcx, rcx	      4839	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_38
0x4005e2f	            0x7408	                            je 0x4005e39	      4839	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_38
0x4005e31	        0x488b5360	            mov rdx, qword [rbx + 0x60] 	      4840	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_38
0x4005e35	        0x48035128	             add rdx, qword [rcx + 0x28]	      4840	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_38
0x4005e39	          0x4885c0	                           test rax, rax	      4841	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_39
0x4005e3c	            0x741e	                            je 0x4005e5c	      4841	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_39
0x4005e3e	    0x488b8c24e000	            mov rcx, qword [rsp + 0xe0] 	      4842	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_39
0x4005e46	        0x48035010	             add rdx, qword [rax + 0x10]	      4842	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_39
0x4005e4a	        0x483b5140	            cmp rdx, qword [rcx + 0x40] 	      4842	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_39
0x4005e4e	            0x750c	                           jne 0x4005e5c	      4842	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_39
0x4005e50	      0x488b442460	            mov rax, qword [rsp + 0x60] 	      4843	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_39
0x4005e55	          0x488b00	                    mov rax, qword [rax]	      4843	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_39
0x4005e58	        0x48894130	             mov qword [rcx + 0x30], rax	      4843	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_39
0x4005e5c	    0x488b8424e000	            mov rax, qword [rsp + 0xe0] 	      4846	dwarf2.c	FUNCTION_68	IF_36	IF_37
0x4005e64	    0xc7402c010000	               mov dword [rax + 0x2c], 1	      4846	dwarf2.c	FUNCTION_68	IF_36	IF_37
0x4005e6b	    0x488b8424e000	            mov rax, qword [rsp + 0xe0] 	      4848	dwarf2.c	FUNCTION_68	IF_36
0x4005e73	        0x488b4030	            mov rax, qword [rax + 0x30] 	      4848	dwarf2.c	FUNCTION_68	IF_36
0x4005e77	      0x488b4c2460	            mov rcx, qword [rsp + 0x60] 	      4848	dwarf2.c	FUNCTION_68	IF_36
0x4005e7c	          0x488901	                    mov qword [rcx], rax	      4848	dwarf2.c	FUNCTION_68	IF_36
0x4005e7f	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      4850	dwarf2.c	FUNCTION_68	IF_40
0x4005e84	          0x8b5044	            mov edx, dword [rax + 0x44] 	      4850	dwarf2.c	FUNCTION_68	IF_40
0x4005e87	          0xc1ea05	                              shr edx, 5	      4850	dwarf2.c	FUNCTION_68	IF_40
0x4005e8a	        0x8b442470	            mov eax, dword [rsp + 0x70] 	      4853	dwarf2.c	FUNCTION_68
0x4005e8e	          0xf6c242	                           test dl, 0x42	      4850	dwarf2.c	FUNCTION_68	IF_40
0x4005e91	            0x754c	                           jne 0x4005edf	      4850	dwarf2.c	FUNCTION_68	IF_40
0x4005e93	    0x418b97e00000	            mov edx, dword [r15 + 0xe0] 	      3886	dwarf2.c	FUNCTION_56
0x4005e9a	    0x498b87e80000	            mov rax, qword [r15 + 0xe8] 	      3887	dwarf2.c	FUNCTION_56
0x4005ea1	            0x85d2	                           test edx, edx	      3888	dwarf2.c	FUNCTION_56	FOR_1
0x4005ea3	            0x7e36	                           jle 0x4005edb	      3888	dwarf2.c	FUNCTION_56	FOR_1
0x4005ea5	          0x8d4aff	                      lea ecx, [rdx - 1]	      3888	dwarf2.c	FUNCTION_56	FOR_1
0x4005ea8	        0x4883c101	                              add rcx, 1	      3888	dwarf2.c	FUNCTION_56	FOR_1
0x4005eac	        0x48c1e104	                              shl rcx, 4	      3888	dwarf2.c	FUNCTION_56	FOR_1
0x4005eb0	          0x4801c1	                            add rcx, rax	      3888	dwarf2.c	FUNCTION_56	FOR_1
0x4005eb3	          0x488b10	                    mov rdx, qword [rax]	      3889	dwarf2.c	FUNCTION_56	FOR_1
0x4005eb6	    0x48c742280000	               mov qword [rdx + 0x28], 0	      3889	dwarf2.c	FUNCTION_56	FOR_1
0x4005ebe	        0x4883c010	                           add rax, 0x10	      3888	dwarf2.c	FUNCTION_56	FOR_1
0x4005ec2	          0x4839c1	                            cmp rcx, rax	      3888	dwarf2.c	FUNCTION_56	FOR_1
0x4005ec5	            0x75ec	                           jne 0x4005eb3	      3888	dwarf2.c	FUNCTION_56	FOR_1
0x4005ec7	        0x8b442470	            mov eax, dword [rsp + 0x70] 	      4853	dwarf2.c	FUNCTION_68
0x4005ecb	            0xeb12	                           jmp 0x4005edf	      4853	dwarf2.c	FUNCTION_68
0x4005ecd	      0xb800000000	                              mov eax, 0	      4613	dwarf2.c	FUNCTION_68	IF_9
0x4005ed2	            0xeb0b	                           jmp 0x4005edf	      4613	dwarf2.c	FUNCTION_68	IF_9
0x4005ed4	      0xb800000000	                              mov eax, 0	      4763	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_29
0x4005ed9	            0xeb04	                           jmp 0x4005edf	      4763	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_29
0x4005edb	        0x8b442470	            mov eax, dword [rsp + 0x70] 	      4853	dwarf2.c	FUNCTION_68
0x4005edf	    0x488b8c240801	           mov rcx, qword [rsp + 0x108] 	      4854	dwarf2.c	FUNCTION_68
0x4005ee7	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      4854	dwarf2.c	FUNCTION_68
0x4005ef0	     0xf84c3000000	                            je 0x4005fb9	      4854	dwarf2.c	FUNCTION_68
0x4005ef6	      0xe9b9000000	                           jmp 0x4005fb4	      4854	dwarf2.c	FUNCTION_68
0x4005efb	    0xc74424700100	               mov dword [rsp + 0x70], 1	      4777	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_31
0x4005f03	      0xe9d1feffff	                           jmp 0x4005dd9	      4777	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_31
0x4005f08	    0xc74424700000	               mov dword [rsp + 0x70], 0	      4633	dwarf2.c	FUNCTION_68	IF_10	IF_13	CALL_7
0x4005f10	      0xe9eaf3ffff	                           jmp 0x40052ff	      4633	dwarf2.c	FUNCTION_68	IF_10	IF_13	CALL_7
0x4005f15	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	      4633	dwarf2.c	FUNCTION_68	IF_10	IF_13	CALL_7
0x4005f19	        0x89442410	             mov dword [rsp + 0x10], eax	      4633	dwarf2.c	FUNCTION_68	IF_10	IF_13	CALL_7
0x4005f1d	      0xe99bf4ffff	                           jmp 0x40053bd	      4633	dwarf2.c	FUNCTION_68	IF_10	IF_13	CALL_7
0x4005f22	        0x4183fd02	                             cmp r13d, 2	      3398	dwarf2.c	FUNCTION_46	IF_6
0x4005f26	     0xf841bf6ffff	                            je 0x4005547	      3398	dwarf2.c	FUNCTION_46	IF_6
0x4005f2c	    0xc78424880000	               mov dword [rsp + 0x88], 0	       589	dwarf2.c	FUNCTION_6	IF_1
0x4005f37	      0xe991f6ffff	                           jmp 0x40055cd	       589	dwarf2.c	FUNCTION_6	IF_1
0x4005f3c	    0x4c8bb424c000	            mov r14, qword [rsp + 0xc0] 	       589	dwarf2.c	FUNCTION_6	IF_1
0x4005f44	    0x4c8bbc24a000	            mov r15, qword [rsp + 0xa0] 	       589	dwarf2.c	FUNCTION_6	IF_1
0x4005f4c	    0x4c8ba424c800	            mov r12, qword [rsp + 0xc8] 	       589	dwarf2.c	FUNCTION_6	IF_1
0x4005f54	            0xeb18	                           jmp 0x4005f6e	       589	dwarf2.c	FUNCTION_6	IF_1
0x4005f56	    0x4c8bb424c000	            mov r14, qword [rsp + 0xc0] 	       589	dwarf2.c	FUNCTION_6	IF_1
0x4005f5e	    0x4c8bbc24a000	            mov r15, qword [rsp + 0xa0] 	       589	dwarf2.c	FUNCTION_6	IF_1
0x4005f66	    0x4c8ba424c800	            mov r12, qword [rsp + 0xc8] 	       589	dwarf2.c	FUNCTION_6	IF_1
0x4005f6e	    0x4c8b84248000	              mov r8, qword [rsp + 0x80]	      3433	dwarf2.c	FUNCTION_46	CALL_17
0x4005f76	      0xb900000000	                              mov ecx, 0	      3433	dwarf2.c	FUNCTION_46	CALL_17
0x4005f7b	    0x488d9424e800	                   lea rdx, [rsp + 0xe8]	      3433	dwarf2.c	FUNCTION_46	CALL_17
0x4005f83	    0x4c8bac24a800	            mov r13, qword [rsp + 0xa8] 	      3433	dwarf2.c	FUNCTION_46	CALL_17
0x4005f8b	          0x4c89ee	                            mov rsi, r13	      3433	dwarf2.c	FUNCTION_46	CALL_17
0x4005f8e	    0x488bbc249000	            mov rdi, qword [rsp + 0x90] 	      3433	dwarf2.c	FUNCTION_46	CALL_17
0x4005f96	      0xe800000000	                          call 0x4005f9b	      3433	dwarf2.c	FUNCTION_46	CALL_17
0x4005f9b	            0x89c5	                            mov ebp, eax	      3433	dwarf2.c	FUNCTION_46	CALL_17
0x4005f9d	    0x8b9c24e80000	            mov ebx, dword [rsp + 0xe8] 	      3435	dwarf2.c	FUNCTION_46
0x4005fa4	          0x4c01eb	                            add rbx, r13	      3435	dwarf2.c	FUNCTION_46
0x4005fa7	            0x85c0	                           test eax, eax	      3436	dwarf2.c	FUNCTION_46	IF_10
0x4005fa9	     0xf8559f9ffff	                           jne 0x4005908	      3436	dwarf2.c	FUNCTION_46	IF_10
0x4005faf	      0xe925feffff	                           jmp 0x4005dd9	      3436	dwarf2.c	FUNCTION_46	IF_10
0x4005fb4	      0xe800000000	                          call 0x4005fb9	      4854	dwarf2.c	FUNCTION_68
0x4005fb9	    0x4881c4180100	                          add rsp, 0x118	      4854	dwarf2.c	FUNCTION_68
0x4005fc0	              0x5b	                                 pop rbx	      4854	dwarf2.c	FUNCTION_68
0x4005fc1	              0x5d	                                 pop rbp	      4854	dwarf2.c	FUNCTION_68
0x4005fc2	            0x415c	                                 pop r12	      4854	dwarf2.c	FUNCTION_68
0x4005fc4	            0x415d	                                 pop r13	      4854	dwarf2.c	FUNCTION_68
0x4005fc6	            0x415e	                                 pop r14	      4854	dwarf2.c	FUNCTION_68
0x4005fc8	            0x415f	                                 pop r15	      4854	dwarf2.c	FUNCTION_68
0x4005fca	              0xc3	                                     ret	      4854	dwarf2.c	FUNCTION_68
arange_add	SWITCH,0:FOR,0:WHILE,0:IF,5:functions,0:ELSE,0:DO,1:CALL,1	47
0x40007b2	          0x4839ca	                            cmp rdx, rcx	      1637	dwarf2.c	FUNCTION_27	IF_1
0x40007b5	            0x747a	                            je 0x4000831	      1637	dwarf2.c	FUNCTION_27	IF_1
0x40007b7	          0x4889f0	                            mov rax, rsi	      1637	dwarf2.c	FUNCTION_27	IF_1
0x40007ba	      0x48837e1000	               cmp qword [rsi + 0x10], 0	      1641	dwarf2.c	FUNCTION_27	IF_2
0x40007bf	            0x750e	                           jne 0x40007cf	      1641	dwarf2.c	FUNCTION_27	IF_2
0x40007c1	        0x48895608	                mov qword [rsi + 8], rdx	      1643	dwarf2.c	FUNCTION_27	IF_2
0x40007c5	        0x48894e10	             mov qword [rsi + 0x10], rcx	      1644	dwarf2.c	FUNCTION_27	IF_2
0x40007c9	      0xb801000000	                              mov eax, 1	      1645	dwarf2.c	FUNCTION_27	IF_2
0x40007ce	              0xc3	                                     ret	      1645	dwarf2.c	FUNCTION_27	IF_2
0x40007cf	        0x483b5010	            cmp rdx, qword [rax + 0x10] 	      1652	dwarf2.c	FUNCTION_27	DO_1	IF_3
0x40007d3	            0x750a	                           jne 0x40007df	      1652	dwarf2.c	FUNCTION_27	DO_1	IF_3
0x40007d5	        0x48894810	             mov qword [rax + 0x10], rcx	      1654	dwarf2.c	FUNCTION_27	DO_1	IF_3
0x40007d9	      0xb801000000	                              mov eax, 1	      1655	dwarf2.c	FUNCTION_27	DO_1	IF_3
0x40007de	              0xc3	                                     ret	      1655	dwarf2.c	FUNCTION_27	DO_1	IF_3
0x40007df	        0x483b4808	                cmp rcx, qword [rax + 8]	      1657	dwarf2.c	FUNCTION_27	DO_1	IF_4
0x40007e3	            0x750a	                           jne 0x40007ef	      1657	dwarf2.c	FUNCTION_27	DO_1	IF_4
0x40007e5	        0x48895008	                mov qword [rax + 8], rdx	      1659	dwarf2.c	FUNCTION_27	DO_1	IF_4
0x40007e9	      0xb801000000	                              mov eax, 1	      1660	dwarf2.c	FUNCTION_27	DO_1	IF_4
0x40007ee	              0xc3	                                     ret	      1676	dwarf2.c	FUNCTION_27
0x40007ef	          0x488b00	                    mov rax, qword [rax]	      1662	dwarf2.c	FUNCTION_27	DO_1
0x40007f2	          0x4885c0	                           test rax, rax	      1664	dwarf2.c	FUNCTION_27
0x40007f5	            0x75d8	                           jne 0x40007cf	      1664	dwarf2.c	FUNCTION_27
0x40007f7	            0x4154	                                push r12	      1633	dwarf2.c	FUNCTION_27
0x40007f9	              0x55	                                push rbp	      1633	dwarf2.c	FUNCTION_27
0x40007fa	              0x53	                                push rbx	      1633	dwarf2.c	FUNCTION_27
0x40007fb	          0x4889cd	                            mov rbp, rcx	      1633	dwarf2.c	FUNCTION_27
0x40007fe	          0x4889d3	                            mov rbx, rdx	      1633	dwarf2.c	FUNCTION_27
0x4000801	          0x4989f4	                            mov r12, rsi	      1633	dwarf2.c	FUNCTION_27
0x4000804	        0x488b7f10	            mov rdi, qword [rdi + 0x10] 	      1668	dwarf2.c	FUNCTION_27	CALL_1
0x4000808	      0xbe18000000	                           mov esi, 0x18	      1668	dwarf2.c	FUNCTION_27	CALL_1
0x400080d	      0xe800000000	                          call 0x4000812	      1668	dwarf2.c	FUNCTION_27	CALL_1
0x4000812	          0x4885c0	                           test rax, rax	      1669	dwarf2.c	FUNCTION_27	IF_5
0x4000815	            0x7420	                            je 0x4000837	      1669	dwarf2.c	FUNCTION_27	IF_5
0x4000817	        0x48895808	                mov qword [rax + 8], rbx	      1671	dwarf2.c	FUNCTION_27
0x400081b	        0x48896810	             mov qword [rax + 0x10], rbp	      1672	dwarf2.c	FUNCTION_27
0x400081f	        0x498b1424	                    mov rdx, qword [r12]	      1673	dwarf2.c	FUNCTION_27
0x4000823	          0x488910	                    mov qword [rax], rdx	      1673	dwarf2.c	FUNCTION_27
0x4000826	        0x49890424	                    mov qword [r12], rax	      1674	dwarf2.c	FUNCTION_27
0x400082a	      0xb801000000	                              mov eax, 1	      1675	dwarf2.c	FUNCTION_27
0x400082f	            0xeb0b	                           jmp 0x400083c	      1675	dwarf2.c	FUNCTION_27
0x4000831	      0xb801000000	                              mov eax, 1	      1638	dwarf2.c	FUNCTION_27	IF_1
0x4000836	              0xc3	                                     ret	      1638	dwarf2.c	FUNCTION_27	IF_1
0x4000837	      0xb800000000	                              mov eax, 0	      1670	dwarf2.c	FUNCTION_27	IF_5
0x400083c	              0x5b	                                 pop rbx	      1676	dwarf2.c	FUNCTION_27
0x400083d	              0x5d	                                 pop rbp	      1676	dwarf2.c	FUNCTION_27
0x400083e	            0x415c	                                 pop r12	      1676	dwarf2.c	FUNCTION_27
0x4000840	              0xc3	                                     ret	      1676	dwarf2.c	FUNCTION_27
line_info_add_file_name	SWITCH,0:FOR,0:WHILE,0:IF,2:functions,0:ELSE,0:DO,0:CALL,1	56
0x40008b0	            0x4156	                                push r14	      1860	dwarf2.c	FUNCTION_33
0x40008b2	            0x4155	                                push r13	      1860	dwarf2.c	FUNCTION_33
0x40008b4	            0x4154	                                push r12	      1860	dwarf2.c	FUNCTION_33
0x40008b6	              0x55	                                push rbp	      1860	dwarf2.c	FUNCTION_33
0x40008b7	              0x53	                                push rbx	      1860	dwarf2.c	FUNCTION_33
0x40008b8	          0x4889fb	                            mov rbx, rdi	      1860	dwarf2.c	FUNCTION_33
0x40008bb	          0x4989f6	                            mov r14, rsi	      1860	dwarf2.c	FUNCTION_33
0x40008be	          0x4189d5	                           mov r13d, edx	      1860	dwarf2.c	FUNCTION_33
0x40008c1	          0x4189cc	                           mov r12d, ecx	      1860	dwarf2.c	FUNCTION_33
0x40008c4	          0x4489c5	                            mov ebp, r8d	      1860	dwarf2.c	FUNCTION_33
0x40008c7	          0x8b4f08	                mov ecx, dword [rdi + 8]	      1861	dwarf2.c	FUNCTION_33	IF_1
0x40008ca	      0xbacdcccccc	                     mov edx, 0xcccccccd	      1861	dwarf2.c	FUNCTION_33	IF_1
0x40008cf	            0x89c8	                            mov eax, ecx	      1861	dwarf2.c	FUNCTION_33	IF_1
0x40008d1	            0xf7e2	                                 mul edx	      1861	dwarf2.c	FUNCTION_33	IF_1
0x40008d3	          0xc1ea02	                              shr edx, 2	      1861	dwarf2.c	FUNCTION_33	IF_1
0x40008d6	          0x8d0492	                  lea eax, [rdx + rdx*4]	      1861	dwarf2.c	FUNCTION_33	IF_1
0x40008d9	            0x39c1	                            cmp ecx, eax	      1861	dwarf2.c	FUNCTION_33	IF_1
0x40008db	            0x751d	                           jne 0x40008fa	      1861	dwarf2.c	FUNCTION_33	IF_1
0x40008dd	          0x8d4105	                      lea eax, [rcx + 5]	      1866	dwarf2.c	FUNCTION_33	IF_1
0x40008e0	        0x488d3440	                  lea rsi, [rax + rax*2]	      1869	dwarf2.c	FUNCTION_33	IF_1	CALL_1
0x40008e4	        0x48c1e603	                              shl rsi, 3	      1869	dwarf2.c	FUNCTION_33	IF_1	CALL_1
0x40008e8	        0x488b7f28	            mov rdi, qword [rdi + 0x28] 	      1869	dwarf2.c	FUNCTION_33	IF_1	CALL_1
0x40008ec	      0xe800000000	                          call 0x40008f1	      1869	dwarf2.c	FUNCTION_33	IF_1	CALL_1
0x40008f1	          0x4885c0	                           test rax, rax	      1870	dwarf2.c	FUNCTION_33	IF_1	IF_2
0x40008f4	            0x7459	                            je 0x400094f	      1870	dwarf2.c	FUNCTION_33	IF_1	IF_2
0x40008f6	        0x48894328	             mov qword [rbx + 0x28], rax	      1872	dwarf2.c	FUNCTION_33	IF_1
0x40008fa	          0x8b4308	                mov eax, dword [rbx + 8]	      1875	dwarf2.c	FUNCTION_33
0x40008fd	        0x488d0440	                  lea rax, [rax + rax*2]	      1875	dwarf2.c	FUNCTION_33
0x4000901	        0x48c1e003	                              shl rax, 3	      1875	dwarf2.c	FUNCTION_33
0x4000905	        0x48034328	             add rax, qword [rbx + 0x28]	      1875	dwarf2.c	FUNCTION_33
0x4000909	          0x4c8930	                    mov qword [rax], r14	      1875	dwarf2.c	FUNCTION_33
0x400090c	          0x8b4308	                mov eax, dword [rbx + 8]	      1876	dwarf2.c	FUNCTION_33
0x400090f	        0x488d0440	                  lea rax, [rax + rax*2]	      1876	dwarf2.c	FUNCTION_33
0x4000913	        0x48c1e003	                              shl rax, 3	      1876	dwarf2.c	FUNCTION_33
0x4000917	        0x48034328	             add rax, qword [rbx + 0x28]	      1876	dwarf2.c	FUNCTION_33
0x400091b	        0x44896808	               mov dword [rax + 8], r13d	      1876	dwarf2.c	FUNCTION_33
0x400091f	          0x8b4308	                mov eax, dword [rbx + 8]	      1877	dwarf2.c	FUNCTION_33
0x4000922	        0x488d0440	                  lea rax, [rax + rax*2]	      1877	dwarf2.c	FUNCTION_33
0x4000926	        0x48c1e003	                              shl rax, 3	      1877	dwarf2.c	FUNCTION_33
0x400092a	        0x48034328	             add rax, qword [rbx + 0x28]	      1877	dwarf2.c	FUNCTION_33
0x400092e	        0x4489600c	             mov dword [rax + 0xc], r12d	      1877	dwarf2.c	FUNCTION_33
0x4000932	          0x8b4308	                mov eax, dword [rbx + 8]	      1878	dwarf2.c	FUNCTION_33
0x4000935	        0x488d0440	                  lea rax, [rax + rax*2]	      1878	dwarf2.c	FUNCTION_33
0x4000939	        0x48c1e003	                              shl rax, 3	      1878	dwarf2.c	FUNCTION_33
0x400093d	        0x48034328	             add rax, qword [rbx + 0x28]	      1878	dwarf2.c	FUNCTION_33
0x4000941	          0x896810	             mov dword [rax + 0x10], ebp	      1878	dwarf2.c	FUNCTION_33
0x4000944	        0x83430801	                  add dword [rbx + 8], 1	      1879	dwarf2.c	FUNCTION_33
0x4000948	      0xb801000000	                              mov eax, 1	      1880	dwarf2.c	FUNCTION_33
0x400094d	            0xeb05	                           jmp 0x4000954	      1880	dwarf2.c	FUNCTION_33
0x400094f	      0xb800000000	                              mov eax, 0	      1871	dwarf2.c	FUNCTION_33	IF_1	IF_2
0x4000954	              0x5b	                                 pop rbx	      1881	dwarf2.c	FUNCTION_33
0x4000955	              0x5d	                                 pop rbp	      1881	dwarf2.c	FUNCTION_33
0x4000956	            0x415c	                                 pop r12	      1881	dwarf2.c	FUNCTION_33
0x4000958	            0x415d	                                 pop r13	      1881	dwarf2.c	FUNCTION_33
0x400095a	            0x415e	                                 pop r14	      1881	dwarf2.c	FUNCTION_33
0x400095c	              0xc3	                                     ret	      1881	dwarf2.c	FUNCTION_33
place_sections	SWITCH,0:FOR,3:WHILE,2:IF,11:functions,0:ELSE,2:DO,0:CALL,7	224
0x40001f8	            0x4157	                                push r15	      3904	dwarf2.c	FUNCTION_57
0x40001fa	            0x4156	                                push r14	      3904	dwarf2.c	FUNCTION_57
0x40001fc	            0x4155	                                push r13	      3904	dwarf2.c	FUNCTION_57
0x40001fe	            0x4154	                                push r12	      3904	dwarf2.c	FUNCTION_57
0x4000200	              0x55	                                push rbp	      3904	dwarf2.c	FUNCTION_57
0x4000201	              0x53	                                push rbx	      3904	dwarf2.c	FUNCTION_57
0x4000202	        0x4883ec28	                           sub rsp, 0x28	      3904	dwarf2.c	FUNCTION_57
0x4000206	    0x448bb6e00000	           mov r14d, dword [rsi + 0xe0] 	      3910	dwarf2.c	FUNCTION_57	IF_1
0x400020d	          0x4585f6	                         test r14d, r14d	      3910	dwarf2.c	FUNCTION_57	IF_1
0x4000210	            0x743d	                            je 0x400024f	      3910	dwarf2.c	FUNCTION_57	IF_1
0x4000212	    0x488b86e80000	            mov rax, qword [rsi + 0xe8] 	      3913	dwarf2.c	FUNCTION_57	IF_1
0x4000219	          0x4585f6	                         test r14d, r14d	      3914	dwarf2.c	FUNCTION_57	IF_1	FOR_1
0x400021c	     0xf8e9f020000	                           jle 0x40004c1	      3914	dwarf2.c	FUNCTION_57	IF_1	FOR_1
0x4000222	        0x418d76ff	                      lea esi, [r14 - 1]	      3914	dwarf2.c	FUNCTION_57	IF_1	FOR_1
0x4000226	        0x4883c601	                              add rsi, 1	      3914	dwarf2.c	FUNCTION_57	IF_1	FOR_1
0x400022a	        0x48c1e604	                              shl rsi, 4	      3914	dwarf2.c	FUNCTION_57	IF_1	FOR_1
0x400022e	          0x4801c6	                            add rsi, rax	      3914	dwarf2.c	FUNCTION_57	IF_1	FOR_1
0x4000231	          0x488b10	                    mov rdx, qword [rax]	      3915	dwarf2.c	FUNCTION_57	IF_1	FOR_1
0x4000234	        0x488b4808	                mov rcx, qword [rax + 8]	      3915	dwarf2.c	FUNCTION_57	IF_1	FOR_1
0x4000238	        0x48894a28	             mov qword [rdx + 0x28], rcx	      3915	dwarf2.c	FUNCTION_57	IF_1	FOR_1
0x400023c	        0x4883c010	                           add rax, 0x10	      3914	dwarf2.c	FUNCTION_57	IF_1	FOR_1
0x4000240	          0x4839c6	                            cmp rsi, rax	      3914	dwarf2.c	FUNCTION_57	IF_1	FOR_1
0x4000243	            0x75ec	                           jne 0x4000231	      3914	dwarf2.c	FUNCTION_57	IF_1	FOR_1
0x4000245	      0xb801000000	                              mov eax, 1	      3916	dwarf2.c	FUNCTION_57	IF_1
0x400024a	      0xe9c4020000	                           jmp 0x4000513	      3916	dwarf2.c	FUNCTION_57	IF_1
0x400024f	          0x4989f5	                            mov r13, rsi	      3916	dwarf2.c	FUNCTION_57	IF_1
0x4000252	      0x48897c2408	                mov qword [rsp + 8], rdi	      3916	dwarf2.c	FUNCTION_57	IF_1
0x4000257	        0x488b4610	            mov rax, qword [rsi + 0x10] 	      3919	dwarf2.c	FUNCTION_57
0x400025b	        0x4c8b6030	            mov r12, qword [rax + 0x30] 	      3919	dwarf2.c	FUNCTION_57
0x400025f	          0x4989ff	                            mov r15, rdi	      3921	dwarf2.c	FUNCTION_57
0x4000262	            0xeb03	                           jmp 0x4000267	      3921	dwarf2.c	FUNCTION_57
0x4000264	          0x4989c7	                            mov r15, rax	      3947	dwarf2.c	FUNCTION_57	WHILE_1
0x4000267	    0x498b9f900000	            mov rbx, qword [r15 + 0x90] 	      3926	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2
0x400026e	          0x4885db	                           test rbx, rbx	      3926	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2
0x4000271	            0x7465	                            je 0x40002d8	      3926	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2
0x4000273	        0x488b4368	            mov rax, qword [rbx + 0x68] 	      3930	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	IF_2
0x4000277	          0x4839d8	                            cmp rax, rbx	      3931	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	IF_2
0x400027a	            0x740b	                            je 0x4000287	      3931	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	IF_2
0x400027c	          0x4885c0	                           test rax, rax	      3931	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	IF_2
0x400027f	            0x7406	                            je 0x4000287	      3931	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	IF_2
0x4000281	        0xf6432120	           test byte [rbx + 0x21], 0x20 	      3932	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	IF_2
0x4000285	            0x7448	                            je 0x40002cf	      3932	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	IF_2
0x4000287	      0x48837b2800	               cmp qword [rbx + 0x28], 0	      3933	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	IF_2
0x400028c	            0x7541	                           jne 0x40002cf	      3933	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	IF_2
0x400028e	          0x488b2b	                    mov rbp, qword [rbx]	      3936	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	CALL_1
0x4000291	          0x4c89e6	                            mov rsi, r12	      3936	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	CALL_1
0x4000294	          0x4889ef	                            mov rdi, rbp	      3936	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	CALL_1
0x4000297	      0xe800000000	                          call 0x400029c	      3936	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	CALL_1
0x400029c	            0x85c0	                           test eax, eax	      3937	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	CALL_2
0x400029e	            0x742b	                            je 0x40002cb	      3937	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	CALL_2
0x40002a0	      0xbf00000000	                              mov edi, 0	      3937	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	CALL_2
0x40002a5	      0xb911000000	                           mov ecx, 0x11	      3937	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	CALL_2
0x40002aa	          0x4889ee	                            mov rsi, rbp	      3937	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	CALL_2
0x40002ad	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      3937	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	CALL_2
0x40002af	           0xf97c0	                                 seta al	      3937	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	CALL_2
0x40002b2	           0xf92c2	                                 setb dl	      3937	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	CALL_2
0x40002b5	            0x29d0	                            sub eax, edx	      3937	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	CALL_2
0x40002b7	           0xfbec0	                           movsx eax, al	      3937	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	CALL_2
0x40002ba	        0xf6432001	               test byte [rbx + 0x20], 1	      3939	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	IF_3
0x40002be	            0x7407	                            je 0x40002c7	      3939	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	IF_3
0x40002c0	      0x4c3b7c2408	                cmp r15, qword [rsp + 8]	      3939	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	IF_3
0x40002c5	            0x7404	                            je 0x40002cb	      3939	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	IF_3
0x40002c7	            0x85c0	                           test eax, eax	      3940	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	IF_3
0x40002c9	            0x7504	                           jne 0x40002cf	      3940	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2	IF_3
0x40002cb	        0x4183c601	                             add r14d, 1	      3943	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2
0x40002cf	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      3926	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2
0x40002d3	          0x4885db	                           test rbx, rbx	      3926	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2
0x40002d6	            0x759b	                           jne 0x4000273	      3926	dwarf2.c	FUNCTION_57	WHILE_1	FOR_2
0x40002d8	        0x498b4530	            mov rax, qword [r13 + 0x30] 	      3945	dwarf2.c	FUNCTION_57	WHILE_1	IF_4
0x40002dc	          0x4939c7	                            cmp r15, rax	      3945	dwarf2.c	FUNCTION_57	WHILE_1	IF_4
0x40002df	            0x7583	                           jne 0x4000264	      3945	dwarf2.c	FUNCTION_57	WHILE_1	IF_4
0x40002e1	        0x4183fe01	                             cmp r14d, 1	      3950	dwarf2.c	FUNCTION_57	IF_5
0x40002e5	            0x7f10	                            jg 0x40002f7	      3950	dwarf2.c	FUNCTION_57	IF_5
0x40002e7	    0x41c785e00000	     mov dword [r13 + 0xe0], 0xffffffff 	      3951	dwarf2.c	FUNCTION_57	IF_5
0x40002f2	      0xe94c010000	                           jmp 0x4000443	      3951	dwarf2.c	FUNCTION_57	IF_5
0x40002f7	          0x4963fe	                        movsxd rdi, r14d	      3957	dwarf2.c	FUNCTION_57	ELSE_1	CALL_3
0x40002fa	        0x48c1e704	                              shl rdi, 4	      3957	dwarf2.c	FUNCTION_57	ELSE_1	CALL_3
0x40002fe	      0xe800000000	                          call 0x4000303	      3957	dwarf2.c	FUNCTION_57	ELSE_1	CALL_3
0x4000303	          0x4989c7	                            mov r15, rax	      3957	dwarf2.c	FUNCTION_57	ELSE_1	CALL_3
0x4000306	          0x4885c0	                           test rax, rax	      3958	dwarf2.c	FUNCTION_57	ELSE_1	IF_6
0x4000309	     0xf84b9010000	                            je 0x40004c8	      3958	dwarf2.c	FUNCTION_57	ELSE_1	IF_6
0x400030f	    0x498985e80000	             mov qword [r13 + 0xe8], rax	      3961	dwarf2.c	FUNCTION_57	ELSE_1
0x4000316	    0x4589b5e00000	            mov dword [r13 + 0xe0], r14d	      3962	dwarf2.c	FUNCTION_57	ELSE_1
0x400031d	      0x4c8b742408	                mov r14, qword [rsp + 8]	      3964	dwarf2.c	FUNCTION_57	ELSE_1
0x4000322	    0x48c744241800	               mov qword [rsp + 0x18], 0	      3954	dwarf2.c	FUNCTION_57	ELSE_1
0x400032b	    0x48c744241000	               mov qword [rsp + 0x10], 0	      3954	dwarf2.c	FUNCTION_57	ELSE_1
0x4000334	            0xeb03	                           jmp 0x4000339	      3954	dwarf2.c	FUNCTION_57	ELSE_1
0x4000336	          0x4989c6	                            mov r14, rax	      4012	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2
0x4000339	    0x498b9e900000	            mov rbx, qword [r14 + 0x90] 	      3969	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3
0x4000340	          0x4885db	                           test rbx, rbx	      3969	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3
0x4000343	     0xf84ed000000	                            je 0x4000436	      3969	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3
0x4000349	        0x488b4368	            mov rax, qword [rbx + 0x68] 	      3974	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_7
0x400034d	          0x4839d8	                            cmp rax, rbx	      3975	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_7
0x4000350	            0x740f	                            je 0x4000361	      3975	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_7
0x4000352	          0x4885c0	                           test rax, rax	      3975	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_7
0x4000355	            0x740a	                            je 0x4000361	      3975	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_7
0x4000357	        0xf6432120	           test byte [rbx + 0x21], 0x20 	      3976	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_7
0x400035b	     0xf84c8000000	                            je 0x4000429	      3976	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_7
0x4000361	      0x48837b2800	               cmp qword [rbx + 0x28], 0	      3977	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_7
0x4000366	     0xf85bd000000	                           jne 0x4000429	      3977	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_7
0x400036c	          0x488b2b	                    mov rbp, qword [rbx]	      3980	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	CALL_4
0x400036f	          0x4c89e6	                            mov rsi, r12	      3980	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	CALL_4
0x4000372	          0x4889ef	                            mov rdi, rbp	      3980	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	CALL_4
0x4000375	      0xe800000000	                          call 0x400037a	      3980	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	CALL_4
0x400037a	            0x85c0	                           test eax, eax	      3981	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	CALL_5
0x400037c	     0xf8479010000	                            je 0x40004fb	      3981	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	CALL_5
0x4000382	      0xbf00000000	                              mov edi, 0	      3981	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	CALL_5
0x4000387	      0xb911000000	                           mov ecx, 0x11	      3981	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	CALL_5
0x400038c	          0x4889ee	                            mov rsi, rbp	      3981	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	CALL_5
0x400038f	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      3981	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	CALL_5
0x4000391	           0xf97c0	                                 seta al	      3981	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	CALL_5
0x4000394	           0xf92c2	                                 setb dl	      3981	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	CALL_5
0x4000397	            0x29d0	                            sub eax, edx	      3981	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	CALL_5
0x4000399	           0xfbec0	                           movsx eax, al	      3981	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	CALL_5
0x400039c	            0x85c0	                           test eax, eax	      3981	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	CALL_5
0x400039e	           0xf94c2	                                 sete dl	      3981	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	CALL_5
0x40003a1	           0xfb6d2	                           movzx edx, dl	      3981	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	CALL_5
0x40003a4	        0xf6432001	               test byte [rbx + 0x20], 1	      3983	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_8
0x40003a8	            0x7407	                            je 0x40003b1	      3983	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_8
0x40003aa	      0x4c3b742408	                cmp r14, qword [rsp + 8]	      3983	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_8
0x40003af	            0x7409	                            je 0x40003ba	      3983	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_8
0x40003b1	            0x85c0	                           test eax, eax	      3984	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_8
0x40003b3	            0x7574	                           jne 0x4000429	      3984	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_8
0x40003b5	      0xe92f010000	                           jmp 0x40004e9	      3984	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_8
0x40003ba	        0x488b6b40	            mov rbp, qword [rbx + 0x40] 	      3987	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3
0x40003be	          0x4885ed	                           test rbp, rbp	      3987	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3
0x40003c1	            0x7504	                           jne 0x40003c7	      3987	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3
0x40003c3	        0x488b6b38	            mov rbp, qword [rbx + 0x38] 	      3987	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3
0x40003c7	            0x85d2	                           test edx, edx	      3989	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_9
0x40003c9	            0x7428	                            je 0x40003f3	      3989	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_9
0x40003cb	        0x837b7000	               cmp dword [rbx + 0x70], 0	      3991	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_9	CALL_6
0x40003cf	            0x740f	                            je 0x40003e0	      3991	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_9	CALL_6
0x40003d1	      0xbe970f0000	                          mov esi, 0xf97	      3991	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_9	CALL_6
0x40003d6	      0xbf00000000	                              mov edi, 0	      3991	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_9	CALL_6
0x40003db	      0xe800000000	                          call 0x40003e0	      3991	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_9	CALL_6
0x40003e0	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      3992	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_9
0x40003e5	        0x48894328	             mov qword [rbx + 0x28], rax	      3992	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_9
0x40003e9	          0x4801e8	                            add rax, rbp	      3993	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_9
0x40003ec	      0x4889442418	             mov qword [rsp + 0x18], rax	      3993	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_9
0x40003f1	            0xeb27	                           jmp 0x400041a	      3993	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_9
0x40003f3	          0x8b4b70	            mov ecx, dword [rbx + 0x70] 	      4000	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	ELSE_2
0x40003f6	      0xb801000000	                              mov eax, 1	      4000	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	ELSE_2
0x40003fb	          0x48d3e0	                             shl rax, cl	      4000	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	ELSE_2
0x40003fe	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      4000	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	ELSE_2
0x4000403	      0x488d5402ff	                lea rdx, [rdx + rax - 1]	      4000	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	ELSE_2
0x4000408	          0x48f7d8	                                 neg rax	      3999	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	ELSE_2
0x400040b	          0x4821d0	                            and rax, rdx	      3999	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	ELSE_2
0x400040e	        0x48894328	             mov qword [rbx + 0x28], rax	      4002	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	ELSE_2
0x4000412	          0x4801e8	                            add rax, rbp	      4003	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	ELSE_2
0x4000415	      0x4889442410	             mov qword [rsp + 0x10], rax	      4003	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	ELSE_2
0x400041a	          0x49891f	                    mov qword [r15], rbx	      4006	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3
0x400041d	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      4007	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3
0x4000421	        0x49894708	                mov qword [r15 + 8], rax	      4007	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3
0x4000425	        0x4983c710	                           add r15, 0x10	      4008	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3
0x4000429	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      3969	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3
0x400042d	          0x4885db	                           test rbx, rbx	      3969	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3
0x4000430	     0xf8513ffffff	                           jne 0x4000349	      3969	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3
0x4000436	        0x498b4530	            mov rax, qword [r13 + 0x30] 	      4010	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	IF_10
0x400043a	          0x4939c6	                            cmp r14, rax	      4010	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	IF_10
0x400043d	     0xf85f3feffff	                           jne 0x4000336	      4010	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	IF_10
0x4000443	        0x498b5530	            mov rdx, qword [r13 + 0x30] 	      4016	dwarf2.c	FUNCTION_57	IF_11
0x4000447	      0xb801000000	                              mov eax, 1	      4019	dwarf2.c	FUNCTION_57
0x400044c	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      4016	dwarf2.c	FUNCTION_57	IF_11
0x4000451	          0x4839d1	                            cmp rcx, rdx	      4016	dwarf2.c	FUNCTION_57	IF_11
0x4000454	     0xf84b9000000	                            je 0x4000513	      4016	dwarf2.c	FUNCTION_57	IF_11
0x400045a	    0x488ba9900000	            mov rbp, qword [rcx + 0x90] 	      3861	dwarf2.c	FUNCTION_55	FOR_1
0x4000461	    0x488b9a900000	            mov rbx, qword [rdx + 0x90] 	      3861	dwarf2.c	FUNCTION_55	FOR_1
0x4000468	          0x4885ed	                           test rbp, rbp	      3861	dwarf2.c	FUNCTION_55	FOR_1
0x400046b	            0x7462	                            je 0x40004cf	      3861	dwarf2.c	FUNCTION_55	FOR_1
0x400046d	          0x4885db	                           test rbx, rbx	      3861	dwarf2.c	FUNCTION_55	FOR_1
0x4000470	            0x745d	                            je 0x40004cf	      3861	dwarf2.c	FUNCTION_55	FOR_1
0x4000472	        0xf6432120	           test byte [rbx + 0x21], 0x20 	      3865	dwarf2.c	FUNCTION_55	FOR_1	IF_1
0x4000476	            0x7408	                            je 0x4000480	      3865	dwarf2.c	FUNCTION_55	FOR_1	IF_1
0x4000478	            0xeb5c	                           jmp 0x40004d6	      3865	dwarf2.c	FUNCTION_55	FOR_1	IF_1
0x400047a	        0xf6432120	           test byte [rbx + 0x21], 0x20 	      3865	dwarf2.c	FUNCTION_55	FOR_1	IF_1
0x400047e	            0x755d	                           jne 0x40004dd	      3865	dwarf2.c	FUNCTION_55	FOR_1	IF_1
0x4000480	          0x488b33	                    mov rsi, qword [rbx]	      3869	dwarf2.c	FUNCTION_55	FOR_1	IF_2	CALL_1
0x4000483	        0x488b7d00	                    mov rdi, qword [rbp]	      3869	dwarf2.c	FUNCTION_55	FOR_1	IF_2	CALL_1
0x4000487	      0xe800000000	                          call 0x400048c	      3869	dwarf2.c	FUNCTION_55	FOR_1	IF_2	CALL_1
0x400048c	            0x85c0	                           test eax, eax	      3869	dwarf2.c	FUNCTION_55	FOR_1	IF_2	CALL_1
0x400048e	            0x7518	                           jne 0x40004a8	      3869	dwarf2.c	FUNCTION_55	FOR_1	IF_2	CALL_1
0x4000490	        0x488b4568	            mov rax, qword [rbp + 0x68] 	      3871	dwarf2.c	FUNCTION_55	FOR_1	IF_2
0x4000494	        0x48894368	             mov qword [rbx + 0x68], rax	      3871	dwarf2.c	FUNCTION_55	FOR_1	IF_2
0x4000498	        0x488b4560	            mov rax, qword [rbp + 0x60] 	      3872	dwarf2.c	FUNCTION_55	FOR_1	IF_2
0x400049c	        0x48894360	             mov qword [rbx + 0x60], rax	      3872	dwarf2.c	FUNCTION_55	FOR_1	IF_2
0x40004a0	        0x488b4528	            mov rax, qword [rbp + 0x28] 	      3873	dwarf2.c	FUNCTION_55	FOR_1	IF_2
0x40004a4	        0x48894328	             mov qword [rbx + 0x28], rax	      3873	dwarf2.c	FUNCTION_55	FOR_1	IF_2
0x40004a8	        0x488b6d10	            mov rbp, qword [rbp + 0x10] 	      3863	dwarf2.c	FUNCTION_55	FOR_1
0x40004ac	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      3863	dwarf2.c	FUNCTION_55	FOR_1
0x40004b0	          0x4885ed	                           test rbp, rbp	      3861	dwarf2.c	FUNCTION_55	FOR_1
0x40004b3	            0x7405	                            je 0x40004ba	      3861	dwarf2.c	FUNCTION_55	FOR_1
0x40004b5	          0x4885db	                           test rbx, rbx	      3861	dwarf2.c	FUNCTION_55	FOR_1
0x40004b8	            0x75c0	                           jne 0x400047a	      3861	dwarf2.c	FUNCTION_55	FOR_1
0x40004ba	      0xb801000000	                              mov eax, 1	      4019	dwarf2.c	FUNCTION_57
0x40004bf	            0xeb52	                           jmp 0x4000513	      4019	dwarf2.c	FUNCTION_57
0x40004c1	      0xb801000000	                              mov eax, 1	      3916	dwarf2.c	FUNCTION_57	IF_1
0x40004c6	            0xeb4b	                           jmp 0x4000513	      3916	dwarf2.c	FUNCTION_57	IF_1
0x40004c8	      0xb800000000	                              mov eax, 0	      3959	dwarf2.c	FUNCTION_57	ELSE_1	IF_6
0x40004cd	            0xeb44	                           jmp 0x4000513	      3959	dwarf2.c	FUNCTION_57	ELSE_1	IF_6
0x40004cf	      0xb801000000	                              mov eax, 1	      4019	dwarf2.c	FUNCTION_57
0x40004d4	            0xeb3d	                           jmp 0x4000513	      4019	dwarf2.c	FUNCTION_57
0x40004d6	      0xb801000000	                              mov eax, 1	      4019	dwarf2.c	FUNCTION_57
0x40004db	            0xeb36	                           jmp 0x4000513	      4019	dwarf2.c	FUNCTION_57
0x40004dd	      0xb801000000	                              mov eax, 1	      4019	dwarf2.c	FUNCTION_57
0x40004e2	            0xeb2f	                           jmp 0x4000513	      4019	dwarf2.c	FUNCTION_57
0x40004e4	      0xba01000000	                              mov edx, 1	      3981	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	CALL_5
0x40004e9	        0x488b6b40	            mov rbp, qword [rbx + 0x40] 	      3987	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3
0x40004ed	          0x4885ed	                           test rbp, rbp	      3987	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3
0x40004f0	     0xf85d5feffff	                           jne 0x40003cb	      3987	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3
0x40004f6	      0xe9c8feffff	                           jmp 0x40003c3	      3987	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3
0x40004fb	        0xf6432001	               test byte [rbx + 0x20], 1	      3983	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_8
0x40004ff	            0x74e3	                            je 0x40004e4	      3983	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_8
0x4000501	      0xba01000000	                              mov edx, 1	      3981	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	CALL_5
0x4000506	      0x4c3b742408	                cmp r14, qword [rsp + 8]	      3983	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_8
0x400050b	     0xf84a9feffff	                            je 0x40003ba	      3983	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_8
0x4000511	            0xebd1	                           jmp 0x40004e4	      3983	dwarf2.c	FUNCTION_57	ELSE_1	WHILE_2	FOR_3	IF_8
0x4000513	        0x4883c428	                           add rsp, 0x28	      4020	dwarf2.c	FUNCTION_57
0x4000517	              0x5b	                                 pop rbx	      4020	dwarf2.c	FUNCTION_57
0x4000518	              0x5d	                                 pop rbp	      4020	dwarf2.c	FUNCTION_57
0x4000519	            0x415c	                                 pop r12	      4020	dwarf2.c	FUNCTION_57
0x400051b	            0x415d	                                 pop r13	      4020	dwarf2.c	FUNCTION_57
0x400051d	            0x415e	                                 pop r14	      4020	dwarf2.c	FUNCTION_57
0x400051f	            0x415f	                                 pop r15	      4020	dwarf2.c	FUNCTION_57
0x4000521	              0xc3	                                     ret	      4020	dwarf2.c	FUNCTION_57
read_2_bytes	SWITCH,0:FOR,0:WHILE,0:IF,1:functions,0:ELSE,0:DO,0:CALL,1	10
0x4000040	        0x488d4e02	                      lea rcx, [rsi + 2]	       604	dwarf2.c	FUNCTION_8	IF_1
0x4000044	      0xb800000000	                              mov eax, 0	       605	dwarf2.c	FUNCTION_8	IF_1
0x4000049	          0x4839ca	                            cmp rdx, rcx	       604	dwarf2.c	FUNCTION_8	IF_1
0x400004c	            0x7212	                            jb 0x4000060	       604	dwarf2.c	FUNCTION_8	IF_1
0x400004e	        0x4883ec08	                              sub rsp, 8	       603	dwarf2.c	FUNCTION_8
0x4000052	        0x488b4708	                mov rax, qword [rdi + 8]	       606	dwarf2.c	FUNCTION_8	CALL_1
0x4000056	          0x4889f7	                            mov rdi, rsi	       606	dwarf2.c	FUNCTION_8	CALL_1
0x4000059	          0xff5050	                 call qword [rax + 0x50]	       606	dwarf2.c	FUNCTION_8	CALL_1
0x400005c	        0x4883c408	                              add rsp, 8	       607	dwarf2.c	FUNCTION_8
0x4000060	            0xf3c3	                                     ret	       607	dwarf2.c	FUNCTION_8
scan_unit_for_symbols	SWITCH,3:FOR,2:WHILE,1:IF,29:functions,0:ELSE,2:DO,0:CALL,24	426
0x4003315	            0x4157	                                push r15	      3041	dwarf2.c	FUNCTION_45
0x4003317	            0x4156	                                push r14	      3041	dwarf2.c	FUNCTION_45
0x4003319	            0x4155	                                push r13	      3041	dwarf2.c	FUNCTION_45
0x400331b	            0x4154	                                push r12	      3041	dwarf2.c	FUNCTION_45
0x400331d	              0x55	                                push rbp	      3041	dwarf2.c	FUNCTION_45
0x400331e	              0x53	                                push rbx	      3041	dwarf2.c	FUNCTION_45
0x400331f	    0x4881ec880000	                           sub rsp, 0x88	      3041	dwarf2.c	FUNCTION_45
0x4003326	          0x4989ff	                            mov r15, rdi	      3041	dwarf2.c	FUNCTION_45
0x4003329	    0x64488b042528	                mov rax, qword fs:[0x28]	      3041	dwarf2.c	FUNCTION_45
0x4003332	      0x4889442478	             mov qword [rsp + 0x78], rax	      3041	dwarf2.c	FUNCTION_45
0x4003337	            0x31c0	                            xor eax, eax	      3041	dwarf2.c	FUNCTION_45
0x4003339	        0x488b4710	            mov rax, qword [rdi + 0x10] 	      3042	dwarf2.c	FUNCTION_45
0x400333d	        0x48890424	                    mov qword [rsp], rax	      3042	dwarf2.c	FUNCTION_45
0x4003341	        0x4c8b6f68	            mov r13, qword [rdi + 0x68] 	      3043	dwarf2.c	FUNCTION_45
0x4003345	    0x488b87a00000	            mov rax, qword [rdi + 0xa0] 	      3044	dwarf2.c	FUNCTION_45
0x400334c	        0x4c8b7020	            mov r14, qword [rax + 0x20] 	      3044	dwarf2.c	FUNCTION_45
0x4003350	      0xbf00010000	                          mov edi, 0x100	      3054	dwarf2.c	FUNCTION_45
0x4003355	      0xe800000000	                          call 0x400335a	      3054	dwarf2.c	FUNCTION_45
0x400335a	          0x4889c1	                            mov rcx, rax	      3054	dwarf2.c	FUNCTION_45
0x400335d	      0x4889442408	                mov qword [rsp + 8], rax	      3054	dwarf2.c	FUNCTION_45
0x4003362	      0xb800000000	                              mov eax, 0	      3057	dwarf2.c	FUNCTION_45	IF_1
0x4003367	          0x4885c9	                           test rcx, rcx	      3056	dwarf2.c	FUNCTION_45	IF_1
0x400336a	     0xf8471060000	                            je 0x40039e1	      3056	dwarf2.c	FUNCTION_45	IF_1
0x4003370	    0x48c701000000	                      mov qword [rcx], 0	      3058	dwarf2.c	FUNCTION_45
0x4003377	          0x4d39f5	                            cmp r13, r14	      3072	dwarf2.c	FUNCTION_45	WHILE_1	IF_2
0x400337a	     0xf8336060000	                           jae 0x40039b6	      3072	dwarf2.c	FUNCTION_45	WHILE_1	IF_2
0x4003380	    0xc744244c2000	           mov dword [rsp + 0x4c], 0x20 	      3072	dwarf2.c	FUNCTION_45	WHILE_1	IF_2
0x4003388	    0xc74424140000	               mov dword [rsp + 0x14], 0	      3072	dwarf2.c	FUNCTION_45	WHILE_1	IF_2
0x4003390	            0xeb09	                           jmp 0x400339b	      3072	dwarf2.c	FUNCTION_45	WHILE_1	IF_2
0x4003392	          0x4d39f5	                            cmp r13, r14	      3072	dwarf2.c	FUNCTION_45	WHILE_1	IF_2
0x4003395	     0xf831b060000	                           jae 0x40039b6	      3072	dwarf2.c	FUNCTION_45	WHILE_1	IF_2
0x400339b	          0x4d89f0	                             mov r8, r14	      3075	dwarf2.c	FUNCTION_45	WHILE_1	CALL_2
0x400339e	      0xb900000000	                              mov ecx, 0	      3075	dwarf2.c	FUNCTION_45	WHILE_1	CALL_2
0x40033a3	      0x488d54245c	                   lea rdx, [rsp + 0x5c]	      3075	dwarf2.c	FUNCTION_45	WHILE_1	CALL_2
0x40033a8	          0x4c89ee	                            mov rsi, r13	      3075	dwarf2.c	FUNCTION_45	WHILE_1	CALL_2
0x40033ab	        0x488b3c24	                    mov rdi, qword [rsp]	      3075	dwarf2.c	FUNCTION_45	WHILE_1	CALL_2
0x40033af	      0xe800000000	                          call 0x40033b4	      3075	dwarf2.c	FUNCTION_45	WHILE_1	CALL_2
0x40033b4	            0x89c3	                            mov ebx, eax	      3075	dwarf2.c	FUNCTION_45	WHILE_1	CALL_2
0x40033b6	        0x8b54245c	            mov edx, dword [rsp + 0x5c] 	      3077	dwarf2.c	FUNCTION_45	WHILE_1
0x40033ba	          0x4901d5	                            add r13, rdx	      3077	dwarf2.c	FUNCTION_45	WHILE_1
0x40033bd	            0x85c0	                           test eax, eax	      3079	dwarf2.c	FUNCTION_45	WHILE_1	IF_3
0x40033bf	            0x750a	                           jne 0x40033cb	      3079	dwarf2.c	FUNCTION_45	WHILE_1	IF_3
0x40033c1	      0x836c241401	               sub dword [rsp + 0x14], 1	      3081	dwarf2.c	FUNCTION_45	WHILE_1	IF_3
0x40033c6	      0xe9fc050000	                           jmp 0x40039c7	      3081	dwarf2.c	FUNCTION_45	WHILE_1	IF_3
0x40033cb	        0x498b7738	            mov rsi, qword [r15 + 0x38] 	      3085	dwarf2.c	FUNCTION_45	WHILE_1	CALL_3
0x40033cf	            0x89c7	                            mov edi, eax	      3085	dwarf2.c	FUNCTION_45	WHILE_1	CALL_3
0x40033d1	      0xe81bcdffff	                  call sym.lookup_abbrev	      3085	dwarf2.c	FUNCTION_45	WHILE_1	CALL_3
0x40033d6	          0x4889c5	                            mov rbp, rax	      3085	dwarf2.c	FUNCTION_45	WHILE_1	CALL_3
0x40033d9	          0x4885c0	                           test rax, rax	      3086	dwarf2.c	FUNCTION_45	WHILE_1	IF_4
0x40033dc	            0x7540	                           jne 0x400341e	      3086	dwarf2.c	FUNCTION_45	WHILE_1	IF_4
0x40033de	    0x3b1d00000000	            cmp ebx, dword [0x040033e4] 	      3091	dwarf2.c	FUNCTION_45	WHILE_1	IF_4	IF_5
0x40033e4	            0x7429	                            je 0x400340f	      3091	dwarf2.c	FUNCTION_45	WHILE_1	IF_4	IF_5
0x40033e6	      0xba05000000	                              mov edx, 5	      3094	dwarf2.c	FUNCTION_45	WHILE_1	IF_4	IF_5	CALL_5
0x40033eb	      0xbe00000000	                              mov esi, 0	      3094	dwarf2.c	FUNCTION_45	WHILE_1	IF_4	IF_5	CALL_5
0x40033f0	      0xbf00000000	                              mov edi, 0	      3094	dwarf2.c	FUNCTION_45	WHILE_1	IF_4	IF_5	CALL_5
0x40033f5	      0xe800000000	                          call 0x40033fa	      3094	dwarf2.c	FUNCTION_45	WHILE_1	IF_4	IF_5	CALL_5
0x40033fa	            0x89de	                            mov esi, ebx	      3093	dwarf2.c	FUNCTION_45	WHILE_1	IF_4	IF_5	CALL_4
0x40033fc	          0x4889c7	                            mov rdi, rax	      3093	dwarf2.c	FUNCTION_45	WHILE_1	IF_4	IF_5	CALL_4
0x40033ff	      0xb800000000	                              mov eax, 0	      3093	dwarf2.c	FUNCTION_45	WHILE_1	IF_4	IF_5	CALL_4
0x4003404	      0xe800000000	                          call 0x4003409	      3093	dwarf2.c	FUNCTION_45	WHILE_1	IF_4	IF_5	CALL_4
0x4003409	    0x891d00000000	            mov dword [0x0400340f], ebx 	      3096	dwarf2.c	FUNCTION_45	WHILE_1	IF_4	IF_5
0x400340f	      0xbf11000000	                           mov edi, 0x11	      3098	dwarf2.c	FUNCTION_45	WHILE_1	IF_4	CALL_6
0x4003414	      0xe800000000	                          call 0x4003419	      3098	dwarf2.c	FUNCTION_45	WHILE_1	IF_4	CALL_6
0x4003419	      0xe998050000	                           jmp 0x40039b6	      3099	dwarf2.c	FUNCTION_45	WHILE_1	IF_4
0x400341e	          0x8b4004	                mov eax, dword [rax + 4]	      3103	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x4003421	          0x83f82e	                           cmp eax, 0x2e	      3104	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x4003424	     0xf87b2000000	                            ja 0x40034dc	      3104	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x400342a	    0x48bb08000020	              movabs rbx, 0x400020000008	      3105	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x4003434	        0x480fa3c3	                             bt rbx, rax	      3105	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x4003438	     0xf839e000000	                           jae 0x40034dc	      3105	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x400343e	      0xbe58000000	                           mov esi, 0x58	      3108	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	CALL_7
0x4003443	        0x488b3c24	                    mov rdi, qword [rsp]	      3108	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	CALL_7
0x4003447	      0xe800000000	                          call 0x400344c	      3108	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	CALL_7
0x400344c	          0x4989c4	                            mov r12, rax	      3108	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	CALL_7
0x400344f	          0x4885c0	                           test rax, rax	      3109	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_7
0x4003452	     0xf845e050000	                            je 0x40039b6	      3109	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_7
0x4003458	          0x8b4504	                mov eax, dword [rbp + 4]	      3111	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x400345b	      0x4189442428	             mov dword [r12 + 0x28], eax	      3111	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x4003460	    0x498b87800000	            mov rax, qword [r15 + 0x80] 	      3112	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x4003467	        0x49890424	                    mov qword [r12], rax	      3112	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x400346b	    0x4d89a7800000	             mov qword [r15 + 0x80], r12	      3113	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x4003472	    0x498387900000	               add qword [r15 + 0x90], 1	      3114	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x400347a	    0x4183bfb80000	               cmp dword [r15 + 0xb8], 0	      3115	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	CALL_8
0x4003482	            0x740f	                            je 0x4003493	      3115	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	CALL_8
0x4003484	      0xbe2b0c0000	                          mov esi, 0xc2b	      3115	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	CALL_8
0x4003489	      0xbf00000000	                              mov edi, 0	      3115	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	CALL_8
0x400348e	      0xe800000000	                          call 0x4003493	      3115	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	CALL_8
0x4003493	    0x41837c24281d	           cmp dword [r12 + 0x28], 0x1d 	      3117	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8
0x4003499	            0x7528	                           jne 0x40034c3	      3117	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8
0x400349b	        0x8b442414	            mov eax, dword [rsp + 0x14] 	      3117	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8
0x400349f	          0x83e801	                              sub eax, 1	      3117	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8
0x40034a2	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      3117	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8
0x40034a7	            0xeb15	                           jmp 0x40034be	      3118	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8	FOR_1
0x40034a9	            0x89c2	                            mov edx, eax	      3119	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8	FOR_1	IF_9
0x40034ab	        0x488b14d1	            mov rdx, qword [rcx + rdx*8]	      3119	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8	FOR_1	IF_9
0x40034af	          0x83e801	                              sub eax, 1	      3119	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8	FOR_1	IF_9
0x40034b2	          0x4885d2	                           test rdx, rdx	      3119	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8	FOR_1	IF_9
0x40034b5	            0x7407	                            je 0x40034be	      3119	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8	FOR_1	IF_9
0x40034b7	      0x4989542408	                mov qword [r12 + 8], rdx	      3121	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8	FOR_1	IF_9
0x40034bc	            0xeb05	                           jmp 0x40034c3	      3122	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8	FOR_1	IF_9
0x40034be	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      3118	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8	FOR_1
0x40034c1	            0x75e6	                           jne 0x40034a9	      3118	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8	FOR_1
0x40034c3	      0x4863442414	         movsxd rax, dword [rsp + 0x14] 	      3124	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x40034c8	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      3124	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x40034cd	        0x4c8924c3	            mov qword [rbx + rax*8], r12	      3124	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x40034d1	    0x48c744241800	               mov qword [rsp + 0x18], 0	      3102	dwarf2.c	FUNCTION_45	WHILE_1
0x40034da	            0xeb60	                           jmp 0x400353c	      3106	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x40034dc	    0x48c744241800	               mov qword [rsp + 0x18], 0	      3102	dwarf2.c	FUNCTION_45	WHILE_1
0x40034e5	          0x83f834	                           cmp eax, 0x34	      3129	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10
0x40034e8	            0x753a	                           jne 0x4003524	      3129	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10
0x40034ea	      0xbe38000000	                           mov esi, 0x38	      3132	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10	CALL_9
0x40034ef	        0x488b3c24	                    mov rdi, qword [rsp]	      3132	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10	CALL_9
0x40034f3	      0xe800000000	                          call 0x40034f8	      3132	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10	CALL_9
0x40034f8	          0x4889c3	                            mov rbx, rax	      3132	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10	CALL_9
0x40034fb	      0x4889442418	             mov qword [rsp + 0x18], rax	      3132	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10	CALL_9
0x4003500	          0x4885c0	                           test rax, rax	      3133	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10	IF_11
0x4003503	     0xf84ad040000	                            je 0x40039b6	      3133	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10	IF_11
0x4003509	          0x8b4504	                mov eax, dword [rbp + 4]	      3135	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10
0x400350c	          0x894314	             mov dword [rbx + 0x14], eax	      3135	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10
0x400350f	        0x804b3001	                 or byte [rbx + 0x30], 1	      3136	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10
0x4003513	    0x498b87980000	            mov rax, qword [r15 + 0x98] 	      3137	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10
0x400351a	          0x488903	                    mov qword [rbx], rax	      3137	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10
0x400351d	    0x49899f980000	             mov qword [r15 + 0x98], rbx	      3138	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10
0x4003524	      0x4863442414	         movsxd rax, dword [rsp + 0x14] 	      3144	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1
0x4003529	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      3144	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1
0x400352e	    0x48c704c30000	              mov qword [rbx + rax*8], 0	      3144	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1
0x4003536	    0x41bc00000000	                             mov r12d, 0	      3128	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1
0x400353c	        0x837d0c00	                cmp dword [rbp + 0xc], 0	      3147	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2
0x4003540	     0xf8424040000	                            je 0x400396a	      3147	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2
0x4003546	    0xc74424480000	               mov dword [rsp + 0x48], 0	      3147	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2
0x400354e	    0x48c744242800	               mov qword [rsp + 0x28], 0	      3147	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2
0x4003557	    0x48c744242000	               mov qword [rsp + 0x20], 0	      3147	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2
0x4003560	      0xbb00000000	                              mov ebx, 0	      3147	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2
0x4003565	      0x498d442418	                   lea rax, [r12 + 0x18]	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x400356a	      0x4889442430	             mov qword [rsp + 0x30], rax	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x400356f	      0x498d44242c	                   lea rax, [r12 + 0x2c]	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x4003574	      0x4889442438	             mov qword [rsp + 0x38], rax	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x4003579	      0x498d442430	                   lea rax, [r12 + 0x30]	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x400357e	      0x4889442440	             mov qword [rsp + 0x40], rax	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x4003583	            0x89d8	                            mov eax, ebx	      3149	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	CALL_10
0x4003585	        0x48c1e004	                              shl rax, 4	      3149	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	CALL_10
0x4003589	        0x48034510	             add rax, qword [rbp + 0x10]	      3149	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	CALL_10
0x400358d	            0x8b10	                    mov edx, dword [rax]	      1285	dwarf2.c	FUNCTION_22
0x400358f	        0x89542460	             mov dword [rsp + 0x60], edx	      1285	dwarf2.c	FUNCTION_22
0x4003593	        0x488b5008	                mov rdx, qword [rax + 8]	      1286	dwarf2.c	FUNCTION_22	CALL_1
0x4003597	          0x8b7004	                mov esi, dword [rax + 4]	      1286	dwarf2.c	FUNCTION_22	CALL_1
0x400359a	          0x4d89f1	                             mov r9, r14	      1286	dwarf2.c	FUNCTION_22	CALL_1
0x400359d	          0x4d89e8	                             mov r8, r13	      1286	dwarf2.c	FUNCTION_22	CALL_1
0x40035a0	          0x4c89f9	                            mov rcx, r15	      1286	dwarf2.c	FUNCTION_22	CALL_1
0x40035a3	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      1286	dwarf2.c	FUNCTION_22	CALL_1
0x40035a8	      0xe8a0dbffff	           call sym.read_attribute_value	      1286	dwarf2.c	FUNCTION_22	CALL_1
0x40035ad	          0x4989c5	                            mov r13, rax	      1286	dwarf2.c	FUNCTION_22	CALL_1
0x40035b0	          0x4885c0	                           test rax, rax	      3151	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_12
0x40035b3	     0xf84fd030000	                            je 0x40039b6	      3151	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_12
0x40035b9	          0x4d85e4	                           test r12, r12	      3154	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13
0x40035bc	     0xf84dd010000	                            je 0x400379f	      3154	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13
0x40035c2	        0x8b442460	            mov eax, dword [rsp + 0x60] 	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x40035c6	          0x83f83b	                           cmp eax, 0x3b	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x40035c9	     0xf84c1010000	                            je 0x4003790	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x40035cf	          0x83f83b	                           cmp eax, 0x3b	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x40035d2	            0x7742	                            ja 0x4003616	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x40035d4	          0x83f812	                           cmp eax, 0x12	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x40035d7	     0xf845f010000	                            je 0x400373c	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x40035dd	          0x83f812	                           cmp eax, 0x12	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x40035e0	            0x7721	                            ja 0x4003603	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x40035e2	          0x83f803	                              cmp eax, 3	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x40035e5	     0xf84c6000000	                            je 0x40036b1	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x40035eb	          0x83f811	                           cmp eax, 0x11	      3200	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x40035ee	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      3200	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x40035f3	    0x480f44442468	           cmove rax, qword [rsp + 0x68]	      3200	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x40035f9	      0x4889442420	             mov qword [rsp + 0x20], rax	      3200	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x40035fe	      0xe924030000	                           jmp 0x4003927	      3200	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4003603	          0x83f831	                           cmp eax, 0x31	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4003606	            0x746f	                            je 0x4003677	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4003608	          0x83f83a	                           cmp eax, 0x3a	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x400360b	     0xf8468010000	                            je 0x4003779	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4003611	      0xe911030000	                           jmp 0x4003927	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4003616	          0x83f858	                           cmp eax, 0x58	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4003619	            0x7436	                            je 0x4003651	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x400361b	          0x83f858	                           cmp eax, 0x58	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x400361e	            0x7713	                            ja 0x4003633	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4003620	          0x83f847	                           cmp eax, 0x47	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4003623	            0x7452	                            je 0x4003677	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4003625	          0x83f855	                           cmp eax, 0x55	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4003628	     0xf842c010000	                            je 0x400375a	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x400362e	      0xe9f4020000	                           jmp 0x4003927	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4003633	          0x83f86e	                           cmp eax, 0x6e	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4003636	     0xf84c9000000	                            je 0x4003705	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x400363c	      0x3d07200000	                         cmp eax, 0x2007	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4003641	     0xf84be000000	                            je 0x4003705	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4003647	          0x83f859	                           cmp eax, 0x59	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x400364a	            0x741c	                            je 0x4003668	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x400364c	      0xe9d6020000	                           jmp 0x4003927	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4003651	        0x498b7f78	            mov rdi, qword [r15 + 0x78] 	      3159	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	CALL_11
0x4003655	        0x8b742468	            mov esi, dword [rsp + 0x68] 	      3159	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	CALL_11
0x4003659	      0xe87ad7ffff	                call sym.concat_filename	      3159	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	CALL_11
0x400365e	      0x4989442410	             mov qword [r12 + 0x10], rax	      3159	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	CALL_11
0x4003663	      0xe9bf020000	                           jmp 0x4003927	      3161	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4003668	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      3164	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x400366d	      0x4189442420	             mov dword [r12 + 0x20], eax	      3164	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4003672	      0xe9b0020000	                           jmp 0x4003927	      3165	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4003677	        0x4883ec08	                              sub rsp, 8	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x400367b	      0x498d442424	                   lea rax, [r12 + 0x24]	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x4003680	              0x50	                                push rax	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x4003681	      0x4c8b4c2440	              mov r9, qword [rsp + 0x40]	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x4003686	      0x4c8b442448	              mov r8, qword [rsp + 0x48]	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x400368b	      0x488b4c2450	            mov rcx, qword [rsp + 0x50] 	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x4003690	      0x488d542470	                   lea rdx, [rsp + 0x70]	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x4003695	          0x4c89ee	                            mov rsi, r13	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x4003698	          0x4c89ff	                            mov rdi, r15	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x400369b	      0xe87ff7ffff	         call sym.find_abstract_instance	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x40036a0	        0x4883c410	                           add rsp, 0x10	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x40036a4	            0x85c0	                           test eax, eax	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x40036a6	     0xf857b020000	                           jne 0x4003927	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x40036ac	      0xe905030000	                           jmp 0x40039b6	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x40036b1	    0x49837c243000	               cmp qword [r12 + 0x30], 0	      3180	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_15	CALL_13
0x40036b7	     0xf856a020000	                           jne 0x4003927	      3180	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_15	CALL_13
0x40036bd	        0x8b442464	            mov eax, dword [rsp + 0x64] 	      3180	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_15	CALL_13
0x40036c1	          0x83f81f	                           cmp eax, 0x1f	      1077	dwarf2.c	FUNCTION_20
0x40036c4	            0x770b	                            ja 0x40036d1	      1077	dwarf2.c	FUNCTION_20
0x40036c6	      0xb900410080	                     mov ecx, 0x80004100	      1078	dwarf2.c	FUNCTION_20
0x40036cb	        0x480fa3c1	                             bt rcx, rax	      1078	dwarf2.c	FUNCTION_20
0x40036cf	            0x720b	                            jb 0x40036dc	      1078	dwarf2.c	FUNCTION_20
0x40036d1	      0x3d211f0000	                         cmp eax, 0x1f21	      3180	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_15	CALL_13
0x40036d6	     0xf854b020000	                           jne 0x4003927	      3180	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_15	CALL_13
0x40036dc	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      3182	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_15
0x40036e1	      0x4989442430	             mov qword [r12 + 0x30], rax	      3182	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_15
0x40036e6	        0x418b7f40	            mov edi, dword [r15 + 0x40] 	      3183	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_15	IF_16	CALL_14
0x40036ea	      0xe842caffff	                    call sym.non_mangled	      3183	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_15	IF_16	CALL_14
0x40036ef	            0x85c0	                           test eax, eax	      3183	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_15	IF_16	CALL_14
0x40036f1	     0xf8430020000	                            je 0x4003927	      3183	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_15	IF_16	CALL_14
0x40036f7	    0x41c744242c01	               mov dword [r12 + 0x2c], 1	      3184	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_15	IF_16
0x4003700	      0xe922020000	                           jmp 0x4003927	      3184	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_15	IF_16
0x4003705	        0x8b442464	            mov eax, dword [rsp + 0x64] 	      3192	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_17	CALL_15
0x4003709	          0x83f81f	                           cmp eax, 0x1f	      1077	dwarf2.c	FUNCTION_20
0x400370c	            0x770b	                            ja 0x4003719	      1077	dwarf2.c	FUNCTION_20
0x400370e	      0xb900410080	                     mov ecx, 0x80004100	      1078	dwarf2.c	FUNCTION_20
0x4003713	        0x480fa3c1	                             bt rcx, rax	      1078	dwarf2.c	FUNCTION_20
0x4003717	            0x720b	                            jb 0x4003724	      1078	dwarf2.c	FUNCTION_20
0x4003719	      0x3d211f0000	                         cmp eax, 0x1f21	      3192	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_17	CALL_15
0x400371e	     0xf8503020000	                           jne 0x4003927	      3192	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_17	CALL_15
0x4003724	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      3194	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_17
0x4003729	      0x4989442430	             mov qword [r12 + 0x30], rax	      3194	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_17
0x400372e	    0x41c744242c01	               mov dword [r12 + 0x2c], 1	      3195	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_17
0x4003737	      0xe9eb010000	                           jmp 0x4003927	      3195	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_17
0x400373c	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      3204	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4003741	      0x4889442428	             mov qword [rsp + 0x28], rax	      3204	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4003746	      0x837c246401	               cmp dword [rsp + 0x64], 1	      3205	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x400374b	           0xf95c0	                                setne al	      3205	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x400374e	           0xfb6c0	                           movzx eax, al	      3205	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4003751	        0x89442448	             mov dword [rsp + 0x48], eax	      3205	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4003755	      0xe9cd010000	                           jmp 0x4003927	      3206	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x400375a	      0x498d742438	                   lea rsi, [r12 + 0x38]	      3209	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_18	CALL_16
0x400375f	      0x488b542468	            mov rdx, qword [rsp + 0x68] 	      3209	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_18	CALL_16
0x4003764	          0x4c89ff	                            mov rdi, r15	      3209	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_18	CALL_16
0x4003767	      0xe8dad2ffff	                 call sym.read_rangelist	      3209	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_18	CALL_16
0x400376c	            0x85c0	                           test eax, eax	      3209	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_18	CALL_16
0x400376e	     0xf85b3010000	                           jne 0x4003927	      3209	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_18	CALL_16
0x4003774	      0xe93d020000	                           jmp 0x40039b6	      3209	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_18	CALL_16
0x4003779	        0x498b7f78	            mov rdi, qword [r15 + 0x78] 	      3214	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	CALL_17
0x400377d	        0x8b742468	            mov esi, dword [rsp + 0x68] 	      3214	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	CALL_17
0x4003781	      0xe852d6ffff	                call sym.concat_filename	      3214	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	CALL_17
0x4003786	      0x4989442418	             mov qword [r12 + 0x18], rax	      3214	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	CALL_17
0x400378b	      0xe997010000	                           jmp 0x4003927	      3216	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4003790	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      3219	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4003795	      0x4189442424	             mov dword [r12 + 0x24], eax	      3219	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x400379a	      0xe988010000	                           jmp 0x4003927	      3220	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x400379f	    0x48837c241800	               cmp qword [rsp + 0x18], 0	      3226	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19
0x40037a5	     0xf847c010000	                            je 0x4003927	      3226	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19
0x40037ab	        0x8b442460	            mov eax, dword [rsp + 0x60] 	      3228	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x40037af	          0x83f83a	                           cmp eax, 0x3a	      3228	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x40037b2	            0x7459	                            je 0x400380d	      3228	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x40037b4	          0x83f83a	                           cmp eax, 0x3a	      3228	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x40037b7	            0x7713	                            ja 0x40037cc	      3228	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x40037b9	          0x83f802	                              cmp eax, 2	      3228	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x40037bc	     0xf8492000000	                            je 0x4003854	      3228	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x40037c2	          0x83f803	                              cmp eax, 3	      3228	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x40037c5	            0x7414	                            je 0x40037db	      3228	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x40037c7	      0xe95b010000	                           jmp 0x4003927	      3228	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x40037cc	          0x83f83b	                           cmp eax, 0x3b	      3228	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x40037cf	            0x7457	                            je 0x4003828	      3228	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x40037d1	          0x83f83f	                           cmp eax, 0x3f	      3228	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x40037d4	            0x7464	                            je 0x400383a	      3228	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x40037d6	      0xe94c010000	                           jmp 0x4003927	      3228	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x40037db	        0x8b442464	            mov eax, dword [rsp + 0x64] 	      3231	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	IF_20	CALL_18
0x40037df	          0x83f81f	                           cmp eax, 0x1f	      1077	dwarf2.c	FUNCTION_20
0x40037e2	            0x770b	                            ja 0x40037ef	      1077	dwarf2.c	FUNCTION_20
0x40037e4	      0xb900410080	                     mov ecx, 0x80004100	      1078	dwarf2.c	FUNCTION_20
0x40037e9	        0x480fa3c1	                             bt rcx, rax	      1078	dwarf2.c	FUNCTION_20
0x40037ed	            0x720b	                            jb 0x40037fa	      1078	dwarf2.c	FUNCTION_20
0x40037ef	      0x3d211f0000	                         cmp eax, 0x1f21	      3231	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	IF_20	CALL_18
0x40037f4	     0xf852d010000	                           jne 0x4003927	      3231	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	IF_20	CALL_18
0x40037fa	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      3232	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	IF_20
0x40037ff	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      3232	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	IF_20
0x4003804	        0x48894118	             mov qword [rcx + 0x18], rax	      3232	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	IF_20
0x4003808	      0xe91a010000	                           jmp 0x4003927	      3232	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	IF_20
0x400380d	        0x498b7f78	            mov rdi, qword [r15 + 0x78] 	      3236	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	CALL_19
0x4003811	        0x8b742468	            mov esi, dword [rsp + 0x68] 	      3236	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	CALL_19
0x4003815	      0xe8bed5ffff	                call sym.concat_filename	      3236	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	CALL_19
0x400381a	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      3236	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	CALL_19
0x400381f	        0x48894108	                mov qword [rcx + 8], rax	      3236	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	CALL_19
0x4003823	      0xe9ff000000	                           jmp 0x4003927	      3238	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x4003828	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      3241	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x400382d	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      3241	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x4003832	          0x894110	             mov dword [rcx + 0x10], eax	      3241	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x4003835	      0xe9ed000000	                           jmp 0x4003927	      3242	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x400383a	    0x48837c246800	               cmp qword [rsp + 0x68], 0	      3245	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	IF_21
0x4003840	     0xf84e1000000	                            je 0x4003927	      3245	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	IF_21
0x4003846	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      3246	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	IF_21
0x400384b	        0x806030fe	             and byte [rax + 0x30], 0xfe	      3246	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	IF_21
0x400384f	      0xe9d3000000	                           jmp 0x4003927	      3246	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	IF_21
0x4003854	        0x8b442464	            mov eax, dword [rsp + 0x64] 	      3250	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3
0x4003858	          0x83e803	                              sub eax, 3	      3250	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3
0x400385b	          0x83f815	                           cmp eax, 0x15	      3250	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3
0x400385e	     0xf87c3000000	                            ja 0x4003927	      3250	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3
0x4003864	            0x89c0	                            mov eax, eax	      3250	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3
0x4003866	    0xff24c5000000	                       jmp qword [rax*8]	      3250	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3
0x400386d	      0x488b542468	            mov rdx, qword [rsp + 0x68] 	      3257	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22
0x4003872	        0x488b4208	                mov rax, qword [rdx + 8]	      3257	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22
0x4003876	          0x4885c0	                           test rax, rax	      3257	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22
0x4003879	     0xf84a8000000	                            je 0x4003927	      3257	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22
0x400387f	          0x803803	                       cmp byte [rax], 3	      3258	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22
0x4003882	     0xf859f000000	                           jne 0x4003927	      3258	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22
0x4003888	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      3260	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22
0x400388d	        0x806030fe	             and byte [rax + 0x30], 0xfe	      3260	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22
0x4003891	    0x410fb687ac00	           movzx eax, byte [r15 + 0xac] 	      3268	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23
0x4003899	           0xfb6c8	                           movzx ecx, al	      3268	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23
0x400389c	          0x83c101	                              add ecx, 1	      3268	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23
0x400389f	            0x390a	                    cmp dword [rdx], ecx	      3268	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23
0x40038a1	     0xf8580000000	                           jne 0x4003927	      3268	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23
0x40038a7	           0xfb6c0	                           movzx eax, al	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x40038aa	          0xc1e003	                              shl eax, 3	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x40038ad	          0x83f808	                              cmp eax, 8	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x40038b0	            0x750a	                           jne 0x40038bc	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x40038b2	        0x488b4208	                mov rax, qword [rdx + 8]	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x40038b6	         0xfb64001	               movzx eax, byte [rax + 1]	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x40038ba	            0xeb62	                           jmp 0x400391e	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x40038bc	          0x83f810	                           cmp eax, 0x10	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x40038bf	            0x7515	                           jne 0x40038d6	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x40038c1	        0x488b7a08	                mov rdi, qword [rdx + 8]	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x40038c5	        0x4883c701	                              add rdi, 1	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x40038c9	        0x498b4710	            mov rax, qword [r15 + 0x10] 	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x40038cd	        0x488b4008	                mov rax, qword [rax + 8]	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x40038d1	          0xff5050	                 call qword [rax + 0x50]	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x40038d4	            0xeb48	                           jmp 0x400391e	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x40038d6	          0x83f820	                           cmp eax, 0x20	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x40038d9	            0x7515	                           jne 0x40038f0	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x40038db	        0x488b7a08	                mov rdi, qword [rdx + 8]	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x40038df	        0x4883c701	                              add rdi, 1	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x40038e3	        0x498b4710	            mov rax, qword [r15 + 0x10] 	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x40038e7	        0x488b4008	                mov rax, qword [rax + 8]	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x40038eb	          0xff5038	                 call qword [rax + 0x38]	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x40038ee	            0xeb2e	                           jmp 0x400391e	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x40038f0	          0x83f840	                           cmp eax, 0x40	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x40038f3	            0x7515	                           jne 0x400390a	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x40038f5	        0x488b7a08	                mov rdi, qword [rdx + 8]	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x40038f9	        0x4883c701	                              add rdi, 1	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x40038fd	        0x498b4710	            mov rax, qword [r15 + 0x10] 	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4003901	        0x488b4008	                mov rax, qword [rax + 8]	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4003905	          0xff5020	                 call qword [rax + 0x20]	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4003908	            0xeb14	                           jmp 0x400391e	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x400390a	      0xba00000000	                              mov edx, 0	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x400390f	      0xbec70c0000	                          mov esi, 0xcc7	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4003914	      0xbf00000000	                              mov edi, 0	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4003919	      0xe800000000	                          call 0x400391e	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x400391e	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4003923	        0x48894120	             mov qword [rcx + 0x20], rax	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4003927	          0x83c301	                              add ebx, 1	      3147	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2
0x400392a	          0x395d0c	              cmp dword [rbp + 0xc], ebx	      3147	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2
0x400392d	     0xf8750fcffff	                            ja 0x4003583	      3147	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2
0x4003933	      0x488b5c2428	            mov rbx, qword [rsp + 0x28] 	      3287	dwarf2.c	FUNCTION_45	WHILE_1	IF_24
0x4003938	          0x4889d8	                            mov rax, rbx	      3287	dwarf2.c	FUNCTION_45	WHILE_1	IF_24
0x400393b	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      3287	dwarf2.c	FUNCTION_45	WHILE_1	IF_24
0x4003940	          0x4801d0	                            add rax, rdx	      3287	dwarf2.c	FUNCTION_45	WHILE_1	IF_24
0x4003943	      0x837c244800	               cmp dword [rsp + 0x48], 0	      3287	dwarf2.c	FUNCTION_45	WHILE_1	IF_24
0x4003948	        0x480f44c3	                          cmove rax, rbx	      3287	dwarf2.c	FUNCTION_45	WHILE_1	IF_24
0x400394c	          0x4d85e4	                           test r12, r12	      3289	dwarf2.c	FUNCTION_45	WHILE_1	IF_25
0x400394f	            0x7419	                            je 0x400396a	      3289	dwarf2.c	FUNCTION_45	WHILE_1	IF_25
0x4003951	          0x4885c0	                           test rax, rax	      3289	dwarf2.c	FUNCTION_45	WHILE_1	IF_25
0x4003954	            0x7414	                            je 0x400396a	      3289	dwarf2.c	FUNCTION_45	WHILE_1	IF_25
0x4003956	      0x498d742438	                   lea rsi, [r12 + 0x38]	      3291	dwarf2.c	FUNCTION_45	WHILE_1	IF_25	IF_26	CALL_21
0x400395b	          0x4889c1	                            mov rcx, rax	      3291	dwarf2.c	FUNCTION_45	WHILE_1	IF_25	IF_26	CALL_21
0x400395e	          0x4c89ff	                            mov rdi, r15	      3291	dwarf2.c	FUNCTION_45	WHILE_1	IF_25	IF_26	CALL_21
0x4003961	      0xe84cceffff	                     call sym.arange_add	      3291	dwarf2.c	FUNCTION_45	WHILE_1	IF_25	IF_26	CALL_21
0x4003966	            0x85c0	                           test eax, eax	      3291	dwarf2.c	FUNCTION_45	WHILE_1	IF_25	IF_26	CALL_21
0x4003968	            0x744c	                            je 0x40039b6	      3291	dwarf2.c	FUNCTION_45	WHILE_1	IF_25	IF_26	CALL_21
0x400396a	        0x837d0800	                  cmp dword [rbp + 8], 0	      3295	dwarf2.c	FUNCTION_45	WHILE_1	IF_27
0x400396e	            0x7457	                            je 0x40039c7	      3295	dwarf2.c	FUNCTION_45	WHILE_1	IF_27
0x4003970	      0x8344241401	               add dword [rsp + 0x14], 1	      3297	dwarf2.c	FUNCTION_45	WHILE_1	IF_27
0x4003975	        0x8b442414	            mov eax, dword [rsp + 0x14] 	      3297	dwarf2.c	FUNCTION_45	WHILE_1	IF_27
0x4003979	        0x3b44244c	            cmp eax, dword [rsp + 0x4c] 	      3299	dwarf2.c	FUNCTION_45	WHILE_1	IF_27	IF_28
0x400397d	            0x7c23	                            jl 0x40039a2	      3299	dwarf2.c	FUNCTION_45	WHILE_1	IF_27	IF_28
0x400397f	        0xd164244c	               shl dword [rsp + 0x4c], 1	      3303	dwarf2.c	FUNCTION_45	WHILE_1	IF_27	IF_28
0x4003983	        0x8b44244c	            mov eax, dword [rsp + 0x4c] 	      3303	dwarf2.c	FUNCTION_45	WHILE_1	IF_27	IF_28
0x4003987	          0x4863f0	                         movsxd rsi, eax	      3304	dwarf2.c	FUNCTION_45	WHILE_1	IF_27	IF_28
0x400398a	        0x48c1e603	                              shl rsi, 3	      3304	dwarf2.c	FUNCTION_45	WHILE_1	IF_27	IF_28
0x400398e	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      3304	dwarf2.c	FUNCTION_45	WHILE_1	IF_27	IF_28
0x4003993	      0xe800000000	                          call 0x4003998	      3304	dwarf2.c	FUNCTION_45	WHILE_1	IF_27	IF_28
0x4003998	          0x4885c0	                           test rax, rax	      3307	dwarf2.c	FUNCTION_45	WHILE_1	IF_27	IF_28	IF_29
0x400399b	            0x7419	                            je 0x40039b6	      3307	dwarf2.c	FUNCTION_45	WHILE_1	IF_27	IF_28	IF_29
0x400399d	      0x4889442408	                mov qword [rsp + 8], rax	      3309	dwarf2.c	FUNCTION_45	WHILE_1	IF_27	IF_28
0x40039a2	      0x4863442414	         movsxd rax, dword [rsp + 0x14] 	      3311	dwarf2.c	FUNCTION_45	WHILE_1	IF_27
0x40039a7	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      3311	dwarf2.c	FUNCTION_45	WHILE_1	IF_27
0x40039ac	    0x48c704c30000	              mov qword [rbx + rax*8], 0	      3311	dwarf2.c	FUNCTION_45	WHILE_1	IF_27
0x40039b4	            0xeb11	                           jmp 0x40039c7	      3311	dwarf2.c	FUNCTION_45	WHILE_1	IF_27
0x40039b6	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      3319	dwarf2.c	FUNCTION_45	CALL_24
0x40039bb	      0xe800000000	                          call 0x40039c0	      3319	dwarf2.c	FUNCTION_45	CALL_24
0x40039c0	      0xb800000000	                              mov eax, 0	      3320	dwarf2.c	FUNCTION_45
0x40039c5	            0xeb1a	                           jmp 0x40039e1	      3320	dwarf2.c	FUNCTION_45
0x40039c7	      0x837c241400	               cmp dword [rsp + 0x14], 0	      3060	dwarf2.c	FUNCTION_45	WHILE_1
0x40039cc	     0xf89c0f9ffff	                           jns 0x4003392	      3060	dwarf2.c	FUNCTION_45	WHILE_1
0x40039d2	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      3315	dwarf2.c	FUNCTION_45	CALL_23
0x40039d7	      0xe800000000	                          call 0x40039dc	      3315	dwarf2.c	FUNCTION_45	CALL_23
0x40039dc	      0xb801000000	                              mov eax, 1	      3316	dwarf2.c	FUNCTION_45
0x40039e1	      0x488b4c2478	            mov rcx, qword [rsp + 0x78] 	      3321	dwarf2.c	FUNCTION_45
0x40039e6	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3321	dwarf2.c	FUNCTION_45
0x40039ef	            0x7405	                            je 0x40039f6	      3321	dwarf2.c	FUNCTION_45
0x40039f1	      0xe800000000	                          call 0x40039f6	      3321	dwarf2.c	FUNCTION_45
0x40039f6	    0x4881c4880000	                           add rsp, 0x88	      3321	dwarf2.c	FUNCTION_45
0x40039fd	              0x5b	                                 pop rbx	      3321	dwarf2.c	FUNCTION_45
0x40039fe	              0x5d	                                 pop rbp	      3321	dwarf2.c	FUNCTION_45
0x40039ff	            0x415c	                                 pop r12	      3321	dwarf2.c	FUNCTION_45
0x4003a01	            0x415d	                                 pop r13	      3321	dwarf2.c	FUNCTION_45
0x4003a03	            0x415e	                                 pop r14	      3321	dwarf2.c	FUNCTION_45
0x4003a05	            0x415f	                                 pop r15	      3321	dwarf2.c	FUNCTION_45
0x4003a07	              0xc3	                                     ret	      3321	dwarf2.c	FUNCTION_45
_bfd_dwarf2_cleanup_debug_info	SWITCH,0:FOR,2:WHILE,3:IF,20:functions,0:ELSE,0:DO,0:CALL,21	142
0x4004480	            0x4157	                                push r15	      4885	dwarf2.c	FUNCTION_70
0x4004482	            0x4156	                                push r14	      4885	dwarf2.c	FUNCTION_70
0x4004484	            0x4155	                                push r13	      4885	dwarf2.c	FUNCTION_70
0x4004486	            0x4154	                                push r12	      4885	dwarf2.c	FUNCTION_70
0x4004488	              0x55	                                push rbp	      4885	dwarf2.c	FUNCTION_70
0x4004489	              0x53	                                push rbx	      4885	dwarf2.c	FUNCTION_70
0x400448a	        0x4883ec18	                           sub rsp, 0x18	      4885	dwarf2.c	FUNCTION_70
0x400448e	          0x4c8b3e	                    mov r15, qword [rsi]	      4886	dwarf2.c	FUNCTION_70
0x4004491	          0x4885ff	                           test rdi, rdi	      4889	dwarf2.c	FUNCTION_70	IF_1
0x4004494	     0xf84fb010000	                            je 0x4004695	      4889	dwarf2.c	FUNCTION_70	IF_1
0x400449a	          0x4d85ff	                           test r15, r15	      4889	dwarf2.c	FUNCTION_70	IF_1
0x400449d	     0xf84f2010000	                            je 0x4004695	      4889	dwarf2.c	FUNCTION_70	IF_1
0x40044a3	          0x498b07	                    mov rax, qword [r15]	      4892	dwarf2.c	FUNCTION_70	FOR_1
0x40044a6	      0x4889442408	                mov qword [rsp + 8], rax	      4892	dwarf2.c	FUNCTION_70	FOR_1
0x40044ab	          0x4885c0	                           test rax, rax	      4892	dwarf2.c	FUNCTION_70	FOR_1
0x40044ae	     0xf84fd000000	                            je 0x40045b1	      4892	dwarf2.c	FUNCTION_70	FOR_1
0x40044b4	      0x488b442408	                mov rax, qword [rsp + 8]	      4894	dwarf2.c	FUNCTION_70	FOR_1
0x40044b9	        0x4c8b6038	            mov r12, qword [rax + 0x38] 	      4894	dwarf2.c	FUNCTION_70	FOR_1
0x40044bd	    0x4c8ba8800000	            mov r13, qword [rax + 0x80] 	      4895	dwarf2.c	FUNCTION_70	FOR_1
0x40044c4	    0x4c8bb0980000	            mov r14, qword [rax + 0x98] 	      4896	dwarf2.c	FUNCTION_70	FOR_1
0x40044cb	          0x4c89e5	                            mov rbp, r12	      4896	dwarf2.c	FUNCTION_70	FOR_1
0x40044ce	    0x4981c4c80300	                          add r12, 0x3c8	      4896	dwarf2.c	FUNCTION_70	FOR_1
0x40044d5	        0x488b5d00	                    mov rbx, qword [rbp]	      4901	dwarf2.c	FUNCTION_70	FOR_1	FOR_2
0x40044d9	          0x4885db	                           test rbx, rbx	      4903	dwarf2.c	FUNCTION_70	FOR_1	FOR_2	WHILE_1
0x40044dc	            0x7412	                            je 0x40044f0	      4903	dwarf2.c	FUNCTION_70	FOR_1	FOR_2	WHILE_1
0x40044de	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      4905	dwarf2.c	FUNCTION_70	FOR_1	FOR_2	WHILE_1	CALL_1
0x40044e2	      0xe800000000	                          call 0x40044e7	      4905	dwarf2.c	FUNCTION_70	FOR_1	FOR_2	WHILE_1	CALL_1
0x40044e7	        0x488b5b18	            mov rbx, qword [rbx + 0x18] 	      4906	dwarf2.c	FUNCTION_70	FOR_1	FOR_2	WHILE_1
0x40044eb	          0x4885db	                           test rbx, rbx	      4903	dwarf2.c	FUNCTION_70	FOR_1	FOR_2	WHILE_1
0x40044ee	            0x75ee	                           jne 0x40044de	      4903	dwarf2.c	FUNCTION_70	FOR_1	FOR_2	WHILE_1
0x40044f0	        0x4883c508	                              add rbp, 8	      4903	dwarf2.c	FUNCTION_70	FOR_1	FOR_2	WHILE_1
0x40044f4	          0x4939ec	                            cmp r12, rbp	      4899	dwarf2.c	FUNCTION_70	FOR_1	FOR_2
0x40044f7	            0x75dc	                           jne 0x40044d5	      4899	dwarf2.c	FUNCTION_70	FOR_1	FOR_2
0x40044f9	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      4910	dwarf2.c	FUNCTION_70	FOR_1	IF_2
0x40044fe	        0x488b4378	            mov rax, qword [rbx + 0x78] 	      4910	dwarf2.c	FUNCTION_70	FOR_1	IF_2
0x4004502	          0x4885c0	                           test rax, rax	      4910	dwarf2.c	FUNCTION_70	FOR_1	IF_2
0x4004505	            0x7416	                            je 0x400451d	      4910	dwarf2.c	FUNCTION_70	FOR_1	IF_2
0x4004507	        0x488b7820	            mov rdi, qword [rax + 0x20] 	      4912	dwarf2.c	FUNCTION_70	FOR_1	IF_2	CALL_2
0x400450b	      0xe800000000	                          call 0x4004510	      4912	dwarf2.c	FUNCTION_70	FOR_1	IF_2	CALL_2
0x4004510	        0x488b4378	            mov rax, qword [rbx + 0x78] 	      4913	dwarf2.c	FUNCTION_70	FOR_1	IF_2	CALL_3
0x4004514	        0x488b7828	            mov rdi, qword [rax + 0x28] 	      4913	dwarf2.c	FUNCTION_70	FOR_1	IF_2	CALL_3
0x4004518	      0xe800000000	                          call 0x400451d	      4913	dwarf2.c	FUNCTION_70	FOR_1	IF_2	CALL_3
0x400451d	          0x4d85ed	                           test r13, r13	      4916	dwarf2.c	FUNCTION_70	FOR_1	WHILE_2
0x4004520	            0x7435	                            je 0x4004557	      4916	dwarf2.c	FUNCTION_70	FOR_1	WHILE_2
0x4004522	        0x498b7d18	            mov rdi, qword [r13 + 0x18] 	      4918	dwarf2.c	FUNCTION_70	FOR_1	WHILE_2	IF_3
0x4004526	          0x4885ff	                           test rdi, rdi	      4918	dwarf2.c	FUNCTION_70	FOR_1	WHILE_2	IF_3
0x4004529	            0x740d	                            je 0x4004538	      4918	dwarf2.c	FUNCTION_70	FOR_1	WHILE_2	IF_3
0x400452b	      0xe800000000	                          call 0x4004530	      4920	dwarf2.c	FUNCTION_70	FOR_1	WHILE_2	IF_3	CALL_4
0x4004530	    0x49c745180000	               mov qword [r13 + 0x18], 0	      4921	dwarf2.c	FUNCTION_70	FOR_1	WHILE_2	IF_3
0x4004538	        0x498b7d10	            mov rdi, qword [r13 + 0x10] 	      4924	dwarf2.c	FUNCTION_70	FOR_1	WHILE_2	IF_4
0x400453c	          0x4885ff	                           test rdi, rdi	      4924	dwarf2.c	FUNCTION_70	FOR_1	WHILE_2	IF_4
0x400453f	            0x740d	                            je 0x400454e	      4924	dwarf2.c	FUNCTION_70	FOR_1	WHILE_2	IF_4
0x4004541	      0xe800000000	                          call 0x4004546	      4926	dwarf2.c	FUNCTION_70	FOR_1	WHILE_2	IF_4	CALL_5
0x4004546	    0x49c745100000	               mov qword [r13 + 0x10], 0	      4927	dwarf2.c	FUNCTION_70	FOR_1	WHILE_2	IF_4
0x400454e	        0x4d8b6d00	                    mov r13, qword [r13]	      4929	dwarf2.c	FUNCTION_70	FOR_1	WHILE_2
0x4004552	          0x4d85ed	                           test r13, r13	      4916	dwarf2.c	FUNCTION_70	FOR_1	WHILE_2
0x4004555	            0x75cb	                           jne 0x4004522	      4916	dwarf2.c	FUNCTION_70	FOR_1	WHILE_2
0x4004557	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      4932	dwarf2.c	FUNCTION_70	FOR_1	IF_5
0x400455c	    0x488bbb880000	            mov rdi, qword [rbx + 0x88] 	      4932	dwarf2.c	FUNCTION_70	FOR_1	IF_5
0x4004563	          0x4885ff	                           test rdi, rdi	      4932	dwarf2.c	FUNCTION_70	FOR_1	IF_5
0x4004566	            0x7410	                            je 0x4004578	      4932	dwarf2.c	FUNCTION_70	FOR_1	IF_5
0x4004568	      0xe800000000	                          call 0x400456d	      4934	dwarf2.c	FUNCTION_70	FOR_1	IF_5	CALL_6
0x400456d	    0x48c783880000	               mov qword [rbx + 0x88], 0	      4935	dwarf2.c	FUNCTION_70	FOR_1	IF_5
0x4004578	          0x4d85f6	                           test r14, r14	      4938	dwarf2.c	FUNCTION_70	FOR_1	WHILE_3
0x400457b	            0x741e	                            je 0x400459b	      4938	dwarf2.c	FUNCTION_70	FOR_1	WHILE_3
0x400457d	        0x498b7e08	                mov rdi, qword [r14 + 8]	      4940	dwarf2.c	FUNCTION_70	FOR_1	WHILE_3	IF_6
0x4004581	          0x4885ff	                           test rdi, rdi	      4940	dwarf2.c	FUNCTION_70	FOR_1	WHILE_3	IF_6
0x4004584	            0x740d	                            je 0x4004593	      4940	dwarf2.c	FUNCTION_70	FOR_1	WHILE_3	IF_6
0x4004586	      0xe800000000	                          call 0x400458b	      4942	dwarf2.c	FUNCTION_70	FOR_1	WHILE_3	IF_6	CALL_7
0x400458b	    0x49c746080000	                  mov qword [r14 + 8], 0	      4943	dwarf2.c	FUNCTION_70	FOR_1	WHILE_3	IF_6
0x4004593	          0x4d8b36	                    mov r14, qword [r14]	      4946	dwarf2.c	FUNCTION_70	FOR_1	WHILE_3
0x4004596	          0x4d85f6	                           test r14, r14	      4938	dwarf2.c	FUNCTION_70	FOR_1	WHILE_3
0x4004599	            0x75e2	                           jne 0x400457d	      4938	dwarf2.c	FUNCTION_70	FOR_1	WHILE_3
0x400459b	      0x488b442408	                mov rax, qword [rsp + 8]	      4892	dwarf2.c	FUNCTION_70	FOR_1
0x40045a0	          0x488b00	                    mov rax, qword [rax]	      4892	dwarf2.c	FUNCTION_70	FOR_1
0x40045a3	      0x4889442408	                mov qword [rsp + 8], rax	      4892	dwarf2.c	FUNCTION_70	FOR_1
0x40045a8	          0x4885c0	                           test rax, rax	      4892	dwarf2.c	FUNCTION_70	FOR_1
0x40045ab	     0xf8503ffffff	                           jne 0x40044b4	      4892	dwarf2.c	FUNCTION_70	FOR_1
0x40045b1	    0x498bbff80000	            mov rdi, qword [r15 + 0xf8] 	      4950	dwarf2.c	FUNCTION_70	IF_7
0x40045b8	          0x4885ff	                           test rdi, rdi	      4950	dwarf2.c	FUNCTION_70	IF_7
0x40045bb	            0x7405	                            je 0x40045c2	      4950	dwarf2.c	FUNCTION_70	IF_7
0x40045bd	      0xe800000000	                          call 0x40045c2	      4951	dwarf2.c	FUNCTION_70	CALL_8
0x40045c2	    0x498bbf000100	           mov rdi, qword [r15 + 0x100] 	      4952	dwarf2.c	FUNCTION_70	IF_8
0x40045c9	          0x4885ff	                           test rdi, rdi	      4952	dwarf2.c	FUNCTION_70	IF_8
0x40045cc	            0x7405	                            je 0x40045d3	      4952	dwarf2.c	FUNCTION_70	IF_8
0x40045ce	      0xe800000000	                          call 0x40045d3	      4953	dwarf2.c	FUNCTION_70	CALL_9
0x40045d3	    0x498bbf800000	            mov rdi, qword [r15 + 0x80] 	      4954	dwarf2.c	FUNCTION_70	IF_9
0x40045da	          0x4885ff	                           test rdi, rdi	      4954	dwarf2.c	FUNCTION_70	IF_9
0x40045dd	            0x7405	                            je 0x40045e4	      4954	dwarf2.c	FUNCTION_70	IF_9
0x40045df	      0xe800000000	                          call 0x40045e4	      4955	dwarf2.c	FUNCTION_70	CALL_10
0x40045e4	    0x498bbf900000	            mov rdi, qword [r15 + 0x90] 	      4956	dwarf2.c	FUNCTION_70	IF_10
0x40045eb	          0x4885ff	                           test rdi, rdi	      4956	dwarf2.c	FUNCTION_70	IF_10
0x40045ee	            0x7405	                            je 0x40045f5	      4956	dwarf2.c	FUNCTION_70	IF_10
0x40045f0	      0xe800000000	                          call 0x40045f5	      4957	dwarf2.c	FUNCTION_70	CALL_11
0x40045f5	    0x498bbfa00000	            mov rdi, qword [r15 + 0xa0] 	      4958	dwarf2.c	FUNCTION_70	IF_11
0x40045fc	          0x4885ff	                           test rdi, rdi	      4958	dwarf2.c	FUNCTION_70	IF_11
0x40045ff	            0x7405	                            je 0x4004606	      4958	dwarf2.c	FUNCTION_70	IF_11
0x4004601	      0xe800000000	                          call 0x4004606	      4959	dwarf2.c	FUNCTION_70	CALL_12
0x4004606	    0x498bbfb00000	            mov rdi, qword [r15 + 0xb0] 	      4960	dwarf2.c	FUNCTION_70	IF_12
0x400460d	          0x4885ff	                           test rdi, rdi	      4960	dwarf2.c	FUNCTION_70	IF_12
0x4004610	            0x7405	                            je 0x4004617	      4960	dwarf2.c	FUNCTION_70	IF_12
0x4004612	      0xe800000000	                          call 0x4004617	      4961	dwarf2.c	FUNCTION_70	CALL_13
0x4004617	    0x498bbfc00000	            mov rdi, qword [r15 + 0xc0] 	      4962	dwarf2.c	FUNCTION_70	IF_13
0x400461e	          0x4885ff	                           test rdi, rdi	      4962	dwarf2.c	FUNCTION_70	IF_13
0x4004621	            0x7405	                            je 0x4004628	      4962	dwarf2.c	FUNCTION_70	IF_13
0x4004623	      0xe800000000	                          call 0x4004628	      4963	dwarf2.c	FUNCTION_70	CALL_14
0x4004628	        0x498b7f70	            mov rdi, qword [r15 + 0x70] 	      4964	dwarf2.c	FUNCTION_70	IF_14
0x400462c	          0x4885ff	                           test rdi, rdi	      4964	dwarf2.c	FUNCTION_70	IF_14
0x400462f	            0x7405	                            je 0x4004636	      4964	dwarf2.c	FUNCTION_70	IF_14
0x4004631	      0xe800000000	                          call 0x4004636	      4965	dwarf2.c	FUNCTION_70	CALL_15
0x4004636	    0x4183bf140100	              cmp dword [r15 + 0x114], 0	      4966	dwarf2.c	FUNCTION_70	IF_15
0x400463e	            0x7409	                            je 0x4004649	      4966	dwarf2.c	FUNCTION_70	IF_15
0x4004640	        0x498b7f30	            mov rdi, qword [r15 + 0x30] 	      4967	dwarf2.c	FUNCTION_70	CALL_16
0x4004644	      0xe800000000	                          call 0x4004649	      4967	dwarf2.c	FUNCTION_70	CALL_16
0x4004649	        0x498b7f50	            mov rdi, qword [r15 + 0x50] 	      4968	dwarf2.c	FUNCTION_70	IF_16
0x400464d	          0x4885ff	                           test rdi, rdi	      4968	dwarf2.c	FUNCTION_70	IF_16
0x4004650	            0x7405	                            je 0x4004657	      4968	dwarf2.c	FUNCTION_70	IF_16
0x4004652	      0xe800000000	                          call 0x4004657	      4969	dwarf2.c	FUNCTION_70	CALL_17
0x4004657	        0x498b7f60	            mov rdi, qword [r15 + 0x60] 	      4970	dwarf2.c	FUNCTION_70	IF_17
0x400465b	          0x4885ff	                           test rdi, rdi	      4970	dwarf2.c	FUNCTION_70	IF_17
0x400465e	            0x7405	                            je 0x4004665	      4970	dwarf2.c	FUNCTION_70	IF_17
0x4004660	      0xe800000000	                          call 0x4004665	      4971	dwarf2.c	FUNCTION_70	CALL_18
0x4004665	    0x498bbfd80000	            mov rdi, qword [r15 + 0xd8] 	      4972	dwarf2.c	FUNCTION_70	IF_18
0x400466c	          0x4885ff	                           test rdi, rdi	      4972	dwarf2.c	FUNCTION_70	IF_18
0x400466f	            0x7405	                            je 0x4004676	      4972	dwarf2.c	FUNCTION_70	IF_18
0x4004671	      0xe800000000	                          call 0x4004676	      4973	dwarf2.c	FUNCTION_70	CALL_19
0x4004676	    0x498bbfe80000	            mov rdi, qword [r15 + 0xe8] 	      4974	dwarf2.c	FUNCTION_70	IF_19
0x400467d	          0x4885ff	                           test rdi, rdi	      4974	dwarf2.c	FUNCTION_70	IF_19
0x4004680	            0x7405	                            je 0x4004687	      4974	dwarf2.c	FUNCTION_70	IF_19
0x4004682	      0xe800000000	                          call 0x4004687	      4975	dwarf2.c	FUNCTION_70	CALL_20
0x4004687	        0x498b7f48	            mov rdi, qword [r15 + 0x48] 	      4976	dwarf2.c	FUNCTION_70	IF_20
0x400468b	          0x4885ff	                           test rdi, rdi	      4976	dwarf2.c	FUNCTION_70	IF_20
0x400468e	            0x7405	                            je 0x4004695	      4976	dwarf2.c	FUNCTION_70	IF_20
0x4004690	      0xe800000000	                          call 0x4004695	      4977	dwarf2.c	FUNCTION_70	CALL_21
0x4004695	        0x4883c418	                           add rsp, 0x18	      4978	dwarf2.c	FUNCTION_70
0x4004699	              0x5b	                                 pop rbx	      4978	dwarf2.c	FUNCTION_70
0x400469a	              0x5d	                                 pop rbp	      4978	dwarf2.c	FUNCTION_70
0x400469b	            0x415c	                                 pop r12	      4978	dwarf2.c	FUNCTION_70
0x400469d	            0x415d	                                 pop r13	      4978	dwarf2.c	FUNCTION_70
0x400469f	            0x415e	                                 pop r14	      4978	dwarf2.c	FUNCTION_70
0x40046a1	            0x415f	                                 pop r15	      4978	dwarf2.c	FUNCTION_70
0x40046a3	              0xc3	                                     ret	      4978	dwarf2.c	FUNCTION_70
read_string	SWITCH,0:FOR,0:WHILE,1:IF,3:functions,0:ELSE,0:DO,0:CALL,0	25
0x40000a6	          0x4839d6	                            cmp rsi, rdx	       660	dwarf2.c	FUNCTION_12	IF_1
0x40000a9	            0x720c	                            jb 0x40000b7	       660	dwarf2.c	FUNCTION_12	IF_1
0x40000ab	    0xc70100000000	                      mov dword [rcx], 0	       662	dwarf2.c	FUNCTION_12	IF_1
0x40000b1	      0xb800000000	                              mov eax, 0	       663	dwarf2.c	FUNCTION_12	IF_1
0x40000b6	              0xc3	                                     ret	       663	dwarf2.c	FUNCTION_12	IF_1
0x40000b7	        0x488d7e01	                      lea rdi, [rsi + 1]	       673	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x40000bb	          0x803e00	                       cmp byte [rsi], 0	       666	dwarf2.c	FUNCTION_12	IF_2
0x40000be	            0x7516	                           jne 0x40000d6	       666	dwarf2.c	FUNCTION_12	IF_2
0x40000c0	    0xc70101000000	                      mov dword [rcx], 1	       668	dwarf2.c	FUNCTION_12	IF_2
0x40000c6	      0xb800000000	                              mov eax, 0	       669	dwarf2.c	FUNCTION_12	IF_2
0x40000cb	              0xc3	                                     ret	       669	dwarf2.c	FUNCTION_12	IF_2
0x40000cc	        0x4883c701	                              add rdi, 1	       673	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x40000d0	        0x807fff00	                   cmp byte [rdi - 1], 0	       673	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x40000d4	            0x7407	                            je 0x40000dd	       673	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x40000d6	          0x4839fa	                            cmp rdx, rdi	       672	dwarf2.c	FUNCTION_12	WHILE_1
0x40000d9	            0x75f1	                           jne 0x40000cc	       672	dwarf2.c	FUNCTION_12	WHILE_1
0x40000db	            0xeb09	                           jmp 0x40000e6	       672	dwarf2.c	FUNCTION_12	WHILE_1
0x40000dd	          0x4829f7	                            sub rdi, rsi	       675	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x40000e0	            0x8939	                    mov dword [rcx], edi	       675	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x40000e2	          0x4889f0	                            mov rax, rsi	       676	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x40000e5	              0xc3	                                     ret	       676	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x40000e6	          0x4829f2	                            sub rdx, rsi	       679	dwarf2.c	FUNCTION_12
0x40000e9	            0x8911	                    mov dword [rcx], edx	       679	dwarf2.c	FUNCTION_12
0x40000eb	      0xb800000000	                              mov eax, 0	       680	dwarf2.c	FUNCTION_12
0x40000f0	              0xc3	                                     ret	       681	dwarf2.c	FUNCTION_12
_bfd_dwarf2_slurp_debug_info	SWITCH,0:FOR,2:WHILE,0:IF,18:functions,0:ELSE,2:DO,0:CALL,25	275
0x40046a4	            0x4157	                                push r15	      4311	dwarf2.c	FUNCTION_66
0x40046a6	            0x4156	                                push r14	      4311	dwarf2.c	FUNCTION_66
0x40046a8	            0x4155	                                push r13	      4311	dwarf2.c	FUNCTION_66
0x40046aa	            0x4154	                                push r12	      4311	dwarf2.c	FUNCTION_66
0x40046ac	              0x55	                                push rbp	      4311	dwarf2.c	FUNCTION_66
0x40046ad	              0x53	                                push rbx	      4311	dwarf2.c	FUNCTION_66
0x40046ae	        0x4883ec28	                           sub rsp, 0x28	      4311	dwarf2.c	FUNCTION_66
0x40046b2	          0x4989fe	                            mov r14, rdi	      4311	dwarf2.c	FUNCTION_66
0x40046b5	          0x4889f5	                            mov rbp, rsi	      4311	dwarf2.c	FUNCTION_66
0x40046b8	          0x4989d5	                            mov r13, rdx	      4311	dwarf2.c	FUNCTION_66
0x40046bb	          0x4989cf	                            mov r15, rcx	      4311	dwarf2.c	FUNCTION_66
0x40046be	          0x4d89c4	                             mov r12, r8	      4311	dwarf2.c	FUNCTION_66
0x40046c1	      0x44894c240c	              mov dword [rsp + 0xc], r9d	      4311	dwarf2.c	FUNCTION_66
0x40046c6	    0x64488b042528	                mov rax, qword fs:[0x28]	      4311	dwarf2.c	FUNCTION_66
0x40046cf	      0x4889442418	             mov qword [rsp + 0x18], rax	      4311	dwarf2.c	FUNCTION_66
0x40046d4	            0x31c0	                            xor eax, eax	      4311	dwarf2.c	FUNCTION_66
0x40046d6	          0x498b18	                     mov rbx, qword [r8]	      4315	dwarf2.c	FUNCTION_66
0x40046d9	          0x4885db	                           test rbx, rbx	      4317	dwarf2.c	FUNCTION_66	IF_1
0x40046dc	     0xf84c0000000	                            je 0x40047a2	      4317	dwarf2.c	FUNCTION_66	IF_1
0x40046e2	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	      4319	dwarf2.c	FUNCTION_66	IF_1	IF_2
0x40046e6	          0x4c39f7	                            cmp rdi, r14	      4319	dwarf2.c	FUNCTION_66	IF_1	IF_2
0x40046e9	            0x7577	                           jne 0x4004762	      4319	dwarf2.c	FUNCTION_66	IF_1	IF_2
0x40046eb	    0x488b97900000	            mov rdx, qword [rdi + 0x90] 	      4286	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1
0x40046f2	    0x8b8fa0000000	            mov ecx, dword [rdi + 0xa0] 	      4286	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1
0x40046f8	            0x85c9	                           test ecx, ecx	      4286	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1
0x40046fa	     0xf8483030000	                            je 0x4004a83	      4286	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1
0x4004700	    0x488b83d80000	            mov rax, qword [rbx + 0xd8] 	      4294	dwarf2.c	FUNCTION_65	FOR_1	ELSE_1	IF_2
0x4004707	          0x8d49ff	                      lea ecx, [rcx - 1]	      4294	dwarf2.c	FUNCTION_65	FOR_1	ELSE_1	IF_2
0x400470a	      0x4c8d44c808	               lea r8, [rax + rcx*8 + 8]	      4294	dwarf2.c	FUNCTION_65	FOR_1	ELSE_1	IF_2
0x400470f	        0x488b7268	            mov rsi, qword [rdx + 0x68] 	      4290	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1	IF_1
0x4004713	          0x4885f6	                           test rsi, rsi	      4290	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1	IF_1
0x4004716	            0x740a	                            je 0x4004722	      4290	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1	IF_1
0x4004718	        0x488b4a60	            mov rcx, qword [rdx + 0x60] 	      4291	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1	IF_1
0x400471c	        0x48034e28	             add rcx, qword [rsi + 0x28]	      4291	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1	IF_1
0x4004720	            0xeb04	                           jmp 0x4004726	      4291	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1	IF_1
0x4004722	        0x488b4a28	            mov rcx, qword [rdx + 0x28] 	      4293	dwarf2.c	FUNCTION_65	FOR_1	ELSE_1
0x4004726	          0x483908	                    cmp qword [rax], rcx	      4294	dwarf2.c	FUNCTION_65	FOR_1	ELSE_1	IF_2
0x4004729	            0x7537	                           jne 0x4004762	      4294	dwarf2.c	FUNCTION_65	FOR_1	ELSE_1	IF_2
0x400472b	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      4286	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1
0x400472f	        0x4883c008	                              add rax, 8	      4286	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1
0x4004733	          0x4c39c0	                             cmp rax, r8	      4286	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1
0x4004736	            0x75d7	                           jne 0x400470f	      4286	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1
0x4004738	      0xe946030000	                           jmp 0x4004a83	      4286	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1
0x400473d	      0xb801000000	                              mov eax, 1	      4328	dwarf2.c	FUNCTION_66	IF_1	IF_2	IF_3
0x4004742	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      4326	dwarf2.c	FUNCTION_66	IF_1	IF_2	IF_3	IF_4	CALL_2
0x4004747	     0xf8424030000	                            je 0x4004a71	      4326	dwarf2.c	FUNCTION_66	IF_1	IF_2	IF_3	IF_4	CALL_2
0x400474d	          0x4889de	                            mov rsi, rbx	      4326	dwarf2.c	FUNCTION_66	IF_1	IF_2	IF_3	IF_4	CALL_2
0x4004750	      0xe8a3baffff	                 call sym.place_sections	      4326	dwarf2.c	FUNCTION_66	IF_1	IF_2	IF_3	IF_4	CALL_2
0x4004755	            0x85c0	                           test eax, eax	      4327	dwarf2.c	FUNCTION_66	IF_1	IF_2	IF_3	IF_4
0x4004757	           0xf95c0	                                setne al	      4327	dwarf2.c	FUNCTION_66	IF_1	IF_2	IF_3	IF_4
0x400475a	           0xfb6c0	                           movzx eax, al	      4327	dwarf2.c	FUNCTION_66	IF_1	IF_2	IF_3	IF_4
0x400475d	      0xe90f030000	                           jmp 0x4004a71	      4327	dwarf2.c	FUNCTION_66	IF_1	IF_2	IF_3	IF_4
0x4004762	          0x4c89e6	                            mov rsi, r12	      4333	dwarf2.c	FUNCTION_66	IF_1	CALL_3
0x4004765	          0x4c89f7	                            mov rdi, r14	      4333	dwarf2.c	FUNCTION_66	IF_1	CALL_3
0x4004768	      0xe800000000	                          call 0x400476d	      4333	dwarf2.c	FUNCTION_66	IF_1	CALL_3
0x400476d	    0x48c703000000	                      mov qword [rbx], 0	        90	string3.h	FUNCTION_75	CALL_6
0x4004774	    0x48c783100100	              mov qword [rbx + 0x110], 0	        90	string3.h	FUNCTION_75	CALL_6
0x400477f	        0x488d7b08	                      lea rdi, [rbx + 8]	        90	string3.h	FUNCTION_75	CALL_6
0x4004783	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_75	CALL_6
0x4004787	          0x4889d9	                            mov rcx, rbx	        90	string3.h	FUNCTION_75	CALL_6
0x400478a	          0x4829f9	                            sub rcx, rdi	        90	string3.h	FUNCTION_75	CALL_6
0x400478d	    0x81c118010000	                          add ecx, 0x118	        90	string3.h	FUNCTION_75	CALL_6
0x4004793	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_75	CALL_6
0x4004796	            0x89c9	                            mov ecx, ecx	        90	string3.h	FUNCTION_75	CALL_6
0x4004798	      0xb800000000	                              mov eax, 0	        90	string3.h	FUNCTION_75	CALL_6
0x400479d	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_75	CALL_6
0x40047a0	            0xeb16	                           jmp 0x40047b8	        90	string3.h	FUNCTION_75	CALL_6
0x40047a2	      0xbe18010000	                          mov esi, 0x118	      4338	dwarf2.c	FUNCTION_66	ELSE_1	CALL_5
0x40047a7	      0xe800000000	                          call 0x40047ac	      4338	dwarf2.c	FUNCTION_66	ELSE_1	CALL_5
0x40047ac	          0x4889c3	                            mov rbx, rax	      4338	dwarf2.c	FUNCTION_66	ELSE_1	CALL_5
0x40047af	          0x4885c0	                           test rax, rax	      4339	dwarf2.c	FUNCTION_66	ELSE_1	IF_5
0x40047b2	     0xf849f020000	                            je 0x4004a57	      4339	dwarf2.c	FUNCTION_66	ELSE_1	IF_5
0x40047b8	        0x4c897328	             mov qword [rbx + 0x28], r14	      4342	dwarf2.c	FUNCTION_66
0x40047bc	        0x4c896b10	             mov qword [rbx + 0x10], r13	      4343	dwarf2.c	FUNCTION_66
0x40047c0	        0x4c897b78	             mov qword [rbx + 0x78], r15	      4344	dwarf2.c	FUNCTION_66
0x40047c4	    0x418bbea00000	            mov edi, dword [r14 + 0xa0] 	      4258	dwarf2.c	FUNCTION_64	IF_1
0x40047cb	            0x85ff	                           test edi, edi	      4258	dwarf2.c	FUNCTION_64	IF_1
0x40047cd	     0xf84c1020000	                            je 0x4004a94	      4258	dwarf2.c	FUNCTION_64	IF_1
0x40047d3	            0x89ff	                            mov edi, edi	      4260	dwarf2.c	FUNCTION_64	CALL_1
0x40047d5	        0x48c1e703	                              shl rdi, 3	      4260	dwarf2.c	FUNCTION_64	CALL_1
0x40047d9	      0xe800000000	                          call 0x40047de	      4260	dwarf2.c	FUNCTION_64	CALL_1
0x40047de	    0x488983d80000	             mov qword [rbx + 0xd8], rax	      4260	dwarf2.c	FUNCTION_64	CALL_1
0x40047e5	          0x4885c0	                           test rax, rax	      4261	dwarf2.c	FUNCTION_64	IF_2
0x40047e8	     0xf8470020000	                            je 0x4004a5e	      4261	dwarf2.c	FUNCTION_64	IF_2
0x40047ee	    0x498b86900000	            mov rax, qword [r14 + 0x90] 	      4263	dwarf2.c	FUNCTION_64	FOR_1
0x40047f5	    0x4183bea00000	               cmp dword [r14 + 0xa0], 0	      4263	dwarf2.c	FUNCTION_64	FOR_1
0x40047fd	     0xf8491020000	                            je 0x4004a94	      4263	dwarf2.c	FUNCTION_64	FOR_1
0x4004803	      0xba00000000	                              mov edx, 0	      4263	dwarf2.c	FUNCTION_64	FOR_1
0x4004808	        0x488b7868	            mov rdi, qword [rax + 0x68] 	      4265	dwarf2.c	FUNCTION_64	FOR_1	IF_3
0x400480c	          0x4885ff	                           test rdi, rdi	      4265	dwarf2.c	FUNCTION_64	FOR_1	IF_3
0x400480f	            0x7417	                            je 0x4004828	      4265	dwarf2.c	FUNCTION_64	FOR_1	IF_3
0x4004811	            0x89d1	                            mov ecx, edx	      4266	dwarf2.c	FUNCTION_64	FOR_1	IF_3
0x4004813	    0x4c8b83d80000	              mov r8, qword [rbx + 0xd8]	      4266	dwarf2.c	FUNCTION_64	FOR_1	IF_3
0x400481a	        0x488b7060	            mov rsi, qword [rax + 0x60] 	      4266	dwarf2.c	FUNCTION_64	FOR_1	IF_3
0x400481e	        0x48037728	             add rsi, qword [rdi + 0x28]	      4266	dwarf2.c	FUNCTION_64	FOR_1	IF_3
0x4004822	        0x498934c8	             mov qword [r8 + rcx*8], rsi	      4266	dwarf2.c	FUNCTION_64	FOR_1	IF_3
0x4004826	            0xeb11	                           jmp 0x4004839	      4266	dwarf2.c	FUNCTION_64	FOR_1	IF_3
0x4004828	        0x488b7828	            mov rdi, qword [rax + 0x28] 	      4268	dwarf2.c	FUNCTION_64	FOR_1	ELSE_1
0x400482c	            0x89d1	                            mov ecx, edx	      4268	dwarf2.c	FUNCTION_64	FOR_1	ELSE_1
0x400482e	    0x488bb3d80000	            mov rsi, qword [rbx + 0xd8] 	      4268	dwarf2.c	FUNCTION_64	FOR_1	ELSE_1
0x4004835	        0x48893cce	            mov qword [rsi + rcx*8], rdi	      4268	dwarf2.c	FUNCTION_64	FOR_1	ELSE_1
0x4004839	          0x83c201	                              add edx, 1	      4263	dwarf2.c	FUNCTION_64	FOR_1
0x400483c	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4263	dwarf2.c	FUNCTION_64	FOR_1
0x4004840	    0x413b96a00000	            cmp edx, dword [r14 + 0xa0] 	      4263	dwarf2.c	FUNCTION_64	FOR_1
0x4004847	            0x72bf	                            jb 0x4004808	      4263	dwarf2.c	FUNCTION_64	FOR_1
0x4004849	      0xe946020000	                           jmp 0x4004a94	      4263	dwarf2.c	FUNCTION_64	FOR_1
0x400484e	          0x4c39f5	                            cmp rbp, r14	      4354	dwarf2.c	FUNCTION_66	IF_8
0x4004851	     0xf85b4000000	                           jne 0x400490b	      4354	dwarf2.c	FUNCTION_66	IF_8
0x4004857	      0xbe00000000	                              mov esi, 0	      4358	dwarf2.c	FUNCTION_66	IF_8	CALL_8
0x400485c	          0x4c89f7	                            mov rdi, r14	      4358	dwarf2.c	FUNCTION_66	IF_8	CALL_8
0x400485f	      0xe800000000	                          call 0x4004864	      4358	dwarf2.c	FUNCTION_66	IF_8	CALL_8
0x4004864	          0x4989c7	                            mov r15, rax	      4358	dwarf2.c	FUNCTION_66	IF_8	CALL_8
0x4004867	          0x4885c0	                           test rax, rax	      4359	dwarf2.c	FUNCTION_66	IF_8	IF_9
0x400486a	            0x7519	                           jne 0x4004885	      4359	dwarf2.c	FUNCTION_66	IF_8	IF_9
0x400486c	      0xbe00000000	                              mov esi, 0	      4360	dwarf2.c	FUNCTION_66	IF_8	CALL_9
0x4004871	          0x4c89f7	                            mov rdi, r14	      4360	dwarf2.c	FUNCTION_66	IF_8	CALL_9
0x4004874	      0xe800000000	                          call 0x4004879	      4360	dwarf2.c	FUNCTION_66	IF_8	CALL_9
0x4004879	          0x4989c7	                            mov r15, rax	      4360	dwarf2.c	FUNCTION_66	IF_8	CALL_9
0x400487c	          0x4885c0	                           test rax, rax	      4362	dwarf2.c	FUNCTION_66	IF_8	IF_10
0x400487f	     0xf84e0010000	                            je 0x4004a65	      4362	dwarf2.c	FUNCTION_66	IF_8	IF_10
0x4004885	      0xbe00000000	                              mov esi, 0	      4370	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_10
0x400488a	          0x4c89ff	                            mov rdi, r15	      4370	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_10
0x400488d	      0xe800000000	                          call 0x4004892	      4370	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_10
0x4004892	          0x4889c5	                            mov rbp, rax	      4370	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_10
0x4004895	          0x4885c0	                           test rax, rax	      4370	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_10
0x4004898	            0x744a	                            je 0x40048e4	      4370	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_10
0x400489a	    0x814844000010	         or dword [rax + 0x44], 0x100000	      4371	dwarf2.c	FUNCTION_66	IF_8	IF_11
0x40048a1	      0xbe01000000	                              mov esi, 1	      4372	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_11
0x40048a6	          0x4889c7	                            mov rdi, rax	      4372	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_11
0x40048a9	      0xe800000000	                          call 0x40048ae	      4372	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_11
0x40048ae	            0x85c0	                           test eax, eax	      4371	dwarf2.c	FUNCTION_66	IF_8	IF_11
0x40048b0	     0xf840a020000	                            je 0x4004ac0	      4371	dwarf2.c	FUNCTION_66	IF_8	IF_11
0x40048b6	      0xba00000000	                              mov edx, 0	      4373	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_12
0x40048bb	          0x4c89ee	                            mov rsi, r13	      4373	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_12
0x40048be	          0x4889ef	                            mov rdi, rbp	      4373	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_12
0x40048c1	      0xe85cbcffff	                call sym.find_debug_info	      4373	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_12
0x40048c6	          0x4989c4	                            mov r12, rax	      4373	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_12
0x40048c9	          0x4885c0	                           test rax, rax	      4373	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_12
0x40048cc	     0xf84ee010000	                            je 0x4004ac0	      4373	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_12
0x40048d2	          0x4889ef	                            mov rdi, rbp	      4375	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_13
0x40048d5	      0xe800000000	                          call 0x40048da	      4375	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_13
0x40048da	            0x85c0	                           test eax, eax	      4375	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_13
0x40048dc	     0xf84de010000	                            je 0x4004ac0	      4375	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_13
0x40048e2	            0xeb12	                           jmp 0x40048f6	      4375	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_13
0x40048e4	          0x4c89ff	                            mov rdi, r15	      4380	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_15
0x40048e7	      0xe800000000	                          call 0x40048ec	      4380	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_15
0x40048ec	      0xb800000000	                              mov eax, 0	      4381	dwarf2.c	FUNCTION_66	IF_8	IF_11
0x40048f1	      0xe97b010000	                           jmp 0x4004a71	      4381	dwarf2.c	FUNCTION_66	IF_8	IF_11
0x40048f6	    0x4c8bbdb00000	            mov r15, qword [rbp + 0xb0] 	      4384	dwarf2.c	FUNCTION_66	IF_8	CALL_16
0x40048fd	        0x4c897b78	             mov qword [rbx + 0x78], r15	      4385	dwarf2.c	FUNCTION_66	IF_8
0x4004901	    0xc78314010000	              mov dword [rbx + 0x114], 1	      4386	dwarf2.c	FUNCTION_66	IF_8
0x400490b	        0x48896b30	             mov qword [rbx + 0x30], rbp	      4388	dwarf2.c	FUNCTION_66
0x400490f	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      4390	dwarf2.c	FUNCTION_66	IF_13
0x4004914	            0x7413	                            je 0x4004929	      4390	dwarf2.c	FUNCTION_66	IF_13
0x4004916	          0x4889de	                            mov rsi, rbx	      4391	dwarf2.c	FUNCTION_66	IF_13	CALL_17
0x4004919	          0x4c89f7	                            mov rdi, r14	      4391	dwarf2.c	FUNCTION_66	IF_13	CALL_17
0x400491c	      0xe8d7b8ffff	                 call sym.place_sections	      4391	dwarf2.c	FUNCTION_66	IF_13	CALL_17
0x4004921	            0x85c0	                           test eax, eax	      4391	dwarf2.c	FUNCTION_66	IF_13	CALL_17
0x4004923	     0xf8448010000	                            je 0x4004a71	      4391	dwarf2.c	FUNCTION_66	IF_13	CALL_17
0x4004929	          0x4c89e2	                            mov rdx, r12	      4405	dwarf2.c	FUNCTION_66	IF_14	CALL_18
0x400492c	          0x4c89ee	                            mov rsi, r13	      4405	dwarf2.c	FUNCTION_66	IF_14	CALL_18
0x400492f	          0x4889ef	                            mov rdi, rbp	      4405	dwarf2.c	FUNCTION_66	IF_14	CALL_18
0x4004932	      0xe8ebbbffff	                call sym.find_debug_info	      4405	dwarf2.c	FUNCTION_66	IF_14	CALL_18
0x4004937	          0x4885c0	                           test rax, rax	      4405	dwarf2.c	FUNCTION_66	IF_14	CALL_18
0x400493a	            0x7538	                           jne 0x4004974	      4405	dwarf2.c	FUNCTION_66	IF_14	CALL_18
0x400493c	      0x498b442438	            mov rax, qword [r12 + 0x38] 	      4408	dwarf2.c	FUNCTION_66	IF_14
0x4004941	      0x4889442410	             mov qword [rsp + 0x10], rax	      4408	dwarf2.c	FUNCTION_66	IF_14
0x4004946	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      4409	dwarf2.c	FUNCTION_66	IF_14	IF_15	CALL_19
0x400494a	        0x488d7030	                   lea rsi, [rax + 0x30]	      4409	dwarf2.c	FUNCTION_66	IF_14	IF_15	CALL_19
0x400494e	      0x4c8d4c2410	                    lea r9, [rsp + 0x10]	      4409	dwarf2.c	FUNCTION_66	IF_14	IF_15	CALL_19
0x4004953	        0x4c8d4370	                    lea r8, [rbx + 0x70]	      4409	dwarf2.c	FUNCTION_66	IF_14	IF_15	CALL_19
0x4004957	      0xb900000000	                              mov ecx, 0	      4409	dwarf2.c	FUNCTION_66	IF_14	IF_15	CALL_19
0x400495c	          0x4c89fa	                            mov rdx, r15	      4409	dwarf2.c	FUNCTION_66	IF_14	IF_15	CALL_19
0x400495f	          0x4889ef	                            mov rdi, rbp	      4409	dwarf2.c	FUNCTION_66	IF_14	IF_15	CALL_19
0x4004962	      0xe8c1bcffff	                   call sym.read_section	      4409	dwarf2.c	FUNCTION_66	IF_14	IF_15	CALL_19
0x4004967	            0x85c0	                           test eax, eax	      4409	dwarf2.c	FUNCTION_66	IF_14	IF_15	CALL_19
0x4004969	     0xf85b4000000	                           jne 0x4004a23	      4409	dwarf2.c	FUNCTION_66	IF_14	IF_15	CALL_19
0x400496f	      0xe9fd000000	                           jmp 0x4004a71	      4409	dwarf2.c	FUNCTION_66	IF_14	IF_15	CALL_19
0x4004974	    0x48c744241000	               mov qword [rsp + 0x10], 0	      4417	dwarf2.c	FUNCTION_66	ELSE_2	FOR_1
0x400497d	          0x4d85e4	                           test r12, r12	      4417	dwarf2.c	FUNCTION_66	ELSE_2	FOR_1
0x4004980	            0x7420	                            je 0x40049a2	      4417	dwarf2.c	FUNCTION_66	ELSE_2	FOR_1
0x4004982	      0x498b442438	            mov rax, qword [r12 + 0x38] 	      4420	dwarf2.c	FUNCTION_66	ELSE_2	FOR_1
0x4004987	      0x4801442410	            add qword [rsp + 0x10], rax 	      4420	dwarf2.c	FUNCTION_66	ELSE_2	FOR_1
0x400498c	          0x4c89e2	                            mov rdx, r12	      4419	dwarf2.c	FUNCTION_66	ELSE_2	FOR_1	CALL_20
0x400498f	          0x4c89ee	                            mov rsi, r13	      4419	dwarf2.c	FUNCTION_66	ELSE_2	FOR_1	CALL_20
0x4004992	          0x4889ef	                            mov rdi, rbp	      4419	dwarf2.c	FUNCTION_66	ELSE_2	FOR_1	CALL_20
0x4004995	      0xe888bbffff	                call sym.find_debug_info	      4419	dwarf2.c	FUNCTION_66	ELSE_2	FOR_1	CALL_20
0x400499a	          0x4989c4	                            mov r12, rax	      4419	dwarf2.c	FUNCTION_66	ELSE_2	FOR_1	CALL_20
0x400499d	          0x4885c0	                           test rax, rax	      4417	dwarf2.c	FUNCTION_66	ELSE_2	FOR_1
0x40049a0	            0x75e0	                           jne 0x4004982	      4417	dwarf2.c	FUNCTION_66	ELSE_2	FOR_1
0x40049a2	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      4422	dwarf2.c	FUNCTION_66	ELSE_2	CALL_21
0x40049a7	      0xe800000000	                          call 0x40049ac	      4422	dwarf2.c	FUNCTION_66	ELSE_2	CALL_21
0x40049ac	          0x4889c2	                            mov rdx, rax	      4422	dwarf2.c	FUNCTION_66	ELSE_2	CALL_21
0x40049af	        0x48894370	             mov qword [rbx + 0x70], rax	      4422	dwarf2.c	FUNCTION_66	ELSE_2	CALL_21
0x40049b3	      0xb800000000	                              mov eax, 0	      4424	dwarf2.c	FUNCTION_66	ELSE_2	IF_16
0x40049b8	          0x4885d2	                           test rdx, rdx	      4423	dwarf2.c	FUNCTION_66	ELSE_2	IF_16
0x40049bb	     0xf84b0000000	                            je 0x4004a71	      4423	dwarf2.c	FUNCTION_66	ELSE_2	IF_16
0x40049c1	    0x48c744241000	               mov qword [rsp + 0x10], 0	      4426	dwarf2.c	FUNCTION_66	ELSE_2
0x40049ca	      0xba00000000	                              mov edx, 0	      4427	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	CALL_22
0x40049cf	          0x4c89ee	                            mov rsi, r13	      4427	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	CALL_22
0x40049d2	          0x4889ef	                            mov rdi, rbp	      4427	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	CALL_22
0x40049d5	      0xe848bbffff	                call sym.find_debug_info	      4427	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	CALL_22
0x40049da	          0x4989c4	                            mov r12, rax	      4427	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	CALL_22
0x40049dd	          0x4885c0	                           test rax, rax	      4427	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	CALL_22
0x40049e0	            0x7441	                            je 0x4004a23	      4427	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	CALL_22
0x40049e2	      0x4d8b742438	            mov r14, qword [r12 + 0x38] 	      4433	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2
0x40049e7	          0x4d85f6	                           test r14, r14	      4434	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	IF_17
0x40049ea	            0x7421	                            je 0x4004a0d	      4434	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	IF_17
0x40049ec	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      4437	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	IF_18	CALL_24
0x40049f1	        0x48035370	             add rdx, qword [rbx + 0x70]	      4437	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	IF_18	CALL_24
0x40049f5	          0x4c89f9	                            mov rcx, r15	      4437	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	IF_18	CALL_24
0x40049f8	          0x4c89e6	                            mov rsi, r12	      4437	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	IF_18	CALL_24
0x40049fb	          0x4889ef	                            mov rdi, rbp	      4437	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	IF_18	CALL_24
0x40049fe	      0xe800000000	                          call 0x4004a03	      4437	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	IF_18	CALL_24
0x4004a03	          0x4885c0	                           test rax, rax	      4437	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	IF_18	CALL_24
0x4004a06	            0x7464	                            je 0x4004a6c	      4437	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	IF_18	CALL_24
0x4004a08	      0x4c01742410	            add qword [rsp + 0x10], r14 	      4442	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2
0x4004a0d	          0x4c89e2	                            mov rdx, r12	      4429	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	CALL_23
0x4004a10	          0x4c89ee	                            mov rsi, r13	      4429	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	CALL_23
0x4004a13	          0x4889ef	                            mov rdi, rbp	      4429	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	CALL_23
0x4004a16	      0xe807bbffff	                call sym.find_debug_info	      4429	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	CALL_23
0x4004a1b	          0x4989c4	                            mov r12, rax	      4429	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	CALL_23
0x4004a1e	          0x4885c0	                           test rax, rax	      4427	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	CALL_22
0x4004a21	            0x75bf	                           jne 0x40049e2	      4427	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	CALL_22
0x4004a23	        0x488b4370	            mov rax, qword [rbx + 0x70] 	      4446	dwarf2.c	FUNCTION_66
0x4004a27	        0x48894318	             mov qword [rbx + 0x18], rax	      4446	dwarf2.c	FUNCTION_66
0x4004a2b	      0x4803442410	             add rax, qword [rsp + 0x10]	      4447	dwarf2.c	FUNCTION_66
0x4004a30	        0x48894320	             mov qword [rbx + 0x20], rax	      4447	dwarf2.c	FUNCTION_66
0x4004a34	      0xba00000000	                              mov edx, 0	      4448	dwarf2.c	FUNCTION_66	CALL_25
0x4004a39	          0x4c89ee	                            mov rsi, r13	      4448	dwarf2.c	FUNCTION_66	CALL_25
0x4004a3c	          0x4889ef	                            mov rdi, rbp	      4448	dwarf2.c	FUNCTION_66	CALL_25
0x4004a3f	      0xe8debaffff	                call sym.find_debug_info	      4448	dwarf2.c	FUNCTION_66	CALL_25
0x4004a44	        0x48894338	             mov qword [rbx + 0x38], rax	      4448	dwarf2.c	FUNCTION_66	CALL_25
0x4004a48	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      4449	dwarf2.c	FUNCTION_66
0x4004a4c	        0x48894340	             mov qword [rbx + 0x40], rax	      4449	dwarf2.c	FUNCTION_66
0x4004a50	      0xb801000000	                              mov eax, 1	      4450	dwarf2.c	FUNCTION_66
0x4004a55	            0xeb1a	                           jmp 0x4004a71	      4450	dwarf2.c	FUNCTION_66
0x4004a57	      0xb800000000	                              mov eax, 0	      4340	dwarf2.c	FUNCTION_66	ELSE_1	IF_5
0x4004a5c	            0xeb13	                           jmp 0x4004a71	      4340	dwarf2.c	FUNCTION_66	ELSE_1	IF_5
0x4004a5e	      0xb800000000	                              mov eax, 0	      4346	dwarf2.c	FUNCTION_66	IF_6
0x4004a63	            0xeb0c	                           jmp 0x4004a71	      4346	dwarf2.c	FUNCTION_66	IF_6
0x4004a65	      0xb800000000	                              mov eax, 0	      4367	dwarf2.c	FUNCTION_66	IF_8	IF_10
0x4004a6a	            0xeb05	                           jmp 0x4004a71	      4367	dwarf2.c	FUNCTION_66	IF_8	IF_10
0x4004a6c	      0xb800000000	                              mov eax, 0	      4440	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	IF_18
0x4004a71	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	      4451	dwarf2.c	FUNCTION_66
0x4004a76	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      4451	dwarf2.c	FUNCTION_66
0x4004a7f	            0x7451	                            je 0x4004ad2	      4451	dwarf2.c	FUNCTION_66
0x4004a81	            0xeb4a	                           jmp 0x4004acd	      4451	dwarf2.c	FUNCTION_66
0x4004a83	      0xb800000000	                              mov eax, 0	      4331	dwarf2.c	FUNCTION_66	IF_1	IF_2
0x4004a88	      0x48837b3000	               cmp qword [rbx + 0x30], 0	      4324	dwarf2.c	FUNCTION_66	IF_1	IF_2	IF_3
0x4004a8d	            0x74e2	                            je 0x4004a71	      4324	dwarf2.c	FUNCTION_66	IF_1	IF_2	IF_3
0x4004a8f	      0xe9a9fcffff	                           jmp 0x400473d	      4324	dwarf2.c	FUNCTION_66	IF_1	IF_2	IF_3
0x4004a94	        0x49891c24	                    mov qword [r12], rbx	      4348	dwarf2.c	FUNCTION_66
0x4004a98	          0x4885ed	                           test rbp, rbp	      4351	dwarf2.c	FUNCTION_66	IF_7
0x4004a9b	        0x490f44ee	                          cmove rbp, r14	      4351	dwarf2.c	FUNCTION_66	IF_7
0x4004a9f	      0xba00000000	                              mov edx, 0	      4353	dwarf2.c	FUNCTION_66	CALL_7
0x4004aa4	          0x4c89ee	                            mov rsi, r13	      4353	dwarf2.c	FUNCTION_66	CALL_7
0x4004aa7	          0x4889ef	                            mov rdi, rbp	      4353	dwarf2.c	FUNCTION_66	CALL_7
0x4004aaa	      0xe873baffff	                call sym.find_debug_info	      4353	dwarf2.c	FUNCTION_66	CALL_7
0x4004aaf	          0x4989c4	                            mov r12, rax	      4353	dwarf2.c	FUNCTION_66	CALL_7
0x4004ab2	          0x4885c0	                           test rax, rax	      4354	dwarf2.c	FUNCTION_66	IF_8
0x4004ab5	     0xf8493fdffff	                            je 0x400484e	      4354	dwarf2.c	FUNCTION_66	IF_8
0x4004abb	      0xe94bfeffff	                           jmp 0x400490b	      4354	dwarf2.c	FUNCTION_66	IF_8
0x4004ac0	          0x4889ef	                            mov rdi, rbp	      4378	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_14
0x4004ac3	      0xe800000000	                          call 0x4004ac8	      4378	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_14
0x4004ac8	      0xe917feffff	                           jmp 0x40048e4	      4378	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_14
0x4004acd	      0xe800000000	                          call 0x4004ad2	      4451	dwarf2.c	FUNCTION_66
0x4004ad2	        0x4883c428	                           add rsp, 0x28	      4451	dwarf2.c	FUNCTION_66
0x4004ad6	              0x5b	                                 pop rbx	      4451	dwarf2.c	FUNCTION_66
0x4004ad7	              0x5d	                                 pop rbp	      4451	dwarf2.c	FUNCTION_66
0x4004ad8	            0x415c	                                 pop r12	      4451	dwarf2.c	FUNCTION_66
0x4004ada	            0x415d	                                 pop r13	      4451	dwarf2.c	FUNCTION_66
0x4004adc	            0x415e	                                 pop r14	      4451	dwarf2.c	FUNCTION_66
0x4004ade	            0x415f	                                 pop r15	      4451	dwarf2.c	FUNCTION_66
0x4004ae0	              0xc3	                                     ret	      4451	dwarf2.c	FUNCTION_66
lookup_abbrev	SWITCH,0:FOR,0:WHILE,1:IF,1:functions,0:ELSE,1:DO,0:CALL,0	25
0x40000f1	      0xbabf56cf0e	                      mov edx, 0xecf56bf	       925	dwarf2.c	FUNCTION_18
0x40000f6	            0x89f8	                            mov eax, edi	       925	dwarf2.c	FUNCTION_18
0x40000f8	            0xf7e2	                                 mul edx	       925	dwarf2.c	FUNCTION_18
0x40000fa	            0x89f8	                            mov eax, edi	       925	dwarf2.c	FUNCTION_18
0x40000fc	            0x29d0	                            sub eax, edx	       925	dwarf2.c	FUNCTION_18
0x40000fe	            0xd1e8	                              shr eax, 1	       925	dwarf2.c	FUNCTION_18
0x4000100	             0x1d0	                            add eax, edx	       925	dwarf2.c	FUNCTION_18
0x4000102	          0xc1e806	                              shr eax, 6	       925	dwarf2.c	FUNCTION_18
0x4000105	          0x6bc079	                     imul eax, eax, 0x79	       925	dwarf2.c	FUNCTION_18
0x4000108	            0x89f9	                            mov ecx, edi	       925	dwarf2.c	FUNCTION_18
0x400010a	            0x29c1	                            sub ecx, eax	       925	dwarf2.c	FUNCTION_18
0x400010c	        0x488b04ce	            mov rax, qword [rsi + rcx*8]	       925	dwarf2.c	FUNCTION_18
0x4000110	          0x4885c0	                           test rax, rax	       927	dwarf2.c	FUNCTION_18	WHILE_1
0x4000113	            0x7415	                            je 0x400012a	       927	dwarf2.c	FUNCTION_18	WHILE_1
0x4000115	            0x3b38	                    cmp edi, dword [rax]	       929	dwarf2.c	FUNCTION_18	WHILE_1	IF_1
0x4000117	            0x7506	                           jne 0x400011f	       929	dwarf2.c	FUNCTION_18	WHILE_1	IF_1
0x4000119	            0xf3c3	                                     ret	       929	dwarf2.c	FUNCTION_18	WHILE_1	IF_1
0x400011b	            0x3b38	                    cmp edi, dword [rax]	       929	dwarf2.c	FUNCTION_18	WHILE_1	IF_1
0x400011d	            0x7410	                            je 0x400012f	       929	dwarf2.c	FUNCTION_18	WHILE_1	IF_1
0x400011f	        0x488b4018	            mov rax, qword [rax + 0x18] 	       932	dwarf2.c	FUNCTION_18	WHILE_1	ELSE_1
0x4000123	          0x4885c0	                           test rax, rax	       927	dwarf2.c	FUNCTION_18	WHILE_1
0x4000126	            0x75f3	                           jne 0x400011b	       927	dwarf2.c	FUNCTION_18	WHILE_1
0x4000128	            0xf3c3	                                     ret	       927	dwarf2.c	FUNCTION_18	WHILE_1
0x400012a	      0xb800000000	                              mov eax, 0	       935	dwarf2.c	FUNCTION_18	ELSE_1
0x400012f	            0xf3c3	                                     ret	       936	dwarf2.c	FUNCTION_18	ELSE_1
concat_filename	SWITCH,0:FOR,0:WHILE,0:IF,11:functions,0:ELSE,1:DO,0:CALL,13	168
0x4000dd8	            0x4155	                                push r13	      1566	dwarf2.c	FUNCTION_26
0x4000dda	            0x4154	                                push r12	      1566	dwarf2.c	FUNCTION_26
0x4000ddc	              0x55	                                push rbp	      1566	dwarf2.c	FUNCTION_26
0x4000ddd	              0x53	                                push rbx	      1566	dwarf2.c	FUNCTION_26
0x4000dde	        0x4883ec08	                              sub rsp, 8	      1566	dwarf2.c	FUNCTION_26
0x4000de2	          0x4885ff	                           test rdi, rdi	      1569	dwarf2.c	FUNCTION_26	IF_1
0x4000de5	            0x7408	                            je 0x4000def	      1569	dwarf2.c	FUNCTION_26	IF_1
0x4000de7	          0x8d46ff	                      lea eax, [rsi - 1]	      1569	dwarf2.c	FUNCTION_26	IF_1
0x4000dea	          0x3b4708	                cmp eax, dword [rdi + 8]	      1569	dwarf2.c	FUNCTION_26	IF_1
0x4000ded	            0x725b	                            jb 0x4000e4a	      1569	dwarf2.c	FUNCTION_26	IF_1
0x4000def	            0x85f6	                           test esi, esi	      1572	dwarf2.c	FUNCTION_26	IF_1	IF_2
0x4000df1	            0x7421	                            je 0x4000e14	      1572	dwarf2.c	FUNCTION_26	IF_1	IF_2
0x4000df3	      0xba05000000	                              mov edx, 5	      1574	dwarf2.c	FUNCTION_26	IF_1	CALL_2
0x4000df8	      0xbe00000000	                              mov esi, 0	      1574	dwarf2.c	FUNCTION_26	IF_1	CALL_2
0x4000dfd	      0xbf00000000	                              mov edi, 0	      1574	dwarf2.c	FUNCTION_26	IF_1	CALL_2
0x4000e02	      0xe800000000	                          call 0x4000e07	      1574	dwarf2.c	FUNCTION_26	IF_1	CALL_2
0x4000e07	          0x4889c7	                            mov rdi, rax	      1573	dwarf2.c	FUNCTION_26	IF_1	IF_2	CALL_1
0x4000e0a	      0xb800000000	                              mov eax, 0	      1573	dwarf2.c	FUNCTION_26	IF_1	IF_2	CALL_1
0x4000e0f	      0xe800000000	                          call 0x4000e14	      1573	dwarf2.c	FUNCTION_26	IF_1	IF_2	CALL_1
0x4000e14	      0xbf0a000000	                            mov edi, 0xa	      1575	dwarf2.c	FUNCTION_26	IF_1	CALL_3
0x4000e19	      0xe800000000	                          call 0x4000e1e	      1575	dwarf2.c	FUNCTION_26	IF_1	CALL_3
0x4000e1e	          0x4889c2	                            mov rdx, rax	      1575	dwarf2.c	FUNCTION_26	IF_1	CALL_3
0x4000e21	      0xb800000000	                              mov eax, 0	      1575	dwarf2.c	FUNCTION_26	IF_1	CALL_3
0x4000e26	          0x4885d2	                           test rdx, rdx	      1575	dwarf2.c	FUNCTION_26	IF_1	CALL_3
0x4000e29	     0xf8421020000	                            je 0x4001050	      1575	dwarf2.c	FUNCTION_26	IF_1	CALL_3
0x4000e2f	    0x48b83c756e6b	          movabs rax, 0x6e776f6e6b6e753c	        53	string3.h	FUNCTION_72	CALL_3
0x4000e39	          0x488902	                    mov qword [rdx], rax	        53	string3.h	FUNCTION_72	CALL_3
0x4000e3c	    0x66c742083e00	                mov word [rdx + 8], 0x3e	        53	string3.h	FUNCTION_72	CALL_3
0x4000e42	          0x4889d0	                            mov rax, rdx	      1575	dwarf2.c	FUNCTION_26	IF_1	CALL_3
0x4000e45	      0xe906020000	                           jmp 0x4001050	      1575	dwarf2.c	FUNCTION_26	IF_1	CALL_3
0x4000e4a	            0x89c0	                            mov eax, eax	      1578	dwarf2.c	FUNCTION_26
0x4000e4c	        0x488d1440	                  lea rdx, [rax + rax*2]	      1578	dwarf2.c	FUNCTION_26
0x4000e50	        0x488b4728	            mov rax, qword [rdi + 0x28] 	      1578	dwarf2.c	FUNCTION_26
0x4000e54	        0x488d04d0	                  lea rax, [rax + rdx*8]	      1578	dwarf2.c	FUNCTION_26
0x4000e58	          0x488b18	                    mov rbx, qword [rax]	      1578	dwarf2.c	FUNCTION_26
0x4000e5b	          0x4885db	                           test rbx, rbx	      1579	dwarf2.c	FUNCTION_26	IF_3
0x4000e5e	            0x7536	                           jne 0x4000e96	      1579	dwarf2.c	FUNCTION_26	IF_3
0x4000e60	      0xbf0a000000	                            mov edi, 0xa	      1580	dwarf2.c	FUNCTION_26	CALL_4
0x4000e65	      0xe800000000	                          call 0x4000e6a	      1580	dwarf2.c	FUNCTION_26	CALL_4
0x4000e6a	          0x4889c2	                            mov rdx, rax	      1580	dwarf2.c	FUNCTION_26	CALL_4
0x4000e6d	      0xb800000000	                              mov eax, 0	      1580	dwarf2.c	FUNCTION_26	CALL_4
0x4000e72	          0x4885d2	                           test rdx, rdx	      1580	dwarf2.c	FUNCTION_26	CALL_4
0x4000e75	     0xf84d5010000	                            je 0x4001050	      1580	dwarf2.c	FUNCTION_26	CALL_4
0x4000e7b	    0x48b83c756e6b	          movabs rax, 0x6e776f6e6b6e753c	        53	string3.h	FUNCTION_72	CALL_3
0x4000e85	          0x488902	                    mov qword [rdx], rax	        53	string3.h	FUNCTION_72	CALL_3
0x4000e88	    0x66c742083e00	                mov word [rdx + 8], 0x3e	        53	string3.h	FUNCTION_72	CALL_3
0x4000e8e	          0x4889d0	                            mov rax, rdx	      1580	dwarf2.c	FUNCTION_26	CALL_4
0x4000e91	      0xe9ba010000	                           jmp 0x4001050	      1580	dwarf2.c	FUNCTION_26	CALL_4
0x4000e96	          0x803b2f	                    cmp byte [rbx], 0x2f	      1582	dwarf2.c	FUNCTION_26	IF_4	CALL_5
0x4000e99	     0xf841e010000	                            je 0x4000fbd	      1582	dwarf2.c	FUNCTION_26	IF_4	CALL_5
0x4000e9f	          0x8b4008	                mov eax, dword [rax + 8]	      1589	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x4000ea2	            0x85c0	                           test eax, eax	      1589	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x4000ea4	     0xf845d010000	                            je 0x4001007	      1589	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x4000eaa	          0x3b470c	              cmp eax, dword [rdi + 0xc]	      1591	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x4000ead	     0xf8754010000	                            ja 0x4001007	      1591	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x4000eb3	        0x488b5720	            mov rdx, qword [rdi + 0x20] 	      1593	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x4000eb7	          0x4885d2	                           test rdx, rdx	      1593	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x4000eba	     0xf8447010000	                            je 0x4001007	      1593	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x4000ec0	          0x8d40ff	                      lea eax, [rax - 1]	      1594	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x4000ec3	        0x488b2cc2	            mov rbp, qword [rdx + rax*8]	      1594	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x4000ec7	          0x4885ed	                           test rbp, rbp	      1596	dwarf2.c	FUNCTION_26	IF_4	IF_6	CALL_6
0x4000eca	     0xf8437010000	                            je 0x4001007	      1596	dwarf2.c	FUNCTION_26	IF_4	IF_6	CALL_6
0x4000ed0	        0x807d002f	                    cmp byte [rbp], 0x2f	      1596	dwarf2.c	FUNCTION_26	IF_4	IF_6	CALL_6
0x4000ed4	     0xf851e010000	                           jne 0x4000ff8	      1596	dwarf2.c	FUNCTION_26	IF_4	IF_6	CALL_6
0x4000eda	      0xe93f010000	                           jmp 0x400101e	      1596	dwarf2.c	FUNCTION_26	IF_4	IF_6	CALL_6
0x4000edf	          0x4889df	                            mov rdi, rbx	      1606	dwarf2.c	FUNCTION_26	IF_4	CALL_7
0x4000ee2	      0xe800000000	                          call 0x4000ee7	      1606	dwarf2.c	FUNCTION_26	IF_4	CALL_7
0x4000ee7	      0xe964010000	                           jmp 0x4001050	      1606	dwarf2.c	FUNCTION_26	IF_4	CALL_7
0x4000eec	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x4000ef3	      0xb800000000	                              mov eax, 0	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x4000ef8	          0x4889f1	                            mov rcx, rsi	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x4000efb	          0x4c89e7	                            mov rdi, r12	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x4000efe	            0xf2ae	              repne scasb al, byte [rdi]	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x4000f00	          0x48f7d1	                                 not rcx	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x4000f03	          0x4889ca	                            mov rdx, rcx	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x4000f06	          0x4889f1	                            mov rcx, rsi	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x4000f09	          0x4889df	                            mov rdi, rbx	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x4000f0c	            0xf2ae	              repne scasb al, byte [rdi]	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x4000f0e	          0x4889c8	                            mov rax, rcx	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x4000f11	          0x48f7d0	                                 not rax	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x4000f14	      0x488d5402fe	                lea rdx, [rdx + rax - 2]	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x4000f19	          0x4885ed	                           test rbp, rbp	      1610	dwarf2.c	FUNCTION_26	IF_4	IF_9
0x4000f1c	            0x745b	                            je 0x4000f79	      1610	dwarf2.c	FUNCTION_26	IF_4	IF_9
0x4000f1e	      0xb800000000	                              mov eax, 0	      1612	dwarf2.c	FUNCTION_26	IF_4	IF_9	CALL_10
0x4000f23	          0x4889f1	                            mov rcx, rsi	      1612	dwarf2.c	FUNCTION_26	IF_4	IF_9	CALL_10
0x4000f26	          0x4889ef	                            mov rdi, rbp	      1612	dwarf2.c	FUNCTION_26	IF_4	IF_9	CALL_10
0x4000f29	            0xf2ae	              repne scasb al, byte [rdi]	      1612	dwarf2.c	FUNCTION_26	IF_4	IF_9	CALL_10
0x4000f2b	          0x48f7d1	                                 not rcx	      1612	dwarf2.c	FUNCTION_26	IF_4	IF_9	CALL_10
0x4000f2e	      0x488d7c0a02	                lea rdi, [rdx + rcx + 2]	      1613	dwarf2.c	FUNCTION_26	IF_4	IF_9	CALL_11
0x4000f33	      0xe800000000	                          call 0x4000f38	      1613	dwarf2.c	FUNCTION_26	IF_4	IF_9	CALL_11
0x4000f38	          0x4989c5	                            mov r13, rax	      1613	dwarf2.c	FUNCTION_26	IF_4	IF_9	CALL_11
0x4000f3b	          0x4885c0	                           test rax, rax	      1614	dwarf2.c	FUNCTION_26	IF_4	IF_9	IF_10
0x4000f3e	     0xf840c010000	                            je 0x4001050	      1614	dwarf2.c	FUNCTION_26	IF_4	IF_9	IF_10
0x4000f44	        0x4883ec08	                              sub rsp, 8	        33	stdio2.h	FUNCTION_84	CALL_1
0x4000f48	              0x53	                                push rbx	        33	stdio2.h	FUNCTION_84	CALL_1
0x4000f49	          0x4989e9	                             mov r9, rbp	        33	stdio2.h	FUNCTION_84	CALL_1
0x4000f4c	          0x4d89e0	                             mov r8, r12	        33	stdio2.h	FUNCTION_84	CALL_1
0x4000f4f	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x4000f54	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_84	CALL_1
0x4000f5b	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_84	CALL_1
0x4000f60	          0x4889c7	                            mov rdi, rax	        33	stdio2.h	FUNCTION_84	CALL_1
0x4000f63	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x4000f68	      0xe800000000	                          call 0x4000f6d	        33	stdio2.h	FUNCTION_84	CALL_1
0x4000f6d	        0x4883c410	                           add rsp, 0x10	        33	stdio2.h	FUNCTION_84	CALL_1
0x4000f71	          0x4c89e8	                            mov rax, r13	      1613	dwarf2.c	FUNCTION_26	IF_4	IF_9	CALL_11
0x4000f74	      0xe9d7000000	                           jmp 0x4001050	      1613	dwarf2.c	FUNCTION_26	IF_4	IF_9	CALL_11
0x4000f79	          0x4c89e5	                            mov rbp, r12	      1613	dwarf2.c	FUNCTION_26	IF_4	IF_9	CALL_11
0x4000f7c	        0x488d7a02	                      lea rdi, [rdx + 2]	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x4000f80	      0xe800000000	                          call 0x4000f85	      1619	dwarf2.c	FUNCTION_26	IF_4	ELSE_1	CALL_12
0x4000f85	          0x4989c4	                            mov r12, rax	      1619	dwarf2.c	FUNCTION_26	IF_4	ELSE_1	CALL_12
0x4000f88	          0x4885c0	                           test rax, rax	      1620	dwarf2.c	FUNCTION_26	IF_4	ELSE_1	IF_11
0x4000f8b	     0xf84bf000000	                            je 0x4001050	      1620	dwarf2.c	FUNCTION_26	IF_4	ELSE_1	IF_11
0x4000f91	          0x4989d9	                             mov r9, rbx	        33	stdio2.h	FUNCTION_84	CALL_1
0x4000f94	          0x4989e8	                             mov r8, rbp	        33	stdio2.h	FUNCTION_84	CALL_1
0x4000f97	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x4000f9c	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_84	CALL_1
0x4000fa3	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_84	CALL_1
0x4000fa8	          0x4889c7	                            mov rdi, rax	        33	stdio2.h	FUNCTION_84	CALL_1
0x4000fab	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x4000fb0	      0xe800000000	                          call 0x4000fb5	        33	stdio2.h	FUNCTION_84	CALL_1
0x4000fb5	          0x4c89e0	                            mov rax, r12	      1619	dwarf2.c	FUNCTION_26	IF_4	ELSE_1	CALL_12
0x4000fb8	      0xe993000000	                           jmp 0x4001050	      1619	dwarf2.c	FUNCTION_26	IF_4	ELSE_1	CALL_12
0x4000fbd	          0x4889df	                            mov rdi, rbx	      1627	dwarf2.c	FUNCTION_26	CALL_13
0x4000fc0	      0xe800000000	                          call 0x4000fc5	      1627	dwarf2.c	FUNCTION_26	CALL_13
0x4000fc5	      0xe986000000	                           jmp 0x4001050	      1627	dwarf2.c	FUNCTION_26	CALL_13
0x4000fca	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x4000fd1	      0xb800000000	                              mov eax, 0	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x4000fd6	          0x4889f1	                            mov rcx, rsi	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x4000fd9	          0x4889ef	                            mov rdi, rbp	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x4000fdc	            0xf2ae	              repne scasb al, byte [rdi]	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x4000fde	          0x4889ca	                            mov rdx, rcx	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x4000fe1	          0x48f7d2	                                 not rdx	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x4000fe4	          0x4889f1	                            mov rcx, rsi	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x4000fe7	          0x4889df	                            mov rdi, rbx	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x4000fea	            0xf2ae	              repne scasb al, byte [rdi]	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x4000fec	          0x4889c8	                            mov rax, rcx	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x4000fef	          0x48f7d0	                                 not rax	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x4000ff2	        0x488d3c02	                    lea rdi, [rdx + rax]	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x4000ff6	            0xeb88	                           jmp 0x4000f80	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x4000ff8	        0x4c8b6718	            mov r12, qword [rdi + 0x18] 	      1597	dwarf2.c	FUNCTION_26	IF_4	IF_6
0x4000ffc	          0x4d85e4	                           test r12, r12	      1599	dwarf2.c	FUNCTION_26	IF_4	IF_7
0x4000fff	     0xf85e7feffff	                           jne 0x4000eec	      1599	dwarf2.c	FUNCTION_26	IF_4	IF_7
0x4001005	            0xebc3	                           jmp 0x4000fca	      1599	dwarf2.c	FUNCTION_26	IF_4	IF_7
0x4001007	        0x4c8b6718	            mov r12, qword [rdi + 0x18] 	      1597	dwarf2.c	FUNCTION_26	IF_4	IF_6
0x400100b	          0x4d85e4	                           test r12, r12	      1599	dwarf2.c	FUNCTION_26	IF_4	IF_7
0x400100e	     0xf84cbfeffff	                            je 0x4000edf	      1599	dwarf2.c	FUNCTION_26	IF_4	IF_7
0x4001014	      0xbd00000000	                              mov ebp, 0	      1599	dwarf2.c	FUNCTION_26	IF_4	IF_7
0x4001019	      0xe9cefeffff	                           jmp 0x4000eec	      1599	dwarf2.c	FUNCTION_26	IF_4	IF_7
0x400101e	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x4001025	      0xb800000000	                              mov eax, 0	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x400102a	          0x4889f1	                            mov rcx, rsi	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x400102d	          0x4889ef	                            mov rdi, rbp	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x4001030	            0xf2ae	              repne scasb al, byte [rdi]	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x4001032	          0x4889ca	                            mov rdx, rcx	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x4001035	          0x48f7d2	                                 not rdx	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x4001038	          0x4889f1	                            mov rcx, rsi	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x400103b	          0x4889df	                            mov rdi, rbx	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x400103e	            0xf2ae	              repne scasb al, byte [rdi]	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x4001040	          0x4889c8	                            mov rax, rcx	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x4001043	          0x48f7d0	                                 not rax	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x4001046	      0x488d5402fe	                lea rdx, [rdx + rax - 2]	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x400104b	      0xe92cffffff	                           jmp 0x4000f7c	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x4001050	        0x4883c408	                              add rsp, 8	      1628	dwarf2.c	FUNCTION_26
0x4001054	              0x5b	                                 pop rbx	      1628	dwarf2.c	FUNCTION_26
0x4001055	              0x5d	                                 pop rbp	      1628	dwarf2.c	FUNCTION_26
0x4001056	            0x415c	                                 pop r12	      1628	dwarf2.c	FUNCTION_26
0x4001058	            0x415d	                                 pop r13	      1628	dwarf2.c	FUNCTION_26
0x400105a	              0xc3	                                     ret	      1628	dwarf2.c	FUNCTION_26
_bfd_elf_find_function	SWITCH,0:FOR,1:WHILE,0:IF,13:functions,0:ELSE,0:DO,0:CALL,8	136
0x4004ae1	            0x4157	                                push r15	      4990	dwarf2.c	FUNCTION_71
0x4004ae3	            0x4156	                                push r14	      4990	dwarf2.c	FUNCTION_71
0x4004ae5	            0x4155	                                push r13	      4990	dwarf2.c	FUNCTION_71
0x4004ae7	            0x4154	                                push r12	      4990	dwarf2.c	FUNCTION_71
0x4004ae9	              0x55	                                push rbp	      4990	dwarf2.c	FUNCTION_71
0x4004aea	              0x53	                                push rbx	      4990	dwarf2.c	FUNCTION_71
0x4004aeb	        0x4883ec48	                           sub rsp, 0x48	      4990	dwarf2.c	FUNCTION_71
0x4004aef	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      4990	dwarf2.c	FUNCTION_71
0x4004af4	      0x4c89442418	              mov qword [rsp + 0x18], r8	      4990	dwarf2.c	FUNCTION_71
0x4004af9	      0x4c894c2420	              mov qword [rsp + 0x20], r9	      4990	dwarf2.c	FUNCTION_71
0x4004afe	    0x64488b042528	                mov rax, qword fs:[0x28]	      4990	dwarf2.c	FUNCTION_71
0x4004b07	      0x4889442438	             mov qword [rsp + 0x38], rax	      4990	dwarf2.c	FUNCTION_71
0x4004b0c	            0x31c0	                            xor eax, eax	      4990	dwarf2.c	FUNCTION_71
0x4004b0e	          0x4885f6	                           test rsi, rsi	      4999	dwarf2.c	FUNCTION_71	IF_1
0x4004b11	     0xf84b2010000	                            je 0x4004cc9	      4999	dwarf2.c	FUNCTION_71	IF_1
0x4004b17	          0x4889fb	                            mov rbx, rdi	      4999	dwarf2.c	FUNCTION_71	IF_1
0x4004b1a	          0x4889f5	                            mov rbp, rsi	      4999	dwarf2.c	FUNCTION_71	IF_1
0x4004b1d	          0x4989d6	                            mov r14, rdx	      4999	dwarf2.c	FUNCTION_71	IF_1
0x4004b20	        0x488b5708	                mov rdx, qword [rdi + 8]	      5002	dwarf2.c	FUNCTION_71	IF_2	CALL_1
0x4004b24	        0x837a0805	                  cmp dword [rdx + 8], 5	      5002	dwarf2.c	FUNCTION_71	IF_2	CALL_1
0x4004b28	     0xf85ae010000	                           jne 0x4004cdc	      5002	dwarf2.c	FUNCTION_71	IF_2	CALL_1
0x4004b2e	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	      5005	dwarf2.c	FUNCTION_71	CALL_2
0x4004b35	    0x4c8ba8380300	           mov r13, qword [rax + 0x338] 	      5005	dwarf2.c	FUNCTION_71	CALL_2
0x4004b3c	          0x4d85ed	                           test r13, r13	      5006	dwarf2.c	FUNCTION_71	IF_3
0x4004b3f	            0x7524	                           jne 0x4004b65	      5006	dwarf2.c	FUNCTION_71	IF_3
0x4004b41	      0xbe20000000	                           mov esi, 0x20	      5008	dwarf2.c	FUNCTION_71	IF_3	CALL_3
0x4004b46	      0xe800000000	                          call 0x4004b4b	      5008	dwarf2.c	FUNCTION_71	IF_3	CALL_3
0x4004b4b	          0x4989c5	                            mov r13, rax	      5008	dwarf2.c	FUNCTION_71	IF_3	CALL_3
0x4004b4e	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      5009	dwarf2.c	FUNCTION_71	IF_3	CALL_4
0x4004b55	    0x4c89a8380300	            mov qword [rax + 0x338], r13	      5009	dwarf2.c	FUNCTION_71	IF_3	CALL_4
0x4004b5c	          0x4d85ed	                           test r13, r13	      5010	dwarf2.c	FUNCTION_71	IF_3	IF_4
0x4004b5f	     0xf846b010000	                            je 0x4004cd0	      5010	dwarf2.c	FUNCTION_71	IF_3	IF_4
0x4004b65	        0x4d397500	                    cmp qword [r13], r14	      5013	dwarf2.c	FUNCTION_71	IF_5
0x4004b69	            0x7524	                           jne 0x4004b8f	      5013	dwarf2.c	FUNCTION_71	IF_5
0x4004b6b	        0x498b4508	                mov rax, qword [r13 + 8]	      5014	dwarf2.c	FUNCTION_71	IF_5
0x4004b6f	          0x4885c0	                           test rax, rax	      5014	dwarf2.c	FUNCTION_71	IF_5
0x4004b72	            0x741b	                            je 0x4004b8f	      5014	dwarf2.c	FUNCTION_71	IF_5
0x4004b74	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5015	dwarf2.c	FUNCTION_71	IF_5
0x4004b78	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      5015	dwarf2.c	FUNCTION_71	IF_5
0x4004b7d	          0x4839c8	                            cmp rax, rcx	      5015	dwarf2.c	FUNCTION_71	IF_5
0x4004b80	            0x770d	                            ja 0x4004b8f	      5015	dwarf2.c	FUNCTION_71	IF_5
0x4004b82	        0x49034518	             add rax, qword [r13 + 0x18]	      5016	dwarf2.c	FUNCTION_71	IF_5
0x4004b86	          0x4839c1	                            cmp rcx, rax	      5016	dwarf2.c	FUNCTION_71	IF_5
0x4004b89	     0xf820e010000	                            jb 0x4004c9d	      5016	dwarf2.c	FUNCTION_71	IF_5
0x4004b8f	        0x488b4308	                mov rax, qword [rbx + 8]	      5030	dwarf2.c	FUNCTION_71	IF_5	CALL_5
0x4004b93	    0x4c8bb8680300	           mov r15, qword [rax + 0x368] 	      5030	dwarf2.c	FUNCTION_71	IF_5	CALL_5
0x4004b9a	    0x49c745100000	               mov qword [r13 + 0x10], 0	      5035	dwarf2.c	FUNCTION_71	IF_5
0x4004ba2	    0x49c745080000	                  mov qword [r13 + 8], 0	      5036	dwarf2.c	FUNCTION_71	IF_5
0x4004baa	    0x49c745180000	               mov qword [r13 + 0x18], 0	      5037	dwarf2.c	FUNCTION_71	IF_5
0x4004bb2	        0x4d897500	                    mov qword [r13], r14	      5038	dwarf2.c	FUNCTION_71	IF_5
0x4004bb6	        0x488b5d00	                    mov rbx, qword [rbp]	      5040	dwarf2.c	FUNCTION_71	IF_5	FOR_1
0x4004bba	          0x4885db	                           test rbx, rbx	      5040	dwarf2.c	FUNCTION_71	IF_5	FOR_1
0x4004bbd	     0xf8414010000	                            je 0x4004cd7	      5040	dwarf2.c	FUNCTION_71	IF_5	FOR_1
0x4004bc3	    0x41bc00000000	                             mov r12d, 0	      5040	dwarf2.c	FUNCTION_71	IF_5	FOR_1
0x4004bc9	    0x48c744242800	               mov qword [rsp + 0x28], 0	      5040	dwarf2.c	FUNCTION_71	IF_5	FOR_1
0x4004bd2	    0x48c744240800	                  mov qword [rsp + 8], 0	      5040	dwarf2.c	FUNCTION_71	IF_5	FOR_1
0x4004bdb	        0xf6431940	           test byte [rbx + 0x19], 0x40 	      5046	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_6
0x4004bdf	            0x7417	                            je 0x4004bf8	      5046	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_6
0x4004be1	        0x4183fc01	                             cmp r12d, 1	      5050	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_6	IF_7
0x4004be5	      0xb802000000	                              mov eax, 2	      5050	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_6	IF_7
0x4004bea	        0x440f44e0	                         cmove r12d, eax	      5050	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_6	IF_7
0x4004bee	      0x48895c2408	                mov qword [rsp + 8], rbx	      5051	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_6
0x4004bf3	      0xe98b000000	                           jmp 0x4004c83	      5051	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_6
0x4004bf8	      0x488d542430	                   lea rdx, [rsp + 0x30]	      5054	dwarf2.c	FUNCTION_71	IF_5	FOR_1	CALL_6
0x4004bfd	          0x4c89f6	                            mov rsi, r14	      5054	dwarf2.c	FUNCTION_71	IF_5	FOR_1	CALL_6
0x4004c00	          0x4889df	                            mov rdi, rbx	      5054	dwarf2.c	FUNCTION_71	IF_5	FOR_1	CALL_6
0x4004c03	    0x41ff97d00200	                call qword [r15 + 0x2d0]	      5054	dwarf2.c	FUNCTION_71	IF_5	FOR_1	CALL_6
0x4004c0a	          0x4885c0	                           test rax, rax	      5055	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x4004c0d	            0x7468	                            je 0x4004c77	      5055	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x4004c0f	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	      5056	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x4004c14	      0x4839542410	            cmp qword [rsp + 0x10], rdx 	      5056	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x4004c19	            0x725c	                            jb 0x4004c77	      5056	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x4004c1b	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      5057	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x4004c20	          0x4839fa	                            cmp rdx, rdi	      5057	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x4004c23	            0x7710	                            ja 0x4004c35	      5057	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x4004c25	          0x4839fa	                            cmp rdx, rdi	      5058	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x4004c28	            0x754d	                           jne 0x4004c77	      5058	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x4004c2a	      0x4889542428	             mov qword [rsp + 0x28], rdx	      5058	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x4004c2f	        0x493b4518	            cmp rax, qword [r13 + 0x18] 	      5059	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x4004c33	            0x7642	                           jbe 0x4004c77	      5059	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x4004c35	        0x49895d08	                mov qword [r13 + 8], rbx	      5061	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x4004c39	        0x49894518	             mov qword [r13 + 0x18], rax	      5062	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x4004c3d	    0x49c745100000	               mov qword [r13 + 0x10], 0	      5063	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x4004c45	    0x48837c240800	                  cmp qword [rsp + 8], 0	      5065	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8	IF_9
0x4004c4b	            0x7425	                            je 0x4004c72	      5065	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8	IF_9
0x4004c4d	        0xf6431801	               test byte [rbx + 0x18], 1	      5067	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8	IF_9
0x4004c51	            0x750b	                           jne 0x4004c5e	      5067	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8	IF_9
0x4004c53	      0x4889542428	             mov qword [rsp + 0x28], rdx	      5064	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x4004c58	        0x4183fc02	                             cmp r12d, 2	      5067	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8	IF_9
0x4004c5c	            0x7419	                            je 0x4004c77	      5067	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8	IF_9
0x4004c5e	      0x488b442408	                mov rax, qword [rsp + 8]	      5068	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8	CALL_7
0x4004c63	        0x488b4008	                mov rax, qword [rax + 8]	      5068	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8	CALL_7
0x4004c67	        0x49894510	             mov qword [r13 + 0x10], rax	      5068	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8	CALL_7
0x4004c6b	      0x4889542428	             mov qword [rsp + 0x28], rdx	      5064	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x4004c70	            0xeb05	                           jmp 0x4004c77	      5064	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x4004c72	      0x4889542428	             mov qword [rsp + 0x28], rdx	      5064	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x4004c77	          0x4585e4	                         test r12d, r12d	      5071	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_10
0x4004c7a	      0xb801000000	                              mov eax, 1	      5071	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_10
0x4004c7f	        0x440f44e0	                         cmove r12d, eax	      5071	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_10
0x4004c83	        0x4883c508	                              add rbp, 8	      5040	dwarf2.c	FUNCTION_71	IF_5	FOR_1
0x4004c87	        0x488b5d00	                    mov rbx, qword [rbp]	      5040	dwarf2.c	FUNCTION_71	IF_5	FOR_1
0x4004c8b	          0x4885db	                           test rbx, rbx	      5040	dwarf2.c	FUNCTION_71	IF_5	FOR_1
0x4004c8e	     0xf8547ffffff	                           jne 0x4004bdb	      5040	dwarf2.c	FUNCTION_71	IF_5	FOR_1
0x4004c94	        0x498b4508	                mov rax, qword [r13 + 8]	      5075	dwarf2.c	FUNCTION_71	IF_11
0x4004c98	          0x4885c0	                           test rax, rax	      5075	dwarf2.c	FUNCTION_71	IF_11
0x4004c9b	            0x743f	                            je 0x4004cdc	      5075	dwarf2.c	FUNCTION_71	IF_11
0x4004c9d	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      5078	dwarf2.c	FUNCTION_71	IF_12
0x4004ca2	          0x4885c9	                           test rcx, rcx	      5078	dwarf2.c	FUNCTION_71	IF_12
0x4004ca5	            0x7407	                            je 0x4004cae	      5078	dwarf2.c	FUNCTION_71	IF_12
0x4004ca7	        0x498b4510	            mov rax, qword [r13 + 0x10] 	      5079	dwarf2.c	FUNCTION_71	IF_12
0x4004cab	          0x488901	                    mov qword [rcx], rax	      5079	dwarf2.c	FUNCTION_71	IF_12
0x4004cae	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      5080	dwarf2.c	FUNCTION_71	IF_13
0x4004cb3	          0x4885f6	                           test rsi, rsi	      5080	dwarf2.c	FUNCTION_71	IF_13
0x4004cb6	            0x740b	                            je 0x4004cc3	      5080	dwarf2.c	FUNCTION_71	IF_13
0x4004cb8	        0x498b4508	                mov rax, qword [r13 + 8]	      5081	dwarf2.c	FUNCTION_71	CALL_8
0x4004cbc	        0x488b4008	                mov rax, qword [rax + 8]	      5081	dwarf2.c	FUNCTION_71	CALL_8
0x4004cc0	          0x488906	                    mov qword [rsi], rax	      5081	dwarf2.c	FUNCTION_71	CALL_8
0x4004cc3	        0x498b4508	                mov rax, qword [r13 + 8]	      5083	dwarf2.c	FUNCTION_71
0x4004cc7	            0xeb13	                           jmp 0x4004cdc	      5083	dwarf2.c	FUNCTION_71
0x4004cc9	      0xb800000000	                              mov eax, 0	      5000	dwarf2.c	FUNCTION_71	IF_1
0x4004cce	            0xeb0c	                           jmp 0x4004cdc	      5000	dwarf2.c	FUNCTION_71	IF_1
0x4004cd0	      0xb800000000	                              mov eax, 0	      5011	dwarf2.c	FUNCTION_71	IF_3	IF_4
0x4004cd5	            0xeb05	                           jmp 0x4004cdc	      5011	dwarf2.c	FUNCTION_71	IF_3	IF_4
0x4004cd7	      0xb800000000	                              mov eax, 0	      5076	dwarf2.c	FUNCTION_71	IF_11
0x4004cdc	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      5084	dwarf2.c	FUNCTION_71
0x4004ce1	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      5084	dwarf2.c	FUNCTION_71
0x4004cea	            0x7405	                            je 0x4004cf1	      5084	dwarf2.c	FUNCTION_71
0x4004cec	      0xe800000000	                          call 0x4004cf1	      5084	dwarf2.c	FUNCTION_71
0x4004cf1	        0x4883c448	                           add rsp, 0x48	      5084	dwarf2.c	FUNCTION_71
0x4004cf5	              0x5b	                                 pop rbx	      5084	dwarf2.c	FUNCTION_71
0x4004cf6	              0x5d	                                 pop rbp	      5084	dwarf2.c	FUNCTION_71
0x4004cf7	            0x415c	                                 pop r12	      5084	dwarf2.c	FUNCTION_71
0x4004cf9	            0x415d	                                 pop r13	      5084	dwarf2.c	FUNCTION_71
0x4004cfb	            0x415e	                                 pop r14	      5084	dwarf2.c	FUNCTION_71
0x4004cfd	            0x415f	                                 pop r15	      5084	dwarf2.c	FUNCTION_71
0x4004cff	              0xc3	                                     ret	      5084	dwarf2.c	FUNCTION_71
compare_sequences	SWITCH,0:FOR,0:WHILE,0:IF,6:functions,0:ELSE,0:DO,0:CALL,0	25
0x400014b	          0x488b0f	                    mov rcx, qword [rdi]	      1687	dwarf2.c	FUNCTION_28	IF_1
0x400014e	          0x488b16	                    mov rdx, qword [rsi]	      1687	dwarf2.c	FUNCTION_28	IF_1
0x4000151	          0x4839d1	                            cmp rcx, rdx	      1687	dwarf2.c	FUNCTION_28	IF_1
0x4000154	            0x7233	                            jb 0x4000189	      1687	dwarf2.c	FUNCTION_28	IF_1
0x4000156	      0xb801000000	                              mov eax, 1	      1690	dwarf2.c	FUNCTION_28	IF_2
0x400015b	            0x7737	                            ja 0x4000194	      1689	dwarf2.c	FUNCTION_28	IF_2
0x400015d	        0x488b7f10	            mov rdi, qword [rdi + 0x10] 	      1694	dwarf2.c	FUNCTION_28	IF_3
0x4000161	        0x488b4f08	                mov rcx, qword [rdi + 8]	      1694	dwarf2.c	FUNCTION_28	IF_3
0x4000165	        0x488b7610	            mov rsi, qword [rsi + 0x10] 	      1694	dwarf2.c	FUNCTION_28	IF_3
0x4000169	        0x488b5608	                mov rdx, qword [rsi + 8]	      1694	dwarf2.c	FUNCTION_28	IF_3
0x400016d	          0x4839d1	                            cmp rcx, rdx	      1694	dwarf2.c	FUNCTION_28	IF_3
0x4000170	            0x7222	                            jb 0x4000194	      1694	dwarf2.c	FUNCTION_28	IF_3
0x4000172	            0x771b	                            ja 0x400018f	      1696	dwarf2.c	FUNCTION_28	IF_4
0x4000174	         0xfb64f24	           movzx ecx, byte [rdi + 0x24] 	      1699	dwarf2.c	FUNCTION_28	IF_5
0x4000178	         0xfb65624	           movzx edx, byte [rsi + 0x24] 	      1699	dwarf2.c	FUNCTION_28	IF_5
0x400017c	            0x38d1	                              cmp cl, dl	      1699	dwarf2.c	FUNCTION_28	IF_5
0x400017e	            0x7214	                            jb 0x4000194	      1699	dwarf2.c	FUNCTION_28	IF_5
0x4000180	           0xf97c0	                                 seta al	      1701	dwarf2.c	FUNCTION_28	IF_6
0x4000183	           0xfb6c0	                           movzx eax, al	      1701	dwarf2.c	FUNCTION_28	IF_6
0x4000186	            0xf7d8	                                 neg eax	      1701	dwarf2.c	FUNCTION_28	IF_6
0x4000188	              0xc3	                                     ret	      1701	dwarf2.c	FUNCTION_28	IF_6
0x4000189	      0xb8ffffffff	                     mov eax, 0xffffffff	      1688	dwarf2.c	FUNCTION_28	IF_1
0x400018e	              0xc3	                                     ret	      1688	dwarf2.c	FUNCTION_28	IF_1
0x400018f	      0xb8ffffffff	                     mov eax, 0xffffffff	      1697	dwarf2.c	FUNCTION_28	IF_4
0x4000194	            0xf3c3	                                     ret	      1705	dwarf2.c	FUNCTION_28
read_formatted_entries	SWITCH,2:FOR,3:WHILE,0:IF,4:functions,0:ELSE,0:DO,0:CALL,19	224
0x4001ab5	            0x4157	                                push r15	      1896	dwarf2.c	FUNCTION_34
0x4001ab7	            0x4156	                                push r14	      1896	dwarf2.c	FUNCTION_34
0x4001ab9	            0x4155	                                push r13	      1896	dwarf2.c	FUNCTION_34
0x4001abb	            0x4154	                                push r12	      1896	dwarf2.c	FUNCTION_34
0x4001abd	              0x55	                                push rbp	      1896	dwarf2.c	FUNCTION_34
0x4001abe	              0x53	                                push rbx	      1896	dwarf2.c	FUNCTION_34
0x4001abf	    0x4881ec980000	                           sub rsp, 0x98	      1896	dwarf2.c	FUNCTION_34
0x4001ac6	      0x48897c2408	                mov qword [rsp + 8], rdi	      1896	dwarf2.c	FUNCTION_34
0x4001acb	      0x4889742440	             mov qword [rsp + 0x40], rsi	      1896	dwarf2.c	FUNCTION_34
0x4001ad0	          0x4889d3	                            mov rbx, rdx	      1896	dwarf2.c	FUNCTION_34
0x4001ad3	      0x48894c2430	             mov qword [rsp + 0x30], rcx	      1896	dwarf2.c	FUNCTION_34
0x4001ad8	      0x4c89442438	              mov qword [rsp + 0x38], r8	      1896	dwarf2.c	FUNCTION_34
0x4001add	    0x64488b142528	                mov rdx, qword fs:[0x28]	      1896	dwarf2.c	FUNCTION_34
0x4001ae6	    0x488994248800	             mov qword [rsp + 0x88], rdx	      1896	dwarf2.c	FUNCTION_34
0x4001aee	            0x31d2	                            xor edx, edx	      1896	dwarf2.c	FUNCTION_34
0x4001af0	        0x4c8b7710	            mov r14, qword [rdi + 0x10] 	      1897	dwarf2.c	FUNCTION_34
0x4001af4	          0x488b06	                    mov rax, qword [rsi]	      1900	dwarf2.c	FUNCTION_34
0x4001af7	        0x488d4801	                      lea rcx, [rax + 1]	       588	dwarf2.c	FUNCTION_6	IF_1
0x4001afb	      0x48894c2428	             mov qword [rsp + 0x28], rcx	       588	dwarf2.c	FUNCTION_6	IF_1
0x4001b00	          0x4839cb	                            cmp rbx, rcx	       588	dwarf2.c	FUNCTION_6	IF_1
0x4001b03	            0x725e	                            jb 0x4001b63	       588	dwarf2.c	FUNCTION_6	IF_1
0x4001b05	        0x440fb628	                  movzx r13d, byte [rax]	       590	dwarf2.c	FUNCTION_6	CALL_1
0x4001b09	          0x4584ed	                         test r13b, r13b	      1907	dwarf2.c	FUNCTION_34	FOR_1
0x4001b0c	            0x7455	                            je 0x4001b63	      1907	dwarf2.c	FUNCTION_34	FOR_1
0x4001b0e	          0x4889cd	                            mov rbp, rcx	      1907	dwarf2.c	FUNCTION_34	FOR_1
0x4001b11	    0x41bc00000000	                             mov r12d, 0	      1907	dwarf2.c	FUNCTION_34	FOR_1
0x4001b17	          0x4989d8	                             mov r8, rbx	      1909	dwarf2.c	FUNCTION_34	FOR_1	CALL_3
0x4001b1a	      0xb900000000	                              mov ecx, 0	      1909	dwarf2.c	FUNCTION_34	FOR_1	CALL_3
0x4001b1f	      0x488d542450	                   lea rdx, [rsp + 0x50]	      1909	dwarf2.c	FUNCTION_34	FOR_1	CALL_3
0x4001b24	          0x4889ee	                            mov rsi, rbp	      1909	dwarf2.c	FUNCTION_34	FOR_1	CALL_3
0x4001b27	          0x4c89f7	                            mov rdi, r14	      1909	dwarf2.c	FUNCTION_34	FOR_1	CALL_3
0x4001b2a	      0xe800000000	                          call 0x4001b2f	      1909	dwarf2.c	FUNCTION_34	FOR_1	CALL_3
0x4001b2f	        0x8b442450	            mov eax, dword [rsp + 0x50] 	      1910	dwarf2.c	FUNCTION_34	FOR_1
0x4001b33	          0x4801c5	                            add rbp, rax	      1910	dwarf2.c	FUNCTION_34	FOR_1
0x4001b36	          0x4989d8	                             mov r8, rbx	      1911	dwarf2.c	FUNCTION_34	FOR_1	CALL_4
0x4001b39	      0xb900000000	                              mov ecx, 0	      1911	dwarf2.c	FUNCTION_34	FOR_1	CALL_4
0x4001b3e	      0x488d542450	                   lea rdx, [rsp + 0x50]	      1911	dwarf2.c	FUNCTION_34	FOR_1	CALL_4
0x4001b43	          0x4889ee	                            mov rsi, rbp	      1911	dwarf2.c	FUNCTION_34	FOR_1	CALL_4
0x4001b46	          0x4c89f7	                            mov rdi, r14	      1911	dwarf2.c	FUNCTION_34	FOR_1	CALL_4
0x4001b49	      0xe800000000	                          call 0x4001b4e	      1911	dwarf2.c	FUNCTION_34	FOR_1	CALL_4
0x4001b4e	        0x8b442450	            mov eax, dword [rsp + 0x50] 	      1912	dwarf2.c	FUNCTION_34	FOR_1
0x4001b52	          0x4801c5	                            add rbp, rax	      1912	dwarf2.c	FUNCTION_34	FOR_1
0x4001b55	        0x4183c401	                             add r12d, 1	      1907	dwarf2.c	FUNCTION_34	FOR_1
0x4001b59	          0x4538ec	                          cmp r12b, r13b	      1907	dwarf2.c	FUNCTION_34	FOR_1
0x4001b5c	            0x75b9	                           jne 0x4001b17	      1907	dwarf2.c	FUNCTION_34	FOR_1
0x4001b5e	      0xe9bb020000	                           jmp 0x4001e1e	      1907	dwarf2.c	FUNCTION_34	FOR_1
0x4001b63	          0x4989d8	                             mov r8, rbx	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x4001b66	      0xb900000000	                              mov ecx, 0	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x4001b6b	      0x488d542450	                   lea rdx, [rsp + 0x50]	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x4001b70	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x4001b75	          0x4c89f7	                            mov rdi, r14	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x4001b78	      0xe800000000	                          call 0x4001b7d	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x4001b7d	      0x4889442420	             mov qword [rsp + 0x20], rax	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x4001b82	          0x4885c0	                           test rax, rax	      1917	dwarf2.c	FUNCTION_34	IF_1
0x4001b85	            0x7435	                            je 0x4001bbc	      1917	dwarf2.c	FUNCTION_34	IF_1
0x4001b87	      0xba05000000	                              mov edx, 5	      1919	dwarf2.c	FUNCTION_34	IF_1	CALL_7
0x4001b8c	      0xbe00000000	                              mov esi, 0	      1919	dwarf2.c	FUNCTION_34	IF_1	CALL_7
0x4001b91	      0xbf00000000	                              mov edi, 0	      1919	dwarf2.c	FUNCTION_34	IF_1	CALL_7
0x4001b96	      0xe800000000	                          call 0x4001b9b	      1919	dwarf2.c	FUNCTION_34	IF_1	CALL_7
0x4001b9b	          0x4889c7	                            mov rdi, rax	      1919	dwarf2.c	FUNCTION_34	IF_1	CALL_7
0x4001b9e	      0xb800000000	                              mov eax, 0	      1919	dwarf2.c	FUNCTION_34	IF_1	CALL_7
0x4001ba3	      0xe800000000	                          call 0x4001ba8	      1919	dwarf2.c	FUNCTION_34	IF_1	CALL_7
0x4001ba8	      0xbf11000000	                           mov edi, 0x11	      1920	dwarf2.c	FUNCTION_34	IF_1	CALL_8
0x4001bad	      0xe800000000	                          call 0x4001bb2	      1920	dwarf2.c	FUNCTION_34	IF_1	CALL_8
0x4001bb2	      0xb800000000	                              mov eax, 0	      1921	dwarf2.c	FUNCTION_34	IF_1
0x4001bb7	      0xe94d020000	                           jmp 0x4001e09	      1921	dwarf2.c	FUNCTION_34	IF_1
0x4001bbc	        0x8b442450	            mov eax, dword [rsp + 0x50] 	      1916	dwarf2.c	FUNCTION_34
0x4001bc0	      0x4c8b7c2428	            mov r15, qword [rsp + 0x28] 	      1916	dwarf2.c	FUNCTION_34
0x4001bc5	          0x4901c7	                            add r15, rax	      1916	dwarf2.c	FUNCTION_34
0x4001bc8	          0x4c29fb	                            sub rbx, r15	      1926	dwarf2.c	FUNCTION_34	IF_2
0x4001bcb	      0x48395c2420	            cmp qword [rsp + 0x20], rbx 	      1926	dwarf2.c	FUNCTION_34	IF_2
0x4001bd0	     0xf8626020000	                           jbe 0x4001dfc	      1926	dwarf2.c	FUNCTION_34	IF_2
0x4001bd6	            0xeb16	                           jmp 0x4001bee	      1926	dwarf2.c	FUNCTION_34	IF_2
0x4001bd8	    0x48c744244800	               mov qword [rsp + 0x48], 0	      1935	dwarf2.c	FUNCTION_34	FOR_2
0x4001be1	    0x48837c242000	               cmp qword [rsp + 0x20], 0	      1935	dwarf2.c	FUNCTION_34	FOR_2
0x4001be7	            0x753f	                           jne 0x4001c28	      1935	dwarf2.c	FUNCTION_34	FOR_2
0x4001be9	      0xe90e020000	                           jmp 0x4001dfc	      1935	dwarf2.c	FUNCTION_34	FOR_2
0x4001bee	      0xba05000000	                              mov edx, 5	      1929	dwarf2.c	FUNCTION_34	IF_2	CALL_10
0x4001bf3	      0xbe00000000	                              mov esi, 0	      1929	dwarf2.c	FUNCTION_34	IF_2	CALL_10
0x4001bf8	      0xbf00000000	                              mov edi, 0	      1929	dwarf2.c	FUNCTION_34	IF_2	CALL_10
0x4001bfd	      0xe800000000	                          call 0x4001c02	      1929	dwarf2.c	FUNCTION_34	IF_2	CALL_10
0x4001c02	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      1928	dwarf2.c	FUNCTION_34	IF_2	CALL_9
0x4001c07	          0x4889c7	                            mov rdi, rax	      1928	dwarf2.c	FUNCTION_34	IF_2	CALL_9
0x4001c0a	      0xb800000000	                              mov eax, 0	      1928	dwarf2.c	FUNCTION_34	IF_2	CALL_9
0x4001c0f	      0xe800000000	                          call 0x4001c14	      1928	dwarf2.c	FUNCTION_34	IF_2	CALL_9
0x4001c14	      0xbf11000000	                           mov edi, 0x11	      1931	dwarf2.c	FUNCTION_34	IF_2	CALL_11
0x4001c19	      0xe800000000	                          call 0x4001c1e	      1931	dwarf2.c	FUNCTION_34	IF_2	CALL_11
0x4001c1e	      0xb800000000	                              mov eax, 0	      1932	dwarf2.c	FUNCTION_34	IF_2
0x4001c23	      0xe9e1010000	                           jmp 0x4001e09	      1932	dwarf2.c	FUNCTION_34	IF_2
0x4001c28	      0x44886c2407	                mov byte [rsp + 7], r13b	      1932	dwarf2.c	FUNCTION_34	IF_2
0x4001c2d	    0x48c744247000	               mov qword [rsp + 0x70], 0	        90	string3.h	FUNCTION_75	CALL_6
0x4001c36	    0x48c744247800	               mov qword [rsp + 0x78], 0	        90	string3.h	FUNCTION_75	CALL_6
0x4001c3f	    0x48c784248000	               mov qword [rsp + 0x80], 0	        90	string3.h	FUNCTION_75	CALL_6
0x4001c4b	      0x807c240700	                   cmp byte [rsp + 7], 0	      1941	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4001c50	     0xf8462010000	                            je 0x4001db8	      1941	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4001c56	      0x488b6c2428	            mov rbp, qword [rsp + 0x28] 	      1941	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4001c5b	    0x41bd00000000	                             mov r13d, 0	      1941	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4001c61	          0x4989d8	                             mov r8, rbx	      1949	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_13
0x4001c64	      0xb900000000	                              mov ecx, 0	      1949	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_13
0x4001c69	      0x488d542450	                   lea rdx, [rsp + 0x50]	      1949	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_13
0x4001c6e	          0x4889ee	                            mov rsi, rbp	      1949	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_13
0x4001c71	          0x4c89f7	                            mov rdi, r14	      1949	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_13
0x4001c74	      0xe800000000	                          call 0x4001c79	      1949	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_13
0x4001c79	        0x8b542450	            mov edx, dword [rsp + 0x50] 	      1951	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4001c7d	          0x4801d5	                            add rbp, rdx	      1951	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4001c80	        0x4883f805	                              cmp rax, 5	      1952	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4001c84	            0x774f	                            ja 0x4001cd5	      1952	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4001c86	    0xff24c5000000	                       jmp qword [rax*8]	      1952	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4001c8d	      0x488d442454	                   lea rax, [rsp + 0x54]	      1946	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4001c92	      0x4889442418	             mov qword [rsp + 0x18], rax	      1946	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4001c97	      0x488d442470	                   lea rax, [rsp + 0x70]	      1955	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4001c9c	      0x4889442410	             mov qword [rsp + 0x10], rax	      1955	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4001ca1	      0xe98f000000	                           jmp 0x4001d35	      1955	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4001ca6	      0x488d44247c	                   lea rax, [rsp + 0x7c]	      1961	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4001cab	      0x4889442418	             mov qword [rsp + 0x18], rax	      1961	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4001cb0	      0x488d442458	                   lea rax, [rsp + 0x58]	      1945	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4001cb5	      0x4889442410	             mov qword [rsp + 0x10], rax	      1945	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4001cba	            0xeb79	                           jmp 0x4001d35	      1962	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4001cbc	    0x488d84248000	                   lea rax, [rsp + 0x80]	      1964	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4001cc4	      0x4889442418	             mov qword [rsp + 0x18], rax	      1964	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4001cc9	      0x488d442458	                   lea rax, [rsp + 0x58]	      1945	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4001cce	      0x4889442410	             mov qword [rsp + 0x10], rax	      1945	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4001cd3	            0xeb60	                           jmp 0x4001d35	      1965	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4001cd5	          0x4989c4	                            mov r12, rax	      1965	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4001cd8	      0xba05000000	                              mov edx, 5	      1970	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1	CALL_15
0x4001cdd	      0xbe00000000	                              mov esi, 0	      1970	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1	CALL_15
0x4001ce2	      0xbf00000000	                              mov edi, 0	      1970	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1	CALL_15
0x4001ce7	      0xe800000000	                          call 0x4001cec	      1970	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1	CALL_15
0x4001cec	          0x4c89e6	                            mov rsi, r12	      1969	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1	CALL_14
0x4001cef	          0x4889c7	                            mov rdi, rax	      1969	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1	CALL_14
0x4001cf2	      0xb800000000	                              mov eax, 0	      1969	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1	CALL_14
0x4001cf7	      0xe800000000	                          call 0x4001cfc	      1969	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1	CALL_14
0x4001cfc	      0xbf11000000	                           mov edi, 0x11	      1972	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1	CALL_16
0x4001d01	      0xe800000000	                          call 0x4001d06	      1972	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1	CALL_16
0x4001d06	      0xe9ea000000	                           jmp 0x4001df5	      1973	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4001d0b	      0x488d442454	                   lea rax, [rsp + 0x54]	      1946	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4001d10	      0x4889442418	             mov qword [rsp + 0x18], rax	      1946	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4001d15	      0x488d442458	                   lea rax, [rsp + 0x58]	      1945	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4001d1a	      0x4889442410	             mov qword [rsp + 0x10], rax	      1945	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4001d1f	            0xeb14	                           jmp 0x4001d35	      1945	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4001d21	      0x488d442478	                   lea rax, [rsp + 0x78]	      1958	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4001d26	      0x4889442418	             mov qword [rsp + 0x18], rax	      1958	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4001d2b	      0x488d442458	                   lea rax, [rsp + 0x58]	      1945	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4001d30	      0x4889442410	             mov qword [rsp + 0x10], rax	      1945	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4001d35	          0x4989d8	                             mov r8, rbx	      1976	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_17
0x4001d38	      0xb900000000	                              mov ecx, 0	      1976	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_17
0x4001d3d	      0x488d542450	                   lea rdx, [rsp + 0x50]	      1976	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_17
0x4001d42	          0x4889ee	                            mov rsi, rbp	      1976	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_17
0x4001d45	          0x4c89f7	                            mov rdi, r14	      1976	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_17
0x4001d48	      0xe800000000	                          call 0x4001d4d	      1976	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_17
0x4001d4d	          0x4989c4	                            mov r12, rax	      1976	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_17
0x4001d50	        0x8b442450	            mov eax, dword [rsp + 0x50] 	      1978	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4001d54	          0x4801c5	                            add rbp, rax	      1978	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4001d57	          0x4989d9	                             mov r9, rbx	      1980	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_18
0x4001d5a	          0x4d89f8	                             mov r8, r15	      1980	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_18
0x4001d5d	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1980	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_18
0x4001d62	      0xba00000000	                              mov edx, 0	      1980	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_18
0x4001d67	          0x4489e6	                           mov esi, r12d	      1980	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_18
0x4001d6a	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      1980	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_18
0x4001d6f	      0xe8d9f3ffff	           call sym.read_attribute_value	      1980	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_18
0x4001d74	          0x4989c7	                            mov r15, rax	      1980	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_18
0x4001d77	          0x4885c0	                           test rax, rax	      1981	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	IF_3
0x4001d7a	            0x7479	                            je 0x4001df5	      1981	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	IF_3
0x4001d7c	        0x4983ec05	                              sub r12, 5	      1983	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_2
0x4001d80	        0x4983fc1a	                           cmp r12, 0x1a	      1983	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_2
0x4001d84	            0x7723	                            ja 0x4001da9	      1983	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_2
0x4001d86	    0x42ff24e50000	                       jmp qword [r12*8]	      1983	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_2
0x4001d8e	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      1987	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_2
0x4001d93	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      1987	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_2
0x4001d98	          0x488902	                    mov qword [rdx], rax	      1987	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_2
0x4001d9b	            0xeb0c	                           jmp 0x4001da9	      1988	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_2
0x4001d9d	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      1995	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_2
0x4001da2	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      1995	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_2
0x4001da7	            0x8907	                    mov dword [rdi], eax	      1995	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_2
0x4001da9	        0x4183c501	                             add r13d, 1	      1941	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4001dad	      0x443a6c2407	                cmp r13b, byte [rsp + 7]	      1941	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4001db2	     0xf85a9feffff	                           jne 0x4001c61	      1941	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4001db8	    0x448b84248000	            mov r8d, dword [rsp + 0x80] 	      2000	dwarf2.c	FUNCTION_34	FOR_2	IF_4	CALL_19
0x4001dc0	        0x8b4c247c	            mov ecx, dword [rsp + 0x7c] 	      2000	dwarf2.c	FUNCTION_34	FOR_2	IF_4	CALL_19
0x4001dc4	        0x8b542478	            mov edx, dword [rsp + 0x78] 	      2000	dwarf2.c	FUNCTION_34	FOR_2	IF_4	CALL_19
0x4001dc8	      0x488b742470	            mov rsi, qword [rsp + 0x70] 	      2000	dwarf2.c	FUNCTION_34	FOR_2	IF_4	CALL_19
0x4001dcd	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      2000	dwarf2.c	FUNCTION_34	FOR_2	IF_4	CALL_19
0x4001dd2	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      2000	dwarf2.c	FUNCTION_34	FOR_2	IF_4	CALL_19
0x4001dd7	            0xffd0	                                call rax	      2000	dwarf2.c	FUNCTION_34	FOR_2	IF_4	CALL_19
0x4001dd9	            0x85c0	                           test eax, eax	      2000	dwarf2.c	FUNCTION_34	FOR_2	IF_4	CALL_19
0x4001ddb	            0x7418	                            je 0x4001df5	      2000	dwarf2.c	FUNCTION_34	FOR_2	IF_4	CALL_19
0x4001ddd	    0x488344244801	               add qword [rsp + 0x48], 1	      1935	dwarf2.c	FUNCTION_34	FOR_2
0x4001de3	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      1935	dwarf2.c	FUNCTION_34	FOR_2
0x4001de8	      0x4839442420	            cmp qword [rsp + 0x20], rax 	      1935	dwarf2.c	FUNCTION_34	FOR_2
0x4001ded	     0xf873afeffff	                            ja 0x4001c2d	      1935	dwarf2.c	FUNCTION_34	FOR_2
0x4001df3	            0xeb07	                           jmp 0x4001dfc	      1935	dwarf2.c	FUNCTION_34	FOR_2
0x4001df5	      0xb800000000	                              mov eax, 0	      1935	dwarf2.c	FUNCTION_34	FOR_2
0x4001dfa	            0xeb0d	                           jmp 0x4001e09	      1935	dwarf2.c	FUNCTION_34	FOR_2
0x4001dfc	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      2004	dwarf2.c	FUNCTION_34
0x4001e01	          0x4c8938	                    mov qword [rax], r15	      2004	dwarf2.c	FUNCTION_34
0x4001e04	      0xb801000000	                              mov eax, 1	      2005	dwarf2.c	FUNCTION_34
0x4001e09	    0x488b9c248800	            mov rbx, qword [rsp + 0x88] 	      2006	dwarf2.c	FUNCTION_34
0x4001e11	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      2006	dwarf2.c	FUNCTION_34
0x4001e1a	            0x7444	                            je 0x4001e60	      2006	dwarf2.c	FUNCTION_34
0x4001e1c	            0xeb3d	                           jmp 0x4001e5b	      2006	dwarf2.c	FUNCTION_34
0x4001e1e	          0x4989d8	                             mov r8, rbx	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x4001e21	      0xb900000000	                              mov ecx, 0	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x4001e26	      0x488d542450	                   lea rdx, [rsp + 0x50]	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x4001e2b	          0x4889ee	                            mov rsi, rbp	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x4001e2e	          0x4c89f7	                            mov rdi, r14	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x4001e31	      0xe800000000	                          call 0x4001e36	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x4001e36	          0x4889c6	                            mov rsi, rax	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x4001e39	      0x4889442420	             mov qword [rsp + 0x20], rax	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x4001e3e	        0x8b442450	            mov eax, dword [rsp + 0x50] 	      1916	dwarf2.c	FUNCTION_34
0x4001e42	      0x4c8d7c0500	                    lea r15, [rbp + rax]	      1916	dwarf2.c	FUNCTION_34
0x4001e47	          0x4889d8	                            mov rax, rbx	      1926	dwarf2.c	FUNCTION_34	IF_2
0x4001e4a	          0x4c29f8	                            sub rax, r15	      1926	dwarf2.c	FUNCTION_34	IF_2
0x4001e4d	          0x4839c6	                            cmp rsi, rax	      1926	dwarf2.c	FUNCTION_34	IF_2
0x4001e50	     0xf8682fdffff	                           jbe 0x4001bd8	      1926	dwarf2.c	FUNCTION_34	IF_2
0x4001e56	      0xe993fdffff	                           jmp 0x4001bee	      1926	dwarf2.c	FUNCTION_34	IF_2
0x4001e5b	      0xe800000000	                          call 0x4001e60	      2006	dwarf2.c	FUNCTION_34
0x4001e60	    0x4881c4980000	                           add rsp, 0x98	      2006	dwarf2.c	FUNCTION_34
0x4001e67	              0x5b	                                 pop rbx	      2006	dwarf2.c	FUNCTION_34
0x4001e68	              0x5d	                                 pop rbp	      2006	dwarf2.c	FUNCTION_34
0x4001e69	            0x415c	                                 pop r12	      2006	dwarf2.c	FUNCTION_34
0x4001e6b	            0x415d	                                 pop r13	      2006	dwarf2.c	FUNCTION_34
0x4001e6d	            0x415e	                                 pop r14	      2006	dwarf2.c	FUNCTION_34
0x4001e6f	            0x415f	                                 pop r15	      2006	dwarf2.c	FUNCTION_34
0x4001e71	              0xc3	                                     ret	      2006	dwarf2.c	FUNCTION_34
line_info_add_include_dir	SWITCH,0:FOR,0:WHILE,0:IF,2:functions,0:ELSE,0:DO,0:CALL,1	33
0x4000841	              0x55	                                push rbp	      1826	dwarf2.c	FUNCTION_31
0x4000842	              0x53	                                push rbx	      1826	dwarf2.c	FUNCTION_31
0x4000843	        0x4883ec08	                              sub rsp, 8	      1826	dwarf2.c	FUNCTION_31
0x4000847	          0x4889fb	                            mov rbx, rdi	      1826	dwarf2.c	FUNCTION_31
0x400084a	          0x4889f5	                            mov rbp, rsi	      1826	dwarf2.c	FUNCTION_31
0x400084d	          0x8b4f0c	              mov ecx, dword [rdi + 0xc]	      1827	dwarf2.c	FUNCTION_31	IF_1
0x4000850	      0xbacdcccccc	                     mov edx, 0xcccccccd	      1827	dwarf2.c	FUNCTION_31	IF_1
0x4000855	            0x89c8	                            mov eax, ecx	      1827	dwarf2.c	FUNCTION_31	IF_1
0x4000857	            0xf7e2	                                 mul edx	      1827	dwarf2.c	FUNCTION_31	IF_1
0x4000859	          0xc1ea02	                              shr edx, 2	      1827	dwarf2.c	FUNCTION_31	IF_1
0x400085c	          0x8d0492	                  lea eax, [rdx + rdx*4]	      1827	dwarf2.c	FUNCTION_31	IF_1
0x400085f	            0x39c1	                            cmp ecx, eax	      1827	dwarf2.c	FUNCTION_31	IF_1
0x4000861	            0x7519	                           jne 0x400087c	      1827	dwarf2.c	FUNCTION_31	IF_1
0x4000863	          0x8d7105	                      lea esi, [rcx + 5]	      1832	dwarf2.c	FUNCTION_31	IF_1
0x4000866	        0x48c1e603	                              shl rsi, 3	      1835	dwarf2.c	FUNCTION_31	IF_1	CALL_1
0x400086a	        0x488b7f20	            mov rdi, qword [rdi + 0x20] 	      1835	dwarf2.c	FUNCTION_31	IF_1	CALL_1
0x400086e	      0xe800000000	                          call 0x4000873	      1835	dwarf2.c	FUNCTION_31	IF_1	CALL_1
0x4000873	          0x4885c0	                           test rax, rax	      1836	dwarf2.c	FUNCTION_31	IF_1	IF_2
0x4000876	            0x741e	                            je 0x4000896	      1836	dwarf2.c	FUNCTION_31	IF_1	IF_2
0x4000878	        0x48894320	             mov qword [rbx + 0x20], rax	      1838	dwarf2.c	FUNCTION_31	IF_1
0x400087c	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	      1841	dwarf2.c	FUNCTION_31
0x4000880	          0x8b430c	              mov eax, dword [rbx + 0xc]	      1841	dwarf2.c	FUNCTION_31
0x4000883	          0x8d4801	                      lea ecx, [rax + 1]	      1841	dwarf2.c	FUNCTION_31
0x4000886	          0x894b0c	              mov dword [rbx + 0xc], ecx	      1841	dwarf2.c	FUNCTION_31
0x4000889	            0x89c0	                            mov eax, eax	      1841	dwarf2.c	FUNCTION_31
0x400088b	        0x48892cc2	            mov qword [rdx + rax*8], rbp	      1841	dwarf2.c	FUNCTION_31
0x400088f	      0xb801000000	                              mov eax, 1	      1842	dwarf2.c	FUNCTION_31
0x4000894	            0xeb05	                           jmp 0x400089b	      1842	dwarf2.c	FUNCTION_31
0x4000896	      0xb800000000	                              mov eax, 0	      1837	dwarf2.c	FUNCTION_31	IF_1	IF_2
0x400089b	        0x4883c408	                              add rsp, 8	      1843	dwarf2.c	FUNCTION_31
0x400089f	              0x5b	                                 pop rbx	      1843	dwarf2.c	FUNCTION_31
0x40008a0	              0x5d	                                 pop rbp	      1843	dwarf2.c	FUNCTION_31
0x40008a1	              0xc3	                                     ret	      1843	dwarf2.c	FUNCTION_31
create_info_hash_table	SWITCH,0:FOR,0:WHILE,0:IF,2:functions,0:ELSE,0:DO,0:CALL,3	26
0x400105b	              0x55	                                push rbp	       451	dwarf2.c	FUNCTION_2
0x400105c	              0x53	                                push rbx	       451	dwarf2.c	FUNCTION_2
0x400105d	        0x4883ec08	                              sub rsp, 8	       451	dwarf2.c	FUNCTION_2
0x4001061	          0x4889fd	                            mov rbp, rdi	       451	dwarf2.c	FUNCTION_2
0x4001064	      0xbe28000000	                           mov esi, 0x28	       454	dwarf2.c	FUNCTION_2
0x4001069	      0xe800000000	                          call 0x400106e	       454	dwarf2.c	FUNCTION_2
0x400106e	      0xba00000000	                              mov edx, 0	       457	dwarf2.c	FUNCTION_2	IF_1
0x4001073	          0x4885c0	                           test rax, rax	       456	dwarf2.c	FUNCTION_2	IF_1
0x4001076	            0x742c	                            je 0x40010a4	       456	dwarf2.c	FUNCTION_2	IF_1
0x4001078	          0x4889c3	                            mov rbx, rax	       456	dwarf2.c	FUNCTION_2	IF_1
0x400107b	      0xba20000000	                           mov edx, 0x20	       459	dwarf2.c	FUNCTION_2	IF_2	CALL_2
0x4001080	      0xbe00000000	                              mov esi, 0	       459	dwarf2.c	FUNCTION_2	IF_2	CALL_2
0x4001085	          0x4889c7	                            mov rdi, rax	       459	dwarf2.c	FUNCTION_2	IF_2	CALL_2
0x4001088	      0xe800000000	                          call 0x400108d	       459	dwarf2.c	FUNCTION_2	IF_2	CALL_2
0x400108d	          0x4889da	                            mov rdx, rbx	       466	dwarf2.c	FUNCTION_2
0x4001090	            0x85c0	                           test eax, eax	       459	dwarf2.c	FUNCTION_2	IF_2	CALL_2
0x4001092	            0x7510	                           jne 0x40010a4	       459	dwarf2.c	FUNCTION_2	IF_2	CALL_2
0x4001094	          0x4889de	                            mov rsi, rbx	       462	dwarf2.c	FUNCTION_2	IF_2	CALL_3
0x4001097	          0x4889ef	                            mov rdi, rbp	       462	dwarf2.c	FUNCTION_2	IF_2	CALL_3
0x400109a	      0xe800000000	                          call 0x400109f	       462	dwarf2.c	FUNCTION_2	IF_2	CALL_3
0x400109f	      0xba00000000	                              mov edx, 0	       463	dwarf2.c	FUNCTION_2	IF_2
0x40010a4	          0x4889d0	                            mov rax, rdx	       467	dwarf2.c	FUNCTION_2
0x40010a7	        0x4883c408	                              add rsp, 8	       467	dwarf2.c	FUNCTION_2
0x40010ab	              0x5b	                                 pop rbx	       467	dwarf2.c	FUNCTION_2
0x40010ac	              0x5d	                                 pop rbp	       467	dwarf2.c	FUNCTION_2
0x40010ad	              0xc3	                                     ret	       467	dwarf2.c	FUNCTION_2
decode_line_info	SWITCH,2:FOR,2:WHILE,5:IF,42:functions,0:ELSE,8:DO,0:CALL,81	909
0x4001e72	            0x4157	                                push r15	      2012	dwarf2.c	FUNCTION_35
0x4001e74	            0x4156	                                push r14	      2012	dwarf2.c	FUNCTION_35
0x4001e76	            0x4155	                                push r13	      2012	dwarf2.c	FUNCTION_35
0x4001e78	            0x4154	                                push r12	      2012	dwarf2.c	FUNCTION_35
0x4001e7a	              0x55	                                push rbp	      2012	dwarf2.c	FUNCTION_35
0x4001e7b	              0x53	                                push rbx	      2012	dwarf2.c	FUNCTION_35
0x4001e7c	    0x4881ec980000	                           sub rsp, 0x98	      2012	dwarf2.c	FUNCTION_35
0x4001e83	          0x4889fd	                            mov rbp, rdi	      2012	dwarf2.c	FUNCTION_35
0x4001e86	      0x48897c2438	             mov qword [rsp + 0x38], rdi	      2012	dwarf2.c	FUNCTION_35
0x4001e8b	          0x4889f3	                            mov rbx, rsi	      2012	dwarf2.c	FUNCTION_35
0x4001e8e	    0x64488b3c2528	                mov rdi, qword fs:[0x28]	      2012	dwarf2.c	FUNCTION_35
0x4001e97	    0x4889bc248800	             mov qword [rsp + 0x88], rdi	      2012	dwarf2.c	FUNCTION_35
0x4001e9f	            0x31ff	                            xor edi, edi	      2012	dwarf2.c	FUNCTION_35
0x4001ea1	        0x4c8b7d10	            mov r15, qword [rbp + 0x10] 	      2013	dwarf2.c	FUNCTION_35
0x4001ea5	        0x488b4d60	            mov rcx, qword [rbp + 0x60] 	      2024	dwarf2.c	FUNCTION_35	IF_1	CALL_1
0x4001ea9	        0x488b5678	            mov rdx, qword [rsi + 0x78] 	      2024	dwarf2.c	FUNCTION_35	IF_1	CALL_1
0x4001ead	        0x488b4610	            mov rax, qword [rsi + 0x10] 	      2024	dwarf2.c	FUNCTION_35	IF_1	CALL_1
0x4001eb1	        0x488d7050	                   lea rsi, [rax + 0x50]	      2024	dwarf2.c	FUNCTION_35	IF_1	CALL_1
0x4001eb5	    0x4c8d8b980000	                    lea r9, [rbx + 0x98]	      2024	dwarf2.c	FUNCTION_35	IF_1	CALL_1
0x4001ebc	    0x4c8d83900000	                    lea r8, [rbx + 0x90]	      2024	dwarf2.c	FUNCTION_35	IF_1	CALL_1
0x4001ec3	          0x4c89ff	                            mov rdi, r15	      2024	dwarf2.c	FUNCTION_35	IF_1	CALL_1
0x4001ec6	      0xe85de7ffff	                   call sym.read_section	      2024	dwarf2.c	FUNCTION_35	IF_1	CALL_1
0x4001ecb	      0xba00000000	                              mov edx, 0	      2027	dwarf2.c	FUNCTION_35	IF_1
0x4001ed0	            0x85c0	                           test eax, eax	      2024	dwarf2.c	FUNCTION_35	IF_1	CALL_1
0x4001ed2	     0xf84480e0000	                            je 0x4002d20	      2024	dwarf2.c	FUNCTION_35	IF_1	CALL_1
0x4001ed8	      0xbe40000000	                           mov esi, 0x40	      2030	dwarf2.c	FUNCTION_35	CALL_2
0x4001edd	          0x4c89ff	                            mov rdi, r15	      2030	dwarf2.c	FUNCTION_35	CALL_2
0x4001ee0	      0xe800000000	                          call 0x4001ee5	      2030	dwarf2.c	FUNCTION_35	CALL_2
0x4001ee5	          0x4989c6	                            mov r14, rax	      2030	dwarf2.c	FUNCTION_35	CALL_2
0x4001ee8	          0x4885c0	                           test rax, rax	      2031	dwarf2.c	FUNCTION_35	IF_2
0x4001eeb	     0xf842a0e0000	                            je 0x4002d1b	      2031	dwarf2.c	FUNCTION_35	IF_2
0x4001ef1	          0x4c8938	                    mov qword [rax], r15	      2033	dwarf2.c	FUNCTION_35
0x4001ef4	        0x488b4548	            mov rax, qword [rbp + 0x48] 	      2034	dwarf2.c	FUNCTION_35
0x4001ef8	        0x49894618	             mov qword [r14 + 0x18], rax	      2034	dwarf2.c	FUNCTION_35
0x4001efc	    0x41c746080000	                  mov dword [r14 + 8], 0	      2036	dwarf2.c	FUNCTION_35
0x4001f04	    0x49c746280000	               mov qword [r14 + 0x28], 0	      2037	dwarf2.c	FUNCTION_35
0x4001f0c	    0x41c7460c0000	                mov dword [r14 + 0xc], 0	      2039	dwarf2.c	FUNCTION_35
0x4001f14	    0x49c746200000	               mov qword [r14 + 0x20], 0	      2040	dwarf2.c	FUNCTION_35
0x4001f1c	    0x41c746100000	               mov dword [r14 + 0x10], 0	      2042	dwarf2.c	FUNCTION_35
0x4001f24	    0x49c746300000	               mov qword [r14 + 0x30], 0	      2043	dwarf2.c	FUNCTION_35
0x4001f2c	    0x49c746380000	               mov qword [r14 + 0x38], 0	      2045	dwarf2.c	FUNCTION_35
0x4001f34	    0x488bab980000	            mov rbp, qword [rbx + 0x98] 	      2047	dwarf2.c	FUNCTION_35	IF_3
0x4001f3b	        0x4883fd0f	                            cmp rbp, 0xf	      2047	dwarf2.c	FUNCTION_35	IF_3
0x4001f3f	            0x7738	                            ja 0x4001f79	      2047	dwarf2.c	FUNCTION_35	IF_3
0x4001f41	      0xba05000000	                              mov edx, 5	      2050	dwarf2.c	FUNCTION_35	IF_3	CALL_4
0x4001f46	      0xbe00000000	                              mov esi, 0	      2050	dwarf2.c	FUNCTION_35	IF_3	CALL_4
0x4001f4b	      0xbf00000000	                              mov edi, 0	      2050	dwarf2.c	FUNCTION_35	IF_3	CALL_4
0x4001f50	      0xe800000000	                          call 0x4001f55	      2050	dwarf2.c	FUNCTION_35	IF_3	CALL_4
0x4001f55	          0x4889ee	                            mov rsi, rbp	      2049	dwarf2.c	FUNCTION_35	IF_3	CALL_3
0x4001f58	          0x4889c7	                            mov rdi, rax	      2049	dwarf2.c	FUNCTION_35	IF_3	CALL_3
0x4001f5b	      0xb800000000	                              mov eax, 0	      2049	dwarf2.c	FUNCTION_35	IF_3	CALL_3
0x4001f60	      0xe800000000	                          call 0x4001f65	      2049	dwarf2.c	FUNCTION_35	IF_3	CALL_3
0x4001f65	      0xbf11000000	                           mov edi, 0x11	      2052	dwarf2.c	FUNCTION_35	IF_3	CALL_5
0x4001f6a	      0xe800000000	                          call 0x4001f6f	      2052	dwarf2.c	FUNCTION_35	IF_3	CALL_5
0x4001f6f	      0xba00000000	                              mov edx, 0	      2053	dwarf2.c	FUNCTION_35	IF_3
0x4001f74	      0xe9a70d0000	                           jmp 0x4002d20	      2053	dwarf2.c	FUNCTION_35	IF_3
0x4001f79	    0x488b9b900000	            mov rbx, qword [rbx + 0x90] 	      2055	dwarf2.c	FUNCTION_35
0x4001f80	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      2055	dwarf2.c	FUNCTION_35
0x4001f85	          0x4889de	                            mov rsi, rbx	      2055	dwarf2.c	FUNCTION_35
0x4001f88	        0x48037060	             add rsi, qword [rax + 0x60]	      2055	dwarf2.c	FUNCTION_35
0x4001f8c	    0x4889b4248000	             mov qword [rsp + 0x80], rsi	      2055	dwarf2.c	FUNCTION_35
0x4001f94	          0x4801eb	                            add rbx, rbp	      2056	dwarf2.c	FUNCTION_35
0x4001f97	          0x4889da	                            mov rdx, rbx	      2059	dwarf2.c	FUNCTION_35	CALL_6
0x4001f9a	          0x4c89ff	                            mov rdi, r15	      2059	dwarf2.c	FUNCTION_35	CALL_6
0x4001f9d	      0xe8c0e0ffff	                   call sym.read_4_bytes	      2059	dwarf2.c	FUNCTION_35	CALL_6
0x4001fa2	    0x488bbc248000	            mov rdi, qword [rsp + 0x80] 	      2060	dwarf2.c	FUNCTION_35
0x4001faa	        0x488d7704	                      lea rsi, [rdi + 4]	      2060	dwarf2.c	FUNCTION_35
0x4001fae	    0x4889b4248000	             mov qword [rsp + 0x80], rsi	      2060	dwarf2.c	FUNCTION_35
0x4001fb6	            0x89c5	                            mov ebp, eax	      2062	dwarf2.c	FUNCTION_35	IF_4
0x4001fb8	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      2062	dwarf2.c	FUNCTION_35	IF_4
0x4001fbb	            0x751f	                           jne 0x4001fdc	      2062	dwarf2.c	FUNCTION_35	IF_4
0x4001fbd	          0x4889da	                            mov rdx, rbx	      2064	dwarf2.c	FUNCTION_35	IF_4	CALL_7
0x4001fc0	          0x4c89ff	                            mov rdi, r15	      2064	dwarf2.c	FUNCTION_35	IF_4	CALL_7
0x4001fc3	      0xe8bce0ffff	                   call sym.read_8_bytes	      2064	dwarf2.c	FUNCTION_35	IF_4	CALL_7
0x4001fc8	          0x4889c5	                            mov rbp, rax	      2064	dwarf2.c	FUNCTION_35	IF_4	CALL_7
0x4001fcb	    0x488384248000	               add qword [rsp + 0x80], 8	      2065	dwarf2.c	FUNCTION_35	IF_4
0x4001fd4	    0x41bc08000000	                             mov r12d, 8	      2066	dwarf2.c	FUNCTION_35	IF_4
0x4001fda	            0xeb3d	                           jmp 0x4002019	      2066	dwarf2.c	FUNCTION_35	IF_4
0x4001fdc	          0x4885ed	                           test rbp, rbp	      2068	dwarf2.c	FUNCTION_35	ELSE_1	IF_5
0x4001fdf	            0x7532	                           jne 0x4002013	      2068	dwarf2.c	FUNCTION_35	ELSE_1	IF_5
0x4001fe1	    0x41bc04000000	                             mov r12d, 4	      2061	dwarf2.c	FUNCTION_35
0x4001fe7	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      2068	dwarf2.c	FUNCTION_35	ELSE_1	IF_5
0x4001fec	    0x80b8ac000000	                cmp byte [rax + 0xac], 8	      2068	dwarf2.c	FUNCTION_35	ELSE_1	IF_5
0x4001ff3	            0x756f	                           jne 0x4002064	      2068	dwarf2.c	FUNCTION_35	ELSE_1	IF_5
0x4001ff5	          0x4889da	                            mov rdx, rbx	      2071	dwarf2.c	FUNCTION_35	ELSE_1	IF_5	CALL_8
0x4001ff8	          0x4c89ff	                            mov rdi, r15	      2071	dwarf2.c	FUNCTION_35	ELSE_1	IF_5	CALL_8
0x4001ffb	      0xe862e0ffff	                   call sym.read_4_bytes	      2071	dwarf2.c	FUNCTION_35	ELSE_1	IF_5	CALL_8
0x4002000	            0x89c5	                            mov ebp, eax	      2071	dwarf2.c	FUNCTION_35	ELSE_1	IF_5	CALL_8
0x4002002	    0x488384248000	               add qword [rsp + 0x80], 4	      2072	dwarf2.c	FUNCTION_35	ELSE_1	IF_5
0x400200b	    0x41bc08000000	                             mov r12d, 8	      2073	dwarf2.c	FUNCTION_35	ELSE_1	IF_5
0x4002011	            0xeb06	                           jmp 0x4002019	      2073	dwarf2.c	FUNCTION_35	ELSE_1	IF_5
0x4002013	    0x41bc04000000	                             mov r12d, 4	      2061	dwarf2.c	FUNCTION_35
0x4002019	    0x488bb4248000	            mov rsi, qword [rsp + 0x80] 	      2076	dwarf2.c	FUNCTION_35	IF_6
0x4002021	          0x4829f3	                            sub rbx, rsi	      2076	dwarf2.c	FUNCTION_35	IF_6
0x4002024	          0x4839eb	                            cmp rbx, rbp	      2076	dwarf2.c	FUNCTION_35	IF_6
0x4002027	            0x733b	                           jae 0x4002064	      2076	dwarf2.c	FUNCTION_35	IF_6
0x4002029	      0xba05000000	                              mov edx, 5	      2080	dwarf2.c	FUNCTION_35	IF_6	CALL_10
0x400202e	      0xbe00000000	                              mov esi, 0	      2080	dwarf2.c	FUNCTION_35	IF_6	CALL_10
0x4002033	      0xbf00000000	                              mov edi, 0	      2080	dwarf2.c	FUNCTION_35	IF_6	CALL_10
0x4002038	      0xe800000000	                          call 0x400203d	      2080	dwarf2.c	FUNCTION_35	IF_6	CALL_10
0x400203d	          0x4889da	                            mov rdx, rbx	      2078	dwarf2.c	FUNCTION_35	IF_6	CALL_9
0x4002040	          0x4889ee	                            mov rsi, rbp	      2078	dwarf2.c	FUNCTION_35	IF_6	CALL_9
0x4002043	          0x4889c7	                            mov rdi, rax	      2078	dwarf2.c	FUNCTION_35	IF_6	CALL_9
0x4002046	      0xb800000000	                              mov eax, 0	      2078	dwarf2.c	FUNCTION_35	IF_6	CALL_9
0x400204b	      0xe800000000	                          call 0x4002050	      2078	dwarf2.c	FUNCTION_35	IF_6	CALL_9
0x4002050	      0xbf11000000	                           mov edi, 0x11	      2083	dwarf2.c	FUNCTION_35	IF_6	CALL_11
0x4002055	      0xe800000000	                          call 0x400205a	      2083	dwarf2.c	FUNCTION_35	IF_6	CALL_11
0x400205a	      0xba00000000	                              mov edx, 0	      2084	dwarf2.c	FUNCTION_35	IF_6
0x400205f	      0xe9bc0c0000	                           jmp 0x4002d20	      2084	dwarf2.c	FUNCTION_35	IF_6
0x4002064	        0x4c8d2c2e	                    lea r13, [rsi + rbp]	      2087	dwarf2.c	FUNCTION_35
0x4002068	          0x4c89ea	                            mov rdx, r13	      2089	dwarf2.c	FUNCTION_35	CALL_12
0x400206b	          0x4c89ff	                            mov rdi, r15	      2089	dwarf2.c	FUNCTION_35	CALL_12
0x400206e	      0xe8cddfffff	                   call sym.read_2_bytes	      2089	dwarf2.c	FUNCTION_35	CALL_12
0x4002073	            0x89c5	                            mov ebp, eax	      2089	dwarf2.c	FUNCTION_35	CALL_12
0x4002075	          0x8d40fe	                      lea eax, [rax - 2]	      2090	dwarf2.c	FUNCTION_35	IF_7
0x4002078	        0x6683f803	                               cmp ax, 3	      2090	dwarf2.c	FUNCTION_35	IF_7
0x400207c	            0x7638	                           jbe 0x40020b6	      2090	dwarf2.c	FUNCTION_35	IF_7
0x400207e	      0xba05000000	                              mov edx, 5	      2093	dwarf2.c	FUNCTION_35	IF_7	CALL_14
0x4002083	      0xbe00000000	                              mov esi, 0	      2093	dwarf2.c	FUNCTION_35	IF_7	CALL_14
0x4002088	      0xbf00000000	                              mov edi, 0	      2093	dwarf2.c	FUNCTION_35	IF_7	CALL_14
0x400208d	      0xe800000000	                          call 0x4002092	      2093	dwarf2.c	FUNCTION_35	IF_7	CALL_14
0x4002092	           0xfb7f5	                           movzx esi, bp	      2092	dwarf2.c	FUNCTION_35	IF_7	CALL_13
0x4002095	          0x4889c7	                            mov rdi, rax	      2092	dwarf2.c	FUNCTION_35	IF_7	CALL_13
0x4002098	      0xb800000000	                              mov eax, 0	      2092	dwarf2.c	FUNCTION_35	IF_7	CALL_13
0x400209d	      0xe800000000	                          call 0x40020a2	      2092	dwarf2.c	FUNCTION_35	IF_7	CALL_13
0x40020a2	      0xbf11000000	                           mov edi, 0x11	      2094	dwarf2.c	FUNCTION_35	IF_7	CALL_15
0x40020a7	      0xe800000000	                          call 0x40020ac	      2094	dwarf2.c	FUNCTION_35	IF_7	CALL_15
0x40020ac	      0xba00000000	                              mov edx, 0	      2095	dwarf2.c	FUNCTION_35	IF_7
0x40020b1	      0xe96a0c0000	                           jmp 0x4002d20	      2095	dwarf2.c	FUNCTION_35	IF_7
0x40020b6	    0x488b84248000	            mov rax, qword [rsp + 0x80] 	      2097	dwarf2.c	FUNCTION_35
0x40020be	        0x488d5002	                      lea rdx, [rax + 2]	      2097	dwarf2.c	FUNCTION_35
0x40020c2	    0x488994248000	             mov qword [rsp + 0x80], rdx	      2097	dwarf2.c	FUNCTION_35
0x40020ca	          0x4489e3	                           mov ebx, r12d	      2099	dwarf2.c	FUNCTION_35	IF_8
0x40020cd	        0x6683fd04	                               cmp bp, 4	      2099	dwarf2.c	FUNCTION_35	IF_8
0x40020d1	     0xf87680c0000	                            ja 0x4002d3f	      2099	dwarf2.c	FUNCTION_35	IF_8
0x40020d7	          0x4819c0	                            sbb rax, rax	      2099	dwarf2.c	FUNCTION_35	IF_8
0x40020da	      0x488d440306	                lea rax, [rbx + rax + 6]	      2099	dwarf2.c	FUNCTION_35	IF_8
0x40020df	          0x4801c2	                            add rdx, rax	      2099	dwarf2.c	FUNCTION_35	IF_8
0x40020e2	          0x4939d5	                            cmp r13, rdx	      2099	dwarf2.c	FUNCTION_35	IF_8
0x40020e5	     0xf879b000000	                            ja 0x4002186	      2099	dwarf2.c	FUNCTION_35	IF_8
0x40020eb	      0xba05000000	                              mov edx, 5	      2103	dwarf2.c	FUNCTION_35	IF_8	CALL_17
0x40020f0	      0xbe00000000	                              mov esi, 0	      2103	dwarf2.c	FUNCTION_35	IF_8	CALL_17
0x40020f5	      0xbf00000000	                              mov edi, 0	      2103	dwarf2.c	FUNCTION_35	IF_8	CALL_17
0x40020fa	      0xe800000000	                          call 0x40020ff	      2103	dwarf2.c	FUNCTION_35	IF_8	CALL_17
0x40020ff	          0x4889c7	                            mov rdi, rax	      2102	dwarf2.c	FUNCTION_35	IF_8	CALL_16
0x4002102	      0xb800000000	                              mov eax, 0	      2102	dwarf2.c	FUNCTION_35	IF_8	CALL_16
0x4002107	      0xe800000000	                          call 0x400210c	      2102	dwarf2.c	FUNCTION_35	IF_8	CALL_16
0x400210c	      0xbf11000000	                           mov edi, 0x11	      2104	dwarf2.c	FUNCTION_35	IF_8	CALL_18
0x4002111	      0xe800000000	                          call 0x4002116	      2104	dwarf2.c	FUNCTION_35	IF_8	CALL_18
0x4002116	      0xba00000000	                              mov edx, 0	      2105	dwarf2.c	FUNCTION_35	IF_8
0x400211b	      0xe9000c0000	                           jmp 0x4002d20	      2105	dwarf2.c	FUNCTION_35	IF_8
0x4002120	        0x488d5003	                      lea rdx, [rax + 3]	      2114	dwarf2.c	FUNCTION_35	IF_9
0x4002124	    0x488994248000	             mov qword [rsp + 0x80], rdx	      2114	dwarf2.c	FUNCTION_35	IF_9
0x400212c	        0x488d5004	                      lea rdx, [rax + 4]	       588	dwarf2.c	FUNCTION_6	IF_1
0x4002130	          0x4939d5	                            cmp r13, rdx	       588	dwarf2.c	FUNCTION_6	IF_1
0x4002133	     0xf82190c0000	                            jb 0x4002d52	       588	dwarf2.c	FUNCTION_6	IF_1
0x4002139	         0xfb64003	               movzx eax, byte [rax + 3]	       590	dwarf2.c	FUNCTION_6	CALL_1
0x400213d	        0x89442408	                mov dword [rsp + 8], eax	       590	dwarf2.c	FUNCTION_6	CALL_1
0x4002141	    0x488994248000	             mov qword [rsp + 0x80], rdx	      2117	dwarf2.c	FUNCTION_35	IF_9
0x4002149	            0x85c0	                           test eax, eax	      2118	dwarf2.c	FUNCTION_35	IF_9	IF_10
0x400214b	            0x7439	                            je 0x4002186	      2118	dwarf2.c	FUNCTION_35	IF_9	IF_10
0x400214d	      0xba05000000	                              mov edx, 5	      2121	dwarf2.c	FUNCTION_35	IF_9	IF_10	CALL_22
0x4002152	      0xbe00000000	                              mov esi, 0	      2121	dwarf2.c	FUNCTION_35	IF_9	IF_10	CALL_22
0x4002157	      0xbf00000000	                              mov edi, 0	      2121	dwarf2.c	FUNCTION_35	IF_9	IF_10	CALL_22
0x400215c	      0xe800000000	                          call 0x4002161	      2121	dwarf2.c	FUNCTION_35	IF_9	IF_10	CALL_22
0x4002161	        0x8b742408	                mov esi, dword [rsp + 8]	      2120	dwarf2.c	FUNCTION_35	IF_9	IF_10	CALL_21
0x4002165	          0x4889c7	                            mov rdi, rax	      2120	dwarf2.c	FUNCTION_35	IF_9	IF_10	CALL_21
0x4002168	      0xb800000000	                              mov eax, 0	      2120	dwarf2.c	FUNCTION_35	IF_9	IF_10	CALL_21
0x400216d	      0xe800000000	                          call 0x4002172	      2120	dwarf2.c	FUNCTION_35	IF_9	IF_10	CALL_21
0x4002172	      0xbf11000000	                           mov edi, 0x11	      2123	dwarf2.c	FUNCTION_35	IF_9	IF_10	CALL_23
0x4002177	      0xe800000000	                          call 0x400217c	      2123	dwarf2.c	FUNCTION_35	IF_9	IF_10	CALL_23
0x400217c	      0xba00000000	                              mov edx, 0	      2124	dwarf2.c	FUNCTION_35	IF_9	IF_10
0x4002181	      0xe99a0b0000	                           jmp 0x4002d20	      2124	dwarf2.c	FUNCTION_35	IF_9	IF_10
0x4002186	        0x4183fc04	                             cmp r12d, 4	      2128	dwarf2.c	FUNCTION_35	IF_11
0x400218a	            0x7515	                           jne 0x40021a1	      2128	dwarf2.c	FUNCTION_35	IF_11
0x400218c	          0x4c89ea	                            mov rdx, r13	      2129	dwarf2.c	FUNCTION_35	CALL_24
0x400218f	    0x488bb4248000	            mov rsi, qword [rsp + 0x80] 	      2129	dwarf2.c	FUNCTION_35	CALL_24
0x4002197	          0x4c89ff	                            mov rdi, r15	      2129	dwarf2.c	FUNCTION_35	CALL_24
0x400219a	      0xe8c3deffff	                   call sym.read_4_bytes	      2129	dwarf2.c	FUNCTION_35	CALL_24
0x400219f	            0xeb13	                           jmp 0x40021b4	      2129	dwarf2.c	FUNCTION_35	CALL_24
0x40021a1	          0x4c89ea	                            mov rdx, r13	      2131	dwarf2.c	FUNCTION_35	CALL_25
0x40021a4	    0x488bb4248000	            mov rsi, qword [rsp + 0x80] 	      2131	dwarf2.c	FUNCTION_35	CALL_25
0x40021ac	          0x4c89ff	                            mov rdi, r15	      2131	dwarf2.c	FUNCTION_35	CALL_25
0x40021af	      0xe8d0deffff	                   call sym.read_8_bytes	      2131	dwarf2.c	FUNCTION_35	CALL_25
0x40021b4	    0x48039c248000	             add rbx, qword [rsp + 0x80]	      2132	dwarf2.c	FUNCTION_35
0x40021bc	    0x48899c248000	             mov qword [rsp + 0x80], rbx	      2132	dwarf2.c	FUNCTION_35
0x40021c4	        0x488d4301	                      lea rax, [rbx + 1]	       588	dwarf2.c	FUNCTION_6	IF_1
0x40021c8	    0xc74424240000	               mov dword [rsp + 0x24], 0	       589	dwarf2.c	FUNCTION_6	IF_1
0x40021d0	          0x4939c5	                            cmp r13, rax	       588	dwarf2.c	FUNCTION_6	IF_1
0x40021d3	            0x7207	                            jb 0x40021dc	       588	dwarf2.c	FUNCTION_6	IF_1
0x40021d5	           0xfb63b	                   movzx edi, byte [rbx]	       590	dwarf2.c	FUNCTION_6	CALL_1
0x40021d8	        0x897c2424	             mov dword [rsp + 0x24], edi	       590	dwarf2.c	FUNCTION_6	CALL_1
0x40021dc	    0x488984248000	             mov qword [rsp + 0x80], rax	      2135	dwarf2.c	FUNCTION_35
0x40021e4	        0x6683fd03	                               cmp bp, 3	      2137	dwarf2.c	FUNCTION_35	IF_12
0x40021e8	            0x7656	                           jbe 0x4002240	      2137	dwarf2.c	FUNCTION_35	IF_12
0x40021ea	        0x488d4302	                      lea rax, [rbx + 2]	       588	dwarf2.c	FUNCTION_6	IF_1
0x40021ee	          0x4939c5	                            cmp r13, rax	       588	dwarf2.c	FUNCTION_6	IF_1
0x40021f1	     0xf82d90b0000	                            jb 0x4002dd0	       588	dwarf2.c	FUNCTION_6	IF_1
0x40021f7	         0xfb65b01	               movzx ebx, byte [rbx + 1]	       590	dwarf2.c	FUNCTION_6	CALL_1
0x40021fb	        0x885c2423	               mov byte [rsp + 0x23], bl	       590	dwarf2.c	FUNCTION_6	CALL_1
0x40021ff	    0x488984248000	             mov qword [rsp + 0x80], rax	      2140	dwarf2.c	FUNCTION_35	IF_12
0x4002207	            0x84db	                             test bl, bl	      2145	dwarf2.c	FUNCTION_35	ELSE_3	IF_13
0x4002209	            0x753a	                           jne 0x4002245	      2145	dwarf2.c	FUNCTION_35	ELSE_3	IF_13
0x400220b	      0xba05000000	                              mov edx, 5	      2148	dwarf2.c	FUNCTION_35	ELSE_3	IF_13	CALL_29
0x4002210	      0xbe00000000	                              mov esi, 0	      2148	dwarf2.c	FUNCTION_35	ELSE_3	IF_13	CALL_29
0x4002215	      0xbf00000000	                              mov edi, 0	      2148	dwarf2.c	FUNCTION_35	ELSE_3	IF_13	CALL_29
0x400221a	      0xe800000000	                          call 0x400221f	      2148	dwarf2.c	FUNCTION_35	ELSE_3	IF_13	CALL_29
0x400221f	          0x4889c7	                            mov rdi, rax	      2147	dwarf2.c	FUNCTION_35	ELSE_3	IF_13	CALL_28
0x4002222	      0xb800000000	                              mov eax, 0	      2147	dwarf2.c	FUNCTION_35	ELSE_3	IF_13	CALL_28
0x4002227	      0xe800000000	                          call 0x400222c	      2147	dwarf2.c	FUNCTION_35	ELSE_3	IF_13	CALL_28
0x400222c	      0xbf11000000	                           mov edi, 0x11	      2149	dwarf2.c	FUNCTION_35	ELSE_3	IF_13	CALL_30
0x4002231	      0xe800000000	                          call 0x4002236	      2149	dwarf2.c	FUNCTION_35	ELSE_3	IF_13	CALL_30
0x4002236	      0xba00000000	                              mov edx, 0	      2150	dwarf2.c	FUNCTION_35	ELSE_3	IF_13
0x400223b	      0xe9e00a0000	                           jmp 0x4002d20	      2150	dwarf2.c	FUNCTION_35	ELSE_3	IF_13
0x4002240	      0xc644242301	                mov byte [rsp + 0x23], 1	      2143	dwarf2.c	FUNCTION_35	ELSE_3
0x4002245	    0x488b84248000	            mov rax, qword [rsp + 0x80] 	      2153	dwarf2.c	FUNCTION_35	CALL_31
0x400224d	        0x488d5001	                      lea rdx, [rax + 1]	      2154	dwarf2.c	FUNCTION_35
0x4002251	    0x488994248000	             mov qword [rsp + 0x80], rdx	      2154	dwarf2.c	FUNCTION_35
0x4002259	        0x488d4802	                      lea rcx, [rax + 2]	       596	dwarf2.c	FUNCTION_7	IF_1
0x400225d	    0xc74424300000	               mov dword [rsp + 0x30], 0	       597	dwarf2.c	FUNCTION_7	IF_1
0x4002265	          0x4939cd	                            cmp r13, rcx	       596	dwarf2.c	FUNCTION_7	IF_1
0x4002268	            0x7211	                            jb 0x400227b	       596	dwarf2.c	FUNCTION_7	IF_1
0x400226a	         0xfb65801	               movzx ebx, byte [rax + 1]	       598	dwarf2.c	FUNCTION_7	CALL_1
0x400226e	          0x8d5380	                   lea edx, [rbx - 0x80]	       598	dwarf2.c	FUNCTION_7	CALL_1
0x4002271	           0xfb6d2	                           movzx edx, dl	       598	dwarf2.c	FUNCTION_7	CALL_1
0x4002274	          0x8d5a80	                   lea ebx, [rdx - 0x80]	       598	dwarf2.c	FUNCTION_7	CALL_1
0x4002277	        0x895c2430	             mov dword [rsp + 0x30], ebx	       598	dwarf2.c	FUNCTION_7	CALL_1
0x400227b	    0x48898c248000	             mov qword [rsp + 0x80], rcx	      2157	dwarf2.c	FUNCTION_35
0x4002283	        0x488d4803	                      lea rcx, [rax + 3]	       588	dwarf2.c	FUNCTION_6	IF_1
0x4002287	          0x4939cd	                            cmp r13, rcx	       588	dwarf2.c	FUNCTION_6	IF_1
0x400228a	     0xf825a0b0000	                            jb 0x4002dea	       588	dwarf2.c	FUNCTION_6	IF_1
0x4002290	         0xfb65802	               movzx ebx, byte [rax + 2]	       590	dwarf2.c	FUNCTION_6	CALL_1
0x4002294	        0x895c244c	             mov dword [rsp + 0x4c], ebx	       590	dwarf2.c	FUNCTION_6	CALL_1
0x4002298	    0x48898c248000	             mov qword [rsp + 0x80], rcx	      2160	dwarf2.c	FUNCTION_35
0x40022a0	        0x488d5004	                      lea rdx, [rax + 4]	       588	dwarf2.c	FUNCTION_6	IF_1
0x40022a4	          0x4939d5	                            cmp r13, rdx	       588	dwarf2.c	FUNCTION_6	IF_1
0x40022a7	     0xf82d90a0000	                            jb 0x4002d86	       588	dwarf2.c	FUNCTION_6	IF_1
0x40022ad	         0xfb64003	               movzx eax, byte [rax + 3]	       590	dwarf2.c	FUNCTION_6	CALL_1
0x40022b1	        0x88442408	                  mov byte [rsp + 8], al	       590	dwarf2.c	FUNCTION_6	CALL_1
0x40022b5	    0x488994248000	             mov qword [rsp + 0x80], rdx	      2163	dwarf2.c	FUNCTION_35
0x40022bd	           0xfb6f0	                           movzx esi, al	      2165	dwarf2.c	FUNCTION_35	IF_14
0x40022c0	      0x488d4432ff	                lea rax, [rdx + rsi - 1]	      2165	dwarf2.c	FUNCTION_35	IF_14
0x40022c5	          0x4939c5	                            cmp r13, rax	      2165	dwarf2.c	FUNCTION_35	IF_14
0x40022c8	            0x7735	                            ja 0x40022ff	      2165	dwarf2.c	FUNCTION_35	IF_14
0x40022ca	      0xba05000000	                              mov edx, 5	      2167	dwarf2.c	FUNCTION_35	IF_14	CALL_36
0x40022cf	      0xbe00000000	                              mov esi, 0	      2167	dwarf2.c	FUNCTION_35	IF_14	CALL_36
0x40022d4	      0xbf00000000	                              mov edi, 0	      2167	dwarf2.c	FUNCTION_35	IF_14	CALL_36
0x40022d9	      0xe800000000	                          call 0x40022de	      2167	dwarf2.c	FUNCTION_35	IF_14	CALL_36
0x40022de	          0x4889c7	                            mov rdi, rax	      2167	dwarf2.c	FUNCTION_35	IF_14	CALL_36
0x40022e1	      0xb800000000	                              mov eax, 0	      2167	dwarf2.c	FUNCTION_35	IF_14	CALL_36
0x40022e6	      0xe800000000	                          call 0x40022eb	      2167	dwarf2.c	FUNCTION_35	IF_14	CALL_36
0x40022eb	      0xbf11000000	                           mov edi, 0x11	      2168	dwarf2.c	FUNCTION_35	IF_14	CALL_37
0x40022f0	      0xe800000000	                          call 0x40022f5	      2168	dwarf2.c	FUNCTION_35	IF_14	CALL_37
0x40022f5	      0xba00000000	                              mov edx, 0	      2169	dwarf2.c	FUNCTION_35	IF_14
0x40022fa	      0xe9210a0000	                           jmp 0x4002d20	      2169	dwarf2.c	FUNCTION_35	IF_14
0x40022ff	          0x4c89ff	                            mov rdi, r15	      2173	dwarf2.c	FUNCTION_35	CALL_38
0x4002302	      0xe800000000	                          call 0x4002307	      2173	dwarf2.c	FUNCTION_35	CALL_38
0x4002307	      0x4889442450	             mov qword [rsp + 0x50], rax	      2173	dwarf2.c	FUNCTION_35	CALL_38
0x400230c	          0xc60001	                       mov byte [rax], 1	      2175	dwarf2.c	FUNCTION_35
0x400230f	       0xfb65c2408	               movzx ebx, byte [rsp + 8]	      2175	dwarf2.c	FUNCTION_35
0x4002314	            0x89d9	                            mov ecx, ebx	      2175	dwarf2.c	FUNCTION_35
0x4002316	        0x895c2410	             mov dword [rsp + 0x10], ebx	      2175	dwarf2.c	FUNCTION_35
0x400231a	          0x83fb01	                              cmp ebx, 1	      2177	dwarf2.c	FUNCTION_35	FOR_1
0x400231d	            0x763c	                           jbe 0x400235b	      2177	dwarf2.c	FUNCTION_35	FOR_1
0x400231f	          0x4889c3	                            mov rbx, rax	      2177	dwarf2.c	FUNCTION_35	FOR_1
0x4002322	        0x4883c001	                              add rax, 1	      2177	dwarf2.c	FUNCTION_35	FOR_1
0x4002326	          0x8d51fe	                      lea edx, [rcx - 2]	      2177	dwarf2.c	FUNCTION_35	FOR_1
0x4002329	      0x488d7c1302	                lea rdi, [rbx + rdx + 2]	      2177	dwarf2.c	FUNCTION_35	FOR_1
0x400232e	    0x488b8c248000	            mov rcx, qword [rsp + 0x80] 	      2179	dwarf2.c	FUNCTION_35	FOR_1	CALL_39
0x4002336	        0x488d7101	                      lea rsi, [rcx + 1]	       588	dwarf2.c	FUNCTION_6	IF_1
0x400233a	      0xba00000000	                              mov edx, 0	       589	dwarf2.c	FUNCTION_6	IF_1
0x400233f	          0x4939f5	                            cmp r13, rsi	       588	dwarf2.c	FUNCTION_6	IF_1
0x4002342	            0x7203	                            jb 0x4002347	       588	dwarf2.c	FUNCTION_6	IF_1
0x4002344	           0xfb611	                   movzx edx, byte [rcx]	       590	dwarf2.c	FUNCTION_6	CALL_1
0x4002347	            0x8810	                      mov byte [rax], dl	      2179	dwarf2.c	FUNCTION_35	FOR_1	CALL_39
0x4002349	    0x488384248000	               add qword [rsp + 0x80], 1	      2180	dwarf2.c	FUNCTION_35	FOR_1
0x4002352	        0x4883c001	                              add rax, 1	      2180	dwarf2.c	FUNCTION_35	FOR_1
0x4002356	          0x4839f8	                            cmp rax, rdi	      2177	dwarf2.c	FUNCTION_35	FOR_1
0x4002359	            0x75d3	                           jne 0x400232e	      2177	dwarf2.c	FUNCTION_35	FOR_1
0x400235b	        0x6683fd04	                               cmp bp, 4	      2183	dwarf2.c	FUNCTION_35	IF_15
0x400235f	            0x7670	                           jbe 0x40023d1	      2183	dwarf2.c	FUNCTION_35	IF_15
0x4002361	    0x41b800000000	                              mov r8d, 0	      2186	dwarf2.c	FUNCTION_35	IF_15	IF_16	CALL_40
0x4002367	          0x4c89f1	                            mov rcx, r14	      2186	dwarf2.c	FUNCTION_35	IF_15	IF_16	CALL_40
0x400236a	          0x4c89ea	                            mov rdx, r13	      2186	dwarf2.c	FUNCTION_35	IF_15	IF_16	CALL_40
0x400236d	    0x488db4248000	                   lea rsi, [rsp + 0x80]	      2186	dwarf2.c	FUNCTION_35	IF_15	IF_16	CALL_40
0x4002375	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      2186	dwarf2.c	FUNCTION_35	IF_15	IF_16	CALL_40
0x400237a	      0xe836f7ffff	         call sym.read_formatted_entries	      2186	dwarf2.c	FUNCTION_35	IF_15	IF_16	CALL_40
0x400237f	            0x85c0	                           test eax, eax	      2186	dwarf2.c	FUNCTION_35	IF_15	IF_16	CALL_40
0x4002381	     0xf8489050000	                            je 0x4002910	      2186	dwarf2.c	FUNCTION_35	IF_15	IF_16	CALL_40
0x4002387	    0x41b800000000	                              mov r8d, 0	      2191	dwarf2.c	FUNCTION_35	IF_15	IF_17	CALL_41
0x400238d	          0x4c89f1	                            mov rcx, r14	      2191	dwarf2.c	FUNCTION_35	IF_15	IF_17	CALL_41
0x4002390	          0x4c89ea	                            mov rdx, r13	      2191	dwarf2.c	FUNCTION_35	IF_15	IF_17	CALL_41
0x4002393	    0x488db4248000	                   lea rsi, [rsp + 0x80]	      2191	dwarf2.c	FUNCTION_35	IF_15	IF_17	CALL_41
0x400239b	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      2191	dwarf2.c	FUNCTION_35	IF_15	IF_17	CALL_41
0x40023a0	      0xe810f7ffff	         call sym.read_formatted_entries	      2191	dwarf2.c	FUNCTION_35	IF_15	IF_17	CALL_41
0x40023a5	            0x85c0	                           test eax, eax	      2191	dwarf2.c	FUNCTION_35	IF_15	IF_17	CALL_41
0x40023a7	     0xf8463050000	                            je 0x4002910	      2191	dwarf2.c	FUNCTION_35	IF_15	IF_17	CALL_41
0x40023ad	      0xe925010000	                           jmp 0x40024d7	      2191	dwarf2.c	FUNCTION_35	IF_15	IF_17	CALL_41
0x40023b2	        0x8b54247c	            mov edx, dword [rsp + 0x7c] 	      2200	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_1
0x40023b6	    0x480194248000	            add qword [rsp + 0x80], rdx 	      2200	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_1
0x40023be	          0x4889c6	                            mov rsi, rax	      2202	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_1	IF_18	CALL_43
0x40023c1	          0x4c89f7	                            mov rdi, r14	      2202	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_1	IF_18	CALL_43
0x40023c4	      0xe878e4ffff	      call sym.line_info_add_include_dir	      2202	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_1	IF_18	CALL_43
0x40023c9	            0x85c0	                           test eax, eax	      2202	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_1	IF_18	CALL_43
0x40023cb	     0xf843f050000	                            je 0x4002910	      2202	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_1	IF_18	CALL_43
0x40023d1	      0x488d4c247c	                   lea rcx, [rsp + 0x7c]	      2198	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_1	CALL_42
0x40023d6	          0x4c89ea	                            mov rdx, r13	      2198	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_1	CALL_42
0x40023d9	    0x488bb4248000	            mov rsi, qword [rsp + 0x80] 	      2198	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_1	CALL_42
0x40023e1	          0x4c89ff	                            mov rdi, r15	      2198	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_1	CALL_42
0x40023e4	      0xe8bddcffff	                    call sym.read_string	      2198	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_1	CALL_42
0x40023e9	          0x4885c0	                           test rax, rax	      2198	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_1	CALL_42
0x40023ec	            0x75c4	                           jne 0x40023b2	      2198	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_1	CALL_42
0x40023ee	        0x8b44247c	            mov eax, dword [rsp + 0x7c] 	      2206	dwarf2.c	FUNCTION_35	ELSE_4
0x40023f2	    0x480184248000	            add qword [rsp + 0x80], rax 	      2206	dwarf2.c	FUNCTION_35	ELSE_4
0x40023fa	      0xe9a8000000	                           jmp 0x40024a7	      2209	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_44
0x40023ff	        0x8b74247c	            mov esi, dword [rsp + 0x7c] 	      2213	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2
0x4002403	    0x4803b4248000	             add rsi, qword [rsp + 0x80]	      2213	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2
0x400240b	    0x4889b4248000	             mov qword [rsp + 0x80], rsi	      2213	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2
0x4002413	          0x4d89e8	                             mov r8, r13	      2215	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_45
0x4002416	      0xb900000000	                              mov ecx, 0	      2215	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_45
0x400241b	      0x488d54247c	                   lea rdx, [rsp + 0x7c]	      2215	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_45
0x4002420	          0x4c89ff	                            mov rdi, r15	      2215	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_45
0x4002423	      0xe800000000	                          call 0x4002428	      2215	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_45
0x4002428	          0x4889c5	                            mov rbp, rax	      2215	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_45
0x400242b	        0x8b74247c	            mov esi, dword [rsp + 0x7c] 	      2216	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2
0x400242f	    0x4803b4248000	             add rsi, qword [rsp + 0x80]	      2216	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2
0x4002437	    0x4889b4248000	             mov qword [rsp + 0x80], rsi	      2216	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2
0x400243f	          0x4d89e8	                             mov r8, r13	      2217	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_46
0x4002442	      0xb900000000	                              mov ecx, 0	      2217	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_46
0x4002447	      0x488d54247c	                   lea rdx, [rsp + 0x7c]	      2217	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_46
0x400244c	          0x4c89ff	                            mov rdi, r15	      2217	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_46
0x400244f	      0xe800000000	                          call 0x4002454	      2217	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_46
0x4002454	          0x4989c4	                            mov r12, rax	      2217	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_46
0x4002457	        0x8b74247c	            mov esi, dword [rsp + 0x7c] 	      2218	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2
0x400245b	    0x4803b4248000	             add rsi, qword [rsp + 0x80]	      2218	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2
0x4002463	    0x4889b4248000	             mov qword [rsp + 0x80], rsi	      2218	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2
0x400246b	          0x4d89e8	                             mov r8, r13	      2219	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_47
0x400246e	      0xb900000000	                              mov ecx, 0	      2219	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_47
0x4002473	      0x488d54247c	                   lea rdx, [rsp + 0x7c]	      2219	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_47
0x4002478	          0x4c89ff	                            mov rdi, r15	      2219	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_47
0x400247b	      0xe800000000	                          call 0x4002480	      2219	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_47
0x4002480	        0x8b54247c	            mov edx, dword [rsp + 0x7c] 	      2220	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2
0x4002484	    0x480194248000	            add qword [rsp + 0x80], rdx 	      2220	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2
0x400248c	          0x4189c0	                            mov r8d, eax	      2222	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	IF_19	CALL_48
0x400248f	          0x4489e1	                           mov ecx, r12d	      2222	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	IF_19	CALL_48
0x4002492	            0x89ea	                            mov edx, ebp	      2222	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	IF_19	CALL_48
0x4002494	          0x4889de	                            mov rsi, rbx	      2222	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	IF_19	CALL_48
0x4002497	          0x4c89f7	                            mov rdi, r14	      2222	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	IF_19	CALL_48
0x400249a	      0xe811e4ffff	        call sym.line_info_add_file_name	      2222	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	IF_19	CALL_48
0x400249f	            0x85c0	                           test eax, eax	      2222	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	IF_19	CALL_48
0x40024a1	     0xf8469040000	                            je 0x4002910	      2222	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	IF_19	CALL_48
0x40024a7	      0x488d4c247c	                   lea rcx, [rsp + 0x7c]	      2209	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_44
0x40024ac	          0x4c89ea	                            mov rdx, r13	      2209	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_44
0x40024af	    0x488bb4248000	            mov rsi, qword [rsp + 0x80] 	      2209	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_44
0x40024b7	          0x4c89ff	                            mov rdi, r15	      2209	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_44
0x40024ba	      0xe8e7dbffff	                    call sym.read_string	      2209	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_44
0x40024bf	          0x4889c3	                            mov rbx, rax	      2209	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_44
0x40024c2	          0x4885c0	                           test rax, rax	      2209	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_44
0x40024c5	     0xf8534ffffff	                           jne 0x40023ff	      2209	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_44
0x40024cb	        0x8b44247c	            mov eax, dword [rsp + 0x7c] 	      2226	dwarf2.c	FUNCTION_35	ELSE_4
0x40024cf	    0x480184248000	            add qword [rsp + 0x80], rax 	      2226	dwarf2.c	FUNCTION_35	ELSE_4
0x40024d7	       0xfb6442424	           movzx eax, byte [rsp + 0x24] 	      2134	dwarf2.c	FUNCTION_35	CALL_26
0x40024dc	        0x8844246e	               mov byte [rsp + 0x6e], al	      2134	dwarf2.c	FUNCTION_35	CALL_26
0x40024e0	       0xfb644244c	           movzx eax, byte [rsp + 0x4c] 	      2159	dwarf2.c	FUNCTION_35	CALL_33
0x40024e5	        0x8844246f	               mov byte [rsp + 0x6f], al	      2159	dwarf2.c	FUNCTION_35	CALL_33
0x40024e9	       0xfb6442423	           movzx eax, byte [rsp + 0x23] 	      2268	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	ELSE_5
0x40024ee	        0x89442448	             mov dword [rsp + 0x48], eax	      2268	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	ELSE_5
0x40024f2	      0xb8ff000000	                           mov eax, 0xff	      2414	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x40024f7	        0x2b442410	             sub eax, dword [rsp + 0x10]	      2414	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x40024fb	        0x89442468	             mov dword [rsp + 0x68], eax	      2414	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x40024ff	      0x4c897c2440	             mov qword [rsp + 0x40], r15	      2414	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x4002504	      0x4c89742428	             mov qword [rsp + 0x28], r14	      2414	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x4002509	          0x4d89ef	                            mov r15, r13	      2414	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x400250c	      0xe971060000	                           jmp 0x4002b82	      2414	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x4002511	    0x48c744241800	               mov qword [rsp + 0x18], 0	      2235	dwarf2.c	FUNCTION_35	WHILE_3	CALL_49
0x400251a	      0x488b5c2428	            mov rbx, qword [rsp + 0x28] 	      2235	dwarf2.c	FUNCTION_35	WHILE_3	CALL_49
0x400251f	        0x837b0800	                  cmp dword [rbx + 8], 0	      2235	dwarf2.c	FUNCTION_35	WHILE_3	CALL_49
0x4002523	            0x7423	                            je 0x4002548	      2235	dwarf2.c	FUNCTION_35	WHILE_3	CALL_49
0x4002525	      0xbe01000000	                              mov esi, 1	      2235	dwarf2.c	FUNCTION_35	WHILE_3	CALL_49
0x400252a	          0x4889df	                            mov rdi, rbx	      2235	dwarf2.c	FUNCTION_35	WHILE_3	CALL_49
0x400252d	      0xe8a6e8ffff	                call sym.concat_filename	      2235	dwarf2.c	FUNCTION_35	WHILE_3	CALL_49
0x4002532	      0x4889442418	             mov qword [rsp + 0x18], rax	      2235	dwarf2.c	FUNCTION_35	WHILE_3	CALL_49
0x4002537	    0x488b84248000	            mov rax, qword [rsp + 0x80] 	      2251	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4
0x400253f	          0x4939c7	                            cmp r15, rax	      2251	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4
0x4002542	     0xf8628060000	                           jbe 0x4002b70	      2251	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4
0x4002548	      0xbd00000000	                              mov ebp, 0	      2235	dwarf2.c	FUNCTION_35	WHILE_3	CALL_49
0x400254d	    0x49c7c5ffffff	             mov r13, 0xffffffffffffffff	      2235	dwarf2.c	FUNCTION_35	WHILE_3	CALL_49
0x4002554	    0xc74424140000	               mov dword [rsp + 0x14], 0	      2235	dwarf2.c	FUNCTION_35	WHILE_3	CALL_49
0x400255c	    0xc74424340000	               mov dword [rsp + 0x34], 0	      2235	dwarf2.c	FUNCTION_35	WHILE_3	CALL_49
0x4002564	    0xc74424100100	               mov dword [rsp + 0x10], 1	      2235	dwarf2.c	FUNCTION_35	WHILE_3	CALL_49
0x400256c	      0xc644242200	                mov byte [rsp + 0x22], 0	      2235	dwarf2.c	FUNCTION_35	WHILE_3	CALL_49
0x4002571	      0xbb00000000	                              mov ebx, 0	      2235	dwarf2.c	FUNCTION_35	WHILE_3	CALL_49
0x4002576	        0x488d7001	                      lea rsi, [rax + 1]	       588	dwarf2.c	FUNCTION_6	IF_1
0x400257a	          0x4939f7	                            cmp r15, rsi	       588	dwarf2.c	FUNCTION_6	IF_1
0x400257d	     0xf8216080000	                            jb 0x4002d99	       588	dwarf2.c	FUNCTION_6	IF_1
0x4002583	           0xfb600	                   movzx eax, byte [rax]	       590	dwarf2.c	FUNCTION_6	CALL_1
0x4002586	    0x4889b4248000	             mov qword [rsp + 0x80], rsi	      2254	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4
0x400258e	        0x3a442408	                  cmp al, byte [rsp + 8]	      2256	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20
0x4002592	     0xf82b2000000	                            jb 0x400264a	      2256	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20
0x4002598	        0x2a442408	                  sub al, byte [rsp + 8]	      2259	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20
0x400259c	          0x4189c4	                           mov r12d, eax	      2259	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20
0x400259f	          0x4584f6	                         test r14b, r14b	      2260	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_21
0x40025a2	     0xf8435030000	                            je 0x40028dd	      2260	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_21
0x40025a8	      0x807c242301	                cmp byte [rsp + 0x23], 1	      2262	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_22
0x40025ad	            0x7515	                           jne 0x40025c4	      2262	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_22
0x40025af	           0xfb6c0	                           movzx eax, al	      2263	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_22
0x40025b2	          0x41f6f6	                                div r14b	      2263	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_22
0x40025b5	           0xfb6c0	                           movzx eax, al	      2263	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_22
0x40025b8	       0xfaf442424	            imul eax, dword [rsp + 0x24]	      2263	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_22
0x40025bd	            0x4898	                                    cdqe	      2263	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_22
0x40025bf	          0x4801c3	                            add rbx, rax	      2263	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_22
0x40025c2	            0xeb23	                           jmp 0x40025e7	      2263	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_22
0x40025c4	           0xfb6c0	                           movzx eax, al	      2267	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	ELSE_5
0x40025c7	          0x41f6f6	                                div r14b	      2267	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	ELSE_5
0x40025ca	           0xfb6c0	                           movzx eax, al	      2267	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	ELSE_5
0x40025cd	       0xfb6542422	           movzx edx, byte [rsp + 0x22] 	      2267	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	ELSE_5
0x40025d2	             0x1d0	                            add eax, edx	      2267	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	ELSE_5
0x40025d4	              0x99	                                     cdq	      2267	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	ELSE_5
0x40025d5	        0xf77c2448	                 idiv dword [rsp + 0x48]	      2267	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	ELSE_5
0x40025d9	       0xfaf442424	            imul eax, dword [rsp + 0x24]	      2267	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	ELSE_5
0x40025de	            0x4898	                                    cdqe	      2267	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	ELSE_5
0x40025e0	          0x4801c3	                            add rbx, rax	      2267	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	ELSE_5
0x40025e3	        0x88542422	               mov byte [rsp + 0x22], dl	      2270	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	ELSE_5
0x40025e7	        0x410fb6c4	                         movzx eax, r12b	      2273	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20
0x40025eb	          0x41f6f6	                                div r14b	      2273	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20
0x40025ee	           0xfb6c4	                           movzx eax, ah	      2273	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20
0x40025f1	         0x3442430	             add eax, dword [rsp + 0x30]	      2273	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20
0x40025f5	         0x1442410	             add dword [rsp + 0x10], eax	      2273	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20
0x40025f9	        0x8b4c2410	            mov ecx, dword [rsp + 0x10] 	      2273	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20
0x40025fd	       0xfb6542422	           movzx edx, byte [rsp + 0x22] 	      2275	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_23	CALL_51
0x4002602	            0x6a00	                                  push 0	      2275	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_23	CALL_51
0x4002604	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	      2275	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_23	CALL_51
0x4002608	              0x50	                                push rax	      2275	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_23	CALL_51
0x4002609	      0x448b4c2444	            mov r9d, dword [rsp + 0x44] 	      2275	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_23	CALL_51
0x400260e	          0x4189c8	                            mov r8d, ecx	      2275	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_23	CALL_51
0x4002611	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      2275	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_23	CALL_51
0x4002616	          0x4889de	                            mov rsi, rbx	      2275	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_23	CALL_51
0x4002619	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      2275	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_23	CALL_51
0x400261e	      0xe83de5ffff	                  call sym.add_line_info	      2275	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_23	CALL_51
0x4002623	        0x4883c410	                           add rsp, 0x10	      2275	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_23	CALL_51
0x4002627	            0x85c0	                           test eax, eax	      2275	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_23	CALL_51
0x4002629	     0xf84b5020000	                            je 0x40028e4	      2275	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_23	CALL_51
0x400262f	          0x4939dd	                            cmp r13, rbx	      2275	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_23	CALL_51
0x4002632	        0x4c0f47eb	                          cmova r13, rbx	      2275	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_23	CALL_51
0x4002636	          0x4839dd	                            cmp rbp, rbx	      2275	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_23	CALL_51
0x4002639	        0x480f42eb	                          cmovb rbp, rbx	      2275	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_23	CALL_51
0x400263d	    0xc74424140000	               mov dword [rsp + 0x14], 0	      2278	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20
0x4002645	      0xe915050000	                           jmp 0x4002b5f	      2278	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20
0x400264a	            0x3c09	                               cmp al, 9	      2284	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x400264c	            0x770a	                            ja 0x4002658	      2284	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x400264e	           0xfb6c0	                           movzx eax, al	      2284	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4002651	    0xff24c5000000	                       jmp qword [rax*8]	      2284	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4002658	        0x440fb6e0	                          movzx r12d, al	      2426	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x400265c	      0x4c03642450	             add r12, qword [rsp + 0x50]	      2426	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x4002661	          0x4c89e0	                            mov rax, r12	      2426	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x4002664	    0x41bc00000000	                             mov r12d, 0	      2426	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x400266a	          0x803800	                       cmp byte [rax], 0	      2426	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x400266d	     0xf8599040000	                           jne 0x4002b0c	      2426	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x4002673	      0xe9e7040000	                           jmp 0x4002b5f	      2426	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x4002678	          0x4d89f8	                             mov r8, r15	      2287	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_52
0x400267b	      0xb900000000	                              mov ecx, 0	      2287	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_52
0x4002680	      0x488d54247c	                   lea rdx, [rsp + 0x7c]	      2287	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_52
0x4002685	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      2287	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_52
0x400268a	      0xe800000000	                          call 0x400268f	      2287	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_52
0x400268f	        0x8b54247c	            mov edx, dword [rsp + 0x7c] 	      2289	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4002693	    0x480394248000	             add rdx, qword [rsp + 0x80]	      2289	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x400269b	    0x488994248000	             mov qword [rsp + 0x80], rdx	      2289	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x40026a3	        0x488d7201	                      lea rsi, [rdx + 1]	       588	dwarf2.c	FUNCTION_6	IF_1
0x40026a7	          0x4939f7	                            cmp r15, rsi	       588	dwarf2.c	FUNCTION_6	IF_1
0x40026aa	     0xf8206070000	                            jb 0x4002db6	       588	dwarf2.c	FUNCTION_6	IF_1
0x40026b0	           0xfb612	                   movzx edx, byte [rdx]	       590	dwarf2.c	FUNCTION_6	CALL_1
0x40026b3	    0x4889b4248000	             mov qword [rsp + 0x80], rsi	      2291	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x40026bb	          0x80fa03	                               cmp dl, 3	      2293	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x40026be	     0xf84d2000000	                            je 0x4002796	      2293	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x40026c4	          0x80fa03	                               cmp dl, 3	      2293	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x40026c7	            0x7718	                            ja 0x40026e1	      2293	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x40026c9	          0x80fa01	                               cmp dl, 1	      2293	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x40026cc	            0x742f	                            je 0x40026fd	      2293	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x40026ce	          0x80fa02	                               cmp dl, 2	      2293	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x40026d1	     0xf8491000000	                            je 0x4002768	      2293	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x40026d7	      0x4c8b742428	            mov r14, qword [rsp + 0x28] 	      2293	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x40026dc	      0xe9cf010000	                           jmp 0x40028b0	      2293	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x40026e1	          0x80fa04	                               cmp dl, 4	      2293	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x40026e4	     0xf8487010000	                            je 0x4002871	      2293	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x40026ea	          0x80fa80	                            cmp dl, 0x80	      2293	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x40026ed	     0xf84aa010000	                            je 0x400289d	      2293	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x40026f3	      0x4c8b742428	            mov r14, qword [rsp + 0x28] 	      2293	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x40026f8	      0xe9b3010000	                           jmp 0x40028b0	      2293	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x40026fd	       0xfb6542422	           movzx edx, byte [rsp + 0x22] 	      2297	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_26	CALL_54
0x4002702	            0x6a01	                                  push 1	      2297	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_26	CALL_54
0x4002704	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	      2297	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_26	CALL_54
0x4002708	              0x50	                                push rax	      2297	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_26	CALL_54
0x4002709	      0x448b4c2444	            mov r9d, dword [rsp + 0x44] 	      2297	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_26	CALL_54
0x400270e	      0x448b442420	            mov r8d, dword [rsp + 0x20] 	      2297	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_26	CALL_54
0x4002713	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      2297	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_26	CALL_54
0x4002718	          0x4889de	                            mov rsi, rbx	      2297	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_26	CALL_54
0x400271b	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      2297	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_26	CALL_54
0x4002720	      0xe83be4ffff	                  call sym.add_line_info	      2297	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_26	CALL_54
0x4002725	        0x4883c410	                           add rsp, 0x10	      2297	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_26	CALL_54
0x4002729	            0x85c0	                           test eax, eax	      2297	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_26	CALL_54
0x400272b	     0xf84ba010000	                            je 0x40028eb	      2297	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_26	CALL_54
0x4002731	          0x4839eb	                            cmp rbx, rbp	      2305	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_29	CALL_55
0x4002734	          0x4889e9	                            mov rcx, rbp	      2305	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_29	CALL_55
0x4002737	        0x480f43cb	                         cmovae rcx, rbx	      2305	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_29	CALL_55
0x400273b	          0x4c39eb	                            cmp rbx, r13	      2305	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_29	CALL_55
0x400273e	          0x4c89ea	                            mov rdx, r13	      2305	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_29	CALL_55
0x4002741	        0x480f46d3	                         cmovbe rdx, rbx	      2305	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_29	CALL_55
0x4002745	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      2305	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_29	CALL_55
0x400274a	        0x488d7018	                   lea rsi, [rax + 0x18]	      2305	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_29	CALL_55
0x400274e	          0x4889c7	                            mov rdi, rax	      2305	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_29	CALL_55
0x4002751	      0xe85ce0ffff	                     call sym.arange_add	      2305	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_29	CALL_55
0x4002756	            0x85c0	                           test eax, eax	      2305	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_29	CALL_55
0x4002758	     0xf8512040000	                           jne 0x4002b70	      2305	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_29	CALL_55
0x400275e	      0x4c8b742428	            mov r14, qword [rsp + 0x28] 	      2305	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_29	CALL_55
0x4002763	      0xe996010000	                           jmp 0x40028fe	      2305	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_29	CALL_55
0x4002768	          0x4c89fa	                            mov rdx, r15	      2309	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_56
0x400276b	      0x4c8b642438	            mov r12, qword [rsp + 0x38] 	      2309	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_56
0x4002770	          0x4c89e7	                            mov rdi, r12	      2309	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_56
0x4002773	      0xe8e5e1ffff	                   call sym.read_address	      2309	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_56
0x4002778	          0x4889c3	                            mov rbx, rax	      2309	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_56
0x400277b	    0x410fb68424ac	           movzx eax, byte [r12 + 0xac] 	      2311	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4002784	    0x480184248000	            add qword [rsp + 0x80], rax 	      2311	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x400278c	      0xc644242200	                mov byte [rsp + 0x22], 0	      2310	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4002791	      0xe9c9030000	                           jmp 0x4002b5f	      2312	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4002796	      0x488d4c247c	                   lea rcx, [rsp + 0x7c]	      2314	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_57
0x400279b	          0x4c89fa	                            mov rdx, r15	      2314	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_57
0x400279e	      0x4c8b642440	            mov r12, qword [rsp + 0x40] 	      2314	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_57
0x40027a3	          0x4c89e7	                            mov rdi, r12	      2314	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_57
0x40027a6	      0xe8fbd8ffff	                    call sym.read_string	      2314	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_57
0x40027ab	      0x4889442458	             mov qword [rsp + 0x58], rax	      2314	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_57
0x40027b0	        0x8b74247c	            mov esi, dword [rsp + 0x7c] 	      2315	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x40027b4	    0x4803b4248000	             add rsi, qword [rsp + 0x80]	      2315	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x40027bc	    0x4889b4248000	             mov qword [rsp + 0x80], rsi	      2315	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x40027c4	          0x4d89f8	                             mov r8, r15	      2316	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_58
0x40027c7	      0xb900000000	                              mov ecx, 0	      2316	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_58
0x40027cc	      0x488d54247c	                   lea rdx, [rsp + 0x7c]	      2316	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_58
0x40027d1	          0x4c89e7	                            mov rdi, r12	      2316	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_58
0x40027d4	      0xe800000000	                          call 0x40027d9	      2316	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_58
0x40027d9	      0x4889442460	             mov qword [rsp + 0x60], rax	      2316	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_58
0x40027de	        0x8b74247c	            mov esi, dword [rsp + 0x7c] 	      2318	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x40027e2	    0x4803b4248000	             add rsi, qword [rsp + 0x80]	      2318	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x40027ea	    0x4889b4248000	             mov qword [rsp + 0x80], rsi	      2318	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x40027f2	          0x4d89f8	                             mov r8, r15	      2319	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_59
0x40027f5	      0xb900000000	                              mov ecx, 0	      2319	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_59
0x40027fa	      0x488d54247c	                   lea rdx, [rsp + 0x7c]	      2319	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_59
0x40027ff	      0x4c89642440	             mov qword [rsp + 0x40], r12	      2319	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_59
0x4002804	          0x4c89e7	                            mov rdi, r12	      2319	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_59
0x4002807	      0xe800000000	                          call 0x400280c	      2319	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_59
0x400280c	          0x4989c4	                            mov r12, rax	      2319	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_59
0x400280f	        0x8b74247c	            mov esi, dword [rsp + 0x7c] 	      2321	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4002813	    0x4803b4248000	             add rsi, qword [rsp + 0x80]	      2321	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x400281b	    0x4889b4248000	             mov qword [rsp + 0x80], rsi	      2321	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4002823	          0x4d89f8	                             mov r8, r15	      2322	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_60
0x4002826	      0xb900000000	                              mov ecx, 0	      2322	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_60
0x400282b	      0x488d54247c	                   lea rdx, [rsp + 0x7c]	      2322	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_60
0x4002830	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      2322	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_60
0x4002835	      0xe800000000	                          call 0x400283a	      2322	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_60
0x400283a	        0x8b54247c	            mov edx, dword [rsp + 0x7c] 	      2324	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x400283e	    0x480194248000	            add qword [rsp + 0x80], rdx 	      2324	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4002846	          0x4189c0	                            mov r8d, eax	      2325	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_30	CALL_61
0x4002849	          0x4489e1	                           mov ecx, r12d	      2325	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_30	CALL_61
0x400284c	        0x8b542460	            mov edx, dword [rsp + 0x60] 	      2325	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_30	CALL_61
0x4002850	      0x488b742458	            mov rsi, qword [rsp + 0x58] 	      2325	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_30	CALL_61
0x4002855	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      2325	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_30	CALL_61
0x400285a	      0xe851e0ffff	        call sym.line_info_add_file_name	      2325	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_30	CALL_61
0x400285f	            0x85c0	                           test eax, eax	      2325	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_30	CALL_61
0x4002861	     0xf85f8020000	                           jne 0x4002b5f	      2325	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_30	CALL_61
0x4002867	      0x4c8b742428	            mov r14, qword [rsp + 0x28] 	      2325	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_30	CALL_61
0x400286c	      0xe98d000000	                           jmp 0x40028fe	      2325	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_30	CALL_61
0x4002871	          0x4d89f8	                             mov r8, r15	      2331	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_62
0x4002874	      0xb900000000	                              mov ecx, 0	      2331	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_62
0x4002879	      0x488d54247c	                   lea rdx, [rsp + 0x7c]	      2331	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_62
0x400287e	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      2331	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_62
0x4002883	      0xe800000000	                          call 0x4002888	      2331	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_62
0x4002888	        0x89442414	             mov dword [rsp + 0x14], eax	      2330	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x400288c	        0x8b44247c	            mov eax, dword [rsp + 0x7c] 	      2333	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4002890	    0x480184248000	            add qword [rsp + 0x80], rax 	      2333	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4002898	      0xe9c2020000	                           jmp 0x4002b5f	      2334	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x400289d	          0x8d40ff	                      lea eax, [rax - 1]	      2336	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x40028a0	          0x4801c6	                            add rsi, rax	      2336	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x40028a3	    0x4889b4248000	             mov qword [rsp + 0x80], rsi	      2336	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x40028ab	      0xe9af020000	                           jmp 0x4002b5f	      2337	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x40028b0	      0xba05000000	                              mov edx, 5	      2340	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_64
0x40028b5	      0xbe00000000	                              mov esi, 0	      2340	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_64
0x40028ba	      0xbf00000000	                              mov edi, 0	      2340	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_64
0x40028bf	      0xe800000000	                          call 0x40028c4	      2340	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_64
0x40028c4	          0x4889c7	                            mov rdi, rax	      2339	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_63
0x40028c7	      0xb800000000	                              mov eax, 0	      2339	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_63
0x40028cc	      0xe800000000	                          call 0x40028d1	      2339	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_63
0x40028d1	      0xbf11000000	                           mov edi, 0x11	      2341	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_65
0x40028d6	      0xe800000000	                          call 0x40028db	      2341	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_65
0x40028db	            0xeb21	                           jmp 0x40028fe	      2341	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_65
0x40028dd	      0x4c8b742428	            mov r14, qword [rsp + 0x28] 	      2341	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_65
0x40028e2	            0xeb1a	                           jmp 0x40028fe	      2341	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_65
0x40028e4	      0x4c8b742428	            mov r14, qword [rsp + 0x28] 	      2341	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_65
0x40028e9	            0xeb13	                           jmp 0x40028fe	      2341	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_65
0x40028eb	      0x4c8b742428	            mov r14, qword [rsp + 0x28] 	      2341	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_65
0x40028f0	            0xeb0c	                           jmp 0x40028fe	      2341	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_65
0x40028f2	      0x4c8b742428	            mov r14, qword [rsp + 0x28] 	      2341	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_65
0x40028f7	            0xeb05	                           jmp 0x40028fe	      2341	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_65
0x40028f9	      0x4c8b742428	            mov r14, qword [rsp + 0x28] 	      2341	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_65
0x40028fe	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      2343	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_31
0x4002903	          0x4885c0	                           test rax, rax	      2343	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_31
0x4002906	            0x7408	                            je 0x4002910	      2343	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_31
0x4002908	          0x4889c7	                            mov rdi, rax	      2344	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_66
0x400290b	      0xe800000000	                          call 0x4002910	      2344	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_66
0x4002910	        0x498b7e30	            mov rdi, qword [r14 + 0x30] 	      2444	dwarf2.c	FUNCTION_35	WHILE_5
0x4002914	          0x4885ff	                           test rdi, rdi	      2444	dwarf2.c	FUNCTION_35	WHILE_5
0x4002917	     0xf85c0030000	                           jne 0x4002cdd	      2444	dwarf2.c	FUNCTION_35	WHILE_5
0x400291d	      0xe9d1030000	                           jmp 0x4002cf3	      2444	dwarf2.c	FUNCTION_35	WHILE_5
0x4002922	       0xfb6542422	           movzx edx, byte [rsp + 0x22] 	      2349	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_32	CALL_67
0x4002927	            0x6a00	                                  push 0	      2349	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_32	CALL_67
0x4002929	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	      2349	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_32	CALL_67
0x400292d	              0x50	                                push rax	      2349	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_32	CALL_67
0x400292e	      0x448b4c2444	            mov r9d, dword [rsp + 0x44] 	      2349	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_32	CALL_67
0x4002933	      0x448b442420	            mov r8d, dword [rsp + 0x20] 	      2349	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_32	CALL_67
0x4002938	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      2349	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_32	CALL_67
0x400293d	          0x4889de	                            mov rsi, rbx	      2349	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_32	CALL_67
0x4002940	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      2349	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_32	CALL_67
0x4002945	      0xe816e2ffff	                  call sym.add_line_info	      2349	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_32	CALL_67
0x400294a	        0x4883c410	                           add rsp, 0x10	      2349	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_32	CALL_67
0x400294e	            0x85c0	                           test eax, eax	      2349	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_32	CALL_67
0x4002950	            0x74a0	                            je 0x40028f2	      2349	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_32	CALL_67
0x4002952	          0x4939dd	                            cmp r13, rbx	      2349	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_32	CALL_67
0x4002955	        0x4c0f47eb	                          cmova r13, rbx	      2349	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_32	CALL_67
0x4002959	          0x4839dd	                            cmp rbp, rbx	      2349	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_32	CALL_67
0x400295c	        0x480f42eb	                          cmovb rbp, rbx	      2349	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_32	CALL_67
0x4002960	    0xc74424140000	               mov dword [rsp + 0x14], 0	      2352	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4002968	      0xe9f2010000	                           jmp 0x4002b5f	      2352	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x400296d	      0x807c242301	                cmp byte [rsp + 0x23], 1	      2359	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_35
0x4002972	            0x7525	                           jne 0x4002999	      2359	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_35
0x4002974	          0x4d89f8	                             mov r8, r15	      2361	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_35	CALL_68
0x4002977	      0xb900000000	                              mov ecx, 0	      2361	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_35	CALL_68
0x400297c	      0x488d54247c	                   lea rdx, [rsp + 0x7c]	      2361	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_35	CALL_68
0x4002981	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      2361	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_35	CALL_68
0x4002986	      0xe800000000	                          call 0x400298b	      2361	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_35	CALL_68
0x400298b	       0xfb654246e	           movzx edx, byte [rsp + 0x6e] 	      2360	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_35
0x4002990	        0x480fafc2	                           imul rax, rdx	      2360	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_35
0x4002994	          0x4801c3	                            add rbx, rax	      2360	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_35
0x4002997	            0xeb39	                           jmp 0x40029d2	      2360	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_35
0x4002999	          0x4d89f8	                             mov r8, r15	      2366	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_7	CALL_69
0x400299c	      0xb900000000	                              mov ecx, 0	      2366	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_7	CALL_69
0x40029a1	      0x488d54247c	                   lea rdx, [rsp + 0x7c]	      2366	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_7	CALL_69
0x40029a6	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      2366	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_7	CALL_69
0x40029ab	      0xe800000000	                          call 0x40029b0	      2366	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_7	CALL_69
0x40029b0	       0xfb6542422	           movzx edx, byte [rsp + 0x22] 	      2369	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_7
0x40029b5	          0x4801d0	                            add rax, rdx	      2369	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_7
0x40029b8	       0xfb64c2423	           movzx ecx, byte [rsp + 0x23] 	      2369	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_7
0x40029bd	      0xba00000000	                              mov edx, 0	      2369	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_7
0x40029c2	          0x48f7f1	                                 div rcx	      2369	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_7
0x40029c5	       0xfb65c246e	           movzx ebx, byte [rsp + 0x6e] 	      2369	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_7
0x40029ca	        0x480fafd8	                           imul rbx, rax	      2369	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_7
0x40029ce	        0x88542422	               mov byte [rsp + 0x22], dl	      2371	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_7
0x40029d2	        0x8b44247c	            mov eax, dword [rsp + 0x7c] 	      2373	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x40029d6	    0x480184248000	            add qword [rsp + 0x80], rax 	      2373	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x40029de	      0xe97c010000	                           jmp 0x4002b5f	      2374	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x40029e3	          0x4d89f8	                             mov r8, r15	      2376	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_70
0x40029e6	      0xb901000000	                              mov ecx, 1	      2376	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_70
0x40029eb	      0x488d54247c	                   lea rdx, [rsp + 0x7c]	      2376	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_70
0x40029f0	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      2376	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_70
0x40029f5	      0xe800000000	                          call 0x40029fa	      2376	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_70
0x40029fa	         0x1442410	             add dword [rsp + 0x10], eax	      2376	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_70
0x40029fe	        0x8b44247c	            mov eax, dword [rsp + 0x7c] 	      2378	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4002a02	    0x480184248000	            add qword [rsp + 0x80], rax 	      2378	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4002a0a	      0xe950010000	                           jmp 0x4002b5f	      2379	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4002a0f	          0x4d89f8	                             mov r8, r15	      2386	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_71
0x4002a12	      0xb900000000	                              mov ecx, 0	      2386	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_71
0x4002a17	      0x488d54247c	                   lea rdx, [rsp + 0x7c]	      2386	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_71
0x4002a1c	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      2386	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_71
0x4002a21	      0xe800000000	                          call 0x4002a26	      2386	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_71
0x4002a26	          0x4989c4	                            mov r12, rax	      2386	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_71
0x4002a29	        0x8b44247c	            mov eax, dword [rsp + 0x7c] 	      2388	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4002a2d	    0x480184248000	            add qword [rsp + 0x80], rax 	      2388	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4002a35	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      2389	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_36
0x4002a3a	          0x4885c0	                           test rax, rax	      2389	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_36
0x4002a3d	            0x7408	                            je 0x4002a47	      2389	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_36
0x4002a3f	          0x4889c7	                            mov rdi, rax	      2390	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_72
0x4002a42	      0xe800000000	                          call 0x4002a47	      2390	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_72
0x4002a47	          0x4489e6	                           mov esi, r12d	      2391	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_73
0x4002a4a	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      2391	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_73
0x4002a4f	      0xe884e3ffff	                call sym.concat_filename	      2391	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_73
0x4002a54	      0x4889442418	             mov qword [rsp + 0x18], rax	      2391	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_73
0x4002a59	      0xe901010000	                           jmp 0x4002b5f	      2392	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4002a5e	          0x4d89f8	                             mov r8, r15	      2395	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_74
0x4002a61	      0xb900000000	                              mov ecx, 0	      2395	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_74
0x4002a66	      0x488d54247c	                   lea rdx, [rsp + 0x7c]	      2395	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_74
0x4002a6b	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      2395	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_74
0x4002a70	      0xe800000000	                          call 0x4002a75	      2395	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_74
0x4002a75	        0x89442434	             mov dword [rsp + 0x34], eax	      2395	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_74
0x4002a79	        0x8b44247c	            mov eax, dword [rsp + 0x7c] 	      2397	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4002a7d	    0x480184248000	            add qword [rsp + 0x80], rax 	      2397	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4002a85	      0xe9d5000000	                           jmp 0x4002b5f	      2398	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4002a8a	          0x4584f6	                         test r14b, r14b	      2405	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_37
0x4002a8d	     0xf8466feffff	                            je 0x40028f9	      2405	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_37
0x4002a93	      0x807c242301	                cmp byte [rsp + 0x23], 1	      2407	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_38
0x4002a98	            0x751b	                           jne 0x4002ab5	      2407	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_38
0x4002a9a	       0xfb64c244c	           movzx ecx, byte [rsp + 0x4c] 	      2408	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_38
0x4002a9f	        0x8b442468	            mov eax, dword [rsp + 0x68] 	      2408	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_38
0x4002aa3	              0x99	                                     cdq	      2408	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_38
0x4002aa4	            0xf7f9	                                idiv ecx	      2408	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_38
0x4002aa6	       0xfaf442424	            imul eax, dword [rsp + 0x24]	      2408	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_38
0x4002aab	            0x4898	                                    cdqe	      2408	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_38
0x4002aad	          0x4801c3	                            add rbx, rax	      2408	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_38
0x4002ab0	      0xe9aa000000	                           jmp 0x4002b5f	      2408	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_38
0x4002ab5	       0xfb64c244c	           movzx ecx, byte [rsp + 0x4c] 	      2414	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x4002aba	        0x8b442468	            mov eax, dword [rsp + 0x68] 	      2414	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x4002abe	              0x99	                                     cdq	      2414	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x4002abf	            0xf7f9	                                idiv ecx	      2414	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x4002ac1	            0x4898	                                    cdqe	      2414	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x4002ac3	       0xfb6542422	           movzx edx, byte [rsp + 0x22] 	      2414	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x4002ac8	          0x4801d0	                            add rax, rdx	      2414	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x4002acb	       0xfb64c2423	           movzx ecx, byte [rsp + 0x23] 	      2415	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x4002ad0	      0xba00000000	                              mov edx, 0	      2413	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x4002ad5	          0x48f7f1	                                 div rcx	      2413	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x4002ad8	       0xfb64c246e	           movzx ecx, byte [rsp + 0x6e] 	      2413	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x4002add	        0x480fafc1	                           imul rax, rcx	      2413	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x4002ae1	          0x4801c3	                            add rbx, rax	      2413	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x4002ae4	        0x88542422	               mov byte [rsp + 0x22], dl	      2416	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x4002ae8	            0xeb75	                           jmp 0x4002b5f	      2416	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x4002aea	          0x4c89fa	                            mov rdx, r15	      2420	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_75
0x4002aed	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      2420	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_75
0x4002af2	      0xe849d5ffff	                   call sym.read_2_bytes	      2420	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_75
0x4002af7	            0x89c0	                            mov eax, eax	      2420	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_75
0x4002af9	          0x4801c3	                            add rbx, rax	      2420	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_75
0x4002afc	    0x488384248000	               add qword [rsp + 0x80], 2	      2422	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4002b05	      0xc644242200	                mov byte [rsp + 0x22], 0	      2421	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4002b0a	            0xeb53	                           jmp 0x4002b5f	      2423	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4002b0c	      0x48895c2458	             mov qword [rsp + 0x58], rbx	      2423	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4002b11	      0x488b5c2440	            mov rbx, qword [rsp + 0x40] 	      2423	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4002b16	      0x4488742460	             mov byte [rsp + 0x60], r14b	      2423	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4002b1b	          0x4989c6	                            mov r14, rax	      2423	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4002b1e	          0x4d89f8	                             mov r8, r15	      2428	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2	CALL_76
0x4002b21	      0xb900000000	                              mov ecx, 0	      2428	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2	CALL_76
0x4002b26	      0x488d54247c	                   lea rdx, [rsp + 0x7c]	      2428	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2	CALL_76
0x4002b2b	    0x488bb4248000	            mov rsi, qword [rsp + 0x80] 	      2428	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2	CALL_76
0x4002b33	          0x4889df	                            mov rdi, rbx	      2428	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2	CALL_76
0x4002b36	      0xe800000000	                          call 0x4002b3b	      2428	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2	CALL_76
0x4002b3b	        0x8b44247c	            mov eax, dword [rsp + 0x7c] 	      2430	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x4002b3f	    0x480184248000	            add qword [rsp + 0x80], rax 	      2430	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x4002b47	        0x4183c401	                             add r12d, 1	      2426	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x4002b4b	        0x410fb606	                   movzx eax, byte [r14]	      2426	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x4002b4f	          0x4439e0	                           cmp eax, r12d	      2426	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x4002b52	            0x77ca	                            ja 0x4002b1e	      2426	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x4002b54	      0x488b5c2458	            mov rbx, qword [rsp + 0x58] 	      2426	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x4002b59	    0x440fb6742460	          movzx r14d, byte [rsp + 0x60] 	      2426	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x4002b5f	    0x488b84248000	            mov rax, qword [rsp + 0x80] 	      2251	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4
0x4002b67	          0x4939c7	                            cmp r15, rax	      2251	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4
0x4002b6a	     0xf8706faffff	                            ja 0x4002576	      2251	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4
0x4002b70	    0x48837c241800	               cmp qword [rsp + 0x18], 0	      2436	dwarf2.c	FUNCTION_35	WHILE_3	IF_39
0x4002b76	            0x7410	                            je 0x4002b88	      2436	dwarf2.c	FUNCTION_35	WHILE_3	IF_39
0x4002b78	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      2437	dwarf2.c	FUNCTION_35	WHILE_3	CALL_77
0x4002b7d	      0xe800000000	                          call 0x4002b82	      2437	dwarf2.c	FUNCTION_35	WHILE_3	CALL_77
0x4002b82	    0x440fb674246f	          movzx r14d, byte [rsp + 0x6f] 	      2437	dwarf2.c	FUNCTION_35	WHILE_3	CALL_77
0x4002b88	    0x488b84248000	            mov rax, qword [rsp + 0x80] 	      2230	dwarf2.c	FUNCTION_35	WHILE_3
0x4002b90	          0x4939c7	                            cmp r15, rax	      2230	dwarf2.c	FUNCTION_35	WHILE_3
0x4002b93	     0xf8778f9ffff	                            ja 0x4002511	      2230	dwarf2.c	FUNCTION_35	WHILE_3
0x4002b99	      0x4c8b742428	            mov r14, qword [rsp + 0x28] 	      2230	dwarf2.c	FUNCTION_35	WHILE_3
0x4002b9e	        0x458b6e10	           mov r13d, dword [r14 + 0x10] 	      1761	dwarf2.c	FUNCTION_30
0x4002ba2	          0x4585ed	                         test r13d, r13d	      1764	dwarf2.c	FUNCTION_30	IF_1
0x4002ba5	     0xf841d020000	                            je 0x4002dc8	      1764	dwarf2.c	FUNCTION_30	IF_1
0x4002bab	          0x4589ef	                          mov r15d, r13d	      1768	dwarf2.c	FUNCTION_30
0x4002bae	        0x4b8d34bf	                  lea rsi, [r15 + r15*4]	      1769	dwarf2.c	FUNCTION_30	CALL_1
0x4002bb2	        0x48c1e603	                              shl rsi, 3	      1769	dwarf2.c	FUNCTION_30	CALL_1
0x4002bb6	          0x498b3e	                    mov rdi, qword [r14]	      1769	dwarf2.c	FUNCTION_30	CALL_1
0x4002bb9	      0xe800000000	                          call 0x4002bbe	      1769	dwarf2.c	FUNCTION_30	CALL_1
0x4002bbe	          0x4989c4	                            mov r12, rax	      1769	dwarf2.c	FUNCTION_30	CALL_1
0x4002bc1	          0x4885c0	                           test rax, rax	      1770	dwarf2.c	FUNCTION_30	IF_2
0x4002bc4	     0xf8446fdffff	                            je 0x4002910	      1770	dwarf2.c	FUNCTION_30	IF_2
0x4002bca	        0x498b6e30	            mov rbp, qword [r14 + 0x30] 	      1774	dwarf2.c	FUNCTION_30
0x4002bce	          0x4889c3	                            mov rbx, rax	      1774	dwarf2.c	FUNCTION_30
0x4002bd1	        0x418d45ff	                      lea eax, [r13 - 1]	      1774	dwarf2.c	FUNCTION_30
0x4002bd5	      0x488d448005	              lea rax, [rax + rax*4 + 5]	      1774	dwarf2.c	FUNCTION_30
0x4002bda	        0x498d04c4	                  lea rax, [r12 + rax*8]	      1774	dwarf2.c	FUNCTION_30
0x4002bde	      0x4889442408	                mov qword [rsp + 8], rax	      1774	dwarf2.c	FUNCTION_30
0x4002be3	            0xeb03	                           jmp 0x4002be8	      1774	dwarf2.c	FUNCTION_30
0x4002be5	          0x4c89ed	                            mov rbp, r13	      1785	dwarf2.c	FUNCTION_30	FOR_1
0x4002be8	          0x4885ed	                           test rbp, rbp	      1779	dwarf2.c	FUNCTION_30	FOR_1	CALL_2
0x4002beb	            0x750f	                           jne 0x4002bfc	      1779	dwarf2.c	FUNCTION_30	FOR_1	CALL_2
0x4002bed	      0xbef3060000	                          mov esi, 0x6f3	      1779	dwarf2.c	FUNCTION_30	FOR_1	CALL_2
0x4002bf2	      0xbf00000000	                              mov edi, 0	      1779	dwarf2.c	FUNCTION_30	FOR_1	CALL_2
0x4002bf7	      0xe800000000	                          call 0x4002bfc	      1779	dwarf2.c	FUNCTION_30	FOR_1	CALL_2
0x4002bfc	        0x488b4500	                    mov rax, qword [rbp]	      1780	dwarf2.c	FUNCTION_30	FOR_1
0x4002c00	          0x488903	                    mov qword [rbx], rax	      1780	dwarf2.c	FUNCTION_30	FOR_1
0x4002c03	    0x48c743080000	                  mov qword [rbx + 8], 0	      1781	dwarf2.c	FUNCTION_30	FOR_1
0x4002c0b	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      1782	dwarf2.c	FUNCTION_30	FOR_1
0x4002c0f	        0x48894310	             mov qword [rbx + 0x10], rax	      1782	dwarf2.c	FUNCTION_30	FOR_1
0x4002c13	    0x48c743180000	               mov qword [rbx + 0x18], 0	      1783	dwarf2.c	FUNCTION_30	FOR_1
0x4002c1b	    0x48c743200000	               mov qword [rbx + 0x20], 0	      1784	dwarf2.c	FUNCTION_30	FOR_1
0x4002c23	        0x4c8b6d08	                mov r13, qword [rbp + 8]	      1785	dwarf2.c	FUNCTION_30	FOR_1
0x4002c27	          0x4889ef	                            mov rdi, rbp	      1786	dwarf2.c	FUNCTION_30	FOR_1	CALL_3
0x4002c2a	      0xe800000000	                          call 0x4002c2f	      1786	dwarf2.c	FUNCTION_30	FOR_1	CALL_3
0x4002c2f	        0x4883c328	                           add rbx, 0x28	      1786	dwarf2.c	FUNCTION_30	FOR_1	CALL_3
0x4002c33	      0x483b5c2408	                cmp rbx, qword [rsp + 8]	      1775	dwarf2.c	FUNCTION_30	FOR_1
0x4002c38	            0x75ab	                           jne 0x4002be5	      1775	dwarf2.c	FUNCTION_30	FOR_1
0x4002c3a	          0x4d85ed	                           test r13, r13	      1788	dwarf2.c	FUNCTION_30	CALL_4
0x4002c3d	            0x740f	                            je 0x4002c4e	      1788	dwarf2.c	FUNCTION_30	CALL_4
0x4002c3f	      0xbefc060000	                          mov esi, 0x6fc	      1788	dwarf2.c	FUNCTION_30	CALL_4
0x4002c44	      0xbf00000000	                              mov edi, 0	      1788	dwarf2.c	FUNCTION_30	CALL_4
0x4002c49	      0xe800000000	                          call 0x4002c4e	      1788	dwarf2.c	FUNCTION_30	CALL_4
0x4002c4e	      0xb900000000	                              mov ecx, 0	      1790	dwarf2.c	FUNCTION_30	CALL_5
0x4002c53	      0xba28000000	                           mov edx, 0x28	      1790	dwarf2.c	FUNCTION_30	CALL_5
0x4002c58	          0x4c89fe	                            mov rsi, r15	      1790	dwarf2.c	FUNCTION_30	CALL_5
0x4002c5b	          0x4c89e7	                            mov rdi, r12	      1790	dwarf2.c	FUNCTION_30	CALL_5
0x4002c5e	      0xe800000000	                          call 0x4002c63	      1790	dwarf2.c	FUNCTION_30	CALL_5
0x4002c63	      0x498b442410	            mov rax, qword [r12 + 0x10] 	      1795	dwarf2.c	FUNCTION_30
0x4002c68	        0x488b7008	                mov rsi, qword [rax + 8]	      1795	dwarf2.c	FUNCTION_30
0x4002c6c	      0x41837e1001	               cmp dword [r14 + 0x10], 1	      1796	dwarf2.c	FUNCTION_30	FOR_2
0x4002c71	            0x7658	                           jbe 0x4002ccb	      1796	dwarf2.c	FUNCTION_30	FOR_2
0x4002c73	      0xb901000000	                              mov ecx, 1	      1796	dwarf2.c	FUNCTION_30	FOR_2
0x4002c78	      0xb801000000	                              mov eax, 1	      1796	dwarf2.c	FUNCTION_30	FOR_2
0x4002c7d	            0x89c2	                            mov edx, eax	      1798	dwarf2.c	FUNCTION_30	FOR_2	IF_3
0x4002c7f	        0x488d1492	                  lea rdx, [rdx + rdx*4]	      1798	dwarf2.c	FUNCTION_30	FOR_2	IF_3
0x4002c83	        0x498d14d4	                  lea rdx, [r12 + rdx*8]	      1798	dwarf2.c	FUNCTION_30	FOR_2	IF_3
0x4002c87	          0x483932	                    cmp qword [rdx], rsi	      1798	dwarf2.c	FUNCTION_30	FOR_2	IF_3
0x4002c8a	            0x730d	                           jae 0x4002c99	      1798	dwarf2.c	FUNCTION_30	FOR_2	IF_3
0x4002c8c	        0x488b7a10	            mov rdi, qword [rdx + 0x10] 	      1800	dwarf2.c	FUNCTION_30	FOR_2	IF_3	IF_4
0x4002c90	        0x48397708	                cmp qword [rdi + 8], rsi	      1800	dwarf2.c	FUNCTION_30	FOR_2	IF_3	IF_4
0x4002c94	            0x762a	                           jbe 0x4002cc0	      1800	dwarf2.c	FUNCTION_30	FOR_2	IF_3	IF_4
0x4002c96	          0x488932	                    mov qword [rdx], rsi	      1805	dwarf2.c	FUNCTION_30	FOR_2	IF_3
0x4002c99	        0x488b7210	            mov rsi, qword [rdx + 0x10] 	      1807	dwarf2.c	FUNCTION_30	FOR_2
0x4002c9d	        0x488b7608	                mov rsi, qword [rsi + 8]	      1807	dwarf2.c	FUNCTION_30	FOR_2
0x4002ca1	            0x39c8	                            cmp eax, ecx	      1808	dwarf2.c	FUNCTION_30	FOR_2	IF_5
0x4002ca3	            0x7618	                           jbe 0x4002cbd	      1808	dwarf2.c	FUNCTION_30	FOR_2	IF_5
0x4002ca5	            0x89cf	                            mov edi, ecx	      1811	dwarf2.c	FUNCTION_30	FOR_2	IF_5
0x4002ca7	        0x488d3cbf	                  lea rdi, [rdi + rdi*4]	      1811	dwarf2.c	FUNCTION_30	FOR_2	IF_5
0x4002cab	        0x498d3cfc	                  lea rdi, [r12 + rdi*8]	      1811	dwarf2.c	FUNCTION_30	FOR_2	IF_5
0x4002caf	          0x4c8b02	                     mov r8, qword [rdx]	      1811	dwarf2.c	FUNCTION_30	FOR_2	IF_5
0x4002cb2	          0x4c8907	                     mov qword [rdi], r8	      1811	dwarf2.c	FUNCTION_30	FOR_2	IF_5
0x4002cb5	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      1812	dwarf2.c	FUNCTION_30	FOR_2	IF_5
0x4002cb9	        0x48895710	             mov qword [rdi + 0x10], rdx	      1812	dwarf2.c	FUNCTION_30	FOR_2	IF_5
0x4002cbd	          0x83c101	                              add ecx, 1	      1814	dwarf2.c	FUNCTION_30	FOR_2
0x4002cc0	          0x83c001	                              add eax, 1	      1796	dwarf2.c	FUNCTION_30	FOR_2
0x4002cc3	        0x413b4610	            cmp eax, dword [r14 + 0x10] 	      1796	dwarf2.c	FUNCTION_30	FOR_2
0x4002cc7	            0x72b4	                            jb 0x4002c7d	      1796	dwarf2.c	FUNCTION_30	FOR_2
0x4002cc9	            0xeb05	                           jmp 0x4002cd0	      1796	dwarf2.c	FUNCTION_30	FOR_2
0x4002ccb	      0xb901000000	                              mov ecx, 1	      1794	dwarf2.c	FUNCTION_30
0x4002cd0	        0x4d896630	             mov qword [r14 + 0x30], r12	      1817	dwarf2.c	FUNCTION_30
0x4002cd4	        0x41894e10	             mov dword [r14 + 0x10], ecx	      1818	dwarf2.c	FUNCTION_30
0x4002cd8	      0xe9eb000000	                           jmp 0x4002dc8	      1818	dwarf2.c	FUNCTION_30
0x4002cdd	        0x488b4708	                mov rax, qword [rdi + 8]	      2447	dwarf2.c	FUNCTION_35	WHILE_5
0x4002ce1	        0x49894630	             mov qword [r14 + 0x30], rax	      2447	dwarf2.c	FUNCTION_35	WHILE_5
0x4002ce5	      0xe800000000	                          call 0x4002cea	      2448	dwarf2.c	FUNCTION_35	WHILE_5	CALL_79
0x4002cea	        0x498b7e30	            mov rdi, qword [r14 + 0x30] 	      2444	dwarf2.c	FUNCTION_35	WHILE_5
0x4002cee	          0x4885ff	                           test rdi, rdi	      2444	dwarf2.c	FUNCTION_35	WHILE_5
0x4002cf1	            0x75ea	                           jne 0x4002cdd	      2444	dwarf2.c	FUNCTION_35	WHILE_5
0x4002cf3	        0x498b7e28	            mov rdi, qword [r14 + 0x28] 	      2450	dwarf2.c	FUNCTION_35	IF_41
0x4002cf7	          0x4885ff	                           test rdi, rdi	      2450	dwarf2.c	FUNCTION_35	IF_41
0x4002cfa	            0x7405	                            je 0x4002d01	      2450	dwarf2.c	FUNCTION_35	IF_41
0x4002cfc	      0xe800000000	                          call 0x4002d01	      2451	dwarf2.c	FUNCTION_35	CALL_80
0x4002d01	        0x498b7e20	            mov rdi, qword [r14 + 0x20] 	      2452	dwarf2.c	FUNCTION_35	IF_42
0x4002d05	      0xba00000000	                              mov edx, 0	      2454	dwarf2.c	FUNCTION_35
0x4002d0a	          0x4885ff	                           test rdi, rdi	      2452	dwarf2.c	FUNCTION_35	IF_42
0x4002d0d	            0x7411	                            je 0x4002d20	      2452	dwarf2.c	FUNCTION_35	IF_42
0x4002d0f	      0xe800000000	                          call 0x4002d14	      2453	dwarf2.c	FUNCTION_35	CALL_81
0x4002d14	      0xba00000000	                              mov edx, 0	      2454	dwarf2.c	FUNCTION_35
0x4002d19	            0xeb05	                           jmp 0x4002d20	      2454	dwarf2.c	FUNCTION_35
0x4002d1b	      0xba00000000	                              mov edx, 0	      2032	dwarf2.c	FUNCTION_35	IF_2
0x4002d20	          0x4889d0	                            mov rax, rdx	      2455	dwarf2.c	FUNCTION_35
0x4002d23	    0x488b9c248800	            mov rbx, qword [rsp + 0x88] 	      2455	dwarf2.c	FUNCTION_35
0x4002d2b	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      2455	dwarf2.c	FUNCTION_35
0x4002d34	     0xf84d3000000	                            je 0x4002e0d	      2455	dwarf2.c	FUNCTION_35
0x4002d3a	      0xe9c9000000	                           jmp 0x4002e08	      2455	dwarf2.c	FUNCTION_35
0x4002d3f	      0x488d541a08	                lea rdx, [rdx + rbx + 8]	      2099	dwarf2.c	FUNCTION_35	IF_8
0x4002d44	          0x4939d5	                            cmp r13, rdx	      2099	dwarf2.c	FUNCTION_35	IF_8
0x4002d47	     0xf87d3f3ffff	                            ja 0x4002120	      2099	dwarf2.c	FUNCTION_35	IF_8
0x4002d4d	      0xe999f3ffff	                           jmp 0x40020eb	      2099	dwarf2.c	FUNCTION_35	IF_8
0x4002d52	    0x488994248000	             mov qword [rsp + 0x80], rdx	      2117	dwarf2.c	FUNCTION_35	IF_9
0x4002d5a	      0xe927f4ffff	                           jmp 0x4002186	      2117	dwarf2.c	FUNCTION_35	IF_9
0x4002d5f	      0xbe00000000	                              mov esi, 0	      2173	dwarf2.c	FUNCTION_35	CALL_38
0x4002d64	          0x4c89ff	                            mov rdi, r15	      2173	dwarf2.c	FUNCTION_35	CALL_38
0x4002d67	      0xe800000000	                          call 0x4002d6c	      2173	dwarf2.c	FUNCTION_35	CALL_38
0x4002d6c	      0x4889442450	             mov qword [rsp + 0x50], rax	      2173	dwarf2.c	FUNCTION_35	CALL_38
0x4002d71	          0xc60001	                       mov byte [rax], 1	      2175	dwarf2.c	FUNCTION_35
0x4002d74	    0xc74424100000	               mov dword [rsp + 0x10], 0	      2175	dwarf2.c	FUNCTION_35
0x4002d7c	      0xc644240800	                   mov byte [rsp + 8], 0	      2162	dwarf2.c	FUNCTION_35	CALL_34
0x4002d81	      0xe9d5f5ffff	                           jmp 0x400235b	      2162	dwarf2.c	FUNCTION_35	CALL_34
0x4002d86	    0x488994248000	             mov qword [rsp + 0x80], rdx	      2163	dwarf2.c	FUNCTION_35
0x4002d8e	          0x4939cd	                            cmp r13, rcx	      2165	dwarf2.c	FUNCTION_35	IF_14
0x4002d91	     0xf8633f5ffff	                           jbe 0x40022ca	      2165	dwarf2.c	FUNCTION_35	IF_14
0x4002d97	            0xebc6	                           jmp 0x4002d5f	      2165	dwarf2.c	FUNCTION_35	IF_14
0x4002d99	    0x4889b4248000	             mov qword [rsp + 0x80], rsi	      2254	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4
0x4002da1	      0xb800000000	                              mov eax, 0	      2253	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	CALL_50
0x4002da6	      0x807c240800	                   cmp byte [rsp + 8], 0	      2256	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20
0x4002dab	     0xf84e7f7ffff	                            je 0x4002598	      2256	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20
0x4002db1	      0xe9c2f8ffff	                           jmp 0x4002678	      2256	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20
0x4002db6	      0x4c8b742428	            mov r14, qword [rsp + 0x28] 	      2256	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20
0x4002dbb	    0x4889b4248000	             mov qword [rsp + 0x80], rsi	      2291	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4002dc3	      0xe9e8faffff	                           jmp 0x40028b0	      2291	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4002dc8	          0x4c89f2	                            mov rdx, r14	      2441	dwarf2.c	FUNCTION_35	IF_40
0x4002dcb	      0xe950ffffff	                           jmp 0x4002d20	      2441	dwarf2.c	FUNCTION_35	IF_40
0x4002dd0	    0x488984248000	             mov qword [rsp + 0x80], rax	      2140	dwarf2.c	FUNCTION_35	IF_12
0x4002dd8	      0xe92ef4ffff	                           jmp 0x400220b	      2140	dwarf2.c	FUNCTION_35	IF_12
0x4002ddd	    0x488994248000	             mov qword [rsp + 0x80], rdx	      2163	dwarf2.c	FUNCTION_35
0x4002de5	      0xe9e0f4ffff	                           jmp 0x40022ca	      2163	dwarf2.c	FUNCTION_35
0x4002dea	    0x48898c248000	             mov qword [rsp + 0x80], rcx	      2160	dwarf2.c	FUNCTION_35
0x4002df2	        0x488d5004	                      lea rdx, [rax + 4]	       588	dwarf2.c	FUNCTION_6	IF_1
0x4002df6	          0x4939d5	                            cmp r13, rdx	       588	dwarf2.c	FUNCTION_6	IF_1
0x4002df9	            0x72e2	                            jb 0x4002ddd	       588	dwarf2.c	FUNCTION_6	IF_1
0x4002dfb	    0xc744244c0000	               mov dword [rsp + 0x4c], 0	       589	dwarf2.c	FUNCTION_6	IF_1
0x4002e03	      0xe9a5f4ffff	                           jmp 0x40022ad	       589	dwarf2.c	FUNCTION_6	IF_1
0x4002e08	      0xe800000000	                          call 0x4002e0d	      2455	dwarf2.c	FUNCTION_35
0x4002e0d	    0x4881c4980000	                           add rsp, 0x98	      2455	dwarf2.c	FUNCTION_35
0x4002e14	              0x5b	                                 pop rbx	      2455	dwarf2.c	FUNCTION_35
0x4002e15	              0x5d	                                 pop rbp	      2455	dwarf2.c	FUNCTION_35
0x4002e16	            0x415c	                                 pop r12	      2455	dwarf2.c	FUNCTION_35
0x4002e18	            0x415d	                                 pop r13	      2455	dwarf2.c	FUNCTION_35
0x4002e1a	            0x415e	                                 pop r14	      2455	dwarf2.c	FUNCTION_35
0x4002e1c	            0x415f	                                 pop r15	      2455	dwarf2.c	FUNCTION_35
0x4002e1e	              0xc3	                                     ret	      2455	dwarf2.c	FUNCTION_35
read_attribute_value	SWITCH,1:FOR,0:WHILE,0:IF,9:functions,0:ELSE,2:DO,0:CALL,43	614
0x400114d	            0x4157	                                push r15	      1092	dwarf2.c	FUNCTION_21
0x400114f	            0x4156	                                push r14	      1092	dwarf2.c	FUNCTION_21
0x4001151	            0x4155	                                push r13	      1092	dwarf2.c	FUNCTION_21
0x4001153	            0x4154	                                push r12	      1092	dwarf2.c	FUNCTION_21
0x4001155	              0x55	                                push rbp	      1092	dwarf2.c	FUNCTION_21
0x4001156	              0x53	                                push rbx	      1092	dwarf2.c	FUNCTION_21
0x4001157	        0x4883ec28	                           sub rsp, 0x28	      1092	dwarf2.c	FUNCTION_21
0x400115b	          0x4989fd	                            mov r13, rdi	      1092	dwarf2.c	FUNCTION_21
0x400115e	            0x89f3	                            mov ebx, esi	      1092	dwarf2.c	FUNCTION_21
0x4001160	      0x4889542408	                mov qword [rsp + 8], rdx	      1092	dwarf2.c	FUNCTION_21
0x4001165	          0x4989ce	                            mov r14, rcx	      1092	dwarf2.c	FUNCTION_21
0x4001168	          0x4c89c5	                             mov rbp, r8	      1092	dwarf2.c	FUNCTION_21
0x400116b	          0x4d89cc	                             mov r12, r9	      1092	dwarf2.c	FUNCTION_21
0x400116e	    0x64488b042528	                mov rax, qword fs:[0x28]	      1092	dwarf2.c	FUNCTION_21
0x4001177	      0x4889442418	             mov qword [rsp + 0x18], rax	      1092	dwarf2.c	FUNCTION_21
0x400117c	            0x31c0	                            xor eax, eax	      1092	dwarf2.c	FUNCTION_21
0x400117e	          0x4d39c8	                              cmp r8, r9	      1098	dwarf2.c	FUNCTION_21	IF_1
0x4001181	            0x7238	                            jb 0x40011bb	      1098	dwarf2.c	FUNCTION_21	IF_1
0x4001183	          0x83fe19	                           cmp esi, 0x19	      1098	dwarf2.c	FUNCTION_21	IF_1
0x4001186	            0x7433	                            je 0x40011bb	      1098	dwarf2.c	FUNCTION_21	IF_1
0x4001188	      0xba05000000	                              mov edx, 5	      1100	dwarf2.c	FUNCTION_21	IF_1	CALL_2
0x400118d	      0xbe00000000	                              mov esi, 0	      1100	dwarf2.c	FUNCTION_21	IF_1	CALL_2
0x4001192	      0xbf00000000	                              mov edi, 0	      1100	dwarf2.c	FUNCTION_21	IF_1	CALL_2
0x4001197	      0xe800000000	                          call 0x400119c	      1100	dwarf2.c	FUNCTION_21	IF_1	CALL_2
0x400119c	          0x4889c7	                            mov rdi, rax	      1100	dwarf2.c	FUNCTION_21	IF_1	CALL_2
0x400119f	      0xb800000000	                              mov eax, 0	      1100	dwarf2.c	FUNCTION_21	IF_1	CALL_2
0x40011a4	      0xe800000000	                          call 0x40011a9	      1100	dwarf2.c	FUNCTION_21	IF_1	CALL_2
0x40011a9	      0xbf11000000	                           mov edi, 0x11	      1101	dwarf2.c	FUNCTION_21	IF_1	CALL_3
0x40011ae	      0xe800000000	                          call 0x40011b3	      1101	dwarf2.c	FUNCTION_21	IF_1	CALL_3
0x40011b3	          0x4889e8	                            mov rax, rbp	      1102	dwarf2.c	FUNCTION_21	IF_1
0x40011b6	      0xe9c7080000	                           jmp 0x4001a82	      1102	dwarf2.c	FUNCTION_21	IF_1
0x40011bb	        0x4d8b7e10	            mov r15, qword [r14 + 0x10] 	      1093	dwarf2.c	FUNCTION_21
0x40011bf	        0x41895d04	                mov dword [r13 + 4], ebx	      1105	dwarf2.c	FUNCTION_21
0x40011c3	          0x83fb10	                           cmp ebx, 0x10	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40011c6	     0xf842d010000	                            je 0x40012f9	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40011cc	          0x83fb10	                           cmp ebx, 0x10	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40011cf	     0xf8786000000	                            ja 0x400125b	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40011d5	          0x83fb08	                              cmp ebx, 8	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40011d8	     0xf84e1020000	                            je 0x40014bf	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40011de	          0x83fb08	                              cmp ebx, 8	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40011e1	            0x773c	                            ja 0x400121f	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40011e3	          0x83fb04	                              cmp ebx, 4	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40011e6	     0xf8422020000	                            je 0x400140e	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40011ec	          0x83fb04	                              cmp ebx, 4	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40011ef	            0x7717	                            ja 0x4001208	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40011f1	          0x83fb01	                              cmp ebx, 1	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40011f4	     0xf8452010000	                            je 0x400134c	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40011fa	          0x83fb03	                              cmp ebx, 3	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40011fd	     0xf84af010000	                            je 0x40013b2	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001203	      0xe92c080000	                           jmp 0x4001a34	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001208	          0x83fb06	                              cmp ebx, 6	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x400120b	     0xf8476020000	                            je 0x4001487	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001211	          0x83fb06	                              cmp ebx, 6	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001214	     0xf8650020000	                           jbe 0x400146a	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x400121a	      0xe985020000	                           jmp 0x40014a4	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x400121f	          0x83fb0c	                            cmp ebx, 0xc	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001222	     0xf845f060000	                            je 0x4001887	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001228	          0x83fb0c	                            cmp ebx, 0xc	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x400122b	            0x7717	                            ja 0x4001244	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x400122d	          0x83fb0a	                            cmp ebx, 0xa	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001230	     0xf84d6050000	                            je 0x400180c	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001236	          0x83fb0a	                            cmp ebx, 0xa	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001239	     0xf872b060000	                            ja 0x400186a	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x400123f	      0xe95f050000	                           jmp 0x40017a3	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001244	          0x83fb0e	                            cmp ebx, 0xe	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001247	     0xf8495020000	                            je 0x40014e2	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x400124d	          0x83fb0e	                            cmp ebx, 0xe	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001250	     0xf865e060000	                           jbe 0x40018b4	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001256	      0xe981060000	                           jmp 0x40018dc	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x400125b	          0x83fb17	                           cmp ebx, 0x17	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x400125e	     0xf840a010000	                            je 0x400136e	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001264	          0x83fb17	                           cmp ebx, 0x17	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001267	            0x773c	                            ja 0x40012a5	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001269	          0x83fb13	                           cmp ebx, 0x13	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x400126c	     0xf84cc060000	                            je 0x400193e	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001272	          0x83fb13	                           cmp ebx, 0x13	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001275	            0x7717	                            ja 0x400128e	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001277	          0x83fb11	                           cmp ebx, 0x11	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x400127a	     0xf8484060000	                            je 0x4001904	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001280	          0x83fb12	                           cmp ebx, 0x12	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001283	     0xf8498060000	                            je 0x4001921	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001289	      0xe9a6070000	                           jmp 0x4001a34	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x400128e	          0x83fb15	                           cmp ebx, 0x15	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001291	     0xf84fa060000	                            je 0x4001991	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001297	          0x83fb15	                           cmp ebx, 0x15	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x400129a	     0xf86bb060000	                           jbe 0x400195b	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40012a0	      0xe914070000	                           jmp 0x40019b9	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40012a5	          0x83fb20	                           cmp ebx, 0x20	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40012a8	     0xf84c8060000	                            je 0x4001976	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40012ae	          0x83fb20	                           cmp ebx, 0x20	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40012b1	            0x7720	                            ja 0x40012d3	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40012b3	          0x83fb19	                           cmp ebx, 0x19	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40012b6	     0xf84e8050000	                            je 0x40018a4	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40012bc	          0x83fb19	                           cmp ebx, 0x19	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40012bf	     0xf82de040000	                            jb 0x40017a3	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40012c5	          0x83fb1f	                           cmp ebx, 0x1f	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40012c8	     0xf84dd020000	                            je 0x40015ab	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40012ce	      0xe961070000	                           jmp 0x4001a34	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40012d3	    0x81fb201f0000	                         cmp ebx, 0x1f20	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40012d9	     0xf848f000000	                            je 0x400136e	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40012df	    0x81fb211f0000	                         cmp ebx, 0x1f21	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40012e5	     0xf8489030000	                            je 0x4001674	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40012eb	          0x83fb21	                           cmp ebx, 0x21	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40012ee	     0xf8540070000	                           jne 0x4001a34	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40012f4	      0xe925070000	                           jmp 0x4001a1e	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40012f9	    0x418b86a80000	            mov eax, dword [r14 + 0xa8] 	      1112	dwarf2.c	FUNCTION_21	SWITCH_1	IF_2
0x4001300	          0x83e803	                              sub eax, 3	      1112	dwarf2.c	FUNCTION_21	SWITCH_1	IF_2
0x4001303	          0x83f801	                              cmp eax, 1	      1112	dwarf2.c	FUNCTION_21	SWITCH_1	IF_2
0x4001306	            0x7744	                            ja 0x400134c	      1112	dwarf2.c	FUNCTION_21	SWITCH_1	IF_2
0x4001308	    0x4180bead0000	                cmp byte [r14 + 0xad], 4	      1114	dwarf2.c	FUNCTION_21	SWITCH_1	IF_2	IF_3
0x4001310	            0x7517	                           jne 0x4001329	      1114	dwarf2.c	FUNCTION_21	SWITCH_1	IF_2	IF_3
0x4001312	        0x498b7e10	            mov rdi, qword [r14 + 0x10] 	      1115	dwarf2.c	FUNCTION_21	SWITCH_1	IF_2	CALL_4
0x4001316	          0x4c89e2	                            mov rdx, r12	      1115	dwarf2.c	FUNCTION_21	SWITCH_1	IF_2	CALL_4
0x4001319	          0x4889ee	                            mov rsi, rbp	      1115	dwarf2.c	FUNCTION_21	SWITCH_1	IF_2	CALL_4
0x400131c	      0xe841edffff	                   call sym.read_4_bytes	      1115	dwarf2.c	FUNCTION_21	SWITCH_1	IF_2	CALL_4
0x4001321	            0x89c0	                            mov eax, eax	      1115	dwarf2.c	FUNCTION_21	SWITCH_1	IF_2	CALL_4
0x4001323	        0x49894508	                mov qword [r13 + 8], rax	      1115	dwarf2.c	FUNCTION_21	SWITCH_1	IF_2	CALL_4
0x4001327	            0xeb13	                           jmp 0x400133c	      1115	dwarf2.c	FUNCTION_21	SWITCH_1	IF_2	CALL_4
0x4001329	        0x498b7e10	            mov rdi, qword [r14 + 0x10] 	      1117	dwarf2.c	FUNCTION_21	SWITCH_1	IF_2	CALL_5
0x400132d	          0x4c89e2	                            mov rdx, r12	      1117	dwarf2.c	FUNCTION_21	SWITCH_1	IF_2	CALL_5
0x4001330	          0x4889ee	                            mov rsi, rbp	      1117	dwarf2.c	FUNCTION_21	SWITCH_1	IF_2	CALL_5
0x4001333	      0xe84cedffff	                   call sym.read_8_bytes	      1117	dwarf2.c	FUNCTION_21	SWITCH_1	IF_2	CALL_5
0x4001338	        0x49894508	                mov qword [r13 + 8], rax	      1117	dwarf2.c	FUNCTION_21	SWITCH_1	IF_2	CALL_5
0x400133c	    0x410fb686ad00	           movzx eax, byte [r14 + 0xad] 	      1118	dwarf2.c	FUNCTION_21	SWITCH_1	IF_2
0x4001344	          0x4801e8	                            add rax, rbp	      1118	dwarf2.c	FUNCTION_21	SWITCH_1	IF_2
0x4001347	      0xe936070000	                           jmp 0x4001a82	      1119	dwarf2.c	FUNCTION_21	SWITCH_1	IF_2
0x400134c	          0x4c89e2	                            mov rdx, r12	      1123	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_6
0x400134f	          0x4889ee	                            mov rsi, rbp	      1123	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_6
0x4001352	          0x4c89f7	                            mov rdi, r14	      1123	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_6
0x4001355	      0xe803f6ffff	                   call sym.read_address	      1123	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_6
0x400135a	        0x49894508	                mov qword [r13 + 8], rax	      1123	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_6
0x400135e	    0x410fb686ac00	           movzx eax, byte [r14 + 0xac] 	      1124	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001366	          0x4801e8	                            add rax, rbp	      1124	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001369	      0xe914070000	                           jmp 0x4001a82	      1125	dwarf2.c	FUNCTION_21	SWITCH_1
0x400136e	    0x4180bead0000	                cmp byte [r14 + 0xad], 4	      1128	dwarf2.c	FUNCTION_21	SWITCH_1	IF_4
0x4001376	            0x7517	                           jne 0x400138f	      1128	dwarf2.c	FUNCTION_21	SWITCH_1	IF_4
0x4001378	        0x498b7e10	            mov rdi, qword [r14 + 0x10] 	      1129	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_7
0x400137c	          0x4c89e2	                            mov rdx, r12	      1129	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_7
0x400137f	          0x4889ee	                            mov rsi, rbp	      1129	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_7
0x4001382	      0xe8dbecffff	                   call sym.read_4_bytes	      1129	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_7
0x4001387	            0x89c0	                            mov eax, eax	      1129	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_7
0x4001389	        0x49894508	                mov qword [r13 + 8], rax	      1129	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_7
0x400138d	            0xeb13	                           jmp 0x40013a2	      1129	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_7
0x400138f	        0x498b7e10	            mov rdi, qword [r14 + 0x10] 	      1131	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_8
0x4001393	          0x4c89e2	                            mov rdx, r12	      1131	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_8
0x4001396	          0x4889ee	                            mov rsi, rbp	      1131	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_8
0x4001399	      0xe8e6ecffff	                   call sym.read_8_bytes	      1131	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_8
0x400139e	        0x49894508	                mov qword [r13 + 8], rax	      1131	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_8
0x40013a2	    0x410fb686ad00	           movzx eax, byte [r14 + 0xad] 	      1132	dwarf2.c	FUNCTION_21	SWITCH_1
0x40013aa	          0x4801e8	                            add rax, rbp	      1132	dwarf2.c	FUNCTION_21	SWITCH_1
0x40013ad	      0xe9d0060000	                           jmp 0x4001a82	      1133	dwarf2.c	FUNCTION_21	SWITCH_1
0x40013b2	      0xbe10000000	                           mov esi, 0x10	      1136	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_9
0x40013b7	          0x4c89ff	                            mov rdi, r15	      1136	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_9
0x40013ba	      0xe800000000	                          call 0x40013bf	      1136	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_9
0x40013bf	          0x4889c3	                            mov rbx, rax	      1136	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_9
0x40013c2	          0x4885c0	                           test rax, rax	      1137	dwarf2.c	FUNCTION_21	SWITCH_1	IF_5
0x40013c5	     0xf849d060000	                            je 0x4001a68	      1137	dwarf2.c	FUNCTION_21	SWITCH_1	IF_5
0x40013cb	          0x4c89e2	                            mov rdx, r12	      1139	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_10
0x40013ce	          0x4889ee	                            mov rsi, rbp	      1139	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_10
0x40013d1	          0x4c89ff	                            mov rdi, r15	      1139	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_10
0x40013d4	      0xe867ecffff	                   call sym.read_2_bytes	      1139	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_10
0x40013d9	            0x8903	                    mov dword [rbx], eax	      1139	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_10
0x40013db	        0x4883c502	                              add rbp, 2	      1140	dwarf2.c	FUNCTION_21	SWITCH_1
0x40013df	            0x89c0	                            mov eax, eax	       631	dwarf2.c	FUNCTION_11
0x40013e1	          0x4801e8	                            add rax, rbp	       631	dwarf2.c	FUNCTION_11
0x40013e4	          0x4939c4	                            cmp r12, rax	       633	dwarf2.c	FUNCTION_11	IF_1
0x40013e7	            0x7205	                            jb 0x40013ee	       633	dwarf2.c	FUNCTION_11	IF_1
0x40013e9	          0x4839c5	                            cmp rbp, rax	       633	dwarf2.c	FUNCTION_11	IF_1
0x40013ec	            0x7613	                           jbe 0x4001401	       633	dwarf2.c	FUNCTION_11	IF_1
0x40013ee	    0x48c743080000	                  mov qword [rbx + 8], 0	       635	dwarf2.c	FUNCTION_11	IF_1
0x40013f6	    0xc70300000000	                      mov dword [rbx], 0	       636	dwarf2.c	FUNCTION_11	IF_1
0x40013fc	          0x4c89e0	                            mov rax, r12	       637	dwarf2.c	FUNCTION_11	IF_1
0x40013ff	            0xeb04	                           jmp 0x4001405	       637	dwarf2.c	FUNCTION_11	IF_1
0x4001401	        0x48896b08	                mov qword [rbx + 8], rbp	       641	dwarf2.c	FUNCTION_11	ELSE_1
0x4001405	        0x49895d08	                mov qword [r13 + 8], rbx	      1142	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001409	      0xe974060000	                           jmp 0x4001a82	      1143	dwarf2.c	FUNCTION_21	SWITCH_1
0x400140e	      0xbe10000000	                           mov esi, 0x10	      1146	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_12
0x4001413	          0x4c89ff	                            mov rdi, r15	      1146	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_12
0x4001416	      0xe800000000	                          call 0x400141b	      1146	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_12
0x400141b	          0x4889c3	                            mov rbx, rax	      1146	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_12
0x400141e	          0x4885c0	                           test rax, rax	      1147	dwarf2.c	FUNCTION_21	SWITCH_1	IF_6
0x4001421	     0xf8448060000	                            je 0x4001a6f	      1147	dwarf2.c	FUNCTION_21	SWITCH_1	IF_6
0x4001427	          0x4c89e2	                            mov rdx, r12	      1149	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_13
0x400142a	          0x4889ee	                            mov rsi, rbp	      1149	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_13
0x400142d	          0x4c89ff	                            mov rdi, r15	      1149	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_13
0x4001430	      0xe82decffff	                   call sym.read_4_bytes	      1149	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_13
0x4001435	            0x8903	                    mov dword [rbx], eax	      1149	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_13
0x4001437	        0x4883c504	                              add rbp, 4	      1150	dwarf2.c	FUNCTION_21	SWITCH_1
0x400143b	            0x89c0	                            mov eax, eax	       631	dwarf2.c	FUNCTION_11
0x400143d	          0x4801e8	                            add rax, rbp	       631	dwarf2.c	FUNCTION_11
0x4001440	          0x4939c4	                            cmp r12, rax	       633	dwarf2.c	FUNCTION_11	IF_1
0x4001443	            0x7205	                            jb 0x400144a	       633	dwarf2.c	FUNCTION_11	IF_1
0x4001445	          0x4839c5	                            cmp rbp, rax	       633	dwarf2.c	FUNCTION_11	IF_1
0x4001448	            0x7613	                           jbe 0x400145d	       633	dwarf2.c	FUNCTION_11	IF_1
0x400144a	    0x48c743080000	                  mov qword [rbx + 8], 0	       635	dwarf2.c	FUNCTION_11	IF_1
0x4001452	    0xc70300000000	                      mov dword [rbx], 0	       636	dwarf2.c	FUNCTION_11	IF_1
0x4001458	          0x4c89e0	                            mov rax, r12	       637	dwarf2.c	FUNCTION_11	IF_1
0x400145b	            0xeb04	                           jmp 0x4001461	       637	dwarf2.c	FUNCTION_11	IF_1
0x400145d	        0x48896b08	                mov qword [rbx + 8], rbp	       641	dwarf2.c	FUNCTION_11	ELSE_1
0x4001461	        0x49895d08	                mov qword [r13 + 8], rbx	      1152	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001465	      0xe918060000	                           jmp 0x4001a82	      1153	dwarf2.c	FUNCTION_21	SWITCH_1
0x400146a	          0x4c89e2	                            mov rdx, r12	      1155	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_15
0x400146d	          0x4889ee	                            mov rsi, rbp	      1155	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_15
0x4001470	          0x4c89ff	                            mov rdi, r15	      1155	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_15
0x4001473	      0xe8c8ebffff	                   call sym.read_2_bytes	      1155	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_15
0x4001478	            0x89c0	                            mov eax, eax	      1155	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_15
0x400147a	        0x49894508	                mov qword [r13 + 8], rax	      1155	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_15
0x400147e	        0x488d4502	                      lea rax, [rbp + 2]	      1156	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001482	      0xe9fb050000	                           jmp 0x4001a82	      1157	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001487	          0x4c89e2	                            mov rdx, r12	      1159	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_16
0x400148a	          0x4889ee	                            mov rsi, rbp	      1159	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_16
0x400148d	          0x4c89ff	                            mov rdi, r15	      1159	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_16
0x4001490	      0xe8cdebffff	                   call sym.read_4_bytes	      1159	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_16
0x4001495	            0x89c0	                            mov eax, eax	      1159	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_16
0x4001497	        0x49894508	                mov qword [r13 + 8], rax	      1159	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_16
0x400149b	        0x488d4504	                      lea rax, [rbp + 4]	      1160	dwarf2.c	FUNCTION_21	SWITCH_1
0x400149f	      0xe9de050000	                           jmp 0x4001a82	      1161	dwarf2.c	FUNCTION_21	SWITCH_1
0x40014a4	          0x4c89e2	                            mov rdx, r12	      1163	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_17
0x40014a7	          0x4889ee	                            mov rsi, rbp	      1163	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_17
0x40014aa	          0x4c89ff	                            mov rdi, r15	      1163	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_17
0x40014ad	      0xe8d2ebffff	                   call sym.read_8_bytes	      1163	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_17
0x40014b2	        0x49894508	                mov qword [r13 + 8], rax	      1163	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_17
0x40014b6	        0x488d4508	                      lea rax, [rbp + 8]	      1164	dwarf2.c	FUNCTION_21	SWITCH_1
0x40014ba	      0xe9c3050000	                           jmp 0x4001a82	      1165	dwarf2.c	FUNCTION_21	SWITCH_1
0x40014bf	      0x488d4c2414	                   lea rcx, [rsp + 0x14]	      1167	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_18
0x40014c4	          0x4c89e2	                            mov rdx, r12	      1167	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_18
0x40014c7	          0x4889ee	                            mov rsi, rbp	      1167	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_18
0x40014ca	          0x4c89ff	                            mov rdi, r15	      1167	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_18
0x40014cd	      0xe8d4ebffff	                    call sym.read_string	      1167	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_18
0x40014d2	        0x49894508	                mov qword [r13 + 8], rax	      1167	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_18
0x40014d6	        0x8b442414	            mov eax, dword [rsp + 0x14] 	      1168	dwarf2.c	FUNCTION_21	SWITCH_1
0x40014da	          0x4801e8	                            add rax, rbp	      1168	dwarf2.c	FUNCTION_21	SWITCH_1
0x40014dd	      0xe9a0050000	                           jmp 0x4001a82	      1169	dwarf2.c	FUNCTION_21	SWITCH_1
0x40014e2	    0x4d8bbea00000	            mov r15, qword [r14 + 0xa0] 	       698	dwarf2.c	FUNCTION_13
0x40014e9	    0x410fb696ad00	           movzx edx, byte [r14 + 0xad] 	       701	dwarf2.c	FUNCTION_13	IF_1
0x40014f1	           0xfb6c2	                           movzx eax, dl	       701	dwarf2.c	FUNCTION_13	IF_1
0x40014f4	          0x4801e8	                            add rax, rbp	       701	dwarf2.c	FUNCTION_13	IF_1
0x40014f7	          0x4939c4	                            cmp r12, rax	       701	dwarf2.c	FUNCTION_13	IF_1
0x40014fa	            0x7312	                           jae 0x400150e	       701	dwarf2.c	FUNCTION_13	IF_1
0x40014fc	    0xc74424140000	               mov dword [rsp + 0x14], 0	       703	dwarf2.c	FUNCTION_13	IF_1
0x4001504	      0xbb00000000	                              mov ebx, 0	       704	dwarf2.c	FUNCTION_13	IF_1
0x4001509	      0xe98d000000	                           jmp 0x400159b	       704	dwarf2.c	FUNCTION_13	IF_1
0x400150e	          0x80fa04	                               cmp dl, 4	       707	dwarf2.c	FUNCTION_13	IF_2
0x4001511	            0x7513	                           jne 0x4001526	       707	dwarf2.c	FUNCTION_13	IF_2
0x4001513	        0x498b7e10	            mov rdi, qword [r14 + 0x10] 	       708	dwarf2.c	FUNCTION_13	CALL_1
0x4001517	          0x4c89e2	                            mov rdx, r12	       708	dwarf2.c	FUNCTION_13	CALL_1
0x400151a	          0x4889ee	                            mov rsi, rbp	       708	dwarf2.c	FUNCTION_13	CALL_1
0x400151d	      0xe840ebffff	                   call sym.read_4_bytes	       708	dwarf2.c	FUNCTION_13	CALL_1
0x4001522	            0x89c3	                            mov ebx, eax	       708	dwarf2.c	FUNCTION_13	CALL_1
0x4001524	            0xeb12	                           jmp 0x4001538	       708	dwarf2.c	FUNCTION_13	CALL_1
0x4001526	        0x498b7e10	            mov rdi, qword [r14 + 0x10] 	       710	dwarf2.c	FUNCTION_13	CALL_2
0x400152a	          0x4c89e2	                            mov rdx, r12	       710	dwarf2.c	FUNCTION_13	CALL_2
0x400152d	          0x4889ee	                            mov rsi, rbp	       710	dwarf2.c	FUNCTION_13	CALL_2
0x4001530	      0xe84febffff	                   call sym.read_8_bytes	       710	dwarf2.c	FUNCTION_13	CALL_2
0x4001535	          0x4889c3	                            mov rbx, rax	       710	dwarf2.c	FUNCTION_13	CALL_2
0x4001538	    0x410fb686ad00	           movzx eax, byte [r14 + 0xad] 	       712	dwarf2.c	FUNCTION_13
0x4001540	        0x89442414	             mov dword [rsp + 0x14], eax	       712	dwarf2.c	FUNCTION_13
0x4001544	        0x498b5778	            mov rdx, qword [r15 + 0x78] 	       714	dwarf2.c	FUNCTION_13	IF_3	CALL_3
0x4001548	        0x498b4710	            mov rax, qword [r15 + 0x10] 	       714	dwarf2.c	FUNCTION_13	IF_3	CALL_3
0x400154c	    0x488db0e00000	                   lea rsi, [rax + 0xe0]	       714	dwarf2.c	FUNCTION_13	IF_3	CALL_3
0x4001553	        0x498b7e10	            mov rdi, qword [r14 + 0x10] 	       714	dwarf2.c	FUNCTION_13	IF_3	CALL_3
0x4001557	    0x4d8d8fa80000	                    lea r9, [r15 + 0xa8]	       714	dwarf2.c	FUNCTION_13	IF_3	CALL_3
0x400155e	    0x4d8d87a00000	                    lea r8, [r15 + 0xa0]	       714	dwarf2.c	FUNCTION_13	IF_3	CALL_3
0x4001565	          0x4889d9	                            mov rcx, rbx	       714	dwarf2.c	FUNCTION_13	IF_3	CALL_3
0x4001568	      0xe8bbf0ffff	                   call sym.read_section	       714	dwarf2.c	FUNCTION_13	IF_3	CALL_3
0x400156d	            0x85c0	                           test eax, eax	       714	dwarf2.c	FUNCTION_13	IF_3	CALL_3
0x400156f	            0x741e	                            je 0x400158f	       714	dwarf2.c	FUNCTION_13	IF_3	CALL_3
0x4001571	    0x493b9fa80000	            cmp rbx, qword [r15 + 0xa8] 	       719	dwarf2.c	FUNCTION_13	IF_4
0x4001578	            0x731c	                           jae 0x4001596	       719	dwarf2.c	FUNCTION_13	IF_4
0x400157a	    0x49039fa00000	             add rbx, qword [r15 + 0xa0]	       721	dwarf2.c	FUNCTION_13
0x4001581	          0x803b00	                       cmp byte [rbx], 0	       724	dwarf2.c	FUNCTION_13
0x4001584	      0xb800000000	                              mov eax, 0	       724	dwarf2.c	FUNCTION_13
0x4001589	        0x480f44d8	                          cmove rbx, rax	       724	dwarf2.c	FUNCTION_13
0x400158d	            0xeb0c	                           jmp 0x400159b	       724	dwarf2.c	FUNCTION_13
0x400158f	      0xbb00000000	                              mov ebx, 0	       717	dwarf2.c	FUNCTION_13	IF_3
0x4001594	            0xeb05	                           jmp 0x400159b	       717	dwarf2.c	FUNCTION_13	IF_3
0x4001596	      0xbb00000000	                              mov ebx, 0	       720	dwarf2.c	FUNCTION_13	IF_4
0x400159b	        0x49895d08	                mov qword [r13 + 8], rbx	      1171	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_19
0x400159f	        0x8b442414	            mov eax, dword [rsp + 0x14] 	      1172	dwarf2.c	FUNCTION_21	SWITCH_1
0x40015a3	          0x4801e8	                            add rax, rbp	      1172	dwarf2.c	FUNCTION_21	SWITCH_1
0x40015a6	      0xe9d7040000	                           jmp 0x4001a82	      1173	dwarf2.c	FUNCTION_21	SWITCH_1
0x40015ab	    0x4d8bbea00000	            mov r15, qword [r14 + 0xa0] 	       736	dwarf2.c	FUNCTION_14
0x40015b2	    0x410fb696ad00	           movzx edx, byte [r14 + 0xad] 	       739	dwarf2.c	FUNCTION_14	IF_1
0x40015ba	           0xfb6c2	                           movzx eax, dl	       739	dwarf2.c	FUNCTION_14	IF_1
0x40015bd	          0x4801e8	                            add rax, rbp	       739	dwarf2.c	FUNCTION_14	IF_1
0x40015c0	          0x4939c4	                            cmp r12, rax	       739	dwarf2.c	FUNCTION_14	IF_1
0x40015c3	            0x7312	                           jae 0x40015d7	       739	dwarf2.c	FUNCTION_14	IF_1
0x40015c5	    0xc74424140000	               mov dword [rsp + 0x14], 0	       741	dwarf2.c	FUNCTION_14	IF_1
0x40015cd	      0xbb00000000	                              mov ebx, 0	       742	dwarf2.c	FUNCTION_14	IF_1
0x40015d2	      0xe98d000000	                           jmp 0x4001664	       742	dwarf2.c	FUNCTION_14	IF_1
0x40015d7	          0x80fa04	                               cmp dl, 4	       745	dwarf2.c	FUNCTION_14	IF_2
0x40015da	            0x7513	                           jne 0x40015ef	       745	dwarf2.c	FUNCTION_14	IF_2
0x40015dc	        0x498b7e10	            mov rdi, qword [r14 + 0x10] 	       746	dwarf2.c	FUNCTION_14	CALL_1
0x40015e0	          0x4c89e2	                            mov rdx, r12	       746	dwarf2.c	FUNCTION_14	CALL_1
0x40015e3	          0x4889ee	                            mov rsi, rbp	       746	dwarf2.c	FUNCTION_14	CALL_1
0x40015e6	      0xe877eaffff	                   call sym.read_4_bytes	       746	dwarf2.c	FUNCTION_14	CALL_1
0x40015eb	            0x89c3	                            mov ebx, eax	       746	dwarf2.c	FUNCTION_14	CALL_1
0x40015ed	            0xeb12	                           jmp 0x4001601	       746	dwarf2.c	FUNCTION_14	CALL_1
0x40015ef	        0x498b7e10	            mov rdi, qword [r14 + 0x10] 	       748	dwarf2.c	FUNCTION_14	CALL_2
0x40015f3	          0x4c89e2	                            mov rdx, r12	       748	dwarf2.c	FUNCTION_14	CALL_2
0x40015f6	          0x4889ee	                            mov rsi, rbp	       748	dwarf2.c	FUNCTION_14	CALL_2
0x40015f9	      0xe886eaffff	                   call sym.read_8_bytes	       748	dwarf2.c	FUNCTION_14	CALL_2
0x40015fe	          0x4889c3	                            mov rbx, rax	       748	dwarf2.c	FUNCTION_14	CALL_2
0x4001601	    0x410fb686ad00	           movzx eax, byte [r14 + 0xad] 	       750	dwarf2.c	FUNCTION_14
0x4001609	        0x89442414	             mov dword [rsp + 0x14], eax	       750	dwarf2.c	FUNCTION_14
0x400160d	        0x498b5778	            mov rdx, qword [r15 + 0x78] 	       752	dwarf2.c	FUNCTION_14	IF_3	CALL_3
0x4001611	        0x498b4710	            mov rax, qword [r15 + 0x10] 	       752	dwarf2.c	FUNCTION_14	IF_3	CALL_3
0x4001615	    0x488db0000100	                  lea rsi, [rax + 0x100]	       752	dwarf2.c	FUNCTION_14	IF_3	CALL_3
0x400161c	        0x498b7e10	            mov rdi, qword [r14 + 0x10] 	       752	dwarf2.c	FUNCTION_14	IF_3	CALL_3
0x4001620	    0x4d8d8fb80000	                    lea r9, [r15 + 0xb8]	       752	dwarf2.c	FUNCTION_14	IF_3	CALL_3
0x4001627	    0x4d8d87b00000	                    lea r8, [r15 + 0xb0]	       752	dwarf2.c	FUNCTION_14	IF_3	CALL_3
0x400162e	          0x4889d9	                            mov rcx, rbx	       752	dwarf2.c	FUNCTION_14	IF_3	CALL_3
0x4001631	      0xe8f2efffff	                   call sym.read_section	       752	dwarf2.c	FUNCTION_14	IF_3	CALL_3
0x4001636	            0x85c0	                           test eax, eax	       752	dwarf2.c	FUNCTION_14	IF_3	CALL_3
0x4001638	            0x741e	                            je 0x4001658	       752	dwarf2.c	FUNCTION_14	IF_3	CALL_3
0x400163a	    0x493b9fb80000	            cmp rbx, qword [r15 + 0xb8] 	       758	dwarf2.c	FUNCTION_14	IF_4
0x4001641	            0x731c	                           jae 0x400165f	       758	dwarf2.c	FUNCTION_14	IF_4
0x4001643	    0x49039fb00000	             add rbx, qword [r15 + 0xb0]	       760	dwarf2.c	FUNCTION_14
0x400164a	          0x803b00	                       cmp byte [rbx], 0	       763	dwarf2.c	FUNCTION_14
0x400164d	      0xb800000000	                              mov eax, 0	       763	dwarf2.c	FUNCTION_14
0x4001652	        0x480f44d8	                          cmove rbx, rax	       763	dwarf2.c	FUNCTION_14
0x4001656	            0xeb0c	                           jmp 0x4001664	       763	dwarf2.c	FUNCTION_14
0x4001658	      0xbb00000000	                              mov ebx, 0	       756	dwarf2.c	FUNCTION_14	IF_3
0x400165d	            0xeb05	                           jmp 0x4001664	       756	dwarf2.c	FUNCTION_14	IF_3
0x400165f	      0xbb00000000	                              mov ebx, 0	       759	dwarf2.c	FUNCTION_14	IF_4
0x4001664	        0x49895d08	                mov qword [r13 + 8], rbx	      1175	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_20
0x4001668	        0x8b442414	            mov eax, dword [rsp + 0x14] 	      1176	dwarf2.c	FUNCTION_21	SWITCH_1
0x400166c	          0x4801e8	                            add rax, rbp	      1176	dwarf2.c	FUNCTION_21	SWITCH_1
0x400166f	      0xe90e040000	                           jmp 0x4001a82	      1177	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001674	    0x4d8bbea00000	            mov r15, qword [r14 + 0xa0] 	       777	dwarf2.c	FUNCTION_15
0x400167b	    0x410fb696ad00	           movzx edx, byte [r14 + 0xad] 	       780	dwarf2.c	FUNCTION_15	IF_1
0x4001683	           0xfb6c2	                           movzx eax, dl	       780	dwarf2.c	FUNCTION_15	IF_1
0x4001686	          0x4801e8	                            add rax, rbp	       780	dwarf2.c	FUNCTION_15	IF_1
0x4001689	          0x4939c4	                            cmp r12, rax	       780	dwarf2.c	FUNCTION_15	IF_1
0x400168c	            0x7312	                           jae 0x40016a0	       780	dwarf2.c	FUNCTION_15	IF_1
0x400168e	    0xc74424140000	               mov dword [rsp + 0x14], 0	       782	dwarf2.c	FUNCTION_15	IF_1
0x4001696	      0xbb00000000	                              mov ebx, 0	       783	dwarf2.c	FUNCTION_15	IF_1
0x400169b	      0xe9f3000000	                           jmp 0x4001793	       783	dwarf2.c	FUNCTION_15	IF_1
0x40016a0	          0x80fa04	                               cmp dl, 4	       786	dwarf2.c	FUNCTION_15	IF_2
0x40016a3	            0x7513	                           jne 0x40016b8	       786	dwarf2.c	FUNCTION_15	IF_2
0x40016a5	        0x498b7e10	            mov rdi, qword [r14 + 0x10] 	       787	dwarf2.c	FUNCTION_15	CALL_1
0x40016a9	          0x4c89e2	                            mov rdx, r12	       787	dwarf2.c	FUNCTION_15	CALL_1
0x40016ac	          0x4889ee	                            mov rsi, rbp	       787	dwarf2.c	FUNCTION_15	CALL_1
0x40016af	      0xe8aee9ffff	                   call sym.read_4_bytes	       787	dwarf2.c	FUNCTION_15	CALL_1
0x40016b4	            0x89c3	                            mov ebx, eax	       787	dwarf2.c	FUNCTION_15	CALL_1
0x40016b6	            0xeb12	                           jmp 0x40016ca	       787	dwarf2.c	FUNCTION_15	CALL_1
0x40016b8	        0x498b7e10	            mov rdi, qword [r14 + 0x10] 	       789	dwarf2.c	FUNCTION_15	CALL_2
0x40016bc	          0x4c89e2	                            mov rdx, r12	       789	dwarf2.c	FUNCTION_15	CALL_2
0x40016bf	          0x4889ee	                            mov rsi, rbp	       789	dwarf2.c	FUNCTION_15	CALL_2
0x40016c2	      0xe8bde9ffff	                   call sym.read_8_bytes	       789	dwarf2.c	FUNCTION_15	CALL_2
0x40016c7	          0x4889c3	                            mov rbx, rax	       789	dwarf2.c	FUNCTION_15	CALL_2
0x40016ca	    0x410fb686ad00	           movzx eax, byte [r14 + 0xad] 	       791	dwarf2.c	FUNCTION_15
0x40016d2	        0x89442414	             mov dword [rsp + 0x14], eax	       791	dwarf2.c	FUNCTION_15
0x40016d6	      0x49837f4800	               cmp qword [r15 + 0x48], 0	       793	dwarf2.c	FUNCTION_15	IF_3
0x40016db	            0x755c	                           jne 0x4001739	       793	dwarf2.c	FUNCTION_15	IF_3
0x40016dd	        0x498b7e10	            mov rdi, qword [r14 + 0x10] 	       796	dwarf2.c	FUNCTION_15	IF_3	CALL_3
0x40016e1	      0xbe00000000	                              mov esi, 0	       796	dwarf2.c	FUNCTION_15	IF_3	CALL_3
0x40016e6	      0xe800000000	                          call 0x40016eb	       796	dwarf2.c	FUNCTION_15	IF_3	CALL_3
0x40016eb	      0x4889442408	                mov qword [rsp + 8], rax	       796	dwarf2.c	FUNCTION_15	IF_3	CALL_3
0x40016f0	          0x4885c0	                           test rax, rax	       798	dwarf2.c	FUNCTION_15	IF_3	IF_4
0x40016f3	     0xf8487000000	                            je 0x4001780	       798	dwarf2.c	FUNCTION_15	IF_3	IF_4
0x40016f9	      0xbe00000000	                              mov esi, 0	       801	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_4
0x40016fe	          0x4889c7	                            mov rdi, rax	       801	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_4
0x4001701	      0xe800000000	                          call 0x4001706	       801	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_4
0x4001706	          0x4989c4	                            mov r12, rax	       801	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_4
0x4001709	          0x4885c0	                           test rax, rax	       801	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_4
0x400170c	            0x7416	                            je 0x4001724	       801	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_4
0x400170e	      0xbe01000000	                              mov esi, 1	       802	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_5
0x4001713	          0x4889c7	                            mov rdi, rax	       802	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_5
0x4001716	      0xe800000000	                          call 0x400171b	       802	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_5
0x400171b	            0x85c0	                           test eax, eax	       802	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_5
0x400171d	            0x7516	                           jne 0x4001735	       802	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_5
0x400171f	      0xe970030000	                           jmp 0x4001a94	       802	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_5
0x4001724	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       808	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_7
0x4001729	      0xe800000000	                          call 0x400172e	       808	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_7
0x400172e	      0xbb00000000	                              mov ebx, 0	       809	dwarf2.c	FUNCTION_15	IF_3	IF_5
0x4001733	            0xeb5e	                           jmp 0x4001793	       809	dwarf2.c	FUNCTION_15	IF_3	IF_5
0x4001735	        0x4d896748	             mov qword [r15 + 0x48], r12	       811	dwarf2.c	FUNCTION_15	IF_3
0x4001739	        0x498b4710	            mov rax, qword [r15 + 0x10] 	       814	dwarf2.c	FUNCTION_15	IF_7	CALL_8
0x400173d	    0x488db0f00000	                   lea rsi, [rax + 0xf0]	       814	dwarf2.c	FUNCTION_15	IF_7	CALL_8
0x4001744	    0x498b86a00000	            mov rax, qword [r14 + 0xa0] 	       814	dwarf2.c	FUNCTION_15	IF_7	CALL_8
0x400174b	        0x488b7848	            mov rdi, qword [rax + 0x48] 	       814	dwarf2.c	FUNCTION_15	IF_7	CALL_8
0x400174f	        0x4d8d4f58	                    lea r9, [r15 + 0x58]	       814	dwarf2.c	FUNCTION_15	IF_7	CALL_8
0x4001753	        0x4d8d4750	                    lea r8, [r15 + 0x50]	       814	dwarf2.c	FUNCTION_15	IF_7	CALL_8
0x4001757	          0x4889d9	                            mov rcx, rbx	       814	dwarf2.c	FUNCTION_15	IF_7	CALL_8
0x400175a	      0xba00000000	                              mov edx, 0	       814	dwarf2.c	FUNCTION_15	IF_7	CALL_8
0x400175f	      0xe8c4eeffff	                   call sym.read_section	       814	dwarf2.c	FUNCTION_15	IF_7	CALL_8
0x4001764	            0x85c0	                           test eax, eax	       814	dwarf2.c	FUNCTION_15	IF_7	CALL_8
0x4001766	            0x741f	                            je 0x4001787	       814	dwarf2.c	FUNCTION_15	IF_7	CALL_8
0x4001768	        0x493b5f58	            cmp rbx, qword [r15 + 0x58] 	       822	dwarf2.c	FUNCTION_15	IF_8
0x400176c	            0x7320	                           jae 0x400178e	       822	dwarf2.c	FUNCTION_15	IF_8
0x400176e	        0x49035f50	             add rbx, qword [r15 + 0x50]	       824	dwarf2.c	FUNCTION_15
0x4001772	          0x803b00	                       cmp byte [rbx], 0	       828	dwarf2.c	FUNCTION_15
0x4001775	      0xb800000000	                              mov eax, 0	       828	dwarf2.c	FUNCTION_15
0x400177a	        0x480f44d8	                          cmove rbx, rax	       828	dwarf2.c	FUNCTION_15
0x400177e	            0xeb13	                           jmp 0x4001793	       828	dwarf2.c	FUNCTION_15
0x4001780	      0xbb00000000	                              mov ebx, 0	       799	dwarf2.c	FUNCTION_15	IF_3	IF_4
0x4001785	            0xeb0c	                           jmp 0x4001793	       799	dwarf2.c	FUNCTION_15	IF_3	IF_4
0x4001787	      0xbb00000000	                              mov ebx, 0	       820	dwarf2.c	FUNCTION_15	IF_7
0x400178c	            0xeb05	                           jmp 0x4001793	       820	dwarf2.c	FUNCTION_15	IF_7
0x400178e	      0xbb00000000	                              mov ebx, 0	       823	dwarf2.c	FUNCTION_15	IF_8
0x4001793	        0x49895d08	                mov qword [r13 + 8], rbx	      1179	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_21
0x4001797	        0x8b442414	            mov eax, dword [rsp + 0x14] 	      1180	dwarf2.c	FUNCTION_21	SWITCH_1
0x400179b	          0x4801e8	                            add rax, rbp	      1180	dwarf2.c	FUNCTION_21	SWITCH_1
0x400179e	      0xe9df020000	                           jmp 0x4001a82	      1181	dwarf2.c	FUNCTION_21	SWITCH_1
0x40017a3	      0xbe10000000	                           mov esi, 0x10	      1185	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_22
0x40017a8	          0x4c89ff	                            mov rdi, r15	      1185	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_22
0x40017ab	      0xe800000000	                          call 0x40017b0	      1185	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_22
0x40017b0	          0x4889c3	                            mov rbx, rax	      1185	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_22
0x40017b3	          0x4885c0	                           test rax, rax	      1186	dwarf2.c	FUNCTION_21	SWITCH_1	IF_7
0x40017b6	     0xf84ba020000	                            je 0x4001a76	      1186	dwarf2.c	FUNCTION_21	SWITCH_1	IF_7
0x40017bc	          0x4d89e0	                             mov r8, r12	      1188	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_23
0x40017bf	      0xb900000000	                              mov ecx, 0	      1188	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_23
0x40017c4	      0x488d542414	                   lea rdx, [rsp + 0x14]	      1188	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_23
0x40017c9	          0x4889ee	                            mov rsi, rbp	      1188	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_23
0x40017cc	          0x4c89ff	                            mov rdi, r15	      1188	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_23
0x40017cf	      0xe800000000	                          call 0x40017d4	      1188	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_23
0x40017d4	            0x8903	                    mov dword [rbx], eax	      1188	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_23
0x40017d6	        0x8b542414	            mov edx, dword [rsp + 0x14] 	      1190	dwarf2.c	FUNCTION_21	SWITCH_1
0x40017da	          0x4801d5	                            add rbp, rdx	      1190	dwarf2.c	FUNCTION_21	SWITCH_1
0x40017dd	            0x89c0	                            mov eax, eax	       631	dwarf2.c	FUNCTION_11
0x40017df	          0x4801e8	                            add rax, rbp	       631	dwarf2.c	FUNCTION_11
0x40017e2	          0x4939c4	                            cmp r12, rax	       633	dwarf2.c	FUNCTION_11	IF_1
0x40017e5	            0x7205	                            jb 0x40017ec	       633	dwarf2.c	FUNCTION_11	IF_1
0x40017e7	          0x4839c5	                            cmp rbp, rax	       633	dwarf2.c	FUNCTION_11	IF_1
0x40017ea	            0x7613	                           jbe 0x40017ff	       633	dwarf2.c	FUNCTION_11	IF_1
0x40017ec	    0x48c743080000	                  mov qword [rbx + 8], 0	       635	dwarf2.c	FUNCTION_11	IF_1
0x40017f4	    0xc70300000000	                      mov dword [rbx], 0	       636	dwarf2.c	FUNCTION_11	IF_1
0x40017fa	          0x4c89e0	                            mov rax, r12	       637	dwarf2.c	FUNCTION_11	IF_1
0x40017fd	            0xeb04	                           jmp 0x4001803	       637	dwarf2.c	FUNCTION_11	IF_1
0x40017ff	        0x48896b08	                mov qword [rbx + 8], rbp	       641	dwarf2.c	FUNCTION_11	ELSE_1
0x4001803	        0x49895d08	                mov qword [r13 + 8], rbx	      1192	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001807	      0xe976020000	                           jmp 0x4001a82	      1193	dwarf2.c	FUNCTION_21	SWITCH_1
0x400180c	      0xbe10000000	                           mov esi, 0x10	      1196	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_25
0x4001811	          0x4c89ff	                            mov rdi, r15	      1196	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_25
0x4001814	      0xe800000000	                          call 0x4001819	      1196	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_25
0x4001819	          0x4889c1	                            mov rcx, rax	      1196	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_25
0x400181c	          0x4885c0	                           test rax, rax	      1197	dwarf2.c	FUNCTION_21	SWITCH_1	IF_8
0x400181f	     0xf8458020000	                            je 0x4001a7d	      1197	dwarf2.c	FUNCTION_21	SWITCH_1	IF_8
0x4001825	        0x488d4501	                      lea rax, [rbp + 1]	       588	dwarf2.c	FUNCTION_6	IF_1
0x4001829	          0x4939c4	                            cmp r12, rax	       588	dwarf2.c	FUNCTION_6	IF_1
0x400182c	            0x7219	                            jb 0x4001847	       588	dwarf2.c	FUNCTION_6	IF_1
0x400182e	         0xfb65500	                   movzx edx, byte [rbp]	       590	dwarf2.c	FUNCTION_6	CALL_1
0x4001832	           0xfb6f2	                           movzx esi, dl	      1199	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_26
0x4001835	            0x8931	                    mov dword [rcx], esi	      1199	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_26
0x4001837	           0xfb6d2	                           movzx edx, dl	       631	dwarf2.c	FUNCTION_11
0x400183a	          0x4801c2	                            add rdx, rax	       631	dwarf2.c	FUNCTION_11
0x400183d	          0x4939d4	                            cmp r12, rdx	       633	dwarf2.c	FUNCTION_11	IF_1
0x4001840	            0x7205	                            jb 0x4001847	       633	dwarf2.c	FUNCTION_11	IF_1
0x4001842	          0x4839d0	                            cmp rax, rdx	       633	dwarf2.c	FUNCTION_11	IF_1
0x4001845	            0x7613	                           jbe 0x400185a	       633	dwarf2.c	FUNCTION_11	IF_1
0x4001847	    0x48c741080000	                  mov qword [rcx + 8], 0	       635	dwarf2.c	FUNCTION_11	IF_1
0x400184f	    0xc70100000000	                      mov dword [rcx], 0	       636	dwarf2.c	FUNCTION_11	IF_1
0x4001855	          0x4c89e0	                            mov rax, r12	       637	dwarf2.c	FUNCTION_11	IF_1
0x4001858	            0xeb07	                           jmp 0x4001861	       637	dwarf2.c	FUNCTION_11	IF_1
0x400185a	        0x48894108	                mov qword [rcx + 8], rax	       641	dwarf2.c	FUNCTION_11	ELSE_1
0x400185e	          0x4889d0	                            mov rax, rdx	       631	dwarf2.c	FUNCTION_11
0x4001861	        0x49894d08	                mov qword [r13 + 8], rcx	      1202	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001865	      0xe918020000	                           jmp 0x4001a82	      1203	dwarf2.c	FUNCTION_21	SWITCH_1
0x400186a	        0x488d4501	                      lea rax, [rbp + 1]	       588	dwarf2.c	FUNCTION_6	IF_1
0x400186e	      0xba00000000	                              mov edx, 0	       589	dwarf2.c	FUNCTION_6	IF_1
0x4001873	          0x4939c4	                            cmp r12, rax	       588	dwarf2.c	FUNCTION_6	IF_1
0x4001876	            0x7204	                            jb 0x400187c	       588	dwarf2.c	FUNCTION_6	IF_1
0x4001878	         0xfb65500	                   movzx edx, byte [rbp]	       590	dwarf2.c	FUNCTION_6	CALL_1
0x400187c	            0x89d6	                            mov esi, edx	      1205	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_28
0x400187e	        0x49897508	                mov qword [r13 + 8], rsi	      1205	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_28
0x4001882	      0xe9fb010000	                           jmp 0x4001a82	      1207	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001887	        0x488d4501	                      lea rax, [rbp + 1]	       588	dwarf2.c	FUNCTION_6	IF_1
0x400188b	      0xba00000000	                              mov edx, 0	       589	dwarf2.c	FUNCTION_6	IF_1
0x4001890	          0x4939c4	                            cmp r12, rax	       588	dwarf2.c	FUNCTION_6	IF_1
0x4001893	            0x7204	                            jb 0x4001899	       588	dwarf2.c	FUNCTION_6	IF_1
0x4001895	         0xfb65500	                   movzx edx, byte [rbp]	       590	dwarf2.c	FUNCTION_6	CALL_1
0x4001899	            0x89d6	                            mov esi, edx	      1209	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_29
0x400189b	        0x49897508	                mov qword [r13 + 8], rsi	      1209	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_29
0x400189f	      0xe9de010000	                           jmp 0x4001a82	      1211	dwarf2.c	FUNCTION_21	SWITCH_1
0x40018a4	    0x49c745080100	                  mov qword [r13 + 8], 1	      1213	dwarf2.c	FUNCTION_21	SWITCH_1
0x40018ac	          0x4889e8	                            mov rax, rbp	      1214	dwarf2.c	FUNCTION_21	SWITCH_1
0x40018af	      0xe9ce010000	                           jmp 0x4001a82	      1214	dwarf2.c	FUNCTION_21	SWITCH_1
0x40018b4	          0x4d89e0	                             mov r8, r12	      1216	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_30
0x40018b7	      0xb901000000	                              mov ecx, 1	      1216	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_30
0x40018bc	      0x488d542414	                   lea rdx, [rsp + 0x14]	      1216	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_30
0x40018c1	          0x4889ee	                            mov rsi, rbp	      1216	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_30
0x40018c4	          0x4c89ff	                            mov rdi, r15	      1216	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_30
0x40018c7	      0xe800000000	                          call 0x40018cc	      1216	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_30
0x40018cc	        0x49894508	                mov qword [r13 + 8], rax	      1216	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_30
0x40018d0	        0x8b442414	            mov eax, dword [rsp + 0x14] 	      1218	dwarf2.c	FUNCTION_21	SWITCH_1
0x40018d4	          0x4801e8	                            add rax, rbp	      1218	dwarf2.c	FUNCTION_21	SWITCH_1
0x40018d7	      0xe9a6010000	                           jmp 0x4001a82	      1219	dwarf2.c	FUNCTION_21	SWITCH_1
0x40018dc	          0x4d89e0	                             mov r8, r12	      1221	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_31
0x40018df	      0xb900000000	                              mov ecx, 0	      1221	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_31
0x40018e4	      0x488d542414	                   lea rdx, [rsp + 0x14]	      1221	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_31
0x40018e9	          0x4889ee	                            mov rsi, rbp	      1221	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_31
0x40018ec	          0x4c89ff	                            mov rdi, r15	      1221	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_31
0x40018ef	      0xe800000000	                          call 0x40018f4	      1221	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_31
0x40018f4	        0x49894508	                mov qword [r13 + 8], rax	      1221	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_31
0x40018f8	        0x8b442414	            mov eax, dword [rsp + 0x14] 	      1223	dwarf2.c	FUNCTION_21	SWITCH_1
0x40018fc	          0x4801e8	                            add rax, rbp	      1223	dwarf2.c	FUNCTION_21	SWITCH_1
0x40018ff	      0xe97e010000	                           jmp 0x4001a82	      1224	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001904	        0x488d4501	                      lea rax, [rbp + 1]	       588	dwarf2.c	FUNCTION_6	IF_1
0x4001908	      0xba00000000	                              mov edx, 0	       589	dwarf2.c	FUNCTION_6	IF_1
0x400190d	          0x4939c4	                            cmp r12, rax	       588	dwarf2.c	FUNCTION_6	IF_1
0x4001910	            0x7204	                            jb 0x4001916	       588	dwarf2.c	FUNCTION_6	IF_1
0x4001912	         0xfb65500	                   movzx edx, byte [rbp]	       590	dwarf2.c	FUNCTION_6	CALL_1
0x4001916	            0x89d6	                            mov esi, edx	      1226	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_32
0x4001918	        0x49897508	                mov qword [r13 + 8], rsi	      1226	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_32
0x400191c	      0xe961010000	                           jmp 0x4001a82	      1228	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001921	          0x4c89e2	                            mov rdx, r12	      1230	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_33
0x4001924	          0x4889ee	                            mov rsi, rbp	      1230	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_33
0x4001927	          0x4c89ff	                            mov rdi, r15	      1230	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_33
0x400192a	      0xe811e7ffff	                   call sym.read_2_bytes	      1230	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_33
0x400192f	            0x89c0	                            mov eax, eax	      1230	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_33
0x4001931	        0x49894508	                mov qword [r13 + 8], rax	      1230	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_33
0x4001935	        0x488d4502	                      lea rax, [rbp + 2]	      1231	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001939	      0xe944010000	                           jmp 0x4001a82	      1232	dwarf2.c	FUNCTION_21	SWITCH_1
0x400193e	          0x4c89e2	                            mov rdx, r12	      1234	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_34
0x4001941	          0x4889ee	                            mov rsi, rbp	      1234	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_34
0x4001944	          0x4c89ff	                            mov rdi, r15	      1234	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_34
0x4001947	      0xe816e7ffff	                   call sym.read_4_bytes	      1234	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_34
0x400194c	            0x89c0	                            mov eax, eax	      1234	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_34
0x400194e	        0x49894508	                mov qword [r13 + 8], rax	      1234	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_34
0x4001952	        0x488d4504	                      lea rax, [rbp + 4]	      1235	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001956	      0xe927010000	                           jmp 0x4001a82	      1236	dwarf2.c	FUNCTION_21	SWITCH_1
0x400195b	          0x4c89e2	                            mov rdx, r12	      1238	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_35
0x400195e	          0x4889ee	                            mov rsi, rbp	      1238	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_35
0x4001961	          0x4c89ff	                            mov rdi, r15	      1238	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_35
0x4001964	      0xe81be7ffff	                   call sym.read_8_bytes	      1238	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_35
0x4001969	        0x49894508	                mov qword [r13 + 8], rax	      1238	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_35
0x400196d	        0x488d4508	                      lea rax, [rbp + 8]	      1239	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001971	      0xe90c010000	                           jmp 0x4001a82	      1240	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001976	          0x4c89e2	                            mov rdx, r12	      1242	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_36
0x4001979	          0x4889ee	                            mov rsi, rbp	      1242	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_36
0x400197c	          0x4c89ff	                            mov rdi, r15	      1242	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_36
0x400197f	      0xe800e7ffff	                   call sym.read_8_bytes	      1242	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_36
0x4001984	        0x49894508	                mov qword [r13 + 8], rax	      1242	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_36
0x4001988	        0x488d4508	                      lea rax, [rbp + 8]	      1243	dwarf2.c	FUNCTION_21	SWITCH_1
0x400198c	      0xe9f1000000	                           jmp 0x4001a82	      1244	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001991	          0x4d89e0	                             mov r8, r12	      1246	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_37
0x4001994	      0xb900000000	                              mov ecx, 0	      1246	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_37
0x4001999	      0x488d542414	                   lea rdx, [rsp + 0x14]	      1246	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_37
0x400199e	          0x4889ee	                            mov rsi, rbp	      1246	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_37
0x40019a1	          0x4c89ff	                            mov rdi, r15	      1246	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_37
0x40019a4	      0xe800000000	                          call 0x40019a9	      1246	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_37
0x40019a9	        0x49894508	                mov qword [r13 + 8], rax	      1246	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_37
0x40019ad	        0x8b442414	            mov eax, dword [rsp + 0x14] 	      1248	dwarf2.c	FUNCTION_21	SWITCH_1
0x40019b1	          0x4801e8	                            add rax, rbp	      1248	dwarf2.c	FUNCTION_21	SWITCH_1
0x40019b4	      0xe9c9000000	                           jmp 0x4001a82	      1249	dwarf2.c	FUNCTION_21	SWITCH_1
0x40019b9	          0x4d89e0	                             mov r8, r12	      1251	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_38
0x40019bc	      0xb900000000	                              mov ecx, 0	      1251	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_38
0x40019c1	      0x488d542414	                   lea rdx, [rsp + 0x14]	      1251	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_38
0x40019c6	          0x4889ee	                            mov rsi, rbp	      1251	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_38
0x40019c9	          0x4c89ff	                            mov rdi, r15	      1251	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_38
0x40019cc	      0xe800000000	                          call 0x40019d1	      1251	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_38
0x40019d1	          0x4889c3	                            mov rbx, rax	      1251	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_38
0x40019d4	        0x8b442414	            mov eax, dword [rsp + 0x14] 	      1253	dwarf2.c	FUNCTION_21	SWITCH_1
0x40019d8	          0x4801c5	                            add rbp, rax	      1253	dwarf2.c	FUNCTION_21	SWITCH_1
0x40019db	          0x83fb21	                           cmp ebx, 0x21	      1254	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9
0x40019de	            0x7524	                           jne 0x4001a04	      1254	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9
0x40019e0	          0x4d89e0	                             mov r8, r12	      1256	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9	CALL_39
0x40019e3	      0xb901000000	                              mov ecx, 1	      1256	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9	CALL_39
0x40019e8	      0x488d542414	                   lea rdx, [rsp + 0x14]	      1256	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9	CALL_39
0x40019ed	          0x4889ee	                            mov rsi, rbp	      1256	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9	CALL_39
0x40019f0	          0x4c89ff	                            mov rdi, r15	      1256	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9	CALL_39
0x40019f3	      0xe800000000	                          call 0x40019f8	      1256	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9	CALL_39
0x40019f8	      0x4889442408	                mov qword [rsp + 8], rax	      1256	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9	CALL_39
0x40019fd	        0x8b442414	            mov eax, dword [rsp + 0x14] 	      1258	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9
0x4001a01	          0x4801c5	                            add rbp, rax	      1258	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9
0x4001a04	          0x4d89e1	                             mov r9, r12	      1260	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_40
0x4001a07	          0x4989e8	                             mov r8, rbp	      1260	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_40
0x4001a0a	          0x4c89f1	                            mov rcx, r14	      1260	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_40
0x4001a0d	      0x488b542408	                mov rdx, qword [rsp + 8]	      1260	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_40
0x4001a12	            0x89de	                            mov esi, ebx	      1260	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_40
0x4001a14	          0x4c89ef	                            mov rdi, r13	      1260	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_40
0x4001a17	      0xe831f7ffff	           call sym.read_attribute_value	      1260	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_40
0x4001a1c	            0xeb64	                           jmp 0x4001a82	      1262	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001a1e	    0x41c745040d00	                mov dword [r13 + 4], 0xd	      1264	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001a26	      0x488b442408	                mov rax, qword [rsp + 8]	      1265	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001a2b	        0x49894508	                mov qword [r13 + 8], rax	      1265	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001a2f	          0x4889e8	                            mov rax, rbp	      1266	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001a32	            0xeb4e	                           jmp 0x4001a82	      1266	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001a34	      0xba05000000	                              mov edx, 5	      1268	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_42
0x4001a39	      0xbe00000000	                              mov esi, 0	      1268	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_42
0x4001a3e	      0xbf00000000	                              mov edi, 0	      1268	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_42
0x4001a43	      0xe800000000	                          call 0x4001a48	      1268	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_42
0x4001a48	            0x89de	                            mov esi, ebx	      1268	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_42
0x4001a4a	          0x4889c7	                            mov rdi, rax	      1268	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_42
0x4001a4d	      0xb800000000	                              mov eax, 0	      1268	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_42
0x4001a52	      0xe800000000	                          call 0x4001a57	      1268	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_42
0x4001a57	      0xbf11000000	                           mov edi, 0x11	      1270	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_43
0x4001a5c	      0xe800000000	                          call 0x4001a61	      1270	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_43
0x4001a61	      0xb800000000	                              mov eax, 0	      1271	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001a66	            0xeb1a	                           jmp 0x4001a82	      1271	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001a68	      0xb800000000	                              mov eax, 0	      1138	dwarf2.c	FUNCTION_21	SWITCH_1	IF_5
0x4001a6d	            0xeb13	                           jmp 0x4001a82	      1138	dwarf2.c	FUNCTION_21	SWITCH_1	IF_5
0x4001a6f	      0xb800000000	                              mov eax, 0	      1148	dwarf2.c	FUNCTION_21	SWITCH_1	IF_6
0x4001a74	            0xeb0c	                           jmp 0x4001a82	      1148	dwarf2.c	FUNCTION_21	SWITCH_1	IF_6
0x4001a76	      0xb800000000	                              mov eax, 0	      1187	dwarf2.c	FUNCTION_21	SWITCH_1	IF_7
0x4001a7b	            0xeb05	                           jmp 0x4001a82	      1187	dwarf2.c	FUNCTION_21	SWITCH_1	IF_7
0x4001a7d	      0xb800000000	                              mov eax, 0	      1198	dwarf2.c	FUNCTION_21	SWITCH_1	IF_8
0x4001a82	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1274	dwarf2.c	FUNCTION_21
0x4001a87	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1274	dwarf2.c	FUNCTION_21
0x4001a90	            0x7414	                            je 0x4001aa6	      1274	dwarf2.c	FUNCTION_21
0x4001a92	            0xeb0d	                           jmp 0x4001aa1	      1274	dwarf2.c	FUNCTION_21
0x4001a94	          0x4c89e7	                            mov rdi, r12	       805	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_6
0x4001a97	      0xe800000000	                          call 0x4001a9c	       805	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_6
0x4001a9c	      0xe983fcffff	                           jmp 0x4001724	       805	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_6
0x4001aa1	      0xe800000000	                          call 0x4001aa6	      1274	dwarf2.c	FUNCTION_21
0x4001aa6	        0x4883c428	                           add rsp, 0x28	      1274	dwarf2.c	FUNCTION_21
0x4001aaa	              0x5b	                                 pop rbx	      1274	dwarf2.c	FUNCTION_21
0x4001aab	              0x5d	                                 pop rbp	      1274	dwarf2.c	FUNCTION_21
0x4001aac	            0x415c	                                 pop r12	      1274	dwarf2.c	FUNCTION_21
0x4001aae	            0x415d	                                 pop r13	      1274	dwarf2.c	FUNCTION_21
0x4001ab0	            0x415e	                                 pop r14	      1274	dwarf2.c	FUNCTION_21
0x4001ab2	            0x415f	                                 pop r15	      1274	dwarf2.c	FUNCTION_21
0x4001ab4	              0xc3	                                     ret	      1274	dwarf2.c	FUNCTION_21
