value_of_builtin_frame_fp_reg	IF,1:FOR,0:CALL,9:SWITCH,0:WHILE,0:DO,0:ELSE,1:functions,0	45
0x40000d0	            0x4156	                                push r14	        29	std-regs.c	FUNCTION_1
0x40000d2	            0x4155	                                push r13	        29	std-regs.c	FUNCTION_1
0x40000d4	            0x4154	                                push r12	        29	std-regs.c	FUNCTION_1
0x40000d6	              0x55	                                push rbp	        29	std-regs.c	FUNCTION_1
0x40000d7	          0x4889fd	                            mov rbp, rdi	        29	std-regs.c	FUNCTION_1
0x40000da	              0x53	                                push rbx	        29	std-regs.c	FUNCTION_1
0x40000db	      0xe800000000	                          call 0x40000e0	        30	std-regs.c	FUNCTION_1	CALL_1
0x40000e0	          0x4889c7	                            mov rdi, rax	        32	std-regs.c	FUNCTION_1	IF_1	CALL_2
0x40000e3	          0x4889c3	                            mov rbx, rax	        30	std-regs.c	FUNCTION_1	CALL_1
0x40000e6	      0xe800000000	                          call 0x40000eb	        32	std-regs.c	FUNCTION_1	IF_1	CALL_2
0x40000eb	            0x85c0	                           test eax, eax	        32	std-regs.c	FUNCTION_1	IF_1	CALL_2
0x40000ed	          0x4889df	                            mov rdi, rbx	        39	std-regs.c	FUNCTION_1	IF_1	CALL_4
0x40000f0	            0x781e	                            js 0x4000110	        32	std-regs.c	FUNCTION_1	IF_1	CALL_2
0x40000f2	      0xe800000000	                          call 0x40000f7	        39	std-regs.c	FUNCTION_1	IF_1	CALL_4
0x40000f7	              0x5b	                                 pop rbx	        51	std-regs.c	FUNCTION_1
0x40000f8	          0x4889ee	                            mov rsi, rbp	        40	std-regs.c	FUNCTION_1	IF_1
0x40000fb	            0x89c7	                            mov edi, eax	        40	std-regs.c	FUNCTION_1	IF_1
0x40000fd	              0x5d	                                 pop rbp	        51	std-regs.c	FUNCTION_1
0x40000fe	            0x415c	                                 pop r12	        51	std-regs.c	FUNCTION_1
0x4000100	            0x415d	                                 pop r13	        51	std-regs.c	FUNCTION_1
0x4000102	            0x415e	                                 pop r14	        51	std-regs.c	FUNCTION_1
0x4000104	      0xe900000000	                           jmp 0x4000109	        40	std-regs.c	FUNCTION_1	IF_1
0x4000109	     0xf1f80000000	                         nop dword [rax]	        40	std-regs.c	FUNCTION_1	IF_1
0x4000110	      0xe800000000	                          call 0x4000115	        43	std-regs.c	FUNCTION_1	ELSE_1	CALL_5
0x4000115	    0x4c8ba8300100	           mov r13, qword [rax + 0x130] 	        43	std-regs.c	FUNCTION_1	ELSE_1	CALL_5
0x400011c	          0x4c89ef	                            mov rdi, r13	        44	std-regs.c	FUNCTION_1	ELSE_1	CALL_6
0x400011f	      0xe800000000	                          call 0x4000124	        44	std-regs.c	FUNCTION_1	ELSE_1	CALL_6
0x4000124	          0x4889c7	                            mov rdi, rax	        45	std-regs.c	FUNCTION_1	ELSE_1	CALL_7
0x4000127	          0x4989c4	                            mov r12, rax	        44	std-regs.c	FUNCTION_1	ELSE_1	CALL_6
0x400012a	      0xe800000000	                          call 0x400012f	        45	std-regs.c	FUNCTION_1	ELSE_1	CALL_7
0x400012f	          0x4889ef	                            mov rdi, rbp	        47	std-regs.c	FUNCTION_1	ELSE_1	CALL_8
0x4000132	          0x4989c6	                            mov r14, rax	        45	std-regs.c	FUNCTION_1	ELSE_1	CALL_7
0x4000135	      0xe800000000	                          call 0x400013a	        47	std-regs.c	FUNCTION_1	ELSE_1	CALL_8
0x400013a	          0x4c89f2	                            mov rdx, r14	        48	std-regs.c	FUNCTION_1	ELSE_1	CALL_9
0x400013d	          0x4889c1	                            mov rcx, rax	        48	std-regs.c	FUNCTION_1	ELSE_1	CALL_9
0x4000140	          0x4c89ee	                            mov rsi, r13	        48	std-regs.c	FUNCTION_1	ELSE_1	CALL_9
0x4000143	          0x4889df	                            mov rdi, rbx	        48	std-regs.c	FUNCTION_1	ELSE_1	CALL_9
0x4000146	      0xe800000000	                          call 0x400014b	        48	std-regs.c	FUNCTION_1	ELSE_1	CALL_9
0x400014b	              0x5b	                                 pop rbx	        51	std-regs.c	FUNCTION_1
0x400014c	          0x4c89e0	                            mov rax, r12	        51	std-regs.c	FUNCTION_1
0x400014f	              0x5d	                                 pop rbp	        51	std-regs.c	FUNCTION_1
0x4000150	            0x415c	                                 pop r12	        51	std-regs.c	FUNCTION_1
0x4000152	            0x415d	                                 pop r13	        51	std-regs.c	FUNCTION_1
0x4000154	            0x415e	                                 pop r14	        51	std-regs.c	FUNCTION_1
0x4000156	              0xc3	                                     ret	        51	std-regs.c	FUNCTION_1
value_of_builtin_frame_pc_reg	IF,1:FOR,0:CALL,9:SWITCH,0:WHILE,0:DO,0:ELSE,1:functions,0	45
0x4000040	            0x4156	                                push r14	        55	std-regs.c	FUNCTION_2
0x4000042	            0x4155	                                push r13	        55	std-regs.c	FUNCTION_2
0x4000044	            0x4154	                                push r12	        55	std-regs.c	FUNCTION_2
0x4000046	              0x55	                                push rbp	        55	std-regs.c	FUNCTION_2
0x4000047	          0x4889fd	                            mov rbp, rdi	        55	std-regs.c	FUNCTION_2
0x400004a	              0x53	                                push rbx	        55	std-regs.c	FUNCTION_2
0x400004b	      0xe800000000	                          call 0x4000050	        56	std-regs.c	FUNCTION_2	CALL_1
0x4000050	          0x4889c7	                            mov rdi, rax	        58	std-regs.c	FUNCTION_2	IF_1	CALL_2
0x4000053	          0x4889c3	                            mov rbx, rax	        56	std-regs.c	FUNCTION_2	CALL_1
0x4000056	      0xe800000000	                          call 0x400005b	        58	std-regs.c	FUNCTION_2	IF_1	CALL_2
0x400005b	            0x85c0	                           test eax, eax	        58	std-regs.c	FUNCTION_2	IF_1	CALL_2
0x400005d	          0x4889df	                            mov rdi, rbx	        59	std-regs.c	FUNCTION_2	CALL_4
0x4000060	            0x781e	                            js 0x4000080	        58	std-regs.c	FUNCTION_2	IF_1	CALL_2
0x4000062	      0xe800000000	                          call 0x4000067	        59	std-regs.c	FUNCTION_2	CALL_4
0x4000067	              0x5b	                                 pop rbx	        70	std-regs.c	FUNCTION_2
0x4000068	          0x4889ee	                            mov rsi, rbp	        59	std-regs.c	FUNCTION_2	CALL_4
0x400006b	            0x89c7	                            mov edi, eax	        59	std-regs.c	FUNCTION_2	CALL_4
0x400006d	              0x5d	                                 pop rbp	        70	std-regs.c	FUNCTION_2
0x400006e	            0x415c	                                 pop r12	        70	std-regs.c	FUNCTION_2
0x4000070	            0x415d	                                 pop r13	        70	std-regs.c	FUNCTION_2
0x4000072	            0x415e	                                 pop r14	        70	std-regs.c	FUNCTION_2
0x4000074	      0xe900000000	                           jmp 0x4000079	        59	std-regs.c	FUNCTION_2	CALL_4
0x4000079	     0xf1f80000000	                         nop dword [rax]	        59	std-regs.c	FUNCTION_2	CALL_4
0x4000080	      0xe800000000	                          call 0x4000085	        62	std-regs.c	FUNCTION_2	ELSE_1	CALL_5
0x4000085	    0x4c8ba8380100	           mov r13, qword [rax + 0x138] 	        62	std-regs.c	FUNCTION_2	ELSE_1	CALL_5
0x400008c	          0x4c89ef	                            mov rdi, r13	        63	std-regs.c	FUNCTION_2	ELSE_1	CALL_6
0x400008f	      0xe800000000	                          call 0x4000094	        63	std-regs.c	FUNCTION_2	ELSE_1	CALL_6
0x4000094	          0x4889c7	                            mov rdi, rax	        64	std-regs.c	FUNCTION_2	ELSE_1	CALL_7
0x4000097	          0x4989c4	                            mov r12, rax	        63	std-regs.c	FUNCTION_2	ELSE_1	CALL_6
0x400009a	      0xe800000000	                          call 0x400009f	        64	std-regs.c	FUNCTION_2	ELSE_1	CALL_7
0x400009f	          0x4889ef	                            mov rdi, rbp	        66	std-regs.c	FUNCTION_2	ELSE_1	CALL_8
0x40000a2	          0x4989c6	                            mov r14, rax	        64	std-regs.c	FUNCTION_2	ELSE_1	CALL_7
0x40000a5	      0xe800000000	                          call 0x40000aa	        66	std-regs.c	FUNCTION_2	ELSE_1	CALL_8
0x40000aa	          0x4c89f2	                            mov rdx, r14	        67	std-regs.c	FUNCTION_2	ELSE_1	CALL_9
0x40000ad	          0x4889c1	                            mov rcx, rax	        67	std-regs.c	FUNCTION_2	ELSE_1	CALL_9
0x40000b0	          0x4c89ee	                            mov rsi, r13	        67	std-regs.c	FUNCTION_2	ELSE_1	CALL_9
0x40000b3	          0x4889df	                            mov rdi, rbx	        67	std-regs.c	FUNCTION_2	ELSE_1	CALL_9
0x40000b6	      0xe800000000	                          call 0x40000bb	        67	std-regs.c	FUNCTION_2	ELSE_1	CALL_9
0x40000bb	              0x5b	                                 pop rbx	        70	std-regs.c	FUNCTION_2
0x40000bc	          0x4c89e0	                            mov rax, r12	        70	std-regs.c	FUNCTION_2
0x40000bf	              0x5d	                                 pop rbp	        70	std-regs.c	FUNCTION_2
0x40000c0	            0x415c	                                 pop r12	        70	std-regs.c	FUNCTION_2
0x40000c2	            0x415d	                                 pop r13	        70	std-regs.c	FUNCTION_2
0x40000c4	            0x415e	                                 pop r14	        70	std-regs.c	FUNCTION_2
0x40000c6	              0xc3	                                     ret	        70	std-regs.c	FUNCTION_2
_initialize_frame_reg	IF,0:FOR,0:CALL,4:SWITCH,0:WHILE,0:DO,0:ELSE,0:functions,0	18
0x4000200	        0x4883ec08	                              sub rsp, 8	        94	std-regs.c	FUNCTION_5
0x4000204	            0x31d2	                            xor edx, edx	        98	std-regs.c	FUNCTION_5	CALL_1
0x4000206	      0xbe00000000	                              mov esi, 0	        98	std-regs.c	FUNCTION_5	CALL_1
0x400020b	      0xbf00000000	                              mov edi, 0	        98	std-regs.c	FUNCTION_5	CALL_1
0x4000210	      0xe800000000	                          call 0x4000215	        98	std-regs.c	FUNCTION_5	CALL_1
0x4000215	            0x31d2	                            xor edx, edx	        99	std-regs.c	FUNCTION_5	CALL_2
0x4000217	      0xbe00000000	                              mov esi, 0	        99	std-regs.c	FUNCTION_5	CALL_2
0x400021c	      0xbf00000000	                              mov edi, 0	        99	std-regs.c	FUNCTION_5	CALL_2
0x4000221	      0xe800000000	                          call 0x4000226	        99	std-regs.c	FUNCTION_5	CALL_2
0x4000226	            0x31d2	                            xor edx, edx	       100	std-regs.c	FUNCTION_5	CALL_3
0x4000228	      0xbe00000000	                              mov esi, 0	       100	std-regs.c	FUNCTION_5	CALL_3
0x400022d	      0xbf00000000	                              mov edi, 0	       100	std-regs.c	FUNCTION_5	CALL_3
0x4000232	      0xe800000000	                          call 0x4000237	       100	std-regs.c	FUNCTION_5	CALL_3
0x4000237	            0x31d2	                            xor edx, edx	       101	std-regs.c	FUNCTION_5	CALL_4
0x4000239	      0xbe00000000	                              mov esi, 0	       101	std-regs.c	FUNCTION_5	CALL_4
0x400023e	      0xbf00000000	                              mov edi, 0	       101	std-regs.c	FUNCTION_5	CALL_4
0x4000243	        0x4883c408	                              add rsp, 8	       102	std-regs.c	FUNCTION_5
0x4000247	      0xe900000000	          jmp section_end..text.unlikely	       101	std-regs.c	FUNCTION_5	CALL_4
