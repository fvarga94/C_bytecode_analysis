binary_mkobject	CALL,0:WHILE,0:functions,0:ELSE,0:IF,0:FOR,0:DO,0:SWITCH,0	2
0x4000040	      0xb801000000	                              mov eax, 1	        50	binary.c	FUNCTION_1
0x4000045	              0xc3	                                     ret	        50	binary.c	FUNCTION_1
binary_set_section_contents	CALL,4:WHILE,0:functions,0:ELSE,0:IF,7:FOR,2:DO,0:SWITCH,0	89
0x4000052	      0xb801000000	                              mov eax, 1	       229	binary.c	FUNCTION_8	IF_1
0x4000057	          0x4d85c0	                             test r8, r8	       228	binary.c	FUNCTION_8	IF_1
0x400005a	     0xf842c010000	                            je 0x400018c	       228	binary.c	FUNCTION_8	IF_1
0x4000060	            0x4157	                                push r15	       227	binary.c	FUNCTION_8
0x4000062	            0x4156	                                push r14	       227	binary.c	FUNCTION_8
0x4000064	            0x4155	                                push r13	       227	binary.c	FUNCTION_8
0x4000066	            0x4154	                                push r12	       227	binary.c	FUNCTION_8
0x4000068	              0x55	                                push rbp	       227	binary.c	FUNCTION_8
0x4000069	              0x53	                                push rbx	       227	binary.c	FUNCTION_8
0x400006a	        0x4883ec18	                           sub rsp, 0x18	       227	binary.c	FUNCTION_8
0x400006e	          0x4d89c6	                             mov r14, r8	       227	binary.c	FUNCTION_8
0x4000071	      0x48894c2408	                mov qword [rsp + 8], rcx	       227	binary.c	FUNCTION_8
0x4000076	        0x48891424	                    mov qword [rsp], rdx	       227	binary.c	FUNCTION_8
0x400007a	          0x4989f7	                            mov r15, rsi	       227	binary.c	FUNCTION_8
0x400007d	          0x4889fd	                            mov rbp, rdi	       227	binary.c	FUNCTION_8
0x4000080	        0xf6474740	           test byte [rdi + 0x47], 0x40 	       231	binary.c	FUNCTION_8	IF_2
0x4000084	     0xf85ca000000	                           jne 0x4000154	       231	binary.c	FUNCTION_8	IF_2
0x400008a	    0x488b87900000	            mov rax, qword [rdi + 0x90] 	       243	binary.c	FUNCTION_8	IF_2	FOR_1
0x4000091	          0x4885c0	                           test rax, rax	       243	binary.c	FUNCTION_8	IF_2	FOR_1
0x4000094	            0x7441	                            je 0x40000d7	       243	binary.c	FUNCTION_8	IF_2	FOR_1
0x4000096	    0x41bd00000000	                             mov r13d, 0	       243	binary.c	FUNCTION_8	IF_2	FOR_1
0x400009c	      0xb900000000	                              mov ecx, 0	       243	binary.c	FUNCTION_8	IF_2	FOR_1
0x40000a1	          0x8b5020	            mov edx, dword [rax + 0x20] 	       244	binary.c	FUNCTION_8	IF_2	FOR_1	IF_3
0x40000a4	    0x81e203030000	                          and edx, 0x303	       244	binary.c	FUNCTION_8	IF_2	FOR_1	IF_3
0x40000aa	    0x81fa03010000	                          cmp edx, 0x103	       244	binary.c	FUNCTION_8	IF_2	FOR_1	IF_3
0x40000b0	            0x751a	                           jne 0x40000cc	       244	binary.c	FUNCTION_8	IF_2	FOR_1	IF_3
0x40000b2	      0x4883783800	               cmp qword [rax + 0x38], 0	       247	binary.c	FUNCTION_8	IF_2	FOR_1	IF_3
0x40000b7	            0x7413	                            je 0x40000cc	       247	binary.c	FUNCTION_8	IF_2	FOR_1	IF_3
0x40000b9	            0x85c9	                           test ecx, ecx	       248	binary.c	FUNCTION_8	IF_2	FOR_1	IF_3
0x40000bb	            0x7406	                            je 0x40000c3	       248	binary.c	FUNCTION_8	IF_2	FOR_1	IF_3
0x40000bd	        0x4c396830	            cmp qword [rax + 0x30], r13 	       248	binary.c	FUNCTION_8	IF_2	FOR_1	IF_3
0x40000c1	            0x7309	                           jae 0x40000cc	       248	binary.c	FUNCTION_8	IF_2	FOR_1	IF_3
0x40000c3	        0x4c8b6830	            mov r13, qword [rax + 0x30] 	       250	binary.c	FUNCTION_8	IF_2	FOR_1	IF_3
0x40000c7	      0xb901000000	                              mov ecx, 1	       251	binary.c	FUNCTION_8	IF_2	FOR_1	IF_3
0x40000cc	        0x488b4010	            mov rax, qword [rax + 0x10] 	       243	binary.c	FUNCTION_8	IF_2	FOR_1
0x40000d0	          0x4885c0	                           test rax, rax	       243	binary.c	FUNCTION_8	IF_2	FOR_1
0x40000d3	            0x75cc	                           jne 0x40000a1	       243	binary.c	FUNCTION_8	IF_2	FOR_1
0x40000d5	            0xeb06	                           jmp 0x40000dd	       243	binary.c	FUNCTION_8	IF_2	FOR_1
0x40000d7	    0x41bd00000000	                             mov r13d, 0	       242	binary.c	FUNCTION_8	IF_2
0x40000dd	          0x4889ef	                            mov rdi, rbp	       254	binary.c	FUNCTION_8	IF_2	CALL_1
0x40000e0	      0xe800000000	                          call 0x40000e5	       254	binary.c	FUNCTION_8	IF_2	CALL_1
0x40000e5	    0x488b9d900000	            mov rbx, qword [rbp + 0x90] 	       255	binary.c	FUNCTION_8	IF_2	FOR_2
0x40000ec	          0x4885db	                           test rbx, rbx	       255	binary.c	FUNCTION_8	IF_2	FOR_2
0x40000ef	            0x745f	                            je 0x4000150	       255	binary.c	FUNCTION_8	IF_2	FOR_2
0x40000f1	          0x4189c4	                           mov r12d, eax	       257	binary.c	FUNCTION_8	IF_2	FOR_2
0x40000f4	        0x488b4330	            mov rax, qword [rbx + 0x30] 	       257	binary.c	FUNCTION_8	IF_2	FOR_2
0x40000f8	          0x4c29e8	                            sub rax, r13	       257	binary.c	FUNCTION_8	IF_2	FOR_2
0x40000fb	        0x490fafc4	                           imul rax, r12	       257	binary.c	FUNCTION_8	IF_2	FOR_2
0x40000ff	    0x488983900000	             mov qword [rbx + 0x90], rax	       257	binary.c	FUNCTION_8	IF_2	FOR_2
0x4000106	          0x8b5320	            mov edx, dword [rbx + 0x20] 	       261	binary.c	FUNCTION_8	IF_2	FOR_2	IF_4
0x4000109	    0x81e201030000	                          and edx, 0x301	       261	binary.c	FUNCTION_8	IF_2	FOR_2	IF_4
0x400010f	    0x81fa01010000	                          cmp edx, 0x101	       261	binary.c	FUNCTION_8	IF_2	FOR_2	IF_4
0x4000115	            0x7530	                           jne 0x4000147	       261	binary.c	FUNCTION_8	IF_2	FOR_2	IF_4
0x4000117	      0x48837b3800	               cmp qword [rbx + 0x38], 0	       264	binary.c	FUNCTION_8	IF_2	FOR_2	IF_4
0x400011c	            0x7429	                            je 0x4000147	       264	binary.c	FUNCTION_8	IF_2	FOR_2	IF_4
0x400011e	          0x4885c0	                           test rax, rax	       273	binary.c	FUNCTION_8	IF_2	FOR_2	IF_5
0x4000121	            0x7924	                           jns 0x4000147	       273	binary.c	FUNCTION_8	IF_2	FOR_2	IF_5
0x4000123	      0xba05000000	                              mov edx, 5	       276	binary.c	FUNCTION_8	IF_2	FOR_2	IF_5	CALL_3
0x4000128	      0xbe00000000	                              mov esi, 0	       276	binary.c	FUNCTION_8	IF_2	FOR_2	IF_5	CALL_3
0x400012d	      0xbf00000000	                              mov edi, 0	       276	binary.c	FUNCTION_8	IF_2	FOR_2	IF_5	CALL_3
0x4000132	      0xe800000000	                          call 0x4000137	       276	binary.c	FUNCTION_8	IF_2	FOR_2	IF_5	CALL_3
0x4000137	          0x4889de	                            mov rsi, rbx	       274	binary.c	FUNCTION_8	IF_2	FOR_2	IF_5	CALL_2
0x400013a	          0x4889c7	                            mov rdi, rax	       274	binary.c	FUNCTION_8	IF_2	FOR_2	IF_5	CALL_2
0x400013d	      0xb800000000	                              mov eax, 0	       274	binary.c	FUNCTION_8	IF_2	FOR_2	IF_5	CALL_2
0x4000142	      0xe800000000	                          call 0x4000147	       274	binary.c	FUNCTION_8	IF_2	FOR_2	IF_5	CALL_2
0x4000147	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	       255	binary.c	FUNCTION_8	IF_2	FOR_2
0x400014b	          0x4885db	                           test rbx, rbx	       255	binary.c	FUNCTION_8	IF_2	FOR_2
0x400014e	            0x75a4	                           jne 0x40000f4	       255	binary.c	FUNCTION_8	IF_2	FOR_2
0x4000150	        0x804d4740	              or byte [rbp + 0x47], 0x40	       281	binary.c	FUNCTION_8	IF_2
0x4000154	        0x418b5720	            mov edx, dword [r15 + 0x20] 	       287	binary.c	FUNCTION_8	IF_6
0x4000158	      0xb801000000	                              mov eax, 1	       288	binary.c	FUNCTION_8	IF_6
0x400015d	          0xf6c203	                              test dl, 3	       287	binary.c	FUNCTION_8	IF_6
0x4000160	            0x741c	                            je 0x400017e	       287	binary.c	FUNCTION_8	IF_6
0x4000162	          0xf6c602	                              test dh, 2	       289	binary.c	FUNCTION_8	IF_7
0x4000165	            0x7517	                           jne 0x400017e	       289	binary.c	FUNCTION_8	IF_7
0x4000167	          0x4d89f0	                             mov r8, r14	       292	binary.c	FUNCTION_8	CALL_4
0x400016a	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       292	binary.c	FUNCTION_8	CALL_4
0x400016f	        0x488b1424	                    mov rdx, qword [rsp]	       292	binary.c	FUNCTION_8	CALL_4
0x4000173	          0x4c89fe	                            mov rsi, r15	       292	binary.c	FUNCTION_8	CALL_4
0x4000176	          0x4889ef	                            mov rdi, rbp	       292	binary.c	FUNCTION_8	CALL_4
0x4000179	      0xe800000000	                          call 0x400017e	       292	binary.c	FUNCTION_8	CALL_4
0x400017e	        0x4883c418	                           add rsp, 0x18	       293	binary.c	FUNCTION_8
0x4000182	              0x5b	                                 pop rbx	       293	binary.c	FUNCTION_8
0x4000183	              0x5d	                                 pop rbp	       293	binary.c	FUNCTION_8
0x4000184	            0x415c	                                 pop r12	       293	binary.c	FUNCTION_8
0x4000186	            0x415d	                                 pop r13	       293	binary.c	FUNCTION_8
0x4000188	            0x415e	                                 pop r14	       293	binary.c	FUNCTION_8
0x400018a	            0x415f	                                 pop r15	       293	binary.c	FUNCTION_8
0x400018c	            0xf3c3	                                     ret	       293	binary.c	FUNCTION_8
mangle_name	CALL,6:WHILE,0:functions,0:ELSE,0:IF,2:FOR,1:DO,0:SWITCH,0	51
0x40001a2	            0x4154	                                push r12	       123	binary.c	FUNCTION_5
0x40001a4	              0x55	                                push rbp	       123	binary.c	FUNCTION_5
0x40001a5	              0x53	                                push rbx	       123	binary.c	FUNCTION_5
0x40001a6	          0x4889fd	                            mov rbp, rdi	       123	binary.c	FUNCTION_5
0x40001a9	          0x4989f4	                            mov r12, rsi	       123	binary.c	FUNCTION_5
0x40001ac	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	       128	binary.c	FUNCTION_5	CALL_2
0x40001b3	          0x488b3f	                    mov rdi, qword [rdi]	       128	binary.c	FUNCTION_5	CALL_2
0x40001b6	      0xb800000000	                              mov eax, 0	       128	binary.c	FUNCTION_5	CALL_2
0x40001bb	          0x4889f1	                            mov rcx, rsi	       128	binary.c	FUNCTION_5	CALL_2
0x40001be	            0xf2ae	              repne scasb al, byte [rdi]	       128	binary.c	FUNCTION_5	CALL_2
0x40001c0	          0x48f7d1	                                 not rcx	       128	binary.c	FUNCTION_5	CALL_2
0x40001c3	          0x4889ca	                            mov rdx, rcx	       128	binary.c	FUNCTION_5	CALL_2
0x40001c6	          0x4889f1	                            mov rcx, rsi	       129	binary.c	FUNCTION_5	CALL_3
0x40001c9	          0x4c89e7	                            mov rdi, r12	       129	binary.c	FUNCTION_5	CALL_3
0x40001cc	            0xf2ae	              repne scasb al, byte [rdi]	       129	binary.c	FUNCTION_5	CALL_3
0x40001ce	          0x4889c8	                            mov rax, rcx	       129	binary.c	FUNCTION_5	CALL_3
0x40001d1	          0x48f7d0	                                 not rax	       129	binary.c	FUNCTION_5	CALL_3
0x40001d4	      0x488d740208	                lea rsi, [rdx + rax + 8]	       132	binary.c	FUNCTION_5	CALL_4
0x40001d9	          0x4889ef	                            mov rdi, rbp	       132	binary.c	FUNCTION_5	CALL_4
0x40001dc	      0xe800000000	                          call 0x40001e1	       132	binary.c	FUNCTION_5	CALL_4
0x40001e1	          0x4889c3	                            mov rbx, rax	       132	binary.c	FUNCTION_5	CALL_4
0x40001e4	      0xb800000000	                              mov eax, 0	       134	binary.c	FUNCTION_5	IF_1
0x40001e9	          0x4885db	                           test rbx, rbx	       133	binary.c	FUNCTION_5	IF_1
0x40001ec	            0x7452	                            je 0x4000240	       133	binary.c	FUNCTION_5	IF_1
0x40001ee	          0x4d89e1	                             mov r9, r12	        33	stdio2.h	FUNCTION_10	CALL_1
0x40001f1	        0x4c8b4500	                     mov r8, qword [rbp]	        33	stdio2.h	FUNCTION_10	CALL_1
0x40001f5	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_10	CALL_1
0x40001fa	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_10	CALL_1
0x4000201	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_10	CALL_1
0x4000206	          0x4889df	                            mov rdi, rbx	        33	stdio2.h	FUNCTION_10	CALL_1
0x4000209	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_10	CALL_1
0x400020e	      0xe800000000	                          call 0x4000213	        33	stdio2.h	FUNCTION_10	CALL_1
0x4000213	           0xfb603	                   movzx eax, byte [rbx]	       139	binary.c	FUNCTION_5	FOR_1
0x4000216	            0x84c0	                             test al, al	       139	binary.c	FUNCTION_5	FOR_1
0x4000218	            0x7423	                            je 0x400023d	       139	binary.c	FUNCTION_5	FOR_1
0x400021a	          0x4889da	                            mov rdx, rbx	       139	binary.c	FUNCTION_5	FOR_1
0x400021d	           0xfb6c0	                           movzx eax, al	       140	binary.c	FUNCTION_5	FOR_1	IF_2	CALL_6
0x4000220	    0xf68400000000	            test byte [rax + rax], 0x8c 	       140	binary.c	FUNCTION_5	FOR_1	IF_2	CALL_6
0x4000228	            0x7503	                           jne 0x400022d	       140	binary.c	FUNCTION_5	FOR_1	IF_2	CALL_6
0x400022a	          0xc6025f	                    mov byte [rdx], 0x5f	       141	binary.c	FUNCTION_5	FOR_1	IF_2
0x400022d	        0x4883c201	                              add rdx, 1	       139	binary.c	FUNCTION_5	FOR_1
0x4000231	           0xfb602	                   movzx eax, byte [rdx]	       139	binary.c	FUNCTION_5	FOR_1
0x4000234	            0x84c0	                             test al, al	       139	binary.c	FUNCTION_5	FOR_1
0x4000236	            0x75e5	                           jne 0x400021d	       139	binary.c	FUNCTION_5	FOR_1
0x4000238	          0x4889d8	                            mov rax, rbx	       143	binary.c	FUNCTION_5
0x400023b	            0xeb03	                           jmp 0x4000240	       143	binary.c	FUNCTION_5
0x400023d	          0x4889d8	                            mov rax, rbx	       143	binary.c	FUNCTION_5
0x4000240	              0x5b	                                 pop rbx	       144	binary.c	FUNCTION_5
0x4000241	              0x5d	                                 pop rbp	       144	binary.c	FUNCTION_5
0x4000242	            0x415c	                                 pop r12	       144	binary.c	FUNCTION_5
0x4000244	              0xc3	                                     ret	       144	binary.c	FUNCTION_5
binary_canonicalize_symtab	CALL,4:WHILE,0:functions,0:ELSE,0:IF,1:FOR,1:DO,0:SWITCH,0	57
0x4000245	            0x4155	                                push r13	       150	binary.c	FUNCTION_6
0x4000247	            0x4154	                                push r12	       150	binary.c	FUNCTION_6
0x4000249	              0x55	                                push rbp	       150	binary.c	FUNCTION_6
0x400024a	              0x53	                                push rbx	       150	binary.c	FUNCTION_6
0x400024b	        0x4883ec08	                              sub rsp, 8	       150	binary.c	FUNCTION_6
0x400024f	          0x4889fd	                            mov rbp, rdi	       150	binary.c	FUNCTION_6
0x4000252	          0x4989f4	                            mov r12, rsi	       150	binary.c	FUNCTION_6
0x4000255	    0x4c8baff80000	            mov r13, qword [rdi + 0xf8] 	       151	binary.c	FUNCTION_6
0x400025c	      0xbe90000000	                           mov esi, 0x90	       156	binary.c	FUNCTION_6	CALL_1
0x4000261	      0xe800000000	                          call 0x4000266	       156	binary.c	FUNCTION_6	CALL_1
0x4000266	          0x4885c0	                           test rax, rax	       157	binary.c	FUNCTION_6	IF_1
0x4000269	     0xf84c2000000	                            je 0x4000331	       157	binary.c	FUNCTION_6	IF_1
0x400026f	          0x4889c3	                            mov rbx, rax	       157	binary.c	FUNCTION_6	IF_1
0x4000272	          0x488928	                    mov qword [rax], rbp	       161	binary.c	FUNCTION_6
0x4000275	      0xbe00000000	                              mov esi, 0	       162	binary.c	FUNCTION_6	CALL_2
0x400027a	          0x4889ef	                            mov rdi, rbp	       162	binary.c	FUNCTION_6	CALL_2
0x400027d	      0xe820ffffff	                    call sym.mangle_name	       162	binary.c	FUNCTION_6	CALL_2
0x4000282	        0x48894308	                mov qword [rbx + 8], rax	       162	binary.c	FUNCTION_6	CALL_2
0x4000286	    0x48c743100000	               mov qword [rbx + 0x10], 0	       163	binary.c	FUNCTION_6
0x400028e	    0xc74318020000	               mov dword [rbx + 0x18], 2	       164	binary.c	FUNCTION_6
0x4000295	        0x4c896b20	             mov qword [rbx + 0x20], r13	       165	binary.c	FUNCTION_6
0x4000299	    0x48c743280000	               mov qword [rbx + 0x28], 0	       166	binary.c	FUNCTION_6
0x40002a1	        0x48896b30	             mov qword [rbx + 0x30], rbp	       169	binary.c	FUNCTION_6
0x40002a5	      0xbe00000000	                              mov esi, 0	       170	binary.c	FUNCTION_6	CALL_3
0x40002aa	          0x4889ef	                            mov rdi, rbp	       170	binary.c	FUNCTION_6	CALL_3
0x40002ad	      0xe8f0feffff	                    call sym.mangle_name	       170	binary.c	FUNCTION_6	CALL_3
0x40002b2	        0x48894338	             mov qword [rbx + 0x38], rax	       170	binary.c	FUNCTION_6	CALL_3
0x40002b6	        0x498b4538	            mov rax, qword [r13 + 0x38] 	       171	binary.c	FUNCTION_6
0x40002ba	        0x48894340	             mov qword [rbx + 0x40], rax	       171	binary.c	FUNCTION_6
0x40002be	    0xc74348020000	               mov dword [rbx + 0x48], 2	       172	binary.c	FUNCTION_6
0x40002c5	        0x4c896b50	             mov qword [rbx + 0x50], r13	       173	binary.c	FUNCTION_6
0x40002c9	    0x48c743580000	               mov qword [rbx + 0x58], 0	       174	binary.c	FUNCTION_6
0x40002d1	        0x48896b60	             mov qword [rbx + 0x60], rbp	       177	binary.c	FUNCTION_6
0x40002d5	      0xbe00000000	                              mov esi, 0	       178	binary.c	FUNCTION_6	CALL_4
0x40002da	          0x4889ef	                            mov rdi, rbp	       178	binary.c	FUNCTION_6	CALL_4
0x40002dd	      0xe8c0feffff	                    call sym.mangle_name	       178	binary.c	FUNCTION_6	CALL_4
0x40002e2	        0x48894368	             mov qword [rbx + 0x68], rax	       178	binary.c	FUNCTION_6	CALL_4
0x40002e6	        0x498b4538	            mov rax, qword [r13 + 0x38] 	       179	binary.c	FUNCTION_6
0x40002ea	        0x48894370	             mov qword [rbx + 0x70], rax	       179	binary.c	FUNCTION_6
0x40002ee	    0xc74378020000	               mov dword [rbx + 0x78], 2	       180	binary.c	FUNCTION_6
0x40002f5	    0x48c783800000	               mov qword [rbx + 0x80], 0	       181	binary.c	FUNCTION_6
0x4000300	    0x48c783880000	               mov qword [rbx + 0x88], 0	       182	binary.c	FUNCTION_6
0x400030b	        0x49891c24	                    mov qword [r12], rbx	       185	binary.c	FUNCTION_6	FOR_1
0x400030f	        0x488d4330	                   lea rax, [rbx + 0x30]	       185	binary.c	FUNCTION_6	FOR_1
0x4000313	      0x4989442408	                mov qword [r12 + 8], rax	       185	binary.c	FUNCTION_6	FOR_1
0x4000318	        0x4883c360	                           add rbx, 0x60	       185	binary.c	FUNCTION_6	FOR_1
0x400031c	      0x49895c2410	             mov qword [r12 + 0x10], rbx	       185	binary.c	FUNCTION_6	FOR_1
0x4000321	    0x49c744241800	               mov qword [r12 + 0x18], 0	       186	binary.c	FUNCTION_6
0x400032a	      0xb803000000	                              mov eax, 3	       188	binary.c	FUNCTION_6
0x400032f	            0xeb07	                           jmp 0x4000338	       188	binary.c	FUNCTION_6
0x4000331	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       158	binary.c	FUNCTION_6	IF_1
0x4000338	        0x4883c408	                              add rsp, 8	       189	binary.c	FUNCTION_6
0x400033c	              0x5b	                                 pop rbx	       189	binary.c	FUNCTION_6
0x400033d	              0x5d	                                 pop rbp	       189	binary.c	FUNCTION_6
0x400033e	            0x415c	                                 pop r12	       189	binary.c	FUNCTION_6
0x4000340	            0x415d	                                 pop r13	       189	binary.c	FUNCTION_6
0x4000342	              0xc3	                                     ret	       189	binary.c	FUNCTION_6
binary_get_symtab_upper_bound	CALL,0:WHILE,0:functions,0:ELSE,0:IF,0:FOR,0:DO,0:SWITCH,0	2
0x4000046	      0xb820000000	                           mov eax, 0x20	       117	binary.c	FUNCTION_4
0x400004b	              0xc3	                                     ret	       117	binary.c	FUNCTION_4
binary_sizeof_headers	CALL,0:WHILE,0:functions,0:ELSE,0:IF,0:FOR,0:DO,0:SWITCH,0	2
0x400004c	      0xb800000000	                              mov eax, 0	       302	binary.c	FUNCTION_9
0x4000051	              0xc3	                                     ret	       302	binary.c	FUNCTION_9
binary_object_p	CALL,4:WHILE,0:functions,0:ELSE,0:IF,3:FOR,0:DO,0:SWITCH,0	42
0x4000384	              0x53	                                push rbx	        58	binary.c	FUNCTION_2
0x4000385	    0x4881eca00000	                           sub rsp, 0xa0	        58	binary.c	FUNCTION_2
0x400038c	    0x64488b042528	                mov rax, qword fs:[0x28]	        58	binary.c	FUNCTION_2
0x4000395	    0x488984249800	             mov qword [rsp + 0x98], rax	        58	binary.c	FUNCTION_2
0x400039d	            0x31c0	                            xor eax, eax	        58	binary.c	FUNCTION_2
0x400039f	        0xf6474704	               test byte [rdi + 0x47], 4	        63	binary.c	FUNCTION_2	IF_1
0x40003a3	            0x7411	                            je 0x40003b6	        63	binary.c	FUNCTION_2	IF_1
0x40003a5	      0xbf03000000	                              mov edi, 3	        65	binary.c	FUNCTION_2	IF_1	CALL_1
0x40003aa	      0xe800000000	                          call 0x40003af	        65	binary.c	FUNCTION_2	IF_1	CALL_1
0x40003af	      0xb800000000	                              mov eax, 0	        66	binary.c	FUNCTION_2	IF_1
0x40003b4	            0xeb6f	                           jmp 0x4000425	        66	binary.c	FUNCTION_2	IF_1
0x40003b6	          0x4889fb	                            mov rbx, rdi	        66	binary.c	FUNCTION_2	IF_1
0x40003b9	    0xc787b8000000	               mov dword [rdi + 0xb8], 3	        69	binary.c	FUNCTION_2
0x40003c3	          0x4889e6	                            mov rsi, rsp	        72	binary.c	FUNCTION_2	IF_2	CALL_2
0x40003c6	      0xe800000000	                          call 0x40003cb	        72	binary.c	FUNCTION_2	IF_2	CALL_2
0x40003cb	            0x85c0	                           test eax, eax	        72	binary.c	FUNCTION_2	IF_2	CALL_2
0x40003cd	            0x7911	                           jns 0x40003e0	        72	binary.c	FUNCTION_2	IF_2	CALL_2
0x40003cf	      0xbf01000000	                              mov edi, 1	        74	binary.c	FUNCTION_2	IF_2	CALL_3
0x40003d4	      0xe800000000	                          call 0x40003d9	        74	binary.c	FUNCTION_2	IF_2	CALL_3
0x40003d9	      0xb800000000	                              mov eax, 0	        75	binary.c	FUNCTION_2	IF_2
0x40003de	            0xeb45	                           jmp 0x4000425	        75	binary.c	FUNCTION_2	IF_2
0x40003e0	      0xba23010000	                          mov edx, 0x123	        80	binary.c	FUNCTION_2	CALL_4
0x40003e5	      0xbe00000000	                              mov esi, 0	        80	binary.c	FUNCTION_2	CALL_4
0x40003ea	          0x4889df	                            mov rdi, rbx	        80	binary.c	FUNCTION_2	CALL_4
0x40003ed	      0xe800000000	                          call 0x40003f2	        80	binary.c	FUNCTION_2	CALL_4
0x40003f2	          0x4885c0	                           test rax, rax	        81	binary.c	FUNCTION_2	IF_3
0x40003f5	            0x7429	                            je 0x4000420	        81	binary.c	FUNCTION_2	IF_3
0x40003f7	    0x48c740280000	               mov qword [rax + 0x28], 0	        83	binary.c	FUNCTION_2
0x40003ff	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	        84	binary.c	FUNCTION_2
0x4000404	        0x48895038	             mov qword [rax + 0x38], rdx	        84	binary.c	FUNCTION_2
0x4000408	    0x48c780900000	               mov qword [rax + 0x90], 0	        85	binary.c	FUNCTION_2
0x4000413	    0x488983f80000	             mov qword [rbx + 0xf8], rax	        87	binary.c	FUNCTION_2
0x400041a	        0x488b4308	                mov rax, qword [rbx + 8]	        89	binary.c	FUNCTION_2
0x400041e	            0xeb05	                           jmp 0x4000425	        89	binary.c	FUNCTION_2
0x4000420	      0xb800000000	                              mov eax, 0	        82	binary.c	FUNCTION_2	IF_3
0x4000425	    0x488b8c249800	            mov rcx, qword [rsp + 0x98] 	        90	binary.c	FUNCTION_2
0x400042d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        90	binary.c	FUNCTION_2
0x4000436	            0x7405	                            je 0x400043d	        90	binary.c	FUNCTION_2
0x4000438	      0xe800000000	                          call 0x400043d	        90	binary.c	FUNCTION_2
0x400043d	    0x4881c4a00000	                           add rsp, 0xa0	        90	binary.c	FUNCTION_2
0x4000444	              0x5b	                                 pop rbx	        90	binary.c	FUNCTION_2
0x4000445	              0xc3	                                     ret	        90	binary.c	FUNCTION_2
binary_get_symbol_info	CALL,1:WHILE,0:functions,0:ELSE,0:IF,0:FOR,0:DO,0:SWITCH,0	6
0x400018e	        0x4883ec08	                              sub rsp, 8	       202	binary.c	FUNCTION_7
0x4000192	          0x4889f7	                            mov rdi, rsi	       202	binary.c	FUNCTION_7
0x4000195	          0x4889d6	                            mov rsi, rdx	       203	binary.c	FUNCTION_7	CALL_1
0x4000198	      0xe800000000	                          call 0x400019d	       203	binary.c	FUNCTION_7	CALL_1
0x400019d	        0x4883c408	                              add rsp, 8	       204	binary.c	FUNCTION_7
0x40001a1	              0xc3	                                     ret	       204	binary.c	FUNCTION_7
binary_get_section_contents	CALL,2:WHILE,0:functions,0:ELSE,0:IF,1:FOR,0:DO,0:SWITCH,0	24
0x4000343	            0x4154	                                push r12	       104	binary.c	FUNCTION_3
0x4000345	              0x55	                                push rbp	       104	binary.c	FUNCTION_3
0x4000346	              0x53	                                push rbx	       104	binary.c	FUNCTION_3
0x4000347	          0x4889fb	                            mov rbx, rdi	       104	binary.c	FUNCTION_3
0x400034a	          0x4989d4	                            mov r12, rdx	       104	binary.c	FUNCTION_3
0x400034d	          0x4c89c5	                             mov rbp, r8	       104	binary.c	FUNCTION_3
0x4000350	      0xba00000000	                              mov edx, 0	       105	binary.c	FUNCTION_3	IF_1	CALL_1
0x4000355	          0x4889ce	                            mov rsi, rcx	       105	binary.c	FUNCTION_3	IF_1	CALL_1
0x4000358	      0xe800000000	                          call 0x400035d	       105	binary.c	FUNCTION_3	IF_1	CALL_1
0x400035d	      0xba00000000	                              mov edx, 0	       107	binary.c	FUNCTION_3	IF_1
0x4000362	            0x85c0	                           test eax, eax	       105	binary.c	FUNCTION_3	IF_1	CALL_1
0x4000364	            0x7517	                           jne 0x400037d	       105	binary.c	FUNCTION_3	IF_1	CALL_1
0x4000366	          0x4889da	                            mov rdx, rbx	       106	binary.c	FUNCTION_3	IF_1	CALL_2
0x4000369	          0x4889ee	                            mov rsi, rbp	       106	binary.c	FUNCTION_3	IF_1	CALL_2
0x400036c	          0x4c89e7	                            mov rdi, r12	       106	binary.c	FUNCTION_3	IF_1	CALL_2
0x400036f	      0xe800000000	                          call 0x4000374	       106	binary.c	FUNCTION_3	IF_1	CALL_2
0x4000374	          0x4839c5	                            cmp rbp, rax	       107	binary.c	FUNCTION_3	IF_1
0x4000377	           0xf94c2	                                 sete dl	       107	binary.c	FUNCTION_3	IF_1
0x400037a	           0xfb6d2	                           movzx edx, dl	       107	binary.c	FUNCTION_3	IF_1
0x400037d	            0x89d0	                            mov eax, edx	       109	binary.c	FUNCTION_3
0x400037f	              0x5b	                                 pop rbx	       109	binary.c	FUNCTION_3
0x4000380	              0x5d	                                 pop rbp	       109	binary.c	FUNCTION_3
0x4000381	            0x415c	                                 pop r12	       109	binary.c	FUNCTION_3
0x4000383	              0xc3	                                     ret	       109	binary.c	FUNCTION_3
