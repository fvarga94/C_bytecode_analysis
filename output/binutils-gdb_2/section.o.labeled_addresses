bfd_generic_is_group_section	functions,0:DO,0:SWITCH,0:FOR,0:ELSE,0:IF,0:CALL,0:WHILE,0	2
0x40009be	      0xb800000000	                              mov eax, 0	      1659	section.c	FUNCTION_23
0x40009c3	              0xc3	                                     ret	      1659	section.c	FUNCTION_23
bfd_get_unique_section_name	functions,0:DO,1:SWITCH,0:FOR,0:ELSE,0:IF,4:CALL,4:WHILE,0	68
0x4000359	            0x4156	                                push r14	      1035	section.c	FUNCTION_9
0x400035b	            0x4155	                                push r13	      1035	section.c	FUNCTION_9
0x400035d	            0x4154	                                push r12	      1035	section.c	FUNCTION_9
0x400035f	              0x55	                                push rbp	      1035	section.c	FUNCTION_9
0x4000360	              0x53	                                push rbx	      1035	section.c	FUNCTION_9
0x4000361	          0x4989fd	                            mov r13, rdi	      1035	section.c	FUNCTION_9
0x4000364	          0x4889f3	                            mov rbx, rsi	      1035	section.c	FUNCTION_9
0x4000367	          0x4989d6	                            mov r14, rdx	      1035	section.c	FUNCTION_9
0x400036a	      0xb800000000	                              mov eax, 0	      1040	section.c	FUNCTION_9	CALL_1
0x400036f	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1040	section.c	FUNCTION_9	CALL_1
0x4000376	          0x4889f7	                            mov rdi, rsi	      1040	section.c	FUNCTION_9	CALL_1
0x4000379	            0xf2ae	              repne scasb al, byte [rdi]	      1040	section.c	FUNCTION_9	CALL_1
0x400037b	          0x48f7d1	                                 not rcx	      1040	section.c	FUNCTION_9	CALL_1
0x400037e	        0x488d69ff	                      lea rbp, [rcx - 1]	      1040	section.c	FUNCTION_9	CALL_1
0x4000382	          0x8d7d08	                      lea edi, [rbp + 8]	      1041	section.c	FUNCTION_9	CALL_2
0x4000385	      0xe800000000	                          call 0x400038a	      1041	section.c	FUNCTION_9	CALL_2
0x400038a	          0x4885c0	                           test rax, rax	      1042	section.c	FUNCTION_9	IF_1
0x400038d	     0xf849b000000	                            je 0x400042e	      1042	section.c	FUNCTION_9	IF_1
0x4000393	          0x4989c4	                            mov r12, rax	      1042	section.c	FUNCTION_9	IF_1
0x4000396	            0x89ed	                            mov ebp, ebp	      1042	section.c	FUNCTION_9	IF_1
0x4000398	          0x4889ea	                            mov rdx, rbp	        53	string3.h	FUNCTION_26	CALL_3
0x400039b	          0x4889de	                            mov rsi, rbx	        53	string3.h	FUNCTION_26	CALL_3
0x400039e	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_26	CALL_3
0x40003a1	      0xe800000000	                          call 0x40003a6	        53	string3.h	FUNCTION_26	CALL_3
0x40003a6	          0x4d85f6	                           test r14, r14	      1046	section.c	FUNCTION_9	IF_2
0x40003a9	            0x742d	                            je 0x40003d8	      1046	section.c	FUNCTION_9	IF_2
0x40003ab	          0x458b06	                    mov r8d, dword [r14]	      1047	section.c	FUNCTION_9	IF_2
0x40003ae	    0x4181f83f420f	                        cmp r8d, 0xf423f	      1052	section.c	FUNCTION_9	DO_1	IF_3
0x40003b5	            0x7e27	                           jle 0x40003de	      1052	section.c	FUNCTION_9	DO_1	IF_3
0x40003b7	            0xeb0b	                           jmp 0x40003c4	      1052	section.c	FUNCTION_9	DO_1	IF_3
0x40003b9	          0x4189d8	                            mov r8d, ebx	      1054	section.c	FUNCTION_9	DO_1
0x40003bc	    0x81fb3f420f00	                        cmp ebx, 0xf423f	      1052	section.c	FUNCTION_9	DO_1	IF_3
0x40003c2	            0x7e21	                           jle 0x40003e5	      1052	section.c	FUNCTION_9	DO_1	IF_3
0x40003c4	      0xba00000000	                              mov edx, 0	      1053	section.c	FUNCTION_9	DO_1	CALL_4
0x40003c9	      0xbe1d040000	                          mov esi, 0x41d	      1053	section.c	FUNCTION_9	DO_1	CALL_4
0x40003ce	      0xbf00000000	                              mov edi, 0	      1053	section.c	FUNCTION_9	DO_1	CALL_4
0x40003d3	      0xe800000000	                          call 0x40003d8	      1053	section.c	FUNCTION_9	DO_1	CALL_4
0x40003d8	    0x41b801000000	                              mov r8d, 1	      1045	section.c	FUNCTION_9
0x40003de	          0x4c01e5	                            add rbp, r12	        33	stdio2.h	FUNCTION_38	CALL_1
0x40003e1	        0x4983c568	                           add r13, 0x68	      1056	section.c	FUNCTION_9
0x40003e5	        0x418d5801	                       lea ebx, [r8 + 1]	      1054	section.c	FUNCTION_9	DO_1
0x40003e9	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_38	CALL_1
0x40003ee	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_38	CALL_1
0x40003f5	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_38	CALL_1
0x40003fa	          0x4889ef	                            mov rdi, rbp	        33	stdio2.h	FUNCTION_38	CALL_1
0x40003fd	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_38	CALL_1
0x4000402	      0xe800000000	                          call 0x4000407	        33	stdio2.h	FUNCTION_38	CALL_1
0x4000407	      0xb900000000	                              mov ecx, 0	      1056	section.c	FUNCTION_9
0x400040c	      0xba00000000	                              mov edx, 0	      1056	section.c	FUNCTION_9
0x4000411	          0x4c89e6	                            mov rsi, r12	      1056	section.c	FUNCTION_9
0x4000414	          0x4c89ef	                            mov rdi, r13	      1056	section.c	FUNCTION_9
0x4000417	      0xe800000000	                          call 0x400041c	      1056	section.c	FUNCTION_9
0x400041c	          0x4885c0	                           test rax, rax	      1056	section.c	FUNCTION_9
0x400041f	            0x7598	                           jne 0x40003b9	      1056	section.c	FUNCTION_9
0x4000421	          0x4d85f6	                           test r14, r14	      1058	section.c	FUNCTION_9	IF_4
0x4000424	            0x740f	                            je 0x4000435	      1058	section.c	FUNCTION_9	IF_4
0x4000426	          0x41891e	                    mov dword [r14], ebx	      1059	section.c	FUNCTION_9	IF_4
0x4000429	          0x4c89e0	                            mov rax, r12	      1060	section.c	FUNCTION_9
0x400042c	            0xeb0a	                           jmp 0x4000438	      1060	section.c	FUNCTION_9
0x400042e	      0xb800000000	                              mov eax, 0	      1043	section.c	FUNCTION_9	IF_1
0x4000433	            0xeb03	                           jmp 0x4000438	      1043	section.c	FUNCTION_9	IF_1
0x4000435	          0x4c89e0	                            mov rax, r12	      1060	section.c	FUNCTION_9
0x4000438	              0x5b	                                 pop rbx	      1061	section.c	FUNCTION_9
0x4000439	              0x5d	                                 pop rbp	      1061	section.c	FUNCTION_9
0x400043a	            0x415c	                                 pop r12	      1061	section.c	FUNCTION_9
0x400043c	            0x415d	                                 pop r13	      1061	section.c	FUNCTION_9
0x400043e	            0x415e	                                 pop r14	      1061	section.c	FUNCTION_9
0x4000440	              0xc3	                                     ret	      1061	section.c	FUNCTION_9
bfd_get_section_by_name_if	functions,0:DO,0:SWITCH,0:FOR,1:ELSE,0:IF,2:CALL,2:WHILE,0	48
0x40002ca	            0x4157	                                push r15	       999	section.c	FUNCTION_8
0x40002cc	            0x4156	                                push r14	       999	section.c	FUNCTION_8
0x40002ce	            0x4155	                                push r13	       999	section.c	FUNCTION_8
0x40002d0	            0x4154	                                push r12	       999	section.c	FUNCTION_8
0x40002d2	              0x55	                                push rbp	       999	section.c	FUNCTION_8
0x40002d3	              0x53	                                push rbx	       999	section.c	FUNCTION_8
0x40002d4	        0x4883ec18	                           sub rsp, 0x18	       999	section.c	FUNCTION_8
0x40002d8	          0x4989fe	                            mov r14, rdi	       999	section.c	FUNCTION_8
0x40002db	          0x4989f4	                            mov r12, rsi	       999	section.c	FUNCTION_8
0x40002de	          0x4989d7	                            mov r15, rdx	       999	section.c	FUNCTION_8
0x40002e1	      0x48894c2408	                mov qword [rsp + 8], rcx	       999	section.c	FUNCTION_8
0x40002e6	        0x488d7f68	                   lea rdi, [rdi + 0x68]	      1003	section.c	FUNCTION_8
0x40002ea	      0xb900000000	                              mov ecx, 0	      1003	section.c	FUNCTION_8
0x40002ef	      0xba00000000	                              mov edx, 0	      1003	section.c	FUNCTION_8
0x40002f4	      0xe800000000	                          call 0x40002f9	      1003	section.c	FUNCTION_8
0x40002f9	          0x4885c0	                           test rax, rax	      1004	section.c	FUNCTION_8	IF_1
0x40002fc	            0x7443	                            je 0x4000341	      1004	section.c	FUNCTION_8	IF_1
0x40002fe	          0x4889c3	                            mov rbx, rax	      1004	section.c	FUNCTION_8	IF_1
0x4000301	        0x488b6810	            mov rbp, qword [rax + 0x10] 	      1007	section.c	FUNCTION_8
0x4000305	        0x483b6b10	            cmp rbp, qword [rbx + 0x10] 	      1009	section.c	FUNCTION_8	FOR_1	IF_2
0x4000309	            0x7526	                           jne 0x4000331	      1009	section.c	FUNCTION_8	FOR_1	IF_2
0x400030b	        0x488b7b08	                mov rdi, qword [rbx + 8]	      1010	section.c	FUNCTION_8	FOR_1	IF_2	CALL_2
0x400030f	          0x4c89e6	                            mov rsi, r12	      1010	section.c	FUNCTION_8	FOR_1	IF_2	CALL_2
0x4000312	      0xe800000000	                          call 0x4000317	      1010	section.c	FUNCTION_8	FOR_1	IF_2	CALL_2
0x4000317	            0x85c0	                           test eax, eax	      1010	section.c	FUNCTION_8	FOR_1	IF_2	CALL_2
0x4000319	            0x7516	                           jne 0x4000331	      1010	section.c	FUNCTION_8	FOR_1	IF_2	CALL_2
0x400031b	        0x4c8d6b18	                   lea r13, [rbx + 0x18]	      1011	section.c	FUNCTION_8	FOR_1	IF_2
0x400031f	      0x488b542408	                mov rdx, qword [rsp + 8]	      1011	section.c	FUNCTION_8	FOR_1	IF_2
0x4000324	          0x4c89ee	                            mov rsi, r13	      1011	section.c	FUNCTION_8	FOR_1	IF_2
0x4000327	          0x4c89f7	                            mov rdi, r14	      1011	section.c	FUNCTION_8	FOR_1	IF_2
0x400032a	          0x41ffd7	                                call r15	      1011	section.c	FUNCTION_8	FOR_1	IF_2
0x400032d	            0x85c0	                           test eax, eax	      1011	section.c	FUNCTION_8	FOR_1	IF_2
0x400032f	            0x7516	                           jne 0x4000347	      1011	section.c	FUNCTION_8	FOR_1	IF_2
0x4000331	          0x488b1b	                    mov rbx, qword [rbx]	      1008	section.c	FUNCTION_8	FOR_1
0x4000334	          0x4885db	                           test rbx, rbx	      1008	section.c	FUNCTION_8	FOR_1
0x4000337	            0x75cc	                           jne 0x4000305	      1008	section.c	FUNCTION_8	FOR_1
0x4000339	    0x41bd00000000	                             mov r13d, 0	      1014	section.c	FUNCTION_8
0x400033f	            0xeb06	                           jmp 0x4000347	      1014	section.c	FUNCTION_8
0x4000341	    0x41bd00000000	                             mov r13d, 0	      1005	section.c	FUNCTION_8	IF_1
0x4000347	          0x4c89e8	                            mov rax, r13	      1015	section.c	FUNCTION_8
0x400034a	        0x4883c418	                           add rsp, 0x18	      1015	section.c	FUNCTION_8
0x400034e	              0x5b	                                 pop rbx	      1015	section.c	FUNCTION_8
0x400034f	              0x5d	                                 pop rbp	      1015	section.c	FUNCTION_8
0x4000350	            0x415c	                                 pop r12	      1015	section.c	FUNCTION_8
0x4000352	            0x415d	                                 pop r13	      1015	section.c	FUNCTION_8
0x4000354	            0x415e	                                 pop r14	      1015	section.c	FUNCTION_8
0x4000356	            0x415f	                                 pop r15	      1015	section.c	FUNCTION_8
0x4000358	              0xc3	                                     ret	      1015	section.c	FUNCTION_8
bfd_make_section_old_way	functions,0:DO,0:SWITCH,0:FOR,0:ELSE,4:IF,8:CALL,7:WHILE,0	77
0x4000441	            0x4154	                                push r12	      1090	section.c	FUNCTION_10
0x4000443	              0x55	                                push rbp	      1090	section.c	FUNCTION_10
0x4000444	              0x53	                                push rbx	      1090	section.c	FUNCTION_10
0x4000445	        0xf6474740	           test byte [rdi + 0x47], 0x40 	      1093	section.c	FUNCTION_10	IF_1
0x4000449	            0x7414	                            je 0x400045f	      1093	section.c	FUNCTION_10	IF_1
0x400044b	      0xbf05000000	                              mov edi, 5	      1095	section.c	FUNCTION_10	IF_1	CALL_1
0x4000450	      0xe800000000	                          call 0x4000455	      1095	section.c	FUNCTION_10	IF_1	CALL_1
0x4000455	      0xb800000000	                              mov eax, 0	      1096	section.c	FUNCTION_10	IF_1
0x400045a	      0xe9df000000	                           jmp 0x400053e	      1096	section.c	FUNCTION_10	IF_1
0x400045f	          0x4889fd	                            mov rbp, rdi	      1096	section.c	FUNCTION_10	IF_1
0x4000462	          0x4989f4	                            mov r12, rsi	      1096	section.c	FUNCTION_10	IF_1
0x4000465	      0xbf00000000	                              mov edi, 0	      1099	section.c	FUNCTION_10	IF_2	CALL_2
0x400046a	      0xb906000000	                              mov ecx, 6	      1099	section.c	FUNCTION_10	IF_2	CALL_2
0x400046f	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1099	section.c	FUNCTION_10	IF_2	CALL_2
0x4000471	           0xf97c2	                                 seta dl	      1099	section.c	FUNCTION_10	IF_2	CALL_2
0x4000474	           0xf92c0	                                 setb al	      1099	section.c	FUNCTION_10	IF_2	CALL_2
0x4000477	            0x38c2	                              cmp dl, al	      1099	section.c	FUNCTION_10	IF_2	CALL_2
0x4000479	     0xf848a000000	                            je 0x4000509	      1099	section.c	FUNCTION_10	IF_2	CALL_2
0x400047f	      0xbf00000000	                              mov edi, 0	      1101	section.c	FUNCTION_10	ELSE_1	IF_3	CALL_3
0x4000484	      0xb906000000	                              mov ecx, 6	      1101	section.c	FUNCTION_10	ELSE_1	IF_3	CALL_3
0x4000489	          0x4c89e6	                            mov rsi, r12	      1101	section.c	FUNCTION_10	ELSE_1	IF_3	CALL_3
0x400048c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1101	section.c	FUNCTION_10	ELSE_1	IF_3	CALL_3
0x400048e	           0xf97c2	                                 seta dl	      1101	section.c	FUNCTION_10	ELSE_1	IF_3	CALL_3
0x4000491	           0xf92c0	                                 setb al	      1101	section.c	FUNCTION_10	ELSE_1	IF_3	CALL_3
0x4000494	            0x38c2	                              cmp dl, al	      1101	section.c	FUNCTION_10	ELSE_1	IF_3	CALL_3
0x4000496	            0x7478	                            je 0x4000510	      1101	section.c	FUNCTION_10	ELSE_1	IF_3	CALL_3
0x4000498	      0xbf00000000	                              mov edi, 0	      1103	section.c	FUNCTION_10	ELSE_2	IF_4	CALL_4
0x400049d	      0xb906000000	                              mov ecx, 6	      1103	section.c	FUNCTION_10	ELSE_2	IF_4	CALL_4
0x40004a2	          0x4c89e6	                            mov rsi, r12	      1103	section.c	FUNCTION_10	ELSE_2	IF_4	CALL_4
0x40004a5	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1103	section.c	FUNCTION_10	ELSE_2	IF_4	CALL_4
0x40004a7	           0xf97c2	                                 seta dl	      1103	section.c	FUNCTION_10	ELSE_2	IF_4	CALL_4
0x40004aa	           0xf92c0	                                 setb al	      1103	section.c	FUNCTION_10	ELSE_2	IF_4	CALL_4
0x40004ad	            0x38c2	                              cmp dl, al	      1103	section.c	FUNCTION_10	ELSE_2	IF_4	CALL_4
0x40004af	            0x7466	                            je 0x4000517	      1103	section.c	FUNCTION_10	ELSE_2	IF_4	CALL_4
0x40004b1	      0xbf00000000	                              mov edi, 0	      1105	section.c	FUNCTION_10	ELSE_3	IF_5	CALL_5
0x40004b6	      0xb906000000	                              mov ecx, 6	      1105	section.c	FUNCTION_10	ELSE_3	IF_5	CALL_5
0x40004bb	          0x4c89e6	                            mov rsi, r12	      1105	section.c	FUNCTION_10	ELSE_3	IF_5	CALL_5
0x40004be	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1105	section.c	FUNCTION_10	ELSE_3	IF_5	CALL_5
0x40004c0	           0xf97c2	                                 seta dl	      1105	section.c	FUNCTION_10	ELSE_3	IF_5	CALL_5
0x40004c3	           0xf92c0	                                 setb al	      1105	section.c	FUNCTION_10	ELSE_3	IF_5	CALL_5
0x40004c6	      0xbb00000000	                              mov ebx, 0	      1106	section.c	FUNCTION_10	ELSE_3	IF_5
0x40004cb	            0x38c2	                              cmp dl, al	      1105	section.c	FUNCTION_10	ELSE_3	IF_5	CALL_5
0x40004cd	            0x744d	                            je 0x400051c	      1105	section.c	FUNCTION_10	ELSE_3	IF_5	CALL_5
0x40004cf	        0x488d7d68	                   lea rdi, [rbp + 0x68]	      1111	section.c	FUNCTION_10	ELSE_4
0x40004d3	      0xb900000000	                              mov ecx, 0	      1111	section.c	FUNCTION_10	ELSE_4
0x40004d8	      0xba01000000	                              mov edx, 1	      1111	section.c	FUNCTION_10	ELSE_4
0x40004dd	          0x4c89e6	                            mov rsi, r12	      1111	section.c	FUNCTION_10	ELSE_4
0x40004e0	      0xe800000000	                          call 0x40004e5	      1111	section.c	FUNCTION_10	ELSE_4
0x40004e5	          0x4889c2	                            mov rdx, rax	      1111	section.c	FUNCTION_10	ELSE_4
0x40004e8	          0x4885c0	                           test rax, rax	      1112	section.c	FUNCTION_10	ELSE_4	IF_6
0x40004eb	            0x744c	                            je 0x4000539	      1112	section.c	FUNCTION_10	ELSE_4	IF_6
0x40004ed	        0x488d7018	                   lea rsi, [rax + 0x18]	      1115	section.c	FUNCTION_10	ELSE_4
0x40004f1	          0x4889f0	                            mov rax, rsi	      1119	section.c	FUNCTION_10	ELSE_4	IF_7
0x40004f4	      0x48837a1800	               cmp qword [rdx + 0x18], 0	      1116	section.c	FUNCTION_10	ELSE_4	IF_7
0x40004f9	            0x7543	                           jne 0x400053e	      1116	section.c	FUNCTION_10	ELSE_4	IF_7
0x40004fb	        0x4c896218	             mov qword [rdx + 0x18], r12	      1122	section.c	FUNCTION_10	ELSE_4
0x40004ff	          0x4889ef	                            mov rdi, rbp	      1123	section.c	FUNCTION_10	ELSE_4	CALL_6
0x4000502	      0xe839fbffff	               call sym.bfd_section_init	      1123	section.c	FUNCTION_10	ELSE_4	CALL_6
0x4000507	            0xeb35	                           jmp 0x400053e	      1123	section.c	FUNCTION_10	ELSE_4	CALL_6
0x4000509	      0xbb00000000	                              mov ebx, 0	      1100	section.c	FUNCTION_10	IF_2
0x400050e	            0xeb0c	                           jmp 0x400051c	      1100	section.c	FUNCTION_10	IF_2
0x4000510	      0xbb00000000	                              mov ebx, 0	      1102	section.c	FUNCTION_10	ELSE_1	IF_3
0x4000515	            0xeb05	                           jmp 0x400051c	      1102	section.c	FUNCTION_10	ELSE_1	IF_3
0x4000517	      0xbb00000000	                              mov ebx, 0	      1104	section.c	FUNCTION_10	ELSE_2	IF_4
0x400051c	        0x488b4508	                mov rax, qword [rbp + 8]	      1129	section.c	FUNCTION_10	IF_8	CALL_7
0x4000520	          0x4889de	                            mov rsi, rbx	      1129	section.c	FUNCTION_10	IF_8	CALL_7
0x4000523	          0x4889ef	                            mov rdi, rbp	      1129	section.c	FUNCTION_10	IF_8	CALL_7
0x4000526	    0xff9020010000	                call qword [rax + 0x120]	      1129	section.c	FUNCTION_10	IF_8	CALL_7
0x400052c	            0x85c0	                           test eax, eax	      1131	section.c	FUNCTION_10
0x400052e	      0xb800000000	                              mov eax, 0	      1131	section.c	FUNCTION_10
0x4000533	        0x480f45c3	                         cmovne rax, rbx	      1131	section.c	FUNCTION_10
0x4000537	            0xeb05	                           jmp 0x400053e	      1131	section.c	FUNCTION_10
0x4000539	      0xb800000000	                              mov eax, 0	      1113	section.c	FUNCTION_10	ELSE_4	IF_6
0x400053e	              0x5b	                                 pop rbx	      1132	section.c	FUNCTION_10
0x400053f	              0x5d	                                 pop rbp	      1132	section.c	FUNCTION_10
0x4000540	            0x415c	                                 pop r12	      1132	section.c	FUNCTION_10
0x4000542	              0xc3	                                     ret	      1132	section.c	FUNCTION_10
_bfd_nowrite_set_section_contents	functions,0:DO,0:SWITCH,0:FOR,0:ELSE,0:IF,0:CALL,1:WHILE,0	4
0x40009ca	        0x4883ec08	                              sub rsp, 8	      1685	section.c	FUNCTION_25
0x40009ce	      0xe800000000	                          call 0x40009d3	      1686	section.c	FUNCTION_25	CALL_1
0x40009d3	        0x4883c408	                              add rsp, 8	      1687	section.c	FUNCTION_25
0x40009d7	              0xc3	                                     ret	      1687	section.c	FUNCTION_25
bfd_make_section	functions,0:DO,0:SWITCH,0:FOR,0:ELSE,0:IF,0:CALL,1:WHILE,0	5
0x40006fc	        0x4883ec08	                              sub rsp, 8	      1283	section.c	FUNCTION_14
0x4000700	      0xba00000000	                              mov edx, 0	      1284	section.c	FUNCTION_14	CALL_1
0x4000705	      0xe800000000	                          call 0x400070a	      1284	section.c	FUNCTION_14	CALL_1
0x400070a	        0x4883c408	                              add rsp, 8	      1285	section.c	FUNCTION_14
0x400070e	              0xc3	                                     ret	      1285	section.c	FUNCTION_14
_bfd_generic_new_section_hook	functions,0:DO,0:SWITCH,0:FOR,0:ELSE,0:IF,1:CALL,1:WHILE,0	22
0x4000147	              0x53	                                push rbx	       809	section.c	FUNCTION_2
0x4000148	          0x4889f3	                            mov rbx, rsi	       809	section.c	FUNCTION_2
0x400014b	        0x488b4708	                mov rax, qword [rdi + 8]	       810	section.c	FUNCTION_2	CALL_1
0x400014f	    0xff9000020000	                call qword [rax + 0x200]	       810	section.c	FUNCTION_2	CALL_1
0x4000155	    0x488983f80000	             mov qword [rbx + 0xf8], rax	       810	section.c	FUNCTION_2	CALL_1
0x400015c	          0x4885c0	                           test rax, rax	       811	section.c	FUNCTION_2	IF_1
0x400015f	            0x7444	                            je 0x40001a5	       811	section.c	FUNCTION_2	IF_1
0x4000161	          0x488b13	                    mov rdx, qword [rbx]	       814	section.c	FUNCTION_2
0x4000164	        0x48895008	                mov qword [rax + 8], rdx	       814	section.c	FUNCTION_2
0x4000168	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	       815	section.c	FUNCTION_2
0x400016f	    0x48c740100000	               mov qword [rax + 0x10], 0	       815	section.c	FUNCTION_2
0x4000177	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	       816	section.c	FUNCTION_2
0x400017e	        0x48895820	             mov qword [rax + 0x20], rbx	       816	section.c	FUNCTION_2
0x4000182	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	       817	section.c	FUNCTION_2
0x4000189	    0xc74018000100	          mov dword [rax + 0x18], 0x100 	       817	section.c	FUNCTION_2
0x4000190	    0x488d83f80000	                   lea rax, [rbx + 0xf8]	       819	section.c	FUNCTION_2
0x4000197	    0x488983000100	            mov qword [rbx + 0x100], rax	       819	section.c	FUNCTION_2
0x400019e	      0xb801000000	                              mov eax, 1	       820	section.c	FUNCTION_2
0x40001a3	            0xeb05	                           jmp 0x40001aa	       820	section.c	FUNCTION_2
0x40001a5	      0xb800000000	                              mov eax, 0	       812	section.c	FUNCTION_2	IF_1
0x40001aa	              0x5b	                                 pop rbx	       821	section.c	FUNCTION_2
0x40001ab	              0xc3	                                     ret	       821	section.c	FUNCTION_2
bfd_rename_section	functions,0:DO,0:SWITCH,0:FOR,0:ELSE,0:IF,0:CALL,1:WHILE,0	9
0x4000718	        0x4883ec08	                              sub rsp, 8	      1330	section.c	FUNCTION_16
0x400071c	          0x4889d0	                            mov rax, rdx	      1330	section.c	FUNCTION_16
0x400071f	          0x488916	                    mov qword [rsi], rdx	      1335	section.c	FUNCTION_16
0x4000722	        0x488d56e8	                   lea rdx, [rsi - 0x18]	      1336	section.c	FUNCTION_16	CALL_1
0x4000726	        0x4883c768	                           add rdi, 0x68	      1336	section.c	FUNCTION_16	CALL_1
0x400072a	          0x4889c6	                            mov rsi, rax	      1336	section.c	FUNCTION_16	CALL_1
0x400072d	      0xe800000000	                          call 0x4000732	      1336	section.c	FUNCTION_16	CALL_1
0x4000732	        0x4883c408	                              add rsp, 8	      1337	section.c	FUNCTION_16
0x4000736	              0xc3	                                     ret	      1337	section.c	FUNCTION_16
bfd_generic_discard_group	functions,0:DO,0:SWITCH,0:FOR,0:ELSE,0:IF,0:CALL,0:WHILE,0	2
0x40009c4	      0xb801000000	                              mov eax, 1	      1677	section.c	FUNCTION_24
0x40009c9	              0xc3	                                     ret	      1677	section.c	FUNCTION_24
bfd_get_section_by_name	functions,0:DO,0:SWITCH,0:FOR,0:ELSE,0:IF,1:CALL,0:WHILE,0	12
0x40001f4	        0x4883ec08	                              sub rsp, 8	       890	section.c	FUNCTION_5
0x40001f8	        0x4883c768	                           add rdi, 0x68	       893	section.c	FUNCTION_5
0x40001fc	      0xb900000000	                              mov ecx, 0	       893	section.c	FUNCTION_5
0x4000201	      0xba00000000	                              mov edx, 0	       893	section.c	FUNCTION_5
0x4000206	      0xe800000000	                          call 0x400020b	       893	section.c	FUNCTION_5
0x400020b	          0x4885c0	                           test rax, rax	       894	section.c	FUNCTION_5	IF_1
0x400020e	            0x7406	                            je 0x4000216	       894	section.c	FUNCTION_5	IF_1
0x4000210	        0x4883c018	                           add rax, 0x18	       895	section.c	FUNCTION_5	IF_1
0x4000214	            0xeb05	                           jmp 0x400021b	       895	section.c	FUNCTION_5	IF_1
0x4000216	      0xb800000000	                              mov eax, 0	       897	section.c	FUNCTION_5
0x400021b	        0x4883c408	                              add rsp, 8	       898	section.c	FUNCTION_5
0x400021f	              0xc3	                                     ret	       898	section.c	FUNCTION_5
bfd_section_init	functions,0:DO,0:SWITCH,0:FOR,0:ELSE,0:IF,1:CALL,2:WHILE,0	34
0x4000040	              0x55	                                push rbp	       829	section.c	FUNCTION_3
0x4000041	              0x53	                                push rbx	       829	section.c	FUNCTION_3
0x4000042	        0x4883ec08	                              sub rsp, 8	       829	section.c	FUNCTION_3
0x4000046	          0x4889fd	                            mov rbp, rdi	       829	section.c	FUNCTION_3
0x4000049	          0x4889f3	                            mov rbx, rsi	       829	section.c	FUNCTION_3
0x400004c	    0x8b0500000000	            mov eax, dword [0x04000052] 	       830	section.c	FUNCTION_3
0x4000052	          0x894608	                mov dword [rsi + 8], eax	       830	section.c	FUNCTION_3
0x4000055	    0x8b87a0000000	            mov eax, dword [rdi + 0xa0] 	       831	section.c	FUNCTION_3
0x400005b	          0x89460c	              mov dword [rsi + 0xc], eax	       831	section.c	FUNCTION_3
0x400005e	    0x4889bef00000	             mov qword [rsi + 0xf0], rdi	       832	section.c	FUNCTION_3
0x4000065	        0x488b4708	                mov rax, qword [rdi + 8]	       834	section.c	FUNCTION_3	IF_1	CALL_1
0x4000069	    0xff9020010000	                call qword [rax + 0x120]	       834	section.c	FUNCTION_3	IF_1	CALL_1
0x400006f	            0x85c0	                           test eax, eax	       834	section.c	FUNCTION_3	IF_1	CALL_1
0x4000071	            0x744e	                            je 0x40000c1	       834	section.c	FUNCTION_3	IF_1	CALL_1
0x4000073	    0x830500000000	               add dword [0x0400007a], 1	       837	section.c	FUNCTION_3
0x400007a	    0x8385a0000000	               add dword [rbp + 0xa0], 1	       838	section.c	FUNCTION_3
0x4000081	    0x48c743100000	               mov qword [rbx + 0x10], 0	       839	section.c	FUNCTION_3	CALL_2
0x4000089	    0x488b85980000	            mov rax, qword [rbp + 0x98] 	       839	section.c	FUNCTION_3	CALL_2
0x4000090	          0x4885c0	                           test rax, rax	       839	section.c	FUNCTION_3	CALL_2
0x4000093	            0x7411	                            je 0x40000a6	       839	section.c	FUNCTION_3	CALL_2
0x4000095	        0x48894318	             mov qword [rbx + 0x18], rax	       839	section.c	FUNCTION_3	CALL_2
0x4000099	    0x488b85980000	            mov rax, qword [rbp + 0x98] 	       839	section.c	FUNCTION_3	CALL_2
0x40000a0	        0x48895810	             mov qword [rax + 0x10], rbx	       839	section.c	FUNCTION_3	CALL_2
0x40000a4	            0xeb0f	                           jmp 0x40000b5	       839	section.c	FUNCTION_3	CALL_2
0x40000a6	    0x48c743180000	               mov qword [rbx + 0x18], 0	       839	section.c	FUNCTION_3	CALL_2
0x40000ae	    0x48899d900000	            mov qword [rbp + 0x90], rbx 	       839	section.c	FUNCTION_3	CALL_2
0x40000b5	    0x48899d980000	            mov qword [rbp + 0x98], rbx 	       839	section.c	FUNCTION_3	CALL_2
0x40000bc	          0x4889d8	                            mov rax, rbx	       840	section.c	FUNCTION_3
0x40000bf	            0xeb05	                           jmp 0x40000c6	       840	section.c	FUNCTION_3
0x40000c1	      0xb800000000	                              mov eax, 0	       835	section.c	FUNCTION_3	IF_1
0x40000c6	        0x4883c408	                              add rsp, 8	       841	section.c	FUNCTION_3
0x40000ca	              0x5b	                                 pop rbx	       841	section.c	FUNCTION_3
0x40000cb	              0x5d	                                 pop rbp	       841	section.c	FUNCTION_3
0x40000cc	              0xc3	                                     ret	       841	section.c	FUNCTION_3
bfd_malloc_and_get_section	functions,0:DO,0:SWITCH,0:FOR,0:ELSE,0:IF,0:CALL,1:WHILE,0	5
0x40009a9	        0x4883ec08	                              sub rsp, 8	      1617	section.c	FUNCTION_22
0x40009ad	    0x48c702000000	                      mov qword [rdx], 0	      1618	section.c	FUNCTION_22
0x40009b4	      0xe800000000	                          call 0x40009b9	      1619	section.c	FUNCTION_22	CALL_1
0x40009b9	        0x4883c408	                              add rsp, 8	      1620	section.c	FUNCTION_22
0x40009bd	              0xc3	                                     ret	      1620	section.c	FUNCTION_22
bfd_section_list_clear	functions,0:DO,0:SWITCH,0:FOR,0:ELSE,0:IF,0:CALL,1:WHILE,0	13
0x40001ac	              0x53	                                push rbx	       867	section.c	FUNCTION_4
0x40001ad	          0x4889fb	                            mov rbx, rdi	       867	section.c	FUNCTION_4
0x40001b0	    0x48c787900000	               mov qword [rdi + 0x90], 0	       868	section.c	FUNCTION_4
0x40001bb	    0x48c787980000	               mov qword [rdi + 0x98], 0	       869	section.c	FUNCTION_4
0x40001c6	    0xc787a0000000	               mov dword [rdi + 0xa0], 0	       870	section.c	FUNCTION_4
0x40001d0	    0x8b9780000000	            mov edx, dword [rdi + 0x80] 	        90	string3.h	FUNCTION_29	CALL_6
0x40001d6	        0x48c1e203	                              shl rdx, 3	        90	string3.h	FUNCTION_29	CALL_6
0x40001da	        0x488b7f68	            mov rdi, qword [rdi + 0x68] 	        90	string3.h	FUNCTION_29	CALL_6
0x40001de	      0xbe00000000	                              mov esi, 0	        90	string3.h	FUNCTION_29	CALL_6
0x40001e3	      0xe800000000	                          call 0x40001e8	        90	string3.h	FUNCTION_29	CALL_6
0x40001e8	    0xc78384000000	               mov dword [rbx + 0x84], 0	       873	section.c	FUNCTION_4
0x40001f2	              0x5b	                                 pop rbx	       874	section.c	FUNCTION_4
0x40001f3	              0xc3	                                     ret	       874	section.c	FUNCTION_4
bfd_make_section_with_flags	functions,0:DO,0:SWITCH,0:FOR,0:ELSE,0:IF,4:CALL,6:WHILE,0	76
0x4000602	            0x4154	                                push r12	      1235	section.c	FUNCTION_13
0x4000604	              0x55	                                push rbp	      1235	section.c	FUNCTION_13
0x4000605	              0x53	                                push rbx	      1235	section.c	FUNCTION_13
0x4000606	          0x4885ff	                           test rdi, rdi	      1239	section.c	FUNCTION_13	IF_1
0x4000609	            0x7414	                            je 0x400061f	      1239	section.c	FUNCTION_13	IF_1
0x400060b	          0x4889fd	                            mov rbp, rdi	      1239	section.c	FUNCTION_13	IF_1
0x400060e	          0x4889f3	                            mov rbx, rsi	      1239	section.c	FUNCTION_13	IF_1
0x4000611	          0x4189d4	                           mov r12d, edx	      1239	section.c	FUNCTION_13	IF_1
0x4000614	          0x4885f6	                           test rsi, rsi	      1239	section.c	FUNCTION_13	IF_1
0x4000617	            0x7406	                            je 0x400061f	      1239	section.c	FUNCTION_13	IF_1
0x4000619	        0xf6474740	           test byte [rdi + 0x47], 0x40 	      1239	section.c	FUNCTION_13	IF_1
0x400061d	            0x7414	                            je 0x4000633	      1239	section.c	FUNCTION_13	IF_1
0x400061f	      0xbf05000000	                              mov edi, 5	      1241	section.c	FUNCTION_13	IF_1	CALL_1
0x4000624	      0xe800000000	                          call 0x4000629	      1241	section.c	FUNCTION_13	IF_1	CALL_1
0x4000629	      0xb800000000	                              mov eax, 0	      1242	section.c	FUNCTION_13	IF_1
0x400062e	      0xe9c4000000	                           jmp 0x40006f7	      1242	section.c	FUNCTION_13	IF_1
0x4000633	      0xbf00000000	                              mov edi, 0	      1245	section.c	FUNCTION_13	IF_2	CALL_2
0x4000638	      0xb906000000	                              mov ecx, 6	      1245	section.c	FUNCTION_13	IF_2	CALL_2
0x400063d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1245	section.c	FUNCTION_13	IF_2	CALL_2
0x400063f	           0xf97c2	                                 seta dl	      1245	section.c	FUNCTION_13	IF_2	CALL_2
0x4000642	           0xf92c0	                                 setb al	      1245	section.c	FUNCTION_13	IF_2	CALL_2
0x4000645	            0x38c2	                              cmp dl, al	      1245	section.c	FUNCTION_13	IF_2	CALL_2
0x4000647	     0xf8490000000	                            je 0x40006dd	      1245	section.c	FUNCTION_13	IF_2	CALL_2
0x400064d	      0xbf00000000	                              mov edi, 0	      1246	section.c	FUNCTION_13	IF_2	CALL_3
0x4000652	      0xb906000000	                              mov ecx, 6	      1246	section.c	FUNCTION_13	IF_2	CALL_3
0x4000657	          0x4889de	                            mov rsi, rbx	      1246	section.c	FUNCTION_13	IF_2	CALL_3
0x400065a	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1246	section.c	FUNCTION_13	IF_2	CALL_3
0x400065c	           0xf97c2	                                 seta dl	      1246	section.c	FUNCTION_13	IF_2	CALL_3
0x400065f	           0xf92c0	                                 setb al	      1246	section.c	FUNCTION_13	IF_2	CALL_3
0x4000662	            0x38c2	                              cmp dl, al	      1246	section.c	FUNCTION_13	IF_2	CALL_3
0x4000664	            0x747e	                            je 0x40006e4	      1246	section.c	FUNCTION_13	IF_2	CALL_3
0x4000666	      0xbf00000000	                              mov edi, 0	      1247	section.c	FUNCTION_13	IF_2	CALL_4
0x400066b	      0xb906000000	                              mov ecx, 6	      1247	section.c	FUNCTION_13	IF_2	CALL_4
0x4000670	          0x4889de	                            mov rsi, rbx	      1247	section.c	FUNCTION_13	IF_2	CALL_4
0x4000673	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1247	section.c	FUNCTION_13	IF_2	CALL_4
0x4000675	           0xf97c2	                                 seta dl	      1247	section.c	FUNCTION_13	IF_2	CALL_4
0x4000678	           0xf92c0	                                 setb al	      1247	section.c	FUNCTION_13	IF_2	CALL_4
0x400067b	            0x38c2	                              cmp dl, al	      1247	section.c	FUNCTION_13	IF_2	CALL_4
0x400067d	            0x746c	                            je 0x40006eb	      1247	section.c	FUNCTION_13	IF_2	CALL_4
0x400067f	      0xbf00000000	                              mov edi, 0	      1248	section.c	FUNCTION_13	IF_2	CALL_5
0x4000684	      0xb906000000	                              mov ecx, 6	      1248	section.c	FUNCTION_13	IF_2	CALL_5
0x4000689	          0x4889de	                            mov rsi, rbx	      1248	section.c	FUNCTION_13	IF_2	CALL_5
0x400068c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1248	section.c	FUNCTION_13	IF_2	CALL_5
0x400068e	           0xf97c1	                                 seta cl	      1248	section.c	FUNCTION_13	IF_2	CALL_5
0x4000691	           0xf92c2	                                 setb dl	      1248	section.c	FUNCTION_13	IF_2	CALL_5
0x4000694	      0xb800000000	                              mov eax, 0	      1249	section.c	FUNCTION_13	IF_2
0x4000699	            0x38d1	                              cmp cl, dl	      1248	section.c	FUNCTION_13	IF_2	CALL_5
0x400069b	            0x745a	                            je 0x40006f7	      1248	section.c	FUNCTION_13	IF_2	CALL_5
0x400069d	        0x488d7d68	                   lea rdi, [rbp + 0x68]	      1251	section.c	FUNCTION_13
0x40006a1	      0xb900000000	                              mov ecx, 0	      1251	section.c	FUNCTION_13
0x40006a6	      0xba01000000	                              mov edx, 1	      1251	section.c	FUNCTION_13
0x40006ab	          0x4889de	                            mov rsi, rbx	      1251	section.c	FUNCTION_13
0x40006ae	      0xe800000000	                          call 0x40006b3	      1251	section.c	FUNCTION_13
0x40006b3	          0x4889c6	                            mov rsi, rax	      1251	section.c	FUNCTION_13
0x40006b6	          0x4885c0	                           test rax, rax	      1252	section.c	FUNCTION_13	IF_3
0x40006b9	            0x7437	                            je 0x40006f2	      1252	section.c	FUNCTION_13	IF_3
0x40006bb	      0xb800000000	                              mov eax, 0	      1259	section.c	FUNCTION_13	IF_4
0x40006c0	      0x48837e1800	               cmp qword [rsi + 0x18], 0	      1256	section.c	FUNCTION_13	IF_4
0x40006c5	            0x7530	                           jne 0x40006f7	      1256	section.c	FUNCTION_13	IF_4
0x40006c7	        0x48895e18	             mov qword [rsi + 0x18], rbx	      1262	section.c	FUNCTION_13
0x40006cb	        0x44896638	            mov dword [rsi + 0x38], r12d	      1263	section.c	FUNCTION_13
0x40006cf	        0x4883c618	                           add rsi, 0x18	      1255	section.c	FUNCTION_13
0x40006d3	          0x4889ef	                            mov rdi, rbp	      1264	section.c	FUNCTION_13	CALL_6
0x40006d6	      0xe865f9ffff	               call sym.bfd_section_init	      1264	section.c	FUNCTION_13	CALL_6
0x40006db	            0xeb1a	                           jmp 0x40006f7	      1264	section.c	FUNCTION_13	CALL_6
0x40006dd	      0xb800000000	                              mov eax, 0	      1249	section.c	FUNCTION_13	IF_2
0x40006e2	            0xeb13	                           jmp 0x40006f7	      1249	section.c	FUNCTION_13	IF_2
0x40006e4	      0xb800000000	                              mov eax, 0	      1249	section.c	FUNCTION_13	IF_2
0x40006e9	            0xeb0c	                           jmp 0x40006f7	      1249	section.c	FUNCTION_13	IF_2
0x40006eb	      0xb800000000	                              mov eax, 0	      1249	section.c	FUNCTION_13	IF_2
0x40006f0	            0xeb05	                           jmp 0x40006f7	      1249	section.c	FUNCTION_13	IF_2
0x40006f2	      0xb800000000	                              mov eax, 0	      1253	section.c	FUNCTION_13	IF_3
0x40006f7	              0x5b	                                 pop rbx	      1265	section.c	FUNCTION_13
0x40006f8	              0x5d	                                 pop rbp	      1265	section.c	FUNCTION_13
0x40006f9	            0x415c	                                 pop r12	      1265	section.c	FUNCTION_13
0x40006fb	              0xc3	                                     ret	      1265	section.c	FUNCTION_13
bfd_make_section_anyway_with_flags	functions,0:DO,0:SWITCH,0:FOR,0:ELSE,0:IF,4:CALL,3:WHILE,0	53
0x4000543	            0x4156	                                push r14	      1156	section.c	FUNCTION_11
0x4000545	            0x4155	                                push r13	      1156	section.c	FUNCTION_11
0x4000547	            0x4154	                                push r12	      1156	section.c	FUNCTION_11
0x4000549	              0x55	                                push rbp	      1156	section.c	FUNCTION_11
0x400054a	              0x53	                                push rbx	      1156	section.c	FUNCTION_11
0x400054b	        0xf6474740	           test byte [rdi + 0x47], 0x40 	      1160	section.c	FUNCTION_11	IF_1
0x400054f	            0x7414	                            je 0x4000565	      1160	section.c	FUNCTION_11	IF_1
0x4000551	      0xbf05000000	                              mov edi, 5	      1162	section.c	FUNCTION_11	IF_1	CALL_1
0x4000556	      0xe800000000	                          call 0x400055b	      1162	section.c	FUNCTION_11	IF_1	CALL_1
0x400055b	      0xb800000000	                              mov eax, 0	      1163	section.c	FUNCTION_11	IF_1
0x4000560	      0xe981000000	                           jmp 0x40005e6	      1163	section.c	FUNCTION_11	IF_1
0x4000565	          0x4889fd	                            mov rbp, rdi	      1163	section.c	FUNCTION_11	IF_1
0x4000568	          0x4989f4	                            mov r12, rsi	      1163	section.c	FUNCTION_11	IF_1
0x400056b	          0x4189d5	                           mov r13d, edx	      1163	section.c	FUNCTION_11	IF_1
0x400056e	        0x4c8d7768	                   lea r14, [rdi + 0x68]	      1166	section.c	FUNCTION_11
0x4000572	      0xb900000000	                              mov ecx, 0	      1166	section.c	FUNCTION_11
0x4000577	      0xba01000000	                              mov edx, 1	      1166	section.c	FUNCTION_11
0x400057c	          0x4c89f7	                            mov rdi, r14	      1166	section.c	FUNCTION_11
0x400057f	      0xe800000000	                          call 0x4000584	      1166	section.c	FUNCTION_11
0x4000584	          0x4889c3	                            mov rbx, rax	      1166	section.c	FUNCTION_11
0x4000587	          0x4885c0	                           test rax, rax	      1167	section.c	FUNCTION_11	IF_2
0x400058a	            0x744e	                            je 0x40005da	      1167	section.c	FUNCTION_11	IF_2
0x400058c	        0x488d7018	                   lea rsi, [rax + 0x18]	      1170	section.c	FUNCTION_11
0x4000590	      0x4883781800	               cmp qword [rax + 0x18], 0	      1171	section.c	FUNCTION_11	IF_3
0x4000595	            0x7432	                            je 0x40005c9	      1171	section.c	FUNCTION_11	IF_3
0x4000597	          0x4c89e2	                            mov rdx, r12	      1178	section.c	FUNCTION_11	IF_3
0x400059a	          0x4c89f6	                            mov rsi, r14	      1178	section.c	FUNCTION_11	IF_3
0x400059d	      0xbf00000000	                              mov edi, 0	      1178	section.c	FUNCTION_11	IF_3
0x40005a2	      0xe800000000	                          call 0x40005a7	      1178	section.c	FUNCTION_11	IF_3
0x40005a7	          0x4885c0	                           test rax, rax	      1180	section.c	FUNCTION_11	IF_3	IF_4
0x40005aa	            0x7435	                            je 0x40005e1	      1180	section.c	FUNCTION_11	IF_3	IF_4
0x40005ac	          0x488b13	                    mov rdx, qword [rbx]	      1183	section.c	FUNCTION_11	IF_3
0x40005af	          0x488910	                    mov qword [rax], rdx	      1183	section.c	FUNCTION_11	IF_3
0x40005b2	        0x488b5308	                mov rdx, qword [rbx + 8]	      1183	section.c	FUNCTION_11	IF_3
0x40005b6	        0x48895008	                mov qword [rax + 8], rdx	      1183	section.c	FUNCTION_11	IF_3
0x40005ba	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	      1183	section.c	FUNCTION_11	IF_3
0x40005be	        0x48895010	             mov qword [rax + 0x10], rdx	      1183	section.c	FUNCTION_11	IF_3
0x40005c2	          0x488903	                    mov qword [rbx], rax	      1184	section.c	FUNCTION_11	IF_3
0x40005c5	        0x488d7018	                   lea rsi, [rax + 0x18]	      1185	section.c	FUNCTION_11	IF_3
0x40005c9	        0x44896e20	            mov dword [rsi + 0x20], r13d	      1188	section.c	FUNCTION_11
0x40005cd	          0x4c8926	                    mov qword [rsi], r12	      1189	section.c	FUNCTION_11
0x40005d0	          0x4889ef	                            mov rdi, rbp	      1190	section.c	FUNCTION_11	CALL_3
0x40005d3	      0xe868faffff	               call sym.bfd_section_init	      1190	section.c	FUNCTION_11	CALL_3
0x40005d8	            0xeb0c	                           jmp 0x40005e6	      1190	section.c	FUNCTION_11	CALL_3
0x40005da	      0xb800000000	                              mov eax, 0	      1168	section.c	FUNCTION_11	IF_2
0x40005df	            0xeb05	                           jmp 0x40005e6	      1168	section.c	FUNCTION_11	IF_2
0x40005e1	      0xb800000000	                              mov eax, 0	      1181	section.c	FUNCTION_11	IF_3	IF_4
0x40005e6	              0x5b	                                 pop rbx	      1191	section.c	FUNCTION_11
0x40005e7	              0x5d	                                 pop rbp	      1191	section.c	FUNCTION_11
0x40005e8	            0x415c	                                 pop r12	      1191	section.c	FUNCTION_11
0x40005ea	            0x415d	                                 pop r13	      1191	section.c	FUNCTION_11
0x40005ec	            0x415e	                                 pop r14	      1191	section.c	FUNCTION_11
0x40005ee	              0xc3	                                     ret	      1191	section.c	FUNCTION_11
bfd_get_section_contents	functions,0:DO,0:SWITCH,0:FOR,0:ELSE,1:IF,7:CALL,6:WHILE,0	63
0x40008ce	        0x4883ec08	                              sub rsp, 8	      1550	section.c	FUNCTION_21
0x40008d2	          0x4989d1	                             mov r9, rdx	      1550	section.c	FUNCTION_21
0x40008d5	          0x8b5620	            mov edx, dword [rsi + 0x20] 	      1553	section.c	FUNCTION_21	IF_1
0x40008d8	          0xf6c280	                           test dl, 0x80	      1553	section.c	FUNCTION_21	IF_1
0x40008db	            0x741a	                            je 0x40008f7	      1553	section.c	FUNCTION_21	IF_1
0x40008dd	          0x4c89c2	                             mov rdx, r8	        90	string3.h	FUNCTION_29	CALL_6
0x40008e0	      0xbe00000000	                              mov esi, 0	        90	string3.h	FUNCTION_29	CALL_6
0x40008e5	          0x4c89cf	                             mov rdi, r9	        90	string3.h	FUNCTION_29	CALL_6
0x40008e8	      0xe800000000	                          call 0x40008ed	        90	string3.h	FUNCTION_29	CALL_6
0x40008ed	      0xb801000000	                              mov eax, 1	      1556	section.c	FUNCTION_21	IF_1
0x40008f2	      0xe9ad000000	                           jmp 0x40009a4	      1556	section.c	FUNCTION_21	IF_1
0x40008f7	         0xfb64744	           movzx eax, byte [rdi + 0x44] 	      1559	section.c	FUNCTION_21	IF_2
0x40008fb	          0x83e018	                           and eax, 0x18	      1559	section.c	FUNCTION_21	IF_2
0x40008fe	            0x3c10	                            cmp al, 0x10	      1559	section.c	FUNCTION_21	IF_2
0x4000900	            0x7409	                            je 0x400090b	      1559	section.c	FUNCTION_21	IF_2
0x4000902	        0x488b4640	            mov rax, qword [rsi + 0x40] 	      1559	section.c	FUNCTION_21	IF_2
0x4000906	          0x4885c0	                           test rax, rax	      1559	section.c	FUNCTION_21	IF_2
0x4000909	            0x7504	                           jne 0x400090f	      1559	section.c	FUNCTION_21	IF_2
0x400090b	        0x488b4638	            mov rax, qword [rsi + 0x38] 	      1562	section.c	FUNCTION_21	ELSE_1
0x400090f	          0x4839c8	                            cmp rax, rcx	      1563	section.c	FUNCTION_21	ELSE_1	IF_3
0x4000912	            0x720e	                            jb 0x4000922	      1563	section.c	FUNCTION_21	ELSE_1	IF_3
0x4000914	          0x4c39c0	                             cmp rax, r8	      1563	section.c	FUNCTION_21	ELSE_1	IF_3
0x4000917	            0x7209	                            jb 0x4000922	      1563	section.c	FUNCTION_21	ELSE_1	IF_3
0x4000919	        0x4d8d1408	                     lea r10, [r8 + rcx]	      1566	section.c	FUNCTION_21	ELSE_1	IF_3
0x400091d	          0x4c39d0	                            cmp rax, r10	      1566	section.c	FUNCTION_21	ELSE_1	IF_3
0x4000920	            0x7311	                           jae 0x4000933	      1566	section.c	FUNCTION_21	ELSE_1	IF_3
0x4000922	      0xbf11000000	                           mov edi, 0x11	      1568	section.c	FUNCTION_21	ELSE_1	IF_3	CALL_2
0x4000927	      0xe800000000	                          call 0x400092c	      1568	section.c	FUNCTION_21	ELSE_1	IF_3	CALL_2
0x400092c	      0xb800000000	                              mov eax, 0	      1569	section.c	FUNCTION_21	ELSE_1	IF_3
0x4000931	            0xeb71	                           jmp 0x40009a4	      1569	section.c	FUNCTION_21	ELSE_1	IF_3
0x4000933	      0xb801000000	                              mov eax, 1	      1574	section.c	FUNCTION_21	IF_4
0x4000938	          0x4d85c0	                             test r8, r8	      1572	section.c	FUNCTION_21	IF_4
0x400093b	            0x7467	                            je 0x40009a4	      1572	section.c	FUNCTION_21	IF_4
0x400093d	          0xf6c601	                              test dh, 1	      1576	section.c	FUNCTION_21	IF_5
0x4000940	            0x7517	                           jne 0x4000959	      1576	section.c	FUNCTION_21	IF_5
0x4000942	          0x4c89c2	                             mov rdx, r8	        90	string3.h	FUNCTION_29	CALL_6
0x4000945	      0xbe00000000	                              mov esi, 0	        90	string3.h	FUNCTION_29	CALL_6
0x400094a	          0x4c89cf	                             mov rdi, r9	        90	string3.h	FUNCTION_29	CALL_6
0x400094d	      0xe800000000	                          call 0x4000952	        90	string3.h	FUNCTION_29	CALL_6
0x4000952	      0xb801000000	                              mov eax, 1	      1579	section.c	FUNCTION_21	IF_5
0x4000957	            0xeb4b	                           jmp 0x40009a4	      1579	section.c	FUNCTION_21	IF_5
0x4000959	          0xf6c640	                           test dh, 0x40	      1582	section.c	FUNCTION_21	IF_6
0x400095c	            0x7439	                            je 0x4000997	      1582	section.c	FUNCTION_21	IF_6
0x400095e	    0x488b86b00000	            mov rax, qword [rsi + 0xb0] 	      1584	section.c	FUNCTION_21	IF_6	IF_7
0x4000965	          0x4885c0	                           test rax, rax	      1584	section.c	FUNCTION_21	IF_6	IF_7
0x4000968	            0x7517	                           jne 0x4000981	      1584	section.c	FUNCTION_21	IF_6	IF_7
0x400096a	          0x80e6bf	                            and dh, 0xbf	      1589	section.c	FUNCTION_21	IF_6	IF_7
0x400096d	          0x895620	             mov dword [rsi + 0x20], edx	      1589	section.c	FUNCTION_21	IF_6	IF_7
0x4000970	      0xbf05000000	                              mov edi, 5	      1590	section.c	FUNCTION_21	IF_6	IF_7	CALL_4
0x4000975	      0xe800000000	                          call 0x400097a	      1590	section.c	FUNCTION_21	IF_6	IF_7	CALL_4
0x400097a	      0xb800000000	                              mov eax, 0	      1591	section.c	FUNCTION_21	IF_6	IF_7
0x400097f	            0xeb23	                           jmp 0x40009a4	      1591	section.c	FUNCTION_21	IF_6	IF_7
0x4000981	        0x488d3408	                    lea rsi, [rax + rcx]	        59	string3.h	FUNCTION_27	CALL_3
0x4000985	          0x4c89c2	                             mov rdx, r8	        59	string3.h	FUNCTION_27	CALL_3
0x4000988	          0x4c89cf	                             mov rdi, r9	        59	string3.h	FUNCTION_27	CALL_3
0x400098b	      0xe800000000	                          call 0x4000990	        59	string3.h	FUNCTION_27	CALL_3
0x4000990	      0xb801000000	                              mov eax, 1	      1595	section.c	FUNCTION_21	IF_6
0x4000995	            0xeb0d	                           jmp 0x40009a4	      1595	section.c	FUNCTION_21	IF_6
0x4000997	        0x488b4708	                mov rax, qword [rdi + 8]	      1598	section.c	FUNCTION_21	CALL_6
0x400099b	          0x4c89ca	                             mov rdx, r9	      1598	section.c	FUNCTION_21	CALL_6
0x400099e	    0xff9028010000	                call qword [rax + 0x128]	      1598	section.c	FUNCTION_21	CALL_6
0x40009a4	        0x4883c408	                              add rsp, 8	      1600	section.c	FUNCTION_21
0x40009a8	              0xc3	                                     ret	      1600	section.c	FUNCTION_21
bfd_sections_find_if	functions,0:DO,0:SWITCH,0:FOR,1:ELSE,0:IF,1:CALL,1:WHILE,0	27
0x400079f	            0x4155	                                push r13	      1405	section.c	FUNCTION_18
0x40007a1	            0x4154	                                push r12	      1405	section.c	FUNCTION_18
0x40007a3	              0x55	                                push rbp	      1405	section.c	FUNCTION_18
0x40007a4	              0x53	                                push rbx	      1405	section.c	FUNCTION_18
0x40007a5	        0x4883ec08	                              sub rsp, 8	      1405	section.c	FUNCTION_18
0x40007a9	          0x4889fd	                            mov rbp, rdi	      1405	section.c	FUNCTION_18
0x40007ac	          0x4989f5	                            mov r13, rsi	      1405	section.c	FUNCTION_18
0x40007af	          0x4989d4	                            mov r12, rdx	      1405	section.c	FUNCTION_18
0x40007b2	    0x488b9f900000	            mov rbx, qword [rdi + 0x90] 	      1408	section.c	FUNCTION_18	FOR_1
0x40007b9	          0x4885db	                           test rbx, rbx	      1408	section.c	FUNCTION_18	FOR_1
0x40007bc	            0x7419	                            je 0x40007d7	      1408	section.c	FUNCTION_18	FOR_1
0x40007be	          0x4c89e2	                            mov rdx, r12	      1409	section.c	FUNCTION_18	FOR_1	IF_1
0x40007c1	          0x4889de	                            mov rsi, rbx	      1409	section.c	FUNCTION_18	FOR_1	IF_1
0x40007c4	          0x4889ef	                            mov rdi, rbp	      1409	section.c	FUNCTION_18	FOR_1	IF_1
0x40007c7	          0x41ffd5	                                call r13	      1409	section.c	FUNCTION_18	FOR_1	IF_1
0x40007ca	            0x85c0	                           test eax, eax	      1409	section.c	FUNCTION_18	FOR_1	IF_1
0x40007cc	            0x7509	                           jne 0x40007d7	      1409	section.c	FUNCTION_18	FOR_1	IF_1
0x40007ce	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      1408	section.c	FUNCTION_18	FOR_1
0x40007d2	          0x4885db	                           test rbx, rbx	      1408	section.c	FUNCTION_18	FOR_1
0x40007d5	            0x75e7	                           jne 0x40007be	      1408	section.c	FUNCTION_18	FOR_1
0x40007d7	          0x4889d8	                            mov rax, rbx	      1413	section.c	FUNCTION_18
0x40007da	        0x4883c408	                              add rsp, 8	      1413	section.c	FUNCTION_18
0x40007de	              0x5b	                                 pop rbx	      1413	section.c	FUNCTION_18
0x40007df	              0x5d	                                 pop rbp	      1413	section.c	FUNCTION_18
0x40007e0	            0x415c	                                 pop r12	      1413	section.c	FUNCTION_18
0x40007e2	            0x415d	                                 pop r13	      1413	section.c	FUNCTION_18
0x40007e4	              0xc3	                                     ret	      1413	section.c	FUNCTION_18
bfd_set_section_flags	functions,0:DO,0:SWITCH,0:FOR,0:ELSE,0:IF,0:CALL,0:WHILE,0	3
0x400070f	          0x895620	             mov dword [rsi + 0x20], edx	      1312	section.c	FUNCTION_15
0x4000712	      0xb801000000	                              mov eax, 1	      1314	section.c	FUNCTION_15
0x4000717	              0xc3	                                     ret	      1314	section.c	FUNCTION_15
bfd_get_next_section_by_name	functions,0:DO,0:SWITCH,0:FOR,1:ELSE,0:IF,3:CALL,2:WHILE,1	42
0x4000220	            0x4155	                                push r13	       917	section.c	FUNCTION_6
0x4000222	            0x4154	                                push r12	       917	section.c	FUNCTION_6
0x4000224	              0x55	                                push rbp	       917	section.c	FUNCTION_6
0x4000225	              0x53	                                push rbx	       917	section.c	FUNCTION_6
0x4000226	        0x4883ec08	                              sub rsp, 8	       917	section.c	FUNCTION_6
0x400022a	          0x4889fd	                            mov rbp, rdi	       917	section.c	FUNCTION_6
0x400022d	        0x4c8b66f8	                mov r12, qword [rsi - 8]	       925	section.c	FUNCTION_6
0x4000231	          0x4c8b2e	                    mov r13, qword [rsi]	       926	section.c	FUNCTION_6
0x4000234	        0x488b5ee8	             mov rbx, qword [rsi - 0x18]	       927	section.c	FUNCTION_6	FOR_1
0x4000238	          0x4885db	                           test rbx, rbx	       927	section.c	FUNCTION_6	FOR_1
0x400023b	            0x7424	                            je 0x4000261	       927	section.c	FUNCTION_6	FOR_1
0x400023d	        0x4c3b6310	            cmp r12, qword [rbx + 0x10] 	       930	section.c	FUNCTION_6	FOR_1	IF_1
0x4000241	            0x7516	                           jne 0x4000259	       930	section.c	FUNCTION_6	FOR_1	IF_1
0x4000243	        0x488b7b08	                mov rdi, qword [rbx + 8]	       931	section.c	FUNCTION_6	FOR_1	IF_1	CALL_1
0x4000247	          0x4c89ee	                            mov rsi, r13	       931	section.c	FUNCTION_6	FOR_1	IF_1	CALL_1
0x400024a	      0xe800000000	                          call 0x400024f	       931	section.c	FUNCTION_6	FOR_1	IF_1	CALL_1
0x400024f	            0x85c0	                           test eax, eax	       931	section.c	FUNCTION_6	FOR_1	IF_1	CALL_1
0x4000251	            0x7506	                           jne 0x4000259	       931	section.c	FUNCTION_6	FOR_1	IF_1	CALL_1
0x4000253	        0x488d4318	                   lea rax, [rbx + 0x18]	       932	section.c	FUNCTION_6	FOR_1	IF_1
0x4000257	            0xeb35	                           jmp 0x400028e	       932	section.c	FUNCTION_6	FOR_1	IF_1
0x4000259	          0x488b1b	                    mov rbx, qword [rbx]	       929	section.c	FUNCTION_6	FOR_1
0x400025c	          0x4885db	                           test rbx, rbx	       927	section.c	FUNCTION_6	FOR_1
0x400025f	            0x75dc	                           jne 0x400023d	       927	section.c	FUNCTION_6	FOR_1
0x4000261	          0x4885ed	                           test rbp, rbp	       934	section.c	FUNCTION_6	IF_2
0x4000264	            0x7517	                           jne 0x400027d	       934	section.c	FUNCTION_6	IF_2
0x4000266	      0xb800000000	                              mov eax, 0	       944	section.c	FUNCTION_6
0x400026b	            0xeb21	                           jmp 0x400028e	       944	section.c	FUNCTION_6
0x400026d	          0x4c89ee	                            mov rsi, r13	       938	section.c	FUNCTION_6	IF_2	WHILE_1	CALL_2
0x4000270	          0x4889ef	                            mov rdi, rbp	       938	section.c	FUNCTION_6	IF_2	WHILE_1	CALL_2
0x4000273	      0xe800000000	                          call 0x4000278	       938	section.c	FUNCTION_6	IF_2	WHILE_1	CALL_2
0x4000278	          0x4885c0	                           test rax, rax	       939	section.c	FUNCTION_6	IF_2	WHILE_1	IF_3
0x400027b	            0x7511	                           jne 0x400028e	       939	section.c	FUNCTION_6	IF_2	WHILE_1	IF_3
0x400027d	    0x488badf00000	            mov rbp, qword [rbp + 0xf0] 	       936	section.c	FUNCTION_6	IF_2	WHILE_1
0x4000284	          0x4885ed	                           test rbp, rbp	       936	section.c	FUNCTION_6	IF_2	WHILE_1
0x4000287	            0x75e4	                           jne 0x400026d	       936	section.c	FUNCTION_6	IF_2	WHILE_1
0x4000289	      0xb800000000	                              mov eax, 0	       944	section.c	FUNCTION_6
0x400028e	        0x4883c408	                              add rsp, 8	       945	section.c	FUNCTION_6
0x4000292	              0x5b	                                 pop rbx	       945	section.c	FUNCTION_6
0x4000293	              0x5d	                                 pop rbp	       945	section.c	FUNCTION_6
0x4000294	            0x415c	                                 pop r12	       945	section.c	FUNCTION_6
0x4000296	            0x415d	                                 pop r13	       945	section.c	FUNCTION_6
0x4000298	              0xc3	                                     ret	       945	section.c	FUNCTION_6
bfd_make_section_anyway	functions,0:DO,0:SWITCH,0:FOR,0:ELSE,0:IF,0:CALL,1:WHILE,0	5
0x40005ef	        0x4883ec08	                              sub rsp, 8	      1212	section.c	FUNCTION_12
0x40005f3	      0xba00000000	                              mov edx, 0	      1213	section.c	FUNCTION_12	CALL_1
0x40005f8	      0xe800000000	                          call 0x40005fd	      1213	section.c	FUNCTION_12	CALL_1
0x40005fd	        0x4883c408	                              add rsp, 8	      1214	section.c	FUNCTION_12
0x4000601	              0xc3	                                     ret	      1214	section.c	FUNCTION_12
bfd_get_linker_section	functions,0:DO,0:SWITCH,0:FOR,0:ELSE,0:IF,0:CALL,2:WHILE,1	15
0x4000299	        0x4883ec08	                              sub rsp, 8	       961	section.c	FUNCTION_7
0x400029d	      0xe800000000	                          call 0x40002a2	       962	section.c	FUNCTION_7	CALL_1
0x40002a2	          0x4885c0	                           test rax, rax	       964	section.c	FUNCTION_7	WHILE_1
0x40002a5	            0x741e	                            je 0x40002c5	       964	section.c	FUNCTION_7	WHILE_1
0x40002a7	        0xf6402210	           test byte [rax + 0x22], 0x10 	       964	section.c	FUNCTION_7	WHILE_1
0x40002ab	            0x7518	                           jne 0x40002c5	       964	section.c	FUNCTION_7	WHILE_1
0x40002ad	          0x4889c6	                            mov rsi, rax	       965	section.c	FUNCTION_7	CALL_2
0x40002b0	      0xbf00000000	                              mov edi, 0	       965	section.c	FUNCTION_7	CALL_2
0x40002b5	      0xe800000000	                          call 0x40002ba	       965	section.c	FUNCTION_7	CALL_2
0x40002ba	          0x4885c0	                           test rax, rax	       964	section.c	FUNCTION_7	WHILE_1
0x40002bd	            0x7406	                            je 0x40002c5	       964	section.c	FUNCTION_7	WHILE_1
0x40002bf	        0xf6402210	           test byte [rax + 0x22], 0x10 	       964	section.c	FUNCTION_7	WHILE_1
0x40002c3	            0x74e8	                            je 0x40002ad	       964	section.c	FUNCTION_7	WHILE_1
0x40002c5	        0x4883c408	                              add rsp, 8	       967	section.c	FUNCTION_7
0x40002c9	              0xc3	                                     ret	       967	section.c	FUNCTION_7
bfd_map_over_sections	functions,0:DO,0:SWITCH,0:FOR,1:ELSE,0:IF,1:CALL,1:WHILE,0	34
0x4000737	            0x4156	                                push r14	      1369	section.c	FUNCTION_17
0x4000739	            0x4155	                                push r13	      1369	section.c	FUNCTION_17
0x400073b	            0x4154	                                push r12	      1369	section.c	FUNCTION_17
0x400073d	              0x55	                                push rbp	      1369	section.c	FUNCTION_17
0x400073e	              0x53	                                push rbx	      1369	section.c	FUNCTION_17
0x400073f	          0x4989fc	                            mov r12, rdi	      1369	section.c	FUNCTION_17
0x4000742	    0x488b9f900000	            mov rbx, qword [rdi + 0x90] 	      1373	section.c	FUNCTION_17	FOR_1
0x4000749	          0x4885db	                           test rbx, rbx	      1373	section.c	FUNCTION_17	FOR_1
0x400074c	            0x7425	                            je 0x4000773	      1373	section.c	FUNCTION_17	FOR_1
0x400074e	          0x4989f5	                            mov r13, rsi	      1373	section.c	FUNCTION_17	FOR_1
0x4000751	          0x4989d6	                            mov r14, rdx	      1373	section.c	FUNCTION_17	FOR_1
0x4000754	      0xbd00000000	                              mov ebp, 0	      1373	section.c	FUNCTION_17	FOR_1
0x4000759	          0x4c89f2	                            mov rdx, r14	      1374	section.c	FUNCTION_17	FOR_1
0x400075c	          0x4889de	                            mov rsi, rbx	      1374	section.c	FUNCTION_17	FOR_1
0x400075f	          0x4c89e7	                            mov rdi, r12	      1374	section.c	FUNCTION_17	FOR_1
0x4000762	          0x41ffd5	                                call r13	      1374	section.c	FUNCTION_17	FOR_1
0x4000765	          0x83c501	                              add ebp, 1	      1373	section.c	FUNCTION_17	FOR_1
0x4000768	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      1373	section.c	FUNCTION_17	FOR_1
0x400076c	          0x4885db	                           test rbx, rbx	      1373	section.c	FUNCTION_17	FOR_1
0x400076f	            0x75e8	                           jne 0x4000759	      1373	section.c	FUNCTION_17	FOR_1
0x4000771	            0xeb05	                           jmp 0x4000778	      1373	section.c	FUNCTION_17	FOR_1
0x4000773	      0xbd00000000	                              mov ebp, 0	      1371	section.c	FUNCTION_17
0x4000778	    0x4139ac24a000	            cmp dword [r12 + 0xa0], ebp 	      1376	section.c	FUNCTION_17	IF_1
0x4000780	            0x7414	                            je 0x4000796	      1376	section.c	FUNCTION_17	IF_1
0x4000782	      0xba00000000	                              mov edx, 0	      1377	section.c	FUNCTION_17	CALL_1
0x4000787	      0xbe61050000	                          mov esi, 0x561	      1377	section.c	FUNCTION_17	CALL_1
0x400078c	      0xbf00000000	                              mov edi, 0	      1377	section.c	FUNCTION_17	CALL_1
0x4000791	      0xe800000000	                          call 0x4000796	      1377	section.c	FUNCTION_17	CALL_1
0x4000796	              0x5b	                                 pop rbx	      1378	section.c	FUNCTION_17
0x4000797	              0x5d	                                 pop rbp	      1378	section.c	FUNCTION_17
0x4000798	            0x415c	                                 pop r12	      1378	section.c	FUNCTION_17
0x400079a	            0x415d	                                 pop r13	      1378	section.c	FUNCTION_17
0x400079c	            0x415e	                                 pop r14	      1378	section.c	FUNCTION_17
0x400079e	              0xc3	                                     ret	      1378	section.c	FUNCTION_17
bfd_set_section_contents	functions,0:DO,0:SWITCH,0:FOR,0:ELSE,0:IF,5:CALL,7:WHILE,0	60
0x400080f	            0x4156	                                push r14	      1482	section.c	FUNCTION_20
0x4000811	            0x4155	                                push r13	      1482	section.c	FUNCTION_20
0x4000813	            0x4154	                                push r12	      1482	section.c	FUNCTION_20
0x4000815	              0x55	                                push rbp	      1482	section.c	FUNCTION_20
0x4000816	              0x53	                                push rbx	      1482	section.c	FUNCTION_20
0x4000817	        0xf6462101	               test byte [rsi + 0x21], 1	      1485	section.c	FUNCTION_20	IF_1	CALL_1
0x400081b	            0x7514	                           jne 0x4000831	      1485	section.c	FUNCTION_20	IF_1	CALL_1
0x400081d	      0xbf0e000000	                            mov edi, 0xe	      1487	section.c	FUNCTION_20	IF_1	CALL_2
0x4000822	      0xe800000000	                          call 0x4000827	      1487	section.c	FUNCTION_20	IF_1	CALL_2
0x4000827	      0xb800000000	                              mov eax, 0	      1488	section.c	FUNCTION_20	IF_1
0x400082c	      0xe994000000	                           jmp 0x40008c5	      1488	section.c	FUNCTION_20	IF_1
0x4000831	          0x4989fd	                            mov r13, rdi	      1488	section.c	FUNCTION_20	IF_1
0x4000834	          0x4889f3	                            mov rbx, rsi	      1488	section.c	FUNCTION_20	IF_1
0x4000837	          0x4989d6	                            mov r14, rdx	      1488	section.c	FUNCTION_20	IF_1
0x400083a	          0x4889cd	                            mov rbp, rcx	      1488	section.c	FUNCTION_20	IF_1
0x400083d	          0x4d89c4	                             mov r12, r8	      1488	section.c	FUNCTION_20	IF_1
0x4000840	        0x488b4638	            mov rax, qword [rsi + 0x38] 	      1491	section.c	FUNCTION_20
0x4000844	          0x4839c8	                            cmp rax, rcx	      1492	section.c	FUNCTION_20	IF_2
0x4000847	            0x720e	                            jb 0x4000857	      1492	section.c	FUNCTION_20	IF_2
0x4000849	          0x4c39c0	                             cmp rax, r8	      1492	section.c	FUNCTION_20	IF_2
0x400084c	            0x7209	                            jb 0x4000857	      1492	section.c	FUNCTION_20	IF_2
0x400084e	        0x4a8d1401	                     lea rdx, [rcx + r8]	      1495	section.c	FUNCTION_20	IF_2
0x4000852	          0x4839d0	                            cmp rax, rdx	      1495	section.c	FUNCTION_20	IF_2
0x4000855	            0x7311	                           jae 0x4000868	      1495	section.c	FUNCTION_20	IF_2
0x4000857	      0xbf11000000	                           mov edi, 0x11	      1497	section.c	FUNCTION_20	IF_2	CALL_3
0x400085c	      0xe800000000	                          call 0x4000861	      1497	section.c	FUNCTION_20	IF_2	CALL_3
0x4000861	      0xb800000000	                              mov eax, 0	      1498	section.c	FUNCTION_20	IF_2
0x4000866	            0xeb5d	                           jmp 0x40008c5	      1498	section.c	FUNCTION_20	IF_2
0x4000868	        0xf6474410	           test byte [rdi + 0x44], 0x10 	      1501	section.c	FUNCTION_20	IF_3	CALL_4
0x400086c	            0x7511	                           jne 0x400087f	      1501	section.c	FUNCTION_20	IF_3	CALL_4
0x400086e	      0xbf05000000	                              mov edi, 5	      1503	section.c	FUNCTION_20	IF_3	CALL_5
0x4000873	      0xe800000000	                          call 0x4000878	      1503	section.c	FUNCTION_20	IF_3	CALL_5
0x4000878	      0xb800000000	                              mov eax, 0	      1504	section.c	FUNCTION_20	IF_3
0x400087d	            0xeb46	                           jmp 0x40008c5	      1504	section.c	FUNCTION_20	IF_3
0x400087f	    0x488bbeb00000	            mov rdi, qword [rsi + 0xb0] 	      1508	section.c	FUNCTION_20	IF_4
0x4000886	          0x4885ff	                           test rdi, rdi	      1508	section.c	FUNCTION_20	IF_4
0x4000889	            0x7413	                            je 0x400089e	      1508	section.c	FUNCTION_20	IF_4
0x400088b	          0x4801cf	                            add rdi, rcx	      1509	section.c	FUNCTION_20	IF_4
0x400088e	          0x4c39f7	                            cmp rdi, r14	      1509	section.c	FUNCTION_20	IF_4
0x4000891	            0x740b	                            je 0x400089e	      1509	section.c	FUNCTION_20	IF_4
0x4000893	          0x4c89c2	                             mov rdx, r8	        53	string3.h	FUNCTION_26	CALL_3
0x4000896	          0x4c89f6	                            mov rsi, r14	        53	string3.h	FUNCTION_26	CALL_3
0x4000899	      0xe800000000	                          call 0x400089e	        53	string3.h	FUNCTION_26	CALL_3
0x400089e	        0x498b4508	                mov rax, qword [r13 + 8]	      1512	section.c	FUNCTION_20	IF_5	CALL_7
0x40008a2	          0x4d89e0	                             mov r8, r12	      1512	section.c	FUNCTION_20	IF_5	CALL_7
0x40008a5	          0x4889e9	                            mov rcx, rbp	      1512	section.c	FUNCTION_20	IF_5	CALL_7
0x40008a8	          0x4c89f2	                            mov rdx, r14	      1512	section.c	FUNCTION_20	IF_5	CALL_7
0x40008ab	          0x4889de	                            mov rsi, rbx	      1512	section.c	FUNCTION_20	IF_5	CALL_7
0x40008ae	          0x4c89ef	                            mov rdi, r13	      1512	section.c	FUNCTION_20	IF_5	CALL_7
0x40008b1	    0xff9098020000	                call qword [rax + 0x298]	      1512	section.c	FUNCTION_20	IF_5	CALL_7
0x40008b7	            0x85c0	                           test eax, eax	      1512	section.c	FUNCTION_20	IF_5	CALL_7
0x40008b9	            0x740a	                            je 0x40008c5	      1512	section.c	FUNCTION_20	IF_5	CALL_7
0x40008bb	      0x41804d4740	              or byte [r13 + 0x47], 0x40	      1515	section.c	FUNCTION_20	IF_5
0x40008c0	      0xb801000000	                              mov eax, 1	      1516	section.c	FUNCTION_20	IF_5
0x40008c5	              0x5b	                                 pop rbx	      1520	section.c	FUNCTION_20
0x40008c6	              0x5d	                                 pop rbp	      1520	section.c	FUNCTION_20
0x40008c7	            0x415c	                                 pop r12	      1520	section.c	FUNCTION_20
0x40008c9	            0x415d	                                 pop r13	      1520	section.c	FUNCTION_20
0x40008cb	            0x415e	                                 pop r14	      1520	section.c	FUNCTION_20
0x40008cd	              0xc3	                                     ret	      1520	section.c	FUNCTION_20
bfd_set_section_size	functions,0:DO,0:SWITCH,0:FOR,0:ELSE,0:IF,1:CALL,1:WHILE,0	12
0x40007e5	        0xf6474740	           test byte [rdi + 0x47], 0x40 	      1439	section.c	FUNCTION_19	IF_1
0x40007e9	            0x7415	                            je 0x4000800	      1439	section.c	FUNCTION_19	IF_1
0x40007eb	        0x4883ec08	                              sub rsp, 8	      1435	section.c	FUNCTION_19
0x40007ef	      0xbf05000000	                              mov edi, 5	      1441	section.c	FUNCTION_19	IF_1	CALL_1
0x40007f4	      0xe800000000	                          call 0x40007f9	      1441	section.c	FUNCTION_19	IF_1	CALL_1
0x40007f9	      0xb800000000	                              mov eax, 0	      1442	section.c	FUNCTION_19	IF_1
0x40007fe	            0xeb0a	                           jmp 0x400080a	      1442	section.c	FUNCTION_19	IF_1
0x4000800	        0x48895638	             mov qword [rsi + 0x38], rdx	      1445	section.c	FUNCTION_19
0x4000804	      0xb801000000	                              mov eax, 1	      1446	section.c	FUNCTION_19
0x4000809	              0xc3	                                     ret	      1446	section.c	FUNCTION_19
0x400080a	        0x4883c408	                              add rsp, 8	      1447	section.c	FUNCTION_19
0x400080e	              0xc3	                                     ret	      1447	section.c	FUNCTION_19
bfd_section_hash_newfunc	functions,0:DO,0:SWITCH,0:FOR,0:ELSE,0:IF,3:CALL,3:WHILE,0	36
0x40000cd	              0x55	                                push rbp	       779	section.c	FUNCTION_1
0x40000ce	              0x53	                                push rbx	       779	section.c	FUNCTION_1
0x40000cf	        0x4883ec08	                              sub rsp, 8	       779	section.c	FUNCTION_1
0x40000d3	          0x4889f3	                            mov rbx, rsi	       779	section.c	FUNCTION_1
0x40000d6	          0x4889d5	                            mov rbp, rdx	       779	section.c	FUNCTION_1
0x40000d9	          0x4885ff	                           test rdi, rdi	       782	section.c	FUNCTION_1	IF_1
0x40000dc	            0x7515	                           jne 0x40000f3	       782	section.c	FUNCTION_1	IF_1
0x40000de	      0xbe30010000	                          mov esi, 0x130	       784	section.c	FUNCTION_1	IF_1
0x40000e3	          0x4889df	                            mov rdi, rbx	       784	section.c	FUNCTION_1	IF_1
0x40000e6	      0xe800000000	                          call 0x40000eb	       784	section.c	FUNCTION_1	IF_1
0x40000eb	          0x4889c7	                            mov rdi, rax	       784	section.c	FUNCTION_1	IF_1
0x40000ee	          0x4885c0	                           test rax, rax	       786	section.c	FUNCTION_1	IF_1	IF_2
0x40000f1	            0x7448	                            je 0x400013b	       786	section.c	FUNCTION_1	IF_1	IF_2
0x40000f3	          0x4889ea	                            mov rdx, rbp	       791	section.c	FUNCTION_1	CALL_2
0x40000f6	          0x4889de	                            mov rsi, rbx	       791	section.c	FUNCTION_1	CALL_2
0x40000f9	      0xe800000000	                          call 0x40000fe	       791	section.c	FUNCTION_1	CALL_2
0x40000fe	          0x4889c2	                            mov rdx, rax	       791	section.c	FUNCTION_1	CALL_2
0x4000101	          0x4885c0	                           test rax, rax	       792	section.c	FUNCTION_1	IF_3
0x4000104	            0x743a	                            je 0x4000140	       792	section.c	FUNCTION_1	IF_3
0x4000106	    0x48c740180000	               mov qword [rax + 0x18], 0	        90	string3.h	FUNCTION_29	CALL_6
0x400010e	    0x48c780280100	              mov qword [rax + 0x128], 0	        90	string3.h	FUNCTION_29	CALL_6
0x4000119	        0x488d7820	                   lea rdi, [rax + 0x20]	        90	string3.h	FUNCTION_29	CALL_6
0x400011d	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_29	CALL_6
0x4000121	            0x29f8	                            sub eax, edi	        90	string3.h	FUNCTION_29	CALL_6
0x4000123	    0x8d8830010000	                  lea ecx, [rax + 0x130]	        90	string3.h	FUNCTION_29	CALL_6
0x4000129	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_29	CALL_6
0x400012c	            0x89c9	                            mov ecx, ecx	        90	string3.h	FUNCTION_29	CALL_6
0x400012e	      0xb800000000	                              mov eax, 0	        90	string3.h	FUNCTION_29	CALL_6
0x4000133	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_29	CALL_6
0x4000136	          0x4889d0	                            mov rax, rdx	       796	section.c	FUNCTION_1
0x4000139	            0xeb05	                           jmp 0x4000140	       796	section.c	FUNCTION_1
0x400013b	      0xb800000000	                              mov eax, 0	       787	section.c	FUNCTION_1	IF_1	IF_2
0x4000140	        0x4883c408	                              add rsp, 8	       797	section.c	FUNCTION_1
0x4000144	              0x5b	                                 pop rbx	       797	section.c	FUNCTION_1
0x4000145	              0x5d	                                 pop rbp	       797	section.c	FUNCTION_1
0x4000146	              0xc3	                                     ret	       797	section.c	FUNCTION_1
