decCheckMath	SWITCH,0:functions,0:ELSE,1:DO,0:FOR,0:IF,2:CALL,1:WHILE,0	34
0x4000b44	            0x8b02	                    mov eax, dword [rdx]	      7510	decNumber.c	FUNCTION_19
0x4000b46	    0x813e3f420f00	                cmp dword [rsi], 0xf423f	      7511	decNumber.c	FUNCTION_19	IF_1
0x4000b4c	            0x7f16	                            jg 0x4000b64	      7511	decNumber.c	FUNCTION_19	IF_1
0x4000b4e	    0x817e043f420f	           cmp dword [rsi + 4], 0xf423f 	      7512	decNumber.c	FUNCTION_19	IF_1
0x4000b55	            0x7f0d	                            jg 0x4000b64	      7512	decNumber.c	FUNCTION_19	IF_1
0x4000b57	          0x8b4e08	                mov ecx, dword [rsi + 8]	      7513	decNumber.c	FUNCTION_19	IF_1
0x4000b5a	            0xf7d9	                                 neg ecx	      7513	decNumber.c	FUNCTION_19	IF_1
0x4000b5c	    0x81f93f420f00	                        cmp ecx, 0xf423f	      7513	decNumber.c	FUNCTION_19	IF_1
0x4000b62	            0x7e09	                           jle 0x4000b6d	      7513	decNumber.c	FUNCTION_19	IF_1
0x4000b64	            0x89c1	                            mov ecx, eax	      7513	decNumber.c	FUNCTION_19	IF_1
0x4000b66	          0x83c940	                            or ecx, 0x40	      7513	decNumber.c	FUNCTION_19	IF_1
0x4000b69	            0x890a	                    mov dword [rdx], ecx	      7513	decNumber.c	FUNCTION_19	IF_1
0x4000b6b	            0xeb36	                           jmp 0x4000ba3	      7513	decNumber.c	FUNCTION_19	IF_1
0x4000b6d	            0x8b0f	                    mov ecx, dword [rdi]	      7514	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4000b6f	    0x81f93f420f00	                        cmp ecx, 0xf423f	      7514	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4000b75	            0x7f13	                            jg 0x4000b8a	      7514	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4000b77	            0x89ce	                            mov esi, ecx	      7516	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4000b79	           0x37704	                add esi, dword [rdi + 4]	      7516	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4000b7c	    0x81c67c841e00	                       add esi, 0x1e847c	      7516	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4000b82	    0x81febcc62d00	                       cmp esi, 0x2dc6bc	      7516	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4000b88	            0x7619	                           jbe 0x4000ba3	      7516	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4000b8a	      0x66837f0a00	                 cmp word [rdi + 0xa], 0	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4000b8f	            0x750b	                           jne 0x4000b9c	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4000b91	          0x83f901	                              cmp ecx, 1	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4000b94	            0x7506	                           jne 0x4000b9c	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4000b96	        0xf6470870	               test byte [rdi + 8], 0x70	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4000b9a	            0x7407	                            je 0x4000ba3	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4000b9c	            0x89c1	                            mov ecx, eax	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4000b9e	          0x80c980	                             or cl, 0x80	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4000ba1	            0x890a	                    mov dword [rdx], ecx	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4000ba3	            0x3902	                    cmp dword [rdx], eax	      7518	decNumber.c	FUNCTION_19
0x4000ba5	           0xf95c0	                                setne al	      7518	decNumber.c	FUNCTION_19
0x4000ba8	           0xfb6c0	                           movzx eax, al	      7518	decNumber.c	FUNCTION_19
0x4000bab	              0xc3	                                     ret	      7519	decNumber.c	FUNCTION_19
decGetDigits	SWITCH,0:functions,0:ELSE,0:DO,0:FOR,2:IF,6:CALL,1:WHILE,0	29
0x4000ce7	          0x4863c6	                         movsxd rax, esi	      7762	decNumber.c	FUNCTION_25
0x4000cea	      0x488d5447fe	              lea rdx, [rdi + rax*2 - 2]	      7762	decNumber.c	FUNCTION_25
0x4000cef	        0x8d4476fe	              lea eax, [rsi + rsi*2 - 2]	      7763	decNumber.c	FUNCTION_25
0x4000cf3	          0x4839d7	                            cmp rdi, rdx	      7772	decNumber.c	FUNCTION_25	FOR_1
0x4000cf6	            0x7631	                           jbe 0x4000d29	      7772	decNumber.c	FUNCTION_25	FOR_1
0x4000cf8	            0xf3c3	                                     ret	      7772	decNumber.c	FUNCTION_25	FOR_1
0x4000cfa	           0xfb70a	                   movzx ecx, word [rdx]	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x4000cfd	          0x6685c9	                             test cx, cx	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x4000d00	            0x7513	                           jne 0x4000d15	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x4000d02	          0x83f801	                              cmp eax, 1	      7774	decNumber.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x4000d05	            0x742f	                            je 0x4000d36	      7774	decNumber.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x4000d07	          0x83e803	                              sub eax, 3	      7775	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x4000d0a	        0x4883ea02	                              sub rdx, 2	      7772	decNumber.c	FUNCTION_25	FOR_1
0x4000d0e	          0x4839d7	                            cmp rdi, rdx	      7772	decNumber.c	FUNCTION_25	FOR_1
0x4000d11	            0x76e7	                           jbe 0x4000cfa	      7772	decNumber.c	FUNCTION_25	FOR_1
0x4000d13	            0xf3c3	                                     ret	      7772	decNumber.c	FUNCTION_25	FOR_1
0x4000d15	        0x6683f909	                               cmp cx, 9	      7779	decNumber.c	FUNCTION_25	FOR_1	IF_4
0x4000d19	            0x761b	                           jbe 0x4000d36	      7779	decNumber.c	FUNCTION_25	FOR_1	IF_4
0x4000d1b	          0x8d5001	                      lea edx, [rax + 1]	      7780	decNumber.c	FUNCTION_25	FOR_1
0x4000d1e	          0x83c002	                              add eax, 2	      7780	decNumber.c	FUNCTION_25	FOR_1
0x4000d21	        0x6683f963	                            cmp cx, 0x63	      7780	decNumber.c	FUNCTION_25	FOR_1
0x4000d25	           0xf46c2	                         cmovbe eax, edx	      7780	decNumber.c	FUNCTION_25	FOR_1
0x4000d28	              0xc3	                                     ret	      7780	decNumber.c	FUNCTION_25	FOR_1
0x4000d29	           0xfb70a	                   movzx ecx, word [rdx]	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x4000d2c	          0x6685c9	                             test cx, cx	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x4000d2f	            0x75e4	                           jne 0x4000d15	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x4000d31	          0x83f801	                              cmp eax, 1	      7774	decNumber.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x4000d34	            0x75d1	                           jne 0x4000d07	      7774	decNumber.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x4000d36	            0xf3c3	                                     ret	      7796	decNumber.c	FUNCTION_25
decCopyFit	SWITCH,0:functions,0:ELSE,0:DO,0:FOR,0:IF,0:CALL,1:WHILE,0	12
0x4000ae1	          0x4889d0	                            mov rax, rdx	      6838	decNumber.c	FUNCTION_11
0x4000ae4	         0xfb65608	               movzx edx, byte [rsi + 8]	      6839	decNumber.c	FUNCTION_11
0x4000ae8	          0x885708	                  mov byte [rdi + 8], dl	      6839	decNumber.c	FUNCTION_11
0x4000aeb	          0x8b5604	                mov edx, dword [rsi + 4]	      6840	decNumber.c	FUNCTION_11
0x4000aee	          0x895704	                mov dword [rdi + 4], edx	      6840	decNumber.c	FUNCTION_11
0x4000af1	        0x488d560a	                    lea rdx, [rsi + 0xa]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4000af5	          0x4d89c1	                              mov r9, r8	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4000af8	          0x4989c8	                             mov r8, rcx	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4000afb	            0x8b0e	                    mov ecx, dword [rsi]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4000afd	          0x4889c6	                            mov rsi, rax	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4000b00	      0xe86ffdffff	                    call sym.decSetCoeff	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4000b05	            0xf3c3	                                     ret	      6841	decNumber.c	FUNCTION_11	CALL_1
decNumberFromUInt32	SWITCH,0:functions,0:ELSE,0:DO,0:FOR,1:IF,1:CALL,2:WHILE,0	29
0x4001c49	              0x53	                                push rbx	       358	decNumber.c	FUNCTION_68	FUNCTION_2
0x4001c4a	          0x4889fb	                            mov rbx, rdi	       358	decNumber.c	FUNCTION_68	FUNCTION_2
0x4001c4d	        0xc6470800	                   mov byte [rdi + 8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x4001c51	    0xc74704000000	                  mov dword [rdi + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4001c58	    0xc70701000000	                      mov dword [rdi], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4001c5e	    0x66c7470a0000	                 mov word [rdi + 0xa], 0	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4001c64	            0x85f6	                           test esi, esi	       361	decNumber.c	FUNCTION_68	FUNCTION_2	IF_1
0x4001c66	            0x743a	                            je 0x4001ca2	       361	decNumber.c	FUNCTION_68	FUNCTION_2	IF_1
0x4001c68	        0x488d7f0a	                    lea rdi, [rdi + 0xa]	       362	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x4001c6c	          0x4889f9	                            mov rcx, rdi	       362	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x4001c6f	    0x41b8d34d6210	                     mov r8d, 0x10624dd3	       363	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x4001c75	            0x89f0	                            mov eax, esi	       363	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x4001c77	          0x41f7e0	                                 mul r8d	       363	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x4001c7a	          0xc1ea06	                              shr edx, 6	       363	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x4001c7d	    0x69c2e8030000	                    imul eax, edx, 0x3e8	       363	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x4001c83	            0x29c6	                            sub esi, eax	       363	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x4001c85	          0x668931	                      mov word [rcx], si	       363	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x4001c88	            0x89d6	                            mov esi, edx	       364	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x4001c8a	        0x4883c102	                              add rcx, 2	       362	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x4001c8e	            0x85d2	                           test edx, edx	       362	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x4001c90	            0x75e3	                           jne 0x4001c75	       362	decNumber.c	FUNCTION_68	FUNCTION_2	FOR_1
0x4001c92	          0x4829f9	                            sub rcx, rdi	       366	decNumber.c	FUNCTION_68	FUNCTION_2	CALL_2
0x4001c95	          0x4889ce	                            mov rsi, rcx	       366	decNumber.c	FUNCTION_68	FUNCTION_2	CALL_2
0x4001c98	          0x48d1fe	                              sar rsi, 1	       366	decNumber.c	FUNCTION_68	FUNCTION_2	CALL_2
0x4001c9b	      0xe847f0ffff	                   call sym.decGetDigits	       366	decNumber.c	FUNCTION_68	FUNCTION_2	CALL_2
0x4001ca0	            0x8903	                    mov dword [rbx], eax	       366	decNumber.c	FUNCTION_68	FUNCTION_2	CALL_2
0x4001ca2	          0x4889d8	                            mov rax, rbx	       368	decNumber.c	FUNCTION_68	FUNCTION_2
0x4001ca5	              0x5b	                                 pop rbx	       368	decNumber.c	FUNCTION_68	FUNCTION_2
0x4001ca6	              0xc3	                                     ret	       368	decNumber.c	FUNCTION_68	FUNCTION_2
decNumberMinMag	SWITCH,0:functions,0:ELSE,0:DO,0:FOR,0:IF,1:CALL,3:WHILE,0	27
0x40035e3	              0x55	                                push rbp	      1607	decNumber.c	FUNCTION_68	FUNCTION_26
0x40035e4	              0x53	                                push rbx	      1607	decNumber.c	FUNCTION_68	FUNCTION_26
0x40035e5	        0x4883ec18	                           sub rsp, 0x18	      1607	decNumber.c	FUNCTION_68	FUNCTION_26
0x40035e9	          0x4889fb	                            mov rbx, rdi	      1607	decNumber.c	FUNCTION_68	FUNCTION_26
0x40035ec	          0x4889cd	                            mov rbp, rcx	      1607	decNumber.c	FUNCTION_68	FUNCTION_26
0x40035ef	    0x64488b042528	                mov rax, qword fs:[0x28]	      1607	decNumber.c	FUNCTION_68	FUNCTION_26
0x40035f8	      0x4889442408	                mov qword [rsp + 8], rax	      1607	decNumber.c	FUNCTION_68	FUNCTION_26
0x40035fd	            0x31c0	                            xor eax, eax	      1607	decNumber.c	FUNCTION_68	FUNCTION_26
0x40035ff	    0xc74424040000	                  mov dword [rsp + 4], 0	      1608	decNumber.c	FUNCTION_68	FUNCTION_26
0x4003607	      0x4c8d4c2404	                       lea r9, [rsp + 4]	      1609	decNumber.c	FUNCTION_68	FUNCTION_26	CALL_1
0x400360c	    0x41b808000000	                              mov r8d, 8	      1609	decNumber.c	FUNCTION_68	FUNCTION_26	CALL_1
0x4003612	      0xe8a0f9ffff	                   call sym.decCompareOp	      1609	decNumber.c	FUNCTION_68	FUNCTION_26	CALL_1
0x4003617	        0x8b742404	                mov esi, dword [rsp + 4]	      1610	decNumber.c	FUNCTION_68	FUNCTION_26	CALL_2
0x400361b	            0x85f6	                           test esi, esi	      1610	decNumber.c	FUNCTION_68	FUNCTION_26	CALL_2
0x400361d	            0x740b	                            je 0x400362a	      1610	decNumber.c	FUNCTION_68	FUNCTION_26	CALL_2
0x400361f	          0x4889ea	                            mov rdx, rbp	      1610	decNumber.c	FUNCTION_68	FUNCTION_26	CALL_2
0x4003622	          0x4889df	                            mov rdi, rbx	      1610	decNumber.c	FUNCTION_68	FUNCTION_26	CALL_2
0x4003625	      0xe8f2dfffff	                      call sym.decStatus	      1610	decNumber.c	FUNCTION_68	FUNCTION_26	CALL_2
0x400362a	          0x4889d8	                            mov rax, rbx	      1615	decNumber.c	FUNCTION_68	FUNCTION_26
0x400362d	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1615	decNumber.c	FUNCTION_68	FUNCTION_26
0x4003632	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1615	decNumber.c	FUNCTION_68	FUNCTION_26
0x400363b	            0x7405	                            je 0x4003642	      1615	decNumber.c	FUNCTION_68	FUNCTION_26
0x400363d	      0xe800000000	                          call 0x4003642	      1615	decNumber.c	FUNCTION_68	FUNCTION_26
0x4003642	        0x4883c418	                           add rsp, 0x18	      1615	decNumber.c	FUNCTION_68	FUNCTION_26
0x4003646	              0x5b	                                 pop rbx	      1615	decNumber.c	FUNCTION_68	FUNCTION_26
0x4003647	              0x5d	                                 pop rbp	      1615	decNumber.c	FUNCTION_68	FUNCTION_26
0x4003648	              0xc3	                                     ret	      1615	decNumber.c	FUNCTION_68	FUNCTION_26
decNumberCopy	SWITCH,0:functions,0:ELSE,0:DO,0:FOR,1:IF,3:CALL,2:WHILE,0	42
0x4002d6d	          0x4839f7	                            cmp rdi, rsi	      3352	decNumber.c	FUNCTION_68	FUNCTION_52	IF_2
0x4002d70	            0x7476	                            je 0x4002de8	      3352	decNumber.c	FUNCTION_68	FUNCTION_52	IF_2
0x4002d72	         0xfb64608	               movzx eax, byte [rsi + 8]	      3358	decNumber.c	FUNCTION_68	FUNCTION_52
0x4002d76	          0x884708	                  mov byte [rdi + 8], al	      3358	decNumber.c	FUNCTION_68	FUNCTION_52
0x4002d79	          0x8b4604	                mov eax, dword [rsi + 4]	      3359	decNumber.c	FUNCTION_68	FUNCTION_52
0x4002d7c	          0x894704	                mov dword [rdi + 4], eax	      3359	decNumber.c	FUNCTION_68	FUNCTION_52
0x4002d7f	            0x8b06	                    mov eax, dword [rsi]	      3360	decNumber.c	FUNCTION_68	FUNCTION_52
0x4002d81	            0x8907	                    mov dword [rdi], eax	      3360	decNumber.c	FUNCTION_68	FUNCTION_52
0x4002d83	         0xfb7460a	            movzx eax, word [rsi + 0xa] 	      3361	decNumber.c	FUNCTION_68	FUNCTION_52
0x4002d87	        0x6689470a	                mov word [rdi + 0xa], ax	      3361	decNumber.c	FUNCTION_68	FUNCTION_52
0x4002d8b	            0x8b06	                    mov eax, dword [rsi]	      3362	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3
0x4002d8d	          0x83f803	                              cmp eax, 3	      3362	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3
0x4002d90	            0x7e56	                           jle 0x4002de8	      3362	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3
0x4002d92	        0x488d4f0c	                    lea rcx, [rdi + 0xc]	      3367	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3
0x4002d96	        0x4c8d4e0a	                     lea r9, [rsi + 0xa]	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4002d9a	          0x83f831	                           cmp eax, 0x31	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4002d9d	            0x7f0e	                            jg 0x4002dad	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4002d9f	            0x4898	                                    cdqe	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4002da1	     0xfb690000000	                   movzx edx, byte [rax]	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4002da8	          0x4801d2	                            add rdx, rdx	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4002dab	            0xeb1c	                           jmp 0x4002dc9	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4002dad	        0x448d4002	                      lea r8d, [rax + 2]	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4002db1	      0xba56555555	                     mov edx, 0x55555556	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4002db6	          0x4489c0	                            mov eax, r8d	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4002db9	            0xf7ea	                                imul edx	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4002dbb	          0x4489c0	                            mov eax, r8d	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4002dbe	          0xc1f81f	                           sar eax, 0x1f	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4002dc1	            0x29c2	                            sub edx, eax	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4002dc3	          0x4863d2	                         movsxd rdx, edx	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4002dc6	          0x4801d2	                            add rdx, rdx	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4002dc9	          0x4c01ca	                             add rdx, r9	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4002dcc	        0x4883c60c	                            add rsi, 0xc	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4002dd0	          0x4839f2	                            cmp rdx, rsi	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4002dd3	            0x7613	                           jbe 0x4002de8	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4002dd5	           0xfb706	                   movzx eax, word [rsi]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4002dd8	          0x668901	                      mov word [rcx], ax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4002ddb	        0x4883c602	                              add rsi, 2	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4002ddf	        0x4883c102	                              add rcx, 2	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4002de3	          0x4839f2	                            cmp rdx, rsi	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4002de6	            0x77ed	                            ja 0x4002dd5	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x4002de8	          0x4889f8	                            mov rax, rdi	      3372	decNumber.c	FUNCTION_68	FUNCTION_52
0x4002deb	              0xc3	                                     ret	      3372	decNumber.c	FUNCTION_68	FUNCTION_52
decNumberCompareTotal	SWITCH,0:functions,0:ELSE,0:DO,0:FOR,0:IF,1:CALL,2:WHILE,0	27
0x400344b	              0x55	                                push rbp	       906	decNumber.c	FUNCTION_68	FUNCTION_13
0x400344c	              0x53	                                push rbx	       906	decNumber.c	FUNCTION_68	FUNCTION_13
0x400344d	        0x4883ec18	                           sub rsp, 0x18	       906	decNumber.c	FUNCTION_68	FUNCTION_13
0x4003451	          0x4889fb	                            mov rbx, rdi	       906	decNumber.c	FUNCTION_68	FUNCTION_13
0x4003454	          0x4889cd	                            mov rbp, rcx	       906	decNumber.c	FUNCTION_68	FUNCTION_13
0x4003457	    0x64488b042528	                mov rax, qword fs:[0x28]	       906	decNumber.c	FUNCTION_68	FUNCTION_13
0x4003460	      0x4889442408	                mov qword [rsp + 8], rax	       906	decNumber.c	FUNCTION_68	FUNCTION_13
0x4003465	            0x31c0	                            xor eax, eax	       906	decNumber.c	FUNCTION_68	FUNCTION_13
0x4003467	    0xc74424040000	                  mov dword [rsp + 4], 0	       907	decNumber.c	FUNCTION_68	FUNCTION_13
0x400346f	      0x4c8d4c2404	                       lea r9, [rsp + 4]	       908	decNumber.c	FUNCTION_68	FUNCTION_13	CALL_1
0x4003474	    0x41b804000000	                              mov r8d, 4	       908	decNumber.c	FUNCTION_68	FUNCTION_13	CALL_1
0x400347a	      0xe838fbffff	                   call sym.decCompareOp	       908	decNumber.c	FUNCTION_68	FUNCTION_13	CALL_1
0x400347f	        0x8b742404	                mov esi, dword [rsp + 4]	       909	decNumber.c	FUNCTION_68	FUNCTION_13	CALL_2
0x4003483	            0x85f6	                           test esi, esi	       909	decNumber.c	FUNCTION_68	FUNCTION_13	CALL_2
0x4003485	            0x740b	                            je 0x4003492	       909	decNumber.c	FUNCTION_68	FUNCTION_13	CALL_2
0x4003487	          0x4889ea	                            mov rdx, rbp	       909	decNumber.c	FUNCTION_68	FUNCTION_13	CALL_2
0x400348a	          0x4889df	                            mov rdi, rbx	       909	decNumber.c	FUNCTION_68	FUNCTION_13	CALL_2
0x400348d	      0xe88ae1ffff	                      call sym.decStatus	       909	decNumber.c	FUNCTION_68	FUNCTION_13	CALL_2
0x4003492	          0x4889d8	                            mov rax, rbx	       911	decNumber.c	FUNCTION_68	FUNCTION_13
0x4003495	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       911	decNumber.c	FUNCTION_68	FUNCTION_13
0x400349a	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       911	decNumber.c	FUNCTION_68	FUNCTION_13
0x40034a3	            0x7405	                            je 0x40034aa	       911	decNumber.c	FUNCTION_68	FUNCTION_13
0x40034a5	      0xe800000000	                          call 0x40034aa	       911	decNumber.c	FUNCTION_68	FUNCTION_13
0x40034aa	        0x4883c418	                           add rsp, 0x18	       911	decNumber.c	FUNCTION_68	FUNCTION_13
0x40034ae	              0x5b	                                 pop rbx	       911	decNumber.c	FUNCTION_68	FUNCTION_13
0x40034af	              0x5d	                                 pop rbp	       911	decNumber.c	FUNCTION_68	FUNCTION_13
0x40034b0	              0xc3	                                     ret	       911	decNumber.c	FUNCTION_68	FUNCTION_13
decNumberCompareSignal	SWITCH,0:functions,0:ELSE,0:DO,0:FOR,0:IF,1:CALL,2:WHILE,0	27
0x40033e5	              0x55	                                push rbp	       885	decNumber.c	FUNCTION_68	FUNCTION_12
0x40033e6	              0x53	                                push rbx	       885	decNumber.c	FUNCTION_68	FUNCTION_12
0x40033e7	        0x4883ec18	                           sub rsp, 0x18	       885	decNumber.c	FUNCTION_68	FUNCTION_12
0x40033eb	          0x4889fb	                            mov rbx, rdi	       885	decNumber.c	FUNCTION_68	FUNCTION_12
0x40033ee	          0x4889cd	                            mov rbp, rcx	       885	decNumber.c	FUNCTION_68	FUNCTION_12
0x40033f1	    0x64488b042528	                mov rax, qword fs:[0x28]	       885	decNumber.c	FUNCTION_68	FUNCTION_12
0x40033fa	      0x4889442408	                mov qword [rsp + 8], rax	       885	decNumber.c	FUNCTION_68	FUNCTION_12
0x40033ff	            0x31c0	                            xor eax, eax	       885	decNumber.c	FUNCTION_68	FUNCTION_12
0x4003401	    0xc74424040000	                  mov dword [rsp + 4], 0	       886	decNumber.c	FUNCTION_68	FUNCTION_12
0x4003409	      0x4c8d4c2404	                       lea r9, [rsp + 4]	       887	decNumber.c	FUNCTION_68	FUNCTION_12	CALL_1
0x400340e	    0x41b806000000	                              mov r8d, 6	       887	decNumber.c	FUNCTION_68	FUNCTION_12	CALL_1
0x4003414	      0xe89efbffff	                   call sym.decCompareOp	       887	decNumber.c	FUNCTION_68	FUNCTION_12	CALL_1
0x4003419	        0x8b742404	                mov esi, dword [rsp + 4]	       888	decNumber.c	FUNCTION_68	FUNCTION_12	CALL_2
0x400341d	            0x85f6	                           test esi, esi	       888	decNumber.c	FUNCTION_68	FUNCTION_12	CALL_2
0x400341f	            0x740b	                            je 0x400342c	       888	decNumber.c	FUNCTION_68	FUNCTION_12	CALL_2
0x4003421	          0x4889ea	                            mov rdx, rbp	       888	decNumber.c	FUNCTION_68	FUNCTION_12	CALL_2
0x4003424	          0x4889df	                            mov rdi, rbx	       888	decNumber.c	FUNCTION_68	FUNCTION_12	CALL_2
0x4003427	      0xe8f0e1ffff	                      call sym.decStatus	       888	decNumber.c	FUNCTION_68	FUNCTION_12	CALL_2
0x400342c	          0x4889d8	                            mov rax, rbx	       890	decNumber.c	FUNCTION_68	FUNCTION_12
0x400342f	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       890	decNumber.c	FUNCTION_68	FUNCTION_12
0x4003434	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       890	decNumber.c	FUNCTION_68	FUNCTION_12
0x400343d	            0x7405	                            je 0x4003444	       890	decNumber.c	FUNCTION_68	FUNCTION_12
0x400343f	      0xe800000000	                          call 0x4003444	       890	decNumber.c	FUNCTION_68	FUNCTION_12
0x4003444	        0x4883c418	                           add rsp, 0x18	       890	decNumber.c	FUNCTION_68	FUNCTION_12
0x4003448	              0x5b	                                 pop rbx	       890	decNumber.c	FUNCTION_68	FUNCTION_12
0x4003449	              0x5d	                                 pop rbp	       890	decNumber.c	FUNCTION_68	FUNCTION_12
0x400344a	              0xc3	                                     ret	       890	decNumber.c	FUNCTION_68	FUNCTION_12
decSetSubnormal	SWITCH,0:functions,1:ELSE,0:DO,0:FOR,0:IF,7:CALL,5:WHILE,0	96
0x40019c4	            0x4156	                                push r14	      7423	decNumber.c	FUNCTION_18
0x40019c6	            0x4155	                                push r13	      7423	decNumber.c	FUNCTION_18
0x40019c8	            0x4154	                                push r12	      7423	decNumber.c	FUNCTION_18
0x40019ca	              0x55	                                push rbp	      7423	decNumber.c	FUNCTION_18
0x40019cb	              0x53	                                push rbx	      7423	decNumber.c	FUNCTION_18
0x40019cc	        0x4883ec30	                           sub rsp, 0x30	      7423	decNumber.c	FUNCTION_18
0x40019d0	          0x4889fb	                            mov rbx, rdi	      7423	decNumber.c	FUNCTION_18
0x40019d3	          0x4989d5	                            mov r13, rdx	      7423	decNumber.c	FUNCTION_18
0x40019d6	          0x4889cd	                            mov rbp, rcx	      7423	decNumber.c	FUNCTION_18
0x40019d9	    0x64488b042528	                mov rax, qword fs:[0x28]	      7423	decNumber.c	FUNCTION_18
0x40019e2	      0x4889442428	             mov qword [rsp + 0x28], rax	      7423	decNumber.c	FUNCTION_18
0x40019e7	            0x31c0	                            xor eax, eax	      7423	decNumber.c	FUNCTION_18
0x40019e9	            0x8b06	                    mov eax, dword [rsi]	      7439	decNumber.c	FUNCTION_18
0x40019eb	          0x83e801	                              sub eax, 1	      7439	decNumber.c	FUNCTION_18
0x40019ee	        0x448b6608	               mov r12d, dword [rsi + 8]	      7439	decNumber.c	FUNCTION_18
0x40019f2	          0x4129c4	                           sub r12d, eax	      7439	decNumber.c	FUNCTION_18
0x40019f5	      0x66837f0a00	                 cmp word [rdi + 0xa], 0	      7441	decNumber.c	FUNCTION_18	IF_2	FUNCTION_1
0x40019fa	            0x7524	                           jne 0x4001a20	      7441	decNumber.c	FUNCTION_18	IF_2	FUNCTION_1
0x40019fc	          0x833f01	                      cmp dword [rdi], 1	      7441	decNumber.c	FUNCTION_18	IF_2	FUNCTION_1
0x40019ff	            0x751f	                           jne 0x4001a20	      7441	decNumber.c	FUNCTION_18	IF_2	FUNCTION_1
0x4001a01	        0xf6470870	               test byte [rdi + 8], 0x70	      7441	decNumber.c	FUNCTION_18	IF_2	FUNCTION_1
0x4001a05	            0x7519	                           jne 0x4001a20	      7441	decNumber.c	FUNCTION_18	IF_2	FUNCTION_1
0x4001a07	        0x443b6704	               cmp r12d, dword [rdi + 4]	      7449	decNumber.c	FUNCTION_18	IF_2	FUNCTION_1
0x4001a0b	     0xf8ecf000000	                           jle 0x4001ae0	      7449	decNumber.c	FUNCTION_18	IF_2	FUNCTION_1
0x4001a11	        0x44896704	               mov dword [rdi + 4], r12d	      7450	decNumber.c	FUNCTION_18	FUNCTION_1
0x4001a15	    0x810900040000	                   or dword [rcx], 0x400	      7451	decNumber.c	FUNCTION_18	FUNCTION_1
0x4001a1b	      0xe9c0000000	                           jmp 0x4001ae0	      7451	decNumber.c	FUNCTION_18	FUNCTION_1
0x4001a20	          0x8b4500	                    mov eax, dword [rbp]	      7456	decNumber.c	FUNCTION_18
0x4001a23	            0x89c2	                            mov edx, eax	      7456	decNumber.c	FUNCTION_18
0x4001a25	          0x80ce10	                             or dh, 0x10	      7456	decNumber.c	FUNCTION_18
0x4001a28	          0x895500	                    mov dword [rbp], edx	      7456	decNumber.c	FUNCTION_18
0x4001a2b	          0x4489e2	                           mov edx, r12d	      7457	decNumber.c	FUNCTION_18
0x4001a2e	          0x2b5304	                sub edx, dword [rbx + 4]	      7457	decNumber.c	FUNCTION_18
0x4001a31	            0x85d2	                           test edx, edx	      7458	decNumber.c	FUNCTION_18	IF_3
0x4001a33	            0x7f13	                            jg 0x4001a48	      7458	decNumber.c	FUNCTION_18	IF_3
0x4001a35	            0xa820	                           test al, 0x20	      7462	decNumber.c	FUNCTION_18	IF_3	IF_4
0x4001a37	     0xf84a3000000	                            je 0x4001ae0	      7462	decNumber.c	FUNCTION_18	IF_3	IF_4
0x4001a3d	          0x80cc30	                             or ah, 0x30	      7462	decNumber.c	FUNCTION_18	IF_3	IF_4
0x4001a40	          0x894500	                    mov dword [rbp], eax	      7462	decNumber.c	FUNCTION_18	IF_3	IF_4
0x4001a43	      0xe998000000	                           jmp 0x4001ae0	      7462	decNumber.c	FUNCTION_18	IF_3	IF_4
0x4001a48	          0x488b06	                    mov rax, qword [rsi]	      7468	decNumber.c	FUNCTION_18
0x4001a4b	        0x48890424	                    mov qword [rsp], rax	      7468	decNumber.c	FUNCTION_18
0x4001a4f	        0x488b4608	                mov rax, qword [rsi + 8]	      7468	decNumber.c	FUNCTION_18
0x4001a53	      0x4889442408	                mov qword [rsp + 8], rax	      7468	decNumber.c	FUNCTION_18
0x4001a58	        0x488b4610	            mov rax, qword [rsi + 0x10] 	      7468	decNumber.c	FUNCTION_18
0x4001a5c	      0x4889442410	             mov qword [rsp + 0x10], rax	      7468	decNumber.c	FUNCTION_18
0x4001a61	          0x8b4618	            mov eax, dword [rsi + 0x18] 	      7468	decNumber.c	FUNCTION_18
0x4001a64	        0x89442418	             mov dword [rsp + 0x18], eax	      7468	decNumber.c	FUNCTION_18
0x4001a68	            0x8b0b	                    mov ecx, dword [rbx]	      7469	decNumber.c	FUNCTION_18
0x4001a6a	            0x89c8	                            mov eax, ecx	      7469	decNumber.c	FUNCTION_18
0x4001a6c	            0x29d0	                            sub eax, edx	      7469	decNumber.c	FUNCTION_18
0x4001a6e	          0x890424	                    mov dword [rsp], eax	      7469	decNumber.c	FUNCTION_18
0x4001a71	        0x29542408	                sub dword [rsp + 8], edx	      7470	decNumber.c	FUNCTION_18
0x4001a75	        0x4c8d730a	                    lea r14, [rbx + 0xa]	      7472	decNumber.c	FUNCTION_18	CALL_2
0x4001a79	          0x4989e9	                             mov r9, rbp	      7472	decNumber.c	FUNCTION_18	CALL_2
0x4001a7c	          0x4d89e8	                             mov r8, r13	      7472	decNumber.c	FUNCTION_18	CALL_2
0x4001a7f	          0x4c89f2	                            mov rdx, r14	      7472	decNumber.c	FUNCTION_18	CALL_2
0x4001a82	          0x4889e6	                            mov rsi, rsp	      7472	decNumber.c	FUNCTION_18	CALL_2
0x4001a85	          0x4889df	                            mov rdi, rbx	      7472	decNumber.c	FUNCTION_18	CALL_2
0x4001a88	      0xe8e7edffff	                    call sym.decSetCoeff	      7472	decNumber.c	FUNCTION_18	CALL_2
0x4001a8d	          0x4889e9	                            mov rcx, rbp	      7473	decNumber.c	FUNCTION_18	CALL_3
0x4001a90	        0x418b5500	                    mov edx, dword [r13]	      7473	decNumber.c	FUNCTION_18	CALL_3
0x4001a94	          0x4889e6	                            mov rsi, rsp	      7473	decNumber.c	FUNCTION_18	CALL_3
0x4001a97	          0x4889df	                            mov rdi, rbx	      7473	decNumber.c	FUNCTION_18	CALL_3
0x4001a9a	      0xe868fcffff	                  call sym.decApplyRound	      7473	decNumber.c	FUNCTION_18	CALL_3
0x4001a9f	          0x8b4500	                    mov eax, dword [rbp]	      7477	decNumber.c	FUNCTION_18	IF_5
0x4001aa2	            0xa820	                           test al, 0x20	      7477	decNumber.c	FUNCTION_18	IF_5
0x4001aa4	            0x7406	                            je 0x4001aac	      7477	decNumber.c	FUNCTION_18	IF_5
0x4001aa6	          0x80cc20	                             or ah, 0x20	      7477	decNumber.c	FUNCTION_18	IF_5
0x4001aa9	          0x894500	                    mov dword [rbp], eax	      7477	decNumber.c	FUNCTION_18	IF_5
0x4001aac	        0x443b6304	               cmp r12d, dword [rbx + 4]	      7481	decNumber.c	FUNCTION_18	IF_6
0x4001ab0	            0x7d15	                           jge 0x4001ac7	      7481	decNumber.c	FUNCTION_18	IF_6
0x4001ab2	      0xba01000000	                              mov edx, 1	      7482	decNumber.c	FUNCTION_18	IF_6	CALL_4
0x4001ab7	            0x8b33	                    mov esi, dword [rbx]	      7482	decNumber.c	FUNCTION_18	IF_6	CALL_4
0x4001ab9	          0x4c89f7	                            mov rdi, r14	      7482	decNumber.c	FUNCTION_18	IF_6	CALL_4
0x4001abc	      0xe8a1e8ffff	                 call sym.decShiftToMost	      7482	decNumber.c	FUNCTION_18	IF_6	CALL_4
0x4001ac1	            0x8903	                    mov dword [rbx], eax	      7482	decNumber.c	FUNCTION_18	IF_6	CALL_4
0x4001ac3	        0x836b0401	                  sub dword [rbx + 4], 1	      7483	decNumber.c	FUNCTION_18	IF_6
0x4001ac7	      0x66837b0a00	                 cmp word [rbx + 0xa], 0	      7487	decNumber.c	FUNCTION_18	CALL_5
0x4001acc	            0x7512	                           jne 0x4001ae0	      7487	decNumber.c	FUNCTION_18	CALL_5
0x4001ace	          0x833b01	                      cmp dword [rbx], 1	      7487	decNumber.c	FUNCTION_18	CALL_5
0x4001ad1	            0x750d	                           jne 0x4001ae0	      7487	decNumber.c	FUNCTION_18	CALL_5
0x4001ad3	        0xf6430870	               test byte [rbx + 8], 0x70	      7487	decNumber.c	FUNCTION_18	CALL_5
0x4001ad7	            0x7507	                           jne 0x4001ae0	      7487	decNumber.c	FUNCTION_18	CALL_5
0x4001ad9	    0x814d00000400	                   or dword [rbp], 0x400	      7487	decNumber.c	FUNCTION_18	CALL_5
0x4001ae0	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      7488	decNumber.c	FUNCTION_18
0x4001ae5	    0x644833042528	                xor rax, qword fs:[0x28]	      7488	decNumber.c	FUNCTION_18
0x4001aee	            0x7405	                            je 0x4001af5	      7488	decNumber.c	FUNCTION_18
0x4001af0	      0xe800000000	                          call 0x4001af5	      7488	decNumber.c	FUNCTION_18
0x4001af5	        0x4883c430	                           add rsp, 0x30	      7488	decNumber.c	FUNCTION_18
0x4001af9	              0x5b	                                 pop rbx	      7488	decNumber.c	FUNCTION_18
0x4001afa	              0x5d	                                 pop rbp	      7488	decNumber.c	FUNCTION_18
0x4001afb	            0x415c	                                 pop r12	      7488	decNumber.c	FUNCTION_18
0x4001afd	            0x415d	                                 pop r13	      7488	decNumber.c	FUNCTION_18
0x4001aff	            0x415e	                                 pop r14	      7488	decNumber.c	FUNCTION_18
0x4001b01	              0xc3	                                     ret	      7488	decNumber.c	FUNCTION_18
decReverse	SWITCH,0:functions,0:ELSE,0:DO,0:FOR,1:IF,0:CALL,0:WHILE,0	10
0x4000346	            0xeb14	                           jmp 0x400035c	      6658	decNumber.c	FUNCTION_7	FOR_1
0x4000348	          0x668b07	                      mov ax, word [rdi]	      6659	decNumber.c	FUNCTION_7	FOR_1
0x400034b	          0x668b16	                      mov dx, word [rsi]	      6660	decNumber.c	FUNCTION_7	FOR_1
0x400034e	          0x668917	                      mov word [rdi], dx	      6660	decNumber.c	FUNCTION_7	FOR_1
0x4000351	          0x668906	                      mov word [rsi], ax	      6661	decNumber.c	FUNCTION_7	FOR_1
0x4000354	        0x4883c702	                              add rdi, 2	      6658	decNumber.c	FUNCTION_7	FOR_1
0x4000358	        0x4883ee02	                              sub rsi, 2	      6658	decNumber.c	FUNCTION_7	FOR_1
0x400035c	          0x4839f7	                            cmp rdi, rsi	      6658	decNumber.c	FUNCTION_7	FOR_1
0x400035f	            0x72e7	                            jb 0x4000348	      6658	decNumber.c	FUNCTION_7	FOR_1
0x4000361	              0xc3	                                     ret	      6664	decNumber.c	FUNCTION_7
decUnitCompare	SWITCH,0:functions,0:ELSE,1:DO,0:FOR,2:IF,11:CALL,5:WHILE,0	160
0x4001250	            0x4157	                                push r15	      6228	decNumber.c	FUNCTION_4
0x4001252	            0x4156	                                push r14	      6228	decNumber.c	FUNCTION_4
0x4001254	            0x4155	                                push r13	      6228	decNumber.c	FUNCTION_4
0x4001256	            0x4154	                                push r12	      6228	decNumber.c	FUNCTION_4
0x4001258	              0x55	                                push rbp	      6228	decNumber.c	FUNCTION_4
0x4001259	              0x53	                                push rbx	      6228	decNumber.c	FUNCTION_4
0x400125a	        0x4883ec58	                           sub rsp, 0x58	      6228	decNumber.c	FUNCTION_4
0x400125e	          0x4989fc	                            mov r12, rdi	      6228	decNumber.c	FUNCTION_4
0x4001261	          0x4189f6	                           mov r14d, esi	      6228	decNumber.c	FUNCTION_4
0x4001264	          0x4889d3	                            mov rbx, rdx	      6228	decNumber.c	FUNCTION_4
0x4001267	          0x4189cf	                           mov r15d, ecx	      6228	decNumber.c	FUNCTION_4
0x400126a	    0x64488b042528	                mov rax, qword fs:[0x28]	      6228	decNumber.c	FUNCTION_4
0x4001273	      0x4889442448	             mov qword [rsp + 0x48], rax	      6228	decNumber.c	FUNCTION_4
0x4001278	            0x31c0	                            xor eax, eax	      6228	decNumber.c	FUNCTION_4
0x400127a	          0x4585c0	                           test r8d, r8d	      6236	decNumber.c	FUNCTION_4	IF_1
0x400127d	            0x7569	                           jne 0x40012e8	      6236	decNumber.c	FUNCTION_4	IF_1
0x400127f	      0xb801000000	                              mov eax, 1	      6237	decNumber.c	FUNCTION_4	IF_1	IF_2
0x4001284	            0x39ce	                            cmp esi, ecx	      6237	decNumber.c	FUNCTION_4	IF_1	IF_2
0x4001286	     0xf8fb6010000	                            jg 0x4001442	      6237	decNumber.c	FUNCTION_4	IF_1	IF_2
0x400128c	     0xf8c73010000	                            jl 0x4001405	      6238	decNumber.c	FUNCTION_4	IF_1	IF_3
0x4001292	          0x4c63f6	                         movsxd r14, esi	      6240	decNumber.c	FUNCTION_4	IF_1
0x4001295	      0x4b8d4436fe	                lea rax, [r14 + r14 - 2]	      6240	decNumber.c	FUNCTION_4	IF_1
0x400129a	          0x4801c3	                            add rbx, rax	      6241	decNumber.c	FUNCTION_4	IF_1
0x400129d	          0x4801f8	                            add rax, rdi	      6242	decNumber.c	FUNCTION_4	IF_1	FOR_1
0x40012a0	     0xf8266010000	                            jb 0x400140c	      6242	decNumber.c	FUNCTION_4	IF_1	FOR_1
0x40012a6	           0xfb708	                   movzx ecx, word [rax]	      6243	decNumber.c	FUNCTION_4	IF_1	FOR_1	IF_4
0x40012a9	           0xfb713	                   movzx edx, word [rbx]	      6243	decNumber.c	FUNCTION_4	IF_1	FOR_1	IF_4
0x40012ac	          0x6639d1	                              cmp cx, dx	      6243	decNumber.c	FUNCTION_4	IF_1	FOR_1	IF_4
0x40012af	     0xf875e010000	                            ja 0x4001413	      6243	decNumber.c	FUNCTION_4	IF_1	FOR_1	IF_4
0x40012b5	            0x731a	                           jae 0x40012d1	      6244	decNumber.c	FUNCTION_4	IF_1	FOR_1	IF_5
0x40012b7	      0xe95e010000	                           jmp 0x400141a	      6244	decNumber.c	FUNCTION_4	IF_1	FOR_1	IF_5
0x40012bc	           0xfb708	                   movzx ecx, word [rax]	      6243	decNumber.c	FUNCTION_4	IF_1	FOR_1	IF_4
0x40012bf	           0xfb713	                   movzx edx, word [rbx]	      6243	decNumber.c	FUNCTION_4	IF_1	FOR_1	IF_4
0x40012c2	          0x6639d1	                              cmp cx, dx	      6243	decNumber.c	FUNCTION_4	IF_1	FOR_1	IF_4
0x40012c5	     0xf8756010000	                            ja 0x4001421	      6243	decNumber.c	FUNCTION_4	IF_1	FOR_1	IF_4
0x40012cb	     0xf8257010000	                            jb 0x4001428	      6244	decNumber.c	FUNCTION_4	IF_1	FOR_1	IF_5
0x40012d1	        0x4883e802	                              sub rax, 2	      6242	decNumber.c	FUNCTION_4	IF_1	FOR_1
0x40012d5	        0x4883eb02	                              sub rbx, 2	      6242	decNumber.c	FUNCTION_4	IF_1	FOR_1
0x40012d9	          0x4939c4	                            cmp r12, rax	      6242	decNumber.c	FUNCTION_4	IF_1	FOR_1
0x40012dc	            0x76de	                           jbe 0x40012bc	      6242	decNumber.c	FUNCTION_4	IF_1	FOR_1
0x40012de	      0xb800000000	                              mov eax, 0	      6246	decNumber.c	FUNCTION_4	IF_1
0x40012e3	      0xe95a010000	                           jmp 0x4001442	      6246	decNumber.c	FUNCTION_4	IF_1
0x40012e8	          0x4589c5	                           mov r13d, r8d	      6246	decNumber.c	FUNCTION_4	IF_1
0x40012eb	        0x4183f831	                           cmp r8d, 0x31	      6251	decNumber.c	FUNCTION_4	CALL_2
0x40012ef	            0x7f1f	                            jg 0x4001310	      6251	decNumber.c	FUNCTION_4	CALL_2
0x40012f1	          0x4963c0	                         movsxd rax, r8d	      6251	decNumber.c	FUNCTION_4	CALL_2
0x40012f4	     0xfb690000000	                   movzx edx, byte [rax]	      6251	decNumber.c	FUNCTION_4	CALL_2
0x40012fb	          0x8d0c11	                    lea ecx, [rcx + rdx]	      6251	decNumber.c	FUNCTION_4	CALL_2
0x40012fe	      0xb801000000	                              mov eax, 1	      6251	decNumber.c	FUNCTION_4	CALL_2
0x4001303	            0x39ce	                            cmp esi, ecx	      6251	decNumber.c	FUNCTION_4	CALL_2
0x4001305	     0xf8e49010000	                           jle 0x4001454	      6251	decNumber.c	FUNCTION_4	CALL_2
0x400130b	      0xe932010000	                           jmp 0x4001442	      6251	decNumber.c	FUNCTION_4	CALL_2
0x4001310	        0x418d4802	                       lea ecx, [r8 + 2]	      6251	decNumber.c	FUNCTION_4	CALL_2
0x4001314	      0xba56555555	                     mov edx, 0x55555556	      6251	decNumber.c	FUNCTION_4	CALL_2
0x4001319	            0x89c8	                            mov eax, ecx	      6251	decNumber.c	FUNCTION_4	CALL_2
0x400131b	            0xf7ea	                                imul edx	      6251	decNumber.c	FUNCTION_4	CALL_2
0x400131d	          0xc1f91f	                           sar ecx, 0x1f	      6251	decNumber.c	FUNCTION_4	CALL_2
0x4001320	            0x29ca	                            sub edx, ecx	      6251	decNumber.c	FUNCTION_4	CALL_2
0x4001322	        0x418d0c17	                    lea ecx, [r15 + rdx]	      6251	decNumber.c	FUNCTION_4	CALL_2
0x4001326	      0xb801000000	                              mov eax, 1	      6251	decNumber.c	FUNCTION_4	CALL_2
0x400132b	            0x39ce	                            cmp esi, ecx	      6251	decNumber.c	FUNCTION_4	CALL_2
0x400132d	     0xf8e2e010000	                           jle 0x4001461	      6251	decNumber.c	FUNCTION_4	CALL_2
0x4001333	      0xe90a010000	                           jmp 0x4001442	      6251	decNumber.c	FUNCTION_4	CALL_2
0x4001338	          0x4401fa	                           add edx, r15d	      6257	decNumber.c	FUNCTION_4	CALL_4
0x400133b	          0x4139d6	                           cmp r14d, edx	      6261	decNumber.c	FUNCTION_4	IF_9
0x400133e	            0x89d7	                            mov edi, edx	      6261	decNumber.c	FUNCTION_4	IF_9
0x4001340	        0x410f4dfe	                        cmovge edi, r14d	      6261	decNumber.c	FUNCTION_4	IF_9
0x4001344	          0x83c702	                              add edi, 2	      6261	decNumber.c	FUNCTION_4	IF_9
0x4001347	          0x4863ff	                         movsxd rdi, edi	      6261	decNumber.c	FUNCTION_4	IF_9
0x400134a	          0x4801ff	                            add rdi, rdi	      6261	decNumber.c	FUNCTION_4	IF_9
0x400134d	        0x4883ff32	                           cmp rdi, 0x32	      6261	decNumber.c	FUNCTION_4	IF_9
0x4001351	            0x7618	                           jbe 0x400136b	      6261	decNumber.c	FUNCTION_4	IF_9
0x4001353	      0xe800000000	                          call 0x4001358	      6262	decNumber.c	FUNCTION_4	IF_9
0x4001358	          0x4889c5	                            mov rbp, rax	      6262	decNumber.c	FUNCTION_4	IF_9
0x400135b	          0x4885c0	                           test rax, rax	      6263	decNumber.c	FUNCTION_4	IF_9	IF_10
0x400135e	     0xf84cb000000	                            je 0x400142f	      6263	decNumber.c	FUNCTION_4	IF_9	IF_10
0x4001364	      0x4889442408	                mov qword [rsp + 8], rax	      6262	decNumber.c	FUNCTION_4	IF_9
0x4001369	            0xeb0e	                           jmp 0x4001379	      6262	decNumber.c	FUNCTION_4	IF_9
0x400136b	    0x48c744240800	                  mov qword [rsp + 8], 0	      6231	decNumber.c	FUNCTION_4
0x4001374	      0x488d6c2410	                   lea rbp, [rsp + 0x10]	      6260	decNumber.c	FUNCTION_4
0x4001379	    0x41b856555555	                     mov r8d, 0x55555556	      6270	decNumber.c	FUNCTION_4	CALL_5
0x400137f	          0x4489e8	                           mov eax, r13d	      6270	decNumber.c	FUNCTION_4	CALL_5
0x4001382	          0x41f7e8	                                imul r8d	      6270	decNumber.c	FUNCTION_4	CALL_5
0x4001385	          0x4489e8	                           mov eax, r13d	      6270	decNumber.c	FUNCTION_4	CALL_5
0x4001388	          0xc1f81f	                           sar eax, 0x1f	      6270	decNumber.c	FUNCTION_4	CALL_5
0x400138b	            0x29c2	                            sub edx, eax	      6270	decNumber.c	FUNCTION_4	CALL_5
0x400138d	          0x4189d0	                            mov r8d, edx	      6270	decNumber.c	FUNCTION_4	CALL_5
0x4001390	        0x4883ec08	                              sub rsp, 8	      6270	decNumber.c	FUNCTION_4	CALL_5
0x4001394	          0x8d0452	                  lea eax, [rdx + rdx*2]	      6271	decNumber.c	FUNCTION_4
0x4001397	          0x4129c5	                           sub r13d, eax	      6271	decNumber.c	FUNCTION_4
0x400139a	          0x4d63ed	                        movsxd r13, r13d	      6271	decNumber.c	FUNCTION_4
0x400139d	    0x428b04ad0000	                  mov eax, dword [r13*4]	      6270	decNumber.c	FUNCTION_4	CALL_5
0x40013a5	            0xf7d8	                                 neg eax	      6270	decNumber.c	FUNCTION_4	CALL_5
0x40013a7	              0x50	                                push rax	      6270	decNumber.c	FUNCTION_4	CALL_5
0x40013a8	          0x4989e9	                             mov r9, rbp	      6270	decNumber.c	FUNCTION_4	CALL_5
0x40013ab	          0x4489f9	                           mov ecx, r15d	      6270	decNumber.c	FUNCTION_4	CALL_5
0x40013ae	          0x4889da	                            mov rdx, rbx	      6270	decNumber.c	FUNCTION_4	CALL_5
0x40013b1	          0x4489f6	                           mov esi, r14d	      6270	decNumber.c	FUNCTION_4	CALL_5
0x40013b4	          0x4c89e7	                            mov rdi, r12	      6270	decNumber.c	FUNCTION_4	CALL_5
0x40013b7	      0xe884ecffff	                  call sym.decUnitAddSub	      6270	decNumber.c	FUNCTION_4	CALL_5
0x40013bc	        0x4883c410	                           add rsp, 0x10	      6273	decNumber.c	FUNCTION_4	IF_11
0x40013c0	      0xbbffffffff	                     mov ebx, 0xffffffff	      6273	decNumber.c	FUNCTION_4	IF_11
0x40013c5	            0x85c0	                           test eax, eax	      6273	decNumber.c	FUNCTION_4	IF_11
0x40013c7	            0x782e	                            js 0x40013f7	      6273	decNumber.c	FUNCTION_4	IF_11
0x40013c9	            0x4898	                                    cdqe	      6276	decNumber.c	FUNCTION_4	ELSE_1	FOR_2
0x40013cb	      0x488d4445fe	              lea rax, [rbp + rax*2 - 2]	      6276	decNumber.c	FUNCTION_4	ELSE_1	FOR_2
0x40013d0	          0x4839c5	                            cmp rbp, rax	      6276	decNumber.c	FUNCTION_4	ELSE_1	FOR_2
0x40013d3	            0x7317	                           jae 0x40013ec	      6276	decNumber.c	FUNCTION_4	ELSE_1	FOR_2
0x40013d5	      0x66837d0000	                       cmp word [rbp], 0	      6276	decNumber.c	FUNCTION_4	ELSE_1	FOR_2
0x40013da	            0x7510	                           jne 0x40013ec	      6276	decNumber.c	FUNCTION_4	ELSE_1	FOR_2
0x40013dc	        0x4883c502	                              add rbp, 2	      6276	decNumber.c	FUNCTION_4	ELSE_1	FOR_2
0x40013e0	          0x4839c5	                            cmp rbp, rax	      6276	decNumber.c	FUNCTION_4	ELSE_1	FOR_2
0x40013e3	            0x7307	                           jae 0x40013ec	      6276	decNumber.c	FUNCTION_4	ELSE_1	FOR_2
0x40013e5	      0x66837d0000	                       cmp word [rbp], 0	      6276	decNumber.c	FUNCTION_4	ELSE_1	FOR_2
0x40013ea	            0x74f0	                            je 0x40013dc	      6276	decNumber.c	FUNCTION_4	ELSE_1	FOR_2
0x40013ec	      0x66837d0000	                       cmp word [rbp], 0	      6277	decNumber.c	FUNCTION_4	ELSE_1
0x40013f1	           0xf95c3	                                setne bl	      6277	decNumber.c	FUNCTION_4	ELSE_1
0x40013f4	           0xfb6db	                           movzx ebx, bl	      6277	decNumber.c	FUNCTION_4	ELSE_1
0x40013f7	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      6280	decNumber.c	FUNCTION_4
0x40013fc	      0xe800000000	                          call 0x4001401	      6280	decNumber.c	FUNCTION_4
0x4001401	            0x89d8	                            mov eax, ebx	      6281	decNumber.c	FUNCTION_4
0x4001403	            0xeb3d	                           jmp 0x4001442	      6281	decNumber.c	FUNCTION_4
0x4001405	      0xb8ffffffff	                     mov eax, 0xffffffff	      6238	decNumber.c	FUNCTION_4	IF_1	IF_3
0x400140a	            0xeb36	                           jmp 0x4001442	      6238	decNumber.c	FUNCTION_4	IF_1	IF_3
0x400140c	      0xb800000000	                              mov eax, 0	      6246	decNumber.c	FUNCTION_4	IF_1
0x4001411	            0xeb2f	                           jmp 0x4001442	      6246	decNumber.c	FUNCTION_4	IF_1
0x4001413	      0xb801000000	                              mov eax, 1	      6243	decNumber.c	FUNCTION_4	IF_1	FOR_1	IF_4
0x4001418	            0xeb28	                           jmp 0x4001442	      6243	decNumber.c	FUNCTION_4	IF_1	FOR_1	IF_4
0x400141a	      0xb8ffffffff	                     mov eax, 0xffffffff	      6244	decNumber.c	FUNCTION_4	IF_1	FOR_1	IF_5
0x400141f	            0xeb21	                           jmp 0x4001442	      6244	decNumber.c	FUNCTION_4	IF_1	FOR_1	IF_5
0x4001421	      0xb801000000	                              mov eax, 1	      6243	decNumber.c	FUNCTION_4	IF_1	FOR_1	IF_4
0x4001426	            0xeb1a	                           jmp 0x4001442	      6243	decNumber.c	FUNCTION_4	IF_1	FOR_1	IF_4
0x4001428	      0xb8ffffffff	                     mov eax, 0xffffffff	      6244	decNumber.c	FUNCTION_4	IF_1	FOR_1	IF_5
0x400142d	            0xeb13	                           jmp 0x4001442	      6244	decNumber.c	FUNCTION_4	IF_1	FOR_1	IF_5
0x400142f	      0xb800000080	                     mov eax, 0x80000000	      6263	decNumber.c	FUNCTION_4	IF_9	IF_10
0x4001434	            0xeb0c	                           jmp 0x4001442	      6263	decNumber.c	FUNCTION_4	IF_9	IF_10
0x4001436	      0xb8ffffffff	                     mov eax, 0xffffffff	      6252	decNumber.c	FUNCTION_4	CALL_3
0x400143b	            0xeb05	                           jmp 0x4001442	      6252	decNumber.c	FUNCTION_4	CALL_3
0x400143d	      0xb8ffffffff	                     mov eax, 0xffffffff	      6252	decNumber.c	FUNCTION_4	CALL_3
0x4001442	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	      6282	decNumber.c	FUNCTION_4
0x4001447	    0x644833342528	                xor rsi, qword fs:[0x28]	      6282	decNumber.c	FUNCTION_4
0x4001450	            0x7421	                            je 0x4001473	      6282	decNumber.c	FUNCTION_4
0x4001452	            0xeb1a	                           jmp 0x400146e	      6282	decNumber.c	FUNCTION_4
0x4001454	          0x8d4601	                      lea eax, [rsi + 1]	      6252	decNumber.c	FUNCTION_4	CALL_3
0x4001457	            0x39c8	                            cmp eax, ecx	      6252	decNumber.c	FUNCTION_4	CALL_3
0x4001459	     0xf8dd9feffff	                           jge 0x4001338	      6252	decNumber.c	FUNCTION_4	CALL_3
0x400145f	            0xebd5	                           jmp 0x4001436	      6252	decNumber.c	FUNCTION_4	CALL_3
0x4001461	          0x8d4601	                      lea eax, [rsi + 1]	      6252	decNumber.c	FUNCTION_4	CALL_3
0x4001464	            0x39c8	                            cmp eax, ecx	      6252	decNumber.c	FUNCTION_4	CALL_3
0x4001466	     0xf8dccfeffff	                           jge 0x4001338	      6252	decNumber.c	FUNCTION_4	CALL_3
0x400146c	            0xebcf	                           jmp 0x400143d	      6252	decNumber.c	FUNCTION_4	CALL_3
0x400146e	      0xe800000000	                          call 0x4001473	      6282	decNumber.c	FUNCTION_4
0x4001473	        0x4883c458	                           add rsp, 0x58	      6282	decNumber.c	FUNCTION_4
0x4001477	              0x5b	                                 pop rbx	      6282	decNumber.c	FUNCTION_4
0x4001478	              0x5d	                                 pop rbp	      6282	decNumber.c	FUNCTION_4
0x4001479	            0x415c	                                 pop r12	      6282	decNumber.c	FUNCTION_4
0x400147b	            0x415d	                                 pop r13	      6282	decNumber.c	FUNCTION_4
0x400147d	            0x415e	                                 pop r14	      6282	decNumber.c	FUNCTION_4
0x400147f	            0x415f	                                 pop r15	      6282	decNumber.c	FUNCTION_4
0x4001481	              0xc3	                                     ret	      6282	decNumber.c	FUNCTION_4
decNumberGetBCD	SWITCH,0:functions,0:ELSE,0:DO,0:FOR,2:IF,1:CALL,0:WHILE,0	44
0x4008b49	          0x486307	                 movsxd rax, dword [rdi]	      3452	decNumber.c	FUNCTION_68	FUNCTION_56
0x4008b4c	      0x4c8d4406ff	                 lea r8, [rsi + rax - 1]	      3452	decNumber.c	FUNCTION_68	FUNCTION_56
0x4008b51	        0x4c8d4f0a	                     lea r9, [rdi + 0xa]	      3453	decNumber.c	FUNCTION_68	FUNCTION_56
0x4008b55	         0xfb77f0a	            movzx edi, word [rdi + 0xa] 	      3458	decNumber.c	FUNCTION_68	FUNCTION_56
0x4008b59	          0x4c39c6	                             cmp rsi, r8	      3460	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4008b5c	            0x7640	                           jbe 0x4008b9e	      3460	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4008b5e	            0xeb67	                           jmp 0x4008bc7	      3460	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4008b60	            0x89c8	                            mov eax, ecx	      3461	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4008b62	          0x41f7e2	                                mul r10d	      3461	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4008b65	          0xc1ea03	                              shr edx, 3	      3461	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4008b68	          0x8d0492	                  lea eax, [rdx + rdx*4]	      3461	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4008b6b	             0x1c0	                            add eax, eax	      3461	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4008b6d	            0x89ca	                            mov edx, ecx	      3461	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4008b6f	            0x29c2	                            sub edx, eax	      3461	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4008b71	          0x418810	                       mov byte [r8], dl	      3461	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4008b74	          0x83ef01	                              sub edi, 1	      3464	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2	IF_1
0x4008b77	            0x740c	                            je 0x4008b85	      3464	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2	IF_1
0x4008b79	            0x89c8	                            mov eax, ecx	      3462	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4008b7b	          0x41f7e2	                                mul r10d	      3462	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4008b7e	            0x89d1	                            mov ecx, edx	      3462	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4008b80	          0xc1e903	                              shr ecx, 3	      3462	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4008b83	            0xeb0e	                           jmp 0x4008b93	      3462	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4008b85	      0x410fb74902	                movzx ecx, word [r9 + 2]	      3466	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4008b8a	        0x4d8d4902	                        lea r9, [r9 + 2]	      3465	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4008b8e	      0xbf03000000	                              mov edi, 3	      3467	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4008b93	        0x4983e801	                               sub r8, 1	      3460	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4008b97	          0x4d39d8	                             cmp r8, r11	      3460	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4008b9a	            0x75c4	                           jne 0x4008b60	      3460	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4008b9c	            0xeb29	                           jmp 0x4008bc7	      3460	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4008b9e	      0xb9cdcccccc	                     mov ecx, 0xcccccccd	      3461	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4008ba3	            0x89f8	                            mov eax, edi	      3461	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4008ba5	            0xf7e1	                                 mul ecx	      3461	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4008ba7	            0x89d1	                            mov ecx, edx	      3461	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4008ba9	          0xc1e903	                              shr ecx, 3	      3461	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4008bac	          0x8d0489	                  lea eax, [rcx + rcx*4]	      3461	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4008baf	             0x1c0	                            add eax, eax	      3461	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4008bb1	            0x29c7	                            sub edi, eax	      3461	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4008bb3	          0x418838	                      mov byte [r8], dil	      3461	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4008bb6	        0x4c8d5eff	                      lea r11, [rsi - 1]	      3461	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4008bba	      0xbf02000000	                              mov edi, 2	      3463	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4008bbf	    0x41bacdcccccc	                    mov r10d, 0xcccccccd	      3461	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4008bc5	            0xebcc	                           jmp 0x4008b93	      3461	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4008bc7	          0x4889f0	                            mov rax, rsi	      3471	decNumber.c	FUNCTION_68	FUNCTION_56
0x4008bca	              0xc3	                                     ret	      3471	decNumber.c	FUNCTION_68	FUNCTION_56
decMultiplyOp	SWITCH,0:functions,0:ELSE,3:DO,1:FOR,11:IF,22:CALL,16:WHILE,0	467
0x4003649	            0x4157	                                push r15	      4833	decNumber.c	FUNCTION_68	FUNCTION_66
0x400364b	            0x4156	                                push r14	      4833	decNumber.c	FUNCTION_68	FUNCTION_66
0x400364d	            0x4155	                                push r13	      4833	decNumber.c	FUNCTION_68	FUNCTION_66
0x400364f	            0x4154	                                push r12	      4833	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003651	              0x55	                                push rbp	      4833	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003652	              0x53	                                push rbx	      4833	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003653	    0x4881ece80100	                          sub rsp, 0x1e8	      4833	decNumber.c	FUNCTION_68	FUNCTION_66
0x400365a	          0x4989ff	                            mov r15, rdi	      4833	decNumber.c	FUNCTION_68	FUNCTION_66
0x400365d	      0x4889742408	                mov qword [rsp + 8], rsi	      4833	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003662	          0x4989d6	                            mov r14, rdx	      4833	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003665	      0x48894c2420	             mov qword [rsp + 0x20], rcx	      4833	decNumber.c	FUNCTION_68	FUNCTION_66
0x400366a	      0x4c89442418	              mov qword [rsp + 0x18], r8	      4833	decNumber.c	FUNCTION_68	FUNCTION_66
0x400366f	    0x64488b3c2528	                mov rdi, qword fs:[0x28]	      4833	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003678	    0x4889bc24d801	            mov qword [rsp + 0x1d8], rdi	      4833	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003680	            0x31ff	                            xor edi, edi	      4833	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003682	    0xc744245c0000	               mov dword [rsp + 0x5c], 0	      4836	decNumber.c	FUNCTION_68	FUNCTION_66
0x400368a	         0xfb65608	               movzx edx, byte [rsi + 8]	      4897	decNumber.c	FUNCTION_68	FUNCTION_66
0x400368e	      0x410fb64608	               movzx eax, byte [r14 + 8]	      4897	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003693	            0x89d1	                            mov ecx, edx	      4897	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003695	            0x31c1	                            xor ecx, eax	      4897	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003697	          0x83e180	                     and ecx, 0xffffff80	      4897	decNumber.c	FUNCTION_68	FUNCTION_66
0x400369a	        0x884c2417	               mov byte [rsp + 0x17], cl	      4897	decNumber.c	FUNCTION_68	FUNCTION_66
0x400369e	            0x89d1	                            mov ecx, edx	      4900	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2
0x40036a0	             0x9c1	                             or ecx, eax	      4900	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2
0x40036a2	          0xf6c170	                           test cl, 0x70	      4900	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2
0x40036a5	     0xf8482000000	                            je 0x400372d	      4900	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2
0x40036ab	          0xf6c130	                           test cl, 0x30	      4901	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_3
0x40036ae	            0x7415	                            je 0x40036c5	      4901	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_3
0x40036b0	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	      4902	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_3	CALL_3
0x40036b5	          0x4c89f2	                            mov rdx, r14	      4902	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_3	CALL_3
0x40036b8	          0x4c89ff	                            mov rdi, r15	      4902	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_3	CALL_3
0x40036bb	      0xe82cf7ffff	                        call sym.decNaNs	      4902	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_3	CALL_3
0x40036c0	      0xe9e9050000	                           jmp 0x4003cae	      4903	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_3
0x40036c5	          0xf6c240	                           test dl, 0x40	      4905	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_4
0x40036c8	            0x7516	                           jne 0x40036e0	      4905	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_4
0x40036ca	      0x488b742408	                mov rsi, qword [rsp + 8]	      4905	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_4
0x40036cf	      0x66837e0a00	                 cmp word [rsi + 0xa], 0	      4905	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_4
0x40036d4	            0x750a	                           jne 0x40036e0	      4905	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_4
0x40036d6	          0x833e01	                      cmp dword [rsi], 1	      4905	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_4
0x40036d9	            0x7505	                           jne 0x40036e0	      4905	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_4
0x40036db	          0xf6c270	                           test dl, 0x70	      4905	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_4
0x40036de	            0x7416	                            je 0x40036f6	      4905	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_4
0x40036e0	            0xa840	                           test al, 0x40	      4906	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_5
0x40036e2	            0x7522	                           jne 0x4003706	      4906	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_5
0x40036e4	    0x6641837e0a00	                 cmp word [r14 + 0xa], 0	      4906	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_5
0x40036ea	            0x751a	                           jne 0x4003706	      4906	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_5
0x40036ec	        0x41833e01	                      cmp dword [r14], 1	      4906	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_5
0x40036f0	            0x7514	                           jne 0x4003706	      4906	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_5
0x40036f2	            0xa870	                           test al, 0x70	      4906	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_5
0x40036f4	            0x7510	                           jne 0x4003706	      4906	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_5
0x40036f6	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4907	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4
0x40036fb	    0x810880000000	                    or dword [rax], 0x80	      4907	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4
0x4003701	      0xe9a8050000	                           jmp 0x4003cae	      4908	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4
0x4003706	    0x41c747040000	                  mov dword [r15 + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x400370e	    0x41c707010000	                      mov dword [r15], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4003715	    0x6641c7470a00	                 mov word [r15 + 0xa], 0	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400371c	       0xfb6442417	           movzx eax, byte [rsp + 0x17] 	      4910	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2
0x4003721	          0x83c840	                            or eax, 0x40	      4910	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2
0x4003724	        0x41884708	                  mov byte [r15 + 8], al	      4910	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2
0x4003728	      0xe981050000	                           jmp 0x4003cae	      4911	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2
0x400372d	      0x488b442408	                mov rax, qword [rsp + 8]	      4917	decNumber.c	FUNCTION_68	FUNCTION_66	IF_5
0x4003732	          0x418b36	                    mov esi, dword [r14]	      4917	decNumber.c	FUNCTION_68	FUNCTION_66	IF_5
0x4003735	            0x3930	                    cmp dword [rax], esi	      4917	decNumber.c	FUNCTION_68	FUNCTION_66	IF_5
0x4003737	            0x7d08	                           jge 0x4003741	      4917	decNumber.c	FUNCTION_68	FUNCTION_66	IF_5
0x4003739	      0x4c89742408	                mov qword [rsp + 8], r14	      4919	decNumber.c	FUNCTION_68	FUNCTION_66	IF_5
0x400373e	          0x4989c6	                            mov r14, rax	      4920	decNumber.c	FUNCTION_68	FUNCTION_66	IF_5
0x4003741	          0x418b2e	                    mov ebp, dword [r14]	      4945	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4003744	          0x83fd06	                              cmp ebp, 6	      4945	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4003747	     0xf8e32030000	                           jle 0x4003a7f	      4945	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x400374d	      0x488b442408	                mov rax, qword [rsp + 8]	      4947	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4003752	            0x8b18	                    mov ebx, dword [rax]	      4947	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4003754	          0x8d4b08	                      lea ecx, [rbx + 8]	      4947	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4003757	    0x41bc398ee338	                    mov r12d, 0x38e38e39	      4947	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x400375d	            0x89c8	                            mov eax, ecx	      4947	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x400375f	          0x41f7ec	                               imul r12d	      4947	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4003762	            0xd1fa	                              sar edx, 1	      4947	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4003764	          0xc1f91f	                           sar ecx, 0x1f	      4947	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4003767	            0x29ca	                            sub edx, ecx	      4947	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4003769	            0x89d1	                            mov ecx, edx	      4947	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x400376b	          0x8d7508	                      lea esi, [rbp + 8]	      4948	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x400376e	            0x89f0	                            mov eax, esi	      4948	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4003770	          0x41f7ec	                               imul r12d	      4948	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4003773	            0xd1fa	                              sar edx, 1	      4948	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4003775	          0x4189d4	                           mov r12d, edx	      4948	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4003778	          0xc1fe1f	                           sar esi, 0x1f	      4948	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x400377b	          0x4129f4	                           sub r12d, esi	      4948	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x400377e	        0x428d0421	                    lea eax, [rcx + r12]	      4949	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4003782	        0x89442448	             mov dword [rsp + 0x48], eax	      4949	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4003786	          0xc1e102	                              shl ecx, 2	      4952	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4003789	    0x48c744243000	               mov qword [rsp + 0x30], 0	      4864	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003792	      0x4c8d6c2460	                   lea r13, [rsp + 0x60]	      4863	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003797	          0x83f928	                           cmp ecx, 0x28	      4953	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_12
0x400379a	            0x7e10	                           jle 0x40037ac	      4953	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_12
0x400379c	          0x4863f9	                         movsxd rdi, ecx	      4954	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_12
0x400379f	      0xe800000000	                          call 0x40037a4	      4954	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_12
0x40037a4	          0x4989c5	                            mov r13, rax	      4954	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_12
0x40037a7	      0x4889442430	             mov qword [rsp + 0x30], rax	      4954	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_12
0x40037ac	        0x41c1e402	                             shl r12d, 2	      4956	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x40037b0	    0x48c744243800	               mov qword [rsp + 0x38], 0	      4867	decNumber.c	FUNCTION_68	FUNCTION_66
0x40037b9	    0x488d84249000	                   lea rax, [rsp + 0x90]	      4866	decNumber.c	FUNCTION_68	FUNCTION_66
0x40037c1	      0x4889442440	             mov qword [rsp + 0x40], rax	      4866	decNumber.c	FUNCTION_68	FUNCTION_66
0x40037c6	        0x4183fc28	                          cmp r12d, 0x28	      4957	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_13
0x40037ca	            0x7e12	                           jle 0x40037de	      4957	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_13
0x40037cc	          0x4963fc	                        movsxd rdi, r12d	      4958	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_13
0x40037cf	      0xe800000000	                          call 0x40037d4	      4958	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_13
0x40037d4	      0x4889442440	             mov qword [rsp + 0x40], rax	      4958	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_13
0x40037d9	      0x4889442438	             mov qword [rsp + 0x38], rax	      4958	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_13
0x40037de	        0x8b442448	            mov eax, dword [rsp + 0x48] 	      4968	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x40037e2	          0xc1e003	                              shl eax, 3	      4968	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x40037e5	    0x4c8da4243001	                  lea r12, [rsp + 0x130]	      4870	decNumber.c	FUNCTION_68	FUNCTION_66
0x40037ed	    0x48c744242800	               mov qword [rsp + 0x28], 0	      4840	decNumber.c	FUNCTION_68	FUNCTION_66
0x40037f6	      0x3da0000000	                           cmp eax, 0xa0	      4973	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_14
0x40037fb	            0x7e10	                           jle 0x400380d	      4973	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_14
0x40037fd	          0x4863f8	                         movsxd rdi, eax	      4974	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_14
0x4003800	      0xe800000000	                          call 0x4003805	      4974	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_14
0x4003805	      0x4889442428	             mov qword [rsp + 0x28], rax	      4974	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_14
0x400380a	          0x4989c4	                            mov r12, rax	      4975	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_14
0x400380d	          0x4d85ed	                           test r13, r13	      4976	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_15
0x4003810	           0xf94c2	                                 sete dl	      4976	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_15
0x4003813	    0x48837c244000	               cmp qword [rsp + 0x40], 0	      4976	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_15
0x4003819	           0xf94c0	                                 sete al	      4976	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_15
0x400381c	             0x8c2	                               or dl, al	      4976	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_15
0x400381e	            0x7505	                           jne 0x4003825	      4976	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_15
0x4003820	          0x4d85e4	                           test r12, r12	      4976	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_15
0x4003823	            0x750d	                           jne 0x4003832	      4976	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_15
0x4003825	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4977	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_15
0x400382a	          0x830810	                    or dword [rax], 0x10	      4977	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_15
0x400382d	      0xe95e040000	                           jmp 0x4003c90	      4978	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_15
0x4003832	      0x488b442408	                mov rax, qword [rsp + 8]	      4986	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1
0x4003837	        0x488d780a	                    lea rdi, [rax + 0xa]	      4986	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1
0x400383b	          0x4c89ee	                            mov rsi, r13	      4986	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1
0x400383e	            0x85db	                           test ebx, ebx	      4986	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1
0x4003840	            0x7e43	                           jle 0x4003885	      4986	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1
0x4003842	      0xe9b5040000	                           jmp 0x4003cfc	      4986	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1
0x4003847	    0xc70600000000	                      mov dword [rsi], 0	      4987	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x400384d	          0x448b06	                    mov r8d, dword [rsi]	      4987	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x4003850	      0xb900000000	                              mov ecx, 0	      4987	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x4003855	      0xba00000000	                              mov edx, 0	      4987	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x400385a	           0xfb707	                   movzx eax, word [rdi]	      4989	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x400385d	           0xfaf01	                   imul eax, dword [rcx]	      4989	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x4003860	          0x4101c0	                            add r8d, eax	      4989	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x4003863	          0x83c203	                              add edx, 3	      4988	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x4003866	        0x4883c702	                              add rdi, 2	      4988	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x400386a	          0x83eb03	                              sub ebx, 3	      4988	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x400386d	        0x4883c10c	                            add rcx, 0xc	      4988	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x4003871	          0x83fa08	                              cmp edx, 8	      4987	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x4003874	            0x7f04	                            jg 0x400387a	      4987	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x4003876	            0x85db	                           test ebx, ebx	      4987	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x4003878	            0x7fe0	                            jg 0x400385a	      4987	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x400387a	          0x448906	                    mov dword [rsi], r8d	      4987	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x400387d	        0x4883c604	                              add rsi, 4	      4986	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1
0x4003881	            0x85db	                           test ebx, ebx	      4986	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1
0x4003883	            0x7fc2	                            jg 0x4003847	      4986	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1
0x4003885	        0x4883ee04	                              sub rsi, 4	      4990	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4003889	        0x498d7e0a	                    lea rdi, [r14 + 0xa]	      4991	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3
0x400388d	      0x4c8b442440	              mov r8, qword [rsp + 0x40]	      4991	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3
0x4003892	            0x85ed	                           test ebp, ebp	      4991	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3
0x4003894	            0x7e44	                           jle 0x40038da	      4991	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3
0x4003896	      0xe94e040000	                           jmp 0x4003ce9	      4991	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3
0x400389b	    0x41c700000000	                       mov dword [r8], 0	      4992	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x40038a2	          0x458b08	                     mov r9d, dword [r8]	      4992	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x40038a5	      0xb900000000	                              mov ecx, 0	      4992	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x40038aa	      0xba00000000	                              mov edx, 0	      4992	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x40038af	           0xfb707	                   movzx eax, word [rdi]	      4994	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x40038b2	           0xfaf01	                   imul eax, dword [rcx]	      4994	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x40038b5	          0x4101c1	                            add r9d, eax	      4994	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x40038b8	          0x83c203	                              add edx, 3	      4993	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x40038bb	        0x4883c702	                              add rdi, 2	      4993	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x40038bf	          0x83ed03	                              sub ebp, 3	      4993	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x40038c2	        0x4883c10c	                            add rcx, 0xc	      4993	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x40038c6	          0x83fa08	                              cmp edx, 8	      4992	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x40038c9	            0x7f04	                            jg 0x40038cf	      4992	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x40038cb	            0x85ed	                           test ebp, ebp	      4992	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x40038cd	            0x7fe0	                            jg 0x40038af	      4992	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x40038cf	          0x458908	                     mov dword [r8], r9d	      4992	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x40038d2	        0x4983c004	                               add r8, 4	      4991	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3
0x40038d6	            0x85ed	                           test ebp, ebp	      4991	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3
0x40038d8	            0x7fc1	                            jg 0x400389b	      4991	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3
0x40038da	        0x4983e804	                               sub r8, 4	      4995	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x40038de	      0x4863442448	         movsxd rax, dword [rsp + 0x48] 	      4998	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_5
0x40038e3	        0x498d3cc4	                  lea rdi, [r12 + rax*8]	      4998	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_5
0x40038e7	          0x4939fc	                            cmp r12, rdi	      4998	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_5
0x40038ea	     0xf83e6030000	                           jae 0x4003cd6	      4998	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_5
0x40038f0	          0x4c89e0	                            mov rax, r12	      4998	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_5
0x40038f3	    0x48c700000000	                      mov qword [rax], 0	      4998	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_5
0x40038fa	        0x4883c008	                              add rax, 8	      4998	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_5
0x40038fe	          0x4839f8	                            cmp rax, rdi	      4998	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_5
0x4003901	            0x72f0	                            jb 0x40038f3	      4998	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_5
0x4003903	      0xe9be030000	                           jmp 0x4003cc6	      4998	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_5
0x4003908	      0x4c8b5c2440	            mov r11, qword [rsp + 0x40] 	      4998	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_5
0x400390d	          0x4d89d9	                             mov r9, r11	      4998	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_5
0x4003910	      0xbb12000000	                           mov ebx, 0x12	      4998	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_5
0x4003915	    0x49ba535a9ba0	            movabs r10, 0x44b82fa09b5a53	      5029	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x400391f	    0x48bd0f494777	              movabs rbp, 0x49c97747490f	      5036	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x4003929	      0x4c897c2448	             mov qword [rsp + 0x48], r15	      5038	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x400392e	          0x4c89c8	                             mov rax, r9	      5019	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x4003931	          0x4c29d8	                            sub rax, r11	      5019	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x4003934	        0x48c1f802	                              sar rax, 2	      5019	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x4003938	        0x498d04c4	                  lea rax, [r12 + rax*8]	      5019	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x400393c	          0x4939f5	                            cmp r13, rsi	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x400393f	            0x771c	                            ja 0x400395d	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003941	          0x458b39	                    mov r15d, dword [r9]	      5021	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003944	          0x4c89ea	                            mov rdx, r13	      5021	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003947	            0x8b0a	                    mov ecx, dword [rdx]	      5021	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003949	        0x490fafcf	                           imul rcx, r15	      5021	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x400394d	          0x480108	                    add qword [rax], rcx	      5021	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003950	        0x4883c204	                              add rdx, 4	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003954	        0x4883c008	                              add rax, 8	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x4003958	          0x4839d6	                            cmp rsi, rdx	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x400395b	            0x73ea	                           jae 0x4003947	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x400395d	          0x83eb01	                              sub ebx, 1	      5023	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x4003960	            0x85db	                           test ebx, ebx	      5024	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	IF_16
0x4003962	            0x7e09	                           jle 0x400396d	      5024	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	IF_16
0x4003964	          0x4d39c8	                              cmp r8, r9	      5024	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	IF_16
0x4003967	     0xf8597000000	                           jne 0x4003a04	      5024	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	IF_16
0x400396d	          0x4939fc	                            cmp r12, rdi	      5027	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x4003970	     0xf8389000000	                           jae 0x40039ff	      5027	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x4003976	          0x4c89e3	                            mov rbx, r12	      5027	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x4003979	      0x4889742440	             mov qword [rsp + 0x40], rsi	      5027	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x400397e	          0x4c8b3b	                    mov r15, qword [rbx]	      5028	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	IF_17
0x4003981	    0x4981ffffc99a	                     cmp r15, 0x3b9ac9ff	      5028	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	IF_17
0x4003988	            0x7660	                           jbe 0x40039ea	      5028	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	IF_17
0x400398a	          0x4c89fa	                            mov rdx, r15	      5029	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x400398d	        0x48c1ea09	                              shr rdx, 9	      5029	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x4003991	          0x4889d0	                            mov rax, rdx	      5029	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x4003994	          0x49f7e2	                                 mul r10	      5029	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x4003997	          0x4889d1	                            mov rcx, rdx	      5029	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x400399a	        0x48c1e90b	                            shr rcx, 0xb	      5029	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x400399e	    0x4881f9ffc99a	                     cmp rcx, 0x3b9ac9ff	      5034	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	IF_18
0x40039a5	            0x7633	                           jbe 0x40039da	      5034	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	IF_18
0x40039a7	          0x4c89fa	                            mov rdx, r15	      5036	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x40039aa	        0x48c1ea12	                           shr rdx, 0x12	      5036	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x40039ae	          0x4889d0	                            mov rax, rdx	      5036	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x40039b1	          0x48f7e5	                                 mul rbp	      5036	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x40039b4	        0x48c1ea18	                           shr rdx, 0x18	      5036	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x40039b8	            0x89d0	                            mov eax, edx	      5036	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x40039ba	        0x48014310	            add qword [rbx + 0x10], rax 	      5037	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x40039be	    0x48be000064a7	           movabs rsi, 0xde0b6b3a7640000	      5038	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x40039c8	        0x480fafc6	                           imul rax, rsi	      5038	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x40039cc	          0x4929c7	                            sub r15, rax	      5038	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x40039cf	          0x4c893b	                    mov qword [rbx], r15	      5038	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x40039d2	    0x69d200ca9a3b	               imul edx, edx, 0x3b9aca00	      5039	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x40039d8	            0x29d1	                            sub ecx, edx	      5039	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x40039da	            0x89c8	                            mov eax, ecx	      5041	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x40039dc	        0x48014308	                add qword [rbx + 8], rax	      5041	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x40039e0	    0x4869c000ca9a	               imul rax, rax, 0x3b9aca00	      5042	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x40039e7	          0x482903	                    sub qword [rbx], rax	      5042	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x40039ea	        0x4883c308	                              add rbx, 8	      5027	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x40039ee	          0x4839fb	                            cmp rbx, rdi	      5027	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x40039f1	            0x728b	                            jb 0x400397e	      5027	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x40039f3	      0x488b742440	            mov rsi, qword [rsp + 0x40] 	      5027	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x40039f8	      0xbb12000000	                           mov ebx, 0x12	      5025	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x40039fd	            0xeb05	                           jmp 0x4003a04	      5025	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x40039ff	      0xbb12000000	                           mov ebx, 0x12	      5025	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x4003a04	        0x4983c104	                               add r9, 4	      5018	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x4003a08	          0x4d39c8	                              cmp r8, r9	      5018	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x4003a0b	     0xf831dffffff	                           jae 0x400392e	      5018	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x4003a11	      0x4c8b7c2448	            mov r15, qword [rsp + 0x48] 	      5018	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x4003a16	          0x4939fc	                            cmp r12, rdi	      5052	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9
0x4003a19	            0x7356	                           jae 0x4003a71	      5052	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9
0x4003a1b	          0x4d89e1	                             mov r9, r12	      5025	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x4003a1e	          0x4c89e6	                            mov rsi, r12	      5025	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x4003a21	    0x41bbd34d6210	                    mov r11d, 0x10624dd3	      5056	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x4003a27	    0x41ba83de1b43	                    mov r10d, 0x431bde83	      5056	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x4003a2d	          0x498b09	                     mov rcx, qword [r9]	      5053	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9
0x4003a30	            0x89c8	                            mov eax, ecx	      5056	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x4003a32	          0x41f7e3	                                mul r11d	      5056	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x4003a35	          0xc1ea06	                              shr edx, 6	      5056	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x4003a38	          0x4189d0	                            mov r8d, edx	      5056	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x4003a3b	      0x6669c2e803	                      imul ax, dx, 0x3e8	      5056	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x4003a40	            0x89cb	                            mov ebx, ecx	      5056	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x4003a42	            0x29c3	                            sub ebx, eax	      5056	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x4003a44	          0x66891e	                      mov word [rsi], bx	      5056	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x4003a47	            0x89c8	                            mov eax, ecx	      5056	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x4003a49	          0x41f7e2	                                mul r10d	      5056	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x4003a4c	            0x89d1	                            mov ecx, edx	      5056	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x4003a4e	          0xc1e912	                           shr ecx, 0x12	      5056	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x4003a51	      0x6669c1e803	                      imul ax, cx, 0x3e8	      5056	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x4003a56	          0x4129c0	                            sub r8d, eax	      5056	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x4003a59	      0x6644894602	                 mov word [rsi + 2], r8w	      5056	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x4003a5e	        0x66894e04	                  mov word [rsi + 4], cx	      5059	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9
0x4003a62	        0x4883c606	                              add rsi, 6	      5059	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9
0x4003a66	        0x4983c108	                               add r9, 8	      5052	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9
0x4003a6a	          0x4939f9	                             cmp r9, rdi	      5052	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9
0x4003a6d	            0x72be	                            jb 0x4003a2d	      5052	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9
0x4003a6f	            0xeb03	                           jmp 0x4003a74	      5052	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9
0x4003a71	          0x4c89e6	                            mov rsi, r12	      5052	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9
0x4003a74	          0x4c29e6	                            sub rsi, r12	      5061	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4003a77	          0x48d1ee	                              shr rsi, 1	      5061	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4003a7a	      0xe99b010000	                           jmp 0x4003c1a	      5061	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4003a7f	      0x488b442408	                mov rax, qword [rsp + 8]	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4003a84	            0x8b18	                    mov ebx, dword [rax]	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4003a86	          0x83fb31	                           cmp ebx, 0x31	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4003a89	            0x7f0c	                            jg 0x4003a97	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4003a8b	          0x4863c3	                         movsxd rax, ebx	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4003a8e	     0xfb6b0000000	                   movzx esi, byte [rax]	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4003a95	            0xeb13	                           jmp 0x4003aaa	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4003a97	          0x8d4b02	                      lea ecx, [rbx + 2]	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4003a9a	      0xba56555555	                     mov edx, 0x55555556	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4003a9f	            0x89c8	                            mov eax, ecx	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4003aa1	            0xf7ea	                                imul edx	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4003aa3	          0xc1f91f	                           sar ecx, 0x1f	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4003aa6	            0x89d6	                            mov esi, edx	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4003aa8	            0x29ce	                            sub esi, ecx	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4003aaa	          0x83fd31	                           cmp ebp, 0x31	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4003aad	            0x7f0c	                            jg 0x4003abb	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4003aaf	          0x4863c5	                         movsxd rax, ebp	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4003ab2	     0xfb680000000	                   movzx eax, byte [rax]	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4003ab9	            0xeb13	                           jmp 0x4003ace	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4003abb	          0x8d7d02	                      lea edi, [rbp + 2]	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4003abe	      0xb956555555	                     mov ecx, 0x55555556	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4003ac3	            0x89f8	                            mov eax, edi	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4003ac5	            0xf7e9	                                imul ecx	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4003ac7	          0xc1ff1f	                           sar edi, 0x1f	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4003aca	            0x89d0	                            mov eax, edx	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4003acc	            0x29f8	                            sub eax, edi	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4003ace	             0x1f0	                            add eax, esi	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4003ad0	             0x1c0	                            add eax, eax	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4003ad2	    0x48c744242800	               mov qword [rsp + 0x28], 0	      4840	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003adb	    0x4c8da424c000	                   lea r12, [rsp + 0xc0]	      5067	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2
0x4003ae3	          0x83f862	                           cmp eax, 0x62	      5069	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19
0x4003ae6	            0x7e34	                           jle 0x4003b1c	      5069	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19
0x4003ae8	          0x4863f8	                         movsxd rdi, eax	      5070	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19
0x4003aeb	      0xe800000000	                          call 0x4003af0	      5070	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19
0x4003af0	          0x4989c4	                            mov r12, rax	      5070	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19
0x4003af3	      0x4889442428	             mov qword [rsp + 0x28], rax	      5070	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19
0x4003af8	          0x4885c0	                           test rax, rax	      5071	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19	IF_20
0x4003afb	            0x751f	                           jne 0x4003b1c	      5071	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19	IF_20
0x4003afd	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5071	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19	IF_20
0x4003b02	          0x830810	                    or dword [rax], 0x10	      5071	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19	IF_20
0x4003b05	    0x48c744243800	               mov qword [rsp + 0x38], 0	      4867	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003b0e	    0x48c744243000	               mov qword [rsp + 0x30], 0	      4864	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003b17	      0xe974010000	                           jmp 0x4003c90	      5071	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19	IF_20
0x4003b1c	    0x6641c7042400	                       mov word [r12], 0	      5081	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2
0x4003b23	          0x83fb31	                           cmp ebx, 0x31	      5083	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_11
0x4003b26	            0x7f10	                            jg 0x4003b38	      5083	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_11
0x4003b28	          0x4863db	                         movsxd rbx, ebx	      5083	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_11
0x4003b2b	     0xfb683000000	                   movzx eax, byte [rbx]	      5083	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_11
0x4003b32	        0x89442430	             mov dword [rsp + 0x30], eax	      5083	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_11
0x4003b36	            0xeb15	                           jmp 0x4003b4d	      5083	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_11
0x4003b38	          0x83c302	                              add ebx, 2	      5083	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_11
0x4003b3b	      0xba56555555	                     mov edx, 0x55555556	      5083	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_11
0x4003b40	            0x89d8	                            mov eax, ebx	      5083	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_11
0x4003b42	            0xf7ea	                                imul edx	      5083	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_11
0x4003b44	          0xc1fb1f	                           sar ebx, 0x1f	      5083	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_11
0x4003b47	            0x29da	                            sub edx, ebx	      5083	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_11
0x4003b49	        0x89542430	             mov dword [rsp + 0x30], edx	      5083	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_11
0x4003b4d	        0x498d5e0a	                    lea rbx, [r14 + 0xa]	      5084	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_12
0x4003b51	          0x83fd31	                           cmp ebp, 0x31	      5084	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_12
0x4003b54	            0x7f10	                            jg 0x4003b66	      5084	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_12
0x4003b56	          0x4863ed	                         movsxd rbp, ebp	      5084	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_12
0x4003b59	    0x440fb6ad0000	                  movzx r13d, byte [rbp]	      5084	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_12
0x4003b61	          0x4d01ed	                            add r13, r13	      5084	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_12
0x4003b64	            0xeb17	                           jmp 0x4003b7d	      5084	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_12
0x4003b66	          0x83c502	                              add ebp, 2	      5084	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_12
0x4003b69	      0xba56555555	                     mov edx, 0x55555556	      5084	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_12
0x4003b6e	            0x89e8	                            mov eax, ebp	      5084	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_12
0x4003b70	            0xf7ea	                                imul edx	      5084	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_12
0x4003b72	          0xc1fd1f	                           sar ebp, 0x1f	      5084	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_12
0x4003b75	            0x29ea	                            sub edx, ebp	      5084	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_12
0x4003b77	          0x4c63ea	                         movsxd r13, edx	      5084	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_12
0x4003b7a	          0x4d01ed	                            add r13, r13	      5084	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_12
0x4003b7d	          0x4901dd	                            add r13, rbx	      5084	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_12
0x4003b80	          0x4c39eb	                            cmp rbx, r13	      5086	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11
0x4003b83	            0x737e	                           jae 0x4003c03	      5086	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11
0x4003b85	      0xbd00000000	                              mov ebp, 0	      5086	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11
0x4003b8a	      0xbe01000000	                              mov esi, 1	      5086	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11
0x4003b8f	      0x488b442408	                mov rax, qword [rsp + 8]	      5090	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21
0x4003b94	        0x4883c00a	                            add rax, 0xa	      5090	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21
0x4003b98	      0x4889442438	             mov qword [rsp + 0x38], rax	      5090	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21
0x4003b9d	           0xfb703	                   movzx eax, word [rbx]	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x4003ba0	          0x6685c0	                             test ax, ax	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x4003ba3	            0x7431	                            je 0x4003bd6	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x4003ba5	          0x4863d5	                         movsxd rdx, ebp	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x4003ba8	        0x498d3c54	                  lea rdi, [r12 + rdx*2]	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x4003bac	            0x29ee	                            sub esi, ebp	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x4003bae	        0x4883ec08	                              sub rsp, 8	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x4003bb2	           0xfb7c0	                           movzx eax, ax	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x4003bb5	              0x50	                                push rax	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x4003bb6	          0x4989f9	                             mov r9, rdi	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x4003bb9	    0x41b800000000	                              mov r8d, 0	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x4003bbf	        0x8b4c2440	            mov ecx, dword [rsp + 0x40] 	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x4003bc3	      0x488b542448	            mov rdx, qword [rsp + 0x48] 	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x4003bc8	      0xe873c4ffff	                  call sym.decUnitAddSub	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x4003bcd	          0x8d3428	                    lea esi, [rax + rbp]	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x4003bd0	        0x4883c410	                           add rsp, 0x10	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x4003bd4	            0xeb0d	                           jmp 0x4003be3	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x4003bd6	          0x4863c6	                         movsxd rax, esi	      5094	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	ELSE_3
0x4003bd9	    0x6641c7044400	               mov word [r12 + rax*2], 0	      5094	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	ELSE_3
0x4003be0	          0x83c601	                              add esi, 1	      5095	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	ELSE_3
0x4003be3	          0x83c501	                              add ebp, 1	      5098	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11
0x4003be6	        0x4883c302	                              add rbx, 2	      5086	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11
0x4003bea	          0x4939dd	                            cmp r13, rbx	      5086	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11
0x4003bed	            0x77ae	                            ja 0x4003b9d	      5086	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11
0x4003bef	    0x48c744243800	               mov qword [rsp + 0x38], 0	      4867	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003bf8	    0x48c744243000	               mov qword [rsp + 0x30], 0	      4864	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003c01	            0xeb17	                           jmp 0x4003c1a	      4864	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003c03	    0x48c744243800	               mov qword [rsp + 0x38], 0	      4867	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003c0c	    0x48c744243000	               mov qword [rsp + 0x30], 0	      4864	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003c15	      0xbe01000000	                              mov esi, 1	      5080	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2
0x4003c1a	       0xfb6442417	           movzx eax, byte [rsp + 0x17] 	      5111	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1
0x4003c1f	        0x41884708	                  mov byte [r15 + 8], al	      5111	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1
0x4003c23	          0x4c89e7	                            mov rdi, r12	      5112	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	CALL_15
0x4003c26	      0xe8bcd0ffff	                   call sym.decGetDigits	      5112	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	CALL_15
0x4003c2b	          0x418907	                    mov dword [r15], eax	      5112	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	CALL_15
0x4003c2e	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      5119	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1
0x4003c33	          0x8b5704	                mov edx, dword [rdi + 4]	      5119	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1
0x4003c36	        0x418b7604	                mov esi, dword [r14 + 4]	      5119	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1
0x4003c3a	          0x8d3c32	                    lea edi, [rdx + rsi]	      5119	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1
0x4003c3d	          0xc1ee1f	                           shr esi, 0x1f	      5120	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_22
0x4003c40	          0xc1ea1f	                           shr edx, 0x1f	      5120	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_22
0x4003c43	          0x4084d6	                            test sil, dl	      5120	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_22
0x4003c46	            0x740f	                            je 0x4003c57	      5120	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_22
0x4003c48	            0x85ff	                           test edi, edi	      5120	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_22
0x4003c4a	           0xf9fc2	                                 setg dl	      5120	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_22
0x4003c4d	            0x84d2	                             test dl, dl	      5121	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_22
0x4003c4f	      0xba026cca88	                     mov edx, 0x88ca6c02	      5121	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_22
0x4003c54	           0xf45fa	                         cmovne edi, edx	      5121	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_22
0x4003c57	        0x41897f04	                mov dword [r15 + 4], edi	      5122	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1
0x4003c5b	      0x4c8b742418	            mov r14, qword [rsp + 0x18] 	      5126	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	CALL_16
0x4003c60	          0x4d89f1	                             mov r9, r14	      5126	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	CALL_16
0x4003c63	      0x4c8d44245c	                    lea r8, [rsp + 0x5c]	      5126	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	CALL_16
0x4003c68	            0x89c1	                            mov ecx, eax	      5126	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	CALL_16
0x4003c6a	          0x4c89e2	                            mov rdx, r12	      5126	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	CALL_16
0x4003c6d	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	      5126	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	CALL_16
0x4003c72	          0x4889de	                            mov rsi, rbx	      5126	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	CALL_16
0x4003c75	          0x4c89ff	                            mov rdi, r15	      5126	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	CALL_16
0x4003c78	      0xe8f7cbffff	                    call sym.decSetCoeff	      5126	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	CALL_16
0x4003c7d	          0x4c89f1	                            mov rcx, r14	      5127	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1
0x4003c80	      0x488d54245c	                   lea rdx, [rsp + 0x5c]	      5127	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1
0x4003c85	          0x4889de	                            mov rsi, rbx	      5127	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1
0x4003c88	          0x4c89ff	                            mov rdi, r15	      5127	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1
0x4003c8b	      0xe872deffff	                    call sym.decFinalize	      5127	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1
0x4003c90	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      5130	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003c95	      0xe800000000	                          call 0x4003c9a	      5130	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003c9a	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      5136	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003c9f	      0xe800000000	                          call 0x4003ca4	      5136	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003ca4	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      5137	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003ca9	      0xe800000000	                          call 0x4003cae	      5137	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003cae	          0x4c89f8	                            mov rax, r15	      5140	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003cb1	    0x488bbc24d801	           mov rdi, qword [rsp + 0x1d8] 	      5140	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003cb9	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      5140	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003cc2	            0x744d	                            je 0x4003d11	      5140	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003cc4	            0xeb46	                           jmp 0x4003d0c	      5140	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003cc6	      0x4c39442440	              cmp qword [rsp + 0x40], r8	      5018	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x4003ccb	     0xf8637fcffff	                           jbe 0x4003908	      5018	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x4003cd1	      0xe945fdffff	                           jmp 0x4003a1b	      5018	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x4003cd6	      0x4c39442440	              cmp qword [rsp + 0x40], r8	      5018	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x4003cdb	     0xf8627fcffff	                           jbe 0x4003908	      5018	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x4003ce1	          0x4c89e6	                            mov rsi, r12	      5018	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x4003ce4	      0xe98bfdffff	                           jmp 0x4003a74	      5018	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x4003ce9	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      4992	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x4003cee	    0xc70000000000	                      mov dword [rax], 0	      4992	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x4003cf4	          0x4989c0	                             mov r8, rax	      4992	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x4003cf7	      0xe9a6fbffff	                           jmp 0x40038a2	      4992	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x4003cfc	    0x41c745000000	                      mov dword [r13], 0	      4987	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x4003d04	          0x4c89ee	                            mov rsi, r13	      4987	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x4003d07	      0xe941fbffff	                           jmp 0x400384d	      4987	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x4003d0c	      0xe800000000	                          call 0x4003d11	      5140	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003d11	    0x4881c4e80100	                          add rsp, 0x1e8	      5140	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003d18	              0x5b	                                 pop rbx	      5140	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003d19	              0x5d	                                 pop rbp	      5140	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003d1a	            0x415c	                                 pop r12	      5140	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003d1c	            0x415d	                                 pop r13	      5140	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003d1e	            0x415e	                                 pop r14	      5140	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003d20	            0x415f	                                 pop r15	      5140	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003d22	              0xc3	                                     ret	      5140	decNumber.c	FUNCTION_68	FUNCTION_66
decNumberReduce	SWITCH,0:functions,0:ELSE,0:DO,1:FOR,0:IF,6:CALL,7:WHILE,0	46
0x4002ef3	              0x55	                                push rbp	      2313	decNumber.c	FUNCTION_68	FUNCTION_37
0x4002ef4	              0x53	                                push rbx	      2313	decNumber.c	FUNCTION_68	FUNCTION_37
0x4002ef5	        0x4883ec28	                           sub rsp, 0x28	      2313	decNumber.c	FUNCTION_68	FUNCTION_37
0x4002ef9	          0x4889fb	                            mov rbx, rdi	      2313	decNumber.c	FUNCTION_68	FUNCTION_37
0x4002efc	          0x4889d5	                            mov rbp, rdx	      2313	decNumber.c	FUNCTION_68	FUNCTION_37
0x4002eff	    0x64488b042528	                mov rax, qword fs:[0x28]	      2313	decNumber.c	FUNCTION_68	FUNCTION_37
0x4002f08	      0x4889442418	             mov qword [rsp + 0x18], rax	      2313	decNumber.c	FUNCTION_68	FUNCTION_37
0x4002f0d	            0x31c0	                            xor eax, eax	      2313	decNumber.c	FUNCTION_68	FUNCTION_37
0x4002f0f	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      2317	decNumber.c	FUNCTION_68	FUNCTION_37
0x4002f17	    0xc74424100000	               mov dword [rsp + 0x10], 0	      2318	decNumber.c	FUNCTION_68	FUNCTION_37
0x4002f1f	        0xf6460830	               test byte [rsi + 8], 0x30	      2339	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1	IF_5	CALL_3
0x4002f23	            0x7414	                            je 0x4002f39	      2339	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1	IF_5	CALL_3
0x4002f25	      0x4c8d44240c	                     lea r8, [rsp + 0xc]	      2340	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1	IF_5	CALL_4
0x4002f2a	          0x4889d1	                            mov rcx, rdx	      2340	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1	IF_5	CALL_4
0x4002f2d	      0xba00000000	                              mov edx, 0	      2340	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1	IF_5	CALL_4
0x4002f32	      0xe8b5feffff	                        call sym.decNaNs	      2340	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1	IF_5	CALL_4
0x4002f37	            0xeb3e	                           jmp 0x4002f77	      2341	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1	IF_5
0x4002f39	      0x4c8d44240c	                     lea r8, [rsp + 0xc]	      2345	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1	CALL_5
0x4002f3e	      0x488d4c2410	                   lea rcx, [rsp + 0x10]	      2345	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1	CALL_5
0x4002f43	      0xe899dbffff	                     call sym.decCopyFit	      2345	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1	CALL_5
0x4002f48	      0x488d4c240c	                    lea rcx, [rsp + 0xc]	      2346	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1
0x4002f4d	      0x488d542410	                   lea rdx, [rsp + 0x10]	      2346	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1
0x4002f52	          0x4889ee	                            mov rsi, rbp	      2346	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1
0x4002f55	          0x4889df	                            mov rdi, rbx	      2346	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1
0x4002f58	      0xe8a5ebffff	                    call sym.decFinalize	      2346	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1
0x4002f5d	      0x4c8d442414	                    lea r8, [rsp + 0x14]	      2347	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1	CALL_6
0x4002f62	      0xb900000000	                              mov ecx, 0	      2347	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1	CALL_6
0x4002f67	      0xba01000000	                              mov edx, 1	      2347	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1	CALL_6
0x4002f6c	          0x4889ee	                            mov rsi, rbp	      2347	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1	CALL_6
0x4002f6f	          0x4889df	                            mov rdi, rbx	      2347	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1	CALL_6
0x4002f72	      0xe895d7ffff	                        call sym.decTrim	      2347	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1	CALL_6
0x4002f77	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      2354	decNumber.c	FUNCTION_68	FUNCTION_37	CALL_7
0x4002f7b	            0x85f6	                           test esi, esi	      2354	decNumber.c	FUNCTION_68	FUNCTION_37	CALL_7
0x4002f7d	            0x740b	                            je 0x4002f8a	      2354	decNumber.c	FUNCTION_68	FUNCTION_37	CALL_7
0x4002f7f	          0x4889ea	                            mov rdx, rbp	      2354	decNumber.c	FUNCTION_68	FUNCTION_37	CALL_7
0x4002f82	          0x4889df	                            mov rdi, rbx	      2354	decNumber.c	FUNCTION_68	FUNCTION_37	CALL_7
0x4002f85	      0xe892e6ffff	                      call sym.decStatus	      2354	decNumber.c	FUNCTION_68	FUNCTION_37	CALL_7
0x4002f8a	          0x4889d8	                            mov rax, rbx	      2356	decNumber.c	FUNCTION_68	FUNCTION_37
0x4002f8d	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      2356	decNumber.c	FUNCTION_68	FUNCTION_37
0x4002f92	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2356	decNumber.c	FUNCTION_68	FUNCTION_37
0x4002f9b	            0x7405	                            je 0x4002fa2	      2356	decNumber.c	FUNCTION_68	FUNCTION_37
0x4002f9d	      0xe800000000	                          call 0x4002fa2	      2356	decNumber.c	FUNCTION_68	FUNCTION_37
0x4002fa2	        0x4883c428	                           add rsp, 0x28	      2356	decNumber.c	FUNCTION_68	FUNCTION_37
0x4002fa6	              0x5b	                                 pop rbx	      2356	decNumber.c	FUNCTION_68	FUNCTION_37
0x4002fa7	              0x5d	                                 pop rbp	      2356	decNumber.c	FUNCTION_68	FUNCTION_37
0x4002fa8	              0xc3	                                     ret	      2356	decNumber.c	FUNCTION_68	FUNCTION_37
decNumberOr	SWITCH,0:functions,0:ELSE,2:DO,0:FOR,2:IF,8:CALL,12:WHILE,0	171
0x400282b	            0x4157	                                push r15	      1806	decNumber.c	FUNCTION_68	FUNCTION_31
0x400282d	            0x4156	                                push r14	      1806	decNumber.c	FUNCTION_68	FUNCTION_31
0x400282f	            0x4155	                                push r13	      1806	decNumber.c	FUNCTION_68	FUNCTION_31
0x4002831	            0x4154	                                push r12	      1806	decNumber.c	FUNCTION_68	FUNCTION_31
0x4002833	              0x55	                                push rbp	      1806	decNumber.c	FUNCTION_68	FUNCTION_31
0x4002834	              0x53	                                push rbx	      1806	decNumber.c	FUNCTION_68	FUNCTION_31
0x4002835	        0x4883ec18	                           sub rsp, 0x18	      1806	decNumber.c	FUNCTION_68	FUNCTION_31
0x4002839	          0x4889fb	                            mov rbx, rdi	      1806	decNumber.c	FUNCTION_68	FUNCTION_31
0x400283c	        0x837e0400	                  cmp dword [rsi + 4], 0	      1815	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_3
0x4002840	            0x7521	                           jne 0x4002863	      1815	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_3
0x4002842	          0x4989d0	                             mov r8, rdx	      1815	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_3
0x4002845	         0xfb64608	               movzx eax, byte [rsi + 8]	      1815	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_3
0x4002849	            0xa870	                           test al, 0x70	      1815	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_3
0x400284b	            0x7516	                           jne 0x4002863	      1815	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_3
0x400284d	            0x84c0	                             test al, al	      1815	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_3
0x400284f	            0x7812	                            js 0x4002863	      1815	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_3
0x4002851	        0x837a0400	                  cmp dword [rdx + 4], 0	      1816	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_5
0x4002855	            0x750c	                           jne 0x4002863	      1816	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_5
0x4002857	         0xfb64208	               movzx eax, byte [rdx + 8]	      1816	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_5
0x400285b	            0xa870	                           test al, 0x70	      1816	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_5
0x400285d	            0x7504	                           jne 0x4002863	      1816	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_5
0x400285f	            0x84c0	                             test al, al	      1816	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_5
0x4002861	            0x7915	                           jns 0x4002878	      1816	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_5
0x4002863	          0x4889ca	                            mov rdx, rcx	      1817	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_6
0x4002866	      0xbe80000000	                           mov esi, 0x80	      1817	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_6
0x400286b	          0x4889df	                            mov rdi, rbx	      1817	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_6
0x400286e	      0xe8a9edffff	                      call sym.decStatus	      1817	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_6
0x4002873	      0xe9d9010000	                           jmp 0x4002a51	      1818	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2
0x4002878	        0x4c8d5e0a	                    lea r11, [rsi + 0xa]	      1821	decNumber.c	FUNCTION_68	FUNCTION_31
0x400287c	        0x488d6a0a	                    lea rbp, [rdx + 0xa]	      1822	decNumber.c	FUNCTION_68	FUNCTION_31
0x4002880	        0x488d7f0a	                    lea rdi, [rdi + 0xa]	      1823	decNumber.c	FUNCTION_68	FUNCTION_31
0x4002884	            0x8b06	                    mov eax, dword [rsi]	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x4002886	          0x83f831	                           cmp eax, 0x31	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x4002889	            0x7f10	                            jg 0x400289b	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x400288b	            0x4898	                                    cdqe	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x400288d	     0xfb680000000	                   movzx eax, byte [rax]	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x4002894	      0x4c8d6400fe	                lea r12, [rax + rax - 2]	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x4002899	            0xeb1b	                           jmp 0x40028b6	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x400289b	          0x8d7002	                      lea esi, [rax + 2]	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x400289e	      0xba56555555	                     mov edx, 0x55555556	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x40028a3	            0x89f0	                            mov eax, esi	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x40028a5	            0xf7ea	                                imul edx	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x40028a7	            0x89f0	                            mov eax, esi	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x40028a9	          0xc1f81f	                           sar eax, 0x1f	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x40028ac	            0x29c2	                            sub edx, eax	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x40028ae	          0x4863d2	                         movsxd rdx, edx	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x40028b1	      0x4c8d6412fe	                lea r12, [rdx + rdx - 2]	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x40028b6	          0x4d01dc	                            add r12, r11	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x40028b9	          0x418b00	                     mov eax, dword [r8]	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x40028bc	          0x83f831	                           cmp eax, 0x31	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x40028bf	            0x7f10	                            jg 0x40028d1	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x40028c1	            0x4898	                                    cdqe	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x40028c3	     0xfb680000000	                   movzx eax, byte [rax]	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x40028ca	      0x4c8d6c00fe	                lea r13, [rax + rax - 2]	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x40028cf	            0xeb1b	                           jmp 0x40028ec	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x40028d1	          0x8d7002	                      lea esi, [rax + 2]	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x40028d4	      0xba56555555	                     mov edx, 0x55555556	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x40028d9	            0x89f0	                            mov eax, esi	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x40028db	            0xf7ea	                                imul edx	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x40028dd	            0x89f0	                            mov eax, esi	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x40028df	          0xc1f81f	                           sar eax, 0x1f	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x40028e2	            0x29c2	                            sub edx, eax	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x40028e4	          0x4863d2	                         movsxd rdx, edx	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x40028e7	      0x4c8d6c12fe	                lea r13, [rdx + rdx - 2]	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x40028ec	          0x4901ed	                            add r13, rbp	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x40028ef	            0x8b31	                    mov esi, dword [rcx]	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x40028f1	          0x83fe31	                           cmp esi, 0x31	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x40028f4	            0x7f1b	                            jg 0x4002911	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x40028f6	          0x4863c6	                         movsxd rax, esi	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x40028f9	     0xfb680000000	                   movzx eax, byte [rax]	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x4002900	           0xfb6d0	                           movzx edx, al	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x4002903	      0x4c8d7c57fe	              lea r15, [rdi + rdx*2 - 2]	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x4002908	           0xfb6c0	                           movzx eax, al	      1827	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_10
0x400290b	        0x8d4440fd	              lea eax, [rax + rax*2 - 3]	      1827	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_10
0x400290f	            0xeb21	                           jmp 0x4002932	      1827	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_10
0x4002911	        0x448d4602	                      lea r8d, [rsi + 2]	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x4002915	      0xba56555555	                     mov edx, 0x55555556	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x400291a	          0x4489c0	                            mov eax, r8d	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x400291d	            0xf7ea	                                imul edx	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x400291f	        0x41c1f81f	                           sar r8d, 0x1f	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x4002923	          0x4429c2	                            sub edx, r8d	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x4002926	          0x4863c2	                         movsxd rax, edx	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x4002929	      0x4c8d7c47fe	              lea r15, [rdi + rax*2 - 2]	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x400292e	        0x8d4452fd	              lea eax, [rdx + rdx*2 - 3]	      1827	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_10
0x4002932	            0x29c6	                            sub esi, eax	      1827	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_10
0x4002934	            0x89f0	                            mov eax, esi	      1827	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_10
0x4002936	          0x4939ff	                            cmp r15, rdi	      1828	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1
0x4002939	     0xf82dd000000	                            jb 0x4002a1c	      1828	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1
0x400293f	          0x4889fe	                            mov rsi, rdi	      1828	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1
0x4002942	          0x83e801	                              sub eax, 1	      1848	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4002945	        0x8944240c	              mov dword [rsp + 0xc], eax	      1848	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4002949	          0x4d39dc	                            cmp r12, r11	      1830	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	IF_3
0x400294c	     0xf82ee000000	                            jb 0x4002a40	      1830	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	IF_3
0x4002952	        0x450fb70b	                   movzx r9d, word [r11]	      1831	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_1
0x4002956	      0xba00000000	                              mov edx, 0	      1832	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	IF_4
0x400295b	          0x4939ed	                            cmp r13, rbp	      1832	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	IF_4
0x400295e	            0x7204	                            jb 0x4002964	      1832	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	IF_4
0x4002960	         0xfb75500	                   movzx edx, word [rbp]	      1833	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2
0x4002964	      0x66c7060000	                       mov word [rsi], 0	      1834	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2
0x4002969	            0x89d0	                            mov eax, edx	      1835	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5
0x400296b	        0x664409c8	                              or ax, r9w	      1835	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5
0x400296f	     0xf8490000000	                            je 0x4002a05	      1835	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5
0x4002975	    0x41ba00000000	                             mov r10d, 0	      1835	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5
0x400297b	          0x4489c8	                            mov eax, r9d	      1839	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x400297e	             0x9d0	                             or eax, edx	      1839	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4002980	            0xa801	                              test al, 1	      1839	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4002982	            0x740b	                            je 0x400298f	      1839	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4002984	    0x428b04950000	                  mov eax, dword [r10*4]	      1839	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x400298c	          0x660106	                      add word [rsi], ax	      1839	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x400298f	        0x410fb7c1	                          movzx eax, r9w	      1840	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4002993	    0x69c0cdcc0000	                   imul eax, eax, 0xcccd	      1840	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4002999	          0xc1e813	                           shr eax, 0x13	      1840	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x400299c	          0x4189c0	                            mov r8d, eax	      1840	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x400299f	          0x8d0480	                  lea eax, [rax + rax*4]	      1840	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x40029a2	             0x1c0	                            add eax, eax	      1840	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x40029a4	          0x4129c1	                            sub r9d, eax	      1840	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x40029a7	          0x4489c8	                            mov eax, r9d	      1840	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x40029aa	          0x4589c1	                            mov r9d, r8d	      1841	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x40029ad	        0x440fb7f2	                          movzx r14d, dx	      1842	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x40029b1	    0x4569f6cdcc00	                 imul r14d, r14d, 0xcccd	      1842	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x40029b8	        0x41c1ee13	                          shr r14d, 0x13	      1842	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x40029bc	        0x478d04b6	                  lea r8d, [r14 + r14*4]	      1842	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x40029c0	          0x4501c0	                            add r8d, r8d	      1842	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x40029c3	          0x4429c2	                            sub edx, r8d	      1842	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x40029c6	          0x4189d0	                            mov r8d, edx	      1842	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x40029c9	          0x4409c0	                             or eax, r8d	      1842	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x40029cc	        0x440fb7c0	                           movzx r8d, ax	      1842	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x40029d0	          0x4489f2	                           mov edx, r14d	      1843	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x40029d3	        0x4183f801	                              cmp r8d, 1	      1844	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x40029d7	            0x7e12	                           jle 0x40029eb	      1844	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x40029d9	          0x4889ca	                            mov rdx, rcx	      1845	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_7	CALL_11
0x40029dc	      0xbe80000000	                           mov esi, 0x80	      1845	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_7	CALL_11
0x40029e1	          0x4889df	                            mov rdi, rbx	      1845	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_7	CALL_11
0x40029e4	      0xe833ecffff	                      call sym.decStatus	      1845	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_7	CALL_11
0x40029e9	            0xeb66	                           jmp 0x4002a51	      1846	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x40029eb	          0x4939f7	                            cmp r15, rsi	      1848	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x40029ee	            0x7507	                           jne 0x40029f7	      1848	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x40029f0	      0x443954240c	            cmp dword [rsp + 0xc], r10d 	      1848	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x40029f5	            0x740e	                            je 0x4002a05	      1848	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x40029f7	        0x4983c201	                              add r10, 1	      1848	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x40029fb	        0x4983fa03	                              cmp r10, 3	      1838	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x40029ff	     0xf8576ffffff	                           jne 0x400297b	      1838	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4002a05	        0x4983c302	                              add r11, 2	      1828	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1
0x4002a09	        0x4883c502	                              add rbp, 2	      1828	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1
0x4002a0d	        0x4883c602	                              add rsi, 2	      1828	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1
0x4002a11	          0x4939f7	                            cmp r15, rsi	      1828	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1
0x4002a14	     0xf832fffffff	                           jae 0x4002949	      1828	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1
0x4002a1a	            0xeb03	                           jmp 0x4002a1f	      1828	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1
0x4002a1c	          0x4889fe	                            mov rsi, rdi	      1823	decNumber.c	FUNCTION_68	FUNCTION_31
0x4002a1f	          0x4829fe	                            sub rsi, rdi	      1853	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_12
0x4002a22	          0x48d1fe	                              sar rsi, 1	      1853	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_12
0x4002a25	      0xe8bde2ffff	                   call sym.decGetDigits	      1853	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_12
0x4002a2a	            0x8903	                    mov dword [rbx], eax	      1853	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_12
0x4002a2c	    0xc74304000000	                  mov dword [rbx + 4], 0	      1854	decNumber.c	FUNCTION_68	FUNCTION_31
0x4002a33	        0xc6430800	                   mov byte [rbx + 8], 0	      1855	decNumber.c	FUNCTION_68	FUNCTION_31
0x4002a37	            0xeb18	                           jmp 0x4002a51	      1856	decNumber.c	FUNCTION_68	FUNCTION_31
0x4002a39	      0x66c7060000	                       mov word [rsi], 0	      1834	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2
0x4002a3e	            0xebc5	                           jmp 0x4002a05	      1834	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2
0x4002a40	    0x41b900000000	                              mov r9d, 0	      1830	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	IF_3
0x4002a46	          0x4939ed	                            cmp r13, rbp	      1832	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	IF_4
0x4002a49	     0xf8311ffffff	                           jae 0x4002960	      1832	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	IF_4
0x4002a4f	            0xebe8	                           jmp 0x4002a39	      1832	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	IF_4
0x4002a51	          0x4889d8	                            mov rax, rbx	      1857	decNumber.c	FUNCTION_68	FUNCTION_31
0x4002a54	        0x4883c418	                           add rsp, 0x18	      1857	decNumber.c	FUNCTION_68	FUNCTION_31
0x4002a58	              0x5b	                                 pop rbx	      1857	decNumber.c	FUNCTION_68	FUNCTION_31
0x4002a59	              0x5d	                                 pop rbp	      1857	decNumber.c	FUNCTION_68	FUNCTION_31
0x4002a5a	            0x415c	                                 pop r12	      1857	decNumber.c	FUNCTION_68	FUNCTION_31
0x4002a5c	            0x415d	                                 pop r13	      1857	decNumber.c	FUNCTION_68	FUNCTION_31
0x4002a5e	            0x415e	                                 pop r14	      1857	decNumber.c	FUNCTION_68	FUNCTION_31
0x4002a60	            0x415f	                                 pop r15	      1857	decNumber.c	FUNCTION_68	FUNCTION_31
0x4002a62	              0xc3	                                     ret	      1857	decNumber.c	FUNCTION_68	FUNCTION_31
decNumberClassToString	SWITCH,0:functions,0:ELSE,0:DO,0:FOR,0:IF,10:CALL,0:WHILE,0	41
0x4002cf9	          0x83ff08	                              cmp edi, 8	      3322	decNumber.c	FUNCTION_68	FUNCTION_51	IF_1
0x4002cfc	            0x7439	                            je 0x4002d37	      3322	decNumber.c	FUNCTION_68	FUNCTION_51	IF_1
0x4002cfe	          0x83ff03	                              cmp edi, 3	      3323	decNumber.c	FUNCTION_68	FUNCTION_51	IF_2
0x4002d01	            0x743a	                            je 0x4002d3d	      3323	decNumber.c	FUNCTION_68	FUNCTION_51	IF_2
0x4002d03	          0x83ff06	                              cmp edi, 6	      3324	decNumber.c	FUNCTION_68	FUNCTION_51	IF_3
0x4002d06	            0x743b	                            je 0x4002d43	      3324	decNumber.c	FUNCTION_68	FUNCTION_51	IF_3
0x4002d08	          0x83ff05	                              cmp edi, 5	      3325	decNumber.c	FUNCTION_68	FUNCTION_51	IF_4
0x4002d0b	            0x743c	                            je 0x4002d49	      3325	decNumber.c	FUNCTION_68	FUNCTION_51	IF_4
0x4002d0d	          0x83ff07	                              cmp edi, 7	      3326	decNumber.c	FUNCTION_68	FUNCTION_51	IF_5
0x4002d10	            0x743d	                            je 0x4002d4f	      3326	decNumber.c	FUNCTION_68	FUNCTION_51	IF_5
0x4002d12	          0x83ff04	                              cmp edi, 4	      3327	decNumber.c	FUNCTION_68	FUNCTION_51	IF_6
0x4002d15	            0x743e	                            je 0x4002d55	      3327	decNumber.c	FUNCTION_68	FUNCTION_51	IF_6
0x4002d17	          0x83ff09	                              cmp edi, 9	      3328	decNumber.c	FUNCTION_68	FUNCTION_51	IF_7
0x4002d1a	            0x743f	                            je 0x4002d5b	      3328	decNumber.c	FUNCTION_68	FUNCTION_51	IF_7
0x4002d1c	          0x83ff02	                              cmp edi, 2	      3329	decNumber.c	FUNCTION_68	FUNCTION_51	IF_8
0x4002d1f	            0x7440	                            je 0x4002d61	      3329	decNumber.c	FUNCTION_68	FUNCTION_51	IF_8
0x4002d21	          0x83ff01	                              cmp edi, 1	      3330	decNumber.c	FUNCTION_68	FUNCTION_51	IF_9
0x4002d24	            0x7441	                            je 0x4002d67	      3330	decNumber.c	FUNCTION_68	FUNCTION_51	IF_9
0x4002d26	            0x85ff	                           test edi, edi	      3331	decNumber.c	FUNCTION_68	FUNCTION_51	IF_10
0x4002d28	      0xba00000000	                              mov edx, 0	      3332	decNumber.c	FUNCTION_68	FUNCTION_51
0x4002d2d	      0xb800000000	                              mov eax, 0	      3332	decNumber.c	FUNCTION_68	FUNCTION_51
0x4002d32	        0x480f45c2	                         cmovne rax, rdx	      3332	decNumber.c	FUNCTION_68	FUNCTION_51
0x4002d36	              0xc3	                                     ret	      3332	decNumber.c	FUNCTION_68	FUNCTION_51
0x4002d37	      0xb800000000	                              mov eax, 0	      3322	decNumber.c	FUNCTION_68	FUNCTION_51	IF_1
0x4002d3c	              0xc3	                                     ret	      3322	decNumber.c	FUNCTION_68	FUNCTION_51	IF_1
0x4002d3d	      0xb800000000	                              mov eax, 0	      3323	decNumber.c	FUNCTION_68	FUNCTION_51	IF_2
0x4002d42	              0xc3	                                     ret	      3323	decNumber.c	FUNCTION_68	FUNCTION_51	IF_2
0x4002d43	      0xb800000000	                              mov eax, 0	      3324	decNumber.c	FUNCTION_68	FUNCTION_51	IF_3
0x4002d48	              0xc3	                                     ret	      3324	decNumber.c	FUNCTION_68	FUNCTION_51	IF_3
0x4002d49	      0xb800000000	                              mov eax, 0	      3325	decNumber.c	FUNCTION_68	FUNCTION_51	IF_4
0x4002d4e	              0xc3	                                     ret	      3325	decNumber.c	FUNCTION_68	FUNCTION_51	IF_4
0x4002d4f	      0xb800000000	                              mov eax, 0	      3326	decNumber.c	FUNCTION_68	FUNCTION_51	IF_5
0x4002d54	              0xc3	                                     ret	      3326	decNumber.c	FUNCTION_68	FUNCTION_51	IF_5
0x4002d55	      0xb800000000	                              mov eax, 0	      3327	decNumber.c	FUNCTION_68	FUNCTION_51	IF_6
0x4002d5a	              0xc3	                                     ret	      3327	decNumber.c	FUNCTION_68	FUNCTION_51	IF_6
0x4002d5b	      0xb800000000	                              mov eax, 0	      3328	decNumber.c	FUNCTION_68	FUNCTION_51	IF_7
0x4002d60	              0xc3	                                     ret	      3328	decNumber.c	FUNCTION_68	FUNCTION_51	IF_7
0x4002d61	      0xb800000000	                              mov eax, 0	      3329	decNumber.c	FUNCTION_68	FUNCTION_51	IF_8
0x4002d66	              0xc3	                                     ret	      3329	decNumber.c	FUNCTION_68	FUNCTION_51	IF_8
0x4002d67	      0xb800000000	                              mov eax, 0	      3330	decNumber.c	FUNCTION_68	FUNCTION_51	IF_9
0x4002d6c	              0xc3	                                     ret	      3333	decNumber.c	FUNCTION_68	FUNCTION_51
decNumberNormalize	SWITCH,0:functions,0:ELSE,0:DO,0:FOR,0:IF,0:CALL,1:WHILE,0	4
0x4002fa9	        0x4883ec08	                              sub rsp, 8	      2308	decNumber.c	FUNCTION_68	FUNCTION_36
0x4002fad	      0xe800000000	                          call 0x4002fb2	      2309	decNumber.c	FUNCTION_68	FUNCTION_36	CALL_1
0x4002fb2	        0x4883c408	                              add rsp, 8	      2310	decNumber.c	FUNCTION_68	FUNCTION_36
0x4002fb6	              0xc3	                                     ret	      2310	decNumber.c	FUNCTION_68	FUNCTION_36
decNumberPlus	SWITCH,0:functions,0:ELSE,0:DO,0:FOR,0:IF,2:CALL,5:WHILE,0	35
0x40053b4	              0x55	                                push rbp	      1876	decNumber.c	FUNCTION_68	FUNCTION_32
0x40053b5	              0x53	                                push rbx	      1876	decNumber.c	FUNCTION_68	FUNCTION_32
0x40053b6	        0x4883ec38	                           sub rsp, 0x38	      1876	decNumber.c	FUNCTION_68	FUNCTION_32
0x40053ba	          0x4889fb	                            mov rbx, rdi	      1876	decNumber.c	FUNCTION_68	FUNCTION_32
0x40053bd	          0x4889d5	                            mov rbp, rdx	      1876	decNumber.c	FUNCTION_68	FUNCTION_32
0x40053c0	    0x64488b042528	                mov rax, qword fs:[0x28]	      1876	decNumber.c	FUNCTION_68	FUNCTION_32
0x40053c9	      0x4889442428	             mov qword [rsp + 0x28], rax	      1876	decNumber.c	FUNCTION_68	FUNCTION_32
0x40053ce	            0x31c0	                            xor eax, eax	      1876	decNumber.c	FUNCTION_68	FUNCTION_32
0x40053d0	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      1878	decNumber.c	FUNCTION_68	FUNCTION_32
0x40053d8	      0xc644241800	                mov byte [rsp + 0x18], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x40053dd	    0xc74424100100	               mov dword [rsp + 0x10], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x40053e5	    0x66c744241a00	                mov word [rsp + 0x1a], 0	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x40053ec	          0x8b4604	                mov eax, dword [rsi + 4]	      1884	decNumber.c	FUNCTION_68	FUNCTION_32
0x40053ef	        0x89442414	             mov dword [rsp + 0x14], eax	      1884	decNumber.c	FUNCTION_68	FUNCTION_32
0x40053f3	      0x4c8d4c240c	                     lea r9, [rsp + 0xc]	      1885	decNumber.c	FUNCTION_68	FUNCTION_32	CALL_3
0x40053f8	    0x41b800000000	                              mov r8d, 0	      1885	decNumber.c	FUNCTION_68	FUNCTION_32	CALL_3
0x40053fe	          0x4889d1	                            mov rcx, rdx	      1885	decNumber.c	FUNCTION_68	FUNCTION_32	CALL_3
0x4005401	          0x4889f2	                            mov rdx, rsi	      1885	decNumber.c	FUNCTION_68	FUNCTION_32	CALL_3
0x4005404	      0x488d742410	                   lea rsi, [rsp + 0x10]	      1885	decNumber.c	FUNCTION_68	FUNCTION_32	CALL_3
0x4005409	      0xe87ef2ffff	                       call sym.decAddOp	      1885	decNumber.c	FUNCTION_68	FUNCTION_32	CALL_3
0x400540e	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      1886	decNumber.c	FUNCTION_68	FUNCTION_32	CALL_4
0x4005412	            0x85f6	                           test esi, esi	      1886	decNumber.c	FUNCTION_68	FUNCTION_32	CALL_4
0x4005414	            0x740b	                            je 0x4005421	      1886	decNumber.c	FUNCTION_68	FUNCTION_32	CALL_4
0x4005416	          0x4889ea	                            mov rdx, rbp	      1886	decNumber.c	FUNCTION_68	FUNCTION_32	CALL_4
0x4005419	          0x4889df	                            mov rdi, rbx	      1886	decNumber.c	FUNCTION_68	FUNCTION_32	CALL_4
0x400541c	      0xe8fbc1ffff	                      call sym.decStatus	      1886	decNumber.c	FUNCTION_68	FUNCTION_32	CALL_4
0x4005421	          0x4889d8	                            mov rax, rbx	      1891	decNumber.c	FUNCTION_68	FUNCTION_32
0x4005424	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      1891	decNumber.c	FUNCTION_68	FUNCTION_32
0x4005429	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1891	decNumber.c	FUNCTION_68	FUNCTION_32
0x4005432	            0x7405	                            je 0x4005439	      1891	decNumber.c	FUNCTION_68	FUNCTION_32
0x4005434	      0xe800000000	                          call 0x4005439	      1891	decNumber.c	FUNCTION_68	FUNCTION_32
0x4005439	        0x4883c438	                           add rsp, 0x38	      1891	decNumber.c	FUNCTION_68	FUNCTION_32
0x400543d	              0x5b	                                 pop rbx	      1891	decNumber.c	FUNCTION_68	FUNCTION_32
0x400543e	              0x5d	                                 pop rbp	      1891	decNumber.c	FUNCTION_68	FUNCTION_32
0x400543f	              0xc3	                                     ret	      1891	decNumber.c	FUNCTION_68	FUNCTION_32
decNumberCopySign	SWITCH,0:functions,0:ELSE,0:DO,0:FOR,0:IF,1:CALL,2:WHILE,0	14
0x4008b26	              0x55	                                push rbp	      3429	decNumber.c	FUNCTION_68	FUNCTION_55
0x4008b27	              0x53	                                push rbx	      3429	decNumber.c	FUNCTION_68	FUNCTION_55
0x4008b28	          0x4889fd	                            mov rbp, rdi	      3429	decNumber.c	FUNCTION_68	FUNCTION_55
0x4008b2b	         0xfb65a08	               movzx ebx, byte [rdx + 8]	      3434	decNumber.c	FUNCTION_68	FUNCTION_55
0x4008b2f	          0x83e380	                     and ebx, 0xffffff80	      3434	decNumber.c	FUNCTION_68	FUNCTION_55
0x4008b32	      0xe800000000	                          call 0x4008b37	      3435	decNumber.c	FUNCTION_68	FUNCTION_55	CALL_2
0x4008b37	         0xfb64508	               movzx eax, byte [rbp + 8]	      3437	decNumber.c	FUNCTION_68	FUNCTION_55
0x4008b3b	          0x83e07f	                           and eax, 0x7f	      3437	decNumber.c	FUNCTION_68	FUNCTION_55
0x4008b3e	             0x9c3	                             or ebx, eax	      3437	decNumber.c	FUNCTION_68	FUNCTION_55
0x4008b40	          0x885d08	                  mov byte [rbp + 8], bl	      3437	decNumber.c	FUNCTION_68	FUNCTION_55
0x4008b43	          0x4889e8	                            mov rax, rbp	      3439	decNumber.c	FUNCTION_68	FUNCTION_55
0x4008b46	              0x5b	                                 pop rbx	      3439	decNumber.c	FUNCTION_68	FUNCTION_55
0x4008b47	              0x5d	                                 pop rbp	      3439	decNumber.c	FUNCTION_68	FUNCTION_55
0x4008b48	              0xc3	                                     ret	      3439	decNumber.c	FUNCTION_68	FUNCTION_55
decNumberToString	SWITCH,0:functions,0:ELSE,0:DO,0:FOR,0:IF,0:CALL,1:WHILE,0	7
0x4001e7b	              0x53	                                push rbx	       459	decNumber.c	FUNCTION_68	FUNCTION_5
0x4001e7c	          0x4889f3	                            mov rbx, rsi	       459	decNumber.c	FUNCTION_68	FUNCTION_5
0x4001e7f	      0xba00000000	                              mov edx, 0	       460	decNumber.c	FUNCTION_68	FUNCTION_5	CALL_1
0x4001e84	      0xe842efffff	                    call sym.decToString	       460	decNumber.c	FUNCTION_68	FUNCTION_5	CALL_1
0x4001e89	          0x4889d8	                            mov rax, rbx	       462	decNumber.c	FUNCTION_68	FUNCTION_5
0x4001e8c	              0x5b	                                 pop rbx	       462	decNumber.c	FUNCTION_68	FUNCTION_5
0x4001e8d	              0xc3	                                     ret	       462	decNumber.c	FUNCTION_68	FUNCTION_5
decDecap	SWITCH,0:functions,0:ELSE,0:DO,0:FOR,0:IF,3:CALL,4:WHILE,0	45
0x4000d38	              0x53	                                push rbx	      7625	decNumber.c	FUNCTION_21
0x4000d39	          0x4889fb	                            mov rbx, rdi	      7625	decNumber.c	FUNCTION_21
0x4000d3c	            0x8b0f	                    mov ecx, dword [rdi]	      7628	decNumber.c	FUNCTION_21	IF_1
0x4000d3e	            0x39f1	                            cmp ecx, esi	      7628	decNumber.c	FUNCTION_21	IF_1
0x4000d40	            0x7f0e	                            jg 0x4000d50	      7628	decNumber.c	FUNCTION_21	IF_1
0x4000d42	    0x66c7470a0000	                 mov word [rdi + 0xa], 0	      7634	decNumber.c	FUNCTION_21	IF_1
0x4000d48	    0xc70701000000	                      mov dword [rdi], 1	      7635	decNumber.c	FUNCTION_21	IF_1
0x4000d4e	            0xeb76	                           jmp 0x4000dc6	      7636	decNumber.c	FUNCTION_21	IF_1
0x4000d50	        0x488d7f0a	                    lea rdi, [rdi + 0xa]	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4000d54	            0x29f1	                            sub ecx, esi	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4000d56	          0x83f931	                           cmp ecx, 0x31	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4000d59	            0x7f1f	                            jg 0x4000d7a	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4000d5b	          0x4863c1	                         movsxd rax, ecx	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4000d5e	     0xfb680000000	                   movzx eax, byte [rax]	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4000d65	           0xfb6d0	                           movzx edx, al	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4000d68	      0x488d7412fe	                lea rsi, [rdx + rdx - 2]	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4000d6d	        0x4c8d0437	                     lea r8, [rdi + rsi]	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4000d71	           0xfb6c0	                           movzx eax, al	      7639	decNumber.c	FUNCTION_21	CALL_3
0x4000d74	        0x8d4440fd	              lea eax, [rax + rax*2 - 3]	      7639	decNumber.c	FUNCTION_21	CALL_3
0x4000d78	            0xeb21	                           jmp 0x4000d9b	      7639	decNumber.c	FUNCTION_21	CALL_3
0x4000d7a	          0x8d7102	                      lea esi, [rcx + 2]	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4000d7d	      0xba56555555	                     mov edx, 0x55555556	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4000d82	            0x89f0	                            mov eax, esi	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4000d84	            0xf7ea	                                imul edx	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4000d86	          0xc1fe1f	                           sar esi, 0x1f	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4000d89	            0x29f2	                            sub edx, esi	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4000d8b	          0x4863c2	                         movsxd rax, edx	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4000d8e	      0x488d7400fe	                lea rsi, [rax + rax - 2]	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4000d93	        0x4c8d0437	                     lea r8, [rdi + rsi]	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4000d97	        0x8d4452fd	              lea eax, [rdx + rdx*2 - 3]	      7639	decNumber.c	FUNCTION_21	CALL_3
0x4000d9b	            0x29c1	                            sub ecx, eax	      7639	decNumber.c	FUNCTION_21	CALL_3
0x4000d9d	          0x83f903	                              cmp ecx, 3	      7640	decNumber.c	FUNCTION_21	IF_3
0x4000da0	            0x7417	                            je 0x4000db9	      7640	decNumber.c	FUNCTION_21	IF_3
0x4000da2	        0x410fb700	                    movzx eax, word [r8]	      7640	decNumber.c	FUNCTION_21	IF_3
0x4000da6	          0x4863c9	                         movsxd rcx, ecx	      7640	decNumber.c	FUNCTION_21	IF_3
0x4000da9	      0xba00000000	                              mov edx, 0	      7640	decNumber.c	FUNCTION_21	IF_3
0x4000dae	    0xf7348d000000	                       div dword [rcx*4]	      7640	decNumber.c	FUNCTION_21	IF_3
0x4000db5	        0x66418910	                       mov word [r8], dx	      7640	decNumber.c	FUNCTION_21	IF_3
0x4000db9	          0x48d1fe	                              sar rsi, 1	      7642	decNumber.c	FUNCTION_21	CALL_4
0x4000dbc	          0x83c601	                              add esi, 1	      7642	decNumber.c	FUNCTION_21	CALL_4
0x4000dbf	      0xe823ffffff	                   call sym.decGetDigits	      7642	decNumber.c	FUNCTION_21	CALL_4
0x4000dc4	            0x8903	                    mov dword [rbx], eax	      7642	decNumber.c	FUNCTION_21	CALL_4
0x4000dc6	          0x4889d8	                            mov rax, rbx	      7644	decNumber.c	FUNCTION_21
0x4000dc9	              0x5b	                                 pop rbx	      7644	decNumber.c	FUNCTION_21
0x4000dca	              0xc3	                                     ret	      7644	decNumber.c	FUNCTION_21
decNumberLog10	SWITCH,0:functions,0:ELSE,0:DO,1:FOR,0:IF,15:CALL,22:WHILE,0	199
0x4007524	            0x4157	                                push r15	      1390	decNumber.c	FUNCTION_68	FUNCTION_22
0x4007526	            0x4156	                                push r14	      1390	decNumber.c	FUNCTION_68	FUNCTION_22
0x4007528	            0x4155	                                push r13	      1390	decNumber.c	FUNCTION_68	FUNCTION_22
0x400752a	            0x4154	                                push r12	      1390	decNumber.c	FUNCTION_68	FUNCTION_22
0x400752c	              0x55	                                push rbp	      1390	decNumber.c	FUNCTION_68	FUNCTION_22
0x400752d	              0x53	                                push rbx	      1390	decNumber.c	FUNCTION_68	FUNCTION_22
0x400752e	    0x4881ecc80000	                           sub rsp, 0xc8	      1390	decNumber.c	FUNCTION_68	FUNCTION_22
0x4007535	          0x4889fd	                            mov rbp, rdi	      1390	decNumber.c	FUNCTION_68	FUNCTION_22
0x4007538	          0x4989f7	                            mov r15, rsi	      1390	decNumber.c	FUNCTION_68	FUNCTION_22
0x400753b	          0x4889d3	                            mov rbx, rdx	      1390	decNumber.c	FUNCTION_68	FUNCTION_22
0x400753e	    0x64488b042528	                mov rax, qword fs:[0x28]	      1390	decNumber.c	FUNCTION_68	FUNCTION_22
0x4007547	    0x48898424b800	             mov qword [rsp + 0xb8], rax	      1390	decNumber.c	FUNCTION_68	FUNCTION_22
0x400754f	            0x31c0	                            xor eax, eax	      1390	decNumber.c	FUNCTION_68	FUNCTION_22
0x4007551	    0xc74424100000	               mov dword [rsp + 0x10], 0	      1391	decNumber.c	FUNCTION_68	FUNCTION_22
0x4007559	    0xc74424140000	               mov dword [rsp + 0x14], 0	      1391	decNumber.c	FUNCTION_68	FUNCTION_22
0x4007561	      0x488d542410	                   lea rdx, [rsp + 0x10]	      1418	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x4007566	          0x4889de	                            mov rsi, rbx	      1418	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x4007569	          0x4c89ff	                            mov rdi, r15	      1418	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x400756c	      0xe8d395ffff	                   call sym.decCheckMath	      1418	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x4007571	    0x41bd00000000	                             mov r13d, 0	      1402	decNumber.c	FUNCTION_68	FUNCTION_22
0x4007577	    0x41bc00000000	                             mov r12d, 0	      1399	decNumber.c	FUNCTION_68	FUNCTION_22
0x400757d	            0x85c0	                           test eax, eax	      1418	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x400757f	     0xf857a020000	                           jne 0x40077ff	      1418	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x4007585	      0xbe40000000	                           mov esi, 0x40	      1434	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_8
0x400758a	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1434	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_8
0x400758f	      0xe800000000	                          call 0x4007594	      1434	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_8
0x4007594	      0x410fb64708	               movzx eax, byte [r15 + 8]	      1437	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	CALL_9
0x4007599	            0xa8f0	                           test al, 0xf0	      1437	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	CALL_9
0x400759b	     0xf85af000000	                           jne 0x4007650	      1437	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	CALL_9
0x40075a1	    0x6641837f0a00	                 cmp word [r15 + 0xa], 0	      1437	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	CALL_9
0x40075a7	            0x750e	                           jne 0x40075b7	      1437	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	CALL_9
0x40075a9	        0x41833f01	                      cmp dword [r15], 1	      1437	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	CALL_9
0x40075ad	            0x7508	                           jne 0x40075b7	      1437	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	CALL_9
0x40075af	            0xa870	                           test al, 0x70	      1437	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	CALL_9
0x40075b1	     0xf8499000000	                            je 0x4007650	      1437	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	CALL_9
0x40075b7	    0xc74424180000	               mov dword [rsp + 0x18], 0	      1438	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7
0x40075bf	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      1439	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7
0x40075c7	    0xc74424200100	               mov dword [rsp + 0x20], 1	      1442	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7
0x40075cf	      0x4c8d44241c	                    lea r8, [rsp + 0x1c]	      1443	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	CALL_10
0x40075d4	      0x488d4c2418	                   lea rcx, [rsp + 0x18]	      1443	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	CALL_10
0x40075d9	      0x488d542420	                   lea rdx, [rsp + 0x20]	      1443	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	CALL_10
0x40075de	          0x4c89fe	                            mov rsi, r15	      1443	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	CALL_10
0x40075e1	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      1443	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	CALL_10
0x40075e6	      0xe8f694ffff	                     call sym.decCopyFit	      1443	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	CALL_10
0x40075eb	      0xf644241c20	           test byte [rsp + 0x1c], 0x20 	      1445	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8
0x40075f0	            0x755e	                           jne 0x4007650	      1445	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8
0x40075f2	    0x66837c244a01	                cmp word [rsp + 0x4a], 1	      1445	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8
0x40075f8	            0x7556	                           jne 0x4007650	      1445	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8
0x40075fa	        0x8b742444	            mov esi, dword [rsp + 0x44] 	      1450	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8	CALL_11
0x40075fe	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      1450	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8	CALL_11
0x4007603	      0xe800000000	                          call 0x4007608	      1450	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8	CALL_11
0x4007608	    0xc74424180000	               mov dword [rsp + 0x18], 0	      1451	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8
0x4007610	      0x4c8d442410	                    lea r8, [rsp + 0x10]	      1452	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8	CALL_12
0x4007615	      0x488d4c2418	                   lea rcx, [rsp + 0x18]	      1452	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8	CALL_12
0x400761a	          0x4889da	                            mov rdx, rbx	      1452	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8	CALL_12
0x400761d	      0x488d742440	                   lea rsi, [rsp + 0x40]	      1452	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8	CALL_12
0x4007622	          0x4889ef	                            mov rdi, rbp	      1452	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8	CALL_12
0x4007625	      0xe8b794ffff	                     call sym.decCopyFit	      1452	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8	CALL_12
0x400762a	      0x488d4c2410	                   lea rcx, [rsp + 0x10]	      1453	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8
0x400762f	      0x488d542418	                   lea rdx, [rsp + 0x18]	      1453	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8
0x4007634	          0x4889de	                            mov rsi, rbx	      1453	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8
0x4007637	          0x4889ef	                            mov rdi, rbp	      1453	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8
0x400763a	      0xe8c3a4ffff	                    call sym.decFinalize	      1453	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8
0x400763f	    0x41bd00000000	                             mov r13d, 0	      1402	decNumber.c	FUNCTION_68	FUNCTION_22
0x4007645	    0x41bc00000000	                             mov r12d, 0	      1399	decNumber.c	FUNCTION_68	FUNCTION_22
0x400764b	      0xe9af010000	                           jmp 0x40077ff	      1399	decNumber.c	FUNCTION_68	FUNCTION_22
0x4007650	          0x418b07	                    mov eax, dword [r15]	      1465	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x4007653	          0x83c006	                              add eax, 6	      1465	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x4007656	            0x8b13	                    mov edx, dword [rbx]	      1465	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x4007658	            0x39d0	                            cmp eax, edx	      1465	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x400765a	           0xf4cc2	                          cmovl eax, edx	      1465	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x400765d	        0x448d6803	                     lea r13d, [rax + 3]	      1465	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x4007661	        0x4183fd31	                          cmp r13d, 0x31	      1466	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_13
0x4007665	            0x7f10	                            jg 0x4007677	      1466	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_13
0x4007667	          0x4963c5	                        movsxd rax, r13d	      1466	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_13
0x400766a	     0xfb680000000	                   movzx eax, byte [rax]	      1466	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_13
0x4007671	        0x8d7c000a	              lea edi, [rax + rax + 0xa]	      1466	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_13
0x4007675	            0xeb17	                           jmp 0x400768e	      1466	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_13
0x4007677	          0x8d4805	                      lea ecx, [rax + 5]	      1466	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_13
0x400767a	      0xba56555555	                     mov edx, 0x55555556	      1466	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_13
0x400767f	            0x89c8	                            mov eax, ecx	      1466	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_13
0x4007681	            0xf7ea	                                imul edx	      1466	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_13
0x4007683	            0x89c8	                            mov eax, ecx	      1466	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_13
0x4007685	          0xc1f81f	                           sar eax, 0x1f	      1466	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_13
0x4007688	            0x29c2	                            sub edx, eax	      1466	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_13
0x400768a	        0x8d7c120a	              lea edi, [rdx + rdx + 0xa]	      1466	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_13
0x400768e	          0x83ff24	                           cmp edi, 0x24	      1467	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_9
0x4007691	            0x7622	                           jbe 0x40076b5	      1467	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_9
0x4007693	            0x89ff	                            mov edi, edi	      1468	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_9
0x4007695	      0xe800000000	                          call 0x400769a	      1468	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_9
0x400769a	          0x4989c4	                            mov r12, rax	      1468	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_9
0x400769d	          0x4989c6	                            mov r14, rax	      1472	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_9
0x40076a0	          0x4885c0	                           test rax, rax	      1469	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_9	IF_10
0x40076a3	            0x751b	                           jne 0x40076c0	      1469	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_9	IF_10
0x40076a5	      0x834c241010	             or dword [rsp + 0x10], 0x10	      1470	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_9	IF_10
0x40076aa	    0x41bd00000000	                             mov r13d, 0	      1402	decNumber.c	FUNCTION_68	FUNCTION_22
0x40076b0	      0xe94a010000	                           jmp 0x40077ff	      1471	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_9	IF_10
0x40076b5	      0x4c8d742460	                   lea r14, [rsp + 0x60]	      1400	decNumber.c	FUNCTION_68	FUNCTION_22
0x40076ba	    0x41bc00000000	                             mov r12d, 0	      1399	decNumber.c	FUNCTION_68	FUNCTION_22
0x40076c0	      0x44896c2420	            mov dword [rsp + 0x20], r13d	      1474	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x40076c5	    0xc74424243f42	        mov dword [rsp + 0x24], 0xf423f 	      1475	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x40076cd	    0xc7442428c1bd	     mov dword [rsp + 0x28], 0xfff0bdc1 	      1476	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x40076d5	      0xc644243800	                mov byte [rsp + 0x38], 0	      1477	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x40076da	      0x488d4c2410	                   lea rcx, [rsp + 0x10]	      1478	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_14
0x40076df	      0x488d542420	                   lea rdx, [rsp + 0x20]	      1478	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_14
0x40076e4	          0x4c89fe	                            mov rsi, r15	      1478	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_14
0x40076e7	          0x4c89f7	                            mov rdi, r14	      1478	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_14
0x40076ea	      0xe839f7ffff	                        call sym.decLnOp	      1478	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_14
0x40076ef	      0x448b7c2410	           mov r15d, dword [rsp + 0x10] 	      1482	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_11
0x40076f4	        0x41f6c7dd	                         test r15b, 0xdd	      1482	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_11
0x40076f8	            0x7413	                            je 0x400770d	      1482	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_11
0x40076fa	    0x41bd00000000	                             mov r13d, 0	      1402	decNumber.c	FUNCTION_68	FUNCTION_22
0x4007700	    0x41f7c7000000	                   test r15d, 0x40000000	      1482	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_11
0x4007707	     0xf84f2000000	                            je 0x40077ff	      1482	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_11
0x400770d	      0x41f6460870	               test byte [r14 + 8], 0x70	      1483	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_12	CALL_15
0x4007712	            0x750e	                           jne 0x4007722	      1483	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_12	CALL_15
0x4007714	    0x6641837e0a00	                 cmp word [r14 + 0xa], 0	      1483	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_12	CALL_15
0x400771a	            0x751c	                           jne 0x4007738	      1483	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_12	CALL_15
0x400771c	        0x41833e01	                      cmp dword [r14], 1	      1483	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_12	CALL_15
0x4007720	            0x7516	                           jne 0x4007738	      1483	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_12	CALL_15
0x4007722	          0x4c89f6	                            mov rsi, r14	      1484	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_12	CALL_16
0x4007725	          0x4889ef	                            mov rdi, rbp	      1484	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_12	CALL_16
0x4007728	      0xe800000000	                          call 0x400772d	      1484	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_12	CALL_16
0x400772d	    0x41bd00000000	                             mov r13d, 0	      1402	decNumber.c	FUNCTION_68	FUNCTION_22
0x4007733	      0xe9c7000000	                           jmp 0x40077ff	      1485	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_12
0x4007738	            0x8b03	                    mov eax, dword [rbx]	      1488	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x400773a	          0x8d4803	                      lea ecx, [rax + 3]	      1488	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x400773d	        0x894c240c	              mov dword [rsp + 0xc], ecx	      1488	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x4007741	          0x83f931	                           cmp ecx, 0x31	      1489	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_17
0x4007744	            0x7f10	                            jg 0x4007756	      1489	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_17
0x4007746	          0x4863c1	                         movsxd rax, ecx	      1489	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_17
0x4007749	     0xfb680000000	                   movzx eax, byte [rax]	      1489	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_17
0x4007750	        0x8d7c000a	              lea edi, [rax + rax + 0xa]	      1489	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_17
0x4007754	            0xeb17	                           jmp 0x400776d	      1489	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_17
0x4007756	          0x8d4805	                      lea ecx, [rax + 5]	      1489	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_17
0x4007759	      0xba56555555	                     mov edx, 0x55555556	      1489	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_17
0x400775e	            0x89c8	                            mov eax, ecx	      1489	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_17
0x4007760	            0xf7ea	                                imul edx	      1489	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_17
0x4007762	            0x89c8	                            mov eax, ecx	      1489	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_17
0x4007764	          0xc1f81f	                           sar eax, 0x1f	      1489	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_17
0x4007767	            0x29c2	                            sub edx, eax	      1489	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_17
0x4007769	        0x8d7c120a	              lea edi, [rdx + rdx + 0xa]	      1489	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_17
0x400776d	          0x83ff24	                           cmp edi, 0x24	      1490	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_13
0x4007770	            0x761d	                           jbe 0x400778f	      1490	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_13
0x4007772	            0x89ff	                            mov edi, edi	      1491	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_13
0x4007774	      0xe800000000	                          call 0x4007779	      1491	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_13
0x4007779	          0x4989c5	                            mov r13, rax	      1491	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_13
0x400777c	          0x4889c7	                            mov rdi, rax	      1495	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_13
0x400777f	          0x4885c0	                           test rax, rax	      1492	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_13	IF_14
0x4007782	            0x751c	                           jne 0x40077a0	      1492	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_13	IF_14
0x4007784	        0x4183cf10	                           or r15d, 0x10	      1493	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_13	IF_14
0x4007788	      0x44897c2410	            mov dword [rsp + 0x10], r15d	      1493	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_13	IF_14
0x400778d	            0xeb70	                           jmp 0x40077ff	      1494	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_13	IF_14
0x400778f	    0x488d84249000	                   lea rax, [rsp + 0x90]	      1403	decNumber.c	FUNCTION_68	FUNCTION_22
0x4007797	          0x4889c7	                            mov rdi, rax	      1403	decNumber.c	FUNCTION_68	FUNCTION_22
0x400779a	    0x41bd00000000	                             mov r13d, 0	      1402	decNumber.c	FUNCTION_68	FUNCTION_22
0x40077a0	      0xc644244800	                mov byte [rsp + 0x48], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x40077a5	    0xc74424440000	               mov dword [rsp + 0x44], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x40077ad	    0x66c744244a0a	              mov word [rsp + 0x4a], 0xa	      1501	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x40077b4	    0xc74424400200	               mov dword [rsp + 0x40], 2	      1503	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x40077bc	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      1505	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x40077c0	        0x89442420	             mov dword [rsp + 0x20], eax	      1505	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x40077c4	      0x488d4c2414	                   lea rcx, [rsp + 0x14]	      1506	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_19
0x40077c9	      0x488d542420	                   lea rdx, [rsp + 0x20]	      1506	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_19
0x40077ce	      0x488d742440	                   lea rsi, [rsp + 0x40]	      1506	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_19
0x40077d3	          0x4989ff	                            mov r15, rdi	      1506	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_19
0x40077d6	      0xe84df6ffff	                        call sym.decLnOp	      1506	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_19
0x40077db	            0x8b03	                    mov eax, dword [rbx]	      1508	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x40077dd	        0x89442420	             mov dword [rsp + 0x20], eax	      1508	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x40077e1	      0x4c8d4c2410	                    lea r9, [rsp + 0x10]	      1509	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_20
0x40077e6	    0x41b880000000	                           mov r8d, 0x80	      1509	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_20
0x40077ec	      0x488d4c2420	                   lea rcx, [rsp + 0x20]	      1509	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_20
0x40077f1	          0x4c89fa	                            mov rdx, r15	      1509	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_20
0x40077f4	          0x4c89f6	                            mov rsi, r14	      1509	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_20
0x40077f7	          0x4889ef	                            mov rdi, rbp	      1509	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_20
0x40077fa	      0xe8dbddffff	                    call sym.decDivideOp	      1509	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_20
0x40077ff	          0x4c89e7	                            mov rdi, r12	      1512	decNumber.c	FUNCTION_68	FUNCTION_22
0x4007802	      0xe800000000	                          call 0x4007807	      1512	decNumber.c	FUNCTION_68	FUNCTION_22
0x4007807	          0x4c89ef	                            mov rdi, r13	      1513	decNumber.c	FUNCTION_68	FUNCTION_22
0x400780a	      0xe800000000	                          call 0x400780f	      1513	decNumber.c	FUNCTION_68	FUNCTION_22
0x400780f	        0x8b742410	            mov esi, dword [rsp + 0x10] 	      1518	decNumber.c	FUNCTION_68	FUNCTION_22	CALL_21
0x4007813	            0x85f6	                           test esi, esi	      1518	decNumber.c	FUNCTION_68	FUNCTION_22	CALL_21
0x4007815	            0x740b	                            je 0x4007822	      1518	decNumber.c	FUNCTION_68	FUNCTION_22	CALL_21
0x4007817	          0x4889da	                            mov rdx, rbx	      1518	decNumber.c	FUNCTION_68	FUNCTION_22	CALL_21
0x400781a	          0x4889ef	                            mov rdi, rbp	      1518	decNumber.c	FUNCTION_68	FUNCTION_22	CALL_21
0x400781d	      0xe8fa9dffff	                      call sym.decStatus	      1518	decNumber.c	FUNCTION_68	FUNCTION_22	CALL_21
0x4007822	          0x4889e8	                            mov rax, rbp	      1523	decNumber.c	FUNCTION_68	FUNCTION_22
0x4007825	    0x488b8c24b800	            mov rcx, qword [rsp + 0xb8] 	      1523	decNumber.c	FUNCTION_68	FUNCTION_22
0x400782d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1523	decNumber.c	FUNCTION_68	FUNCTION_22
0x4007836	            0x7405	                            je 0x400783d	      1523	decNumber.c	FUNCTION_68	FUNCTION_22
0x4007838	      0xe800000000	                          call 0x400783d	      1523	decNumber.c	FUNCTION_68	FUNCTION_22
0x400783d	    0x4881c4c80000	                           add rsp, 0xc8	      1523	decNumber.c	FUNCTION_68	FUNCTION_22
0x4007844	              0x5b	                                 pop rbx	      1523	decNumber.c	FUNCTION_68	FUNCTION_22
0x4007845	              0x5d	                                 pop rbp	      1523	decNumber.c	FUNCTION_68	FUNCTION_22
0x4007846	            0x415c	                                 pop r12	      1523	decNumber.c	FUNCTION_68	FUNCTION_22
0x4007848	            0x415d	                                 pop r13	      1523	decNumber.c	FUNCTION_68	FUNCTION_22
0x400784a	            0x415e	                                 pop r14	      1523	decNumber.c	FUNCTION_68	FUNCTION_22
0x400784c	            0x415f	                                 pop r15	      1523	decNumber.c	FUNCTION_68	FUNCTION_22
0x400784e	              0xc3	                                     ret	      1523	decNumber.c	FUNCTION_68	FUNCTION_22
decSetOverflow	SWITCH,1:functions,0:ELSE,1:DO,0:FOR,0:IF,6:CALL,3:WHILE,0	59
0x400165a	            0x4154	                                push r12	      7342	decNumber.c	FUNCTION_16
0x400165c	              0x55	                                push rbp	      7342	decNumber.c	FUNCTION_16
0x400165d	              0x53	                                push rbx	      7342	decNumber.c	FUNCTION_16
0x400165e	         0xfb64708	               movzx eax, byte [rdi + 8]	      7344	decNumber.c	FUNCTION_16
0x4001662	          0x4189c4	                           mov r12d, eax	      7344	decNumber.c	FUNCTION_16
0x4001665	        0x4183e480	                    and r12d, 0xffffff80	      7344	decNumber.c	FUNCTION_16
0x4001669	      0x66837f0a00	                 cmp word [rdi + 0xa], 0	      7346	decNumber.c	FUNCTION_16	IF_1	CALL_1
0x400166e	            0x7550	                           jne 0x40016c0	      7346	decNumber.c	FUNCTION_16	IF_1	CALL_1
0x4001670	          0x833f01	                      cmp dword [rdi], 1	      7346	decNumber.c	FUNCTION_16	IF_1	CALL_1
0x4001673	            0x754b	                           jne 0x40016c0	      7346	decNumber.c	FUNCTION_16	IF_1	CALL_1
0x4001675	            0xa870	                           test al, 0x70	      7346	decNumber.c	FUNCTION_16	IF_1	CALL_1
0x4001677	            0x7547	                           jne 0x40016c0	      7346	decNumber.c	FUNCTION_16	IF_1	CALL_1
0x4001679	          0x8b4604	                mov eax, dword [rsi + 4]	      7347	decNumber.c	FUNCTION_16	IF_1
0x400167c	        0x807e1800	                cmp byte [rsi + 0x18], 0	      7348	decNumber.c	FUNCTION_16	IF_1	IF_2
0x4001680	            0x7405	                            je 0x4001687	      7348	decNumber.c	FUNCTION_16	IF_1	IF_2
0x4001682	            0x2b06	                    sub eax, dword [rsi]	      7348	decNumber.c	FUNCTION_16	IF_1	IF_2
0x4001684	          0x8d4001	                      lea eax, [rax + 1]	      7348	decNumber.c	FUNCTION_16	IF_1	IF_2
0x4001687	          0x3b4704	                cmp eax, dword [rdi + 4]	      7349	decNumber.c	FUNCTION_16	IF_1	IF_3
0x400168a	            0x7d76	                           jge 0x4001702	      7349	decNumber.c	FUNCTION_16	IF_1	IF_3
0x400168c	          0x894704	                mov dword [rdi + 4], eax	      7350	decNumber.c	FUNCTION_16	IF_1	IF_3
0x400168f	    0x810a00040000	                   or dword [rdx], 0x400	      7351	decNumber.c	FUNCTION_16	IF_1	IF_3
0x4001695	            0xeb6b	                           jmp 0x4001702	      7351	decNumber.c	FUNCTION_16	IF_1	IF_3
0x4001697	          0x4584e4	                         test r12b, r12b	      7359	decNumber.c	FUNCTION_16	SWITCH_1
0x400169a	           0xf94c2	                                 sete dl	      7359	decNumber.c	FUNCTION_16	SWITCH_1
0x400169d	            0x84d2	                             test dl, dl	      7372	decNumber.c	FUNCTION_16	IF_6
0x400169f	            0x740e	                            je 0x40016af	      7372	decNumber.c	FUNCTION_16	IF_6
0x40016a1	          0x4889df	                            mov rdi, rbx	      7373	decNumber.c	FUNCTION_16	IF_6	CALL_3
0x40016a4	      0xe85ef4ffff	                 call sym.decSetMaxValue	      7373	decNumber.c	FUNCTION_16	IF_6	CALL_3
0x40016a9	        0x44886308	                mov byte [rbx + 8], r12b	      7374	decNumber.c	FUNCTION_16	IF_6
0x40016ad	            0xeb08	                           jmp 0x40016b7	      7374	decNumber.c	FUNCTION_16	IF_6
0x40016af	        0x4183cc40	                           or r12d, 0x40	      7376	decNumber.c	FUNCTION_16	ELSE_1
0x40016b3	        0x44886308	                mov byte [rbx + 8], r12b	      7376	decNumber.c	FUNCTION_16	ELSE_1
0x40016b7	    0x814d00200a00	                   or dword [rbp], 0xa20	      7377	decNumber.c	FUNCTION_16	ELSE_1
0x40016be	            0xeb42	                           jmp 0x4001702	      7377	decNumber.c	FUNCTION_16	ELSE_1
0x40016c0	          0x4889d5	                            mov rbp, rdx	      7377	decNumber.c	FUNCTION_16	ELSE_1
0x40016c3	          0x4889fb	                            mov rbx, rdi	      7377	decNumber.c	FUNCTION_16	ELSE_1
0x40016c6	        0xc6470800	                   mov byte [rdi + 8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x40016ca	    0xc74704000000	                  mov dword [rdi + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x40016d1	    0xc70701000000	                      mov dword [rdi], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x40016d7	    0x66c7470a0000	                 mov word [rdi + 0xa], 0	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x40016dd	          0x8b460c	              mov eax, dword [rsi + 0xc]	      7357	decNumber.c	FUNCTION_16	SWITCH_1
0x40016e0	          0x83f805	                              cmp eax, 5	      7357	decNumber.c	FUNCTION_16	SWITCH_1
0x40016e3	            0x74bc	                            je 0x40016a1	      7357	decNumber.c	FUNCTION_16	SWITCH_1
0x40016e5	          0x83f805	                              cmp eax, 5	      7357	decNumber.c	FUNCTION_16	SWITCH_1
0x40016e8	            0x770c	                            ja 0x40016f6	      7357	decNumber.c	FUNCTION_16	SWITCH_1
0x40016ea	          0x4584e4	                         test r12b, r12b	      7359	decNumber.c	FUNCTION_16	SWITCH_1
0x40016ed	           0xf95c2	                                setne dl	      7359	decNumber.c	FUNCTION_16	SWITCH_1
0x40016f0	            0x85c0	                           test eax, eax	      7357	decNumber.c	FUNCTION_16	SWITCH_1
0x40016f2	            0x74a9	                            je 0x400169d	      7357	decNumber.c	FUNCTION_16	SWITCH_1
0x40016f4	            0xebb9	                           jmp 0x40016af	      7357	decNumber.c	FUNCTION_16	SWITCH_1
0x40016f6	          0x83f806	                              cmp eax, 6	      7357	decNumber.c	FUNCTION_16	SWITCH_1
0x40016f9	            0x749c	                            je 0x4001697	      7357	decNumber.c	FUNCTION_16	SWITCH_1
0x40016fb	          0x83f807	                              cmp eax, 7	      7357	decNumber.c	FUNCTION_16	SWITCH_1
0x40016fe	            0x74a1	                            je 0x40016a1	      7357	decNumber.c	FUNCTION_16	SWITCH_1
0x4001700	            0xebad	                           jmp 0x40016af	      7357	decNumber.c	FUNCTION_16	SWITCH_1
0x4001702	              0x5b	                                 pop rbx	      7378	decNumber.c	FUNCTION_16	ELSE_1
0x4001703	              0x5d	                                 pop rbp	      7378	decNumber.c	FUNCTION_16	ELSE_1
0x4001704	            0x415c	                                 pop r12	      7378	decNumber.c	FUNCTION_16	ELSE_1
0x4001706	              0xc3	                                     ret	      7378	decNumber.c	FUNCTION_16	ELSE_1
decApplyRound	SWITCH,1:functions,0:ELSE,6:DO,0:FOR,4:IF,27:CALL,6:WHILE,0	195
0x4001707	              0x53	                                push rbx	      7065	decNumber.c	FUNCTION_13
0x4001708	            0x85d2	                           test edx, edx	      7069	decNumber.c	FUNCTION_13	IF_1
0x400170a	     0xf84b2020000	                            je 0x40019c2	      7069	decNumber.c	FUNCTION_13	IF_1
0x4001710	        0x837e0c07	                cmp dword [rsi + 0xc], 7	      7074	decNumber.c	FUNCTION_13	SWITCH_1
0x4001714	     0xf87cf000000	                            ja 0x40017e9	      7074	decNumber.c	FUNCTION_13	SWITCH_1
0x400171a	          0x8b460c	              mov eax, dword [rsi + 0xc]	      7074	decNumber.c	FUNCTION_13	SWITCH_1
0x400171d	    0xff24c5000000	                       jmp qword [rax*8]	      7074	decNumber.c	FUNCTION_13	SWITCH_1
0x4001724	      0x440fb7470a	            movzx r8d, word [rdi + 0xa] 	      7081	decNumber.c	FUNCTION_13	SWITCH_1
0x4001729	        0x410fb7c0	                          movzx eax, r8w	      7081	decNumber.c	FUNCTION_13	SWITCH_1
0x400172d	    0x69c0cdcc0000	                   imul eax, eax, 0xcccd	      7081	decNumber.c	FUNCTION_13	SWITCH_1
0x4001733	          0xc1e812	                           shr eax, 0x12	      7081	decNumber.c	FUNCTION_13	SWITCH_1
0x4001736	          0x8d0480	                  lea eax, [rax + rax*4]	      7081	decNumber.c	FUNCTION_13	SWITCH_1
0x4001739	          0x4129c0	                            sub r8d, eax	      7081	decNumber.c	FUNCTION_13	SWITCH_1
0x400173c	        0x450fb7c0	                          movzx r8d, r8w	      7081	decNumber.c	FUNCTION_13	SWITCH_1
0x4001740	            0x89d0	                            mov eax, edx	      7082	decNumber.c	FUNCTION_13	SWITCH_1	IF_2
0x4001742	          0xc1e81f	                           shr eax, 0x1f	      7082	decNumber.c	FUNCTION_13	SWITCH_1	IF_2
0x4001745	            0x84c0	                             test al, al	      7082	decNumber.c	FUNCTION_13	SWITCH_1	IF_2
0x4001747	            0x7410	                            je 0x4001759	      7082	decNumber.c	FUNCTION_13	SWITCH_1	IF_2
0x4001749	    0x41b9ffffffff	                     mov r9d, 0xffffffff	      7082	decNumber.c	FUNCTION_13	SWITCH_1	IF_2
0x400174f	        0x4183f801	                              cmp r8d, 1	      7082	decNumber.c	FUNCTION_13	SWITCH_1	IF_2
0x4001753	     0xf8559010000	                           jne 0x40018b2	      7082	decNumber.c	FUNCTION_13	SWITCH_1	IF_2
0x4001759	            0x85d2	                           test edx, edx	      7071	decNumber.c	FUNCTION_13
0x400175b	           0xf9fc0	                                 setg al	      7071	decNumber.c	FUNCTION_13
0x400175e	          0x4585c0	                           test r8d, r8d	      7071	decNumber.c	FUNCTION_13
0x4001761	        0x410f94c1	                                sete r9b	      7071	decNumber.c	FUNCTION_13
0x4001765	        0x450fb6c9	                          movzx r9d, r9b	      7071	decNumber.c	FUNCTION_13
0x4001769	          0x4121c1	                            and r9d, eax	      7071	decNumber.c	FUNCTION_13
0x400176c	      0xe980000000	                           jmp 0x40017f1	      7071	decNumber.c	FUNCTION_13
0x4001771	          0xc1fa1f	                           sar edx, 0x1f	      7089	decNumber.c	FUNCTION_13	SWITCH_1	IF_4
0x4001774	          0x4189d1	                            mov r9d, edx	      7089	decNumber.c	FUNCTION_13	SWITCH_1	IF_4
0x4001777	            0xeb78	                           jmp 0x40017f1	      7089	decNumber.c	FUNCTION_13	SWITCH_1	IF_4
0x4001779	          0x83fa05	                              cmp edx, 5	      7071	decNumber.c	FUNCTION_13
0x400177c	        0x410f9fc1	                                setg r9b	      7071	decNumber.c	FUNCTION_13
0x4001780	        0x450fb6c9	                          movzx r9d, r9b	      7071	decNumber.c	FUNCTION_13
0x4001784	            0xeb6b	                           jmp 0x40017f1	      7071	decNumber.c	FUNCTION_13
0x4001786	          0x83fa05	                              cmp edx, 5	      7097	decNumber.c	FUNCTION_13	SWITCH_1	IF_6
0x4001789	            0x7f79	                            jg 0x4001804	      7097	decNumber.c	FUNCTION_13	SWITCH_1	IF_6
0x400178b	          0x83fa05	                              cmp edx, 5	      7098	decNumber.c	FUNCTION_13	SWITCH_1	ELSE_2	IF_7
0x400178e	     0xf852e020000	                           jne 0x40019c2	      7098	decNumber.c	FUNCTION_13	SWITCH_1	ELSE_2	IF_7
0x4001794	      0x440fb74f0a	            movzx r9d, word [rdi + 0xa] 	      7071	decNumber.c	FUNCTION_13
0x4001799	        0x4183e101	                              and r9d, 1	      7071	decNumber.c	FUNCTION_13
0x400179d	            0xeb52	                           jmp 0x40017f1	      7071	decNumber.c	FUNCTION_13
0x400179f	          0x83fa04	                              cmp edx, 4	      7071	decNumber.c	FUNCTION_13
0x40017a2	        0x410f9fc1	                                setg r9b	      7071	decNumber.c	FUNCTION_13
0x40017a6	        0x450fb6c9	                          movzx r9d, r9b	      7071	decNumber.c	FUNCTION_13
0x40017aa	            0xeb45	                           jmp 0x40017f1	      7071	decNumber.c	FUNCTION_13
0x40017ac	            0x85d2	                           test edx, edx	      7071	decNumber.c	FUNCTION_13
0x40017ae	        0x410f9fc1	                                setg r9b	      7071	decNumber.c	FUNCTION_13
0x40017b2	        0x450fb6c9	                          movzx r9d, r9b	      7071	decNumber.c	FUNCTION_13
0x40017b6	            0xeb39	                           jmp 0x40017f1	      7071	decNumber.c	FUNCTION_13
0x40017b8	            0x85d2	                           test edx, edx	      7071	decNumber.c	FUNCTION_13
0x40017ba	        0x410f9fc1	                                setg r9b	      7071	decNumber.c	FUNCTION_13
0x40017be	        0x450fb6c9	                          movzx r9d, r9b	      7071	decNumber.c	FUNCTION_13
0x40017c2	          0xc1fa1f	                           sar edx, 0x1f	      7116	decNumber.c	FUNCTION_13	SWITCH_1	IF_11	IF_12
0x40017c5	        0x807f0800	                   cmp byte [rdi + 8], 0	      7116	decNumber.c	FUNCTION_13	SWITCH_1	IF_11	IF_12
0x40017c9	        0x440f48ca	                          cmovs r9d, edx	      7116	decNumber.c	FUNCTION_13	SWITCH_1	IF_11	IF_12
0x40017cd	            0xeb22	                           jmp 0x40017f1	      7116	decNumber.c	FUNCTION_13	SWITCH_1	IF_11	IF_12
0x40017cf	        0x807f0800	                   cmp byte [rdi + 8], 0	      7126	decNumber.c	FUNCTION_13	SWITCH_1	IF_14	CALL_2
0x40017d3	            0x7808	                            js 0x40017dd	      7126	decNumber.c	FUNCTION_13	SWITCH_1	IF_14	CALL_2
0x40017d5	          0xc1fa1f	                           sar edx, 0x1f	      7127	decNumber.c	FUNCTION_13	SWITCH_1	IF_14	IF_15
0x40017d8	          0x4189d1	                            mov r9d, edx	      7127	decNumber.c	FUNCTION_13	SWITCH_1	IF_14	IF_15
0x40017db	            0xeb14	                           jmp 0x40017f1	      7127	decNumber.c	FUNCTION_13	SWITCH_1	IF_14	IF_15
0x40017dd	            0x85d2	                           test edx, edx	      7071	decNumber.c	FUNCTION_13
0x40017df	        0x410f9fc1	                                setg r9b	      7071	decNumber.c	FUNCTION_13
0x40017e3	        0x450fb6c9	                          movzx r9d, r9b	      7071	decNumber.c	FUNCTION_13
0x40017e7	            0xeb08	                           jmp 0x40017f1	      7071	decNumber.c	FUNCTION_13
0x40017e9	          0x830940	                    or dword [rcx], 0x40	      7135	decNumber.c	FUNCTION_13	SWITCH_1
0x40017ec	      0xe9d1010000	                           jmp 0x40019c2	      7139	decNumber.c	FUNCTION_13	SWITCH_1
0x40017f1	          0x4585c9	                           test r9d, r9d	      7143	decNumber.c	FUNCTION_13	IF_17
0x40017f4	     0xf84c8010000	                            je 0x40019c2	      7143	decNumber.c	FUNCTION_13	IF_17
0x40017fa	          0x4585c9	                           test r9d, r9d	      7150	decNumber.c	FUNCTION_13	IF_18
0x40017fd	            0x7f0b	                            jg 0x400180a	      7150	decNumber.c	FUNCTION_13	IF_18
0x40017ff	      0xe9ae000000	                           jmp 0x40018b2	      7150	decNumber.c	FUNCTION_13	IF_18
0x4001804	    0x41b901000000	                              mov r9d, 1	      7097	decNumber.c	FUNCTION_13	SWITCH_1	IF_6
0x400180a	          0x448b07	                    mov r8d, dword [rdi]	      7152	decNumber.c	FUNCTION_13	IF_18
0x400180d	        0x488d570a	                    lea rdx, [rdi + 0xa]	      7153	decNumber.c	FUNCTION_13	IF_18	FOR_1
0x4001811	        0x4183f803	                              cmp r8d, 3	      7154	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19
0x4001815	            0x7611	                           jbe 0x4001828	      7154	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19
0x4001817	    0x66817f0ae703	            cmp word [rdi + 0xa], 0x3e7 	      7168	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_22
0x400181d	     0xf8556010000	                           jne 0x4001979	      7168	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_22
0x4001823	          0x4889d0	                            mov rax, rdx	      7168	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_22
0x4001826	            0xeb77	                           jmp 0x400189f	      7168	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_22
0x4001828	          0x4889d0	                            mov rax, rdx	      7153	decNumber.c	FUNCTION_13	IF_18	FOR_1
0x400182b	        0x440fb718	                  movzx r11d, word [rax]	      7156	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19	IF_20
0x400182f	          0x4589c2	                           mov r10d, r8d	      7156	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19	IF_20
0x4001832	    0x468b14950000	                 mov r10d, dword [r10*4]	      7156	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19	IF_20
0x400183a	        0x4183ea01	                             sub r10d, 1	      7156	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19	IF_20
0x400183e	          0x4539d3	                          cmp r11d, r10d	      7156	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19	IF_20
0x4001841	     0xf8532010000	                           jne 0x4001979	      7156	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19	IF_20
0x4001847	        0x458d40ff	                       lea r8d, [r8 - 1]	      7158	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19
0x400184b	    0x468b04850000	                   mov r8d, dword [r8*4]	      7158	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19
0x4001853	        0x66448900	                     mov word [rax], r8w	      7158	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19
0x4001857	        0x4883e802	                              sub rax, 2	      7159	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19	FOR_2
0x400185b	          0x4839c2	                            cmp rdx, rax	      7159	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19	FOR_2
0x400185e	            0x770e	                            ja 0x400186e	      7159	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19	FOR_2
0x4001860	      0x66c7000000	                       mov word [rax], 0	      7159	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19	FOR_2
0x4001865	        0x4883e802	                              sub rax, 2	      7159	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19	FOR_2
0x4001869	          0x4839c2	                            cmp rdx, rax	      7159	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19	FOR_2
0x400186c	            0x76f2	                           jbe 0x4001860	      7159	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19	FOR_2
0x400186e	          0x8b4704	                mov eax, dword [rdi + 4]	      7160	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19
0x4001871	          0x83c001	                              add eax, 1	      7160	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19
0x4001874	          0x894704	                mov dword [rdi + 4], eax	      7160	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19
0x4001877	             0x307	                    add eax, dword [rdi]	      7162	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19	IF_21
0x4001879	          0x8b5e04	                mov ebx, dword [rsi + 4]	      7162	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19	IF_21
0x400187c	          0x8d5301	                      lea edx, [rbx + 1]	      7162	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19	IF_21
0x400187f	            0x39d0	                            cmp eax, edx	      7162	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19	IF_21
0x4001881	     0xf8e3b010000	                           jle 0x40019c2	      7162	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19	IF_21
0x4001887	          0x4889ca	                            mov rdx, rcx	      7163	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19	IF_21	CALL_4
0x400188a	      0xe8cbfdffff	                 call sym.decSetOverflow	      7163	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19	IF_21	CALL_4
0x400188f	      0xe92e010000	                           jmp 0x40019c2	      7163	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19	IF_21	CALL_4
0x4001894	      0x668138e703	                   cmp word [rax], 0x3e7	      7168	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_22
0x4001899	     0xf85da000000	                           jne 0x4001979	      7168	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_22
0x400189f	        0x4183e803	                              sub r8d, 3	      7169	decNumber.c	FUNCTION_13	IF_18	FOR_1
0x40018a3	        0x4883c002	                              add rax, 2	      7153	decNumber.c	FUNCTION_13	IF_18	FOR_1
0x40018a7	        0x4183f803	                              cmp r8d, 3	      7154	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19
0x40018ab	            0x77e7	                            ja 0x4001894	      7154	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19
0x40018ad	      0xe979ffffff	                           jmp 0x400182b	      7154	decNumber.c	FUNCTION_13	IF_18	FOR_1	IF_19
0x40018b2	            0x8b07	                    mov eax, dword [rdi]	      7176	decNumber.c	FUNCTION_13	ELSE_5
0x40018b4	        0x4c8d570a	                    lea r10, [rdi + 0xa]	      7177	decNumber.c	FUNCTION_13	ELSE_5	FOR_3
0x40018b8	          0x83f803	                              cmp eax, 3	      7178	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23
0x40018bb	            0x7613	                           jbe 0x40018d0	      7178	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23
0x40018bd	      0x66837f0a00	                 cmp word [rdi + 0xa], 0	      7206	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_27
0x40018c2	     0xf85b1000000	                           jne 0x4001979	      7206	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_27
0x40018c8	          0x4d89d0	                             mov r8, r10	      7206	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_27
0x40018cb	      0xe998000000	                           jmp 0x4001968	      7206	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_27
0x40018d0	          0x4d89d0	                             mov r8, r10	      7177	decNumber.c	FUNCTION_13	ELSE_5	FOR_3
0x40018d3	        0x450fb718	                   movzx r11d, word [r8]	      7180	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_24
0x40018d7	        0x410fb7db	                         movzx ebx, r11w	      7180	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_24
0x40018db	          0x8d50ff	                      lea edx, [rax - 1]	      7180	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_24
0x40018de	    0x3b1c95000000	                  cmp ebx, dword [rdx*4]	      7180	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_24
0x40018e5	     0xf858e000000	                           jne 0x4001979	      7180	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_24
0x40018eb	            0x89c2	                            mov edx, eax	      7183	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23
0x40018ed	    0x8b1495000000	                  mov edx, dword [rdx*4]	      7183	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23
0x40018f4	          0x83ea01	                              sub edx, 1	      7183	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23
0x40018f7	        0x66418910	                       mov word [r8], dx	      7183	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23
0x40018fb	        0x498d50fe	                       lea rdx, [r8 - 2]	      7185	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	FOR_4
0x40018ff	          0x4939d2	                            cmp r10, rdx	      7185	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	FOR_4
0x4001902	            0x7718	                            ja 0x400191c	      7185	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	FOR_4
0x4001904	     0xfb71d000000	           movzx ebx, word [0x0400190b] 	      7185	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	FOR_4
0x400190b	        0x448d4bff	                      lea r9d, [rbx - 1]	      7185	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	FOR_4
0x400190f	        0x6644890a	                     mov word [rdx], r9w	      7185	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	FOR_4
0x4001913	        0x4883ea02	                              sub rdx, 2	      7185	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	FOR_4
0x4001917	          0x4939d2	                            cmp r10, rdx	      7185	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	FOR_4
0x400191a	            0x76f3	                           jbe 0x400190f	      7185	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	FOR_4
0x400191c	        0x448b4f04	                mov r9d, dword [rdi + 4]	      7186	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23
0x4001920	        0x418d51ff	                       lea edx, [r9 - 1]	      7186	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23
0x4001924	          0x895704	                mov dword [rdi + 4], edx	      7186	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23
0x4001927	          0x8b5608	                mov edx, dword [rsi + 8]	      7193	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_25
0x400192a	            0x2b16	                    sub edx, dword [rsi]	      7193	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_25
0x400192c	          0x83c201	                              add edx, 1	      7193	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_25
0x400192f	          0x4139d1	                            cmp r9d, edx	      7193	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_25
0x4001932	     0xf858a000000	                           jne 0x40019c2	      7193	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_25
0x4001938	          0x83f801	                              cmp eax, 1	      7194	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_25	IF_26
0x400193b	            0x750d	                           jne 0x400194a	      7194	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_25	IF_26
0x400193d	          0x833f01	                      cmp dword [rdi], 1	      7194	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_25	IF_26
0x4001940	            0x7508	                           jne 0x400194a	      7194	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_25	IF_26
0x4001942	    0x6641c7000000	                        mov word [r8], 0	      7194	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_25	IF_26
0x4001948	            0xeb0b	                           jmp 0x4001955	      7194	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_25	IF_26
0x400194a	        0x4183eb01	                             sub r11d, 1	      7196	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_25	ELSE_6
0x400194e	        0x66458918	                     mov word [r8], r11w	      7196	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_25	ELSE_6
0x4001952	          0x832f01	                      sub dword [rdi], 1	      7197	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_25	ELSE_6
0x4001955	        0x83470401	                  add dword [rdi + 4], 1	      7199	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_25
0x4001959	    0x810920380000	                  or dword [rcx], 0x3820	      7200	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_25
0x400195f	            0xeb61	                           jmp 0x40019c2	      7200	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23	IF_25
0x4001961	      0x6641833800	                        cmp word [r8], 0	      7206	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_27
0x4001966	            0x7511	                           jne 0x4001979	      7206	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_27
0x4001968	          0x83e803	                              sub eax, 3	      7207	decNumber.c	FUNCTION_13	ELSE_5	FOR_3
0x400196b	        0x4983c002	                               add r8, 2	      7177	decNumber.c	FUNCTION_13	ELSE_5	FOR_3
0x400196f	          0x83f803	                              cmp eax, 3	      7178	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23
0x4001972	            0x77ed	                            ja 0x4001961	      7178	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23
0x4001974	      0xe95affffff	                           jmp 0x40018d3	      7178	decNumber.c	FUNCTION_13	ELSE_5	FOR_3	IF_23
0x4001979	            0x8b07	                    mov eax, dword [rdi]	      7213	decNumber.c	FUNCTION_13	CALL_6
0x400197b	          0x83f831	                           cmp eax, 0x31	      7213	decNumber.c	FUNCTION_13	CALL_6
0x400197e	            0x7f0b	                            jg 0x400198b	      7213	decNumber.c	FUNCTION_13	CALL_6
0x4001980	            0x4898	                                    cdqe	      7213	decNumber.c	FUNCTION_13	CALL_6
0x4001982	     0xfb6b0000000	                   movzx esi, byte [rax]	      7213	decNumber.c	FUNCTION_13	CALL_6
0x4001989	            0xeb15	                           jmp 0x40019a0	      7213	decNumber.c	FUNCTION_13	CALL_6
0x400198b	          0x8d4802	                      lea ecx, [rax + 2]	      7213	decNumber.c	FUNCTION_13	CALL_6
0x400198e	      0xbe56555555	                     mov esi, 0x55555556	      7213	decNumber.c	FUNCTION_13	CALL_6
0x4001993	            0x89c8	                            mov eax, ecx	      7213	decNumber.c	FUNCTION_13	CALL_6
0x4001995	            0xf7ee	                                imul esi	      7213	decNumber.c	FUNCTION_13	CALL_6
0x4001997	            0x89c8	                            mov eax, ecx	      7213	decNumber.c	FUNCTION_13	CALL_6
0x4001999	          0xc1f81f	                           sar eax, 0x1f	      7213	decNumber.c	FUNCTION_13	CALL_6
0x400199c	            0x89d6	                            mov esi, edx	      7213	decNumber.c	FUNCTION_13	CALL_6
0x400199e	            0x29c6	                            sub esi, eax	      7213	decNumber.c	FUNCTION_13	CALL_6
0x40019a0	        0x4883c70a	                            add rdi, 0xa	      7213	decNumber.c	FUNCTION_13	CALL_6
0x40019a4	            0x4151	                                 push r9	      7213	decNumber.c	FUNCTION_13	CALL_6
0x40019a6	          0x4989f9	                             mov r9, rdi	      7213	decNumber.c	FUNCTION_13	CALL_6
0x40019a9	    0x41b800000000	                              mov r8d, 0	      7213	decNumber.c	FUNCTION_13	CALL_6
0x40019af	      0xb901000000	                              mov ecx, 1	      7213	decNumber.c	FUNCTION_13	CALL_6
0x40019b4	      0xba00000000	                              mov edx, 0	      7213	decNumber.c	FUNCTION_13	CALL_6
0x40019b9	      0xe882e6ffff	                  call sym.decUnitAddSub	      7213	decNumber.c	FUNCTION_13	CALL_6
0x40019be	        0x4883c408	                              add rsp, 8	      7213	decNumber.c	FUNCTION_13	CALL_6
0x40019c2	              0x5b	                                 pop rbx	      7214	decNumber.c	FUNCTION_13
0x40019c3	              0xc3	                                     ret	      7214	decNumber.c	FUNCTION_13
decExpOp	SWITCH,0:functions,0:ELSE,3:DO,1:FOR,2:IF,27:CALL,42:WHILE,0	412
0x400664d	            0x4157	                                push r15	      5222	decNumber.c	FUNCTION_68	FUNCTION_67
0x400664f	            0x4156	                                push r14	      5222	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006651	            0x4155	                                push r13	      5222	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006653	            0x4154	                                push r12	      5222	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006655	              0x55	                                push rbp	      5222	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006656	              0x53	                                push rbx	      5222	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006657	    0x4881ece80100	                          sub rsp, 0x1e8	      5222	decNumber.c	FUNCTION_68	FUNCTION_67
0x400665e	          0x4989fd	                            mov r13, rdi	      5222	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006661	          0x4889f3	                            mov rbx, rsi	      5222	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006664	          0x4989d7	                            mov r15, rdx	      5222	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006667	          0x4989cc	                            mov r12, rcx	      5222	decNumber.c	FUNCTION_68	FUNCTION_67
0x400666a	    0x64488b042528	                mov rax, qword fs:[0x28]	      5222	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006673	    0x48898424d801	            mov qword [rsp + 0x1d8], rax	      5222	decNumber.c	FUNCTION_68	FUNCTION_67
0x400667b	            0x31c0	                            xor eax, eax	      5222	decNumber.c	FUNCTION_68	FUNCTION_67
0x400667d	    0xc74424380000	               mov dword [rsp + 0x38], 0	      5223	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006685	         0xfb64608	               movzx eax, byte [rsi + 8]	      5262	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2
0x4006689	            0xa870	                           test al, 0x70	      5262	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2
0x400668b	     0xf8491000000	                            je 0x4006722	      5262	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2
0x4006691	            0xa840	                           test al, 0x40	      5263	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2	IF_3	CALL_6
0x4006693	            0x745e	                            je 0x40066f3	      5263	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2	IF_3	CALL_6
0x4006695	            0x84c0	                             test al, al	      5264	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2	IF_3	IF_4	CALL_7
0x4006697	            0x7936	                           jns 0x40066cf	      5264	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2	IF_3	IF_4	CALL_7
0x4006699	        0xc6470800	                   mov byte [rdi + 8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x400669d	    0xc74704000000	                  mov dword [rdi + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x40066a4	    0xc70701000000	                      mov dword [rdi], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x40066aa	    0x66c7470a0000	                 mov word [rdi + 0xa], 0	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x40066b0	    0x48c704240000	                      mov qword [rsp], 0	      5248	decNumber.c	FUNCTION_68	FUNCTION_67
0x40066b8	    0x48c744241000	               mov qword [rsp + 0x10], 0	      5244	decNumber.c	FUNCTION_68	FUNCTION_67
0x40066c1	    0x48c744240800	                  mov qword [rsp + 8], 0	      5236	decNumber.c	FUNCTION_68	FUNCTION_67
0x40066ca	      0xe947060000	                           jmp 0x4006d16	      5236	decNumber.c	FUNCTION_68	FUNCTION_67
0x40066cf	      0xe800000000	                          call 0x40066d4	      5266	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2	IF_3	CALL_9
0x40066d4	    0x48c704240000	                      mov qword [rsp], 0	      5248	decNumber.c	FUNCTION_68	FUNCTION_67
0x40066dc	    0x48c744241000	               mov qword [rsp + 0x10], 0	      5244	decNumber.c	FUNCTION_68	FUNCTION_67
0x40066e5	    0x48c744240800	                  mov qword [rsp + 8], 0	      5236	decNumber.c	FUNCTION_68	FUNCTION_67
0x40066ee	      0xe923060000	                           jmp 0x4006d16	      5236	decNumber.c	FUNCTION_68	FUNCTION_67
0x40066f3	          0x4989c8	                             mov r8, rcx	      5268	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2	CALL_10
0x40066f6	          0x4889d1	                            mov rcx, rdx	      5268	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2	CALL_10
0x40066f9	      0xba00000000	                              mov edx, 0	      5268	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2	CALL_10
0x40066fe	      0xe8e9c6ffff	                        call sym.decNaNs	      5268	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2	CALL_10
0x4006703	    0x48c704240000	                      mov qword [rsp], 0	      5248	decNumber.c	FUNCTION_68	FUNCTION_67
0x400670b	    0x48c744241000	               mov qword [rsp + 0x10], 0	      5244	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006714	    0x48c744240800	                  mov qword [rsp + 8], 0	      5236	decNumber.c	FUNCTION_68	FUNCTION_67
0x400671d	      0xe9f4050000	                           jmp 0x4006d16	      5236	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006722	      0x66837e0a00	                 cmp word [rsi + 0xa], 0	      5271	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_5	CALL_11
0x4006727	            0x753b	                           jne 0x4006764	      5271	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_5	CALL_11
0x4006729	          0x833e01	                      cmp dword [rsi], 1	      5271	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_5	CALL_11
0x400672c	            0x7536	                           jne 0x4006764	      5271	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_5	CALL_11
0x400672e	        0xc6470800	                   mov byte [rdi + 8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x4006732	    0xc74704000000	                  mov dword [rdi + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4006739	    0xc70701000000	                      mov dword [rdi], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x400673f	    0x66c7470a0100	                 mov word [rdi + 0xa], 1	      5273	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_5
0x4006745	    0x48c704240000	                      mov qword [rsp], 0	      5248	decNumber.c	FUNCTION_68	FUNCTION_67
0x400674d	    0x48c744241000	               mov qword [rsp + 0x10], 0	      5244	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006756	    0x48c744240800	                  mov qword [rsp + 8], 0	      5236	decNumber.c	FUNCTION_68	FUNCTION_67
0x400675f	      0xe9b2050000	                           jmp 0x4006d16	      5274	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_5
0x4006764	    0xc68424b80000	                mov byte [rsp + 0xb8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x400676c	    0xc78424b00000	               mov dword [rsp + 0xb0], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4006777	    0x66c78424ba00	                mov word [rsp + 0xba], 4	      5291	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x4006781	          0x418b17	                    mov edx, dword [r15]	      5292	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x4006784	            0x84c0	                             test al, al	      5293	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_14
0x4006786	            0x780b	                            js 0x4006793	      5293	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_14
0x4006788	            0xf7da	                                 neg edx	      5292	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x400678a	    0x899424b40000	             mov dword [rsp + 0xb4], edx	      5292	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x4006791	            0xeb09	                           jmp 0x400679c	      5292	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x4006793	            0xf7d2	                                 not edx	      5293	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_14
0x4006795	    0x899424b40000	             mov dword [rsp + 0xb4], edx	      5293	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_14
0x400679c	      0xba01000000	                              mov edx, 1	      5294	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_15
0x40067a1	          0x4889de	                            mov rsi, rbx	      5294	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_15
0x40067a4	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	      5294	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_15
0x40067ac	      0xe8d1acffff	                     call sym.decCompare	      5294	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_15
0x40067b1	      0x3d00000080	                     cmp eax, 0x80000000	      5295	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_7
0x40067b6	            0x7524	                           jne 0x40067dc	      5295	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_7
0x40067b8	      0x41830c2410	                    or dword [r12], 0x10	      5296	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_7
0x40067bd	    0x48c704240000	                      mov qword [rsp], 0	      5248	decNumber.c	FUNCTION_68	FUNCTION_67
0x40067c5	    0x48c744241000	               mov qword [rsp + 0x10], 0	      5244	decNumber.c	FUNCTION_68	FUNCTION_67
0x40067ce	    0x48c744240800	                  mov qword [rsp + 8], 0	      5236	decNumber.c	FUNCTION_68	FUNCTION_67
0x40067d7	      0xe93a050000	                           jmp 0x4006d16	      5297	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_7
0x40067dc	            0x85c0	                           test eax, eax	      5298	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8
0x40067de	            0x7863	                            js 0x4006843	      5298	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8
0x40067e0	          0x418b1f	                    mov ebx, dword [r15]	      5299	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8
0x40067e3	          0x83eb01	                              sub ebx, 1	      5299	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8
0x40067e6	      0x41c6450800	                   mov byte [r13 + 8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x40067eb	    0x41c745040000	                  mov dword [r13 + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x40067f3	    0x41c745000100	                      mov dword [r13], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x40067fb	    0x6641c7450a01	                 mov word [r13 + 0xa], 1	      5301	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8
0x4006802	        0x498d7d0a	                    lea rdi, [r13 + 0xa]	      5302	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8	CALL_17
0x4006806	            0x89da	                            mov edx, ebx	      5302	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8	CALL_17
0x4006808	      0xbe01000000	                              mov esi, 1	      5302	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8	CALL_17
0x400680d	      0xe8509bffff	                 call sym.decShiftToMost	      5302	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8	CALL_17
0x4006812	        0x41894500	                    mov dword [r13], eax	      5302	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8	CALL_17
0x4006816	            0xf7db	                                 neg ebx	      5303	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8
0x4006818	        0x41895d04	                mov dword [r13 + 4], ebx	      5303	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8
0x400681c	    0x41810c242008	                   or dword [r12], 0x820	      5304	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8
0x4006824	    0x48c704240000	                      mov qword [rsp], 0	      5248	decNumber.c	FUNCTION_68	FUNCTION_67
0x400682c	    0x48c744241000	               mov qword [rsp + 0x10], 0	      5244	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006835	    0x48c744240800	                  mov qword [rsp + 8], 0	      5236	decNumber.c	FUNCTION_68	FUNCTION_67
0x400683e	      0xe9d3040000	                           jmp 0x4006d16	      5305	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8
0x4006843	      0xbe40000000	                           mov esi, 0x40	      5309	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_18
0x4006848	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      5309	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_18
0x400684d	      0xe800000000	                          call 0x4006852	      5309	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_18
0x4006852	        0x418b4704	                mov eax, dword [r15 + 4]	      5311	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x4006856	        0x89442444	             mov dword [rsp + 0x44], eax	      5311	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x400685a	        0x418b4708	                mov eax, dword [r15 + 8]	      5312	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x400685e	        0x89442448	             mov dword [rsp + 0x48], eax	      5312	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x4006862	      0xc644245800	                mov byte [rsp + 0x58], 0	      5313	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x4006867	          0x8b7b04	                mov edi, dword [rbx + 4]	      5317	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x400686a	            0x8b03	                    mov eax, dword [rbx]	      5317	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x400686c	          0x8d3407	                    lea esi, [rdi + rax]	      5317	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x400686f	          0x83fe08	                              cmp esi, 8	      5323	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_9
0x4006872	            0x7e42	                           jle 0x40068b6	      5323	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_9
0x4006874	    0xc68424680100	               mov byte [rsp + 0x168], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x400687c	    0xc78424640100	              mov dword [rsp + 0x164], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4006887	    0xc78424600100	              mov dword [rsp + 0x160], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4006892	    0x66c784246a01	               mov word [rsp + 0x16a], 2	      5328	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_9
0x400689c	        0x807b0800	                   cmp byte [rbx + 8], 0	      5329	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_9	CALL_20
0x40068a0	     0xf89a5040000	                           jns 0x4006d4b	      5329	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_9	CALL_20
0x40068a6	    0xc78424640100	    mov dword [rsp + 0x164], 0xfffffffe 	      5329	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_9	CALL_20
0x40068b1	      0xe995040000	                           jmp 0x4006d4b	      5329	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_9	CALL_20
0x40068b6	          0x83f808	                              cmp eax, 8	      5345	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_21
0x40068b9	           0xf9fc1	                                 setg cl	      5345	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_21
0x40068bc	           0xfb6c9	                           movzx ecx, cl	      5345	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_21
0x40068bf	      0xba08000000	                              mov edx, 8	      5345	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_21
0x40068c4	            0x29f2	                            sub edx, esi	      5345	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_21
0x40068c6	            0x39d1	                            cmp ecx, edx	      5345	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_21
0x40068c8	           0xf4ed1	                         cmovle edx, ecx	      5345	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_21
0x40068cb	            0x89c5	                            mov ebp, eax	      5346	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x40068cd	            0xf7dd	                                 neg ebp	      5346	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x40068cf	            0x29d5	                            sub ebp, edx	      5346	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x40068d1	             0x1d6	                            add esi, edx	      5348	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_11
0x40068d3	        0x89742418	             mov dword [rsp + 0x18], esi	      5348	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_11
0x40068d7	            0x790a	                           jns 0x40068e3	      5348	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_11
0x40068d9	             0x1f5	                            add ebp, esi	      5349	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_11
0x40068db	    0xc74424180000	               mov dword [rsp + 0x18], 0	      5350	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_11
0x40068e3	            0x39fd	                            cmp ebp, edi	      5353	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12
0x40068e5	     0xf848c000000	                            je 0x4006977	      5353	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12
0x40068eb	          0x83f831	                           cmp eax, 0x31	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x40068ee	            0x7f0f	                            jg 0x40068ff	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x40068f0	            0x4898	                                    cdqe	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x40068f2	     0xfb680000000	                   movzx eax, byte [rax]	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x40068f9	        0x8d7c000a	              lea edi, [rax + rax + 0xa]	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x40068fd	            0xeb17	                           jmp 0x4006916	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x40068ff	          0x8d4802	                      lea ecx, [rax + 2]	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x4006902	      0xba56555555	                     mov edx, 0x55555556	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x4006907	            0x89c8	                            mov eax, ecx	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x4006909	            0xf7ea	                                imul edx	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x400690b	            0x89c8	                            mov eax, ecx	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x400690d	          0xc1f81f	                           sar eax, 0x1f	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x4006910	            0x29c2	                            sub edx, eax	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x4006912	        0x8d7c120a	              lea edi, [rdx + rdx + 0xa]	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x4006916	          0x83ff3c	                           cmp edi, 0x3c	      5356	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	IF_13
0x4006919	            0x7631	                           jbe 0x400694c	      5356	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	IF_13
0x400691b	            0x89ff	                            mov edi, edi	      5357	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	IF_13
0x400691d	      0xe800000000	                          call 0x4006922	      5357	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	IF_13
0x4006922	      0x4889442408	                mov qword [rsp + 8], rax	      5357	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	IF_13
0x4006927	      0x4889442420	             mov qword [rsp + 0x20], rax	      5361	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	IF_13
0x400692c	          0x4885c0	                           test rax, rax	      5358	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	IF_13	IF_14
0x400692f	            0x7531	                           jne 0x4006962	      5358	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	IF_13	IF_14
0x4006931	      0x41830c2410	                    or dword [r12], 0x10	      5359	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	IF_13	IF_14
0x4006936	    0x48c704240000	                      mov qword [rsp], 0	      5248	decNumber.c	FUNCTION_68	FUNCTION_67
0x400693e	    0x48c744241000	               mov qword [rsp + 0x10], 0	      5244	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006947	      0xe9ca030000	                           jmp 0x4006d16	      5360	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	IF_13	IF_14
0x400694c	    0x488d8424d000	                   lea rax, [rsp + 0xd0]	      5354	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12
0x4006954	      0x4889442420	             mov qword [rsp + 0x20], rax	      5354	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12
0x4006959	    0x48c744240800	                  mov qword [rsp + 8], 0	      5236	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006962	          0x4889de	                            mov rsi, rbx	      5363	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_23
0x4006965	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	      5363	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_23
0x400696a	          0x4889df	                            mov rdi, rbx	      5363	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_23
0x400696d	      0xe800000000	                          call 0x4006972	      5363	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_23
0x4006972	          0x896b04	                mov dword [rbx + 4], ebp	      5364	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12
0x4006975	            0xeb0e	                           jmp 0x4006985	      5364	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12
0x4006977	      0x48895c2420	             mov qword [rsp + 0x20], rbx	      5228	decNumber.c	FUNCTION_68	FUNCTION_67
0x400697c	    0x48c744240800	                  mov qword [rsp + 8], 0	      5236	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006985	          0x418b1f	                    mov ebx, dword [r15]	      5379	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_24
0x4006988	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      5379	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_24
0x400698d	            0x3918	                    cmp dword [rax], ebx	      5379	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_24
0x400698f	           0xf4d18	                 cmovge ebx, dword [rax]	      5379	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_24
0x4006992	         0x35c2418	             add ebx, dword [rsp + 0x18]	      5379	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_24
0x4006996	        0x448d7302	                     lea r14d, [rbx + 2]	      5379	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_24
0x400699a	        0x438d0436	                    lea eax, [r14 + r14]	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x400699e	        0x89442428	             mov dword [rsp + 0x28], eax	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x40069a2	          0x83f831	                           cmp eax, 0x31	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x40069a5	            0x7f0f	                            jg 0x40069b6	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x40069a7	            0x4898	                                    cdqe	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x40069a9	     0xfb680000000	                   movzx eax, byte [rax]	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x40069b0	        0x8d7c000a	              lea edi, [rax + rax + 0xa]	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x40069b4	            0xeb19	                           jmp 0x40069cf	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x40069b6	        0x8b442428	            mov eax, dword [rsp + 0x28] 	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x40069ba	          0x8d4802	                      lea ecx, [rax + 2]	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x40069bd	      0xba56555555	                     mov edx, 0x55555556	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x40069c2	            0x89c8	                            mov eax, ecx	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x40069c4	            0xf7ea	                                imul edx	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x40069c6	          0xc1f91f	                           sar ecx, 0x1f	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x40069c9	            0x29ca	                            sub edx, ecx	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x40069cb	        0x8d7c120a	              lea edi, [rdx + rdx + 0xa]	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x40069cf	    0x488dac246001	                  lea rbp, [rsp + 0x160]	      5249	decNumber.c	FUNCTION_68	FUNCTION_67
0x40069d7	    0x48c704240000	                      mov qword [rsp], 0	      5248	decNumber.c	FUNCTION_68	FUNCTION_67
0x40069df	          0x83ff78	                           cmp edi, 0x78	      5388	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_15
0x40069e2	            0x7622	                           jbe 0x4006a06	      5388	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_15
0x40069e4	            0x89ff	                            mov edi, edi	      5389	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_15
0x40069e6	      0xe800000000	                          call 0x40069eb	      5389	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_15
0x40069eb	        0x48890424	                    mov qword [rsp], rax	      5389	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_15
0x40069ef	          0x4889c5	                            mov rbp, rax	      5393	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_15
0x40069f2	          0x4885c0	                           test rax, rax	      5390	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_15	IF_16
0x40069f5	            0x750f	                           jne 0x4006a06	      5390	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_15	IF_16
0x40069f7	      0x41830c2410	                    or dword [r12], 0x10	      5391	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_15	IF_16
0x40069fc	      0x4889442410	             mov qword [rsp + 0x10], rax	      5244	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006a01	      0xe910030000	                           jmp 0x4006d16	      5392	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_15	IF_16
0x4006a06	          0x8d4304	                      lea eax, [rbx + 4]	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x4006a09	          0x83f831	                           cmp eax, 0x31	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x4006a0c	            0x7f0f	                            jg 0x4006a1d	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x4006a0e	            0x4898	                                    cdqe	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x4006a10	     0xfb680000000	                   movzx eax, byte [rax]	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x4006a17	        0x8d7c000a	              lea edi, [rax + rax + 0xa]	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x4006a1b	            0xeb15	                           jmp 0x4006a32	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x4006a1d	          0x83c306	                              add ebx, 6	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x4006a20	      0xba56555555	                     mov edx, 0x55555556	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x4006a25	            0x89d8	                            mov eax, ebx	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x4006a27	            0xf7ea	                                imul edx	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x4006a29	          0xc1fb1f	                           sar ebx, 0x1f	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x4006a2c	            0x29da	                            sub edx, ebx	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x4006a2e	        0x8d7c120a	              lea edi, [rdx + rdx + 0xa]	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x4006a32	          0x83ff48	                           cmp edi, 0x48	      5400	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_17
0x4006a35	            0x761e	                           jbe 0x4006a55	      5400	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_17
0x4006a37	            0x89ff	                            mov edi, edi	      5401	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_17
0x4006a39	      0xe800000000	                          call 0x4006a3e	      5401	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_17
0x4006a3e	      0x4889442410	             mov qword [rsp + 0x10], rax	      5401	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_17
0x4006a43	          0x4889c3	                            mov rbx, rax	      5405	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_17
0x4006a46	          0x4885c0	                           test rax, rax	      5402	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_17	IF_18
0x4006a49	            0x751b	                           jne 0x4006a66	      5402	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_17	IF_18
0x4006a4b	      0x41830c2410	                    or dword [r12], 0x10	      5403	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_17	IF_18
0x4006a50	      0xe9c1020000	                           jmp 0x4006d16	      5404	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_17	IF_18
0x4006a55	    0x488d9c241001	                  lea rbx, [rsp + 0x110]	      5245	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006a5d	    0x48c744241000	               mov qword [rsp + 0x10], 0	      5244	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006a66	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      5408	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_27
0x4006a6b	          0x4889df	                            mov rdi, rbx	      5408	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_27
0x4006a6e	      0xe800000000	                          call 0x4006a73	      5408	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_27
0x4006a73	        0xc6450800	                   mov byte [rbp + 8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x4006a77	    0xc74504000000	                  mov dword [rbp + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4006a7e	    0xc74500010000	                      mov dword [rbp], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4006a85	    0x66c7450a0100	                 mov word [rbp + 0xa], 1	      5409	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_28
0x4006a8b	    0xc68424b80000	                mov byte [rsp + 0xb8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x4006a93	    0xc78424b40000	               mov dword [rsp + 0xb4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4006a9e	    0xc78424b00000	               mov dword [rsp + 0xb0], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4006aa9	    0x66c78424ba00	                mov word [rsp + 0xba], 2	      5410	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_29
0x4006ab3	    0xc68424a80000	                mov byte [rsp + 0xa8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x4006abb	    0xc78424a40000	               mov dword [rsp + 0xa4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4006ac6	    0xc78424a00000	               mov dword [rsp + 0xa0], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4006ad1	    0x66c78424aa00	                mov word [rsp + 0xaa], 1	      5411	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_30
0x4006adb	      0xbe40000000	                           mov esi, 0x40	      5414	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_31
0x4006ae0	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      5414	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_31
0x4006ae5	      0xe800000000	                          call 0x4006aea	      5414	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_31
0x4006aea	      0x488b442460	            mov rax, qword [rsp + 0x60] 	      5415	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x4006aef	    0x488984248000	             mov qword [rsp + 0x80], rax	      5415	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x4006af7	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      5415	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x4006afc	    0x488984248800	             mov qword [rsp + 0x88], rax	      5415	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x4006b04	      0x488b442470	            mov rax, qword [rsp + 0x70] 	      5415	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x4006b09	    0x488984249000	             mov qword [rsp + 0x90], rax	      5415	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x4006b11	        0x8b442478	            mov eax, dword [rsp + 0x78] 	      5415	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x4006b15	    0x898424980000	             mov dword [rsp + 0x98], eax	      5415	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x4006b1c	        0x8b442428	            mov eax, dword [rsp + 0x28] 	      5417	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x4006b20	        0x89442440	             mov dword [rsp + 0x40], eax	      5417	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x4006b24	      0x4489742460	            mov dword [rsp + 0x60], r14d	      5419	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x4006b29	    0xc74424680136	     mov dword [rsp + 0x68], 0xc4653601 	      5420	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x4006b31	      0x4c896c2428	             mov qword [rsp + 0x28], r13	      5432	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_34
0x4006b36	      0x4c8b6c2420	            mov r13, qword [rsp + 0x20] 	      5432	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_34
0x4006b3b	          0x4d89e1	                             mov r9, r12	      5430	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_32
0x4006b3e	    0x41b800000000	                              mov r8d, 0	      5430	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_32
0x4006b44	      0x488d4c2440	                   lea rcx, [rsp + 0x40]	      5430	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_32
0x4006b49	          0x4889da	                            mov rdx, rbx	      5430	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_32
0x4006b4c	          0x4889ee	                            mov rsi, rbp	      5430	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_32
0x4006b4f	          0x4889ef	                            mov rdi, rbp	      5430	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_32
0x4006b52	      0xe835dbffff	                       call sym.decAddOp	      5430	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_32
0x4006b57	      0x4c8d442438	                    lea r8, [rsp + 0x38]	      5431	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_33
0x4006b5c	      0x488d4c2460	                   lea rcx, [rsp + 0x60]	      5431	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_33
0x4006b61	          0x4c89ea	                            mov rdx, r13	      5431	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_33
0x4006b64	          0x4889de	                            mov rsi, rbx	      5431	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_33
0x4006b67	          0x4889df	                            mov rdi, rbx	      5431	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_33
0x4006b6a	      0xe8dacaffff	                  call sym.decMultiplyOp	      5431	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_33
0x4006b6f	      0x4c8d4c2438	                    lea r9, [rsp + 0x38]	      5432	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_34
0x4006b74	    0x41b880000000	                           mov r8d, 0x80	      5432	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_34
0x4006b7a	      0x488d4c2460	                   lea rcx, [rsp + 0x60]	      5432	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_34
0x4006b7f	    0x488d9424b000	                   lea rdx, [rsp + 0xb0]	      5432	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_34
0x4006b87	          0x4889de	                            mov rsi, rbx	      5432	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_34
0x4006b8a	          0x4889df	                            mov rdi, rbx	      5432	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_34
0x4006b8d	      0xe848eaffff	                    call sym.decDivideOp	      5432	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_34
0x4006b92	          0x8b5500	                    mov edx, dword [rbp]	      5437	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	IF_19
0x4006b95	            0x89d1	                            mov ecx, edx	      5438	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	IF_19
0x4006b97	           0x34d04	                add ecx, dword [rbp + 4]	      5438	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	IF_19
0x4006b9a	          0x8b4304	                mov eax, dword [rbx + 4]	      5438	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	IF_19
0x4006b9d	             0x303	                    add eax, dword [rbx]	      5438	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	IF_19
0x4006b9f	      0x418d440601	                lea eax, [r14 + rax + 1]	      5438	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	IF_19
0x4006ba4	            0x39c1	                            cmp ecx, eax	      5438	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	IF_19
0x4006ba6	            0x7c05	                            jl 0x4006bad	      5438	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	IF_19
0x4006ba8	          0x4139d6	                           cmp r14d, edx	      5438	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	IF_19
0x4006bab	            0x7e30	                           jle 0x4006bdd	      5438	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	IF_19
0x4006bad	      0x4c8d4c2438	                    lea r9, [rsp + 0x38]	      5439	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_35
0x4006bb2	    0x41b800000000	                              mov r8d, 0	      5439	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_35
0x4006bb8	    0x488d8c248000	                   lea rcx, [rsp + 0x80]	      5439	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_35
0x4006bc0	    0x488d9424a000	                   lea rdx, [rsp + 0xa0]	      5439	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_35
0x4006bc8	    0x488db424b000	                   lea rsi, [rsp + 0xb0]	      5439	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_35
0x4006bd0	          0x4889f7	                            mov rdi, rsi	      5439	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_35
0x4006bd3	      0xe8b4daffff	                       call sym.decAddOp	      5439	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_35
0x4006bd8	      0xe95effffff	                           jmp 0x4006b3b	      5440	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1
0x4006bdd	      0x4c8b6c2428	            mov r13, qword [rsp + 0x28] 	      5440	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1
0x4006be2	      0x837c241800	               cmp dword [rsp + 0x18], 0	      5452	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x4006be7	     0xf8ed4000000	                           jle 0x4006cc1	      5452	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x4006bed	      0x48896c2420	             mov qword [rsp + 0x20], rbp	      5452	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x4006bf2	          0x4889dd	                            mov rbp, rbx	      5452	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x4006bf5	      0x4863442418	         movsxd rax, dword [rsp + 0x18] 	      5455	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x4006bfa	    0x8b1c85000000	                  mov ebx, dword [rax*4]	      5455	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x4006c01	        0x4183c602	                             add r14d, 2	      5456	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x4006c05	      0x4489742440	            mov dword [rsp + 0x40], r14d	      5456	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x4006c0a	        0xc6450800	                   mov byte [rbp + 8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x4006c0e	    0xc74504000000	                  mov dword [rbp + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4006c15	    0xc74500010000	                      mov dword [rbp], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4006c1c	    0x66c7450a0100	                 mov word [rbp + 0xa], 1	      5460	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	CALL_37
0x4006c22	    0x41be01000000	                             mov r14d, 1	      5461	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2
0x4006c28	      0xb800000000	                              mov eax, 0	      5453	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x4006c2d	      0x4c896c2418	             mov qword [rsp + 0x18], r13	      5472	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_40
0x4006c32	          0x4189c5	                           mov r13d, eax	      5472	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_40
0x4006c35	        0x418b0424	                    mov eax, dword [r12]	      5463	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_22
0x4006c39	          0xf6c422	                           test ah, 0x22	      5463	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_22
0x4006c3c	            0x7418	                            je 0x4006c56	      5463	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_22
0x4006c3e	          0xf6c402	                              test ah, 2	      5464	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_38
0x4006c41	            0x7564	                           jne 0x4006ca7	      5464	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_38
0x4006c43	      0x66837d0a00	                 cmp word [rbp + 0xa], 0	      5464	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_38
0x4006c48	            0x750c	                           jne 0x4006c56	      5464	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_38
0x4006c4a	        0x837d0001	                      cmp dword [rbp], 1	      5464	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_38
0x4006c4e	            0x7506	                           jne 0x4006c56	      5464	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_38
0x4006c50	        0xf6450870	               test byte [rbp + 8], 0x70	      5464	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_38
0x4006c54	            0x7458	                            je 0x4006cae	      5464	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_38
0x4006c56	             0x1db	                            add ebx, ebx	      5466	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_24
0x4006c58	            0x7926	                           jns 0x4006c80	      5466	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_24
0x4006c5a	          0x4d89e0	                             mov r8, r12	      5468	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_24	CALL_39
0x4006c5d	      0x488d4c2440	                   lea rcx, [rsp + 0x40]	      5468	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_24	CALL_39
0x4006c62	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      5468	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_24	CALL_39
0x4006c67	          0x4889ee	                            mov rsi, rbp	      5468	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_24	CALL_39
0x4006c6a	          0x4889ef	                            mov rdi, rbp	      5468	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_24	CALL_39
0x4006c6d	      0xe8d7c9ffff	                  call sym.decMultiplyOp	      5468	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_24	CALL_39
0x4006c72	        0x4183fe1f	                          cmp r14d, 0x1f	      5470	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_25
0x4006c76	            0x743d	                            je 0x4006cb5	      5470	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_25
0x4006c78	    0x41bd01000000	                             mov r13d, 1	      5467	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_24
0x4006c7e	            0xeb0b	                           jmp 0x4006c8b	      5467	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_24
0x4006c80	        0x4183fe1f	                          cmp r14d, 0x1f	      5470	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_25
0x4006c84	            0x7436	                            je 0x4006cbc	      5470	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_25
0x4006c86	          0x4585ed	                         test r13d, r13d	      5471	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_26
0x4006c89	            0x7416	                            je 0x4006ca1	      5471	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_26
0x4006c8b	          0x4d89e0	                             mov r8, r12	      5472	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_40
0x4006c8e	      0x488d4c2440	                   lea rcx, [rsp + 0x40]	      5472	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_40
0x4006c93	          0x4889ea	                            mov rdx, rbp	      5472	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_40
0x4006c96	          0x4889ee	                            mov rsi, rbp	      5472	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_40
0x4006c99	          0x4889ef	                            mov rdi, rbp	      5472	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_40
0x4006c9c	      0xe8a8c9ffff	                  call sym.decMultiplyOp	      5472	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_40
0x4006ca1	        0x4183c601	                             add r14d, 1	      5461	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2
0x4006ca5	            0xeb8e	                           jmp 0x4006c35	      5473	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2
0x4006ca7	      0x4c8b6c2418	            mov r13, qword [rsp + 0x18] 	      5473	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2
0x4006cac	            0xeb13	                           jmp 0x4006cc1	      5473	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2
0x4006cae	      0x4c8b6c2418	            mov r13, qword [rsp + 0x18] 	      5473	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2
0x4006cb3	            0xeb0c	                           jmp 0x4006cc1	      5473	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2
0x4006cb5	      0x4c8b6c2418	            mov r13, qword [rsp + 0x18] 	      5473	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2
0x4006cba	            0xeb05	                           jmp 0x4006cc1	      5473	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2
0x4006cbc	      0x4c8b6c2418	            mov r13, qword [rsp + 0x18] 	      5473	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2
0x4006cc1	    0xc744243c0100	               mov dword [rsp + 0x3c], 1	      5479	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x4006cc9	      0x66837d0a00	                 cmp word [rbp + 0xa], 0	      5480	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_41
0x4006cce	            0x7514	                           jne 0x4006ce4	      5480	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_41
0x4006cd0	        0x837d0001	                      cmp dword [rbp], 1	      5480	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_41
0x4006cd4	            0x750e	                           jne 0x4006ce4	      5480	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_41
0x4006cd6	        0xf6450870	               test byte [rbp + 8], 0x70	      5480	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_41
0x4006cda	            0x7508	                           jne 0x4006ce4	      5480	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_41
0x4006cdc	    0xc744243c0000	               mov dword [rsp + 0x3c], 0	      5480	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_41
0x4006ce4	          0x418b07	                    mov eax, dword [r15]	      5481	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x4006ce7	        0x89442440	             mov dword [rsp + 0x40], eax	      5481	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x4006ceb	          0x4d89e0	                             mov r8, r12	      5482	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_42
0x4006cee	      0x488d4c243c	                   lea rcx, [rsp + 0x3c]	      5482	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_42
0x4006cf3	      0x488d542440	                   lea rdx, [rsp + 0x40]	      5482	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_42
0x4006cf8	          0x4889ee	                            mov rsi, rbp	      5482	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_42
0x4006cfb	          0x4c89ef	                            mov rdi, r13	      5482	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_42
0x4006cfe	      0xe8de9dffff	                     call sym.decCopyFit	      5482	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_42
0x4006d03	          0x4c89e1	                            mov rcx, r12	      5483	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x4006d06	      0x488d54243c	                   lea rdx, [rsp + 0x3c]	      5483	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x4006d0b	          0x4c89fe	                            mov rsi, r15	      5483	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x4006d0e	          0x4c89ef	                            mov rdi, r13	      5483	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x4006d11	      0xe8ecadffff	                    call sym.decFinalize	      5483	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x4006d16	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      5486	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006d1b	      0xe800000000	                          call 0x4006d20	      5486	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006d20	        0x488b3c24	                    mov rdi, qword [rsp]	      5487	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006d24	      0xe800000000	                          call 0x4006d29	      5487	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006d29	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      5488	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006d2e	      0xe800000000	                          call 0x4006d33	      5488	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006d33	          0x4c89e8	                            mov rax, r13	      5491	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006d36	    0x488bb424d801	           mov rsi, qword [rsp + 0x1d8] 	      5491	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006d3e	    0x644833342528	                xor rsi, qword fs:[0x28]	      5491	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006d47	            0x7449	                            je 0x4006d92	      5491	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006d49	            0xeb42	                           jmp 0x4006d8d	      5491	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006d4b	    0x488d84246001	                  lea rax, [rsp + 0x160]	      5491	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006d53	      0x4889442420	             mov qword [rsp + 0x20], rax	      5491	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006d58	    0x48c704240000	                      mov qword [rsp], 0	      5491	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006d60	    0x488dac241001	                  lea rbp, [rsp + 0x110]	      5491	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006d68	    0x48c744241000	               mov qword [rsp + 0x10], 0	      5491	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006d71	    0x48c744240800	                  mov qword [rsp + 8], 0	      5491	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006d7a	    0x41be09000000	                             mov r14d, 9	      5491	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006d80	    0xc74424180800	               mov dword [rsp + 0x18], 8	      5491	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006d88	      0xe968feffff	                           jmp 0x4006bf5	      5491	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006d8d	      0xe800000000	                          call 0x4006d92	      5491	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006d92	    0x4881c4e80100	                          add rsp, 0x1e8	      5491	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006d99	              0x5b	                                 pop rbx	      5491	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006d9a	              0x5d	                                 pop rbp	      5491	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006d9b	            0x415c	                                 pop r12	      5491	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006d9d	            0x415d	                                 pop r13	      5491	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006d9f	            0x415e	                                 pop r14	      5491	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006da1	            0x415f	                                 pop r15	      5491	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006da3	              0xc3	                                     ret	      5491	decNumber.c	FUNCTION_68	FUNCTION_67
decNumberToIntegralExact	SWITCH,0:functions,0:ELSE,2:DO,0:FOR,0:IF,5:CALL,8:WHILE,0	61
0x40088d4	              0x55	                                push rbp	      3173	decNumber.c	FUNCTION_68	FUNCTION_47
0x40088d5	              0x53	                                push rbx	      3173	decNumber.c	FUNCTION_68	FUNCTION_47
0x40088d6	        0x4883ec58	                           sub rsp, 0x58	      3173	decNumber.c	FUNCTION_68	FUNCTION_47
0x40088da	          0x4889fb	                            mov rbx, rdi	      3173	decNumber.c	FUNCTION_68	FUNCTION_47
0x40088dd	          0x4889d5	                            mov rbp, rdx	      3173	decNumber.c	FUNCTION_68	FUNCTION_47
0x40088e0	    0x64488b042528	                mov rax, qword fs:[0x28]	      3173	decNumber.c	FUNCTION_68	FUNCTION_47
0x40088e9	      0x4889442448	             mov qword [rsp + 0x48], rax	      3173	decNumber.c	FUNCTION_68	FUNCTION_47
0x40088ee	            0x31c0	                            xor eax, eax	      3173	decNumber.c	FUNCTION_68	FUNCTION_47
0x40088f0	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      3176	decNumber.c	FUNCTION_68	FUNCTION_47
0x40088f8	         0xfb64608	               movzx eax, byte [rsi + 8]	      3183	decNumber.c	FUNCTION_68	FUNCTION_47	IF_2
0x40088fc	            0xa870	                           test al, 0x70	      3183	decNumber.c	FUNCTION_68	FUNCTION_47	IF_2
0x40088fe	            0x7422	                            je 0x4008922	      3183	decNumber.c	FUNCTION_68	FUNCTION_47	IF_2
0x4008900	            0xa840	                           test al, 0x40	      3184	decNumber.c	FUNCTION_68	FUNCTION_47	IF_2	CALL_3
0x4008902	            0x740a	                            je 0x400890e	      3184	decNumber.c	FUNCTION_68	FUNCTION_47	IF_2	CALL_3
0x4008904	      0xe800000000	                          call 0x4008909	      3184	decNumber.c	FUNCTION_68	FUNCTION_47	IF_2	CALL_3
0x4008909	      0xe983000000	                           jmp 0x4008991	      3184	decNumber.c	FUNCTION_68	FUNCTION_47	IF_2	CALL_3
0x400890e	      0x4c8d44240c	                     lea r8, [rsp + 0xc]	      3185	decNumber.c	FUNCTION_68	FUNCTION_47	IF_2	CALL_4
0x4008913	          0x4889d1	                            mov rcx, rdx	      3185	decNumber.c	FUNCTION_68	FUNCTION_47	IF_2	CALL_4
0x4008916	      0xba00000000	                              mov edx, 0	      3185	decNumber.c	FUNCTION_68	FUNCTION_47	IF_2	CALL_4
0x400891b	      0xe8cca4ffff	                        call sym.decNaNs	      3185	decNumber.c	FUNCTION_68	FUNCTION_47	IF_2	CALL_4
0x4008920	            0xeb6f	                           jmp 0x4008991	      3185	decNumber.c	FUNCTION_68	FUNCTION_47	IF_2	CALL_4
0x4008922	        0x837e0400	                  cmp dword [rsi + 4], 0	      3189	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2	CALL_5
0x4008926	            0x7807	                            js 0x400892f	      3189	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2	CALL_5
0x4008928	      0xe800000000	                          call 0x400892d	      3189	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2	CALL_5
0x400892d	            0xeb7b	                           jmp 0x40089aa	      3189	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2	CALL_5
0x400892f	          0x488b02	                    mov rax, qword [rdx]	      3191	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2
0x4008932	      0x4889442410	             mov qword [rsp + 0x10], rax	      3191	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2
0x4008937	        0x488b4208	                mov rax, qword [rdx + 8]	      3191	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2
0x400893b	      0x4889442418	             mov qword [rsp + 0x18], rax	      3191	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2
0x4008940	        0x488b4210	            mov rax, qword [rdx + 0x10] 	      3191	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2
0x4008944	      0x4889442420	             mov qword [rsp + 0x20], rax	      3191	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2
0x4008949	          0x8b4218	            mov eax, dword [rdx + 0x18] 	      3191	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2
0x400894c	        0x89442428	             mov dword [rsp + 0x28], eax	      3191	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2
0x4008950	            0x8b06	                    mov eax, dword [rsi]	      3192	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2
0x4008952	        0x89442410	             mov dword [rsp + 0x10], eax	      3192	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2
0x4008956	    0xc74424200000	               mov dword [rsp + 0x20], 0	      3193	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2
0x400895e	      0xc644243800	                mov byte [rsp + 0x38], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x4008963	    0xc74424340000	               mov dword [rsp + 0x34], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x400896b	    0xc74424300100	               mov dword [rsp + 0x30], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4008973	    0x66c744243a00	                mov word [rsp + 0x3a], 0	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400897a	      0x488d4c2410	                   lea rcx, [rsp + 0x10]	      3195	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2	CALL_7
0x400897f	      0x488d542430	                   lea rdx, [rsp + 0x30]	      3195	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2	CALL_7
0x4008984	      0xe800000000	                          call 0x4008989	      3195	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2	CALL_7
0x4008989	        0x8b442424	            mov eax, dword [rsp + 0x24] 	      3196	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2
0x400898d	         0x944240c	               or dword [rsp + 0xc], eax	      3196	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2
0x4008991	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      3198	decNumber.c	FUNCTION_68	FUNCTION_47	CALL_8
0x4008995	          0x4889d8	                            mov rax, rbx	      3199	decNumber.c	FUNCTION_68	FUNCTION_47
0x4008998	            0x85f6	                           test esi, esi	      3198	decNumber.c	FUNCTION_68	FUNCTION_47	CALL_8
0x400899a	            0x740e	                            je 0x40089aa	      3198	decNumber.c	FUNCTION_68	FUNCTION_47	CALL_8
0x400899c	          0x4889ea	                            mov rdx, rbp	      3198	decNumber.c	FUNCTION_68	FUNCTION_47	CALL_8
0x400899f	          0x4889df	                            mov rdi, rbx	      3198	decNumber.c	FUNCTION_68	FUNCTION_47	CALL_8
0x40089a2	      0xe8758cffff	                      call sym.decStatus	      3198	decNumber.c	FUNCTION_68	FUNCTION_47	CALL_8
0x40089a7	          0x4889d8	                            mov rax, rbx	      3199	decNumber.c	FUNCTION_68	FUNCTION_47
0x40089aa	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	      3200	decNumber.c	FUNCTION_68	FUNCTION_47
0x40089af	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3200	decNumber.c	FUNCTION_68	FUNCTION_47
0x40089b8	            0x7405	                            je 0x40089bf	      3200	decNumber.c	FUNCTION_68	FUNCTION_47
0x40089ba	      0xe800000000	                          call 0x40089bf	      3200	decNumber.c	FUNCTION_68	FUNCTION_47
0x40089bf	        0x4883c458	                           add rsp, 0x58	      3200	decNumber.c	FUNCTION_68	FUNCTION_47
0x40089c3	              0x5b	                                 pop rbx	      3200	decNumber.c	FUNCTION_68	FUNCTION_47
0x40089c4	              0x5d	                                 pop rbp	      3200	decNumber.c	FUNCTION_68	FUNCTION_47
0x40089c5	              0xc3	                                     ret	      3200	decNumber.c	FUNCTION_68	FUNCTION_47
decNumberInvert	SWITCH,0:functions,0:ELSE,1:DO,0:FOR,2:IF,6:CALL,9:WHILE,0	109
0x40026c9	            0x4154	                                push r12	      1195	decNumber.c	FUNCTION_68	FUNCTION_19
0x40026cb	              0x55	                                push rbp	      1195	decNumber.c	FUNCTION_68	FUNCTION_19
0x40026cc	              0x53	                                push rbx	      1195	decNumber.c	FUNCTION_68	FUNCTION_19
0x40026cd	          0x4889fb	                            mov rbx, rdi	      1195	decNumber.c	FUNCTION_68	FUNCTION_19
0x40026d0	          0x4989d3	                            mov r11, rdx	      1195	decNumber.c	FUNCTION_68	FUNCTION_19
0x40026d3	        0x837e0400	                  cmp dword [rsi + 4], 0	      1203	decNumber.c	FUNCTION_68	FUNCTION_19	IF_2	CALL_3
0x40026d7	            0x750c	                           jne 0x40026e5	      1203	decNumber.c	FUNCTION_68	FUNCTION_19	IF_2	CALL_3
0x40026d9	         0xfb64608	               movzx eax, byte [rsi + 8]	      1203	decNumber.c	FUNCTION_68	FUNCTION_19	IF_2	CALL_3
0x40026dd	            0xa870	                           test al, 0x70	      1203	decNumber.c	FUNCTION_68	FUNCTION_19	IF_2	CALL_3
0x40026df	            0x7504	                           jne 0x40026e5	      1203	decNumber.c	FUNCTION_68	FUNCTION_19	IF_2	CALL_3
0x40026e1	            0x84c0	                             test al, al	      1203	decNumber.c	FUNCTION_68	FUNCTION_19	IF_2	CALL_3
0x40026e3	            0x7915	                           jns 0x40026fa	      1203	decNumber.c	FUNCTION_68	FUNCTION_19	IF_2	CALL_3
0x40026e5	          0x4c89da	                            mov rdx, r11	      1204	decNumber.c	FUNCTION_68	FUNCTION_19	IF_2	CALL_4
0x40026e8	      0xbe80000000	                           mov esi, 0x80	      1204	decNumber.c	FUNCTION_68	FUNCTION_19	IF_2	CALL_4
0x40026ed	          0x4889df	                            mov rdi, rbx	      1204	decNumber.c	FUNCTION_68	FUNCTION_19	IF_2	CALL_4
0x40026f0	      0xe827efffff	                      call sym.decStatus	      1204	decNumber.c	FUNCTION_68	FUNCTION_19	IF_2	CALL_4
0x40026f5	      0xe929010000	                           jmp 0x4002823	      1205	decNumber.c	FUNCTION_68	FUNCTION_19	IF_2
0x40026fa	        0x4c8d4e0a	                     lea r9, [rsi + 0xa]	      1208	decNumber.c	FUNCTION_68	FUNCTION_19
0x40026fe	        0x488d7f0a	                    lea rdi, [rdi + 0xa]	      1209	decNumber.c	FUNCTION_68	FUNCTION_19
0x4002702	            0x8b06	                    mov eax, dword [rsi]	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x4002704	          0x83f831	                           cmp eax, 0x31	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x4002707	            0x7f10	                            jg 0x4002719	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x4002709	            0x4898	                                    cdqe	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x400270b	     0xfb680000000	                   movzx eax, byte [rax]	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x4002712	      0x4c8d5400fe	                lea r10, [rax + rax - 2]	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x4002717	            0xeb1b	                           jmp 0x4002734	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x4002719	          0x8d4802	                      lea ecx, [rax + 2]	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x400271c	      0xba56555555	                     mov edx, 0x55555556	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x4002721	            0x89c8	                            mov eax, ecx	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x4002723	            0xf7ea	                                imul edx	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x4002725	            0x89c8	                            mov eax, ecx	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x4002727	          0xc1f81f	                           sar eax, 0x1f	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x400272a	            0x29c2	                            sub edx, eax	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x400272c	          0x4863d2	                         movsxd rdx, edx	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x400272f	      0x4c8d5412fe	                lea r10, [rdx + rdx - 2]	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x4002734	          0x4d01ca	                             add r10, r9	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x4002737	          0x458b23	                   mov r12d, dword [r11]	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x400273a	        0x4183fc31	                          cmp r12d, 0x31	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x400273e	            0x7f1b	                            jg 0x400275b	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x4002740	          0x4963c4	                        movsxd rax, r12d	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x4002743	     0xfb680000000	                   movzx eax, byte [rax]	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x400274a	           0xfb6d0	                           movzx edx, al	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x400274d	      0x488d6c57fe	              lea rbp, [rdi + rdx*2 - 2]	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x4002752	           0xfb6c0	                           movzx eax, al	      1212	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_7
0x4002755	        0x8d4440fd	              lea eax, [rax + rax*2 - 3]	      1212	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_7
0x4002759	            0xeb1f	                           jmp 0x400277a	      1212	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_7
0x400275b	      0x418d4c2402	                      lea ecx, [r12 + 2]	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x4002760	      0xba56555555	                     mov edx, 0x55555556	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x4002765	            0x89c8	                            mov eax, ecx	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x4002767	            0xf7ea	                                imul edx	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x4002769	          0xc1f91f	                           sar ecx, 0x1f	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x400276c	            0x29ca	                            sub edx, ecx	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x400276e	          0x4863c2	                         movsxd rax, edx	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x4002771	      0x488d6c47fe	              lea rbp, [rdi + rax*2 - 2]	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x4002776	        0x8d4452fd	              lea eax, [rdx + rdx*2 - 3]	      1212	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_7
0x400277a	          0x4129c4	                           sub r12d, eax	      1212	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_7
0x400277d	          0x4839ef	                            cmp rdi, rbp	      1213	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1
0x4002780	     0xf8782000000	                            ja 0x4002808	      1213	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1
0x4002786	          0x4889fe	                            mov rsi, rdi	      1213	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1
0x4002789	        0x4183ec01	                             sub r12d, 1	      1229	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_6
0x400278d	      0xba00000000	                              mov edx, 0	      1216	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	IF_3
0x4002792	          0x4d39ca	                             cmp r10, r9	      1216	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	IF_3
0x4002795	            0x7204	                            jb 0x400279b	      1216	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	IF_3
0x4002797	        0x410fb711	                    movzx edx, word [r9]	      1217	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1
0x400279b	      0x66c7060000	                       mov word [rsi], 0	      1218	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1
0x40027a0	    0x41b800000000	                              mov r8d, 0	      1218	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1
0x40027a6	          0xf6c201	                              test dl, 1	      1222	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_4
0x40027a9	            0x750b	                           jne 0x40027b6	      1222	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_4
0x40027ab	    0x428b04850000	                   mov eax, dword [r8*4]	      1222	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_4
0x40027b3	          0x660106	                      add word [rsi], ax	      1222	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_4
0x40027b6	           0xfb7c2	                           movzx eax, dx	      1223	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2
0x40027b9	    0x69c0cdcc0000	                   imul eax, eax, 0xcccd	      1223	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2
0x40027bf	          0xc1e813	                           shr eax, 0x13	      1223	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2
0x40027c2	          0x8d0c80	                  lea ecx, [rax + rax*4]	      1223	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2
0x40027c5	             0x1c9	                            add ecx, ecx	      1223	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2
0x40027c7	            0x29ca	                            sub edx, ecx	      1223	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2
0x40027c9	           0xfb7ca	                           movzx ecx, dx	      1223	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2
0x40027cc	            0x89c2	                            mov edx, eax	      1224	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2
0x40027ce	          0x83f901	                              cmp ecx, 1	      1225	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_5
0x40027d1	            0x7e12	                           jle 0x40027e5	      1225	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_5
0x40027d3	          0x4c89da	                            mov rdx, r11	      1226	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_5	CALL_8
0x40027d6	      0xbe80000000	                           mov esi, 0x80	      1226	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_5	CALL_8
0x40027db	          0x4889df	                            mov rdi, rbx	      1226	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_5	CALL_8
0x40027de	      0xe839eeffff	                      call sym.decStatus	      1226	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_5	CALL_8
0x40027e3	            0xeb3e	                           jmp 0x4002823	      1227	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_5
0x40027e5	          0x4839f5	                            cmp rbp, rsi	      1229	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_6
0x40027e8	            0x7505	                           jne 0x40027ef	      1229	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_6
0x40027ea	          0x4539c4	                           cmp r12d, r8d	      1229	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_6
0x40027ed	            0x740a	                            je 0x40027f9	      1229	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_6
0x40027ef	        0x4983c001	                               add r8, 1	      1229	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_6
0x40027f3	        0x4983f803	                               cmp r8, 3	      1221	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2
0x40027f7	            0x75ad	                           jne 0x40027a6	      1221	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2
0x40027f9	        0x4983c102	                               add r9, 2	      1213	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1
0x40027fd	        0x4883c602	                              add rsi, 2	      1213	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1
0x4002801	          0x4839ee	                            cmp rsi, rbp	      1213	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1
0x4002804	            0x7687	                           jbe 0x400278d	      1213	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1
0x4002806	            0xeb03	                           jmp 0x400280b	      1213	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1
0x4002808	          0x4889fe	                            mov rsi, rdi	      1209	decNumber.c	FUNCTION_68	FUNCTION_19
0x400280b	          0x4829fe	                            sub rsi, rdi	      1233	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_9
0x400280e	          0x48d1fe	                              sar rsi, 1	      1233	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_9
0x4002811	      0xe8d1e4ffff	                   call sym.decGetDigits	      1233	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_9
0x4002816	            0x8903	                    mov dword [rbx], eax	      1233	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_9
0x4002818	    0xc74304000000	                  mov dword [rbx + 4], 0	      1234	decNumber.c	FUNCTION_68	FUNCTION_19
0x400281f	        0xc6430800	                   mov byte [rbx + 8], 0	      1235	decNumber.c	FUNCTION_68	FUNCTION_19
0x4002823	          0x4889d8	                            mov rax, rbx	      1237	decNumber.c	FUNCTION_68	FUNCTION_19
0x4002826	              0x5b	                                 pop rbx	      1237	decNumber.c	FUNCTION_68	FUNCTION_19
0x4002827	              0x5d	                                 pop rbp	      1237	decNumber.c	FUNCTION_68	FUNCTION_19
0x4002828	            0x415c	                                 pop r12	      1237	decNumber.c	FUNCTION_68	FUNCTION_19
0x400282a	              0xc3	                                     ret	      1237	decNumber.c	FUNCTION_68	FUNCTION_19
decNumberNextPlus	SWITCH,0:functions,0:ELSE,0:DO,0:FOR,0:IF,3:CALL,5:WHILE,0	52
0x40052dc	              0x55	                                push rbp	      1698	decNumber.c	FUNCTION_68	FUNCTION_29
0x40052dd	              0x53	                                push rbx	      1698	decNumber.c	FUNCTION_68	FUNCTION_29
0x40052de	        0x4883ec58	                           sub rsp, 0x58	      1698	decNumber.c	FUNCTION_68	FUNCTION_29
0x40052e2	          0x4889fd	                            mov rbp, rdi	      1698	decNumber.c	FUNCTION_68	FUNCTION_29
0x40052e5	          0x4889d3	                            mov rbx, rdx	      1698	decNumber.c	FUNCTION_68	FUNCTION_29
0x40052e8	    0x64488b042528	                mov rax, qword fs:[0x28]	      1698	decNumber.c	FUNCTION_68	FUNCTION_29
0x40052f1	      0x4889442448	             mov qword [rsp + 0x48], rax	      1698	decNumber.c	FUNCTION_68	FUNCTION_29
0x40052f6	            0x31c0	                            xor eax, eax	      1698	decNumber.c	FUNCTION_68	FUNCTION_29
0x40052f8	          0x488b02	                    mov rax, qword [rdx]	      1700	decNumber.c	FUNCTION_68	FUNCTION_29
0x40052fb	      0x4889442410	             mov qword [rsp + 0x10], rax	      1700	decNumber.c	FUNCTION_68	FUNCTION_29
0x4005300	        0x488b4208	                mov rax, qword [rdx + 8]	      1700	decNumber.c	FUNCTION_68	FUNCTION_29
0x4005304	      0x4889442418	             mov qword [rsp + 0x18], rax	      1700	decNumber.c	FUNCTION_68	FUNCTION_29
0x4005309	        0x488b4210	            mov rax, qword [rdx + 0x10] 	      1700	decNumber.c	FUNCTION_68	FUNCTION_29
0x400530d	      0x4889442420	             mov qword [rsp + 0x20], rax	      1700	decNumber.c	FUNCTION_68	FUNCTION_29
0x4005312	          0x8b4218	            mov eax, dword [rdx + 0x18] 	      1700	decNumber.c	FUNCTION_68	FUNCTION_29
0x4005315	        0x89442428	             mov dword [rsp + 0x28], eax	      1700	decNumber.c	FUNCTION_68	FUNCTION_29
0x4005319	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      1701	decNumber.c	FUNCTION_68	FUNCTION_29
0x4005321	         0xfb64608	               movzx eax, byte [rsi + 8]	      1707	decNumber.c	FUNCTION_68	FUNCTION_29	IF_2
0x4005325	          0x83e0c0	                     and eax, 0xffffffc0	      1707	decNumber.c	FUNCTION_68	FUNCTION_29	IF_2
0x4005328	            0x3cc0	                            cmp al, 0xc0	      1707	decNumber.c	FUNCTION_68	FUNCTION_29	IF_2
0x400532a	            0x750e	                           jne 0x400533a	      1707	decNumber.c	FUNCTION_68	FUNCTION_29	IF_2
0x400532c	          0x4889d6	                            mov rsi, rdx	      1708	decNumber.c	FUNCTION_68	FUNCTION_29	IF_2	CALL_2
0x400532f	      0xe8d3b7ffff	                 call sym.decSetMaxValue	      1708	decNumber.c	FUNCTION_68	FUNCTION_29	IF_2	CALL_2
0x4005334	        0xc6450880	                mov byte [rbp + 8], 0x80	      1709	decNumber.c	FUNCTION_68	FUNCTION_29	IF_2
0x4005338	            0xeb5b	                           jmp 0x4005395	      1711	decNumber.c	FUNCTION_68	FUNCTION_29	IF_2
0x400533a	      0xc644243800	                mov byte [rsp + 0x38], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x400533f	    0xc74424300100	               mov dword [rsp + 0x30], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4005347	    0x66c744243a01	                mov word [rsp + 0x3a], 1	      1714	decNumber.c	FUNCTION_68	FUNCTION_29
0x400534e	    0xc74424340036	     mov dword [rsp + 0x34], 0xc4653600 	      1715	decNumber.c	FUNCTION_68	FUNCTION_29
0x4005356	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      1716	decNumber.c	FUNCTION_68	FUNCTION_29
0x400535e	      0x4c8d4c240c	                     lea r9, [rsp + 0xc]	      1717	decNumber.c	FUNCTION_68	FUNCTION_29	CALL_4
0x4005363	    0x41b800000000	                              mov r8d, 0	      1717	decNumber.c	FUNCTION_68	FUNCTION_29	CALL_4
0x4005369	      0x488d4c2410	                   lea rcx, [rsp + 0x10]	      1717	decNumber.c	FUNCTION_68	FUNCTION_29	CALL_4
0x400536e	      0x488d542430	                   lea rdx, [rsp + 0x30]	      1717	decNumber.c	FUNCTION_68	FUNCTION_29	CALL_4
0x4005373	      0xe814f3ffff	                       call sym.decAddOp	      1717	decNumber.c	FUNCTION_68	FUNCTION_29	CALL_4
0x4005378	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      1718	decNumber.c	FUNCTION_68	FUNCTION_29
0x400537c	    0x81e680000040	                     and esi, 0x40000080	      1718	decNumber.c	FUNCTION_68	FUNCTION_29
0x4005382	        0x8974240c	              mov dword [rsp + 0xc], esi	      1718	decNumber.c	FUNCTION_68	FUNCTION_29
0x4005386	            0x85f6	                           test esi, esi	      1719	decNumber.c	FUNCTION_68	FUNCTION_29	CALL_5
0x4005388	            0x740b	                            je 0x4005395	      1719	decNumber.c	FUNCTION_68	FUNCTION_29	CALL_5
0x400538a	          0x4889da	                            mov rdx, rbx	      1719	decNumber.c	FUNCTION_68	FUNCTION_29	CALL_5
0x400538d	          0x4889ef	                            mov rdi, rbp	      1719	decNumber.c	FUNCTION_68	FUNCTION_29	CALL_5
0x4005390	      0xe887c2ffff	                      call sym.decStatus	      1719	decNumber.c	FUNCTION_68	FUNCTION_29	CALL_5
0x4005395	          0x4889e8	                            mov rax, rbp	      1721	decNumber.c	FUNCTION_68	FUNCTION_29
0x4005398	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      1721	decNumber.c	FUNCTION_68	FUNCTION_29
0x400539d	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      1721	decNumber.c	FUNCTION_68	FUNCTION_29
0x40053a6	            0x7405	                            je 0x40053ad	      1721	decNumber.c	FUNCTION_68	FUNCTION_29
0x40053a8	      0xe800000000	                          call 0x40053ad	      1721	decNumber.c	FUNCTION_68	FUNCTION_29
0x40053ad	        0x4883c458	                           add rsp, 0x58	      1721	decNumber.c	FUNCTION_68	FUNCTION_29
0x40053b1	              0x5b	                                 pop rbx	      1721	decNumber.c	FUNCTION_68	FUNCTION_29
0x40053b2	              0x5d	                                 pop rbp	      1721	decNumber.c	FUNCTION_68	FUNCTION_29
0x40053b3	              0xc3	                                     ret	      1721	decNumber.c	FUNCTION_68	FUNCTION_29
decNumberCopyAbs	SWITCH,0:functions,0:ELSE,0:DO,0:FOR,0:IF,1:CALL,2:WHILE,0	7
0x4008a3d	              0x53	                                push rbx	      3386	decNumber.c	FUNCTION_68	FUNCTION_53
0x4008a3e	          0x4889fb	                            mov rbx, rdi	      3386	decNumber.c	FUNCTION_68	FUNCTION_53
0x4008a41	      0xe800000000	                          call 0x4008a46	      3390	decNumber.c	FUNCTION_68	FUNCTION_53	CALL_2
0x4008a46	        0x8063087f	                and byte [rbx + 8], 0x7f	      3391	decNumber.c	FUNCTION_68	FUNCTION_53
0x4008a4a	          0x4889d8	                            mov rax, rbx	      3393	decNumber.c	FUNCTION_68	FUNCTION_53
0x4008a4d	              0x5b	                                 pop rbx	      3393	decNumber.c	FUNCTION_68	FUNCTION_53
0x4008a4e	              0xc3	                                     ret	      3393	decNumber.c	FUNCTION_68	FUNCTION_53
decTrim	SWITCH,0:functions,0:ELSE,0:DO,0:FOR,1:IF,13:CALL,4:WHILE,0	110
0x400070c	            0x4157	                                push r15	      6586	decNumber.c	FUNCTION_6
0x400070e	            0x4156	                                push r14	      6586	decNumber.c	FUNCTION_6
0x4000710	            0x4155	                                push r13	      6586	decNumber.c	FUNCTION_6
0x4000712	            0x4154	                                push r12	      6586	decNumber.c	FUNCTION_6
0x4000714	              0x55	                                push rbp	      6586	decNumber.c	FUNCTION_6
0x4000715	              0x53	                                push rbx	      6586	decNumber.c	FUNCTION_6
0x4000716	        0x4883ec08	                              sub rsp, 8	      6586	decNumber.c	FUNCTION_6
0x400071a	          0x4889fd	                            mov rbp, rdi	      6586	decNumber.c	FUNCTION_6
0x400071d	        0x894c2404	                mov dword [rsp + 4], ecx	      6586	decNumber.c	FUNCTION_6
0x4000721	    0x41c700000000	                       mov dword [r8], 0	      6595	decNumber.c	FUNCTION_6
0x4000728	        0xf6470870	               test byte [rdi + 8], 0x70	      6596	decNumber.c	FUNCTION_6	IF_2
0x400072c	     0xf8530010000	                           jne 0x4000862	      6596	decNumber.c	FUNCTION_6	IF_2
0x4000732	          0x4d89c4	                             mov r12, r8	      6596	decNumber.c	FUNCTION_6	IF_2
0x4000735	         0xfb7470a	            movzx eax, word [rdi + 0xa] 	      6597	decNumber.c	FUNCTION_6	IF_2
0x4000739	            0xa801	                              test al, 1	      6597	decNumber.c	FUNCTION_6	IF_2
0x400073b	     0xf8521010000	                           jne 0x4000862	      6597	decNumber.c	FUNCTION_6	IF_2
0x4000741	          0x6685c0	                             test ax, ax	      6598	decNumber.c	FUNCTION_6	IF_3	CALL_2
0x4000744	            0x7511	                           jne 0x4000757	      6598	decNumber.c	FUNCTION_6	IF_3	CALL_2
0x4000746	          0x833f01	                      cmp dword [rdi], 1	      6598	decNumber.c	FUNCTION_6	IF_3	CALL_2
0x4000749	            0x750c	                           jne 0x4000757	      6598	decNumber.c	FUNCTION_6	IF_3	CALL_2
0x400074b	    0xc74704000000	                  mov dword [rdi + 4], 0	      6599	decNumber.c	FUNCTION_6	IF_3
0x4000752	      0xe90b010000	                           jmp 0x4000862	      6600	decNumber.c	FUNCTION_6	IF_3
0x4000757	        0x448b6d04	               mov r13d, dword [rbp + 4]	      6604	decNumber.c	FUNCTION_6
0x400075b	        0x488d7d0a	                    lea rdi, [rbp + 0xa]	      6606	decNumber.c	FUNCTION_6
0x400075f	        0x448b7500	                   mov r14d, dword [rbp]	      6607	decNumber.c	FUNCTION_6	FOR_1
0x4000763	        0x418d46ff	                      lea eax, [r14 - 1]	      6607	decNumber.c	FUNCTION_6	FOR_1
0x4000767	            0x85c0	                           test eax, eax	      6607	decNumber.c	FUNCTION_6	FOR_1
0x4000769	     0xf8ef3000000	                           jle 0x4000862	      6607	decNumber.c	FUNCTION_6	FOR_1
0x400076f	         0xfb74d0a	            movzx ecx, word [rbp + 0xa] 	      6610	decNumber.c	FUNCTION_6	FOR_1
0x4000773	            0x89c8	                            mov eax, ecx	      6611	decNumber.c	FUNCTION_6	FOR_1	IF_4
0x4000775	            0xd1e8	                              shr eax, 1	      6611	decNumber.c	FUNCTION_6	FOR_1	IF_4
0x4000777	    0x69c067660000	                   imul eax, eax, 0x6667	      6611	decNumber.c	FUNCTION_6	FOR_1	IF_4
0x400077d	          0xc1e811	                           shr eax, 0x11	      6611	decNumber.c	FUNCTION_6	FOR_1	IF_4
0x4000780	     0xfaf05000000	            imul eax, dword [0x04000787]	      6611	decNumber.c	FUNCTION_6	FOR_1	IF_4
0x4000787	            0x39c1	                            cmp ecx, eax	      6611	decNumber.c	FUNCTION_6	FOR_1	IF_4
0x4000789	     0xf85d3000000	                           jne 0x4000862	      6611	decNumber.c	FUNCTION_6	FOR_1	IF_4
0x400078f	        0x418d5eff	                      lea ebx, [r14 - 1]	      6611	decNumber.c	FUNCTION_6	FOR_1	IF_4
0x4000793	          0x4989fa	                            mov r10, rdi	      6611	decNumber.c	FUNCTION_6	FOR_1	IF_4
0x4000796	          0x4589eb	                          mov r11d, r13d	      6611	decNumber.c	FUNCTION_6	FOR_1	IF_4
0x4000799	      0xb901000000	                              mov ecx, 1	      6611	decNumber.c	FUNCTION_6	FOR_1	IF_4
0x400079e	    0x41b800000000	                              mov r8d, 0	      6611	decNumber.c	FUNCTION_6	FOR_1	IF_4
0x40007a4	            0xeb26	                           jmp 0x40007cc	      6611	decNumber.c	FUNCTION_6	FOR_1	IF_4
0x40007a6	        0x450fb70a	                   movzx r9d, word [r10]	      6610	decNumber.c	FUNCTION_6	FOR_1
0x40007aa	          0x4489c8	                            mov eax, r9d	      6611	decNumber.c	FUNCTION_6	FOR_1	IF_4
0x40007ad	            0xd3e8	                             shr eax, cl	      6611	decNumber.c	FUNCTION_6	FOR_1	IF_4
0x40007af	          0x4189cf	                           mov r15d, ecx	      6610	decNumber.c	FUNCTION_6	FOR_1
0x40007b2	    0x420faf04bd00	                 imul eax, dword [r15*4]	      6611	decNumber.c	FUNCTION_6	FOR_1	IF_4
0x40007bb	          0xc1e811	                           shr eax, 0x11	      6611	decNumber.c	FUNCTION_6	FOR_1	IF_4
0x40007be	    0x420faf04bd00	                 imul eax, dword [r15*4]	      6611	decNumber.c	FUNCTION_6	FOR_1	IF_4
0x40007c7	          0x4139c1	                            cmp r9d, eax	      6611	decNumber.c	FUNCTION_6	FOR_1	IF_4
0x40007ca	            0x752e	                           jne 0x40007fa	      6611	decNumber.c	FUNCTION_6	FOR_1	IF_4
0x40007cc	          0x4585db	                         test r11d, r11d	      6618	decNumber.c	FUNCTION_6	FOR_1	IF_6	IF_7
0x40007cf	            0x7f0d	                            jg 0x40007de	      6618	decNumber.c	FUNCTION_6	FOR_1	IF_6	IF_7
0x40007d1	            0x84d2	                             test dl, dl	      6618	decNumber.c	FUNCTION_6	FOR_1	IF_6	IF_7
0x40007d3	            0x7509	                           jne 0x40007de	      6618	decNumber.c	FUNCTION_6	FOR_1	IF_6	IF_7
0x40007d5	          0x4585db	                         test r11d, r11d	      6619	decNumber.c	FUNCTION_6	FOR_1	IF_6	IF_7	IF_8
0x40007d8	            0x7425	                            je 0x40007ff	      6619	decNumber.c	FUNCTION_6	FOR_1	IF_6	IF_7	IF_8
0x40007da	        0x4183c301	                             add r11d, 1	      6620	decNumber.c	FUNCTION_6	FOR_1	IF_6	IF_7
0x40007de	          0x83c101	                              add ecx, 1	      6623	decNumber.c	FUNCTION_6	FOR_1
0x40007e1	          0x83f903	                              cmp ecx, 3	      6624	decNumber.c	FUNCTION_6	FOR_1	IF_9
0x40007e4	            0x7609	                           jbe 0x40007ef	      6624	decNumber.c	FUNCTION_6	FOR_1	IF_9
0x40007e6	        0x4983c202	                              add r10, 2	      6625	decNumber.c	FUNCTION_6	FOR_1	IF_9
0x40007ea	      0xb901000000	                              mov ecx, 1	      6626	decNumber.c	FUNCTION_6	FOR_1	IF_9
0x40007ef	        0x4183c001	                              add r8d, 1	      6607	decNumber.c	FUNCTION_6	FOR_1
0x40007f3	          0x4439c3	                            cmp ebx, r8d	      6607	decNumber.c	FUNCTION_6	FOR_1
0x40007f6	            0x75ae	                           jne 0x40007a6	      6607	decNumber.c	FUNCTION_6	FOR_1
0x40007f8	            0xeb08	                           jmp 0x4000802	      6607	decNumber.c	FUNCTION_6	FOR_1
0x40007fa	          0x4489c3	                            mov ebx, r8d	      6607	decNumber.c	FUNCTION_6	FOR_1
0x40007fd	            0xeb03	                           jmp 0x4000802	      6607	decNumber.c	FUNCTION_6	FOR_1
0x40007ff	          0x4489c3	                            mov ebx, r8d	      6607	decNumber.c	FUNCTION_6	FOR_1
0x4000802	            0x85db	                           test ebx, ebx	      6629	decNumber.c	FUNCTION_6	IF_10
0x4000804	            0x745c	                            je 0x4000862	      6629	decNumber.c	FUNCTION_6	IF_10
0x4000806	        0x807e1800	                cmp byte [rsi + 0x18], 0	      6632	decNumber.c	FUNCTION_6	IF_11
0x400080a	            0x741b	                            je 0x4000827	      6632	decNumber.c	FUNCTION_6	IF_11
0x400080c	      0x807c240400	                   cmp byte [rsp + 4], 0	      6632	decNumber.c	FUNCTION_6	IF_11
0x4000811	            0x7514	                           jne 0x4000827	      6632	decNumber.c	FUNCTION_6	IF_11
0x4000813	          0x8b4604	                mov eax, dword [rsi + 4]	      6633	decNumber.c	FUNCTION_6	IF_11
0x4000816	            0x2b06	                    sub eax, dword [rsi]	      6633	decNumber.c	FUNCTION_6	IF_11
0x4000818	          0x83c001	                              add eax, 1	      6633	decNumber.c	FUNCTION_6	IF_11
0x400081b	          0x4429e8	                           sub eax, r13d	      6633	decNumber.c	FUNCTION_6	IF_11
0x400081e	            0x85c0	                           test eax, eax	      6634	decNumber.c	FUNCTION_6	IF_11	IF_12
0x4000820	            0x7e40	                           jle 0x4000862	      6634	decNumber.c	FUNCTION_6	IF_11	IF_12
0x4000822	            0x39c3	                            cmp ebx, eax	      6634	decNumber.c	FUNCTION_6	IF_11	IF_12
0x4000824	           0xf4fd8	                          cmovg ebx, eax	      6634	decNumber.c	FUNCTION_6	IF_11	IF_12
0x4000827	        0x4183fe31	                          cmp r14d, 0x31	      6639	decNumber.c	FUNCTION_6	CALL_4
0x400082b	            0x7f0d	                            jg 0x400083a	      6639	decNumber.c	FUNCTION_6	CALL_4
0x400082d	          0x4d63f6	                        movsxd r14, r14d	      6639	decNumber.c	FUNCTION_6	CALL_4
0x4000830	    0x410fb6b60000	                   movzx esi, byte [r14]	      6639	decNumber.c	FUNCTION_6	CALL_4
0x4000838	            0xeb17	                           jmp 0x4000851	      6639	decNumber.c	FUNCTION_6	CALL_4
0x400083a	        0x4183c602	                             add r14d, 2	      6639	decNumber.c	FUNCTION_6	CALL_4
0x400083e	      0xbe56555555	                     mov esi, 0x55555556	      6639	decNumber.c	FUNCTION_6	CALL_4
0x4000843	          0x4489f0	                           mov eax, r14d	      6639	decNumber.c	FUNCTION_6	CALL_4
0x4000846	            0xf7ee	                                imul esi	      6639	decNumber.c	FUNCTION_6	CALL_4
0x4000848	        0x41c1fe1f	                          sar r14d, 0x1f	      6639	decNumber.c	FUNCTION_6	CALL_4
0x400084c	            0x89d6	                            mov esi, edx	      6639	decNumber.c	FUNCTION_6	CALL_4
0x400084e	          0x4429f6	                           sub esi, r14d	      6639	decNumber.c	FUNCTION_6	CALL_4
0x4000851	            0x89da	                            mov edx, ebx	      6639	decNumber.c	FUNCTION_6	CALL_4
0x4000853	      0xe8d0fcffff	                call sym.decShiftToLeast	      6639	decNumber.c	FUNCTION_6	CALL_4
0x4000858	           0x15d04	                add dword [rbp + 4], ebx	      6640	decNumber.c	FUNCTION_6
0x400085b	          0x295d00	                    sub dword [rbp], ebx	      6641	decNumber.c	FUNCTION_6
0x400085e	        0x41891c24	                    mov dword [r12], ebx	      6642	decNumber.c	FUNCTION_6
0x4000862	          0x4889e8	                            mov rax, rbp	      6644	decNumber.c	FUNCTION_6
0x4000865	        0x4883c408	                              add rsp, 8	      6644	decNumber.c	FUNCTION_6
0x4000869	              0x5b	                                 pop rbx	      6644	decNumber.c	FUNCTION_6
0x400086a	              0x5d	                                 pop rbp	      6644	decNumber.c	FUNCTION_6
0x400086b	            0x415c	                                 pop r12	      6644	decNumber.c	FUNCTION_6
0x400086d	            0x415d	                                 pop r13	      6644	decNumber.c	FUNCTION_6
0x400086f	            0x415e	                                 pop r14	      6644	decNumber.c	FUNCTION_6
0x4000871	            0x415f	                                 pop r15	      6644	decNumber.c	FUNCTION_6
0x4000873	              0xc3	                                     ret	      6644	decNumber.c	FUNCTION_6
decNumberMinus	SWITCH,0:functions,0:ELSE,0:DO,0:FOR,0:IF,2:CALL,5:WHILE,0	35
0x400517c	              0x55	                                push rbp	      1632	decNumber.c	FUNCTION_68	FUNCTION_27
0x400517d	              0x53	                                push rbx	      1632	decNumber.c	FUNCTION_68	FUNCTION_27
0x400517e	        0x4883ec38	                           sub rsp, 0x38	      1632	decNumber.c	FUNCTION_68	FUNCTION_27
0x4005182	          0x4889fb	                            mov rbx, rdi	      1632	decNumber.c	FUNCTION_68	FUNCTION_27
0x4005185	          0x4889d5	                            mov rbp, rdx	      1632	decNumber.c	FUNCTION_68	FUNCTION_27
0x4005188	    0x64488b042528	                mov rax, qword fs:[0x28]	      1632	decNumber.c	FUNCTION_68	FUNCTION_27
0x4005191	      0x4889442428	             mov qword [rsp + 0x28], rax	      1632	decNumber.c	FUNCTION_68	FUNCTION_27
0x4005196	            0x31c0	                            xor eax, eax	      1632	decNumber.c	FUNCTION_68	FUNCTION_27
0x4005198	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      1634	decNumber.c	FUNCTION_68	FUNCTION_27
0x40051a0	      0xc644241800	                mov byte [rsp + 0x18], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x40051a5	    0xc74424100100	               mov dword [rsp + 0x10], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x40051ad	    0x66c744241a00	                mov word [rsp + 0x1a], 0	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x40051b4	          0x8b4604	                mov eax, dword [rsi + 4]	      1641	decNumber.c	FUNCTION_68	FUNCTION_27
0x40051b7	        0x89442414	             mov dword [rsp + 0x14], eax	      1641	decNumber.c	FUNCTION_68	FUNCTION_27
0x40051bb	      0x4c8d4c240c	                     lea r9, [rsp + 0xc]	      1642	decNumber.c	FUNCTION_68	FUNCTION_27	CALL_3
0x40051c0	    0x41b880000000	                           mov r8d, 0x80	      1642	decNumber.c	FUNCTION_68	FUNCTION_27	CALL_3
0x40051c6	          0x4889d1	                            mov rcx, rdx	      1642	decNumber.c	FUNCTION_68	FUNCTION_27	CALL_3
0x40051c9	          0x4889f2	                            mov rdx, rsi	      1642	decNumber.c	FUNCTION_68	FUNCTION_27	CALL_3
0x40051cc	      0x488d742410	                   lea rsi, [rsp + 0x10]	      1642	decNumber.c	FUNCTION_68	FUNCTION_27	CALL_3
0x40051d1	      0xe8b6f4ffff	                       call sym.decAddOp	      1642	decNumber.c	FUNCTION_68	FUNCTION_27	CALL_3
0x40051d6	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      1643	decNumber.c	FUNCTION_68	FUNCTION_27	CALL_4
0x40051da	            0x85f6	                           test esi, esi	      1643	decNumber.c	FUNCTION_68	FUNCTION_27	CALL_4
0x40051dc	            0x740b	                            je 0x40051e9	      1643	decNumber.c	FUNCTION_68	FUNCTION_27	CALL_4
0x40051de	          0x4889ea	                            mov rdx, rbp	      1643	decNumber.c	FUNCTION_68	FUNCTION_27	CALL_4
0x40051e1	          0x4889df	                            mov rdi, rbx	      1643	decNumber.c	FUNCTION_68	FUNCTION_27	CALL_4
0x40051e4	      0xe833c4ffff	                      call sym.decStatus	      1643	decNumber.c	FUNCTION_68	FUNCTION_27	CALL_4
0x40051e9	          0x4889d8	                            mov rax, rbx	      1648	decNumber.c	FUNCTION_68	FUNCTION_27
0x40051ec	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      1648	decNumber.c	FUNCTION_68	FUNCTION_27
0x40051f1	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1648	decNumber.c	FUNCTION_68	FUNCTION_27
0x40051fa	            0x7405	                            je 0x4005201	      1648	decNumber.c	FUNCTION_68	FUNCTION_27
0x40051fc	      0xe800000000	                          call 0x4005201	      1648	decNumber.c	FUNCTION_68	FUNCTION_27
0x4005201	        0x4883c438	                           add rsp, 0x38	      1648	decNumber.c	FUNCTION_68	FUNCTION_27
0x4005205	              0x5b	                                 pop rbx	      1648	decNumber.c	FUNCTION_68	FUNCTION_27
0x4005206	              0x5d	                                 pop rbp	      1648	decNumber.c	FUNCTION_68	FUNCTION_27
0x4005207	              0xc3	                                     ret	      1648	decNumber.c	FUNCTION_68	FUNCTION_27
decNumberDivideInteger	SWITCH,0:functions,0:ELSE,0:DO,0:FOR,0:IF,1:CALL,2:WHILE,0	27
0x400651b	              0x55	                                push rbp	      1015	decNumber.c	FUNCTION_68	FUNCTION_16
0x400651c	              0x53	                                push rbx	      1015	decNumber.c	FUNCTION_68	FUNCTION_16
0x400651d	        0x4883ec18	                           sub rsp, 0x18	      1015	decNumber.c	FUNCTION_68	FUNCTION_16
0x4006521	          0x4889fb	                            mov rbx, rdi	      1015	decNumber.c	FUNCTION_68	FUNCTION_16
0x4006524	          0x4889cd	                            mov rbp, rcx	      1015	decNumber.c	FUNCTION_68	FUNCTION_16
0x4006527	    0x64488b042528	                mov rax, qword fs:[0x28]	      1015	decNumber.c	FUNCTION_68	FUNCTION_16
0x4006530	      0x4889442408	                mov qword [rsp + 8], rax	      1015	decNumber.c	FUNCTION_68	FUNCTION_16
0x4006535	            0x31c0	                            xor eax, eax	      1015	decNumber.c	FUNCTION_68	FUNCTION_16
0x4006537	    0xc74424040000	                  mov dword [rsp + 4], 0	      1016	decNumber.c	FUNCTION_68	FUNCTION_16
0x400653f	      0x4c8d4c2404	                       lea r9, [rsp + 4]	      1017	decNumber.c	FUNCTION_68	FUNCTION_16	CALL_1
0x4006544	    0x41b820000000	                           mov r8d, 0x20	      1017	decNumber.c	FUNCTION_68	FUNCTION_16	CALL_1
0x400654a	      0xe88bf0ffff	                    call sym.decDivideOp	      1017	decNumber.c	FUNCTION_68	FUNCTION_16	CALL_1
0x400654f	        0x8b742404	                mov esi, dword [rsp + 4]	      1018	decNumber.c	FUNCTION_68	FUNCTION_16	CALL_2
0x4006553	            0x85f6	                           test esi, esi	      1018	decNumber.c	FUNCTION_68	FUNCTION_16	CALL_2
0x4006555	            0x740b	                            je 0x4006562	      1018	decNumber.c	FUNCTION_68	FUNCTION_16	CALL_2
0x4006557	          0x4889ea	                            mov rdx, rbp	      1018	decNumber.c	FUNCTION_68	FUNCTION_16	CALL_2
0x400655a	          0x4889df	                            mov rdi, rbx	      1018	decNumber.c	FUNCTION_68	FUNCTION_16	CALL_2
0x400655d	      0xe8bab0ffff	                      call sym.decStatus	      1018	decNumber.c	FUNCTION_68	FUNCTION_16	CALL_2
0x4006562	          0x4889d8	                            mov rax, rbx	      1020	decNumber.c	FUNCTION_68	FUNCTION_16
0x4006565	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1020	decNumber.c	FUNCTION_68	FUNCTION_16
0x400656a	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1020	decNumber.c	FUNCTION_68	FUNCTION_16
0x4006573	            0x7405	                            je 0x400657a	      1020	decNumber.c	FUNCTION_68	FUNCTION_16
0x4006575	      0xe800000000	                          call 0x400657a	      1020	decNumber.c	FUNCTION_68	FUNCTION_16
0x400657a	        0x4883c418	                           add rsp, 0x18	      1020	decNumber.c	FUNCTION_68	FUNCTION_16
0x400657e	              0x5b	                                 pop rbx	      1020	decNumber.c	FUNCTION_68	FUNCTION_16
0x400657f	              0x5d	                                 pop rbp	      1020	decNumber.c	FUNCTION_68	FUNCTION_16
0x4006580	              0xc3	                                     ret	      1020	decNumber.c	FUNCTION_68	FUNCTION_16
decNumberRescale	SWITCH,0:functions,0:ELSE,0:DO,0:FOR,0:IF,1:CALL,2:WHILE,0	27
0x4004027	              0x55	                                push rbp	      2377	decNumber.c	FUNCTION_68	FUNCTION_38
0x4004028	              0x53	                                push rbx	      2377	decNumber.c	FUNCTION_68	FUNCTION_38
0x4004029	        0x4883ec18	                           sub rsp, 0x18	      2377	decNumber.c	FUNCTION_68	FUNCTION_38
0x400402d	          0x4889fb	                            mov rbx, rdi	      2377	decNumber.c	FUNCTION_68	FUNCTION_38
0x4004030	          0x4889cd	                            mov rbp, rcx	      2377	decNumber.c	FUNCTION_68	FUNCTION_38
0x4004033	    0x64488b042528	                mov rax, qword fs:[0x28]	      2377	decNumber.c	FUNCTION_68	FUNCTION_38
0x400403c	      0x4889442408	                mov qword [rsp + 8], rax	      2377	decNumber.c	FUNCTION_68	FUNCTION_38
0x4004041	            0x31c0	                            xor eax, eax	      2377	decNumber.c	FUNCTION_68	FUNCTION_38
0x4004043	    0xc74424040000	                  mov dword [rsp + 4], 0	      2378	decNumber.c	FUNCTION_68	FUNCTION_38
0x400404b	      0x4c8d4c2404	                       lea r9, [rsp + 4]	      2379	decNumber.c	FUNCTION_68	FUNCTION_38	CALL_1
0x4004050	    0x41b800000000	                              mov r8d, 0	      2379	decNumber.c	FUNCTION_68	FUNCTION_38	CALL_1
0x4004056	      0xe828fdffff	                  call sym.decQuantizeOp	      2379	decNumber.c	FUNCTION_68	FUNCTION_38	CALL_1
0x400405b	        0x8b742404	                mov esi, dword [rsp + 4]	      2380	decNumber.c	FUNCTION_68	FUNCTION_38	CALL_2
0x400405f	            0x85f6	                           test esi, esi	      2380	decNumber.c	FUNCTION_68	FUNCTION_38	CALL_2
0x4004061	            0x740b	                            je 0x400406e	      2380	decNumber.c	FUNCTION_68	FUNCTION_38	CALL_2
0x4004063	          0x4889ea	                            mov rdx, rbp	      2380	decNumber.c	FUNCTION_68	FUNCTION_38	CALL_2
0x4004066	          0x4889df	                            mov rdi, rbx	      2380	decNumber.c	FUNCTION_68	FUNCTION_38	CALL_2
0x4004069	      0xe8aed5ffff	                      call sym.decStatus	      2380	decNumber.c	FUNCTION_68	FUNCTION_38	CALL_2
0x400406e	          0x4889d8	                            mov rax, rbx	      2382	decNumber.c	FUNCTION_68	FUNCTION_38
0x4004071	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      2382	decNumber.c	FUNCTION_68	FUNCTION_38
0x4004076	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2382	decNumber.c	FUNCTION_68	FUNCTION_38
0x400407f	            0x7405	                            je 0x4004086	      2382	decNumber.c	FUNCTION_68	FUNCTION_38
0x4004081	      0xe800000000	                          call 0x4004086	      2382	decNumber.c	FUNCTION_68	FUNCTION_38
0x4004086	        0x4883c418	                           add rsp, 0x18	      2382	decNumber.c	FUNCTION_68	FUNCTION_38
0x400408a	              0x5b	                                 pop rbx	      2382	decNumber.c	FUNCTION_68	FUNCTION_38
0x400408b	              0x5d	                                 pop rbp	      2382	decNumber.c	FUNCTION_68	FUNCTION_38
0x400408c	              0xc3	                                     ret	      2382	decNumber.c	FUNCTION_68	FUNCTION_38
decNumberToIntegralValue	SWITCH,0:functions,0:ELSE,0:DO,0:FOR,0:IF,0:CALL,1:WHILE,0	31
0x40089c6	              0x55	                                push rbp	      3203	decNumber.c	FUNCTION_68	FUNCTION_48
0x40089c7	              0x53	                                push rbx	      3203	decNumber.c	FUNCTION_68	FUNCTION_48
0x40089c8	        0x4883ec38	                           sub rsp, 0x38	      3203	decNumber.c	FUNCTION_68	FUNCTION_48
0x40089cc	          0x4889fd	                            mov rbp, rdi	      3203	decNumber.c	FUNCTION_68	FUNCTION_48
0x40089cf	          0x4889d3	                            mov rbx, rdx	      3203	decNumber.c	FUNCTION_68	FUNCTION_48
0x40089d2	    0x64488b042528	                mov rax, qword fs:[0x28]	      3203	decNumber.c	FUNCTION_68	FUNCTION_48
0x40089db	      0x4889442428	             mov qword [rsp + 0x28], rax	      3203	decNumber.c	FUNCTION_68	FUNCTION_48
0x40089e0	            0x31c0	                            xor eax, eax	      3203	decNumber.c	FUNCTION_68	FUNCTION_48
0x40089e2	          0x488b02	                    mov rax, qword [rdx]	      3204	decNumber.c	FUNCTION_68	FUNCTION_48
0x40089e5	        0x48890424	                    mov qword [rsp], rax	      3204	decNumber.c	FUNCTION_68	FUNCTION_48
0x40089e9	        0x488b4208	                mov rax, qword [rdx + 8]	      3204	decNumber.c	FUNCTION_68	FUNCTION_48
0x40089ed	      0x4889442408	                mov qword [rsp + 8], rax	      3204	decNumber.c	FUNCTION_68	FUNCTION_48
0x40089f2	        0x488b4210	            mov rax, qword [rdx + 0x10] 	      3204	decNumber.c	FUNCTION_68	FUNCTION_48
0x40089f6	      0x4889442410	             mov qword [rsp + 0x10], rax	      3204	decNumber.c	FUNCTION_68	FUNCTION_48
0x40089fb	          0x8b4218	            mov eax, dword [rdx + 0x18] 	      3204	decNumber.c	FUNCTION_68	FUNCTION_48
0x40089fe	        0x89442418	             mov dword [rsp + 0x18], eax	      3204	decNumber.c	FUNCTION_68	FUNCTION_48
0x4008a02	    0xc74424100000	               mov dword [rsp + 0x10], 0	      3205	decNumber.c	FUNCTION_68	FUNCTION_48
0x4008a0a	          0x4889e2	                            mov rdx, rsp	      3206	decNumber.c	FUNCTION_68	FUNCTION_48	CALL_1
0x4008a0d	      0xe800000000	                          call 0x4008a12	      3206	decNumber.c	FUNCTION_68	FUNCTION_48	CALL_1
0x4008a12	        0x8b442414	            mov eax, dword [rsp + 0x14] 	      3209	decNumber.c	FUNCTION_68	FUNCTION_48
0x4008a16	      0x2580000000	                           and eax, 0x80	      3209	decNumber.c	FUNCTION_68	FUNCTION_48
0x4008a1b	           0x94314	              or dword [rbx + 0x14], eax	      3209	decNumber.c	FUNCTION_68	FUNCTION_48
0x4008a1e	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      3211	decNumber.c	FUNCTION_68	FUNCTION_48
0x4008a23	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3211	decNumber.c	FUNCTION_68	FUNCTION_48
0x4008a2c	            0x7405	                            je 0x4008a33	      3211	decNumber.c	FUNCTION_68	FUNCTION_48
0x4008a2e	      0xe800000000	                          call 0x4008a33	      3211	decNumber.c	FUNCTION_68	FUNCTION_48
0x4008a33	          0x4889e8	                            mov rax, rbp	      3211	decNumber.c	FUNCTION_68	FUNCTION_48
0x4008a36	        0x4883c438	                           add rsp, 0x38	      3211	decNumber.c	FUNCTION_68	FUNCTION_48
0x4008a3a	              0x5b	                                 pop rbx	      3211	decNumber.c	FUNCTION_68	FUNCTION_48
0x4008a3b	              0x5d	                                 pop rbp	      3211	decNumber.c	FUNCTION_68	FUNCTION_48
0x4008a3c	              0xc3	                                     ret	      3211	decNumber.c	FUNCTION_68	FUNCTION_48
decNumberAbs	SWITCH,0:functions,0:ELSE,0:DO,0:FOR,0:IF,2:CALL,5:WHILE,0	36
0x4004e18	              0x55	                                push rbp	       739	decNumber.c	FUNCTION_68	FUNCTION_8
0x4004e19	              0x53	                                push rbx	       739	decNumber.c	FUNCTION_68	FUNCTION_8
0x4004e1a	        0x4883ec38	                           sub rsp, 0x38	       739	decNumber.c	FUNCTION_68	FUNCTION_8
0x4004e1e	          0x4889fb	                            mov rbx, rdi	       739	decNumber.c	FUNCTION_68	FUNCTION_8
0x4004e21	          0x4889d5	                            mov rbp, rdx	       739	decNumber.c	FUNCTION_68	FUNCTION_8
0x4004e24	    0x64488b042528	                mov rax, qword fs:[0x28]	       739	decNumber.c	FUNCTION_68	FUNCTION_8
0x4004e2d	      0x4889442428	             mov qword [rsp + 0x28], rax	       739	decNumber.c	FUNCTION_68	FUNCTION_8
0x4004e32	            0x31c0	                            xor eax, eax	       739	decNumber.c	FUNCTION_68	FUNCTION_8
0x4004e34	    0xc744240c0000	                mov dword [rsp + 0xc], 0	       741	decNumber.c	FUNCTION_68	FUNCTION_8
0x4004e3c	      0xc644241800	                mov byte [rsp + 0x18], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x4004e41	    0xc74424100100	               mov dword [rsp + 0x10], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4004e49	    0x66c744241a00	                mov word [rsp + 0x1a], 0	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4004e50	          0x8b4604	                mov eax, dword [rsi + 4]	       748	decNumber.c	FUNCTION_68	FUNCTION_8
0x4004e53	        0x89442414	             mov dword [rsp + 0x14], eax	       748	decNumber.c	FUNCTION_68	FUNCTION_8
0x4004e57	      0x440fb64608	               movzx r8d, byte [rsi + 8]	       749	decNumber.c	FUNCTION_68	FUNCTION_8	CALL_3
0x4004e5c	      0x4c8d4c240c	                     lea r9, [rsp + 0xc]	       749	decNumber.c	FUNCTION_68	FUNCTION_8	CALL_3
0x4004e61	    0x4181e0800000	                           and r8d, 0x80	       749	decNumber.c	FUNCTION_68	FUNCTION_8	CALL_3
0x4004e68	          0x4889d1	                            mov rcx, rdx	       749	decNumber.c	FUNCTION_68	FUNCTION_8	CALL_3
0x4004e6b	          0x4889f2	                            mov rdx, rsi	       749	decNumber.c	FUNCTION_68	FUNCTION_8	CALL_3
0x4004e6e	      0x488d742410	                   lea rsi, [rsp + 0x10]	       749	decNumber.c	FUNCTION_68	FUNCTION_8	CALL_3
0x4004e73	      0xe814f8ffff	                       call sym.decAddOp	       749	decNumber.c	FUNCTION_68	FUNCTION_8	CALL_3
0x4004e78	        0x8b74240c	              mov esi, dword [rsp + 0xc]	       750	decNumber.c	FUNCTION_68	FUNCTION_8	CALL_4
0x4004e7c	            0x85f6	                           test esi, esi	       750	decNumber.c	FUNCTION_68	FUNCTION_8	CALL_4
0x4004e7e	            0x740b	                            je 0x4004e8b	       750	decNumber.c	FUNCTION_68	FUNCTION_8	CALL_4
0x4004e80	          0x4889ea	                            mov rdx, rbp	       750	decNumber.c	FUNCTION_68	FUNCTION_8	CALL_4
0x4004e83	          0x4889df	                            mov rdi, rbx	       750	decNumber.c	FUNCTION_68	FUNCTION_8	CALL_4
0x4004e86	      0xe891c7ffff	                      call sym.decStatus	       750	decNumber.c	FUNCTION_68	FUNCTION_8	CALL_4
0x4004e8b	          0x4889d8	                            mov rax, rbx	       755	decNumber.c	FUNCTION_68	FUNCTION_8
0x4004e8e	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       755	decNumber.c	FUNCTION_68	FUNCTION_8
0x4004e93	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       755	decNumber.c	FUNCTION_68	FUNCTION_8
0x4004e9c	            0x7405	                            je 0x4004ea3	       755	decNumber.c	FUNCTION_68	FUNCTION_8
0x4004e9e	      0xe800000000	                          call 0x4004ea3	       755	decNumber.c	FUNCTION_68	FUNCTION_8
0x4004ea3	        0x4883c438	                           add rsp, 0x38	       755	decNumber.c	FUNCTION_68	FUNCTION_8
0x4004ea7	              0x5b	                                 pop rbx	       755	decNumber.c	FUNCTION_68	FUNCTION_8
0x4004ea8	              0x5d	                                 pop rbp	       755	decNumber.c	FUNCTION_68	FUNCTION_8
0x4004ea9	              0xc3	                                     ret	       755	decNumber.c	FUNCTION_68	FUNCTION_8
decNumberSubtract	SWITCH,0:functions,0:ELSE,0:DO,0:FOR,0:IF,1:CALL,3:WHILE,0	27
0x4004f10	              0x55	                                push rbp	      3140	decNumber.c	FUNCTION_68	FUNCTION_46
0x4004f11	              0x53	                                push rbx	      3140	decNumber.c	FUNCTION_68	FUNCTION_46
0x4004f12	        0x4883ec18	                           sub rsp, 0x18	      3140	decNumber.c	FUNCTION_68	FUNCTION_46
0x4004f16	          0x4889fb	                            mov rbx, rdi	      3140	decNumber.c	FUNCTION_68	FUNCTION_46
0x4004f19	          0x4889cd	                            mov rbp, rcx	      3140	decNumber.c	FUNCTION_68	FUNCTION_46
0x4004f1c	    0x64488b042528	                mov rax, qword fs:[0x28]	      3140	decNumber.c	FUNCTION_68	FUNCTION_46
0x4004f25	      0x4889442408	                mov qword [rsp + 8], rax	      3140	decNumber.c	FUNCTION_68	FUNCTION_46
0x4004f2a	            0x31c0	                            xor eax, eax	      3140	decNumber.c	FUNCTION_68	FUNCTION_46
0x4004f2c	    0xc74424040000	                  mov dword [rsp + 4], 0	      3141	decNumber.c	FUNCTION_68	FUNCTION_46
0x4004f34	      0x4c8d4c2404	                       lea r9, [rsp + 4]	      3143	decNumber.c	FUNCTION_68	FUNCTION_46	CALL_1
0x4004f39	    0x41b880000000	                           mov r8d, 0x80	      3143	decNumber.c	FUNCTION_68	FUNCTION_46	CALL_1
0x4004f3f	      0xe848f7ffff	                       call sym.decAddOp	      3143	decNumber.c	FUNCTION_68	FUNCTION_46	CALL_1
0x4004f44	        0x8b742404	                mov esi, dword [rsp + 4]	      3144	decNumber.c	FUNCTION_68	FUNCTION_46	CALL_2
0x4004f48	            0x85f6	                           test esi, esi	      3144	decNumber.c	FUNCTION_68	FUNCTION_46	CALL_2
0x4004f4a	            0x740b	                            je 0x4004f57	      3144	decNumber.c	FUNCTION_68	FUNCTION_46	CALL_2
0x4004f4c	          0x4889ea	                            mov rdx, rbp	      3144	decNumber.c	FUNCTION_68	FUNCTION_46	CALL_2
0x4004f4f	          0x4889df	                            mov rdi, rbx	      3144	decNumber.c	FUNCTION_68	FUNCTION_46	CALL_2
0x4004f52	      0xe8c5c6ffff	                      call sym.decStatus	      3144	decNumber.c	FUNCTION_68	FUNCTION_46	CALL_2
0x4004f57	          0x4889d8	                            mov rax, rbx	      3149	decNumber.c	FUNCTION_68	FUNCTION_46
0x4004f5a	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      3149	decNumber.c	FUNCTION_68	FUNCTION_46
0x4004f5f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3149	decNumber.c	FUNCTION_68	FUNCTION_46
0x4004f68	            0x7405	                            je 0x4004f6f	      3149	decNumber.c	FUNCTION_68	FUNCTION_46
0x4004f6a	      0xe800000000	                          call 0x4004f6f	      3149	decNumber.c	FUNCTION_68	FUNCTION_46
0x4004f6f	        0x4883c418	                           add rsp, 0x18	      3149	decNumber.c	FUNCTION_68	FUNCTION_46
0x4004f73	              0x5b	                                 pop rbx	      3149	decNumber.c	FUNCTION_68	FUNCTION_46
0x4004f74	              0x5d	                                 pop rbp	      3149	decNumber.c	FUNCTION_68	FUNCTION_46
0x4004f75	              0xc3	                                     ret	      3149	decNumber.c	FUNCTION_68	FUNCTION_46
decNumberMultiply	SWITCH,0:functions,0:ELSE,0:DO,0:FOR,0:IF,1:CALL,3:WHILE,0	26
0x4003d23	              0x55	                                push rbp	      1906	decNumber.c	FUNCTION_68	FUNCTION_33
0x4003d24	              0x53	                                push rbx	      1906	decNumber.c	FUNCTION_68	FUNCTION_33
0x4003d25	        0x4883ec18	                           sub rsp, 0x18	      1906	decNumber.c	FUNCTION_68	FUNCTION_33
0x4003d29	          0x4889fb	                            mov rbx, rdi	      1906	decNumber.c	FUNCTION_68	FUNCTION_33
0x4003d2c	          0x4889cd	                            mov rbp, rcx	      1906	decNumber.c	FUNCTION_68	FUNCTION_33
0x4003d2f	    0x64488b042528	                mov rax, qword fs:[0x28]	      1906	decNumber.c	FUNCTION_68	FUNCTION_33
0x4003d38	      0x4889442408	                mov qword [rsp + 8], rax	      1906	decNumber.c	FUNCTION_68	FUNCTION_33
0x4003d3d	            0x31c0	                            xor eax, eax	      1906	decNumber.c	FUNCTION_68	FUNCTION_33
0x4003d3f	    0xc74424040000	                  mov dword [rsp + 4], 0	      1907	decNumber.c	FUNCTION_68	FUNCTION_33
0x4003d47	      0x4c8d442404	                       lea r8, [rsp + 4]	      1908	decNumber.c	FUNCTION_68	FUNCTION_33	CALL_1
0x4003d4c	      0xe8f8f8ffff	                  call sym.decMultiplyOp	      1908	decNumber.c	FUNCTION_68	FUNCTION_33	CALL_1
0x4003d51	        0x8b742404	                mov esi, dword [rsp + 4]	      1909	decNumber.c	FUNCTION_68	FUNCTION_33	CALL_2
0x4003d55	            0x85f6	                           test esi, esi	      1909	decNumber.c	FUNCTION_68	FUNCTION_33	CALL_2
0x4003d57	            0x740b	                            je 0x4003d64	      1909	decNumber.c	FUNCTION_68	FUNCTION_33	CALL_2
0x4003d59	          0x4889ea	                            mov rdx, rbp	      1909	decNumber.c	FUNCTION_68	FUNCTION_33	CALL_2
0x4003d5c	          0x4889df	                            mov rdi, rbx	      1909	decNumber.c	FUNCTION_68	FUNCTION_33	CALL_2
0x4003d5f	      0xe8b8d8ffff	                      call sym.decStatus	      1909	decNumber.c	FUNCTION_68	FUNCTION_33	CALL_2
0x4003d64	          0x4889d8	                            mov rax, rbx	      1914	decNumber.c	FUNCTION_68	FUNCTION_33
0x4003d67	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1914	decNumber.c	FUNCTION_68	FUNCTION_33
0x4003d6c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1914	decNumber.c	FUNCTION_68	FUNCTION_33
0x4003d75	            0x7405	                            je 0x4003d7c	      1914	decNumber.c	FUNCTION_68	FUNCTION_33
0x4003d77	      0xe800000000	                          call 0x4003d7c	      1914	decNumber.c	FUNCTION_68	FUNCTION_33
0x4003d7c	        0x4883c418	                           add rsp, 0x18	      1914	decNumber.c	FUNCTION_68	FUNCTION_33
0x4003d80	              0x5b	                                 pop rbx	      1914	decNumber.c	FUNCTION_68	FUNCTION_33
0x4003d81	              0x5d	                                 pop rbp	      1914	decNumber.c	FUNCTION_68	FUNCTION_33
0x4003d82	              0xc3	                                     ret	      1914	decNumber.c	FUNCTION_68	FUNCTION_33
decNumberLn	SWITCH,0:functions,0:ELSE,0:DO,1:FOR,0:IF,7:CALL,7:WHILE,0	38
0x40074a0	            0x4154	                                push r12	      1268	decNumber.c	FUNCTION_68	FUNCTION_20
0x40074a2	              0x55	                                push rbp	      1268	decNumber.c	FUNCTION_68	FUNCTION_20
0x40074a3	              0x53	                                push rbx	      1268	decNumber.c	FUNCTION_68	FUNCTION_20
0x40074a4	        0x4883ec10	                           sub rsp, 0x10	      1268	decNumber.c	FUNCTION_68	FUNCTION_20
0x40074a8	          0x4889fb	                            mov rbx, rdi	      1268	decNumber.c	FUNCTION_68	FUNCTION_20
0x40074ab	          0x4989f4	                            mov r12, rsi	      1268	decNumber.c	FUNCTION_68	FUNCTION_20
0x40074ae	          0x4889d5	                            mov rbp, rdx	      1268	decNumber.c	FUNCTION_68	FUNCTION_20
0x40074b1	    0x64488b042528	                mov rax, qword fs:[0x28]	      1268	decNumber.c	FUNCTION_68	FUNCTION_20
0x40074ba	      0x4889442408	                mov qword [rsp + 8], rax	      1268	decNumber.c	FUNCTION_68	FUNCTION_20
0x40074bf	            0x31c0	                            xor eax, eax	      1268	decNumber.c	FUNCTION_68	FUNCTION_20
0x40074c1	    0xc74424040000	                  mov dword [rsp + 4], 0	      1269	decNumber.c	FUNCTION_68	FUNCTION_20
0x40074c9	      0x488d542404	                      lea rdx, [rsp + 4]	      1280	decNumber.c	FUNCTION_68	FUNCTION_20	IF_2	DO_1
0x40074ce	          0x4889ee	                            mov rsi, rbp	      1280	decNumber.c	FUNCTION_68	FUNCTION_20	IF_2	DO_1
0x40074d1	          0x4c89e7	                            mov rdi, r12	      1280	decNumber.c	FUNCTION_68	FUNCTION_20	IF_2	DO_1
0x40074d4	      0xe86b96ffff	                   call sym.decCheckMath	      1280	decNumber.c	FUNCTION_68	FUNCTION_20	IF_2	DO_1
0x40074d9	            0x85c0	                           test eax, eax	      1280	decNumber.c	FUNCTION_68	FUNCTION_20	IF_2	DO_1
0x40074db	            0x7513	                           jne 0x40074f0	      1280	decNumber.c	FUNCTION_68	FUNCTION_20	IF_2	DO_1
0x40074dd	      0x488d4c2404	                      lea rcx, [rsp + 4]	      1295	decNumber.c	FUNCTION_68	FUNCTION_20	IF_2	DO_1	CALL_5
0x40074e2	          0x4889ea	                            mov rdx, rbp	      1295	decNumber.c	FUNCTION_68	FUNCTION_20	IF_2	DO_1	CALL_5
0x40074e5	          0x4c89e6	                            mov rsi, r12	      1295	decNumber.c	FUNCTION_68	FUNCTION_20	IF_2	DO_1	CALL_5
0x40074e8	          0x4889df	                            mov rdi, rbx	      1295	decNumber.c	FUNCTION_68	FUNCTION_20	IF_2	DO_1	CALL_5
0x40074eb	      0xe838f9ffff	                        call sym.decLnOp	      1295	decNumber.c	FUNCTION_68	FUNCTION_20	IF_2	DO_1	CALL_5
0x40074f0	        0x8b742404	                mov esi, dword [rsp + 4]	      1302	decNumber.c	FUNCTION_68	FUNCTION_20	CALL_6
0x40074f4	            0x85f6	                           test esi, esi	      1302	decNumber.c	FUNCTION_68	FUNCTION_20	CALL_6
0x40074f6	            0x740b	                            je 0x4007503	      1302	decNumber.c	FUNCTION_68	FUNCTION_20	CALL_6
0x40074f8	          0x4889ea	                            mov rdx, rbp	      1302	decNumber.c	FUNCTION_68	FUNCTION_20	CALL_6
0x40074fb	          0x4889df	                            mov rdi, rbx	      1302	decNumber.c	FUNCTION_68	FUNCTION_20	CALL_6
0x40074fe	      0xe819a1ffff	                      call sym.decStatus	      1302	decNumber.c	FUNCTION_68	FUNCTION_20	CALL_6
0x4007503	          0x4889d8	                            mov rax, rbx	      1307	decNumber.c	FUNCTION_68	FUNCTION_20
0x4007506	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1307	decNumber.c	FUNCTION_68	FUNCTION_20
0x400750b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1307	decNumber.c	FUNCTION_68	FUNCTION_20
0x4007514	            0x7405	                            je 0x400751b	      1307	decNumber.c	FUNCTION_68	FUNCTION_20
0x4007516	      0xe800000000	                          call 0x400751b	      1307	decNumber.c	FUNCTION_68	FUNCTION_20
0x400751b	        0x4883c410	                           add rsp, 0x10	      1307	decNumber.c	FUNCTION_68	FUNCTION_20
0x400751f	              0x5b	                                 pop rbx	      1307	decNumber.c	FUNCTION_68	FUNCTION_20
0x4007520	              0x5d	                                 pop rbp	      1307	decNumber.c	FUNCTION_68	FUNCTION_20
0x4007521	            0x415c	                                 pop r12	      1307	decNumber.c	FUNCTION_68	FUNCTION_20
0x4007523	              0xc3	                                     ret	      1307	decNumber.c	FUNCTION_68	FUNCTION_20
decNumberRotate	SWITCH,0:functions,0:ELSE,4:DO,0:FOR,1:IF,11:CALL,20:WHILE,0	235
0x400408d	            0x4157	                                push r15	      2456	decNumber.c	FUNCTION_68	FUNCTION_41
0x400408f	            0x4156	                                push r14	      2456	decNumber.c	FUNCTION_68	FUNCTION_41
0x4004091	            0x4155	                                push r13	      2456	decNumber.c	FUNCTION_68	FUNCTION_41
0x4004093	            0x4154	                                push r12	      2456	decNumber.c	FUNCTION_68	FUNCTION_41
0x4004095	              0x55	                                push rbp	      2456	decNumber.c	FUNCTION_68	FUNCTION_41
0x4004096	              0x53	                                push rbx	      2456	decNumber.c	FUNCTION_68	FUNCTION_41
0x4004097	        0x4883ec38	                           sub rsp, 0x38	      2456	decNumber.c	FUNCTION_68	FUNCTION_41
0x400409b	          0x4889fb	                            mov rbx, rdi	      2456	decNumber.c	FUNCTION_68	FUNCTION_41
0x400409e	          0x4989f5	                            mov r13, rsi	      2456	decNumber.c	FUNCTION_68	FUNCTION_41
0x40040a1	          0x4889cd	                            mov rbp, rcx	      2456	decNumber.c	FUNCTION_68	FUNCTION_41
0x40040a4	    0x64488b042528	                mov rax, qword fs:[0x28]	      2456	decNumber.c	FUNCTION_68	FUNCTION_41
0x40040ad	      0x4889442428	             mov qword [rsp + 0x28], rax	      2456	decNumber.c	FUNCTION_68	FUNCTION_41
0x40040b2	            0x31c0	                            xor eax, eax	      2456	decNumber.c	FUNCTION_68	FUNCTION_41
0x40040b4	    0xc74424240000	               mov dword [rsp + 0x24], 0	      2457	decNumber.c	FUNCTION_68	FUNCTION_41
0x40040bc	        0xf6460830	               test byte [rsi + 8], 0x30	      2465	decNumber.c	FUNCTION_68	FUNCTION_41	IF_2	CALL_3
0x40040c0	            0x7508	                           jne 0x40040ca	      2465	decNumber.c	FUNCTION_68	FUNCTION_41	IF_2	CALL_3
0x40040c2	         0xfb64208	               movzx eax, byte [rdx + 8]	      2465	decNumber.c	FUNCTION_68	FUNCTION_41	IF_2	CALL_3
0x40040c6	            0xa830	                           test al, 0x30	      2465	decNumber.c	FUNCTION_68	FUNCTION_41	IF_2	CALL_3
0x40040c8	            0x7418	                            je 0x40040e2	      2465	decNumber.c	FUNCTION_68	FUNCTION_41	IF_2	CALL_3
0x40040ca	      0x4c8d442424	                    lea r8, [rsp + 0x24]	      2466	decNumber.c	FUNCTION_68	FUNCTION_41	CALL_4
0x40040cf	          0x4889e9	                            mov rcx, rbp	      2466	decNumber.c	FUNCTION_68	FUNCTION_41	CALL_4
0x40040d2	          0x4c89ee	                            mov rsi, r13	      2466	decNumber.c	FUNCTION_68	FUNCTION_41	CALL_4
0x40040d5	          0x4889df	                            mov rdi, rbx	      2466	decNumber.c	FUNCTION_68	FUNCTION_41	CALL_4
0x40040d8	      0xe80fedffff	                        call sym.decNaNs	      2466	decNumber.c	FUNCTION_68	FUNCTION_41	CALL_4
0x40040dd	      0xe978020000	                           jmp 0x400435a	      2466	decNumber.c	FUNCTION_68	FUNCTION_41	CALL_4
0x40040e2	            0xa840	                           test al, 0x40	      2468	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_1	IF_3	CALL_5
0x40040e4	            0x7506	                           jne 0x40040ec	      2468	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_1	IF_3	CALL_5
0x40040e6	        0x837a0400	                  cmp dword [rdx + 4], 0	      2468	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_1	IF_3	CALL_5
0x40040ea	            0x740d	                            je 0x40040f9	      2468	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_1	IF_3	CALL_5
0x40040ec	    0xc74424248000	           mov dword [rsp + 0x24], 0x80 	      2469	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_1	IF_3
0x40040f4	      0xe9cf020000	                           jmp 0x40043c8	      2469	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_1	IF_3
0x40040f9	          0x4889d7	                            mov rdi, rdx	      2471	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	CALL_6
0x40040fc	      0xe8abcaffff	                      call sym.decGetInt	      2471	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	CALL_6
0x4004101	          0x4189c4	                           mov r12d, eax	      2471	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	CALL_6
0x4004104	    0x8d80feffff7f	             lea eax, [rax + 0x7ffffffe]	      2473	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	IF_4
0x400410a	          0x83f801	                              cmp eax, 1	      2473	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	IF_4
0x400410d	            0x761b	                           jbe 0x400412a	      2473	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	IF_4
0x400410f	    0x4181fc000000	                    cmp r12d, 0x80000000	      2473	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	IF_4
0x4004116	            0x7412	                            je 0x400412a	      2473	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	IF_4
0x4004118	          0x4489e2	                           mov edx, r12d	      2474	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	IF_4	CALL_7
0x400411b	          0xc1fa1f	                           sar edx, 0x1f	      2474	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	IF_4	CALL_7
0x400411e	            0x89d0	                            mov eax, edx	      2474	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	IF_4	CALL_7
0x4004120	          0x4431e0	                           xor eax, r12d	      2474	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	IF_4	CALL_7
0x4004123	            0x29d0	                            sub eax, edx	      2474	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	IF_4	CALL_7
0x4004125	          0x3b4500	                    cmp eax, dword [rbp]	      2474	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	IF_4	CALL_7
0x4004128	            0x7e0d	                           jle 0x4004137	      2474	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	IF_4	CALL_7
0x400412a	    0xc74424248000	           mov dword [rsp + 0x24], 0x80 	      2475	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	IF_4
0x4004132	      0xe991020000	                           jmp 0x40043c8	      2475	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	IF_4
0x4004137	          0x4c89ee	                            mov rsi, r13	      2477	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	CALL_8
0x400413a	          0x4889df	                            mov rdi, rbx	      2477	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	CALL_8
0x400413d	      0xe800000000	                          call 0x4004142	      2477	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	CALL_8
0x4004142	          0x4585e4	                         test r12d, r12d	      2479	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_5
0x4004145	            0x7904	                           jns 0x400414b	      2479	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_5
0x4004147	        0x44036500	                   add r12d, dword [rbp]	      2479	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_5
0x400414b	          0x4585e4	                         test r12d, r12d	      2480	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x400414e	     0xf8406020000	                            je 0x400435a	      2480	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x4004154	        0x448b6d00	                   mov r13d, dword [rbp]	      2480	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x4004158	          0x4539ec	                          cmp r12d, r13d	      2480	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x400415b	     0xf84f9010000	                            je 0x400435a	      2480	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x4004161	        0xf6430840	               test byte [rbx + 8], 0x40	      2481	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_9
0x4004165	     0xf85ef010000	                           jne 0x400435a	      2481	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_9
0x400416b	        0x4c8d7b0a	                    lea r15, [rbx + 0xa]	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x400416f	            0x8b03	                    mov eax, dword [rbx]	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x4004171	          0x83f831	                           cmp eax, 0x31	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x4004174	            0x7f10	                            jg 0x4004186	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x4004176	            0x4898	                                    cdqe	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x4004178	     0xfb680000000	                   movzx eax, byte [rax]	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x400417f	      0x488d4c00fe	                lea rcx, [rax + rax - 2]	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x4004184	            0xeb12	                           jmp 0x4004198	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x4004186	          0x83c002	                              add eax, 2	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x4004189	      0xb903000000	                              mov ecx, 3	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x400418e	              0x99	                                     cdq	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x400418f	            0xf7f9	                                idiv ecx	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x4004191	            0x4898	                                    cdqe	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x4004193	      0x488d4c00fe	                lea rcx, [rax + rax - 2]	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x4004198	        0x4183fd31	                          cmp r13d, 0x31	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x400419c	            0x7f27	                            jg 0x40041c5	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x400419e	          0x4963c5	                        movsxd rax, r13d	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x40041a1	     0xfb680000000	                   movzx eax, byte [rax]	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x40041a8	      0x488d4400fe	                lea rax, [rax + rax - 2]	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x40041ad	      0x4889442410	             mov qword [rsp + 0x10], rax	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x40041b2	        0x4d8d3407	                    lea r14, [r15 + rax]	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x40041b6	      0x498d440f02	                lea rax, [r15 + rcx + 2]	      2487	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	FOR_1
0x40041bb	          0x4939c6	                            cmp r14, rax	      2487	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	FOR_1
0x40041be	            0x732f	                           jae 0x40041ef	      2487	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	FOR_1
0x40041c0	      0xe9bd010000	                           jmp 0x4004382	      2487	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	FOR_1
0x40041c5	        0x418d4502	                      lea eax, [r13 + 2]	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x40041c9	      0xbe03000000	                              mov esi, 3	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x40041ce	              0x99	                                     cdq	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x40041cf	            0xf7fe	                                idiv esi	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x40041d1	            0x4898	                                    cdqe	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x40041d3	      0x488d4400fe	                lea rax, [rax + rax - 2]	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x40041d8	      0x4889442410	             mov qword [rsp + 0x10], rax	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x40041dd	        0x4d8d3407	                    lea r14, [r15 + rax]	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x40041e1	      0x498d440f02	                lea rax, [r15 + rcx + 2]	      2487	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	FOR_1
0x40041e6	          0x4939c6	                            cmp r14, rax	      2487	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	FOR_1
0x40041e9	     0xf829b010000	                            jb 0x400438a	      2487	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	FOR_1
0x40041ef	      0x66c7000000	                       mov word [rax], 0	      2487	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	FOR_1
0x40041f4	        0x4883c002	                              add rax, 2	      2487	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	FOR_1
0x40041f8	          0x4c39f0	                            cmp rax, r14	      2487	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	FOR_1
0x40041fb	            0x76f2	                           jbe 0x40041ef	      2487	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	FOR_1
0x40041fd	        0x448b6d00	                   mov r13d, dword [rbp]	      2488	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x4004201	          0x44892b	                   mov dword [rbx], r13d	      2488	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x4004204	        0x4183fd31	                          cmp r13d, 0x31	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x4004208	            0x7f3b	                            jg 0x4004245	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x400420a	          0x4963c5	                        movsxd rax, r13d	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x400420d	     0xfb6b0000000	                   movzx esi, byte [rax]	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x4004214	          0x8d46ff	                      lea eax, [rsi - 1]	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x4004217	          0x6bc003	                        imul eax, eax, 3	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x400421a	          0x4129c5	                           sub r13d, eax	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x400421d	          0x8b4500	                    mov eax, dword [rbp]	      2522	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x4004220	          0x4429e0	                           sub eax, r12d	      2522	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x4004223	      0xb903000000	                              mov ecx, 3	      2523	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x4004228	              0x99	                                     cdq	      2523	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x4004229	            0xf7f9	                                idiv ecx	      2523	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x400422b	        0x8944241c	             mov dword [rsp + 0x1c], eax	      2523	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x400422f	        0x8944240c	              mov dword [rsp + 0xc], eax	      2523	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x4004233	            0x89d1	                            mov ecx, edx	      2524	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x4004235	          0x4189d4	                           mov r12d, edx	      2524	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x4004238	            0x85d2	                           test edx, edx	      2525	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7
0x400423a	     0xf8495000000	                            je 0x40042d5	      2525	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7
0x4004240	      0xe94d010000	                           jmp 0x4004392	      2525	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7
0x4004245	        0x418d4502	                      lea eax, [r13 + 2]	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x4004249	      0xb903000000	                              mov ecx, 3	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x400424e	              0x99	                                     cdq	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x400424f	            0xf7f9	                                idiv ecx	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x4004251	            0x89c6	                            mov esi, eax	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x4004253	          0x83e801	                              sub eax, 1	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x4004256	          0x6bc003	                        imul eax, eax, 3	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x4004259	          0x4129c5	                           sub r13d, eax	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x400425c	          0x8b4500	                    mov eax, dword [rbp]	      2522	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x400425f	          0x4429e0	                           sub eax, r12d	      2522	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x4004262	              0x99	                                     cdq	      2523	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x4004263	            0xf7f9	                                idiv ecx	      2523	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x4004265	        0x8944241c	             mov dword [rsp + 0x1c], eax	      2523	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x4004269	        0x8944240c	              mov dword [rsp + 0xc], eax	      2523	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x400426d	            0x89d1	                            mov ecx, edx	      2524	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x400426f	          0x4189d4	                           mov r12d, edx	      2524	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x4004272	            0x85d2	                           test edx, edx	      2525	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7
0x4004274	     0xf8533010000	                           jne 0x40043ad	      2525	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7
0x400427a	            0xeb59	                           jmp 0x40042d5	      2525	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7
0x400427c	            0x89ca	                            mov edx, ecx	      2527	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	CALL_14
0x400427e	          0x4c89ff	                            mov rdi, r15	      2527	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	CALL_14
0x4004281	      0xe8a2c2ffff	                call sym.decShiftToLeast	      2527	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	CALL_14
0x4004286	          0x4539e5	                          cmp r13d, r12d	      2528	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x4004289	            0x7333	                           jae 0x40042be	      2528	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x400428b	          0x4489e2	                           mov edx, r12d	      2529	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x400428e	          0x4429ea	                           sub edx, r13d	      2529	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x4004291	          0x4889d7	                            mov rdi, rdx	      2529	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x4004294	        0x8b442418	            mov eax, dword [rsp + 0x18] 	      2530	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x4004298	      0xba00000000	                              mov edx, 0	      2530	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x400429d	    0xf734bd000000	                       div dword [rdi*4]	      2530	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x40042a4	        0x66418906	                      mov word [r14], ax	      2530	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x40042a8	        0x418d4503	                      lea eax, [r13 + 3]	      2532	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x40042ac	          0x4429e0	                           sub eax, r12d	      2532	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x40042af	     0xfaf14850000	                 imul edx, dword [rax*4]	      2531	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x40042b7	      0x66410156fe	                  add word [r14 - 2], dx	      2531	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x40042bc	            0xeb17	                           jmp 0x40042d5	      2531	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x40042be	          0x4489e8	                           mov eax, r13d	      2535	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	ELSE_4
0x40042c1	          0x4429e0	                           sub eax, r12d	      2535	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	ELSE_4
0x40042c4	       0xfb77c2418	           movzx edi, word [rsp + 0x18] 	      2535	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	ELSE_4
0x40042c9	     0xfaf3c850000	                 imul edi, dword [rax*4]	      2535	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	ELSE_4
0x40042d1	        0x6641013e	                      add word [r14], di	      2535	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	ELSE_4
0x40042d5	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      2540	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9
0x40042da	            0x7469	                            je 0x4004345	      2540	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9
0x40042dc	      0xb903000000	                              mov ecx, 3	      2544	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9
0x40042e1	          0x4429e9	                           sub ecx, r13d	      2545	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10
0x40042e4	            0x7433	                            je 0x4004319	      2545	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10
0x40042e6	         0xfb7430a	            movzx eax, word [rbx + 0xa] 	      2546	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10
0x40042ea	            0x89cf	                            mov edi, ecx	      2546	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10
0x40042ec	      0xba00000000	                              mov edx, 0	      2546	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10
0x40042f1	    0xf734bd000000	                       div dword [rdi*4]	      2546	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10
0x40042f8	          0x4189d4	                           mov r12d, edx	      2546	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10
0x40042fb	            0x89ca	                            mov edx, ecx	      2547	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10	CALL_15
0x40042fd	        0x8b74241c	            mov esi, dword [rsp + 0x1c] 	      2547	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10	CALL_15
0x4004301	          0x4c89ff	                            mov rdi, r15	      2547	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10	CALL_15
0x4004304	      0xe81fc2ffff	                call sym.decShiftToLeast	      2547	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10	CALL_15
0x4004309	          0x4589ed	                          mov r13d, r13d	      2548	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10
0x400430c	    0x460faf24ad00	                imul r12d, dword [r13*4]	      2548	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10
0x4004315	        0x66450126	                    add word [r14], r12w	      2548	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10
0x4004319	      0x448b64240c	            mov r12d, dword [rsp + 0xc] 	      2553	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	CALL_16
0x400431e	          0x4d01e4	                            add r12, r12	      2553	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	CALL_16
0x4004321	        0x4b8d3c27	                    lea rdi, [r15 + r12]	      2553	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	CALL_16
0x4004325	          0x4c89f6	                            mov rsi, r14	      2553	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	CALL_16
0x4004328	      0xe819c0ffff	                     call sym.decReverse	      2553	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	CALL_16
0x400432d	      0x4b8d7427fe	                lea rsi, [r15 + r12 - 2]	      2554	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	CALL_17
0x4004332	          0x4c89ff	                            mov rdi, r15	      2554	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	CALL_17
0x4004335	      0xe80cc0ffff	                     call sym.decReverse	      2554	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	CALL_17
0x400433a	          0x4c89f6	                            mov rsi, r14	      2555	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	CALL_18
0x400433d	          0x4c89ff	                            mov rdi, r15	      2555	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	CALL_18
0x4004340	      0xe801c0ffff	                     call sym.decReverse	      2555	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	CALL_18
0x4004345	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      2559	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_19
0x400434a	          0x48d1fe	                              sar rsi, 1	      2559	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_19
0x400434d	          0x83c601	                              add esi, 1	      2559	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_19
0x4004350	          0x4c89ff	                            mov rdi, r15	      2559	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_19
0x4004353	      0xe88fc9ffff	                   call sym.decGetDigits	      2559	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_19
0x4004358	            0x8903	                    mov dword [rbx], eax	      2559	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_19
0x400435a	        0x8b742424	            mov esi, dword [rsp + 0x24] 	      2563	decNumber.c	FUNCTION_68	FUNCTION_41	CALL_20
0x400435e	            0x85f6	                           test esi, esi	      2563	decNumber.c	FUNCTION_68	FUNCTION_41	CALL_20
0x4004360	            0x740b	                            je 0x400436d	      2563	decNumber.c	FUNCTION_68	FUNCTION_41	CALL_20
0x4004362	          0x4889ea	                            mov rdx, rbp	      2563	decNumber.c	FUNCTION_68	FUNCTION_41	CALL_20
0x4004365	          0x4889df	                            mov rdi, rbx	      2563	decNumber.c	FUNCTION_68	FUNCTION_41	CALL_20
0x4004368	      0xe8afd2ffff	                      call sym.decStatus	      2563	decNumber.c	FUNCTION_68	FUNCTION_41	CALL_20
0x400436d	          0x4889d8	                            mov rax, rbx	      2565	decNumber.c	FUNCTION_68	FUNCTION_41
0x4004370	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      2565	decNumber.c	FUNCTION_68	FUNCTION_41
0x4004375	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2565	decNumber.c	FUNCTION_68	FUNCTION_41
0x400437e	            0x7453	                            je 0x40043d3	      2565	decNumber.c	FUNCTION_68	FUNCTION_41
0x4004380	            0xeb4c	                           jmp 0x40043ce	      2565	decNumber.c	FUNCTION_68	FUNCTION_41
0x4004382	          0x44892b	                   mov dword [rbx], r13d	      2488	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x4004385	      0xe980feffff	                           jmp 0x400420a	      2488	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x400438a	          0x44892b	                   mov dword [rbx], r13d	      2488	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x400438d	      0xe9b3feffff	                           jmp 0x4004245	      2488	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x4004392	         0xfb7430a	            movzx eax, word [rbx + 0xa] 	      2526	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7
0x4004396	            0x89d7	                            mov edi, edx	      2526	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7
0x4004398	      0xba00000000	                              mov edx, 0	      2526	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7
0x400439d	    0xf734bd000000	                       div dword [rdi*4]	      2526	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7
0x40043a4	        0x89542418	             mov dword [rsp + 0x18], edx	      2526	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7
0x40043a8	      0xe9cffeffff	                           jmp 0x400427c	      2526	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7
0x40043ad	         0xfb7430a	            movzx eax, word [rbx + 0xa] 	      2526	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7
0x40043b1	            0x89d7	                            mov edi, edx	      2526	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7
0x40043b3	      0xba00000000	                              mov edx, 0	      2526	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7
0x40043b8	    0xf734bd000000	                       div dword [rdi*4]	      2526	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7
0x40043bf	        0x89542418	             mov dword [rsp + 0x18], edx	      2526	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7
0x40043c3	      0xe9b4feffff	                           jmp 0x400427c	      2526	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7
0x40043c8	        0x8b742424	            mov esi, dword [rsp + 0x24] 	      2563	decNumber.c	FUNCTION_68	FUNCTION_41	CALL_20
0x40043cc	            0xeb94	                           jmp 0x4004362	      2563	decNumber.c	FUNCTION_68	FUNCTION_41	CALL_20
0x40043ce	      0xe800000000	                          call 0x40043d3	      2565	decNumber.c	FUNCTION_68	FUNCTION_41
0x40043d3	        0x4883c438	                           add rsp, 0x38	      2565	decNumber.c	FUNCTION_68	FUNCTION_41
0x40043d7	              0x5b	                                 pop rbx	      2565	decNumber.c	FUNCTION_68	FUNCTION_41
0x40043d8	              0x5d	                                 pop rbp	      2565	decNumber.c	FUNCTION_68	FUNCTION_41
0x40043d9	            0x415c	                                 pop r12	      2565	decNumber.c	FUNCTION_68	FUNCTION_41
0x40043db	            0x415d	                                 pop r13	      2565	decNumber.c	FUNCTION_68	FUNCTION_41
0x40043dd	            0x415e	                                 pop r14	      2565	decNumber.c	FUNCTION_68	FUNCTION_41
0x40043df	            0x415f	                                 pop r15	      2565	decNumber.c	FUNCTION_68	FUNCTION_41
0x40043e1	              0xc3	                                     ret	      2565	decNumber.c	FUNCTION_68	FUNCTION_41
decAddOp	SWITCH,0:functions,0:ELSE,8:DO,1:FOR,0:IF,49:CALL,44:WHILE,0	521
0x400468c	            0x4157	                                push r15	      3799	decNumber.c	FUNCTION_68	FUNCTION_64
0x400468e	            0x4156	                                push r14	      3799	decNumber.c	FUNCTION_68	FUNCTION_64
0x4004690	            0x4155	                                push r13	      3799	decNumber.c	FUNCTION_68	FUNCTION_64
0x4004692	            0x4154	                                push r12	      3799	decNumber.c	FUNCTION_68	FUNCTION_64
0x4004694	              0x55	                                push rbp	      3799	decNumber.c	FUNCTION_68	FUNCTION_64
0x4004695	              0x53	                                push rbx	      3799	decNumber.c	FUNCTION_68	FUNCTION_64
0x4004696	    0x4881ec980000	                           sub rsp, 0x98	      3799	decNumber.c	FUNCTION_68	FUNCTION_64
0x400469d	          0x4889fb	                            mov rbx, rdi	      3799	decNumber.c	FUNCTION_68	FUNCTION_64
0x40046a0	          0x4889f5	                            mov rbp, rsi	      3799	decNumber.c	FUNCTION_68	FUNCTION_64
0x40046a3	          0x4989d4	                            mov r12, rdx	      3799	decNumber.c	FUNCTION_68	FUNCTION_64
0x40046a6	          0x4989cf	                            mov r15, rcx	      3799	decNumber.c	FUNCTION_68	FUNCTION_64
0x40046a9	          0x4589c6	                           mov r14d, r8d	      3799	decNumber.c	FUNCTION_68	FUNCTION_64
0x40046ac	      0x4c894c2408	                 mov qword [rsp + 8], r9	      3799	decNumber.c	FUNCTION_68	FUNCTION_64
0x40046b1	    0x64488b042528	                mov rax, qword fs:[0x28]	      3799	decNumber.c	FUNCTION_68	FUNCTION_64
0x40046ba	    0x488984248800	             mov qword [rsp + 0x88], rax	      3799	decNumber.c	FUNCTION_68	FUNCTION_64
0x40046c2	            0x31c0	                            xor eax, eax	      3799	decNumber.c	FUNCTION_68	FUNCTION_64
0x40046c4	      0x440fb66e08	              movzx r13d, byte [rsi + 8]	      3841	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x40046c9	         0xfb64208	               movzx eax, byte [rdx + 8]	      3841	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x40046cd	          0x4489ea	                           mov edx, r13d	      3841	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x40046d0	            0x31c2	                            xor edx, eax	      3841	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x40046d2	          0x4431c2	                            xor edx, r8d	      3841	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x40046d5	          0x83e280	                     and edx, 0xffffff80	      3841	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x40046d8	        0x8854241b	               mov byte [rsp + 0x1b], dl	      3841	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x40046dc	          0x4489ea	                           mov edx, r13d	      3844	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7
0x40046df	             0x9c2	                             or edx, eax	      3844	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7
0x40046e1	          0xf6c270	                           test dl, 0x70	      3844	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7
0x40046e4	     0xf8481000000	                            je 0x400476b	      3844	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7
0x40046ea	          0xf6c230	                           test dl, 0x30	      3845	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	IF_8
0x40046ed	            0x7419	                            je 0x4004708	      3845	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	IF_8
0x40046ef	          0x4d89c8	                              mov r8, r9	      3846	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	CALL_5
0x40046f2	          0x4c89e2	                            mov rdx, r12	      3846	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	CALL_5
0x40046f5	      0xe8f2e6ffff	                        call sym.decNaNs	      3846	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	CALL_5
0x40046fa	    0x48c744241000	               mov qword [rsp + 0x10], 0	      3814	decNumber.c	FUNCTION_68	FUNCTION_64
0x4004703	      0xe9c2060000	                           jmp 0x4004dca	      3814	decNumber.c	FUNCTION_68	FUNCTION_64
0x4004708	        0x41f6c540	                         test r13b, 0x40	      3848	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	IF_9	CALL_6
0x400470c	            0x742a	                            je 0x4004738	      3848	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	IF_9	CALL_6
0x400470e	            0xa840	                           test al, 0x40	      3850	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	IF_9	IF_10	CALL_7
0x4004710	            0x7420	                            je 0x4004732	      3850	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	IF_9	IF_10	CALL_7
0x4004712	      0x807c241b00	                cmp byte [rsp + 0x1b], 0	      3850	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	IF_9	IF_10	CALL_7
0x4004717	            0x7419	                            je 0x4004732	      3850	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	IF_9	IF_10	CALL_7
0x4004719	      0x488b442408	                mov rax, qword [rsp + 8]	      3851	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	IF_9	IF_10
0x400471e	    0x810880000000	                    or dword [rax], 0x80	      3851	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	IF_9	IF_10
0x4004724	    0x48c744241000	               mov qword [rsp + 0x10], 0	      3814	decNumber.c	FUNCTION_68	FUNCTION_64
0x400472d	      0xe998060000	                           jmp 0x4004dca	      3852	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	IF_9	IF_10
0x4004732	        0x4183e580	                    and r13d, 0xffffff80	      3854	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	IF_9
0x4004736	            0xeb0a	                           jmp 0x4004742	      3854	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	IF_9
0x4004738	          0x4431c0	                            xor eax, r8d	      3856	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	ELSE_2
0x400473b	          0x4189c5	                           mov r13d, eax	      3856	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	ELSE_2
0x400473e	        0x4183e580	                    and r13d, 0xffffff80	      3856	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	ELSE_2
0x4004742	    0xc74304000000	                  mov dword [rbx + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4004749	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x400474f	    0x66c7430a0000	                 mov word [rbx + 0xa], 0	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4004755	        0x4183cd40	                           or r13d, 0x40	      3859	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1
0x4004759	        0x44886b08	                mov byte [rbx + 8], r13b	      3859	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1
0x400475d	    0x48c744241000	               mov qword [rsp + 0x10], 0	      3814	decNumber.c	FUNCTION_68	FUNCTION_64
0x4004766	      0xe95f060000	                           jmp 0x4004dca	      3814	decNumber.c	FUNCTION_68	FUNCTION_64
0x400476b	         0xfb77e0a	            movzx edi, word [rsi + 0xa] 	      3865	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	CALL_9
0x400476f	      0x66897c2410	               mov word [rsp + 0x10], di	      3865	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	CALL_9
0x4004774	          0x6685ff	                             test di, di	      3865	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	CALL_9
0x4004777	     0xf85d9000000	                           jne 0x4004856	      3865	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	CALL_9
0x400477d	          0x833e01	                      cmp dword [rsi], 1	      3865	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	CALL_9
0x4004780	     0xf85d0000000	                           jne 0x4004856	      3865	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	CALL_9
0x4004786	        0x41f6c570	                         test r13b, 0x70	      3865	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	CALL_9
0x400478a	     0xf85c6000000	                           jne 0x4004856	      3865	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	CALL_9
0x4004790	          0x8b6e04	                mov ebp, dword [rsi + 4]	      3867	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11
0x4004793	    0xc744243c0000	               mov dword [rsp + 0x3c], 0	      3869	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11
0x400479b	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      3870	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	CALL_10
0x40047a0	      0x488d4c243c	                   lea rcx, [rsp + 0x3c]	      3870	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	CALL_10
0x40047a5	          0x4c89fa	                            mov rdx, r15	      3870	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	CALL_10
0x40047a8	          0x4c89e6	                            mov rsi, r12	      3870	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	CALL_10
0x40047ab	          0x4889df	                            mov rdi, rbx	      3870	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	CALL_10
0x40047ae	      0xe82ec3ffff	                     call sym.decCopyFit	      3870	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	CALL_10
0x40047b3	        0x44327308	                xor r14b, byte [rbx + 8]	      3871	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11
0x40047b7	        0x44887308	                mov byte [rbx + 8], r14b	      3871	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11
0x40047bb	          0x4189ec	                           mov r12d, ebp	      3876	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12
0x40047be	        0x442b6304	               sub r12d, dword [rbx + 4]	      3876	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12
0x40047c2	      0x66837b0a00	                 cmp word [rbx + 0xa], 0	      3877	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	CALL_11
0x40047c7	            0x7531	                           jne 0x40047fa	      3877	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	CALL_11
0x40047c9	          0x833b01	                      cmp dword [rbx], 1	      3877	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	CALL_11
0x40047cc	            0x752c	                           jne 0x40047fa	      3877	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	CALL_11
0x40047ce	        0x41f6c670	                         test r14b, 0x70	      3877	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	CALL_11
0x40047d2	            0x7526	                           jne 0x40047fa	      3877	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	CALL_11
0x40047d4	          0x4585e4	                         test r12d, r12d	      3878	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_14
0x40047d7	            0x7903	                           jns 0x40047dc	      3878	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_14
0x40047d9	          0x896b04	                mov dword [rbx + 4], ebp	      3878	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_14
0x40047dc	      0x807c241b00	                cmp byte [rsp + 0x1b], 0	      3880	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_15
0x40047e1	            0x7450	                            je 0x4004833	      3880	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_15
0x40047e3	      0x41837f0c06	                cmp dword [r15 + 0xc], 6	      3881	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_15	IF_16
0x40047e8	      0xba00000000	                              mov edx, 0	      3881	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_15	IF_16
0x40047ed	      0xb880ffffff	                     mov eax, 0xffffff80	      3881	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_15	IF_16
0x40047f2	           0xf45c2	                         cmovne eax, edx	      3881	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_15	IF_16
0x40047f5	          0x884308	                  mov byte [rbx + 8], al	      3881	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_15	IF_16
0x40047f8	            0xeb39	                           jmp 0x4004833	      3881	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_15	IF_16
0x40047fa	          0x4585e4	                         test r12d, r12d	      3886	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17
0x40047fd	            0x7934	                           jns 0x4004833	      3886	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17
0x40047ff	            0x8b13	                    mov edx, dword [rbx]	      3887	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17	IF_18
0x4004801	          0x418b07	                    mov eax, dword [r15]	      3887	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17	IF_18
0x4004804	            0x89d1	                            mov ecx, edx	      3887	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17	IF_18
0x4004806	          0x4429e1	                           sub ecx, r12d	      3887	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17	IF_18
0x4004809	            0x39c1	                            cmp ecx, eax	      3887	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17	IF_18
0x400480b	            0x7e10	                           jle 0x400481d	      3887	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17	IF_18
0x400480d	            0x29c2	                            sub edx, eax	      3888	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17	IF_18
0x400480f	          0x4189d4	                           mov r12d, edx	      3888	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17	IF_18
0x4004812	      0x488b442408	                mov rax, qword [rsp + 8]	      3889	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17	IF_18
0x4004817	    0x810800080000	                   or dword [rax], 0x800	      3889	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17	IF_18
0x400481d	          0x4489e2	                           mov edx, r12d	      3891	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17	CALL_12
0x4004820	            0xf7da	                                 neg edx	      3891	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17	CALL_12
0x4004822	        0x488d7b0a	                    lea rdi, [rbx + 0xa]	      3891	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17	CALL_12
0x4004826	            0x8b33	                    mov esi, dword [rbx]	      3891	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17	CALL_12
0x4004828	      0xe835bbffff	                 call sym.decShiftToMost	      3891	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17	CALL_12
0x400482d	            0x8903	                    mov dword [rbx], eax	      3891	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17	CALL_12
0x400482f	        0x44016304	               add dword [rbx + 4], r12d	      3892	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17
0x4004833	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      3898	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11
0x4004838	      0x488d54243c	                   lea rdx, [rsp + 0x3c]	      3898	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11
0x400483d	          0x4c89fe	                            mov rsi, r15	      3898	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11
0x4004840	          0x4889df	                            mov rdi, rbx	      3898	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11
0x4004843	      0xe8bad2ffff	                    call sym.decFinalize	      3898	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11
0x4004848	    0x48c744241000	               mov qword [rsp + 0x10], 0	      3814	decNumber.c	FUNCTION_68	FUNCTION_64
0x4004851	      0xe974050000	                           jmp 0x4004dca	      3899	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11
0x4004856	          0x418b0f	                    mov ecx, dword [r15]	      3815	decNumber.c	FUNCTION_68	FUNCTION_64
0x4004859	        0x894c241c	             mov dword [rsp + 0x1c], ecx	      3815	decNumber.c	FUNCTION_68	FUNCTION_64
0x400485d	    0x410fb774240a	            movzx esi, word [r12 + 0xa] 	      3901	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	CALL_13
0x4004863	      0x6689742420	               mov word [rsp + 0x20], si	      3901	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	CALL_13
0x4004868	          0x6685f6	                             test si, si	      3901	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	CALL_13
0x400486b	     0xf8597000000	                           jne 0x4004908	      3901	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	CALL_13
0x4004871	        0x418b3424	                    mov esi, dword [r12]	      3901	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	CALL_13
0x4004875	          0x83fe01	                              cmp esi, 1	      3901	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	CALL_13
0x4004878	     0xf858a000000	                           jne 0x4004908	      3901	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	CALL_13
0x400487e	            0xa870	                           test al, 0x70	      3901	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	CALL_13
0x4004880	     0xf8566050000	                           jne 0x4004dec	      3901	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	CALL_13
0x4004886	      0x458b642404	               mov r12d, dword [r12 + 4]	      3903	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19
0x400488b	    0xc744243c0000	               mov dword [rsp + 0x3c], 0	      3905	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19
0x4004893	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      3906	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	CALL_14
0x4004898	      0x488d4c243c	                   lea rcx, [rsp + 0x3c]	      3906	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	CALL_14
0x400489d	          0x4c89fa	                            mov rdx, r15	      3906	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	CALL_14
0x40048a0	          0x4889ee	                            mov rsi, rbp	      3906	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	CALL_14
0x40048a3	          0x4889df	                            mov rdi, rbx	      3906	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	CALL_14
0x40048a6	      0xe836c2ffff	                     call sym.decCopyFit	      3906	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	CALL_14
0x40048ab	        0x442b6304	               sub r12d, dword [rbx + 4]	      3913	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21
0x40048af	            0x7934	                           jns 0x40048e5	      3913	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21
0x40048b1	            0x8b13	                    mov edx, dword [rbx]	      3914	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	IF_22
0x40048b3	          0x418b07	                    mov eax, dword [r15]	      3914	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	IF_22
0x40048b6	            0x89d1	                            mov ecx, edx	      3914	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	IF_22
0x40048b8	          0x4429e1	                           sub ecx, r12d	      3914	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	IF_22
0x40048bb	            0x39c1	                            cmp ecx, eax	      3914	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	IF_22
0x40048bd	            0x7e10	                           jle 0x40048cf	      3914	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	IF_22
0x40048bf	            0x29c2	                            sub edx, eax	      3915	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	IF_22
0x40048c1	          0x4189d4	                           mov r12d, edx	      3915	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	IF_22
0x40048c4	      0x488b442408	                mov rax, qword [rsp + 8]	      3916	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	IF_22
0x40048c9	    0x810800080000	                   or dword [rax], 0x800	      3916	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	IF_22
0x40048cf	          0x4489e2	                           mov edx, r12d	      3918	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	CALL_15
0x40048d2	            0xf7da	                                 neg edx	      3918	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	CALL_15
0x40048d4	        0x488d7b0a	                    lea rdi, [rbx + 0xa]	      3918	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	CALL_15
0x40048d8	            0x8b33	                    mov esi, dword [rbx]	      3918	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	CALL_15
0x40048da	      0xe883baffff	                 call sym.decShiftToMost	      3918	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	CALL_15
0x40048df	            0x8903	                    mov dword [rbx], eax	      3918	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	CALL_15
0x40048e1	        0x44016304	               add dword [rbx + 4], r12d	      3919	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21
0x40048e5	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      3924	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19
0x40048ea	      0x488d54243c	                   lea rdx, [rsp + 0x3c]	      3924	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19
0x40048ef	          0x4c89fe	                            mov rsi, r15	      3924	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19
0x40048f2	          0x4889df	                            mov rdi, rbx	      3924	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19
0x40048f5	      0xe808d2ffff	                    call sym.decFinalize	      3924	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19
0x40048fa	    0x48c744241000	               mov qword [rsp + 0x10], 0	      3814	decNumber.c	FUNCTION_68	FUNCTION_64
0x4004903	      0xe9c2040000	                           jmp 0x4004dca	      3925	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19
0x4004908	      0x418b542404	                mov edx, dword [r12 + 4]	      3931	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x400490d	            0x89d1	                            mov ecx, edx	      3936	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x400490f	          0x2b4d04	                sub ecx, dword [rbp + 4]	      3936	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x4004912	     0xf851b010000	                           jne 0x4004a33	      3936	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x4004918	        0x418b3424	                    mov esi, dword [r12]	      3937	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x400491c	    0xc744242c0100	               mov dword [rsp + 0x2c], 1	      3976	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4004924	    0xc74424280000	               mov dword [rsp + 0x28], 0	      3974	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x400492c	          0x83fe03	                              cmp esi, 3	      3937	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x400492f	     0xf8f36020000	                            jg 0x4004b6b	      3937	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x4004935	        0x41395708	                cmp dword [r15 + 8], edx	      3938	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x4004939	     0xf8fe9010000	                            jg 0x4004b28	      3938	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x400493f	        0x418b4704	                mov eax, dword [r15 + 4]	      3940	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x4004943	        0x8b7c241c	            mov edi, dword [rsp + 0x1c] 	      3940	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x4004947	            0x29f8	                            sub eax, edi	      3940	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x4004949	          0x83c001	                              add eax, 1	      3940	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x400494c	            0x39d0	                            cmp eax, edx	      3940	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x400494e	     0xf8ceb010000	                            jl 0x4004b3f	      3940	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x4004954	            0x39f7	                            cmp edi, esi	      3940	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x4004956	     0xf8ce3010000	                            jl 0x4004b3f	      3940	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x400495c	          0x8b4500	                    mov eax, dword [rbp]	      3941	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x400495f	            0x39c7	                            cmp edi, eax	      3941	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x4004961	     0xf8cef010000	                            jl 0x4004b56	      3941	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x4004967	       0xfb7542410	           movzx edx, word [rsp + 0x10] 	      3942	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x400496c	      0x807c241b00	                cmp byte [rsp + 0x1b], 0	      3943	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24
0x4004971	            0x7553	                           jne 0x40049c6	      3943	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24
0x4004973	       0xfb74c2420	           movzx ecx, word [rsp + 0x20] 	      3944	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24
0x4004978	             0x1ca	                            add edx, ecx	      3944	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24
0x400497a	    0x81fae7030000	                          cmp edx, 0x3e7	      3945	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25
0x4004980	     0xf8f09020000	                            jg 0x4004b8f	      3945	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25
0x4004986	          0x83f802	                              cmp eax, 2	      3946	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25
0x4004989	            0x7f0f	                            jg 0x400499a	      3946	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25
0x400498b	            0x4898	                                    cdqe	      3947	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25
0x400498d	    0x3b1485000000	                  cmp edx, dword [rax*4]	      3946	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25
0x4004994	     0xf8d0c020000	                           jge 0x4004ba6	      3946	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25
0x400499a	          0x4839dd	                            cmp rbp, rbx	      3948	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25	CALL_16
0x400499d	            0x740b	                            je 0x40049aa	      3948	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25	CALL_16
0x400499f	          0x4889ee	                            mov rsi, rbp	      3948	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25	CALL_16
0x40049a2	          0x4889df	                            mov rdi, rbx	      3948	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25	CALL_16
0x40049a5	      0xe800000000	                          call 0x40049aa	      3948	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25	CALL_16
0x40049aa	       0xfb7442410	           movzx eax, word [rsp + 0x10] 	      3949	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25
0x40049af	      0x6603442420	               add ax, word [rsp + 0x20]	      3949	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25
0x40049b4	        0x6689430a	                mov word [rbx + 0xa], ax	      3949	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25
0x40049b8	    0x48c744241000	               mov qword [rsp + 0x10], 0	      3814	decNumber.c	FUNCTION_68	FUNCTION_64
0x40049c1	      0xe904040000	                           jmp 0x4004dca	      3950	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25
0x40049c6	       0xfb7442420	           movzx eax, word [rsp + 0x20] 	      3956	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27
0x40049cb	            0x29c2	                            sub edx, eax	      3956	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27
0x40049cd	            0x85d2	                           test edx, edx	      3956	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27
0x40049cf	     0xf8e9f010000	                           jle 0x4004b74	      3956	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27
0x40049d5	          0x4839dd	                            cmp rbp, rbx	      3957	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_17
0x40049d8	            0x740b	                            je 0x40049e5	      3957	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_17
0x40049da	          0x4889ee	                            mov rsi, rbp	      3957	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_17
0x40049dd	          0x4889df	                            mov rdi, rbx	      3957	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_17
0x40049e0	      0xe800000000	                          call 0x40049e5	      3957	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_17
0x40049e5	       0xfb7442410	           movzx eax, word [rsp + 0x10] 	      3958	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27
0x40049ea	      0x662b442420	               sub ax, word [rsp + 0x20]	      3958	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27
0x40049ef	        0x6689430a	                mov word [rbx + 0xa], ax	      3958	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27
0x40049f3	            0x8b03	                    mov eax, dword [rbx]	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x40049f5	          0x83f831	                           cmp eax, 0x31	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x40049f8	            0x7f0b	                            jg 0x4004a05	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x40049fa	            0x4898	                                    cdqe	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x40049fc	     0xfb6b0000000	                   movzx esi, byte [rax]	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x4004a03	            0xeb15	                           jmp 0x4004a1a	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x4004a05	          0x8d4802	                      lea ecx, [rax + 2]	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x4004a08	      0xba56555555	                     mov edx, 0x55555556	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x4004a0d	            0x89c8	                            mov eax, ecx	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x4004a0f	            0xf7ea	                                imul edx	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x4004a11	            0x89c8	                            mov eax, ecx	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x4004a13	          0xc1f81f	                           sar eax, 0x1f	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x4004a16	            0x89d6	                            mov esi, edx	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x4004a18	            0x29c6	                            sub esi, eax	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x4004a1a	        0x488d7b0a	                    lea rdi, [rbx + 0xa]	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x4004a1e	      0xe8c4c2ffff	                   call sym.decGetDigits	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x4004a23	            0x8903	                    mov dword [rbx], eax	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x4004a25	    0x48c744241000	               mov qword [rsp + 0x10], 0	      3814	decNumber.c	FUNCTION_68	FUNCTION_64
0x4004a2e	      0xe997030000	                           jmp 0x4004dca	      3961	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27
0x4004a33	      0xc644241000	                mov byte [rsp + 0x10], 0	      3983	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29
0x4004a38	            0x85c9	                           test ecx, ecx	      3984	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x4004a3a	            0x7916	                           jns 0x4004a52	      3984	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x4004a3c	            0xf7d9	                                 neg ecx	      3986	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x4004a3e	          0x4431f0	                           xor eax, r14d	      3987	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x4004a41	          0x4189c5	                           mov r13d, eax	      3987	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x4004a44	          0x4889e8	                            mov rax, rbp	      3987	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x4004a47	          0x4c89e5	                            mov rbp, r12	      3988	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x4004a4a	          0x4989c4	                            mov r12, rax	      3988	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x4004a4d	      0xc644241001	                mov byte [rsp + 0x10], 1	      3989	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x4004a52	        0x418b1424	                    mov edx, dword [r12]	      3995	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x4004a56	          0x8d3411	                    lea esi, [rcx + rdx]	      3995	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x4004a59	        0x8b7c241c	            mov edi, dword [rsp + 0x1c] 	      3995	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x4004a5d	            0x89f8	                            mov eax, edi	      3995	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x4004a5f	           0x34500	                    add eax, dword [rbp]	      3995	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x4004a62	          0x83c001	                              add eax, 1	      3995	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x4004a65	            0x39c6	                            cmp esi, eax	      3995	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x4004a67	            0x7e71	                           jle 0x4004ada	      3995	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x4004a69	            0x89fd	                            mov ebp, edi	      3998	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x4004a6b	            0x29d5	                            sub ebp, edx	      3998	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x4004a6d	      0x807c241b01	                cmp byte [rsp + 0x1b], 1	      3999	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x4004a72	            0x19c0	                            sbb eax, eax	      3999	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x4004a74	          0x83e002	                              and eax, 2	      3999	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x4004a77	          0x83e801	                              sub eax, 1	      3999	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x4004a7a	        0x8944243c	             mov dword [rsp + 0x3c], eax	      3999	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x4004a7e	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      4002	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	CALL_20
0x4004a83	      0x488d4c243c	                   lea rcx, [rsp + 0x3c]	      4002	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	CALL_20
0x4004a88	          0x4c89fa	                            mov rdx, r15	      4002	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	CALL_20
0x4004a8b	          0x4c89e6	                            mov rsi, r12	      4002	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	CALL_20
0x4004a8e	          0x4889df	                            mov rdi, rbx	      4002	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	CALL_20
0x4004a91	      0xe84bc0ffff	                     call sym.decCopyFit	      4002	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	CALL_20
0x4004a96	            0x85ed	                           test ebp, ebp	      4004	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_33
0x4004a98	            0x7e12	                           jle 0x4004aac	      4004	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_33
0x4004a9a	        0x488d7b0a	                    lea rdi, [rbx + 0xa]	      4005	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_33	CALL_21
0x4004a9e	            0x89ea	                            mov edx, ebp	      4005	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_33	CALL_21
0x4004aa0	            0x8b33	                    mov esi, dword [rbx]	      4005	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_33	CALL_21
0x4004aa2	      0xe8bbb8ffff	                 call sym.decShiftToMost	      4005	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_33	CALL_21
0x4004aa7	            0x8903	                    mov dword [rbx], eax	      4005	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_33	CALL_21
0x4004aa9	          0x296b04	                sub dword [rbx + 4], ebp	      4006	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_33
0x4004aac	      0x807c241000	                cmp byte [rsp + 0x10], 0	      4009	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_34
0x4004ab1	            0x7504	                           jne 0x4004ab7	      4009	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_34
0x4004ab3	        0x44307308	                xor byte [rbx + 8], r14b	      4009	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_34
0x4004ab7	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      4010	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x4004abc	      0x488d54243c	                   lea rdx, [rsp + 0x3c]	      4010	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x4004ac1	          0x4c89fe	                            mov rsi, r15	      4010	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x4004ac4	          0x4889df	                            mov rdi, rbx	      4010	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x4004ac7	      0xe836d0ffff	                    call sym.decFinalize	      4010	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x4004acc	    0x48c744241000	               mov qword [rsp + 0x10], 0	      3814	decNumber.c	FUNCTION_68	FUNCTION_64
0x4004ad5	      0xe9f0020000	                           jmp 0x4004dca	      4011	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x4004ada	          0x8d4101	                      lea eax, [rcx + 1]	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x4004add	          0x83f831	                           cmp eax, 0x31	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x4004ae0	            0x7f12	                            jg 0x4004af4	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x4004ae2	            0x4898	                                    cdqe	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x4004ae4	     0xfb680000000	                   movzx eax, byte [rax]	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x4004aeb	          0x83e801	                              sub eax, 1	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x4004aee	        0x89442428	             mov dword [rsp + 0x28], eax	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x4004af2	            0xeb18	                           jmp 0x4004b0c	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x4004af4	          0x8d7103	                      lea esi, [rcx + 3]	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x4004af7	      0xba56555555	                     mov edx, 0x55555556	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x4004afc	            0x89f0	                            mov eax, esi	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x4004afe	            0xf7ea	                                imul edx	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x4004b00	          0xc1fe1f	                           sar esi, 0x1f	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x4004b03	            0x29f2	                            sub edx, esi	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x4004b05	          0x8d42ff	                      lea eax, [rdx - 1]	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x4004b08	        0x89442428	             mov dword [rsp + 0x28], eax	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x4004b0c	        0x8b442428	            mov eax, dword [rsp + 0x28] 	      4015	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29
0x4004b10	          0x8d0440	                  lea eax, [rax + rax*2]	      4015	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29
0x4004b13	            0x89cf	                            mov edi, ecx	      4015	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29
0x4004b15	            0x29c7	                            sub edi, eax	      4015	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29
0x4004b17	            0x89f8	                            mov eax, edi	      4015	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29
0x4004b19	            0x4898	                                    cdqe	      4015	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29
0x4004b1b	    0x8b0485000000	                  mov eax, dword [rax*4]	      4015	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29
0x4004b22	        0x8944242c	             mov dword [rsp + 0x2c], eax	      4015	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29
0x4004b26	            0xeb43	                           jmp 0x4004b6b	      4015	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29
0x4004b28	      0xb900000000	                              mov ecx, 0	      3931	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4004b2d	    0xc744242c0100	               mov dword [rsp + 0x2c], 1	      3976	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4004b35	    0xc74424280000	               mov dword [rsp + 0x28], 0	      3974	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4004b3d	            0xeb2c	                           jmp 0x4004b6b	      3974	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4004b3f	      0xb900000000	                              mov ecx, 0	      3931	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4004b44	    0xc744242c0100	               mov dword [rsp + 0x2c], 1	      3976	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4004b4c	    0xc74424280000	               mov dword [rsp + 0x28], 0	      3974	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4004b54	            0xeb15	                           jmp 0x4004b6b	      3974	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4004b56	      0xb900000000	                              mov ecx, 0	      3931	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4004b5b	    0xc744242c0100	               mov dword [rsp + 0x2c], 1	      3976	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4004b63	    0xc74424280000	               mov dword [rsp + 0x28], 0	      3974	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4004b6b	      0x807c241b00	                cmp byte [rsp + 0x1b], 0	      4018	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_35
0x4004b70	            0x7517	                           jne 0x4004b89	      4018	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_35
0x4004b72	            0xeb47	                           jmp 0x4004bbb	      4018	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_35
0x4004b74	      0xb900000000	                              mov ecx, 0	      3931	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4004b79	    0xc744242c0100	               mov dword [rsp + 0x2c], 1	      3976	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4004b81	    0xc74424280000	               mov dword [rsp + 0x28], 0	      3974	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4004b89	        0xf75c242c	                  neg dword [rsp + 0x2c]	      4018	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_35
0x4004b8d	            0xeb2c	                           jmp 0x4004bbb	      4018	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_35
0x4004b8f	      0xb900000000	                              mov ecx, 0	      4018	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_35
0x4004b94	    0xc74424280000	               mov dword [rsp + 0x28], 0	      4018	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_35
0x4004b9c	    0xc744242c0100	               mov dword [rsp + 0x2c], 1	      4018	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_35
0x4004ba4	            0xeb15	                           jmp 0x4004bbb	      4018	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_35
0x4004ba6	      0xb900000000	                              mov ecx, 0	      4018	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_35
0x4004bab	    0xc74424280000	               mov dword [rsp + 0x28], 0	      4018	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_35
0x4004bb3	    0xc744242c0100	               mov dword [rsp + 0x2c], 1	      4018	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_35
0x4004bbb	        0x41030c24	                    add ecx, dword [r12]	      4021	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4004bbf	          0x8b4500	                    mov eax, dword [rbp]	      4022	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_36
0x4004bc2	            0x39c1	                            cmp ecx, eax	      4022	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_36
0x4004bc4	           0xf4cc8	                          cmovl ecx, eax	      4022	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_36
0x4004bc7	        0x488d430a	                    lea rax, [rbx + 0xa]	      4026	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4004bcb	      0x4889442420	             mov qword [rsp + 0x20], rax	      4026	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4004bd0	        0x394c241c	            cmp dword [rsp + 0x1c], ecx 	      4030	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37
0x4004bd4	            0x7e0c	                           jle 0x4004be2	      4030	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37
0x4004bd6	          0x4c39e3	                            cmp rbx, r12	      4031	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37
0x4004bd9	            0x7568	                           jne 0x4004c43	      4031	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37
0x4004bdb	      0x837c242800	               cmp dword [rsp + 0x28], 0	      4031	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37
0x4004be0	            0x7e61	                           jle 0x4004c43	      4031	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37
0x4004be2	          0x83f931	                           cmp ecx, 0x31	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x4004be5	            0x7f0f	                            jg 0x4004bf6	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x4004be7	          0x4863c9	                         movsxd rcx, ecx	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x4004bea	     0xfb6b9000000	                   movzx edi, byte [rcx]	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x4004bf1	          0x83c701	                              add edi, 1	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x4004bf4	            0xeb14	                           jmp 0x4004c0a	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x4004bf6	          0x83c102	                              add ecx, 2	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x4004bf9	      0xba56555555	                     mov edx, 0x55555556	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x4004bfe	            0x89c8	                            mov eax, ecx	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x4004c00	            0xf7ea	                                imul edx	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x4004c02	          0xc1f91f	                           sar ecx, 0x1f	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x4004c05	            0x29ca	                            sub edx, ecx	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x4004c07	          0x8d7a01	                      lea edi, [rdx + 1]	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x4004c0a	          0x4863ff	                         movsxd rdi, edi	      4036	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38
0x4004c0d	          0x4801ff	                            add rdi, rdi	      4036	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38
0x4004c10	    0x48c744241000	               mov qword [rsp + 0x10], 0	      3814	decNumber.c	FUNCTION_68	FUNCTION_64
0x4004c19	      0x4c8d742440	                   lea r14, [rsp + 0x40]	      4035	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37
0x4004c1e	        0x4883ff3e	                           cmp rdi, 0x3e	      4036	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38
0x4004c22	            0x762d	                           jbe 0x4004c51	      4036	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38
0x4004c24	      0xe800000000	                          call 0x4004c29	      4038	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38
0x4004c29	          0x4989c6	                            mov r14, rax	      4038	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38
0x4004c2c	      0x4889442410	             mov qword [rsp + 0x10], rax	      4038	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38
0x4004c31	          0x4885c0	                           test rax, rax	      4039	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38	IF_39
0x4004c34	            0x751b	                           jne 0x4004c51	      4039	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38	IF_39
0x4004c36	      0x488b442408	                mov rax, qword [rsp + 8]	      4040	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38	IF_39
0x4004c3b	          0x830810	                    or dword [rax], 0x10	      4040	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38	IF_39
0x4004c3e	      0xe987010000	                           jmp 0x4004dca	      4041	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38	IF_39
0x4004c43	      0x4c8b742420	            mov r14, qword [rsp + 0x20] 	      4026	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4004c48	    0x48c744241000	               mov qword [rsp + 0x10], 0	      3814	decNumber.c	FUNCTION_68	FUNCTION_64
0x4004c51	        0x4183e580	                    and r13d, 0xffffff80	      4046	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4004c55	        0x44886b08	                mov byte [rbx + 8], r13b	      4046	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4004c59	          0x8b4504	                mov eax, dword [rbp + 4]	      4047	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4004c5c	          0x894304	                mov dword [rbx + 4], eax	      4047	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4004c5f	        0x418b0424	                    mov eax, dword [r12]	      4057	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_31
0x4004c63	          0x83f831	                           cmp eax, 0x31	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4004c66	            0x7f0b	                            jg 0x4004c73	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4004c68	            0x4898	                                    cdqe	      4057	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_31
0x4004c6a	     0xfb688000000	                   movzx ecx, byte [rax]	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4004c71	            0xeb15	                           jmp 0x4004c88	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4004c73	          0x8d7002	                      lea esi, [rax + 2]	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4004c76	      0xb956555555	                     mov ecx, 0x55555556	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4004c7b	            0x89f0	                            mov eax, esi	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4004c7d	            0xf7e9	                                imul ecx	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4004c7f	            0x89f0	                            mov eax, esi	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4004c81	          0xc1f81f	                           sar eax, 0x1f	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4004c84	            0x89d1	                            mov ecx, edx	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4004c86	            0x29c1	                            sub ecx, eax	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4004c88	        0x4983c40a	                            add r12, 0xa	      4057	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_31
0x4004c8c	          0x8b4500	                    mov eax, dword [rbp]	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4004c8f	          0x83f831	                           cmp eax, 0x31	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4004c92	            0x7f0b	                            jg 0x4004c9f	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4004c94	            0x4898	                                    cdqe	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4004c96	     0xfb6b0000000	                   movzx esi, byte [rax]	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4004c9d	            0xeb15	                           jmp 0x4004cb4	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4004c9f	          0x8d7802	                      lea edi, [rax + 2]	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4004ca2	      0xbe56555555	                     mov esi, 0x55555556	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4004ca7	            0x89f8	                            mov eax, edi	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4004ca9	            0xf7ee	                                imul esi	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4004cab	            0x89f8	                            mov eax, edi	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4004cad	          0xc1f81f	                           sar eax, 0x1f	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4004cb0	            0x89d6	                            mov esi, edx	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4004cb2	            0x29c6	                            sub esi, eax	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4004cb4	        0x488d7d0a	                    lea rdi, [rbp + 0xa]	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4004cb8	        0x4883ec08	                              sub rsp, 8	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4004cbc	        0x8b442434	            mov eax, dword [rsp + 0x34] 	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4004cc0	              0x50	                                push rax	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4004cc1	          0x4d89f1	                             mov r9, r14	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4004cc4	      0x448b442438	            mov r8d, dword [rsp + 0x38] 	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4004cc9	          0x4c89e2	                            mov rdx, r12	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4004ccc	      0xe86fb3ffff	                  call sym.decUnitAddSub	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4004cd1	          0x8d0440	                  lea eax, [rax + rax*2]	      4059	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4004cd4	        0x4883c410	                           add rsp, 0x10	      4060	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_40
0x4004cd8	            0x85c0	                           test eax, eax	      4060	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_40
0x4004cda	            0x7804	                            js 0x4004ce0	      4060	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_40
0x4004cdc	            0x8903	                    mov dword [rbx], eax	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4004cde	            0xeb08	                           jmp 0x4004ce8	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4004ce0	            0xf7d8	                                 neg eax	      4061	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_40
0x4004ce2	            0x8903	                    mov dword [rbx], eax	      4061	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_40
0x4004ce4	        0x80430880	                add byte [rbx + 8], 0x80	      4062	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_40
0x4004ce8	    0xc744243c0000	               mov dword [rsp + 0x3c], 0	      4071	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4004cf0	      0x4c3b742420	            cmp r14, qword [rsp + 0x20] 	      4072	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41
0x4004cf5	            0x7451	                            je 0x4004d48	      4072	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41
0x4004cf7	            0x8b03	                    mov eax, dword [rbx]	      4078	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	IF_43
0x4004cf9	        0x3944241c	            cmp dword [rsp + 0x1c], eax 	      4078	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	IF_43
0x4004cfd	            0x7d2f	                           jge 0x4004d2e	      4078	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	IF_43
0x4004cff	          0x83f831	                           cmp eax, 0x31	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x4004d02	            0x7f0b	                            jg 0x4004d0f	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x4004d04	            0x4898	                                    cdqe	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x4004d06	     0xfb6b0000000	                   movzx esi, byte [rax]	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x4004d0d	            0xeb15	                           jmp 0x4004d24	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x4004d0f	          0x8d4802	                      lea ecx, [rax + 2]	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x4004d12	      0xbe56555555	                     mov esi, 0x55555556	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x4004d17	            0x89c8	                            mov eax, ecx	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x4004d19	            0xf7ee	                                imul esi	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x4004d1b	            0x89c8	                            mov eax, ecx	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x4004d1d	          0xc1f81f	                           sar eax, 0x1f	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x4004d20	            0x89d6	                            mov esi, edx	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x4004d22	            0x29c6	                            sub esi, eax	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x4004d24	          0x4c89f7	                            mov rdi, r14	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x4004d27	      0xe8bbbfffff	                   call sym.decGetDigits	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x4004d2c	            0x8903	                    mov dword [rbx], eax	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x4004d2e	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	      4080	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_36
0x4004d33	      0x4c8d44243c	                    lea r8, [rsp + 0x3c]	      4080	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_36
0x4004d38	            0x8b0b	                    mov ecx, dword [rbx]	      4080	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_36
0x4004d3a	          0x4c89f2	                            mov rdx, r14	      4080	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_36
0x4004d3d	          0x4c89fe	                            mov rsi, r15	      4080	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_36
0x4004d40	          0x4889df	                            mov rdi, rbx	      4080	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_36
0x4004d43	      0xe82cbbffff	                    call sym.decSetCoeff	      4080	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_36
0x4004d48	            0x8b03	                    mov eax, dword [rbx]	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x4004d4a	          0x83f831	                           cmp eax, 0x31	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x4004d4d	            0x7f0b	                            jg 0x4004d5a	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x4004d4f	            0x4898	                                    cdqe	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x4004d51	     0xfb6b0000000	                   movzx esi, byte [rax]	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x4004d58	            0xeb15	                           jmp 0x4004d6f	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x4004d5a	          0x8d4802	                      lea ecx, [rax + 2]	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x4004d5d	      0xbe56555555	                     mov esi, 0x55555556	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x4004d62	            0x89c8	                            mov eax, ecx	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x4004d64	            0xf7ee	                                imul esi	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x4004d66	            0x89c8	                            mov eax, ecx	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x4004d68	          0xc1f81f	                           sar eax, 0x1f	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x4004d6b	            0x89d6	                            mov esi, edx	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x4004d6d	            0x29c6	                            sub esi, eax	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x4004d6f	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x4004d74	      0xe86ebfffff	                   call sym.decGetDigits	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x4004d79	            0x8903	                    mov dword [rbx], eax	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x4004d7b	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      4117	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4004d80	      0x488d54243c	                   lea rdx, [rsp + 0x3c]	      4117	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4004d85	          0x4c89fe	                            mov rsi, r15	      4117	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4004d88	          0x4889df	                            mov rdi, rbx	      4117	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4004d8b	      0xe872cdffff	                    call sym.decFinalize	      4117	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4004d90	      0x66837b0a00	                 cmp word [rbx + 0xa], 0	      4123	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	CALL_44
0x4004d95	            0x7533	                           jne 0x4004dca	      4123	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	CALL_44
0x4004d97	          0x833b01	                      cmp dword [rbx], 1	      4123	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	CALL_44
0x4004d9a	            0x752e	                           jne 0x4004dca	      4123	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	CALL_44
0x4004d9c	         0xfb64308	               movzx eax, byte [rbx + 8]	      4123	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	CALL_44
0x4004da0	            0xa870	                           test al, 0x70	      4123	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	CALL_44
0x4004da2	            0x7526	                           jne 0x4004dca	      4123	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	CALL_44
0x4004da4	      0x807c241b00	                cmp byte [rsp + 0x1b], 0	      4123	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	CALL_44
0x4004da9	            0x741f	                            je 0x4004dca	      4123	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	CALL_44
0x4004dab	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      4127	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48
0x4004db0	          0xf60720	                   test byte [rdi], 0x20	      4127	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48
0x4004db3	            0x7515	                           jne 0x4004dca	      4127	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48
0x4004db5	      0x41837f0c06	                cmp dword [r15 + 0xc], 6	      4128	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	IF_49
0x4004dba	            0x7508	                           jne 0x4004dc4	      4128	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	IF_49
0x4004dbc	          0x83c880	                      or eax, 0xffffff80	      4128	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	IF_49
0x4004dbf	          0x884308	                  mov byte [rbx + 8], al	      4128	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	IF_49
0x4004dc2	            0xeb06	                           jmp 0x4004dca	      4128	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	IF_49
0x4004dc4	          0x83e07f	                           and eax, 0x7f	      4129	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	ELSE_8
0x4004dc7	          0x884308	                  mov byte [rbx + 8], al	      4129	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	ELSE_8
0x4004dca	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      4133	decNumber.c	FUNCTION_68	FUNCTION_64
0x4004dcf	      0xe800000000	                          call 0x4004dd4	      4133	decNumber.c	FUNCTION_68	FUNCTION_64
0x4004dd4	          0x4889d8	                            mov rax, rbx	      4139	decNumber.c	FUNCTION_68	FUNCTION_64
0x4004dd7	    0x488b9c248800	            mov rbx, qword [rsp + 0x88] 	      4139	decNumber.c	FUNCTION_68	FUNCTION_64
0x4004ddf	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      4139	decNumber.c	FUNCTION_68	FUNCTION_64
0x4004de8	            0x741c	                            je 0x4004e06	      4139	decNumber.c	FUNCTION_68	FUNCTION_64
0x4004dea	            0xeb15	                           jmp 0x4004e01	      4139	decNumber.c	FUNCTION_68	FUNCTION_64
0x4004dec	      0x418b542404	                mov edx, dword [r12 + 4]	      3931	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4004df1	            0x89d1	                            mov ecx, edx	      3936	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x4004df3	          0x2b4d04	                sub ecx, dword [rbp + 4]	      3936	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x4004df6	     0xf8439fbffff	                            je 0x4004935	      3936	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x4004dfc	      0xe932fcffff	                           jmp 0x4004a33	      3936	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x4004e01	      0xe800000000	                          call 0x4004e06	      4139	decNumber.c	FUNCTION_68	FUNCTION_64
0x4004e06	    0x4881c4980000	                           add rsp, 0x98	      4139	decNumber.c	FUNCTION_68	FUNCTION_64
0x4004e0d	              0x5b	                                 pop rbx	      4139	decNumber.c	FUNCTION_68	FUNCTION_64
0x4004e0e	              0x5d	                                 pop rbp	      4139	decNumber.c	FUNCTION_68	FUNCTION_64
0x4004e0f	            0x415c	                                 pop r12	      4139	decNumber.c	FUNCTION_68	FUNCTION_64
0x4004e11	            0x415d	                                 pop r13	      4139	decNumber.c	FUNCTION_68	FUNCTION_64
0x4004e13	            0x415e	                                 pop r14	      4139	decNumber.c	FUNCTION_68	FUNCTION_64
0x4004e15	            0x415f	                                 pop r15	      4139	decNumber.c	FUNCTION_68	FUNCTION_64
0x4004e17	              0xc3	                                     ret	      4139	decNumber.c	FUNCTION_68	FUNCTION_64
decNaNs	SWITCH,0:functions,0:ELSE,5:DO,0:FOR,1:IF,6:CALL,4:WHILE,0	81
0x4002dec	              0x53	                                push rbx	      7686	decNumber.c	FUNCTION_23
0x4002ded	          0x4889fb	                            mov rbx, rdi	      7686	decNumber.c	FUNCTION_23
0x4002df0	         0xfb64608	               movzx eax, byte [rsi + 8]	      7689	decNumber.c	FUNCTION_23	IF_1
0x4002df4	            0xa810	                           test al, 0x10	      7689	decNumber.c	FUNCTION_23	IF_1
0x4002df6	            0x7409	                            je 0x4002e01	      7689	decNumber.c	FUNCTION_23	IF_1
0x4002df8	    0x418108800000	               or dword [r8], 0x40000080	      7690	decNumber.c	FUNCTION_23	IF_1
0x4002dff	            0xeb1e	                           jmp 0x4002e1f	      7690	decNumber.c	FUNCTION_23	IF_1
0x4002e01	          0x4885d2	                           test rdx, rdx	      7691	decNumber.c	FUNCTION_23	IF_2
0x4002e04	            0x7419	                            je 0x4002e1f	      7691	decNumber.c	FUNCTION_23	IF_2
0x4002e06	        0xf6420810	               test byte [rdx + 8], 0x10	      7692	decNumber.c	FUNCTION_23	ELSE_2	IF_3
0x4002e0a	            0x740c	                            je 0x4002e18	      7692	decNumber.c	FUNCTION_23	ELSE_2	IF_3
0x4002e0c	    0x418108800000	               or dword [r8], 0x40000080	      7694	decNumber.c	FUNCTION_23	ELSE_2	IF_3
0x4002e13	          0x4889d6	                            mov rsi, rdx	      7693	decNumber.c	FUNCTION_23	ELSE_2	IF_3
0x4002e16	            0xeb07	                           jmp 0x4002e1f	      7693	decNumber.c	FUNCTION_23	ELSE_2	IF_3
0x4002e18	          0x83e020	                           and eax, 0x20	      7696	decNumber.c	FUNCTION_23	IF_4
0x4002e1b	        0x480f44f2	                          cmove rsi, rdx	      7697	decNumber.c	FUNCTION_23	ELSE_4
0x4002e1f	            0x8b01	                    mov eax, dword [rcx]	      7700	decNumber.c	FUNCTION_23	CALL_1
0x4002e21	            0x3906	                    cmp dword [rsi], eax	      7700	decNumber.c	FUNCTION_23	CALL_1
0x4002e23	            0x7f0d	                            jg 0x4002e32	      7700	decNumber.c	FUNCTION_23	CALL_1
0x4002e25	          0x4889df	                            mov rdi, rbx	      7700	decNumber.c	FUNCTION_23	CALL_1
0x4002e28	      0xe800000000	                          call 0x4002e2d	      7700	decNumber.c	FUNCTION_23	CALL_1
0x4002e2d	      0xe9a8000000	                           jmp 0x4002eda	      7700	decNumber.c	FUNCTION_23	CALL_1
0x4002e32	         0xfb64608	               movzx eax, byte [rsi + 8]	      7705	decNumber.c	FUNCTION_23	ELSE_5
0x4002e36	          0x884308	                  mov byte [rbx + 8], al	      7705	decNumber.c	FUNCTION_23	ELSE_5
0x4002e39	        0x488d7b0a	                    lea rdi, [rbx + 0xa]	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x4002e3d	          0x448b01	                    mov r8d, dword [rcx]	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x4002e40	        0x4183f831	                           cmp r8d, 0x31	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x4002e44	            0x7f19	                            jg 0x4002e5f	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x4002e46	          0x4963c0	                         movsxd rax, r8d	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x4002e49	     0xfb680000000	                   movzx eax, byte [rax]	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x4002e50	        0x488d1447	                  lea rdx, [rdi + rax*2]	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x4002e54	        0x4883c60a	                            add rsi, 0xa	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4002e58	          0x4839d7	                            cmp rdi, rdx	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4002e5b	            0x7227	                            jb 0x4002e84	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4002e5d	            0xeb41	                           jmp 0x4002ea0	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4002e5f	        0x458d4802	                       lea r9d, [r8 + 2]	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x4002e63	      0xba56555555	                     mov edx, 0x55555556	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x4002e68	          0x4489c8	                            mov eax, r9d	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x4002e6b	            0xf7ea	                                imul edx	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x4002e6d	        0x41c1f91f	                           sar r9d, 0x1f	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x4002e71	          0x4429ca	                            sub edx, r9d	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x4002e74	          0x4863d2	                         movsxd rdx, edx	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x4002e77	        0x488d1457	                  lea rdx, [rdi + rdx*2]	      7706	decNumber.c	FUNCTION_23	ELSE_5	CALL_2
0x4002e7b	        0x4883c60a	                            add rsi, 0xa	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4002e7f	          0x4839d7	                            cmp rdi, rdx	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4002e82	            0x732c	                           jae 0x4002eb0	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4002e84	           0xfb706	                   movzx eax, word [rsi]	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4002e87	          0x668907	                      mov word [rdi], ax	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4002e8a	        0x4883c702	                              add rdi, 2	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4002e8e	        0x4883c602	                              add rsi, 2	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4002e92	          0x4839d7	                            cmp rdi, rdx	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4002e95	            0x72ed	                            jb 0x4002e84	      7707	decNumber.c	FUNCTION_23	ELSE_5	FOR_1
0x4002e97	          0x448b01	                    mov r8d, dword [rcx]	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x4002e9a	        0x4183f831	                           cmp r8d, 0x31	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x4002e9e	            0x7f10	                            jg 0x4002eb0	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x4002ea0	          0x4d63c0	                          movsxd r8, r8d	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x4002ea3	    0x410fb6800000	                    movzx eax, byte [r8]	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x4002eab	          0x8d3440	                  lea esi, [rax + rax*2]	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x4002eae	            0xeb18	                           jmp 0x4002ec8	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x4002eb0	        0x4183c002	                              add r8d, 2	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x4002eb4	      0xba56555555	                     mov edx, 0x55555556	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x4002eb9	          0x4489c0	                            mov eax, r8d	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x4002ebc	            0xf7ea	                                imul edx	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x4002ebe	        0x41c1f81f	                           sar r8d, 0x1f	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x4002ec2	          0x4429c2	                            sub edx, r8d	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x4002ec5	          0x8d3452	                  lea esi, [rdx + rdx*2]	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x4002ec8	            0x8933	                    mov dword [rbx], esi	      7708	decNumber.c	FUNCTION_23	ELSE_5	CALL_3
0x4002eca	            0x8b01	                    mov eax, dword [rcx]	      7710	decNumber.c	FUNCTION_23	ELSE_5	CALL_4
0x4002ecc	            0x39c6	                            cmp esi, eax	      7710	decNumber.c	FUNCTION_23	ELSE_5	CALL_4
0x4002ece	            0x7e0a	                           jle 0x4002eda	      7710	decNumber.c	FUNCTION_23	ELSE_5	CALL_4
0x4002ed0	            0x29c6	                            sub esi, eax	      7710	decNumber.c	FUNCTION_23	ELSE_5	CALL_4
0x4002ed2	          0x4889df	                            mov rdi, rbx	      7710	decNumber.c	FUNCTION_23	ELSE_5	CALL_4
0x4002ed5	      0xe85edeffff	                       call sym.decDecap	      7710	decNumber.c	FUNCTION_23	ELSE_5	CALL_4
0x4002eda	         0xfb64308	               movzx eax, byte [rbx + 8]	      7714	decNumber.c	FUNCTION_23
0x4002ede	          0x83e0ef	                     and eax, 0xffffffef	      7714	decNumber.c	FUNCTION_23
0x4002ee1	          0x83c820	                            or eax, 0x20	      7714	decNumber.c	FUNCTION_23
0x4002ee4	          0x884308	                  mov byte [rbx + 8], al	      7714	decNumber.c	FUNCTION_23
0x4002ee7	    0xc74304000000	                  mov dword [rbx + 4], 0	      7715	decNumber.c	FUNCTION_23
0x4002eee	          0x4889d8	                            mov rax, rbx	      7718	decNumber.c	FUNCTION_23
0x4002ef1	              0x5b	                                 pop rbx	      7718	decNumber.c	FUNCTION_23
0x4002ef2	              0xc3	                                     ret	      7718	decNumber.c	FUNCTION_23
decNumberFromString	SWITCH,0:functions,0:ELSE,4:DO,1:FOR,8:IF,47:CALL,15:WHILE,0	408
0x4001ea1	            0x4157	                                push r15	       490	decNumber.c	FUNCTION_68	FUNCTION_7
0x4001ea3	            0x4156	                                push r14	       490	decNumber.c	FUNCTION_68	FUNCTION_7
0x4001ea5	            0x4155	                                push r13	       490	decNumber.c	FUNCTION_68	FUNCTION_7
0x4001ea7	            0x4154	                                push r12	       490	decNumber.c	FUNCTION_68	FUNCTION_7
0x4001ea9	              0x55	                                push rbp	       490	decNumber.c	FUNCTION_68	FUNCTION_7
0x4001eaa	              0x53	                                push rbx	       490	decNumber.c	FUNCTION_68	FUNCTION_7
0x4001eab	        0x4883ec58	                           sub rsp, 0x58	       490	decNumber.c	FUNCTION_68	FUNCTION_7
0x4001eaf	          0x4989fe	                            mov r14, rdi	       490	decNumber.c	FUNCTION_68	FUNCTION_7
0x4001eb2	          0x4989d7	                            mov r15, rdx	       490	decNumber.c	FUNCTION_68	FUNCTION_7
0x4001eb5	    0x64488b042528	                mov rax, qword fs:[0x28]	       490	decNumber.c	FUNCTION_68	FUNCTION_7
0x4001ebe	      0x4889442448	             mov qword [rsp + 0x48], rax	       490	decNumber.c	FUNCTION_68	FUNCTION_7
0x4001ec3	            0x31c0	                            xor eax, eax	       490	decNumber.c	FUNCTION_68	FUNCTION_7
0x4001ec5	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	       507	decNumber.c	FUNCTION_68	FUNCTION_7
0x4001ecd	          0x4889f0	                            mov rax, rsi	       515	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1
0x4001ed0	          0x4889f3	                            mov rbx, rsi	       499	decNumber.c	FUNCTION_68	FUNCTION_7
0x4001ed3	      0xbd00000000	                              mov ebp, 0	       500	decNumber.c	FUNCTION_68	FUNCTION_7
0x4001ed8	      0xbf00000000	                              mov edi, 0	       498	decNumber.c	FUNCTION_68	FUNCTION_7
0x4001edd	    0x41bc00000000	                             mov r12d, 0	       497	decNumber.c	FUNCTION_68	FUNCTION_7
0x4001ee3	      0xc644240f00	                 mov byte [rsp + 0xf], 0	       492	decNumber.c	FUNCTION_68	FUNCTION_7
0x4001ee8	           0xfb610	                   movzx edx, byte [rax]	       516	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_2
0x4001eeb	          0x8d4ad0	                   lea ecx, [rdx - 0x30]	       516	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_2
0x4001eee	          0x80f909	                               cmp cl, 9	       516	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_2
0x4001ef1	            0x7709	                            ja 0x4001efc	       516	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_2
0x4001ef3	        0x4183c401	                             add r12d, 1	       518	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_2
0x4001ef7	          0x4889c5	                            mov rbp, rax	       519	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_2
0x4001efa	            0xeb36	                           jmp 0x4001f32	       519	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_2
0x4001efc	          0x80fa2e	                            cmp dl, 0x2e	       521	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_3
0x4001eff	            0x7513	                           jne 0x4001f14	       521	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_3
0x4001f01	          0x4885ff	                           test rdi, rdi	       521	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_3
0x4001f04	            0x750e	                           jne 0x4001f14	       521	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_3
0x4001f06	          0x4889c7	                            mov rdi, rax	       521	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_3
0x4001f09	          0x4839c3	                            cmp rbx, rax	       523	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_3	IF_4
0x4001f0c	            0x7524	                           jne 0x4001f32	       523	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_3	IF_4
0x4001f0e	        0x4883c301	                              add rbx, 1	       523	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_3	IF_4
0x4001f12	            0xeb1e	                           jmp 0x4001f32	       523	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_3	IF_4
0x4001f14	          0x4839f0	                            cmp rax, rsi	       525	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_5
0x4001f17	            0x751f	                           jne 0x4001f38	       525	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_5
0x4001f19	          0x80fa2d	                            cmp dl, 0x2d	       526	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_5	IF_6
0x4001f1c	            0x750b	                           jne 0x4001f29	       526	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_5	IF_6
0x4001f1e	        0x4883c301	                              add rbx, 1	       527	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_5	IF_6
0x4001f22	      0xc644240f80	              mov byte [rsp + 0xf], 0x80	       528	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_5	IF_6
0x4001f27	            0xeb09	                           jmp 0x4001f32	       529	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_5	IF_6
0x4001f29	          0x80fa2b	                            cmp dl, 0x2b	       530	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_5	IF_7
0x4001f2c	            0x750d	                           jne 0x4001f3b	       530	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_5	IF_7
0x4001f2e	        0x4883c301	                              add rbx, 1	       531	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_5	IF_7
0x4001f32	        0x4883c001	                              add rax, 1	       515	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1
0x4001f36	            0xebb0	                           jmp 0x4001ee8	       536	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1
0x4001f38	          0x4889c6	                            mov rsi, rax	       536	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1
0x4001f3b	          0x4885ed	                           test rbp, rbp	       538	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8
0x4001f3e	     0xf8597010000	                           jne 0x40020db	       538	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8
0x4001f44	    0xc744241c0100	               mov dword [rsp + 0x1c], 1	       539	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8
0x4001f4c	          0x4885ff	                           test rdi, rdi	       546	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_11
0x4001f4f	     0xf8566040000	                           jne 0x40023bb	       546	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_11
0x4001f55	            0x84d2	                             test dl, dl	       546	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_11
0x4001f57	     0xf845e040000	                            je 0x40023bb	       546	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_11
0x4001f5d	      0x41c6460800	                   mov byte [r14 + 8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x4001f62	    0x41c746040000	                  mov dword [r14 + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4001f6a	    0x41c706010000	                      mov dword [r14], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4001f71	    0x6641c7460a00	                 mov word [r14 + 0xa], 0	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4001f78	          0x4889f1	                            mov rcx, rsi	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4001f7b	    0x41b800000000	                              mov r8d, 0	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4001f81	      0xba00000000	                              mov edx, 0	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4001f86	           0xfb601	                   movzx eax, byte [rcx]	      7663	decNumber.c	FUNCTION_22	FOR_1	IF_1
0x4001f89	            0x3a02	                      cmp al, byte [rdx]	      7663	decNumber.c	FUNCTION_22	FOR_1	IF_1
0x4001f8b	            0x7405	                            je 0x4001f92	      7663	decNumber.c	FUNCTION_22	FOR_1	IF_1
0x4001f8d	          0x413a00	                       cmp al, byte [r8]	      7663	decNumber.c	FUNCTION_22	FOR_1	IF_1
0x4001f90	            0x7512	                           jne 0x4001fa4	      7663	decNumber.c	FUNCTION_22	FOR_1	IF_1
0x4001f92	            0x84c0	                             test al, al	      7665	decNumber.c	FUNCTION_22	FOR_1	IF_2
0x4001f94	            0x743e	                            je 0x4001fd4	      7665	decNumber.c	FUNCTION_22	FOR_1	IF_2
0x4001f96	        0x4883c101	                              add rcx, 1	      7662	decNumber.c	FUNCTION_22	FOR_1
0x4001f9a	        0x4883c201	                              add rdx, 1	      7662	decNumber.c	FUNCTION_22	FOR_1
0x4001f9e	        0x4983c001	                               add r8, 1	      7662	decNumber.c	FUNCTION_22	FOR_1
0x4001fa2	            0xebe2	                           jmp 0x4001f86	      7662	decNumber.c	FUNCTION_22	FOR_1
0x4001fa4	          0x4889f2	                            mov rdx, rsi	      7663	decNumber.c	FUNCTION_22	FOR_1	IF_1
0x4001fa7	    0x41b800000000	                              mov r8d, 0	      7663	decNumber.c	FUNCTION_22	FOR_1	IF_1
0x4001fad	      0xb800000000	                              mov eax, 0	      7663	decNumber.c	FUNCTION_22	FOR_1	IF_1
0x4001fb2	           0xfb60a	                   movzx ecx, byte [rdx]	      7663	decNumber.c	FUNCTION_22	FOR_1	IF_1
0x4001fb5	            0x3a08	                      cmp cl, byte [rax]	      7663	decNumber.c	FUNCTION_22	FOR_1	IF_1
0x4001fb7	            0x7409	                            je 0x4001fc2	      7663	decNumber.c	FUNCTION_22	FOR_1	IF_1
0x4001fb9	          0x413a08	                       cmp cl, byte [r8]	      7663	decNumber.c	FUNCTION_22	FOR_1	IF_1
0x4001fbc	     0xf8546040000	                           jne 0x4002408	      7663	decNumber.c	FUNCTION_22	FOR_1	IF_1
0x4001fc2	            0x84c9	                             test cl, cl	      7665	decNumber.c	FUNCTION_22	FOR_1	IF_2
0x4001fc4	            0x740e	                            je 0x4001fd4	      7665	decNumber.c	FUNCTION_22	FOR_1	IF_2
0x4001fc6	        0x4883c201	                              add rdx, 1	      7662	decNumber.c	FUNCTION_22	FOR_1
0x4001fca	        0x4883c001	                              add rax, 1	      7662	decNumber.c	FUNCTION_22	FOR_1
0x4001fce	        0x4983c001	                               add r8, 1	      7662	decNumber.c	FUNCTION_22	FOR_1
0x4001fd2	            0xebde	                           jmp 0x4001fb2	      7662	decNumber.c	FUNCTION_22	FOR_1
0x4001fd4	       0xfb644240f	            movzx eax, byte [rsp + 0xf] 	       550	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_12
0x4001fd9	          0x83c840	                            or eax, 0x40	       550	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_12
0x4001fdc	        0x41884608	                  mov byte [r14 + 8], al	       550	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_12
0x4001fe0	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	       551	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_12
0x4001fe8	    0x48c704240000	                      mov qword [rsp], 0	       496	decNumber.c	FUNCTION_68	FUNCTION_7
0x4001ff0	      0xe9e2030000	                           jmp 0x40023d7	       552	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_12
0x4001ff5	        0x4883c601	                              add rsi, 1	       558	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_13
0x4001ff9	       0xfb644240f	            movzx eax, byte [rsp + 0xf] 	       559	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_13
0x4001ffe	          0x83c810	                            or eax, 0x10	       559	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_13
0x4002001	        0x41884608	                  mov byte [r14 + 8], al	       559	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_13
0x4002005	           0xfb606	                   movzx eax, byte [rsi]	       561	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_14
0x4002008	          0x83e0df	                     and eax, 0xffffffdf	       561	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_14
0x400200b	    0x48c704240000	                      mov qword [rsp], 0	       496	decNumber.c	FUNCTION_68	FUNCTION_7
0x4002013	            0x3c4e	                            cmp al, 0x4e	       561	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_14
0x4002015	     0xf85bc030000	                           jne 0x40023d7	       561	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_14
0x400201b	         0xfb64601	               movzx eax, byte [rsi + 1]	       563	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_15
0x400201f	          0x83e0df	                     and eax, 0xffffffdf	       563	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_15
0x4002022	            0x3c41	                            cmp al, 0x41	       563	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_15
0x4002024	     0xf85ad030000	                           jne 0x40023d7	       563	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_15
0x400202a	         0xfb64602	               movzx eax, byte [rsi + 2]	       565	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_16
0x400202e	          0x83e0df	                     and eax, 0xffffffdf	       565	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_16
0x4002031	            0x3c4e	                            cmp al, 0x4e	       565	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_16
0x4002033	     0xf859e030000	                           jne 0x40023d7	       565	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_16
0x4002039	        0x488d5e03	                      lea rbx, [rsi + 3]	       566	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8
0x400203d	         0xfb64603	               movzx eax, byte [rsi + 3]	       569	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_2
0x4002041	            0x3c30	                            cmp al, 0x30	       569	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_2
0x4002043	            0x750b	                           jne 0x4002050	       569	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_2
0x4002045	        0x4883c301	                              add rbx, 1	       569	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_2
0x4002049	           0xfb603	                   movzx eax, byte [rbx]	       569	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_2
0x400204c	            0x3c30	                            cmp al, 0x30	       569	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_2
0x400204e	            0x74f5	                            je 0x4002045	       569	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_2
0x4002050	            0x84c0	                             test al, al	       570	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_17
0x4002052	            0x7410	                            je 0x4002064	       570	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_17
0x4002054	           0xfb603	                   movzx eax, byte [rbx]	       576	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_3	IF_18
0x4002057	          0x8d50d0	                   lea edx, [rax - 0x30]	       576	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_3	IF_18
0x400205a	          0x80fa09	                               cmp dl, 9	       576	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_3	IF_18
0x400205d	            0x7731	                            ja 0x4002090	       576	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_3	IF_18
0x400205f	          0x4889dd	                            mov rbp, rbx	       576	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_3	IF_18
0x4002062	            0xeb18	                           jmp 0x400207c	       576	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_3	IF_18
0x4002064	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	       571	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_17
0x400206c	    0x48c704240000	                      mov qword [rsp], 0	       496	decNumber.c	FUNCTION_68	FUNCTION_7
0x4002074	      0xe95e030000	                           jmp 0x40023d7	       572	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_17
0x4002079	          0x4889cd	                            mov rbp, rcx	       575	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_3
0x400207c	        0x488d4d01	                      lea rcx, [rbp + 1]	       575	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_3
0x4002080	        0x4183c401	                             add r12d, 1	       575	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_3
0x4002084	         0xfb64501	               movzx eax, byte [rbp + 1]	       576	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_3	IF_18
0x4002088	          0x8d50d0	                   lea edx, [rax - 0x30]	       576	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_3	IF_18
0x400208b	          0x80fa09	                               cmp dl, 9	       576	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_3	IF_18
0x400208e	            0x76e9	                           jbe 0x4002079	       576	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_3	IF_18
0x4002090	    0x48c704240000	                      mov qword [rsp], 0	       496	decNumber.c	FUNCTION_68	FUNCTION_7
0x4002098	            0x84c0	                             test al, al	       579	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_19
0x400209a	     0xf8537030000	                           jne 0x40023d7	       579	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_19
0x40020a0	          0x418b07	                    mov eax, dword [r15]	       580	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_20
0x40020a3	          0x8d50ff	                      lea edx, [rax - 1]	       580	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_20
0x40020a6	          0x4439e2	                           cmp edx, r12d	       580	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_20
0x40020a9	            0x7d14	                           jge 0x40020bf	       580	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_20
0x40020ab	      0x41807f1800	                cmp byte [r15 + 0x18], 0	       584	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_20	IF_22
0x40020b0	     0xf850f030000	                           jne 0x40023c5	       584	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_20	IF_22
0x40020b6	          0x4439e0	                           cmp eax, r12d	       584	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_20	IF_22
0x40020b9	     0xf8c06030000	                            jl 0x40023c5	       584	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_20	IF_22
0x40020bf	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	       587	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8
0x40020c7	      0x410fb64608	               movzx eax, byte [r14 + 8]	       588	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8
0x40020cc	        0x8844240f	                mov byte [rsp + 0xf], al	       588	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8
0x40020d0	    0x41bd00000000	                             mov r13d, 0	       491	decNumber.c	FUNCTION_68	FUNCTION_7
0x40020d6	      0xe919010000	                           jmp 0x40021f4	       491	decNumber.c	FUNCTION_68	FUNCTION_7
0x40020db	            0x84d2	                             test dl, dl	       591	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23
0x40020dd	     0xf840b010000	                            je 0x40021ee	       591	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23
0x40020e3	    0xc744241c0100	               mov dword [rsp + 0x1c], 1	       595	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23
0x40020eb	          0x83e2df	                     and edx, 0xffffffdf	       596	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_24
0x40020ee	    0x48c704240000	                      mov qword [rsp], 0	       496	decNumber.c	FUNCTION_68	FUNCTION_7
0x40020f6	          0x80fa45	                            cmp dl, 0x45	       596	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_24
0x40020f9	     0xf85d8020000	                           jne 0x40023d7	       596	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_24
0x40020ff	         0xfb64601	               movzx eax, byte [rsi + 1]	       601	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_25
0x4002103	            0x3c2d	                            cmp al, 0x2d	       601	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_25
0x4002105	            0x750c	                           jne 0x4002113	       601	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_25
0x4002107	        0x4883c602	                              add rsi, 2	       601	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_25
0x400210b	    0x41b901000000	                              mov r9d, 1	       601	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_25
0x4002111	            0xeb1a	                           jmp 0x400212d	       601	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_25
0x4002113	            0x3c2b	                            cmp al, 0x2b	       602	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_26
0x4002115	            0x740c	                            je 0x4002123	       602	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_26
0x4002117	        0x4883c601	                              add rsi, 1	       600	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23
0x400211b	    0x41b900000000	                              mov r9d, 0	       599	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23
0x4002121	            0xeb0a	                           jmp 0x400212d	       599	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23
0x4002123	        0x4883c602	                              add rsi, 2	       602	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_26
0x4002127	    0x41b900000000	                              mov r9d, 0	       599	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23
0x400212d	           0xfb616	                   movzx edx, byte [rsi]	       603	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_27
0x4002130	    0x48c704240000	                      mov qword [rsp], 0	       496	decNumber.c	FUNCTION_68	FUNCTION_7
0x4002138	            0x84d2	                             test dl, dl	       603	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_27
0x400213a	     0xf8497020000	                            je 0x40023d7	       603	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_27
0x4002140	          0x80fa30	                            cmp dl, 0x30	       605	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_4
0x4002143	     0xf85e9020000	                           jne 0x4002432	       605	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_4
0x4002149	        0x807e0100	                   cmp byte [rsi + 1], 0	       605	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_4
0x400214d	     0xf84d4020000	                            je 0x4002427	       605	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_4
0x4002153	        0x4883c601	                              add rsi, 1	       605	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_4
0x4002157	        0x440fb606	                   movzx r8d, byte [rsi]	       605	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_4
0x400215b	        0x4180f830	                           cmp r8b, 0x30	       605	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_4
0x400215f	            0x750b	                           jne 0x400216c	       605	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_4
0x4002161	        0x807e0100	                   cmp byte [rsi + 1], 0	       605	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_4
0x4002165	            0x75ec	                           jne 0x4002153	       605	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_4
0x4002167	      0xe9bb020000	                           jmp 0x4002427	       605	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_4
0x400216c	           0xfb606	                   movzx eax, byte [rsi]	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x400216f	          0x8d50d0	                   lea edx, [rax - 0x30]	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x4002172	          0x80fa09	                               cmp dl, 9	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x4002175	            0x772e	                            ja 0x40021a5	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x4002177	          0x4889f1	                            mov rcx, rsi	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x400217a	    0x41bd00000000	                             mov r13d, 0	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x4002180	    0x428d14ed0000	                        lea edx, [r13*8]	       609	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	CALL_7
0x4002188	        0x428d146a	                  lea edx, [rdx + r13*2]	       609	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	CALL_7
0x400218c	           0xfbec0	                           movsx eax, al	       609	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	CALL_7
0x400218f	      0x448d6c02d0	            lea r13d, [rdx + rax - 0x30]	       609	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	CALL_7
0x4002194	        0x4883c101	                              add rcx, 1	       607	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5
0x4002198	           0xfb601	                   movzx eax, byte [rcx]	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x400219b	          0x8d50d0	                   lea edx, [rax - 0x30]	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x400219e	          0x80fa09	                               cmp dl, 9	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x40021a1	            0x76dd	                           jbe 0x4002180	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x40021a3	            0xeb09	                           jmp 0x40021ae	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x40021a5	          0x4889f1	                            mov rcx, rsi	       605	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_4
0x40021a8	    0x41bd00000000	                             mov r13d, 0	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x40021ae	    0x48c704240000	                      mov qword [rsp], 0	       496	decNumber.c	FUNCTION_68	FUNCTION_7
0x40021b6	            0x84c0	                             test al, al	       612	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_29
0x40021b8	     0xf8519020000	                           jne 0x40023d7	       612	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_29
0x40021be	        0x4883c60a	                            add rsi, 0xa	       617	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_30
0x40021c2	          0x4839ce	                            cmp rsi, rcx	       617	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_30
0x40021c5	            0x7711	                            ja 0x40021d8	       617	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_30
0x40021c7	        0x4180f831	                           cmp r8b, 0x31	       618	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_30	IF_31
0x40021cb	            0x7f05	                            jg 0x40021d2	       618	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_30	IF_31
0x40021cd	          0x4839ce	                            cmp rsi, rcx	       618	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_30	IF_31
0x40021d0	            0x7306	                           jae 0x40021d8	       618	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_30	IF_31
0x40021d2	    0x41bdfe933577	                    mov r13d, 0x773593fe	       618	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_30	IF_31
0x40021d8	          0x4489e8	                           mov eax, r13d	       621	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_32
0x40021db	            0xf7d8	                                 neg eax	       621	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_32
0x40021dd	          0x4584c9	                           test r9b, r9b	       621	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_32
0x40021e0	        0x440f45e8	                        cmovne r13d, eax	       621	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_32
0x40021e4	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	       622	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23
0x40021ec	            0xeb06	                           jmp 0x40021f4	       622	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23
0x40021ee	    0x41bd00000000	                             mov r13d, 0	       491	decNumber.c	FUNCTION_68	FUNCTION_7
0x40021f4	          0x803b30	                    cmp byte [rbx], 0x30	       629	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33
0x40021f7	            0x7520	                           jne 0x4002219	       629	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33
0x40021f9	          0x4839eb	                            cmp rbx, rbp	       630	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33	FOR_6
0x40021fc	            0x731b	                           jae 0x4002219	       630	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33	FOR_6
0x40021fe	           0xfb603	                   movzx eax, byte [rbx]	       631	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33	FOR_6	IF_34
0x4002201	            0x3c2e	                            cmp al, 0x2e	       631	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33	FOR_6	IF_34
0x4002203	            0x7408	                            je 0x400220d	       631	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33	FOR_6	IF_34
0x4002205	            0x3c30	                            cmp al, 0x30	       632	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33	FOR_6	IF_35
0x4002207	            0x7510	                           jne 0x4002219	       632	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33	FOR_6	IF_35
0x4002209	        0x4183ec01	                             sub r12d, 1	       633	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33	FOR_6
0x400220d	        0x4883c301	                              add rbx, 1	       630	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33	FOR_6
0x4002211	          0x4839dd	                            cmp rbp, rbx	       630	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33	FOR_6
0x4002214	            0x75e8	                           jne 0x40021fe	       630	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33	FOR_6
0x4002216	          0x4889eb	                            mov rbx, rbp	       630	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33	FOR_6
0x4002219	          0x4885ff	                           test rdi, rdi	       645	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_37
0x400221c	            0x740e	                            je 0x400222c	       645	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_37
0x400221e	          0x4839ef	                            cmp rdi, rbp	       645	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_37
0x4002221	            0x7309	                           jae 0x400222c	       645	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_37
0x4002223	          0x4889e8	                            mov rax, rbp	       646	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_37
0x4002226	          0x4829f8	                            sub rax, rdi	       646	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_37
0x4002229	          0x4129c5	                           sub r13d, eax	       646	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_37
0x400222c	          0x453b27	                   cmp r12d, dword [r15]	       651	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_38
0x400222f	            0x7f14	                            jg 0x4002245	       651	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_38
0x4002231	        0x498d760a	                    lea rsi, [r14 + 0xa]	       651	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_38
0x4002235	    0x48c704240000	                      mov qword [rsp], 0	       496	decNumber.c	FUNCTION_68	FUNCTION_7
0x400223d	        0x4183fc31	                          cmp r12d, 0x31	       667	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	CALL_10
0x4002241	            0x7e6c	                           jle 0x40022af	       667	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	CALL_10
0x4002243	            0xeb7b	                           jmp 0x40022c0	       667	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	CALL_10
0x4002245	        0x4183fc31	                          cmp r12d, 0x31	       653	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	CALL_9
0x4002249	            0x7f24	                            jg 0x400226f	       653	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	CALL_9
0x400224b	          0x4963c4	                        movsxd rax, r12d	       653	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	CALL_9
0x400224e	     0xfb680000000	                   movzx eax, byte [rax]	       653	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	CALL_9
0x4002255	             0x1c0	                            add eax, eax	       653	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	CALL_9
0x4002257	          0x83f81e	                           cmp eax, 0x1e	       655	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x400225a	     0xf8fe3010000	                            jg 0x4002443	       655	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x4002260	    0x48c704240000	                      mov qword [rsp], 0	       496	decNumber.c	FUNCTION_68	FUNCTION_7
0x4002268	      0x488d742420	                   lea rsi, [rsp + 0x20]	       654	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3
0x400226d	            0xeb40	                           jmp 0x40022af	       654	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3
0x400226f	      0x418d4c2402	                      lea ecx, [r12 + 2]	       653	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	CALL_9
0x4002274	      0xba56555555	                     mov edx, 0x55555556	       653	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	CALL_9
0x4002279	            0x89c8	                            mov eax, ecx	       653	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	CALL_9
0x400227b	            0xf7ea	                                imul edx	       653	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	CALL_9
0x400227d	          0xc1f91f	                           sar ecx, 0x1f	       653	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	CALL_9
0x4002280	            0x29ca	                            sub edx, ecx	       653	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	CALL_9
0x4002282	          0x8d0412	                    lea eax, [rdx + rdx]	       653	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	CALL_9
0x4002285	          0x83f81e	                           cmp eax, 0x1e	       655	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x4002288	     0xf8fd2010000	                            jg 0x4002460	       655	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x400228e	    0x48c704240000	                      mov qword [rsp], 0	       496	decNumber.c	FUNCTION_68	FUNCTION_7
0x4002296	      0x488d742420	                   lea rsi, [rsp + 0x20]	       654	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3
0x400229b	            0xeb23	                           jmp 0x40022c0	       654	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3
0x400229d	      0x834c241c10	             or dword [rsp + 0x1c], 0x10	       657	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39	IF_40
0x40022a2	    0x48c704240000	                      mov qword [rsp], 0	       656	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x40022aa	      0xe928010000	                           jmp 0x40023d7	       657	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39	IF_40
0x40022af	          0x4963c4	                        movsxd rax, r12d	       667	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	CALL_10
0x40022b2	     0xfb680000000	                   movzx eax, byte [rax]	       667	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	CALL_10
0x40022b9	      0x488d4400fe	                lea rax, [rax + rax - 2]	       667	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	CALL_10
0x40022be	            0xeb1b	                           jmp 0x40022db	       667	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	CALL_10
0x40022c0	      0x418d4c2402	                      lea ecx, [r12 + 2]	       667	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	CALL_10
0x40022c5	      0xba56555555	                     mov edx, 0x55555556	       667	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	CALL_10
0x40022ca	            0x89c8	                            mov eax, ecx	       667	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	CALL_10
0x40022cc	            0xf7ea	                                imul edx	       667	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	CALL_10
0x40022ce	          0xc1f91f	                           sar ecx, 0x1f	       667	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	CALL_10
0x40022d1	            0x29ca	                            sub edx, ecx	       667	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	CALL_10
0x40022d3	          0x4863d2	                         movsxd rdx, edx	       667	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	CALL_10
0x40022d6	      0x488d4412fe	                lea rax, [rdx + rdx - 2]	       667	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	CALL_10
0x40022db	        0x4c8d0406	                     lea r8, [rsi + rax]	       667	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	CALL_10
0x40022df	          0x48d1f8	                              sar rax, 1	       668	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1
0x40022e2	          0x8d0440	                  lea eax, [rax + rax*2]	       668	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1
0x40022e5	          0x4489e1	                           mov ecx, r12d	       668	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1
0x40022e8	            0x29c1	                            sub ecx, eax	       668	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1
0x40022ea	      0xba00000000	                              mov edx, 0	       666	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1
0x40022ef	           0xfb603	                   movzx eax, byte [rbx]	       670	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7	IF_41
0x40022f2	            0x3c2e	                            cmp al, 0x2e	       670	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7	IF_41
0x40022f4	            0x742f	                            je 0x4002325	       670	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7	IF_41
0x40022f6	    0x8d3cd5000000	                        lea edi, [rdx*8]	       671	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7	CALL_11
0x40022fd	          0x8d1457	                  lea edx, [rdi + rdx*2]	       671	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7	CALL_11
0x4002300	           0xfbec0	                           movsx eax, al	       671	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7	CALL_11
0x4002303	        0x8d5402d0	             lea edx, [rdx + rax - 0x30]	       671	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7	CALL_11
0x4002307	          0x4839dd	                            cmp rbp, rbx	       672	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7	IF_42
0x400230a	            0x741f	                            je 0x400232b	       672	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7	IF_42
0x400230c	          0x83e901	                              sub ecx, 1	       673	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7
0x400230f	            0x85c9	                           test ecx, ecx	       674	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7	IF_43
0x4002311	            0x7f12	                            jg 0x4002325	       674	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7	IF_43
0x4002313	        0x66418910	                       mov word [r8], dx	       675	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7
0x4002317	        0x4983e802	                               sub r8, 2	       676	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7
0x400231b	      0xba00000000	                              mov edx, 0	       678	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7
0x4002320	      0xb903000000	                              mov ecx, 3	       677	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7
0x4002325	        0x4883c301	                              add rbx, 1	       669	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7
0x4002329	            0xebc4	                           jmp 0x40022ef	       679	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7
0x400232b	        0x66418910	                       mov word [r8], dx	       680	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1
0x400232f	       0xfb644240f	            movzx eax, byte [rsp + 0xf] 	       692	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1
0x4002334	        0x41884608	                  mov byte [r14 + 8], al	       692	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1
0x4002338	        0x45896e04	               mov dword [r14 + 4], r13d	       693	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1
0x400233c	          0x458926	                   mov dword [r14], r12d	       694	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1
0x400233f	          0x418b17	                    mov edx, dword [r15]	       697	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_45
0x4002342	          0x4139d4	                           cmp r12d, edx	       697	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_45
0x4002345	            0x7e3a	                           jle 0x4002381	       697	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_45
0x4002347	    0xc74424180000	               mov dword [rsp + 0x18], 0	       698	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_45
0x400234f	      0x4c8d4c241c	                    lea r9, [rsp + 0x1c]	       699	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_45	CALL_12
0x4002354	      0x4c8d442418	                    lea r8, [rsp + 0x18]	       699	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_45	CALL_12
0x4002359	          0x4489e1	                           mov ecx, r12d	       699	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_45	CALL_12
0x400235c	          0x4889f2	                            mov rdx, rsi	       699	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_45	CALL_12
0x400235f	          0x4c89fe	                            mov rsi, r15	       699	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_45	CALL_12
0x4002362	          0x4c89f7	                            mov rdi, r14	       699	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_45	CALL_12
0x4002365	      0xe80ae5ffff	                    call sym.decSetCoeff	       699	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_45	CALL_12
0x400236a	      0x488d4c241c	                   lea rcx, [rsp + 0x1c]	       701	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_45	CALL_13
0x400236f	      0x488d542418	                   lea rdx, [rsp + 0x18]	       701	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_45	CALL_13
0x4002374	          0x4c89fe	                            mov rsi, r15	       701	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_45	CALL_13
0x4002377	          0x4c89f7	                            mov rdi, r14	       701	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_45	CALL_13
0x400237a	      0xe883f7ffff	                    call sym.decFinalize	       701	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_45	CALL_13
0x400237f	            0xeb56	                           jmp 0x40023d7	       701	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_45	CALL_13
0x4002381	        0x4183ed01	                             sub r13d, 1	       705	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46
0x4002385	        0x418b4708	                mov eax, dword [r15 + 8]	       705	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46
0x4002389	          0x4429e0	                           sub eax, r12d	       705	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46
0x400238c	          0x4139c5	                           cmp r13d, eax	       705	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46
0x400238f	            0x7c0b	                            jl 0x400239c	       705	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46
0x4002391	        0x418b4704	                mov eax, dword [r15 + 4]	       706	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46
0x4002395	            0x29d0	                            sub eax, edx	       706	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46
0x4002397	          0x4139c5	                           cmp r13d, eax	       706	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46
0x400239a	            0x7e3b	                           jle 0x40023d7	       706	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46
0x400239c	    0xc74424180000	               mov dword [rsp + 0x18], 0	       707	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46
0x40023a4	      0x488d4c241c	                   lea rcx, [rsp + 0x1c]	       708	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46	CALL_14
0x40023a9	      0x488d542418	                   lea rdx, [rsp + 0x18]	       708	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46	CALL_14
0x40023ae	          0x4c89fe	                            mov rsi, r15	       708	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46	CALL_14
0x40023b1	          0x4c89f7	                            mov rdi, r14	       708	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46	CALL_14
0x40023b4	      0xe849f7ffff	                    call sym.decFinalize	       708	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46	CALL_14
0x40023b9	            0xeb1c	                           jmp 0x40023d7	       708	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46	CALL_14
0x40023bb	    0x48c704240000	                      mov qword [rsp], 0	       496	decNumber.c	FUNCTION_68	FUNCTION_7
0x40023c3	            0xeb12	                           jmp 0x40023d7	       496	decNumber.c	FUNCTION_68	FUNCTION_7
0x40023c5	    0x48c704240000	                      mov qword [rsp], 0	       496	decNumber.c	FUNCTION_68	FUNCTION_7
0x40023cd	            0xeb08	                           jmp 0x40023d7	       496	decNumber.c	FUNCTION_68	FUNCTION_7
0x40023cf	    0x48c704240000	                      mov qword [rsp], 0	       496	decNumber.c	FUNCTION_68	FUNCTION_7
0x40023d7	        0x488b3c24	                    mov rdi, qword [rsp]	       714	decNumber.c	FUNCTION_68	FUNCTION_7
0x40023db	      0xe800000000	                          call 0x40023e0	       714	decNumber.c	FUNCTION_68	FUNCTION_7
0x40023e0	        0x8b74241c	            mov esi, dword [rsp + 0x1c] 	       715	decNumber.c	FUNCTION_68	FUNCTION_7	CALL_15
0x40023e4	            0x85f6	                           test esi, esi	       715	decNumber.c	FUNCTION_68	FUNCTION_7	CALL_15
0x40023e6	            0x740b	                            je 0x40023f3	       715	decNumber.c	FUNCTION_68	FUNCTION_7	CALL_15
0x40023e8	          0x4c89fa	                            mov rdx, r15	       715	decNumber.c	FUNCTION_68	FUNCTION_7	CALL_15
0x40023eb	          0x4c89f7	                            mov rdi, r14	       715	decNumber.c	FUNCTION_68	FUNCTION_7	CALL_15
0x40023ee	      0xe829f2ffff	                      call sym.decStatus	       715	decNumber.c	FUNCTION_68	FUNCTION_7	CALL_15
0x40023f3	          0x4c89f0	                            mov rax, r14	       717	decNumber.c	FUNCTION_68	FUNCTION_7
0x40023f6	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	       717	decNumber.c	FUNCTION_68	FUNCTION_7
0x40023fb	    0x644833342528	                xor rsi, qword fs:[0x28]	       717	decNumber.c	FUNCTION_68	FUNCTION_7
0x4002404	            0x747c	                            je 0x4002482	       717	decNumber.c	FUNCTION_68	FUNCTION_7
0x4002406	            0xeb75	                           jmp 0x400247d	       717	decNumber.c	FUNCTION_68	FUNCTION_7
0x4002408	       0xfb644240f	            movzx eax, byte [rsp + 0xf] 	       556	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8
0x400240d	          0x83c820	                            or eax, 0x20	       556	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8
0x4002410	        0x41884608	                  mov byte [r14 + 8], al	       556	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8
0x4002414	           0xfb606	                   movzx eax, byte [rsi]	       557	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_13
0x4002417	          0x83e0df	                     and eax, 0xffffffdf	       557	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_13
0x400241a	            0x3c53	                            cmp al, 0x53	       557	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_13
0x400241c	     0xf84d3fbffff	                            je 0x4001ff5	       557	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_13
0x4002422	      0xe9defbffff	                           jmp 0x4002005	       557	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_13
0x4002427	           0xfb606	                   movzx eax, byte [rsi]	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x400242a	          0x4189d0	                            mov r8d, edx	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x400242d	      0xe945fdffff	                           jmp 0x4002177	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x4002432	          0x8d42d0	                   lea eax, [rdx - 0x30]	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x4002435	            0x3c09	                               cmp al, 9	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x4002437	            0x7796	                            ja 0x40023cf	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x4002439	          0x4189d0	                            mov r8d, edx	       605	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_4
0x400243c	            0x89d0	                            mov eax, edx	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x400243e	      0xe934fdffff	                           jmp 0x4002177	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x4002443	          0x4863f8	                         movsxd rdi, eax	       656	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x4002446	      0xe800000000	                          call 0x400244b	       656	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x400244b	          0x4889c6	                            mov rsi, rax	       656	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x400244e	          0x4885c0	                           test rax, rax	       657	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39	IF_40
0x4002451	     0xf8446feffff	                            je 0x400229d	       657	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39	IF_40
0x4002457	        0x48890424	                    mov qword [rsp], rax	       656	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x400245b	      0xe94ffeffff	                           jmp 0x40022af	       656	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x4002460	          0x4863f8	                         movsxd rdi, eax	       656	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x4002463	      0xe800000000	                          call 0x4002468	       656	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x4002468	          0x4889c6	                            mov rsi, rax	       656	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x400246b	          0x4885c0	                           test rax, rax	       657	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39	IF_40
0x400246e	     0xf8429feffff	                            je 0x400229d	       657	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39	IF_40
0x4002474	        0x48890424	                    mov qword [rsp], rax	       656	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x4002478	      0xe943feffff	                           jmp 0x40022c0	       656	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x400247d	      0xe800000000	                          call 0x4002482	       717	decNumber.c	FUNCTION_68	FUNCTION_7
0x4002482	        0x4883c458	                           add rsp, 0x58	       717	decNumber.c	FUNCTION_68	FUNCTION_7
0x4002486	              0x5b	                                 pop rbx	       717	decNumber.c	FUNCTION_68	FUNCTION_7
0x4002487	              0x5d	                                 pop rbp	       717	decNumber.c	FUNCTION_68	FUNCTION_7
0x4002488	            0x415c	                                 pop r12	       717	decNumber.c	FUNCTION_68	FUNCTION_7
0x400248a	            0x415d	                                 pop r13	       717	decNumber.c	FUNCTION_68	FUNCTION_7
0x400248c	            0x415e	                                 pop r14	       717	decNumber.c	FUNCTION_68	FUNCTION_7
0x400248e	            0x415f	                                 pop r15	       717	decNumber.c	FUNCTION_68	FUNCTION_7
0x4002490	              0xc3	                                     ret	       717	decNumber.c	FUNCTION_68	FUNCTION_7
decNumberSetBCD	SWITCH,0:functions,0:ELSE,0:DO,0:FOR,3:IF,0:CALL,3:WHILE,0	60
0x4008bcb	              0x53	                                push rbx	      3485	decNumber.c	FUNCTION_68	FUNCTION_57
0x4008bcc	            0x89d3	                            mov ebx, edx	      3485	decNumber.c	FUNCTION_68	FUNCTION_57
0x4008bce	        0x4c8d5f0a	                    lea r11, [rdi + 0xa]	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x4008bd2	            0x8b07	                    mov eax, dword [rdi]	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x4008bd4	          0x83f831	                           cmp eax, 0x31	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x4008bd7	            0x7f10	                            jg 0x4008be9	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x4008bd9	            0x4898	                                    cdqe	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x4008bdb	     0xfb680000000	                   movzx eax, byte [rax]	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x4008be2	      0x4c8d4400fe	                 lea r8, [rax + rax - 2]	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x4008be7	            0xeb1b	                           jmp 0x4008c04	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x4008be9	          0x8d4802	                      lea ecx, [rax + 2]	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x4008bec	      0xba56555555	                     mov edx, 0x55555556	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x4008bf1	            0x89c8	                            mov eax, ecx	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x4008bf3	            0xf7ea	                                imul edx	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x4008bf5	            0x89c8	                            mov eax, ecx	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x4008bf7	          0xc1f81f	                           sar eax, 0x1f	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x4008bfa	            0x29c2	                            sub edx, eax	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x4008bfc	          0x4863c2	                         movsxd rax, edx	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x4008bff	      0x4c8d4400fe	                 lea r8, [rax + rax - 2]	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x4008c04	          0x4d01d8	                             add r8, r11	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x4008c07	          0x83fb31	                           cmp ebx, 0x31	      3493	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_2
0x4008c0a	            0x770f	                            ja 0x4008c1b	      3493	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_2
0x4008c0c	            0x89d8	                            mov eax, ebx	      3493	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_2
0x4008c0e	     0xfb680000000	                   movzx eax, byte [rax]	      3493	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_2
0x4008c15	        0x8d4440fd	              lea eax, [rax + rax*2 - 3]	      3493	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_2
0x4008c19	            0xeb10	                           jmp 0x4008c2b	      3493	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_2
0x4008c1b	          0x8d4302	                      lea eax, [rbx + 2]	      3493	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_2
0x4008c1e	      0xbaabaaaaaa	                     mov edx, 0xaaaaaaab	      3493	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_2
0x4008c23	            0xf7e2	                                 mul edx	      3493	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_2
0x4008c25	            0xd1ea	                              shr edx, 1	      3493	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_2
0x4008c27	        0x8d4452fd	              lea eax, [rdx + rdx*2 - 3]	      3493	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_2
0x4008c2b	          0x4189da	                           mov r10d, ebx	      3493	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_2
0x4008c2e	          0x4129c2	                           sub r10d, eax	      3493	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_2
0x4008c31	          0x4d39c3	                             cmp r11, r8	      3494	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2
0x4008c34	            0x774f	                            ja 0x4008c85	      3494	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2
0x4008c36	    0x6641c7000000	                        mov word [r8], 0	      3495	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2
0x4008c3c	          0x4585d2	                         test r10d, r10d	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x4008c3f	            0x7e35	                           jle 0x4008c76	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x4008c41	        0x418d42ff	                      lea eax, [r10 - 1]	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x4008c45	      0x4c8d4c0601	                 lea r9, [rsi + rax + 1]	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x4008c4a	          0x4889f2	                            mov rdx, rsi	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x4008c4d	        0x410fb700	                    movzx eax, word [r8]	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x4008c51	    0x8d0cc5000000	                        lea ecx, [rax*8]	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x4008c58	          0x8d0441	                  lea eax, [rcx + rax*2]	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x4008c5b	           0xfb60a	                   movzx ecx, byte [rdx]	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x4008c5e	             0x1c8	                            add eax, ecx	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x4008c60	        0x66418900	                       mov word [r8], ax	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x4008c64	        0x4883c201	                              add rdx, 1	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x4008c68	          0x4c39ca	                             cmp rdx, r9	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x4008c6b	            0x75e0	                           jne 0x4008c4d	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x4008c6d	        0x418d42ff	                      lea eax, [r10 - 1]	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x4008c71	      0x488d740601	                lea rsi, [rsi + rax + 1]	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x4008c76	        0x4983e802	                               sub r8, 2	      3494	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2
0x4008c7a	    0x41ba03000000	                             mov r10d, 3	      3497	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2
0x4008c80	          0x4d39c3	                             cmp r11, r8	      3494	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2
0x4008c83	            0x76b1	                           jbe 0x4008c36	      3494	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2
0x4008c85	            0x891f	                    mov dword [rdi], ebx	      3500	decNumber.c	FUNCTION_68	FUNCTION_57
0x4008c87	          0x4889f8	                            mov rax, rdi	      3502	decNumber.c	FUNCTION_68	FUNCTION_57
0x4008c8a	              0x5b	                                 pop rbx	      3502	decNumber.c	FUNCTION_68	FUNCTION_57
0x4008c8b	              0xc3	                                     ret	      3502	decNumber.c	FUNCTION_68	FUNCTION_57
decNumberMin	SWITCH,0:functions,0:ELSE,0:DO,0:FOR,0:IF,1:CALL,3:WHILE,0	27
0x400357d	              0x55	                                push rbp	      1584	decNumber.c	FUNCTION_68	FUNCTION_25
0x400357e	              0x53	                                push rbx	      1584	decNumber.c	FUNCTION_68	FUNCTION_25
0x400357f	        0x4883ec18	                           sub rsp, 0x18	      1584	decNumber.c	FUNCTION_68	FUNCTION_25
0x4003583	          0x4889fb	                            mov rbx, rdi	      1584	decNumber.c	FUNCTION_68	FUNCTION_25
0x4003586	          0x4889cd	                            mov rbp, rcx	      1584	decNumber.c	FUNCTION_68	FUNCTION_25
0x4003589	    0x64488b042528	                mov rax, qword fs:[0x28]	      1584	decNumber.c	FUNCTION_68	FUNCTION_25
0x4003592	      0x4889442408	                mov qword [rsp + 8], rax	      1584	decNumber.c	FUNCTION_68	FUNCTION_25
0x4003597	            0x31c0	                            xor eax, eax	      1584	decNumber.c	FUNCTION_68	FUNCTION_25
0x4003599	    0xc74424040000	                  mov dword [rsp + 4], 0	      1585	decNumber.c	FUNCTION_68	FUNCTION_25
0x40035a1	      0x4c8d4c2404	                       lea r9, [rsp + 4]	      1586	decNumber.c	FUNCTION_68	FUNCTION_25	CALL_1
0x40035a6	    0x41b803000000	                              mov r8d, 3	      1586	decNumber.c	FUNCTION_68	FUNCTION_25	CALL_1
0x40035ac	      0xe806faffff	                   call sym.decCompareOp	      1586	decNumber.c	FUNCTION_68	FUNCTION_25	CALL_1
0x40035b1	        0x8b742404	                mov esi, dword [rsp + 4]	      1587	decNumber.c	FUNCTION_68	FUNCTION_25	CALL_2
0x40035b5	            0x85f6	                           test esi, esi	      1587	decNumber.c	FUNCTION_68	FUNCTION_25	CALL_2
0x40035b7	            0x740b	                            je 0x40035c4	      1587	decNumber.c	FUNCTION_68	FUNCTION_25	CALL_2
0x40035b9	          0x4889ea	                            mov rdx, rbp	      1587	decNumber.c	FUNCTION_68	FUNCTION_25	CALL_2
0x40035bc	          0x4889df	                            mov rdi, rbx	      1587	decNumber.c	FUNCTION_68	FUNCTION_25	CALL_2
0x40035bf	      0xe858e0ffff	                      call sym.decStatus	      1587	decNumber.c	FUNCTION_68	FUNCTION_25	CALL_2
0x40035c4	          0x4889d8	                            mov rax, rbx	      1592	decNumber.c	FUNCTION_68	FUNCTION_25
0x40035c7	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1592	decNumber.c	FUNCTION_68	FUNCTION_25
0x40035cc	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1592	decNumber.c	FUNCTION_68	FUNCTION_25
0x40035d5	            0x7405	                            je 0x40035dc	      1592	decNumber.c	FUNCTION_68	FUNCTION_25
0x40035d7	      0xe800000000	                          call 0x40035dc	      1592	decNumber.c	FUNCTION_68	FUNCTION_25
0x40035dc	        0x4883c418	                           add rsp, 0x18	      1592	decNumber.c	FUNCTION_68	FUNCTION_25
0x40035e0	              0x5b	                                 pop rbx	      1592	decNumber.c	FUNCTION_68	FUNCTION_25
0x40035e1	              0x5d	                                 pop rbp	      1592	decNumber.c	FUNCTION_68	FUNCTION_25
0x40035e2	              0xc3	                                     ret	      1592	decNumber.c	FUNCTION_68	FUNCTION_25
decNumberRemainder	SWITCH,0:functions,0:ELSE,0:DO,0:FOR,0:IF,1:CALL,3:WHILE,0	27
0x4006581	              0x55	                                push rbp	      2397	decNumber.c	FUNCTION_68	FUNCTION_39
0x4006582	              0x53	                                push rbx	      2397	decNumber.c	FUNCTION_68	FUNCTION_39
0x4006583	        0x4883ec18	                           sub rsp, 0x18	      2397	decNumber.c	FUNCTION_68	FUNCTION_39
0x4006587	          0x4889fb	                            mov rbx, rdi	      2397	decNumber.c	FUNCTION_68	FUNCTION_39
0x400658a	          0x4889cd	                            mov rbp, rcx	      2397	decNumber.c	FUNCTION_68	FUNCTION_39
0x400658d	    0x64488b042528	                mov rax, qword fs:[0x28]	      2397	decNumber.c	FUNCTION_68	FUNCTION_39
0x4006596	      0x4889442408	                mov qword [rsp + 8], rax	      2397	decNumber.c	FUNCTION_68	FUNCTION_39
0x400659b	            0x31c0	                            xor eax, eax	      2397	decNumber.c	FUNCTION_68	FUNCTION_39
0x400659d	    0xc74424040000	                  mov dword [rsp + 4], 0	      2398	decNumber.c	FUNCTION_68	FUNCTION_39
0x40065a5	      0x4c8d4c2404	                       lea r9, [rsp + 4]	      2399	decNumber.c	FUNCTION_68	FUNCTION_39	CALL_1
0x40065aa	    0x41b840000000	                           mov r8d, 0x40	      2399	decNumber.c	FUNCTION_68	FUNCTION_39	CALL_1
0x40065b0	      0xe825f0ffff	                    call sym.decDivideOp	      2399	decNumber.c	FUNCTION_68	FUNCTION_39	CALL_1
0x40065b5	        0x8b742404	                mov esi, dword [rsp + 4]	      2400	decNumber.c	FUNCTION_68	FUNCTION_39	CALL_2
0x40065b9	            0x85f6	                           test esi, esi	      2400	decNumber.c	FUNCTION_68	FUNCTION_39	CALL_2
0x40065bb	            0x740b	                            je 0x40065c8	      2400	decNumber.c	FUNCTION_68	FUNCTION_39	CALL_2
0x40065bd	          0x4889ea	                            mov rdx, rbp	      2400	decNumber.c	FUNCTION_68	FUNCTION_39	CALL_2
0x40065c0	          0x4889df	                            mov rdi, rbx	      2400	decNumber.c	FUNCTION_68	FUNCTION_39	CALL_2
0x40065c3	      0xe854b0ffff	                      call sym.decStatus	      2400	decNumber.c	FUNCTION_68	FUNCTION_39	CALL_2
0x40065c8	          0x4889d8	                            mov rax, rbx	      2405	decNumber.c	FUNCTION_68	FUNCTION_39
0x40065cb	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      2405	decNumber.c	FUNCTION_68	FUNCTION_39
0x40065d0	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2405	decNumber.c	FUNCTION_68	FUNCTION_39
0x40065d9	            0x7405	                            je 0x40065e0	      2405	decNumber.c	FUNCTION_68	FUNCTION_39
0x40065db	      0xe800000000	                          call 0x40065e0	      2405	decNumber.c	FUNCTION_68	FUNCTION_39
0x40065e0	        0x4883c418	                           add rsp, 0x18	      2405	decNumber.c	FUNCTION_68	FUNCTION_39
0x40065e4	              0x5b	                                 pop rbx	      2405	decNumber.c	FUNCTION_68	FUNCTION_39
0x40065e5	              0x5d	                                 pop rbp	      2405	decNumber.c	FUNCTION_68	FUNCTION_39
0x40065e6	              0xc3	                                     ret	      2405	decNumber.c	FUNCTION_68	FUNCTION_39
decNumberSquareRoot	SWITCH,0:functions,0:ELSE,8:DO,1:FOR,1:IF,29:CALL,51:WHILE,0	482
0x4008042	            0x4157	                                push r15	      2798	decNumber.c	FUNCTION_68	FUNCTION_45
0x4008044	            0x4156	                                push r14	      2798	decNumber.c	FUNCTION_68	FUNCTION_45
0x4008046	            0x4155	                                push r13	      2798	decNumber.c	FUNCTION_68	FUNCTION_45
0x4008048	            0x4154	                                push r12	      2798	decNumber.c	FUNCTION_68	FUNCTION_45
0x400804a	              0x55	                                push rbp	      2798	decNumber.c	FUNCTION_68	FUNCTION_45
0x400804b	              0x53	                                push rbx	      2798	decNumber.c	FUNCTION_68	FUNCTION_45
0x400804c	    0x4881ec480100	                          sub rsp, 0x148	      2798	decNumber.c	FUNCTION_68	FUNCTION_45
0x4008053	        0x48893c24	                    mov qword [rsp], rdi	      2798	decNumber.c	FUNCTION_68	FUNCTION_45
0x4008057	          0x4989f6	                            mov r14, rsi	      2798	decNumber.c	FUNCTION_68	FUNCTION_45
0x400805a	          0x4989d7	                            mov r15, rdx	      2798	decNumber.c	FUNCTION_68	FUNCTION_45
0x400805d	    0x64488b042528	                mov rax, qword fs:[0x28]	      2798	decNumber.c	FUNCTION_68	FUNCTION_45
0x4008066	    0x488984243801	            mov qword [rsp + 0x138], rax	      2798	decNumber.c	FUNCTION_68	FUNCTION_45
0x400806e	            0x31c0	                            xor eax, eax	      2798	decNumber.c	FUNCTION_68	FUNCTION_45
0x4008070	    0xc74424380000	               mov dword [rsp + 0x38], 0	      2803	decNumber.c	FUNCTION_68	FUNCTION_45
0x4008078	    0xc744243c0000	               mov dword [rsp + 0x3c], 0	      2804	decNumber.c	FUNCTION_68	FUNCTION_45
0x4008080	    0xc74424400000	               mov dword [rsp + 0x40], 0	      2804	decNumber.c	FUNCTION_68	FUNCTION_45
0x4008088	         0xfb64608	               movzx eax, byte [rsi + 8]	      2850	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5
0x400808c	            0xa870	                           test al, 0x70	      2850	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5
0x400808e	     0xf848f000000	                            je 0x4008123	      2850	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5
0x4008094	            0xa840	                           test al, 0x40	      2851	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5	IF_6	CALL_7
0x4008096	            0x7455	                            je 0x40080ed	      2851	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5	IF_6	CALL_7
0x4008098	            0x84c0	                             test al, al	      2852	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5	IF_6	CALL_8
0x400809a	            0x7928	                           jns 0x40080c4	      2852	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5	IF_6	CALL_8
0x400809c	    0xc744243c8000	           mov dword [rsp + 0x3c], 0x80 	      2852	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5	IF_6	CALL_8
0x40080a4	    0x48c744241800	               mov qword [rsp + 0x18], 0	      2822	decNumber.c	FUNCTION_68	FUNCTION_45
0x40080ad	    0x48c744241000	               mov qword [rsp + 0x10], 0	      2821	decNumber.c	FUNCTION_68	FUNCTION_45
0x40080b6	    0x48c744240800	                  mov qword [rsp + 8], 0	      2820	decNumber.c	FUNCTION_68	FUNCTION_45
0x40080bf	      0xe9b0070000	                           jmp 0x4008874	      2820	decNumber.c	FUNCTION_68	FUNCTION_45
0x40080c4	        0x488b3c24	                    mov rdi, qword [rsp]	      2853	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5	IF_6	CALL_9
0x40080c8	      0xe800000000	                          call 0x40080cd	      2853	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5	IF_6	CALL_9
0x40080cd	    0x48c744241800	               mov qword [rsp + 0x18], 0	      2822	decNumber.c	FUNCTION_68	FUNCTION_45
0x40080d6	    0x48c744241000	               mov qword [rsp + 0x10], 0	      2821	decNumber.c	FUNCTION_68	FUNCTION_45
0x40080df	    0x48c744240800	                  mov qword [rsp + 8], 0	      2820	decNumber.c	FUNCTION_68	FUNCTION_45
0x40080e8	      0xe987070000	                           jmp 0x4008874	      2820	decNumber.c	FUNCTION_68	FUNCTION_45
0x40080ed	      0x4c8d44243c	                    lea r8, [rsp + 0x3c]	      2855	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5	CALL_10
0x40080f2	          0x4889d1	                            mov rcx, rdx	      2855	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5	CALL_10
0x40080f5	      0xba00000000	                              mov edx, 0	      2855	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5	CALL_10
0x40080fa	        0x488b3c24	                    mov rdi, qword [rsp]	      2855	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5	CALL_10
0x40080fe	      0xe8e9acffff	                        call sym.decNaNs	      2855	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5	CALL_10
0x4008103	    0x48c744241800	               mov qword [rsp + 0x18], 0	      2822	decNumber.c	FUNCTION_68	FUNCTION_45
0x400810c	    0x48c744241000	               mov qword [rsp + 0x10], 0	      2821	decNumber.c	FUNCTION_68	FUNCTION_45
0x4008115	    0x48c744240800	                  mov qword [rsp + 8], 0	      2820	decNumber.c	FUNCTION_68	FUNCTION_45
0x400811e	      0xe951070000	                           jmp 0x4008874	      2820	decNumber.c	FUNCTION_68	FUNCTION_45
0x4008123	          0x8b5e04	                mov ebx, dword [rsi + 4]	      2862	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4008126	            0xd1fb	                              sar ebx, 1	      2862	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4008128	        0x895c242c	             mov dword [rsp + 0x2c], ebx	      2862	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400812c	      0x66837e0a00	                 cmp word [rsi + 0xa], 0	      2865	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8	CALL_11
0x4008131	            0x754d	                           jne 0x4008180	      2865	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8	CALL_11
0x4008133	          0x833e01	                      cmp dword [rsi], 1	      2865	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8	CALL_11
0x4008136	            0x7548	                           jne 0x4008180	      2865	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8	CALL_11
0x4008138	        0x488b1c24	                    mov rbx, qword [rsp]	      2866	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8	CALL_12
0x400813c	          0x4889df	                            mov rdi, rbx	      2866	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8	CALL_12
0x400813f	      0xe800000000	                          call 0x4008144	      2866	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8	CALL_12
0x4008144	        0x8b7c242c	            mov edi, dword [rsp + 0x2c] 	      2867	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8
0x4008148	          0x897b04	                mov dword [rbx + 4], edi	      2867	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8
0x400814b	      0x488d4c243c	                   lea rcx, [rsp + 0x3c]	      2869	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8
0x4008150	      0x488d542438	                   lea rdx, [rsp + 0x38]	      2869	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8
0x4008155	          0x4c89fe	                            mov rsi, r15	      2869	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8
0x4008158	          0x4889df	                            mov rdi, rbx	      2869	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8
0x400815b	      0xe8a299ffff	                    call sym.decFinalize	      2869	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8
0x4008160	    0x48c744241800	               mov qword [rsp + 0x18], 0	      2822	decNumber.c	FUNCTION_68	FUNCTION_45
0x4008169	    0x48c744241000	               mov qword [rsp + 0x10], 0	      2821	decNumber.c	FUNCTION_68	FUNCTION_45
0x4008172	    0x48c744240800	                  mov qword [rsp + 8], 0	      2820	decNumber.c	FUNCTION_68	FUNCTION_45
0x400817b	      0xe9f4060000	                           jmp 0x4008874	      2870	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8
0x4008180	            0x84c0	                             test al, al	      2874	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_9	CALL_13
0x4008182	            0x7928	                           jns 0x40081ac	      2874	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_9	CALL_13
0x4008184	    0xc744243c8000	           mov dword [rsp + 0x3c], 0x80 	      2875	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_9
0x400818c	    0x48c744241800	               mov qword [rsp + 0x18], 0	      2822	decNumber.c	FUNCTION_68	FUNCTION_45
0x4008195	    0x48c744241000	               mov qword [rsp + 0x10], 0	      2821	decNumber.c	FUNCTION_68	FUNCTION_45
0x400819e	    0x48c744240800	                  mov qword [rsp + 8], 0	      2820	decNumber.c	FUNCTION_68	FUNCTION_45
0x40081a7	      0xe9c8060000	                           jmp 0x4008874	      2876	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_9
0x40081ac	          0x418b06	                    mov eax, dword [r14]	      2886	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_14
0x40081af	          0x418b1f	                    mov ebx, dword [r15]	      2887	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_15
0x40081b2	          0x8d4b01	                      lea ecx, [rbx + 1]	      2887	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_15
0x40081b5	          0x83f807	                              cmp eax, 7	      2887	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_15
0x40081b8	      0xba07000000	                              mov edx, 7	      2887	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_15
0x40081bd	           0xf4dd0	                         cmovge edx, eax	      2887	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_15
0x40081c0	            0x39d1	                            cmp ecx, edx	      2887	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_15
0x40081c2	           0xf4dd1	                         cmovge edx, ecx	      2887	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_15
0x40081c5	        0x89542424	             mov dword [rsp + 0x24], edx	      2887	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_15
0x40081c9	        0x448d6202	                     lea r12d, [rdx + 2]	      2888	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x40081cd	          0x83f831	                           cmp eax, 0x31	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x40081d0	            0x7f0f	                            jg 0x40081e1	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x40081d2	            0x4898	                                    cdqe	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x40081d4	     0xfb680000000	                   movzx eax, byte [rax]	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x40081db	        0x8d7c000a	              lea edi, [rax + rax + 0xa]	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x40081df	            0xeb17	                           jmp 0x40081f8	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x40081e1	          0x8d4802	                      lea ecx, [rax + 2]	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x40081e4	      0xba56555555	                     mov edx, 0x55555556	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x40081e9	            0x89c8	                            mov eax, ecx	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x40081eb	            0xf7ea	                                imul edx	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x40081ed	            0x89c8	                            mov eax, ecx	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x40081ef	          0xc1f81f	                           sar eax, 0x1f	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x40081f2	            0x29c2	                            sub edx, eax	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x40081f4	        0x8d7c120a	              lea edi, [rdx + rdx + 0xa]	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x40081f8	    0x4c8dac24b000	                   lea r13, [rsp + 0xb0]	      2823	decNumber.c	FUNCTION_68	FUNCTION_45
0x4008200	    0x48c744240800	                  mov qword [rsp + 8], 0	      2820	decNumber.c	FUNCTION_68	FUNCTION_45
0x4008209	          0x83ff24	                           cmp edi, 0x24	      2891	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_10
0x400820c	            0x7e34	                           jle 0x4008242	      2891	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_10
0x400820e	          0x4863ff	                         movsxd rdi, edi	      2892	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_10
0x4008211	      0xe800000000	                          call 0x4008216	      2892	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_10
0x4008216	      0x4889442408	                mov qword [rsp + 8], rax	      2892	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_10
0x400821b	          0x4989c5	                            mov r13, rax	      2896	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_10
0x400821e	          0x4885c0	                           test rax, rax	      2893	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_10	IF_11
0x4008221	            0x751f	                           jne 0x4008242	      2893	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_10	IF_11
0x4008223	    0xc744243c1000	           mov dword [rsp + 0x3c], 0x10 	      2894	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_10	IF_11
0x400822b	    0x48c744241800	               mov qword [rsp + 0x18], 0	      2822	decNumber.c	FUNCTION_68	FUNCTION_45
0x4008234	    0x48c744241000	               mov qword [rsp + 0x10], 0	      2821	decNumber.c	FUNCTION_68	FUNCTION_45
0x400823d	      0xe932060000	                           jmp 0x4008874	      2895	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_10	IF_11
0x4008242	        0x4183fc31	                          cmp r12d, 0x31	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x4008246	            0x7f10	                            jg 0x4008258	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x4008248	          0x4963c4	                        movsxd rax, r12d	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x400824b	     0xfb680000000	                   movzx eax, byte [rax]	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x4008252	        0x8d5c000a	              lea ebx, [rax + rax + 0xa]	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x4008256	            0xeb19	                           jmp 0x4008271	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x4008258	        0x8b442424	            mov eax, dword [rsp + 0x24] 	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x400825c	          0x8d4804	                      lea ecx, [rax + 4]	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x400825f	      0xba56555555	                     mov edx, 0x55555556	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x4008264	            0x89c8	                            mov eax, ecx	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x4008266	            0xf7ea	                                imul edx	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x4008268	          0xc1f91f	                           sar ecx, 0x1f	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x400826b	            0x29ca	                            sub edx, ecx	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x400826d	        0x8d5c120a	              lea ebx, [rdx + rdx + 0xa]	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x4008271	          0x83fb24	                           cmp ebx, 0x24	      2900	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12
0x4008274	            0x7e3d	                           jle 0x40082b3	      2900	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12
0x4008276	          0x4863db	                         movsxd rbx, ebx	      2901	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12
0x4008279	          0x4889df	                            mov rdi, rbx	      2901	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12
0x400827c	      0xe800000000	                          call 0x4008281	      2901	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12
0x4008281	          0x4889c5	                            mov rbp, rax	      2901	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12
0x4008284	      0x4889442410	             mov qword [rsp + 0x10], rax	      2901	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12
0x4008289	          0x4889df	                            mov rdi, rbx	      2902	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12
0x400828c	      0xe800000000	                          call 0x4008291	      2902	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12
0x4008291	      0x4889442418	             mov qword [rsp + 0x18], rax	      2902	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12
0x4008296	          0x4889eb	                            mov rbx, rbp	      2903	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12	IF_13
0x4008299	          0x4885ed	                           test rbp, rbp	      2903	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12	IF_13
0x400829c	            0x7408	                            je 0x40082a6	      2903	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12	IF_13
0x400829e	          0x4889c5	                            mov rbp, rax	      2907	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12
0x40082a1	          0x4885c0	                           test rax, rax	      2903	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12	IF_13
0x40082a4	            0x752f	                           jne 0x40082d5	      2903	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12	IF_13
0x40082a6	    0xc744243c1000	           mov dword [rsp + 0x3c], 0x10 	      2904	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12	IF_13
0x40082ae	      0xe9c1050000	                           jmp 0x4008874	      2905	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12	IF_13
0x40082b3	    0x488dac241001	                  lea rbp, [rsp + 0x110]	      2825	decNumber.c	FUNCTION_68	FUNCTION_45
0x40082bb	    0x488d9c24e000	                   lea rbx, [rsp + 0xe0]	      2824	decNumber.c	FUNCTION_68	FUNCTION_45
0x40082c3	    0x48c744241800	               mov qword [rsp + 0x18], 0	      2822	decNumber.c	FUNCTION_68	FUNCTION_45
0x40082cc	    0x48c744241000	               mov qword [rsp + 0x10], 0	      2821	decNumber.c	FUNCTION_68	FUNCTION_45
0x40082d5	          0x4c89f6	                            mov rsi, r14	      2911	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_18
0x40082d8	          0x4c89ef	                            mov rdi, r13	      2911	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_18
0x40082db	      0xe800000000	                          call 0x40082e0	      2911	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_18
0x40082e0	        0x418b4500	                    mov eax, dword [r13]	      2912	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x40082e4	            0x89c6	                            mov esi, eax	      2912	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x40082e6	        0x41037504	                add esi, dword [r13 + 4]	      2912	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x40082ea	        0x89742428	             mov dword [rsp + 0x28], esi	      2912	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x40082ee	            0xf7d8	                                 neg eax	      2913	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x40082f0	        0x41894504	                mov dword [r13 + 4], eax	      2913	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x40082f4	      0xbe40000000	                           mov esi, 0x40	      2916	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_19
0x40082f9	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      2916	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_19
0x40082fe	      0xe800000000	                          call 0x4008303	      2916	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_19
0x4008303	    0xc7442454ffc9	     mov dword [rsp + 0x54], 0x3b9ac9ff 	      2917	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400830b	    0xc74424580136	     mov dword [rsp + 0x58], 0xc4653601 	      2918	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4008313	        0x8b442424	            mov eax, dword [rsp + 0x24] 	      2924	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4008317	        0x89442450	             mov dword [rsp + 0x50], eax	      2924	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400831b	    0xc68424a80000	                mov byte [rsp + 0xa8], 0	      2925	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4008323	    0xc78424a00000	               mov dword [rsp + 0xa0], 3	      2925	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400832e	        0xc6430800	                   mov byte [rbx + 8], 0	      2926	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4008332	    0xc70303000000	                      mov dword [rbx], 3	      2926	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4008338	      0xf644242801	               test byte [rsp + 0x28], 1	      2927	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_14
0x400833d	            0x7524	                           jne 0x4008363	      2927	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_14
0x400833f	    0xc78424a40000	     mov dword [rsp + 0xa4], 0xfffffffd 	      2929	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_14
0x400834a	    0xc74304fdffff	        mov dword [rbx + 4], 0xfffffffd 	      2930	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_14
0x4008351	    0x66c78424aa00	           mov word [rsp + 0xaa], 0x103 	      2932	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_14
0x400835b	    0x66c7430a3303	            mov word [rbx + 0xa], 0x333 	      2933	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_14
0x4008361	            0xeb2c	                           jmp 0x400838f	      2933	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_14
0x4008363	      0x41836d0401	                  sub dword [r13 + 4], 1	      2944	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_3
0x4008368	      0x8344242801	               add dword [rsp + 0x28], 1	      2945	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_3
0x400836d	    0xc78424a40000	     mov dword [rsp + 0xa4], 0xfffffffc 	      2946	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_3
0x4008378	    0xc74304feffff	        mov dword [rbx + 4], 0xfffffffe 	      2947	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_3
0x400837f	    0x66c78424aa00	           mov word [rsp + 0xaa], 0x333 	      2949	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_3
0x4008389	    0x66c7430a0301	            mov word [rbx + 0xa], 0x103 	      2950	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_3
0x400838f	      0x4c8d442440	                    lea r8, [rsp + 0x40]	      2960	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_20
0x4008394	      0x488d4c2450	                   lea rcx, [rsp + 0x50]	      2960	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_20
0x4008399	          0x4c89ea	                            mov rdx, r13	      2960	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_20
0x400839c	          0x4889de	                            mov rsi, rbx	      2960	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_20
0x400839f	          0x4889df	                            mov rdi, rbx	      2960	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_20
0x40083a2	      0xe8a2b2ffff	                  call sym.decMultiplyOp	      2960	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_20
0x40083a7	      0x4c8d4c2440	                    lea r9, [rsp + 0x40]	      2961	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_21
0x40083ac	    0x41b800000000	                              mov r8d, 0	      2961	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_21
0x40083b2	      0x488d4c2450	                   lea rcx, [rsp + 0x50]	      2961	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_21
0x40083b7	    0x488d9424a000	                   lea rdx, [rsp + 0xa0]	      2961	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_21
0x40083bf	          0x4889de	                            mov rsi, rbx	      2961	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_21
0x40083c2	          0x4889df	                            mov rdi, rbx	      2961	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_21
0x40083c5	      0xe8c2c2ffff	                       call sym.decAddOp	      2961	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_21
0x40083ca	    0xc68424980000	                mov byte [rsp + 0x98], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x40083d2	    0xc78424940000	               mov dword [rsp + 0x94], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x40083dd	    0xc78424900000	               mov dword [rsp + 0x90], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x40083e8	    0x66c784249a00	                mov word [rsp + 0x9a], 0	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x40083f2	    0xc68424a80000	                mov byte [rsp + 0xa8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x40083fa	    0xc78424a00000	               mov dword [rsp + 0xa0], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4008405	    0x66c78424aa00	                mov word [rsp + 0xaa], 5	      2968	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400840f	    0xc78424a40000	     mov dword [rsp + 0xa4], 0xffffffff 	      2969	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400841a	    0xc74424500300	               mov dword [rsp + 0x50], 3	      2970	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4008422	        0x4183fc03	                             cmp r12d, 3	      2971	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1
0x4008426	            0x7e76	                           jle 0x400849e	      2971	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1
0x4008428	      0xb803000000	                              mov eax, 3	      2971	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1
0x400842d	        0x8d4400fe	                lea eax, [rax + rax - 2]	      2973	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_24
0x4008431	          0x4439e0	                           cmp eax, r12d	      2973	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_24
0x4008434	        0x410f4fc4	                         cmovg eax, r12d	      2973	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_24
0x4008438	        0x89442450	             mov dword [rsp + 0x50], eax	      2973	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_24
0x400843c	      0x4c8d4c2440	                    lea r9, [rsp + 0x40]	      2976	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_25
0x4008441	    0x41b880000000	                           mov r8d, 0x80	      2976	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_25
0x4008447	      0x488d4c2450	                   lea rcx, [rsp + 0x50]	      2976	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_25
0x400844c	          0x4889da	                            mov rdx, rbx	      2976	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_25
0x400844f	          0x4c89ee	                            mov rsi, r13	      2976	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_25
0x4008452	          0x4889ef	                            mov rdi, rbp	      2976	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_25
0x4008455	      0xe880d1ffff	                    call sym.decDivideOp	      2976	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_25
0x400845a	      0x4c8d4c2440	                    lea r9, [rsp + 0x40]	      2977	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_26
0x400845f	    0x41b800000000	                              mov r8d, 0	      2977	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_26
0x4008465	      0x488d4c2450	                   lea rcx, [rsp + 0x50]	      2977	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_26
0x400846a	          0x4889da	                            mov rdx, rbx	      2977	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_26
0x400846d	          0x4889ee	                            mov rsi, rbp	      2977	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_26
0x4008470	          0x4889ef	                            mov rdi, rbp	      2977	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_26
0x4008473	      0xe814c2ffff	                       call sym.decAddOp	      2977	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_26
0x4008478	      0x4c8d442440	                    lea r8, [rsp + 0x40]	      2978	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_27
0x400847d	      0x488d4c2450	                   lea rcx, [rsp + 0x50]	      2978	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_27
0x4008482	    0x488d9424a000	                   lea rdx, [rsp + 0xa0]	      2978	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_27
0x400848a	          0x4889ee	                            mov rsi, rbp	      2978	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_27
0x400848d	          0x4889df	                            mov rdi, rbx	      2978	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_27
0x4008490	      0xe8b4b1ffff	                  call sym.decMultiplyOp	      2978	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_27
0x4008495	        0x8b442450	            mov eax, dword [rsp + 0x50] 	      2971	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1
0x4008499	          0x4139c4	                           cmp r12d, eax	      2971	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1
0x400849c	            0x7f8f	                            jg 0x400842d	      2971	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1
0x400849e	          0x498b07	                    mov rax, qword [r15]	      2985	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x40084a1	      0x4889442470	             mov qword [rsp + 0x70], rax	      2985	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x40084a6	        0x498b4708	                mov rax, qword [r15 + 8]	      2985	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x40084aa	      0x4889442478	             mov qword [rsp + 0x78], rax	      2985	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x40084af	        0x498b4710	            mov rax, qword [r15 + 0x10] 	      2985	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x40084b3	    0x488984248000	             mov qword [rsp + 0x80], rax	      2985	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x40084bb	        0x418b4718	            mov eax, dword [r15 + 0x18] 	      2985	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x40084bf	    0x898424880000	             mov dword [rsp + 0x88], eax	      2985	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x40084c6	    0xc744247c0300	               mov dword [rsp + 0x7c], 3	      2986	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x40084ce	        0x8b442428	            mov eax, dword [rsp + 0x28] 	      2987	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x40084d2	          0x4189c4	                           mov r12d, eax	      2987	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x40084d5	        0x41c1ec1f	                          shr r12d, 0x1f	      2987	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x40084d9	          0x4101c4	                           add r12d, eax	      2987	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x40084dc	          0x41d1fc	                             sar r12d, 1	      2987	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x40084df	        0x44016304	               add dword [rbx + 4], r12d	      2987	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x40084e3	    0xc74424440000	               mov dword [rsp + 0x44], 0	      2988	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x40084eb	    0xc74424380000	               mov dword [rsp + 0x38], 0	      2989	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x40084f3	      0x4c8d442444	                    lea r8, [rsp + 0x44]	      2990	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_28
0x40084f8	      0x488d4c2438	                   lea rcx, [rsp + 0x38]	      2990	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_28
0x40084fd	      0x488d542470	                   lea rdx, [rsp + 0x70]	      2990	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_28
0x4008502	          0x4889de	                            mov rsi, rbx	      2990	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_28
0x4008505	          0x4889df	                            mov rdi, rbx	      2990	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_28
0x4008508	      0xe8d485ffff	                     call sym.decCopyFit	      2990	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_28
0x400850d	      0x488d4c2444	                   lea rcx, [rsp + 0x44]	      2991	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4008512	      0x488d542438	                   lea rdx, [rsp + 0x38]	      2991	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4008517	      0x488d742470	                   lea rsi, [rsp + 0x70]	      2991	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400851c	          0x4889df	                            mov rdi, rbx	      2991	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400851f	      0xe8de95ffff	                    call sym.decFinalize	      2991	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4008524	        0x8b442444	            mov eax, dword [rsp + 0x44] 	      2995	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_15
0x4008528	          0xf6c402	                              test ah, 2	      2995	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_15
0x400852b	            0x7415	                            je 0x4008542	      2995	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_15
0x400852d	        0x8944243c	             mov dword [rsp + 0x3c], eax	      2996	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_15
0x4008531	          0x4889de	                            mov rsi, rbx	      2997	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_15	CALL_29
0x4008534	        0x488b3c24	                    mov rdi, qword [rsp]	      2997	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_15	CALL_29
0x4008538	      0xe800000000	                          call 0x400853d	      2997	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_15	CALL_29
0x400853d	      0xe932030000	                           jmp 0x4008874	      2998	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_15
0x4008542	      0x25dff7ffff	                     and eax, 0xfffff7df	      3002	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4008547	         0x944243c	              or dword [rsp + 0x3c], eax	      3002	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400854b	        0x44296304	               sub dword [rbx + 4], r12d	      3005	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400854f	      0x836c245001	               sub dword [rsp + 0x50], 1	      3012	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4008554	            0x8b03	                    mov eax, dword [rbx]	      3013	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4008556	            0xf7d0	                                 not eax	      3013	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4008558	    0x898424a40000	             mov dword [rsp + 0xa4], eax	      3013	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400855f	      0x4c8d4c2440	                    lea r9, [rsp + 0x40]	      3014	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_30
0x4008564	    0x41b880000000	                           mov r8d, 0x80	      3014	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_30
0x400856a	      0x488d4c2450	                   lea rcx, [rsp + 0x50]	      3014	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_30
0x400856f	    0x488d9424a000	                   lea rdx, [rsp + 0xa0]	      3014	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_30
0x4008577	          0x4889de	                            mov rsi, rbx	      3014	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_30
0x400857a	          0x4889ef	                            mov rdi, rbp	      3014	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_30
0x400857d	      0xe80ac1ffff	                       call sym.decAddOp	      3014	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_30
0x4008582	    0xc744245c0100	               mov dword [rsp + 0x5c], 1	      3015	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400858a	      0x4c8d442440	                    lea r8, [rsp + 0x40]	      3016	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_31
0x400858f	      0x488d4c2450	                   lea rcx, [rsp + 0x50]	      3016	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_31
0x4008594	          0x4889ea	                            mov rdx, rbp	      3016	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_31
0x4008597	          0x4889ee	                            mov rsi, rbp	      3016	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_31
0x400859a	          0x4889ef	                            mov rdi, rbp	      3016	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_31
0x400859d	      0xe8a7b0ffff	                  call sym.decMultiplyOp	      3016	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_31
0x40085a2	      0x4c8d4c2440	                    lea r9, [rsp + 0x40]	      3017	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_32
0x40085a7	    0x41b801000000	                              mov r8d, 1	      3017	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_32
0x40085ad	      0x488d4c2450	                   lea rcx, [rsp + 0x50]	      3017	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_32
0x40085b2	          0x4889ea	                            mov rdx, rbp	      3017	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_32
0x40085b5	          0x4c89ee	                            mov rsi, r13	      3017	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_32
0x40085b8	          0x4889ef	                            mov rdi, rbp	      3017	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_32
0x40085bb	      0xe8f7a9ffff	                   call sym.decCompareOp	      3017	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_32
0x40085c0	        0x807d0800	                   cmp byte [rbp + 8], 0	      3018	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16	CALL_33
0x40085c4	            0x7967	                           jns 0x400862d	      3018	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16	CALL_33
0x40085c6	    0x838424a40000	               add dword [rsp + 0xa4], 1	      3020	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16
0x40085ce	    0x66c78424aa00	                mov word [rsp + 0xaa], 1	      3021	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16
0x40085d8	      0x4c8d4c2440	                    lea r9, [rsp + 0x40]	      3022	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16	CALL_34
0x40085dd	    0x41b880000000	                           mov r8d, 0x80	      3022	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16	CALL_34
0x40085e3	      0x488d4c2450	                   lea rcx, [rsp + 0x50]	      3022	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16	CALL_34
0x40085e8	    0x488d9424a000	                   lea rdx, [rsp + 0xa0]	      3022	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16	CALL_34
0x40085f0	          0x4889de	                            mov rsi, rbx	      3022	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16	CALL_34
0x40085f3	          0x4889df	                            mov rdi, rbx	      3022	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16	CALL_34
0x40085f6	      0xe891c0ffff	                       call sym.decAddOp	      3022	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16	CALL_34
0x40085fb	      0x4429642478	            sub dword [rsp + 0x78], r12d	      3024	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16
0x4008600	      0x4429642474	            sub dword [rsp + 0x74], r12d	      3025	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16
0x4008605	      0x4c8d4c2440	                    lea r9, [rsp + 0x40]	      3026	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16	CALL_35
0x400860a	    0x41b800000000	                              mov r8d, 0	      3026	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16	CALL_35
0x4008610	      0x488d4c2470	                   lea rcx, [rsp + 0x70]	      3026	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16	CALL_35
0x4008615	          0x4889da	                            mov rdx, rbx	      3026	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16	CALL_35
0x4008618	    0x488db4249000	                   lea rsi, [rsp + 0x90]	      3026	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16	CALL_35
0x4008620	          0x4889df	                            mov rdi, rbx	      3026	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16	CALL_35
0x4008623	      0xe864c0ffff	                       call sym.decAddOp	      3026	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16	CALL_35
0x4008628	      0xe9c9000000	                           jmp 0x40086f6	      3026	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16	CALL_35
0x400862d	      0x4c8d4c2440	                    lea r9, [rsp + 0x40]	      3029	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_36
0x4008632	    0x41b800000000	                              mov r8d, 0	      3029	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_36
0x4008638	      0x488d4c2450	                   lea rcx, [rsp + 0x50]	      3029	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_36
0x400863d	    0x488d9424a000	                   lea rdx, [rsp + 0xa0]	      3029	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_36
0x4008645	          0x4889de	                            mov rsi, rbx	      3029	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_36
0x4008648	          0x4889ef	                            mov rdi, rbp	      3029	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_36
0x400864b	      0xe83cc0ffff	                       call sym.decAddOp	      3029	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_36
0x4008650	    0xc744245c0500	               mov dword [rsp + 0x5c], 5	      3030	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4
0x4008658	      0x4c8d442440	                    lea r8, [rsp + 0x40]	      3031	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_37
0x400865d	      0x488d4c2450	                   lea rcx, [rsp + 0x50]	      3031	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_37
0x4008662	          0x4889ea	                            mov rdx, rbp	      3031	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_37
0x4008665	          0x4889ee	                            mov rsi, rbp	      3031	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_37
0x4008668	          0x4889ef	                            mov rdi, rbp	      3031	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_37
0x400866b	      0xe8d9afffff	                  call sym.decMultiplyOp	      3031	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_37
0x4008670	      0x4c8d4c2440	                    lea r9, [rsp + 0x40]	      3032	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_38
0x4008675	    0x41b801000000	                              mov r8d, 1	      3032	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_38
0x400867b	      0x488d4c2450	                   lea rcx, [rsp + 0x50]	      3032	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_38
0x4008680	          0x4c89ea	                            mov rdx, r13	      3032	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_38
0x4008683	          0x4889ee	                            mov rsi, rbp	      3032	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_38
0x4008686	          0x4889ef	                            mov rdi, rbp	      3032	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_38
0x4008689	      0xe829a9ffff	                   call sym.decCompareOp	      3032	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_38
0x400868e	        0x807d0800	                   cmp byte [rbp + 8], 0	      3033	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_39
0x4008692	            0x7962	                           jns 0x40086f6	      3033	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_39
0x4008694	    0x838424a40000	               add dword [rsp + 0xa4], 1	      3034	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17
0x400869c	    0x66c78424aa00	                mov word [rsp + 0xaa], 1	      3035	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17
0x40086a6	      0x4c8d4c2440	                    lea r9, [rsp + 0x40]	      3036	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_40
0x40086ab	    0x41b800000000	                              mov r8d, 0	      3036	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_40
0x40086b1	      0x488d4c2450	                   lea rcx, [rsp + 0x50]	      3036	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_40
0x40086b6	    0x488d9424a000	                   lea rdx, [rsp + 0xa0]	      3036	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_40
0x40086be	          0x4889de	                            mov rsi, rbx	      3036	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_40
0x40086c1	          0x4889df	                            mov rdi, rbx	      3036	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_40
0x40086c4	      0xe8c3bfffff	                       call sym.decAddOp	      3036	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_40
0x40086c9	      0x4429642478	            sub dword [rsp + 0x78], r12d	      3038	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17
0x40086ce	      0x4429642474	            sub dword [rsp + 0x74], r12d	      3039	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17
0x40086d3	      0x4c8d4c2440	                    lea r9, [rsp + 0x40]	      3040	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_41
0x40086d8	    0x41b800000000	                              mov r8d, 0	      3040	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_41
0x40086de	      0x488d4c2470	                   lea rcx, [rsp + 0x70]	      3040	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_41
0x40086e3	          0x4889da	                            mov rdx, rbx	      3040	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_41
0x40086e6	    0x488db4249000	                   lea rsi, [rsp + 0x90]	      3040	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_41
0x40086ee	          0x4889df	                            mov rdi, rbx	      3040	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_41
0x40086f1	      0xe896bfffff	                       call sym.decAddOp	      3040	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_41
0x40086f6	        0x44016304	               add dword [rbx + 4], r12d	      3047	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x40086fa	          0x4889de	                            mov rsi, rbx	      3051	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_42
0x40086fd	          0x4889ef	                            mov rdi, rbp	      3051	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_42
0x4008700	      0xe800000000	                          call 0x4008705	      3051	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_42
0x4008705	      0x4c8d442448	                    lea r8, [rsp + 0x48]	      3052	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_43
0x400870a	      0xb901000000	                              mov ecx, 1	      3052	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_43
0x400870f	      0xba01000000	                              mov edx, 1	      3052	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_43
0x4008714	          0x4c89fe	                            mov rsi, r15	      3052	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_43
0x4008717	          0x4889ef	                            mov rdi, rbp	      3052	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_43
0x400871a	      0xe8ed7fffff	                        call sym.decTrim	      3052	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_43
0x400871f	          0x8b4500	                    mov eax, dword [rbp]	      3058	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_18
0x4008722	        0x8d4400ff	                lea eax, [rax + rax - 1]	      3058	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_18
0x4008726	        0x39442424	            cmp dword [rsp + 0x24], eax 	      3058	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_18
0x400872a	            0x7d0d	                           jge 0x4008739	      3058	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_18
0x400872c	    0x814c243c2008	            or dword [rsp + 0x3c], 0x820	      3059	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_18
0x4008734	      0xe9fb000000	                           jmp 0x4008834	      3059	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_18
0x4008739	    0xc744244c0000	               mov dword [rsp + 0x4c], 0	      3062	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5
0x4008741	      0x4c8d44244c	                    lea r8, [rsp + 0x4c]	      3063	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	CALL_44
0x4008746	      0x488d4c2450	                   lea rcx, [rsp + 0x50]	      3063	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	CALL_44
0x400874b	          0x4889ea	                            mov rdx, rbp	      3063	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	CALL_44
0x400874e	          0x4889ee	                            mov rsi, rbp	      3063	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	CALL_44
0x4008751	          0x4889ef	                            mov rdi, rbp	      3063	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	CALL_44
0x4008754	      0xe8f0aeffff	                  call sym.decMultiplyOp	      3063	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	CALL_44
0x4008759	      0xf644244d02	               test byte [rsp + 0x4d], 2	      3064	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	IF_19
0x400875e	            0x740d	                            je 0x400876d	      3064	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	IF_19
0x4008760	    0x814c243c2008	            or dword [rsp + 0x3c], 0x820	      3065	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	IF_19
0x4008768	      0xe9c7000000	                           jmp 0x4008834	      3065	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	IF_19
0x400876d	      0x4c8d4c244c	                    lea r9, [rsp + 0x4c]	      3068	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_45
0x4008772	    0x41b801000000	                              mov r8d, 1	      3068	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_45
0x4008778	      0x488d4c2450	                   lea rcx, [rsp + 0x50]	      3068	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_45
0x400877d	          0x4c89f2	                            mov rdx, r14	      3068	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_45
0x4008780	          0x4889ee	                            mov rsi, rbp	      3068	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_45
0x4008783	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	      3068	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_45
0x400878b	      0xe827a8ffff	                   call sym.decCompareOp	      3068	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_45
0x4008790	    0x6683bc24aa00	                cmp word [rsp + 0xaa], 0	      3069	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_46
0x4008799	            0x7514	                           jne 0x40087af	      3069	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_46
0x400879b	    0x83bc24a00000	               cmp dword [rsp + 0xa0], 1	      3069	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_46
0x40087a3	            0x750a	                           jne 0x40087af	      3069	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_46
0x40087a5	    0xf68424a80000	           test byte [rsp + 0xa8], 0x70 	      3069	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_46
0x40087ad	            0x740a	                            je 0x40087b9	      3069	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_46
0x40087af	    0x814c243c2008	            or dword [rsp + 0x3c], 0x820	      3069	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_46
0x40087b7	            0xeb7b	                           jmp 0x4008834	      3069	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_46
0x40087b9	          0x8b5304	                mov edx, dword [rbx + 4]	      3073	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7
0x40087bc	        0x8b6c242c	            mov ebp, dword [rsp + 0x2c] 	      3074	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	IF_21
0x40087c0	            0x29d5	                            sub ebp, edx	      3074	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	IF_21
0x40087c2	            0x790a	                           jns 0x40087ce	      3074	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	IF_21
0x40087c4	    0x814c243c0008	            or dword [rsp + 0x3c], 0x800	      3074	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	IF_21
0x40087cc	            0xeb66	                           jmp 0x4008834	      3074	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	IF_21
0x40087ce	        0x418b4704	                mov eax, dword [r15 + 4]	      3078	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8
0x40087d2	          0x412b07	                    sub eax, dword [r15]	      3078	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8
0x40087d5	          0x83c001	                              add eax, 1	      3078	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8
0x40087d8	            0x29d0	                            sub eax, edx	      3078	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8
0x40087da	            0x39c5	                            cmp ebp, eax	      3079	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_22
0x40087dc	            0x7e11	                           jle 0x40087ef	      3079	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_22
0x40087de	      0x41807f1800	                cmp byte [r15 + 0x18], 0	      3079	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_22
0x40087e3	            0x740a	                            je 0x40087ef	      3079	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_22
0x40087e5	    0x814c243c0004	            or dword [rsp + 0x3c], 0x400	      3081	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_22
0x40087ed	            0x89c5	                            mov ebp, eax	      3080	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_22
0x40087ef	        0x8b442448	            mov eax, dword [rsp + 0x48] 	      3083	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_23
0x40087f3	            0x39c5	                            cmp ebp, eax	      3083	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_23
0x40087f5	            0x7e0a	                           jle 0x4008801	      3083	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_23
0x40087f7	    0x814c243c0004	            or dword [rsp + 0x3c], 0x400	      3085	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_23
0x40087ff	            0x89c5	                            mov ebp, eax	      3084	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_23
0x4008801	            0x85ed	                           test ebp, ebp	      3087	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24
0x4008803	            0x7e2f	                           jle 0x4008834	      3087	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24
0x4008805	            0x8b03	                    mov eax, dword [rbx]	      3088	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24	CALL_48
0x4008807	          0x83f831	                           cmp eax, 0x31	      3088	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24	CALL_48
0x400880a	            0x7f0b	                            jg 0x4008817	      3088	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24	CALL_48
0x400880c	            0x4898	                                    cdqe	      3088	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24	CALL_48
0x400880e	     0xfb6b0000000	                   movzx esi, byte [rax]	      3088	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24	CALL_48
0x4008815	            0xeb0d	                           jmp 0x4008824	      3088	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24	CALL_48
0x4008817	          0x83c002	                              add eax, 2	      3088	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24	CALL_48
0x400881a	      0xb903000000	                              mov ecx, 3	      3088	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24	CALL_48
0x400881f	              0x99	                                     cdq	      3088	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24	CALL_48
0x4008820	            0xf7f9	                                idiv ecx	      3088	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24	CALL_48
0x4008822	            0x89c6	                            mov esi, eax	      3088	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24	CALL_48
0x4008824	        0x488d7b0a	                    lea rdi, [rbx + 0xa]	      3088	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24	CALL_48
0x4008828	            0x89ea	                            mov edx, ebp	      3088	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24	CALL_48
0x400882a	      0xe8f97cffff	                call sym.decShiftToLeast	      3088	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24	CALL_48
0x400882f	           0x16b04	                add dword [rbx + 4], ebp	      3089	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24
0x4008832	            0x292b	                    sub dword [rbx], ebp	      3090	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24
0x4008834	        0x8b54243c	            mov edx, dword [rsp + 0x3c] 	      3099	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25
0x4008838	          0xf6c620	                           test dh, 0x20	      3099	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25
0x400883b	            0x742b	                            je 0x4008868	      3099	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25
0x400883d	          0x418b06	                    mov eax, dword [r14]	      3103	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25	IF_26
0x4008840	        0x41034604	                add eax, dword [r14 + 4]	      3103	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25	IF_26
0x4008844	          0x83e801	                              sub eax, 1	      3103	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25	IF_26
0x4008847	        0x418b7708	                mov esi, dword [r15 + 8]	      3103	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25	IF_26
0x400884b	          0x8d0c36	                    lea ecx, [rsi + rsi]	      3103	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25	IF_26
0x400884e	            0x39c8	                            cmp eax, ecx	      3103	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25	IF_26
0x4008850	            0x7c07	                            jl 0x4008859	      3103	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25	IF_26
0x4008852	          0x80e6cf	                            and dh, 0xcf	      3103	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25	IF_26
0x4008855	        0x8954243c	             mov dword [rsp + 0x3c], edx	      3103	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25	IF_26
0x4008859	        0x8b44243c	            mov eax, dword [rsp + 0x3c] 	      3108	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25	IF_28
0x400885d	            0xa820	                           test al, 0x20	      3108	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25	IF_28
0x400885f	            0x7507	                           jne 0x4008868	      3108	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25	IF_28
0x4008861	          0x80e4df	                            and ah, 0xdf	      3108	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25	IF_28
0x4008864	        0x8944243c	             mov dword [rsp + 0x3c], eax	      3108	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25	IF_28
0x4008868	          0x4889de	                            mov rsi, rbx	      3111	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_49
0x400886b	        0x488b3c24	                    mov rdi, qword [rsp]	      3111	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_49
0x400886f	      0xe800000000	                          call 0x4008874	      3111	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_49
0x4008874	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      3114	decNumber.c	FUNCTION_68	FUNCTION_45
0x4008879	      0xe800000000	                          call 0x400887e	      3114	decNumber.c	FUNCTION_68	FUNCTION_45
0x400887e	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      3115	decNumber.c	FUNCTION_68	FUNCTION_45
0x4008883	      0xe800000000	                          call 0x4008888	      3115	decNumber.c	FUNCTION_68	FUNCTION_45
0x4008888	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      3116	decNumber.c	FUNCTION_68	FUNCTION_45
0x400888d	      0xe800000000	                          call 0x4008892	      3116	decNumber.c	FUNCTION_68	FUNCTION_45
0x4008892	        0x8b74243c	            mov esi, dword [rsp + 0x3c] 	      3120	decNumber.c	FUNCTION_68	FUNCTION_45	CALL_50
0x4008896	            0x85f6	                           test esi, esi	      3120	decNumber.c	FUNCTION_68	FUNCTION_45	CALL_50
0x4008898	            0x740c	                            je 0x40088a6	      3120	decNumber.c	FUNCTION_68	FUNCTION_45	CALL_50
0x400889a	          0x4c89fa	                            mov rdx, r15	      3120	decNumber.c	FUNCTION_68	FUNCTION_45	CALL_50
0x400889d	        0x488b3c24	                    mov rdi, qword [rsp]	      3120	decNumber.c	FUNCTION_68	FUNCTION_45	CALL_50
0x40088a1	      0xe8768dffff	                      call sym.decStatus	      3120	decNumber.c	FUNCTION_68	FUNCTION_45	CALL_50
0x40088a6	        0x488b0424	                    mov rax, qword [rsp]	      3125	decNumber.c	FUNCTION_68	FUNCTION_45
0x40088aa	    0x488bb4243801	           mov rsi, qword [rsp + 0x138] 	      3125	decNumber.c	FUNCTION_68	FUNCTION_45
0x40088b2	    0x644833342528	                xor rsi, qword fs:[0x28]	      3125	decNumber.c	FUNCTION_68	FUNCTION_45
0x40088bb	            0x7405	                            je 0x40088c2	      3125	decNumber.c	FUNCTION_68	FUNCTION_45
0x40088bd	      0xe800000000	                          call 0x40088c2	      3125	decNumber.c	FUNCTION_68	FUNCTION_45
0x40088c2	    0x4881c4480100	                          add rsp, 0x148	      3125	decNumber.c	FUNCTION_68	FUNCTION_45
0x40088c9	              0x5b	                                 pop rbx	      3125	decNumber.c	FUNCTION_68	FUNCTION_45
0x40088ca	              0x5d	                                 pop rbp	      3125	decNumber.c	FUNCTION_68	FUNCTION_45
0x40088cb	            0x415c	                                 pop r12	      3125	decNumber.c	FUNCTION_68	FUNCTION_45
0x40088cd	            0x415d	                                 pop r13	      3125	decNumber.c	FUNCTION_68	FUNCTION_45
0x40088cf	            0x415e	                                 pop r14	      3125	decNumber.c	FUNCTION_68	FUNCTION_45
0x40088d1	            0x415f	                                 pop r15	      3125	decNumber.c	FUNCTION_68	FUNCTION_45
0x40088d3	              0xc3	                                     ret	      3125	decNumber.c	FUNCTION_68	FUNCTION_45
decNumberToInt32	SWITCH,0:functions,0:ELSE,2:DO,0:FOR,1:IF,5:CALL,3:WHILE,0	59
0x4001cd6	              0x53	                                push rbx	       380	decNumber.c	FUNCTION_68	FUNCTION_3
0x4001cd7	      0x440fb64708	               movzx r8d, byte [rdi + 8]	       386	decNumber.c	FUNCTION_68	FUNCTION_3	IF_2
0x4001cdc	        0x41f6c070	                          test r8b, 0x70	       386	decNumber.c	FUNCTION_68	FUNCTION_3	IF_2
0x4001ce0	     0xf85a8000000	                           jne 0x4001d8e	       386	decNumber.c	FUNCTION_68	FUNCTION_3	IF_2
0x4001ce6	          0x448b0f	                    mov r9d, dword [rdi]	       386	decNumber.c	FUNCTION_68	FUNCTION_3	IF_2
0x4001ce9	        0x4183f90a	                            cmp r9d, 0xa	       386	decNumber.c	FUNCTION_68	FUNCTION_3	IF_2
0x4001ced	     0xf8f9b000000	                            jg 0x4001d8e	       386	decNumber.c	FUNCTION_68	FUNCTION_3	IF_2
0x4001cf3	        0x837f0400	                  cmp dword [rdi + 4], 0	       386	decNumber.c	FUNCTION_68	FUNCTION_3	IF_2
0x4001cf7	     0xf8591000000	                           jne 0x4001d8e	       386	decNumber.c	FUNCTION_68	FUNCTION_3	IF_2
0x4001cfd	         0xfb74f0a	            movzx ecx, word [rdi + 0xa] 	       392	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1
0x4001d01	      0xbacdcccccc	                     mov edx, 0xcccccccd	       394	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1
0x4001d06	            0x89c8	                            mov eax, ecx	       394	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1
0x4001d08	            0xf7e2	                                 mul edx	       394	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1
0x4001d0a	          0xc1ea03	                              shr edx, 3	       394	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1
0x4001d0d	          0x8d0492	                  lea eax, [rdx + rdx*4]	       395	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1
0x4001d10	             0x1c0	                            add eax, eax	       395	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1
0x4001d12	            0x89cb	                            mov ebx, ecx	       395	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1
0x4001d14	            0x29c3	                            sub ebx, eax	       395	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1
0x4001d16	        0x4183f903	                              cmp r9d, 3	       399	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	FOR_1
0x4001d1a	            0x7e2b	                           jle 0x4001d47	       399	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	FOR_1
0x4001d1c	        0x488d4f0c	                    lea rcx, [rdi + 0xc]	       397	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1
0x4001d20	    0x41bb00000000	                             mov r11d, 0	       397	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1
0x4001d26	    0x41ba03000000	                             mov r10d, 3	       397	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1
0x4001d2c	           0xfb739	                   movzx edi, word [rcx]	       399	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	FOR_1
0x4001d2f	      0x410faf7b08	               imul edi, dword [r11 + 8]	       399	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	FOR_1
0x4001d34	             0x1fa	                            add edx, edi	       399	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	FOR_1
0x4001d36	        0x4883c102	                              add rcx, 2	       399	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	FOR_1
0x4001d3a	        0x4183c203	                             add r10d, 3	       399	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	FOR_1
0x4001d3e	        0x4983c30c	                            add r11, 0xc	       399	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	FOR_1
0x4001d42	          0x4539d1	                           cmp r9d, r10d	       399	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	FOR_1
0x4001d45	            0x7fe5	                            jg 0x4001d2c	       399	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	FOR_1
0x4001d47	    0x81facccccc0c	                      cmp edx, 0xccccccc	       401	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	IF_3
0x4001d4d	            0x770d	                            ja 0x4001d5c	       401	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	IF_3
0x4001d4f	    0x81facccccc0c	                      cmp edx, 0xccccccc	       401	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	IF_3
0x4001d55	            0x751e	                           jne 0x4001d75	       401	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	IF_3
0x4001d57	          0x83fb07	                              cmp ebx, 7	       401	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	IF_3
0x4001d5a	            0x7619	                           jbe 0x4001d75	       401	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	IF_3
0x4001d5c	          0x4584c0	                           test r8b, r8b	       403	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	IF_3	IF_4
0x4001d5f	            0x792d	                           jns 0x4001d8e	       403	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	IF_3	IF_4
0x4001d61	    0x81facccccc0c	                      cmp edx, 0xccccccc	       403	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	IF_3	IF_4
0x4001d67	            0x7525	                           jne 0x4001d8e	       403	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	IF_3	IF_4
0x4001d69	      0xb800000080	                     mov eax, 0x80000000	       403	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	IF_3	IF_4
0x4001d6e	          0x83fb08	                              cmp ebx, 8	       403	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	IF_3	IF_4
0x4001d71	            0x751b	                           jne 0x4001d8e	       403	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	IF_3	IF_4
0x4001d73	            0xeb2b	                           jmp 0x4001da0	       403	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	IF_3	IF_4
0x4001d75	    0x8d04d5000000	                        lea eax, [rdx*8]	       407	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	ELSE_2	CALL_2
0x4001d7c	          0x8d0450	                  lea eax, [rax + rdx*2]	       407	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	ELSE_2	CALL_2
0x4001d7f	          0x8d0c18	                    lea ecx, [rax + rbx]	       407	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	ELSE_2	CALL_2
0x4001d82	            0x89c8	                            mov eax, ecx	       408	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	ELSE_2	IF_5
0x4001d84	            0xf7d8	                                 neg eax	       408	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	ELSE_2	IF_5
0x4001d86	          0x4584c0	                           test r8b, r8b	       408	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	ELSE_2	IF_5
0x4001d89	           0xf49c1	                         cmovns eax, ecx	       408	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	ELSE_2	IF_5
0x4001d8c	            0xeb12	                           jmp 0x4001da0	       408	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	ELSE_2	IF_5
0x4001d8e	          0x4889f7	                            mov rdi, rsi	       408	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	ELSE_2	IF_5
0x4001d91	      0xbe80000000	                           mov esi, 0x80	       412	decNumber.c	FUNCTION_68	FUNCTION_3	CALL_3
0x4001d96	      0xe800000000	                          call 0x4001d9b	       412	decNumber.c	FUNCTION_68	FUNCTION_3	CALL_3
0x4001d9b	      0xb800000000	                              mov eax, 0	       413	decNumber.c	FUNCTION_68	FUNCTION_3
0x4001da0	              0x5b	                                 pop rbx	       414	decNumber.c	FUNCTION_68	FUNCTION_3
0x4001da1	              0xc3	                                     ret	       414	decNumber.c	FUNCTION_68	FUNCTION_3
decCompare	SWITCH,0:functions,0:ELSE,3:DO,0:FOR,0:IF,15:CALL,10:WHILE,0	122
0x4001482	              0x53	                                push rbx	      6164	decNumber.c	FUNCTION_3
0x4001483	      0x66837f0a00	                 cmp word [rdi + 0xa], 0	      6170	decNumber.c	FUNCTION_3	CALL_1
0x4001488	     0xf856f010000	                           jne 0x40015fd	      6170	decNumber.c	FUNCTION_3	CALL_1
0x400148e	          0x833f01	                      cmp dword [rdi], 1	      6170	decNumber.c	FUNCTION_3	CALL_1
0x4001491	     0xf8566010000	                           jne 0x40015fd	      6170	decNumber.c	FUNCTION_3	CALL_1
0x4001497	         0xfb64708	               movzx eax, byte [rdi + 8]	      6169	decNumber.c	FUNCTION_3
0x400149b	          0x83e070	                           and eax, 0x70	      6169	decNumber.c	FUNCTION_3
0x400149e	           0xf95c3	                                setne bl	      6169	decNumber.c	FUNCTION_3
0x40014a1	           0xfb6db	                           movzx ebx, bl	      6169	decNumber.c	FUNCTION_3
0x40014a4	            0x84d2	                             test dl, dl	      6171	decNumber.c	FUNCTION_3	IF_2
0x40014a6	            0x742d	                            je 0x40014d5	      6171	decNumber.c	FUNCTION_3	IF_2
0x40014a8	      0x66837e0a00	                 cmp word [rsi + 0xa], 0	      6172	decNumber.c	FUNCTION_3	IF_2	CALL_2
0x40014ad	            0x7518	                           jne 0x40014c7	      6172	decNumber.c	FUNCTION_3	IF_2	CALL_2
0x40014af	            0xeb05	                           jmp 0x40014b6	      6172	decNumber.c	FUNCTION_3	IF_2	CALL_2
0x40014b1	      0xbb01000000	                              mov ebx, 1	      6172	decNumber.c	FUNCTION_3	IF_2	CALL_2
0x40014b6	          0x833e01	                      cmp dword [rsi], 1	      6172	decNumber.c	FUNCTION_3	IF_2	CALL_2
0x40014b9	            0x750c	                           jne 0x40014c7	      6172	decNumber.c	FUNCTION_3	IF_2	CALL_2
0x40014bb	            0x89d8	                            mov eax, ebx	      6172	decNumber.c	FUNCTION_3	IF_2	CALL_2
0x40014bd	        0xf6460870	               test byte [rsi + 8], 0x70	      6172	decNumber.c	FUNCTION_3	IF_2	CALL_2
0x40014c1	     0xf8453010000	                            je 0x400161a	      6172	decNumber.c	FUNCTION_3	IF_2	CALL_2
0x40014c7	      0xb8ffffffff	                     mov eax, 0xffffffff	      6174	decNumber.c	FUNCTION_3	IF_2	IF_4
0x40014cc	            0x85db	                           test ebx, ebx	      6174	decNumber.c	FUNCTION_3	IF_2	IF_4
0x40014ce	            0x7564	                           jne 0x4001534	      6174	decNumber.c	FUNCTION_3	IF_2	IF_4
0x40014d0	      0xe945010000	                           jmp 0x400161a	      6174	decNumber.c	FUNCTION_3	IF_2	IF_4
0x40014d5	            0x84c0	                             test al, al	      6178	decNumber.c	FUNCTION_3	ELSE_1	CALL_3
0x40014d7	            0x7415	                            je 0x40014ee	      6178	decNumber.c	FUNCTION_3	ELSE_1	CALL_3
0x40014d9	            0xeb05	                           jmp 0x40014e0	      6178	decNumber.c	FUNCTION_3	ELSE_1	CALL_3
0x40014db	      0xbb01000000	                              mov ebx, 1	      6171	decNumber.c	FUNCTION_3	IF_2
0x40014e0	        0x807f0800	                   cmp byte [rdi + 8], 0	      6178	decNumber.c	FUNCTION_3	ELSE_1	CALL_3
0x40014e4	      0xb8ffffffff	                     mov eax, 0xffffffff	      6178	decNumber.c	FUNCTION_3	ELSE_1	CALL_3
0x40014e9	           0xf48d8	                          cmovs ebx, eax	      6178	decNumber.c	FUNCTION_3	ELSE_1	CALL_3
0x40014ec	            0xeb05	                           jmp 0x40014f3	      6178	decNumber.c	FUNCTION_3	ELSE_1	CALL_3
0x40014ee	      0xbb00000000	                              mov ebx, 0	      6178	decNumber.c	FUNCTION_3	ELSE_1	CALL_3
0x40014f3	      0x66837e0a00	                 cmp word [rsi + 0xa], 0	      6180	decNumber.c	FUNCTION_3	ELSE_1	CALL_4
0x40014f8	            0x7510	                           jne 0x400150a	      6180	decNumber.c	FUNCTION_3	ELSE_1	CALL_4
0x40014fa	          0x833e01	                      cmp dword [rsi], 1	      6180	decNumber.c	FUNCTION_3	ELSE_1	CALL_4
0x40014fd	            0x750b	                           jne 0x400150a	      6180	decNumber.c	FUNCTION_3	ELSE_1	CALL_4
0x40014ff	      0xba00000000	                              mov edx, 0	      6180	decNumber.c	FUNCTION_3	ELSE_1	CALL_4
0x4001504	        0xf6460870	               test byte [rsi + 8], 0x70	      6180	decNumber.c	FUNCTION_3	ELSE_1	CALL_4
0x4001508	            0x740a	                            je 0x4001514	      6180	decNumber.c	FUNCTION_3	ELSE_1	CALL_4
0x400150a	         0xfbe5608	               movsx edx, byte [rsi + 8]	      6181	decNumber.c	FUNCTION_3	ELSE_1	CALL_5
0x400150e	          0xc1fa1f	                           sar edx, 0x1f	      6181	decNumber.c	FUNCTION_3	ELSE_1	CALL_5
0x4001511	          0x83ca01	                               or edx, 1	      6181	decNumber.c	FUNCTION_3	ELSE_1	CALL_5
0x4001514	      0xb801000000	                              mov eax, 1	      6182	decNumber.c	FUNCTION_3	ELSE_1	IF_8
0x4001519	            0x39d3	                            cmp ebx, edx	      6182	decNumber.c	FUNCTION_3	ELSE_1	IF_8
0x400151b	     0xf8ff9000000	                            jg 0x400161a	      6182	decNumber.c	FUNCTION_3	ELSE_1	IF_8
0x4001521	     0xf8ccf000000	                            jl 0x40015f6	      6183	decNumber.c	FUNCTION_3	ELSE_1	IF_9
0x4001527	      0xb800000000	                              mov eax, 0	      6184	decNumber.c	FUNCTION_3	ELSE_1	IF_10
0x400152c	            0x85db	                           test ebx, ebx	      6184	decNumber.c	FUNCTION_3	ELSE_1	IF_10
0x400152e	     0xf84e6000000	                            je 0x400161a	      6184	decNumber.c	FUNCTION_3	ELSE_1	IF_10
0x4001534	         0xfb64f08	               movzx ecx, byte [rdi + 8]	      6188	decNumber.c	FUNCTION_3	IF_11
0x4001538	         0xfb65608	               movzx edx, byte [rsi + 8]	      6188	decNumber.c	FUNCTION_3	IF_11
0x400153c	            0x89c8	                            mov eax, ecx	      6188	decNumber.c	FUNCTION_3	IF_11
0x400153e	             0x9d0	                             or eax, edx	      6188	decNumber.c	FUNCTION_3	IF_11
0x4001540	            0xa840	                           test al, 0x40	      6188	decNumber.c	FUNCTION_3	IF_11
0x4001542	            0x7422	                            je 0x4001566	      6188	decNumber.c	FUNCTION_3	IF_11
0x4001544	            0x89d8	                            mov eax, ebx	      6188	decNumber.c	FUNCTION_3	IF_11
0x4001546	          0xf6c240	                           test dl, 0x40	      6189	decNumber.c	FUNCTION_3	IF_11	IF_12	CALL_6
0x4001549	     0xf84cb000000	                            je 0x400161a	      6189	decNumber.c	FUNCTION_3	IF_11	IF_12	CALL_6
0x400154f	      0xb800000000	                              mov eax, 0	      6190	decNumber.c	FUNCTION_3	IF_11	IF_12	CALL_7
0x4001554	          0xf6c140	                           test cl, 0x40	      6190	decNumber.c	FUNCTION_3	IF_11	IF_12	CALL_7
0x4001557	     0xf85bd000000	                           jne 0x400161a	      6190	decNumber.c	FUNCTION_3	IF_11	IF_12	CALL_7
0x400155d	            0x89d8	                            mov eax, ebx	      6191	decNumber.c	FUNCTION_3	IF_11	IF_12	ELSE_3
0x400155f	            0xf7d8	                                 neg eax	      6191	decNumber.c	FUNCTION_3	IF_11	IF_12	ELSE_3
0x4001561	      0xe9b4000000	                           jmp 0x400161a	      6191	decNumber.c	FUNCTION_3	IF_11	IF_12	ELSE_3
0x4001566	          0x8b4604	                mov eax, dword [rsi + 4]	      6196	decNumber.c	FUNCTION_3	ELSE_3	IF_14
0x4001569	          0x394704	                cmp dword [rdi + 4], eax	      6196	decNumber.c	FUNCTION_3	ELSE_3	IF_14
0x400156c	            0x7e0b	                           jle 0x4001579	      6196	decNumber.c	FUNCTION_3	ELSE_3	IF_14
0x400156e	            0xf7db	                                 neg ebx	      6201	decNumber.c	FUNCTION_3	ELSE_3	IF_14
0x4001570	          0x4889f8	                            mov rax, rdi	      6201	decNumber.c	FUNCTION_3	ELSE_3	IF_14
0x4001573	          0x4889f7	                            mov rdi, rsi	      6199	decNumber.c	FUNCTION_3	ELSE_3	IF_14
0x4001576	          0x4889c6	                            mov rsi, rax	      6200	decNumber.c	FUNCTION_3	ELSE_3	IF_14
0x4001579	        0x448b4604	                mov r8d, dword [rsi + 4]	      6203	decNumber.c	FUNCTION_3	CALL_9
0x400157d	        0x442b4704	                sub r8d, dword [rdi + 4]	      6203	decNumber.c	FUNCTION_3	CALL_9
0x4001581	            0x8b06	                    mov eax, dword [rsi]	      6204	decNumber.c	FUNCTION_3	CALL_10
0x4001583	          0x83f831	                           cmp eax, 0x31	      6203	decNumber.c	FUNCTION_3	CALL_9
0x4001586	            0x7f0b	                            jg 0x4001593	      6203	decNumber.c	FUNCTION_3	CALL_9
0x4001588	            0x4898	                                    cdqe	      6204	decNumber.c	FUNCTION_3	CALL_10
0x400158a	     0xfb688000000	                   movzx ecx, byte [rax]	      6203	decNumber.c	FUNCTION_3	CALL_9
0x4001591	            0xeb18	                           jmp 0x40015ab	      6203	decNumber.c	FUNCTION_3	CALL_9
0x4001593	        0x448d4802	                      lea r9d, [rax + 2]	      6203	decNumber.c	FUNCTION_3	CALL_9
0x4001597	      0xb956555555	                     mov ecx, 0x55555556	      6203	decNumber.c	FUNCTION_3	CALL_9
0x400159c	          0x4489c8	                            mov eax, r9d	      6203	decNumber.c	FUNCTION_3	CALL_9
0x400159f	            0xf7e9	                                imul ecx	      6203	decNumber.c	FUNCTION_3	CALL_9
0x40015a1	          0x4489c8	                            mov eax, r9d	      6203	decNumber.c	FUNCTION_3	CALL_9
0x40015a4	          0xc1f81f	                           sar eax, 0x1f	      6203	decNumber.c	FUNCTION_3	CALL_9
0x40015a7	            0x89d1	                            mov ecx, edx	      6203	decNumber.c	FUNCTION_3	CALL_9
0x40015a9	            0x29c1	                            sub ecx, eax	      6203	decNumber.c	FUNCTION_3	CALL_9
0x40015ab	        0x4c8d560a	                    lea r10, [rsi + 0xa]	      6204	decNumber.c	FUNCTION_3	CALL_10
0x40015af	            0x8b07	                    mov eax, dword [rdi]	      6203	decNumber.c	FUNCTION_3	CALL_9
0x40015b1	          0x83f831	                           cmp eax, 0x31	      6203	decNumber.c	FUNCTION_3	CALL_9
0x40015b4	            0x7f0b	                            jg 0x40015c1	      6203	decNumber.c	FUNCTION_3	CALL_9
0x40015b6	            0x4898	                                    cdqe	      6203	decNumber.c	FUNCTION_3	CALL_9
0x40015b8	     0xfb6b0000000	                   movzx esi, byte [rax]	      6203	decNumber.c	FUNCTION_3	CALL_9
0x40015bf	            0xeb18	                           jmp 0x40015d9	      6203	decNumber.c	FUNCTION_3	CALL_9
0x40015c1	        0x448d4802	                      lea r9d, [rax + 2]	      6203	decNumber.c	FUNCTION_3	CALL_9
0x40015c5	      0xbe56555555	                     mov esi, 0x55555556	      6203	decNumber.c	FUNCTION_3	CALL_9
0x40015ca	          0x4489c8	                            mov eax, r9d	      6203	decNumber.c	FUNCTION_3	CALL_9
0x40015cd	            0xf7ee	                                imul esi	      6203	decNumber.c	FUNCTION_3	CALL_9
0x40015cf	          0x4489c8	                            mov eax, r9d	      6203	decNumber.c	FUNCTION_3	CALL_9
0x40015d2	          0xc1f81f	                           sar eax, 0x1f	      6203	decNumber.c	FUNCTION_3	CALL_9
0x40015d5	            0x89d6	                            mov esi, edx	      6203	decNumber.c	FUNCTION_3	CALL_9
0x40015d7	            0x29c6	                            sub esi, eax	      6203	decNumber.c	FUNCTION_3	CALL_9
0x40015d9	        0x4883c70a	                            add rdi, 0xa	      6203	decNumber.c	FUNCTION_3	CALL_9
0x40015dd	          0x4c89d2	                            mov rdx, r10	      6203	decNumber.c	FUNCTION_3	CALL_9
0x40015e0	      0xe86bfcffff	                 call sym.decUnitCompare	      6203	decNumber.c	FUNCTION_3	CALL_9
0x40015e5	            0x89c2	                            mov edx, eax	      6203	decNumber.c	FUNCTION_3	CALL_9
0x40015e7	      0xb800000080	                     mov eax, 0x80000000	      6203	decNumber.c	FUNCTION_3	CALL_9
0x40015ec	           0xfafda	                           imul ebx, edx	      6206	decNumber.c	FUNCTION_3	IF_15
0x40015ef	            0x39c2	                            cmp edx, eax	      6206	decNumber.c	FUNCTION_3	IF_15
0x40015f1	           0xf45c3	                         cmovne eax, ebx	      6206	decNumber.c	FUNCTION_3	IF_15
0x40015f4	            0xeb24	                           jmp 0x400161a	      6206	decNumber.c	FUNCTION_3	IF_15
0x40015f6	      0xb8ffffffff	                     mov eax, 0xffffffff	      6183	decNumber.c	FUNCTION_3	ELSE_1	IF_9
0x40015fb	            0xeb1d	                           jmp 0x400161a	      6183	decNumber.c	FUNCTION_3	ELSE_1	IF_9
0x40015fd	            0x84d2	                             test dl, dl	      6171	decNumber.c	FUNCTION_3	IF_2
0x40015ff	     0xf84d6feffff	                            je 0x40014db	      6171	decNumber.c	FUNCTION_3	IF_2
0x4001605	      0xbb01000000	                              mov ebx, 1	      6172	decNumber.c	FUNCTION_3	IF_2	CALL_2
0x400160a	      0x66837e0a00	                 cmp word [rsi + 0xa], 0	      6172	decNumber.c	FUNCTION_3	IF_2	CALL_2
0x400160f	     0xf851fffffff	                           jne 0x4001534	      6172	decNumber.c	FUNCTION_3	IF_2	CALL_2
0x4001615	      0xe997feffff	                           jmp 0x40014b1	      6172	decNumber.c	FUNCTION_3	IF_2	CALL_2
0x400161a	              0x5b	                                 pop rbx	      6208	decNumber.c	FUNCTION_3
0x400161b	              0xc3	                                     ret	      6208	decNumber.c	FUNCTION_3
decNumberIsSubnormal	SWITCH,0:functions,0:ELSE,0:DO,0:FOR,0:IF,4:CALL,3:WHILE,0	14
0x4008eb7	      0xb800000000	                              mov eax, 0	      3536	decNumber.c	FUNCTION_68	FUNCTION_59	CALL_2
0x4008ebc	        0xf6470870	               test byte [rdi + 8], 0x70	      3536	decNumber.c	FUNCTION_68	FUNCTION_59	CALL_2
0x4008ec0	            0x751d	                           jne 0x4008edf	      3536	decNumber.c	FUNCTION_68	FUNCTION_59	CALL_2
0x4008ec2	      0x66837f0a00	                 cmp word [rdi + 0xa], 0	      3537	decNumber.c	FUNCTION_68	FUNCTION_59	CALL_3
0x4008ec7	            0x7505	                           jne 0x4008ece	      3537	decNumber.c	FUNCTION_68	FUNCTION_59	CALL_3
0x4008ec9	          0x833f01	                      cmp dword [rdi], 1	      3537	decNumber.c	FUNCTION_68	FUNCTION_59	CALL_3
0x4008ecc	            0x7411	                            je 0x4008edf	      3537	decNumber.c	FUNCTION_68	FUNCTION_59	CALL_3
0x4008ece	            0x8b07	                    mov eax, dword [rdi]	      3536	decNumber.c	FUNCTION_68	FUNCTION_59	CALL_2
0x4008ed0	           0x34704	                add eax, dword [rdi + 4]	      3536	decNumber.c	FUNCTION_68	FUNCTION_59	CALL_2
0x4008ed3	          0x83e801	                              sub eax, 1	      3536	decNumber.c	FUNCTION_68	FUNCTION_59	CALL_2
0x4008ed6	          0x3b4608	                cmp eax, dword [rsi + 8]	      3536	decNumber.c	FUNCTION_68	FUNCTION_59	CALL_2
0x4008ed9	           0xf9cc0	                                 setl al	      3536	decNumber.c	FUNCTION_68	FUNCTION_59	CALL_2
0x4008edc	           0xfb6c0	                           movzx eax, al	      3536	decNumber.c	FUNCTION_68	FUNCTION_59	CALL_2
0x4008edf	            0xf3c3	                                     ret	      3542	decNumber.c	FUNCTION_68	FUNCTION_59
decNumberCopyNegate	SWITCH,0:functions,0:ELSE,0:DO,0:FOR,0:IF,1:CALL,2:WHILE,0	7
0x4008b14	              0x53	                                push rbx	      3407	decNumber.c	FUNCTION_68	FUNCTION_54
0x4008b15	          0x4889fb	                            mov rbx, rdi	      3407	decNumber.c	FUNCTION_68	FUNCTION_54
0x4008b18	      0xe800000000	                          call 0x4008b1d	      3411	decNumber.c	FUNCTION_68	FUNCTION_54	CALL_2
0x4008b1d	        0x80430880	                add byte [rbx + 8], 0x80	      3412	decNumber.c	FUNCTION_68	FUNCTION_54
0x4008b21	          0x4889d8	                            mov rax, rbx	      3414	decNumber.c	FUNCTION_68	FUNCTION_54
0x4008b24	              0x5b	                                 pop rbx	      3414	decNumber.c	FUNCTION_68	FUNCTION_54
0x4008b25	              0xc3	                                     ret	      3414	decNumber.c	FUNCTION_68	FUNCTION_54
decNumberExp	SWITCH,0:functions,0:ELSE,0:DO,1:FOR,0:IF,6:CALL,6:WHILE,0	38
0x4006da4	            0x4154	                                push r12	      1048	decNumber.c	FUNCTION_68	FUNCTION_17
0x4006da6	              0x55	                                push rbp	      1048	decNumber.c	FUNCTION_68	FUNCTION_17
0x4006da7	              0x53	                                push rbx	      1048	decNumber.c	FUNCTION_68	FUNCTION_17
0x4006da8	        0x4883ec10	                           sub rsp, 0x10	      1048	decNumber.c	FUNCTION_68	FUNCTION_17
0x4006dac	          0x4889fb	                            mov rbx, rdi	      1048	decNumber.c	FUNCTION_68	FUNCTION_17
0x4006daf	          0x4989f4	                            mov r12, rsi	      1048	decNumber.c	FUNCTION_68	FUNCTION_17
0x4006db2	          0x4889d5	                            mov rbp, rdx	      1048	decNumber.c	FUNCTION_68	FUNCTION_17
0x4006db5	    0x64488b042528	                mov rax, qword fs:[0x28]	      1048	decNumber.c	FUNCTION_68	FUNCTION_17
0x4006dbe	      0x4889442408	                mov qword [rsp + 8], rax	      1048	decNumber.c	FUNCTION_68	FUNCTION_17
0x4006dc3	            0x31c0	                            xor eax, eax	      1048	decNumber.c	FUNCTION_68	FUNCTION_17
0x4006dc5	    0xc74424040000	                  mov dword [rsp + 4], 0	      1049	decNumber.c	FUNCTION_68	FUNCTION_17
0x4006dcd	      0x488d542404	                      lea rdx, [rsp + 4]	      1062	decNumber.c	FUNCTION_68	FUNCTION_17	IF_2	DO_1
0x4006dd2	          0x4889ee	                            mov rsi, rbp	      1062	decNumber.c	FUNCTION_68	FUNCTION_17	IF_2	DO_1
0x4006dd5	          0x4c89e7	                            mov rdi, r12	      1062	decNumber.c	FUNCTION_68	FUNCTION_17	IF_2	DO_1
0x4006dd8	      0xe8679dffff	                   call sym.decCheckMath	      1062	decNumber.c	FUNCTION_68	FUNCTION_17	IF_2	DO_1
0x4006ddd	            0x85c0	                           test eax, eax	      1062	decNumber.c	FUNCTION_68	FUNCTION_17	IF_2	DO_1
0x4006ddf	            0x7513	                           jne 0x4006df4	      1062	decNumber.c	FUNCTION_68	FUNCTION_17	IF_2	DO_1
0x4006de1	      0x488d4c2404	                      lea rcx, [rsp + 4]	      1073	decNumber.c	FUNCTION_68	FUNCTION_17	IF_2	DO_1	CALL_4
0x4006de6	          0x4889ea	                            mov rdx, rbp	      1073	decNumber.c	FUNCTION_68	FUNCTION_17	IF_2	DO_1	CALL_4
0x4006de9	          0x4c89e6	                            mov rsi, r12	      1073	decNumber.c	FUNCTION_68	FUNCTION_17	IF_2	DO_1	CALL_4
0x4006dec	          0x4889df	                            mov rdi, rbx	      1073	decNumber.c	FUNCTION_68	FUNCTION_17	IF_2	DO_1	CALL_4
0x4006def	      0xe859f8ffff	                       call sym.decExpOp	      1073	decNumber.c	FUNCTION_68	FUNCTION_17	IF_2	DO_1	CALL_4
0x4006df4	        0x8b742404	                mov esi, dword [rsp + 4]	      1080	decNumber.c	FUNCTION_68	FUNCTION_17	CALL_5
0x4006df8	            0x85f6	                           test esi, esi	      1080	decNumber.c	FUNCTION_68	FUNCTION_17	CALL_5
0x4006dfa	            0x740b	                            je 0x4006e07	      1080	decNumber.c	FUNCTION_68	FUNCTION_17	CALL_5
0x4006dfc	          0x4889ea	                            mov rdx, rbp	      1080	decNumber.c	FUNCTION_68	FUNCTION_17	CALL_5
0x4006dff	          0x4889df	                            mov rdi, rbx	      1080	decNumber.c	FUNCTION_68	FUNCTION_17	CALL_5
0x4006e02	      0xe815a8ffff	                      call sym.decStatus	      1080	decNumber.c	FUNCTION_68	FUNCTION_17	CALL_5
0x4006e07	          0x4889d8	                            mov rax, rbx	      1085	decNumber.c	FUNCTION_68	FUNCTION_17
0x4006e0a	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1085	decNumber.c	FUNCTION_68	FUNCTION_17
0x4006e0f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1085	decNumber.c	FUNCTION_68	FUNCTION_17
0x4006e18	            0x7405	                            je 0x4006e1f	      1085	decNumber.c	FUNCTION_68	FUNCTION_17
0x4006e1a	      0xe800000000	                          call 0x4006e1f	      1085	decNumber.c	FUNCTION_68	FUNCTION_17
0x4006e1f	        0x4883c410	                           add rsp, 0x10	      1085	decNumber.c	FUNCTION_68	FUNCTION_17
0x4006e23	              0x5b	                                 pop rbx	      1085	decNumber.c	FUNCTION_68	FUNCTION_17
0x4006e24	              0x5d	                                 pop rbp	      1085	decNumber.c	FUNCTION_68	FUNCTION_17
0x4006e25	            0x415c	                                 pop r12	      1085	decNumber.c	FUNCTION_68	FUNCTION_17
0x4006e27	              0xc3	                                     ret	      1085	decNumber.c	FUNCTION_68	FUNCTION_17
decNumberVersion	SWITCH,0:functions,0:ELSE,0:DO,0:FOR,0:IF,0:CALL,0:WHILE,0	2
0x4008f3f	      0xb800000000	                              mov eax, 0	      3571	decNumber.c	FUNCTION_68	FUNCTION_61
0x4008f44	              0xc3	                                     ret	      3571	decNumber.c	FUNCTION_68	FUNCTION_61
decSetCoeff	SWITCH,0:functions,0:ELSE,6:DO,0:FOR,5:IF,21:CALL,1:WHILE,0	184
0x4000874	            0x4156	                                push r14	      6884	decNumber.c	FUNCTION_12
0x4000876	            0x4155	                                push r13	      6884	decNumber.c	FUNCTION_12
0x4000878	            0x4154	                                push r12	      6884	decNumber.c	FUNCTION_12
0x400087a	              0x55	                                push rbp	      6884	decNumber.c	FUNCTION_12
0x400087b	              0x53	                                push rbx	      6884	decNumber.c	FUNCTION_12
0x400087c	          0x4189ca	                           mov r10d, ecx	      6894	decNumber.c	FUNCTION_12
0x400087f	          0x442b16	                   sub r10d, dword [rsi]	      6894	decNumber.c	FUNCTION_12
0x4000882	          0x4585d2	                         test r10d, r10d	      6895	decNumber.c	FUNCTION_12	IF_1
0x4000885	            0x7f3e	                            jg 0x40008c5	      6895	decNumber.c	FUNCTION_12	IF_1
0x4000887	        0x488d470a	                    lea rax, [rdi + 0xa]	      6896	decNumber.c	FUNCTION_12	IF_1	IF_2
0x400088b	          0x4839d0	                            cmp rax, rdx	      6896	decNumber.c	FUNCTION_12	IF_1	IF_2
0x400088e	            0x741f	                            je 0x40008af	      6896	decNumber.c	FUNCTION_12	IF_1	IF_2
0x4000890	            0x85c9	                           test ecx, ecx	      6900	decNumber.c	FUNCTION_12	IF_1	IF_2	FOR_1
0x4000892	            0x7e19	                           jle 0x40008ad	      6900	decNumber.c	FUNCTION_12	IF_1	IF_2	FOR_1
0x4000894	            0x89ce	                            mov esi, ecx	      6900	decNumber.c	FUNCTION_12	IF_1	IF_2	FOR_1
0x4000896	        0x440fb712	                  movzx r10d, word [rdx]	      6901	decNumber.c	FUNCTION_12	IF_1	IF_2	FOR_1
0x400089a	        0x66448910	                    mov word [rax], r10w	      6901	decNumber.c	FUNCTION_12	IF_1	IF_2	FOR_1
0x400089e	        0x4883c002	                              add rax, 2	      6900	decNumber.c	FUNCTION_12	IF_1	IF_2	FOR_1
0x40008a2	        0x4883c202	                              add rdx, 2	      6900	decNumber.c	FUNCTION_12	IF_1	IF_2	FOR_1
0x40008a6	          0x83ee03	                              sub esi, 3	      6900	decNumber.c	FUNCTION_12	IF_1	IF_2	FOR_1
0x40008a9	            0x85f6	                           test esi, esi	      6900	decNumber.c	FUNCTION_12	IF_1	IF_2	FOR_1
0x40008ab	            0x7fe9	                            jg 0x4000896	      6900	decNumber.c	FUNCTION_12	IF_1	IF_2	FOR_1
0x40008ad	            0x890f	                    mov dword [rdi], ecx	      6902	decNumber.c	FUNCTION_12	IF_1	IF_2
0x40008af	        0x41833800	                       cmp dword [r8], 0	      6905	decNumber.c	FUNCTION_12	IF_1	IF_3
0x40008b3	     0xf841f020000	                            je 0x4000ad8	      6905	decNumber.c	FUNCTION_12	IF_1	IF_3
0x40008b9	    0x418109200800	                    or dword [r9], 0x820	      6905	decNumber.c	FUNCTION_12	IF_1	IF_3
0x40008c0	      0xe913020000	                           jmp 0x4000ad8	      6905	decNumber.c	FUNCTION_12	IF_1	IF_3
0x40008c5	        0x44015704	               add dword [rdi + 4], r10d	      6910	decNumber.c	FUNCTION_12
0x40008c9	    0x418109000800	                    or dword [r9], 0x800	      6911	decNumber.c	FUNCTION_12
0x40008d0	        0x41833801	                       cmp dword [r8], 1	      6912	decNumber.c	FUNCTION_12	IF_4
0x40008d4	            0x7e0e	                           jle 0x40008e4	      6912	decNumber.c	FUNCTION_12	IF_4
0x40008d6	    0x41c700010000	                       mov dword [r8], 1	      6912	decNumber.c	FUNCTION_12	IF_4
0x40008dd	          0x4439d1	                           cmp ecx, r10d	      6914	decNumber.c	FUNCTION_12	IF_5
0x40008e0	            0x7c45	                            jl 0x4000927	      6914	decNumber.c	FUNCTION_12	IF_5
0x40008e2	            0xeb05	                           jmp 0x40008e9	      6914	decNumber.c	FUNCTION_12	IF_5
0x40008e4	          0x4439d1	                           cmp ecx, r10d	      6914	decNumber.c	FUNCTION_12	IF_5
0x40008e7	            0x7c0d	                            jl 0x40008f6	      6914	decNumber.c	FUNCTION_12	IF_5
0x40008e9	        0x4183fa03	                             cmp r10d, 3	      6939	decNumber.c	FUNCTION_12	FOR_3	IF_9
0x40008ed	            0x7e6a	                           jle 0x4000959	      6939	decNumber.c	FUNCTION_12	FOR_3	IF_9
0x40008ef	      0xb903000000	                              mov ecx, 3	      6939	decNumber.c	FUNCTION_12	FOR_3	IF_9
0x40008f4	            0xeb48	                           jmp 0x400093e	      6939	decNumber.c	FUNCTION_12	FOR_3	IF_9
0x40008f6	          0x418b00	                     mov eax, dword [r8]	      6917	decNumber.c	FUNCTION_12	IF_5	IF_6
0x40008f9	            0x85c0	                           test eax, eax	      6917	decNumber.c	FUNCTION_12	IF_5	IF_6
0x40008fb	            0x7f2a	                            jg 0x4000927	      6917	decNumber.c	FUNCTION_12	IF_5	IF_6
0x40008fd	            0x85c9	                           test ecx, ecx	      6919	decNumber.c	FUNCTION_12	IF_5	IF_6	FOR_2	IF_7
0x40008ff	            0x7e22	                           jle 0x4000923	      6919	decNumber.c	FUNCTION_12	IF_5	IF_6	FOR_2	IF_7
0x4000901	        0x66833a00	                       cmp word [rdx], 0	      6919	decNumber.c	FUNCTION_12	IF_5	IF_6	FOR_2	IF_7
0x4000905	            0x7411	                            je 0x4000918	      6919	decNumber.c	FUNCTION_12	IF_5	IF_6	FOR_2	IF_7
0x4000907	            0xeb06	                           jmp 0x400090f	      6919	decNumber.c	FUNCTION_12	IF_5	IF_6	FOR_2	IF_7
0x4000909	        0x66833a00	                       cmp word [rdx], 0	      6919	decNumber.c	FUNCTION_12	IF_5	IF_6	FOR_2	IF_7
0x400090d	            0x7409	                            je 0x4000918	      6919	decNumber.c	FUNCTION_12	IF_5	IF_6	FOR_2	IF_7
0x400090f	    0x41c700010000	                       mov dword [r8], 1	      6920	decNumber.c	FUNCTION_12	IF_5	IF_6	FOR_2	IF_7
0x4000916	            0xeb0f	                           jmp 0x4000927	      6921	decNumber.c	FUNCTION_12	IF_5	IF_6	FOR_2	IF_7
0x4000918	        0x4883c202	                              add rdx, 2	      6919	decNumber.c	FUNCTION_12	IF_5	IF_6	FOR_2	IF_7
0x400091c	          0x83e903	                              sub ecx, 3	      6919	decNumber.c	FUNCTION_12	IF_5	IF_6	FOR_2	IF_7
0x400091f	            0x85c9	                           test ecx, ecx	      6919	decNumber.c	FUNCTION_12	IF_5	IF_6	FOR_2	IF_7
0x4000921	            0x7fe6	                            jg 0x4000909	      6919	decNumber.c	FUNCTION_12	IF_5	IF_6	FOR_2	IF_7
0x4000923	            0x85c0	                           test eax, eax	      6924	decNumber.c	FUNCTION_12	IF_5	IF_8
0x4000925	            0x7404	                            je 0x400092b	      6924	decNumber.c	FUNCTION_12	IF_5	IF_8
0x4000927	        0x41830920	                     or dword [r9], 0x20	      6924	decNumber.c	FUNCTION_12	IF_5	IF_8
0x400092b	    0x66c7470a0000	                 mov word [rdi + 0xa], 0	      6925	decNumber.c	FUNCTION_12	IF_5
0x4000931	    0xc70701000000	                      mov dword [rdi], 1	      6926	decNumber.c	FUNCTION_12	IF_5
0x4000937	      0xe99c010000	                           jmp 0x4000ad8	      6927	decNumber.c	FUNCTION_12	IF_5
0x400093c	            0x89c1	                            mov ecx, eax	      6938	decNumber.c	FUNCTION_12	FOR_3
0x400093e	        0x66833a00	                       cmp word [rdx], 0	      6940	decNumber.c	FUNCTION_12	FOR_3	IF_10
0x4000942	            0x7407	                            je 0x400094b	      6940	decNumber.c	FUNCTION_12	FOR_3	IF_10
0x4000944	    0x41c700010000	                       mov dword [r8], 1	      6940	decNumber.c	FUNCTION_12	FOR_3	IF_10
0x400094b	        0x4883c202	                              add rdx, 2	      6937	decNumber.c	FUNCTION_12	FOR_3
0x400094f	          0x8d4103	                      lea eax, [rcx + 3]	      6938	decNumber.c	FUNCTION_12	FOR_3
0x4000952	          0x4139c2	                           cmp r10d, eax	      6939	decNumber.c	FUNCTION_12	FOR_3	IF_9
0x4000955	            0x7fe5	                            jg 0x400093c	      6939	decNumber.c	FUNCTION_12	FOR_3	IF_9
0x4000957	            0xeb05	                           jmp 0x400095e	      6939	decNumber.c	FUNCTION_12	FOR_3	IF_9
0x4000959	      0xb900000000	                              mov ecx, 0	      6939	decNumber.c	FUNCTION_12	FOR_3	IF_9
0x400095e	          0x4129ca	                           sub r10d, ecx	      6944	decNumber.c	FUNCTION_12
0x4000961	        0x418d42ff	                      lea eax, [r10 - 1]	      6944	decNumber.c	FUNCTION_12
0x4000965	          0x83f802	                              cmp eax, 2	      6945	decNumber.c	FUNCTION_12	IF_11
0x4000968	            0x7569	                           jne 0x40009d3	      6945	decNumber.c	FUNCTION_12	IF_11
0x400096a	     0xfb705000000	           movzx eax, word [0x04000971] 	      6946	decNumber.c	FUNCTION_12	IF_11
0x4000971	            0xd1f8	                              sar eax, 1	      6946	decNumber.c	FUNCTION_12	IF_11
0x4000973	           0xfb70a	                   movzx ecx, word [rdx]	      6948	decNumber.c	FUNCTION_12	IF_11	IF_12
0x4000976	          0x6639c8	                              cmp ax, cx	      6948	decNumber.c	FUNCTION_12	IF_11	IF_12
0x4000979	            0x7711	                            ja 0x400098c	      6948	decNumber.c	FUNCTION_12	IF_11	IF_12
0x400097b	            0x7309	                           jae 0x4000986	      6949	decNumber.c	FUNCTION_12	IF_11	IF_12	IF_13
0x400097d	    0x41c700070000	                       mov dword [r8], 7	      6949	decNumber.c	FUNCTION_12	IF_11	IF_12	IF_13
0x4000984	            0xeb12	                           jmp 0x4000998	      6949	decNumber.c	FUNCTION_12	IF_11	IF_12	IF_13
0x4000986	        0x41830005	                       add dword [r8], 5	      6950	decNumber.c	FUNCTION_12	IF_11	IF_12	ELSE_1
0x400098a	            0xeb0c	                           jmp 0x4000998	      6950	decNumber.c	FUNCTION_12	IF_11	IF_12	ELSE_1
0x400098c	          0x6685c9	                             test cx, cx	      6953	decNumber.c	FUNCTION_12	IF_11	ELSE_2	IF_14
0x400098f	            0x7407	                            je 0x4000998	      6953	decNumber.c	FUNCTION_12	IF_11	ELSE_2	IF_14
0x4000991	    0x41c700030000	                       mov dword [r8], 3	      6953	decNumber.c	FUNCTION_12	IF_11	ELSE_2	IF_14
0x4000998	            0x8b0e	                    mov ecx, dword [rsi]	      6955	decNumber.c	FUNCTION_12	IF_11	IF_15
0x400099a	            0x85c9	                           test ecx, ecx	      6955	decNumber.c	FUNCTION_12	IF_11	IF_15
0x400099c	            0x7f11	                            jg 0x40009af	      6955	decNumber.c	FUNCTION_12	IF_11	IF_15
0x400099e	    0x66c7470a0000	                 mov word [rdi + 0xa], 0	      6956	decNumber.c	FUNCTION_12	IF_11	IF_15
0x40009a4	    0xc70701000000	                      mov dword [rdi], 1	      6957	decNumber.c	FUNCTION_12	IF_11	IF_15
0x40009aa	      0xe91f010000	                           jmp 0x4000ace	      6957	decNumber.c	FUNCTION_12	IF_11	IF_15
0x40009af	            0x890f	                    mov dword [rdi], ecx	      6961	decNumber.c	FUNCTION_12	IF_11	ELSE_3
0x40009b1	        0x4883c70a	                            add rdi, 0xa	      6964	decNumber.c	FUNCTION_12	IF_11	ELSE_3	FOR_4
0x40009b5	      0xb800000000	                              mov eax, 0	      6964	decNumber.c	FUNCTION_12	IF_11	ELSE_3	FOR_4
0x40009ba	       0xfb7740202	        movzx esi, word [rdx + rax + 2] 	      6965	decNumber.c	FUNCTION_12	IF_11	ELSE_3	FOR_4
0x40009bf	        0x66893407	                mov word [rdi + rax], si	      6965	decNumber.c	FUNCTION_12	IF_11	ELSE_3	FOR_4
0x40009c3	          0x83e903	                              sub ecx, 3	      6964	decNumber.c	FUNCTION_12	IF_11	ELSE_3	FOR_4
0x40009c6	        0x4883c002	                              add rax, 2	      6964	decNumber.c	FUNCTION_12	IF_11	ELSE_3	FOR_4
0x40009ca	            0x85c9	                           test ecx, ecx	      6964	decNumber.c	FUNCTION_12	IF_11	ELSE_3	FOR_4
0x40009cc	            0x7fec	                            jg 0x40009ba	      6964	decNumber.c	FUNCTION_12	IF_11	ELSE_3	FOR_4
0x40009ce	      0xe9fb000000	                           jmp 0x4000ace	      6964	decNumber.c	FUNCTION_12	IF_11	ELSE_3	FOR_4
0x40009d3	            0x85c0	                           test eax, eax	      6972	decNumber.c	FUNCTION_12	ELSE_4	IF_16
0x40009d5	            0x7505	                           jne 0x40009dc	      6972	decNumber.c	FUNCTION_12	ELSE_4	IF_16
0x40009d7	           0xfb70a	                   movzx ecx, word [rdx]	      6972	decNumber.c	FUNCTION_12	ELSE_4	IF_16
0x40009da	            0xeb33	                           jmp 0x4000a0f	      6972	decNumber.c	FUNCTION_12	ELSE_4	IF_16
0x40009dc	        0x440fb712	                  movzx r10d, word [rdx]	      6975	decNumber.c	FUNCTION_12	ELSE_4	ELSE_5
0x40009e0	          0x4489d3	                           mov ebx, r10d	      6975	decNumber.c	FUNCTION_12	ELSE_4	ELSE_5
0x40009e3	            0x89c1	                            mov ecx, eax	      6975	decNumber.c	FUNCTION_12	ELSE_4	ELSE_5
0x40009e5	            0xd3eb	                             shr ebx, cl	      6975	decNumber.c	FUNCTION_12	ELSE_4	ELSE_5
0x40009e7	            0x89d9	                            mov ecx, ebx	      6975	decNumber.c	FUNCTION_12	ELSE_4	ELSE_5
0x40009e9	          0x4189c3	                           mov r11d, eax	      6975	decNumber.c	FUNCTION_12	ELSE_4	ELSE_5
0x40009ec	    0x420faf0c9d00	                 imul ecx, dword [r11*4]	      6975	decNumber.c	FUNCTION_12	ELSE_4	ELSE_5
0x40009f5	          0xc1e911	                           shr ecx, 0x11	      6975	decNumber.c	FUNCTION_12	ELSE_4	ELSE_5
0x40009f8	            0x89cb	                            mov ebx, ecx	      6981	decNumber.c	FUNCTION_12	ELSE_4	ELSE_5	IF_17
0x40009fa	    0x420faf1c9d00	                 imul ebx, dword [r11*4]	      6981	decNumber.c	FUNCTION_12	ELSE_4	ELSE_5	IF_17
0x4000a03	          0x4139da	                           cmp r10d, ebx	      6981	decNumber.c	FUNCTION_12	ELSE_4	ELSE_5	IF_17
0x4000a06	            0x7407	                            je 0x4000a0f	      6981	decNumber.c	FUNCTION_12	ELSE_4	ELSE_5	IF_17
0x4000a08	    0x41c700010000	                       mov dword [r8], 1	      6981	decNumber.c	FUNCTION_12	ELSE_4	ELSE_5	IF_17
0x4000a0f	    0x4469d99a1900	                  imul r11d, ecx, 0x199a	      6985	decNumber.c	FUNCTION_12	ELSE_4
0x4000a16	        0x41c1eb10	                          shr r11d, 0x10	      6985	decNumber.c	FUNCTION_12	ELSE_4
0x4000a1a	    0x468d14dd0000	                       lea r10d, [r11*8]	      6995	decNumber.c	FUNCTION_12	ELSE_4
0x4000a22	        0x478d145a	                 lea r10d, [r10 + r11*2]	      6995	decNumber.c	FUNCTION_12	ELSE_4
0x4000a26	          0x4429d1	                           sub ecx, r10d	      6995	decNumber.c	FUNCTION_12	ELSE_4
0x4000a29	     0xfb689000000	                   movzx ecx, byte [rcx]	      6995	decNumber.c	FUNCTION_12	ELSE_4
0x4000a30	          0x410108	                     add dword [r8], ecx	      6995	decNumber.c	FUNCTION_12	ELSE_4
0x4000a33	            0x8b36	                    mov esi, dword [rsi]	      7000	decNumber.c	FUNCTION_12	ELSE_4	IF_18
0x4000a35	            0x85f6	                           test esi, esi	      7000	decNumber.c	FUNCTION_12	ELSE_4	IF_18
0x4000a37	            0x7f11	                            jg 0x4000a4a	      7000	decNumber.c	FUNCTION_12	ELSE_4	IF_18
0x4000a39	    0x66c7470a0000	                 mov word [rdi + 0xa], 0	      7001	decNumber.c	FUNCTION_12	ELSE_4	IF_18
0x4000a3f	    0xc70701000000	                      mov dword [rdi], 1	      7002	decNumber.c	FUNCTION_12	ELSE_4	IF_18
0x4000a45	      0xe984000000	                           jmp 0x4000ace	      7002	decNumber.c	FUNCTION_12	ELSE_4	IF_18
0x4000a4a	          0x8d4801	                      lea ecx, [rax + 1]	      6996	decNumber.c	FUNCTION_12	ELSE_4
0x4000a4d	            0x8937	                    mov dword [rdi], esi	      7006	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6
0x4000a4f	        0x4c8d570a	                    lea r10, [rdi + 0xa]	      7008	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x4000a53	          0x4589dd	                          mov r13d, r11d	      7009	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x4000a56	      0x6644895f0a	              mov word [rdi + 0xa], r11w	      7009	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x4000a5b	        0x8d7c31fd	                lea edi, [rcx + rsi - 3]	      7010	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x4000a5f	            0x85ff	                           test edi, edi	      7011	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5	IF_19
0x4000a61	            0x7e6b	                           jle 0x4000ace	      7011	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5	IF_19
0x4000a63	            0x89ce	                            mov esi, ecx	      7015	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x4000a65	    0x448b24b50000	                 mov r12d, dword [rsi*4]	      7015	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x4000a6d	    0x8b2cb5000000	                  mov ebp, dword [rsi*4]	      7016	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x4000a74	      0xbe03000000	                              mov esi, 3	      7021	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x4000a79	            0x29ce	                            sub esi, ecx	      7021	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x4000a7b	     0xfb71cb50000	                 movzx ebx, word [rsi*4]	      7021	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x4000a83	        0x448d58fe	                     lea r11d, [rax - 2]	      7021	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x4000a87	          0x4129cb	                           sub r11d, ecx	      7021	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x4000a8a	            0x29c7	                            sub edi, eax	      7021	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x4000a8c	          0x83ef01	                              sub edi, 1	      7021	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x4000a8f	        0x4883c202	                              add rdx, 2	      7012	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x4000a93	           0xfb702	                   movzx eax, word [rdx]	      7013	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x4000a96	            0x89c6	                            mov esi, eax	      7015	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x4000a98	            0xd3ee	                             shr esi, cl	      7015	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x4000a9a	        0x410faff4	                          imul esi, r12d	      7015	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x4000a9e	          0xc1ee11	                           shr esi, 0x11	      7015	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x4000aa1	          0x4189f6	                           mov r14d, esi	      7021	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x4000aa4	        0x440faff5	                          imul r14d, ebp	      7021	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x4000aa8	          0x4429f0	                           sub eax, r14d	      7021	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x4000aab	           0xfafc3	                           imul eax, ebx	      7021	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x4000aae	          0x4401e8	                           add eax, r13d	      7021	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x4000ab1	        0x66418902	                      mov word [r10], ax	      7021	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x4000ab5	            0x85ff	                           test edi, edi	      7023	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5	IF_20
0x4000ab7	            0x7e15	                           jle 0x4000ace	      7023	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5	IF_20
0x4000ab9	        0x4983c202	                              add r10, 2	      7008	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x4000abd	          0x4189f5	                           mov r13d, esi	      7009	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x4000ac0	        0x66418932	                      mov word [r10], si	      7009	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x4000ac4	          0x4401df	                           add edi, r11d	      7009	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5
0x4000ac7	          0x8d0439	                    lea eax, [rcx + rdi]	      7011	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5	IF_19
0x4000aca	            0x85c0	                           test eax, eax	      7011	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5	IF_19
0x4000acc	            0x7fc1	                            jg 0x4000a8f	      7011	decNumber.c	FUNCTION_12	ELSE_4	ELSE_6	FOR_5	IF_19
0x4000ace	        0x41833800	                       cmp dword [r8], 0	      7028	decNumber.c	FUNCTION_12	IF_21
0x4000ad2	            0x7404	                            je 0x4000ad8	      7028	decNumber.c	FUNCTION_12	IF_21
0x4000ad4	        0x41830920	                     or dword [r9], 0x20	      7028	decNumber.c	FUNCTION_12	IF_21
0x4000ad8	              0x5b	                                 pop rbx	      7030	decNumber.c	FUNCTION_12
0x4000ad9	              0x5d	                                 pop rbp	      7030	decNumber.c	FUNCTION_12
0x4000ada	            0x415c	                                 pop r12	      7030	decNumber.c	FUNCTION_12
0x4000adc	            0x415d	                                 pop r13	      7030	decNumber.c	FUNCTION_12
0x4000ade	            0x415e	                                 pop r14	      7030	decNumber.c	FUNCTION_12
0x4000ae0	              0xc3	                                     ret	      7030	decNumber.c	FUNCTION_12
decNumberAnd	SWITCH,0:functions,0:ELSE,2:DO,0:FOR,2:IF,8:CALL,12:WHILE,0	171
0x4002491	            0x4157	                                push r15	       797	decNumber.c	FUNCTION_68	FUNCTION_10
0x4002493	            0x4156	                                push r14	       797	decNumber.c	FUNCTION_68	FUNCTION_10
0x4002495	            0x4155	                                push r13	       797	decNumber.c	FUNCTION_68	FUNCTION_10
0x4002497	            0x4154	                                push r12	       797	decNumber.c	FUNCTION_68	FUNCTION_10
0x4002499	              0x55	                                push rbp	       797	decNumber.c	FUNCTION_68	FUNCTION_10
0x400249a	              0x53	                                push rbx	       797	decNumber.c	FUNCTION_68	FUNCTION_10
0x400249b	        0x4883ec18	                           sub rsp, 0x18	       797	decNumber.c	FUNCTION_68	FUNCTION_10
0x400249f	          0x4889fb	                            mov rbx, rdi	       797	decNumber.c	FUNCTION_68	FUNCTION_10
0x40024a2	        0x837e0400	                  cmp dword [rsi + 4], 0	       806	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_3
0x40024a6	            0x7521	                           jne 0x40024c9	       806	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_3
0x40024a8	          0x4989d0	                             mov r8, rdx	       806	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_3
0x40024ab	         0xfb64608	               movzx eax, byte [rsi + 8]	       806	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_3
0x40024af	            0xa870	                           test al, 0x70	       806	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_3
0x40024b1	            0x7516	                           jne 0x40024c9	       806	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_3
0x40024b3	            0x84c0	                             test al, al	       806	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_3
0x40024b5	            0x7812	                            js 0x40024c9	       806	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_3
0x40024b7	        0x837a0400	                  cmp dword [rdx + 4], 0	       807	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_5
0x40024bb	            0x750c	                           jne 0x40024c9	       807	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_5
0x40024bd	         0xfb64208	               movzx eax, byte [rdx + 8]	       807	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_5
0x40024c1	            0xa870	                           test al, 0x70	       807	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_5
0x40024c3	            0x7504	                           jne 0x40024c9	       807	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_5
0x40024c5	            0x84c0	                             test al, al	       807	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_5
0x40024c7	            0x7915	                           jns 0x40024de	       807	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_5
0x40024c9	          0x4889ca	                            mov rdx, rcx	       808	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_6
0x40024cc	      0xbe80000000	                           mov esi, 0x80	       808	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_6
0x40024d1	          0x4889df	                            mov rdi, rbx	       808	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_6
0x40024d4	      0xe843f1ffff	                      call sym.decStatus	       808	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_6
0x40024d9	      0xe9d9010000	                           jmp 0x40026b7	       809	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2
0x40024de	        0x4c8d5e0a	                    lea r11, [rsi + 0xa]	       813	decNumber.c	FUNCTION_68	FUNCTION_10
0x40024e2	        0x488d6a0a	                    lea rbp, [rdx + 0xa]	       814	decNumber.c	FUNCTION_68	FUNCTION_10
0x40024e6	        0x488d7f0a	                    lea rdi, [rdi + 0xa]	       815	decNumber.c	FUNCTION_68	FUNCTION_10
0x40024ea	            0x8b06	                    mov eax, dword [rsi]	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x40024ec	          0x83f831	                           cmp eax, 0x31	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x40024ef	            0x7f10	                            jg 0x4002501	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x40024f1	            0x4898	                                    cdqe	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x40024f3	     0xfb680000000	                   movzx eax, byte [rax]	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x40024fa	      0x4c8d6400fe	                lea r12, [rax + rax - 2]	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x40024ff	            0xeb1b	                           jmp 0x400251c	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x4002501	          0x8d7002	                      lea esi, [rax + 2]	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x4002504	      0xba56555555	                     mov edx, 0x55555556	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x4002509	            0x89f0	                            mov eax, esi	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x400250b	            0xf7ea	                                imul edx	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x400250d	            0x89f0	                            mov eax, esi	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x400250f	          0xc1f81f	                           sar eax, 0x1f	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x4002512	            0x29c2	                            sub edx, eax	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x4002514	          0x4863d2	                         movsxd rdx, edx	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x4002517	      0x4c8d6412fe	                lea r12, [rdx + rdx - 2]	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x400251c	          0x4d01dc	                            add r12, r11	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x400251f	          0x418b00	                     mov eax, dword [r8]	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4002522	          0x83f831	                           cmp eax, 0x31	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4002525	            0x7f10	                            jg 0x4002537	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4002527	            0x4898	                                    cdqe	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4002529	     0xfb680000000	                   movzx eax, byte [rax]	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4002530	      0x4c8d6c00fe	                lea r13, [rax + rax - 2]	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4002535	            0xeb1b	                           jmp 0x4002552	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4002537	          0x8d7002	                      lea esi, [rax + 2]	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x400253a	      0xba56555555	                     mov edx, 0x55555556	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x400253f	            0x89f0	                            mov eax, esi	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4002541	            0xf7ea	                                imul edx	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4002543	            0x89f0	                            mov eax, esi	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4002545	          0xc1f81f	                           sar eax, 0x1f	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4002548	            0x29c2	                            sub edx, eax	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x400254a	          0x4863d2	                         movsxd rdx, edx	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x400254d	      0x4c8d6c12fe	                lea r13, [rdx + rdx - 2]	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4002552	          0x4901ed	                            add r13, rbp	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4002555	            0x8b31	                    mov esi, dword [rcx]	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x4002557	          0x83fe31	                           cmp esi, 0x31	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x400255a	            0x7f1b	                            jg 0x4002577	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x400255c	          0x4863c6	                         movsxd rax, esi	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x400255f	     0xfb680000000	                   movzx eax, byte [rax]	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x4002566	           0xfb6d0	                           movzx edx, al	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x4002569	      0x4c8d7c57fe	              lea r15, [rdi + rdx*2 - 2]	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x400256e	           0xfb6c0	                           movzx eax, al	       819	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_10
0x4002571	        0x8d4440fd	              lea eax, [rax + rax*2 - 3]	       819	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_10
0x4002575	            0xeb21	                           jmp 0x4002598	       819	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_10
0x4002577	        0x448d4602	                      lea r8d, [rsi + 2]	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x400257b	      0xba56555555	                     mov edx, 0x55555556	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x4002580	          0x4489c0	                            mov eax, r8d	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x4002583	            0xf7ea	                                imul edx	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x4002585	        0x41c1f81f	                           sar r8d, 0x1f	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x4002589	          0x4429c2	                            sub edx, r8d	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x400258c	          0x4863c2	                         movsxd rax, edx	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x400258f	      0x4c8d7c47fe	              lea r15, [rdi + rax*2 - 2]	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x4002594	        0x8d4452fd	              lea eax, [rdx + rdx*2 - 3]	       819	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_10
0x4002598	            0x29c6	                            sub esi, eax	       819	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_10
0x400259a	            0x89f0	                            mov eax, esi	       819	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_10
0x400259c	          0x4939ff	                            cmp r15, rdi	       820	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1
0x400259f	     0xf82dd000000	                            jb 0x4002682	       820	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1
0x40025a5	          0x4889fe	                            mov rsi, rdi	       820	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1
0x40025a8	          0x83e801	                              sub eax, 1	       841	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x40025ab	        0x8944240c	              mov dword [rsp + 0xc], eax	       841	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x40025af	          0x4d39dc	                            cmp r12, r11	       822	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	IF_3
0x40025b2	     0xf82ee000000	                            jb 0x40026a6	       822	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	IF_3
0x40025b8	        0x450fb70b	                   movzx r9d, word [r11]	       823	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_1
0x40025bc	      0xba00000000	                              mov edx, 0	       824	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	IF_4
0x40025c1	          0x4939ed	                            cmp r13, rbp	       824	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	IF_4
0x40025c4	            0x7204	                            jb 0x40025ca	       824	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	IF_4
0x40025c6	         0xfb75500	                   movzx edx, word [rbp]	       825	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2
0x40025ca	      0x66c7060000	                       mov word [rsi], 0	       826	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2
0x40025cf	            0x89d0	                            mov eax, edx	       827	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5
0x40025d1	        0x664409c8	                              or ax, r9w	       827	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5
0x40025d5	     0xf8490000000	                            je 0x400266b	       827	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5
0x40025db	    0x41ba00000000	                             mov r10d, 0	       827	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5
0x40025e1	          0x4489c8	                            mov eax, r9d	       832	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x40025e4	            0x21d0	                            and eax, edx	       832	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x40025e6	            0xa801	                              test al, 1	       832	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x40025e8	            0x740b	                            je 0x40025f5	       832	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x40025ea	    0x428b04950000	                  mov eax, dword [r10*4]	       832	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x40025f2	          0x660106	                      add word [rsi], ax	       832	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x40025f5	        0x410fb7c1	                          movzx eax, r9w	       833	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x40025f9	    0x69c0cdcc0000	                   imul eax, eax, 0xcccd	       833	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x40025ff	          0xc1e813	                           shr eax, 0x13	       833	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4002602	          0x4189c0	                            mov r8d, eax	       833	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4002605	          0x8d0480	                  lea eax, [rax + rax*4]	       833	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4002608	             0x1c0	                            add eax, eax	       833	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x400260a	          0x4129c1	                            sub r9d, eax	       833	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x400260d	          0x4489c8	                            mov eax, r9d	       833	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4002610	          0x4589c1	                            mov r9d, r8d	       834	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4002613	        0x440fb7f2	                          movzx r14d, dx	       835	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4002617	    0x4569f6cdcc00	                 imul r14d, r14d, 0xcccd	       835	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x400261e	        0x41c1ee13	                          shr r14d, 0x13	       835	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4002622	        0x478d04b6	                  lea r8d, [r14 + r14*4]	       835	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4002626	          0x4501c0	                            add r8d, r8d	       835	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4002629	          0x4429c2	                            sub edx, r8d	       835	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x400262c	          0x4189d0	                            mov r8d, edx	       835	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x400262f	          0x4409c0	                             or eax, r8d	       835	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4002632	        0x440fb7c0	                           movzx r8d, ax	       835	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4002636	          0x4489f2	                           mov edx, r14d	       836	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4002639	        0x4183f801	                              cmp r8d, 1	       837	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x400263d	            0x7e12	                           jle 0x4002651	       837	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x400263f	          0x4889ca	                            mov rdx, rcx	       838	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_7	CALL_11
0x4002642	      0xbe80000000	                           mov esi, 0x80	       838	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_7	CALL_11
0x4002647	          0x4889df	                            mov rdi, rbx	       838	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_7	CALL_11
0x400264a	      0xe8cdefffff	                      call sym.decStatus	       838	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_7	CALL_11
0x400264f	            0xeb66	                           jmp 0x40026b7	       839	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4002651	          0x4939f7	                            cmp r15, rsi	       841	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4002654	            0x7507	                           jne 0x400265d	       841	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4002656	      0x443954240c	            cmp dword [rsp + 0xc], r10d 	       841	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x400265b	            0x740e	                            je 0x400266b	       841	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x400265d	        0x4983c201	                              add r10, 1	       841	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4002661	        0x4983fa03	                              cmp r10, 3	       831	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4002665	     0xf8576ffffff	                           jne 0x40025e1	       831	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x400266b	        0x4983c302	                              add r11, 2	       820	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1
0x400266f	        0x4883c502	                              add rbp, 2	       820	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1
0x4002673	        0x4883c602	                              add rsi, 2	       820	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1
0x4002677	          0x4939f7	                            cmp r15, rsi	       820	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1
0x400267a	     0xf832fffffff	                           jae 0x40025af	       820	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1
0x4002680	            0xeb03	                           jmp 0x4002685	       820	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1
0x4002682	          0x4889fe	                            mov rsi, rdi	       815	decNumber.c	FUNCTION_68	FUNCTION_10
0x4002685	          0x4829fe	                            sub rsi, rdi	       846	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_12
0x4002688	          0x48d1fe	                              sar rsi, 1	       846	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_12
0x400268b	      0xe857e6ffff	                   call sym.decGetDigits	       846	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_12
0x4002690	            0x8903	                    mov dword [rbx], eax	       846	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_12
0x4002692	    0xc74304000000	                  mov dword [rbx + 4], 0	       847	decNumber.c	FUNCTION_68	FUNCTION_10
0x4002699	        0xc6430800	                   mov byte [rbx + 8], 0	       848	decNumber.c	FUNCTION_68	FUNCTION_10
0x400269d	            0xeb18	                           jmp 0x40026b7	       849	decNumber.c	FUNCTION_68	FUNCTION_10
0x400269f	      0x66c7060000	                       mov word [rsi], 0	       826	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2
0x40026a4	            0xebc5	                           jmp 0x400266b	       826	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2
0x40026a6	    0x41b900000000	                              mov r9d, 0	       822	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	IF_3
0x40026ac	          0x4939ed	                            cmp r13, rbp	       824	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	IF_4
0x40026af	     0xf8311ffffff	                           jae 0x40025c6	       824	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	IF_4
0x40026b5	            0xebe8	                           jmp 0x400269f	       824	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	IF_4
0x40026b7	          0x4889d8	                            mov rax, rbx	       850	decNumber.c	FUNCTION_68	FUNCTION_10
0x40026ba	        0x4883c418	                           add rsp, 0x18	       850	decNumber.c	FUNCTION_68	FUNCTION_10
0x40026be	              0x5b	                                 pop rbx	       850	decNumber.c	FUNCTION_68	FUNCTION_10
0x40026bf	              0x5d	                                 pop rbp	       850	decNumber.c	FUNCTION_68	FUNCTION_10
0x40026c0	            0x415c	                                 pop r12	       850	decNumber.c	FUNCTION_68	FUNCTION_10
0x40026c2	            0x415d	                                 pop r13	       850	decNumber.c	FUNCTION_68	FUNCTION_10
0x40026c4	            0x415e	                                 pop r14	       850	decNumber.c	FUNCTION_68	FUNCTION_10
0x40026c6	            0x415f	                                 pop r15	       850	decNumber.c	FUNCTION_68	FUNCTION_10
0x40026c8	              0xc3	                                     ret	       850	decNumber.c	FUNCTION_68	FUNCTION_10
decFinalize	SWITCH,0:functions,0:ELSE,0:DO,0:FOR,0:IF,9:CALL,9:WHILE,0	102
0x4001b02	            0x4155	                                push r13	      7269	decNumber.c	FUNCTION_15
0x4001b04	            0x4154	                                push r12	      7269	decNumber.c	FUNCTION_15
0x4001b06	              0x55	                                push rbp	      7269	decNumber.c	FUNCTION_15
0x4001b07	              0x53	                                push rbx	      7269	decNumber.c	FUNCTION_15
0x4001b08	        0x4883ec28	                           sub rsp, 0x28	      7269	decNumber.c	FUNCTION_15
0x4001b0c	          0x4889fb	                            mov rbx, rdi	      7269	decNumber.c	FUNCTION_15
0x4001b0f	          0x4889f5	                            mov rbp, rsi	      7269	decNumber.c	FUNCTION_15
0x4001b12	          0x4989d5	                            mov r13, rdx	      7269	decNumber.c	FUNCTION_15
0x4001b15	          0x4989cc	                            mov r12, rcx	      7269	decNumber.c	FUNCTION_15
0x4001b18	    0x64488b042528	                mov rax, qword fs:[0x28]	      7269	decNumber.c	FUNCTION_15
0x4001b21	      0x4889442418	             mov qword [rsp + 0x18], rax	      7269	decNumber.c	FUNCTION_15
0x4001b26	            0x31c0	                            xor eax, eax	      7269	decNumber.c	FUNCTION_15
0x4001b28	          0x8b4e08	                mov ecx, dword [rsi + 8]	      7271	decNumber.c	FUNCTION_15
0x4001b2b	            0x89c8	                            mov eax, ecx	      7271	decNumber.c	FUNCTION_15
0x4001b2d	            0x2b07	                    sub eax, dword [rdi]	      7271	decNumber.c	FUNCTION_15
0x4001b2f	          0x83c001	                              add eax, 1	      7271	decNumber.c	FUNCTION_15
0x4001b32	          0x8b5704	                mov edx, dword [rdi + 4]	      7279	decNumber.c	FUNCTION_15	IF_1
0x4001b35	            0x39d0	                            cmp eax, edx	      7279	decNumber.c	FUNCTION_15	IF_1
0x4001b37	            0x7c79	                            jl 0x4001bb2	      7279	decNumber.c	FUNCTION_15	IF_1
0x4001b39	            0x7e10	                           jle 0x4001b4b	      7283	decNumber.c	FUNCTION_15	IF_1	IF_2
0x4001b3b	          0x4c89e1	                            mov rcx, r12	      7285	decNumber.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x4001b3e	          0x4c89ea	                            mov rdx, r13	      7285	decNumber.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x4001b41	      0xe87efeffff	                call sym.decSetSubnormal	      7285	decNumber.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x4001b46	      0xe9de000000	                           jmp 0x4001c29	      7286	decNumber.c	FUNCTION_15	IF_1	IF_2
0x4001b4b	      0xc644240800	                   mov byte [rsp + 8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x4001b50	    0xc70424010000	                      mov dword [rsp], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4001b57	    0x66c744240a01	                 mov word [rsp + 0xa], 1	      7290	decNumber.c	FUNCTION_15	IF_1
0x4001b5e	        0x894c2404	                mov dword [rsp + 4], ecx	      7291	decNumber.c	FUNCTION_15	IF_1
0x4001b62	      0xba01000000	                              mov edx, 1	      7292	decNumber.c	FUNCTION_15	IF_1	CALL_3
0x4001b67	          0x4889e6	                            mov rsi, rsp	      7292	decNumber.c	FUNCTION_15	IF_1	CALL_3
0x4001b6a	      0xe813f9ffff	                     call sym.decCompare	      7292	decNumber.c	FUNCTION_15	IF_1	CALL_3
0x4001b6f	      0x3d00000080	                     cmp eax, 0x80000000	      7293	decNumber.c	FUNCTION_15	IF_1	IF_3
0x4001b74	            0x750a	                           jne 0x4001b80	      7293	decNumber.c	FUNCTION_15	IF_1	IF_3
0x4001b76	      0x41830c2410	                    or dword [r12], 0x10	      7294	decNumber.c	FUNCTION_15	IF_1	IF_3
0x4001b7b	      0xe9a9000000	                           jmp 0x4001c29	      7295	decNumber.c	FUNCTION_15	IF_1	IF_3
0x4001b80	        0x418b5500	                    mov edx, dword [r13]	      7297	decNumber.c	FUNCTION_15	IF_1	IF_4
0x4001b84	            0x85c0	                           test eax, eax	      7297	decNumber.c	FUNCTION_15	IF_1	IF_4
0x4001b86	            0x752a	                           jne 0x4001bb2	      7297	decNumber.c	FUNCTION_15	IF_1	IF_4
0x4001b88	            0x89d0	                            mov eax, edx	      7297	decNumber.c	FUNCTION_15	IF_1	IF_4
0x4001b8a	          0xc1e81f	                           shr eax, 0x1f	      7297	decNumber.c	FUNCTION_15	IF_1	IF_4
0x4001b8d	            0x84c0	                             test al, al	      7297	decNumber.c	FUNCTION_15	IF_1	IF_4
0x4001b8f	            0x7421	                            je 0x4001bb2	      7297	decNumber.c	FUNCTION_15	IF_1	IF_4
0x4001b91	          0x4c89e1	                            mov rcx, r12	      7298	decNumber.c	FUNCTION_15	IF_1	IF_4	CALL_4
0x4001b94	          0x4889ee	                            mov rsi, rbp	      7298	decNumber.c	FUNCTION_15	IF_1	IF_4	CALL_4
0x4001b97	          0x4889df	                            mov rdi, rbx	      7298	decNumber.c	FUNCTION_15	IF_1	IF_4	CALL_4
0x4001b9a	      0xe868fbffff	                  call sym.decApplyRound	      7298	decNumber.c	FUNCTION_15	IF_1	IF_4	CALL_4
0x4001b9f	          0x4c89e1	                            mov rcx, r12	      7299	decNumber.c	FUNCTION_15	IF_1	IF_4	CALL_5
0x4001ba2	          0x4c89ea	                            mov rdx, r13	      7299	decNumber.c	FUNCTION_15	IF_1	IF_4	CALL_5
0x4001ba5	          0x4889ee	                            mov rsi, rbp	      7299	decNumber.c	FUNCTION_15	IF_1	IF_4	CALL_5
0x4001ba8	          0x4889df	                            mov rdi, rbx	      7299	decNumber.c	FUNCTION_15	IF_1	IF_4	CALL_5
0x4001bab	      0xe814feffff	                call sym.decSetSubnormal	      7299	decNumber.c	FUNCTION_15	IF_1	IF_4	CALL_5
0x4001bb0	            0xeb77	                           jmp 0x4001c29	      7300	decNumber.c	FUNCTION_15	IF_1	IF_4
0x4001bb2	        0x418b5500	                    mov edx, dword [r13]	      7305	decNumber.c	FUNCTION_15	CALL_6
0x4001bb6	            0x85d2	                           test edx, edx	      7305	decNumber.c	FUNCTION_15	CALL_6
0x4001bb8	            0x740e	                            je 0x4001bc8	      7305	decNumber.c	FUNCTION_15	CALL_6
0x4001bba	          0x4c89e1	                            mov rcx, r12	      7305	decNumber.c	FUNCTION_15	CALL_6
0x4001bbd	          0x4889ee	                            mov rsi, rbp	      7305	decNumber.c	FUNCTION_15	CALL_6
0x4001bc0	          0x4889df	                            mov rdi, rbx	      7305	decNumber.c	FUNCTION_15	CALL_6
0x4001bc3	      0xe83ffbffff	                  call sym.decApplyRound	      7305	decNumber.c	FUNCTION_15	CALL_6
0x4001bc8	          0x8b5304	                mov edx, dword [rbx + 4]	      7308	decNumber.c	FUNCTION_15	IF_6
0x4001bcb	          0x8b4504	                mov eax, dword [rbp + 4]	      7308	decNumber.c	FUNCTION_15	IF_6
0x4001bce	            0x89c1	                            mov ecx, eax	      7308	decNumber.c	FUNCTION_15	IF_6
0x4001bd0	          0x2b4d00	                    sub ecx, dword [rbp]	      7308	decNumber.c	FUNCTION_15	IF_6
0x4001bd3	          0x83c101	                              add ecx, 1	      7308	decNumber.c	FUNCTION_15	IF_6
0x4001bd6	            0x39ca	                            cmp edx, ecx	      7308	decNumber.c	FUNCTION_15	IF_6
0x4001bd8	            0x7e4f	                           jle 0x4001c29	      7308	decNumber.c	FUNCTION_15	IF_6
0x4001bda	            0x8b33	                    mov esi, dword [rbx]	      7312	decNumber.c	FUNCTION_15	IF_7
0x4001bdc	            0x29f0	                            sub eax, esi	      7312	decNumber.c	FUNCTION_15	IF_7
0x4001bde	          0x83c001	                              add eax, 1	      7312	decNumber.c	FUNCTION_15	IF_7
0x4001be1	            0x39c2	                            cmp edx, eax	      7312	decNumber.c	FUNCTION_15	IF_7
0x4001be3	            0x7e10	                           jle 0x4001bf5	      7312	decNumber.c	FUNCTION_15	IF_7
0x4001be5	          0x4c89e2	                            mov rdx, r12	      7313	decNumber.c	FUNCTION_15	IF_7	CALL_7
0x4001be8	          0x4889ee	                            mov rsi, rbp	      7313	decNumber.c	FUNCTION_15	IF_7	CALL_7
0x4001beb	          0x4889df	                            mov rdi, rbx	      7313	decNumber.c	FUNCTION_15	IF_7	CALL_7
0x4001bee	      0xe867faffff	                 call sym.decSetOverflow	      7313	decNumber.c	FUNCTION_15	IF_7	CALL_7
0x4001bf3	            0xeb34	                           jmp 0x4001c29	      7314	decNumber.c	FUNCTION_15	IF_7
0x4001bf5	        0x807d1800	                cmp byte [rbp + 0x18], 0	      7317	decNumber.c	FUNCTION_15	IF_8
0x4001bf9	            0x742e	                            je 0x4001c29	      7317	decNumber.c	FUNCTION_15	IF_8
0x4001bfb	            0x29ca	                            sub edx, ecx	      7320	decNumber.c	FUNCTION_15
0x4001bfd	            0x89d5	                            mov ebp, edx	      7320	decNumber.c	FUNCTION_15
0x4001bff	      0x66837b0a00	                 cmp word [rbx + 0xa], 0	      7323	decNumber.c	FUNCTION_15	IF_9	CALL_8
0x4001c04	            0x750b	                           jne 0x4001c11	      7323	decNumber.c	FUNCTION_15	IF_9	CALL_8
0x4001c06	          0x83fe01	                              cmp esi, 1	      7323	decNumber.c	FUNCTION_15	IF_9	CALL_8
0x4001c09	            0x7506	                           jne 0x4001c11	      7323	decNumber.c	FUNCTION_15	IF_9	CALL_8
0x4001c0b	        0xf6430870	               test byte [rbx + 8], 0x70	      7323	decNumber.c	FUNCTION_15	IF_9	CALL_8
0x4001c0f	            0x740d	                            je 0x4001c1e	      7323	decNumber.c	FUNCTION_15	IF_9	CALL_8
0x4001c11	        0x488d7b0a	                    lea rdi, [rbx + 0xa]	      7324	decNumber.c	FUNCTION_15	IF_9	CALL_9
0x4001c15	            0x89ea	                            mov edx, ebp	      7324	decNumber.c	FUNCTION_15	IF_9	CALL_9
0x4001c17	      0xe846e7ffff	                 call sym.decShiftToMost	      7324	decNumber.c	FUNCTION_15	IF_9	CALL_9
0x4001c1c	            0x8903	                    mov dword [rbx], eax	      7324	decNumber.c	FUNCTION_15	IF_9	CALL_9
0x4001c1e	          0x296b04	                sub dword [rbx + 4], ebp	      7326	decNumber.c	FUNCTION_15
0x4001c21	    0x41810c240004	                   or dword [r12], 0x400	      7327	decNumber.c	FUNCTION_15
0x4001c29	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      7329	decNumber.c	FUNCTION_15
0x4001c2e	    0x644833042528	                xor rax, qword fs:[0x28]	      7329	decNumber.c	FUNCTION_15
0x4001c37	            0x7405	                            je 0x4001c3e	      7329	decNumber.c	FUNCTION_15
0x4001c39	      0xe800000000	                          call 0x4001c3e	      7329	decNumber.c	FUNCTION_15
0x4001c3e	        0x4883c428	                           add rsp, 0x28	      7329	decNumber.c	FUNCTION_15
0x4001c42	              0x5b	                                 pop rbx	      7329	decNumber.c	FUNCTION_15
0x4001c43	              0x5d	                                 pop rbp	      7329	decNumber.c	FUNCTION_15
0x4001c44	            0x415c	                                 pop r12	      7329	decNumber.c	FUNCTION_15
0x4001c46	            0x415d	                                 pop r13	      7329	decNumber.c	FUNCTION_15
0x4001c48	              0xc3	                                     ret	      7329	decNumber.c	FUNCTION_15
decGetInt	SWITCH,0:functions,0:ELSE,4:DO,0:FOR,2:IF,15:CALL,2:WHILE,0	96
0x4000bac	            0x8b07	                    mov eax, dword [rdi]	      7540	decNumber.c	FUNCTION_20
0x4000bae	          0x8b4f04	                mov ecx, dword [rdi + 4]	      7540	decNumber.c	FUNCTION_20
0x4000bb1	          0x8d1408	                    lea edx, [rax + rcx]	      7540	decNumber.c	FUNCTION_20
0x4000bb4	      0x440fb64708	               movzx r8d, byte [rdi + 8]	      7541	decNumber.c	FUNCTION_20	CALL_1
0x4000bb9	      0x66837f0a00	                 cmp word [rdi + 0xa], 0	      7551	decNumber.c	FUNCTION_20	CALL_2
0x4000bbe	            0x7514	                           jne 0x4000bd4	      7551	decNumber.c	FUNCTION_20	CALL_2
0x4000bc0	          0x83f801	                              cmp eax, 1	      7551	decNumber.c	FUNCTION_20	CALL_2
0x4000bc3	            0x750f	                           jne 0x4000bd4	      7551	decNumber.c	FUNCTION_20	CALL_2
0x4000bc5	      0xb800000000	                              mov eax, 0	      7551	decNumber.c	FUNCTION_20	CALL_2
0x4000bca	        0x41f6c070	                          test r8b, 0x70	      7551	decNumber.c	FUNCTION_20	CALL_2
0x4000bce	     0xf8411010000	                            je 0x4000ce5	      7551	decNumber.c	FUNCTION_20	CALL_2
0x4000bd4	        0x488d770a	                    lea rsi, [rdi + 0xa]	      7553	decNumber.c	FUNCTION_20
0x4000bd8	    0x41b900000000	                              mov r9d, 0	      7554	decNumber.c	FUNCTION_20
0x4000bde	            0x85c9	                           test ecx, ecx	      7555	decNumber.c	FUNCTION_20	IF_2
0x4000be0	            0x796e	                           jns 0x4000c50	      7555	decNumber.c	FUNCTION_20	IF_2
0x4000be2	            0xf7d9	                                 neg ecx	      7560	decNumber.c	FUNCTION_20	ELSE_1
0x4000be4	          0x83f902	                              cmp ecx, 2	      7562	decNumber.c	FUNCTION_20	ELSE_1	FOR_1
0x4000be7	            0x7e24	                           jle 0x4000c0d	      7562	decNumber.c	FUNCTION_20	ELSE_1	FOR_1
0x4000be9	      0xb800000080	                     mov eax, 0x80000000	      7563	decNumber.c	FUNCTION_20	ELSE_1	FOR_1	IF_3
0x4000bee	      0x66837f0a00	                 cmp word [rdi + 0xa], 0	      7563	decNumber.c	FUNCTION_20	ELSE_1	FOR_1	IF_3
0x4000bf3	            0x740c	                            je 0x4000c01	      7563	decNumber.c	FUNCTION_20	ELSE_1	FOR_1	IF_3
0x4000bf5	            0xf3c3	                                     ret	      7563	decNumber.c	FUNCTION_20	ELSE_1	FOR_1	IF_3
0x4000bf7	        0x66833e00	                       cmp word [rsi], 0	      7563	decNumber.c	FUNCTION_20	ELSE_1	FOR_1	IF_3
0x4000bfb	     0xf85df000000	                           jne 0x4000ce0	      7563	decNumber.c	FUNCTION_20	ELSE_1	FOR_1	IF_3
0x4000c01	          0x83e903	                              sub ecx, 3	      7564	decNumber.c	FUNCTION_20	ELSE_1	FOR_1
0x4000c04	        0x4883c602	                              add rsi, 2	      7562	decNumber.c	FUNCTION_20	ELSE_1	FOR_1
0x4000c08	          0x83f902	                              cmp ecx, 2	      7562	decNumber.c	FUNCTION_20	ELSE_1	FOR_1
0x4000c0b	            0x7fea	                            jg 0x4000bf7	      7562	decNumber.c	FUNCTION_20	ELSE_1	FOR_1
0x4000c0d	            0x85c9	                           test ecx, ecx	      7566	decNumber.c	FUNCTION_20	ELSE_1	IF_4
0x4000c0f	            0x7443	                            je 0x4000c54	      7566	decNumber.c	FUNCTION_20	ELSE_1	IF_4
0x4000c11	        0x440fb716	                  movzx r10d, word [rsi]	      7571	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2
0x4000c15	          0x4489d0	                           mov eax, r10d	      7571	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2
0x4000c18	            0xd3e8	                             shr eax, cl	      7571	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2
0x4000c1a	          0x4863f9	                         movsxd rdi, ecx	      7571	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2
0x4000c1d	     0xfaf04bd0000	                 imul eax, dword [rdi*4]	      7571	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2
0x4000c25	          0xc1e811	                           shr eax, 0x11	      7571	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2
0x4000c28	          0x4189c1	                            mov r9d, eax	      7571	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2
0x4000c2b	     0xfaf04bd0000	                 imul eax, dword [rdi*4]	      7577	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2	IF_5
0x4000c33	            0x89c7	                            mov edi, eax	      7577	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2	IF_5
0x4000c35	      0xb800000080	                     mov eax, 0x80000000	      7577	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2	IF_5
0x4000c3a	          0x4139fa	                           cmp r10d, edi	      7577	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2	IF_5
0x4000c3d	     0xf85a2000000	                           jne 0x4000ce5	      7577	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2	IF_5
0x4000c43	      0xb803000000	                              mov eax, 3	      7579	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2
0x4000c48	            0x29c8	                            sub eax, ecx	      7579	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2
0x4000c4a	            0x89c1	                            mov ecx, eax	      7579	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2
0x4000c4c	        0x4883c602	                              add rsi, 2	      7580	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2
0x4000c50	            0x85c9	                           test ecx, ecx	      7586	decNumber.c	FUNCTION_20	IF_6
0x4000c52	            0x750d	                           jne 0x4000c61	      7586	decNumber.c	FUNCTION_20	IF_6
0x4000c54	        0x440fb70e	                   movzx r9d, word [rsi]	      7586	decNumber.c	FUNCTION_20	IF_6
0x4000c58	        0x4883c602	                              add rsi, 2	      7586	decNumber.c	FUNCTION_20	IF_6
0x4000c5c	      0xb903000000	                              mov ecx, 3	      7586	decNumber.c	FUNCTION_20	IF_6
0x4000c61	          0x83fa0a	                            cmp edx, 0xa	      7588	decNumber.c	FUNCTION_20	IF_7
0x4000c64	            0x7f5f	                            jg 0x4000cc5	      7588	decNumber.c	FUNCTION_20	IF_7
0x4000c66	            0x39d1	                            cmp ecx, edx	      7591	decNumber.c	FUNCTION_20	IF_7	FOR_2
0x4000c68	            0x7d21	                           jge 0x4000c8b	      7591	decNumber.c	FUNCTION_20	IF_7	FOR_2
0x4000c6a	          0x4489cf	                            mov edi, r9d	      7591	decNumber.c	FUNCTION_20	IF_7	FOR_2
0x4000c6d	           0xfb706	                   movzx eax, word [rsi]	      7592	decNumber.c	FUNCTION_20	IF_7	FOR_2
0x4000c70	          0x4c63d1	                         movsxd r10, ecx	      7592	decNumber.c	FUNCTION_20	IF_7	FOR_2
0x4000c73	    0x420faf049500	                 imul eax, dword [r10*4]	      7592	decNumber.c	FUNCTION_20	IF_7	FOR_2
0x4000c7c	             0x1c7	                            add edi, eax	      7592	decNumber.c	FUNCTION_20	IF_7	FOR_2
0x4000c7e	          0x83c103	                              add ecx, 3	      7593	decNumber.c	FUNCTION_20	IF_7	FOR_2
0x4000c81	        0x4883c602	                              add rsi, 2	      7591	decNumber.c	FUNCTION_20	IF_7	FOR_2
0x4000c85	            0x39ca	                            cmp edx, ecx	      7591	decNumber.c	FUNCTION_20	IF_7	FOR_2
0x4000c87	            0x7fe4	                            jg 0x4000c6d	      7591	decNumber.c	FUNCTION_20	IF_7	FOR_2
0x4000c89	            0xeb03	                           jmp 0x4000c8e	      7591	decNumber.c	FUNCTION_20	IF_7	FOR_2
0x4000c8b	          0x4489cf	                            mov edi, r9d	      7591	decNumber.c	FUNCTION_20	IF_7	FOR_2
0x4000c8e	          0x83fa0a	                            cmp edx, 0xa	      7595	decNumber.c	FUNCTION_20	IF_7	IF_8
0x4000c91	            0x7542	                           jne 0x4000cd5	      7595	decNumber.c	FUNCTION_20	IF_7	IF_8
0x4000c93	          0x83e903	                              sub ecx, 3	      7596	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_9
0x4000c96	          0x4863c9	                         movsxd rcx, ecx	      7596	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_9
0x4000c99	            0x89f8	                            mov eax, edi	      7596	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_9
0x4000c9b	              0x99	                                     cdq	      7596	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_9
0x4000c9c	    0xf73c8d000000	                      idiv dword [rcx*4]	      7596	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_9
0x4000ca3	         0xfb756fe	               movzx edx, word [rsi - 2]	      7596	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_9
0x4000ca7	            0x39d0	                            cmp eax, edx	      7596	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_9
0x4000ca9	            0x751a	                           jne 0x4000cc5	      7596	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_9
0x4000cab	          0x4584c0	                           test r8b, r8b	      7598	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_10
0x4000cae	            0x7908	                           jns 0x4000cb8	      7598	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_10
0x4000cb0	    0x81fffd933577	                     cmp edi, 0x773593fd	      7598	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_10
0x4000cb6	            0x7f0d	                            jg 0x4000cc5	      7598	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_10
0x4000cb8	          0x4584c0	                           test r8b, r8b	      7599	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_11
0x4000cbb	            0x7818	                            js 0x4000cd5	      7599	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_11
0x4000cbd	    0x81ffffc99a3b	                     cmp edi, 0x3b9ac9ff	      7599	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_11
0x4000cc3	            0x7e10	                           jle 0x4000cd5	      7599	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_11
0x4000cc5	        0x4183e101	                              and r9d, 1	      7605	decNumber.c	FUNCTION_20	IF_13	IF_14
0x4000cc9	        0x4183f901	                              cmp r9d, 1	      7606	decNumber.c	FUNCTION_20	IF_13
0x4000ccd	            0x19c0	                            sbb eax, eax	      7606	decNumber.c	FUNCTION_20	IF_13
0x4000ccf	      0x2dfdffff7f	                     sub eax, 0x7ffffffd	      7606	decNumber.c	FUNCTION_20	IF_13
0x4000cd4	              0xc3	                                     ret	      7606	decNumber.c	FUNCTION_20	IF_13
0x4000cd5	            0x89f8	                            mov eax, edi	      7606	decNumber.c	FUNCTION_20	IF_13
0x4000cd7	            0xf7d8	                                 neg eax	      7609	decNumber.c	FUNCTION_20	IF_15
0x4000cd9	          0x4584c0	                           test r8b, r8b	      7609	decNumber.c	FUNCTION_20	IF_15
0x4000cdc	           0xf49c7	                         cmovns eax, edi	      7609	decNumber.c	FUNCTION_20	IF_15
0x4000cdf	              0xc3	                                     ret	      7609	decNumber.c	FUNCTION_20	IF_15
0x4000ce0	      0xb800000080	                     mov eax, 0x80000000	      7563	decNumber.c	FUNCTION_20	ELSE_1	FOR_1	IF_3
0x4000ce5	            0xf3c3	                                     ret	      7611	decNumber.c	FUNCTION_20
decShiftToLeast	SWITCH,0:functions,0:ELSE,0:DO,0:FOR,2:IF,5:CALL,3:WHILE,0	157
0x4000528	            0x89f0	                            mov eax, esi	      6740	decNumber.c	FUNCTION_9	IF_1
0x400052a	            0x85d2	                           test edx, edx	      6740	decNumber.c	FUNCTION_9	IF_1
0x400052c	     0xf84d8010000	                            je 0x400070a	      6740	decNumber.c	FUNCTION_9	IF_1
0x4000532	          0x4189d0	                            mov r8d, edx	      6740	decNumber.c	FUNCTION_9	IF_1
0x4000535	        0x448d0c76	                  lea r9d, [rsi + rsi*2]	      6741	decNumber.c	FUNCTION_9	IF_2
0x4000539	          0x4439ca	                            cmp edx, r9d	      6741	decNumber.c	FUNCTION_9	IF_2
0x400053c	            0x750b	                           jne 0x4000549	      6741	decNumber.c	FUNCTION_9	IF_2
0x400053e	      0x66c7070000	                       mov word [rdi], 0	      6742	decNumber.c	FUNCTION_9	IF_2
0x4000543	      0xb801000000	                              mov eax, 1	      6743	decNumber.c	FUNCTION_9	IF_2
0x4000548	              0xc3	                                     ret	      6743	decNumber.c	FUNCTION_9	IF_2
0x4000549	          0x83fa31	                           cmp edx, 0x31	      6747	decNumber.c	FUNCTION_9	CALL_1
0x400054c	            0x7f20	                            jg 0x400056e	      6747	decNumber.c	FUNCTION_9	CALL_1
0x400054e	          0x4863c2	                         movsxd rax, edx	      6747	decNumber.c	FUNCTION_9	CALL_1
0x4000551	     0xfb680000000	                   movzx eax, byte [rax]	      6747	decNumber.c	FUNCTION_9	CALL_1
0x4000558	           0xfb6d0	                           movzx edx, al	      6747	decNumber.c	FUNCTION_9	CALL_1
0x400055b	        0x8d5452fd	              lea edx, [rdx + rdx*2 - 3]	      6747	decNumber.c	FUNCTION_9	CALL_1
0x400055f	          0x4189d2	                           mov r10d, edx	      6747	decNumber.c	FUNCTION_9	CALL_1
0x4000562	          0x4489c1	                            mov ecx, r8d	      6747	decNumber.c	FUNCTION_9	CALL_1
0x4000565	            0x29d1	                            sub ecx, edx	      6747	decNumber.c	FUNCTION_9	CALL_1
0x4000567	          0x83f903	                              cmp ecx, 3	      6748	decNumber.c	FUNCTION_9	IF_3
0x400056a	            0x7577	                           jne 0x40005e3	      6748	decNumber.c	FUNCTION_9	IF_3
0x400056c	            0xeb24	                           jmp 0x4000592	      6748	decNumber.c	FUNCTION_9	IF_3
0x400056e	          0x8d4a02	                      lea ecx, [rdx + 2]	      6747	decNumber.c	FUNCTION_9	CALL_1
0x4000571	      0xba56555555	                     mov edx, 0x55555556	      6747	decNumber.c	FUNCTION_9	CALL_1
0x4000576	            0x89c8	                            mov eax, ecx	      6747	decNumber.c	FUNCTION_9	CALL_1
0x4000578	            0xf7ea	                                imul edx	      6747	decNumber.c	FUNCTION_9	CALL_1
0x400057a	          0xc1f91f	                           sar ecx, 0x1f	      6747	decNumber.c	FUNCTION_9	CALL_1
0x400057d	            0x29ca	                            sub edx, ecx	      6747	decNumber.c	FUNCTION_9	CALL_1
0x400057f	        0x8d4452fd	              lea eax, [rdx + rdx*2 - 3]	      6747	decNumber.c	FUNCTION_9	CALL_1
0x4000583	          0x4189c2	                           mov r10d, eax	      6747	decNumber.c	FUNCTION_9	CALL_1
0x4000586	          0x4489c1	                            mov ecx, r8d	      6747	decNumber.c	FUNCTION_9	CALL_1
0x4000589	            0x29c1	                            sub ecx, eax	      6747	decNumber.c	FUNCTION_9	CALL_1
0x400058b	          0x83f903	                              cmp ecx, 3	      6748	decNumber.c	FUNCTION_9	IF_3
0x400058e	            0x7553	                           jne 0x40005e3	      6748	decNumber.c	FUNCTION_9	IF_3
0x4000590	            0xeb08	                           jmp 0x400059a	      6748	decNumber.c	FUNCTION_9	IF_3
0x4000592	           0xfb6c8	                           movzx ecx, al	      6749	decNumber.c	FUNCTION_9	IF_3	CALL_2
0x4000595	          0x4801c9	                            add rcx, rcx	      6749	decNumber.c	FUNCTION_9	IF_3	CALL_2
0x4000598	            0xeb06	                           jmp 0x40005a0	      6749	decNumber.c	FUNCTION_9	IF_3	CALL_2
0x400059a	          0x4863ca	                         movsxd rcx, edx	      6749	decNumber.c	FUNCTION_9	IF_3	CALL_2
0x400059d	          0x4801c9	                            add rcx, rcx	      6749	decNumber.c	FUNCTION_9	IF_3	CALL_2
0x40005a0	          0x4801f9	                            add rcx, rdi	      6749	decNumber.c	FUNCTION_9	IF_3	CALL_2
0x40005a3	          0x4863f6	                         movsxd rsi, esi	      6750	decNumber.c	FUNCTION_9	IF_3	FOR_1
0x40005a6	        0x4c8d0477	                   lea r8, [rdi + rsi*2]	      6750	decNumber.c	FUNCTION_9	IF_3	FOR_1
0x40005aa	          0x4c39c1	                             cmp rcx, r8	      6750	decNumber.c	FUNCTION_9	IF_3	FOR_1
0x40005ad	            0x732a	                           jae 0x40005d9	      6750	decNumber.c	FUNCTION_9	IF_3	FOR_1
0x40005af	          0x4889c8	                            mov rax, rcx	      6750	decNumber.c	FUNCTION_9	IF_3	FOR_1
0x40005b2	          0x4889fa	                            mov rdx, rdi	      6750	decNumber.c	FUNCTION_9	IF_3	FOR_1
0x40005b5	           0xfb730	                   movzx esi, word [rax]	      6750	decNumber.c	FUNCTION_9	IF_3	FOR_1
0x40005b8	          0x668932	                      mov word [rdx], si	      6750	decNumber.c	FUNCTION_9	IF_3	FOR_1
0x40005bb	        0x4883c202	                              add rdx, 2	      6750	decNumber.c	FUNCTION_9	IF_3	FOR_1
0x40005bf	        0x4883c002	                              add rax, 2	      6750	decNumber.c	FUNCTION_9	IF_3	FOR_1
0x40005c3	          0x4c39c0	                             cmp rax, r8	      6750	decNumber.c	FUNCTION_9	IF_3	FOR_1
0x40005c6	            0x72ed	                            jb 0x40005b5	      6750	decNumber.c	FUNCTION_9	IF_3	FOR_1
0x40005c8	          0x48f7d1	                                 not rcx	      6750	decNumber.c	FUNCTION_9	IF_3	FOR_1
0x40005cb	        0x4a8d0401	                     lea rax, [rcx + r8]	      6750	decNumber.c	FUNCTION_9	IF_3	FOR_1
0x40005cf	          0x48d1e8	                              shr rax, 1	      6750	decNumber.c	FUNCTION_9	IF_3	FOR_1
0x40005d2	      0x488d444702	              lea rax, [rdi + rax*2 + 2]	      6750	decNumber.c	FUNCTION_9	IF_3	FOR_1
0x40005d7	            0xeb03	                           jmp 0x40005dc	      6750	decNumber.c	FUNCTION_9	IF_3	FOR_1
0x40005d9	          0x4889f8	                            mov rax, rdi	      6746	decNumber.c	FUNCTION_9
0x40005dc	          0x4829f8	                            sub rax, rdi	      6751	decNumber.c	FUNCTION_9	IF_3
0x40005df	          0x48d1e8	                              shr rax, 1	      6751	decNumber.c	FUNCTION_9	IF_3
0x40005e2	              0xc3	                                     ret	      6751	decNumber.c	FUNCTION_9	IF_3
0x40005e3	        0x4183fa31	                          cmp r10d, 0x31	      6755	decNumber.c	FUNCTION_9	CALL_3
0x40005e7	            0x7f10	                            jg 0x40005f9	      6755	decNumber.c	FUNCTION_9	CALL_3
0x40005e9	          0x4d63d2	                        movsxd r10, r10d	      6755	decNumber.c	FUNCTION_9	CALL_3
0x40005ec	    0x410fb6820000	                   movzx eax, byte [r10]	      6755	decNumber.c	FUNCTION_9	CALL_3
0x40005f4	          0x4801c0	                            add rax, rax	      6755	decNumber.c	FUNCTION_9	CALL_3
0x40005f7	            0xeb1b	                           jmp 0x4000614	      6755	decNumber.c	FUNCTION_9	CALL_3
0x40005f9	        0x4183c202	                             add r10d, 2	      6755	decNumber.c	FUNCTION_9	CALL_3
0x40005fd	      0xba56555555	                     mov edx, 0x55555556	      6755	decNumber.c	FUNCTION_9	CALL_3
0x4000602	          0x4489d0	                           mov eax, r10d	      6755	decNumber.c	FUNCTION_9	CALL_3
0x4000605	            0xf7ea	                                imul edx	      6755	decNumber.c	FUNCTION_9	CALL_3
0x4000607	        0x41c1fa1f	                          sar r10d, 0x1f	      6755	decNumber.c	FUNCTION_9	CALL_3
0x400060b	          0x4429d2	                           sub edx, r10d	      6755	decNumber.c	FUNCTION_9	CALL_3
0x400060e	          0x4863c2	                         movsxd rax, edx	      6755	decNumber.c	FUNCTION_9	CALL_3
0x4000611	          0x4801c0	                            add rax, rax	      6755	decNumber.c	FUNCTION_9	CALL_3
0x4000614	          0x4801f8	                            add rax, rdi	      6755	decNumber.c	FUNCTION_9	CALL_3
0x4000617	          0x4489ce	                            mov esi, r9d	      6756	decNumber.c	FUNCTION_9
0x400061a	          0x4429c6	                            sub esi, r8d	      6756	decNumber.c	FUNCTION_9
0x400061d	          0x4863d1	                         movsxd rdx, ecx	      6758	decNumber.c	FUNCTION_9
0x4000620	    0x448b1c950000	                 mov r11d, dword [rdx*4]	      6758	decNumber.c	FUNCTION_9
0x4000628	           0xfb710	                   movzx edx, word [rax]	      6763	decNumber.c	FUNCTION_9	FOR_2
0x400062b	            0xd3ea	                             shr edx, cl	      6763	decNumber.c	FUNCTION_9	FOR_2
0x400062d	        0x410fafd3	                          imul edx, r11d	      6763	decNumber.c	FUNCTION_9	FOR_2
0x4000631	          0xc1ea11	                           shr edx, 0x11	      6763	decNumber.c	FUNCTION_9	FOR_2
0x4000634	          0x668917	                      mov word [rdi], dx	      6763	decNumber.c	FUNCTION_9	FOR_2
0x4000637	    0x41ba03000000	                             mov r10d, 3	      6764	decNumber.c	FUNCTION_9	FOR_2
0x400063d	          0x4129ca	                           sub r10d, ecx	      6764	decNumber.c	FUNCTION_9	FOR_2
0x4000640	          0x4429d6	                           sub esi, r10d	      6764	decNumber.c	FUNCTION_9	FOR_2
0x4000643	            0x85f6	                           test esi, esi	      6765	decNumber.c	FUNCTION_9	FOR_2	IF_4
0x4000645	     0xf8e9e000000	                           jle 0x40006e9	      6765	decNumber.c	FUNCTION_9	FOR_2	IF_4
0x400064b	            0x4156	                                push r14	      6735	decNumber.c	FUNCTION_9
0x400064d	            0x4155	                                push r13	      6735	decNumber.c	FUNCTION_9
0x400064f	            0x4154	                                push r12	      6735	decNumber.c	FUNCTION_9
0x4000651	              0x55	                                push rbp	      6735	decNumber.c	FUNCTION_9
0x4000652	              0x53	                                push rbx	      6735	decNumber.c	FUNCTION_9
0x4000653	        0x4c8d4802	                       lea r9, [rax + 2]	      6766	decNumber.c	FUNCTION_9	FOR_2
0x4000657	      0x440fb76002	              movzx r12d, word [rax + 2]	      6769	decNumber.c	FUNCTION_9	FOR_2
0x400065c	          0x4489e0	                           mov eax, r12d	      6769	decNumber.c	FUNCTION_9	FOR_2
0x400065f	            0xd3e8	                             shr eax, cl	      6769	decNumber.c	FUNCTION_9	FOR_2
0x4000661	        0x410fafc3	                          imul eax, r11d	      6769	decNumber.c	FUNCTION_9	FOR_2
0x4000665	          0xc1e811	                           shr eax, 0x11	      6769	decNumber.c	FUNCTION_9	FOR_2
0x4000668	          0x4189c0	                            mov r8d, eax	      6769	decNumber.c	FUNCTION_9	FOR_2
0x400066b	          0x4863d9	                         movsxd rbx, ecx	      6770	decNumber.c	FUNCTION_9	FOR_2
0x400066e	    0x8b1c9d000000	                  mov ebx, dword [rbx*4]	      6770	decNumber.c	FUNCTION_9	FOR_2
0x4000675	          0x4963ea	                        movsxd rbp, r10d	      6775	decNumber.c	FUNCTION_9	FOR_2
0x4000678	    0x448b2cad0000	                 mov r13d, dword [rbp*4]	      6775	decNumber.c	FUNCTION_9	FOR_2
0x4000680	          0x4489ed	                           mov ebp, r13d	      6775	decNumber.c	FUNCTION_9	FOR_2
0x4000683	           0xfafc3	                           imul eax, ebx	      6775	decNumber.c	FUNCTION_9	FOR_2
0x4000686	          0x4129c4	                           sub r12d, eax	      6775	decNumber.c	FUNCTION_9	FOR_2
0x4000689	        0x450fafe5	                         imul r12d, r13d	      6775	decNumber.c	FUNCTION_9	FOR_2
0x400068d	          0x4101d4	                           add r12d, edx	      6775	decNumber.c	FUNCTION_9	FOR_2
0x4000690	        0x66448927	                    mov word [rdi], r12w	      6775	decNumber.c	FUNCTION_9	FOR_2
0x4000694	            0x29ce	                            sub esi, ecx	      6776	decNumber.c	FUNCTION_9	FOR_2
0x4000696	            0x85f6	                           test esi, esi	      6777	decNumber.c	FUNCTION_9	FOR_2	IF_5
0x4000698	            0x7e5c	                           jle 0x40006f6	      6777	decNumber.c	FUNCTION_9	FOR_2	IF_5
0x400069a	          0x4889f8	                            mov rax, rdi	      6777	decNumber.c	FUNCTION_9	FOR_2	IF_5
0x400069d	        0x468d2411	                   lea r12d, [rcx + r10]	      6777	decNumber.c	FUNCTION_9	FOR_2	IF_5
0x40006a1	            0xeb30	                           jmp 0x40006d3	      6777	decNumber.c	FUNCTION_9	FOR_2	IF_5
0x40006a3	        0x4983c102	                               add r9, 2	      6766	decNumber.c	FUNCTION_9	FOR_2
0x40006a7	        0x410fb711	                    movzx edx, word [r9]	      6769	decNumber.c	FUNCTION_9	FOR_2
0x40006ab	          0x4189d6	                           mov r14d, edx	      6769	decNumber.c	FUNCTION_9	FOR_2
0x40006ae	          0x41d3ee	                            shr r14d, cl	      6769	decNumber.c	FUNCTION_9	FOR_2
0x40006b1	        0x450faff3	                         imul r14d, r11d	      6769	decNumber.c	FUNCTION_9	FOR_2
0x40006b5	        0x41c1ee11	                          shr r14d, 0x11	      6769	decNumber.c	FUNCTION_9	FOR_2
0x40006b9	          0x4589f0	                           mov r8d, r14d	      6769	decNumber.c	FUNCTION_9	FOR_2
0x40006bc	        0x440faff3	                          imul r14d, ebx	      6775	decNumber.c	FUNCTION_9	FOR_2
0x40006c0	          0x4429f2	                           sub edx, r14d	      6775	decNumber.c	FUNCTION_9	FOR_2
0x40006c3	           0xfafd5	                           imul edx, ebp	      6775	decNumber.c	FUNCTION_9	FOR_2
0x40006c6	          0x4401ea	                           add edx, r13d	      6775	decNumber.c	FUNCTION_9	FOR_2
0x40006c9	          0x668910	                      mov word [rax], dx	      6775	decNumber.c	FUNCTION_9	FOR_2
0x40006cc	          0x4429e6	                           sub esi, r12d	      6775	decNumber.c	FUNCTION_9	FOR_2
0x40006cf	            0x85f6	                           test esi, esi	      6777	decNumber.c	FUNCTION_9	FOR_2	IF_5
0x40006d1	            0x7e26	                           jle 0x40006f9	      6777	decNumber.c	FUNCTION_9	FOR_2	IF_5
0x40006d3	        0x4883c002	                              add rax, 2	      6762	decNumber.c	FUNCTION_9	FOR_2
0x40006d7	          0x4589c5	                           mov r13d, r8d	      6763	decNumber.c	FUNCTION_9	FOR_2
0x40006da	        0x66448900	                     mov word [rax], r8w	      6763	decNumber.c	FUNCTION_9	FOR_2
0x40006de	            0x89f2	                            mov edx, esi	      6765	decNumber.c	FUNCTION_9	FOR_2	IF_4
0x40006e0	          0x4429d2	                           sub edx, r10d	      6765	decNumber.c	FUNCTION_9	FOR_2	IF_4
0x40006e3	            0x85d2	                           test edx, edx	      6765	decNumber.c	FUNCTION_9	FOR_2	IF_4
0x40006e5	            0x7fbc	                            jg 0x40006a3	      6765	decNumber.c	FUNCTION_9	FOR_2	IF_4
0x40006e7	            0xeb10	                           jmp 0x40006f9	      6765	decNumber.c	FUNCTION_9	FOR_2	IF_4
0x40006e9	          0x4889f8	                            mov rax, rdi	      6746	decNumber.c	FUNCTION_9
0x40006ec	          0x4829f8	                            sub rax, rdi	      6779	decNumber.c	FUNCTION_9
0x40006ef	          0x48d1f8	                              sar rax, 1	      6779	decNumber.c	FUNCTION_9
0x40006f2	          0x83c001	                              add eax, 1	      6779	decNumber.c	FUNCTION_9
0x40006f5	              0xc3	                                     ret	      6780	decNumber.c	FUNCTION_9
0x40006f6	          0x4889f8	                            mov rax, rdi	      6746	decNumber.c	FUNCTION_9
0x40006f9	          0x4829f8	                            sub rax, rdi	      6779	decNumber.c	FUNCTION_9
0x40006fc	          0x48d1f8	                              sar rax, 1	      6779	decNumber.c	FUNCTION_9
0x40006ff	          0x83c001	                              add eax, 1	      6779	decNumber.c	FUNCTION_9
0x4000702	              0x5b	                                 pop rbx	      6780	decNumber.c	FUNCTION_9
0x4000703	              0x5d	                                 pop rbp	      6780	decNumber.c	FUNCTION_9
0x4000704	            0x415c	                                 pop r12	      6780	decNumber.c	FUNCTION_9
0x4000706	            0x415d	                                 pop r13	      6780	decNumber.c	FUNCTION_9
0x4000708	            0x415e	                                 pop r14	      6780	decNumber.c	FUNCTION_9
0x400070a	            0xf3c3	                                     ret	      6780	decNumber.c	FUNCTION_9
decNumberToUInt32	SWITCH,0:functions,0:ELSE,2:DO,0:FOR,1:IF,3:CALL,4:WHILE,0	59
0x4001da2	        0x4883ec08	                              sub rsp, 8	       416	decNumber.c	FUNCTION_68	FUNCTION_4
0x4001da6	         0xfb64708	               movzx eax, byte [rdi + 8]	       421	decNumber.c	FUNCTION_68	FUNCTION_4	IF_2
0x4001daa	            0xa870	                           test al, 0x70	       421	decNumber.c	FUNCTION_68	FUNCTION_4	IF_2
0x4001dac	     0xf85b2000000	                           jne 0x4001e64	       421	decNumber.c	FUNCTION_68	FUNCTION_4	IF_2
0x4001db2	            0x8b0f	                    mov ecx, dword [rdi]	       421	decNumber.c	FUNCTION_68	FUNCTION_4	IF_2
0x4001db4	          0x83f90a	                            cmp ecx, 0xa	       421	decNumber.c	FUNCTION_68	FUNCTION_4	IF_2
0x4001db7	     0xf8fa7000000	                            jg 0x4001e64	       421	decNumber.c	FUNCTION_68	FUNCTION_4	IF_2
0x4001dbd	        0x837f0400	                  cmp dword [rdi + 4], 0	       421	decNumber.c	FUNCTION_68	FUNCTION_4	IF_2
0x4001dc1	     0xf859d000000	                           jne 0x4001e64	       421	decNumber.c	FUNCTION_68	FUNCTION_4	IF_2
0x4001dc7	            0x84c0	                             test al, al	       422	decNumber.c	FUNCTION_68	FUNCTION_4	CALL_2
0x4001dc9	            0x7914	                           jns 0x4001ddf	       422	decNumber.c	FUNCTION_68	FUNCTION_4	CALL_2
0x4001dcb	      0x66837f0a00	                 cmp word [rdi + 0xa], 0	       422	decNumber.c	FUNCTION_68	FUNCTION_4	CALL_2
0x4001dd0	     0xf858e000000	                           jne 0x4001e64	       422	decNumber.c	FUNCTION_68	FUNCTION_4	CALL_2
0x4001dd6	          0x83f901	                              cmp ecx, 1	       422	decNumber.c	FUNCTION_68	FUNCTION_4	CALL_2
0x4001dd9	     0xf8585000000	                           jne 0x4001e64	       422	decNumber.c	FUNCTION_68	FUNCTION_4	CALL_2
0x4001ddf	      0x440fb7570a	           movzx r10d, word [rdi + 0xa] 	       428	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x4001de4	      0xbacdcccccc	                     mov edx, 0xcccccccd	       430	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x4001de9	          0x4489d0	                           mov eax, r10d	       430	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x4001dec	            0xf7e2	                                 mul edx	       430	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x4001dee	          0xc1ea03	                              shr edx, 3	       430	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x4001df1	          0x4189d0	                            mov r8d, edx	       430	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x4001df4	        0x488d470c	                    lea rax, [rdi + 0xc]	       433	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x4001df8	          0x83f903	                              cmp ecx, 3	       435	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	FOR_1
0x4001dfb	            0x7e25	                           jle 0x4001e22	       435	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	FOR_1
0x4001dfd	    0x41b900000000	                              mov r9d, 0	       435	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	FOR_1
0x4001e03	      0xbf03000000	                              mov edi, 3	       435	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	FOR_1
0x4001e08	           0xfb710	                   movzx edx, word [rax]	       435	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	FOR_1
0x4001e0b	      0x410faf5108	                imul edx, dword [r9 + 8]	       435	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	FOR_1
0x4001e10	          0x4101d0	                            add r8d, edx	       435	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	FOR_1
0x4001e13	        0x4883c002	                              add rax, 2	       435	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	FOR_1
0x4001e17	          0x83c703	                              add edi, 3	       435	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	FOR_1
0x4001e1a	        0x4983c10c	                             add r9, 0xc	       435	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	FOR_1
0x4001e1e	            0x39f9	                            cmp ecx, edi	       435	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	FOR_1
0x4001e20	            0x7fe6	                            jg 0x4001e08	       435	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	FOR_1
0x4001e22	    0x4181f8999999	                     cmp r8d, 0x19999999	       438	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	IF_3
0x4001e29	            0x7739	                            ja 0x4001e64	       438	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	IF_3
0x4001e2b	      0xb9cdcccccc	                     mov ecx, 0xcccccccd	       431	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x4001e30	          0x4489d0	                           mov eax, r10d	       431	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x4001e33	            0xf7e1	                                 mul ecx	       431	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x4001e35	            0x89d0	                            mov eax, edx	       431	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x4001e37	          0xc1e803	                              shr eax, 3	       431	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x4001e3a	          0x8d0480	                  lea eax, [rax + rax*4]	       431	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x4001e3d	             0x1c0	                            add eax, eax	       431	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x4001e3f	          0x4129c2	                           sub r10d, eax	       431	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x4001e42	          0x4489d0	                           mov eax, r10d	       431	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x4001e45	    0x4181f8999999	                     cmp r8d, 0x19999999	       438	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	IF_3
0x4001e4c	            0x7506	                           jne 0x4001e54	       438	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	IF_3
0x4001e4e	        0x4183fa05	                             cmp r10d, 5	       438	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	IF_3
0x4001e52	            0x7710	                            ja 0x4001e64	       438	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	IF_3
0x4001e54	    0x428d14c50000	                         lea edx, [r8*8]	       439	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	CALL_3
0x4001e5c	        0x428d1442	                   lea edx, [rdx + r8*2]	       439	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	CALL_3
0x4001e60	             0x1d0	                            add eax, edx	       439	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	CALL_3
0x4001e62	            0xeb12	                           jmp 0x4001e76	       439	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	CALL_3
0x4001e64	          0x4889f7	                            mov rdi, rsi	       439	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	CALL_3
0x4001e67	      0xbe80000000	                           mov esi, 0x80	       441	decNumber.c	FUNCTION_68	FUNCTION_4	CALL_4
0x4001e6c	      0xe800000000	                          call 0x4001e71	       441	decNumber.c	FUNCTION_68	FUNCTION_4	CALL_4
0x4001e71	      0xb800000000	                              mov eax, 0	       442	decNumber.c	FUNCTION_68	FUNCTION_4
0x4001e76	        0x4883c408	                              add rsp, 8	       443	decNumber.c	FUNCTION_68	FUNCTION_4
0x4001e7a	              0xc3	                                     ret	       443	decNumber.c	FUNCTION_68	FUNCTION_4
decCompareOp	SWITCH,0:functions,0:ELSE,20:DO,1:FOR,0:IF,39:CALL,25:WHILE,0	261
0x4002fb7	            0x4157	                                push r15	      6000	decNumber.c	FUNCTION_2
0x4002fb9	            0x4156	                                push r14	      6000	decNumber.c	FUNCTION_2
0x4002fbb	            0x4155	                                push r13	      6000	decNumber.c	FUNCTION_2
0x4002fbd	            0x4154	                                push r12	      6000	decNumber.c	FUNCTION_2
0x4002fbf	              0x55	                                push rbp	      6000	decNumber.c	FUNCTION_2
0x4002fc0	              0x53	                                push rbx	      6000	decNumber.c	FUNCTION_2
0x4002fc1	        0x4883ec28	                           sub rsp, 0x28	      6000	decNumber.c	FUNCTION_2
0x4002fc5	          0x4889fd	                            mov rbp, rdi	      6000	decNumber.c	FUNCTION_2
0x4002fc8	          0x4989f4	                            mov r12, rsi	      6000	decNumber.c	FUNCTION_2
0x4002fcb	          0x4989d5	                            mov r13, rdx	      6000	decNumber.c	FUNCTION_2
0x4002fce	          0x4989cf	                            mov r15, rcx	      6000	decNumber.c	FUNCTION_2
0x4002fd1	          0x4489c3	                            mov ebx, r8d	      6000	decNumber.c	FUNCTION_2
0x4002fd4	          0x4d89ce	                             mov r14, r9	      6000	decNumber.c	FUNCTION_2
0x4002fd7	      0x448844240f	               mov byte [rsp + 0xf], r8b	      6000	decNumber.c	FUNCTION_2
0x4002fdc	    0x64488b042528	                mov rax, qword fs:[0x28]	      6000	decNumber.c	FUNCTION_2
0x4002fe5	      0x4889442418	             mov qword [rsp + 0x18], rax	      6000	decNumber.c	FUNCTION_2
0x4002fea	            0x31c0	                            xor eax, eax	      6000	decNumber.c	FUNCTION_2
0x4002fec	        0x4180f804	                              cmp r8b, 4	      6031	decNumber.c	FUNCTION_2	DO_1	IF_7
0x4002ff0	            0x7534	                           jne 0x4003026	      6031	decNumber.c	FUNCTION_2	DO_1	IF_7
0x4002ff2	         0xfb65608	               movzx edx, byte [rsi + 8]	      6032	decNumber.c	FUNCTION_2	DO_1	IF_7	IF_8	CALL_5
0x4002ff6	      0x410fb64d08	               movzx ecx, byte [r13 + 8]	      6032	decNumber.c	FUNCTION_2	DO_1	IF_7	IF_8	CALL_5
0x4002ffb	            0x84d2	                             test dl, dl	      6032	decNumber.c	FUNCTION_2	DO_1	IF_7	IF_8	CALL_5
0x4002ffd	            0x790d	                           jns 0x400300c	      6032	decNumber.c	FUNCTION_2	DO_1	IF_7	IF_8	CALL_5
0x4002fff	      0xb8ffffffff	                     mov eax, 0xffffffff	      6033	decNumber.c	FUNCTION_2	DO_1	IF_7	IF_8
0x4003004	            0x84c9	                             test cl, cl	      6032	decNumber.c	FUNCTION_2	DO_1	IF_7	IF_8	CALL_5
0x4003006	     0xf8980010000	                           jns 0x400318c	      6032	decNumber.c	FUNCTION_2	DO_1	IF_7	IF_8	CALL_5
0x400300c	            0x84d2	                             test dl, dl	      6036	decNumber.c	FUNCTION_2	DO_1	IF_7	IF_9	CALL_7
0x400300e	     0xf88b3020000	                            js 0x40032c7	      6036	decNumber.c	FUNCTION_2	DO_1	IF_7	IF_9	CALL_7
0x4003014	      0xb801000000	                              mov eax, 1	      6037	decNumber.c	FUNCTION_2	DO_1	IF_7	IF_9
0x4003019	            0x84c9	                             test cl, cl	      6036	decNumber.c	FUNCTION_2	DO_1	IF_7	IF_9	CALL_7
0x400301b	     0xf886b010000	                            js 0x400318c	      6036	decNumber.c	FUNCTION_2	DO_1	IF_7	IF_9	CALL_7
0x4003021	      0xe9a1020000	                           jmp 0x40032c7	      6036	decNumber.c	FUNCTION_2	DO_1	IF_7	IF_9	CALL_7
0x4003026	         0xfb64608	               movzx eax, byte [rsi + 8]	      6044	decNumber.c	FUNCTION_2	DO_1
0x400302a	         0xfb64a08	               movzx ecx, byte [rdx + 8]	      6044	decNumber.c	FUNCTION_2	DO_1
0x400302e	            0x89c2	                            mov edx, eax	      6044	decNumber.c	FUNCTION_2	DO_1
0x4003030	             0x9ca	                             or edx, ecx	      6044	decNumber.c	FUNCTION_2	DO_1
0x4003032	          0xf6c230	                           test dl, 0x30	      6045	decNumber.c	FUNCTION_2	DO_1	IF_10
0x4003035	     0xf8408010000	                            je 0x4003143	      6045	decNumber.c	FUNCTION_2	DO_1	IF_10
0x400303b	        0x4180f801	                              cmp r8b, 1	      6046	decNumber.c	FUNCTION_2	DO_1	IF_10	IF_11
0x400303f	     0xf84e5000000	                            je 0x400312a	      6046	decNumber.c	FUNCTION_2	DO_1	IF_10	IF_11
0x4003045	        0x4180f806	                              cmp r8b, 6	      6047	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_1	IF_12
0x4003049	     0xf85b6000000	                           jne 0x4003105	      6047	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_1	IF_12
0x400304f	    0x418109800000	               or dword [r9], 0x40000080	      6048	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_1	IF_12
0x4003056	      0xe9cf000000	                           jmp 0x400312a	      6048	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_1	IF_12
0x400305b	          0xf6c230	                           test dl, 0x30	      6052	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_8
0x400305e	     0xf84d7020000	                            je 0x400333b	      6052	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_8
0x4003064	          0xf6c130	                           test cl, 0x30	      6053	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_9
0x4003067	     0xf84d5020000	                            je 0x4003342	      6053	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_9
0x400306d	          0xf6c210	                           test dl, 0x10	      6055	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_11
0x4003070	            0x7409	                            je 0x400307b	      6055	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_11
0x4003072	          0xf6c120	                           test cl, 0x20	      6055	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_11
0x4003075	     0xf85ce020000	                           jne 0x4003349	      6055	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_11
0x400307b	          0xf6c220	                           test dl, 0x20	      6056	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_13
0x400307e	            0x7409	                            je 0x4003089	      6056	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_13
0x4003080	          0xf6c110	                           test cl, 0x10	      6056	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_13
0x4003083	     0xf85c7020000	                           jne 0x4003350	      6056	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_13
0x4003089	        0x418b4500	                    mov eax, dword [r13]	      6060	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_16
0x400308d	          0x83f831	                           cmp eax, 0x31	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x4003090	            0x7f0b	                            jg 0x400309d	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x4003092	            0x4898	                                    cdqe	      6060	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_16
0x4003094	     0xfb688000000	                   movzx ecx, byte [rax]	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x400309b	            0xeb15	                           jmp 0x40030b2	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x400309d	          0x8d7002	                      lea esi, [rax + 2]	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x40030a0	      0xba56555555	                     mov edx, 0x55555556	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x40030a5	            0x89f0	                            mov eax, esi	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x40030a7	            0xf7ea	                                imul edx	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x40030a9	            0x89f0	                            mov eax, esi	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x40030ab	          0xc1f81f	                           sar eax, 0x1f	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x40030ae	            0x89d1	                            mov ecx, edx	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x40030b0	            0x29c1	                            sub ecx, eax	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x40030b2	        0x4d8d4d0a	                     lea r9, [r13 + 0xa]	      6060	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_16
0x40030b6	        0x418b0424	                    mov eax, dword [r12]	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x40030ba	          0x83f831	                           cmp eax, 0x31	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x40030bd	            0x7f0b	                            jg 0x40030ca	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x40030bf	            0x4898	                                    cdqe	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x40030c1	     0xfb6b0000000	                   movzx esi, byte [rax]	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x40030c8	            0xeb15	                           jmp 0x40030df	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x40030ca	          0x8d7802	                      lea edi, [rax + 2]	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x40030cd	      0xbe56555555	                     mov esi, 0x55555556	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x40030d2	            0x89f8	                            mov eax, edi	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x40030d4	            0xf7ee	                                imul esi	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x40030d6	            0x89f8	                            mov eax, edi	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x40030d8	          0xc1f81f	                           sar eax, 0x1f	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x40030db	            0x89d6	                            mov esi, edx	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x40030dd	            0x29c6	                            sub esi, eax	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x40030df	      0x498d7c240a	                    lea rdi, [r12 + 0xa]	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x40030e4	    0x41b800000000	                              mov r8d, 0	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x40030ea	          0x4c89ca	                             mov rdx, r9	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x40030ed	      0xe85ee1ffff	                 call sym.decUnitCompare	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x40030f2	    0x41807c240800	                   cmp byte [r12 + 8], 0	      6063	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_17
0x40030f8	     0xf89da010000	                           jns 0x40032d8	      6063	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_17
0x40030fe	            0xf7d8	                                 neg eax	      6063	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_17
0x4003100	      0xe9d3010000	                           jmp 0x40032d8	      6063	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_17
0x4003105	          0xf6c210	                           test dl, 0x10	      6067	decNumber.c	FUNCTION_2	DO_1	IF_10	IF_19
0x4003108	            0x7520	                           jne 0x400312a	      6067	decNumber.c	FUNCTION_2	DO_1	IF_10	IF_19
0x400310a	            0xa830	                           test al, 0x30	      6070	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	CALL_19
0x400310c	            0x7405	                            je 0x4003113	      6070	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	CALL_19
0x400310e	          0xf6c130	                           test cl, 0x30	      6070	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	CALL_19
0x4003111	            0x7517	                           jne 0x400312a	      6070	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	CALL_19
0x4003113	          0x83e020	                           and eax, 0x20	      6073	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	IF_21
0x4003116	            0x3c01	                               cmp al, 1	      6074	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	ELSE_9
0x4003118	            0x19c0	                            sbb eax, eax	      6074	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	ELSE_9
0x400311a	          0x83e002	                              and eax, 2	      6074	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	ELSE_9
0x400311d	          0x83e801	                              sub eax, 1	      6074	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	ELSE_9
0x4003120	      0xc644240f02	                 mov byte [rsp + 0xf], 2	      6089	decNumber.c	FUNCTION_2	ELSE_11	IF_24
0x4003125	      0xe9d7000000	                           jmp 0x4003201	      6089	decNumber.c	FUNCTION_2	ELSE_11	IF_24
0x400312a	          0x4d89f0	                             mov r8, r14	      6079	decNumber.c	FUNCTION_2	DO_1	IF_10	CALL_20
0x400312d	          0x4c89f9	                            mov rcx, r15	      6079	decNumber.c	FUNCTION_2	DO_1	IF_10	CALL_20
0x4003130	          0x4c89ea	                            mov rdx, r13	      6079	decNumber.c	FUNCTION_2	DO_1	IF_10	CALL_20
0x4003133	          0x4c89e6	                            mov rsi, r12	      6079	decNumber.c	FUNCTION_2	DO_1	IF_10	CALL_20
0x4003136	          0x4889ef	                            mov rdi, rbp	      6079	decNumber.c	FUNCTION_2	DO_1	IF_10	CALL_20
0x4003139	      0xe8aefcffff	                        call sym.decNaNs	      6079	decNumber.c	FUNCTION_2	DO_1	IF_10	CALL_20
0x400313e	      0xe968010000	                           jmp 0x40032ab	      6079	decNumber.c	FUNCTION_2	DO_1	IF_10	CALL_20
0x4003143	        0x418d40f9	                       lea eax, [r8 - 7]	      6083	decNumber.c	FUNCTION_2	DO_1	CALL_21
0x4003147	            0x3c01	                               cmp al, 1	      6083	decNumber.c	FUNCTION_2	DO_1	CALL_21
0x4003149	            0x7712	                            ja 0x400315d	      6083	decNumber.c	FUNCTION_2	DO_1	CALL_21
0x400314b	      0xba01000000	                              mov edx, 1	      6083	decNumber.c	FUNCTION_2	DO_1	CALL_21
0x4003150	          0x4c89ee	                            mov rsi, r13	      6083	decNumber.c	FUNCTION_2	DO_1	CALL_21
0x4003153	          0x4c89e7	                            mov rdi, r12	      6083	decNumber.c	FUNCTION_2	DO_1	CALL_21
0x4003156	      0xe827e3ffff	                     call sym.decCompare	      6083	decNumber.c	FUNCTION_2	DO_1	CALL_21
0x400315b	            0xeb10	                           jmp 0x400316d	      6083	decNumber.c	FUNCTION_2	DO_1	CALL_21
0x400315d	      0xba00000000	                              mov edx, 0	      6084	decNumber.c	FUNCTION_2	DO_1	CALL_22
0x4003162	          0x4c89ee	                            mov rsi, r13	      6084	decNumber.c	FUNCTION_2	DO_1	CALL_22
0x4003165	          0x4c89e7	                            mov rdi, r12	      6084	decNumber.c	FUNCTION_2	DO_1	CALL_22
0x4003168	      0xe815e3ffff	                     call sym.decCompare	      6084	decNumber.c	FUNCTION_2	DO_1	CALL_22
0x400316d	      0x3d00000080	                     cmp eax, 0x80000000	      6087	decNumber.c	FUNCTION_2	IF_23
0x4003172	            0x7509	                           jne 0x400317d	      6087	decNumber.c	FUNCTION_2	IF_23
0x4003174	        0x41830e10	                    or dword [r14], 0x10	      6087	decNumber.c	FUNCTION_2	IF_23
0x4003178	      0xe92e010000	                           jmp 0x40032ab	      6087	decNumber.c	FUNCTION_2	IF_23
0x400317d	            0x89da	                            mov edx, ebx	      6089	decNumber.c	FUNCTION_2	ELSE_11	IF_24
0x400317f	          0x83e2fd	                     and edx, 0xfffffffd	      6089	decNumber.c	FUNCTION_2	ELSE_11	IF_24
0x4003182	          0x80fa04	                               cmp dl, 4	      6089	decNumber.c	FUNCTION_2	ELSE_11	IF_24
0x4003185	            0x7405	                            je 0x400318c	      6089	decNumber.c	FUNCTION_2	ELSE_11	IF_24
0x4003187	          0x80fb01	                               cmp bl, 1	      6089	decNumber.c	FUNCTION_2	ELSE_11	IF_24
0x400318a	            0x756c	                           jne 0x40031f8	      6089	decNumber.c	FUNCTION_2	ELSE_11	IF_24
0x400318c	          0x80fb04	                               cmp bl, 4	      6089	decNumber.c	FUNCTION_2	ELSE_11	IF_24
0x400318f	           0xf94c2	                                 sete dl	      6089	decNumber.c	FUNCTION_2	ELSE_11	IF_24
0x4003192	            0x85c0	                           test eax, eax	      6090	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25
0x4003194	            0x752b	                           jne 0x40031c1	      6090	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25
0x4003196	            0x84d2	                             test dl, dl	      6090	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25
0x4003198	            0x7427	                            je 0x40031c1	      6090	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25
0x400319a	      0x418b4c2404	                mov ecx, dword [r12 + 4]	      6093	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25	IF_26
0x400319f	        0x418b5504	                mov edx, dword [r13 + 4]	      6093	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25	IF_26
0x40031a3	            0x39d1	                            cmp ecx, edx	      6093	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25	IF_26
0x40031a5	            0x741a	                            je 0x40031c1	      6093	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25	IF_26
0x40031a7	            0x39d1	                            cmp ecx, edx	      6095	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25	IF_26	ELSE_12
0x40031a9	           0xf9dc0	                                setge al	      6095	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25	IF_26	ELSE_12
0x40031ac	           0xfb6c0	                           movzx eax, al	      6095	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25	IF_26	ELSE_12
0x40031af	        0x8d4400ff	                lea eax, [rax + rax - 1]	      6095	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25	IF_26	ELSE_12
0x40031b3	    0x41807c240800	                   cmp byte [r12 + 8], 0	      6096	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25	IF_26	CALL_23
0x40031b9	     0xf892e010000	                           jns 0x40032ed	      6096	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25	IF_26	CALL_23
0x40031bf	            0xf7d8	                                 neg eax	      6096	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25	IF_26	CALL_23
0x40031c1	        0xc6450800	                   mov byte [rbp + 8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x40031c5	    0xc74504000000	                  mov dword [rbp + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x40031cc	    0xc74500010000	                      mov dword [rbp], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x40031d3	    0x66c7450a0000	                 mov word [rbp + 0xa], 0	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x40031d9	            0x85c0	                           test eax, eax	      6100	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_29
0x40031db	     0xf84ca000000	                            je 0x40032ab	      6100	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_29
0x40031e1	    0x66c7450a0100	                 mov word [rbp + 0xa], 1	      6101	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_29
0x40031e7	            0x85c0	                           test eax, eax	      6102	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_29	IF_30
0x40031e9	     0xf89bc000000	                           jns 0x40032ab	      6102	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_29	IF_30
0x40031ef	        0xc6450880	                mov byte [rbp + 8], 0x80	      6102	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_29	IF_30
0x40031f3	      0xe9b3000000	                           jmp 0x40032ab	      6102	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_29	IF_30
0x40031f8	          0x80fb05	                               cmp bl, 5	      6105	decNumber.c	FUNCTION_2	ELSE_11	IF_31
0x40031fb	     0xf84aa000000	                            je 0x40032ab	      6105	decNumber.c	FUNCTION_2	ELSE_11	IF_31
0x4003201	    0xc74424140000	               mov dword [rsp + 0x14], 0	      6107	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x4003209	            0x85c0	                           test eax, eax	      6110	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32
0x400320b	            0x754e	                           jne 0x400325b	      6110	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32
0x400320d	    0x410fb6442408	               movzx eax, byte [r12 + 8]	      6112	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32
0x4003213	          0x83e080	                     and eax, 0xffffff80	      6112	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32
0x4003216	      0x410fb65508	               movzx edx, byte [r13 + 8]	      6121	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_15	IF_34
0x400321b	          0x83e280	                     and edx, 0xffffff80	      6121	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_15	IF_34
0x400321e	            0x38d0	                              cmp al, dl	      6121	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_15	IF_34
0x4003220	            0x740d	                            je 0x400322f	      6121	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_15	IF_34
0x4003222	            0x84c0	                             test al, al	      6122	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_15	IF_34	IF_35
0x4003224	     0xf85f4000000	                           jne 0x400331e	      6122	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_15	IF_34	IF_35
0x400322a	      0xe9d5000000	                           jmp 0x4003304	      6122	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_15	IF_34	IF_35
0x400322f	            0x84c0	                             test al, al	      6125	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_16	ELSE_17	IF_36
0x4003231	            0x7414	                            je 0x4003247	      6125	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_16	ELSE_17	IF_36
0x4003233	        0x418b4504	                mov eax, dword [r13 + 4]	      6126	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_16	ELSE_17	IF_36	IF_37
0x4003237	      0x4139442404	                cmp dword [r12 + 4], eax	      6126	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_16	ELSE_17	IF_36	IF_37
0x400323c	     0xf8cc2000000	                            jl 0x4003304	      6126	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_16	ELSE_17	IF_36	IF_37
0x4003242	      0xe9d7000000	                           jmp 0x400331e	      6126	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_16	ELSE_17	IF_36	IF_37
0x4003247	        0x418b4504	                mov eax, dword [r13 + 4]	      6131	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_19	IF_38
0x400324b	      0x4139442404	                cmp dword [r12 + 4], eax	      6131	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_19	IF_38
0x4003250	     0xf8fae000000	                            jg 0x4003304	      6131	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_19	IF_38
0x4003256	      0xe9c3000000	                           jmp 0x400331e	      6131	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_19	IF_38
0x400325b	       0xfb674240f	            movzx esi, byte [rsp + 0xf] 	      6137	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_39
0x4003260	        0x4080fe03	                              cmp sil, 3	      6137	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_39
0x4003264	            0x7414	                            je 0x400327a	      6137	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_39
0x4003266	        0x4080fe08	                              cmp sil, 8	      6137	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_39
0x400326a	            0x740e	                            je 0x400327a	      6137	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_39
0x400326c	            0xeb0e	                           jmp 0x400327c	      6137	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_39
0x400326e	      0xb801000000	                              mov eax, 1	      6137	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_39
0x4003273	            0xeb05	                           jmp 0x400327a	      6137	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_39
0x4003275	      0xb8ffffffff	                     mov eax, 0xffffffff	      6137	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_39
0x400327a	            0xf7d8	                                 neg eax	      6137	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_39
0x400327c	            0x85c0	                           test eax, eax	      6138	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x400327e	        0x4d0f4ee5	                         cmovle r12, r13	      6138	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x4003282	          0x4d89f0	                             mov r8, r14	      6140	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	CALL_25
0x4003285	      0x488d4c2414	                   lea rcx, [rsp + 0x14]	      6140	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	CALL_25
0x400328a	          0x4c89fa	                            mov rdx, r15	      6140	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	CALL_25
0x400328d	          0x4c89e6	                            mov rsi, r12	      6140	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	CALL_25
0x4003290	          0x4889ef	                            mov rdi, rbp	      6140	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	CALL_25
0x4003293	      0xe849d8ffff	                     call sym.decCopyFit	      6140	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	CALL_25
0x4003298	          0x4c89f1	                            mov rcx, r14	      6141	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x400329b	      0x488d542414	                   lea rdx, [rsp + 0x14]	      6141	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x40032a0	          0x4c89fe	                            mov rsi, r15	      6141	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x40032a3	          0x4889ef	                            mov rdi, rbp	      6141	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x40032a6	      0xe857e8ffff	                    call sym.decFinalize	      6141	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x40032ab	          0x4889e8	                            mov rax, rbp	      6149	decNumber.c	FUNCTION_2
0x40032ae	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      6149	decNumber.c	FUNCTION_2
0x40032b3	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      6149	decNumber.c	FUNCTION_2
0x40032bc	     0xf84ae000000	                            je 0x4003370	      6149	decNumber.c	FUNCTION_2
0x40032c2	      0xe9a4000000	                           jmp 0x400336b	      6149	decNumber.c	FUNCTION_2
0x40032c7	            0x89d0	                            mov eax, edx	      6045	decNumber.c	FUNCTION_2	DO_1	IF_10
0x40032c9	             0x9c8	                             or eax, ecx	      6045	decNumber.c	FUNCTION_2	DO_1	IF_10
0x40032cb	            0xa830	                           test al, 0x30	      6045	decNumber.c	FUNCTION_2	DO_1	IF_10
0x40032cd	     0xf8588fdffff	                           jne 0x400305b	      6045	decNumber.c	FUNCTION_2	DO_1	IF_10
0x40032d3	      0xe985feffff	                           jmp 0x400315d	      6045	decNumber.c	FUNCTION_2	DO_1	IF_10
0x40032d8	      0x3d00000080	                     cmp eax, 0x80000000	      6087	decNumber.c	FUNCTION_2	IF_23
0x40032dd	     0xf8491feffff	                            je 0x4003174	      6087	decNumber.c	FUNCTION_2	IF_23
0x40032e3	      0xba01000000	                              mov edx, 1	      6089	decNumber.c	FUNCTION_2	ELSE_11	IF_24
0x40032e8	      0xe9a5feffff	                           jmp 0x4003192	      6089	decNumber.c	FUNCTION_2	ELSE_11	IF_24
0x40032ed	        0xc6450800	                   mov byte [rbp + 8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x40032f1	    0xc74504000000	                  mov dword [rbp + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x40032f8	    0xc74500010000	                      mov dword [rbp], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x40032ff	      0xe9ddfeffff	                           jmp 0x40031e1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4003304	       0xfb644240f	            movzx eax, byte [rsp + 0xf] 	      6137	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_39
0x4003309	            0x3c03	                               cmp al, 3	      6137	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_39
0x400330b	     0xf845dffffff	                            je 0x400326e	      6137	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_39
0x4003311	            0x3c08	                               cmp al, 8	      6137	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_39
0x4003313	     0xf8569ffffff	                           jne 0x4003282	      6137	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_39
0x4003319	      0xe950ffffff	                           jmp 0x400326e	      6137	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_39
0x400331e	       0xfb644240f	            movzx eax, byte [rsp + 0xf] 	      6137	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_39
0x4003323	            0x3c03	                               cmp al, 3	      6137	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_39
0x4003325	     0xf844affffff	                            je 0x4003275	      6137	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_39
0x400332b	            0x3c08	                               cmp al, 8	      6137	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_39
0x400332d	     0xf8442ffffff	                            je 0x4003275	      6137	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_39
0x4003333	          0x4d89ec	                            mov r12, r13	      6138	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x4003336	      0xe947ffffff	                           jmp 0x4003282	      6138	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x400333b	      0xb8ffffffff	                     mov eax, 0xffffffff	      6052	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_8
0x4003340	            0xeb13	                           jmp 0x4003355	      6052	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_8
0x4003342	      0xb801000000	                              mov eax, 1	      6053	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_9
0x4003347	            0xeb0c	                           jmp 0x4003355	      6053	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_9
0x4003349	      0xb8ffffffff	                     mov eax, 0xffffffff	      6055	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_11
0x400334e	            0xeb05	                           jmp 0x4003355	      6055	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_11
0x4003350	      0xb801000000	                              mov eax, 1	      6056	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_13
0x4003355	      0xba01000000	                              mov edx, 1	      6089	decNumber.c	FUNCTION_2	ELSE_11	IF_24
0x400335a	    0x41807c240800	                   cmp byte [r12 + 8], 0	      6063	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_17
0x4003360	     0xf892cfeffff	                           jns 0x4003192	      6063	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_17
0x4003366	      0xe993fdffff	                           jmp 0x40030fe	      6063	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_17
0x400336b	      0xe800000000	                          call 0x4003370	      6149	decNumber.c	FUNCTION_2
0x4003370	        0x4883c428	                           add rsp, 0x28	      6149	decNumber.c	FUNCTION_2
0x4003374	              0x5b	                                 pop rbx	      6149	decNumber.c	FUNCTION_2
0x4003375	              0x5d	                                 pop rbp	      6149	decNumber.c	FUNCTION_2
0x4003376	            0x415c	                                 pop r12	      6149	decNumber.c	FUNCTION_2
0x4003378	            0x415d	                                 pop r13	      6149	decNumber.c	FUNCTION_2
0x400337a	            0x415e	                                 pop r14	      6149	decNumber.c	FUNCTION_2
0x400337c	            0x415f	                                 pop r15	      6149	decNumber.c	FUNCTION_2
0x400337e	              0xc3	                                     ret	      6149	decNumber.c	FUNCTION_2
decNumberTrim	SWITCH,0:functions,0:ELSE,0:DO,0:FOR,0:IF,1:CALL,3:WHILE,0	22
0x4008ee1	              0x53	                                push rbx	      3554	decNumber.c	FUNCTION_68	FUNCTION_60
0x4008ee2	        0x4883ec40	                           sub rsp, 0x40	      3554	decNumber.c	FUNCTION_68	FUNCTION_60
0x4008ee6	          0x4889fb	                            mov rbx, rdi	      3554	decNumber.c	FUNCTION_68	FUNCTION_60
0x4008ee9	    0x64488b042528	                mov rax, qword fs:[0x28]	      3554	decNumber.c	FUNCTION_68	FUNCTION_60
0x4008ef2	      0x4889442438	             mov qword [rsp + 0x38], rax	      3554	decNumber.c	FUNCTION_68	FUNCTION_60
0x4008ef7	            0x31c0	                            xor eax, eax	      3554	decNumber.c	FUNCTION_68	FUNCTION_60
0x4008ef9	      0xbe00000000	                              mov esi, 0	      3560	decNumber.c	FUNCTION_68	FUNCTION_60	CALL_2
0x4008efe	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      3560	decNumber.c	FUNCTION_68	FUNCTION_60	CALL_2
0x4008f03	      0xe800000000	                          call 0x4008f08	      3560	decNumber.c	FUNCTION_68	FUNCTION_60	CALL_2
0x4008f08	      0x4c8d44240c	                     lea r8, [rsp + 0xc]	      3561	decNumber.c	FUNCTION_68	FUNCTION_60	CALL_3
0x4008f0d	      0xb901000000	                              mov ecx, 1	      3561	decNumber.c	FUNCTION_68	FUNCTION_60	CALL_3
0x4008f12	      0xba00000000	                              mov edx, 0	      3561	decNumber.c	FUNCTION_68	FUNCTION_60	CALL_3
0x4008f17	      0x488d742410	                   lea rsi, [rsp + 0x10]	      3561	decNumber.c	FUNCTION_68	FUNCTION_60	CALL_3
0x4008f1c	          0x4889df	                            mov rdi, rbx	      3561	decNumber.c	FUNCTION_68	FUNCTION_60	CALL_3
0x4008f1f	      0xe8e877ffff	                        call sym.decTrim	      3561	decNumber.c	FUNCTION_68	FUNCTION_60	CALL_3
0x4008f24	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	      3562	decNumber.c	FUNCTION_68	FUNCTION_60
0x4008f29	    0x644833142528	                xor rdx, qword fs:[0x28]	      3562	decNumber.c	FUNCTION_68	FUNCTION_60
0x4008f32	            0x7405	                            je 0x4008f39	      3562	decNumber.c	FUNCTION_68	FUNCTION_60
0x4008f34	      0xe800000000	                          call 0x4008f39	      3562	decNumber.c	FUNCTION_68	FUNCTION_60
0x4008f39	        0x4883c440	                           add rsp, 0x40	      3562	decNumber.c	FUNCTION_68	FUNCTION_60
0x4008f3d	              0x5b	                                 pop rbx	      3562	decNumber.c	FUNCTION_68	FUNCTION_60
0x4008f3e	              0xc3	                                     ret	      3562	decNumber.c	FUNCTION_68	FUNCTION_60
decNumberScaleB	SWITCH,0:functions,0:ELSE,3:DO,0:FOR,0:IF,6:CALL,11:WHILE,0	81
0x40043e2	            0x4155	                                push r13	      2612	decNumber.c	FUNCTION_68	FUNCTION_43
0x40043e4	            0x4154	                                push r12	      2612	decNumber.c	FUNCTION_68	FUNCTION_43
0x40043e6	              0x55	                                push rbp	      2612	decNumber.c	FUNCTION_68	FUNCTION_43
0x40043e7	              0x53	                                push rbx	      2612	decNumber.c	FUNCTION_68	FUNCTION_43
0x40043e8	        0x4883ec18	                           sub rsp, 0x18	      2612	decNumber.c	FUNCTION_68	FUNCTION_43
0x40043ec	          0x4889fb	                            mov rbx, rdi	      2612	decNumber.c	FUNCTION_68	FUNCTION_43
0x40043ef	          0x4889f5	                            mov rbp, rsi	      2612	decNumber.c	FUNCTION_68	FUNCTION_43
0x40043f2	          0x4989cc	                            mov r12, rcx	      2612	decNumber.c	FUNCTION_68	FUNCTION_43
0x40043f5	    0x64488b042528	                mov rax, qword fs:[0x28]	      2612	decNumber.c	FUNCTION_68	FUNCTION_43
0x40043fe	      0x4889442408	                mov qword [rsp + 8], rax	      2612	decNumber.c	FUNCTION_68	FUNCTION_43
0x4004403	            0x31c0	                            xor eax, eax	      2612	decNumber.c	FUNCTION_68	FUNCTION_43
0x4004405	    0xc70424000000	                      mov dword [rsp], 0	      2614	decNumber.c	FUNCTION_68	FUNCTION_43
0x400440c	        0xf6460830	               test byte [rsi + 8], 0x30	      2622	decNumber.c	FUNCTION_68	FUNCTION_43	IF_2	CALL_3
0x4004410	            0x7508	                           jne 0x400441a	      2622	decNumber.c	FUNCTION_68	FUNCTION_43	IF_2	CALL_3
0x4004412	         0xfb64208	               movzx eax, byte [rdx + 8]	      2622	decNumber.c	FUNCTION_68	FUNCTION_43	IF_2	CALL_3
0x4004416	            0xa830	                           test al, 0x30	      2622	decNumber.c	FUNCTION_68	FUNCTION_43	IF_2	CALL_3
0x4004418	            0x7416	                            je 0x4004430	      2622	decNumber.c	FUNCTION_68	FUNCTION_43	IF_2	CALL_3
0x400441a	          0x4989e0	                             mov r8, rsp	      2623	decNumber.c	FUNCTION_68	FUNCTION_43	CALL_4
0x400441d	          0x4c89e1	                            mov rcx, r12	      2623	decNumber.c	FUNCTION_68	FUNCTION_43	CALL_4
0x4004420	          0x4889ee	                            mov rsi, rbp	      2623	decNumber.c	FUNCTION_68	FUNCTION_43	CALL_4
0x4004423	          0x4889df	                            mov rdi, rbx	      2623	decNumber.c	FUNCTION_68	FUNCTION_43	CALL_4
0x4004426	      0xe8c1e9ffff	                        call sym.decNaNs	      2623	decNumber.c	FUNCTION_68	FUNCTION_43	CALL_4
0x400442b	      0xe98a000000	                           jmp 0x40044ba	      2623	decNumber.c	FUNCTION_68	FUNCTION_43	CALL_4
0x4004430	            0xa840	                           test al, 0x40	      2625	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_1	IF_3	CALL_5
0x4004432	            0x7506	                           jne 0x400443a	      2625	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_1	IF_3	CALL_5
0x4004434	        0x837a0400	                  cmp dword [rdx + 4], 0	      2625	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_1	IF_3	CALL_5
0x4004438	            0x740c	                            je 0x4004446	      2625	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_1	IF_3	CALL_5
0x400443a	    0xc70424800000	                   mov dword [rsp], 0x80	      2626	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_1	IF_3
0x4004441	      0xe99b000000	                           jmp 0x40044e1	      2626	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_1	IF_3
0x4004446	          0x4889d7	                            mov rdi, rdx	      2629	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	CALL_6
0x4004449	      0xe85ec7ffff	                      call sym.decGetInt	      2629	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	CALL_6
0x400444e	          0x4189c5	                           mov r13d, eax	      2629	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	CALL_6
0x4004451	    0x8d80feffff7f	             lea eax, [rax + 0x7ffffffe]	      2631	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4
0x4004457	          0x83f801	                              cmp eax, 1	      2631	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4
0x400445a	            0x7625	                           jbe 0x4004481	      2631	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4
0x400445c	    0x4181fd000000	                    cmp r13d, 0x80000000	      2631	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4
0x4004463	            0x741c	                            je 0x4004481	      2631	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4
0x4004465	          0x4489e8	                           mov eax, r13d	      2632	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4	CALL_7
0x4004468	          0xc1f81f	                           sar eax, 0x1f	      2632	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4	CALL_7
0x400446b	            0x89c2	                            mov edx, eax	      2632	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4	CALL_7
0x400446d	          0x4431ea	                           xor edx, r13d	      2632	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4	CALL_7
0x4004470	            0x29c2	                            sub edx, eax	      2632	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4	CALL_7
0x4004472	      0x418b442404	                mov eax, dword [r12 + 4]	      2632	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4	CALL_7
0x4004477	        0x41030424	                    add eax, dword [r12]	      2632	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4	CALL_7
0x400447b	             0x1c0	                            add eax, eax	      2632	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4	CALL_7
0x400447d	            0x39c2	                            cmp edx, eax	      2632	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4	CALL_7
0x400447f	            0x7e09	                           jle 0x400448a	      2632	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4	CALL_7
0x4004481	    0xc70424800000	                   mov dword [rsp], 0x80	      2633	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4
0x4004488	            0xeb57	                           jmp 0x40044e1	      2633	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4
0x400448a	          0x4889ee	                            mov rsi, rbp	      2635	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	ELSE_3	CALL_8
0x400448d	          0x4889df	                            mov rdi, rbx	      2635	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	ELSE_3	CALL_8
0x4004490	      0xe800000000	                          call 0x4004495	      2635	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	ELSE_3	CALL_8
0x4004495	        0xf6430840	               test byte [rbx + 8], 0x40	      2636	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	ELSE_3	IF_5	CALL_9
0x4004499	            0x751f	                           jne 0x40044ba	      2636	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	ELSE_3	IF_5	CALL_9
0x400449b	        0x44016b04	               add dword [rbx + 4], r13d	      2637	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	ELSE_3	IF_5
0x400449f	    0xc74424040000	                  mov dword [rsp + 4], 0	      2638	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	ELSE_3	IF_5
0x40044a7	          0x4889e1	                            mov rcx, rsp	      2639	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	ELSE_3	IF_5	CALL_10
0x40044aa	      0x488d542404	                      lea rdx, [rsp + 4]	      2639	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	ELSE_3	IF_5	CALL_10
0x40044af	          0x4c89e6	                            mov rsi, r12	      2639	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	ELSE_3	IF_5	CALL_10
0x40044b2	          0x4889df	                            mov rdi, rbx	      2639	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	ELSE_3	IF_5	CALL_10
0x40044b5	      0xe848d6ffff	                    call sym.decFinalize	      2639	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	ELSE_3	IF_5	CALL_10
0x40044ba	          0x8b3424	                    mov esi, dword [rsp]	      2643	decNumber.c	FUNCTION_68	FUNCTION_43	CALL_11
0x40044bd	            0x85f6	                           test esi, esi	      2643	decNumber.c	FUNCTION_68	FUNCTION_43	CALL_11
0x40044bf	            0x740b	                            je 0x40044cc	      2643	decNumber.c	FUNCTION_68	FUNCTION_43	CALL_11
0x40044c1	          0x4c89e2	                            mov rdx, r12	      2643	decNumber.c	FUNCTION_68	FUNCTION_43	CALL_11
0x40044c4	          0x4889df	                            mov rdi, rbx	      2643	decNumber.c	FUNCTION_68	FUNCTION_43	CALL_11
0x40044c7	      0xe850d1ffff	                      call sym.decStatus	      2643	decNumber.c	FUNCTION_68	FUNCTION_43	CALL_11
0x40044cc	          0x4889d8	                            mov rax, rbx	      2645	decNumber.c	FUNCTION_68	FUNCTION_43
0x40044cf	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      2645	decNumber.c	FUNCTION_68	FUNCTION_43
0x40044d4	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2645	decNumber.c	FUNCTION_68	FUNCTION_43
0x40044dd	            0x740c	                            je 0x40044eb	      2645	decNumber.c	FUNCTION_68	FUNCTION_43
0x40044df	            0xeb05	                           jmp 0x40044e6	      2645	decNumber.c	FUNCTION_68	FUNCTION_43
0x40044e1	          0x8b3424	                    mov esi, dword [rsp]	      2643	decNumber.c	FUNCTION_68	FUNCTION_43	CALL_11
0x40044e4	            0xebdb	                           jmp 0x40044c1	      2643	decNumber.c	FUNCTION_68	FUNCTION_43	CALL_11
0x40044e6	      0xe800000000	                          call 0x40044eb	      2645	decNumber.c	FUNCTION_68	FUNCTION_43
0x40044eb	        0x4883c418	                           add rsp, 0x18	      2645	decNumber.c	FUNCTION_68	FUNCTION_43
0x40044ef	              0x5b	                                 pop rbx	      2645	decNumber.c	FUNCTION_68	FUNCTION_43
0x40044f0	              0x5d	                                 pop rbp	      2645	decNumber.c	FUNCTION_68	FUNCTION_43
0x40044f1	            0x415c	                                 pop r12	      2645	decNumber.c	FUNCTION_68	FUNCTION_43
0x40044f3	            0x415d	                                 pop r13	      2645	decNumber.c	FUNCTION_68	FUNCTION_43
0x40044f5	              0xc3	                                     ret	      2645	decNumber.c	FUNCTION_68	FUNCTION_43
decNumberToEngString	SWITCH,0:functions,0:ELSE,0:DO,0:FOR,0:IF,0:CALL,1:WHILE,0	7
0x4001e8e	              0x53	                                push rbx	       464	decNumber.c	FUNCTION_68	FUNCTION_6
0x4001e8f	          0x4889f3	                            mov rbx, rsi	       464	decNumber.c	FUNCTION_68	FUNCTION_6
0x4001e92	      0xba01000000	                              mov edx, 1	       465	decNumber.c	FUNCTION_68	FUNCTION_6	CALL_1
0x4001e97	      0xe82fefffff	                    call sym.decToString	       465	decNumber.c	FUNCTION_68	FUNCTION_6	CALL_1
0x4001e9c	          0x4889d8	                            mov rax, rbx	       467	decNumber.c	FUNCTION_68	FUNCTION_6
0x4001e9f	              0x5b	                                 pop rbx	       467	decNumber.c	FUNCTION_68	FUNCTION_6
0x4001ea0	              0xc3	                                     ret	       467	decNumber.c	FUNCTION_68	FUNCTION_6
decShiftToMost	SWITCH,0:functions,0:ELSE,1:DO,0:FOR,3:IF,4:CALL,4:WHILE,0	136
0x4000362	          0x4189f3	                           mov r11d, esi	      6684	decNumber.c	FUNCTION_8	IF_1
0x4000365	            0x85d2	                           test edx, edx	      6684	decNumber.c	FUNCTION_8	IF_1
0x4000367	            0x741e	                            je 0x4000387	      6684	decNumber.c	FUNCTION_8	IF_1
0x4000369	            0x89d1	                            mov ecx, edx	      6684	decNumber.c	FUNCTION_8	IF_1
0x400036b	        0x448d1c32	                   lea r11d, [rdx + rsi]	      6685	decNumber.c	FUNCTION_8	IF_2
0x400036f	        0x4183fb03	                             cmp r11d, 3	      6685	decNumber.c	FUNCTION_8	IF_2
0x4000373	            0x7f16	                            jg 0x400038b	      6685	decNumber.c	FUNCTION_8	IF_2
0x4000375	          0x4863ca	                         movsxd rcx, edx	      6686	decNumber.c	FUNCTION_8	IF_2
0x4000378	           0xfb707	                   movzx eax, word [rdi]	      6686	decNumber.c	FUNCTION_8	IF_2
0x400037b	    0x660faf048d00	                   imul ax, word [rcx*4]	      6686	decNumber.c	FUNCTION_8	IF_2
0x4000384	          0x668907	                      mov word [rdi], ax	      6686	decNumber.c	FUNCTION_8	IF_2
0x4000387	          0x4489d8	                           mov eax, r11d	      6720	decNumber.c	FUNCTION_8
0x400038a	              0xc3	                                     ret	      6720	decNumber.c	FUNCTION_8
0x400038b	            0x4157	                                push r15	      6679	decNumber.c	FUNCTION_8
0x400038d	            0x4156	                                push r14	      6679	decNumber.c	FUNCTION_8
0x400038f	            0x4155	                                push r13	      6679	decNumber.c	FUNCTION_8
0x4000391	            0x4154	                                push r12	      6679	decNumber.c	FUNCTION_8
0x4000393	              0x55	                                push rbp	      6679	decNumber.c	FUNCTION_8
0x4000394	              0x53	                                push rbx	      6679	decNumber.c	FUNCTION_8
0x4000395	          0x83fe31	                           cmp esi, 0x31	      6691	decNumber.c	FUNCTION_8	CALL_1
0x4000398	            0x7f11	                            jg 0x40003ab	      6691	decNumber.c	FUNCTION_8	CALL_1
0x400039a	          0x4863f6	                         movsxd rsi, esi	      6691	decNumber.c	FUNCTION_8	CALL_1
0x400039d	     0xfb686000000	                   movzx eax, byte [rsi]	      6691	decNumber.c	FUNCTION_8	CALL_1
0x40003a4	      0x4c8d6400fe	                lea r12, [rax + rax - 2]	      6691	decNumber.c	FUNCTION_8	CALL_1
0x40003a9	            0xeb19	                           jmp 0x40003c4	      6691	decNumber.c	FUNCTION_8	CALL_1
0x40003ab	          0x83c602	                              add esi, 2	      6691	decNumber.c	FUNCTION_8	CALL_1
0x40003ae	      0xba56555555	                     mov edx, 0x55555556	      6691	decNumber.c	FUNCTION_8	CALL_1
0x40003b3	            0x89f0	                            mov eax, esi	      6691	decNumber.c	FUNCTION_8	CALL_1
0x40003b5	            0xf7ea	                                imul edx	      6691	decNumber.c	FUNCTION_8	CALL_1
0x40003b7	          0xc1fe1f	                           sar esi, 0x1f	      6691	decNumber.c	FUNCTION_8	CALL_1
0x40003ba	            0x29f2	                            sub edx, esi	      6691	decNumber.c	FUNCTION_8	CALL_1
0x40003bc	          0x4863d2	                         movsxd rdx, edx	      6691	decNumber.c	FUNCTION_8	CALL_1
0x40003bf	      0x4c8d6412fe	                lea r12, [rdx + rdx - 2]	      6691	decNumber.c	FUNCTION_8	CALL_1
0x40003c4	        0x4e8d0427	                     lea r8, [rdi + r12]	      6691	decNumber.c	FUNCTION_8	CALL_1
0x40003c8	          0x83f931	                           cmp ecx, 0x31	      6692	decNumber.c	FUNCTION_8	CALL_2
0x40003cb	            0x7f1a	                            jg 0x40003e7	      6692	decNumber.c	FUNCTION_8	CALL_2
0x40003cd	          0x4863c1	                         movsxd rax, ecx	      6692	decNumber.c	FUNCTION_8	CALL_2
0x40003d0	     0xfb680000000	                   movzx eax, byte [rax]	      6692	decNumber.c	FUNCTION_8	CALL_2
0x40003d7	           0xfb6d0	                           movzx edx, al	      6692	decNumber.c	FUNCTION_8	CALL_2
0x40003da	        0x498d3450	                   lea rsi, [r8 + rdx*2]	      6692	decNumber.c	FUNCTION_8	CALL_2
0x40003de	           0xfb6c0	                           movzx eax, al	      6693	decNumber.c	FUNCTION_8	CALL_3
0x40003e1	        0x8d4440fd	              lea eax, [rax + rax*2 - 3]	      6693	decNumber.c	FUNCTION_8	CALL_3
0x40003e5	            0xeb1c	                           jmp 0x4000403	      6693	decNumber.c	FUNCTION_8	CALL_3
0x40003e7	          0x8d7102	                      lea esi, [rcx + 2]	      6692	decNumber.c	FUNCTION_8	CALL_2
0x40003ea	      0xba56555555	                     mov edx, 0x55555556	      6692	decNumber.c	FUNCTION_8	CALL_2
0x40003ef	            0x89f0	                            mov eax, esi	      6692	decNumber.c	FUNCTION_8	CALL_2
0x40003f1	            0xf7ea	                                imul edx	      6692	decNumber.c	FUNCTION_8	CALL_2
0x40003f3	          0xc1fe1f	                           sar esi, 0x1f	      6692	decNumber.c	FUNCTION_8	CALL_2
0x40003f6	            0x29f2	                            sub edx, esi	      6692	decNumber.c	FUNCTION_8	CALL_2
0x40003f8	          0x4863c2	                         movsxd rax, edx	      6692	decNumber.c	FUNCTION_8	CALL_2
0x40003fb	        0x498d3440	                   lea rsi, [r8 + rax*2]	      6692	decNumber.c	FUNCTION_8	CALL_2
0x40003ff	        0x8d4452fd	              lea eax, [rdx + rdx*2 - 3]	      6693	decNumber.c	FUNCTION_8	CALL_3
0x4000403	            0x29c1	                            sub ecx, eax	      6693	decNumber.c	FUNCTION_8	CALL_3
0x4000405	          0x4189c9	                            mov r9d, ecx	      6693	decNumber.c	FUNCTION_8	CALL_3
0x4000408	      0xb903000000	                              mov ecx, 3	      6693	decNumber.c	FUNCTION_8	CALL_3
0x400040d	          0x4429c9	                            sub ecx, r9d	      6694	decNumber.c	FUNCTION_8	IF_3
0x4000410	            0x7549	                           jne 0x400045b	      6694	decNumber.c	FUNCTION_8	IF_3
0x4000412	          0x4c39c7	                             cmp rdi, r8	      6695	decNumber.c	FUNCTION_8	IF_3	FOR_1
0x4000415	            0x7728	                            ja 0x400043f	      6695	decNumber.c	FUNCTION_8	IF_3	FOR_1
0x4000417	          0x4c89c0	                             mov rax, r8	      6695	decNumber.c	FUNCTION_8	IF_3	FOR_1
0x400041a	          0x4889f2	                            mov rdx, rsi	      6695	decNumber.c	FUNCTION_8	IF_3	FOR_1
0x400041d	           0xfb708	                   movzx ecx, word [rax]	      6695	decNumber.c	FUNCTION_8	IF_3	FOR_1
0x4000420	          0x66890a	                      mov word [rdx], cx	      6695	decNumber.c	FUNCTION_8	IF_3	FOR_1
0x4000423	        0x4883e802	                              sub rax, 2	      6695	decNumber.c	FUNCTION_8	IF_3	FOR_1
0x4000427	        0x4883ea02	                              sub rdx, 2	      6695	decNumber.c	FUNCTION_8	IF_3	FOR_1
0x400042b	          0x4839c7	                            cmp rdi, rax	      6695	decNumber.c	FUNCTION_8	IF_3	FOR_1
0x400042e	            0x76ed	                           jbe 0x400041d	      6695	decNumber.c	FUNCTION_8	IF_3	FOR_1
0x4000430	        0x4983f4fe	             xor r12, 0xfffffffffffffffe	      6695	decNumber.c	FUNCTION_8	IF_3	FOR_1
0x4000434	          0x4c01e6	                            add rsi, r12	      6695	decNumber.c	FUNCTION_8	IF_3	FOR_1
0x4000437	    0x41b800000000	                              mov r8d, 0	      6690	decNumber.c	FUNCTION_8
0x400043d	            0xeb0e	                           jmp 0x400044d	      6690	decNumber.c	FUNCTION_8
0x400043f	    0x41b800000000	                              mov r8d, 0	      6690	decNumber.c	FUNCTION_8
0x4000445	            0xeb06	                           jmp 0x400044d	      6690	decNumber.c	FUNCTION_8
0x4000447	    0x41b800000000	                              mov r8d, 0	      6690	decNumber.c	FUNCTION_8
0x400044d	          0x4839f7	                            cmp rdi, rsi	      6715	decNumber.c	FUNCTION_8	FOR_3
0x4000450	     0xf86b1000000	                           jbe 0x4000507	      6715	decNumber.c	FUNCTION_8	FOR_3
0x4000456	      0xe9bf000000	                           jmp 0x400051a	      6715	decNumber.c	FUNCTION_8	FOR_3
0x400045b	        0x4183fb31	                          cmp r11d, 0x31	      6698	decNumber.c	FUNCTION_8	ELSE_1	CALL_4
0x400045f	            0x7f11	                            jg 0x4000472	      6698	decNumber.c	FUNCTION_8	ELSE_1	CALL_4
0x4000461	          0x4963c3	                        movsxd rax, r11d	      6698	decNumber.c	FUNCTION_8	ELSE_1	CALL_4
0x4000464	     0xfb680000000	                   movzx eax, byte [rax]	      6698	decNumber.c	FUNCTION_8	ELSE_1	CALL_4
0x400046b	      0x488d5c00fe	                lea rbx, [rax + rax - 2]	      6698	decNumber.c	FUNCTION_8	ELSE_1	CALL_4
0x4000470	            0xeb1d	                           jmp 0x400048f	      6698	decNumber.c	FUNCTION_8	ELSE_1	CALL_4
0x4000472	        0x458d5302	                     lea r10d, [r11 + 2]	      6698	decNumber.c	FUNCTION_8	ELSE_1	CALL_4
0x4000476	      0xba56555555	                     mov edx, 0x55555556	      6698	decNumber.c	FUNCTION_8	ELSE_1	CALL_4
0x400047b	          0x4489d0	                           mov eax, r10d	      6698	decNumber.c	FUNCTION_8	ELSE_1	CALL_4
0x400047e	            0xf7ea	                                imul edx	      6698	decNumber.c	FUNCTION_8	ELSE_1	CALL_4
0x4000480	        0x41c1fa1f	                          sar r10d, 0x1f	      6698	decNumber.c	FUNCTION_8	ELSE_1	CALL_4
0x4000484	          0x4429d2	                           sub edx, r10d	      6698	decNumber.c	FUNCTION_8	ELSE_1	CALL_4
0x4000487	          0x4863d2	                         movsxd rdx, edx	      6698	decNumber.c	FUNCTION_8	ELSE_1	CALL_4
0x400048a	      0x488d5c12fe	                lea rbx, [rdx + rdx - 2]	      6698	decNumber.c	FUNCTION_8	ELSE_1	CALL_4
0x400048f	          0x4801fb	                            add rbx, rdi	      6698	decNumber.c	FUNCTION_8	ELSE_1	CALL_4
0x4000492	          0x4c39c7	                             cmp rdi, r8	      6699	decNumber.c	FUNCTION_8	ELSE_1	FOR_2
0x4000495	            0x77b0	                            ja 0x4000447	      6699	decNumber.c	FUNCTION_8	ELSE_1	FOR_2
0x4000497	          0x4863c1	                         movsxd rax, ecx	      6702	decNumber.c	FUNCTION_8	ELSE_1	FOR_2
0x400049a	    0x448b34850000	                 mov r14d, dword [rax*4]	      6702	decNumber.c	FUNCTION_8	ELSE_1	FOR_2
0x40004a2	    0x448b2c850000	                 mov r13d, dword [rax*4]	      6703	decNumber.c	FUNCTION_8	ELSE_1	FOR_2
0x40004aa	          0x4d63c9	                          movsxd r9, r9d	      6710	decNumber.c	FUNCTION_8	ELSE_1	FOR_2
0x40004ad	    0x428b2c8d0000	                   mov ebp, dword [r9*4]	      6710	decNumber.c	FUNCTION_8	ELSE_1	FOR_2
0x40004b5	          0x4c89c0	                             mov rax, r8	      6710	decNumber.c	FUNCTION_8	ELSE_1	FOR_2
0x40004b8	          0x4989f2	                            mov r10, rsi	      6710	decNumber.c	FUNCTION_8	ELSE_1	FOR_2
0x40004bb	    0x41b800000000	                              mov r8d, 0	      6710	decNumber.c	FUNCTION_8	ELSE_1	FOR_2
0x40004c1	        0x440fb708	                   movzx r9d, word [rax]	      6702	decNumber.c	FUNCTION_8	ELSE_1	FOR_2
0x40004c5	          0x4489ca	                            mov edx, r9d	      6702	decNumber.c	FUNCTION_8	ELSE_1	FOR_2
0x40004c8	            0xd3ea	                             shr edx, cl	      6702	decNumber.c	FUNCTION_8	ELSE_1	FOR_2
0x40004ca	        0x410fafd6	                          imul edx, r14d	      6702	decNumber.c	FUNCTION_8	ELSE_1	FOR_2
0x40004ce	          0xc1ea11	                           shr edx, 0x11	      6702	decNumber.c	FUNCTION_8	ELSE_1	FOR_2
0x40004d1	          0x4189d7	                           mov r15d, edx	      6703	decNumber.c	FUNCTION_8	ELSE_1	FOR_2
0x40004d4	        0x450faffd	                         imul r15d, r13d	      6703	decNumber.c	FUNCTION_8	ELSE_1	FOR_2
0x40004d8	          0x4529f9	                           sub r9d, r15d	      6703	decNumber.c	FUNCTION_8	ELSE_1	FOR_2
0x40004db	          0x4c39d3	                            cmp rbx, r10	      6709	decNumber.c	FUNCTION_8	ELSE_1	FOR_2	IF_4
0x40004de	            0x7207	                            jb 0x40004e7	      6709	decNumber.c	FUNCTION_8	ELSE_1	FOR_2	IF_4
0x40004e0	          0x4401c2	                            add edx, r8d	      6709	decNumber.c	FUNCTION_8	ELSE_1	FOR_2	IF_4
0x40004e3	        0x66418912	                      mov word [r10], dx	      6709	decNumber.c	FUNCTION_8	ELSE_1	FOR_2	IF_4
0x40004e7	        0x440fafcd	                           imul r9d, ebp	      6710	decNumber.c	FUNCTION_8	ELSE_1	FOR_2
0x40004eb	          0x4589c8	                            mov r8d, r9d	      6710	decNumber.c	FUNCTION_8	ELSE_1	FOR_2
0x40004ee	        0x4883e802	                              sub rax, 2	      6699	decNumber.c	FUNCTION_8	ELSE_1	FOR_2
0x40004f2	        0x4983ea02	                              sub r10, 2	      6699	decNumber.c	FUNCTION_8	ELSE_1	FOR_2
0x40004f6	          0x4839c7	                            cmp rdi, rax	      6699	decNumber.c	FUNCTION_8	ELSE_1	FOR_2
0x40004f9	            0x76c6	                           jbe 0x40004c1	      6699	decNumber.c	FUNCTION_8	ELSE_1	FOR_2
0x40004fb	        0x4983f4fe	             xor r12, 0xfffffffffffffffe	      6699	decNumber.c	FUNCTION_8	ELSE_1	FOR_2
0x40004ff	          0x4c01e6	                            add rsi, r12	      6699	decNumber.c	FUNCTION_8	ELSE_1	FOR_2
0x4000502	      0xe946ffffff	                           jmp 0x400044d	      6699	decNumber.c	FUNCTION_8	ELSE_1	FOR_2
0x4000507	        0x66448906	                     mov word [rsi], r8w	      6716	decNumber.c	FUNCTION_8	FOR_3
0x400050b	        0x4883ee02	                              sub rsi, 2	      6715	decNumber.c	FUNCTION_8	FOR_3
0x400050f	    0x41b800000000	                              mov r8d, 0	      6717	decNumber.c	FUNCTION_8	FOR_3
0x4000515	          0x4839f7	                            cmp rdi, rsi	      6715	decNumber.c	FUNCTION_8	FOR_3
0x4000518	            0x76ed	                           jbe 0x4000507	      6715	decNumber.c	FUNCTION_8	FOR_3
0x400051a	          0x4489d8	                           mov eax, r11d	      6720	decNumber.c	FUNCTION_8
0x400051d	              0x5b	                                 pop rbx	      6720	decNumber.c	FUNCTION_8
0x400051e	              0x5d	                                 pop rbp	      6720	decNumber.c	FUNCTION_8
0x400051f	            0x415c	                                 pop r12	      6720	decNumber.c	FUNCTION_8
0x4000521	            0x415d	                                 pop r13	      6720	decNumber.c	FUNCTION_8
0x4000523	            0x415e	                                 pop r14	      6720	decNumber.c	FUNCTION_8
0x4000525	            0x415f	                                 pop r15	      6720	decNumber.c	FUNCTION_8
0x4000527	              0xc3	                                     ret	      6720	decNumber.c	FUNCTION_8
decNumberNextToward	SWITCH,0:functions,0:ELSE,4:DO,0:FOR,0:IF,9:CALL,12:WHILE,0	104
0x4008d2a	            0x4155	                                push r13	      1738	decNumber.c	FUNCTION_68	FUNCTION_30
0x4008d2c	            0x4154	                                push r12	      1738	decNumber.c	FUNCTION_68	FUNCTION_30
0x4008d2e	              0x55	                                push rbp	      1738	decNumber.c	FUNCTION_68	FUNCTION_30
0x4008d2f	              0x53	                                push rbx	      1738	decNumber.c	FUNCTION_68	FUNCTION_30
0x4008d30	        0x4883ec58	                           sub rsp, 0x58	      1738	decNumber.c	FUNCTION_68	FUNCTION_30
0x4008d34	          0x4889fd	                            mov rbp, rdi	      1738	decNumber.c	FUNCTION_68	FUNCTION_30
0x4008d37	          0x4989f4	                            mov r12, rsi	      1738	decNumber.c	FUNCTION_68	FUNCTION_30
0x4008d3a	          0x4989d5	                            mov r13, rdx	      1738	decNumber.c	FUNCTION_68	FUNCTION_30
0x4008d3d	          0x4889cb	                            mov rbx, rcx	      1738	decNumber.c	FUNCTION_68	FUNCTION_30
0x4008d40	    0x64488b042528	                mov rax, qword fs:[0x28]	      1738	decNumber.c	FUNCTION_68	FUNCTION_30
0x4008d49	      0x4889442448	             mov qword [rsp + 0x48], rax	      1738	decNumber.c	FUNCTION_68	FUNCTION_30
0x4008d4e	            0x31c0	                            xor eax, eax	      1738	decNumber.c	FUNCTION_68	FUNCTION_30
0x4008d50	          0x488b01	                    mov rax, qword [rcx]	      1740	decNumber.c	FUNCTION_68	FUNCTION_30
0x4008d53	      0x4889442410	             mov qword [rsp + 0x10], rax	      1740	decNumber.c	FUNCTION_68	FUNCTION_30
0x4008d58	        0x488b4108	                mov rax, qword [rcx + 8]	      1740	decNumber.c	FUNCTION_68	FUNCTION_30
0x4008d5c	      0x4889442418	             mov qword [rsp + 0x18], rax	      1740	decNumber.c	FUNCTION_68	FUNCTION_30
0x4008d61	        0x488b4110	            mov rax, qword [rcx + 0x10] 	      1740	decNumber.c	FUNCTION_68	FUNCTION_30
0x4008d65	      0x4889442420	             mov qword [rsp + 0x20], rax	      1740	decNumber.c	FUNCTION_68	FUNCTION_30
0x4008d6a	          0x8b4118	            mov eax, dword [rcx + 0x18] 	      1740	decNumber.c	FUNCTION_68	FUNCTION_30
0x4008d6d	        0x89442428	             mov dword [rsp + 0x28], eax	      1740	decNumber.c	FUNCTION_68	FUNCTION_30
0x4008d71	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      1742	decNumber.c	FUNCTION_68	FUNCTION_30
0x4008d79	        0xf6460830	               test byte [rsi + 8], 0x30	      1747	decNumber.c	FUNCTION_68	FUNCTION_30	IF_2	CALL_3
0x4008d7d	            0x7506	                           jne 0x4008d85	      1747	decNumber.c	FUNCTION_68	FUNCTION_30	IF_2	CALL_3
0x4008d7f	        0xf6420830	               test byte [rdx + 8], 0x30	      1747	decNumber.c	FUNCTION_68	FUNCTION_30	IF_2	CALL_3
0x4008d83	            0x741b	                            je 0x4008da0	      1747	decNumber.c	FUNCTION_68	FUNCTION_30	IF_2	CALL_3
0x4008d85	      0x4c8d44240c	                     lea r8, [rsp + 0xc]	      1748	decNumber.c	FUNCTION_68	FUNCTION_30	IF_2	CALL_4
0x4008d8a	          0x4889d9	                            mov rcx, rbx	      1748	decNumber.c	FUNCTION_68	FUNCTION_30	IF_2	CALL_4
0x4008d8d	          0x4c89ea	                            mov rdx, r13	      1748	decNumber.c	FUNCTION_68	FUNCTION_30	IF_2	CALL_4
0x4008d90	          0x4c89e6	                            mov rsi, r12	      1748	decNumber.c	FUNCTION_68	FUNCTION_30	IF_2	CALL_4
0x4008d93	          0x4889ef	                            mov rdi, rbp	      1748	decNumber.c	FUNCTION_68	FUNCTION_30	IF_2	CALL_4
0x4008d96	      0xe851a0ffff	                        call sym.decNaNs	      1748	decNumber.c	FUNCTION_68	FUNCTION_30	IF_2	CALL_4
0x4008d9b	      0xe9e1000000	                           jmp 0x4008e81	      1748	decNumber.c	FUNCTION_68	FUNCTION_30	IF_2	CALL_4
0x4008da0	      0xba00000000	                              mov edx, 0	      1751	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	CALL_5
0x4008da5	          0x4c89ee	                            mov rsi, r13	      1751	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	CALL_5
0x4008da8	          0x4c89e7	                            mov rdi, r12	      1751	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	CALL_5
0x4008dab	      0xe8d286ffff	                     call sym.decCompare	      1751	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	CALL_5
0x4008db0	      0x3d00000080	                     cmp eax, 0x80000000	      1752	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	IF_3
0x4008db5	            0x750a	                           jne 0x4008dc1	      1752	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	IF_3
0x4008db7	      0x834c240c10	              or dword [rsp + 0xc], 0x10	      1752	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	IF_3
0x4008dbc	      0xe9c0000000	                           jmp 0x4008e81	      1752	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	IF_3
0x4008dc1	            0x85c0	                           test eax, eax	      1754	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	CALL_6
0x4008dc3	            0x7513	                           jne 0x4008dd8	      1754	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	CALL_6
0x4008dc5	          0x4c89ea	                            mov rdx, r13	      1754	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	CALL_6
0x4008dc8	          0x4c89e6	                            mov rsi, r12	      1754	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	CALL_6
0x4008dcb	          0x4889ef	                            mov rdi, rbp	      1754	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	CALL_6
0x4008dce	      0xe800000000	                          call 0x4008dd3	      1754	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	CALL_6
0x4008dd3	      0xe9a9000000	                           jmp 0x4008e81	      1754	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	CALL_6
0x4008dd8	            0x85c0	                           test eax, eax	      1757	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	IF_5
0x4008dda	            0x7931	                           jns 0x4008e0d	      1757	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	IF_5
0x4008ddc	    0x410fb6442408	               movzx eax, byte [r12 + 8]	      1759	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	IF_5	IF_6
0x4008de2	          0x83e0c0	                     and eax, 0xffffffc0	      1759	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	IF_5	IF_6
0x4008de5	            0x3cc0	                            cmp al, 0xc0	      1759	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	IF_5	IF_6
0x4008de7	            0x7514	                           jne 0x4008dfd	      1759	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	IF_5	IF_6
0x4008de9	          0x4889de	                            mov rsi, rbx	      1760	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	IF_5	IF_6	CALL_7
0x4008dec	          0x4889ef	                            mov rdi, rbp	      1760	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	IF_5	IF_6	CALL_7
0x4008def	      0xe8137dffff	                 call sym.decSetMaxValue	      1760	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	IF_5	IF_6	CALL_7
0x4008df4	        0xc6450880	                mov byte [rbp + 8], 0x80	      1761	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	IF_5	IF_6
0x4008df8	      0xe997000000	                           jmp 0x4008e94	      1762	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	IF_5	IF_6
0x4008dfd	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      1764	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	IF_5
0x4008e05	    0x41b800000000	                              mov r8d, 0	      1765	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	IF_5
0x4008e0b	            0xeb28	                           jmp 0x4008e35	      1765	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	IF_5
0x4008e0d	    0x410fb6442408	               movzx eax, byte [r12 + 8]	      1769	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_7
0x4008e13	          0x83e0c0	                     and eax, 0xffffffc0	      1769	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_7
0x4008e16	            0x3c40	                            cmp al, 0x40	      1769	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_7
0x4008e18	            0x750d	                           jne 0x4008e27	      1769	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_7
0x4008e1a	          0x4889de	                            mov rsi, rbx	      1770	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_7	CALL_8
0x4008e1d	          0x4889ef	                            mov rdi, rbp	      1770	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_7	CALL_8
0x4008e20	      0xe8e27cffff	                 call sym.decSetMaxValue	      1770	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_7	CALL_8
0x4008e25	            0xeb6d	                           jmp 0x4008e94	      1771	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_7
0x4008e27	    0xc744241c0600	               mov dword [rsp + 0x1c], 6	      1773	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	ELSE_4
0x4008e2f	    0x41b880ffffff	                     mov r8d, 0xffffff80	      1774	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	ELSE_4
0x4008e35	      0xc644243800	                mov byte [rsp + 0x38], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x4008e3a	    0xc74424300100	               mov dword [rsp + 0x30], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4008e42	    0x66c744243a01	                mov word [rsp + 0x3a], 1	      1777	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3
0x4008e49	    0xc74424340036	     mov dword [rsp + 0x34], 0xc4653600 	      1778	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3
0x4008e51	      0x4c8d4c240c	                     lea r9, [rsp + 0xc]	      1779	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	CALL_10
0x4008e56	    0x4181e0800000	                           and r8d, 0x80	      1779	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	CALL_10
0x4008e5d	      0x488d4c2410	                   lea rcx, [rsp + 0x10]	      1779	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	CALL_10
0x4008e62	      0x488d542430	                   lea rdx, [rsp + 0x30]	      1779	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	CALL_10
0x4008e67	          0x4c89e6	                            mov rsi, r12	      1779	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	CALL_10
0x4008e6a	          0x4889ef	                            mov rdi, rbp	      1779	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	CALL_10
0x4008e6d	      0xe81ab8ffff	                       call sym.decAddOp	      1779	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	CALL_10
0x4008e72	          0x4889de	                            mov rsi, rbx	      1782	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	CALL_11
0x4008e75	          0x4889ef	                            mov rdi, rbp	      1782	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	CALL_11
0x4008e78	      0xe800000000	                          call 0x4008e7d	      1782	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	CALL_11
0x4008e7d	            0x85c0	                           test eax, eax	      1782	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	CALL_11
0x4008e7f	            0x7513	                           jne 0x4008e94	      1782	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	CALL_11
0x4008e81	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      1786	decNumber.c	FUNCTION_68	FUNCTION_30	CALL_12
0x4008e85	            0x85f6	                           test esi, esi	      1786	decNumber.c	FUNCTION_68	FUNCTION_30	CALL_12
0x4008e87	            0x740b	                            je 0x4008e94	      1786	decNumber.c	FUNCTION_68	FUNCTION_30	CALL_12
0x4008e89	          0x4889da	                            mov rdx, rbx	      1786	decNumber.c	FUNCTION_68	FUNCTION_30	CALL_12
0x4008e8c	          0x4889ef	                            mov rdi, rbp	      1786	decNumber.c	FUNCTION_68	FUNCTION_30	CALL_12
0x4008e8f	      0xe88887ffff	                      call sym.decStatus	      1786	decNumber.c	FUNCTION_68	FUNCTION_30	CALL_12
0x4008e94	          0x4889e8	                            mov rax, rbp	      1788	decNumber.c	FUNCTION_68	FUNCTION_30
0x4008e97	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	      1788	decNumber.c	FUNCTION_68	FUNCTION_30
0x4008e9c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1788	decNumber.c	FUNCTION_68	FUNCTION_30
0x4008ea5	            0x7405	                            je 0x4008eac	      1788	decNumber.c	FUNCTION_68	FUNCTION_30
0x4008ea7	      0xe800000000	                          call 0x4008eac	      1788	decNumber.c	FUNCTION_68	FUNCTION_30
0x4008eac	        0x4883c458	                           add rsp, 0x58	      1788	decNumber.c	FUNCTION_68	FUNCTION_30
0x4008eb0	              0x5b	                                 pop rbx	      1788	decNumber.c	FUNCTION_68	FUNCTION_30
0x4008eb1	              0x5d	                                 pop rbp	      1788	decNumber.c	FUNCTION_68	FUNCTION_30
0x4008eb2	            0x415c	                                 pop r12	      1788	decNumber.c	FUNCTION_68	FUNCTION_30
0x4008eb4	            0x415d	                                 pop r13	      1788	decNumber.c	FUNCTION_68	FUNCTION_30
0x4008eb6	              0xc3	                                     ret	      1788	decNumber.c	FUNCTION_68	FUNCTION_30
decNumberPower	SWITCH,0:functions,0:ELSE,9:DO,1:FOR,1:IF,53:CALL,54:WHILE,0	442
0x400784f	            0x4157	                                push r15	      1943	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007851	            0x4156	                                push r14	      1943	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007853	            0x4155	                                push r13	      1943	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007855	            0x4154	                                push r12	      1943	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007857	              0x55	                                push rbp	      1943	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007858	              0x53	                                push rbx	      1943	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007859	    0x4881ecd80000	                           sub rsp, 0xd8	      1943	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007860	          0x4889fb	                            mov rbx, rdi	      1943	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007863	          0x4989f5	                            mov r13, rsi	      1943	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007866	          0x4989d6	                            mov r14, rdx	      1943	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007869	          0x4889cd	                            mov rbp, rcx	      1943	decNumber.c	FUNCTION_68	FUNCTION_34
0x400786c	    0x64488b042528	                mov rax, qword fs:[0x28]	      1943	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007875	    0x48898424c800	             mov qword [rsp + 0xc8], rax	      1943	decNumber.c	FUNCTION_68	FUNCTION_34
0x400787d	            0x31c0	                            xor eax, eax	      1943	decNumber.c	FUNCTION_68	FUNCTION_34
0x400787f	            0x8b01	                    mov eax, dword [rcx]	      1950	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007881	        0x89442410	             mov dword [rsp + 0x10], eax	      1950	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007885	    0xc74424280000	               mov dword [rsp + 0x28], 0	      1961	decNumber.c	FUNCTION_68	FUNCTION_34
0x400788d	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	      1962	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007895	      0x440fb67e08	              movzx r15d, byte [rsi + 8]	      1994	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7
0x400789a	         0xfb64208	               movzx eax, byte [rdx + 8]	      1994	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7
0x400789e	        0x88442408	                  mov byte [rsp + 8], al	      1994	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7
0x40078a2	          0x4409f8	                            or eax, r15d	      1994	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7
0x40078a5	            0xa870	                           test al, 0x70	      1994	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7
0x40078a7	     0xf8455010000	                            je 0x4007a02	      1994	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7
0x40078ad	            0xa830	                           test al, 0x30	      1995	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_8	CALL_7
0x40078af	            0x7421	                            je 0x40078d2	      1995	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_8	CALL_7
0x40078b1	      0x4c8d44242c	                    lea r8, [rsp + 0x2c]	      1996	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_8	CALL_8
0x40078b6	      0xe831b5ffff	                        call sym.decNaNs	      1996	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_8	CALL_8
0x40078bb	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x40078c4	    0x48c744240800	                  mov qword [rsp + 8], 0	      1948	decNumber.c	FUNCTION_68	FUNCTION_34
0x40078cd	      0xe9de060000	                           jmp 0x4007fb0	      1997	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_8
0x40078d2	      0xf644240840	               test byte [rsp + 8], 0x40	      1998	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	CALL_9
0x40078d7	     0xf8425010000	                            je 0x4007a02	      1998	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	CALL_9
0x40078dd	          0x4584ff	                         test r15b, r15b	      2000	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	IF_10	CALL_10
0x40078e0	            0x7931	                           jns 0x4007913	      2000	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	IF_10	CALL_10
0x40078e2	      0x66837e0a00	                 cmp word [rsi + 0xa], 0	      2001	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	IF_10	CALL_11
0x40078e7	            0x750b	                           jne 0x40078f4	      2001	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	IF_10	CALL_11
0x40078e9	          0x833e01	                      cmp dword [rsi], 1	      2001	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	IF_10	CALL_11
0x40078ec	            0x7506	                           jne 0x40078f4	      2001	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	IF_10	CALL_11
0x40078ee	        0x41f6c770	                         test r15b, 0x70	      2001	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	IF_10	CALL_11
0x40078f2	            0x741f	                            je 0x4007913	      2001	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	IF_10	CALL_11
0x40078f4	    0xc744242c8000	           mov dword [rsp + 0x2c], 0x80 	      2002	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	IF_10
0x40078fc	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007905	    0x48c744240800	                  mov qword [rsp + 8], 0	      1948	decNumber.c	FUNCTION_68	FUNCTION_34
0x400790e	      0xe99d060000	                           jmp 0x4007fb0	      2002	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	IF_10
0x4007913	    0x440fb6642408	              movzx r12d, byte [rsp + 8]	      1999	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9
0x4007919	        0x4183e480	                    and r12d, 0xffffff80	      1999	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9
0x400791d	      0xc644245800	                mov byte [rsp + 0x58], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x4007922	    0xc74424540000	               mov dword [rsp + 0x54], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x400792a	    0xc74424500100	               mov dword [rsp + 0x50], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4007932	    0x66c744245a01	                mov word [rsp + 0x5a], 1	      2005	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1
0x4007939	          0x4889e9	                            mov rcx, rbp	      2006	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	CALL_13
0x400793c	      0x488d542450	                   lea rdx, [rsp + 0x50]	      2006	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	CALL_13
0x4007941	          0x4c89ee	                            mov rsi, r13	      2006	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	CALL_13
0x4007944	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      2006	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	CALL_13
0x4007949	      0xe800000000	                          call 0x400794e	      2006	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	CALL_13
0x400794e	        0xc6430800	                   mov byte [rbx + 8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x4007952	    0xc74304000000	                  mov dword [rbx + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4007959	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x400795f	    0x66c7430a0000	                 mov word [rbx + 0xa], 0	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4007965	      0x807c246800	                cmp byte [rsp + 0x68], 0	      2008	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	IF_11	CALL_15
0x400796a	            0x7924	                           jns 0x4007990	      2008	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	IF_11	CALL_15
0x400796c	          0x4584e4	                         test r12b, r12b	      2009	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	IF_11	IF_12
0x400796f	     0xf8415060000	                            je 0x4007f8a	      2009	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	IF_11	IF_12
0x4007975	        0xc6430840	                mov byte [rbx + 8], 0x40	      2009	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	IF_11	IF_12
0x4007979	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007982	    0x48c744240800	                  mov qword [rsp + 8], 0	      1948	decNumber.c	FUNCTION_68	FUNCTION_34
0x400798b	      0xe920060000	                           jmp 0x4007fb0	      1948	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007990	    0x66837c246a00	                cmp word [rsp + 0x6a], 0	      2011	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13
0x4007996	            0x7546	                           jne 0x40079de	      2011	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13
0x4007998	          0x8b4500	                    mov eax, dword [rbp]	      2013	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13
0x400799b	        0x448d60ff	                     lea r12d, [rax - 1]	      2013	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13
0x400799f	    0x66c7430a0100	                 mov word [rbx + 0xa], 1	      2014	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13
0x40079a5	        0x488d7b0a	                    lea rdi, [rbx + 0xa]	      2015	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13	CALL_16
0x40079a9	          0x4489e2	                           mov edx, r12d	      2015	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13	CALL_16
0x40079ac	      0xbe01000000	                              mov esi, 1	      2015	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13	CALL_16
0x40079b1	      0xe8ac89ffff	                 call sym.decShiftToMost	      2015	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13	CALL_16
0x40079b6	            0x8903	                    mov dword [rbx], eax	      2015	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13	CALL_16
0x40079b8	          0x41f7dc	                                neg r12d	      2016	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13
0x40079bb	        0x44896304	               mov dword [rbx + 4], r12d	      2016	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13
0x40079bf	    0x814c242c2008	            or dword [rsp + 0x2c], 0x820	      2017	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13
0x40079c7	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x40079d0	    0x48c744240800	                  mov qword [rsp + 8], 0	      1948	decNumber.c	FUNCTION_68	FUNCTION_34
0x40079d9	      0xe9d2050000	                           jmp 0x4007fb0	      1948	decNumber.c	FUNCTION_68	FUNCTION_34
0x40079de	          0x4584e4	                         test r12b, r12b	      2020	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_3	IF_14
0x40079e1	     0xf85b7050000	                           jne 0x4007f9e	      2020	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_3	IF_14
0x40079e7	        0xc6430840	                mov byte [rbx + 8], 0x40	      2020	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_3	IF_14
0x40079eb	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x40079f4	    0x48c744240800	                  mov qword [rsp + 8], 0	      1948	decNumber.c	FUNCTION_68	FUNCTION_34
0x40079fd	      0xe9ae050000	                           jmp 0x4007fb0	      1948	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007a02	          0x4c89f7	                            mov rdi, r14	      2028	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_17
0x4007a05	      0xe8a291ffff	                      call sym.decGetInt	      2028	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_17
0x4007a0a	          0x4189c4	                           mov r12d, eax	      2028	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_17
0x4007a0d	      0x3d00000080	                     cmp eax, 0x80000000	      2029	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_15
0x4007a12	     0xf84d7050000	                            je 0x4007fef	      2029	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_15
0x4007a18	    0x8d80feffff7f	             lea eax, [rax + 0x7ffffffe]	      1953	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007a1e	          0x83f801	                              cmp eax, 1	      1953	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007a21	       0xf97442419	                  seta byte [rsp + 0x19]	      1953	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007a26	          0x4489f8	                           mov eax, r15d	      2036	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_17	CALL_18
0x4007a29	          0xc0e807	                               shr al, 7	      2036	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_17	CALL_18
0x4007a2c	        0x41f6c401	                            test r12b, 1	      2037	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_17
0x4007a30	            0x740b	                            je 0x4007a3d	      2037	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_17
0x4007a32	            0x84c0	                             test al, al	      2037	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_17
0x4007a34	            0x7407	                            je 0x4007a3d	      2037	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_17
0x4007a36	      0xc644241a80	            mov byte [rsp + 0x1a], 0x80 	      2037	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_17
0x4007a3b	            0xeb05	                           jmp 0x4007a42	      2037	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_17
0x4007a3d	      0xc644241a00	                mov byte [rsp + 0x1a], 0	      1963	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007a42	      0xc644241b01	                mov byte [rsp + 0x1b], 1	      1963	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007a47	        0x41f6c740	                         test r15b, 0x40	      2040	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	CALL_19
0x4007a4b	     0xf8493000000	                            je 0x4007ae4	      2040	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	CALL_19
0x4007a51	        0xc6430800	                   mov byte [rbx + 8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x4007a55	    0xc74304000000	                  mov dword [rbx + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4007a5c	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4007a62	    0x66c7430a0000	                 mov word [rbx + 0xa], 0	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4007a68	          0x4585e4	                         test r12d, r12d	      2043	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	IF_19
0x4007a6b	            0x753c	                           jne 0x4007aa9	      2043	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	IF_19
0x4007a6d	    0x66c7430a0100	                 mov word [rbx + 0xa], 1	      2043	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	IF_19
0x4007a73	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007a7c	    0x48c744240800	                  mov qword [rsp + 8], 0	      1948	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007a85	      0xe926050000	                           jmp 0x4007fb0	      1948	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007a8a	    0xc744242c8000	           mov dword [rsp + 0x2c], 0x80 	      2047	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	ELSE_4	IF_20
0x4007a92	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007a9b	    0x48c744240800	                  mov qword [rsp + 8], 0	      1948	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007aa4	      0xe907050000	                           jmp 0x4007fb0	      2048	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	ELSE_4	IF_20
0x4007aa9	       0xfb654241a	           movzx edx, byte [rsp + 0x1a] 	      2049	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	ELSE_4	IF_21
0x4007aae	            0x89d0	                            mov eax, edx	      2049	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	ELSE_4	IF_21
0x4007ab0	          0x83c840	                            or eax, 0x40	      2049	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	ELSE_4	IF_21
0x4007ab3	      0x807c240800	                   cmp byte [rsp + 8], 0	      2049	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	ELSE_4	IF_21
0x4007ab8	           0xf49d0	                         cmovns edx, eax	      2049	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	ELSE_4	IF_21
0x4007abb	          0x885308	                  mov byte [rbx + 8], dl	      2051	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	ELSE_4
0x4007abe	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007ac7	    0x48c744240800	                  mov qword [rsp + 8], 0	      1948	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007ad0	      0xe9db040000	                           jmp 0x4007fb0	      1948	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007ad5	      0xc644241900	                mov byte [rsp + 0x19], 0	      1953	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007ada	      0xc644241b00	                mov byte [rsp + 0x1b], 0	      1952	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007adf	      0xc644241a00	                mov byte [rsp + 0x1a], 0	      1963	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007ae4	    0x6641837d0a00	                 cmp word [r13 + 0xa], 0	      2056	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	CALL_22
0x4007aea	            0x7570	                           jne 0x4007b5c	      2056	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	CALL_22
0x4007aec	      0x41837d0001	                      cmp dword [r13], 1	      2056	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	CALL_22
0x4007af1	            0x7569	                           jne 0x4007b5c	      2056	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	CALL_22
0x4007af3	        0x41f6c770	                         test r15b, 0x70	      2056	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	CALL_22
0x4007af7	            0x7563	                           jne 0x4007b5c	      2056	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	CALL_22
0x4007af9	          0x4585e4	                         test r12d, r12d	      2057	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	IF_23
0x4007afc	            0x751f	                           jne 0x4007b1d	      2057	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	IF_23
0x4007afe	    0xc744242c8000	           mov dword [rsp + 0x2c], 0x80 	      2064	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	IF_23
0x4007b06	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007b0f	    0x48c744240800	                  mov qword [rsp + 8], 0	      1948	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007b18	      0xe993040000	                           jmp 0x4007fb0	      1948	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007b1d	       0xfb64c241a	           movzx ecx, byte [rsp + 0x1a] 	      2074	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	ELSE_5	IF_25
0x4007b22	            0x89c8	                            mov eax, ecx	      2074	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	ELSE_5	IF_25
0x4007b24	          0x83c840	                            or eax, 0x40	      2074	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	ELSE_5	IF_25
0x4007b27	      0x807c240800	                   cmp byte [rsp + 8], 0	      2074	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	ELSE_5	IF_25
0x4007b2c	           0xf48c8	                          cmovs ecx, eax	      2074	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	ELSE_5	IF_25
0x4007b2f	    0xc74304000000	                  mov dword [rbx + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4007b36	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4007b3c	    0x66c7430a0000	                 mov word [rbx + 0xa], 0	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4007b42	          0x884b08	                  mov byte [rbx + 8], cl	      2078	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	ELSE_5
0x4007b45	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007b4e	    0x48c744240800	                  mov qword [rsp + 8], 0	      1948	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007b57	      0xe954040000	                           jmp 0x4007fb0	      1948	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007b5c	      0x807c241900	                cmp byte [rsp + 0x19], 0	      2084	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27
0x4007b61	     0xf85b3000000	                           jne 0x4007c1a	      2084	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27
0x4007b67	            0x84c0	                             test al, al	      2087	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	IF_28	CALL_25
0x4007b69	            0x741f	                            je 0x4007b8a	      2087	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	IF_28	CALL_25
0x4007b6b	    0xc744242c8000	           mov dword [rsp + 0x2c], 0x80 	      2088	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	IF_28
0x4007b73	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007b7c	    0x48c744240800	                  mov qword [rsp + 8], 0	      1948	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007b85	      0xe926040000	                           jmp 0x4007fb0	      2089	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	IF_28
0x4007b8a	      0x488d54242c	                   lea rdx, [rsp + 0x2c]	      2090	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	IF_29	CALL_26
0x4007b8f	          0x4889ee	                            mov rsi, rbp	      2090	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	IF_29	CALL_26
0x4007b92	          0x4c89ef	                            mov rdi, r13	      2090	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	IF_29	CALL_26
0x4007b95	      0xe8aa8fffff	                   call sym.decCheckMath	      2090	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	IF_29	CALL_26
0x4007b9a	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007ba3	    0x48c744240800	                  mov qword [rsp + 8], 0	      1948	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007bac	            0x85c0	                           test eax, eax	      2090	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	IF_29	CALL_26
0x4007bae	     0xf85fc030000	                           jne 0x4007fb0	      2090	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	IF_29	CALL_26
0x4007bb4	      0x488d54242c	                   lea rdx, [rsp + 0x2c]	      2091	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_27
0x4007bb9	          0x4889ee	                            mov rsi, rbp	      2091	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_27
0x4007bbc	          0x4c89f7	                            mov rdi, r14	      2091	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_27
0x4007bbf	      0xe8808fffff	                   call sym.decCheckMath	      2091	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_27
0x4007bc4	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007bcd	    0x48c744240800	                  mov qword [rsp + 8], 0	      1948	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007bd6	            0x85c0	                           test eax, eax	      2091	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_27
0x4007bd8	     0xf85d2030000	                           jne 0x4007fb0	      2091	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_27
0x4007bde	      0xbe40000000	                           mov esi, 0x40	      2093	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_28
0x4007be3	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      2093	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_28
0x4007be8	      0xe800000000	                          call 0x4007bed	      2093	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_28
0x4007bed	    0xc74424343f42	        mov dword [rsp + 0x34], 0xf423f 	      2094	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27
0x4007bf5	    0xc7442438c1bd	     mov dword [rsp + 0x38], 0xfff0bdc1 	      2095	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27
0x4007bfd	      0xc644244800	                mov byte [rsp + 0x48], 0	      2096	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27
0x4007c02	          0x8b4500	                    mov eax, dword [rbp]	      2108	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_29
0x4007c05	        0x41394500	                    cmp dword [r13], eax	      2108	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_29
0x4007c09	      0x410f4d4500	                 cmovge eax, dword [r13]	      2108	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_29
0x4007c0e	          0x83c00a	                            add eax, 0xa	      2108	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_29
0x4007c11	        0x89442430	             mov dword [rsp + 0x30], eax	      2108	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_29
0x4007c15	      0xe9a2000000	                           jmp 0x4007cbc	      2108	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_29
0x4007c1a	          0x4585e4	                         test r12d, r12d	      2112	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6	IF_30
0x4007c1d	            0x752e	                           jne 0x4007c4d	      2112	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6	IF_30
0x4007c1f	        0xc6430800	                   mov byte [rbx + 8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x4007c23	    0xc74304000000	                  mov dword [rbx + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4007c2a	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4007c30	    0x66c7430a0100	                 mov word [rbx + 0xa], 1	      2115	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6	IF_30
0x4007c36	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007c3f	    0x48c744240800	                  mov qword [rsp + 8], 0	      1948	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007c48	      0xe963030000	                           jmp 0x4007fb0	      2116	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6	IF_30
0x4007c4d	        0x488b4500	                    mov rax, qword [rbp]	      2120	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6
0x4007c51	      0x4889442430	             mov qword [rsp + 0x30], rax	      2120	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6
0x4007c56	        0x488b4508	                mov rax, qword [rbp + 8]	      2120	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6
0x4007c5a	      0x4889442438	             mov qword [rsp + 0x38], rax	      2120	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6
0x4007c5f	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      2120	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6
0x4007c63	      0x4889442440	             mov qword [rsp + 0x40], rax	      2120	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6
0x4007c68	          0x8b4518	            mov eax, dword [rbp + 0x18] 	      2120	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6
0x4007c6b	        0x89442448	             mov dword [rsp + 0x48], eax	      2120	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6
0x4007c6f	    0xc744243c0300	               mov dword [rsp + 0x3c], 3	      2121	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6
0x4007c77	        0x418b4604	                mov eax, dword [r14 + 4]	      2123	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6
0x4007c7b	          0x410306	                    add eax, dword [r14]	      2123	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6
0x4007c7e	        0x8b4c2410	            mov ecx, dword [rsp + 0x10] 	      2123	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6
0x4007c82	        0x8d440102	                lea eax, [rcx + rax + 2]	      2123	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6
0x4007c86	        0x89442430	             mov dword [rsp + 0x30], eax	      2123	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6
0x4007c8a	      0x3dffc99a3b	                     cmp eax, 0x3b9ac9ff	      2128	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6	IF_33
0x4007c8f	            0x7e1f	                           jle 0x4007cb0	      2128	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6	IF_33
0x4007c91	    0xc744242c8000	           mov dword [rsp + 0x2c], 0x80 	      2128	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6	IF_33
0x4007c99	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007ca2	    0x48c744240800	                  mov qword [rsp + 8], 0	      1948	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007cab	      0xe900030000	                           jmp 0x4007fb0	      2128	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6	IF_33
0x4007cb0	          0x4489e0	                           mov eax, r12d	      2128	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6	IF_33
0x4007cb3	          0xc1f81f	                           sar eax, 0x1f	      2128	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6	IF_33
0x4007cb6	          0x4131c4	                           xor r12d, eax	      2128	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6	IF_33
0x4007cb9	          0x4129c4	                           sub r12d, eax	      2128	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6	IF_33
0x4007cbc	        0x8b442430	            mov eax, dword [rsp + 0x30] 	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x4007cc0	          0x83f831	                           cmp eax, 0x31	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x4007cc3	            0x7f13	                            jg 0x4007cd8	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x4007cc5	            0x4898	                                    cdqe	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x4007cc7	     0xfb680000000	                   movzx eax, byte [rax]	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x4007cce	        0x8d44000a	              lea eax, [rax + rax + 0xa]	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x4007cd2	        0x8944241c	             mov dword [rsp + 0x1c], eax	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x4007cd6	            0xeb1b	                           jmp 0x4007cf3	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x4007cd8	          0x8d4802	                      lea ecx, [rax + 2]	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x4007cdb	      0xba56555555	                     mov edx, 0x55555556	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x4007ce0	            0x89c8	                            mov eax, ecx	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x4007ce2	            0xf7ea	                                imul edx	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x4007ce4	            0x89c8	                            mov eax, ecx	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x4007ce6	          0xc1f81f	                           sar eax, 0x1f	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x4007ce9	            0x29c2	                            sub edx, eax	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x4007ceb	        0x8d44120a	              lea eax, [rdx + rdx + 0xa]	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x4007cef	        0x8944241c	             mov dword [rsp + 0x1c], eax	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x4007cf3	      0x4c8d7c2460	                   lea r15, [rsp + 0x60]	      1968	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007cf8	    0x48c744240800	                  mov qword [rsp + 8], 0	      1948	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007d01	      0x837c241c30	           cmp dword [rsp + 0x1c], 0x30 	      2135	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_34
0x4007d06	            0x7629	                           jbe 0x4007d31	      2135	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_34
0x4007d08	        0x8b7c241c	            mov edi, dword [rsp + 0x1c] 	      2136	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_34
0x4007d0c	      0xe800000000	                          call 0x4007d11	      2136	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_34
0x4007d11	      0x4889442408	                mov qword [rsp + 8], rax	      2136	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_34
0x4007d16	          0x4989c7	                            mov r15, rax	      2140	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_34
0x4007d19	          0x4885c0	                           test rax, rax	      2137	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_34	IF_35
0x4007d1c	            0x7513	                           jne 0x4007d31	      2137	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_34	IF_35
0x4007d1e	      0x834c242c10	             or dword [rsp + 0x2c], 0x10	      2138	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_34	IF_35
0x4007d23	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007d2c	      0xe97f020000	                           jmp 0x4007fb0	      2139	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_34	IF_35
0x4007d31	      0x807c241900	                cmp byte [rsp + 0x19], 0	      2144	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36
0x4007d36	     0xf85b8000000	                           jne 0x4007df4	      2144	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36
0x4007d3c	      0x488d4c242c	                   lea rcx, [rsp + 0x2c]	      2148	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	CALL_32
0x4007d41	      0x488d542430	                   lea rdx, [rsp + 0x30]	      2148	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	CALL_32
0x4007d46	          0x4c89ee	                            mov rsi, r13	      2148	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	CALL_32
0x4007d49	          0x4c89ff	                            mov rdi, r15	      2148	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	CALL_32
0x4007d4c	      0xe8d7f0ffff	                        call sym.decLnOp	      2148	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	CALL_32
0x4007d51	    0x6641837f0a00	                 cmp word [r15 + 0xa], 0	      2150	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	CALL_33
0x4007d57	            0x7560	                           jne 0x4007db9	      2150	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	CALL_33
0x4007d59	        0x41833f01	                      cmp dword [r15], 1	      2150	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	CALL_33
0x4007d5d	            0x755a	                           jne 0x4007db9	      2150	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	CALL_33
0x4007d5f	      0x41f6470870	               test byte [r15 + 8], 0x70	      2150	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	CALL_33
0x4007d64	            0x7553	                           jne 0x4007db9	      2150	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	CALL_33
0x4007d66	    0x6641c7470a01	                 mov word [r15 + 0xa], 1	      2152	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37
0x4007d6d	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007d76	      0x807c241b00	                cmp byte [rsp + 0x1b], 0	      2153	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	IF_38
0x4007d7b	     0xf85da010000	                           jne 0x4007f5b	      2153	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	IF_38
0x4007d81	          0x8b4500	                    mov eax, dword [rbp]	      2154	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	IF_38
0x4007d84	        0x448d60ff	                     lea r12d, [rax - 1]	      2154	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	IF_38
0x4007d88	        0x498d7f0a	                    lea rdi, [r15 + 0xa]	      2155	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	IF_38	CALL_34
0x4007d8c	          0x4489e2	                           mov edx, r12d	      2155	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	IF_38	CALL_34
0x4007d8f	      0xbe01000000	                              mov esi, 1	      2155	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	IF_38	CALL_34
0x4007d94	      0xe8c985ffff	                 call sym.decShiftToMost	      2155	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	IF_38	CALL_34
0x4007d99	          0x418907	                    mov dword [r15], eax	      2155	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	IF_38	CALL_34
0x4007d9c	          0x41f7dc	                                neg r12d	      2156	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	IF_38
0x4007d9f	        0x45896704	               mov dword [r15 + 4], r12d	      2156	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	IF_38
0x4007da3	    0x814c242c2008	            or dword [rsp + 0x2c], 0x820	      2157	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	IF_38
0x4007dab	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007db4	      0xe9a2010000	                           jmp 0x4007f5b	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007db9	      0x4c8d44242c	                    lea r8, [rsp + 0x2c]	      2161	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	ELSE_7	CALL_35
0x4007dbe	      0x488d4c2430	                   lea rcx, [rsp + 0x30]	      2161	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	ELSE_7	CALL_35
0x4007dc3	          0x4c89f2	                            mov rdx, r14	      2161	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	ELSE_7	CALL_35
0x4007dc6	          0x4c89fe	                            mov rsi, r15	      2161	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	ELSE_7	CALL_35
0x4007dc9	          0x4c89ff	                            mov rdi, r15	      2161	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	ELSE_7	CALL_35
0x4007dcc	      0xe878b8ffff	                  call sym.decMultiplyOp	      2161	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	ELSE_7	CALL_35
0x4007dd1	      0x488d4c242c	                   lea rcx, [rsp + 0x2c]	      2162	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	ELSE_7	CALL_36
0x4007dd6	      0x488d542430	                   lea rdx, [rsp + 0x30]	      2162	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	ELSE_7	CALL_36
0x4007ddb	          0x4c89fe	                            mov rsi, r15	      2162	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	ELSE_7	CALL_36
0x4007dde	          0x4c89ff	                            mov rdi, r15	      2162	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	ELSE_7	CALL_36
0x4007de1	      0xe867e8ffff	                       call sym.decExpOp	      2162	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	ELSE_7	CALL_36
0x4007de6	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007def	      0xe967010000	                           jmp 0x4007f5b	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007df4	      0x41c6470800	                   mov byte [r15 + 8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x4007df9	    0x41c747040000	                  mov dword [r15 + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4007e01	    0x41c707010000	                      mov dword [r15], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4007e08	    0x6641c7470a01	                 mov word [r15 + 0xa], 1	      2169	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8
0x4007e0f	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007e18	      0x41807e0800	                   cmp byte [r14 + 8], 0	      2173	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	CALL_38
0x4007e1d	            0x797d	                           jns 0x4007e9c	      2173	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	CALL_38
0x4007e1f	          0x4c89fe	                            mov rsi, r15	      2175	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	CALL_39
0x4007e22	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      2175	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	CALL_39
0x4007e27	      0xe800000000	                          call 0x4007e2c	      2175	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	CALL_39
0x4007e2c	      0x4c8d4c242c	                    lea r9, [rsp + 0x2c]	      2180	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_40
0x4007e31	    0x41b880000000	                           mov r8d, 0x80	      2180	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_40
0x4007e37	      0x488d4c2430	                   lea rcx, [rsp + 0x30]	      2180	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_40
0x4007e3c	          0x4c89ea	                            mov rdx, r13	      2180	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_40
0x4007e3f	      0x488d742450	                   lea rsi, [rsp + 0x50]	      2180	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_40
0x4007e44	          0x4c89ff	                            mov rdi, r15	      2180	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_40
0x4007e47	      0xe88ed7ffff	                    call sym.decDivideOp	      2180	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_40
0x4007e4c	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	      2182	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	IF_41
0x4007e50	          0x83f830	                           cmp eax, 0x30	      2182	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	IF_41
0x4007e53	            0x761e	                           jbe 0x4007e73	      2182	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	IF_41
0x4007e55	            0x89c7	                            mov edi, eax	      2183	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	IF_41
0x4007e57	      0xe800000000	                          call 0x4007e5c	      2183	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	IF_41
0x4007e5c	      0x4889442410	             mov qword [rsp + 0x10], rax	      2183	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	IF_41
0x4007e61	          0x4989c5	                            mov r13, rax	      2187	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	IF_41
0x4007e64	          0x4885c0	                           test rax, rax	      2184	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	IF_41	IF_42
0x4007e67	            0x751b	                           jne 0x4007e84	      2184	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	IF_41	IF_42
0x4007e69	      0x834c242c10	             or dword [rsp + 0x2c], 0x10	      2185	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	IF_41	IF_42
0x4007e6e	      0xe93d010000	                           jmp 0x4007fb0	      2186	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	IF_41	IF_42
0x4007e73	    0x4c8dac249000	                   lea r13, [rsp + 0x90]	      2174	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39
0x4007e7b	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007e84	          0x4c89fe	                            mov rsi, r15	      2190	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_41
0x4007e87	          0x4c89ef	                            mov rdi, r13	      2190	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_41
0x4007e8a	      0xe800000000	                          call 0x4007e8f	      2190	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_41
0x4007e8f	      0x488d742450	                   lea rsi, [rsp + 0x50]	      2191	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_42
0x4007e94	          0x4c89ff	                            mov rdi, r15	      2191	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_42
0x4007e97	      0xe800000000	                          call 0x4007e9c	      2191	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_42
0x4007e9c	      0xc644241900	                mov byte [rsp + 0x19], 0	      2199	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8
0x4007ea1	    0x41be01000000	                             mov r14d, 1	      2200	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1
0x4007ea7	        0x8b44242c	            mov eax, dword [rsp + 0x2c] 	      2202	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43
0x4007eab	          0xf6c422	                           test ah, 0x22	      2202	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43
0x4007eae	            0x741a	                            je 0x4007eca	      2202	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43
0x4007eb0	          0xf6c402	                              test ah, 2	      2203	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43	CALL_43
0x4007eb3	            0x7574	                           jne 0x4007f29	      2203	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43	CALL_43
0x4007eb5	    0x6641837f0a00	                 cmp word [r15 + 0xa], 0	      2203	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43	CALL_43
0x4007ebb	            0x750d	                           jne 0x4007eca	      2203	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43	CALL_43
0x4007ebd	        0x41833f01	                      cmp dword [r15], 1	      2203	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43	CALL_43
0x4007ec1	            0x7507	                           jne 0x4007eca	      2203	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43	CALL_43
0x4007ec3	      0x41f6470870	               test byte [r15 + 8], 0x70	      2203	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43	CALL_43
0x4007ec8	            0x745f	                            je 0x4007f29	      2203	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43	CALL_43
0x4007eca	          0x4501e4	                          add r12d, r12d	      2208	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_45
0x4007ecd	            0x7925	                           jns 0x4007ef4	      2208	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_45
0x4007ecf	      0x4c8d44242c	                    lea r8, [rsp + 0x2c]	      2210	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_45	CALL_44
0x4007ed4	      0x488d4c2430	                   lea rcx, [rsp + 0x30]	      2210	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_45	CALL_44
0x4007ed9	          0x4c89ea	                            mov rdx, r13	      2210	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_45	CALL_44
0x4007edc	          0x4c89fe	                            mov rsi, r15	      2210	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_45	CALL_44
0x4007edf	          0x4c89ff	                            mov rdi, r15	      2210	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_45	CALL_44
0x4007ee2	      0xe862b7ffff	                  call sym.decMultiplyOp	      2210	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_45	CALL_44
0x4007ee7	        0x4183fe1f	                          cmp r14d, 0x1f	      2212	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_46
0x4007eeb	            0x7432	                            je 0x4007f1f	      2212	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_46
0x4007eed	      0xc644241901	                mov byte [rsp + 0x19], 1	      2209	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_45
0x4007ef2	            0xeb0d	                           jmp 0x4007f01	      2209	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_45
0x4007ef4	        0x4183fe1f	                          cmp r14d, 0x1f	      2212	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_46
0x4007ef8	            0x7425	                            je 0x4007f1f	      2212	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_46
0x4007efa	      0x807c241900	                cmp byte [rsp + 0x19], 0	      2213	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_47
0x4007eff	            0x7418	                            je 0x4007f19	      2213	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_47
0x4007f01	      0x4c8d44242c	                    lea r8, [rsp + 0x2c]	      2214	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	CALL_45
0x4007f06	      0x488d4c2430	                   lea rcx, [rsp + 0x30]	      2214	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	CALL_45
0x4007f0b	          0x4c89fa	                            mov rdx, r15	      2214	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	CALL_45
0x4007f0e	          0x4c89fe	                            mov rsi, r15	      2214	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	CALL_45
0x4007f11	          0x4c89ff	                            mov rdi, r15	      2214	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	CALL_45
0x4007f14	      0xe830b7ffff	                  call sym.decMultiplyOp	      2214	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	CALL_45
0x4007f19	        0x4183c601	                             add r14d, 1	      2200	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1
0x4007f1d	            0xeb88	                           jmp 0x4007ea7	      2215	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1
0x4007f1f	    0xf744242c0022	        test dword [rsp + 0x2c], 0x2200 	      2218	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48
0x4007f27	            0x7432	                            je 0x4007f5b	      2218	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48
0x4007f29	      0x410fb64708	               movzx eax, byte [r15 + 8]	      2231	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48
0x4007f2e	          0x83e07f	                           and eax, 0x7f	      2231	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48
0x4007f31	         0xa44241a	                or al, byte [rsp + 0x1a]	      2231	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48
0x4007f35	        0x41884708	                  mov byte [r15 + 8], al	      2231	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48
0x4007f39	      0x488d4c242c	                   lea rcx, [rsp + 0x2c]	      2234	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48	CALL_47
0x4007f3e	      0x488d542428	                   lea rdx, [rsp + 0x28]	      2234	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48	CALL_47
0x4007f43	          0x4889ee	                            mov rsi, rbp	      2234	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48	CALL_47
0x4007f46	          0x4c89ff	                            mov rdi, r15	      2234	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48	CALL_47
0x4007f49	      0xe8b49bffff	                    call sym.decFinalize	      2234	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48	CALL_47
0x4007f4e	          0x4c89fe	                            mov rsi, r15	      2235	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48	CALL_48
0x4007f51	          0x4889df	                            mov rdi, rbx	      2235	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48	CALL_48
0x4007f54	      0xe800000000	                          call 0x4007f59	      2235	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48	CALL_48
0x4007f59	            0xeb55	                           jmp 0x4007fb0	      2236	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48
0x4007f5b	      0x4c8d44242c	                    lea r8, [rsp + 0x2c]	      2249	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_51
0x4007f60	      0x488d4c2428	                   lea rcx, [rsp + 0x28]	      2249	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_51
0x4007f65	          0x4889ea	                            mov rdx, rbp	      2249	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_51
0x4007f68	          0x4c89fe	                            mov rsi, r15	      2249	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_51
0x4007f6b	          0x4889df	                            mov rdi, rbx	      2249	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_51
0x4007f6e	      0xe86e8bffff	                     call sym.decCopyFit	      2249	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_51
0x4007f73	      0x488d4c242c	                   lea rcx, [rsp + 0x2c]	      2250	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1
0x4007f78	      0x488d542428	                   lea rdx, [rsp + 0x28]	      2250	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1
0x4007f7d	          0x4889ee	                            mov rsi, rbp	      2250	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1
0x4007f80	          0x4889df	                            mov rdi, rbx	      2250	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1
0x4007f83	      0xe87a9bffff	                    call sym.decFinalize	      2250	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1
0x4007f88	            0xeb26	                           jmp 0x4007fb0	      2250	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1
0x4007f8a	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007f93	    0x48c744240800	                  mov qword [rsp + 8], 0	      1948	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007f9c	            0xeb12	                           jmp 0x4007fb0	      1948	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007f9e	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007fa7	    0x48c744240800	                  mov qword [rsp + 8], 0	      1948	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007fb0	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      2256	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007fb5	      0xe800000000	                          call 0x4007fba	      2256	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007fba	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      2257	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007fbf	      0xe800000000	                          call 0x4007fc4	      2257	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007fc4	        0x8b74242c	            mov esi, dword [rsp + 0x2c] 	      2262	decNumber.c	FUNCTION_68	FUNCTION_34	CALL_53
0x4007fc8	            0x85f6	                           test esi, esi	      2262	decNumber.c	FUNCTION_68	FUNCTION_34	CALL_53
0x4007fca	            0x740b	                            je 0x4007fd7	      2262	decNumber.c	FUNCTION_68	FUNCTION_34	CALL_53
0x4007fcc	          0x4889ea	                            mov rdx, rbp	      2262	decNumber.c	FUNCTION_68	FUNCTION_34	CALL_53
0x4007fcf	          0x4889df	                            mov rdi, rbx	      2262	decNumber.c	FUNCTION_68	FUNCTION_34	CALL_53
0x4007fd2	      0xe84596ffff	                      call sym.decStatus	      2262	decNumber.c	FUNCTION_68	FUNCTION_34	CALL_53
0x4007fd7	          0x4889d8	                            mov rax, rbx	      2267	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007fda	    0x488b8c24c800	            mov rcx, qword [rsp + 0xc8] 	      2267	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007fe2	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2267	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007feb	            0x7443	                            je 0x4008030	      2267	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007fed	            0xeb3c	                           jmp 0x400802b	      2267	decNumber.c	FUNCTION_68	FUNCTION_34
0x4007fef	          0x4489f8	                           mov eax, r15d	      2036	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_17	CALL_18
0x4007ff2	          0xc0e807	                               shr al, 7	      2036	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_17	CALL_18
0x4007ff5	        0x41f6c740	                         test r15b, 0x40	      2040	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	CALL_19
0x4007ff9	     0xf84d6faffff	                            je 0x4007ad5	      2040	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	CALL_19
0x4007fff	        0xc6430800	                   mov byte [rbx + 8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x4008003	    0xc74304000000	                  mov dword [rbx + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x400800a	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4008010	    0x66c7430a0000	                 mov word [rbx + 0xa], 0	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4008016	      0x41807d0800	                   cmp byte [r13 + 8], 0	      2046	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	ELSE_4	IF_20	CALL_21
0x400801b	     0xf8869faffff	                            js 0x4007a8a	      2046	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	ELSE_4	IF_20	CALL_21
0x4008021	      0xc644241a00	                mov byte [rsp + 0x1a], 0	      2046	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	ELSE_4	IF_20	CALL_21
0x4008026	      0xe97efaffff	                           jmp 0x4007aa9	      2046	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	ELSE_4	IF_20	CALL_21
0x400802b	      0xe800000000	                          call 0x4008030	      2267	decNumber.c	FUNCTION_68	FUNCTION_34
0x4008030	    0x4881c4d80000	                           add rsp, 0xd8	      2267	decNumber.c	FUNCTION_68	FUNCTION_34
0x4008037	              0x5b	                                 pop rbx	      2267	decNumber.c	FUNCTION_68	FUNCTION_34
0x4008038	              0x5d	                                 pop rbp	      2267	decNumber.c	FUNCTION_68	FUNCTION_34
0x4008039	            0x415c	                                 pop r12	      2267	decNumber.c	FUNCTION_68	FUNCTION_34
0x400803b	            0x415d	                                 pop r13	      2267	decNumber.c	FUNCTION_68	FUNCTION_34
0x400803d	            0x415e	                                 pop r14	      2267	decNumber.c	FUNCTION_68	FUNCTION_34
0x400803f	            0x415f	                                 pop r15	      2267	decNumber.c	FUNCTION_68	FUNCTION_34
0x4008041	              0xc3	                                     ret	      2267	decNumber.c	FUNCTION_68	FUNCTION_34
decNumberMax	SWITCH,0:functions,0:ELSE,0:DO,0:FOR,0:IF,1:CALL,3:WHILE,0	27
0x40034b1	              0x55	                                push rbp	      1538	decNumber.c	FUNCTION_68	FUNCTION_23
0x40034b2	              0x53	                                push rbx	      1538	decNumber.c	FUNCTION_68	FUNCTION_23
0x40034b3	        0x4883ec18	                           sub rsp, 0x18	      1538	decNumber.c	FUNCTION_68	FUNCTION_23
0x40034b7	          0x4889fb	                            mov rbx, rdi	      1538	decNumber.c	FUNCTION_68	FUNCTION_23
0x40034ba	          0x4889cd	                            mov rbp, rcx	      1538	decNumber.c	FUNCTION_68	FUNCTION_23
0x40034bd	    0x64488b042528	                mov rax, qword fs:[0x28]	      1538	decNumber.c	FUNCTION_68	FUNCTION_23
0x40034c6	      0x4889442408	                mov qword [rsp + 8], rax	      1538	decNumber.c	FUNCTION_68	FUNCTION_23
0x40034cb	            0x31c0	                            xor eax, eax	      1538	decNumber.c	FUNCTION_68	FUNCTION_23
0x40034cd	    0xc74424040000	                  mov dword [rsp + 4], 0	      1539	decNumber.c	FUNCTION_68	FUNCTION_23
0x40034d5	      0x4c8d4c2404	                       lea r9, [rsp + 4]	      1540	decNumber.c	FUNCTION_68	FUNCTION_23	CALL_1
0x40034da	    0x41b802000000	                              mov r8d, 2	      1540	decNumber.c	FUNCTION_68	FUNCTION_23	CALL_1
0x40034e0	      0xe8d2faffff	                   call sym.decCompareOp	      1540	decNumber.c	FUNCTION_68	FUNCTION_23	CALL_1
0x40034e5	        0x8b742404	                mov esi, dword [rsp + 4]	      1541	decNumber.c	FUNCTION_68	FUNCTION_23	CALL_2
0x40034e9	            0x85f6	                           test esi, esi	      1541	decNumber.c	FUNCTION_68	FUNCTION_23	CALL_2
0x40034eb	            0x740b	                            je 0x40034f8	      1541	decNumber.c	FUNCTION_68	FUNCTION_23	CALL_2
0x40034ed	          0x4889ea	                            mov rdx, rbp	      1541	decNumber.c	FUNCTION_68	FUNCTION_23	CALL_2
0x40034f0	          0x4889df	                            mov rdi, rbx	      1541	decNumber.c	FUNCTION_68	FUNCTION_23	CALL_2
0x40034f3	      0xe824e1ffff	                      call sym.decStatus	      1541	decNumber.c	FUNCTION_68	FUNCTION_23	CALL_2
0x40034f8	          0x4889d8	                            mov rax, rbx	      1546	decNumber.c	FUNCTION_68	FUNCTION_23
0x40034fb	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1546	decNumber.c	FUNCTION_68	FUNCTION_23
0x4003500	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1546	decNumber.c	FUNCTION_68	FUNCTION_23
0x4003509	            0x7405	                            je 0x4003510	      1546	decNumber.c	FUNCTION_68	FUNCTION_23
0x400350b	      0xe800000000	                          call 0x4003510	      1546	decNumber.c	FUNCTION_68	FUNCTION_23
0x4003510	        0x4883c418	                           add rsp, 0x18	      1546	decNumber.c	FUNCTION_68	FUNCTION_23
0x4003514	              0x5b	                                 pop rbx	      1546	decNumber.c	FUNCTION_68	FUNCTION_23
0x4003515	              0x5d	                                 pop rbp	      1546	decNumber.c	FUNCTION_68	FUNCTION_23
0x4003516	              0xc3	                                     ret	      1546	decNumber.c	FUNCTION_68	FUNCTION_23
decNumberRemainderNear	SWITCH,0:functions,0:ELSE,0:DO,0:FOR,0:IF,1:CALL,3:WHILE,0	27
0x40065e7	              0x55	                                push rbp	      2420	decNumber.c	FUNCTION_68	FUNCTION_40
0x40065e8	              0x53	                                push rbx	      2420	decNumber.c	FUNCTION_68	FUNCTION_40
0x40065e9	        0x4883ec18	                           sub rsp, 0x18	      2420	decNumber.c	FUNCTION_68	FUNCTION_40
0x40065ed	          0x4889fb	                            mov rbx, rdi	      2420	decNumber.c	FUNCTION_68	FUNCTION_40
0x40065f0	          0x4889cd	                            mov rbp, rcx	      2420	decNumber.c	FUNCTION_68	FUNCTION_40
0x40065f3	    0x64488b042528	                mov rax, qword fs:[0x28]	      2420	decNumber.c	FUNCTION_68	FUNCTION_40
0x40065fc	      0x4889442408	                mov qword [rsp + 8], rax	      2420	decNumber.c	FUNCTION_68	FUNCTION_40
0x4006601	            0x31c0	                            xor eax, eax	      2420	decNumber.c	FUNCTION_68	FUNCTION_40
0x4006603	    0xc74424040000	                  mov dword [rsp + 4], 0	      2421	decNumber.c	FUNCTION_68	FUNCTION_40
0x400660b	      0x4c8d4c2404	                       lea r9, [rsp + 4]	      2422	decNumber.c	FUNCTION_68	FUNCTION_40	CALL_1
0x4006610	    0x41b810000000	                           mov r8d, 0x10	      2422	decNumber.c	FUNCTION_68	FUNCTION_40	CALL_1
0x4006616	      0xe8bfefffff	                    call sym.decDivideOp	      2422	decNumber.c	FUNCTION_68	FUNCTION_40	CALL_1
0x400661b	        0x8b742404	                mov esi, dword [rsp + 4]	      2423	decNumber.c	FUNCTION_68	FUNCTION_40	CALL_2
0x400661f	            0x85f6	                           test esi, esi	      2423	decNumber.c	FUNCTION_68	FUNCTION_40	CALL_2
0x4006621	            0x740b	                            je 0x400662e	      2423	decNumber.c	FUNCTION_68	FUNCTION_40	CALL_2
0x4006623	          0x4889ea	                            mov rdx, rbp	      2423	decNumber.c	FUNCTION_68	FUNCTION_40	CALL_2
0x4006626	          0x4889df	                            mov rdi, rbx	      2423	decNumber.c	FUNCTION_68	FUNCTION_40	CALL_2
0x4006629	      0xe8eeafffff	                      call sym.decStatus	      2423	decNumber.c	FUNCTION_68	FUNCTION_40	CALL_2
0x400662e	          0x4889d8	                            mov rax, rbx	      2428	decNumber.c	FUNCTION_68	FUNCTION_40
0x4006631	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      2428	decNumber.c	FUNCTION_68	FUNCTION_40
0x4006636	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2428	decNumber.c	FUNCTION_68	FUNCTION_40
0x400663f	            0x7405	                            je 0x4006646	      2428	decNumber.c	FUNCTION_68	FUNCTION_40
0x4006641	      0xe800000000	                          call 0x4006646	      2428	decNumber.c	FUNCTION_68	FUNCTION_40
0x4006646	        0x4883c418	                           add rsp, 0x18	      2428	decNumber.c	FUNCTION_68	FUNCTION_40
0x400664a	              0x5b	                                 pop rbx	      2428	decNumber.c	FUNCTION_68	FUNCTION_40
0x400664b	              0x5d	                                 pop rbp	      2428	decNumber.c	FUNCTION_68	FUNCTION_40
0x400664c	              0xc3	                                     ret	      2428	decNumber.c	FUNCTION_68	FUNCTION_40
decSetMaxValue	SWITCH,0:functions,0:ELSE,1:DO,0:FOR,1:IF,1:CALL,0:WHILE,0	20
0x4000b07	            0x8b06	                    mov eax, dword [rsi]	      7390	decNumber.c	ELSE_1	FUNCTION_17
0x4000b09	            0x8907	                    mov dword [rdi], eax	      7391	decNumber.c	ELSE_1	FUNCTION_17
0x4000b0b	        0x488d570a	                    lea rdx, [rdi + 0xa]	      7393	decNumber.c	ELSE_1	FUNCTION_17	FOR_1
0x4000b0f	          0x83f803	                              cmp eax, 3	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x4000b12	            0x7e11	                           jle 0x4000b25	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x4000b14	      0x66c702e703	                   mov word [rdx], 0x3e7	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x4000b19	          0x83e803	                              sub eax, 3	      7399	decNumber.c	FUNCTION_17	FOR_1	ELSE_1
0x4000b1c	        0x4883c202	                              add rdx, 2	      7393	decNumber.c	ELSE_1	FUNCTION_17	FOR_1
0x4000b20	          0x83f803	                              cmp eax, 3	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x4000b23	            0x7fef	                            jg 0x4000b14	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x4000b25	            0x4898	                                    cdqe	      7396	decNumber.c	FUNCTION_17	FOR_1
0x4000b27	    0x8b0485000000	                  mov eax, dword [rax*4]	      7396	decNumber.c	FUNCTION_17	FOR_1
0x4000b2e	          0x83e801	                              sub eax, 1	      7396	decNumber.c	FUNCTION_17	FOR_1
0x4000b31	          0x668902	                      mov word [rdx], ax	      7396	decNumber.c	FUNCTION_17	FOR_1
0x4000b34	        0xc6470800	                   mov byte [rdi + 8], 0	      7401	decNumber.c	FUNCTION_17	ELSE_1
0x4000b38	          0x8b4604	                mov eax, dword [rsi + 4]	      7402	decNumber.c	FUNCTION_17	ELSE_1
0x4000b3b	            0x2b06	                    sub eax, dword [rsi]	      7402	decNumber.c	FUNCTION_17	ELSE_1
0x4000b3d	          0x83c001	                              add eax, 1	      7402	decNumber.c	FUNCTION_17	ELSE_1
0x4000b40	          0x894704	                mov dword [rdi + 4], eax	      7402	decNumber.c	FUNCTION_17	ELSE_1
0x4000b43	              0xc3	                                     ret	      7402	decNumber.c	FUNCTION_17	ELSE_1
decNumberFMA	SWITCH,0:functions,0:ELSE,1:DO,1:FOR,0:IF,10:CALL,17:WHILE,0	130
0x4004f76	            0x4157	                                push r15	      1105	decNumber.c	FUNCTION_68	FUNCTION_18
0x4004f78	            0x4156	                                push r14	      1105	decNumber.c	FUNCTION_68	FUNCTION_18
0x4004f7a	            0x4155	                                push r13	      1105	decNumber.c	FUNCTION_68	FUNCTION_18
0x4004f7c	            0x4154	                                push r12	      1105	decNumber.c	FUNCTION_68	FUNCTION_18
0x4004f7e	              0x55	                                push rbp	      1105	decNumber.c	FUNCTION_68	FUNCTION_18
0x4004f7f	              0x53	                                push rbx	      1105	decNumber.c	FUNCTION_68	FUNCTION_18
0x4004f80	    0x4881eca80000	                           sub rsp, 0xa8	      1105	decNumber.c	FUNCTION_68	FUNCTION_18
0x4004f87	          0x4889fd	                            mov rbp, rdi	      1105	decNumber.c	FUNCTION_68	FUNCTION_18
0x4004f8a	          0x4989f4	                            mov r12, rsi	      1105	decNumber.c	FUNCTION_68	FUNCTION_18
0x4004f8d	          0x4989d5	                            mov r13, rdx	      1105	decNumber.c	FUNCTION_68	FUNCTION_18
0x4004f90	          0x4989cf	                            mov r15, rcx	      1105	decNumber.c	FUNCTION_68	FUNCTION_18
0x4004f93	          0x4c89c3	                             mov rbx, r8	      1105	decNumber.c	FUNCTION_68	FUNCTION_18
0x4004f96	    0x64488b042528	                mov rax, qword fs:[0x28]	      1105	decNumber.c	FUNCTION_68	FUNCTION_18
0x4004f9f	    0x488984249800	             mov qword [rsp + 0x98], rax	      1105	decNumber.c	FUNCTION_68	FUNCTION_18
0x4004fa7	            0x31c0	                            xor eax, eax	      1105	decNumber.c	FUNCTION_68	FUNCTION_18
0x4004fa9	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      1106	decNumber.c	FUNCTION_68	FUNCTION_18
0x4004fb1	        0xf6460870	               test byte [rsi + 8], 0x70	      1126	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_5
0x4004fb5	            0x751e	                           jne 0x4004fd5	      1126	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_5
0x4004fb7	      0x488d54241c	                   lea rdx, [rsp + 0x1c]	      1126	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_5
0x4004fbc	          0x4c89c6	                             mov rsi, r8	      1126	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_5
0x4004fbf	          0x4c89e7	                            mov rdi, r12	      1126	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_5
0x4004fc2	      0xe87dbbffff	                   call sym.decCheckMath	      1126	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_5
0x4004fc7	    0x41be00000000	                             mov r14d, 0	      1110	decNumber.c	FUNCTION_68	FUNCTION_18
0x4004fcd	            0x85c0	                           test eax, eax	      1126	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_5
0x4004fcf	     0xf855f010000	                           jne 0x4005134	      1126	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_5
0x4004fd5	      0x41f6450870	               test byte [r13 + 8], 0x70	      1127	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_7
0x4004fda	            0x751e	                           jne 0x4004ffa	      1127	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_7
0x4004fdc	      0x488d54241c	                   lea rdx, [rsp + 0x1c]	      1127	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_7
0x4004fe1	          0x4889de	                            mov rsi, rbx	      1127	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_7
0x4004fe4	          0x4c89ef	                            mov rdi, r13	      1127	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_7
0x4004fe7	      0xe858bbffff	                   call sym.decCheckMath	      1127	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_7
0x4004fec	    0x41be00000000	                             mov r14d, 0	      1110	decNumber.c	FUNCTION_68	FUNCTION_18
0x4004ff2	            0x85c0	                           test eax, eax	      1127	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_7
0x4004ff4	     0xf853a010000	                           jne 0x4005134	      1127	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_7
0x4004ffa	      0x41f6470870	               test byte [r15 + 8], 0x70	      1128	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_9
0x4004fff	            0x751e	                           jne 0x400501f	      1128	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_9
0x4005001	      0x488d54241c	                   lea rdx, [rsp + 0x1c]	      1128	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_9
0x4005006	          0x4889de	                            mov rsi, rbx	      1128	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_9
0x4005009	          0x4c89ff	                            mov rdi, r15	      1128	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_9
0x400500c	      0xe833bbffff	                   call sym.decCheckMath	      1128	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_9
0x4005011	    0x41be00000000	                             mov r14d, 0	      1110	decNumber.c	FUNCTION_68	FUNCTION_18
0x4005017	            0x85c0	                           test eax, eax	      1128	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_9
0x4005019	     0xf8515010000	                           jne 0x4005134	      1128	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_9
0x400501f	        0x488b4308	                mov rax, qword [rbx + 8]	      1130	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1
0x4005023	      0x4889442428	             mov qword [rsp + 0x28], rax	      1130	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1
0x4005028	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1130	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1
0x400502c	      0x4889442430	             mov qword [rsp + 0x30], rax	      1130	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1
0x4005031	          0x8b4318	            mov eax, dword [rbx + 0x18] 	      1130	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1
0x4005034	        0x89442438	             mov dword [rsp + 0x38], eax	      1130	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1
0x4005038	        0x418b4500	                    mov eax, dword [r13]	      1131	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1
0x400503c	        0x41030424	                    add eax, dword [r12]	      1131	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1
0x4005040	        0x89442420	             mov dword [rsp + 0x20], eax	      1131	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1
0x4005044	    0xc7442424ffc9	     mov dword [rsp + 0x24], 0x3b9ac9ff 	      1133	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1
0x400504c	    0xc74424280136	     mov dword [rsp + 0x28], 0xc4653601 	      1134	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1
0x4005054	          0x83f831	                           cmp eax, 0x31	      1137	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_10
0x4005057	            0x7f0f	                            jg 0x4005068	      1137	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_10
0x4005059	            0x4898	                                    cdqe	      1137	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_10
0x400505b	     0xfb680000000	                   movzx eax, byte [rax]	      1137	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_10
0x4005062	        0x8d7c000a	              lea edi, [rax + rax + 0xa]	      1137	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_10
0x4005066	            0xeb17	                           jmp 0x400507f	      1137	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_10
0x4005068	          0x8d4802	                      lea ecx, [rax + 2]	      1137	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_10
0x400506b	      0xba56555555	                     mov edx, 0x55555556	      1137	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_10
0x4005070	            0x89c8	                            mov eax, ecx	      1137	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_10
0x4005072	            0xf7ea	                                imul edx	      1137	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_10
0x4005074	            0x89c8	                            mov eax, ecx	      1137	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_10
0x4005076	          0xc1f81f	                           sar eax, 0x1f	      1137	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_10
0x4005079	            0x29c2	                            sub edx, eax	      1137	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_10
0x400507b	        0x8d7c120a	              lea edi, [rdx + rdx + 0xa]	      1137	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_10
0x400507f	          0x83ff3c	                           cmp edi, 0x3c	      1138	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_5
0x4005082	            0x761e	                           jbe 0x40050a2	      1138	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_5
0x4005084	            0x89ff	                            mov edi, edi	      1139	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_5
0x4005086	      0xe800000000	                          call 0x400508b	      1139	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_5
0x400508b	          0x4989c6	                            mov r14, rax	      1139	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_5
0x400508e	      0x4889442408	                mov qword [rsp + 8], rax	      1143	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_5
0x4005093	          0x4885c0	                           test rax, rax	      1140	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_5	IF_6
0x4005096	            0x751a	                           jne 0x40050b2	      1140	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_5	IF_6
0x4005098	      0x834c241c10	             or dword [rsp + 0x1c], 0x10	      1141	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_5	IF_6
0x400509d	      0xe992000000	                           jmp 0x4005134	      1142	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_5	IF_6
0x40050a2	      0x488d442450	                   lea rax, [rsp + 0x50]	      1136	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1
0x40050a7	      0x4889442408	                mov qword [rsp + 8], rax	      1136	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1
0x40050ac	    0x41be00000000	                             mov r14d, 0	      1110	decNumber.c	FUNCTION_68	FUNCTION_18
0x40050b2	      0x4c8d44241c	                    lea r8, [rsp + 0x1c]	      1147	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_11
0x40050b7	      0x488d4c2420	                   lea rcx, [rsp + 0x20]	      1147	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_11
0x40050bc	          0x4c89ea	                            mov rdx, r13	      1147	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_11
0x40050bf	          0x4c89e6	                            mov rsi, r12	      1147	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_11
0x40050c2	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1147	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_11
0x40050c7	      0xe87de5ffff	                  call sym.decMultiplyOp	      1147	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_11
0x40050cc	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	      1154	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_7
0x40050d0	            0xa880	                           test al, 0x80	      1154	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_7
0x40050d2	            0x7442	                            je 0x4005116	      1154	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_7
0x40050d4	      0xa900000040	                    test eax, 0x40000000	      1155	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_7	IF_8
0x40050d9	            0x751a	                           jne 0x40050f5	      1155	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_7	IF_8
0x40050db	    0xc74504000000	                  mov dword [rbp + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x40050e2	    0xc74500010000	                      mov dword [rbp], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x40050e9	    0x66c7450a0000	                 mov word [rbp + 0xa], 0	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x40050ef	        0xc6450820	                mov byte [rbp + 8], 0x20	      1157	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_7	IF_8
0x40050f3	            0xeb3f	                           jmp 0x4005134	      1158	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_7	IF_8
0x40050f5	      0xc644244800	                mov byte [rsp + 0x48], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x40050fa	    0xc74424440000	               mov dword [rsp + 0x44], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4005102	    0xc74424400100	               mov dword [rsp + 0x40], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x400510a	    0x66c744244a00	                mov word [rsp + 0x4a], 0	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4005111	      0x4c8d7c2440	                   lea r15, [rsp + 0x40]	      1161	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_7
0x4005116	      0x4c8d4c241c	                    lea r9, [rsp + 0x1c]	      1169	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_15
0x400511b	    0x41b800000000	                              mov r8d, 0	      1169	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_15
0x4005121	          0x4889d9	                            mov rcx, rbx	      1169	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_15
0x4005124	          0x4c89fa	                            mov rdx, r15	      1169	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_15
0x4005127	      0x488b742408	                mov rsi, qword [rsp + 8]	      1169	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_15
0x400512c	          0x4889ef	                            mov rdi, rbp	      1169	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_15
0x400512f	      0xe858f5ffff	                       call sym.decAddOp	      1169	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_15
0x4005134	          0x4c89f7	                            mov rdi, r14	      1172	decNumber.c	FUNCTION_68	FUNCTION_18
0x4005137	      0xe800000000	                          call 0x400513c	      1172	decNumber.c	FUNCTION_68	FUNCTION_18
0x400513c	        0x8b74241c	            mov esi, dword [rsp + 0x1c] 	      1173	decNumber.c	FUNCTION_68	FUNCTION_18	CALL_16
0x4005140	            0x85f6	                           test esi, esi	      1173	decNumber.c	FUNCTION_68	FUNCTION_18	CALL_16
0x4005142	            0x740b	                            je 0x400514f	      1173	decNumber.c	FUNCTION_68	FUNCTION_18	CALL_16
0x4005144	          0x4889da	                            mov rdx, rbx	      1173	decNumber.c	FUNCTION_68	FUNCTION_18	CALL_16
0x4005147	          0x4889ef	                            mov rdi, rbp	      1173	decNumber.c	FUNCTION_68	FUNCTION_18	CALL_16
0x400514a	      0xe8cdc4ffff	                      call sym.decStatus	      1173	decNumber.c	FUNCTION_68	FUNCTION_18	CALL_16
0x400514f	          0x4889e8	                            mov rax, rbp	      1178	decNumber.c	FUNCTION_68	FUNCTION_18
0x4005152	    0x488b8c249800	            mov rcx, qword [rsp + 0x98] 	      1178	decNumber.c	FUNCTION_68	FUNCTION_18
0x400515a	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1178	decNumber.c	FUNCTION_68	FUNCTION_18
0x4005163	            0x7405	                            je 0x400516a	      1178	decNumber.c	FUNCTION_68	FUNCTION_18
0x4005165	      0xe800000000	                          call 0x400516a	      1178	decNumber.c	FUNCTION_68	FUNCTION_18
0x400516a	    0x4881c4a80000	                           add rsp, 0xa8	      1178	decNumber.c	FUNCTION_68	FUNCTION_18
0x4005171	              0x5b	                                 pop rbx	      1178	decNumber.c	FUNCTION_68	FUNCTION_18
0x4005172	              0x5d	                                 pop rbp	      1178	decNumber.c	FUNCTION_68	FUNCTION_18
0x4005173	            0x415c	                                 pop r12	      1178	decNumber.c	FUNCTION_68	FUNCTION_18
0x4005175	            0x415d	                                 pop r13	      1178	decNumber.c	FUNCTION_68	FUNCTION_18
0x4005177	            0x415e	                                 pop r14	      1178	decNumber.c	FUNCTION_68	FUNCTION_18
0x4005179	            0x415f	                                 pop r15	      1178	decNumber.c	FUNCTION_68	FUNCTION_18
0x400517b	              0xc3	                                     ret	      1178	decNumber.c	FUNCTION_68	FUNCTION_18
decNumberFromInt32	SWITCH,0:functions,0:ELSE,2:DO,0:FOR,0:IF,3:CALL,1:WHILE,0	16
0x4001ca7	              0x53	                                push rbx	       345	decNumber.c	FUNCTION_68	FUNCTION_1
0x4001ca8	          0x4889fb	                            mov rbx, rdi	       345	decNumber.c	FUNCTION_68	FUNCTION_1
0x4001cab	            0x85f6	                           test esi, esi	       347	decNumber.c	FUNCTION_68	FUNCTION_1	IF_1
0x4001cad	            0x7807	                            js 0x4001cb6	       347	decNumber.c	FUNCTION_68	FUNCTION_1	IF_1
0x4001caf	      0xe800000000	                          call 0x4001cb4	       353	decNumber.c	FUNCTION_68	FUNCTION_1	CALL_1
0x4001cb4	            0xeb1b	                           jmp 0x4001cd1	       353	decNumber.c	FUNCTION_68	FUNCTION_1	CALL_1
0x4001cb6	            0x89f0	                            mov eax, esi	       350	decNumber.c	FUNCTION_68	FUNCTION_1	ELSE_1	ELSE_2
0x4001cb8	            0xf7d8	                                 neg eax	       350	decNumber.c	FUNCTION_68	FUNCTION_1	ELSE_1	ELSE_2
0x4001cba	    0x81fe00000080	                     cmp esi, 0x80000000	       350	decNumber.c	FUNCTION_68	FUNCTION_1	ELSE_1	ELSE_2
0x4001cc0	      0xbe00000080	                     mov esi, 0x80000000	       350	decNumber.c	FUNCTION_68	FUNCTION_1	ELSE_1	ELSE_2
0x4001cc5	           0xf45f0	                         cmovne esi, eax	       350	decNumber.c	FUNCTION_68	FUNCTION_1	ELSE_1	ELSE_2
0x4001cc8	      0xe800000000	                          call 0x4001ccd	       353	decNumber.c	FUNCTION_68	FUNCTION_1	CALL_1
0x4001ccd	        0xc6430880	                mov byte [rbx + 8], 0x80	       354	decNumber.c	FUNCTION_68	FUNCTION_1	IF_3
0x4001cd1	          0x4889d8	                            mov rax, rbx	       356	decNumber.c	FUNCTION_68	FUNCTION_1
0x4001cd4	              0x5b	                                 pop rbx	       356	decNumber.c	FUNCTION_68	FUNCTION_1
0x4001cd5	              0xc3	                                     ret	       356	decNumber.c	FUNCTION_68	FUNCTION_1
decNumberLogB	SWITCH,0:functions,0:ELSE,3:DO,0:FOR,0:IF,5:CALL,9:WHILE,0	55
0x4008a4f	              0x55	                                push rbp	      1334	decNumber.c	FUNCTION_68	FUNCTION_21
0x4008a50	              0x53	                                push rbx	      1334	decNumber.c	FUNCTION_68	FUNCTION_21
0x4008a51	        0x4883ec18	                           sub rsp, 0x18	      1334	decNumber.c	FUNCTION_68	FUNCTION_21
0x4008a55	          0x4889fb	                            mov rbx, rdi	      1334	decNumber.c	FUNCTION_68	FUNCTION_21
0x4008a58	          0x4889d5	                            mov rbp, rdx	      1334	decNumber.c	FUNCTION_68	FUNCTION_21
0x4008a5b	    0x64488b042528	                mov rax, qword fs:[0x28]	      1334	decNumber.c	FUNCTION_68	FUNCTION_21
0x4008a64	      0x4889442408	                mov qword [rsp + 8], rax	      1334	decNumber.c	FUNCTION_68	FUNCTION_21
0x4008a69	            0x31c0	                            xor eax, eax	      1334	decNumber.c	FUNCTION_68	FUNCTION_21
0x4008a6b	    0xc74424040000	                  mov dword [rsp + 4], 0	      1335	decNumber.c	FUNCTION_68	FUNCTION_21
0x4008a73	         0xfb64608	               movzx eax, byte [rsi + 8]	      1342	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_3
0x4008a77	            0xa830	                           test al, 0x30	      1342	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_3
0x4008a79	            0x7414	                            je 0x4008a8f	      1342	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_3
0x4008a7b	      0x4c8d442404	                       lea r8, [rsp + 4]	      1342	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_3
0x4008a80	          0x4889d1	                            mov rcx, rdx	      1342	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_3
0x4008a83	      0xba00000000	                              mov edx, 0	      1342	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_3
0x4008a88	      0xe85fa3ffff	                        call sym.decNaNs	      1342	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_3
0x4008a8d	            0xeb53	                           jmp 0x4008ae2	      1342	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_3
0x4008a8f	            0xa840	                           test al, 0x40	      1343	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_5
0x4008a91	            0x7407	                            je 0x4008a9a	      1343	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_5
0x4008a93	      0xe800000000	                          call 0x4008a98	      1343	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_5
0x4008a98	            0xeb48	                           jmp 0x4008ae2	      1343	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_5
0x4008a9a	      0x66837e0a00	                 cmp word [rsi + 0xa], 0	      1344	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_2	IF_4	CALL_6
0x4008a9f	            0x752f	                           jne 0x4008ad0	      1344	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_2	IF_4	CALL_6
0x4008aa1	          0x833e01	                      cmp dword [rsi], 1	      1344	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_2	IF_4	CALL_6
0x4008aa4	            0x752a	                           jne 0x4008ad0	      1344	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_2	IF_4	CALL_6
0x4008aa6	            0xa870	                           test al, 0x70	      1344	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_2	IF_4	CALL_6
0x4008aa8	            0x7526	                           jne 0x4008ad0	      1344	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_2	IF_4	CALL_6
0x4008aaa	    0xc74704000000	                  mov dword [rdi + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4008ab1	    0xc70701000000	                      mov dword [rdi], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4008ab7	    0x66c7470a0000	                 mov word [rdi + 0xa], 0	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4008abd	        0xc64708c0	                mov byte [rdi + 8], 0xc0	      1346	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_2	IF_4
0x4008ac1	    0xc74424040200	                  mov dword [rsp + 4], 2	      1347	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_2	IF_4
0x4008ac9	      0xbe02000000	                              mov esi, 2	      1354	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_9
0x4008ace	            0xeb1a	                           jmp 0x4008aea	      1354	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_9
0x4008ad0	            0x8b06	                    mov eax, dword [rsi]	      1351	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_3	CALL_8
0x4008ad2	           0x34604	                add eax, dword [rsi + 4]	      1351	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_3	CALL_8
0x4008ad5	            0x89c6	                            mov esi, eax	      1351	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_3	CALL_8
0x4008ad7	          0x83ee01	                              sub esi, 1	      1351	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_3	CALL_8
0x4008ada	          0x4889df	                            mov rdi, rbx	      1351	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_3	CALL_8
0x4008add	      0xe800000000	                          call 0x4008ae2	      1351	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_3	CALL_8
0x4008ae2	        0x8b742404	                mov esi, dword [rsp + 4]	      1354	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_9
0x4008ae6	            0x85f6	                           test esi, esi	      1354	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_9
0x4008ae8	            0x740b	                            je 0x4008af5	      1354	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_9
0x4008aea	          0x4889ea	                            mov rdx, rbp	      1354	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_9
0x4008aed	          0x4889df	                            mov rdi, rbx	      1354	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_9
0x4008af0	      0xe8278bffff	                      call sym.decStatus	      1354	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_9
0x4008af5	          0x4889d8	                            mov rax, rbx	      1356	decNumber.c	FUNCTION_68	FUNCTION_21
0x4008af8	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1356	decNumber.c	FUNCTION_68	FUNCTION_21
0x4008afd	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1356	decNumber.c	FUNCTION_68	FUNCTION_21
0x4008b06	            0x7405	                            je 0x4008b0d	      1356	decNumber.c	FUNCTION_68	FUNCTION_21
0x4008b08	      0xe800000000	                          call 0x4008b0d	      1356	decNumber.c	FUNCTION_68	FUNCTION_21
0x4008b0d	        0x4883c418	                           add rsp, 0x18	      1356	decNumber.c	FUNCTION_68	FUNCTION_21
0x4008b11	              0x5b	                                 pop rbx	      1356	decNumber.c	FUNCTION_68	FUNCTION_21
0x4008b12	              0x5d	                                 pop rbp	      1356	decNumber.c	FUNCTION_68	FUNCTION_21
0x4008b13	              0xc3	                                     ret	      1356	decNumber.c	FUNCTION_68	FUNCTION_21
decNumberClass	SWITCH,0:functions,0:ELSE,0:DO,0:FOR,0:IF,9:CALL,9:WHILE,0	40
0x4008cb6	              0x55	                                push rbp	      3293	decNumber.c	FUNCTION_68	FUNCTION_50
0x4008cb7	              0x53	                                push rbx	      3293	decNumber.c	FUNCTION_68	FUNCTION_50
0x4008cb8	         0xfb66f08	               movzx ebp, byte [rdi + 8]	      3294	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1	CALL_1
0x4008cbc	        0x40f6c570	                          test bpl, 0x70	      3294	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1	CALL_1
0x4008cc0	            0x7425	                            je 0x4008ce7	      3294	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1	CALL_1
0x4008cc2	      0xb801000000	                              mov eax, 1	      3295	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1	CALL_2
0x4008cc7	        0x40f6c520	                          test bpl, 0x20	      3295	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1	CALL_2
0x4008ccb	            0x755a	                           jne 0x4008d27	      3295	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1	CALL_2
0x4008ccd	      0xb800000000	                              mov eax, 0	      3296	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1	CALL_3
0x4008cd2	        0x40f6c510	                          test bpl, 0x10	      3296	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1	CALL_3
0x4008cd6	            0x754f	                           jne 0x4008d27	      3296	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1	CALL_3
0x4008cd8	        0x400fbec5	                          movsx eax, bpl	      3299	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1
0x4008cdc	          0xc1f81f	                           sar eax, 0x1f	      3299	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1
0x4008cdf	          0x83e0f9	                     and eax, 0xfffffff9	      3299	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1
0x4008ce2	          0x83c009	                              add eax, 9	      3299	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1
0x4008ce5	            0xeb40	                           jmp 0x4008d27	      3299	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1
0x4008ce7	          0x4889fb	                            mov rbx, rdi	      3299	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1
0x4008cea	      0xe800000000	                          call 0x4008cef	      3302	decNumber.c	FUNCTION_68	FUNCTION_50	IF_5	CALL_5
0x4008cef	            0x85c0	                           test eax, eax	      3302	decNumber.c	FUNCTION_68	FUNCTION_50	IF_5	CALL_5
0x4008cf1	            0x740f	                            je 0x4008d02	      3302	decNumber.c	FUNCTION_68	FUNCTION_50	IF_5	CALL_5
0x4008cf3	        0x400fbec5	                          movsx eax, bpl	      3304	decNumber.c	FUNCTION_68	FUNCTION_50	IF_5
0x4008cf7	          0xc1f81f	                           sar eax, 0x1f	      3304	decNumber.c	FUNCTION_68	FUNCTION_50	IF_5
0x4008cfa	          0x83e0fb	                     and eax, 0xfffffffb	      3304	decNumber.c	FUNCTION_68	FUNCTION_50	IF_5
0x4008cfd	          0x83c008	                              add eax, 8	      3304	decNumber.c	FUNCTION_68	FUNCTION_50	IF_5
0x4008d00	            0xeb25	                           jmp 0x4008d27	      3304	decNumber.c	FUNCTION_68	FUNCTION_50	IF_5
0x4008d02	      0x66837b0a00	                 cmp word [rbx + 0xa], 0	      3307	decNumber.c	FUNCTION_68	FUNCTION_50	IF_7	CALL_7
0x4008d07	            0x7511	                           jne 0x4008d1a	      3307	decNumber.c	FUNCTION_68	FUNCTION_50	IF_7	CALL_7
0x4008d09	          0x833b01	                      cmp dword [rbx], 1	      3307	decNumber.c	FUNCTION_68	FUNCTION_50	IF_7	CALL_7
0x4008d0c	            0x750c	                           jne 0x4008d1a	      3307	decNumber.c	FUNCTION_68	FUNCTION_50	IF_7	CALL_7
0x4008d0e	        0x400fbec5	                          movsx eax, bpl	      3309	decNumber.c	FUNCTION_68	FUNCTION_50	IF_7
0x4008d12	          0xc1f81f	                           sar eax, 0x1f	      3309	decNumber.c	FUNCTION_68	FUNCTION_50	IF_7
0x4008d15	          0x83c006	                              add eax, 6	      3309	decNumber.c	FUNCTION_68	FUNCTION_50	IF_7
0x4008d18	            0xeb0d	                           jmp 0x4008d27	      3309	decNumber.c	FUNCTION_68	FUNCTION_50	IF_7
0x4008d1a	        0x400fbec5	                          movsx eax, bpl	      3312	decNumber.c	FUNCTION_68	FUNCTION_50
0x4008d1e	          0xc1f81f	                           sar eax, 0x1f	      3312	decNumber.c	FUNCTION_68	FUNCTION_50
0x4008d21	          0x83e0fd	                     and eax, 0xfffffffd	      3312	decNumber.c	FUNCTION_68	FUNCTION_50
0x4008d24	          0x83c007	                              add eax, 7	      3312	decNumber.c	FUNCTION_68	FUNCTION_50
0x4008d27	              0x5b	                                 pop rbx	      3313	decNumber.c	FUNCTION_68	FUNCTION_50
0x4008d28	              0x5d	                                 pop rbp	      3313	decNumber.c	FUNCTION_68	FUNCTION_50
0x4008d29	              0xc3	                                     ret	      3313	decNumber.c	FUNCTION_68	FUNCTION_50
decUnitAddSub	SWITCH,0:functions,0:ELSE,4:DO,0:FOR,4:IF,31:CALL,2:WHILE,0	232
0x4000040	            0x4157	                                push r15	      6333	decNumber.c	FUNCTION_5
0x4000042	            0x4156	                                push r14	      6333	decNumber.c	FUNCTION_5
0x4000044	            0x4155	                                push r13	      6333	decNumber.c	FUNCTION_5
0x4000046	            0x4154	                                push r12	      6333	decNumber.c	FUNCTION_5
0x4000048	              0x55	                                push rbp	      6333	decNumber.c	FUNCTION_5
0x4000049	              0x53	                                push rbx	      6333	decNumber.c	FUNCTION_5
0x400004a	      0x448b6c2438	           mov r13d, dword [rsp + 0x38] 	      6333	decNumber.c	FUNCTION_5
0x400004f	          0x4863c6	                         movsxd rax, esi	      6349	decNumber.c	FUNCTION_5
0x4000052	          0x4801c0	                            add rax, rax	      6349	decNumber.c	FUNCTION_5
0x4000055	      0x48894424f8	                mov qword [rsp - 8], rax	      6349	decNumber.c	FUNCTION_5
0x400005a	        0x4d8d3401	                     lea r14, [r9 + rax]	      6349	decNumber.c	FUNCTION_5
0x400005e	          0x4863c9	                         movsxd rcx, ecx	      6350	decNumber.c	FUNCTION_5
0x4000061	        0x4d8d2449	                   lea r12, [r9 + rcx*2]	      6350	decNumber.c	FUNCTION_5
0x4000065	          0x4585c0	                           test r8d, r8d	      6351	decNumber.c	FUNCTION_5	IF_2
0x4000068	            0x7479	                            je 0x40000e3	      6351	decNumber.c	FUNCTION_5	IF_2
0x400006a	          0x4963c8	                         movsxd rcx, r8d	      6352	decNumber.c	FUNCTION_5	IF_2
0x400006d	          0x4801c9	                            add rcx, rcx	      6352	decNumber.c	FUNCTION_5	IF_2
0x4000070	          0x4901cc	                            add r12, rcx	      6352	decNumber.c	FUNCTION_5	IF_2
0x4000073	          0x4c39cf	                             cmp rdi, r9	      6354	decNumber.c	FUNCTION_5	IF_2	IF_3
0x4000076	            0x7514	                           jne 0x400008c	      6354	decNumber.c	FUNCTION_5	IF_2	IF_3
0x4000078	          0x4439c6	                            cmp esi, r8d	      6354	decNumber.c	FUNCTION_5	IF_2	IF_3
0x400007b	        0x400f9dc6	                               setge sil	      6354	decNumber.c	FUNCTION_5	IF_2	IF_3
0x400007f	        0x498d0409	                     lea rax, [r9 + rcx]	      6355	decNumber.c	FUNCTION_5	IF_2	IF_3
0x4000083	        0x488d2c0f	                    lea rbp, [rdi + rcx]	      6356	decNumber.c	FUNCTION_5	IF_2	IF_3
0x4000087	          0x4084f6	                           test sil, sil	      6354	decNumber.c	FUNCTION_5	IF_2	IF_3
0x400008a	            0x755d	                           jne 0x40000e9	      6354	decNumber.c	FUNCTION_5	IF_2	IF_3
0x400008c	        0x498d3409	                     lea rsi, [r9 + rcx]	      6358	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1
0x4000090	          0x4c89c8	                             mov rax, r9	      6358	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1
0x4000093	          0x4889f9	                            mov rcx, rdi	      6358	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1
0x4000096	      0x488b5c24f8	                mov rbx, qword [rsp - 8]	      6359	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1	IF_4
0x400009b	        0x4c8d041f	                     lea r8, [rdi + rbx]	      6359	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1	IF_4
0x400009f	          0x4889fd	                            mov rbp, rdi	      6358	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1
0x40000a2	          0x4939f1	                             cmp r9, rsi	      6358	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1
0x40000a5	            0x7342	                           jae 0x40000e9	      6358	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1
0x40000a7	          0x4c39c1	                             cmp rcx, r8	      6359	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1	IF_4
0x40000aa	            0x730a	                           jae 0x40000b6	      6359	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1	IF_4
0x40000ac	        0x440fb711	                  movzx r10d, word [rcx]	      6359	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1	IF_4
0x40000b0	        0x66448910	                    mov word [rax], r10w	      6359	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1	IF_4
0x40000b4	            0xeb05	                           jmp 0x40000bb	      6359	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1	IF_4
0x40000b6	      0x66c7000000	                       mov word [rax], 0	      6360	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1	ELSE_2
0x40000bb	        0x4883c102	                              add rcx, 2	      6358	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1
0x40000bf	        0x4883c002	                              add rax, 2	      6358	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1
0x40000c3	          0x4839f0	                            cmp rax, rsi	      6358	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1
0x40000c6	            0x72df	                            jb 0x40000a7	      6358	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1
0x40000c8	          0x4c89c8	                             mov rax, r9	      6358	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1
0x40000cb	          0x48f7d0	                                 not rax	      6358	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1
0x40000ce	        0x488d0430	                    lea rax, [rax + rsi]	      6358	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1
0x40000d2	          0x48d1e8	                              shr rax, 1	      6358	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1
0x40000d5	      0x488d440002	                lea rax, [rax + rax + 2]	      6358	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1
0x40000da	        0x488d2c07	                    lea rbp, [rdi + rax]	      6358	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1
0x40000de	          0x4c01c8	                             add rax, r9	      6358	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1
0x40000e1	            0xeb06	                           jmp 0x40000e9	      6358	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1
0x40000e3	          0x4c89c8	                             mov rax, r9	      6358	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1
0x40000e6	          0x4889fd	                            mov rbp, rdi	      6358	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1
0x40000e9	          0x4d39f4	                            cmp r12, r14	      6363	decNumber.c	FUNCTION_5	ELSE_2	IF_5
0x40000ec	            0x7609	                           jbe 0x40000f7	      6363	decNumber.c	FUNCTION_5	ELSE_2	IF_5
0x40000ee	          0x4c89e1	                            mov rcx, r12	      6363	decNumber.c	FUNCTION_5	ELSE_2	IF_5
0x40000f1	          0x4d89f4	                            mov r12, r14	      6365	decNumber.c	FUNCTION_5	ELSE_2	IF_5
0x40000f4	          0x4989ce	                            mov r14, rcx	      6366	decNumber.c	FUNCTION_5	ELSE_2	IF_5
0x40000f7	          0x4c39e0	                            cmp rax, r12	      6373	decNumber.c	FUNCTION_5	FOR_2
0x40000fa	     0xf832d020000	                           jae 0x400032d	      6373	decNumber.c	FUNCTION_5	FOR_2
0x4000100	          0x4989c0	                             mov r8, rax	      6373	decNumber.c	FUNCTION_5	FOR_2
0x4000103	          0x4989d3	                            mov r11, rdx	      6373	decNumber.c	FUNCTION_5	FOR_2
0x4000106	          0x4989ea	                            mov r10, rbp	      6373	decNumber.c	FUNCTION_5	FOR_2
0x4000109	      0xbe00000000	                              mov esi, 0	      6373	decNumber.c	FUNCTION_5	FOR_2
0x400010e	        0x410fb70a	                   movzx ecx, word [r10]	      6374	decNumber.c	FUNCTION_5	FOR_2
0x4000112	             0x1ce	                            add esi, ecx	      6374	decNumber.c	FUNCTION_5	FOR_2
0x4000114	        0x4983c202	                              add r10, 2	      6375	decNumber.c	FUNCTION_5	FOR_2
0x4000118	        0x410fb70b	                   movzx ecx, word [r11]	      6376	decNumber.c	FUNCTION_5	FOR_2
0x400011c	        0x410fafcd	                          imul ecx, r13d	      6376	decNumber.c	FUNCTION_5	FOR_2
0x4000120	             0x1f1	                            add ecx, esi	      6376	decNumber.c	FUNCTION_5	FOR_2
0x4000122	        0x4983c302	                              add r11, 2	      6377	decNumber.c	FUNCTION_5	FOR_2
0x4000126	    0x81f9e7030000	                          cmp ecx, 0x3e7	      6379	decNumber.c	FUNCTION_5	FOR_2	IF_6
0x400012c	            0x770b	                            ja 0x4000139	      6379	decNumber.c	FUNCTION_5	FOR_2	IF_6
0x400012e	        0x66418908	                       mov word [r8], cx	      6380	decNumber.c	FUNCTION_5	FOR_2	IF_6
0x4000132	      0xbe00000000	                              mov esi, 0	      6381	decNumber.c	FUNCTION_5	FOR_2	IF_6
0x4000137	            0xeb75	                           jmp 0x40001ae	      6382	decNumber.c	FUNCTION_5	FOR_2	IF_6
0x4000139	            0x85c9	                           test ecx, ecx	      6403	decNumber.c	FUNCTION_5	FOR_2	IF_10
0x400013b	            0x7834	                            js 0x4000171	      6403	decNumber.c	FUNCTION_5	FOR_2	IF_10
0x400013d	            0x89cb	                            mov ebx, ecx	      6404	decNumber.c	FUNCTION_5	FOR_2	IF_10
0x400013f	          0xc1eb03	                              shr ebx, 3	      6404	decNumber.c	FUNCTION_5	FOR_2	IF_10
0x4000142	    0x69db89410000	                   imul ebx, ebx, 0x4189	      6404	decNumber.c	FUNCTION_5	FOR_2	IF_10
0x4000148	          0xc1eb15	                           shr ebx, 0x15	      6404	decNumber.c	FUNCTION_5	FOR_2	IF_10
0x400014b	            0x89de	                            mov esi, ebx	      6404	decNumber.c	FUNCTION_5	FOR_2	IF_10
0x400014d	    0x664469fbe803	                    imul r15w, bx, 0x3e8	      6405	decNumber.c	FUNCTION_5	FOR_2	IF_10
0x4000153	          0x4429f9	                           sub ecx, r15d	      6405	decNumber.c	FUNCTION_5	FOR_2	IF_10
0x4000156	      0x6681f9e703	                           cmp cx, 0x3e7	      6407	decNumber.c	FUNCTION_5	FOR_2	IF_10	IF_11
0x400015b	            0x7706	                            ja 0x4000163	      6407	decNumber.c	FUNCTION_5	FOR_2	IF_10	IF_11
0x400015d	        0x66418908	                       mov word [r8], cx	      6405	decNumber.c	FUNCTION_5	FOR_2	IF_10
0x4000161	            0xeb4b	                           jmp 0x40001ae	      6405	decNumber.c	FUNCTION_5	FOR_2	IF_10
0x4000163	          0x8d7301	                      lea esi, [rbx + 1]	      6408	decNumber.c	FUNCTION_5	FOR_2	IF_10
0x4000166	      0x6681e9e803	                           sub cx, 0x3e8	      6409	decNumber.c	FUNCTION_5	FOR_2	IF_10
0x400016b	        0x66418908	                       mov word [r8], cx	      6409	decNumber.c	FUNCTION_5	FOR_2	IF_10
0x400016f	            0xeb3d	                           jmp 0x40001ae	      6410	decNumber.c	FUNCTION_5	FOR_2	IF_10
0x4000171	    0x81c140420f00	                        add ecx, 0xf4240	      6413	decNumber.c	FUNCTION_5	FOR_2
0x4000177	            0x89ce	                            mov esi, ecx	      6414	decNumber.c	FUNCTION_5	FOR_2
0x4000179	          0xc1ee03	                              shr esi, 3	      6414	decNumber.c	FUNCTION_5	FOR_2
0x400017c	    0x69f689410000	                   imul esi, esi, 0x4189	      6414	decNumber.c	FUNCTION_5	FOR_2
0x4000182	          0xc1ee15	                           shr esi, 0x15	      6414	decNumber.c	FUNCTION_5	FOR_2
0x4000185	      0x6669dee803	                      imul bx, si, 0x3e8	      6415	decNumber.c	FUNCTION_5	FOR_2
0x400018a	            0x29d9	                            sub ecx, ebx	      6415	decNumber.c	FUNCTION_5	FOR_2
0x400018c	      0x6681f9e703	                           cmp cx, 0x3e7	      6417	decNumber.c	FUNCTION_5	FOR_2	IF_12
0x4000191	            0x770c	                            ja 0x400019f	      6417	decNumber.c	FUNCTION_5	FOR_2	IF_12
0x4000193	        0x66418908	                       mov word [r8], cx	      6415	decNumber.c	FUNCTION_5	FOR_2
0x4000197	    0x81eee8030000	                          sub esi, 0x3e8	      6416	decNumber.c	FUNCTION_5	FOR_2
0x400019d	            0xeb0f	                           jmp 0x40001ae	      6416	decNumber.c	FUNCTION_5	FOR_2
0x400019f	    0x81eee7030000	                          sub esi, 0x3e7	      6418	decNumber.c	FUNCTION_5	FOR_2
0x40001a5	      0x6681e9e803	                           sub cx, 0x3e8	      6419	decNumber.c	FUNCTION_5	FOR_2
0x40001aa	        0x66418908	                       mov word [r8], cx	      6419	decNumber.c	FUNCTION_5	FOR_2
0x40001ae	        0x4983c002	                               add r8, 2	      6373	decNumber.c	FUNCTION_5	FOR_2
0x40001b2	          0x4d39c4	                             cmp r12, r8	      6373	decNumber.c	FUNCTION_5	FOR_2
0x40001b5	     0xf8753ffffff	                            ja 0x400010e	      6373	decNumber.c	FUNCTION_5	FOR_2
0x40001bb	          0x4889c1	                            mov rcx, rax	      6373	decNumber.c	FUNCTION_5	FOR_2
0x40001be	          0x48f7d1	                                 not rcx	      6373	decNumber.c	FUNCTION_5	FOR_2
0x40001c1	          0x4901cc	                            add r12, rcx	      6373	decNumber.c	FUNCTION_5	FOR_2
0x40001c4	          0x49d1ec	                              shr r12, 1	      6373	decNumber.c	FUNCTION_5	FOR_2
0x40001c7	      0x4b8d4c2402	                lea rcx, [r12 + r12 + 2]	      6373	decNumber.c	FUNCTION_5	FOR_2
0x40001cc	          0x4801cd	                            add rbp, rcx	      6373	decNumber.c	FUNCTION_5	FOR_2
0x40001cf	          0x4801ca	                            add rdx, rcx	      6373	decNumber.c	FUNCTION_5	FOR_2
0x40001d2	          0x4801c8	                            add rax, rcx	      6373	decNumber.c	FUNCTION_5	FOR_2
0x40001d5	          0x4939c6	                            cmp r14, rax	      6454	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x40001d8	     0xf86c0000000	                           jbe 0x400029e	      6454	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x40001de	            0xeb05	                           jmp 0x40001e5	      6454	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x40001e0	      0xbe00000000	                              mov esi, 0	      6454	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x40001e5	      0x48037c24f8	                add rdi, qword [rsp - 8]	      6455	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_17
0x40001ea	          0x4839fd	                            cmp rbp, rdi	      6455	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_17
0x40001ed	            0x730c	                           jae 0x40001fb	      6455	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_17
0x40001ef	         0xfb74d00	                   movzx ecx, word [rbp]	      6456	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_17
0x40001f3	             0x1f1	                            add ecx, esi	      6456	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_17
0x40001f5	        0x4883c502	                              add rbp, 2	      6457	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_17
0x40001f9	            0xeb0d	                           jmp 0x4000208	      6457	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_17
0x40001fb	           0xfb70a	                   movzx ecx, word [rdx]	      6460	decNumber.c	FUNCTION_5	IF_16	FOR_3	ELSE_3
0x40001fe	        0x410fafcd	                          imul ecx, r13d	      6460	decNumber.c	FUNCTION_5	IF_16	FOR_3	ELSE_3
0x4000202	             0x1f1	                            add ecx, esi	      6460	decNumber.c	FUNCTION_5	IF_16	FOR_3	ELSE_3
0x4000204	        0x4883c202	                              add rdx, 2	      6461	decNumber.c	FUNCTION_5	IF_16	FOR_3	ELSE_3
0x4000208	            0x89ce	                            mov esi, ecx	      6465	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_18
0x400020a	    0x81f9e7030000	                          cmp ecx, 0x3e7	      6465	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_18
0x4000210	            0x770a	                            ja 0x400021c	      6465	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_18
0x4000212	          0x668908	                      mov word [rax], cx	      6466	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_18
0x4000215	      0xbe00000000	                              mov esi, 0	      6467	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_18
0x400021a	            0xeb75	                           jmp 0x4000291	      6468	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_18
0x400021c	            0x85c9	                           test ecx, ecx	      6490	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_22
0x400021e	            0x7834	                            js 0x4000254	      6490	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_22
0x4000220	          0xc1ee03	                              shr esi, 3	      6491	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_22
0x4000223	    0x4469c6894100	                   imul r8d, esi, 0x4189	      6491	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_22
0x400022a	        0x41c1e815	                           shr r8d, 0x15	      6491	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_22
0x400022e	          0x4489c6	                            mov esi, r8d	      6491	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_22
0x4000231	    0x664569d0e803	                   imul r10w, r8w, 0x3e8	      6492	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_22
0x4000237	          0x4429d1	                           sub ecx, r10d	      6492	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_22
0x400023a	      0x6681f9e703	                           cmp cx, 0x3e7	      6494	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_22	IF_23
0x400023f	            0x7705	                            ja 0x4000246	      6494	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_22	IF_23
0x4000241	          0x668908	                      mov word [rax], cx	      6492	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_22
0x4000244	            0xeb4b	                           jmp 0x4000291	      6492	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_22
0x4000246	        0x418d7001	                       lea esi, [r8 + 1]	      6495	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_22
0x400024a	      0x6681e9e803	                           sub cx, 0x3e8	      6496	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_22
0x400024f	          0x668908	                      mov word [rax], cx	      6496	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_22
0x4000252	            0xeb3d	                           jmp 0x4000291	      6497	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_22
0x4000254	    0x81c140420f00	                        add ecx, 0xf4240	      6500	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x400025a	            0x89ce	                            mov esi, ecx	      6501	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x400025c	          0xc1ee03	                              shr esi, 3	      6501	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x400025f	    0x69f689410000	                   imul esi, esi, 0x4189	      6501	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x4000265	          0xc1ee15	                           shr esi, 0x15	      6501	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x4000268	    0x664469c6e803	                     imul r8w, si, 0x3e8	      6502	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x400026e	          0x4429c1	                            sub ecx, r8d	      6502	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x4000271	      0x6681f9e703	                           cmp cx, 0x3e7	      6504	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_24
0x4000276	            0x770b	                            ja 0x4000283	      6504	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_24
0x4000278	          0x668908	                      mov word [rax], cx	      6502	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x400027b	    0x81eee8030000	                          sub esi, 0x3e8	      6503	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x4000281	            0xeb0e	                           jmp 0x4000291	      6503	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x4000283	    0x81eee7030000	                          sub esi, 0x3e7	      6505	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x4000289	      0x6681e9e803	                           sub cx, 0x3e8	      6506	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x400028e	          0x668908	                      mov word [rax], cx	      6506	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x4000291	        0x4883c002	                              add rax, 2	      6454	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x4000295	          0x4939c6	                            cmp r14, rax	      6454	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x4000298	     0xf874cffffff	                            ja 0x40001ea	      6454	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x400029e	            0x85f6	                           test esi, esi	      6540	decNumber.c	FUNCTION_5	IF_28
0x40002a0	            0x750b	                           jne 0x40002ad	      6540	decNumber.c	FUNCTION_5	IF_28
0x40002a2	          0x4c29c8	                             sub rax, r9	      6540	decNumber.c	FUNCTION_5	IF_28
0x40002a5	          0x48d1e8	                              shr rax, 1	      6540	decNumber.c	FUNCTION_5	IF_28
0x40002a8	      0xe98e000000	                           jmp 0x400033b	      6540	decNumber.c	FUNCTION_5	IF_28
0x40002ad	            0x85f6	                           test esi, esi	      6541	decNumber.c	FUNCTION_5	IF_29
0x40002af	            0x7f0f	                            jg 0x40002c0	      6541	decNumber.c	FUNCTION_5	IF_29
0x40002b1	          0x4c89ca	                             mov rdx, r9	      6548	decNumber.c	FUNCTION_5	FOR_4
0x40002b4	      0xb801000000	                              mov eax, 1	      6548	decNumber.c	FUNCTION_5	FOR_4
0x40002b9	          0x4d39f1	                             cmp r9, r14	      6548	decNumber.c	FUNCTION_5	FOR_4
0x40002bc	            0x7211	                            jb 0x40002cf	      6548	decNumber.c	FUNCTION_5	FOR_4
0x40002be	            0xeb4e	                           jmp 0x400030e	      6548	decNumber.c	FUNCTION_5	FOR_4
0x40002c0	          0x668930	                      mov word [rax], si	      6542	decNumber.c	FUNCTION_5	IF_29
0x40002c3	        0x4883c002	                              add rax, 2	      6544	decNumber.c	FUNCTION_5	IF_29
0x40002c7	          0x4c29c8	                             sub rax, r9	      6544	decNumber.c	FUNCTION_5	IF_29
0x40002ca	          0x48d1e8	                              shr rax, 1	      6544	decNumber.c	FUNCTION_5	IF_29
0x40002cd	            0xeb6c	                           jmp 0x400033b	      6544	decNumber.c	FUNCTION_5	IF_29
0x40002cf	       0x5e7030000	                          add eax, 0x3e7	      6549	decNumber.c	FUNCTION_5	FOR_4
0x40002d4	           0xfb70a	                   movzx ecx, word [rdx]	      6549	decNumber.c	FUNCTION_5	FOR_4
0x40002d7	            0x29c8	                            sub eax, ecx	      6549	decNumber.c	FUNCTION_5	FOR_4
0x40002d9	      0x3de7030000	                          cmp eax, 0x3e7	      6550	decNumber.c	FUNCTION_5	FOR_4	IF_30
0x40002de	            0x7f0a	                            jg 0x40002ea	      6550	decNumber.c	FUNCTION_5	FOR_4	IF_30
0x40002e0	          0x668902	                      mov word [rdx], ax	      6551	decNumber.c	FUNCTION_5	FOR_4	IF_30
0x40002e3	      0xb800000000	                              mov eax, 0	      6552	decNumber.c	FUNCTION_5	FOR_4	IF_30
0x40002e8	            0xeb0a	                           jmp 0x40002f4	      6552	decNumber.c	FUNCTION_5	FOR_4	IF_30
0x40002ea	      0x66c7020000	                       mov word [rdx], 0	      6555	decNumber.c	FUNCTION_5	FOR_4	ELSE_4
0x40002ef	      0xb801000000	                              mov eax, 1	      6556	decNumber.c	FUNCTION_5	FOR_4	ELSE_4
0x40002f4	        0x4883c202	                              add rdx, 2	      6548	decNumber.c	FUNCTION_5	FOR_4
0x40002f8	          0x4939d6	                            cmp r14, rdx	      6548	decNumber.c	FUNCTION_5	FOR_4
0x40002fb	            0x77d2	                            ja 0x40002cf	      6548	decNumber.c	FUNCTION_5	FOR_4
0x40002fd	          0x4c89ca	                             mov rdx, r9	      6548	decNumber.c	FUNCTION_5	FOR_4
0x4000300	          0x48f7d2	                                 not rdx	      6548	decNumber.c	FUNCTION_5	FOR_4
0x4000303	          0x4901d6	                            add r14, rdx	      6548	decNumber.c	FUNCTION_5	FOR_4
0x4000306	          0x49d1ee	                              shr r14, 1	      6548	decNumber.c	FUNCTION_5	FOR_4
0x4000309	      0x4b8d547102	               lea rdx, [r9 + r14*2 + 2]	      6548	decNumber.c	FUNCTION_5	FOR_4
0x400030e	            0x89c1	                            mov ecx, eax	      6563	decNumber.c	FUNCTION_5	IF_31
0x4000310	            0x29f1	                            sub ecx, esi	      6563	decNumber.c	FUNCTION_5	IF_31
0x4000312	          0x83f901	                              cmp ecx, 1	      6563	decNumber.c	FUNCTION_5	IF_31
0x4000315	            0x740b	                            je 0x4000322	      6563	decNumber.c	FUNCTION_5	IF_31
0x4000317	            0xf7d6	                                 not esi	      6564	decNumber.c	FUNCTION_5	IF_31
0x4000319	             0x1c6	                            add esi, eax	      6564	decNumber.c	FUNCTION_5	IF_31
0x400031b	          0x668932	                      mov word [rdx], si	      6564	decNumber.c	FUNCTION_5	IF_31
0x400031e	        0x4883c202	                              add rdx, 2	      6565	decNumber.c	FUNCTION_5	IF_31
0x4000322	          0x4c89c8	                             mov rax, r9	      6567	decNumber.c	FUNCTION_5
0x4000325	          0x4829d0	                            sub rax, rdx	      6567	decNumber.c	FUNCTION_5
0x4000328	          0x48d1e8	                              shr rax, 1	      6567	decNumber.c	FUNCTION_5
0x400032b	            0xeb0e	                           jmp 0x400033b	      6567	decNumber.c	FUNCTION_5
0x400032d	          0x4c39f0	                            cmp rax, r14	      6454	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x4000330	     0xf82aafeffff	                            jb 0x40001e0	      6454	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x4000336	      0xe967ffffff	                           jmp 0x40002a2	      6454	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x400033b	              0x5b	                                 pop rbx	      6568	decNumber.c	FUNCTION_5
0x400033c	              0x5d	                                 pop rbp	      6568	decNumber.c	FUNCTION_5
0x400033d	            0x415c	                                 pop r12	      6568	decNumber.c	FUNCTION_5
0x400033f	            0x415d	                                 pop r13	      6568	decNumber.c	FUNCTION_5
0x4000341	            0x415e	                                 pop r14	      6568	decNumber.c	FUNCTION_5
0x4000343	            0x415f	                                 pop r15	      6568	decNumber.c	FUNCTION_5
0x4000345	              0xc3	                                     ret	      6568	decNumber.c	FUNCTION_5
decNumberMaxMag	SWITCH,0:functions,0:ELSE,0:DO,0:FOR,0:IF,1:CALL,3:WHILE,0	27
0x4003517	              0x55	                                push rbp	      1561	decNumber.c	FUNCTION_68	FUNCTION_24
0x4003518	              0x53	                                push rbx	      1561	decNumber.c	FUNCTION_68	FUNCTION_24
0x4003519	        0x4883ec18	                           sub rsp, 0x18	      1561	decNumber.c	FUNCTION_68	FUNCTION_24
0x400351d	          0x4889fb	                            mov rbx, rdi	      1561	decNumber.c	FUNCTION_68	FUNCTION_24
0x4003520	          0x4889cd	                            mov rbp, rcx	      1561	decNumber.c	FUNCTION_68	FUNCTION_24
0x4003523	    0x64488b042528	                mov rax, qword fs:[0x28]	      1561	decNumber.c	FUNCTION_68	FUNCTION_24
0x400352c	      0x4889442408	                mov qword [rsp + 8], rax	      1561	decNumber.c	FUNCTION_68	FUNCTION_24
0x4003531	            0x31c0	                            xor eax, eax	      1561	decNumber.c	FUNCTION_68	FUNCTION_24
0x4003533	    0xc74424040000	                  mov dword [rsp + 4], 0	      1562	decNumber.c	FUNCTION_68	FUNCTION_24
0x400353b	      0x4c8d4c2404	                       lea r9, [rsp + 4]	      1563	decNumber.c	FUNCTION_68	FUNCTION_24	CALL_1
0x4003540	    0x41b807000000	                              mov r8d, 7	      1563	decNumber.c	FUNCTION_68	FUNCTION_24	CALL_1
0x4003546	      0xe86cfaffff	                   call sym.decCompareOp	      1563	decNumber.c	FUNCTION_68	FUNCTION_24	CALL_1
0x400354b	        0x8b742404	                mov esi, dword [rsp + 4]	      1564	decNumber.c	FUNCTION_68	FUNCTION_24	CALL_2
0x400354f	            0x85f6	                           test esi, esi	      1564	decNumber.c	FUNCTION_68	FUNCTION_24	CALL_2
0x4003551	            0x740b	                            je 0x400355e	      1564	decNumber.c	FUNCTION_68	FUNCTION_24	CALL_2
0x4003553	          0x4889ea	                            mov rdx, rbp	      1564	decNumber.c	FUNCTION_68	FUNCTION_24	CALL_2
0x4003556	          0x4889df	                            mov rdi, rbx	      1564	decNumber.c	FUNCTION_68	FUNCTION_24	CALL_2
0x4003559	      0xe8bee0ffff	                      call sym.decStatus	      1564	decNumber.c	FUNCTION_68	FUNCTION_24	CALL_2
0x400355e	          0x4889d8	                            mov rax, rbx	      1569	decNumber.c	FUNCTION_68	FUNCTION_24
0x4003561	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1569	decNumber.c	FUNCTION_68	FUNCTION_24
0x4003566	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1569	decNumber.c	FUNCTION_68	FUNCTION_24
0x400356f	            0x7405	                            je 0x4003576	      1569	decNumber.c	FUNCTION_68	FUNCTION_24
0x4003571	      0xe800000000	                          call 0x4003576	      1569	decNumber.c	FUNCTION_68	FUNCTION_24
0x4003576	        0x4883c418	                           add rsp, 0x18	      1569	decNumber.c	FUNCTION_68	FUNCTION_24
0x400357a	              0x5b	                                 pop rbx	      1569	decNumber.c	FUNCTION_68	FUNCTION_24
0x400357b	              0x5d	                                 pop rbp	      1569	decNumber.c	FUNCTION_68	FUNCTION_24
0x400357c	              0xc3	                                     ret	      1569	decNumber.c	FUNCTION_68	FUNCTION_24
decStatus	SWITCH,0:functions,0:ELSE,1:DO,0:FOR,0:IF,2:CALL,2:WHILE,0	15
0x400161c	        0x4883ec08	                              sub rsp, 8	      7735	decNumber.c	FUNCTION_24
0x4001620	        0x40f6c6dd	                          test sil, 0xdd	      7736	decNumber.c	FUNCTION_24	IF_1
0x4001624	            0x7427	                            je 0x400164d	      7736	decNumber.c	FUNCTION_24	IF_1
0x4001626	    0xf7c600000040	                    test esi, 0x40000000	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400162c	            0x7408	                            je 0x4001636	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x400162e	    0x81e6ffffffbf	                     and esi, 0xbfffffff	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4001634	            0xeb17	                           jmp 0x400164d	      7738	decNumber.c	FUNCTION_24	IF_1	IF_2
0x4001636	    0xc74704000000	                  mov dword [rdi + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x400163d	    0xc70701000000	                      mov dword [rdi], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4001643	    0x66c7470a0000	                 mov word [rdi + 0xa], 0	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4001649	        0xc6470820	                mov byte [rdi + 8], 0x20	      7741	decNumber.c	FUNCTION_24	IF_1	ELSE_1
0x400164d	          0x4889d7	                            mov rdi, rdx	      7744	decNumber.c	FUNCTION_24	CALL_2
0x4001650	      0xe800000000	                          call 0x4001655	      7744	decNumber.c	FUNCTION_24	CALL_2
0x4001655	        0x4883c408	                              add rsp, 8	      7746	decNumber.c	FUNCTION_24
0x4001659	              0xc3	                                     ret	      7746	decNumber.c	FUNCTION_24
decNumberNextMinus	SWITCH,0:functions,0:ELSE,0:DO,0:FOR,0:IF,3:CALL,5:WHILE,0	51
0x4005208	              0x55	                                push rbp	      1662	decNumber.c	FUNCTION_68	FUNCTION_28
0x4005209	              0x53	                                push rbx	      1662	decNumber.c	FUNCTION_68	FUNCTION_28
0x400520a	        0x4883ec58	                           sub rsp, 0x58	      1662	decNumber.c	FUNCTION_68	FUNCTION_28
0x400520e	          0x4889fd	                            mov rbp, rdi	      1662	decNumber.c	FUNCTION_68	FUNCTION_28
0x4005211	          0x4889d3	                            mov rbx, rdx	      1662	decNumber.c	FUNCTION_68	FUNCTION_28
0x4005214	    0x64488b042528	                mov rax, qword fs:[0x28]	      1662	decNumber.c	FUNCTION_68	FUNCTION_28
0x400521d	      0x4889442448	             mov qword [rsp + 0x48], rax	      1662	decNumber.c	FUNCTION_68	FUNCTION_28
0x4005222	            0x31c0	                            xor eax, eax	      1662	decNumber.c	FUNCTION_68	FUNCTION_28
0x4005224	          0x488b02	                    mov rax, qword [rdx]	      1664	decNumber.c	FUNCTION_68	FUNCTION_28
0x4005227	      0x4889442410	             mov qword [rsp + 0x10], rax	      1664	decNumber.c	FUNCTION_68	FUNCTION_28
0x400522c	        0x488b4208	                mov rax, qword [rdx + 8]	      1664	decNumber.c	FUNCTION_68	FUNCTION_28
0x4005230	      0x4889442418	             mov qword [rsp + 0x18], rax	      1664	decNumber.c	FUNCTION_68	FUNCTION_28
0x4005235	        0x488b4210	            mov rax, qword [rdx + 0x10] 	      1664	decNumber.c	FUNCTION_68	FUNCTION_28
0x4005239	      0x4889442420	             mov qword [rsp + 0x20], rax	      1664	decNumber.c	FUNCTION_68	FUNCTION_28
0x400523e	          0x8b4218	            mov eax, dword [rdx + 0x18] 	      1664	decNumber.c	FUNCTION_68	FUNCTION_28
0x4005241	        0x89442428	             mov dword [rsp + 0x28], eax	      1664	decNumber.c	FUNCTION_68	FUNCTION_28
0x4005245	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      1665	decNumber.c	FUNCTION_68	FUNCTION_28
0x400524d	         0xfb64608	               movzx eax, byte [rsi + 8]	      1671	decNumber.c	FUNCTION_68	FUNCTION_28	IF_2
0x4005251	          0x83e0c0	                     and eax, 0xffffffc0	      1671	decNumber.c	FUNCTION_68	FUNCTION_28	IF_2
0x4005254	            0x3c40	                            cmp al, 0x40	      1671	decNumber.c	FUNCTION_68	FUNCTION_28	IF_2
0x4005256	            0x750a	                           jne 0x4005262	      1671	decNumber.c	FUNCTION_68	FUNCTION_28	IF_2
0x4005258	          0x4889d6	                            mov rsi, rdx	      1672	decNumber.c	FUNCTION_68	FUNCTION_28	IF_2	CALL_2
0x400525b	      0xe8a7b8ffff	                 call sym.decSetMaxValue	      1672	decNumber.c	FUNCTION_68	FUNCTION_28	IF_2	CALL_2
0x4005260	            0xeb5b	                           jmp 0x40052bd	      1674	decNumber.c	FUNCTION_68	FUNCTION_28	IF_2
0x4005262	      0xc644243800	                mov byte [rsp + 0x38], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x4005267	    0xc74424300100	               mov dword [rsp + 0x30], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x400526f	    0x66c744243a01	                mov word [rsp + 0x3a], 1	      1677	decNumber.c	FUNCTION_68	FUNCTION_28
0x4005276	    0xc74424340036	     mov dword [rsp + 0x34], 0xc4653600 	      1678	decNumber.c	FUNCTION_68	FUNCTION_28
0x400527e	    0xc744241c0600	               mov dword [rsp + 0x1c], 6	      1679	decNumber.c	FUNCTION_68	FUNCTION_28
0x4005286	      0x4c8d4c240c	                     lea r9, [rsp + 0xc]	      1680	decNumber.c	FUNCTION_68	FUNCTION_28	CALL_4
0x400528b	    0x41b880000000	                           mov r8d, 0x80	      1680	decNumber.c	FUNCTION_68	FUNCTION_28	CALL_4
0x4005291	      0x488d4c2410	                   lea rcx, [rsp + 0x10]	      1680	decNumber.c	FUNCTION_68	FUNCTION_28	CALL_4
0x4005296	      0x488d542430	                   lea rdx, [rsp + 0x30]	      1680	decNumber.c	FUNCTION_68	FUNCTION_28	CALL_4
0x400529b	      0xe8ecf3ffff	                       call sym.decAddOp	      1680	decNumber.c	FUNCTION_68	FUNCTION_28	CALL_4
0x40052a0	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      1681	decNumber.c	FUNCTION_68	FUNCTION_28
0x40052a4	    0x81e680000040	                     and esi, 0x40000080	      1681	decNumber.c	FUNCTION_68	FUNCTION_28
0x40052aa	        0x8974240c	              mov dword [rsp + 0xc], esi	      1681	decNumber.c	FUNCTION_68	FUNCTION_28
0x40052ae	            0x85f6	                           test esi, esi	      1682	decNumber.c	FUNCTION_68	FUNCTION_28	CALL_5
0x40052b0	            0x740b	                            je 0x40052bd	      1682	decNumber.c	FUNCTION_68	FUNCTION_28	CALL_5
0x40052b2	          0x4889da	                            mov rdx, rbx	      1682	decNumber.c	FUNCTION_68	FUNCTION_28	CALL_5
0x40052b5	          0x4889ef	                            mov rdi, rbp	      1682	decNumber.c	FUNCTION_68	FUNCTION_28	CALL_5
0x40052b8	      0xe85fc3ffff	                      call sym.decStatus	      1682	decNumber.c	FUNCTION_68	FUNCTION_28	CALL_5
0x40052bd	          0x4889e8	                            mov rax, rbp	      1684	decNumber.c	FUNCTION_68	FUNCTION_28
0x40052c0	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      1684	decNumber.c	FUNCTION_68	FUNCTION_28
0x40052c5	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      1684	decNumber.c	FUNCTION_68	FUNCTION_28
0x40052ce	            0x7405	                            je 0x40052d5	      1684	decNumber.c	FUNCTION_68	FUNCTION_28
0x40052d0	      0xe800000000	                          call 0x40052d5	      1684	decNumber.c	FUNCTION_68	FUNCTION_28
0x40052d5	        0x4883c458	                           add rsp, 0x58	      1684	decNumber.c	FUNCTION_68	FUNCTION_28
0x40052d9	              0x5b	                                 pop rbx	      1684	decNumber.c	FUNCTION_68	FUNCTION_28
0x40052da	              0x5d	                                 pop rbp	      1684	decNumber.c	FUNCTION_68	FUNCTION_28
0x40052db	              0xc3	                                     ret	      1684	decNumber.c	FUNCTION_68	FUNCTION_28
decNumberAdd	SWITCH,0:functions,0:ELSE,0:DO,0:FOR,0:IF,1:CALL,3:WHILE,0	27
0x4004eaa	              0x55	                                push rbp	       771	decNumber.c	FUNCTION_68	FUNCTION_9
0x4004eab	              0x53	                                push rbx	       771	decNumber.c	FUNCTION_68	FUNCTION_9
0x4004eac	        0x4883ec18	                           sub rsp, 0x18	       771	decNumber.c	FUNCTION_68	FUNCTION_9
0x4004eb0	          0x4889fb	                            mov rbx, rdi	       771	decNumber.c	FUNCTION_68	FUNCTION_9
0x4004eb3	          0x4889cd	                            mov rbp, rcx	       771	decNumber.c	FUNCTION_68	FUNCTION_9
0x4004eb6	    0x64488b042528	                mov rax, qword fs:[0x28]	       771	decNumber.c	FUNCTION_68	FUNCTION_9
0x4004ebf	      0x4889442408	                mov qword [rsp + 8], rax	       771	decNumber.c	FUNCTION_68	FUNCTION_9
0x4004ec4	            0x31c0	                            xor eax, eax	       771	decNumber.c	FUNCTION_68	FUNCTION_9
0x4004ec6	    0xc74424040000	                  mov dword [rsp + 4], 0	       772	decNumber.c	FUNCTION_68	FUNCTION_9
0x4004ece	      0x4c8d4c2404	                       lea r9, [rsp + 4]	       773	decNumber.c	FUNCTION_68	FUNCTION_9	CALL_1
0x4004ed3	    0x41b800000000	                              mov r8d, 0	       773	decNumber.c	FUNCTION_68	FUNCTION_9	CALL_1
0x4004ed9	      0xe8aef7ffff	                       call sym.decAddOp	       773	decNumber.c	FUNCTION_68	FUNCTION_9	CALL_1
0x4004ede	        0x8b742404	                mov esi, dword [rsp + 4]	       774	decNumber.c	FUNCTION_68	FUNCTION_9	CALL_2
0x4004ee2	            0x85f6	                           test esi, esi	       774	decNumber.c	FUNCTION_68	FUNCTION_9	CALL_2
0x4004ee4	            0x740b	                            je 0x4004ef1	       774	decNumber.c	FUNCTION_68	FUNCTION_9	CALL_2
0x4004ee6	          0x4889ea	                            mov rdx, rbp	       774	decNumber.c	FUNCTION_68	FUNCTION_9	CALL_2
0x4004ee9	          0x4889df	                            mov rdi, rbx	       774	decNumber.c	FUNCTION_68	FUNCTION_9	CALL_2
0x4004eec	      0xe82bc7ffff	                      call sym.decStatus	       774	decNumber.c	FUNCTION_68	FUNCTION_9	CALL_2
0x4004ef1	          0x4889d8	                            mov rax, rbx	       779	decNumber.c	FUNCTION_68	FUNCTION_9
0x4004ef4	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       779	decNumber.c	FUNCTION_68	FUNCTION_9
0x4004ef9	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       779	decNumber.c	FUNCTION_68	FUNCTION_9
0x4004f02	            0x7405	                            je 0x4004f09	       779	decNumber.c	FUNCTION_68	FUNCTION_9
0x4004f04	      0xe800000000	                          call 0x4004f09	       779	decNumber.c	FUNCTION_68	FUNCTION_9
0x4004f09	        0x4883c418	                           add rsp, 0x18	       779	decNumber.c	FUNCTION_68	FUNCTION_9
0x4004f0d	              0x5b	                                 pop rbx	       779	decNumber.c	FUNCTION_68	FUNCTION_9
0x4004f0e	              0x5d	                                 pop rbp	       779	decNumber.c	FUNCTION_68	FUNCTION_9
0x4004f0f	              0xc3	                                     ret	       779	decNumber.c	FUNCTION_68	FUNCTION_9
decNumberCompareTotalMag	SWITCH,0:functions,0:ELSE,0:DO,1:FOR,0:IF,8:CALL,11:WHILE,0	116
0x4005440	            0x4157	                                push r15	       927	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005442	            0x4156	                                push r14	       927	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005444	            0x4155	                                push r13	       927	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005446	            0x4154	                                push r12	       927	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005448	              0x55	                                push rbp	       927	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005449	              0x53	                                push rbx	       927	decNumber.c	FUNCTION_68	FUNCTION_14
0x400544a	    0x4881ec880000	                           sub rsp, 0x88	       927	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005451	          0x4989fc	                            mov r12, rdi	       927	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005454	          0x4889f5	                            mov rbp, rsi	       927	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005457	          0x4889d3	                            mov rbx, rdx	       927	decNumber.c	FUNCTION_68	FUNCTION_14
0x400545a	      0x48894c2408	                mov qword [rsp + 8], rcx	       927	decNumber.c	FUNCTION_68	FUNCTION_14
0x400545f	    0x64488b042528	                mov rax, qword fs:[0x28]	       927	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005468	      0x4889442478	             mov qword [rsp + 0x78], rax	       927	decNumber.c	FUNCTION_68	FUNCTION_14
0x400546d	            0x31c0	                            xor eax, eax	       927	decNumber.c	FUNCTION_68	FUNCTION_14
0x400546f	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	       928	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005477	    0x41be00000000	                             mov r14d, 0	       931	decNumber.c	FUNCTION_68	FUNCTION_14
0x400547d	        0x807e0800	                   cmp byte [rsi + 8], 0	       942	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_4
0x4005481	            0x7975	                           jns 0x40054f8	       942	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_4
0x4005483	            0x8b06	                    mov eax, dword [rsi]	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x4005485	          0x83f831	                           cmp eax, 0x31	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x4005488	            0x7f0f	                            jg 0x4005499	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x400548a	            0x4898	                                    cdqe	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x400548c	     0xfb680000000	                   movzx eax, byte [rax]	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x4005493	        0x8d7c000a	              lea edi, [rax + rax + 0xa]	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x4005497	            0xeb17	                           jmp 0x40054b0	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x4005499	          0x8d4802	                      lea ecx, [rax + 2]	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x400549c	      0xba56555555	                     mov edx, 0x55555556	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x40054a1	            0x89c8	                            mov eax, ecx	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x40054a3	            0xf7ea	                                imul edx	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x40054a5	            0x89c8	                            mov eax, ecx	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x40054a7	          0xc1f81f	                           sar eax, 0x1f	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x40054aa	            0x29c2	                            sub edx, eax	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x40054ac	        0x8d7c120a	              lea edi, [rdx + rdx + 0xa]	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x40054b0	          0x83ff24	                           cmp edi, 0x24	       945	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	IF_3
0x40054b3	            0x7625	                           jbe 0x40054da	       945	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	IF_3
0x40054b5	            0x89ff	                            mov edi, edi	       946	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	IF_3
0x40054b7	      0xe800000000	                          call 0x40054bc	       946	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	IF_3
0x40054bc	          0x4989c6	                            mov r14, rax	       946	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	IF_3
0x40054bf	          0x4989c5	                            mov r13, rax	       950	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	IF_3
0x40054c2	          0x4885c0	                           test rax, rax	       947	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	IF_3	IF_4
0x40054c5	            0x751e	                           jne 0x40054e5	       947	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	IF_3	IF_4
0x40054c7	    0xc744241c1000	           mov dword [rsp + 0x1c], 0x10 	       948	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	IF_3	IF_4
0x40054cf	    0x41bd00000000	                             mov r13d, 0	       933	decNumber.c	FUNCTION_68	FUNCTION_14
0x40054d5	      0xe9b1000000	                           jmp 0x400558b	       949	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	IF_3	IF_4
0x40054da	      0x4c8d6c2420	                   lea r13, [rsp + 0x20]	       943	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2
0x40054df	    0x41be00000000	                             mov r14d, 0	       931	decNumber.c	FUNCTION_68	FUNCTION_14
0x40054e5	          0x4889ee	                            mov rsi, rbp	       952	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_6
0x40054e8	          0x4c89ef	                            mov rdi, r13	       952	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_6
0x40054eb	      0xe800000000	                          call 0x40054f0	       952	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_6
0x40054f0	      0x418065087f	                and byte [r13 + 8], 0x7f	       953	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2
0x40054f5	          0x4c89ed	                            mov rbp, r13	       954	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2
0x40054f8	    0x41bd00000000	                             mov r13d, 0	       933	decNumber.c	FUNCTION_68	FUNCTION_14
0x40054fe	        0x807b0800	                   cmp byte [rbx + 8], 0	       956	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_7
0x4005502	            0x7969	                           jns 0x400556d	       956	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_7
0x4005504	            0x8b03	                    mov eax, dword [rbx]	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x4005506	          0x83f831	                           cmp eax, 0x31	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x4005509	            0x7f0f	                            jg 0x400551a	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x400550b	            0x4898	                                    cdqe	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x400550d	     0xfb680000000	                   movzx eax, byte [rax]	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x4005514	        0x8d7c000a	              lea edi, [rax + rax + 0xa]	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x4005518	            0xeb17	                           jmp 0x4005531	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x400551a	          0x8d4802	                      lea ecx, [rax + 2]	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x400551d	      0xba56555555	                     mov edx, 0x55555556	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x4005522	            0x89c8	                            mov eax, ecx	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x4005524	            0xf7ea	                                imul edx	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x4005526	            0x89c8	                            mov eax, ecx	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x4005528	          0xc1f81f	                           sar eax, 0x1f	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x400552b	            0x29c2	                            sub edx, eax	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x400552d	        0x8d7c120a	              lea edi, [rdx + rdx + 0xa]	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x4005531	          0x83ff24	                           cmp edi, 0x24	       959	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	IF_6
0x4005534	            0x7619	                           jbe 0x400554f	       959	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	IF_6
0x4005536	            0x89ff	                            mov edi, edi	       960	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	IF_6
0x4005538	      0xe800000000	                          call 0x400553d	       960	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	IF_6
0x400553d	          0x4989c5	                            mov r13, rax	       960	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	IF_6
0x4005540	          0x4989c7	                            mov r15, rax	       964	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	IF_6
0x4005543	          0x4885c0	                           test rax, rax	       961	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	IF_6	IF_7
0x4005546	            0x7512	                           jne 0x400555a	       961	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	IF_6	IF_7
0x4005548	      0x834c241c10	             or dword [rsp + 0x1c], 0x10	       962	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	IF_6	IF_7
0x400554d	            0xeb3c	                           jmp 0x400558b	       963	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	IF_6	IF_7
0x400554f	      0x4c8d7c2450	                   lea r15, [rsp + 0x50]	       957	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5
0x4005554	    0x41bd00000000	                             mov r13d, 0	       933	decNumber.c	FUNCTION_68	FUNCTION_14
0x400555a	          0x4889de	                            mov rsi, rbx	       966	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_9
0x400555d	          0x4c89ff	                            mov rdi, r15	       966	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_9
0x4005560	      0xe800000000	                          call 0x4005565	       966	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_9
0x4005565	      0x418067087f	                and byte [r15 + 8], 0x7f	       967	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5
0x400556a	          0x4c89fb	                            mov rbx, r15	       968	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5
0x400556d	      0x4c8d4c241c	                    lea r9, [rsp + 0x1c]	       970	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	CALL_10
0x4005572	    0x41b804000000	                              mov r8d, 4	       970	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	CALL_10
0x4005578	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       970	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	CALL_10
0x400557d	          0x4889da	                            mov rdx, rbx	       970	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	CALL_10
0x4005580	          0x4889ee	                            mov rsi, rbp	       970	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	CALL_10
0x4005583	          0x4c89e7	                            mov rdi, r12	       970	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	CALL_10
0x4005586	      0xe82cdaffff	                   call sym.decCompareOp	       970	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	CALL_10
0x400558b	          0x4c89f7	                            mov rdi, r14	       973	decNumber.c	FUNCTION_68	FUNCTION_14
0x400558e	      0xe800000000	                          call 0x4005593	       973	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005593	          0x4c89ef	                            mov rdi, r13	       974	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005596	      0xe800000000	                          call 0x400559b	       974	decNumber.c	FUNCTION_68	FUNCTION_14
0x400559b	        0x8b74241c	            mov esi, dword [rsp + 0x1c] 	       975	decNumber.c	FUNCTION_68	FUNCTION_14	CALL_11
0x400559f	            0x85f6	                           test esi, esi	       975	decNumber.c	FUNCTION_68	FUNCTION_14	CALL_11
0x40055a1	            0x740d	                            je 0x40055b0	       975	decNumber.c	FUNCTION_68	FUNCTION_14	CALL_11
0x40055a3	      0x488b542408	                mov rdx, qword [rsp + 8]	       975	decNumber.c	FUNCTION_68	FUNCTION_14	CALL_11
0x40055a8	          0x4c89e7	                            mov rdi, r12	       975	decNumber.c	FUNCTION_68	FUNCTION_14	CALL_11
0x40055ab	      0xe86cc0ffff	                      call sym.decStatus	       975	decNumber.c	FUNCTION_68	FUNCTION_14	CALL_11
0x40055b0	          0x4c89e0	                            mov rax, r12	       977	decNumber.c	FUNCTION_68	FUNCTION_14
0x40055b3	      0x488b4c2478	            mov rcx, qword [rsp + 0x78] 	       977	decNumber.c	FUNCTION_68	FUNCTION_14
0x40055b8	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       977	decNumber.c	FUNCTION_68	FUNCTION_14
0x40055c1	            0x7405	                            je 0x40055c8	       977	decNumber.c	FUNCTION_68	FUNCTION_14
0x40055c3	      0xe800000000	                          call 0x40055c8	       977	decNumber.c	FUNCTION_68	FUNCTION_14
0x40055c8	    0x4881c4880000	                           add rsp, 0x88	       977	decNumber.c	FUNCTION_68	FUNCTION_14
0x40055cf	              0x5b	                                 pop rbx	       977	decNumber.c	FUNCTION_68	FUNCTION_14
0x40055d0	              0x5d	                                 pop rbp	       977	decNumber.c	FUNCTION_68	FUNCTION_14
0x40055d1	            0x415c	                                 pop r12	       977	decNumber.c	FUNCTION_68	FUNCTION_14
0x40055d3	            0x415d	                                 pop r13	       977	decNumber.c	FUNCTION_68	FUNCTION_14
0x40055d5	            0x415e	                                 pop r14	       977	decNumber.c	FUNCTION_68	FUNCTION_14
0x40055d7	            0x415f	                                 pop r15	       977	decNumber.c	FUNCTION_68	FUNCTION_14
0x40055d9	              0xc3	                                     ret	       977	decNumber.c	FUNCTION_68	FUNCTION_14
decLnOp	SWITCH,0:functions,44:ELSE,3:DO,1:FOR,1:IF,29:CALL,44:WHILE,0	383
0x4006e28	            0x4157	                                push r15	      5582	decNumber.c	FUNCTION_68
0x4006e2a	            0x4156	                                push r14	      5582	decNumber.c	FUNCTION_68
0x4006e2c	            0x4155	                                push r13	      5582	decNumber.c	FUNCTION_68
0x4006e2e	            0x4154	                                push r12	      5582	decNumber.c	FUNCTION_68
0x4006e30	              0x55	                                push rbp	      5582	decNumber.c	FUNCTION_68
0x4006e31	              0x53	                                push rbx	      5582	decNumber.c	FUNCTION_68
0x4006e32	    0x4881ec180100	                          sub rsp, 0x118	      5582	decNumber.c	FUNCTION_68
0x4006e39	        0x48893c24	                    mov qword [rsp], rdi	      5582	decNumber.c	FUNCTION_68
0x4006e3d	          0x4989f6	                            mov r14, rsi	      5582	decNumber.c	FUNCTION_68
0x4006e40	          0x4989d7	                            mov r15, rdx	      5582	decNumber.c	FUNCTION_68
0x4006e43	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      5582	decNumber.c	FUNCTION_68
0x4006e48	    0x64488b042528	                mov rax, qword fs:[0x28]	      5582	decNumber.c	FUNCTION_68
0x4006e51	    0x488984240801	            mov qword [rsp + 0x108], rax	      5582	decNumber.c	FUNCTION_68
0x4006e59	            0x31c0	                            xor eax, eax	      5582	decNumber.c	FUNCTION_68
0x4006e5b	    0xc74424280000	               mov dword [rsp + 0x28], 0	      5583	decNumber.c	
0x4006e63	         0xfb64608	               movzx eax, byte [rsi + 8]	      5610	decNumber.c	DO_1	IF_2
0x4006e67	            0xa870	                           test al, 0x70	      5610	decNumber.c	DO_1	IF_2
0x4006e69	            0x7472	                            je 0x4006edd	      5610	decNumber.c	DO_1	IF_2
0x4006e6b	            0xa840	                           test al, 0x40	      5611	decNumber.c	DO_1	IF_2	IF_3	CALL_4
0x4006e6d	            0x7441	                            je 0x4006eb0	      5611	decNumber.c	DO_1	IF_2	IF_3	CALL_4
0x4006e6f	            0x84c0	                             test al, al	      5612	decNumber.c	DO_1	IF_2	IF_3	IF_4	CALL_5
0x4006e71	            0x791d	                           jns 0x4006e90	      5612	decNumber.c	DO_1	IF_2	IF_3	IF_4	CALL_5
0x4006e73	    0x810980000000	                    or dword [rcx], 0x80	      5613	decNumber.c	DO_1	IF_2	IF_3	IF_4
0x4006e79	    0x48c744241000	               mov qword [rsp + 0x10], 0	      5597	decNumber.c	
0x4006e82	    0x48c744240800	                  mov qword [rsp + 8], 0	      5594	decNumber.c	
0x4006e8b	      0xe9ce050000	                           jmp 0x400745e	      5594	decNumber.c	
0x4006e90	        0x488b3c24	                    mov rdi, qword [rsp]	      5614	decNumber.c	DO_1	IF_2	IF_3	CALL_6
0x4006e94	      0xe800000000	                          call 0x4006e99	      5614	decNumber.c	DO_1	IF_2	IF_3	CALL_6
0x4006e99	    0x48c744241000	               mov qword [rsp + 0x10], 0	      5597	decNumber.c	
0x4006ea2	    0x48c744240800	                  mov qword [rsp + 8], 0	      5594	decNumber.c	
0x4006eab	      0xe9ae050000	                           jmp 0x400745e	      5594	decNumber.c	
0x4006eb0	      0x4c8b442418	              mov r8, qword [rsp + 0x18]	      5616	decNumber.c	DO_1	IF_2	CALL_7
0x4006eb5	          0x4889d1	                            mov rcx, rdx	      5616	decNumber.c	DO_1	IF_2	CALL_7
0x4006eb8	      0xba00000000	                              mov edx, 0	      5616	decNumber.c	DO_1	IF_2	CALL_7
0x4006ebd	        0x488b3c24	                    mov rdi, qword [rsp]	      5616	decNumber.c	DO_1	IF_2	CALL_7
0x4006ec1	      0xe826bfffff	                        call sym.decNaNs	      5616	decNumber.c	DO_1	IF_2	CALL_7
0x4006ec6	    0x48c744241000	               mov qword [rsp + 0x10], 0	      5597	decNumber.c	
0x4006ecf	    0x48c744240800	                  mov qword [rsp + 8], 0	      5594	decNumber.c	
0x4006ed8	      0xe981050000	                           jmp 0x400745e	      5594	decNumber.c	
0x4006edd	         0xfb7560a	            movzx edx, word [rsi + 0xa] 	      5619	decNumber.c	DO_1	IF_5	CALL_8
0x4006ee1	          0x6685d2	                             test dx, dx	      5619	decNumber.c	DO_1	IF_5	CALL_8
0x4006ee4	            0x7537	                           jne 0x4006f1d	      5619	decNumber.c	DO_1	IF_5	CALL_8
0x4006ee6	          0x833e01	                      cmp dword [rsi], 1	      5619	decNumber.c	DO_1	IF_5	CALL_8
0x4006ee9	            0x7532	                           jne 0x4006f1d	      5619	decNumber.c	DO_1	IF_5	CALL_8
0x4006eeb	        0x488b0424	                    mov rax, qword [rsp]	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4006eef	    0xc74004000000	                  mov dword [rax + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4006ef6	    0xc70001000000	                      mov dword [rax], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4006efc	    0x66c7400a0000	                 mov word [rax + 0xa], 0	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4006f02	        0xc64008c0	                mov byte [rax + 8], 0xc0	      5621	decNumber.c	DO_1	IF_5
0x4006f06	    0x48c744241000	               mov qword [rsp + 0x10], 0	      5597	decNumber.c	
0x4006f0f	    0x48c744240800	                  mov qword [rsp + 8], 0	      5594	decNumber.c	
0x4006f18	      0xe941050000	                           jmp 0x400745e	      5622	decNumber.c	DO_1	IF_5
0x4006f1d	            0x84c0	                             test al, al	      5625	decNumber.c	DO_1	IF_6	CALL_10
0x4006f1f	            0x7922	                           jns 0x4006f43	      5625	decNumber.c	DO_1	IF_6	CALL_10
0x4006f21	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5626	decNumber.c	DO_1	IF_6
0x4006f26	    0x810880000000	                    or dword [rax], 0x80	      5626	decNumber.c	DO_1	IF_6
0x4006f2c	    0x48c744241000	               mov qword [rsp + 0x10], 0	      5597	decNumber.c	
0x4006f35	    0x48c744240800	                  mov qword [rsp + 8], 0	      5594	decNumber.c	
0x4006f3e	      0xe91b050000	                           jmp 0x400745e	      5627	decNumber.c	DO_1	IF_6
0x4006f43	      0x41837e0400	                  cmp dword [r14 + 4], 0	      5632	decNumber.c	DO_1	IF_7
0x4006f48	     0xf85e4000000	                           jne 0x4007032	      5632	decNumber.c	DO_1	IF_7
0x4006f4e	        0x41833f28	                   cmp dword [r15], 0x28	      5632	decNumber.c	DO_1	IF_7
0x4006f52	     0xf8fda000000	                            jg 0x4007032	      5632	decNumber.c	DO_1	IF_7
0x4006f58	        0x6683fa0a	                             cmp dx, 0xa	      5636	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x4006f5c	            0x7569	                           jne 0x4006fc7	      5636	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x4006f5e	        0x41833e02	                      cmp dword [r14], 2	      5636	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x4006f62	     0xf85ca000000	                           jne 0x4007032	      5636	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x4006f68	          0x498b07	                    mov rax, qword [r15]	      5638	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x4006f6b	      0x4889442430	             mov qword [rsp + 0x30], rax	      5638	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x4006f70	        0x498b4708	                mov rax, qword [r15 + 8]	      5638	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x4006f74	      0x4889442438	             mov qword [rsp + 0x38], rax	      5638	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x4006f79	        0x498b4710	            mov rax, qword [r15 + 0x10] 	      5638	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x4006f7d	      0x4889442440	             mov qword [rsp + 0x40], rax	      5638	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x4006f82	        0x418b4718	            mov eax, dword [r15 + 0x18] 	      5638	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x4006f86	        0x89442448	             mov dword [rsp + 0x48], eax	      5638	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x4006f8a	    0xc744243c0300	               mov dword [rsp + 0x3c], 3	      5638	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x4006f92	      0x488d542430	                   lea rdx, [rsp + 0x30]	      5640	decNumber.c	DO_1	IF_7	IF_8	IF_9	CALL_11
0x4006f97	      0xbe00000000	                              mov esi, 0	      5640	decNumber.c	DO_1	IF_7	IF_8	IF_9	CALL_11
0x4006f9c	        0x488b3c24	                    mov rdi, qword [rsp]	      5640	decNumber.c	DO_1	IF_7	IF_8	IF_9	CALL_11
0x4006fa0	      0xe800000000	                          call 0x4006fa5	      5640	decNumber.c	DO_1	IF_7	IF_8	IF_9	CALL_11
0x4006fa5	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5641	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x4006faa	    0x810820080000	                   or dword [rax], 0x820	      5641	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x4006fb0	    0x48c744241000	               mov qword [rsp + 0x10], 0	      5597	decNumber.c	
0x4006fb9	    0x48c744240800	                  mov qword [rsp + 8], 0	      5594	decNumber.c	
0x4006fc2	      0xe997040000	                           jmp 0x400745e	      5642	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x4006fc7	        0x6683fa02	                               cmp dx, 2	      5643	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x4006fcb	            0x7565	                           jne 0x4007032	      5643	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x4006fcd	        0x41833e01	                      cmp dword [r14], 1	      5643	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x4006fd1	            0x755f	                           jne 0x4007032	      5643	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x4006fd3	          0x498b07	                    mov rax, qword [r15]	      5644	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x4006fd6	      0x4889442430	             mov qword [rsp + 0x30], rax	      5644	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x4006fdb	        0x498b4708	                mov rax, qword [r15 + 8]	      5644	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x4006fdf	      0x4889442438	             mov qword [rsp + 0x38], rax	      5644	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x4006fe4	        0x498b4710	            mov rax, qword [r15 + 0x10] 	      5644	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x4006fe8	      0x4889442440	             mov qword [rsp + 0x40], rax	      5644	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x4006fed	        0x418b4718	            mov eax, dword [r15 + 0x18] 	      5644	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x4006ff1	        0x89442448	             mov dword [rsp + 0x48], eax	      5644	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x4006ff5	    0xc744243c0300	               mov dword [rsp + 0x3c], 3	      5644	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x4006ffd	      0x488d542430	                   lea rdx, [rsp + 0x30]	      5646	decNumber.c	DO_1	IF_7	IF_8	IF_10	CALL_12
0x4007002	      0xbe00000000	                              mov esi, 0	      5646	decNumber.c	DO_1	IF_7	IF_8	IF_10	CALL_12
0x4007007	        0x488b3c24	                    mov rdi, qword [rsp]	      5646	decNumber.c	DO_1	IF_7	IF_8	IF_10	CALL_12
0x400700b	      0xe800000000	                          call 0x4007010	      5646	decNumber.c	DO_1	IF_7	IF_8	IF_10	CALL_12
0x4007010	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5647	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x4007015	    0x810820080000	                   or dword [rax], 0x820	      5647	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x400701b	    0x48c744241000	               mov qword [rsp + 0x10], 0	      5597	decNumber.c	
0x4007024	    0x48c744240800	                  mov qword [rsp + 8], 0	      5594	decNumber.c	
0x400702d	      0xe92c040000	                           jmp 0x400745e	      5648	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x4007032	          0x418b2e	                    mov ebp, dword [r14]	      5656	decNumber.c	DO_1	IF_7	CALL_14
0x4007035	          0x41392f	                    cmp dword [r15], ebp	      5656	decNumber.c	DO_1	IF_7	CALL_14
0x4007038	          0x4189ed	                           mov r13d, ebp	      5656	decNumber.c	DO_1	IF_7	CALL_14
0x400703b	        0x450f4d2f	                cmovge r13d, dword [r15]	      5656	decNumber.c	DO_1	IF_7	CALL_14
0x400703f	        0x4183fd07	                             cmp r13d, 7	      5656	decNumber.c	DO_1	IF_7	CALL_14
0x4007043	      0xb807000000	                              mov eax, 7	      5656	decNumber.c	DO_1	IF_7	CALL_14
0x4007048	        0x440f4ce8	                         cmovl r13d, eax	      5656	decNumber.c	DO_1	IF_7	CALL_14
0x400704c	        0x4183c502	                             add r13d, 2	      5656	decNumber.c	DO_1	IF_7	CALL_14
0x4007050	        0x4183fd31	                          cmp r13d, 0x31	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x4007054	            0x7f1c	                            jg 0x4007072	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x4007056	        0x4183fd10	                          cmp r13d, 0x10	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x400705a	      0xb810000000	                           mov eax, 0x10	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x400705f	        0x410f4dc5	                        cmovge eax, r13d	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x4007063	            0x4898	                                    cdqe	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x4007065	     0xfb680000000	                   movzx eax, byte [rax]	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x400706c	        0x8d44000a	              lea eax, [rax + rax + 0xa]	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x4007070	            0xeb22	                           jmp 0x4007094	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x4007072	        0x4183fd10	                          cmp r13d, 0x10	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x4007076	      0xb910000000	                           mov ecx, 0x10	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x400707b	        0x410f4dcd	                        cmovge ecx, r13d	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x400707f	          0x83c102	                              add ecx, 2	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x4007082	      0xba56555555	                     mov edx, 0x55555556	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x4007087	            0x89c8	                            mov eax, ecx	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x4007089	            0xf7ea	                                imul edx	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x400708b	          0xc1f91f	                           sar ecx, 0x1f	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x400708e	            0x29ca	                            sub edx, ecx	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x4007090	        0x8d44120a	              lea eax, [rdx + rdx + 0xa]	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x4007094	    0x488d9c249000	                   lea rbx, [rsp + 0x90]	      5595	decNumber.c	
0x400709c	    0x48c744240800	                  mov qword [rsp + 8], 0	      5594	decNumber.c	
0x40070a5	          0x83f830	                           cmp eax, 0x30	      5665	decNumber.c	DO_1	IF_7	IF_11
0x40070a8	            0x762a	                           jbe 0x40070d4	      5665	decNumber.c	DO_1	IF_7	IF_11
0x40070aa	            0x89c7	                            mov edi, eax	      5666	decNumber.c	DO_1	IF_7	IF_11
0x40070ac	      0xe800000000	                          call 0x40070b1	      5666	decNumber.c	DO_1	IF_7	IF_11
0x40070b1	      0x4889442408	                mov qword [rsp + 8], rax	      5666	decNumber.c	DO_1	IF_7	IF_11
0x40070b6	          0x4889c3	                            mov rbx, rax	      5670	decNumber.c	DO_1	IF_7	IF_11
0x40070b9	          0x4885c0	                           test rax, rax	      5667	decNumber.c	DO_1	IF_7	IF_11	IF_12
0x40070bc	            0x7516	                           jne 0x40070d4	      5667	decNumber.c	DO_1	IF_7	IF_11	IF_12
0x40070be	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5668	decNumber.c	DO_1	IF_7	IF_11	IF_12
0x40070c3	          0x830810	                    or dword [rax], 0x10	      5668	decNumber.c	DO_1	IF_7	IF_11	IF_12
0x40070c6	    0x48c744241000	               mov qword [rsp + 0x10], 0	      5597	decNumber.c	
0x40070cf	      0xe98a030000	                           jmp 0x400745e	      5669	decNumber.c	DO_1	IF_7	IF_11	IF_12
0x40070d4	          0x4401ed	                           add ebp, r13d	      5672	decNumber.c	DO_1	IF_7
0x40070d7	          0x83fd31	                           cmp ebp, 0x31	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x40070da	            0x7f1b	                            jg 0x40070f7	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x40070dc	          0x83fd10	                           cmp ebp, 0x10	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x40070df	      0xb810000000	                           mov eax, 0x10	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x40070e4	           0xf4ce8	                          cmovl ebp, eax	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x40070e7	          0x4863c5	                         movsxd rax, ebp	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x40070ea	     0xfb680000000	                   movzx eax, byte [rax]	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x40070f1	        0x8d44000a	              lea eax, [rax + rax + 0xa]	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x40070f5	            0xeb20	                           jmp 0x4007117	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x40070f7	          0x83fd10	                           cmp ebp, 0x10	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x40070fa	      0xb910000000	                           mov ecx, 0x10	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x40070ff	           0xf4ce9	                          cmovl ebp, ecx	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x4007102	          0x8d4d02	                      lea ecx, [rbp + 2]	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x4007105	      0xba56555555	                     mov edx, 0x55555556	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x400710a	            0x89c8	                            mov eax, ecx	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x400710c	            0xf7ea	                                imul edx	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x400710e	          0xc1f91f	                           sar ecx, 0x1f	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x4007111	            0x29ca	                            sub edx, ecx	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x4007113	        0x8d44120a	              lea eax, [rdx + rdx + 0xa]	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x4007117	          0x83f83c	                           cmp eax, 0x3c	      5674	decNumber.c	DO_1	IF_7	IF_13
0x400711a	            0x7621	                           jbe 0x400713d	      5674	decNumber.c	DO_1	IF_7	IF_13
0x400711c	            0x89c7	                            mov edi, eax	      5675	decNumber.c	DO_1	IF_7	IF_13
0x400711e	      0xe800000000	                          call 0x4007123	      5675	decNumber.c	DO_1	IF_7	IF_13
0x4007123	      0x4889442410	             mov qword [rsp + 0x10], rax	      5675	decNumber.c	DO_1	IF_7	IF_13
0x4007128	          0x4889c5	                            mov rbp, rax	      5679	decNumber.c	DO_1	IF_7	IF_13
0x400712b	          0x4885c0	                           test rax, rax	      5676	decNumber.c	DO_1	IF_7	IF_13	IF_14
0x400712e	            0x751e	                           jne 0x400714e	      5676	decNumber.c	DO_1	IF_7	IF_13	IF_14
0x4007130	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5677	decNumber.c	DO_1	IF_7	IF_13	IF_14
0x4007135	          0x830810	                    or dword [rax], 0x10	      5677	decNumber.c	DO_1	IF_7	IF_13	IF_14
0x4007138	      0xe921030000	                           jmp 0x400745e	      5678	decNumber.c	DO_1	IF_7	IF_13	IF_14
0x400713d	    0x488dac24c000	                   lea rbp, [rsp + 0xc0]	      5598	decNumber.c	
0x4007145	    0x48c744241000	               mov qword [rsp + 0x10], 0	      5597	decNumber.c	
0x400714e	      0xbe40000000	                           mov esi, 0x40	      5691	decNumber.c	DO_1	IF_7	CALL_19
0x4007153	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      5691	decNumber.c	DO_1	IF_7	CALL_19
0x4007158	      0xe800000000	                          call 0x400715d	      5691	decNumber.c	DO_1	IF_7	CALL_19
0x400715d	          0x418b36	                    mov esi, dword [r14]	      5693	decNumber.c	DO_1	IF_7	CALL_20
0x4007160	        0x41037604	                add esi, dword [r14 + 4]	      5693	decNumber.c	DO_1	IF_7	CALL_20
0x4007164	          0x4889df	                            mov rdi, rbx	      5693	decNumber.c	DO_1	IF_7	CALL_20
0x4007167	      0xe800000000	                          call 0x400716c	      5693	decNumber.c	DO_1	IF_7	CALL_20
0x400716c	      0xbe79222300	                       mov esi, 0x232279	      5694	decNumber.c	DO_1	IF_7	CALL_21
0x4007171	          0x4889ef	                            mov rdi, rbp	      5694	decNumber.c	DO_1	IF_7	CALL_21
0x4007174	      0xe800000000	                          call 0x4007179	      5694	decNumber.c	DO_1	IF_7	CALL_21
0x4007179	    0xc74504faffff	        mov dword [rbp + 4], 0xfffffffa 	      5695	decNumber.c	DO_1	IF_7
0x4007180	      0x4c8d442428	                    lea r8, [rsp + 0x28]	      5696	decNumber.c	DO_1	IF_7	CALL_22
0x4007185	      0x488d4c2430	                   lea rcx, [rsp + 0x30]	      5696	decNumber.c	DO_1	IF_7	CALL_22
0x400718a	          0x4889ea	                            mov rdx, rbp	      5696	decNumber.c	DO_1	IF_7	CALL_22
0x400718d	          0x4889de	                            mov rsi, rbx	      5696	decNumber.c	DO_1	IF_7	CALL_22
0x4007190	          0x4889df	                            mov rdi, rbx	      5696	decNumber.c	DO_1	IF_7	CALL_22
0x4007193	      0xe8b1c4ffff	                  call sym.decMultiplyOp	      5696	decNumber.c	DO_1	IF_7	CALL_22
0x4007198	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	      5699	decNumber.c	DO_1	IF_7
0x40071a0	    0xc74424300200	               mov dword [rsp + 0x30], 2	      5700	decNumber.c	DO_1	IF_7
0x40071a8	    0xc744243c0500	               mov dword [rsp + 0x3c], 5	      5700	decNumber.c	DO_1	IF_7
0x40071b0	      0x4c8d442428	                    lea r8, [rsp + 0x28]	      5701	decNumber.c	DO_1	IF_7	CALL_23
0x40071b5	      0x488d4c242c	                   lea rcx, [rsp + 0x2c]	      5701	decNumber.c	DO_1	IF_7	CALL_23
0x40071ba	      0x488d542430	                   lea rdx, [rsp + 0x30]	      5701	decNumber.c	DO_1	IF_7	CALL_23
0x40071bf	          0x4c89f6	                            mov rsi, r14	      5701	decNumber.c	DO_1	IF_7	CALL_23
0x40071c2	          0x4889ef	                            mov rdi, rbp	      5701	decNumber.c	DO_1	IF_7	CALL_23
0x40071c5	      0xe81799ffff	                     call sym.decCopyFit	      5701	decNumber.c	DO_1	IF_7	CALL_23
0x40071ca	    0xc74504000000	                  mov dword [rbp + 4], 0	      5702	decNumber.c	DO_1	IF_7
0x40071d1	          0x4889ef	                            mov rdi, rbp	      5703	decNumber.c	DO_1	IF_7	CALL_24
0x40071d4	      0xe8d399ffff	                      call sym.decGetInt	      5703	decNumber.c	DO_1	IF_7	CALL_24
0x40071d9	          0x83f809	                              cmp eax, 9	      5704	decNumber.c	DO_1	IF_7	CALL_25
0x40071dc	            0x7f0a	                            jg 0x40071e8	      5704	decNumber.c	DO_1	IF_7	CALL_25
0x40071de	    0x8d14c5000000	                        lea edx, [rax*8]	      5704	decNumber.c	DO_1	IF_7	CALL_25
0x40071e5	          0x8d0442	                  lea eax, [rdx + rax*2]	      5704	decNumber.c	DO_1	IF_7	CALL_25
0x40071e8	          0x83e80a	                            sub eax, 0xa	      5705	decNumber.c	DO_1	IF_7
0x40071eb	            0x4898	                                    cdqe	      5705	decNumber.c	DO_1	IF_7
0x40071ed	    0x440fb7a40000	            movzx r12d, word [rax + rax]	      5705	decNumber.c	DO_1	IF_7
0x40071f6	        0x410fb7f4	                         movzx esi, r12w	      5706	decNumber.c	DO_1	IF_7	CALL_26
0x40071fa	          0xc1fe02	                              sar esi, 2	      5706	decNumber.c	DO_1	IF_7	CALL_26
0x40071fd	          0x4889ef	                            mov rdi, rbp	      5706	decNumber.c	DO_1	IF_7	CALL_26
0x4007200	      0xe800000000	                          call 0x4007205	      5706	decNumber.c	DO_1	IF_7	CALL_26
0x4007205	        0x4183e403	                             and r12d, 3	      5707	decNumber.c	DO_1	IF_7
0x4007209	      0xb8fdffffff	                     mov eax, 0xfffffffd	      5707	decNumber.c	DO_1	IF_7
0x400720e	          0x4429e0	                           sub eax, r12d	      5707	decNumber.c	DO_1	IF_7
0x4007211	          0x894504	                mov dword [rbp + 4], eax	      5707	decNumber.c	DO_1	IF_7
0x4007214	        0xc6450880	                mov byte [rbp + 8], 0x80	      5708	decNumber.c	DO_1	IF_7
0x4007218	    0xc74424301000	           mov dword [rsp + 0x30], 0x10 	      5709	decNumber.c	DO_1	IF_7
0x4007220	    0xc744243c0300	               mov dword [rsp + 0x3c], 3	      5709	decNumber.c	DO_1	IF_7
0x4007228	      0x4c8d4c2428	                    lea r9, [rsp + 0x28]	      5710	decNumber.c	DO_1	IF_7	CALL_27
0x400722d	    0x41b800000000	                              mov r8d, 0	      5710	decNumber.c	DO_1	IF_7	CALL_27
0x4007233	      0x488d4c2430	                   lea rcx, [rsp + 0x30]	      5710	decNumber.c	DO_1	IF_7	CALL_27
0x4007238	          0x4889ea	                            mov rdx, rbp	      5710	decNumber.c	DO_1	IF_7	CALL_27
0x400723b	          0x4889de	                            mov rsi, rbx	      5710	decNumber.c	DO_1	IF_7	CALL_27
0x400723e	          0x4889df	                            mov rdi, rbx	      5710	decNumber.c	DO_1	IF_7	CALL_27
0x4007241	      0xe846d4ffff	                       call sym.decAddOp	      5710	decNumber.c	DO_1	IF_7	CALL_27
0x4007246	      0xc644247800	                mov byte [rsp + 0x78], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x400724b	    0xc74424740000	               mov dword [rsp + 0x74], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4007253	    0xc74424700100	               mov dword [rsp + 0x70], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x400725b	    0x66c744247a01	                mov word [rsp + 0x7a], 1	      5715	decNumber.c	DO_1	IF_7	CALL_28
0x4007262	        0x418b4704	                mov eax, dword [r15 + 4]	      5719	decNumber.c	DO_1	IF_7
0x4007266	        0x89442434	             mov dword [rsp + 0x34], eax	      5719	decNumber.c	DO_1	IF_7
0x400726a	        0x418b4708	                mov eax, dword [r15 + 8]	      5720	decNumber.c	DO_1	IF_7
0x400726e	        0x89442438	             mov dword [rsp + 0x38], eax	      5720	decNumber.c	DO_1	IF_7
0x4007272	      0xc644244800	                mov byte [rsp + 0x48], 0	      5721	decNumber.c	DO_1	IF_7
0x4007277	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      5723	decNumber.c	DO_1	IF_7
0x400727c	      0x4889442458	             mov qword [rsp + 0x58], rax	      5723	decNumber.c	DO_1	IF_7
0x4007281	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      5723	decNumber.c	DO_1	IF_7
0x4007286	      0x4889442460	             mov qword [rsp + 0x60], rax	      5723	decNumber.c	DO_1	IF_7
0x400728b	        0x8b442448	            mov eax, dword [rsp + 0x48] 	      5723	decNumber.c	DO_1	IF_7
0x400728f	        0x89442468	             mov dword [rsp + 0x68], eax	      5723	decNumber.c	DO_1	IF_7
0x4007293	    0xc74424547e84	       mov dword [rsp + 0x54], 0x1e847e 	      5724	decNumber.c	DO_1	IF_7
0x400729b	    0xc7442458827b	     mov dword [rsp + 0x58], 0xffe17b82 	      5725	decNumber.c	DO_1	IF_7
0x40072a3	    0xc74424300900	               mov dword [rsp + 0x30], 9	      5732	decNumber.c	DO_1	IF_7
0x40072ab	          0x418b06	                    mov eax, dword [r14]	      5733	decNumber.c	DO_1	IF_7
0x40072ae	          0x83c009	                              add eax, 9	      5733	decNumber.c	DO_1	IF_7
0x40072b1	        0x89442450	             mov dword [rsp + 0x50], eax	      5733	decNumber.c	DO_1	IF_7
0x40072b5	    0x41bc09000000	                             mov r12d, 9	      5729	decNumber.c	DO_1	IF_7
0x40072bb	            0xeb03	                           jmp 0x40072c0	      5729	decNumber.c	DO_1	IF_7
0x40072bd	          0x4589ec	                          mov r12d, r13d	      5729	decNumber.c	DO_1	IF_7
0x40072c0	        0x80430880	                add byte [rbx + 8], 0x80	      5744	decNumber.c	DO_1	IF_7	FOR_1
0x40072c4	      0x488d4c2428	                   lea rcx, [rsp + 0x28]	      5745	decNumber.c	DO_1	IF_7	FOR_1	CALL_29
0x40072c9	      0x488d542450	                   lea rdx, [rsp + 0x50]	      5745	decNumber.c	DO_1	IF_7	FOR_1	CALL_29
0x40072ce	          0x4889de	                            mov rsi, rbx	      5745	decNumber.c	DO_1	IF_7	FOR_1	CALL_29
0x40072d1	          0x4889ef	                            mov rdi, rbp	      5745	decNumber.c	DO_1	IF_7	FOR_1	CALL_29
0x40072d4	      0xe874f3ffff	                       call sym.decExpOp	      5745	decNumber.c	DO_1	IF_7	FOR_1	CALL_29
0x40072d9	        0x80430880	                add byte [rbx + 8], 0x80	      5746	decNumber.c	DO_1	IF_7	FOR_1
0x40072dd	      0x4c8d442428	                    lea r8, [rsp + 0x28]	      5748	decNumber.c	DO_1	IF_7	FOR_1	CALL_30
0x40072e2	      0x488d4c2450	                   lea rcx, [rsp + 0x50]	      5748	decNumber.c	DO_1	IF_7	FOR_1	CALL_30
0x40072e7	          0x4c89f2	                            mov rdx, r14	      5748	decNumber.c	DO_1	IF_7	FOR_1	CALL_30
0x40072ea	          0x4889ee	                            mov rsi, rbp	      5748	decNumber.c	DO_1	IF_7	FOR_1	CALL_30
0x40072ed	          0x4889ef	                            mov rdi, rbp	      5748	decNumber.c	DO_1	IF_7	FOR_1	CALL_30
0x40072f0	      0xe854c3ffff	                  call sym.decMultiplyOp	      5748	decNumber.c	DO_1	IF_7	FOR_1	CALL_30
0x40072f5	      0x4c8d4c2428	                    lea r9, [rsp + 0x28]	      5749	decNumber.c	DO_1	IF_7	FOR_1	CALL_31
0x40072fa	    0x41b880000000	                           mov r8d, 0x80	      5749	decNumber.c	DO_1	IF_7	FOR_1	CALL_31
0x4007300	      0x488d4c2450	                   lea rcx, [rsp + 0x50]	      5749	decNumber.c	DO_1	IF_7	FOR_1	CALL_31
0x4007305	      0x488d542470	                   lea rdx, [rsp + 0x70]	      5749	decNumber.c	DO_1	IF_7	FOR_1	CALL_31
0x400730a	          0x4889ee	                            mov rsi, rbp	      5749	decNumber.c	DO_1	IF_7	FOR_1	CALL_31
0x400730d	          0x4889ef	                            mov rdi, rbp	      5749	decNumber.c	DO_1	IF_7	FOR_1	CALL_31
0x4007310	      0xe877d3ffff	                       call sym.decAddOp	      5749	decNumber.c	DO_1	IF_7	FOR_1	CALL_31
0x4007315	         0xfb74d0a	            movzx ecx, word [rbp + 0xa] 	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x4007319	          0x6685c9	                             test cx, cx	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x400731c	            0x750c	                           jne 0x400732a	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x400731e	        0x837d0001	                      cmp dword [rbp], 1	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x4007322	            0x7506	                           jne 0x400732a	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x4007324	        0xf6450870	               test byte [rbp + 8], 0x70	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x4007328	            0x7415	                            je 0x400733f	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x400732a	          0x8b5304	                mov edx, dword [rbx + 4]	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x400732d	             0x313	                    add edx, dword [rbx]	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x400732f	          0x8b4504	                mov eax, dword [rbp + 4]	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x4007332	           0x34500	                    add eax, dword [rbp]	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x4007335	          0x410307	                    add eax, dword [r15]	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x4007338	          0x83c001	                              add eax, 1	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x400733b	            0x39c2	                            cmp edx, eax	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x400733d	            0x7c7d	                            jl 0x40073bc	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x400733f	            0x8b03	                    mov eax, dword [rbx]	      5761	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_18
0x4007341	          0x4139c5	                           cmp r13d, eax	      5761	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_18
0x4007344	     0xf84b7000000	                            je 0x4007401	      5761	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_18
0x400734a	      0x66837b0a00	                 cmp word [rbx + 0xa], 0	      5762	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	CALL_33
0x400734f	            0x7551	                           jne 0x40073a2	      5762	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	CALL_33
0x4007351	          0x83f801	                              cmp eax, 1	      5762	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	CALL_33
0x4007354	            0x754c	                           jne 0x40073a2	      5762	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	CALL_33
0x4007356	        0xf6430870	               test byte [rbx + 8], 0x70	      5762	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	CALL_33
0x400735a	            0x7546	                           jne 0x40073a2	      5762	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	CALL_33
0x400735c	      0x4c8d4c2428	                    lea r9, [rsp + 0x28]	      5763	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	CALL_34
0x4007361	    0x41b801000000	                              mov r8d, 1	      5763	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	CALL_34
0x4007367	      0x488d4c2430	                   lea rcx, [rsp + 0x30]	      5763	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	CALL_34
0x400736c	      0x488d542470	                   lea rdx, [rsp + 0x70]	      5763	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	CALL_34
0x4007371	          0x4c89f6	                            mov rsi, r14	      5763	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	CALL_34
0x4007374	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	      5763	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	CALL_34
0x400737c	      0xe836bcffff	                   call sym.decCompareOp	      5763	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	CALL_34
0x4007381	    0x6683bc248a00	                cmp word [rsp + 0x8a], 0	      5764	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	IF_20
0x400738a	            0x7509	                           jne 0x4007395	      5764	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	IF_20
0x400738c	    0xc74304000000	                  mov dword [rbx + 4], 0	      5764	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	IF_20
0x4007393	            0xeb6c	                           jmp 0x4007401	      5764	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	IF_20
0x4007395	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5765	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	ELSE_3
0x400739a	    0x810820080000	                   or dword [rax], 0x820	      5765	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	ELSE_3
0x40073a0	            0xeb5f	                           jmp 0x4007401	      5765	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	ELSE_3
0x40073a2	          0x6685c9	                             test cx, cx	      5769	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_35
0x40073a5	            0x7515	                           jne 0x40073bc	      5769	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_35
0x40073a7	        0x837d0001	                      cmp dword [rbp], 1	      5769	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_35
0x40073ab	            0x750f	                           jne 0x40073bc	      5769	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_35
0x40073ad	        0xf6450870	               test byte [rbp + 8], 0x70	      5769	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_35
0x40073b1	            0x7509	                           jne 0x40073bc	      5769	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_35
0x40073b3	          0x8b4304	                mov eax, dword [rbx + 4]	      5769	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_35
0x40073b6	          0x4429e8	                           sub eax, r13d	      5769	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_35
0x40073b9	          0x894504	                mov dword [rbp + 4], eax	      5769	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_35
0x40073bc	      0x4c8d4c2428	                    lea r9, [rsp + 0x28]	      5773	decNumber.c	DO_1	IF_7	FOR_1	CALL_36
0x40073c1	    0x41b800000000	                              mov r8d, 0	      5773	decNumber.c	DO_1	IF_7	FOR_1	CALL_36
0x40073c7	      0x488d4c2430	                   lea rcx, [rsp + 0x30]	      5773	decNumber.c	DO_1	IF_7	FOR_1	CALL_36
0x40073cc	          0x4889ea	                            mov rdx, rbp	      5773	decNumber.c	DO_1	IF_7	FOR_1	CALL_36
0x40073cf	          0x4889de	                            mov rsi, rbx	      5773	decNumber.c	DO_1	IF_7	FOR_1	CALL_36
0x40073d2	          0x4889df	                            mov rdi, rbx	      5773	decNumber.c	DO_1	IF_7	FOR_1	CALL_36
0x40073d5	      0xe8b2d2ffff	                       call sym.decAddOp	      5773	decNumber.c	DO_1	IF_7	FOR_1	CALL_36
0x40073da	          0x4539ec	                          cmp r12d, r13d	      5774	decNumber.c	DO_1	IF_7	FOR_1	IF_22
0x40073dd	     0xf84dafeffff	                            je 0x40072bd	      5774	decNumber.c	DO_1	IF_7	FOR_1	IF_22
0x40073e3	          0x4501e4	                          add r12d, r12d	      5776	decNumber.c	DO_1	IF_7	FOR_1
0x40073e6	          0x4539e5	                          cmp r13d, r12d	      5776	decNumber.c	DO_1	IF_7	FOR_1
0x40073e9	        0x450f4ee5	                       cmovle r12d, r13d	      5776	decNumber.c	DO_1	IF_7	FOR_1
0x40073ed	      0x4489642430	            mov dword [rsp + 0x30], r12d	      5778	decNumber.c	DO_1	IF_7	FOR_1
0x40073f2	          0x4489e0	                           mov eax, r12d	      5779	decNumber.c	DO_1	IF_7	FOR_1
0x40073f5	          0x410306	                    add eax, dword [r14]	      5779	decNumber.c	DO_1	IF_7	FOR_1
0x40073f8	        0x89442450	             mov dword [rsp + 0x50], eax	      5779	decNumber.c	DO_1	IF_7	FOR_1
0x40073fc	      0xe9bffeffff	                           jmp 0x40072c0	      5779	decNumber.c	DO_1	IF_7	FOR_1
0x4007401	    0xc744242c0100	               mov dword [rsp + 0x2c], 1	      5790	decNumber.c	DO_1	IF_7
0x4007409	      0x66837b0a00	                 cmp word [rbx + 0xa], 0	      5791	decNumber.c	DO_1	IF_7	CALL_38
0x400740e	            0x7513	                           jne 0x4007423	      5791	decNumber.c	DO_1	IF_7	CALL_38
0x4007410	          0x833b01	                      cmp dword [rbx], 1	      5791	decNumber.c	DO_1	IF_7	CALL_38
0x4007413	            0x750e	                           jne 0x4007423	      5791	decNumber.c	DO_1	IF_7	CALL_38
0x4007415	        0xf6430870	               test byte [rbx + 8], 0x70	      5791	decNumber.c	DO_1	IF_7	CALL_38
0x4007419	            0x7508	                           jne 0x4007423	      5791	decNumber.c	DO_1	IF_7	CALL_38
0x400741b	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	      5791	decNumber.c	DO_1	IF_7	CALL_38
0x4007423	          0x418b07	                    mov eax, dword [r15]	      5792	decNumber.c	DO_1	IF_7
0x4007426	        0x89442430	             mov dword [rsp + 0x30], eax	      5792	decNumber.c	DO_1	IF_7
0x400742a	      0x4c8b742418	            mov r14, qword [rsp + 0x18] 	      5793	decNumber.c	DO_1	IF_7	CALL_39
0x400742f	          0x4d89f0	                             mov r8, r14	      5793	decNumber.c	DO_1	IF_7	CALL_39
0x4007432	      0x488d4c242c	                   lea rcx, [rsp + 0x2c]	      5793	decNumber.c	DO_1	IF_7	CALL_39
0x4007437	      0x488d542430	                   lea rdx, [rsp + 0x30]	      5793	decNumber.c	DO_1	IF_7	CALL_39
0x400743c	          0x4889de	                            mov rsi, rbx	      5793	decNumber.c	DO_1	IF_7	CALL_39
0x400743f	        0x488b1c24	                    mov rbx, qword [rsp]	      5793	decNumber.c	DO_1	IF_7	CALL_39
0x4007443	          0x4889df	                            mov rdi, rbx	      5793	decNumber.c	DO_1	IF_7	CALL_39
0x4007446	      0xe89696ffff	                     call sym.decCopyFit	      5793	decNumber.c	DO_1	IF_7	CALL_39
0x400744b	          0x4c89f1	                            mov rcx, r14	      5794	decNumber.c	DO_1	IF_7
0x400744e	      0x488d54242c	                   lea rdx, [rsp + 0x2c]	      5794	decNumber.c	DO_1	IF_7
0x4007453	          0x4c89fe	                            mov rsi, r15	      5794	decNumber.c	DO_1	IF_7
0x4007456	          0x4889df	                            mov rdi, rbx	      5794	decNumber.c	DO_1	IF_7
0x4007459	      0xe8a4a6ffff	                    call sym.decFinalize	      5794	decNumber.c	DO_1	IF_7
0x400745e	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      5797	decNumber.c	DO_1
0x4007463	      0xe800000000	                          call 0x4007468	      5797	decNumber.c	DO_1
0x4007468	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      5798	decNumber.c	DO_1
0x400746d	      0xe800000000	                          call 0x4007472	      5798	decNumber.c	DO_1
0x4007472	        0x488b0424	                    mov rax, qword [rsp]	      5801	decNumber.c	DO_1
0x4007476	    0x488bb4240801	           mov rsi, qword [rsp + 0x108] 	      5801	decNumber.c	DO_1
0x400747e	    0x644833342528	                xor rsi, qword fs:[0x28]	      5801	decNumber.c	DO_1
0x4007487	            0x7405	                            je 0x400748e	      5801	decNumber.c	DO_1
0x4007489	      0xe800000000	                          call 0x400748e	      5801	decNumber.c	DO_1
0x400748e	    0x4881c4180100	                          add rsp, 0x118	      5801	decNumber.c	DO_1
0x4007495	              0x5b	                                 pop rbx	      5801	decNumber.c	DO_1
0x4007496	              0x5d	                                 pop rbp	      5801	decNumber.c	DO_1
0x4007497	            0x415c	                                 pop r12	      5801	decNumber.c	DO_1
0x4007499	            0x415d	                                 pop r13	      5801	decNumber.c	DO_1
0x400749b	            0x415e	                                 pop r14	      5801	decNumber.c	DO_1
0x400749d	            0x415f	                                 pop r15	      5801	decNumber.c	DO_1
0x400749f	              0xc3	                                     ret	      5801	decNumber.c	DO_1
decNumberIsNormal	SWITCH,0:functions,0:ELSE,0:DO,0:FOR,0:IF,4:CALL,3:WHILE,0	14
0x4008c8c	      0xb800000000	                              mov eax, 0	      3516	decNumber.c	FUNCTION_68	FUNCTION_58	CALL_2
0x4008c91	        0xf6470870	               test byte [rdi + 8], 0x70	      3516	decNumber.c	FUNCTION_68	FUNCTION_58	CALL_2
0x4008c95	            0x751d	                           jne 0x4008cb4	      3516	decNumber.c	FUNCTION_68	FUNCTION_58	CALL_2
0x4008c97	      0x66837f0a00	                 cmp word [rdi + 0xa], 0	      3517	decNumber.c	FUNCTION_68	FUNCTION_58	CALL_3
0x4008c9c	            0x7505	                           jne 0x4008ca3	      3517	decNumber.c	FUNCTION_68	FUNCTION_58	CALL_3
0x4008c9e	          0x833f01	                      cmp dword [rdi], 1	      3517	decNumber.c	FUNCTION_68	FUNCTION_58	CALL_3
0x4008ca1	            0x7411	                            je 0x4008cb4	      3517	decNumber.c	FUNCTION_68	FUNCTION_58	CALL_3
0x4008ca3	            0x8b07	                    mov eax, dword [rdi]	      3516	decNumber.c	FUNCTION_68	FUNCTION_58	CALL_2
0x4008ca5	           0x34704	                add eax, dword [rdi + 4]	      3516	decNumber.c	FUNCTION_68	FUNCTION_58	CALL_2
0x4008ca8	          0x83e801	                              sub eax, 1	      3516	decNumber.c	FUNCTION_68	FUNCTION_58	CALL_2
0x4008cab	          0x3b4608	                cmp eax, dword [rsi + 8]	      3516	decNumber.c	FUNCTION_68	FUNCTION_58	CALL_2
0x4008cae	           0xf9dc0	                                setge al	      3516	decNumber.c	FUNCTION_68	FUNCTION_58	CALL_2
0x4008cb1	           0xfb6c0	                           movzx eax, al	      3516	decNumber.c	FUNCTION_68	FUNCTION_58	CALL_2
0x4008cb4	            0xf3c3	                                     ret	      3522	decNumber.c	FUNCTION_68	FUNCTION_58
decNumberSameQuantum	SWITCH,0:functions,0:ELSE,2:DO,0:FOR,0:IF,5:CALL,6:WHILE,0	28
0x4002a63	          0x4889f8	                            mov rax, rdi	      2577	decNumber.c	FUNCTION_68	FUNCTION_42
0x4002a66	         0xfb67e08	               movzx edi, byte [rsi + 8]	      2584	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2
0x4002a6a	         0xfb64a08	               movzx ecx, byte [rdx + 8]	      2584	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2
0x4002a6e	          0x4189f8	                            mov r8d, edi	      2584	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2
0x4002a71	          0x4109c8	                             or r8d, ecx	      2584	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2
0x4002a74	        0x41f6c070	                          test r8b, 0x70	      2584	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2
0x4002a78	            0x7425	                            je 0x4002a9f	      2584	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2
0x4002a7a	        0x40f6c730	                          test dil, 0x30	      2585	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2	CALL_3
0x4002a7e	            0x740a	                            je 0x4002a8a	      2585	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2	CALL_3
0x4002a80	      0xba01000000	                              mov edx, 1	      2585	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2	CALL_3
0x4002a85	          0xf6c130	                           test cl, 0x30	      2585	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2	CALL_3
0x4002a88	            0x7521	                           jne 0x4002aab	      2585	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2	CALL_3
0x4002a8a	      0xba00000000	                              mov edx, 0	      2578	decNumber.c	FUNCTION_68	FUNCTION_42
0x4002a8f	        0x40f6c740	                          test dil, 0x40	      2586	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2	CALL_5
0x4002a93	            0x7416	                            je 0x4002aab	      2586	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2	CALL_5
0x4002a95	          0xc0e906	                               shr cl, 6	      2578	decNumber.c	FUNCTION_68	FUNCTION_42
0x4002a98	            0x89ca	                            mov edx, ecx	      2578	decNumber.c	FUNCTION_68	FUNCTION_42
0x4002a9a	          0x83e201	                              and edx, 1	      2578	decNumber.c	FUNCTION_68	FUNCTION_42
0x4002a9d	            0xeb0c	                           jmp 0x4002aab	      2578	decNumber.c	FUNCTION_68	FUNCTION_42
0x4002a9f	          0x8b4a04	                mov ecx, dword [rdx + 4]	      2578	decNumber.c	FUNCTION_68	FUNCTION_42
0x4002aa2	          0x394e04	                cmp dword [rsi + 4], ecx	      2578	decNumber.c	FUNCTION_68	FUNCTION_42
0x4002aa5	           0xf94c2	                                 sete dl	      2578	decNumber.c	FUNCTION_68	FUNCTION_42
0x4002aa8	           0xfb6d2	                           movzx edx, dl	      2578	decNumber.c	FUNCTION_68	FUNCTION_42
0x4002aab	        0xc6400800	                   mov byte [rax + 8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x4002aaf	    0xc74004000000	                  mov dword [rax + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4002ab6	    0xc70001000000	                      mov dword [rax], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4002abc	        0x6689500a	                mov word [rax + 0xa], dx	      2592	decNumber.c	FUNCTION_68	FUNCTION_42
0x4002ac0	              0xc3	                                     ret	      2594	decNumber.c	FUNCTION_68	FUNCTION_42
decNumberCompare	SWITCH,0:functions,0:ELSE,0:DO,0:FOR,0:IF,1:CALL,2:WHILE,0	27
0x400337f	              0x55	                                push rbp	       865	decNumber.c	FUNCTION_68	FUNCTION_11
0x4003380	              0x53	                                push rbx	       865	decNumber.c	FUNCTION_68	FUNCTION_11
0x4003381	        0x4883ec18	                           sub rsp, 0x18	       865	decNumber.c	FUNCTION_68	FUNCTION_11
0x4003385	          0x4889fb	                            mov rbx, rdi	       865	decNumber.c	FUNCTION_68	FUNCTION_11
0x4003388	          0x4889cd	                            mov rbp, rcx	       865	decNumber.c	FUNCTION_68	FUNCTION_11
0x400338b	    0x64488b042528	                mov rax, qword fs:[0x28]	       865	decNumber.c	FUNCTION_68	FUNCTION_11
0x4003394	      0x4889442408	                mov qword [rsp + 8], rax	       865	decNumber.c	FUNCTION_68	FUNCTION_11
0x4003399	            0x31c0	                            xor eax, eax	       865	decNumber.c	FUNCTION_68	FUNCTION_11
0x400339b	    0xc74424040000	                  mov dword [rsp + 4], 0	       866	decNumber.c	FUNCTION_68	FUNCTION_11
0x40033a3	      0x4c8d4c2404	                       lea r9, [rsp + 4]	       867	decNumber.c	FUNCTION_68	FUNCTION_11	CALL_1
0x40033a8	    0x41b801000000	                              mov r8d, 1	       867	decNumber.c	FUNCTION_68	FUNCTION_11	CALL_1
0x40033ae	      0xe804fcffff	                   call sym.decCompareOp	       867	decNumber.c	FUNCTION_68	FUNCTION_11	CALL_1
0x40033b3	        0x8b742404	                mov esi, dword [rsp + 4]	       868	decNumber.c	FUNCTION_68	FUNCTION_11	CALL_2
0x40033b7	            0x85f6	                           test esi, esi	       868	decNumber.c	FUNCTION_68	FUNCTION_11	CALL_2
0x40033b9	            0x740b	                            je 0x40033c6	       868	decNumber.c	FUNCTION_68	FUNCTION_11	CALL_2
0x40033bb	          0x4889ea	                            mov rdx, rbp	       868	decNumber.c	FUNCTION_68	FUNCTION_11	CALL_2
0x40033be	          0x4889df	                            mov rdi, rbx	       868	decNumber.c	FUNCTION_68	FUNCTION_11	CALL_2
0x40033c1	      0xe856e2ffff	                      call sym.decStatus	       868	decNumber.c	FUNCTION_68	FUNCTION_11	CALL_2
0x40033c6	          0x4889d8	                            mov rax, rbx	       870	decNumber.c	FUNCTION_68	FUNCTION_11
0x40033c9	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       870	decNumber.c	FUNCTION_68	FUNCTION_11
0x40033ce	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       870	decNumber.c	FUNCTION_68	FUNCTION_11
0x40033d7	            0x7405	                            je 0x40033de	       870	decNumber.c	FUNCTION_68	FUNCTION_11
0x40033d9	      0xe800000000	                          call 0x40033de	       870	decNumber.c	FUNCTION_68	FUNCTION_11
0x40033de	        0x4883c418	                           add rsp, 0x18	       870	decNumber.c	FUNCTION_68	FUNCTION_11
0x40033e2	              0x5b	                                 pop rbx	       870	decNumber.c	FUNCTION_68	FUNCTION_11
0x40033e3	              0x5d	                                 pop rbp	       870	decNumber.c	FUNCTION_68	FUNCTION_11
0x40033e4	              0xc3	                                     ret	       870	decNumber.c	FUNCTION_68	FUNCTION_11
decToString	SWITCH,0:functions,0:ELSE,4:DO,0:FOR,8:IF,24:CALL,15:WHILE,0	380
0x4000dcb	            0x4154	                                push r12	      3615	decNumber.c	FUNCTION_68	FUNCTION_63
0x4000dcd	              0x55	                                push rbp	      3615	decNumber.c	FUNCTION_68	FUNCTION_63
0x4000dce	              0x53	                                push rbx	      3615	decNumber.c	FUNCTION_68	FUNCTION_63
0x4000dcf	          0x4189d3	                           mov r11d, edx	      3615	decNumber.c	FUNCTION_68	FUNCTION_63
0x4000dd2	          0x8b5f04	                mov ebx, dword [rdi + 4]	      3616	decNumber.c	FUNCTION_68	FUNCTION_63
0x4000dd5	            0x8b07	                    mov eax, dword [rdi]	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x4000dd7	          0x83f831	                           cmp eax, 0x31	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x4000dda	            0x7f10	                            jg 0x4000dec	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x4000ddc	            0x4898	                                    cdqe	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x4000dde	     0xfb680000000	                   movzx eax, byte [rax]	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x4000de5	      0x4c8d4c00fe	                 lea r9, [rax + rax - 2]	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x4000dea	            0xeb1b	                           jmp 0x4000e07	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x4000dec	          0x8d4802	                      lea ecx, [rax + 2]	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x4000def	      0xba56555555	                     mov edx, 0x55555556	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x4000df4	            0x89c8	                            mov eax, ecx	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x4000df6	            0xf7ea	                                imul edx	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x4000df8	            0x89c8	                            mov eax, ecx	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x4000dfa	          0xc1f81f	                           sar eax, 0x1f	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x4000dfd	            0x29c2	                            sub edx, eax	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x4000dff	          0x4863c2	                         movsxd rax, edx	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x4000e02	      0x4c8d4c00fe	                 lea r9, [rax + rax - 2]	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x4000e07	        0x807f0800	                   cmp byte [rdi + 8], 0	      3630	decNumber.c	FUNCTION_68	FUNCTION_63	IF_2	CALL_4
0x4000e0b	            0x7907	                           jns 0x4000e14	      3630	decNumber.c	FUNCTION_68	FUNCTION_63	IF_2	CALL_4
0x4000e0d	          0xc6062d	                    mov byte [rsi], 0x2d	      3631	decNumber.c	FUNCTION_68	FUNCTION_63	IF_2
0x4000e10	        0x4883c601	                              add rsi, 1	      3632	decNumber.c	FUNCTION_68	FUNCTION_63	IF_2
0x4000e14	         0xfb64708	               movzx eax, byte [rdi + 8]	      3634	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3
0x4000e18	            0xa870	                           test al, 0x70	      3634	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3
0x4000e1a	            0x7449	                            je 0x4000e65	      3634	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3
0x4000e1c	            0xa840	                           test al, 0x40	      3635	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_4	CALL_5
0x4000e1e	            0x7418	                            je 0x4000e38	      3635	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_4	CALL_5
0x4000e20	    0xc706496e6600	               mov dword [rsi], 0x666e49	       110	string3.h	FUNCTION_39	CALL_3
0x4000e26	    0xc74603696e69	        mov dword [rsi + 3], 0x74696e69 	       110	string3.h	FUNCTION_39	CALL_3
0x4000e2d	    0x66c746077900	                mov word [rsi + 7], 0x79	       110	string3.h	FUNCTION_39	CALL_3
0x4000e33	      0xe913040000	                           jmp 0x400124b	       110	string3.h	FUNCTION_39	CALL_3
0x4000e38	            0xa810	                           test al, 0x10	      3640	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_5
0x4000e3a	            0x7407	                            je 0x4000e43	      3640	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_5
0x4000e3c	          0xc60673	                    mov byte [rsi], 0x73	      3641	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_5
0x4000e3f	        0x4883c601	                              add rsi, 1	      3642	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_5
0x4000e43	    0xc7064e614e00	               mov dword [rsi], 0x4e614e	       110	string3.h	FUNCTION_39	CALL_3
0x4000e49	        0x4883c603	                              add rsi, 3	      3645	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3
0x4000e4d	            0x85db	                           test ebx, ebx	      3648	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_6
0x4000e4f	     0xf85f6030000	                           jne 0x400124b	      3648	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_6
0x4000e55	      0x66837f0a00	                 cmp word [rdi + 0xa], 0	      3648	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_6
0x4000e5a	            0x7509	                           jne 0x4000e65	      3648	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_6
0x4000e5c	          0x833f01	                      cmp dword [rdi], 1	      3648	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_6
0x4000e5f	     0xf84e6030000	                            je 0x400124b	      3648	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_6
0x4000e65	          0x448b27	                   mov r12d, dword [rdi]	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x4000e68	        0x4183fc31	                          cmp r12d, 0x31	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x4000e6c	            0x7f10	                            jg 0x4000e7e	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x4000e6e	          0x4963c4	                        movsxd rax, r12d	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x4000e71	     0xfb680000000	                   movzx eax, byte [rax]	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x4000e78	        0x8d4440fd	              lea eax, [rax + rax*2 - 3]	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x4000e7c	            0xeb17	                           jmp 0x4000e95	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x4000e7e	      0x418d4c2402	                      lea ecx, [r12 + 2]	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x4000e83	      0xba56555555	                     mov edx, 0x55555556	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x4000e88	            0x89c8	                            mov eax, ecx	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x4000e8a	            0xf7ea	                                imul edx	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x4000e8c	          0xc1f91f	                           sar ecx, 0x1f	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x4000e8f	            0x29ca	                            sub edx, ecx	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x4000e91	        0x8d4452fd	              lea eax, [rdx + rdx*2 - 3]	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x4000e95	        0x4c8d570a	                    lea r10, [rdi + 0xa]	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x4000e99	          0x4d01d1	                             add r9, r10	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x4000e9c	          0x4589e0	                           mov r8d, r12d	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x4000e9f	          0x4129c0	                            sub r8d, eax	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x4000ea2	        0x4183e801	                              sub r8d, 1	      3654	decNumber.c	FUNCTION_68	FUNCTION_63
0x4000ea6	            0x85db	                           test ebx, ebx	      3656	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7
0x4000ea8	     0xf8586000000	                           jne 0x4000f34	      3656	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7
0x4000eae	          0x4d39ca	                             cmp r10, r9	      3657	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1
0x4000eb1	            0x7779	                            ja 0x4000f2c	      3657	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1
0x4000eb3	        0x410fb711	                    movzx edx, word [r9]	      3658	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1
0x4000eb7	          0x4585c0	                           test r8d, r8d	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4000eba	            0x7861	                            js 0x4000f1d	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4000ebc	          0x4889f1	                            mov rcx, rsi	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4000ebf	          0x4489c7	                            mov edi, r8d	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4000ec2	          0xc60130	                    mov byte [rcx], 0x30	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4000ec5	          0x4863c7	                         movsxd rax, edi	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4000ec8	    0x8b0485000000	                  mov eax, dword [rax*4]	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4000ecf	             0x1c0	                            add eax, eax	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4000ed1	            0x39d0	                            cmp eax, edx	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4000ed3	            0x7320	                           jae 0x4000ef5	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4000ed5	          0xc1e002	                              shl eax, 2	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4000ed8	            0x39d0	                            cmp eax, edx	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4000eda	            0x7705	                            ja 0x4000ee1	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4000edc	            0x29c2	                            sub edx, eax	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4000ede	          0xc60138	                    mov byte [rcx], 0x38	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4000ee1	          0x4189c3	                           mov r11d, eax	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4000ee4	          0x41d1eb	                             shr r11d, 1	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4000ee7	          0x4439da	                           cmp edx, r11d	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4000eea	            0x7206	                            jb 0x4000ef2	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4000eec	          0x4429da	                           sub edx, r11d	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4000eef	          0x800104	                       add byte [rcx], 4	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4000ef2	          0xc1e802	                              shr eax, 2	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4000ef5	            0x39c2	                            cmp edx, eax	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4000ef7	            0x7205	                            jb 0x4000efe	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4000ef9	            0x29c2	                            sub edx, eax	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4000efb	          0x800102	                       add byte [rcx], 2	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4000efe	            0xd1e8	                              shr eax, 1	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4000f00	            0x39c2	                            cmp edx, eax	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4000f02	            0x7205	                            jb 0x4000f09	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4000f04	            0x29c2	                            sub edx, eax	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4000f06	          0x800101	                       add byte [rcx], 1	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4000f09	        0x4883c101	                              add rcx, 1	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4000f0d	          0x83ef01	                              sub edi, 1	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4000f10	          0x83ffff	             cmp edi, 0xffffffffffffffff	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4000f13	            0x75ad	                           jne 0x4000ec2	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4000f15	          0x4589c0	                            mov r8d, r8d	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4000f18	      0x4a8d740601	                 lea rsi, [rsi + r8 + 1]	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4000f1d	        0x4983e902	                               sub r9, 2	      3657	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1
0x4000f21	    0x41b802000000	                              mov r8d, 2	      3660	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1
0x4000f27	          0x4d39ca	                             cmp r10, r9	      3657	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1
0x4000f2a	            0x7687	                           jbe 0x4000eb3	      3657	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1
0x4000f2c	          0xc60600	                       mov byte [rsi], 0	      3662	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7
0x4000f2f	      0xe917030000	                           jmp 0x400124b	      3663	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7
0x4000f34	        0x428d2c23	                    lea ebp, [rbx + r12]	      3666	decNumber.c	FUNCTION_68	FUNCTION_63
0x4000f38	            0x85db	                           test ebx, ebx	      3668	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8
0x4000f3a	            0x7f09	                            jg 0x4000f45	      3668	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8
0x4000f3c	          0x83fdfb	             cmp ebp, 0xfffffffffffffffb	      3668	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8
0x4000f3f	     0xf8de3020000	                           jge 0x4001228	      3668	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8
0x4000f45	          0x8d4dff	                      lea ecx, [rbp - 1]	      3669	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8
0x4000f48	          0x4584db	                         test r11b, r11b	      3671	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9
0x4000f4b	     0xf84c9020000	                            je 0x400121a	      3671	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9
0x4000f51	            0x85c9	                           test ecx, ecx	      3671	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9
0x4000f53	     0xf84c1020000	                            je 0x400121a	      3671	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9
0x4000f59	            0x85c9	                           test ecx, ecx	      3675	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10
0x4000f5b	            0x792f	                           jns 0x4000f8c	      3675	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10
0x4000f5d	          0x4189cb	                           mov r11d, ecx	      3676	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10
0x4000f60	          0x41f7db	                                neg r11d	      3676	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10
0x4000f63	      0xbd56555555	                     mov ebp, 0x55555556	      3676	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10
0x4000f68	          0x4489d8	                           mov eax, r11d	      3676	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10
0x4000f6b	            0xf7ed	                                imul ebp	      3676	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10
0x4000f6d	          0x4489d8	                           mov eax, r11d	      3676	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10
0x4000f70	          0xc1f81f	                           sar eax, 0x1f	      3676	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10
0x4000f73	            0x29c2	                            sub edx, eax	      3676	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10
0x4000f75	          0x8d0452	                  lea eax, [rdx + rdx*2]	      3676	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10
0x4000f78	          0x4129c3	                           sub r11d, eax	      3677	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10	IF_11
0x4000f7b	          0x4489dd	                           mov ebp, r11d	      3677	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10	IF_11
0x4000f7e	            0x7423	                            je 0x4000fa3	      3677	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10	IF_11
0x4000f80	      0xb803000000	                              mov eax, 3	      3677	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10	IF_11
0x4000f85	          0x4429d8	                           sub eax, r11d	      3677	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10	IF_11
0x4000f88	            0x89c5	                            mov ebp, eax	      3677	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10	IF_11
0x4000f8a	            0xeb17	                           jmp 0x4000fa3	      3677	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10	IF_11
0x4000f8c	      0xbd56555555	                     mov ebp, 0x55555556	      3680	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	ELSE_1
0x4000f91	            0x89c8	                            mov eax, ecx	      3680	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	ELSE_1
0x4000f93	            0xf7ed	                                imul ebp	      3680	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	ELSE_1
0x4000f95	            0x89c8	                            mov eax, ecx	      3680	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	ELSE_1
0x4000f97	          0xc1f81f	                           sar eax, 0x1f	      3680	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	ELSE_1
0x4000f9a	            0x29c2	                            sub edx, eax	      3680	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	ELSE_1
0x4000f9c	          0x8d0452	                  lea eax, [rdx + rdx*2]	      3680	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	ELSE_1
0x4000f9f	            0x89cd	                            mov ebp, ecx	      3680	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	ELSE_1
0x4000fa1	            0x29c5	                            sub ebp, eax	      3680	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	ELSE_1
0x4000fa3	            0x29e9	                            sub ecx, ebp	      3682	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9
0x4000fa5	      0x66837f0a00	                 cmp word [rdi + 0xa], 0	      3686	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	CALL_11
0x4000faa	            0x750c	                           jne 0x4000fb8	      3686	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	CALL_11
0x4000fac	        0x4183fc01	                             cmp r12d, 1	      3686	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	CALL_11
0x4000fb0	            0x7506	                           jne 0x4000fb8	      3686	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	CALL_11
0x4000fb2	        0xf6470870	               test byte [rdi + 8], 0x70	      3686	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	CALL_11
0x4000fb6	            0x7405	                            je 0x4000fbd	      3686	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	CALL_11
0x4000fb8	          0x83c501	                              add ebp, 1	      3686	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	CALL_11
0x4000fbb	            0xeb0e	                           jmp 0x4000fcb	      3686	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	CALL_11
0x4000fbd	            0x85ed	                           test ebp, ebp	      3688	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	ELSE_2	IF_13
0x4000fbf	     0xf8455020000	                            je 0x400121a	      3688	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	ELSE_2	IF_13
0x4000fc5	          0x83c103	                              add ecx, 3	      3689	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	ELSE_2	IF_13
0x4000fc8	          0x83ed02	                              sub ebp, 2	      3690	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	ELSE_2	IF_13
0x4000fcb	        0x410fb701	                    movzx eax, word [r9]	      3697	decNumber.c	FUNCTION_68	FUNCTION_63
0x4000fcf	            0x85ed	                           test ebp, ebp	      3698	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14
0x4000fd1	     0xf8e1d010000	                           jle 0x40010f4	      3698	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14
0x4000fd7	          0x4189eb	                           mov r11d, ebp	      3667	decNumber.c	FUNCTION_68	FUNCTION_63
0x4000fda	          0x4585c0	                           test r8d, r8d	      3701	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	IF_15
0x4000fdd	            0x7914	                           jns 0x4000ff3	      3701	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	IF_15
0x4000fdf	          0x4d39ca	                             cmp r10, r9	      3702	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	IF_15	IF_16
0x4000fe2	            0x7468	                            je 0x400104c	      3702	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	IF_15	IF_16
0x4000fe4	      0x410fb741fe	                movzx eax, word [r9 - 2]	      3705	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	IF_15
0x4000fe9	        0x4d8d49fe	                        lea r9, [r9 - 2]	      3703	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	IF_15
0x4000fed	    0x41b802000000	                              mov r8d, 2	      3704	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	IF_15
0x4000ff3	          0xc60630	                    mov byte [rsi], 0x30	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4000ff6	          0x4963d0	                         movsxd rdx, r8d	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4000ff9	    0x8b1495000000	                  mov edx, dword [rdx*4]	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4001000	             0x1d2	                            add edx, edx	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4001002	            0x39d0	                            cmp eax, edx	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4001004	            0x761c	                           jbe 0x4001022	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4001006	          0xc1e202	                              shl edx, 2	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4001009	            0x39d0	                            cmp eax, edx	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x400100b	            0x7205	                            jb 0x4001012	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x400100d	            0x29d0	                            sub eax, edx	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x400100f	          0xc60638	                    mov byte [rsi], 0x38	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4001012	            0x89d3	                            mov ebx, edx	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4001014	            0xd1eb	                              shr ebx, 1	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4001016	            0x39d8	                            cmp eax, ebx	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4001018	            0x7205	                            jb 0x400101f	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x400101a	            0x29d8	                            sub eax, ebx	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x400101c	          0x800604	                       add byte [rsi], 4	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x400101f	          0xc1ea02	                              shr edx, 2	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4001022	            0x39d0	                            cmp eax, edx	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4001024	            0x7205	                            jb 0x400102b	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4001026	            0x29d0	                            sub eax, edx	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4001028	          0x800602	                       add byte [rsi], 2	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x400102b	            0xd1ea	                              shr edx, 1	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x400102d	            0x39d0	                            cmp eax, edx	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x400102f	            0x7205	                            jb 0x4001036	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4001031	            0x29d0	                            sub eax, edx	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4001033	          0x800601	                       add byte [rsi], 1	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4001036	        0x4183eb01	                             sub r11d, 1	      3700	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3
0x400103a	        0x4883c601	                              add rsi, 1	      3700	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3
0x400103e	        0x4183e801	                              sub r8d, 1	      3700	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3
0x4001042	          0x4585db	                         test r11d, r11d	      3700	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3
0x4001045	            0x7f93	                            jg 0x4000fda	      3700	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3
0x4001047	      0xe9f2010000	                           jmp 0x400123e	      3700	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3
0x400104c	            0x392f	                    cmp dword [rdi], ebp	      3709	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17
0x400104e	            0x7f0a	                            jg 0x400105a	      3709	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17
0x4001050	          0x4585db	                         test r11d, r11d	      3721	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_5
0x4001053	            0x7f79	                            jg 0x40010ce	      3721	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_5
0x4001055	      0xe92e010000	                           jmp 0x4001188	      3721	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_5
0x400105a	          0x4d89d1	                             mov r9, r10	      3721	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_5
0x400105d	          0xc6062e	                    mov byte [rsi], 0x2e	      3710	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17
0x4001060	        0x4883c601	                              add rsi, 1	      3710	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17
0x4001064	          0x4585c0	                           test r8d, r8d	      3712	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	IF_18
0x4001067	            0x7918	                           jns 0x4001081	      3712	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	IF_18
0x4001069	          0x4d39d1	                             cmp r9, r10	      3713	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	IF_18	IF_19
0x400106c	     0xf8416010000	                            je 0x4001188	      3713	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	IF_18	IF_19
0x4001072	      0x410fb741fe	                movzx eax, word [r9 - 2]	      3716	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	IF_18
0x4001077	        0x4d8d49fe	                        lea r9, [r9 - 2]	      3714	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	IF_18
0x400107b	    0x41b802000000	                              mov r8d, 2	      3715	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	IF_18
0x4001081	          0xc60630	                    mov byte [rsi], 0x30	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4001084	          0x4963d0	                         movsxd rdx, r8d	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4001087	    0x8b1495000000	                  mov edx, dword [rdx*4]	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x400108e	             0x1d2	                            add edx, edx	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4001090	            0x39d0	                            cmp eax, edx	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4001092	            0x761c	                           jbe 0x40010b0	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4001094	          0xc1e202	                              shl edx, 2	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4001097	            0x39d0	                            cmp eax, edx	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4001099	            0x7205	                            jb 0x40010a0	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x400109b	            0x29d0	                            sub eax, edx	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x400109d	          0xc60638	                    mov byte [rsi], 0x38	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x40010a0	            0x89d7	                            mov edi, edx	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x40010a2	            0xd1ef	                              shr edi, 1	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x40010a4	            0x39f8	                            cmp eax, edi	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x40010a6	            0x7205	                            jb 0x40010ad	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x40010a8	            0x29f8	                            sub eax, edi	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x40010aa	          0x800604	                       add byte [rsi], 4	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x40010ad	          0xc1ea02	                              shr edx, 2	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x40010b0	            0x39d0	                            cmp eax, edx	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x40010b2	            0x7205	                            jb 0x40010b9	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x40010b4	            0x29d0	                            sub eax, edx	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x40010b6	          0x800602	                       add byte [rsi], 2	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x40010b9	            0xd1ea	                              shr edx, 1	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x40010bb	            0x39d0	                            cmp eax, edx	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x40010bd	            0x7205	                            jb 0x40010c4	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x40010bf	            0x29d0	                            sub eax, edx	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x40010c1	          0x800601	                       add byte [rsi], 1	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x40010c4	        0x4883c601	                              add rsi, 1	      3711	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4
0x40010c8	        0x4183e801	                              sub r8d, 1	      3711	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4
0x40010cc	            0xeb96	                           jmp 0x4001064	      3719	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4
0x40010ce	        0x418d43ff	                      lea eax, [r11 - 1]	      3719	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4
0x40010d2	      0x488d540601	                lea rdx, [rsi + rax + 1]	      3719	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4
0x40010d7	          0x4889f0	                            mov rax, rsi	      3721	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_5
0x40010da	          0xc60030	                    mov byte [rax], 0x30	      3721	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_5
0x40010dd	        0x4883c001	                              add rax, 1	      3721	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_5
0x40010e1	          0x4839c2	                            cmp rdx, rax	      3721	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_5
0x40010e4	            0x75f4	                           jne 0x40010da	      3721	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_5
0x40010e6	        0x418d43ff	                      lea eax, [r11 - 1]	      3721	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_5
0x40010ea	      0x488d740601	                lea rsi, [rsi + rax + 1]	      3721	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_5
0x40010ef	      0xe994000000	                           jmp 0x4001188	      3721	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_5
0x40010f4	          0xc60630	                    mov byte [rsi], 0x30	      3724	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4
0x40010f7	        0xc646012e	                mov byte [rsi + 1], 0x2e	      3725	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4
0x40010fb	        0x4883c602	                              add rsi, 2	      3725	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4
0x40010ff	            0x85ed	                           test ebp, ebp	      3726	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_6
0x4001101	            0x791f	                           jns 0x4001122	      3726	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_6
0x4001103	            0x89ea	                            mov edx, ebp	      3726	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_6
0x4001105	            0xf7d2	                                 not edx	      3726	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_6
0x4001107	      0x488d7c1601	                lea rdi, [rsi + rdx + 1]	      3726	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_6
0x400110c	          0x4889f2	                            mov rdx, rsi	      3726	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_6
0x400110f	          0xc60230	                    mov byte [rdx], 0x30	      3726	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_6
0x4001112	        0x4883c201	                              add rdx, 1	      3726	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_6
0x4001116	          0x4839d7	                            cmp rdi, rdx	      3726	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_6
0x4001119	            0x75f4	                           jne 0x400110f	      3726	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_6
0x400111b	            0xf7d5	                                 not ebp	      3726	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_6
0x400111d	      0x488d742e01	                lea rsi, [rsi + rbp + 1]	      3726	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_6
0x4001122	          0x4585c0	                           test r8d, r8d	      3728	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	IF_20
0x4001125	            0x7914	                           jns 0x400113b	      3728	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	IF_20
0x4001127	          0x4d39d1	                             cmp r9, r10	      3729	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	IF_20	IF_21
0x400112a	            0x745c	                            je 0x4001188	      3729	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	IF_20	IF_21
0x400112c	      0x410fb741fe	                movzx eax, word [r9 - 2]	      3732	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	IF_20
0x4001131	        0x4d8d49fe	                        lea r9, [r9 - 2]	      3730	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	IF_20
0x4001135	    0x41b802000000	                              mov r8d, 2	      3731	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	IF_20
0x400113b	          0xc60630	                    mov byte [rsi], 0x30	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x400113e	          0x4963d0	                         movsxd rdx, r8d	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4001141	    0x8b1495000000	                  mov edx, dword [rdx*4]	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4001148	             0x1d2	                            add edx, edx	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x400114a	            0x39d0	                            cmp eax, edx	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x400114c	            0x761c	                           jbe 0x400116a	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x400114e	          0xc1e202	                              shl edx, 2	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4001151	            0x39d0	                            cmp eax, edx	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4001153	            0x7205	                            jb 0x400115a	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4001155	            0x29d0	                            sub eax, edx	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4001157	          0xc60638	                    mov byte [rsi], 0x38	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x400115a	            0x89d7	                            mov edi, edx	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x400115c	            0xd1ef	                              shr edi, 1	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x400115e	            0x39f8	                            cmp eax, edi	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4001160	            0x7205	                            jb 0x4001167	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4001162	            0x29f8	                            sub eax, edi	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4001164	          0x800604	                       add byte [rsi], 4	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4001167	          0xc1ea02	                              shr edx, 2	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x400116a	            0x39d0	                            cmp eax, edx	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x400116c	            0x7205	                            jb 0x4001173	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x400116e	            0x29d0	                            sub eax, edx	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4001170	          0x800602	                       add byte [rsi], 2	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4001173	            0xd1ea	                              shr edx, 1	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4001175	            0x39d0	                            cmp eax, edx	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4001177	            0x7205	                            jb 0x400117e	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4001179	            0x29d0	                            sub eax, edx	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x400117b	          0x800601	                       add byte [rsi], 1	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x400117e	        0x4883c601	                              add rsi, 1	      3727	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7
0x4001182	        0x4183e801	                              sub r8d, 1	      3727	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7
0x4001186	            0xeb9a	                           jmp 0x4001122	      3735	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7
0x4001188	            0x85c9	                           test ecx, ecx	      3741	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22
0x400118a	     0xf8485000000	                            je 0x4001215	      3741	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22
0x4001190	          0xc60645	                    mov byte [rsi], 0x45	      3743	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22
0x4001193	        0x488d4602	                      lea rax, [rsi + 2]	      3744	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22
0x4001197	            0x85c9	                           test ecx, ecx	      3746	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	IF_23
0x4001199	            0x7806	                            js 0x40011a1	      3746	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	IF_23
0x400119b	        0xc646012b	                mov byte [rsi + 1], 0x2b	      3744	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22
0x400119f	            0xeb06	                           jmp 0x40011a7	      3744	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22
0x40011a1	        0xc646012d	                mov byte [rsi + 1], 0x2d	      3747	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	IF_23
0x40011a5	            0xf7d9	                                 neg ecx	      3748	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	IF_23
0x40011a7	      0xba00000000	                              mov edx, 0	      3748	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	IF_23
0x40011ac	    0x41b900000000	                              mov r9d, 0	      3748	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	IF_23
0x40011b2	          0x4889c6	                            mov rsi, rax	      3731	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	IF_20
0x40011b5	      0xbf00000000	                              mov edi, 0	      3731	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	IF_20
0x40011ba	          0xc60630	                    mov byte [rsi], 0x30	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x40011bd	            0x8b02	                    mov eax, dword [rdx]	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x40011bf	             0x1c0	                            add eax, eax	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x40011c1	            0x39c8	                            cmp eax, ecx	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x40011c3	            0x7320	                           jae 0x40011e5	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x40011c5	          0xc1e002	                              shl eax, 2	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x40011c8	            0x39c8	                            cmp eax, ecx	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x40011ca	            0x7705	                            ja 0x40011d1	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x40011cc	            0x29c1	                            sub ecx, eax	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x40011ce	          0xc60638	                    mov byte [rsi], 0x38	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x40011d1	          0x4189c0	                            mov r8d, eax	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x40011d4	          0x41d1e8	                              shr r8d, 1	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x40011d7	          0x4439c1	                            cmp ecx, r8d	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x40011da	            0x7206	                            jb 0x40011e2	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x40011dc	          0x4429c1	                            sub ecx, r8d	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x40011df	          0x800604	                       add byte [rsi], 4	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x40011e2	          0xc1e802	                              shr eax, 2	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x40011e5	            0x39c1	                            cmp ecx, eax	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x40011e7	            0x7205	                            jb 0x40011ee	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x40011e9	            0x29c1	                            sub ecx, eax	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x40011eb	          0x800602	                       add byte [rsi], 2	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x40011ee	            0xd1e8	                              shr eax, 1	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x40011f0	            0x39c1	                            cmp ecx, eax	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x40011f2	            0x7205	                            jb 0x40011f9	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x40011f4	            0x29c1	                            sub ecx, eax	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x40011f6	          0x800601	                       add byte [rsi], 1	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x40011f9	          0x803e30	                    cmp byte [rsi], 0x30	      3753	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	IF_24
0x40011fc	            0x7505	                           jne 0x4001203	      3753	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	IF_24
0x40011fe	          0x4084ff	                           test dil, dil	      3753	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	IF_24
0x4001201	            0x7409	                            je 0x400120c	      3753	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	IF_24
0x4001203	        0x4883c601	                              add rsi, 1	      3755	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8
0x4001207	      0xbf01000000	                              mov edi, 1	      3754	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8
0x400120c	        0x4883ea04	                              sub rdx, 4	      3754	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8
0x4001210	          0x4939d1	                             cmp r9, rdx	      3751	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8
0x4001213	            0x75a5	                           jne 0x40011ba	      3751	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8
0x4001215	          0xc60600	                       mov byte [rsi], 0	      3758	decNumber.c	FUNCTION_68	FUNCTION_63
0x4001218	            0xeb31	                           jmp 0x400124b	      3759	decNumber.c	FUNCTION_68	FUNCTION_63
0x400121a	        0x410fb701	                    movzx eax, word [r9]	      3697	decNumber.c	FUNCTION_68	FUNCTION_63
0x400121e	      0xbd01000000	                              mov ebp, 1	      3697	decNumber.c	FUNCTION_68	FUNCTION_63
0x4001223	      0xe9affdffff	                           jmp 0x4000fd7	      3697	decNumber.c	FUNCTION_68	FUNCTION_63
0x4001228	        0x410fb701	                    movzx eax, word [r9]	      3697	decNumber.c	FUNCTION_68	FUNCTION_63
0x400122c	      0xb900000000	                              mov ecx, 0	      3667	decNumber.c	FUNCTION_68	FUNCTION_63
0x4001231	            0x85ed	                           test ebp, ebp	      3698	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14
0x4001233	     0xf8f9efdffff	                            jg 0x4000fd7	      3698	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14
0x4001239	      0xe9b6feffff	                           jmp 0x40010f4	      3698	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14
0x400123e	            0x392f	                    cmp dword [rdi], ebp	      3709	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17
0x4001240	     0xf8f17feffff	                            jg 0x400105d	      3709	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17
0x4001246	      0xe93dffffff	                           jmp 0x4001188	      3709	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17
0x400124b	              0x5b	                                 pop rbx	      3760	decNumber.c	FUNCTION_68	FUNCTION_63
0x400124c	              0x5d	                                 pop rbp	      3760	decNumber.c	FUNCTION_68	FUNCTION_63
0x400124d	            0x415c	                                 pop r12	      3760	decNumber.c	FUNCTION_68	FUNCTION_63
0x400124f	              0xc3	                                     ret	      3760	decNumber.c	FUNCTION_68	FUNCTION_63
decNumberDivide	SWITCH,0:functions,0:ELSE,0:DO,0:FOR,0:IF,1:CALL,3:WHILE,0	27
0x40064b5	              0x55	                                push rbp	       992	decNumber.c	FUNCTION_68	FUNCTION_15
0x40064b6	              0x53	                                push rbx	       992	decNumber.c	FUNCTION_68	FUNCTION_15
0x40064b7	        0x4883ec18	                           sub rsp, 0x18	       992	decNumber.c	FUNCTION_68	FUNCTION_15
0x40064bb	          0x4889fb	                            mov rbx, rdi	       992	decNumber.c	FUNCTION_68	FUNCTION_15
0x40064be	          0x4889cd	                            mov rbp, rcx	       992	decNumber.c	FUNCTION_68	FUNCTION_15
0x40064c1	    0x64488b042528	                mov rax, qword fs:[0x28]	       992	decNumber.c	FUNCTION_68	FUNCTION_15
0x40064ca	      0x4889442408	                mov qword [rsp + 8], rax	       992	decNumber.c	FUNCTION_68	FUNCTION_15
0x40064cf	            0x31c0	                            xor eax, eax	       992	decNumber.c	FUNCTION_68	FUNCTION_15
0x40064d1	    0xc74424040000	                  mov dword [rsp + 4], 0	       993	decNumber.c	FUNCTION_68	FUNCTION_15
0x40064d9	      0x4c8d4c2404	                       lea r9, [rsp + 4]	       994	decNumber.c	FUNCTION_68	FUNCTION_15	CALL_1
0x40064de	    0x41b880000000	                           mov r8d, 0x80	       994	decNumber.c	FUNCTION_68	FUNCTION_15	CALL_1
0x40064e4	      0xe8f1f0ffff	                    call sym.decDivideOp	       994	decNumber.c	FUNCTION_68	FUNCTION_15	CALL_1
0x40064e9	        0x8b742404	                mov esi, dword [rsp + 4]	       995	decNumber.c	FUNCTION_68	FUNCTION_15	CALL_2
0x40064ed	            0x85f6	                           test esi, esi	       995	decNumber.c	FUNCTION_68	FUNCTION_15	CALL_2
0x40064ef	            0x740b	                            je 0x40064fc	       995	decNumber.c	FUNCTION_68	FUNCTION_15	CALL_2
0x40064f1	          0x4889ea	                            mov rdx, rbp	       995	decNumber.c	FUNCTION_68	FUNCTION_15	CALL_2
0x40064f4	          0x4889df	                            mov rdi, rbx	       995	decNumber.c	FUNCTION_68	FUNCTION_15	CALL_2
0x40064f7	      0xe820b1ffff	                      call sym.decStatus	       995	decNumber.c	FUNCTION_68	FUNCTION_15	CALL_2
0x40064fc	          0x4889d8	                            mov rax, rbx	      1000	decNumber.c	FUNCTION_68	FUNCTION_15
0x40064ff	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1000	decNumber.c	FUNCTION_68	FUNCTION_15
0x4006504	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1000	decNumber.c	FUNCTION_68	FUNCTION_15
0x400650d	            0x7405	                            je 0x4006514	      1000	decNumber.c	FUNCTION_68	FUNCTION_15
0x400650f	      0xe800000000	                          call 0x4006514	      1000	decNumber.c	FUNCTION_68	FUNCTION_15
0x4006514	        0x4883c418	                           add rsp, 0x18	      1000	decNumber.c	FUNCTION_68	FUNCTION_15
0x4006518	              0x5b	                                 pop rbx	      1000	decNumber.c	FUNCTION_68	FUNCTION_15
0x4006519	              0x5d	                                 pop rbp	      1000	decNumber.c	FUNCTION_68	FUNCTION_15
0x400651a	              0xc3	                                     ret	      1000	decNumber.c	FUNCTION_68	FUNCTION_15
decNumberShift	SWITCH,0:functions,0:ELSE,6:DO,0:FOR,0:IF,11:CALL,14:WHILE,0	121
0x40044f6	            0x4155	                                push r13	      2669	decNumber.c	FUNCTION_68	FUNCTION_44
0x40044f8	            0x4154	                                push r12	      2669	decNumber.c	FUNCTION_68	FUNCTION_44
0x40044fa	              0x55	                                push rbp	      2669	decNumber.c	FUNCTION_68	FUNCTION_44
0x40044fb	              0x53	                                push rbx	      2669	decNumber.c	FUNCTION_68	FUNCTION_44
0x40044fc	        0x4883ec18	                           sub rsp, 0x18	      2669	decNumber.c	FUNCTION_68	FUNCTION_44
0x4004500	          0x4889fb	                            mov rbx, rdi	      2669	decNumber.c	FUNCTION_68	FUNCTION_44
0x4004503	          0x4889f5	                            mov rbp, rsi	      2669	decNumber.c	FUNCTION_68	FUNCTION_44
0x4004506	          0x4989cc	                            mov r12, rcx	      2669	decNumber.c	FUNCTION_68	FUNCTION_44
0x4004509	    0x64488b042528	                mov rax, qword fs:[0x28]	      2669	decNumber.c	FUNCTION_68	FUNCTION_44
0x4004512	      0x4889442408	                mov qword [rsp + 8], rax	      2669	decNumber.c	FUNCTION_68	FUNCTION_44
0x4004517	            0x31c0	                            xor eax, eax	      2669	decNumber.c	FUNCTION_68	FUNCTION_44
0x4004519	    0xc74424040000	                  mov dword [rsp + 4], 0	      2670	decNumber.c	FUNCTION_68	FUNCTION_44
0x4004521	        0xf6460830	               test byte [rsi + 8], 0x30	      2678	decNumber.c	FUNCTION_68	FUNCTION_44	IF_2	CALL_3
0x4004525	            0x7508	                           jne 0x400452f	      2678	decNumber.c	FUNCTION_68	FUNCTION_44	IF_2	CALL_3
0x4004527	         0xfb64208	               movzx eax, byte [rdx + 8]	      2678	decNumber.c	FUNCTION_68	FUNCTION_44	IF_2	CALL_3
0x400452b	            0xa830	                           test al, 0x30	      2678	decNumber.c	FUNCTION_68	FUNCTION_44	IF_2	CALL_3
0x400452d	            0x7418	                            je 0x4004547	      2678	decNumber.c	FUNCTION_68	FUNCTION_44	IF_2	CALL_3
0x400452f	      0x4c8d442404	                       lea r8, [rsp + 4]	      2679	decNumber.c	FUNCTION_68	FUNCTION_44	CALL_4
0x4004534	          0x4c89e1	                            mov rcx, r12	      2679	decNumber.c	FUNCTION_68	FUNCTION_44	CALL_4
0x4004537	          0x4889ee	                            mov rsi, rbp	      2679	decNumber.c	FUNCTION_68	FUNCTION_44	CALL_4
0x400453a	          0x4889df	                            mov rdi, rbx	      2679	decNumber.c	FUNCTION_68	FUNCTION_44	CALL_4
0x400453d	      0xe8aae8ffff	                        call sym.decNaNs	      2679	decNumber.c	FUNCTION_68	FUNCTION_44	CALL_4
0x4004542	      0xe907010000	                           jmp 0x400464e	      2679	decNumber.c	FUNCTION_68	FUNCTION_44	CALL_4
0x4004547	            0xa840	                           test al, 0x40	      2681	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_1	IF_3	CALL_5
0x4004549	            0x7506	                           jne 0x4004551	      2681	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_1	IF_3	CALL_5
0x400454b	        0x837a0400	                  cmp dword [rdx + 4], 0	      2681	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_1	IF_3	CALL_5
0x400454f	            0x740d	                            je 0x400455e	      2681	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_1	IF_3	CALL_5
0x4004551	    0xc74424048000	               mov dword [rsp + 4], 0x80	      2682	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_1	IF_3
0x4004559	      0xe918010000	                           jmp 0x4004676	      2682	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_1	IF_3
0x400455e	          0x4889d7	                            mov rdi, rdx	      2684	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	CALL_6
0x4004561	      0xe846c6ffff	                      call sym.decGetInt	      2684	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	CALL_6
0x4004566	          0x4189c5	                           mov r13d, eax	      2684	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	CALL_6
0x4004569	    0x8d80feffff7f	             lea eax, [rax + 0x7ffffffe]	      2686	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	IF_4
0x400456f	          0x83f801	                              cmp eax, 1	      2686	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	IF_4
0x4004572	            0x761c	                           jbe 0x4004590	      2686	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	IF_4
0x4004574	    0x4181fd000000	                    cmp r13d, 0x80000000	      2686	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	IF_4
0x400457b	            0x7413	                            je 0x4004590	      2686	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	IF_4
0x400457d	          0x4489ea	                           mov edx, r13d	      2687	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	IF_4	CALL_7
0x4004580	          0xc1fa1f	                           sar edx, 0x1f	      2687	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	IF_4	CALL_7
0x4004583	            0x89d0	                            mov eax, edx	      2687	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	IF_4	CALL_7
0x4004585	          0x4431e8	                           xor eax, r13d	      2687	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	IF_4	CALL_7
0x4004588	            0x29d0	                            sub eax, edx	      2687	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	IF_4	CALL_7
0x400458a	        0x413b0424	                    cmp eax, dword [r12]	      2687	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	IF_4	CALL_7
0x400458e	            0x7e0d	                           jle 0x400459d	      2687	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	IF_4	CALL_7
0x4004590	    0xc74424048000	               mov dword [rsp + 4], 0x80	      2688	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	IF_4
0x4004598	      0xe9d9000000	                           jmp 0x4004676	      2688	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	IF_4
0x400459d	          0x4889ee	                            mov rsi, rbp	      2690	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	CALL_8
0x40045a0	          0x4889df	                            mov rdi, rbx	      2690	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	CALL_8
0x40045a3	      0xe800000000	                          call 0x40045a8	      2690	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	CALL_8
0x40045a8	          0x4585ed	                         test r13d, r13d	      2691	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	CALL_9
0x40045ab	     0xf849d000000	                            je 0x400464e	      2691	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	CALL_9
0x40045b1	        0xf6430840	               test byte [rbx + 8], 0x40	      2691	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	CALL_9
0x40045b5	     0xf8593000000	                           jne 0x400464e	      2691	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	CALL_9
0x40045bb	          0x4585ed	                         test r13d, r13d	      2692	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6
0x40045be	            0x7e4a	                           jle 0x400460a	      2692	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6
0x40045c0	        0x418b1424	                    mov edx, dword [r12]	      2693	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	IF_7
0x40045c4	          0x4139d5	                           cmp r13d, edx	      2693	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	IF_7
0x40045c7	            0x750e	                           jne 0x40045d7	      2693	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	IF_7
0x40045c9	    0x66c7430a0000	                 mov word [rbx + 0xa], 0	      2694	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	IF_7
0x40045cf	    0xc70301000000	                      mov dword [rbx], 1	      2695	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	IF_7
0x40045d5	            0xeb77	                           jmp 0x400464e	      2695	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	IF_7
0x40045d7	          0x4489e8	                           mov eax, r13d	      2699	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	IF_8
0x40045da	             0x303	                    add eax, dword [rbx]	      2699	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	IF_8
0x40045dc	            0x39c2	                            cmp edx, eax	      2699	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	IF_8
0x40045de	            0x7d0c	                           jge 0x40045ec	      2699	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	IF_8
0x40045e0	            0x29d0	                            sub eax, edx	      2700	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	IF_8	CALL_10
0x40045e2	            0x89c6	                            mov esi, eax	      2700	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	IF_8	CALL_10
0x40045e4	          0x4889df	                            mov rdi, rbx	      2700	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	IF_8	CALL_10
0x40045e7	      0xe84cc7ffff	                       call sym.decDecap	      2700	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	IF_8	CALL_10
0x40045ec	            0x8b33	                    mov esi, dword [rbx]	      2704	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	IF_9
0x40045ee	          0x83fe01	                              cmp esi, 1	      2704	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	IF_9
0x40045f1	            0x7f07	                            jg 0x40045fa	      2704	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	IF_9
0x40045f3	      0x66837b0a00	                 cmp word [rbx + 0xa], 0	      2704	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	IF_9
0x40045f8	            0x7454	                            je 0x400464e	      2704	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	IF_9
0x40045fa	        0x488d7b0a	                    lea rdi, [rbx + 0xa]	      2705	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	CALL_11
0x40045fe	          0x4489ea	                           mov edx, r13d	      2705	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	CALL_11
0x4004601	      0xe85cbdffff	                 call sym.decShiftToMost	      2705	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	CALL_11
0x4004606	            0x8903	                    mov dword [rbx], eax	      2705	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	CALL_11
0x4004608	            0xeb44	                           jmp 0x400464e	      2705	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	CALL_11
0x400460a	          0x4489e9	                           mov ecx, r13d	      2709	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	IF_10
0x400460d	            0xf7d9	                                 neg ecx	      2709	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	IF_10
0x400460f	            0x8b03	                    mov eax, dword [rbx]	      2709	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	IF_10
0x4004611	            0x39c1	                            cmp ecx, eax	      2709	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	IF_10
0x4004613	            0x7c0e	                            jl 0x4004623	      2709	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	IF_10
0x4004615	    0x66c7430a0000	                 mov word [rbx + 0xa], 0	      2710	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	IF_10
0x400461b	    0xc70301000000	                      mov dword [rbx], 1	      2711	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	IF_10
0x4004621	            0xeb2b	                           jmp 0x400464e	      2711	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	IF_10
0x4004623	          0x83f831	                           cmp eax, 0x31	      2714	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6	CALL_13
0x4004626	            0x7f0b	                            jg 0x4004633	      2714	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6	CALL_13
0x4004628	            0x4898	                                    cdqe	      2714	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6	CALL_13
0x400462a	     0xfb6b0000000	                   movzx esi, byte [rax]	      2714	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6	CALL_13
0x4004631	            0xeb0d	                           jmp 0x4004640	      2714	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6	CALL_13
0x4004633	          0x83c002	                              add eax, 2	      2714	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6	CALL_13
0x4004636	      0xbf03000000	                              mov edi, 3	      2714	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6	CALL_13
0x400463b	              0x99	                                     cdq	      2714	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6	CALL_13
0x400463c	            0xf7ff	                                idiv edi	      2714	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6	CALL_13
0x400463e	            0x89c6	                            mov esi, eax	      2714	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6	CALL_13
0x4004640	        0x488d7b0a	                    lea rdi, [rbx + 0xa]	      2714	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6	CALL_13
0x4004644	            0x89ca	                            mov edx, ecx	      2714	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6	CALL_13
0x4004646	      0xe8ddbeffff	                call sym.decShiftToLeast	      2714	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6	CALL_13
0x400464b	          0x44012b	                   add dword [rbx], r13d	      2715	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6
0x400464e	        0x8b742404	                mov esi, dword [rsp + 4]	      2721	decNumber.c	FUNCTION_68	FUNCTION_44	CALL_14
0x4004652	            0x85f6	                           test esi, esi	      2721	decNumber.c	FUNCTION_68	FUNCTION_44	CALL_14
0x4004654	            0x740b	                            je 0x4004661	      2721	decNumber.c	FUNCTION_68	FUNCTION_44	CALL_14
0x4004656	          0x4c89e2	                            mov rdx, r12	      2721	decNumber.c	FUNCTION_68	FUNCTION_44	CALL_14
0x4004659	          0x4889df	                            mov rdi, rbx	      2721	decNumber.c	FUNCTION_68	FUNCTION_44	CALL_14
0x400465c	      0xe8bbcfffff	                      call sym.decStatus	      2721	decNumber.c	FUNCTION_68	FUNCTION_44	CALL_14
0x4004661	          0x4889d8	                            mov rax, rbx	      2723	decNumber.c	FUNCTION_68	FUNCTION_44
0x4004664	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      2723	decNumber.c	FUNCTION_68	FUNCTION_44
0x4004669	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2723	decNumber.c	FUNCTION_68	FUNCTION_44
0x4004672	            0x740d	                            je 0x4004681	      2723	decNumber.c	FUNCTION_68	FUNCTION_44
0x4004674	            0xeb06	                           jmp 0x400467c	      2723	decNumber.c	FUNCTION_68	FUNCTION_44
0x4004676	        0x8b742404	                mov esi, dword [rsp + 4]	      2721	decNumber.c	FUNCTION_68	FUNCTION_44	CALL_14
0x400467a	            0xebda	                           jmp 0x4004656	      2721	decNumber.c	FUNCTION_68	FUNCTION_44	CALL_14
0x400467c	      0xe800000000	                          call 0x4004681	      2723	decNumber.c	FUNCTION_68	FUNCTION_44
0x4004681	        0x4883c418	                           add rsp, 0x18	      2723	decNumber.c	FUNCTION_68	FUNCTION_44
0x4004685	              0x5b	                                 pop rbx	      2723	decNumber.c	FUNCTION_68	FUNCTION_44
0x4004686	              0x5d	                                 pop rbp	      2723	decNumber.c	FUNCTION_68	FUNCTION_44
0x4004687	            0x415c	                                 pop r12	      2723	decNumber.c	FUNCTION_68	FUNCTION_44
0x4004689	            0x415d	                                 pop r13	      2723	decNumber.c	FUNCTION_68	FUNCTION_44
0x400468b	              0xc3	                                     ret	      2723	decNumber.c	FUNCTION_68	FUNCTION_44
decDivideOp	SWITCH,0:functions,0:ELSE,15:DO,1:FOR,13:IF,78:CALL,50:WHILE,0	942
0x40055da	            0x4157	                                push r15	      4213	decNumber.c	FUNCTION_68	FUNCTION_65
0x40055dc	            0x4156	                                push r14	      4213	decNumber.c	FUNCTION_68	FUNCTION_65
0x40055de	            0x4155	                                push r13	      4213	decNumber.c	FUNCTION_68	FUNCTION_65
0x40055e0	            0x4154	                                push r12	      4213	decNumber.c	FUNCTION_68	FUNCTION_65
0x40055e2	              0x55	                                push rbp	      4213	decNumber.c	FUNCTION_68	FUNCTION_65
0x40055e3	              0x53	                                push rbx	      4213	decNumber.c	FUNCTION_68	FUNCTION_65
0x40055e4	    0x4881ec180100	                          sub rsp, 0x118	      4213	decNumber.c	FUNCTION_68	FUNCTION_65
0x40055eb	      0x48897c2448	             mov qword [rsp + 0x48], rdi	      4213	decNumber.c	FUNCTION_68	FUNCTION_65
0x40055f0	      0x4889742460	             mov qword [rsp + 0x60], rsi	      4213	decNumber.c	FUNCTION_68	FUNCTION_65
0x40055f5	          0x4889d3	                            mov rbx, rdx	      4213	decNumber.c	FUNCTION_68	FUNCTION_65
0x40055f8	      0x4889542470	             mov qword [rsp + 0x70], rdx	      4213	decNumber.c	FUNCTION_68	FUNCTION_65
0x40055fd	      0x48894c2478	             mov qword [rsp + 0x78], rcx	      4213	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005602	      0x4489442468	             mov dword [rsp + 0x68], r8d	      4213	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005607	      0x4c894c2450	              mov qword [rsp + 0x50], r9	      4213	decNumber.c	FUNCTION_68	FUNCTION_65
0x400560c	    0x448884248e00	              mov byte [rsp + 0x8e], r8b	      4213	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005614	    0x64488b0c2528	                mov rcx, qword fs:[0x28]	      4213	decNumber.c	FUNCTION_68	FUNCTION_65
0x400561d	    0x48898c240801	            mov qword [rsp + 0x108], rcx	      4213	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005625	            0x31c9	                            xor ecx, ecx	      4213	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005627	         0xfb64608	               movzx eax, byte [rsi + 8]	      4277	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400562b	         0xfb65208	               movzx edx, byte [rdx + 8]	      4277	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400562f	            0x89c1	                            mov ecx, eax	      4277	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4005631	            0x31d1	                            xor ecx, edx	      4277	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4005633	          0x83e180	                     and ecx, 0xffffff80	      4277	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4005636	    0x888c24830000	               mov byte [rsp + 0x83], cl	      4277	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400563d	            0x89c1	                            mov ecx, eax	      4280	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7
0x400563f	             0x9d1	                             or ecx, edx	      4280	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7
0x4005641	          0xf6c170	                           test cl, 0x70	      4280	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7
0x4005644	     0xf8452010000	                            je 0x400579c	      4280	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7
0x400564a	          0xf6c130	                           test cl, 0x30	      4281	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_8
0x400564d	            0x742c	                            je 0x400567b	      4281	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_8
0x400564f	          0x4d89c8	                              mov r8, r9	      4282	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_8	CALL_6
0x4005652	      0x488b4c2478	            mov rcx, qword [rsp + 0x78] 	      4282	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_8	CALL_6
0x4005657	          0x4889da	                            mov rdx, rbx	      4282	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_8	CALL_6
0x400565a	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      4282	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_8	CALL_6
0x400565f	      0xe888d7ffff	                        call sym.decNaNs	      4282	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_8	CALL_6
0x4005664	    0x48c744244000	               mov qword [rsp + 0x40], 0	      4228	decNumber.c	FUNCTION_68	FUNCTION_65
0x400566d	    0x48c744245800	               mov qword [rsp + 0x58], 0	      4220	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005676	      0xe9e20d0000	                           jmp 0x400645d	      4283	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_8
0x400567b	            0xa840	                           test al, 0x40	      4286	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_9	CALL_7
0x400567d	            0x746b	                            je 0x40056ea	      4286	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_9	CALL_7
0x400567f	          0xf6c240	                           test dl, 0x40	      4287	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_9	IF_10	CALL_8
0x4005682	            0x7507	                           jne 0x400568b	      4287	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_9	IF_10	CALL_8
0x4005684	      0xf644246850	           test byte [rsp + 0x68], 0x50 	      4287	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_9	IF_10	CALL_8
0x4005689	            0x7422	                            je 0x40056ad	      4287	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_9	IF_10	CALL_8
0x400568b	      0x488b442450	            mov rax, qword [rsp + 0x50] 	      4289	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_9	IF_10
0x4005690	    0x810880000000	                    or dword [rax], 0x80	      4289	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_9	IF_10
0x4005696	    0x48c744244000	               mov qword [rsp + 0x40], 0	      4228	decNumber.c	FUNCTION_68	FUNCTION_65
0x400569f	    0x48c744245800	               mov qword [rsp + 0x58], 0	      4220	decNumber.c	FUNCTION_68	FUNCTION_65
0x40056a8	      0xe9b00d0000	                           jmp 0x400645d	      4290	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_9	IF_10
0x40056ad	      0x488b5c2448	            mov rbx, qword [rsp + 0x48] 	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x40056b2	    0xc74304000000	                  mov dword [rbx + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x40056b9	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x40056bf	    0x66c7430a0000	                 mov word [rbx + 0xa], 0	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x40056c5	     0xfb684248300	           movzx eax, byte [rsp + 0x83] 	      4294	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_9
0x40056cd	          0x83c840	                            or eax, 0x40	      4294	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_9
0x40056d0	          0x884308	                  mov byte [rbx + 8], al	      4294	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_9
0x40056d3	    0x48c744244000	               mov qword [rsp + 0x40], 0	      4228	decNumber.c	FUNCTION_68	FUNCTION_65
0x40056dc	    0x48c744245800	               mov qword [rsp + 0x58], 0	      4220	decNumber.c	FUNCTION_68	FUNCTION_65
0x40056e5	      0xe9730d0000	                           jmp 0x400645d	      4295	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_9
0x40056ea	    0xc784249c0000	               mov dword [rsp + 0x9c], 0	      4298	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1
0x40056f5	      0xf644246850	           test byte [rsp + 0x68], 0x50 	      4299	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	IF_11
0x40056fa	            0x7423	                            je 0x400571f	      4299	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	IF_11
0x40056fc	      0x4c8b442450	              mov r8, qword [rsp + 0x50]	      4301	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	IF_11	CALL_10
0x4005701	    0x488d8c249c00	                   lea rcx, [rsp + 0x9c]	      4301	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	IF_11	CALL_10
0x4005709	      0x488b542478	            mov rdx, qword [rsp + 0x78] 	      4301	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	IF_11	CALL_10
0x400570e	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	      4301	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	IF_11	CALL_10
0x4005713	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      4301	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	IF_11	CALL_10
0x4005718	      0xe8c4b3ffff	                     call sym.decCopyFit	      4301	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	IF_11	CALL_10
0x400571d	            0xeb4a	                           jmp 0x4005769	      4301	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	IF_11	CALL_10
0x400571f	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4005724	    0xc74004000000	                  mov dword [rax + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x400572b	    0xc70001000000	                      mov dword [rax], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4005731	    0x66c7400a0000	                 mov word [rax + 0xa], 0	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4005737	     0xfb69c248300	           movzx ebx, byte [rsp + 0x83] 	      4305	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2
0x400573f	          0x885808	                  mov byte [rax + 8], bl	      4305	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2
0x4005742	      0x807c246800	                cmp byte [rsp + 0x68], 0	      4308	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2	IF_12
0x4005747	            0x7920	                           jns 0x4005769	      4308	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2	IF_12
0x4005749	      0x488b5c2478	            mov rbx, qword [rsp + 0x78] 	      4309	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2	IF_12
0x400574e	          0x8b4308	                mov eax, dword [rbx + 8]	      4309	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2	IF_12
0x4005751	            0x2b03	                    sub eax, dword [rbx]	      4309	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2	IF_12
0x4005753	          0x83c001	                              add eax, 1	      4309	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2	IF_12
0x4005756	      0x488b5c2448	            mov rbx, qword [rsp + 0x48] 	      4309	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2	IF_12
0x400575b	          0x894304	                mov dword [rbx + 4], eax	      4309	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2	IF_12
0x400575e	      0x488b442450	            mov rax, qword [rsp + 0x50] 	      4310	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2	IF_12
0x4005763	    0x810800040000	                   or dword [rax], 0x400	      4310	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2	IF_12
0x4005769	      0x488b4c2450	            mov rcx, qword [rsp + 0x50] 	      4313	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1
0x400576e	    0x488d94249c00	                   lea rdx, [rsp + 0x9c]	      4313	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1
0x4005776	      0x488b742478	            mov rsi, qword [rsp + 0x78] 	      4313	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1
0x400577b	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      4313	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1
0x4005780	      0xe87dc3ffff	                    call sym.decFinalize	      4313	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1
0x4005785	    0x48c744244000	               mov qword [rsp + 0x40], 0	      4228	decNumber.c	FUNCTION_68	FUNCTION_65
0x400578e	    0x48c744245800	               mov qword [rsp + 0x58], 0	      4220	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005797	      0xe9c10c0000	                           jmp 0x400645d	      4314	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1
0x400579c	      0x488b5c2470	            mov rbx, qword [rsp + 0x70] 	      4319	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	CALL_12
0x40057a1	      0x66837b0a00	                 cmp word [rbx + 0xa], 0	      4319	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	CALL_12
0x40057a6	     0xf85d9000000	                           jne 0x4005885	      4319	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	CALL_12
0x40057ac	          0x833b01	                      cmp dword [rbx], 1	      4319	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	CALL_12
0x40057af	     0xf85d0000000	                           jne 0x4005885	      4319	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	CALL_12
0x40057b5	          0xf6c270	                           test dl, 0x70	      4319	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	CALL_12
0x40057b8	     0xf85c7000000	                           jne 0x4005885	      4319	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	CALL_12
0x40057be	      0x488b5c2460	            mov rbx, qword [rsp + 0x60] 	      4320	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	IF_14	CALL_13
0x40057c3	      0x66837b0a00	                 cmp word [rbx + 0xa], 0	      4320	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	IF_14	CALL_13
0x40057c8	            0x7544	                           jne 0x400580e	      4320	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	IF_14	CALL_13
0x40057ca	          0x833b01	                      cmp dword [rbx], 1	      4320	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	IF_14	CALL_13
0x40057cd	            0x753f	                           jne 0x400580e	      4320	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	IF_14	CALL_13
0x40057cf	            0xa870	                           test al, 0x70	      4320	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	IF_14	CALL_13
0x40057d1	            0x753b	                           jne 0x400580e	      4320	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	IF_14	CALL_13
0x40057d3	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x40057d8	        0xc6400800	                   mov byte [rax + 8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x40057dc	    0xc74004000000	                  mov dword [rax + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x40057e3	    0xc70001000000	                      mov dword [rax], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x40057e9	    0x66c7400a0000	                 mov word [rax + 0xa], 0	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x40057ef	      0x488b442450	            mov rax, qword [rsp + 0x50] 	      4322	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	IF_14
0x40057f4	          0x830808	                       or dword [rax], 8	      4322	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	IF_14
0x40057f7	    0x48c744244000	               mov qword [rsp + 0x40], 0	      4228	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005800	    0x48c744245800	               mov qword [rsp + 0x58], 0	      4220	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005809	      0xe94f0c0000	                           jmp 0x400645d	      4322	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	IF_14
0x400580e	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x4005813	        0xc6400800	                   mov byte [rax + 8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x4005817	    0xc74004000000	                  mov dword [rax + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x400581e	    0xc70001000000	                      mov dword [rax], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4005824	    0x66c7400a0000	                 mov word [rax + 0xa], 0	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400582a	      0xf644246850	           test byte [rsp + 0x68], 0x50 	      4326	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	ELSE_3	IF_15
0x400582f	            0x7422	                            je 0x4005853	      4326	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	ELSE_3	IF_15
0x4005831	      0x488b442450	            mov rax, qword [rsp + 0x50] 	      4326	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	ELSE_3	IF_15
0x4005836	    0x810880000000	                    or dword [rax], 0x80	      4326	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	ELSE_3	IF_15
0x400583c	    0x48c744244000	               mov qword [rsp + 0x40], 0	      4228	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005845	    0x48c744245800	               mov qword [rsp + 0x58], 0	      4220	decNumber.c	FUNCTION_68	FUNCTION_65
0x400584e	      0xe90a0c0000	                           jmp 0x400645d	      4220	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005853	      0x488b442450	            mov rax, qword [rsp + 0x50] 	      4328	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	ELSE_3	ELSE_4
0x4005858	          0x830802	                       or dword [rax], 2	      4328	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	ELSE_3	ELSE_4
0x400585b	     0xfb684248300	           movzx eax, byte [rsp + 0x83] 	      4329	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	ELSE_3	ELSE_4
0x4005863	          0x83c840	                            or eax, 0x40	      4329	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	ELSE_3	ELSE_4
0x4005866	      0x488b5c2448	            mov rbx, qword [rsp + 0x48] 	      4329	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	ELSE_3	ELSE_4
0x400586b	          0x884308	                  mov byte [rbx + 8], al	      4329	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	ELSE_3	ELSE_4
0x400586e	    0x48c744244000	               mov qword [rsp + 0x40], 0	      4228	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005877	    0x48c744245800	               mov qword [rsp + 0x58], 0	      4220	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005880	      0xe9d80b0000	                           jmp 0x400645d	      4220	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005885	      0x488b5c2460	            mov rbx, qword [rsp + 0x60] 	      4335	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	CALL_16
0x400588a	      0x66837b0a00	                 cmp word [rbx + 0xa], 0	      4335	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	CALL_16
0x400588f	     0xf8502010000	                           jne 0x4005997	      4335	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	CALL_16
0x4005895	          0x833b01	                      cmp dword [rbx], 1	      4335	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	CALL_16
0x4005898	     0xf85f9000000	                           jne 0x4005997	      4335	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	CALL_16
0x400589e	            0xa870	                           test al, 0x70	      4335	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	CALL_16
0x40058a0	     0xf85f1000000	                           jne 0x4005997	      4335	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	CALL_16
0x40058a6	      0x807c246800	                cmp byte [rsp + 0x68], 0	      4340	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18
0x40058ab	            0x796a	                           jns 0x4005917	      4340	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18
0x40058ad	    0xc784249c0000	               mov dword [rsp + 0x9c], 0	      4341	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18
0x40058b8	          0x4889d8	                            mov rax, rbx	      4342	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18
0x40058bb	          0x8b5b04	                mov ebx, dword [rbx + 4]	      4342	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18
0x40058be	      0x488b7c2470	            mov rdi, qword [rsp + 0x70] 	      4342	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18
0x40058c3	          0x2b5f04	                sub ebx, dword [rdi + 4]	      4342	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18
0x40058c6	          0x4889c6	                            mov rsi, rax	      4343	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18	CALL_18
0x40058c9	      0x4c8b742448	            mov r14, qword [rsp + 0x48] 	      4343	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18	CALL_18
0x40058ce	          0x4c89f7	                            mov rdi, r14	      4343	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18	CALL_18
0x40058d1	      0xe800000000	                          call 0x40058d6	      4343	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18	CALL_18
0x40058d6	     0xfb6bc248300	           movzx edi, byte [rsp + 0x83] 	      4344	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18
0x40058de	        0x41887e08	                 mov byte [r14 + 8], dil	      4344	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18
0x40058e2	        0x41895e04	                mov dword [r14 + 4], ebx	      4345	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18
0x40058e6	      0x488b4c2450	            mov rcx, qword [rsp + 0x50] 	      4346	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18	CALL_19
0x40058eb	    0x488d94249c00	                   lea rdx, [rsp + 0x9c]	      4346	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18	CALL_19
0x40058f3	      0x488b742478	            mov rsi, qword [rsp + 0x78] 	      4346	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18	CALL_19
0x40058f8	          0x4c89f7	                            mov rdi, r14	      4346	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18	CALL_19
0x40058fb	      0xe802c2ffff	                    call sym.decFinalize	      4346	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18	CALL_19
0x4005900	    0x48c744244000	               mov qword [rsp + 0x40], 0	      4228	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005909	    0x48c744245800	               mov qword [rsp + 0x58], 0	      4220	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005912	      0xe9460b0000	                           jmp 0x400645d	      4220	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005917	      0xf644246820	           test byte [rsp + 0x68], 0x20 	      4348	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	ELSE_6	IF_19
0x400591c	            0x743a	                            je 0x4005958	      4348	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	ELSE_6	IF_19
0x400591e	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4005923	    0xc74004000000	                  mov dword [rax + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x400592a	    0xc70001000000	                      mov dword [rax], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4005930	    0x66c7400a0000	                 mov word [rax + 0xa], 0	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4005936	     0xfb69c248300	           movzx ebx, byte [rsp + 0x83] 	      4350	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	ELSE_6	IF_19
0x400593e	          0x885808	                  mov byte [rax + 8], bl	      4350	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	ELSE_6	IF_19
0x4005941	    0x48c744244000	               mov qword [rsp + 0x40], 0	      4228	decNumber.c	FUNCTION_68	FUNCTION_65
0x400594a	    0x48c744245800	               mov qword [rsp + 0x58], 0	      4220	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005953	      0xe9050b0000	                           jmp 0x400645d	      4220	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005958	      0x488b442470	            mov rax, qword [rsp + 0x70] 	      4353	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	ELSE_7
0x400595d	          0x8b5804	                mov ebx, dword [rax + 4]	      4353	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	ELSE_7
0x4005960	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	      4354	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	ELSE_7	CALL_21
0x4005965	      0x4c8b742448	            mov r14, qword [rsp + 0x48] 	      4354	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	ELSE_7	CALL_21
0x400596a	          0x4c89f7	                            mov rdi, r14	      4354	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	ELSE_7	CALL_21
0x400596d	      0xe800000000	                          call 0x4005972	      4354	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	ELSE_7	CALL_21
0x4005972	        0x413b5e04	                cmp ebx, dword [r14 + 4]	      4355	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	ELSE_7	IF_20
0x4005976	     0xf8dcf0a0000	                           jge 0x400644b	      4355	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	ELSE_7	IF_20
0x400597c	        0x41895e04	                mov dword [r14 + 4], ebx	      4355	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	ELSE_7	IF_20
0x4005980	    0x48c744244000	               mov qword [rsp + 0x40], 0	      4228	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005989	    0x48c744245800	               mov qword [rsp + 0x58], 0	      4220	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005992	      0xe9c60a0000	                           jmp 0x400645d	      4220	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005997	      0x488b442460	            mov rax, qword [rsp + 0x60] 	      4366	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400599c	          0x8b5804	                mov ebx, dword [rax + 4]	      4366	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400599f	        0x895c2414	             mov dword [rsp + 0x14], ebx	      4366	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x40059a3	            0x8b28	                    mov ebp, dword [rax]	      4366	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x40059a5	      0x488b442470	            mov rax, qword [rsp + 0x70] 	      4366	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x40059aa	          0x8b7804	                mov edi, dword [rax + 4]	      4366	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x40059ad	        0x897c242c	             mov dword [rsp + 0x2c], edi	      4366	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x40059b1	          0x448b20	                   mov r12d, dword [rax]	      4366	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x40059b4	          0x8d142b	                    lea edx, [rbx + rbp]	      4366	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x40059b7	        0x428d0427	                    lea eax, [rdi + r12]	      4366	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x40059bb	            0x29c2	                            sub edx, eax	      4371	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21
0x40059bd	        0x89542428	             mov dword [rsp + 0x28], edx	      4371	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21
0x40059c1	     0xf89c4000000	                           jns 0x4005a8b	      4371	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21
0x40059c7	        0x8b442468	            mov eax, dword [rsp + 0x68] 	      4371	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21
0x40059cb	            0x3c80	                            cmp al, 0x80	      4371	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21
0x40059cd	     0xf84b8000000	                            je 0x4005a8b	      4371	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21
0x40059d3	            0xa820	                           test al, 0x20	      4372	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_22
0x40059d5	            0x743a	                            je 0x4005a11	      4372	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_22
0x40059d7	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x40059dc	    0xc74004000000	                  mov dword [rax + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x40059e3	    0xc70001000000	                      mov dword [rax], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x40059e9	    0x66c7400a0000	                 mov word [rax + 0xa], 0	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x40059ef	     0xfb69c248300	           movzx ebx, byte [rsp + 0x83] 	      4377	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_22	IF_23
0x40059f7	          0x885808	                  mov byte [rax + 8], bl	      4377	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_22	IF_23
0x40059fa	    0x48c744244000	               mov qword [rsp + 0x40], 0	      4228	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005a03	    0x48c744245800	               mov qword [rsp + 0x58], 0	      4220	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005a0c	      0xe94c0a0000	                           jmp 0x400645d	      4378	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_22
0x4005a11	        0x8b5c242c	            mov ebx, dword [rsp + 0x2c] 	      4381	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24
0x4005a15	        0x395c2414	            cmp dword [rsp + 0x14], ebx 	      4381	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24
0x4005a19	            0x7f70	                            jg 0x4005a8b	      4381	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24
0x4005a1b	      0xf644246840	           test byte [rsp + 0x68], 0x40 	      4382	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24	IF_25
0x4005a20	            0x7507	                           jne 0x4005a29	      4382	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24	IF_25
0x4005a22	      0x837c2428ff	cmp dword [rsp + 0x28], 0xffffffffffffffff	      4382	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24	IF_25
0x4005a27	            0x7d62	                           jge 0x4005a8b	      4382	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24	IF_25
0x4005a29	    0xc784249c0000	               mov dword [rsp + 0x9c], 0	      4385	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24	IF_25
0x4005a34	      0x4c8b7c2450	            mov r15, qword [rsp + 0x50] 	      4386	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24	IF_25	CALL_23
0x4005a39	          0x4d89f8	                             mov r8, r15	      4386	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24	IF_25	CALL_23
0x4005a3c	    0x488d8c249c00	                   lea rcx, [rsp + 0x9c]	      4386	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24	IF_25	CALL_23
0x4005a44	      0x4c8b742478	            mov r14, qword [rsp + 0x78] 	      4386	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24	IF_25	CALL_23
0x4005a49	          0x4c89f2	                            mov rdx, r14	      4386	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24	IF_25	CALL_23
0x4005a4c	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	      4386	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24	IF_25	CALL_23
0x4005a51	      0x488b5c2448	            mov rbx, qword [rsp + 0x48] 	      4386	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24	IF_25	CALL_23
0x4005a56	          0x4889df	                            mov rdi, rbx	      4386	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24	IF_25	CALL_23
0x4005a59	      0xe883b0ffff	                     call sym.decCopyFit	      4386	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24	IF_25	CALL_23
0x4005a5e	          0x4c89f9	                            mov rcx, r15	      4387	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24	IF_25
0x4005a61	    0x488d94249c00	                   lea rdx, [rsp + 0x9c]	      4387	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24	IF_25
0x4005a69	          0x4c89f6	                            mov rsi, r14	      4387	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24	IF_25
0x4005a6c	          0x4889df	                            mov rdi, rbx	      4387	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24	IF_25
0x4005a6f	      0xe88ec0ffff	                    call sym.decFinalize	      4387	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24	IF_25
0x4005a74	    0x48c744244000	               mov qword [rsp + 0x40], 0	      4228	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005a7d	    0x48c744245800	               mov qword [rsp + 0x58], 0	      4220	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005a86	      0xe9d2090000	                           jmp 0x400645d	      4388	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24	IF_25
0x4005a8b	      0x488b442478	            mov rax, qword [rsp + 0x78] 	      4243	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005a90	            0x8b00	                    mov eax, dword [rax]	      4243	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005a92	        0x8944246c	             mov dword [rsp + 0x6c], eax	      4243	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005a96	          0x83c003	                              add eax, 3	      4398	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_24
0x4005a99	          0x83f831	                           cmp eax, 0x31	      4398	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_24
0x4005a9c	            0x7f0b	                            jg 0x4005aa9	      4398	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_24
0x4005a9e	            0x4898	                                    cdqe	      4398	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_24
0x4005aa0	     0xfb680000000	                   movzx eax, byte [rax]	      4398	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_24
0x4005aa7	            0xeb17	                           jmp 0x4005ac0	      4398	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_24
0x4005aa9	        0x8b44246c	            mov eax, dword [rsp + 0x6c] 	      4398	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_24
0x4005aad	          0x8d4805	                      lea ecx, [rax + 5]	      4398	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_24
0x4005ab0	      0xba56555555	                     mov edx, 0x55555556	      4398	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_24
0x4005ab5	            0x89c8	                            mov eax, ecx	      4398	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_24
0x4005ab7	            0xf7ea	                                imul edx	      4398	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_24
0x4005ab9	          0xc1f91f	                           sar ecx, 0x1f	      4398	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_24
0x4005abc	            0x89d0	                            mov eax, edx	      4398	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_24
0x4005abe	            0x29c8	                            sub eax, ecx	      4398	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_24
0x4005ac0	            0x4898	                                    cdqe	      4399	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_26
0x4005ac2	          0x4801c0	                            add rax, rax	      4399	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_26
0x4005ac5	      0x4889442430	             mov qword [rsp + 0x30], rax	      4399	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_26
0x4005aca	    0x48c744245800	               mov qword [rsp + 0x58], 0	      4220	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005ad3	    0x488d9c24a000	                   lea rbx, [rsp + 0xa0]	      4219	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005adb	      0x48895c2408	                mov qword [rsp + 8], rbx	      4219	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005ae0	        0x4883f822	                           cmp rax, 0x22	      4399	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_26
0x4005ae4	            0x762d	                           jbe 0x4005b13	      4399	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_26
0x4005ae6	          0x4889c7	                            mov rdi, rax	      4401	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_26
0x4005ae9	      0xe800000000	                          call 0x4005aee	      4401	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_26
0x4005aee	      0x4889442408	                mov qword [rsp + 8], rax	      4401	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_26
0x4005af3	      0x4889442458	             mov qword [rsp + 0x58], rax	      4401	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_26
0x4005af8	          0x4885c0	                           test rax, rax	      4402	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_26	IF_27
0x4005afb	            0x7516	                           jne 0x4005b13	      4402	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_26	IF_27
0x4005afd	      0x488b442450	            mov rax, qword [rsp + 0x50] 	      4403	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_26	IF_27
0x4005b02	          0x830810	                    or dword [rax], 0x10	      4403	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_26	IF_27
0x4005b05	    0x48c744244000	               mov qword [rsp + 0x40], 0	      4228	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005b0e	      0xe94a090000	                           jmp 0x400645d	      4404	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_26	IF_27
0x4005b13	        0x8b44246c	            mov eax, dword [rsp + 0x6c] 	      4419	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4005b17	      0x428d4420ff	                lea eax, [rax + r12 - 1]	      4419	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4005b1c	            0x39c5	                            cmp ebp, eax	      4419	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4005b1e	           0xf4dc5	                         cmovge eax, ebp	      4419	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4005b21	          0x83f831	                           cmp eax, 0x31	      4421	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_25
0x4005b24	            0x7f0f	                            jg 0x4005b35	      4421	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_25
0x4005b26	            0x4898	                                    cdqe	      4421	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_25
0x4005b28	     0xfb680000000	                   movzx eax, byte [rax]	      4421	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_25
0x4005b2f	        0x448d7002	                     lea r14d, [rax + 2]	      4421	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_25
0x4005b33	            0xeb17	                           jmp 0x4005b4c	      4421	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_25
0x4005b35	          0x8d4802	                      lea ecx, [rax + 2]	      4421	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_25
0x4005b38	      0xba56555555	                     mov edx, 0x55555556	      4421	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_25
0x4005b3d	            0x89c8	                            mov eax, ecx	      4421	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_25
0x4005b3f	            0xf7ea	                                imul edx	      4421	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_25
0x4005b41	            0x89c8	                            mov eax, ecx	      4421	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_25
0x4005b43	          0xc1f81f	                           sar eax, 0x1f	      4421	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_25
0x4005b46	            0x29c2	                            sub edx, eax	      4421	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_25
0x4005b48	        0x448d7202	                     lea r14d, [rdx + 2]	      4421	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_25
0x4005b4c	        0x8b442468	            mov eax, dword [rsp + 0x68] 	      4423	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_29
0x4005b50	    0x8884248d0000	               mov byte [rsp + 0x8d], al	      4423	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_29
0x4005b57	            0x3c80	                            cmp al, 0x80	      4423	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_29
0x4005b59	        0x4183d600	                             adc r14d, 0	      4423	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_29
0x4005b5d	        0x418d5e01	                      lea ebx, [r14 + 1]	      4424	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_30
0x4005b61	          0x4863db	                         movsxd rbx, ebx	      4424	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_30
0x4005b64	          0x4801db	                            add rbx, rbx	      4424	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_30
0x4005b67	    0x48c744244000	               mov qword [rsp + 0x40], 0	      4228	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005b70	    0x4c8dbc24d000	                   lea r15, [rsp + 0xd0]	      4227	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005b78	        0x4883fb32	                           cmp rbx, 0x32	      4424	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_30
0x4005b7c	            0x7622	                           jbe 0x4005ba0	      4424	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_30
0x4005b7e	          0x4889df	                            mov rdi, rbx	      4426	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_30
0x4005b81	      0xe800000000	                          call 0x4005b86	      4426	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_30
0x4005b86	          0x4989c7	                            mov r15, rax	      4426	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_30
0x4005b89	      0x4889442440	             mov qword [rsp + 0x40], rax	      4426	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_30
0x4005b8e	          0x4885c0	                           test rax, rax	      4427	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_30	IF_31
0x4005b91	            0x750d	                           jne 0x4005ba0	      4427	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_30	IF_31
0x4005b93	      0x488b442450	            mov rax, qword [rsp + 0x50] 	      4428	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_30	IF_31
0x4005b98	          0x830810	                    or dword [rax], 0x10	      4428	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_30	IF_31
0x4005b9b	      0xe9bd080000	                           jmp 0x400645d	      4429	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_30	IF_31
0x4005ba0	      0x498d5c1ffc	                lea rbx, [r15 + rbx - 4]	      4439	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4005ba5	      0x488b442460	            mov rax, qword [rsp + 0x60] 	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x4005baa	        0x488d780a	                    lea rdi, [rax + 0xa]	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x4005bae	          0x83fd31	                           cmp ebp, 0x31	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x4005bb1	            0x7f11	                            jg 0x4005bc4	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x4005bb3	          0x4863c5	                         movsxd rax, ebp	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x4005bb6	     0xfb680000000	                   movzx eax, byte [rax]	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x4005bbd	      0x488d4400fe	                lea rax, [rax + rax - 2]	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x4005bc2	            0xeb1a	                           jmp 0x4005bde	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x4005bc4	          0x8d4d02	                      lea ecx, [rbp + 2]	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x4005bc7	      0xba56555555	                     mov edx, 0x55555556	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x4005bcc	            0x89c8	                            mov eax, ecx	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x4005bce	            0xf7ea	                                imul edx	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x4005bd0	          0xc1f91f	                           sar ecx, 0x1f	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x4005bd3	            0x89d0	                            mov eax, edx	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x4005bd5	            0x29c8	                            sub eax, ecx	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x4005bd7	            0x4898	                                    cdqe	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x4005bd9	      0x488d4400fe	                lea rax, [rax + rax - 2]	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x4005bde	          0x4889fa	                            mov rdx, rdi	      4441	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_1
0x4005be1	          0x4801c2	                            add rdx, rax	      4441	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_1
0x4005be4	            0x721f	                            jb 0x4005c05	      4441	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_1
0x4005be6	          0x4889d9	                            mov rcx, rbx	      4441	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_1
0x4005be9	           0xfb732	                   movzx esi, word [rdx]	      4441	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_1
0x4005bec	          0x668931	                      mov word [rcx], si	      4441	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_1
0x4005bef	        0x4883ea02	                              sub rdx, 2	      4441	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_1
0x4005bf3	        0x4883e902	                              sub rcx, 2	      4441	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_1
0x4005bf7	          0x4839d7	                            cmp rdi, rdx	      4441	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_1
0x4005bfa	            0x76ed	                           jbe 0x4005be9	      4441	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_1
0x4005bfc	        0x4883f0fe	             xor rax, 0xfffffffffffffffe	      4441	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_1
0x4005c00	          0x4801d8	                            add rax, rbx	      4441	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_1
0x4005c03	            0xeb03	                           jmp 0x4005c08	      4441	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_1
0x4005c05	          0x4889d8	                            mov rax, rbx	      4441	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_1
0x4005c08	          0x4939c7	                            cmp r15, rax	      4442	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_2
0x4005c0b	            0x770e	                            ja 0x4005c1b	      4442	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_2
0x4005c0d	      0x66c7000000	                       mov word [rax], 0	      4442	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_2
0x4005c12	        0x4883e802	                              sub rax, 2	      4442	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_2
0x4005c16	          0x4939c7	                            cmp r15, rax	      4442	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_2
0x4005c19	            0x76f2	                           jbe 0x4005c0d	      4442	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_2
0x4005c1b	        0x4183fc31	                          cmp r12d, 0x31	      4446	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_27
0x4005c1f	            0x7f12	                            jg 0x4005c33	      4446	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_27
0x4005c21	          0x4d63e4	                        movsxd r12, r12d	      4446	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_27
0x4005c24	    0x410fb6842400	                   movzx eax, byte [r12]	      4446	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_27
0x4005c2d	        0x89442410	             mov dword [rsp + 0x10], eax	      4446	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_27
0x4005c31	            0xeb19	                           jmp 0x4005c4c	      4446	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_27
0x4005c33	        0x4183c402	                             add r12d, 2	      4446	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_27
0x4005c37	      0xba56555555	                     mov edx, 0x55555556	      4446	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_27
0x4005c3c	          0x4489e0	                           mov eax, r12d	      4446	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_27
0x4005c3f	            0xf7ea	                                imul edx	      4446	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_27
0x4005c41	        0x41c1fc1f	                          sar r12d, 0x1f	      4446	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_27
0x4005c45	          0x4429e2	                           sub edx, r12d	      4446	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_27
0x4005c48	        0x89542410	             mov dword [rsp + 0x10], edx	      4446	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_27
0x4005c4c	      0x488b442470	            mov rax, qword [rsp + 0x70] 	      4447	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4005c51	        0x4c8d680a	                    lea r13, [rax + 0xa]	      4447	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4005c55	        0x8b7c2410	            mov edi, dword [rsp + 0x10] 	      4448	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4005c59	            0x89f8	                            mov eax, edi	      4448	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4005c5b	            0x4898	                                    cdqe	      4448	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4005c5d	      0x498d4445fe	              lea rax, [r13 + rax*2 - 2]	      4448	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4005c62	          0x4889c2	                            mov rdx, rax	      4448	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4005c65	      0x4889442418	             mov qword [rsp + 0x18], rax	      4448	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4005c6a	           0xfb708	                   movzx ecx, word [rax]	      4452	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4005c6d	           0xfb7c1	                           movzx eax, cx	      4452	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4005c70	          0x83ff01	                              cmp edi, 1	      4453	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_32
0x4005c73	     0xf8e12080000	                           jle 0x400648b	      4453	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_32
0x4005c79	          0x8d7001	                      lea esi, [rax + 1]	      4453	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_32
0x4005c7c	        0x89742420	             mov dword [rsp + 0x20], esi	      4453	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_32
0x4005c80	    0x69c0e8030000	                    imul eax, eax, 0x3e8	      4454	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4005c86	         0xfb752fe	               movzx edx, word [rdx - 2]	      4456	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_33
0x4005c8a	             0x1d0	                            add eax, edx	      4456	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_33
0x4005c8c	            0x89c2	                            mov edx, eax	      4456	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_33
0x4005c8e	          0x83ff03	                              cmp edi, 3	      4457	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_33	IF_34
0x4005c91	           0xf9dc0	                                setge al	      4457	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_33	IF_34
0x4005c94	           0xfb6c0	                           movzx eax, al	      4457	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_33	IF_34
0x4005c97	            0x89d7	                            mov edi, edx	      4457	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_33	IF_34
0x4005c99	             0x1c7	                            add edi, eax	      4457	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_33	IF_34
0x4005c9b	        0x897c2424	             mov dword [rsp + 0x24], edi	      4457	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_33	IF_34
0x4005c9f	           0xfb733	                   movzx esi, word [rbx]	      4466	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_3
0x4005ca2	           0xfb7d6	                           movzx edx, si	      4466	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_3
0x4005ca5	    0x3b1500000000	            cmp edx, dword [0x04005cab] 	      4466	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_3
0x4005cab	            0x7218	                            jb 0x4005cc5	      4466	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_3
0x4005cad	      0xb800000000	                              mov eax, 0	      4466	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_3
0x4005cb2	        0x8b7c2428	            mov edi, dword [rsp + 0x28] 	      4466	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_3
0x4005cb6	          0x83ef01	                              sub edi, 1	      4466	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_3
0x4005cb9	        0x4883c004	                              add rax, 4	      4466	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_3
0x4005cbd	            0x3910	                    cmp dword [rax], edx	      4466	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_3
0x4005cbf	            0x76f5	                           jbe 0x4005cb6	      4466	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_3
0x4005cc1	        0x897c2428	             mov dword [rsp + 0x28], edi	      4466	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_3
0x4005cc5	           0xfb7d1	                           movzx edx, cx	      4467	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_4
0x4005cc8	    0x3b1500000000	            cmp edx, dword [0x04005cce] 	      4467	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_4
0x4005cce	            0x7218	                            jb 0x4005ce8	      4467	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_4
0x4005cd0	      0xb800000000	                              mov eax, 0	      4467	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_4
0x4005cd5	        0x8b7c2428	            mov edi, dword [rsp + 0x28] 	      4467	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_4
0x4005cd9	          0x83c701	                              add edi, 1	      4467	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_4
0x4005cdc	        0x4883c004	                              add rax, 4	      4467	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_4
0x4005ce0	            0x3910	                    cmp dword [rax], edx	      4467	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_4
0x4005ce2	            0x76f5	                           jbe 0x4005cd9	      4467	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_4
0x4005ce4	        0x897c2428	             mov dword [rsp + 0x28], edi	      4467	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_4
0x4005ce8	      0x807c246800	                cmp byte [rsp + 0x68], 0	      4474	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35
0x4005ced	     0xf889f000000	                            js 0x4005d92	      4474	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35
0x4005cf3	          0x83fd31	                           cmp ebp, 0x31	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x4005cf6	            0x7f0c	                            jg 0x4005d04	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x4005cf8	          0x4863ed	                         movsxd rbp, ebp	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x4005cfb	     0xfb685000000	                   movzx eax, byte [rbp]	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x4005d02	            0xeb13	                           jmp 0x4005d17	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x4005d04	          0x83c502	                              add ebp, 2	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x4005d07	      0xba56555555	                     mov edx, 0x55555556	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x4005d0c	            0x89e8	                            mov eax, ebp	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x4005d0e	            0xf7ea	                                imul edx	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x4005d10	          0xc1fd1f	                           sar ebp, 0x1f	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x4005d13	            0x89d0	                            mov eax, edx	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x4005d15	            0x29e8	                            sub eax, ebp	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x4005d17	          0x4489f1	                           mov ecx, r14d	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x4005d1a	            0x29c1	                            sub ecx, eax	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x4005d1c	        0x448d2449	                 lea r12d, [rcx + rcx*2]	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x4005d20	      0x837c242800	               cmp dword [rsp + 0x28], 0	      4479	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	IF_36
0x4005d25	            0x7908	                           jns 0x4005d2f	      4479	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	IF_36
0x4005d27	        0x8b6c2428	            mov ebp, dword [rsp + 0x28] 	      4479	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	IF_36
0x4005d2b	            0xf7dd	                                 neg ebp	      4479	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	IF_36
0x4005d2d	            0xeb1e	                           jmp 0x4005d4d	      4479	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	IF_36
0x4005d2f	      0xba56555555	                     mov edx, 0x55555556	      4480	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	ELSE_8
0x4005d34	        0x8b442428	            mov eax, dword [rsp + 0x28] 	      4480	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	ELSE_8
0x4005d38	            0xf7ea	                                imul edx	      4480	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	ELSE_8
0x4005d3a	        0x8b7c2428	            mov edi, dword [rsp + 0x28] 	      4480	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	ELSE_8
0x4005d3e	            0x89f8	                            mov eax, edi	      4480	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	ELSE_8
0x4005d40	          0xc1f81f	                           sar eax, 0x1f	      4480	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	ELSE_8
0x4005d43	            0x29c2	                            sub edx, eax	      4480	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	ELSE_8
0x4005d45	          0x8d0452	                  lea eax, [rdx + rdx*2]	      4480	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	ELSE_8
0x4005d48	            0x29f8	                            sub eax, edi	      4480	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	ELSE_8
0x4005d4a	          0x8d6803	                      lea ebp, [rax + 3]	      4480	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	ELSE_8
0x4005d4d	            0x89ea	                            mov edx, ebp	      4481	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_29
0x4005d4f	          0x4489f6	                           mov esi, r14d	      4481	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_29
0x4005d52	          0x4c89ff	                            mov rdi, r15	      4481	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_29
0x4005d55	      0xe8cea7ffff	                call sym.decShiftToLeast	      4481	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_29
0x4005d5a	         0x16c2428	             add dword [rsp + 0x28], ebp	      4482	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35
0x4005d5e	          0x4129ec	                           sub r12d, ebp	      4483	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35
0x4005d61	    0x4489a4248800	            mov dword [rsp + 0x88], r12d	      4483	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35
0x4005d69	          0x83fd02	                              cmp ebp, 2	      4485	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	FOR_5
0x4005d6c	            0x7e4e	                           jle 0x4005dbc	      4485	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	FOR_5
0x4005d6e	          0x4889d8	                            mov rax, rbx	      4485	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	FOR_5
0x4005d71	      0x66c7000000	                       mov word [rax], 0	      4485	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	FOR_5
0x4005d76	          0x83ed03	                              sub ebp, 3	      4485	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	FOR_5
0x4005d79	        0x4883e802	                              sub rax, 2	      4485	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	FOR_5
0x4005d7d	          0x83fd02	                              cmp ebp, 2	      4485	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	FOR_5
0x4005d80	            0x7fef	                            jg 0x4005d71	      4485	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	FOR_5
0x4005d82	          0x4589f4	                          mov r12d, r14d	      4445	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4005d85	    0xc78424840000	               mov dword [rsp + 0x84], 0	      4245	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005d90	            0xeb48	                           jmp 0x4005dda	      4245	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005d92	        0x8b442414	            mov eax, dword [rsp + 0x14] 	      4488	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_9
0x4005d96	        0x2b44242c	             sub eax, dword [rsp + 0x2c]	      4488	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_9
0x4005d9a	    0x898424840000	             mov dword [rsp + 0x84], eax	      4488	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_9
0x4005da1	          0x6639f1	                              cmp cx, si	      4491	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_9	IF_37
0x4005da4	            0x7626	                           jbe 0x4005dcc	      4491	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_9	IF_37
0x4005da6	        0x458d66ff	                     lea r12d, [r14 - 1]	      4492	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_9	IF_37
0x4005daa	      0x836c242803	               sub dword [rsp + 0x28], 3	      4493	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_9	IF_37
0x4005daf	    0xc78424880000	               mov dword [rsp + 0x88], 0	      4238	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005dba	            0xeb1e	                           jmp 0x4005dda	      4238	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005dbc	          0x4589f4	                          mov r12d, r14d	      4445	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4005dbf	    0xc78424840000	               mov dword [rsp + 0x84], 0	      4245	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005dca	            0xeb0e	                           jmp 0x4005dda	      4245	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005dcc	          0x4589f4	                          mov r12d, r14d	      4445	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4005dcf	    0xc78424880000	               mov dword [rsp + 0x88], 0	      4238	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005dda	      0x488b442408	                mov rax, qword [rsp + 8]	      4500	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4005ddf	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      4500	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4005de4	      0x488d4438fe	                lea rax, [rax + rdi - 2]	      4500	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4005de9	      0x4889442438	             mov qword [rsp + 0x38], rax	      4500	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4005dee	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	      4499	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4005df6	    0xc74424300000	               mov dword [rsp + 0x30], 0	      4498	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4005dfe	     0xfb684248e00	           movzx eax, byte [rsp + 0x8e] 	      4582	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_50
0x4005e06	          0x83e050	                           and eax, 0x50	      4582	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_50
0x4005e09	    0x8884248e0000	               mov byte [rsp + 0x8e], al	      4582	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_50
0x4005e10	     0xfb6bc248d00	           movzx edi, byte [rsp + 0x8d] 	      4583	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_51
0x4005e18	            0x89f8	                            mov eax, edi	      4583	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_51
0x4005e1a	          0xc0e807	                               shr al, 7	      4583	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_51
0x4005e1d	    0x8884248f0000	               mov byte [rsp + 0x8f], al	      4583	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_51
0x4005e24	            0x89f8	                            mov eax, edi	      4588	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_52
0x4005e26	            0xf7d0	                                 not eax	      4588	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_52
0x4005e28	          0xc0e807	                               shr al, 7	      4588	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_52
0x4005e2b	    0x8884248d0000	               mov byte [rsp + 0x8d], al	      4588	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_52
0x4005e32	          0x4489e0	                           mov eax, r12d	      4588	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_52
0x4005e35	        0x2b442410	             sub eax, dword [rsp + 0x10]	      4588	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_52
0x4005e39	        0x89442414	             mov dword [rsp + 0x14], eax	      4588	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_52
0x4005e3d	            0x4898	                                    cdqe	      4554	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	CALL_33
0x4005e3f	        0x498d0447	                  lea rax, [r15 + rax*2]	      4554	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	CALL_33
0x4005e43	      0x4889442408	                mov qword [rsp + 8], rax	      4554	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	CALL_33
0x4005e48	      0xbd00000000	                              mov ebp, 0	      4502	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6
0x4005e4d	            0xeb08	                           jmp 0x4005e57	      4502	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6
0x4005e4f	        0x4183ee01	                             sub r14d, 1	      4507	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	FOR_8
0x4005e53	        0x4883eb02	                              sub rbx, 2	      4507	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	FOR_8
0x4005e57	           0xfb703	                   movzx eax, word [rbx]	      4507	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	FOR_8
0x4005e5a	          0x4939df	                            cmp r15, rbx	      4507	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	FOR_8
0x4005e5d	            0x7305	                           jae 0x4005e64	      4507	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	FOR_8
0x4005e5f	          0x6685c0	                             test ax, ax	      4507	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	FOR_8
0x4005e62	            0x74eb	                            je 0x4005e4f	      4507	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	FOR_8
0x4005e64	          0x4539e6	                          cmp r14d, r12d	      4509	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_38
0x4005e67	     0xf8cb6000000	                            jl 0x4005f23	      4509	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_38
0x4005e6d	          0x4539e6	                          cmp r14d, r12d	      4510	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39
0x4005e70	            0x755d	                           jne 0x4005ecf	      4510	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39
0x4005e72	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      4510	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39
0x4005e77	          0x4889da	                            mov rdx, rbx	      4510	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39
0x4005e7a	      0xbe00000000	                              mov esi, 0	      4517	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	FOR_9
0x4005e7f	          0x4c39e9	                            cmp rcx, r13	      4518	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	FOR_9	IF_40
0x4005e82	            0x7203	                            jb 0x4005e87	      4518	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	FOR_9	IF_40
0x4005e84	           0xfb731	                   movzx esi, word [rcx]	      4518	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	FOR_9	IF_40
0x4005e87	           0xfb73a	                   movzx edi, word [rdx]	      4519	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	FOR_9	IF_41
0x4005e8a	          0x4939d7	                            cmp r15, rdx	      4520	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	FOR_9	IF_42
0x4005e8d	            0x740f	                            je 0x4005e9e	      4520	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	FOR_9	IF_42
0x4005e8f	          0x6639fe	                              cmp si, di	      4520	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	FOR_9	IF_42
0x4005e92	            0x750a	                           jne 0x4005e9e	      4520	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	FOR_9	IF_42
0x4005e94	        0x4883ea02	                              sub rdx, 2	      4515	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	FOR_9
0x4005e98	        0x4883e902	                              sub rcx, 2	      4515	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	FOR_9
0x4005e9c	            0xebdc	                           jmp 0x4005e7a	      4521	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	FOR_9
0x4005e9e	          0x6639fe	                              cmp si, di	      4523	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	IF_43
0x4005ea1	            0x777d	                            ja 0x4005f20	      4523	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	IF_43
0x4005ea3	          0x6639fe	                              cmp si, di	      4524	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	IF_44
0x4005ea6	            0x7511	                           jne 0x4005eb9	      4524	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	IF_44
0x4005ea8	          0x83c501	                              add ebp, 1	      4528	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	IF_44
0x4005eab	    0x6641c7070000	                       mov word [r15], 0	      4529	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	IF_44
0x4005eb1	    0x41be01000000	                             mov r14d, 1	      4530	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	IF_44
0x4005eb7	            0xeb6a	                           jmp 0x4005f23	      4531	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	IF_44
0x4005eb9	           0xfb7c0	                           movzx eax, ax	      4536	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39
0x4005ebc	    0x69d0e8030000	                    imul edx, eax, 0x3e8	      4536	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39
0x4005ec2	         0xfb743fe	               movzx eax, word [rbx - 2]	      4536	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39
0x4005ec6	             0x1d0	                            add eax, edx	      4536	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39
0x4005ec8	              0x99	                                     cdq	      4536	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39
0x4005ec9	        0xf77c2424	                 idiv dword [rsp + 0x24]	      4536	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39
0x4005ecd	            0xeb14	                           jmp 0x4005ee3	      4536	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39
0x4005ecf	           0xfb7c0	                           movzx eax, ax	      4541	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	ELSE_10
0x4005ed2	    0x69d0e8030000	                    imul edx, eax, 0x3e8	      4541	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	ELSE_10
0x4005ed8	         0xfb743fe	               movzx eax, word [rbx - 2]	      4541	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	ELSE_10
0x4005edc	             0x1d0	                            add eax, edx	      4541	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	ELSE_10
0x4005ede	              0x99	                                     cdq	      4541	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	ELSE_10
0x4005edf	        0xf77c2420	                 idiv dword [rsp + 0x20]	      4541	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	ELSE_10
0x4005ee3	            0x85c0	                           test eax, eax	      4543	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_45
0x4005ee5	      0xb901000000	                              mov ecx, 1	      4543	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_45
0x4005eea	           0xf44c1	                          cmove eax, ecx	      4543	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_45
0x4005eed	             0x1c5	                            add ebp, eax	      4545	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7
0x4005eef	          0x4489f6	                           mov esi, r14d	      4554	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	CALL_33
0x4005ef2	        0x2b742414	             sub esi, dword [rsp + 0x14]	      4554	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	CALL_33
0x4005ef6	        0x4883ec08	                              sub rsp, 8	      4554	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	CALL_33
0x4005efa	            0xf7d8	                                 neg eax	      4554	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	CALL_33
0x4005efc	              0x50	                                push rax	      4554	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	CALL_33
0x4005efd	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      4554	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	CALL_33
0x4005f02	          0x4989f9	                             mov r9, rdi	      4554	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	CALL_33
0x4005f05	    0x41b800000000	                              mov r8d, 0	      4554	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	CALL_33
0x4005f0b	        0x8b4c2420	            mov ecx, dword [rsp + 0x20] 	      4554	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	CALL_33
0x4005f0f	          0x4c89ea	                            mov rdx, r13	      4554	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	CALL_33
0x4005f12	      0xe829a1ffff	                  call sym.decUnitAddSub	      4554	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	CALL_33
0x4005f17	        0x4883c410	                           add rsp, 0x10	      4562	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7
0x4005f1b	      0xe937ffffff	                           jmp 0x4005e57	      4562	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7
0x4005f20	          0x4589e6	                          mov r14d, r12d	      4562	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7
0x4005f23	      0x837c243000	               cmp dword [rsp + 0x30], 0	      4566	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46
0x4005f28	            0x7505	                           jne 0x4005f2f	      4566	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46
0x4005f2a	          0x6685ed	                             test bp, bp	      4566	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46
0x4005f2d	            0x7453	                            je 0x4005f82	      4566	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46
0x4005f2f	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      4567	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46
0x4005f34	          0x668928	                      mov word [rax], bp	      4567	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46
0x4005f37	      0x837c243000	               cmp dword [rsp + 0x30], 0	      4569	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_47
0x4005f3c	            0x752a	                           jne 0x4005f68	      4569	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_47
0x4005f3e	      0x8344242c01	               add dword [rsp + 0x2c], 1	      4570	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_47
0x4005f43	        0x8b54242c	            mov edx, dword [rsp + 0x2c] 	      4570	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_47
0x4005f47	           0xfb7ed	                           movzx ebp, bp	      4571	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_47	FOR_10
0x4005f4a	    0x3b2d00000000	            cmp ebp, dword [0x04005f50] 	      4571	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_47	FOR_10
0x4005f50	            0x721b	                            jb 0x4005f6d	      4571	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_47	FOR_10
0x4005f52	      0xb800000000	                              mov eax, 0	      4571	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_47	FOR_10
0x4005f57	          0x83c201	                              add edx, 1	      4571	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_47	FOR_10
0x4005f5a	        0x4883c004	                              add rax, 4	      4571	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_47	FOR_10
0x4005f5e	            0x3928	                    cmp dword [rax], ebp	      4571	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_47	FOR_10
0x4005f60	            0x76f5	                           jbe 0x4005f57	      4571	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_47	FOR_10
0x4005f62	        0x8954242c	             mov dword [rsp + 0x2c], edx	      4571	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_47	FOR_10
0x4005f66	            0xeb05	                           jmp 0x4005f6d	      4571	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_47	FOR_10
0x4005f68	      0x8344242c03	               add dword [rsp + 0x2c], 3	      4573	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	ELSE_11
0x4005f6d	      0x8344243001	               add dword [rsp + 0x30], 1	      4574	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46
0x4005f72	    0x48836c243802	               sub qword [rsp + 0x38], 2	      4575	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46
0x4005f78	        0x8b7c246c	            mov edi, dword [rsp + 0x6c] 	      4576	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_48
0x4005f7c	        0x397c242c	            cmp dword [rsp + 0x2c], edi 	      4576	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_48
0x4005f80	            0x7f4d	                            jg 0x4005fcf	      4576	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_48
0x4005f82	      0x6641833f00	                       cmp word [r15], 0	      4581	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49
0x4005f87	            0x7527	                           jne 0x4005fb0	      4581	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49
0x4005f89	        0x4183fe01	                             cmp r14d, 1	      4581	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49
0x4005f8d	            0x7521	                           jne 0x4005fb0	      4581	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49
0x4005f8f	    0x80bc248e0000	                cmp byte [rsp + 0x8e], 0	      4582	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_50
0x4005f97	            0x7536	                           jne 0x4005fcf	      4582	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_50
0x4005f99	    0x80bc248f0000	                cmp byte [rsp + 0x8f], 0	      4583	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_51
0x4005fa1	            0x740d	                            je 0x4005fb0	      4583	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_51
0x4005fa3	    0x8bbc24840000	            mov edi, dword [rsp + 0x84] 	      4583	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_51
0x4005faa	        0x397c2428	            cmp dword [rsp + 0x28], edi 	      4583	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_51
0x4005fae	            0x7e1f	                           jle 0x4005fcf	      4583	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_51
0x4005fb0	      0x837c242800	               cmp dword [rsp + 0x28], 0	      4588	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_52
0x4005fb5	            0x750a	                           jne 0x4005fc1	      4588	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_52
0x4005fb7	    0x80bc248d0000	                cmp byte [rsp + 0x8d], 0	      4588	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_52
0x4005fbf	            0x750e	                           jne 0x4005fcf	      4588	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_52
0x4005fc1	        0x4183ec01	                             sub r12d, 1	      4592	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6
0x4005fc5	      0x836c242803	               sub dword [rsp + 0x28], 3	      4593	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6
0x4005fca	      0xe963feffff	                           jmp 0x4005e32	      4594	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6
0x4005fcf	      0x837c243000	               cmp dword [rsp + 0x30], 0	      4601	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_53
0x4005fd4	            0x751c	                           jne 0x4005ff2	      4601	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_53
0x4005fd6	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      4604	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_53
0x4005fdb	      0x66c7000000	                       mov word [rax], 0	      4604	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_53
0x4005fe0	    0xc744242c0100	               mov dword [rsp + 0x2c], 1	      4603	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_53
0x4005fe8	    0xc74424300100	               mov dword [rsp + 0x30], 1	      4602	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_53
0x4005ff0	            0xeb06	                           jmp 0x4005ff8	      4602	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_53
0x4005ff2	    0x488344243802	               add qword [rsp + 0x38], 2	      4606	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12
0x4005ff8	    0xc784249c0000	               mov dword [rsp + 0x9c], 0	      4609	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12
0x4006003	      0x807c246800	                cmp byte [rsp + 0x68], 0	      4610	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54
0x4006008	     0xf89dc000000	                           jns 0x40060ea	      4610	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54
0x400600e	      0x6641833f00	                       cmp word [r15], 0	      4612	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	IF_55
0x4006013	            0x7506	                           jne 0x400601b	      4612	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	IF_55
0x4006015	        0x4183fe01	                             cmp r14d, 1	      4612	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	IF_55
0x4006019	            0x7e10	                           jle 0x400602b	      4612	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	IF_55
0x400601b	    0xc784249c0000	               mov dword [rsp + 0x9c], 1	      4612	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	IF_55
0x4006026	      0xe9c5030000	                           jmp 0x40063f0	      4612	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	IF_55
0x400602b	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      4619	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13
0x4006030	           0xfb700	                   movzx eax, word [rax]	      4619	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13
0x4006033	            0xa801	                              test al, 1	      4620	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56
0x4006035	     0xf85b5030000	                           jne 0x40063f0	      4620	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56
0x400603b	          0x6685c0	                             test ax, ax	      4620	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56
0x400603e	     0xf84ac030000	                            je 0x40063f0	      4620	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56
0x4006044	        0x8b5c2428	            mov ebx, dword [rsp + 0x28] 	      4624	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_57
0x4006048	    0x8bbc24840000	            mov edi, dword [rsp + 0x84] 	      4624	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_57
0x400604f	            0x39fb	                            cmp ebx, edi	      4624	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_57
0x4006051	     0xf8d99030000	                           jge 0x40063f0	      4624	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_57
0x4006057	           0xfb7c0	                           movzx eax, ax	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x400605a	            0x89c2	                            mov edx, eax	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x400605c	            0xd1ea	                              shr edx, 1	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x400605e	    0x69d267660000	                   imul edx, edx, 0x6667	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x4006064	          0xc1ea11	                           shr edx, 0x11	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x4006067	     0xfaf15000000	            imul edx, dword [0x0400606e]	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x400606e	            0x39d0	                            cmp eax, edx	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x4006070	     0xf857a030000	                           jne 0x40063f0	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x4006076	          0x4189d9	                            mov r9d, ebx	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x4006079	            0x29df	                            sub edi, ebx	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x400607b	            0x89fa	                            mov edx, edi	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x400607d	    0x41b800000000	                              mov r8d, 0	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x4006083	      0xbf01000000	                              mov edi, 1	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x4006088	            0xeb24	                           jmp 0x40060ae	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x400608a	          0x8d4f01	                      lea ecx, [rdi + 1]	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x400608d	            0x89c6	                            mov esi, eax	      4627	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x400608f	            0xd3ee	                             shr esi, cl	      4627	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x4006091	    0x410fafb00000	                    imul esi, dword [r8]	      4627	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x4006099	          0xc1ee11	                           shr esi, 0x11	      4627	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x400609c	    0x410fafb00000	                    imul esi, dword [r8]	      4627	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x40060a4	        0x4983c004	                               add r8, 4	      4627	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x40060a8	            0x39c6	                            cmp esi, eax	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x40060aa	            0x7510	                           jne 0x40060bc	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x40060ac	            0x89cf	                            mov edi, ecx	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x40060ae	        0x428d1c0f	                     lea ebx, [rdi + r9]	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x40060b2	        0x895c2428	             mov dword [rsp + 0x28], ebx	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x40060b6	            0x39fa	                            cmp edx, edi	      4624	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_57
0x40060b8	            0x75d0	                           jne 0x400608a	      4624	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_57
0x40060ba	            0xeb02	                           jmp 0x40060be	      4624	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_57
0x40060bc	            0x89fa	                            mov edx, edi	      4624	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_57
0x40060be	            0x85d2	                           test edx, edx	      4633	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	IF_60
0x40060c0	     0xf8e2a030000	                           jle 0x40063f0	      4633	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	IF_60
0x40060c6	        0x8b742430	            mov esi, dword [rsp + 0x30] 	      4634	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	IF_60	CALL_35
0x40060ca	      0x488b5c2438	            mov rbx, qword [rsp + 0x38] 	      4634	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	IF_60	CALL_35
0x40060cf	          0x4889df	                            mov rdi, rbx	      4634	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	IF_60	CALL_35
0x40060d2	      0xe851a4ffff	                call sym.decShiftToLeast	      4634	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	IF_60	CALL_35
0x40060d7	            0x89c6	                            mov esi, eax	      4635	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	IF_60	CALL_36
0x40060d9	          0x4889df	                            mov rdi, rbx	      4635	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	IF_60	CALL_36
0x40060dc	      0xe806acffff	                   call sym.decGetDigits	      4635	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	IF_60	CALL_36
0x40060e1	        0x8944242c	             mov dword [rsp + 0x2c], eax	      4635	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	IF_60	CALL_36
0x40060e5	      0xe906030000	                           jmp 0x40063f0	      4635	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	IF_60	CALL_36
0x40060ea	        0x8b44242c	            mov eax, dword [rsp + 0x2c] 	      4645	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_61
0x40060ee	         0x3442428	             add eax, dword [rsp + 0x28]	      4645	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_61
0x40060f2	        0x3944246c	            cmp dword [rsp + 0x6c], eax 	      4645	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_61
0x40060f6	            0x7d0d	                           jge 0x4006105	      4645	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_61
0x40060f8	      0x488b442450	            mov rax, qword [rsp + 0x50] 	      4646	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_61
0x40060fd	          0x830804	                       or dword [rax], 4	      4646	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_61
0x4006100	      0xe958030000	                           jmp 0x400645d	      4647	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_61
0x4006105	      0xf644246850	           test byte [rsp + 0x68], 0x50 	      4649	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x400610a	     0xf84e0020000	                            je 0x40063f0	      4649	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x4006110	      0x488b5c2460	            mov rbx, qword [rsp + 0x60] 	      4657	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x4006115	         0xfb64308	               movzx eax, byte [rbx + 8]	      4657	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x4006119	            0x89c1	                            mov ecx, eax	      4657	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x400611b	    0x888424830000	               mov byte [rsp + 0x83], al	      4657	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x4006122	      0x6641833f00	                       cmp word [r15], 0	      4661	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63
0x4006127	            0x7551	                           jne 0x400617a	      4661	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63
0x4006129	        0x4183fe01	                             cmp r14d, 1	      4661	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63
0x400612d	            0x754b	                           jne 0x400617a	      4661	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63
0x400612f	          0x8b4304	                mov eax, dword [rbx + 4]	      4662	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63
0x4006132	      0x488b5c2470	            mov rbx, qword [rsp + 0x70] 	      4663	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63	IF_64
0x4006137	          0x8b5304	                mov edx, dword [rbx + 4]	      4663	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63	IF_64
0x400613a	      0x488b5c2448	            mov rbx, qword [rsp + 0x48] 	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x400613f	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4006145	    0x66c7430a0000	                 mov word [rbx + 0xa], 0	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400614b	            0x39d0	                            cmp eax, edx	      4668	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63	IF_65
0x400614d	           0xf4fc2	                          cmovg eax, edx	      4668	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63	IF_65
0x4006150	          0x894304	                mov dword [rbx + 4], eax	      4668	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63	IF_65
0x4006153	            0x89c8	                            mov eax, ecx	      4669	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63
0x4006155	          0x83e080	                     and eax, 0xffffff80	      4669	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63
0x4006158	          0x884308	                  mov byte [rbx + 8], al	      4669	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63
0x400615b	      0x488b4c2450	            mov rcx, qword [rsp + 0x50] 	      4670	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63
0x4006160	    0x488d94249c00	                   lea rdx, [rsp + 0x9c]	      4670	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63
0x4006168	      0x488b742478	            mov rsi, qword [rsp + 0x78] 	      4670	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63
0x400616d	          0x4889df	                            mov rdi, rbx	      4670	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63
0x4006170	      0xe88db9ffff	                    call sym.decFinalize	      4670	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63
0x4006175	      0xe9e3020000	                           jmp 0x400645d	      4671	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63
0x400617a	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      4674	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_66
0x400617f	           0xfb700	                   movzx eax, word [rax]	      4674	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_66
0x4006182	      0x6689442410	               mov word [rsp + 0x10], ax	      4674	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_66
0x4006187	        0x8b542428	            mov edx, dword [rsp + 0x28] 	      4682	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x400618b	    0x8b8424880000	            mov eax, dword [rsp + 0x88] 	      4682	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x4006192	             0x1c2	                            add edx, eax	      4682	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x4006194	      0x488b5c2460	            mov rbx, qword [rsp + 0x60] 	      4682	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x4006199	          0x2b5304	                sub edx, dword [rbx + 4]	      4682	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x400619c	      0x488b5c2470	            mov rbx, qword [rsp + 0x70] 	      4682	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x40061a1	           0x35304	                add edx, dword [rbx + 4]	      4682	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x40061a4	            0x39d0	                            cmp eax, edx	      4687	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_39
0x40061a6	           0xf4ed0	                         cmovle edx, eax	      4687	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_39
0x40061a9	          0x4489f6	                           mov esi, r14d	      4687	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_39
0x40061ac	          0x4c89ff	                            mov rdi, r15	      4687	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_39
0x40061af	      0xe874a3ffff	                call sym.decShiftToLeast	      4687	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_39
0x40061b4	            0x89c6	                            mov esi, eax	      4689	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_40
0x40061b6	          0x4c89ff	                            mov rdi, r15	      4689	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_40
0x40061b9	      0xe829abffff	                   call sym.decGetDigits	      4689	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_40
0x40061be	            0x89c3	                            mov ebx, eax	      4689	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_40
0x40061c0	          0x83f831	                           cmp eax, 0x31	      4690	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_41
0x40061c3	            0x7f0b	                            jg 0x40061d0	      4690	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_41
0x40061c5	            0x4898	                                    cdqe	      4690	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_41
0x40061c7	     0xfb6a8000000	                   movzx ebp, byte [rax]	      4690	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_41
0x40061ce	            0xeb13	                           jmp 0x40061e3	      4690	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_41
0x40061d0	          0x8d4802	                      lea ecx, [rax + 2]	      4690	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_41
0x40061d3	      0xba56555555	                     mov edx, 0x55555556	      4690	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_41
0x40061d8	            0x89c8	                            mov eax, ecx	      4690	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_41
0x40061da	            0xf7ea	                                imul edx	      4690	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_41
0x40061dc	          0xc1f91f	                           sar ecx, 0x1f	      4690	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_41
0x40061df	            0x29ca	                            sub edx, ecx	      4690	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_41
0x40061e1	            0x89d5	                            mov ebp, edx	      4690	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_41
0x40061e3	      0x488b442460	            mov rax, qword [rsp + 0x60] 	      4692	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x40061e8	          0x8b5004	                mov edx, dword [rax + 4]	      4692	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x40061eb	      0x488b442470	            mov rax, qword [rsp + 0x70] 	      4693	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_68
0x40061f0	          0x8b4004	                mov eax, dword [rax + 4]	      4693	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_68
0x40061f3	            0x39c2	                            cmp edx, eax	      4693	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_68
0x40061f5	           0xf4ec2	                         cmovle eax, edx	      4693	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_68
0x40061f8	        0x89442428	             mov dword [rsp + 0x28], eax	      4693	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_68
0x40061fc	      0xf644246810	           test byte [rsp + 0x68], 0x10 	      4698	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69
0x4006201	     0xf84d5010000	                            je 0x40063dc	      4698	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69
0x4006207	        0x4883ec08	                              sub rsp, 8	      4704	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_42
0x400620b	            0x6a01	                                  push 1	      4704	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_42
0x400620d	          0x4d89f9	                             mov r9, r15	      4704	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_42
0x4006210	    0x41b800000000	                              mov r8d, 0	      4704	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_42
0x4006216	            0x89e9	                            mov ecx, ebp	      4704	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_42
0x4006218	          0x4c89fa	                            mov rdx, r15	      4704	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_42
0x400621b	            0x89ee	                            mov esi, ebp	      4704	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_42
0x400621d	          0x4c89ff	                            mov rdi, r15	      4704	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_42
0x4006220	      0xe81b9effff	                  call sym.decUnitAddSub	      4704	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_42
0x4006225	          0x4189c4	                           mov r12d, eax	      4704	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_42
0x4006228	    0x488b84248000	            mov rax, qword [rsp + 0x80] 	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4006230	          0x8b7804	                mov edi, dword [rax + 4]	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4006233	        0x897c2418	             mov dword [rsp + 0x18], edi	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4006237	          0x4189f8	                            mov r8d, edi	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x400623a	      0x442b442438	             sub r8d, dword [rsp + 0x38]	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x400623f	            0x8b00	                    mov eax, dword [rax]	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4006241	        0x4883c410	                           add rsp, 0x10	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4006245	          0x83f831	                           cmp eax, 0x31	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4006248	            0x7f0b	                            jg 0x4006255	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x400624a	            0x4898	                                    cdqe	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x400624c	     0xfb688000000	                   movzx ecx, byte [rax]	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4006253	            0xeb15	                           jmp 0x400626a	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4006255	          0x8d4802	                      lea ecx, [rax + 2]	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4006258	      0xba56555555	                     mov edx, 0x55555556	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x400625d	            0x89c8	                            mov eax, ecx	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x400625f	            0xf7ea	                                imul edx	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4006261	            0x89c8	                            mov eax, ecx	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4006263	          0xc1f81f	                           sar eax, 0x1f	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4006266	            0x89d1	                            mov ecx, edx	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4006268	            0x29c1	                            sub ecx, eax	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x400626a	          0x4c89ea	                            mov rdx, r13	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x400626d	          0x4489e6	                           mov esi, r12d	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4006270	          0x4c89ff	                            mov rdi, r15	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4006273	      0xe8d8afffff	                 call sym.decUnitCompare	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4006278	      0x3d00000080	                     cmp eax, 0x80000000	      4713	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_70
0x400627d	            0x7411	                            je 0x4006290	      4713	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_70
0x400627f	          0x4d63e4	                        movsxd r12, r12d	      4719	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12
0x4006282	        0x4b8d0c67	                  lea rcx, [r15 + r12*2]	      4719	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12
0x4006286	          0x4c89fa	                            mov rdx, r15	      4719	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12
0x4006289	          0x4939cf	                            cmp r15, rcx	      4719	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12
0x400628c	            0x720f	                            jb 0x400629d	      4719	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12
0x400628e	            0xeb2d	                           jmp 0x40062bd	      4719	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12
0x4006290	      0x488b442450	            mov rax, qword [rsp + 0x50] 	      4714	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_70
0x4006295	          0x830810	                    or dword [rax], 0x10	      4714	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_70
0x4006298	      0xe9c0010000	                           jmp 0x400645d	      4715	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_70
0x400629d	           0xfb732	                   movzx esi, word [rdx]	      4721	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12
0x40062a0	            0x89f7	                            mov edi, esi	      4722	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12
0x40062a2	          0x66d1ef	                               shr di, 1	      4722	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12
0x40062a5	          0x66893a	                      mov word [rdx], di	      4722	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12
0x40062a8	        0x40f6c601	                             test sil, 1	      4723	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12	IF_71
0x40062ac	            0x7406	                            je 0x40062b4	      4723	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12	IF_71
0x40062ae	    0x668142fef401	               add word [rdx - 2], 0x1f4	      4724	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12
0x40062b4	        0x4883c202	                              add rdx, 2	      4719	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12
0x40062b8	          0x4839ca	                            cmp rdx, rcx	      4719	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12
0x40062bb	            0x72e0	                            jb 0x400629d	      4719	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12
0x40062bd	            0x85c0	                           test eax, eax	      4728	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x40062bf	            0x7f13	                            jg 0x40062d4	      4728	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x40062c1	      0xf644241001	               test byte [rsp + 0x10], 1	      4728	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x40062c6	     0xf841b010000	                            je 0x40063e7	      4728	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x40062cc	            0x85c0	                           test eax, eax	      4728	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x40062ce	     0xf8513010000	                           jne 0x40063e7	      4728	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x40062d4	        0x8b5c246c	            mov ebx, dword [rsp + 0x6c] 	      4735	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73
0x40062d8	        0x395c242c	            cmp dword [rsp + 0x2c], ebx 	      4735	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73
0x40062dc	            0x7568	                           jne 0x4006346	      4735	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73
0x40062de	      0x837c242c03	               cmp dword [rsp + 0x2c], 3	      4737	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	IF_74
0x40062e3	            0x7e17	                           jle 0x40062fc	      4737	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	IF_74
0x40062e5	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      4738	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	IF_74	IF_75
0x40062ea	      0x668138e703	                   cmp word [rax], 0x3e7	      4738	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	IF_74	IF_75
0x40062ef	            0x7428	                            je 0x4006319	      4738	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	IF_74	IF_75
0x40062f1	            0xeb53	                           jmp 0x4006346	      4738	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	IF_74	IF_75
0x40062f3	      0x668138e703	                   cmp word [rax], 0x3e7	      4738	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	IF_74	IF_75
0x40062f8	            0x7428	                            je 0x4006322	      4738	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	IF_74	IF_75
0x40062fa	            0xeb4a	                           jmp 0x4006346	      4738	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	IF_74	IF_75
0x40062fc	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      4747	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_77
0x4006301	           0xfb710	                   movzx edx, word [rax]	      4747	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_77
0x4006304	      0x486344242c	         movsxd rax, dword [rsp + 0x2c] 	      4741	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	ELSE_15	IF_76
0x4006309	    0x8b0485000000	                  mov eax, dword [rax*4]	      4747	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_77
0x4006310	          0x83e801	                              sub eax, 1	      4747	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_77
0x4006313	            0x39c2	                            cmp edx, eax	      4747	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_77
0x4006315	            0x752f	                           jne 0x4006346	      4747	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_77
0x4006317	            0xeb20	                           jmp 0x4006339	      4747	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_77
0x4006319	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      4747	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_77
0x400631e	        0x8b54242c	            mov edx, dword [rsp + 0x2c] 	      4747	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_77
0x4006322	          0x83ea03	                              sub edx, 3	      4744	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13
0x4006325	        0x4883c002	                              add rax, 2	      4736	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13
0x4006329	          0x83fa03	                              cmp edx, 3	      4737	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	IF_74
0x400632c	            0x7fc5	                            jg 0x40062f3	      4737	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	IF_74
0x400632e	      0x4889442438	             mov qword [rsp + 0x38], rax	      4737	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	IF_74
0x4006333	        0x8954242c	             mov dword [rsp + 0x2c], edx	      4737	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	IF_74
0x4006337	            0xebc3	                           jmp 0x40062fc	      4737	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	IF_74
0x4006339	      0x488b442450	            mov rax, qword [rsp + 0x50] 	      4748	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_77
0x400633e	          0x830804	                       or dword [rax], 4	      4748	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_77
0x4006341	      0xe917010000	                           jmp 0x400645d	      4749	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_77
0x4006346	      0x488b5c2470	            mov rbx, qword [rsp + 0x70] 	      4753	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x400634b	          0x8b4304	                mov eax, dword [rbx + 4]	      4753	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x400634e	        0x89442410	             mov dword [rsp + 0x10], eax	      4753	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4006352	            0x89c1	                            mov ecx, eax	      4753	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4006354	        0x2b4c2428	             sub ecx, dword [rsp + 0x28]	      4753	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4006358	      0xba56555555	                     mov edx, 0x55555556	      4755	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x400635d	            0x89c8	                            mov eax, ecx	      4755	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x400635f	            0xf7ea	                                imul edx	      4755	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4006361	            0x89c8	                            mov eax, ecx	      4755	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4006363	          0xc1f81f	                           sar eax, 0x1f	      4755	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4006366	            0x29c2	                            sub edx, eax	      4755	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4006368	          0x4189d0	                            mov r8d, edx	      4755	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x400636b	          0x8d0452	                  lea eax, [rdx + rdx*2]	      4760	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x400636e	            0x29c1	                            sub ecx, eax	      4760	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4006370	            0x89c8	                            mov eax, ecx	      4760	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4006372	            0x4898	                                    cdqe	      4760	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4006374	    0x8b3485000000	                  mov esi, dword [rax*4]	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x400637b	            0xf7de	                                 neg esi	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x400637d	            0x8b03	                    mov eax, dword [rbx]	      4759	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_46
0x400637f	          0x83f831	                           cmp eax, 0x31	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x4006382	            0x7f0b	                            jg 0x400638f	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x4006384	            0x4898	                                    cdqe	      4759	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_46
0x4006386	     0xfb688000000	                   movzx ecx, byte [rax]	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x400638d	            0xeb15	                           jmp 0x40063a4	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x400638f	          0x8d4802	                      lea ecx, [rax + 2]	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x4006392	      0xba56555555	                     mov edx, 0x55555556	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x4006397	            0x89c8	                            mov eax, ecx	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x4006399	            0xf7ea	                                imul edx	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x400639b	            0x89c8	                            mov eax, ecx	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x400639d	          0xc1f81f	                           sar eax, 0x1f	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x40063a0	            0x89d1	                            mov ecx, edx	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x40063a2	            0x29c1	                            sub ecx, eax	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x40063a4	        0x4883ec08	                              sub rsp, 8	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x40063a8	              0x56	                                push rsi	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x40063a9	          0x4d89f9	                             mov r9, r15	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x40063ac	          0x4c89ea	                            mov rdx, r13	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x40063af	            0x89ee	                            mov esi, ebp	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x40063b1	          0x4c89ff	                            mov rdi, r15	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x40063b4	      0xe8879cffff	                  call sym.decUnitAddSub	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x40063b9	            0xf7d8	                                 neg eax	      4761	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_47
0x40063bb	            0x89c6	                            mov esi, eax	      4761	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_47
0x40063bd	          0x4c89ff	                            mov rdi, r15	      4761	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_47
0x40063c0	      0xe822a9ffff	                   call sym.decGetDigits	      4761	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_47
0x40063c5	        0x8944243c	             mov dword [rsp + 0x3c], eax	      4761	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_47
0x40063c9	    0x808424930000	             add byte [rsp + 0x93], 0x80	      4764	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x40063d1	        0x4883c410	                           add rsp, 0x10	      4764	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x40063d5	      0x4c897c2438	             mov qword [rsp + 0x38], r15	      4688	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x40063da	            0xeb14	                           jmp 0x40063f0	      4688	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x40063dc	        0x895c242c	             mov dword [rsp + 0x2c], ebx	      4689	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_40
0x40063e0	      0x4c897c2438	             mov qword [rsp + 0x38], r15	      4688	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x40063e5	            0xeb09	                           jmp 0x40063f0	      4688	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x40063e7	        0x895c242c	             mov dword [rsp + 0x2c], ebx	      4689	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_40
0x40063eb	      0x4c897c2438	             mov qword [rsp + 0x38], r15	      4688	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x40063f0	      0x488b5c2448	            mov rbx, qword [rsp + 0x48] 	      4771	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x40063f5	        0x8b7c2428	            mov edi, dword [rsp + 0x28] 	      4771	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x40063f9	          0x897b04	                mov dword [rbx + 4], edi	      4771	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x40063fc	     0xfb684248300	           movzx eax, byte [rsp + 0x83] 	      4772	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4006404	          0x83e080	                     and eax, 0xffffff80	      4772	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4006407	          0x884308	                  mov byte [rbx + 8], al	      4772	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400640a	      0x4c8b7c2450	            mov r15, qword [rsp + 0x50] 	      4775	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_49
0x400640f	          0x4d89f9	                             mov r9, r15	      4775	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_49
0x4006412	    0x4c8d84249c00	                    lea r8, [rsp + 0x9c]	      4775	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_49
0x400641a	        0x8b4c242c	            mov ecx, dword [rsp + 0x2c] 	      4775	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_49
0x400641e	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	      4775	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_49
0x4006423	      0x4c8b742478	            mov r14, qword [rsp + 0x78] 	      4775	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_49
0x4006428	          0x4c89f6	                            mov rsi, r14	      4775	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_49
0x400642b	          0x4889df	                            mov rdi, rbx	      4775	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_49
0x400642e	      0xe841a4ffff	                    call sym.decSetCoeff	      4775	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_49
0x4006433	          0x4c89f9	                            mov rcx, r15	      4777	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4006436	    0x488d94249c00	                   lea rdx, [rsp + 0x9c]	      4777	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400643e	          0x4c89f6	                            mov rsi, r14	      4777	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4006441	          0x4889df	                            mov rdi, rbx	      4777	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4006444	      0xe8b9b6ffff	                    call sym.decFinalize	      4777	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4006449	            0xeb12	                           jmp 0x400645d	      4777	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400644b	    0x48c744244000	               mov qword [rsp + 0x40], 0	      4228	decNumber.c	FUNCTION_68	FUNCTION_65
0x4006454	    0x48c744245800	               mov qword [rsp + 0x58], 0	      4220	decNumber.c	FUNCTION_68	FUNCTION_65
0x400645d	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      4785	decNumber.c	FUNCTION_68	FUNCTION_65
0x4006462	      0xe800000000	                          call 0x4006467	      4785	decNumber.c	FUNCTION_68	FUNCTION_65
0x4006467	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	      4786	decNumber.c	FUNCTION_68	FUNCTION_65
0x400646c	      0xe800000000	                          call 0x4006471	      4786	decNumber.c	FUNCTION_68	FUNCTION_65
0x4006471	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      4792	decNumber.c	FUNCTION_68	FUNCTION_65
0x4006476	    0x488b9c240801	           mov rbx, qword [rsp + 0x108] 	      4792	decNumber.c	FUNCTION_68	FUNCTION_65
0x400647e	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      4792	decNumber.c	FUNCTION_68	FUNCTION_65
0x4006487	            0x741a	                            je 0x40064a3	      4792	decNumber.c	FUNCTION_68	FUNCTION_65
0x4006489	            0xeb13	                           jmp 0x400649e	      4792	decNumber.c	FUNCTION_68	FUNCTION_65
0x400648b	    0x69f8e8030000	                    imul edi, eax, 0x3e8	      4454	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4006491	        0x897c2424	             mov dword [rsp + 0x24], edi	      4454	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4006495	        0x89442420	             mov dword [rsp + 0x20], eax	      4452	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4006499	      0xe901f8ffff	                           jmp 0x4005c9f	      4452	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400649e	      0xe800000000	                          call 0x40064a3	      4792	decNumber.c	FUNCTION_68	FUNCTION_65
0x40064a3	    0x4881c4180100	                          add rsp, 0x118	      4792	decNumber.c	FUNCTION_68	FUNCTION_65
0x40064aa	              0x5b	                                 pop rbx	      4792	decNumber.c	FUNCTION_68	FUNCTION_65
0x40064ab	              0x5d	                                 pop rbp	      4792	decNumber.c	FUNCTION_68	FUNCTION_65
0x40064ac	            0x415c	                                 pop r12	      4792	decNumber.c	FUNCTION_68	FUNCTION_65
0x40064ae	            0x415d	                                 pop r13	      4792	decNumber.c	FUNCTION_68	FUNCTION_65
0x40064b0	            0x415e	                                 pop r14	      4792	decNumber.c	FUNCTION_68	FUNCTION_65
0x40064b2	            0x415f	                                 pop r15	      4792	decNumber.c	FUNCTION_68	FUNCTION_65
0x40064b4	              0xc3	                                     ret	      4792	decNumber.c	FUNCTION_68	FUNCTION_65
decNumberXor	SWITCH,0:functions,0:ELSE,2:DO,0:FOR,2:IF,8:CALL,12:WHILE,0	171
0x4002ac1	            0x4157	                                push r15	      3229	decNumber.c	FUNCTION_68	FUNCTION_49
0x4002ac3	            0x4156	                                push r14	      3229	decNumber.c	FUNCTION_68	FUNCTION_49
0x4002ac5	            0x4155	                                push r13	      3229	decNumber.c	FUNCTION_68	FUNCTION_49
0x4002ac7	            0x4154	                                push r12	      3229	decNumber.c	FUNCTION_68	FUNCTION_49
0x4002ac9	              0x55	                                push rbp	      3229	decNumber.c	FUNCTION_68	FUNCTION_49
0x4002aca	              0x53	                                push rbx	      3229	decNumber.c	FUNCTION_68	FUNCTION_49
0x4002acb	        0x4883ec18	                           sub rsp, 0x18	      3229	decNumber.c	FUNCTION_68	FUNCTION_49
0x4002acf	          0x4889fb	                            mov rbx, rdi	      3229	decNumber.c	FUNCTION_68	FUNCTION_49
0x4002ad2	        0x837e0400	                  cmp dword [rsi + 4], 0	      3238	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_3
0x4002ad6	            0x7521	                           jne 0x4002af9	      3238	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_3
0x4002ad8	          0x4989d0	                             mov r8, rdx	      3238	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_3
0x4002adb	         0xfb64608	               movzx eax, byte [rsi + 8]	      3238	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_3
0x4002adf	            0xa870	                           test al, 0x70	      3238	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_3
0x4002ae1	            0x7516	                           jne 0x4002af9	      3238	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_3
0x4002ae3	            0x84c0	                             test al, al	      3238	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_3
0x4002ae5	            0x7812	                            js 0x4002af9	      3238	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_3
0x4002ae7	        0x837a0400	                  cmp dword [rdx + 4], 0	      3239	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_5
0x4002aeb	            0x750c	                           jne 0x4002af9	      3239	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_5
0x4002aed	         0xfb64208	               movzx eax, byte [rdx + 8]	      3239	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_5
0x4002af1	            0xa870	                           test al, 0x70	      3239	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_5
0x4002af3	            0x7504	                           jne 0x4002af9	      3239	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_5
0x4002af5	            0x84c0	                             test al, al	      3239	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_5
0x4002af7	            0x7915	                           jns 0x4002b0e	      3239	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_5
0x4002af9	          0x4889ca	                            mov rdx, rcx	      3240	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_6
0x4002afc	      0xbe80000000	                           mov esi, 0x80	      3240	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_6
0x4002b01	          0x4889df	                            mov rdi, rbx	      3240	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_6
0x4002b04	      0xe813ebffff	                      call sym.decStatus	      3240	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_6
0x4002b09	      0xe9d9010000	                           jmp 0x4002ce7	      3241	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2
0x4002b0e	        0x4c8d5e0a	                    lea r11, [rsi + 0xa]	      3244	decNumber.c	FUNCTION_68	FUNCTION_49
0x4002b12	        0x488d6a0a	                    lea rbp, [rdx + 0xa]	      3245	decNumber.c	FUNCTION_68	FUNCTION_49
0x4002b16	        0x488d7f0a	                    lea rdi, [rdi + 0xa]	      3246	decNumber.c	FUNCTION_68	FUNCTION_49
0x4002b1a	            0x8b06	                    mov eax, dword [rsi]	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x4002b1c	          0x83f831	                           cmp eax, 0x31	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x4002b1f	            0x7f10	                            jg 0x4002b31	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x4002b21	            0x4898	                                    cdqe	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x4002b23	     0xfb680000000	                   movzx eax, byte [rax]	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x4002b2a	      0x4c8d6400fe	                lea r12, [rax + rax - 2]	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x4002b2f	            0xeb1b	                           jmp 0x4002b4c	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x4002b31	          0x8d7002	                      lea esi, [rax + 2]	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x4002b34	      0xba56555555	                     mov edx, 0x55555556	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x4002b39	            0x89f0	                            mov eax, esi	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x4002b3b	            0xf7ea	                                imul edx	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x4002b3d	            0x89f0	                            mov eax, esi	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x4002b3f	          0xc1f81f	                           sar eax, 0x1f	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x4002b42	            0x29c2	                            sub edx, eax	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x4002b44	          0x4863d2	                         movsxd rdx, edx	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x4002b47	      0x4c8d6412fe	                lea r12, [rdx + rdx - 2]	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x4002b4c	          0x4d01dc	                            add r12, r11	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x4002b4f	          0x418b00	                     mov eax, dword [r8]	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4002b52	          0x83f831	                           cmp eax, 0x31	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4002b55	            0x7f10	                            jg 0x4002b67	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4002b57	            0x4898	                                    cdqe	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4002b59	     0xfb680000000	                   movzx eax, byte [rax]	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4002b60	      0x4c8d6c00fe	                lea r13, [rax + rax - 2]	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4002b65	            0xeb1b	                           jmp 0x4002b82	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4002b67	          0x8d7002	                      lea esi, [rax + 2]	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4002b6a	      0xba56555555	                     mov edx, 0x55555556	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4002b6f	            0x89f0	                            mov eax, esi	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4002b71	            0xf7ea	                                imul edx	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4002b73	            0x89f0	                            mov eax, esi	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4002b75	          0xc1f81f	                           sar eax, 0x1f	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4002b78	            0x29c2	                            sub edx, eax	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4002b7a	          0x4863d2	                         movsxd rdx, edx	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4002b7d	      0x4c8d6c12fe	                lea r13, [rdx + rdx - 2]	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4002b82	          0x4901ed	                            add r13, rbp	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4002b85	            0x8b31	                    mov esi, dword [rcx]	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x4002b87	          0x83fe31	                           cmp esi, 0x31	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x4002b8a	            0x7f1b	                            jg 0x4002ba7	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x4002b8c	          0x4863c6	                         movsxd rax, esi	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x4002b8f	     0xfb680000000	                   movzx eax, byte [rax]	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x4002b96	           0xfb6d0	                           movzx edx, al	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x4002b99	      0x4c8d7c57fe	              lea r15, [rdi + rdx*2 - 2]	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x4002b9e	           0xfb6c0	                           movzx eax, al	      3250	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_10
0x4002ba1	        0x8d4440fd	              lea eax, [rax + rax*2 - 3]	      3250	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_10
0x4002ba5	            0xeb21	                           jmp 0x4002bc8	      3250	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_10
0x4002ba7	        0x448d4602	                      lea r8d, [rsi + 2]	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x4002bab	      0xba56555555	                     mov edx, 0x55555556	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x4002bb0	          0x4489c0	                            mov eax, r8d	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x4002bb3	            0xf7ea	                                imul edx	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x4002bb5	        0x41c1f81f	                           sar r8d, 0x1f	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x4002bb9	          0x4429c2	                            sub edx, r8d	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x4002bbc	          0x4863c2	                         movsxd rax, edx	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x4002bbf	      0x4c8d7c47fe	              lea r15, [rdi + rax*2 - 2]	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x4002bc4	        0x8d4452fd	              lea eax, [rdx + rdx*2 - 3]	      3250	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_10
0x4002bc8	            0x29c6	                            sub esi, eax	      3250	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_10
0x4002bca	            0x89f0	                            mov eax, esi	      3250	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_10
0x4002bcc	          0x4939ff	                            cmp r15, rdi	      3251	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1
0x4002bcf	     0xf82dd000000	                            jb 0x4002cb2	      3251	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1
0x4002bd5	          0x4889fe	                            mov rsi, rdi	      3251	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1
0x4002bd8	          0x83e801	                              sub eax, 1	      3271	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4002bdb	        0x8944240c	              mov dword [rsp + 0xc], eax	      3271	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4002bdf	          0x4d39dc	                            cmp r12, r11	      3253	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	IF_3
0x4002be2	     0xf82ee000000	                            jb 0x4002cd6	      3253	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	IF_3
0x4002be8	        0x450fb70b	                   movzx r9d, word [r11]	      3254	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_1
0x4002bec	      0xba00000000	                              mov edx, 0	      3255	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	IF_4
0x4002bf1	          0x4939ed	                            cmp r13, rbp	      3255	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	IF_4
0x4002bf4	            0x7204	                            jb 0x4002bfa	      3255	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	IF_4
0x4002bf6	         0xfb75500	                   movzx edx, word [rbp]	      3256	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2
0x4002bfa	      0x66c7060000	                       mov word [rsi], 0	      3257	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2
0x4002bff	            0x89d0	                            mov eax, edx	      3258	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5
0x4002c01	        0x664409c8	                              or ax, r9w	      3258	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5
0x4002c05	     0xf8490000000	                            je 0x4002c9b	      3258	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5
0x4002c0b	    0x41ba00000000	                             mov r10d, 0	      3258	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5
0x4002c11	          0x4489c8	                            mov eax, r9d	      3262	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4002c14	            0x31d0	                            xor eax, edx	      3262	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4002c16	            0xa801	                              test al, 1	      3262	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4002c18	            0x740b	                            je 0x4002c25	      3262	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4002c1a	    0x428b04950000	                  mov eax, dword [r10*4]	      3262	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4002c22	          0x660106	                      add word [rsi], ax	      3262	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4002c25	        0x410fb7c1	                          movzx eax, r9w	      3263	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4002c29	    0x69c0cdcc0000	                   imul eax, eax, 0xcccd	      3263	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4002c2f	          0xc1e813	                           shr eax, 0x13	      3263	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4002c32	          0x4189c0	                            mov r8d, eax	      3263	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4002c35	          0x8d0480	                  lea eax, [rax + rax*4]	      3263	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4002c38	             0x1c0	                            add eax, eax	      3263	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4002c3a	          0x4129c1	                            sub r9d, eax	      3263	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4002c3d	          0x4489c8	                            mov eax, r9d	      3263	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4002c40	          0x4589c1	                            mov r9d, r8d	      3264	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4002c43	        0x440fb7f2	                          movzx r14d, dx	      3265	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4002c47	    0x4569f6cdcc00	                 imul r14d, r14d, 0xcccd	      3265	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4002c4e	        0x41c1ee13	                          shr r14d, 0x13	      3265	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4002c52	        0x478d04b6	                  lea r8d, [r14 + r14*4]	      3265	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4002c56	          0x4501c0	                            add r8d, r8d	      3265	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4002c59	          0x4429c2	                            sub edx, r8d	      3265	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4002c5c	          0x4189d0	                            mov r8d, edx	      3265	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4002c5f	          0x4409c0	                             or eax, r8d	      3265	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4002c62	        0x440fb7c0	                           movzx r8d, ax	      3265	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4002c66	          0x4489f2	                           mov edx, r14d	      3266	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4002c69	        0x4183f801	                              cmp r8d, 1	      3267	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4002c6d	            0x7e12	                           jle 0x4002c81	      3267	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4002c6f	          0x4889ca	                            mov rdx, rcx	      3268	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_7	CALL_11
0x4002c72	      0xbe80000000	                           mov esi, 0x80	      3268	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_7	CALL_11
0x4002c77	          0x4889df	                            mov rdi, rbx	      3268	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_7	CALL_11
0x4002c7a	      0xe89de9ffff	                      call sym.decStatus	      3268	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_7	CALL_11
0x4002c7f	            0xeb66	                           jmp 0x4002ce7	      3269	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4002c81	          0x4939f7	                            cmp r15, rsi	      3271	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4002c84	            0x7507	                           jne 0x4002c8d	      3271	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4002c86	      0x443954240c	            cmp dword [rsp + 0xc], r10d 	      3271	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4002c8b	            0x740e	                            je 0x4002c9b	      3271	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4002c8d	        0x4983c201	                              add r10, 1	      3271	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4002c91	        0x4983fa03	                              cmp r10, 3	      3261	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4002c95	     0xf8576ffffff	                           jne 0x4002c11	      3261	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4002c9b	        0x4983c302	                              add r11, 2	      3251	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1
0x4002c9f	        0x4883c502	                              add rbp, 2	      3251	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1
0x4002ca3	        0x4883c602	                              add rsi, 2	      3251	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1
0x4002ca7	          0x4939f7	                            cmp r15, rsi	      3251	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1
0x4002caa	     0xf832fffffff	                           jae 0x4002bdf	      3251	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1
0x4002cb0	            0xeb03	                           jmp 0x4002cb5	      3251	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1
0x4002cb2	          0x4889fe	                            mov rsi, rdi	      3246	decNumber.c	FUNCTION_68	FUNCTION_49
0x4002cb5	          0x4829fe	                            sub rsi, rdi	      3276	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_12
0x4002cb8	          0x48d1fe	                              sar rsi, 1	      3276	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_12
0x4002cbb	      0xe827e0ffff	                   call sym.decGetDigits	      3276	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_12
0x4002cc0	            0x8903	                    mov dword [rbx], eax	      3276	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_12
0x4002cc2	    0xc74304000000	                  mov dword [rbx + 4], 0	      3277	decNumber.c	FUNCTION_68	FUNCTION_49
0x4002cc9	        0xc6430800	                   mov byte [rbx + 8], 0	      3278	decNumber.c	FUNCTION_68	FUNCTION_49
0x4002ccd	            0xeb18	                           jmp 0x4002ce7	      3279	decNumber.c	FUNCTION_68	FUNCTION_49
0x4002ccf	      0x66c7060000	                       mov word [rsi], 0	      3257	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2
0x4002cd4	            0xebc5	                           jmp 0x4002c9b	      3257	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2
0x4002cd6	    0x41b900000000	                              mov r9d, 0	      3253	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	IF_3
0x4002cdc	          0x4939ed	                            cmp r13, rbp	      3255	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	IF_4
0x4002cdf	     0xf8311ffffff	                           jae 0x4002bf6	      3255	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	IF_4
0x4002ce5	            0xebe8	                           jmp 0x4002ccf	      3255	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	IF_4
0x4002ce7	          0x4889d8	                            mov rax, rbx	      3280	decNumber.c	FUNCTION_68	FUNCTION_49
0x4002cea	        0x4883c418	                           add rsp, 0x18	      3280	decNumber.c	FUNCTION_68	FUNCTION_49
0x4002cee	              0x5b	                                 pop rbx	      3280	decNumber.c	FUNCTION_68	FUNCTION_49
0x4002cef	              0x5d	                                 pop rbp	      3280	decNumber.c	FUNCTION_68	FUNCTION_49
0x4002cf0	            0x415c	                                 pop r12	      3280	decNumber.c	FUNCTION_68	FUNCTION_49
0x4002cf2	            0x415d	                                 pop r13	      3280	decNumber.c	FUNCTION_68	FUNCTION_49
0x4002cf4	            0x415e	                                 pop r14	      3280	decNumber.c	FUNCTION_68	FUNCTION_49
0x4002cf6	            0x415f	                                 pop r15	      3280	decNumber.c	FUNCTION_68	FUNCTION_49
0x4002cf8	              0xc3	                                     ret	      3280	decNumber.c	FUNCTION_68	FUNCTION_49
decNumberQuantize	SWITCH,0:functions,0:ELSE,0:DO,0:FOR,0:IF,1:CALL,2:WHILE,0	27
0x4003fc1	              0x55	                                push rbp	      2288	decNumber.c	FUNCTION_68	FUNCTION_35
0x4003fc2	              0x53	                                push rbx	      2288	decNumber.c	FUNCTION_68	FUNCTION_35
0x4003fc3	        0x4883ec18	                           sub rsp, 0x18	      2288	decNumber.c	FUNCTION_68	FUNCTION_35
0x4003fc7	          0x4889fb	                            mov rbx, rdi	      2288	decNumber.c	FUNCTION_68	FUNCTION_35
0x4003fca	          0x4889cd	                            mov rbp, rcx	      2288	decNumber.c	FUNCTION_68	FUNCTION_35
0x4003fcd	    0x64488b042528	                mov rax, qword fs:[0x28]	      2288	decNumber.c	FUNCTION_68	FUNCTION_35
0x4003fd6	      0x4889442408	                mov qword [rsp + 8], rax	      2288	decNumber.c	FUNCTION_68	FUNCTION_35
0x4003fdb	            0x31c0	                            xor eax, eax	      2288	decNumber.c	FUNCTION_68	FUNCTION_35
0x4003fdd	    0xc74424040000	                  mov dword [rsp + 4], 0	      2289	decNumber.c	FUNCTION_68	FUNCTION_35
0x4003fe5	      0x4c8d4c2404	                       lea r9, [rsp + 4]	      2290	decNumber.c	FUNCTION_68	FUNCTION_35	CALL_1
0x4003fea	    0x41b801000000	                              mov r8d, 1	      2290	decNumber.c	FUNCTION_68	FUNCTION_35	CALL_1
0x4003ff0	      0xe88efdffff	                  call sym.decQuantizeOp	      2290	decNumber.c	FUNCTION_68	FUNCTION_35	CALL_1
0x4003ff5	        0x8b742404	                mov esi, dword [rsp + 4]	      2291	decNumber.c	FUNCTION_68	FUNCTION_35	CALL_2
0x4003ff9	            0x85f6	                           test esi, esi	      2291	decNumber.c	FUNCTION_68	FUNCTION_35	CALL_2
0x4003ffb	            0x740b	                            je 0x4004008	      2291	decNumber.c	FUNCTION_68	FUNCTION_35	CALL_2
0x4003ffd	          0x4889ea	                            mov rdx, rbp	      2291	decNumber.c	FUNCTION_68	FUNCTION_35	CALL_2
0x4004000	          0x4889df	                            mov rdi, rbx	      2291	decNumber.c	FUNCTION_68	FUNCTION_35	CALL_2
0x4004003	      0xe814d6ffff	                      call sym.decStatus	      2291	decNumber.c	FUNCTION_68	FUNCTION_35	CALL_2
0x4004008	          0x4889d8	                            mov rax, rbx	      2293	decNumber.c	FUNCTION_68	FUNCTION_35
0x400400b	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      2293	decNumber.c	FUNCTION_68	FUNCTION_35
0x4004010	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2293	decNumber.c	FUNCTION_68	FUNCTION_35
0x4004019	            0x7405	                            je 0x4004020	      2293	decNumber.c	FUNCTION_68	FUNCTION_35
0x400401b	      0xe800000000	                          call 0x4004020	      2293	decNumber.c	FUNCTION_68	FUNCTION_35
0x4004020	        0x4883c418	                           add rsp, 0x18	      2293	decNumber.c	FUNCTION_68	FUNCTION_35
0x4004024	              0x5b	                                 pop rbx	      2293	decNumber.c	FUNCTION_68	FUNCTION_35
0x4004025	              0x5d	                                 pop rbp	      2293	decNumber.c	FUNCTION_68	FUNCTION_35
0x4004026	              0xc3	                                     ret	      2293	decNumber.c	FUNCTION_68	FUNCTION_35
decQuantizeOp	SWITCH,0:functions,0:ELSE,6:DO,1:FOR,0:IF,21:CALL,15:WHILE,0	156
0x4003d83	            0x4157	                                push r15	      5827	decNumber.c	FUNCTION_1
0x4003d85	            0x4156	                                push r14	      5827	decNumber.c	FUNCTION_1
0x4003d87	            0x4155	                                push r13	      5827	decNumber.c	FUNCTION_1
0x4003d89	            0x4154	                                push r12	      5827	decNumber.c	FUNCTION_1
0x4003d8b	              0x55	                                push rbp	      5827	decNumber.c	FUNCTION_1
0x4003d8c	              0x53	                                push rbx	      5827	decNumber.c	FUNCTION_1
0x4003d8d	        0x4883ec58	                           sub rsp, 0x58	      5827	decNumber.c	FUNCTION_1
0x4003d91	          0x4989fd	                            mov r13, rdi	      5827	decNumber.c	FUNCTION_1
0x4003d94	          0x4989f4	                            mov r12, rsi	      5827	decNumber.c	FUNCTION_1
0x4003d97	          0x4889cb	                            mov rbx, rcx	      5827	decNumber.c	FUNCTION_1
0x4003d9a	          0x4c89cd	                             mov rbp, r9	      5827	decNumber.c	FUNCTION_1
0x4003d9d	    0x64488b042528	                mov rax, qword fs:[0x28]	      5827	decNumber.c	FUNCTION_1
0x4003da6	      0x4889442448	             mov qword [rsp + 0x48], rax	      5827	decNumber.c	FUNCTION_1
0x4003dab	            0x31c0	                            xor eax, eax	      5827	decNumber.c	FUNCTION_1
0x4003dad	          0x448b39	                   mov r15d, dword [rcx]	      5833	decNumber.c	FUNCTION_1
0x4003db0	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      5835	decNumber.c	FUNCTION_1
0x4003db8	         0xfb64608	               movzx eax, byte [rsi + 8]	      5861	decNumber.c	FUNCTION_1	DO_1	IF_7
0x4003dbc	            0x89c1	                            mov ecx, eax	      5861	decNumber.c	FUNCTION_1	DO_1	IF_7
0x4003dbe	        0x8844240c	                mov byte [rsp + 0xc], al	      5861	decNumber.c	FUNCTION_1	DO_1	IF_7
0x4003dc2	         0xfb64208	               movzx eax, byte [rdx + 8]	      5861	decNumber.c	FUNCTION_1	DO_1	IF_7
0x4003dc6	             0x9c1	                             or ecx, eax	      5861	decNumber.c	FUNCTION_1	DO_1	IF_7
0x4003dc8	          0xf6c170	                           test cl, 0x70	      5861	decNumber.c	FUNCTION_1	DO_1	IF_7
0x4003dcb	            0x7433	                            je 0x4003e00	      5861	decNumber.c	FUNCTION_1	DO_1	IF_7
0x4003dcd	          0xf6c130	                           test cl, 0x30	      5863	decNumber.c	FUNCTION_1	DO_1	IF_7	IF_8
0x4003dd0	            0x7410	                            je 0x4003de2	      5863	decNumber.c	FUNCTION_1	DO_1	IF_7	IF_8
0x4003dd2	          0x4d89c8	                              mov r8, r9	      5864	decNumber.c	FUNCTION_1	DO_1	IF_7	CALL_4
0x4003dd5	          0x4889d9	                            mov rcx, rbx	      5864	decNumber.c	FUNCTION_1	DO_1	IF_7	CALL_4
0x4003dd8	      0xe80ff0ffff	                        call sym.decNaNs	      5864	decNumber.c	FUNCTION_1	DO_1	IF_7	CALL_4
0x4003ddd	      0xe9b8010000	                           jmp 0x4003f9a	      5864	decNumber.c	FUNCTION_1	DO_1	IF_7	CALL_4
0x4003de2	        0x3244240c	                xor al, byte [rsp + 0xc]	      5866	decNumber.c	FUNCTION_1	DO_1	IF_7	ELSE_1	IF_9
0x4003de6	            0xa840	                           test al, 0x40	      5866	decNumber.c	FUNCTION_1	DO_1	IF_7	ELSE_1	IF_9
0x4003de8	            0x740c	                            je 0x4003df6	      5866	decNumber.c	FUNCTION_1	DO_1	IF_7	ELSE_1	IF_9
0x4003dea	    0x418109800000	                     or dword [r9], 0x80	      5867	decNumber.c	FUNCTION_1	DO_1	IF_7	ELSE_1	IF_9
0x4003df1	      0xe9a4010000	                           jmp 0x4003f9a	      5867	decNumber.c	FUNCTION_1	DO_1	IF_7	ELSE_1	IF_9
0x4003df6	      0xe800000000	                          call 0x4003dfb	      5869	decNumber.c	FUNCTION_1	DO_1	IF_7	CALL_5
0x4003dfb	      0xe99a010000	                           jmp 0x4003f9a	      5869	decNumber.c	FUNCTION_1	DO_1	IF_7	CALL_5
0x4003e00	          0x4584c0	                           test r8b, r8b	      5874	decNumber.c	FUNCTION_1	DO_1	IF_10
0x4003e03	            0x7406	                            je 0x4003e0b	      5874	decNumber.c	FUNCTION_1	DO_1	IF_10
0x4003e05	        0x448b7204	               mov r14d, dword [rdx + 4]	      5874	decNumber.c	FUNCTION_1	DO_1	IF_10
0x4003e09	            0xeb0b	                           jmp 0x4003e16	      5874	decNumber.c	FUNCTION_1	DO_1	IF_10
0x4003e0b	          0x4889d7	                            mov rdi, rdx	      5879	decNumber.c	FUNCTION_1	DO_1	ELSE_3	CALL_6
0x4003e0e	      0xe899cdffff	                      call sym.decGetInt	      5879	decNumber.c	FUNCTION_1	DO_1	ELSE_3	CALL_6
0x4003e13	          0x4189c6	                           mov r14d, eax	      5879	decNumber.c	FUNCTION_1	DO_1	ELSE_3	CALL_6
0x4003e16	    0x4181fe000000	                    cmp r14d, 0x80000000	      5886	decNumber.c	FUNCTION_1	DO_1	IF_12
0x4003e1d	            0x7420	                            je 0x4003e3f	      5886	decNumber.c	FUNCTION_1	DO_1	IF_12
0x4003e1f	        0x418d47ff	                      lea eax, [r15 - 1]	      5888	decNumber.c	FUNCTION_1	DO_1	IF_12
0x4003e23	          0x8b7b08	                mov edi, dword [rbx + 8]	      5888	decNumber.c	FUNCTION_1	DO_1	IF_12
0x4003e26	            0x29c7	                            sub edi, eax	      5888	decNumber.c	FUNCTION_1	DO_1	IF_12
0x4003e28	          0x4139fe	                           cmp r14d, edi	      5888	decNumber.c	FUNCTION_1	DO_1	IF_12
0x4003e2b	            0x7c12	                            jl 0x4003e3f	      5888	decNumber.c	FUNCTION_1	DO_1	IF_12
0x4003e2d	    0x418d86feffff	             lea eax, [r14 + 0x7ffffffe]	      5888	decNumber.c	FUNCTION_1	DO_1	IF_12
0x4003e34	          0x83f801	                              cmp eax, 1	      5888	decNumber.c	FUNCTION_1	DO_1	IF_12
0x4003e37	            0x7606	                           jbe 0x4003e3f	      5888	decNumber.c	FUNCTION_1	DO_1	IF_12
0x4003e39	        0x443b7304	               cmp r14d, dword [rbx + 4]	      5889	decNumber.c	FUNCTION_1	DO_1	IF_12
0x4003e3d	            0x7e0c	                           jle 0x4003e4b	      5889	decNumber.c	FUNCTION_1	DO_1	IF_12
0x4003e3f	    0x814d00800000	                    or dword [rbp], 0x80	      5890	decNumber.c	FUNCTION_1	DO_1	IF_12
0x4003e46	      0xe94f010000	                           jmp 0x4003f9a	      5891	decNumber.c	FUNCTION_1	DO_1	IF_12
0x4003e4b	    0x6641837c240a	                 cmp word [r12 + 0xa], 0	      5894	decNumber.c	FUNCTION_1	DO_1	IF_13	CALL_7
0x4003e52	            0x7522	                           jne 0x4003e76	      5894	decNumber.c	FUNCTION_1	DO_1	IF_13	CALL_7
0x4003e54	      0x41833c2401	                      cmp dword [r12], 1	      5894	decNumber.c	FUNCTION_1	DO_1	IF_13	CALL_7
0x4003e59	            0x751b	                           jne 0x4003e76	      5894	decNumber.c	FUNCTION_1	DO_1	IF_13	CALL_7
0x4003e5b	      0xf644240c70	            test byte [rsp + 0xc], 0x70 	      5894	decNumber.c	FUNCTION_1	DO_1	IF_13	CALL_7
0x4003e60	            0x7514	                           jne 0x4003e76	      5894	decNumber.c	FUNCTION_1	DO_1	IF_13	CALL_7
0x4003e62	          0x4c89e6	                            mov rsi, r12	      5895	decNumber.c	FUNCTION_1	DO_1	IF_13	CALL_8
0x4003e65	          0x4c89ef	                            mov rdi, r13	      5895	decNumber.c	FUNCTION_1	DO_1	IF_13	CALL_8
0x4003e68	      0xe800000000	                          call 0x4003e6d	      5895	decNumber.c	FUNCTION_1	DO_1	IF_13	CALL_8
0x4003e6d	        0x45897504	               mov dword [r13 + 4], r14d	      5896	decNumber.c	FUNCTION_1	DO_1	IF_13
0x4003e71	      0xe9f1000000	                           jmp 0x4003f67	      5896	decNumber.c	FUNCTION_1	DO_1	IF_13
0x4003e76	          0x4489f0	                           mov eax, r14d	      5902	decNumber.c	FUNCTION_1	DO_1	ELSE_4
0x4003e79	      0x412b442404	                sub eax, dword [r12 + 4]	      5902	decNumber.c	FUNCTION_1	DO_1	ELSE_4
0x4003e7e	            0x89c7	                            mov edi, eax	      5902	decNumber.c	FUNCTION_1	DO_1	ELSE_4
0x4003e80	        0x8944240c	              mov dword [rsp + 0xc], eax	      5902	decNumber.c	FUNCTION_1	DO_1	ELSE_4
0x4003e84	        0x418b0424	                    mov eax, dword [r12]	      5904	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_15
0x4003e88	            0x29f8	                            sub eax, edi	      5904	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_15
0x4003e8a	          0x4139c7	                           cmp r15d, eax	      5904	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_15
0x4003e8d	            0x7d0c	                           jge 0x4003e9b	      5904	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_15
0x4003e8f	    0x814d00800000	                    or dword [rbp], 0x80	      5905	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_15
0x4003e96	      0xe9ff000000	                           jmp 0x4003f9a	      5906	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_15
0x4003e9b	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      5909	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16
0x4003ea0	     0xf8e90000000	                           jle 0x4003f36	      5909	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16
0x4003ea6	          0x488b13	                    mov rdx, qword [rbx]	      5913	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16
0x4003ea9	      0x4889542420	             mov qword [rsp + 0x20], rdx	      5913	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16
0x4003eae	        0x488b5308	                mov rdx, qword [rbx + 8]	      5913	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16
0x4003eb2	      0x4889542428	             mov qword [rsp + 0x28], rdx	      5913	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16
0x4003eb7	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	      5913	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16
0x4003ebb	      0x4889542430	             mov qword [rsp + 0x30], rdx	      5913	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16
0x4003ec0	          0x8b5318	            mov edx, dword [rbx + 0x18] 	      5913	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16
0x4003ec3	        0x89542438	             mov dword [rsp + 0x38], edx	      5913	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16
0x4003ec7	        0x89442420	             mov dword [rsp + 0x20], eax	      5914	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16
0x4003ecb	          0x4989e8	                             mov r8, rbp	      5916	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	CALL_9
0x4003ece	      0x488d4c241c	                   lea rcx, [rsp + 0x1c]	      5916	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	CALL_9
0x4003ed3	      0x488d542420	                   lea rdx, [rsp + 0x20]	      5916	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	CALL_9
0x4003ed8	          0x4c89e6	                            mov rsi, r12	      5916	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	CALL_9
0x4003edb	          0x4c89ef	                            mov rdi, r13	      5916	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	CALL_9
0x4003ede	      0xe8fecbffff	                     call sym.decCopyFit	      5916	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	CALL_9
0x4003ee3	          0x4889e9	                            mov rcx, rbp	      5917	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	CALL_10
0x4003ee6	        0x8b54241c	            mov edx, dword [rsp + 0x1c] 	      5917	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	CALL_10
0x4003eea	      0x488d742420	                   lea rsi, [rsp + 0x20]	      5917	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	CALL_10
0x4003eef	          0x4c89ef	                            mov rdi, r13	      5917	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	CALL_10
0x4003ef2	      0xe810d8ffff	                  call sym.decApplyRound	      5917	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	CALL_10
0x4003ef7	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      5918	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16
0x4003eff	        0x453b7504	               cmp r14d, dword [r13 + 4]	      5921	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17
0x4003f03	            0x7d62	                           jge 0x4003f67	      5921	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17
0x4003f05	        0x418b7500	                    mov esi, dword [r13]	      5924	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17	IF_18
0x4003f09	          0x4139f7	                           cmp r15d, esi	      5924	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17	IF_18
0x4003f0c	            0x750f	                           jne 0x4003f1d	      5924	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17	IF_18
0x4003f0e	          0x8b4500	                    mov eax, dword [rbp]	      5926	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17	IF_18
0x4003f11	      0x25dff7ffff	                     and eax, 0xfffff7df	      5926	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17	IF_18
0x4003f16	             0xc80	                             or al, 0x80	      5926	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17	IF_18
0x4003f18	          0x894500	                    mov dword [rbp], eax	      5926	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17	IF_18
0x4003f1b	            0xeb7d	                           jmp 0x4003f9a	      5926	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17	IF_18
0x4003f1d	        0x498d7d0a	                    lea rdi, [r13 + 0xa]	      5929	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17	CALL_11
0x4003f21	      0xba01000000	                              mov edx, 1	      5929	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17	CALL_11
0x4003f26	      0xe837c4ffff	                 call sym.decShiftToMost	      5929	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17	CALL_11
0x4003f2b	        0x41894500	                    mov dword [r13], eax	      5929	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17	CALL_11
0x4003f2f	      0x41836d0401	                  sub dword [r13 + 4], 1	      5930	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17
0x4003f34	            0xeb31	                           jmp 0x4003f67	      5930	decNumber.c	FUNCTION_1	DO_1	ELSE_4	IF_16	IF_17
0x4003f36	          0x4c89e6	                            mov rsi, r12	      5940	decNumber.c	FUNCTION_1	DO_1	ELSE_4	ELSE_5	CALL_13
0x4003f39	          0x4c89ef	                            mov rdi, r13	      5940	decNumber.c	FUNCTION_1	DO_1	ELSE_4	ELSE_5	CALL_13
0x4003f3c	      0xe800000000	                          call 0x4003f41	      5940	decNumber.c	FUNCTION_1	DO_1	ELSE_4	ELSE_5	CALL_13
0x4003f41	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      5942	decNumber.c	FUNCTION_1	DO_1	ELSE_4	ELSE_5	IF_20
0x4003f46	            0x791f	                           jns 0x4003f67	      5942	decNumber.c	FUNCTION_1	DO_1	ELSE_4	ELSE_5	IF_20
0x4003f48	      0x448b7c240c	            mov r15d, dword [rsp + 0xc] 	      5943	decNumber.c	FUNCTION_1	DO_1	ELSE_4	ELSE_5	IF_20	CALL_14
0x4003f4d	          0x4489fa	                           mov edx, r15d	      5943	decNumber.c	FUNCTION_1	DO_1	ELSE_4	ELSE_5	IF_20	CALL_14
0x4003f50	            0xf7da	                                 neg edx	      5943	decNumber.c	FUNCTION_1	DO_1	ELSE_4	ELSE_5	IF_20	CALL_14
0x4003f52	        0x498d7d0a	                    lea rdi, [r13 + 0xa]	      5943	decNumber.c	FUNCTION_1	DO_1	ELSE_4	ELSE_5	IF_20	CALL_14
0x4003f56	        0x418b7500	                    mov esi, dword [r13]	      5943	decNumber.c	FUNCTION_1	DO_1	ELSE_4	ELSE_5	IF_20	CALL_14
0x4003f5a	      0xe803c4ffff	                 call sym.decShiftToMost	      5943	decNumber.c	FUNCTION_1	DO_1	ELSE_4	ELSE_5	IF_20	CALL_14
0x4003f5f	        0x41894500	                    mov dword [r13], eax	      5943	decNumber.c	FUNCTION_1	DO_1	ELSE_4	ELSE_5	IF_20	CALL_14
0x4003f63	        0x45017d04	               add dword [r13 + 4], r15d	      5944	decNumber.c	FUNCTION_1	DO_1	ELSE_4	ELSE_5	IF_20
0x4003f67	          0x8b4304	                mov eax, dword [rbx + 4]	      5951	decNumber.c	FUNCTION_1	DO_1	IF_21
0x4003f6a	        0x412b4500	                    sub eax, dword [r13]	      5951	decNumber.c	FUNCTION_1	DO_1	IF_21
0x4003f6e	          0x83c001	                              add eax, 1	      5951	decNumber.c	FUNCTION_1	DO_1	IF_21
0x4003f71	        0x41394504	                cmp dword [r13 + 4], eax	      5951	decNumber.c	FUNCTION_1	DO_1	IF_21
0x4003f75	            0x7e09	                           jle 0x4003f80	      5951	decNumber.c	FUNCTION_1	DO_1	IF_21
0x4003f77	    0x814d00800000	                    or dword [rbp], 0x80	      5952	decNumber.c	FUNCTION_1	DO_1	IF_21
0x4003f7e	            0xeb1a	                           jmp 0x4003f9a	      5953	decNumber.c	FUNCTION_1	DO_1	IF_21
0x4003f80	          0x4889e9	                            mov rcx, rbp	      5956	decNumber.c	FUNCTION_1	DO_1	ELSE_6	CALL_15
0x4003f83	      0x488d54241c	                   lea rdx, [rsp + 0x1c]	      5956	decNumber.c	FUNCTION_1	DO_1	ELSE_6	CALL_15
0x4003f88	          0x4889de	                            mov rsi, rbx	      5956	decNumber.c	FUNCTION_1	DO_1	ELSE_6	CALL_15
0x4003f8b	          0x4c89ef	                            mov rdi, r13	      5956	decNumber.c	FUNCTION_1	DO_1	ELSE_6	CALL_15
0x4003f8e	      0xe86fdbffff	                    call sym.decFinalize	      5956	decNumber.c	FUNCTION_1	DO_1	ELSE_6	CALL_15
0x4003f93	    0x816500ffdfff	             and dword [rbp], 0xffffdfff	      5957	decNumber.c	FUNCTION_1	DO_1	ELSE_6
0x4003f9a	          0x4c89e8	                            mov rax, r13	      5966	decNumber.c	FUNCTION_1
0x4003f9d	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	      5966	decNumber.c	FUNCTION_1
0x4003fa2	    0x644833342528	                xor rsi, qword fs:[0x28]	      5966	decNumber.c	FUNCTION_1
0x4003fab	            0x7405	                            je 0x4003fb2	      5966	decNumber.c	FUNCTION_1
0x4003fad	      0xe800000000	                          call 0x4003fb2	      5966	decNumber.c	FUNCTION_1
0x4003fb2	        0x4883c458	                           add rsp, 0x58	      5966	decNumber.c	FUNCTION_1
0x4003fb6	              0x5b	                                 pop rbx	      5966	decNumber.c	FUNCTION_1
0x4003fb7	              0x5d	                                 pop rbp	      5966	decNumber.c	FUNCTION_1
0x4003fb8	            0x415c	                                 pop r12	      5966	decNumber.c	FUNCTION_1
0x4003fba	            0x415d	                                 pop r13	      5966	decNumber.c	FUNCTION_1
0x4003fbc	            0x415e	                                 pop r14	      5966	decNumber.c	FUNCTION_1
0x4003fbe	            0x415f	                                 pop r15	      5966	decNumber.c	FUNCTION_1
0x4003fc0	              0xc3	                                     ret	      5966	decNumber.c	FUNCTION_1
