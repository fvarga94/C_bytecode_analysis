elf_separate_stab_sections	DO,0:FOR,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:IF,0:CALL,0	2
0x4000055	      0xb801000000	                              mov eax, 1	      2681	obj-elf.c	FUNCTION_66
0x400005a	              0xc3	                                     ret	      2681	obj-elf.c	FUNCTION_66
obj_elf_popsection	DO,0:FOR,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:IF,1:CALL,6	25
0x4000dc5	              0x53	                                push rbx	      1346	obj-elf.c	FUNCTION_32
0x4000dc6	    0x488b1d000000	            mov rbx, qword [0x04000dcd] 	      1347	obj-elf.c	FUNCTION_32
0x4000dcd	          0x4885db	                           test rbx, rbx	      1349	obj-elf.c	FUNCTION_32	IF_1
0x4000dd0	            0x7523	                           jne 0x4000df5	      1349	obj-elf.c	FUNCTION_32	IF_1
0x4000dd2	      0xba05000000	                              mov edx, 5	      1351	obj-elf.c	FUNCTION_32	IF_1	CALL_2
0x4000dd7	      0xbe00000000	                              mov esi, 0	      1351	obj-elf.c	FUNCTION_32	IF_1	CALL_2
0x4000ddc	      0xbf00000000	                              mov edi, 0	      1351	obj-elf.c	FUNCTION_32	IF_1	CALL_2
0x4000de1	      0xe800000000	                          call 0x4000de6	      1351	obj-elf.c	FUNCTION_32	IF_1	CALL_2
0x4000de6	          0x4889c7	                            mov rdi, rax	      1351	obj-elf.c	FUNCTION_32	IF_1	CALL_2
0x4000de9	      0xb800000000	                              mov eax, 0	      1351	obj-elf.c	FUNCTION_32	IF_1	CALL_2
0x4000dee	      0xe800000000	                          call 0x4000df3	      1351	obj-elf.c	FUNCTION_32	IF_1	CALL_2
0x4000df3	            0xeb32	                           jmp 0x4000e27	      1352	obj-elf.c	FUNCTION_32	IF_1
0x4000df5	          0x488b03	                    mov rax, qword [rbx]	      1359	obj-elf.c	FUNCTION_32
0x4000df8	    0x488905000000	            mov qword [0x04000dff], rax 	      1359	obj-elf.c	FUNCTION_32
0x4000dff	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1360	obj-elf.c	FUNCTION_32
0x4000e03	    0x488905000000	            mov qword [0x04000e0a], rax 	      1360	obj-elf.c	FUNCTION_32
0x4000e0a	          0x8b431c	            mov eax, dword [rbx + 0x1c] 	      1361	obj-elf.c	FUNCTION_32
0x4000e0d	    0x890500000000	            mov dword [0x04000e13], eax 	      1361	obj-elf.c	FUNCTION_32
0x4000e13	          0x8b7318	            mov esi, dword [rbx + 0x18] 	      1362	obj-elf.c	FUNCTION_32	CALL_4
0x4000e16	        0x488b7b08	                mov rdi, qword [rbx + 8]	      1362	obj-elf.c	FUNCTION_32	CALL_4
0x4000e1a	      0xe800000000	                          call 0x4000e1f	      1362	obj-elf.c	FUNCTION_32	CALL_4
0x4000e1f	          0x4889df	                            mov rdi, rbx	      1363	obj-elf.c	FUNCTION_32	CALL_5
0x4000e22	      0xe800000000	                          call 0x4000e27	      1363	obj-elf.c	FUNCTION_32	CALL_5
0x4000e27	              0x5b	                                 pop rbx	      1368	obj-elf.c	FUNCTION_32
0x4000e28	              0xc3	                                     ret	      1368	obj-elf.c	FUNCTION_32
obj_elf_weak	DO,1:FOR,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:IF,2:CALL,4	21
0x40005e0	              0x53	                                push rbx	       450	obj-elf.c	FUNCTION_17
0x40005e1	      0xe88bfcffff	call sym.get_sym_from_input_line_and_check	       456	obj-elf.c	FUNCTION_17	DO_1	CALL_1
0x40005e6	    0x488b15000000	            mov rdx, qword [0x040005ed] 	       457	obj-elf.c	FUNCTION_17	DO_1
0x40005ed	           0xfb61a	                   movzx ebx, byte [rdx]	       457	obj-elf.c	FUNCTION_17	DO_1
0x40005f0	          0x4889c7	                            mov rdi, rax	       458	obj-elf.c	FUNCTION_17	DO_1	CALL_2
0x40005f3	      0xe800000000	                          call 0x40005f8	       458	obj-elf.c	FUNCTION_17	DO_1	CALL_2
0x40005f8	          0x80fb2c	                            cmp bl, 0x2c	       459	obj-elf.c	FUNCTION_17	DO_1	IF_1
0x40005fb	            0x752f	                           jne 0x400062c	       459	obj-elf.c	FUNCTION_17	DO_1	IF_1
0x40005fd	    0x488b05000000	            mov rax, qword [0x04000604] 	       461	obj-elf.c	FUNCTION_17	DO_1	IF_1
0x4000604	        0x488d5001	                      lea rdx, [rax + 1]	       461	obj-elf.c	FUNCTION_17	DO_1	IF_1
0x4000608	    0x488915000000	            mov qword [0x0400060f], rdx 	       461	obj-elf.c	FUNCTION_17	DO_1	IF_1
0x400060f	        0x80780120	                cmp byte [rax + 1], 0x20	       462	obj-elf.c	FUNCTION_17	DO_1	IF_1	CALL_3
0x4000613	            0x750b	                           jne 0x4000620	       462	obj-elf.c	FUNCTION_17	DO_1	IF_1	CALL_3
0x4000615	        0x4883c002	                              add rax, 2	       462	obj-elf.c	FUNCTION_17	DO_1	IF_1	CALL_3
0x4000619	    0x488905000000	            mov qword [0x04000620], rax 	       462	obj-elf.c	FUNCTION_17	DO_1	IF_1	CALL_3
0x4000620	    0x488b05000000	            mov rax, qword [0x04000627] 	       463	obj-elf.c	FUNCTION_17	DO_1	IF_1	IF_2
0x4000627	          0x80380a	                     cmp byte [rax], 0xa	       463	obj-elf.c	FUNCTION_17	DO_1	IF_1	IF_2
0x400062a	            0x75b5	                           jne 0x40005e1	       463	obj-elf.c	FUNCTION_17	DO_1	IF_1	IF_2
0x400062c	      0xe800000000	                          call 0x4000631	       468	obj-elf.c	FUNCTION_17	CALL_4
0x4000631	              0x5b	                                 pop rbx	       469	obj-elf.c	FUNCTION_17
0x4000632	              0xc3	                                     ret	       469	obj-elf.c	FUNCTION_17
elf_frob_file_after_relocs	DO,0:FOR,2:SWITCH,0:functions,0:ELSE,0:WHILE,0:IF,4:CALL,29	54
0x4001e89	            0x4154	                                push r12	      2554	obj-elf.c	FUNCTION_63
0x4001e8b	              0x55	                                push rbp	      2554	obj-elf.c	FUNCTION_63
0x4001e8c	              0x53	                                push rbx	      2554	obj-elf.c	FUNCTION_63
0x4001e8d	    0x833d00000000	               cmp dword [0x04001e94], 0	      2558	obj-elf.c	FUNCTION_63	FOR_1
0x4001e94	     0xf84b6000000	                            je 0x4001f50	      2558	obj-elf.c	FUNCTION_63	FOR_1
0x4001e9a	      0xbd00000000	                              mov ebp, 0	      2558	obj-elf.c	FUNCTION_63	FOR_1
0x4001e9f	            0x89e8	                            mov eax, ebp	      2563	obj-elf.c	FUNCTION_63	FOR_1
0x4001ea1	    0x488b15000000	            mov rdx, qword [0x04001ea8] 	      2563	obj-elf.c	FUNCTION_63	FOR_1
0x4001ea8	        0x488b0cc2	            mov rcx, qword [rdx + rax*8]	      2563	obj-elf.c	FUNCTION_63	FOR_1
0x4001eac	          0x4885c9	                           test rcx, rcx	      2565	obj-elf.c	FUNCTION_63	FOR_1	FOR_2	CALL_1
0x4001eaf	            0x7432	                            je 0x4001ee3	      2565	obj-elf.c	FUNCTION_63	FOR_1	FOR_2	CALL_1
0x4001eb1	          0x4889ca	                            mov rdx, rcx	      2565	obj-elf.c	FUNCTION_63	FOR_1	FOR_2	CALL_1
0x4001eb4	      0xbb04000000	                              mov ebx, 4	      2565	obj-elf.c	FUNCTION_63	FOR_1	FOR_2	CALL_1
0x4001eb9	          0x8b4220	            mov eax, dword [rdx + 0x20] 	      2566	obj-elf.c	FUNCTION_63	FOR_1	FOR_2
0x4001ebc	          0x83e004	                              and eax, 4	      2566	obj-elf.c	FUNCTION_63	FOR_1	FOR_2
0x4001ebf	          0x83f801	                              cmp eax, 1	      2566	obj-elf.c	FUNCTION_63	FOR_1	FOR_2
0x4001ec2	          0x4819c0	                            sbb rax, rax	      2566	obj-elf.c	FUNCTION_63	FOR_1	FOR_2
0x4001ec5	        0x4883e0fc	             and rax, 0xfffffffffffffffc	      2566	obj-elf.c	FUNCTION_63	FOR_1	FOR_2
0x4001ec9	      0x488d5c1808	                lea rbx, [rax + rbx + 8]	      2566	obj-elf.c	FUNCTION_63	FOR_1	FOR_2
0x4001ece	    0x488b82e00000	            mov rax, qword [rdx + 0xe0] 	      2565	obj-elf.c	FUNCTION_63	FOR_1	FOR_2	CALL_1
0x4001ed5	    0x488b90c00000	            mov rdx, qword [rax + 0xc0] 	      2565	obj-elf.c	FUNCTION_63	FOR_1	FOR_2	CALL_1
0x4001edc	          0x4885d2	                           test rdx, rdx	      2565	obj-elf.c	FUNCTION_63	FOR_1	FOR_2	CALL_1
0x4001edf	            0x75d8	                           jne 0x4001eb9	      2565	obj-elf.c	FUNCTION_63	FOR_1	FOR_2	CALL_1
0x4001ee1	            0xeb05	                           jmp 0x4001ee8	      2565	obj-elf.c	FUNCTION_63	FOR_1	FOR_2	CALL_1
0x4001ee3	      0xbb04000000	                              mov ebx, 4	      2564	obj-elf.c	FUNCTION_63	FOR_1
0x4001ee8	    0x488b81e00000	            mov rax, qword [rcx + 0xe0] 	      2568	obj-elf.c	FUNCTION_63	FOR_1	CALL_2
0x4001eef	    0x4c8ba0b80000	            mov r12, qword [rax + 0xb8] 	      2568	obj-elf.c	FUNCTION_63	FOR_1	CALL_2
0x4001ef6	      0xbe00000000	                              mov esi, 0	      2569	obj-elf.c	FUNCTION_63	FOR_1	CALL_3
0x4001efb	          0x4c89e7	                            mov rdi, r12	      2569	obj-elf.c	FUNCTION_63	FOR_1	CALL_3
0x4001efe	      0xe800000000	                          call 0x4001f03	      2569	obj-elf.c	FUNCTION_63	FOR_1	CALL_3
0x4001f03	          0x4889da	                            mov rdx, rbx	      2570	obj-elf.c	FUNCTION_63	FOR_1	CALL_4
0x4001f06	          0x4c89e6	                            mov rsi, r12	      2570	obj-elf.c	FUNCTION_63	FOR_1	CALL_4
0x4001f09	    0x488b3d000000	            mov rdi, qword [0x04001f10] 	      2570	obj-elf.c	FUNCTION_63	FOR_1	CALL_4
0x4001f10	      0xe800000000	                          call 0x4001f15	      2570	obj-elf.c	FUNCTION_63	FOR_1	CALL_4
0x4001f15	          0x4889df	                            mov rdi, rbx	      2571	obj-elf.c	FUNCTION_63	FOR_1	CALL_5
0x4001f18	      0xe800000000	                          call 0x4001f1d	      2571	obj-elf.c	FUNCTION_63	FOR_1	CALL_5
0x4001f1d	    0x49898424b000	             mov qword [r12 + 0xb0], rax	      2571	obj-elf.c	FUNCTION_63	FOR_1	CALL_5
0x4001f25	    0x488b1d000000	            mov rbx, qword [0x04001f2c] 	      2572	obj-elf.c	FUNCTION_63	FOR_1	CALL_6
0x4001f2c	      0xe800000000	                          call 0x4001f31	      2572	obj-elf.c	FUNCTION_63	FOR_1	CALL_6
0x4001f31	        0x48894310	             mov qword [rbx + 0x10], rax	      2572	obj-elf.c	FUNCTION_63	FOR_1	CALL_6
0x4001f35	    0x488b3d000000	            mov rdi, qword [0x04001f3c] 	      2573	obj-elf.c	FUNCTION_63	FOR_1	CALL_7
0x4001f3c	      0xe800000000	                          call 0x4001f41	      2573	obj-elf.c	FUNCTION_63	FOR_1	CALL_7
0x4001f41	          0x83c501	                              add ebp, 1	      2558	obj-elf.c	FUNCTION_63	FOR_1
0x4001f44	    0x392d00000000	            cmp dword [0x04001f4a], ebp 	      2558	obj-elf.c	FUNCTION_63	FOR_1
0x4001f4a	     0xf874fffffff	                            ja 0x4001e9f	      2558	obj-elf.c	FUNCTION_63	FOR_1
0x4001f50	      0xbe00000000	                              mov esi, 0	      2577	obj-elf.c	FUNCTION_63	CALL_8
0x4001f55	    0x488b3d000000	            mov rdi, qword [0x04001f5c] 	      2577	obj-elf.c	FUNCTION_63	CALL_8
0x4001f5c	      0xe800000000	                          call 0x4001f61	      2577	obj-elf.c	FUNCTION_63	CALL_8
0x4001f61	    0x488b3d000000	            mov rdi, qword [0x04001f68] 	      2578	obj-elf.c	FUNCTION_63	CALL_9
0x4001f68	      0xe800000000	                          call 0x4001f6d	      2578	obj-elf.c	FUNCTION_63	CALL_9
0x4001f6d	              0x5b	                                 pop rbx	      2648	obj-elf.c	FUNCTION_63
0x4001f6e	              0x5d	                                 pop rbp	      2648	obj-elf.c	FUNCTION_63
0x4001f6f	            0x415c	                                 pop r12	      2648	obj-elf.c	FUNCTION_63
0x4001f71	              0xc3	                                     ret	      2648	obj-elf.c	FUNCTION_63
elf_s_get_size	DO,0:FOR,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:IF,0:CALL,1	5
0x400018c	        0x4883ec08	                              sub rsp, 8	       221	obj-elf.c	FUNCTION_3
0x4000190	      0xe800000000	                          call 0x4000195	       222	obj-elf.c	FUNCTION_3	CALL_1
0x4000195	        0x488b4038	            mov rax, qword [rax + 0x38] 	       222	obj-elf.c	FUNCTION_3	CALL_1
0x4000199	        0x4883c408	                              add rsp, 8	       223	obj-elf.c	FUNCTION_3
0x400019d	              0xc3	                                     ret	       223	obj-elf.c	FUNCTION_3
elf_s_get_other	DO,0:FOR,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:IF,0:CALL,2	5
0x400013d	        0x4883ec08	                              sub rsp, 8	       245	obj-elf.c	FUNCTION_7
0x4000141	      0xe800000000	                          call 0x4000146	       246	obj-elf.c	FUNCTION_7	CALL_2
0x4000146	         0xfb64049	           movzx eax, byte [rax + 0x49] 	       246	obj-elf.c	FUNCTION_7	CALL_2
0x400014a	        0x4883c408	                              add rsp, 8	       247	obj-elf.c	FUNCTION_7
0x400014e	              0xc3	                                     ret	       247	obj-elf.c	FUNCTION_7
obj_elf_vendor_attribute	DO,0:FOR,1:SWITCH,1:functions,0:ELSE,1:WHILE,0:IF,10:CALL,29	219
0x40033e9	            0x4157	                                push r15	      1648	obj-elf.c	FUNCTION_42
0x40033eb	            0x4156	                                push r14	      1648	obj-elf.c	FUNCTION_42
0x40033ed	            0x4155	                                push r13	      1648	obj-elf.c	FUNCTION_42
0x40033ef	            0x4154	                                push r12	      1648	obj-elf.c	FUNCTION_42
0x40033f1	              0x55	                                push rbp	      1648	obj-elf.c	FUNCTION_42
0x40033f2	              0x53	                                push rbx	      1648	obj-elf.c	FUNCTION_42
0x40033f3	        0x4883ec58	                           sub rsp, 0x58	      1648	obj-elf.c	FUNCTION_42
0x40033f7	          0x4189fc	                           mov r12d, edi	      1648	obj-elf.c	FUNCTION_42
0x40033fa	    0x64488b042528	                mov rax, qword fs:[0x28]	      1648	obj-elf.c	FUNCTION_42
0x4003403	      0x4889442448	             mov qword [rsp + 0x48], rax	      1648	obj-elf.c	FUNCTION_42
0x4003408	            0x31c0	                            xor eax, eax	      1648	obj-elf.c	FUNCTION_42
0x400340a	    0x488b05000000	            mov rax, qword [0x04003411] 	      1656	obj-elf.c	FUNCTION_42
0x4003411	          0x803820	                    cmp byte [rax], 0x20	      1656	obj-elf.c	FUNCTION_42
0x4003414	            0x750b	                           jne 0x4003421	      1656	obj-elf.c	FUNCTION_42
0x4003416	        0x4883c001	                              add rax, 1	      1656	obj-elf.c	FUNCTION_42
0x400341a	    0x488905000000	            mov qword [0x04003421], rax 	      1656	obj-elf.c	FUNCTION_42
0x4003421	    0x488b1d000000	            mov rbx, qword [0x04003428] 	      1657	obj-elf.c	FUNCTION_42
0x4003428	           0xfb613	                   movzx edx, byte [rbx]	      1658	obj-elf.c	FUNCTION_42	IF_1	CALL_1
0x400342b	           0xfb6c2	                           movzx eax, dl	      1658	obj-elf.c	FUNCTION_42	IF_1	CALL_1
0x400342e	     0xfb784000000	             movzx eax, word [rax + rax]	      1658	obj-elf.c	FUNCTION_42	IF_1	CALL_1
0x4003436	            0xa804	                              test al, 4	      1658	obj-elf.c	FUNCTION_42	IF_1	CALL_1
0x4003438	            0x750e	                           jne 0x4003448	      1658	obj-elf.c	FUNCTION_42	IF_1	CALL_1
0x400343a	            0xa88c	                           test al, 0x8c	      1670	obj-elf.c	FUNCTION_42	ELSE_1	FOR_1	CALL_3
0x400343c	            0x7554	                           jne 0x4003492	      1670	obj-elf.c	FUNCTION_42	ELSE_1	FOR_1	CALL_3
0x400343e	          0x80fa5f	                            cmp dl, 0x5f	      1670	obj-elf.c	FUNCTION_42	ELSE_1	FOR_1	CALL_3
0x4003441	            0x744f	                            je 0x4003492	      1670	obj-elf.c	FUNCTION_42	ELSE_1	FOR_1	CALL_3
0x4003443	      0xe999020000	                           jmp 0x40036e1	      1670	obj-elf.c	FUNCTION_42	ELSE_1	FOR_1	CALL_3
0x4003448	      0xba01000000	                              mov edx, 1	      1660	obj-elf.c	FUNCTION_42	IF_1	CALL_2
0x400344d	      0x488d742420	                   lea rsi, [rsp + 0x20]	      1660	obj-elf.c	FUNCTION_42	IF_1	CALL_2
0x4003452	      0xbf00000000	                              mov edi, 0	      1660	obj-elf.c	FUNCTION_42	IF_1	CALL_2
0x4003457	      0xe800000000	                          call 0x400345c	      1660	obj-elf.c	FUNCTION_42	IF_1	CALL_2
0x400345c	      0x807c243802	                cmp byte [rsp + 0x38], 2	      1661	obj-elf.c	FUNCTION_42	IF_1	IF_2
0x4003461	     0xf857a020000	                           jne 0x40036e1	      1661	obj-elf.c	FUNCTION_42	IF_1	IF_2
0x4003467	      0x488b6c2430	            mov rbp, qword [rsp + 0x30] 	      1663	obj-elf.c	FUNCTION_42	IF_1
0x400346c	            0x89ea	                            mov edx, ebp	      1693	obj-elf.c	FUNCTION_42	CALL_10
0x400346e	          0x4489e6	                           mov esi, r12d	      1693	obj-elf.c	FUNCTION_42	CALL_10
0x4003471	    0x488b3d000000	            mov rdi, qword [0x04003478] 	      1693	obj-elf.c	FUNCTION_42	CALL_10
0x4003478	      0xe800000000	                          call 0x400347d	      1693	obj-elf.c	FUNCTION_42	CALL_10
0x400347d	          0x4189c5	                           mov r13d, eax	      1693	obj-elf.c	FUNCTION_42	CALL_10
0x4003480	    0x488b05000000	            mov rax, qword [0x04003487] 	      1577	obj-elf.c	FUNCTION_39	IF_1
0x4003487	          0x80382c	                    cmp byte [rax], 0x2c	      1577	obj-elf.c	FUNCTION_39	IF_1
0x400348a	     0xf8551020000	                           jne 0x40036e1	      1577	obj-elf.c	FUNCTION_39	IF_1
0x4003490	            0xeb7c	                           jmp 0x400350e	      1577	obj-elf.c	FUNCTION_39	IF_1
0x4003492	        0x488d4301	                      lea rax, [rbx + 1]	      1577	obj-elf.c	FUNCTION_39	IF_1
0x4003496	      0xb900000000	                              mov ecx, 0	      1670	obj-elf.c	FUNCTION_42	ELSE_1	FOR_1	CALL_3
0x400349b	          0x83c101	                              add ecx, 1	      1672	obj-elf.c	FUNCTION_42	ELSE_1	FOR_1
0x400349e	    0x488905000000	            mov qword [0x040034a5], rax 	      1671	obj-elf.c	FUNCTION_42	ELSE_1	FOR_1
0x40034a5	           0xfb610	                   movzx edx, byte [rax]	      1670	obj-elf.c	FUNCTION_42	ELSE_1	FOR_1	CALL_3
0x40034a8	        0x4883c001	                              add rax, 1	      1670	obj-elf.c	FUNCTION_42	ELSE_1	FOR_1	CALL_3
0x40034ac	           0xfb6f2	                           movzx esi, dl	      1670	obj-elf.c	FUNCTION_42	ELSE_1	FOR_1	CALL_3
0x40034af	    0xf68436000000	            test byte [rsi + rsi], 0x8c 	      1670	obj-elf.c	FUNCTION_42	ELSE_1	FOR_1	CALL_3
0x40034b7	            0x75e2	                           jne 0x400349b	      1670	obj-elf.c	FUNCTION_42	ELSE_1	FOR_1	CALL_3
0x40034b9	          0x80fa5f	                            cmp dl, 0x5f	      1670	obj-elf.c	FUNCTION_42	ELSE_1	FOR_1	CALL_3
0x40034bc	            0x74dd	                            je 0x400349b	      1670	obj-elf.c	FUNCTION_42	ELSE_1	FOR_1	CALL_3
0x40034be	            0x85c9	                           test ecx, ecx	      1673	obj-elf.c	FUNCTION_42	ELSE_1	IF_3
0x40034c0	     0xf841b020000	                            je 0x40036e1	      1673	obj-elf.c	FUNCTION_42	ELSE_1	IF_3
0x40034c6	            0x89ce	                            mov esi, ecx	      1676	obj-elf.c	FUNCTION_42	ELSE_1	CALL_4
0x40034c8	          0x4889df	                            mov rdi, rbx	      1676	obj-elf.c	FUNCTION_42	ELSE_1	CALL_4
0x40034cb	      0xe800000000	                          call 0x40034d0	      1676	obj-elf.c	FUNCTION_42	ELSE_1	CALL_4
0x40034d0	          0x4889c3	                            mov rbx, rax	      1676	obj-elf.c	FUNCTION_42	ELSE_1	CALL_4
0x40034d3	      0xba05000000	                              mov edx, 5	      1685	obj-elf.c	FUNCTION_42	ELSE_1	IF_4	CALL_6
0x40034d8	      0xbe00000000	                              mov esi, 0	      1685	obj-elf.c	FUNCTION_42	ELSE_1	IF_4	CALL_6
0x40034dd	      0xbf00000000	                              mov edi, 0	      1685	obj-elf.c	FUNCTION_42	ELSE_1	IF_4	CALL_6
0x40034e2	      0xe800000000	                          call 0x40034e7	      1685	obj-elf.c	FUNCTION_42	ELSE_1	IF_4	CALL_6
0x40034e7	          0x4889de	                            mov rsi, rbx	      1685	obj-elf.c	FUNCTION_42	ELSE_1	IF_4	CALL_6
0x40034ea	          0x4889c7	                            mov rdi, rax	      1685	obj-elf.c	FUNCTION_42	ELSE_1	IF_4	CALL_6
0x40034ed	      0xb800000000	                              mov eax, 0	      1685	obj-elf.c	FUNCTION_42	ELSE_1	IF_4	CALL_6
0x40034f2	      0xe800000000	                          call 0x40034f7	      1685	obj-elf.c	FUNCTION_42	ELSE_1	IF_4	CALL_6
0x40034f7	      0xe800000000	                          call 0x40034fc	      1686	obj-elf.c	FUNCTION_42	ELSE_1	IF_4	CALL_7
0x40034fc	          0x4889df	                            mov rdi, rbx	      1687	obj-elf.c	FUNCTION_42	ELSE_1	IF_4	CALL_8
0x40034ff	      0xe800000000	                          call 0x4003504	      1687	obj-elf.c	FUNCTION_42	ELSE_1	IF_4	CALL_8
0x4003504	      0xb800000000	                              mov eax, 0	      1688	obj-elf.c	FUNCTION_42	ELSE_1	IF_4
0x4003509	      0xe9fe010000	                           jmp 0x400370c	      1688	obj-elf.c	FUNCTION_42	ELSE_1	IF_4
0x400350e	        0x4883c001	                              add rax, 1	      1579	obj-elf.c	FUNCTION_39	IF_1
0x4003512	    0x488905000000	            mov qword [0x04003519], rax 	      1579	obj-elf.c	FUNCTION_39	IF_1
0x4003519	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      1579	obj-elf.c	FUNCTION_39	IF_1
0x4003521	        0x41f6c501	                            test r13b, 1	      1697	obj-elf.c	FUNCTION_42	IF_6
0x4003525	            0x7453	                            je 0x400357a	      1697	obj-elf.c	FUNCTION_42	IF_6
0x4003527	      0xba01000000	                              mov edx, 1	      1699	obj-elf.c	FUNCTION_42	IF_6	CALL_11
0x400352c	      0x488d742420	                   lea rsi, [rsp + 0x20]	      1699	obj-elf.c	FUNCTION_42	IF_6	CALL_11
0x4003531	      0xbf00000000	                              mov edi, 0	      1699	obj-elf.c	FUNCTION_42	IF_6	CALL_11
0x4003536	      0xe800000000	                          call 0x400353b	      1699	obj-elf.c	FUNCTION_42	IF_6	CALL_11
0x400353b	      0x807c243802	                cmp byte [rsp + 0x38], 2	      1700	obj-elf.c	FUNCTION_42	IF_6	IF_7
0x4003540	            0x7430	                            je 0x4003572	      1700	obj-elf.c	FUNCTION_42	IF_6	IF_7
0x4003542	      0xba05000000	                              mov edx, 5	      1702	obj-elf.c	FUNCTION_42	IF_6	IF_7	CALL_13
0x4003547	      0xbe00000000	                              mov esi, 0	      1702	obj-elf.c	FUNCTION_42	IF_6	IF_7	CALL_13
0x400354c	      0xbf00000000	                              mov edi, 0	      1702	obj-elf.c	FUNCTION_42	IF_6	IF_7	CALL_13
0x4003551	      0xe800000000	                          call 0x4003556	      1702	obj-elf.c	FUNCTION_42	IF_6	IF_7	CALL_13
0x4003556	          0x4889c7	                            mov rdi, rax	      1702	obj-elf.c	FUNCTION_42	IF_6	IF_7	CALL_13
0x4003559	      0xb800000000	                              mov eax, 0	      1702	obj-elf.c	FUNCTION_42	IF_6	IF_7	CALL_13
0x400355e	      0xe800000000	                          call 0x4003563	      1702	obj-elf.c	FUNCTION_42	IF_6	IF_7	CALL_13
0x4003563	      0xe800000000	                          call 0x4003568	      1703	obj-elf.c	FUNCTION_42	IF_6	IF_7	CALL_14
0x4003568	      0xb800000000	                              mov eax, 0	      1704	obj-elf.c	FUNCTION_42	IF_6	IF_7
0x400356d	      0xe99a010000	                           jmp 0x400370c	      1704	obj-elf.c	FUNCTION_42	IF_6	IF_7
0x4003572	        0x8b442430	            mov eax, dword [rsp + 0x30] 	      1706	obj-elf.c	FUNCTION_42	IF_6
0x4003576	        0x8944240c	              mov dword [rsp + 0xc], eax	      1706	obj-elf.c	FUNCTION_42	IF_6
0x400357a	          0x4589ee	                          mov r14d, r13d	      1708	obj-elf.c	FUNCTION_42	IF_8
0x400357d	        0x4183e603	                             and r14d, 3	      1708	obj-elf.c	FUNCTION_42	IF_8
0x4003581	        0x4183fe03	                             cmp r14d, 3	      1708	obj-elf.c	FUNCTION_42	IF_8
0x4003585	            0x751b	                           jne 0x40035a2	      1708	obj-elf.c	FUNCTION_42	IF_8
0x4003587	    0x488b05000000	            mov rax, qword [0x0400358e] 	      1577	obj-elf.c	FUNCTION_39	IF_1
0x400358e	          0x80382c	                    cmp byte [rax], 0x2c	      1577	obj-elf.c	FUNCTION_39	IF_1
0x4003591	     0xf8587010000	                           jne 0x400371e	      1577	obj-elf.c	FUNCTION_39	IF_1
0x4003597	        0x4883c001	                              add rax, 1	      1579	obj-elf.c	FUNCTION_39	IF_1
0x400359b	    0x488905000000	            mov qword [0x040035a2], rax 	      1579	obj-elf.c	FUNCTION_39	IF_1
0x40035a2	        0x41f6c502	                            test r13b, 2	      1715	obj-elf.c	FUNCTION_42	IF_9
0x40035a6	            0x7462	                            je 0x400360a	      1715	obj-elf.c	FUNCTION_42	IF_9
0x40035a8	    0x488b05000000	            mov rax, qword [0x040035af] 	      1719	obj-elf.c	FUNCTION_42	IF_9
0x40035af	          0x803820	                    cmp byte [rax], 0x20	      1719	obj-elf.c	FUNCTION_42	IF_9
0x40035b2	            0x750b	                           jne 0x40035bf	      1719	obj-elf.c	FUNCTION_42	IF_9
0x40035b4	        0x4883c001	                              add rax, 1	      1719	obj-elf.c	FUNCTION_42	IF_9
0x40035b8	    0x488905000000	            mov qword [0x040035bf], rax 	      1719	obj-elf.c	FUNCTION_42	IF_9
0x40035bf	    0x488b05000000	            mov rax, qword [0x040035c6] 	      1720	obj-elf.c	FUNCTION_42	IF_9	IF_10
0x40035c6	          0x803822	                    cmp byte [rax], 0x22	      1720	obj-elf.c	FUNCTION_42	IF_9	IF_10
0x40035c9	            0x750f	                           jne 0x40035da	      1720	obj-elf.c	FUNCTION_42	IF_9	IF_10
0x40035cb	      0x488d7c241c	                   lea rdi, [rsp + 0x1c]	      1722	obj-elf.c	FUNCTION_42	IF_9	CALL_18
0x40035d0	      0xe800000000	                          call 0x40035d5	      1722	obj-elf.c	FUNCTION_42	IF_9	CALL_18
0x40035d5	          0x4889c3	                            mov rbx, rax	      1722	obj-elf.c	FUNCTION_42	IF_9	CALL_18
0x40035d8	            0xeb30	                           jmp 0x400360a	      1722	obj-elf.c	FUNCTION_42	IF_9	CALL_18
0x40035da	      0xba05000000	                              mov edx, 5	      1744	obj-elf.c	FUNCTION_42	CALL_25
0x40035df	      0xbe00000000	                              mov esi, 0	      1744	obj-elf.c	FUNCTION_42	CALL_25
0x40035e4	      0xbf00000000	                              mov edi, 0	      1744	obj-elf.c	FUNCTION_42	CALL_25
0x40035e9	      0xe800000000	                          call 0x40035ee	      1744	obj-elf.c	FUNCTION_42	CALL_25
0x40035ee	          0x4889c7	                            mov rdi, rax	      1744	obj-elf.c	FUNCTION_42	CALL_25
0x40035f1	      0xb800000000	                              mov eax, 0	      1744	obj-elf.c	FUNCTION_42	CALL_25
0x40035f6	      0xe800000000	                          call 0x40035fb	      1744	obj-elf.c	FUNCTION_42	CALL_25
0x40035fb	      0xe800000000	                          call 0x4003600	      1745	obj-elf.c	FUNCTION_42	CALL_26
0x4003600	      0xb800000000	                              mov eax, 0	      1746	obj-elf.c	FUNCTION_42
0x4003605	      0xe902010000	                           jmp 0x400370c	      1746	obj-elf.c	FUNCTION_42
0x400360a	          0x4189ed	                           mov r13d, ebp	      1608	obj-elf.c	ELSE_1	FUNCTION_40
0x400360d	        0x41c1ed06	                             shr r13d, 6	      1608	obj-elf.c	ELSE_1	FUNCTION_40
0x4003611	    0x41bf01000000	                             mov r15d, 1	      1609	obj-elf.c	ELSE_1	FUNCTION_40
0x4003617	            0x89e9	                            mov ecx, ebp	      1609	obj-elf.c	ELSE_1	FUNCTION_40
0x4003619	          0x49d3e7	                             shl r15, cl	      1609	obj-elf.c	ELSE_1	FUNCTION_40
0x400361c	    0x488b05000000	            mov rax, qword [0x04003623] 	      1610	obj-elf.c	ELSE_1	FUNCTION_40	FOR_1
0x4003623	          0x4885c0	                           test rax, rax	      1610	obj-elf.c	ELSE_1	FUNCTION_40	FOR_1
0x4003626	            0x741a	                            je 0x4003642	      1610	obj-elf.c	ELSE_1	FUNCTION_40	FOR_1
0x4003628	        0x443b6008	               cmp r12d, dword [rax + 8]	      1611	obj-elf.c	ELSE_1	FUNCTION_40	FOR_1	IF_1
0x400362c	            0x750c	                           jne 0x400363a	      1611	obj-elf.c	ELSE_1	FUNCTION_40	FOR_1	IF_1
0x400362e	        0x443b680c	            cmp r13d, dword [rax + 0xc] 	      1611	obj-elf.c	ELSE_1	FUNCTION_40	FOR_1	IF_1
0x4003632	            0x7506	                           jne 0x400363a	      1611	obj-elf.c	ELSE_1	FUNCTION_40	FOR_1	IF_1
0x4003634	        0x4c097810	              or qword [rax + 0x10], r15	      1613	obj-elf.c	ELSE_1	FUNCTION_40	FOR_1	IF_1
0x4003638	            0xeb2f	                           jmp 0x4003669	      1613	obj-elf.c	ELSE_1	FUNCTION_40	FOR_1	IF_1
0x400363a	          0x488b00	                    mov rax, qword [rax]	      1610	obj-elf.c	ELSE_1	FUNCTION_40	FOR_1
0x400363d	          0x4885c0	                           test rax, rax	      1610	obj-elf.c	ELSE_1	FUNCTION_40	FOR_1
0x4003640	            0x75e6	                           jne 0x4003628	      1610	obj-elf.c	ELSE_1	FUNCTION_40	FOR_1
0x4003642	      0xbf18000000	                           mov edi, 0x18	      1617	obj-elf.c	ELSE_1	FUNCTION_40	CALL_1
0x4003647	      0xe800000000	                          call 0x400364c	      1617	obj-elf.c	ELSE_1	FUNCTION_40	CALL_1
0x400364c	    0x488b15000000	            mov rdx, qword [0x04003653] 	      1618	obj-elf.c	ELSE_1	FUNCTION_40
0x4003653	          0x488910	                    mov qword [rax], rdx	      1618	obj-elf.c	ELSE_1	FUNCTION_40
0x4003656	        0x44896008	               mov dword [rax + 8], r12d	      1619	obj-elf.c	ELSE_1	FUNCTION_40
0x400365a	        0x4489680c	             mov dword [rax + 0xc], r13d	      1620	obj-elf.c	ELSE_1	FUNCTION_40
0x400365e	        0x4c897810	             mov qword [rax + 0x10], r15	      1621	obj-elf.c	ELSE_1	FUNCTION_40
0x4003662	    0x488905000000	            mov qword [0x04003669], rax 	      1622	obj-elf.c	ELSE_1	FUNCTION_40
0x4003669	        0x4183fe02	                             cmp r14d, 2	      1726	obj-elf.c	FUNCTION_42	SWITCH_1
0x400366d	            0x7428	                            je 0x4003697	      1726	obj-elf.c	FUNCTION_42	SWITCH_1
0x400366f	        0x4183fe03	                             cmp r14d, 3	      1726	obj-elf.c	FUNCTION_42	SWITCH_1
0x4003673	            0x7408	                            je 0x400367d	      1726	obj-elf.c	FUNCTION_42	SWITCH_1
0x4003675	        0x4183fe01	                             cmp r14d, 1	      1726	obj-elf.c	FUNCTION_42	SWITCH_1
0x4003679	            0x7549	                           jne 0x40036c4	      1726	obj-elf.c	FUNCTION_42	SWITCH_1
0x400367b	            0xeb30	                           jmp 0x40036ad	      1726	obj-elf.c	FUNCTION_42	SWITCH_1
0x400367d	          0x4989d8	                             mov r8, rbx	      1729	obj-elf.c	FUNCTION_42	SWITCH_1	CALL_20
0x4003680	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      1729	obj-elf.c	FUNCTION_42	SWITCH_1	CALL_20
0x4003684	            0x89ea	                            mov edx, ebp	      1729	obj-elf.c	FUNCTION_42	SWITCH_1	CALL_20
0x4003686	          0x4489e6	                           mov esi, r12d	      1729	obj-elf.c	FUNCTION_42	SWITCH_1	CALL_20
0x4003689	    0x488b3d000000	            mov rdi, qword [0x04003690] 	      1729	obj-elf.c	FUNCTION_42	SWITCH_1	CALL_20
0x4003690	      0xe800000000	                          call 0x4003695	      1729	obj-elf.c	FUNCTION_42	SWITCH_1	CALL_20
0x4003695	            0xeb41	                           jmp 0x40036d8	      1730	obj-elf.c	FUNCTION_42	SWITCH_1
0x4003697	          0x4889d9	                            mov rcx, rbx	      1732	obj-elf.c	FUNCTION_42	SWITCH_1	CALL_21
0x400369a	            0x89ea	                            mov edx, ebp	      1732	obj-elf.c	FUNCTION_42	SWITCH_1	CALL_21
0x400369c	          0x4489e6	                           mov esi, r12d	      1732	obj-elf.c	FUNCTION_42	SWITCH_1	CALL_21
0x400369f	    0x488b3d000000	            mov rdi, qword [0x040036a6] 	      1732	obj-elf.c	FUNCTION_42	SWITCH_1	CALL_21
0x40036a6	      0xe800000000	                          call 0x40036ab	      1732	obj-elf.c	FUNCTION_42	SWITCH_1	CALL_21
0x40036ab	            0xeb2b	                           jmp 0x40036d8	      1733	obj-elf.c	FUNCTION_42	SWITCH_1
0x40036ad	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      1735	obj-elf.c	FUNCTION_42	SWITCH_1	CALL_22
0x40036b1	            0x89ea	                            mov edx, ebp	      1735	obj-elf.c	FUNCTION_42	SWITCH_1	CALL_22
0x40036b3	          0x4489e6	                           mov esi, r12d	      1735	obj-elf.c	FUNCTION_42	SWITCH_1	CALL_22
0x40036b6	    0x488b3d000000	            mov rdi, qword [0x040036bd] 	      1735	obj-elf.c	FUNCTION_42	SWITCH_1	CALL_22
0x40036bd	      0xe800000000	                          call 0x40036c2	      1735	obj-elf.c	FUNCTION_42	SWITCH_1	CALL_22
0x40036c2	            0xeb14	                           jmp 0x40036d8	      1736	obj-elf.c	FUNCTION_42	SWITCH_1
0x40036c4	      0xba00000000	                              mov edx, 0	      1738	obj-elf.c	FUNCTION_42	SWITCH_1
0x40036c9	      0xbeca060000	                          mov esi, 0x6ca	      1738	obj-elf.c	FUNCTION_42	SWITCH_1
0x40036ce	      0xbf00000000	                              mov edi, 0	      1738	obj-elf.c	FUNCTION_42	SWITCH_1
0x40036d3	      0xe800000000	                          call 0x40036d8	      1738	obj-elf.c	FUNCTION_42	SWITCH_1
0x40036d8	      0xe800000000	                          call 0x40036dd	      1741	obj-elf.c	FUNCTION_42	CALL_23
0x40036dd	            0x89e8	                            mov eax, ebp	      1742	obj-elf.c	FUNCTION_42
0x40036df	            0xeb2b	                           jmp 0x400370c	      1742	obj-elf.c	FUNCTION_42
0x40036e1	      0xba05000000	                              mov edx, 5	      1748	obj-elf.c	FUNCTION_42	CALL_28
0x40036e6	      0xbe00000000	                              mov esi, 0	      1748	obj-elf.c	FUNCTION_42	CALL_28
0x40036eb	      0xbf00000000	                              mov edi, 0	      1748	obj-elf.c	FUNCTION_42	CALL_28
0x40036f0	      0xe800000000	                          call 0x40036f5	      1748	obj-elf.c	FUNCTION_42	CALL_28
0x40036f5	          0x4889c7	                            mov rdi, rax	      1748	obj-elf.c	FUNCTION_42	CALL_28
0x40036f8	      0xb800000000	                              mov eax, 0	      1748	obj-elf.c	FUNCTION_42	CALL_28
0x40036fd	      0xe800000000	                          call 0x4003702	      1748	obj-elf.c	FUNCTION_42	CALL_28
0x4003702	      0xe800000000	                          call 0x4003707	      1749	obj-elf.c	FUNCTION_42	CALL_29
0x4003707	      0xb800000000	                              mov eax, 0	      1750	obj-elf.c	FUNCTION_42
0x400370c	      0x488b5c2448	            mov rbx, qword [rsp + 0x48] 	      1751	obj-elf.c	FUNCTION_42
0x4003711	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1751	obj-elf.c	FUNCTION_42
0x400371a	            0x7434	                            je 0x4003750	      1751	obj-elf.c	FUNCTION_42
0x400371c	            0xeb2d	                           jmp 0x400374b	      1751	obj-elf.c	FUNCTION_42
0x400371e	      0xba05000000	                              mov edx, 5	      1711	obj-elf.c	FUNCTION_42	IF_8	CALL_16
0x4003723	      0xbe00000000	                              mov esi, 0	      1711	obj-elf.c	FUNCTION_42	IF_8	CALL_16
0x4003728	      0xbf00000000	                              mov edi, 0	      1711	obj-elf.c	FUNCTION_42	IF_8	CALL_16
0x400372d	      0xe800000000	                          call 0x4003732	      1711	obj-elf.c	FUNCTION_42	IF_8	CALL_16
0x4003732	          0x4889c7	                            mov rdi, rax	      1711	obj-elf.c	FUNCTION_42	IF_8	CALL_16
0x4003735	      0xb800000000	                              mov eax, 0	      1711	obj-elf.c	FUNCTION_42	IF_8	CALL_16
0x400373a	      0xe800000000	                          call 0x400373f	      1711	obj-elf.c	FUNCTION_42	IF_8	CALL_16
0x400373f	      0xe800000000	                          call 0x4003744	      1712	obj-elf.c	FUNCTION_42	IF_8	CALL_17
0x4003744	      0xb800000000	                              mov eax, 0	      1713	obj-elf.c	FUNCTION_42	IF_8
0x4003749	            0xebc1	                           jmp 0x400370c	      1713	obj-elf.c	FUNCTION_42	IF_8
0x400374b	      0xe800000000	                          call 0x4003750	      1751	obj-elf.c	FUNCTION_42
0x4003750	        0x4883c458	                           add rsp, 0x58	      1751	obj-elf.c	FUNCTION_42
0x4003754	              0x5b	                                 pop rbx	      1751	obj-elf.c	FUNCTION_42
0x4003755	              0x5d	                                 pop rbp	      1751	obj-elf.c	FUNCTION_42
0x4003756	            0x415c	                                 pop r12	      1751	obj-elf.c	FUNCTION_42
0x4003758	            0x415d	                                 pop r13	      1751	obj-elf.c	FUNCTION_42
0x400375a	            0x415e	                                 pop r14	      1751	obj-elf.c	FUNCTION_42
0x400375c	            0x415f	                                 pop r15	      1751	obj-elf.c	FUNCTION_42
0x400375e	              0xc3	                                     ret	      1751	obj-elf.c	FUNCTION_42
elf_generate_asm_lineno	DO,0:FOR,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:IF,1:CALL,1	1
0x4000051	            0xf3c3	                                     ret	      2652	obj-elf.c	FUNCTION_64
obj_elf_subsection	DO,0:FOR,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:IF,0:CALL,5	12
0x40001c6	        0x4883ec08	                              sub rsp, 8	      1288	obj-elf.c	FUNCTION_29
0x40001ca	    0x488b05000000	            mov rax, qword [0x040001d1] 	      1295	obj-elf.c	FUNCTION_29
0x40001d1	    0x488905000000	            mov qword [0x040001d8], rax 	      1295	obj-elf.c	FUNCTION_29
0x40001d8	    0x8b0500000000	            mov eax, dword [0x040001de] 	      1296	obj-elf.c	FUNCTION_29
0x40001de	    0x890500000000	            mov dword [0x040001e4], eax 	      1296	obj-elf.c	FUNCTION_29
0x40001e4	      0xe800000000	                          call 0x40001e9	      1298	obj-elf.c	FUNCTION_29	CALL_2
0x40001e9	            0x89c6	                            mov esi, eax	      1299	obj-elf.c	FUNCTION_29	CALL_3
0x40001eb	    0x488b3d000000	            mov rdi, qword [0x040001f2] 	      1299	obj-elf.c	FUNCTION_29	CALL_3
0x40001f2	      0xe800000000	                          call 0x40001f7	      1299	obj-elf.c	FUNCTION_29	CALL_3
0x40001f7	      0xe800000000	                          call 0x40001fc	      1300	obj-elf.c	FUNCTION_29	CALL_4
0x40001fc	        0x4883c408	                              add rsp, 8	      1305	obj-elf.c	FUNCTION_29
0x4000200	              0xc3	                                     ret	      1305	obj-elf.c	FUNCTION_29
obj_elf_data	DO,0:FOR,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:IF,0:CALL,3	8
0x4001500	        0x4883ec08	                              sub rsp, 8	      1236	obj-elf.c	FUNCTION_26
0x4001504	    0x488b05000000	            mov rax, qword [0x0400150b] 	      1241	obj-elf.c	FUNCTION_26
0x400150b	    0x488905000000	            mov qword [0x04001512], rax 	      1241	obj-elf.c	FUNCTION_26
0x4001512	    0x8b0500000000	            mov eax, dword [0x04001518] 	      1242	obj-elf.c	FUNCTION_26
0x4001518	    0x890500000000	            mov dword [0x0400151e], eax 	      1242	obj-elf.c	FUNCTION_26
0x400151e	      0xe800000000	                          call 0x4001523	      1243	obj-elf.c	FUNCTION_26	CALL_2
0x4001523	        0x4883c408	                              add rsp, 8	      1248	obj-elf.c	FUNCTION_26
0x4001527	              0xc3	                                     ret	      1248	obj-elf.c	FUNCTION_26
obj_elf_lcomm	DO,0:FOR,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:IF,1:CALL,2	11
0x4000111	        0x4883ec08	                              sub rsp, 8	       399	obj-elf.c	FUNCTION_14
0x4000115	      0xbe00000000	                              mov esi, 0	       400	obj-elf.c	FUNCTION_14	CALL_1
0x400011a	      0xbf00000000	                              mov edi, 0	       400	obj-elf.c	FUNCTION_14	CALL_1
0x400011f	      0xe800000000	                          call 0x4000124	       400	obj-elf.c	FUNCTION_14	CALL_1
0x4000124	          0x4885c0	                           test rax, rax	       402	obj-elf.c	FUNCTION_14	IF_1
0x4000127	            0x740f	                            je 0x4000138	       402	obj-elf.c	FUNCTION_14	IF_1
0x4000129	          0x4889c7	                            mov rdi, rax	       403	obj-elf.c	FUNCTION_14	CALL_2
0x400012c	      0xe800000000	                          call 0x4000131	       403	obj-elf.c	FUNCTION_14	CALL_2
0x4000131	    0x814818000001	          or dword [rax + 0x18], 0x10000	       403	obj-elf.c	FUNCTION_14	CALL_2
0x4000138	        0x4883c408	                              add rsp, 8	       404	obj-elf.c	FUNCTION_14
0x400013c	              0xc3	                                     ret	       404	obj-elf.c	FUNCTION_14
elf_s_set_other	DO,0:FOR,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:IF,0:CALL,1	6
0x400014f	              0x53	                                push rbx	       251	obj-elf.c	FUNCTION_8
0x4000150	            0x89f3	                            mov ebx, esi	       251	obj-elf.c	FUNCTION_8
0x4000152	      0xe800000000	                          call 0x4000157	       252	obj-elf.c	FUNCTION_8	CALL_1
0x4000157	          0x885849	               mov byte [rax + 0x49], bl	       252	obj-elf.c	FUNCTION_8	CALL_1
0x400015a	              0x5b	                                 pop rbx	       253	obj-elf.c	FUNCTION_8
0x400015b	              0xc3	                                     ret	       253	obj-elf.c	FUNCTION_8
obj_elf_previous	DO,0:FOR,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:IF,1:CALL,5	19
0x4000e29	        0x4883ec08	                              sub rsp, 8	      1319	obj-elf.c	FUNCTION_31
0x4000e2d	    0x488b3d000000	            mov rdi, qword [0x04000e34] 	      1323	obj-elf.c	FUNCTION_31	IF_1
0x4000e34	          0x4885ff	                           test rdi, rdi	      1323	obj-elf.c	FUNCTION_31	IF_1
0x4000e37	            0x751e	                           jne 0x4000e57	      1323	obj-elf.c	FUNCTION_31	IF_1
0x4000e39	      0xba05000000	                              mov edx, 5	      1325	obj-elf.c	FUNCTION_31	IF_1	CALL_2
0x4000e3e	      0xbe00000000	                              mov esi, 0	      1325	obj-elf.c	FUNCTION_31	IF_1	CALL_2
0x4000e43	      0xe800000000	                          call 0x4000e48	      1325	obj-elf.c	FUNCTION_31	IF_1	CALL_2
0x4000e48	          0x4889c7	                            mov rdi, rax	      1325	obj-elf.c	FUNCTION_31	IF_1	CALL_2
0x4000e4b	      0xb800000000	                              mov eax, 0	      1325	obj-elf.c	FUNCTION_31	IF_1	CALL_2
0x4000e50	      0xe800000000	                          call 0x4000e55	      1325	obj-elf.c	FUNCTION_31	IF_1	CALL_2
0x4000e55	            0xeb25	                           jmp 0x4000e7c	      1326	obj-elf.c	FUNCTION_31	IF_1
0x4000e57	    0x8b3500000000	            mov esi, dword [0x04000e5d] 	      1334	obj-elf.c	FUNCTION_31
0x4000e5d	    0x488b05000000	            mov rax, qword [0x04000e64] 	      1335	obj-elf.c	FUNCTION_31
0x4000e64	    0x488905000000	            mov qword [0x04000e6b], rax 	      1335	obj-elf.c	FUNCTION_31
0x4000e6b	    0x8b0500000000	            mov eax, dword [0x04000e71] 	      1336	obj-elf.c	FUNCTION_31
0x4000e71	    0x890500000000	            mov dword [0x04000e77], eax 	      1336	obj-elf.c	FUNCTION_31
0x4000e77	      0xe800000000	                          call 0x4000e7c	      1337	obj-elf.c	FUNCTION_31	CALL_4
0x4000e7c	        0x4883c408	                              add rsp, 8	      1342	obj-elf.c	FUNCTION_31
0x4000e80	              0xc3	                                     ret	      1342	obj-elf.c	FUNCTION_31
obj_elf_init_stab_section	DO,0:FOR,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:IF,0:CALL,8	41
0x4003772	            0x4154	                                push r12	      2113	obj-elf.c	FUNCTION_52
0x4003774	              0x55	                                push rbp	      2113	obj-elf.c	FUNCTION_52
0x4003775	              0x53	                                push rbx	      2113	obj-elf.c	FUNCTION_52
0x4003776	          0x4889fd	                            mov rbp, rdi	      2113	obj-elf.c	FUNCTION_52
0x4003779	    0xc74770020000	               mov dword [rdi + 0x70], 2	      1696	bfd.h	FUNCTION_70
0x4003780	      0xbf0c000000	                            mov edi, 0xc	      2124	obj-elf.c	FUNCTION_52	CALL_2
0x4003785	      0xe800000000	                          call 0x400378a	      2124	obj-elf.c	FUNCTION_52	CALL_2
0x400378a	          0x4889c3	                            mov rbx, rax	      2124	obj-elf.c	FUNCTION_52	CALL_2
0x400378d	    0x48c700000000	                      mov qword [rax], 0	        90	string3.h	FUNCTION_75	CALL_6
0x4003794	    0xc74008000000	                  mov dword [rax + 8], 0	        90	string3.h	FUNCTION_75	CALL_6
0x400379b	      0xbf00000000	                              mov edi, 0	      2127	obj-elf.c	FUNCTION_52	CALL_4
0x40037a0	      0xe800000000	                          call 0x40037a5	      2127	obj-elf.c	FUNCTION_52	CALL_4
0x40037a5	          0x4989c4	                            mov r12, rax	      2127	obj-elf.c	FUNCTION_52	CALL_4
0x40037a8	      0xba00000000	                              mov edx, 0	      2128	obj-elf.c	FUNCTION_52	CALL_5
0x40037ad	      0xbe00000000	                              mov esi, 0	      2128	obj-elf.c	FUNCTION_52	CALL_5
0x40037b2	        0x488b7d00	                    mov rdi, qword [rbp]	      2128	obj-elf.c	FUNCTION_52	CALL_5
0x40037b6	      0xb800000000	                              mov eax, 0	      2128	obj-elf.c	FUNCTION_52	CALL_5
0x40037bb	      0xe800000000	                          call 0x40037c0	      2128	obj-elf.c	FUNCTION_52	CALL_5
0x40037c0	          0x4889c6	                            mov rsi, rax	      2129	obj-elf.c	FUNCTION_52	CALL_6
0x40037c3	          0x4c89e7	                            mov rdi, r12	      2129	obj-elf.c	FUNCTION_52	CALL_6
0x40037c6	      0xe800000000	                          call 0x40037cb	      2129	obj-elf.c	FUNCTION_52	CALL_6
0x40037cb	          0x83f801	                              cmp eax, 1	      2130	obj-elf.c	FUNCTION_52
0x40037ce	            0x741f	                            je 0x40037ef	      2130	obj-elf.c	FUNCTION_52
0x40037d0	            0x85c0	                           test eax, eax	      2130	obj-elf.c	FUNCTION_52
0x40037d2	            0x7507	                           jne 0x40037db	      2130	obj-elf.c	FUNCTION_52
0x40037d4	      0x41803c2400	                       cmp byte [r12], 0	      2130	obj-elf.c	FUNCTION_52
0x40037d9	            0x7414	                            je 0x40037ef	      2130	obj-elf.c	FUNCTION_52
0x40037db	      0xba00000000	                              mov edx, 0	      2130	obj-elf.c	FUNCTION_52
0x40037e0	      0xbe52080000	                          mov esi, 0x852	      2130	obj-elf.c	FUNCTION_52
0x40037e5	      0xbf00000000	                              mov edi, 0	      2130	obj-elf.c	FUNCTION_52
0x40037ea	      0xe800000000	                          call 0x40037ef	      2130	obj-elf.c	FUNCTION_52
0x40037ef	            0x89c6	                            mov esi, eax	      2131	obj-elf.c	FUNCTION_52	CALL_7
0x40037f1	      0xba04000000	                              mov edx, 4	      2131	obj-elf.c	FUNCTION_52	CALL_7
0x40037f6	          0x4889df	                            mov rdi, rbx	      2131	obj-elf.c	FUNCTION_52	CALL_7
0x40037f9	      0xe800000000	                          call 0x40037fe	      2131	obj-elf.c	FUNCTION_52	CALL_7
0x40037fe	    0x488b85a80000	            mov rax, qword [rbp + 0xa8] 	      2132	obj-elf.c	FUNCTION_52	CALL_8
0x4003805	        0x48895850	             mov qword [rax + 0x50], rbx	      2132	obj-elf.c	FUNCTION_52	CALL_8
0x4003809	              0x5b	                                 pop rbx	      2133	obj-elf.c	FUNCTION_52
0x400380a	              0x5d	                                 pop rbp	      2133	obj-elf.c	FUNCTION_52
0x400380b	            0x415c	                                 pop r12	      2133	obj-elf.c	FUNCTION_52
0x400380d	              0xc3	                                     ret	      2133	obj-elf.c	FUNCTION_52
elf_copy_symbol_attributes	DO,0:FOR,0:SWITCH,0:functions,0:ELSE,1:WHILE,0:IF,3:CALL,11	63
0x4000cf3	            0x4155	                                push r13	      1791	obj-elf.c	FUNCTION_46
0x4000cf5	            0x4154	                                push r12	      1791	obj-elf.c	FUNCTION_46
0x4000cf7	              0x55	                                push rbp	      1791	obj-elf.c	FUNCTION_46
0x4000cf8	              0x53	                                push rbx	      1791	obj-elf.c	FUNCTION_46
0x4000cf9	        0x4883ec08	                              sub rsp, 8	      1791	obj-elf.c	FUNCTION_46
0x4000cfd	          0x4889fb	                            mov rbx, rdi	      1791	obj-elf.c	FUNCTION_46
0x4000d00	          0x4989f4	                            mov r12, rsi	      1791	obj-elf.c	FUNCTION_46
0x4000d03	          0x4889f7	                            mov rdi, rsi	      1792	obj-elf.c	FUNCTION_46	CALL_1
0x4000d06	      0xe800000000	                          call 0x4000d0b	      1792	obj-elf.c	FUNCTION_46	CALL_1
0x4000d0b	          0x4989c5	                            mov r13, rax	      1792	obj-elf.c	FUNCTION_46	CALL_1
0x4000d0e	          0x4889df	                            mov rdi, rbx	      1793	obj-elf.c	FUNCTION_46	CALL_2
0x4000d11	      0xe800000000	                          call 0x4000d16	      1793	obj-elf.c	FUNCTION_46	CALL_2
0x4000d16	          0x4889c5	                            mov rbp, rax	      1793	obj-elf.c	FUNCTION_46	CALL_2
0x4000d19	      0x49837d0800	                  cmp qword [r13 + 8], 0	      1794	obj-elf.c	FUNCTION_46	IF_1
0x4000d1e	            0x743d	                            je 0x4000d5d	      1794	obj-elf.c	FUNCTION_46	IF_1
0x4000d20	      0x4883780800	                  cmp qword [rax + 8], 0	      1796	obj-elf.c	FUNCTION_46	IF_1	IF_2
0x4000d25	            0x750e	                           jne 0x4000d35	      1796	obj-elf.c	FUNCTION_46	IF_1	IF_2
0x4000d27	      0xbf20000000	                           mov edi, 0x20	      1797	obj-elf.c	FUNCTION_46	IF_1	CALL_3
0x4000d2c	      0xe800000000	                          call 0x4000d31	      1797	obj-elf.c	FUNCTION_46	IF_1	CALL_3
0x4000d31	        0x48894508	                mov qword [rbp + 8], rax	      1797	obj-elf.c	FUNCTION_46	IF_1	CALL_3
0x4000d35	        0x488b4508	                mov rax, qword [rbp + 8]	      1798	obj-elf.c	FUNCTION_46	IF_1
0x4000d39	        0x498b5508	                mov rdx, qword [r13 + 8]	      1798	obj-elf.c	FUNCTION_46	IF_1
0x4000d3d	          0x488b0a	                    mov rcx, qword [rdx]	      1798	obj-elf.c	FUNCTION_46	IF_1
0x4000d40	          0x488908	                    mov qword [rax], rcx	      1798	obj-elf.c	FUNCTION_46	IF_1
0x4000d43	        0x488b4a08	                mov rcx, qword [rdx + 8]	      1798	obj-elf.c	FUNCTION_46	IF_1
0x4000d47	        0x48894808	                mov qword [rax + 8], rcx	      1798	obj-elf.c	FUNCTION_46	IF_1
0x4000d4b	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	      1798	obj-elf.c	FUNCTION_46	IF_1
0x4000d4f	        0x48894810	             mov qword [rax + 0x10], rcx	      1798	obj-elf.c	FUNCTION_46	IF_1
0x4000d53	        0x488b5218	            mov rdx, qword [rdx + 0x18] 	      1798	obj-elf.c	FUNCTION_46	IF_1
0x4000d57	        0x48895018	             mov qword [rax + 0x18], rdx	      1798	obj-elf.c	FUNCTION_46	IF_1
0x4000d5b	            0xeb16	                           jmp 0x4000d73	      1798	obj-elf.c	FUNCTION_46	IF_1
0x4000d5d	        0x488b7808	                mov rdi, qword [rax + 8]	      1802	obj-elf.c	FUNCTION_46	ELSE_1	IF_3
0x4000d61	          0x4885ff	                           test rdi, rdi	      1802	obj-elf.c	FUNCTION_46	ELSE_1	IF_3
0x4000d64	            0x7405	                            je 0x4000d6b	      1802	obj-elf.c	FUNCTION_46	ELSE_1	IF_3
0x4000d66	      0xe800000000	                          call 0x4000d6b	      1803	obj-elf.c	FUNCTION_46	ELSE_1	CALL_4
0x4000d6b	    0x48c745080000	                  mov qword [rbp + 8], 0	      1804	obj-elf.c	FUNCTION_46	ELSE_1
0x4000d73	          0x4889df	                            mov rdi, rbx	      1806	obj-elf.c	FUNCTION_46	CALL_6
0x4000d76	      0xe800000000	                          call 0x4000d7b	      1806	obj-elf.c	FUNCTION_46	CALL_6
0x4000d7b	          0x4889c5	                            mov rbp, rax	      1806	obj-elf.c	FUNCTION_46	CALL_6
0x4000d7e	          0x4c89e7	                            mov rdi, r12	      1806	obj-elf.c	FUNCTION_46	CALL_6
0x4000d81	      0xe800000000	                          call 0x4000d86	      1806	obj-elf.c	FUNCTION_46	CALL_6
0x4000d86	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1806	obj-elf.c	FUNCTION_46	CALL_6
0x4000d8a	        0x48894538	            mov qword [rbp + 0x38], rax 	      1806	obj-elf.c	FUNCTION_46	CALL_6
0x4000d8e	          0x4889df	                            mov rdi, rbx	      1808	obj-elf.c	FUNCTION_46	CALL_9
0x4000d91	      0xe800000000	                          call 0x4000d96	      1808	obj-elf.c	FUNCTION_46	CALL_9
0x4000d96	          0x4889c5	                            mov rbp, rax	      1808	obj-elf.c	FUNCTION_46	CALL_9
0x4000d99	          0x4889df	                            mov rdi, rbx	      1808	obj-elf.c	FUNCTION_46	CALL_9
0x4000d9c	      0xe800000000	                          call 0x4000da1	      1808	obj-elf.c	FUNCTION_46	CALL_9
0x4000da1	            0x89c3	                            mov ebx, eax	      1808	obj-elf.c	FUNCTION_46	CALL_9
0x4000da3	          0x4c89e7	                            mov rdi, r12	      1808	obj-elf.c	FUNCTION_46	CALL_9
0x4000da6	      0xe800000000	                          call 0x4000dab	      1808	obj-elf.c	FUNCTION_46	CALL_9
0x4000dab	          0x83e303	                              and ebx, 3	      1808	obj-elf.c	FUNCTION_46	CALL_9
0x4000dae	            0x89c2	                            mov edx, eax	      1808	obj-elf.c	FUNCTION_46	CALL_9
0x4000db0	          0x83e2fc	                     and edx, 0xfffffffc	      1808	obj-elf.c	FUNCTION_46	CALL_9
0x4000db3	            0x89d8	                            mov eax, ebx	      1808	obj-elf.c	FUNCTION_46	CALL_9
0x4000db5	             0x9d0	                             or eax, edx	      1808	obj-elf.c	FUNCTION_46	CALL_9
0x4000db7	          0x884549	               mov byte [rbp + 0x49], al	      1808	obj-elf.c	FUNCTION_46	CALL_9
0x4000dba	        0x4883c408	                              add rsp, 8	      1810	obj-elf.c	FUNCTION_46
0x4000dbe	              0x5b	                                 pop rbx	      1810	obj-elf.c	FUNCTION_46
0x4000dbf	              0x5d	                                 pop rbp	      1810	obj-elf.c	FUNCTION_46
0x4000dc0	            0x415c	                                 pop r12	      1810	obj-elf.c	FUNCTION_46
0x4000dc2	            0x415d	                                 pop r13	      1810	obj-elf.c	FUNCTION_46
0x4000dc4	              0xc3	                                     ret	      1810	obj-elf.c	FUNCTION_46
elf_frob_symbol	DO,0:FOR,0:SWITCH,0:functions,0:ELSE,5:WHILE,0:IF,16:CALL,49	185
0x40017d7	            0x4155	                                push r13	      2211	obj-elf.c	FUNCTION_57
0x40017d9	            0x4154	                                push r12	      2211	obj-elf.c	FUNCTION_57
0x40017db	              0x55	                                push rbp	      2211	obj-elf.c	FUNCTION_57
0x40017dc	              0x53	                                push rbx	      2211	obj-elf.c	FUNCTION_57
0x40017dd	        0x4883ec08	                              sub rsp, 8	      2211	obj-elf.c	FUNCTION_57
0x40017e1	          0x4889fb	                            mov rbx, rdi	      2211	obj-elf.c	FUNCTION_57
0x40017e4	          0x4989f5	                            mov r13, rsi	      2211	obj-elf.c	FUNCTION_57
0x40017e7	      0xe800000000	                          call 0x40017ec	      2220	obj-elf.c	FUNCTION_57	CALL_2
0x40017ec	          0x4889c5	                            mov rbp, rax	      2220	obj-elf.c	FUNCTION_57	CALL_2
0x40017ef	        0x4c8b6008	                mov r12, qword [rax + 8]	      2222	obj-elf.c	FUNCTION_57
0x40017f3	          0x4d85e4	                           test r12, r12	      2223	obj-elf.c	FUNCTION_57	IF_2
0x40017f6	     0xf84a1000000	                            je 0x400189d	      2223	obj-elf.c	FUNCTION_57	IF_2
0x40017fc	          0x4c89e7	                            mov rdi, r12	      2225	obj-elf.c	FUNCTION_57	IF_2	IF_3	CALL_3
0x40017ff	      0xe800000000	                          call 0x4001804	      2225	obj-elf.c	FUNCTION_57	IF_2	IF_3	CALL_3
0x4001804	            0x85c0	                           test eax, eax	      2225	obj-elf.c	FUNCTION_57	IF_2	IF_3	CALL_3
0x4001806	            0x741b	                            je 0x4001823	      2225	obj-elf.c	FUNCTION_57	IF_2	IF_3	CALL_3
0x4001808	    0x41807c241802	                cmp byte [r12 + 0x18], 2	      2226	obj-elf.c	FUNCTION_57	IF_2	IF_3
0x400180e	            0x7513	                           jne 0x4001823	      2226	obj-elf.c	FUNCTION_57	IF_2	IF_3
0x4001810	          0x4889df	                            mov rdi, rbx	      2227	obj-elf.c	FUNCTION_57	IF_2	CALL_4
0x4001813	      0xe800000000	                          call 0x4001818	      2227	obj-elf.c	FUNCTION_57	IF_2	CALL_4
0x4001818	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	      2227	obj-elf.c	FUNCTION_57	IF_2	CALL_4
0x400181d	        0x48895038	             mov qword [rax + 0x38], rdx	      2227	obj-elf.c	FUNCTION_57	IF_2	CALL_4
0x4001821	            0xeb69	                           jmp 0x400188c	      2227	obj-elf.c	FUNCTION_57	IF_2	CALL_4
0x4001823	    0x833d00000000	               cmp dword [0x0400182a], 0	      2230	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	IF_4
0x400182a	            0x7531	                           jne 0x400185d	      2230	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	IF_4
0x400182c	          0x4889df	                            mov rdi, rbx	      2231	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	IF_4	CALL_6
0x400182f	      0xe800000000	                          call 0x4001834	      2231	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	IF_4	CALL_6
0x4001834	          0x4989c4	                            mov r12, rax	      2231	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	IF_4	CALL_6
0x4001837	      0xba05000000	                              mov edx, 5	      2231	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	IF_4	CALL_6
0x400183c	      0xbe00000000	                              mov esi, 0	      2231	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	IF_4	CALL_6
0x4001841	      0xbf00000000	                              mov edi, 0	      2231	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	IF_4	CALL_6
0x4001846	      0xe800000000	                          call 0x400184b	      2231	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	IF_4	CALL_6
0x400184b	          0x4c89e6	                            mov rsi, r12	      2231	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	IF_4	CALL_6
0x400184e	          0x4889c7	                            mov rdi, rax	      2231	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	IF_4	CALL_6
0x4001851	      0xb800000000	                              mov eax, 0	      2231	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	IF_4	CALL_6
0x4001856	      0xe800000000	                          call 0x400185b	      2231	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	IF_4	CALL_6
0x400185b	            0xeb2f	                           jmp 0x400188c	      2231	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	IF_4	CALL_6
0x400185d	          0x4889df	                            mov rdi, rbx	      2234	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	ELSE_2	CALL_9
0x4001860	      0xe800000000	                          call 0x4001865	      2234	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	ELSE_2	CALL_9
0x4001865	          0x4989c4	                            mov r12, rax	      2234	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	ELSE_2	CALL_9
0x4001868	      0xba05000000	                              mov edx, 5	      2234	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	ELSE_2	CALL_9
0x400186d	      0xbe00000000	                              mov esi, 0	      2234	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	ELSE_2	CALL_9
0x4001872	      0xbf00000000	                              mov edi, 0	      2234	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	ELSE_2	CALL_9
0x4001877	      0xe800000000	                          call 0x400187c	      2234	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	ELSE_2	CALL_9
0x400187c	          0x4c89e6	                            mov rsi, r12	      2234	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	ELSE_2	CALL_9
0x400187f	          0x4889c7	                            mov rdi, rax	      2234	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	ELSE_2	CALL_9
0x4001882	      0xb800000000	                              mov eax, 0	      2234	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	ELSE_2	CALL_9
0x4001887	      0xe800000000	                          call 0x400188c	      2234	obj-elf.c	FUNCTION_57	IF_2	ELSE_1	ELSE_2	CALL_9
0x400188c	        0x488b7d08	                mov rdi, qword [rbp + 8]	      2237	obj-elf.c	FUNCTION_57	IF_2	CALL_11
0x4001890	      0xe800000000	                          call 0x4001895	      2237	obj-elf.c	FUNCTION_57	IF_2	CALL_11
0x4001895	    0x48c745080000	                  mov qword [rbp + 8], 0	      2238	obj-elf.c	FUNCTION_57	IF_2
0x400189d	        0x488b7d10	            mov rdi, qword [rbp + 0x10] 	      2241	obj-elf.c	FUNCTION_57	IF_5
0x40018a1	          0x4885ff	                           test rdi, rdi	      2241	obj-elf.c	FUNCTION_57	IF_5
0x40018a4	     0xf84a6010000	                            je 0x4001a50	      2241	obj-elf.c	FUNCTION_57	IF_5
0x40018aa	      0xbe40000000	                           mov esi, 0x40	      2245	obj-elf.c	FUNCTION_57	IF_5	CALL_12
0x40018af	      0xe800000000	                          call 0x40018b4	      2245	obj-elf.c	FUNCTION_57	IF_5	CALL_12
0x40018b4	          0x4989c4	                            mov r12, rax	      2245	obj-elf.c	FUNCTION_57	IF_5	CALL_12
0x40018b7	          0x4885c0	                           test rax, rax	      2246	obj-elf.c	FUNCTION_57	IF_5	IF_6
0x40018ba	            0x750d	                           jne 0x40018c9	      2246	obj-elf.c	FUNCTION_57	IF_5	IF_6
0x40018bc	    0x41c745000100	                      mov dword [r13], 1	      2248	obj-elf.c	FUNCTION_57	IF_5	IF_6
0x40018c4	      0xe987010000	                           jmp 0x4001a50	      2248	obj-elf.c	FUNCTION_57	IF_5	IF_6
0x40018c9	          0x4889df	                            mov rdi, rbx	      2261	obj-elf.c	FUNCTION_57	IF_5	ELSE_3	IF_7	CALL_13
0x40018cc	      0xe800000000	                          call 0x40018d1	      2261	obj-elf.c	FUNCTION_57	IF_5	ELSE_3	IF_7	CALL_13
0x40018d1	            0x85c0	                           test eax, eax	      2261	obj-elf.c	FUNCTION_57	IF_5	ELSE_3	IF_7	CALL_13
0x40018d3	            0x7549	                           jne 0x400191e	      2261	obj-elf.c	FUNCTION_57	IF_5	ELSE_3	IF_7	CALL_13
0x40018d5	    0x41807c240140	                cmp byte [r12 + 1], 0x40	      2266	obj-elf.c	FUNCTION_57	IF_5	ELSE_3	IF_7	IF_8
0x40018db	            0x7530	                           jne 0x400190d	      2266	obj-elf.c	FUNCTION_57	IF_5	ELSE_3	IF_7	IF_8
0x40018dd	        0x4c8b6510	            mov r12, qword [rbp + 0x10] 	      2268	obj-elf.c	FUNCTION_57	IF_5	ELSE_3	IF_7	IF_8	CALL_15
0x40018e1	      0xba05000000	                              mov edx, 5	      2268	obj-elf.c	FUNCTION_57	IF_5	ELSE_3	IF_7	IF_8	CALL_15
0x40018e6	      0xbe00000000	                              mov esi, 0	      2268	obj-elf.c	FUNCTION_57	IF_5	ELSE_3	IF_7	IF_8	CALL_15
0x40018eb	      0xbf00000000	                              mov edi, 0	      2268	obj-elf.c	FUNCTION_57	IF_5	ELSE_3	IF_7	IF_8	CALL_15
0x40018f0	      0xe800000000	                          call 0x40018f5	      2268	obj-elf.c	FUNCTION_57	IF_5	ELSE_3	IF_7	IF_8	CALL_15
0x40018f5	          0x4c89e6	                            mov rsi, r12	      2268	obj-elf.c	FUNCTION_57	IF_5	ELSE_3	IF_7	IF_8	CALL_15
0x40018f8	          0x4889c7	                            mov rdi, rax	      2268	obj-elf.c	FUNCTION_57	IF_5	ELSE_3	IF_7	IF_8	CALL_15
0x40018fb	      0xb800000000	                              mov eax, 0	      2268	obj-elf.c	FUNCTION_57	IF_5	ELSE_3	IF_7	IF_8	CALL_15
0x4001900	      0xe800000000	                          call 0x4001905	      2268	obj-elf.c	FUNCTION_57	IF_5	ELSE_3	IF_7	IF_8	CALL_15
0x4001905	    0x41c745000100	                      mov dword [r13], 1	      2271	obj-elf.c	FUNCTION_57	IF_5	ELSE_3	IF_7	IF_8
0x400190d	        0x488b7510	            mov rsi, qword [rbp + 0x10] 	      2273	obj-elf.c	FUNCTION_57	IF_5	ELSE_3	IF_7	CALL_16
0x4001911	          0x4889df	                            mov rdi, rbx	      2273	obj-elf.c	FUNCTION_57	IF_5	ELSE_3	IF_7	CALL_16
0x4001914	      0xe800000000	                          call 0x4001919	      2273	obj-elf.c	FUNCTION_57	IF_5	ELSE_3	IF_7	CALL_16
0x4001919	      0xe932010000	                           jmp 0x4001a50	      2273	obj-elf.c	FUNCTION_57	IF_5	ELSE_3	IF_7	CALL_16
0x400191e	    0x41807c240140	                cmp byte [r12 + 1], 0x40	      2277	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	IF_9
0x4001924	            0x753f	                           jne 0x4001965	      2277	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	IF_9
0x4001926	    0x41807c240240	                cmp byte [r12 + 2], 0x40	      2277	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	IF_9
0x400192c	            0x7537	                           jne 0x4001965	      2277	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	IF_9
0x400192e	      0x498d742403	                      lea rsi, [r12 + 3]	      2283	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	IF_9	CALL_17
0x4001933	      0xb800000000	                              mov eax, 0	      2283	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	IF_9	CALL_17
0x4001938	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      2283	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	IF_9	CALL_17
0x400193f	          0x4889f7	                            mov rdi, rsi	      2283	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	IF_9	CALL_17
0x4001942	            0xf2ae	              repne scasb al, byte [rdi]	      2283	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	IF_9	CALL_17
0x4001944	          0x48f7d1	                                 not rcx	      2283	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	IF_9	CALL_17
0x4001947	          0x4889ca	                            mov rdx, rcx	      2283	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	IF_9	CALL_17
0x400194a	      0x498d7c2402	                      lea rdi, [r12 + 2]	        59	string3.h	FUNCTION_73	CALL_3
0x400194f	      0xe800000000	                          call 0x4001954	        59	string3.h	FUNCTION_73	CALL_3
0x4001954	        0x488b7510	            mov rsi, qword [rbp + 0x10] 	      2285	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	IF_9	CALL_19
0x4001958	          0x4889df	                            mov rdi, rbx	      2285	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	IF_9	CALL_19
0x400195b	      0xe800000000	                          call 0x4001960	      2285	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	IF_9	CALL_19
0x4001960	      0xe9eb000000	                           jmp 0x4001a50	      2278	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	IF_9
0x4001965	        0x488b7d10	            mov rdi, qword [rbp + 0x10] 	      2298	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_20
0x4001969	      0xe800000000	                          call 0x400196e	      2298	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_20
0x400196e	          0x4989c4	                            mov r12, rax	      2298	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_20
0x4001971	          0x4889df	                            mov rdi, rbx	      2301	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_10	CALL_21
0x4001974	      0xe800000000	                          call 0x4001979	      2301	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_10	CALL_21
0x4001979	            0x85c0	                           test eax, eax	      2301	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_10	CALL_21
0x400197b	            0x7443	                            je 0x40019c0	      2301	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_10	CALL_21
0x400197d	          0x4889df	                            mov rdi, rbx	      2303	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_10	CALL_23
0x4001980	      0xe800000000	                          call 0x4001985	      2303	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_10	CALL_23
0x4001985	          0x4989c4	                            mov r12, rax	      2303	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_10	CALL_23
0x4001988	        0x488b5d10	            mov rbx, qword [rbp + 0x10] 	      2303	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_10	CALL_23
0x400198c	      0xba05000000	                              mov edx, 5	      2303	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_10	CALL_23
0x4001991	      0xbe00000000	                              mov esi, 0	      2303	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_10	CALL_23
0x4001996	      0xbf00000000	                              mov edi, 0	      2303	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_10	CALL_23
0x400199b	      0xe800000000	                          call 0x40019a0	      2303	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_10	CALL_23
0x40019a0	          0x4c89e2	                            mov rdx, r12	      2303	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_10	CALL_23
0x40019a3	          0x4889de	                            mov rsi, rbx	      2303	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_10	CALL_23
0x40019a6	          0x4889c7	                            mov rdi, rax	      2303	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_10	CALL_23
0x40019a9	      0xb800000000	                              mov eax, 0	      2303	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_10	CALL_23
0x40019ae	      0xe800000000	                          call 0x40019b3	      2303	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_10	CALL_23
0x40019b3	    0x41c745000100	                      mov dword [r13], 1	      2305	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_10
0x40019bb	      0xe9d7000000	                           jmp 0x4001a97	      2306	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_10
0x40019c0	          0x4889df	                            mov rdi, rbx	      2309	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_26
0x40019c3	      0xe800000000	                          call 0x40019c8	      2309	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_26
0x40019c8	          0x4889c6	                            mov rsi, rax	      2309	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_26
0x40019cb	          0x4c89e7	                            mov rdi, r12	      2309	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_26
0x40019ce	      0xe800000000	                          call 0x40019d3	      2309	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_26
0x40019d3	          0x4889df	                            mov rdi, rbx	      2314	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_28
0x40019d6	      0xe800000000	                          call 0x40019db	      2314	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_28
0x40019db	          0x4889c5	                            mov rbp, rax	      2314	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_28
0x40019de	          0x4889df	                            mov rdi, rbx	      2315	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_29
0x40019e1	      0xe800000000	                          call 0x40019e6	      2315	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_29
0x40019e6	          0x4889ee	                            mov rsi, rbp	      2313	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_27
0x40019e9	          0x482b30	                    sub rsi, qword [rax]	      2313	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_27
0x40019ec	          0x4c89e7	                            mov rdi, r12	      2313	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_27
0x40019ef	      0xe800000000	                          call 0x40019f4	      2313	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_27
0x40019f4	          0x4889df	                            mov rdi, rbx	      2317	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_31
0x40019f7	      0xe800000000	                          call 0x40019fc	      2317	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_31
0x40019fc	          0x4889c6	                            mov rsi, rax	      2317	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_31
0x40019ff	          0x4c89e7	                            mov rdi, r12	      2317	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_31
0x4001a02	      0xe800000000	                          call 0x4001a07	      2317	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_31
0x4001a07	          0x4889de	                            mov rsi, rbx	      2320	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_32
0x4001a0a	          0x4c89e7	                            mov rdi, r12	      2320	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_32
0x4001a0d	      0xe800000000	                          call 0x4001a12	      2320	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_32
0x4001a12	          0x4c89e7	                            mov rdi, r12	      2322	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_34
0x4001a15	      0xe800000000	                          call 0x4001a1a	      2322	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_34
0x4001a1a	          0x4889c5	                            mov rbp, rax	      2322	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_34
0x4001a1d	          0x4889df	                            mov rdi, rbx	      2322	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_34
0x4001a20	      0xe800000000	                          call 0x4001a25	      2322	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_34
0x4001a25	          0x884549	               mov byte [rbp + 0x49], al	      2322	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_34
0x4001a28	          0x4889df	                            mov rdi, rbx	      2324	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_11	CALL_35
0x4001a2b	      0xe800000000	                          call 0x4001a30	      2324	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_11	CALL_35
0x4001a30	            0x85c0	                           test eax, eax	      2324	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_11	CALL_35
0x4001a32	            0x7408	                            je 0x4001a3c	      2324	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_11	CALL_35
0x4001a34	          0x4c89e7	                            mov rdi, r12	      2325	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_36
0x4001a37	      0xe800000000	                          call 0x4001a3c	      2325	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_36
0x4001a3c	          0x4889df	                            mov rdi, rbx	      2327	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_12	CALL_37
0x4001a3f	      0xe800000000	                          call 0x4001a44	      2327	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_12	CALL_37
0x4001a44	            0x85c0	                           test eax, eax	      2327	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_12	CALL_37
0x4001a46	            0x7408	                            je 0x4001a50	      2327	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	IF_12	CALL_37
0x4001a48	          0x4c89e7	                            mov rdi, r12	      2328	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_38
0x4001a4b	      0xe800000000	                          call 0x4001a50	      2328	obj-elf.c	FUNCTION_57	IF_5	ELSE_4	ELSE_5	CALL_38
0x4001a50	          0x4889df	                            mov rdi, rbx	      2334	obj-elf.c	FUNCTION_57	IF_13	CALL_39
0x4001a53	      0xe800000000	                          call 0x4001a58	      2334	obj-elf.c	FUNCTION_57	IF_13	CALL_39
0x4001a58	            0x85c0	                           test eax, eax	      2334	obj-elf.c	FUNCTION_57	IF_13	CALL_39
0x4001a5a	            0x743b	                            je 0x4001a97	      2334	obj-elf.c	FUNCTION_57	IF_13	CALL_39
0x4001a5c	          0x4889df	                            mov rdi, rbx	      2336	obj-elf.c	FUNCTION_57	IF_13	IF_14	CALL_40
0x4001a5f	      0xe800000000	                          call 0x4001a64	      2336	obj-elf.c	FUNCTION_57	IF_13	IF_14	CALL_40
0x4001a64	            0x85c0	                           test eax, eax	      2336	obj-elf.c	FUNCTION_57	IF_13	IF_14	CALL_40
0x4001a66	            0x742f	                            je 0x4001a97	      2336	obj-elf.c	FUNCTION_57	IF_13	IF_14	CALL_40
0x4001a68	          0x4889df	                            mov rdi, rbx	      2337	obj-elf.c	FUNCTION_57	IF_13	IF_14	CALL_42
0x4001a6b	      0xe800000000	                          call 0x4001a70	      2337	obj-elf.c	FUNCTION_57	IF_13	IF_14	CALL_42
0x4001a70	          0x4889c3	                            mov rbx, rax	      2337	obj-elf.c	FUNCTION_57	IF_13	IF_14	CALL_42
0x4001a73	      0xba05000000	                              mov edx, 5	      2337	obj-elf.c	FUNCTION_57	IF_13	IF_14	CALL_42
0x4001a78	      0xbe00000000	                              mov esi, 0	      2337	obj-elf.c	FUNCTION_57	IF_13	IF_14	CALL_42
0x4001a7d	      0xbf00000000	                              mov edi, 0	      2337	obj-elf.c	FUNCTION_57	IF_13	IF_14	CALL_42
0x4001a82	      0xe800000000	                          call 0x4001a87	      2337	obj-elf.c	FUNCTION_57	IF_13	IF_14	CALL_42
0x4001a87	          0x4889de	                            mov rsi, rbx	      2337	obj-elf.c	FUNCTION_57	IF_13	IF_14	CALL_42
0x4001a8a	          0x4889c7	                            mov rdi, rax	      2337	obj-elf.c	FUNCTION_57	IF_13	IF_14	CALL_42
0x4001a8d	      0xb800000000	                              mov eax, 0	      2337	obj-elf.c	FUNCTION_57	IF_13	IF_14	CALL_42
0x4001a92	      0xe800000000	                          call 0x4001a97	      2337	obj-elf.c	FUNCTION_57	IF_13	IF_14	CALL_42
0x4001a97	        0x4883c408	                              add rsp, 8	      2357	obj-elf.c	FUNCTION_57
0x4001a9b	              0x5b	                                 pop rbx	      2357	obj-elf.c	FUNCTION_57
0x4001a9c	              0x5d	                                 pop rbp	      2357	obj-elf.c	FUNCTION_57
0x4001a9d	            0x415c	                                 pop r12	      2357	obj-elf.c	FUNCTION_57
0x4001a9f	            0x415d	                                 pop r13	      2357	obj-elf.c	FUNCTION_57
0x4001aa1	              0xc3	                                     ret	      2357	obj-elf.c	FUNCTION_57
elf_begin	DO,0:FOR,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:IF,0:CALL,9	25
0x400005b	        0x4883ec08	                              sub rsp, 8	       198	obj-elf.c	FUNCTION_1
0x400005f	      0xbe00000000	                              mov esi, 0	       202	obj-elf.c	FUNCTION_1	CALL_1
0x4000064	    0x488b3d000000	            mov rdi, qword [0x0400006b] 	       202	obj-elf.c	FUNCTION_1	CALL_1
0x400006b	      0xe800000000	                          call 0x4000070	       202	obj-elf.c	FUNCTION_1	CALL_1
0x4000070	          0x4889c7	                            mov rdi, rax	       203	obj-elf.c	FUNCTION_1	CALL_3
0x4000073	      0xe800000000	                          call 0x4000078	       203	obj-elf.c	FUNCTION_1	CALL_3
0x4000078	          0x4889c7	                            mov rdi, rax	       203	obj-elf.c	FUNCTION_1	CALL_3
0x400007b	      0xe800000000	                          call 0x4000080	       203	obj-elf.c	FUNCTION_1	CALL_3
0x4000080	      0xbe00000000	                              mov esi, 0	       204	obj-elf.c	FUNCTION_1	CALL_4
0x4000085	    0x488b3d000000	            mov rdi, qword [0x0400008c] 	       204	obj-elf.c	FUNCTION_1	CALL_4
0x400008c	      0xe800000000	                          call 0x4000091	       204	obj-elf.c	FUNCTION_1	CALL_4
0x4000091	          0x4889c7	                            mov rdi, rax	       205	obj-elf.c	FUNCTION_1	CALL_6
0x4000094	      0xe800000000	                          call 0x4000099	       205	obj-elf.c	FUNCTION_1	CALL_6
0x4000099	          0x4889c7	                            mov rdi, rax	       205	obj-elf.c	FUNCTION_1	CALL_6
0x400009c	      0xe800000000	                          call 0x40000a1	       205	obj-elf.c	FUNCTION_1	CALL_6
0x40000a1	      0xbe00000000	                              mov esi, 0	       206	obj-elf.c	FUNCTION_1	CALL_7
0x40000a6	    0x488b3d000000	            mov rdi, qword [0x040000ad] 	       206	obj-elf.c	FUNCTION_1	CALL_7
0x40000ad	      0xe800000000	                          call 0x40000b2	       206	obj-elf.c	FUNCTION_1	CALL_7
0x40000b2	          0x4889c7	                            mov rdi, rax	       207	obj-elf.c	FUNCTION_1	CALL_9
0x40000b5	      0xe800000000	                          call 0x40000ba	       207	obj-elf.c	FUNCTION_1	CALL_9
0x40000ba	          0x4889c7	                            mov rdi, rax	       207	obj-elf.c	FUNCTION_1	CALL_9
0x40000bd	      0xe800000000	                          call 0x40000c2	       207	obj-elf.c	FUNCTION_1	CALL_9
0x40000c2	    0x48c705000000	               mov qword [0x040000cd], 0	       208	obj-elf.c	FUNCTION_1
0x40000cd	        0x4883c408	                              add rsp, 8	       209	obj-elf.c	FUNCTION_1
0x40000d1	              0xc3	                                     ret	       209	obj-elf.c	FUNCTION_1
get_sym_from_input_line_and_check	DO,0:FOR,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:IF,1:CALL,5	43
0x4000271	              0x55	                                push rbp	       408	obj-elf.c	FUNCTION_15
0x4000272	              0x53	                                push rbx	       408	obj-elf.c	FUNCTION_15
0x4000273	        0x4883ec18	                           sub rsp, 0x18	       408	obj-elf.c	FUNCTION_15
0x4000277	    0x64488b042528	                mov rax, qword fs:[0x28]	       408	obj-elf.c	FUNCTION_15
0x4000280	      0x4889442408	                mov qword [rsp + 8], rax	       408	obj-elf.c	FUNCTION_15
0x4000285	            0x31c0	                            xor eax, eax	       408	obj-elf.c	FUNCTION_15
0x4000287	          0x4889e7	                            mov rdi, rsp	       413	obj-elf.c	FUNCTION_15	CALL_1
0x400028a	      0xe800000000	                          call 0x400028f	       413	obj-elf.c	FUNCTION_15	CALL_1
0x400028f	            0x89c5	                            mov ebp, eax	       413	obj-elf.c	FUNCTION_15	CALL_1
0x4000291	        0x488b3c24	                    mov rdi, qword [rsp]	       414	obj-elf.c	FUNCTION_15	CALL_2
0x4000295	      0xe800000000	                          call 0x400029a	       414	obj-elf.c	FUNCTION_15	CALL_2
0x400029a	          0x4889c3	                            mov rbx, rax	       414	obj-elf.c	FUNCTION_15	CALL_2
0x400029d	    0x488b05000000	            mov rax, qword [0x040002a4] 	       415	obj-elf.c	FUNCTION_15
0x40002a4	          0x408828	                     mov byte [rax], bpl	       415	obj-elf.c	FUNCTION_15
0x40002a7	    0x488b05000000	            mov rax, qword [0x040002ae] 	       416	obj-elf.c	FUNCTION_15	CALL_3
0x40002ae	          0x803822	                    cmp byte [rax], 0x22	       416	obj-elf.c	FUNCTION_15	CALL_3
0x40002b1	            0x750b	                           jne 0x40002be	       416	obj-elf.c	FUNCTION_15	CALL_3
0x40002b3	        0x4883c001	                              add rax, 1	       416	obj-elf.c	FUNCTION_15	CALL_3
0x40002b7	    0x488905000000	            mov qword [0x040002be], rax 	       416	obj-elf.c	FUNCTION_15	CALL_3
0x40002be	    0x488b05000000	            mov rax, qword [0x040002c5] 	       416	obj-elf.c	FUNCTION_15	CALL_3
0x40002c5	          0x803820	                    cmp byte [rax], 0x20	       416	obj-elf.c	FUNCTION_15	CALL_3
0x40002c8	            0x750b	                           jne 0x40002d5	       416	obj-elf.c	FUNCTION_15	CALL_3
0x40002ca	        0x4883c001	                              add rax, 1	       416	obj-elf.c	FUNCTION_15	CALL_3
0x40002ce	    0x488905000000	            mov qword [0x040002d5], rax 	       416	obj-elf.c	FUNCTION_15	CALL_3
0x40002d5	    0x488b05000000	            mov rax, qword [0x040002dc] 	       419	obj-elf.c	FUNCTION_15	IF_1
0x40002dc	        0x48390424	                    cmp qword [rsp], rax	       419	obj-elf.c	FUNCTION_15	IF_1
0x40002e0	            0x7521	                           jne 0x4000303	       419	obj-elf.c	FUNCTION_15	IF_1
0x40002e2	      0xba05000000	                              mov edx, 5	       420	obj-elf.c	FUNCTION_15	CALL_5
0x40002e7	      0xbe00000000	                              mov esi, 0	       420	obj-elf.c	FUNCTION_15	CALL_5
0x40002ec	      0xbf00000000	                              mov edi, 0	       420	obj-elf.c	FUNCTION_15	CALL_5
0x40002f1	      0xe800000000	                          call 0x40002f6	       420	obj-elf.c	FUNCTION_15	CALL_5
0x40002f6	          0x4889c7	                            mov rdi, rax	       420	obj-elf.c	FUNCTION_15	CALL_5
0x40002f9	      0xb800000000	                              mov eax, 0	       420	obj-elf.c	FUNCTION_15	CALL_5
0x40002fe	      0xe800000000	                          call 0x4000303	       420	obj-elf.c	FUNCTION_15	CALL_5
0x4000303	          0x4889d8	                            mov rax, rbx	       422	obj-elf.c	FUNCTION_15
0x4000306	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       422	obj-elf.c	FUNCTION_15
0x400030b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       422	obj-elf.c	FUNCTION_15
0x4000314	            0x7405	                            je 0x400031b	       422	obj-elf.c	FUNCTION_15
0x4000316	      0xe800000000	                          call 0x400031b	       422	obj-elf.c	FUNCTION_15
0x400031b	        0x4883c418	                           add rsp, 0x18	       422	obj-elf.c	FUNCTION_15
0x400031f	              0x5b	                                 pop rbx	       422	obj-elf.c	FUNCTION_15
0x4000320	              0x5d	                                 pop rbp	       422	obj-elf.c	FUNCTION_15
0x4000321	              0xc3	                                     ret	       422	obj-elf.c	FUNCTION_15
obj_elf_size	DO,0:FOR,0:SWITCH,0:functions,0:ELSE,1:WHILE,0:IF,4:CALL,17	105
0x4000b36	            0x4154	                                push r12	      1875	obj-elf.c	FUNCTION_48
0x4000b38	              0x55	                                push rbp	      1875	obj-elf.c	FUNCTION_48
0x4000b39	              0x53	                                push rbx	      1875	obj-elf.c	FUNCTION_48
0x4000b3a	        0x4883ec40	                           sub rsp, 0x40	      1875	obj-elf.c	FUNCTION_48
0x4000b3e	    0x64488b042528	                mov rax, qword fs:[0x28]	      1875	obj-elf.c	FUNCTION_48
0x4000b47	      0x4889442438	             mov qword [rsp + 0x38], rax	      1875	obj-elf.c	FUNCTION_48
0x4000b4c	            0x31c0	                            xor eax, eax	      1875	obj-elf.c	FUNCTION_48
0x4000b4e	      0x488d7c2408	                      lea rdi, [rsp + 8]	      1877	obj-elf.c	FUNCTION_48	CALL_1
0x4000b53	      0xe800000000	                          call 0x4000b58	      1877	obj-elf.c	FUNCTION_48	CALL_1
0x4000b58	            0x89c5	                            mov ebp, eax	      1877	obj-elf.c	FUNCTION_48	CALL_1
0x4000b5a	    0x488b1d000000	            mov rbx, qword [0x04000b61] 	      1882	obj-elf.c	FUNCTION_48
0x4000b61	            0x8803	                      mov byte [rbx], al	      1883	obj-elf.c	FUNCTION_48
0x4000b63	    0x488b05000000	            mov rax, qword [0x04000b6a] 	      1884	obj-elf.c	FUNCTION_48	CALL_2
0x4000b6a	          0x803822	                    cmp byte [rax], 0x22	      1884	obj-elf.c	FUNCTION_48	CALL_2
0x4000b6d	            0x750b	                           jne 0x4000b7a	      1884	obj-elf.c	FUNCTION_48	CALL_2
0x4000b6f	        0x4883c001	                              add rax, 1	      1884	obj-elf.c	FUNCTION_48	CALL_2
0x4000b73	    0x488905000000	            mov qword [0x04000b7a], rax 	      1884	obj-elf.c	FUNCTION_48	CALL_2
0x4000b7a	    0x488b05000000	            mov rax, qword [0x04000b81] 	      1884	obj-elf.c	FUNCTION_48	CALL_2
0x4000b81	          0x803820	                    cmp byte [rax], 0x20	      1884	obj-elf.c	FUNCTION_48	CALL_2
0x4000b84	            0x750b	                           jne 0x4000b91	      1884	obj-elf.c	FUNCTION_48	CALL_2
0x4000b86	        0x4883c001	                              add rax, 1	      1884	obj-elf.c	FUNCTION_48	CALL_2
0x4000b8a	    0x488905000000	            mov qword [0x04000b91], rax 	      1884	obj-elf.c	FUNCTION_48	CALL_2
0x4000b91	    0x488b05000000	            mov rax, qword [0x04000b98] 	      1885	obj-elf.c	FUNCTION_48	IF_1
0x4000b98	          0x80382c	                    cmp byte [rax], 0x2c	      1885	obj-elf.c	FUNCTION_48	IF_1
0x4000b9b	            0x7439	                            je 0x4000bd6	      1885	obj-elf.c	FUNCTION_48	IF_1
0x4000b9d	          0xc60300	                       mov byte [rbx], 0	      1887	obj-elf.c	FUNCTION_48	IF_1
0x4000ba0	      0x4c8b642408	                mov r12, qword [rsp + 8]	      1888	obj-elf.c	FUNCTION_48	IF_1	CALL_4
0x4000ba5	      0xba05000000	                              mov edx, 5	      1888	obj-elf.c	FUNCTION_48	IF_1	CALL_4
0x4000baa	      0xbe00000000	                              mov esi, 0	      1888	obj-elf.c	FUNCTION_48	IF_1	CALL_4
0x4000baf	      0xbf00000000	                              mov edi, 0	      1888	obj-elf.c	FUNCTION_48	IF_1	CALL_4
0x4000bb4	      0xe800000000	                          call 0x4000bb9	      1888	obj-elf.c	FUNCTION_48	IF_1	CALL_4
0x4000bb9	          0x4c89e6	                            mov rsi, r12	      1888	obj-elf.c	FUNCTION_48	IF_1	CALL_4
0x4000bbc	          0x4889c7	                            mov rdi, rax	      1888	obj-elf.c	FUNCTION_48	IF_1	CALL_4
0x4000bbf	      0xb800000000	                              mov eax, 0	      1888	obj-elf.c	FUNCTION_48	IF_1	CALL_4
0x4000bc4	      0xe800000000	                          call 0x4000bc9	      1888	obj-elf.c	FUNCTION_48	IF_1	CALL_4
0x4000bc9	          0x40882b	                     mov byte [rbx], bpl	      1889	obj-elf.c	FUNCTION_48	IF_1
0x4000bcc	      0xe800000000	                          call 0x4000bd1	      1890	obj-elf.c	FUNCTION_48	IF_1	CALL_5
0x4000bd1	      0xe9ff000000	                           jmp 0x4000cd5	      1890	obj-elf.c	FUNCTION_48	IF_1	CALL_5
0x4000bd6	        0x4883c001	                              add rax, 1	      1893	obj-elf.c	FUNCTION_48
0x4000bda	    0x488905000000	            mov qword [0x04000be1], rax 	      1893	obj-elf.c	FUNCTION_48
0x4000be1	      0xba01000000	                              mov edx, 1	      1894	obj-elf.c	FUNCTION_48	CALL_6
0x4000be6	      0x488d742410	                   lea rsi, [rsp + 0x10]	      1894	obj-elf.c	FUNCTION_48	CALL_6
0x4000beb	      0xbf00000000	                              mov edi, 0	      1894	obj-elf.c	FUNCTION_48	CALL_6
0x4000bf0	      0xe800000000	                          call 0x4000bf5	      1894	obj-elf.c	FUNCTION_48	CALL_6
0x4000bf5	      0x807c242801	                cmp byte [rsp + 0x28], 1	      1895	obj-elf.c	FUNCTION_48	IF_2
0x4000bfa	            0x752f	                           jne 0x4000c2b	      1895	obj-elf.c	FUNCTION_48	IF_2
0x4000bfc	      0xba05000000	                              mov edx, 5	      1897	obj-elf.c	FUNCTION_48	IF_2	CALL_8
0x4000c01	      0xbe00000000	                              mov esi, 0	      1897	obj-elf.c	FUNCTION_48	IF_2	CALL_8
0x4000c06	      0xbf00000000	                              mov edi, 0	      1897	obj-elf.c	FUNCTION_48	IF_2	CALL_8
0x4000c0b	      0xe800000000	                          call 0x4000c10	      1897	obj-elf.c	FUNCTION_48	IF_2	CALL_8
0x4000c10	          0x4889c7	                            mov rdi, rax	      1897	obj-elf.c	FUNCTION_48	IF_2	CALL_8
0x4000c13	      0xb800000000	                              mov eax, 0	      1897	obj-elf.c	FUNCTION_48	IF_2	CALL_8
0x4000c18	      0xe800000000	                          call 0x4000c1d	      1897	obj-elf.c	FUNCTION_48	IF_2	CALL_8
0x4000c1d	      0xc644242802	                mov byte [rsp + 0x28], 2	      1898	obj-elf.c	FUNCTION_48	IF_2
0x4000c22	    0x48c744242000	               mov qword [rsp + 0x20], 0	      1899	obj-elf.c	FUNCTION_48	IF_2
0x4000c2b	          0xc60300	                       mov byte [rbx], 0	      1901	obj-elf.c	FUNCTION_48
0x4000c2e	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1902	obj-elf.c	FUNCTION_48	CALL_9
0x4000c33	      0xe800000000	                          call 0x4000c38	      1902	obj-elf.c	FUNCTION_48	CALL_9
0x4000c38	          0x4989c4	                            mov r12, rax	      1902	obj-elf.c	FUNCTION_48	CALL_9
0x4000c3b	          0x40882b	                     mov byte [rbx], bpl	      1903	obj-elf.c	FUNCTION_48
0x4000c3e	      0x807c242802	                cmp byte [rsp + 0x28], 2	      1904	obj-elf.c	FUNCTION_48	IF_3
0x4000c43	            0x7543	                           jne 0x4000c88	      1904	obj-elf.c	FUNCTION_48	IF_3
0x4000c45	          0x4889c7	                            mov rdi, rax	      1906	obj-elf.c	FUNCTION_48	IF_3	CALL_10
0x4000c48	      0xe800000000	                          call 0x4000c4d	      1906	obj-elf.c	FUNCTION_48	IF_3	CALL_10
0x4000c4d	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      1906	obj-elf.c	FUNCTION_48	IF_3	CALL_10
0x4000c52	        0x48895038	             mov qword [rax + 0x38], rdx	      1906	obj-elf.c	FUNCTION_48	IF_3	CALL_10
0x4000c56	          0x4c89e7	                            mov rdi, r12	      1907	obj-elf.c	FUNCTION_48	IF_3	IF_4	CALL_11
0x4000c59	      0xe800000000	                          call 0x4000c5e	      1907	obj-elf.c	FUNCTION_48	IF_3	IF_4	CALL_11
0x4000c5e	      0x4883780800	                  cmp qword [rax + 8], 0	      1907	obj-elf.c	FUNCTION_48	IF_3	IF_4	CALL_11
0x4000c63	            0x746b	                            je 0x4000cd0	      1907	obj-elf.c	FUNCTION_48	IF_3	IF_4	CALL_11
0x4000c65	          0x4c89e7	                            mov rdi, r12	      1909	obj-elf.c	FUNCTION_48	IF_3	IF_4	CALL_12
0x4000c68	      0xe800000000	                          call 0x4000c6d	      1909	obj-elf.c	FUNCTION_48	IF_3	IF_4	CALL_12
0x4000c6d	        0x488b7808	                mov rdi, qword [rax + 8]	      1909	obj-elf.c	FUNCTION_48	IF_3	IF_4	CALL_12
0x4000c71	      0xe800000000	                          call 0x4000c76	      1909	obj-elf.c	FUNCTION_48	IF_3	IF_4	CALL_12
0x4000c76	          0x4c89e7	                            mov rdi, r12	      1910	obj-elf.c	FUNCTION_48	IF_3	IF_4	CALL_13
0x4000c79	      0xe800000000	                          call 0x4000c7e	      1910	obj-elf.c	FUNCTION_48	IF_3	IF_4	CALL_13
0x4000c7e	    0x48c740080000	                  mov qword [rax + 8], 0	      1910	obj-elf.c	FUNCTION_48	IF_3	IF_4	CALL_13
0x4000c86	            0xeb48	                           jmp 0x4000cd0	      1910	obj-elf.c	FUNCTION_48	IF_3	IF_4	CALL_13
0x4000c88	          0x4889c7	                            mov rdi, rax	      1915	obj-elf.c	FUNCTION_48	ELSE_1	CALL_15
0x4000c8b	      0xe800000000	                          call 0x4000c90	      1915	obj-elf.c	FUNCTION_48	ELSE_1	CALL_15
0x4000c90	          0x4889c3	                            mov rbx, rax	      1915	obj-elf.c	FUNCTION_48	ELSE_1	CALL_15
0x4000c93	      0xbf20000000	                           mov edi, 0x20	      1915	obj-elf.c	FUNCTION_48	ELSE_1	CALL_15
0x4000c98	      0xe800000000	                          call 0x4000c9d	      1915	obj-elf.c	FUNCTION_48	ELSE_1	CALL_15
0x4000c9d	        0x48894308	                mov qword [rbx + 8], rax	      1915	obj-elf.c	FUNCTION_48	ELSE_1	CALL_15
0x4000ca1	          0x4c89e7	                            mov rdi, r12	      1916	obj-elf.c	FUNCTION_48	ELSE_1	CALL_16
0x4000ca4	      0xe800000000	                          call 0x4000ca9	      1916	obj-elf.c	FUNCTION_48	ELSE_1	CALL_16
0x4000ca9	        0x488b4008	                mov rax, qword [rax + 8]	      1916	obj-elf.c	FUNCTION_48	ELSE_1	CALL_16
0x4000cad	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      1916	obj-elf.c	FUNCTION_48	ELSE_1	CALL_16
0x4000cb2	          0x488910	                    mov qword [rax], rdx	      1916	obj-elf.c	FUNCTION_48	ELSE_1	CALL_16
0x4000cb5	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      1916	obj-elf.c	FUNCTION_48	ELSE_1	CALL_16
0x4000cba	        0x48895008	                mov qword [rax + 8], rdx	      1916	obj-elf.c	FUNCTION_48	ELSE_1	CALL_16
0x4000cbe	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      1916	obj-elf.c	FUNCTION_48	ELSE_1	CALL_16
0x4000cc3	        0x48895010	             mov qword [rax + 0x10], rdx	      1916	obj-elf.c	FUNCTION_48	ELSE_1	CALL_16
0x4000cc7	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      1916	obj-elf.c	FUNCTION_48	ELSE_1	CALL_16
0x4000ccc	        0x48895018	             mov qword [rax + 0x18], rdx	      1916	obj-elf.c	FUNCTION_48	ELSE_1	CALL_16
0x4000cd0	      0xe800000000	                          call 0x4000cd5	      1918	obj-elf.c	FUNCTION_48	CALL_17
0x4000cd5	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      1919	obj-elf.c	FUNCTION_48
0x4000cda	    0x644833042528	                xor rax, qword fs:[0x28]	      1919	obj-elf.c	FUNCTION_48
0x4000ce3	            0x7405	                            je 0x4000cea	      1919	obj-elf.c	FUNCTION_48
0x4000ce5	      0xe800000000	                          call 0x4000cea	      1919	obj-elf.c	FUNCTION_48
0x4000cea	        0x4883c440	                           add rsp, 0x40	      1919	obj-elf.c	FUNCTION_48
0x4000cee	              0x5b	                                 pop rbx	      1919	obj-elf.c	FUNCTION_48
0x4000cef	              0x5d	                                 pop rbp	      1919	obj-elf.c	FUNCTION_48
0x4000cf0	            0x415c	                                 pop r12	      1919	obj-elf.c	FUNCTION_48
0x4000cf2	              0xc3	                                     ret	      1919	obj-elf.c	FUNCTION_48
obj_elf_version	DO,0:FOR,0:SWITCH,0:functions,0:ELSE,1:WHILE,1:IF,1:CALL,20	90
0x4001550	            0x4155	                                push r13	      1814	obj-elf.c	FUNCTION_47
0x4001552	            0x4154	                                push r12	      1814	obj-elf.c	FUNCTION_47
0x4001554	              0x55	                                push rbp	      1814	obj-elf.c	FUNCTION_47
0x4001555	              0x53	                                push rbx	      1814	obj-elf.c	FUNCTION_47
0x4001556	        0x4883ec08	                              sub rsp, 8	      1814	obj-elf.c	FUNCTION_47
0x400155a	    0x488b2d000000	            mov rbp, qword [0x04001561] 	      1818	obj-elf.c	FUNCTION_47
0x4001561	    0x448b25000000	           mov r12d, dword [0x04001568] 	      1819	obj-elf.c	FUNCTION_47
0x4001568	    0x488b05000000	            mov rax, qword [0x0400156f] 	      1824	obj-elf.c	FUNCTION_47	CALL_1
0x400156f	          0x803820	                    cmp byte [rax], 0x20	      1824	obj-elf.c	FUNCTION_47	CALL_1
0x4001572	            0x750b	                           jne 0x400157f	      1824	obj-elf.c	FUNCTION_47	CALL_1
0x4001574	        0x4883c001	                              add rax, 1	      1824	obj-elf.c	FUNCTION_47	CALL_1
0x4001578	    0x488905000000	            mov qword [0x0400157f], rax 	      1824	obj-elf.c	FUNCTION_47	CALL_1
0x400157f	    0x488b3d000000	            mov rdi, qword [0x04001586] 	      1825	obj-elf.c	FUNCTION_47	IF_1
0x4001586	          0x803f22	                    cmp byte [rdi], 0x22	      1825	obj-elf.c	FUNCTION_47	IF_1
0x4001589	     0xf8509010000	                           jne 0x4001698	      1825	obj-elf.c	FUNCTION_47	IF_1
0x400158f	        0x4c8d6f01	                      lea r13, [rdi + 1]	      1829	obj-elf.c	FUNCTION_47	IF_1
0x4001593	    0x4c892d000000	            mov qword [0x0400159a], r13 	      1829	obj-elf.c	FUNCTION_47	IF_1
0x400159a	      0xe800000000	                          call 0x400159f	      1832	obj-elf.c	FUNCTION_47	IF_1	WHILE_1	CALL_3
0x400159f	      0x3dff000000	                           cmp eax, 0xff	      1832	obj-elf.c	FUNCTION_47	IF_1	WHILE_1	CALL_3
0x40015a4	            0x76f4	                           jbe 0x400159a	      1832	obj-elf.c	FUNCTION_47	IF_1	WHILE_1	CALL_3
0x40015a6	    0x488b05000000	            mov rax, qword [0x040015ad] 	      1834	obj-elf.c	FUNCTION_47	IF_1
0x40015ad	           0xfb610	                   movzx edx, byte [rax]	      1834	obj-elf.c	FUNCTION_47	IF_1
0x40015b0	          0xc60000	                       mov byte [rax], 0	      1835	obj-elf.c	FUNCTION_47	IF_1
0x40015b3	    0x488b05000000	            mov rax, qword [0x040015ba] 	      1836	obj-elf.c	FUNCTION_47	IF_1
0x40015ba	        0xc640ff00	                   mov byte [rax - 1], 0	      1836	obj-elf.c	FUNCTION_47	IF_1
0x40015be	    0x488b05000000	            mov rax, qword [0x040015c5] 	      1837	obj-elf.c	FUNCTION_47	IF_1
0x40015c5	            0x8810	                      mov byte [rax], dl	      1837	obj-elf.c	FUNCTION_47	IF_1
0x40015c7	      0xbe00000000	                              mov esi, 0	      1840	obj-elf.c	FUNCTION_47	IF_1	CALL_4
0x40015cc	      0xbf00000000	                              mov edi, 0	      1840	obj-elf.c	FUNCTION_47	IF_1	CALL_4
0x40015d1	      0xe800000000	                          call 0x40015d6	      1840	obj-elf.c	FUNCTION_47	IF_1	CALL_4
0x40015d6	          0x4889c3	                            mov rbx, rax	      1840	obj-elf.c	FUNCTION_47	IF_1	CALL_4
0x40015d9	      0xba08010000	                          mov edx, 0x108	      1841	obj-elf.c	FUNCTION_47	IF_1	CALL_5
0x40015de	          0x4889c6	                            mov rsi, rax	      1841	obj-elf.c	FUNCTION_47	IF_1	CALL_5
0x40015e1	    0x488b3d000000	            mov rdi, qword [0x040015e8] 	      1841	obj-elf.c	FUNCTION_47	IF_1	CALL_5
0x40015e8	      0xe800000000	                          call 0x40015ed	      1841	obj-elf.c	FUNCTION_47	IF_1	CALL_5
0x40015ed	      0xbe02000000	                              mov esi, 2	      1844	obj-elf.c	FUNCTION_47	IF_1	CALL_6
0x40015f2	          0x4889df	                            mov rdi, rbx	      1844	obj-elf.c	FUNCTION_47	IF_1	CALL_6
0x40015f5	      0xe800000000	                          call 0x40015fa	      1844	obj-elf.c	FUNCTION_47	IF_1	CALL_6
0x40015fa	      0xb800000000	                              mov eax, 0	      1847	obj-elf.c	FUNCTION_47	IF_1	CALL_7
0x40015ff	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1847	obj-elf.c	FUNCTION_47	IF_1	CALL_7
0x4001606	          0x4c89ef	                            mov rdi, r13	      1847	obj-elf.c	FUNCTION_47	IF_1	CALL_7
0x4001609	            0xf2ae	              repne scasb al, byte [rdi]	      1847	obj-elf.c	FUNCTION_47	IF_1	CALL_7
0x400160b	            0x89cb	                            mov ebx, ecx	      1851	obj-elf.c	FUNCTION_47	IF_1
0x400160d	            0xf7d3	                                 not ebx	      1851	obj-elf.c	FUNCTION_47	IF_1
0x400160f	      0xbf04000000	                              mov edi, 4	      1854	obj-elf.c	FUNCTION_47	IF_1	CALL_8
0x4001614	      0xe800000000	                          call 0x4001619	      1854	obj-elf.c	FUNCTION_47	IF_1	CALL_8
0x4001619	      0xba04000000	                              mov edx, 4	      1855	obj-elf.c	FUNCTION_47	IF_1	CALL_9
0x400161e	          0x4889de	                            mov rsi, rbx	      1855	obj-elf.c	FUNCTION_47	IF_1	CALL_9
0x4001621	          0x4889c7	                            mov rdi, rax	      1855	obj-elf.c	FUNCTION_47	IF_1	CALL_9
0x4001624	      0xe800000000	                          call 0x4001629	      1855	obj-elf.c	FUNCTION_47	IF_1	CALL_9
0x4001629	      0xbf04000000	                              mov edi, 4	      1856	obj-elf.c	FUNCTION_47	IF_1	CALL_10
0x400162e	      0xe800000000	                          call 0x4001633	      1856	obj-elf.c	FUNCTION_47	IF_1	CALL_10
0x4001633	      0xba04000000	                              mov edx, 4	      1857	obj-elf.c	FUNCTION_47	IF_1	CALL_11
0x4001638	      0xbe00000000	                              mov esi, 0	      1857	obj-elf.c	FUNCTION_47	IF_1	CALL_11
0x400163d	          0x4889c7	                            mov rdi, rax	      1857	obj-elf.c	FUNCTION_47	IF_1	CALL_11
0x4001640	      0xe800000000	                          call 0x4001645	      1857	obj-elf.c	FUNCTION_47	IF_1	CALL_11
0x4001645	      0xbf04000000	                              mov edi, 4	      1858	obj-elf.c	FUNCTION_47	IF_1	CALL_12
0x400164a	      0xe800000000	                          call 0x400164f	      1858	obj-elf.c	FUNCTION_47	IF_1	CALL_12
0x400164f	      0xba04000000	                              mov edx, 4	      1859	obj-elf.c	FUNCTION_47	IF_1	CALL_13
0x4001654	      0xbe01000000	                              mov esi, 1	      1859	obj-elf.c	FUNCTION_47	IF_1	CALL_13
0x4001659	          0x4889c7	                            mov rdi, rax	      1859	obj-elf.c	FUNCTION_47	IF_1	CALL_13
0x400165c	      0xe800000000	                          call 0x4001661	      1859	obj-elf.c	FUNCTION_47	IF_1	CALL_13
0x4001661	          0x4889df	                            mov rdi, rbx	      1860	obj-elf.c	FUNCTION_47	IF_1	CALL_14
0x4001664	      0xe800000000	                          call 0x4001669	      1860	obj-elf.c	FUNCTION_47	IF_1	CALL_14
0x4001669	          0x4889da	                            mov rdx, rbx	        53	string3.h	FUNCTION_72	CALL_3
0x400166c	          0x4c89ee	                            mov rsi, r13	        53	string3.h	FUNCTION_72	CALL_3
0x400166f	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_72	CALL_3
0x4001672	      0xe800000000	                          call 0x4001677	        53	string3.h	FUNCTION_72	CALL_3
0x4001677	      0xba00000000	                              mov edx, 0	      1863	obj-elf.c	FUNCTION_47	IF_1	CALL_16
0x400167c	      0xbe00000000	                              mov esi, 0	      1863	obj-elf.c	FUNCTION_47	IF_1	CALL_16
0x4001681	      0xbf02000000	                              mov edi, 2	      1863	obj-elf.c	FUNCTION_47	IF_1	CALL_16
0x4001686	      0xe800000000	                          call 0x400168b	      1863	obj-elf.c	FUNCTION_47	IF_1	CALL_16
0x400168b	          0x4489e6	                           mov esi, r12d	      1865	obj-elf.c	FUNCTION_47	IF_1	CALL_17
0x400168e	          0x4889ef	                            mov rdi, rbp	      1865	obj-elf.c	FUNCTION_47	IF_1	CALL_17
0x4001691	      0xe800000000	                          call 0x4001696	      1865	obj-elf.c	FUNCTION_47	IF_1	CALL_17
0x4001696	            0xeb21	                           jmp 0x40016b9	      1865	obj-elf.c	FUNCTION_47	IF_1	CALL_17
0x4001698	      0xba05000000	                              mov edx, 5	      1868	obj-elf.c	FUNCTION_47	CALL_19
0x400169d	      0xbe00000000	                              mov esi, 0	      1868	obj-elf.c	FUNCTION_47	CALL_19
0x40016a2	      0xbf00000000	                              mov edi, 0	      1868	obj-elf.c	FUNCTION_47	CALL_19
0x40016a7	      0xe800000000	                          call 0x40016ac	      1868	obj-elf.c	FUNCTION_47	CALL_19
0x40016ac	          0x4889c7	                            mov rdi, rax	      1868	obj-elf.c	FUNCTION_47	CALL_19
0x40016af	      0xb800000000	                              mov eax, 0	      1868	obj-elf.c	FUNCTION_47	CALL_19
0x40016b4	      0xe800000000	                          call 0x40016b9	      1868	obj-elf.c	FUNCTION_47	CALL_19
0x40016b9	      0xe800000000	                          call 0x40016be	      1870	obj-elf.c	FUNCTION_47	CALL_20
0x40016be	        0x4883c408	                              add rsp, 8	      1871	obj-elf.c	FUNCTION_47
0x40016c2	              0x5b	                                 pop rbx	      1871	obj-elf.c	FUNCTION_47
0x40016c3	              0x5d	                                 pop rbp	      1871	obj-elf.c	FUNCTION_47
0x40016c4	            0x415c	                                 pop r12	      1871	obj-elf.c	FUNCTION_47
0x40016c6	            0x415d	                                 pop r13	      1871	obj-elf.c	FUNCTION_47
0x40016c8	              0xc3	                                     ret	      1871	obj-elf.c	FUNCTION_47
obj_elf_tls_common	DO,0:FOR,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:IF,1:CALL,2	11
0x40000e5	        0x4883ec08	                              sub rsp, 8	       390	obj-elf.c	FUNCTION_13
0x40000e9	      0xbe00000000	                              mov esi, 0	       391	obj-elf.c	FUNCTION_13	CALL_1
0x40000ee	      0xbf00000000	                              mov edi, 0	       391	obj-elf.c	FUNCTION_13	CALL_1
0x40000f3	      0xe800000000	                          call 0x40000f8	       391	obj-elf.c	FUNCTION_13	CALL_1
0x40000f8	          0x4885c0	                           test rax, rax	       393	obj-elf.c	FUNCTION_13	IF_1
0x40000fb	            0x740f	                            je 0x400010c	       393	obj-elf.c	FUNCTION_13	IF_1
0x40000fd	          0x4889c7	                            mov rdi, rax	       394	obj-elf.c	FUNCTION_13	CALL_2
0x4000100	      0xe800000000	                          call 0x4000105	       394	obj-elf.c	FUNCTION_13	CALL_2
0x4000105	    0x814818000004	          or dword [rax + 0x18], 0x40000	       394	obj-elf.c	FUNCTION_13	CALL_2
0x400010c	        0x4883c408	                              add rsp, 8	       395	obj-elf.c	FUNCTION_13
0x4000110	              0xc3	                                     ret	       395	obj-elf.c	FUNCTION_13
obj_elf_struct	DO,0:FOR,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:IF,0:CALL,3	8
0x400019e	        0x4883ec08	                              sub rsp, 8	      1272	obj-elf.c	FUNCTION_28
0x40001a2	    0x488b05000000	            mov rax, qword [0x040001a9] 	      1277	obj-elf.c	FUNCTION_28
0x40001a9	    0x488905000000	            mov qword [0x040001b0], rax 	      1277	obj-elf.c	FUNCTION_28
0x40001b0	    0x8b0500000000	            mov eax, dword [0x040001b6] 	      1278	obj-elf.c	FUNCTION_28
0x40001b6	    0x890500000000	            mov dword [0x040001bc], eax 	      1278	obj-elf.c	FUNCTION_28
0x40001bc	      0xe800000000	                          call 0x40001c1	      1279	obj-elf.c	FUNCTION_28	CALL_2
0x40001c1	        0x4883c408	                              add rsp, 8	      1284	obj-elf.c	FUNCTION_28
0x40001c5	              0xc3	                                     ret	      1284	obj-elf.c	FUNCTION_28
elf_frob_file_before_adjust	DO,0:FOR,1:SWITCH,0:functions,0:ELSE,1:WHILE,0:IF,6:CALL,14	74
0x4001d86	              0x55	                                push rbp	      2508	obj-elf.c	FUNCTION_62
0x4001d87	              0x53	                                push rbx	      2508	obj-elf.c	FUNCTION_62
0x4001d88	        0x4883ec08	                              sub rsp, 8	      2508	obj-elf.c	FUNCTION_62
0x4001d8c	    0x488b1d000000	            mov rbx, qword [0x04001d93] 	      2509	obj-elf.c	FUNCTION_62	IF_1
0x4001d93	          0x4885db	                           test rbx, rbx	      2509	obj-elf.c	FUNCTION_62	IF_1
0x4001d96	     0xf84e6000000	                            je 0x4001e82	      2509	obj-elf.c	FUNCTION_62	IF_1
0x4001d9c	    0x48c7c5ffffff	             mov rbp, 0xffffffffffffffff	      2528	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	IF_4	CALL_6
0x4001da3	          0x4889df	                            mov rdi, rbx	      2514	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	CALL_2
0x4001da6	      0xe800000000	                          call 0x4001dab	      2514	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	CALL_2
0x4001dab	            0x85c0	                           test eax, eax	      2514	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	CALL_2
0x4001dad	     0xf85bb000000	                           jne 0x4001e6e	      2514	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	CALL_2
0x4001db3	          0x4889df	                            mov rdi, rbx	      2516	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	CALL_3
0x4001db6	      0xe800000000	                          call 0x4001dbb	      2516	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	CALL_3
0x4001dbb	      0x4883781000	               cmp qword [rax + 0x10], 0	      2516	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	CALL_3
0x4001dc0	            0x7476	                            je 0x4001e38	      2516	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	CALL_3
0x4001dc2	          0x4889df	                            mov rdi, rbx	      2524	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	CALL_5
0x4001dc5	      0xe800000000	                          call 0x4001dca	      2524	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	CALL_5
0x4001dca	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      2524	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	CALL_5
0x4001dce	      0xbe40000000	                           mov esi, 0x40	      2524	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	CALL_5
0x4001dd3	      0xe800000000	                          call 0x4001dd8	      2524	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	CALL_5
0x4001dd8	          0x4989c0	                             mov r8, rax	      2524	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	CALL_5
0x4001ddb	          0x4885c0	                           test rax, rax	      2526	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	IF_4
0x4001dde	            0x742c	                            je 0x4001e0c	      2526	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	IF_4
0x4001de0	        0x80780140	                cmp byte [rax + 1], 0x40	      2526	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	IF_4
0x4001de4	            0x7526	                           jne 0x4001e0c	      2526	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	IF_4
0x4001de6	        0x80780240	                cmp byte [rax + 2], 0x40	      2526	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	IF_4
0x4001dea	            0x7520	                           jne 0x4001e0c	      2526	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	IF_4
0x4001dec	        0x488d7003	                      lea rsi, [rax + 3]	      2528	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	IF_4	CALL_6
0x4001df0	      0xb800000000	                              mov eax, 0	      2528	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	IF_4	CALL_6
0x4001df5	          0x4889e9	                            mov rcx, rbp	      2528	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	IF_4	CALL_6
0x4001df8	          0x4889f7	                            mov rdi, rsi	      2528	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	IF_4	CALL_6
0x4001dfb	            0xf2ae	              repne scasb al, byte [rdi]	      2528	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	IF_4	CALL_6
0x4001dfd	          0x48f7d1	                                 not rcx	      2528	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	IF_4	CALL_6
0x4001e00	          0x4889ca	                            mov rdx, rcx	      2528	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	IF_4	CALL_6
0x4001e03	        0x498d7801	                       lea rdi, [r8 + 1]	        59	string3.h	FUNCTION_73	CALL_3
0x4001e07	      0xe800000000	                          call 0x4001e0c	        59	string3.h	FUNCTION_73	CALL_3
0x4001e0c	          0x4889df	                            mov rdi, rbx	      2531	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	IF_5	CALL_8
0x4001e0f	      0xe800000000	                          call 0x4001e14	      2531	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	IF_5	CALL_8
0x4001e14	            0x85c0	                           test eax, eax	      2531	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	IF_5	CALL_8
0x4001e16	            0x7556	                           jne 0x4001e6e	      2531	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	IF_5	CALL_8
0x4001e18	          0x4889df	                            mov rdi, rbx	      2532	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	IF_5	CALL_9
0x4001e1b	      0xe800000000	                          call 0x4001e20	      2532	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	IF_5	CALL_9
0x4001e20	            0x85c0	                           test eax, eax	      2532	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	IF_5	CALL_9
0x4001e22	            0x754a	                           jne 0x4001e6e	      2532	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	IF_5	CALL_9
0x4001e24	      0xba00000000	                              mov edx, 0	      2533	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	CALL_10
0x4001e29	      0xbe00000000	                              mov esi, 0	      2533	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	CALL_10
0x4001e2e	          0x4889df	                            mov rdi, rbx	      2533	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	CALL_10
0x4001e31	      0xe800000000	                          call 0x4001e36	      2533	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	CALL_10
0x4001e36	            0xeb36	                           jmp 0x4001e6e	      2533	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	IF_3	CALL_10
0x4001e38	          0x4889df	                            mov rdi, rbx	      2539	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	ELSE_1	IF_6	CALL_11
0x4001e3b	      0xe800000000	                          call 0x4001e40	      2539	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	ELSE_1	IF_6	CALL_11
0x4001e40	            0x85c0	                           test eax, eax	      2539	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	ELSE_1	IF_6	CALL_11
0x4001e42	            0x742a	                            je 0x4001e6e	      2539	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	ELSE_1	IF_6	CALL_11
0x4001e44	          0x4889df	                            mov rdi, rbx	      2540	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	ELSE_1	IF_6	CALL_12
0x4001e47	      0xe800000000	                          call 0x4001e4c	      2540	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	ELSE_1	IF_6	CALL_12
0x4001e4c	            0x85c0	                           test eax, eax	      2540	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	ELSE_1	IF_6	CALL_12
0x4001e4e	            0x751e	                           jne 0x4001e6e	      2540	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	ELSE_1	IF_6	CALL_12
0x4001e50	          0x4889df	                            mov rdi, rbx	      2541	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	ELSE_1	IF_6	CALL_13
0x4001e53	      0xe800000000	                          call 0x4001e58	      2541	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	ELSE_1	IF_6	CALL_13
0x4001e58	            0x85c0	                           test eax, eax	      2541	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	ELSE_1	IF_6	CALL_13
0x4001e5a	            0x7512	                           jne 0x4001e6e	      2541	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	ELSE_1	IF_6	CALL_13
0x4001e5c	      0xba00000000	                              mov edx, 0	      2542	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	ELSE_1	IF_6
0x4001e61	      0xbe00000000	                              mov esi, 0	      2542	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	ELSE_1	IF_6
0x4001e66	          0x4889df	                            mov rdi, rbx	      2542	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	ELSE_1	IF_6
0x4001e69	      0xe800000000	                          call 0x4001e6e	      2542	obj-elf.c	FUNCTION_62	IF_1	FOR_1	IF_2	ELSE_1	IF_6
0x4001e6e	          0x4889df	                            mov rdi, rbx	      2513	obj-elf.c	FUNCTION_62	IF_1	FOR_1	CALL_1
0x4001e71	      0xe800000000	                          call 0x4001e76	      2513	obj-elf.c	FUNCTION_62	IF_1	FOR_1	CALL_1
0x4001e76	          0x4889c3	                            mov rbx, rax	      2513	obj-elf.c	FUNCTION_62	IF_1	FOR_1	CALL_1
0x4001e79	          0x4885c0	                           test rax, rax	      2513	obj-elf.c	FUNCTION_62	IF_1	FOR_1	CALL_1
0x4001e7c	     0xf8521ffffff	                           jne 0x4001da3	      2513	obj-elf.c	FUNCTION_62	IF_1	FOR_1	CALL_1
0x4001e82	        0x4883c408	                              add rsp, 8	      2545	obj-elf.c	FUNCTION_62
0x4001e86	              0x5b	                                 pop rbx	      2545	obj-elf.c	FUNCTION_62
0x4001e87	              0x5d	                                 pop rbp	      2545	obj-elf.c	FUNCTION_62
0x4001e88	              0xc3	                                     ret	      2545	obj-elf.c	FUNCTION_62
elf_frob_file	DO,0:FOR,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:IF,0:CALL,2	7
0x4001aa2	        0x4883ec08	                              sub rsp, 8	      2496	obj-elf.c	FUNCTION_61
0x4001aa6	      0xba00000000	                              mov edx, 0	      2497	obj-elf.c	FUNCTION_61	CALL_1
0x4001aab	      0xbe00000000	                              mov esi, 0	      2497	obj-elf.c	FUNCTION_61	CALL_1
0x4001ab0	    0x488b3d000000	            mov rdi, qword [0x04001ab7] 	      2497	obj-elf.c	FUNCTION_61	CALL_1
0x4001ab7	      0xe800000000	                          call 0x4001abc	      2497	obj-elf.c	FUNCTION_61	CALL_1
0x4001abc	        0x4883c408	                              add rsp, 8	      2502	obj-elf.c	FUNCTION_61
0x4001ac0	              0xc3	                                     ret	      2502	obj-elf.c	FUNCTION_61
obj_elf_section_type	DO,0:FOR,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:IF,10:CALL,13	128
0x400132a	            0x4155	                                push r13	       873	obj-elf.c	FUNCTION_22
0x400132c	            0x4154	                                push r12	       873	obj-elf.c	FUNCTION_22
0x400132e	              0x55	                                push rbp	       873	obj-elf.c	FUNCTION_22
0x400132f	              0x53	                                push rbx	       873	obj-elf.c	FUNCTION_22
0x4001330	        0x4883ec18	                           sub rsp, 0x18	       873	obj-elf.c	FUNCTION_22
0x4001334	          0x4889fd	                            mov rbp, rdi	       873	obj-elf.c	FUNCTION_22
0x4001337	          0x4889f3	                            mov rbx, rsi	       873	obj-elf.c	FUNCTION_22
0x400133a	          0x4189d4	                           mov r12d, edx	       873	obj-elf.c	FUNCTION_22
0x400133d	    0x64488b042528	                mov rax, qword fs:[0x28]	       873	obj-elf.c	FUNCTION_22
0x4001346	      0x4889442408	                mov qword [rsp + 8], rax	       873	obj-elf.c	FUNCTION_22
0x400134b	            0x31c0	                            xor eax, eax	       873	obj-elf.c	FUNCTION_22
0x400134d	        0x4883fe08	                              cmp rsi, 8	       874	obj-elf.c	FUNCTION_22	IF_1	CALL_1
0x4001351	            0x7527	                           jne 0x400137a	       874	obj-elf.c	FUNCTION_22	IF_1	CALL_1
0x4001353	      0xbf00000000	                              mov edi, 0	       874	obj-elf.c	FUNCTION_22	IF_1	CALL_1
0x4001358	      0xb908000000	                              mov ecx, 8	       874	obj-elf.c	FUNCTION_22	IF_1	CALL_1
0x400135d	          0x4889ee	                            mov rsi, rbp	       874	obj-elf.c	FUNCTION_22	IF_1	CALL_1
0x4001360	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       874	obj-elf.c	FUNCTION_22	IF_1	CALL_1
0x4001362	           0xf97c1	                                 seta cl	       874	obj-elf.c	FUNCTION_22	IF_1	CALL_1
0x4001365	           0xf92c2	                                 setb dl	       874	obj-elf.c	FUNCTION_22	IF_1	CALL_1
0x4001368	      0xb801000000	                              mov eax, 1	       875	obj-elf.c	FUNCTION_22	IF_1
0x400136d	            0x38d1	                              cmp cl, dl	       874	obj-elf.c	FUNCTION_22	IF_1	CALL_1
0x400136f	     0xf85d0000000	                           jne 0x4001445	       874	obj-elf.c	FUNCTION_22	IF_1	CALL_1
0x4001375	      0xe966010000	                           jmp 0x40014e0	       874	obj-elf.c	FUNCTION_22	IF_1	CALL_1
0x400137a	        0x4883fe06	                              cmp rsi, 6	       876	obj-elf.c	FUNCTION_22	IF_2	CALL_2
0x400137e	            0x7527	                           jne 0x40013a7	       876	obj-elf.c	FUNCTION_22	IF_2	CALL_2
0x4001380	      0xbf00000000	                              mov edi, 0	       876	obj-elf.c	FUNCTION_22	IF_2	CALL_2
0x4001385	      0xb906000000	                              mov ecx, 6	       876	obj-elf.c	FUNCTION_22	IF_2	CALL_2
0x400138a	          0x4889ee	                            mov rsi, rbp	       876	obj-elf.c	FUNCTION_22	IF_2	CALL_2
0x400138d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       876	obj-elf.c	FUNCTION_22	IF_2	CALL_2
0x400138f	           0xf97c1	                                 seta cl	       876	obj-elf.c	FUNCTION_22	IF_2	CALL_2
0x4001392	           0xf92c2	                                 setb dl	       876	obj-elf.c	FUNCTION_22	IF_2	CALL_2
0x4001395	      0xb808000000	                              mov eax, 8	       877	obj-elf.c	FUNCTION_22	IF_2
0x400139a	            0x38d1	                              cmp cl, dl	       876	obj-elf.c	FUNCTION_22	IF_2	CALL_2
0x400139c	     0xf843e010000	                            je 0x40014e0	       876	obj-elf.c	FUNCTION_22	IF_2	CALL_2
0x40013a2	      0xe99e000000	                           jmp 0x4001445	       876	obj-elf.c	FUNCTION_22	IF_2	CALL_2
0x40013a7	        0x4883fe04	                              cmp rsi, 4	       878	obj-elf.c	FUNCTION_22	IF_3	CALL_3
0x40013ab	            0x7524	                           jne 0x40013d1	       878	obj-elf.c	FUNCTION_22	IF_3	CALL_3
0x40013ad	      0xbf00000000	                              mov edi, 0	       878	obj-elf.c	FUNCTION_22	IF_3	CALL_3
0x40013b2	      0xb904000000	                              mov ecx, 4	       878	obj-elf.c	FUNCTION_22	IF_3	CALL_3
0x40013b7	          0x4889ee	                            mov rsi, rbp	       878	obj-elf.c	FUNCTION_22	IF_3	CALL_3
0x40013ba	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       878	obj-elf.c	FUNCTION_22	IF_3	CALL_3
0x40013bc	           0xf97c1	                                 seta cl	       878	obj-elf.c	FUNCTION_22	IF_3	CALL_3
0x40013bf	           0xf92c2	                                 setb dl	       878	obj-elf.c	FUNCTION_22	IF_3	CALL_3
0x40013c2	      0xb807000000	                              mov eax, 7	       879	obj-elf.c	FUNCTION_22	IF_3
0x40013c7	            0x38d1	                              cmp cl, dl	       878	obj-elf.c	FUNCTION_22	IF_3	CALL_3
0x40013c9	     0xf8411010000	                            je 0x40014e0	       878	obj-elf.c	FUNCTION_22	IF_3	CALL_3
0x40013cf	            0xeb74	                           jmp 0x4001445	       878	obj-elf.c	FUNCTION_22	IF_3	CALL_3
0x40013d1	        0x4883fe0a	                            cmp rsi, 0xa	       880	obj-elf.c	FUNCTION_22	IF_4	CALL_4
0x40013d5	            0x7546	                           jne 0x400141d	       880	obj-elf.c	FUNCTION_22	IF_4	CALL_4
0x40013d7	      0xbf00000000	                              mov edi, 0	       880	obj-elf.c	FUNCTION_22	IF_4	CALL_4
0x40013dc	      0xb90a000000	                            mov ecx, 0xa	       880	obj-elf.c	FUNCTION_22	IF_4	CALL_4
0x40013e1	          0x4889ee	                            mov rsi, rbp	       880	obj-elf.c	FUNCTION_22	IF_4	CALL_4
0x40013e4	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       880	obj-elf.c	FUNCTION_22	IF_4	CALL_4
0x40013e6	           0xf97c1	                                 seta cl	       880	obj-elf.c	FUNCTION_22	IF_4	CALL_4
0x40013e9	           0xf92c2	                                 setb dl	       880	obj-elf.c	FUNCTION_22	IF_4	CALL_4
0x40013ec	      0xb80e000000	                            mov eax, 0xe	       881	obj-elf.c	FUNCTION_22	IF_4
0x40013f1	            0x38d1	                              cmp cl, dl	       880	obj-elf.c	FUNCTION_22	IF_4	CALL_4
0x40013f3	     0xf84e7000000	                            je 0x40014e0	       880	obj-elf.c	FUNCTION_22	IF_4	CALL_4
0x40013f9	      0xbf00000000	                              mov edi, 0	       882	obj-elf.c	FUNCTION_22	IF_5	CALL_5
0x40013fe	      0xb90a000000	                            mov ecx, 0xa	       882	obj-elf.c	FUNCTION_22	IF_5	CALL_5
0x4001403	          0x4889ee	                            mov rsi, rbp	       882	obj-elf.c	FUNCTION_22	IF_5	CALL_5
0x4001406	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       882	obj-elf.c	FUNCTION_22	IF_5	CALL_5
0x4001408	           0xf97c1	                                 seta cl	       882	obj-elf.c	FUNCTION_22	IF_5	CALL_5
0x400140b	           0xf92c2	                                 setb dl	       882	obj-elf.c	FUNCTION_22	IF_5	CALL_5
0x400140e	      0xb80f000000	                            mov eax, 0xf	       883	obj-elf.c	FUNCTION_22	IF_5
0x4001413	            0x38d1	                              cmp cl, dl	       882	obj-elf.c	FUNCTION_22	IF_5	CALL_5
0x4001415	     0xf84c5000000	                            je 0x40014e0	       882	obj-elf.c	FUNCTION_22	IF_5	CALL_5
0x400141b	            0xeb28	                           jmp 0x4001445	       882	obj-elf.c	FUNCTION_22	IF_5	CALL_5
0x400141d	        0x4883fe0d	                            cmp rsi, 0xd	       884	obj-elf.c	FUNCTION_22	IF_6	CALL_6
0x4001421	            0x7522	                           jne 0x4001445	       884	obj-elf.c	FUNCTION_22	IF_6	CALL_6
0x4001423	      0xbf00000000	                              mov edi, 0	       884	obj-elf.c	FUNCTION_22	IF_6	CALL_6
0x4001428	      0xb90d000000	                            mov ecx, 0xd	       884	obj-elf.c	FUNCTION_22	IF_6	CALL_6
0x400142d	          0x4889ee	                            mov rsi, rbp	       884	obj-elf.c	FUNCTION_22	IF_6	CALL_6
0x4001430	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       884	obj-elf.c	FUNCTION_22	IF_6	CALL_6
0x4001432	           0xf97c1	                                 seta cl	       884	obj-elf.c	FUNCTION_22	IF_6	CALL_6
0x4001435	           0xf92c2	                                 setb dl	       884	obj-elf.c	FUNCTION_22	IF_6	CALL_6
0x4001438	      0xb810000000	                           mov eax, 0x10	       885	obj-elf.c	FUNCTION_22	IF_6
0x400143d	            0x38d1	                              cmp cl, dl	       884	obj-elf.c	FUNCTION_22	IF_6	CALL_6
0x400143f	     0xf849b000000	                            je 0x40014e0	       884	obj-elf.c	FUNCTION_22	IF_6	CALL_6
0x4001445	          0x4889de	                            mov rsi, rbx	       889	obj-elf.c	FUNCTION_22	CALL_7
0x4001448	          0x4889ef	                            mov rdi, rbp	       889	obj-elf.c	FUNCTION_22	CALL_7
0x400144b	      0xe800000000	                          call 0x4001450	       889	obj-elf.c	FUNCTION_22	CALL_7
0x4001450	            0x85c0	                           test eax, eax	       890	obj-elf.c	FUNCTION_22	IF_7
0x4001452	     0xf8988000000	                           jns 0x40014e0	       890	obj-elf.c	FUNCTION_22	IF_7
0x4001458	         0xfb64500	                   movzx eax, byte [rbp]	       895	obj-elf.c	FUNCTION_22	IF_8	CALL_8
0x400145c	    0xf68400000000	                test byte [rax + rax], 4	       895	obj-elf.c	FUNCTION_22	IF_8	CALL_8
0x4001464	            0x744a	                            je 0x40014b0	       895	obj-elf.c	FUNCTION_22	IF_8	CALL_8
0x4001466	      0xba00000000	                              mov edx, 0	       898	obj-elf.c	FUNCTION_22	IF_8	CALL_9
0x400146b	          0x4889e6	                            mov rsi, rsp	       898	obj-elf.c	FUNCTION_22	IF_8	CALL_9
0x400146e	          0x4889ef	                            mov rdi, rbp	       898	obj-elf.c	FUNCTION_22	IF_8	CALL_9
0x4001471	      0xe800000000	                          call 0x4001476	       898	obj-elf.c	FUNCTION_22	IF_8	CALL_9
0x4001476	          0x4989c5	                            mov r13, rax	       898	obj-elf.c	FUNCTION_22	IF_8	CALL_9
0x4001479	          0x4585e4	                         test r12d, r12d	       900	obj-elf.c	FUNCTION_22	IF_8	IF_9
0x400147c	            0x742d	                            je 0x40014ab	       900	obj-elf.c	FUNCTION_22	IF_8	IF_9
0x400147e	        0x488b0424	                    mov rax, qword [rsp]	       900	obj-elf.c	FUNCTION_22	IF_8	IF_9
0x4001482	          0x4829e8	                            sub rax, rbp	       900	obj-elf.c	FUNCTION_22	IF_8	IF_9
0x4001485	          0x4839c3	                            cmp rbx, rax	       900	obj-elf.c	FUNCTION_22	IF_8	IF_9
0x4001488	            0x7421	                            je 0x40014ab	       900	obj-elf.c	FUNCTION_22	IF_8	IF_9
0x400148a	      0xba05000000	                              mov edx, 5	       901	obj-elf.c	FUNCTION_22	IF_8	CALL_11
0x400148f	      0xbe00000000	                              mov esi, 0	       901	obj-elf.c	FUNCTION_22	IF_8	CALL_11
0x4001494	      0xbf00000000	                              mov edi, 0	       901	obj-elf.c	FUNCTION_22	IF_8	CALL_11
0x4001499	      0xe800000000	                          call 0x400149e	       901	obj-elf.c	FUNCTION_22	IF_8	CALL_11
0x400149e	          0x4889c7	                            mov rdi, rax	       901	obj-elf.c	FUNCTION_22	IF_8	CALL_11
0x40014a1	      0xb800000000	                              mov eax, 0	       901	obj-elf.c	FUNCTION_22	IF_8	CALL_11
0x40014a6	      0xe800000000	                          call 0x40014ab	       901	obj-elf.c	FUNCTION_22	IF_8	CALL_11
0x40014ab	          0x4489e8	                           mov eax, r13d	       903	obj-elf.c	FUNCTION_22	IF_8
0x40014ae	            0xeb30	                           jmp 0x40014e0	       903	obj-elf.c	FUNCTION_22	IF_8
0x40014b0	      0xb800000000	                              mov eax, 0	       908	obj-elf.c	FUNCTION_22
0x40014b5	          0x4585e4	                         test r12d, r12d	       906	obj-elf.c	FUNCTION_22	IF_10
0x40014b8	            0x7426	                            je 0x40014e0	       906	obj-elf.c	FUNCTION_22	IF_10
0x40014ba	      0xba05000000	                              mov edx, 5	       907	obj-elf.c	FUNCTION_22	CALL_13
0x40014bf	      0xbe00000000	                              mov esi, 0	       907	obj-elf.c	FUNCTION_22	CALL_13
0x40014c4	      0xbf00000000	                              mov edi, 0	       907	obj-elf.c	FUNCTION_22	CALL_13
0x40014c9	      0xe800000000	                          call 0x40014ce	       907	obj-elf.c	FUNCTION_22	CALL_13
0x40014ce	          0x4889c7	                            mov rdi, rax	       907	obj-elf.c	FUNCTION_22	CALL_13
0x40014d1	      0xb800000000	                              mov eax, 0	       907	obj-elf.c	FUNCTION_22	CALL_13
0x40014d6	      0xe800000000	                          call 0x40014db	       907	obj-elf.c	FUNCTION_22	CALL_13
0x40014db	      0xb800000000	                              mov eax, 0	       908	obj-elf.c	FUNCTION_22
0x40014e0	      0x488b5c2408	                mov rbx, qword [rsp + 8]	       909	obj-elf.c	FUNCTION_22
0x40014e5	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       909	obj-elf.c	FUNCTION_22
0x40014ee	            0x7405	                            je 0x40014f5	       909	obj-elf.c	FUNCTION_22
0x40014f0	      0xe800000000	                          call 0x40014f5	       909	obj-elf.c	FUNCTION_22
0x40014f5	        0x4883c418	                           add rsp, 0x18	       909	obj-elf.c	FUNCTION_22
0x40014f9	              0x5b	                                 pop rbx	       909	obj-elf.c	FUNCTION_22
0x40014fa	              0x5d	                                 pop rbp	       909	obj-elf.c	FUNCTION_22
0x40014fb	            0x415c	                                 pop r12	       909	obj-elf.c	FUNCTION_22
0x40014fd	            0x415d	                                 pop r13	       909	obj-elf.c	FUNCTION_22
0x40014ff	              0xc3	                                     ret	       909	obj-elf.c	FUNCTION_22
elf_obj_symbol_new_hook	DO,0:FOR,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:IF,1:CALL,2	6
0x4000201	        0x4883ec08	                              sub rsp, 8	      1772	obj-elf.c	FUNCTION_45
0x4000205	      0xe800000000	                          call 0x400020a	      1775	obj-elf.c	FUNCTION_45	CALL_1
0x400020a	    0x48c740080000	                  mov qword [rax + 8], 0	      1776	obj-elf.c	FUNCTION_45
0x4000212	    0x48c740100000	               mov qword [rax + 0x10], 0	      1777	obj-elf.c	FUNCTION_45
0x400021a	        0x4883c408	                              add rsp, 8	      1783	obj-elf.c	FUNCTION_45
0x400021e	              0xc3	                                     ret	      1783	obj-elf.c	FUNCTION_45
obj_elf_text	DO,0:FOR,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:IF,0:CALL,3	8
0x4001528	        0x4883ec08	                              sub rsp, 8	      1254	obj-elf.c	FUNCTION_27
0x400152c	    0x488b05000000	            mov rax, qword [0x04001533] 	      1259	obj-elf.c	FUNCTION_27
0x4001533	    0x488905000000	            mov qword [0x0400153a], rax 	      1259	obj-elf.c	FUNCTION_27
0x400153a	    0x8b0500000000	            mov eax, dword [0x04001540] 	      1260	obj-elf.c	FUNCTION_27
0x4001540	    0x890500000000	            mov dword [0x04001546], eax 	      1260	obj-elf.c	FUNCTION_27
0x4001546	      0xe800000000	                          call 0x400154b	      1261	obj-elf.c	FUNCTION_27	CALL_2
0x400154b	        0x4883c408	                              add rsp, 8	      1266	obj-elf.c	FUNCTION_27
0x400154f	              0xc3	                                     ret	      1266	obj-elf.c	FUNCTION_27
obj_elf_get_vtable_inherit	DO,0:FOR,0:SWITCH,0:functions,0:ELSE,1:WHILE,0:IF,6:CALL,20	132
0x40030aa	            0x4155	                                push r13	      1458	obj-elf.c	FUNCTION_35
0x40030ac	            0x4154	                                push r12	      1458	obj-elf.c	FUNCTION_35
0x40030ae	              0x55	                                push rbp	      1458	obj-elf.c	FUNCTION_35
0x40030af	              0x53	                                push rbx	      1458	obj-elf.c	FUNCTION_35
0x40030b0	        0x4883ec28	                           sub rsp, 0x28	      1458	obj-elf.c	FUNCTION_35
0x40030b4	    0x64488b042528	                mov rax, qword fs:[0x28]	      1458	obj-elf.c	FUNCTION_35
0x40030bd	      0x4889442418	             mov qword [rsp + 0x18], rax	      1458	obj-elf.c	FUNCTION_35
0x40030c2	            0x31c0	                            xor eax, eax	      1458	obj-elf.c	FUNCTION_35
0x40030c4	    0x488b05000000	            mov rax, qword [0x040030cb] 	      1463	obj-elf.c	FUNCTION_35	IF_1
0x40030cb	          0x803823	                    cmp byte [rax], 0x23	      1463	obj-elf.c	FUNCTION_35	IF_1
0x40030ce	            0x750b	                           jne 0x40030db	      1463	obj-elf.c	FUNCTION_35	IF_1
0x40030d0	        0x4883c001	                              add rax, 1	      1464	obj-elf.c	FUNCTION_35	IF_1
0x40030d4	    0x488905000000	            mov qword [0x040030db], rax 	      1464	obj-elf.c	FUNCTION_35	IF_1
0x40030db	      0x488d7c2408	                      lea rdi, [rsp + 8]	      1466	obj-elf.c	FUNCTION_35	CALL_1
0x40030e0	      0xe800000000	                          call 0x40030e5	      1466	obj-elf.c	FUNCTION_35	CALL_1
0x40030e5	          0x4189c4	                           mov r12d, eax	      1466	obj-elf.c	FUNCTION_35	CALL_1
0x40030e8	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1467	obj-elf.c	FUNCTION_35	CALL_2
0x40030ed	      0xe800000000	                          call 0x40030f2	      1467	obj-elf.c	FUNCTION_35	CALL_2
0x40030f2	          0x4889c3	                            mov rbx, rax	      1467	obj-elf.c	FUNCTION_35	CALL_2
0x40030f5	          0x4885c0	                           test rax, rax	      1473	obj-elf.c	FUNCTION_35	IF_2	CALL_3
0x40030f8	            0x7412	                            je 0x400310c	      1473	obj-elf.c	FUNCTION_35	IF_2	CALL_3
0x40030fa	          0x4889c7	                            mov rdi, rax	      1473	obj-elf.c	FUNCTION_35	IF_2	CALL_3
0x40030fd	      0xe800000000	                          call 0x4003102	      1473	obj-elf.c	FUNCTION_35	IF_2	CALL_3
0x4003102	      0xbd00000000	                              mov ebp, 0	      1461	obj-elf.c	FUNCTION_35
0x4003107	          0x4885c0	                           test rax, rax	      1473	obj-elf.c	FUNCTION_35	IF_2	CALL_3
0x400310a	            0x752e	                           jne 0x400313a	      1473	obj-elf.c	FUNCTION_35	IF_2	CALL_3
0x400310c	      0x488b6c2408	                mov rbp, qword [rsp + 8]	      1475	obj-elf.c	FUNCTION_35	IF_2	CALL_5
0x4003111	      0xba05000000	                              mov edx, 5	      1475	obj-elf.c	FUNCTION_35	IF_2	CALL_5
0x4003116	      0xbe00000000	                              mov esi, 0	      1475	obj-elf.c	FUNCTION_35	IF_2	CALL_5
0x400311b	      0xbf00000000	                              mov edi, 0	      1475	obj-elf.c	FUNCTION_35	IF_2	CALL_5
0x4003120	      0xe800000000	                          call 0x4003125	      1475	obj-elf.c	FUNCTION_35	IF_2	CALL_5
0x4003125	          0x4889ee	                            mov rsi, rbp	      1475	obj-elf.c	FUNCTION_35	IF_2	CALL_5
0x4003128	          0x4889c7	                            mov rdi, rax	      1475	obj-elf.c	FUNCTION_35	IF_2	CALL_5
0x400312b	      0xb800000000	                              mov eax, 0	      1475	obj-elf.c	FUNCTION_35	IF_2	CALL_5
0x4003130	      0xe800000000	                          call 0x4003135	      1475	obj-elf.c	FUNCTION_35	IF_2	CALL_5
0x4003135	      0xbd01000000	                              mov ebp, 1	      1477	obj-elf.c	FUNCTION_35	IF_2
0x400313a	    0x488b05000000	            mov rax, qword [0x04003141] 	      1480	obj-elf.c	FUNCTION_35
0x4003141	          0x448820	                    mov byte [rax], r12b	      1480	obj-elf.c	FUNCTION_35
0x4003144	    0x488b05000000	            mov rax, qword [0x0400314b] 	      1482	obj-elf.c	FUNCTION_35	CALL_6
0x400314b	          0x803822	                    cmp byte [rax], 0x22	      1482	obj-elf.c	FUNCTION_35	CALL_6
0x400314e	            0x750b	                           jne 0x400315b	      1482	obj-elf.c	FUNCTION_35	CALL_6
0x4003150	        0x4883c001	                              add rax, 1	      1482	obj-elf.c	FUNCTION_35	CALL_6
0x4003154	    0x488905000000	            mov qword [0x0400315b], rax 	      1482	obj-elf.c	FUNCTION_35	CALL_6
0x400315b	    0x488b05000000	            mov rax, qword [0x04003162] 	      1482	obj-elf.c	FUNCTION_35	CALL_6
0x4003162	          0x803820	                    cmp byte [rax], 0x20	      1482	obj-elf.c	FUNCTION_35	CALL_6
0x4003165	            0x750b	                           jne 0x4003172	      1482	obj-elf.c	FUNCTION_35	CALL_6
0x4003167	        0x4883c001	                              add rax, 1	      1482	obj-elf.c	FUNCTION_35	CALL_6
0x400316b	    0x488905000000	            mov qword [0x04003172], rax 	      1482	obj-elf.c	FUNCTION_35	CALL_6
0x4003172	    0x488b05000000	            mov rax, qword [0x04003179] 	      1483	obj-elf.c	FUNCTION_35	IF_3
0x4003179	          0x80382c	                    cmp byte [rax], 0x2c	      1483	obj-elf.c	FUNCTION_35	IF_3
0x400317c	            0x7430	                            je 0x40031ae	      1483	obj-elf.c	FUNCTION_35	IF_3
0x400317e	      0xba05000000	                              mov edx, 5	      1485	obj-elf.c	FUNCTION_35	IF_3	CALL_8
0x4003183	      0xbe00000000	                              mov esi, 0	      1485	obj-elf.c	FUNCTION_35	IF_3	CALL_8
0x4003188	      0xbf00000000	                              mov edi, 0	      1485	obj-elf.c	FUNCTION_35	IF_3	CALL_8
0x400318d	      0xe800000000	                          call 0x4003192	      1485	obj-elf.c	FUNCTION_35	IF_3	CALL_8
0x4003192	          0x4889c7	                            mov rdi, rax	      1485	obj-elf.c	FUNCTION_35	IF_3	CALL_8
0x4003195	      0xb800000000	                              mov eax, 0	      1485	obj-elf.c	FUNCTION_35	IF_3	CALL_8
0x400319a	      0xe800000000	                          call 0x400319f	      1485	obj-elf.c	FUNCTION_35	IF_3	CALL_8
0x400319f	      0xe800000000	                          call 0x40031a4	      1486	obj-elf.c	FUNCTION_35	IF_3	CALL_9
0x40031a4	      0xb800000000	                              mov eax, 0	      1487	obj-elf.c	FUNCTION_35	IF_3
0x40031a9	      0xe900010000	                           jmp 0x40032ae	      1487	obj-elf.c	FUNCTION_35	IF_3
0x40031ae	        0x488d5001	                      lea rdx, [rax + 1]	      1490	obj-elf.c	FUNCTION_35
0x40031b2	    0x488915000000	            mov qword [0x040031b9], rdx 	      1490	obj-elf.c	FUNCTION_35
0x40031b9	        0x80780120	                cmp byte [rax + 1], 0x20	      1491	obj-elf.c	FUNCTION_35	CALL_10
0x40031bd	            0x750b	                           jne 0x40031ca	      1491	obj-elf.c	FUNCTION_35	CALL_10
0x40031bf	        0x4883c002	                              add rax, 2	      1491	obj-elf.c	FUNCTION_35	CALL_10
0x40031c3	    0x488905000000	            mov qword [0x040031ca], rax 	      1491	obj-elf.c	FUNCTION_35	CALL_10
0x40031ca	    0x488b05000000	            mov rax, qword [0x040031d1] 	      1493	obj-elf.c	FUNCTION_35	IF_4
0x40031d1	          0x803823	                    cmp byte [rax], 0x23	      1493	obj-elf.c	FUNCTION_35	IF_4
0x40031d4	            0x750b	                           jne 0x40031e1	      1493	obj-elf.c	FUNCTION_35	IF_4
0x40031d6	        0x4883c001	                              add rax, 1	      1494	obj-elf.c	FUNCTION_35	IF_4
0x40031da	    0x488905000000	            mov qword [0x040031e1], rax 	      1494	obj-elf.c	FUNCTION_35	IF_4
0x40031e1	    0x488b05000000	            mov rax, qword [0x040031e8] 	      1496	obj-elf.c	FUNCTION_35	IF_5
0x40031e8	          0x803830	                    cmp byte [rax], 0x30	      1496	obj-elf.c	FUNCTION_35	IF_5
0x40031eb	            0x752c	                           jne 0x4003219	      1496	obj-elf.c	FUNCTION_35	IF_5
0x40031ed	         0xfb64001	               movzx eax, byte [rax + 1]	      1497	obj-elf.c	FUNCTION_35	IF_5
0x40031f1	            0x84c0	                             test al, al	      1497	obj-elf.c	FUNCTION_35	IF_5
0x40031f3	            0x740d	                            je 0x4003202	      1497	obj-elf.c	FUNCTION_35	IF_5
0x40031f5	           0xfb6c0	                           movzx eax, al	      1498	obj-elf.c	FUNCTION_35	IF_5	CALL_11
0x40031f8	    0xf68400000000	            test byte [rax + rax], 0x40 	      1498	obj-elf.c	FUNCTION_35	IF_5	CALL_11
0x4003200	            0x7417	                            je 0x4003219	      1498	obj-elf.c	FUNCTION_35	IF_5	CALL_11
0x4003202	      0xbf00000000	                              mov edi, 0	      1500	obj-elf.c	FUNCTION_35	IF_5	CALL_12
0x4003207	      0xe800000000	                          call 0x400320c	      1500	obj-elf.c	FUNCTION_35	IF_5	CALL_12
0x400320c	          0x4989c5	                            mov r13, rax	      1500	obj-elf.c	FUNCTION_35	IF_5	CALL_12
0x400320f	    0x488305000000	               add qword [0x04003217], 1	      1501	obj-elf.c	FUNCTION_35	IF_5
0x4003217	            0xeb23	                           jmp 0x400323c	      1501	obj-elf.c	FUNCTION_35	IF_5
0x4003219	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1505	obj-elf.c	FUNCTION_35	ELSE_1	CALL_13
0x400321e	      0xe800000000	                          call 0x4003223	      1505	obj-elf.c	FUNCTION_35	ELSE_1	CALL_13
0x4003223	          0x4189c4	                           mov r12d, eax	      1505	obj-elf.c	FUNCTION_35	ELSE_1	CALL_13
0x4003226	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1506	obj-elf.c	FUNCTION_35	ELSE_1	CALL_14
0x400322b	      0xe800000000	                          call 0x4003230	      1506	obj-elf.c	FUNCTION_35	ELSE_1	CALL_14
0x4003230	          0x4989c5	                            mov r13, rax	      1506	obj-elf.c	FUNCTION_35	ELSE_1	CALL_14
0x4003233	        0x410fbefc	                         movsx edi, r12b	      1507	obj-elf.c	FUNCTION_35	ELSE_1	CALL_15
0x4003237	      0xe800000000	                          call 0x400323c	      1507	obj-elf.c	FUNCTION_35	ELSE_1	CALL_15
0x400323c	      0xe800000000	                          call 0x4003241	      1510	obj-elf.c	FUNCTION_35	CALL_16
0x4003241	          0x4084ed	                           test bpl, bpl	      1512	obj-elf.c	FUNCTION_35	IF_6
0x4003244	            0x7563	                           jne 0x40032a9	      1512	obj-elf.c	FUNCTION_35	IF_6
0x4003246	          0x4889df	                            mov rdi, rbx	      1515	obj-elf.c	FUNCTION_35	CALL_17
0x4003249	      0xe800000000	                          call 0x400324e	      1515	obj-elf.c	FUNCTION_35	CALL_17
0x400324e	        0x80781802	                cmp byte [rax + 0x18], 2	      1515	obj-elf.c	FUNCTION_35	CALL_17
0x4003252	            0x7414	                            je 0x4003268	      1515	obj-elf.c	FUNCTION_35	CALL_17
0x4003254	      0xba00000000	                              mov edx, 0	      1515	obj-elf.c	FUNCTION_35	CALL_17
0x4003259	      0xbeeb050000	                          mov esi, 0x5eb	      1515	obj-elf.c	FUNCTION_35	CALL_17
0x400325e	      0xbf00000000	                              mov edi, 0	      1515	obj-elf.c	FUNCTION_35	CALL_17
0x4003263	      0xe800000000	                          call 0x4003268	      1515	obj-elf.c	FUNCTION_35	CALL_17
0x4003268	          0x4889df	                            mov rdi, rbx	      1517	obj-elf.c	FUNCTION_35	CALL_20
0x400326b	      0xe800000000	                          call 0x4003270	      1517	obj-elf.c	FUNCTION_35	CALL_20
0x4003270	        0x488b6810	            mov rbp, qword [rax + 0x10] 	      1516	obj-elf.c	FUNCTION_35	CALL_19
0x4003274	          0x4889df	                            mov rdi, rbx	      1516	obj-elf.c	FUNCTION_35	CALL_19
0x4003277	      0xe800000000	                          call 0x400327c	      1516	obj-elf.c	FUNCTION_35	CALL_19
0x400327c	        0x4883ec08	                              sub rsp, 8	      1516	obj-elf.c	FUNCTION_35	CALL_19
0x4003280	      0x68a3050000	                              push 0x5a3	      1516	obj-elf.c	FUNCTION_35	CALL_19
0x4003285	    0x41b900000000	                              mov r9d, 0	      1516	obj-elf.c	FUNCTION_35	CALL_19
0x400328b	    0x41b800000000	                              mov r8d, 0	      1516	obj-elf.c	FUNCTION_35	CALL_19
0x4003291	          0x4c89e9	                            mov rcx, r13	      1516	obj-elf.c	FUNCTION_35	CALL_19
0x4003294	      0xba00000000	                              mov edx, 0	      1516	obj-elf.c	FUNCTION_35	CALL_19
0x4003299	            0x89ee	                            mov esi, ebp	      1516	obj-elf.c	FUNCTION_35	CALL_19
0x400329b	          0x4889c7	                            mov rdi, rax	      1516	obj-elf.c	FUNCTION_35	CALL_19
0x400329e	      0xe800000000	                          call 0x40032a3	      1516	obj-elf.c	FUNCTION_35	CALL_19
0x40032a3	        0x4883c410	                           add rsp, 0x10	      1516	obj-elf.c	FUNCTION_35	CALL_19
0x40032a7	            0xeb05	                           jmp 0x40032ae	      1516	obj-elf.c	FUNCTION_35	CALL_19
0x40032a9	      0xb800000000	                              mov eax, 0	      1513	obj-elf.c	FUNCTION_35	IF_6
0x40032ae	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1519	obj-elf.c	FUNCTION_35
0x40032b3	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1519	obj-elf.c	FUNCTION_35
0x40032bc	            0x7405	                            je 0x40032c3	      1519	obj-elf.c	FUNCTION_35
0x40032be	      0xe800000000	                          call 0x40032c3	      1519	obj-elf.c	FUNCTION_35
0x40032c3	        0x4883c428	                           add rsp, 0x28	      1519	obj-elf.c	FUNCTION_35
0x40032c7	              0x5b	                                 pop rbx	      1519	obj-elf.c	FUNCTION_35
0x40032c8	              0x5d	                                 pop rbp	      1519	obj-elf.c	FUNCTION_35
0x40032c9	            0x415c	                                 pop r12	      1519	obj-elf.c	FUNCTION_35
0x40032cb	            0x415d	                                 pop r13	      1519	obj-elf.c	FUNCTION_35
0x40032cd	              0xc3	                                     ret	      1519	obj-elf.c	FUNCTION_35
obj_elf_common	DO,0:FOR,0:SWITCH,0:functions,0:ELSE,1:WHILE,0:IF,1:CALL,2	13
0x40012f9	        0x4883ec08	                              sub rsp, 8	       381	obj-elf.c	FUNCTION_12
0x40012fd	    0x833d00000000	               cmp dword [0x04001304], 0	       382	obj-elf.c	FUNCTION_12	IF_1
0x4001304	            0x7410	                            je 0x4001316	       382	obj-elf.c	FUNCTION_12	IF_1
0x4001306	            0x85ff	                           test edi, edi	       382	obj-elf.c	FUNCTION_12	IF_1
0x4001308	            0x740c	                            je 0x4001316	       382	obj-elf.c	FUNCTION_12	IF_1
0x400130a	      0xbf00000000	                              mov edi, 0	       383	obj-elf.c	FUNCTION_12	CALL_1
0x400130f	      0xe800000000	                          call 0x4001314	       383	obj-elf.c	FUNCTION_12	CALL_1
0x4001314	            0xeb0f	                           jmp 0x4001325	       383	obj-elf.c	FUNCTION_12	CALL_1
0x4001316	      0xbe00000000	                              mov esi, 0	       385	obj-elf.c	FUNCTION_12	CALL_2
0x400131b	      0xbf00000000	                              mov edi, 0	       385	obj-elf.c	FUNCTION_12	CALL_2
0x4001320	      0xe800000000	                          call 0x4001325	       385	obj-elf.c	FUNCTION_12	CALL_2
0x4001325	        0x4883c408	                              add rsp, 8	       386	obj-elf.c	FUNCTION_12
0x4001329	              0xc3	                                     ret	       386	obj-elf.c	FUNCTION_12
elf_obj_read_begin_hook	DO,0:FOR,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:IF,1:CALL,1	1
0x400004f	            0xf3c3	                                     ret	      1763	obj-elf.c	FUNCTION_44
elf_process_stab	DO,0:FOR,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:IF,1:CALL,1	1
0x4000053	            0xf3c3	                                     ret	      2666	obj-elf.c	FUNCTION_65
elf_init_stab_section	DO,0:FOR,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:IF,1:CALL,1	4
0x400380e	        0x4883ec08	                              sub rsp, 8	      2685	obj-elf.c	FUNCTION_67
0x4003812	      0xe800000000	                          call 0x4003817	      2689	obj-elf.c	FUNCTION_67	CALL_1
0x4003817	        0x4883c408	                              add rsp, 8	      2690	obj-elf.c	FUNCTION_67
0x400381b	              0xc3	                                     ret	      2690	obj-elf.c	FUNCTION_67
obj_elf_visibility	DO,1:FOR,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:IF,2:CALL,5	38
0x4000550	              0x53	                                push rbx	       473	obj-elf.c	FUNCTION_18
0x4000551	            0x89fb	                            mov ebx, edi	       473	obj-elf.c	FUNCTION_18
0x4000553	      0xe819fdffff	call sym.get_sym_from_input_line_and_check	       481	obj-elf.c	FUNCTION_18	DO_1	CALL_1
0x4000558	          0x4889c7	                            mov rdi, rax	       483	obj-elf.c	FUNCTION_18	DO_1	CALL_2
0x400055b	      0xe800000000	                          call 0x4000560	       483	obj-elf.c	FUNCTION_18	DO_1	CALL_2
0x4000560	          0x488b10	                    mov rdx, qword [rax]	       484	obj-elf.c	FUNCTION_18	DO_1	CALL_3
0x4000563	          0x4885d2	                           test rdx, rdx	       484	obj-elf.c	FUNCTION_18	DO_1	CALL_3
0x4000566	            0x7419	                            je 0x4000581	       484	obj-elf.c	FUNCTION_18	DO_1	CALL_3
0x4000568	        0x488b4a08	                mov rcx, qword [rdx + 8]	       484	obj-elf.c	FUNCTION_18	DO_1	CALL_3
0x400056c	        0x83790805	                  cmp dword [rcx + 8], 5	       484	obj-elf.c	FUNCTION_18	DO_1	CALL_3
0x4000570	            0x750f	                           jne 0x4000581	       484	obj-elf.c	FUNCTION_18	DO_1	CALL_3
0x4000572	    0x4883baf80000	               cmp qword [rdx + 0xf8], 0	       484	obj-elf.c	FUNCTION_18	DO_1	CALL_3
0x400057a	            0x7405	                            je 0x4000581	       484	obj-elf.c	FUNCTION_18	DO_1	CALL_3
0x400057c	          0x4885c0	                           test rax, rax	       486	obj-elf.c	FUNCTION_18	DO_1
0x400057f	            0x7514	                           jne 0x4000595	       486	obj-elf.c	FUNCTION_18	DO_1
0x4000581	      0xba00000000	                              mov edx, 0	       486	obj-elf.c	FUNCTION_18	DO_1
0x4000586	      0xbee6010000	                          mov esi, 0x1e6	       486	obj-elf.c	FUNCTION_18	DO_1
0x400058b	      0xbf00000000	                              mov edi, 0	       486	obj-elf.c	FUNCTION_18	DO_1
0x4000590	      0xe800000000	                          call 0x4000595	       486	obj-elf.c	FUNCTION_18	DO_1
0x4000595	         0xfb65049	           movzx edx, byte [rax + 0x49] 	       489	obj-elf.c	FUNCTION_18	DO_1
0x4000599	          0x83e2fc	                     and edx, 0xfffffffc	       489	obj-elf.c	FUNCTION_18	DO_1
0x400059c	             0x9da	                             or edx, ebx	       489	obj-elf.c	FUNCTION_18	DO_1
0x400059e	          0x885049	               mov byte [rax + 0x49], dl	       489	obj-elf.c	FUNCTION_18	DO_1
0x40005a1	    0x488b05000000	            mov rax, qword [0x040005a8] 	       491	obj-elf.c	FUNCTION_18	DO_1
0x40005a8	          0x80382c	                    cmp byte [rax], 0x2c	       492	obj-elf.c	FUNCTION_18	DO_1	IF_1
0x40005ab	            0x752c	                           jne 0x40005d9	       492	obj-elf.c	FUNCTION_18	DO_1	IF_1
0x40005ad	        0x488d5001	                      lea rdx, [rax + 1]	       494	obj-elf.c	FUNCTION_18	DO_1	IF_1
0x40005b1	    0x488915000000	            mov qword [0x040005b8], rdx 	       494	obj-elf.c	FUNCTION_18	DO_1	IF_1
0x40005b8	        0x80780120	                cmp byte [rax + 1], 0x20	       496	obj-elf.c	FUNCTION_18	DO_1	IF_1	CALL_4
0x40005bc	            0x750b	                           jne 0x40005c9	       496	obj-elf.c	FUNCTION_18	DO_1	IF_1	CALL_4
0x40005be	        0x4883c002	                              add rax, 2	       496	obj-elf.c	FUNCTION_18	DO_1	IF_1	CALL_4
0x40005c2	    0x488905000000	            mov qword [0x040005c9], rax 	       496	obj-elf.c	FUNCTION_18	DO_1	IF_1	CALL_4
0x40005c9	    0x488b05000000	            mov rax, qword [0x040005d0] 	       498	obj-elf.c	FUNCTION_18	DO_1	IF_1	IF_2
0x40005d0	          0x80380a	                     cmp byte [rax], 0xa	       498	obj-elf.c	FUNCTION_18	DO_1	IF_1	IF_2
0x40005d3	     0xf857affffff	                           jne 0x4000553	       498	obj-elf.c	FUNCTION_18	DO_1	IF_1	IF_2
0x40005d9	      0xe800000000	                          call 0x40005de	       504	obj-elf.c	FUNCTION_18	CALL_5
0x40005de	              0x5b	                                 pop rbx	       505	obj-elf.c	FUNCTION_18
0x40005df	              0xc3	                                     ret	       505	obj-elf.c	FUNCTION_18
obj_elf_seen_attribute	DO,0:FOR,1:SWITCH,0:functions,0:ELSE,0:WHILE,0:IF,1:CALL,0	22
0x40033a9	            0x89f2	                            mov edx, esi	      1635	obj-elf.c	FUNCTION_41
0x40033ab	          0xc1ea06	                              shr edx, 6	      1635	obj-elf.c	FUNCTION_41
0x40033ae	    0x488b05000000	            mov rax, qword [0x040033b5] 	      1637	obj-elf.c	FUNCTION_41	FOR_1
0x40033b5	          0x4885c0	                           test rax, rax	      1637	obj-elf.c	FUNCTION_41	FOR_1
0x40033b8	            0x7429	                            je 0x40033e3	      1637	obj-elf.c	FUNCTION_41	FOR_1
0x40033ba	          0x397808	                cmp dword [rax + 8], edi	      1638	obj-elf.c	FUNCTION_41	FOR_1	IF_1
0x40033bd	            0x751a	                           jne 0x40033d9	      1638	obj-elf.c	FUNCTION_41	FOR_1	IF_1
0x40033bf	          0x3b500c	              cmp edx, dword [rax + 0xc]	      1638	obj-elf.c	FUNCTION_41	FOR_1	IF_1
0x40033c2	            0x7515	                           jne 0x40033d9	      1638	obj-elf.c	FUNCTION_41	FOR_1	IF_1
0x40033c4	      0xba01000000	                              mov edx, 1	      1639	obj-elf.c	FUNCTION_41	FOR_1	IF_1
0x40033c9	            0x89f1	                            mov ecx, esi	      1639	obj-elf.c	FUNCTION_41	FOR_1	IF_1
0x40033cb	          0x48d3e2	                             shl rdx, cl	      1639	obj-elf.c	FUNCTION_41	FOR_1	IF_1
0x40033ce	        0x48855010	           test qword [rax + 0x10], rdx 	      1639	obj-elf.c	FUNCTION_41	FOR_1	IF_1
0x40033d2	           0xf95c0	                                setne al	      1639	obj-elf.c	FUNCTION_41	FOR_1	IF_1
0x40033d5	           0xfb6c0	                           movzx eax, al	      1639	obj-elf.c	FUNCTION_41	FOR_1	IF_1
0x40033d8	              0xc3	                                     ret	      1639	obj-elf.c	FUNCTION_41	FOR_1	IF_1
0x40033d9	          0x488b00	                    mov rax, qword [rax]	      1637	obj-elf.c	FUNCTION_41	FOR_1
0x40033dc	          0x4885c0	                           test rax, rax	      1637	obj-elf.c	FUNCTION_41	FOR_1
0x40033df	            0x75d9	                           jne 0x40033ba	      1637	obj-elf.c	FUNCTION_41	FOR_1
0x40033e1	            0xf3c3	                                     ret	      1637	obj-elf.c	FUNCTION_41	FOR_1
0x40033e3	      0xb800000000	                              mov eax, 0	      1640	obj-elf.c	FUNCTION_41
0x40033e8	              0xc3	                                     ret	      1641	obj-elf.c	FUNCTION_41
obj_elf_vtable_entry	DO,0:FOR,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:IF,0:CALL,1	4
0x400339b	        0x4883ec08	                              sub rsp, 8	      1568	obj-elf.c	FUNCTION_38
0x400339f	      0xe800000000	                          call 0x40033a4	      1569	obj-elf.c	FUNCTION_38	CALL_1
0x40033a4	        0x4883c408	                              add rsp, 8	      1570	obj-elf.c	FUNCTION_38
0x40033a8	              0xc3	                                     ret	      1570	obj-elf.c	FUNCTION_38
elf_file_symbol	DO,0:FOR,0:SWITCH,0:functions,0:ELSE,1:WHILE,0:IF,3:CALL,15	108
0x4000f7e	            0x4156	                                push r14	       263	obj-elf.c	FUNCTION_10
0x4000f80	            0x4155	                                push r13	       263	obj-elf.c	FUNCTION_10
0x4000f82	            0x4154	                                push r12	       263	obj-elf.c	FUNCTION_10
0x4000f84	              0x55	                                push rbp	       263	obj-elf.c	FUNCTION_10
0x4000f85	              0x53	                                push rbx	       263	obj-elf.c	FUNCTION_10
0x4000f86	            0x85f6	                           test esi, esi	       264	obj-elf.c	FUNCTION_10	IF_1
0x4000f88	            0x741f	                            je 0x4000fa9	       264	obj-elf.c	FUNCTION_10	IF_1
0x4000f8a	    0x488b05000000	            mov rax, qword [0x04000f91] 	       265	obj-elf.c	FUNCTION_10	IF_1
0x4000f91	          0x4885c0	                           test rax, rax	       265	obj-elf.c	FUNCTION_10	IF_1
0x4000f94	            0x7413	                            je 0x4000fa9	       265	obj-elf.c	FUNCTION_10	IF_1
0x4000f96	        0x488b4008	                mov rax, qword [rax + 8]	       266	obj-elf.c	FUNCTION_10	IF_1
0x4000f9a	          0x4885c0	                           test rax, rax	       266	obj-elf.c	FUNCTION_10	IF_1
0x4000f9d	            0x740a	                            je 0x4000fa9	       266	obj-elf.c	FUNCTION_10	IF_1
0x4000f9f	        0xf6401940	           test byte [rax + 0x19], 0x40 	       267	obj-elf.c	FUNCTION_10	IF_1
0x4000fa3	     0xf856f010000	                           jne 0x4001118	       267	obj-elf.c	FUNCTION_10	IF_1
0x4000fa9	          0x4989fd	                            mov r13, rdi	       267	obj-elf.c	FUNCTION_10	IF_1
0x4000fac	      0xb900000000	                              mov ecx, 0	       272	obj-elf.c	FUNCTION_10	IF_1	CALL_1
0x4000fb1	      0xba00000000	                              mov edx, 0	       272	obj-elf.c	FUNCTION_10	IF_1	CALL_1
0x4000fb6	      0xbe00000000	                              mov esi, 0	       272	obj-elf.c	FUNCTION_10	IF_1	CALL_1
0x4000fbb	      0xe800000000	                          call 0x4000fc0	       272	obj-elf.c	FUNCTION_10	IF_1	CALL_1
0x4000fc0	          0x4989c4	                            mov r12, rax	       272	obj-elf.c	FUNCTION_10	IF_1	CALL_1
0x4000fc3	      0xbe00000000	                              mov esi, 0	       273	obj-elf.c	FUNCTION_10	IF_1	CALL_2
0x4000fc8	          0x4889c7	                            mov rdi, rax	       273	obj-elf.c	FUNCTION_10	IF_1	CALL_2
0x4000fcb	      0xe800000000	                          call 0x4000fd0	       273	obj-elf.c	FUNCTION_10	IF_1	CALL_2
0x4000fd0	    0x49c7c6ffffff	             mov r14, 0xffffffffffffffff	       275	obj-elf.c	FUNCTION_10	IF_1	CALL_3
0x4000fd7	      0xbd00000000	                              mov ebp, 0	       275	obj-elf.c	FUNCTION_10	IF_1	CALL_3
0x4000fdc	          0x4c89f1	                            mov rcx, r14	       275	obj-elf.c	FUNCTION_10	IF_1	CALL_3
0x4000fdf	          0x4c89ef	                            mov rdi, r13	       275	obj-elf.c	FUNCTION_10	IF_1	CALL_3
0x4000fe2	            0x89e8	                            mov eax, ebp	       275	obj-elf.c	FUNCTION_10	IF_1	CALL_3
0x4000fe4	            0xf2ae	              repne scasb al, byte [rdi]	       275	obj-elf.c	FUNCTION_10	IF_1	CALL_3
0x4000fe6	          0x48f7d1	                                 not rcx	       275	obj-elf.c	FUNCTION_10	IF_1	CALL_3
0x4000fe9	        0x4a8d1c31	                    lea rbx, [rcx + r14]	       275	obj-elf.c	FUNCTION_10	IF_1	CALL_3
0x4000fed	          0x4c89e7	                            mov rdi, r12	       276	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_5
0x4000ff0	      0xe800000000	                          call 0x4000ff5	       276	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_5
0x4000ff5	          0x4889c7	                            mov rdi, rax	       276	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_5
0x4000ff8	          0x4c89f1	                            mov rcx, r14	       276	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_5
0x4000ffb	            0x89e8	                            mov eax, ebp	       276	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_5
0x4000ffd	            0xf2ae	              repne scasb al, byte [rdi]	       276	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_5
0x4000fff	          0x48f7d1	                                 not rcx	       276	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_5
0x4001002	          0x4c01f1	                            add rcx, r14	       276	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_5
0x4001005	          0x4839cb	                            cmp rbx, rcx	       276	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_5
0x4001008	     0xf86a2000000	                           jbe 0x40010b0	       276	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_5
0x400100e	        0x4883c301	                              add rbx, 1	       278	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_6
0x4001012	    0x488b05000000	            mov rax, qword [0x04001019] 	       278	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_6
0x4001019	    0x482b05000000	             sub rax, qword [0x04001020]	       278	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_6
0x4001020	          0x4839c3	                            cmp rbx, rax	       278	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_6
0x4001023	            0x760d	                           jbe 0x4001032	       278	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_6
0x4001025	          0x4889de	                            mov rsi, rbx	       278	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_6
0x4001028	      0xbf00000000	                              mov edi, 0	       278	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_6
0x400102d	      0xe800000000	                          call 0x4001032	       278	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_6
0x4001032	          0x4889da	                            mov rdx, rbx	        53	string3.h	FUNCTION_72	CALL_3
0x4001035	          0x4c89ee	                            mov rsi, r13	        53	string3.h	FUNCTION_72	CALL_3
0x4001038	    0x488b3d000000	            mov rdi, qword [0x0400103f] 	        53	string3.h	FUNCTION_72	CALL_3
0x400103f	      0xe800000000	                          call 0x4001044	        53	string3.h	FUNCTION_72	CALL_3
0x4001044	    0x48031d000000	             add rbx, qword [0x0400104b]	       278	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_6
0x400104b	    0x488b35000000	            mov rsi, qword [0x04001052] 	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x4001052	          0x4839f3	                            cmp rbx, rsi	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x4001055	            0x7507	                           jne 0x400105e	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x4001057	    0x800d00000000	                 or byte [0x0400105e], 2	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x400105e	    0x488b05000000	            mov rax, qword [0x04001065] 	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x4001065	          0x4801c3	                            add rbx, rax	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x4001068	          0x48f7d0	                                 not rax	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x400106b	          0x4821c3	                            and rbx, rax	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x400106e	    0x48891d000000	            mov qword [0x04001075], rbx 	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x4001075	    0x488b05000000	            mov rax, qword [0x0400107c] 	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x400107c	    0x488b15000000	            mov rdx, qword [0x04001083] 	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x4001083	          0x4829c3	                            sub rbx, rax	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x4001086	          0x4889d7	                            mov rdi, rdx	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x4001089	          0x4829c7	                            sub rdi, rax	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x400108c	          0x4839fb	                            cmp rbx, rdi	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x400108f	            0x7607	                           jbe 0x4001098	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x4001091	    0x488915000000	            mov qword [0x04001098], rdx 	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x4001098	    0x488b05000000	            mov rax, qword [0x0400109f] 	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x400109f	    0x488905000000	            mov qword [0x040010a6], rax 	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x40010a6	          0x4c89e7	                            mov rdi, r12	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x40010a9	      0xe800000000	                          call 0x40010ae	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x40010ae	            0xeb13	                           jmp 0x40010c3	       279	obj-elf.c	FUNCTION_10	IF_1	IF_2	CALL_8
0x40010b0	          0x4c89e7	                            mov rdi, r12	       282	obj-elf.c	FUNCTION_10	IF_1	CALL_10
0x40010b3	      0xe800000000	                          call 0x40010b8	       282	obj-elf.c	FUNCTION_10	IF_1	CALL_10
0x40010b8	          0x4c89ee	                            mov rsi, r13	       110	string3.h	FUNCTION_78	CALL_3
0x40010bb	          0x4889c7	                            mov rdi, rax	       110	string3.h	FUNCTION_78	CALL_3
0x40010be	      0xe800000000	                          call 0x40010c3	       110	string3.h	FUNCTION_78	CALL_3
0x40010c3	          0x4c89e7	                            mov rdi, r12	       284	obj-elf.c	FUNCTION_10	IF_1	CALL_11
0x40010c6	      0xe800000000	                          call 0x40010cb	       284	obj-elf.c	FUNCTION_10	IF_1	CALL_11
0x40010cb	    0x814818004000	           or dword [rax + 0x18], 0x4000	       284	obj-elf.c	FUNCTION_10	IF_1	CALL_11
0x40010d2	    0x488b05000000	            mov rax, qword [0x040010d9] 	       286	obj-elf.c	FUNCTION_10	IF_1	IF_3
0x40010d9	          0x4939c4	                            cmp r12, rax	       286	obj-elf.c	FUNCTION_10	IF_1	IF_3
0x40010dc	            0x743a	                            je 0x4001118	       286	obj-elf.c	FUNCTION_10	IF_1	IF_3
0x40010de	        0x488b4008	                mov rax, qword [rax + 8]	       287	obj-elf.c	FUNCTION_10	IF_1	IF_3
0x40010e2	          0x4885c0	                           test rax, rax	       287	obj-elf.c	FUNCTION_10	IF_1	IF_3
0x40010e5	            0x7406	                            je 0x40010ed	       287	obj-elf.c	FUNCTION_10	IF_1	IF_3
0x40010e7	        0xf6401940	           test byte [rax + 0x19], 0x40 	       288	obj-elf.c	FUNCTION_10	IF_1	IF_3
0x40010eb	            0x752b	                           jne 0x4001118	       288	obj-elf.c	FUNCTION_10	IF_1	IF_3
0x40010ed	      0xba00000000	                              mov edx, 0	       290	obj-elf.c	FUNCTION_10	IF_1	IF_3	CALL_12
0x40010f2	      0xbe00000000	                              mov esi, 0	       290	obj-elf.c	FUNCTION_10	IF_1	IF_3	CALL_12
0x40010f7	          0x4c89e7	                            mov rdi, r12	       290	obj-elf.c	FUNCTION_10	IF_1	IF_3	CALL_12
0x40010fa	      0xe800000000	                          call 0x40010ff	       290	obj-elf.c	FUNCTION_10	IF_1	IF_3	CALL_12
0x40010ff	      0xb900000000	                              mov ecx, 0	       291	obj-elf.c	FUNCTION_10	IF_1	IF_3	CALL_13
0x4001104	      0xba00000000	                              mov edx, 0	       291	obj-elf.c	FUNCTION_10	IF_1	IF_3	CALL_13
0x4001109	    0x488b35000000	            mov rsi, qword [0x04001110] 	       291	obj-elf.c	FUNCTION_10	IF_1	IF_3	CALL_13
0x4001110	          0x4c89e7	                            mov rdi, r12	       291	obj-elf.c	FUNCTION_10	IF_1	IF_3	CALL_13
0x4001113	      0xe800000000	                          call 0x4001118	       291	obj-elf.c	FUNCTION_10	IF_1	IF_3	CALL_13
0x4001118	              0x5b	                                 pop rbx	       302	obj-elf.c	FUNCTION_10
0x4001119	              0x5d	                                 pop rbp	       302	obj-elf.c	FUNCTION_10
0x400111a	            0x415c	                                 pop r12	       302	obj-elf.c	FUNCTION_10
0x400111c	            0x415d	                                 pop r13	       302	obj-elf.c	FUNCTION_10
0x400111e	            0x415e	                                 pop r14	       302	obj-elf.c	FUNCTION_10
0x4001120	              0xc3	                                     ret	       302	obj-elf.c	FUNCTION_10
obj_elf_local	DO,1:FOR,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:IF,2:CALL,5	29
0x4000e81	              0x55	                                push rbp	       426	obj-elf.c	FUNCTION_16
0x4000e82	              0x53	                                push rbx	       426	obj-elf.c	FUNCTION_16
0x4000e83	        0x4883ec08	                              sub rsp, 8	       426	obj-elf.c	FUNCTION_16
0x4000e87	      0xe8e5f3ffff	call sym.get_sym_from_input_line_and_check	       432	obj-elf.c	FUNCTION_16	DO_1	CALL_1
0x4000e8c	          0x4889c3	                            mov rbx, rax	       432	obj-elf.c	FUNCTION_16	DO_1	CALL_1
0x4000e8f	    0x488b05000000	            mov rax, qword [0x04000e96] 	       433	obj-elf.c	FUNCTION_16	DO_1
0x4000e96	           0xfb628	                   movzx ebp, byte [rax]	       433	obj-elf.c	FUNCTION_16	DO_1
0x4000e99	          0x4889df	                            mov rdi, rbx	       434	obj-elf.c	FUNCTION_16	DO_1	CALL_2
0x4000e9c	      0xe800000000	                          call 0x4000ea1	       434	obj-elf.c	FUNCTION_16	DO_1	CALL_2
0x4000ea1	          0x4889df	                            mov rdi, rbx	       435	obj-elf.c	FUNCTION_16	DO_1	CALL_3
0x4000ea4	      0xe800000000	                          call 0x4000ea9	       435	obj-elf.c	FUNCTION_16	DO_1	CALL_3
0x4000ea9	    0xc70001000000	                      mov dword [rax], 1	       435	obj-elf.c	FUNCTION_16	DO_1	CALL_3
0x4000eaf	        0x4080fd2c	                           cmp bpl, 0x2c	       436	obj-elf.c	FUNCTION_16	DO_1	IF_1
0x4000eb3	            0x752f	                           jne 0x4000ee4	       436	obj-elf.c	FUNCTION_16	DO_1	IF_1
0x4000eb5	    0x488b05000000	            mov rax, qword [0x04000ebc] 	       438	obj-elf.c	FUNCTION_16	DO_1	IF_1
0x4000ebc	        0x488d5001	                      lea rdx, [rax + 1]	       438	obj-elf.c	FUNCTION_16	DO_1	IF_1
0x4000ec0	    0x488915000000	            mov qword [0x04000ec7], rdx 	       438	obj-elf.c	FUNCTION_16	DO_1	IF_1
0x4000ec7	        0x80780120	                cmp byte [rax + 1], 0x20	       439	obj-elf.c	FUNCTION_16	DO_1	IF_1	CALL_4
0x4000ecb	            0x750b	                           jne 0x4000ed8	       439	obj-elf.c	FUNCTION_16	DO_1	IF_1	CALL_4
0x4000ecd	        0x4883c002	                              add rax, 2	       439	obj-elf.c	FUNCTION_16	DO_1	IF_1	CALL_4
0x4000ed1	    0x488905000000	            mov qword [0x04000ed8], rax 	       439	obj-elf.c	FUNCTION_16	DO_1	IF_1	CALL_4
0x4000ed8	    0x488b05000000	            mov rax, qword [0x04000edf] 	       440	obj-elf.c	FUNCTION_16	DO_1	IF_1	IF_2
0x4000edf	          0x80380a	                     cmp byte [rax], 0xa	       440	obj-elf.c	FUNCTION_16	DO_1	IF_1	IF_2
0x4000ee2	            0x75a3	                           jne 0x4000e87	       440	obj-elf.c	FUNCTION_16	DO_1	IF_1	IF_2
0x4000ee4	      0xe800000000	                          call 0x4000ee9	       445	obj-elf.c	FUNCTION_16	CALL_5
0x4000ee9	        0x4883c408	                              add rsp, 8	       446	obj-elf.c	FUNCTION_16
0x4000eed	              0x5b	                                 pop rbx	       446	obj-elf.c	FUNCTION_16
0x4000eee	              0x5d	                                 pop rbp	       446	obj-elf.c	FUNCTION_16
0x4000eef	              0xc3	                                     ret	       446	obj-elf.c	FUNCTION_16
obj_elf_section_change_hook	DO,0:FOR,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:IF,0:CALL,0	5
0x400308f	    0x488b05000000	            mov rax, qword [0x04003096] 	      1313	obj-elf.c	FUNCTION_30
0x4003096	    0x488905000000	            mov qword [0x0400309d], rax 	      1313	obj-elf.c	FUNCTION_30
0x400309d	    0x8b0500000000	            mov eax, dword [0x040030a3] 	      1314	obj-elf.c	FUNCTION_30
0x40030a3	    0x890500000000	            mov dword [0x040030a9], eax 	      1314	obj-elf.c	FUNCTION_30
0x40030a9	              0xc3	                                     ret	      1314	obj-elf.c	FUNCTION_30
obj_elf_section	DO,1:FOR,0:SWITCH,0:functions,0:ELSE,8:WHILE,0:IF,29:CALL,58	580
0x40026b7	            0x4157	                                push r15	      1008	obj-elf.c	FUNCTION_25
0x40026b9	            0x4156	                                push r14	      1008	obj-elf.c	FUNCTION_25
0x40026bb	            0x4155	                                push r13	      1008	obj-elf.c	FUNCTION_25
0x40026bd	            0x4154	                                push r12	      1008	obj-elf.c	FUNCTION_25
0x40026bf	              0x55	                                push rbp	      1008	obj-elf.c	FUNCTION_25
0x40026c0	              0x53	                                push rbx	      1008	obj-elf.c	FUNCTION_25
0x40026c1	        0x4883ec58	                           sub rsp, 0x58	      1008	obj-elf.c	FUNCTION_25
0x40026c5	    0x64488b042528	                mov rax, qword fs:[0x28]	      1008	obj-elf.c	FUNCTION_25
0x40026ce	      0x4889442448	             mov qword [rsp + 0x48], rax	      1008	obj-elf.c	FUNCTION_25
0x40026d3	            0x31c0	                            xor eax, eax	      1008	obj-elf.c	FUNCTION_25
0x40026d5	    0x833d00000000	               cmp dword [0x040026dc], 0	      1018	obj-elf.c	FUNCTION_25	IF_1
0x40026dc	            0x7429	                            je 0x4002707	      1018	obj-elf.c	FUNCTION_25	IF_1
0x40026de	    0x488b05000000	            mov rax, qword [0x040026e5] 	      1026	obj-elf.c	FUNCTION_25	IF_1
0x40026e5	    0x488905000000	            mov qword [0x040026ec], rax 	      1026	obj-elf.c	FUNCTION_25	IF_1
0x40026ec	    0x8b0500000000	            mov eax, dword [0x040026f2] 	      1027	obj-elf.c	FUNCTION_25	IF_1
0x40026f2	    0x890500000000	            mov dword [0x040026f8], eax 	      1027	obj-elf.c	FUNCTION_25	IF_1
0x40026f8	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      1029	obj-elf.c	FUNCTION_25	IF_1	CALL_2
0x40026fd	      0xe800000000	                          call 0x4002702	      1029	obj-elf.c	FUNCTION_25	IF_1	CALL_2
0x4002702	      0xe964090000	                           jmp 0x400306b	      1029	obj-elf.c	FUNCTION_25	IF_1	CALL_2
0x4002707	          0x4189fd	                           mov r13d, edi	      1029	obj-elf.c	FUNCTION_25	IF_1	CALL_2
0x400270a	      0xe800000000	                          call 0x400270f	      1038	obj-elf.c	FUNCTION_25	CALL_4
0x400270f	          0x4989c6	                            mov r14, rax	      1038	obj-elf.c	FUNCTION_25	CALL_4
0x4002712	          0x4885c0	                           test rax, rax	      1039	obj-elf.c	FUNCTION_25	IF_2
0x4002715	     0xf8450090000	                            je 0x400306b	      1039	obj-elf.c	FUNCTION_25	IF_2
0x400271b	    0x488b05000000	            mov rax, qword [0x04002722] 	      1047	obj-elf.c	FUNCTION_25	IF_3
0x4002722	          0x80382c	                    cmp byte [rax], 0x2c	      1047	obj-elf.c	FUNCTION_25	IF_3
0x4002725	     0xf85ef080000	                           jne 0x400301a	      1047	obj-elf.c	FUNCTION_25	IF_3
0x400272b	        0x488d5001	                      lea rdx, [rax + 1]	      1050	obj-elf.c	FUNCTION_25	IF_3
0x400272f	    0x488915000000	            mov qword [0x04002736], rdx 	      1050	obj-elf.c	FUNCTION_25	IF_3
0x4002736	        0x80780120	                cmp byte [rax + 1], 0x20	      1051	obj-elf.c	FUNCTION_25	IF_3	CALL_5
0x400273a	            0x750b	                           jne 0x4002747	      1051	obj-elf.c	FUNCTION_25	IF_3	CALL_5
0x400273c	        0x4883c002	                              add rax, 2	      1051	obj-elf.c	FUNCTION_25	IF_3	CALL_5
0x4002740	    0x488905000000	            mov qword [0x04002747], rax 	      1051	obj-elf.c	FUNCTION_25	IF_3	CALL_5
0x4002747	          0x4585ed	                         test r13d, r13d	      1053	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_6
0x400274a	            0x746a	                            je 0x40027b6	      1053	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_6
0x400274c	    0x488b05000000	            mov rax, qword [0x04002753] 	      1053	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_6
0x4002753	           0xfb600	                   movzx eax, byte [rax]	      1053	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_6
0x4002756	    0xc7442410ffff	     mov dword [rsp + 0x10], 0xffffffff 	      1015	obj-elf.c	FUNCTION_25
0x400275e	    0xf68400000000	                test byte [rax + rax], 4	      1053	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_6
0x4002766	            0x7456	                            je 0x40027be	      1053	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_6
0x4002768	      0xe800000000	                          call 0x400276d	      1056	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_7
0x400276d	        0x89442410	             mov dword [rsp + 0x10], eax	      1056	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_7
0x4002771	    0x488b05000000	            mov rax, qword [0x04002778] 	      1058	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_8
0x4002778	          0x803820	                    cmp byte [rax], 0x20	      1058	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_8
0x400277b	            0x750b	                           jne 0x4002788	      1058	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_8
0x400277d	        0x4883c001	                              add rax, 1	      1058	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_8
0x4002781	    0x488905000000	            mov qword [0x04002788], rax 	      1058	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_8
0x4002788	    0x488b05000000	            mov rax, qword [0x0400278f] 	      1061	obj-elf.c	FUNCTION_25	IF_3	IF_4	IF_5
0x400278f	          0x80382c	                    cmp byte [rax], 0x2c	      1061	obj-elf.c	FUNCTION_25	IF_3	IF_4	IF_5
0x4002792	     0xf8511080000	                           jne 0x4002fa9	      1061	obj-elf.c	FUNCTION_25	IF_3	IF_4	IF_5
0x4002798	        0x488d5001	                      lea rdx, [rax + 1]	      1065	obj-elf.c	FUNCTION_25	IF_3	IF_4
0x400279c	    0x488915000000	            mov qword [0x040027a3], rdx 	      1065	obj-elf.c	FUNCTION_25	IF_3	IF_4
0x40027a3	        0x80780120	                cmp byte [rax + 1], 0x20	      1066	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_9
0x40027a7	            0x7515	                           jne 0x40027be	      1066	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_9
0x40027a9	        0x4883c002	                              add rax, 2	      1066	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_9
0x40027ad	    0x488905000000	            mov qword [0x040027b4], rax 	      1066	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_9
0x40027b4	            0xeb08	                           jmp 0x40027be	      1066	obj-elf.c	FUNCTION_25	IF_3	IF_4	CALL_9
0x40027b6	    0xc7442410ffff	     mov dword [rsp + 0x10], 0xffffffff 	      1015	obj-elf.c	FUNCTION_25
0x40027be	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      1015	obj-elf.c	FUNCTION_25
0x40027c6	    0x41bc00000000	                             mov r12d, 0	      1015	obj-elf.c	FUNCTION_25
0x40027cc	    0x41bf00000080	                    mov r15d, 0x80000000	       923	obj-elf.c	FUNCTION_23	IF_4
0x40027d2	    0x488b05000000	            mov rax, qword [0x040027d9] 	      1069	obj-elf.c	FUNCTION_25	IF_3	IF_6
0x40027d9	          0x803822	                    cmp byte [rax], 0x22	      1069	obj-elf.c	FUNCTION_25	IF_3	IF_6
0x40027dc	     0xf85e1050000	                           jne 0x4002dc3	      1069	obj-elf.c	FUNCTION_25	IF_3	IF_6
0x40027e2	      0x488d7c242c	                   lea rdi, [rsp + 0x2c]	      1073	obj-elf.c	FUNCTION_25	IF_3	IF_6	CALL_10
0x40027e7	      0xe800000000	                          call 0x40027ec	      1073	obj-elf.c	FUNCTION_25	IF_3	IF_6	CALL_10
0x40027ec	          0x4889c3	                            mov rbx, rax	      1073	obj-elf.c	FUNCTION_25	IF_3	IF_6	CALL_10
0x40027ef	      0x4889442430	             mov qword [rsp + 0x30], rax	      1073	obj-elf.c	FUNCTION_25	IF_3	IF_6	CALL_10
0x40027f4	          0x4885c0	                           test rax, rax	      1074	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_7
0x40027f7	            0x750a	                           jne 0x4002803	      1074	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_7
0x40027f9	      0xe800000000	                          call 0x40027fe	      1076	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_7	CALL_11
0x40027fe	      0xe968080000	                           jmp 0x400306b	      1077	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_7
0x4002803	      0xb800000000	                              mov eax, 0	      1079	obj-elf.c	FUNCTION_25	IF_3	IF_6	CALL_13
0x4002808	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1079	obj-elf.c	FUNCTION_25	IF_3	IF_6	CALL_13
0x400280f	          0x4889df	                            mov rdi, rbx	      1079	obj-elf.c	FUNCTION_25	IF_3	IF_6	CALL_13
0x4002812	            0xf2ae	              repne scasb al, byte [rdi]	      1079	obj-elf.c	FUNCTION_25	IF_3	IF_6	CALL_13
0x4002814	          0x4889ce	                            mov rsi, rcx	      1079	obj-elf.c	FUNCTION_25	IF_3	IF_6	CALL_13
0x4002817	          0x48f7d6	                                 not rsi	      1079	obj-elf.c	FUNCTION_25	IF_3	IF_6	CALL_13
0x400281a	          0x4889f1	                            mov rcx, rsi	      1079	obj-elf.c	FUNCTION_25	IF_3	IF_6	CALL_13
0x400281d	        0x4883e901	                              sub rcx, 1	       792	obj-elf.c	FUNCTION_21	WHILE_1
0x4002821	          0x4889cd	                            mov rbp, rcx	       792	obj-elf.c	FUNCTION_21	WHILE_1
0x4002824	     0xf8457010000	                            je 0x4002981	       792	obj-elf.c	FUNCTION_21	WHILE_1
0x400282a	    0x41bc00000000	                             mov r12d, 0	       792	obj-elf.c	FUNCTION_21	WHILE_1
0x4002830	    0xc74424180000	               mov dword [rsp + 0x18], 0	       792	obj-elf.c	FUNCTION_21	WHILE_1
0x4002838	    0x41bf00000080	                    mov r15d, 0x80000000	       800	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x400283e	           0xfb603	                   movzx eax, byte [rbx]	       794	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x4002841	          0x83e83f	                           sub eax, 0x3f	       794	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x4002844	            0x3c39	                            cmp al, 0x39	       794	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x4002846	     0xf8795000000	                            ja 0x40028e1	       794	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x400284c	           0xfb6c0	                           movzx eax, al	       794	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x400284f	    0xff24c5000000	                       jmp qword [rax*8]	       794	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x4002856	        0x4983cc02	                               or r12, 2	       797	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x400285a	      0xe912010000	                           jmp 0x4002971	       797	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x400285f	          0x4d09fc	                             or r12, r15	       800	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x4002862	      0xe90a010000	                           jmp 0x4002971	       800	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x4002867	        0x4983cc01	                               or r12, 1	       803	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x400286b	      0xe901010000	                           jmp 0x4002971	       803	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x4002870	        0x4983cc04	                               or r12, 4	       806	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x4002874	      0xe9f8000000	                           jmp 0x4002971	       806	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x4002879	        0x4983cc10	                            or r12, 0x10	       809	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x400287d	      0xe9ef000000	                           jmp 0x4002971	       809	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x4002882	        0x4983cc20	                            or r12, 0x20	       812	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x4002886	      0xe9e6000000	                           jmp 0x4002971	       812	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x400288b	    0x4981cc000200	                           or r12, 0x200	       815	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x4002892	      0xe9da000000	                           jmp 0x4002971	       815	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x4002897	    0x4981cc000400	                           or r12, 0x400	       818	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x400289e	      0xe9ce000000	                           jmp 0x4002971	       818	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x40028a3	    0x4981cc000000	                       or r12, 0x1000000	       821	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x40028aa	      0xe9c2000000	                           jmp 0x4002971	       821	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x40028af	        0x807bff61	                cmp byte [rbx - 1], 0x61	       828	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	IF_1
0x40028b3	            0x752c	                           jne 0x40028e1	       828	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	IF_1
0x40028b5	          0x4c89e0	                            mov rax, r12	       830	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	IF_1
0x40028b8	        0x4883c810	                            or rax, 0x10	       830	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	IF_1
0x40028bc	        0x4883fd01	                              cmp rbp, 1	       831	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	IF_1	IF_2
0x40028c0	     0xf86a3000000	                           jbe 0x4002969	       831	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	IF_1	IF_2
0x40028c6	        0x807b0173	                cmp byte [rbx + 1], 0x73	       831	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	IF_1	IF_2
0x40028ca	     0xf859e000000	                           jne 0x400296e	       831	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	IF_1	IF_2
0x40028d0	        0x4983cc30	                            or r12, 0x30	       833	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	IF_1	IF_2
0x40028d4	        0x4883c301	                              add rbx, 1	       834	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	IF_1	IF_2
0x40028d8	        0x4883ed01	                              sub rbp, 1	       834	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	IF_1	IF_2
0x40028dc	      0xe990000000	                           jmp 0x4002971	       834	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	IF_1	IF_2
0x40028e1	      0xba05000000	                              mov edx, 5	       841	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	CALL_1
0x40028e6	      0xbe00000000	                              mov esi, 0	       841	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	CALL_1
0x40028eb	      0xbf00000000	                              mov edi, 0	       841	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	CALL_1
0x40028f0	      0xe800000000	                          call 0x40028f5	       841	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	CALL_1
0x40028f5	      0x4889442438	             mov qword [rsp + 0x38], rax	       841	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	CALL_1
0x40028fa	           0xfbe3b	                   movsx edi, byte [rbx]	       844	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	CALL_2
0x40028fd	      0x488d742438	                   lea rsi, [rsp + 0x38]	       844	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	CALL_2
0x4002902	      0xe800000000	                          call 0x4002907	       844	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	CALL_2
0x4002907	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	       845	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	IF_3
0x400290b	            0x7405	                            je 0x4002912	       845	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	IF_3
0x400290d	          0x4909c4	                             or r12, rax	       846	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	IF_3
0x4002910	            0xeb5f	                           jmp 0x4002971	       846	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	IF_3
0x4002912	           0xfb603	                   movzx eax, byte [rbx]	       849	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	ELSE_1	IF_4	CALL_3
0x4002915	    0xf68400000000	                test byte [rax + rax], 4	       849	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	ELSE_1	IF_4	CALL_3
0x400291d	            0x742c	                            je 0x400294b	       849	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	ELSE_1	IF_4	CALL_3
0x400291f	      0xba00000000	                              mov edx, 0	       853	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	ELSE_1	IF_4	CALL_4
0x4002924	      0x488d742440	                   lea rsi, [rsp + 0x40]	       853	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	ELSE_1	IF_4	CALL_4
0x4002929	          0x4889df	                            mov rdi, rbx	       853	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	ELSE_1	IF_4	CALL_4
0x400292c	      0xe800000000	                          call 0x4002931	       853	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	ELSE_1	IF_4	CALL_4
0x4002931	          0x4909c4	                             or r12, rax	       853	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	ELSE_1	IF_4	CALL_4
0x4002934	      0x488b442440	            mov rax, qword [rsp + 0x40] 	       856	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	ELSE_1	IF_4
0x4002939	        0x4883e801	                              sub rax, 1	       856	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	ELSE_1	IF_4
0x400293d	          0x4889c2	                            mov rdx, rax	       857	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	ELSE_1	IF_4
0x4002940	          0x4829da	                            sub rdx, rbx	       857	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	ELSE_1	IF_4
0x4002943	          0x4829d5	                            sub rbp, rdx	       857	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	ELSE_1	IF_4
0x4002946	          0x4889c3	                            mov rbx, rax	       858	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	ELSE_1	IF_4
0x4002949	            0xeb26	                           jmp 0x4002971	       858	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	ELSE_1	IF_4
0x400294b	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	       861	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	CALL_5
0x4002950	      0xbf00000000	                              mov edi, 0	       861	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	CALL_5
0x4002955	      0xb800000000	                              mov eax, 0	       861	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	CALL_5
0x400295a	      0xe800000000	                          call 0x400295f	       861	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	CALL_5
0x400295f	    0xc74424180100	               mov dword [rsp + 0x18], 1	       824	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x4002967	            0xeb08	                           jmp 0x4002971	       824	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1
0x4002969	          0x4989c4	                            mov r12, rax	       830	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	IF_1
0x400296c	            0xeb03	                           jmp 0x4002971	       830	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	IF_1
0x400296e	          0x4989c4	                            mov r12, rax	       830	obj-elf.c	FUNCTION_21	WHILE_1	SWITCH_1	IF_1
0x4002971	        0x4883c301	                              add rbx, 1	       865	obj-elf.c	FUNCTION_21	WHILE_1
0x4002975	        0x4883ed01	                              sub rbp, 1	       792	obj-elf.c	FUNCTION_21	WHILE_1
0x4002979	     0xf85bffeffff	                           jne 0x400283e	       792	obj-elf.c	FUNCTION_21	WHILE_1
0x400297f	            0xeb0e	                           jmp 0x400298f	       792	obj-elf.c	FUNCTION_21	WHILE_1
0x4002981	    0x41bc00000000	                             mov r12d, 0	       789	obj-elf.c	FUNCTION_21
0x4002987	    0xc74424180000	               mov dword [rsp + 0x18], 0	       790	obj-elf.c	FUNCTION_21
0x400298f	    0x488b05000000	            mov rax, qword [0x04002996] 	      1081	obj-elf.c	FUNCTION_25	IF_3	IF_6	CALL_14
0x4002996	           0xfb610	                   movzx edx, byte [rax]	      1081	obj-elf.c	FUNCTION_25	IF_3	IF_6	CALL_14
0x4002999	          0x80fa20	                            cmp dl, 0x20	      1081	obj-elf.c	FUNCTION_25	IF_3	IF_6	CALL_14
0x400299c	     0xf856e060000	                           jne 0x4003010	      1081	obj-elf.c	FUNCTION_25	IF_3	IF_6	CALL_14
0x40029a2	        0x488d5001	                      lea rdx, [rax + 1]	      1081	obj-elf.c	FUNCTION_25	IF_3	IF_6	CALL_14
0x40029a6	    0x488915000000	            mov qword [0x040029ad], rdx 	      1081	obj-elf.c	FUNCTION_25	IF_3	IF_6	CALL_14
0x40029ad	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      1041	obj-elf.c	FUNCTION_25
0x40029b5	        0x8078012c	                cmp byte [rax + 1], 0x2c	      1082	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8
0x40029b9	     0xf85f5000000	                           jne 0x4002ab4	      1082	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8
0x40029bf	          0x4889d0	                            mov rax, rdx	      1082	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8
0x40029c2	        0x488d5001	                      lea rdx, [rax + 1]	      1087	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8
0x40029c6	    0x488915000000	            mov qword [0x040029cd], rdx 	      1087	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8
0x40029cd	        0x80780120	                cmp byte [rax + 1], 0x20	      1088	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	CALL_15
0x40029d1	            0x750b	                           jne 0x40029de	      1088	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	CALL_15
0x40029d3	        0x488d5002	                      lea rdx, [rax + 2]	      1088	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	CALL_15
0x40029d7	    0x488915000000	            mov qword [0x040029de], rdx 	      1088	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	CALL_15
0x40029de	    0x488b0d000000	            mov rcx, qword [0x040029e5] 	      1089	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8
0x40029e5	           0xfb611	                   movzx edx, byte [rcx]	      1089	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8
0x40029e8	          0x80fa22	                            cmp dl, 0x22	      1090	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	IF_9
0x40029eb	            0x754f	                           jne 0x4002a3c	      1090	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	IF_9
0x40029ed	      0x488d7c242c	                   lea rdi, [rsp + 0x2c]	      1092	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	IF_9	CALL_16
0x40029f2	      0xe800000000	                          call 0x40029f7	      1092	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	IF_9	CALL_16
0x40029f7	          0x4989c0	                             mov r8, rax	      1092	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	IF_9	CALL_16
0x40029fa	      0x4889442430	             mov qword [rsp + 0x30], rax	      1092	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	IF_9	CALL_16
0x40029ff	          0x4885c0	                           test rax, rax	      1093	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	IF_9	IF_10
0x4002a02	            0x750a	                           jne 0x4002a0e	      1093	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	IF_9	IF_10
0x4002a04	      0xe800000000	                          call 0x4002a09	      1095	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	IF_9	IF_10	CALL_17
0x4002a09	      0xe95d060000	                           jmp 0x400306b	      1096	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	IF_9	IF_10
0x4002a0e	      0xb800000000	                              mov eax, 0	      1098	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	IF_9	CALL_19
0x4002a13	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1098	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	IF_9	CALL_19
0x4002a1a	          0x4c89c7	                             mov rdi, r8	      1098	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	IF_9	CALL_19
0x4002a1d	            0xf2ae	              repne scasb al, byte [rdi]	      1098	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	IF_9	CALL_19
0x4002a1f	          0x4889c8	                            mov rax, rcx	      1098	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	IF_9	CALL_19
0x4002a22	          0x48f7d0	                                 not rax	      1098	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	IF_9	CALL_19
0x4002a25	        0x488d70ff	                      lea rsi, [rax - 1]	      1098	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	IF_9	CALL_19
0x4002a29	      0xba01000000	                              mov edx, 1	      1098	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	IF_9	CALL_19
0x4002a2e	          0x4c89c7	                             mov rdi, r8	      1098	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	IF_9	CALL_19
0x4002a31	      0xe8f4e8ffff	           call sym.obj_elf_section_type	      1098	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	IF_9	CALL_19
0x4002a36	        0x8944240c	              mov dword [rsp + 0xc], eax	      1098	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	IF_9	CALL_19
0x4002a3a	            0xeb78	                           jmp 0x4002ab4	      1098	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	IF_9	CALL_19
0x4002a3c	          0x80fa40	                            cmp dl, 0x40	      1100	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11
0x4002a3f	            0x7405	                            je 0x4002a46	      1100	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11
0x4002a41	          0x80fa25	                            cmp dl, 0x25	      1100	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11
0x4002a44	            0x755f	                           jne 0x4002aa5	      1100	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11
0x4002a46	        0x488d7901	                      lea rdi, [rcx + 1]	      1102	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11
0x4002a4a	    0x48893d000000	            mov qword [0x04002a51], rdi 	      1102	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11
0x4002a51	         0xfb64101	               movzx eax, byte [rcx + 1]	      1104	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	IF_12	CALL_20
0x4002a55	    0xf68400000000	                test byte [rax + rax], 4	      1104	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	IF_12	CALL_20
0x4002a5d	            0x7415	                            je 0x4002a74	      1104	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	IF_12	CALL_20
0x4002a5f	      0xba00000000	                              mov edx, 0	      1106	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	IF_12	CALL_21
0x4002a64	      0xbe00000000	                              mov esi, 0	      1106	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	IF_12	CALL_21
0x4002a69	      0xe800000000	                          call 0x4002a6e	      1106	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	IF_12	CALL_21
0x4002a6e	        0x8944240c	              mov dword [rsp + 0xc], eax	      1106	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	IF_12	CALL_21
0x4002a72	            0xeb40	                           jmp 0x4002ab4	      1106	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	IF_12	CALL_21
0x4002a74	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      1110	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	ELSE_2	CALL_22
0x4002a79	      0xe800000000	                          call 0x4002a7e	      1110	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	ELSE_2	CALL_22
0x4002a7e	           0xfbef8	                           movsx edi, al	      1111	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	ELSE_2	CALL_23
0x4002a81	      0xe800000000	                          call 0x4002a86	      1111	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	ELSE_2	CALL_23
0x4002a86	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      1112	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	ELSE_2	CALL_24
0x4002a8b	    0x488b35000000	            mov rsi, qword [0x04002a92] 	      1112	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	ELSE_2	CALL_24
0x4002a92	          0x4829fe	                            sub rsi, rdi	      1112	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	ELSE_2	CALL_24
0x4002a95	      0xba01000000	                              mov edx, 1	      1112	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	ELSE_2	CALL_24
0x4002a9a	      0xe88be8ffff	           call sym.obj_elf_section_type	      1112	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	ELSE_2	CALL_24
0x4002a9f	        0x8944240c	              mov dword [rsp + 0xc], eax	      1112	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	ELSE_2	CALL_24
0x4002aa3	            0xeb0f	                           jmp 0x4002ab4	      1112	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_1	IF_11	ELSE_2	CALL_24
0x4002aa5	    0x488905000000	            mov qword [0x04002aac], rax 	      1116	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8	ELSE_3
0x4002aac	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      1041	obj-elf.c	FUNCTION_25
0x4002ab4	    0x488b05000000	            mov rax, qword [0x04002abb] 	      1119	obj-elf.c	FUNCTION_25	IF_3	IF_6	CALL_25
0x4002abb	          0x803820	                    cmp byte [rax], 0x20	      1119	obj-elf.c	FUNCTION_25	IF_3	IF_6	CALL_25
0x4002abe	            0x750b	                           jne 0x4002acb	      1119	obj-elf.c	FUNCTION_25	IF_3	IF_6	CALL_25
0x4002ac0	        0x4883c001	                              add rax, 1	      1119	obj-elf.c	FUNCTION_25	IF_3	IF_6	CALL_25
0x4002ac4	    0x488905000000	            mov qword [0x04002acb], rax 	      1119	obj-elf.c	FUNCTION_25	IF_3	IF_6	CALL_25
0x4002acb	    0xc74424140000	               mov dword [rsp + 0x14], 0	      1044	obj-elf.c	FUNCTION_25
0x4002ad3	        0x41f6c410	                         test r12b, 0x10	      1120	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13
0x4002ad7	     0xf84b0000000	                            je 0x4002b8d	      1120	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13
0x4002add	    0x488b05000000	            mov rax, qword [0x04002ae4] 	      1120	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13
0x4002ae4	          0x80382c	                    cmp byte [rax], 0x2c	      1120	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13
0x4002ae7	            0x7577	                           jne 0x4002b60	      1120	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13
0x4002ae9	        0x488d5001	                      lea rdx, [rax + 1]	      1122	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13
0x4002aed	    0x488915000000	            mov qword [0x04002af4], rdx 	      1122	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13
0x4002af4	        0x80780120	                cmp byte [rax + 1], 0x20	      1123	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13	CALL_26
0x4002af8	            0x750b	                           jne 0x4002b05	      1123	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13	CALL_26
0x4002afa	        0x4883c002	                              add rax, 2	      1123	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13	CALL_26
0x4002afe	    0x488905000000	            mov qword [0x04002b05], rax 	      1123	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13	CALL_26
0x4002b05	      0xe800000000	                          call 0x4002b0a	      1124	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13	CALL_27
0x4002b0a	        0x89442414	             mov dword [rsp + 0x14], eax	      1124	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13	CALL_27
0x4002b0e	    0x488b15000000	            mov rdx, qword [0x04002b15] 	      1125	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13	CALL_28
0x4002b15	          0x803a20	                    cmp byte [rdx], 0x20	      1125	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13	CALL_28
0x4002b18	            0x750b	                           jne 0x4002b25	      1125	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13	CALL_28
0x4002b1a	        0x4883c201	                              add rdx, 1	      1125	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13	CALL_28
0x4002b1e	    0x488915000000	            mov qword [0x04002b25], rdx 	      1125	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13	CALL_28
0x4002b25	            0x85c0	                           test eax, eax	      1126	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13	IF_14
0x4002b27	            0x7964	                           jns 0x4002b8d	      1126	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13	IF_14
0x4002b29	      0xba05000000	                              mov edx, 5	      1128	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13	IF_14	CALL_30
0x4002b2e	      0xbe00000000	                              mov esi, 0	      1128	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13	IF_14	CALL_30
0x4002b33	      0xbf00000000	                              mov edi, 0	      1128	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13	IF_14	CALL_30
0x4002b38	      0xe800000000	                          call 0x4002b3d	      1128	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13	IF_14	CALL_30
0x4002b3d	          0x4889c7	                            mov rdi, rax	      1128	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13	IF_14	CALL_30
0x4002b40	      0xb800000000	                              mov eax, 0	      1128	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13	IF_14	CALL_30
0x4002b45	      0xe800000000	                          call 0x4002b4a	      1128	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13	IF_14	CALL_30
0x4002b4a	        0x4983e4ef	             and r12, 0xffffffffffffffef	      1129	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13	IF_14
0x4002b4e	    0xc74424140000	               mov dword [rsp + 0x14], 0	      1130	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13	IF_14
0x4002b56	            0xeb35	                           jmp 0x4002b8d	      1130	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13	IF_14
0x4002b58	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      1041	obj-elf.c	FUNCTION_25
0x4002b60	      0xba05000000	                              mov edx, 5	      1135	obj-elf.c	FUNCTION_25	IF_3	IF_6	ELSE_4	IF_15	CALL_32
0x4002b65	      0xbe00000000	                              mov esi, 0	      1135	obj-elf.c	FUNCTION_25	IF_3	IF_6	ELSE_4	IF_15	CALL_32
0x4002b6a	      0xbf00000000	                              mov edi, 0	      1135	obj-elf.c	FUNCTION_25	IF_3	IF_6	ELSE_4	IF_15	CALL_32
0x4002b6f	      0xe800000000	                          call 0x4002b74	      1135	obj-elf.c	FUNCTION_25	IF_3	IF_6	ELSE_4	IF_15	CALL_32
0x4002b74	          0x4889c7	                            mov rdi, rax	      1135	obj-elf.c	FUNCTION_25	IF_3	IF_6	ELSE_4	IF_15	CALL_32
0x4002b77	      0xb800000000	                              mov eax, 0	      1135	obj-elf.c	FUNCTION_25	IF_3	IF_6	ELSE_4	IF_15	CALL_32
0x4002b7c	      0xe800000000	                          call 0x4002b81	      1135	obj-elf.c	FUNCTION_25	IF_3	IF_6	ELSE_4	IF_15	CALL_32
0x4002b81	        0x4983e4ef	             and r12, 0xffffffffffffffef	      1136	obj-elf.c	FUNCTION_25	IF_3	IF_6	ELSE_4	IF_15
0x4002b85	    0xc74424140000	               mov dword [rsp + 0x14], 0	      1044	obj-elf.c	FUNCTION_25
0x4002b8d	          0x4c89e3	                            mov rbx, r12	      1139	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_16
0x4002b90	    0x81e300020000	                          and ebx, 0x200	      1139	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_16
0x4002b96	      0x837c241800	               cmp dword [rsp + 0x18], 0	      1139	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_16
0x4002b9b	            0x7437	                            je 0x4002bd4	      1139	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_16
0x4002b9d	          0x4885db	                           test rbx, rbx	      1139	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_16
0x4002ba0	            0x7432	                            je 0x4002bd4	      1139	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_16
0x4002ba2	      0xba05000000	                              mov edx, 5	      1141	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_16	CALL_34
0x4002ba7	      0xbe00000000	                              mov esi, 0	      1141	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_16	CALL_34
0x4002bac	      0xbf00000000	                              mov edi, 0	      1141	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_16	CALL_34
0x4002bb1	      0xe800000000	                          call 0x4002bb6	      1141	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_16	CALL_34
0x4002bb6	          0x4889c7	                            mov rdi, rax	      1141	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_16	CALL_34
0x4002bb9	      0xb800000000	                              mov eax, 0	      1141	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_16	CALL_34
0x4002bbe	      0xe800000000	                          call 0x4002bc3	      1141	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_16	CALL_34
0x4002bc3	    0x41bf00000000	                             mov r15d, 0	      1043	obj-elf.c	FUNCTION_25
0x4002bc9	          0x4885db	                           test rbx, rbx	      1144	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17
0x4002bcc	     0xf8442010000	                            je 0x4002d14	      1144	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17
0x4002bd2	            0xeb0b	                           jmp 0x4002bdf	      1144	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17
0x4002bd4	          0x4885db	                           test rbx, rbx	      1144	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17
0x4002bd7	     0xf84f3000000	                            je 0x4002cd0	      1144	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17
0x4002bdd	            0xeb08	                           jmp 0x4002be7	      1144	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17
0x4002bdf	    0xc74424180000	               mov dword [rsp + 0x18], 0	      1142	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_16
0x4002be7	    0x488b05000000	            mov rax, qword [0x04002bee] 	      1144	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17
0x4002bee	          0x80382c	                    cmp byte [rax], 0x2c	      1144	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17
0x4002bf1	     0xf85a4000000	                           jne 0x4002c9b	      1144	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17
0x4002bf7	        0x4883c001	                              add rax, 1	      1146	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17
0x4002bfb	    0x488905000000	            mov qword [0x04002c02], rax 	      1146	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17
0x4002c02	      0xe800000000	                          call 0x4002c07	      1147	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	CALL_35
0x4002c07	          0x4989c7	                            mov r15, rax	      1147	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	CALL_35
0x4002c0a	          0x4885c0	                           test rax, rax	      1148	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	IF_18
0x4002c0d	            0x7511	                           jne 0x4002c20	      1148	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	IF_18
0x4002c0f	    0x4981e4fffdff	             and r12, 0xfffffffffffffdff	      1149	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	IF_18
0x4002c16	      0xbb00000000	                              mov ebx, 0	      1045	obj-elf.c	FUNCTION_25
0x4002c1b	      0xe9bb000000	                           jmp 0x4002cdb	      1045	obj-elf.c	FUNCTION_25
0x4002c20	    0x488b05000000	            mov rax, qword [0x04002c27] 	      1150	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19
0x4002c27	          0x80382c	                    cmp byte [rax], 0x2c	      1150	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19
0x4002c2a	            0x7550	                           jne 0x4002c7c	      1150	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19
0x4002c2c	        0x488d5001	                      lea rdx, [rax + 1]	      1152	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19
0x4002c30	    0x488915000000	            mov qword [0x04002c37], rdx 	      1152	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19
0x4002c37	        0x80780120	                cmp byte [rax + 1], 0x20	      1153	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19	CALL_36
0x4002c3b	            0x750b	                           jne 0x4002c48	      1153	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19	CALL_36
0x4002c3d	        0x4883c002	                              add rax, 2	      1153	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19	CALL_36
0x4002c41	    0x488905000000	            mov qword [0x04002c48], rax 	      1153	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19	CALL_36
0x4002c48	    0x488b2d000000	            mov rbp, qword [0x04002c4f] 	      1154	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19	IF_20	CALL_37
0x4002c4f	      0xba06000000	                              mov edx, 6	      1154	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19	IF_20	CALL_37
0x4002c54	      0xbe00000000	                              mov esi, 0	      1154	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19	IF_20	CALL_37
0x4002c59	          0x4889ef	                            mov rdi, rbp	      1154	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19	IF_20	CALL_37
0x4002c5c	      0xe800000000	                          call 0x4002c61	      1154	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19	IF_20	CALL_37
0x4002c61	      0xbb00000000	                              mov ebx, 0	      1045	obj-elf.c	FUNCTION_25
0x4002c66	            0x85c0	                           test eax, eax	      1154	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19	IF_20	CALL_37
0x4002c68	            0x7571	                           jne 0x4002cdb	      1154	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19	IF_20	CALL_37
0x4002c6a	        0x4883c506	                              add rbp, 6	      1156	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19	IF_20
0x4002c6e	    0x48892d000000	            mov qword [0x04002c75], rbp 	      1156	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19	IF_20
0x4002c75	      0xbb01000000	                              mov ebx, 1	      1157	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19	IF_20
0x4002c7a	            0xeb5f	                           jmp 0x4002cdb	      1157	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19	IF_20
0x4002c7c	      0xbf00000000	                              mov edi, 0	      1160	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_6	IF_21	CALL_38
0x4002c81	      0xb90d000000	                            mov ecx, 0xd	      1160	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_6	IF_21	CALL_38
0x4002c86	          0x4c89f6	                            mov rsi, r14	      1160	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_6	IF_21	CALL_38
0x4002c89	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1160	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_6	IF_21	CALL_38
0x4002c8b	           0xf97c2	                                 seta dl	      1160	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_6	IF_21	CALL_38
0x4002c8e	           0xf92c0	                                 setb al	      1160	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_6	IF_21	CALL_38
0x4002c91	            0x38c2	                              cmp dl, al	      1157	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19	IF_20
0x4002c93	           0xf94c3	                                 sete bl	      1157	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19	IF_20
0x4002c96	           0xfb6db	                           movzx ebx, bl	      1157	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19	IF_20
0x4002c99	            0xeb40	                           jmp 0x4002cdb	      1157	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_17	ELSE_5	IF_19	IF_20
0x4002c9b	      0xba05000000	                              mov edx, 5	      1165	obj-elf.c	FUNCTION_25	IF_3	IF_6	ELSE_7	IF_22	CALL_40
0x4002ca0	      0xbe00000000	                              mov esi, 0	      1165	obj-elf.c	FUNCTION_25	IF_3	IF_6	ELSE_7	IF_22	CALL_40
0x4002ca5	      0xbf00000000	                              mov edi, 0	      1165	obj-elf.c	FUNCTION_25	IF_3	IF_6	ELSE_7	IF_22	CALL_40
0x4002caa	      0xe800000000	                          call 0x4002caf	      1165	obj-elf.c	FUNCTION_25	IF_3	IF_6	ELSE_7	IF_22	CALL_40
0x4002caf	          0x4889c7	                            mov rdi, rax	      1165	obj-elf.c	FUNCTION_25	IF_3	IF_6	ELSE_7	IF_22	CALL_40
0x4002cb2	      0xb800000000	                              mov eax, 0	      1165	obj-elf.c	FUNCTION_25	IF_3	IF_6	ELSE_7	IF_22	CALL_40
0x4002cb7	      0xe800000000	                          call 0x4002cbc	      1165	obj-elf.c	FUNCTION_25	IF_3	IF_6	ELSE_7	IF_22	CALL_40
0x4002cbc	    0x4981e4fffdff	             and r12, 0xfffffffffffffdff	      1166	obj-elf.c	FUNCTION_25	IF_3	IF_6	ELSE_7	IF_22
0x4002cc3	      0xbb00000000	                              mov ebx, 0	      1045	obj-elf.c	FUNCTION_25
0x4002cc8	    0x41bf00000000	                             mov r15d, 0	      1043	obj-elf.c	FUNCTION_25
0x4002cce	            0xeb0b	                           jmp 0x4002cdb	      1043	obj-elf.c	FUNCTION_25
0x4002cd0	      0xbb00000000	                              mov ebx, 0	      1045	obj-elf.c	FUNCTION_25
0x4002cd5	    0x41bf00000000	                             mov r15d, 0	      1043	obj-elf.c	FUNCTION_25
0x4002cdb	      0x837c241800	               cmp dword [rsp + 0x18], 0	      1169	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_23
0x4002ce0	            0x7432	                            je 0x4002d14	      1169	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_23
0x4002ce2	    0x488b05000000	            mov rax, qword [0x04002ce9] 	      1171	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_23	CALL_41
0x4002ce9	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      1171	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_23	CALL_41
0x4002cf0	    0x488bb8b00000	            mov rdi, qword [rax + 0xb0] 	      1171	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_23	CALL_41
0x4002cf7	          0x4885ff	                           test rdi, rdi	      1172	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_23	IF_24
0x4002cfa	            0x7418	                            je 0x4002d14	      1172	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_23	IF_24
0x4002cfc	      0xe800000000	                          call 0x4002d01	      1174	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_23	IF_24	CALL_42
0x4002d01	          0x4989c7	                            mov r15, rax	      1174	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_23	IF_24	CALL_42
0x4002d04	    0x488b05000000	            mov rax, qword [0x04002d0b] 	      1175	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_23	IF_24
0x4002d0b	          0x8b5820	            mov ebx, dword [rax + 0x20] 	      1175	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_23	IF_24
0x4002d0e	          0xc1eb11	                           shr ebx, 0x11	      1175	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_23	IF_24
0x4002d11	          0x83e301	                              and ebx, 1	      1175	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_23	IF_24
0x4002d14	      0xbd00000000	                              mov ebp, 0	      1016	obj-elf.c	FUNCTION_25
0x4002d19	    0x41f7c4000000	                    test r12d, 0x1000000	      1179	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25
0x4002d20	     0xf84a9020000	                            je 0x4002fcf	      1179	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25
0x4002d26	    0x488b05000000	            mov rax, qword [0x04002d2d] 	      1179	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25
0x4002d2d	          0x80382c	                    cmp byte [rax], 0x2c	      1179	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25
0x4002d30	     0xf8599020000	                           jne 0x4002fcf	      1179	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25
0x4002d36	        0x488d5001	                      lea rdx, [rax + 1]	      1181	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25
0x4002d3a	    0x488915000000	            mov qword [0x04002d41], rdx 	      1181	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25
0x4002d41	        0x80780120	                cmp byte [rax + 1], 0x20	      1182	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	CALL_43
0x4002d45	            0x750b	                           jne 0x4002d52	      1182	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	CALL_43
0x4002d47	        0x4883c002	                              add rax, 2	      1182	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	CALL_43
0x4002d4b	    0x488905000000	            mov qword [0x04002d52], rax 	      1182	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	CALL_43
0x4002d52	    0x488b05000000	            mov rax, qword [0x04002d59] 	      1183	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	CALL_44
0x4002d59	      0x4889442418	             mov qword [rsp + 0x18], rax	      1183	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	CALL_44
0x4002d5e	           0xfb600	                   movzx eax, byte [rax]	      1183	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	CALL_44
0x4002d61	      0xbd00000000	                              mov ebp, 0	      1016	obj-elf.c	FUNCTION_25
0x4002d66	    0xf68400000000	                test byte [rax + rax], 4	      1183	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	CALL_44
0x4002d6e	     0xf845b020000	                            je 0x4002fcf	      1183	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	CALL_44
0x4002d74	      0xba00000000	                              mov edx, 0	      1186	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	CALL_45
0x4002d79	      0xbe00000000	                              mov esi, 0	      1186	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	CALL_45
0x4002d7e	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      1186	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	CALL_45
0x4002d83	      0xe800000000	                          call 0x4002d88	      1186	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	CALL_45
0x4002d88	            0x89c5	                            mov ebp, eax	      1186	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	CALL_45
0x4002d8a	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1188	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	IF_27
0x4002d8d	     0xf853c020000	                           jne 0x4002fcf	      1188	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	IF_27
0x4002d93	      0xba05000000	                              mov edx, 5	      1190	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	IF_27	CALL_47
0x4002d98	      0xbe00000000	                              mov esi, 0	      1190	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	IF_27	CALL_47
0x4002d9d	      0xbf00000000	                              mov edi, 0	      1190	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	IF_27	CALL_47
0x4002da2	      0xe800000000	                          call 0x4002da7	      1190	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	IF_27	CALL_47
0x4002da7	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      1190	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	IF_27	CALL_47
0x4002dac	          0x4889c7	                            mov rdi, rax	      1190	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	IF_27	CALL_47
0x4002daf	      0xb800000000	                              mov eax, 0	      1190	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	IF_27	CALL_47
0x4002db4	      0xe800000000	                          call 0x4002db9	      1190	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	IF_27	CALL_47
0x4002db9	      0xbd00000000	                              mov ebp, 0	      1191	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	IF_27
0x4002dbe	      0xe90c020000	                           jmp 0x4002fcf	      1191	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_25	IF_26	IF_27
0x4002dc3	    0x488b05000000	            mov rax, qword [0x04002dca] 	      1202	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_48
0x4002dca	          0x803820	                    cmp byte [rax], 0x20	      1202	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_48
0x4002dcd	            0x750b	                           jne 0x4002dda	      1202	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_48
0x4002dcf	        0x4883c001	                              add rax, 1	      1202	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_48
0x4002dd3	    0x488905000000	            mov qword [0x04002dda], rax 	      1202	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_48
0x4002dda	    0x488b05000000	            mov rax, qword [0x04002de1] 	      1203	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	IF_28
0x4002de1	          0x803823	                    cmp byte [rax], 0x23	      1203	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	IF_28
0x4002de4	            0x742b	                            je 0x4002e11	      1203	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	IF_28
0x4002de6	      0xba05000000	                              mov edx, 5	      1205	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	IF_28	CALL_50
0x4002deb	      0xbe00000000	                              mov esi, 0	      1205	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	IF_28	CALL_50
0x4002df0	      0xbf00000000	                              mov edi, 0	      1205	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	IF_28	CALL_50
0x4002df5	      0xe800000000	                          call 0x4002dfa	      1205	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	IF_28	CALL_50
0x4002dfa	          0x4889c7	                            mov rdi, rax	      1205	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	IF_28	CALL_50
0x4002dfd	      0xb800000000	                              mov eax, 0	      1205	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	IF_28	CALL_50
0x4002e02	      0xe800000000	                          call 0x4002e07	      1205	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	IF_28	CALL_50
0x4002e07	      0xe800000000	                          call 0x4002e0c	      1206	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	IF_28	CALL_51
0x4002e0c	      0xe95a020000	                           jmp 0x400306b	      1207	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	IF_28
0x4002e11	        0x4883c001	                              add rax, 1	      1209	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1
0x4002e15	    0x488905000000	            mov qword [0x04002e1c], rax 	      1209	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1
0x4002e1c	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      1210	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_52
0x4002e21	      0xe800000000	                          call 0x4002e26	      1210	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_52
0x4002e26	           0xfbef8	                           movsx edi, al	      1211	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_53
0x4002e29	      0xe800000000	                          call 0x4002e2e	      1211	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_53
0x4002e2e	      0x488b6c2430	            mov rbp, qword [rsp + 0x30] 	      1213	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_54
0x4002e33	    0x488b1d000000	            mov rbx, qword [0x04002e3a] 	      1213	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_54
0x4002e3a	          0x4829eb	                            sub rbx, rbp	      1213	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_54
0x4002e3d	        0x4883fb05	                              cmp rbx, 5	       916	obj-elf.c	FUNCTION_23	IF_1	CALL_1
0x4002e41	            0x7546	                           jne 0x4002e89	       916	obj-elf.c	FUNCTION_23	IF_1	CALL_1
0x4002e43	      0xbf00000000	                              mov edi, 0	       916	obj-elf.c	FUNCTION_23	IF_1	CALL_1
0x4002e48	      0xb905000000	                              mov ecx, 5	       916	obj-elf.c	FUNCTION_23	IF_1	CALL_1
0x4002e4d	          0x4889ee	                            mov rsi, rbp	       916	obj-elf.c	FUNCTION_23	IF_1	CALL_1
0x4002e50	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       916	obj-elf.c	FUNCTION_23	IF_1	CALL_1
0x4002e52	           0xf97c1	                                 seta cl	       916	obj-elf.c	FUNCTION_23	IF_1	CALL_1
0x4002e55	           0xf92c0	                                 setb al	       916	obj-elf.c	FUNCTION_23	IF_1	CALL_1
0x4002e58	      0xba01000000	                              mov edx, 1	       917	obj-elf.c	FUNCTION_23	IF_1
0x4002e5d	            0x38c1	                              cmp cl, al	       916	obj-elf.c	FUNCTION_23	IF_1	CALL_1
0x4002e5f	     0xf84ee000000	                            je 0x4002f53	       916	obj-elf.c	FUNCTION_23	IF_1	CALL_1
0x4002e65	      0xbf00000000	                              mov edi, 0	       918	obj-elf.c	FUNCTION_23	IF_2	CALL_2
0x4002e6a	      0xb905000000	                              mov ecx, 5	       918	obj-elf.c	FUNCTION_23	IF_2	CALL_2
0x4002e6f	          0x4889ee	                            mov rsi, rbp	       918	obj-elf.c	FUNCTION_23	IF_2	CALL_2
0x4002e72	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       918	obj-elf.c	FUNCTION_23	IF_2	CALL_2
0x4002e74	           0xf97c1	                                 seta cl	       918	obj-elf.c	FUNCTION_23	IF_2	CALL_2
0x4002e77	           0xf92c0	                                 setb al	       918	obj-elf.c	FUNCTION_23	IF_2	CALL_2
0x4002e7a	      0xba02000000	                              mov edx, 2	       919	obj-elf.c	FUNCTION_23	IF_2
0x4002e7f	            0x38c1	                              cmp cl, al	       918	obj-elf.c	FUNCTION_23	IF_2	CALL_2
0x4002e81	     0xf84cc000000	                            je 0x4002f53	       918	obj-elf.c	FUNCTION_23	IF_2	CALL_2
0x4002e87	            0xeb72	                           jmp 0x4002efb	       918	obj-elf.c	FUNCTION_23	IF_2	CALL_2
0x4002e89	        0x4883fb09	                              cmp rbx, 9	       920	obj-elf.c	FUNCTION_23	IF_3	CALL_3
0x4002e8d	            0x7524	                           jne 0x4002eb3	       920	obj-elf.c	FUNCTION_23	IF_3	CALL_3
0x4002e8f	      0xbf00000000	                              mov edi, 0	       920	obj-elf.c	FUNCTION_23	IF_3	CALL_3
0x4002e94	      0xb909000000	                              mov ecx, 9	       920	obj-elf.c	FUNCTION_23	IF_3	CALL_3
0x4002e99	          0x4889ee	                            mov rsi, rbp	       920	obj-elf.c	FUNCTION_23	IF_3	CALL_3
0x4002e9c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       920	obj-elf.c	FUNCTION_23	IF_3	CALL_3
0x4002e9e	           0xf97c1	                                 seta cl	       920	obj-elf.c	FUNCTION_23	IF_3	CALL_3
0x4002ea1	           0xf92c0	                                 setb al	       920	obj-elf.c	FUNCTION_23	IF_3	CALL_3
0x4002ea4	      0xba04000000	                              mov edx, 4	       921	obj-elf.c	FUNCTION_23	IF_3
0x4002ea9	            0x38c1	                              cmp cl, al	       920	obj-elf.c	FUNCTION_23	IF_3	CALL_3
0x4002eab	     0xf84a2000000	                            je 0x4002f53	       920	obj-elf.c	FUNCTION_23	IF_3	CALL_3
0x4002eb1	            0xeb48	                           jmp 0x4002efb	       920	obj-elf.c	FUNCTION_23	IF_3	CALL_3
0x4002eb3	        0x4883fb07	                              cmp rbx, 7	       922	obj-elf.c	FUNCTION_23	IF_4	CALL_4
0x4002eb7	            0x751e	                           jne 0x4002ed7	       922	obj-elf.c	FUNCTION_23	IF_4	CALL_4
0x4002eb9	      0xbf00000000	                              mov edi, 0	       922	obj-elf.c	FUNCTION_23	IF_4	CALL_4
0x4002ebe	      0xb907000000	                              mov ecx, 7	       922	obj-elf.c	FUNCTION_23	IF_4	CALL_4
0x4002ec3	          0x4889ee	                            mov rsi, rbp	       922	obj-elf.c	FUNCTION_23	IF_4	CALL_4
0x4002ec6	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       922	obj-elf.c	FUNCTION_23	IF_4	CALL_4
0x4002ec8	           0xf97c1	                                 seta cl	       922	obj-elf.c	FUNCTION_23	IF_4	CALL_4
0x4002ecb	           0xf92c0	                                 setb al	       922	obj-elf.c	FUNCTION_23	IF_4	CALL_4
0x4002ece	          0x4c89fa	                            mov rdx, r15	       923	obj-elf.c	FUNCTION_23	IF_4
0x4002ed1	            0x38c1	                              cmp cl, al	       922	obj-elf.c	FUNCTION_23	IF_4	CALL_4
0x4002ed3	            0x747e	                            je 0x4002f53	       922	obj-elf.c	FUNCTION_23	IF_4	CALL_4
0x4002ed5	            0xeb24	                           jmp 0x4002efb	       922	obj-elf.c	FUNCTION_23	IF_4	CALL_4
0x4002ed7	        0x4883fb03	                              cmp rbx, 3	       924	obj-elf.c	FUNCTION_23	IF_5	CALL_5
0x4002edb	            0x751e	                           jne 0x4002efb	       924	obj-elf.c	FUNCTION_23	IF_5	CALL_5
0x4002edd	      0xbf00000000	                              mov edi, 0	       924	obj-elf.c	FUNCTION_23	IF_5	CALL_5
0x4002ee2	      0xb903000000	                              mov ecx, 3	       924	obj-elf.c	FUNCTION_23	IF_5	CALL_5
0x4002ee7	          0x4889ee	                            mov rsi, rbp	       924	obj-elf.c	FUNCTION_23	IF_5	CALL_5
0x4002eea	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       924	obj-elf.c	FUNCTION_23	IF_5	CALL_5
0x4002eec	           0xf97c1	                                 seta cl	       924	obj-elf.c	FUNCTION_23	IF_5	CALL_5
0x4002eef	           0xf92c0	                                 setb al	       924	obj-elf.c	FUNCTION_23	IF_5	CALL_5
0x4002ef2	      0xba00040000	                          mov edx, 0x400	       925	obj-elf.c	FUNCTION_23	IF_5
0x4002ef7	            0x38c1	                              cmp cl, al	       924	obj-elf.c	FUNCTION_23	IF_5	CALL_5
0x4002ef9	            0x7458	                            je 0x4002f53	       924	obj-elf.c	FUNCTION_23	IF_5	CALL_5
0x4002efb	          0x4889de	                            mov rsi, rbx	       929	obj-elf.c	FUNCTION_23	CALL_6
0x4002efe	          0x4889ef	                            mov rdi, rbp	       929	obj-elf.c	FUNCTION_23	CALL_6
0x4002f01	      0xe800000000	                          call 0x4002f06	       929	obj-elf.c	FUNCTION_23	CALL_6
0x4002f06	          0x4889c2	                            mov rdx, rax	       931	obj-elf.c	FUNCTION_23	IF_6
0x4002f09	          0x4885c0	                           test rax, rax	       930	obj-elf.c	FUNCTION_23	IF_6
0x4002f0c	            0x7545	                           jne 0x4002f53	       930	obj-elf.c	FUNCTION_23	IF_6
0x4002f0e	      0xba00000000	                              mov edx, 0	       935	obj-elf.c	FUNCTION_23	CALL_7
0x4002f13	          0x4889de	                            mov rsi, rbx	       935	obj-elf.c	FUNCTION_23	CALL_7
0x4002f16	          0x4889ef	                            mov rdi, rbp	       935	obj-elf.c	FUNCTION_23	CALL_7
0x4002f19	      0xe80ce4ffff	           call sym.obj_elf_section_type	       935	obj-elf.c	FUNCTION_23	CALL_7
0x4002f1e	            0x85c0	                           test eax, eax	       936	obj-elf.c	FUNCTION_23	IF_7
0x4002f20	            0x7528	                           jne 0x4002f4a	       936	obj-elf.c	FUNCTION_23	IF_7
0x4002f22	      0xba05000000	                              mov edx, 5	       939	obj-elf.c	FUNCTION_23	CALL_9
0x4002f27	      0xbe00000000	                              mov esi, 0	       939	obj-elf.c	FUNCTION_23	CALL_9
0x4002f2c	      0xbf00000000	                              mov edi, 0	       939	obj-elf.c	FUNCTION_23	CALL_9
0x4002f31	      0xe800000000	                          call 0x4002f36	       939	obj-elf.c	FUNCTION_23	CALL_9
0x4002f36	          0x4889c7	                            mov rdi, rax	       939	obj-elf.c	FUNCTION_23	CALL_9
0x4002f39	      0xb800000000	                              mov eax, 0	       939	obj-elf.c	FUNCTION_23	CALL_9
0x4002f3e	      0xe800000000	                          call 0x4002f43	       939	obj-elf.c	FUNCTION_23	CALL_9
0x4002f43	      0xba00000000	                              mov edx, 0	       941	obj-elf.c	FUNCTION_23
0x4002f48	            0xeb09	                           jmp 0x4002f53	       941	obj-elf.c	FUNCTION_23
0x4002f4a	        0x8944240c	              mov dword [rsp + 0xc], eax	       937	obj-elf.c	FUNCTION_23	IF_7
0x4002f4e	      0xba00000000	                              mov edx, 0	       941	obj-elf.c	FUNCTION_23
0x4002f53	          0x4909d4	                             or r12, rdx	      1213	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_54
0x4002f56	    0x488b05000000	            mov rax, qword [0x04002f5d] 	      1215	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_55
0x4002f5d	          0x803820	                    cmp byte [rax], 0x20	      1215	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_55
0x4002f60	            0x750b	                           jne 0x4002f6d	      1215	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_55
0x4002f62	        0x4883c001	                              add rax, 1	      1215	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_55
0x4002f66	    0x488905000000	            mov qword [0x04002f6d], rax 	      1215	obj-elf.c	FUNCTION_25	IF_3	ELSE_8	DO_1	CALL_55
0x4002f6d	    0x488b05000000	            mov rax, qword [0x04002f74] 	      1217	obj-elf.c	FUNCTION_25	IF_3	ELSE_8
0x4002f74	        0x488d5001	                      lea rdx, [rax + 1]	      1217	obj-elf.c	FUNCTION_25	IF_3	ELSE_8
0x4002f78	    0x488915000000	            mov qword [0x04002f7f], rdx 	      1217	obj-elf.c	FUNCTION_25	IF_3	ELSE_8
0x4002f7f	          0x80382c	                    cmp byte [rax], 0x2c	      1217	obj-elf.c	FUNCTION_25	IF_3	ELSE_8
0x4002f82	     0xf843bfeffff	                            je 0x4002dc3	      1217	obj-elf.c	FUNCTION_25	IF_3	ELSE_8
0x4002f88	    0x488905000000	            mov qword [0x04002f8f], rax 	      1218	obj-elf.c	FUNCTION_25	IF_3	ELSE_8
0x4002f8f	      0xbd00000000	                              mov ebp, 0	      1016	obj-elf.c	FUNCTION_25
0x4002f94	      0xbb00000000	                              mov ebx, 0	      1045	obj-elf.c	FUNCTION_25
0x4002f99	    0xc74424140000	               mov dword [rsp + 0x14], 0	      1044	obj-elf.c	FUNCTION_25
0x4002fa1	    0x41bf00000000	                             mov r15d, 0	      1043	obj-elf.c	FUNCTION_25
0x4002fa7	            0xeb26	                           jmp 0x4002fcf	      1043	obj-elf.c	FUNCTION_25
0x4002fa9	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      1041	obj-elf.c	FUNCTION_25
0x4002fb1	      0xbd00000000	                              mov ebp, 0	      1016	obj-elf.c	FUNCTION_25
0x4002fb6	      0xbb00000000	                              mov ebx, 0	      1045	obj-elf.c	FUNCTION_25
0x4002fbb	    0xc74424140000	               mov dword [rsp + 0x14], 0	      1044	obj-elf.c	FUNCTION_25
0x4002fc3	    0x41bc00000000	                             mov r12d, 0	      1042	obj-elf.c	FUNCTION_25
0x4002fc9	    0x41bf00000000	                             mov r15d, 0	      1043	obj-elf.c	FUNCTION_25
0x4002fcf	      0xe800000000	                          call 0x4002fd4	      1223	obj-elf.c	FUNCTION_25	CALL_56
0x4002fd4	            0x4155	                                push r13	      1225	obj-elf.c	FUNCTION_25	CALL_57
0x4002fd6	              0x53	                                push rbx	      1225	obj-elf.c	FUNCTION_25	CALL_57
0x4002fd7	          0x4d89f9	                             mov r9, r15	      1225	obj-elf.c	FUNCTION_25	CALL_57
0x4002fda	      0x448b442424	            mov r8d, dword [rsp + 0x24] 	      1225	obj-elf.c	FUNCTION_25	CALL_57
0x4002fdf	          0x4c89e1	                            mov rcx, r12	      1225	obj-elf.c	FUNCTION_25	CALL_57
0x4002fe2	            0x89ea	                            mov edx, ebp	      1225	obj-elf.c	FUNCTION_25	CALL_57
0x4002fe4	        0x8b74241c	            mov esi, dword [rsp + 0x1c] 	      1225	obj-elf.c	FUNCTION_25	CALL_57
0x4002fe8	          0x4c89f7	                            mov rdi, r14	      1225	obj-elf.c	FUNCTION_25	CALL_57
0x4002feb	      0xe800000000	                          call 0x4002ff0	      1225	obj-elf.c	FUNCTION_25	CALL_57
0x4002ff0	        0x4883c410	                           add rsp, 0x10	      1228	obj-elf.c	FUNCTION_25	IF_29
0x4002ff4	          0x4585ed	                         test r13d, r13d	      1228	obj-elf.c	FUNCTION_25	IF_29
0x4002ff7	            0x7472	                            je 0x400306b	      1228	obj-elf.c	FUNCTION_25	IF_29
0x4002ff9	        0x8b742410	            mov esi, dword [rsp + 0x10] 	      1228	obj-elf.c	FUNCTION_25	IF_29
0x4002ffd	          0x83feff	             cmp esi, 0xffffffffffffffff	      1228	obj-elf.c	FUNCTION_25	IF_29
0x4003000	            0x7469	                            je 0x400306b	      1228	obj-elf.c	FUNCTION_25	IF_29
0x4003002	    0x488b3d000000	            mov rdi, qword [0x04003009] 	      1229	obj-elf.c	FUNCTION_25	CALL_58
0x4003009	      0xe800000000	                          call 0x400300e	      1229	obj-elf.c	FUNCTION_25	CALL_58
0x400300e	            0xeb5b	                           jmp 0x400306b	      1229	obj-elf.c	FUNCTION_25	CALL_58
0x4003010	          0x80fa2c	                            cmp dl, 0x2c	      1082	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8
0x4003013	            0x7537	                           jne 0x400304c	      1082	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8
0x4003015	      0xe9a8f9ffff	                           jmp 0x40029c2	      1082	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_8
0x400301a	      0xe800000000	                          call 0x400301f	      1223	obj-elf.c	FUNCTION_25	CALL_56
0x400301f	            0x4155	                                push r13	      1225	obj-elf.c	FUNCTION_25	CALL_57
0x4003021	            0x6a00	                                  push 0	      1225	obj-elf.c	FUNCTION_25	CALL_57
0x4003023	    0x41b900000000	                              mov r9d, 0	      1225	obj-elf.c	FUNCTION_25	CALL_57
0x4003029	    0x41b800000000	                              mov r8d, 0	      1225	obj-elf.c	FUNCTION_25	CALL_57
0x400302f	      0xb900000000	                              mov ecx, 0	      1225	obj-elf.c	FUNCTION_25	CALL_57
0x4003034	      0xba00000000	                              mov edx, 0	      1225	obj-elf.c	FUNCTION_25	CALL_57
0x4003039	      0xbe00000000	                              mov esi, 0	      1225	obj-elf.c	FUNCTION_25	CALL_57
0x400303e	          0x4c89f7	                            mov rdi, r14	      1225	obj-elf.c	FUNCTION_25	CALL_57
0x4003041	      0xe800000000	                          call 0x4003046	      1225	obj-elf.c	FUNCTION_25	CALL_57
0x4003046	        0x4883c410	                           add rsp, 0x10	      1225	obj-elf.c	FUNCTION_25	CALL_57
0x400304a	            0xeb1f	                           jmp 0x400306b	      1225	obj-elf.c	FUNCTION_25	CALL_57
0x400304c	        0x41f6c410	                         test r12b, 0x10	      1120	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13
0x4003050	     0xf8502fbffff	                           jne 0x4002b58	      1120	obj-elf.c	FUNCTION_25	IF_3	IF_6	IF_13
0x4003056	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      1041	obj-elf.c	FUNCTION_25
0x400305e	    0xc74424140000	               mov dword [rsp + 0x14], 0	      1044	obj-elf.c	FUNCTION_25
0x4003066	      0xe922fbffff	                           jmp 0x4002b8d	      1044	obj-elf.c	FUNCTION_25
0x400306b	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      1230	obj-elf.c	FUNCTION_25
0x4003070	    0x644833042528	                xor rax, qword fs:[0x28]	      1230	obj-elf.c	FUNCTION_25
0x4003079	            0x7405	                            je 0x4003080	      1230	obj-elf.c	FUNCTION_25
0x400307b	      0xe800000000	                          call 0x4003080	      1230	obj-elf.c	FUNCTION_25
0x4003080	        0x4883c458	                           add rsp, 0x58	      1230	obj-elf.c	FUNCTION_25
0x4003084	              0x5b	                                 pop rbx	      1230	obj-elf.c	FUNCTION_25
0x4003085	              0x5d	                                 pop rbp	      1230	obj-elf.c	FUNCTION_25
0x4003086	            0x415c	                                 pop r12	      1230	obj-elf.c	FUNCTION_25
0x4003088	            0x415d	                                 pop r13	      1230	obj-elf.c	FUNCTION_25
0x400308a	            0x415e	                                 pop r14	      1230	obj-elf.c	FUNCTION_25
0x400308c	            0x415f	                                 pop r15	      1230	obj-elf.c	FUNCTION_25
0x400308e	              0xc3	                                     ret	      1230	obj-elf.c	FUNCTION_25
obj_elf_symver	DO,0:FOR,0:SWITCH,0:functions,0:ELSE,1:WHILE,0:IF,5:CALL,31	129
0x4000322	            0x4154	                                push r12	      1387	obj-elf.c	FUNCTION_34
0x4000324	              0x55	                                push rbp	      1387	obj-elf.c	FUNCTION_34
0x4000325	              0x53	                                push rbx	      1387	obj-elf.c	FUNCTION_34
0x4000326	        0x4883ec10	                           sub rsp, 0x10	      1387	obj-elf.c	FUNCTION_34
0x400032a	    0x64488b042528	                mov rax, qword fs:[0x28]	      1387	obj-elf.c	FUNCTION_34
0x4000333	      0x4889442408	                mov qword [rsp + 8], rax	      1387	obj-elf.c	FUNCTION_34
0x4000338	            0x31c0	                            xor eax, eax	      1387	obj-elf.c	FUNCTION_34
0x400033a	      0xe832ffffff	call sym.get_sym_from_input_line_and_check	      1393	obj-elf.c	FUNCTION_34	CALL_1
0x400033f	          0x4889c3	                            mov rbx, rax	      1393	obj-elf.c	FUNCTION_34	CALL_1
0x4000342	    0x488b05000000	            mov rax, qword [0x04000349] 	      1395	obj-elf.c	FUNCTION_34	IF_1
0x4000349	          0x80382c	                    cmp byte [rax], 0x2c	      1395	obj-elf.c	FUNCTION_34	IF_1
0x400034c	            0x742b	                            je 0x4000379	      1395	obj-elf.c	FUNCTION_34	IF_1
0x400034e	      0xba05000000	                              mov edx, 5	      1397	obj-elf.c	FUNCTION_34	IF_1	CALL_3
0x4000353	      0xbe00000000	                              mov esi, 0	      1397	obj-elf.c	FUNCTION_34	IF_1	CALL_3
0x4000358	      0xbf00000000	                              mov edi, 0	      1397	obj-elf.c	FUNCTION_34	IF_1	CALL_3
0x400035d	      0xe800000000	                          call 0x4000362	      1397	obj-elf.c	FUNCTION_34	IF_1	CALL_3
0x4000362	          0x4889c7	                            mov rdi, rax	      1397	obj-elf.c	FUNCTION_34	IF_1	CALL_3
0x4000365	      0xb800000000	                              mov eax, 0	      1397	obj-elf.c	FUNCTION_34	IF_1	CALL_3
0x400036a	      0xe800000000	                          call 0x400036f	      1397	obj-elf.c	FUNCTION_34	IF_1	CALL_3
0x400036f	      0xe800000000	                          call 0x4000374	      1398	obj-elf.c	FUNCTION_34	IF_1	CALL_4
0x4000374	      0xe99a010000	                           jmp 0x4000513	      1399	obj-elf.c	FUNCTION_34	IF_1
0x4000379	        0x488d5001	                      lea rdx, [rax + 1]	      1402	obj-elf.c	FUNCTION_34
0x400037d	    0x488915000000	            mov qword [0x04000384], rdx 	      1402	obj-elf.c	FUNCTION_34
0x4000384	        0x80780120	                cmp byte [rax + 1], 0x20	      1403	obj-elf.c	FUNCTION_34	CALL_5
0x4000388	            0x750b	                           jne 0x4000395	      1403	obj-elf.c	FUNCTION_34	CALL_5
0x400038a	        0x4883c002	                              add rax, 2	      1403	obj-elf.c	FUNCTION_34	CALL_5
0x400038e	    0x488905000000	            mov qword [0x04000395], rax 	      1403	obj-elf.c	FUNCTION_34	CALL_5
0x4000395	     0xfb62d000000	           movzx ebp, byte [0x0400039c] 	      1406	obj-elf.c	FUNCTION_34
0x400039c	            0x89e8	                            mov eax, ebp	      1407	obj-elf.c	FUNCTION_34
0x400039e	          0x83c801	                               or eax, 1	      1407	obj-elf.c	FUNCTION_34
0x40003a1	    0x880500000000	               mov byte [0x040003a7], al	      1407	obj-elf.c	FUNCTION_34
0x40003a7	          0x4889e7	                            mov rdi, rsp	      1408	obj-elf.c	FUNCTION_34	CALL_6
0x40003aa	      0xe800000000	                          call 0x40003af	      1408	obj-elf.c	FUNCTION_34	CALL_6
0x40003af	          0x4189c4	                           mov r12d, eax	      1408	obj-elf.c	FUNCTION_34	CALL_6
0x40003b2	    0x40882d000000	              mov byte [0x040003b9], bpl	      1409	obj-elf.c	FUNCTION_34
0x40003b9	          0x4889df	                            mov rdi, rbx	      1411	obj-elf.c	FUNCTION_34	IF_2	CALL_7
0x40003bc	      0xe800000000	                          call 0x40003c1	      1411	obj-elf.c	FUNCTION_34	IF_2	CALL_7
0x40003c1	            0x85c0	                           test eax, eax	      1411	obj-elf.c	FUNCTION_34	IF_2	CALL_7
0x40003c3	            0x7440	                            je 0x4000405	      1411	obj-elf.c	FUNCTION_34	IF_2	CALL_7
0x40003c5	          0x4889df	                            mov rdi, rbx	      1413	obj-elf.c	FUNCTION_34	IF_2	CALL_9
0x40003c8	      0xe800000000	                          call 0x40003cd	      1413	obj-elf.c	FUNCTION_34	IF_2	CALL_9
0x40003cd	          0x4889c5	                            mov rbp, rax	      1413	obj-elf.c	FUNCTION_34	IF_2	CALL_9
0x40003d0	        0x488b1c24	                    mov rbx, qword [rsp]	      1413	obj-elf.c	FUNCTION_34	IF_2	CALL_9
0x40003d4	      0xba05000000	                              mov edx, 5	      1413	obj-elf.c	FUNCTION_34	IF_2	CALL_9
0x40003d9	      0xbe00000000	                              mov esi, 0	      1413	obj-elf.c	FUNCTION_34	IF_2	CALL_9
0x40003de	      0xbf00000000	                              mov edi, 0	      1413	obj-elf.c	FUNCTION_34	IF_2	CALL_9
0x40003e3	      0xe800000000	                          call 0x40003e8	      1413	obj-elf.c	FUNCTION_34	IF_2	CALL_9
0x40003e8	          0x4889ea	                            mov rdx, rbp	      1413	obj-elf.c	FUNCTION_34	IF_2	CALL_9
0x40003eb	          0x4889de	                            mov rsi, rbx	      1413	obj-elf.c	FUNCTION_34	IF_2	CALL_9
0x40003ee	          0x4889c7	                            mov rdi, rax	      1413	obj-elf.c	FUNCTION_34	IF_2	CALL_9
0x40003f1	      0xb800000000	                              mov eax, 0	      1413	obj-elf.c	FUNCTION_34	IF_2	CALL_9
0x40003f6	      0xe800000000	                          call 0x40003fb	      1413	obj-elf.c	FUNCTION_34	IF_2	CALL_9
0x40003fb	      0xe800000000	                          call 0x4000400	      1415	obj-elf.c	FUNCTION_34	IF_2	CALL_11
0x4000400	      0xe90e010000	                           jmp 0x4000513	      1416	obj-elf.c	FUNCTION_34	IF_2
0x4000405	          0x4889df	                            mov rdi, rbx	      1419	obj-elf.c	FUNCTION_34	IF_3	CALL_12
0x4000408	      0xe800000000	                          call 0x400040d	      1419	obj-elf.c	FUNCTION_34	IF_3	CALL_12
0x400040d	      0x4883781000	               cmp qword [rax + 0x10], 0	      1419	obj-elf.c	FUNCTION_34	IF_3	CALL_12
0x4000412	     0xf8585000000	                           jne 0x400049d	      1419	obj-elf.c	FUNCTION_34	IF_3	CALL_12
0x4000418	          0x4889df	                            mov rdi, rbx	      1421	obj-elf.c	FUNCTION_34	IF_3	CALL_14
0x400041b	      0xe800000000	                          call 0x4000420	      1421	obj-elf.c	FUNCTION_34	IF_3	CALL_14
0x4000420	          0x4889c5	                            mov rbp, rax	      1421	obj-elf.c	FUNCTION_34	IF_3	CALL_14
0x4000423	        0x488b3c24	                    mov rdi, qword [rsp]	      1421	obj-elf.c	FUNCTION_34	IF_3	CALL_14
0x4000427	      0xe800000000	                          call 0x400042c	      1421	obj-elf.c	FUNCTION_34	IF_3	CALL_14
0x400042c	        0x48894510	            mov qword [rbp + 0x10], rax 	      1421	obj-elf.c	FUNCTION_34	IF_3	CALL_14
0x4000430	        0x410fbefc	                         movsx edi, r12b	      1423	obj-elf.c	FUNCTION_34	IF_3	CALL_15
0x4000434	      0xe800000000	                          call 0x4000439	      1423	obj-elf.c	FUNCTION_34	IF_3	CALL_15
0x4000439	          0x4889df	                            mov rdi, rbx	      1425	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_17
0x400043c	      0xe800000000	                          call 0x4000441	      1425	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_17
0x4000441	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      1425	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_17
0x4000445	      0xbe40000000	                           mov esi, 0x40	      1425	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_17
0x400044a	      0xe800000000	                          call 0x400044f	      1425	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_17
0x400044f	          0x4885c0	                           test rax, rax	      1425	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_17
0x4000452	     0xf85b6000000	                           jne 0x400050e	      1425	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_17
0x4000458	          0x4889df	                            mov rdi, rbx	      1428	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_19
0x400045b	      0xe800000000	                          call 0x4000460	      1428	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_19
0x4000460	          0x4889c5	                            mov rbp, rax	      1428	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_19
0x4000463	          0x4889df	                            mov rdi, rbx	      1429	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_20
0x4000466	      0xe800000000	                          call 0x400046b	      1429	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_20
0x400046b	        0x488b5810	            mov rbx, qword [rax + 0x10] 	      1428	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_19
0x400046f	      0xba05000000	                              mov edx, 5	      1428	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_19
0x4000474	      0xbe00000000	                              mov esi, 0	      1428	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_19
0x4000479	      0xbf00000000	                              mov edi, 0	      1428	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_19
0x400047e	      0xe800000000	                          call 0x4000483	      1428	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_19
0x4000483	          0x4889ea	                            mov rdx, rbp	      1428	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_19
0x4000486	          0x4889de	                            mov rsi, rbx	      1428	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_19
0x4000489	          0x4889c7	                            mov rdi, rax	      1428	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_19
0x400048c	      0xb800000000	                              mov eax, 0	      1428	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_19
0x4000491	      0xe800000000	                          call 0x4000496	      1428	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_19
0x4000496	      0xe800000000	                          call 0x400049b	      1431	obj-elf.c	FUNCTION_34	IF_3	IF_4	CALL_22
0x400049b	            0xeb76	                           jmp 0x4000513	      1432	obj-elf.c	FUNCTION_34	IF_3	IF_4
0x400049d	        0x488b2c24	                    mov rbp, qword [rsp]	      1437	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_24
0x40004a1	          0x4889df	                            mov rdi, rbx	      1437	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_24
0x40004a4	      0xe800000000	                          call 0x40004a9	      1437	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_24
0x40004a9	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      1437	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_24
0x40004ad	          0x4889ee	                            mov rsi, rbp	      1437	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_24
0x40004b0	      0xe800000000	                          call 0x40004b5	      1437	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_24
0x40004b5	            0x85c0	                           test eax, eax	      1437	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_24
0x40004b7	            0x744c	                            je 0x4000505	      1437	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_24
0x40004b9	          0x4889df	                            mov rdi, rbx	      1439	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_26
0x40004bc	      0xe800000000	                          call 0x40004c1	      1439	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_26
0x40004c1	          0x4989c4	                            mov r12, rax	      1439	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_26
0x40004c4	          0x4889df	                            mov rdi, rbx	      1440	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_27
0x40004c7	      0xe800000000	                          call 0x40004cc	      1440	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_27
0x40004cc	        0x488b6810	            mov rbp, qword [rax + 0x10] 	      1439	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_26
0x40004d0	        0x488b1c24	                    mov rbx, qword [rsp]	      1439	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_26
0x40004d4	      0xba05000000	                              mov edx, 5	      1439	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_26
0x40004d9	      0xbe00000000	                              mov esi, 0	      1439	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_26
0x40004de	      0xbf00000000	                              mov edi, 0	      1439	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_26
0x40004e3	      0xe800000000	                          call 0x40004e8	      1439	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_26
0x40004e8	          0x4c89e1	                            mov rcx, r12	      1439	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_26
0x40004eb	          0x4889ea	                            mov rdx, rbp	      1439	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_26
0x40004ee	          0x4889de	                            mov rsi, rbx	      1439	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_26
0x40004f1	          0x4889c7	                            mov rdi, rax	      1439	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_26
0x40004f4	      0xb800000000	                              mov eax, 0	      1439	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_26
0x40004f9	      0xe800000000	                          call 0x40004fe	      1439	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_26
0x40004fe	      0xe800000000	                          call 0x4000503	      1442	obj-elf.c	FUNCTION_34	ELSE_1	IF_5	CALL_29
0x4000503	            0xeb0e	                           jmp 0x4000513	      1443	obj-elf.c	FUNCTION_34	ELSE_1	IF_5
0x4000505	        0x410fbefc	                         movsx edi, r12b	      1446	obj-elf.c	FUNCTION_34	ELSE_1	CALL_30
0x4000509	      0xe800000000	                          call 0x400050e	      1446	obj-elf.c	FUNCTION_34	ELSE_1	CALL_30
0x400050e	      0xe800000000	                          call 0x4000513	      1449	obj-elf.c	FUNCTION_34	CALL_31
0x4000513	      0x488b442408	                mov rax, qword [rsp + 8]	      1450	obj-elf.c	FUNCTION_34
0x4000518	    0x644833042528	                xor rax, qword fs:[0x28]	      1450	obj-elf.c	FUNCTION_34
0x4000521	            0x7405	                            je 0x4000528	      1450	obj-elf.c	FUNCTION_34
0x4000523	      0xe800000000	                          call 0x4000528	      1450	obj-elf.c	FUNCTION_34
0x4000528	        0x4883c410	                           add rsp, 0x10	      1450	obj-elf.c	FUNCTION_34
0x400052c	              0x5b	                                 pop rbx	      1450	obj-elf.c	FUNCTION_34
0x400052d	              0x5d	                                 pop rbp	      1450	obj-elf.c	FUNCTION_34
0x400052e	            0x415c	                                 pop r12	      1450	obj-elf.c	FUNCTION_34
0x4000530	              0xc3	                                     ret	      1450	obj-elf.c	FUNCTION_34
obj_elf_ident	DO,0:FOR,0:SWITCH,0:functions,0:ELSE,1:WHILE,0:IF,1:CALL,8	33
0x4000ef0	              0x55	                                push rbp	      2078	obj-elf.c	FUNCTION_51
0x4000ef1	              0x53	                                push rbx	      2078	obj-elf.c	FUNCTION_51
0x4000ef2	        0x4883ec08	                              sub rsp, 8	      2078	obj-elf.c	FUNCTION_51
0x4000ef6	    0x488b1d000000	            mov rbx, qword [0x04000efd] 	      2080	obj-elf.c	FUNCTION_51
0x4000efd	    0x8b2d00000000	            mov ebp, dword [0x04000f03] 	      2081	obj-elf.c	FUNCTION_51
0x4000f03	    0x488b3d000000	            mov rdi, qword [0x04000f0a] 	      2087	obj-elf.c	FUNCTION_51	IF_1
0x4000f0a	          0x4885ff	                           test rdi, rdi	      2087	obj-elf.c	FUNCTION_51	IF_1
0x4000f0d	            0x754a	                           jne 0x4000f59	      2087	obj-elf.c	FUNCTION_51	IF_1
0x4000f0f	      0xbe00000000	                              mov esi, 0	      2090	obj-elf.c	FUNCTION_51	IF_1	CALL_2
0x4000f14	      0xbf00000000	                              mov edi, 0	      2090	obj-elf.c	FUNCTION_51	IF_1	CALL_2
0x4000f19	      0xe800000000	                          call 0x4000f1e	      2090	obj-elf.c	FUNCTION_51	IF_1	CALL_2
0x4000f1e	    0x488905000000	            mov qword [0x04000f25], rax 	      2090	obj-elf.c	FUNCTION_51	IF_1	CALL_2
0x4000f25	      0xba08018001	                      mov edx, 0x1800108	      2091	obj-elf.c	FUNCTION_51	IF_1	CALL_3
0x4000f2a	          0x4889c6	                            mov rsi, rax	      2091	obj-elf.c	FUNCTION_51	IF_1	CALL_3
0x4000f2d	    0x488b3d000000	            mov rdi, qword [0x04000f34] 	      2091	obj-elf.c	FUNCTION_51	IF_1	CALL_3
0x4000f34	      0xe800000000	                          call 0x4000f39	      2091	obj-elf.c	FUNCTION_51	IF_1	CALL_3
0x4000f39	    0x488b05000000	            mov rax, qword [0x04000f40] 	      2094	obj-elf.c	FUNCTION_51	IF_1
0x4000f40	    0xc780c4000000	               mov dword [rax + 0xc4], 1	      2094	obj-elf.c	FUNCTION_51	IF_1
0x4000f4a	      0xbf01000000	                              mov edi, 1	      2098	obj-elf.c	FUNCTION_51	IF_1	CALL_5
0x4000f4f	      0xe800000000	                          call 0x4000f54	      2098	obj-elf.c	FUNCTION_51	IF_1	CALL_5
0x4000f54	          0xc60000	                       mov byte [rax], 0	      2099	obj-elf.c	FUNCTION_51	IF_1
0x4000f57	            0xeb0a	                           jmp 0x4000f63	      2099	obj-elf.c	FUNCTION_51	IF_1
0x4000f59	      0xbe00000000	                              mov esi, 0	      2102	obj-elf.c	FUNCTION_51	CALL_6
0x4000f5e	      0xe800000000	                          call 0x4000f63	      2102	obj-elf.c	FUNCTION_51	CALL_6
0x4000f63	      0xbf09000000	                              mov edi, 9	      2103	obj-elf.c	FUNCTION_51	CALL_7
0x4000f68	      0xe800000000	                          call 0x4000f6d	      2103	obj-elf.c	FUNCTION_51	CALL_7
0x4000f6d	            0x89ee	                            mov esi, ebp	      2104	obj-elf.c	FUNCTION_51	CALL_8
0x4000f6f	          0x4889df	                            mov rdi, rbx	      2104	obj-elf.c	FUNCTION_51	CALL_8
0x4000f72	      0xe800000000	                          call 0x4000f77	      2104	obj-elf.c	FUNCTION_51	CALL_8
0x4000f77	        0x4883c408	                              add rsp, 8	      2105	obj-elf.c	FUNCTION_51
0x4000f7b	              0x5b	                                 pop rbx	      2105	obj-elf.c	FUNCTION_51
0x4000f7c	              0x5d	                                 pop rbp	      2105	obj-elf.c	FUNCTION_51
0x4000f7d	              0xc3	                                     ret	      2105	obj-elf.c	FUNCTION_51
obj_elf_line	DO,0:FOR,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:IF,0:CALL,3	8
0x4000531	        0x4883ec08	                              sub rsp, 8	      1372	obj-elf.c	FUNCTION_33
0x4000535	      0xe800000000	                          call 0x400053a	      1375	obj-elf.c	FUNCTION_33	CALL_2
0x400053a	            0x89c6	                            mov esi, eax	      1375	obj-elf.c	FUNCTION_33	CALL_2
0x400053c	      0xbf00000000	                              mov edi, 0	      1375	obj-elf.c	FUNCTION_33	CALL_2
0x4000541	      0xe800000000	                          call 0x4000546	      1375	obj-elf.c	FUNCTION_33	CALL_2
0x4000546	      0xe800000000	                          call 0x400054b	      1376	obj-elf.c	FUNCTION_33	CALL_3
0x400054b	        0x4883c408	                              add rsp, 8	      1377	obj-elf.c	FUNCTION_33
0x400054f	              0xc3	                                     ret	      1377	obj-elf.c	FUNCTION_33
adjust_stab_sections	DO,0:FOR,0:SWITCH,0:functions,0:ELSE,1:WHILE,0:IF,3:CALL,7	74
0x40016c9	            0x4155	                                push r13	      2141	obj-elf.c	FUNCTION_53
0x40016cb	            0x4154	                                push r12	      2141	obj-elf.c	FUNCTION_53
0x40016cd	              0x55	                                push rbp	      2141	obj-elf.c	FUNCTION_53
0x40016ce	              0x53	                                push rbx	      2141	obj-elf.c	FUNCTION_53
0x40016cf	        0x4883ec08	                              sub rsp, 8	      2141	obj-elf.c	FUNCTION_53
0x40016d3	          0x4889fd	                            mov rbp, rdi	      2141	obj-elf.c	FUNCTION_53
0x40016d6	          0x4889f3	                            mov rbx, rsi	      2141	obj-elf.c	FUNCTION_53
0x40016d9	          0x4c8b06	                     mov r8, qword [rsi]	      2147	obj-elf.c	FUNCTION_53	IF_1	CALL_1
0x40016dc	      0xbe00000000	                              mov esi, 0	      2147	obj-elf.c	FUNCTION_53	IF_1	CALL_1
0x40016e1	      0xb905000000	                              mov ecx, 5	      2147	obj-elf.c	FUNCTION_53	IF_1	CALL_1
0x40016e6	          0x4c89c7	                             mov rdi, r8	      2147	obj-elf.c	FUNCTION_53	IF_1	CALL_1
0x40016e9	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2147	obj-elf.c	FUNCTION_53	IF_1	CALL_1
0x40016eb	           0xf97c2	                                 seta dl	      2147	obj-elf.c	FUNCTION_53	IF_1	CALL_1
0x40016ee	           0xf92c0	                                 setb al	      2147	obj-elf.c	FUNCTION_53	IF_1	CALL_1
0x40016f1	            0x38c2	                              cmp dl, al	      2147	obj-elf.c	FUNCTION_53	IF_1	CALL_1
0x40016f3	     0xf85d3000000	                           jne 0x40017cc	      2147	obj-elf.c	FUNCTION_53	IF_1	CALL_1
0x40016f9	      0xb800000000	                              mov eax, 0	      2149	obj-elf.c	FUNCTION_53	IF_2	CALL_3
0x40016fe	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      2149	obj-elf.c	FUNCTION_53	IF_2	CALL_3
0x4001705	          0x4c89c7	                             mov rdi, r8	      2149	obj-elf.c	FUNCTION_53	IF_2	CALL_3
0x4001708	            0xf2ae	              repne scasb al, byte [rdi]	      2149	obj-elf.c	FUNCTION_53	IF_2	CALL_3
0x400170a	          0x4889ca	                            mov rdx, rcx	      2149	obj-elf.c	FUNCTION_53	IF_2	CALL_3
0x400170d	          0x48f7d2	                                 not rdx	      2149	obj-elf.c	FUNCTION_53	IF_2	CALL_3
0x4001710	      0x498d4410fc	                 lea rax, [r8 + rdx - 4]	      2149	obj-elf.c	FUNCTION_53	IF_2	CALL_3
0x4001715	          0x803873	                    cmp byte [rax], 0x73	      2149	obj-elf.c	FUNCTION_53	IF_2	CALL_3
0x4001718	            0x7516	                           jne 0x4001730	      2149	obj-elf.c	FUNCTION_53	IF_2	CALL_3
0x400171a	        0x80780174	                cmp byte [rax + 1], 0x74	      2149	obj-elf.c	FUNCTION_53	IF_2	CALL_3
0x400171e	            0x7510	                           jne 0x4001730	      2149	obj-elf.c	FUNCTION_53	IF_2	CALL_3
0x4001720	        0x80780272	                cmp byte [rax + 2], 0x72	      2149	obj-elf.c	FUNCTION_53	IF_2	CALL_3
0x4001724	            0x750a	                           jne 0x4001730	      2149	obj-elf.c	FUNCTION_53	IF_2	CALL_3
0x4001726	        0x80780300	                   cmp byte [rax + 3], 0	      2149	obj-elf.c	FUNCTION_53	IF_2	CALL_3
0x400172a	     0xf849c000000	                            je 0x40017cc	      2149	obj-elf.c	FUNCTION_53	IF_2	CALL_3
0x4001730	      0xba00000000	                              mov edx, 0	      2152	obj-elf.c	FUNCTION_53	CALL_4
0x4001735	      0xbe00000000	                              mov esi, 0	      2152	obj-elf.c	FUNCTION_53	CALL_4
0x400173a	          0x4c89c7	                             mov rdi, r8	      2152	obj-elf.c	FUNCTION_53	CALL_4
0x400173d	      0xb800000000	                              mov eax, 0	      2152	obj-elf.c	FUNCTION_53	CALL_4
0x4001742	      0xe800000000	                          call 0x4001747	      2152	obj-elf.c	FUNCTION_53	CALL_4
0x4001747	          0x4989c5	                            mov r13, rax	      2152	obj-elf.c	FUNCTION_53	CALL_4
0x400174a	          0x4889c6	                            mov rsi, rax	      2153	obj-elf.c	FUNCTION_53	CALL_5
0x400174d	          0x4889ef	                            mov rdi, rbp	      2153	obj-elf.c	FUNCTION_53	CALL_5
0x4001750	      0xe800000000	                          call 0x4001755	      2153	obj-elf.c	FUNCTION_53	CALL_5
0x4001755	          0x4885c0	                           test rax, rax	      2154	obj-elf.c	FUNCTION_53	IF_3
0x4001758	            0x7406	                            je 0x4001760	      2154	obj-elf.c	FUNCTION_53	IF_3
0x400175a	        0x448b6038	           mov r12d, dword [rax + 0x38] 	      2155	obj-elf.c	FUNCTION_53	IF_3
0x400175e	            0xeb06	                           jmp 0x4001766	      2155	obj-elf.c	FUNCTION_53	IF_3
0x4001760	    0x41bc00000000	                             mov r12d, 0	      2157	obj-elf.c	FUNCTION_53	ELSE_1
0x4001766	    0x48baabaaaaaa	          movabs rdx, 0xaaaaaaaaaaaaaaab	      2158	obj-elf.c	FUNCTION_53
0x4001770	          0x4889d0	                            mov rax, rdx	      2158	obj-elf.c	FUNCTION_53
0x4001773	        0x48f76338	                  mul qword [rbx + 0x38]	      2158	obj-elf.c	FUNCTION_53
0x4001777	        0x48c1ea03	                              shr rdx, 3	      2158	obj-elf.c	FUNCTION_53
0x400177b	          0x8d7aff	                      lea edi, [rdx - 1]	      2158	obj-elf.c	FUNCTION_53
0x400177e	    0x488b83a80000	            mov rax, qword [rbx + 0xa8] 	      2160	obj-elf.c	FUNCTION_53	CALL_6
0x4001785	        0x488b5850	            mov rbx, qword [rax + 0x50] 	      2160	obj-elf.c	FUNCTION_53	CALL_6
0x4001789	          0x4885db	                           test rbx, rbx	      2161	obj-elf.c	FUNCTION_53
0x400178c	            0x7514	                           jne 0x40017a2	      2161	obj-elf.c	FUNCTION_53
0x400178e	      0xba00000000	                              mov edx, 0	      2161	obj-elf.c	FUNCTION_53
0x4001793	      0xbe71080000	                          mov esi, 0x871	      2161	obj-elf.c	FUNCTION_53
0x4001798	      0xbf00000000	                              mov edi, 0	      2161	obj-elf.c	FUNCTION_53
0x400179d	      0xe800000000	                          call 0x40017a2	      2161	obj-elf.c	FUNCTION_53
0x40017a2	        0x488d7306	                      lea rsi, [rbx + 6]	      2163	obj-elf.c	FUNCTION_53
0x40017a6	          0x4863ff	                         movsxd rdi, edi	      2163	obj-elf.c	FUNCTION_53
0x40017a9	        0x488b4508	                mov rax, qword [rbp + 8]	      2163	obj-elf.c	FUNCTION_53
0x40017ad	    0xff90a8000000	                 call qword [rax + 0xa8]	      2163	obj-elf.c	FUNCTION_53
0x40017b3	        0x488d7308	                      lea rsi, [rbx + 8]	      2164	obj-elf.c	FUNCTION_53
0x40017b7	          0x4963fc	                        movsxd rdi, r12d	      2164	obj-elf.c	FUNCTION_53
0x40017ba	        0x488b4508	                mov rax, qword [rbp + 8]	      2164	obj-elf.c	FUNCTION_53
0x40017be	    0xff9090000000	                 call qword [rax + 0x90]	      2164	obj-elf.c	FUNCTION_53
0x40017c4	          0x4c89ef	                            mov rdi, r13	      2165	obj-elf.c	FUNCTION_53	CALL_7
0x40017c7	      0xe800000000	                          call 0x40017cc	      2165	obj-elf.c	FUNCTION_53	CALL_7
0x40017cc	        0x4883c408	                              add rsp, 8	      2166	obj-elf.c	FUNCTION_53
0x40017d0	              0x5b	                                 pop rbx	      2166	obj-elf.c	FUNCTION_53
0x40017d1	              0x5d	                                 pop rbp	      2166	obj-elf.c	FUNCTION_53
0x40017d2	            0x415c	                                 pop r12	      2166	obj-elf.c	FUNCTION_53
0x40017d4	            0x415d	                                 pop r13	      2166	obj-elf.c	FUNCTION_53
0x40017d6	              0xc3	                                     ret	      2166	obj-elf.c	FUNCTION_53
elf_s_get_align	DO,0:FOR,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:IF,0:CALL,1	5
0x400016b	        0x4883ec08	                              sub rsp, 8	       233	obj-elf.c	FUNCTION_5
0x400016f	      0xe800000000	                          call 0x4000174	       234	obj-elf.c	FUNCTION_5	CALL_1
0x4000174	        0x488b4030	            mov rax, qword [rax + 0x30] 	       234	obj-elf.c	FUNCTION_5	CALL_1
0x4000178	        0x4883c408	                              add rsp, 8	       235	obj-elf.c	FUNCTION_5
0x400017c	              0xc3	                                     ret	       235	obj-elf.c	FUNCTION_5
obj_elf_get_vtable_entry	DO,0:FOR,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:IF,3:CALL,8	47
0x40032dc	              0x55	                                push rbp	      1536	obj-elf.c	FUNCTION_37
0x40032dd	              0x53	                                push rbx	      1536	obj-elf.c	FUNCTION_37
0x40032de	        0x4883ec08	                              sub rsp, 8	      1536	obj-elf.c	FUNCTION_37
0x40032e2	    0x488b05000000	            mov rax, qword [0x040032e9] 	      1540	obj-elf.c	FUNCTION_37	IF_1
0x40032e9	          0x803823	                    cmp byte [rax], 0x23	      1540	obj-elf.c	FUNCTION_37	IF_1
0x40032ec	            0x750b	                           jne 0x40032f9	      1540	obj-elf.c	FUNCTION_37	IF_1
0x40032ee	        0x4883c001	                              add rax, 1	      1541	obj-elf.c	FUNCTION_37	IF_1
0x40032f2	    0x488905000000	            mov qword [0x040032f9], rax 	      1541	obj-elf.c	FUNCTION_37	IF_1
0x40032f9	      0xe873cfffff	call sym.get_sym_from_input_line_and_check	      1543	obj-elf.c	FUNCTION_37	CALL_1
0x40032fe	          0x4889c3	                            mov rbx, rax	      1543	obj-elf.c	FUNCTION_37	CALL_1
0x4003301	    0x488b05000000	            mov rax, qword [0x04003308] 	      1544	obj-elf.c	FUNCTION_37	IF_2
0x4003308	          0x80382c	                    cmp byte [rax], 0x2c	      1544	obj-elf.c	FUNCTION_37	IF_2
0x400330b	            0x742d	                            je 0x400333a	      1544	obj-elf.c	FUNCTION_37	IF_2
0x400330d	      0xba05000000	                              mov edx, 5	      1546	obj-elf.c	FUNCTION_37	IF_2	CALL_3
0x4003312	      0xbe00000000	                              mov esi, 0	      1546	obj-elf.c	FUNCTION_37	IF_2	CALL_3
0x4003317	      0xbf00000000	                              mov edi, 0	      1546	obj-elf.c	FUNCTION_37	IF_2	CALL_3
0x400331c	      0xe800000000	                          call 0x4003321	      1546	obj-elf.c	FUNCTION_37	IF_2	CALL_3
0x4003321	          0x4889c7	                            mov rdi, rax	      1546	obj-elf.c	FUNCTION_37	IF_2	CALL_3
0x4003324	      0xb800000000	                              mov eax, 0	      1546	obj-elf.c	FUNCTION_37	IF_2	CALL_3
0x4003329	      0xe800000000	                          call 0x400332e	      1546	obj-elf.c	FUNCTION_37	IF_2	CALL_3
0x400332e	      0xe800000000	                          call 0x4003333	      1547	obj-elf.c	FUNCTION_37	IF_2	CALL_4
0x4003333	      0xb800000000	                              mov eax, 0	      1548	obj-elf.c	FUNCTION_37	IF_2
0x4003338	            0xeb5a	                           jmp 0x4003394	      1548	obj-elf.c	FUNCTION_37	IF_2
0x400333a	        0x488d5001	                      lea rdx, [rax + 1]	      1551	obj-elf.c	FUNCTION_37
0x400333e	    0x488915000000	            mov qword [0x04003345], rdx 	      1551	obj-elf.c	FUNCTION_37
0x4003345	        0x80780123	                cmp byte [rax + 1], 0x23	      1552	obj-elf.c	FUNCTION_37	IF_3
0x4003349	            0x750b	                           jne 0x4003356	      1552	obj-elf.c	FUNCTION_37	IF_3
0x400334b	        0x4883c002	                              add rax, 2	      1553	obj-elf.c	FUNCTION_37	IF_3
0x400334f	    0x488905000000	            mov qword [0x04003356], rax 	      1553	obj-elf.c	FUNCTION_37	IF_3
0x4003356	      0xe800000000	                          call 0x400335b	      1555	obj-elf.c	FUNCTION_37	CALL_5
0x400335b	          0x4889c5	                            mov rbp, rax	      1555	obj-elf.c	FUNCTION_37	CALL_5
0x400335e	      0xe800000000	                          call 0x4003363	      1557	obj-elf.c	FUNCTION_37	CALL_6
0x4003363	      0xe800000000	                          call 0x4003368	      1559	obj-elf.c	FUNCTION_37	CALL_8
0x4003368	        0x4883ec08	                              sub rsp, 8	      1559	obj-elf.c	FUNCTION_37	CALL_8
0x400336c	      0x68a4050000	                              push 0x5a4	      1559	obj-elf.c	FUNCTION_37	CALL_8
0x4003371	    0x41b900000000	                              mov r9d, 0	      1559	obj-elf.c	FUNCTION_37	CALL_8
0x4003377	          0x4989e8	                             mov r8, rbp	      1559	obj-elf.c	FUNCTION_37	CALL_8
0x400337a	          0x4889d9	                            mov rcx, rbx	      1559	obj-elf.c	FUNCTION_37	CALL_8
0x400337d	      0xba00000000	                              mov edx, 0	      1559	obj-elf.c	FUNCTION_37	CALL_8
0x4003382	            0x89c6	                            mov esi, eax	      1559	obj-elf.c	FUNCTION_37	CALL_8
0x4003384	    0x488b3d000000	            mov rdi, qword [0x0400338b] 	      1559	obj-elf.c	FUNCTION_37	CALL_8
0x400338b	      0xe800000000	                          call 0x4003390	      1559	obj-elf.c	FUNCTION_37	CALL_8
0x4003390	        0x4883c410	                           add rsp, 0x10	      1559	obj-elf.c	FUNCTION_37	CALL_8
0x4003394	        0x4883c408	                              add rsp, 8	      1561	obj-elf.c	FUNCTION_37
0x4003398	              0x5b	                                 pop rbx	      1561	obj-elf.c	FUNCTION_37
0x4003399	              0x5d	                                 pop rbp	      1561	obj-elf.c	FUNCTION_37
0x400339a	              0xc3	                                     ret	      1561	obj-elf.c	FUNCTION_37
free_section_idx	DO,0:FOR,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:IF,0:CALL,1	5
0x4000b25	        0x4883ec08	                              sub rsp, 8	      2413	obj-elf.c	FUNCTION_59
0x4000b29	          0x4889f7	                            mov rdi, rsi	      2414	obj-elf.c	FUNCTION_59	CALL_1
0x4000b2c	      0xe800000000	                          call 0x4000b31	      2414	obj-elf.c	FUNCTION_59	CALL_1
0x4000b31	        0x4883c408	                              add rsp, 8	      2415	obj-elf.c	FUNCTION_59
0x4000b35	              0xc3	                                     ret	      2415	obj-elf.c	FUNCTION_59
elf_common_parse	DO,0:FOR,0:SWITCH,0:functions,0:ELSE,4:WHILE,2:IF,8:CALL,15	121
0x4001121	            0x4155	                                push r13	       309	obj-elf.c	FUNCTION_11
0x4001123	            0x4154	                                push r12	       309	obj-elf.c	FUNCTION_11
0x4001125	              0x55	                                push rbp	       309	obj-elf.c	FUNCTION_11
0x4001126	              0x53	                                push rbx	       309	obj-elf.c	FUNCTION_11
0x4001127	        0x4883ec08	                              sub rsp, 8	       309	obj-elf.c	FUNCTION_11
0x400112b	          0x4889f3	                            mov rbx, rsi	       309	obj-elf.c	FUNCTION_11
0x400112e	          0x4989d5	                            mov r13, rdx	       309	obj-elf.c	FUNCTION_11
0x4001131	          0x4889f7	                            mov rdi, rsi	       311	obj-elf.c	FUNCTION_11	CALL_1
0x4001134	      0xe800000000	                          call 0x4001139	       311	obj-elf.c	FUNCTION_11	CALL_1
0x4001139	          0x448b20	                   mov r12d, dword [rax]	       311	obj-elf.c	FUNCTION_11	CALL_1
0x400113c	    0x488b05000000	            mov rax, qword [0x04001143] 	       313	obj-elf.c	FUNCTION_11	IF_1
0x4001143	      0xbd00000000	                              mov ebp, 0	       310	obj-elf.c	FUNCTION_11
0x4001148	          0x80382c	                    cmp byte [rax], 0x2c	       313	obj-elf.c	FUNCTION_11	IF_1
0x400114b	     0xf8531010000	                           jne 0x4001282	       313	obj-elf.c	FUNCTION_11	IF_1
0x4001151	        0x488d5001	                      lea rdx, [rax + 1]	       317	obj-elf.c	FUNCTION_11	IF_1
0x4001155	    0x488915000000	            mov qword [0x0400115c], rdx 	       317	obj-elf.c	FUNCTION_11	IF_1
0x400115c	        0x80780120	                cmp byte [rax + 1], 0x20	       318	obj-elf.c	FUNCTION_11	IF_1	CALL_2
0x4001160	            0x750b	                           jne 0x400116d	       318	obj-elf.c	FUNCTION_11	IF_1	CALL_2
0x4001162	        0x488d5002	                      lea rdx, [rax + 2]	       318	obj-elf.c	FUNCTION_11	IF_1	CALL_2
0x4001166	    0x488915000000	            mov qword [0x0400116d], rdx 	       318	obj-elf.c	FUNCTION_11	IF_1	CALL_2
0x400116d	    0x488b15000000	            mov rdx, qword [0x04001174] 	       320	obj-elf.c	FUNCTION_11	IF_1	IF_2
0x4001174	          0x803a22	                    cmp byte [rdx], 0x22	       320	obj-elf.c	FUNCTION_11	IF_1	IF_2
0x4001177	     0xf85ed000000	                           jne 0x400126a	       320	obj-elf.c	FUNCTION_11	IF_1	IF_2
0x400117d	        0x488d4201	                      lea rax, [rdx + 1]	       323	obj-elf.c	FUNCTION_11	IF_1	IF_2
0x4001181	    0x488905000000	            mov qword [0x04001188], rax 	       323	obj-elf.c	FUNCTION_11	IF_1	IF_2
0x4001188	        0x807a012e	                cmp byte [rdx + 1], 0x2e	       325	obj-elf.c	FUNCTION_11	IF_1	IF_2	IF_3
0x400118c	            0x750b	                           jne 0x4001199	       325	obj-elf.c	FUNCTION_11	IF_1	IF_2	IF_3
0x400118e	        0x4883c202	                              add rdx, 2	       326	obj-elf.c	FUNCTION_11	IF_1	IF_2	IF_3
0x4001192	    0x488915000000	            mov qword [0x04001199], rdx 	       326	obj-elf.c	FUNCTION_11	IF_1	IF_2	IF_3
0x4001199	    0x488b2d000000	            mov rbp, qword [0x040011a0] 	       328	obj-elf.c	FUNCTION_11	IF_1	IF_2	IF_4	CALL_3
0x40011a0	      0xbf00000000	                              mov edi, 0	       328	obj-elf.c	FUNCTION_11	IF_1	IF_2	IF_4	CALL_3
0x40011a5	      0xb904000000	                              mov ecx, 4	       328	obj-elf.c	FUNCTION_11	IF_1	IF_2	IF_4	CALL_3
0x40011aa	          0x4889ee	                            mov rsi, rbp	       328	obj-elf.c	FUNCTION_11	IF_1	IF_2	IF_4	CALL_3
0x40011ad	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       328	obj-elf.c	FUNCTION_11	IF_1	IF_2	IF_4	CALL_3
0x40011af	           0xf97c2	                                 seta dl	       328	obj-elf.c	FUNCTION_11	IF_1	IF_2	IF_4	CALL_3
0x40011b2	           0xf92c0	                                 setb al	       328	obj-elf.c	FUNCTION_11	IF_1	IF_2	IF_4	CALL_3
0x40011b5	            0x38c2	                              cmp dl, al	       328	obj-elf.c	FUNCTION_11	IF_1	IF_2	IF_4	CALL_3
0x40011b7	            0x7510	                           jne 0x40011c9	       328	obj-elf.c	FUNCTION_11	IF_1	IF_2	IF_4	CALL_3
0x40011b9	        0x4883c504	                              add rbp, 4	       329	obj-elf.c	FUNCTION_11	IF_1	IF_2	IF_4
0x40011bd	    0x48892d000000	            mov qword [0x040011c4], rbp 	       329	obj-elf.c	FUNCTION_11	IF_1	IF_2	IF_4
0x40011c4	      0xe91e010000	                           jmp 0x40012e7	       329	obj-elf.c	FUNCTION_11	IF_1	IF_2	IF_4
0x40011c9	      0xbf00000000	                              mov edi, 0	       330	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_1	IF_5	CALL_4
0x40011ce	      0xb905000000	                              mov ecx, 5	       330	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_1	IF_5	CALL_4
0x40011d3	          0x4889ee	                            mov rsi, rbp	       330	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_1	IF_5	CALL_4
0x40011d6	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       330	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_1	IF_5	CALL_4
0x40011d8	           0xf97c2	                                 seta dl	       330	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_1	IF_5	CALL_4
0x40011db	           0xf92c0	                                 setb al	       330	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_1	IF_5	CALL_4
0x40011de	            0x38c2	                              cmp dl, al	       330	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_1	IF_5	CALL_4
0x40011e0	            0x7510	                           jne 0x40011f2	       330	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_1	IF_5	CALL_4
0x40011e2	        0x4883c505	                              add rbp, 5	       331	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_1	IF_5
0x40011e6	    0x48892d000000	            mov qword [0x040011ed], rbp 	       331	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_1	IF_5
0x40011ed	      0xe9f5000000	                           jmp 0x40012e7	       331	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_1	IF_5
0x40011f2	        0x4883ed01	                              sub rbp, 1	       337	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	WHILE_1
0x40011f6	        0x807d0022	                    cmp byte [rbp], 0x22	       337	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	WHILE_1
0x40011fa	            0x75f6	                           jne 0x40011f2	       337	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	WHILE_1
0x40011fc	            0xeb10	                           jmp 0x400120e	       337	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	WHILE_1
0x40011fe	        0x488d5001	                      lea rdx, [rax + 1]	       340	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	WHILE_2	IF_6
0x4001202	    0x488915000000	            mov qword [0x04001209], rdx 	       340	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	WHILE_2	IF_6
0x4001209	          0x803822	                    cmp byte [rax], 0x22	       340	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	WHILE_2	IF_6
0x400120c	            0x7413	                            je 0x4001221	       340	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	WHILE_2	IF_6
0x400120e	    0x488b05000000	            mov rax, qword [0x04001215] 	       339	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	WHILE_2
0x4001215	           0xfb610	                   movzx edx, byte [rax]	       339	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	WHILE_2
0x4001218	    0x80ba00000000	                       cmp byte [rdx], 0	       339	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	WHILE_2
0x400121f	            0x74dd	                            je 0x40011fe	       339	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	WHILE_2
0x4001221	    0x488b05000000	            mov rax, qword [0x04001228] 	       342	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2
0x4001228	           0xfb618	                   movzx ebx, byte [rax]	       342	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2
0x400122b	          0xc60000	                       mov byte [rax], 0	       343	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2
0x400122e	      0xba05000000	                              mov edx, 5	       344	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	CALL_6
0x4001233	      0xbe00000000	                              mov esi, 0	       344	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	CALL_6
0x4001238	      0xbf00000000	                              mov edi, 0	       344	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	CALL_6
0x400123d	      0xe800000000	                          call 0x4001242	       344	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	CALL_6
0x4001242	          0x4889ee	                            mov rsi, rbp	       344	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	CALL_6
0x4001245	          0x4889c7	                            mov rdi, rax	       344	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	CALL_6
0x4001248	      0xb800000000	                              mov eax, 0	       344	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	CALL_6
0x400124d	      0xe800000000	                          call 0x4001252	       344	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	CALL_6
0x4001252	    0x488b05000000	            mov rax, qword [0x04001259] 	       345	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2
0x4001259	            0x8818	                      mov byte [rax], bl	       345	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2
0x400125b	      0xe800000000	                          call 0x4001260	       346	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2	CALL_7
0x4001260	      0xb800000000	                              mov eax, 0	       347	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2
0x4001265	      0xe984000000	                           jmp 0x40012ee	       347	obj-elf.c	FUNCTION_11	IF_1	IF_2	ELSE_2
0x400126a	    0x488905000000	            mov qword [0x04001271], rax 	       354	obj-elf.c	FUNCTION_11	IF_1	ELSE_3
0x4001271	          0x4489e7	                           mov edi, r12d	       355	obj-elf.c	FUNCTION_11	IF_1	ELSE_3	CALL_8
0x4001274	      0xe800000000	                          call 0x4001279	       355	obj-elf.c	FUNCTION_11	IF_1	ELSE_3	CALL_8
0x4001279	          0x4889c5	                            mov rbp, rax	       355	obj-elf.c	FUNCTION_11	IF_1	ELSE_3	CALL_8
0x400127c	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	       356	obj-elf.c	FUNCTION_11	IF_1	ELSE_3	IF_7
0x4001280	            0x745e	                            je 0x40012e0	       356	obj-elf.c	FUNCTION_11	IF_1	ELSE_3	IF_7
0x4001282	          0x4585e4	                         test r12d, r12d	       361	obj-elf.c	FUNCTION_11	IF_8
0x4001285	            0x7417	                            je 0x400129e	       361	obj-elf.c	FUNCTION_11	IF_8
0x4001287	            0x89ea	                            mov edx, ebp	       363	obj-elf.c	FUNCTION_11	IF_8	CALL_9
0x4001289	          0x4c89ee	                            mov rsi, r13	       363	obj-elf.c	FUNCTION_11	IF_8	CALL_9
0x400128c	          0x4889df	                            mov rdi, rbx	       363	obj-elf.c	FUNCTION_11	IF_8	CALL_9
0x400128f	      0xe800000000	                          call 0x4001294	       363	obj-elf.c	FUNCTION_11	IF_8	CALL_9
0x4001294	          0x4889df	                            mov rdi, rbx	       364	obj-elf.c	FUNCTION_11	IF_8	CALL_10
0x4001297	      0xe800000000	                          call 0x400129c	       364	obj-elf.c	FUNCTION_11	IF_8	CALL_10
0x400129c	            0xeb2e	                           jmp 0x40012cc	       364	obj-elf.c	FUNCTION_11	IF_8	CALL_10
0x400129e	          0x4c89ee	                            mov rsi, r13	       368	obj-elf.c	FUNCTION_11	ELSE_4	CALL_11
0x40012a1	          0x4889df	                            mov rdi, rbx	       368	obj-elf.c	FUNCTION_11	ELSE_4	CALL_11
0x40012a4	      0xe800000000	                          call 0x40012a9	       368	obj-elf.c	FUNCTION_11	ELSE_4	CALL_11
0x40012a9	          0x4889df	                            mov rdi, rbx	       369	obj-elf.c	FUNCTION_11	ELSE_4	CALL_12
0x40012ac	      0xe800000000	                          call 0x40012b1	       369	obj-elf.c	FUNCTION_11	ELSE_4	CALL_12
0x40012b1	        0x48896830	             mov qword [rax + 0x30], rbp	       369	obj-elf.c	FUNCTION_11	ELSE_4	CALL_12
0x40012b5	          0x4889df	                            mov rdi, rbx	       370	obj-elf.c	FUNCTION_11	ELSE_4	CALL_13
0x40012b8	      0xe800000000	                          call 0x40012bd	       370	obj-elf.c	FUNCTION_11	ELSE_4	CALL_13
0x40012bd	    0x488b35000000	            mov rsi, qword [0x040012c4] 	       371	obj-elf.c	FUNCTION_11	ELSE_4	CALL_14
0x40012c4	          0x4889df	                            mov rdi, rbx	       371	obj-elf.c	FUNCTION_11	ELSE_4	CALL_14
0x40012c7	      0xe800000000	                          call 0x40012cc	       371	obj-elf.c	FUNCTION_11	ELSE_4	CALL_14
0x40012cc	          0x4889df	                            mov rdi, rbx	       374	obj-elf.c	FUNCTION_11	CALL_15
0x40012cf	      0xe800000000	                          call 0x40012d4	       374	obj-elf.c	FUNCTION_11	CALL_15
0x40012d4	    0x814818000001	          or dword [rax + 0x18], 0x10000	       374	obj-elf.c	FUNCTION_11	CALL_15
0x40012db	          0x4889d8	                            mov rax, rbx	       376	obj-elf.c	FUNCTION_11
0x40012de	            0xeb0e	                           jmp 0x40012ee	       376	obj-elf.c	FUNCTION_11
0x40012e0	      0xb800000000	                              mov eax, 0	       357	obj-elf.c	FUNCTION_11	IF_1	ELSE_3	IF_7
0x40012e5	            0xeb07	                           jmp 0x40012ee	       357	obj-elf.c	FUNCTION_11	IF_1	ELSE_3	IF_7
0x40012e7	      0xbd00000000	                              mov ebp, 0	       310	obj-elf.c	FUNCTION_11
0x40012ec	            0xebb0	                           jmp 0x400129e	       310	obj-elf.c	FUNCTION_11
0x40012ee	        0x4883c408	                              add rsp, 8	       377	obj-elf.c	FUNCTION_11
0x40012f2	              0x5b	                                 pop rbx	       377	obj-elf.c	FUNCTION_11
0x40012f3	              0x5d	                                 pop rbp	       377	obj-elf.c	FUNCTION_11
0x40012f4	            0x415c	                                 pop r12	       377	obj-elf.c	FUNCTION_11
0x40012f6	            0x415d	                                 pop r13	       377	obj-elf.c	FUNCTION_11
0x40012f8	              0xc3	                                     ret	       377	obj-elf.c	FUNCTION_11
obj_elf_gnu_attribute	DO,0:FOR,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:IF,0:CALL,1	5
0x400375f	        0x4883ec08	                              sub rsp, 8	      1757	obj-elf.c	FUNCTION_43
0x4003763	      0xbf01000000	                              mov edi, 1	      1758	obj-elf.c	FUNCTION_43	CALL_1
0x4003768	      0xe800000000	                          call 0x400376d	      1758	obj-elf.c	FUNCTION_43	CALL_1
0x400376d	        0x4883c408	                              add rsp, 8	      1759	obj-elf.c	FUNCTION_43
0x4003771	              0xc3	                                     ret	      1759	obj-elf.c	FUNCTION_43
get_section	DO,0:FOR,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:IF,0:CALL,3	25
0x400021f	    0x488b8ee00000	            mov rcx, qword [rsi + 0xe0] 	       531	obj-elf.c	FUNCTION_19	CALL_1
0x4000226	      0xb800000000	                              mov eax, 0	       535	obj-elf.c	FUNCTION_19
0x400022b	          0x8b7a08	                mov edi, dword [rdx + 8]	       535	obj-elf.c	FUNCTION_19
0x400022e	          0x39792c	            cmp dword [rcx + 0x2c], edi 	       535	obj-elf.c	FUNCTION_19
0x4000231	            0x753c	                           jne 0x400026f	       535	obj-elf.c	FUNCTION_19
0x4000233	          0x488b32	                    mov rsi, qword [rdx]	       530	obj-elf.c	FUNCTION_19
0x4000236	    0x488bb9b00000	            mov rdi, qword [rcx + 0xb0] 	       531	obj-elf.c	FUNCTION_19	CALL_1
0x400023d	          0x4839fe	                            cmp rsi, rdi	       535	obj-elf.c	FUNCTION_19
0x4000240	            0x741d	                            je 0x400025f	       535	obj-elf.c	FUNCTION_19
0x4000242	          0x4885ff	                           test rdi, rdi	       536	obj-elf.c	FUNCTION_19
0x4000245	            0x741e	                            je 0x4000265	       536	obj-elf.c	FUNCTION_19
0x4000247	          0x4885f6	                           test rsi, rsi	       536	obj-elf.c	FUNCTION_19
0x400024a	            0x7419	                            je 0x4000265	       536	obj-elf.c	FUNCTION_19
0x400024c	        0x4883ec08	                              sub rsp, 8	       528	obj-elf.c	FUNCTION_19
0x4000250	      0xe800000000	                          call 0x4000255	       538	obj-elf.c	FUNCTION_19	CALL_3
0x4000255	            0x85c0	                           test eax, eax	       535	obj-elf.c	FUNCTION_19
0x4000257	           0xf94c0	                                 sete al	       535	obj-elf.c	FUNCTION_19
0x400025a	           0xfb6c0	                           movzx eax, al	       535	obj-elf.c	FUNCTION_19
0x400025d	            0xeb0c	                           jmp 0x400026b	       535	obj-elf.c	FUNCTION_19
0x400025f	      0xb801000000	                              mov eax, 1	       535	obj-elf.c	FUNCTION_19
0x4000264	              0xc3	                                     ret	       535	obj-elf.c	FUNCTION_19
0x4000265	      0xb800000000	                              mov eax, 0	       535	obj-elf.c	FUNCTION_19
0x400026a	              0xc3	                                     ret	       535	obj-elf.c	FUNCTION_19
0x400026b	        0x4883c408	                              add rsp, 8	       539	obj-elf.c	FUNCTION_19
0x400026f	            0xf3c3	                                     ret	       539	obj-elf.c	FUNCTION_19
obj_elf_change_section	DO,0:FOR,0:SWITCH,0:functions,0:ELSE,12:WHILE,0:IF,27:CALL,39	338
0x4001f72	            0x4157	                                push r15	       568	obj-elf.c	FUNCTION_20
0x4001f74	            0x4156	                                push r14	       568	obj-elf.c	FUNCTION_20
0x4001f76	            0x4155	                                push r13	       568	obj-elf.c	FUNCTION_20
0x4001f78	            0x4154	                                push r12	       568	obj-elf.c	FUNCTION_20
0x4001f7a	              0x55	                                push rbp	       568	obj-elf.c	FUNCTION_20
0x4001f7b	              0x53	                                push rbx	       568	obj-elf.c	FUNCTION_20
0x4001f7c	        0x4883ec48	                           sub rsp, 0x48	       568	obj-elf.c	FUNCTION_20
0x4001f80	      0x48897c2408	                mov qword [rsp + 8], rdi	       568	obj-elf.c	FUNCTION_20
0x4001f85	          0x4189f4	                           mov r12d, esi	       568	obj-elf.c	FUNCTION_20
0x4001f88	        0x89542418	             mov dword [rsp + 0x18], edx	       568	obj-elf.c	FUNCTION_20
0x4001f8c	          0x4889cb	                            mov rbx, rcx	       568	obj-elf.c	FUNCTION_20
0x4001f8f	      0x448944241c	             mov dword [rsp + 0x1c], r8d	       568	obj-elf.c	FUNCTION_20
0x4001f94	      0x4c894c2410	              mov qword [rsp + 0x10], r9	       568	obj-elf.c	FUNCTION_20
0x4001f99	    0x64488b042528	                mov rax, qword fs:[0x28]	       568	obj-elf.c	FUNCTION_20
0x4001fa2	      0x4889442438	             mov qword [rsp + 0x38], rax	       568	obj-elf.c	FUNCTION_20
0x4001fa7	            0x31c0	                            xor eax, eax	       568	obj-elf.c	FUNCTION_20
0x4001fa9	    0x83bc24880000	               cmp dword [rsp + 0x88], 0	       581	obj-elf.c	FUNCTION_20	IF_1
0x4001fb1	            0x7443	                            je 0x4001ff6	       581	obj-elf.c	FUNCTION_20	IF_1
0x4001fb3	      0xbf20000000	                           mov edi, 0x20	       584	obj-elf.c	FUNCTION_20	IF_1	CALL_2
0x4001fb8	      0xe800000000	                          call 0x4001fbd	       584	obj-elf.c	FUNCTION_20	IF_1	CALL_2
0x4001fbd	    0x488b15000000	            mov rdx, qword [0x04001fc4] 	       585	obj-elf.c	FUNCTION_20	IF_1
0x4001fc4	          0x488910	                    mov qword [rax], rdx	       585	obj-elf.c	FUNCTION_20	IF_1
0x4001fc7	    0x488b15000000	            mov rdx, qword [0x04001fce] 	       586	obj-elf.c	FUNCTION_20	IF_1
0x4001fce	        0x48895008	                mov qword [rax + 8], rdx	       586	obj-elf.c	FUNCTION_20	IF_1
0x4001fd2	    0x488b15000000	            mov rdx, qword [0x04001fd9] 	       587	obj-elf.c	FUNCTION_20	IF_1
0x4001fd9	        0x48895010	             mov qword [rax + 0x10], rdx	       587	obj-elf.c	FUNCTION_20	IF_1
0x4001fdd	    0x8b1500000000	            mov edx, dword [0x04001fe3] 	       588	obj-elf.c	FUNCTION_20	IF_1
0x4001fe3	          0x895018	             mov dword [rax + 0x18], edx	       588	obj-elf.c	FUNCTION_20	IF_1
0x4001fe6	    0x8b1500000000	            mov edx, dword [0x04001fec] 	       589	obj-elf.c	FUNCTION_20	IF_1
0x4001fec	          0x89501c	             mov dword [rax + 0x1c], edx	       589	obj-elf.c	FUNCTION_20	IF_1
0x4001fef	    0x488905000000	            mov qword [0x04001ff6], rax 	       590	obj-elf.c	FUNCTION_20	IF_1
0x4001ff6	    0x488b05000000	            mov rax, qword [0x04001ffd] 	       592	obj-elf.c	FUNCTION_20
0x4001ffd	    0x488905000000	            mov qword [0x04002004], rax 	       592	obj-elf.c	FUNCTION_20
0x4002004	    0x8b0500000000	            mov eax, dword [0x0400200a] 	       593	obj-elf.c	FUNCTION_20
0x400200a	    0x890500000000	            mov dword [0x04002010], eax 	       593	obj-elf.c	FUNCTION_20
0x4002010	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       595	obj-elf.c	FUNCTION_20
0x4002015	      0x4889442420	             mov qword [rsp + 0x20], rax	       595	obj-elf.c	FUNCTION_20
0x400201a	        0x8b442418	            mov eax, dword [rsp + 0x18] 	       596	obj-elf.c	FUNCTION_20
0x400201e	        0x89442428	             mov dword [rsp + 0x28], eax	       596	obj-elf.c	FUNCTION_20
0x4002022	      0x488d4c2420	                   lea rcx, [rsp + 0x20]	       597	obj-elf.c	FUNCTION_20	CALL_3
0x4002027	      0xba00000000	                              mov edx, 0	       597	obj-elf.c	FUNCTION_20	CALL_3
0x400202c	      0x488b742408	                mov rsi, qword [rsp + 8]	       597	obj-elf.c	FUNCTION_20	CALL_3
0x4002031	    0x488b3d000000	            mov rdi, qword [0x04002038] 	       597	obj-elf.c	FUNCTION_20	CALL_3
0x4002038	      0xe800000000	                          call 0x400203d	       597	obj-elf.c	FUNCTION_20	CALL_3
0x400203d	          0x4889c5	                            mov rbp, rax	       597	obj-elf.c	FUNCTION_20	CALL_3
0x4002040	          0x4885c0	                           test rax, rax	       599	obj-elf.c	FUNCTION_20	IF_2
0x4002043	            0x7412	                            je 0x4002057	       599	obj-elf.c	FUNCTION_20	IF_2
0x4002045	      0xbe00000000	                              mov esi, 0	       602	obj-elf.c	FUNCTION_20	IF_2	CALL_4
0x400204a	          0x4889c7	                            mov rdi, rax	       602	obj-elf.c	FUNCTION_20	IF_2	CALL_4
0x400204d	      0xe800000000	                          call 0x4002052	       602	obj-elf.c	FUNCTION_20	IF_2	CALL_4
0x4002052	          0x4989ee	                            mov r14, rbp	       601	obj-elf.c	FUNCTION_20	IF_2
0x4002055	            0xeb12	                           jmp 0x4002069	       601	obj-elf.c	FUNCTION_20	IF_2
0x4002057	      0xbe00000000	                              mov esi, 0	       605	obj-elf.c	FUNCTION_20	CALL_5
0x400205c	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       605	obj-elf.c	FUNCTION_20	CALL_5
0x4002061	      0xe800000000	                          call 0x4002066	       605	obj-elf.c	FUNCTION_20	CALL_5
0x4002066	          0x4989c6	                            mov r14, rax	       605	obj-elf.c	FUNCTION_20	CALL_5
0x4002069	    0x488b3d000000	            mov rdi, qword [0x04002070] 	       607	obj-elf.c	FUNCTION_20	CALL_6
0x4002070	        0x488b4708	                mov rax, qword [rdi + 8]	       607	obj-elf.c	FUNCTION_20	CALL_6
0x4002074	    0x4c8bb8680300	           mov r15, qword [rax + 0x368] 	       607	obj-elf.c	FUNCTION_20	CALL_6
0x400207b	          0x4c89f6	                            mov rsi, r14	       608	obj-elf.c	FUNCTION_20
0x400207e	    0x41ff97a00000	                 call qword [r15 + 0xa0]	       608	obj-elf.c	FUNCTION_20
0x4002085	          0x4989c5	                            mov r13, rax	       608	obj-elf.c	FUNCTION_20
0x4002088	          0x4885c0	                           test rax, rax	       610	obj-elf.c	FUNCTION_20	IF_3
0x400208b	     0xf84b1010000	                            je 0x4002242	       610	obj-elf.c	FUNCTION_20	IF_3
0x4002091	          0x4585e4	                         test r12d, r12d	       614	obj-elf.c	FUNCTION_20	IF_3	IF_4
0x4002094	            0x7509	                           jne 0x400209f	       614	obj-elf.c	FUNCTION_20	IF_3	IF_4
0x4002096	        0x448b6010	           mov r12d, dword [rax + 0x10] 	       615	obj-elf.c	FUNCTION_20	IF_3	IF_4
0x400209a	      0xe992000000	                           jmp 0x4002131	       615	obj-elf.c	FUNCTION_20	IF_3	IF_4
0x400209f	          0x8b4010	            mov eax, dword [rax + 0x10] 	       616	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5
0x40020a2	          0x4139c4	                           cmp r12d, eax	       616	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5
0x40020a5	     0xf8483000000	                            je 0x400212e	       616	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5
0x40020ab	          0x4885ed	                           test rbp, rbp	       618	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6
0x40020ae	            0x7552	                           jne 0x4002102	       618	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6
0x40020b0	    0x498b97000300	           mov rdx, qword [r15 + 0x300] 	       631	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6
0x40020b7	        0x807a0a40	              cmp byte [rdx + 0xa], 0x40	       631	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6
0x40020bb	            0x7507	                           jne 0x40020c4	       631	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6
0x40020bd	      0x41f6451b10	           test byte [r13 + 0x1b], 0x10 	       632	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6
0x40020c2	            0x753e	                           jne 0x4002102	       632	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6
0x40020c4	          0x8d50f2	                    lea edx, [rax - 0xe]	       636	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6
0x40020c7	          0x83fa02	                              cmp edx, 2	       636	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6
0x40020ca	            0x7636	                           jbe 0x4002102	       636	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6
0x40020cc	    0x4181fcffffff	                    cmp r12d, 0x6fffffff	       641	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6	IF_7
0x40020d3	            0x7765	                            ja 0x400213a	       641	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6	IF_7
0x40020d5	          0x83f807	                              cmp eax, 7	       641	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6	IF_7
0x40020d8	            0x7460	                            je 0x400213a	       641	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6	IF_7
0x40020da	      0xba05000000	                              mov edx, 5	       642	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6	IF_7	CALL_8
0x40020df	      0xbe00000000	                              mov esi, 0	       642	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6	IF_7	CALL_8
0x40020e4	      0xbf00000000	                              mov edi, 0	       642	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6	IF_7	CALL_8
0x40020e9	      0xe800000000	                          call 0x40020ee	       642	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6	IF_7	CALL_8
0x40020ee	      0x488b742408	                mov rsi, qword [rsp + 8]	       642	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6	IF_7	CALL_8
0x40020f3	          0x4889c7	                            mov rdi, rax	       642	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6	IF_7	CALL_8
0x40020f6	      0xb800000000	                              mov eax, 0	       642	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6	IF_7	CALL_8
0x40020fb	      0xe800000000	                          call 0x4002100	       642	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6	IF_7	CALL_8
0x4002100	            0xeb38	                           jmp 0x400213a	       642	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	IF_6	IF_7	CALL_8
0x4002102	      0xba05000000	                              mov edx, 5	       647	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	ELSE_3	CALL_10
0x4002107	      0xbe00000000	                              mov esi, 0	       647	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	ELSE_3	CALL_10
0x400210c	      0xbf00000000	                              mov edi, 0	       647	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	ELSE_3	CALL_10
0x4002111	      0xe800000000	                          call 0x4002116	       647	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	ELSE_3	CALL_10
0x4002116	      0x488b742408	                mov rsi, qword [rsp + 8]	       647	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	ELSE_3	CALL_10
0x400211b	          0x4889c7	                            mov rdi, rax	       647	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	ELSE_3	CALL_10
0x400211e	      0xb800000000	                              mov eax, 0	       647	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	ELSE_3	CALL_10
0x4002123	      0xe800000000	                          call 0x4002128	       647	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	ELSE_3	CALL_10
0x4002128	        0x458b6510	           mov r12d, dword [r13 + 0x10] 	       649	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	ELSE_3
0x400212c	            0xeb03	                           jmp 0x4002131	       649	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	ELSE_3
0x400212e	          0x4189c4	                           mov r12d, eax	       649	obj-elf.c	FUNCTION_20	IF_3	ELSE_2	IF_5	ELSE_3
0x4002131	          0x4885ed	                           test rbp, rbp	       653	obj-elf.c	FUNCTION_20	IF_3	IF_8
0x4002134	     0xf8508010000	                           jne 0x4002242	       653	obj-elf.c	FUNCTION_20	IF_3	IF_8
0x400213a	        0x498b4518	            mov rax, qword [r13 + 0x18] 	       654	obj-elf.c	FUNCTION_20	IF_3	IF_8
0x400213e	          0x4889c2	                            mov rdx, rax	       654	obj-elf.c	FUNCTION_20	IF_3	IF_8
0x4002141	          0x48f7d2	                                 not rdx	       654	obj-elf.c	FUNCTION_20	IF_3	IF_8
0x4002144	          0x4821da	                            and rdx, rbx	       654	obj-elf.c	FUNCTION_20	IF_3	IF_8
0x4002147	    0xf7c2ffff0f00	                       test edx, 0xfffff	       653	obj-elf.c	FUNCTION_20	IF_3	IF_8
0x400214d	     0xf8457030000	                            je 0x40024aa	       653	obj-elf.c	FUNCTION_20	IF_3	IF_8
0x4002153	      0x41837d1007	               cmp dword [r13 + 0x10], 7	       660	obj-elf.c	FUNCTION_20	IF_3	IF_8	IF_9
0x4002158	            0x7511	                           jne 0x400216b	       660	obj-elf.c	FUNCTION_20	IF_3	IF_8	IF_9
0x400215a	        0x488d4bfe	                      lea rcx, [rbx - 2]	       661	obj-elf.c	FUNCTION_20	IF_3	IF_8	IF_9
0x400215e	    0x48f7c1fdffff	            test rcx, 0xfffffffffffffffd	       661	obj-elf.c	FUNCTION_20	IF_3	IF_8	IF_9
0x4002165	     0xf843f030000	                            je 0x40024aa	       661	obj-elf.c	FUNCTION_20	IF_3	IF_8	IF_9
0x400216b	      0x41837d0cfe	cmp dword [r13 + 0xc], 0xfffffffffffffffe	       665	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_4	IF_10
0x4002170	            0x751c	                           jne 0x400218e	       665	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_4	IF_10
0x4002172	        0x418b4d08	                mov ecx, dword [r13 + 8]	       666	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_4	IF_10
0x4002176	      0x488b742408	                mov rsi, qword [rsp + 8]	       666	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_4	IF_10
0x400217b	        0x803c0e2e	              cmp byte [rsi + rcx], 0x2e	       666	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_4	IF_10
0x400217f	            0x750d	                           jne 0x400218e	       666	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_4	IF_10
0x4002181	    0x48f7c2cfffff	            test rdx, 0xffffffffffffffcf	       667	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_4	IF_10
0x4002188	     0xf841c030000	                            je 0x40024aa	       667	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_4	IF_10
0x400218e	        0x4883fb02	                              cmp rbx, 2	       673	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_5	IF_11
0x4002192	            0x755f	                           jne 0x40021f3	       673	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_5	IF_11
0x4002194	      0xbf00000000	                              mov edi, 0	       674	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_5	IF_11	CALL_11
0x4002199	      0xb908000000	                              mov ecx, 8	       674	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_5	IF_11	CALL_11
0x400219e	      0x488b742408	                mov rsi, qword [rsp + 8]	       674	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_5	IF_11	CALL_11
0x40021a3	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       674	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_5	IF_11	CALL_11
0x40021a5	           0xf97c2	                                 seta dl	       674	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_5	IF_11	CALL_11
0x40021a8	           0xf92c0	                                 setb al	       674	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_5	IF_11	CALL_11
0x40021ab	            0x38c2	                              cmp dl, al	       674	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_5	IF_11	CALL_11
0x40021ad	     0xf84c5000000	                            je 0x4002278	       674	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_5	IF_11	CALL_11
0x40021b3	      0xbf00000000	                              mov edi, 0	       675	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_5	IF_11	CALL_12
0x40021b8	      0xb908000000	                              mov ecx, 8	       675	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_5	IF_11	CALL_12
0x40021bd	      0x488b742408	                mov rsi, qword [rsp + 8]	       675	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_5	IF_11	CALL_12
0x40021c2	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       675	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_5	IF_11	CALL_12
0x40021c4	           0xf97c2	                                 seta dl	       675	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_5	IF_11	CALL_12
0x40021c7	           0xf92c0	                                 setb al	       675	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_5	IF_11	CALL_12
0x40021ca	            0x38c2	                              cmp dl, al	       675	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_5	IF_11	CALL_12
0x40021cc	     0xf84a6000000	                            je 0x4002278	       675	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_5	IF_11	CALL_12
0x40021d2	      0xbf00000000	                              mov edi, 0	       676	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_5	IF_11	CALL_13
0x40021d7	      0xb908000000	                              mov ecx, 8	       676	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_5	IF_11	CALL_13
0x40021dc	      0x488b742408	                mov rsi, qword [rsp + 8]	       676	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_5	IF_11	CALL_13
0x40021e1	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       676	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_5	IF_11	CALL_13
0x40021e3	           0xf97c2	                                 seta dl	       676	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_5	IF_11	CALL_13
0x40021e6	           0xf92c0	                                 setb al	       676	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_5	IF_11	CALL_13
0x40021e9	            0x38c2	                              cmp dl, al	       676	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_5	IF_11	CALL_13
0x40021eb	     0xf8487000000	                            je 0x4002278	       676	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_5	IF_11	CALL_13
0x40021f1	            0xeb21	                           jmp 0x4002214	       676	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_5	IF_11	CALL_13
0x40021f3	        0x4883fb04	                              cmp rbx, 4	       679	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_6	IF_12
0x40021f7	            0x751b	                           jne 0x4002214	       679	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_6	IF_12
0x40021f9	      0xbf00000000	                              mov edi, 0	       680	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_6	IF_12	CALL_14
0x40021fe	      0xb910000000	                           mov ecx, 0x10	       680	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_6	IF_12	CALL_14
0x4002203	      0x488b742408	                mov rsi, qword [rsp + 8]	       680	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_6	IF_12	CALL_14
0x4002208	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       680	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_6	IF_12	CALL_14
0x400220a	           0xf97c2	                                 seta dl	       680	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_6	IF_12	CALL_14
0x400220d	           0xf92c0	                                 setb al	       680	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_6	IF_12	CALL_14
0x4002210	            0x38c2	                              cmp dl, al	       680	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_6	IF_12	CALL_14
0x4002212	            0x7464	                            je 0x4002278	       680	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_6	IF_12	CALL_14
0x4002214	    0x48837c241000	               cmp qword [rsp + 0x10], 0	       697	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_9	IF_15
0x400221a	            0x7526	                           jne 0x4002242	       697	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_9	IF_15
0x400221c	      0xba05000000	                              mov edx, 5	       698	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_9	IF_15	CALL_16
0x4002221	      0xbe00000000	                              mov esi, 0	       698	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_9	IF_15	CALL_16
0x4002226	      0xbf00000000	                              mov edi, 0	       698	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_9	IF_15	CALL_16
0x400222b	      0xe800000000	                          call 0x4002230	       698	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_9	IF_15	CALL_16
0x4002230	      0x488b742408	                mov rsi, qword [rsp + 8]	       698	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_9	IF_15	CALL_16
0x4002235	          0x4889c7	                            mov rdi, rax	       698	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_9	IF_15	CALL_16
0x4002238	      0xb800000000	                              mov eax, 0	       698	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_9	IF_15	CALL_16
0x400223d	      0xe800000000	                          call 0x4002242	       698	obj-elf.c	FUNCTION_20	IF_3	IF_8	ELSE_9	IF_15	CALL_16
0x4002242	          0x4889d8	                            mov rax, rbx	       708	obj-elf.c	FUNCTION_20	IF_17
0x4002245	      0x2502000001	                      and eax, 0x1000002	       708	obj-elf.c	FUNCTION_20	IF_17
0x400224a	    0x483d00000001	                      cmp rax, 0x1000000	       708	obj-elf.c	FUNCTION_20	IF_17
0x4002250	            0x7526	                           jne 0x4002278	       708	obj-elf.c	FUNCTION_20	IF_17
0x4002252	      0xba05000000	                              mov edx, 5	       709	obj-elf.c	FUNCTION_20	CALL_18
0x4002257	      0xbe00000000	                              mov esi, 0	       709	obj-elf.c	FUNCTION_20	CALL_18
0x400225c	      0xbf00000000	                              mov edi, 0	       709	obj-elf.c	FUNCTION_20	CALL_18
0x4002261	      0xe800000000	                          call 0x4002266	       709	obj-elf.c	FUNCTION_20	CALL_18
0x4002266	      0x488b742408	                mov rsi, qword [rsp + 8]	       709	obj-elf.c	FUNCTION_20	CALL_18
0x400226b	          0x4889c7	                            mov rdi, rax	       709	obj-elf.c	FUNCTION_20	CALL_18
0x400226e	      0xb800000000	                              mov eax, 0	       709	obj-elf.c	FUNCTION_20	CALL_18
0x4002273	      0xe800000000	                          call 0x4002278	       709	obj-elf.c	FUNCTION_20	CALL_18
0x4002278	          0x4889d8	                            mov rax, rbx	       713	obj-elf.c	FUNCTION_20
0x400227b	          0x83e001	                              and eax, 1	       713	obj-elf.c	FUNCTION_20
0x400227e	        0x4883f801	                              cmp rax, 1	       713	obj-elf.c	FUNCTION_20
0x4002282	            0x19f6	                            sbb esi, esi	       713	obj-elf.c	FUNCTION_20
0x4002284	          0x83e608	                              and esi, 8	       713	obj-elf.c	FUNCTION_20
0x4002287	          0x83c604	                              add esi, 4	       713	obj-elf.c	FUNCTION_20
0x400228a	          0x4889df	                            mov rdi, rbx	       714	obj-elf.c	FUNCTION_20
0x400228d	          0x48d1ef	                              shr rdi, 1	       714	obj-elf.c	FUNCTION_20
0x4002290	          0x83e701	                              and edi, 1	       714	obj-elf.c	FUNCTION_20
0x4002293	        0x440fb6cf	                          movzx r9d, dil	       714	obj-elf.c	FUNCTION_20
0x4002297	        0x4183fc08	                             cmp r12d, 8	       715	obj-elf.c	FUNCTION_20
0x400229b	            0x740b	                            je 0x40022a8	       715	obj-elf.c	FUNCTION_20
0x400229d	    0x41b802000000	                              mov r8d, 2	       715	obj-elf.c	FUNCTION_20
0x40022a3	          0x4084ff	                           test dil, dil	       715	obj-elf.c	FUNCTION_20
0x40022a6	            0x7506	                           jne 0x40022ae	       715	obj-elf.c	FUNCTION_20
0x40022a8	    0x41b800000000	                              mov r8d, 0	       715	obj-elf.c	FUNCTION_20
0x40022ae	          0x4889d8	                            mov rax, rbx	       716	obj-elf.c	FUNCTION_20
0x40022b1	          0x83e004	                              and eax, 4	       716	obj-elf.c	FUNCTION_20
0x40022b4	        0x4883f801	                              cmp rax, 1	       716	obj-elf.c	FUNCTION_20
0x40022b8	            0x19c9	                            sbb ecx, ecx	       716	obj-elf.c	FUNCTION_20
0x40022ba	            0xf7d1	                                 not ecx	       716	obj-elf.c	FUNCTION_20
0x40022bc	          0x83e110	                           and ecx, 0x10	       716	obj-elf.c	FUNCTION_20
0x40022bf	          0x4889d8	                            mov rax, rbx	       717	obj-elf.c	FUNCTION_20
0x40022c2	          0x83e010	                           and eax, 0x10	       717	obj-elf.c	FUNCTION_20
0x40022c5	        0x4883f801	                              cmp rax, 1	       717	obj-elf.c	FUNCTION_20
0x40022c9	            0x19d2	                            sbb edx, edx	       717	obj-elf.c	FUNCTION_20
0x40022cb	            0xf7d2	                                 not edx	       717	obj-elf.c	FUNCTION_20
0x40022cd	    0x81e200008000	                       and edx, 0x800000	       717	obj-elf.c	FUNCTION_20
0x40022d3	          0x4889d8	                            mov rax, rbx	       718	obj-elf.c	FUNCTION_20
0x40022d6	          0x83e020	                           and eax, 0x20	       718	obj-elf.c	FUNCTION_20
0x40022d9	        0x4883f801	                              cmp rax, 1	       718	obj-elf.c	FUNCTION_20
0x40022dd	            0x19c0	                            sbb eax, eax	       718	obj-elf.c	FUNCTION_20
0x40022df	            0xf7d0	                                 not eax	       718	obj-elf.c	FUNCTION_20
0x40022e1	      0x2500000001	                      and eax, 0x1000000	       718	obj-elf.c	FUNCTION_20
0x40022e6	          0x4889df	                            mov rdi, rbx	       719	obj-elf.c	FUNCTION_20
0x40022e9	    0x81e700000080	                     and edi, 0x80000000	       719	obj-elf.c	FUNCTION_20
0x40022ef	        0x4883ff01	                              cmp rdi, 1	       719	obj-elf.c	FUNCTION_20
0x40022f3	          0x4519ed	                          sbb r13d, r13d	       719	obj-elf.c	FUNCTION_20
0x40022f6	          0x41f7d5	                                not r13d	       719	obj-elf.c	FUNCTION_20
0x40022f9	    0x4181e5008000	                        and r13d, 0x8000	       719	obj-elf.c	FUNCTION_20
0x4002300	            0x89df	                            mov edi, ebx	       712	obj-elf.c	FUNCTION_20
0x4002302	    0x81e700040000	                          and edi, 0x400	       712	obj-elf.c	FUNCTION_20
0x4002308	          0x4409cf	                             or edi, r9d	       712	obj-elf.c	FUNCTION_20
0x400230b	             0x9fe	                             or esi, edi	       712	obj-elf.c	FUNCTION_20
0x400230d	          0x4409c6	                             or esi, r8d	       712	obj-elf.c	FUNCTION_20
0x4002310	             0x9f1	                             or ecx, esi	       712	obj-elf.c	FUNCTION_20
0x4002312	             0x9ca	                             or edx, ecx	       712	obj-elf.c	FUNCTION_20
0x4002314	             0x9d0	                             or eax, edx	       712	obj-elf.c	FUNCTION_20
0x4002316	          0x4109c5	                            or r13d, eax	       712	obj-elf.c	FUNCTION_20
0x4002319	          0x4489e8	                           mov eax, r13d	       726	obj-elf.c	FUNCTION_20	IF_18
0x400231c	       0xd00000200	                         or eax, 0x20000	       726	obj-elf.c	FUNCTION_20	IF_18
0x4002321	    0x83bc24800000	               cmp dword [rsp + 0x80], 0	       726	obj-elf.c	FUNCTION_20	IF_18
0x4002329	        0x440f45e8	                        cmovne r13d, eax	       726	obj-elf.c	FUNCTION_20	IF_18
0x400232d	          0x4885ed	                           test rbp, rbp	       728	obj-elf.c	FUNCTION_20	IF_19
0x4002330	     0xf85b6000000	                           jne 0x40023ec	       728	obj-elf.c	FUNCTION_20	IF_19
0x4002336	          0x4585e4	                         test r12d, r12d	       732	obj-elf.c	FUNCTION_20	IF_19	IF_20
0x4002339	            0x750b	                           jne 0x4002346	       732	obj-elf.c	FUNCTION_20	IF_19	IF_20
0x400233b	          0x4489ef	                           mov edi, r13d	       733	obj-elf.c	FUNCTION_20	IF_19	CALL_20
0x400233e	      0xe800000000	                          call 0x4002343	       733	obj-elf.c	FUNCTION_20	IF_19	CALL_20
0x4002343	          0x4189c4	                           mov r12d, eax	       733	obj-elf.c	FUNCTION_20	IF_19	CALL_20
0x4002346	    0x498b86e00000	            mov rax, qword [r14 + 0xe0] 	       734	obj-elf.c	FUNCTION_20	IF_19	CALL_21
0x400234d	        0x44896004	               mov dword [rax + 4], r12d	       734	obj-elf.c	FUNCTION_20	IF_19	CALL_21
0x4002351	    0x498b86e00000	            mov rax, qword [r14 + 0xe0] 	       735	obj-elf.c	FUNCTION_20	IF_19	CALL_22
0x4002358	        0x48895808	                mov qword [rax + 8], rbx	       735	obj-elf.c	FUNCTION_20	IF_19	CALL_22
0x400235c	    0x498b86e00000	            mov rax, qword [r14 + 0xe0] 	       736	obj-elf.c	FUNCTION_20	IF_19	CALL_23
0x4002363	        0x8b4c2418	            mov ecx, dword [rsp + 0x18] 	       736	obj-elf.c	FUNCTION_20	IF_19	CALL_23
0x4002367	          0x89482c	             mov dword [rax + 0x2c], ecx	       736	obj-elf.c	FUNCTION_20	IF_19	CALL_23
0x400236a	        0x4183fc08	                             cmp r12d, 8	       739	obj-elf.c	FUNCTION_20	IF_19	IF_21
0x400236e	            0x750b	                           jne 0x400237b	       739	obj-elf.c	FUNCTION_20	IF_19	IF_21
0x4002370	    0x498b86a80000	            mov rax, qword [r14 + 0xa8] 	       740	obj-elf.c	FUNCTION_20	IF_19	CALL_24
0x4002377	        0x80480802	                    or byte [rax + 8], 2	       740	obj-elf.c	FUNCTION_20	IF_19	CALL_24
0x400237b	          0x4489ea	                           mov edx, r13d	       742	obj-elf.c	FUNCTION_20	IF_19	CALL_25
0x400237e	          0x4c89f6	                            mov rsi, r14	       742	obj-elf.c	FUNCTION_20	IF_19	CALL_25
0x4002381	    0x488b3d000000	            mov rdi, qword [0x04002388] 	       742	obj-elf.c	FUNCTION_20	IF_19	CALL_25
0x4002388	      0xe800000000	                          call 0x400238d	       742	obj-elf.c	FUNCTION_20	IF_19	CALL_25
0x400238d	    0x41f7c5000080	                     test r13d, 0x800000	       743	obj-elf.c	FUNCTION_20	IF_19	IF_22
0x4002394	            0x740b	                            je 0x40023a1	       743	obj-elf.c	FUNCTION_20	IF_19	IF_22
0x4002396	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	       744	obj-elf.c	FUNCTION_20	IF_19	IF_22
0x400239a	    0x418986c40000	             mov dword [r14 + 0xc4], eax	       744	obj-elf.c	FUNCTION_20	IF_19	IF_22
0x40023a1	    0x498b86e00000	            mov rax, qword [r14 + 0xe0] 	       745	obj-elf.c	FUNCTION_20	IF_19	CALL_26
0x40023a8	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       745	obj-elf.c	FUNCTION_20	IF_19	CALL_26
0x40023ad	    0x488988b00000	             mov qword [rax + 0xb0], rcx	       745	obj-elf.c	FUNCTION_20	IF_19	CALL_26
0x40023b4	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       748	obj-elf.c	FUNCTION_20	IF_19	CALL_27
0x40023b9	      0xe800000000	                          call 0x40023be	       748	obj-elf.c	FUNCTION_20	IF_19	CALL_27
0x40023be	          0x4885c0	                           test rax, rax	       749	obj-elf.c	FUNCTION_20	IF_19	IF_23
0x40023c1	            0x7414	                            je 0x40023d7	       749	obj-elf.c	FUNCTION_20	IF_19	IF_23
0x40023c3	    0x498bb6f80000	            mov rsi, qword [r14 + 0xf8] 	       750	obj-elf.c	FUNCTION_20	IF_19	CALL_28
0x40023ca	          0x4889c7	                            mov rdi, rax	       750	obj-elf.c	FUNCTION_20	IF_19	CALL_28
0x40023cd	      0xe800000000	                          call 0x40023d2	       750	obj-elf.c	FUNCTION_20	IF_19	CALL_28
0x40023d2	      0xe9db000000	                           jmp 0x40024b2	       750	obj-elf.c	FUNCTION_20	IF_19	CALL_28
0x40023d7	          0x4c89f7	                            mov rdi, r14	       752	obj-elf.c	FUNCTION_20	IF_19	CALL_30
0x40023da	      0xe800000000	                          call 0x40023df	       752	obj-elf.c	FUNCTION_20	IF_19	CALL_30
0x40023df	          0x4889c7	                            mov rdi, rax	       752	obj-elf.c	FUNCTION_20	IF_19	CALL_30
0x40023e2	      0xe800000000	                          call 0x40023e7	       752	obj-elf.c	FUNCTION_20	IF_19	CALL_30
0x40023e7	      0xe9c6000000	                           jmp 0x40024b2	       752	obj-elf.c	FUNCTION_20	IF_19	CALL_30
0x40023ec	          0x4585e4	                         test r12d, r12d	       756	obj-elf.c	FUNCTION_20	ELSE_11	IF_24
0x40023ef	            0x7433	                            je 0x4002424	       756	obj-elf.c	FUNCTION_20	ELSE_11	IF_24
0x40023f1	    0x488b85e00000	            mov rax, qword [rbp + 0xe0] 	       757	obj-elf.c	FUNCTION_20	ELSE_11	IF_24	CALL_31
0x40023f8	        0x44396004	               cmp dword [rax + 4], r12d	       757	obj-elf.c	FUNCTION_20	ELSE_11	IF_24	CALL_31
0x40023fc	            0x7426	                            je 0x4002424	       757	obj-elf.c	FUNCTION_20	ELSE_11	IF_24	CALL_31
0x40023fe	      0xba05000000	                              mov edx, 5	       758	obj-elf.c	FUNCTION_20	ELSE_11	CALL_33
0x4002403	      0xbe00000000	                              mov esi, 0	       758	obj-elf.c	FUNCTION_20	ELSE_11	CALL_33
0x4002408	      0xbf00000000	                              mov edi, 0	       758	obj-elf.c	FUNCTION_20	ELSE_11	CALL_33
0x400240d	      0xe800000000	                          call 0x4002412	       758	obj-elf.c	FUNCTION_20	ELSE_11	CALL_33
0x4002412	      0x488b742408	                mov rsi, qword [rsp + 8]	       758	obj-elf.c	FUNCTION_20	ELSE_11	CALL_33
0x4002417	          0x4889c7	                            mov rdi, rax	       758	obj-elf.c	FUNCTION_20	ELSE_11	CALL_33
0x400241a	      0xb800000000	                              mov eax, 0	       758	obj-elf.c	FUNCTION_20	ELSE_11	CALL_33
0x400241f	      0xe800000000	                          call 0x4002424	       758	obj-elf.c	FUNCTION_20	ELSE_11	CALL_33
0x4002424	          0x4885db	                           test rbx, rbx	       760	obj-elf.c	FUNCTION_20	ELSE_11	IF_25
0x4002427	     0xf8485000000	                            je 0x40024b2	       760	obj-elf.c	FUNCTION_20	ELSE_11	IF_25
0x400242d	          0x4489e8	                           mov eax, r13d	       765	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	IF_26
0x4002430	          0x334520	             xor eax, dword [rbp + 0x20]	       765	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	IF_26
0x4002433	      0xa91b848301	                     test eax, 0x183841b	       765	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	IF_26
0x4002438	            0x7428	                            je 0x4002462	       765	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	IF_26
0x400243a	      0xba05000000	                              mov edx, 5	       770	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	CALL_35
0x400243f	      0xbe00000000	                              mov esi, 0	       770	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	CALL_35
0x4002444	      0xbf00000000	                              mov edi, 0	       770	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	CALL_35
0x4002449	      0xe800000000	                          call 0x400244e	       770	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	CALL_35
0x400244e	      0x488b742408	                mov rsi, qword [rsp + 8]	       770	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	CALL_35
0x4002453	          0x4889c7	                            mov rdi, rax	       770	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	CALL_35
0x4002456	      0xb800000000	                              mov eax, 0	       770	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	CALL_35
0x400245b	      0xe800000000	                          call 0x4002460	       770	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	CALL_35
0x4002460	            0xeb0b	                           jmp 0x400246d	       770	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	CALL_35
0x4002462	    0x498b86e00000	            mov rax, qword [r14 + 0xe0] 	       774	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	CALL_36
0x4002469	        0x48895808	                mov qword [rax + 8], rbx	       774	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	CALL_36
0x400246d	    0x41f7c5000080	                     test r13d, 0x800000	       776	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	IF_27
0x4002474	            0x743c	                            je 0x40024b2	       776	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	IF_27
0x4002476	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	       776	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	IF_27
0x400247a	    0x3985c4000000	            cmp dword [rbp + 0xc4], eax 	       776	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	IF_27
0x4002480	            0x7430	                            je 0x40024b2	       776	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	IF_27
0x4002482	      0xba05000000	                              mov edx, 5	       777	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	CALL_38
0x4002487	      0xbe00000000	                              mov esi, 0	       777	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	CALL_38
0x400248c	      0xbf00000000	                              mov edi, 0	       777	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	CALL_38
0x4002491	      0xe800000000	                          call 0x4002496	       777	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	CALL_38
0x4002496	      0x488b742408	                mov rsi, qword [rsp + 8]	       777	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	CALL_38
0x400249b	          0x4889c7	                            mov rdi, rax	       777	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	CALL_38
0x400249e	      0xb800000000	                              mov eax, 0	       777	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	CALL_38
0x40024a3	      0xe800000000	                          call 0x40024a8	       777	obj-elf.c	FUNCTION_20	ELSE_11	IF_25	CALL_38
0x40024a8	            0xeb08	                           jmp 0x40024b2	       784	obj-elf.c	FUNCTION_20
0x40024aa	          0x4809c3	                             or rbx, rax	       705	obj-elf.c	FUNCTION_20	IF_3	IF_16
0x40024ad	      0xe990fdffff	                           jmp 0x4002242	       705	obj-elf.c	FUNCTION_20	IF_3	IF_16
0x40024b2	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       784	obj-elf.c	FUNCTION_20
0x40024b7	    0x644833042528	                xor rax, qword fs:[0x28]	       784	obj-elf.c	FUNCTION_20
0x40024c0	            0x7405	                            je 0x40024c7	       784	obj-elf.c	FUNCTION_20
0x40024c2	      0xe800000000	                          call 0x40024c7	       784	obj-elf.c	FUNCTION_20
0x40024c7	        0x4883c448	                           add rsp, 0x48	       784	obj-elf.c	FUNCTION_20
0x40024cb	              0x5b	                                 pop rbx	       784	obj-elf.c	FUNCTION_20
0x40024cc	              0x5d	                                 pop rbp	       784	obj-elf.c	FUNCTION_20
0x40024cd	            0x415c	                                 pop r12	       784	obj-elf.c	FUNCTION_20
0x40024cf	            0x415d	                                 pop r13	       784	obj-elf.c	FUNCTION_20
0x40024d1	            0x415e	                                 pop r14	       784	obj-elf.c	FUNCTION_20
0x40024d3	            0x415f	                                 pop r15	       784	obj-elf.c	FUNCTION_20
0x40024d5	              0xc3	                                     ret	       784	obj-elf.c	FUNCTION_20
elf_s_set_size	DO,0:FOR,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:IF,0:CALL,1	6
0x400017d	              0x53	                                push rbx	       227	obj-elf.c	FUNCTION_4
0x400017e	          0x4889f3	                            mov rbx, rsi	       227	obj-elf.c	FUNCTION_4
0x4000181	      0xe800000000	                          call 0x4000186	       228	obj-elf.c	FUNCTION_4	CALL_1
0x4000186	        0x48895838	             mov qword [rax + 0x38], rbx	       228	obj-elf.c	FUNCTION_4	CALL_1
0x400018a	              0x5b	                                 pop rbx	       229	obj-elf.c	FUNCTION_4
0x400018b	              0xc3	                                     ret	       229	obj-elf.c	FUNCTION_4
obj_elf_type	DO,0:FOR,0:SWITCH,0:functions,0:ELSE,10:WHILE,0:IF,16:CALL,49	323
0x4000633	            0x4157	                                push r15	      1962	obj-elf.c	FUNCTION_50
0x4000635	            0x4156	                                push r14	      1962	obj-elf.c	FUNCTION_50
0x4000637	            0x4155	                                push r13	      1962	obj-elf.c	FUNCTION_50
0x4000639	            0x4154	                                push r12	      1962	obj-elf.c	FUNCTION_50
0x400063b	              0x55	                                push rbp	      1962	obj-elf.c	FUNCTION_50
0x400063c	              0x53	                                push rbx	      1962	obj-elf.c	FUNCTION_50
0x400063d	        0x4883ec18	                           sub rsp, 0x18	      1962	obj-elf.c	FUNCTION_50
0x4000641	    0x64488b042528	                mov rax, qword fs:[0x28]	      1962	obj-elf.c	FUNCTION_50
0x400064a	      0x4889442408	                mov qword [rsp + 8], rax	      1962	obj-elf.c	FUNCTION_50
0x400064f	            0x31c0	                            xor eax, eax	      1962	obj-elf.c	FUNCTION_50
0x4000651	      0xe81bfcffff	call sym.get_sym_from_input_line_and_check	      1969	obj-elf.c	FUNCTION_50	CALL_1
0x4000656	          0x4989c4	                            mov r12, rax	      1969	obj-elf.c	FUNCTION_50	CALL_1
0x4000659	          0x4889c7	                            mov rdi, rax	      1971	obj-elf.c	FUNCTION_50	CALL_2
0x400065c	      0xe800000000	                          call 0x4000661	      1971	obj-elf.c	FUNCTION_50	CALL_2
0x4000661	          0x4889c5	                            mov rbp, rax	      1971	obj-elf.c	FUNCTION_50	CALL_2
0x4000664	    0x488b05000000	            mov rax, qword [0x0400066b] 	      1973	obj-elf.c	FUNCTION_50	IF_1
0x400066b	          0x80382c	                    cmp byte [rax], 0x2c	      1973	obj-elf.c	FUNCTION_50	IF_1
0x400066e	            0x750b	                           jne 0x400067b	      1973	obj-elf.c	FUNCTION_50	IF_1
0x4000670	        0x4883c001	                              add rax, 1	      1974	obj-elf.c	FUNCTION_50	IF_1
0x4000674	    0x488905000000	            mov qword [0x0400067b], rax 	      1974	obj-elf.c	FUNCTION_50	IF_1
0x400067b	    0x488b05000000	            mov rax, qword [0x04000682] 	      1976	obj-elf.c	FUNCTION_50	CALL_3
0x4000682	          0x803820	                    cmp byte [rax], 0x20	      1976	obj-elf.c	FUNCTION_50	CALL_3
0x4000685	            0x750b	                           jne 0x4000692	      1976	obj-elf.c	FUNCTION_50	CALL_3
0x4000687	        0x4883c001	                              add rax, 1	      1976	obj-elf.c	FUNCTION_50	CALL_3
0x400068b	    0x488905000000	            mov qword [0x04000692], rax 	      1976	obj-elf.c	FUNCTION_50	CALL_3
0x4000692	    0x488b15000000	            mov rdx, qword [0x04000699] 	      1977	obj-elf.c	FUNCTION_50	IF_2
0x4000699	           0xfb602	                   movzx eax, byte [rdx]	      1979	obj-elf.c	FUNCTION_50	IF_2
0x400069c	          0x83e822	                           sub eax, 0x22	      1979	obj-elf.c	FUNCTION_50	IF_2
0x400069f	            0x3c1e	                            cmp al, 0x1e	      1979	obj-elf.c	FUNCTION_50	IF_2
0x40006a1	     0xf874f040000	                            ja 0x4000af6	      1979	obj-elf.c	FUNCTION_50	IF_2
0x40006a7	      0xb90b000040	                     mov ecx, 0x4000000b	      1980	obj-elf.c	FUNCTION_50	IF_2
0x40006ac	        0x480fa3c1	                             bt rcx, rax	      1980	obj-elf.c	FUNCTION_50	IF_2
0x40006b0	     0xf8340040000	                           jae 0x4000af6	      1980	obj-elf.c	FUNCTION_50	IF_2
0x40006b6	        0x488d4201	                      lea rax, [rdx + 1]	      1981	obj-elf.c	FUNCTION_50	IF_2
0x40006ba	    0x488905000000	            mov qword [0x040006c1], rax 	      1981	obj-elf.c	FUNCTION_50	IF_2
0x40006c1	        0x48890424	                    mov qword [rsp], rax	      1944	obj-elf.c	FUNCTION_49
0x40006c5	         0xfb65201	               movzx edx, byte [rdx + 1]	      1945	obj-elf.c	FUNCTION_49	IF_1
0x40006c9	          0x83ea30	                           sub edx, 0x30	      1945	obj-elf.c	FUNCTION_49	IF_1
0x40006cc	          0x80fa09	                               cmp dl, 9	      1945	obj-elf.c	FUNCTION_49	IF_1
0x40006cf	            0x7722	                            ja 0x40006f3	      1945	obj-elf.c	FUNCTION_49	IF_1
0x40006d1	        0x4883c001	                              add rax, 1	      1945	obj-elf.c	FUNCTION_49	IF_1
0x40006d5	          0x4889c1	                            mov rcx, rax	      1950	obj-elf.c	FUNCTION_49	IF_1	WHILE_1
0x40006d8	    0x488905000000	            mov qword [0x040006df], rax 	      1950	obj-elf.c	FUNCTION_49	IF_1	WHILE_1
0x40006df	           0xfb618	                   movzx ebx, byte [rax]	      1948	obj-elf.c	FUNCTION_49	IF_1	WHILE_1
0x40006e2	        0x4883c001	                              add rax, 1	      1948	obj-elf.c	FUNCTION_49	IF_1	WHILE_1
0x40006e6	          0x8d53d0	                   lea edx, [rbx - 0x30]	      1948	obj-elf.c	FUNCTION_49	IF_1	WHILE_1
0x40006e9	          0x80fa09	                               cmp dl, 9	      1948	obj-elf.c	FUNCTION_49	IF_1	WHILE_1
0x40006ec	            0x76e7	                           jbe 0x40006d5	      1948	obj-elf.c	FUNCTION_49	IF_1	WHILE_1
0x40006ee	          0xc60100	                       mov byte [rcx], 0	      1952	obj-elf.c	FUNCTION_49	IF_1
0x40006f1	            0xeb0a	                           jmp 0x40006fd	      1952	obj-elf.c	FUNCTION_49	IF_1
0x40006f3	          0x4889e7	                            mov rdi, rsp	      1955	obj-elf.c	FUNCTION_49	CALL_1
0x40006f6	      0xe800000000	                          call 0x40006fb	      1955	obj-elf.c	FUNCTION_49	CALL_1
0x40006fb	            0x89c3	                            mov ebx, eax	      1955	obj-elf.c	FUNCTION_49	CALL_1
0x40006fd	        0x4c8b2c24	                    mov r13, qword [rsp]	      1957	obj-elf.c	FUNCTION_49
0x4000701	      0xbf00000000	                              mov edi, 0	      1986	obj-elf.c	FUNCTION_50	IF_3	CALL_5
0x4000706	      0xb909000000	                              mov ecx, 9	      1986	obj-elf.c	FUNCTION_50	IF_3	CALL_5
0x400070b	          0x4c89ee	                            mov rsi, r13	      1986	obj-elf.c	FUNCTION_50	IF_3	CALL_5
0x400070e	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1986	obj-elf.c	FUNCTION_50	IF_3	CALL_5
0x4000710	           0xf97c1	                                 seta cl	      1986	obj-elf.c	FUNCTION_50	IF_3	CALL_5
0x4000713	           0xf92c0	                                 setb al	      1986	obj-elf.c	FUNCTION_50	IF_3	CALL_5
0x4000716	      0xba08000000	                              mov edx, 8	      1989	obj-elf.c	FUNCTION_50	IF_3
0x400071b	            0x38c1	                              cmp cl, al	      1986	obj-elf.c	FUNCTION_50	IF_3	CALL_5
0x400071d	     0xf8499030000	                            je 0x4000abc	      1986	obj-elf.c	FUNCTION_50	IF_3	CALL_5
0x4000723	      0x450fb67500	                  movzx r14d, byte [r13]	      1987	obj-elf.c	FUNCTION_50	IF_3	CALL_6
0x4000728	        0x4183fe32	                          cmp r14d, 0x32	      1987	obj-elf.c	FUNCTION_50	IF_3	CALL_6
0x400072c	            0x750b	                           jne 0x4000739	      1987	obj-elf.c	FUNCTION_50	IF_3	CALL_6
0x400072e	      0x41807d0100	                   cmp byte [r13 + 1], 0	      1987	obj-elf.c	FUNCTION_50	IF_3	CALL_6
0x4000733	     0xf8469030000	                            je 0x4000aa2	      1987	obj-elf.c	FUNCTION_50	IF_3	CALL_6
0x4000739	      0xbf00000000	                              mov edi, 0	      1988	obj-elf.c	FUNCTION_50	IF_3	CALL_7
0x400073e	      0xb909000000	                              mov ecx, 9	      1988	obj-elf.c	FUNCTION_50	IF_3	CALL_7
0x4000743	          0x4c89ee	                            mov rsi, r13	      1988	obj-elf.c	FUNCTION_50	IF_3	CALL_7
0x4000746	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1988	obj-elf.c	FUNCTION_50	IF_3	CALL_7
0x4000748	           0xf97c1	                                 seta cl	      1988	obj-elf.c	FUNCTION_50	IF_3	CALL_7
0x400074b	           0xf92c0	                                 setb al	      1988	obj-elf.c	FUNCTION_50	IF_3	CALL_7
0x400074e	      0xba08000000	                              mov edx, 8	      1989	obj-elf.c	FUNCTION_50	IF_3
0x4000753	            0x38c1	                              cmp cl, al	      1988	obj-elf.c	FUNCTION_50	IF_3	CALL_7
0x4000755	     0xf8461030000	                            je 0x4000abc	      1988	obj-elf.c	FUNCTION_50	IF_3	CALL_7
0x400075b	      0xbf00000000	                              mov edi, 0	      1990	obj-elf.c	FUNCTION_50	ELSE_1	IF_4	CALL_8
0x4000760	      0xb907000000	                              mov ecx, 7	      1990	obj-elf.c	FUNCTION_50	ELSE_1	IF_4	CALL_8
0x4000765	          0x4c89ee	                            mov rsi, r13	      1990	obj-elf.c	FUNCTION_50	ELSE_1	IF_4	CALL_8
0x4000768	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1990	obj-elf.c	FUNCTION_50	ELSE_1	IF_4	CALL_8
0x400076a	           0xf97c1	                                 seta cl	      1990	obj-elf.c	FUNCTION_50	ELSE_1	IF_4	CALL_8
0x400076d	           0xf92c0	                                 setb al	      1990	obj-elf.c	FUNCTION_50	ELSE_1	IF_4	CALL_8
0x4000770	      0xba00000100	                        mov edx, 0x10000	      1993	obj-elf.c	FUNCTION_50	ELSE_1	IF_4
0x4000775	            0x38c1	                              cmp cl, al	      1990	obj-elf.c	FUNCTION_50	ELSE_1	IF_4	CALL_8
0x4000777	     0xf843f030000	                            je 0x4000abc	      1990	obj-elf.c	FUNCTION_50	ELSE_1	IF_4	CALL_8
0x400077d	    0x41bf31000000	                          mov r15d, 0x31	      1991	obj-elf.c	FUNCTION_50	ELSE_1	IF_4	CALL_9
0x4000783	          0x4529f7	                          sub r15d, r14d	      1991	obj-elf.c	FUNCTION_50	ELSE_1	IF_4	CALL_9
0x4000786	            0x750b	                           jne 0x4000793	      1991	obj-elf.c	FUNCTION_50	ELSE_1	IF_4	CALL_9
0x4000788	      0x41807d0100	                   cmp byte [r13 + 1], 0	      1991	obj-elf.c	FUNCTION_50	ELSE_1	IF_4	CALL_9
0x400078d	     0xf8416030000	                            je 0x4000aa9	      1991	obj-elf.c	FUNCTION_50	ELSE_1	IF_4	CALL_9
0x4000793	      0xbf00000000	                              mov edi, 0	      1992	obj-elf.c	FUNCTION_50	ELSE_1	IF_4	CALL_10
0x4000798	      0xb90b000000	                            mov ecx, 0xb	      1992	obj-elf.c	FUNCTION_50	ELSE_1	IF_4	CALL_10
0x400079d	          0x4c89ee	                            mov rsi, r13	      1992	obj-elf.c	FUNCTION_50	ELSE_1	IF_4	CALL_10
0x40007a0	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1992	obj-elf.c	FUNCTION_50	ELSE_1	IF_4	CALL_10
0x40007a2	           0xf97c1	                                 seta cl	      1992	obj-elf.c	FUNCTION_50	ELSE_1	IF_4	CALL_10
0x40007a5	           0xf92c0	                                 setb al	      1992	obj-elf.c	FUNCTION_50	ELSE_1	IF_4	CALL_10
0x40007a8	      0xba00000100	                        mov edx, 0x10000	      1993	obj-elf.c	FUNCTION_50	ELSE_1	IF_4
0x40007ad	            0x38c1	                              cmp cl, al	      1992	obj-elf.c	FUNCTION_50	ELSE_1	IF_4	CALL_10
0x40007af	     0xf8407030000	                            je 0x4000abc	      1992	obj-elf.c	FUNCTION_50	ELSE_1	IF_4	CALL_10
0x40007b5	      0xbf00000000	                              mov edi, 0	      1994	obj-elf.c	FUNCTION_50	ELSE_2	IF_5	CALL_11
0x40007ba	      0xb90b000000	                            mov ecx, 0xb	      1994	obj-elf.c	FUNCTION_50	ELSE_2	IF_5	CALL_11
0x40007bf	          0x4c89ee	                            mov rsi, r13	      1994	obj-elf.c	FUNCTION_50	ELSE_2	IF_5	CALL_11
0x40007c2	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1994	obj-elf.c	FUNCTION_50	ELSE_2	IF_5	CALL_11
0x40007c4	           0xf97c1	                                 seta cl	      1994	obj-elf.c	FUNCTION_50	ELSE_2	IF_5	CALL_11
0x40007c7	           0xf92c0	                                 setb al	      1994	obj-elf.c	FUNCTION_50	ELSE_2	IF_5	CALL_11
0x40007ca	      0xba00000500	                        mov edx, 0x50000	      1997	obj-elf.c	FUNCTION_50	ELSE_2	IF_5
0x40007cf	            0x38c1	                              cmp cl, al	      1994	obj-elf.c	FUNCTION_50	ELSE_2	IF_5	CALL_11
0x40007d1	     0xf84e5020000	                            je 0x4000abc	      1994	obj-elf.c	FUNCTION_50	ELSE_2	IF_5	CALL_11
0x40007d7	        0x4183fe36	                          cmp r14d, 0x36	      1995	obj-elf.c	FUNCTION_50	ELSE_2	IF_5	CALL_12
0x40007db	            0x750b	                           jne 0x40007e8	      1995	obj-elf.c	FUNCTION_50	ELSE_2	IF_5	CALL_12
0x40007dd	      0x41807d0100	                   cmp byte [r13 + 1], 0	      1995	obj-elf.c	FUNCTION_50	ELSE_2	IF_5	CALL_12
0x40007e2	     0xf84c8020000	                            je 0x4000ab0	      1995	obj-elf.c	FUNCTION_50	ELSE_2	IF_5	CALL_12
0x40007e8	      0xbf00000000	                              mov edi, 0	      1996	obj-elf.c	FUNCTION_50	ELSE_2	IF_5	CALL_13
0x40007ed	      0xb908000000	                              mov ecx, 8	      1996	obj-elf.c	FUNCTION_50	ELSE_2	IF_5	CALL_13
0x40007f2	          0x4c89ee	                            mov rsi, r13	      1996	obj-elf.c	FUNCTION_50	ELSE_2	IF_5	CALL_13
0x40007f5	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1996	obj-elf.c	FUNCTION_50	ELSE_2	IF_5	CALL_13
0x40007f7	           0xf97c1	                                 seta cl	      1996	obj-elf.c	FUNCTION_50	ELSE_2	IF_5	CALL_13
0x40007fa	           0xf92c0	                                 setb al	      1996	obj-elf.c	FUNCTION_50	ELSE_2	IF_5	CALL_13
0x40007fd	      0xba00000500	                        mov edx, 0x50000	      1997	obj-elf.c	FUNCTION_50	ELSE_2	IF_5
0x4000802	            0x38c1	                              cmp cl, al	      1996	obj-elf.c	FUNCTION_50	ELSE_2	IF_5	CALL_13
0x4000804	     0xf84b2020000	                            je 0x4000abc	      1996	obj-elf.c	FUNCTION_50	ELSE_2	IF_5	CALL_13
0x400080a	      0xbf00000000	                              mov edi, 0	      1998	obj-elf.c	FUNCTION_50	ELSE_3	IF_6	CALL_14
0x400080f	      0xb907000000	                              mov ecx, 7	      1998	obj-elf.c	FUNCTION_50	ELSE_3	IF_6	CALL_14
0x4000814	          0x4c89ee	                            mov rsi, r13	      1998	obj-elf.c	FUNCTION_50	ELSE_3	IF_6	CALL_14
0x4000817	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1998	obj-elf.c	FUNCTION_50	ELSE_3	IF_6	CALL_14
0x4000819	           0xf97c1	                                 seta cl	      1998	obj-elf.c	FUNCTION_50	ELSE_3	IF_6	CALL_14
0x400081c	           0xf92c0	                                 setb al	      1998	obj-elf.c	FUNCTION_50	ELSE_3	IF_6	CALL_14
0x400081f	      0xba00000000	                              mov edx, 0	      1985	obj-elf.c	FUNCTION_50
0x4000824	            0x38c1	                              cmp cl, al	      1998	obj-elf.c	FUNCTION_50	ELSE_3	IF_6	CALL_14
0x4000826	     0xf8490020000	                            je 0x4000abc	      1998	obj-elf.c	FUNCTION_50	ELSE_3	IF_6	CALL_14
0x400082c	        0x4183fe30	                          cmp r14d, 0x30	      1999	obj-elf.c	FUNCTION_50	ELSE_3	IF_6	CALL_15
0x4000830	            0x750b	                           jne 0x400083d	      1999	obj-elf.c	FUNCTION_50	ELSE_3	IF_6	CALL_15
0x4000832	      0x41807d0100	                   cmp byte [r13 + 1], 0	      1999	obj-elf.c	FUNCTION_50	ELSE_3	IF_6	CALL_15
0x4000837	     0xf847a020000	                            je 0x4000ab7	      1999	obj-elf.c	FUNCTION_50	ELSE_3	IF_6	CALL_15
0x400083d	      0xbf00000000	                              mov edi, 0	      2000	obj-elf.c	FUNCTION_50	ELSE_3	IF_6	CALL_16
0x4000842	      0xb90b000000	                            mov ecx, 0xb	      2000	obj-elf.c	FUNCTION_50	ELSE_3	IF_6	CALL_16
0x4000847	          0x4c89ee	                            mov rsi, r13	      2000	obj-elf.c	FUNCTION_50	ELSE_3	IF_6	CALL_16
0x400084a	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2000	obj-elf.c	FUNCTION_50	ELSE_3	IF_6	CALL_16
0x400084c	           0xf97c1	                                 seta cl	      2000	obj-elf.c	FUNCTION_50	ELSE_3	IF_6	CALL_16
0x400084f	           0xf92c0	                                 setb al	      2000	obj-elf.c	FUNCTION_50	ELSE_3	IF_6	CALL_16
0x4000852	      0xba00000000	                              mov edx, 0	      1985	obj-elf.c	FUNCTION_50
0x4000857	            0x38c1	                              cmp cl, al	      2000	obj-elf.c	FUNCTION_50	ELSE_3	IF_6	CALL_16
0x4000859	     0xf845d020000	                            je 0x4000abc	      2000	obj-elf.c	FUNCTION_50	ELSE_3	IF_6	CALL_16
0x400085f	      0xbe00000000	                              mov esi, 0	      2002	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	CALL_17
0x4000864	          0x4c89ef	                            mov rdi, r13	      2002	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	CALL_17
0x4000867	      0xe800000000	                          call 0x400086c	      2002	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	CALL_17
0x400086c	            0x85c0	                           test eax, eax	      2002	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	CALL_17
0x400086e	            0x7422	                            je 0x4000892	      2002	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	CALL_17
0x4000870	        0x4183fe35	                          cmp r14d, 0x35	      2003	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	CALL_18
0x4000874	            0x7507	                           jne 0x400087d	      2003	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	CALL_18
0x4000876	      0x41807d0100	                   cmp byte [r13 + 1], 0	      2003	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	CALL_18
0x400087b	            0x7415	                            je 0x4000892	      2003	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	CALL_18
0x400087d	      0xbe00000000	                              mov esi, 0	      2004	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	CALL_19
0x4000882	          0x4c89ef	                            mov rdi, r13	      2004	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	CALL_19
0x4000885	      0xe800000000	                          call 0x400088a	      2004	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	CALL_19
0x400088a	            0x85c0	                           test eax, eax	      2004	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	CALL_19
0x400088c	     0xf85ef000000	                           jne 0x4000981	      2004	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	CALL_19
0x4000892	          0x4c89e7	                            mov rdi, r12	      2008	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	CALL_20
0x4000895	      0xe800000000	                          call 0x400089a	      2008	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	CALL_20
0x400089a	      0xba00000100	                        mov edx, 0x10000	      2006	obj-elf.c	FUNCTION_50	ELSE_4	IF_7
0x400089f	            0x85c0	                           test eax, eax	      2008	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	CALL_20
0x40008a1	     0xf8515020000	                           jne 0x4000abc	      2008	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	CALL_20
0x40008a7	          0x4c89e7	                            mov rdi, r12	      2010	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_21
0x40008aa	      0xe800000000	                          call 0x40008af	      2010	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_21
0x40008af	            0x85c0	                           test eax, eax	      2010	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_21
0x40008b1	            0x7451	                            je 0x4000904	      2010	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_21
0x40008b3	      0xbe01000000	                              mov esi, 1	      2012	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_22
0x40008b8	          0x4c89e7	                            mov rdi, r12	      2012	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_22
0x40008bb	      0xe800000000	                          call 0x40008c0	      2012	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_22
0x40008c0	          0x4989c4	                            mov r12, rax	      2012	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_22
0x40008c3	      0xbe00000000	                              mov esi, 0	      2013	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_23
0x40008c8	          0x4889c7	                            mov rdi, rax	      2013	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_23
0x40008cb	      0xe800000000	                          call 0x40008d0	      2013	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_23
0x40008d0	      0xbe00000000	                              mov esi, 0	      2014	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_24
0x40008d5	          0x4c89e7	                            mov rdi, r12	      2014	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_24
0x40008d8	      0xe800000000	                          call 0x40008dd	      2014	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_24
0x40008dd	          0x4c89e7	                            mov rdi, r12	      2015	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_25
0x40008e0	      0xe800000000	                          call 0x40008e5	      2015	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_25
0x40008e5	      0xbe00000000	                              mov esi, 0	      2016	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_26
0x40008ea	          0x4c89e7	                            mov rdi, r12	      2016	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_26
0x40008ed	      0xe800000000	                          call 0x40008f2	      2016	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_26
0x40008f2	          0x4c89e7	                            mov rdi, r12	      2017	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_27
0x40008f5	      0xe800000000	                          call 0x40008fa	      2017	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	IF_9	CALL_27
0x40008fa	      0xba00000100	                        mov edx, 0x10000	      2006	obj-elf.c	FUNCTION_50	ELSE_4	IF_7
0x40008ff	      0xe9b8010000	                           jmp 0x4000abc	      2006	obj-elf.c	FUNCTION_50	ELSE_4	IF_7
0x4000904	          0x4c89e7	                            mov rdi, r12	      2019	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_5	IF_10	CALL_29
0x4000907	      0xe800000000	                          call 0x400090c	      2019	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_5	IF_10	CALL_29
0x400090c	            0x85c0	                           test eax, eax	      2019	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_5	IF_10	CALL_29
0x400090e	            0x750c	                           jne 0x400091c	      2019	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_5	IF_10	CALL_29
0x4000910	          0x4c89e7	                            mov rdi, r12	      2019	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_5	IF_10	CALL_29
0x4000913	      0xe800000000	                          call 0x4000918	      2019	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_5	IF_10	CALL_29
0x4000918	            0x85c0	                           test eax, eax	      2019	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_5	IF_10	CALL_29
0x400091a	            0x7439	                            je 0x4000955	      2019	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_5	IF_10	CALL_29
0x400091c	          0x4c89e7	                            mov rdi, r12	      2020	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_5	IF_10
0x400091f	      0xe800000000	                          call 0x4000924	      2020	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_5	IF_10
0x4000924	          0x4989c4	                            mov r12, rax	      2020	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_5	IF_10
0x4000927	      0xba05000000	                              mov edx, 5	      2020	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_5	IF_10
0x400092c	      0xbe00000000	                              mov esi, 0	      2020	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_5	IF_10
0x4000931	      0xbf00000000	                              mov edi, 0	      2020	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_5	IF_10
0x4000936	      0xe800000000	                          call 0x400093b	      2020	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_5	IF_10
0x400093b	          0x4c89e6	                            mov rsi, r12	      2020	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_5	IF_10
0x400093e	          0x4889c7	                            mov rdi, rax	      2020	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_5	IF_10
0x4000941	      0xb800000000	                              mov eax, 0	      2020	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_5	IF_10
0x4000946	      0xe800000000	                          call 0x400094b	      2020	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_5	IF_10
0x400094b	      0xba00000100	                        mov edx, 0x10000	      2006	obj-elf.c	FUNCTION_50	ELSE_4	IF_7
0x4000950	      0xe967010000	                           jmp 0x4000abc	      2020	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_5	IF_10
0x4000955	      0xbe00000000	                              mov esi, 0	      2024	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_6	CALL_33
0x400095a	          0x4c89e7	                            mov rdi, r12	      2024	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_6	CALL_33
0x400095d	      0xe800000000	                          call 0x4000962	      2024	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_6	CALL_33
0x4000962	      0xbe00000000	                              mov esi, 0	      2025	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_6	CALL_34
0x4000967	          0x4c89e7	                            mov rdi, r12	      2025	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_6	CALL_34
0x400096a	      0xe800000000	                          call 0x400096f	      2025	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_6	CALL_34
0x400096f	          0x4c89e7	                            mov rdi, r12	      2026	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_6	CALL_35
0x4000972	      0xe800000000	                          call 0x4000977	      2026	obj-elf.c	FUNCTION_50	ELSE_4	IF_7	IF_8	ELSE_6	CALL_35
0x4000977	      0xba00000100	                        mov edx, 0x10000	      2006	obj-elf.c	FUNCTION_50	ELSE_4	IF_7
0x400097c	      0xe93b010000	                           jmp 0x4000abc	      2006	obj-elf.c	FUNCTION_50	ELSE_4	IF_7
0x4000981	      0xbe00000000	                              mov esi, 0	      2030	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	CALL_36
0x4000986	          0x4c89ef	                            mov rdi, r13	      2030	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	CALL_36
0x4000989	      0xe800000000	                          call 0x400098e	      2030	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	CALL_36
0x400098e	            0x85c0	                           test eax, eax	      2030	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	CALL_36
0x4000990	            0x7424	                            je 0x40009b6	      2030	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	CALL_36
0x4000992	          0x4585ff	                         test r15d, r15d	      2031	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	CALL_37
0x4000995	            0x750e	                           jne 0x40009a5	      2031	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	CALL_37
0x4000997	      0x41807d0130	                cmp byte [r13 + 1], 0x30	      2031	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	CALL_37
0x400099c	            0x7507	                           jne 0x40009a5	      2031	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	CALL_37
0x400099e	      0x41807d0200	                   cmp byte [r13 + 2], 0	      2031	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	CALL_37
0x40009a3	            0x7411	                            je 0x40009b6	      2031	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	CALL_37
0x40009a5	      0xbe00000000	                              mov esi, 0	      2032	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	CALL_38
0x40009aa	          0x4c89ef	                            mov rdi, r13	      2032	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	CALL_38
0x40009ad	      0xe800000000	                          call 0x40009b2	      2032	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	CALL_38
0x40009b2	            0x85c0	                           test eax, eax	      2032	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	CALL_38
0x40009b4	            0x755c	                           jne 0x4000a12	      2032	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	CALL_38
0x40009b6	    0x488b05000000	            mov rax, qword [0x040009bd] 	      2036	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	CALL_39
0x40009bd	        0x488b4008	                mov rax, qword [rax + 8]	      2036	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	CALL_39
0x40009c1	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      2037	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	IF_12
0x40009c8	          0x8b400c	              mov eax, dword [rax + 0xc]	      2037	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	IF_12
0x40009cb	          0x83f809	                              cmp eax, 9	      2037	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	IF_12
0x40009ce	            0x7714	                            ja 0x40009e4	      2037	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	IF_12
0x40009d0	      0xba08004000	                       mov edx, 0x400008	      2043	obj-elf.c	FUNCTION_50	ELSE_7	IF_11
0x40009d5	      0xb909020000	                          mov ecx, 0x209	      2037	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	IF_12
0x40009da	        0x480fa3c1	                             bt rcx, rax	      2037	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	IF_12
0x40009de	     0xf82d8000000	                            jb 0x4000abc	      2037	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	IF_12
0x40009e4	      0xba05000000	                              mov edx, 5	      2041	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	IF_12	CALL_41
0x40009e9	      0xbe00000000	                              mov esi, 0	      2041	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	IF_12	CALL_41
0x40009ee	      0xbf00000000	                              mov edi, 0	      2041	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	IF_12	CALL_41
0x40009f3	      0xe800000000	                          call 0x40009f8	      2041	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	IF_12	CALL_41
0x40009f8	          0x4c89ee	                            mov rsi, r13	      2041	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	IF_12	CALL_41
0x40009fb	          0x4889c7	                            mov rdi, rax	      2041	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	IF_12	CALL_41
0x40009fe	      0xb800000000	                              mov eax, 0	      2041	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	IF_12	CALL_41
0x4000a03	      0xe800000000	                          call 0x4000a08	      2041	obj-elf.c	FUNCTION_50	ELSE_7	IF_11	IF_12	CALL_41
0x4000a08	      0xba08004000	                       mov edx, 0x400008	      2043	obj-elf.c	FUNCTION_50	ELSE_7	IF_11
0x4000a0d	      0xe9aa000000	                           jmp 0x4000abc	      2043	obj-elf.c	FUNCTION_50	ELSE_7	IF_11
0x4000a12	      0xbe00000000	                              mov esi, 0	      2045	obj-elf.c	FUNCTION_50	ELSE_8	IF_13	CALL_42
0x4000a17	          0x4c89ef	                            mov rdi, r13	      2045	obj-elf.c	FUNCTION_50	ELSE_8	IF_13	CALL_42
0x4000a1a	      0xe800000000	                          call 0x4000a1f	      2045	obj-elf.c	FUNCTION_50	ELSE_8	IF_13	CALL_42
0x4000a1f	            0x85c0	                           test eax, eax	      2045	obj-elf.c	FUNCTION_50	ELSE_8	IF_13	CALL_42
0x4000a21	            0x7554	                           jne 0x4000a77	      2045	obj-elf.c	FUNCTION_50	ELSE_8	IF_13	CALL_42
0x4000a23	    0x488b05000000	            mov rax, qword [0x04000a2a] 	      2049	obj-elf.c	FUNCTION_50	ELSE_8	IF_13	CALL_43
0x4000a2a	        0x488b4008	                mov rax, qword [rax + 8]	      2049	obj-elf.c	FUNCTION_50	ELSE_8	IF_13	CALL_43
0x4000a2e	    0x4c8ba0680300	           mov r12, qword [rax + 0x368] 	      2049	obj-elf.c	FUNCTION_50	ELSE_8	IF_13	CALL_43
0x4000a35	      0x418b44240c	              mov eax, dword [r12 + 0xc]	      2050	obj-elf.c	FUNCTION_50	ELSE_8	IF_13	IF_14
0x4000a3a	          0x83f803	                              cmp eax, 3	      2050	obj-elf.c	FUNCTION_50	ELSE_8	IF_13	IF_14
0x4000a3d	            0x7428	                            je 0x4000a67	      2050	obj-elf.c	FUNCTION_50	ELSE_8	IF_13	IF_14
0x4000a3f	            0x85c0	                           test eax, eax	      2050	obj-elf.c	FUNCTION_50	ELSE_8	IF_13	IF_14
0x4000a41	            0x7424	                            je 0x4000a67	      2050	obj-elf.c	FUNCTION_50	ELSE_8	IF_13	IF_14
0x4000a43	      0xba05000000	                              mov edx, 5	      2053	obj-elf.c	FUNCTION_50	ELSE_8	IF_13	IF_14	CALL_45
0x4000a48	      0xbe00000000	                              mov esi, 0	      2053	obj-elf.c	FUNCTION_50	ELSE_8	IF_13	IF_14	CALL_45
0x4000a4d	      0xbf00000000	                              mov edi, 0	      2053	obj-elf.c	FUNCTION_50	ELSE_8	IF_13	IF_14	CALL_45
0x4000a52	      0xe800000000	                          call 0x4000a57	      2053	obj-elf.c	FUNCTION_50	ELSE_8	IF_13	IF_14	CALL_45
0x4000a57	          0x4c89ee	                            mov rsi, r13	      2053	obj-elf.c	FUNCTION_50	ELSE_8	IF_13	IF_14	CALL_45
0x4000a5a	          0x4889c7	                            mov rdi, rax	      2053	obj-elf.c	FUNCTION_50	ELSE_8	IF_13	IF_14	CALL_45
0x4000a5d	      0xb800000000	                              mov eax, 0	      2053	obj-elf.c	FUNCTION_50	ELSE_8	IF_13	IF_14	CALL_45
0x4000a62	      0xe800000000	                          call 0x4000a67	      2053	obj-elf.c	FUNCTION_50	ELSE_8	IF_13	IF_14	CALL_45
0x4000a67	    0x41c744240c03	                mov dword [r12 + 0xc], 3	      2057	obj-elf.c	FUNCTION_50	ELSE_8	IF_13
0x4000a70	      0xba00008100	                       mov edx, 0x810000	      2055	obj-elf.c	FUNCTION_50	ELSE_8	IF_13
0x4000a75	            0xeb45	                           jmp 0x4000abc	      2055	obj-elf.c	FUNCTION_50	ELSE_8	IF_13
0x4000a77	      0xba05000000	                              mov edx, 5	      2064	obj-elf.c	FUNCTION_50	CALL_48
0x4000a7c	      0xbe00000000	                              mov esi, 0	      2064	obj-elf.c	FUNCTION_50	CALL_48
0x4000a81	      0xbf00000000	                              mov edi, 0	      2064	obj-elf.c	FUNCTION_50	CALL_48
0x4000a86	      0xe800000000	                          call 0x4000a8b	      2064	obj-elf.c	FUNCTION_50	CALL_48
0x4000a8b	          0x4c89ee	                            mov rsi, r13	      2064	obj-elf.c	FUNCTION_50	CALL_48
0x4000a8e	          0x4889c7	                            mov rdi, rax	      2064	obj-elf.c	FUNCTION_50	CALL_48
0x4000a91	      0xb800000000	                              mov eax, 0	      2064	obj-elf.c	FUNCTION_50	CALL_48
0x4000a96	      0xe800000000	                          call 0x4000a9b	      2064	obj-elf.c	FUNCTION_50	CALL_48
0x4000a9b	      0xba00000000	                              mov edx, 0	      1985	obj-elf.c	FUNCTION_50
0x4000aa0	            0xeb1a	                           jmp 0x4000abc	      1985	obj-elf.c	FUNCTION_50
0x4000aa2	      0xba08000000	                              mov edx, 8	      1989	obj-elf.c	FUNCTION_50	IF_3
0x4000aa7	            0xeb13	                           jmp 0x4000abc	      1989	obj-elf.c	FUNCTION_50	IF_3
0x4000aa9	      0xba00000100	                        mov edx, 0x10000	      1993	obj-elf.c	FUNCTION_50	ELSE_1	IF_4
0x4000aae	            0xeb0c	                           jmp 0x4000abc	      1993	obj-elf.c	FUNCTION_50	ELSE_1	IF_4
0x4000ab0	      0xba00000500	                        mov edx, 0x50000	      1997	obj-elf.c	FUNCTION_50	ELSE_2	IF_5
0x4000ab5	            0xeb05	                           jmp 0x4000abc	      1997	obj-elf.c	FUNCTION_50	ELSE_2	IF_5
0x4000ab7	      0xba00000000	                              mov edx, 0	      1985	obj-elf.c	FUNCTION_50
0x4000abc	    0x488b05000000	            mov rax, qword [0x04000ac3] 	      2066	obj-elf.c	FUNCTION_50
0x4000ac3	            0x8818	                      mov byte [rax], bl	      2066	obj-elf.c	FUNCTION_50
0x4000ac5	    0x488b05000000	            mov rax, qword [0x04000acc] 	      2068	obj-elf.c	FUNCTION_50	IF_16
0x4000acc	          0x803822	                    cmp byte [rax], 0x22	      2068	obj-elf.c	FUNCTION_50	IF_16
0x4000acf	            0x750b	                           jne 0x4000adc	      2068	obj-elf.c	FUNCTION_50	IF_16
0x4000ad1	        0x4883c001	                              add rax, 1	      2069	obj-elf.c	FUNCTION_50	IF_16
0x4000ad5	    0x488905000000	            mov qword [0x04000adc], rax 	      2069	obj-elf.c	FUNCTION_50	IF_16
0x4000adc	           0x95518	              or dword [rbp + 0x18], edx	      2071	obj-elf.c	FUNCTION_50
0x4000adf	      0xe800000000	                          call 0x4000ae4	      2073	obj-elf.c	FUNCTION_50	CALL_49
0x4000ae4	      0x488b442408	                mov rax, qword [rsp + 8]	      2074	obj-elf.c	FUNCTION_50
0x4000ae9	    0x644833042528	                xor rax, qword fs:[0x28]	      2074	obj-elf.c	FUNCTION_50
0x4000af2	            0x7422	                            je 0x4000b16	      2074	obj-elf.c	FUNCTION_50
0x4000af4	            0xeb1b	                           jmp 0x4000b11	      2074	obj-elf.c	FUNCTION_50
0x4000af6	        0x48891424	                    mov qword [rsp], rdx	      1944	obj-elf.c	FUNCTION_49
0x4000afa	           0xfb602	                   movzx eax, byte [rdx]	      1945	obj-elf.c	FUNCTION_49	IF_1
0x4000afd	          0x8d48d0	                   lea ecx, [rax - 0x30]	      1945	obj-elf.c	FUNCTION_49	IF_1
0x4000b00	          0x4889d0	                            mov rax, rdx	      1944	obj-elf.c	FUNCTION_49
0x4000b03	          0x80f909	                               cmp cl, 9	      1945	obj-elf.c	FUNCTION_49	IF_1
0x4000b06	     0xf86c5fbffff	                           jbe 0x40006d1	      1945	obj-elf.c	FUNCTION_49	IF_1
0x4000b0c	      0xe9e2fbffff	                           jmp 0x40006f3	      1945	obj-elf.c	FUNCTION_49	IF_1
0x4000b11	      0xe800000000	                          call 0x4000b16	      2074	obj-elf.c	FUNCTION_50
0x4000b16	        0x4883c418	                           add rsp, 0x18	      2074	obj-elf.c	FUNCTION_50
0x4000b1a	              0x5b	                                 pop rbx	      2074	obj-elf.c	FUNCTION_50
0x4000b1b	              0x5d	                                 pop rbp	      2074	obj-elf.c	FUNCTION_50
0x4000b1c	            0x415c	                                 pop r12	      2074	obj-elf.c	FUNCTION_50
0x4000b1e	            0x415d	                                 pop r13	      2074	obj-elf.c	FUNCTION_50
0x4000b20	            0x415e	                                 pop r14	      2074	obj-elf.c	FUNCTION_50
0x4000b22	            0x415f	                                 pop r15	      2074	obj-elf.c	FUNCTION_50
0x4000b24	              0xc3	                                     ret	      2074	obj-elf.c	FUNCTION_50
elf_s_set_align	DO,0:FOR,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:IF,0:CALL,1	6
0x400015c	              0x53	                                push rbx	       239	obj-elf.c	FUNCTION_6
0x400015d	          0x4889f3	                            mov rbx, rsi	       239	obj-elf.c	FUNCTION_6
0x4000160	      0xe800000000	                          call 0x4000165	       240	obj-elf.c	FUNCTION_6	CALL_1
0x4000165	        0x48895830	             mov qword [rax + 0x30], rbx	       240	obj-elf.c	FUNCTION_6	CALL_1
0x4000169	              0x5b	                                 pop rbx	       241	obj-elf.c	FUNCTION_6
0x400016a	              0xc3	                                     ret	       241	obj-elf.c	FUNCTION_6
elf_sec_sym_ok_for_reloc	DO,0:FOR,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:IF,0:CALL,1	4
0x4000040	    0x4883bff00000	               cmp qword [rdi + 0xf0], 0	       258	obj-elf.c	FUNCTION_9	CALL_1
0x4000048	           0xf95c0	                                setne al	       258	obj-elf.c	FUNCTION_9	CALL_1
0x400004b	           0xfb6c0	                           movzx eax, al	       258	obj-elf.c	FUNCTION_9	CALL_1
0x400004e	              0xc3	                                     ret	       259	obj-elf.c	FUNCTION_9
obj_elf_section_name	DO,0:FOR,0:SWITCH,0:functions,0:ELSE,2:WHILE,2:IF,4:CALL,17	123
0x40024d6	            0x4157	                                push r15	       947	obj-elf.c	FUNCTION_24
0x40024d8	            0x4156	                                push r14	       947	obj-elf.c	FUNCTION_24
0x40024da	            0x4155	                                push r13	       947	obj-elf.c	FUNCTION_24
0x40024dc	            0x4154	                                push r12	       947	obj-elf.c	FUNCTION_24
0x40024de	              0x55	                                push rbp	       947	obj-elf.c	FUNCTION_24
0x40024df	              0x53	                                push rbx	       947	obj-elf.c	FUNCTION_24
0x40024e0	        0x4883ec18	                           sub rsp, 0x18	       947	obj-elf.c	FUNCTION_24
0x40024e4	    0x64488b042528	                mov rax, qword fs:[0x28]	       947	obj-elf.c	FUNCTION_24
0x40024ed	      0x4889442408	                mov qword [rsp + 8], rax	       947	obj-elf.c	FUNCTION_24
0x40024f2	            0x31c0	                            xor eax, eax	       947	obj-elf.c	FUNCTION_24
0x40024f4	    0x488b05000000	            mov rax, qword [0x040024fb] 	       950	obj-elf.c	FUNCTION_24	CALL_1
0x40024fb	          0x803820	                    cmp byte [rax], 0x20	       950	obj-elf.c	FUNCTION_24	CALL_1
0x40024fe	            0x750b	                           jne 0x400250b	       950	obj-elf.c	FUNCTION_24	CALL_1
0x4002500	        0x4883c001	                              add rax, 1	       950	obj-elf.c	FUNCTION_24	CALL_1
0x4002504	    0x488905000000	            mov qword [0x0400250b], rax 	       950	obj-elf.c	FUNCTION_24	CALL_1
0x400250b	    0x488b1d000000	            mov rbx, qword [0x04002512] 	       951	obj-elf.c	FUNCTION_24	IF_1
0x4002512	          0x4989de	                            mov r14, rbx	       951	obj-elf.c	FUNCTION_24	IF_1
0x4002515	          0x803b22	                    cmp byte [rbx], 0x22	       951	obj-elf.c	FUNCTION_24	IF_1
0x4002518	            0x7529	                           jne 0x4002543	       951	obj-elf.c	FUNCTION_24	IF_1
0x400251a	      0x488d7c2404	                      lea rdi, [rsp + 4]	       955	obj-elf.c	FUNCTION_24	IF_1	CALL_2
0x400251f	      0xe800000000	                          call 0x4002524	       955	obj-elf.c	FUNCTION_24	IF_1	CALL_2
0x4002524	          0x4989c4	                            mov r12, rax	       955	obj-elf.c	FUNCTION_24	IF_1	CALL_2
0x4002527	          0x4885c0	                           test rax, rax	       956	obj-elf.c	FUNCTION_24	IF_1	IF_2
0x400252a	     0xf8549010000	                           jne 0x4002679	       956	obj-elf.c	FUNCTION_24	IF_1	IF_2
0x4002530	      0xe800000000	                          call 0x4002535	       958	obj-elf.c	FUNCTION_24	IF_1	IF_2	CALL_3
0x4002535	      0xb800000000	                              mov eax, 0	       959	obj-elf.c	FUNCTION_24	IF_1	IF_2
0x400253a	      0xe954010000	                           jmp 0x4002693	       959	obj-elf.c	FUNCTION_24	IF_1	IF_2
0x400253f	        0x4983c601	                              add r14, 1	       967	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_1
0x4002543	        0x410fbe36	                   movsx esi, byte [r14]	       966	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_1	CALL_4
0x4002547	      0xbf00000000	                              mov edi, 0	       966	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_1	CALL_4
0x400254c	      0xe800000000	                          call 0x4002551	       966	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_1	CALL_4
0x4002551	          0x4885c0	                           test rax, rax	       966	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_1	CALL_4
0x4002554	            0x74e9	                            je 0x400253f	       966	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_1	CALL_4
0x4002556	          0x4939de	                            cmp r14, rbx	       968	obj-elf.c	FUNCTION_24	ELSE_1	IF_3
0x4002559	            0x7530	                           jne 0x400258b	       968	obj-elf.c	FUNCTION_24	ELSE_1	IF_3
0x400255b	      0xba05000000	                              mov edx, 5	       970	obj-elf.c	FUNCTION_24	ELSE_1	IF_3	CALL_6
0x4002560	      0xbe00000000	                              mov esi, 0	       970	obj-elf.c	FUNCTION_24	ELSE_1	IF_3	CALL_6
0x4002565	      0xbf00000000	                              mov edi, 0	       970	obj-elf.c	FUNCTION_24	ELSE_1	IF_3	CALL_6
0x400256a	      0xe800000000	                          call 0x400256f	       970	obj-elf.c	FUNCTION_24	ELSE_1	IF_3	CALL_6
0x400256f	          0x4889c7	                            mov rdi, rax	       970	obj-elf.c	FUNCTION_24	ELSE_1	IF_3	CALL_6
0x4002572	      0xb800000000	                              mov eax, 0	       970	obj-elf.c	FUNCTION_24	ELSE_1	IF_3	CALL_6
0x4002577	      0xe800000000	                          call 0x400257c	       970	obj-elf.c	FUNCTION_24	ELSE_1	IF_3	CALL_6
0x400257c	      0xe800000000	                          call 0x4002581	       971	obj-elf.c	FUNCTION_24	ELSE_1	IF_3	CALL_7
0x4002581	      0xb800000000	                              mov eax, 0	       972	obj-elf.c	FUNCTION_24	ELSE_1	IF_3
0x4002586	      0xe908010000	                           jmp 0x4002693	       972	obj-elf.c	FUNCTION_24	ELSE_1	IF_3
0x400258b	          0x4c89f5	                            mov rbp, r14	       975	obj-elf.c	FUNCTION_24	ELSE_1	CALL_8
0x400258e	          0x4829dd	                            sub rbp, rbx	       975	obj-elf.c	FUNCTION_24	ELSE_1	CALL_8
0x4002591	        0x488d7d01	                      lea rdi, [rbp + 1]	       525	as.h	FUNCTION_84	CALL_1
0x4002595	      0xe800000000	                          call 0x400259a	       525	as.h	FUNCTION_84	CALL_1
0x400259a	        0xc6042800	                 mov byte [rax + rbp], 0	       526	as.h	FUNCTION_84
0x400259e	          0x4889ea	                            mov rdx, rbp	        53	string3.h	FUNCTION_72	CALL_3
0x40025a1	          0x4889de	                            mov rsi, rbx	        53	string3.h	FUNCTION_72	CALL_3
0x40025a4	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_72	CALL_3
0x40025a7	      0xe800000000	                          call 0x40025ac	        53	string3.h	FUNCTION_72	CALL_3
0x40025ac	          0x4989c4	                            mov r12, rax	        53	string3.h	FUNCTION_72	CALL_3
0x40025af	    0x833d00000000	               cmp dword [0x040025b6], 0	       977	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2
0x40025b6	     0xf84b6000000	                            je 0x4002672	       977	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2
0x40025bc	    0x49c7c7ffffff	             mov r15, 0xffffffffffffffff	       982	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_10
0x40025c3	            0xeb03	                           jmp 0x40025c8	       982	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_10
0x40025c5	          0x4d89ec	                            mov r12, r13	       985	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_12
0x40025c8	      0xbe25000000	                           mov esi, 0x25	       979	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	CALL_9
0x40025cd	          0x4c89e7	                            mov rdi, r12	       979	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	CALL_9
0x40025d0	      0xe800000000	                          call 0x40025d5	       979	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	CALL_9
0x40025d5	          0x4889c5	                            mov rbp, rax	       979	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	CALL_9
0x40025d8	          0x4885c0	                           test rax, rax	       980	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4
0x40025db	     0xf8491000000	                            je 0x4002672	       980	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4
0x40025e1	        0x80780153	                cmp byte [rax + 1], 0x53	       980	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4
0x40025e5	     0xf8587000000	                           jne 0x4002672	       980	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4
0x40025eb	      0xb800000000	                              mov eax, 0	       982	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_10
0x40025f0	          0x4c89f9	                            mov rcx, r15	       982	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_10
0x40025f3	          0x4c89e7	                            mov rdi, r12	       982	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_10
0x40025f6	            0xf2ae	              repne scasb al, byte [rdi]	       982	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_10
0x40025f8	          0x4889ca	                            mov rdx, rcx	       982	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_10
0x40025fb	          0x48f7d2	                                 not rdx	       982	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_10
0x40025fe	    0x488b0d000000	            mov rcx, qword [0x04002605] 	       983	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_11
0x4002605	          0x488b39	                    mov rdi, qword [rcx]	       983	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_11
0x4002608	          0x4c89f9	                            mov rcx, r15	       983	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_11
0x400260b	            0xf2ae	              repne scasb al, byte [rdi]	       983	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_11
0x400260d	          0x4889c8	                            mov rax, rcx	       983	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_11
0x4002610	          0x48f7d0	                                 not rax	       983	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_11
0x4002613	        0x8d7c02fd	                lea edi, [rdx + rax - 3]	       985	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_12
0x4002617	          0x4863ff	                         movsxd rdi, edi	       985	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_12
0x400261a	      0xe800000000	                          call 0x400261f	       985	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_12
0x400261f	          0x4989c5	                            mov r13, rax	       985	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_12
0x4002622	          0x4889eb	                            mov rbx, rbp	       987	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_13
0x4002625	          0x4c29e3	                            sub rbx, r12	       987	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_13
0x4002628	          0x4863db	                         movsxd rbx, ebx	       987	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_13
0x400262b	          0x4889da	                            mov rdx, rbx	        53	string3.h	FUNCTION_72	CALL_3
0x400262e	          0x4c89e6	                            mov rsi, r12	        53	string3.h	FUNCTION_72	CALL_3
0x4002631	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_72	CALL_3
0x4002634	      0xe800000000	                          call 0x4002639	        53	string3.h	FUNCTION_72	CALL_3
0x4002639	          0x4c01eb	                            add rbx, r13	       988	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_14
0x400263c	    0x488b05000000	            mov rax, qword [0x04002643] 	       988	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_14
0x4002643	          0x488b30	                    mov rsi, qword [rax]	       110	string3.h	FUNCTION_78	CALL_3
0x4002646	          0x4889df	                            mov rdi, rbx	       110	string3.h	FUNCTION_78	CALL_3
0x4002649	      0xe800000000	                          call 0x400264e	       110	string3.h	FUNCTION_78	CALL_3
0x400264e	        0x488d7502	                      lea rsi, [rbp + 2]	       148	string3.h	FUNCTION_82	CALL_3
0x4002652	          0x4889df	                            mov rdi, rbx	       148	string3.h	FUNCTION_82	CALL_3
0x4002655	      0xe800000000	                          call 0x400265a	       148	string3.h	FUNCTION_82	CALL_3
0x400265a	          0x4c89e7	                            mov rdi, r12	       990	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4
0x400265d	      0xe800000000	                          call 0x4002662	       990	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4
0x4002662	    0x833d00000000	               cmp dword [0x04002669], 0	       977	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2
0x4002669	     0xf8556ffffff	                           jne 0x40025c5	       977	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2
0x400266f	          0x4d89ec	                            mov r12, r13	       985	obj-elf.c	FUNCTION_24	ELSE_1	WHILE_2	IF_4	CALL_12
0x4002672	    0x4c8935000000	            mov qword [0x04002679], r14 	      1000	obj-elf.c	FUNCTION_24	ELSE_1
0x4002679	    0x488b15000000	            mov rdx, qword [0x04002680] 	      1002	obj-elf.c	FUNCTION_24	CALL_17
0x4002680	          0x4c89e0	                            mov rax, r12	      1003	obj-elf.c	FUNCTION_24
0x4002683	          0x803a20	                    cmp byte [rdx], 0x20	      1002	obj-elf.c	FUNCTION_24	CALL_17
0x4002686	            0x750b	                           jne 0x4002693	      1002	obj-elf.c	FUNCTION_24	CALL_17
0x4002688	        0x4883c201	                              add rdx, 1	      1002	obj-elf.c	FUNCTION_24	CALL_17
0x400268c	    0x488915000000	            mov qword [0x04002693], rdx 	      1002	obj-elf.c	FUNCTION_24	CALL_17
0x4002693	      0x488b542408	                mov rdx, qword [rsp + 8]	      1004	obj-elf.c	FUNCTION_24
0x4002698	    0x644833142528	                xor rdx, qword fs:[0x28]	      1004	obj-elf.c	FUNCTION_24
0x40026a1	            0x7405	                            je 0x40026a8	      1004	obj-elf.c	FUNCTION_24
0x40026a3	      0xe800000000	                          call 0x40026a8	      1004	obj-elf.c	FUNCTION_24
0x40026a8	        0x4883c418	                           add rsp, 0x18	      1004	obj-elf.c	FUNCTION_24
0x40026ac	              0x5b	                                 pop rbx	      1004	obj-elf.c	FUNCTION_24
0x40026ad	              0x5d	                                 pop rbp	      1004	obj-elf.c	FUNCTION_24
0x40026ae	            0x415c	                                 pop r12	      1004	obj-elf.c	FUNCTION_24
0x40026b0	            0x415d	                                 pop r13	      1004	obj-elf.c	FUNCTION_24
0x40026b2	            0x415e	                                 pop r14	      1004	obj-elf.c	FUNCTION_24
0x40026b4	            0x415f	                                 pop r15	      1004	obj-elf.c	FUNCTION_24
0x40026b6	              0xc3	                                     ret	      1004	obj-elf.c	FUNCTION_24
build_group_lists	DO,0:FOR,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:IF,3:CALL,6	50
0x4001cd6	            0x4155	                                push r13	      2375	obj-elf.c	FUNCTION_58
0x4001cd8	            0x4154	                                push r12	      2375	obj-elf.c	FUNCTION_58
0x4001cda	              0x55	                                push rbp	      2375	obj-elf.c	FUNCTION_58
0x4001cdb	              0x53	                                push rbx	      2375	obj-elf.c	FUNCTION_58
0x4001cdc	        0x4883ec08	                              sub rsp, 8	      2375	obj-elf.c	FUNCTION_58
0x4001ce0	    0x488b86e00000	            mov rax, qword [rsi + 0xe0] 	      2377	obj-elf.c	FUNCTION_58	CALL_1
0x4001ce7	    0x488ba8b00000	            mov rbp, qword [rax + 0xb0] 	      2377	obj-elf.c	FUNCTION_58	CALL_1
0x4001cee	          0x4885ed	                           test rbp, rbp	      2382	obj-elf.c	FUNCTION_58	IF_1
0x4001cf1	     0xf8484000000	                            je 0x4001d7b	      2382	obj-elf.c	FUNCTION_58	IF_1
0x4001cf7	          0x4889d3	                            mov rbx, rdx	      2382	obj-elf.c	FUNCTION_58	IF_1
0x4001cfa	          0x4989f4	                            mov r12, rsi	      2382	obj-elf.c	FUNCTION_58	IF_1
0x4001cfd	        0x488b7a10	            mov rdi, qword [rdx + 0x10] 	      2387	obj-elf.c	FUNCTION_58	CALL_2
0x4001d01	          0x4889ee	                            mov rsi, rbp	      2387	obj-elf.c	FUNCTION_58	CALL_2
0x4001d04	      0xe800000000	                          call 0x4001d09	      2387	obj-elf.c	FUNCTION_58	CALL_2
0x4001d09	          0x4885c0	                           test rax, rax	      2388	obj-elf.c	FUNCTION_58	IF_2
0x4001d0c	            0x7423	                            je 0x4001d31	      2388	obj-elf.c	FUNCTION_58	IF_2
0x4001d0e	    0x498b9424e000	            mov rdx, qword [r12 + 0xe0] 	      2390	obj-elf.c	FUNCTION_58	IF_2	CALL_3
0x4001d16	            0x8b30	                    mov esi, dword [rax]	      2390	obj-elf.c	FUNCTION_58	IF_2	CALL_3
0x4001d18	          0x488b0b	                    mov rcx, qword [rbx]	      2390	obj-elf.c	FUNCTION_58	IF_2	CALL_3
0x4001d1b	        0x488b0cf1	            mov rcx, qword [rcx + rsi*8]	      2390	obj-elf.c	FUNCTION_58	IF_2	CALL_3
0x4001d1f	    0x48898ac00000	             mov qword [rdx + 0xc0], rcx	      2390	obj-elf.c	FUNCTION_58	IF_2	CALL_3
0x4001d26	            0x8b10	                    mov edx, dword [rax]	      2391	obj-elf.c	FUNCTION_58	IF_2
0x4001d28	          0x488b03	                    mov rax, qword [rbx]	      2391	obj-elf.c	FUNCTION_58	IF_2
0x4001d2b	        0x4c8924d0	            mov qword [rax + rdx*8], r12	      2391	obj-elf.c	FUNCTION_58	IF_2
0x4001d2f	            0xeb4a	                           jmp 0x4001d7b	      2392	obj-elf.c	FUNCTION_58	IF_2
0x4001d31	        0x448b6b08	               mov r13d, dword [rbx + 8]	      2397	obj-elf.c	FUNCTION_58
0x4001d35	        0x41f6c57f	                         test r13b, 0x7f	      2398	obj-elf.c	FUNCTION_58	IF_3
0x4001d39	            0x7516	                           jne 0x4001d51	      2398	obj-elf.c	FUNCTION_58	IF_3
0x4001d3b	    0x418db5800000	                   lea esi, [r13 + 0x80]	      2401	obj-elf.c	FUNCTION_58	IF_3	CALL_4
0x4001d42	        0x48c1e603	                              shl rsi, 3	      2401	obj-elf.c	FUNCTION_58	IF_3	CALL_4
0x4001d46	          0x488b3b	                    mov rdi, qword [rbx]	      2401	obj-elf.c	FUNCTION_58	IF_3	CALL_4
0x4001d49	      0xe800000000	                          call 0x4001d4e	      2401	obj-elf.c	FUNCTION_58	IF_3	CALL_4
0x4001d4e	          0x488903	                    mov qword [rbx], rax	      2401	obj-elf.c	FUNCTION_58	IF_3	CALL_4
0x4001d51	          0x4489ea	                           mov edx, r13d	      2403	obj-elf.c	FUNCTION_58
0x4001d54	          0x488b03	                    mov rax, qword [rbx]	      2403	obj-elf.c	FUNCTION_58
0x4001d57	        0x4c8924d0	            mov qword [rax + rdx*8], r12	      2403	obj-elf.c	FUNCTION_58
0x4001d5b	        0x83430801	                  add dword [rbx + 8], 1	      2404	obj-elf.c	FUNCTION_58
0x4001d5f	      0xbf04000000	                              mov edi, 4	      2407	obj-elf.c	FUNCTION_58	CALL_5
0x4001d64	      0xe800000000	                          call 0x4001d69	      2407	obj-elf.c	FUNCTION_58	CALL_5
0x4001d69	          0x448928	                   mov dword [rax], r13d	      2408	obj-elf.c	FUNCTION_58
0x4001d6c	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      2409	obj-elf.c	FUNCTION_58	CALL_6
0x4001d70	          0x4889c2	                            mov rdx, rax	      2409	obj-elf.c	FUNCTION_58	CALL_6
0x4001d73	          0x4889ee	                            mov rsi, rbp	      2409	obj-elf.c	FUNCTION_58	CALL_6
0x4001d76	      0xe800000000	                          call 0x4001d7b	      2409	obj-elf.c	FUNCTION_58	CALL_6
0x4001d7b	        0x4883c408	                              add rsp, 8	      2410	obj-elf.c	FUNCTION_58
0x4001d7f	              0x5b	                                 pop rbx	      2410	obj-elf.c	FUNCTION_58
0x4001d80	              0x5d	                                 pop rbp	      2410	obj-elf.c	FUNCTION_58
0x4001d81	            0x415c	                                 pop r12	      2410	obj-elf.c	FUNCTION_58
0x4001d83	            0x415d	                                 pop r13	      2410	obj-elf.c	FUNCTION_58
0x4001d85	              0xc3	                                     ret	      2410	obj-elf.c	FUNCTION_58
obj_elf_vtable_inherit	DO,0:FOR,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:IF,0:CALL,1	4
0x40032ce	        0x4883ec08	                              sub rsp, 8	      1526	obj-elf.c	FUNCTION_36
0x40032d2	      0xe800000000	                          call 0x40032d7	      1527	obj-elf.c	FUNCTION_36	CALL_1
0x40032d7	        0x4883c408	                              add rsp, 8	      1528	obj-elf.c	FUNCTION_36
0x40032db	              0xc3	                                     ret	      1528	obj-elf.c	FUNCTION_36
elf_pop_insert	DO,0:FOR,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:IF,1:CALL,2	5
0x40000d2	        0x4883ec08	                              sub rsp, 8	       213	obj-elf.c	FUNCTION_2
0x40000d6	      0xbf00000000	                              mov edi, 0	       214	obj-elf.c	FUNCTION_2	CALL_1
0x40000db	      0xe800000000	                          call 0x40000e0	       214	obj-elf.c	FUNCTION_2	CALL_1
0x40000e0	        0x4883c408	                              add rsp, 8	       217	obj-elf.c	FUNCTION_2
0x40000e4	              0xc3	                                     ret	       217	obj-elf.c	FUNCTION_2
elf_adjust_symtab	DO,0:FOR,2:SWITCH,0:functions,0:ELSE,0:WHILE,0:IF,4:CALL,24	123
0x4001ac1	            0x4156	                                push r14	      2421	obj-elf.c	FUNCTION_60
0x4001ac3	            0x4155	                                push r13	      2421	obj-elf.c	FUNCTION_60
0x4001ac5	            0x4154	                                push r12	      2421	obj-elf.c	FUNCTION_60
0x4001ac7	              0x55	                                push rbp	      2421	obj-elf.c	FUNCTION_60
0x4001ac8	              0x53	                                push rbx	      2421	obj-elf.c	FUNCTION_60
0x4001ac9	    0xc70500000000	               mov dword [0x04001ad3], 0	      2425	obj-elf.c	FUNCTION_60
0x4001ad3	    0x48c705000000	               mov qword [0x04001ade], 0	      2426	obj-elf.c	FUNCTION_60
0x4001ade	      0xe800000000	                          call 0x4001ae3	      2427	obj-elf.c	FUNCTION_60	CALL_1
0x4001ae3	    0x488905000000	            mov qword [0x04001aea], rax 	      2427	obj-elf.c	FUNCTION_60	CALL_1
0x4001aea	      0xba00000000	                              mov edx, 0	      2428	obj-elf.c	FUNCTION_60	CALL_2
0x4001aef	      0xbe00000000	                              mov esi, 0	      2428	obj-elf.c	FUNCTION_60	CALL_2
0x4001af4	    0x488b3d000000	            mov rdi, qword [0x04001afb] 	      2428	obj-elf.c	FUNCTION_60	CALL_2
0x4001afb	      0xe800000000	                          call 0x4001b00	      2428	obj-elf.c	FUNCTION_60	CALL_2
0x4001b00	    0x833d00000000	               cmp dword [0x04001b07], 0	      2434	obj-elf.c	FUNCTION_60	FOR_1
0x4001b07	     0xf84c0010000	                            je 0x4001ccd	      2434	obj-elf.c	FUNCTION_60	FOR_1
0x4001b0d	    0x41bc00000000	                             mov r12d, 0	      2434	obj-elf.c	FUNCTION_60	FOR_1
0x4001b13	          0x4489e0	                           mov eax, r12d	      2436	obj-elf.c	FUNCTION_60	FOR_1	CALL_3
0x4001b16	    0x488d2cc50000	                        lea rbp, [rax*8]	      2436	obj-elf.c	FUNCTION_60	FOR_1	CALL_3
0x4001b1e	    0x488b15000000	            mov rdx, qword [0x04001b25] 	      2436	obj-elf.c	FUNCTION_60	FOR_1	CALL_3
0x4001b25	        0x488b0cc2	            mov rcx, qword [rdx + rax*8]	      2436	obj-elf.c	FUNCTION_60	FOR_1	CALL_3
0x4001b29	    0x488b81e00000	            mov rax, qword [rcx + 0xe0] 	      2436	obj-elf.c	FUNCTION_60	FOR_1	CALL_3
0x4001b30	    0x4c8ba8b00000	            mov r13, qword [rax + 0xb0] 	      2436	obj-elf.c	FUNCTION_60	FOR_1	CALL_3
0x4001b37	          0x4885c9	                           test rcx, rcx	      2443	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	CALL_4
0x4001b3a	            0x745f	                            je 0x4001b9b	      2443	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	CALL_4
0x4001b3c	          0x4889c8	                            mov rax, rcx	      2443	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	CALL_4
0x4001b3f	      0xbb08410002	                      mov ebx, 0x2004108	      2443	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	CALL_4
0x4001b44	            0x89da	                            mov edx, ebx	      2444	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	IF_1
0x4001b46	          0x335020	             xor edx, dword [rax + 0x20]	      2444	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	IF_1
0x4001b49	    0xf7c200000200	                       test edx, 0x20000	      2444	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	IF_1
0x4001b4f	            0x7435	                            je 0x4001b86	      2444	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	IF_1
0x4001b51	          0x4839c1	                            cmp rcx, rax	      2447	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	IF_1	IF_2
0x4001b54	            0x742b	                            je 0x4001b81	      2447	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	IF_1	IF_2
0x4001b56	      0xba05000000	                              mov edx, 5	      2449	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	IF_1	IF_2	CALL_6
0x4001b5b	      0xbe00000000	                              mov esi, 0	      2449	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	IF_1	IF_2	CALL_6
0x4001b60	      0xbf00000000	                              mov edi, 0	      2449	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	IF_1	IF_2	CALL_6
0x4001b65	      0xe800000000	                          call 0x4001b6a	      2449	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	IF_1	IF_2	CALL_6
0x4001b6a	          0x4c89ee	                            mov rsi, r13	      2449	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	IF_1	IF_2	CALL_6
0x4001b6d	          0x4889c7	                            mov rdi, rax	      2449	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	IF_1	IF_2	CALL_6
0x4001b70	      0xb800000000	                              mov eax, 0	      2449	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	IF_1	IF_2	CALL_6
0x4001b75	      0xe800000000	                          call 0x4001b7a	      2449	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	IF_1	IF_2	CALL_6
0x4001b7a	      0xbb08410202	                      mov ebx, 0x2024108	      2446	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	IF_1
0x4001b7f	            0xeb1f	                           jmp 0x4001ba0	      2451	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	IF_1	IF_2
0x4001b81	      0xbb08410202	                      mov ebx, 0x2024108	      2446	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	IF_1
0x4001b86	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      2443	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	CALL_4
0x4001b8d	    0x488b80c00000	            mov rax, qword [rax + 0xc0] 	      2443	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	CALL_4
0x4001b94	          0x4885c0	                           test rax, rax	      2443	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	CALL_4
0x4001b97	            0x75ab	                           jne 0x4001b44	      2443	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	CALL_4
0x4001b99	            0xeb05	                           jmp 0x4001ba0	      2443	obj-elf.c	FUNCTION_60	FOR_1	FOR_2	CALL_4
0x4001b9b	      0xbb08410002	                      mov ebx, 0x2004108	      2442	obj-elf.c	FUNCTION_60	FOR_1
0x4001ba0	      0xbe00000000	                              mov esi, 0	      2456	obj-elf.c	FUNCTION_60	FOR_1	CALL_7
0x4001ba5	      0xbf00000000	                              mov edi, 0	      2456	obj-elf.c	FUNCTION_60	FOR_1	CALL_7
0x4001baa	      0xe800000000	                          call 0x4001baf	      2456	obj-elf.c	FUNCTION_60	FOR_1	CALL_7
0x4001baf	          0x4989c6	                            mov r14, rax	      2456	obj-elf.c	FUNCTION_60	FOR_1	CALL_7
0x4001bb2	          0x4885c0	                           test rax, rax	      2457	obj-elf.c	FUNCTION_60	FOR_1	IF_3
0x4001bb5	            0x7465	                            je 0x4001c1c	      2457	obj-elf.c	FUNCTION_60	FOR_1	IF_3
0x4001bb7	            0x89da	                            mov edx, ebx	      2458	obj-elf.c	FUNCTION_60	FOR_1	IF_3	CALL_8
0x4001bb9	          0x4889c6	                            mov rsi, rax	      2458	obj-elf.c	FUNCTION_60	FOR_1	IF_3	CALL_8
0x4001bbc	    0x488b3d000000	            mov rdi, qword [0x04001bc3] 	      2458	obj-elf.c	FUNCTION_60	FOR_1	IF_3	CALL_8
0x4001bc3	      0xe800000000	                          call 0x4001bc8	      2458	obj-elf.c	FUNCTION_60	FOR_1	IF_3	CALL_8
0x4001bc8	            0x85c0	                           test eax, eax	      2458	obj-elf.c	FUNCTION_60	FOR_1	IF_3	CALL_8
0x4001bca	            0x7450	                            je 0x4001c1c	      2458	obj-elf.c	FUNCTION_60	FOR_1	IF_3	CALL_8
0x4001bcc	    0x41c746700200	               mov dword [r14 + 0x70], 2	      1696	bfd.h	FUNCTION_70
0x4001bd4	    0x498b86e00000	            mov rax, qword [r14 + 0xe0] 	      2464	obj-elf.c	FUNCTION_60	FOR_1	CALL_14
0x4001bdb	    0xc74004110000	               mov dword [rax + 4], 0x11	      2464	obj-elf.c	FUNCTION_60	FOR_1	CALL_14
0x4001be2	    0x498b86e00000	            mov rax, qword [r14 + 0xe0] 	      2467	obj-elf.c	FUNCTION_60	FOR_1	CALL_15
0x4001be9	    0x48032d000000	             add rbp, qword [0x04001bf0]	      2467	obj-elf.c	FUNCTION_60	FOR_1	CALL_15
0x4001bf0	        0x488b5500	                    mov rdx, qword [rbp]	      2467	obj-elf.c	FUNCTION_60	FOR_1	CALL_15
0x4001bf4	    0x488990c00000	             mov qword [rax + 0xc0], rdx	      2467	obj-elf.c	FUNCTION_60	FOR_1	CALL_15
0x4001bfb	        0x488b4500	                    mov rax, qword [rbp]	      2468	obj-elf.c	FUNCTION_60	FOR_1	CALL_16
0x4001bff	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      2468	obj-elf.c	FUNCTION_60	FOR_1	CALL_16
0x4001c06	    0x4c89b0b80000	             mov qword [rax + 0xb8], r14	      2468	obj-elf.c	FUNCTION_60	FOR_1	CALL_16
0x4001c0d	          0x4c89ef	                            mov rdi, r13	      2471	obj-elf.c	FUNCTION_60	FOR_1	CALL_17
0x4001c10	      0xe800000000	                          call 0x4001c15	      2471	obj-elf.c	FUNCTION_60	FOR_1	CALL_17
0x4001c15	          0x4885c0	                           test rax, rax	      2472	obj-elf.c	FUNCTION_60	FOR_1	IF_4
0x4001c18	            0x7535	                           jne 0x4001c4f	      2472	obj-elf.c	FUNCTION_60	FOR_1	IF_4
0x4001c1a	            0xeb56	                           jmp 0x4001c72	      2472	obj-elf.c	FUNCTION_60	FOR_1	IF_4
0x4001c1c	      0xe800000000	                          call 0x4001c21	      2461	obj-elf.c	FUNCTION_60	FOR_1	IF_3	CALL_11
0x4001c21	            0x89c7	                            mov edi, eax	      2461	obj-elf.c	FUNCTION_60	FOR_1	IF_3	CALL_11
0x4001c23	      0xe800000000	                          call 0x4001c28	      2461	obj-elf.c	FUNCTION_60	FOR_1	IF_3	CALL_11
0x4001c28	          0x4889c3	                            mov rbx, rax	      2461	obj-elf.c	FUNCTION_60	FOR_1	IF_3	CALL_11
0x4001c2b	      0xba05000000	                              mov edx, 5	      2461	obj-elf.c	FUNCTION_60	FOR_1	IF_3	CALL_11
0x4001c30	      0xbe00000000	                              mov esi, 0	      2461	obj-elf.c	FUNCTION_60	FOR_1	IF_3	CALL_11
0x4001c35	      0xbf00000000	                              mov edi, 0	      2461	obj-elf.c	FUNCTION_60	FOR_1	IF_3	CALL_11
0x4001c3a	      0xe800000000	                          call 0x4001c3f	      2461	obj-elf.c	FUNCTION_60	FOR_1	IF_3	CALL_11
0x4001c3f	          0x4889de	                            mov rsi, rbx	      2461	obj-elf.c	FUNCTION_60	FOR_1	IF_3	CALL_11
0x4001c42	          0x4889c7	                            mov rdi, rax	      2461	obj-elf.c	FUNCTION_60	FOR_1	IF_3	CALL_11
0x4001c45	      0xb800000000	                              mov eax, 0	      2461	obj-elf.c	FUNCTION_60	FOR_1	IF_3	CALL_11
0x4001c4a	      0xe800000000	                          call 0x4001c4f	      2461	obj-elf.c	FUNCTION_60	FOR_1	IF_3	CALL_11
0x4001c4f	    0x488b1d000000	            mov rbx, qword [0x04001c56] 	      2473	obj-elf.c	FUNCTION_60	FOR_1	IF_4
0x4001c56	          0x4839d8	                            cmp rax, rbx	      2473	obj-elf.c	FUNCTION_60	FOR_1	IF_4
0x4001c59	            0x744b	                            je 0x4001ca6	      2473	obj-elf.c	FUNCTION_60	FOR_1	IF_4
0x4001c5b	          0xf60001	                      test byte [rax], 1	      2474	obj-elf.c	FUNCTION_60	FOR_1	IF_4
0x4001c5e	            0x7512	                           jne 0x4001c72	      2474	obj-elf.c	FUNCTION_60	FOR_1	IF_4
0x4001c60	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      2475	obj-elf.c	FUNCTION_60	FOR_1	IF_4
0x4001c64	          0x4885d2	                           test rdx, rdx	      2475	obj-elf.c	FUNCTION_60	FOR_1	IF_4
0x4001c67	            0x7409	                            je 0x4001c72	      2475	obj-elf.c	FUNCTION_60	FOR_1	IF_4
0x4001c69	        0x488b5a38	            mov rbx, qword [rdx + 0x38] 	      2476	obj-elf.c	FUNCTION_60	FOR_1	IF_4
0x4001c6d	          0x4839d8	                            cmp rax, rbx	      2476	obj-elf.c	FUNCTION_60	FOR_1	IF_4
0x4001c70	            0x7434	                            je 0x4001ca6	      2476	obj-elf.c	FUNCTION_60	FOR_1	IF_4
0x4001c72	    0x488b0d000000	            mov rcx, qword [0x04001c79] 	      2479	obj-elf.c	FUNCTION_60	FOR_1	IF_4	CALL_18
0x4001c79	      0xba00000000	                              mov edx, 0	      2479	obj-elf.c	FUNCTION_60	FOR_1	IF_4	CALL_18
0x4001c7e	    0x488b35000000	            mov rsi, qword [0x04001c85] 	      2479	obj-elf.c	FUNCTION_60	FOR_1	IF_4	CALL_18
0x4001c85	          0x4c89ef	                            mov rdi, r13	      2479	obj-elf.c	FUNCTION_60	FOR_1	IF_4	CALL_18
0x4001c88	      0xe800000000	                          call 0x4001c8d	      2479	obj-elf.c	FUNCTION_60	FOR_1	IF_4	CALL_18
0x4001c8d	          0x4889c3	                            mov rbx, rax	      2479	obj-elf.c	FUNCTION_60	FOR_1	IF_4	CALL_18
0x4001c90	          0x4889c7	                            mov rdi, rax	      2486	obj-elf.c	FUNCTION_60	FOR_1	IF_4	CALL_21
0x4001c93	      0xe800000000	                          call 0x4001c98	      2486	obj-elf.c	FUNCTION_60	FOR_1	IF_4	CALL_21
0x4001c98	    0xc70001000000	                      mov dword [rax], 1	      2486	obj-elf.c	FUNCTION_60	FOR_1	IF_4	CALL_21
0x4001c9e	          0x4889df	                            mov rdi, rbx	      2488	obj-elf.c	FUNCTION_60	FOR_1	IF_4	CALL_22
0x4001ca1	      0xe800000000	                          call 0x4001ca6	      2488	obj-elf.c	FUNCTION_60	FOR_1	IF_4	CALL_22
0x4001ca6	    0x498baee00000	            mov rbp, qword [r14 + 0xe0] 	      2490	obj-elf.c	FUNCTION_60	FOR_1	CALL_24
0x4001cad	          0x4889df	                            mov rdi, rbx	      2490	obj-elf.c	FUNCTION_60	FOR_1	CALL_24
0x4001cb0	      0xe800000000	                          call 0x4001cb5	      2490	obj-elf.c	FUNCTION_60	FOR_1	CALL_24
0x4001cb5	    0x488985b00000	            mov qword [rbp + 0xb0], rax 	      2490	obj-elf.c	FUNCTION_60	FOR_1	CALL_24
0x4001cbc	        0x4183c401	                             add r12d, 1	      2434	obj-elf.c	FUNCTION_60	FOR_1
0x4001cc0	    0x443925000000	           cmp dword [0x04001cc7], r12d 	      2434	obj-elf.c	FUNCTION_60	FOR_1
0x4001cc7	     0xf8746feffff	                            ja 0x4001b13	      2434	obj-elf.c	FUNCTION_60	FOR_1
0x4001ccd	              0x5b	                                 pop rbx	      2492	obj-elf.c	FUNCTION_60
0x4001cce	              0x5d	                                 pop rbp	      2492	obj-elf.c	FUNCTION_60
0x4001ccf	            0x415c	                                 pop r12	      2492	obj-elf.c	FUNCTION_60
0x4001cd1	            0x415d	                                 pop r13	      2492	obj-elf.c	FUNCTION_60
0x4001cd3	            0x415e	                                 pop r14	      2492	obj-elf.c	FUNCTION_60
0x4001cd5	              0xc3	                                     ret	      2492	obj-elf.c	FUNCTION_60
