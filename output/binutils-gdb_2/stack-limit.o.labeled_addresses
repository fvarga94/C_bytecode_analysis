stack_limit_increase	IF,2:CALL,2:ELSE,0:SWITCH,0:FOR,0:DO,0:WHILE,0:functions,0	38
0x4000040	              0x53	                                push rbx	        48	stack-limit.c	FUNCTION_1
0x4000041	        0x4883ec20	                           sub rsp, 0x20	        48	stack-limit.c	FUNCTION_1
0x4000045	          0x4889fb	                            mov rbx, rdi	        48	stack-limit.c	FUNCTION_1
0x4000048	    0x64488b042528	                mov rax, qword fs:[0x28]	        48	stack-limit.c	FUNCTION_1
0x4000051	      0x4889442418	             mov qword [rsp + 0x18], rax	        48	stack-limit.c	FUNCTION_1
0x4000056	            0x31c0	                            xor eax, eax	        48	stack-limit.c	FUNCTION_1
0x4000058	          0x4889e6	                            mov rsi, rsp	        52	stack-limit.c	FUNCTION_1	IF_1	CALL_1
0x400005b	      0xbf03000000	                              mov edi, 3	        52	stack-limit.c	FUNCTION_1	IF_1	CALL_1
0x4000060	      0xe800000000	                          call 0x4000065	        52	stack-limit.c	FUNCTION_1	IF_1	CALL_1
0x4000065	            0x85c0	                           test eax, eax	        52	stack-limit.c	FUNCTION_1	IF_1	CALL_1
0x4000067	            0x7541	                           jne 0x40000aa	        52	stack-limit.c	FUNCTION_1	IF_1	CALL_1
0x4000069	        0x488b0424	                    mov rax, qword [rsp]	        53	stack-limit.c	FUNCTION_1	IF_1
0x400006d	          0x4839d8	                            cmp rax, rbx	        54	stack-limit.c	FUNCTION_1	IF_1
0x4000070	            0x7338	                           jae 0x40000aa	        54	stack-limit.c	FUNCTION_1	IF_1
0x4000072	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	        54	stack-limit.c	FUNCTION_1	IF_1
0x4000076	            0x7432	                            je 0x40000aa	        54	stack-limit.c	FUNCTION_1	IF_1
0x4000078	      0x488b542408	                mov rdx, qword [rsp + 8]	        55	stack-limit.c	FUNCTION_1	IF_1
0x400007d	          0x4839d0	                            cmp rax, rdx	        55	stack-limit.c	FUNCTION_1	IF_1
0x4000080	            0x7206	                            jb 0x4000088	        55	stack-limit.c	FUNCTION_1	IF_1
0x4000082	        0x4883faff	             cmp rdx, 0xffffffffffffffff	        55	stack-limit.c	FUNCTION_1	IF_1
0x4000086	            0x7522	                           jne 0x40000aa	        55	stack-limit.c	FUNCTION_1	IF_1
0x4000088	          0x4839d3	                            cmp rbx, rdx	        58	stack-limit.c	FUNCTION_1	IF_1	IF_2
0x400008b	            0x7606	                           jbe 0x4000093	        58	stack-limit.c	FUNCTION_1	IF_1	IF_2
0x400008d	        0x4883faff	             cmp rdx, 0xffffffffffffffff	        58	stack-limit.c	FUNCTION_1	IF_1	IF_2
0x4000091	            0x7506	                           jne 0x4000099	        58	stack-limit.c	FUNCTION_1	IF_1	IF_2
0x4000093	        0x48891c24	                    mov qword [rsp], rbx	        57	stack-limit.c	FUNCTION_1	IF_1
0x4000097	            0xeb04	                           jmp 0x400009d	        57	stack-limit.c	FUNCTION_1	IF_1
0x4000099	        0x48891424	                    mov qword [rsp], rdx	        59	stack-limit.c	FUNCTION_1	IF_1	IF_2
0x400009d	          0x4889e6	                            mov rsi, rsp	        60	stack-limit.c	FUNCTION_1	IF_1	CALL_2
0x40000a0	      0xbf03000000	                              mov edi, 3	        60	stack-limit.c	FUNCTION_1	IF_1	CALL_2
0x40000a5	      0xe800000000	                          call 0x40000aa	        60	stack-limit.c	FUNCTION_1	IF_1	CALL_2
0x40000aa	      0x488b442418	            mov rax, qword [rsp + 0x18] 	        63	stack-limit.c	FUNCTION_1
0x40000af	    0x644833042528	                xor rax, qword fs:[0x28]	        63	stack-limit.c	FUNCTION_1
0x40000b8	            0x7405	                            je 0x40000bf	        63	stack-limit.c	FUNCTION_1
0x40000ba	      0xe800000000	                          call 0x40000bf	        63	stack-limit.c	FUNCTION_1
0x40000bf	        0x4883c420	                           add rsp, 0x20	        63	stack-limit.c	FUNCTION_1
0x40000c3	              0x5b	                                 pop rbx	        63	stack-limit.c	FUNCTION_1
0x40000c4	              0xc3	                                     ret	        63	stack-limit.c	FUNCTION_1
