bfd_getb_signed_16	functions,0:WHILE,0:SWITCH,0:DO,0:CALL,0:ELSE,0:FOR,0:IF,0	6
0x4000373	           0xfb607	                   movzx eax, byte [rdi]	       590	libbfd.c	FUNCTION_38
0x4000376	          0xc1e008	                              shl eax, 8	       590	libbfd.c	FUNCTION_38
0x4000379	         0xfb65701	               movzx edx, byte [rdi + 1]	       590	libbfd.c	FUNCTION_38
0x400037d	             0x9d0	                             or eax, edx	       590	libbfd.c	FUNCTION_38
0x400037f	        0x480fbfc0	                           movsx rax, ax	       590	libbfd.c	FUNCTION_38
0x4000383	              0xc3	                                     ret	       591	libbfd.c	FUNCTION_38
bfd_putb16	functions,0:WHILE,0:SWITCH,0:DO,0:CALL,0:ELSE,0:FOR,0:IF,0	5
0x4000395	          0x4889f8	                            mov rax, rdi	       604	libbfd.c	FUNCTION_40
0x4000398	        0x48c1e808	                              shr rax, 8	       604	libbfd.c	FUNCTION_40
0x400039c	            0x8806	                      mov byte [rsi], al	       604	libbfd.c	FUNCTION_40
0x400039e	        0x40887e01	                 mov byte [rsi + 1], dil	       605	libbfd.c	FUNCTION_40
0x40003a2	              0xc3	                                     ret	       605	libbfd.c	FUNCTION_40
bfd_malloc2	functions,0:WHILE,0:SWITCH,0:DO,0:CALL,2:ELSE,0:FOR,0:IF,1	21
0x40001c7	        0x4883ec08	                              sub rsp, 8	       282	libbfd.c	FUNCTION_29
0x40001cb	          0x4889fa	                            mov rdx, rdi	       284	libbfd.c	FUNCTION_29	IF_1
0x40001ce	          0x4809f2	                             or rdx, rsi	       284	libbfd.c	FUNCTION_29	IF_1
0x40001d1	      0xb8ffffffff	                     mov eax, 0xffffffff	       284	libbfd.c	FUNCTION_29	IF_1
0x40001d6	          0x4839c2	                            cmp rdx, rax	       284	libbfd.c	FUNCTION_29	IF_1
0x40001d9	            0x762a	                           jbe 0x4000205	       284	libbfd.c	FUNCTION_29	IF_1
0x40001db	          0x4885f6	                           test rsi, rsi	       284	libbfd.c	FUNCTION_29	IF_1
0x40001de	            0x7425	                            je 0x4000205	       284	libbfd.c	FUNCTION_29	IF_1
0x40001e0	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       285	libbfd.c	FUNCTION_29	IF_1
0x40001e7	      0xba00000000	                              mov edx, 0	       285	libbfd.c	FUNCTION_29	IF_1
0x40001ec	          0x48f7f6	                                 div rsi	       285	libbfd.c	FUNCTION_29	IF_1
0x40001ef	          0x4839c7	                            cmp rdi, rax	       285	libbfd.c	FUNCTION_29	IF_1
0x40001f2	            0x7611	                           jbe 0x4000205	       285	libbfd.c	FUNCTION_29	IF_1
0x40001f4	      0xbf06000000	                              mov edi, 6	       287	libbfd.c	FUNCTION_29	IF_1	CALL_1
0x40001f9	      0xe800000000	                          call 0x40001fe	       287	libbfd.c	FUNCTION_29	IF_1	CALL_1
0x40001fe	      0xb800000000	                              mov eax, 0	       288	libbfd.c	FUNCTION_29	IF_1
0x4000203	            0xeb09	                           jmp 0x400020e	       288	libbfd.c	FUNCTION_29	IF_1
0x4000205	        0x480faffe	                           imul rdi, rsi	       291	libbfd.c	FUNCTION_29	CALL_2
0x4000209	      0xe800000000	                          call 0x400020e	       291	libbfd.c	FUNCTION_29	CALL_2
0x400020e	        0x4883c408	                              add rsp, 8	       292	libbfd.c	FUNCTION_29
0x4000212	              0xc3	                                     ret	       292	libbfd.c	FUNCTION_29
bfd_putb32	functions,0:WHILE,0:SWITCH,0:DO,0:CALL,0:ELSE,0:FOR,0:IF,0	11
0x40005e3	          0x4889f8	                            mov rax, rdi	       786	libbfd.c	FUNCTION_52
0x40005e6	        0x48c1e818	                           shr rax, 0x18	       786	libbfd.c	FUNCTION_52
0x40005ea	            0x8806	                      mov byte [rsi], al	       786	libbfd.c	FUNCTION_52
0x40005ec	          0x4889f8	                            mov rax, rdi	       787	libbfd.c	FUNCTION_52
0x40005ef	        0x48c1e810	                           shr rax, 0x10	       787	libbfd.c	FUNCTION_52
0x40005f3	          0x884601	                  mov byte [rsi + 1], al	       787	libbfd.c	FUNCTION_52
0x40005f6	          0x4889f8	                            mov rax, rdi	       788	libbfd.c	FUNCTION_52
0x40005f9	        0x48c1e808	                              shr rax, 8	       788	libbfd.c	FUNCTION_52
0x40005fd	          0x884602	                  mov byte [rsi + 2], al	       788	libbfd.c	FUNCTION_52
0x4000600	        0x40887e03	                 mov byte [rsi + 3], dil	       789	libbfd.c	FUNCTION_52
0x4000604	              0xc3	                                     ret	       789	libbfd.c	FUNCTION_52
bfd_putl16	functions,0:WHILE,0:SWITCH,0:DO,0:CALL,0:ELSE,0:FOR,0:IF,0	4
0x40003a3	          0x40883e	                     mov byte [rsi], dil	       612	libbfd.c	FUNCTION_41
0x40003a6	        0x48c1ef08	                              shr rdi, 8	       613	libbfd.c	FUNCTION_41
0x40003aa	        0x40887e01	                 mov byte [rsi + 1], dil	       613	libbfd.c	FUNCTION_41
0x40003ae	              0xc3	                                     ret	       613	libbfd.c	FUNCTION_41
_bfd_warn_deprecated	functions,0:WHILE,0:SWITCH,0:DO,0:CALL,4:ELSE,1:FOR,0:IF,2	54
0x4000983	          0x4889c8	                            mov rax, rcx	      1055	libbfd.c	FUNCTION_63	IF_1
0x4000986	    0x480b05000000	              or rax, qword [0x0400098d]	      1055	libbfd.c	FUNCTION_63	IF_1
0x400098d	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      1055	libbfd.c	FUNCTION_63	IF_1
0x4000991	     0xf84bc000000	                            je 0x4000a53	      1055	libbfd.c	FUNCTION_63	IF_1
0x4000997	            0x4155	                                push r13	      1051	libbfd.c	FUNCTION_63
0x4000999	            0x4154	                                push r12	      1051	libbfd.c	FUNCTION_63
0x400099b	              0x55	                                push rbp	      1051	libbfd.c	FUNCTION_63
0x400099c	              0x53	                                push rbx	      1051	libbfd.c	FUNCTION_63
0x400099d	        0x4883ec08	                              sub rsp, 8	      1051	libbfd.c	FUNCTION_63
0x40009a1	          0x4989cc	                            mov r12, rcx	      1051	libbfd.c	FUNCTION_63
0x40009a4	          0x4189d5	                           mov r13d, edx	      1051	libbfd.c	FUNCTION_63
0x40009a7	          0x4889f5	                            mov rbp, rsi	      1051	libbfd.c	FUNCTION_63
0x40009aa	          0x4889fb	                            mov rbx, rdi	      1051	libbfd.c	FUNCTION_63
0x40009ad	    0x488b3d000000	            mov rdi, qword [0x040009b4] 	      1057	libbfd.c	FUNCTION_63	IF_1	CALL_1
0x40009b4	      0xe800000000	                          call 0x40009b9	      1057	libbfd.c	FUNCTION_63	IF_1	CALL_1
0x40009b9	          0x4d85e4	                           test r12, r12	      1060	libbfd.c	FUNCTION_63	IF_1	IF_2
0x40009bc	            0x7442	                            je 0x4000a00	      1060	libbfd.c	FUNCTION_63	IF_1	IF_2
0x40009be	      0xba05000000	                              mov edx, 5	      1062	libbfd.c	FUNCTION_63	IF_1	IF_2	CALL_2
0x40009c3	      0xbe00000000	                              mov esi, 0	      1062	libbfd.c	FUNCTION_63	IF_1	IF_2	CALL_2
0x40009c8	      0xbf00000000	                              mov edi, 0	      1062	libbfd.c	FUNCTION_63	IF_1	IF_2	CALL_2
0x40009cd	      0xe800000000	                          call 0x40009d2	      1062	libbfd.c	FUNCTION_63	IF_1	IF_2	CALL_2
0x40009d2	        0x4883ec08	                              sub rsp, 8	        97	stdio2.h	CALL_9
0x40009d6	            0x4154	                                push r12	        97	stdio2.h	CALL_9
0x40009d8	          0x4589e9	                           mov r9d, r13d	        97	stdio2.h	CALL_9
0x40009db	          0x4989e8	                             mov r8, rbp	        97	stdio2.h	CALL_9
0x40009de	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_9
0x40009e1	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_9
0x40009e4	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x40009e9	    0x488b3d000000	            mov rdi, qword [0x040009f0] 	        97	stdio2.h	CALL_9
0x40009f0	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_9
0x40009f5	      0xe800000000	                          call 0x40009fa	        97	stdio2.h	CALL_9
0x40009fa	        0x4883c410	                           add rsp, 0x10	        97	stdio2.h	CALL_9
0x40009fe	            0xeb30	                           jmp 0x4000a30	        97	stdio2.h	CALL_9
0x4000a00	      0xba05000000	                              mov edx, 5	      1065	libbfd.c	FUNCTION_63	IF_1	CALL_3
0x4000a05	      0xbe00000000	                              mov esi, 0	      1065	libbfd.c	FUNCTION_63	IF_1	CALL_3
0x4000a0a	      0xbf00000000	                              mov edi, 0	      1065	libbfd.c	FUNCTION_63	IF_1	CALL_3
0x4000a0f	      0xe800000000	                          call 0x4000a14	      1065	libbfd.c	FUNCTION_63	IF_1	CALL_3
0x4000a14	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_9
0x4000a17	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_9
0x4000a1a	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x4000a1f	    0x488b3d000000	            mov rdi, qword [0x04000a26] 	        97	stdio2.h	CALL_9
0x4000a26	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_9
0x4000a2b	      0xe800000000	                          call 0x4000a30	        97	stdio2.h	CALL_9
0x4000a30	    0x488b3d000000	            mov rdi, qword [0x04000a37] 	      1066	libbfd.c	FUNCTION_63	IF_1	CALL_4
0x4000a37	      0xe800000000	                          call 0x4000a3c	      1066	libbfd.c	FUNCTION_63	IF_1	CALL_4
0x4000a3c	          0x4c89e1	                            mov rcx, r12	      1067	libbfd.c	FUNCTION_63	IF_1
0x4000a3f	          0x48f7d1	                                 not rcx	      1067	libbfd.c	FUNCTION_63	IF_1
0x4000a42	    0x48090d000000	              or qword [0x04000a49], rcx	      1067	libbfd.c	FUNCTION_63	IF_1
0x4000a49	        0x4883c408	                              add rsp, 8	      1069	libbfd.c	FUNCTION_63
0x4000a4d	              0x5b	                                 pop rbx	      1069	libbfd.c	FUNCTION_63
0x4000a4e	              0x5d	                                 pop rbp	      1069	libbfd.c	FUNCTION_63
0x4000a4f	            0x415c	                                 pop r12	      1069	libbfd.c	FUNCTION_63
0x4000a51	            0x415d	                                 pop r13	      1069	libbfd.c	FUNCTION_63
0x4000a53	            0xf3c3	                                     ret	      1069	libbfd.c	FUNCTION_63
_bfd_bool_bfd_asymbol_bfd_asymbol_true	functions,0:WHILE,0:SWITCH,0:DO,0:CALL,0:ELSE,0:FOR,0:IF,0	2
0x400009a	      0xb801000000	                              mov eax, 1	       119	libbfd.c	FUNCTION_10
0x400009f	              0xc3	                                     ret	       119	libbfd.c	FUNCTION_10
bfd_getl32	functions,0:WHILE,0:SWITCH,0:DO,0:CALL,0:ELSE,0:FOR,0:IF,0	12
0x4000408	           0xfb60f	                   movzx ecx, byte [rdi]	       656	libbfd.c	FUNCTION_45
0x400040b	         0xfb65701	               movzx edx, byte [rdi + 1]	       658	libbfd.c	FUNCTION_45
0x400040f	        0x48c1e208	                              shl rdx, 8	       658	libbfd.c	FUNCTION_45
0x4000413	         0xfb64702	               movzx eax, byte [rdi + 2]	       658	libbfd.c	FUNCTION_45
0x4000417	        0x48c1e010	                           shl rax, 0x10	       658	libbfd.c	FUNCTION_45
0x400041b	          0x4809d0	                             or rax, rdx	       658	libbfd.c	FUNCTION_45
0x400041e	          0x4809c8	                             or rax, rcx	       658	libbfd.c	FUNCTION_45
0x4000421	          0x4889c2	                            mov rdx, rax	       658	libbfd.c	FUNCTION_45
0x4000424	         0xfb64703	               movzx eax, byte [rdi + 3]	       660	libbfd.c	FUNCTION_45
0x4000428	        0x48c1e018	                           shl rax, 0x18	       660	libbfd.c	FUNCTION_45
0x400042c	          0x4809d0	                             or rax, rdx	       660	libbfd.c	FUNCTION_45
0x400042f	              0xc3	                                     ret	       661	libbfd.c	FUNCTION_45
_bfd_void_bfd	functions,0:WHILE,0:SWITCH,0:DO,0:CALL,0:ELSE,0:FOR,0:IF,0	1
0x40000ea	            0xf3c3	                                     ret	       168	libbfd.c	FUNCTION_17
_bfd_bool_bfd_true	functions,0:WHILE,0:SWITCH,0:DO,0:CALL,0:ELSE,0:FOR,0:IF,0	2
0x400007c	      0xb801000000	                              mov eax, 1	        80	libbfd.c	FUNCTION_5
0x4000081	              0xc3	                                     ret	        80	libbfd.c	FUNCTION_5
_bfd_bool_bfd_asymbol_false	functions,0:WHILE,0:SWITCH,0:DO,0:CALL,0:ELSE,0:FOR,0:IF,0	2
0x4000046	      0xb800000000	                              mov eax, 0	        54	libbfd.c	FUNCTION_2
0x400004b	              0xc3	                                     ret	        54	libbfd.c	FUNCTION_2
_bfd_generic_set_section_contents	functions,0:WHILE,0:SWITCH,0:DO,0:CALL,2:ELSE,0:FOR,0:IF,2	28
0x40008f3	      0xb801000000	                              mov eax, 1	      1000	libbfd.c	FUNCTION_60	IF_1
0x40008f8	          0x4d85c0	                             test r8, r8	       999	libbfd.c	FUNCTION_60	IF_1
0x40008fb	            0x7447	                            je 0x4000944	       999	libbfd.c	FUNCTION_60	IF_1
0x40008fd	            0x4154	                                push r12	       998	libbfd.c	FUNCTION_60
0x40008ff	              0x55	                                push rbp	       998	libbfd.c	FUNCTION_60
0x4000900	              0x53	                                push rbx	       998	libbfd.c	FUNCTION_60
0x4000901	          0x4c89c3	                             mov rbx, r8	       998	libbfd.c	FUNCTION_60
0x4000904	          0x4989d4	                            mov r12, rdx	       998	libbfd.c	FUNCTION_60
0x4000907	          0x4889fd	                            mov rbp, rdi	       998	libbfd.c	FUNCTION_60
0x400090a	    0x48038e900000	             add rcx, qword [rsi + 0x90]	      1002	libbfd.c	FUNCTION_60	IF_2	CALL_1
0x4000911	          0x4889ce	                            mov rsi, rcx	      1002	libbfd.c	FUNCTION_60	IF_2	CALL_1
0x4000914	      0xba00000000	                              mov edx, 0	      1002	libbfd.c	FUNCTION_60	IF_2	CALL_1
0x4000919	      0xe800000000	                          call 0x400091e	      1002	libbfd.c	FUNCTION_60	IF_2	CALL_1
0x400091e	            0x89c2	                            mov edx, eax	      1002	libbfd.c	FUNCTION_60	IF_2	CALL_1
0x4000920	      0xb800000000	                              mov eax, 0	      1004	libbfd.c	FUNCTION_60	IF_2
0x4000925	            0x85d2	                           test edx, edx	      1002	libbfd.c	FUNCTION_60	IF_2	CALL_1
0x4000927	            0x7517	                           jne 0x4000940	      1002	libbfd.c	FUNCTION_60	IF_2	CALL_1
0x4000929	          0x4889ea	                            mov rdx, rbp	      1003	libbfd.c	FUNCTION_60	IF_2	CALL_2
0x400092c	          0x4889de	                            mov rsi, rbx	      1003	libbfd.c	FUNCTION_60	IF_2	CALL_2
0x400092f	          0x4c89e7	                            mov rdi, r12	      1003	libbfd.c	FUNCTION_60	IF_2	CALL_2
0x4000932	      0xe800000000	                          call 0x4000937	      1003	libbfd.c	FUNCTION_60	IF_2	CALL_2
0x4000937	          0x4839c3	                            cmp rbx, rax	      1000	libbfd.c	FUNCTION_60	IF_1
0x400093a	           0xf94c0	                                 sete al	      1000	libbfd.c	FUNCTION_60	IF_1
0x400093d	           0xfb6c0	                           movzx eax, al	      1000	libbfd.c	FUNCTION_60	IF_1
0x4000940	              0x5b	                                 pop rbx	      1007	libbfd.c	FUNCTION_60
0x4000941	              0x5d	                                 pop rbp	      1007	libbfd.c	FUNCTION_60
0x4000942	            0x415c	                                 pop r12	      1007	libbfd.c	FUNCTION_60
0x4000944	            0xf3c3	                                     ret	      1007	libbfd.c	FUNCTION_60
_bfd_safe_read_leb128	functions,0:WHILE,1:SWITCH,0:DO,0:CALL,1:ELSE,0:FOR,0:IF,3	45
0x4000a89	          0x4189cb	                           mov r11d, ecx	      1110	libbfd.c	FUNCTION_65
0x4000a8c	          0x4c39c6	                             cmp rsi, r8	      1116	libbfd.c	FUNCTION_65	WHILE_1
0x4000a8f	            0x7347	                           jae 0x4000ad8	      1116	libbfd.c	FUNCTION_65	WHILE_1
0x4000a91	        0x440fb60e	                   movzx r9d, byte [rsi]	      1118	libbfd.c	FUNCTION_65	WHILE_1	CALL_1
0x4000a95	        0x4883c601	                              add rsi, 1	      1119	libbfd.c	FUNCTION_65	WHILE_1
0x4000a99	          0x4c89c8	                             mov rax, r9	      1122	libbfd.c	FUNCTION_65	WHILE_1
0x4000a9c	          0x83e07f	                           and eax, 0x7f	      1122	libbfd.c	FUNCTION_65	WHILE_1
0x4000a9f	          0x4584c9	                           test r9b, r9b	      1125	libbfd.c	FUNCTION_65	WHILE_1	IF_1
0x4000aa2	            0x794c	                           jns 0x4000af0	      1125	libbfd.c	FUNCTION_65	WHILE_1	IF_1
0x4000aa4	      0xb907000000	                              mov ecx, 7	      1125	libbfd.c	FUNCTION_65	WHILE_1	IF_1
0x4000aa9	    0x41ba01000000	                             mov r10d, 1	      1125	libbfd.c	FUNCTION_65	WHILE_1	IF_1
0x4000aaf	            0xeb20	                           jmp 0x4000ad1	      1125	libbfd.c	FUNCTION_65	WHILE_1	IF_1
0x4000ab1	        0x440fb60e	                   movzx r9d, byte [rsi]	      1118	libbfd.c	FUNCTION_65	WHILE_1	CALL_1
0x4000ab5	        0x4883c601	                              add rsi, 1	      1119	libbfd.c	FUNCTION_65	WHILE_1
0x4000ab9	        0x4183c201	                             add r10d, 1	      1120	libbfd.c	FUNCTION_65	WHILE_1
0x4000abd	          0x4c89cf	                             mov rdi, r9	      1122	libbfd.c	FUNCTION_65	WHILE_1
0x4000ac0	          0x83e77f	                           and edi, 0x7f	      1122	libbfd.c	FUNCTION_65	WHILE_1
0x4000ac3	          0x48d3e7	                             shl rdi, cl	      1122	libbfd.c	FUNCTION_65	WHILE_1
0x4000ac6	          0x4809f8	                             or rax, rdi	      1122	libbfd.c	FUNCTION_65	WHILE_1
0x4000ac9	          0x83c107	                              add ecx, 7	      1124	libbfd.c	FUNCTION_65	WHILE_1
0x4000acc	          0x4584c9	                           test r9b, r9b	      1125	libbfd.c	FUNCTION_65	WHILE_1	IF_1
0x4000acf	            0x792a	                           jns 0x4000afb	      1125	libbfd.c	FUNCTION_65	WHILE_1	IF_1
0x4000ad1	          0x4939f0	                             cmp r8, rsi	      1116	libbfd.c	FUNCTION_65	WHILE_1
0x4000ad4	            0x75db	                           jne 0x4000ab1	      1116	libbfd.c	FUNCTION_65	WHILE_1
0x4000ad6	            0xeb23	                           jmp 0x4000afb	      1116	libbfd.c	FUNCTION_65	WHILE_1
0x4000ad8	    0x41b900000000	                              mov r9d, 0	      1114	libbfd.c	FUNCTION_65
0x4000ade	      0xb900000000	                              mov ecx, 0	      1113	libbfd.c	FUNCTION_65
0x4000ae3	    0x41ba00000000	                             mov r10d, 0	      1112	libbfd.c	FUNCTION_65
0x4000ae9	      0xb800000000	                              mov eax, 0	      1111	libbfd.c	FUNCTION_65
0x4000aee	            0xeb0b	                           jmp 0x4000afb	      1111	libbfd.c	FUNCTION_65
0x4000af0	      0xb907000000	                              mov ecx, 7	      1124	libbfd.c	FUNCTION_65	WHILE_1
0x4000af5	    0x41ba01000000	                             mov r10d, 1	      1120	libbfd.c	FUNCTION_65	WHILE_1
0x4000afb	          0x4885d2	                           test rdx, rdx	      1129	libbfd.c	FUNCTION_65	IF_2
0x4000afe	            0x7403	                            je 0x4000b03	      1129	libbfd.c	FUNCTION_65	IF_2
0x4000b00	          0x448912	                   mov dword [rdx], r10d	      1130	libbfd.c	FUNCTION_65	IF_2
0x4000b03	          0x4585db	                         test r11d, r11d	      1132	libbfd.c	FUNCTION_65	IF_3
0x4000b06	            0x7418	                            je 0x4000b20	      1132	libbfd.c	FUNCTION_65	IF_3
0x4000b08	          0x83f93f	                           cmp ecx, 0x3f	      1132	libbfd.c	FUNCTION_65	IF_3
0x4000b0b	            0x7713	                            ja 0x4000b20	      1132	libbfd.c	FUNCTION_65	IF_3
0x4000b0d	        0x41f6c140	                          test r9b, 0x40	      1132	libbfd.c	FUNCTION_65	IF_3
0x4000b11	            0x740d	                            je 0x4000b20	      1132	libbfd.c	FUNCTION_65	IF_3
0x4000b13	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	      1133	libbfd.c	FUNCTION_65	IF_3
0x4000b1a	          0x48d3e2	                             shl rdx, cl	      1133	libbfd.c	FUNCTION_65	IF_3
0x4000b1d	          0x4809d0	                             or rax, rdx	      1133	libbfd.c	FUNCTION_65	IF_3
0x4000b20	            0xf3c3	                                     ret	      1136	libbfd.c	FUNCTION_65
_bfd_long_bfd_n1_error	functions,0:WHILE,0:SWITCH,0:DO,0:CALL,1:ELSE,0:FOR,0:IF,0	6
0x40000d0	        0x4883ec08	                              sub rsp, 8	       161	libbfd.c	FUNCTION_16
0x40000d4	      0xbf05000000	                              mov edi, 5	       162	libbfd.c	FUNCTION_16	CALL_1
0x40000d9	      0xe800000000	                          call 0x40000de	       162	libbfd.c	FUNCTION_16	CALL_1
0x40000de	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       164	libbfd.c	FUNCTION_16
0x40000e5	        0x4883c408	                              add rsp, 8	       164	libbfd.c	FUNCTION_16
0x40000e9	              0xc3	                                     ret	       164	libbfd.c	FUNCTION_16
bfd_zmalloc	functions,0:WHILE,0:SWITCH,0:DO,0:CALL,2:ELSE,0:FOR,0:IF,1	19
0x40002e8	              0x55	                                push rbp	       355	libbfd.c	FUNCTION_33
0x40002e9	              0x53	                                push rbx	       355	libbfd.c	FUNCTION_33
0x40002ea	        0x4883ec08	                              sub rsp, 8	       355	libbfd.c	FUNCTION_33
0x40002ee	          0x4889fd	                            mov rbp, rdi	       355	libbfd.c	FUNCTION_33
0x40002f1	      0xe800000000	                          call 0x40002f6	       356	libbfd.c	FUNCTION_33	CALL_1
0x40002f6	          0x4889c3	                            mov rbx, rax	       356	libbfd.c	FUNCTION_33	CALL_1
0x40002f9	          0x4885c0	                           test rax, rax	       358	libbfd.c	FUNCTION_33	IF_1
0x40002fc	            0x7415	                            je 0x4000313	       358	libbfd.c	FUNCTION_33	IF_1
0x40002fe	          0x4885ed	                           test rbp, rbp	       358	libbfd.c	FUNCTION_33	IF_1
0x4000301	            0x7410	                            je 0x4000313	       358	libbfd.c	FUNCTION_33	IF_1
0x4000303	          0x4889ea	                            mov rdx, rbp	        90	string3.h	FUNCTION_88	CALL_6
0x4000306	      0xbe00000000	                              mov esi, 0	        90	string3.h	FUNCTION_88	CALL_6
0x400030b	          0x4889c7	                            mov rdi, rax	        90	string3.h	FUNCTION_88	CALL_6
0x400030e	      0xe800000000	                          call 0x4000313	        90	string3.h	FUNCTION_88	CALL_6
0x4000313	          0x4889d8	                            mov rax, rbx	       362	libbfd.c	FUNCTION_33
0x4000316	        0x4883c408	                              add rsp, 8	       362	libbfd.c	FUNCTION_33
0x400031a	              0x5b	                                 pop rbx	       362	libbfd.c	FUNCTION_33
0x400031b	              0x5d	                                 pop rbp	       362	libbfd.c	FUNCTION_33
0x400031c	              0xc3	                                     ret	       362	libbfd.c	FUNCTION_33
_bfd_read_unsigned_leb128	functions,0:WHILE,0:SWITCH,0:DO,1:CALL,1:ELSE,0:FOR,0:IF,0	15
0x4000a55	      0xb900000000	                              mov ecx, 0	      1084	libbfd.c	FUNCTION_64
0x4000a5a	    0x41b900000000	                              mov r9d, 0	      1085	libbfd.c	FUNCTION_64
0x4000a60	      0xb800000000	                              mov eax, 0	      1083	libbfd.c	FUNCTION_64
0x4000a65	        0x440fb606	                   movzx r8d, byte [rsi]	      1088	libbfd.c	FUNCTION_64	DO_1	CALL_1
0x4000a69	        0x4883c601	                              add rsi, 1	      1089	libbfd.c	FUNCTION_64	DO_1
0x4000a6d	        0x4183c101	                              add r9d, 1	      1090	libbfd.c	FUNCTION_64	DO_1
0x4000a71	          0x4c89c7	                             mov rdi, r8	      1091	libbfd.c	FUNCTION_64	DO_1
0x4000a74	          0x83e77f	                           and edi, 0x7f	      1091	libbfd.c	FUNCTION_64	DO_1
0x4000a77	          0x48d3e7	                             shl rdi, cl	      1091	libbfd.c	FUNCTION_64	DO_1
0x4000a7a	          0x4809f8	                             or rax, rdi	      1091	libbfd.c	FUNCTION_64	DO_1
0x4000a7d	          0x83c107	                              add ecx, 7	      1092	libbfd.c	FUNCTION_64	DO_1
0x4000a80	          0x4584c0	                           test r8b, r8b	      1094	libbfd.c	FUNCTION_64
0x4000a83	            0x78e0	                            js 0x4000a65	      1094	libbfd.c	FUNCTION_64
0x4000a85	          0x44890a	                    mov dword [rdx], r9d	      1095	libbfd.c	FUNCTION_64
0x4000a88	              0xc3	                                     ret	      1097	libbfd.c	FUNCTION_64
bfd_realloc	functions,0:WHILE,0:SWITCH,0:DO,0:CALL,4:ELSE,0:FOR,0:IF,3	30
0x4000213	              0x55	                                push rbp	       298	libbfd.c	FUNCTION_30
0x4000214	              0x53	                                push rbx	       298	libbfd.c	FUNCTION_30
0x4000215	        0x4883ec08	                              sub rsp, 8	       298	libbfd.c	FUNCTION_30
0x4000219	          0x4889f5	                            mov rbp, rsi	       298	libbfd.c	FUNCTION_30
0x400021c	          0x4885ff	                           test rdi, rdi	       302	libbfd.c	FUNCTION_30	IF_1
0x400021f	            0x750a	                           jne 0x400022b	       302	libbfd.c	FUNCTION_30	IF_1
0x4000221	          0x4889f7	                            mov rdi, rsi	       303	libbfd.c	FUNCTION_30	CALL_1
0x4000224	      0xe800000000	                          call 0x4000229	       303	libbfd.c	FUNCTION_30	CALL_1
0x4000229	            0xeb3a	                           jmp 0x4000265	       303	libbfd.c	FUNCTION_30	CALL_1
0x400022b	          0x4885f6	                           test rsi, rsi	       305	libbfd.c	FUNCTION_30	IF_2
0x400022e	            0x7911	                           jns 0x4000241	       305	libbfd.c	FUNCTION_30	IF_2
0x4000230	      0xbf06000000	                              mov edi, 6	       309	libbfd.c	FUNCTION_30	IF_2	CALL_2
0x4000235	      0xe800000000	                          call 0x400023a	       309	libbfd.c	FUNCTION_30	IF_2	CALL_2
0x400023a	      0xb800000000	                              mov eax, 0	       310	libbfd.c	FUNCTION_30	IF_2
0x400023f	            0xeb24	                           jmp 0x4000265	       310	libbfd.c	FUNCTION_30	IF_2
0x4000241	      0xe800000000	                          call 0x4000246	       313	libbfd.c	FUNCTION_30	CALL_3
0x4000246	          0x4889c3	                            mov rbx, rax	       313	libbfd.c	FUNCTION_30	CALL_3
0x4000249	          0x4885c0	                           test rax, rax	       315	libbfd.c	FUNCTION_30	IF_3
0x400024c	            0x7514	                           jne 0x4000262	       315	libbfd.c	FUNCTION_30	IF_3
0x400024e	          0x4885ed	                           test rbp, rbp	       315	libbfd.c	FUNCTION_30	IF_3
0x4000251	            0x740f	                            je 0x4000262	       315	libbfd.c	FUNCTION_30	IF_3
0x4000253	      0xbf06000000	                              mov edi, 6	       316	libbfd.c	FUNCTION_30	CALL_4
0x4000258	      0xe800000000	                          call 0x400025d	       316	libbfd.c	FUNCTION_30	CALL_4
0x400025d	          0x4889d8	                            mov rax, rbx	       318	libbfd.c	FUNCTION_30
0x4000260	            0xeb03	                           jmp 0x4000265	       318	libbfd.c	FUNCTION_30
0x4000262	          0x4889d8	                            mov rax, rbx	       318	libbfd.c	FUNCTION_30
0x4000265	        0x4883c408	                              add rsp, 8	       319	libbfd.c	FUNCTION_30
0x4000269	              0x5b	                                 pop rbx	       319	libbfd.c	FUNCTION_30
0x400026a	              0x5d	                                 pop rbp	       319	libbfd.c	FUNCTION_30
0x400026b	              0xc3	                                     ret	       319	libbfd.c	FUNCTION_30
bfd_putl24	functions,0:WHILE,0:SWITCH,0:DO,0:CALL,0:ELSE,0:FOR,0:IF,0	7
0x40003c7	          0x40883e	                     mov byte [rsi], dil	       631	libbfd.c	FUNCTION_43
0x40003ca	          0x4889f8	                            mov rax, rdi	       632	libbfd.c	FUNCTION_43
0x40003cd	        0x48c1e808	                              shr rax, 8	       632	libbfd.c	FUNCTION_43
0x40003d1	          0x884601	                  mov byte [rsi + 1], al	       632	libbfd.c	FUNCTION_43
0x40003d4	        0x48c1ef10	                           shr rdi, 0x10	       633	libbfd.c	FUNCTION_43
0x40003d8	        0x40887e02	                 mov byte [rsi + 2], dil	       633	libbfd.c	FUNCTION_43
0x40003dc	              0xc3	                                     ret	       633	libbfd.c	FUNCTION_43
bfd_getb_signed_32	functions,0:WHILE,0:SWITCH,0:DO,0:CALL,0:ELSE,0:FOR,0:IF,0	16
0x4000430	           0xfb607	                   movzx eax, byte [rdi]	       669	libbfd.c	FUNCTION_46
0x4000433	        0x48c1e018	                           shl rax, 0x18	       669	libbfd.c	FUNCTION_46
0x4000437	          0x4889c1	                            mov rcx, rax	       669	libbfd.c	FUNCTION_46
0x400043a	         0xfb64701	               movzx eax, byte [rdi + 1]	       669	libbfd.c	FUNCTION_46
0x400043e	        0x48c1e010	                           shl rax, 0x10	       669	libbfd.c	FUNCTION_46
0x4000442	          0x4809c8	                             or rax, rcx	       669	libbfd.c	FUNCTION_46
0x4000445	         0xfb64f03	               movzx ecx, byte [rdi + 3]	       669	libbfd.c	FUNCTION_46
0x4000449	          0x4809c8	                             or rax, rcx	       669	libbfd.c	FUNCTION_46
0x400044c	          0x4889c2	                            mov rdx, rax	       669	libbfd.c	FUNCTION_46
0x400044f	         0xfb64702	               movzx eax, byte [rdi + 2]	       673	libbfd.c	FUNCTION_46
0x4000453	        0x48c1e008	                              shl rax, 8	       673	libbfd.c	FUNCTION_46
0x4000457	          0x4809d0	                             or rax, rdx	       673	libbfd.c	FUNCTION_46
0x400045a	      0xba00000080	                     mov edx, 0x80000000	       673	libbfd.c	FUNCTION_46
0x400045f	          0x4831d0	                            xor rax, rdx	       673	libbfd.c	FUNCTION_46
0x4000462	    0x480500000080	             add rax, 0xffffffff80000000	       673	libbfd.c	FUNCTION_46
0x4000468	              0xc3	                                     ret	       674	libbfd.c	FUNCTION_46
_bfd_uint_bfd_0	functions,0:WHILE,0:SWITCH,0:DO,0:CALL,0:ELSE,0:FOR,0:IF,0	2
0x40000c4	      0xb800000000	                              mov eax, 0	       148	libbfd.c	FUNCTION_14
0x40000c9	              0xc3	                                     ret	       148	libbfd.c	FUNCTION_14
bfd_putb64	functions,0:WHILE,0:SWITCH,0:DO,0:CALL,1:ELSE,0:FOR,0:IF,0	23
0x400067c	          0x4889f8	                            mov rax, rdi	       807	libbfd.c	FUNCTION_54
0x400067f	        0x48c1e838	                           shr rax, 0x38	       807	libbfd.c	FUNCTION_54
0x4000683	            0x8806	                      mov byte [rsi], al	       807	libbfd.c	FUNCTION_54
0x4000685	          0x4889f8	                            mov rax, rdi	       808	libbfd.c	FUNCTION_54
0x4000688	        0x48c1e830	                           shr rax, 0x30	       808	libbfd.c	FUNCTION_54
0x400068c	          0x884601	                  mov byte [rsi + 1], al	       808	libbfd.c	FUNCTION_54
0x400068f	          0x4889f8	                            mov rax, rdi	       809	libbfd.c	FUNCTION_54
0x4000692	        0x48c1e828	                           shr rax, 0x28	       809	libbfd.c	FUNCTION_54
0x4000696	          0x884602	                  mov byte [rsi + 2], al	       809	libbfd.c	FUNCTION_54
0x4000699	          0x4889f8	                            mov rax, rdi	       810	libbfd.c	FUNCTION_54
0x400069c	        0x48c1e820	                           shr rax, 0x20	       810	libbfd.c	FUNCTION_54
0x40006a0	          0x884603	                  mov byte [rsi + 3], al	       810	libbfd.c	FUNCTION_54
0x40006a3	          0x4889f8	                            mov rax, rdi	       811	libbfd.c	FUNCTION_54
0x40006a6	        0x48c1e818	                           shr rax, 0x18	       811	libbfd.c	FUNCTION_54
0x40006aa	          0x884604	                  mov byte [rsi + 4], al	       811	libbfd.c	FUNCTION_54
0x40006ad	          0x4889f8	                            mov rax, rdi	       812	libbfd.c	FUNCTION_54
0x40006b0	        0x48c1e810	                           shr rax, 0x10	       812	libbfd.c	FUNCTION_54
0x40006b4	          0x884605	                  mov byte [rsi + 5], al	       812	libbfd.c	FUNCTION_54
0x40006b7	          0x4889f8	                            mov rax, rdi	       813	libbfd.c	FUNCTION_54
0x40006ba	        0x48c1e808	                              shr rax, 8	       813	libbfd.c	FUNCTION_54
0x40006be	          0x884606	                  mov byte [rsi + 6], al	       813	libbfd.c	FUNCTION_54
0x40006c1	        0x40887e07	                 mov byte [rsi + 7], dil	       814	libbfd.c	FUNCTION_54
0x40006c5	              0xc3	                                     ret	       814	libbfd.c	FUNCTION_54
_bfd_void_bfd_link	functions,0:WHILE,0:SWITCH,0:DO,0:CALL,0:ELSE,0:FOR,0:IF,0	1
0x40000ec	            0xf3c3	                                     ret	       174	libbfd.c	FUNCTION_18
bfd_realloc2	functions,0:WHILE,0:SWITCH,0:DO,0:CALL,2:ELSE,0:FOR,0:IF,1	22
0x400026c	        0x4883ec08	                              sub rsp, 8	       325	libbfd.c	FUNCTION_31
0x4000270	          0x4889d1	                            mov rcx, rdx	       325	libbfd.c	FUNCTION_31
0x4000273	          0x4889f2	                            mov rdx, rsi	       327	libbfd.c	FUNCTION_31	IF_1
0x4000276	          0x4809ca	                             or rdx, rcx	       327	libbfd.c	FUNCTION_31	IF_1
0x4000279	      0xb8ffffffff	                     mov eax, 0xffffffff	       327	libbfd.c	FUNCTION_31	IF_1
0x400027e	          0x4839c2	                            cmp rdx, rax	       327	libbfd.c	FUNCTION_31	IF_1
0x4000281	            0x762a	                           jbe 0x40002ad	       327	libbfd.c	FUNCTION_31	IF_1
0x4000283	          0x4885c9	                           test rcx, rcx	       327	libbfd.c	FUNCTION_31	IF_1
0x4000286	            0x7425	                            je 0x40002ad	       327	libbfd.c	FUNCTION_31	IF_1
0x4000288	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       328	libbfd.c	FUNCTION_31	IF_1
0x400028f	      0xba00000000	                              mov edx, 0	       328	libbfd.c	FUNCTION_31	IF_1
0x4000294	          0x48f7f1	                                 div rcx	       328	libbfd.c	FUNCTION_31	IF_1
0x4000297	          0x4839c6	                            cmp rsi, rax	       328	libbfd.c	FUNCTION_31	IF_1
0x400029a	            0x7611	                           jbe 0x40002ad	       328	libbfd.c	FUNCTION_31	IF_1
0x400029c	      0xbf06000000	                              mov edi, 6	       330	libbfd.c	FUNCTION_31	IF_1	CALL_1
0x40002a1	      0xe800000000	                          call 0x40002a6	       330	libbfd.c	FUNCTION_31	IF_1	CALL_1
0x40002a6	      0xb800000000	                              mov eax, 0	       331	libbfd.c	FUNCTION_31	IF_1
0x40002ab	            0xeb09	                           jmp 0x40002b6	       331	libbfd.c	FUNCTION_31	IF_1
0x40002ad	        0x480faff1	                           imul rsi, rcx	       334	libbfd.c	FUNCTION_31	CALL_2
0x40002b1	      0xe800000000	                          call 0x40002b6	       334	libbfd.c	FUNCTION_31	CALL_2
0x40002b6	        0x4883c408	                              add rsp, 8	       335	libbfd.c	FUNCTION_31
0x40002ba	              0xc3	                                     ret	       335	libbfd.c	FUNCTION_31
_bfd_bool_bfd_link_false_error	functions,0:WHILE,0:SWITCH,0:DO,0:CALL,1:ELSE,0:FOR,0:IF,0	6
0x4000064	        0x4883ec08	                              sub rsp, 8	        69	libbfd.c	FUNCTION_4
0x4000068	      0xbf05000000	                              mov edi, 5	        62	libbfd.c	FUNCTION_3	CALL_1
0x400006d	      0xe800000000	                          call 0x4000072	        62	libbfd.c	FUNCTION_3	CALL_1
0x4000072	      0xb800000000	                              mov eax, 0	        71	libbfd.c	FUNCTION_4
0x4000077	        0x4883c408	                              add rsp, 8	        71	libbfd.c	FUNCTION_4
0x400007b	              0xc3	                                     ret	        71	libbfd.c	FUNCTION_4
_bfd_bool_bfd_false	functions,0:WHILE,0:SWITCH,0:DO,0:CALL,0:ELSE,0:FOR,0:IF,0	2
0x4000040	      0xb800000000	                              mov eax, 0	        47	libbfd.c	FUNCTION_1
0x4000045	              0xc3	                                     ret	        47	libbfd.c	FUNCTION_1
bfd_getb32	functions,0:WHILE,0:SWITCH,0:DO,0:CALL,0:ELSE,0:FOR,0:IF,0	13
0x40003dd	           0xfb607	                   movzx eax, byte [rdi]	       643	libbfd.c	FUNCTION_44
0x40003e0	        0x48c1e018	                           shl rax, 0x18	       643	libbfd.c	FUNCTION_44
0x40003e4	          0x4889c1	                            mov rcx, rax	       643	libbfd.c	FUNCTION_44
0x40003e7	         0xfb64701	               movzx eax, byte [rdi + 1]	       643	libbfd.c	FUNCTION_44
0x40003eb	        0x48c1e010	                           shl rax, 0x10	       643	libbfd.c	FUNCTION_44
0x40003ef	          0x4809c8	                             or rax, rcx	       643	libbfd.c	FUNCTION_44
0x40003f2	         0xfb64f03	               movzx ecx, byte [rdi + 3]	       643	libbfd.c	FUNCTION_44
0x40003f6	          0x4809c8	                             or rax, rcx	       643	libbfd.c	FUNCTION_44
0x40003f9	          0x4889c2	                            mov rdx, rax	       643	libbfd.c	FUNCTION_44
0x40003fc	         0xfb64702	               movzx eax, byte [rdi + 2]	       647	libbfd.c	FUNCTION_44
0x4000400	        0x48c1e008	                              shl rax, 8	       647	libbfd.c	FUNCTION_44
0x4000404	          0x4809d0	                             or rax, rdx	       647	libbfd.c	FUNCTION_44
0x4000407	              0xc3	                                     ret	       648	libbfd.c	FUNCTION_44
_bfd_ptr_bfd_null_error	functions,0:WHILE,0:SWITCH,0:DO,0:CALL,1:ELSE,0:FOR,0:IF,0	6
0x40000a6	        0x4883ec08	                              sub rsp, 8	       133	libbfd.c	FUNCTION_12
0x40000aa	      0xbf05000000	                              mov edi, 5	       134	libbfd.c	FUNCTION_12	CALL_1
0x40000af	      0xe800000000	                          call 0x40000b4	       134	libbfd.c	FUNCTION_12	CALL_1
0x40000b4	      0xb800000000	                              mov eax, 0	       136	libbfd.c	FUNCTION_12
0x40000b9	        0x4883c408	                              add rsp, 8	       136	libbfd.c	FUNCTION_12
0x40000bd	              0xc3	                                     ret	       136	libbfd.c	FUNCTION_12
_bfd_norelocs_canonicalize_reloc	functions,0:WHILE,0:SWITCH,0:DO,0:CALL,0:ELSE,0:FOR,0:IF,0	3
0x40000f6	    0x48c702000000	                      mov qword [rdx], 0	       196	libbfd.c	FUNCTION_21
0x40000fd	      0xb800000000	                              mov eax, 0	       198	libbfd.c	FUNCTION_21
0x4000102	              0xc3	                                     ret	       198	libbfd.c	FUNCTION_21
_bfd_long_bfd_0	functions,0:WHILE,0:SWITCH,0:DO,0:CALL,0:ELSE,0:FOR,0:IF,0	2
0x40000ca	      0xb800000000	                              mov eax, 0	       154	libbfd.c	FUNCTION_15
0x40000cf	              0xc3	                                     ret	       154	libbfd.c	FUNCTION_15
_bfd_int_bfd_0	functions,0:WHILE,0:SWITCH,0:DO,0:CALL,0:ELSE,0:FOR,0:IF,0	2
0x40000be	      0xb800000000	                              mov eax, 0	       142	libbfd.c	FUNCTION_13
0x40000c3	              0xc3	                                     ret	       142	libbfd.c	FUNCTION_13
_bfd_dummy_target	functions,0:WHILE,0:SWITCH,0:DO,0:CALL,1:ELSE,0:FOR,0:IF,0	6
0x4000165	        0x4883ec08	                              sub rsp, 8	       250	libbfd.c	FUNCTION_27
0x4000169	      0xbf03000000	                              mov edi, 3	       251	libbfd.c	FUNCTION_27	CALL_1
0x400016e	      0xe800000000	                          call 0x4000173	       251	libbfd.c	FUNCTION_27	CALL_1
0x4000173	      0xb800000000	                              mov eax, 0	       253	libbfd.c	FUNCTION_27
0x4000178	        0x4883c408	                              add rsp, 8	       253	libbfd.c	FUNCTION_27
0x400017c	              0xc3	                                     ret	       253	libbfd.c	FUNCTION_27
bfd_putb24	functions,0:WHILE,0:SWITCH,0:DO,0:CALL,0:ELSE,0:FOR,0:IF,0	8
0x40003af	          0x4889f8	                            mov rax, rdi	       621	libbfd.c	FUNCTION_42
0x40003b2	        0x48c1e810	                           shr rax, 0x10	       621	libbfd.c	FUNCTION_42
0x40003b6	            0x8806	                      mov byte [rsi], al	       621	libbfd.c	FUNCTION_42
0x40003b8	          0x4889f8	                            mov rax, rdi	       622	libbfd.c	FUNCTION_42
0x40003bb	        0x48c1e808	                              shr rax, 8	       622	libbfd.c	FUNCTION_42
0x40003bf	          0x884601	                  mov byte [rsi + 1], al	       622	libbfd.c	FUNCTION_42
0x40003c2	        0x40887e02	                 mov byte [rsi + 2], dil	       623	libbfd.c	FUNCTION_42
0x40003c6	              0xc3	                                     ret	       623	libbfd.c	FUNCTION_42
_bfd_nocore_core_file_failing_command	functions,0:WHILE,0:SWITCH,0:DO,0:CALL,1:ELSE,0:FOR,0:IF,0	6
0x400011d	        0x4883ec08	                              sub rsp, 8	       223	libbfd.c	FUNCTION_24
0x4000121	      0xbf05000000	                              mov edi, 5	       224	libbfd.c	FUNCTION_24	CALL_1
0x4000126	      0xe800000000	                          call 0x400012b	       224	libbfd.c	FUNCTION_24	CALL_1
0x400012b	      0xb800000000	                              mov eax, 0	       226	libbfd.c	FUNCTION_24
0x4000130	        0x4883c408	                              add rsp, 8	       226	libbfd.c	FUNCTION_24
0x4000134	              0xc3	                                     ret	       226	libbfd.c	FUNCTION_24
bfd_getl16	functions,0:WHILE,0:SWITCH,0:DO,0:CALL,0:ELSE,0:FOR,0:IF,0	6
0x4000364	         0xfb64701	               movzx eax, byte [rdi + 1]	       583	libbfd.c	FUNCTION_37
0x4000368	          0xc1e008	                              shl eax, 8	       583	libbfd.c	FUNCTION_37
0x400036b	           0xfb617	                   movzx edx, byte [rdi]	       583	libbfd.c	FUNCTION_37
0x400036e	             0x9d0	                             or eax, edx	       583	libbfd.c	FUNCTION_37
0x4000370	            0x4898	                                    cdqe	       583	libbfd.c	FUNCTION_37
0x4000372	              0xc3	                                     ret	       584	libbfd.c	FUNCTION_37
_bfd_bool_bfd_ptr_true	functions,0:WHILE,0:SWITCH,0:DO,0:CALL,0:ELSE,0:FOR,0:IF,0	2
0x40000a0	      0xb801000000	                              mov eax, 1	       126	libbfd.c	FUNCTION_11
0x40000a5	              0xc3	                                     ret	       126	libbfd.c	FUNCTION_11
bfd_putl64	functions,0:WHILE,0:SWITCH,0:DO,0:CALL,1:ELSE,0:FOR,0:IF,0	23
0x40006c6	          0x4889f8	                            mov rax, rdi	       825	libbfd.c	FUNCTION_55
0x40006c9	        0x48c1e838	                           shr rax, 0x38	       825	libbfd.c	FUNCTION_55
0x40006cd	          0x884607	                  mov byte [rsi + 7], al	       825	libbfd.c	FUNCTION_55
0x40006d0	          0x4889f8	                            mov rax, rdi	       826	libbfd.c	FUNCTION_55
0x40006d3	        0x48c1e830	                           shr rax, 0x30	       826	libbfd.c	FUNCTION_55
0x40006d7	          0x884606	                  mov byte [rsi + 6], al	       826	libbfd.c	FUNCTION_55
0x40006da	          0x4889f8	                            mov rax, rdi	       827	libbfd.c	FUNCTION_55
0x40006dd	        0x48c1e828	                           shr rax, 0x28	       827	libbfd.c	FUNCTION_55
0x40006e1	          0x884605	                  mov byte [rsi + 5], al	       827	libbfd.c	FUNCTION_55
0x40006e4	          0x4889f8	                            mov rax, rdi	       828	libbfd.c	FUNCTION_55
0x40006e7	        0x48c1e820	                           shr rax, 0x20	       828	libbfd.c	FUNCTION_55
0x40006eb	          0x884604	                  mov byte [rsi + 4], al	       828	libbfd.c	FUNCTION_55
0x40006ee	          0x4889f8	                            mov rax, rdi	       829	libbfd.c	FUNCTION_55
0x40006f1	        0x48c1e818	                           shr rax, 0x18	       829	libbfd.c	FUNCTION_55
0x40006f5	          0x884603	                  mov byte [rsi + 3], al	       829	libbfd.c	FUNCTION_55
0x40006f8	          0x4889f8	                            mov rax, rdi	       830	libbfd.c	FUNCTION_55
0x40006fb	        0x48c1e810	                           shr rax, 0x10	       830	libbfd.c	FUNCTION_55
0x40006ff	          0x884602	                  mov byte [rsi + 2], al	       830	libbfd.c	FUNCTION_55
0x4000702	          0x4889f8	                            mov rax, rdi	       831	libbfd.c	FUNCTION_55
0x4000705	        0x48c1e808	                              shr rax, 8	       831	libbfd.c	FUNCTION_55
0x4000709	          0x884601	                  mov byte [rsi + 1], al	       831	libbfd.c	FUNCTION_55
0x400070c	          0x40883e	                     mov byte [rsi], dil	       832	libbfd.c	FUNCTION_55
0x400070f	              0xc3	                                     ret	       832	libbfd.c	FUNCTION_55
bfd_getb_signed_64	functions,0:WHILE,0:SWITCH,0:DO,0:CALL,1:ELSE,0:FOR,0:IF,0	23
0x4000541	           0xfb607	                   movzx eax, byte [rdi]	       743	libbfd.c	FUNCTION_50
0x4000544	        0x48c1e008	                              shl rax, 8	       743	libbfd.c	FUNCTION_50
0x4000548	         0xfb65701	               movzx edx, byte [rdi + 1]	       744	libbfd.c	FUNCTION_50
0x400054c	          0x4809d0	                             or rax, rdx	       744	libbfd.c	FUNCTION_50
0x400054f	        0x48c1e008	                              shl rax, 8	       744	libbfd.c	FUNCTION_50
0x4000553	         0xfb65702	               movzx edx, byte [rdi + 2]	       745	libbfd.c	FUNCTION_50
0x4000557	          0x4809d0	                             or rax, rdx	       745	libbfd.c	FUNCTION_50
0x400055a	        0x48c1e008	                              shl rax, 8	       745	libbfd.c	FUNCTION_50
0x400055e	         0xfb65703	               movzx edx, byte [rdi + 3]	       746	libbfd.c	FUNCTION_50
0x4000562	          0x4809d0	                             or rax, rdx	       746	libbfd.c	FUNCTION_50
0x4000565	        0x48c1e008	                              shl rax, 8	       746	libbfd.c	FUNCTION_50
0x4000569	         0xfb65704	               movzx edx, byte [rdi + 4]	       747	libbfd.c	FUNCTION_50
0x400056d	          0x4809d0	                             or rax, rdx	       747	libbfd.c	FUNCTION_50
0x4000570	        0x48c1e008	                              shl rax, 8	       747	libbfd.c	FUNCTION_50
0x4000574	         0xfb65705	               movzx edx, byte [rdi + 5]	       748	libbfd.c	FUNCTION_50
0x4000578	          0x4809d0	                             or rax, rdx	       748	libbfd.c	FUNCTION_50
0x400057b	        0x48c1e008	                              shl rax, 8	       748	libbfd.c	FUNCTION_50
0x400057f	         0xfb65706	               movzx edx, byte [rdi + 6]	       749	libbfd.c	FUNCTION_50
0x4000583	          0x4809d0	                             or rax, rdx	       749	libbfd.c	FUNCTION_50
0x4000586	        0x48c1e008	                              shl rax, 8	       749	libbfd.c	FUNCTION_50
0x400058a	         0xfb65707	               movzx edx, byte [rdi + 7]	       752	libbfd.c	FUNCTION_50
0x400058e	          0x4809d0	                             or rax, rdx	       752	libbfd.c	FUNCTION_50
0x4000591	              0xc3	                                     ret	       757	libbfd.c	FUNCTION_50
_bfd_bool_bfd_link_true	functions,0:WHILE,0:SWITCH,0:DO,0:CALL,0:ELSE,0:FOR,0:IF,0	2
0x4000082	      0xb801000000	                              mov eax, 1	        87	libbfd.c	FUNCTION_6
0x4000087	              0xc3	                                     ret	        87	libbfd.c	FUNCTION_6
bfd_getl_signed_64	functions,0:WHILE,0:SWITCH,0:DO,0:CALL,1:ELSE,0:FOR,0:IF,0	23
0x4000592	         0xfb64707	               movzx eax, byte [rdi + 7]	       766	libbfd.c	FUNCTION_51
0x4000596	        0x48c1e008	                              shl rax, 8	       766	libbfd.c	FUNCTION_51
0x400059a	         0xfb65706	               movzx edx, byte [rdi + 6]	       767	libbfd.c	FUNCTION_51
0x400059e	          0x4809d0	                             or rax, rdx	       767	libbfd.c	FUNCTION_51
0x40005a1	        0x48c1e008	                              shl rax, 8	       767	libbfd.c	FUNCTION_51
0x40005a5	         0xfb65705	               movzx edx, byte [rdi + 5]	       768	libbfd.c	FUNCTION_51
0x40005a9	          0x4809d0	                             or rax, rdx	       768	libbfd.c	FUNCTION_51
0x40005ac	        0x48c1e008	                              shl rax, 8	       768	libbfd.c	FUNCTION_51
0x40005b0	         0xfb65704	               movzx edx, byte [rdi + 4]	       769	libbfd.c	FUNCTION_51
0x40005b4	          0x4809d0	                             or rax, rdx	       769	libbfd.c	FUNCTION_51
0x40005b7	        0x48c1e008	                              shl rax, 8	       769	libbfd.c	FUNCTION_51
0x40005bb	         0xfb65703	               movzx edx, byte [rdi + 3]	       770	libbfd.c	FUNCTION_51
0x40005bf	          0x4809d0	                             or rax, rdx	       770	libbfd.c	FUNCTION_51
0x40005c2	        0x48c1e008	                              shl rax, 8	       770	libbfd.c	FUNCTION_51
0x40005c6	         0xfb65702	               movzx edx, byte [rdi + 2]	       771	libbfd.c	FUNCTION_51
0x40005ca	          0x4809d0	                             or rax, rdx	       771	libbfd.c	FUNCTION_51
0x40005cd	        0x48c1e008	                              shl rax, 8	       771	libbfd.c	FUNCTION_51
0x40005d1	         0xfb65701	               movzx edx, byte [rdi + 1]	       772	libbfd.c	FUNCTION_51
0x40005d5	          0x4809d0	                             or rax, rdx	       772	libbfd.c	FUNCTION_51
0x40005d8	        0x48c1e008	                              shl rax, 8	       772	libbfd.c	FUNCTION_51
0x40005dc	           0xfb617	                   movzx edx, byte [rdi]	       775	libbfd.c	FUNCTION_51
0x40005df	          0x4809d0	                             or rax, rdx	       775	libbfd.c	FUNCTION_51
0x40005e2	              0xc3	                                     ret	       780	libbfd.c	FUNCTION_51
bfd_getb64	functions,0:WHILE,0:SWITCH,0:DO,0:CALL,1:ELSE,0:FOR,0:IF,0	23
0x400049f	           0xfb607	                   movzx eax, byte [rdi]	       696	libbfd.c	FUNCTION_48
0x40004a2	        0x48c1e008	                              shl rax, 8	       696	libbfd.c	FUNCTION_48
0x40004a6	         0xfb65701	               movzx edx, byte [rdi + 1]	       697	libbfd.c	FUNCTION_48
0x40004aa	          0x4809d0	                             or rax, rdx	       697	libbfd.c	FUNCTION_48
0x40004ad	        0x48c1e008	                              shl rax, 8	       697	libbfd.c	FUNCTION_48
0x40004b1	         0xfb65702	               movzx edx, byte [rdi + 2]	       698	libbfd.c	FUNCTION_48
0x40004b5	          0x4809d0	                             or rax, rdx	       698	libbfd.c	FUNCTION_48
0x40004b8	        0x48c1e008	                              shl rax, 8	       698	libbfd.c	FUNCTION_48
0x40004bc	         0xfb65703	               movzx edx, byte [rdi + 3]	       699	libbfd.c	FUNCTION_48
0x40004c0	          0x4809d0	                             or rax, rdx	       699	libbfd.c	FUNCTION_48
0x40004c3	        0x48c1e008	                              shl rax, 8	       699	libbfd.c	FUNCTION_48
0x40004c7	         0xfb65704	               movzx edx, byte [rdi + 4]	       700	libbfd.c	FUNCTION_48
0x40004cb	          0x4809d0	                             or rax, rdx	       700	libbfd.c	FUNCTION_48
0x40004ce	        0x48c1e008	                              shl rax, 8	       700	libbfd.c	FUNCTION_48
0x40004d2	         0xfb65705	               movzx edx, byte [rdi + 5]	       701	libbfd.c	FUNCTION_48
0x40004d6	          0x4809d0	                             or rax, rdx	       701	libbfd.c	FUNCTION_48
0x40004d9	        0x48c1e008	                              shl rax, 8	       701	libbfd.c	FUNCTION_48
0x40004dd	         0xfb65706	               movzx edx, byte [rdi + 6]	       702	libbfd.c	FUNCTION_48
0x40004e1	          0x4809d0	                             or rax, rdx	       702	libbfd.c	FUNCTION_48
0x40004e4	        0x48c1e008	                              shl rax, 8	       702	libbfd.c	FUNCTION_48
0x40004e8	         0xfb65707	               movzx edx, byte [rdi + 7]	       705	libbfd.c	FUNCTION_48
0x40004ec	          0x4809d0	                             or rax, rdx	       705	libbfd.c	FUNCTION_48
0x40004ef	              0xc3	                                     ret	       710	libbfd.c	FUNCTION_48
_bfd_bool_bfd_asection_bfd_asection_true	functions,0:WHILE,0:SWITCH,0:DO,0:CALL,0:ELSE,0:FOR,0:IF,0	2
0x4000094	      0xb801000000	                              mov eax, 1	       110	libbfd.c	FUNCTION_9
0x4000099	              0xc3	                                     ret	       110	libbfd.c	FUNCTION_9
bfd_malloc	functions,0:WHILE,0:SWITCH,0:DO,0:CALL,3:ELSE,0:FOR,0:IF,2	25
0x400017d	              0x55	                                push rbp	       259	libbfd.c	FUNCTION_28
0x400017e	              0x53	                                push rbx	       259	libbfd.c	FUNCTION_28
0x400017f	        0x4883ec08	                              sub rsp, 8	       259	libbfd.c	FUNCTION_28
0x4000183	          0x4885ff	                           test rdi, rdi	       263	libbfd.c	FUNCTION_28	IF_1
0x4000186	            0x7911	                           jns 0x4000199	       263	libbfd.c	FUNCTION_28	IF_1
0x4000188	      0xbf06000000	                              mov edi, 6	       267	libbfd.c	FUNCTION_28	IF_1	CALL_1
0x400018d	      0xe800000000	                          call 0x4000192	       267	libbfd.c	FUNCTION_28	IF_1	CALL_1
0x4000192	      0xb800000000	                              mov eax, 0	       268	libbfd.c	FUNCTION_28	IF_1
0x4000197	            0xeb27	                           jmp 0x40001c0	       268	libbfd.c	FUNCTION_28	IF_1
0x4000199	          0x4889fd	                            mov rbp, rdi	       268	libbfd.c	FUNCTION_28	IF_1
0x400019c	      0xe800000000	                          call 0x40001a1	       271	libbfd.c	FUNCTION_28	CALL_2
0x40001a1	          0x4889c3	                            mov rbx, rax	       271	libbfd.c	FUNCTION_28	CALL_2
0x40001a4	          0x4885c0	                           test rax, rax	       272	libbfd.c	FUNCTION_28	IF_2
0x40001a7	            0x7514	                           jne 0x40001bd	       272	libbfd.c	FUNCTION_28	IF_2
0x40001a9	          0x4885ed	                           test rbp, rbp	       272	libbfd.c	FUNCTION_28	IF_2
0x40001ac	            0x740f	                            je 0x40001bd	       272	libbfd.c	FUNCTION_28	IF_2
0x40001ae	      0xbf06000000	                              mov edi, 6	       273	libbfd.c	FUNCTION_28	CALL_3
0x40001b3	      0xe800000000	                          call 0x40001b8	       273	libbfd.c	FUNCTION_28	CALL_3
0x40001b8	          0x4889d8	                            mov rax, rbx	       275	libbfd.c	FUNCTION_28
0x40001bb	            0xeb03	                           jmp 0x40001c0	       275	libbfd.c	FUNCTION_28
0x40001bd	          0x4889d8	                            mov rax, rbx	       275	libbfd.c	FUNCTION_28
0x40001c0	        0x4883c408	                              add rsp, 8	       276	libbfd.c	FUNCTION_28
0x40001c4	              0x5b	                                 pop rbx	       276	libbfd.c	FUNCTION_28
0x40001c5	              0x5d	                                 pop rbp	       276	libbfd.c	FUNCTION_28
0x40001c6	              0xc3	                                     ret	       276	libbfd.c	FUNCTION_28
bfd_getl_signed_32	functions,0:WHILE,0:SWITCH,0:DO,0:CALL,0:ELSE,0:FOR,0:IF,0	15
0x4000469	           0xfb60f	                   movzx ecx, byte [rdi]	       682	libbfd.c	FUNCTION_47
0x400046c	         0xfb65701	               movzx edx, byte [rdi + 1]	       684	libbfd.c	FUNCTION_47
0x4000470	        0x48c1e208	                              shl rdx, 8	       684	libbfd.c	FUNCTION_47
0x4000474	         0xfb64702	               movzx eax, byte [rdi + 2]	       684	libbfd.c	FUNCTION_47
0x4000478	        0x48c1e010	                           shl rax, 0x10	       684	libbfd.c	FUNCTION_47
0x400047c	          0x4809d0	                             or rax, rdx	       684	libbfd.c	FUNCTION_47
0x400047f	          0x4809c8	                             or rax, rcx	       684	libbfd.c	FUNCTION_47
0x4000482	          0x4889c2	                            mov rdx, rax	       684	libbfd.c	FUNCTION_47
0x4000485	         0xfb64703	               movzx eax, byte [rdi + 3]	       686	libbfd.c	FUNCTION_47
0x4000489	        0x48c1e018	                           shl rax, 0x18	       686	libbfd.c	FUNCTION_47
0x400048d	          0x4809d0	                             or rax, rdx	       686	libbfd.c	FUNCTION_47
0x4000490	      0xba00000080	                     mov edx, 0x80000000	       686	libbfd.c	FUNCTION_47
0x4000495	          0x4831d0	                            xor rax, rdx	       686	libbfd.c	FUNCTION_47
0x4000498	    0x480500000080	             add rax, 0xffffffff80000000	       686	libbfd.c	FUNCTION_47
0x400049e	              0xc3	                                     ret	       687	libbfd.c	FUNCTION_47
bfd_get_bits	functions,0:WHILE,0:SWITCH,0:DO,0:CALL,1:ELSE,0:FOR,1:IF,1	31
0x4000766	        0x40f6c607	                             test sil, 7	       866	libbfd.c	FUNCTION_57	IF_1
0x400076a	            0x7418	                            je 0x4000784	       866	libbfd.c	FUNCTION_57	IF_1
0x400076c	        0x4883ec08	                              sub rsp, 8	       860	libbfd.c	FUNCTION_57
0x4000770	      0xba00000000	                              mov edx, 0	       867	libbfd.c	FUNCTION_57	CALL_1
0x4000775	      0xbe63030000	                          mov esi, 0x363	       867	libbfd.c	FUNCTION_57	CALL_1
0x400077a	      0xbf00000000	                              mov edi, 0	       867	libbfd.c	FUNCTION_57	CALL_1
0x400077f	      0xe800000000	                          call 0x4000784	       867	libbfd.c	FUNCTION_57	CALL_1
0x4000784	          0x8d4607	                      lea eax, [rsi + 7]	       870	libbfd.c	FUNCTION_57
0x4000787	            0x85f6	                           test esi, esi	       870	libbfd.c	FUNCTION_57
0x4000789	           0xf48f0	                          cmovs esi, eax	       870	libbfd.c	FUNCTION_57
0x400078c	          0xc1fe03	                              sar esi, 3	       870	libbfd.c	FUNCTION_57
0x400078f	          0x4189f0	                            mov r8d, esi	       870	libbfd.c	FUNCTION_57
0x4000792	            0x85f6	                           test esi, esi	       871	libbfd.c	FUNCTION_57	FOR_1
0x4000794	            0x7e30	                           jle 0x40007c6	       871	libbfd.c	FUNCTION_57	FOR_1
0x4000796	      0xbe00000000	                              mov esi, 0	       871	libbfd.c	FUNCTION_57	FOR_1
0x400079b	      0xb800000000	                              mov eax, 0	       871	libbfd.c	FUNCTION_57	FOR_1
0x40007a0	        0x458d48ff	                       lea r9d, [r8 - 1]	       871	libbfd.c	FUNCTION_57	FOR_1
0x40007a4	          0x4489c9	                            mov ecx, r9d	       871	libbfd.c	FUNCTION_57	FOR_1
0x40007a7	            0x29f1	                            sub ecx, esi	       871	libbfd.c	FUNCTION_57	FOR_1
0x40007a9	            0x85d2	                           test edx, edx	       871	libbfd.c	FUNCTION_57	FOR_1
0x40007ab	           0xf45ce	                         cmovne ecx, esi	       871	libbfd.c	FUNCTION_57	FOR_1
0x40007ae	        0x48c1e008	                              shl rax, 8	       875	libbfd.c	FUNCTION_57	FOR_1
0x40007b2	          0x4863c9	                         movsxd rcx, ecx	       875	libbfd.c	FUNCTION_57	FOR_1
0x40007b5	         0xfb60c0f	             movzx ecx, byte [rdi + rcx]	       875	libbfd.c	FUNCTION_57	FOR_1
0x40007b9	          0x4809c8	                             or rax, rcx	       875	libbfd.c	FUNCTION_57	FOR_1
0x40007bc	          0x83c601	                              add esi, 1	       871	libbfd.c	FUNCTION_57	FOR_1
0x40007bf	          0x4139f0	                            cmp r8d, esi	       871	libbfd.c	FUNCTION_57	FOR_1
0x40007c2	            0x75e0	                           jne 0x40007a4	       871	libbfd.c	FUNCTION_57	FOR_1
0x40007c4	            0xf3c3	                                     ret	       871	libbfd.c	FUNCTION_57	FOR_1
0x40007c6	      0xb800000000	                              mov eax, 0	       869	libbfd.c	FUNCTION_57
0x40007cb	              0xc3	                                     ret	       879	libbfd.c	FUNCTION_57
_bfd_nocore_core_file_failing_signal	functions,0:WHILE,0:SWITCH,0:DO,0:CALL,1:ELSE,0:FOR,0:IF,0	6
0x4000135	        0x4883ec08	                              sub rsp, 8	       233	libbfd.c	FUNCTION_25
0x4000139	      0xbf05000000	                              mov edi, 5	       234	libbfd.c	FUNCTION_25	CALL_1
0x400013e	      0xe800000000	                          call 0x4000143	       234	libbfd.c	FUNCTION_25	CALL_1
0x4000143	      0xb800000000	                              mov eax, 0	       236	libbfd.c	FUNCTION_25
0x4000148	        0x4883c408	                              add rsp, 8	       236	libbfd.c	FUNCTION_25
0x400014c	              0xc3	                                     ret	       236	libbfd.c	FUNCTION_25
_bfd_bool_bfd_bfd_true	functions,0:WHILE,0:SWITCH,0:DO,0:CALL,0:ELSE,0:FOR,0:IF,0	2
0x4000088	      0xb801000000	                              mov eax, 1	        94	libbfd.c	FUNCTION_7
0x400008d	              0xc3	                                     ret	        94	libbfd.c	FUNCTION_7
bfd_getb16	functions,0:WHILE,0:SWITCH,0:DO,0:CALL,0:ELSE,0:FOR,0:IF,0	6
0x4000355	           0xfb607	                   movzx eax, byte [rdi]	       576	libbfd.c	FUNCTION_36
0x4000358	          0xc1e008	                              shl eax, 8	       576	libbfd.c	FUNCTION_36
0x400035b	         0xfb65701	               movzx edx, byte [rdi + 1]	       576	libbfd.c	FUNCTION_36
0x400035f	             0x9d0	                             or eax, edx	       576	libbfd.c	FUNCTION_36
0x4000361	            0x4898	                                    cdqe	       576	libbfd.c	FUNCTION_36
0x4000363	              0xc3	                                     ret	       577	libbfd.c	FUNCTION_36
bfd_generic_is_local_label_name	functions,0:WHILE,0:SWITCH,0:DO,0:CALL,1:ELSE,0:FOR,0:IF,0	9
0x4000965	        0x488b4708	                mov rax, qword [rdi + 8]	      1038	libbfd.c	FUNCTION_62	CALL_1
0x4000969	        0x80781c5f	            cmp byte [rax + 0x1c], 0x5f 	      1038	libbfd.c	FUNCTION_62	CALL_1
0x400096d	      0xba2e000000	                           mov edx, 0x2e	      1038	libbfd.c	FUNCTION_62	CALL_1
0x4000972	      0xb84c000000	                           mov eax, 0x4c	      1038	libbfd.c	FUNCTION_62	CALL_1
0x4000977	           0xf45c2	                         cmovne eax, edx	      1038	libbfd.c	FUNCTION_62	CALL_1
0x400097a	            0x3806	                      cmp byte [rsi], al	      1040	libbfd.c	FUNCTION_62
0x400097c	           0xf94c0	                                 sete al	      1040	libbfd.c	FUNCTION_62
0x400097f	           0xfb6c0	                           movzx eax, al	      1040	libbfd.c	FUNCTION_62
0x4000982	              0xc3	                                     ret	      1041	libbfd.c	FUNCTION_62
bfd_putl32	functions,0:WHILE,0:SWITCH,0:DO,0:CALL,0:ELSE,0:FOR,0:IF,0	10
0x400065c	          0x40883e	                     mov byte [rsi], dil	       796	libbfd.c	FUNCTION_53
0x400065f	          0x4889f8	                            mov rax, rdi	       797	libbfd.c	FUNCTION_53
0x4000662	        0x48c1e808	                              shr rax, 8	       797	libbfd.c	FUNCTION_53
0x4000666	          0x884601	                  mov byte [rsi + 1], al	       797	libbfd.c	FUNCTION_53
0x4000669	          0x4889f8	                            mov rax, rdi	       798	libbfd.c	FUNCTION_53
0x400066c	        0x48c1e810	                           shr rax, 0x10	       798	libbfd.c	FUNCTION_53
0x4000670	          0x884602	                  mov byte [rsi + 2], al	       798	libbfd.c	FUNCTION_53
0x4000673	        0x48c1ef18	                           shr rdi, 0x18	       799	libbfd.c	FUNCTION_53
0x4000677	        0x40887e03	                 mov byte [rsi + 3], dil	       799	libbfd.c	FUNCTION_53
0x400067b	              0xc3	                                     ret	       799	libbfd.c	FUNCTION_53
_bfd_norelocs_set_reloc	functions,0:WHILE,0:SWITCH,0:DO,0:CALL,0:ELSE,0:FOR,0:IF,0	1
0x4000103	            0xf3c3	                                     ret	       205	libbfd.c	FUNCTION_22
bfd_log2	functions,0:WHILE,0:SWITCH,0:DO,1:CALL,0:ELSE,0:FOR,0:IF,1	10
0x4000946	        0x4883ff01	                              cmp rdi, 1	      1026	libbfd.c	FUNCTION_61	IF_1
0x400094a	            0x7613	                           jbe 0x400095f	      1026	libbfd.c	FUNCTION_61	IF_1
0x400094c	        0x4883ef01	                              sub rdi, 1	      1028	libbfd.c	FUNCTION_61
0x4000950	      0xb800000000	                              mov eax, 0	      1024	libbfd.c	FUNCTION_61
0x4000955	          0x83c001	                              add eax, 1	      1030	libbfd.c	FUNCTION_61	DO_1
0x4000958	          0x48d1ef	                              shr rdi, 1	      1031	libbfd.c	FUNCTION_61
0x400095b	            0x75f8	                           jne 0x4000955	      1031	libbfd.c	FUNCTION_61
0x400095d	            0xf3c3	                                     ret	      1031	libbfd.c	FUNCTION_61
0x400095f	      0xb800000000	                              mov eax, 0	      1027	libbfd.c	FUNCTION_61	IF_1
0x4000964	              0xc3	                                     ret	      1033	libbfd.c	FUNCTION_61
_bfd_generic_init_private_section_data	functions,0:WHILE,0:SWITCH,0:DO,0:CALL,0:ELSE,0:FOR,0:IF,0	2
0x4000b6e	      0xb801000000	                              mov eax, 1	      1176	libbfd.c	FUNCTION_67
0x4000b73	              0xc3	                                     ret	      1176	libbfd.c	FUNCTION_67
bfd_realloc_or_free	functions,0:WHILE,0:SWITCH,0:DO,0:CALL,2:ELSE,0:FOR,0:IF,1	17
0x40002bb	              0x55	                                push rbp	       342	libbfd.c	FUNCTION_32
0x40002bc	              0x53	                                push rbx	       342	libbfd.c	FUNCTION_32
0x40002bd	        0x4883ec08	                              sub rsp, 8	       342	libbfd.c	FUNCTION_32
0x40002c1	          0x4889fb	                            mov rbx, rdi	       342	libbfd.c	FUNCTION_32
0x40002c4	      0xe800000000	                          call 0x40002c9	       343	libbfd.c	FUNCTION_32	CALL_1
0x40002c9	          0x4889c5	                            mov rbp, rax	       343	libbfd.c	FUNCTION_32	CALL_1
0x40002cc	          0x4885c0	                           test rax, rax	       345	libbfd.c	FUNCTION_32	IF_1
0x40002cf	            0x750d	                           jne 0x40002de	       345	libbfd.c	FUNCTION_32	IF_1
0x40002d1	          0x4885db	                           test rbx, rbx	       345	libbfd.c	FUNCTION_32	IF_1
0x40002d4	            0x7408	                            je 0x40002de	       345	libbfd.c	FUNCTION_32	IF_1
0x40002d6	          0x4889df	                            mov rdi, rbx	       346	libbfd.c	FUNCTION_32	CALL_2
0x40002d9	      0xe800000000	                          call 0x40002de	       346	libbfd.c	FUNCTION_32	CALL_2
0x40002de	          0x4889e8	                            mov rax, rbp	       349	libbfd.c	FUNCTION_32
0x40002e1	        0x4883c408	                              add rsp, 8	       349	libbfd.c	FUNCTION_32
0x40002e5	              0x5b	                                 pop rbx	       349	libbfd.c	FUNCTION_32
0x40002e6	              0x5d	                                 pop rbp	       349	libbfd.c	FUNCTION_32
0x40002e7	              0xc3	                                     ret	       349	libbfd.c	FUNCTION_32
_bfd_void_bfd_asection	functions,0:WHILE,0:SWITCH,0:DO,0:CALL,0:ELSE,0:FOR,0:IF,0	1
0x40000ee	            0xf3c3	                                     ret	       180	libbfd.c	FUNCTION_19
_bfd_generic_get_section_contents	functions,0:WHILE,0:SWITCH,0:DO,0:CALL,8:ELSE,1:FOR,0:IF,5	77
0x40007cc	      0xb801000000	                              mov eax, 1	       892	libbfd.c	FUNCTION_58	IF_1
0x40007d1	          0x4d85c0	                             test r8, r8	       891	libbfd.c	FUNCTION_58	IF_1
0x40007d4	     0xf84ff000000	                            je 0x40008d9	       891	libbfd.c	FUNCTION_58	IF_1
0x40007da	            0x4155	                                push r13	       889	libbfd.c	FUNCTION_58
0x40007dc	            0x4154	                                push r12	       889	libbfd.c	FUNCTION_58
0x40007de	              0x55	                                push rbp	       889	libbfd.c	FUNCTION_58
0x40007df	              0x53	                                push rbx	       889	libbfd.c	FUNCTION_58
0x40007e0	        0x4883ec08	                              sub rsp, 8	       889	libbfd.c	FUNCTION_58
0x40007e4	          0x4c89c3	                             mov rbx, r8	       889	libbfd.c	FUNCTION_58
0x40007e7	          0x4989d5	                            mov r13, rdx	       889	libbfd.c	FUNCTION_58
0x40007ea	          0x4889f5	                            mov rbp, rsi	       889	libbfd.c	FUNCTION_58
0x40007ed	          0x4989fc	                            mov r12, rdi	       889	libbfd.c	FUNCTION_58
0x40007f0	        0xf6462430	           test byte [rsi + 0x24], 0x30 	       894	libbfd.c	FUNCTION_58	IF_2
0x40007f4	            0x743b	                            je 0x4000831	       894	libbfd.c	FUNCTION_58	IF_2
0x40007f6	      0xba05000000	                              mov edx, 5	       898	libbfd.c	FUNCTION_58	IF_2	CALL_2
0x40007fb	      0xbe00000000	                              mov esi, 0	       898	libbfd.c	FUNCTION_58	IF_2	CALL_2
0x4000800	      0xbf00000000	                              mov edi, 0	       898	libbfd.c	FUNCTION_58	IF_2	CALL_2
0x4000805	      0xe800000000	                          call 0x400080a	       898	libbfd.c	FUNCTION_58	IF_2	CALL_2
0x400080a	          0x4889ea	                            mov rdx, rbp	       896	libbfd.c	FUNCTION_58	IF_2	CALL_1
0x400080d	          0x4c89e6	                            mov rsi, r12	       896	libbfd.c	FUNCTION_58	IF_2	CALL_1
0x4000810	          0x4889c7	                            mov rdi, rax	       896	libbfd.c	FUNCTION_58	IF_2	CALL_1
0x4000813	      0xb800000000	                              mov eax, 0	       896	libbfd.c	FUNCTION_58	IF_2	CALL_1
0x4000818	      0xe800000000	                          call 0x400081d	       896	libbfd.c	FUNCTION_58	IF_2	CALL_1
0x400081d	      0xbf05000000	                              mov edi, 5	       900	libbfd.c	FUNCTION_58	IF_2	CALL_3
0x4000822	      0xe800000000	                          call 0x4000827	       900	libbfd.c	FUNCTION_58	IF_2	CALL_3
0x4000827	      0xb800000000	                              mov eax, 0	       901	libbfd.c	FUNCTION_58	IF_2
0x400082c	      0xe99e000000	                           jmp 0x40008cf	       901	libbfd.c	FUNCTION_58	IF_2
0x4000831	         0xfb64744	           movzx eax, byte [rdi + 0x44] 	       909	libbfd.c	FUNCTION_58	IF_3
0x4000835	          0x83e018	                           and eax, 0x18	       909	libbfd.c	FUNCTION_58	IF_3
0x4000838	            0x3c10	                            cmp al, 0x10	       909	libbfd.c	FUNCTION_58	IF_3
0x400083a	            0x7409	                            je 0x4000845	       909	libbfd.c	FUNCTION_58	IF_3
0x400083c	        0x488b4640	            mov rax, qword [rsi + 0x40] 	       909	libbfd.c	FUNCTION_58	IF_3
0x4000840	          0x4885c0	                           test rax, rax	       909	libbfd.c	FUNCTION_58	IF_3
0x4000843	            0x7504	                           jne 0x4000849	       909	libbfd.c	FUNCTION_58	IF_3
0x4000845	        0x488b4538	            mov rax, qword [rbp + 0x38] 	       912	libbfd.c	FUNCTION_58	ELSE_1
0x4000849	        0x488d140b	                    lea rdx, [rbx + rcx]	       913	libbfd.c	FUNCTION_58	ELSE_1	IF_4
0x400084d	          0x4839d0	                            cmp rax, rdx	       914	libbfd.c	FUNCTION_58	ELSE_1	IF_4
0x4000850	            0x7233	                            jb 0x4000885	       914	libbfd.c	FUNCTION_58	ELSE_1	IF_4
0x4000852	          0x4839d3	                            cmp rbx, rdx	       914	libbfd.c	FUNCTION_58	ELSE_1	IF_4
0x4000855	            0x772e	                            ja 0x4000885	       914	libbfd.c	FUNCTION_58	ELSE_1	IF_4
0x4000857	    0x498b8424d000	            mov rax, qword [r12 + 0xd0] 	       915	libbfd.c	FUNCTION_58	ELSE_1	IF_4
0x400085f	          0x4885c0	                           test rax, rax	       915	libbfd.c	FUNCTION_58	ELSE_1	IF_4
0x4000862	            0x7432	                            je 0x4000896	       915	libbfd.c	FUNCTION_58	ELSE_1	IF_4
0x4000864	        0xf6404801	               test byte [rax + 0x48], 1	       916	libbfd.c	FUNCTION_58	ELSE_1	IF_4	CALL_4
0x4000868	            0x752c	                           jne 0x4000896	       916	libbfd.c	FUNCTION_58	ELSE_1	IF_4	CALL_4
0x400086a	          0x4889c8	                            mov rax, rcx	       917	libbfd.c	FUNCTION_58	ELSE_1	IF_4
0x400086d	    0x480385900000	             add rax, qword [rbp + 0x90]	       917	libbfd.c	FUNCTION_58	ELSE_1	IF_4
0x4000874	          0x4801d8	                            add rax, rbx	       917	libbfd.c	FUNCTION_58	ELSE_1	IF_4
0x4000877	    0x498b9424c800	            mov rdx, qword [r12 + 0xc8] 	       918	libbfd.c	FUNCTION_58	ELSE_1	IF_4	CALL_5
0x400087f	        0x483b4208	                cmp rax, qword [rdx + 8]	       917	libbfd.c	FUNCTION_58	ELSE_1	IF_4
0x4000883	            0x7611	                           jbe 0x4000896	       917	libbfd.c	FUNCTION_58	ELSE_1	IF_4
0x4000885	      0xbf05000000	                              mov edi, 5	       920	libbfd.c	FUNCTION_58	ELSE_1	IF_4	CALL_6
0x400088a	      0xe800000000	                          call 0x400088f	       920	libbfd.c	FUNCTION_58	ELSE_1	IF_4	CALL_6
0x400088f	      0xb800000000	                              mov eax, 0	       921	libbfd.c	FUNCTION_58	ELSE_1	IF_4
0x4000894	            0xeb39	                           jmp 0x40008cf	       921	libbfd.c	FUNCTION_58	ELSE_1	IF_4
0x4000896	          0x4889ce	                            mov rsi, rcx	       924	libbfd.c	FUNCTION_58	IF_5	CALL_7
0x4000899	    0x4803b5900000	             add rsi, qword [rbp + 0x90]	       924	libbfd.c	FUNCTION_58	IF_5	CALL_7
0x40008a0	      0xba00000000	                              mov edx, 0	       924	libbfd.c	FUNCTION_58	IF_5	CALL_7
0x40008a5	          0x4c89e7	                            mov rdi, r12	       924	libbfd.c	FUNCTION_58	IF_5	CALL_7
0x40008a8	      0xe800000000	                          call 0x40008ad	       924	libbfd.c	FUNCTION_58	IF_5	CALL_7
0x40008ad	            0x89c2	                            mov edx, eax	       924	libbfd.c	FUNCTION_58	IF_5	CALL_7
0x40008af	      0xb800000000	                              mov eax, 0	       926	libbfd.c	FUNCTION_58	IF_5
0x40008b4	            0x85d2	                           test edx, edx	       924	libbfd.c	FUNCTION_58	IF_5	CALL_7
0x40008b6	            0x7517	                           jne 0x40008cf	       924	libbfd.c	FUNCTION_58	IF_5	CALL_7
0x40008b8	          0x4c89e2	                            mov rdx, r12	       925	libbfd.c	FUNCTION_58	IF_5	CALL_8
0x40008bb	          0x4889de	                            mov rsi, rbx	       925	libbfd.c	FUNCTION_58	IF_5	CALL_8
0x40008be	          0x4c89ef	                            mov rdi, r13	       925	libbfd.c	FUNCTION_58	IF_5	CALL_8
0x40008c1	      0xe800000000	                          call 0x40008c6	       925	libbfd.c	FUNCTION_58	IF_5	CALL_8
0x40008c6	          0x4839c3	                            cmp rbx, rax	       892	libbfd.c	FUNCTION_58	IF_1
0x40008c9	           0xf94c0	                                 sete al	       892	libbfd.c	FUNCTION_58	IF_1
0x40008cc	           0xfb6c0	                           movzx eax, al	       892	libbfd.c	FUNCTION_58	IF_1
0x40008cf	        0x4883c408	                              add rsp, 8	       929	libbfd.c	FUNCTION_58
0x40008d3	              0x5b	                                 pop rbx	       929	libbfd.c	FUNCTION_58
0x40008d4	              0x5d	                                 pop rbp	       929	libbfd.c	FUNCTION_58
0x40008d5	            0x415c	                                 pop r12	       929	libbfd.c	FUNCTION_58
0x40008d7	            0x415d	                                 pop r13	       929	libbfd.c	FUNCTION_58
0x40008d9	            0xf3c3	                                     ret	       929	libbfd.c	FUNCTION_58
_bfd_read_signed_leb128	functions,0:WHILE,0:SWITCH,0:DO,1:CALL,1:ELSE,0:FOR,0:IF,1	22
0x4000b22	    0x41b900000000	                              mov r9d, 0	      1152	libbfd.c	FUNCTION_66
0x4000b28	      0xb900000000	                              mov ecx, 0	      1151	libbfd.c	FUNCTION_66
0x4000b2d	      0xb800000000	                              mov eax, 0	      1150	libbfd.c	FUNCTION_66
0x4000b32	        0x440fb606	                   movzx r8d, byte [rsi]	      1155	libbfd.c	FUNCTION_66	DO_1	CALL_1
0x4000b36	        0x4883c601	                              add rsi, 1	      1156	libbfd.c	FUNCTION_66	DO_1
0x4000b3a	        0x4183c101	                              add r9d, 1	      1157	libbfd.c	FUNCTION_66	DO_1
0x4000b3e	          0x4c89c7	                             mov rdi, r8	      1158	libbfd.c	FUNCTION_66	DO_1
0x4000b41	          0x83e77f	                           and edi, 0x7f	      1158	libbfd.c	FUNCTION_66	DO_1
0x4000b44	          0x48d3e7	                             shl rdi, cl	      1158	libbfd.c	FUNCTION_66	DO_1
0x4000b47	          0x4809f8	                             or rax, rdi	      1158	libbfd.c	FUNCTION_66	DO_1
0x4000b4a	          0x83c107	                              add ecx, 7	      1159	libbfd.c	FUNCTION_66	DO_1
0x4000b4d	          0x4584c0	                           test r8b, r8b	      1161	libbfd.c	FUNCTION_66
0x4000b50	            0x78e0	                            js 0x4000b32	      1161	libbfd.c	FUNCTION_66
0x4000b52	          0x83f93f	                           cmp ecx, 0x3f	      1162	libbfd.c	FUNCTION_66	IF_1
0x4000b55	            0x7713	                            ja 0x4000b6a	      1162	libbfd.c	FUNCTION_66	IF_1
0x4000b57	        0x41f6c040	                          test r8b, 0x40	      1162	libbfd.c	FUNCTION_66	IF_1
0x4000b5b	            0x740d	                            je 0x4000b6a	      1162	libbfd.c	FUNCTION_66	IF_1
0x4000b5d	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	      1163	libbfd.c	FUNCTION_66	IF_1
0x4000b64	          0x48d3e6	                             shl rsi, cl	      1163	libbfd.c	FUNCTION_66	IF_1
0x4000b67	          0x4809f0	                             or rax, rsi	      1163	libbfd.c	FUNCTION_66	IF_1
0x4000b6a	          0x44890a	                    mov dword [rdx], r9d	      1164	libbfd.c	FUNCTION_66
0x4000b6d	              0xc3	                                     ret	      1166	libbfd.c	FUNCTION_66
_bfd_bool_bfd_uint_true	functions,0:WHILE,0:SWITCH,0:DO,0:CALL,0:ELSE,0:FOR,0:IF,0	2
0x400008e	      0xb801000000	                              mov eax, 1	       101	libbfd.c	FUNCTION_8
0x4000093	              0xc3	                                     ret	       101	libbfd.c	FUNCTION_8
_bfd_nocore_core_file_pid	functions,0:WHILE,0:SWITCH,0:DO,0:CALL,1:ELSE,0:FOR,0:IF,0	6
0x400014d	        0x4883ec08	                              sub rsp, 8	       243	libbfd.c	FUNCTION_26
0x4000151	      0xbf05000000	                              mov edi, 5	       244	libbfd.c	FUNCTION_26	CALL_1
0x4000156	      0xe800000000	                          call 0x400015b	       244	libbfd.c	FUNCTION_26	CALL_1
0x400015b	      0xb800000000	                              mov eax, 0	       246	libbfd.c	FUNCTION_26
0x4000160	        0x4883c408	                              add rsp, 8	       246	libbfd.c	FUNCTION_26
0x4000164	              0xc3	                                     ret	       246	libbfd.c	FUNCTION_26
_bfd_nocore_core_file_matches_executable_p	functions,0:WHILE,0:SWITCH,0:DO,0:CALL,1:ELSE,0:FOR,0:IF,0	6
0x4000105	        0x4883ec08	                              sub rsp, 8	       213	libbfd.c	FUNCTION_23
0x4000109	      0xbf05000000	                              mov edi, 5	       214	libbfd.c	FUNCTION_23	CALL_1
0x400010e	      0xe800000000	                          call 0x4000113	       214	libbfd.c	FUNCTION_23	CALL_1
0x4000113	      0xb800000000	                              mov eax, 0	       216	libbfd.c	FUNCTION_23
0x4000118	        0x4883c408	                              add rsp, 8	       216	libbfd.c	FUNCTION_23
0x400011c	              0xc3	                                     ret	       216	libbfd.c	FUNCTION_23
_bfd_norelocs_get_reloc_upper_bound	functions,0:WHILE,0:SWITCH,0:DO,0:CALL,0:ELSE,0:FOR,0:IF,0	2
0x40000f0	      0xb808000000	                              mov eax, 8	       188	libbfd.c	FUNCTION_20
0x40000f5	              0xc3	                                     ret	       188	libbfd.c	FUNCTION_20
_bfd_generic_get_section_contents_in_window	functions,0:WHILE,0:SWITCH,0:DO,0:CALL,9:ELSE,1:FOR,0:IF,6	5
0x40008db	        0x4883ec08	                              sub rsp, 8	       938	libbfd.c	FUNCTION_59
0x40008df	      0xba00000000	                              mov edx, 0	       984	libbfd.c	FUNCTION_59	CALL_9
0x40008e4	      0xbed8030000	                          mov esi, 0x3d8	       984	libbfd.c	FUNCTION_59	CALL_9
0x40008e9	      0xbf00000000	                              mov edi, 0	       984	libbfd.c	FUNCTION_59	CALL_9
0x40008ee	      0xe800000000	call sym._bfd_generic_set_section_contents	       984	libbfd.c	FUNCTION_59	CALL_9
bfd_zmalloc2	functions,0:WHILE,0:SWITCH,0:DO,0:CALL,2:ELSE,0:FOR,0:IF,2	21
0x400031d	            0x4154	                                push r12	       369	libbfd.c	FUNCTION_34
0x400031f	              0x55	                                push rbp	       369	libbfd.c	FUNCTION_34
0x4000320	              0x53	                                push rbx	       369	libbfd.c	FUNCTION_34
0x4000321	          0x4989fc	                            mov r12, rdi	       369	libbfd.c	FUNCTION_34
0x4000324	          0x4889f3	                            mov rbx, rsi	       369	libbfd.c	FUNCTION_34
0x4000327	      0xe800000000	                          call 0x400032c	       370	libbfd.c	FUNCTION_34	CALL_1
0x400032c	          0x4889c5	                            mov rbp, rax	       370	libbfd.c	FUNCTION_34	CALL_1
0x400032f	          0x4885c0	                           test rax, rax	       372	libbfd.c	FUNCTION_34	IF_1
0x4000332	            0x7419	                            je 0x400034d	       372	libbfd.c	FUNCTION_34	IF_1
0x4000334	          0x4c89e2	                            mov rdx, r12	       374	libbfd.c	FUNCTION_34	IF_1
0x4000337	        0x480fafd3	                           imul rdx, rbx	       374	libbfd.c	FUNCTION_34	IF_1
0x400033b	          0x4885d2	                           test rdx, rdx	       376	libbfd.c	FUNCTION_34	IF_1	IF_2
0x400033e	            0x740d	                            je 0x400034d	       376	libbfd.c	FUNCTION_34	IF_1	IF_2
0x4000340	      0xbe00000000	                              mov esi, 0	        90	string3.h	FUNCTION_88	CALL_6
0x4000345	          0x4889c7	                            mov rdi, rax	        90	string3.h	FUNCTION_88	CALL_6
0x4000348	      0xe800000000	                          call 0x400034d	        90	string3.h	FUNCTION_88	CALL_6
0x400034d	          0x4889e8	                            mov rax, rbp	       381	libbfd.c	FUNCTION_34
0x4000350	              0x5b	                                 pop rbx	       381	libbfd.c	FUNCTION_34
0x4000351	              0x5d	                                 pop rbp	       381	libbfd.c	FUNCTION_34
0x4000352	            0x415c	                                 pop r12	       381	libbfd.c	FUNCTION_34
0x4000354	              0xc3	                                     ret	       381	libbfd.c	FUNCTION_34
bfd_put_bits	functions,0:WHILE,0:SWITCH,0:DO,0:CALL,1:ELSE,0:FOR,1:IF,1	27
0x4000710	          0xf6c207	                              test dl, 7	       845	libbfd.c	FUNCTION_56	IF_1
0x4000713	            0x7418	                            je 0x400072d	       845	libbfd.c	FUNCTION_56	IF_1
0x4000715	        0x4883ec08	                              sub rsp, 8	       840	libbfd.c	FUNCTION_56
0x4000719	      0xba00000000	                              mov edx, 0	       846	libbfd.c	FUNCTION_56	CALL_1
0x400071e	      0xbe4e030000	                          mov esi, 0x34e	       846	libbfd.c	FUNCTION_56	CALL_1
0x4000723	      0xbf00000000	                              mov edi, 0	       846	libbfd.c	FUNCTION_56	CALL_1
0x4000728	      0xe800000000	                          call 0x400072d	       846	libbfd.c	FUNCTION_56	CALL_1
0x400072d	          0x8d4207	                      lea eax, [rdx + 7]	       848	libbfd.c	FUNCTION_56
0x4000730	            0x85d2	                           test edx, edx	       848	libbfd.c	FUNCTION_56
0x4000732	           0xf48d0	                          cmovs edx, eax	       848	libbfd.c	FUNCTION_56
0x4000735	          0xc1fa03	                              sar edx, 3	       848	libbfd.c	FUNCTION_56
0x4000738	          0x4189d0	                            mov r8d, edx	       848	libbfd.c	FUNCTION_56
0x400073b	            0x85d2	                           test edx, edx	       849	libbfd.c	FUNCTION_56	FOR_1
0x400073d	            0x7e25	                           jle 0x4000764	       849	libbfd.c	FUNCTION_56	FOR_1
0x400073f	      0xba00000000	                              mov edx, 0	       849	libbfd.c	FUNCTION_56	FOR_1
0x4000744	        0x458d48ff	                       lea r9d, [r8 - 1]	       849	libbfd.c	FUNCTION_56	FOR_1
0x4000748	          0x4489c8	                            mov eax, r9d	       849	libbfd.c	FUNCTION_56	FOR_1
0x400074b	            0x29d0	                            sub eax, edx	       849	libbfd.c	FUNCTION_56	FOR_1
0x400074d	            0x85c9	                           test ecx, ecx	       849	libbfd.c	FUNCTION_56	FOR_1
0x400074f	           0xf44c2	                          cmove eax, edx	       849	libbfd.c	FUNCTION_56	FOR_1
0x4000752	            0x4898	                                    cdqe	       853	libbfd.c	FUNCTION_56	FOR_1
0x4000754	        0x40883c06	               mov byte [rsi + rax], dil	       853	libbfd.c	FUNCTION_56	FOR_1
0x4000758	        0x48c1ef08	                              shr rdi, 8	       854	libbfd.c	FUNCTION_56	FOR_1
0x400075c	          0x83c201	                              add edx, 1	       849	libbfd.c	FUNCTION_56	FOR_1
0x400075f	          0x4139d0	                            cmp r8d, edx	       849	libbfd.c	FUNCTION_56	FOR_1
0x4000762	            0x75e4	                           jne 0x4000748	       849	libbfd.c	FUNCTION_56	FOR_1
0x4000764	            0xf3c3	                                     ret	       849	libbfd.c	FUNCTION_56	FOR_1
bfd_getl_signed_16	functions,0:WHILE,0:SWITCH,0:DO,0:CALL,0:ELSE,0:FOR,0:IF,0	6
0x4000384	         0xfb64701	               movzx eax, byte [rdi + 1]	       597	libbfd.c	FUNCTION_39
0x4000388	          0xc1e008	                              shl eax, 8	       597	libbfd.c	FUNCTION_39
0x400038b	           0xfb617	                   movzx edx, byte [rdi]	       597	libbfd.c	FUNCTION_39
0x400038e	             0x9d0	                             or eax, edx	       597	libbfd.c	FUNCTION_39
0x4000390	        0x480fbfc0	                           movsx rax, ax	       597	libbfd.c	FUNCTION_39
0x4000394	              0xc3	                                     ret	       598	libbfd.c	FUNCTION_39
bfd_write_bigendian_4byte_int	functions,0:WHILE,0:SWITCH,0:DO,0:CALL,2:ELSE,0:FOR,0:IF,0	23
0x4000605	              0x53	                                push rbx	       398	libbfd.c	FUNCTION_35
0x4000606	        0x4883ec10	                           sub rsp, 0x10	       398	libbfd.c	FUNCTION_35
0x400060a	          0x4889fb	                            mov rbx, rdi	       398	libbfd.c	FUNCTION_35
0x400060d	    0x64488b042528	                mov rax, qword fs:[0x28]	       398	libbfd.c	FUNCTION_35
0x4000616	      0x4889442408	                mov qword [rsp + 8], rax	       398	libbfd.c	FUNCTION_35
0x400061b	            0x31c0	                            xor eax, eax	       398	libbfd.c	FUNCTION_35
0x400061d	            0x89f7	                            mov edi, esi	       400	libbfd.c	FUNCTION_35	CALL_1
0x400061f	          0x4889e6	                            mov rsi, rsp	       400	libbfd.c	FUNCTION_35	CALL_1
0x4000622	      0xe800000000	                          call 0x4000627	       400	libbfd.c	FUNCTION_35	CALL_1
0x4000627	          0x4889da	                            mov rdx, rbx	       401	libbfd.c	FUNCTION_35	CALL_2
0x400062a	      0xbe04000000	                              mov esi, 4	       401	libbfd.c	FUNCTION_35	CALL_2
0x400062f	          0x4889e7	                            mov rdi, rsp	       401	libbfd.c	FUNCTION_35	CALL_2
0x4000632	      0xe800000000	                          call 0x4000637	       401	libbfd.c	FUNCTION_35	CALL_2
0x4000637	        0x4883f804	                              cmp rax, 4	       401	libbfd.c	FUNCTION_35	CALL_2
0x400063b	           0xf94c0	                                 sete al	       401	libbfd.c	FUNCTION_35	CALL_2
0x400063e	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       402	libbfd.c	FUNCTION_35
0x4000643	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       402	libbfd.c	FUNCTION_35
0x400064c	            0x7405	                            je 0x4000653	       402	libbfd.c	FUNCTION_35
0x400064e	      0xe800000000	                          call 0x4000653	       402	libbfd.c	FUNCTION_35
0x4000653	           0xfb6c0	                           movzx eax, al	       402	libbfd.c	FUNCTION_35
0x4000656	        0x4883c410	                           add rsp, 0x10	       402	libbfd.c	FUNCTION_35
0x400065a	              0x5b	                                 pop rbx	       402	libbfd.c	FUNCTION_35
0x400065b	              0xc3	                                     ret	       402	libbfd.c	FUNCTION_35
bfd_getl64	functions,0:WHILE,0:SWITCH,0:DO,0:CALL,1:ELSE,0:FOR,0:IF,0	23
0x40004f0	         0xfb64707	               movzx eax, byte [rdi + 7]	       719	libbfd.c	FUNCTION_49
0x40004f4	        0x48c1e008	                              shl rax, 8	       719	libbfd.c	FUNCTION_49
0x40004f8	         0xfb65706	               movzx edx, byte [rdi + 6]	       720	libbfd.c	FUNCTION_49
0x40004fc	          0x4809d0	                             or rax, rdx	       720	libbfd.c	FUNCTION_49
0x40004ff	        0x48c1e008	                              shl rax, 8	       720	libbfd.c	FUNCTION_49
0x4000503	         0xfb65705	               movzx edx, byte [rdi + 5]	       721	libbfd.c	FUNCTION_49
0x4000507	          0x4809d0	                             or rax, rdx	       721	libbfd.c	FUNCTION_49
0x400050a	        0x48c1e008	                              shl rax, 8	       721	libbfd.c	FUNCTION_49
0x400050e	         0xfb65704	               movzx edx, byte [rdi + 4]	       722	libbfd.c	FUNCTION_49
0x4000512	          0x4809d0	                             or rax, rdx	       722	libbfd.c	FUNCTION_49
0x4000515	        0x48c1e008	                              shl rax, 8	       722	libbfd.c	FUNCTION_49
0x4000519	         0xfb65703	               movzx edx, byte [rdi + 3]	       723	libbfd.c	FUNCTION_49
0x400051d	          0x4809d0	                             or rax, rdx	       723	libbfd.c	FUNCTION_49
0x4000520	        0x48c1e008	                              shl rax, 8	       723	libbfd.c	FUNCTION_49
0x4000524	         0xfb65702	               movzx edx, byte [rdi + 2]	       724	libbfd.c	FUNCTION_49
0x4000528	          0x4809d0	                             or rax, rdx	       724	libbfd.c	FUNCTION_49
0x400052b	        0x48c1e008	                              shl rax, 8	       724	libbfd.c	FUNCTION_49
0x400052f	         0xfb65701	               movzx edx, byte [rdi + 1]	       725	libbfd.c	FUNCTION_49
0x4000533	          0x4809d0	                             or rax, rdx	       725	libbfd.c	FUNCTION_49
0x4000536	        0x48c1e008	                              shl rax, 8	       725	libbfd.c	FUNCTION_49
0x400053a	           0xfb617	                   movzx edx, byte [rdi]	       728	libbfd.c	FUNCTION_49
0x400053d	          0x4809d0	                             or rax, rdx	       728	libbfd.c	FUNCTION_49
0x4000540	              0xc3	                                     ret	       734	libbfd.c	FUNCTION_49
