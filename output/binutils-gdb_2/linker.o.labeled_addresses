_bfd_handle_already_linked	IF,11:ELSE,5:SWITCH,1:functions,0:CALL,18:WHILE,0:FOR,0:DO,0	175
0x40028fa	            0x4156	                                push r14	      2816	linker.c	FUNCTION_40
0x40028fc	            0x4155	                                push r13	      2816	linker.c	FUNCTION_40
0x40028fe	            0x4154	                                push r12	      2816	linker.c	FUNCTION_40
0x4002900	              0x55	                                push rbp	      2816	linker.c	FUNCTION_40
0x4002901	              0x53	                                push rbx	      2816	linker.c	FUNCTION_40
0x4002902	        0x4883ec20	                           sub rsp, 0x20	      2816	linker.c	FUNCTION_40
0x4002906	          0x4889fb	                            mov rbx, rdi	      2816	linker.c	FUNCTION_40
0x4002909	          0x4889f5	                            mov rbp, rsi	      2816	linker.c	FUNCTION_40
0x400290c	          0x4989d4	                            mov r12, rdx	      2816	linker.c	FUNCTION_40
0x400290f	    0x64488b042528	                mov rax, qword fs:[0x28]	      2816	linker.c	FUNCTION_40
0x4002918	      0x4889442418	             mov qword [rsp + 0x18], rax	      2816	linker.c	FUNCTION_40
0x400291d	            0x31c0	                            xor eax, eax	      2816	linker.c	FUNCTION_40
0x400291f	          0x8b4720	            mov eax, dword [rdi + 0x20] 	      2817	linker.c	FUNCTION_40	SWITCH_1
0x4002922	      0x2500000c00	                        and eax, 0xc0000	      2817	linker.c	FUNCTION_40	SWITCH_1
0x4002927	      0x3d00000400	                        cmp eax, 0x40000	      2817	linker.c	FUNCTION_40	SWITCH_1
0x400292c	            0x746b	                            je 0x4002999	      2817	linker.c	FUNCTION_40	SWITCH_1
0x400292e	      0x3d00000400	                        cmp eax, 0x40000	      2817	linker.c	FUNCTION_40	SWITCH_1
0x4002933	            0x7706	                            ja 0x400293b	      2817	linker.c	FUNCTION_40	SWITCH_1
0x4002935	            0x85c0	                           test eax, eax	      2817	linker.c	FUNCTION_40	SWITCH_1
0x4002937	            0x742c	                            je 0x4002965	      2817	linker.c	FUNCTION_40	SWITCH_1
0x4002939	            0xeb16	                           jmp 0x4002951	      2817	linker.c	FUNCTION_40	SWITCH_1
0x400293b	      0x3d00000800	                        cmp eax, 0x80000	      2817	linker.c	FUNCTION_40	SWITCH_1
0x4002940	     0xf848c000000	                            je 0x40029d2	      2817	linker.c	FUNCTION_40	SWITCH_1
0x4002946	      0x3d00000c00	                        cmp eax, 0xc0000	      2817	linker.c	FUNCTION_40	SWITCH_1
0x400294b	     0xf84de000000	                            je 0x4002a2f	      2817	linker.c	FUNCTION_40	SWITCH_1
0x4002951	      0xba00000000	                              mov edx, 0	      2820	linker.c	FUNCTION_40	SWITCH_1	CALL_1
0x4002956	      0xbe040b0000	                          mov esi, 0xb04	      2820	linker.c	FUNCTION_40	SWITCH_1	CALL_1
0x400295b	      0xbf00000000	                              mov edi, 0	      2820	linker.c	FUNCTION_40	SWITCH_1	CALL_1
0x4002960	      0xe800000000	                          call 0x4002965	      2820	linker.c	FUNCTION_40	SWITCH_1	CALL_1
0x4002965	    0x488b87f00000	            mov rax, qword [rdi + 0xf0] 	      2829	linker.c	FUNCTION_40	SWITCH_1	IF_1
0x400296c	        0xf6404840	           test byte [rax + 0x48], 0x40 	      2829	linker.c	FUNCTION_40	SWITCH_1	IF_1
0x4002970	     0xf8435020000	                            je 0x4002bab	      2829	linker.c	FUNCTION_40	SWITCH_1	IF_1
0x4002976	        0x488b4608	                mov rax, qword [rsi + 8]	      2830	linker.c	FUNCTION_40	SWITCH_1	IF_1
0x400297a	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	      2830	linker.c	FUNCTION_40	SWITCH_1	IF_1
0x4002981	        0xf6404620	           test byte [rax + 0x46], 0x20 	      2830	linker.c	FUNCTION_40	SWITCH_1	IF_1
0x4002985	     0xf8420020000	                            je 0x4002bab	      2830	linker.c	FUNCTION_40	SWITCH_1	IF_1
0x400298b	        0x48897d08	                mov qword [rbp + 8], rdi	      2832	linker.c	FUNCTION_40	SWITCH_1	IF_1
0x400298f	      0xb800000000	                              mov eax, 0	      2833	linker.c	FUNCTION_40	SWITCH_1	IF_1
0x4002994	      0xe92a020000	                           jmp 0x4002bc3	      2833	linker.c	FUNCTION_40	SWITCH_1	IF_1
0x4002999	        0x488b4220	            mov rax, qword [rdx + 0x20] 	      2838	linker.c	FUNCTION_40	SWITCH_1	CALL_2
0x400299d	        0x4c8b6058	            mov r12, qword [rax + 0x58] 	      2838	linker.c	FUNCTION_40	SWITCH_1	CALL_2
0x40029a1	    0x4c8baff00000	            mov r13, qword [rdi + 0xf0] 	      2838	linker.c	FUNCTION_40	SWITCH_1	CALL_2
0x40029a8	      0xba05000000	                              mov edx, 5	      2840	linker.c	FUNCTION_40	SWITCH_1	CALL_3
0x40029ad	      0xbe00000000	                              mov esi, 0	      2840	linker.c	FUNCTION_40	SWITCH_1	CALL_3
0x40029b2	      0xbf00000000	                              mov edi, 0	      2840	linker.c	FUNCTION_40	SWITCH_1	CALL_3
0x40029b7	      0xe800000000	                          call 0x40029bc	      2840	linker.c	FUNCTION_40	SWITCH_1	CALL_3
0x40029bc	          0x4889da	                            mov rdx, rbx	      2838	linker.c	FUNCTION_40	SWITCH_1	CALL_2
0x40029bf	          0x4c89ee	                            mov rsi, r13	      2838	linker.c	FUNCTION_40	SWITCH_1	CALL_2
0x40029c2	          0x4889c7	                            mov rdi, rax	      2838	linker.c	FUNCTION_40	SWITCH_1	CALL_2
0x40029c5	      0xb800000000	                              mov eax, 0	      2838	linker.c	FUNCTION_40	SWITCH_1	CALL_2
0x40029ca	          0x41ffd4	                                call r12	      2838	linker.c	FUNCTION_40	SWITCH_1	CALL_2
0x40029cd	      0xe9d9010000	                           jmp 0x4002bab	      2842	linker.c	FUNCTION_40	SWITCH_1
0x40029d2	        0x488b4608	                mov rax, qword [rsi + 8]	      2845	linker.c	FUNCTION_40	SWITCH_1	IF_2
0x40029d6	    0x488b90f00000	            mov rdx, qword [rax + 0xf0] 	      2845	linker.c	FUNCTION_40	SWITCH_1	IF_2
0x40029dd	        0xf6424620	           test byte [rdx + 0x46], 0x20 	      2845	linker.c	FUNCTION_40	SWITCH_1	IF_2
0x40029e1	     0xf85c4010000	                           jne 0x4002bab	      2845	linker.c	FUNCTION_40	SWITCH_1	IF_2
0x40029e7	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2847	linker.c	FUNCTION_40	SWITCH_1	ELSE_1	IF_3
0x40029eb	        0x48394738	            cmp qword [rdi + 0x38], rax 	      2847	linker.c	FUNCTION_40	SWITCH_1	ELSE_1	IF_3
0x40029ef	     0xf84b6010000	                            je 0x4002bab	      2847	linker.c	FUNCTION_40	SWITCH_1	ELSE_1	IF_3
0x40029f5	      0x498b442420	            mov rax, qword [r12 + 0x20] 	      2848	linker.c	FUNCTION_40	SWITCH_1	ELSE_1	IF_3	CALL_4
0x40029fa	        0x4c8b6058	            mov r12, qword [rax + 0x58] 	      2848	linker.c	FUNCTION_40	SWITCH_1	ELSE_1	IF_3	CALL_4
0x40029fe	    0x4c8baff00000	            mov r13, qword [rdi + 0xf0] 	      2848	linker.c	FUNCTION_40	SWITCH_1	ELSE_1	IF_3	CALL_4
0x4002a05	      0xba05000000	                              mov edx, 5	      2850	linker.c	FUNCTION_40	SWITCH_1	ELSE_1	IF_3	CALL_5
0x4002a0a	      0xbe00000000	                              mov esi, 0	      2850	linker.c	FUNCTION_40	SWITCH_1	ELSE_1	IF_3	CALL_5
0x4002a0f	      0xbf00000000	                              mov edi, 0	      2850	linker.c	FUNCTION_40	SWITCH_1	ELSE_1	IF_3	CALL_5
0x4002a14	      0xe800000000	                          call 0x4002a19	      2850	linker.c	FUNCTION_40	SWITCH_1	ELSE_1	IF_3	CALL_5
0x4002a19	          0x4889da	                            mov rdx, rbx	      2848	linker.c	FUNCTION_40	SWITCH_1	ELSE_1	IF_3	CALL_4
0x4002a1c	          0x4c89ee	                            mov rsi, r13	      2848	linker.c	FUNCTION_40	SWITCH_1	ELSE_1	IF_3	CALL_4
0x4002a1f	          0x4889c7	                            mov rdi, rax	      2848	linker.c	FUNCTION_40	SWITCH_1	ELSE_1	IF_3	CALL_4
0x4002a22	      0xb800000000	                              mov eax, 0	      2848	linker.c	FUNCTION_40	SWITCH_1	ELSE_1	IF_3	CALL_4
0x4002a27	          0x41ffd4	                                call r12	      2848	linker.c	FUNCTION_40	SWITCH_1	ELSE_1	IF_3	CALL_4
0x4002a2a	      0xe97c010000	                           jmp 0x4002bab	      2848	linker.c	FUNCTION_40	SWITCH_1	ELSE_1	IF_3	CALL_4
0x4002a2f	        0x488b4608	                mov rax, qword [rsi + 8]	      2855	linker.c	FUNCTION_40	SWITCH_1	IF_4
0x4002a33	    0x488b90f00000	            mov rdx, qword [rax + 0xf0] 	      2855	linker.c	FUNCTION_40	SWITCH_1	IF_4
0x4002a3a	        0xf6424620	           test byte [rdx + 0x46], 0x20 	      2855	linker.c	FUNCTION_40	SWITCH_1	IF_4
0x4002a3e	     0xf8567010000	                           jne 0x4002bab	      2855	linker.c	FUNCTION_40	SWITCH_1	IF_4
0x4002a44	        0x488b5738	            mov rdx, qword [rdi + 0x38] 	      2857	linker.c	FUNCTION_40	SWITCH_1	ELSE_2	IF_5
0x4002a48	        0x483b5038	            cmp rdx, qword [rax + 0x38] 	      2857	linker.c	FUNCTION_40	SWITCH_1	ELSE_2	IF_5
0x4002a4c	            0x743a	                            je 0x4002a88	      2857	linker.c	FUNCTION_40	SWITCH_1	ELSE_2	IF_5
0x4002a4e	      0x498b442420	            mov rax, qword [r12 + 0x20] 	      2858	linker.c	FUNCTION_40	SWITCH_1	ELSE_2	IF_5	CALL_6
0x4002a53	        0x4c8b6058	            mov r12, qword [rax + 0x58] 	      2858	linker.c	FUNCTION_40	SWITCH_1	ELSE_2	IF_5	CALL_6
0x4002a57	    0x4c8baff00000	            mov r13, qword [rdi + 0xf0] 	      2858	linker.c	FUNCTION_40	SWITCH_1	ELSE_2	IF_5	CALL_6
0x4002a5e	      0xba05000000	                              mov edx, 5	      2860	linker.c	FUNCTION_40	SWITCH_1	ELSE_2	IF_5	CALL_7
0x4002a63	      0xbe00000000	                              mov esi, 0	      2860	linker.c	FUNCTION_40	SWITCH_1	ELSE_2	IF_5	CALL_7
0x4002a68	      0xbf00000000	                              mov edi, 0	      2860	linker.c	FUNCTION_40	SWITCH_1	ELSE_2	IF_5	CALL_7
0x4002a6d	      0xe800000000	                          call 0x4002a72	      2860	linker.c	FUNCTION_40	SWITCH_1	ELSE_2	IF_5	CALL_7
0x4002a72	          0x4889da	                            mov rdx, rbx	      2858	linker.c	FUNCTION_40	SWITCH_1	ELSE_2	IF_5	CALL_6
0x4002a75	          0x4c89ee	                            mov rsi, r13	      2858	linker.c	FUNCTION_40	SWITCH_1	ELSE_2	IF_5	CALL_6
0x4002a78	          0x4889c7	                            mov rdi, rax	      2858	linker.c	FUNCTION_40	SWITCH_1	ELSE_2	IF_5	CALL_6
0x4002a7b	      0xb800000000	                              mov eax, 0	      2858	linker.c	FUNCTION_40	SWITCH_1	ELSE_2	IF_5	CALL_6
0x4002a80	          0x41ffd4	                                call r12	      2858	linker.c	FUNCTION_40	SWITCH_1	ELSE_2	IF_5	CALL_6
0x4002a83	      0xe923010000	                           jmp 0x4002bab	      2858	linker.c	FUNCTION_40	SWITCH_1	ELSE_2	IF_5	CALL_6
0x4002a88	          0x4885d2	                           test rdx, rdx	      2862	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6
0x4002a8b	     0xf841a010000	                            je 0x4002bab	      2862	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6
0x4002a91	    0x48c744241000	               mov qword [rsp + 0x10], 0	      2864	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6
0x4002a9a	    0x488bbff00000	            mov rdi, qword [rdi + 0xf0] 	      2866	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_7	CALL_8
0x4002aa1	      0x488d542408	                      lea rdx, [rsp + 8]	      2866	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_7	CALL_8
0x4002aa6	          0x4889de	                            mov rsi, rbx	      2866	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_7	CALL_8
0x4002aa9	      0xe800000000	                          call 0x4002aae	      2866	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_7	CALL_8
0x4002aae	            0x85c0	                           test eax, eax	      2866	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_7	CALL_8
0x4002ab0	            0x753a	                           jne 0x4002aec	      2866	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_7	CALL_8
0x4002ab2	      0x498b442420	            mov rax, qword [r12 + 0x20] 	      2867	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_7	CALL_9
0x4002ab7	        0x4c8b6058	            mov r12, qword [rax + 0x58] 	      2867	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_7	CALL_9
0x4002abb	    0x4c8babf00000	            mov r13, qword [rbx + 0xf0] 	      2867	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_7	CALL_9
0x4002ac2	      0xba05000000	                              mov edx, 5	      2869	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_7	CALL_10
0x4002ac7	      0xbe00000000	                              mov esi, 0	      2869	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_7	CALL_10
0x4002acc	      0xbf00000000	                              mov edi, 0	      2869	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_7	CALL_10
0x4002ad1	      0xe800000000	                          call 0x4002ad6	      2869	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_7	CALL_10
0x4002ad6	          0x4889da	                            mov rdx, rbx	      2867	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_7	CALL_9
0x4002ad9	          0x4c89ee	                            mov rsi, r13	      2867	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_7	CALL_9
0x4002adc	          0x4889c7	                            mov rdi, rax	      2867	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_7	CALL_9
0x4002adf	      0xb800000000	                              mov eax, 0	      2867	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_7	CALL_9
0x4002ae4	          0x41ffd4	                                call r12	      2867	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_7	CALL_9
0x4002ae7	      0xe9a1000000	                           jmp 0x4002b8d	      2867	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_7	CALL_9
0x4002aec	        0x488b7508	                mov rsi, qword [rbp + 8]	      2871	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_11
0x4002af0	    0x488bbef00000	            mov rdi, qword [rsi + 0xf0] 	      2871	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_11
0x4002af7	      0x488d542410	                   lea rdx, [rsp + 0x10]	      2871	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_11
0x4002afc	      0xe800000000	                          call 0x4002b01	      2871	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_11
0x4002b01	            0x85c0	                           test eax, eax	      2871	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_11
0x4002b03	            0x753c	                           jne 0x4002b41	      2871	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_11
0x4002b05	      0x498b442420	            mov rax, qword [r12 + 0x20] 	      2873	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_12
0x4002b0a	        0x4c8b6858	            mov r13, qword [rax + 0x58] 	      2873	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_12
0x4002b0e	        0x4c8b6508	                mov r12, qword [rbp + 8]	      2876	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8
0x4002b12	    0x4d8bb424f000	            mov r14, qword [r12 + 0xf0] 	      2873	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_12
0x4002b1a	      0xba05000000	                              mov edx, 5	      2875	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_13
0x4002b1f	      0xbe00000000	                              mov esi, 0	      2875	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_13
0x4002b24	      0xbf00000000	                              mov edi, 0	      2875	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_13
0x4002b29	      0xe800000000	                          call 0x4002b2e	      2875	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_13
0x4002b2e	          0x4c89e2	                            mov rdx, r12	      2873	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_12
0x4002b31	          0x4c89f6	                            mov rsi, r14	      2873	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_12
0x4002b34	          0x4889c7	                            mov rdi, rax	      2873	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_12
0x4002b37	      0xb800000000	                              mov eax, 0	      2873	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_12
0x4002b3c	          0x41ffd5	                                call r13	      2873	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_12
0x4002b3f	            0xeb4c	                           jmp 0x4002b8d	      2873	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_4	IF_8	CALL_12
0x4002b41	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	      2877	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_14
0x4002b45	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      2877	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_14
0x4002b4a	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      2877	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_14
0x4002b4f	      0xe800000000	                          call 0x4002b54	      2877	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_14
0x4002b54	            0x85c0	                           test eax, eax	      2877	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_14
0x4002b56	            0x7435	                            je 0x4002b8d	      2877	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_14
0x4002b58	      0x498b442420	            mov rax, qword [r12 + 0x20] 	      2878	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_15
0x4002b5d	        0x4c8b6058	            mov r12, qword [rax + 0x58] 	      2878	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_15
0x4002b61	    0x4c8babf00000	            mov r13, qword [rbx + 0xf0] 	      2878	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_15
0x4002b68	      0xba05000000	                              mov edx, 5	      2880	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_16
0x4002b6d	      0xbe00000000	                              mov esi, 0	      2880	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_16
0x4002b72	      0xbf00000000	                              mov edi, 0	      2880	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_16
0x4002b77	      0xe800000000	                          call 0x4002b7c	      2880	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_16
0x4002b7c	          0x4889da	                            mov rdx, rbx	      2878	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_15
0x4002b7f	          0x4c89ee	                            mov rsi, r13	      2878	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_15
0x4002b82	          0x4889c7	                            mov rdi, rax	      2878	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_15
0x4002b85	      0xb800000000	                              mov eax, 0	      2878	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_15
0x4002b8a	          0x41ffd4	                                call r12	      2878	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	ELSE_5	IF_9	CALL_15
0x4002b8d	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      2883	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_10
0x4002b92	          0x4885ff	                           test rdi, rdi	      2883	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_10
0x4002b95	            0x7405	                            je 0x4002b9c	      2883	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_10
0x4002b97	      0xe800000000	                          call 0x4002b9c	      2884	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	CALL_17
0x4002b9c	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      2885	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_11
0x4002ba1	          0x4885ff	                           test rdi, rdi	      2885	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_11
0x4002ba4	            0x7405	                            je 0x4002bab	      2885	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	IF_11
0x4002ba6	      0xe800000000	                          call 0x4002bab	      2886	linker.c	FUNCTION_40	SWITCH_1	ELSE_3	IF_6	CALL_18
0x4002bab	    0x48c743680000	               mov qword [rbx + 0x68], 0	      2896	linker.c	FUNCTION_40
0x4002bb3	        0x488b4508	                mov rax, qword [rbp + 8]	      2897	linker.c	FUNCTION_40
0x4002bb7	    0x488983c80000	             mov qword [rbx + 0xc8], rax	      2897	linker.c	FUNCTION_40
0x4002bbe	      0xb801000000	                              mov eax, 1	      2898	linker.c	FUNCTION_40
0x4002bc3	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      2899	linker.c	FUNCTION_40
0x4002bc8	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2899	linker.c	FUNCTION_40
0x4002bd1	            0x7405	                            je 0x4002bd8	      2899	linker.c	FUNCTION_40
0x4002bd3	      0xe800000000	                          call 0x4002bd8	      2899	linker.c	FUNCTION_40
0x4002bd8	        0x4883c420	                           add rsp, 0x20	      2899	linker.c	FUNCTION_40
0x4002bdc	              0x5b	                                 pop rbx	      2899	linker.c	FUNCTION_40
0x4002bdd	              0x5d	                                 pop rbp	      2899	linker.c	FUNCTION_40
0x4002bde	            0x415c	                                 pop r12	      2899	linker.c	FUNCTION_40
0x4002be0	            0x415d	                                 pop r13	      2899	linker.c	FUNCTION_40
0x4002be2	            0x415e	                                 pop r14	      2899	linker.c	FUNCTION_40
0x4002be4	              0xc3	                                     ret	      2899	linker.c	FUNCTION_40
_bfd_nolink_bfd_link_split_section	IF,0:ELSE,0:SWITCH,0:functions,0:CALL,1:WHILE,0:FOR,0:DO,0	4
0x400322c	        0x4883ec08	                              sub rsp, 8	      3478	linker.c	FUNCTION_62
0x4003230	      0xe800000000	                          call 0x4003235	      3479	linker.c	FUNCTION_62	CALL_1
0x4003235	        0x4883c408	                              add rsp, 8	      3480	linker.c	FUNCTION_62
0x4003239	              0xc3	                                     ret	      3480	linker.c	FUNCTION_62
bfd_generic_define_start_stop	IF,1:ELSE,0:SWITCH,0:functions,0:CALL,1:WHILE,0:FOR,0:DO,0	23
0x4002ef7	              0x53	                                push rbx	      3160	linker.c	FUNCTION_47
0x4002ef8	          0x4889d3	                            mov rbx, rdx	      3160	linker.c	FUNCTION_47
0x4002efb	        0x488b7f28	            mov rdi, qword [rdi + 0x28] 	      3163	linker.c	FUNCTION_47	CALL_1
0x4002eff	    0x41b801000000	                              mov r8d, 1	      3163	linker.c	FUNCTION_47	CALL_1
0x4002f05	      0xb900000000	                              mov ecx, 0	      3163	linker.c	FUNCTION_47	CALL_1
0x4002f0a	      0xba00000000	                              mov edx, 0	      3163	linker.c	FUNCTION_47	CALL_1
0x4002f0f	      0xe800000000	                          call 0x4002f14	      3163	linker.c	FUNCTION_47	CALL_1
0x4002f14	          0x4885c0	                           test rax, rax	      3164	linker.c	FUNCTION_47	IF_1
0x4002f17	            0x7429	                            je 0x4002f42	      3164	linker.c	FUNCTION_47	IF_1
0x4002f19	          0x4889c2	                            mov rdx, rax	      3164	linker.c	FUNCTION_47	IF_1
0x4002f1c	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      3165	linker.c	FUNCTION_47	IF_1
0x4002f20	          0x8d48ff	                      lea ecx, [rax - 1]	      3165	linker.c	FUNCTION_47	IF_1
0x4002f23	      0xb800000000	                              mov eax, 0	      3173	linker.c	FUNCTION_47
0x4002f28	          0x80f901	                               cmp cl, 1	      3165	linker.c	FUNCTION_47	IF_1
0x4002f2b	            0x771a	                            ja 0x4002f47	      3165	linker.c	FUNCTION_47	IF_1
0x4002f2d	        0xc6421803	                mov byte [rdx + 0x18], 3	      3168	linker.c	FUNCTION_47	IF_1
0x4002f31	        0x48895a28	             mov qword [rdx + 0x28], rbx	      3169	linker.c	FUNCTION_47	IF_1
0x4002f35	    0x48c742300000	               mov qword [rdx + 0x30], 0	      3170	linker.c	FUNCTION_47	IF_1
0x4002f3d	          0x4889d0	                            mov rax, rdx	      3171	linker.c	FUNCTION_47	IF_1
0x4002f40	            0xeb05	                           jmp 0x4002f47	      3171	linker.c	FUNCTION_47	IF_1
0x4002f42	      0xb800000000	                              mov eax, 0	      3173	linker.c	FUNCTION_47
0x4002f47	              0x5b	                                 pop rbx	      3174	linker.c	FUNCTION_47
0x4002f48	              0xc3	                                     ret	      3174	linker.c	FUNCTION_47
bfd_generic_define_common_symbol	IF,1:ELSE,0:SWITCH,0:functions,0:CALL,3:WHILE,0:FOR,0:DO,0	57
0x4002e3c	            0x4156	                                push r14	      3076	linker.c	FUNCTION_45
0x4002e3e	            0x4155	                                push r13	      3076	linker.c	FUNCTION_45
0x4002e40	            0x4154	                                push r12	      3076	linker.c	FUNCTION_45
0x4002e42	              0x55	                                push rbp	      3076	linker.c	FUNCTION_45
0x4002e43	              0x53	                                push rbx	      3076	linker.c	FUNCTION_45
0x4002e44	          0x4889fb	                            mov rbx, rdi	      3076	linker.c	FUNCTION_45
0x4002e47	          0x4989d4	                            mov r12, rdx	      3076	linker.c	FUNCTION_45
0x4002e4a	          0x4885d2	                           test rdx, rdx	      3081	linker.c	FUNCTION_45	CALL_1
0x4002e4d	            0x7406	                            je 0x4002e55	      3081	linker.c	FUNCTION_45	CALL_1
0x4002e4f	        0x807a1805	                cmp byte [rdx + 0x18], 5	      3081	linker.c	FUNCTION_45	CALL_1
0x4002e53	            0x740f	                            je 0x4002e64	      3081	linker.c	FUNCTION_45	CALL_1
0x4002e55	      0xbe090c0000	                          mov esi, 0xc09	      3081	linker.c	FUNCTION_45	CALL_1
0x4002e5a	      0xbf00000000	                              mov edi, 0	      3081	linker.c	FUNCTION_45	CALL_1
0x4002e5f	      0xe800000000	                          call 0x4002e64	      3081	linker.c	FUNCTION_45	CALL_1
0x4002e64	      0x4d8b742430	            mov r14, qword [r12 + 0x30] 	      3083	linker.c	FUNCTION_45
0x4002e69	      0x498b442428	            mov rax, qword [r12 + 0x28] 	      3084	linker.c	FUNCTION_45
0x4002e6e	          0x448b28	                   mov r13d, dword [rax]	      3084	linker.c	FUNCTION_45
0x4002e71	        0x488b6808	                mov rbp, qword [rax + 8]	      3085	linker.c	FUNCTION_45
0x4002e75	          0x4889df	                            mov rdi, rbx	      3089	linker.c	FUNCTION_45	CALL_2
0x4002e78	      0xe800000000	                          call 0x4002e7d	      3089	linker.c	FUNCTION_45	CALL_2
0x4002e7d	            0x89c3	                            mov ebx, eax	      3089	linker.c	FUNCTION_45	CALL_2
0x4002e7f	          0x4489e9	                           mov ecx, r13d	      3089	linker.c	FUNCTION_45	CALL_2
0x4002e82	            0xd3e3	                             shl ebx, cl	      3089	linker.c	FUNCTION_45	CALL_2
0x4002e84	          0x4885db	                           test rbx, rbx	      3090	linker.c	FUNCTION_45	CALL_3
0x4002e87	            0x740e	                            je 0x4002e97	      3090	linker.c	FUNCTION_45	CALL_3
0x4002e89	          0x4889d8	                            mov rax, rbx	      3090	linker.c	FUNCTION_45	CALL_3
0x4002e8c	          0x48f7d8	                                 neg rax	      3090	linker.c	FUNCTION_45	CALL_3
0x4002e8f	          0x4821d8	                            and rax, rbx	      3090	linker.c	FUNCTION_45	CALL_3
0x4002e92	          0x4839c3	                            cmp rbx, rax	      3090	linker.c	FUNCTION_45	CALL_3
0x4002e95	            0x740f	                            je 0x4002ea6	      3090	linker.c	FUNCTION_45	CALL_3
0x4002e97	      0xbe120c0000	                          mov esi, 0xc12	      3090	linker.c	FUNCTION_45	CALL_3
0x4002e9c	      0xbf00000000	                              mov edi, 0	      3090	linker.c	FUNCTION_45	CALL_3
0x4002ea1	      0xe800000000	                          call 0x4002ea6	      3090	linker.c	FUNCTION_45	CALL_3
0x4002ea6	        0x488b4538	            mov rax, qword [rbp + 0x38] 	      3092	linker.c	FUNCTION_45
0x4002eaa	      0x488d4403ff	                lea rax, [rbx + rax - 1]	      3092	linker.c	FUNCTION_45
0x4002eaf	          0x48f7db	                                 neg rbx	      3092	linker.c	FUNCTION_45
0x4002eb2	          0x4821c3	                            and rbx, rax	      3092	linker.c	FUNCTION_45
0x4002eb5	        0x48895d38	            mov qword [rbp + 0x38], rbx 	      3092	linker.c	FUNCTION_45
0x4002eb9	        0x443b6d70	           cmp r13d, dword [rbp + 0x70] 	      3095	linker.c	FUNCTION_45	IF_1
0x4002ebd	            0x7604	                           jbe 0x4002ec3	      3095	linker.c	FUNCTION_45	IF_1
0x4002ebf	        0x44896d70	           mov dword [rbp + 0x70], r13d 	      3096	linker.c	FUNCTION_45	IF_1
0x4002ec3	    0x41c644241803	                mov byte [r12 + 0x18], 3	      3099	linker.c	FUNCTION_45
0x4002ec9	      0x49896c2428	             mov qword [r12 + 0x28], rbp	      3100	linker.c	FUNCTION_45
0x4002ece	        0x488b4538	            mov rax, qword [rbp + 0x38] 	      3101	linker.c	FUNCTION_45
0x4002ed2	      0x4989442430	             mov qword [r12 + 0x30], rax	      3101	linker.c	FUNCTION_45
0x4002ed7	        0x4c017538	            add qword [rbp + 0x38], r14 	      3104	linker.c	FUNCTION_45
0x4002edb	          0x8b4520	            mov eax, dword [rbp + 0x20] 	      3109	linker.c	FUNCTION_45
0x4002ede	          0x80e4ef	                            and ah, 0xef	      3109	linker.c	FUNCTION_45
0x4002ee1	          0x83c801	                               or eax, 1	      3109	linker.c	FUNCTION_45
0x4002ee4	          0x894520	            mov dword [rbp + 0x20], eax 	      3109	linker.c	FUNCTION_45
0x4002ee7	      0xb801000000	                              mov eax, 1	      3111	linker.c	FUNCTION_45
0x4002eec	              0x5b	                                 pop rbx	      3111	linker.c	FUNCTION_45
0x4002eed	              0x5d	                                 pop rbp	      3111	linker.c	FUNCTION_45
0x4002eee	            0x415c	                                 pop r12	      3111	linker.c	FUNCTION_45
0x4002ef0	            0x415d	                                 pop r13	      3111	linker.c	FUNCTION_45
0x4002ef2	            0x415e	                                 pop r14	      3111	linker.c	FUNCTION_45
0x4002ef4	              0xc3	                                     ret	      3111	linker.c	FUNCTION_45
_bfd_generic_link_add_archive_symbols	IF,17:ELSE,0:SWITCH,0:functions,0:CALL,15:WHILE,1:FOR,1:DO,2	177
0x4000e93	            0x4157	                                push r15	       899	linker.c	FUNCTION_17
0x4000e95	            0x4156	                                push r14	       899	linker.c	FUNCTION_17
0x4000e97	            0x4155	                                push r13	       899	linker.c	FUNCTION_17
0x4000e99	            0x4154	                                push r12	       899	linker.c	FUNCTION_17
0x4000e9b	              0x55	                                push rbp	       899	linker.c	FUNCTION_17
0x4000e9c	              0x53	                                push rbx	       899	linker.c	FUNCTION_17
0x4000e9d	        0x4883ec58	                           sub rsp, 0x58	       899	linker.c	FUNCTION_17
0x4000ea1	          0x4989fd	                            mov r13, rdi	       899	linker.c	FUNCTION_17
0x4000ea4	      0x4889542408	                mov qword [rsp + 8], rdx	       899	linker.c	FUNCTION_17
0x4000ea9	    0x64488b042528	                mov rax, qword fs:[0x28]	       899	linker.c	FUNCTION_17
0x4000eb2	      0x4889442448	             mov qword [rsp + 0x48], rax	       899	linker.c	FUNCTION_17
0x4000eb7	            0x31c0	                            xor eax, eax	       899	linker.c	FUNCTION_17
0x4000eb9	        0x807f4700	                cmp byte [rdi + 0x47], 0	       904	linker.c	FUNCTION_17	IF_1	CALL_2
0x4000ebd	            0x782f	                            js 0x4000eee	       904	linker.c	FUNCTION_17	IF_1	CALL_2
0x4000ebf	      0xbe00000000	                              mov esi, 0	       907	linker.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x4000ec4	      0xe800000000	                          call 0x4000ec9	       907	linker.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x4000ec9	          0x4889c2	                            mov rdx, rax	       907	linker.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x4000ecc	      0xb801000000	                              mov eax, 1	       908	linker.c	FUNCTION_17	IF_1	IF_2
0x4000ed1	          0x4885d2	                           test rdx, rdx	       907	linker.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x4000ed4	     0xf8467020000	                            je 0x4001141	       907	linker.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x4000eda	      0xbf08000000	                              mov edi, 8	       909	linker.c	FUNCTION_17	IF_1	CALL_4
0x4000edf	      0xe800000000	                          call 0x4000ee4	       909	linker.c	FUNCTION_17	IF_1	CALL_4
0x4000ee4	      0xb800000000	                              mov eax, 0	       910	linker.c	FUNCTION_17	IF_1
0x4000ee9	      0xe953020000	                           jmp 0x4001141	       910	linker.c	FUNCTION_17	IF_1
0x4000eee	          0x4989f7	                            mov r15, rsi	       910	linker.c	FUNCTION_17	IF_1
0x4000ef1	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	       913	linker.c	FUNCTION_17	CALL_5
0x4000ef8	        0x488b7820	            mov rdi, qword [rax + 0x20] 	       913	linker.c	FUNCTION_17	CALL_5
0x4000efc	      0xb801000000	                              mov eax, 1	       915	linker.c	FUNCTION_17	IF_3
0x4000f01	          0x4885ff	                           test rdi, rdi	       914	linker.c	FUNCTION_17	IF_3
0x4000f04	     0xf8437020000	                            je 0x4001141	       914	linker.c	FUNCTION_17	IF_3
0x4000f0a	      0xe800000000	                          call 0x4000f0f	       917	linker.c	FUNCTION_17	CALL_6
0x4000f0f	          0x4989c6	                            mov r14, rax	       917	linker.c	FUNCTION_17	CALL_6
0x4000f12	      0xb800000000	                              mov eax, 0	       919	linker.c	FUNCTION_17	IF_4
0x4000f17	          0x4d85f6	                           test r14, r14	       918	linker.c	FUNCTION_17	IF_4
0x4000f1a	     0xf8421020000	                            je 0x4001141	       918	linker.c	FUNCTION_17	IF_4
0x4000f20	      0x4c896c2430	             mov qword [rsp + 0x30], r13	       983	linker.c	FUNCTION_17	DO_1	FOR_1	IF_14
0x4000f25	    0xc74424440000	               mov dword [rsp + 0x44], 0	       928	linker.c	FUNCTION_17	DO_1
0x4000f2d	      0x488b442430	            mov rax, qword [rsp + 0x30] 	       932	linker.c	FUNCTION_17	DO_1	CALL_7
0x4000f32	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	       932	linker.c	FUNCTION_17	DO_1	CALL_7
0x4000f39	        0x4c8b6818	            mov r13, qword [rax + 0x18] 	       932	linker.c	FUNCTION_17	DO_1	CALL_7
0x4000f3d	        0x488b4020	            mov rax, qword [rax + 0x20] 	       933	linker.c	FUNCTION_17	DO_1	CALL_8
0x4000f41	        0x48c1e004	                              shl rax, 4	       933	linker.c	FUNCTION_17	DO_1	CALL_8
0x4000f45	          0x4c01e8	                            add rax, r13	       933	linker.c	FUNCTION_17	DO_1	CALL_8
0x4000f48	        0x48890424	                    mov qword [rsp], rax	       933	linker.c	FUNCTION_17	DO_1	CALL_8
0x4000f4c	          0x4939c5	                            cmp r13, rax	       934	linker.c	FUNCTION_17	DO_1	FOR_1
0x4000f4f	     0xf83df010000	                           jae 0x4001134	       934	linker.c	FUNCTION_17	DO_1	FOR_1
0x4000f55	          0x4c89eb	                            mov rbx, r13	       934	linker.c	FUNCTION_17	DO_1	FOR_1
0x4000f58	    0x48c744241800	               mov qword [rsp + 0x18], 0	       934	linker.c	FUNCTION_17	DO_1	FOR_1
0x4000f61	    0x48c7442410ff	mov qword [rsp + 0x10], 0xffffffffffffffff	       934	linker.c	FUNCTION_17	DO_1	FOR_1
0x4000f6a	      0xbd00000000	                              mov ebp, 0	       934	linker.c	FUNCTION_17	DO_1	FOR_1
0x4000f6f	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	       934	linker.c	FUNCTION_17	DO_1	FOR_1
0x4000f77	      0x4c896c2438	             mov qword [rsp + 0x38], r13	       934	linker.c	FUNCTION_17	DO_1	FOR_1
0x4000f7c	          0x4189ec	                           mov r12d, ebp	       939	linker.c	FUNCTION_17	DO_1	FOR_1	IF_5
0x4000f7f	          0x4d01f4	                            add r12, r14	       939	linker.c	FUNCTION_17	DO_1	FOR_1	IF_5
0x4000f82	      0x41803c2400	                       cmp byte [r12], 0	       939	linker.c	FUNCTION_17	DO_1	FOR_1	IF_5
0x4000f87	     0xf857a010000	                           jne 0x4001107	       939	linker.c	FUNCTION_17	DO_1	FOR_1	IF_5
0x4000f8d	      0x837c244400	               cmp dword [rsp + 0x44], 0	       941	linker.c	FUNCTION_17	DO_1	FOR_1	IF_6
0x4000f92	            0x741a	                            je 0x4000fae	       941	linker.c	FUNCTION_17	DO_1	FOR_1	IF_6
0x4000f94	        0x488b4308	                mov rax, qword [rbx + 8]	       941	linker.c	FUNCTION_17	DO_1	FOR_1	IF_6
0x4000f98	      0x483b442410	            cmp rax, qword [rsp + 0x10] 	       941	linker.c	FUNCTION_17	DO_1	FOR_1	IF_6
0x4000f9d	            0x750f	                           jne 0x4000fae	       941	linker.c	FUNCTION_17	DO_1	FOR_1	IF_6
0x4000f9f	      0x41c6042401	                       mov byte [r12], 1	       943	linker.c	FUNCTION_17	DO_1	FOR_1	IF_6
0x4000fa4	      0x4889442410	             mov qword [rsp + 0x10], rax	       944	linker.c	FUNCTION_17	DO_1	FOR_1	IF_6
0x4000fa9	      0xe959010000	                           jmp 0x4001107	       944	linker.c	FUNCTION_17	DO_1	FOR_1	IF_6
0x4000fae	          0x488b33	                    mov rsi, qword [rbx]	       947	linker.c	FUNCTION_17	DO_1	FOR_1	IF_7
0x4000fb1	          0x4885f6	                           test rsi, rsi	       947	linker.c	FUNCTION_17	DO_1	FOR_1	IF_7
0x4000fb4	     0xf846b010000	                            je 0x4001125	       947	linker.c	FUNCTION_17	DO_1	FOR_1	IF_7
0x4000fba	        0x498b7f28	            mov rdi, qword [r15 + 0x28] 	       950	linker.c	FUNCTION_17	DO_1	FOR_1	CALL_9
0x4000fbe	    0x41b801000000	                              mov r8d, 1	       950	linker.c	FUNCTION_17	DO_1	FOR_1	CALL_9
0x4000fc4	      0xb900000000	                              mov ecx, 0	       950	linker.c	FUNCTION_17	DO_1	FOR_1	CALL_9
0x4000fc9	      0xba00000000	                              mov edx, 0	       950	linker.c	FUNCTION_17	DO_1	FOR_1	CALL_9
0x4000fce	      0xe800000000	                          call 0x4000fd3	       950	linker.c	FUNCTION_17	DO_1	FOR_1	CALL_9
0x4000fd3	          0x4989c5	                            mov r13, rax	       950	linker.c	FUNCTION_17	DO_1	FOR_1	CALL_9
0x4000fd6	          0x4885c0	                           test rax, rax	       953	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8
0x4000fd9	            0x7557	                           jne 0x4001032	       953	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8
0x4000fdb	    0x4183bfa80000	               cmp dword [r15 + 0xa8], 0	       954	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8
0x4000fe3	     0xf841e010000	                            je 0x4001107	       954	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8
0x4000fe9	          0x488b03	                    mov rax, qword [rbx]	       955	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8	CALL_10
0x4000fec	      0xbf00000000	                              mov edi, 0	       955	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8	CALL_10
0x4000ff1	      0xb906000000	                              mov ecx, 6	       955	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8	CALL_10
0x4000ff6	          0x4889c6	                            mov rsi, rax	       955	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8	CALL_10
0x4000ff9	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       955	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8	CALL_10
0x4000ffb	           0xf97c1	                                 seta cl	       955	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8	CALL_10
0x4000ffe	           0xf92c2	                                 setb dl	       955	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8	CALL_10
0x4001001	            0x38d1	                              cmp cl, dl	       955	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8	CALL_10
0x4001003	     0xf85fe000000	                           jne 0x4001107	       955	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8	CALL_10
0x4001009	        0x488d7006	                      lea rsi, [rax + 6]	       956	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8	CALL_11
0x400100d	        0x498b7f28	            mov rdi, qword [r15 + 0x28] 	       956	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8	CALL_11
0x4001011	    0x41b801000000	                              mov r8d, 1	       956	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8	CALL_11
0x4001017	      0xb900000000	                              mov ecx, 0	       956	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8	CALL_11
0x400101c	      0xba00000000	                              mov edx, 0	       956	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8	CALL_11
0x4001021	      0xe800000000	                          call 0x4001026	       956	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8	CALL_11
0x4001026	          0x4989c5	                            mov r13, rax	       956	linker.c	FUNCTION_17	DO_1	FOR_1	IF_8	CALL_11
0x4001029	          0x4885c0	                           test rax, rax	       958	linker.c	FUNCTION_17	DO_1	FOR_1	IF_9
0x400102c	     0xf84d5000000	                            je 0x4001107	       958	linker.c	FUNCTION_17	DO_1	FOR_1	IF_9
0x4001032	      0x410fb64518	           movzx eax, byte [r13 + 0x18] 	       961	linker.c	FUNCTION_17	DO_1	FOR_1	IF_10
0x4001037	            0x89c2	                            mov edx, eax	       961	linker.c	FUNCTION_17	DO_1	FOR_1	IF_10
0x4001039	          0x83e2fb	                     and edx, 0xfffffffb	       961	linker.c	FUNCTION_17	DO_1	FOR_1	IF_10
0x400103c	          0x80fa01	                               cmp dl, 1	       961	linker.c	FUNCTION_17	DO_1	FOR_1	IF_10
0x400103f	            0x7412	                            je 0x4001053	       961	linker.c	FUNCTION_17	DO_1	FOR_1	IF_10
0x4001041	            0x3c02	                               cmp al, 2	       964	linker.c	FUNCTION_17	DO_1	FOR_1	IF_10	IF_11
0x4001043	     0xf84be000000	                            je 0x4001107	       964	linker.c	FUNCTION_17	DO_1	FOR_1	IF_10	IF_11
0x4001049	      0x41c6042401	                       mov byte [r12], 1	       966	linker.c	FUNCTION_17	DO_1	FOR_1	IF_10	IF_11
0x400104e	      0xe9b4000000	                           jmp 0x4001107	       966	linker.c	FUNCTION_17	DO_1	FOR_1	IF_10	IF_11
0x4001053	        0x4c8b6308	                mov r12, qword [rbx + 8]	       970	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12
0x4001057	      0x4c3b642410	            cmp r12, qword [rsp + 0x10] 	       970	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12
0x400105c	            0x7430	                            je 0x400108e	       970	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12
0x400105e	          0x4c89e6	                            mov rsi, r12	       973	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12	CALL_12
0x4001061	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	       973	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12	CALL_12
0x4001066	      0xe800000000	                          call 0x400106b	       973	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12	CALL_12
0x400106b	      0x4889442418	             mov qword [rsp + 0x18], rax	       973	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12	CALL_12
0x4001070	          0x4885c0	                           test rax, rax	       974	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12	IF_13
0x4001073	     0xf84ac000000	                            je 0x4001125	       974	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12	IF_13
0x4001079	      0xbe01000000	                              mov esi, 1	       975	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12	IF_13	CALL_13
0x400107e	          0x4889c7	                            mov rdi, rax	       975	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12	IF_13	CALL_13
0x4001081	      0xe800000000	                          call 0x4001086	       975	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12	IF_13	CALL_13
0x4001086	            0x85c0	                           test eax, eax	       975	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12	IF_13	CALL_13
0x4001088	     0xf8497000000	                            je 0x4001125	       975	linker.c	FUNCTION_17	DO_1	FOR_1	IF_12	IF_13	CALL_13
0x400108e	        0x498b4728	            mov rax, qword [r15 + 0x28] 	       979	linker.c	FUNCTION_17	DO_1	FOR_1
0x4001092	        0x488b4030	            mov rax, qword [rax + 0x30] 	       979	linker.c	FUNCTION_17	DO_1	FOR_1
0x4001096	      0x4889442420	             mov qword [rsp + 0x20], rax	       979	linker.c	FUNCTION_17	DO_1	FOR_1
0x400109b	      0x4c8d442444	                    lea r8, [rsp + 0x44]	       983	linker.c	FUNCTION_17	DO_1	FOR_1	IF_14
0x40010a0	          0x488b0b	                    mov rcx, qword [rbx]	       983	linker.c	FUNCTION_17	DO_1	FOR_1	IF_14
0x40010a3	          0x4c89ea	                            mov rdx, r13	       983	linker.c	FUNCTION_17	DO_1	FOR_1	IF_14
0x40010a6	          0x4c89fe	                            mov rsi, r15	       983	linker.c	FUNCTION_17	DO_1	FOR_1	IF_14
0x40010a9	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       983	linker.c	FUNCTION_17	DO_1	FOR_1	IF_14
0x40010ae	      0x488b442408	                mov rax, qword [rsp + 8]	       983	linker.c	FUNCTION_17	DO_1	FOR_1	IF_14
0x40010b3	            0xffd0	                                call rax	       983	linker.c	FUNCTION_17	DO_1	FOR_1	IF_14
0x40010b5	            0x85c0	                           test eax, eax	       983	linker.c	FUNCTION_17	DO_1	FOR_1	IF_14
0x40010b7	            0x746c	                            je 0x4001125	       983	linker.c	FUNCTION_17	DO_1	FOR_1	IF_14
0x40010b9	      0x4c89642410	             mov qword [rsp + 0x10], r12	       983	linker.c	FUNCTION_17	DO_1	FOR_1	IF_14
0x40010be	      0x837c244400	               cmp dword [rsp + 0x44], 0	       986	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15
0x40010c3	            0x7442	                            je 0x4001107	       986	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15
0x40010c5	            0x89e8	                            mov eax, ebp	       986	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15
0x40010c7	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	       986	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15
0x40010cc	            0x89c2	                            mov edx, eax	       995	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15	DO_2
0x40010ce	      0x41c6041601	                 mov byte [r14 + rdx], 1	       995	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15	DO_2
0x40010d3	            0x85c0	                           test eax, eax	       996	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15	DO_2	IF_16
0x40010d5	            0x7410	                            je 0x40010e7	       996	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15	DO_2	IF_16
0x40010d7	          0x83e801	                              sub eax, 1	       998	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15	DO_2
0x40010da	            0x89c2	                            mov edx, eax	      1000	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15
0x40010dc	        0x48c1e204	                              shl rdx, 4	      1000	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15
0x40010e0	      0x4c3b641108	         cmp r12, qword [rcx + rdx + 8] 	      1000	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15
0x40010e5	            0x74e5	                            je 0x40010cc	      1000	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15
0x40010e7	        0x498b4728	            mov rax, qword [r15 + 0x28] 	      1002	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15	IF_17
0x40010eb	      0x4c89642410	             mov qword [rsp + 0x10], r12	      1002	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15	IF_17
0x40010f0	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	      1002	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15	IF_17
0x40010f5	        0x483b4830	            cmp rcx, qword [rax + 0x30] 	      1002	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15	IF_17
0x40010f9	      0xb801000000	                              mov eax, 1	      1002	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15	IF_17
0x40010fe	       0xf4444242c	           cmove eax, dword [rsp + 0x2c]	      1002	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15	IF_17
0x4001103	        0x8944242c	             mov dword [rsp + 0x2c], eax	      1002	linker.c	FUNCTION_17	DO_1	FOR_1	IF_15	IF_17
0x4001107	        0x4883c310	                           add rbx, 0x10	       934	linker.c	FUNCTION_17	DO_1	FOR_1
0x400110b	          0x83c501	                              add ebp, 1	       934	linker.c	FUNCTION_17	DO_1	FOR_1
0x400110e	        0x48391c24	                    cmp qword [rsp], rbx	       934	linker.c	FUNCTION_17	DO_1	FOR_1
0x4001112	     0xf8764feffff	                            ja 0x4000f7c	       934	linker.c	FUNCTION_17	DO_1	FOR_1
0x4001118	      0x837c242c00	               cmp dword [rsp + 0x2c], 0	      1006	linker.c	FUNCTION_17	WHILE_1
0x400111d	     0xf8502feffff	                           jne 0x4000f25	      1006	linker.c	FUNCTION_17	WHILE_1
0x4001123	            0xeb0f	                           jmp 0x4001134	      1006	linker.c	FUNCTION_17	WHILE_1
0x4001125	          0x4c89f7	                            mov rdi, r14	      1012	linker.c	FUNCTION_17	CALL_15
0x4001128	      0xe800000000	                          call 0x400112d	      1012	linker.c	FUNCTION_17	CALL_15
0x400112d	      0xb800000000	                              mov eax, 0	      1013	linker.c	FUNCTION_17
0x4001132	            0xeb0d	                           jmp 0x4001141	      1013	linker.c	FUNCTION_17
0x4001134	          0x4c89f7	                            mov rdi, r14	      1008	linker.c	FUNCTION_17	CALL_14
0x4001137	      0xe800000000	                          call 0x400113c	      1008	linker.c	FUNCTION_17	CALL_14
0x400113c	      0xb801000000	                              mov eax, 1	      1009	linker.c	FUNCTION_17
0x4001141	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	      1014	linker.c	FUNCTION_17
0x4001146	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1014	linker.c	FUNCTION_17
0x400114f	            0x7405	                            je 0x4001156	      1014	linker.c	FUNCTION_17
0x4001151	      0xe800000000	                          call 0x4001156	      1014	linker.c	FUNCTION_17
0x4001156	        0x4883c458	                           add rsp, 0x58	      1014	linker.c	FUNCTION_17
0x400115a	              0x5b	                                 pop rbx	      1014	linker.c	FUNCTION_17
0x400115b	              0x5d	                                 pop rbp	      1014	linker.c	FUNCTION_17
0x400115c	            0x415c	                                 pop r12	      1014	linker.c	FUNCTION_17
0x400115e	            0x415d	                                 pop r13	      1014	linker.c	FUNCTION_17
0x4001160	            0x415e	                                 pop r14	      1014	linker.c	FUNCTION_17
0x4001162	            0x415f	                                 pop r15	      1014	linker.c	FUNCTION_17
0x4001164	              0xc3	                                     ret	      1014	linker.c	FUNCTION_17
default_indirect_link_order	IF,16:ELSE,3:SWITCH,0:functions,0:CALL,37:WHILE,0:FOR,1:DO,0	233
0x4000ad4	            0x4157	                                push r15	      2524	linker.c	FUNCTION_31
0x4000ad6	            0x4156	                                push r14	      2524	linker.c	FUNCTION_31
0x4000ad8	            0x4155	                                push r13	      2524	linker.c	FUNCTION_31
0x4000ada	            0x4154	                                push r12	      2524	linker.c	FUNCTION_31
0x4000adc	              0x55	                                push rbp	      2524	linker.c	FUNCTION_31
0x4000add	              0x53	                                push rbx	      2524	linker.c	FUNCTION_31
0x4000ade	        0x4883ec28	                           sub rsp, 0x28	      2524	linker.c	FUNCTION_31
0x4000ae2	      0x48897c2408	                mov qword [rsp + 8], rdi	      2524	linker.c	FUNCTION_31
0x4000ae7	          0x4989f7	                            mov r15, rsi	      2524	linker.c	FUNCTION_31
0x4000aea	          0x4989d5	                            mov r13, rdx	      2524	linker.c	FUNCTION_31
0x4000aed	          0x4989ce	                            mov r14, rcx	      2524	linker.c	FUNCTION_31
0x4000af0	          0x4489c5	                            mov ebp, r8d	      2524	linker.c	FUNCTION_31
0x4000af3	        0xf6422101	               test byte [rdx + 0x21], 1	      2532	linker.c	FUNCTION_31	CALL_1
0x4000af7	            0x750f	                           jne 0x4000b08	      2532	linker.c	FUNCTION_31	CALL_1
0x4000af9	      0xbee4090000	                          mov esi, 0x9e4	      2532	linker.c	FUNCTION_31	CALL_1
0x4000afe	      0xbf00000000	                              mov edi, 0	      2532	linker.c	FUNCTION_31	CALL_1
0x4000b03	      0xe800000000	                          call 0x4000b08	      2532	linker.c	FUNCTION_31	CALL_1
0x4000b08	        0x498b5e20	            mov rbx, qword [r14 + 0x20] 	      2534	linker.c	FUNCTION_31
0x4000b0c	      0xb801000000	                              mov eax, 1	      2537	linker.c	FUNCTION_31	IF_1
0x4000b11	      0x48837b3800	               cmp qword [rbx + 0x38], 0	      2536	linker.c	FUNCTION_31	IF_1
0x4000b16	     0xf8446030000	                            je 0x4000e62	      2536	linker.c	FUNCTION_31	IF_1
0x4000b1c	    0x488b83f00000	            mov rax, qword [rbx + 0xf0] 	      2535	linker.c	FUNCTION_31
0x4000b23	      0x4889442418	             mov qword [rsp + 0x18], rax	      2535	linker.c	FUNCTION_31
0x4000b28	        0x4c3b6b68	            cmp r13, qword [rbx + 0x68] 	      2539	linker.c	FUNCTION_31	CALL_2
0x4000b2c	            0x740f	                            je 0x4000b3d	      2539	linker.c	FUNCTION_31	CALL_2
0x4000b2e	      0xbeeb090000	                          mov esi, 0x9eb	      2539	linker.c	FUNCTION_31	CALL_2
0x4000b33	      0xbf00000000	                              mov edi, 0	      2539	linker.c	FUNCTION_31	CALL_2
0x4000b38	      0xe800000000	                          call 0x4000b3d	      2539	linker.c	FUNCTION_31	CALL_2
0x4000b3d	        0x498b4610	            mov rax, qword [r14 + 0x10] 	      2540	linker.c	FUNCTION_31	CALL_3
0x4000b41	        0x48394360	            cmp qword [rbx + 0x60], rax 	      2540	linker.c	FUNCTION_31	CALL_3
0x4000b45	            0x740f	                            je 0x4000b56	      2540	linker.c	FUNCTION_31	CALL_3
0x4000b47	      0xbeec090000	                          mov esi, 0x9ec	      2540	linker.c	FUNCTION_31	CALL_3
0x4000b4c	      0xbf00000000	                              mov edi, 0	      2540	linker.c	FUNCTION_31	CALL_3
0x4000b51	      0xe800000000	                          call 0x4000b56	      2540	linker.c	FUNCTION_31	CALL_3
0x4000b56	        0x498b4618	            mov rax, qword [r14 + 0x18] 	      2541	linker.c	FUNCTION_31	CALL_4
0x4000b5a	        0x48394338	            cmp qword [rbx + 0x38], rax 	      2541	linker.c	FUNCTION_31	CALL_4
0x4000b5e	            0x740f	                            je 0x4000b6f	      2541	linker.c	FUNCTION_31	CALL_4
0x4000b60	      0xbeed090000	                          mov esi, 0x9ed	      2541	linker.c	FUNCTION_31	CALL_4
0x4000b65	      0xbf00000000	                              mov edi, 0	      2541	linker.c	FUNCTION_31	CALL_4
0x4000b6a	      0xe800000000	                          call 0x4000b6f	      2541	linker.c	FUNCTION_31	CALL_4
0x4000b6f	        0x410fb607	                   movzx eax, byte [r15]	      2543	linker.c	FUNCTION_31	IF_2	CALL_5
0x4000b73	          0x83e003	                              and eax, 3	      2543	linker.c	FUNCTION_31	IF_2	CALL_5
0x4000b76	            0x3c02	                               cmp al, 2	      2543	linker.c	FUNCTION_31	IF_2	CALL_5
0x4000b78	            0x7566	                           jne 0x4000be0	      2543	linker.c	FUNCTION_31	IF_2	CALL_5
0x4000b7a	    0x83bb88000000	               cmp dword [rbx + 0x88], 0	      2544	linker.c	FUNCTION_31	IF_2
0x4000b81	            0x745d	                            je 0x4000be0	      2544	linker.c	FUNCTION_31	IF_2
0x4000b83	    0x4983bd800000	               cmp qword [r13 + 0x80], 0	      2545	linker.c	FUNCTION_31	IF_2
0x4000b8b	            0x7553	                           jne 0x4000be0	      2545	linker.c	FUNCTION_31	IF_2
0x4000b8d	      0x488b442408	                mov rax, qword [rsp + 8]	      2552	linker.c	FUNCTION_31	IF_2	CALL_6
0x4000b92	        0x488b4008	                mov rax, qword [rax + 8]	      2552	linker.c	FUNCTION_31	IF_2	CALL_6
0x4000b96	          0x488b28	                    mov rbp, qword [rax]	      2552	linker.c	FUNCTION_31	IF_2	CALL_6
0x4000b99	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      2552	linker.c	FUNCTION_31	IF_2	CALL_6
0x4000b9e	        0x488b4008	                mov rax, qword [rax + 8]	      2552	linker.c	FUNCTION_31	IF_2	CALL_6
0x4000ba2	          0x488b18	                    mov rbx, qword [rax]	      2552	linker.c	FUNCTION_31	IF_2	CALL_6
0x4000ba5	      0xba05000000	                              mov edx, 5	      2554	linker.c	FUNCTION_31	IF_2	CALL_7
0x4000baa	      0xbe00000000	                              mov esi, 0	      2554	linker.c	FUNCTION_31	IF_2	CALL_7
0x4000baf	      0xbf00000000	                              mov edi, 0	      2554	linker.c	FUNCTION_31	IF_2	CALL_7
0x4000bb4	      0xe800000000	                          call 0x4000bb9	      2554	linker.c	FUNCTION_31	IF_2	CALL_7
0x4000bb9	          0x4889ea	                            mov rdx, rbp	      2552	linker.c	FUNCTION_31	IF_2	CALL_6
0x4000bbc	          0x4889de	                            mov rsi, rbx	      2552	linker.c	FUNCTION_31	IF_2	CALL_6
0x4000bbf	          0x4889c7	                            mov rdi, rax	      2552	linker.c	FUNCTION_31	IF_2	CALL_6
0x4000bc2	      0xb800000000	                              mov eax, 0	      2552	linker.c	FUNCTION_31	IF_2	CALL_6
0x4000bc7	      0xe800000000	                          call 0x4000bcc	      2552	linker.c	FUNCTION_31	IF_2	CALL_6
0x4000bcc	      0xbf03000000	                              mov edi, 3	      2556	linker.c	FUNCTION_31	IF_2	CALL_10
0x4000bd1	      0xe800000000	                          call 0x4000bd6	      2556	linker.c	FUNCTION_31	IF_2	CALL_10
0x4000bd6	      0xb800000000	                              mov eax, 0	      2557	linker.c	FUNCTION_31	IF_2
0x4000bdb	      0xe982020000	                           jmp 0x4000e62	      2557	linker.c	FUNCTION_31	IF_2
0x4000be0	            0x85ed	                           test ebp, ebp	      2560	linker.c	FUNCTION_31	IF_3
0x4000be2	     0xf85e9000000	                           jne 0x4000cd1	      2560	linker.c	FUNCTION_31	IF_3
0x4000be8	      0x488b6c2418	            mov rbp, qword [rsp + 0x18] 	      2569	linker.c	FUNCTION_31	IF_3	IF_4	CALL_11
0x4000bed	          0x4889ef	                            mov rdi, rbp	      2569	linker.c	FUNCTION_31	IF_3	IF_4	CALL_11
0x4000bf0	      0xe800000000	                          call 0x4000bf5	      2569	linker.c	FUNCTION_31	IF_3	IF_4	CALL_11
0x4000bf5	            0x85c0	                           test eax, eax	      2569	linker.c	FUNCTION_31	IF_3	IF_4	CALL_11
0x4000bf7	     0xf8465020000	                            je 0x4000e62	      2569	linker.c	FUNCTION_31	IF_3	IF_4	CALL_11
0x4000bfd	          0x4889e8	                            mov rax, rbp	      2577	linker.c	FUNCTION_31	IF_3	CALL_12
0x4000c00	    0x488badb00000	            mov rbp, qword [rbp + 0xb0] 	      2577	linker.c	FUNCTION_31	IF_3	CALL_12
0x4000c07	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      2578	linker.c	FUNCTION_31	IF_3	CALL_13
0x4000c0d	      0x488d44c500	                  lea rax, [rbp + rax*8]	      2578	linker.c	FUNCTION_31	IF_3	CALL_13
0x4000c12	      0x4889442410	             mov qword [rsp + 0x10], rax	      2578	linker.c	FUNCTION_31	IF_3	CALL_13
0x4000c17	          0x4839c5	                            cmp rbp, rax	      2579	linker.c	FUNCTION_31	IF_3	FOR_1
0x4000c1a	     0xf83b1000000	                           jae 0x4000cd1	      2579	linker.c	FUNCTION_31	IF_3	FOR_1
0x4000c20	        0x4c8b6500	                    mov r12, qword [rbp]	      2584	linker.c	FUNCTION_31	IF_3	FOR_1
0x4000c24	    0x41f744241882	        test dword [r12 + 0x18], 0x3882 	      2586	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5
0x4000c2d	            0x7528	                           jne 0x4000c57	      2586	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5
0x4000c2f	      0x498b442420	            mov rax, qword [r12 + 0x20] 	      2591	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	CALL_15
0x4000c34	    0x483d00000000	                              cmp rax, 0	      2591	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	CALL_15
0x4000c3a	     0xf84cb010000	                            je 0x4000e0b	      2591	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	CALL_15
0x4000c40	        0xf6402110	           test byte [rax + 0x21], 0x10 	      2593	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	CALL_19
0x4000c44	     0xf85d4010000	                           jne 0x4000e1e	      2593	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	CALL_19
0x4000c4a	    0x483d00000000	                              cmp rax, 0	      2593	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	CALL_19
0x4000c50	            0x7570	                           jne 0x4000cc2	      2593	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	CALL_19
0x4000c52	      0xe9c7010000	                           jmp 0x4000e1e	      2593	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	CALL_19
0x4000c57	      0x498b742428	            mov rsi, qword [r12 + 0x28] 	      2597	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	IF_6
0x4000c5c	          0x4885f6	                           test rsi, rsi	      2597	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	IF_6
0x4000c5f	            0x7559	                           jne 0x4000cba	      2597	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	IF_6
0x4000c61	    0x49817c242000	               cmp qword [r12 + 0x20], 0	      2599	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	ELSE_1	IF_7	CALL_21
0x4000c6a	            0x7528	                           jne 0x4000c94	      2599	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	ELSE_1	IF_7	CALL_21
0x4000c6c	      0x498b542408	                mov rdx, qword [r12 + 8]	      2600	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	ELSE_1	IF_7	CALL_22
0x4000c71	    0x41b901000000	                              mov r9d, 1	      2600	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	ELSE_1	IF_7	CALL_22
0x4000c77	    0x41b800000000	                              mov r8d, 0	      2600	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	ELSE_1	IF_7	CALL_22
0x4000c7d	      0xb900000000	                              mov ecx, 0	      2600	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	ELSE_1	IF_7	CALL_22
0x4000c82	          0x4c89fe	                            mov rsi, r15	      2600	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	ELSE_1	IF_7	CALL_22
0x4000c85	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      2600	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	ELSE_1	IF_7	CALL_22
0x4000c8a	      0xe800000000	                          call 0x4000c8f	      2600	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	ELSE_1	IF_7	CALL_22
0x4000c8f	          0x4889c6	                            mov rsi, rax	      2600	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	ELSE_1	IF_7	CALL_22
0x4000c92	            0xeb21	                           jmp 0x4000cb5	      2600	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	ELSE_1	IF_7	CALL_22
0x4000c94	      0x498b742408	                mov rsi, qword [r12 + 8]	      2604	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	ELSE_2	CALL_24
0x4000c99	        0x498b7f28	            mov rdi, qword [r15 + 0x28] 	      2604	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	ELSE_2	CALL_24
0x4000c9d	    0x41b801000000	                              mov r8d, 1	      2604	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	ELSE_2	CALL_24
0x4000ca3	      0xb900000000	                              mov ecx, 0	      2604	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	ELSE_2	CALL_24
0x4000ca8	      0xba00000000	                              mov edx, 0	      2604	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	ELSE_2	CALL_24
0x4000cad	      0xe800000000	                          call 0x4000cb2	      2604	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	ELSE_2	CALL_24
0x4000cb2	          0x4889c6	                            mov rsi, rax	      2604	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	ELSE_2	CALL_24
0x4000cb5	          0x4885f6	                           test rsi, rsi	      2607	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	IF_8
0x4000cb8	            0x7408	                            je 0x4000cc2	      2607	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	IF_8
0x4000cba	          0x4c89e7	                            mov rdi, r12	      2608	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	CALL_26
0x4000cbd	      0xe8f6f3ffff	           call sym.set_symbol_from_hash	      2608	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	CALL_26
0x4000cc2	        0x4883c508	                              add rbp, 8	      2579	linker.c	FUNCTION_31	IF_3	FOR_1
0x4000cc6	      0x48396c2410	            cmp qword [rsp + 0x10], rbp 	      2579	linker.c	FUNCTION_31	IF_3	FOR_1
0x4000ccb	     0xf874fffffff	                            ja 0x4000c20	      2579	linker.c	FUNCTION_31	IF_3	FOR_1
0x4000cd1	        0x418b4520	            mov eax, dword [r13 + 0x20] 	      2613	linker.c	FUNCTION_31	IF_9
0x4000cd5	      0x2500001002	                      and eax, 0x2100000	      2613	linker.c	FUNCTION_31	IF_9
0x4000cda	      0x3d00000002	                      cmp eax, 0x2000000	      2613	linker.c	FUNCTION_31	IF_9
0x4000cdf	            0x756f	                           jne 0x4000d50	      2613	linker.c	FUNCTION_31	IF_9
0x4000ce1	      0x48837b3800	               cmp qword [rbx + 0x38], 0	      2614	linker.c	FUNCTION_31	IF_9
0x4000ce6	            0x7468	                            je 0x4000d50	      2614	linker.c	FUNCTION_31	IF_9
0x4000ce8	      0x488b442408	                mov rax, qword [rsp + 8]	      2617	linker.c	FUNCTION_31	IF_9	IF_10
0x4000ced	        0xf6404740	           test byte [rax + 0x47], 0x40 	      2617	linker.c	FUNCTION_31	IF_9	IF_10
0x4000cf1	            0x7523	                           jne 0x4000d16	      2617	linker.c	FUNCTION_31	IF_9	IF_10
0x4000cf3	    0x41b801000000	                              mov r8d, 1	      2620	linker.c	FUNCTION_31	IF_9	IF_10	IF_11	CALL_27
0x4000cf9	      0xb900000000	                              mov ecx, 0	      2620	linker.c	FUNCTION_31	IF_9	IF_10	IF_11	CALL_27
0x4000cfe	      0xba00000000	                              mov edx, 0	      2620	linker.c	FUNCTION_31	IF_9	IF_10	IF_11	CALL_27
0x4000d03	          0x4c89ee	                            mov rsi, r13	      2620	linker.c	FUNCTION_31	IF_9	IF_10	IF_11	CALL_27
0x4000d06	          0x4889c7	                            mov rdi, rax	      2620	linker.c	FUNCTION_31	IF_9	IF_10	IF_11	CALL_27
0x4000d09	      0xe800000000	                          call 0x4000d0e	      2620	linker.c	FUNCTION_31	IF_9	IF_10	IF_11	CALL_27
0x4000d0e	            0x85c0	                           test eax, eax	      2620	linker.c	FUNCTION_31	IF_9	IF_10	IF_11	CALL_27
0x4000d10	     0xf844c010000	                            je 0x4000e62	      2620	linker.c	FUNCTION_31	IF_9	IF_10	IF_11	CALL_27
0x4000d16	    0x4d8ba5b00000	            mov r12, qword [r13 + 0xb0] 	      2623	linker.c	FUNCTION_31	IF_9
0x4000d1d	          0x4d85e4	                           test r12, r12	      2624	linker.c	FUNCTION_31	IF_9	CALL_28
0x4000d20	            0x750f	                           jne 0x4000d31	      2624	linker.c	FUNCTION_31	IF_9	CALL_28
0x4000d22	      0xbe400a0000	                          mov esi, 0xa40	      2624	linker.c	FUNCTION_31	IF_9	CALL_28
0x4000d27	      0xbf00000000	                              mov edi, 0	      2624	linker.c	FUNCTION_31	IF_9	CALL_28
0x4000d2c	      0xe800000000	                          call 0x4000d31	      2624	linker.c	FUNCTION_31	IF_9	CALL_28
0x4000d31	      0x48837b6000	               cmp qword [rbx + 0x60], 0	      2625	linker.c	FUNCTION_31	IF_9	CALL_29
0x4000d36	     0xf84f5000000	                            je 0x4000e31	      2625	linker.c	FUNCTION_31	IF_9	CALL_29
0x4000d3c	      0xbe410a0000	                          mov esi, 0xa41	      2625	linker.c	FUNCTION_31	IF_9	CALL_29
0x4000d41	      0xbf00000000	                              mov edi, 0	      2625	linker.c	FUNCTION_31	IF_9	CALL_29
0x4000d46	      0xe800000000	                          call 0x4000d4b	      2625	linker.c	FUNCTION_31	IF_9	CALL_29
0x4000d4b	      0xe9e1000000	                           jmp 0x4000e31	      2625	linker.c	FUNCTION_31	IF_9	CALL_29
0x4000d50	        0x488b6b40	            mov rbp, qword [rbx + 0x40] 	      2630	linker.c	FUNCTION_31	ELSE_3
0x4000d54	        0x48396b38	            cmp qword [rbx + 0x38], rbp 	      2630	linker.c	FUNCTION_31	ELSE_3
0x4000d58	      0x480f436b38	          cmovae rbp, qword [rbx + 0x38]	      2630	linker.c	FUNCTION_31	ELSE_3
0x4000d5d	          0x4889ef	                            mov rdi, rbp	      2633	linker.c	FUNCTION_31	ELSE_3	CALL_30
0x4000d60	      0xe800000000	                          call 0x4000d65	      2633	linker.c	FUNCTION_31	ELSE_3	CALL_30
0x4000d65	          0x4989c4	                            mov r12, rax	      2633	linker.c	FUNCTION_31	ELSE_3	CALL_30
0x4000d68	          0x4885c0	                           test rax, rax	      2634	linker.c	FUNCTION_31	ELSE_3	IF_12
0x4000d6b	            0x7505	                           jne 0x4000d72	      2634	linker.c	FUNCTION_31	ELSE_3	IF_12
0x4000d6d	          0x4885ed	                           test rbp, rbp	      2634	linker.c	FUNCTION_31	ELSE_3	IF_12
0x4000d70	            0x7577	                           jne 0x4000de9	      2634	linker.c	FUNCTION_31	ELSE_3	IF_12
0x4000d72	        0x410fb607	                   movzx eax, byte [r15]	      2636	linker.c	FUNCTION_31	ELSE_3	CALL_31
0x4000d76	          0x83e003	                              and eax, 3	      2636	linker.c	FUNCTION_31	ELSE_3	CALL_31
0x4000d79	            0x3c02	                               cmp al, 2	      2636	linker.c	FUNCTION_31	ELSE_3	CALL_31
0x4000d7b	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      2636	linker.c	FUNCTION_31	ELSE_3	CALL_31
0x4000d80	    0x4c8b88b00000	              mov r9, qword [rax + 0xb0]	      2636	linker.c	FUNCTION_31	ELSE_3	CALL_31
0x4000d87	        0x410f94c0	                                sete r8b	      2636	linker.c	FUNCTION_31	ELSE_3	CALL_31
0x4000d8b	        0x450fb6c0	                          movzx r8d, r8b	      2636	linker.c	FUNCTION_31	ELSE_3	CALL_31
0x4000d8f	          0x4c89e1	                            mov rcx, r12	      2636	linker.c	FUNCTION_31	ELSE_3	CALL_31
0x4000d92	          0x4c89f2	                            mov rdx, r14	      2636	linker.c	FUNCTION_31	ELSE_3	CALL_31
0x4000d95	          0x4c89fe	                            mov rsi, r15	      2636	linker.c	FUNCTION_31	ELSE_3	CALL_31
0x4000d98	      0x4c8b7c2408	                mov r15, qword [rsp + 8]	      2636	linker.c	FUNCTION_31	ELSE_3	CALL_31
0x4000d9d	          0x4c89ff	                            mov rdi, r15	      2636	linker.c	FUNCTION_31	ELSE_3	CALL_31
0x4000da0	      0xe800000000	                          call 0x4000da5	      2636	linker.c	FUNCTION_31	ELSE_3	CALL_31
0x4000da5	          0x4989c6	                            mov r14, rax	      2636	linker.c	FUNCTION_31	ELSE_3	CALL_31
0x4000da8	          0x4885c0	                           test rax, rax	      2640	linker.c	FUNCTION_31	ELSE_3	IF_13
0x4000dab	            0x743c	                            je 0x4000de9	      2640	linker.c	FUNCTION_31	ELSE_3	IF_13
0x4000dad	        0x488b6b60	            mov rbp, qword [rbx + 0x60] 	      2645	linker.c	FUNCTION_31	CALL_34
0x4000db1	          0x4c89ff	                            mov rdi, r15	      2645	linker.c	FUNCTION_31	CALL_34
0x4000db4	      0xe800000000	                          call 0x4000db9	      2645	linker.c	FUNCTION_31	CALL_34
0x4000db9	            0x89c1	                            mov ecx, eax	      2646	linker.c	FUNCTION_31	IF_14	CALL_35
0x4000dbb	        0x480fafcd	                           imul rcx, rbp	      2646	linker.c	FUNCTION_31	IF_14	CALL_35
0x4000dbf	        0x4c8b4338	              mov r8, qword [rbx + 0x38]	      2646	linker.c	FUNCTION_31	IF_14	CALL_35
0x4000dc3	          0x4c89f2	                            mov rdx, r14	      2646	linker.c	FUNCTION_31	IF_14	CALL_35
0x4000dc6	          0x4c89ee	                            mov rsi, r13	      2646	linker.c	FUNCTION_31	IF_14	CALL_35
0x4000dc9	          0x4c89ff	                            mov rdi, r15	      2646	linker.c	FUNCTION_31	IF_14	CALL_35
0x4000dcc	      0xe800000000	                          call 0x4000dd1	      2646	linker.c	FUNCTION_31	IF_14	CALL_35
0x4000dd1	            0x85c0	                           test eax, eax	      2646	linker.c	FUNCTION_31	IF_14	CALL_35
0x4000dd3	            0x7414	                            je 0x4000de9	      2646	linker.c	FUNCTION_31	IF_14	CALL_35
0x4000dd5	          0x4d85e4	                           test r12, r12	      2650	linker.c	FUNCTION_31	IF_15
0x4000dd8	            0x7423	                            je 0x4000dfd	      2650	linker.c	FUNCTION_31	IF_15
0x4000dda	          0x4c89e7	                            mov rdi, r12	      2651	linker.c	FUNCTION_31	CALL_36
0x4000ddd	      0xe800000000	                          call 0x4000de2	      2651	linker.c	FUNCTION_31	CALL_36
0x4000de2	      0xb801000000	                              mov eax, 1	      2652	linker.c	FUNCTION_31
0x4000de7	            0xeb79	                           jmp 0x4000e62	      2652	linker.c	FUNCTION_31
0x4000de9	          0x4d85e4	                           test r12, r12	      2655	linker.c	FUNCTION_31	IF_16
0x4000dec	            0x7416	                            je 0x4000e04	      2655	linker.c	FUNCTION_31	IF_16
0x4000dee	          0x4c89e7	                            mov rdi, r12	      2656	linker.c	FUNCTION_31	CALL_37
0x4000df1	      0xe800000000	                          call 0x4000df6	      2656	linker.c	FUNCTION_31	CALL_37
0x4000df6	      0xb800000000	                              mov eax, 0	      2657	linker.c	FUNCTION_31
0x4000dfb	            0xeb65	                           jmp 0x4000e62	      2657	linker.c	FUNCTION_31
0x4000dfd	      0xb801000000	                              mov eax, 1	      2652	linker.c	FUNCTION_31
0x4000e02	            0xeb5e	                           jmp 0x4000e62	      2652	linker.c	FUNCTION_31
0x4000e04	      0xb800000000	                              mov eax, 0	      2657	linker.c	FUNCTION_31
0x4000e09	            0xeb57	                           jmp 0x4000e62	      2657	linker.c	FUNCTION_31
0x4000e0b	      0x498b742428	            mov rsi, qword [r12 + 0x28] 	      2597	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	IF_6
0x4000e10	          0x4885f6	                           test rsi, rsi	      2597	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	IF_6
0x4000e13	     0xf85a1feffff	                           jne 0x4000cba	      2597	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	IF_6
0x4000e19	      0xe94efeffff	                           jmp 0x4000c6c	      2597	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	IF_6
0x4000e1e	      0x498b742428	            mov rsi, qword [r12 + 0x28] 	      2597	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	IF_6
0x4000e23	          0x4885f6	                           test rsi, rsi	      2597	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	IF_6
0x4000e26	     0xf858efeffff	                           jne 0x4000cba	      2597	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	IF_6
0x4000e2c	      0xe963feffff	                           jmp 0x4000c94	      2597	linker.c	FUNCTION_31	IF_3	FOR_1	IF_5	IF_6
0x4000e31	        0x488b6b60	            mov rbp, qword [rbx + 0x60] 	      2645	linker.c	FUNCTION_31	CALL_34
0x4000e35	      0x4c8b7c2408	                mov r15, qword [rsp + 8]	      2645	linker.c	FUNCTION_31	CALL_34
0x4000e3a	          0x4c89ff	                            mov rdi, r15	      2645	linker.c	FUNCTION_31	CALL_34
0x4000e3d	      0xe800000000	                          call 0x4000e42	      2645	linker.c	FUNCTION_31	CALL_34
0x4000e42	            0x89c1	                            mov ecx, eax	      2646	linker.c	FUNCTION_31	IF_14	CALL_35
0x4000e44	        0x480fafcd	                           imul rcx, rbp	      2646	linker.c	FUNCTION_31	IF_14	CALL_35
0x4000e48	        0x4c8b4338	              mov r8, qword [rbx + 0x38]	      2646	linker.c	FUNCTION_31	IF_14	CALL_35
0x4000e4c	          0x4c89e2	                            mov rdx, r12	      2646	linker.c	FUNCTION_31	IF_14	CALL_35
0x4000e4f	          0x4c89ee	                            mov rsi, r13	      2646	linker.c	FUNCTION_31	IF_14	CALL_35
0x4000e52	          0x4c89ff	                            mov rdi, r15	      2646	linker.c	FUNCTION_31	IF_14	CALL_35
0x4000e55	      0xe800000000	                          call 0x4000e5a	      2646	linker.c	FUNCTION_31	IF_14	CALL_35
0x4000e5a	            0x85c0	                           test eax, eax	      2537	linker.c	FUNCTION_31	IF_1
0x4000e5c	           0xf95c0	                                setne al	      2537	linker.c	FUNCTION_31	IF_1
0x4000e5f	           0xfb6c0	                           movzx eax, al	      2537	linker.c	FUNCTION_31	IF_1
0x4000e62	        0x4883c428	                           add rsp, 0x28	      2658	linker.c	FUNCTION_31
0x4000e66	              0x5b	                                 pop rbx	      2658	linker.c	FUNCTION_31
0x4000e67	              0x5d	                                 pop rbp	      2658	linker.c	FUNCTION_31
0x4000e68	            0x415c	                                 pop r12	      2658	linker.c	FUNCTION_31
0x4000e6a	            0x415d	                                 pop r13	      2658	linker.c	FUNCTION_31
0x4000e6c	            0x415e	                                 pop r14	      2658	linker.c	FUNCTION_31
0x4000e6e	            0x415f	                                 pop r15	      2658	linker.c	FUNCTION_31
0x4000e70	              0xc3	                                     ret	      2658	linker.c	FUNCTION_31
_bfd_nolink_bfd_get_relocated_section_contents	IF,0:ELSE,0:SWITCH,0:functions,0:CALL,1:WHILE,0:FOR,0:DO,0	4
0x40031db	        0x4883ec08	                              sub rsp, 8	      3430	linker.c	FUNCTION_55
0x40031df	      0xe800000000	                          call 0x40031e4	      3431	linker.c	FUNCTION_55	CALL_1
0x40031e4	        0x4883c408	                              add rsp, 8	      3432	linker.c	FUNCTION_55
0x40031e8	              0xc3	                                     ret	      3432	linker.c	FUNCTION_55
bfd_link_check_relocs	IF,0:ELSE,0:SWITCH,0:functions,0:CALL,1:WHILE,0:FOR,0:DO,0	5
0x400311b	        0x4883ec08	                              sub rsp, 8	      3323	linker.c	FUNCTION_50
0x400311f	        0x488b4708	                mov rax, qword [rdi + 8]	      3324	linker.c	FUNCTION_50	CALL_1
0x4003123	    0xff90e8020000	                call qword [rax + 0x2e8]	      3324	linker.c	FUNCTION_50	CALL_1
0x4003129	        0x4883c408	                              add rsp, 8	      3325	linker.c	FUNCTION_50
0x400312d	              0xc3	                                     ret	      3325	linker.c	FUNCTION_50
bfd_section_already_linked_table_traverse	IF,0:ELSE,0:SWITCH,0:functions,0:CALL,3:WHILE,0:FOR,0:DO,0	7
0x400284a	        0x4883ec08	                              sub rsp, 8	      2743	linker.c	FUNCTION_34
0x400284e	          0x4889f2	                            mov rdx, rsi	      2743	linker.c	FUNCTION_34
0x4002851	          0x4889fe	                            mov rsi, rdi	      2744	linker.c	FUNCTION_34	CALL_2
0x4002854	      0xbf00000000	                              mov edi, 0	      2744	linker.c	FUNCTION_34	CALL_2
0x4002859	      0xe800000000	                          call 0x400285e	      2744	linker.c	FUNCTION_34	CALL_2
0x400285e	        0x4883c408	                              add rsp, 8	      2748	linker.c	FUNCTION_34
0x4002862	              0xc3	                                     ret	      2748	linker.c	FUNCTION_34
bfd_new_link_order	IF,2:ELSE,1:SWITCH,0:functions,0:CALL,1:WHILE,0:FOR,0:DO,0	18
0x400235a	              0x53	                                push rbx	      2411	linker.c	FUNCTION_28
0x400235b	          0x4889f3	                            mov rbx, rsi	      2411	linker.c	FUNCTION_28
0x400235e	      0xbe30000000	                           mov esi, 0x30	      2415	linker.c	FUNCTION_28	CALL_1
0x4002363	      0xe800000000	                          call 0x4002368	      2415	linker.c	FUNCTION_28	CALL_1
0x4002368	          0x4885c0	                           test rax, rax	      2416	linker.c	FUNCTION_28	IF_1
0x400236b	            0x7428	                            je 0x4002395	      2416	linker.c	FUNCTION_28	IF_1
0x400236d	    0xc74008000000	                  mov dword [rax + 8], 0	      2419	linker.c	FUNCTION_28
0x4002374	    0x488b93100100	           mov rdx, qword [rbx + 0x110] 	      2421	linker.c	FUNCTION_28	IF_2
0x400237b	          0x4885d2	                           test rdx, rdx	      2421	linker.c	FUNCTION_28	IF_2
0x400237e	            0x7405	                            je 0x4002385	      2421	linker.c	FUNCTION_28	IF_2
0x4002380	          0x488902	                    mov qword [rdx], rax	      2422	linker.c	FUNCTION_28	IF_2
0x4002383	            0xeb07	                           jmp 0x400238c	      2422	linker.c	FUNCTION_28	IF_2
0x4002385	    0x488983080100	            mov qword [rbx + 0x108], rax	      2424	linker.c	FUNCTION_28	ELSE_1
0x400238c	    0x488983100100	            mov qword [rbx + 0x110], rax	      2425	linker.c	FUNCTION_28	ELSE_1
0x4002393	            0xeb05	                           jmp 0x400239a	      2427	linker.c	FUNCTION_28	ELSE_1
0x4002395	      0xb800000000	                              mov eax, 0	      2417	linker.c	FUNCTION_28	IF_1
0x400239a	              0x5b	                                 pop rbx	      2428	linker.c	FUNCTION_28	ELSE_1
0x400239b	              0xc3	                                     ret	      2428	linker.c	FUNCTION_28	ELSE_1
_bfd_default_link_order	IF,0:ELSE,0:SWITCH,1:functions,0:CALL,3:WHILE,0:FOR,0:DO,0	111
0x400239c	            0x4157	                                push r15	      2439	linker.c	ELSE_1	FUNCTION_29
0x400239e	            0x4156	                                push r14	      2439	linker.c	ELSE_1	FUNCTION_29
0x40023a0	            0x4155	                                push r13	      2439	linker.c	ELSE_1	FUNCTION_29
0x40023a2	            0x4154	                                push r12	      2439	linker.c	ELSE_1	FUNCTION_29
0x40023a4	              0x55	                                push rbp	      2439	linker.c	ELSE_1	FUNCTION_29
0x40023a5	              0x53	                                push rbx	      2439	linker.c	ELSE_1	FUNCTION_29
0x40023a6	        0x4883ec18	                           sub rsp, 0x18	      2439	linker.c	ELSE_1	FUNCTION_29
0x40023aa	          0x4989fe	                            mov r14, rdi	      2439	linker.c	ELSE_1	FUNCTION_29
0x40023ad	          0x4989d5	                            mov r13, rdx	      2439	linker.c	ELSE_1	FUNCTION_29
0x40023b0	          0x4889cb	                            mov rbx, rcx	      2439	linker.c	ELSE_1	FUNCTION_29
0x40023b3	          0x8b4108	                mov eax, dword [rcx + 8]	      2440	linker.c	ELSE_1	FUNCTION_29	SWITCH_1
0x40023b6	          0x83f801	                              cmp eax, 1	      2440	linker.c	ELSE_1	FUNCTION_29	SWITCH_1
0x40023b9	            0x7419	                            je 0x40023d4	      2440	linker.c	ELSE_1	FUNCTION_29	SWITCH_1
0x40023bb	          0x83f802	                              cmp eax, 2	      2440	linker.c	ELSE_1	FUNCTION_29	SWITCH_1
0x40023be	            0x7424	                            je 0x40023e4	      2440	linker.c	ELSE_1	FUNCTION_29	SWITCH_1
0x40023c0	      0xba00000000	                              mov edx, 0	      2446	linker.c	ELSE_1	FUNCTION_29	SWITCH_1	CALL_1
0x40023c5	      0xbe8e090000	                          mov esi, 0x98e	      2446	linker.c	ELSE_1	FUNCTION_29	SWITCH_1	CALL_1
0x40023ca	      0xbf00000000	                              mov edi, 0	      2446	linker.c	ELSE_1	FUNCTION_29	SWITCH_1	CALL_1
0x40023cf	      0xe800000000	                          call 0x40023d4	      2446	linker.c	ELSE_1	FUNCTION_29	SWITCH_1	CALL_1
0x40023d4	    0x41b800000000	                              mov r8d, 0	      2448	linker.c	ELSE_1	FUNCTION_29	SWITCH_1	CALL_2
0x40023da	      0xe8f5e6ffff	    call sym.default_indirect_link_order	      2448	linker.c	ELSE_1	FUNCTION_29	SWITCH_1	CALL_2
0x40023df	      0xe923010000	                           jmp 0x4002507	      2448	linker.c	ELSE_1	FUNCTION_29	SWITCH_1	CALL_2
0x40023e4	        0xf6422101	               test byte [rdx + 0x21], 1	      2469	linker.c	FUNCTION_30	CALL_1
0x40023e8	            0x750f	                           jne 0x40023f9	      2469	linker.c	FUNCTION_30	CALL_1
0x40023ea	      0xbea5090000	                          mov esi, 0x9a5	      2469	linker.c	FUNCTION_30	CALL_1
0x40023ef	      0xbf00000000	                              mov edi, 0	      2469	linker.c	FUNCTION_30	CALL_1
0x40023f4	      0xe800000000	                          call 0x40023f9	      2469	linker.c	FUNCTION_30	CALL_1
0x40023f9	        0x488b6b18	            mov rbp, qword [rbx + 0x18] 	      2471	linker.c	FUNCTION_30
0x40023fd	      0xb801000000	                              mov eax, 1	      2473	linker.c	FUNCTION_30	IF_1
0x4002402	          0x4885ed	                           test rbp, rbp	      2472	linker.c	FUNCTION_30	IF_1
0x4002405	     0xf84fc000000	                            je 0x4002507	      2472	linker.c	FUNCTION_30	IF_1
0x400240b	        0x448b6320	           mov r12d, dword [rbx + 0x20] 	      2476	linker.c	FUNCTION_30
0x400240f	          0x4d85e4	                           test r12, r12	      2477	linker.c	FUNCTION_30	IF_2
0x4002412	            0x7536	                           jne 0x400244a	      2477	linker.c	FUNCTION_30	IF_2
0x4002414	        0x418b5520	            mov edx, dword [r13 + 0x20] 	      2479	linker.c	FUNCTION_30	IF_2	CALL_3
0x4002418	          0xc1ea04	                              shr edx, 4	      2479	linker.c	FUNCTION_30	IF_2	CALL_3
0x400241b	          0x83e201	                              and edx, 1	      2479	linker.c	FUNCTION_30	IF_2	CALL_3
0x400241e	        0x498b4608	                mov rax, qword [r14 + 8]	      2479	linker.c	FUNCTION_30	IF_2	CALL_3
0x4002422	        0x83780c00	                cmp dword [rax + 0xc], 0	      2479	linker.c	FUNCTION_30	IF_2	CALL_3
0x4002426	        0x400f94c6	                                sete sil	      2479	linker.c	FUNCTION_30	IF_2	CALL_3
0x400242a	        0x400fb6f6	                          movzx esi, sil	      2479	linker.c	FUNCTION_30	IF_2	CALL_3
0x400242e	    0x498b86c00000	            mov rax, qword [r14 + 0xc0] 	      2479	linker.c	FUNCTION_30	IF_2	CALL_3
0x4002435	          0x4889ef	                            mov rdi, rbp	      2479	linker.c	FUNCTION_30	IF_2	CALL_3
0x4002438	          0xff5040	                 call qword [rax + 0x40]	      2479	linker.c	FUNCTION_30	IF_2	CALL_3
0x400243b	      0x4889442408	                mov qword [rsp + 8], rax	      2479	linker.c	FUNCTION_30	IF_2	CALL_3
0x4002440	          0x4885c0	                           test rax, rax	      2481	linker.c	FUNCTION_30	IF_2	IF_3
0x4002443	            0x757a	                           jne 0x40024bf	      2481	linker.c	FUNCTION_30	IF_2	IF_3
0x4002445	      0xe9b1000000	                           jmp 0x40024fb	      2481	linker.c	FUNCTION_30	IF_2	IF_3
0x400244a	          0x4c39e5	                            cmp rbp, r12	      2484	linker.c	FUNCTION_30	ELSE_1	IF_4
0x400244d	            0x770b	                            ja 0x400245a	      2484	linker.c	FUNCTION_30	ELSE_1	IF_4
0x400244f	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      2475	linker.c	FUNCTION_30
0x4002453	      0x4889442408	                mov qword [rsp + 8], rax	      2475	linker.c	FUNCTION_30
0x4002458	            0xeb65	                           jmp 0x40024bf	      2475	linker.c	FUNCTION_30
0x400245a	          0x4889ef	                            mov rdi, rbp	      2487	linker.c	FUNCTION_30	ELSE_1	IF_4	CALL_4
0x400245d	      0xe800000000	                          call 0x4002462	      2487	linker.c	FUNCTION_30	ELSE_1	IF_4	CALL_4
0x4002462	      0x4889442408	                mov qword [rsp + 8], rax	      2487	linker.c	FUNCTION_30	ELSE_1	IF_4	CALL_4
0x4002467	          0x4885c0	                           test rax, rax	      2488	linker.c	FUNCTION_30	ELSE_1	IF_4	IF_5
0x400246a	     0xf8492000000	                            je 0x4002502	      2488	linker.c	FUNCTION_30	ELSE_1	IF_4	IF_5
0x4002470	          0x4989c7	                            mov r15, rax	      2491	linker.c	FUNCTION_30	ELSE_1	IF_4	IF_6
0x4002473	        0x4983fc01	                              cmp r12, 1	      2491	linker.c	FUNCTION_30	ELSE_1	IF_4	IF_6
0x4002477	            0x7514	                           jne 0x400248d	      2491	linker.c	FUNCTION_30	ELSE_1	IF_4	IF_6
0x4002479	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      2492	linker.c	FUNCTION_30	ELSE_1	IF_4	CALL_5
0x400247d	           0xfb630	                   movzx esi, byte [rax]	        90	string3.h	FUNCTION_69	CALL_6
0x4002480	          0x4889ea	                            mov rdx, rbp	        90	string3.h	FUNCTION_69	CALL_6
0x4002483	          0x4c89ff	                            mov rdi, r15	        90	string3.h	FUNCTION_69	CALL_6
0x4002486	      0xe800000000	                          call 0x400248b	        90	string3.h	FUNCTION_69	CALL_6
0x400248b	            0xeb32	                           jmp 0x40024bf	        90	string3.h	FUNCTION_69	CALL_6
0x400248d	        0x488b7328	            mov rsi, qword [rbx + 0x28] 	        53	string3.h	FUNCTION_66	CALL_3
0x4002491	          0x4c89e2	                            mov rdx, r12	        53	string3.h	FUNCTION_66	CALL_3
0x4002494	          0x4c89ff	                            mov rdi, r15	        53	string3.h	FUNCTION_66	CALL_3
0x4002497	      0xe800000000	                          call 0x400249c	        53	string3.h	FUNCTION_66	CALL_3
0x400249c	          0x4d01e7	                            add r15, r12	      2498	linker.c	FUNCTION_30	ELSE_1	IF_4	ELSE_2	DO_1
0x400249f	          0x4c29e5	                            sub rbp, r12	      2499	linker.c	FUNCTION_30	ELSE_1	IF_4	ELSE_2	DO_1
0x40024a2	          0x4939ec	                            cmp r12, rbp	      2501	linker.c	FUNCTION_30	ELSE_1	IF_4	ELSE_2
0x40024a5	            0x76e6	                           jbe 0x400248d	      2501	linker.c	FUNCTION_30	ELSE_1	IF_4	ELSE_2
0x40024a7	          0x4885ed	                           test rbp, rbp	      2502	linker.c	FUNCTION_30	ELSE_1	IF_4	ELSE_2	IF_7
0x40024aa	            0x740f	                            je 0x40024bb	      2502	linker.c	FUNCTION_30	ELSE_1	IF_4	ELSE_2	IF_7
0x40024ac	        0x488b7328	            mov rsi, qword [rbx + 0x28] 	        53	string3.h	FUNCTION_66	CALL_3
0x40024b0	          0x4889ea	                            mov rdx, rbp	        53	string3.h	FUNCTION_66	CALL_3
0x40024b3	          0x4c89ff	                            mov rdi, r15	        53	string3.h	FUNCTION_66	CALL_3
0x40024b6	      0xe800000000	                          call 0x40024bb	        53	string3.h	FUNCTION_66	CALL_3
0x40024bb	        0x488b6b18	            mov rbp, qword [rbx + 0x18] 	      2504	linker.c	FUNCTION_30	ELSE_1	IF_4	ELSE_2
0x40024bf	        0x4c8b6310	            mov r12, qword [rbx + 0x10] 	      2508	linker.c	FUNCTION_30	CALL_8
0x40024c3	          0x4c89f7	                            mov rdi, r14	      2508	linker.c	FUNCTION_30	CALL_8
0x40024c6	      0xe800000000	                          call 0x40024cb	      2508	linker.c	FUNCTION_30	CALL_8
0x40024cb	            0x89c1	                            mov ecx, eax	      2509	linker.c	FUNCTION_30	CALL_9
0x40024cd	        0x490fafcc	                           imul rcx, r12	      2509	linker.c	FUNCTION_30	CALL_9
0x40024d1	          0x4989e8	                             mov r8, rbp	      2509	linker.c	FUNCTION_30	CALL_9
0x40024d4	      0x4c8b7c2408	                mov r15, qword [rsp + 8]	      2509	linker.c	FUNCTION_30	CALL_9
0x40024d9	          0x4c89fa	                            mov rdx, r15	      2509	linker.c	FUNCTION_30	CALL_9
0x40024dc	          0x4c89ee	                            mov rsi, r13	      2509	linker.c	FUNCTION_30	CALL_9
0x40024df	          0x4c89f7	                            mov rdi, r14	      2509	linker.c	FUNCTION_30	CALL_9
0x40024e2	      0xe800000000	                          call 0x40024e7	      2509	linker.c	FUNCTION_30	CALL_9
0x40024e7	            0x89c5	                            mov ebp, eax	      2509	linker.c	FUNCTION_30	CALL_9
0x40024e9	        0x4c3b7b28	            cmp r15, qword [rbx + 0x28] 	      2511	linker.c	FUNCTION_30	IF_8
0x40024ed	            0x7418	                            je 0x4002507	      2511	linker.c	FUNCTION_30	IF_8
0x40024ef	          0x4c89ff	                            mov rdi, r15	      2512	linker.c	FUNCTION_30	CALL_10
0x40024f2	      0xe800000000	                          call 0x40024f7	      2512	linker.c	FUNCTION_30	CALL_10
0x40024f7	            0x89e8	                            mov eax, ebp	      2513	linker.c	FUNCTION_30
0x40024f9	            0xeb0c	                           jmp 0x4002507	      2513	linker.c	FUNCTION_30
0x40024fb	      0xb800000000	                              mov eax, 0	      2482	linker.c	FUNCTION_30	IF_2	IF_3
0x4002500	            0xeb05	                           jmp 0x4002507	      2482	linker.c	FUNCTION_30	IF_2	IF_3
0x4002502	      0xb800000000	                              mov eax, 0	      2489	linker.c	FUNCTION_30	ELSE_1	IF_4	IF_5
0x4002507	        0x4883c418	                           add rsp, 0x18	      2453	linker.c	ELSE_1	FUNCTION_29
0x400250b	              0x5b	                                 pop rbx	      2453	linker.c	ELSE_1	FUNCTION_29
0x400250c	              0x5d	                                 pop rbp	      2453	linker.c	ELSE_1	FUNCTION_29
0x400250d	            0x415c	                                 pop r12	      2453	linker.c	ELSE_1	FUNCTION_29
0x400250f	            0x415d	                                 pop r13	      2453	linker.c	ELSE_1	FUNCTION_29
0x4002511	            0x415e	                                 pop r14	      2453	linker.c	ELSE_1	FUNCTION_29
0x4002513	            0x415f	                                 pop r15	      2453	linker.c	ELSE_1	FUNCTION_29
0x4002515	              0xc3	                                     ret	      2453	linker.c	ELSE_1	FUNCTION_29
_bfd_generic_final_link	IF,14:ELSE,1:SWITCH,1:functions,0:CALL,17:WHILE,0:FOR,7:DO,0	196
0x4002516	            0x4157	                                push r15	      1807	linker.c	FUNCTION_22
0x4002518	            0x4156	                                push r14	      1807	linker.c	FUNCTION_22
0x400251a	            0x4155	                                push r13	      1807	linker.c	FUNCTION_22
0x400251c	            0x4154	                                push r12	      1807	linker.c	FUNCTION_22
0x400251e	              0x55	                                push rbp	      1807	linker.c	FUNCTION_22
0x400251f	              0x53	                                push rbx	      1807	linker.c	FUNCTION_22
0x4002520	        0x4883ec48	                           sub rsp, 0x48	      1807	linker.c	FUNCTION_22
0x4002524	          0x4889fd	                            mov rbp, rdi	      1807	linker.c	FUNCTION_22
0x4002527	          0x4989f4	                            mov r12, rsi	      1807	linker.c	FUNCTION_22
0x400252a	    0x64488b042528	                mov rax, qword fs:[0x28]	      1807	linker.c	FUNCTION_22
0x4002533	      0x4889442438	             mov qword [rsp + 0x38], rax	      1807	linker.c	FUNCTION_22
0x4002538	            0x31c0	                            xor eax, eax	      1807	linker.c	FUNCTION_22
0x400253a	    0x48c787b00000	               mov qword [rdi + 0xb0], 0	      1814	linker.c	FUNCTION_22	CALL_1
0x4002545	    0xc787b8000000	               mov dword [rdi + 0xb8], 0	      1815	linker.c	FUNCTION_22	CALL_2
0x400254f	    0x48c744241800	               mov qword [rsp + 0x18], 0	      1816	linker.c	FUNCTION_22
0x4002558	    0x488b8f900000	            mov rcx, qword [rdi + 0x90] 	      1819	linker.c	FUNCTION_22	FOR_1
0x400255f	          0x4885c9	                           test rcx, rcx	      1819	linker.c	FUNCTION_22	FOR_1
0x4002562	            0x742b	                            je 0x400258f	      1819	linker.c	FUNCTION_22	FOR_1
0x4002564	    0x488b81080100	           mov rax, qword [rcx + 0x108] 	      1820	linker.c	FUNCTION_22	FOR_1	FOR_2
0x400256b	          0x4885c0	                           test rax, rax	      1820	linker.c	FUNCTION_22	FOR_1	FOR_2
0x400256e	            0x7416	                            je 0x4002586	      1820	linker.c	FUNCTION_22	FOR_1	FOR_2
0x4002570	        0x83780801	                  cmp dword [rax + 8], 1	      1821	linker.c	FUNCTION_22	FOR_1	FOR_2	IF_1
0x4002574	            0x7508	                           jne 0x400257e	      1821	linker.c	FUNCTION_22	FOR_1	FOR_2	IF_1
0x4002576	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      1822	linker.c	FUNCTION_22	FOR_1	FOR_2	IF_1
0x400257a	        0x804a2402	                 or byte [rdx + 0x24], 2	      1822	linker.c	FUNCTION_22	FOR_1	FOR_2	IF_1
0x400257e	          0x488b00	                    mov rax, qword [rax]	      1820	linker.c	FUNCTION_22	FOR_1	FOR_2
0x4002581	          0x4885c0	                           test rax, rax	      1820	linker.c	FUNCTION_22	FOR_1	FOR_2
0x4002584	            0x75ea	                           jne 0x4002570	      1820	linker.c	FUNCTION_22	FOR_1	FOR_2
0x4002586	        0x488b4910	            mov rcx, qword [rcx + 0x10] 	      1819	linker.c	FUNCTION_22	FOR_1
0x400258a	          0x4885c9	                           test rcx, rcx	      1819	linker.c	FUNCTION_22	FOR_1
0x400258d	            0x75d5	                           jne 0x4002564	      1819	linker.c	FUNCTION_22	FOR_1
0x400258f	      0x498b5c2460	            mov rbx, qword [r12 + 0x60] 	      1825	linker.c	FUNCTION_22	FOR_3
0x4002594	          0x4885db	                           test rbx, rbx	      1825	linker.c	FUNCTION_22	FOR_3
0x4002597	            0x7427	                            je 0x40025c0	      1825	linker.c	FUNCTION_22	FOR_3
0x4002599	      0x488d4c2418	                   lea rcx, [rsp + 0x18]	      1826	linker.c	FUNCTION_22	FOR_3	IF_2	CALL_3
0x400259e	          0x4c89e2	                            mov rdx, r12	      1826	linker.c	FUNCTION_22	FOR_3	IF_2	CALL_3
0x40025a1	          0x4889de	                            mov rsi, rbx	      1826	linker.c	FUNCTION_22	FOR_3	IF_2	CALL_3
0x40025a4	          0x4889ef	                            mov rdi, rbp	      1826	linker.c	FUNCTION_22	FOR_3	IF_2	CALL_3
0x40025a7	      0xe800000000	                          call 0x40025ac	      1826	linker.c	FUNCTION_22	FOR_3	IF_2	CALL_3
0x40025ac	            0x85c0	                           test eax, eax	      1826	linker.c	FUNCTION_22	FOR_3	IF_2	CALL_3
0x40025ae	     0xf8446020000	                            je 0x40027fa	      1826	linker.c	FUNCTION_22	FOR_3	IF_2	CALL_3
0x40025b4	    0x488b9bf00000	            mov rbx, qword [rbx + 0xf0] 	      1825	linker.c	FUNCTION_22	FOR_3
0x40025bb	          0x4885db	                           test rbx, rbx	      1825	linker.c	FUNCTION_22	FOR_3
0x40025be	            0x75d9	                           jne 0x4002599	      1825	linker.c	FUNCTION_22	FOR_3
0x40025c0	      0x4c89642420	             mov qword [rsp + 0x20], r12	      1830	linker.c	FUNCTION_22
0x40025c5	      0x48896c2428	             mov qword [rsp + 0x28], rbp	      1831	linker.c	FUNCTION_22
0x40025ca	      0x488d5c2418	                   lea rbx, [rsp + 0x18]	      1832	linker.c	FUNCTION_22
0x40025cf	      0x48895c2430	             mov qword [rsp + 0x30], rbx	      1832	linker.c	FUNCTION_22
0x40025d4	      0x498b7c2428	            mov rdi, qword [r12 + 0x28] 	      1833	linker.c	FUNCTION_22	CALL_5
0x40025d9	      0x488d542420	                   lea rdx, [rsp + 0x20]	      1833	linker.c	FUNCTION_22	CALL_5
0x40025de	      0xbe00000000	                              mov esi, 0	      1833	linker.c	FUNCTION_22	CALL_5
0x40025e3	      0xe800000000	                          call 0x40025e8	      1833	linker.c	FUNCTION_22	CALL_5
0x40025e8	      0xba00000000	                              mov edx, 0	      1840	linker.c	FUNCTION_22	IF_3	CALL_6
0x40025ed	          0x4889de	                            mov rsi, rbx	      1840	linker.c	FUNCTION_22	IF_3	CALL_6
0x40025f0	          0x4889ef	                            mov rdi, rbp	      1840	linker.c	FUNCTION_22	IF_3	CALL_6
0x40025f3	      0xe8c5dbffff	      call sym.generic_add_output_symbol	      1840	linker.c	FUNCTION_22	IF_3	CALL_6
0x40025f8	            0x85c0	                           test eax, eax	      1840	linker.c	FUNCTION_22	IF_3	CALL_6
0x40025fa	     0xf84fa010000	                            je 0x40027fa	      1840	linker.c	FUNCTION_22	IF_3	CALL_6
0x4002600	      0x410fb60424	                   movzx eax, byte [r12]	      1843	linker.c	FUNCTION_22	IF_4	CALL_7
0x4002605	          0x83e003	                              and eax, 3	      1843	linker.c	FUNCTION_22	IF_4	CALL_7
0x4002608	            0x3c02	                               cmp al, 2	      1843	linker.c	FUNCTION_22	IF_4	CALL_7
0x400260a	     0xf8530010000	                           jne 0x4002740	      1843	linker.c	FUNCTION_22	IF_4	CALL_7
0x4002610	    0x4c8bad900000	            mov r13, qword [rbp + 0x90] 	      1846	linker.c	FUNCTION_22	IF_4	FOR_4
0x4002617	          0x4d85ed	                           test r13, r13	      1846	linker.c	FUNCTION_22	IF_4	FOR_4
0x400261a	     0xf84b2010000	                            je 0x40027d2	      1846	linker.c	FUNCTION_22	IF_4	FOR_4
0x4002620	    0x41c785880000	               mov dword [r13 + 0x88], 0	      1848	linker.c	FUNCTION_22	IF_4	FOR_4
0x400262b	    0x498b9d080100	           mov rbx, qword [r13 + 0x108] 	      1849	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5
0x4002632	          0x4885db	                           test rbx, rbx	      1849	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5
0x4002635	     0xf84f8000000	                            je 0x4002733	      1849	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5
0x400263b	          0x8b4308	                mov eax, dword [rbx + 8]	      1851	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	IF_5
0x400263e	          0x8d50fd	                      lea edx, [rax - 3]	      1851	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	IF_5
0x4002641	          0x83fa01	                              cmp edx, 1	      1851	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	IF_5
0x4002644	            0x770d	                            ja 0x4002653	      1851	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	IF_5
0x4002646	    0x418385880000	               add dword [r13 + 0x88], 1	      1853	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	IF_5
0x400264e	      0xe997000000	                           jmp 0x40026ea	      1853	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	IF_5
0x4002653	          0x83f801	                              cmp eax, 1	      1854	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6
0x4002656	     0xf858e000000	                           jne 0x40026ea	      1854	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6
0x400265c	        0x4c8b7320	            mov r14, qword [rbx + 0x20] 	      1863	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6
0x4002660	    0x4d8bbef00000	            mov r15, qword [r14 + 0xf0] 	      1864	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6
0x4002667	          0x4c89f6	                            mov rsi, r14	      1865	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_8
0x400266a	          0x4c89ff	                            mov rdi, r15	      1865	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_8
0x400266d	      0xe800000000	                          call 0x4002672	      1865	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_8
0x4002672	          0x4885c0	                           test rax, rax	      1867	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	IF_7
0x4002675	     0xf885e010000	                            js 0x40027d9	      1867	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	IF_7
0x400267b	      0x4889442408	                mov qword [rsp + 8], rax	      1869	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_9
0x4002680	          0x4889c7	                            mov rdi, rax	      1869	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_9
0x4002683	      0xe800000000	                          call 0x4002688	      1869	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_9
0x4002688	        0x48890424	                    mov qword [rsp], rax	      1869	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_9
0x400268c	          0x4885c0	                           test rax, rax	      1870	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	IF_8
0x400268f	            0x750c	                           jne 0x400269d	      1870	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	IF_8
0x4002691	    0x48837c240800	                  cmp qword [rsp + 8], 0	      1870	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	IF_8
0x4002697	     0xf8543010000	                           jne 0x40027e0	      1870	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	IF_8
0x400269d	    0x498b8fb00000	            mov rcx, qword [r15 + 0xb0] 	      1873	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_11
0x40026a4	        0x488b1424	                    mov rdx, qword [rsp]	      1873	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_11
0x40026a8	          0x4c89f6	                            mov rsi, r14	      1873	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_11
0x40026ab	          0x4c89ff	                            mov rdi, r15	      1873	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_11
0x40026ae	      0xe800000000	                          call 0x40026b3	      1873	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_11
0x40026b3	          0x4989c7	                            mov r15, rax	      1873	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_11
0x40026b6	        0x488b3c24	                    mov rdi, qword [rsp]	      1877	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_12
0x40026ba	      0xe800000000	                          call 0x40026bf	      1877	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_12
0x40026bf	          0x4d85ff	                           test r15, r15	      1878	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	IF_9
0x40026c2	     0xf881f010000	                            js 0x40027e7	      1878	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	IF_9
0x40026c8	    0x418b86880000	            mov eax, dword [r14 + 0x88] 	      1880	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_13
0x40026cf	          0x4c39f8	                            cmp rax, r15	      1880	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_13
0x40026d2	            0x740f	                            je 0x40026e3	      1880	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_13
0x40026d4	      0xbe59070000	                          mov esi, 0x759	      1880	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_13
0x40026d9	      0xbf00000000	                              mov edi, 0	      1880	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_13
0x40026de	      0xe800000000	                          call 0x40026e3	      1880	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	CALL_13
0x40026e3	    0x4501bd880000	            add dword [r13 + 0x88], r15d	      1882	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6
0x40026ea	          0x488b1b	                    mov rbx, qword [rbx]	      1849	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5
0x40026ed	          0x4885db	                           test rbx, rbx	      1849	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5
0x40026f0	     0xf8545ffffff	                           jne 0x400263b	      1849	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5
0x40026f6	    0x418b85880000	            mov eax, dword [r13 + 0x88] 	      1885	linker.c	FUNCTION_22	IF_4	FOR_4	IF_10
0x40026fd	            0x85c0	                           test eax, eax	      1885	linker.c	FUNCTION_22	IF_4	FOR_4	IF_10
0x40026ff	            0x7432	                            je 0x4002733	      1885	linker.c	FUNCTION_22	IF_4	FOR_4	IF_10
0x4002701	            0x89c0	                            mov eax, eax	      1889	linker.c	FUNCTION_22	IF_4	FOR_4	IF_10
0x4002703	    0x488d34c50000	                        lea rsi, [rax*8]	      1891	linker.c	FUNCTION_22	IF_4	FOR_4	IF_10	CALL_14
0x400270b	          0x4889ef	                            mov rdi, rbp	      1891	linker.c	FUNCTION_22	IF_4	FOR_4	IF_10	CALL_14
0x400270e	      0xe800000000	                          call 0x4002713	      1891	linker.c	FUNCTION_22	IF_4	FOR_4	IF_10	CALL_14
0x4002713	    0x498985800000	             mov qword [r13 + 0x80], rax	      1891	linker.c	FUNCTION_22	IF_4	FOR_4	IF_10	CALL_14
0x400271a	          0x4885c0	                           test rax, rax	      1892	linker.c	FUNCTION_22	IF_4	FOR_4	IF_10	IF_11
0x400271d	     0xf84cb000000	                            je 0x40027ee	      1892	linker.c	FUNCTION_22	IF_4	FOR_4	IF_10	IF_11
0x4002723	      0x41834d2004	                or dword [r13 + 0x20], 4	      1894	linker.c	FUNCTION_22	IF_4	FOR_4	IF_10
0x4002728	    0x41c785880000	               mov dword [r13 + 0x88], 0	      1897	linker.c	FUNCTION_22	IF_4	FOR_4	IF_10
0x4002733	        0x4d8b6d10	            mov r13, qword [r13 + 0x10] 	      1846	linker.c	FUNCTION_22	IF_4	FOR_4
0x4002737	          0x4d85ed	                           test r13, r13	      1846	linker.c	FUNCTION_22	IF_4	FOR_4
0x400273a	     0xf85e0feffff	                           jne 0x4002620	      1846	linker.c	FUNCTION_22	IF_4	FOR_4
0x4002740	    0x4c8bad900000	            mov r13, qword [rbp + 0x90] 	      1903	linker.c	FUNCTION_22	FOR_6
0x4002747	          0x4d85ed	                           test r13, r13	      1903	linker.c	FUNCTION_22	FOR_6
0x400274a	     0xf84a5000000	                            je 0x40027f5	      1903	linker.c	FUNCTION_22	FOR_6
0x4002750	    0x498b9d080100	           mov rbx, qword [r13 + 0x108] 	      1905	linker.c	FUNCTION_22	FOR_6	FOR_7
0x4002757	          0x4885db	                           test rbx, rbx	      1905	linker.c	FUNCTION_22	FOR_6	FOR_7
0x400275a	            0x7466	                            je 0x40027c2	      1905	linker.c	FUNCTION_22	FOR_6	FOR_7
0x400275c	          0x8b4308	                mov eax, dword [rbx + 8]	      1907	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1
0x400275f	          0x83f801	                              cmp eax, 1	      1907	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1
0x4002762	            0x7424	                            je 0x4002788	      1907	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1
0x4002764	          0x83f801	                              cmp eax, 1	      1907	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1
0x4002767	            0x723c	                            jb 0x40027a5	      1907	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1
0x4002769	          0x83e803	                              sub eax, 3	      1907	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1
0x400276c	          0x83f801	                              cmp eax, 1	      1907	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1
0x400276f	            0x7734	                            ja 0x40027a5	      1907	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1
0x4002771	          0x4889d9	                            mov rcx, rbx	      1911	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_12	CALL_15
0x4002774	          0x4c89ea	                            mov rdx, r13	      1911	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_12	CALL_15
0x4002777	          0x4c89e6	                            mov rsi, r12	      1911	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_12	CALL_15
0x400277a	          0x4889ef	                            mov rdi, rbp	      1911	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_12	CALL_15
0x400277d	      0xe800000000	                          call 0x4002782	      1911	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_12	CALL_15
0x4002782	            0x85c0	                           test eax, eax	      1911	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_12	CALL_15
0x4002784	            0x7534	                           jne 0x40027ba	      1911	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_12	CALL_15
0x4002786	            0xeb72	                           jmp 0x40027fa	      1911	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_12	CALL_15
0x4002788	    0x41b801000000	                              mov r8d, 1	      1915	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_13	CALL_16
0x400278e	          0x4889d9	                            mov rcx, rbx	      1915	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_13	CALL_16
0x4002791	          0x4c89ea	                            mov rdx, r13	      1915	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_13	CALL_16
0x4002794	          0x4c89e6	                            mov rsi, r12	      1915	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_13	CALL_16
0x4002797	          0x4889ef	                            mov rdi, rbp	      1915	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_13	CALL_16
0x400279a	      0xe835e3ffff	    call sym.default_indirect_link_order	      1915	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_13	CALL_16
0x400279f	            0x85c0	                           test eax, eax	      1915	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_13	CALL_16
0x40027a1	            0x7517	                           jne 0x40027ba	      1915	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_13	CALL_16
0x40027a3	            0xeb55	                           jmp 0x40027fa	      1915	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_13	CALL_16
0x40027a5	          0x4889d9	                            mov rcx, rbx	      1919	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_14	CALL_17
0x40027a8	          0x4c89ea	                            mov rdx, r13	      1919	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_14	CALL_17
0x40027ab	          0x4c89e6	                            mov rsi, r12	      1919	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_14	CALL_17
0x40027ae	          0x4889ef	                            mov rdi, rbp	      1919	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_14	CALL_17
0x40027b1	      0xe800000000	                          call 0x40027b6	      1919	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_14	CALL_17
0x40027b6	            0x85c0	                           test eax, eax	      1919	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_14	CALL_17
0x40027b8	            0x7440	                            je 0x40027fa	      1919	linker.c	FUNCTION_22	FOR_6	FOR_7	SWITCH_1	IF_14	CALL_17
0x40027ba	          0x488b1b	                    mov rbx, qword [rbx]	      1905	linker.c	FUNCTION_22	FOR_6	FOR_7
0x40027bd	          0x4885db	                           test rbx, rbx	      1905	linker.c	FUNCTION_22	FOR_6	FOR_7
0x40027c0	            0x759a	                           jne 0x400275c	      1905	linker.c	FUNCTION_22	FOR_6	FOR_7
0x40027c2	        0x4d8b6d10	            mov r13, qword [r13 + 0x10] 	      1903	linker.c	FUNCTION_22	FOR_6
0x40027c6	          0x4d85ed	                           test r13, r13	      1903	linker.c	FUNCTION_22	FOR_6
0x40027c9	            0x7585	                           jne 0x4002750	      1903	linker.c	FUNCTION_22	FOR_6
0x40027cb	      0xb801000000	                              mov eax, 1	      1926	linker.c	FUNCTION_22
0x40027d0	            0xeb28	                           jmp 0x40027fa	      1926	linker.c	FUNCTION_22
0x40027d2	      0xb801000000	                              mov eax, 1	      1926	linker.c	FUNCTION_22
0x40027d7	            0xeb21	                           jmp 0x40027fa	      1926	linker.c	FUNCTION_22
0x40027d9	      0xb800000000	                              mov eax, 0	      1868	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	IF_7
0x40027de	            0xeb1a	                           jmp 0x40027fa	      1868	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	IF_7
0x40027e0	      0xb800000000	                              mov eax, 0	      1871	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	IF_8
0x40027e5	            0xeb13	                           jmp 0x40027fa	      1871	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	IF_8
0x40027e7	      0xb800000000	                              mov eax, 0	      1879	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	IF_9
0x40027ec	            0xeb0c	                           jmp 0x40027fa	      1879	linker.c	FUNCTION_22	IF_4	FOR_4	FOR_5	ELSE_1	IF_6	IF_9
0x40027ee	      0xb800000000	                              mov eax, 0	      1893	linker.c	FUNCTION_22	IF_4	FOR_4	IF_10	IF_11
0x40027f3	            0xeb05	                           jmp 0x40027fa	      1893	linker.c	FUNCTION_22	IF_4	FOR_4	IF_10	IF_11
0x40027f5	      0xb801000000	                              mov eax, 1	      1926	linker.c	FUNCTION_22
0x40027fa	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      1927	linker.c	FUNCTION_22
0x40027ff	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      1927	linker.c	FUNCTION_22
0x4002808	            0x7405	                            je 0x400280f	      1927	linker.c	FUNCTION_22
0x400280a	      0xe800000000	                          call 0x400280f	      1927	linker.c	FUNCTION_22
0x400280f	        0x4883c448	                           add rsp, 0x48	      1927	linker.c	FUNCTION_22
0x4002813	              0x5b	                                 pop rbx	      1927	linker.c	FUNCTION_22
0x4002814	              0x5d	                                 pop rbp	      1927	linker.c	FUNCTION_22
0x4002815	            0x415c	                                 pop r12	      1927	linker.c	FUNCTION_22
0x4002817	            0x415d	                                 pop r13	      1927	linker.c	FUNCTION_22
0x4002819	            0x415e	                                 pop r14	      1927	linker.c	FUNCTION_22
0x400281b	            0x415f	                                 pop r15	      1927	linker.c	FUNCTION_22
0x400281d	              0xc3	                                     ret	      1927	linker.c	FUNCTION_22
_bfd_nolink_bfd_is_group_section	IF,0:ELSE,0:SWITCH,0:functions,0:CALL,1:WHILE,0:FOR,0:DO,0	4
0x40031fe	        0x4883ec08	                              sub rsp, 8	      3446	linker.c	FUNCTION_57
0x4003202	      0xe800000000	                          call 0x4003207	      3447	linker.c	FUNCTION_57	CALL_1
0x4003207	        0x4883c408	                              add rsp, 8	      3448	linker.c	FUNCTION_57
0x400320b	              0xc3	                                     ret	      3448	linker.c	FUNCTION_57
_bfd_generic_link_check_relocs	IF,0:ELSE,0:SWITCH,0:functions,0:CALL,0:WHILE,0:FOR,0:DO,0	2
0x400312e	      0xb801000000	                              mov eax, 1	      3347	linker.c	FUNCTION_51
0x4003133	              0xc3	                                     ret	      3347	linker.c	FUNCTION_51
_bfd_generic_link_hash_newfunc	IF,3:ELSE,0:SWITCH,0:functions,0:CALL,2:WHILE,0:FOR,0:DO,0	26
0x4000392	              0x55	                                push rbp	       722	linker.c	ELSE_2	FUNCTION_9
0x4000393	              0x53	                                push rbx	       722	linker.c	ELSE_2	FUNCTION_9
0x4000394	        0x4883ec08	                              sub rsp, 8	       722	linker.c	ELSE_2	FUNCTION_9
0x4000398	          0x4889f3	                            mov rbx, rsi	       722	linker.c	ELSE_2	FUNCTION_9
0x400039b	          0x4889d5	                            mov rbp, rdx	       722	linker.c	ELSE_2	FUNCTION_9
0x400039e	          0x4885ff	                           test rdi, rdi	       725	linker.c	ELSE_2	FUNCTION_9	IF_1
0x40003a1	            0x7515	                           jne 0x40003b8	       725	linker.c	ELSE_2	FUNCTION_9	IF_1
0x40003a3	      0xbe48000000	                           mov esi, 0x48	       727	linker.c	ELSE_2	FUNCTION_9	IF_1
0x40003a8	          0x4889df	                            mov rdi, rbx	       727	linker.c	ELSE_2	FUNCTION_9	IF_1
0x40003ab	      0xe800000000	                          call 0x40003b0	       727	linker.c	ELSE_2	FUNCTION_9	IF_1
0x40003b0	          0x4889c7	                            mov rdi, rax	       727	linker.c	ELSE_2	FUNCTION_9	IF_1
0x40003b3	          0x4885c0	                           test rax, rax	       729	linker.c	ELSE_2	FUNCTION_9	IF_1	IF_2
0x40003b6	            0x7421	                            je 0x40003d9	       729	linker.c	ELSE_2	FUNCTION_9	IF_1	IF_2
0x40003b8	          0x4889ea	                            mov rdx, rbp	       734	linker.c	ELSE_2	FUNCTION_9	CALL_2
0x40003bb	          0x4889de	                            mov rsi, rbx	       734	linker.c	ELSE_2	FUNCTION_9	CALL_2
0x40003be	      0xe800000000	                          call 0x40003c3	       734	linker.c	ELSE_2	FUNCTION_9	CALL_2
0x40003c3	          0x4885c0	                           test rax, rax	       735	linker.c	ELSE_2	FUNCTION_9	IF_3
0x40003c6	            0x7416	                            je 0x40003de	       735	linker.c	ELSE_2	FUNCTION_9	IF_3
0x40003c8	    0xc74038000000	               mov dword [rax + 0x38], 0	       741	linker.c	ELSE_2	FUNCTION_9	IF_3
0x40003cf	    0x48c740400000	               mov qword [rax + 0x40], 0	       742	linker.c	ELSE_2	FUNCTION_9	IF_3
0x40003d7	            0xeb05	                           jmp 0x40003de	       742	linker.c	ELSE_2	FUNCTION_9	IF_3
0x40003d9	      0xb800000000	                              mov eax, 0	       730	linker.c	ELSE_2	FUNCTION_9	IF_1	IF_2
0x40003de	        0x4883c408	                              add rsp, 8	       746	linker.c	ELSE_2	FUNCTION_9
0x40003e2	              0x5b	                                 pop rbx	       746	linker.c	ELSE_2	FUNCTION_9
0x40003e3	              0x5d	                                 pop rbp	       746	linker.c	ELSE_2	FUNCTION_9
0x40003e4	              0xc3	                                     ret	       746	linker.c	ELSE_2	FUNCTION_9
bfd_section_already_linked_table_lookup	IF,0:ELSE,0:SWITCH,0:functions,0:CALL,1:WHILE,0:FOR,0:DO,0	8
0x4002863	        0x4883ec08	                              sub rsp, 8	      2752	linker.c	FUNCTION_35
0x4002867	          0x4889fe	                            mov rsi, rdi	      2752	linker.c	FUNCTION_35
0x400286a	      0xb900000000	                              mov ecx, 0	      2753	linker.c	FUNCTION_35
0x400286f	      0xba01000000	                              mov edx, 1	      2753	linker.c	FUNCTION_35
0x4002874	      0xbf00000000	                              mov edi, 0	      2753	linker.c	FUNCTION_35
0x4002879	      0xe800000000	                          call 0x400287e	      2753	linker.c	FUNCTION_35
0x400287e	        0x4883c408	                              add rsp, 8	      2756	linker.c	FUNCTION_35
0x4002882	              0xc3	                                     ret	      2756	linker.c	FUNCTION_35
bfd_link_repair_undef_list	IF,3:ELSE,2:SWITCH,0:functions,0:CALL,0:WHILE,1:FOR,0:DO,0	22
0x40007e9	        0x488d7728	                   lea rsi, [rdi + 0x28]	       689	linker.c	FUNCTION_8
0x40007ed	          0x4889f2	                            mov rdx, rsi	       689	linker.c	FUNCTION_8
0x40007f0	            0xeb36	                           jmp 0x4000828	       690	linker.c	FUNCTION_8	WHILE_1
0x40007f2	        0xf64018fd	           test byte [rax + 0x18], 0xfd 	       694	linker.c	FUNCTION_8	WHILE_1	IF_1
0x40007f6	            0x752c	                           jne 0x4000824	       694	linker.c	FUNCTION_8	WHILE_1	IF_1
0x40007f8	        0x488b4820	            mov rcx, qword [rax + 0x20] 	       697	linker.c	FUNCTION_8	WHILE_1	IF_1
0x40007fc	          0x48890a	                    mov qword [rdx], rcx	       697	linker.c	FUNCTION_8	WHILE_1	IF_1
0x40007ff	    0x48c740200000	               mov qword [rax + 0x20], 0	       698	linker.c	FUNCTION_8	WHILE_1	IF_1
0x4000807	        0x483b4730	            cmp rax, qword [rdi + 0x30] 	       699	linker.c	FUNCTION_8	WHILE_1	IF_1	IF_2
0x400080b	            0x751b	                           jne 0x4000828	       699	linker.c	FUNCTION_8	WHILE_1	IF_1	IF_2
0x400080d	          0x4839f2	                            cmp rdx, rsi	       701	linker.c	FUNCTION_8	WHILE_1	IF_1	IF_2	IF_3
0x4000810	            0x7509	                           jne 0x400081b	       701	linker.c	FUNCTION_8	WHILE_1	IF_1	IF_2	IF_3
0x4000812	    0x48c747300000	               mov qword [rdi + 0x30], 0	       702	linker.c	FUNCTION_8	WHILE_1	IF_1	IF_2	IF_3
0x400081a	              0xc3	                                     ret	       702	linker.c	FUNCTION_8	WHILE_1	IF_1	IF_2	IF_3
0x400081b	        0x4883ea20	                           sub rdx, 0x20	       706	linker.c	FUNCTION_8	WHILE_1	IF_1	IF_2	ELSE_1
0x400081f	        0x48895730	             mov qword [rdi + 0x30], rdx	       706	linker.c	FUNCTION_8	WHILE_1	IF_1	IF_2	ELSE_1
0x4000823	              0xc3	                                     ret	       706	linker.c	FUNCTION_8	WHILE_1	IF_1	IF_2	ELSE_1
0x4000824	        0x488d5020	                   lea rdx, [rax + 0x20]	       712	linker.c	FUNCTION_8	WHILE_1	ELSE_2
0x4000828	          0x488b02	                    mov rax, qword [rdx]	       690	linker.c	FUNCTION_8	WHILE_1
0x400082b	          0x4885c0	                           test rax, rax	       690	linker.c	FUNCTION_8	WHILE_1
0x400082e	            0x75c2	                           jne 0x40007f2	       690	linker.c	FUNCTION_8	WHILE_1
0x4000830	            0xf3c3	                                     ret	       690	linker.c	FUNCTION_8	WHILE_1
_bfd_generic_reloc_link_order	IF,9:ELSE,2:SWITCH,1:functions,0:CALL,16:WHILE,0:FOR,0:DO,0	158
0x4002101	            0x4157	                                push r15	      2314	linker.c	FUNCTION_27
0x4002103	            0x4156	                                push r14	      2314	linker.c	FUNCTION_27
0x4002105	            0x4155	                                push r13	      2314	linker.c	FUNCTION_27
0x4002107	            0x4154	                                push r12	      2314	linker.c	FUNCTION_27
0x4002109	              0x55	                                push rbp	      2314	linker.c	FUNCTION_27
0x400210a	              0x53	                                push rbx	      2314	linker.c	FUNCTION_27
0x400210b	        0x4883ec18	                           sub rsp, 0x18	      2314	linker.c	FUNCTION_27
0x400210f	           0xfb606	                   movzx eax, byte [rsi]	      2317	linker.c	FUNCTION_27	IF_1	CALL_1
0x4002112	          0x83e003	                              and eax, 3	      2317	linker.c	FUNCTION_27	IF_1	CALL_1
0x4002115	            0x3c02	                               cmp al, 2	      2317	linker.c	FUNCTION_27	IF_1	CALL_1
0x4002117	            0x7414	                            je 0x400212d	      2317	linker.c	FUNCTION_27	IF_1	CALL_1
0x4002119	      0xba00000000	                              mov edx, 0	      2318	linker.c	FUNCTION_27	CALL_2
0x400211e	      0xbe0e090000	                          mov esi, 0x90e	      2318	linker.c	FUNCTION_27	CALL_2
0x4002123	      0xbf00000000	                              mov edi, 0	      2318	linker.c	FUNCTION_27	CALL_2
0x4002128	      0xe800000000	                          call 0x400212d	      2318	linker.c	FUNCTION_27	CALL_2
0x400212d	          0x4989fd	                            mov r13, rdi	      2318	linker.c	FUNCTION_27	CALL_2
0x4002130	          0x4989f6	                            mov r14, rsi	      2318	linker.c	FUNCTION_27	CALL_2
0x4002133	          0x4989d4	                            mov r12, rdx	      2318	linker.c	FUNCTION_27	CALL_2
0x4002136	          0x4889cd	                            mov rbp, rcx	      2318	linker.c	FUNCTION_27	CALL_2
0x4002139	    0x4883ba800000	               cmp qword [rdx + 0x80], 0	      2319	linker.c	FUNCTION_27	IF_2
0x4002141	            0x7514	                           jne 0x4002157	      2319	linker.c	FUNCTION_27	IF_2
0x4002143	      0xba00000000	                              mov edx, 0	      2320	linker.c	FUNCTION_27	CALL_3
0x4002148	      0xbe10090000	                          mov esi, 0x910	      2320	linker.c	FUNCTION_27	CALL_3
0x400214d	      0xbf00000000	                              mov edi, 0	      2320	linker.c	FUNCTION_27	CALL_3
0x4002152	      0xe800000000	                          call 0x4002157	      2320	linker.c	FUNCTION_27	CALL_3
0x4002157	      0xbe20000000	                           mov esi, 0x20	      2322	linker.c	FUNCTION_27	CALL_4
0x400215c	      0xe800000000	                          call 0x4002161	      2322	linker.c	FUNCTION_27	CALL_4
0x4002161	          0x4889c3	                            mov rbx, rax	      2322	linker.c	FUNCTION_27	CALL_4
0x4002164	          0x4885c0	                           test rax, rax	      2323	linker.c	FUNCTION_27	IF_3
0x4002167	     0xf84d9010000	                            je 0x4002346	      2323	linker.c	FUNCTION_27	IF_3
0x400216d	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      2326	linker.c	FUNCTION_27
0x4002171	        0x48894308	                mov qword [rbx + 8], rax	      2326	linker.c	FUNCTION_27
0x4002175	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      2327	linker.c	FUNCTION_27	CALL_5
0x4002179	            0x8b30	                    mov esi, dword [rax]	      2327	linker.c	FUNCTION_27	CALL_5
0x400217b	          0x4c89ef	                            mov rdi, r13	      2327	linker.c	FUNCTION_27	CALL_5
0x400217e	      0xe800000000	                          call 0x4002183	      2327	linker.c	FUNCTION_27	CALL_5
0x4002183	        0x48894318	             mov qword [rbx + 0x18], rax	      2327	linker.c	FUNCTION_27	CALL_5
0x4002187	          0x4885c0	                           test rax, rax	      2328	linker.c	FUNCTION_27	IF_4
0x400218a	            0x7514	                           jne 0x40021a0	      2328	linker.c	FUNCTION_27	IF_4
0x400218c	      0xbf11000000	                           mov edi, 0x11	      2330	linker.c	FUNCTION_27	IF_4	CALL_6
0x4002191	      0xe800000000	                          call 0x4002196	      2330	linker.c	FUNCTION_27	IF_4	CALL_6
0x4002196	      0xb800000000	                              mov eax, 0	      2331	linker.c	FUNCTION_27	IF_4
0x400219b	      0xe9ab010000	                           jmp 0x400234b	      2331	linker.c	FUNCTION_27	IF_4
0x40021a0	        0x837d0803	                  cmp dword [rbp + 8], 3	      2335	linker.c	FUNCTION_27	IF_5
0x40021a4	            0x7514	                           jne 0x40021ba	      2335	linker.c	FUNCTION_27	IF_5
0x40021a6	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      2336	linker.c	FUNCTION_27	IF_5
0x40021aa	        0x488b4008	                mov rax, qword [rax + 8]	      2336	linker.c	FUNCTION_27	IF_5
0x40021ae	    0x488b80000100	           mov rax, qword [rax + 0x100] 	      2336	linker.c	FUNCTION_27	IF_5
0x40021b5	          0x488903	                    mov qword [rbx], rax	      2336	linker.c	FUNCTION_27	IF_5
0x40021b8	            0xeb6c	                           jmp 0x4002226	      2336	linker.c	FUNCTION_27	IF_5
0x40021ba	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      2342	linker.c	FUNCTION_27	ELSE_1	CALL_7
0x40021be	        0x488b5008	                mov rdx, qword [rax + 8]	      2341	linker.c	FUNCTION_27	ELSE_1
0x40021c2	    0x41b901000000	                              mov r9d, 1	      2341	linker.c	FUNCTION_27	ELSE_1
0x40021c8	    0x41b800000000	                              mov r8d, 0	      2341	linker.c	FUNCTION_27	ELSE_1
0x40021ce	      0xb900000000	                              mov ecx, 0	      2341	linker.c	FUNCTION_27	ELSE_1
0x40021d3	          0x4c89f6	                            mov rsi, r14	      2341	linker.c	FUNCTION_27	ELSE_1
0x40021d6	          0x4c89ef	                            mov rdi, r13	      2341	linker.c	FUNCTION_27	ELSE_1
0x40021d9	      0xe800000000	                          call 0x40021de	      2341	linker.c	FUNCTION_27	ELSE_1
0x40021de	          0x4885c0	                           test rax, rax	      2345	linker.c	FUNCTION_27	ELSE_1	IF_6
0x40021e1	            0x7406	                            je 0x40021e9	      2345	linker.c	FUNCTION_27	ELSE_1	IF_6
0x40021e3	        0x83783800	               cmp dword [rax + 0x38], 0	      2346	linker.c	FUNCTION_27	ELSE_1	IF_6
0x40021e7	            0x7536	                           jne 0x400221f	      2346	linker.c	FUNCTION_27	ELSE_1	IF_6
0x40021e9	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      2348	linker.c	FUNCTION_27	ELSE_1	IF_6
0x40021ed	        0x488b7008	                mov rsi, qword [rax + 8]	      2348	linker.c	FUNCTION_27	ELSE_1	IF_6
0x40021f1	        0x498b4620	            mov rax, qword [r14 + 0x20] 	      2348	linker.c	FUNCTION_27	ELSE_1	IF_6
0x40021f5	    0x41b800000000	                              mov r8d, 0	      2348	linker.c	FUNCTION_27	ELSE_1	IF_6
0x40021fb	      0xb900000000	                              mov ecx, 0	      2348	linker.c	FUNCTION_27	ELSE_1	IF_6
0x4002200	      0xba00000000	                              mov edx, 0	      2348	linker.c	FUNCTION_27	ELSE_1	IF_6
0x4002205	          0x4c89f7	                            mov rdi, r14	      2348	linker.c	FUNCTION_27	ELSE_1	IF_6
0x4002208	          0xff5048	                 call qword [rax + 0x48]	      2348	linker.c	FUNCTION_27	ELSE_1	IF_6
0x400220b	      0xbf11000000	                           mov edi, 0x11	      2350	linker.c	FUNCTION_27	ELSE_1	IF_6	CALL_8
0x4002210	      0xe800000000	                          call 0x4002215	      2350	linker.c	FUNCTION_27	ELSE_1	IF_6	CALL_8
0x4002215	      0xb800000000	                              mov eax, 0	      2351	linker.c	FUNCTION_27	ELSE_1	IF_6
0x400221a	      0xe92c010000	                           jmp 0x400234b	      2351	linker.c	FUNCTION_27	ELSE_1	IF_6
0x400221f	        0x4883c040	                           add rax, 0x40	      2353	linker.c	FUNCTION_27	ELSE_1
0x4002223	          0x488903	                    mov qword [rbx], rax	      2353	linker.c	FUNCTION_27	ELSE_1
0x4002226	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      2358	linker.c	FUNCTION_27	IF_7
0x400222a	        0x837f3000	               cmp dword [rdi + 0x30], 0	      2358	linker.c	FUNCTION_27	IF_7
0x400222e	            0x7511	                           jne 0x4002241	      2358	linker.c	FUNCTION_27	IF_7
0x4002230	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      2359	linker.c	FUNCTION_27	IF_7
0x4002234	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2359	linker.c	FUNCTION_27	IF_7
0x4002238	        0x48894310	             mov qword [rbx + 0x10], rax	      2359	linker.c	FUNCTION_27	IF_7
0x400223c	      0xe9e1000000	                           jmp 0x4002322	      2359	linker.c	FUNCTION_27	IF_7
0x4002241	      0xe800000000	                          call 0x4002246	      2368	linker.c	FUNCTION_27	ELSE_2	CALL_9
0x4002246	          0x4189c7	                           mov r15d, eax	      2368	linker.c	FUNCTION_27	ELSE_2	CALL_9
0x4002249	          0x4c89ff	                            mov rdi, r15	      2369	linker.c	FUNCTION_27	ELSE_2	CALL_10
0x400224c	      0xe800000000	                          call 0x4002251	      2369	linker.c	FUNCTION_27	ELSE_2	CALL_10
0x4002251	      0x4889442408	                mov qword [rsp + 8], rax	      2369	linker.c	FUNCTION_27	ELSE_2	CALL_10
0x4002256	          0x4885c0	                           test rax, rax	      2370	linker.c	FUNCTION_27	ELSE_2	IF_8
0x4002259	            0x7509	                           jne 0x4002264	      2370	linker.c	FUNCTION_27	ELSE_2	IF_8
0x400225b	          0x4d85ff	                           test r15, r15	      2370	linker.c	FUNCTION_27	ELSE_2	IF_8
0x400225e	     0xf85e7000000	                           jne 0x400234b	      2370	linker.c	FUNCTION_27	ELSE_2	IF_8
0x4002264	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      2373	linker.c	FUNCTION_27	ELSE_2
0x4002268	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      2372	linker.c	FUNCTION_27	ELSE_2	CALL_11
0x400226c	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      2372	linker.c	FUNCTION_27	ELSE_2	CALL_11
0x4002270	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      2372	linker.c	FUNCTION_27	ELSE_2	CALL_11
0x4002275	          0x4c89ee	                            mov rsi, r13	      2372	linker.c	FUNCTION_27	ELSE_2	CALL_11
0x4002278	      0xe800000000	                          call 0x400227d	      2372	linker.c	FUNCTION_27	ELSE_2	CALL_11
0x400227d	          0x83f802	                              cmp eax, 2	      2375	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x4002280	            0x745d	                            je 0x40022df	      2375	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x4002282	          0x83f803	                              cmp eax, 3	      2375	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x4002285	            0x7414	                            je 0x400229b	      2375	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x4002287	      0xba00000000	                              mov edx, 0	      2381	linker.c	FUNCTION_27	ELSE_2	SWITCH_1	CALL_12
0x400228c	      0xbe4d090000	                          mov esi, 0x94d	      2381	linker.c	FUNCTION_27	ELSE_2	SWITCH_1	CALL_12
0x4002291	      0xbf00000000	                              mov edi, 0	      2381	linker.c	FUNCTION_27	ELSE_2	SWITCH_1	CALL_12
0x4002296	      0xe800000000	                          call 0x400229b	      2381	linker.c	FUNCTION_27	ELSE_2	SWITCH_1	CALL_12
0x400229b	        0x498b4620	            mov rax, qword [r14 + 0x20] 	      2383	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x400229f	        0x4c8b5038	            mov r10, qword [rax + 0x38] 	      2383	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x40022a3	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      2388	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x40022a7	        0x4c8b4010	              mov r8, qword [rax + 0x10]	      2383	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x40022ab	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      2388	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x40022af	        0x488b4a28	            mov rcx, qword [rdx + 0x28] 	      2388	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x40022b3	        0x837d0803	                  cmp dword [rbp + 8], 3	      2383	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x40022b7	            0x7509	                           jne 0x40022c2	      2383	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x40022b9	        0x488b4008	                mov rax, qword [rax + 8]	      2383	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x40022bd	          0x488b10	                    mov rdx, qword [rax]	      2383	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x40022c0	            0xeb04	                           jmp 0x40022c6	      2383	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x40022c2	        0x488b5008	                mov rdx, qword [rax + 8]	      2383	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x40022c6	            0x6a00	                                  push 0	      2383	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x40022c8	            0x6a00	                                  push 0	      2383	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x40022ca	    0x41b900000000	                              mov r9d, 0	      2383	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x40022d0	      0xbe00000000	                              mov esi, 0	      2383	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x40022d5	          0x4c89f7	                            mov rdi, r14	      2383	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x40022d8	          0x41ffd2	                                call r10	      2383	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x40022db	        0x4883c410	                           add rsp, 0x10	      2390	linker.c	FUNCTION_27	ELSE_2	SWITCH_1
0x40022df	        0x488b6d10	            mov rbp, qword [rbp + 0x10] 	      2392	linker.c	FUNCTION_27	ELSE_2	CALL_14
0x40022e3	          0x4c89ef	                            mov rdi, r13	      2392	linker.c	FUNCTION_27	ELSE_2	CALL_14
0x40022e6	      0xe800000000	                          call 0x40022eb	      2392	linker.c	FUNCTION_27	ELSE_2	CALL_14
0x40022eb	            0x89c1	                            mov ecx, eax	      2393	linker.c	FUNCTION_27	ELSE_2	CALL_15
0x40022ed	        0x480fafcd	                           imul rcx, rbp	      2393	linker.c	FUNCTION_27	ELSE_2	CALL_15
0x40022f1	          0x4d89f8	                             mov r8, r15	      2393	linker.c	FUNCTION_27	ELSE_2	CALL_15
0x40022f4	      0x4c8b7c2408	                mov r15, qword [rsp + 8]	      2393	linker.c	FUNCTION_27	ELSE_2	CALL_15
0x40022f9	          0x4c89fa	                            mov rdx, r15	      2393	linker.c	FUNCTION_27	ELSE_2	CALL_15
0x40022fc	          0x4c89e6	                            mov rsi, r12	      2393	linker.c	FUNCTION_27	ELSE_2	CALL_15
0x40022ff	          0x4c89ef	                            mov rdi, r13	      2393	linker.c	FUNCTION_27	ELSE_2	CALL_15
0x4002302	      0xe800000000	                          call 0x4002307	      2393	linker.c	FUNCTION_27	ELSE_2	CALL_15
0x4002307	            0x89c5	                            mov ebp, eax	      2393	linker.c	FUNCTION_27	ELSE_2	CALL_15
0x4002309	          0x4c89ff	                            mov rdi, r15	      2394	linker.c	FUNCTION_27	ELSE_2	CALL_16
0x400230c	      0xe800000000	                          call 0x4002311	      2394	linker.c	FUNCTION_27	ELSE_2	CALL_16
0x4002311	      0xb800000000	                              mov eax, 0	      2396	linker.c	FUNCTION_27	ELSE_2	IF_9
0x4002316	            0x85ed	                           test ebp, ebp	      2395	linker.c	FUNCTION_27	ELSE_2	IF_9
0x4002318	            0x7431	                            je 0x400234b	      2395	linker.c	FUNCTION_27	ELSE_2	IF_9
0x400231a	    0x48c743100000	               mov qword [rbx + 0x10], 0	      2398	linker.c	FUNCTION_27	ELSE_2
0x4002322	    0x418b94248800	            mov edx, dword [r12 + 0x88] 	      2401	linker.c	FUNCTION_27
0x400232a	    0x498b84248000	            mov rax, qword [r12 + 0x80] 	      2401	linker.c	FUNCTION_27
0x4002332	        0x48891cd0	            mov qword [rax + rdx*8], rbx	      2401	linker.c	FUNCTION_27
0x4002336	    0x418384248800	               add dword [r12 + 0x88], 1	      2402	linker.c	FUNCTION_27
0x400233f	      0xb801000000	                              mov eax, 1	      2404	linker.c	FUNCTION_27
0x4002344	            0xeb05	                           jmp 0x400234b	      2404	linker.c	FUNCTION_27
0x4002346	      0xb800000000	                              mov eax, 0	      2324	linker.c	FUNCTION_27	IF_3
0x400234b	        0x4883c418	                           add rsp, 0x18	      2405	linker.c	FUNCTION_27
0x400234f	              0x5b	                                 pop rbx	      2405	linker.c	FUNCTION_27
0x4002350	              0x5d	                                 pop rbp	      2405	linker.c	FUNCTION_27
0x4002351	            0x415c	                                 pop r12	      2405	linker.c	FUNCTION_27
0x4002353	            0x415d	                                 pop r13	      2405	linker.c	FUNCTION_27
0x4002355	            0x415e	                                 pop r14	      2405	linker.c	FUNCTION_27
0x4002357	            0x415f	                                 pop r15	      2405	linker.c	FUNCTION_27
0x4002359	              0xc3	                                     ret	      2405	linker.c	FUNCTION_27
_bfd_link_hash_newfunc	IF,3:ELSE,0:SWITCH,0:functions,0:CALL,3:WHILE,0:FOR,0:DO,0	30
0x4000328	              0x55	                                push rbp	       430	linker.c	FUNCTION_1
0x4000329	              0x53	                                push rbx	       430	linker.c	FUNCTION_1
0x400032a	        0x4883ec08	                              sub rsp, 8	       430	linker.c	FUNCTION_1
0x400032e	          0x4889f3	                            mov rbx, rsi	       430	linker.c	FUNCTION_1
0x4000331	          0x4889d5	                            mov rbp, rdx	       430	linker.c	FUNCTION_1
0x4000334	          0x4885ff	                           test rdi, rdi	       433	linker.c	FUNCTION_1	IF_1
0x4000337	            0x7515	                           jne 0x400034e	       433	linker.c	FUNCTION_1	IF_1
0x4000339	      0xbe38000000	                           mov esi, 0x38	       435	linker.c	FUNCTION_1	IF_1
0x400033e	          0x4889df	                            mov rdi, rbx	       435	linker.c	FUNCTION_1	IF_1
0x4000341	      0xe800000000	                          call 0x4000346	       435	linker.c	FUNCTION_1	IF_1
0x4000346	          0x4889c7	                            mov rdi, rax	       435	linker.c	FUNCTION_1	IF_1
0x4000349	          0x4885c0	                           test rax, rax	       437	linker.c	FUNCTION_1	IF_1	IF_2
0x400034c	            0x7438	                            je 0x4000386	       437	linker.c	FUNCTION_1	IF_1	IF_2
0x400034e	          0x4889ea	                            mov rdx, rbp	       442	linker.c	FUNCTION_1	CALL_2
0x4000351	          0x4889de	                            mov rsi, rbx	       442	linker.c	FUNCTION_1	CALL_2
0x4000354	      0xe800000000	                          call 0x4000359	       442	linker.c	FUNCTION_1	CALL_2
0x4000359	          0x4889c2	                            mov rdx, rax	       442	linker.c	FUNCTION_1	CALL_2
0x400035c	          0x4885c0	                           test rax, rax	       443	linker.c	FUNCTION_1	IF_3
0x400035f	            0x742a	                            je 0x400038b	       443	linker.c	FUNCTION_1	IF_3
0x4000361	    0x48c742180000	               mov qword [rdx + 0x18], 0	        90	string3.h	FUNCTION_69	CALL_6
0x4000369	    0x48c742200000	               mov qword [rdx + 0x20], 0	        90	string3.h	FUNCTION_69	CALL_6
0x4000371	    0x48c742280000	               mov qword [rdx + 0x28], 0	        90	string3.h	FUNCTION_69	CALL_6
0x4000379	    0x48c742300000	               mov qword [rdx + 0x30], 0	        90	string3.h	FUNCTION_69	CALL_6
0x4000381	          0x4889d0	                            mov rax, rdx	       452	linker.c	FUNCTION_1
0x4000384	            0xeb05	                           jmp 0x400038b	       452	linker.c	FUNCTION_1
0x4000386	      0xb800000000	                              mov eax, 0	       438	linker.c	FUNCTION_1	IF_1	IF_2
0x400038b	        0x4883c408	                              add rsp, 8	       453	linker.c	FUNCTION_1
0x400038f	              0x5b	                                 pop rbx	       453	linker.c	FUNCTION_1
0x4000390	              0x5d	                                 pop rbp	       453	linker.c	FUNCTION_1
0x4000391	              0xc3	                                     ret	       453	linker.c	FUNCTION_1
_bfd_generic_link_hash_table_free	IF,0:ELSE,0:SWITCH,0:functions,0:CALL,3:WHILE,0:FOR,0:DO,0	22
0x4000063	              0x55	                                push rbp	       771	linker.c	FUNCTION_11
0x4000064	              0x53	                                push rbx	       771	linker.c	FUNCTION_11
0x4000065	        0x4883ec08	                              sub rsp, 8	       771	linker.c	FUNCTION_11
0x4000069	          0x4889fb	                            mov rbx, rdi	       771	linker.c	FUNCTION_11
0x400006c	        0xf6474804	               test byte [rdi + 0x48], 4	       774	linker.c	FUNCTION_11	CALL_1
0x4000070	            0x740a	                            je 0x400007c	       774	linker.c	FUNCTION_11	CALL_1
0x4000072	    0x4883bff00000	               cmp qword [rdi + 0xf0], 0	       774	linker.c	FUNCTION_11	CALL_1
0x400007a	            0x750f	                           jne 0x400008b	       774	linker.c	FUNCTION_11	CALL_1
0x400007c	      0xbe06030000	                          mov esi, 0x306	       774	linker.c	FUNCTION_11	CALL_1
0x4000081	      0xbf00000000	                              mov edi, 0	       774	linker.c	FUNCTION_11	CALL_1
0x4000086	      0xe800000000	                          call 0x400008b	       774	linker.c	FUNCTION_11	CALL_1
0x400008b	    0x488babf00000	            mov rbp, qword [rbx + 0xf0] 	       775	linker.c	FUNCTION_11
0x4000092	          0x4889ef	                            mov rdi, rbp	       776	linker.c	FUNCTION_11	CALL_2
0x4000095	      0xe800000000	                          call 0x400009a	       776	linker.c	FUNCTION_11	CALL_2
0x400009a	          0x4889ef	                            mov rdi, rbp	       777	linker.c	FUNCTION_11	CALL_3
0x400009d	      0xe800000000	                          call 0x40000a2	       777	linker.c	FUNCTION_11	CALL_3
0x40000a2	    0x48c783f00000	               mov qword [rbx + 0xf0], 0	       778	linker.c	FUNCTION_11
0x40000ad	        0x806348fb	             and byte [rbx + 0x48], 0xfb	       779	linker.c	FUNCTION_11
0x40000b1	        0x4883c408	                              add rsp, 8	       780	linker.c	FUNCTION_11
0x40000b5	              0x5b	                                 pop rbx	       780	linker.c	FUNCTION_11
0x40000b6	              0x5d	                                 pop rbp	       780	linker.c	FUNCTION_11
0x40000b7	              0xc3	                                     ret	       780	linker.c	FUNCTION_11
generic_link_check_archive_element	IF,10:ELSE,2:SWITCH,0:functions,0:CALL,16:WHILE,0:FOR,1:DO,0	119
0x4000902	            0x4157	                                push r15	      1024	linker.c	FUNCTION_18
0x4000904	            0x4156	                                push r14	      1024	linker.c	FUNCTION_18
0x4000906	            0x4155	                                push r13	      1024	linker.c	FUNCTION_18
0x4000908	            0x4154	                                push r12	      1024	linker.c	FUNCTION_18
0x400090a	              0x55	                                push rbp	      1024	linker.c	FUNCTION_18
0x400090b	              0x53	                                push rbx	      1024	linker.c	FUNCTION_18
0x400090c	        0x4883ec18	                           sub rsp, 0x18	      1024	linker.c	FUNCTION_18
0x4000910	      0x48897c2408	                mov qword [rsp + 8], rdi	      1024	linker.c	FUNCTION_18
0x4000915	          0x4989f6	                            mov r14, rsi	      1024	linker.c	FUNCTION_18
0x4000918	        0x4c890424	                     mov qword [rsp], r8	      1024	linker.c	FUNCTION_18
0x400091c	    0x41c700000000	                       mov dword [r8], 0	      1027	linker.c	FUNCTION_18
0x4000923	      0xe800000000	                          call 0x4000928	      1029	linker.c	FUNCTION_18	IF_1	CALL_1
0x4000928	            0x85c0	                           test eax, eax	      1029	linker.c	FUNCTION_18	IF_1	CALL_1
0x400092a	     0xf8495010000	                            je 0x4000ac5	      1029	linker.c	FUNCTION_18	IF_1	CALL_1
0x4000930	      0x488b442408	                mov rax, qword [rsp + 8]	      1032	linker.c	FUNCTION_18	CALL_2
0x4000935	    0x488b98b00000	            mov rbx, qword [rax + 0xb0] 	      1032	linker.c	FUNCTION_18	CALL_2
0x400093c	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      1033	linker.c	FUNCTION_18	CALL_3
0x4000942	        0x4c8d2cc3	                  lea r13, [rbx + rax*8]	      1033	linker.c	FUNCTION_18	CALL_3
0x4000946	          0x4c39eb	                            cmp rbx, r13	      1034	linker.c	FUNCTION_18	FOR_1
0x4000949	     0xf836a010000	                           jae 0x4000ab9	      1034	linker.c	FUNCTION_18	FOR_1
0x400094f	          0x488b2b	                    mov rbp, qword [rbx]	      1038	linker.c	FUNCTION_18	FOR_1
0x4000952	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      1041	linker.c	FUNCTION_18	FOR_1	IF_2	CALL_4
0x4000956	        0xf6402110	           test byte [rax + 0x21], 0x10 	      1041	linker.c	FUNCTION_18	FOR_1	IF_2	CALL_4
0x400095a	            0x750d	                           jne 0x4000969	      1041	linker.c	FUNCTION_18	FOR_1	IF_2	CALL_4
0x400095c	    0xf74518822000	        test dword [rbp + 0x18], 0x2082 	      1042	linker.c	FUNCTION_18	FOR_1	IF_2
0x4000963	     0xf843c010000	                            je 0x4000aa5	      1042	linker.c	FUNCTION_18	FOR_1	IF_2
0x4000969	        0x488b7508	                mov rsi, qword [rbp + 8]	      1050	linker.c	FUNCTION_18	FOR_1	CALL_6
0x400096d	        0x498b7e28	            mov rdi, qword [r14 + 0x28] 	      1050	linker.c	FUNCTION_18	FOR_1	CALL_6
0x4000971	    0x41b801000000	                              mov r8d, 1	      1050	linker.c	FUNCTION_18	FOR_1	CALL_6
0x4000977	      0xb900000000	                              mov ecx, 0	      1050	linker.c	FUNCTION_18	FOR_1	CALL_6
0x400097c	      0xba00000000	                              mov edx, 0	      1050	linker.c	FUNCTION_18	FOR_1	CALL_6
0x4000981	      0xe800000000	                          call 0x4000986	      1050	linker.c	FUNCTION_18	FOR_1	CALL_6
0x4000986	          0x4989c4	                            mov r12, rax	      1050	linker.c	FUNCTION_18	FOR_1	CALL_6
0x4000989	          0x4885c0	                           test rax, rax	      1052	linker.c	FUNCTION_18	FOR_1	IF_3
0x400098c	     0xf8413010000	                            je 0x4000aa5	      1052	linker.c	FUNCTION_18	FOR_1	IF_3
0x4000992	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      1053	linker.c	FUNCTION_18	FOR_1	IF_3
0x4000996	            0x89c2	                            mov edx, eax	      1053	linker.c	FUNCTION_18	FOR_1	IF_3
0x4000998	          0x83e2fb	                     and edx, 0xfffffffb	      1053	linker.c	FUNCTION_18	FOR_1	IF_3
0x400099b	          0x80fa01	                               cmp dl, 1	      1053	linker.c	FUNCTION_18	FOR_1	IF_3
0x400099e	     0xf8501010000	                           jne 0x4000aa5	      1053	linker.c	FUNCTION_18	FOR_1	IF_3
0x40009a4	        0x488b5520	            mov rdx, qword [rbp + 0x20] 	      1059	linker.c	FUNCTION_18	FOR_1	IF_4	CALL_7
0x40009a8	        0xf6422110	           test byte [rdx + 0x21], 0x10 	      1059	linker.c	FUNCTION_18	FOR_1	IF_4	CALL_7
0x40009ac	            0x7412	                            je 0x40009c0	      1059	linker.c	FUNCTION_18	FOR_1	IF_4	CALL_7
0x40009ae	            0x3c01	                               cmp al, 1	      1060	linker.c	FUNCTION_18	FOR_1	IF_4
0x40009b0	     0xf85db000000	                           jne 0x4000a91	      1060	linker.c	FUNCTION_18	FOR_1	IF_4
0x40009b6	      0x4d8b7c2428	            mov r15, qword [r12 + 0x28] 	      1061	linker.c	FUNCTION_18	FOR_1	IF_4
0x40009bb	          0x4d85ff	                           test r15, r15	      1061	linker.c	FUNCTION_18	FOR_1	IF_4
0x40009be	            0x7540	                           jne 0x4000a00	      1061	linker.c	FUNCTION_18	FOR_1	IF_4
0x40009c0	        0x488b0424	                    mov rax, qword [rsp]	      1066	linker.c	FUNCTION_18	FOR_1	IF_4
0x40009c4	    0xc70001000000	                      mov dword [rax], 1	      1066	linker.c	FUNCTION_18	FOR_1	IF_4
0x40009ca	        0x488b5508	                mov rdx, qword [rbp + 8]	      1067	linker.c	FUNCTION_18	FOR_1	IF_4	IF_5
0x40009ce	        0x498b4620	            mov rax, qword [r14 + 0x20] 	      1067	linker.c	FUNCTION_18	FOR_1	IF_4	IF_5
0x40009d2	      0x488d4c2408	                      lea rcx, [rsp + 8]	      1067	linker.c	FUNCTION_18	FOR_1	IF_4	IF_5
0x40009d7	      0x488b742408	                mov rsi, qword [rsp + 8]	      1067	linker.c	FUNCTION_18	FOR_1	IF_4	IF_5
0x40009dc	          0x4c89f7	                            mov rdi, r14	      1067	linker.c	FUNCTION_18	FOR_1	IF_4	IF_5
0x40009df	            0xff10	                        call qword [rax]	      1067	linker.c	FUNCTION_18	FOR_1	IF_4	IF_5
0x40009e1	            0x85c0	                           test eax, eax	      1067	linker.c	FUNCTION_18	FOR_1	IF_4	IF_5
0x40009e3	     0xf84dc000000	                            je 0x4000ac5	      1067	linker.c	FUNCTION_18	FOR_1	IF_4	IF_5
0x40009e9	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1073	linker.c	FUNCTION_18	FOR_1	IF_4	CALL_9
0x40009ee	        0x488b4708	                mov rax, qword [rdi + 8]	      1073	linker.c	FUNCTION_18	FOR_1	IF_4	CALL_9
0x40009f2	          0x4c89f6	                            mov rsi, r14	      1073	linker.c	FUNCTION_18	FOR_1	IF_4	CALL_9
0x40009f5	    0xff90c0020000	                call qword [rax + 0x2c0]	      1073	linker.c	FUNCTION_18	FOR_1	IF_4	CALL_9
0x40009fb	      0xe9c5000000	                           jmp 0x4000ac5	      1073	linker.c	FUNCTION_18	FOR_1	IF_4	CALL_9
0x4000a00	    0x41c644241805	                mov byte [r12 + 0x18], 5	      1092	linker.c	FUNCTION_18	FOR_1	IF_6
0x4000a06	        0x498b7e28	            mov rdi, qword [r14 + 0x28] 	      1094	linker.c	FUNCTION_18	FOR_1	IF_6	CALL_10
0x4000a0a	      0xbe10000000	                           mov esi, 0x10	      1094	linker.c	FUNCTION_18	FOR_1	IF_6	CALL_10
0x4000a0f	      0xe800000000	                          call 0x4000a14	      1094	linker.c	FUNCTION_18	FOR_1	IF_6	CALL_10
0x4000a14	      0x4989442428	             mov qword [r12 + 0x28], rax	      1093	linker.c	FUNCTION_18	FOR_1	IF_6
0x4000a19	          0x4885c0	                           test rax, rax	      1096	linker.c	FUNCTION_18	FOR_1	IF_6	IF_7
0x4000a1c	     0xf849e000000	                            je 0x4000ac0	      1096	linker.c	FUNCTION_18	FOR_1	IF_6	IF_7
0x4000a22	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      1099	linker.c	FUNCTION_18	FOR_1	IF_6	CALL_11
0x4000a26	        0x488b7d10	            mov rdi, qword [rbp + 0x10] 	      1099	linker.c	FUNCTION_18	FOR_1	IF_6	CALL_11
0x4000a2a	        0x48037828	             add rdi, qword [rax + 0x28]	      1099	linker.c	FUNCTION_18	FOR_1	IF_6	CALL_11
0x4000a2e	      0x49897c2430	             mov qword [r12 + 0x30], rdi	      1100	linker.c	FUNCTION_18	FOR_1	IF_6
0x4000a33	      0xe800000000	                          call 0x4000a38	      1102	linker.c	FUNCTION_18	FOR_1	IF_6	CALL_12
0x4000a38	      0x498b542428	            mov rdx, qword [r12 + 0x28] 	      1105	linker.c	FUNCTION_18	FOR_1	IF_6
0x4000a3d	          0x83f804	                              cmp eax, 4	      1105	linker.c	FUNCTION_18	FOR_1	IF_6
0x4000a40	      0xb904000000	                              mov ecx, 4	      1105	linker.c	FUNCTION_18	FOR_1	IF_6
0x4000a45	           0xf47c1	                          cmova eax, ecx	      1105	linker.c	FUNCTION_18	FOR_1	IF_6
0x4000a48	            0x8902	                    mov dword [rdx], eax	      1105	linker.c	FUNCTION_18	FOR_1	IF_6
0x4000a4a	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      1107	linker.c	FUNCTION_18	FOR_1	IF_6	IF_9
0x4000a4e	    0x483d00000000	                              cmp rax, 0	      1107	linker.c	FUNCTION_18	FOR_1	IF_6	IF_9
0x4000a54	            0x7518	                           jne 0x4000a6e	      1107	linker.c	FUNCTION_18	FOR_1	IF_6	IF_9
0x4000a56	      0x498b6c2428	            mov rbp, qword [r12 + 0x28] 	      1108	linker.c	FUNCTION_18	FOR_1	IF_6	CALL_13
0x4000a5b	      0xbe00000000	                              mov esi, 0	      1108	linker.c	FUNCTION_18	FOR_1	IF_6	CALL_13
0x4000a60	          0x4c89ff	                            mov rdi, r15	      1108	linker.c	FUNCTION_18	FOR_1	IF_6	CALL_13
0x4000a63	      0xe800000000	                          call 0x4000a68	      1108	linker.c	FUNCTION_18	FOR_1	IF_6	CALL_13
0x4000a68	        0x48894508	                mov qword [rbp + 8], rax	      1108	linker.c	FUNCTION_18	FOR_1	IF_6	CALL_13
0x4000a6c	            0xeb14	                           jmp 0x4000a82	      1108	linker.c	FUNCTION_18	FOR_1	IF_6	CALL_13
0x4000a6e	      0x498b6c2428	            mov rbp, qword [r12 + 0x28] 	      1110	linker.c	FUNCTION_18	FOR_1	IF_6	ELSE_1	CALL_14
0x4000a73	          0x488b30	                    mov rsi, qword [rax]	      1110	linker.c	FUNCTION_18	FOR_1	IF_6	ELSE_1	CALL_14
0x4000a76	          0x4c89ff	                            mov rdi, r15	      1110	linker.c	FUNCTION_18	FOR_1	IF_6	ELSE_1	CALL_14
0x4000a79	      0xe800000000	                          call 0x4000a7e	      1110	linker.c	FUNCTION_18	FOR_1	IF_6	ELSE_1	CALL_14
0x4000a7e	        0x48894508	                mov qword [rbp + 8], rax	      1110	linker.c	FUNCTION_18	FOR_1	IF_6	ELSE_1	CALL_14
0x4000a82	      0x498b442428	            mov rax, qword [r12 + 0x28] 	      1112	linker.c	FUNCTION_18	FOR_1	IF_6
0x4000a87	        0x488b4008	                mov rax, qword [rax + 8]	      1112	linker.c	FUNCTION_18	FOR_1	IF_6
0x4000a8b	        0x83482001	                or dword [rax + 0x20], 1	      1112	linker.c	FUNCTION_18	FOR_1	IF_6
0x4000a8f	            0xeb14	                           jmp 0x4000aa5	      1112	linker.c	FUNCTION_18	FOR_1	IF_6
0x4000a91	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      1120	linker.c	FUNCTION_18	FOR_1	ELSE_2	IF_10	CALL_15
0x4000a95	        0x48034228	             add rax, qword [rdx + 0x28]	      1120	linker.c	FUNCTION_18	FOR_1	ELSE_2	IF_10	CALL_15
0x4000a99	      0x493b442430	            cmp rax, qword [r12 + 0x30] 	      1120	linker.c	FUNCTION_18	FOR_1	ELSE_2	IF_10	CALL_15
0x4000a9e	            0x7605	                           jbe 0x4000aa5	      1120	linker.c	FUNCTION_18	FOR_1	ELSE_2	IF_10	CALL_15
0x4000aa0	      0x4989442430	             mov qword [r12 + 0x30], rax	      1121	linker.c	FUNCTION_18	FOR_1	ELSE_2	CALL_16
0x4000aa5	        0x4883c308	                              add rbx, 8	      1034	linker.c	FUNCTION_18	FOR_1
0x4000aa9	          0x4939dd	                            cmp r13, rbx	      1034	linker.c	FUNCTION_18	FOR_1
0x4000aac	     0xf879dfeffff	                            ja 0x400094f	      1034	linker.c	FUNCTION_18	FOR_1
0x4000ab2	      0xb801000000	                              mov eax, 1	      1126	linker.c	FUNCTION_18
0x4000ab7	            0xeb0c	                           jmp 0x4000ac5	      1126	linker.c	FUNCTION_18
0x4000ab9	      0xb801000000	                              mov eax, 1	      1126	linker.c	FUNCTION_18
0x4000abe	            0xeb05	                           jmp 0x4000ac5	      1126	linker.c	FUNCTION_18
0x4000ac0	      0xb800000000	                              mov eax, 0	      1097	linker.c	FUNCTION_18	FOR_1	IF_6	IF_7
0x4000ac5	        0x4883c418	                           add rsp, 0x18	      1127	linker.c	FUNCTION_18
0x4000ac9	              0x5b	                                 pop rbx	      1127	linker.c	FUNCTION_18
0x4000aca	              0x5d	                                 pop rbp	      1127	linker.c	FUNCTION_18
0x4000acb	            0x415c	                                 pop r12	      1127	linker.c	FUNCTION_18
0x4000acd	            0x415d	                                 pop r13	      1127	linker.c	FUNCTION_18
0x4000acf	            0x415e	                                 pop r14	      1127	linker.c	FUNCTION_18
0x4000ad1	            0x415f	                                 pop r15	      1127	linker.c	FUNCTION_18
0x4000ad3	              0xc3	                                     ret	      1127	linker.c	FUNCTION_18
_bfd_nearby_section	IF,13:ELSE,6:SWITCH,0:functions,0:CALL,2:WHILE,0:FOR,2:DO,0	88
0x4002c6e	        0x4c8b4618	              mov r8, qword [rsi + 0x18]	      2959	linker.c	FUNCTION_42	FOR_1
0x4002c72	          0x4d85c0	                             test r8, r8	      2959	linker.c	FUNCTION_42	FOR_1
0x4002c75	     0xf84ff000000	                            je 0x4002d7a	      2959	linker.c	FUNCTION_42	FOR_1
0x4002c7b	          0x4c89c0	                             mov rax, r8	      2959	linker.c	FUNCTION_42	FOR_1
0x4002c7e	        0xf6402180	           test byte [rax + 0x21], 0x80 	      2960	linker.c	FUNCTION_42	FOR_1	IF_1
0x4002c82	            0x7524	                           jne 0x4002ca8	      2960	linker.c	FUNCTION_42	FOR_1	IF_1
0x4002c84	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      2961	linker.c	FUNCTION_42	FOR_1	IF_1	CALL_1
0x4002c88	          0x4885c9	                           test rcx, rcx	      2961	linker.c	FUNCTION_42	FOR_1	IF_1	CALL_1
0x4002c8b	            0x750c	                           jne 0x4002c99	      2961	linker.c	FUNCTION_42	FOR_1	IF_1	CALL_1
0x4002c8d	    0x483987980000	            cmp qword [rdi + 0x98], rax 	      2961	linker.c	FUNCTION_42	FOR_1	IF_1	CALL_1
0x4002c94	           0xf94c1	                                 sete cl	      2961	linker.c	FUNCTION_42	FOR_1	IF_1	CALL_1
0x4002c97	            0xeb07	                           jmp 0x4002ca0	      2961	linker.c	FUNCTION_42	FOR_1	IF_1	CALL_1
0x4002c99	        0x48394118	            cmp qword [rcx + 0x18], rax 	      2961	linker.c	FUNCTION_42	FOR_1	IF_1	CALL_1
0x4002c9d	           0xf94c1	                                 sete cl	      2961	linker.c	FUNCTION_42	FOR_1	IF_1	CALL_1
0x4002ca0	            0x84c9	                             test cl, cl	      2961	linker.c	FUNCTION_42	FOR_1	IF_1	CALL_1
0x4002ca2	     0xf85c9000000	                           jne 0x4002d71	      2961	linker.c	FUNCTION_42	FOR_1	IF_1	CALL_1
0x4002ca8	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2959	linker.c	FUNCTION_42	FOR_1
0x4002cac	          0x4885c0	                           test rax, rax	      2959	linker.c	FUNCTION_42	FOR_1
0x4002caf	            0x75cd	                           jne 0x4002c7e	      2959	linker.c	FUNCTION_42	FOR_1
0x4002cb1	      0xe9bb000000	                           jmp 0x4002d71	      2959	linker.c	FUNCTION_42	FOR_1
0x4002cb6	          0x4885c9	                           test rcx, rcx	      2970	linker.c	FUNCTION_42	FOR_2
0x4002cb9	     0xf84d1000000	                            je 0x4002d90	      2970	linker.c	FUNCTION_42	FOR_2
0x4002cbf	        0xf6412180	           test byte [rcx + 0x21], 0x80 	      2971	linker.c	FUNCTION_42	FOR_2	IF_3
0x4002cc3	            0x7523	                           jne 0x4002ce8	      2971	linker.c	FUNCTION_42	FOR_2	IF_3
0x4002cc5	        0x4c8b4110	              mov r8, qword [rcx + 0x10]	      2972	linker.c	FUNCTION_42	FOR_2	IF_3	CALL_2
0x4002cc9	          0x4d85c0	                             test r8, r8	      2972	linker.c	FUNCTION_42	FOR_2	IF_3	CALL_2
0x4002ccc	            0x750f	                           jne 0x4002cdd	      2972	linker.c	FUNCTION_42	FOR_2	IF_3	CALL_2
0x4002cce	    0x48398f980000	            cmp qword [rdi + 0x98], rcx 	      2972	linker.c	FUNCTION_42	FOR_2	IF_3	CALL_2
0x4002cd5	     0xf85b5000000	                           jne 0x4002d90	      2972	linker.c	FUNCTION_42	FOR_2	IF_3	CALL_2
0x4002cdb	            0xeb19	                           jmp 0x4002cf6	      2972	linker.c	FUNCTION_42	FOR_2	IF_3	CALL_2
0x4002cdd	        0x49394818	              cmp qword [r8 + 0x18], rcx	      2972	linker.c	FUNCTION_42	FOR_2	IF_3	CALL_2
0x4002ce1	            0x7413	                            je 0x4002cf6	      2972	linker.c	FUNCTION_42	FOR_2	IF_3	CALL_2
0x4002ce3	          0x4c89c1	                             mov rcx, r8	      2970	linker.c	FUNCTION_42	FOR_2
0x4002ce6	            0xebd7	                           jmp 0x4002cbf	      2970	linker.c	FUNCTION_42	FOR_2
0x4002ce8	        0x488b4910	            mov rcx, qword [rcx + 0x10] 	      2970	linker.c	FUNCTION_42	FOR_2
0x4002cec	          0x4885c9	                           test rcx, rcx	      2970	linker.c	FUNCTION_42	FOR_2
0x4002cef	            0x75ce	                           jne 0x4002cbf	      2970	linker.c	FUNCTION_42	FOR_2
0x4002cf1	      0xe99a000000	                           jmp 0x4002d90	      2970	linker.c	FUNCTION_42	FOR_2
0x4002cf6	          0x4885c0	                           test rax, rax	      2979	linker.c	FUNCTION_42	IF_4
0x4002cf9	            0x750d	                           jne 0x4002d08	      2979	linker.c	FUNCTION_42	IF_4
0x4002cfb	          0x4885c9	                           test rcx, rcx	      2982	linker.c	FUNCTION_42	IF_4	IF_5
0x4002cfe	      0xb800000000	                              mov eax, 0	      2982	linker.c	FUNCTION_42	IF_4	IF_5
0x4002d03	        0x480f45c1	                         cmovne rax, rcx	      2982	linker.c	FUNCTION_42	IF_4	IF_5
0x4002d07	              0xc3	                                     ret	      2982	linker.c	FUNCTION_42	IF_4	IF_5
0x4002d08	          0x4885c9	                           test rcx, rcx	      2984	linker.c	FUNCTION_42	ELSE_2	IF_6
0x4002d0b	     0xf848b000000	                            je 0x4002d9c	      2984	linker.c	FUNCTION_42	ELSE_2	IF_6
0x4002d11	        0x448b4820	            mov r9d, dword [rax + 0x20] 	      2986	linker.c	FUNCTION_42	ELSE_3	IF_7
0x4002d15	          0x8b7920	            mov edi, dword [rcx + 0x20] 	      2986	linker.c	FUNCTION_42	ELSE_3	IF_7
0x4002d18	          0x4589c8	                            mov r8d, r9d	      2986	linker.c	FUNCTION_42	ELSE_3	IF_7
0x4002d1b	          0x4131f8	                            xor r8d, edi	      2986	linker.c	FUNCTION_42	ELSE_3	IF_7
0x4002d1e	    0x41f7c0030400	                         test r8d, 0x403	      2986	linker.c	FUNCTION_42	ELSE_3	IF_7
0x4002d25	            0x741b	                            je 0x4002d42	      2986	linker.c	FUNCTION_42	ELSE_3	IF_7
0x4002d27	            0x89fa	                            mov edx, edi	      2989	linker.c	FUNCTION_42	ELSE_3	IF_7	IF_8
0x4002d29	          0x335620	             xor edx, dword [rsi + 0x20]	      2989	linker.c	FUNCTION_42	ELSE_3	IF_7	IF_8
0x4002d2c	    0xf7c201040000	                         test edx, 0x401	      2989	linker.c	FUNCTION_42	ELSE_3	IF_7	IF_8
0x4002d32	            0x7568	                           jne 0x4002d9c	      2989	linker.c	FUNCTION_42	ELSE_3	IF_7	IF_8
0x4002d34	        0x41f6c102	                             test r9b, 2	      2995	linker.c	FUNCTION_42	ELSE_3	IF_7	IF_8
0x4002d38	            0x7433	                            je 0x4002d6d	      2995	linker.c	FUNCTION_42	ELSE_3	IF_7	IF_8
0x4002d3a	          0x83e702	                              and edi, 2	      2996	linker.c	FUNCTION_42	ELSE_3	IF_7	IF_8
0x4002d3d	        0x480f45c1	                         cmovne rax, rcx	      2996	linker.c	FUNCTION_42	ELSE_3	IF_7	IF_8
0x4002d41	              0xc3	                                     ret	      2996	linker.c	FUNCTION_42	ELSE_3	IF_7	IF_8
0x4002d42	        0x41f6c008	                             test r8b, 8	      2999	linker.c	FUNCTION_42	ELSE_4	IF_9
0x4002d46	            0x740b	                            je 0x4002d53	      2999	linker.c	FUNCTION_42	ELSE_4	IF_9
0x4002d48	          0x337e20	             xor edi, dword [rsi + 0x20]	      3001	linker.c	FUNCTION_42	ELSE_4	IF_9	IF_10
0x4002d4b	          0x83e708	                              and edi, 8	      3001	linker.c	FUNCTION_42	ELSE_4	IF_9	IF_10
0x4002d4e	        0x480f44c1	                          cmove rax, rcx	      3001	linker.c	FUNCTION_42	ELSE_4	IF_9	IF_10
0x4002d52	              0xc3	                                     ret	      3001	linker.c	FUNCTION_42	ELSE_4	IF_9	IF_10
0x4002d53	        0x41f6c010	                          test r8b, 0x10	      3004	linker.c	FUNCTION_42	ELSE_5	IF_11
0x4002d57	            0x740b	                            je 0x4002d64	      3004	linker.c	FUNCTION_42	ELSE_5	IF_11
0x4002d59	          0x337e20	             xor edi, dword [rsi + 0x20]	      3006	linker.c	FUNCTION_42	ELSE_5	IF_11	IF_12
0x4002d5c	          0x83e710	                           and edi, 0x10	      3006	linker.c	FUNCTION_42	ELSE_5	IF_11	IF_12
0x4002d5f	        0x480f44c1	                          cmove rax, rcx	      3006	linker.c	FUNCTION_42	ELSE_5	IF_11	IF_12
0x4002d63	              0xc3	                                     ret	      3006	linker.c	FUNCTION_42	ELSE_5	IF_11	IF_12
0x4002d64	        0x48395128	            cmp qword [rcx + 0x28], rdx 	      3006	linker.c	FUNCTION_42	ELSE_5	IF_11	IF_12
0x4002d68	        0x480f46c1	                         cmovbe rax, rcx	      3006	linker.c	FUNCTION_42	ELSE_5	IF_11	IF_12
0x4002d6c	              0xc3	                                     ret	      3006	linker.c	FUNCTION_42	ELSE_5	IF_11	IF_12
0x4002d6d	          0x4889c8	                            mov rax, rcx	      3006	linker.c	FUNCTION_42	ELSE_5	IF_11	IF_12
0x4002d70	              0xc3	                                     ret	      3006	linker.c	FUNCTION_42	ELSE_5	IF_11	IF_12
0x4002d71	        0x498b4810	              mov rcx, qword [r8 + 0x10]	      2967	linker.c	FUNCTION_42	IF_2
0x4002d75	      0xe93cffffff	                           jmp 0x4002cb6	      2967	linker.c	FUNCTION_42	IF_2
0x4002d7a	    0x488b86f00000	            mov rax, qword [rsi + 0xf0] 	      2969	linker.c	FUNCTION_42	ELSE_1
0x4002d81	    0x488b88900000	            mov rcx, qword [rax + 0x90] 	      2969	linker.c	FUNCTION_42	ELSE_1
0x4002d88	          0x4c89c0	                             mov rax, r8	      2959	linker.c	FUNCTION_42	FOR_1
0x4002d8b	      0xe926ffffff	                           jmp 0x4002cb6	      2959	linker.c	FUNCTION_42	FOR_1
0x4002d90	          0x4885c0	                           test rax, rax	      2982	linker.c	FUNCTION_42	IF_4	IF_5
0x4002d93	      0xba00000000	                              mov edx, 0	      2982	linker.c	FUNCTION_42	IF_4	IF_5
0x4002d98	        0x480f44c2	                          cmove rax, rdx	      2982	linker.c	FUNCTION_42	IF_4	IF_5
0x4002d9c	            0xf3c3	                                     ret	      3018	linker.c	FUNCTION_42
_bfd_link_hash_table_init	IF,1:ELSE,0:SWITCH,0:functions,0:CALL,2:WHILE,0:FOR,0:DO,0	34
0x40003e5	            0x4155	                                push r13	       466	linker.c	FUNCTION_2
0x40003e7	            0x4154	                                push r12	       466	linker.c	FUNCTION_2
0x40003e9	              0x55	                                push rbp	       466	linker.c	FUNCTION_2
0x40003ea	              0x53	                                push rbx	       466	linker.c	FUNCTION_2
0x40003eb	        0x4883ec08	                              sub rsp, 8	       466	linker.c	FUNCTION_2
0x40003ef	          0x4889fb	                            mov rbx, rdi	       466	linker.c	FUNCTION_2
0x40003f2	          0x4889f5	                            mov rbp, rsi	       466	linker.c	FUNCTION_2
0x40003f5	          0x4989d4	                            mov r12, rdx	       466	linker.c	FUNCTION_2
0x40003f8	          0x4189cd	                           mov r13d, ecx	       466	linker.c	FUNCTION_2
0x40003fb	        0xf6464804	               test byte [rsi + 0x48], 4	       469	linker.c	FUNCTION_2	CALL_1
0x40003ff	            0x750a	                           jne 0x400040b	       469	linker.c	FUNCTION_2	CALL_1
0x4000401	    0x4883bef00000	               cmp qword [rsi + 0xf0], 0	       469	linker.c	FUNCTION_2	CALL_1
0x4000409	            0x740f	                            je 0x400041a	       469	linker.c	FUNCTION_2	CALL_1
0x400040b	      0xbed5010000	                          mov esi, 0x1d5	       469	linker.c	FUNCTION_2	CALL_1
0x4000410	      0xbf00000000	                              mov edi, 0	       469	linker.c	FUNCTION_2	CALL_1
0x4000415	      0xe800000000	                          call 0x400041a	       469	linker.c	FUNCTION_2	CALL_1
0x400041a	    0x48c743280000	               mov qword [rbx + 0x28], 0	       470	linker.c	FUNCTION_2
0x4000422	    0x48c743300000	               mov qword [rbx + 0x30], 0	       471	linker.c	FUNCTION_2
0x400042a	    0xc74340000000	               mov dword [rbx + 0x40], 0	       472	linker.c	FUNCTION_2
0x4000431	          0x4489ea	                           mov edx, r13d	       474	linker.c	FUNCTION_2	CALL_2
0x4000434	          0x4c89e6	                            mov rsi, r12	       474	linker.c	FUNCTION_2	CALL_2
0x4000437	          0x4889df	                            mov rdi, rbx	       474	linker.c	FUNCTION_2	CALL_2
0x400043a	      0xe800000000	                          call 0x400043f	       474	linker.c	FUNCTION_2	CALL_2
0x400043f	            0x85c0	                           test eax, eax	       475	linker.c	FUNCTION_2	IF_1
0x4000441	            0x7413	                            je 0x4000456	       475	linker.c	FUNCTION_2	IF_1
0x4000443	    0x48c743380000	               mov qword [rbx + 0x38], 0	       478	linker.c	FUNCTION_2	IF_1
0x400044b	    0x48899df00000	            mov qword [rbp + 0xf0], rbx 	       479	linker.c	FUNCTION_2	IF_1
0x4000452	        0x804d4804	                 or byte [rbp + 0x48], 4	       480	linker.c	FUNCTION_2	IF_1
0x4000456	        0x4883c408	                              add rsp, 8	       483	linker.c	FUNCTION_2
0x400045a	              0x5b	                                 pop rbx	       483	linker.c	FUNCTION_2
0x400045b	              0x5d	                                 pop rbp	       483	linker.c	FUNCTION_2
0x400045c	            0x415c	                                 pop r12	       483	linker.c	FUNCTION_2
0x400045e	            0x415d	                                 pop r13	       483	linker.c	FUNCTION_2
0x4000460	              0xc3	                                     ret	       483	linker.c	FUNCTION_2
_bfd_generic_link_write_global_symbol	IF,5:ELSE,1:SWITCH,0:functions,0:CALL,5:WHILE,0:FOR,0:DO,0	65
0x4000241	            0x4155	                                push r13	      2266	linker.c	FUNCTION_26
0x4000243	            0x4154	                                push r12	      2266	linker.c	FUNCTION_26
0x4000245	              0x55	                                push rbp	      2266	linker.c	FUNCTION_26
0x4000246	              0x53	                                push rbx	      2266	linker.c	FUNCTION_26
0x4000247	        0x4883ec08	                              sub rsp, 8	      2266	linker.c	FUNCTION_26
0x400024b	        0x448b6738	           mov r12d, dword [rdi + 0x38] 	      2271	linker.c	FUNCTION_26	IF_1
0x400024f	          0x4585e4	                         test r12d, r12d	      2271	linker.c	FUNCTION_26	IF_1
0x4000252	     0xf85a4000000	                           jne 0x40002fc	      2271	linker.c	FUNCTION_26	IF_1
0x4000258	    0xc74738010000	               mov dword [rdi + 0x38], 1	      2274	linker.c	FUNCTION_26
0x400025f	          0x488b16	                    mov rdx, qword [rsi]	      2276	linker.c	FUNCTION_26	IF_2
0x4000262	         0xfb64201	               movzx eax, byte [rdx + 1]	      2276	linker.c	FUNCTION_26	IF_2
0x4000266	          0x83e060	                           and eax, 0x60	      2276	linker.c	FUNCTION_26	IF_2
0x4000269	            0x3c60	                            cmp al, 0x60	      2276	linker.c	FUNCTION_26	IF_2
0x400026b	     0xf8493000000	                            je 0x4000304	      2276	linker.c	FUNCTION_26	IF_2
0x4000271	          0x4989f5	                            mov r13, rsi	      2276	linker.c	FUNCTION_26	IF_2
0x4000274	          0x4889fd	                            mov rbp, rdi	      2276	linker.c	FUNCTION_26	IF_2
0x4000277	            0x3c40	                            cmp al, 0x40	      2277	linker.c	FUNCTION_26	IF_2
0x4000279	            0x751c	                           jne 0x4000297	      2277	linker.c	FUNCTION_26	IF_2
0x400027b	        0x488b7708	                mov rsi, qword [rdi + 8]	      2278	linker.c	FUNCTION_26	IF_2	CALL_1
0x400027f	        0x488b7a30	            mov rdi, qword [rdx + 0x30] 	      2278	linker.c	FUNCTION_26	IF_2	CALL_1
0x4000283	      0xb900000000	                              mov ecx, 0	      2278	linker.c	FUNCTION_26	IF_2	CALL_1
0x4000288	      0xba00000000	                              mov edx, 0	      2278	linker.c	FUNCTION_26	IF_2	CALL_1
0x400028d	      0xe800000000	                          call 0x4000292	      2278	linker.c	FUNCTION_26	IF_2	CALL_1
0x4000292	          0x4885c0	                           test rax, rax	      2278	linker.c	FUNCTION_26	IF_2	CALL_1
0x4000295	            0x7475	                            je 0x400030c	      2278	linker.c	FUNCTION_26	IF_2	CALL_1
0x4000297	        0x488b5d40	            mov rbx, qword [rbp + 0x40] 	      2282	linker.c	FUNCTION_26	IF_3
0x400029b	          0x4885db	                           test rbx, rbx	      2282	linker.c	FUNCTION_26	IF_3
0x400029e	            0x7525	                           jne 0x40002c5	      2282	linker.c	FUNCTION_26	IF_3
0x40002a0	        0x498b7d08	                mov rdi, qword [r13 + 8]	      2286	linker.c	FUNCTION_26	ELSE_1	CALL_2
0x40002a4	        0x488b4708	                mov rax, qword [rdi + 8]	      2286	linker.c	FUNCTION_26	ELSE_1	CALL_2
0x40002a8	    0xff9000020000	                call qword [rax + 0x200]	      2286	linker.c	FUNCTION_26	ELSE_1	CALL_2
0x40002ae	          0x4889c3	                            mov rbx, rax	      2286	linker.c	FUNCTION_26	ELSE_1	CALL_2
0x40002b1	          0x4885c0	                           test rax, rax	      2287	linker.c	FUNCTION_26	ELSE_1	IF_4
0x40002b4	            0x7464	                            je 0x400031a	      2287	linker.c	FUNCTION_26	ELSE_1	IF_4
0x40002b6	        0x488b4508	                mov rax, qword [rbp + 8]	      2289	linker.c	FUNCTION_26	ELSE_1
0x40002ba	        0x48894308	                mov qword [rbx + 8], rax	      2289	linker.c	FUNCTION_26	ELSE_1
0x40002be	    0xc74318000000	               mov dword [rbx + 0x18], 0	      2290	linker.c	FUNCTION_26	ELSE_1
0x40002c5	          0x4889ee	                            mov rsi, rbp	      2293	linker.c	FUNCTION_26	CALL_3
0x40002c8	          0x4889df	                            mov rdi, rbx	      2293	linker.c	FUNCTION_26	CALL_3
0x40002cb	      0xe8e8fdffff	           call sym.set_symbol_from_hash	      2293	linker.c	FUNCTION_26	CALL_3
0x40002d0	        0x834b1802	                or dword [rbx + 0x18], 2	      2295	linker.c	FUNCTION_26
0x40002d4	        0x498b7510	            mov rsi, qword [r13 + 0x10] 	      2297	linker.c	FUNCTION_26	IF_5	CALL_4
0x40002d8	        0x498b7d08	                mov rdi, qword [r13 + 8]	      2297	linker.c	FUNCTION_26	IF_5	CALL_4
0x40002dc	          0x4889da	                            mov rdx, rbx	      2297	linker.c	FUNCTION_26	IF_5	CALL_4
0x40002df	      0xe8d9feffff	      call sym.generic_add_output_symbol	      2297	linker.c	FUNCTION_26	IF_5	CALL_4
0x40002e4	            0x85c0	                           test eax, eax	      2297	linker.c	FUNCTION_26	IF_5	CALL_4
0x40002e6	            0x752c	                           jne 0x4000314	      2297	linker.c	FUNCTION_26	IF_5	CALL_4
0x40002e8	      0xba00000000	                              mov edx, 0	      2301	linker.c	FUNCTION_26	IF_5	CALL_5
0x40002ed	      0xbefd080000	                          mov esi, 0x8fd	      2301	linker.c	FUNCTION_26	IF_5	CALL_5
0x40002f2	      0xbf00000000	                              mov edi, 0	      2301	linker.c	FUNCTION_26	IF_5	CALL_5
0x40002f7	      0xe800000000	                          call 0x40002fc	      2301	linker.c	FUNCTION_26	IF_5	CALL_5
0x40002fc	    0x41bc01000000	                             mov r12d, 1	      2272	linker.c	FUNCTION_26	IF_1
0x4000302	            0xeb16	                           jmp 0x400031a	      2272	linker.c	FUNCTION_26	IF_1
0x4000304	    0x41bc01000000	                             mov r12d, 1	      2280	linker.c	FUNCTION_26	IF_2
0x400030a	            0xeb0e	                           jmp 0x400031a	      2280	linker.c	FUNCTION_26	IF_2
0x400030c	    0x41bc01000000	                             mov r12d, 1	      2280	linker.c	FUNCTION_26	IF_2
0x4000312	            0xeb06	                           jmp 0x400031a	      2280	linker.c	FUNCTION_26	IF_2
0x4000314	    0x41bc01000000	                             mov r12d, 1	      2304	linker.c	FUNCTION_26
0x400031a	          0x4489e0	                           mov eax, r12d	      2305	linker.c	FUNCTION_26
0x400031d	        0x4883c408	                              add rsp, 8	      2305	linker.c	FUNCTION_26
0x4000321	              0x5b	                                 pop rbx	      2305	linker.c	FUNCTION_26
0x4000322	              0x5d	                                 pop rbp	      2305	linker.c	FUNCTION_26
0x4000323	            0x415c	                                 pop r12	      2305	linker.c	FUNCTION_26
0x4000325	            0x415d	                                 pop r13	      2305	linker.c	FUNCTION_26
0x4000327	              0xc3	                                     ret	      2305	linker.c	FUNCTION_26
generic_add_output_symbol	IF,4:ELSE,1:SWITCH,0:functions,0:CALL,7:WHILE,0:FOR,0:DO,0	37
0x40001bd	              0x55	                                push rbp	      1933	linker.c	FUNCTION_23
0x40001be	              0x53	                                push rbx	      1933	linker.c	FUNCTION_23
0x40001bf	        0x4883ec08	                              sub rsp, 8	      1933	linker.c	FUNCTION_23
0x40001c3	          0x4889fb	                            mov rbx, rdi	      1933	linker.c	FUNCTION_23
0x40001c6	          0x4889d5	                            mov rbp, rdx	      1933	linker.c	FUNCTION_23
0x40001c9	          0x488b06	                    mov rax, qword [rsi]	      1934	linker.c	FUNCTION_23	IF_1	CALL_1
0x40001cc	    0x8b97b8000000	            mov edx, dword [rdi + 0xb8] 	      1934	linker.c	FUNCTION_23	IF_1	CALL_1
0x40001d2	          0x4839c2	                            cmp rdx, rax	      1934	linker.c	FUNCTION_23	IF_1	CALL_1
0x40001d5	            0x7233	                            jb 0x400020a	      1934	linker.c	FUNCTION_23	IF_1	CALL_1
0x40001d7	          0x4885c0	                           test rax, rax	      1939	linker.c	FUNCTION_23	IF_1	IF_2
0x40001da	            0x7509	                           jne 0x40001e5	      1939	linker.c	FUNCTION_23	IF_1	IF_2
0x40001dc	    0x48c7067c0000	                   mov qword [rsi], 0x7c	      1940	linker.c	FUNCTION_23	IF_1	IF_2
0x40001e3	            0xeb06	                           jmp 0x40001eb	      1940	linker.c	FUNCTION_23	IF_1	IF_2
0x40001e5	          0x4801c0	                            add rax, rax	      1942	linker.c	FUNCTION_23	IF_1	ELSE_1
0x40001e8	          0x488906	                    mov qword [rsi], rax	      1942	linker.c	FUNCTION_23	IF_1	ELSE_1
0x40001eb	          0x488b36	                    mov rsi, qword [rsi]	      1943	linker.c	FUNCTION_23	IF_1
0x40001ee	        0x48c1e603	                              shl rsi, 3	      1945	linker.c	FUNCTION_23	IF_1	CALL_3
0x40001f2	    0x488bbbb00000	            mov rdi, qword [rbx + 0xb0] 	      1945	linker.c	FUNCTION_23	IF_1	CALL_3
0x40001f9	      0xe800000000	                          call 0x40001fe	      1945	linker.c	FUNCTION_23	IF_1	CALL_3
0x40001fe	          0x4885c0	                           test rax, rax	      1946	linker.c	FUNCTION_23	IF_1	IF_3
0x4000201	            0x742b	                            je 0x400022e	      1946	linker.c	FUNCTION_23	IF_1	IF_3
0x4000203	    0x488983b00000	             mov qword [rbx + 0xb0], rax	      1948	linker.c	FUNCTION_23	IF_1	CALL_4
0x400020a	    0x8b93b8000000	            mov edx, dword [rbx + 0xb8] 	      1951	linker.c	FUNCTION_23	CALL_6
0x4000210	    0x488b83b00000	            mov rax, qword [rbx + 0xb0] 	      1951	linker.c	FUNCTION_23	CALL_6
0x4000217	        0x48892cd0	            mov qword [rax + rdx*8], rbp	      1951	linker.c	FUNCTION_23	CALL_6
0x400021b	          0x4885ed	                           test rbp, rbp	      1952	linker.c	FUNCTION_23	IF_4
0x400021e	            0x7415	                            je 0x4000235	      1952	linker.c	FUNCTION_23	IF_4
0x4000220	    0x8383b8000000	               add dword [rbx + 0xb8], 1	      1953	linker.c	FUNCTION_23	CALL_7
0x4000227	      0xb801000000	                              mov eax, 1	      1955	linker.c	FUNCTION_23
0x400022c	            0xeb0c	                           jmp 0x400023a	      1955	linker.c	FUNCTION_23
0x400022e	      0xb800000000	                              mov eax, 0	      1947	linker.c	FUNCTION_23	IF_1	IF_3
0x4000233	            0xeb05	                           jmp 0x400023a	      1947	linker.c	FUNCTION_23	IF_1	IF_3
0x4000235	      0xb801000000	                              mov eax, 1	      1955	linker.c	FUNCTION_23
0x400023a	        0x4883c408	                              add rsp, 8	      1956	linker.c	FUNCTION_23
0x400023e	              0x5b	                                 pop rbx	      1956	linker.c	FUNCTION_23
0x400023f	              0x5d	                                 pop rbp	      1956	linker.c	FUNCTION_23
0x4000240	              0xc3	                                     ret	      1956	linker.c	FUNCTION_23
set_symbol_from_hash	IF,3:ELSE,2:SWITCH,1:functions,0:CALL,5:WHILE,0:FOR,0:DO,0	57
0x40000b8	              0x53	                                push rbx	      2204	linker.c	FUNCTION_25
0x40000b9	        0x807e1807	                cmp byte [rsi + 0x18], 7	      2205	linker.c	FUNCTION_25	SWITCH_1
0x40000bd	            0x770e	                            ja 0x40000cd	      2205	linker.c	FUNCTION_25	SWITCH_1
0x40000bf	          0x4889fb	                            mov rbx, rdi	      2205	linker.c	FUNCTION_25	SWITCH_1
0x40000c2	         0xfb64618	           movzx eax, byte [rsi + 0x18] 	      2205	linker.c	FUNCTION_25	SWITCH_1
0x40000c6	    0xff24c5000000	                       jmp qword [rax*8]	      2205	linker.c	FUNCTION_25	SWITCH_1
0x40000cd	      0xba00000000	                              mov edx, 0	      2208	linker.c	FUNCTION_25	SWITCH_1	CALL_1
0x40000d2	      0xbea0080000	                          mov esi, 0x8a0	      2208	linker.c	FUNCTION_25	SWITCH_1	CALL_1
0x40000d7	      0xbf00000000	                              mov edi, 0	      2208	linker.c	FUNCTION_25	SWITCH_1	CALL_1
0x40000dc	      0xe800000000	                          call 0x40000e1	      2208	linker.c	FUNCTION_25	SWITCH_1	CALL_1
0x40000e1	      0x48837f2000	               cmp qword [rdi + 0x20], 0	      2213	linker.c	FUNCTION_25	SWITCH_1	IF_1
0x40000e6	            0x741e	                            je 0x4000106	      2213	linker.c	FUNCTION_25	SWITCH_1	IF_1
0x40000e8	        0xf6471908	               test byte [rdi + 0x19], 8	      2215	linker.c	FUNCTION_25	SWITCH_1	IF_1	CALL_2
0x40000ec	     0xf85c9000000	                           jne 0x40001bb	      2215	linker.c	FUNCTION_25	SWITCH_1	IF_1	CALL_2
0x40000f2	      0xbea7080000	                          mov esi, 0x8a7	      2215	linker.c	FUNCTION_25	SWITCH_1	IF_1	CALL_2
0x40000f7	      0xbf00000000	                              mov edi, 0	      2215	linker.c	FUNCTION_25	SWITCH_1	IF_1	CALL_2
0x40000fc	      0xe800000000	                          call 0x4000101	      2215	linker.c	FUNCTION_25	SWITCH_1	IF_1	CALL_2
0x4000101	      0xe9b5000000	                           jmp 0x40001bb	      2215	linker.c	FUNCTION_25	SWITCH_1	IF_1	CALL_2
0x4000106	    0x814f18000800	            or dword [rdi + 0x18], 0x800	      2219	linker.c	FUNCTION_25	SWITCH_1	ELSE_1
0x400010d	    0x48c747200000	               mov qword [rdi + 0x20], 0	      2220	linker.c	FUNCTION_25	SWITCH_1	ELSE_1
0x4000115	    0x48c747100000	               mov qword [rdi + 0x10], 0	      2221	linker.c	FUNCTION_25	SWITCH_1	ELSE_1
0x400011d	      0xe999000000	                           jmp 0x40001bb	      2221	linker.c	FUNCTION_25	SWITCH_1	ELSE_1
0x4000122	    0x48c747200000	               mov qword [rdi + 0x20], 0	      2225	linker.c	FUNCTION_25	SWITCH_1
0x400012a	    0x48c747100000	               mov qword [rdi + 0x10], 0	      2226	linker.c	FUNCTION_25	SWITCH_1
0x4000132	      0xe984000000	                           jmp 0x40001bb	      2227	linker.c	FUNCTION_25	SWITCH_1
0x4000137	    0x48c747200000	               mov qword [rdi + 0x20], 0	      2229	linker.c	FUNCTION_25	SWITCH_1
0x400013f	    0x48c747100000	               mov qword [rdi + 0x10], 0	      2230	linker.c	FUNCTION_25	SWITCH_1
0x4000147	    0x814f18800000	             or dword [rdi + 0x18], 0x80	      2231	linker.c	FUNCTION_25	SWITCH_1
0x400014e	            0xeb6b	                           jmp 0x40001bb	      2232	linker.c	FUNCTION_25	SWITCH_1
0x4000150	        0x488b4628	            mov rax, qword [rsi + 0x28] 	      2234	linker.c	FUNCTION_25	SWITCH_1
0x4000154	        0x48894720	             mov qword [rdi + 0x20], rax	      2234	linker.c	FUNCTION_25	SWITCH_1
0x4000158	        0x488b4630	            mov rax, qword [rsi + 0x30] 	      2235	linker.c	FUNCTION_25	SWITCH_1
0x400015c	        0x48894710	             mov qword [rdi + 0x10], rax	      2235	linker.c	FUNCTION_25	SWITCH_1
0x4000160	            0xeb59	                           jmp 0x40001bb	      2236	linker.c	FUNCTION_25	SWITCH_1
0x4000162	    0x814f18800000	             or dword [rdi + 0x18], 0x80	      2238	linker.c	FUNCTION_25	SWITCH_1
0x4000169	        0x488b4628	            mov rax, qword [rsi + 0x28] 	      2239	linker.c	FUNCTION_25	SWITCH_1
0x400016d	        0x48894720	             mov qword [rdi + 0x20], rax	      2239	linker.c	FUNCTION_25	SWITCH_1
0x4000171	        0x488b4630	            mov rax, qword [rsi + 0x30] 	      2240	linker.c	FUNCTION_25	SWITCH_1
0x4000175	        0x48894710	             mov qword [rdi + 0x10], rax	      2240	linker.c	FUNCTION_25	SWITCH_1
0x4000179	            0xeb40	                           jmp 0x40001bb	      2241	linker.c	FUNCTION_25	SWITCH_1
0x400017b	        0x488b4630	            mov rax, qword [rsi + 0x30] 	      2243	linker.c	FUNCTION_25	SWITCH_1
0x400017f	        0x48894710	             mov qword [rdi + 0x10], rax	      2243	linker.c	FUNCTION_25	SWITCH_1
0x4000183	        0x488b4720	            mov rax, qword [rdi + 0x20] 	      2244	linker.c	FUNCTION_25	SWITCH_1	IF_2
0x4000187	          0x4885c0	                           test rax, rax	      2244	linker.c	FUNCTION_25	SWITCH_1	IF_2
0x400018a	            0x750a	                           jne 0x4000196	      2244	linker.c	FUNCTION_25	SWITCH_1	IF_2
0x400018c	    0x48c747200000	               mov qword [rdi + 0x20], 0	      2245	linker.c	FUNCTION_25	SWITCH_1	IF_2
0x4000194	            0xeb25	                           jmp 0x40001bb	      2245	linker.c	FUNCTION_25	SWITCH_1	IF_2
0x4000196	        0xf6402110	           test byte [rax + 0x21], 0x10 	      2246	linker.c	FUNCTION_25	SWITCH_1	ELSE_2	IF_3	CALL_3
0x400019a	            0x751f	                           jne 0x40001bb	      2246	linker.c	FUNCTION_25	SWITCH_1	ELSE_2	IF_3	CALL_3
0x400019c	    0x483d00000000	                              cmp rax, 0	      2248	linker.c	FUNCTION_25	SWITCH_1	ELSE_2	IF_3	CALL_5
0x40001a2	            0x740f	                            je 0x40001b3	      2248	linker.c	FUNCTION_25	SWITCH_1	ELSE_2	IF_3	CALL_5
0x40001a4	      0xbec8080000	                          mov esi, 0x8c8	      2248	linker.c	FUNCTION_25	SWITCH_1	ELSE_2	IF_3	CALL_5
0x40001a9	      0xbf00000000	                              mov edi, 0	      2248	linker.c	FUNCTION_25	SWITCH_1	ELSE_2	IF_3	CALL_5
0x40001ae	      0xe800000000	                          call 0x40001b3	      2248	linker.c	FUNCTION_25	SWITCH_1	ELSE_2	IF_3	CALL_5
0x40001b3	    0x48c743200000	               mov qword [rbx + 0x20], 0	      2249	linker.c	FUNCTION_25	SWITCH_1	ELSE_2	IF_3
0x40001bb	              0x5b	                                 pop rbx	      2258	linker.c	FUNCTION_25
0x40001bc	              0xc3	                                     ret	      2258	linker.c	FUNCTION_25
_bfd_generic_link_add_symbols	IF,0:ELSE,0:SWITCH,1:functions,0:CALL,4:WHILE,0:FOR,0:DO,0	134
0x4001ada	            0x4156	                                push r14	       841	linker.c	FUNCTION_15
0x4001adc	            0x4155	                                push r13	       841	linker.c	FUNCTION_15
0x4001ade	            0x4154	                                push r12	       841	linker.c	FUNCTION_15
0x4001ae0	              0x55	                                push rbp	       841	linker.c	FUNCTION_15
0x4001ae1	              0x53	                                push rbx	       841	linker.c	FUNCTION_15
0x4001ae2	        0x4883ec10	                           sub rsp, 0x10	       841	linker.c	FUNCTION_15
0x4001ae6	          0x4989fc	                            mov r12, rdi	       841	linker.c	FUNCTION_15
0x4001ae9	          0x4989f5	                            mov r13, rsi	       841	linker.c	FUNCTION_15
0x4001aec	    0x64488b042528	                mov rax, qword fs:[0x28]	       841	linker.c	FUNCTION_15
0x4001af5	      0x4889442408	                mov qword [rsp + 8], rax	       841	linker.c	FUNCTION_15
0x4001afa	            0x31c0	                            xor eax, eax	       841	linker.c	FUNCTION_15
0x4001afc	         0xfb64744	           movzx eax, byte [rdi + 0x44] 	       844	linker.c	FUNCTION_15	SWITCH_1	CALL_1
0x4001b00	          0x83e007	                              and eax, 7	       844	linker.c	FUNCTION_15	SWITCH_1	CALL_1
0x4001b03	            0x3c01	                               cmp al, 1	       844	linker.c	FUNCTION_15	SWITCH_1	CALL_1
0x4001b05	            0x740d	                            je 0x4001b14	       844	linker.c	FUNCTION_15	SWITCH_1	CALL_1
0x4001b07	            0x3c02	                               cmp al, 2	       844	linker.c	FUNCTION_15	SWITCH_1	CALL_1
0x4001b09	     0xf8463010000	                            je 0x4001c72	       844	linker.c	FUNCTION_15	SWITCH_1	CALL_1
0x4001b0f	      0xe96a010000	                           jmp 0x4001c7e	       844	linker.c	FUNCTION_15	SWITCH_1	CALL_1
0x4001b14	      0xe800000000	                          call 0x4001b19	       870	linker.c	FUNCTION_16	IF_1	CALL_1
0x4001b19	            0x89c2	                            mov edx, eax	       870	linker.c	FUNCTION_16	IF_1	CALL_1
0x4001b1b	      0xb800000000	                              mov eax, 0	       871	linker.c	FUNCTION_16	IF_1
0x4001b20	            0x85d2	                           test edx, edx	       870	linker.c	FUNCTION_16	IF_1	CALL_1
0x4001b22	     0xf846c010000	                            je 0x4001c94	       870	linker.c	FUNCTION_16	IF_1	CALL_1
0x4001b28	    0x498bac24b000	            mov rbp, qword [r12 + 0xb0] 	       873	linker.c	FUNCTION_16	CALL_3
0x4001b30	    0x418b8424b800	            mov eax, dword [r12 + 0xb8] 	      1142	linker.c	FUNCTION_19
0x4001b38	      0x4c8d74c500	                  lea r14, [rbp + rax*8]	      1142	linker.c	FUNCTION_19
0x4001b3d	          0x4c39f5	                            cmp rbp, r14	      1143	linker.c	FUNCTION_19	FOR_1
0x4001b40	     0xf8349010000	                           jae 0x4001c8f	      1143	linker.c	FUNCTION_19	FOR_1
0x4001b46	        0x488b5d00	                    mov rbx, qword [rbp]	      1147	linker.c	FUNCTION_19	FOR_1
0x4001b4a	          0x8b4b18	            mov ecx, dword [rbx + 0x18] 	      1149	linker.c	FUNCTION_19	FOR_1	IF_1
0x4001b4d	    0xf7c182380000	                        test ecx, 0x3882	      1149	linker.c	FUNCTION_19	FOR_1	IF_1
0x4001b53	            0x7522	                           jne 0x4001b77	      1149	linker.c	FUNCTION_19	FOR_1	IF_1
0x4001b55	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      1154	linker.c	FUNCTION_19	FOR_1	IF_1	CALL_2
0x4001b59	    0x483d00000000	                              cmp rax, 0	      1154	linker.c	FUNCTION_19	FOR_1	IF_1	CALL_2
0x4001b5f	     0xf8441010000	                            je 0x4001ca6	      1154	linker.c	FUNCTION_19	FOR_1	IF_1	CALL_2
0x4001b65	        0xf6402110	           test byte [rax + 0x21], 0x10 	      1156	linker.c	FUNCTION_19	FOR_1	IF_1	CALL_6
0x4001b69	            0x750c	                           jne 0x4001b77	      1156	linker.c	FUNCTION_19	FOR_1	IF_1	CALL_6
0x4001b6b	    0x483d00000000	                              cmp rax, 0	      1156	linker.c	FUNCTION_19	FOR_1	IF_1	CALL_6
0x4001b71	     0xf85e7000000	                           jne 0x4001c5e	      1156	linker.c	FUNCTION_19	FOR_1	IF_1	CALL_6
0x4001b77	        0x488b5308	                mov rdx, qword [rbx + 8]	      1163	linker.c	FUNCTION_19	FOR_1	IF_1	CALL_7
0x4001b7b	          0xf6c520	                           test ch, 0x20	      1164	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2
0x4001b7e	            0x750a	                           jne 0x4001b8a	      1164	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2
0x4001b80	    0x48817b200000	               cmp qword [rbx + 0x20], 0	      1165	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2	CALL_8
0x4001b88	            0x7519	                           jne 0x4001ba3	      1165	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2	CALL_8
0x4001b8a	        0x488d7508	                      lea rsi, [rbp + 8]	      1166	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2
0x4001b8e	          0x4889d0	                            mov rax, rdx	      1166	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2
0x4001b91	          0x4939f6	                            cmp r14, rsi	      1166	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2
0x4001b94	            0x762e	                           jbe 0x4001bc4	      1166	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2
0x4001b96	        0x488b4508	                mov rax, qword [rbp + 8]	      1169	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2	CALL_9
0x4001b9a	        0x488b4008	                mov rax, qword [rax + 8]	      1169	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2	CALL_9
0x4001b9e	          0x4889f5	                            mov rbp, rsi	      1168	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2
0x4001ba1	            0xeb21	                           jmp 0x4001bc4	      1168	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2
0x4001ba3	          0x4889d0	                            mov rax, rdx	      1171	linker.c	FUNCTION_19	FOR_1	IF_1	ELSE_1	IF_3
0x4001ba6	          0xf6c510	                           test ch, 0x10	      1171	linker.c	FUNCTION_19	FOR_1	IF_1	ELSE_1	IF_3
0x4001ba9	            0x7419	                            je 0x4001bc4	      1171	linker.c	FUNCTION_19	FOR_1	IF_1	ELSE_1	IF_3
0x4001bab	        0x488d7508	                      lea rsi, [rbp + 8]	      1172	linker.c	FUNCTION_19	FOR_1	IF_1	ELSE_1	IF_3
0x4001baf	          0x4939f6	                            cmp r14, rsi	      1172	linker.c	FUNCTION_19	FOR_1	IF_1	ELSE_1	IF_3
0x4001bb2	            0x760d	                           jbe 0x4001bc1	      1172	linker.c	FUNCTION_19	FOR_1	IF_1	ELSE_1	IF_3
0x4001bb4	        0x488b7d08	                mov rdi, qword [rbp + 8]	      1177	linker.c	FUNCTION_19	FOR_1	IF_1	ELSE_1	IF_3	CALL_10
0x4001bb8	        0x488b5708	                mov rdx, qword [rdi + 8]	      1177	linker.c	FUNCTION_19	FOR_1	IF_1	ELSE_1	IF_3	CALL_10
0x4001bbc	          0x4889f5	                            mov rbp, rsi	      1172	linker.c	FUNCTION_19	FOR_1	IF_1	ELSE_1	IF_3
0x4001bbf	            0xeb03	                           jmp 0x4001bc4	      1172	linker.c	FUNCTION_19	FOR_1	IF_1	ELSE_1	IF_3
0x4001bc1	          0x4889d0	                            mov rax, rdx	      1172	linker.c	FUNCTION_19	FOR_1	IF_1	ELSE_1	IF_3
0x4001bc4	    0x48c704240000	                      mov qword [rsp], 0	      1180	linker.c	FUNCTION_19	FOR_1	IF_1
0x4001bcc	              0x54	                                push rsp	      1181	linker.c	FUNCTION_19	FOR_1	IF_1	IF_4	CALL_11
0x4001bcd	            0x6a00	                                  push 0	      1181	linker.c	FUNCTION_19	FOR_1	IF_1	IF_4	CALL_11
0x4001bcf	            0x6a00	                                  push 0	      1181	linker.c	FUNCTION_19	FOR_1	IF_1	IF_4	CALL_11
0x4001bd1	              0x50	                                push rax	      1181	linker.c	FUNCTION_19	FOR_1	IF_1	IF_4	CALL_11
0x4001bd2	        0x4c8b4b10	              mov r9, qword [rbx + 0x10]	      1181	linker.c	FUNCTION_19	FOR_1	IF_1	IF_4	CALL_11
0x4001bd6	        0x4c8b4320	              mov r8, qword [rbx + 0x20]	      1181	linker.c	FUNCTION_19	FOR_1	IF_1	IF_4	CALL_11
0x4001bda	          0x4c89e6	                            mov rsi, r12	      1181	linker.c	FUNCTION_19	FOR_1	IF_1	IF_4	CALL_11
0x4001bdd	          0x4c89ef	                            mov rdi, r13	      1181	linker.c	FUNCTION_19	FOR_1	IF_1	IF_4	CALL_11
0x4001be0	      0xe800000000	                          call 0x4001be5	      1181	linker.c	FUNCTION_19	FOR_1	IF_1	IF_4	CALL_11
0x4001be5	        0x4883c420	                           add rsp, 0x20	      1181	linker.c	FUNCTION_19	FOR_1	IF_1	IF_4	CALL_11
0x4001be9	            0x85c0	                           test eax, eax	      1181	linker.c	FUNCTION_19	FOR_1	IF_1	IF_4	CALL_11
0x4001beb	     0xf84a3000000	                            je 0x4001c94	      1181	linker.c	FUNCTION_19	FOR_1	IF_1	IF_4	CALL_11
0x4001bf1	        0x488b0424	                    mov rax, qword [rsp]	      1185	linker.c	FUNCTION_19	FOR_1	IF_1
0x4001bf5	        0xf6431908	               test byte [rbx + 0x19], 8	      1191	linker.c	FUNCTION_19	FOR_1	IF_1	IF_5
0x4001bf9	            0x7415	                            je 0x4001c10	      1191	linker.c	FUNCTION_19	FOR_1	IF_1	IF_5
0x4001bfb	          0x4885c0	                           test rax, rax	      1192	linker.c	FUNCTION_19	FOR_1	IF_1	IF_5
0x4001bfe	            0x7406	                            je 0x4001c06	      1192	linker.c	FUNCTION_19	FOR_1	IF_1	IF_5
0x4001c00	        0x80781800	                cmp byte [rax + 0x18], 0	      1192	linker.c	FUNCTION_19	FOR_1	IF_1	IF_5
0x4001c04	            0x750a	                           jne 0x4001c10	      1192	linker.c	FUNCTION_19	FOR_1	IF_1	IF_5
0x4001c06	    0x48c743280000	               mov qword [rbx + 0x28], 0	      1194	linker.c	FUNCTION_19	FOR_1	IF_1	IF_5
0x4001c0e	            0xeb4e	                           jmp 0x4001c5e	      1194	linker.c	FUNCTION_19	FOR_1	IF_1	IF_5
0x4001c10	        0x498b5550	            mov rdx, qword [r13 + 0x50] 	      1206	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6
0x4001c14	      0x498b7c2408	                mov rdi, qword [r12 + 8]	      1206	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6
0x4001c19	        0x48397a08	                cmp qword [rdx + 8], rdi	      1206	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6
0x4001c1d	            0x753b	                           jne 0x4001c5a	      1206	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6
0x4001c1f	        0x488b4840	            mov rcx, qword [rax + 0x40] 	      1208	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7
0x4001c23	          0x4885c9	                           test rcx, rcx	      1208	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7
0x4001c26	            0x741d	                            je 0x4001c45	      1208	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7
0x4001c28	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	      1209	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7	CALL_14
0x4001c2c	    0x4881fa000000	                              cmp rdx, 0	      1209	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7	CALL_14
0x4001c33	            0x7425	                            je 0x4001c5a	      1209	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7	CALL_14
0x4001c35	        0xf6422110	           test byte [rdx + 0x21], 0x10 	      1210	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7	CALL_16
0x4001c39	            0x740a	                            je 0x4001c45	      1210	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7	CALL_16
0x4001c3b	    0x488179200000	               cmp qword [rcx + 0x20], 0	      1211	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7	CALL_18
0x4001c43	            0x7515	                           jne 0x4001c5a	      1211	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7	CALL_18
0x4001c45	        0x48895840	             mov qword [rax + 0x40], rbx	      1213	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7
0x4001c49	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	      1217	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7	IF_8	CALL_20
0x4001c4d	        0xf6422110	           test byte [rdx + 0x21], 0x10 	      1217	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7	IF_8	CALL_20
0x4001c51	            0x7407	                            je 0x4001c5a	      1217	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7	IF_8	CALL_20
0x4001c53	    0x814b18000200	            or dword [rbx + 0x18], 0x200	      1218	linker.c	FUNCTION_19	FOR_1	IF_1	IF_6	IF_7	IF_8
0x4001c5a	        0x48894328	             mov qword [rbx + 0x28], rax	      1227	linker.c	FUNCTION_19	FOR_1	IF_1
0x4001c5e	        0x4883c508	                              add rbp, 8	      1143	linker.c	FUNCTION_19	FOR_1
0x4001c62	          0x4939ee	                            cmp r14, rbp	      1143	linker.c	FUNCTION_19	FOR_1
0x4001c65	     0xf87dbfeffff	                            ja 0x4001b46	      1143	linker.c	FUNCTION_19	FOR_1
0x4001c6b	      0xb801000000	                              mov eax, 1	      1231	linker.c	FUNCTION_19
0x4001c70	            0xeb22	                           jmp 0x4001c94	      1231	linker.c	FUNCTION_19
0x4001c72	      0xba00000000	                              mov edx, 0	       850	linker.c	FUNCTION_15	SWITCH_1	CALL_3
0x4001c77	      0xe800000000	                          call 0x4001c7c	       850	linker.c	FUNCTION_15	SWITCH_1	CALL_3
0x4001c7c	            0xeb16	                           jmp 0x4001c94	       852	linker.c	FUNCTION_15	SWITCH_1
0x4001c7e	      0xbf03000000	                              mov edi, 3	       854	linker.c	FUNCTION_15	SWITCH_1	CALL_4
0x4001c83	      0xe800000000	                          call 0x4001c88	       854	linker.c	FUNCTION_15	SWITCH_1	CALL_4
0x4001c88	      0xb800000000	                              mov eax, 0	       855	linker.c	FUNCTION_15	SWITCH_1
0x4001c8d	            0xeb05	                           jmp 0x4001c94	       855	linker.c	FUNCTION_15	SWITCH_1
0x4001c8f	      0xb801000000	                              mov eax, 1	      1231	linker.c	FUNCTION_19
0x4001c94	      0x488b742408	                mov rsi, qword [rsp + 8]	       859	linker.c	FUNCTION_15
0x4001c99	    0x644833342528	                xor rsi, qword fs:[0x28]	       859	linker.c	FUNCTION_15
0x4001ca2	            0x7419	                            je 0x4001cbd	       859	linker.c	FUNCTION_15
0x4001ca4	            0xeb12	                           jmp 0x4001cb8	       859	linker.c	FUNCTION_15
0x4001ca6	        0x488b5308	                mov rdx, qword [rbx + 8]	      1163	linker.c	FUNCTION_19	FOR_1	IF_1	CALL_7
0x4001caa	          0xf6c520	                           test ch, 0x20	      1164	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2
0x4001cad	     0xf85d7feffff	                           jne 0x4001b8a	      1164	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2
0x4001cb3	      0xe9ebfeffff	                           jmp 0x4001ba3	      1164	linker.c	FUNCTION_19	FOR_1	IF_1	IF_2
0x4001cb8	      0xe800000000	                          call 0x4001cbd	       859	linker.c	FUNCTION_15
0x4001cbd	        0x4883c410	                           add rsp, 0x10	       859	linker.c	FUNCTION_15
0x4001cc1	              0x5b	                                 pop rbx	       859	linker.c	FUNCTION_15
0x4001cc2	              0x5d	                                 pop rbp	       859	linker.c	FUNCTION_15
0x4001cc3	            0x415c	                                 pop r12	       859	linker.c	FUNCTION_15
0x4001cc5	            0x415d	                                 pop r13	       859	linker.c	FUNCTION_15
0x4001cc7	            0x415e	                                 pop r14	       859	linker.c	FUNCTION_15
0x4001cc9	              0xc3	                                     ret	       859	linker.c	FUNCTION_15
_bfd_generic_link_hide_symbol	IF,0:ELSE,0:SWITCH,0:functions,0:CALL,0:WHILE,0:FOR,0:DO,0	1
0x4002ef5	            0xf3c3	                                     ret	      3136	linker.c	FUNCTION_46
_bfd_generic_link_just_syms	IF,0:ELSE,0:SWITCH,0:functions,0:CALL,0:WHILE,0:FOR,0:DO,0	8
0x4000e71	         0xfb74724	           movzx eax, word [rdi + 0x24] 	       821	linker.c	FUNCTION_13
0x4000e75	        0x66257ffc	                          and ax, 0xfc7f	       821	linker.c	FUNCTION_13
0x4000e79	          0x80cc02	                                or ah, 2	       821	linker.c	FUNCTION_13
0x4000e7c	        0x66894724	               mov word [rdi + 0x24], ax	       821	linker.c	FUNCTION_13
0x4000e80	    0x48c747680000	               mov qword [rdi + 0x68], 0	       822	linker.c	FUNCTION_13
0x4000e88	        0x488b4728	            mov rax, qword [rdi + 0x28] 	       823	linker.c	FUNCTION_13
0x4000e8c	        0x48894760	             mov qword [rdi + 0x60], rax	       823	linker.c	FUNCTION_13
0x4000e90	              0xc3	                                     ret	       823	linker.c	FUNCTION_13
_bfd_nolink_sizeof_headers	IF,0:ELSE,0:SWITCH,0:functions,0:CALL,0:WHILE,0:FOR,0:DO,0	2
0x40031c7	      0xb800000000	                              mov eax, 0	      3411	linker.c	FUNCTION_53
0x40031cc	              0xc3	                                     ret	      3411	linker.c	FUNCTION_53
bfd_section_already_linked_table_init	IF,0:ELSE,0:SWITCH,0:functions,0:CALL,1:WHILE,0:FOR,0:DO,0	8
0x40028c5	        0x4883ec08	                              sub rsp, 8	      2796	linker.c	FUNCTION_38
0x40028c9	      0xb92a000000	                           mov ecx, 0x2a	      2797	linker.c	FUNCTION_38	CALL_1
0x40028ce	      0xba20000000	                           mov edx, 0x20	      2797	linker.c	FUNCTION_38	CALL_1
0x40028d3	      0xbe00000000	                              mov esi, 0	      2797	linker.c	FUNCTION_38	CALL_1
0x40028d8	      0xbf00000000	                              mov edi, 0	      2797	linker.c	FUNCTION_38	CALL_1
0x40028dd	      0xe800000000	                          call 0x40028e2	      2797	linker.c	FUNCTION_38	CALL_1
0x40028e2	        0x4883c408	                              add rsp, 8	      2801	linker.c	FUNCTION_38
0x40028e6	              0xc3	                                     ret	      2801	linker.c	FUNCTION_38
_bfd_generic_copy_link_hash_symbol_type	IF,0:ELSE,0:SWITCH,0:functions,0:CALL,0:WHILE,0:FOR,0:DO,0	1
0x4000e91	            0xf3c3	                                     ret	       833	linker.c	FUNCTION_14
unwrap_hash_lookup	IF,5:ELSE,0:SWITCH,0:functions,0:CALL,4:WHILE,0:FOR,0:DO,0	62
0x4000669	            0x4155	                                push r13	       606	linker.c	FUNCTION_5
0x400066b	            0x4154	                                push r12	       606	linker.c	FUNCTION_5
0x400066d	              0x55	                                push rbp	       606	linker.c	FUNCTION_5
0x400066e	              0x53	                                push rbx	       606	linker.c	FUNCTION_5
0x400066f	        0x4883ec08	                              sub rsp, 8	       606	linker.c	FUNCTION_5
0x4000673	          0x4989fc	                            mov r12, rdi	       606	linker.c	FUNCTION_5
0x4000676	          0x4889d5	                            mov rbp, rdx	       606	linker.c	FUNCTION_5
0x4000679	        0x488b5a08	                mov rbx, qword [rdx + 8]	       607	linker.c	FUNCTION_5
0x400067d	           0xfb603	                   movzx eax, byte [rbx]	       609	linker.c	FUNCTION_5	IF_1	CALL_1
0x4000680	        0x488b5608	                mov rdx, qword [rsi + 8]	       609	linker.c	FUNCTION_5	IF_1	CALL_1
0x4000684	          0x3a421c	               cmp al, byte [rdx + 0x1c]	       609	linker.c	FUNCTION_5	IF_1	CALL_1
0x4000687	            0x7405	                            je 0x400068e	       609	linker.c	FUNCTION_5	IF_1	CALL_1
0x4000689	          0x3a4709	                  cmp al, byte [rdi + 9]	       610	linker.c	FUNCTION_5	IF_1
0x400068c	            0x7504	                           jne 0x4000692	       610	linker.c	FUNCTION_5	IF_1
0x400068e	        0x4883c301	                              add rbx, 1	       611	linker.c	FUNCTION_5	IF_1
0x4000692	      0xbf00000000	                              mov edi, 0	       613	linker.c	FUNCTION_5	IF_2	CALL_2
0x4000697	      0xb907000000	                              mov ecx, 7	       613	linker.c	FUNCTION_5	IF_2	CALL_2
0x400069c	          0x4889de	                            mov rsi, rbx	       613	linker.c	FUNCTION_5	IF_2	CALL_2
0x400069f	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       613	linker.c	FUNCTION_5	IF_2	CALL_2
0x40006a1	           0xf97c2	                                 seta dl	       613	linker.c	FUNCTION_5	IF_2	CALL_2
0x40006a4	           0xf92c0	                                 setb al	       613	linker.c	FUNCTION_5	IF_2	CALL_2
0x40006a7	            0x38c2	                              cmp dl, al	       613	linker.c	FUNCTION_5	IF_2	CALL_2
0x40006a9	     0xf8580000000	                           jne 0x400072f	       613	linker.c	FUNCTION_5	IF_2	CALL_2
0x40006af	        0x4c8d6b07	                      lea r13, [rbx + 7]	       615	linker.c	FUNCTION_5	IF_2
0x40006b3	      0x498b7c2440	            mov rdi, qword [r12 + 0x40] 	       617	linker.c	FUNCTION_5	IF_2	IF_3	CALL_3
0x40006b8	      0xb900000000	                              mov ecx, 0	       617	linker.c	FUNCTION_5	IF_2	IF_3	CALL_3
0x40006bd	      0xba00000000	                              mov edx, 0	       617	linker.c	FUNCTION_5	IF_2	IF_3	CALL_3
0x40006c2	          0x4c89ee	                            mov rsi, r13	       617	linker.c	FUNCTION_5	IF_2	IF_3	CALL_3
0x40006c5	      0xe800000000	                          call 0x40006ca	       617	linker.c	FUNCTION_5	IF_2	IF_3	CALL_3
0x40006ca	          0x4885c0	                           test rax, rax	       617	linker.c	FUNCTION_5	IF_2	IF_3	CALL_3
0x40006cd	            0x7460	                            je 0x400072f	       617	linker.c	FUNCTION_5	IF_2	IF_3	CALL_3
0x40006cf	        0x488b4508	                mov rax, qword [rbp + 8]	       620	linker.c	FUNCTION_5	IF_2	IF_3	IF_4
0x40006d3	          0x4839c3	                            cmp rbx, rax	       620	linker.c	FUNCTION_5	IF_2	IF_3	IF_4
0x40006d6	            0x7437	                            je 0x400070f	       620	linker.c	FUNCTION_5	IF_2	IF_3	IF_4
0x40006d8	      0x440fb66b06	              movzx r13d, byte [rbx + 6]	       623	linker.c	FUNCTION_5	IF_2	IF_3	IF_4
0x40006dd	           0xfb600	                   movzx eax, byte [rax]	       624	linker.c	FUNCTION_5	IF_2	IF_3	IF_4
0x40006e0	          0x884306	                  mov byte [rbx + 6], al	       624	linker.c	FUNCTION_5	IF_2	IF_3	IF_4
0x40006e3	        0x488d7306	                      lea rsi, [rbx + 6]	       622	linker.c	FUNCTION_5	IF_2	IF_3	IF_4
0x40006e7	      0x498b7c2428	            mov rdi, qword [r12 + 0x28] 	       626	linker.c	FUNCTION_5	IF_2	IF_3	CALL_4
0x40006ec	    0x41b800000000	                              mov r8d, 0	       626	linker.c	FUNCTION_5	IF_2	IF_3	CALL_4
0x40006f2	      0xb900000000	                              mov ecx, 0	       626	linker.c	FUNCTION_5	IF_2	IF_3	CALL_4
0x40006f7	      0xba00000000	                              mov edx, 0	       626	linker.c	FUNCTION_5	IF_2	IF_3	CALL_4
0x40006fc	      0xe800000000	                          call 0x4000701	       626	linker.c	FUNCTION_5	IF_2	IF_3	CALL_4
0x4000701	          0x4889c5	                            mov rbp, rax	       626	linker.c	FUNCTION_5	IF_2	IF_3	CALL_4
0x4000704	          0x4584ed	                         test r13b, r13b	       627	linker.c	FUNCTION_5	IF_2	IF_3	IF_5
0x4000707	            0x7426	                            je 0x400072f	       627	linker.c	FUNCTION_5	IF_2	IF_3	IF_5
0x4000709	        0x44886b06	                mov byte [rbx + 6], r13b	       628	linker.c	FUNCTION_5	IF_2	IF_3	IF_5
0x400070d	            0xeb20	                           jmp 0x400072f	       628	linker.c	FUNCTION_5	IF_2	IF_3	IF_5
0x400070f	      0x498b7c2428	            mov rdi, qword [r12 + 0x28] 	       626	linker.c	FUNCTION_5	IF_2	IF_3	CALL_4
0x4000714	    0x41b800000000	                              mov r8d, 0	       626	linker.c	FUNCTION_5	IF_2	IF_3	CALL_4
0x400071a	      0xb900000000	                              mov ecx, 0	       626	linker.c	FUNCTION_5	IF_2	IF_3	CALL_4
0x400071f	      0xba00000000	                              mov edx, 0	       626	linker.c	FUNCTION_5	IF_2	IF_3	CALL_4
0x4000724	          0x4c89ee	                            mov rsi, r13	       626	linker.c	FUNCTION_5	IF_2	IF_3	CALL_4
0x4000727	      0xe800000000	                          call 0x400072c	       626	linker.c	FUNCTION_5	IF_2	IF_3	CALL_4
0x400072c	          0x4889c5	                            mov rbp, rax	       626	linker.c	FUNCTION_5	IF_2	IF_3	CALL_4
0x400072f	          0x4889e8	                            mov rax, rbp	       632	linker.c	FUNCTION_5
0x4000732	        0x4883c408	                              add rsp, 8	       632	linker.c	FUNCTION_5
0x4000736	              0x5b	                                 pop rbx	       632	linker.c	FUNCTION_5
0x4000737	              0x5d	                                 pop rbp	       632	linker.c	FUNCTION_5
0x4000738	            0x415c	                                 pop r12	       632	linker.c	FUNCTION_5
0x400073a	            0x415d	                                 pop r13	       632	linker.c	FUNCTION_5
0x400073c	              0xc3	                                     ret	       632	linker.c	FUNCTION_5
_bfd_count_link_order_relocs	IF,1:ELSE,0:SWITCH,0:functions,0:CALL,0:WHILE,0:FOR,1:DO,0	13
0x400281e	          0x4885ff	                           test rdi, rdi	      2670	linker.c	FUNCTION_32	FOR_1
0x4002821	            0x741b	                            je 0x400283e	      2670	linker.c	FUNCTION_32	FOR_1
0x4002823	      0xb800000000	                              mov eax, 0	      2670	linker.c	FUNCTION_32	FOR_1
0x4002828	          0x8b4f08	                mov ecx, dword [rdi + 8]	      2672	linker.c	FUNCTION_32	FOR_1	IF_1
0x400282b	          0x8d51fd	                      lea edx, [rcx - 3]	      2672	linker.c	FUNCTION_32	FOR_1	IF_1
0x400282e	          0x83fa02	                              cmp edx, 2	      2674	linker.c	FUNCTION_32	FOR_1	IF_1
0x4002831	          0x83d000	                              adc eax, 0	      2674	linker.c	FUNCTION_32	FOR_1	IF_1
0x4002834	          0x488b3f	                    mov rdi, qword [rdi]	      2670	linker.c	FUNCTION_32	FOR_1
0x4002837	          0x4885ff	                           test rdi, rdi	      2670	linker.c	FUNCTION_32	FOR_1
0x400283a	            0x75ec	                           jne 0x4002828	      2670	linker.c	FUNCTION_32	FOR_1
0x400283c	            0xf3c3	                                     ret	      2670	linker.c	FUNCTION_32	FOR_1
0x400283e	      0xb800000000	                              mov eax, 0	      2669	linker.c	FUNCTION_32
0x4002843	              0xc3	                                     ret	      2678	linker.c	FUNCTION_32
_bfd_generic_link_output_symbols	IF,31:ELSE,16:SWITCH,2:functions,0:CALL,34:WHILE,0:FOR,2:DO,0	284
0x4001cca	            0x4157	                                push r15	      1965	linker.c	FUNCTION_24
0x4001ccc	            0x4156	                                push r14	      1965	linker.c	FUNCTION_24
0x4001cce	            0x4155	                                push r13	      1965	linker.c	FUNCTION_24
0x4001cd0	            0x4154	                                push r12	      1965	linker.c	FUNCTION_24
0x4001cd2	              0x55	                                push rbp	      1965	linker.c	FUNCTION_24
0x4001cd3	              0x53	                                push rbx	      1965	linker.c	FUNCTION_24
0x4001cd4	        0x4883ec18	                           sub rsp, 0x18	      1965	linker.c	FUNCTION_24
0x4001cd8	        0x48893c24	                    mov qword [rsp], rdi	      1965	linker.c	FUNCTION_24
0x4001cdc	          0x4989f6	                            mov r14, rsi	      1965	linker.c	FUNCTION_24
0x4001cdf	          0x4989d5	                            mov r13, rdx	      1965	linker.c	FUNCTION_24
0x4001ce2	      0x48894c2408	                mov qword [rsp + 8], rcx	      1965	linker.c	FUNCTION_24
0x4001ce7	          0x4889f7	                            mov rdi, rsi	      1969	linker.c	FUNCTION_24	IF_1	CALL_1
0x4001cea	      0xe800000000	                          call 0x4001cef	      1969	linker.c	FUNCTION_24	IF_1	CALL_1
0x4001cef	            0x85c0	                           test eax, eax	      1969	linker.c	FUNCTION_24	IF_1	CALL_1
0x4001cf1	     0xf84fb030000	                            je 0x40020f2	      1969	linker.c	FUNCTION_24	IF_1	CALL_1
0x4001cf7	        0x498b4570	            mov rax, qword [r13 + 0x70] 	      1973	linker.c	FUNCTION_24	IF_2
0x4001cfb	          0x4885c0	                           test rax, rax	      1973	linker.c	FUNCTION_24	IF_2
0x4001cfe	            0x746d	                            je 0x4001d6d	      1973	linker.c	FUNCTION_24	IF_2
0x4001d00	    0x498b9e900000	            mov rbx, qword [r14 + 0x90] 	      1977	linker.c	FUNCTION_24	IF_2	FOR_1
0x4001d07	          0x4885db	                           test rbx, rbx	      1977	linker.c	FUNCTION_24	IF_2	FOR_1
0x4001d0a	            0x7461	                            je 0x4001d6d	      1977	linker.c	FUNCTION_24	IF_2	FOR_1
0x4001d0c	        0x483b4368	            cmp rax, qword [rbx + 0x68] 	      1979	linker.c	FUNCTION_24	IF_2	FOR_1	IF_3
0x4001d10	            0x7552	                           jne 0x4001d64	      1979	linker.c	FUNCTION_24	IF_2	FOR_1	IF_3
0x4001d12	            0xeb06	                           jmp 0x4001d1a	      1979	linker.c	FUNCTION_24	IF_2	FOR_1	IF_3
0x4001d14	        0x483b4368	            cmp rax, qword [rbx + 0x68] 	      1979	linker.c	FUNCTION_24	IF_2	FOR_1	IF_3
0x4001d18	            0x754a	                           jne 0x4001d64	      1979	linker.c	FUNCTION_24	IF_2	FOR_1	IF_3
0x4001d1a	        0x498b4608	                mov rax, qword [r14 + 8]	      1983	linker.c	FUNCTION_24	IF_2	FOR_1	IF_3	CALL_2
0x4001d1e	          0x4c89f7	                            mov rdi, r14	      1983	linker.c	FUNCTION_24	IF_2	FOR_1	IF_3	CALL_2
0x4001d21	    0xff9000020000	                call qword [rax + 0x200]	      1983	linker.c	FUNCTION_24	IF_2	FOR_1	IF_3	CALL_2
0x4001d27	          0x4885c0	                           test rax, rax	      1984	linker.c	FUNCTION_24	IF_2	FOR_1	IF_3	IF_4
0x4001d2a	     0xf8481030000	                            je 0x40020b1	      1984	linker.c	FUNCTION_24	IF_2	FOR_1	IF_3	IF_4
0x4001d30	          0x498b16	                    mov rdx, qword [r14]	      1986	linker.c	FUNCTION_24	IF_2	FOR_1	IF_3
0x4001d33	        0x48895008	                mov qword [rax + 8], rdx	      1986	linker.c	FUNCTION_24	IF_2	FOR_1	IF_3
0x4001d37	    0x48c740100000	               mov qword [rax + 0x10], 0	      1987	linker.c	FUNCTION_24	IF_2	FOR_1	IF_3
0x4001d3f	    0xc74018014000	         mov dword [rax + 0x18], 0x4001 	      1988	linker.c	FUNCTION_24	IF_2	FOR_1	IF_3
0x4001d46	        0x48895820	             mov qword [rax + 0x20], rbx	      1989	linker.c	FUNCTION_24	IF_2	FOR_1	IF_3
0x4001d4a	          0x4889c2	                            mov rdx, rax	      1991	linker.c	FUNCTION_24	IF_2	FOR_1	IF_3	IF_5	CALL_3
0x4001d4d	      0x488b742408	                mov rsi, qword [rsp + 8]	      1991	linker.c	FUNCTION_24	IF_2	FOR_1	IF_3	IF_5	CALL_3
0x4001d52	        0x488b3c24	                    mov rdi, qword [rsp]	      1991	linker.c	FUNCTION_24	IF_2	FOR_1	IF_3	IF_5	CALL_3
0x4001d56	      0xe862e4ffff	      call sym.generic_add_output_symbol	      1991	linker.c	FUNCTION_24	IF_2	FOR_1	IF_3	IF_5	CALL_3
0x4001d5b	            0x85c0	                           test eax, eax	      1991	linker.c	FUNCTION_24	IF_2	FOR_1	IF_3	IF_5	CALL_3
0x4001d5d	            0x750e	                           jne 0x4001d6d	      1991	linker.c	FUNCTION_24	IF_2	FOR_1	IF_3	IF_5	CALL_3
0x4001d5f	      0xe98e030000	                           jmp 0x40020f2	      1991	linker.c	FUNCTION_24	IF_2	FOR_1	IF_3	IF_5	CALL_3
0x4001d64	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      1977	linker.c	FUNCTION_24	IF_2	FOR_1
0x4001d68	          0x4885db	                           test rbx, rbx	      1977	linker.c	FUNCTION_24	IF_2	FOR_1
0x4001d6b	            0x75a7	                           jne 0x4001d14	      1977	linker.c	FUNCTION_24	IF_2	FOR_1
0x4001d6d	    0x4d8ba6b00000	            mov r12, qword [r14 + 0xb0] 	      2002	linker.c	FUNCTION_24	CALL_4
0x4001d74	    0x418b86b80000	            mov eax, dword [r14 + 0xb8] 	      2003	linker.c	FUNCTION_24	CALL_5
0x4001d7b	        0x4d8d3cc4	                  lea r15, [r12 + rax*8]	      2003	linker.c	FUNCTION_24	CALL_5
0x4001d7f	          0x4d39fc	                            cmp r12, r15	      2004	linker.c	FUNCTION_24	FOR_2
0x4001d82	     0xf8330030000	                           jae 0x40020b8	      2004	linker.c	FUNCTION_24	FOR_2
0x4001d88	        0x498b1c24	                    mov rbx, qword [r12]	      2011	linker.c	FUNCTION_24	FOR_2
0x4001d8c	          0x8b4318	            mov eax, dword [rbx + 0x18] 	      2012	linker.c	FUNCTION_24	FOR_2	IF_6
0x4001d8f	      0xa982380000	                        test eax, 0x3882	      2012	linker.c	FUNCTION_24	FOR_2	IF_6
0x4001d94	            0x7525	                           jne 0x4001dbb	      2012	linker.c	FUNCTION_24	FOR_2	IF_6
0x4001d96	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	      2017	linker.c	FUNCTION_24	FOR_2	IF_6	CALL_7
0x4001d9a	    0x4881fa000000	                              cmp rdx, 0	      2017	linker.c	FUNCTION_24	FOR_2	IF_6	CALL_7
0x4001da1	            0x7418	                            je 0x4001dbb	      2017	linker.c	FUNCTION_24	FOR_2	IF_6	CALL_7
0x4001da3	        0xf6422110	           test byte [rdx + 0x21], 0x10 	      2019	linker.c	FUNCTION_24	FOR_2	IF_6	CALL_11
0x4001da7	            0x7512	                           jne 0x4001dbb	      2019	linker.c	FUNCTION_24	FOR_2	IF_6	CALL_11
0x4001da9	      0xbd00000000	                              mov ebp, 0	      2010	linker.c	FUNCTION_24	FOR_2
0x4001dae	    0x4881fa000000	                              cmp rdx, 0	      2019	linker.c	FUNCTION_24	FOR_2	IF_6	CALL_11
0x4001db5	     0xf8541010000	                           jne 0x4001efc	      2019	linker.c	FUNCTION_24	FOR_2	IF_6	CALL_11
0x4001dbb	        0x488b6b28	            mov rbp, qword [rbx + 0x28] 	      2021	linker.c	FUNCTION_24	FOR_2	IF_6	IF_7
0x4001dbf	          0x4885ed	                           test rbp, rbp	      2021	linker.c	FUNCTION_24	FOR_2	IF_6	IF_7
0x4001dc2	            0x7562	                           jne 0x4001e26	      2021	linker.c	FUNCTION_24	FOR_2	IF_6	IF_7
0x4001dc4	          0xf6c408	                              test ah, 8	      2023	linker.c	FUNCTION_24	FOR_2	IF_6	ELSE_1	IF_8
0x4001dc7	     0xf852f010000	                           jne 0x4001efc	      2023	linker.c	FUNCTION_24	FOR_2	IF_6	ELSE_1	IF_8
0x4001dcd	    0x48817b200000	               cmp qword [rbx + 0x20], 0	      2035	linker.c	FUNCTION_24	FOR_2	IF_6	ELSE_2	IF_9	CALL_13
0x4001dd5	            0x7526	                           jne 0x4001dfd	      2035	linker.c	FUNCTION_24	FOR_2	IF_6	ELSE_2	IF_9	CALL_13
0x4001dd7	        0x488b5308	                mov rdx, qword [rbx + 8]	      2036	linker.c	FUNCTION_24	FOR_2	IF_6	ELSE_2	IF_9
0x4001ddb	    0x41b901000000	                              mov r9d, 1	      2036	linker.c	FUNCTION_24	FOR_2	IF_6	ELSE_2	IF_9
0x4001de1	    0x41b800000000	                              mov r8d, 0	      2036	linker.c	FUNCTION_24	FOR_2	IF_6	ELSE_2	IF_9
0x4001de7	      0xb900000000	                              mov ecx, 0	      2036	linker.c	FUNCTION_24	FOR_2	IF_6	ELSE_2	IF_9
0x4001dec	          0x4c89ee	                            mov rsi, r13	      2036	linker.c	FUNCTION_24	FOR_2	IF_6	ELSE_2	IF_9
0x4001def	        0x488b3c24	                    mov rdi, qword [rsp]	      2036	linker.c	FUNCTION_24	FOR_2	IF_6	ELSE_2	IF_9
0x4001df3	      0xe800000000	                          call 0x4001df8	      2036	linker.c	FUNCTION_24	FOR_2	IF_6	ELSE_2	IF_9
0x4001df8	          0x4889c5	                            mov rbp, rax	      2036	linker.c	FUNCTION_24	FOR_2	IF_6	ELSE_2	IF_9
0x4001dfb	            0xeb20	                           jmp 0x4001e1d	      2036	linker.c	FUNCTION_24	FOR_2	IF_6	ELSE_2	IF_9
0x4001dfd	        0x488b7308	                mov rsi, qword [rbx + 8]	      2041	linker.c	FUNCTION_24	FOR_2	IF_6	ELSE_3	CALL_17
0x4001e01	        0x498b7d28	            mov rdi, qword [r13 + 0x28] 	      2041	linker.c	FUNCTION_24	FOR_2	IF_6	ELSE_3	CALL_17
0x4001e05	    0x41b801000000	                              mov r8d, 1	      2041	linker.c	FUNCTION_24	FOR_2	IF_6	ELSE_3	CALL_17
0x4001e0b	      0xb900000000	                              mov ecx, 0	      2041	linker.c	FUNCTION_24	FOR_2	IF_6	ELSE_3	CALL_17
0x4001e10	      0xba00000000	                              mov edx, 0	      2041	linker.c	FUNCTION_24	FOR_2	IF_6	ELSE_3	CALL_17
0x4001e15	      0xe800000000	                          call 0x4001e1a	      2041	linker.c	FUNCTION_24	FOR_2	IF_6	ELSE_3	CALL_17
0x4001e1a	          0x4889c5	                            mov rbp, rax	      2041	linker.c	FUNCTION_24	FOR_2	IF_6	ELSE_3	CALL_17
0x4001e1d	          0x4885ed	                           test rbp, rbp	      2045	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10
0x4001e20	     0xf84d6000000	                            je 0x4001efc	      2045	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10
0x4001e26	        0x498b4550	            mov rax, qword [r13 + 0x50] 	      2052	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	IF_11
0x4001e2a	        0x498b7608	                mov rsi, qword [r14 + 8]	      2052	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	IF_11
0x4001e2e	        0x48397008	                cmp qword [rax + 8], rsi	      2052	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	IF_11
0x4001e32	            0x7510	                           jne 0x4001e44	      2052	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	IF_11
0x4001e34	        0x488b4540	            mov rax, qword [rbp + 0x40] 	      2054	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	IF_11	IF_12
0x4001e38	          0x4885c0	                           test rax, rax	      2054	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	IF_11	IF_12
0x4001e3b	            0x7407	                            je 0x4001e44	      2054	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	IF_11	IF_12
0x4001e3d	        0x49890424	                    mov qword [r12], rax	      2055	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	IF_11	IF_12
0x4001e41	          0x4889c3	                            mov rbx, rax	      2055	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	IF_11	IF_12
0x4001e44	        0x807d1806	                cmp byte [rbp + 0x18], 6	      2058	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x4001e48	            0x770b	                            ja 0x4001e55	      2058	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x4001e4a	         0xfb64518	           movzx eax, byte [rbp + 0x18] 	      2058	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x4001e4e	    0xff24c5000000	                       jmp qword [rax*8]	      2058	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x4001e55	      0xba00000000	                              mov edx, 0	      2062	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1	CALL_19
0x4001e5a	      0xbe0e080000	                          mov esi, 0x80e	      2062	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1	CALL_19
0x4001e5f	      0xbf00000000	                              mov edi, 0	      2062	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1	CALL_19
0x4001e64	      0xe800000000	                          call 0x4001e69	      2062	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1	CALL_19
0x4001e69	    0x814b18800000	             or dword [rbx + 0x18], 0x80	      2066	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x4001e70	      0xe987000000	                           jmp 0x4001efc	      2067	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x4001e75	        0x488b6d28	            mov rbp, qword [rbp + 0x28] 	      2069	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x4001e79	          0x8b4318	            mov eax, dword [rbx + 0x18] 	      2073	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x4001e7c	      0x257ff7ffff	                     and eax, 0xfffff77f	      2073	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x4001e81	          0x83c802	                               or eax, 2	      2073	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x4001e84	          0x894318	             mov dword [rbx + 0x18], eax	      2073	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x4001e87	        0x488b4530	            mov rax, qword [rbp + 0x30] 	      2074	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x4001e8b	        0x48894310	             mov qword [rbx + 0x10], rax	      2074	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x4001e8f	        0x488b4528	            mov rax, qword [rbp + 0x28] 	      2075	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x4001e93	        0x48894320	             mov qword [rbx + 0x20], rax	      2075	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x4001e97	            0xeb63	                           jmp 0x4001efc	      2076	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x4001e99	          0x8b4318	            mov eax, dword [rbx + 0x18] 	      2079	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x4001e9c	          0x80e4f7	                            and ah, 0xf7	      2079	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x4001e9f	             0xc80	                             or al, 0x80	      2079	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x4001ea1	          0x894318	             mov dword [rbx + 0x18], eax	      2079	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x4001ea4	        0x488b4530	            mov rax, qword [rbp + 0x30] 	      2080	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x4001ea8	        0x48894310	             mov qword [rbx + 0x10], rax	      2080	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x4001eac	        0x488b4528	            mov rax, qword [rbp + 0x28] 	      2081	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x4001eb0	        0x48894320	             mov qword [rbx + 0x20], rax	      2081	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x4001eb4	            0xeb46	                           jmp 0x4001efc	      2082	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x4001eb6	        0x488b4530	            mov rax, qword [rbp + 0x30] 	      2084	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x4001eba	        0x48894310	             mov qword [rbx + 0x10], rax	      2084	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x4001ebe	        0x834b1802	                or dword [rbx + 0x18], 2	      2085	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1
0x4001ec2	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      2086	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1	IF_13	CALL_20
0x4001ec6	        0xf6402110	           test byte [rax + 0x21], 0x10 	      2086	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1	IF_13	CALL_20
0x4001eca	            0x7530	                           jne 0x4001efc	      2086	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1	IF_13	CALL_20
0x4001ecc	    0x483d00000000	                              cmp rax, 0	      2088	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1	IF_13	CALL_22
0x4001ed2	            0x740f	                            je 0x4001ee3	      2088	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1	IF_13	CALL_22
0x4001ed4	      0xbe28080000	                          mov esi, 0x828	      2088	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1	IF_13	CALL_22
0x4001ed9	      0xbf00000000	                              mov edi, 0	      2088	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1	IF_13	CALL_22
0x4001ede	      0xe800000000	                          call 0x4001ee3	      2088	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1	IF_13	CALL_22
0x4001ee3	    0x48c743200000	               mov qword [rbx + 0x20], 0	      2089	linker.c	FUNCTION_24	FOR_2	IF_6	IF_10	SWITCH_1	IF_13
0x4001eeb	      0x410fb64501	               movzx eax, byte [r13 + 1]	      2104	linker.c	FUNCTION_24	FOR_2	IF_14
0x4001ef0	          0x83e060	                           and eax, 0x60	      2104	linker.c	FUNCTION_24	FOR_2	IF_14
0x4001ef3	            0x3c60	                            cmp al, 0x60	      2104	linker.c	FUNCTION_24	FOR_2	IF_14
0x4001ef5	            0x7515	                           jne 0x4001f0c	      2104	linker.c	FUNCTION_24	FOR_2	IF_14
0x4001ef7	      0xe9e8010000	                           jmp 0x40020e4	      2104	linker.c	FUNCTION_24	FOR_2	IF_14
0x4001efc	      0x410fb64501	               movzx eax, byte [r13 + 1]	      2104	linker.c	FUNCTION_24	FOR_2	IF_14
0x4001f01	          0x83e060	                           and eax, 0x60	      2104	linker.c	FUNCTION_24	FOR_2	IF_14
0x4001f04	            0x3c60	                            cmp al, 0x60	      2104	linker.c	FUNCTION_24	FOR_2	IF_14
0x4001f06	     0xf84c1010000	                            je 0x40020cd	      2104	linker.c	FUNCTION_24	FOR_2	IF_14
0x4001f0c	            0x3c40	                            cmp al, 0x40	      2105	linker.c	FUNCTION_24	FOR_2	IF_14
0x4001f0e	            0x7520	                           jne 0x4001f30	      2105	linker.c	FUNCTION_24	FOR_2	IF_14
0x4001f10	        0x488b7308	                mov rsi, qword [rbx + 8]	      2106	linker.c	FUNCTION_24	FOR_2	IF_14	CALL_24
0x4001f14	        0x498b7d30	            mov rdi, qword [r13 + 0x30] 	      2106	linker.c	FUNCTION_24	FOR_2	IF_14	CALL_24
0x4001f18	      0xb900000000	                              mov ecx, 0	      2106	linker.c	FUNCTION_24	FOR_2	IF_14	CALL_24
0x4001f1d	      0xba00000000	                              mov edx, 0	      2106	linker.c	FUNCTION_24	FOR_2	IF_14	CALL_24
0x4001f22	      0xe800000000	                          call 0x4001f27	      2106	linker.c	FUNCTION_24	FOR_2	IF_14	CALL_24
0x4001f27	          0x4885c0	                           test rax, rax	      2106	linker.c	FUNCTION_24	FOR_2	IF_14	CALL_24
0x4001f2a	     0xf849d010000	                            je 0x40020cd	      2106	linker.c	FUNCTION_24	FOR_2	IF_14	CALL_24
0x4001f30	          0x8b5318	            mov edx, dword [rbx + 0x18] 	      2109	linker.c	FUNCTION_24	FOR_2	ELSE_4	IF_15
0x4001f33	    0xf7c282008000	                      test edx, 0x800082	      2109	linker.c	FUNCTION_24	FOR_2	ELSE_4	IF_15
0x4001f39	            0x7417	                            je 0x4001f52	      2109	linker.c	FUNCTION_24	FOR_2	ELSE_4	IF_15
0x4001f3b	          0x4c3b33	                    cmp r14, qword [rbx]	      2115	linker.c	FUNCTION_24	FOR_2	ELSE_4	IF_15	IF_16	CALL_25
0x4001f3e	     0xf8589010000	                           jne 0x40020cd	      2115	linker.c	FUNCTION_24	FOR_2	ELSE_4	IF_15	IF_16	CALL_25
0x4001f44	          0xf6c604	                              test dh, 4	      2116	linker.c	FUNCTION_24	FOR_2	ELSE_4	IF_15	IF_16
0x4001f47	     0xf8572010000	                           jne 0x40020bf	      2116	linker.c	FUNCTION_24	FOR_2	ELSE_4	IF_15	IF_16
0x4001f4d	      0xe97b010000	                           jmp 0x40020cd	      2116	linker.c	FUNCTION_24	FOR_2	ELSE_4	IF_15	IF_16
0x4001f52	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      2121	linker.c	FUNCTION_24	FOR_2	ELSE_6	IF_17	CALL_26
0x4001f56	    0x483d00000000	                              cmp rax, 0	      2121	linker.c	FUNCTION_24	FOR_2	ELSE_6	IF_17	CALL_26
0x4001f5c	     0xf84db000000	                            je 0x400203d	      2121	linker.c	FUNCTION_24	FOR_2	ELSE_6	IF_17	CALL_26
0x4001f62	          0xf6c204	                              test dl, 4	      2123	linker.c	FUNCTION_24	FOR_2	ELSE_7	IF_18
0x4001f65	            0x7410	                            je 0x4001f77	      2123	linker.c	FUNCTION_24	FOR_2	ELSE_7	IF_18
0x4001f67	      0x41f6450160	               test byte [r13 + 1], 0x60	      2108	linker.c	FUNCTION_24	FOR_2	IF_14
0x4001f6c	           0xf94c1	                                 sete cl	      2108	linker.c	FUNCTION_24	FOR_2	IF_14
0x4001f6f	           0xfb6c9	                           movzx ecx, cl	      2108	linker.c	FUNCTION_24	FOR_2	IF_14
0x4001f72	      0xe9b8000000	                           jmp 0x400202f	      2108	linker.c	FUNCTION_24	FOR_2	IF_14
0x4001f77	    0x483d00000000	                              cmp rax, 0	      2130	linker.c	FUNCTION_24	FOR_2	ELSE_9	IF_20	CALL_27
0x4001f7d	     0xf84c1000000	                            je 0x4002044	      2130	linker.c	FUNCTION_24	FOR_2	ELSE_9	IF_20	CALL_27
0x4001f83	          0x8b4820	            mov ecx, dword [rax + 0x20] 	      2131	linker.c	FUNCTION_24	FOR_2	ELSE_9	IF_20	CALL_28
0x4001f86	          0xf6c510	                           test ch, 0x10	      2131	linker.c	FUNCTION_24	FOR_2	ELSE_9	IF_20	CALL_28
0x4001f89	     0xf853e010000	                           jne 0x40020cd	      2131	linker.c	FUNCTION_24	FOR_2	ELSE_9	IF_20	CALL_28
0x4001f8f	          0xf6c201	                              test dl, 1	      2133	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21
0x4001f92	            0x7456	                            je 0x4001fea	      2133	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21
0x4001f94	          0xf6c610	                           test dh, 0x10	      2135	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21	IF_22
0x4001f97	     0xf8530010000	                           jne 0x40020cd	      2135	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21	IF_22
0x4001f9d	        0x418b4500	                    mov eax, dword [r13]	      2139	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21	ELSE_11	SWITCH_2
0x4001fa1	          0xc1e80f	                            shr eax, 0xf	      2139	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21	ELSE_11	SWITCH_2
0x4001fa4	          0x83e003	                              and eax, 3	      2139	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21	ELSE_11	SWITCH_2
0x4001fa7	            0x3c01	                               cmp al, 1	      2139	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21	ELSE_11	SWITCH_2
0x4001fa9	     0xf8410010000	                            je 0x40020bf	      2139	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21	ELSE_11	SWITCH_2
0x4001faf	            0x3c01	                               cmp al, 1	      2139	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21	ELSE_11	SWITCH_2
0x4001fb1	            0x7206	                            jb 0x4001fb9	      2139	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21	ELSE_11	SWITCH_2
0x4001fb3	            0x3c02	                               cmp al, 2	      2139	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21	ELSE_11	SWITCH_2
0x4001fb5	            0x741e	                            je 0x4001fd5	      2139	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21	ELSE_11	SWITCH_2
0x4001fb7	            0xeb71	                           jmp 0x400202a	      2139	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21	ELSE_11	SWITCH_2
0x4001fb9	      0x410fb64500	                   movzx eax, byte [r13]	      2147	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21	ELSE_11	SWITCH_2	IF_23	CALL_29
0x4001fbe	          0x83e003	                              and eax, 3	      2147	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21	ELSE_11	SWITCH_2	IF_23	CALL_29
0x4001fc1	            0x3c02	                               cmp al, 2	      2147	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21	ELSE_11	SWITCH_2	IF_23	CALL_29
0x4001fc3	     0xf84f6000000	                            je 0x40020bf	      2147	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21	ELSE_11	SWITCH_2	IF_23	CALL_29
0x4001fc9	    0xf7c100008000	                      test ecx, 0x800000	      2148	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21	ELSE_11	SWITCH_2	IF_23
0x4001fcf	     0xf84ea000000	                            je 0x40020bf	      2148	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21	ELSE_11	SWITCH_2	IF_23
0x4001fd5	          0x4889de	                            mov rsi, rbx	      2152	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21	ELSE_11	SWITCH_2	IF_24	CALL_30
0x4001fd8	          0x4c89f7	                            mov rdi, r14	      2152	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21	ELSE_11	SWITCH_2	IF_24	CALL_30
0x4001fdb	      0xe800000000	                          call 0x4001fe0	      2152	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21	ELSE_11	SWITCH_2	IF_24	CALL_30
0x4001fe0	            0x85c0	                           test eax, eax	      2108	linker.c	FUNCTION_24	FOR_2	IF_14
0x4001fe2	           0xf94c1	                                 sete cl	      2108	linker.c	FUNCTION_24	FOR_2	IF_14
0x4001fe5	           0xfb6c9	                           movzx ecx, cl	      2108	linker.c	FUNCTION_24	FOR_2	IF_14
0x4001fe8	            0xeb45	                           jmp 0x400202f	      2108	linker.c	FUNCTION_24	FOR_2	IF_14
0x4001fea	          0xf6c608	                              test dh, 8	      2163	linker.c	FUNCTION_24	FOR_2	ELSE_12	ELSE_13	IF_25
0x4001fed	            0x7412	                            je 0x4002001	      2163	linker.c	FUNCTION_24	FOR_2	ELSE_12	ELSE_13	IF_25
0x4001fef	      0x410fb64501	               movzx eax, byte [r13 + 1]	      2108	linker.c	FUNCTION_24	FOR_2	IF_14
0x4001ff4	          0x83e060	                           and eax, 0x60	      2108	linker.c	FUNCTION_24	FOR_2	IF_14
0x4001ff7	            0x3c60	                            cmp al, 0x60	      2108	linker.c	FUNCTION_24	FOR_2	IF_14
0x4001ff9	           0xf95c1	                                setne cl	      2108	linker.c	FUNCTION_24	FOR_2	IF_14
0x4001ffc	           0xfb6c9	                           movzx ecx, cl	      2108	linker.c	FUNCTION_24	FOR_2	IF_14
0x4001fff	            0xeb2e	                           jmp 0x400202f	      2108	linker.c	FUNCTION_24	FOR_2	IF_14
0x4002001	            0x85d2	                           test edx, edx	      2170	linker.c	FUNCTION_24	FOR_2	ELSE_15	IF_27
0x4002003	            0x7511	                           jne 0x4002016	      2170	linker.c	FUNCTION_24	FOR_2	ELSE_15	IF_27
0x4002005	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	      2171	linker.c	FUNCTION_24	FOR_2	ELSE_15	IF_27
0x400200c	        0xf6404620	           test byte [rax + 0x46], 0x20 	      2171	linker.c	FUNCTION_24	FOR_2	ELSE_15	IF_27
0x4002010	     0xf85b7000000	                           jne 0x40020cd	      2171	linker.c	FUNCTION_24	FOR_2	ELSE_15	IF_27
0x4002016	      0xba00000000	                              mov edx, 0	      2177	linker.c	FUNCTION_24	FOR_2	CALL_31
0x400201b	      0xbe81080000	                          mov esi, 0x881	      2177	linker.c	FUNCTION_24	FOR_2	CALL_31
0x4002020	      0xbf00000000	                              mov edi, 0	      2177	linker.c	FUNCTION_24	FOR_2	CALL_31
0x4002025	      0xe800000000	                          call 0x400202a	      2177	linker.c	FUNCTION_24	FOR_2	CALL_31
0x400202a	      0xb900000000	                              mov ecx, 0	      2143	linker.c	FUNCTION_24	FOR_2	ELSE_10	IF_21	ELSE_11	SWITCH_2
0x400202f	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      2182	linker.c	FUNCTION_24	FOR_2	IF_28	CALL_32
0x4002033	    0x483d00000000	                              cmp rax, 0	      2182	linker.c	FUNCTION_24	FOR_2	IF_28	CALL_32
0x4002039	            0x7515	                           jne 0x4002050	      2182	linker.c	FUNCTION_24	FOR_2	IF_28	CALL_32
0x400203b	            0xeb3b	                           jmp 0x4002078	      2182	linker.c	FUNCTION_24	FOR_2	IF_28	CALL_32
0x400203d	      0xb900000000	                              mov ecx, 0	      2182	linker.c	FUNCTION_24	FOR_2	IF_28	CALL_32
0x4002042	            0xeb0c	                           jmp 0x4002050	      2182	linker.c	FUNCTION_24	FOR_2	IF_28	CALL_32
0x4002044	      0xb900000000	                              mov ecx, 0	      2182	linker.c	FUNCTION_24	FOR_2	IF_28	CALL_32
0x4002049	            0xeb05	                           jmp 0x4002050	      2182	linker.c	FUNCTION_24	FOR_2	IF_28	CALL_32
0x400204b	      0xb901000000	                              mov ecx, 1	      2182	linker.c	FUNCTION_24	FOR_2	IF_28	CALL_32
0x4002050	        0x488b4068	            mov rax, qword [rax + 0x68] 	      2183	linker.c	FUNCTION_24	FOR_2	IF_28	CALL_33
0x4002054	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      2183	linker.c	FUNCTION_24	FOR_2	IF_28	CALL_33
0x4002058	          0x4885d2	                           test rdx, rdx	      2183	linker.c	FUNCTION_24	FOR_2	IF_28	CALL_33
0x400205b	            0x7510	                           jne 0x400206d	      2183	linker.c	FUNCTION_24	FOR_2	IF_28	CALL_33
0x400205d	        0x488b3c24	                    mov rdi, qword [rsp]	      2183	linker.c	FUNCTION_24	FOR_2	IF_28	CALL_33
0x4002061	    0x483987980000	            cmp qword [rdi + 0x98], rax 	      2183	linker.c	FUNCTION_24	FOR_2	IF_28	CALL_33
0x4002068	           0xf95c0	                                setne al	      2183	linker.c	FUNCTION_24	FOR_2	IF_28	CALL_33
0x400206b	            0xeb07	                           jmp 0x4002074	      2183	linker.c	FUNCTION_24	FOR_2	IF_28	CALL_33
0x400206d	        0x48394218	            cmp qword [rdx + 0x18], rax 	      2183	linker.c	FUNCTION_24	FOR_2	IF_28	CALL_33
0x4002071	           0xf95c0	                                setne al	      2183	linker.c	FUNCTION_24	FOR_2	IF_28	CALL_33
0x4002074	            0x84c0	                             test al, al	      2183	linker.c	FUNCTION_24	FOR_2	IF_28	CALL_33
0x4002076	            0x7525	                           jne 0x400209d	      2183	linker.c	FUNCTION_24	FOR_2	IF_28	CALL_33
0x4002078	            0x85c9	                           test ecx, ecx	      2187	linker.c	FUNCTION_24	FOR_2	IF_29
0x400207a	            0x7421	                            je 0x400209d	      2187	linker.c	FUNCTION_24	FOR_2	IF_29
0x400207c	          0x4889da	                            mov rdx, rbx	      2189	linker.c	FUNCTION_24	FOR_2	IF_29	IF_30	CALL_34
0x400207f	      0x488b742408	                mov rsi, qword [rsp + 8]	      2189	linker.c	FUNCTION_24	FOR_2	IF_29	IF_30	CALL_34
0x4002084	        0x488b3c24	                    mov rdi, qword [rsp]	      2189	linker.c	FUNCTION_24	FOR_2	IF_29	IF_30	CALL_34
0x4002088	      0xe830e1ffff	      call sym.generic_add_output_symbol	      2189	linker.c	FUNCTION_24	FOR_2	IF_29	IF_30	CALL_34
0x400208d	            0x85c0	                           test eax, eax	      2189	linker.c	FUNCTION_24	FOR_2	IF_29	IF_30	CALL_34
0x400208f	            0x7461	                            je 0x40020f2	      2189	linker.c	FUNCTION_24	FOR_2	IF_29	IF_30	CALL_34
0x4002091	          0x4885ed	                           test rbp, rbp	      2191	linker.c	FUNCTION_24	FOR_2	IF_29	IF_31
0x4002094	            0x7407	                            je 0x400209d	      2191	linker.c	FUNCTION_24	FOR_2	IF_29	IF_31
0x4002096	    0xc74538010000	               mov dword [rbp + 0x38], 1	      2192	linker.c	FUNCTION_24	FOR_2	IF_29	IF_31
0x400209d	        0x4983c408	                              add r12, 8	      2004	linker.c	FUNCTION_24	FOR_2
0x40020a1	          0x4d39e7	                            cmp r15, r12	      2004	linker.c	FUNCTION_24	FOR_2
0x40020a4	     0xf87defcffff	                            ja 0x4001d88	      2004	linker.c	FUNCTION_24	FOR_2
0x40020aa	      0xb801000000	                              mov eax, 1	      2196	linker.c	FUNCTION_24
0x40020af	            0xeb41	                           jmp 0x40020f2	      2196	linker.c	FUNCTION_24
0x40020b1	      0xb800000000	                              mov eax, 0	      1985	linker.c	FUNCTION_24	IF_2	FOR_1	IF_3	IF_4
0x40020b6	            0xeb3a	                           jmp 0x40020f2	      1985	linker.c	FUNCTION_24	IF_2	FOR_1	IF_3	IF_4
0x40020b8	      0xb801000000	                              mov eax, 1	      2196	linker.c	FUNCTION_24
0x40020bd	            0xeb33	                           jmp 0x40020f2	      2196	linker.c	FUNCTION_24
0x40020bf	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      2182	linker.c	FUNCTION_24	FOR_2	IF_28	CALL_32
0x40020c3	    0x483d00000000	                              cmp rax, 0	      2182	linker.c	FUNCTION_24	FOR_2	IF_28	CALL_32
0x40020c9	            0x7580	                           jne 0x400204b	      2182	linker.c	FUNCTION_24	FOR_2	IF_28	CALL_32
0x40020cb	            0xebaf	                           jmp 0x400207c	      2182	linker.c	FUNCTION_24	FOR_2	IF_28	CALL_32
0x40020cd	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      2182	linker.c	FUNCTION_24	FOR_2	IF_28	CALL_32
0x40020d1	      0xb900000000	                              mov ecx, 0	      2182	linker.c	FUNCTION_24	FOR_2	IF_28	CALL_32
0x40020d6	    0x483d00000000	                              cmp rax, 0	      2182	linker.c	FUNCTION_24	FOR_2	IF_28	CALL_32
0x40020dc	     0xf856effffff	                           jne 0x4002050	      2182	linker.c	FUNCTION_24	FOR_2	IF_28	CALL_32
0x40020e2	            0xebb9	                           jmp 0x400209d	      2182	linker.c	FUNCTION_24	FOR_2	IF_28	CALL_32
0x40020e4	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      2182	linker.c	FUNCTION_24	FOR_2	IF_28	CALL_32
0x40020e8	      0xb900000000	                              mov ecx, 0	      2182	linker.c	FUNCTION_24	FOR_2	IF_28	CALL_32
0x40020ed	      0xe95effffff	                           jmp 0x4002050	      2182	linker.c	FUNCTION_24	FOR_2	IF_28	CALL_32
0x40020f2	        0x4883c418	                           add rsp, 0x18	      2197	linker.c	FUNCTION_24
0x40020f6	              0x5b	                                 pop rbx	      2197	linker.c	FUNCTION_24
0x40020f7	              0x5d	                                 pop rbp	      2197	linker.c	FUNCTION_24
0x40020f8	            0x415c	                                 pop r12	      2197	linker.c	FUNCTION_24
0x40020fa	            0x415d	                                 pop r13	      2197	linker.c	FUNCTION_24
0x40020fc	            0x415e	                                 pop r14	      2197	linker.c	FUNCTION_24
0x40020fe	            0x415f	                                 pop r15	      2197	linker.c	FUNCTION_24
0x4002100	              0xc3	                                     ret	      2197	linker.c	FUNCTION_24
_bfd_nolink_section_already_linked	IF,0:ELSE,0:SWITCH,0:functions,0:CALL,1:WHILE,0:FOR,0:DO,0	4
0x400323a	        0x4883ec08	                              sub rsp, 8	      3486	linker.c	FUNCTION_63
0x400323e	      0xe800000000	                          call 0x4003243	      3487	linker.c	FUNCTION_63	CALL_1
0x4003243	        0x4883c408	                              add rsp, 8	      3488	linker.c	FUNCTION_63
0x4003247	              0xc3	                                     ret	      3488	linker.c	FUNCTION_63
bfd_link_hash_lookup	IF,2:ELSE,0:SWITCH,0:functions,0:CALL,1:WHILE,1:FOR,0:DO,0	25
0x4000461	          0x4885ff	                           test rdi, rdi	       498	linker.c	FUNCTION_3	IF_1
0x4000464	            0x7435	                            je 0x400049b	       498	linker.c	FUNCTION_3	IF_1
0x4000466	          0x4885f6	                           test rsi, rsi	       498	linker.c	FUNCTION_3	IF_1
0x4000469	            0x7430	                            je 0x400049b	       498	linker.c	FUNCTION_3	IF_1
0x400046b	              0x53	                                push rbx	       495	linker.c	FUNCTION_3
0x400046c	          0x4489c3	                            mov ebx, r8d	       495	linker.c	FUNCTION_3
0x400046f	      0xe800000000	                          call 0x4000474	       501	linker.c	FUNCTION_3
0x4000474	            0x85db	                           test ebx, ebx	       504	linker.c	FUNCTION_3	IF_2
0x4000476	            0x7429	                            je 0x40004a1	       504	linker.c	FUNCTION_3	IF_2
0x4000478	          0x4885c0	                           test rax, rax	       504	linker.c	FUNCTION_3	IF_2
0x400047b	            0x7424	                            je 0x40004a1	       504	linker.c	FUNCTION_3	IF_2
0x400047d	         0xfb64818	           movzx ecx, byte [rax + 0x18] 	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x4000481	          0x8d51fa	                      lea edx, [rcx - 6]	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x4000484	          0x80fa01	                               cmp dl, 1	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x4000487	            0x7718	                            ja 0x40004a1	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x4000489	        0x488b4028	            mov rax, qword [rax + 0x28] 	       508	linker.c	FUNCTION_3	IF_2	WHILE_1
0x400048d	         0xfb65818	           movzx ebx, byte [rax + 0x18] 	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x4000491	          0x8d53fa	                      lea edx, [rbx - 6]	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x4000494	          0x80fa01	                               cmp dl, 1	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x4000497	            0x76f0	                           jbe 0x4000489	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x4000499	            0xeb06	                           jmp 0x40004a1	       506	linker.c	FUNCTION_3	IF_2	WHILE_1
0x400049b	      0xb800000000	                              mov eax, 0	       499	linker.c	FUNCTION_3	IF_1
0x40004a0	              0xc3	                                     ret	       499	linker.c	FUNCTION_3	IF_1
0x40004a1	              0x5b	                                 pop rbx	       512	linker.c	FUNCTION_3
0x40004a2	              0xc3	                                     ret	       512	linker.c	FUNCTION_3
fix_syms	IF,2:ELSE,0:SWITCH,0:functions,0:CALL,2:WHILE,0:FOR,0:DO,0	43
0x4002d9e	         0xfb64718	           movzx eax, byte [rdi + 0x18] 	      3027	linker.c	FUNCTION_43	IF_1
0x4002da2	          0x83e803	                              sub eax, 3	      3027	linker.c	FUNCTION_43	IF_1
0x4002da5	            0x3c01	                               cmp al, 1	      3027	linker.c	FUNCTION_43	IF_1
0x4002da7	            0x7773	                            ja 0x4002e1c	      3027	linker.c	FUNCTION_43	IF_1
0x4002da9	        0x4c8b4728	              mov r8, qword [rdi + 0x28]	      3030	linker.c	FUNCTION_43	IF_1
0x4002dad	          0x4d85c0	                             test r8, r8	      3031	linker.c	FUNCTION_43	IF_1	IF_2
0x4002db0	            0x746a	                            je 0x4002e1c	      3031	linker.c	FUNCTION_43	IF_1	IF_2
0x4002db2	        0x498b4068	              mov rax, qword [r8 + 0x68]	      3032	linker.c	FUNCTION_43	IF_1	IF_2
0x4002db6	          0x4885c0	                           test rax, rax	      3032	linker.c	FUNCTION_43	IF_1	IF_2
0x4002db9	            0x7461	                            je 0x4002e1c	      3032	linker.c	FUNCTION_43	IF_1	IF_2
0x4002dbb	        0xf6402180	           test byte [rax + 0x21], 0x80 	      3033	linker.c	FUNCTION_43	IF_1	IF_2
0x4002dbf	            0x745b	                            je 0x4002e1c	      3033	linker.c	FUNCTION_43	IF_1	IF_2
0x4002dc1	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      3034	linker.c	FUNCTION_43	IF_1	IF_2	CALL_1
0x4002dc5	          0x4885d2	                           test rdx, rdx	      3034	linker.c	FUNCTION_43	IF_1	IF_2	CALL_1
0x4002dc8	            0x750c	                           jne 0x4002dd6	      3034	linker.c	FUNCTION_43	IF_1	IF_2	CALL_1
0x4002dca	    0x483986980000	            cmp qword [rsi + 0x98], rax 	      3034	linker.c	FUNCTION_43	IF_1	IF_2	CALL_1
0x4002dd1	           0xf95c2	                                setne dl	      3034	linker.c	FUNCTION_43	IF_1	IF_2	CALL_1
0x4002dd4	            0xeb07	                           jmp 0x4002ddd	      3034	linker.c	FUNCTION_43	IF_1	IF_2	CALL_1
0x4002dd6	        0x48394218	            cmp qword [rdx + 0x18], rax 	      3034	linker.c	FUNCTION_43	IF_1	IF_2	CALL_1
0x4002dda	           0xf95c2	                                setne dl	      3034	linker.c	FUNCTION_43	IF_1	IF_2	CALL_1
0x4002ddd	            0x84d2	                             test dl, dl	      3034	linker.c	FUNCTION_43	IF_1	IF_2	CALL_1
0x4002ddf	            0x743b	                            je 0x4002e1c	      3034	linker.c	FUNCTION_43	IF_1	IF_2	CALL_1
0x4002de1	              0x55	                                push rbp	      3024	linker.c	FUNCTION_43
0x4002de2	              0x53	                                push rbx	      3024	linker.c	FUNCTION_43
0x4002de3	          0x4889f1	                            mov rcx, rsi	      3024	linker.c	FUNCTION_43
0x4002de6	          0x4889fb	                            mov rbx, rdi	      3024	linker.c	FUNCTION_43
0x4002de9	        0x498b6860	              mov rbp, qword [r8 + 0x60]	      3038	linker.c	FUNCTION_43	IF_1	IF_2
0x4002ded	        0x48036f30	             add rbp, qword [rdi + 0x30]	      3038	linker.c	FUNCTION_43	IF_1	IF_2
0x4002df1	        0x48036828	             add rbp, qword [rax + 0x28]	      3038	linker.c	FUNCTION_43	IF_1	IF_2
0x4002df5	        0x48896f30	             mov qword [rdi + 0x30], rbp	      3038	linker.c	FUNCTION_43	IF_1	IF_2
0x4002df9	        0x498b7068	              mov rsi, qword [r8 + 0x68]	      3039	linker.c	FUNCTION_43	IF_1	IF_2	CALL_2
0x4002dfd	          0x4889ea	                            mov rdx, rbp	      3039	linker.c	FUNCTION_43	IF_1	IF_2	CALL_2
0x4002e00	          0x4889cf	                            mov rdi, rcx	      3039	linker.c	FUNCTION_43	IF_1	IF_2	CALL_2
0x4002e03	      0xe800000000	                          call 0x4002e08	      3039	linker.c	FUNCTION_43	IF_1	IF_2	CALL_2
0x4002e08	        0x482b6828	             sub rbp, qword [rax + 0x28]	      3040	linker.c	FUNCTION_43	IF_1	IF_2
0x4002e0c	        0x48896b30	             mov qword [rbx + 0x30], rbp	      3040	linker.c	FUNCTION_43	IF_1	IF_2
0x4002e10	        0x48894328	             mov qword [rbx + 0x28], rax	      3041	linker.c	FUNCTION_43	IF_1	IF_2
0x4002e14	      0xb801000000	                              mov eax, 1	      3046	linker.c	FUNCTION_43
0x4002e19	              0x5b	                                 pop rbx	      3046	linker.c	FUNCTION_43
0x4002e1a	              0x5d	                                 pop rbp	      3046	linker.c	FUNCTION_43
0x4002e1b	              0xc3	                                     ret	      3046	linker.c	FUNCTION_43
0x4002e1c	      0xb801000000	                              mov eax, 1	      3046	linker.c	FUNCTION_43
0x4002e21	              0xc3	                                     ret	      3046	linker.c	FUNCTION_43
_bfd_nolink_bfd_link_just_syms	IF,0:ELSE,0:SWITCH,0:functions,0:CALL,0:WHILE,0:FOR,0:DO,0	1
0x4003228	            0xf3c3	                                     ret	      3465	linker.c	FUNCTION_60
_bfd_nolink_bfd_discard_group	IF,0:ELSE,0:SWITCH,0:functions,0:CALL,1:WHILE,0:FOR,0:DO,0	4
0x400320c	        0x4883ec08	                              sub rsp, 8	      3452	linker.c	FUNCTION_58
0x4003210	      0xe800000000	                          call 0x4003215	      3453	linker.c	FUNCTION_58	CALL_1
0x4003215	        0x4883c408	                              add rsp, 8	      3454	linker.c	FUNCTION_58
0x4003219	              0xc3	                                     ret	      3454	linker.c	FUNCTION_58
_bfd_generic_verify_endian_match	IF,2:ELSE,1:SWITCH,0:functions,0:CALL,6:WHILE,0:FOR,0:DO,0	42
0x4003134	        0x488b4708	                mov rax, qword [rdi + 8]	      3389	linker.c	FUNCTION_52	IF_1
0x4003138	          0x8b400c	              mov eax, dword [rax + 0xc]	      3389	linker.c	FUNCTION_52	IF_1
0x400313b	        0x488b5650	            mov rdx, qword [rsi + 0x50] 	      3389	linker.c	FUNCTION_52	IF_1
0x400313f	        0x488b5208	                mov rdx, qword [rdx + 8]	      3389	linker.c	FUNCTION_52	IF_1
0x4003143	          0x8b520c	              mov edx, dword [rdx + 0xc]	      3389	linker.c	FUNCTION_52	IF_1
0x4003146	          0x83f802	                              cmp eax, 2	      3391	linker.c	FUNCTION_52	IF_1
0x4003149	        0x400f95c6	                               setne sil	      3391	linker.c	FUNCTION_52	IF_1
0x400314d	            0x39d0	                            cmp eax, edx	      3391	linker.c	FUNCTION_52	IF_1
0x400314f	           0xf95c1	                                setne cl	      3391	linker.c	FUNCTION_52	IF_1
0x4003152	          0x4084ce	                            test sil, cl	      3391	linker.c	FUNCTION_52	IF_1
0x4003155	            0x7468	                            je 0x40031bf	      3391	linker.c	FUNCTION_52	IF_1
0x4003157	          0x83fa02	                              cmp edx, 2	      3391	linker.c	FUNCTION_52	IF_1
0x400315a	            0x7463	                            je 0x40031bf	      3391	linker.c	FUNCTION_52	IF_1
0x400315c	              0x53	                                push rbx	      3386	linker.c	FUNCTION_52
0x400315d	          0x4889fb	                            mov rbx, rdi	      3386	linker.c	FUNCTION_52
0x4003160	            0x85c0	                           test eax, eax	      3393	linker.c	FUNCTION_52	IF_1	IF_2	CALL_1
0x4003162	            0x7526	                           jne 0x400318a	      3393	linker.c	FUNCTION_52	IF_1	IF_2	CALL_1
0x4003164	      0xba05000000	                              mov edx, 5	      3394	linker.c	FUNCTION_52	IF_1	IF_2	CALL_3
0x4003169	      0xbe00000000	                              mov esi, 0	      3394	linker.c	FUNCTION_52	IF_1	IF_2	CALL_3
0x400316e	      0xbf00000000	                              mov edi, 0	      3394	linker.c	FUNCTION_52	IF_1	IF_2	CALL_3
0x4003173	      0xe800000000	                          call 0x4003178	      3394	linker.c	FUNCTION_52	IF_1	IF_2	CALL_3
0x4003178	          0x4889de	                            mov rsi, rbx	      3394	linker.c	FUNCTION_52	IF_1	IF_2	CALL_3
0x400317b	          0x4889c7	                            mov rdi, rax	      3394	linker.c	FUNCTION_52	IF_1	IF_2	CALL_3
0x400317e	      0xb800000000	                              mov eax, 0	      3394	linker.c	FUNCTION_52	IF_1	IF_2	CALL_3
0x4003183	      0xe800000000	                          call 0x4003188	      3394	linker.c	FUNCTION_52	IF_1	IF_2	CALL_3
0x4003188	            0xeb24	                           jmp 0x40031ae	      3394	linker.c	FUNCTION_52	IF_1	IF_2	CALL_3
0x400318a	      0xba05000000	                              mov edx, 5	      3397	linker.c	FUNCTION_52	IF_1	ELSE_1	CALL_5
0x400318f	      0xbe00000000	                              mov esi, 0	      3397	linker.c	FUNCTION_52	IF_1	ELSE_1	CALL_5
0x4003194	      0xbf00000000	                              mov edi, 0	      3397	linker.c	FUNCTION_52	IF_1	ELSE_1	CALL_5
0x4003199	      0xe800000000	                          call 0x400319e	      3397	linker.c	FUNCTION_52	IF_1	ELSE_1	CALL_5
0x400319e	          0x4889de	                            mov rsi, rbx	      3397	linker.c	FUNCTION_52	IF_1	ELSE_1	CALL_5
0x40031a1	          0x4889c7	                            mov rdi, rax	      3397	linker.c	FUNCTION_52	IF_1	ELSE_1	CALL_5
0x40031a4	      0xb800000000	                              mov eax, 0	      3397	linker.c	FUNCTION_52	IF_1	ELSE_1	CALL_5
0x40031a9	      0xe800000000	                          call 0x40031ae	      3397	linker.c	FUNCTION_52	IF_1	ELSE_1	CALL_5
0x40031ae	      0xbf03000000	                              mov edi, 3	      3399	linker.c	FUNCTION_52	IF_1	CALL_6
0x40031b3	      0xe800000000	                          call 0x40031b8	      3399	linker.c	FUNCTION_52	IF_1	CALL_6
0x40031b8	      0xb800000000	                              mov eax, 0	      3400	linker.c	FUNCTION_52	IF_1
0x40031bd	            0xeb06	                           jmp 0x40031c5	      3400	linker.c	FUNCTION_52	IF_1
0x40031bf	      0xb801000000	                              mov eax, 1	      3403	linker.c	FUNCTION_52
0x40031c4	              0xc3	                                     ret	      3403	linker.c	FUNCTION_52
0x40031c5	              0x5b	                                 pop rbx	      3404	linker.c	FUNCTION_52
0x40031c6	              0xc3	                                     ret	      3404	linker.c	FUNCTION_52
bfd_hide_sym_by_version	IF,0:ELSE,0:SWITCH,0:functions,0:CALL,1:WHILE,0:FOR,0:DO,0	14
0x40030d7	        0x4883ec18	                           sub rsp, 0x18	      3300	linker.c	FUNCTION_49
0x40030db	    0x64488b042528	                mov rax, qword fs:[0x28]	      3300	linker.c	FUNCTION_49
0x40030e4	      0x4889442408	                mov qword [rsp + 8], rax	      3300	linker.c	FUNCTION_49
0x40030e9	            0x31c0	                            xor eax, eax	      3300	linker.c	FUNCTION_49
0x40030eb	    0xc74424040000	                  mov dword [rsp + 4], 0	      3301	linker.c	FUNCTION_49
0x40030f3	      0x488d542404	                      lea rdx, [rsp + 4]	      3302	linker.c	FUNCTION_49	CALL_1
0x40030f8	      0xe800000000	                          call 0x40030fd	      3302	linker.c	FUNCTION_49	CALL_1
0x40030fd	        0x8b442404	                mov eax, dword [rsp + 4]	      3304	linker.c	FUNCTION_49
0x4003101	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      3304	linker.c	FUNCTION_49
0x4003106	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3304	linker.c	FUNCTION_49
0x400310f	            0x7405	                            je 0x4003116	      3304	linker.c	FUNCTION_49
0x4003111	      0xe800000000	                          call 0x4003116	      3304	linker.c	FUNCTION_49
0x4003116	        0x4883c418	                           add rsp, 0x18	      3304	linker.c	FUNCTION_49
0x400311a	              0xc3	                                     ret	      3304	linker.c	FUNCTION_49
_bfd_generic_link_add_one_symbol	IF,43:ELSE,15:SWITCH,1:functions,0:CALL,37:WHILE,1:FOR,0:DO,1	587
0x4001165	            0x4157	                                push r15	      1375	linker.c	FUNCTION_21
0x4001167	            0x4156	                                push r14	      1375	linker.c	FUNCTION_21
0x4001169	            0x4155	                                push r13	      1375	linker.c	FUNCTION_21
0x400116b	            0x4154	                                push r12	      1375	linker.c	FUNCTION_21
0x400116d	              0x55	                                push rbp	      1375	linker.c	FUNCTION_21
0x400116e	              0x53	                                push rbx	      1375	linker.c	FUNCTION_21
0x400116f	        0x4883ec28	                           sub rsp, 0x28	      1375	linker.c	FUNCTION_21
0x4001173	          0x4889fd	                            mov rbp, rdi	      1375	linker.c	FUNCTION_21
0x4001176	          0x4989f7	                            mov r15, rsi	      1375	linker.c	FUNCTION_21
0x4001179	      0x4889542418	             mov qword [rsp + 0x18], rdx	      1375	linker.c	FUNCTION_21
0x400117e	          0x4189cd	                           mov r13d, ecx	      1375	linker.c	FUNCTION_21
0x4001181	          0x4d89c6	                             mov r14, r8	      1375	linker.c	FUNCTION_21
0x4001184	      0x4c894c2408	                 mov qword [rsp + 8], r9	      1375	linker.c	FUNCTION_21
0x4001189	          0x4d85c0	                             test r8, r8	      1381	linker.c	FUNCTION_21	CALL_1
0x400118c	            0x7511	                           jne 0x400119f	      1381	linker.c	FUNCTION_21	CALL_1
0x400118e	      0xbe65050000	                          mov esi, 0x565	      1381	linker.c	FUNCTION_21	CALL_1
0x4001193	      0xbf00000000	                              mov edi, 0	      1381	linker.c	FUNCTION_21	CALL_1
0x4001198	      0xe800000000	                          call 0x400119d	      1381	linker.c	FUNCTION_21	CALL_1
0x400119d	            0xeb09	                           jmp 0x40011a8	      1381	linker.c	FUNCTION_21	CALL_1
0x400119f	    0x4981f8000000	                               cmp r8, 0	      1383	linker.c	FUNCTION_21	IF_1	CALL_2
0x40011a6	            0x7409	                            je 0x40011b1	      1383	linker.c	FUNCTION_21	IF_1	CALL_2
0x40011a8	    0x41f7c5002000	                       test r13d, 0x2000	      1384	linker.c	FUNCTION_21	IF_1
0x40011af	            0x7439	                            je 0x40011ea	      1384	linker.c	FUNCTION_21	IF_1
0x40011b1	    0x41b900000000	                              mov r9d, 0	      1390	linker.c	FUNCTION_21	IF_1	CALL_3
0x40011b7	      0x448b442468	            mov r8d, dword [rsp + 0x68] 	      1390	linker.c	FUNCTION_21	IF_1	CALL_3
0x40011bc	      0xb901000000	                              mov ecx, 1	      1390	linker.c	FUNCTION_21	IF_1	CALL_3
0x40011c1	      0x488b542460	            mov rdx, qword [rsp + 0x60] 	      1390	linker.c	FUNCTION_21	IF_1	CALL_3
0x40011c6	          0x4889ee	                            mov rsi, rbp	      1390	linker.c	FUNCTION_21	IF_1	CALL_3
0x40011c9	          0x4c89ff	                            mov rdi, r15	      1390	linker.c	FUNCTION_21	IF_1	CALL_3
0x40011cc	      0xe800000000	                          call 0x40011d1	      1390	linker.c	FUNCTION_21	IF_1	CALL_3
0x40011d1	      0x4889442410	             mov qword [rsp + 0x10], rax	      1390	linker.c	FUNCTION_21	IF_1	CALL_3
0x40011d6	          0x4885c0	                           test rax, rax	      1392	linker.c	FUNCTION_21	IF_1	IF_2
0x40011d9	     0xf8412080000	                            je 0x40019f1	      1392	linker.c	FUNCTION_21	IF_1	IF_2
0x40011df	    0x41bc05000000	                             mov r12d, 5	      1386	linker.c	FUNCTION_21	IF_1
0x40011e5	      0xe996080000	                           jmp 0x4001a80	      1386	linker.c	FUNCTION_21	IF_1
0x40011ea	    0x41f7c5001000	                       test r13d, 0x1000	      1395	linker.c	FUNCTION_21	ELSE_1	IF_3
0x40011f1	     0xf8536080000	                           jne 0x4001a2d	      1395	linker.c	FUNCTION_21	ELSE_1	IF_3
0x40011f7	    0x41f7c5000800	                        test r13d, 0x800	      1397	linker.c	FUNCTION_21	ELSE_2	IF_4
0x40011fe	     0xf853a080000	                           jne 0x4001a3e	      1397	linker.c	FUNCTION_21	ELSE_2	IF_4
0x4001204	    0x4981fe000000	                              cmp r14, 0	      1399	linker.c	FUNCTION_21	ELSE_3	IF_5	CALL_4
0x400120b	            0x7525	                           jne 0x4001232	      1399	linker.c	FUNCTION_21	ELSE_3	IF_5	CALL_4
0x400120d	          0x4589ec	                          mov r12d, r13d	      1386	linker.c	FUNCTION_21	IF_1
0x4001210	        0x41c1ec07	                             shr r12d, 7	      1386	linker.c	FUNCTION_21	IF_1
0x4001214	        0x4183e401	                             and r12d, 1	      1386	linker.c	FUNCTION_21	IF_1
0x4001218	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1378	linker.c	FUNCTION_21
0x4001221	    0x48837c247800	               cmp qword [rsp + 0x78], 0	      1421	linker.c	FUNCTION_21	IF_10
0x4001227	     0xf85ab000000	                           jne 0x40012d8	      1421	linker.c	FUNCTION_21	IF_10
0x400122d	      0xe9b3000000	                           jmp 0x40012e5	      1421	linker.c	FUNCTION_21	IF_10
0x4001232	        0x41f6c580	                         test r13b, 0x80	      1406	linker.c	FUNCTION_21	ELSE_5	IF_7
0x4001236	     0xf8513080000	                           jne 0x4001a4f	      1406	linker.c	FUNCTION_21	ELSE_5	IF_7
0x400123c	      0x41f6462110	           test byte [r14 + 0x21], 0x10 	      1408	linker.c	FUNCTION_21	ELSE_6	IF_8	CALL_5
0x4001241	     0xf8419080000	                            je 0x4001a60	      1408	linker.c	FUNCTION_21	ELSE_6	IF_8	CALL_5
0x4001247	         0xfb64500	                   movzx eax, byte [rbp]	      1411	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_6
0x400124b	          0x83e003	                              and eax, 3	      1411	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_6
0x400124e	            0x3c02	                               cmp al, 2	      1411	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_6
0x4001250	     0xf841b080000	                            je 0x4001a71	      1411	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_6
0x4001256	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1378	linker.c	FUNCTION_21
0x400125f	    0x41bc04000000	                             mov r12d, 4	      1410	linker.c	FUNCTION_21	ELSE_6	IF_8
0x4001265	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1412	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9
0x400126a	          0x80385f	                    cmp byte [rax], 0x5f	      1412	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9
0x400126d	     0xf850d080000	                           jne 0x4001a80	      1412	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9
0x4001273	        0x8078015f	                cmp byte [rax + 1], 0x5f	      1413	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9
0x4001277	     0xf8503080000	                           jne 0x4001a80	      1413	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9
0x400127d	        0x8078025f	                cmp byte [rax + 2], 0x5f	      1414	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_7
0x4001281	        0x400f94c6	                                sete sil	      1414	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_7
0x4001285	        0x400fb6f6	                          movzx esi, sil	      1414	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_7
0x4001289	          0x4801c6	                            add rsi, rax	      1414	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_7
0x400128c	      0xbf00000000	                              mov edi, 0	      1414	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_7
0x4001291	      0xb90f000000	                            mov ecx, 0xf	      1414	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_7
0x4001296	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1414	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_7
0x4001298	           0xf97c2	                                 seta dl	      1414	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_7
0x400129b	           0xf92c0	                                 setb al	      1414	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_7
0x400129e	            0x38c2	                              cmp dl, al	      1414	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_7
0x40012a0	     0xf85da070000	                           jne 0x4001a80	      1414	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_7
0x40012a6	      0xba05000000	                              mov edx, 5	      1416	linker.c	FUNCTION_21	ELSE_6	IF_8	CALL_9
0x40012ab	      0xbe00000000	                              mov esi, 0	      1416	linker.c	FUNCTION_21	ELSE_6	IF_8	CALL_9
0x40012b0	      0xbf00000000	                              mov edi, 0	      1416	linker.c	FUNCTION_21	ELSE_6	IF_8	CALL_9
0x40012b5	      0xe800000000	                          call 0x40012ba	      1416	linker.c	FUNCTION_21	ELSE_6	IF_8	CALL_9
0x40012ba	          0x4c89fe	                            mov rsi, r15	      1415	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_8
0x40012bd	          0x4889c7	                            mov rdi, rax	      1415	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_8
0x40012c0	      0xb800000000	                              mov eax, 0	      1415	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_8
0x40012c5	      0xe800000000	                          call 0x40012ca	      1415	linker.c	FUNCTION_21	ELSE_6	IF_8	IF_9	CALL_8
0x40012ca	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1378	linker.c	FUNCTION_21
0x40012d3	      0xe9a8070000	                           jmp 0x4001a80	      1378	linker.c	FUNCTION_21
0x40012d8	      0x488b442478	            mov rax, qword [rsp + 0x78] 	      1421	linker.c	FUNCTION_21	IF_10
0x40012dd	          0x488b18	                    mov rbx, qword [rax]	      1421	linker.c	FUNCTION_21	IF_10
0x40012e0	          0x4885db	                           test rbx, rbx	      1421	linker.c	FUNCTION_21	IF_10
0x40012e3	            0x7572	                           jne 0x4001357	      1421	linker.c	FUNCTION_21	IF_10
0x40012e5	        0x4183fc01	                             cmp r12d, 1	      1425	linker.c	FUNCTION_21	ELSE_8	IF_11
0x40012e9	            0x7725	                            ja 0x4001310	      1425	linker.c	FUNCTION_21	ELSE_8	IF_11
0x40012eb	    0x41b900000000	                              mov r9d, 0	      1426	linker.c	FUNCTION_21	ELSE_8	CALL_10
0x40012f1	      0x448b442468	            mov r8d, dword [rsp + 0x68] 	      1426	linker.c	FUNCTION_21	ELSE_8	CALL_10
0x40012f6	      0xb901000000	                              mov ecx, 1	      1426	linker.c	FUNCTION_21	ELSE_8	CALL_10
0x40012fb	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      1426	linker.c	FUNCTION_21	ELSE_8	CALL_10
0x4001300	          0x4889ee	                            mov rsi, rbp	      1426	linker.c	FUNCTION_21	ELSE_8	CALL_10
0x4001303	          0x4c89ff	                            mov rdi, r15	      1426	linker.c	FUNCTION_21	ELSE_8	CALL_10
0x4001306	      0xe800000000	                          call 0x400130b	      1426	linker.c	FUNCTION_21	ELSE_8	CALL_10
0x400130b	          0x4889c3	                            mov rbx, rax	      1426	linker.c	FUNCTION_21	ELSE_8	CALL_10
0x400130e	            0xeb20	                           jmp 0x4001330	      1426	linker.c	FUNCTION_21	ELSE_8	CALL_10
0x4001310	        0x488b7d28	            mov rdi, qword [rbp + 0x28] 	      1428	linker.c	FUNCTION_21	ELSE_8	CALL_11
0x4001314	    0x41b800000000	                              mov r8d, 0	      1428	linker.c	FUNCTION_21	ELSE_8	CALL_11
0x400131a	        0x8b4c2468	            mov ecx, dword [rsp + 0x68] 	      1428	linker.c	FUNCTION_21	ELSE_8	CALL_11
0x400131e	      0xba01000000	                              mov edx, 1	      1428	linker.c	FUNCTION_21	ELSE_8	CALL_11
0x4001323	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      1428	linker.c	FUNCTION_21	ELSE_8	CALL_11
0x4001328	      0xe800000000	                          call 0x400132d	      1428	linker.c	FUNCTION_21	ELSE_8	CALL_11
0x400132d	          0x4889c3	                            mov rbx, rax	      1428	linker.c	FUNCTION_21	ELSE_8	CALL_11
0x4001330	          0x4885db	                           test rbx, rbx	      1429	linker.c	FUNCTION_21	ELSE_8	IF_12
0x4001333	            0x7522	                           jne 0x4001357	      1429	linker.c	FUNCTION_21	ELSE_8	IF_12
0x4001335	    0x48837c247800	               cmp qword [rsp + 0x78], 0	      1431	linker.c	FUNCTION_21	ELSE_8	IF_12	IF_13
0x400133b	     0xf84ba060000	                            je 0x40019fb	      1431	linker.c	FUNCTION_21	ELSE_8	IF_12	IF_13
0x4001341	      0x488b442478	            mov rax, qword [rsp + 0x78] 	      1432	linker.c	FUNCTION_21	ELSE_8	IF_12	IF_13
0x4001346	    0x48c700000000	                      mov qword [rax], 0	      1432	linker.c	FUNCTION_21	ELSE_8	IF_12	IF_13
0x400134d	      0xb800000000	                              mov eax, 0	      1433	linker.c	FUNCTION_21	ELSE_8	IF_12
0x4001352	      0xe974070000	                           jmp 0x4001acb	      1433	linker.c	FUNCTION_21	ELSE_8	IF_12
0x4001357	        0xf6450101	                  test byte [rbp + 1], 1	      1437	linker.c	FUNCTION_21	IF_14
0x400135b	            0x7522	                           jne 0x400137f	      1437	linker.c	FUNCTION_21	IF_14
0x400135d	        0x488b7d38	            mov rdi, qword [rbp + 0x38] 	      1438	linker.c	FUNCTION_21	IF_14
0x4001361	          0x4885ff	                           test rdi, rdi	      1438	linker.c	FUNCTION_21	IF_14
0x4001364	            0x7448	                            je 0x40013ae	      1438	linker.c	FUNCTION_21	IF_14
0x4001366	      0xb900000000	                              mov ecx, 0	      1439	linker.c	FUNCTION_21	IF_14	CALL_12
0x400136b	      0xba00000000	                              mov edx, 0	      1439	linker.c	FUNCTION_21	IF_14	CALL_12
0x4001370	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      1439	linker.c	FUNCTION_21	IF_14	CALL_12
0x4001375	      0xe800000000	                          call 0x400137a	      1439	linker.c	FUNCTION_21	IF_14	CALL_12
0x400137a	          0x4885c0	                           test rax, rax	      1439	linker.c	FUNCTION_21	IF_14	CALL_12
0x400137d	            0x742f	                            je 0x40013ae	      1439	linker.c	FUNCTION_21	IF_14	CALL_12
0x400137f	        0x4883ec08	                              sub rsp, 8	      1441	linker.c	FUNCTION_21	IF_14	IF_15
0x4001383	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      1441	linker.c	FUNCTION_21	IF_14	IF_15
0x4001387	            0x4155	                                push r13	      1441	linker.c	FUNCTION_21	IF_14	IF_15
0x4001389	      0x4c8b4c2418	              mov r9, qword [rsp + 0x18]	      1441	linker.c	FUNCTION_21	IF_14	IF_15
0x400138e	          0x4d89f0	                             mov r8, r14	      1441	linker.c	FUNCTION_21	IF_14	IF_15
0x4001391	          0x4c89f9	                            mov rcx, r15	      1441	linker.c	FUNCTION_21	IF_14	IF_15
0x4001394	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      1441	linker.c	FUNCTION_21	IF_14	IF_15
0x4001399	          0x4889de	                            mov rsi, rbx	      1441	linker.c	FUNCTION_21	IF_14	IF_15
0x400139c	          0x4889ef	                            mov rdi, rbp	      1441	linker.c	FUNCTION_21	IF_14	IF_15
0x400139f	          0xff5050	                 call qword [rax + 0x50]	      1441	linker.c	FUNCTION_21	IF_14	IF_15
0x40013a2	        0x4883c410	                           add rsp, 0x10	      1441	linker.c	FUNCTION_21	IF_14	IF_15
0x40013a6	            0x85c0	                           test eax, eax	      1441	linker.c	FUNCTION_21	IF_14	IF_15
0x40013a8	     0xf841d070000	                            je 0x4001acb	      1441	linker.c	FUNCTION_21	IF_14	IF_15
0x40013ae	    0x48837c247800	               cmp qword [rsp + 0x78], 0	      1446	linker.c	FUNCTION_21	IF_16
0x40013b4	            0x7408	                            je 0x40013be	      1446	linker.c	FUNCTION_21	IF_16
0x40013b6	      0x488b442478	            mov rax, qword [rsp + 0x78] 	      1447	linker.c	FUNCTION_21	IF_16
0x40013bb	          0x488918	                    mov qword [rax], rbx	      1447	linker.c	FUNCTION_21	IF_16
0x40013be	    0x41bd01000000	                             mov r13d, 1	      1454	linker.c	FUNCTION_21	DO_1
0x40013c4	      0x440fb64318	           movzx r8d, byte [rbx + 0x18] 	      1454	linker.c	FUNCTION_21	DO_1
0x40013c9	         0xfb65319	           movzx edx, byte [rbx + 0x19] 	      1456	linker.c	FUNCTION_21	DO_1	IF_17
0x40013cd	            0x89d1	                            mov ecx, edx	      1456	linker.c	FUNCTION_21	DO_1	IF_17
0x40013cf	          0x83e108	                              and ecx, 8	      1456	linker.c	FUNCTION_21	DO_1	IF_17
0x40013d2	        0x410fb6c0	                          movzx eax, r8b	      1454	linker.c	FUNCTION_21	DO_1
0x40013d6	        0x410f45c5	                        cmovne eax, r13d	      1454	linker.c	FUNCTION_21	DO_1
0x40013da	            0x4898	                                    cdqe	      1459	linker.c	FUNCTION_21	DO_1
0x40013dc	          0x4963cc	                        movsxd rcx, r12d	      1459	linker.c	FUNCTION_21	DO_1
0x40013df	        0x488d04c8	                  lea rax, [rax + rcx*8]	      1459	linker.c	FUNCTION_21	DO_1
0x40013e3	    0x8b0485000000	                  mov eax, dword [rax*4]	      1459	linker.c	FUNCTION_21	DO_1
0x40013ea	          0x83f814	                           cmp eax, 0x14	      1460	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40013ed	     0xf869e060000	                           jbe 0x4001a91	      1460	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40013f3	      0xe92b060000	                           jmp 0x4001a23	      1460	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40013f8	      0xba00000000	                              mov edx, 0	      1463	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_13
0x40013fd	      0xbeb7050000	                          mov esi, 0x5b7	      1463	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_13
0x4001402	      0xbf00000000	                              mov edi, 0	      1463	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_13
0x4001407	      0xe800000000	                          call 0x400140c	      1463	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_13
0x400140c	        0xc6431801	                mov byte [rbx + 0x18], 1	      1471	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001410	        0x4c897b28	             mov qword [rbx + 0x28], r15	      1472	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001414	        0x488b7d28	            mov rdi, qword [rbp + 0x28] 	      1473	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_14
0x4001418	          0x4889de	                            mov rsi, rbx	      1473	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_14
0x400141b	      0xe800000000	                          call 0x4001420	      1473	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_14
0x4001420	      0xe975060000	                           jmp 0x4001a9a	      1474	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001425	        0xc6431802	                mov byte [rbx + 0x18], 2	      1478	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001429	        0x4c897b28	             mov qword [rbx + 0x28], r15	      1479	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400142d	      0xe968060000	                           jmp 0x4001a9a	      1480	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001432	        0x4180f805	                              cmp r8b, 5	      1485	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_15
0x4001436	            0x740f	                            je 0x4001447	      1485	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_15
0x4001438	      0xbecd050000	                          mov esi, 0x5cd	      1485	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_15
0x400143d	      0xbf00000000	                              mov edi, 0	      1485	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_15
0x4001442	      0xe800000000	                          call 0x4001447	      1485	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_15
0x4001447	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      1486	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400144b	    0x41b800000000	                              mov r8d, 0	      1486	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001451	      0xb903000000	                              mov ecx, 3	      1486	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001456	          0x4c89fa	                            mov rdx, r15	      1486	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001459	          0x4889de	                            mov rsi, rbx	      1486	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400145c	          0x4889ef	                            mov rdi, rbp	      1486	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400145f	          0xff5010	                 call qword [rax + 0x10]	      1486	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001462	      0x440fb64318	           movzx r8d, byte [rbx + 0x18] 	      1495	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001467	            0xeb0b	                           jmp 0x4001474	      1495	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001469	          0x83f804	                              cmp eax, 4	      1496	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_18
0x400146c	            0x7506	                           jne 0x4001474	      1496	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_18
0x400146e	        0xc6431804	                mov byte [rbx + 0x18], 4	      1497	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_18
0x4001472	            0xeb04	                           jmp 0x4001478	      1497	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_18
0x4001474	        0xc6431803	                mov byte [rbx + 0x18], 3	      1499	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10
0x4001478	        0x4c897328	             mov qword [rbx + 0x28], r14	      1500	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10
0x400147c	      0x488b442408	                mov rax, qword [rsp + 8]	      1501	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10
0x4001481	        0x48894330	             mov qword [rbx + 0x30], rax	      1501	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10
0x4001485	        0x806319f3	             and byte [rbx + 0x19], 0xf3	      1503	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10
0x4001489	      0x837c247000	               cmp dword [rsp + 0x70], 0	      1511	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19
0x400148e	     0xf8406060000	                            je 0x4001a9a	      1511	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19
0x4001494	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      1511	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19
0x4001499	          0x4889f0	                            mov rax, rsi	      1511	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19
0x400149c	          0x803e5f	                    cmp byte [rsi], 0x5f	      1511	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19
0x400149f	     0xf85f5050000	                           jne 0x4001a9a	      1511	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19
0x40014a5	        0x4883c001	                              add rax, 1	      1524	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19
0x40014a9	         0xfb65601	               movzx edx, byte [rsi + 1]	      1525	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19
0x40014ad	          0x80fa5f	                            cmp dl, 0x5f	      1525	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19
0x40014b0	            0x750c	                           jne 0x40014be	      1525	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19
0x40014b2	        0x4883c001	                              add rax, 1	      1526	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19
0x40014b6	           0xfb610	                   movzx edx, byte [rax]	      1525	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19
0x40014b9	          0x80fa5f	                            cmp dl, 0x5f	      1525	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19
0x40014bc	            0x74f4	                            je 0x40014b2	      1525	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19
0x40014be	          0x80fa47	                            cmp dl, 0x47	      1527	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	CALL_16
0x40014c1	     0xf85d3050000	                           jne 0x4001a9a	      1527	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	CALL_16
0x40014c7	      0xbf00000000	                              mov edi, 0	      1527	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	CALL_16
0x40014cc	      0xb907000000	                              mov ecx, 7	      1527	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	CALL_16
0x40014d1	          0x4889c6	                            mov rsi, rax	      1527	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	CALL_16
0x40014d4	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1527	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	CALL_16
0x40014d6	           0xf97c1	                                 seta cl	      1527	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	CALL_16
0x40014d9	           0xf92c2	                                 setb dl	      1527	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	CALL_16
0x40014dc	            0x38d1	                              cmp cl, dl	      1527	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	CALL_16
0x40014de	     0xf85b6050000	                           jne 0x4001a9a	      1527	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	CALL_16
0x40014e4	         0xfb65008	               movzx edx, byte [rax + 8]	      1531	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20
0x40014e8	          0x80fa49	                            cmp dl, 0x49	      1532	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21
0x40014eb	        0x400f94c6	                                sete sil	      1532	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21
0x40014ef	          0x80fa44	                            cmp dl, 0x44	      1532	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21
0x40014f2	            0x7409	                            je 0x40014fd	      1532	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21
0x40014f4	          0x4084f6	                           test sil, sil	      1532	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21
0x40014f7	     0xf849d050000	                            je 0x4001a9a	      1532	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21
0x40014fd	         0xfb67809	               movzx edi, byte [rax + 9]	      1533	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21
0x4001501	        0x40387807	                 cmp byte [rax + 7], dil	      1533	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21
0x4001505	     0xf858f050000	                           jne 0x4001a9a	      1533	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21
0x400150b	        0x4180f804	                              cmp r8b, 4	      1542	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21	IF_22
0x400150f	            0x7514	                           jne 0x4001525	      1542	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21	IF_22
0x4001511	      0xba00000000	                              mov edx, 0	      1543	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21	CALL_17
0x4001516	      0xbe07060000	                          mov esi, 0x607	      1543	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21	CALL_17
0x400151b	      0xbf00000000	                              mov edi, 0	      1543	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21	CALL_17
0x4001520	      0xe800000000	                          call 0x4001525	      1543	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21	CALL_17
0x4001525	        0x488b5308	                mov rdx, qword [rbx + 8]	      1545	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21
0x4001529	        0x400fb6f6	                          movzx esi, sil	      1545	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21
0x400152d	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      1545	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21
0x4001531	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	      1545	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21
0x4001536	          0x4d89f0	                             mov r8, r14	      1545	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21
0x4001539	          0x4c89f9	                            mov rcx, r15	      1545	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21
0x400153c	          0x4889ef	                            mov rdi, rbp	      1545	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21
0x400153f	          0xff5020	                 call qword [rax + 0x20]	      1545	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21
0x4001542	      0xe953050000	                           jmp 0x4001a9a	      1545	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_10	IF_19	IF_20	IF_21
0x4001547	          0x4584c0	                           test r8b, r8b	      1557	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_23
0x400154a	            0x750c	                           jne 0x4001558	      1557	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_23
0x400154c	        0x488b7d28	            mov rdi, qword [rbp + 0x28] 	      1558	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_18
0x4001550	          0x4889de	                            mov rsi, rbx	      1558	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_18
0x4001553	      0xe800000000	                          call 0x4001558	      1558	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_18
0x4001558	        0xc6431805	                mov byte [rbx + 0x18], 5	      1559	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400155c	        0x488b7d28	            mov rdi, qword [rbp + 0x28] 	      1561	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_19
0x4001560	      0xbe10000000	                           mov esi, 0x10	      1561	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_19
0x4001565	      0xe800000000	                          call 0x400156a	      1561	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_19
0x400156a	        0x48894328	             mov qword [rbx + 0x28], rax	      1560	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400156e	          0x4885c0	                           test rax, rax	      1563	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_24
0x4001571	     0xf848e040000	                            je 0x4001a05	      1563	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_24
0x4001577	      0x488b442408	                mov rax, qword [rsp + 8]	      1566	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400157c	        0x48894330	             mov qword [rbx + 0x30], rax	      1566	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001580	          0x4889c7	                            mov rdi, rax	      1573	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_20
0x4001583	      0xe800000000	                          call 0x4001588	      1573	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_20
0x4001588	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	      1576	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400158c	          0x83f804	                              cmp eax, 4	      1576	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400158f	      0xb904000000	                              mov ecx, 4	      1576	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001594	           0xf47c1	                          cmova eax, ecx	      1576	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001597	            0x8902	                    mov dword [rdx], eax	      1576	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001599	    0x4981fe000000	                              cmp r14, 0	      1589	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_26
0x40015a0	            0x7523	                           jne 0x40015c5	      1589	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_26
0x40015a2	        0x488b6b28	            mov rbp, qword [rbx + 0x28] 	      1591	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_26	CALL_21
0x40015a6	      0xbe00000000	                              mov esi, 0	      1591	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_26	CALL_21
0x40015ab	          0x4c89ff	                            mov rdi, r15	      1591	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_26	CALL_21
0x40015ae	      0xe800000000	                          call 0x40015b3	      1591	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_26	CALL_21
0x40015b3	        0x48894508	                mov qword [rbp + 8], rax	      1591	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_26	CALL_21
0x40015b7	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      1592	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_26
0x40015bb	        0x488b4008	                mov rax, qword [rax + 8]	      1592	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_26
0x40015bf	        0x83482001	                or dword [rax + 0x20], 1	      1592	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_26
0x40015c3	            0xeb32	                           jmp 0x40015f7	      1592	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_26
0x40015c5	    0x4d3bbef00000	            cmp r15, qword [r14 + 0xf0] 	      1594	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_11	IF_27
0x40015cc	            0x7421	                            je 0x40015ef	      1594	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_11	IF_27
0x40015ce	        0x488b6b28	            mov rbp, qword [rbx + 0x28] 	      1596	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_11	IF_27	CALL_22
0x40015d2	          0x498b36	                    mov rsi, qword [r14]	      1596	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_11	IF_27	CALL_22
0x40015d5	          0x4c89ff	                            mov rdi, r15	      1596	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_11	IF_27	CALL_22
0x40015d8	      0xe800000000	                          call 0x40015dd	      1596	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_11	IF_27	CALL_22
0x40015dd	        0x48894508	                mov qword [rbp + 8], rax	      1596	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_11	IF_27	CALL_22
0x40015e1	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      1598	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_11	IF_27
0x40015e5	        0x488b4008	                mov rax, qword [rax + 8]	      1598	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_11	IF_27
0x40015e9	        0x83482001	                or dword [rax + 0x20], 1	      1598	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_11	IF_27
0x40015ed	            0xeb08	                           jmp 0x40015f7	      1598	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_11	IF_27
0x40015ef	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      1601	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_12
0x40015f3	        0x4c897008	                mov qword [rax + 8], r14	      1601	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_12
0x40015f7	        0x806319f3	             and byte [rbx + 0x19], 0xf3	      1603	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40015fb	      0xe99a040000	                           jmp 0x4001a9a	      1604	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001600	      0x48837b2000	               cmp qword [rbx + 0x20], 0	      1608	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_28
0x4001605	     0xf858f040000	                           jne 0x4001a9a	      1608	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_28
0x400160b	        0x488b4528	            mov rax, qword [rbp + 0x28] 	      1608	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_28
0x400160f	        0x483b5830	            cmp rbx, qword [rax + 0x30] 	      1608	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_28
0x4001613	     0xf8481040000	                            je 0x4001a9a	      1608	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_28
0x4001619	        0x48895b20	             mov qword [rbx + 0x20], rbx	      1609	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_28
0x400161d	      0xe978040000	                           jmp 0x4001a9a	      1609	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_28
0x4001622	        0x4180f805	                              cmp r8b, 5	      1616	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_23
0x4001626	            0x740f	                            je 0x4001637	      1616	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_23
0x4001628	      0xbe50060000	                          mov esi, 0x650	      1616	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_23
0x400162d	      0xbf00000000	                              mov edi, 0	      1616	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_23
0x4001632	      0xe800000000	                          call 0x4001637	      1616	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_23
0x4001637	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      1617	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400163b	      0x4c8b6c2408	                mov r13, qword [rsp + 8]	      1617	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001640	          0x4d89e8	                             mov r8, r13	      1617	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001643	      0xb905000000	                              mov ecx, 5	      1617	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001648	          0x4c89fa	                            mov rdx, r15	      1617	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400164b	          0x4889de	                            mov rsi, rbx	      1617	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400164e	          0x4889ef	                            mov rdi, rbp	      1617	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001651	          0xff5010	                 call qword [rax + 0x10]	      1617	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001654	        0x4c3b6b30	            cmp r13, qword [rbx + 0x30] 	      1619	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29
0x4001658	     0xf863c040000	                           jbe 0x4001a9a	      1619	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29
0x400165e	        0x4c896b30	             mov qword [rbx + 0x30], r13	      1623	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29
0x4001662	          0x4c89ef	                            mov rdi, r13	      1627	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	CALL_24
0x4001665	      0xe800000000	                          call 0x400166a	      1627	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	CALL_24
0x400166a	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	      1630	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29
0x400166e	          0x83f804	                              cmp eax, 4	      1630	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29
0x4001671	      0xb904000000	                              mov ecx, 4	      1630	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29
0x4001676	           0xf47c1	                          cmova eax, ecx	      1630	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29
0x4001679	            0x8902	                    mov dword [rdx], eax	      1630	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29
0x400167b	    0x4981fe000000	                              cmp r14, 0	      1636	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	IF_31
0x4001682	            0x7526	                           jne 0x40016aa	      1636	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	IF_31
0x4001684	        0x488b6b28	            mov rbp, qword [rbx + 0x28] 	      1638	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	IF_31
0x4001688	      0xbe00000000	                              mov esi, 0	      1639	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	IF_31	CALL_25
0x400168d	          0x4c89ff	                            mov rdi, r15	      1639	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	IF_31	CALL_25
0x4001690	      0xe800000000	                          call 0x4001695	      1639	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	IF_31	CALL_25
0x4001695	        0x48894508	                mov qword [rbp + 8], rax	      1639	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	IF_31	CALL_25
0x4001699	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      1640	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	IF_31
0x400169d	        0x488b4008	                mov rax, qword [rax + 8]	      1640	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	IF_31
0x40016a1	        0x83482001	                or dword [rax + 0x20], 1	      1640	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	IF_31
0x40016a5	      0xe9f0030000	                           jmp 0x4001a9a	      1640	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	IF_31
0x40016aa	    0x4d3bbef00000	            cmp r15, qword [r14 + 0xf0] 	      1642	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	ELSE_13	IF_32
0x40016b1	            0x7424	                            je 0x40016d7	      1642	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	ELSE_13	IF_32
0x40016b3	        0x488b6b28	            mov rbp, qword [rbx + 0x28] 	      1644	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	ELSE_13	IF_32
0x40016b7	          0x498b36	                    mov rsi, qword [r14]	      1645	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	ELSE_13	IF_32	CALL_26
0x40016ba	          0x4c89ff	                            mov rdi, r15	      1645	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	ELSE_13	IF_32	CALL_26
0x40016bd	      0xe800000000	                          call 0x40016c2	      1645	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	ELSE_13	IF_32	CALL_26
0x40016c2	        0x48894508	                mov qword [rbp + 8], rax	      1645	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	ELSE_13	IF_32	CALL_26
0x40016c6	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      1646	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	ELSE_13	IF_32
0x40016ca	        0x488b4008	                mov rax, qword [rax + 8]	      1646	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	ELSE_13	IF_32
0x40016ce	        0x83482001	                or dword [rax + 0x20], 1	      1646	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	ELSE_13	IF_32
0x40016d2	      0xe9c3030000	                           jmp 0x4001a9a	      1646	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	ELSE_13	IF_32
0x40016d7	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      1649	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	ELSE_14
0x40016db	        0x4c897008	                mov qword [rax + 8], r14	      1649	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	ELSE_14
0x40016df	      0xe9b6030000	                           jmp 0x4001a9a	      1649	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_29	ELSE_14
0x40016e4	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      1656	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40016e8	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      1656	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40016ed	      0xb905000000	                              mov ecx, 5	      1656	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40016f2	          0x4c89fa	                            mov rdx, r15	      1656	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40016f5	          0x4889de	                            mov rsi, rbx	      1656	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40016f8	          0x4889ef	                            mov rdi, rbp	      1656	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40016fb	          0xff5010	                 call qword [rax + 0x10]	      1656	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40016fe	      0xe997030000	                           jmp 0x4001a9a	      1658	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001703	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      1663	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_33	CALL_27
0x4001707	        0x488b7808	                mov rdi, qword [rax + 8]	      1663	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_33	CALL_27
0x400170b	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	      1663	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_33	CALL_27
0x4001710	      0xe800000000	                          call 0x4001715	      1663	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_33	CALL_27
0x4001715	            0x85c0	                           test eax, eax	      1663	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_33	CALL_27
0x4001717	     0xf847d030000	                            je 0x4001a9a	      1663	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_33	CALL_27
0x400171d	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      1668	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001721	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      1668	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001726	          0x4c89f1	                            mov rcx, r14	      1668	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001729	          0x4c89fa	                            mov rdx, r15	      1668	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400172c	          0x4889de	                            mov rsi, rbx	      1668	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400172f	          0x4889ef	                            mov rdi, rbp	      1668	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001732	          0xff5008	                    call qword [rax + 8]	      1668	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001735	      0xe960030000	                           jmp 0x4001a9a	      1670	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400173a	        0x4180f805	                              cmp r8b, 5	      1674	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_28
0x400173e	            0x740f	                            je 0x400174f	      1674	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_28
0x4001740	      0xbe8a060000	                          mov esi, 0x68a	      1674	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_28
0x4001745	      0xbf00000000	                              mov edi, 0	      1674	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_28
0x400174a	      0xe800000000	                          call 0x400174f	      1674	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_28
0x400174f	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      1675	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001753	    0x41b800000000	                              mov r8d, 0	      1675	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001759	      0xb906000000	                              mov ecx, 6	      1675	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400175e	          0x4c89fa	                            mov rdx, r15	      1675	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001761	          0x4889de	                            mov rsi, rbx	      1675	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001764	          0x4889ef	                            mov rdi, rbp	      1675	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001767	          0xff5010	                 call qword [rax + 0x10]	      1675	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400176a	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1679	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34
0x400176f	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      1679	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34
0x4001773	            0x3c06	                               cmp al, 6	      1679	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34
0x4001775	            0x754d	                           jne 0x40017c4	      1679	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34
0x4001777	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1680	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34
0x400177c	        0x483b5828	            cmp rbx, qword [rax + 0x28] 	      1680	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34
0x4001780	            0x755f	                           jne 0x40017e1	      1680	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34
0x4001782	      0xba05000000	                              mov edx, 5	      1684	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34	CALL_30
0x4001787	      0xbe00000000	                              mov esi, 0	      1684	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34	CALL_30
0x400178c	      0xbf00000000	                              mov edi, 0	      1684	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34	CALL_30
0x4001791	      0xe800000000	                          call 0x4001796	      1684	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34	CALL_30
0x4001796	      0x488b4c2460	            mov rcx, qword [rsp + 0x60] 	      1682	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34	CALL_29
0x400179b	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      1682	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34	CALL_29
0x40017a0	          0x4c89fe	                            mov rsi, r15	      1682	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34	CALL_29
0x40017a3	          0x4889c7	                            mov rdi, rax	      1682	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34	CALL_29
0x40017a6	      0xb800000000	                              mov eax, 0	      1682	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34	CALL_29
0x40017ab	      0xe800000000	                          call 0x40017b0	      1682	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34	CALL_29
0x40017b0	      0xbf05000000	                              mov edi, 5	      1686	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34	CALL_31
0x40017b5	      0xe800000000	                          call 0x40017ba	      1686	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34	CALL_31
0x40017ba	      0xb800000000	                              mov eax, 0	      1687	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34
0x40017bf	      0xe907030000	                           jmp 0x4001acb	      1687	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_34
0x40017c4	            0x84c0	                             test al, al	      1689	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_35
0x40017c6	            0x7519	                           jne 0x40017e1	      1689	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_35
0x40017c8	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1691	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_35
0x40017cd	        0xc6401801	                mov byte [rax + 0x18], 1	      1691	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_35
0x40017d1	        0x4c897828	             mov qword [rax + 0x28], r15	      1692	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_35
0x40017d5	        0x488b7d28	            mov rdi, qword [rbp + 0x28] 	      1693	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_35	CALL_32
0x40017d9	          0x4889c6	                            mov rsi, rax	      1693	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_35	CALL_32
0x40017dc	      0xe800000000	                          call 0x40017e1	      1693	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_35	CALL_32
0x40017e1	        0x807b1800	                cmp byte [rbx + 0x18], 0	      1698	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_36
0x40017e5	     0xf85b6020000	                           jne 0x4001aa1	      1698	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_36
0x40017eb	      0xe9c9020000	                           jmp 0x4001ab9	      1698	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_36
0x40017f0	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      1718	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40017f4	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	      1718	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40017f9	          0x4d89f0	                             mov r8, r14	      1718	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40017fc	          0x4c89f9	                            mov rcx, r15	      1718	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x40017ff	      0xba2b020000	                          mov edx, 0x22b	      1718	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001804	          0x4889de	                            mov rsi, rbx	      1718	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001807	          0x4889ef	                            mov rdi, rbp	      1718	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400180a	          0xff5018	                 call qword [rax + 0x18]	      1718	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400180d	      0xe988020000	                           jmp 0x4001a9a	      1720	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001812	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	      1725	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x4001816	          0x4885f6	                           test rsi, rsi	      1725	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x4001819	            0x742c	                            je 0x4001847	      1725	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x400181b	      0x41f6474620	           test byte [r15 + 0x46], 0x20 	      1726	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x4001820	            0x7525	                           jne 0x4001847	      1726	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x4001822	        0x488b5308	                mov rdx, qword [rbx + 8]	      1728	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x4001826	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      1728	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x400182a	    0x41b900000000	                              mov r9d, 0	      1728	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x4001830	    0x41b800000000	                              mov r8d, 0	      1728	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x4001836	          0x4c89f9	                            mov rcx, r15	      1728	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x4001839	          0x4889ef	                            mov rdi, rbp	      1728	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x400183c	          0xff5028	                 call qword [rax + 0x28]	      1728	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x400183f	    0x48c743300000	               mov qword [rbx + 0x30], 0	      1731	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_37
0x4001847	        0x488b5b28	            mov rbx, qword [rbx + 0x28] 	      1736	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400184b	      0xe974fbffff	                           jmp 0x40013c4	      1738	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001850	      0x48837b2000	               cmp qword [rbx + 0x20], 0	      1742	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_38
0x4001855	            0x750e	                           jne 0x4001865	      1742	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_38
0x4001857	        0x488b4528	            mov rax, qword [rbp + 0x28] 	      1742	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_38
0x400185b	        0x483b5830	            cmp rbx, qword [rax + 0x30] 	      1742	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_38
0x400185f	            0x7404	                            je 0x4001865	      1742	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_38
0x4001861	        0x48895b20	             mov qword [rbx + 0x20], rbx	      1743	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_38
0x4001865	        0x488b5b28	            mov rbx, qword [rbx + 0x28] 	      1744	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001869	      0xe956fbffff	                           jmp 0x40013c4	      1746	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400186e	        0xf6450102	                  test byte [rbp + 1], 2	      1751	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001872	            0x7511	                           jne 0x4001885	      1751	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001874	      0x48837b2000	               cmp qword [rbx + 0x20], 0	      1752	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001879	            0x7513	                           jne 0x400188e	      1752	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x400187b	        0x488b4528	            mov rax, qword [rbp + 0x28] 	      1752	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x400187f	        0x483b5830	            cmp rbx, qword [rax + 0x30] 	      1752	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001883	            0x7409	                            je 0x400188e	      1752	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001885	          0xf6c203	                              test dl, 3	      1754	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001888	     0xf8480000000	                            je 0x400190e	      1754	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x400188e	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      1756	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001892	        0x4c8b5028	            mov r10, qword [rax + 0x28] 	      1756	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001896	        0x4180f807	                              cmp r8b, 7	      1328	linker.c	FUNCTION_20	WHILE_1
0x400189a	            0x7514	                           jne 0x40018b0	      1328	linker.c	FUNCTION_20	WHILE_1
0x400189c	          0x4889d8	                            mov rax, rbx	      1328	linker.c	FUNCTION_20	WHILE_1
0x400189f	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1329	linker.c	FUNCTION_20	WHILE_1
0x40018a3	      0x440fb64018	           movzx r8d, byte [rax + 0x18] 	      1328	linker.c	FUNCTION_20	WHILE_1
0x40018a8	        0x4180f807	                              cmp r8b, 7	      1328	linker.c	FUNCTION_20	WHILE_1
0x40018ac	            0x74f1	                            je 0x400189f	      1328	linker.c	FUNCTION_20	WHILE_1
0x40018ae	            0xeb03	                           jmp 0x40018b3	      1328	linker.c	FUNCTION_20	WHILE_1
0x40018b0	          0x4889d8	                            mov rax, rbx	      1328	linker.c	FUNCTION_20	WHILE_1
0x40018b3	        0x4180f805	                              cmp r8b, 5	      1330	linker.c	FUNCTION_20	SWITCH_1
0x40018b7	            0x7730	                            ja 0x40018e9	      1330	linker.c	FUNCTION_20	SWITCH_1
0x40018b9	        0x450fb6c0	                          movzx r8d, r8b	      1330	linker.c	FUNCTION_20	SWITCH_1
0x40018bd	    0x42ff24c50000	                        jmp qword [r8*8]	      1330	linker.c	FUNCTION_20	SWITCH_1
0x40018c5	        0x488b4828	            mov rcx, qword [rax + 0x28] 	      1336	linker.c	FUNCTION_20	SWITCH_1
0x40018c9	            0xeb23	                           jmp 0x40018ee	      1336	linker.c	FUNCTION_20	SWITCH_1
0x40018cb	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1339	linker.c	FUNCTION_20	SWITCH_1
0x40018cf	    0x488b88f00000	            mov rcx, qword [rax + 0xf0] 	      1339	linker.c	FUNCTION_20	SWITCH_1
0x40018d6	            0xeb16	                           jmp 0x40018ee	      1339	linker.c	FUNCTION_20	SWITCH_1
0x40018d8	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1341	linker.c	FUNCTION_20	SWITCH_1
0x40018dc	        0x488b4008	                mov rax, qword [rax + 8]	      1341	linker.c	FUNCTION_20	SWITCH_1
0x40018e0	    0x488b88f00000	            mov rcx, qword [rax + 0xf0] 	      1341	linker.c	FUNCTION_20	SWITCH_1
0x40018e7	            0xeb05	                           jmp 0x40018ee	      1341	linker.c	FUNCTION_20	SWITCH_1
0x40018e9	      0xb900000000	                              mov ecx, 0	      1333	linker.c	FUNCTION_20	SWITCH_1
0x40018ee	        0x488b5308	                mov rdx, qword [rbx + 8]	      1756	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x40018f2	    0x41b900000000	                              mov r9d, 0	      1756	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x40018f8	    0x41b800000000	                              mov r8d, 0	      1756	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x40018fe	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	      1756	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001903	          0x4889ef	                            mov rdi, rbp	      1756	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001906	          0x41ffd2	                                call r10	      1756	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x4001909	      0xe98c010000	                           jmp 0x4001a9a	      1758	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_39
0x400190e	        0x488b4528	            mov rax, qword [rbp + 0x28] 	      1768	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001912	        0x488b5308	                mov rdx, qword [rbx + 8]	      1767	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001916	          0x4889c6	                            mov rsi, rax	      1767	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001919	      0xbf00000000	                              mov edi, 0	      1767	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400191e	          0xff5008	                    call qword [rax + 8]	      1767	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001921	          0x4989c4	                            mov r12, rax	      1767	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001924	          0x4885c0	                           test rax, rax	      1770	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_40
0x4001927	     0xf84e2000000	                            je 0x4001a0f	      1770	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_40
0x400192d	          0x488b03	                    mov rax, qword [rbx]	      1772	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001930	        0x49890424	                    mov qword [r12], rax	      1772	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001934	        0x488b4308	                mov rax, qword [rbx + 8]	      1772	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001938	      0x4989442408	                mov qword [r12 + 8], rax	      1772	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400193d	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1772	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001941	      0x4989442410	             mov qword [r12 + 0x10], rax	      1772	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001946	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1772	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400194a	      0x4989442418	             mov qword [r12 + 0x18], rax	      1772	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400194f	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      1772	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001953	      0x4989442420	             mov qword [r12 + 0x20], rax	      1772	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001958	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      1772	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400195c	      0x4989442428	             mov qword [r12 + 0x28], rax	      1772	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001961	        0x488b4330	            mov rax, qword [rbx + 0x30] 	      1772	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001965	      0x4989442430	             mov qword [r12 + 0x30], rax	      1772	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x400196a	    0x41c644241807	                mov byte [r12 + 0x18], 7	      1773	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001970	      0x49895c2428	             mov qword [r12 + 0x28], rbx	      1774	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001975	      0x837c246800	               cmp dword [rsp + 0x68], 0	      1775	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_41
0x400197a	            0x750c	                           jne 0x4001988	      1775	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_41
0x400197c	      0x488b442460	            mov rax, qword [rsp + 0x60] 	      1776	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_41
0x4001981	      0x4989442430	             mov qword [r12 + 0x30], rax	      1776	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_41
0x4001986	            0xeb41	                           jmp 0x40019c9	      1776	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_41
0x4001988	      0xb800000000	                              mov eax, 0	      1780	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_15	CALL_34
0x400198d	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1780	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_15	CALL_34
0x4001994	      0x488b7c2460	            mov rdi, qword [rsp + 0x60] 	      1780	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_15	CALL_34
0x4001999	            0xf2ae	              repne scasb al, byte [rdi]	      1780	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_15	CALL_34
0x400199b	          0x48f7d1	                                 not rcx	      1780	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_15	CALL_34
0x400199e	          0x4989cd	                            mov r13, rcx	      1780	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_15	CALL_34
0x40019a1	        0x488b7d28	            mov rdi, qword [rbp + 0x28] 	      1782	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_15	CALL_35
0x40019a5	            0x89ce	                            mov esi, ecx	      1782	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_15	CALL_35
0x40019a7	      0xe800000000	                          call 0x40019ac	      1782	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_15	CALL_35
0x40019ac	          0x4989c6	                            mov r14, rax	      1782	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_15	CALL_35
0x40019af	          0x4885c0	                           test rax, rax	      1783	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_15	IF_42
0x40019b2	            0x7465	                            je 0x4001a19	      1783	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_15	IF_42
0x40019b4	          0x4c89ea	                            mov rdx, r13	        53	string3.h	FUNCTION_66	CALL_3
0x40019b7	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	        53	string3.h	FUNCTION_66	CALL_3
0x40019bc	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_66	CALL_3
0x40019bf	      0xe800000000	                          call 0x40019c4	        53	string3.h	FUNCTION_66	CALL_3
0x40019c4	      0x4d89742430	             mov qword [r12 + 0x30], r14	      1786	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_15
0x40019c9	        0x488b7d28	            mov rdi, qword [rbp + 0x28] 	      1789	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_37
0x40019cd	          0x4c89e2	                            mov rdx, r12	      1789	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_37
0x40019d0	          0x4889de	                            mov rsi, rbx	      1789	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_37
0x40019d3	      0xe800000000	                          call 0x40019d8	      1789	linker.c	FUNCTION_21	DO_1	SWITCH_1	CALL_37
0x40019d8	    0x48837c247800	               cmp qword [rsp + 0x78], 0	      1792	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_43
0x40019de	     0xf84b6000000	                            je 0x4001a9a	      1792	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_43
0x40019e4	      0x488b442478	            mov rax, qword [rsp + 0x78] 	      1793	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_43
0x40019e9	          0x4c8920	                    mov qword [rax], r12	      1793	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_43
0x40019ec	      0xe9a9000000	                           jmp 0x4001a9a	      1793	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_43
0x40019f1	      0xb800000000	                              mov eax, 0	      1393	linker.c	FUNCTION_21	IF_1	IF_2
0x40019f6	      0xe9d0000000	                           jmp 0x4001acb	      1393	linker.c	FUNCTION_21	IF_1	IF_2
0x40019fb	      0xb800000000	                              mov eax, 0	      1433	linker.c	FUNCTION_21	ELSE_8	IF_12
0x4001a00	      0xe9c6000000	                           jmp 0x4001acb	      1433	linker.c	FUNCTION_21	ELSE_8	IF_12
0x4001a05	      0xb800000000	                              mov eax, 0	      1564	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_24
0x4001a0a	      0xe9bc000000	                           jmp 0x4001acb	      1564	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_24
0x4001a0f	      0xb800000000	                              mov eax, 0	      1771	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_40
0x4001a14	      0xe9b2000000	                           jmp 0x4001acb	      1771	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_40
0x4001a19	      0xb800000000	                              mov eax, 0	      1784	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_15	IF_42
0x4001a1e	      0xe9a8000000	                           jmp 0x4001acb	      1784	linker.c	FUNCTION_21	DO_1	SWITCH_1	ELSE_15	IF_42
0x4001a23	      0xb801000000	                              mov eax, 1	      1800	linker.c	FUNCTION_21
0x4001a28	      0xe99e000000	                           jmp 0x4001acb	      1800	linker.c	FUNCTION_21
0x4001a2d	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1378	linker.c	FUNCTION_21
0x4001a36	    0x41bc06000000	                             mov r12d, 6	      1396	linker.c	FUNCTION_21	ELSE_1	IF_3
0x4001a3c	            0xeb42	                           jmp 0x4001a80	      1396	linker.c	FUNCTION_21	ELSE_1	IF_3
0x4001a3e	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1378	linker.c	FUNCTION_21
0x4001a47	    0x41bc07000000	                             mov r12d, 7	      1398	linker.c	FUNCTION_21	ELSE_2	IF_4
0x4001a4d	            0xeb31	                           jmp 0x4001a80	      1398	linker.c	FUNCTION_21	ELSE_2	IF_4
0x4001a4f	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1378	linker.c	FUNCTION_21
0x4001a58	    0x41bc03000000	                             mov r12d, 3	      1407	linker.c	FUNCTION_21	ELSE_5	IF_7
0x4001a5e	            0xeb20	                           jmp 0x4001a80	      1407	linker.c	FUNCTION_21	ELSE_5	IF_7
0x4001a60	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1378	linker.c	FUNCTION_21
0x4001a69	    0x41bc02000000	                             mov r12d, 2	      1419	linker.c	FUNCTION_21	ELSE_7
0x4001a6f	            0xeb0f	                           jmp 0x4001a80	      1419	linker.c	FUNCTION_21	ELSE_7
0x4001a71	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1378	linker.c	FUNCTION_21
0x4001a7a	    0x41bc04000000	                             mov r12d, 4	      1410	linker.c	FUNCTION_21	ELSE_6	IF_8
0x4001a80	    0x48837c247800	               cmp qword [rsp + 0x78], 0	      1421	linker.c	FUNCTION_21	IF_10
0x4001a86	     0xf854cf8ffff	                           jne 0x40012d8	      1421	linker.c	FUNCTION_21	IF_10
0x4001a8c	      0xe97ff8ffff	                           jmp 0x4001310	      1421	linker.c	FUNCTION_21	IF_10
0x4001a91	            0x89c1	                            mov ecx, eax	      1460	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001a93	    0xff24cd000000	                       jmp qword [rcx*8]	      1460	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001a9a	      0xb801000000	                              mov eax, 1	      1800	linker.c	FUNCTION_21
0x4001a9f	            0xeb2a	                           jmp 0x4001acb	      1800	linker.c	FUNCTION_21
0x4001aa1	        0xc6431806	                mov byte [rbx + 0x18], 6	      1706	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001aa5	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1707	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001aaa	        0x48894328	             mov qword [rbx + 0x28], rax	      1707	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001aae	    0x41bc00000000	                             mov r12d, 0	      1702	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_36
0x4001ab4	      0xe90bf9ffff	                           jmp 0x40013c4	      1702	linker.c	FUNCTION_21	DO_1	SWITCH_1	IF_36
0x4001ab9	        0xc6431806	                mov byte [rbx + 0x18], 6	      1706	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001abd	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1707	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001ac2	        0x48894328	             mov qword [rbx + 0x28], rax	      1707	linker.c	FUNCTION_21	DO_1	SWITCH_1
0x4001ac6	      0xb801000000	                              mov eax, 1	      1800	linker.c	FUNCTION_21
0x4001acb	        0x4883c428	                           add rsp, 0x28	      1801	linker.c	FUNCTION_21
0x4001acf	              0x5b	                                 pop rbx	      1801	linker.c	FUNCTION_21
0x4001ad0	              0x5d	                                 pop rbp	      1801	linker.c	FUNCTION_21
0x4001ad1	            0x415c	                                 pop r12	      1801	linker.c	FUNCTION_21
0x4001ad3	            0x415d	                                 pop r13	      1801	linker.c	FUNCTION_21
0x4001ad5	            0x415e	                                 pop r14	      1801	linker.c	FUNCTION_21
0x4001ad7	            0x415f	                                 pop r15	      1801	linker.c	FUNCTION_21
0x4001ad9	              0xc3	                                     ret	      1801	linker.c	FUNCTION_21
bfd_generic_link_read_symbols	IF,4:ELSE,0:SWITCH,0:functions,0:CALL,8:WHILE,0:FOR,0:DO,0	36
0x4000883	      0xb801000000	                              mov eax, 1	       810	linker.c	FUNCTION_12
0x4000888	    0x4883bfb00000	               cmp qword [rdi + 0xb0], 0	       792	linker.c	FUNCTION_12	IF_1	CALL_1
0x4000890	            0x756e	                           jne 0x4000900	       792	linker.c	FUNCTION_12	IF_1	CALL_1
0x4000892	              0x55	                                push rbp	       791	linker.c	FUNCTION_12
0x4000893	              0x53	                                push rbx	       791	linker.c	FUNCTION_12
0x4000894	        0x4883ec08	                              sub rsp, 8	       791	linker.c	FUNCTION_12
0x4000898	          0x4889fb	                            mov rbx, rdi	       791	linker.c	FUNCTION_12
0x400089b	        0x488b4708	                mov rax, qword [rdi + 8]	       797	linker.c	FUNCTION_12	IF_1	CALL_2
0x400089f	    0xff90f0010000	                call qword [rax + 0x1f0]	       797	linker.c	FUNCTION_12	IF_1	CALL_2
0x40008a5	          0x4889c5	                            mov rbp, rax	       797	linker.c	FUNCTION_12	IF_1	CALL_2
0x40008a8	      0xb800000000	                              mov eax, 0	       799	linker.c	FUNCTION_12	IF_1	IF_2
0x40008ad	          0x4885ed	                           test rbp, rbp	       798	linker.c	FUNCTION_12	IF_1	IF_2
0x40008b0	            0x7848	                            js 0x40008fa	       798	linker.c	FUNCTION_12	IF_1	IF_2
0x40008b2	          0x4889ee	                            mov rsi, rbp	       800	linker.c	FUNCTION_12	IF_1	CALL_4
0x40008b5	          0x4889df	                            mov rdi, rbx	       800	linker.c	FUNCTION_12	IF_1	CALL_4
0x40008b8	      0xe800000000	                          call 0x40008bd	       800	linker.c	FUNCTION_12	IF_1	CALL_4
0x40008bd	          0x4889c6	                            mov rsi, rax	       800	linker.c	FUNCTION_12	IF_1	CALL_4
0x40008c0	    0x488983b00000	             mov qword [rbx + 0xb0], rax	       800	linker.c	FUNCTION_12	IF_1	CALL_4
0x40008c7	          0x4885ed	                           test rbp, rbp	       802	linker.c	FUNCTION_12	IF_1	IF_3	CALL_5
0x40008ca	            0x740a	                            je 0x40008d6	       802	linker.c	FUNCTION_12	IF_1	IF_3	CALL_5
0x40008cc	      0xb800000000	                              mov eax, 0	       803	linker.c	FUNCTION_12	IF_1	IF_3
0x40008d1	          0x4885f6	                           test rsi, rsi	       802	linker.c	FUNCTION_12	IF_1	IF_3	CALL_5
0x40008d4	            0x7424	                            je 0x40008fa	       802	linker.c	FUNCTION_12	IF_1	IF_3	CALL_5
0x40008d6	        0x488b4308	                mov rax, qword [rbx + 8]	       804	linker.c	FUNCTION_12	IF_1	CALL_7
0x40008da	          0x4889df	                            mov rdi, rbx	       804	linker.c	FUNCTION_12	IF_1	CALL_7
0x40008dd	    0xff90f8010000	                call qword [rax + 0x1f8]	       804	linker.c	FUNCTION_12	IF_1	CALL_7
0x40008e3	          0x4885c0	                           test rax, rax	       805	linker.c	FUNCTION_12	IF_1	IF_4
0x40008e6	            0x780d	                            js 0x40008f5	       805	linker.c	FUNCTION_12	IF_1	IF_4
0x40008e8	    0x8983b8000000	             mov dword [rbx + 0xb8], eax	       807	linker.c	FUNCTION_12	IF_1	CALL_8
0x40008ee	      0xb801000000	                              mov eax, 1	       810	linker.c	FUNCTION_12
0x40008f3	            0xeb05	                           jmp 0x40008fa	       810	linker.c	FUNCTION_12
0x40008f5	      0xb800000000	                              mov eax, 0	       806	linker.c	FUNCTION_12	IF_1	IF_4
0x40008fa	        0x4883c408	                              add rsp, 8	       811	linker.c	FUNCTION_12
0x40008fe	              0x5b	                                 pop rbx	       811	linker.c	FUNCTION_12
0x40008ff	              0x5d	                                 pop rbp	       811	linker.c	FUNCTION_12
0x4000900	            0xf3c3	                                     ret	       811	linker.c	FUNCTION_12
bfd_find_version_for_sym	IF,13:ELSE,2:SWITCH,0:functions,0:CALL,2:WHILE,2:FOR,1:DO,0	118
0x4002f49	            0x4157	                                push r15	      3197	linker.c	FUNCTION_48
0x4002f4b	            0x4156	                                push r14	      3197	linker.c	FUNCTION_48
0x4002f4d	            0x4155	                                push r13	      3197	linker.c	FUNCTION_48
0x4002f4f	            0x4154	                                push r12	      3197	linker.c	FUNCTION_48
0x4002f51	              0x55	                                push rbp	      3197	linker.c	FUNCTION_48
0x4002f52	              0x53	                                push rbx	      3197	linker.c	FUNCTION_48
0x4002f53	        0x4883ec28	                           sub rsp, 0x28	      3197	linker.c	FUNCTION_48
0x4002f57	          0x4889fb	                            mov rbx, rdi	      3197	linker.c	FUNCTION_48
0x4002f5a	      0x4889542418	             mov qword [rsp + 0x18], rdx	      3197	linker.c	FUNCTION_48
0x4002f5f	          0x4885ff	                           test rdi, rdi	      3207	linker.c	FUNCTION_48	FOR_1
0x4002f62	     0xf842a010000	                            je 0x4003092	      3207	linker.c	FUNCTION_48	FOR_1
0x4002f68	          0x4889f5	                            mov rbp, rsi	      3207	linker.c	FUNCTION_48	FOR_1
0x4002f6b	    0x48c744240800	                  mov qword [rsp + 8], 0	      3207	linker.c	FUNCTION_48	FOR_1
0x4002f74	    0x48c744241000	               mov qword [rsp + 0x10], 0	      3207	linker.c	FUNCTION_48	FOR_1
0x4002f7d	    0x41bc00000000	                             mov r12d, 0	      3207	linker.c	FUNCTION_48	FOR_1
0x4002f83	    0x41bd00000000	                             mov r13d, 0	      3207	linker.c	FUNCTION_48	FOR_1
0x4002f89	    0x41bf00000000	                             mov r15d, 0	      3207	linker.c	FUNCTION_48	FOR_1
0x4002f8f	      0xb800000000	                              mov eax, 0	      3207	linker.c	FUNCTION_48	FOR_1
0x4002f94	        0x4c8d7318	                   lea r14, [rbx + 0x18]	      3213	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1
0x4002f98	      0x48837b1800	               cmp qword [rbx + 0x18], 0	      3209	linker.c	FUNCTION_48	FOR_1	IF_1
0x4002f9d	            0x754a	                           jne 0x4002fe9	      3209	linker.c	FUNCTION_48	FOR_1	IF_1
0x4002f9f	            0xeb59	                           jmp 0x4002ffa	      3209	linker.c	FUNCTION_48	FOR_1	IF_1
0x4002fa1	         0xfb65010	           movzx edx, byte [rax + 0x10] 	      3215	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x4002fa5	          0xf6c201	                              test dl, 1	      3215	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x4002fa8	            0x7521	                           jne 0x4002fcb	      3215	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x4002faa	        0x488b4808	                mov rcx, qword [rax + 8]	      3215	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x4002fae	          0x80392a	                    cmp byte [rcx], 0x2a	      3215	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x4002fb1	            0x751d	                           jne 0x4002fd0	      3215	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x4002fb3	        0x80790100	                   cmp byte [rcx + 1], 0	      3215	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x4002fb7	      0x488b742408	                mov rsi, qword [rsp + 8]	      3215	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x4002fbc	        0x480f44f3	                          cmove rsi, rbx	      3215	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x4002fc0	      0x4889742408	                mov qword [rsp + 8], rsi	      3215	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x4002fc5	        0x4c0f45eb	                         cmovne r13, rbx	      3215	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x4002fc9	            0xeb08	                           jmp 0x4002fd3	      3215	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x4002fcb	          0x4989dd	                            mov r13, rbx	      3215	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x4002fce	            0xeb03	                           jmp 0x4002fd3	      3215	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x4002fd0	          0x4989dd	                            mov r13, rbx	      3215	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x4002fd3	          0x83e202	                              and edx, 2	      3219	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_3
0x4002fd6	        0x4c0f45e3	                         cmovne r12, rbx	      3219	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_3
0x4002fda	         0xfb65010	           movzx edx, byte [rax + 0x10] 	      3221	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1
0x4002fde	          0x83ca04	                               or edx, 4	      3221	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1
0x4002fe1	          0x885010	               mov byte [rax + 0x10], dl	      3221	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1
0x4002fe4	          0xf6c201	                              test dl, 1	      3224	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_4
0x4002fe7	            0x756e	                           jne 0x4003057	      3224	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1	IF_4
0x4002fe9	          0x4889ea	                            mov rdx, rbp	      3213	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1
0x4002fec	          0x4889c6	                            mov rsi, rax	      3213	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1
0x4002fef	          0x4c89f7	                            mov rdi, r14	      3213	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1
0x4002ff2	          0xff5368	                 call qword [rbx + 0x68]	      3213	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1
0x4002ff5	          0x4885c0	                           test rax, rax	      3213	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1
0x4002ff8	            0x75a7	                           jne 0x4002fa1	      3213	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1
0x4002ffa	      0xb800000000	                              mov eax, 0	      3213	linker.c	FUNCTION_48	FOR_1	IF_1	WHILE_1
0x4002fff	        0x4c8d7338	                   lea r14, [rbx + 0x38]	      3236	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2
0x4003003	      0x48837b3800	               cmp qword [rbx + 0x38], 0	      3232	linker.c	FUNCTION_48	FOR_1	IF_6
0x4003008	            0x7530	                           jne 0x400303a	      3232	linker.c	FUNCTION_48	FOR_1	IF_6
0x400300a	            0xeb3f	                           jmp 0x400304b	      3232	linker.c	FUNCTION_48	FOR_1	IF_6
0x400300c	        0xf6401001	               test byte [rax + 0x10], 1	      3238	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	IF_7	CALL_2
0x4003010	     0xf859a000000	                           jne 0x40030b0	      3238	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	IF_7	CALL_2
0x4003016	        0x488b5008	                mov rdx, qword [rax + 8]	      3238	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	IF_7	CALL_2
0x400301a	          0x803a2a	                    cmp byte [rdx], 0x2a	      3238	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	IF_7	CALL_2
0x400301d	            0x7518	                           jne 0x4003037	      3238	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	IF_7	CALL_2
0x400301f	        0x807a0100	                   cmp byte [rdx + 1], 0	      3238	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	IF_7	CALL_2
0x4003023	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      3238	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	IF_7	CALL_2
0x4003028	        0x480f44cb	                          cmove rcx, rbx	      3238	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	IF_7	CALL_2
0x400302c	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      3238	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	IF_7	CALL_2
0x4003031	        0x4c0f45fb	                         cmovne r15, rbx	      3238	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	IF_7	CALL_2
0x4003035	            0xeb03	                           jmp 0x400303a	      3238	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	IF_7	CALL_2
0x4003037	          0x4989df	                            mov r15, rbx	      3238	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	IF_7	CALL_2
0x400303a	          0x4889ea	                            mov rdx, rbp	      3236	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2
0x400303d	          0x4889c6	                            mov rsi, rax	      3236	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2
0x4003040	          0x4c89f7	                            mov rdi, r14	      3236	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2
0x4003043	          0xff5368	                 call qword [rbx + 0x68]	      3236	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2
0x4003046	          0x4885c0	                           test rax, rax	      3236	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2
0x4003049	            0x75c1	                           jne 0x400300c	      3236	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2
0x400304b	          0x488b1b	                    mov rbx, qword [rbx]	      3207	linker.c	FUNCTION_48	FOR_1
0x400304e	          0x4885db	                           test rbx, rbx	      3207	linker.c	FUNCTION_48	FOR_1
0x4003051	     0xf8538ffffff	                           jne 0x4002f8f	      3207	linker.c	FUNCTION_48	FOR_1
0x4003057	          0x4d85ff	                           test r15, r15	      3258	linker.c	FUNCTION_48	IF_10
0x400305a	           0xf94c0	                                 sete al	      3258	linker.c	FUNCTION_48	IF_10
0x400305d	          0x4d85ed	                           test r13, r13	      3258	linker.c	FUNCTION_48	IF_10
0x4003060	            0x7504	                           jne 0x4003066	      3258	linker.c	FUNCTION_48	IF_10
0x4003062	            0x84c0	                             test al, al	      3258	linker.c	FUNCTION_48	IF_10
0x4003064	            0x7505	                           jne 0x400306b	      3258	linker.c	FUNCTION_48	IF_10
0x4003066	      0x4c896c2408	                mov qword [rsp + 8], r13	      3247	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	ELSE_2	IF_8
0x400306b	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      3261	linker.c	FUNCTION_48	IF_11
0x4003070	          0x4885ff	                           test rdi, rdi	      3261	linker.c	FUNCTION_48	IF_11
0x4003073	            0x7412	                            je 0x4003087	      3261	linker.c	FUNCTION_48	IF_11
0x4003075	          0x4c39e7	                            cmp rdi, r12	      3267	linker.c	FUNCTION_48	IF_11
0x4003078	           0xf94c0	                                 sete al	      3267	linker.c	FUNCTION_48	IF_11
0x400307b	           0xfb6c0	                           movzx eax, al	      3267	linker.c	FUNCTION_48	IF_11
0x400307e	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      3267	linker.c	FUNCTION_48	IF_11
0x4003083	            0x8907	                    mov dword [rdi], eax	      3267	linker.c	FUNCTION_48	IF_11
0x4003085	            0xeb3c	                           jmp 0x40030c3	      3268	linker.c	FUNCTION_48	IF_11
0x4003087	          0x4c89fb	                            mov rbx, r15	      3268	linker.c	FUNCTION_48	IF_11
0x400308a	            0x84c0	                             test al, al	      3271	linker.c	FUNCTION_48	IF_12
0x400308c	    0x480f455c2410	          cmovne rbx, qword [rsp + 0x10]	      3271	linker.c	FUNCTION_48	IF_12
0x4003092	          0x4885db	                           test rbx, rbx	      3274	linker.c	FUNCTION_48	IF_13
0x4003095	            0x7412	                            je 0x40030a9	      3274	linker.c	FUNCTION_48	IF_13
0x4003097	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      3276	linker.c	FUNCTION_48	IF_13
0x400309c	    0xc70001000000	                      mov dword [rax], 1	      3276	linker.c	FUNCTION_48	IF_13
0x40030a2	      0x48895c2408	                mov qword [rsp + 8], rbx	      3277	linker.c	FUNCTION_48	IF_13
0x40030a7	            0xeb1a	                           jmp 0x40030c3	      3277	linker.c	FUNCTION_48	IF_13
0x40030a9	      0x48895c2408	                mov qword [rsp + 8], rbx	      3280	linker.c	FUNCTION_48
0x40030ae	            0xeb13	                           jmp 0x40030c3	      3280	linker.c	FUNCTION_48
0x40030b0	          0x4885db	                           test rbx, rbx	      3258	linker.c	FUNCTION_48	IF_10
0x40030b3	           0xf94c0	                                 sete al	      3258	linker.c	FUNCTION_48	IF_10
0x40030b6	            0x74d2	                            je 0x400308a	      3258	linker.c	FUNCTION_48	IF_10
0x40030b8	          0x4989df	                            mov r15, rbx	      3258	linker.c	FUNCTION_48	IF_10
0x40030bb	    0x41bd00000000	                             mov r13d, 0	      3247	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	ELSE_2	IF_8
0x40030c1	            0xeba3	                           jmp 0x4003066	      3247	linker.c	FUNCTION_48	FOR_1	IF_6	WHILE_2	ELSE_2	IF_8
0x40030c3	      0x488b442408	                mov rax, qword [rsp + 8]	      3281	linker.c	FUNCTION_48
0x40030c8	        0x4883c428	                           add rsp, 0x28	      3281	linker.c	FUNCTION_48
0x40030cc	              0x5b	                                 pop rbx	      3281	linker.c	FUNCTION_48
0x40030cd	              0x5d	                                 pop rbp	      3281	linker.c	FUNCTION_48
0x40030ce	            0x415c	                                 pop r12	      3281	linker.c	FUNCTION_48
0x40030d0	            0x415d	                                 pop r13	      3281	linker.c	FUNCTION_48
0x40030d2	            0x415e	                                 pop r14	      3281	linker.c	FUNCTION_48
0x40030d4	            0x415f	                                 pop r15	      3281	linker.c	FUNCTION_48
0x40030d6	              0xc3	                                     ret	      3281	linker.c	FUNCTION_48
_bfd_nolink_bfd_lookup_section_flags	IF,0:ELSE,0:SWITCH,0:functions,0:CALL,1:WHILE,0:FOR,0:DO,0	5
0x40031e9	        0x4883ec08	                              sub rsp, 8	      3439	linker.c	FUNCTION_56
0x40031ed	    0x488bbaf00000	            mov rdi, qword [rdx + 0xf0] 	      3440	linker.c	FUNCTION_56	CALL_1
0x40031f4	      0xe800000000	                          call 0x40031f9	      3440	linker.c	FUNCTION_56	CALL_1
0x40031f9	        0x4883c408	                              add rsp, 8	      3441	linker.c	FUNCTION_56
0x40031fd	              0xc3	                                     ret	      3441	linker.c	FUNCTION_56
_bfd_generic_link_hash_table_create	IF,2:ELSE,0:SWITCH,0:functions,0:CALL,3:WHILE,0:FOR,0:DO,0	27
0x4000832	            0x4154	                                push r12	       752	linker.c	FUNCTION_10
0x4000834	              0x55	                                push rbp	       752	linker.c	FUNCTION_10
0x4000835	              0x53	                                push rbx	       752	linker.c	FUNCTION_10
0x4000836	          0x4989fc	                            mov r12, rdi	       752	linker.c	FUNCTION_10
0x4000839	      0xbf48000000	                           mov edi, 0x48	       756	linker.c	FUNCTION_10	CALL_1
0x400083e	      0xe800000000	                          call 0x4000843	       756	linker.c	FUNCTION_10	CALL_1
0x4000843	          0x4885c0	                           test rax, rax	       757	linker.c	FUNCTION_10	IF_1
0x4000846	            0x742e	                            je 0x4000876	       757	linker.c	FUNCTION_10	IF_1
0x4000848	          0x4889c3	                            mov rbx, rax	       757	linker.c	FUNCTION_10	IF_1
0x400084b	          0x4889c5	                            mov rbp, rax	       759	linker.c	FUNCTION_10	IF_2	CALL_2
0x400084e	      0xb948000000	                           mov ecx, 0x48	       759	linker.c	FUNCTION_10	IF_2	CALL_2
0x4000853	      0xba00000000	                              mov edx, 0	       759	linker.c	FUNCTION_10	IF_2	CALL_2
0x4000858	          0x4c89e6	                            mov rsi, r12	       759	linker.c	FUNCTION_10	IF_2	CALL_2
0x400085b	          0x4889c7	                            mov rdi, rax	       759	linker.c	FUNCTION_10	IF_2	CALL_2
0x400085e	      0xe800000000	                          call 0x4000863	       759	linker.c	FUNCTION_10	IF_2	CALL_2
0x4000863	            0x85c0	                           test eax, eax	       759	linker.c	FUNCTION_10	IF_2	CALL_2
0x4000865	            0x7514	                           jne 0x400087b	       759	linker.c	FUNCTION_10	IF_2	CALL_2
0x4000867	          0x4889df	                            mov rdi, rbx	       763	linker.c	FUNCTION_10	IF_2	CALL_3
0x400086a	      0xe800000000	                          call 0x400086f	       763	linker.c	FUNCTION_10	IF_2	CALL_3
0x400086f	      0xbd00000000	                              mov ebp, 0	       764	linker.c	FUNCTION_10	IF_2
0x4000874	            0xeb05	                           jmp 0x400087b	       764	linker.c	FUNCTION_10	IF_2
0x4000876	      0xbd00000000	                              mov ebp, 0	       758	linker.c	FUNCTION_10	IF_1
0x400087b	          0x4889e8	                            mov rax, rbp	       767	linker.c	FUNCTION_10
0x400087e	              0x5b	                                 pop rbx	       767	linker.c	FUNCTION_10
0x400087f	              0x5d	                                 pop rbp	       767	linker.c	FUNCTION_10
0x4000880	            0x415c	                                 pop r12	       767	linker.c	FUNCTION_10
0x4000882	              0xc3	                                     ret	       767	linker.c	FUNCTION_10
bfd_section_already_linked_table_free	IF,0:ELSE,0:SWITCH,0:functions,0:CALL,1:WHILE,0:FOR,0:DO,0	5
0x40028e7	        0x4883ec08	                              sub rsp, 8	      2805	linker.c	FUNCTION_39
0x40028eb	      0xbf00000000	                              mov edi, 0	      2806	linker.c	FUNCTION_39	CALL_1
0x40028f0	      0xe800000000	                          call 0x40028f5	      2806	linker.c	FUNCTION_39	CALL_1
0x40028f5	        0x4883c408	                              add rsp, 8	      2807	linker.c	FUNCTION_39
0x40028f9	              0xc3	                                     ret	      2807	linker.c	FUNCTION_39
_bfd_nolink_bfd_define_common_symbol	IF,0:ELSE,0:SWITCH,0:functions,0:CALL,1:WHILE,0:FOR,0:DO,0	4
0x4003248	        0x4883ec08	                              sub rsp, 8	      3495	linker.c	FUNCTION_64
0x400324c	      0xe800000000	                          call 0x4003251	      3496	linker.c	FUNCTION_64	CALL_1
0x4003251	        0x4883c408	                              add rsp, 8	      3497	linker.c	FUNCTION_64
0x4003255	              0xc3	                                     ret	      3497	linker.c	FUNCTION_64
_bfd_nolink_bfd_define_start_stop	IF,0:ELSE,0:SWITCH,0:functions,0:CALL,1:WHILE,0:FOR,0:DO,0	5
0x4003256	        0x4883ec08	                              sub rsp, 8	      3503	linker.c	FUNCTION_65
0x400325a	    0x488bbaf00000	            mov rdi, qword [rdx + 0xf0] 	      3504	linker.c	FUNCTION_65	CALL_1
0x4003261	      0xe800000000	                          call 0x4003266	      3504	linker.c	FUNCTION_65	CALL_1
0x4003266	        0x4883c408	                              add rsp, 8	      3505	linker.c	FUNCTION_65
0x400326a	              0xc3	                                     ret	      3505	linker.c	FUNCTION_65
_bfd_nolink_bfd_copy_link_hash_symbol_type	IF,0:ELSE,0:SWITCH,0:functions,0:CALL,0:WHILE,0:FOR,0:DO,0	1
0x400322a	            0xf3c3	                                     ret	      3473	linker.c	FUNCTION_61
_bfd_fix_excluded_sec_syms	IF,0:ELSE,0:SWITCH,0:functions,0:CALL,1:WHILE,0:FOR,0:DO,0	7
0x4002e22	        0x4883ec08	                              sub rsp, 8	      3050	linker.c	FUNCTION_44
0x4002e26	          0x4889fa	                            mov rdx, rdi	      3050	linker.c	FUNCTION_44
0x4002e29	        0x488b7e28	            mov rdi, qword [rsi + 0x28] 	      3051	linker.c	FUNCTION_44	CALL_1
0x4002e2d	      0xbe00000000	                              mov esi, 0	      3051	linker.c	FUNCTION_44	CALL_1
0x4002e32	      0xe800000000	                          call 0x4002e37	      3051	linker.c	FUNCTION_44	CALL_1
0x4002e37	        0x4883c408	                              add rsp, 8	      3052	linker.c	FUNCTION_44
0x4002e3b	              0xc3	                                     ret	      3052	linker.c	FUNCTION_44
bfd_link_hash_traverse	IF,1:ELSE,0:SWITCH,0:functions,0:CALL,1:WHILE,0:FOR,2:DO,0	38
0x400073d	            0x4156	                                push r14	       646	linker.c	FUNCTION_6
0x400073f	            0x4155	                                push r13	       646	linker.c	FUNCTION_6
0x4000741	            0x4154	                                push r12	       646	linker.c	FUNCTION_6
0x4000743	              0x55	                                push rbp	       646	linker.c	FUNCTION_6
0x4000744	              0x53	                                push rbx	       646	linker.c	FUNCTION_6
0x4000745	          0x4989fd	                            mov r13, rdi	       646	linker.c	FUNCTION_6
0x4000748	        0x804f2401	                 or byte [rdi + 0x24], 1	       649	linker.c	FUNCTION_6
0x400074c	        0x837f1800	               cmp dword [rdi + 0x18], 0	       650	linker.c	FUNCTION_6	FOR_1
0x4000750	            0x7444	                            je 0x4000796	       650	linker.c	FUNCTION_6	FOR_1
0x4000752	          0x4889f5	                            mov rbp, rsi	       650	linker.c	FUNCTION_6	FOR_1
0x4000755	          0x4989d4	                            mov r12, rdx	       650	linker.c	FUNCTION_6	FOR_1
0x4000758	    0x41be00000000	                             mov r14d, 0	       650	linker.c	FUNCTION_6	FOR_1
0x400075e	          0x4489f0	                           mov eax, r14d	       654	linker.c	FUNCTION_6	FOR_1
0x4000761	        0x498b5500	                    mov rdx, qword [r13]	       654	linker.c	FUNCTION_6	FOR_1
0x4000765	        0x488b1cc2	            mov rbx, qword [rdx + rax*8]	       654	linker.c	FUNCTION_6	FOR_1
0x4000769	          0x4885db	                           test rbx, rbx	       655	linker.c	FUNCTION_6	FOR_1	FOR_2
0x400076c	            0x741e	                            je 0x400078c	       655	linker.c	FUNCTION_6	FOR_1	FOR_2
0x400076e	          0x4889df	                            mov rdi, rbx	       655	linker.c	FUNCTION_6	FOR_1	FOR_2
0x4000771	        0x807b1807	                cmp byte [rbx + 0x18], 7	       656	linker.c	FUNCTION_6	FOR_1	FOR_2	IF_1
0x4000775	            0x7504	                           jne 0x400077b	       656	linker.c	FUNCTION_6	FOR_1	FOR_2	IF_1
0x4000777	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	       656	linker.c	FUNCTION_6	FOR_1	FOR_2	IF_1
0x400077b	          0x4c89e6	                            mov rsi, r12	       656	linker.c	FUNCTION_6	FOR_1	FOR_2	IF_1
0x400077e	            0xffd5	                                call rbp	       656	linker.c	FUNCTION_6	FOR_1	FOR_2	IF_1
0x4000780	            0x85c0	                           test eax, eax	       656	linker.c	FUNCTION_6	FOR_1	FOR_2	IF_1
0x4000782	            0x7412	                            je 0x4000796	       656	linker.c	FUNCTION_6	FOR_1	FOR_2	IF_1
0x4000784	          0x488b1b	                    mov rbx, qword [rbx]	       655	linker.c	FUNCTION_6	FOR_1	FOR_2
0x4000787	          0x4885db	                           test rbx, rbx	       655	linker.c	FUNCTION_6	FOR_1	FOR_2
0x400078a	            0x75e2	                           jne 0x400076e	       655	linker.c	FUNCTION_6	FOR_1	FOR_2
0x400078c	        0x4183c601	                             add r14d, 1	       650	linker.c	FUNCTION_6	FOR_1
0x4000790	        0x45397518	           cmp dword [r13 + 0x18], r14d 	       650	linker.c	FUNCTION_6	FOR_1
0x4000794	            0x77c8	                            ja 0x400075e	       650	linker.c	FUNCTION_6	FOR_1
0x4000796	      0x41806524fe	             and byte [r13 + 0x24], 0xfe	       660	linker.c	FUNCTION_6
0x400079b	              0x5b	                                 pop rbx	       661	linker.c	FUNCTION_6
0x400079c	              0x5d	                                 pop rbp	       661	linker.c	FUNCTION_6
0x400079d	            0x415c	                                 pop r12	       661	linker.c	FUNCTION_6
0x400079f	            0x415d	                                 pop r13	       661	linker.c	FUNCTION_6
0x40007a1	            0x415e	                                 pop r14	       661	linker.c	FUNCTION_6
0x40007a3	              0xc3	                                     ret	       661	linker.c	FUNCTION_6
_bfd_nolink_bfd_link_hash_table_create	IF,0:ELSE,0:SWITCH,0:functions,0:CALL,1:WHILE,0:FOR,0:DO,0	4
0x400321a	        0x4883ec08	                              sub rsp, 8	      3458	linker.c	FUNCTION_59
0x400321e	      0xe800000000	                          call 0x4003223	      3459	linker.c	FUNCTION_59	CALL_1
0x4003223	        0x4883c408	                              add rsp, 8	      3460	linker.c	FUNCTION_59
0x4003227	              0xc3	                                     ret	      3460	linker.c	FUNCTION_59
already_linked_newfunc	IF,1:ELSE,0:SWITCH,0:functions,0:CALL,1:WHILE,0:FOR,0:DO,0	9
0x4000040	        0x4883ec08	                              sub rsp, 8	      2781	linker.c	FUNCTION_37
0x4000044	          0x4889f7	                            mov rdi, rsi	      2781	linker.c	FUNCTION_37
0x4000047	      0xbe20000000	                           mov esi, 0x20	      2782	linker.c	FUNCTION_37
0x400004c	      0xe800000000	                          call 0x4000051	      2782	linker.c	FUNCTION_37
0x4000051	          0x4885c0	                           test rax, rax	      2786	linker.c	FUNCTION_37	IF_1
0x4000054	            0x7408	                            je 0x400005e	      2786	linker.c	FUNCTION_37	IF_1
0x4000056	    0x48c740180000	               mov qword [rax + 0x18], 0	      2789	linker.c	FUNCTION_37
0x400005e	        0x4883c408	                              add rsp, 8	      2792	linker.c	FUNCTION_37
0x4000062	              0xc3	                                     ret	      2792	linker.c	FUNCTION_37
bfd_link_add_undef	IF,2:ELSE,0:SWITCH,0:functions,0:CALL,1:WHILE,0:FOR,0:DO,0	22
0x40007a4	              0x55	                                push rbp	       668	linker.c	FUNCTION_7
0x40007a5	              0x53	                                push rbx	       668	linker.c	FUNCTION_7
0x40007a6	        0x4883ec08	                              sub rsp, 8	       668	linker.c	FUNCTION_7
0x40007aa	          0x4889fb	                            mov rbx, rdi	       668	linker.c	FUNCTION_7
0x40007ad	          0x4889f5	                            mov rbp, rsi	       668	linker.c	FUNCTION_7
0x40007b0	      0x48837e2000	               cmp qword [rsi + 0x20], 0	       669	linker.c	FUNCTION_7	CALL_1
0x40007b5	            0x740f	                            je 0x40007c6	       669	linker.c	FUNCTION_7	CALL_1
0x40007b7	      0xbe9d020000	                          mov esi, 0x29d	       669	linker.c	FUNCTION_7	CALL_1
0x40007bc	      0xbf00000000	                              mov edi, 0	       669	linker.c	FUNCTION_7	CALL_1
0x40007c1	      0xe800000000	                          call 0x40007c6	       669	linker.c	FUNCTION_7	CALL_1
0x40007c6	        0x488b4330	            mov rax, qword [rbx + 0x30] 	       670	linker.c	FUNCTION_7	IF_1
0x40007ca	          0x4885c0	                           test rax, rax	       670	linker.c	FUNCTION_7	IF_1
0x40007cd	            0x7404	                            je 0x40007d3	       670	linker.c	FUNCTION_7	IF_1
0x40007cf	        0x48896820	             mov qword [rax + 0x20], rbp	       671	linker.c	FUNCTION_7	IF_1
0x40007d3	      0x48837b2800	               cmp qword [rbx + 0x28], 0	       672	linker.c	FUNCTION_7	IF_2
0x40007d8	            0x7504	                           jne 0x40007de	       672	linker.c	FUNCTION_7	IF_2
0x40007da	        0x48896b28	             mov qword [rbx + 0x28], rbp	       673	linker.c	FUNCTION_7	IF_2
0x40007de	        0x48896b30	             mov qword [rbx + 0x30], rbp	       674	linker.c	FUNCTION_7
0x40007e2	        0x4883c408	                              add rsp, 8	       675	linker.c	FUNCTION_7
0x40007e6	              0x5b	                                 pop rbx	       675	linker.c	FUNCTION_7
0x40007e7	              0x5d	                                 pop rbp	       675	linker.c	FUNCTION_7
0x40007e8	              0xc3	                                     ret	       675	linker.c	FUNCTION_7
_bfd_generic_section_already_linked	IF,4:ELSE,0:SWITCH,0:functions,0:CALL,6:WHILE,0:FOR,0:DO,0	43
0x4002be5	              0x55	                                push rbp	      2907	linker.c	FUNCTION_41
0x4002be6	              0x53	                                push rbx	      2907	linker.c	FUNCTION_41
0x4002be7	        0x4883ec08	                              sub rsp, 8	      2907	linker.c	FUNCTION_41
0x4002beb	          0x8b4620	            mov eax, dword [rsi + 0x20] 	      2912	linker.c	FUNCTION_41	IF_1
0x4002bee	      0xbb00000000	                              mov ebx, 0	      2913	linker.c	FUNCTION_41	IF_1
0x4002bf3	      0xa900000200	                       test eax, 0x20000	      2912	linker.c	FUNCTION_41	IF_1
0x4002bf8	            0x746b	                            je 0x4002c65	      2912	linker.c	FUNCTION_41	IF_1
0x4002bfa	      0xa900000002	                     test eax, 0x2000000	      2916	linker.c	FUNCTION_41	IF_2
0x4002bff	            0x7564	                           jne 0x4002c65	      2916	linker.c	FUNCTION_41	IF_2
0x4002c01	          0x4889d5	                            mov rbp, rdx	      2916	linker.c	FUNCTION_41	IF_2
0x4002c04	          0x4889f3	                            mov rbx, rsi	      2916	linker.c	FUNCTION_41	IF_2
0x4002c07	          0x488b3e	                    mov rdi, qword [rsi]	      2934	linker.c	FUNCTION_41	CALL_2
0x4002c0a	      0xe800000000	                          call 0x4002c0f	      2934	linker.c	FUNCTION_41	CALL_2
0x4002c0f	        0x488b7018	            mov rsi, qword [rax + 0x18] 	      2936	linker.c	FUNCTION_41
0x4002c13	          0x4885f6	                           test rsi, rsi	      2937	linker.c	FUNCTION_41	IF_3
0x4002c16	            0x740f	                            je 0x4002c27	      2937	linker.c	FUNCTION_41	IF_3
0x4002c18	          0x4889ea	                            mov rdx, rbp	      2941	linker.c	FUNCTION_41	IF_3	CALL_3
0x4002c1b	          0x4889df	                            mov rdi, rbx	      2941	linker.c	FUNCTION_41	IF_3	CALL_3
0x4002c1e	      0xe800000000	                          call 0x4002c23	      2941	linker.c	FUNCTION_41	IF_3	CALL_3
0x4002c23	            0x89c3	                            mov ebx, eax	      2941	linker.c	FUNCTION_41	IF_3	CALL_3
0x4002c25	            0xeb3e	                           jmp 0x4002c65	      2941	linker.c	FUNCTION_41	IF_3	CALL_3
0x4002c27	          0x4889de	                            mov rsi, rbx	      2945	linker.c	FUNCTION_41	IF_4	CALL_4
0x4002c2a	          0x4889c7	                            mov rdi, rax	      2945	linker.c	FUNCTION_41	IF_4	CALL_4
0x4002c2d	      0xe800000000	                          call 0x4002c32	      2945	linker.c	FUNCTION_41	IF_4	CALL_4
0x4002c32	            0x89c3	                            mov ebx, eax	      2945	linker.c	FUNCTION_41	IF_4	CALL_4
0x4002c34	            0x85c0	                           test eax, eax	      2945	linker.c	FUNCTION_41	IF_4	CALL_4
0x4002c36	            0x7528	                           jne 0x4002c60	      2945	linker.c	FUNCTION_41	IF_4	CALL_4
0x4002c38	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      2946	linker.c	FUNCTION_41	CALL_6
0x4002c3c	        0x488b6858	            mov rbp, qword [rax + 0x58] 	      2946	linker.c	FUNCTION_41	CALL_6
0x4002c40	      0xba05000000	                              mov edx, 5	      2946	linker.c	FUNCTION_41	CALL_6
0x4002c45	      0xbe00000000	                              mov esi, 0	      2946	linker.c	FUNCTION_41	CALL_6
0x4002c4a	      0xbf00000000	                              mov edi, 0	      2946	linker.c	FUNCTION_41	CALL_6
0x4002c4f	      0xe800000000	                          call 0x4002c54	      2946	linker.c	FUNCTION_41	CALL_6
0x4002c54	          0x4889c7	                            mov rdi, rax	      2946	linker.c	FUNCTION_41	CALL_6
0x4002c57	      0xb800000000	                              mov eax, 0	      2946	linker.c	FUNCTION_41	CALL_6
0x4002c5c	            0xffd5	                                call rbp	      2946	linker.c	FUNCTION_41	CALL_6
0x4002c5e	            0xeb05	                           jmp 0x4002c65	      2946	linker.c	FUNCTION_41	CALL_6
0x4002c60	      0xbb00000000	                              mov ebx, 0	      2947	linker.c	FUNCTION_41
0x4002c65	            0x89d8	                            mov eax, ebx	      2948	linker.c	FUNCTION_41
0x4002c67	        0x4883c408	                              add rsp, 8	      2948	linker.c	FUNCTION_41
0x4002c6b	              0x5b	                                 pop rbx	      2948	linker.c	FUNCTION_41
0x4002c6c	              0x5d	                                 pop rbp	      2948	linker.c	FUNCTION_41
0x4002c6d	              0xc3	                                     ret	      2948	linker.c	FUNCTION_41
bfd_section_already_linked_table_insert	IF,1:ELSE,0:SWITCH,0:functions,0:CALL,1:WHILE,0:FOR,0:DO,0	21
0x4002883	              0x55	                                push rbp	      2762	linker.c	FUNCTION_36
0x4002884	              0x53	                                push rbx	      2762	linker.c	FUNCTION_36
0x4002885	        0x4883ec08	                              sub rsp, 8	      2762	linker.c	FUNCTION_36
0x4002889	          0x4889fb	                            mov rbx, rdi	      2762	linker.c	FUNCTION_36
0x400288c	          0x4889f5	                            mov rbp, rsi	      2762	linker.c	FUNCTION_36
0x400288f	      0xbe10000000	                           mov esi, 0x10	      2767	linker.c	FUNCTION_36
0x4002894	      0xbf00000000	                              mov edi, 0	      2767	linker.c	FUNCTION_36
0x4002899	      0xe800000000	                          call 0x400289e	      2767	linker.c	FUNCTION_36
0x400289e	          0x4885c0	                           test rax, rax	      2769	linker.c	FUNCTION_36	IF_1
0x40028a1	            0x7416	                            je 0x40028b9	      2769	linker.c	FUNCTION_36	IF_1
0x40028a3	        0x48896808	                mov qword [rax + 8], rbp	      2771	linker.c	FUNCTION_36
0x40028a7	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      2772	linker.c	FUNCTION_36
0x40028ab	          0x488910	                    mov qword [rax], rdx	      2772	linker.c	FUNCTION_36
0x40028ae	        0x48894318	             mov qword [rbx + 0x18], rax	      2773	linker.c	FUNCTION_36
0x40028b2	      0xb801000000	                              mov eax, 1	      2774	linker.c	FUNCTION_36
0x40028b7	            0xeb05	                           jmp 0x40028be	      2774	linker.c	FUNCTION_36
0x40028b9	      0xb800000000	                              mov eax, 0	      2770	linker.c	FUNCTION_36	IF_1
0x40028be	        0x4883c408	                              add rsp, 8	      2775	linker.c	FUNCTION_36
0x40028c2	              0x5b	                                 pop rbx	      2775	linker.c	FUNCTION_36
0x40028c3	              0x5d	                                 pop rbp	      2775	linker.c	FUNCTION_36
0x40028c4	              0xc3	                                     ret	      2775	linker.c	FUNCTION_36
bfd_wrapped_link_hash_lookup	IF,6:ELSE,0:SWITCH,0:functions,0:CALL,16:WHILE,0:FOR,0:DO,0	127
0x40004a3	            0x4157	                                push r15	       525	linker.c	FUNCTION_4
0x40004a5	            0x4156	                                push r14	       525	linker.c	FUNCTION_4
0x40004a7	            0x4155	                                push r13	       525	linker.c	FUNCTION_4
0x40004a9	            0x4154	                                push r12	       525	linker.c	FUNCTION_4
0x40004ab	              0x55	                                push rbp	       525	linker.c	FUNCTION_4
0x40004ac	              0x53	                                push rbx	       525	linker.c	FUNCTION_4
0x40004ad	        0x4883ec18	                           sub rsp, 0x18	       525	linker.c	FUNCTION_4
0x40004b1	          0x4889f3	                            mov rbx, rsi	       525	linker.c	FUNCTION_4
0x40004b4	          0x4989d5	                            mov r13, rdx	       525	linker.c	FUNCTION_4
0x40004b7	          0x4189cf	                           mov r15d, ecx	       525	linker.c	FUNCTION_4
0x40004ba	      0x448944240c	              mov dword [rsp + 0xc], r8d	       525	linker.c	FUNCTION_4
0x40004bf	          0x4589ce	                           mov r14d, r9d	       525	linker.c	FUNCTION_4
0x40004c2	        0x488b4640	            mov rax, qword [rsi + 0x40] 	       528	linker.c	FUNCTION_4	IF_1
0x40004c6	          0x4885c0	                           test rax, rax	       528	linker.c	FUNCTION_4	IF_1
0x40004c9	     0xf8467010000	                            je 0x4000636	       528	linker.c	FUNCTION_4	IF_1
0x40004cf	           0xfb62a	                   movzx ebp, byte [rdx]	       534	linker.c	FUNCTION_4	IF_1	IF_2	CALL_1
0x40004d2	        0x488b5708	                mov rdx, qword [rdi + 8]	       534	linker.c	FUNCTION_4	IF_1	IF_2	CALL_1
0x40004d6	        0x403a6a1c	              cmp bpl, byte [rdx + 0x1c]	       534	linker.c	FUNCTION_4	IF_1	IF_2	CALL_1
0x40004da	            0x7406	                            je 0x40004e2	       534	linker.c	FUNCTION_4	IF_1	IF_2	CALL_1
0x40004dc	        0x403a6e09	                 cmp bpl, byte [rsi + 9]	       534	linker.c	FUNCTION_4	IF_1	IF_2	CALL_1
0x40004e0	            0x7506	                           jne 0x40004e8	       534	linker.c	FUNCTION_4	IF_1	IF_2	CALL_1
0x40004e2	        0x4d8d6501	                      lea r12, [r13 + 1]	       537	linker.c	FUNCTION_4	IF_1	IF_2
0x40004e6	            0xeb08	                           jmp 0x40004f0	       537	linker.c	FUNCTION_4	IF_1	IF_2
0x40004e8	          0x4d89ec	                            mov r12, r13	       533	linker.c	FUNCTION_4	IF_1
0x40004eb	      0xbd00000000	                              mov ebp, 0	       531	linker.c	FUNCTION_4	IF_1
0x40004f0	      0xb900000000	                              mov ecx, 0	       543	linker.c	FUNCTION_4	IF_1	IF_3	CALL_2
0x40004f5	      0xba00000000	                              mov edx, 0	       543	linker.c	FUNCTION_4	IF_1	IF_3	CALL_2
0x40004fa	          0x4c89e6	                            mov rsi, r12	       543	linker.c	FUNCTION_4	IF_1	IF_3	CALL_2
0x40004fd	          0x4889c7	                            mov rdi, rax	       543	linker.c	FUNCTION_4	IF_1	IF_3	CALL_2
0x4000500	      0xe800000000	                          call 0x4000505	       543	linker.c	FUNCTION_4	IF_1	IF_3	CALL_2
0x4000505	          0x4885c0	                           test rax, rax	       543	linker.c	FUNCTION_4	IF_1	IF_3	CALL_2
0x4000508	     0xf8488000000	                            je 0x4000596	       543	linker.c	FUNCTION_4	IF_1	IF_3	CALL_2
0x400050e	      0xb800000000	                              mov eax, 0	       551	linker.c	FUNCTION_4	IF_1	IF_3	CALL_3
0x4000513	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       551	linker.c	FUNCTION_4	IF_1	IF_3	CALL_3
0x400051a	          0x4c89e7	                            mov rdi, r12	       551	linker.c	FUNCTION_4	IF_1	IF_3	CALL_3
0x400051d	            0xf2ae	              repne scasb al, byte [rdi]	       551	linker.c	FUNCTION_4	IF_1	IF_3	CALL_3
0x400051f	          0x48f7d1	                                 not rcx	       551	linker.c	FUNCTION_4	IF_1	IF_3	CALL_3
0x4000522	        0x488d7908	                      lea rdi, [rcx + 8]	       552	linker.c	FUNCTION_4	IF_1	IF_3	CALL_4
0x4000526	      0xe800000000	                          call 0x400052b	       552	linker.c	FUNCTION_4	IF_1	IF_3	CALL_4
0x400052b	          0x4989c5	                            mov r13, rax	       552	linker.c	FUNCTION_4	IF_1	IF_3	CALL_4
0x400052e	          0x4885c0	                           test rax, rax	       553	linker.c	FUNCTION_4	IF_1	IF_3	IF_4
0x4000531	     0xf8417010000	                            je 0x400064e	       553	linker.c	FUNCTION_4	IF_1	IF_3	IF_4
0x4000537	          0x408828	                     mov byte [rax], bpl	       556	linker.c	FUNCTION_4	IF_1	IF_3
0x400053a	        0xc6400100	                   mov byte [rax + 1], 0	       557	linker.c	FUNCTION_4	IF_1	IF_3
0x400053e	      0xb800000000	                              mov eax, 0	       148	string3.h	FUNCTION_76	CALL_3
0x4000543	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       148	string3.h	FUNCTION_76	CALL_3
0x400054a	          0x4c89ef	                            mov rdi, r13	       148	string3.h	FUNCTION_76	CALL_3
0x400054d	            0xf2ae	              repne scasb al, byte [rdi]	       148	string3.h	FUNCTION_76	CALL_3
0x400054f	          0x48f7d1	                                 not rcx	       148	string3.h	FUNCTION_76	CALL_3
0x4000552	    0x48b85f5f7772	            movabs rax, 0x5f706172775f5f	       148	string3.h	FUNCTION_76	CALL_3
0x400055c	      0x4989440dff	          mov qword [r13 + rcx - 1], rax	       148	string3.h	FUNCTION_76	CALL_3
0x4000561	          0x4c89e6	                            mov rsi, r12	       148	string3.h	FUNCTION_76	CALL_3
0x4000564	          0x4c89ef	                            mov rdi, r13	       148	string3.h	FUNCTION_76	CALL_3
0x4000567	      0xe800000000	                          call 0x400056c	       148	string3.h	FUNCTION_76	CALL_3
0x400056c	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	       560	linker.c	FUNCTION_4	IF_1	IF_3	CALL_7
0x4000570	          0x4589f0	                           mov r8d, r14d	       560	linker.c	FUNCTION_4	IF_1	IF_3	CALL_7
0x4000573	      0xb901000000	                              mov ecx, 1	       560	linker.c	FUNCTION_4	IF_1	IF_3	CALL_7
0x4000578	          0x4489fa	                           mov edx, r15d	       560	linker.c	FUNCTION_4	IF_1	IF_3	CALL_7
0x400057b	          0x4c89ee	                            mov rsi, r13	       560	linker.c	FUNCTION_4	IF_1	IF_3	CALL_7
0x400057e	      0xe800000000	                          call 0x4000583	       560	linker.c	FUNCTION_4	IF_1	IF_3	CALL_7
0x4000583	          0x4889c3	                            mov rbx, rax	       560	linker.c	FUNCTION_4	IF_1	IF_3	CALL_7
0x4000586	          0x4c89ef	                            mov rdi, r13	       561	linker.c	FUNCTION_4	IF_1	IF_3	CALL_8
0x4000589	      0xe800000000	                          call 0x400058e	       561	linker.c	FUNCTION_4	IF_1	IF_3	CALL_8
0x400058e	          0x4889d8	                            mov rax, rbx	       562	linker.c	FUNCTION_4	IF_1	IF_3
0x4000591	      0xe9c4000000	                           jmp 0x400065a	       562	linker.c	FUNCTION_4	IF_1	IF_3
0x4000596	      0x41803c245f	                    cmp byte [r12], 0x5f	       568	linker.c	FUNCTION_4	IF_1	IF_5
0x400059b	     0xf8595000000	                           jne 0x4000636	       568	linker.c	FUNCTION_4	IF_1	IF_5
0x40005a1	      0xbf00000000	                              mov edi, 0	       569	linker.c	FUNCTION_4	IF_1	IF_5	CALL_9
0x40005a6	      0xb907000000	                              mov ecx, 7	       569	linker.c	FUNCTION_4	IF_1	IF_5	CALL_9
0x40005ab	          0x4c89e6	                            mov rsi, r12	       569	linker.c	FUNCTION_4	IF_1	IF_5	CALL_9
0x40005ae	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       569	linker.c	FUNCTION_4	IF_1	IF_5	CALL_9
0x40005b0	           0xf97c2	                                 seta dl	       569	linker.c	FUNCTION_4	IF_1	IF_5	CALL_9
0x40005b3	           0xf92c0	                                 setb al	       569	linker.c	FUNCTION_4	IF_1	IF_5	CALL_9
0x40005b6	            0x38c2	                              cmp dl, al	       569	linker.c	FUNCTION_4	IF_1	IF_5	CALL_9
0x40005b8	            0x757c	                           jne 0x4000636	       569	linker.c	FUNCTION_4	IF_1	IF_5	CALL_9
0x40005ba	        0x4983c407	                              add r12, 7	       570	linker.c	FUNCTION_4	IF_1	IF_5	CALL_10
0x40005be	        0x488b7b40	            mov rdi, qword [rbx + 0x40] 	       570	linker.c	FUNCTION_4	IF_1	IF_5	CALL_10
0x40005c2	      0xb900000000	                              mov ecx, 0	       570	linker.c	FUNCTION_4	IF_1	IF_5	CALL_10
0x40005c7	      0xba00000000	                              mov edx, 0	       570	linker.c	FUNCTION_4	IF_1	IF_5	CALL_10
0x40005cc	          0x4c89e6	                            mov rsi, r12	       570	linker.c	FUNCTION_4	IF_1	IF_5	CALL_10
0x40005cf	      0xe800000000	                          call 0x40005d4	       570	linker.c	FUNCTION_4	IF_1	IF_5	CALL_10
0x40005d4	          0x4885c0	                           test rax, rax	       570	linker.c	FUNCTION_4	IF_1	IF_5	CALL_10
0x40005d7	            0x745d	                            je 0x4000636	       570	linker.c	FUNCTION_4	IF_1	IF_5	CALL_10
0x40005d9	      0xb800000000	                              mov eax, 0	       580	linker.c	FUNCTION_4	IF_1	IF_5	CALL_11
0x40005de	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       580	linker.c	FUNCTION_4	IF_1	IF_5	CALL_11
0x40005e5	          0x4c89e7	                            mov rdi, r12	       580	linker.c	FUNCTION_4	IF_1	IF_5	CALL_11
0x40005e8	            0xf2ae	              repne scasb al, byte [rdi]	       580	linker.c	FUNCTION_4	IF_1	IF_5	CALL_11
0x40005ea	          0x48f7d9	                                 neg rcx	       581	linker.c	FUNCTION_4	IF_1	IF_5	CALL_12
0x40005ed	          0x4889cf	                            mov rdi, rcx	       581	linker.c	FUNCTION_4	IF_1	IF_5	CALL_12
0x40005f0	      0xe800000000	                          call 0x40005f5	       581	linker.c	FUNCTION_4	IF_1	IF_5	CALL_12
0x40005f5	          0x4989c5	                            mov r13, rax	       581	linker.c	FUNCTION_4	IF_1	IF_5	CALL_12
0x40005f8	          0x4885c0	                           test rax, rax	       582	linker.c	FUNCTION_4	IF_1	IF_5	IF_6
0x40005fb	            0x7458	                            je 0x4000655	       582	linker.c	FUNCTION_4	IF_1	IF_5	IF_6
0x40005fd	          0x408828	                     mov byte [rax], bpl	       585	linker.c	FUNCTION_4	IF_1	IF_5
0x4000600	        0xc6400100	                   mov byte [rax + 1], 0	       586	linker.c	FUNCTION_4	IF_1	IF_5
0x4000604	          0x4c89e6	                            mov rsi, r12	       148	string3.h	FUNCTION_76	CALL_3
0x4000607	          0x4889c7	                            mov rdi, rax	       148	string3.h	FUNCTION_76	CALL_3
0x400060a	      0xe800000000	                          call 0x400060f	       148	string3.h	FUNCTION_76	CALL_3
0x400060f	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	       588	linker.c	FUNCTION_4	IF_1	IF_5	CALL_14
0x4000613	          0x4589f0	                           mov r8d, r14d	       588	linker.c	FUNCTION_4	IF_1	IF_5	CALL_14
0x4000616	      0xb901000000	                              mov ecx, 1	       588	linker.c	FUNCTION_4	IF_1	IF_5	CALL_14
0x400061b	          0x4489fa	                           mov edx, r15d	       588	linker.c	FUNCTION_4	IF_1	IF_5	CALL_14
0x400061e	          0x4c89ee	                            mov rsi, r13	       588	linker.c	FUNCTION_4	IF_1	IF_5	CALL_14
0x4000621	      0xe800000000	                          call 0x4000626	       588	linker.c	FUNCTION_4	IF_1	IF_5	CALL_14
0x4000626	          0x4889c3	                            mov rbx, rax	       588	linker.c	FUNCTION_4	IF_1	IF_5	CALL_14
0x4000629	          0x4c89ef	                            mov rdi, r13	       589	linker.c	FUNCTION_4	IF_1	IF_5	CALL_15
0x400062c	      0xe800000000	                          call 0x4000631	       589	linker.c	FUNCTION_4	IF_1	IF_5	CALL_15
0x4000631	          0x4889d8	                            mov rax, rbx	       590	linker.c	FUNCTION_4	IF_1	IF_5
0x4000634	            0xeb24	                           jmp 0x400065a	       590	linker.c	FUNCTION_4	IF_1	IF_5
0x4000636	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	       596	linker.c	FUNCTION_4	CALL_16
0x400063a	          0x4589f0	                           mov r8d, r14d	       596	linker.c	FUNCTION_4	CALL_16
0x400063d	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	       596	linker.c	FUNCTION_4	CALL_16
0x4000641	          0x4489fa	                           mov edx, r15d	       596	linker.c	FUNCTION_4	CALL_16
0x4000644	          0x4c89ee	                            mov rsi, r13	       596	linker.c	FUNCTION_4	CALL_16
0x4000647	      0xe800000000	                          call 0x400064c	       596	linker.c	FUNCTION_4	CALL_16
0x400064c	            0xeb0c	                           jmp 0x400065a	       596	linker.c	FUNCTION_4	CALL_16
0x400064e	      0xb800000000	                              mov eax, 0	       554	linker.c	FUNCTION_4	IF_1	IF_3	IF_4
0x4000653	            0xeb05	                           jmp 0x400065a	       554	linker.c	FUNCTION_4	IF_1	IF_3	IF_4
0x4000655	      0xb800000000	                              mov eax, 0	       583	linker.c	FUNCTION_4	IF_1	IF_5	IF_6
0x400065a	        0x4883c418	                           add rsp, 0x18	       597	linker.c	FUNCTION_4
0x400065e	              0x5b	                                 pop rbx	       597	linker.c	FUNCTION_4
0x400065f	              0x5d	                                 pop rbp	       597	linker.c	FUNCTION_4
0x4000660	            0x415c	                                 pop r12	       597	linker.c	FUNCTION_4
0x4000662	            0x415d	                                 pop r13	       597	linker.c	FUNCTION_4
0x4000664	            0x415e	                                 pop r14	       597	linker.c	FUNCTION_4
0x4000666	            0x415f	                                 pop r15	       597	linker.c	FUNCTION_4
0x4000668	              0xc3	                                     ret	       597	linker.c	FUNCTION_4
_bfd_generic_link_split_section	IF,0:ELSE,0:SWITCH,0:functions,0:CALL,0:WHILE,0:FOR,0:DO,0	2
0x4002844	      0xb800000000	                              mov eax, 0	      2702	linker.c	FUNCTION_33
0x4002849	              0xc3	                                     ret	      2702	linker.c	FUNCTION_33
_bfd_nolink_bfd_relax_section	IF,0:ELSE,0:SWITCH,0:functions,0:CALL,1:WHILE,0:FOR,0:DO,0	4
0x40031cd	        0x4883ec08	                              sub rsp, 8	      3418	linker.c	FUNCTION_54
0x40031d1	      0xe800000000	                          call 0x40031d6	      3419	linker.c	FUNCTION_54	CALL_1
0x40031d6	        0x4883c408	                              add rsp, 8	      3420	linker.c	FUNCTION_54
0x40031da	              0xc3	                                     ret	      3420	linker.c	FUNCTION_54
