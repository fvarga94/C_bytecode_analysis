x86_insert_aligned_watchpoint	ELSE,0:SWITCH,0:IF,2:DO,0:CALL,0:functions,2:FOR,0:WHILE,0	83
0x4000040	    0x48833d000000	               cmp qword [0x04000048], 0	       275	x86-dregs.c	ELSE_3	FUNCTION_3
0x4000048	     0xf841c010000	                            je 0x400016a	       275	x86-dregs.c	ELSE_3	FUNCTION_3
0x400004e	    0x48833d000000	               cmp qword [0x04000056], 0	       275	x86-dregs.c	ELSE_3	FUNCTION_3
0x4000056	     0xf840e010000	                            je 0x400016a	       275	x86-dregs.c	ELSE_3	FUNCTION_3
0x400005c	        0x448b4f24	            mov r9d, dword [rdi + 0x24] 	       275	x86-dregs.c	ELSE_3	FUNCTION_3
0x4000060	            0x4156	                                push r14	       272	x86-dregs.c	ELSE_3	FUNCTION_3
0x4000062	    0x41ba10000000	                          mov r10d, 0x10	       275	x86-dregs.c	ELSE_3	FUNCTION_3
0x4000068	              0x53	                                push rbx	       272	x86-dregs.c	ELSE_3	FUNCTION_3
0x4000069	            0x31c0	                            xor eax, eax	       275	x86-dregs.c	ELSE_3	FUNCTION_3
0x400006b	          0x4531c0	                            xor r8d, r8d	       275	x86-dregs.c	ELSE_3	FUNCTION_3
0x400006e	    0x41bb03000000	                             mov r11d, 3	       283	x86-dregs.c	ELSE_3	FUNCTION_3	FUNCTION_1	IF_1
0x4000074	          0x4589de	                          mov r14d, r11d	       283	x86-dregs.c	ELSE_3	FUNCTION_3	FUNCTION_1	IF_1
0x4000077	            0x89c1	                            mov ecx, eax	       283	x86-dregs.c	ELSE_3	FUNCTION_3	FUNCTION_1	IF_1
0x4000079	          0x4963d8	                         movsxd rbx, r8d	       283	x86-dregs.c	ELSE_3	FUNCTION_3	FUNCTION_1	IF_1
0x400007c	          0x41d3e6	                            shl r14d, cl	       283	x86-dregs.c	ELSE_3	FUNCTION_3	FUNCTION_1	IF_1
0x400007f	          0x4585ce	                          test r14d, r9d	       283	x86-dregs.c	ELSE_3	FUNCTION_3	FUNCTION_1	IF_1
0x4000082	            0x7406	                            je 0x400008a	       283	x86-dregs.c	ELSE_3	FUNCTION_3	FUNCTION_1	IF_1
0x4000084	        0x4a3934c7	            cmp qword [rdi + r8*8], rsi 	       284	x86-dregs.c	ELSE_3	FUNCTION_3	FUNCTION_1	IF_1
0x4000088	            0x7446	                            je 0x40000d0	       284	x86-dregs.c	ELSE_3	FUNCTION_3	FUNCTION_1	IF_1
0x400008a	          0x83c002	                              add eax, 2	       284	x86-dregs.c	ELSE_3	FUNCTION_3	FUNCTION_1	IF_1
0x400008d	        0x4983c001	                               add r8, 1	       284	x86-dregs.c	ELSE_3	FUNCTION_3	FUNCTION_1	IF_1
0x4000091	        0x4183c204	                             add r10d, 4	       284	x86-dregs.c	ELSE_3	FUNCTION_3	FUNCTION_1	IF_1
0x4000095	          0x83f808	                              cmp eax, 8	       281	x86-dregs.c	ELSE_3	FUNCTION_3	FUNCTION_1	IF_1
0x4000098	            0x75da	                           jne 0x4000074	       281	x86-dregs.c	ELSE_3	FUNCTION_3	FUNCTION_1	IF_1
0x400009a	        0x41f6c103	                             test r9b, 3	       295	x86-dregs.c	ELSE_3	FUNCTION_3	FUNCTION_2
0x400009e	            0x7450	                            je 0x40000f0	       295	x86-dregs.c	ELSE_3	FUNCTION_3	FUNCTION_2
0x40000a0	        0x41f6c10c	                           test r9b, 0xc	       295	x86-dregs.c	ELSE_3	FUNCTION_3	FUNCTION_2
0x40000a4	     0xf8496000000	                            je 0x4000140	       295	x86-dregs.c	ELSE_3	FUNCTION_3	FUNCTION_2
0x40000aa	        0x41f6c130	                          test r9b, 0x30	       295	x86-dregs.c	ELSE_3	FUNCTION_3	FUNCTION_2
0x40000ae	     0xf849c000000	                            je 0x4000150	       295	x86-dregs.c	ELSE_3	FUNCTION_3	FUNCTION_2
0x40000b4	        0x41f6c1c0	                          test r9b, 0xc0	       295	x86-dregs.c	ELSE_3	FUNCTION_3	FUNCTION_2
0x40000b8	      0xb8ffffffff	                     mov eax, 0xffffffff	       276	x86-dregs.c	ELSE_3	FUNCTION_3
0x40000bd	     0xf849a000000	                            je 0x400015d	       295	x86-dregs.c	ELSE_3	FUNCTION_3	FUNCTION_2
0x40000c3	              0x5b	                                 pop rbx	       321	x86-dregs.c	ELSE_3
0x40000c4	            0x415e	                                 pop r14	       321	x86-dregs.c	ELSE_3
0x40000c6	              0xc3	                                     ret	       321	x86-dregs.c	ELSE_3
0x40000c7	    0x660f1f840000	                    nop word [rax + rax]	       321	x86-dregs.c	ELSE_3
0x40000d0	          0x4489d1	                           mov ecx, r10d	       285	x86-dregs.c	ELSE_3	FUNCTION_3	FUNCTION_1	IF_1
0x40000d3	          0x4589ce	                           mov r14d, r9d	       285	x86-dregs.c	ELSE_3	FUNCTION_3	FUNCTION_1	IF_1
0x40000d6	          0x41d3ee	                            shr r14d, cl	       285	x86-dregs.c	ELSE_3	FUNCTION_3	FUNCTION_1	IF_1
0x40000d9	          0x4489f1	                           mov ecx, r14d	       285	x86-dregs.c	ELSE_3	FUNCTION_3	FUNCTION_1	IF_1
0x40000dc	          0x83e10f	                            and ecx, 0xf	       285	x86-dregs.c	ELSE_3	FUNCTION_3	FUNCTION_1	IF_1
0x40000df	            0x39d1	                            cmp ecx, edx	       285	x86-dregs.c	ELSE_3	FUNCTION_3	FUNCTION_1	IF_1
0x40000e1	            0x75a7	                           jne 0x400008a	       285	x86-dregs.c	ELSE_3	FUNCTION_3	FUNCTION_1	IF_1
0x40000e3	      0x83449f2801	       add dword [rdi + rbx*4 + 0x28], 1	       287	x86-dregs.c	ELSE_3	FUNCTION_3	FUNCTION_1	IF_1
0x40000e8	            0x31c0	                            xor eax, eax	       288	x86-dregs.c	ELSE_3	FUNCTION_3	FUNCTION_1
0x40000ea	            0xebd7	                           jmp 0x40000c3	       288	x86-dregs.c	ELSE_3	FUNCTION_3	FUNCTION_1
0x40000ec	         0xf1f4000	                         nop dword [rax]	       288	x86-dregs.c	ELSE_3	FUNCTION_3	FUNCTION_1
0x40000f0	            0x31c9	                            xor ecx, ecx	       295	x86-dregs.c	ELSE_3	FUNCTION_3	FUNCTION_2
0x40000f2	          0x4531c0	                            xor r8d, r8d	       295	x86-dregs.c	ELSE_3	FUNCTION_3	FUNCTION_2
0x40000f5	          0x4863c1	                         movsxd rax, ecx	       306	x86-dregs.c	ELSE_3	FUNCTION_3
0x40000f8	    0x8d0c8d100000	                 lea ecx, [rcx*4 + 0x10]	       308	x86-dregs.c	ELSE_3	FUNCTION_3
0x40000ff	        0x488934c7	            mov qword [rdi + rax*8], rsi	       306	x86-dregs.c	ELSE_3	FUNCTION_3
0x4000103	      0xbe0f000000	                            mov esi, 0xf	       318	x86-dregs.c	ELSE_3	FUNCTION_3
0x4000108	    0xc74487280100	       mov dword [rdi + rax*4 + 0x28], 1	       307	x86-dregs.c	ELSE_3	FUNCTION_3
0x4000110	            0xd3e6	                             shl esi, cl	       318	x86-dregs.c	ELSE_3	FUNCTION_3
0x4000112	            0xd3e2	                             shl edx, cl	       318	x86-dregs.c	ELSE_3	FUNCTION_3
0x4000114	      0xb801000000	                              mov eax, 1	       318	x86-dregs.c	ELSE_3	FUNCTION_3
0x4000119	          0x4489c1	                            mov ecx, r8d	       318	x86-dregs.c	ELSE_3	FUNCTION_3
0x400011c	            0xf7d6	                                 not esi	       318	x86-dregs.c	ELSE_3	FUNCTION_3
0x400011e	            0xd3e0	                             shl eax, cl	       318	x86-dregs.c	ELSE_3	FUNCTION_3
0x4000120	          0x4121f1	                            and r9d, esi	       318	x86-dregs.c	ELSE_3	FUNCTION_3
0x4000123	             0x9d0	                             or eax, edx	       318	x86-dregs.c	ELSE_3	FUNCTION_3
0x4000125	          0x4109c1	                             or r9d, eax	       318	x86-dregs.c	ELSE_3	FUNCTION_3
0x4000128	            0x31c0	                            xor eax, eax	       320	x86-dregs.c	ELSE_3
0x400012a	    0x4181e1ff03ff	                     and r9d, 0xffff03ff	       318	x86-dregs.c	ELSE_3	FUNCTION_3
0x4000131	    0x4181c9000100	                           or r9d, 0x100	       318	x86-dregs.c	ELSE_3	FUNCTION_3
0x4000138	              0x5b	                                 pop rbx	       321	x86-dregs.c	ELSE_3
0x4000139	        0x44894f24	             mov dword [rdi + 0x24], r9d	       318	x86-dregs.c	ELSE_3	FUNCTION_3
0x400013d	            0x415e	                                 pop r14	       321	x86-dregs.c	ELSE_3
0x400013f	              0xc3	                                     ret	       321	x86-dregs.c	ELSE_3
0x4000140	      0xb901000000	                              mov ecx, 1	       293	x86-dregs.c	ELSE_3	FUNCTION_3	FUNCTION_2	IF_1
0x4000145	    0x41b802000000	                              mov r8d, 2	       295	x86-dregs.c	ELSE_3	FUNCTION_3	FUNCTION_2
0x400014b	            0xeba8	                           jmp 0x40000f5	       295	x86-dregs.c	ELSE_3	FUNCTION_3	FUNCTION_2
0x400014d	           0xf1f00	                         nop dword [rax]	       295	x86-dregs.c	ELSE_3	FUNCTION_3	FUNCTION_2
0x4000150	      0xb902000000	                              mov ecx, 2	       293	x86-dregs.c	ELSE_3	FUNCTION_3	FUNCTION_2	IF_1
0x4000155	    0x41b804000000	                              mov r8d, 4	       295	x86-dregs.c	ELSE_3	FUNCTION_3	FUNCTION_2
0x400015b	            0xeb98	                           jmp 0x40000f5	       295	x86-dregs.c	ELSE_3	FUNCTION_3	FUNCTION_2
0x400015d	      0xb903000000	                              mov ecx, 3	       293	x86-dregs.c	ELSE_3	FUNCTION_3	FUNCTION_2	IF_1
0x4000162	    0x41b806000000	                              mov r8d, 6	       295	x86-dregs.c	ELSE_3	FUNCTION_3	FUNCTION_2
0x4000168	            0xeb8b	                           jmp 0x40000f5	       295	x86-dregs.c	ELSE_3	FUNCTION_3	FUNCTION_2
0x400016a	      0xb8ffffffff	                     mov eax, 0xffffffff	       276	x86-dregs.c	ELSE_3	FUNCTION_3
0x400016f	              0xc3	                                     ret	       276	x86-dregs.c	ELSE_3	FUNCTION_3
x86_remove_aligned_watchpoint	ELSE,0:SWITCH,0:IF,1:DO,0:CALL,1:functions,1:FOR,0:WHILE,0	75
0x4000170	            0x4157	                                push r15	       332	x86-dregs.c	ELSE_3	FUNCTION_4
0x4000172	            0x4156	                                push r14	       332	x86-dregs.c	ELSE_3	FUNCTION_4
0x4000174	          0x4531c9	                            xor r9d, r9d	       332	x86-dregs.c	ELSE_3	FUNCTION_4
0x4000177	            0x4155	                                push r13	       332	x86-dregs.c	ELSE_3	FUNCTION_4
0x4000179	            0x4154	                                push r12	       332	x86-dregs.c	ELSE_3	FUNCTION_4
0x400017b	    0x41bb10000000	                          mov r11d, 0x10	       332	x86-dregs.c	ELSE_3	FUNCTION_4
0x4000181	              0x55	                                push rbp	       332	x86-dregs.c	ELSE_3	FUNCTION_4
0x4000182	              0x53	                                push rbx	       332	x86-dregs.c	ELSE_3	FUNCTION_4
0x4000183	          0x4531c0	                            xor r8d, r8d	       332	x86-dregs.c	ELSE_3	FUNCTION_4
0x4000186	    0x41bc01000000	                             mov r12d, 1	       334	x86-dregs.c	ELSE_3	FUNCTION_4
0x400018c	      0xb8ffffffff	                     mov eax, 0xffffffff	       333	x86-dregs.c	ELSE_3	FUNCTION_4
0x4000191	      0xbd03000000	                              mov ebp, 3	       338	x86-dregs.c	ELSE_3	FUNCTION_4	FUNCTION_1	IF_1
0x4000196	        0x4883ec08	                              sub rsp, 8	       332	x86-dregs.c	ELSE_3	FUNCTION_4
0x400019a	    0x41be0f000000	                           mov r14d, 0xf	       351	x86-dregs.c	ELSE_3	FUNCTION_4	FUNCTION_1	IF_1
0x40001a0	          0x4531ed	                          xor r13d, r13d	       353	x86-dregs.c	ELSE_3	FUNCTION_4	FUNCTION_1
0x40001a3	        0x448b5724	           mov r10d, dword [rdi + 0x24] 	       338	x86-dregs.c	ELSE_3	FUNCTION_4	FUNCTION_1	IF_1
0x40001a7	            0x89eb	                            mov ebx, ebp	       338	x86-dregs.c	ELSE_3	FUNCTION_4	FUNCTION_1	IF_1
0x40001a9	          0x4489c1	                            mov ecx, r8d	       338	x86-dregs.c	ELSE_3	FUNCTION_4	FUNCTION_1	IF_1
0x40001ac	            0xd3e3	                             shl ebx, cl	       338	x86-dregs.c	ELSE_3	FUNCTION_4	FUNCTION_1	IF_1
0x40001ae	          0x4185da	                          test r10d, ebx	       338	x86-dregs.c	ELSE_3	FUNCTION_4	FUNCTION_1	IF_1
0x40001b1	            0x7409	                            je 0x40001bc	       338	x86-dregs.c	ELSE_3	FUNCTION_4	FUNCTION_1	IF_1
0x40001b3	        0x4a39344f	            cmp qword [rdi + r9*2], rsi 	       339	x86-dregs.c	ELSE_3	FUNCTION_4	FUNCTION_1	IF_1
0x40001b7	            0x743f	                            je 0x40001f8	       339	x86-dregs.c	ELSE_3	FUNCTION_4	FUNCTION_1	IF_1
0x40001b9	          0x4531e4	                          xor r12d, r12d	       357	x86-dregs.c	ELSE_3	FUNCTION_4
0x40001bc	        0x4183c002	                              add r8d, 2	       357	x86-dregs.c	ELSE_3	FUNCTION_4
0x40001c0	        0x4183c304	                             add r11d, 4	       357	x86-dregs.c	ELSE_3	FUNCTION_4
0x40001c4	        0x4983c104	                               add r9, 4	       357	x86-dregs.c	ELSE_3	FUNCTION_4
0x40001c8	        0x4183f808	                              cmp r8d, 8	       336	x86-dregs.c	ELSE_3	FUNCTION_4	FUNCTION_1	IF_1
0x40001cc	            0x75d5	                           jne 0x40001a3	       336	x86-dregs.c	ELSE_3	FUNCTION_4	FUNCTION_1	IF_1
0x40001ce	          0x4585e4	                         test r12d, r12d	       360	x86-dregs.c	ELSE_3	FUNCTION_4	IF_1
0x40001d1	            0x7410	                            je 0x40001e3	       360	x86-dregs.c	ELSE_3	FUNCTION_4	IF_1
0x40001d3	    0x4181e2fffeff	                    and r10d, 0xfffffeff	       367	x86-dregs.c	ELSE_3	FUNCTION_4	IF_1	CALL_1
0x40001da	          0x4585d2	                         test r10d, r10d	       369	x86-dregs.c	ELSE_3	FUNCTION_4
0x40001dd	        0x44895724	            mov dword [rdi + 0x24], r10d	       367	x86-dregs.c	ELSE_3	FUNCTION_4	IF_1	CALL_1
0x40001e1	            0x7564	                           jne 0x4000247	       369	x86-dregs.c	ELSE_3	FUNCTION_4
0x40001e3	        0x4883c408	                              add rsp, 8	       372	x86-dregs.c	ELSE_3
0x40001e7	              0x5b	                                 pop rbx	       372	x86-dregs.c	ELSE_3
0x40001e8	              0x5d	                                 pop rbp	       372	x86-dregs.c	ELSE_3
0x40001e9	            0x415c	                                 pop r12	       372	x86-dregs.c	ELSE_3
0x40001eb	            0x415d	                                 pop r13	       372	x86-dregs.c	ELSE_3
0x40001ed	            0x415e	                                 pop r14	       372	x86-dregs.c	ELSE_3
0x40001ef	            0x415f	                                 pop r15	       372	x86-dregs.c	ELSE_3
0x40001f1	              0xc3	                                     ret	       372	x86-dregs.c	ELSE_3
0x40001f2	    0x660f1f440000	                    nop word [rax + rax]	       372	x86-dregs.c	ELSE_3
0x40001f8	          0x4489d9	                           mov ecx, r11d	       340	x86-dregs.c	ELSE_3	FUNCTION_4	FUNCTION_1	IF_1	IF_2
0x40001fb	          0x4589d7	                          mov r15d, r10d	       340	x86-dregs.c	ELSE_3	FUNCTION_4	FUNCTION_1	IF_1	IF_2
0x40001fe	          0x41d3ef	                            shr r15d, cl	       340	x86-dregs.c	ELSE_3	FUNCTION_4	FUNCTION_1	IF_1	IF_2
0x4000201	          0x4489f9	                           mov ecx, r15d	       340	x86-dregs.c	ELSE_3	FUNCTION_4	FUNCTION_1	IF_1	IF_2
0x4000204	          0x83e10f	                            and ecx, 0xf	       340	x86-dregs.c	ELSE_3	FUNCTION_4	FUNCTION_1	IF_1	IF_2
0x4000207	            0x39d1	                            cmp ecx, edx	       340	x86-dregs.c	ELSE_3	FUNCTION_4	FUNCTION_1	IF_1	IF_2
0x4000209	            0x75ae	                           jne 0x40001b9	       340	x86-dregs.c	ELSE_3	FUNCTION_4	FUNCTION_1	IF_1	IF_2
0x400020b	    0x42836c0f2801	          sub dword [rdi + r9 + 0x28], 1	       342	x86-dregs.c	ELSE_3	FUNCTION_4	FUNCTION_1	IF_1	IF_2
0x4000211	            0x752d	                           jne 0x4000240	       342	x86-dregs.c	ELSE_3	FUNCTION_4	FUNCTION_1	IF_1	IF_2
0x4000213	          0x4489f0	                           mov eax, r14d	       351	x86-dregs.c	ELSE_3	FUNCTION_4	FUNCTION_1	IF_1
0x4000216	          0x4489d9	                           mov ecx, r11d	       351	x86-dregs.c	ELSE_3	FUNCTION_4	FUNCTION_1	IF_1
0x4000219	    0x4ac7044f0000	               mov qword [rdi + r9*2], 0	       345	x86-dregs.c	ELSE_3	FUNCTION_4	FUNCTION_1	IF_1	IF_2
0x4000221	            0xd3e0	                             shl eax, cl	       351	x86-dregs.c	ELSE_3	FUNCTION_4	FUNCTION_1	IF_1
0x4000223	             0x9d8	                             or eax, ebx	       351	x86-dregs.c	ELSE_3	FUNCTION_4	FUNCTION_1	IF_1
0x4000225	            0xf7d0	                                 not eax	       351	x86-dregs.c	ELSE_3	FUNCTION_4	FUNCTION_1	IF_1
0x4000227	          0x4121c2	                           and r10d, eax	       351	x86-dregs.c	ELSE_3	FUNCTION_4	FUNCTION_1	IF_1
0x400022a	            0x31c0	                            xor eax, eax	       353	x86-dregs.c	ELSE_3	FUNCTION_4	FUNCTION_1
0x400022c	          0x4485d3	                          test ebx, r10d	       353	x86-dregs.c	ELSE_3	FUNCTION_4	FUNCTION_1
0x400022f	        0x44895724	            mov dword [rdi + 0x24], r10d	       351	x86-dregs.c	ELSE_3	FUNCTION_4	FUNCTION_1	IF_1
0x4000233	        0x450f45e5	                       cmovne r12d, r13d	       353	x86-dregs.c	ELSE_3	FUNCTION_4	FUNCTION_1
0x4000237	            0xeb83	                           jmp 0x40001bc	       353	x86-dregs.c	ELSE_3	FUNCTION_4	FUNCTION_1
0x4000239	     0xf1f80000000	                         nop dword [rax]	       353	x86-dregs.c	ELSE_3	FUNCTION_4	FUNCTION_1
0x4000240	            0x31c0	                            xor eax, eax	       353	x86-dregs.c	ELSE_3	FUNCTION_4	FUNCTION_1
0x4000242	      0xe972ffffff	                           jmp 0x40001b9	       353	x86-dregs.c	ELSE_3	FUNCTION_4	FUNCTION_1
0x4000247	    0x41b800000000	                              mov r8d, 0	       369	x86-dregs.c	ELSE_3	FUNCTION_4
0x400024d	      0xb900000000	                              mov ecx, 0	       369	x86-dregs.c	ELSE_3	FUNCTION_4
0x4000252	      0xba00000000	                              mov edx, 0	       369	x86-dregs.c	ELSE_3	FUNCTION_4
0x4000257	      0xbe71010000	                          mov esi, 0x171	       369	x86-dregs.c	ELSE_3	FUNCTION_4
0x400025c	      0xbf00000000	                              mov edi, 0	       369	x86-dregs.c	ELSE_3	FUNCTION_4
0x4000261	            0x31c0	                            xor eax, eax	       369	x86-dregs.c	ELSE_3	FUNCTION_4
0x4000263	      0xe800000000	                          call 0x4000268	       369	x86-dregs.c	ELSE_3	FUNCTION_4
x86_update_inferior_debug_regs	ELSE,0:SWITCH,0:IF,1:DO,0:CALL,0:functions,1:FOR,0:WHILE,0	62
0x4000270	            0x4155	                                push r13	       448	x86-dregs.c	FUNCTION_6
0x4000272	            0x4154	                                push r12	       448	x86-dregs.c	FUNCTION_6
0x4000274	          0x4989fc	                            mov r12, rdi	       448	x86-dregs.c	FUNCTION_6
0x4000277	              0x55	                                push rbp	       448	x86-dregs.c	FUNCTION_6
0x4000278	              0x53	                                push rbx	       448	x86-dregs.c	FUNCTION_6
0x4000279	          0x4889f5	                            mov rbp, rsi	       448	x86-dregs.c	FUNCTION_6
0x400027c	            0x31db	                            xor ebx, ebx	       448	x86-dregs.c	FUNCTION_6
0x400027e	    0x41bd03000000	                             mov r13d, 3	       453	x86-dregs.c	FUNCTION_6	FUNCTION_1	CALL_1
0x4000284	        0x4883ec08	                              sub rsp, 8	       448	x86-dregs.c	FUNCTION_6
0x4000288	          0x8b7e24	            mov edi, dword [rsi + 0x24] 	       448	x86-dregs.c	FUNCTION_6
0x400028b	      0x418b542424	            mov edx, dword [r12 + 0x24] 	       448	x86-dregs.c	FUNCTION_6
0x4000290	          0x8d0c1b	                    lea ecx, [rbx + rbx]	       453	x86-dregs.c	FUNCTION_6	FUNCTION_1	CALL_1
0x4000293	          0x4489e8	                           mov eax, r13d	       453	x86-dregs.c	FUNCTION_6	FUNCTION_1	CALL_1
0x4000296	            0xd3e0	                             shl eax, cl	       453	x86-dregs.c	FUNCTION_6	FUNCTION_1	CALL_1
0x4000298	            0x85f8	                           test eax, edi	       453	x86-dregs.c	FUNCTION_6	FUNCTION_1	CALL_1
0x400029a	           0xf94c1	                                 sete cl	       453	x86-dregs.c	FUNCTION_6	FUNCTION_1	CALL_1
0x400029d	            0x85d0	                           test eax, edx	       453	x86-dregs.c	FUNCTION_6	FUNCTION_1	CALL_1
0x400029f	           0xf94c0	                                 sete al	       453	x86-dregs.c	FUNCTION_6	FUNCTION_1	CALL_1
0x40002a2	            0x38c1	                              cmp cl, al	       453	x86-dregs.c	FUNCTION_6	FUNCTION_1	CALL_1
0x40002a4	            0x747a	                            je 0x4000320	       453	x86-dregs.c	FUNCTION_6	FUNCTION_1	CALL_1
0x40002a6	            0x89df	                            mov edi, ebx	       454	x86-dregs.c	FUNCTION_6	FUNCTION_1
0x40002a8	      0x488b74dd00	            mov rsi, qword [rbp + rbx*8]	       454	x86-dregs.c	FUNCTION_6	FUNCTION_1
0x40002ad	    0xff1500000000	                 call qword [0x040002b3]	       454	x86-dregs.c	FUNCTION_6	FUNCTION_1
0x40002b3	          0x8b7d24	            mov edi, dword [rbp + 0x24] 	       454	x86-dregs.c	FUNCTION_6	FUNCTION_1
0x40002b6	      0x418b542424	            mov edx, dword [r12 + 0x24] 	       454	x86-dregs.c	FUNCTION_6	FUNCTION_1
0x40002bb	        0x4883c301	                              add rbx, 1	       454	x86-dregs.c	FUNCTION_6	FUNCTION_1
0x40002bf	        0x4883fb04	                              cmp rbx, 4	       451	x86-dregs.c	FUNCTION_6	FUNCTION_1	IF_1
0x40002c3	            0x75cb	                           jne 0x4000290	       451	x86-dregs.c	FUNCTION_6	FUNCTION_1	IF_1
0x40002c5	            0x39d7	                            cmp edi, edx	       459	x86-dregs.c	FUNCTION_6
0x40002c7	            0x7406	                            je 0x40002cf	       459	x86-dregs.c	FUNCTION_6
0x40002c9	    0xff1500000000	                 call qword [0x040002cf]	       460	x86-dregs.c	FUNCTION_6
0x40002cf	        0x488b4500	                    mov rax, qword [rbp]	       462	x86-dregs.c	
0x40002d3	        0x49890424	                    mov qword [r12], rax	       462	x86-dregs.c	
0x40002d7	        0x488b4508	                mov rax, qword [rbp + 8]	       462	x86-dregs.c	
0x40002db	      0x4989442408	                mov qword [r12 + 8], rax	       462	x86-dregs.c	
0x40002e0	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       462	x86-dregs.c	
0x40002e4	      0x4989442410	             mov qword [r12 + 0x10], rax	       462	x86-dregs.c	
0x40002e9	        0x488b4518	            mov rax, qword [rbp + 0x18] 	       462	x86-dregs.c	
0x40002ed	      0x4989442418	             mov qword [r12 + 0x18], rax	       462	x86-dregs.c	
0x40002f2	        0x488b4520	            mov rax, qword [rbp + 0x20] 	       462	x86-dregs.c	
0x40002f6	      0x4989442420	             mov qword [r12 + 0x20], rax	       462	x86-dregs.c	
0x40002fb	        0x488b4528	            mov rax, qword [rbp + 0x28] 	       462	x86-dregs.c	
0x40002ff	      0x4989442428	             mov qword [r12 + 0x28], rax	       462	x86-dregs.c	
0x4000304	        0x488b4530	            mov rax, qword [rbp + 0x30] 	       462	x86-dregs.c	
0x4000308	      0x4989442430	             mov qword [r12 + 0x30], rax	       462	x86-dregs.c	
0x400030d	        0x4883c408	                              add rsp, 8	       463	x86-dregs.c	
0x4000311	              0x5b	                                 pop rbx	       463	x86-dregs.c	
0x4000312	              0x5d	                                 pop rbp	       463	x86-dregs.c	
0x4000313	            0x415c	                                 pop r12	       463	x86-dregs.c	
0x4000315	            0x415d	                                 pop r13	       463	x86-dregs.c	
0x4000317	              0xc3	                                     ret	       463	x86-dregs.c	
0x4000318	     0xf1f84000000	                   nop dword [rax + rax]	       463	x86-dregs.c	
0x4000320	        0x498b04dc	            mov rax, qword [r12 + rbx*8]	       456	x86-dregs.c	FUNCTION_6	IF_1
0x4000324	      0x483944dd00	           cmp qword [rbp + rbx*8], rax 	       456	x86-dregs.c	FUNCTION_6	IF_1
0x4000329	            0x7490	                            je 0x40002bb	       456	x86-dregs.c	FUNCTION_6	IF_1
0x400032b	    0x41b800000000	                              mov r8d, 0	       456	x86-dregs.c	FUNCTION_6	IF_1
0x4000331	      0xb900000000	                              mov ecx, 0	       456	x86-dregs.c	FUNCTION_6	IF_1
0x4000336	      0xba00000000	                              mov edx, 0	       456	x86-dregs.c	FUNCTION_6	IF_1
0x400033b	      0xbec8010000	                          mov esi, 0x1c8	       456	x86-dregs.c	FUNCTION_6	IF_1
0x4000340	      0xbf00000000	                              mov edi, 0	       456	x86-dregs.c	FUNCTION_6	IF_1
0x4000345	            0x31c0	                            xor eax, eax	       456	x86-dregs.c	FUNCTION_6	IF_1
0x4000347	      0xe800000000	                          call 0x400034c	       456	x86-dregs.c	FUNCTION_6	IF_1
x86_show_dr	ELSE,0:SWITCH,0:IF,1:DO,0:CALL,8:functions,1:FOR,0:WHILE,0	77
0x4000350	            0x4156	                                push r14	       180	x86-dregs.c	ELSE_3	FUNCTION_1
0x4000352	            0x4155	                                push r13	       180	x86-dregs.c	ELSE_3	FUNCTION_1
0x4000354	            0x31c0	                            xor eax, eax	       183	x86-dregs.c	ELSE_3	FUNCTION_1	CALL_1
0x4000356	            0x4154	                                push r12	       180	x86-dregs.c	ELSE_3	FUNCTION_1
0x4000358	              0x55	                                push rbp	       180	x86-dregs.c	ELSE_3	FUNCTION_1
0x4000359	          0x4889fd	                            mov rbp, rdi	       180	x86-dregs.c	ELSE_3	FUNCTION_1
0x400035c	              0x53	                                push rbx	       180	x86-dregs.c	ELSE_3	FUNCTION_1
0x400035d	      0xbf00000000	                              mov edi, 0	       183	x86-dregs.c	ELSE_3	FUNCTION_1	CALL_1
0x4000362	          0x4889d3	                            mov rbx, rdx	       180	x86-dregs.c	ELSE_3	FUNCTION_1
0x4000365	          0x4189cc	                           mov r12d, ecx	       180	x86-dregs.c	ELSE_3	FUNCTION_1
0x4000368	          0x4589c5	                           mov r13d, r8d	       180	x86-dregs.c	ELSE_3	FUNCTION_1
0x400036b	      0xe800000000	                          call 0x4000370	       183	x86-dregs.c	ELSE_3	FUNCTION_1	CALL_1
0x4000370	          0x4885db	                           test rbx, rbx	       184	x86-dregs.c	ELSE_3	FUNCTION_1	IF_1
0x4000373	     0xf858f000000	                           jne 0x4000408	       184	x86-dregs.c	ELSE_3	FUNCTION_1	IF_1
0x4000379	          0x4585e4	                         test r12d, r12d	       184	x86-dregs.c	ELSE_3	FUNCTION_1	IF_1
0x400037c	     0xf8586000000	                           jne 0x4000408	       184	x86-dregs.c	ELSE_3	FUNCTION_1	IF_1
0x4000382	      0xbf00000000	                              mov edi, 0	       195	x86-dregs.c	ELSE_3	FUNCTION_1	CALL_4
0x4000387	            0x31c0	                            xor eax, eax	       195	x86-dregs.c	ELSE_3	FUNCTION_1	CALL_4
0x4000389	            0x31db	                            xor ebx, ebx	       198	x86-dregs.c	ELSE_3	FUNCTION_1	CALL_8
0x400038b	      0xe800000000	                          call 0x4000390	       195	x86-dregs.c	ELSE_3	FUNCTION_1	CALL_4
0x4000390	          0x8b7d24	            mov edi, dword [rbp + 0x24] 	       197	x86-dregs.c	ELSE_3	FUNCTION_1	CALL_6
0x4000393	      0xbe08000000	                              mov esi, 8	       197	x86-dregs.c	ELSE_3	FUNCTION_1	CALL_6
0x4000398	      0xe800000000	                          call 0x400039d	       197	x86-dregs.c	ELSE_3	FUNCTION_1	CALL_6
0x400039d	      0xbf00000000	                              mov edi, 0	       197	x86-dregs.c	ELSE_3	FUNCTION_1	CALL_6
0x40003a2	          0x4889c6	                            mov rsi, rax	       197	x86-dregs.c	ELSE_3	FUNCTION_1	CALL_6
0x40003a5	            0x31c0	                            xor eax, eax	       197	x86-dregs.c	ELSE_3	FUNCTION_1	CALL_6
0x40003a7	      0xe800000000	                          call 0x40003ac	       197	x86-dregs.c	ELSE_3	FUNCTION_1	CALL_6
0x40003ac	          0x8b7d20	            mov edi, dword [rbp + 0x20] 	       198	x86-dregs.c	ELSE_3	FUNCTION_1	CALL_8
0x40003af	      0xbe08000000	                              mov esi, 8	       198	x86-dregs.c	ELSE_3	FUNCTION_1	CALL_8
0x40003b4	      0xe800000000	                          call 0x40003b9	       198	x86-dregs.c	ELSE_3	FUNCTION_1	CALL_8
0x40003b9	      0xbf00000000	                              mov edi, 0	       198	x86-dregs.c	ELSE_3	FUNCTION_1	CALL_8
0x40003be	          0x4889c6	                            mov rsi, rax	       198	x86-dregs.c	ELSE_3	FUNCTION_1	CALL_8
0x40003c1	            0x31c0	                            xor eax, eax	       198	x86-dregs.c	ELSE_3	FUNCTION_1	CALL_8
0x40003c3	      0xe800000000	                          call 0x40003c8	       198	x86-dregs.c	ELSE_3	FUNCTION_1	CALL_8
0x40003c8	      0x448b649d28	   mov r12d, dword [rbp + rbx*4 + 0x28] 	       202	x86-dregs.c	ELSE_3	CALL_1
0x40003cd	      0x488b7cdd00	            mov rdi, qword [rbp + rbx*8]	       202	x86-dregs.c	ELSE_3	CALL_1
0x40003d2	    0x8b3500000000	            mov esi, dword [0x040003d8] 	       202	x86-dregs.c	ELSE_3	CALL_1
0x40003d8	      0xe800000000	                          call 0x40003dd	       202	x86-dregs.c	ELSE_3	CALL_1
0x40003dd	            0x89de	                            mov esi, ebx	       205	x86-dregs.c	ELSE_3
0x40003df	          0x4889c2	                            mov rdx, rax	       205	x86-dregs.c	ELSE_3
0x40003e2	          0x4489e1	                           mov ecx, r12d	       205	x86-dregs.c	ELSE_3
0x40003e5	            0x31c0	                            xor eax, eax	       205	x86-dregs.c	ELSE_3
0x40003e7	      0xbf00000000	                              mov edi, 0	       205	x86-dregs.c	ELSE_3
0x40003ec	        0x4883c301	                              add rbx, 1	       205	x86-dregs.c	ELSE_3
0x40003f0	      0xe800000000	                          call 0x40003f5	       205	x86-dregs.c	ELSE_3
0x40003f5	        0x4883fb04	                              cmp rbx, 4	       200	x86-dregs.c	ELSE_3	FUNCTION_1
0x40003f9	            0x75cd	                           jne 0x40003c8	       200	x86-dregs.c	ELSE_3	FUNCTION_1
0x40003fb	              0x5b	                                 pop rbx	       207	x86-dregs.c	ELSE_3	FUNCTION_1
0x40003fc	              0x5d	                                 pop rbp	       207	x86-dregs.c	ELSE_3	FUNCTION_1
0x40003fd	            0x415c	                                 pop r12	       207	x86-dregs.c	ELSE_3	FUNCTION_1
0x40003ff	            0x415d	                                 pop r13	       207	x86-dregs.c	ELSE_3	FUNCTION_1
0x4000401	            0x415e	                                 pop r14	       207	x86-dregs.c	ELSE_3	FUNCTION_1
0x4000403	              0xc3	                                     ret	       207	x86-dregs.c	ELSE_3	FUNCTION_1
0x4000404	         0xf1f4000	                         nop dword [rax]	       207	x86-dregs.c	ELSE_3	FUNCTION_1
0x4000408	          0x4585ed	                         test r13d, r13d	       185	x86-dregs.c	ELSE_3	FUNCTION_1	IF_1	CALL_2
0x400040b	    0x41be00000000	                             mov r14d, 0	       185	x86-dregs.c	ELSE_3	FUNCTION_1	IF_1	CALL_2
0x4000411	            0x742b	                            je 0x400043e	       185	x86-dregs.c	ELSE_3	FUNCTION_1	IF_1	CALL_2
0x4000413	        0x4183fd01	                             cmp r13d, 1	       185	x86-dregs.c	ELSE_3	FUNCTION_1	IF_1	CALL_2
0x4000417	    0x41be00000000	                             mov r14d, 0	       185	x86-dregs.c	ELSE_3	FUNCTION_1	IF_1	CALL_2
0x400041d	            0x741f	                            je 0x400043e	       185	x86-dregs.c	ELSE_3	FUNCTION_1	IF_1	CALL_2
0x400041f	        0x4183fd02	                             cmp r13d, 2	       185	x86-dregs.c	ELSE_3	FUNCTION_1	IF_1	CALL_2
0x4000423	    0x41be00000000	                             mov r14d, 0	       185	x86-dregs.c	ELSE_3	FUNCTION_1	IF_1	CALL_2
0x4000429	            0x7413	                            je 0x400043e	       185	x86-dregs.c	ELSE_3	FUNCTION_1	IF_1	CALL_2
0x400042b	        0x4183fd03	                             cmp r13d, 3	       185	x86-dregs.c	ELSE_3	FUNCTION_1	IF_1	CALL_2
0x400042f	    0x41be00000000	                             mov r14d, 0	       185	x86-dregs.c	ELSE_3	FUNCTION_1	IF_1	CALL_2
0x4000435	      0xb800000000	                              mov eax, 0	       185	x86-dregs.c	ELSE_3	FUNCTION_1	IF_1	CALL_2
0x400043a	        0x4c0f44f0	                          cmove r14, rax	       185	x86-dregs.c	ELSE_3	FUNCTION_1	IF_1	CALL_2
0x400043e	          0x4889df	                            mov rdi, rbx	       185	x86-dregs.c	ELSE_3	FUNCTION_1	IF_1	CALL_2
0x4000441	      0xbe08000000	                              mov esi, 8	       185	x86-dregs.c	ELSE_3	FUNCTION_1	IF_1	CALL_2
0x4000446	      0xe800000000	                          call 0x400044b	       185	x86-dregs.c	ELSE_3	FUNCTION_1	IF_1	CALL_2
0x400044b	          0x4c89f1	                            mov rcx, r14	       194	x86-dregs.c	ELSE_3	FUNCTION_1	IF_1
0x400044e	          0x4889c6	                            mov rsi, rax	       194	x86-dregs.c	ELSE_3	FUNCTION_1	IF_1
0x4000451	          0x4489e2	                           mov edx, r12d	       194	x86-dregs.c	ELSE_3	FUNCTION_1	IF_1
0x4000454	      0xbf00000000	                              mov edi, 0	       194	x86-dregs.c	ELSE_3	FUNCTION_1	IF_1
0x4000459	            0x31c0	                            xor eax, eax	       194	x86-dregs.c	ELSE_3	FUNCTION_1	IF_1
0x400045b	      0xe800000000	                          call 0x4000460	       194	x86-dregs.c	ELSE_3	FUNCTION_1	IF_1
0x4000460	      0xe91dffffff	                           jmp 0x4000382	       194	x86-dregs.c	ELSE_3	FUNCTION_1	IF_1
x86_dr_remove_watchpoint	ELSE,1:SWITCH,0:IF,3:DO,0:CALL,5:functions,0:FOR,0:WHILE,0	129
0x4000750	            0x4157	                                push r15	       515	x86-dregs.c	FUNCTION_8
0x4000752	            0x4156	                                push r14	       515	x86-dregs.c	FUNCTION_8
0x4000754	          0x4989ff	                            mov r15, rdi	       515	x86-dregs.c	FUNCTION_8
0x4000757	            0x4155	                                push r13	       515	x86-dregs.c	FUNCTION_8
0x4000759	            0x4154	                                push r12	       515	x86-dregs.c	FUNCTION_8
0x400075b	              0x55	                                push rbp	       515	x86-dregs.c	FUNCTION_8
0x400075c	              0x53	                                push rbx	       515	x86-dregs.c	FUNCTION_8
0x400075d	        0x4883ec68	                           sub rsp, 0x68	       515	x86-dregs.c	FUNCTION_8
0x4000761	    0x64488b042528	                mov rax, qword fs:[0x28]	       515	x86-dregs.c	FUNCTION_8
0x400076a	      0x4889442458	             mov qword [rsp + 0x58], rax	       515	x86-dregs.c	FUNCTION_8
0x400076f	            0x31c0	                            xor eax, eax	       515	x86-dregs.c	FUNCTION_8
0x4000771	          0x488b07	                    mov rax, qword [rdi]	       519	x86-dregs.c	FUNCTION_8	IF_1
0x4000774	        0x89742404	                mov dword [rsp + 4], esi	       515	x86-dregs.c	FUNCTION_8
0x4000778	      0x4889542418	             mov qword [rsp + 0x18], rdx	       515	x86-dregs.c	FUNCTION_8
0x400077d	        0x894c2414	             mov dword [rsp + 0x14], ecx	       515	x86-dregs.c	FUNCTION_8
0x4000781	      0x4889442420	             mov qword [rsp + 0x20], rax	       519	x86-dregs.c	FUNCTION_8	IF_1
0x4000786	        0x488b4708	                mov rax, qword [rdi + 8]	       519	x86-dregs.c	FUNCTION_8	IF_1
0x400078a	      0x4889442428	             mov qword [rsp + 0x28], rax	       519	x86-dregs.c	FUNCTION_8	IF_1
0x400078f	        0x488b4710	            mov rax, qword [rdi + 0x10] 	       519	x86-dregs.c	FUNCTION_8	IF_1
0x4000793	      0x4889442430	             mov qword [rsp + 0x30], rax	       519	x86-dregs.c	FUNCTION_8	IF_1
0x4000798	        0x488b4718	            mov rax, qword [rdi + 0x18] 	       519	x86-dregs.c	FUNCTION_8	IF_1
0x400079c	      0x4889442438	             mov qword [rsp + 0x38], rax	       519	x86-dregs.c	FUNCTION_8	IF_1
0x40007a1	        0x488b4720	            mov rax, qword [rdi + 0x20] 	       519	x86-dregs.c	FUNCTION_8	IF_1
0x40007a5	      0x4889442440	             mov qword [rsp + 0x40], rax	       519	x86-dregs.c	FUNCTION_8	IF_1
0x40007aa	        0x488b4728	            mov rax, qword [rdi + 0x28] 	       519	x86-dregs.c	FUNCTION_8	IF_1
0x40007ae	      0x4889442448	             mov qword [rsp + 0x48], rax	       519	x86-dregs.c	FUNCTION_8	IF_1
0x40007b3	        0x488b4730	            mov rax, qword [rdi + 0x30] 	       519	x86-dregs.c	FUNCTION_8	IF_1
0x40007b7	      0x4889442450	             mov qword [rsp + 0x50], rax	       519	x86-dregs.c	FUNCTION_8	IF_1
0x40007bc	            0x89c8	                            mov eax, ecx	       521	x86-dregs.c	FUNCTION_8	IF_1
0x40007be	          0x83e801	                              sub eax, 1	       521	x86-dregs.c	FUNCTION_8	IF_1
0x40007c1	          0x83f801	                              cmp eax, 1	       521	x86-dregs.c	FUNCTION_8	IF_1
0x40007c4	     0xf8606010000	                           jbe 0x40008d0	       521	x86-dregs.c	FUNCTION_8	IF_1
0x40007ca	          0x83f904	                              cmp ecx, 4	       521	x86-dregs.c	FUNCTION_8	IF_1
0x40007cd	     0xf84fd000000	                            je 0x40008d0	       521	x86-dregs.c	FUNCTION_8	IF_1
0x40007d3	    0x8b0500000000	            mov eax, dword [0x040007d9] 	       522	x86-dregs.c	FUNCTION_8	IF_1	CALL_1
0x40007d9	          0x83f808	                              cmp eax, 8	       522	x86-dregs.c	FUNCTION_8	IF_1	CALL_1
0x40007dc	            0x7509	                           jne 0x40007e7	       522	x86-dregs.c	FUNCTION_8	IF_1	CALL_1
0x40007de	          0x83f908	                              cmp ecx, 8	       522	x86-dregs.c	FUNCTION_8	IF_1	CALL_1
0x40007e1	     0xf84e9000000	                            je 0x40008d0	       522	x86-dregs.c	FUNCTION_8	IF_1	CALL_1
0x40007e7	        0x8b4c2414	            mov ecx, dword [rsp + 0x14] 	       401	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1
0x40007eb	          0x4531e4	                          xor r12d, r12d	       387	x86-dregs.c	ELSE_3	FUNCTION_5
0x40007ee	          0x83f808	                              cmp eax, 8	       387	x86-dregs.c	ELSE_3	FUNCTION_5
0x40007f1	        0x410f94c4	                               sete r12b	       387	x86-dregs.c	ELSE_3	FUNCTION_5
0x40007f5	    0x468d24a50400	                   lea r12d, [r12*4 + 4]	       387	x86-dregs.c	ELSE_3	FUNCTION_5
0x40007fd	            0x85c9	                           test ecx, ecx	       401	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1
0x40007ff	     0xf8eea000000	                           jle 0x40008ef	       401	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1
0x4000805	          0x4963c4	                        movsxd rax, r12d	       401	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1
0x4000808	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	       401	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1
0x400080d	        0x8b6c2414	            mov ebp, dword [rsp + 0x14] 	       401	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1
0x4000811	      0x4889442408	                mov qword [rsp + 8], rax	       401	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1
0x4000816	      0x418d4424ff	                      lea eax, [r12 - 1]	       406	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1
0x400081b	      0x4c8d6c2420	                   lea r13, [rsp + 0x20]	       406	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1
0x4000820	        0x89442410	             mov dword [rsp + 0x10], eax	       406	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1
0x4000824	            0xeb1b	                           jmp 0x4000841	       406	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1
0x4000826	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       406	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1
0x4000830	          0x4963c6	                        movsxd rax, r14d	       435	x86-dregs.c	FUNCTION_5
0x4000833	          0x4429f5	                           sub ebp, r14d	       436	x86-dregs.c	FUNCTION_5
0x4000836	          0x4801c3	                            add rbx, rax	       435	x86-dregs.c	FUNCTION_5
0x4000839	            0x85ed	                           test ebp, ebp	       401	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1
0x400083b	     0xf8eb7000000	                           jle 0x40008f8	       401	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1
0x4000841	            0x31d2	                            xor edx, edx	       403	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1
0x4000843	          0x4889d8	                            mov rax, rbx	       403	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1
0x4000846	        0x8b742404	                mov esi, dword [rsp + 4]	       421	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1	ELSE_1	IF_2
0x400084a	      0x48f7742408	                     div qword [rsp + 8]	       403	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1
0x400084f	          0x4139ec	                           cmp r12d, ebp	       406	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1
0x4000852	          0x8d45ff	                      lea eax, [rbp - 1]	       406	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1
0x4000855	       0xf4c442410	           cmovl eax, dword [rsp + 0x10]	       406	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1
0x400085a	            0x4898	                                    cdqe	       407	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1	IF_1
0x400085c	        0x488d04c2	                  lea rax, [rdx + rax*8]	       407	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1	IF_1
0x4000860	    0x448b34850000	                 mov r14d, dword [rax*4]	       407	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1	IF_1
0x4000868	          0x4489f7	                           mov edi, r14d	       421	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1	ELSE_1	IF_2
0x400086b	      0xe800fcffff	call sym.x86_length_and_rw_bits_int_target_hw_bp_type	       421	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1	ELSE_1	IF_2
0x4000870	          0x4889de	                            mov rsi, rbx	       426	x86-dregs.c	FUNCTION_5	WHILE_1	ELSE_1	CALL_5
0x4000873	            0x89c2	                            mov edx, eax	       426	x86-dregs.c	FUNCTION_5	WHILE_1	ELSE_1	CALL_5
0x4000875	          0x4c89ef	                            mov rdi, r13	       426	x86-dregs.c	FUNCTION_5	WHILE_1	ELSE_1	CALL_5
0x4000878	      0xe8f3f8ffff	call sym.x86_remove_aligned_watchpoint_x86_debug_reg_state__unsignedlonglong_unsignedint	       426	x86-dregs.c	FUNCTION_5	WHILE_1	ELSE_1	CALL_5
0x400087d	            0x85c0	                           test eax, eax	       431	x86-dregs.c	FUNCTION_5	WHILE_1
0x400087f	            0x74af	                            je 0x4000830	       431	x86-dregs.c	FUNCTION_5	WHILE_1
0x4000881	    0x8b1500000000	            mov edx, dword [0x04000887] 	       540	x86-dregs.c	FUNCTION_8
0x4000887	            0x85d2	                           test edx, edx	       540	x86-dregs.c	FUNCTION_8
0x4000889	            0x7423	                            je 0x40008ae	       540	x86-dregs.c	FUNCTION_8
0x400088b	      0x448b442404	                mov r8d, dword [rsp + 4]	       541	x86-dregs.c	FUNCTION_8
0x4000890	        0x8b4c2414	            mov ecx, dword [rsp + 0x14] 	       541	x86-dregs.c	FUNCTION_8
0x4000894	      0xbe00000000	                              mov esi, 0	       541	x86-dregs.c	FUNCTION_8
0x4000899	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	       541	x86-dregs.c	FUNCTION_8
0x400089e	          0x4c89ff	                            mov rdi, r15	       541	x86-dregs.c	FUNCTION_8
0x40008a1	        0x89442408	                mov dword [rsp + 8], eax	       541	x86-dregs.c	FUNCTION_8
0x40008a5	      0xe8a6faffff	call sym.x86_show_dr_x86_debug_reg_state__charconst__unsignedlonglong_int_target_hw_bp_type	       541	x86-dregs.c	FUNCTION_8
0x40008aa	        0x8b442408	                mov eax, dword [rsp + 8]	       541	x86-dregs.c	FUNCTION_8
0x40008ae	      0x488b4c2458	            mov rcx, qword [rsp + 0x58] 	       544	x86-dregs.c	
0x40008b3	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       544	x86-dregs.c	
0x40008bc	            0x757d	                           jne 0x400093b	       544	x86-dregs.c	
0x40008be	        0x4883c468	                           add rsp, 0x68	       544	x86-dregs.c	
0x40008c2	              0x5b	                                 pop rbx	       544	x86-dregs.c	
0x40008c3	              0x5d	                                 pop rbp	       544	x86-dregs.c	
0x40008c4	            0x415c	                                 pop r12	       544	x86-dregs.c	
0x40008c6	            0x415d	                                 pop r13	       544	x86-dregs.c	
0x40008c8	            0x415e	                                 pop r14	       544	x86-dregs.c	
0x40008ca	            0x415f	                                 pop r15	       544	x86-dregs.c	
0x40008cc	              0xc3	                                     ret	       544	x86-dregs.c	
0x40008cd	           0xf1f00	                         nop dword [rax]	       544	x86-dregs.c	
0x40008d0	      0x48634c2414	         movsxd rcx, dword [rsp + 0x14] 	       523	x86-dregs.c	FUNCTION_8	IF_1
0x40008d5	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       523	x86-dregs.c	FUNCTION_8	IF_1
0x40008da	            0x31d2	                            xor edx, edx	       523	x86-dregs.c	FUNCTION_8	IF_1
0x40008dc	          0x48f7f1	                                 div rcx	       523	x86-dregs.c	FUNCTION_8	IF_1
0x40008df	          0x4885d2	                           test rdx, rdx	       523	x86-dregs.c	FUNCTION_8	IF_1
0x40008e2	            0x742c	                            je 0x4000910	       523	x86-dregs.c	FUNCTION_8	IF_1
0x40008e4	    0x8b0500000000	            mov eax, dword [0x040008ea] 	       523	x86-dregs.c	FUNCTION_8	IF_1
0x40008ea	      0xe9f8feffff	                           jmp 0x40007e7	       523	x86-dregs.c	FUNCTION_8	IF_1
0x40008ef	      0x4c8d6c2420	                   lea r13, [rsp + 0x20]	       523	x86-dregs.c	FUNCTION_8	IF_1
0x40008f4	         0xf1f4000	                         nop dword [rax]	       523	x86-dregs.c	FUNCTION_8	IF_1
0x40008f8	          0x4c89ee	                            mov rsi, r13	       538	x86-dregs.c	FUNCTION_8	CALL_5
0x40008fb	          0x4c89ff	                            mov rdi, r15	       538	x86-dregs.c	FUNCTION_8	CALL_5
0x40008fe	      0xe86df9ffff	call sym.x86_update_inferior_debug_regs_x86_debug_reg_state__x86_debug_reg_state	       538	x86-dregs.c	FUNCTION_8	CALL_5
0x4000903	            0x31c0	                            xor eax, eax	       538	x86-dregs.c	FUNCTION_8	CALL_5
0x4000905	      0xe977ffffff	                           jmp 0x4000881	       538	x86-dregs.c	FUNCTION_8	CALL_5
0x400090a	    0x660f1f440000	                    nop word [rax + rax]	       538	x86-dregs.c	FUNCTION_8	CALL_5
0x4000910	        0x8b742404	                mov esi, dword [rsp + 4]	       531	x86-dregs.c	FUNCTION_8	ELSE_1
0x4000914	        0x8b7c2414	            mov edi, dword [rsp + 0x14] 	       531	x86-dregs.c	FUNCTION_8	ELSE_1
0x4000918	      0x4c8d6c2420	                   lea r13, [rsp + 0x20]	       534	x86-dregs.c	FUNCTION_8	IF_2
0x400091d	      0xe84efbffff	call sym.x86_length_and_rw_bits_int_target_hw_bp_type	       531	x86-dregs.c	FUNCTION_8	ELSE_1
0x4000922	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	       534	x86-dregs.c	FUNCTION_8	IF_2
0x4000927	            0x89c2	                            mov edx, eax	       534	x86-dregs.c	FUNCTION_8	IF_2
0x4000929	          0x4c89ef	                            mov rdi, r13	       534	x86-dregs.c	FUNCTION_8	IF_2
0x400092c	      0xe83ff8ffff	call sym.x86_remove_aligned_watchpoint_x86_debug_reg_state__unsignedlonglong_unsignedint	       534	x86-dregs.c	FUNCTION_8	IF_2
0x4000931	            0x85c0	                           test eax, eax	       537	x86-dregs.c	FUNCTION_8	IF_3
0x4000933	     0xf8548ffffff	                           jne 0x4000881	       537	x86-dregs.c	FUNCTION_8	IF_3
0x4000939	            0xebbd	                           jmp 0x40008f8	       537	x86-dregs.c	FUNCTION_8	IF_3
0x400093b	      0xe800000000	call sym.x86_dr_region_ok_for_watchpoint_x86_debug_reg_state__unsignedlonglong_int	       544	x86-dregs.c	
x86_dr_region_ok_for_watchpoint	ELSE,0:SWITCH,0:IF,0:DO,0:CALL,1:functions,0:FOR,0:WHILE,0	31
0x4000940	          0x4531c9	                            xor r9d, r9d	       387	x86-dregs.c	ELSE_3	FUNCTION_5
0x4000943	    0x833d00000000	               cmp dword [0x0400094a], 8	       387	x86-dregs.c	ELSE_3	FUNCTION_5
0x400094a	            0x89d1	                            mov ecx, edx	       552	x86-dregs.c	FUNCTION_9
0x400094c	        0x410f94c1	                                sete r9b	       387	x86-dregs.c	ELSE_3	FUNCTION_5
0x4000950	            0x85d2	                           test edx, edx	       401	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1
0x4000952	    0x468d0c8d0400	                     lea r9d, [r9*4 + 4]	       387	x86-dregs.c	ELSE_3	FUNCTION_5
0x400095a	            0x7e41	                           jle 0x400099d	       401	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1
0x400095c	        0x458d51ff	                      lea r10d, [r9 - 1]	       406	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1
0x4000960	          0x4d63c1	                          movsxd r8, r9d	       406	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1
0x4000963	            0x31ff	                            xor edi, edi	       401	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1
0x4000965	           0xf1f00	                         nop dword [rax]	       401	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1
0x4000968	          0x4889f0	                            mov rax, rsi	       403	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1
0x400096b	            0x31d2	                            xor edx, edx	       403	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1
0x400096d	          0x49f7f0	                                  div r8	       403	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1
0x4000970	          0x8d41ff	                      lea eax, [rcx - 1]	       406	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1
0x4000973	          0x4139c9	                            cmp r9d, ecx	       406	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1
0x4000976	        0x410f4cc2	                         cmovl eax, r10d	       406	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1
0x400097a	          0x83c701	                              add edi, 1	       417	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1	ELSE_1
0x400097d	            0x4898	                                    cdqe	       407	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1	IF_1
0x400097f	        0x488d04c2	                  lea rax, [rdx + rax*8]	       407	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1	IF_1
0x4000983	    0x486314850000	               movsxd rdx, dword [rax*4]	       407	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1	IF_1
0x400098b	            0x29d1	                            sub ecx, edx	       436	x86-dregs.c	FUNCTION_5
0x400098d	          0x4801d6	                            add rsi, rdx	       435	x86-dregs.c	FUNCTION_5
0x4000990	            0x85c9	                           test ecx, ecx	       401	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1
0x4000992	            0x7fd4	                            jg 0x4000968	       401	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1
0x4000994	            0x31c0	                            xor eax, eax	       401	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1
0x4000996	          0x83ff04	                              cmp edi, 4	       401	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1
0x4000999	           0xf9ec0	                                setle al	       401	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1
0x400099c	              0xc3	                                     ret	       401	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1
0x400099d	      0xb801000000	                              mov eax, 1	       401	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1
0x40009a2	              0xc3	                                     ret	       560	x86-dregs.c	
x86_dr_stopped_by_watchpoint	ELSE,0:SWITCH,0:IF,0:DO,0:CALL,1:functions,0:FOR,0:WHILE,0	13
0x4000ac0	        0x4883ec18	                           sub rsp, 0x18	       648	x86-dregs.c	FUNCTION_11
0x4000ac4	          0x4889e6	                            mov rsi, rsp	       650	x86-dregs.c	
0x4000ac7	    0x48c704240000	                      mov qword [rsp], 0	       649	x86-dregs.c	
0x4000acf	    0x64488b042528	                mov rax, qword fs:[0x28]	       648	x86-dregs.c	FUNCTION_11
0x4000ad8	      0x4889442408	                mov qword [rsp + 8], rax	       648	x86-dregs.c	FUNCTION_11
0x4000add	            0x31c0	                            xor eax, eax	       648	x86-dregs.c	FUNCTION_11
0x4000adf	      0xe800000000	                          call 0x4000ae4	       650	x86-dregs.c	
0x4000ae4	      0x488b542408	                mov rdx, qword [rsp + 8]	       651	x86-dregs.c	
0x4000ae9	    0x644833142528	                xor rdx, qword fs:[0x28]	       651	x86-dregs.c	
0x4000af2	            0x7505	                           jne 0x4000af9	       651	x86-dregs.c	
0x4000af4	        0x4883c418	                           add rsp, 0x18	       651	x86-dregs.c	
0x4000af8	              0xc3	                                     ret	       651	x86-dregs.c	
0x4000af9	      0xe800000000	                          call 0x4000afe	       651	x86-dregs.c	
x86_dr_stopped_data_address	ELSE,0:SWITCH,0:IF,2:DO,0:CALL,1:functions,1:FOR,0:WHILE,0	81
0x40009b0	            0x4157	                                push r15	       569	x86-dregs.c	FUNCTION_10
0x40009b2	            0x4156	                                push r14	       569	x86-dregs.c	FUNCTION_10
0x40009b4	          0x4531ff	                          xor r15d, r15d	       580	x86-dregs.c	FUNCTION_10
0x40009b7	            0x4155	                                push r13	       569	x86-dregs.c	FUNCTION_10
0x40009b9	            0x4154	                                push r12	       569	x86-dregs.c	FUNCTION_10
0x40009bb	          0x4531f6	                          xor r14d, r14d	       572	x86-dregs.c	FUNCTION_10
0x40009be	              0x55	                                push rbp	       569	x86-dregs.c	FUNCTION_10
0x40009bf	              0x53	                                push rbx	       569	x86-dregs.c	FUNCTION_10
0x40009c0	          0x4531ed	                          xor r13d, r13d	       570	x86-dregs.c	FUNCTION_10
0x40009c3	            0x31db	                            xor ebx, ebx	       610	x86-dregs.c	FUNCTION_10	FUNCTION_1	IF_1
0x40009c5	    0x41bc01000000	                             mov r12d, 1	       612	x86-dregs.c	FUNCTION_10	FUNCTION_1	IF_2
0x40009cb	        0x4883ec28	                           sub rsp, 0x28	       569	x86-dregs.c	FUNCTION_10
0x40009cf	      0x4889742408	                mov qword [rsp + 8], rsi	       569	x86-dregs.c	FUNCTION_10
0x40009d4	      0x48897c2410	             mov qword [rsp + 0x10], rdi	       569	x86-dregs.c	FUNCTION_10
0x40009d9	    0xff1500000000	                 call qword [0x040009df]	       608	x86-dregs.c	FUNCTION_10	FUNCTION_1
0x40009df	            0x31f6	                            xor esi, esi	       579	x86-dregs.c	FUNCTION_10
0x40009e1	            0x89c5	                            mov ebp, eax	       608	x86-dregs.c	FUNCTION_10	FUNCTION_1
0x40009e3	          0x4489e2	                           mov edx, r12d	       612	x86-dregs.c	FUNCTION_10	FUNCTION_1	IF_2
0x40009e6	            0x89d9	                            mov ecx, ebx	       612	x86-dregs.c	FUNCTION_10	FUNCTION_1	IF_2
0x40009e8	            0xd3e2	                             shl edx, cl	       612	x86-dregs.c	FUNCTION_10	FUNCTION_1	IF_2
0x40009ea	            0x85ea	                           test edx, ebp	       612	x86-dregs.c	FUNCTION_10	FUNCTION_1	IF_2
0x40009ec	            0x741d	                            je 0x4000a0b	       612	x86-dregs.c	FUNCTION_10	FUNCTION_1	IF_2
0x40009ee	            0x85f6	                           test esi, esi	       615	x86-dregs.c	FUNCTION_10	FUNCTION_1	IF_2
0x40009f0	     0xf849a000000	                            je 0x4000a90	       615	x86-dregs.c	FUNCTION_10	FUNCTION_1	IF_2
0x40009f6	    0x8d0c9d100000	                 lea ecx, [rbx*4 + 0x10]	       626	x86-dregs.c	FUNCTION_10	FUNCTION_1	IF_3
0x40009fd	          0x4489f8	                           mov eax, r15d	       626	x86-dregs.c	FUNCTION_10	FUNCTION_1	IF_3
0x4000a00	      0xbe01000000	                              mov esi, 1	       626	x86-dregs.c	FUNCTION_10	FUNCTION_1	IF_3
0x4000a05	            0xd3e8	                             shr eax, cl	       626	x86-dregs.c	FUNCTION_10	FUNCTION_1	IF_3
0x4000a07	            0xa80f	                            test al, 0xf	       626	x86-dregs.c	FUNCTION_10	FUNCTION_1	IF_3
0x4000a09	            0x753d	                           jne 0x4000a48	       626	x86-dregs.c	FUNCTION_10	FUNCTION_1	IF_3
0x4000a0b	          0x83c301	                              add ebx, 1	       610	x86-dregs.c	FUNCTION_10	FUNCTION_1	IF_1
0x4000a0e	          0x83fb04	                              cmp ebx, 4	       610	x86-dregs.c	FUNCTION_10	FUNCTION_1	IF_1
0x4000a11	            0x75d0	                           jne 0x40009e3	       610	x86-dregs.c	FUNCTION_10	FUNCTION_1	IF_1
0x4000a13	    0x8b0500000000	            mov eax, dword [0x04000a19] 	       635	x86-dregs.c	FUNCTION_10	IF_2
0x4000a19	            0x85c0	                           test eax, eax	       635	x86-dregs.c	FUNCTION_10	IF_2
0x4000a1b	            0x7405	                            je 0x4000a22	       635	x86-dregs.c	FUNCTION_10	IF_2
0x4000a1d	          0x4d85ed	                           test r13, r13	       635	x86-dregs.c	FUNCTION_10	IF_2
0x4000a20	            0x747e	                            je 0x4000aa0	       635	x86-dregs.c	FUNCTION_10	IF_2
0x4000a22	          0x4585f6	                         test r14d, r14d	       638	x86-dregs.c	FUNCTION_10
0x4000a25	            0x7408	                            je 0x4000a2f	       638	x86-dregs.c	FUNCTION_10
0x4000a27	      0x488b442408	                mov rax, qword [rsp + 8]	       639	x86-dregs.c	
0x4000a2c	          0x4c8928	                    mov qword [rax], r13	       639	x86-dregs.c	
0x4000a2f	        0x4883c428	                           add rsp, 0x28	       641	x86-dregs.c	
0x4000a33	          0x4489f0	                           mov eax, r14d	       641	x86-dregs.c	
0x4000a36	              0x5b	                                 pop rbx	       641	x86-dregs.c	
0x4000a37	              0x5d	                                 pop rbp	       641	x86-dregs.c	
0x4000a38	            0x415c	                                 pop r12	       641	x86-dregs.c	
0x4000a3a	            0x415d	                                 pop r13	       641	x86-dregs.c	
0x4000a3c	            0x415e	                                 pop r14	       641	x86-dregs.c	
0x4000a3e	            0x415f	                                 pop r15	       641	x86-dregs.c	
0x4000a40	              0xc3	                                     ret	       641	x86-dregs.c	
0x4000a41	     0xf1f80000000	                         nop dword [rax]	       641	x86-dregs.c	
0x4000a48	        0x8974241c	             mov dword [rsp + 0x1c], esi	       641	x86-dregs.c	
0x4000a4c	            0x89df	                            mov edi, ebx	       628	x86-dregs.c	FUNCTION_10	FUNCTION_1	IF_3	CALL_1
0x4000a4e	    0x41be01000000	                             mov r14d, 1	       629	x86-dregs.c	FUNCTION_10	FUNCTION_1	IF_3
0x4000a54	    0xff1500000000	                 call qword [0x04000a5a]	       628	x86-dregs.c	FUNCTION_10	FUNCTION_1	IF_3	CALL_1
0x4000a5a	    0x8b1500000000	            mov edx, dword [0x04000a60] 	       630	x86-dregs.c	FUNCTION_10	FUNCTION_1
0x4000a60	          0x4989c5	                            mov r13, rax	       628	x86-dregs.c	FUNCTION_10	FUNCTION_1	IF_3	CALL_1
0x4000a63	        0x8b74241c	            mov esi, dword [rsp + 0x1c] 	       630	x86-dregs.c	FUNCTION_10	FUNCTION_1
0x4000a67	            0x85d2	                           test edx, edx	       630	x86-dregs.c	FUNCTION_10	FUNCTION_1
0x4000a69	            0x74a0	                            je 0x4000a0b	       630	x86-dregs.c	FUNCTION_10	FUNCTION_1
0x4000a6b	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       631	x86-dregs.c	FUNCTION_10
0x4000a70	      0xbe00000000	                              mov esi, 0	       631	x86-dregs.c	FUNCTION_10
0x4000a75	          0x4531c0	                            xor r8d, r8d	       631	x86-dregs.c	FUNCTION_10
0x4000a78	      0xb9ffffffff	                     mov ecx, 0xffffffff	       631	x86-dregs.c	FUNCTION_10
0x4000a7d	          0x4889c2	                            mov rdx, rax	       631	x86-dregs.c	FUNCTION_10
0x4000a80	      0xe8cbf8ffff	call sym.x86_show_dr_x86_debug_reg_state__charconst__unsignedlonglong_int_target_hw_bp_type	       631	x86-dregs.c	FUNCTION_10
0x4000a85	          0x4489f6	                           mov esi, r14d	       631	x86-dregs.c	FUNCTION_10
0x4000a88	            0xeb81	                           jmp 0x4000a0b	       631	x86-dregs.c	FUNCTION_10
0x4000a8a	    0x660f1f440000	                    nop word [rax + rax]	       631	x86-dregs.c	FUNCTION_10
0x4000a90	    0xff1500000000	                 call qword [0x04000a96]	       617	x86-dregs.c	FUNCTION_10	FUNCTION_1
0x4000a96	          0x4189c7	                           mov r15d, eax	       617	x86-dregs.c	FUNCTION_10	FUNCTION_1
0x4000a99	      0xe958ffffff	                           jmp 0x40009f6	       617	x86-dregs.c	FUNCTION_10	FUNCTION_1
0x4000a9e	            0x6690	                                     nop	       617	x86-dregs.c	FUNCTION_10	FUNCTION_1
0x4000aa0	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       636	x86-dregs.c	FUNCTION_10	IF_2
0x4000aa5	          0x4531c0	                            xor r8d, r8d	       636	x86-dregs.c	FUNCTION_10	IF_2
0x4000aa8	            0x31c9	                            xor ecx, ecx	       636	x86-dregs.c	FUNCTION_10	IF_2
0x4000aaa	            0x31d2	                            xor edx, edx	       636	x86-dregs.c	FUNCTION_10	IF_2
0x4000aac	      0xbe00000000	                              mov esi, 0	       636	x86-dregs.c	FUNCTION_10	IF_2
0x4000ab1	      0xe89af8ffff	call sym.x86_show_dr_x86_debug_reg_state__charconst__unsignedlonglong_int_target_hw_bp_type	       636	x86-dregs.c	FUNCTION_10	IF_2
0x4000ab6	      0xe967ffffff	                           jmp 0x4000a22	       636	x86-dregs.c	FUNCTION_10	IF_2
x86_dr_insert_watchpoint	ELSE,1:SWITCH,0:IF,4:DO,0:CALL,5:functions,0:FOR,0:WHILE,0	133
0x4000560	            0x4157	                                push r15	       473	x86-dregs.c	FUNCTION_7
0x4000562	            0x4156	                                push r14	       473	x86-dregs.c	FUNCTION_7
0x4000564	            0x4155	                                push r13	       473	x86-dregs.c	FUNCTION_7
0x4000566	            0x4154	                                push r12	       473	x86-dregs.c	FUNCTION_7
0x4000568	              0x55	                                push rbp	       473	x86-dregs.c	FUNCTION_7
0x4000569	              0x53	                                push rbx	       473	x86-dregs.c	FUNCTION_7
0x400056a	        0x4883ec68	                           sub rsp, 0x68	       473	x86-dregs.c	FUNCTION_7
0x400056e	    0x64488b042528	                mov rax, qword fs:[0x28]	       473	x86-dregs.c	FUNCTION_7
0x4000577	      0x4889442458	             mov qword [rsp + 0x58], rax	       473	x86-dregs.c	FUNCTION_7
0x400057c	            0x31c0	                            xor eax, eax	       473	x86-dregs.c	FUNCTION_7
0x400057e	          0x488b07	                    mov rax, qword [rdi]	       477	x86-dregs.c	FUNCTION_7	IF_1
0x4000581	          0x83fe01	                              cmp esi, 1	       479	x86-dregs.c	FUNCTION_7	IF_2
0x4000584	      0x4889542418	             mov qword [rsp + 0x18], rdx	       473	x86-dregs.c	FUNCTION_7
0x4000589	        0x894c2414	             mov dword [rsp + 0x14], ecx	       473	x86-dregs.c	FUNCTION_7
0x400058d	      0x4889442420	             mov qword [rsp + 0x20], rax	       477	x86-dregs.c	FUNCTION_7	IF_1
0x4000592	        0x488b4708	                mov rax, qword [rdi + 8]	       477	x86-dregs.c	FUNCTION_7	IF_1
0x4000596	      0x4889442428	             mov qword [rsp + 0x28], rax	       477	x86-dregs.c	FUNCTION_7	IF_1
0x400059b	        0x488b4710	            mov rax, qword [rdi + 0x10] 	       477	x86-dregs.c	FUNCTION_7	IF_1
0x400059f	      0x4889442430	             mov qword [rsp + 0x30], rax	       477	x86-dregs.c	FUNCTION_7	IF_1
0x40005a4	        0x488b4718	            mov rax, qword [rdi + 0x18] 	       477	x86-dregs.c	FUNCTION_7	IF_1
0x40005a8	      0x4889442438	             mov qword [rsp + 0x38], rax	       477	x86-dregs.c	FUNCTION_7	IF_1
0x40005ad	        0x488b4720	            mov rax, qword [rdi + 0x20] 	       477	x86-dregs.c	FUNCTION_7	IF_1
0x40005b1	      0x4889442440	             mov qword [rsp + 0x40], rax	       477	x86-dregs.c	FUNCTION_7	IF_1
0x40005b6	        0x488b4728	            mov rax, qword [rdi + 0x28] 	       477	x86-dregs.c	FUNCTION_7	IF_1
0x40005ba	      0x4889442448	             mov qword [rsp + 0x48], rax	       477	x86-dregs.c	FUNCTION_7	IF_1
0x40005bf	        0x488b4730	            mov rax, qword [rdi + 0x30] 	       477	x86-dregs.c	FUNCTION_7	IF_1
0x40005c3	      0x4889442450	             mov qword [rsp + 0x50], rax	       477	x86-dregs.c	FUNCTION_7	IF_1
0x40005c8	     0xf8442010000	                            je 0x4000710	       479	x86-dregs.c	FUNCTION_7	IF_2
0x40005ce	            0x89c8	                            mov eax, ecx	       482	x86-dregs.c	FUNCTION_7	IF_2
0x40005d0	          0x4989ff	                            mov r15, rdi	       482	x86-dregs.c	FUNCTION_7	IF_2
0x40005d3	          0x4189f5	                           mov r13d, esi	       482	x86-dregs.c	FUNCTION_7	IF_2
0x40005d6	          0x83e801	                              sub eax, 1	       482	x86-dregs.c	FUNCTION_7	IF_2
0x40005d9	          0x83f801	                              cmp eax, 1	       482	x86-dregs.c	FUNCTION_7	IF_2
0x40005dc	            0x7615	                           jbe 0x40005f3	       482	x86-dregs.c	FUNCTION_7	IF_2
0x40005de	          0x83f904	                              cmp ecx, 4	       482	x86-dregs.c	FUNCTION_7	IF_2
0x40005e1	            0x7410	                            je 0x40005f3	       482	x86-dregs.c	FUNCTION_7	IF_2
0x40005e3	    0x8b0500000000	            mov eax, dword [0x040005e9] 	       483	x86-dregs.c	FUNCTION_7	IF_2	CALL_1
0x40005e9	          0x83f808	                              cmp eax, 8	       483	x86-dregs.c	FUNCTION_7	IF_2	CALL_1
0x40005ec	            0x7523	                           jne 0x4000611	       483	x86-dregs.c	FUNCTION_7	IF_2	CALL_1
0x40005ee	          0x83f908	                              cmp ecx, 8	       483	x86-dregs.c	FUNCTION_7	IF_2	CALL_1
0x40005f1	            0x751e	                           jne 0x4000611	       483	x86-dregs.c	FUNCTION_7	IF_2	CALL_1
0x40005f3	      0x48634c2414	         movsxd rcx, dword [rsp + 0x14] 	       484	x86-dregs.c	FUNCTION_7	IF_2
0x40005f8	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       484	x86-dregs.c	FUNCTION_7	IF_2
0x40005fd	            0x31d2	                            xor edx, edx	       484	x86-dregs.c	FUNCTION_7	IF_2
0x40005ff	          0x48f7f1	                                 div rcx	       484	x86-dregs.c	FUNCTION_7	IF_2
0x4000602	          0x4885d2	                           test rdx, rdx	       484	x86-dregs.c	FUNCTION_7	IF_2
0x4000605	     0xf8415010000	                            je 0x4000720	       484	x86-dregs.c	FUNCTION_7	IF_2
0x400060b	    0x8b0500000000	            mov eax, dword [0x04000611] 	       484	x86-dregs.c	FUNCTION_7	IF_2
0x4000611	        0x8b4c2414	            mov ecx, dword [rsp + 0x14] 	       401	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1
0x4000615	          0x4531e4	                          xor r12d, r12d	       387	x86-dregs.c	ELSE_3	FUNCTION_5
0x4000618	          0x83f808	                              cmp eax, 8	       387	x86-dregs.c	ELSE_3	FUNCTION_5
0x400061b	        0x410f94c4	                               sete r12b	       387	x86-dregs.c	ELSE_3	FUNCTION_5
0x400061f	    0x468d24a50400	                   lea r12d, [r12*4 + 4]	       387	x86-dregs.c	ELSE_3	FUNCTION_5
0x4000627	            0x85c9	                           test ecx, ecx	       401	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1
0x4000629	     0xf8ec2000000	                           jle 0x40006f1	       401	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1
0x400062f	          0x4963c4	                        movsxd rax, r12d	       401	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1
0x4000632	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	       401	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1
0x4000637	        0x8b6c2414	            mov ebp, dword [rsp + 0x14] 	       401	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1
0x400063b	      0x4889442408	                mov qword [rsp + 8], rax	       401	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1
0x4000640	      0x488d442420	                   lea rax, [rsp + 0x20]	       401	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1
0x4000645	        0x48890424	                    mov qword [rsp], rax	       401	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1
0x4000649	      0x418d4424ff	                      lea eax, [r12 - 1]	       406	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1
0x400064e	        0x89442410	             mov dword [rsp + 0x10], eax	       406	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1
0x4000652	            0xeb15	                           jmp 0x4000669	       406	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1
0x4000654	         0xf1f4000	                         nop dword [rax]	       406	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1
0x4000658	          0x4963c6	                        movsxd rax, r14d	       435	x86-dregs.c	FUNCTION_5
0x400065b	          0x4429f5	                           sub ebp, r14d	       436	x86-dregs.c	FUNCTION_5
0x400065e	          0x4801c3	                            add rbx, rax	       435	x86-dregs.c	FUNCTION_5
0x4000661	            0x85ed	                           test ebp, ebp	       401	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1
0x4000663	     0xf8e97000000	                           jle 0x4000700	       401	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1
0x4000669	            0x31d2	                            xor edx, edx	       403	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1
0x400066b	          0x4889d8	                            mov rax, rbx	       403	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1
0x400066e	          0x4489ee	                           mov esi, r13d	       421	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1	ELSE_1	IF_2
0x4000671	      0x48f7742408	                     div qword [rsp + 8]	       403	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1
0x4000676	          0x4139ec	                           cmp r12d, ebp	       406	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1
0x4000679	          0x8d45ff	                      lea eax, [rbp - 1]	       406	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1
0x400067c	       0xf4c442410	           cmovl eax, dword [rsp + 0x10]	       406	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1
0x4000681	            0x4898	                                    cdqe	       407	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1	IF_1
0x4000683	        0x488d04c2	                  lea rax, [rdx + rax*8]	       407	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1	IF_1
0x4000687	    0x448b34850000	                 mov r14d, dword [rax*4]	       407	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1	IF_1
0x400068f	          0x4489f7	                           mov edi, r14d	       421	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1	ELSE_1	IF_2
0x4000692	      0xe8d9fdffff	call sym.x86_length_and_rw_bits_int_target_hw_bp_type	       421	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1	ELSE_1	IF_2
0x4000697	        0x488b3c24	                    mov rdi, qword [rsp]	       424	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1	ELSE_1	ELSE_2	IF_3
0x400069b	            0x89c2	                            mov edx, eax	       424	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1	ELSE_1	ELSE_2	IF_3
0x400069d	          0x4889de	                            mov rsi, rbx	       424	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1	ELSE_1	ELSE_2	IF_3
0x40006a0	      0xe89bf9ffff	call sym.x86_insert_aligned_watchpoint_x86_debug_reg_state__unsignedlonglong_unsignedint	       424	x86-dregs.c	ELSE_3	FUNCTION_5	WHILE_1	ELSE_1	ELSE_2	IF_3
0x40006a5	            0x85c0	                           test eax, eax	       431	x86-dregs.c	FUNCTION_5	WHILE_1
0x40006a7	            0x74af	                            je 0x4000658	       431	x86-dregs.c	FUNCTION_5	WHILE_1
0x40006a9	    0x8b1500000000	            mov edx, dword [0x040006af] 	       501	x86-dregs.c	FUNCTION_7
0x40006af	            0x85d2	                           test edx, edx	       501	x86-dregs.c	FUNCTION_7
0x40006b1	            0x741f	                            je 0x40006d2	       501	x86-dregs.c	FUNCTION_7
0x40006b3	        0x8b4c2414	            mov ecx, dword [rsp + 0x14] 	       502	x86-dregs.c	FUNCTION_7
0x40006b7	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	       502	x86-dregs.c	FUNCTION_7
0x40006bc	          0x4589e8	                           mov r8d, r13d	       502	x86-dregs.c	FUNCTION_7
0x40006bf	      0xbe00000000	                              mov esi, 0	       502	x86-dregs.c	FUNCTION_7
0x40006c4	          0x4c89ff	                            mov rdi, r15	       502	x86-dregs.c	FUNCTION_7
0x40006c7	          0x890424	                    mov dword [rsp], eax	       502	x86-dregs.c	FUNCTION_7
0x40006ca	      0xe881fcffff	call sym.x86_show_dr_x86_debug_reg_state__charconst__unsignedlonglong_int_target_hw_bp_type	       502	x86-dregs.c	FUNCTION_7
0x40006cf	          0x8b0424	                    mov eax, dword [rsp]	       502	x86-dregs.c	FUNCTION_7
0x40006d2	      0x488b4c2458	            mov rcx, qword [rsp + 0x58] 	       505	x86-dregs.c	
0x40006d7	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       505	x86-dregs.c	
0x40006e0	            0x7569	                           jne 0x400074b	       505	x86-dregs.c	
0x40006e2	        0x4883c468	                           add rsp, 0x68	       505	x86-dregs.c	
0x40006e6	              0x5b	                                 pop rbx	       505	x86-dregs.c	
0x40006e7	              0x5d	                                 pop rbp	       505	x86-dregs.c	
0x40006e8	            0x415c	                                 pop r12	       505	x86-dregs.c	
0x40006ea	            0x415d	                                 pop r13	       505	x86-dregs.c	
0x40006ec	            0x415e	                                 pop r14	       505	x86-dregs.c	
0x40006ee	            0x415f	                                 pop r15	       505	x86-dregs.c	
0x40006f0	              0xc3	                                     ret	       505	x86-dregs.c	
0x40006f1	      0x488d442420	                   lea rax, [rsp + 0x20]	       505	x86-dregs.c	
0x40006f6	        0x48890424	                    mov qword [rsp], rax	       505	x86-dregs.c	
0x40006fa	    0x660f1f440000	                    nop word [rax + rax]	       505	x86-dregs.c	
0x4000700	        0x488b3424	                    mov rsi, qword [rsp]	       499	x86-dregs.c	FUNCTION_7	CALL_5
0x4000704	          0x4c89ff	                            mov rdi, r15	       499	x86-dregs.c	FUNCTION_7	CALL_5
0x4000707	      0xe864fbffff	call sym.x86_update_inferior_debug_regs_x86_debug_reg_state__x86_debug_reg_state	       499	x86-dregs.c	FUNCTION_7	CALL_5
0x400070c	            0x31c0	                            xor eax, eax	       499	x86-dregs.c	FUNCTION_7	CALL_5
0x400070e	            0xeb99	                           jmp 0x40006a9	       499	x86-dregs.c	FUNCTION_7	CALL_5
0x4000710	      0xb801000000	                              mov eax, 1	       480	x86-dregs.c	FUNCTION_7	IF_2
0x4000715	            0xebbb	                           jmp 0x40006d2	       480	x86-dregs.c	FUNCTION_7	IF_2
0x4000717	    0x660f1f840000	                    nop word [rax + rax]	       480	x86-dregs.c	FUNCTION_7	IF_2
0x4000720	        0x8b7c2414	            mov edi, dword [rsp + 0x14] 	       492	x86-dregs.c	FUNCTION_7	ELSE_1
0x4000724	          0x4489ee	                           mov esi, r13d	       492	x86-dregs.c	FUNCTION_7	ELSE_1
0x4000727	      0xe844fdffff	call sym.x86_length_and_rw_bits_int_target_hw_bp_type	       492	x86-dregs.c	FUNCTION_7	ELSE_1
0x400072c	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	       495	x86-dregs.c	FUNCTION_7	IF_3
0x4000731	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       495	x86-dregs.c	FUNCTION_7	IF_3
0x4000736	            0x89c2	                            mov edx, eax	       495	x86-dregs.c	FUNCTION_7	IF_3
0x4000738	        0x48893c24	                    mov qword [rsp], rdi	       495	x86-dregs.c	FUNCTION_7	IF_3
0x400073c	      0xe8fff8ffff	call sym.x86_insert_aligned_watchpoint_x86_debug_reg_state__unsignedlonglong_unsignedint	       495	x86-dregs.c	FUNCTION_7	IF_3
0x4000741	            0x85c0	                           test eax, eax	       498	x86-dregs.c	FUNCTION_7	IF_4
0x4000743	     0xf8560ffffff	                           jne 0x40006a9	       498	x86-dregs.c	FUNCTION_7	IF_4
0x4000749	            0xebb5	                           jmp 0x4000700	       498	x86-dregs.c	FUNCTION_7	IF_4
0x400074b	      0xe800000000	call sym.x86_dr_remove_watchpoint_x86_debug_reg_state__target_hw_bp_type_unsignedlonglong_int	       505	x86-dregs.c	
