find_address_in_section	IF,4:WHILE,0:ELSE,0:CALL,4:FOR,0:functions,0:SWITCH,0:DO,0	26
0x4000058	    0x833d00000000	               cmp dword [0x0400005f], 0	      1928	prdbg.c	FUNCTION_56	IF_1
0x400005f	            0x755a	                           jne 0x40000bb	      1928	prdbg.c	FUNCTION_56	IF_1
0x4000061	        0xf6462001	               test byte [rsi + 0x20], 1	      1931	prdbg.c	FUNCTION_56	IF_2	CALL_1
0x4000065	            0x7454	                            je 0x40000bb	      1931	prdbg.c	FUNCTION_56	IF_2	CALL_1
0x4000067	        0x4c8b4628	              mov r8, qword [rsi + 0x28]	      1934	prdbg.c	FUNCTION_56	CALL_2
0x400006b	    0x488b0d000000	            mov rcx, qword [0x04000072] 	      1935	prdbg.c	FUNCTION_56	IF_3
0x4000072	          0x4939c8	                             cmp r8, rcx	      1935	prdbg.c	FUNCTION_56	IF_3
0x4000075	            0x7744	                            ja 0x40000bb	      1935	prdbg.c	FUNCTION_56	IF_3
0x4000077	          0x4c89c0	                             mov rax, r8	      1939	prdbg.c	FUNCTION_56	IF_4
0x400007a	        0x48034638	             add rax, qword [rsi + 0x38]	      1939	prdbg.c	FUNCTION_56	IF_4
0x400007e	          0x4839c1	                            cmp rcx, rax	      1939	prdbg.c	FUNCTION_56	IF_4
0x4000081	            0x7338	                           jae 0x40000bb	      1939	prdbg.c	FUNCTION_56	IF_4
0x4000083	        0x4883ec08	                              sub rsp, 8	      1923	prdbg.c	FUNCTION_56
0x4000087	          0x4889d0	                            mov rax, rdx	      1923	prdbg.c	FUNCTION_56
0x400008a	          0x4889f2	                            mov rdx, rsi	      1923	prdbg.c	FUNCTION_56
0x400008d	          0x4c29c1	                             sub rcx, r8	      1942	prdbg.c	FUNCTION_56	CALL_4
0x4000090	        0x4c8b5708	                mov r10, qword [rdi + 8]	      1942	prdbg.c	FUNCTION_56	CALL_4
0x4000094	            0x6a00	                                  push 0	      1942	prdbg.c	FUNCTION_56	CALL_4
0x4000096	      0x6800000000	                                  push 0	      1942	prdbg.c	FUNCTION_56	CALL_4
0x400009b	    0x41b900000000	                              mov r9d, 0	      1942	prdbg.c	FUNCTION_56	CALL_4
0x40000a1	    0x41b800000000	                              mov r8d, 0	      1942	prdbg.c	FUNCTION_56	CALL_4
0x40000a7	          0x4889c6	                            mov rsi, rax	      1942	prdbg.c	FUNCTION_56	CALL_4
0x40000aa	    0x41ff92380200	                call qword [r10 + 0x238]	      1942	prdbg.c	FUNCTION_56	CALL_4
0x40000b1	    0x890500000000	            mov dword [0x040000b7], eax 	      1942	prdbg.c	FUNCTION_56	CALL_4
0x40000b7	        0x4883c418	                           add rsp, 0x18	      1944	prdbg.c	FUNCTION_56
0x40000bb	            0xf3c3	                                     ret	      1944	prdbg.c	FUNCTION_56
tg_function_parameter	IF,9:WHILE,0:ELSE,0:CALL,7:FOR,0:functions,0:SWITCH,0:DO,0	55
0x4000c2a	            0x4154	                                push r12	      2706	prdbg.c	FUNCTION_79
0x4000c2c	              0x55	                                push rbp	      2706	prdbg.c	FUNCTION_79
0x4000c2d	              0x53	                                push rbx	      2706	prdbg.c	FUNCTION_79
0x4000c2e	          0x4889fb	                            mov rbx, rdi	      2706	prdbg.c	FUNCTION_79
0x4000c31	          0x4989f4	                            mov r12, rsi	      2706	prdbg.c	FUNCTION_79
0x4000c34	            0x89d5	                            mov ebp, edx	      2706	prdbg.c	FUNCTION_79
0x4000c36	          0x8d42fd	                      lea eax, [rdx - 3]	      2710	prdbg.c	FUNCTION_79	IF_1
0x4000c39	          0x83f801	                              cmp eax, 1	      2710	prdbg.c	FUNCTION_79	IF_1
0x4000c3c	            0x770d	                            ja 0x4000c4b	      2710	prdbg.c	FUNCTION_79	IF_1
0x4000c3e	      0xe8e1fbffff	              call sym.pr_reference_type	      2713	prdbg.c	FUNCTION_79	IF_1	IF_2	CALL_1
0x4000c43	            0x85c0	                           test eax, eax	      2713	prdbg.c	FUNCTION_79	IF_1	IF_2	CALL_1
0x4000c45	     0xf8484000000	                            je 0x4000ccf	      2713	prdbg.c	FUNCTION_79	IF_1	IF_2	CALL_1
0x4000c4b	          0x4c89e6	                            mov rsi, r12	      2717	prdbg.c	FUNCTION_79	IF_3	CALL_2
0x4000c4e	          0x4889df	                            mov rdi, rbx	      2717	prdbg.c	FUNCTION_79	IF_3	CALL_2
0x4000c51	      0xe874f9ffff	                call sym.substitute_type	      2717	prdbg.c	FUNCTION_79	IF_3	CALL_2
0x4000c56	            0x85c0	                           test eax, eax	      2717	prdbg.c	FUNCTION_79	IF_3	CALL_2
0x4000c58	            0x7475	                            je 0x4000ccf	      2717	prdbg.c	FUNCTION_79	IF_3	CALL_2
0x4000c5a	          0x4889df	                            mov rdi, rbx	      2720	prdbg.c	FUNCTION_79	CALL_3
0x4000c5d	      0xe823f5ffff	                       call sym.pop_type	      2720	prdbg.c	FUNCTION_79	CALL_3
0x4000c62	          0x4989c4	                            mov r12, rax	      2720	prdbg.c	FUNCTION_79	CALL_3
0x4000c65	          0x4885c0	                           test rax, rax	      2721	prdbg.c	FUNCTION_79	IF_4
0x4000c68	            0x7460	                            je 0x4000cca	      2721	prdbg.c	FUNCTION_79	IF_4
0x4000c6a	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      2724	prdbg.c	FUNCTION_79	IF_5
0x4000c6e	      0x4883781800	               cmp qword [rax + 0x18], 0	      2724	prdbg.c	FUNCTION_79	IF_5
0x4000c73	            0x7542	                           jne 0x4000cb7	      2724	prdbg.c	FUNCTION_79	IF_5
0x4000c75	        0x837b1801	               cmp dword [rbx + 0x18], 1	      2726	prdbg.c	FUNCTION_79	IF_5	IF_6	CALL_4
0x4000c79	            0x7411	                            je 0x4000c8c	      2726	prdbg.c	FUNCTION_79	IF_5	IF_6	CALL_4
0x4000c7b	      0xbe00000000	                              mov esi, 0	      2726	prdbg.c	FUNCTION_79	IF_5	IF_6	CALL_4
0x4000c80	          0x4889df	                            mov rdi, rbx	      2726	prdbg.c	FUNCTION_79	IF_5	IF_6	CALL_4
0x4000c83	      0xe89ff8ffff	                    call sym.append_type	      2726	prdbg.c	FUNCTION_79	IF_5	IF_6	CALL_4
0x4000c88	            0x85c0	                           test eax, eax	      2726	prdbg.c	FUNCTION_79	IF_5	IF_6	CALL_4
0x4000c8a	            0x7443	                            je 0x4000ccf	      2726	prdbg.c	FUNCTION_79	IF_5	IF_6	CALL_4
0x4000c8c	          0x83ed02	                              sub ebp, 2	      2729	prdbg.c	FUNCTION_79	IF_5	IF_7
0x4000c8f	    0xf7c5fdffffff	                    test ebp, 0xfffffffd	      2729	prdbg.c	FUNCTION_79	IF_5	IF_7
0x4000c95	            0x7511	                           jne 0x4000ca8	      2729	prdbg.c	FUNCTION_79	IF_5	IF_7
0x4000c97	      0xbe00000000	                              mov esi, 0	      2730	prdbg.c	FUNCTION_79	IF_5	IF_7	IF_8	CALL_5
0x4000c9c	          0x4889df	                            mov rdi, rbx	      2730	prdbg.c	FUNCTION_79	IF_5	IF_7	IF_8	CALL_5
0x4000c9f	      0xe883f8ffff	                    call sym.append_type	      2730	prdbg.c	FUNCTION_79	IF_5	IF_7	IF_8	CALL_5
0x4000ca4	            0x85c0	                           test eax, eax	      2730	prdbg.c	FUNCTION_79	IF_5	IF_7	IF_8	CALL_5
0x4000ca6	            0x7427	                            je 0x4000ccf	      2730	prdbg.c	FUNCTION_79	IF_5	IF_7	IF_8	CALL_5
0x4000ca8	          0x4c89e6	                            mov rsi, r12	      2733	prdbg.c	FUNCTION_79	IF_5	IF_9	CALL_6
0x4000cab	          0x4889df	                            mov rdi, rbx	      2733	prdbg.c	FUNCTION_79	IF_5	IF_9	CALL_6
0x4000cae	      0xe874f8ffff	                    call sym.append_type	      2733	prdbg.c	FUNCTION_79	IF_5	IF_9	CALL_6
0x4000cb3	            0x85c0	                           test eax, eax	      2733	prdbg.c	FUNCTION_79	IF_5	IF_9	CALL_6
0x4000cb5	            0x7418	                            je 0x4000ccf	      2733	prdbg.c	FUNCTION_79	IF_5	IF_9	CALL_6
0x4000cb7	          0x4c89e7	                            mov rdi, r12	      2737	prdbg.c	FUNCTION_79	CALL_7
0x4000cba	      0xe800000000	                          call 0x4000cbf	      2737	prdbg.c	FUNCTION_79	CALL_7
0x4000cbf	        0x83431801	               add dword [rbx + 0x18], 1	      2739	prdbg.c	FUNCTION_79
0x4000cc3	      0xb801000000	                              mov eax, 1	      2741	prdbg.c	FUNCTION_79
0x4000cc8	            0xeb05	                           jmp 0x4000ccf	      2741	prdbg.c	FUNCTION_79
0x4000cca	      0xb800000000	                              mov eax, 0	      2722	prdbg.c	FUNCTION_79	IF_4
0x4000ccf	              0x5b	                                 pop rbx	      2742	prdbg.c	FUNCTION_79
0x4000cd0	              0x5d	                                 pop rbp	      2742	prdbg.c	FUNCTION_79
0x4000cd1	            0x415c	                                 pop r12	      2742	prdbg.c	FUNCTION_79
0x4000cd3	              0xc3	                                     ret	      2742	prdbg.c	FUNCTION_79
append_parent	IF,1:WHILE,0:ELSE,0:CALL,5:FOR,0:functions,0:SWITCH,0:DO,0	53
0x4000cd4	          0x4885f6	                           test rsi, rsi	       397	prdbg.c	FUNCTION_6	IF_1
0x4000cd7	     0xf849a000000	                            je 0x4000d77	       397	prdbg.c	FUNCTION_6	IF_1
0x4000cdd	            0x4155	                                push r13	       394	prdbg.c	FUNCTION_6
0x4000cdf	            0x4154	                                push r12	       394	prdbg.c	FUNCTION_6
0x4000ce1	              0x55	                                push rbp	       394	prdbg.c	FUNCTION_6
0x4000ce2	              0x53	                                push rbx	       394	prdbg.c	FUNCTION_6
0x4000ce3	        0x4883ec08	                              sub rsp, 8	       394	prdbg.c	FUNCTION_6
0x4000ce7	          0x4889f5	                            mov rbp, rsi	       394	prdbg.c	FUNCTION_6
0x4000cea	          0x4989fc	                            mov r12, rdi	       394	prdbg.c	FUNCTION_6
0x4000ced	        0x4c8b6f10	            mov r13, qword [rdi + 0x10] 	       400	prdbg.c	FUNCTION_6	CALL_1
0x4000cf1	          0x4d85ed	                           test r13, r13	       400	prdbg.c	FUNCTION_6	CALL_1
0x4000cf4	            0x7519	                           jne 0x4000d0f	       400	prdbg.c	FUNCTION_6	CALL_1
0x4000cf6	      0xb900000000	                              mov ecx, 0	       400	prdbg.c	FUNCTION_6	CALL_1
0x4000cfb	      0xba90010000	                          mov edx, 0x190	       400	prdbg.c	FUNCTION_6	CALL_1
0x4000d00	      0xbe00000000	                              mov esi, 0	       400	prdbg.c	FUNCTION_6	CALL_1
0x4000d05	      0xbf00000000	                              mov edi, 0	       400	prdbg.c	FUNCTION_6	CALL_1
0x4000d0a	      0xe800000000	                          call 0x4000d0f	       400	prdbg.c	FUNCTION_6	CALL_1
0x4000d0f	        0x498b5528	            mov rdx, qword [r13 + 0x28] 	       402	prdbg.c	FUNCTION_6	CALL_2
0x4000d13	          0x4885d2	                           test rdx, rdx	       402	prdbg.c	FUNCTION_6	CALL_2
0x4000d16	            0x7419	                            je 0x4000d31	       402	prdbg.c	FUNCTION_6	CALL_2
0x4000d18	      0xb800000000	                              mov eax, 0	       402	prdbg.c	FUNCTION_6	CALL_2
0x4000d1d	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       402	prdbg.c	FUNCTION_6	CALL_2
0x4000d24	          0x4889d7	                            mov rdi, rdx	       402	prdbg.c	FUNCTION_6	CALL_2
0x4000d27	            0xf2ae	              repne scasb al, byte [rdi]	       402	prdbg.c	FUNCTION_6	CALL_2
0x4000d29	          0x48f7d1	                                 not rcx	       402	prdbg.c	FUNCTION_6	CALL_2
0x4000d2c	          0x8d59ff	                      lea ebx, [rcx - 1]	       402	prdbg.c	FUNCTION_6	CALL_2
0x4000d2f	            0xeb05	                           jmp 0x4000d36	       402	prdbg.c	FUNCTION_6	CALL_2
0x4000d31	      0xbb00000000	                              mov ebx, 0	       402	prdbg.c	FUNCTION_6	CALL_2
0x4000d36	            0x89db	                            mov ebx, ebx	       404	prdbg.c	FUNCTION_6	CALL_4
0x4000d38	      0xb800000000	                              mov eax, 0	       404	prdbg.c	FUNCTION_6	CALL_4
0x4000d3d	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       404	prdbg.c	FUNCTION_6	CALL_4
0x4000d44	          0x4889ef	                            mov rdi, rbp	       404	prdbg.c	FUNCTION_6	CALL_4
0x4000d47	            0xf2ae	              repne scasb al, byte [rdi]	       404	prdbg.c	FUNCTION_6	CALL_4
0x4000d49	          0x48f7d1	                                 not rcx	       404	prdbg.c	FUNCTION_6	CALL_4
0x4000d4c	        0x488d3419	                    lea rsi, [rcx + rbx]	       403	prdbg.c	FUNCTION_6	CALL_3
0x4000d50	          0x4889d7	                            mov rdi, rdx	       403	prdbg.c	FUNCTION_6	CALL_3
0x4000d53	      0xe800000000	                          call 0x4000d58	       403	prdbg.c	FUNCTION_6	CALL_3
0x4000d58	        0x49894528	             mov qword [r13 + 0x28], rax	       403	prdbg.c	FUNCTION_6	CALL_3
0x4000d5c	      0x498b442410	            mov rax, qword [r12 + 0x10] 	       405	prdbg.c	FUNCTION_6	CALL_5
0x4000d61	        0x48035828	             add rbx, qword [rax + 0x28]	       110	string3.h	FUNCTION_107	CALL_3
0x4000d65	          0x4889df	                            mov rdi, rbx	       110	string3.h	FUNCTION_107	CALL_3
0x4000d68	          0x4889ee	                            mov rsi, rbp	       110	string3.h	FUNCTION_107	CALL_3
0x4000d6b	      0xe800000000	                          call 0x4000d70	       110	string3.h	FUNCTION_107	CALL_3
0x4000d70	      0xb801000000	                              mov eax, 1	       407	prdbg.c	FUNCTION_6
0x4000d75	            0xeb06	                           jmp 0x4000d7d	       407	prdbg.c	FUNCTION_6
0x4000d77	      0xb800000000	                              mov eax, 0	       398	prdbg.c	FUNCTION_6	IF_1
0x4000d7c	              0xc3	                                     ret	       398	prdbg.c	FUNCTION_6	IF_1
0x4000d7d	        0x4883c408	                              add rsp, 8	       408	prdbg.c	FUNCTION_6
0x4000d81	              0x5b	                                 pop rbx	       408	prdbg.c	FUNCTION_6
0x4000d82	              0x5d	                                 pop rbp	       408	prdbg.c	FUNCTION_6
0x4000d83	            0x415c	                                 pop r12	       408	prdbg.c	FUNCTION_6
0x4000d85	            0x415d	                                 pop r13	       408	prdbg.c	FUNCTION_6
0x4000d87	              0xc3	                                     ret	       408	prdbg.c	FUNCTION_6
pr_fix_visibility	IF,2:WHILE,0:ELSE,0:CALL,7:FOR,0:functions,0:SWITCH,1:DO,0	70
0x4000d88	              0x55	                                push rbp	      1100	prdbg.c	FUNCTION_31
0x4000d89	              0x53	                                push rbx	      1100	prdbg.c	FUNCTION_31
0x4000d8a	        0x4883ec08	                              sub rsp, 8	      1100	prdbg.c	FUNCTION_31
0x4000d8e	        0x488b4710	            mov rax, qword [rdi + 0x10] 	      1105	prdbg.c	FUNCTION_31	CALL_1
0x4000d92	          0x4885c0	                           test rax, rax	      1105	prdbg.c	FUNCTION_31	CALL_1
0x4000d95	            0x7519	                           jne 0x4000db0	      1105	prdbg.c	FUNCTION_31	CALL_1
0x4000d97	      0xb900000000	                              mov ecx, 0	      1105	prdbg.c	FUNCTION_31	CALL_1
0x4000d9c	      0xba51040000	                          mov edx, 0x451	      1105	prdbg.c	FUNCTION_31	CALL_1
0x4000da1	      0xbe00000000	                              mov esi, 0	      1105	prdbg.c	FUNCTION_31	CALL_1
0x4000da6	      0xbf00000000	                              mov edi, 0	      1105	prdbg.c	FUNCTION_31	CALL_1
0x4000dab	      0xe800000000	                          call 0x4000db0	      1105	prdbg.c	FUNCTION_31	CALL_1
0x4000db0	          0x4889fd	                            mov rbp, rdi	      1105	prdbg.c	FUNCTION_31	CALL_1
0x4000db3	            0x89f3	                            mov ebx, esi	      1105	prdbg.c	FUNCTION_31	CALL_1
0x4000db5	          0x397010	            cmp dword [rax + 0x10], esi 	      1107	prdbg.c	FUNCTION_31	IF_1
0x4000db8	     0xf84ab000000	                            je 0x4000e69	      1107	prdbg.c	FUNCTION_31	IF_1
0x4000dbe	          0x83fe01	                              cmp esi, 1	      1110	prdbg.c	FUNCTION_31	SWITCH_1
0x4000dc1	            0x742b	                            je 0x4000dee	      1110	prdbg.c	FUNCTION_31	SWITCH_1
0x4000dc3	          0x83fe01	                              cmp esi, 1	      1110	prdbg.c	FUNCTION_31	SWITCH_1
0x4000dc6	            0x721f	                            jb 0x4000de7	      1110	prdbg.c	FUNCTION_31	SWITCH_1
0x4000dc8	          0x83fe02	                              cmp esi, 2	      1110	prdbg.c	FUNCTION_31	SWITCH_1
0x4000dcb	            0x7407	                            je 0x4000dd4	      1110	prdbg.c	FUNCTION_31	SWITCH_1
0x4000dcd	          0x83fe03	                              cmp esi, 3	      1110	prdbg.c	FUNCTION_31	SWITCH_1
0x4000dd0	            0x7409	                            je 0x4000ddb	      1110	prdbg.c	FUNCTION_31	SWITCH_1
0x4000dd2	            0xeb0e	                           jmp 0x4000de2	      1110	prdbg.c	FUNCTION_31	SWITCH_1
0x4000dd4	      0xbe00000000	                              mov esi, 0	      1116	prdbg.c	FUNCTION_31	SWITCH_1
0x4000dd9	            0xeb18	                           jmp 0x4000df3	      1116	prdbg.c	FUNCTION_31	SWITCH_1
0x4000ddb	      0xbe00000000	                              mov esi, 0	      1122	prdbg.c	FUNCTION_31	SWITCH_1
0x4000de0	            0xeb11	                           jmp 0x4000df3	      1123	prdbg.c	FUNCTION_31	SWITCH_1
0x4000de2	      0xe800000000	                          call 0x4000de7	      1125	prdbg.c	FUNCTION_31	SWITCH_1	CALL_2
0x4000de7	      0xbe00000000	                              mov esi, 0	      1113	prdbg.c	FUNCTION_31	SWITCH_1
0x4000dec	            0xeb05	                           jmp 0x4000df3	      1113	prdbg.c	FUNCTION_31	SWITCH_1
0x4000dee	      0xbe00000000	                              mov esi, 0	      1119	prdbg.c	FUNCTION_31	SWITCH_1
0x4000df3	        0x488b5008	                mov rdx, qword [rax + 8]	      1132	prdbg.c	FUNCTION_31
0x4000df7	      0xb800000000	                              mov eax, 0	      1133	prdbg.c	FUNCTION_31	CALL_3
0x4000dfc	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1133	prdbg.c	FUNCTION_31	CALL_3
0x4000e03	          0x4889d7	                            mov rdi, rdx	      1133	prdbg.c	FUNCTION_31	CALL_3
0x4000e06	            0xf2ae	              repne scasb al, byte [rdi]	      1133	prdbg.c	FUNCTION_31	CALL_3
0x4000e08	          0x48f7d1	                                 not rcx	      1133	prdbg.c	FUNCTION_31	CALL_3
0x4000e0b	          0x8d79fe	                      lea edi, [rcx - 2]	      1134	prdbg.c	FUNCTION_31	CALL_4
0x4000e0e	          0x4801d7	                            add rdi, rdx	      1134	prdbg.c	FUNCTION_31	CALL_4
0x4000e11	          0x803f20	                    cmp byte [rdi], 0x20	      1134	prdbg.c	FUNCTION_31	CALL_4
0x4000e14	            0x7419	                            je 0x4000e2f	      1134	prdbg.c	FUNCTION_31	CALL_4
0x4000e16	      0xb900000000	                              mov ecx, 0	      1134	prdbg.c	FUNCTION_31	CALL_4
0x4000e1b	      0xba6e040000	                          mov edx, 0x46e	      1134	prdbg.c	FUNCTION_31	CALL_4
0x4000e20	      0xbe00000000	                              mov esi, 0	      1134	prdbg.c	FUNCTION_31	CALL_4
0x4000e25	      0xbf00000000	                              mov edi, 0	      1134	prdbg.c	FUNCTION_31	CALL_4
0x4000e2a	      0xe800000000	                          call 0x4000e2f	      1134	prdbg.c	FUNCTION_31	CALL_4
0x4000e2f	          0xc60700	                       mov byte [rdi], 0	      1135	prdbg.c	FUNCTION_31
0x4000e32	          0x4889ef	                            mov rdi, rbp	      1137	prdbg.c	FUNCTION_31	IF_2	CALL_5
0x4000e35	      0xe8edf6ffff	                    call sym.append_type	      1137	prdbg.c	FUNCTION_31	IF_2	CALL_5
0x4000e3a	            0x85c0	                           test eax, eax	      1137	prdbg.c	FUNCTION_31	IF_2	CALL_5
0x4000e3c	            0x7430	                            je 0x4000e6e	      1137	prdbg.c	FUNCTION_31	IF_2	CALL_5
0x4000e3e	      0xbe00000000	                              mov esi, 0	      1138	prdbg.c	FUNCTION_31	IF_2	CALL_6
0x4000e43	          0x4889ef	                            mov rdi, rbp	      1138	prdbg.c	FUNCTION_31	IF_2	CALL_6
0x4000e46	      0xe8dcf6ffff	                    call sym.append_type	      1138	prdbg.c	FUNCTION_31	IF_2	CALL_6
0x4000e4b	            0x85c0	                           test eax, eax	      1138	prdbg.c	FUNCTION_31	IF_2	CALL_6
0x4000e4d	            0x741f	                            je 0x4000e6e	      1138	prdbg.c	FUNCTION_31	IF_2	CALL_6
0x4000e4f	          0x4889ef	                            mov rdi, rbp	      1139	prdbg.c	FUNCTION_31	IF_2	CALL_7
0x4000e52	      0xe8b9fcffff	                    call sym.indent_type	      1139	prdbg.c	FUNCTION_31	IF_2	CALL_7
0x4000e57	            0x85c0	                           test eax, eax	      1139	prdbg.c	FUNCTION_31	IF_2	CALL_7
0x4000e59	            0x7413	                            je 0x4000e6e	      1139	prdbg.c	FUNCTION_31	IF_2	CALL_7
0x4000e5b	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      1142	prdbg.c	FUNCTION_31
0x4000e5f	          0x895810	             mov dword [rax + 0x10], ebx	      1142	prdbg.c	FUNCTION_31
0x4000e62	      0xb801000000	                              mov eax, 1	      1144	prdbg.c	FUNCTION_31
0x4000e67	            0xeb05	                           jmp 0x4000e6e	      1144	prdbg.c	FUNCTION_31
0x4000e69	      0xb801000000	                              mov eax, 1	      1108	prdbg.c	FUNCTION_31	IF_1
0x4000e6e	        0x4883c408	                              add rsp, 8	      1145	prdbg.c	FUNCTION_31
0x4000e72	              0x5b	                                 pop rbx	      1145	prdbg.c	FUNCTION_31
0x4000e73	              0x5d	                                 pop rbp	      1145	prdbg.c	FUNCTION_31
0x4000e74	              0xc3	                                     ret	      1145	prdbg.c	FUNCTION_31
tg_lineno	IF,0:WHILE,0:ELSE,0:CALL,0:FOR,0:functions,0:SWITCH,0:DO,0	2
0x40000bd	      0xb801000000	                              mov eax, 1	      2802	prdbg.c	FUNCTION_81
0x40000c2	              0xc3	                                     ret	      2802	prdbg.c	FUNCTION_81
tg_start_block	IF,6:WHILE,0:ELSE,1:CALL,8:FOR,0:functions,0:SWITCH,0:DO,0	118
0x40028a3	            0x4155	                                push r13	      2748	prdbg.c	FUNCTION_80
0x40028a5	            0x4154	                                push r12	      2748	prdbg.c	FUNCTION_80
0x40028a7	              0x55	                                push rbp	      2748	prdbg.c	FUNCTION_80
0x40028a8	              0x53	                                push rbx	      2748	prdbg.c	FUNCTION_80
0x40028a9	        0x4883ec28	                           sub rsp, 0x28	      2748	prdbg.c	FUNCTION_80
0x40028ad	    0x64488b042528	                mov rax, qword fs:[0x28]	      2748	prdbg.c	FUNCTION_80
0x40028b6	      0x4889442418	             mov qword [rsp + 0x18], rax	      2748	prdbg.c	FUNCTION_80
0x40028bb	            0x31c0	                            xor eax, eax	      2748	prdbg.c	FUNCTION_80
0x40028bd	      0xb801000000	                              mov eax, 1	      2791	prdbg.c	FUNCTION_80
0x40028c2	        0x837f1800	               cmp dword [rdi + 0x18], 0	      2754	prdbg.c	FUNCTION_80	IF_1
0x40028c6	     0xf8e9e010000	                           jle 0x4002a6a	      2754	prdbg.c	FUNCTION_80	IF_1
0x40028cc	          0x4889fb	                            mov rbx, rdi	      2754	prdbg.c	FUNCTION_80	IF_1
0x40028cf	          0x4889f5	                            mov rbp, rsi	      2754	prdbg.c	FUNCTION_80	IF_1
0x40028d2	    0xc74718000000	               mov dword [rdi + 0x18], 0	      2756	prdbg.c	FUNCTION_80	IF_1
0x40028d9	        0x488b4710	            mov rax, qword [rdi + 0x10] 	      2759	prdbg.c	FUNCTION_80	IF_1
0x40028dd	        0x488b4828	            mov rcx, qword [rax + 0x28] 	        97	stdio2.h	CALL_93
0x40028e1	        0x4c8b4720	              mov r8, qword [rdi + 0x20]	        97	stdio2.h	CALL_93
0x40028e5	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_93
0x40028ea	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_93
0x40028ef	          0x488b3f	                    mov rdi, qword [rdi]	        97	stdio2.h	CALL_93
0x40028f2	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_93
0x40028f7	      0xe800000000	                          call 0x40028fc	        97	stdio2.h	CALL_93
0x40028fc	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      2760	prdbg.c	FUNCTION_80	IF_1	CALL_1
0x4002900	        0x488b7828	            mov rdi, qword [rax + 0x28] 	      2760	prdbg.c	FUNCTION_80	IF_1	CALL_1
0x4002904	      0xe800000000	                          call 0x4002909	      2760	prdbg.c	FUNCTION_80	IF_1	CALL_1
0x4002909	          0x4989e8	                             mov r8, rbp	        33	stdio2.h	FUNCTION_84	CALL_1
0x400290c	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x4002911	      0xba16000000	                           mov edx, 0x16	        33	stdio2.h	FUNCTION_84	CALL_1
0x4002916	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_84	CALL_1
0x400291b	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_84	CALL_1
0x400291e	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x4002923	      0xe800000000	                          call 0x4002928	        33	stdio2.h	FUNCTION_84	CALL_1
0x4002928	        0x4c8b6b30	            mov r13, qword [rbx + 0x30] 	      2763	prdbg.c	FUNCTION_80	IF_1	CALL_3
0x400292c	          0x488b2b	                    mov rbp, qword [rbx]	      2763	prdbg.c	FUNCTION_80	IF_1	CALL_3
0x400292f	        0x4c8b6328	            mov r12, qword [rbx + 0x28] 	      2763	prdbg.c	FUNCTION_80	IF_1	CALL_3
0x4002933	      0xba10000000	                           mov edx, 0x10	      1949	prdbg.c	FUNCTION_57	CALL_1
0x4002938	      0xbe00000000	                              mov esi, 0	      1949	prdbg.c	FUNCTION_57	CALL_1
0x400293d	          0x4889e7	                            mov rdi, rsp	      1949	prdbg.c	FUNCTION_57	CALL_1
0x4002940	      0xe800000000	                          call 0x4002945	      1949	prdbg.c	FUNCTION_57	CALL_1
0x4002945	    0x488905000000	            mov qword [0x0400294c], rax 	      1949	prdbg.c	FUNCTION_57	CALL_1
0x400294c	    0xc70500000000	               mov dword [0x04002956], 0	      1950	prdbg.c	FUNCTION_57
0x4002956	          0x4c89ea	                            mov rdx, r13	      1951	prdbg.c	FUNCTION_57	CALL_2
0x4002959	      0xbe00000000	                              mov esi, 0	      1951	prdbg.c	FUNCTION_57	CALL_2
0x400295e	          0x4c89e7	                            mov rdi, r12	      1951	prdbg.c	FUNCTION_57	CALL_2
0x4002961	      0xe800000000	                          call 0x4002966	      1951	prdbg.c	FUNCTION_57	CALL_2
0x4002966	    0x833d00000000	               cmp dword [0x0400296d], 0	      1953	prdbg.c	FUNCTION_57	IF_1
0x400296d	            0x7519	                           jne 0x4002988	      1953	prdbg.c	FUNCTION_57	IF_1
0x400296f	          0x4889e9	                            mov rcx, rbp	        97	stdio2.h	CALL_93
0x4002972	      0xba02000000	                              mov edx, 2	        97	stdio2.h	CALL_93
0x4002977	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_93
0x400297c	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_93
0x4002981	      0xe800000000	                          call 0x4002986	        97	stdio2.h	CALL_93
0x4002986	            0xeb1d	                           jmp 0x40029a5	        97	stdio2.h	CALL_93
0x4002988	    0x8b0d00000000	            mov ecx, dword [0x0400298e] 	        97	stdio2.h	CALL_93
0x400298e	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_93
0x4002993	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_93
0x4002998	          0x4889ef	                            mov rdi, rbp	        97	stdio2.h	CALL_93
0x400299b	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_93
0x40029a0	      0xe800000000	                          call 0x40029a5	        97	stdio2.h	CALL_93
0x40029a5	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      2764	prdbg.c	FUNCTION_80	IF_1
0x40029a9	        0x4c8b6820	            mov r13, qword [rax + 0x20] 	      2764	prdbg.c	FUNCTION_80	IF_1
0x40029ad	        0x488b6818	            mov rbp, qword [rax + 0x18] 	      2765	prdbg.c	FUNCTION_80	IF_1	IF_2
0x40029b1	          0x4885ed	                           test rbp, rbp	      2765	prdbg.c	FUNCTION_80	IF_1	IF_2
0x40029b4	            0x7419	                            je 0x40029cf	      2765	prdbg.c	FUNCTION_80	IF_1	IF_2
0x40029b6	    0x41bc6d000000	                          mov r12d, 0x6d	      2767	prdbg.c	FUNCTION_80	IF_1	IF_2
0x40029bc	        0x807d0000	                       cmp byte [rbp], 0	      2765	prdbg.c	FUNCTION_80	IF_1	IF_2
0x40029c0	            0x7528	                           jne 0x40029ea	      2765	prdbg.c	FUNCTION_80	IF_1	IF_2
0x40029c2	      0xbd00000000	                              mov ebp, 0	      2773	prdbg.c	FUNCTION_80	IF_1	ELSE_1
0x40029c7	    0x41bc66000000	                          mov r12d, 0x66	      2772	prdbg.c	FUNCTION_80	IF_1	ELSE_1
0x40029cd	            0xeb1b	                           jmp 0x40029ea	      2772	prdbg.c	FUNCTION_80	IF_1	ELSE_1
0x40029cf	      0xbe00000000	                              mov esi, 0	      2774	prdbg.c	FUNCTION_80	IF_1	ELSE_1	IF_3	CALL_4
0x40029d4	          0x4889df	                            mov rdi, rbx	      2774	prdbg.c	FUNCTION_80	IF_1	ELSE_1	IF_3	CALL_4
0x40029d7	      0xe84bdbffff	                    call sym.append_type	      2774	prdbg.c	FUNCTION_80	IF_1	ELSE_1	IF_3	CALL_4
0x40029dc	            0x85c0	                           test eax, eax	      2774	prdbg.c	FUNCTION_80	IF_1	ELSE_1	IF_3	CALL_4
0x40029de	     0xf8486000000	                            je 0x4002a6a	      2774	prdbg.c	FUNCTION_80	IF_1	ELSE_1	IF_3	CALL_4
0x40029e4	    0x41bc66000000	                          mov r12d, 0x66	      2772	prdbg.c	FUNCTION_80	IF_1	ELSE_1
0x40029ea	          0x4889df	                            mov rdi, rbx	      2777	prdbg.c	FUNCTION_80	IF_1	CALL_5
0x40029ed	      0xe893d7ffff	                       call sym.pop_type	      2777	prdbg.c	FUNCTION_80	IF_1	CALL_5
0x40029f2	          0x4989c0	                             mov r8, rax	      2777	prdbg.c	FUNCTION_80	IF_1	CALL_5
0x40029f5	      0xb800000000	                              mov eax, 0	      2779	prdbg.c	FUNCTION_80	IF_1	IF_4
0x40029fa	          0x4d85c0	                             test r8, r8	      2778	prdbg.c	FUNCTION_80	IF_1	IF_4
0x40029fd	            0x746b	                            je 0x4002a6a	      2778	prdbg.c	FUNCTION_80	IF_1	IF_4
0x40029ff	        0x410fbecc	                         movsx ecx, r12b	        97	stdio2.h	CALL_93
0x4002a03	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_93
0x4002a08	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_93
0x4002a0d	          0x488b3b	                    mov rdi, qword [rbx]	        97	stdio2.h	CALL_93
0x4002a10	      0xe800000000	                          call 0x4002a15	        97	stdio2.h	CALL_93
0x4002a15	          0x4d85ed	                           test r13, r13	      2781	prdbg.c	FUNCTION_80	IF_1	IF_5
0x4002a18	            0x7417	                            je 0x4002a31	      2781	prdbg.c	FUNCTION_80	IF_1	IF_5
0x4002a1a	          0x488b0b	                    mov rcx, qword [rbx]	      2782	prdbg.c	FUNCTION_80	IF_1	CALL_6
0x4002a1d	      0xba06000000	                              mov edx, 6	      2782	prdbg.c	FUNCTION_80	IF_1	CALL_6
0x4002a22	      0xbe01000000	                              mov esi, 1	      2782	prdbg.c	FUNCTION_80	IF_1	CALL_6
0x4002a27	      0xbf00000000	                              mov edi, 0	      2782	prdbg.c	FUNCTION_80	IF_1	CALL_6
0x4002a2c	      0xe800000000	                          call 0x4002a31	      2782	prdbg.c	FUNCTION_80	IF_1	CALL_6
0x4002a31	          0x4885ed	                           test rbp, rbp	      2783	prdbg.c	FUNCTION_80	IF_1	IF_6
0x4002a34	            0x7422	                            je 0x4002a58	      2783	prdbg.c	FUNCTION_80	IF_1	IF_6
0x4002a36	          0x4889e9	                            mov rcx, rbp	        97	stdio2.h	CALL_93
0x4002a39	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_93
0x4002a3e	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_93
0x4002a43	          0x488b3b	                    mov rdi, qword [rbx]	        97	stdio2.h	CALL_93
0x4002a46	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_93
0x4002a4b	      0xe800000000	                          call 0x4002a50	        97	stdio2.h	CALL_93
0x4002a50	          0x4889ef	                            mov rdi, rbp	      2786	prdbg.c	FUNCTION_80	IF_1	IF_6	CALL_7
0x4002a53	      0xe800000000	                          call 0x4002a58	      2786	prdbg.c	FUNCTION_80	IF_1	IF_6	CALL_7
0x4002a58	          0x488b33	                    mov rsi, qword [rbx]	      2788	prdbg.c	FUNCTION_80	IF_1	CALL_8
0x4002a5b	      0xbf0a000000	                            mov edi, 0xa	      2788	prdbg.c	FUNCTION_80	IF_1	CALL_8
0x4002a60	      0xe800000000	                          call 0x4002a65	      2788	prdbg.c	FUNCTION_80	IF_1	CALL_8
0x4002a65	      0xb801000000	                              mov eax, 1	      2791	prdbg.c	FUNCTION_80
0x4002a6a	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      2792	prdbg.c	FUNCTION_80
0x4002a6f	    0x644833142528	                xor rdx, qword fs:[0x28]	      2792	prdbg.c	FUNCTION_80
0x4002a78	            0x7405	                            je 0x4002a7f	      2792	prdbg.c	FUNCTION_80
0x4002a7a	      0xe800000000	                          call 0x4002a7f	      2792	prdbg.c	FUNCTION_80
0x4002a7f	        0x4883c428	                           add rsp, 0x28	      2792	prdbg.c	FUNCTION_80
0x4002a83	              0x5b	                                 pop rbx	      2792	prdbg.c	FUNCTION_80
0x4002a84	              0x5d	                                 pop rbp	      2792	prdbg.c	FUNCTION_80
0x4002a85	            0x415c	                                 pop r12	      2792	prdbg.c	FUNCTION_80
0x4002a87	            0x415d	                                 pop r13	      2792	prdbg.c	FUNCTION_80
0x4002a89	              0xc3	                                     ret	      2792	prdbg.c	FUNCTION_80
pr_start_function	IF,3:WHILE,0:ELSE,0:CALL,3:FOR,0:functions,0:SWITCH,0:DO,0	35
0x400072c	            0x4154	                                push r12	      1785	prdbg.c	FUNCTION_50
0x400072e	              0x55	                                push rbp	      1785	prdbg.c	FUNCTION_50
0x400072f	              0x53	                                push rbx	      1785	prdbg.c	FUNCTION_50
0x4000730	          0x4889fb	                            mov rbx, rdi	      1785	prdbg.c	FUNCTION_50
0x4000733	            0x89d5	                            mov ebp, edx	      1785	prdbg.c	FUNCTION_50
0x4000735	      0xe890feffff	                call sym.substitute_type	      1789	prdbg.c	FUNCTION_50	IF_1	CALL_1
0x400073a	            0x85c0	                           test eax, eax	      1789	prdbg.c	FUNCTION_50	IF_1	CALL_1
0x400073c	            0x745e	                            je 0x400079c	      1789	prdbg.c	FUNCTION_50	IF_1	CALL_1
0x400073e	          0x4889df	                            mov rdi, rbx	      1792	prdbg.c	FUNCTION_50	CALL_2
0x4000741	      0xe83ffaffff	                       call sym.pop_type	      1792	prdbg.c	FUNCTION_50	CALL_2
0x4000746	          0x4989c4	                            mov r12, rax	      1792	prdbg.c	FUNCTION_50	CALL_2
0x4000749	      0xb800000000	                              mov eax, 0	      1794	prdbg.c	FUNCTION_50	IF_2
0x400074e	          0x4d85e4	                           test r12, r12	      1793	prdbg.c	FUNCTION_50	IF_2
0x4000751	            0x7449	                            je 0x400079c	      1793	prdbg.c	FUNCTION_50	IF_2
0x4000753	          0x4889df	                            mov rdi, rbx	      1796	prdbg.c	FUNCTION_50	CALL_3
0x4000756	      0xe86ef9ffff	                         call sym.indent	      1796	prdbg.c	FUNCTION_50	CALL_3
0x400075b	            0x85ed	                           test ebp, ebp	      1797	prdbg.c	FUNCTION_50	IF_3
0x400075d	            0x7517	                           jne 0x4000776	      1797	prdbg.c	FUNCTION_50	IF_3
0x400075f	          0x488b0b	                    mov rcx, qword [rbx]	        97	stdio2.h	CALL_93
0x4000762	      0xba07000000	                              mov edx, 7	        97	stdio2.h	CALL_93
0x4000767	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_93
0x400076c	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_93
0x4000771	      0xe800000000	                          call 0x4000776	        97	stdio2.h	CALL_93
0x4000776	          0x4c89e1	                            mov rcx, r12	        97	stdio2.h	CALL_93
0x4000779	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_93
0x400077e	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_93
0x4000783	          0x488b3b	                    mov rdi, qword [rbx]	        97	stdio2.h	CALL_93
0x4000786	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_93
0x400078b	      0xe800000000	                          call 0x4000790	        97	stdio2.h	CALL_93
0x4000790	    0xc74318010000	               mov dword [rbx + 0x18], 1	      1801	prdbg.c	FUNCTION_50
0x4000797	      0xb801000000	                              mov eax, 1	      1803	prdbg.c	FUNCTION_50
0x400079c	              0x5b	                                 pop rbx	      1804	prdbg.c	FUNCTION_50
0x400079d	              0x5d	                                 pop rbp	      1804	prdbg.c	FUNCTION_50
0x400079e	            0x415c	                                 pop r12	      1804	prdbg.c	FUNCTION_50
0x40007a0	              0xc3	                                     ret	      1804	prdbg.c	FUNCTION_50
pr_class_method_variant	IF,14:WHILE,0:ELSE,1:CALL,20:FOR,0:functions,0:SWITCH,0:DO,0	162
0x4003374	            0x4157	                                push r15	      1444	prdbg.c	FUNCTION_38
0x4003376	            0x4156	                                push r14	      1444	prdbg.c	FUNCTION_38
0x4003378	            0x4155	                                push r13	      1444	prdbg.c	FUNCTION_38
0x400337a	            0x4154	                                push r12	      1444	prdbg.c	FUNCTION_38
0x400337c	              0x55	                                push rbp	      1444	prdbg.c	FUNCTION_38
0x400337d	              0x53	                                push rbx	      1444	prdbg.c	FUNCTION_38
0x400337e	        0x4883ec28	                           sub rsp, 0x28	      1444	prdbg.c	FUNCTION_38
0x4003382	    0x64488b042528	                mov rax, qword fs:[0x28]	      1444	prdbg.c	FUNCTION_38
0x400338b	      0x4889442418	             mov qword [rsp + 0x18], rax	      1444	prdbg.c	FUNCTION_38
0x4003390	            0x31c0	                            xor eax, eax	      1444	prdbg.c	FUNCTION_38
0x4003392	        0x488b4710	            mov rax, qword [rdi + 0x10] 	      1449	prdbg.c	FUNCTION_38	CALL_1
0x4003396	          0x4885c0	                           test rax, rax	      1449	prdbg.c	FUNCTION_38	CALL_1
0x4003399	            0x7519	                           jne 0x40033b4	      1449	prdbg.c	FUNCTION_38	CALL_1
0x400339b	      0xb900000000	                              mov ecx, 0	      1449	prdbg.c	FUNCTION_38	CALL_1
0x40033a0	      0xbaa9050000	                          mov edx, 0x5a9	      1449	prdbg.c	FUNCTION_38	CALL_1
0x40033a5	      0xbe00000000	                              mov esi, 0	      1449	prdbg.c	FUNCTION_38	CALL_1
0x40033aa	      0xbf00000000	                              mov edi, 0	      1449	prdbg.c	FUNCTION_38	CALL_1
0x40033af	      0xe800000000	                          call 0x40033b4	      1449	prdbg.c	FUNCTION_38	CALL_1
0x40033b4	          0x4889fb	                            mov rbx, rdi	      1449	prdbg.c	FUNCTION_38	CALL_1
0x40033b7	          0x4989f4	                            mov r12, rsi	      1449	prdbg.c	FUNCTION_38	CALL_1
0x40033ba	            0x89d5	                            mov ebp, edx	      1449	prdbg.c	FUNCTION_38	CALL_1
0x40033bc	          0x4189ce	                           mov r14d, ecx	      1449	prdbg.c	FUNCTION_38	CALL_1
0x40033bf	          0x4d89cd	                             mov r13, r9	      1449	prdbg.c	FUNCTION_38	CALL_1
0x40033c2	        0x48833800	                      cmp qword [rax], 0	      1450	prdbg.c	FUNCTION_38	CALL_2
0x40033c6	            0x7519	                           jne 0x40033e1	      1450	prdbg.c	FUNCTION_38	CALL_2
0x40033c8	      0xb900000000	                              mov ecx, 0	      1450	prdbg.c	FUNCTION_38	CALL_2
0x40033cd	      0xbaaa050000	                          mov edx, 0x5aa	      1450	prdbg.c	FUNCTION_38	CALL_2
0x40033d2	      0xbe00000000	                              mov esi, 0	      1450	prdbg.c	FUNCTION_38	CALL_2
0x40033d7	      0xbf00000000	                              mov edi, 0	      1450	prdbg.c	FUNCTION_38	CALL_2
0x40033dc	      0xe800000000	                          call 0x40033e1	      1450	prdbg.c	FUNCTION_38	CALL_2
0x40033e1	          0x4585c0	                           test r8d, r8d	      1453	prdbg.c	FUNCTION_38	IF_1
0x40033e4	            0x7412	                            je 0x40033f8	      1453	prdbg.c	FUNCTION_38	IF_1
0x40033e6	      0xbe00000000	                              mov esi, 0	      1455	prdbg.c	FUNCTION_38	IF_1	IF_2	CALL_3
0x40033eb	      0xe837d1ffff	                    call sym.append_type	      1455	prdbg.c	FUNCTION_38	IF_1	IF_2	CALL_3
0x40033f0	            0x85c0	                           test eax, eax	      1455	prdbg.c	FUNCTION_38	IF_1	IF_2	CALL_3
0x40033f2	     0xf849d010000	                            je 0x4003595	      1455	prdbg.c	FUNCTION_38	IF_1	IF_2	CALL_3
0x40033f8	          0x4585f6	                         test r14d, r14d	      1458	prdbg.c	FUNCTION_38	IF_3
0x40033fb	            0x7415	                            je 0x4003412	      1458	prdbg.c	FUNCTION_38	IF_3
0x40033fd	      0xbe00000000	                              mov esi, 0	      1460	prdbg.c	FUNCTION_38	IF_3	IF_4	CALL_4
0x4003402	          0x4889df	                            mov rdi, rbx	      1460	prdbg.c	FUNCTION_38	IF_3	IF_4	CALL_4
0x4003405	      0xe81dd1ffff	                    call sym.append_type	      1460	prdbg.c	FUNCTION_38	IF_3	IF_4	CALL_4
0x400340a	            0x85c0	                           test eax, eax	      1460	prdbg.c	FUNCTION_38	IF_3	IF_4	CALL_4
0x400340c	     0xf8483010000	                            je 0x4003595	      1460	prdbg.c	FUNCTION_38	IF_3	IF_4	CALL_4
0x4003412	      0x837c246000	               cmp dword [rsp + 0x60], 0	      1465	prdbg.c	FUNCTION_38	IF_5	CALL_5
0x4003417	            0x7410	                            je 0x4003429	      1465	prdbg.c	FUNCTION_38	IF_5	CALL_5
0x4003419	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1467	prdbg.c	FUNCTION_38	IF_5
0x400341d	          0x488b00	                    mov rax, qword [rax]	      1467	prdbg.c	FUNCTION_38	IF_5
0x4003420	          0x488b00	                    mov rax, qword [rax]	      1465	prdbg.c	FUNCTION_38	IF_5	CALL_5
0x4003423	        0x488b7018	            mov rsi, qword [rax + 0x18] 	      1465	prdbg.c	FUNCTION_38	IF_5	CALL_5
0x4003427	            0xeb0b	                           jmp 0x4003434	      1465	prdbg.c	FUNCTION_38	IF_5	CALL_5
0x4003429	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1468	prdbg.c	FUNCTION_38	IF_5
0x400342d	          0x488b00	                    mov rax, qword [rax]	      1465	prdbg.c	FUNCTION_38	IF_5	CALL_5
0x4003430	        0x488b7018	            mov rsi, qword [rax + 0x18] 	      1465	prdbg.c	FUNCTION_38	IF_5	CALL_5
0x4003434	          0x4889df	                            mov rdi, rbx	      1465	prdbg.c	FUNCTION_38	IF_5	CALL_5
0x4003437	      0xe88ed1ffff	                call sym.substitute_type	      1465	prdbg.c	FUNCTION_38	IF_5	CALL_5
0x400343c	            0x85c0	                           test eax, eax	      1465	prdbg.c	FUNCTION_38	IF_5	CALL_5
0x400343e	     0xf8451010000	                            je 0x4003595	      1465	prdbg.c	FUNCTION_38	IF_5	CALL_5
0x4003444	          0x4889df	                            mov rdi, rbx	      1472	prdbg.c	FUNCTION_38	CALL_6
0x4003447	      0xe839cdffff	                       call sym.pop_type	      1472	prdbg.c	FUNCTION_38	CALL_6
0x400344c	          0x4989c6	                            mov r14, rax	      1472	prdbg.c	FUNCTION_38	CALL_6
0x400344f	          0x4885c0	                           test rax, rax	      1473	prdbg.c	FUNCTION_38	IF_6
0x4003452	     0xf8431010000	                            je 0x4003589	      1473	prdbg.c	FUNCTION_38	IF_6
0x4003458	      0x837c246000	               cmp dword [rsp + 0x60], 0	      1477	prdbg.c	FUNCTION_38	IF_7
0x400345d	            0x7415	                            je 0x4003474	      1477	prdbg.c	FUNCTION_38	IF_7
0x400345f	          0x4889df	                            mov rdi, rbx	      1481	prdbg.c	FUNCTION_38	ELSE_1	CALL_7
0x4003462	      0xe81ecdffff	                       call sym.pop_type	      1481	prdbg.c	FUNCTION_38	ELSE_1	CALL_7
0x4003467	          0x4989c7	                            mov r15, rax	      1481	prdbg.c	FUNCTION_38	ELSE_1	CALL_7
0x400346a	          0x4885c0	                           test rax, rax	      1482	prdbg.c	FUNCTION_38	ELSE_1	IF_8
0x400346d	            0x750b	                           jne 0x400347a	      1482	prdbg.c	FUNCTION_38	ELSE_1	IF_8
0x400346f	      0xe91c010000	                           jmp 0x4003590	      1482	prdbg.c	FUNCTION_38	ELSE_1	IF_8
0x4003474	    0x41bf00000000	                             mov r15d, 0	      1478	prdbg.c	FUNCTION_38	IF_7
0x400347a	            0x89ee	                            mov esi, ebp	      1488	prdbg.c	FUNCTION_38	IF_9	CALL_8
0x400347c	          0x4889df	                            mov rdi, rbx	      1488	prdbg.c	FUNCTION_38	IF_9	CALL_8
0x400347f	      0xe804d9ffff	              call sym.pr_fix_visibility	      1488	prdbg.c	FUNCTION_38	IF_9	CALL_8
0x4003484	            0x85c0	                           test eax, eax	      1488	prdbg.c	FUNCTION_38	IF_9	CALL_8
0x4003486	     0xf8409010000	                            je 0x4003595	      1488	prdbg.c	FUNCTION_38	IF_9	CALL_8
0x400348c	          0x4c89f6	                            mov rsi, r14	      1491	prdbg.c	FUNCTION_38	IF_10	CALL_9
0x400348f	          0x4889df	                            mov rdi, rbx	      1491	prdbg.c	FUNCTION_38	IF_10	CALL_9
0x4003492	      0xe890d0ffff	                    call sym.append_type	      1491	prdbg.c	FUNCTION_38	IF_10	CALL_9
0x4003497	            0x85c0	                           test eax, eax	      1491	prdbg.c	FUNCTION_38	IF_10	CALL_9
0x4003499	     0xf84f6000000	                            je 0x4003595	      1491	prdbg.c	FUNCTION_38	IF_10	CALL_9
0x400349f	      0xbe00000000	                              mov esi, 0	      1492	prdbg.c	FUNCTION_38	IF_10	CALL_10
0x40034a4	          0x4889df	                            mov rdi, rbx	      1492	prdbg.c	FUNCTION_38	IF_10	CALL_10
0x40034a7	      0xe87bd0ffff	                    call sym.append_type	      1492	prdbg.c	FUNCTION_38	IF_10	CALL_10
0x40034ac	            0x85c0	                           test eax, eax	      1492	prdbg.c	FUNCTION_38	IF_10	CALL_10
0x40034ae	     0xf84e1000000	                            je 0x4003595	      1492	prdbg.c	FUNCTION_38	IF_10	CALL_10
0x40034b4	          0x4c89e6	                            mov rsi, r12	      1493	prdbg.c	FUNCTION_38	IF_10	CALL_11
0x40034b7	          0x4889df	                            mov rdi, rbx	      1493	prdbg.c	FUNCTION_38	IF_10	CALL_11
0x40034ba	      0xe868d0ffff	                    call sym.append_type	      1493	prdbg.c	FUNCTION_38	IF_10	CALL_11
0x40034bf	            0x85c0	                           test eax, eax	      1493	prdbg.c	FUNCTION_38	IF_10	CALL_11
0x40034c1	     0xf84ce000000	                            je 0x4003595	      1493	prdbg.c	FUNCTION_38	IF_10	CALL_11
0x40034c7	      0xbe00000000	                              mov esi, 0	      1494	prdbg.c	FUNCTION_38	IF_10	CALL_12
0x40034cc	          0x4889df	                            mov rdi, rbx	      1494	prdbg.c	FUNCTION_38	IF_10	CALL_12
0x40034cf	      0xe853d0ffff	                    call sym.append_type	      1494	prdbg.c	FUNCTION_38	IF_10	CALL_12
0x40034d4	            0x85c0	                           test eax, eax	      1494	prdbg.c	FUNCTION_38	IF_10	CALL_12
0x40034d6	     0xf84b9000000	                            je 0x4003595	      1494	prdbg.c	FUNCTION_38	IF_10	CALL_12
0x40034dc	      0x837c246000	               cmp dword [rsp + 0x60], 0	      1496	prdbg.c	FUNCTION_38	IF_11
0x40034e1	            0x7505	                           jne 0x40034e8	      1496	prdbg.c	FUNCTION_38	IF_11
0x40034e3	          0x4d85ed	                           test r13, r13	      1496	prdbg.c	FUNCTION_38	IF_11
0x40034e6	            0x747e	                            je 0x4003566	      1496	prdbg.c	FUNCTION_38	IF_11
0x40034e8	      0x837c246000	               cmp dword [rsp + 0x60], 0	      1500	prdbg.c	FUNCTION_38	IF_11	IF_12
0x40034ed	            0x7431	                            je 0x4003520	      1500	prdbg.c	FUNCTION_38	IF_11	IF_12
0x40034ef	      0xbe00000000	                              mov esi, 0	      1502	prdbg.c	FUNCTION_38	IF_11	IF_12	IF_13	CALL_13
0x40034f4	          0x4889df	                            mov rdi, rbx	      1502	prdbg.c	FUNCTION_38	IF_11	IF_12	IF_13	CALL_13
0x40034f7	      0xe82bd0ffff	                    call sym.append_type	      1502	prdbg.c	FUNCTION_38	IF_11	IF_12	IF_13	CALL_13
0x40034fc	            0x85c0	                           test eax, eax	      1502	prdbg.c	FUNCTION_38	IF_11	IF_12	IF_13	CALL_13
0x40034fe	            0x745f	                            je 0x400355f	      1502	prdbg.c	FUNCTION_38	IF_11	IF_12	IF_13	CALL_13
0x4003500	          0x4c89fe	                            mov rsi, r15	      1503	prdbg.c	FUNCTION_38	IF_11	IF_12	IF_13	CALL_14
0x4003503	          0x4889df	                            mov rdi, rbx	      1503	prdbg.c	FUNCTION_38	IF_11	IF_12	IF_13	CALL_14
0x4003506	      0xe81cd0ffff	                    call sym.append_type	      1503	prdbg.c	FUNCTION_38	IF_11	IF_12	IF_13	CALL_14
0x400350b	            0x85c0	                           test eax, eax	      1503	prdbg.c	FUNCTION_38	IF_11	IF_12	IF_13	CALL_14
0x400350d	            0x7450	                            je 0x400355f	      1503	prdbg.c	FUNCTION_38	IF_11	IF_12	IF_13	CALL_14
0x400350f	      0xbe00000000	                              mov esi, 0	      1504	prdbg.c	FUNCTION_38	IF_11	IF_12	IF_13	CALL_15
0x4003514	          0x4889df	                            mov rdi, rbx	      1504	prdbg.c	FUNCTION_38	IF_11	IF_12	IF_13	CALL_15
0x4003517	      0xe80bd0ffff	                    call sym.append_type	      1504	prdbg.c	FUNCTION_38	IF_11	IF_12	IF_13	CALL_15
0x400351c	            0x85c0	                           test eax, eax	      1504	prdbg.c	FUNCTION_38	IF_11	IF_12	IF_13	CALL_15
0x400351e	            0x743f	                            je 0x400355f	      1504	prdbg.c	FUNCTION_38	IF_11	IF_12	IF_13	CALL_15
0x4003520	          0x4d89e8	                             mov r8, r13	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003523	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003528	      0xba16000000	                           mov edx, 0x16	        33	stdio2.h	FUNCTION_84	CALL_1
0x400352d	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003532	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003535	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x400353a	      0xe800000000	                          call 0x400353f	        33	stdio2.h	FUNCTION_84	CALL_1
0x400353f	      0xbe00000000	                              mov esi, 0	      1508	prdbg.c	FUNCTION_38	IF_11	IF_14	CALL_17
0x4003544	          0x4889df	                            mov rdi, rbx	      1508	prdbg.c	FUNCTION_38	IF_11	IF_14	CALL_17
0x4003547	      0xe8dbcfffff	                    call sym.append_type	      1508	prdbg.c	FUNCTION_38	IF_11	IF_14	CALL_17
0x400354c	            0x85c0	                           test eax, eax	      1508	prdbg.c	FUNCTION_38	IF_11	IF_14	CALL_17
0x400354e	            0x740f	                            je 0x400355f	      1508	prdbg.c	FUNCTION_38	IF_11	IF_14	CALL_17
0x4003550	          0x4889e6	                            mov rsi, rsp	      1509	prdbg.c	FUNCTION_38	IF_11	IF_14	CALL_18
0x4003553	          0x4889df	                            mov rdi, rbx	      1509	prdbg.c	FUNCTION_38	IF_11	IF_14	CALL_18
0x4003556	      0xe8cccfffff	                    call sym.append_type	      1509	prdbg.c	FUNCTION_38	IF_11	IF_14	CALL_18
0x400355b	            0x85c0	                           test eax, eax	      1509	prdbg.c	FUNCTION_38	IF_11	IF_14	CALL_18
0x400355d	            0x7507	                           jne 0x4003566	      1509	prdbg.c	FUNCTION_38	IF_11	IF_14	CALL_18
0x400355f	      0xb800000000	                              mov eax, 0	      1505	prdbg.c	FUNCTION_38	IF_11	IF_12	IF_13
0x4003564	            0xeb2f	                           jmp 0x4003595	      1505	prdbg.c	FUNCTION_38	IF_11	IF_12	IF_13
0x4003566	      0xbe00000000	                              mov esi, 0	      1513	prdbg.c	FUNCTION_38	CALL_19
0x400356b	          0x4889df	                            mov rdi, rbx	      1513	prdbg.c	FUNCTION_38	CALL_19
0x400356e	      0xe8b4cfffff	                    call sym.append_type	      1513	prdbg.c	FUNCTION_38	CALL_19
0x4003573	            0x85c0	                           test eax, eax	      1514	prdbg.c	FUNCTION_38	CALL_20
0x4003575	            0x741e	                            je 0x4003595	      1514	prdbg.c	FUNCTION_38	CALL_20
0x4003577	          0x4889df	                            mov rdi, rbx	      1514	prdbg.c	FUNCTION_38	CALL_20
0x400357a	      0xe891d5ffff	                    call sym.indent_type	      1514	prdbg.c	FUNCTION_38	CALL_20
0x400357f	            0x85c0	                           test eax, eax	      1456	prdbg.c	FUNCTION_38	IF_1	IF_2
0x4003581	           0xf95c0	                                setne al	      1456	prdbg.c	FUNCTION_38	IF_1	IF_2
0x4003584	           0xfb6c0	                           movzx eax, al	      1456	prdbg.c	FUNCTION_38	IF_1	IF_2
0x4003587	            0xeb0c	                           jmp 0x4003595	      1456	prdbg.c	FUNCTION_38	IF_1	IF_2
0x4003589	      0xb800000000	                              mov eax, 0	      1474	prdbg.c	FUNCTION_38	IF_6
0x400358e	            0xeb05	                           jmp 0x4003595	      1474	prdbg.c	FUNCTION_38	IF_6
0x4003590	      0xb800000000	                              mov eax, 0	      1483	prdbg.c	FUNCTION_38	ELSE_1	IF_8
0x4003595	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      1515	prdbg.c	FUNCTION_38
0x400359a	    0x644833142528	                xor rdx, qword fs:[0x28]	      1515	prdbg.c	FUNCTION_38
0x40035a3	            0x7405	                            je 0x40035aa	      1515	prdbg.c	FUNCTION_38
0x40035a5	      0xe800000000	                          call 0x40035aa	      1515	prdbg.c	FUNCTION_38
0x40035aa	        0x4883c428	                           add rsp, 0x28	      1515	prdbg.c	FUNCTION_38
0x40035ae	              0x5b	                                 pop rbx	      1515	prdbg.c	FUNCTION_38
0x40035af	              0x5d	                                 pop rbp	      1515	prdbg.c	FUNCTION_38
0x40035b0	            0x415c	                                 pop r12	      1515	prdbg.c	FUNCTION_38
0x40035b2	            0x415d	                                 pop r13	      1515	prdbg.c	FUNCTION_38
0x40035b4	            0x415e	                                 pop r14	      1515	prdbg.c	FUNCTION_38
0x40035b6	            0x415f	                                 pop r15	      1515	prdbg.c	FUNCTION_38
0x40035b8	              0xc3	                                     ret	      1515	prdbg.c	FUNCTION_38
tg_tag_type	IF,3:WHILE,0:ELSE,1:CALL,3:FOR,0:functions,0:SWITCH,1:DO,0	54
0x40019f7	            0x4154	                                push r12	      2457	prdbg.c	FUNCTION_71
0x40019f9	              0x55	                                push rbp	      2457	prdbg.c	FUNCTION_71
0x40019fa	              0x53	                                push rbx	      2457	prdbg.c	FUNCTION_71
0x40019fb	        0x4883ec20	                           sub rsp, 0x20	      2457	prdbg.c	FUNCTION_71
0x40019ff	    0x64488b042528	                mov rax, qword fs:[0x28]	      2457	prdbg.c	FUNCTION_71
0x4001a08	      0x4889442418	             mov qword [rsp + 0x18], rax	      2457	prdbg.c	FUNCTION_71
0x4001a0d	            0x31c0	                            xor eax, eax	      2457	prdbg.c	FUNCTION_71
0x4001a0f	          0x83e907	                              sub ecx, 7	      2462	prdbg.c	FUNCTION_71	SWITCH_1
0x4001a12	          0x83f904	                              cmp ecx, 4	      2462	prdbg.c	FUNCTION_71	SWITCH_1
0x4001a15	            0x7727	                            ja 0x4001a3e	      2462	prdbg.c	FUNCTION_71	SWITCH_1
0x4001a17	          0x4889fb	                            mov rbx, rdi	      2462	prdbg.c	FUNCTION_71	SWITCH_1
0x4001a1a	          0x4889f5	                            mov rbp, rsi	      2462	prdbg.c	FUNCTION_71	SWITCH_1
0x4001a1d	          0x4189d4	                           mov r12d, edx	      2462	prdbg.c	FUNCTION_71	SWITCH_1
0x4001a20	            0x89c9	                            mov ecx, ecx	      2462	prdbg.c	FUNCTION_71	SWITCH_1
0x4001a22	    0xff24cd000000	                       jmp qword [rcx*8]	      2462	prdbg.c	FUNCTION_71	SWITCH_1
0x4001a29	      0xbe00000000	                              mov esi, 0	      2468	prdbg.c	FUNCTION_71	SWITCH_1
0x4001a2e	            0xeb1f	                           jmp 0x4001a4f	      2468	prdbg.c	FUNCTION_71	SWITCH_1
0x4001a30	      0xbe00000000	                              mov esi, 0	      2474	prdbg.c	FUNCTION_71	SWITCH_1
0x4001a35	            0xeb18	                           jmp 0x4001a4f	      2475	prdbg.c	FUNCTION_71	SWITCH_1
0x4001a37	      0xbe00000000	                              mov esi, 0	      2477	prdbg.c	FUNCTION_71	SWITCH_1
0x4001a3c	            0xeb11	                           jmp 0x4001a4f	      2478	prdbg.c	FUNCTION_71	SWITCH_1
0x4001a3e	      0xe800000000	                          call 0x4001a43	      2480	prdbg.c	FUNCTION_71	SWITCH_1	CALL_1
0x4001a43	      0xbe00000000	                              mov esi, 0	      2465	prdbg.c	FUNCTION_71	SWITCH_1
0x4001a48	            0xeb05	                           jmp 0x4001a4f	      2465	prdbg.c	FUNCTION_71	SWITCH_1
0x4001a4a	      0xbe00000000	                              mov esi, 0	      2471	prdbg.c	FUNCTION_71	SWITCH_1
0x4001a4f	          0x4889df	                            mov rdi, rbx	      2484	prdbg.c	FUNCTION_71	IF_1	CALL_2
0x4001a52	      0xe839f8ffff	                      call sym.push_type	      2484	prdbg.c	FUNCTION_71	IF_1	CALL_2
0x4001a57	            0x85c0	                           test eax, eax	      2484	prdbg.c	FUNCTION_71	IF_1	CALL_2
0x4001a59	            0x743a	                            je 0x4001a95	      2484	prdbg.c	FUNCTION_71	IF_1	CALL_2
0x4001a5b	          0x4885ed	                           test rbp, rbp	      2486	prdbg.c	FUNCTION_71	IF_2
0x4001a5e	            0x7522	                           jne 0x4001a82	      2486	prdbg.c	FUNCTION_71	IF_2
0x4001a60	          0x4589e0	                           mov r8d, r12d	        33	stdio2.h	FUNCTION_84	CALL_1
0x4001a63	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x4001a68	      0xba14000000	                           mov edx, 0x14	        33	stdio2.h	FUNCTION_84	CALL_1
0x4001a6d	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_84	CALL_1
0x4001a72	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_84	CALL_1
0x4001a75	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x4001a7a	      0xe800000000	                          call 0x4001a7f	        33	stdio2.h	FUNCTION_84	CALL_1
0x4001a7f	          0x4889e5	                            mov rbp, rsp	      2491	prdbg.c	FUNCTION_71	ELSE_1
0x4001a82	          0x4889ee	                            mov rsi, rbp	      2494	prdbg.c	FUNCTION_71	IF_3	CALL_3
0x4001a85	          0x4889df	                            mov rdi, rbx	      2494	prdbg.c	FUNCTION_71	IF_3	CALL_3
0x4001a88	      0xe89aeaffff	                    call sym.append_type	      2494	prdbg.c	FUNCTION_71	IF_3	CALL_3
0x4001a8d	            0x85c0	                           test eax, eax	      2497	prdbg.c	FUNCTION_71
0x4001a8f	           0xf95c0	                                setne al	      2497	prdbg.c	FUNCTION_71
0x4001a92	           0xfb6c0	                           movzx eax, al	      2497	prdbg.c	FUNCTION_71
0x4001a95	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      2498	prdbg.c	FUNCTION_71
0x4001a9a	    0x644833142528	                xor rdx, qword fs:[0x28]	      2498	prdbg.c	FUNCTION_71
0x4001aa3	            0x7405	                            je 0x4001aaa	      2498	prdbg.c	FUNCTION_71
0x4001aa5	      0xe800000000	                          call 0x4001aaa	      2498	prdbg.c	FUNCTION_71
0x4001aaa	        0x4883c420	                           add rsp, 0x20	      2498	prdbg.c	FUNCTION_71
0x4001aae	              0x5b	                                 pop rbx	      2498	prdbg.c	FUNCTION_71
0x4001aaf	              0x5d	                                 pop rbp	      2498	prdbg.c	FUNCTION_71
0x4001ab0	            0x415c	                                 pop r12	      2498	prdbg.c	FUNCTION_71
0x4001ab2	              0xc3	                                     ret	      2498	prdbg.c	FUNCTION_71
pr_end_function	IF,0:WHILE,0:ELSE,0:CALL,0:FOR,0:functions,0:SWITCH,0:DO,0	2
0x4000052	      0xb801000000	                              mov eax, 1	      1907	prdbg.c	FUNCTION_55
0x4000057	              0xc3	                                     ret	      1907	prdbg.c	FUNCTION_55
pr_lineno	IF,0:WHILE,0:ELSE,0:CALL,2:FOR,0:functions,0:SWITCH,0:DO,0	39
0x4002a8a	            0x4155	                                push r13	      1873	prdbg.c	FUNCTION_53
0x4002a8c	            0x4154	                                push r12	      1873	prdbg.c	FUNCTION_53
0x4002a8e	              0x55	                                push rbp	      1873	prdbg.c	FUNCTION_53
0x4002a8f	              0x53	                                push rbx	      1873	prdbg.c	FUNCTION_53
0x4002a90	        0x4883ec28	                           sub rsp, 0x28	      1873	prdbg.c	FUNCTION_53
0x4002a94	          0x4889fb	                            mov rbx, rdi	      1873	prdbg.c	FUNCTION_53
0x4002a97	          0x4889f5	                            mov rbp, rsi	      1873	prdbg.c	FUNCTION_53
0x4002a9a	          0x4989d4	                            mov r12, rdx	      1873	prdbg.c	FUNCTION_53
0x4002a9d	          0x4989cd	                            mov r13, rcx	      1873	prdbg.c	FUNCTION_53
0x4002aa0	    0x64488b042528	                mov rax, qword fs:[0x28]	      1873	prdbg.c	FUNCTION_53
0x4002aa9	      0x4889442418	             mov qword [rsp + 0x18], rax	      1873	prdbg.c	FUNCTION_53
0x4002aae	            0x31c0	                            xor eax, eax	      1873	prdbg.c	FUNCTION_53
0x4002ab0	      0xe814d6ffff	                         call sym.indent	      1877	prdbg.c	FUNCTION_53	CALL_1
0x4002ab5	          0x4d89e8	                             mov r8, r13	        33	stdio2.h	FUNCTION_84	CALL_1
0x4002ab8	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x4002abd	      0xba16000000	                           mov edx, 0x16	        33	stdio2.h	FUNCTION_84	CALL_1
0x4002ac2	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_84	CALL_1
0x4002ac7	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_84	CALL_1
0x4002aca	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x4002acf	      0xe800000000	                          call 0x4002ad4	        33	stdio2.h	FUNCTION_84	CALL_1
0x4002ad4	          0x4989e1	                             mov r9, rsp	        97	stdio2.h	CALL_93
0x4002ad7	          0x4d89e0	                             mov r8, r12	        97	stdio2.h	CALL_93
0x4002ada	          0x4889e9	                            mov rcx, rbp	        97	stdio2.h	CALL_93
0x4002add	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_93
0x4002ae2	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_93
0x4002ae7	          0x488b3b	                    mov rdi, qword [rbx]	        97	stdio2.h	CALL_93
0x4002aea	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_93
0x4002aef	      0xe800000000	                          call 0x4002af4	        97	stdio2.h	CALL_93
0x4002af4	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      1882	prdbg.c	FUNCTION_53
0x4002af9	    0x644833142528	                xor rdx, qword fs:[0x28]	      1882	prdbg.c	FUNCTION_53
0x4002b02	            0x7405	                            je 0x4002b09	      1882	prdbg.c	FUNCTION_53
0x4002b04	      0xe800000000	                          call 0x4002b09	      1882	prdbg.c	FUNCTION_53
0x4002b09	      0xb801000000	                              mov eax, 1	      1882	prdbg.c	FUNCTION_53
0x4002b0e	        0x4883c428	                           add rsp, 0x28	      1882	prdbg.c	FUNCTION_53
0x4002b12	              0x5b	                                 pop rbx	      1882	prdbg.c	FUNCTION_53
0x4002b13	              0x5d	                                 pop rbp	      1882	prdbg.c	FUNCTION_53
0x4002b14	            0x415c	                                 pop r12	      1882	prdbg.c	FUNCTION_53
0x4002b16	            0x415d	                                 pop r13	      1882	prdbg.c	FUNCTION_53
0x4002b18	              0xc3	                                     ret	      1882	prdbg.c	FUNCTION_53
tg_class_method_variant	IF,9:WHILE,0:ELSE,1:CALL,19:FOR,0:functions,0:SWITCH,0:DO,0	126
0x4002694	            0x4157	                                push r15	      2297	prdbg.c	FUNCTION_68
0x4002696	            0x4156	                                push r14	      2297	prdbg.c	FUNCTION_68
0x4002698	            0x4155	                                push r13	      2297	prdbg.c	FUNCTION_68
0x400269a	            0x4154	                                push r12	      2297	prdbg.c	FUNCTION_68
0x400269c	              0x55	                                push rbp	      2297	prdbg.c	FUNCTION_68
0x400269d	              0x53	                                push rbx	      2297	prdbg.c	FUNCTION_68
0x400269e	        0x4883ec08	                              sub rsp, 8	      2297	prdbg.c	FUNCTION_68
0x40026a2	      0x448b6c2440	           mov r13d, dword [rsp + 0x40] 	      2297	prdbg.c	FUNCTION_68
0x40026a7	        0x488b4710	            mov rax, qword [rdi + 0x10] 	      2303	prdbg.c	FUNCTION_68	CALL_1
0x40026ab	          0x4885c0	                           test rax, rax	      2303	prdbg.c	FUNCTION_68	CALL_1
0x40026ae	            0x7519	                           jne 0x40026c9	      2303	prdbg.c	FUNCTION_68	CALL_1
0x40026b0	      0xb900000000	                              mov ecx, 0	      2303	prdbg.c	FUNCTION_68	CALL_1
0x40026b5	      0xbaff080000	                          mov edx, 0x8ff	      2303	prdbg.c	FUNCTION_68	CALL_1
0x40026ba	      0xbe00000000	                              mov esi, 0	      2303	prdbg.c	FUNCTION_68	CALL_1
0x40026bf	      0xbf00000000	                              mov edi, 0	      2303	prdbg.c	FUNCTION_68	CALL_1
0x40026c4	      0xe800000000	                          call 0x40026c9	      2303	prdbg.c	FUNCTION_68	CALL_1
0x40026c9	          0x4889fb	                            mov rbx, rdi	      2303	prdbg.c	FUNCTION_68	CALL_1
0x40026cc	          0x4189d6	                           mov r14d, edx	      2303	prdbg.c	FUNCTION_68	CALL_1
0x40026cf	          0x4189cc	                           mov r12d, ecx	      2303	prdbg.c	FUNCTION_68	CALL_1
0x40026d2	        0x48833800	                      cmp qword [rax], 0	      2304	prdbg.c	FUNCTION_68	CALL_2
0x40026d6	            0x7519	                           jne 0x40026f1	      2304	prdbg.c	FUNCTION_68	CALL_2
0x40026d8	      0xb900000000	                              mov ecx, 0	      2304	prdbg.c	FUNCTION_68	CALL_2
0x40026dd	      0xba00090000	                          mov edx, 0x900	      2304	prdbg.c	FUNCTION_68	CALL_2
0x40026e2	      0xbe00000000	                              mov esi, 0	      2304	prdbg.c	FUNCTION_68	CALL_2
0x40026e7	      0xbf00000000	                              mov edi, 0	      2304	prdbg.c	FUNCTION_68	CALL_2
0x40026ec	      0xe800000000	                          call 0x40026f1	      2304	prdbg.c	FUNCTION_68	CALL_2
0x40026f1	          0x4585c0	                           test r8d, r8d	      2307	prdbg.c	FUNCTION_68	IF_1
0x40026f4	            0x7414	                            je 0x400270a	      2307	prdbg.c	FUNCTION_68	IF_1
0x40026f6	      0xbe00000000	                              mov esi, 0	      2309	prdbg.c	FUNCTION_68	IF_1	IF_2	CALL_3
0x40026fb	      0xe827deffff	                    call sym.append_type	      2309	prdbg.c	FUNCTION_68	IF_1	IF_2	CALL_3
0x4002700	            0x89c5	                            mov ebp, eax	      2309	prdbg.c	FUNCTION_68	IF_1	IF_2	CALL_3
0x4002702	            0x85c0	                           test eax, eax	      2309	prdbg.c	FUNCTION_68	IF_1	IF_2	CALL_3
0x4002704	     0xf842e010000	                            je 0x4002838	      2309	prdbg.c	FUNCTION_68	IF_1	IF_2	CALL_3
0x400270a	          0x4585e4	                         test r12d, r12d	      2312	prdbg.c	FUNCTION_68	IF_3
0x400270d	            0x7417	                            je 0x4002726	      2312	prdbg.c	FUNCTION_68	IF_3
0x400270f	      0xbe00000000	                              mov esi, 0	      2314	prdbg.c	FUNCTION_68	IF_3	IF_4	CALL_4
0x4002714	          0x4889df	                            mov rdi, rbx	      2314	prdbg.c	FUNCTION_68	IF_3	IF_4	CALL_4
0x4002717	      0xe80bdeffff	                    call sym.append_type	      2314	prdbg.c	FUNCTION_68	IF_3	IF_4	CALL_4
0x400271c	            0x89c5	                            mov ebp, eax	      2314	prdbg.c	FUNCTION_68	IF_3	IF_4	CALL_4
0x400271e	            0x85c0	                           test eax, eax	      2314	prdbg.c	FUNCTION_68	IF_3	IF_4	CALL_4
0x4002720	     0xf8412010000	                            je 0x4002838	      2314	prdbg.c	FUNCTION_68	IF_3	IF_4	CALL_4
0x4002726	          0x4585ed	                         test r13d, r13d	      2318	prdbg.c	FUNCTION_68	CALL_5
0x4002729	            0x7410	                            je 0x400273b	      2318	prdbg.c	FUNCTION_68	CALL_5
0x400272b	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      2318	prdbg.c	FUNCTION_68	CALL_5
0x400272f	          0x488b00	                    mov rax, qword [rax]	      2318	prdbg.c	FUNCTION_68	CALL_5
0x4002732	          0x488b00	                    mov rax, qword [rax]	      2318	prdbg.c	FUNCTION_68	CALL_5
0x4002735	        0x488b7818	            mov rdi, qword [rax + 0x18] 	      2318	prdbg.c	FUNCTION_68	CALL_5
0x4002739	            0xeb0b	                           jmp 0x4002746	      2318	prdbg.c	FUNCTION_68	CALL_5
0x400273b	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      2318	prdbg.c	FUNCTION_68	CALL_5
0x400273f	          0x488b00	                    mov rax, qword [rax]	      2318	prdbg.c	FUNCTION_68	CALL_5
0x4002742	        0x488b7818	            mov rdi, qword [rax + 0x18] 	      2318	prdbg.c	FUNCTION_68	CALL_5
0x4002746	      0xe800000000	                          call 0x400274b	      2318	prdbg.c	FUNCTION_68	CALL_5
0x400274b	          0x4989c4	                            mov r12, rax	      2318	prdbg.c	FUNCTION_68	CALL_5
0x400274e	          0x4889c6	                            mov rsi, rax	      2322	prdbg.c	FUNCTION_68	IF_5	CALL_6
0x4002751	          0x4889df	                            mov rdi, rbx	      2322	prdbg.c	FUNCTION_68	IF_5	CALL_6
0x4002754	      0xe871deffff	                call sym.substitute_type	      2322	prdbg.c	FUNCTION_68	IF_5	CALL_6
0x4002759	            0x89c5	                            mov ebp, eax	      2322	prdbg.c	FUNCTION_68	IF_5	CALL_6
0x400275b	            0x85c0	                           test eax, eax	      2322	prdbg.c	FUNCTION_68	IF_5	CALL_6
0x400275d	            0x750d	                           jne 0x400276c	      2322	prdbg.c	FUNCTION_68	IF_5	CALL_6
0x400275f	          0x4c89e7	                            mov rdi, r12	      2324	prdbg.c	FUNCTION_68	IF_5	CALL_7
0x4002762	      0xe800000000	                          call 0x4002767	      2324	prdbg.c	FUNCTION_68	IF_5	CALL_7
0x4002767	      0xe9cc000000	                           jmp 0x4002838	      2325	prdbg.c	FUNCTION_68	IF_5
0x400276c	          0x4889df	                            mov rdi, rbx	      2329	prdbg.c	FUNCTION_68	CALL_8
0x400276f	      0xe811daffff	                       call sym.pop_type	      2329	prdbg.c	FUNCTION_68	CALL_8
0x4002774	          0x4989c7	                            mov r15, rax	      2329	prdbg.c	FUNCTION_68	CALL_8
0x4002777	          0x4885c0	                           test rax, rax	      2330	prdbg.c	FUNCTION_68	IF_6
0x400277a	            0x7512	                           jne 0x400278e	      2330	prdbg.c	FUNCTION_68	IF_6
0x400277c	          0x4c89e7	                            mov rdi, r12	      2332	prdbg.c	FUNCTION_68	IF_6	CALL_9
0x400277f	      0xe800000000	                          call 0x4002784	      2332	prdbg.c	FUNCTION_68	IF_6	CALL_9
0x4002784	      0xbd00000000	                              mov ebp, 0	      2333	prdbg.c	FUNCTION_68	IF_6
0x4002789	      0xe9aa000000	                           jmp 0x4002838	      2333	prdbg.c	FUNCTION_68	IF_6
0x400278e	          0x4585ed	                         test r13d, r13d	      2337	prdbg.c	FUNCTION_68	IF_7
0x4002791	            0x7427	                            je 0x40027ba	      2337	prdbg.c	FUNCTION_68	IF_7
0x4002793	          0x4889df	                            mov rdi, rbx	      2341	prdbg.c	FUNCTION_68	ELSE_1	CALL_10
0x4002796	      0xe8ead9ffff	                       call sym.pop_type	      2341	prdbg.c	FUNCTION_68	ELSE_1	CALL_10
0x400279b	          0x4989c5	                            mov r13, rax	      2341	prdbg.c	FUNCTION_68	ELSE_1	CALL_10
0x400279e	          0x4885c0	                           test rax, rax	      2342	prdbg.c	FUNCTION_68	ELSE_1	IF_8
0x40027a1	            0x751d	                           jne 0x40027c0	      2342	prdbg.c	FUNCTION_68	ELSE_1	IF_8
0x40027a3	          0x4c89ff	                            mov rdi, r15	      2344	prdbg.c	FUNCTION_68	ELSE_1	IF_8	CALL_11
0x40027a6	      0xe800000000	                          call 0x40027ab	      2344	prdbg.c	FUNCTION_68	ELSE_1	IF_8	CALL_11
0x40027ab	          0x4c89e7	                            mov rdi, r12	      2345	prdbg.c	FUNCTION_68	ELSE_1	IF_8	CALL_12
0x40027ae	      0xe800000000	                          call 0x40027b3	      2345	prdbg.c	FUNCTION_68	ELSE_1	IF_8	CALL_12
0x40027b3	      0xbd00000000	                              mov ebp, 0	      2346	prdbg.c	FUNCTION_68	ELSE_1	IF_8
0x40027b8	            0xeb7e	                           jmp 0x4002838	      2346	prdbg.c	FUNCTION_68	ELSE_1	IF_8
0x40027ba	    0x41bd00000000	                             mov r13d, 0	      2338	prdbg.c	FUNCTION_68	IF_7
0x40027c0	          0x4489f6	                           mov esi, r14d	      2351	prdbg.c	FUNCTION_68	IF_9	CALL_13
0x40027c3	          0x4889df	                            mov rdi, rbx	      2351	prdbg.c	FUNCTION_68	IF_9	CALL_13
0x40027c6	      0xe875dbffff	              call sym.tg_fix_visibility	      2351	prdbg.c	FUNCTION_68	IF_9	CALL_13
0x40027cb	            0x89c5	                            mov ebp, eax	      2351	prdbg.c	FUNCTION_68	IF_9	CALL_13
0x40027cd	            0x85c0	                           test eax, eax	      2351	prdbg.c	FUNCTION_68	IF_9	CALL_13
0x40027cf	            0x751a	                           jne 0x40027eb	      2351	prdbg.c	FUNCTION_68	IF_9	CALL_13
0x40027d1	          0x4c89ff	                            mov rdi, r15	      2353	prdbg.c	FUNCTION_68	IF_9	CALL_14
0x40027d4	      0xe800000000	                          call 0x40027d9	      2353	prdbg.c	FUNCTION_68	IF_9	CALL_14
0x40027d9	          0x4c89e7	                            mov rdi, r12	      2354	prdbg.c	FUNCTION_68	IF_9	CALL_15
0x40027dc	      0xe800000000	                          call 0x40027e1	      2354	prdbg.c	FUNCTION_68	IF_9	CALL_15
0x40027e1	          0x4c89ef	                            mov rdi, r13	      2355	prdbg.c	FUNCTION_68	IF_9	CALL_16
0x40027e4	      0xe800000000	                          call 0x40027e9	      2355	prdbg.c	FUNCTION_68	IF_9	CALL_16
0x40027e9	            0xeb4d	                           jmp 0x4002838	      2356	prdbg.c	FUNCTION_68	IF_9
0x40027eb	        0x4883ec08	                              sub rsp, 8	        97	stdio2.h	CALL_93
0x40027ef	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      2359	prdbg.c	FUNCTION_68
0x40027f3	          0xff7008	                    push qword [rax + 8]	        97	stdio2.h	CALL_93
0x40027f6	          0x4d89f9	                             mov r9, r15	        97	stdio2.h	CALL_93
0x40027f9	        0x4c8b4320	              mov r8, qword [rbx + 0x20]	        97	stdio2.h	CALL_93
0x40027fd	          0x4c89e1	                            mov rcx, r12	        97	stdio2.h	CALL_93
0x4002800	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_93
0x4002805	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_93
0x400280a	          0x488b3b	                    mov rdi, qword [rbx]	        97	stdio2.h	CALL_93
0x400280d	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_93
0x4002812	      0xe800000000	                          call 0x4002817	        97	stdio2.h	CALL_93
0x4002817	          0x4c89ff	                            mov rdi, r15	      2361	prdbg.c	FUNCTION_68	CALL_17
0x400281a	      0xe800000000	                          call 0x400281f	      2361	prdbg.c	FUNCTION_68	CALL_17
0x400281f	          0x4c89e7	                            mov rdi, r12	      2362	prdbg.c	FUNCTION_68	CALL_18
0x4002822	      0xe800000000	                          call 0x4002827	      2362	prdbg.c	FUNCTION_68	CALL_18
0x4002827	          0x4c89ef	                            mov rdi, r13	      2363	prdbg.c	FUNCTION_68	CALL_19
0x400282a	      0xe800000000	                          call 0x400282f	      2363	prdbg.c	FUNCTION_68	CALL_19
0x400282f	        0x4883c410	                           add rsp, 0x10	      2365	prdbg.c	FUNCTION_68
0x4002833	      0xbd01000000	                              mov ebp, 1	      2365	prdbg.c	FUNCTION_68
0x4002838	            0x89e8	                            mov eax, ebp	      2366	prdbg.c	FUNCTION_68
0x400283a	        0x4883c408	                              add rsp, 8	      2366	prdbg.c	FUNCTION_68
0x400283e	              0x5b	                                 pop rbx	      2366	prdbg.c	FUNCTION_68
0x400283f	              0x5d	                                 pop rbp	      2366	prdbg.c	FUNCTION_68
0x4002840	            0x415c	                                 pop r12	      2366	prdbg.c	FUNCTION_68
0x4002842	            0x415d	                                 pop r13	      2366	prdbg.c	FUNCTION_68
0x4002844	            0x415e	                                 pop r14	      2366	prdbg.c	FUNCTION_68
0x4002846	            0x415f	                                 pop r15	      2366	prdbg.c	FUNCTION_68
0x4002848	              0xc3	                                     ret	      2366	prdbg.c	FUNCTION_68
tg_typdef	IF,1:WHILE,0:ELSE,0:CALL,2:FOR,0:functions,0:SWITCH,0:DO,0	24
0x4000237	            0x4154	                                push r12	      2504	prdbg.c	FUNCTION_72
0x4000239	              0x55	                                push rbp	      2504	prdbg.c	FUNCTION_72
0x400023a	              0x53	                                push rbx	      2504	prdbg.c	FUNCTION_72
0x400023b	          0x4889fd	                            mov rbp, rdi	      2504	prdbg.c	FUNCTION_72
0x400023e	          0x4989f4	                            mov r12, rsi	      2504	prdbg.c	FUNCTION_72
0x4000241	      0xe83fffffff	                       call sym.pop_type	      2508	prdbg.c	FUNCTION_72	CALL_1
0x4000246	          0x4889c3	                            mov rbx, rax	      2508	prdbg.c	FUNCTION_72	CALL_1
0x4000249	      0xb800000000	                              mov eax, 0	      2510	prdbg.c	FUNCTION_72	IF_1
0x400024e	          0x4885db	                           test rbx, rbx	      2509	prdbg.c	FUNCTION_72	IF_1
0x4000251	            0x742a	                            je 0x400027d	      2509	prdbg.c	FUNCTION_72	IF_1
0x4000253	          0x4989d9	                             mov r9, rbx	        97	stdio2.h	CALL_93
0x4000256	        0x4c8b4520	              mov r8, qword [rbp + 0x20]	        97	stdio2.h	CALL_93
0x400025a	          0x4c89e1	                            mov rcx, r12	        97	stdio2.h	CALL_93
0x400025d	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_93
0x4000262	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_93
0x4000267	        0x488b7d00	                    mov rdi, qword [rbp]	        97	stdio2.h	CALL_93
0x400026b	      0xe800000000	                          call 0x4000270	        97	stdio2.h	CALL_93
0x4000270	          0x4889df	                            mov rdi, rbx	      2515	prdbg.c	FUNCTION_72	CALL_2
0x4000273	      0xe800000000	                          call 0x4000278	      2515	prdbg.c	FUNCTION_72	CALL_2
0x4000278	      0xb801000000	                              mov eax, 1	      2517	prdbg.c	FUNCTION_72
0x400027d	              0x5b	                                 pop rbx	      2518	prdbg.c	FUNCTION_72
0x400027e	              0x5d	                                 pop rbp	      2518	prdbg.c	FUNCTION_72
0x400027f	            0x415c	                                 pop r12	      2518	prdbg.c	FUNCTION_72
0x4000281	              0xc3	                                     ret	      2518	prdbg.c	FUNCTION_72
pr_bool_type	IF,0:WHILE,0:ELSE,0:CALL,1:FOR,0:functions,0:SWITCH,0:DO,0	22
0x4001861	              0x53	                                push rbx	       624	prdbg.c	FUNCTION_18
0x4001862	        0x4883ec30	                           sub rsp, 0x30	       624	prdbg.c	FUNCTION_18
0x4001866	          0x4889fb	                            mov rbx, rdi	       624	prdbg.c	FUNCTION_18
0x4001869	    0x64488b042528	                mov rax, qword fs:[0x28]	       624	prdbg.c	FUNCTION_18
0x4001872	      0x4889442428	             mov qword [rsp + 0x28], rax	       624	prdbg.c	FUNCTION_18
0x4001877	            0x31c0	                            xor eax, eax	       624	prdbg.c	FUNCTION_18
0x4001879	    0x448d04f50000	                        lea r8d, [rsi*8]	        33	stdio2.h	FUNCTION_84	CALL_1
0x4001881	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x4001886	      0xba28000000	                           mov edx, 0x28	        33	stdio2.h	FUNCTION_84	CALL_1
0x400188b	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_84	CALL_1
0x4001890	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_84	CALL_1
0x4001893	      0xe800000000	                          call 0x4001898	        33	stdio2.h	FUNCTION_84	CALL_1
0x4001898	          0x4889e6	                            mov rsi, rsp	       630	prdbg.c	FUNCTION_18	CALL_1
0x400189b	          0x4889df	                            mov rdi, rbx	       630	prdbg.c	FUNCTION_18	CALL_1
0x400189e	      0xe8edf9ffff	                      call sym.push_type	       630	prdbg.c	FUNCTION_18	CALL_1
0x40018a3	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	       631	prdbg.c	FUNCTION_18
0x40018a8	    0x644833142528	                xor rdx, qword fs:[0x28]	       631	prdbg.c	FUNCTION_18
0x40018b1	            0x7405	                            je 0x40018b8	       631	prdbg.c	FUNCTION_18
0x40018b3	      0xe800000000	                          call 0x40018b8	       631	prdbg.c	FUNCTION_18
0x40018b8	        0x4883c430	                           add rsp, 0x30	       631	prdbg.c	FUNCTION_18
0x40018bc	              0x5b	                                 pop rbx	       631	prdbg.c	FUNCTION_18
0x40018bd	              0xc3	                                     ret	       631	prdbg.c	FUNCTION_18
visibility_name	IF,0:WHILE,0:ELSE,0:CALL,1:FOR,0:functions,0:SWITCH,1:DO,0	19
0x4001060	          0x83ff01	                              cmp edi, 1	      2819	prdbg.c	FUNCTION_83	SWITCH_1
0x4001063	            0x742c	                            je 0x4001091	      2819	prdbg.c	FUNCTION_83	SWITCH_1
0x4001065	          0x83ff01	                              cmp edi, 1	      2819	prdbg.c	FUNCTION_83	SWITCH_1
0x4001068	            0x7221	                            jb 0x400108b	      2819	prdbg.c	FUNCTION_83	SWITCH_1
0x400106a	          0x83ff02	                              cmp edi, 2	      2819	prdbg.c	FUNCTION_83	SWITCH_1
0x400106d	            0x740b	                            je 0x400107a	      2819	prdbg.c	FUNCTION_83	SWITCH_1
0x400106f	          0x83ff03	                              cmp edi, 3	      2819	prdbg.c	FUNCTION_83	SWITCH_1
0x4001072	            0x740c	                            je 0x4001080	      2819	prdbg.c	FUNCTION_83	SWITCH_1
0x4001074	        0x4883ec08	                              sub rsp, 8	      2816	prdbg.c	FUNCTION_83
0x4001078	            0xeb0c	                           jmp 0x4001086	      2816	prdbg.c	FUNCTION_83
0x400107a	      0xb800000000	                              mov eax, 0	      2825	prdbg.c	FUNCTION_83	SWITCH_1
0x400107f	              0xc3	                                     ret	      2825	prdbg.c	FUNCTION_83	SWITCH_1
0x4001080	      0xb800000000	                              mov eax, 0	      2831	prdbg.c	FUNCTION_83	SWITCH_1
0x4001085	              0xc3	                                     ret	      2832	prdbg.c	FUNCTION_83	SWITCH_1
0x4001086	      0xe800000000	                          call 0x400108b	      2834	prdbg.c	FUNCTION_83	SWITCH_1	CALL_1
0x400108b	      0xb800000000	                              mov eax, 0	      2822	prdbg.c	FUNCTION_83	SWITCH_1
0x4001090	              0xc3	                                     ret	      2822	prdbg.c	FUNCTION_83	SWITCH_1
0x4001091	      0xb800000000	                              mov eax, 0	      2828	prdbg.c	FUNCTION_83	SWITCH_1
0x4001096	              0xc3	                                     ret	      2838	prdbg.c	FUNCTION_83
pr_class_static_member	IF,4:WHILE,0:ELSE,0:CALL,9:FOR,0:functions,0:SWITCH,0:DO,0	51
0x4000fc8	            0x4154	                                push r12	      1305	prdbg.c	FUNCTION_35
0x4000fca	              0x55	                                push rbp	      1305	prdbg.c	FUNCTION_35
0x4000fcb	              0x53	                                push rbx	      1305	prdbg.c	FUNCTION_35
0x4000fcc	          0x4889fb	                            mov rbx, rdi	      1305	prdbg.c	FUNCTION_35
0x4000fcf	          0x4889d5	                            mov rbp, rdx	      1305	prdbg.c	FUNCTION_35
0x4000fd2	          0x4189cc	                           mov r12d, ecx	      1305	prdbg.c	FUNCTION_35
0x4000fd5	      0xe8f0f5ffff	                call sym.substitute_type	      1309	prdbg.c	FUNCTION_35	IF_1	CALL_1
0x4000fda	            0x85c0	                           test eax, eax	      1309	prdbg.c	FUNCTION_35	IF_1	CALL_1
0x4000fdc	            0x747d	                            je 0x400105b	      1309	prdbg.c	FUNCTION_35	IF_1	CALL_1
0x4000fde	      0xbe00000000	                              mov esi, 0	      1312	prdbg.c	FUNCTION_35	IF_2	CALL_2
0x4000fe3	          0x4889df	                            mov rdi, rbx	      1312	prdbg.c	FUNCTION_35	IF_2	CALL_2
0x4000fe6	      0xe88af4ffff	                   call sym.prepend_type	      1312	prdbg.c	FUNCTION_35	IF_2	CALL_2
0x4000feb	            0x85c0	                           test eax, eax	      1312	prdbg.c	FUNCTION_35	IF_2	CALL_2
0x4000fed	            0x746c	                            je 0x400105b	      1312	prdbg.c	FUNCTION_35	IF_2	CALL_2
0x4000fef	      0xbe00000000	                              mov esi, 0	      1313	prdbg.c	FUNCTION_35	IF_2	CALL_3
0x4000ff4	          0x4889df	                            mov rdi, rbx	      1313	prdbg.c	FUNCTION_35	IF_2	CALL_3
0x4000ff7	      0xe82bf5ffff	                    call sym.append_type	      1313	prdbg.c	FUNCTION_35	IF_2	CALL_3
0x4000ffc	            0x85c0	                           test eax, eax	      1313	prdbg.c	FUNCTION_35	IF_2	CALL_3
0x4000ffe	            0x745b	                            je 0x400105b	      1313	prdbg.c	FUNCTION_35	IF_2	CALL_3
0x4001000	          0x4889ee	                            mov rsi, rbp	      1314	prdbg.c	FUNCTION_35	IF_2	CALL_4
0x4001003	          0x4889df	                            mov rdi, rbx	      1314	prdbg.c	FUNCTION_35	IF_2	CALL_4
0x4001006	      0xe81cf5ffff	                    call sym.append_type	      1314	prdbg.c	FUNCTION_35	IF_2	CALL_4
0x400100b	            0x85c0	                           test eax, eax	      1314	prdbg.c	FUNCTION_35	IF_2	CALL_4
0x400100d	            0x744c	                            je 0x400105b	      1314	prdbg.c	FUNCTION_35	IF_2	CALL_4
0x400100f	      0xbe00000000	                              mov esi, 0	      1315	prdbg.c	FUNCTION_35	IF_2	CALL_5
0x4001014	          0x4889df	                            mov rdi, rbx	      1315	prdbg.c	FUNCTION_35	IF_2	CALL_5
0x4001017	      0xe80bf5ffff	                    call sym.append_type	      1315	prdbg.c	FUNCTION_35	IF_2	CALL_5
0x400101c	            0x85c0	                           test eax, eax	      1315	prdbg.c	FUNCTION_35	IF_2	CALL_5
0x400101e	            0x743b	                            je 0x400105b	      1315	prdbg.c	FUNCTION_35	IF_2	CALL_5
0x4001020	          0x4889df	                            mov rdi, rbx	      1316	prdbg.c	FUNCTION_35	IF_2	CALL_6
0x4001023	      0xe8e8faffff	                    call sym.indent_type	      1316	prdbg.c	FUNCTION_35	IF_2	CALL_6
0x4001028	            0x85c0	                           test eax, eax	      1316	prdbg.c	FUNCTION_35	IF_2	CALL_6
0x400102a	            0x742f	                            je 0x400105b	      1316	prdbg.c	FUNCTION_35	IF_2	CALL_6
0x400102c	          0x4889df	                            mov rdi, rbx	      1319	prdbg.c	FUNCTION_35	CALL_7
0x400102f	      0xe851f1ffff	                       call sym.pop_type	      1319	prdbg.c	FUNCTION_35	CALL_7
0x4001034	          0x4889c5	                            mov rbp, rax	      1319	prdbg.c	FUNCTION_35	CALL_7
0x4001037	      0xb800000000	                              mov eax, 0	      1321	prdbg.c	FUNCTION_35	IF_3
0x400103c	          0x4885ed	                           test rbp, rbp	      1320	prdbg.c	FUNCTION_35	IF_3
0x400103f	            0x741a	                            je 0x400105b	      1320	prdbg.c	FUNCTION_35	IF_3
0x4001041	          0x4489e6	                           mov esi, r12d	      1323	prdbg.c	FUNCTION_35	IF_4	CALL_8
0x4001044	          0x4889df	                            mov rdi, rbx	      1323	prdbg.c	FUNCTION_35	IF_4	CALL_8
0x4001047	      0xe83cfdffff	              call sym.pr_fix_visibility	      1323	prdbg.c	FUNCTION_35	IF_4	CALL_8
0x400104c	            0x85c0	                           test eax, eax	      1323	prdbg.c	FUNCTION_35	IF_4	CALL_8
0x400104e	            0x740b	                            je 0x400105b	      1323	prdbg.c	FUNCTION_35	IF_4	CALL_8
0x4001050	          0x4889ee	                            mov rsi, rbp	      1326	prdbg.c	FUNCTION_35	CALL_9
0x4001053	          0x4889df	                            mov rdi, rbx	      1326	prdbg.c	FUNCTION_35	CALL_9
0x4001056	      0xe8ccf4ffff	                    call sym.append_type	      1326	prdbg.c	FUNCTION_35	CALL_9
0x400105b	              0x5b	                                 pop rbx	      1327	prdbg.c	FUNCTION_35
0x400105c	              0x5d	                                 pop rbp	      1327	prdbg.c	FUNCTION_35
0x400105d	            0x415c	                                 pop r12	      1327	prdbg.c	FUNCTION_35
0x400105f	              0xc3	                                     ret	      1327	prdbg.c	FUNCTION_35
pr_end_struct_type	IF,0:WHILE,0:ELSE,0:CALL,4:FOR,0:functions,0:SWITCH,0:DO,0	42
0x40003c2	        0x4883ec08	                              sub rsp, 8	      1193	prdbg.c	FUNCTION_33
0x40003c6	        0x488b5710	            mov rdx, qword [rdi + 0x10] 	      1197	prdbg.c	FUNCTION_33	CALL_1
0x40003ca	          0x4885d2	                           test rdx, rdx	      1197	prdbg.c	FUNCTION_33	CALL_1
0x40003cd	            0x7519	                           jne 0x40003e8	      1197	prdbg.c	FUNCTION_33	CALL_1
0x40003cf	      0xb900000000	                              mov ecx, 0	      1197	prdbg.c	FUNCTION_33	CALL_1
0x40003d4	      0xbaad040000	                          mov edx, 0x4ad	      1197	prdbg.c	FUNCTION_33	CALL_1
0x40003d9	      0xbe00000000	                              mov esi, 0	      1197	prdbg.c	FUNCTION_33	CALL_1
0x40003de	      0xbf00000000	                              mov edi, 0	      1197	prdbg.c	FUNCTION_33	CALL_1
0x40003e3	      0xe800000000	                          call 0x40003e8	      1197	prdbg.c	FUNCTION_33	CALL_1
0x40003e8	          0x8b4708	                mov eax, dword [rdi + 8]	      1198	prdbg.c	FUNCTION_33	CALL_2
0x40003eb	          0x83f801	                              cmp eax, 1	      1198	prdbg.c	FUNCTION_33	CALL_2
0x40003ee	            0x7719	                            ja 0x4000409	      1198	prdbg.c	FUNCTION_33	CALL_2
0x40003f0	      0xb900000000	                              mov ecx, 0	      1198	prdbg.c	FUNCTION_33	CALL_2
0x40003f5	      0xbaae040000	                          mov edx, 0x4ae	      1198	prdbg.c	FUNCTION_33	CALL_2
0x40003fa	      0xbe00000000	                              mov esi, 0	      1198	prdbg.c	FUNCTION_33	CALL_2
0x40003ff	      0xbf00000000	                              mov edi, 0	      1198	prdbg.c	FUNCTION_33	CALL_2
0x4000404	      0xe800000000	                          call 0x4000409	      1198	prdbg.c	FUNCTION_33	CALL_2
0x4000409	          0x83e802	                              sub eax, 2	      1200	prdbg.c	FUNCTION_33
0x400040c	          0x894708	                mov dword [rdi + 8], eax	      1200	prdbg.c	FUNCTION_33
0x400040f	        0x488b5208	                mov rdx, qword [rdx + 8]	      1203	prdbg.c	FUNCTION_33	CALL_3
0x4000413	      0xb800000000	                              mov eax, 0	      1203	prdbg.c	FUNCTION_33	CALL_3
0x4000418	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1203	prdbg.c	FUNCTION_33	CALL_3
0x400041f	          0x4889d7	                            mov rdi, rdx	      1203	prdbg.c	FUNCTION_33	CALL_3
0x4000422	            0xf2ae	              repne scasb al, byte [rdi]	      1203	prdbg.c	FUNCTION_33	CALL_3
0x4000424	          0x48f7d1	                                 not rcx	      1203	prdbg.c	FUNCTION_33	CALL_3
0x4000427	      0x488d440afd	                lea rax, [rdx + rcx - 3]	      1203	prdbg.c	FUNCTION_33	CALL_3
0x400042c	          0x803820	                    cmp byte [rax], 0x20	      1204	prdbg.c	FUNCTION_33	CALL_4
0x400042f	            0x750c	                           jne 0x400043d	      1204	prdbg.c	FUNCTION_33	CALL_4
0x4000431	        0x80780120	                cmp byte [rax + 1], 0x20	      1204	prdbg.c	FUNCTION_33	CALL_4
0x4000435	            0x7506	                           jne 0x400043d	      1204	prdbg.c	FUNCTION_33	CALL_4
0x4000437	        0x80780200	                   cmp byte [rax + 2], 0	      1204	prdbg.c	FUNCTION_33	CALL_4
0x400043b	            0x7419	                            je 0x4000456	      1204	prdbg.c	FUNCTION_33	CALL_4
0x400043d	      0xb900000000	                              mov ecx, 0	      1204	prdbg.c	FUNCTION_33	CALL_4
0x4000442	      0xbab4040000	                          mov edx, 0x4b4	      1204	prdbg.c	FUNCTION_33	CALL_4
0x4000447	      0xbe00000000	                              mov esi, 0	      1204	prdbg.c	FUNCTION_33	CALL_4
0x400044c	      0xbf00000000	                              mov edi, 0	      1204	prdbg.c	FUNCTION_33	CALL_4
0x4000451	      0xe800000000	                          call 0x4000456	      1204	prdbg.c	FUNCTION_33	CALL_4
0x4000456	          0xc6007d	                    mov byte [rax], 0x7d	      1206	prdbg.c	FUNCTION_33
0x4000459	        0xc6400100	                   mov byte [rax + 1], 0	      1207	prdbg.c	FUNCTION_33
0x400045d	      0xb801000000	                              mov eax, 1	      1210	prdbg.c	FUNCTION_33
0x4000462	        0x4883c408	                              add rsp, 8	      1210	prdbg.c	FUNCTION_33
0x4000466	              0xc3	                                     ret	      1210	prdbg.c	FUNCTION_33
tg_class_static_member	IF,5:WHILE,0:ELSE,0:CALL,15:FOR,0:functions,0:SWITCH,0:DO,0	106
0x4001097	            0x4157	                                push r15	      2176	prdbg.c	FUNCTION_66
0x4001099	            0x4156	                                push r14	      2176	prdbg.c	FUNCTION_66
0x400109b	            0x4155	                                push r13	      2176	prdbg.c	FUNCTION_66
0x400109d	            0x4154	                                push r12	      2176	prdbg.c	FUNCTION_66
0x400109f	              0x55	                                push rbp	      2176	prdbg.c	FUNCTION_66
0x40010a0	              0x53	                                push rbx	      2176	prdbg.c	FUNCTION_66
0x40010a1	        0x4883ec08	                              sub rsp, 8	      2176	prdbg.c	FUNCTION_66
0x40010a5	          0x4889fb	                            mov rbx, rdi	      2176	prdbg.c	FUNCTION_66
0x40010a8	          0x4889f5	                            mov rbp, rsi	      2176	prdbg.c	FUNCTION_66
0x40010ab	          0x4189cc	                           mov r12d, ecx	      2176	prdbg.c	FUNCTION_66
0x40010ae	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	      2182	prdbg.c	FUNCTION_66	CALL_1
0x40010b5	      0xb800000000	                              mov eax, 0	      2182	prdbg.c	FUNCTION_66	CALL_1
0x40010ba	          0x4889d1	                            mov rcx, rdx	      2182	prdbg.c	FUNCTION_66	CALL_1
0x40010bd	          0x4889f7	                            mov rdi, rsi	      2182	prdbg.c	FUNCTION_66	CALL_1
0x40010c0	            0xf2ae	              repne scasb al, byte [rdi]	      2182	prdbg.c	FUNCTION_66	CALL_1
0x40010c2	          0x4889ce	                            mov rsi, rcx	      2182	prdbg.c	FUNCTION_66	CALL_1
0x40010c5	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	      2183	prdbg.c	FUNCTION_66	CALL_2
0x40010c9	          0x488b09	                    mov rcx, qword [rcx]	      2183	prdbg.c	FUNCTION_66	CALL_2
0x40010cc	        0x488b7908	                mov rdi, qword [rcx + 8]	      2183	prdbg.c	FUNCTION_66	CALL_2
0x40010d0	          0x4889d1	                            mov rcx, rdx	      2183	prdbg.c	FUNCTION_66	CALL_2
0x40010d3	            0xf2ae	              repne scasb al, byte [rdi]	      2183	prdbg.c	FUNCTION_66	CALL_2
0x40010d5	          0x4889c8	                            mov rax, rcx	      2183	prdbg.c	FUNCTION_66	CALL_2
0x40010d8	          0x48f7d0	                                 not rax	      2183	prdbg.c	FUNCTION_66	CALL_2
0x40010db	            0x29f0	                            sub eax, esi	      2184	prdbg.c	FUNCTION_66	CALL_3
0x40010dd	          0x4863f8	                         movsxd rdi, eax	      2184	prdbg.c	FUNCTION_66	CALL_3
0x40010e0	      0xe800000000	                          call 0x40010e5	      2184	prdbg.c	FUNCTION_66	CALL_3
0x40010e5	    0x41bd00000000	                             mov r13d, 0	      2186	prdbg.c	FUNCTION_66	IF_1
0x40010eb	          0x4885c0	                           test rax, rax	      2185	prdbg.c	FUNCTION_66	IF_1
0x40010ee	     0xf84fe000000	                            je 0x40011f2	      2185	prdbg.c	FUNCTION_66	IF_1
0x40010f4	          0x4989c6	                            mov r14, rax	      2185	prdbg.c	FUNCTION_66	IF_1
0x40010f7	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      2187	prdbg.c	FUNCTION_66
0x40010fb	          0x488b00	                    mov rax, qword [rax]	      2187	prdbg.c	FUNCTION_66
0x40010fe	          0x4989e9	                             mov r9, rbp	        33	stdio2.h	FUNCTION_84	CALL_1
0x4001101	        0x4c8b4008	                 mov r8, qword [rax + 8]	        33	stdio2.h	FUNCTION_84	CALL_1
0x4001105	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x400110a	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_84	CALL_1
0x4001111	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_84	CALL_1
0x4001116	          0x4c89f7	                            mov rdi, r14	        33	stdio2.h	FUNCTION_84	CALL_1
0x4001119	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x400111e	      0xe800000000	                          call 0x4001123	        33	stdio2.h	FUNCTION_84	CALL_1
0x4001123	          0x4c89f6	                            mov rsi, r14	      2189	prdbg.c	FUNCTION_66	IF_2	CALL_4
0x4001126	          0x4889df	                            mov rdi, rbx	      2189	prdbg.c	FUNCTION_66	IF_2	CALL_4
0x4001129	      0xe89cf4ffff	                call sym.substitute_type	      2189	prdbg.c	FUNCTION_66	IF_2	CALL_4
0x400112e	          0x4189c5	                           mov r13d, eax	      2189	prdbg.c	FUNCTION_66	IF_2	CALL_4
0x4001131	            0x85c0	                           test eax, eax	      2189	prdbg.c	FUNCTION_66	IF_2	CALL_4
0x4001133	            0x750d	                           jne 0x4001142	      2189	prdbg.c	FUNCTION_66	IF_2	CALL_4
0x4001135	          0x4c89f7	                            mov rdi, r14	      2191	prdbg.c	FUNCTION_66	IF_2	CALL_5
0x4001138	      0xe800000000	                          call 0x400113d	      2191	prdbg.c	FUNCTION_66	IF_2	CALL_5
0x400113d	      0xe9b0000000	                           jmp 0x40011f2	      2192	prdbg.c	FUNCTION_66	IF_2
0x4001142	      0xbe00000000	                              mov esi, 0	      2195	prdbg.c	FUNCTION_66	IF_3	CALL_6
0x4001147	          0x4889df	                            mov rdi, rbx	      2195	prdbg.c	FUNCTION_66	IF_3	CALL_6
0x400114a	      0xe826f3ffff	                   call sym.prepend_type	      2195	prdbg.c	FUNCTION_66	IF_3	CALL_6
0x400114f	          0x4189c5	                           mov r13d, eax	      2195	prdbg.c	FUNCTION_66	IF_3	CALL_6
0x4001152	            0x85c0	                           test eax, eax	      2195	prdbg.c	FUNCTION_66	IF_3	CALL_6
0x4001154	            0x750d	                           jne 0x4001163	      2195	prdbg.c	FUNCTION_66	IF_3	CALL_6
0x4001156	          0x4c89f7	                            mov rdi, r14	      2197	prdbg.c	FUNCTION_66	IF_3	CALL_7
0x4001159	      0xe800000000	                          call 0x400115e	      2197	prdbg.c	FUNCTION_66	IF_3	CALL_7
0x400115e	      0xe98f000000	                           jmp 0x40011f2	      2198	prdbg.c	FUNCTION_66	IF_3
0x4001163	          0x4889df	                            mov rdi, rbx	      2201	prdbg.c	FUNCTION_66	CALL_8
0x4001166	      0xe81af0ffff	                       call sym.pop_type	      2201	prdbg.c	FUNCTION_66	CALL_8
0x400116b	          0x4989c7	                            mov r15, rax	      2201	prdbg.c	FUNCTION_66	CALL_8
0x400116e	          0x4885c0	                           test rax, rax	      2202	prdbg.c	FUNCTION_66	IF_4
0x4001171	            0x7510	                           jne 0x4001183	      2202	prdbg.c	FUNCTION_66	IF_4
0x4001173	          0x4c89f7	                            mov rdi, r14	      2204	prdbg.c	FUNCTION_66	IF_4	CALL_9
0x4001176	      0xe800000000	                          call 0x400117b	      2204	prdbg.c	FUNCTION_66	IF_4	CALL_9
0x400117b	    0x41bd00000000	                             mov r13d, 0	      2205	prdbg.c	FUNCTION_66	IF_4
0x4001181	            0xeb6f	                           jmp 0x40011f2	      2205	prdbg.c	FUNCTION_66	IF_4
0x4001183	          0x4489e6	                           mov esi, r12d	      2208	prdbg.c	FUNCTION_66	IF_5	CALL_10
0x4001186	          0x4889df	                            mov rdi, rbx	      2208	prdbg.c	FUNCTION_66	IF_5	CALL_10
0x4001189	      0xe8b2f1ffff	              call sym.tg_fix_visibility	      2208	prdbg.c	FUNCTION_66	IF_5	CALL_10
0x400118e	          0x4189c5	                           mov r13d, eax	      2208	prdbg.c	FUNCTION_66	IF_5	CALL_10
0x4001191	            0x85c0	                           test eax, eax	      2208	prdbg.c	FUNCTION_66	IF_5	CALL_10
0x4001193	            0x7512	                           jne 0x40011a7	      2208	prdbg.c	FUNCTION_66	IF_5	CALL_10
0x4001195	          0x4c89ff	                            mov rdi, r15	      2210	prdbg.c	FUNCTION_66	IF_5	CALL_11
0x4001198	      0xe800000000	                          call 0x400119d	      2210	prdbg.c	FUNCTION_66	IF_5	CALL_11
0x400119d	          0x4c89f7	                            mov rdi, r14	      2211	prdbg.c	FUNCTION_66	IF_5	CALL_12
0x40011a0	      0xe800000000	                          call 0x40011a5	      2211	prdbg.c	FUNCTION_66	IF_5	CALL_12
0x40011a5	            0xeb4b	                           jmp 0x40011f2	      2212	prdbg.c	FUNCTION_66	IF_5
0x40011a7	          0x4489e7	                           mov edi, r12d	      2215	prdbg.c	FUNCTION_66
0x40011aa	      0xe8b1feffff	                call sym.visibility_name	      2215	prdbg.c	FUNCTION_66
0x40011af	              0x50	                                push rax	        97	stdio2.h	CALL_93
0x40011b0	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      2215	prdbg.c	FUNCTION_66
0x40011b4	          0xff7008	                    push qword [rax + 8]	        97	stdio2.h	CALL_93
0x40011b7	          0x4d89f9	                             mov r9, r15	        97	stdio2.h	CALL_93
0x40011ba	        0x4c8b4320	              mov r8, qword [rbx + 0x20]	        97	stdio2.h	CALL_93
0x40011be	          0x4889e9	                            mov rcx, rbp	        97	stdio2.h	CALL_93
0x40011c1	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_93
0x40011c6	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_93
0x40011cb	          0x488b3b	                    mov rdi, qword [rbx]	        97	stdio2.h	CALL_93
0x40011ce	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_93
0x40011d3	      0xe800000000	                          call 0x40011d8	        97	stdio2.h	CALL_93
0x40011d8	          0x4c89ff	                            mov rdi, r15	      2218	prdbg.c	FUNCTION_66	CALL_14
0x40011db	      0xe800000000	                          call 0x40011e0	      2218	prdbg.c	FUNCTION_66	CALL_14
0x40011e0	          0x4c89f7	                            mov rdi, r14	      2219	prdbg.c	FUNCTION_66	CALL_15
0x40011e3	      0xe800000000	                          call 0x40011e8	      2219	prdbg.c	FUNCTION_66	CALL_15
0x40011e8	        0x4883c410	                           add rsp, 0x10	      2221	prdbg.c	FUNCTION_66
0x40011ec	    0x41bd01000000	                             mov r13d, 1	      2221	prdbg.c	FUNCTION_66
0x40011f2	          0x4489e8	                           mov eax, r13d	      2222	prdbg.c	FUNCTION_66
0x40011f5	        0x4883c408	                              add rsp, 8	      2222	prdbg.c	FUNCTION_66
0x40011f9	              0x5b	                                 pop rbx	      2222	prdbg.c	FUNCTION_66
0x40011fa	              0x5d	                                 pop rbp	      2222	prdbg.c	FUNCTION_66
0x40011fb	            0x415c	                                 pop r12	      2222	prdbg.c	FUNCTION_66
0x40011fd	            0x415d	                                 pop r13	      2222	prdbg.c	FUNCTION_66
0x40011ff	            0x415e	                                 pop r14	      2222	prdbg.c	FUNCTION_66
0x4001201	            0x415f	                                 pop r15	      2222	prdbg.c	FUNCTION_66
0x4001203	              0xc3	                                     ret	      2222	prdbg.c	FUNCTION_66
pr_tag	IF,1:WHILE,0:ELSE,0:CALL,3:FOR,0:functions,0:SWITCH,0:DO,0	24
0x40001c0	              0x55	                                push rbp	      1679	prdbg.c	FUNCTION_45
0x40001c1	              0x53	                                push rbx	      1679	prdbg.c	FUNCTION_45
0x40001c2	        0x4883ec08	                              sub rsp, 8	      1679	prdbg.c	FUNCTION_45
0x40001c6	          0x4889fd	                            mov rbp, rdi	      1679	prdbg.c	FUNCTION_45
0x40001c9	      0xe8b7ffffff	                       call sym.pop_type	      1683	prdbg.c	FUNCTION_45	CALL_1
0x40001ce	          0x4889c3	                            mov rbx, rax	      1683	prdbg.c	FUNCTION_45	CALL_1
0x40001d1	      0xb800000000	                              mov eax, 0	      1685	prdbg.c	FUNCTION_45	IF_1
0x40001d6	          0x4885db	                           test rbx, rbx	      1684	prdbg.c	FUNCTION_45	IF_1
0x40001d9	            0x7430	                            je 0x400020b	      1684	prdbg.c	FUNCTION_45	IF_1
0x40001db	          0x4889ef	                            mov rdi, rbp	      1687	prdbg.c	FUNCTION_45	CALL_2
0x40001de	      0xe8e6feffff	                         call sym.indent	      1687	prdbg.c	FUNCTION_45	CALL_2
0x40001e3	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_93
0x40001e6	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_93
0x40001eb	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_93
0x40001f0	        0x488b7d00	                    mov rdi, qword [rbp]	        97	stdio2.h	CALL_93
0x40001f4	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_93
0x40001f9	      0xe800000000	                          call 0x40001fe	        97	stdio2.h	CALL_93
0x40001fe	          0x4889df	                            mov rdi, rbx	      1690	prdbg.c	FUNCTION_45	CALL_3
0x4000201	      0xe800000000	                          call 0x4000206	      1690	prdbg.c	FUNCTION_45	CALL_3
0x4000206	      0xb801000000	                              mov eax, 1	      1692	prdbg.c	FUNCTION_45
0x400020b	        0x4883c408	                              add rsp, 8	      1693	prdbg.c	FUNCTION_45
0x400020f	              0x5b	                                 pop rbx	      1693	prdbg.c	FUNCTION_45
0x4000210	              0x5d	                                 pop rbp	      1693	prdbg.c	FUNCTION_45
0x4000211	              0xc3	                                     ret	      1693	prdbg.c	FUNCTION_45
pr_tag_type	IF,5:WHILE,0:ELSE,1:CALL,4:FOR,0:functions,0:SWITCH,1:DO,0	75
0x4001311	            0x4155	                                push r13	      1602	prdbg.c	FUNCTION_43
0x4001313	            0x4154	                                push r12	      1602	prdbg.c	FUNCTION_43
0x4001315	              0x55	                                push rbp	      1602	prdbg.c	FUNCTION_43
0x4001316	              0x53	                                push rbx	      1602	prdbg.c	FUNCTION_43
0x4001317	        0x4883ec28	                           sub rsp, 0x28	      1602	prdbg.c	FUNCTION_43
0x400131b	    0x64488b042528	                mov rax, qword fs:[0x28]	      1602	prdbg.c	FUNCTION_43
0x4001324	      0x4889442418	             mov qword [rsp + 0x18], rax	      1602	prdbg.c	FUNCTION_43
0x4001329	            0x31c0	                            xor eax, eax	      1602	prdbg.c	FUNCTION_43
0x400132b	          0x8d41f9	                      lea eax, [rcx - 7]	      1607	prdbg.c	FUNCTION_43	SWITCH_1
0x400132e	          0x83f804	                              cmp eax, 4	      1607	prdbg.c	FUNCTION_43	SWITCH_1
0x4001331	            0x772a	                            ja 0x400135d	      1607	prdbg.c	FUNCTION_43	SWITCH_1
0x4001333	          0x4889fb	                            mov rbx, rdi	      1607	prdbg.c	FUNCTION_43	SWITCH_1
0x4001336	          0x4889f5	                            mov rbp, rsi	      1607	prdbg.c	FUNCTION_43	SWITCH_1
0x4001339	          0x4189d5	                           mov r13d, edx	      1607	prdbg.c	FUNCTION_43	SWITCH_1
0x400133c	          0x4189cc	                           mov r12d, ecx	      1607	prdbg.c	FUNCTION_43	SWITCH_1
0x400133f	            0x89c0	                            mov eax, eax	      1607	prdbg.c	FUNCTION_43	SWITCH_1
0x4001341	    0xff24c5000000	                       jmp qword [rax*8]	      1607	prdbg.c	FUNCTION_43	SWITCH_1
0x4001348	      0xbe00000000	                              mov esi, 0	      1613	prdbg.c	FUNCTION_43	SWITCH_1
0x400134d	            0xeb1f	                           jmp 0x400136e	      1613	prdbg.c	FUNCTION_43	SWITCH_1
0x400134f	      0xbe00000000	                              mov esi, 0	      1619	prdbg.c	FUNCTION_43	SWITCH_1
0x4001354	            0xeb18	                           jmp 0x400136e	      1620	prdbg.c	FUNCTION_43	SWITCH_1
0x4001356	      0xbe00000000	                              mov esi, 0	      1622	prdbg.c	FUNCTION_43	SWITCH_1
0x400135b	            0xeb11	                           jmp 0x400136e	      1623	prdbg.c	FUNCTION_43	SWITCH_1
0x400135d	      0xe800000000	                          call 0x4001362	      1625	prdbg.c	FUNCTION_43	SWITCH_1	CALL_1
0x4001362	      0xbe00000000	                              mov esi, 0	      1610	prdbg.c	FUNCTION_43	SWITCH_1
0x4001367	            0xeb05	                           jmp 0x400136e	      1610	prdbg.c	FUNCTION_43	SWITCH_1
0x4001369	      0xbe00000000	                              mov esi, 0	      1616	prdbg.c	FUNCTION_43	SWITCH_1
0x400136e	          0x4889df	                            mov rdi, rbx	      1629	prdbg.c	FUNCTION_43	IF_1	CALL_2
0x4001371	      0xe81affffff	                      call sym.push_type	      1629	prdbg.c	FUNCTION_43	IF_1	CALL_2
0x4001376	            0x85c0	                           test eax, eax	      1629	prdbg.c	FUNCTION_43	IF_1	CALL_2
0x4001378	            0x747a	                            je 0x40013f4	      1629	prdbg.c	FUNCTION_43	IF_1	CALL_2
0x400137a	          0x4889ee	                            mov rsi, rbp	      1632	prdbg.c	FUNCTION_43	IF_2
0x400137d	          0x4885ed	                           test rbp, rbp	      1631	prdbg.c	FUNCTION_43	IF_2
0x4001380	            0x7522	                           jne 0x40013a4	      1631	prdbg.c	FUNCTION_43	IF_2
0x4001382	          0x4589e8	                           mov r8d, r13d	        33	stdio2.h	FUNCTION_84	CALL_1
0x4001385	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x400138a	      0xba16000000	                           mov edx, 0x16	        33	stdio2.h	FUNCTION_84	CALL_1
0x400138f	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_84	CALL_1
0x4001394	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_84	CALL_1
0x4001397	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x400139c	      0xe800000000	                          call 0x40013a1	        33	stdio2.h	FUNCTION_84	CALL_1
0x40013a1	          0x4889e6	                            mov rsi, rsp	      1636	prdbg.c	FUNCTION_43	ELSE_1
0x40013a4	          0x4889df	                            mov rdi, rbx	      1639	prdbg.c	FUNCTION_43	IF_3	CALL_3
0x40013a7	      0xe87bf1ffff	                    call sym.append_type	      1639	prdbg.c	FUNCTION_43	IF_3	CALL_3
0x40013ac	            0x85c0	                           test eax, eax	      1639	prdbg.c	FUNCTION_43	IF_3	CALL_3
0x40013ae	            0x7444	                            je 0x40013f4	      1639	prdbg.c	FUNCTION_43	IF_3	CALL_3
0x40013b0	          0x4885ed	                           test rbp, rbp	      1641	prdbg.c	FUNCTION_43	IF_4
0x40013b3	            0x743a	                            je 0x40013ef	      1641	prdbg.c	FUNCTION_43	IF_4
0x40013b5	        0x4183fc0b	                           cmp r12d, 0xb	      1641	prdbg.c	FUNCTION_43	IF_4
0x40013b9	            0x7434	                            je 0x40013ef	      1641	prdbg.c	FUNCTION_43	IF_4
0x40013bb	          0x4589e8	                           mov r8d, r13d	        33	stdio2.h	FUNCTION_84	CALL_1
0x40013be	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x40013c3	      0xba16000000	                           mov edx, 0x16	        33	stdio2.h	FUNCTION_84	CALL_1
0x40013c8	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_84	CALL_1
0x40013cd	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_84	CALL_1
0x40013d0	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x40013d5	      0xe800000000	                          call 0x40013da	        33	stdio2.h	FUNCTION_84	CALL_1
0x40013da	          0x4889e6	                            mov rsi, rsp	      1644	prdbg.c	FUNCTION_43	IF_4	IF_5	CALL_4
0x40013dd	          0x4889df	                            mov rdi, rbx	      1644	prdbg.c	FUNCTION_43	IF_4	IF_5	CALL_4
0x40013e0	      0xe842f1ffff	                    call sym.append_type	      1644	prdbg.c	FUNCTION_43	IF_4	IF_5	CALL_4
0x40013e5	            0x85c0	                           test eax, eax	      1648	prdbg.c	FUNCTION_43
0x40013e7	           0xf95c0	                                setne al	      1648	prdbg.c	FUNCTION_43
0x40013ea	           0xfb6c0	                           movzx eax, al	      1648	prdbg.c	FUNCTION_43
0x40013ed	            0xeb05	                           jmp 0x40013f4	      1648	prdbg.c	FUNCTION_43
0x40013ef	      0xb801000000	                              mov eax, 1	      1648	prdbg.c	FUNCTION_43
0x40013f4	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      1649	prdbg.c	FUNCTION_43
0x40013f9	    0x644833142528	                xor rdx, qword fs:[0x28]	      1649	prdbg.c	FUNCTION_43
0x4001402	            0x7405	                            je 0x4001409	      1649	prdbg.c	FUNCTION_43
0x4001404	      0xe800000000	                          call 0x4001409	      1649	prdbg.c	FUNCTION_43
0x4001409	        0x4883c428	                           add rsp, 0x28	      1649	prdbg.c	FUNCTION_43
0x400140d	              0x5b	                                 pop rbx	      1649	prdbg.c	FUNCTION_43
0x400140e	              0x5d	                                 pop rbp	      1649	prdbg.c	FUNCTION_43
0x400140f	            0x415c	                                 pop r12	      1649	prdbg.c	FUNCTION_43
0x4001411	            0x415d	                                 pop r13	      1649	prdbg.c	FUNCTION_43
0x4001413	              0xc3	                                     ret	      1649	prdbg.c	FUNCTION_43
pr_struct_field	IF,7:WHILE,0:ELSE,0:CALL,14:FOR,0:functions,0:SWITCH,0:DO,0	94
0x4003220	            0x4155	                                push r13	      1152	prdbg.c	FUNCTION_32
0x4003222	            0x4154	                                push r12	      1152	prdbg.c	FUNCTION_32
0x4003224	              0x55	                                push rbp	      1152	prdbg.c	FUNCTION_32
0x4003225	              0x53	                                push rbx	      1152	prdbg.c	FUNCTION_32
0x4003226	        0x4883ec28	                           sub rsp, 0x28	      1152	prdbg.c	FUNCTION_32
0x400322a	          0x4889fb	                            mov rbx, rdi	      1152	prdbg.c	FUNCTION_32
0x400322d	          0x4989d4	                            mov r12, rdx	      1152	prdbg.c	FUNCTION_32
0x4003230	          0x4889cd	                            mov rbp, rcx	      1152	prdbg.c	FUNCTION_32
0x4003233	          0x4589c5	                           mov r13d, r8d	      1152	prdbg.c	FUNCTION_32
0x4003236	    0x64488b042528	                mov rax, qword fs:[0x28]	      1152	prdbg.c	FUNCTION_32
0x400323f	      0x4889442418	             mov qword [rsp + 0x18], rax	      1152	prdbg.c	FUNCTION_32
0x4003244	            0x31c0	                            xor eax, eax	      1152	prdbg.c	FUNCTION_32
0x4003246	      0xe87fd3ffff	                call sym.substitute_type	      1157	prdbg.c	FUNCTION_32	IF_1	CALL_1
0x400324b	            0x85c0	                           test eax, eax	      1157	prdbg.c	FUNCTION_32	IF_1	CALL_1
0x400324d	     0xf8401010000	                            je 0x4003354	      1157	prdbg.c	FUNCTION_32	IF_1	CALL_1
0x4003253	      0xbe00000000	                              mov esi, 0	      1160	prdbg.c	FUNCTION_32	IF_2	CALL_2
0x4003258	          0x4889df	                            mov rdi, rbx	      1160	prdbg.c	FUNCTION_32	IF_2	CALL_2
0x400325b	      0xe8c7d2ffff	                    call sym.append_type	      1160	prdbg.c	FUNCTION_32	IF_2	CALL_2
0x4003260	            0x85c0	                           test eax, eax	      1160	prdbg.c	FUNCTION_32	IF_2	CALL_2
0x4003262	     0xf84ec000000	                            je 0x4003354	      1160	prdbg.c	FUNCTION_32	IF_2	CALL_2
0x4003268	          0x4885ed	                           test rbp, rbp	      1163	prdbg.c	FUNCTION_32	IF_3
0x400326b	            0x745c	                            je 0x40032c9	      1163	prdbg.c	FUNCTION_32	IF_3
0x400326d	          0x4989e8	                             mov r8, rbp	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003270	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003275	      0xba16000000	                           mov edx, 0x16	        33	stdio2.h	FUNCTION_84	CALL_1
0x400327a	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_84	CALL_1
0x400327f	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003282	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003287	      0xe800000000	                          call 0x400328c	        33	stdio2.h	FUNCTION_84	CALL_1
0x400328c	      0xbe00000000	                              mov esi, 0	      1166	prdbg.c	FUNCTION_32	IF_3	IF_4	CALL_4
0x4003291	          0x4889df	                            mov rdi, rbx	      1166	prdbg.c	FUNCTION_32	IF_3	IF_4	CALL_4
0x4003294	      0xe88ed2ffff	                    call sym.append_type	      1166	prdbg.c	FUNCTION_32	IF_3	IF_4	CALL_4
0x4003299	            0x85c0	                           test eax, eax	      1166	prdbg.c	FUNCTION_32	IF_3	IF_4	CALL_4
0x400329b	     0xf84b3000000	                            je 0x4003354	      1166	prdbg.c	FUNCTION_32	IF_3	IF_4	CALL_4
0x40032a1	          0x4889e6	                            mov rsi, rsp	      1167	prdbg.c	FUNCTION_32	IF_3	IF_4	CALL_5
0x40032a4	          0x4889df	                            mov rdi, rbx	      1167	prdbg.c	FUNCTION_32	IF_3	IF_4	CALL_5
0x40032a7	      0xe87bd2ffff	                    call sym.append_type	      1167	prdbg.c	FUNCTION_32	IF_3	IF_4	CALL_5
0x40032ac	            0x85c0	                           test eax, eax	      1167	prdbg.c	FUNCTION_32	IF_3	IF_4	CALL_5
0x40032ae	     0xf84a0000000	                            je 0x4003354	      1167	prdbg.c	FUNCTION_32	IF_3	IF_4	CALL_5
0x40032b4	      0xbe00000000	                              mov esi, 0	      1168	prdbg.c	FUNCTION_32	IF_3	IF_4	CALL_6
0x40032b9	          0x4889df	                            mov rdi, rbx	      1168	prdbg.c	FUNCTION_32	IF_3	IF_4	CALL_6
0x40032bc	      0xe866d2ffff	                    call sym.append_type	      1168	prdbg.c	FUNCTION_32	IF_3	IF_4	CALL_6
0x40032c1	            0x85c0	                           test eax, eax	      1168	prdbg.c	FUNCTION_32	IF_3	IF_4	CALL_6
0x40032c3	     0xf848b000000	                            je 0x4003354	      1168	prdbg.c	FUNCTION_32	IF_3	IF_4	CALL_6
0x40032c9	          0x4d89e0	                             mov r8, r12	        33	stdio2.h	FUNCTION_84	CALL_1
0x40032cc	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x40032d1	      0xba16000000	                           mov edx, 0x16	        33	stdio2.h	FUNCTION_84	CALL_1
0x40032d6	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_84	CALL_1
0x40032db	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_84	CALL_1
0x40032de	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x40032e3	      0xe800000000	                          call 0x40032e8	        33	stdio2.h	FUNCTION_84	CALL_1
0x40032e8	      0xbe00000000	                              mov esi, 0	      1173	prdbg.c	FUNCTION_32	IF_5	CALL_8
0x40032ed	          0x4889df	                            mov rdi, rbx	      1173	prdbg.c	FUNCTION_32	IF_5	CALL_8
0x40032f0	      0xe832d2ffff	                    call sym.append_type	      1173	prdbg.c	FUNCTION_32	IF_5	CALL_8
0x40032f5	            0x85c0	                           test eax, eax	      1173	prdbg.c	FUNCTION_32	IF_5	CALL_8
0x40032f7	            0x745b	                            je 0x4003354	      1173	prdbg.c	FUNCTION_32	IF_5	CALL_8
0x40032f9	          0x4889e6	                            mov rsi, rsp	      1174	prdbg.c	FUNCTION_32	IF_5	CALL_9
0x40032fc	          0x4889df	                            mov rdi, rbx	      1174	prdbg.c	FUNCTION_32	IF_5	CALL_9
0x40032ff	      0xe823d2ffff	                    call sym.append_type	      1174	prdbg.c	FUNCTION_32	IF_5	CALL_9
0x4003304	            0x85c0	                           test eax, eax	      1174	prdbg.c	FUNCTION_32	IF_5	CALL_9
0x4003306	            0x744c	                            je 0x4003354	      1174	prdbg.c	FUNCTION_32	IF_5	CALL_9
0x4003308	      0xbe00000000	                              mov esi, 0	      1175	prdbg.c	FUNCTION_32	IF_5	CALL_10
0x400330d	          0x4889df	                            mov rdi, rbx	      1175	prdbg.c	FUNCTION_32	IF_5	CALL_10
0x4003310	      0xe812d2ffff	                    call sym.append_type	      1175	prdbg.c	FUNCTION_32	IF_5	CALL_10
0x4003315	            0x85c0	                           test eax, eax	      1175	prdbg.c	FUNCTION_32	IF_5	CALL_10
0x4003317	            0x743b	                            je 0x4003354	      1175	prdbg.c	FUNCTION_32	IF_5	CALL_10
0x4003319	          0x4889df	                            mov rdi, rbx	      1176	prdbg.c	FUNCTION_32	IF_5	CALL_11
0x400331c	      0xe8efd7ffff	                    call sym.indent_type	      1176	prdbg.c	FUNCTION_32	IF_5	CALL_11
0x4003321	            0x85c0	                           test eax, eax	      1176	prdbg.c	FUNCTION_32	IF_5	CALL_11
0x4003323	            0x742f	                            je 0x4003354	      1176	prdbg.c	FUNCTION_32	IF_5	CALL_11
0x4003325	          0x4889df	                            mov rdi, rbx	      1179	prdbg.c	FUNCTION_32	CALL_12
0x4003328	      0xe858ceffff	                       call sym.pop_type	      1179	prdbg.c	FUNCTION_32	CALL_12
0x400332d	          0x4889c5	                            mov rbp, rax	      1179	prdbg.c	FUNCTION_32	CALL_12
0x4003330	      0xb800000000	                              mov eax, 0	      1181	prdbg.c	FUNCTION_32	IF_6
0x4003335	          0x4885ed	                           test rbp, rbp	      1180	prdbg.c	FUNCTION_32	IF_6
0x4003338	            0x741a	                            je 0x4003354	      1180	prdbg.c	FUNCTION_32	IF_6
0x400333a	          0x4489ee	                           mov esi, r13d	      1183	prdbg.c	FUNCTION_32	IF_7	CALL_13
0x400333d	          0x4889df	                            mov rdi, rbx	      1183	prdbg.c	FUNCTION_32	IF_7	CALL_13
0x4003340	      0xe843daffff	              call sym.pr_fix_visibility	      1183	prdbg.c	FUNCTION_32	IF_7	CALL_13
0x4003345	            0x85c0	                           test eax, eax	      1183	prdbg.c	FUNCTION_32	IF_7	CALL_13
0x4003347	            0x740b	                            je 0x4003354	      1183	prdbg.c	FUNCTION_32	IF_7	CALL_13
0x4003349	          0x4889ee	                            mov rsi, rbp	      1186	prdbg.c	FUNCTION_32	CALL_14
0x400334c	          0x4889df	                            mov rdi, rbx	      1186	prdbg.c	FUNCTION_32	CALL_14
0x400334f	      0xe8d3d1ffff	                    call sym.append_type	      1186	prdbg.c	FUNCTION_32	CALL_14
0x4003354	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      1187	prdbg.c	FUNCTION_32
0x4003359	    0x644833142528	                xor rdx, qword fs:[0x28]	      1187	prdbg.c	FUNCTION_32
0x4003362	            0x7405	                            je 0x4003369	      1187	prdbg.c	FUNCTION_32
0x4003364	      0xe800000000	                          call 0x4003369	      1187	prdbg.c	FUNCTION_32
0x4003369	        0x4883c428	                           add rsp, 0x28	      1187	prdbg.c	FUNCTION_32
0x400336d	              0x5b	                                 pop rbx	      1187	prdbg.c	FUNCTION_32
0x400336e	              0x5d	                                 pop rbp	      1187	prdbg.c	FUNCTION_32
0x400336f	            0x415c	                                 pop r12	      1187	prdbg.c	FUNCTION_32
0x4003371	            0x415d	                                 pop r13	      1187	prdbg.c	FUNCTION_32
0x4003373	              0xc3	                                     ret	      1187	prdbg.c	FUNCTION_32
tg_end_class_type	IF,1:WHILE,0:ELSE,0:CALL,3:FOR,0:functions,0:SWITCH,0:DO,0	30
0x4002130	              0x53	                                push rbx	      2437	prdbg.c	FUNCTION_70
0x4002131	          0x4889fb	                            mov rbx, rdi	      2437	prdbg.c	FUNCTION_70
0x4002134	        0x488b4710	            mov rax, qword [rdi + 0x10] 	      2441	prdbg.c	FUNCTION_70
0x4002138	        0x488b4808	                mov rcx, qword [rax + 8]	        97	stdio2.h	CALL_93
0x400213c	        0x4c8b4820	              mov r9, qword [rax + 0x20]	        97	stdio2.h	CALL_93
0x4002140	        0x4c8b4720	              mov r8, qword [rdi + 0x20]	        97	stdio2.h	CALL_93
0x4002144	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_93
0x4002149	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_93
0x400214e	          0x488b3f	                    mov rdi, qword [rdi]	        97	stdio2.h	CALL_93
0x4002151	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_93
0x4002156	      0xe800000000	                          call 0x400215b	        97	stdio2.h	CALL_93
0x400215b	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      2442	prdbg.c	FUNCTION_70	IF_1
0x400215f	        0x83783000	               cmp dword [rax + 0x30], 0	      2442	prdbg.c	FUNCTION_70	IF_1
0x4002163	            0x7428	                            je 0x400218d	      2442	prdbg.c	FUNCTION_70	IF_1
0x4002165	        0x488b4828	            mov rcx, qword [rax + 0x28] 	        97	stdio2.h	CALL_93
0x4002169	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_93
0x400216e	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_93
0x4002173	          0x488b3b	                    mov rdi, qword [rbx]	        97	stdio2.h	CALL_93
0x4002176	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_93
0x400217b	      0xe800000000	                          call 0x4002180	        97	stdio2.h	CALL_93
0x4002180	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      2445	prdbg.c	FUNCTION_70	IF_1	CALL_1
0x4002184	        0x488b7828	            mov rdi, qword [rax + 0x28] 	      2445	prdbg.c	FUNCTION_70	IF_1	CALL_1
0x4002188	      0xe800000000	                          call 0x400218d	      2445	prdbg.c	FUNCTION_70	IF_1	CALL_1
0x400218d	          0x488b33	                    mov rsi, qword [rbx]	      2447	prdbg.c	FUNCTION_70	CALL_2
0x4002190	      0xbf0a000000	                            mov edi, 0xa	      2447	prdbg.c	FUNCTION_70	CALL_2
0x4002195	      0xe800000000	                          call 0x400219a	      2447	prdbg.c	FUNCTION_70	CALL_2
0x400219a	          0x4889df	                            mov rdi, rbx	      2449	prdbg.c	FUNCTION_70	CALL_3
0x400219d	      0xe8f6e1ffff	             call sym.tg_end_struct_type	      2449	prdbg.c	FUNCTION_70	CALL_3
0x40021a2	              0x5b	                                 pop rbx	      2450	prdbg.c	FUNCTION_70
0x40021a3	              0xc3	                                     ret	      2450	prdbg.c	FUNCTION_70
pop_type	IF,0:WHILE,0:ELSE,0:CALL,2:FOR,0:functions,0:SWITCH,0:DO,0	17
0x4000185	              0x53	                                push rbx	       474	prdbg.c	FUNCTION_9
0x4000186	        0x488b4710	            mov rax, qword [rdi + 0x10] 	       478	prdbg.c	FUNCTION_9	CALL_1
0x400018a	          0x4885c0	                           test rax, rax	       478	prdbg.c	FUNCTION_9	CALL_1
0x400018d	            0x7519	                           jne 0x40001a8	       478	prdbg.c	FUNCTION_9	CALL_1
0x400018f	      0xb900000000	                              mov ecx, 0	       478	prdbg.c	FUNCTION_9	CALL_1
0x4000194	      0xbade010000	                          mov edx, 0x1de	       478	prdbg.c	FUNCTION_9	CALL_1
0x4000199	      0xbe00000000	                              mov esi, 0	       478	prdbg.c	FUNCTION_9	CALL_1
0x400019e	      0xbf00000000	                              mov edi, 0	       478	prdbg.c	FUNCTION_9	CALL_1
0x40001a3	      0xe800000000	                          call 0x40001a8	       478	prdbg.c	FUNCTION_9	CALL_1
0x40001a8	          0x488b10	                    mov rdx, qword [rax]	       481	prdbg.c	FUNCTION_9
0x40001ab	        0x48895710	             mov qword [rdi + 0x10], rdx	       481	prdbg.c	FUNCTION_9
0x40001af	        0x488b5808	                mov rbx, qword [rax + 8]	       482	prdbg.c	FUNCTION_9
0x40001b3	          0x4889c7	                            mov rdi, rax	       483	prdbg.c	FUNCTION_9	CALL_2
0x40001b6	      0xe800000000	                          call 0x40001bb	       483	prdbg.c	FUNCTION_9	CALL_2
0x40001bb	          0x4889d8	                            mov rax, rbx	       486	prdbg.c	FUNCTION_9
0x40001be	              0x5b	                                 pop rbx	       486	prdbg.c	FUNCTION_9
0x40001bf	              0xc3	                                     ret	       486	prdbg.c	FUNCTION_9
tg_struct_field	IF,3:WHILE,0:ELSE,0:CALL,3:FOR,0:functions,0:SWITCH,0:DO,0	44
0x4001204	            0x4155	                                push r13	      2076	prdbg.c	FUNCTION_63
0x4001206	            0x4154	                                push r12	      2076	prdbg.c	FUNCTION_63
0x4001208	              0x55	                                push rbp	      2076	prdbg.c	FUNCTION_63
0x4001209	              0x53	                                push rbx	      2076	prdbg.c	FUNCTION_63
0x400120a	        0x4883ec08	                              sub rsp, 8	      2076	prdbg.c	FUNCTION_63
0x400120e	          0x4889fb	                            mov rbx, rdi	      2076	prdbg.c	FUNCTION_63
0x4001211	          0x4989f5	                            mov r13, rsi	      2076	prdbg.c	FUNCTION_63
0x4001214	          0x4589c4	                           mov r12d, r8d	      2076	prdbg.c	FUNCTION_63
0x4001217	      0xe869efffff	                       call sym.pop_type	      2080	prdbg.c	FUNCTION_63	CALL_1
0x400121c	          0x4889c5	                            mov rbp, rax	      2080	prdbg.c	FUNCTION_63	CALL_1
0x400121f	      0xb800000000	                              mov eax, 0	      2082	prdbg.c	FUNCTION_63	IF_1
0x4001224	          0x4885ed	                           test rbp, rbp	      2081	prdbg.c	FUNCTION_63	IF_1
0x4001227	            0x745c	                            je 0x4001285	      2081	prdbg.c	FUNCTION_63	IF_1
0x4001229	          0x4489e6	                           mov esi, r12d	      2084	prdbg.c	FUNCTION_63	IF_2	CALL_2
0x400122c	          0x4889df	                            mov rdi, rbx	      2084	prdbg.c	FUNCTION_63	IF_2	CALL_2
0x400122f	      0xe80cf1ffff	              call sym.tg_fix_visibility	      2084	prdbg.c	FUNCTION_63	IF_2	CALL_2
0x4001234	            0x85c0	                           test eax, eax	      2084	prdbg.c	FUNCTION_63	IF_2	CALL_2
0x4001236	            0x744d	                            je 0x4001285	      2084	prdbg.c	FUNCTION_63	IF_2	CALL_2
0x4001238	      0xb801000000	                              mov eax, 1	      2089	prdbg.c	FUNCTION_63	IF_3
0x400123d	      0x41807d0000	                       cmp byte [r13], 0	      2088	prdbg.c	FUNCTION_63	IF_3
0x4001242	            0x7441	                            je 0x4001285	      2088	prdbg.c	FUNCTION_63	IF_3
0x4001244	          0x4489e7	                           mov edi, r12d	      2091	prdbg.c	FUNCTION_63
0x4001247	      0xe814feffff	                call sym.visibility_name	      2091	prdbg.c	FUNCTION_63
0x400124c	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	      2092	prdbg.c	FUNCTION_63
0x4001250	        0x4883ec08	                              sub rsp, 8	        97	stdio2.h	CALL_93
0x4001254	              0x50	                                push rax	        97	stdio2.h	CALL_93
0x4001255	          0xff7208	                    push qword [rdx + 8]	        97	stdio2.h	CALL_93
0x4001258	          0xff7220	                 push qword [rdx + 0x20]	        97	stdio2.h	CALL_93
0x400125b	          0x4989e9	                             mov r9, rbp	        97	stdio2.h	CALL_93
0x400125e	        0x4c8b4320	              mov r8, qword [rbx + 0x20]	        97	stdio2.h	CALL_93
0x4001262	          0x4c89e9	                            mov rcx, r13	        97	stdio2.h	CALL_93
0x4001265	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_93
0x400126a	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_93
0x400126f	          0x488b3b	                    mov rdi, qword [rbx]	        97	stdio2.h	CALL_93
0x4001272	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_93
0x4001277	      0xe800000000	                          call 0x400127c	        97	stdio2.h	CALL_93
0x400127c	        0x4883c420	                           add rsp, 0x20	      2095	prdbg.c	FUNCTION_63
0x4001280	      0xb801000000	                              mov eax, 1	      2095	prdbg.c	FUNCTION_63
0x4001285	        0x4883c408	                              add rsp, 8	      2096	prdbg.c	FUNCTION_63
0x4001289	              0x5b	                                 pop rbx	      2096	prdbg.c	FUNCTION_63
0x400128a	              0x5d	                                 pop rbp	      2096	prdbg.c	FUNCTION_63
0x400128b	            0x415c	                                 pop r12	      2096	prdbg.c	FUNCTION_63
0x400128d	            0x415d	                                 pop r13	      2096	prdbg.c	FUNCTION_63
0x400128f	              0xc3	                                     ret	      2096	prdbg.c	FUNCTION_63
tg_start_function	IF,7:WHILE,0:ELSE,2:CALL,6:FOR,0:functions,0:SWITCH,0:DO,0	86
0x40023c9	            0x4154	                                push r12	      2653	prdbg.c	FUNCTION_78
0x40023cb	              0x55	                                push rbp	      2653	prdbg.c	FUNCTION_78
0x40023cc	              0x53	                                push rbx	      2653	prdbg.c	FUNCTION_78
0x40023cd	          0x4889fb	                            mov rbx, rdi	      2653	prdbg.c	FUNCTION_78
0x40023d0	          0x4889f5	                            mov rbp, rsi	      2653	prdbg.c	FUNCTION_78
0x40023d3	            0x85d2	                           test edx, edx	      2657	prdbg.c	FUNCTION_78	IF_1
0x40023d5	            0x750e	                           jne 0x40023e5	      2657	prdbg.c	FUNCTION_78	IF_1
0x40023d7	        0x488b4710	            mov rax, qword [rdi + 0x10] 	      2658	prdbg.c	FUNCTION_78	IF_1
0x40023db	    0x48c740200000	               mov qword [rax + 0x20], 0	      2658	prdbg.c	FUNCTION_78	IF_1
0x40023e3	            0xeb0c	                           jmp 0x40023f1	      2658	prdbg.c	FUNCTION_78	IF_1
0x40023e5	        0x488b4710	            mov rax, qword [rdi + 0x10] 	      2660	prdbg.c	FUNCTION_78	ELSE_1
0x40023e9	    0x48c740200000	               mov qword [rax + 0x20], 0	      2660	prdbg.c	FUNCTION_78	ELSE_1
0x40023f1	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      2663	prdbg.c	FUNCTION_78	IF_2
0x40023f5	          0x4885c0	                           test rax, rax	      2663	prdbg.c	FUNCTION_78	IF_2
0x40023f8	            0x741f	                            je 0x4002419	      2663	prdbg.c	FUNCTION_78	IF_2
0x40023fa	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	      2664	prdbg.c	FUNCTION_78	CALL_1
0x40023fe	      0xba03000000	                              mov edx, 3	      2664	prdbg.c	FUNCTION_78	CALL_1
0x4002403	          0x4889ee	                            mov rsi, rbp	      2664	prdbg.c	FUNCTION_78	CALL_1
0x4002406	            0xffd0	                                call rax	      2664	prdbg.c	FUNCTION_78	CALL_1
0x4002408	          0x4989c4	                            mov r12, rax	      2664	prdbg.c	FUNCTION_78	CALL_1
0x400240b	          0x4885c0	                           test rax, rax	      2666	prdbg.c	FUNCTION_78	IF_3	CALL_2
0x400240e	     0xf85dc000000	                           jne 0x40024f0	      2666	prdbg.c	FUNCTION_78	IF_3	CALL_2
0x4002414	      0xe99f000000	                           jmp 0x40024b8	      2666	prdbg.c	FUNCTION_78	IF_3	CALL_2
0x4002419	          0x4889ee	                            mov rsi, rbp	      2666	prdbg.c	FUNCTION_78	IF_3	CALL_2
0x400241c	          0x4889df	                            mov rdi, rbx	      2666	prdbg.c	FUNCTION_78	IF_3	CALL_2
0x400241f	      0xe8a6e1ffff	                call sym.substitute_type	      2666	prdbg.c	FUNCTION_78	IF_3	CALL_2
0x4002424	            0x85c0	                           test eax, eax	      2666	prdbg.c	FUNCTION_78	IF_3	CALL_2
0x4002426	     0xf84d3000000	                            je 0x40024ff	      2666	prdbg.c	FUNCTION_78	IF_3	CALL_2
0x400242c	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      2669	prdbg.c	FUNCTION_78
0x4002430	    0x48c740180000	               mov qword [rax + 0x18], 0	      2669	prdbg.c	FUNCTION_78
0x4002438	            0xeb35	                           jmp 0x400246f	      2669	prdbg.c	FUNCTION_78
0x400243a	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	      2676	prdbg.c	FUNCTION_78	IF_4	IF_5
0x400243e	        0x4c896218	             mov qword [rdx + 0x18], r12	      2676	prdbg.c	FUNCTION_78	IF_4	IF_5
0x4002442	          0xc60000	                       mov byte [rax], 0	      2677	prdbg.c	FUNCTION_78	IF_4	IF_5
0x4002445	        0x488d6802	                      lea rbp, [rax + 2]	      2678	prdbg.c	FUNCTION_78	IF_4	IF_5
0x4002449	            0xeb0f	                           jmp 0x400245a	      2678	prdbg.c	FUNCTION_78	IF_4	IF_5
0x400244b	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      2682	prdbg.c	FUNCTION_78	IF_4	ELSE_2
0x400244f	    0x48c740180000	               mov qword [rax + 0x18], 0	      2682	prdbg.c	FUNCTION_78	IF_4	ELSE_2
0x4002457	          0x4c89e5	                            mov rbp, r12	      2682	prdbg.c	FUNCTION_78	IF_4	ELSE_2
0x400245a	      0xbe28000000	                           mov esi, 0x28	      2685	prdbg.c	FUNCTION_78	IF_4	CALL_4
0x400245f	          0x4889ef	                            mov rdi, rbp	      2685	prdbg.c	FUNCTION_78	IF_4	CALL_4
0x4002462	      0xe800000000	                          call 0x4002467	      2685	prdbg.c	FUNCTION_78	IF_4	CALL_4
0x4002467	          0x4885c0	                           test rax, rax	      2686	prdbg.c	FUNCTION_78	IF_4	IF_6
0x400246a	            0x7403	                            je 0x400246f	      2686	prdbg.c	FUNCTION_78	IF_4	IF_6
0x400246c	          0xc60000	                       mov byte [rax], 0	      2687	prdbg.c	FUNCTION_78	IF_4	IF_6
0x400246f	        0x4c8b6310	            mov r12, qword [rbx + 0x10] 	      2691	prdbg.c	FUNCTION_78	CALL_5
0x4002473	          0x4889ef	                            mov rdi, rbp	      2691	prdbg.c	FUNCTION_78	CALL_5
0x4002476	      0xe800000000	                          call 0x400247b	      2691	prdbg.c	FUNCTION_78	CALL_5
0x400247b	      0x4989442428	             mov qword [r12 + 0x28], rax	      2691	prdbg.c	FUNCTION_78	CALL_5
0x4002480	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      2693	prdbg.c	FUNCTION_78	IF_7	CALL_6
0x4002484	      0x4883781800	               cmp qword [rax + 0x18], 0	      2693	prdbg.c	FUNCTION_78	IF_7	CALL_6
0x4002489	            0x7511	                           jne 0x400249c	      2693	prdbg.c	FUNCTION_78	IF_7	CALL_6
0x400248b	      0xbe00000000	                              mov esi, 0	      2693	prdbg.c	FUNCTION_78	IF_7	CALL_6
0x4002490	          0x4889df	                            mov rdi, rbx	      2693	prdbg.c	FUNCTION_78	IF_7	CALL_6
0x4002493	      0xe88fe0ffff	                    call sym.append_type	      2693	prdbg.c	FUNCTION_78	IF_7	CALL_6
0x4002498	            0x85c0	                           test eax, eax	      2693	prdbg.c	FUNCTION_78	IF_7	CALL_6
0x400249a	            0x7463	                            je 0x40024ff	      2693	prdbg.c	FUNCTION_78	IF_7	CALL_6
0x400249c	    0xc74318010000	               mov dword [rbx + 0x18], 1	      2696	prdbg.c	FUNCTION_78
0x40024a3	      0xb801000000	                              mov eax, 1	      2698	prdbg.c	FUNCTION_78
0x40024a8	            0xeb55	                           jmp 0x40024ff	      2698	prdbg.c	FUNCTION_78
0x40024aa	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      2669	prdbg.c	FUNCTION_78
0x40024ae	    0x48c740180000	               mov qword [rax + 0x18], 0	      2669	prdbg.c	FUNCTION_78
0x40024b6	            0xebb7	                           jmp 0x400246f	      2669	prdbg.c	FUNCTION_78
0x40024b8	          0x4889ee	                            mov rsi, rbp	      2666	prdbg.c	FUNCTION_78	IF_3	CALL_2
0x40024bb	          0x4889df	                            mov rdi, rbx	      2666	prdbg.c	FUNCTION_78	IF_3	CALL_2
0x40024be	      0xe807e1ffff	                call sym.substitute_type	      2666	prdbg.c	FUNCTION_78	IF_3	CALL_2
0x40024c3	            0x85c0	                           test eax, eax	      2666	prdbg.c	FUNCTION_78	IF_3	CALL_2
0x40024c5	            0x75e3	                           jne 0x40024aa	      2666	prdbg.c	FUNCTION_78	IF_3	CALL_2
0x40024c7	            0xeb36	                           jmp 0x40024ff	      2666	prdbg.c	FUNCTION_78	IF_3	CALL_2
0x40024c9	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      2669	prdbg.c	FUNCTION_78
0x40024cd	    0x48c740180000	               mov qword [rax + 0x18], 0	      2669	prdbg.c	FUNCTION_78
0x40024d5	      0xbe00000000	                              mov esi, 0	      2673	prdbg.c	FUNCTION_78	IF_4	CALL_3
0x40024da	          0x4c89e7	                            mov rdi, r12	      2673	prdbg.c	FUNCTION_78	IF_4	CALL_3
0x40024dd	      0xe800000000	                          call 0x40024e2	      2673	prdbg.c	FUNCTION_78	IF_4	CALL_3
0x40024e2	          0x4885c0	                           test rax, rax	      2674	prdbg.c	FUNCTION_78	IF_4	IF_5
0x40024e5	     0xf854fffffff	                           jne 0x400243a	      2674	prdbg.c	FUNCTION_78	IF_4	IF_5
0x40024eb	      0xe95bffffff	                           jmp 0x400244b	      2674	prdbg.c	FUNCTION_78	IF_4	IF_5
0x40024f0	          0x4889c6	                            mov rsi, rax	      2666	prdbg.c	FUNCTION_78	IF_3	CALL_2
0x40024f3	          0x4889df	                            mov rdi, rbx	      2666	prdbg.c	FUNCTION_78	IF_3	CALL_2
0x40024f6	      0xe8cfe0ffff	                call sym.substitute_type	      2666	prdbg.c	FUNCTION_78	IF_3	CALL_2
0x40024fb	            0x85c0	                           test eax, eax	      2666	prdbg.c	FUNCTION_78	IF_3	CALL_2
0x40024fd	            0x75ca	                           jne 0x40024c9	      2666	prdbg.c	FUNCTION_78	IF_3	CALL_2
0x40024ff	              0x5b	                                 pop rbx	      2699	prdbg.c	FUNCTION_78
0x4002500	              0x5d	                                 pop rbp	      2699	prdbg.c	FUNCTION_78
0x4002501	            0x415c	                                 pop r12	      2699	prdbg.c	FUNCTION_78
0x4002503	              0xc3	                                     ret	      2699	prdbg.c	FUNCTION_78
substitute_type	IF,4:WHILE,0:ELSE,0:CALL,16:FOR,0:functions,0:SWITCH,0:DO,0	102
0x40005ca	            0x4156	                                push r14	       416	prdbg.c	FUNCTION_7
0x40005cc	            0x4155	                                push r13	       416	prdbg.c	FUNCTION_7
0x40005ce	            0x4154	                                push r12	       416	prdbg.c	FUNCTION_7
0x40005d0	              0x55	                                push rbp	       416	prdbg.c	FUNCTION_7
0x40005d1	              0x53	                                push rbx	       416	prdbg.c	FUNCTION_7
0x40005d2	        0x488b4710	            mov rax, qword [rdi + 0x10] 	       419	prdbg.c	FUNCTION_7	CALL_1
0x40005d6	          0x4885c0	                           test rax, rax	       419	prdbg.c	FUNCTION_7	CALL_1
0x40005d9	            0x7519	                           jne 0x40005f4	       419	prdbg.c	FUNCTION_7	CALL_1
0x40005db	      0xb900000000	                              mov ecx, 0	       419	prdbg.c	FUNCTION_7	CALL_1
0x40005e0	      0xbaa3010000	                          mov edx, 0x1a3	       419	prdbg.c	FUNCTION_7	CALL_1
0x40005e5	      0xbe00000000	                              mov esi, 0	       419	prdbg.c	FUNCTION_7	CALL_1
0x40005ea	      0xbf00000000	                              mov edi, 0	       419	prdbg.c	FUNCTION_7	CALL_1
0x40005ef	      0xe800000000	                          call 0x40005f4	       419	prdbg.c	FUNCTION_7	CALL_1
0x40005f4	          0x4889fd	                            mov rbp, rdi	       419	prdbg.c	FUNCTION_7	CALL_1
0x40005f7	          0x4989f4	                            mov r12, rsi	       419	prdbg.c	FUNCTION_7	CALL_1
0x40005fa	        0x4c8b6808	                mov r13, qword [rax + 8]	       421	prdbg.c	FUNCTION_7	CALL_2
0x40005fe	      0xbe7c000000	                           mov esi, 0x7c	       421	prdbg.c	FUNCTION_7	CALL_2
0x4000603	          0x4c89ef	                            mov rdi, r13	       421	prdbg.c	FUNCTION_7	CALL_2
0x4000606	      0xe800000000	                          call 0x400060b	       421	prdbg.c	FUNCTION_7	CALL_2
0x400060b	          0x4889c3	                            mov rbx, rax	       421	prdbg.c	FUNCTION_7	CALL_2
0x400060e	          0x4885c0	                           test rax, rax	       422	prdbg.c	FUNCTION_7	IF_1
0x4000611	     0xf8484000000	                            je 0x400069b	       422	prdbg.c	FUNCTION_7	IF_1
0x4000617	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	       426	prdbg.c	FUNCTION_7	IF_1	CALL_5
0x400061e	      0xb800000000	                              mov eax, 0	       426	prdbg.c	FUNCTION_7	IF_1	CALL_5
0x4000623	          0x4889d1	                            mov rcx, rdx	       426	prdbg.c	FUNCTION_7	IF_1	CALL_5
0x4000626	          0x4c89ef	                            mov rdi, r13	       426	prdbg.c	FUNCTION_7	IF_1	CALL_5
0x4000629	            0xf2ae	              repne scasb al, byte [rdi]	       426	prdbg.c	FUNCTION_7	IF_1	CALL_5
0x400062b	          0x48f7d1	                                 not rcx	       426	prdbg.c	FUNCTION_7	IF_1	CALL_5
0x400062e	          0x4989cd	                            mov r13, rcx	       426	prdbg.c	FUNCTION_7	IF_1	CALL_5
0x4000631	          0x4889d1	                            mov rcx, rdx	       426	prdbg.c	FUNCTION_7	IF_1	CALL_5
0x4000634	          0x4c89e7	                            mov rdi, r12	       426	prdbg.c	FUNCTION_7	IF_1	CALL_5
0x4000637	            0xf2ae	              repne scasb al, byte [rdi]	       426	prdbg.c	FUNCTION_7	IF_1	CALL_5
0x4000639	          0x4889c8	                            mov rax, rcx	       426	prdbg.c	FUNCTION_7	IF_1	CALL_5
0x400063c	          0x48f7d0	                                 not rax	       426	prdbg.c	FUNCTION_7	IF_1	CALL_5
0x400063f	      0x498d7c05fe	                lea rdi, [r13 + rax - 2]	       426	prdbg.c	FUNCTION_7	IF_1	CALL_5
0x4000644	      0xe800000000	                          call 0x4000649	       426	prdbg.c	FUNCTION_7	IF_1	CALL_5
0x4000649	          0x4989c5	                            mov r13, rax	       426	prdbg.c	FUNCTION_7	IF_1	CALL_5
0x400064c	        0x4c8b7510	            mov r14, qword [rbp + 0x10] 	       428	prdbg.c	FUNCTION_7	IF_1	CALL_6
0x4000650	        0x498b7608	                mov rsi, qword [r14 + 8]	       428	prdbg.c	FUNCTION_7	IF_1	CALL_6
0x4000654	          0x4889da	                            mov rdx, rbx	        53	string3.h	FUNCTION_101	CALL_3
0x4000657	          0x4829f2	                            sub rdx, rsi	        53	string3.h	FUNCTION_101	CALL_3
0x400065a	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_101	CALL_3
0x400065d	      0xe800000000	                          call 0x4000662	        53	string3.h	FUNCTION_101	CALL_3
0x4000662	          0x4889df	                            mov rdi, rbx	       110	string3.h	FUNCTION_107	CALL_3
0x4000665	        0x492b7e08	                sub rdi, qword [r14 + 8]	       110	string3.h	FUNCTION_107	CALL_3
0x4000669	          0x4c01ef	                            add rdi, r13	       110	string3.h	FUNCTION_107	CALL_3
0x400066c	          0x4c89e6	                            mov rsi, r12	       110	string3.h	FUNCTION_107	CALL_3
0x400066f	      0xe800000000	                          call 0x4000674	       110	string3.h	FUNCTION_107	CALL_3
0x4000674	        0x488d7301	                      lea rsi, [rbx + 1]	       148	string3.h	FUNCTION_111	CALL_3
0x4000678	          0x4c89ef	                            mov rdi, r13	       148	string3.h	FUNCTION_111	CALL_3
0x400067b	      0xe800000000	                          call 0x4000680	       148	string3.h	FUNCTION_111	CALL_3
0x4000680	        0x498b7e08	                mov rdi, qword [r14 + 8]	       432	prdbg.c	FUNCTION_7	IF_1	CALL_9
0x4000684	      0xe800000000	                          call 0x4000689	       432	prdbg.c	FUNCTION_7	IF_1	CALL_9
0x4000689	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       433	prdbg.c	FUNCTION_7	IF_1
0x400068d	        0x4c896808	                mov qword [rax + 8], r13	       433	prdbg.c	FUNCTION_7	IF_1
0x4000691	      0xb801000000	                              mov eax, 1	       435	prdbg.c	FUNCTION_7	IF_1
0x4000696	      0xe988000000	                           jmp 0x4000723	       435	prdbg.c	FUNCTION_7	IF_1
0x400069b	      0xbe7c000000	                           mov esi, 0x7c	       438	prdbg.c	FUNCTION_7	IF_2	CALL_10
0x40006a0	          0x4c89e7	                            mov rdi, r12	       438	prdbg.c	FUNCTION_7	IF_2	CALL_10
0x40006a3	      0xe800000000	                          call 0x40006a8	       438	prdbg.c	FUNCTION_7	IF_2	CALL_10
0x40006a8	          0x4885c0	                           test rax, rax	       438	prdbg.c	FUNCTION_7	IF_2	CALL_10
0x40006ab	            0x7446	                            je 0x40006f3	       438	prdbg.c	FUNCTION_7	IF_2	CALL_10
0x40006ad	      0xbe7b000000	                           mov esi, 0x7b	       439	prdbg.c	FUNCTION_7	IF_2	CALL_11
0x40006b2	          0x4c89ef	                            mov rdi, r13	       439	prdbg.c	FUNCTION_7	IF_2	CALL_11
0x40006b5	      0xe800000000	                          call 0x40006ba	       439	prdbg.c	FUNCTION_7	IF_2	CALL_11
0x40006ba	          0x4885c0	                           test rax, rax	       439	prdbg.c	FUNCTION_7	IF_2	CALL_11
0x40006bd	            0x7512	                           jne 0x40006d1	       439	prdbg.c	FUNCTION_7	IF_2	CALL_11
0x40006bf	      0xbe28000000	                           mov esi, 0x28	       440	prdbg.c	FUNCTION_7	IF_2	CALL_12
0x40006c4	          0x4c89ef	                            mov rdi, r13	       440	prdbg.c	FUNCTION_7	IF_2	CALL_12
0x40006c7	      0xe800000000	                          call 0x40006cc	       440	prdbg.c	FUNCTION_7	IF_2	CALL_12
0x40006cc	          0x4885c0	                           test rax, rax	       440	prdbg.c	FUNCTION_7	IF_2	CALL_12
0x40006cf	            0x7422	                            je 0x40006f3	       440	prdbg.c	FUNCTION_7	IF_2	CALL_12
0x40006d1	      0xbe00000000	                              mov esi, 0	       442	prdbg.c	FUNCTION_7	IF_2	IF_3	CALL_13
0x40006d6	          0x4889ef	                            mov rdi, rbp	       442	prdbg.c	FUNCTION_7	IF_2	IF_3	CALL_13
0x40006d9	      0xe897fdffff	                   call sym.prepend_type	       442	prdbg.c	FUNCTION_7	IF_2	IF_3	CALL_13
0x40006de	            0x85c0	                           test eax, eax	       442	prdbg.c	FUNCTION_7	IF_2	IF_3	CALL_13
0x40006e0	            0x7441	                            je 0x4000723	       442	prdbg.c	FUNCTION_7	IF_2	IF_3	CALL_13
0x40006e2	      0xbe00000000	                              mov esi, 0	       443	prdbg.c	FUNCTION_7	IF_2	IF_3	CALL_14
0x40006e7	          0x4889ef	                            mov rdi, rbp	       443	prdbg.c	FUNCTION_7	IF_2	IF_3	CALL_14
0x40006ea	      0xe838feffff	                    call sym.append_type	       443	prdbg.c	FUNCTION_7	IF_2	IF_3	CALL_14
0x40006ef	            0x85c0	                           test eax, eax	       443	prdbg.c	FUNCTION_7	IF_2	IF_3	CALL_14
0x40006f1	            0x7430	                            je 0x4000723	       443	prdbg.c	FUNCTION_7	IF_2	IF_3	CALL_14
0x40006f3	      0xb801000000	                              mov eax, 1	       448	prdbg.c	FUNCTION_7	IF_4
0x40006f8	      0x41803c2400	                       cmp byte [r12], 0	       447	prdbg.c	FUNCTION_7	IF_4
0x40006fd	            0x7424	                            je 0x4000723	       447	prdbg.c	FUNCTION_7	IF_4
0x40006ff	      0xbe00000000	                              mov esi, 0	       450	prdbg.c	FUNCTION_7	CALL_15
0x4000704	          0x4889ef	                            mov rdi, rbp	       450	prdbg.c	FUNCTION_7	CALL_15
0x4000707	      0xe81bfeffff	                    call sym.append_type	       450	prdbg.c	FUNCTION_7	CALL_15
0x400070c	            0x85c0	                           test eax, eax	       451	prdbg.c	FUNCTION_7	CALL_16
0x400070e	            0x7413	                            je 0x4000723	       451	prdbg.c	FUNCTION_7	CALL_16
0x4000710	          0x4c89e6	                            mov rsi, r12	       451	prdbg.c	FUNCTION_7	CALL_16
0x4000713	          0x4889ef	                            mov rdi, rbp	       451	prdbg.c	FUNCTION_7	CALL_16
0x4000716	      0xe80cfeffff	                    call sym.append_type	       451	prdbg.c	FUNCTION_7	CALL_16
0x400071b	            0x85c0	                           test eax, eax	       435	prdbg.c	FUNCTION_7	IF_1
0x400071d	           0xf95c0	                                setne al	       435	prdbg.c	FUNCTION_7	IF_1
0x4000720	           0xfb6c0	                           movzx eax, al	       435	prdbg.c	FUNCTION_7	IF_1
0x4000723	              0x5b	                                 pop rbx	       452	prdbg.c	FUNCTION_7
0x4000724	              0x5d	                                 pop rbp	       452	prdbg.c	FUNCTION_7
0x4000725	            0x415c	                                 pop r12	       452	prdbg.c	FUNCTION_7
0x4000727	            0x415d	                                 pop r13	       452	prdbg.c	FUNCTION_7
0x4000729	            0x415e	                                 pop r14	       452	prdbg.c	FUNCTION_7
0x400072b	              0xc3	                                     ret	       452	prdbg.c	FUNCTION_7
pr_class_end_method	IF,0:WHILE,0:ELSE,0:CALL,0:FOR,0:functions,0:SWITCH,0:DO,0	4
0x4000040	        0x488b4710	            mov rax, qword [rdi + 0x10] 	      1575	prdbg.c	FUNCTION_40
0x4000044	    0x48c740180000	               mov qword [rax + 0x18], 0	      1575	prdbg.c	FUNCTION_40
0x400004c	      0xb801000000	                              mov eax, 1	      1577	prdbg.c	FUNCTION_40
0x4000051	              0xc3	                                     ret	      1577	prdbg.c	FUNCTION_40
pr_function_parameter	IF,6:WHILE,0:ELSE,0:CALL,5:FOR,0:functions,0:SWITCH,0:DO,0	73
0x40036c1	            0x4155	                                push r13	      1811	prdbg.c	FUNCTION_51
0x40036c3	            0x4154	                                push r12	      1811	prdbg.c	FUNCTION_51
0x40036c5	              0x55	                                push rbp	      1811	prdbg.c	FUNCTION_51
0x40036c6	              0x53	                                push rbx	      1811	prdbg.c	FUNCTION_51
0x40036c7	        0x4883ec28	                           sub rsp, 0x28	      1811	prdbg.c	FUNCTION_51
0x40036cb	          0x4889fb	                            mov rbx, rdi	      1811	prdbg.c	FUNCTION_51
0x40036ce	          0x4989f5	                            mov r13, rsi	      1811	prdbg.c	FUNCTION_51
0x40036d1	            0x89d5	                            mov ebp, edx	      1811	prdbg.c	FUNCTION_51
0x40036d3	          0x4989cc	                            mov r12, rcx	      1811	prdbg.c	FUNCTION_51
0x40036d6	    0x64488b042528	                mov rax, qword fs:[0x28]	      1811	prdbg.c	FUNCTION_51
0x40036df	      0x4889442418	             mov qword [rsp + 0x18], rax	      1811	prdbg.c	FUNCTION_51
0x40036e4	            0x31c0	                            xor eax, eax	      1811	prdbg.c	FUNCTION_51
0x40036e6	          0x8d42fd	                      lea eax, [rdx - 3]	      1816	prdbg.c	FUNCTION_51	IF_1
0x40036e9	          0x83f801	                              cmp eax, 1	      1816	prdbg.c	FUNCTION_51	IF_1
0x40036ec	            0x770d	                            ja 0x40036fb	      1816	prdbg.c	FUNCTION_51	IF_1
0x40036ee	      0xe831d1ffff	              call sym.pr_reference_type	      1819	prdbg.c	FUNCTION_51	IF_1	IF_2	CALL_1
0x40036f3	            0x85c0	                           test eax, eax	      1819	prdbg.c	FUNCTION_51	IF_1	IF_2	CALL_1
0x40036f5	     0xf84ba000000	                            je 0x40037b5	      1819	prdbg.c	FUNCTION_51	IF_1	IF_2	CALL_1
0x40036fb	          0x4c89ee	                            mov rsi, r13	      1823	prdbg.c	FUNCTION_51	IF_3	CALL_2
0x40036fe	          0x4889df	                            mov rdi, rbx	      1823	prdbg.c	FUNCTION_51	IF_3	CALL_2
0x4003701	      0xe8c4ceffff	                call sym.substitute_type	      1823	prdbg.c	FUNCTION_51	IF_3	CALL_2
0x4003706	            0x85c0	                           test eax, eax	      1823	prdbg.c	FUNCTION_51	IF_3	CALL_2
0x4003708	     0xf84a7000000	                            je 0x40037b5	      1823	prdbg.c	FUNCTION_51	IF_3	CALL_2
0x400370e	          0x4889df	                            mov rdi, rbx	      1826	prdbg.c	FUNCTION_51	CALL_3
0x4003711	      0xe86fcaffff	                       call sym.pop_type	      1826	prdbg.c	FUNCTION_51	CALL_3
0x4003716	          0x4989c5	                            mov r13, rax	      1826	prdbg.c	FUNCTION_51	CALL_3
0x4003719	          0x4885c0	                           test rax, rax	      1827	prdbg.c	FUNCTION_51	IF_4
0x400371c	     0xf848e000000	                            je 0x40037b0	      1827	prdbg.c	FUNCTION_51	IF_4
0x4003722	        0x837b1801	               cmp dword [rbx + 0x18], 1	      1830	prdbg.c	FUNCTION_51	IF_5
0x4003726	            0x7417	                            je 0x400373f	      1830	prdbg.c	FUNCTION_51	IF_5
0x4003728	          0x488b0b	                    mov rcx, qword [rbx]	        97	stdio2.h	CALL_93
0x400372b	      0xba02000000	                              mov edx, 2	        97	stdio2.h	CALL_93
0x4003730	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_93
0x4003735	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_93
0x400373a	      0xe800000000	                          call 0x400373f	        97	stdio2.h	CALL_93
0x400373f	          0x83ed02	                              sub ebp, 2	      1833	prdbg.c	FUNCTION_51	IF_6
0x4003742	    0xf7c5fdffffff	                    test ebp, 0xfffffffd	      1833	prdbg.c	FUNCTION_51	IF_6
0x4003748	            0x7517	                           jne 0x4003761	      1833	prdbg.c	FUNCTION_51	IF_6
0x400374a	          0x488b0b	                    mov rcx, qword [rbx]	        97	stdio2.h	CALL_93
0x400374d	      0xba09000000	                              mov edx, 9	        97	stdio2.h	CALL_93
0x4003752	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_93
0x4003757	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_93
0x400375c	      0xe800000000	                          call 0x4003761	        97	stdio2.h	CALL_93
0x4003761	          0x4d89e0	                             mov r8, r12	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003764	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003769	      0xba16000000	                           mov edx, 0x16	        33	stdio2.h	FUNCTION_84	CALL_1
0x400376e	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003773	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003776	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x400377b	      0xe800000000	                          call 0x4003780	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003780	          0x4989e0	                             mov r8, rsp	        97	stdio2.h	CALL_93
0x4003783	          0x4c89e9	                            mov rcx, r13	        97	stdio2.h	CALL_93
0x4003786	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_93
0x400378b	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_93
0x4003790	          0x488b3b	                    mov rdi, qword [rbx]	        97	stdio2.h	CALL_93
0x4003793	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_93
0x4003798	      0xe800000000	                          call 0x400379d	        97	stdio2.h	CALL_93
0x400379d	          0x4c89ef	                            mov rdi, r13	      1839	prdbg.c	FUNCTION_51	CALL_5
0x40037a0	      0xe800000000	                          call 0x40037a5	      1839	prdbg.c	FUNCTION_51	CALL_5
0x40037a5	        0x83431801	               add dword [rbx + 0x18], 1	      1841	prdbg.c	FUNCTION_51
0x40037a9	      0xb801000000	                              mov eax, 1	      1843	prdbg.c	FUNCTION_51
0x40037ae	            0xeb05	                           jmp 0x40037b5	      1843	prdbg.c	FUNCTION_51
0x40037b0	      0xb800000000	                              mov eax, 0	      1828	prdbg.c	FUNCTION_51	IF_4
0x40037b5	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      1844	prdbg.c	FUNCTION_51
0x40037ba	    0x644833142528	                xor rdx, qword fs:[0x28]	      1844	prdbg.c	FUNCTION_51
0x40037c3	            0x7405	                            je 0x40037ca	      1844	prdbg.c	FUNCTION_51
0x40037c5	      0xe800000000	                          call 0x40037ca	      1844	prdbg.c	FUNCTION_51
0x40037ca	        0x4883c428	                           add rsp, 0x28	      1844	prdbg.c	FUNCTION_51
0x40037ce	              0x5b	                                 pop rbx	      1844	prdbg.c	FUNCTION_51
0x40037cf	              0x5d	                                 pop rbp	      1844	prdbg.c	FUNCTION_51
0x40037d0	            0x415c	                                 pop r12	      1844	prdbg.c	FUNCTION_51
0x40037d2	            0x415d	                                 pop r13	      1844	prdbg.c	FUNCTION_51
0x40037d4	              0xc3	                                     ret	      1844	prdbg.c	FUNCTION_51
prepend_type	IF,0:WHILE,0:ELSE,0:CALL,5:FOR,0:functions,0:SWITCH,0:DO,0	51
0x4000475	            0x4155	                                push r13	       357	prdbg.c	FUNCTION_4
0x4000477	            0x4154	                                push r12	       357	prdbg.c	FUNCTION_4
0x4000479	              0x55	                                push rbp	       357	prdbg.c	FUNCTION_4
0x400047a	              0x53	                                push rbx	       357	prdbg.c	FUNCTION_4
0x400047b	        0x4883ec08	                              sub rsp, 8	       357	prdbg.c	FUNCTION_4
0x400047f	          0x4989f4	                            mov r12, rsi	       357	prdbg.c	FUNCTION_4
0x4000482	        0x488b7710	            mov rsi, qword [rdi + 0x10] 	       360	prdbg.c	FUNCTION_4	CALL_1
0x4000486	          0x4885f6	                           test rsi, rsi	       360	prdbg.c	FUNCTION_4	CALL_1
0x4000489	            0x7519	                           jne 0x40004a4	       360	prdbg.c	FUNCTION_4	CALL_1
0x400048b	      0xb900000000	                              mov ecx, 0	       360	prdbg.c	FUNCTION_4	CALL_1
0x4000490	      0xba68010000	                          mov edx, 0x168	       360	prdbg.c	FUNCTION_4	CALL_1
0x4000495	      0xbe00000000	                              mov esi, 0	       360	prdbg.c	FUNCTION_4	CALL_1
0x400049a	      0xbf00000000	                              mov edi, 0	       360	prdbg.c	FUNCTION_4	CALL_1
0x400049f	      0xe800000000	                          call 0x40004a4	       360	prdbg.c	FUNCTION_4	CALL_1
0x40004a4	          0x4889fb	                            mov rbx, rdi	       360	prdbg.c	FUNCTION_4	CALL_1
0x40004a7	    0x48c7c5ffffff	             mov rbp, 0xffffffffffffffff	       362	prdbg.c	FUNCTION_4	CALL_4
0x40004ae	      0xb800000000	                              mov eax, 0	       362	prdbg.c	FUNCTION_4	CALL_4
0x40004b3	          0x4889e9	                            mov rcx, rbp	       362	prdbg.c	FUNCTION_4	CALL_4
0x40004b6	          0x4c89e7	                            mov rdi, r12	       362	prdbg.c	FUNCTION_4	CALL_4
0x40004b9	            0xf2ae	              repne scasb al, byte [rdi]	       362	prdbg.c	FUNCTION_4	CALL_4
0x40004bb	          0x4889ca	                            mov rdx, rcx	       362	prdbg.c	FUNCTION_4	CALL_4
0x40004be	          0x48f7d2	                                 not rdx	       362	prdbg.c	FUNCTION_4	CALL_4
0x40004c1	        0x488b7e08	                mov rdi, qword [rsi + 8]	       362	prdbg.c	FUNCTION_4	CALL_4
0x40004c5	          0x4889e9	                            mov rcx, rbp	       362	prdbg.c	FUNCTION_4	CALL_4
0x40004c8	            0xf2ae	              repne scasb al, byte [rdi]	       362	prdbg.c	FUNCTION_4	CALL_4
0x40004ca	          0x4889c8	                            mov rax, rcx	       362	prdbg.c	FUNCTION_4	CALL_4
0x40004cd	          0x48f7d0	                                 not rax	       362	prdbg.c	FUNCTION_4	CALL_4
0x40004d0	      0x488d7c02ff	                lea rdi, [rdx + rax - 1]	       362	prdbg.c	FUNCTION_4	CALL_4
0x40004d5	      0xe800000000	                          call 0x40004da	       362	prdbg.c	FUNCTION_4	CALL_4
0x40004da	          0x4989c5	                            mov r13, rax	       362	prdbg.c	FUNCTION_4	CALL_4
0x40004dd	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       363	prdbg.c	FUNCTION_4
0x40004e1	        0x4c8b4808	                 mov r9, qword [rax + 8]	        33	stdio2.h	FUNCTION_84	CALL_1
0x40004e5	          0x4d89e0	                             mov r8, r12	        33	stdio2.h	FUNCTION_84	CALL_1
0x40004e8	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x40004ed	          0x4889ea	                            mov rdx, rbp	        33	stdio2.h	FUNCTION_84	CALL_1
0x40004f0	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_84	CALL_1
0x40004f5	          0x4c89ef	                            mov rdi, r13	        33	stdio2.h	FUNCTION_84	CALL_1
0x40004f8	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x40004fd	      0xe800000000	                          call 0x4000502	        33	stdio2.h	FUNCTION_84	CALL_1
0x4000502	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       364	prdbg.c	FUNCTION_4	CALL_5
0x4000506	        0x488b7808	                mov rdi, qword [rax + 8]	       364	prdbg.c	FUNCTION_4	CALL_5
0x400050a	      0xe800000000	                          call 0x400050f	       364	prdbg.c	FUNCTION_4	CALL_5
0x400050f	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       365	prdbg.c	FUNCTION_4
0x4000513	        0x4c896808	                mov qword [rax + 8], r13	       365	prdbg.c	FUNCTION_4
0x4000517	      0xb801000000	                              mov eax, 1	       368	prdbg.c	FUNCTION_4
0x400051c	        0x4883c408	                              add rsp, 8	       368	prdbg.c	FUNCTION_4
0x4000520	              0x5b	                                 pop rbx	       368	prdbg.c	FUNCTION_4
0x4000521	              0x5d	                                 pop rbp	       368	prdbg.c	FUNCTION_4
0x4000522	            0x415c	                                 pop r12	       368	prdbg.c	FUNCTION_4
0x4000524	            0x415d	                                 pop r13	       368	prdbg.c	FUNCTION_4
0x4000526	              0xc3	                                     ret	       368	prdbg.c	FUNCTION_4
tg_variable	IF,6:WHILE,0:ELSE,1:CALL,5:FOR,0:functions,0:SWITCH,1:DO,0	144
0x40021a4	            0x4156	                                push r14	      2593	prdbg.c	FUNCTION_77
0x40021a6	            0x4155	                                push r13	      2593	prdbg.c	FUNCTION_77
0x40021a8	            0x4154	                                push r12	      2593	prdbg.c	FUNCTION_77
0x40021aa	              0x55	                                push rbp	      2593	prdbg.c	FUNCTION_77
0x40021ab	              0x53	                                push rbx	      2593	prdbg.c	FUNCTION_77
0x40021ac	          0x4889fb	                            mov rbx, rdi	      2593	prdbg.c	FUNCTION_77
0x40021af	          0x4989f6	                            mov r14, rsi	      2593	prdbg.c	FUNCTION_77
0x40021b2	          0x4189d5	                           mov r13d, edx	      2593	prdbg.c	FUNCTION_77
0x40021b5	      0xe8cbdfffff	                       call sym.pop_type	      2597	prdbg.c	FUNCTION_77	CALL_1
0x40021ba	          0x4885c0	                           test rax, rax	      2598	prdbg.c	FUNCTION_77	IF_1
0x40021bd	     0xf8469010000	                            je 0x400232c	      2598	prdbg.c	FUNCTION_77	IF_1
0x40021c3	          0x4989c4	                            mov r12, rax	      2598	prdbg.c	FUNCTION_77	IF_1
0x40021c6	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      2602	prdbg.c	FUNCTION_77	IF_2
0x40021ca	          0x4885c0	                           test rax, rax	      2602	prdbg.c	FUNCTION_77	IF_2
0x40021cd	            0x7473	                            je 0x4002242	      2602	prdbg.c	FUNCTION_77	IF_2
0x40021cf	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	      2603	prdbg.c	FUNCTION_77	CALL_2
0x40021d3	      0xba03000000	                              mov edx, 3	      2603	prdbg.c	FUNCTION_77	CALL_2
0x40021d8	          0x4c89f6	                            mov rsi, r14	      2603	prdbg.c	FUNCTION_77	CALL_2
0x40021db	            0xffd0	                                call rax	      2603	prdbg.c	FUNCTION_77	CALL_2
0x40021dd	          0x4889c5	                            mov rbp, rax	      2603	prdbg.c	FUNCTION_77	CALL_2
0x40021e0	          0x4885c0	                           test rax, rax	      2606	prdbg.c	FUNCTION_77	IF_3
0x40021e3	     0xf844d010000	                            je 0x4002336	      2606	prdbg.c	FUNCTION_77	IF_3
0x40021e9	      0xbe00000000	                              mov esi, 0	      2609	prdbg.c	FUNCTION_77	IF_3	CALL_3
0x40021ee	          0x4889c7	                            mov rdi, rax	      2609	prdbg.c	FUNCTION_77	IF_3	CALL_3
0x40021f1	      0xe800000000	                          call 0x40021f6	      2609	prdbg.c	FUNCTION_77	IF_3	CALL_3
0x40021f6	          0x4885c0	                           test rax, rax	      2610	prdbg.c	FUNCTION_77	IF_3	IF_4
0x40021f9	     0xf8477010000	                            je 0x4002376	      2610	prdbg.c	FUNCTION_77	IF_3	IF_4
0x40021ff	          0xc60000	                       mov byte [rax], 0	      2612	prdbg.c	FUNCTION_77	IF_3	IF_4
0x4002202	        0x488d4802	                      lea rcx, [rax + 2]	        97	stdio2.h	CALL_93
0x4002206	          0x4d89e1	                             mov r9, r12	        97	stdio2.h	CALL_93
0x4002209	        0x4c8b4320	              mov r8, qword [rbx + 0x20]	        97	stdio2.h	CALL_93
0x400220d	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_93
0x4002212	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_93
0x4002217	          0x488b3b	                    mov rdi, qword [rbx]	        97	stdio2.h	CALL_93
0x400221a	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_93
0x400221f	      0xe800000000	                          call 0x4002224	        97	stdio2.h	CALL_93
0x4002224	        0x4183fd02	                             cmp r13d, 2	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x4002228	     0xf82b5000000	                            jb 0x40022e3	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x400222e	        0x4183fd03	                             cmp r13d, 3	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x4002232	            0x7643	                           jbe 0x4002277	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x4002234	          0x4989ee	                            mov r14, rbp	      2603	prdbg.c	FUNCTION_77	CALL_2
0x4002237	        0x4183fd05	                             cmp r13d, 5	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x400223b	            0x747b	                            je 0x40022b8	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x400223d	      0xe9a1000000	                           jmp 0x40022e3	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x4002242	          0x4d89e1	                             mov r9, r12	        97	stdio2.h	CALL_93
0x4002245	        0x4c8b4320	              mov r8, qword [rbx + 0x20]	        97	stdio2.h	CALL_93
0x4002249	          0x4c89f1	                            mov rcx, r14	        97	stdio2.h	CALL_93
0x400224c	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_93
0x4002251	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_93
0x4002256	          0x488b3b	                    mov rdi, qword [rbx]	        97	stdio2.h	CALL_93
0x4002259	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_93
0x400225e	      0xe800000000	                          call 0x4002263	        97	stdio2.h	CALL_93
0x4002263	        0x4183fd02	                             cmp r13d, 2	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x4002267	            0x7268	                            jb 0x40022d1	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x4002269	        0x4183fd03	                             cmp r13d, 3	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x400226d	            0x760d	                           jbe 0x400227c	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x400226f	        0x4183fd05	                             cmp r13d, 5	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x4002273	            0x7438	                            je 0x40022ad	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x4002275	            0xeb5a	                           jmp 0x40022d1	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x4002277	          0x4989ee	                            mov r14, rbp	      2603	prdbg.c	FUNCTION_77	CALL_2
0x400227a	            0xeb18	                           jmp 0x4002294	      2603	prdbg.c	FUNCTION_77	CALL_2
0x400227c	    0x41be00000000	                             mov r14d, 0	      2605	prdbg.c	FUNCTION_77
0x4002282	      0xbd00000000	                              mov ebp, 0	      2601	prdbg.c	FUNCTION_77
0x4002287	            0xeb0b	                           jmp 0x4002294	      2601	prdbg.c	FUNCTION_77
0x4002289	          0x4989ee	                            mov r14, rbp	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x400228c	            0xeb06	                           jmp 0x4002294	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x400228e	    0x41be00000000	                             mov r14d, 0	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x4002294	          0x488b0b	                    mov rcx, qword [rbx]	        97	stdio2.h	CALL_93
0x4002297	      0xba06000000	                              mov edx, 6	        97	stdio2.h	CALL_93
0x400229c	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_93
0x40022a1	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_93
0x40022a6	      0xe800000000	                          call 0x40022ab	        97	stdio2.h	CALL_93
0x40022ab	            0xeb2f	                           jmp 0x40022dc	        97	stdio2.h	CALL_93
0x40022ad	    0x41be00000000	                             mov r14d, 0	      2605	prdbg.c	FUNCTION_77
0x40022b3	      0xbd00000000	                              mov ebp, 0	      2601	prdbg.c	FUNCTION_77
0x40022b8	          0x488b0b	                    mov rcx, qword [rbx]	        97	stdio2.h	CALL_93
0x40022bb	      0xba0a000000	                            mov edx, 0xa	        97	stdio2.h	CALL_93
0x40022c0	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_93
0x40022c5	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_93
0x40022ca	      0xe800000000	                          call 0x40022cf	        97	stdio2.h	CALL_93
0x40022cf	            0xeb0b	                           jmp 0x40022dc	        97	stdio2.h	CALL_93
0x40022d1	    0x41be00000000	                             mov r14d, 0	      2605	prdbg.c	FUNCTION_77
0x40022d7	      0xbd00000000	                              mov ebp, 0	      2601	prdbg.c	FUNCTION_77
0x40022dc	          0x4d85f6	                           test r14, r14	      2636	prdbg.c	FUNCTION_77	IF_5
0x40022df	            0x7505	                           jne 0x40022e6	      2636	prdbg.c	FUNCTION_77	IF_5
0x40022e1	            0xeb1d	                           jmp 0x4002300	      2636	prdbg.c	FUNCTION_77	IF_5
0x40022e3	          0x4989ee	                            mov r14, rbp	      2603	prdbg.c	FUNCTION_77	CALL_2
0x40022e6	          0x4c89f1	                            mov rcx, r14	        97	stdio2.h	CALL_93
0x40022e9	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_93
0x40022ee	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_93
0x40022f3	          0x488b3b	                    mov rdi, qword [rbx]	        97	stdio2.h	CALL_93
0x40022f6	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_93
0x40022fb	      0xe800000000	                          call 0x4002300	        97	stdio2.h	CALL_93
0x4002300	          0x4885ed	                           test rbp, rbp	      2639	prdbg.c	FUNCTION_77	IF_6
0x4002303	            0x7408	                            je 0x400230d	      2639	prdbg.c	FUNCTION_77	IF_6
0x4002305	          0x4889ef	                            mov rdi, rbp	      2640	prdbg.c	FUNCTION_77	CALL_4
0x4002308	      0xe800000000	                          call 0x400230d	      2640	prdbg.c	FUNCTION_77	CALL_4
0x400230d	          0x488b33	                    mov rsi, qword [rbx]	        97	stdio2.h	CALL_93
0x4002310	      0xbf0a000000	                            mov edi, 0xa	        97	stdio2.h	CALL_93
0x4002315	      0xe800000000	                          call 0x400231a	        97	stdio2.h	CALL_93
0x400231a	          0x4c89e7	                            mov rdi, r12	      2644	prdbg.c	FUNCTION_77	CALL_5
0x400231d	      0xe800000000	                          call 0x4002322	      2644	prdbg.c	FUNCTION_77	CALL_5
0x4002322	      0xb801000000	                              mov eax, 1	      2646	prdbg.c	FUNCTION_77
0x4002327	      0xe994000000	                           jmp 0x40023c0	      2646	prdbg.c	FUNCTION_77
0x400232c	      0xb800000000	                              mov eax, 0	      2599	prdbg.c	FUNCTION_77	IF_1
0x4002331	      0xe98a000000	                           jmp 0x40023c0	      2599	prdbg.c	FUNCTION_77	IF_1
0x4002336	          0x4d89e1	                             mov r9, r12	        97	stdio2.h	CALL_93
0x4002339	        0x4c8b4320	              mov r8, qword [rbx + 0x20]	        97	stdio2.h	CALL_93
0x400233d	          0x4c89f1	                            mov rcx, r14	        97	stdio2.h	CALL_93
0x4002340	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_93
0x4002345	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_93
0x400234a	          0x488b3b	                    mov rdi, qword [rbx]	        97	stdio2.h	CALL_93
0x400234d	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_93
0x4002352	      0xe800000000	                          call 0x4002357	        97	stdio2.h	CALL_93
0x4002357	        0x4183fd02	                             cmp r13d, 2	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x400235b	            0x72b0	                            jb 0x400230d	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x400235d	        0x4183fd03	                             cmp r13d, 3	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x4002361	     0xf8622ffffff	                           jbe 0x4002289	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x4002367	          0x4989ee	                            mov r14, rbp	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x400236a	        0x4183fd05	                             cmp r13d, 5	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x400236e	     0xf8444ffffff	                            je 0x40022b8	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x4002374	            0xeb97	                           jmp 0x400230d	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x4002376	          0x4d89e1	                             mov r9, r12	        97	stdio2.h	CALL_93
0x4002379	        0x4c8b4320	              mov r8, qword [rbx + 0x20]	        97	stdio2.h	CALL_93
0x400237d	          0x4889e9	                            mov rcx, rbp	        97	stdio2.h	CALL_93
0x4002380	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_93
0x4002385	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_93
0x400238a	          0x488b3b	                    mov rdi, qword [rbx]	        97	stdio2.h	CALL_93
0x400238d	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_93
0x4002392	      0xe800000000	                          call 0x4002397	        97	stdio2.h	CALL_93
0x4002397	        0x4183fd02	                             cmp r13d, 2	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x400239b	     0xf8264ffffff	                            jb 0x4002305	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x40023a1	        0x4183fd03	                             cmp r13d, 3	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x40023a5	     0xf86e3feffff	                           jbe 0x400228e	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x40023ab	    0x41be00000000	                             mov r14d, 0	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x40023b1	        0x4183fd05	                             cmp r13d, 5	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x40023b5	     0xf84fdfeffff	                            je 0x40022b8	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x40023bb	      0xe945ffffff	                           jmp 0x4002305	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x40023c0	              0x5b	                                 pop rbx	      2647	prdbg.c	FUNCTION_77
0x40023c1	              0x5d	                                 pop rbp	      2647	prdbg.c	FUNCTION_77
0x40023c2	            0x415c	                                 pop r12	      2647	prdbg.c	FUNCTION_77
0x40023c4	            0x415d	                                 pop r13	      2647	prdbg.c	FUNCTION_77
0x40023c6	            0x415e	                                 pop r14	      2647	prdbg.c	FUNCTION_77
0x40023c8	              0xc3	                                     ret	      2647	prdbg.c	FUNCTION_77
pr_const_type	IF,0:WHILE,0:ELSE,0:CALL,1:FOR,0:functions,0:SWITCH,0:DO,0	5
0x4000811	        0x4883ec08	                              sub rsp, 8	      1022	prdbg.c	FUNCTION_28
0x4000815	      0xbe00000000	                              mov esi, 0	      1025	prdbg.c	FUNCTION_28	CALL_1
0x400081a	      0xe8abfdffff	                call sym.substitute_type	      1025	prdbg.c	FUNCTION_28	CALL_1
0x400081f	        0x4883c408	                              add rsp, 8	      1026	prdbg.c	FUNCTION_28
0x4000823	              0xc3	                                     ret	      1026	prdbg.c	FUNCTION_28
pr_enum_type	IF,11:WHILE,0:ELSE,1:CALL,11:FOR,1:functions,0:SWITCH,0:DO,0	108
0x4002f4f	            0x4157	                                push r15	       638	prdbg.c	FUNCTION_19
0x4002f51	            0x4156	                                push r14	       638	prdbg.c	FUNCTION_19
0x4002f53	            0x4155	                                push r13	       638	prdbg.c	FUNCTION_19
0x4002f55	            0x4154	                                push r12	       638	prdbg.c	FUNCTION_19
0x4002f57	              0x55	                                push rbp	       638	prdbg.c	FUNCTION_19
0x4002f58	              0x53	                                push rbx	       638	prdbg.c	FUNCTION_19
0x4002f59	        0x4883ec38	                           sub rsp, 0x38	       638	prdbg.c	FUNCTION_19
0x4002f5d	          0x4889fd	                            mov rbp, rdi	       638	prdbg.c	FUNCTION_19
0x4002f60	          0x4889f3	                            mov rbx, rsi	       638	prdbg.c	FUNCTION_19
0x4002f63	          0x4989d7	                            mov r15, rdx	       638	prdbg.c	FUNCTION_19
0x4002f66	      0x48894c2408	                mov qword [rsp + 8], rcx	       638	prdbg.c	FUNCTION_19
0x4002f6b	    0x64488b042528	                mov rax, qword fs:[0x28]	       638	prdbg.c	FUNCTION_19
0x4002f74	      0x4889442428	             mov qword [rsp + 0x28], rax	       638	prdbg.c	FUNCTION_19
0x4002f79	            0x31c0	                            xor eax, eax	       638	prdbg.c	FUNCTION_19
0x4002f7b	      0xbe00000000	                              mov esi, 0	       643	prdbg.c	FUNCTION_19	IF_1	CALL_1
0x4002f80	      0xe80be3ffff	                      call sym.push_type	       643	prdbg.c	FUNCTION_19	IF_1	CALL_1
0x4002f85	            0x85c0	                           test eax, eax	       643	prdbg.c	FUNCTION_19	IF_1	CALL_1
0x4002f87	     0xf842f010000	                            je 0x40030bc	       643	prdbg.c	FUNCTION_19	IF_1	CALL_1
0x4002f8d	          0x4885db	                           test rbx, rbx	       645	prdbg.c	FUNCTION_19	IF_2
0x4002f90	            0x7428	                            je 0x4002fba	       645	prdbg.c	FUNCTION_19	IF_2
0x4002f92	          0x4889de	                            mov rsi, rbx	       647	prdbg.c	FUNCTION_19	IF_2	IF_3	CALL_2
0x4002f95	          0x4889ef	                            mov rdi, rbp	       647	prdbg.c	FUNCTION_19	IF_2	IF_3	CALL_2
0x4002f98	      0xe88ad5ffff	                    call sym.append_type	       647	prdbg.c	FUNCTION_19	IF_2	IF_3	CALL_2
0x4002f9d	            0x85c0	                           test eax, eax	       647	prdbg.c	FUNCTION_19	IF_2	IF_3	CALL_2
0x4002f9f	     0xf8417010000	                            je 0x40030bc	       647	prdbg.c	FUNCTION_19	IF_2	IF_3	CALL_2
0x4002fa5	      0xbe00000000	                              mov esi, 0	       648	prdbg.c	FUNCTION_19	IF_2	IF_3	CALL_3
0x4002faa	          0x4889ef	                            mov rdi, rbp	       648	prdbg.c	FUNCTION_19	IF_2	IF_3	CALL_3
0x4002fad	      0xe875d5ffff	                    call sym.append_type	       648	prdbg.c	FUNCTION_19	IF_2	IF_3	CALL_3
0x4002fb2	            0x85c0	                           test eax, eax	       648	prdbg.c	FUNCTION_19	IF_2	IF_3	CALL_3
0x4002fb4	     0xf8402010000	                            je 0x40030bc	       648	prdbg.c	FUNCTION_19	IF_2	IF_3	CALL_3
0x4002fba	      0xbe00000000	                              mov esi, 0	       651	prdbg.c	FUNCTION_19	IF_4	CALL_4
0x4002fbf	          0x4889ef	                            mov rdi, rbp	       651	prdbg.c	FUNCTION_19	IF_4	CALL_4
0x4002fc2	      0xe860d5ffff	                    call sym.append_type	       651	prdbg.c	FUNCTION_19	IF_4	CALL_4
0x4002fc7	            0x85c0	                           test eax, eax	       651	prdbg.c	FUNCTION_19	IF_4	CALL_4
0x4002fc9	     0xf84ed000000	                            je 0x40030bc	       651	prdbg.c	FUNCTION_19	IF_4	CALL_4
0x4002fcf	          0x4d85ff	                           test r15, r15	       654	prdbg.c	FUNCTION_19	IF_5
0x4002fd2	            0x740b	                            je 0x4002fdf	       654	prdbg.c	FUNCTION_19	IF_5
0x4002fd4	        0x49833f00	                      cmp qword [r15], 0	       662	prdbg.c	FUNCTION_19	ELSE_1	FOR_1
0x4002fd8	            0x753a	                           jne 0x4003014	       662	prdbg.c	FUNCTION_19	ELSE_1	FOR_1
0x4002fda	      0xe9d0000000	                           jmp 0x40030af	       662	prdbg.c	FUNCTION_19	ELSE_1	FOR_1
0x4002fdf	      0xbe00000000	                              mov esi, 0	       656	prdbg.c	FUNCTION_19	IF_5	IF_6	CALL_5
0x4002fe4	          0x4889ef	                            mov rdi, rbp	       656	prdbg.c	FUNCTION_19	IF_5	IF_6	CALL_5
0x4002fe7	      0xe83bd5ffff	                    call sym.append_type	       656	prdbg.c	FUNCTION_19	IF_5	IF_6	CALL_5
0x4002fec	            0x85c0	                           test eax, eax	       656	prdbg.c	FUNCTION_19	IF_5	IF_6	CALL_5
0x4002fee	     0xf85bb000000	                           jne 0x40030af	       656	prdbg.c	FUNCTION_19	IF_5	IF_6	CALL_5
0x4002ff4	      0xe9c3000000	                           jmp 0x40030bc	       656	prdbg.c	FUNCTION_19	IF_5	IF_6	CALL_5
0x4002ff9	          0x4585e4	                         test r12d, r12d	       664	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_7
0x4002ffc	            0x742a	                            je 0x4003028	       664	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_7
0x4002ffe	      0xbe00000000	                              mov esi, 0	       666	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_7	IF_8	CALL_6
0x4003003	          0x4889ef	                            mov rdi, rbp	       666	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_7	IF_8	CALL_6
0x4003006	      0xe81cd5ffff	                    call sym.append_type	       666	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_7	IF_8	CALL_6
0x400300b	            0x85c0	                           test eax, eax	       666	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_7	IF_8	CALL_6
0x400300d	            0x7519	                           jne 0x4003028	       666	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_7	IF_8	CALL_6
0x400300f	      0xe9a8000000	                           jmp 0x40030bc	       666	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_7	IF_8	CALL_6
0x4003014	          0x4d89fe	                            mov r14, r15	       662	prdbg.c	FUNCTION_19	ELSE_1	FOR_1
0x4003017	      0xbb00000000	                              mov ebx, 0	       662	prdbg.c	FUNCTION_19	ELSE_1	FOR_1
0x400301c	    0x41bc00000000	                             mov r12d, 0	       662	prdbg.c	FUNCTION_19	ELSE_1	FOR_1
0x4003022	    0x41bd00000000	                             mov r13d, 0	       662	prdbg.c	FUNCTION_19	ELSE_1	FOR_1
0x4003028	          0x498b36	                    mov rsi, qword [r14]	       670	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_9	CALL_7
0x400302b	          0x4889ef	                            mov rdi, rbp	       670	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_9	CALL_7
0x400302e	      0xe8f4d4ffff	                    call sym.append_type	       670	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_9	CALL_7
0x4003033	            0x85c0	                           test eax, eax	       670	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_9	CALL_7
0x4003035	     0xf8481000000	                            je 0x40030bc	       670	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_9	CALL_7
0x400303b	      0x48035c2408	                add rbx, qword [rsp + 8]	       673	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10
0x4003040	          0x4c8b03	                     mov r8, qword [rbx]	       673	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10
0x4003043	          0x4d39e8	                             cmp r8, r13	       673	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10
0x4003046	            0x744a	                            je 0x4003092	       673	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10
0x4003048	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x400304d	      0xba16000000	                           mov edx, 0x16	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003052	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003057	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	        33	stdio2.h	FUNCTION_84	CALL_1
0x400305c	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003061	      0xe800000000	                          call 0x4003066	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003066	      0xbe00000000	                              mov esi, 0	       678	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10	IF_11	CALL_9
0x400306b	          0x4889ef	                            mov rdi, rbp	       678	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10	IF_11	CALL_9
0x400306e	      0xe8b4d4ffff	                    call sym.append_type	       678	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10	IF_11	CALL_9
0x4003073	            0x85c0	                           test eax, eax	       678	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10	IF_11	CALL_9
0x4003075	            0x7411	                            je 0x4003088	       678	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10	IF_11	CALL_9
0x4003077	      0x488d742410	                   lea rsi, [rsp + 0x10]	       679	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10	IF_11	CALL_10
0x400307c	          0x4889ef	                            mov rdi, rbp	       679	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10	IF_11	CALL_10
0x400307f	      0xe8a3d4ffff	                    call sym.append_type	       679	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10	IF_11	CALL_10
0x4003084	            0x85c0	                           test eax, eax	       679	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10	IF_11	CALL_10
0x4003086	            0x7507	                           jne 0x400308f	       679	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10	IF_11	CALL_10
0x4003088	      0xb800000000	                              mov eax, 0	       680	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10	IF_11
0x400308d	            0xeb2d	                           jmp 0x40030bc	       680	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10	IF_11
0x400308f	          0x4c8b2b	                    mov r13, qword [rbx]	       681	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10
0x4003092	        0x4983c501	                              add r13, 1	       684	prdbg.c	FUNCTION_19	ELSE_1	FOR_1
0x4003096	        0x4183c401	                             add r12d, 1	       662	prdbg.c	FUNCTION_19	ELSE_1	FOR_1
0x400309a	          0x4489e3	                           mov ebx, r12d	       662	prdbg.c	FUNCTION_19	ELSE_1	FOR_1
0x400309d	        0x48c1e303	                              shl rbx, 3	       662	prdbg.c	FUNCTION_19	ELSE_1	FOR_1
0x40030a1	        0x4d8d341f	                    lea r14, [r15 + rbx]	       662	prdbg.c	FUNCTION_19	ELSE_1	FOR_1
0x40030a5	        0x49833e00	                      cmp qword [r14], 0	       662	prdbg.c	FUNCTION_19	ELSE_1	FOR_1
0x40030a9	     0xf854affffff	                           jne 0x4002ff9	       662	prdbg.c	FUNCTION_19	ELSE_1	FOR_1
0x40030af	      0xbe00000000	                              mov esi, 0	       688	prdbg.c	FUNCTION_19	CALL_11
0x40030b4	          0x4889ef	                            mov rdi, rbp	       688	prdbg.c	FUNCTION_19	CALL_11
0x40030b7	      0xe86bd4ffff	                    call sym.append_type	       688	prdbg.c	FUNCTION_19	CALL_11
0x40030bc	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	       689	prdbg.c	FUNCTION_19
0x40030c1	    0x644833142528	                xor rdx, qword fs:[0x28]	       689	prdbg.c	FUNCTION_19
0x40030ca	            0x7405	                            je 0x40030d1	       689	prdbg.c	FUNCTION_19
0x40030cc	      0xe800000000	                          call 0x40030d1	       689	prdbg.c	FUNCTION_19
0x40030d1	        0x4883c438	                           add rsp, 0x38	       689	prdbg.c	FUNCTION_19
0x40030d5	              0x5b	                                 pop rbx	       689	prdbg.c	FUNCTION_19
0x40030d6	              0x5d	                                 pop rbp	       689	prdbg.c	FUNCTION_19
0x40030d7	            0x415c	                                 pop r12	       689	prdbg.c	FUNCTION_19
0x40030d9	            0x415d	                                 pop r13	       689	prdbg.c	FUNCTION_19
0x40030db	            0x415e	                                 pop r14	       689	prdbg.c	FUNCTION_19
0x40030dd	            0x415f	                                 pop r15	       689	prdbg.c	FUNCTION_19
0x40030df	              0xc3	                                     ret	       689	prdbg.c	FUNCTION_19
pr_float_type	IF,2:WHILE,0:ELSE,1:CALL,3:FOR,0:functions,0:SWITCH,0:DO,0	33
0x40018be	              0x53	                                push rbx	       594	prdbg.c	FUNCTION_16
0x40018bf	        0x4883ec30	                           sub rsp, 0x30	       594	prdbg.c	FUNCTION_16
0x40018c3	          0x4889fb	                            mov rbx, rdi	       594	prdbg.c	FUNCTION_16
0x40018c6	    0x64488b042528	                mov rax, qword fs:[0x28]	       594	prdbg.c	FUNCTION_16
0x40018cf	      0x4889442428	             mov qword [rsp + 0x28], rax	       594	prdbg.c	FUNCTION_16
0x40018d4	            0x31c0	                            xor eax, eax	       594	prdbg.c	FUNCTION_16
0x40018d6	          0x83fe04	                              cmp esi, 4	       598	prdbg.c	FUNCTION_16	IF_1
0x40018d9	            0x750c	                           jne 0x40018e7	       598	prdbg.c	FUNCTION_16	IF_1
0x40018db	      0xbe00000000	                              mov esi, 0	       599	prdbg.c	FUNCTION_16	CALL_1
0x40018e0	      0xe8abf9ffff	                      call sym.push_type	       599	prdbg.c	FUNCTION_16	CALL_1
0x40018e5	            0xeb40	                           jmp 0x4001927	       599	prdbg.c	FUNCTION_16	CALL_1
0x40018e7	          0x83fe08	                              cmp esi, 8	       600	prdbg.c	FUNCTION_16	ELSE_1	IF_2
0x40018ea	            0x750c	                           jne 0x40018f8	       600	prdbg.c	FUNCTION_16	ELSE_1	IF_2
0x40018ec	      0xbe00000000	                              mov esi, 0	       601	prdbg.c	FUNCTION_16	ELSE_1	IF_2
0x40018f1	      0xe89af9ffff	                      call sym.push_type	       601	prdbg.c	FUNCTION_16	ELSE_1	IF_2
0x40018f6	            0xeb2f	                           jmp 0x4001927	       601	prdbg.c	FUNCTION_16	ELSE_1	IF_2
0x40018f8	    0x448d04f50000	                        lea r8d, [rsi*8]	        33	stdio2.h	FUNCTION_84	CALL_1
0x4001900	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x4001905	      0xba28000000	                           mov edx, 0x28	        33	stdio2.h	FUNCTION_84	CALL_1
0x400190a	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_84	CALL_1
0x400190f	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_84	CALL_1
0x4001912	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x4001917	      0xe800000000	                          call 0x400191c	        33	stdio2.h	FUNCTION_84	CALL_1
0x400191c	          0x4889e6	                            mov rsi, rsp	       604	prdbg.c	FUNCTION_16	CALL_3
0x400191f	          0x4889df	                            mov rdi, rbx	       604	prdbg.c	FUNCTION_16	CALL_3
0x4001922	      0xe869f9ffff	                      call sym.push_type	       604	prdbg.c	FUNCTION_16	CALL_3
0x4001927	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	       605	prdbg.c	FUNCTION_16
0x400192c	    0x644833142528	                xor rdx, qword fs:[0x28]	       605	prdbg.c	FUNCTION_16
0x4001935	            0x7405	                            je 0x400193c	       605	prdbg.c	FUNCTION_16
0x4001937	      0xe800000000	                          call 0x400193c	       605	prdbg.c	FUNCTION_16
0x400193c	        0x4883c430	                           add rsp, 0x30	       605	prdbg.c	FUNCTION_16
0x4001940	              0x5b	                                 pop rbx	       605	prdbg.c	FUNCTION_16
0x4001941	              0xc3	                                     ret	       605	prdbg.c	FUNCTION_16
pr_empty_type	IF,0:WHILE,0:ELSE,0:CALL,1:FOR,0:functions,0:SWITCH,0:DO,0	5
0x40019e4	        0x4883ec08	                              sub rsp, 8	       562	prdbg.c	FUNCTION_13
0x40019e8	      0xbe00000000	                              mov esi, 0	       565	prdbg.c	FUNCTION_13	CALL_1
0x40019ed	      0xe89ef8ffff	                      call sym.push_type	       565	prdbg.c	FUNCTION_13	CALL_1
0x40019f2	        0x4883c408	                              add rsp, 8	       566	prdbg.c	FUNCTION_13
0x40019f6	              0xc3	                                     ret	       566	prdbg.c	FUNCTION_13
tg_fix_visibility	IF,1:WHILE,0:ELSE,0:CALL,2:FOR,0:functions,0:SWITCH,0:DO,0	23
0x4000340	        0x4883ec08	                              sub rsp, 8	      2057	prdbg.c	FUNCTION_62
0x4000344	        0x488b4710	            mov rax, qword [rdi + 0x10] 	      2058	prdbg.c	FUNCTION_62	CALL_1
0x4000348	          0x4885c0	                           test rax, rax	      2058	prdbg.c	FUNCTION_62	CALL_1
0x400034b	            0x7519	                           jne 0x4000366	      2058	prdbg.c	FUNCTION_62	CALL_1
0x400034d	      0xb900000000	                              mov ecx, 0	      2058	prdbg.c	FUNCTION_62	CALL_1
0x4000352	      0xba0a080000	                          mov edx, 0x80a	      2058	prdbg.c	FUNCTION_62	CALL_1
0x4000357	      0xbe00000000	                              mov esi, 0	      2058	prdbg.c	FUNCTION_62	CALL_1
0x400035c	      0xbf00000000	                              mov edi, 0	      2058	prdbg.c	FUNCTION_62	CALL_1
0x4000361	      0xe800000000	                          call 0x4000366	      2058	prdbg.c	FUNCTION_62	CALL_1
0x4000366	          0x8b5010	            mov edx, dword [rax + 0x10] 	      2060	prdbg.c	FUNCTION_62	IF_1
0x4000369	            0x39f2	                            cmp edx, esi	      2060	prdbg.c	FUNCTION_62	IF_1
0x400036b	            0x7421	                            je 0x400038e	      2060	prdbg.c	FUNCTION_62	IF_1
0x400036d	          0x83fa03	                              cmp edx, 3	      2063	prdbg.c	FUNCTION_62	CALL_2
0x4000370	            0x7519	                           jne 0x400038b	      2063	prdbg.c	FUNCTION_62	CALL_2
0x4000372	      0xb900000000	                              mov ecx, 0	      2063	prdbg.c	FUNCTION_62	CALL_2
0x4000377	      0xba0f080000	                          mov edx, 0x80f	      2063	prdbg.c	FUNCTION_62	CALL_2
0x400037c	      0xbe00000000	                              mov esi, 0	      2063	prdbg.c	FUNCTION_62	CALL_2
0x4000381	      0xbf00000000	                              mov edi, 0	      2063	prdbg.c	FUNCTION_62	CALL_2
0x4000386	      0xe800000000	                          call 0x400038b	      2063	prdbg.c	FUNCTION_62	CALL_2
0x400038b	          0x897010	             mov dword [rax + 0x10], esi	      2065	prdbg.c	FUNCTION_62
0x400038e	      0xb801000000	                              mov eax, 1	      2068	prdbg.c	FUNCTION_62
0x4000393	        0x4883c408	                              add rsp, 8	      2068	prdbg.c	FUNCTION_62
0x4000397	              0xc3	                                     ret	      2068	prdbg.c	FUNCTION_62
pr_typedef_type	IF,0:WHILE,0:ELSE,0:CALL,1:FOR,0:functions,0:SWITCH,0:DO,0	4
0x4001414	        0x4883ec08	                              sub rsp, 8	      1591	prdbg.c	FUNCTION_42
0x4001418	      0xe873feffff	                      call sym.push_type	      1594	prdbg.c	FUNCTION_42	CALL_1
0x400141d	        0x4883c408	                              add rsp, 8	      1595	prdbg.c	FUNCTION_42
0x4001421	              0xc3	                                     ret	      1595	prdbg.c	FUNCTION_42
pr_complex_type	IF,1:WHILE,0:ELSE,0:CALL,2:FOR,0:functions,0:SWITCH,0:DO,0	10
0x4001942	              0x53	                                push rbx	       611	prdbg.c	FUNCTION_17
0x4001943	          0x4889fb	                            mov rbx, rdi	       611	prdbg.c	FUNCTION_17
0x4001946	      0xe873ffffff	                  call sym.pr_float_type	       614	prdbg.c	FUNCTION_17	IF_1	CALL_1
0x400194b	            0x85c0	                           test eax, eax	       614	prdbg.c	FUNCTION_17	IF_1	CALL_1
0x400194d	            0x740d	                            je 0x400195c	       614	prdbg.c	FUNCTION_17	IF_1	CALL_1
0x400194f	      0xbe00000000	                              mov esi, 0	       617	prdbg.c	FUNCTION_17	CALL_2
0x4001954	          0x4889df	                            mov rdi, rbx	       617	prdbg.c	FUNCTION_17	CALL_2
0x4001957	      0xe819ebffff	                   call sym.prepend_type	       617	prdbg.c	FUNCTION_17	CALL_2
0x400195c	              0x5b	                                 pop rbx	       618	prdbg.c	FUNCTION_17
0x400195d	              0xc3	                                     ret	       618	prdbg.c	FUNCTION_17
pr_start_struct_type	IF,13:WHILE,0:ELSE,1:CALL,10:FOR,0:functions,0:SWITCH,0:DO,0	123
0x4001696	            0x4155	                                push r13	      1043	prdbg.c	FUNCTION_30
0x4001698	            0x4154	                                push r12	      1043	prdbg.c	FUNCTION_30
0x400169a	              0x55	                                push rbp	      1043	prdbg.c	FUNCTION_30
0x400169b	              0x53	                                push rbx	      1043	prdbg.c	FUNCTION_30
0x400169c	        0x4883ec38	                           sub rsp, 0x38	      1043	prdbg.c	FUNCTION_30
0x40016a0	          0x4889fb	                            mov rbx, rdi	      1043	prdbg.c	FUNCTION_30
0x40016a3	          0x4889f5	                            mov rbp, rsi	      1043	prdbg.c	FUNCTION_30
0x40016a6	          0x4189d5	                           mov r13d, edx	      1043	prdbg.c	FUNCTION_30
0x40016a9	          0x4589c4	                           mov r12d, r8d	      1043	prdbg.c	FUNCTION_30
0x40016ac	    0x64488b042528	                mov rax, qword fs:[0x28]	      1043	prdbg.c	FUNCTION_30
0x40016b5	      0x4889442428	             mov qword [rsp + 0x28], rax	      1043	prdbg.c	FUNCTION_30
0x40016ba	            0x31c0	                            xor eax, eax	      1043	prdbg.c	FUNCTION_30
0x40016bc	        0x83470802	                  add dword [rdi + 8], 2	      1046	prdbg.c	FUNCTION_30
0x40016c0	            0x85c9	                           test ecx, ecx	      1048	prdbg.c	FUNCTION_30	IF_1	CALL_1
0x40016c2	      0xbe00000000	                              mov esi, 0	      1048	prdbg.c	FUNCTION_30	IF_1	CALL_1
0x40016c7	      0xb800000000	                              mov eax, 0	      1048	prdbg.c	FUNCTION_30	IF_1	CALL_1
0x40016cc	        0x480f45f0	                         cmovne rsi, rax	      1048	prdbg.c	FUNCTION_30	IF_1	CALL_1
0x40016d0	      0xe8bbfbffff	                      call sym.push_type	      1048	prdbg.c	FUNCTION_30	IF_1	CALL_1
0x40016d5	            0x85c0	                           test eax, eax	      1048	prdbg.c	FUNCTION_30	IF_1	CALL_1
0x40016d7	     0xf8419010000	                            je 0x40017f6	      1048	prdbg.c	FUNCTION_30	IF_1	CALL_1
0x40016dd	          0x4885ed	                           test rbp, rbp	      1050	prdbg.c	FUNCTION_30	IF_2
0x40016e0	            0x7418	                            je 0x40016fa	      1050	prdbg.c	FUNCTION_30	IF_2
0x40016e2	          0x4889ee	                            mov rsi, rbp	      1052	prdbg.c	FUNCTION_30	IF_2	IF_3	CALL_2
0x40016e5	          0x4889df	                            mov rdi, rbx	      1052	prdbg.c	FUNCTION_30	IF_2	IF_3	CALL_2
0x40016e8	      0xe83aeeffff	                    call sym.append_type	      1052	prdbg.c	FUNCTION_30	IF_2	IF_3	CALL_2
0x40016ed	            0x85c0	                           test eax, eax	      1052	prdbg.c	FUNCTION_30	IF_2	IF_3	CALL_2
0x40016ef	     0xf852a010000	                           jne 0x400181f	      1052	prdbg.c	FUNCTION_30	IF_2	IF_3	CALL_2
0x40016f5	      0xe9fc000000	                           jmp 0x40017f6	      1052	prdbg.c	FUNCTION_30	IF_2	IF_3	CALL_2
0x40016fa	          0x4589e8	                           mov r8d, r13d	        33	stdio2.h	FUNCTION_84	CALL_1
0x40016fd	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x4001702	      0xba14000000	                           mov edx, 0x14	        33	stdio2.h	FUNCTION_84	CALL_1
0x4001707	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_84	CALL_1
0x400170c	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_84	CALL_1
0x400170f	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x4001714	      0xe800000000	                          call 0x4001719	        33	stdio2.h	FUNCTION_84	CALL_1
0x4001719	          0x4889e6	                            mov rsi, rsp	      1060	prdbg.c	FUNCTION_30	ELSE_1	IF_4	CALL_3
0x400171c	          0x4889df	                            mov rdi, rbx	      1060	prdbg.c	FUNCTION_30	ELSE_1	IF_4	CALL_3
0x400171f	      0xe803eeffff	                    call sym.append_type	      1060	prdbg.c	FUNCTION_30	ELSE_1	IF_4	CALL_3
0x4001724	            0x85c0	                           test eax, eax	      1060	prdbg.c	FUNCTION_30	ELSE_1	IF_4	CALL_3
0x4001726	     0xf84ca000000	                            je 0x40017f6	      1060	prdbg.c	FUNCTION_30	ELSE_1	IF_4	CALL_3
0x400172c	      0xbe00000000	                              mov esi, 0	      1064	prdbg.c	FUNCTION_30	IF_5	CALL_4
0x4001731	          0x4889df	                            mov rdi, rbx	      1064	prdbg.c	FUNCTION_30	IF_5	CALL_4
0x4001734	      0xe8eeedffff	                    call sym.append_type	      1064	prdbg.c	FUNCTION_30	IF_5	CALL_4
0x4001739	            0x85c0	                           test eax, eax	      1064	prdbg.c	FUNCTION_30	IF_5	CALL_4
0x400173b	     0xf84b5000000	                            je 0x40017f6	      1064	prdbg.c	FUNCTION_30	IF_5	CALL_4
0x4001741	          0x4585e4	                         test r12d, r12d	      1066	prdbg.c	FUNCTION_30	IF_6
0x4001744	     0xf8488000000	                            je 0x40017d2	      1066	prdbg.c	FUNCTION_30	IF_6
0x400174a	      0xe9e3000000	                           jmp 0x4001832	      1066	prdbg.c	FUNCTION_30	IF_6
0x400174f	      0xbd01000000	                              mov ebp, 1	      1066	prdbg.c	FUNCTION_30	IF_6
0x4001754	          0x4585e4	                         test r12d, r12d	      1073	prdbg.c	FUNCTION_30	IF_6	IF_8
0x4001757	            0x742e	                            je 0x4001787	      1073	prdbg.c	FUNCTION_30	IF_6	IF_8
0x4001759	          0x4589e0	                           mov r8d, r12d	        33	stdio2.h	FUNCTION_84	CALL_1
0x400175c	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x4001761	      0xba1e000000	                           mov edx, 0x1e	        33	stdio2.h	FUNCTION_84	CALL_1
0x4001766	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_84	CALL_1
0x400176b	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_84	CALL_1
0x400176e	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x4001773	      0xe800000000	                          call 0x4001778	        33	stdio2.h	FUNCTION_84	CALL_1
0x4001778	          0x4889e6	                            mov rsi, rsp	      1076	prdbg.c	FUNCTION_30	IF_6	IF_8	IF_9	CALL_6
0x400177b	          0x4889df	                            mov rdi, rbx	      1076	prdbg.c	FUNCTION_30	IF_6	IF_8	IF_9	CALL_6
0x400177e	      0xe8a4edffff	                    call sym.append_type	      1076	prdbg.c	FUNCTION_30	IF_6	IF_8	IF_9	CALL_6
0x4001783	            0x85c0	                           test eax, eax	      1076	prdbg.c	FUNCTION_30	IF_6	IF_8	IF_9	CALL_6
0x4001785	            0x7444	                            je 0x40017cb	      1076	prdbg.c	FUNCTION_30	IF_6	IF_8	IF_9	CALL_6
0x4001787	          0x4084ed	                           test bpl, bpl	      1079	prdbg.c	FUNCTION_30	IF_6	IF_10
0x400178a	            0x742e	                            je 0x40017ba	      1079	prdbg.c	FUNCTION_30	IF_6	IF_10
0x400178c	          0x4589e8	                           mov r8d, r13d	        33	stdio2.h	FUNCTION_84	CALL_1
0x400178f	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x4001794	      0xba1e000000	                           mov edx, 0x1e	        33	stdio2.h	FUNCTION_84	CALL_1
0x4001799	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_84	CALL_1
0x400179e	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_84	CALL_1
0x40017a1	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x40017a6	      0xe800000000	                          call 0x40017ab	        33	stdio2.h	FUNCTION_84	CALL_1
0x40017ab	          0x4889e6	                            mov rsi, rsp	      1082	prdbg.c	FUNCTION_30	IF_6	IF_10	IF_11	CALL_7
0x40017ae	          0x4889df	                            mov rdi, rbx	      1082	prdbg.c	FUNCTION_30	IF_6	IF_10	IF_11	CALL_7
0x40017b1	      0xe871edffff	                    call sym.append_type	      1082	prdbg.c	FUNCTION_30	IF_6	IF_10	IF_11	CALL_7
0x40017b6	            0x85c0	                           test eax, eax	      1082	prdbg.c	FUNCTION_30	IF_6	IF_10	IF_11	CALL_7
0x40017b8	            0x7411	                            je 0x40017cb	      1082	prdbg.c	FUNCTION_30	IF_6	IF_10	IF_11	CALL_7
0x40017ba	      0xbe00000000	                              mov esi, 0	      1085	prdbg.c	FUNCTION_30	IF_6	IF_12	CALL_8
0x40017bf	          0x4889df	                            mov rdi, rbx	      1085	prdbg.c	FUNCTION_30	IF_6	IF_12	CALL_8
0x40017c2	      0xe860edffff	                    call sym.append_type	      1085	prdbg.c	FUNCTION_30	IF_6	IF_12	CALL_8
0x40017c7	            0x85c0	                           test eax, eax	      1085	prdbg.c	FUNCTION_30	IF_6	IF_12	CALL_8
0x40017c9	            0x7507	                           jne 0x40017d2	      1085	prdbg.c	FUNCTION_30	IF_6	IF_12	CALL_8
0x40017cb	      0xb800000000	                              mov eax, 0	      1071	prdbg.c	FUNCTION_30	IF_6	IF_7
0x40017d0	            0xeb24	                           jmp 0x40017f6	      1071	prdbg.c	FUNCTION_30	IF_6	IF_7
0x40017d2	      0xbe00000000	                              mov esi, 0	      1088	prdbg.c	FUNCTION_30	IF_13	CALL_9
0x40017d7	          0x4889df	                            mov rdi, rbx	      1088	prdbg.c	FUNCTION_30	IF_13	CALL_9
0x40017da	      0xe848edffff	                    call sym.append_type	      1088	prdbg.c	FUNCTION_30	IF_13	CALL_9
0x40017df	            0x85c0	                           test eax, eax	      1088	prdbg.c	FUNCTION_30	IF_13	CALL_9
0x40017e1	            0x7413	                            je 0x40017f6	      1088	prdbg.c	FUNCTION_30	IF_13	CALL_9
0x40017e3	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1091	prdbg.c	FUNCTION_30
0x40017e7	    0xc74010000000	               mov dword [rax + 0x10], 0	      1091	prdbg.c	FUNCTION_30
0x40017ee	          0x4889df	                            mov rdi, rbx	      1093	prdbg.c	FUNCTION_30	CALL_10
0x40017f1	      0xe81af3ffff	                    call sym.indent_type	      1093	prdbg.c	FUNCTION_30	CALL_10
0x40017f6	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      1094	prdbg.c	FUNCTION_30
0x40017fb	    0x644833142528	                xor rdx, qword fs:[0x28]	      1094	prdbg.c	FUNCTION_30
0x4001804	            0x7450	                            je 0x4001856	      1094	prdbg.c	FUNCTION_30
0x4001806	            0xeb49	                           jmp 0x4001851	      1094	prdbg.c	FUNCTION_30
0x4001808	      0xbe00000000	                              mov esi, 0	      1070	prdbg.c	FUNCTION_30	IF_6	IF_7	CALL_5
0x400180d	          0x4889df	                            mov rdi, rbx	      1070	prdbg.c	FUNCTION_30	IF_6	IF_7	CALL_5
0x4001810	      0xe812edffff	                    call sym.append_type	      1070	prdbg.c	FUNCTION_30	IF_6	IF_7	CALL_5
0x4001815	            0x85c0	                           test eax, eax	      1070	prdbg.c	FUNCTION_30	IF_6	IF_7	CALL_5
0x4001817	     0xf8532ffffff	                           jne 0x400174f	      1070	prdbg.c	FUNCTION_30	IF_6	IF_7	CALL_5
0x400181d	            0xebac	                           jmp 0x40017cb	      1070	prdbg.c	FUNCTION_30	IF_6	IF_7	CALL_5
0x400181f	      0xbe00000000	                              mov esi, 0	      1064	prdbg.c	FUNCTION_30	IF_5	CALL_4
0x4001824	          0x4889df	                            mov rdi, rbx	      1064	prdbg.c	FUNCTION_30	IF_5	CALL_4
0x4001827	      0xe8fbecffff	                    call sym.append_type	      1064	prdbg.c	FUNCTION_30	IF_5	CALL_4
0x400182c	            0x85c0	                           test eax, eax	      1064	prdbg.c	FUNCTION_30	IF_5	CALL_4
0x400182e	            0x74c6	                            je 0x40017f6	      1064	prdbg.c	FUNCTION_30	IF_5	CALL_4
0x4001830	            0xebd6	                           jmp 0x4001808	      1064	prdbg.c	FUNCTION_30	IF_5	CALL_4
0x4001832	      0xbe00000000	                              mov esi, 0	      1070	prdbg.c	FUNCTION_30	IF_6	IF_7	CALL_5
0x4001837	          0x4889df	                            mov rdi, rbx	      1070	prdbg.c	FUNCTION_30	IF_6	IF_7	CALL_5
0x400183a	      0xe8e8ecffff	                    call sym.append_type	      1070	prdbg.c	FUNCTION_30	IF_6	IF_7	CALL_5
0x400183f	      0xbd00000000	                              mov ebp, 0	      1066	prdbg.c	FUNCTION_30	IF_6
0x4001844	            0x85c0	                           test eax, eax	      1070	prdbg.c	FUNCTION_30	IF_6	IF_7	CALL_5
0x4001846	     0xf850dffffff	                           jne 0x4001759	      1070	prdbg.c	FUNCTION_30	IF_6	IF_7	CALL_5
0x400184c	      0xe97affffff	                           jmp 0x40017cb	      1070	prdbg.c	FUNCTION_30	IF_6	IF_7	CALL_5
0x4001851	      0xe800000000	                          call 0x4001856	      1094	prdbg.c	FUNCTION_30
0x4001856	        0x4883c438	                           add rsp, 0x38	      1094	prdbg.c	FUNCTION_30
0x400185a	              0x5b	                                 pop rbx	      1094	prdbg.c	FUNCTION_30
0x400185b	              0x5d	                                 pop rbp	      1094	prdbg.c	FUNCTION_30
0x400185c	            0x415c	                                 pop r12	      1094	prdbg.c	FUNCTION_30
0x400185e	            0x415d	                                 pop r13	      1094	prdbg.c	FUNCTION_30
0x4001860	              0xc3	                                     ret	      1094	prdbg.c	FUNCTION_30
tg_float_constant	IF,0:WHILE,0:ELSE,0:CALL,1:FOR,0:functions,0:SWITCH,0:DO,0	20
0x400013e	              0x55	                                push rbp	      2556	prdbg.c	FUNCTION_75
0x400013f	              0x53	                                push rbx	      2556	prdbg.c	FUNCTION_75
0x4000140	        0x4883ec18	                           sub rsp, 0x18	      2556	prdbg.c	FUNCTION_75
0x4000144	          0x4889fb	                            mov rbx, rdi	      2556	prdbg.c	FUNCTION_75
0x4000147	          0x4889f5	                            mov rbp, rsi	      2556	prdbg.c	FUNCTION_75
0x400014a	    0xf20f11442408	             movsd qword [rsp + 8], xmm0	      2556	prdbg.c	FUNCTION_75
0x4000150	      0xe874ffffff	                         call sym.indent	      2559	prdbg.c	FUNCTION_75	CALL_1
0x4000155	    0xf20f10442408	            movsd xmm0, qword [rsp + 8] 	        97	stdio2.h	CALL_93
0x400015b	        0x4c8b4320	              mov r8, qword [rbx + 0x20]	        97	stdio2.h	CALL_93
0x400015f	          0x4889e9	                            mov rcx, rbp	        97	stdio2.h	CALL_93
0x4000162	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_93
0x4000167	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_93
0x400016c	          0x488b3b	                    mov rdi, qword [rbx]	        97	stdio2.h	CALL_93
0x400016f	      0xb801000000	                              mov eax, 1	        97	stdio2.h	CALL_93
0x4000174	      0xe800000000	                          call 0x4000179	        97	stdio2.h	CALL_93
0x4000179	      0xb801000000	                              mov eax, 1	      2563	prdbg.c	FUNCTION_75
0x400017e	        0x4883c418	                           add rsp, 0x18	      2563	prdbg.c	FUNCTION_75
0x4000182	              0x5b	                                 pop rbx	      2563	prdbg.c	FUNCTION_75
0x4000183	              0x5d	                                 pop rbp	      2563	prdbg.c	FUNCTION_75
0x4000184	              0xc3	                                     ret	      2563	prdbg.c	FUNCTION_75
tg_start_struct_type	IF,2:WHILE,0:ELSE,1:CALL,2:FOR,0:functions,0:SWITCH,0:DO,0	53
0x4001c2b	            0x4154	                                push r12	      2027	prdbg.c	FUNCTION_61
0x4001c2d	              0x55	                                push rbp	      2027	prdbg.c	FUNCTION_61
0x4001c2e	              0x53	                                push rbx	      2027	prdbg.c	FUNCTION_61
0x4001c2f	        0x4883ec20	                           sub rsp, 0x20	      2027	prdbg.c	FUNCTION_61
0x4001c33	          0x4889fb	                            mov rbx, rdi	      2027	prdbg.c	FUNCTION_61
0x4001c36	          0x4889f5	                            mov rbp, rsi	      2027	prdbg.c	FUNCTION_61
0x4001c39	          0x4189cc	                           mov r12d, ecx	      2027	prdbg.c	FUNCTION_61
0x4001c3c	    0x64488b042528	                mov rax, qword fs:[0x28]	      2027	prdbg.c	FUNCTION_61
0x4001c45	      0x4889442418	             mov qword [rsp + 0x18], rax	      2027	prdbg.c	FUNCTION_61
0x4001c4a	            0x31c0	                            xor eax, eax	      2027	prdbg.c	FUNCTION_61
0x4001c4c	          0x4885f6	                           test rsi, rsi	      2032	prdbg.c	FUNCTION_61	IF_1
0x4001c4f	            0x751d	                           jne 0x4001c6e	      2032	prdbg.c	FUNCTION_61	IF_1
0x4001c51	          0x4189d0	                            mov r8d, edx	        33	stdio2.h	FUNCTION_84	CALL_1
0x4001c54	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x4001c59	      0xba14000000	                           mov edx, 0x14	        33	stdio2.h	FUNCTION_84	CALL_1
0x4001c5e	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_84	CALL_1
0x4001c63	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_84	CALL_1
0x4001c66	      0xe800000000	                          call 0x4001c6b	        33	stdio2.h	FUNCTION_84	CALL_1
0x4001c6b	          0x4889e5	                            mov rbp, rsp	      2036	prdbg.c	FUNCTION_61	ELSE_1
0x4001c6e	          0x4889ee	                            mov rsi, rbp	      2040	prdbg.c	FUNCTION_61	IF_2	CALL_1
0x4001c71	          0x4889df	                            mov rdi, rbx	      2040	prdbg.c	FUNCTION_61	IF_2	CALL_1
0x4001c74	      0xe817f6ffff	                      call sym.push_type	      2040	prdbg.c	FUNCTION_61	IF_2	CALL_1
0x4001c79	            0x85c0	                           test eax, eax	      2040	prdbg.c	FUNCTION_61	IF_2	CALL_1
0x4001c7b	            0x7456	                            je 0x4001cd3	      2040	prdbg.c	FUNCTION_61	IF_2	CALL_1
0x4001c7d	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	      2043	prdbg.c	FUNCTION_61
0x4001c81	          0x4585e4	                         test r12d, r12d	      2043	prdbg.c	FUNCTION_61
0x4001c84	      0xb900000000	                              mov ecx, 0	      2043	prdbg.c	FUNCTION_61
0x4001c89	      0xb800000000	                              mov eax, 0	      2043	prdbg.c	FUNCTION_61
0x4001c8e	        0x480f44c1	                          cmove rax, rcx	      2043	prdbg.c	FUNCTION_61
0x4001c92	        0x48894220	             mov qword [rdx + 0x20], rax	      2043	prdbg.c	FUNCTION_61
0x4001c96	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      2046	prdbg.c	FUNCTION_61
0x4001c9a	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2046	prdbg.c	FUNCTION_61
0x4001c9e	        0x440fbe08	                   movsx r9d, byte [rax]	        97	stdio2.h	CALL_93
0x4001ca2	        0x4c8b4320	              mov r8, qword [rbx + 0x20]	        97	stdio2.h	CALL_93
0x4001ca6	          0x4889e9	                            mov rcx, rbp	        97	stdio2.h	CALL_93
0x4001ca9	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_93
0x4001cae	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_93
0x4001cb3	          0x488b3b	                    mov rdi, qword [rbx]	        97	stdio2.h	CALL_93
0x4001cb6	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_93
0x4001cbb	      0xe800000000	                          call 0x4001cc0	        97	stdio2.h	CALL_93
0x4001cc0	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      2048	prdbg.c	FUNCTION_61
0x4001cc4	    0xc74010000000	               mov dword [rax + 0x10], 0	      2048	prdbg.c	FUNCTION_61
0x4001ccb	          0x4889df	                            mov rdi, rbx	      2050	prdbg.c	FUNCTION_61	CALL_2
0x4001cce	      0xe83deeffff	                    call sym.indent_type	      2050	prdbg.c	FUNCTION_61	CALL_2
0x4001cd3	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      2051	prdbg.c	FUNCTION_61
0x4001cd8	    0x644833342528	                xor rsi, qword fs:[0x28]	      2051	prdbg.c	FUNCTION_61
0x4001ce1	            0x7405	                            je 0x4001ce8	      2051	prdbg.c	FUNCTION_61
0x4001ce3	      0xe800000000	                          call 0x4001ce8	      2051	prdbg.c	FUNCTION_61
0x4001ce8	        0x4883c420	                           add rsp, 0x20	      2051	prdbg.c	FUNCTION_61
0x4001cec	              0x5b	                                 pop rbx	      2051	prdbg.c	FUNCTION_61
0x4001ced	              0x5d	                                 pop rbp	      2051	prdbg.c	FUNCTION_61
0x4001cee	            0x415c	                                 pop r12	      2051	prdbg.c	FUNCTION_61
0x4001cf0	              0xc3	                                     ret	      2051	prdbg.c	FUNCTION_61
indent	IF,0:WHILE,0:ELSE,0:CALL,1:FOR,1:functions,0:SWITCH,0:DO,0	17
0x40000c9	        0x837f0800	                  cmp dword [rdi + 8], 0	       327	prdbg.c	FUNCTION_2	FOR_1
0x40000cd	            0x742a	                            je 0x40000f9	       327	prdbg.c	FUNCTION_2	FOR_1
0x40000cf	              0x55	                                push rbp	       324	prdbg.c	FUNCTION_2
0x40000d0	              0x53	                                push rbx	       324	prdbg.c	FUNCTION_2
0x40000d1	        0x4883ec08	                              sub rsp, 8	       324	prdbg.c	FUNCTION_2
0x40000d5	          0x4889fd	                            mov rbp, rdi	       324	prdbg.c	FUNCTION_2
0x40000d8	      0xbb00000000	                              mov ebx, 0	       327	prdbg.c	FUNCTION_2	FOR_1
0x40000dd	        0x488b7500	                    mov rsi, qword [rbp]	       328	prdbg.c	FUNCTION_2	CALL_1
0x40000e1	      0xbf20000000	                           mov edi, 0x20	       328	prdbg.c	FUNCTION_2	CALL_1
0x40000e6	      0xe800000000	                          call 0x40000eb	       328	prdbg.c	FUNCTION_2	CALL_1
0x40000eb	          0x83c301	                              add ebx, 1	       327	prdbg.c	FUNCTION_2	FOR_1
0x40000ee	          0x395d08	                cmp dword [rbp + 8], ebx	       327	prdbg.c	FUNCTION_2	FOR_1
0x40000f1	            0x77ea	                            ja 0x40000dd	       327	prdbg.c	FUNCTION_2	FOR_1
0x40000f3	        0x4883c408	                              add rsp, 8	       329	prdbg.c	FUNCTION_2
0x40000f7	              0x5b	                                 pop rbx	       329	prdbg.c	FUNCTION_2
0x40000f8	              0x5d	                                 pop rbp	       329	prdbg.c	FUNCTION_2
0x40000f9	            0xf3c3	                                     ret	       329	prdbg.c	FUNCTION_2
pr_float_constant	IF,0:WHILE,0:ELSE,0:CALL,1:FOR,0:functions,0:SWITCH,0:DO,0	19
0x40000fb	              0x55	                                push rbp	      1713	prdbg.c	FUNCTION_47
0x40000fc	              0x53	                                push rbx	      1713	prdbg.c	FUNCTION_47
0x40000fd	        0x4883ec18	                           sub rsp, 0x18	      1713	prdbg.c	FUNCTION_47
0x4000101	          0x4889fb	                            mov rbx, rdi	      1713	prdbg.c	FUNCTION_47
0x4000104	          0x4889f5	                            mov rbp, rsi	      1713	prdbg.c	FUNCTION_47
0x4000107	    0xf20f11442408	             movsd qword [rsp + 8], xmm0	      1713	prdbg.c	FUNCTION_47
0x400010d	      0xe8b7ffffff	                         call sym.indent	      1716	prdbg.c	FUNCTION_47	CALL_1
0x4000112	    0xf20f10442408	            movsd xmm0, qword [rsp + 8] 	        97	stdio2.h	CALL_93
0x4000118	          0x4889e9	                            mov rcx, rbp	        97	stdio2.h	CALL_93
0x400011b	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_93
0x4000120	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_93
0x4000125	          0x488b3b	                    mov rdi, qword [rbx]	        97	stdio2.h	CALL_93
0x4000128	      0xb801000000	                              mov eax, 1	        97	stdio2.h	CALL_93
0x400012d	      0xe800000000	                          call 0x4000132	        97	stdio2.h	CALL_93
0x4000132	      0xb801000000	                              mov eax, 1	      1719	prdbg.c	FUNCTION_47
0x4000137	        0x4883c418	                           add rsp, 0x18	      1719	prdbg.c	FUNCTION_47
0x400013b	              0x5b	                                 pop rbx	      1719	prdbg.c	FUNCTION_47
0x400013c	              0x5d	                                 pop rbp	      1719	prdbg.c	FUNCTION_47
0x400013d	              0xc3	                                     ret	      1719	prdbg.c	FUNCTION_47
pr_typed_constant	IF,1:WHILE,0:ELSE,0:CALL,4:FOR,0:functions,0:SWITCH,0:DO,0	46
0x400398a	            0x4155	                                push r13	      1725	prdbg.c	FUNCTION_48
0x400398c	            0x4154	                                push r12	      1725	prdbg.c	FUNCTION_48
0x400398e	              0x55	                                push rbp	      1725	prdbg.c	FUNCTION_48
0x400398f	              0x53	                                push rbx	      1725	prdbg.c	FUNCTION_48
0x4003990	        0x4883ec28	                           sub rsp, 0x28	      1725	prdbg.c	FUNCTION_48
0x4003994	          0x4889fd	                            mov rbp, rdi	      1725	prdbg.c	FUNCTION_48
0x4003997	          0x4989f4	                            mov r12, rsi	      1725	prdbg.c	FUNCTION_48
0x400399a	          0x4989d5	                            mov r13, rdx	      1725	prdbg.c	FUNCTION_48
0x400399d	    0x64488b042528	                mov rax, qword fs:[0x28]	      1725	prdbg.c	FUNCTION_48
0x40039a6	      0x4889442418	             mov qword [rsp + 0x18], rax	      1725	prdbg.c	FUNCTION_48
0x40039ab	            0x31c0	                            xor eax, eax	      1725	prdbg.c	FUNCTION_48
0x40039ad	      0xe8d3c7ffff	                       call sym.pop_type	      1730	prdbg.c	FUNCTION_48	CALL_1
0x40039b2	          0x4889c3	                            mov rbx, rax	      1730	prdbg.c	FUNCTION_48	CALL_1
0x40039b5	      0xb800000000	                              mov eax, 0	      1732	prdbg.c	FUNCTION_48	IF_1
0x40039ba	          0x4885db	                           test rbx, rbx	      1731	prdbg.c	FUNCTION_48	IF_1
0x40039bd	            0x7455	                            je 0x4003a14	      1731	prdbg.c	FUNCTION_48	IF_1
0x40039bf	          0x4889ef	                            mov rdi, rbp	      1734	prdbg.c	FUNCTION_48	CALL_2
0x40039c2	      0xe802c7ffff	                         call sym.indent	      1734	prdbg.c	FUNCTION_48	CALL_2
0x40039c7	          0x4d89e8	                             mov r8, r13	        33	stdio2.h	FUNCTION_84	CALL_1
0x40039ca	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x40039cf	      0xba16000000	                           mov edx, 0x16	        33	stdio2.h	FUNCTION_84	CALL_1
0x40039d4	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_84	CALL_1
0x40039d9	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_84	CALL_1
0x40039dc	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x40039e1	      0xe800000000	                          call 0x40039e6	        33	stdio2.h	FUNCTION_84	CALL_1
0x40039e6	          0x4989e1	                             mov r9, rsp	        97	stdio2.h	CALL_93
0x40039e9	          0x4d89e0	                             mov r8, r12	        97	stdio2.h	CALL_93
0x40039ec	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_93
0x40039ef	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_93
0x40039f4	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_93
0x40039f9	        0x488b7d00	                    mov rdi, qword [rbp]	        97	stdio2.h	CALL_93
0x40039fd	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_93
0x4003a02	      0xe800000000	                          call 0x4003a07	        97	stdio2.h	CALL_93
0x4003a07	          0x4889df	                            mov rdi, rbx	      1738	prdbg.c	FUNCTION_48	CALL_4
0x4003a0a	      0xe800000000	                          call 0x4003a0f	      1738	prdbg.c	FUNCTION_48	CALL_4
0x4003a0f	      0xb801000000	                              mov eax, 1	      1740	prdbg.c	FUNCTION_48
0x4003a14	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1741	prdbg.c	FUNCTION_48
0x4003a19	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1741	prdbg.c	FUNCTION_48
0x4003a22	            0x7405	                            je 0x4003a29	      1741	prdbg.c	FUNCTION_48
0x4003a24	      0xe800000000	                          call 0x4003a29	      1741	prdbg.c	FUNCTION_48
0x4003a29	        0x4883c428	                           add rsp, 0x28	      1741	prdbg.c	FUNCTION_48
0x4003a2d	              0x5b	                                 pop rbx	      1741	prdbg.c	FUNCTION_48
0x4003a2e	              0x5d	                                 pop rbp	      1741	prdbg.c	FUNCTION_48
0x4003a2f	            0x415c	                                 pop r12	      1741	prdbg.c	FUNCTION_48
0x4003a31	            0x415d	                                 pop r13	      1741	prdbg.c	FUNCTION_48
0x4003a33	              0xc3	                                     ret	      1741	prdbg.c	FUNCTION_48
print_debugging_info	IF,1:WHILE,0:ELSE,0:CALL,6:FOR,0:functions,0:SWITCH,0:DO,0	56
0x4003c67	              0x55	                                push rbp	       296	prdbg.c	FUNCTION_1
0x4003c68	              0x53	                                push rbx	       296	prdbg.c	FUNCTION_1
0x4003c69	        0x4883ec58	                           sub rsp, 0x58	       296	prdbg.c	FUNCTION_1
0x4003c6d	          0x4889f5	                            mov rbp, rsi	       296	prdbg.c	FUNCTION_1
0x4003c70	    0x64488b042528	                mov rax, qword fs:[0x28]	       296	prdbg.c	FUNCTION_1
0x4003c79	      0x4889442448	             mov qword [rsp + 0x48], rax	       296	prdbg.c	FUNCTION_1
0x4003c7e	            0x31c0	                            xor eax, eax	       296	prdbg.c	FUNCTION_1
0x4003c80	        0x48893c24	                    mov qword [rsp], rdi	       299	prdbg.c	FUNCTION_1
0x4003c84	    0xc74424080000	                  mov dword [rsp + 8], 0	       300	prdbg.c	FUNCTION_1
0x4003c8c	    0x48c744241000	               mov qword [rsp + 0x10], 0	       301	prdbg.c	FUNCTION_1
0x4003c95	    0xc74424180000	               mov dword [rsp + 0x18], 0	       302	prdbg.c	FUNCTION_1
0x4003c9d	    0x48c744242000	               mov qword [rsp + 0x20], 0	       303	prdbg.c	FUNCTION_1
0x4003ca6	      0x4889542428	             mov qword [rsp + 0x28], rdx	       304	prdbg.c	FUNCTION_1
0x4003cab	      0x48894c2430	             mov qword [rsp + 0x30], rcx	       305	prdbg.c	FUNCTION_1
0x4003cb0	      0x4c89442438	              mov qword [rsp + 0x38], r8	       306	prdbg.c	FUNCTION_1
0x4003cb5	          0x4585c9	                           test r9d, r9d	       308	prdbg.c	FUNCTION_1	IF_1
0x4003cb8	     0xf8481000000	                            je 0x4003d3f	       308	prdbg.c	FUNCTION_1	IF_1
0x4003cbe	          0x4889fb	                            mov rbx, rdi	       308	prdbg.c	FUNCTION_1	IF_1
0x4003cc1	          0x4889f9	                            mov rcx, rdi	       310	prdbg.c	FUNCTION_1	IF_1	CALL_1
0x4003cc4	      0xba26000000	                           mov edx, 0x26	       310	prdbg.c	FUNCTION_1	IF_1	CALL_1
0x4003cc9	      0xbe01000000	                              mov esi, 1	       310	prdbg.c	FUNCTION_1	IF_1	CALL_1
0x4003cce	      0xbf00000000	                              mov edi, 0	       310	prdbg.c	FUNCTION_1	IF_1	CALL_1
0x4003cd3	      0xe800000000	                          call 0x4003cd8	       310	prdbg.c	FUNCTION_1	IF_1	CALL_1
0x4003cd8	          0x4889d9	                            mov rcx, rbx	       311	prdbg.c	FUNCTION_1	IF_1	CALL_2
0x4003cdb	      0xba2b000000	                           mov edx, 0x2b	       311	prdbg.c	FUNCTION_1	IF_1	CALL_2
0x4003ce0	      0xbe01000000	                              mov esi, 1	       311	prdbg.c	FUNCTION_1	IF_1	CALL_2
0x4003ce5	      0xbf00000000	                              mov edi, 0	       311	prdbg.c	FUNCTION_1	IF_1	CALL_2
0x4003cea	      0xe800000000	                          call 0x4003cef	       311	prdbg.c	FUNCTION_1	IF_1	CALL_2
0x4003cef	          0x4889d9	                            mov rcx, rbx	       312	prdbg.c	FUNCTION_1	IF_1	CALL_3
0x4003cf2	      0xba48000000	                           mov edx, 0x48	       312	prdbg.c	FUNCTION_1	IF_1	CALL_3
0x4003cf7	      0xbe01000000	                              mov esi, 1	       312	prdbg.c	FUNCTION_1	IF_1	CALL_3
0x4003cfc	      0xbf00000000	                              mov edi, 0	       312	prdbg.c	FUNCTION_1	IF_1	CALL_3
0x4003d01	      0xe800000000	                          call 0x4003d06	       312	prdbg.c	FUNCTION_1	IF_1	CALL_3
0x4003d06	          0x4889d9	                            mov rcx, rbx	       313	prdbg.c	FUNCTION_1	IF_1	CALL_4
0x4003d09	      0xba2f000000	                           mov edx, 0x2f	       313	prdbg.c	FUNCTION_1	IF_1	CALL_4
0x4003d0e	      0xbe01000000	                              mov esi, 1	       313	prdbg.c	FUNCTION_1	IF_1	CALL_4
0x4003d13	      0xbf00000000	                              mov edi, 0	       313	prdbg.c	FUNCTION_1	IF_1	CALL_4
0x4003d18	      0xe800000000	                          call 0x4003d1d	       313	prdbg.c	FUNCTION_1	IF_1	CALL_4
0x4003d1d	          0x4889e2	                            mov rdx, rsp	       317	prdbg.c	FUNCTION_1	CALL_6
0x4003d20	      0xbe00000000	                              mov esi, 0	       317	prdbg.c	FUNCTION_1	CALL_6
0x4003d25	          0x4889ef	                            mov rdi, rbp	       317	prdbg.c	FUNCTION_1	CALL_6
0x4003d28	      0xe800000000	                          call 0x4003d2d	       317	prdbg.c	FUNCTION_1	CALL_6
0x4003d2d	      0x488b5c2448	            mov rbx, qword [rsp + 0x48] 	       318	prdbg.c	FUNCTION_1
0x4003d32	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       318	prdbg.c	FUNCTION_1
0x4003d3b	            0x7419	                            je 0x4003d56	       318	prdbg.c	FUNCTION_1
0x4003d3d	            0xeb12	                           jmp 0x4003d51	       318	prdbg.c	FUNCTION_1
0x4003d3f	          0x4889e2	                            mov rdx, rsp	       317	prdbg.c	FUNCTION_1	CALL_6
0x4003d42	      0xbe00000000	                              mov esi, 0	       317	prdbg.c	FUNCTION_1	CALL_6
0x4003d47	          0x4889ef	                            mov rdi, rbp	       317	prdbg.c	FUNCTION_1	CALL_6
0x4003d4a	      0xe800000000	                          call 0x4003d4f	       317	prdbg.c	FUNCTION_1	CALL_6
0x4003d4f	            0xebdc	                           jmp 0x4003d2d	       317	prdbg.c	FUNCTION_1	CALL_6
0x4003d51	      0xe800000000	                          call 0x4003d56	       318	prdbg.c	FUNCTION_1
0x4003d56	        0x4883c458	                           add rsp, 0x58	       318	prdbg.c	FUNCTION_1
0x4003d5a	              0x5b	                                 pop rbx	       318	prdbg.c	FUNCTION_1
0x4003d5b	              0x5d	                                 pop rbp	       318	prdbg.c	FUNCTION_1
0x4003d5c	              0xc3	                                     ret	       318	prdbg.c	FUNCTION_1
pr_pointer_type	IF,1:WHILE,0:ELSE,0:CALL,4:FOR,0:functions,0:SWITCH,0:DO,0	26
0x4000ab3	              0x53	                                push rbx	       695	prdbg.c	FUNCTION_20
0x4000ab4	        0x488b4710	            mov rax, qword [rdi + 0x10] 	       699	prdbg.c	FUNCTION_20	CALL_1
0x4000ab8	          0x4885c0	                           test rax, rax	       699	prdbg.c	FUNCTION_20	CALL_1
0x4000abb	            0x7519	                           jne 0x4000ad6	       699	prdbg.c	FUNCTION_20	CALL_1
0x4000abd	      0xb900000000	                              mov ecx, 0	       699	prdbg.c	FUNCTION_20	CALL_1
0x4000ac2	      0xbabb020000	                          mov edx, 0x2bb	       699	prdbg.c	FUNCTION_20	CALL_1
0x4000ac7	      0xbe00000000	                              mov esi, 0	       699	prdbg.c	FUNCTION_20	CALL_1
0x4000acc	      0xbf00000000	                              mov edi, 0	       699	prdbg.c	FUNCTION_20	CALL_1
0x4000ad1	      0xe800000000	                          call 0x4000ad6	       699	prdbg.c	FUNCTION_20	CALL_1
0x4000ad6	          0x4889fb	                            mov rbx, rdi	       699	prdbg.c	FUNCTION_20	CALL_1
0x4000ad9	        0x488b7808	                mov rdi, qword [rax + 8]	       701	prdbg.c	FUNCTION_20	CALL_2
0x4000add	      0xbe7c000000	                           mov esi, 0x7c	       701	prdbg.c	FUNCTION_20	CALL_2
0x4000ae2	      0xe800000000	                          call 0x4000ae7	       701	prdbg.c	FUNCTION_20	CALL_2
0x4000ae7	          0x4885c0	                           test rax, rax	       702	prdbg.c	FUNCTION_20	IF_1
0x4000aea	            0x7415	                            je 0x4000b01	       702	prdbg.c	FUNCTION_20	IF_1
0x4000aec	        0x8078015b	                cmp byte [rax + 1], 0x5b	       702	prdbg.c	FUNCTION_20	IF_1
0x4000af0	            0x750f	                           jne 0x4000b01	       702	prdbg.c	FUNCTION_20	IF_1
0x4000af2	      0xbe00000000	                              mov esi, 0	       703	prdbg.c	FUNCTION_20	CALL_3
0x4000af7	          0x4889df	                            mov rdi, rbx	       703	prdbg.c	FUNCTION_20	CALL_3
0x4000afa	      0xe8cbfaffff	                call sym.substitute_type	       703	prdbg.c	FUNCTION_20	CALL_3
0x4000aff	            0xeb0d	                           jmp 0x4000b0e	       703	prdbg.c	FUNCTION_20	CALL_3
0x4000b01	      0xbe00000000	                              mov esi, 0	       704	prdbg.c	FUNCTION_20	CALL_4
0x4000b06	          0x4889df	                            mov rdi, rbx	       704	prdbg.c	FUNCTION_20	CALL_4
0x4000b09	      0xe8bcfaffff	                call sym.substitute_type	       704	prdbg.c	FUNCTION_20	CALL_4
0x4000b0e	              0x5b	                                 pop rbx	       705	prdbg.c	FUNCTION_20
0x4000b0f	              0xc3	                                     ret	       705	prdbg.c	FUNCTION_20
pr_end_block	IF,0:WHILE,0:ELSE,0:CALL,2:FOR,0:functions,0:SWITCH,0:DO,0	32
0x4003be8	              0x55	                                push rbp	      1888	prdbg.c	FUNCTION_54
0x4003be9	              0x53	                                push rbx	      1888	prdbg.c	FUNCTION_54
0x4003bea	        0x4883ec28	                           sub rsp, 0x28	      1888	prdbg.c	FUNCTION_54
0x4003bee	          0x4889fb	                            mov rbx, rdi	      1888	prdbg.c	FUNCTION_54
0x4003bf1	          0x4889f5	                            mov rbp, rsi	      1888	prdbg.c	FUNCTION_54
0x4003bf4	    0x64488b042528	                mov rax, qword fs:[0x28]	      1888	prdbg.c	FUNCTION_54
0x4003bfd	      0x4889442418	             mov qword [rsp + 0x18], rax	      1888	prdbg.c	FUNCTION_54
0x4003c02	            0x31c0	                            xor eax, eax	      1888	prdbg.c	FUNCTION_54
0x4003c04	        0x836f0802	                  sub dword [rdi + 8], 2	      1892	prdbg.c	FUNCTION_54
0x4003c08	      0xe8bcc4ffff	                         call sym.indent	      1894	prdbg.c	FUNCTION_54	CALL_1
0x4003c0d	          0x4989e8	                             mov r8, rbp	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003c10	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003c15	      0xba16000000	                           mov edx, 0x16	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003c1a	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003c1f	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003c22	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003c27	      0xe800000000	                          call 0x4003c2c	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003c2c	          0x4889e1	                            mov rcx, rsp	        97	stdio2.h	CALL_93
0x4003c2f	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_93
0x4003c34	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_93
0x4003c39	          0x488b3b	                    mov rdi, qword [rbx]	        97	stdio2.h	CALL_93
0x4003c3c	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_93
0x4003c41	      0xe800000000	                          call 0x4003c46	        97	stdio2.h	CALL_93
0x4003c46	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      1899	prdbg.c	FUNCTION_54
0x4003c4b	    0x644833142528	                xor rdx, qword fs:[0x28]	      1899	prdbg.c	FUNCTION_54
0x4003c54	            0x7405	                            je 0x4003c5b	      1899	prdbg.c	FUNCTION_54
0x4003c56	      0xe800000000	                          call 0x4003c5b	      1899	prdbg.c	FUNCTION_54
0x4003c5b	      0xb801000000	                              mov eax, 1	      1899	prdbg.c	FUNCTION_54
0x4003c60	        0x4883c428	                           add rsp, 0x28	      1899	prdbg.c	FUNCTION_54
0x4003c64	              0x5b	                                 pop rbx	      1899	prdbg.c	FUNCTION_54
0x4003c65	              0x5d	                                 pop rbp	      1899	prdbg.c	FUNCTION_54
0x4003c66	              0xc3	                                     ret	      1899	prdbg.c	FUNCTION_54
tg_end_struct_type	IF,0:WHILE,0:ELSE,0:CALL,1:FOR,0:functions,0:SWITCH,0:DO,0	10
0x4000398	      0x48837f1000	               cmp qword [rdi + 0x10], 0	      2103	prdbg.c	FUNCTION_64	CALL_1
0x400039d	            0x751d	                           jne 0x40003bc	      2103	prdbg.c	FUNCTION_64	CALL_1
0x400039f	        0x4883ec08	                              sub rsp, 8	      2102	prdbg.c	FUNCTION_64
0x40003a3	      0xb900000000	                              mov ecx, 0	      2103	prdbg.c	FUNCTION_64	CALL_1
0x40003a8	      0xba37080000	                          mov edx, 0x837	      2103	prdbg.c	FUNCTION_64	CALL_1
0x40003ad	      0xbe00000000	                              mov esi, 0	      2103	prdbg.c	FUNCTION_64	CALL_1
0x40003b2	      0xbf00000000	                              mov edi, 0	      2103	prdbg.c	FUNCTION_64	CALL_1
0x40003b7	      0xe800000000	                          call 0x40003bc	      2103	prdbg.c	FUNCTION_64	CALL_1
0x40003bc	      0xb801000000	                              mov eax, 1	      2106	prdbg.c	FUNCTION_64
0x40003c1	              0xc3	                                     ret	      2106	prdbg.c	FUNCTION_64
pr_offset_type	IF,2:WHILE,0:ELSE,0:CALL,6:FOR,0:functions,0:SWITCH,0:DO,0	39
0x4000b51	              0x55	                                push rbp	       899	prdbg.c	FUNCTION_26
0x4000b52	              0x53	                                push rbx	       899	prdbg.c	FUNCTION_26
0x4000b53	        0x4883ec08	                              sub rsp, 8	       899	prdbg.c	FUNCTION_26
0x4000b57	          0x4889fb	                            mov rbx, rdi	       899	prdbg.c	FUNCTION_26
0x4000b5a	      0xbe00000000	                              mov esi, 0	       903	prdbg.c	FUNCTION_26	IF_1	CALL_1
0x4000b5f	      0xe866faffff	                call sym.substitute_type	       903	prdbg.c	FUNCTION_26	IF_1	CALL_1
0x4000b64	            0x85c0	                           test eax, eax	       903	prdbg.c	FUNCTION_26	IF_1	CALL_1
0x4000b66	            0x745b	                            je 0x4000bc3	       903	prdbg.c	FUNCTION_26	IF_1	CALL_1
0x4000b68	          0x4889df	                            mov rdi, rbx	       906	prdbg.c	FUNCTION_26	CALL_2
0x4000b6b	      0xe815f6ffff	                       call sym.pop_type	       906	prdbg.c	FUNCTION_26	CALL_2
0x4000b70	          0x4889c5	                            mov rbp, rax	       906	prdbg.c	FUNCTION_26	CALL_2
0x4000b73	      0xb800000000	                              mov eax, 0	       908	prdbg.c	FUNCTION_26	IF_2
0x4000b78	          0x4885ed	                           test rbp, rbp	       907	prdbg.c	FUNCTION_26	IF_2
0x4000b7b	            0x7446	                            je 0x4000bc3	       907	prdbg.c	FUNCTION_26	IF_2
0x4000b7d	      0xbe00000000	                              mov esi, 0	       910	prdbg.c	FUNCTION_26	CALL_3
0x4000b82	          0x4889df	                            mov rdi, rbx	       910	prdbg.c	FUNCTION_26	CALL_3
0x4000b85	      0xe840faffff	                call sym.substitute_type	       910	prdbg.c	FUNCTION_26	CALL_3
0x4000b8a	            0x85c0	                           test eax, eax	       913	prdbg.c	FUNCTION_26	CALL_6
0x4000b8c	            0x7435	                            je 0x4000bc3	       913	prdbg.c	FUNCTION_26	CALL_6
0x4000b8e	      0xbe00000000	                              mov esi, 0	       911	prdbg.c	FUNCTION_26	CALL_4
0x4000b93	          0x4889df	                            mov rdi, rbx	       911	prdbg.c	FUNCTION_26	CALL_4
0x4000b96	      0xe8daf8ffff	                   call sym.prepend_type	       911	prdbg.c	FUNCTION_26	CALL_4
0x4000b9b	            0x85c0	                           test eax, eax	       911	prdbg.c	FUNCTION_26	CALL_4
0x4000b9d	            0x7424	                            je 0x4000bc3	       911	prdbg.c	FUNCTION_26	CALL_4
0x4000b9f	          0x4889ee	                            mov rsi, rbp	       912	prdbg.c	FUNCTION_26	CALL_5
0x4000ba2	          0x4889df	                            mov rdi, rbx	       912	prdbg.c	FUNCTION_26	CALL_5
0x4000ba5	      0xe8cbf8ffff	                   call sym.prepend_type	       912	prdbg.c	FUNCTION_26	CALL_5
0x4000baa	            0x85c0	                           test eax, eax	       912	prdbg.c	FUNCTION_26	CALL_5
0x4000bac	            0x7415	                            je 0x4000bc3	       912	prdbg.c	FUNCTION_26	CALL_5
0x4000bae	      0xbe00000000	                              mov esi, 0	       913	prdbg.c	FUNCTION_26	CALL_6
0x4000bb3	          0x4889df	                            mov rdi, rbx	       913	prdbg.c	FUNCTION_26	CALL_6
0x4000bb6	      0xe86cf9ffff	                    call sym.append_type	       913	prdbg.c	FUNCTION_26	CALL_6
0x4000bbb	            0x85c0	                           test eax, eax	       904	prdbg.c	FUNCTION_26	IF_1
0x4000bbd	           0xf95c0	                                setne al	       904	prdbg.c	FUNCTION_26	IF_1
0x4000bc0	           0xfb6c0	                           movzx eax, al	       904	prdbg.c	FUNCTION_26	IF_1
0x4000bc3	        0x4883c408	                              add rsp, 8	       914	prdbg.c	FUNCTION_26
0x4000bc7	              0x5b	                                 pop rbx	       914	prdbg.c	FUNCTION_26
0x4000bc8	              0x5d	                                 pop rbp	       914	prdbg.c	FUNCTION_26
0x4000bc9	              0xc3	                                     ret	       914	prdbg.c	FUNCTION_26
tg_typed_constant	IF,1:WHILE,0:ELSE,0:CALL,4:FOR,0:functions,0:SWITCH,0:DO,0	52
0x40038cf	            0x4156	                                push r14	      2569	prdbg.c	FUNCTION_76
0x40038d1	            0x4155	                                push r13	      2569	prdbg.c	FUNCTION_76
0x40038d3	            0x4154	                                push r12	      2569	prdbg.c	FUNCTION_76
0x40038d5	              0x55	                                push rbp	      2569	prdbg.c	FUNCTION_76
0x40038d6	              0x53	                                push rbx	      2569	prdbg.c	FUNCTION_76
0x40038d7	        0x4883ec20	                           sub rsp, 0x20	      2569	prdbg.c	FUNCTION_76
0x40038db	          0x4889fb	                            mov rbx, rdi	      2569	prdbg.c	FUNCTION_76
0x40038de	          0x4989f5	                            mov r13, rsi	      2569	prdbg.c	FUNCTION_76
0x40038e1	          0x4989d6	                            mov r14, rdx	      2569	prdbg.c	FUNCTION_76
0x40038e4	    0x64488b042528	                mov rax, qword fs:[0x28]	      2569	prdbg.c	FUNCTION_76
0x40038ed	      0x4889442418	             mov qword [rsp + 0x18], rax	      2569	prdbg.c	FUNCTION_76
0x40038f2	            0x31c0	                            xor eax, eax	      2569	prdbg.c	FUNCTION_76
0x40038f4	      0xe88cc8ffff	                       call sym.pop_type	      2574	prdbg.c	FUNCTION_76	CALL_1
0x40038f9	          0x4889c5	                            mov rbp, rax	      2574	prdbg.c	FUNCTION_76	CALL_1
0x40038fc	      0xb800000000	                              mov eax, 0	      2576	prdbg.c	FUNCTION_76	IF_1
0x4003901	          0x4885ed	                           test rbp, rbp	      2575	prdbg.c	FUNCTION_76	IF_1
0x4003904	            0x7462	                            je 0x4003968	      2575	prdbg.c	FUNCTION_76	IF_1
0x4003906	          0x4889df	                            mov rdi, rbx	      2578	prdbg.c	FUNCTION_76	CALL_2
0x4003909	      0xe8bbc7ffff	                         call sym.indent	      2578	prdbg.c	FUNCTION_76	CALL_2
0x400390e	          0x4989e4	                            mov r12, rsp	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003911	          0x4d89f0	                             mov r8, r14	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003914	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003919	      0xba16000000	                           mov edx, 0x16	        33	stdio2.h	FUNCTION_84	CALL_1
0x400391e	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003923	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003926	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x400392b	      0xe800000000	                          call 0x4003930	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003930	        0x4883ec08	                              sub rsp, 8	        97	stdio2.h	CALL_93
0x4003934	            0x4154	                                push r12	        97	stdio2.h	CALL_93
0x4003936	          0x4989e9	                             mov r9, rbp	        97	stdio2.h	CALL_93
0x4003939	        0x4c8b4320	              mov r8, qword [rbx + 0x20]	        97	stdio2.h	CALL_93
0x400393d	          0x4c89e9	                            mov rcx, r13	        97	stdio2.h	CALL_93
0x4003940	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_93
0x4003945	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_93
0x400394a	          0x488b3b	                    mov rdi, qword [rbx]	        97	stdio2.h	CALL_93
0x400394d	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_93
0x4003952	      0xe800000000	                          call 0x4003957	        97	stdio2.h	CALL_93
0x4003957	          0x4889ef	                            mov rdi, rbp	      2583	prdbg.c	FUNCTION_76	CALL_4
0x400395a	      0xe800000000	                          call 0x400395f	      2583	prdbg.c	FUNCTION_76	CALL_4
0x400395f	        0x4883c410	                           add rsp, 0x10	      2585	prdbg.c	FUNCTION_76
0x4003963	      0xb801000000	                              mov eax, 1	      2585	prdbg.c	FUNCTION_76
0x4003968	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      2586	prdbg.c	FUNCTION_76
0x400396d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2586	prdbg.c	FUNCTION_76
0x4003976	            0x7405	                            je 0x400397d	      2586	prdbg.c	FUNCTION_76
0x4003978	      0xe800000000	                          call 0x400397d	      2586	prdbg.c	FUNCTION_76
0x400397d	        0x4883c420	                           add rsp, 0x20	      2586	prdbg.c	FUNCTION_76
0x4003981	              0x5b	                                 pop rbx	      2586	prdbg.c	FUNCTION_76
0x4003982	              0x5d	                                 pop rbp	      2586	prdbg.c	FUNCTION_76
0x4003983	            0x415c	                                 pop r12	      2586	prdbg.c	FUNCTION_76
0x4003985	            0x415d	                                 pop r13	      2586	prdbg.c	FUNCTION_76
0x4003987	            0x415e	                                 pop r14	      2586	prdbg.c	FUNCTION_76
0x4003989	              0xc3	                                     ret	      2586	prdbg.c	FUNCTION_76
pr_int_type	IF,0:WHILE,0:ELSE,0:CALL,1:FOR,0:functions,0:SWITCH,0:DO,0	27
0x400195e	              0x53	                                push rbx	       582	prdbg.c	FUNCTION_15
0x400195f	        0x4883ec30	                           sub rsp, 0x30	       582	prdbg.c	FUNCTION_15
0x4001963	          0x4889fb	                            mov rbx, rdi	       582	prdbg.c	FUNCTION_15
0x4001966	    0x64488b042528	                mov rax, qword fs:[0x28]	       582	prdbg.c	FUNCTION_15
0x400196f	      0x4889442428	             mov qword [rsp + 0x28], rax	       582	prdbg.c	FUNCTION_15
0x4001974	            0x31c0	                            xor eax, eax	       582	prdbg.c	FUNCTION_15
0x4001976	            0x85d2	                           test edx, edx	       586	prdbg.c	FUNCTION_15
0x4001978	    0x41b800000000	                              mov r8d, 0	       586	prdbg.c	FUNCTION_15
0x400197e	      0xb800000000	                              mov eax, 0	       586	prdbg.c	FUNCTION_15
0x4001983	        0x4c0f45c0	                          cmovne r8, rax	       586	prdbg.c	FUNCTION_15
0x4001987	    0x448d0cf50000	                        lea r9d, [rsi*8]	        33	stdio2.h	FUNCTION_84	CALL_1
0x400198f	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x4001994	      0xba28000000	                           mov edx, 0x28	        33	stdio2.h	FUNCTION_84	CALL_1
0x4001999	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_84	CALL_1
0x400199e	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_84	CALL_1
0x40019a1	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x40019a6	      0xe800000000	                          call 0x40019ab	        33	stdio2.h	FUNCTION_84	CALL_1
0x40019ab	          0x4889e6	                            mov rsi, rsp	       587	prdbg.c	FUNCTION_15	CALL_1
0x40019ae	          0x4889df	                            mov rdi, rbx	       587	prdbg.c	FUNCTION_15	CALL_1
0x40019b1	      0xe8daf8ffff	                      call sym.push_type	       587	prdbg.c	FUNCTION_15	CALL_1
0x40019b6	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       588	prdbg.c	FUNCTION_15
0x40019bb	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       588	prdbg.c	FUNCTION_15
0x40019c4	            0x7405	                            je 0x40019cb	       588	prdbg.c	FUNCTION_15
0x40019c6	      0xe800000000	                          call 0x40019cb	       588	prdbg.c	FUNCTION_15
0x40019cb	        0x4883c430	                           add rsp, 0x30	       588	prdbg.c	FUNCTION_15
0x40019cf	              0x5b	                                 pop rbx	       588	prdbg.c	FUNCTION_15
0x40019d0	              0xc3	                                     ret	       588	prdbg.c	FUNCTION_15
tg_start_compilation_unit	IF,0:WHILE,0:ELSE,0:CALL,2:FOR,0:functions,0:SWITCH,0:DO,0	15
0x4002876	              0x55	                                push rbp	      1963	prdbg.c	FUNCTION_58
0x4002877	              0x53	                                push rbx	      1963	prdbg.c	FUNCTION_58
0x4002878	        0x4883ec08	                              sub rsp, 8	      1963	prdbg.c	FUNCTION_58
0x400287c	          0x4889fb	                            mov rbx, rdi	      1963	prdbg.c	FUNCTION_58
0x400287f	          0x4889f5	                            mov rbp, rsi	      1963	prdbg.c	FUNCTION_58
0x4002882	        0x488b7f20	            mov rdi, qword [rdi + 0x20] 	      1966	prdbg.c	FUNCTION_58	CALL_1
0x4002886	      0xe800000000	                          call 0x400288b	      1966	prdbg.c	FUNCTION_58	CALL_1
0x400288b	          0x4889ef	                            mov rdi, rbp	      1968	prdbg.c	FUNCTION_58	CALL_2
0x400288e	      0xe800000000	                          call 0x4002893	      1968	prdbg.c	FUNCTION_58	CALL_2
0x4002893	        0x48894320	             mov qword [rbx + 0x20], rax	      1968	prdbg.c	FUNCTION_58	CALL_2
0x4002897	      0xb801000000	                              mov eax, 1	      1971	prdbg.c	FUNCTION_58
0x400289c	        0x4883c408	                              add rsp, 8	      1971	prdbg.c	FUNCTION_58
0x40028a0	              0x5b	                                 pop rbx	      1971	prdbg.c	FUNCTION_58
0x40028a1	              0x5d	                                 pop rbp	      1971	prdbg.c	FUNCTION_58
0x40028a2	              0xc3	                                     ret	      1971	prdbg.c	FUNCTION_58
pr_class_baseclass	IF,12:WHILE,0:ELSE,0:CALL,23:FOR,1:functions,0:SWITCH,1:DO,0	183
0x4002ca9	            0x4156	                                push r14	      1334	prdbg.c	FUNCTION_36
0x4002cab	            0x4155	                                push r13	      1334	prdbg.c	FUNCTION_36
0x4002cad	            0x4154	                                push r12	      1334	prdbg.c	FUNCTION_36
0x4002caf	              0x55	                                push rbp	      1334	prdbg.c	FUNCTION_36
0x4002cb0	              0x53	                                push rbx	      1334	prdbg.c	FUNCTION_36
0x4002cb1	        0x4883ec20	                           sub rsp, 0x20	      1334	prdbg.c	FUNCTION_36
0x4002cb5	    0x64488b042528	                mov rax, qword fs:[0x28]	      1334	prdbg.c	FUNCTION_36
0x4002cbe	      0x4889442418	             mov qword [rsp + 0x18], rax	      1334	prdbg.c	FUNCTION_36
0x4002cc3	            0x31c0	                            xor eax, eax	      1334	prdbg.c	FUNCTION_36
0x4002cc5	        0x488b4710	            mov rax, qword [rdi + 0x10] 	      1341	prdbg.c	FUNCTION_36	CALL_1
0x4002cc9	          0x4885c0	                           test rax, rax	      1341	prdbg.c	FUNCTION_36	CALL_1
0x4002ccc	            0x7411	                            je 0x4002cdf	      1341	prdbg.c	FUNCTION_36	CALL_1
0x4002cce	          0x4889fb	                            mov rbx, rdi	      1341	prdbg.c	FUNCTION_36	CALL_1
0x4002cd1	          0x4989f5	                            mov r13, rsi	      1341	prdbg.c	FUNCTION_36	CALL_1
0x4002cd4	          0x4189d4	                           mov r12d, edx	      1341	prdbg.c	FUNCTION_36	CALL_1
0x4002cd7	            0x89cd	                            mov ebp, ecx	      1341	prdbg.c	FUNCTION_36	CALL_1
0x4002cd9	        0x48833800	                      cmp qword [rax], 0	      1341	prdbg.c	FUNCTION_36	CALL_1
0x4002cdd	            0x7519	                           jne 0x4002cf8	      1341	prdbg.c	FUNCTION_36	CALL_1
0x4002cdf	      0xb900000000	                              mov ecx, 0	      1341	prdbg.c	FUNCTION_36	CALL_1
0x4002ce4	      0xba3d050000	                          mov edx, 0x53d	      1341	prdbg.c	FUNCTION_36	CALL_1
0x4002ce9	      0xbe00000000	                              mov esi, 0	      1341	prdbg.c	FUNCTION_36	CALL_1
0x4002cee	      0xbf00000000	                              mov edi, 0	      1341	prdbg.c	FUNCTION_36	CALL_1
0x4002cf3	      0xe800000000	                          call 0x4002cf8	      1341	prdbg.c	FUNCTION_36	CALL_1
0x4002cf8	      0xbe00000000	                              mov esi, 0	      1343	prdbg.c	FUNCTION_36	IF_1	CALL_2
0x4002cfd	      0xe8c8d8ffff	                call sym.substitute_type	      1343	prdbg.c	FUNCTION_36	IF_1	CALL_2
0x4002d02	            0x85c0	                           test eax, eax	      1343	prdbg.c	FUNCTION_36	IF_1	CALL_2
0x4002d04	     0xf8423020000	                            je 0x4002f2d	      1343	prdbg.c	FUNCTION_36	IF_1	CALL_2
0x4002d0a	          0x4889df	                            mov rdi, rbx	      1346	prdbg.c	FUNCTION_36	CALL_3
0x4002d0d	      0xe873d4ffff	                       call sym.pop_type	      1346	prdbg.c	FUNCTION_36	CALL_3
0x4002d12	          0x4885c0	                           test rax, rax	      1347	prdbg.c	FUNCTION_36	IF_2
0x4002d15	     0xf840d020000	                            je 0x4002f28	      1347	prdbg.c	FUNCTION_36	IF_2
0x4002d1b	      0xbf00000000	                              mov edi, 0	      1350	prdbg.c	FUNCTION_36	IF_3	CALL_4
0x4002d20	      0xb906000000	                              mov ecx, 6	      1350	prdbg.c	FUNCTION_36	IF_3	CALL_4
0x4002d25	          0x4889c6	                            mov rsi, rax	      1350	prdbg.c	FUNCTION_36	IF_3	CALL_4
0x4002d28	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1350	prdbg.c	FUNCTION_36	IF_3	CALL_4
0x4002d2a	           0xf97c2	                                 seta dl	      1350	prdbg.c	FUNCTION_36	IF_3	CALL_4
0x4002d2d	           0xf92c1	                                 setb cl	      1350	prdbg.c	FUNCTION_36	IF_3	CALL_4
0x4002d30	            0x29ca	                            sub edx, ecx	      1350	prdbg.c	FUNCTION_36	IF_3	CALL_4
0x4002d32	           0xfbed2	                           movsx edx, dl	      1350	prdbg.c	FUNCTION_36	IF_3	CALL_4
0x4002d35	        0x488d4806	                      lea rcx, [rax + 6]	      1351	prdbg.c	FUNCTION_36	IF_3
0x4002d39	            0x85d2	                           test edx, edx	      1351	prdbg.c	FUNCTION_36	IF_3
0x4002d3b	        0x480f44c1	                          cmove rax, rcx	      1351	prdbg.c	FUNCTION_36	IF_3
0x4002d3f	          0x4889c6	                            mov rsi, rax	      1355	prdbg.c	FUNCTION_36	IF_4	CALL_5
0x4002d42	          0x4889df	                            mov rdi, rbx	      1355	prdbg.c	FUNCTION_36	IF_4	CALL_5
0x4002d45	      0xe846e5ffff	                      call sym.push_type	      1355	prdbg.c	FUNCTION_36	IF_4	CALL_5
0x4002d4a	            0x85c0	                           test eax, eax	      1355	prdbg.c	FUNCTION_36	IF_4	CALL_5
0x4002d4c	     0xf84db010000	                            je 0x4002f2d	      1355	prdbg.c	FUNCTION_36	IF_4	CALL_5
0x4002d52	          0x4585e4	                         test r12d, r12d	      1358	prdbg.c	FUNCTION_36	IF_5
0x4002d55	            0x7415	                            je 0x4002d6c	      1358	prdbg.c	FUNCTION_36	IF_5
0x4002d57	      0xbe00000000	                              mov esi, 0	      1360	prdbg.c	FUNCTION_36	IF_5	IF_6	CALL_6
0x4002d5c	          0x4889df	                            mov rdi, rbx	      1360	prdbg.c	FUNCTION_36	IF_5	IF_6	CALL_6
0x4002d5f	      0xe811d7ffff	                   call sym.prepend_type	      1360	prdbg.c	FUNCTION_36	IF_5	IF_6	CALL_6
0x4002d64	            0x85c0	                           test eax, eax	      1360	prdbg.c	FUNCTION_36	IF_5	IF_6	CALL_6
0x4002d66	     0xf84c1010000	                            je 0x4002f2d	      1360	prdbg.c	FUNCTION_36	IF_5	IF_6	CALL_6
0x4002d6c	      0xbe00000000	                              mov esi, 0	      1370	prdbg.c	FUNCTION_36	SWITCH_1
0x4002d71	          0x83fd01	                              cmp ebp, 1	      1364	prdbg.c	FUNCTION_36	SWITCH_1
0x4002d74	            0x741b	                            je 0x4002d91	      1364	prdbg.c	FUNCTION_36	SWITCH_1
0x4002d76	      0xbe00000000	                              mov esi, 0	      1367	prdbg.c	FUNCTION_36	SWITCH_1
0x4002d7b	          0x83fd01	                              cmp ebp, 1	      1364	prdbg.c	FUNCTION_36	SWITCH_1
0x4002d7e	            0x7211	                            jb 0x4002d91	      1364	prdbg.c	FUNCTION_36	SWITCH_1
0x4002d80	          0x83fd02	                              cmp ebp, 2	      1376	prdbg.c	FUNCTION_36	SWITCH_1
0x4002d83	      0xbe00000000	                              mov esi, 0	      1376	prdbg.c	FUNCTION_36	SWITCH_1
0x4002d88	      0xb800000000	                              mov eax, 0	      1376	prdbg.c	FUNCTION_36	SWITCH_1
0x4002d8d	        0x480f44f0	                          cmove rsi, rax	      1376	prdbg.c	FUNCTION_36	SWITCH_1
0x4002d91	          0x4889df	                            mov rdi, rbx	      1380	prdbg.c	FUNCTION_36	IF_7	CALL_7
0x4002d94	      0xe8dcd6ffff	                   call sym.prepend_type	      1380	prdbg.c	FUNCTION_36	IF_7	CALL_7
0x4002d99	            0x85c0	                           test eax, eax	      1380	prdbg.c	FUNCTION_36	IF_7	CALL_7
0x4002d9b	     0xf848c010000	                            je 0x4002f2d	      1380	prdbg.c	FUNCTION_36	IF_7	CALL_7
0x4002da1	          0x4d85ed	                           test r13, r13	      1383	prdbg.c	FUNCTION_36	IF_8
0x4002da4	            0x745c	                            je 0x4002e02	      1383	prdbg.c	FUNCTION_36	IF_8
0x4002da6	          0x4d89e8	                             mov r8, r13	        33	stdio2.h	FUNCTION_84	CALL_1
0x4002da9	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x4002dae	      0xba16000000	                           mov edx, 0x16	        33	stdio2.h	FUNCTION_84	CALL_1
0x4002db3	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_84	CALL_1
0x4002db8	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_84	CALL_1
0x4002dbb	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x4002dc0	      0xe800000000	                          call 0x4002dc5	        33	stdio2.h	FUNCTION_84	CALL_1
0x4002dc5	      0xbe00000000	                              mov esi, 0	      1386	prdbg.c	FUNCTION_36	IF_8	IF_9	CALL_9
0x4002dca	          0x4889df	                            mov rdi, rbx	      1386	prdbg.c	FUNCTION_36	IF_8	IF_9	CALL_9
0x4002dcd	      0xe855d7ffff	                    call sym.append_type	      1386	prdbg.c	FUNCTION_36	IF_8	IF_9	CALL_9
0x4002dd2	            0x85c0	                           test eax, eax	      1386	prdbg.c	FUNCTION_36	IF_8	IF_9	CALL_9
0x4002dd4	     0xf8453010000	                            je 0x4002f2d	      1386	prdbg.c	FUNCTION_36	IF_8	IF_9	CALL_9
0x4002dda	          0x4889e6	                            mov rsi, rsp	      1387	prdbg.c	FUNCTION_36	IF_8	IF_9	CALL_10
0x4002ddd	          0x4889df	                            mov rdi, rbx	      1387	prdbg.c	FUNCTION_36	IF_8	IF_9	CALL_10
0x4002de0	      0xe842d7ffff	                    call sym.append_type	      1387	prdbg.c	FUNCTION_36	IF_8	IF_9	CALL_10
0x4002de5	            0x85c0	                           test eax, eax	      1387	prdbg.c	FUNCTION_36	IF_8	IF_9	CALL_10
0x4002de7	     0xf8440010000	                            je 0x4002f2d	      1387	prdbg.c	FUNCTION_36	IF_8	IF_9	CALL_10
0x4002ded	      0xbe00000000	                              mov esi, 0	      1388	prdbg.c	FUNCTION_36	IF_8	IF_9	CALL_11
0x4002df2	          0x4889df	                            mov rdi, rbx	      1388	prdbg.c	FUNCTION_36	IF_8	IF_9	CALL_11
0x4002df5	      0xe82dd7ffff	                    call sym.append_type	      1388	prdbg.c	FUNCTION_36	IF_8	IF_9	CALL_11
0x4002dfa	            0x85c0	                           test eax, eax	      1388	prdbg.c	FUNCTION_36	IF_8	IF_9	CALL_11
0x4002dfc	     0xf842b010000	                            je 0x4002f2d	      1388	prdbg.c	FUNCTION_36	IF_8	IF_9	CALL_11
0x4002e02	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1396	prdbg.c	FUNCTION_36	CALL_12
0x4002e06	          0x488b00	                    mov rax, qword [rax]	      1396	prdbg.c	FUNCTION_36	CALL_12
0x4002e09	        0x488b6808	                mov rbp, qword [rax + 8]	      1396	prdbg.c	FUNCTION_36	CALL_12
0x4002e0d	      0xbe7b000000	                           mov esi, 0x7b	      1396	prdbg.c	FUNCTION_36	CALL_12
0x4002e12	          0x4889ef	                            mov rdi, rbp	      1396	prdbg.c	FUNCTION_36	CALL_12
0x4002e15	      0xe800000000	                          call 0x4002e1a	      1396	prdbg.c	FUNCTION_36	CALL_12
0x4002e1a	          0x4885c0	                           test rax, rax	      1397	prdbg.c	FUNCTION_36	CALL_13
0x4002e1d	            0x7519	                           jne 0x4002e38	      1397	prdbg.c	FUNCTION_36	CALL_13
0x4002e1f	      0xb900000000	                              mov ecx, 0	      1397	prdbg.c	FUNCTION_36	CALL_13
0x4002e24	      0xba75050000	                          mov edx, 0x575	      1397	prdbg.c	FUNCTION_36	CALL_13
0x4002e29	      0xbe00000000	                              mov esi, 0	      1397	prdbg.c	FUNCTION_36	CALL_13
0x4002e2e	      0xbf00000000	                              mov edi, 0	      1397	prdbg.c	FUNCTION_36	CALL_13
0x4002e33	      0xe800000000	                          call 0x4002e38	      1397	prdbg.c	FUNCTION_36	CALL_13
0x4002e38	        0x4c8d60ff	                      lea r12, [rax - 1]	      1398	prdbg.c	FUNCTION_36
0x4002e3c	          0x4c39e5	                            cmp rbp, r12	      1402	prdbg.c	FUNCTION_36	FOR_1
0x4002e3f	            0x741e	                            je 0x4002e5f	      1402	prdbg.c	FUNCTION_36	FOR_1
0x4002e41	        0x807d003a	                    cmp byte [rbp], 0x3a	      1403	prdbg.c	FUNCTION_36	FOR_1	IF_10
0x4002e45	            0x7508	                           jne 0x4002e4f	      1403	prdbg.c	FUNCTION_36	FOR_1	IF_10
0x4002e47	            0xeb1d	                           jmp 0x4002e66	      1403	prdbg.c	FUNCTION_36	FOR_1	IF_10
0x4002e49	        0x807d003a	                    cmp byte [rbp], 0x3a	      1403	prdbg.c	FUNCTION_36	FOR_1	IF_10
0x4002e4d	            0x741e	                            je 0x4002e6d	      1403	prdbg.c	FUNCTION_36	FOR_1	IF_10
0x4002e4f	        0x4883c501	                              add rbp, 1	      1402	prdbg.c	FUNCTION_36	FOR_1
0x4002e53	          0x4939ec	                            cmp r12, rbp	      1402	prdbg.c	FUNCTION_36	FOR_1
0x4002e56	            0x75f1	                           jne 0x4002e49	      1402	prdbg.c	FUNCTION_36	FOR_1
0x4002e58	      0xbe00000000	                              mov esi, 0	      1405	prdbg.c	FUNCTION_36	IF_11	CALL_14
0x4002e5d	            0xeb13	                           jmp 0x4002e72	      1405	prdbg.c	FUNCTION_36	IF_11	CALL_14
0x4002e5f	      0xbe00000000	                              mov esi, 0	      1405	prdbg.c	FUNCTION_36	IF_11	CALL_14
0x4002e64	            0xeb0c	                           jmp 0x4002e72	      1405	prdbg.c	FUNCTION_36	IF_11	CALL_14
0x4002e66	      0xbe00000000	                              mov esi, 0	      1405	prdbg.c	FUNCTION_36	IF_11	CALL_14
0x4002e6b	            0xeb05	                           jmp 0x4002e72	      1405	prdbg.c	FUNCTION_36	IF_11	CALL_14
0x4002e6d	      0xbe00000000	                              mov esi, 0	      1405	prdbg.c	FUNCTION_36	IF_11	CALL_14
0x4002e72	          0x4889df	                            mov rdi, rbx	      1405	prdbg.c	FUNCTION_36	IF_11	CALL_14
0x4002e75	      0xe8fbd5ffff	                   call sym.prepend_type	      1405	prdbg.c	FUNCTION_36	IF_11	CALL_14
0x4002e7a	            0x85c0	                           test eax, eax	      1405	prdbg.c	FUNCTION_36	IF_11	CALL_14
0x4002e7c	     0xf84ab000000	                            je 0x4002f2d	      1405	prdbg.c	FUNCTION_36	IF_11	CALL_14
0x4002e82	          0x4889df	                            mov rdi, rbx	      1408	prdbg.c	FUNCTION_36	CALL_15
0x4002e85	      0xe8fbd2ffff	                       call sym.pop_type	      1408	prdbg.c	FUNCTION_36	CALL_15
0x4002e8a	          0x4889c5	                            mov rbp, rax	      1408	prdbg.c	FUNCTION_36	CALL_15
0x4002e8d	      0xb800000000	                              mov eax, 0	      1410	prdbg.c	FUNCTION_36	IF_12
0x4002e92	          0x4885ed	                           test rbp, rbp	      1409	prdbg.c	FUNCTION_36	IF_12
0x4002e95	     0xf8492000000	                            je 0x4002f2d	      1409	prdbg.c	FUNCTION_36	IF_12
0x4002e9b	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1412	prdbg.c	FUNCTION_36	CALL_18
0x4002e9f	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	      1412	prdbg.c	FUNCTION_36	CALL_18
0x4002ea6	        0x488b7808	                mov rdi, qword [rax + 8]	      1412	prdbg.c	FUNCTION_36	CALL_18
0x4002eaa	      0xb800000000	                              mov eax, 0	      1412	prdbg.c	FUNCTION_36	CALL_18
0x4002eaf	          0x4889f1	                            mov rcx, rsi	      1412	prdbg.c	FUNCTION_36	CALL_18
0x4002eb2	            0xf2ae	              repne scasb al, byte [rdi]	      1412	prdbg.c	FUNCTION_36	CALL_18
0x4002eb4	          0x48f7d1	                                 not rcx	      1412	prdbg.c	FUNCTION_36	CALL_18
0x4002eb7	          0x4889ca	                            mov rdx, rcx	      1412	prdbg.c	FUNCTION_36	CALL_18
0x4002eba	          0x4889f1	                            mov rcx, rsi	      1412	prdbg.c	FUNCTION_36	CALL_18
0x4002ebd	          0x4889ef	                            mov rdi, rbp	      1412	prdbg.c	FUNCTION_36	CALL_18
0x4002ec0	            0xf2ae	              repne scasb al, byte [rdi]	      1412	prdbg.c	FUNCTION_36	CALL_18
0x4002ec2	          0x4889c8	                            mov rax, rcx	      1412	prdbg.c	FUNCTION_36	CALL_18
0x4002ec5	          0x48f7d0	                                 not rax	      1412	prdbg.c	FUNCTION_36	CALL_18
0x4002ec8	      0x488d7c02ff	                lea rdi, [rdx + rax - 1]	      1412	prdbg.c	FUNCTION_36	CALL_18
0x4002ecd	      0xe800000000	                          call 0x4002ed2	      1412	prdbg.c	FUNCTION_36	CALL_18
0x4002ed2	          0x4989c5	                            mov r13, rax	      1412	prdbg.c	FUNCTION_36	CALL_18
0x4002ed5	        0x4c8b7310	            mov r14, qword [rbx + 0x10] 	      1413	prdbg.c	FUNCTION_36	CALL_19
0x4002ed9	        0x498b7608	                mov rsi, qword [r14 + 8]	      1413	prdbg.c	FUNCTION_36	CALL_19
0x4002edd	          0x4c89e2	                            mov rdx, r12	        53	string3.h	FUNCTION_101	CALL_3
0x4002ee0	          0x4829f2	                            sub rdx, rsi	        53	string3.h	FUNCTION_101	CALL_3
0x4002ee3	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_101	CALL_3
0x4002ee6	      0xe800000000	                          call 0x4002eeb	        53	string3.h	FUNCTION_101	CALL_3
0x4002eeb	          0x4c89e7	                            mov rdi, r12	       110	string3.h	FUNCTION_107	CALL_3
0x4002eee	        0x492b7e08	                sub rdi, qword [r14 + 8]	       110	string3.h	FUNCTION_107	CALL_3
0x4002ef2	          0x4c01ef	                            add rdi, r13	       110	string3.h	FUNCTION_107	CALL_3
0x4002ef5	          0x4889ee	                            mov rsi, rbp	       110	string3.h	FUNCTION_107	CALL_3
0x4002ef8	      0xe800000000	                          call 0x4002efd	       110	string3.h	FUNCTION_107	CALL_3
0x4002efd	          0x4c89e6	                            mov rsi, r12	       148	string3.h	FUNCTION_111	CALL_3
0x4002f00	          0x4c89ef	                            mov rdi, r13	       148	string3.h	FUNCTION_111	CALL_3
0x4002f03	      0xe800000000	                          call 0x4002f08	       148	string3.h	FUNCTION_111	CALL_3
0x4002f08	        0x498b7e08	                mov rdi, qword [r14 + 8]	      1417	prdbg.c	FUNCTION_36	CALL_22
0x4002f0c	      0xe800000000	                          call 0x4002f11	      1417	prdbg.c	FUNCTION_36	CALL_22
0x4002f11	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1418	prdbg.c	FUNCTION_36
0x4002f15	        0x4c896808	                mov qword [rax + 8], r13	      1418	prdbg.c	FUNCTION_36
0x4002f19	          0x4889ef	                            mov rdi, rbp	      1420	prdbg.c	FUNCTION_36	CALL_23
0x4002f1c	      0xe800000000	                          call 0x4002f21	      1420	prdbg.c	FUNCTION_36	CALL_23
0x4002f21	      0xb801000000	                              mov eax, 1	      1422	prdbg.c	FUNCTION_36
0x4002f26	            0xeb05	                           jmp 0x4002f2d	      1422	prdbg.c	FUNCTION_36
0x4002f28	      0xb800000000	                              mov eax, 0	      1348	prdbg.c	FUNCTION_36	IF_2
0x4002f2d	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      1423	prdbg.c	FUNCTION_36
0x4002f32	    0x644833142528	                xor rdx, qword fs:[0x28]	      1423	prdbg.c	FUNCTION_36
0x4002f3b	            0x7405	                            je 0x4002f42	      1423	prdbg.c	FUNCTION_36
0x4002f3d	      0xe800000000	                          call 0x4002f42	      1423	prdbg.c	FUNCTION_36
0x4002f42	        0x4883c420	                           add rsp, 0x20	      1423	prdbg.c	FUNCTION_36
0x4002f46	              0x5b	                                 pop rbx	      1423	prdbg.c	FUNCTION_36
0x4002f47	              0x5d	                                 pop rbp	      1423	prdbg.c	FUNCTION_36
0x4002f48	            0x415c	                                 pop r12	      1423	prdbg.c	FUNCTION_36
0x4002f4a	            0x415d	                                 pop r13	      1423	prdbg.c	FUNCTION_36
0x4002f4c	            0x415e	                                 pop r14	      1423	prdbg.c	FUNCTION_36
0x4002f4e	              0xc3	                                     ret	      1423	prdbg.c	FUNCTION_36
pr_start_class_type	IF,19:WHILE,0:ELSE,2:CALL,16:FOR,0:functions,0:SWITCH,0:DO,0	166
0x4001422	            0x4157	                                push r15	      1218	prdbg.c	FUNCTION_34
0x4001424	            0x4156	                                push r14	      1218	prdbg.c	FUNCTION_34
0x4001426	            0x4155	                                push r13	      1218	prdbg.c	FUNCTION_34
0x4001428	            0x4154	                                push r12	      1218	prdbg.c	FUNCTION_34
0x400142a	              0x55	                                push rbp	      1218	prdbg.c	FUNCTION_34
0x400142b	              0x53	                                push rbx	      1218	prdbg.c	FUNCTION_34
0x400142c	        0x4883ec48	                           sub rsp, 0x48	      1218	prdbg.c	FUNCTION_34
0x4001430	          0x4889fb	                            mov rbx, rdi	      1218	prdbg.c	FUNCTION_34
0x4001433	          0x4889f5	                            mov rbp, rsi	      1218	prdbg.c	FUNCTION_34
0x4001436	        0x89542404	                mov dword [rsp + 4], edx	      1218	prdbg.c	FUNCTION_34
0x400143a	          0x4189cd	                           mov r13d, ecx	      1218	prdbg.c	FUNCTION_34
0x400143d	          0x4589c7	                           mov r15d, r8d	      1218	prdbg.c	FUNCTION_34
0x4001440	          0x4589cc	                           mov r12d, r9d	      1218	prdbg.c	FUNCTION_34
0x4001443	    0x64488b042528	                mov rax, qword fs:[0x28]	      1218	prdbg.c	FUNCTION_34
0x400144c	      0x4889442438	             mov qword [rsp + 0x38], rax	      1218	prdbg.c	FUNCTION_34
0x4001451	            0x31c0	                            xor eax, eax	      1218	prdbg.c	FUNCTION_34
0x4001453	        0x83470802	                  add dword [rdi + 8], 2	      1222	prdbg.c	FUNCTION_34
0x4001457	          0x4585c9	                           test r9d, r9d	      1224	prdbg.c	FUNCTION_34	IF_1
0x400145a	        0x410f95c6	                              setne r14b	      1224	prdbg.c	FUNCTION_34	IF_1
0x400145e	    0x83bc24800000	               cmp dword [rsp + 0x80], 0	      1224	prdbg.c	FUNCTION_34	IF_1
0x4001466	            0x7519	                           jne 0x4001481	      1224	prdbg.c	FUNCTION_34	IF_1
0x4001468	          0x4584f6	                         test r14b, r14b	      1224	prdbg.c	FUNCTION_34	IF_1
0x400146b	            0x7414	                            je 0x4001481	      1224	prdbg.c	FUNCTION_34	IF_1
0x400146d	      0xe813edffff	                       call sym.pop_type	      1226	prdbg.c	FUNCTION_34	IF_1	CALL_1
0x4001472	      0x4889442408	                mov qword [rsp + 8], rax	      1226	prdbg.c	FUNCTION_34	IF_1	CALL_1
0x4001477	          0x4885c0	                           test rax, rax	      1227	prdbg.c	FUNCTION_34	IF_1	IF_2
0x400147a	            0x750e	                           jne 0x400148a	      1227	prdbg.c	FUNCTION_34	IF_1	IF_2
0x400147c	      0xe9ec010000	                           jmp 0x400166d	      1227	prdbg.c	FUNCTION_34	IF_1	IF_2
0x4001481	    0x48c744240800	                  mov qword [rsp + 8], 0	      1220	prdbg.c	FUNCTION_34
0x400148a	          0x4585ed	                         test r13d, r13d	      1231	prdbg.c	FUNCTION_34	IF_3	CALL_2
0x400148d	      0xbe00000000	                              mov esi, 0	      1231	prdbg.c	FUNCTION_34	IF_3	CALL_2
0x4001492	      0xb800000000	                              mov eax, 0	      1231	prdbg.c	FUNCTION_34	IF_3	CALL_2
0x4001497	        0x480f45f0	                         cmovne rsi, rax	      1231	prdbg.c	FUNCTION_34	IF_3	CALL_2
0x400149b	          0x4889df	                            mov rdi, rbx	      1231	prdbg.c	FUNCTION_34	IF_3	CALL_2
0x400149e	      0xe8edfdffff	                      call sym.push_type	      1231	prdbg.c	FUNCTION_34	IF_3	CALL_2
0x40014a3	            0x85c0	                           test eax, eax	      1231	prdbg.c	FUNCTION_34	IF_3	CALL_2
0x40014a5	     0xf84c7010000	                            je 0x4001672	      1231	prdbg.c	FUNCTION_34	IF_3	CALL_2
0x40014ab	          0x4885ed	                           test rbp, rbp	      1233	prdbg.c	FUNCTION_34	IF_4
0x40014ae	            0x7414	                            je 0x40014c4	      1233	prdbg.c	FUNCTION_34	IF_4
0x40014b0	          0x4889ee	                            mov rsi, rbp	      1235	prdbg.c	FUNCTION_34	IF_4	IF_5	CALL_3
0x40014b3	          0x4889df	                            mov rdi, rbx	      1235	prdbg.c	FUNCTION_34	IF_4	IF_5	CALL_3
0x40014b6	      0xe86cf0ffff	                    call sym.append_type	      1235	prdbg.c	FUNCTION_34	IF_4	IF_5	CALL_3
0x40014bb	            0x85c0	                           test eax, eax	      1235	prdbg.c	FUNCTION_34	IF_4	IF_5	CALL_3
0x40014bd	            0x753d	                           jne 0x40014fc	      1235	prdbg.c	FUNCTION_34	IF_4	IF_5	CALL_3
0x40014bf	      0xe9ae010000	                           jmp 0x4001672	      1235	prdbg.c	FUNCTION_34	IF_4	IF_5	CALL_3
0x40014c4	      0x448b442404	                mov r8d, dword [rsp + 4]	        33	stdio2.h	FUNCTION_84	CALL_1
0x40014c9	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x40014ce	      0xba14000000	                           mov edx, 0x14	        33	stdio2.h	FUNCTION_84	CALL_1
0x40014d3	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_84	CALL_1
0x40014d8	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	        33	stdio2.h	FUNCTION_84	CALL_1
0x40014dd	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x40014e2	      0xe800000000	                          call 0x40014e7	        33	stdio2.h	FUNCTION_84	CALL_1
0x40014e7	      0x488d742410	                   lea rsi, [rsp + 0x10]	      1243	prdbg.c	FUNCTION_34	ELSE_1	IF_6	CALL_4
0x40014ec	          0x4889df	                            mov rdi, rbx	      1243	prdbg.c	FUNCTION_34	ELSE_1	IF_6	CALL_4
0x40014ef	      0xe833f0ffff	                    call sym.append_type	      1243	prdbg.c	FUNCTION_34	ELSE_1	IF_6	CALL_4
0x40014f4	            0x85c0	                           test eax, eax	      1243	prdbg.c	FUNCTION_34	ELSE_1	IF_6	CALL_4
0x40014f6	     0xf8476010000	                            je 0x4001672	      1243	prdbg.c	FUNCTION_34	ELSE_1	IF_6	CALL_4
0x40014fc	      0xbe00000000	                              mov esi, 0	      1247	prdbg.c	FUNCTION_34	IF_7	CALL_5
0x4001501	          0x4889df	                            mov rdi, rbx	      1247	prdbg.c	FUNCTION_34	IF_7	CALL_5
0x4001504	      0xe81ef0ffff	                    call sym.append_type	      1247	prdbg.c	FUNCTION_34	IF_7	CALL_5
0x4001509	            0x85c0	                           test eax, eax	      1247	prdbg.c	FUNCTION_34	IF_7	CALL_5
0x400150b	     0xf8461010000	                            je 0x4001672	      1247	prdbg.c	FUNCTION_34	IF_7	CALL_5
0x4001511	          0x4585ff	                         test r15d, r15d	      1249	prdbg.c	FUNCTION_34	IF_8
0x4001514	            0x7518	                           jne 0x400152e	      1249	prdbg.c	FUNCTION_34	IF_8
0x4001516	          0x4584f6	                         test r14b, r14b	      1249	prdbg.c	FUNCTION_34	IF_8
0x4001519	            0x7513	                           jne 0x400152e	      1249	prdbg.c	FUNCTION_34	IF_8
0x400151b	    0x83bc24800000	               cmp dword [rsp + 0x80], 0	      1249	prdbg.c	FUNCTION_34	IF_8
0x4001523	            0x7509	                           jne 0x400152e	      1249	prdbg.c	FUNCTION_34	IF_8
0x4001525	          0x4885ed	                           test rbp, rbp	      1249	prdbg.c	FUNCTION_34	IF_8
0x4001528	     0xf8411010000	                            je 0x400163f	      1249	prdbg.c	FUNCTION_34	IF_8
0x400152e	      0xbe00000000	                              mov esi, 0	      1251	prdbg.c	FUNCTION_34	IF_8	IF_9	CALL_6
0x4001533	          0x4889df	                            mov rdi, rbx	      1251	prdbg.c	FUNCTION_34	IF_8	IF_9	CALL_6
0x4001536	      0xe8ecefffff	                    call sym.append_type	      1251	prdbg.c	FUNCTION_34	IF_8	IF_9	CALL_6
0x400153b	            0x85c0	                           test eax, eax	      1251	prdbg.c	FUNCTION_34	IF_8	IF_9	CALL_6
0x400153d	     0xf842f010000	                            je 0x4001672	      1251	prdbg.c	FUNCTION_34	IF_8	IF_9	CALL_6
0x4001543	          0x4585ff	                         test r15d, r15d	      1254	prdbg.c	FUNCTION_34	IF_8	IF_10
0x4001546	            0x744d	                            je 0x4001595	      1254	prdbg.c	FUNCTION_34	IF_8	IF_10
0x4001548	          0x4589f8	                           mov r8d, r15d	        33	stdio2.h	FUNCTION_84	CALL_1
0x400154b	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x4001550	      0xba14000000	                           mov edx, 0x14	        33	stdio2.h	FUNCTION_84	CALL_1
0x4001555	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_84	CALL_1
0x400155a	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	        33	stdio2.h	FUNCTION_84	CALL_1
0x400155f	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x4001564	      0xe800000000	                          call 0x4001569	        33	stdio2.h	FUNCTION_84	CALL_1
0x4001569	      0xbe00000000	                              mov esi, 0	      1259	prdbg.c	FUNCTION_34	IF_8	IF_10	IF_11	CALL_7
0x400156e	          0x4889df	                            mov rdi, rbx	      1259	prdbg.c	FUNCTION_34	IF_8	IF_10	IF_11	CALL_7
0x4001571	      0xe8b1efffff	                    call sym.append_type	      1259	prdbg.c	FUNCTION_34	IF_8	IF_10	IF_11	CALL_7
0x4001576	            0x85c0	                           test eax, eax	      1259	prdbg.c	FUNCTION_34	IF_8	IF_10	IF_11	CALL_7
0x4001578	            0x7411	                            je 0x400158b	      1259	prdbg.c	FUNCTION_34	IF_8	IF_10	IF_11	CALL_7
0x400157a	      0x488d742410	                   lea rsi, [rsp + 0x10]	      1260	prdbg.c	FUNCTION_34	IF_8	IF_10	IF_11	CALL_8
0x400157f	          0x4889df	                            mov rdi, rbx	      1260	prdbg.c	FUNCTION_34	IF_8	IF_10	IF_11	CALL_8
0x4001582	      0xe8a0efffff	                    call sym.append_type	      1260	prdbg.c	FUNCTION_34	IF_8	IF_10	IF_11	CALL_8
0x4001587	            0x85c0	                           test eax, eax	      1260	prdbg.c	FUNCTION_34	IF_8	IF_10	IF_11	CALL_8
0x4001589	            0x750a	                           jne 0x4001595	      1260	prdbg.c	FUNCTION_34	IF_8	IF_10	IF_11	CALL_8
0x400158b	      0xb800000000	                              mov eax, 0	      1261	prdbg.c	FUNCTION_34	IF_8	IF_10	IF_11
0x4001590	      0xe9dd000000	                           jmp 0x4001672	      1261	prdbg.c	FUNCTION_34	IF_8	IF_10	IF_11
0x4001595	          0x4585e4	                         test r12d, r12d	      1264	prdbg.c	FUNCTION_34	IF_8	IF_12
0x4001598	            0x745b	                            je 0x40015f5	      1264	prdbg.c	FUNCTION_34	IF_8	IF_12
0x400159a	      0xbe00000000	                              mov esi, 0	      1266	prdbg.c	FUNCTION_34	IF_8	IF_12	IF_13	CALL_9
0x400159f	          0x4889df	                            mov rdi, rbx	      1266	prdbg.c	FUNCTION_34	IF_8	IF_12	IF_13	CALL_9
0x40015a2	      0xe880efffff	                    call sym.append_type	      1266	prdbg.c	FUNCTION_34	IF_8	IF_12	IF_13	CALL_9
0x40015a7	            0x85c0	                           test eax, eax	      1266	prdbg.c	FUNCTION_34	IF_8	IF_12	IF_13	CALL_9
0x40015a9	     0xf84c3000000	                            je 0x4001672	      1266	prdbg.c	FUNCTION_34	IF_8	IF_12	IF_13	CALL_9
0x40015af	    0x83bc24800000	               cmp dword [rsp + 0x80], 0	      1268	prdbg.c	FUNCTION_34	IF_8	IF_12	IF_14
0x40015b7	            0x7416	                            je 0x40015cf	      1268	prdbg.c	FUNCTION_34	IF_8	IF_12	IF_14
0x40015b9	      0xbe00000000	                              mov esi, 0	      1270	prdbg.c	FUNCTION_34	IF_8	IF_12	IF_14	IF_15	CALL_10
0x40015be	          0x4889df	                            mov rdi, rbx	      1270	prdbg.c	FUNCTION_34	IF_8	IF_12	IF_14	IF_15	CALL_10
0x40015c1	      0xe861efffff	                    call sym.append_type	      1270	prdbg.c	FUNCTION_34	IF_8	IF_12	IF_14	IF_15	CALL_10
0x40015c6	            0x85c0	                           test eax, eax	      1270	prdbg.c	FUNCTION_34	IF_8	IF_12	IF_14	IF_15	CALL_10
0x40015c8	            0x752b	                           jne 0x40015f5	      1270	prdbg.c	FUNCTION_34	IF_8	IF_12	IF_14	IF_15	CALL_10
0x40015ca	      0xe9a3000000	                           jmp 0x4001672	      1270	prdbg.c	FUNCTION_34	IF_8	IF_12	IF_14	IF_15	CALL_10
0x40015cf	      0x488b742408	                mov rsi, qword [rsp + 8]	      1275	prdbg.c	FUNCTION_34	IF_8	IF_12	ELSE_2	IF_16	CALL_11
0x40015d4	          0x4889df	                            mov rdi, rbx	      1275	prdbg.c	FUNCTION_34	IF_8	IF_12	ELSE_2	IF_16	CALL_11
0x40015d7	      0xe84befffff	                    call sym.append_type	      1275	prdbg.c	FUNCTION_34	IF_8	IF_12	ELSE_2	IF_16	CALL_11
0x40015dc	            0x85c0	                           test eax, eax	      1275	prdbg.c	FUNCTION_34	IF_8	IF_12	ELSE_2	IF_16	CALL_11
0x40015de	     0xf848e000000	                            je 0x4001672	      1275	prdbg.c	FUNCTION_34	IF_8	IF_12	ELSE_2	IF_16	CALL_11
0x40015e4	      0xbe00000000	                              mov esi, 0	      1276	prdbg.c	FUNCTION_34	IF_8	IF_12	ELSE_2	IF_16	CALL_12
0x40015e9	          0x4889df	                            mov rdi, rbx	      1276	prdbg.c	FUNCTION_34	IF_8	IF_12	ELSE_2	IF_16	CALL_12
0x40015ec	      0xe836efffff	                    call sym.append_type	      1276	prdbg.c	FUNCTION_34	IF_8	IF_12	ELSE_2	IF_16	CALL_12
0x40015f1	            0x85c0	                           test eax, eax	      1276	prdbg.c	FUNCTION_34	IF_8	IF_12	ELSE_2	IF_16	CALL_12
0x40015f3	            0x747d	                            je 0x4001672	      1276	prdbg.c	FUNCTION_34	IF_8	IF_12	ELSE_2	IF_16	CALL_12
0x40015f5	          0x4885ed	                           test rbp, rbp	      1281	prdbg.c	FUNCTION_34	IF_8	IF_17
0x40015f8	            0x7434	                            je 0x400162e	      1281	prdbg.c	FUNCTION_34	IF_8	IF_17
0x40015fa	      0x448b442404	                mov r8d, dword [rsp + 4]	        33	stdio2.h	FUNCTION_84	CALL_1
0x40015ff	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x4001604	      0xba1e000000	                           mov edx, 0x1e	        33	stdio2.h	FUNCTION_84	CALL_1
0x4001609	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_84	CALL_1
0x400160e	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	        33	stdio2.h	FUNCTION_84	CALL_1
0x4001613	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x4001618	      0xe800000000	                          call 0x400161d	        33	stdio2.h	FUNCTION_84	CALL_1
0x400161d	      0x488d742410	                   lea rsi, [rsp + 0x10]	      1286	prdbg.c	FUNCTION_34	IF_8	IF_17	IF_18	CALL_13
0x4001622	          0x4889df	                            mov rdi, rbx	      1286	prdbg.c	FUNCTION_34	IF_8	IF_17	IF_18	CALL_13
0x4001625	      0xe8fdeeffff	                    call sym.append_type	      1286	prdbg.c	FUNCTION_34	IF_8	IF_17	IF_18	CALL_13
0x400162a	            0x85c0	                           test eax, eax	      1286	prdbg.c	FUNCTION_34	IF_8	IF_17	IF_18	CALL_13
0x400162c	            0x7444	                            je 0x4001672	      1286	prdbg.c	FUNCTION_34	IF_8	IF_17	IF_18	CALL_13
0x400162e	      0xbe00000000	                              mov esi, 0	      1290	prdbg.c	FUNCTION_34	IF_8	IF_19	CALL_14
0x4001633	          0x4889df	                            mov rdi, rbx	      1290	prdbg.c	FUNCTION_34	IF_8	IF_19	CALL_14
0x4001636	      0xe8eceeffff	                    call sym.append_type	      1290	prdbg.c	FUNCTION_34	IF_8	IF_19	CALL_14
0x400163b	            0x85c0	                           test eax, eax	      1290	prdbg.c	FUNCTION_34	IF_8	IF_19	CALL_14
0x400163d	            0x7433	                            je 0x4001672	      1290	prdbg.c	FUNCTION_34	IF_8	IF_19	CALL_14
0x400163f	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1294	prdbg.c	FUNCTION_34
0x4001643	    0xc74010020000	               mov dword [rax + 0x10], 2	      1294	prdbg.c	FUNCTION_34
0x400164a	      0xbe00000000	                              mov esi, 0	      1296	prdbg.c	FUNCTION_34	CALL_15
0x400164f	          0x4889df	                            mov rdi, rbx	      1296	prdbg.c	FUNCTION_34	CALL_15
0x4001652	      0xe8d0eeffff	                    call sym.append_type	      1296	prdbg.c	FUNCTION_34	CALL_15
0x4001657	            0x85c0	                           test eax, eax	      1297	prdbg.c	FUNCTION_34	CALL_16
0x4001659	            0x7417	                            je 0x4001672	      1297	prdbg.c	FUNCTION_34	CALL_16
0x400165b	          0x4889df	                            mov rdi, rbx	      1297	prdbg.c	FUNCTION_34	CALL_16
0x400165e	      0xe8adf4ffff	                    call sym.indent_type	      1297	prdbg.c	FUNCTION_34	CALL_16
0x4001663	            0x85c0	                           test eax, eax	      1228	prdbg.c	FUNCTION_34	IF_1	IF_2
0x4001665	           0xf95c0	                                setne al	      1228	prdbg.c	FUNCTION_34	IF_1	IF_2
0x4001668	           0xfb6c0	                           movzx eax, al	      1228	prdbg.c	FUNCTION_34	IF_1	IF_2
0x400166b	            0xeb05	                           jmp 0x4001672	      1228	prdbg.c	FUNCTION_34	IF_1	IF_2
0x400166d	      0xb800000000	                              mov eax, 0	      1228	prdbg.c	FUNCTION_34	IF_1	IF_2
0x4001672	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	      1298	prdbg.c	FUNCTION_34
0x4001677	    0x644833142528	                xor rdx, qword fs:[0x28]	      1298	prdbg.c	FUNCTION_34
0x4001680	            0x7405	                            je 0x4001687	      1298	prdbg.c	FUNCTION_34
0x4001682	      0xe800000000	                          call 0x4001687	      1298	prdbg.c	FUNCTION_34
0x4001687	        0x4883c448	                           add rsp, 0x48	      1298	prdbg.c	FUNCTION_34
0x400168b	              0x5b	                                 pop rbx	      1298	prdbg.c	FUNCTION_34
0x400168c	              0x5d	                                 pop rbp	      1298	prdbg.c	FUNCTION_34
0x400168d	            0x415c	                                 pop r12	      1298	prdbg.c	FUNCTION_34
0x400168f	            0x415d	                                 pop r13	      1298	prdbg.c	FUNCTION_34
0x4001691	            0x415e	                                 pop r14	      1298	prdbg.c	FUNCTION_34
0x4001693	            0x415f	                                 pop r15	      1298	prdbg.c	FUNCTION_34
0x4001695	              0xc3	                                     ret	      1298	prdbg.c	FUNCTION_34
tg_int_constant	IF,0:WHILE,0:ELSE,0:CALL,2:FOR,0:functions,0:SWITCH,0:DO,0	36
0x4003a34	            0x4154	                                push r12	      2541	prdbg.c	FUNCTION_74
0x4003a36	              0x55	                                push rbp	      2541	prdbg.c	FUNCTION_74
0x4003a37	              0x53	                                push rbx	      2541	prdbg.c	FUNCTION_74
0x4003a38	        0x4883ec20	                           sub rsp, 0x20	      2541	prdbg.c	FUNCTION_74
0x4003a3c	          0x4889fb	                            mov rbx, rdi	      2541	prdbg.c	FUNCTION_74
0x4003a3f	          0x4889f5	                            mov rbp, rsi	      2541	prdbg.c	FUNCTION_74
0x4003a42	          0x4989d4	                            mov r12, rdx	      2541	prdbg.c	FUNCTION_74
0x4003a45	    0x64488b042528	                mov rax, qword fs:[0x28]	      2541	prdbg.c	FUNCTION_74
0x4003a4e	      0x4889442418	             mov qword [rsp + 0x18], rax	      2541	prdbg.c	FUNCTION_74
0x4003a53	            0x31c0	                            xor eax, eax	      2541	prdbg.c	FUNCTION_74
0x4003a55	      0xe86fc6ffff	                         call sym.indent	      2545	prdbg.c	FUNCTION_74	CALL_1
0x4003a5a	          0x4d89e0	                             mov r8, r12	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003a5d	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003a62	      0xba16000000	                           mov edx, 0x16	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003a67	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003a6c	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003a6f	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003a74	      0xe800000000	                          call 0x4003a79	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003a79	          0x4989e1	                             mov r9, rsp	        97	stdio2.h	CALL_93
0x4003a7c	        0x4c8b4320	              mov r8, qword [rbx + 0x20]	        97	stdio2.h	CALL_93
0x4003a80	          0x4889e9	                            mov rcx, rbp	        97	stdio2.h	CALL_93
0x4003a83	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_93
0x4003a88	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_93
0x4003a8d	          0x488b3b	                    mov rdi, qword [rbx]	        97	stdio2.h	CALL_93
0x4003a90	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_93
0x4003a95	      0xe800000000	                          call 0x4003a9a	        97	stdio2.h	CALL_93
0x4003a9a	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      2550	prdbg.c	FUNCTION_74
0x4003a9f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2550	prdbg.c	FUNCTION_74
0x4003aa8	            0x7405	                            je 0x4003aaf	      2550	prdbg.c	FUNCTION_74
0x4003aaa	      0xe800000000	                          call 0x4003aaf	      2550	prdbg.c	FUNCTION_74
0x4003aaf	      0xb801000000	                              mov eax, 1	      2550	prdbg.c	FUNCTION_74
0x4003ab4	        0x4883c420	                           add rsp, 0x20	      2550	prdbg.c	FUNCTION_74
0x4003ab8	              0x5b	                                 pop rbx	      2550	prdbg.c	FUNCTION_74
0x4003ab9	              0x5d	                                 pop rbp	      2550	prdbg.c	FUNCTION_74
0x4003aba	            0x415c	                                 pop r12	      2550	prdbg.c	FUNCTION_74
0x4003abc	              0xc3	                                     ret	      2550	prdbg.c	FUNCTION_74
tg_class_baseclass	IF,9:WHILE,0:ELSE,0:CALL,10:FOR,0:functions,0:SWITCH,1:DO,0	87
0x400200a	            0x4154	                                push r12	      2229	prdbg.c	FUNCTION_67
0x400200c	              0x55	                                push rbp	      2229	prdbg.c	FUNCTION_67
0x400200d	              0x53	                                push rbx	      2229	prdbg.c	FUNCTION_67
0x400200e	        0x488b4710	            mov rax, qword [rdi + 0x10] 	      2234	prdbg.c	FUNCTION_67	CALL_1
0x4002012	          0x4885c0	                           test rax, rax	      2234	prdbg.c	FUNCTION_67	CALL_1
0x4002015	            0x740e	                            je 0x4002025	      2234	prdbg.c	FUNCTION_67	CALL_1
0x4002017	          0x4889fb	                            mov rbx, rdi	      2234	prdbg.c	FUNCTION_67	CALL_1
0x400201a	          0x4189d4	                           mov r12d, edx	      2234	prdbg.c	FUNCTION_67	CALL_1
0x400201d	            0x89cd	                            mov ebp, ecx	      2234	prdbg.c	FUNCTION_67	CALL_1
0x400201f	        0x48833800	                      cmp qword [rax], 0	      2234	prdbg.c	FUNCTION_67	CALL_1
0x4002023	            0x7519	                           jne 0x400203e	      2234	prdbg.c	FUNCTION_67	CALL_1
0x4002025	      0xb900000000	                              mov ecx, 0	      2234	prdbg.c	FUNCTION_67	CALL_1
0x400202a	      0xbaba080000	                          mov edx, 0x8ba	      2234	prdbg.c	FUNCTION_67	CALL_1
0x400202f	      0xbe00000000	                              mov esi, 0	      2234	prdbg.c	FUNCTION_67	CALL_1
0x4002034	      0xbf00000000	                              mov edi, 0	      2234	prdbg.c	FUNCTION_67	CALL_1
0x4002039	      0xe800000000	                          call 0x400203e	      2234	prdbg.c	FUNCTION_67	CALL_1
0x400203e	      0xe842e1ffff	                       call sym.pop_type	      2236	prdbg.c	FUNCTION_67	CALL_2
0x4002043	          0x4885c0	                           test rax, rax	      2237	prdbg.c	FUNCTION_67	IF_1
0x4002046	     0xf84d3000000	                            je 0x400211f	      2237	prdbg.c	FUNCTION_67	IF_1
0x400204c	      0xbf00000000	                              mov edi, 0	      2240	prdbg.c	FUNCTION_67	IF_2	CALL_3
0x4002051	      0xb906000000	                              mov ecx, 6	      2240	prdbg.c	FUNCTION_67	IF_2	CALL_3
0x4002056	          0x4889c6	                            mov rsi, rax	      2240	prdbg.c	FUNCTION_67	IF_2	CALL_3
0x4002059	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2240	prdbg.c	FUNCTION_67	IF_2	CALL_3
0x400205b	           0xf97c2	                                 seta dl	      2240	prdbg.c	FUNCTION_67	IF_2	CALL_3
0x400205e	           0xf92c1	                                 setb cl	      2240	prdbg.c	FUNCTION_67	IF_2	CALL_3
0x4002061	            0x29ca	                            sub edx, ecx	      2240	prdbg.c	FUNCTION_67	IF_2	CALL_3
0x4002063	           0xfbed2	                           movsx edx, dl	      2240	prdbg.c	FUNCTION_67	IF_2	CALL_3
0x4002066	        0x488d4806	                      lea rcx, [rax + 6]	      2241	prdbg.c	FUNCTION_67	IF_2
0x400206a	            0x85d2	                           test edx, edx	      2241	prdbg.c	FUNCTION_67	IF_2
0x400206c	        0x480f44c1	                          cmove rax, rcx	      2241	prdbg.c	FUNCTION_67	IF_2
0x4002070	          0x4889c6	                            mov rsi, rax	      2245	prdbg.c	FUNCTION_67	IF_3	CALL_4
0x4002073	          0x4889df	                            mov rdi, rbx	      2245	prdbg.c	FUNCTION_67	IF_3	CALL_4
0x4002076	      0xe815f2ffff	                      call sym.push_type	      2245	prdbg.c	FUNCTION_67	IF_3	CALL_4
0x400207b	            0x85c0	                           test eax, eax	      2245	prdbg.c	FUNCTION_67	IF_3	CALL_4
0x400207d	     0xf84a8000000	                            je 0x400212b	      2245	prdbg.c	FUNCTION_67	IF_3	CALL_4
0x4002083	          0x4585e4	                         test r12d, r12d	      2248	prdbg.c	FUNCTION_67	IF_4
0x4002086	            0x7415	                            je 0x400209d	      2248	prdbg.c	FUNCTION_67	IF_4
0x4002088	      0xbe00000000	                              mov esi, 0	      2250	prdbg.c	FUNCTION_67	IF_4	IF_5	CALL_5
0x400208d	          0x4889df	                            mov rdi, rbx	      2250	prdbg.c	FUNCTION_67	IF_4	IF_5	CALL_5
0x4002090	      0xe8e0e3ffff	                   call sym.prepend_type	      2250	prdbg.c	FUNCTION_67	IF_4	IF_5	CALL_5
0x4002095	            0x85c0	                           test eax, eax	      2250	prdbg.c	FUNCTION_67	IF_4	IF_5	CALL_5
0x4002097	     0xf848e000000	                            je 0x400212b	      2250	prdbg.c	FUNCTION_67	IF_4	IF_5	CALL_5
0x400209d	      0xbe00000000	                              mov esi, 0	      2260	prdbg.c	FUNCTION_67	SWITCH_1
0x40020a2	          0x83fd01	                              cmp ebp, 1	      2254	prdbg.c	FUNCTION_67	SWITCH_1
0x40020a5	            0x741b	                            je 0x40020c2	      2254	prdbg.c	FUNCTION_67	SWITCH_1
0x40020a7	      0xbe00000000	                              mov esi, 0	      2257	prdbg.c	FUNCTION_67	SWITCH_1
0x40020ac	          0x83fd01	                              cmp ebp, 1	      2254	prdbg.c	FUNCTION_67	SWITCH_1
0x40020af	            0x7211	                            jb 0x40020c2	      2254	prdbg.c	FUNCTION_67	SWITCH_1
0x40020b1	          0x83fd02	                              cmp ebp, 2	      2254	prdbg.c	FUNCTION_67	SWITCH_1
0x40020b4	      0xbe00000000	                              mov esi, 0	      2266	prdbg.c	FUNCTION_67	SWITCH_1
0x40020b9	      0xb800000000	                              mov eax, 0	      2266	prdbg.c	FUNCTION_67	SWITCH_1
0x40020be	        0x480f44f0	                          cmove rsi, rax	      2266	prdbg.c	FUNCTION_67	SWITCH_1
0x40020c2	          0x4889df	                            mov rdi, rbx	      2270	prdbg.c	FUNCTION_67	IF_6	CALL_6
0x40020c5	      0xe8abe3ffff	                   call sym.prepend_type	      2270	prdbg.c	FUNCTION_67	IF_6	CALL_6
0x40020ca	            0x85c0	                           test eax, eax	      2270	prdbg.c	FUNCTION_67	IF_6	CALL_6
0x40020cc	            0x745d	                            je 0x400212b	      2270	prdbg.c	FUNCTION_67	IF_6	CALL_6
0x40020ce	          0x4889df	                            mov rdi, rbx	      2273	prdbg.c	FUNCTION_67	CALL_7
0x40020d1	      0xe8afe0ffff	                       call sym.pop_type	      2273	prdbg.c	FUNCTION_67	CALL_7
0x40020d6	          0x4889c5	                            mov rbp, rax	      2273	prdbg.c	FUNCTION_67	CALL_7
0x40020d9	          0x4885c0	                           test rax, rax	      2274	prdbg.c	FUNCTION_67	IF_7
0x40020dc	            0x7448	                            je 0x4002126	      2274	prdbg.c	FUNCTION_67	IF_7
0x40020de	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      2277	prdbg.c	FUNCTION_67	IF_8	CALL_8
0x40020e2	        0x83783000	               cmp dword [rax + 0x30], 0	      2277	prdbg.c	FUNCTION_67	IF_8	CALL_8
0x40020e6	            0x7411	                            je 0x40020f9	      2277	prdbg.c	FUNCTION_67	IF_8	CALL_8
0x40020e8	      0xbe00000000	                              mov esi, 0	      2277	prdbg.c	FUNCTION_67	IF_8	CALL_8
0x40020ed	          0x4889df	                            mov rdi, rbx	      2277	prdbg.c	FUNCTION_67	IF_8	CALL_8
0x40020f0	      0xe8dfebffff	                  call sym.append_parent	      2277	prdbg.c	FUNCTION_67	IF_8	CALL_8
0x40020f5	            0x85c0	                           test eax, eax	      2277	prdbg.c	FUNCTION_67	IF_8	CALL_8
0x40020f7	            0x7432	                            je 0x400212b	      2277	prdbg.c	FUNCTION_67	IF_8	CALL_8
0x40020f9	          0x4889ee	                            mov rsi, rbp	      2280	prdbg.c	FUNCTION_67	IF_9	CALL_9
0x40020fc	          0x4889df	                            mov rdi, rbx	      2280	prdbg.c	FUNCTION_67	IF_9	CALL_9
0x40020ff	      0xe8d0ebffff	                  call sym.append_parent	      2280	prdbg.c	FUNCTION_67	IF_9	CALL_9
0x4002104	            0x85c0	                           test eax, eax	      2280	prdbg.c	FUNCTION_67	IF_9	CALL_9
0x4002106	            0x7423	                            je 0x400212b	      2280	prdbg.c	FUNCTION_67	IF_9	CALL_9
0x4002108	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      2282	prdbg.c	FUNCTION_67
0x400210c	        0x83403001	               add dword [rax + 0x30], 1	      2282	prdbg.c	FUNCTION_67
0x4002110	          0x4889ef	                            mov rdi, rbp	      2284	prdbg.c	FUNCTION_67	CALL_10
0x4002113	      0xe800000000	                          call 0x4002118	      2284	prdbg.c	FUNCTION_67	CALL_10
0x4002118	      0xb801000000	                              mov eax, 1	      2286	prdbg.c	FUNCTION_67
0x400211d	            0xeb0c	                           jmp 0x400212b	      2286	prdbg.c	FUNCTION_67
0x400211f	      0xb800000000	                              mov eax, 0	      2238	prdbg.c	FUNCTION_67	IF_1
0x4002124	            0xeb05	                           jmp 0x400212b	      2238	prdbg.c	FUNCTION_67	IF_1
0x4002126	      0xb800000000	                              mov eax, 0	      2275	prdbg.c	FUNCTION_67	IF_7
0x400212b	              0x5b	                                 pop rbx	      2287	prdbg.c	FUNCTION_67
0x400212c	              0x5d	                                 pop rbp	      2287	prdbg.c	FUNCTION_67
0x400212d	            0x415c	                                 pop r12	      2287	prdbg.c	FUNCTION_67
0x400212f	              0xc3	                                     ret	      2287	prdbg.c	FUNCTION_67
pr_end_class_type	IF,0:WHILE,0:ELSE,0:CALL,1:FOR,0:functions,0:SWITCH,0:DO,0	4
0x4000467	        0x4883ec08	                              sub rsp, 8	      1583	prdbg.c	FUNCTION_41
0x400046b	      0xe852ffffff	             call sym.pr_end_struct_type	      1584	prdbg.c	FUNCTION_41	CALL_1
0x4000470	        0x4883c408	                              add rsp, 8	      1585	prdbg.c	FUNCTION_41
0x4000474	              0xc3	                                     ret	      1585	prdbg.c	FUNCTION_41
pr_void_type	IF,0:WHILE,0:ELSE,0:CALL,1:FOR,0:functions,0:SWITCH,0:DO,0	5
0x40019d1	        0x4883ec08	                              sub rsp, 8	       572	prdbg.c	FUNCTION_14
0x40019d5	      0xbe00000000	                              mov esi, 0	       575	prdbg.c	FUNCTION_14	CALL_1
0x40019da	      0xe8b1f8ffff	                      call sym.push_type	       575	prdbg.c	FUNCTION_14	CALL_1
0x40019df	        0x4883c408	                              add rsp, 8	       576	prdbg.c	FUNCTION_14
0x40019e3	              0xc3	                                     ret	       576	prdbg.c	FUNCTION_14
pr_start_block	IF,1:WHILE,0:ELSE,0:CALL,2:FOR,0:functions,0:SWITCH,0:DO,0	41
0x4003b42	              0x55	                                push rbp	      1850	prdbg.c	FUNCTION_52
0x4003b43	              0x53	                                push rbx	      1850	prdbg.c	FUNCTION_52
0x4003b44	        0x4883ec28	                           sub rsp, 0x28	      1850	prdbg.c	FUNCTION_52
0x4003b48	          0x4889fb	                            mov rbx, rdi	      1850	prdbg.c	FUNCTION_52
0x4003b4b	          0x4889f5	                            mov rbp, rsi	      1850	prdbg.c	FUNCTION_52
0x4003b4e	    0x64488b042528	                mov rax, qword fs:[0x28]	      1850	prdbg.c	FUNCTION_52
0x4003b57	      0x4889442418	             mov qword [rsp + 0x18], rax	      1850	prdbg.c	FUNCTION_52
0x4003b5c	            0x31c0	                            xor eax, eax	      1850	prdbg.c	FUNCTION_52
0x4003b5e	        0x837f1800	               cmp dword [rdi + 0x18], 0	      1854	prdbg.c	FUNCTION_52	IF_1
0x4003b62	            0x7e1e	                           jle 0x4003b82	      1854	prdbg.c	FUNCTION_52	IF_1
0x4003b64	          0x488b0f	                    mov rcx, qword [rdi]	        97	stdio2.h	CALL_93
0x4003b67	      0xba02000000	                              mov edx, 2	        97	stdio2.h	CALL_93
0x4003b6c	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_93
0x4003b71	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_93
0x4003b76	      0xe800000000	                          call 0x4003b7b	        97	stdio2.h	CALL_93
0x4003b7b	    0xc74318000000	               mov dword [rbx + 0x18], 0	      1857	prdbg.c	FUNCTION_52	IF_1
0x4003b82	          0x4889df	                            mov rdi, rbx	      1860	prdbg.c	FUNCTION_52	CALL_1
0x4003b85	      0xe83fc5ffff	                         call sym.indent	      1860	prdbg.c	FUNCTION_52	CALL_1
0x4003b8a	          0x4989e8	                             mov r8, rbp	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003b8d	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003b92	      0xba16000000	                           mov edx, 0x16	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003b97	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003b9c	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003b9f	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003ba4	      0xe800000000	                          call 0x4003ba9	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003ba9	          0x4889e1	                            mov rcx, rsp	        97	stdio2.h	CALL_93
0x4003bac	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_93
0x4003bb1	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_93
0x4003bb6	          0x488b3b	                    mov rdi, qword [rbx]	        97	stdio2.h	CALL_93
0x4003bb9	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_93
0x4003bbe	      0xe800000000	                          call 0x4003bc3	        97	stdio2.h	CALL_93
0x4003bc3	        0x83430802	                  add dword [rbx + 8], 2	      1864	prdbg.c	FUNCTION_52
0x4003bc7	      0xb801000000	                              mov eax, 1	      1867	prdbg.c	FUNCTION_52
0x4003bcc	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      1867	prdbg.c	FUNCTION_52
0x4003bd1	    0x644833142528	                xor rdx, qword fs:[0x28]	      1867	prdbg.c	FUNCTION_52
0x4003bda	            0x7405	                            je 0x4003be1	      1867	prdbg.c	FUNCTION_52
0x4003bdc	      0xe800000000	                          call 0x4003be1	      1867	prdbg.c	FUNCTION_52
0x4003be1	        0x4883c428	                           add rsp, 0x28	      1867	prdbg.c	FUNCTION_52
0x4003be5	              0x5b	                                 pop rbx	      1867	prdbg.c	FUNCTION_52
0x4003be6	              0x5d	                                 pop rbp	      1867	prdbg.c	FUNCTION_52
0x4003be7	              0xc3	                                     ret	      1867	prdbg.c	FUNCTION_52
pr_set_type	IF,4:WHILE,0:ELSE,0:CALL,4:FOR,0:functions,0:SWITCH,0:DO,0	32
0x4000bca	              0x55	                                push rbp	       876	prdbg.c	FUNCTION_25
0x4000bcb	              0x53	                                push rbx	       876	prdbg.c	FUNCTION_25
0x4000bcc	        0x4883ec08	                              sub rsp, 8	       876	prdbg.c	FUNCTION_25
0x4000bd0	          0x4889fb	                            mov rbx, rdi	       876	prdbg.c	FUNCTION_25
0x4000bd3	            0x89f5	                            mov ebp, esi	       876	prdbg.c	FUNCTION_25
0x4000bd5	      0xbe00000000	                              mov esi, 0	       879	prdbg.c	FUNCTION_25	IF_1	CALL_1
0x4000bda	      0xe8ebf9ffff	                call sym.substitute_type	       879	prdbg.c	FUNCTION_25	IF_1	CALL_1
0x4000bdf	            0x85c0	                           test eax, eax	       879	prdbg.c	FUNCTION_25	IF_1	CALL_1
0x4000be1	            0x7440	                            je 0x4000c23	       879	prdbg.c	FUNCTION_25	IF_1	CALL_1
0x4000be3	      0xbe00000000	                              mov esi, 0	       882	prdbg.c	FUNCTION_25	IF_2	CALL_2
0x4000be8	          0x4889df	                            mov rdi, rbx	       882	prdbg.c	FUNCTION_25	IF_2	CALL_2
0x4000beb	      0xe885f8ffff	                   call sym.prepend_type	       882	prdbg.c	FUNCTION_25	IF_2	CALL_2
0x4000bf0	            0x85c0	                           test eax, eax	       882	prdbg.c	FUNCTION_25	IF_2	CALL_2
0x4000bf2	            0x742f	                            je 0x4000c23	       882	prdbg.c	FUNCTION_25	IF_2	CALL_2
0x4000bf4	      0xbe00000000	                              mov esi, 0	       883	prdbg.c	FUNCTION_25	IF_2	CALL_3
0x4000bf9	          0x4889df	                            mov rdi, rbx	       883	prdbg.c	FUNCTION_25	IF_2	CALL_3
0x4000bfc	      0xe826f9ffff	                    call sym.append_type	       883	prdbg.c	FUNCTION_25	IF_2	CALL_3
0x4000c01	            0x85c0	                           test eax, eax	       883	prdbg.c	FUNCTION_25	IF_2	CALL_3
0x4000c03	            0x741e	                            je 0x4000c23	       883	prdbg.c	FUNCTION_25	IF_2	CALL_3
0x4000c05	      0xb801000000	                              mov eax, 1	       892	prdbg.c	FUNCTION_25
0x4000c0a	            0x85ed	                           test ebp, ebp	       886	prdbg.c	FUNCTION_25	IF_3
0x4000c0c	            0x7415	                            je 0x4000c23	       886	prdbg.c	FUNCTION_25	IF_3
0x4000c0e	      0xbe00000000	                              mov esi, 0	       888	prdbg.c	FUNCTION_25	IF_3	IF_4	CALL_4
0x4000c13	          0x4889df	                            mov rdi, rbx	       888	prdbg.c	FUNCTION_25	IF_3	IF_4	CALL_4
0x4000c16	      0xe80cf9ffff	                    call sym.append_type	       888	prdbg.c	FUNCTION_25	IF_3	IF_4	CALL_4
0x4000c1b	            0x85c0	                           test eax, eax	       880	prdbg.c	FUNCTION_25	IF_1
0x4000c1d	           0xf95c0	                                setne al	       880	prdbg.c	FUNCTION_25	IF_1
0x4000c20	           0xfb6c0	                           movzx eax, al	       880	prdbg.c	FUNCTION_25	IF_1
0x4000c23	        0x4883c408	                              add rsp, 8	       893	prdbg.c	FUNCTION_25
0x4000c27	              0x5b	                                 pop rbx	       893	prdbg.c	FUNCTION_25
0x4000c28	              0x5d	                                 pop rbp	       893	prdbg.c	FUNCTION_25
0x4000c29	              0xc3	                                     ret	       893	prdbg.c	FUNCTION_25
pr_volatile_type	IF,0:WHILE,0:ELSE,0:CALL,1:FOR,0:functions,0:SWITCH,0:DO,0	5
0x40007fe	        0x4883ec08	                              sub rsp, 8	      1032	prdbg.c	FUNCTION_29
0x4000802	      0xbe00000000	                              mov esi, 0	      1035	prdbg.c	FUNCTION_29	CALL_1
0x4000807	      0xe8befdffff	                call sym.substitute_type	      1035	prdbg.c	FUNCTION_29	CALL_1
0x400080c	        0x4883c408	                              add rsp, 8	      1036	prdbg.c	FUNCTION_29
0x4000810	              0xc3	                                     ret	      1036	prdbg.c	FUNCTION_29
indent_type	IF,1:WHILE,0:ELSE,0:CALL,1:FOR,1:functions,0:SWITCH,0:DO,0	23
0x4000b10	        0x837f0800	                  cmp dword [rdi + 8], 0	       461	prdbg.c	FUNCTION_8	FOR_1
0x4000b14	            0x742e	                            je 0x4000b44	       461	prdbg.c	FUNCTION_8	FOR_1
0x4000b16	              0x55	                                push rbp	       458	prdbg.c	FUNCTION_8
0x4000b17	              0x53	                                push rbx	       458	prdbg.c	FUNCTION_8
0x4000b18	        0x4883ec08	                              sub rsp, 8	       458	prdbg.c	FUNCTION_8
0x4000b1c	          0x4889fd	                            mov rbp, rdi	       458	prdbg.c	FUNCTION_8
0x4000b1f	      0xbb00000000	                              mov ebx, 0	       461	prdbg.c	FUNCTION_8	FOR_1
0x4000b24	      0xbe00000000	                              mov esi, 0	       463	prdbg.c	FUNCTION_8	FOR_1	IF_1	CALL_1
0x4000b29	          0x4889ef	                            mov rdi, rbp	       463	prdbg.c	FUNCTION_8	FOR_1	IF_1	CALL_1
0x4000b2c	      0xe8f6f9ffff	                    call sym.append_type	       463	prdbg.c	FUNCTION_8	FOR_1	IF_1	CALL_1
0x4000b31	            0x85c0	                           test eax, eax	       463	prdbg.c	FUNCTION_8	FOR_1	IF_1	CALL_1
0x4000b33	            0x7415	                            je 0x4000b4a	       463	prdbg.c	FUNCTION_8	FOR_1	IF_1	CALL_1
0x4000b35	          0x83c301	                              add ebx, 1	       461	prdbg.c	FUNCTION_8	FOR_1
0x4000b38	          0x395d08	                cmp dword [rbp + 8], ebx	       461	prdbg.c	FUNCTION_8	FOR_1
0x4000b3b	            0x77e7	                            ja 0x4000b24	       461	prdbg.c	FUNCTION_8	FOR_1
0x4000b3d	      0xb801000000	                              mov eax, 1	       467	prdbg.c	FUNCTION_8
0x4000b42	            0xeb06	                           jmp 0x4000b4a	       467	prdbg.c	FUNCTION_8
0x4000b44	      0xb801000000	                              mov eax, 1	       467	prdbg.c	FUNCTION_8
0x4000b49	              0xc3	                                     ret	       467	prdbg.c	FUNCTION_8
0x4000b4a	        0x4883c408	                              add rsp, 8	       468	prdbg.c	FUNCTION_8
0x4000b4e	              0x5b	                                 pop rbx	       468	prdbg.c	FUNCTION_8
0x4000b4f	              0x5d	                                 pop rbp	       468	prdbg.c	FUNCTION_8
0x4000b50	              0xc3	                                     ret	       468	prdbg.c	FUNCTION_8
pr_method_type	IF,16:WHILE,0:ELSE,5:CALL,25:FOR,2:functions,0:SWITCH,0:DO,0	214
0x4001cf1	            0x4157	                                push r15	       920	prdbg.c	FUNCTION_27
0x4001cf3	            0x4156	                                push r14	       920	prdbg.c	FUNCTION_27
0x4001cf5	            0x4155	                                push r13	       920	prdbg.c	FUNCTION_27
0x4001cf7	            0x4154	                                push r12	       920	prdbg.c	FUNCTION_27
0x4001cf9	              0x55	                                push rbp	       920	prdbg.c	FUNCTION_27
0x4001cfa	              0x53	                                push rbx	       920	prdbg.c	FUNCTION_27
0x4001cfb	        0x4883ec18	                           sub rsp, 0x18	       920	prdbg.c	FUNCTION_27
0x4001cff	          0x4989fd	                            mov r13, rdi	       920	prdbg.c	FUNCTION_27
0x4001d02	        0x8974240c	              mov dword [rsp + 0xc], esi	       920	prdbg.c	FUNCTION_27
0x4001d06	          0x4189d6	                           mov r14d, edx	       920	prdbg.c	FUNCTION_27
0x4001d09	        0x894c2408	                mov dword [rsp + 8], ecx	       920	prdbg.c	FUNCTION_27
0x4001d0d	    0x48c704240000	                      mov qword [rsp], 0	       930	prdbg.c	FUNCTION_27	IF_1
0x4001d15	    0x41bc0a000000	                           mov r12d, 0xa	       927	prdbg.c	FUNCTION_27
0x4001d1b	            0x85f6	                           test esi, esi	       929	prdbg.c	FUNCTION_27	IF_1
0x4001d1d	     0xf84b4000000	                            je 0x4001dd7	       929	prdbg.c	FUNCTION_27	IF_1
0x4001d23	      0xbe00000000	                              mov esi, 0	       933	prdbg.c	FUNCTION_27	ELSE_1	IF_2	CALL_1
0x4001d28	      0xe89de8ffff	                call sym.substitute_type	       933	prdbg.c	FUNCTION_27	ELSE_1	IF_2	CALL_1
0x4001d2d	            0x89c5	                            mov ebp, eax	       933	prdbg.c	FUNCTION_27	ELSE_1	IF_2	CALL_1
0x4001d2f	            0x85c0	                           test eax, eax	       933	prdbg.c	FUNCTION_27	ELSE_1	IF_2	CALL_1
0x4001d31	     0xf84c2020000	                            je 0x4001ff9	       933	prdbg.c	FUNCTION_27	ELSE_1	IF_2	CALL_1
0x4001d37	          0x4c89ef	                            mov rdi, r13	       935	prdbg.c	FUNCTION_27	ELSE_1	CALL_2
0x4001d3a	      0xe846e4ffff	                       call sym.pop_type	       935	prdbg.c	FUNCTION_27	ELSE_1	CALL_2
0x4001d3f	          0x4889c6	                            mov rsi, rax	       935	prdbg.c	FUNCTION_27	ELSE_1	CALL_2
0x4001d42	          0x4885c0	                           test rax, rax	       936	prdbg.c	FUNCTION_27	ELSE_1	IF_3
0x4001d45	     0xf8492020000	                            je 0x4001fdd	       936	prdbg.c	FUNCTION_27	ELSE_1	IF_3
0x4001d4b	      0xbf00000000	                              mov edi, 0	       938	prdbg.c	FUNCTION_27	ELSE_1	IF_4	CALL_3
0x4001d50	      0xb906000000	                              mov ecx, 6	       938	prdbg.c	FUNCTION_27	ELSE_1	IF_4	CALL_3
0x4001d55	          0x4889c3	                            mov rbx, rax	       938	prdbg.c	FUNCTION_27	ELSE_1	IF_4	CALL_3
0x4001d58	        0x48890424	                    mov qword [rsp], rax	       938	prdbg.c	FUNCTION_27	ELSE_1	IF_4	CALL_3
0x4001d5c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       938	prdbg.c	FUNCTION_27	ELSE_1	IF_4	CALL_3
0x4001d5e	           0xf97c2	                                 seta dl	       938	prdbg.c	FUNCTION_27	ELSE_1	IF_4	CALL_3
0x4001d61	           0xf92c0	                                 setb al	       938	prdbg.c	FUNCTION_27	ELSE_1	IF_4	CALL_3
0x4001d64	            0x38c2	                              cmp dl, al	       938	prdbg.c	FUNCTION_27	ELSE_1	IF_4	CALL_3
0x4001d66	            0x7516	                           jne 0x4001d7e	       938	prdbg.c	FUNCTION_27	ELSE_1	IF_4	CALL_3
0x4001d68	        0x488d5b06	                      lea rbx, [rbx + 6]	       939	prdbg.c	FUNCTION_27	ELSE_1	IF_4	CALL_4
0x4001d6c	      0xbe20000000	                           mov esi, 0x20	       939	prdbg.c	FUNCTION_27	ELSE_1	IF_4	CALL_4
0x4001d71	          0x4889df	                            mov rdi, rbx	       939	prdbg.c	FUNCTION_27	ELSE_1	IF_4	CALL_4
0x4001d74	      0xe800000000	                          call 0x4001d79	       939	prdbg.c	FUNCTION_27	ELSE_1	IF_4	CALL_4
0x4001d79	          0x4885c0	                           test rax, rax	       939	prdbg.c	FUNCTION_27	ELSE_1	IF_4	CALL_4
0x4001d7c	            0x743c	                            je 0x4001dba	       939	prdbg.c	FUNCTION_27	ELSE_1	IF_4	CALL_4
0x4001d7e	      0xbf00000000	                              mov edi, 0	       941	prdbg.c	FUNCTION_27	ELSE_1	ELSE_2	IF_5	CALL_5
0x4001d83	      0xb90c000000	                            mov ecx, 0xc	       941	prdbg.c	FUNCTION_27	ELSE_1	ELSE_2	IF_5	CALL_5
0x4001d88	        0x488b3424	                    mov rsi, qword [rsp]	       941	prdbg.c	FUNCTION_27	ELSE_1	ELSE_2	IF_5	CALL_5
0x4001d8c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       941	prdbg.c	FUNCTION_27	ELSE_1	ELSE_2	IF_5	CALL_5
0x4001d8e	           0xf97c2	                                 seta dl	       941	prdbg.c	FUNCTION_27	ELSE_1	ELSE_2	IF_5	CALL_5
0x4001d91	           0xf92c0	                                 setb al	       941	prdbg.c	FUNCTION_27	ELSE_1	ELSE_2	IF_5	CALL_5
0x4001d94	            0x38c2	                              cmp dl, al	       941	prdbg.c	FUNCTION_27	ELSE_1	ELSE_2	IF_5	CALL_5
0x4001d96	            0x7526	                           jne 0x4001dbe	       941	prdbg.c	FUNCTION_27	ELSE_1	ELSE_2	IF_5	CALL_5
0x4001d98	        0x4c8b3c24	                    mov r15, qword [rsp]	       942	prdbg.c	FUNCTION_27	ELSE_1	ELSE_2	IF_5	CALL_6
0x4001d9c	        0x498d5f0c	                    lea rbx, [r15 + 0xc]	       942	prdbg.c	FUNCTION_27	ELSE_1	ELSE_2	IF_5	CALL_6
0x4001da0	      0xbe20000000	                           mov esi, 0x20	       942	prdbg.c	FUNCTION_27	ELSE_1	ELSE_2	IF_5	CALL_6
0x4001da5	          0x4889df	                            mov rdi, rbx	       942	prdbg.c	FUNCTION_27	ELSE_1	ELSE_2	IF_5	CALL_6
0x4001da8	      0xe800000000	                          call 0x4001dad	       942	prdbg.c	FUNCTION_27	ELSE_1	ELSE_2	IF_5	CALL_6
0x4001dad	          0x4885c0	                           test rax, rax	       944	prdbg.c	FUNCTION_27	ELSE_1	ELSE_2	IF_5
0x4001db0	        0x490f45df	                         cmovne rbx, r15	       944	prdbg.c	FUNCTION_27	ELSE_1	ELSE_2	IF_5
0x4001db4	        0x48891c24	                    mov qword [rsp], rbx	       944	prdbg.c	FUNCTION_27	ELSE_1	ELSE_2	IF_5
0x4001db8	            0xeb04	                           jmp 0x4001dbe	       944	prdbg.c	FUNCTION_27	ELSE_1	ELSE_2	IF_5
0x4001dba	        0x48891c24	                    mov qword [rsp], rbx	       940	prdbg.c	FUNCTION_27	ELSE_1	IF_4
0x4001dbe	      0xb800000000	                              mov eax, 0	       945	prdbg.c	FUNCTION_27	ELSE_1	CALL_7
0x4001dc3	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       945	prdbg.c	FUNCTION_27	ELSE_1	CALL_7
0x4001dca	        0x488b3c24	                    mov rdi, qword [rsp]	       945	prdbg.c	FUNCTION_27	ELSE_1	CALL_7
0x4001dce	            0xf2ae	              repne scasb al, byte [rdi]	       945	prdbg.c	FUNCTION_27	ELSE_1	CALL_7
0x4001dd0	          0x48f7d1	                                 not rcx	       945	prdbg.c	FUNCTION_27	ELSE_1	CALL_7
0x4001dd3	        0x448d6109	                     lea r12d, [rcx + 9]	       945	prdbg.c	FUNCTION_27	ELSE_1	CALL_7
0x4001dd7	          0x4585f6	                         test r14d, r14d	       948	prdbg.c	FUNCTION_27	IF_6
0x4001dda	            0x7f0f	                            jg 0x4001deb	       948	prdbg.c	FUNCTION_27	IF_6
0x4001ddc	        0x4183c40f	                           add r12d, 0xf	       951	prdbg.c	FUNCTION_27	IF_6
0x4001de0	    0x41bf00000000	                             mov r15d, 0	       950	prdbg.c	FUNCTION_27	IF_6
0x4001de6	      0xe98b000000	                           jmp 0x4001e76	       950	prdbg.c	FUNCTION_27	IF_6
0x4001deb	          0x4963fe	                        movsxd rdi, r14d	       957	prdbg.c	FUNCTION_27	ELSE_3	CALL_8
0x4001dee	        0x48c1e703	                              shl rdi, 3	       957	prdbg.c	FUNCTION_27	ELSE_3	CALL_8
0x4001df2	      0xe800000000	                          call 0x4001df7	       957	prdbg.c	FUNCTION_27	ELSE_3	CALL_8
0x4001df7	          0x4989c7	                            mov r15, rax	       957	prdbg.c	FUNCTION_27	ELSE_3	CALL_8
0x4001dfa	          0x4489f3	                           mov ebx, r14d	       958	prdbg.c	FUNCTION_27	ELSE_3	FOR_1
0x4001dfd	          0x83eb01	                              sub ebx, 1	       958	prdbg.c	FUNCTION_27	ELSE_3	FOR_1
0x4001e00	            0x7866	                            js 0x4001e68	       958	prdbg.c	FUNCTION_27	ELSE_3	FOR_1
0x4001e02	      0xbe00000000	                              mov esi, 0	       960	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	IF_7	CALL_9
0x4001e07	          0x4c89ef	                            mov rdi, r13	       960	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	IF_7	CALL_9
0x4001e0a	      0xe8bbe7ffff	                call sym.substitute_type	       960	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	IF_7	CALL_9
0x4001e0f	            0x89c5	                            mov ebp, eax	       960	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	IF_7	CALL_9
0x4001e11	            0x85c0	                           test eax, eax	       960	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	IF_7	CALL_9
0x4001e13	            0x750d	                           jne 0x4001e22	       960	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	IF_7	CALL_9
0x4001e15	          0x4c89ff	                            mov rdi, r15	       962	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	IF_7	CALL_10
0x4001e18	      0xe800000000	                          call 0x4001e1d	       962	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	IF_7	CALL_10
0x4001e1d	      0xe9d7010000	                           jmp 0x4001ff9	       963	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	IF_7
0x4001e22	          0x4863c3	                         movsxd rax, ebx	       965	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	CALL_11
0x4001e25	        0x498d2cc7	                  lea rbp, [r15 + rax*8]	       965	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	CALL_11
0x4001e29	          0x4c89ef	                            mov rdi, r13	       965	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	CALL_11
0x4001e2c	      0xe854e3ffff	                       call sym.pop_type	       965	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	CALL_11
0x4001e31	          0x4889c7	                            mov rdi, rax	       965	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	CALL_11
0x4001e34	        0x48894500	                    mov qword [rbp], rax	       965	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	CALL_11
0x4001e38	          0x4885c0	                           test rax, rax	       966	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	IF_8
0x4001e3b	            0x7512	                           jne 0x4001e4f	       966	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	IF_8
0x4001e3d	          0x4c89ff	                            mov rdi, r15	       968	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	IF_8	CALL_12
0x4001e40	      0xe800000000	                          call 0x4001e45	       968	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	IF_8	CALL_12
0x4001e45	      0xbd00000000	                              mov ebp, 0	       969	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	IF_8
0x4001e4a	      0xe9aa010000	                           jmp 0x4001ff9	       969	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	IF_8
0x4001e4f	      0xb800000000	                              mov eax, 0	       971	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	CALL_13
0x4001e54	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       971	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	CALL_13
0x4001e5b	            0xf2ae	              repne scasb al, byte [rdi]	       971	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	CALL_13
0x4001e5d	          0x4129cc	                           sub r12d, ecx	       971	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	CALL_13
0x4001e60	          0x83eb01	                              sub ebx, 1	       958	prdbg.c	FUNCTION_27	ELSE_3	FOR_1
0x4001e63	          0x83fbff	             cmp ebx, 0xffffffffffffffff	       958	prdbg.c	FUNCTION_27	ELSE_3	FOR_1
0x4001e66	            0x759a	                           jne 0x4001e02	       958	prdbg.c	FUNCTION_27	ELSE_3	FOR_1
0x4001e68	      0x418d442405	                      lea eax, [r12 + 5]	       974	prdbg.c	FUNCTION_27	ELSE_3	IF_9
0x4001e6d	      0x837c240800	                  cmp dword [rsp + 8], 0	       974	prdbg.c	FUNCTION_27	ELSE_3	IF_9
0x4001e72	        0x440f45e0	                        cmovne r12d, eax	       974	prdbg.c	FUNCTION_27	ELSE_3	IF_9
0x4001e76	          0x4489e7	                           mov edi, r12d	       979	prdbg.c	FUNCTION_27	CALL_14
0x4001e79	      0xe800000000	                          call 0x4001e7e	       979	prdbg.c	FUNCTION_27	CALL_14
0x4001e7e	          0x4889c3	                            mov rbx, rax	       979	prdbg.c	FUNCTION_27	CALL_14
0x4001e81	      0x837c240c00	                cmp dword [rsp + 0xc], 0	       980	prdbg.c	FUNCTION_27	IF_10
0x4001e86	            0x7505	                           jne 0x4001e8d	       980	prdbg.c	FUNCTION_27	IF_10
0x4001e88	          0xc60000	                       mov byte [rax], 0	       981	prdbg.c	FUNCTION_27	IF_10
0x4001e8b	            0xeb0c	                           jmp 0x4001e99	       981	prdbg.c	FUNCTION_27	IF_10
0x4001e8d	        0x488b3424	                    mov rsi, qword [rsp]	       110	string3.h	FUNCTION_107	CALL_3
0x4001e91	          0x4889c7	                            mov rdi, rax	       110	string3.h	FUNCTION_107	CALL_3
0x4001e94	      0xe800000000	                          call 0x4001e99	       110	string3.h	FUNCTION_107	CALL_3
0x4001e99	      0xb800000000	                              mov eax, 0	       148	string3.h	FUNCTION_111	CALL_3
0x4001e9e	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       148	string3.h	FUNCTION_111	CALL_3
0x4001ea5	          0x4889df	                            mov rdi, rbx	       148	string3.h	FUNCTION_111	CALL_3
0x4001ea8	            0xf2ae	              repne scasb al, byte [rdi]	       148	string3.h	FUNCTION_111	CALL_3
0x4001eaa	          0x48f7d1	                                 not rcx	       148	string3.h	FUNCTION_111	CALL_3
0x4001ead	      0x488d440bff	                lea rax, [rbx + rcx - 1]	       148	string3.h	FUNCTION_111	CALL_3
0x4001eb2	    0xc7003a3a7c20	            mov dword [rax], 0x207c3a3a 	       148	string3.h	FUNCTION_111	CALL_3
0x4001eb8	    0x66c740042800	                mov word [rax + 4], 0x28	       148	string3.h	FUNCTION_111	CALL_3
0x4001ebe	          0x4585f6	                         test r14d, r14d	       986	prdbg.c	FUNCTION_27	IF_11
0x4001ec1	            0x7813	                            js 0x4001ed6	       986	prdbg.c	FUNCTION_27	IF_11
0x4001ec3	          0x4585f6	                         test r14d, r14d	       992	prdbg.c	FUNCTION_27	ELSE_5	FOR_2
0x4001ec6	     0xf8e24010000	                           jle 0x4001ff0	       992	prdbg.c	FUNCTION_27	ELSE_5	FOR_2
0x4001ecc	          0x4d89fc	                            mov r12, r15	       992	prdbg.c	FUNCTION_27	ELSE_5	FOR_2
0x4001ecf	      0xbd00000000	                              mov ebp, 0	       992	prdbg.c	FUNCTION_27	ELSE_5	FOR_2
0x4001ed4	            0xeb68	                           jmp 0x4001f3e	       992	prdbg.c	FUNCTION_27	ELSE_5	FOR_2
0x4001ed6	      0xb800000000	                              mov eax, 0	       148	string3.h	FUNCTION_111	CALL_3
0x4001edb	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       148	string3.h	FUNCTION_111	CALL_3
0x4001ee2	          0x4889df	                            mov rdi, rbx	       148	string3.h	FUNCTION_111	CALL_3
0x4001ee5	            0xf2ae	              repne scasb al, byte [rdi]	       148	string3.h	FUNCTION_111	CALL_3
0x4001ee7	          0x4889c8	                            mov rax, rcx	       148	string3.h	FUNCTION_111	CALL_3
0x4001eea	          0x48f7d0	                                 not rax	       148	string3.h	FUNCTION_111	CALL_3
0x4001eed	      0x488d4403ff	                lea rax, [rbx + rax - 1]	       148	string3.h	FUNCTION_111	CALL_3
0x4001ef2	    0x48ba2f2a2075	          movabs rdx, 0x6f6e6b6e75202a2f	       148	string3.h	FUNCTION_111	CALL_3
0x4001efc	          0x488910	                    mov qword [rax], rdx	       148	string3.h	FUNCTION_111	CALL_3
0x4001eff	    0xc74008776e20	        mov dword [rax + 8], 0x2a206e77 	       148	string3.h	FUNCTION_111	CALL_3
0x4001f06	    0x66c7400c2f00	              mov word [rax + 0xc], 0x2f	       148	string3.h	FUNCTION_111	CALL_3
0x4001f0c	      0xe991000000	                           jmp 0x4001fa2	       148	string3.h	FUNCTION_111	CALL_3
0x4001f11	            0x85ed	                           test ebp, ebp	       994	prdbg.c	FUNCTION_27	ELSE_5	FOR_2	IF_12
0x4001f13	            0x7e25	                           jle 0x4001f3a	       994	prdbg.c	FUNCTION_27	ELSE_5	FOR_2	IF_12
0x4001f15	      0xb800000000	                              mov eax, 0	       148	string3.h	FUNCTION_111	CALL_3
0x4001f1a	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       148	string3.h	FUNCTION_111	CALL_3
0x4001f21	          0x4889df	                            mov rdi, rbx	       148	string3.h	FUNCTION_111	CALL_3
0x4001f24	            0xf2ae	              repne scasb al, byte [rdi]	       148	string3.h	FUNCTION_111	CALL_3
0x4001f26	          0x4889c8	                            mov rax, rcx	       148	string3.h	FUNCTION_111	CALL_3
0x4001f29	          0x48f7d0	                                 not rax	       148	string3.h	FUNCTION_111	CALL_3
0x4001f2c	      0x488d4403ff	                lea rax, [rbx + rax - 1]	       148	string3.h	FUNCTION_111	CALL_3
0x4001f31	      0x66c7002c20	                  mov word [rax], 0x202c	       148	string3.h	FUNCTION_111	CALL_3
0x4001f36	        0xc6400200	                   mov byte [rax + 2], 0	       148	string3.h	FUNCTION_111	CALL_3
0x4001f3a	        0x4983c408	                              add r12, 8	       148	string3.h	FUNCTION_111	CALL_3
0x4001f3e	        0x498b3424	                    mov rsi, qword [r12]	       148	string3.h	FUNCTION_111	CALL_3
0x4001f42	          0x4889df	                            mov rdi, rbx	       148	string3.h	FUNCTION_111	CALL_3
0x4001f45	      0xe800000000	                          call 0x4001f4a	       148	string3.h	FUNCTION_111	CALL_3
0x4001f4a	          0x83c501	                              add ebp, 1	       992	prdbg.c	FUNCTION_27	ELSE_5	FOR_2
0x4001f4d	          0x4139ee	                           cmp r14d, ebp	       992	prdbg.c	FUNCTION_27	ELSE_5	FOR_2
0x4001f50	            0x75bf	                           jne 0x4001f11	       992	prdbg.c	FUNCTION_27	ELSE_5	FOR_2
0x4001f52	      0xe98d000000	                           jmp 0x4001fe4	       992	prdbg.c	FUNCTION_27	ELSE_5	FOR_2
0x4001f57	      0xb800000000	                              mov eax, 0	       148	string3.h	FUNCTION_111	CALL_3
0x4001f5c	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       148	string3.h	FUNCTION_111	CALL_3
0x4001f63	          0x4889df	                            mov rdi, rbx	       148	string3.h	FUNCTION_111	CALL_3
0x4001f66	            0xf2ae	              repne scasb al, byte [rdi]	       148	string3.h	FUNCTION_111	CALL_3
0x4001f68	          0x48f7d1	                                 not rcx	       148	string3.h	FUNCTION_111	CALL_3
0x4001f6b	      0x488d440bff	                lea rax, [rbx + rcx - 1]	       148	string3.h	FUNCTION_111	CALL_3
0x4001f70	      0x66c7002c20	                  mov word [rax], 0x202c	       148	string3.h	FUNCTION_111	CALL_3
0x4001f75	        0xc6400200	                   mov byte [rax + 2], 0	       148	string3.h	FUNCTION_111	CALL_3
0x4001f79	      0xb800000000	                              mov eax, 0	       148	string3.h	FUNCTION_111	CALL_3
0x4001f7e	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       148	string3.h	FUNCTION_111	CALL_3
0x4001f85	          0x4889df	                            mov rdi, rbx	       148	string3.h	FUNCTION_111	CALL_3
0x4001f88	            0xf2ae	              repne scasb al, byte [rdi]	       148	string3.h	FUNCTION_111	CALL_3
0x4001f8a	          0x48f7d1	                                 not rcx	       148	string3.h	FUNCTION_111	CALL_3
0x4001f8d	    0xc7440bff2e2e	    mov dword [rbx + rcx - 1], 0x2e2e2e 	       148	string3.h	FUNCTION_111	CALL_3
0x4001f95	          0x4585f6	                         test r14d, r14d	      1004	prdbg.c	FUNCTION_27	ELSE_5	IF_15
0x4001f98	            0x7e08	                           jle 0x4001fa2	      1004	prdbg.c	FUNCTION_27	ELSE_5	IF_15
0x4001f9a	          0x4c89ff	                            mov rdi, r15	      1005	prdbg.c	FUNCTION_27	ELSE_5	CALL_22
0x4001f9d	      0xe800000000	                          call 0x4001fa2	      1005	prdbg.c	FUNCTION_27	ELSE_5	CALL_22
0x4001fa2	      0xb800000000	                              mov eax, 0	       148	string3.h	FUNCTION_111	CALL_3
0x4001fa7	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       148	string3.h	FUNCTION_111	CALL_3
0x4001fae	          0x4889df	                            mov rdi, rbx	       148	string3.h	FUNCTION_111	CALL_3
0x4001fb1	            0xf2ae	              repne scasb al, byte [rdi]	       148	string3.h	FUNCTION_111	CALL_3
0x4001fb3	          0x48f7d1	                                 not rcx	       148	string3.h	FUNCTION_111	CALL_3
0x4001fb6	    0x66c7440bff29	         mov word [rbx + rcx - 1], 0x29 	       148	string3.h	FUNCTION_111	CALL_3
0x4001fbd	          0x4889de	                            mov rsi, rbx	      1010	prdbg.c	FUNCTION_27	IF_16	CALL_24
0x4001fc0	          0x4c89ef	                            mov rdi, r13	      1010	prdbg.c	FUNCTION_27	IF_16	CALL_24
0x4001fc3	      0xe802e6ffff	                call sym.substitute_type	      1010	prdbg.c	FUNCTION_27	IF_16	CALL_24
0x4001fc8	            0x89c5	                            mov ebp, eax	      1010	prdbg.c	FUNCTION_27	IF_16	CALL_24
0x4001fca	            0x85c0	                           test eax, eax	      1010	prdbg.c	FUNCTION_27	IF_16	CALL_24
0x4001fcc	            0x742b	                            je 0x4001ff9	      1010	prdbg.c	FUNCTION_27	IF_16	CALL_24
0x4001fce	          0x4889df	                            mov rdi, rbx	      1013	prdbg.c	FUNCTION_27	CALL_25
0x4001fd1	      0xe800000000	                          call 0x4001fd6	      1013	prdbg.c	FUNCTION_27	CALL_25
0x4001fd6	      0xbd01000000	                              mov ebp, 1	      1015	prdbg.c	FUNCTION_27
0x4001fdb	            0xeb1c	                           jmp 0x4001ff9	      1015	prdbg.c	FUNCTION_27
0x4001fdd	      0xbd00000000	                              mov ebp, 0	       937	prdbg.c	FUNCTION_27	ELSE_1	IF_3
0x4001fe2	            0xeb15	                           jmp 0x4001ff9	       937	prdbg.c	FUNCTION_27	ELSE_1	IF_3
0x4001fe4	      0x837c240800	                  cmp dword [rsp + 8], 0	       998	prdbg.c	FUNCTION_27	ELSE_5	IF_13
0x4001fe9	            0x74af	                            je 0x4001f9a	       998	prdbg.c	FUNCTION_27	ELSE_5	IF_13
0x4001feb	      0xe967ffffff	                           jmp 0x4001f57	       998	prdbg.c	FUNCTION_27	ELSE_5	IF_13
0x4001ff0	      0x837c240800	                  cmp dword [rsp + 8], 0	       998	prdbg.c	FUNCTION_27	ELSE_5	IF_13
0x4001ff5	            0x7582	                           jne 0x4001f79	       998	prdbg.c	FUNCTION_27	ELSE_5	IF_13
0x4001ff7	            0xeba9	                           jmp 0x4001fa2	       998	prdbg.c	FUNCTION_27	ELSE_5	IF_13
0x4001ff9	            0x89e8	                            mov eax, ebp	      1016	prdbg.c	FUNCTION_27
0x4001ffb	        0x4883c418	                           add rsp, 0x18	      1016	prdbg.c	FUNCTION_27
0x4001fff	              0x5b	                                 pop rbx	      1016	prdbg.c	FUNCTION_27
0x4002000	              0x5d	                                 pop rbp	      1016	prdbg.c	FUNCTION_27
0x4002001	            0x415c	                                 pop r12	      1016	prdbg.c	FUNCTION_27
0x4002003	            0x415d	                                 pop r13	      1016	prdbg.c	FUNCTION_27
0x4002005	            0x415e	                                 pop r14	      1016	prdbg.c	FUNCTION_27
0x4002007	            0x415f	                                 pop r15	      1016	prdbg.c	FUNCTION_27
0x4002009	              0xc3	                                     ret	      1016	prdbg.c	FUNCTION_27
pr_typdef	IF,2:WHILE,0:ELSE,0:CALL,4:FOR,0:functions,0:SWITCH,0:DO,0	28
0x40007a1	              0x55	                                push rbp	      1655	prdbg.c	FUNCTION_44
0x40007a2	              0x53	                                push rbx	      1655	prdbg.c	FUNCTION_44
0x40007a3	        0x4883ec08	                              sub rsp, 8	      1655	prdbg.c	FUNCTION_44
0x40007a7	          0x4889fb	                            mov rbx, rdi	      1655	prdbg.c	FUNCTION_44
0x40007aa	      0xe81bfeffff	                call sym.substitute_type	      1659	prdbg.c	FUNCTION_44	IF_1	CALL_1
0x40007af	            0x85c0	                           test eax, eax	      1659	prdbg.c	FUNCTION_44	IF_1	CALL_1
0x40007b1	            0x7444	                            je 0x40007f7	      1659	prdbg.c	FUNCTION_44	IF_1	CALL_1
0x40007b3	          0x4889df	                            mov rdi, rbx	      1662	prdbg.c	FUNCTION_44	CALL_2
0x40007b6	      0xe8caf9ffff	                       call sym.pop_type	      1662	prdbg.c	FUNCTION_44	CALL_2
0x40007bb	          0x4889c5	                            mov rbp, rax	      1662	prdbg.c	FUNCTION_44	CALL_2
0x40007be	      0xb800000000	                              mov eax, 0	      1664	prdbg.c	FUNCTION_44	IF_2
0x40007c3	          0x4885ed	                           test rbp, rbp	      1663	prdbg.c	FUNCTION_44	IF_2
0x40007c6	            0x742f	                            je 0x40007f7	      1663	prdbg.c	FUNCTION_44	IF_2
0x40007c8	          0x4889df	                            mov rdi, rbx	      1666	prdbg.c	FUNCTION_44	CALL_3
0x40007cb	      0xe8f9f8ffff	                         call sym.indent	      1666	prdbg.c	FUNCTION_44	CALL_3
0x40007d0	          0x4889e9	                            mov rcx, rbp	        97	stdio2.h	CALL_93
0x40007d3	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_93
0x40007d8	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_93
0x40007dd	          0x488b3b	                    mov rdi, qword [rbx]	        97	stdio2.h	CALL_93
0x40007e0	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_93
0x40007e5	      0xe800000000	                          call 0x40007ea	        97	stdio2.h	CALL_93
0x40007ea	          0x4889ef	                            mov rdi, rbp	      1669	prdbg.c	FUNCTION_44	CALL_4
0x40007ed	      0xe800000000	                          call 0x40007f2	      1669	prdbg.c	FUNCTION_44	CALL_4
0x40007f2	      0xb801000000	                              mov eax, 1	      1671	prdbg.c	FUNCTION_44
0x40007f7	        0x4883c408	                              add rsp, 8	      1672	prdbg.c	FUNCTION_44
0x40007fb	              0x5b	                                 pop rbx	      1672	prdbg.c	FUNCTION_44
0x40007fc	              0x5d	                                 pop rbp	      1672	prdbg.c	FUNCTION_44
0x40007fd	              0xc3	                                     ret	      1672	prdbg.c	FUNCTION_44
pr_range_type	IF,1:WHILE,0:ELSE,0:CALL,9:FOR,0:functions,0:SWITCH,0:DO,0	70
0x40035b9	            0x4154	                                push r12	       803	prdbg.c	FUNCTION_23
0x40035bb	              0x55	                                push rbp	       803	prdbg.c	FUNCTION_23
0x40035bc	              0x53	                                push rbx	       803	prdbg.c	FUNCTION_23
0x40035bd	        0x4883ec40	                           sub rsp, 0x40	       803	prdbg.c	FUNCTION_23
0x40035c1	    0x64488b042528	                mov rax, qword fs:[0x28]	       803	prdbg.c	FUNCTION_23
0x40035ca	      0x4889442438	             mov qword [rsp + 0x38], rax	       803	prdbg.c	FUNCTION_23
0x40035cf	            0x31c0	                            xor eax, eax	       803	prdbg.c	FUNCTION_23
0x40035d1	      0x48837f1000	               cmp qword [rdi + 0x10], 0	       807	prdbg.c	FUNCTION_23	CALL_1
0x40035d6	            0x7519	                           jne 0x40035f1	       807	prdbg.c	FUNCTION_23	CALL_1
0x40035d8	      0xb900000000	                              mov ecx, 0	       807	prdbg.c	FUNCTION_23	CALL_1
0x40035dd	      0xba27030000	                          mov edx, 0x327	       807	prdbg.c	FUNCTION_23	CALL_1
0x40035e2	      0xbe00000000	                              mov esi, 0	       807	prdbg.c	FUNCTION_23	CALL_1
0x40035e7	      0xbf00000000	                              mov edi, 0	       807	prdbg.c	FUNCTION_23	CALL_1
0x40035ec	      0xe800000000	                          call 0x40035f1	       807	prdbg.c	FUNCTION_23	CALL_1
0x40035f1	          0x4889fb	                            mov rbx, rdi	       807	prdbg.c	FUNCTION_23	CALL_1
0x40035f4	          0x4989f4	                            mov r12, rsi	       807	prdbg.c	FUNCTION_23	CALL_1
0x40035f7	          0x4889d5	                            mov rbp, rdx	       807	prdbg.c	FUNCTION_23	CALL_1
0x40035fa	      0xbe00000000	                              mov esi, 0	       809	prdbg.c	FUNCTION_23	IF_1	CALL_2
0x40035ff	      0xe8c6cfffff	                call sym.substitute_type	       809	prdbg.c	FUNCTION_23	IF_1	CALL_2
0x4003604	            0x85c0	                           test eax, eax	       809	prdbg.c	FUNCTION_23	IF_1	CALL_2
0x4003606	     0xf8497000000	                            je 0x40036a3	       809	prdbg.c	FUNCTION_23	IF_1	CALL_2
0x400360c	          0x4d89e0	                             mov r8, r12	        33	stdio2.h	FUNCTION_84	CALL_1
0x400360f	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003614	      0xba16000000	                           mov edx, 0x16	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003619	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_84	CALL_1
0x400361e	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003621	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003626	      0xe800000000	                          call 0x400362b	        33	stdio2.h	FUNCTION_84	CALL_1
0x400362b	          0x4989e8	                             mov r8, rbp	        33	stdio2.h	FUNCTION_84	CALL_1
0x400362e	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003633	      0xba16000000	                           mov edx, 0x16	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003638	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_84	CALL_1
0x400363d	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003642	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003647	      0xe800000000	                          call 0x400364c	        33	stdio2.h	FUNCTION_84	CALL_1
0x400364c	      0xbe00000000	                              mov esi, 0	       815	prdbg.c	FUNCTION_23	CALL_5
0x4003651	          0x4889df	                            mov rdi, rbx	       815	prdbg.c	FUNCTION_23	CALL_5
0x4003654	      0xe81cceffff	                   call sym.prepend_type	       815	prdbg.c	FUNCTION_23	CALL_5
0x4003659	            0x85c0	                           test eax, eax	       819	prdbg.c	FUNCTION_23	CALL_9
0x400365b	            0x7446	                            je 0x40036a3	       819	prdbg.c	FUNCTION_23	CALL_9
0x400365d	      0xbe00000000	                              mov esi, 0	       816	prdbg.c	FUNCTION_23	CALL_6
0x4003662	          0x4889df	                            mov rdi, rbx	       816	prdbg.c	FUNCTION_23	CALL_6
0x4003665	      0xe8bdceffff	                    call sym.append_type	       816	prdbg.c	FUNCTION_23	CALL_6
0x400366a	            0x85c0	                           test eax, eax	       816	prdbg.c	FUNCTION_23	CALL_6
0x400366c	            0x7435	                            je 0x40036a3	       816	prdbg.c	FUNCTION_23	CALL_6
0x400366e	          0x4889e6	                            mov rsi, rsp	       817	prdbg.c	FUNCTION_23	CALL_7
0x4003671	          0x4889df	                            mov rdi, rbx	       817	prdbg.c	FUNCTION_23	CALL_7
0x4003674	      0xe8aeceffff	                    call sym.append_type	       817	prdbg.c	FUNCTION_23	CALL_7
0x4003679	            0x85c0	                           test eax, eax	       817	prdbg.c	FUNCTION_23	CALL_7
0x400367b	            0x7426	                            je 0x40036a3	       817	prdbg.c	FUNCTION_23	CALL_7
0x400367d	      0xbe00000000	                              mov esi, 0	       818	prdbg.c	FUNCTION_23	CALL_8
0x4003682	          0x4889df	                            mov rdi, rbx	       818	prdbg.c	FUNCTION_23	CALL_8
0x4003685	      0xe89dceffff	                    call sym.append_type	       818	prdbg.c	FUNCTION_23	CALL_8
0x400368a	            0x85c0	                           test eax, eax	       818	prdbg.c	FUNCTION_23	CALL_8
0x400368c	            0x7415	                            je 0x40036a3	       818	prdbg.c	FUNCTION_23	CALL_8
0x400368e	      0x488d742420	                   lea rsi, [rsp + 0x20]	       819	prdbg.c	FUNCTION_23	CALL_9
0x4003693	          0x4889df	                            mov rdi, rbx	       819	prdbg.c	FUNCTION_23	CALL_9
0x4003696	      0xe88cceffff	                    call sym.append_type	       819	prdbg.c	FUNCTION_23	CALL_9
0x400369b	            0x85c0	                           test eax, eax	       810	prdbg.c	FUNCTION_23	IF_1
0x400369d	           0xf95c0	                                setne al	       810	prdbg.c	FUNCTION_23	IF_1
0x40036a0	           0xfb6c0	                           movzx eax, al	       810	prdbg.c	FUNCTION_23	IF_1
0x40036a3	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	       820	prdbg.c	FUNCTION_23
0x40036a8	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       820	prdbg.c	FUNCTION_23
0x40036b1	            0x7405	                            je 0x40036b8	       820	prdbg.c	FUNCTION_23
0x40036b3	      0xe800000000	                          call 0x40036b8	       820	prdbg.c	FUNCTION_23
0x40036b8	        0x4883c440	                           add rsp, 0x40	       820	prdbg.c	FUNCTION_23
0x40036bc	              0x5b	                                 pop rbx	       820	prdbg.c	FUNCTION_23
0x40036bd	              0x5d	                                 pop rbp	       820	prdbg.c	FUNCTION_23
0x40036be	            0x415c	                                 pop r12	       820	prdbg.c	FUNCTION_23
0x40036c0	              0xc3	                                     ret	       820	prdbg.c	FUNCTION_23
pr_function_type	IF,10:WHILE,0:ELSE,2:CALL,18:FOR,2:functions,0:SWITCH,0:DO,0	161
0x4000857	            0x4157	                                push r15	       711	prdbg.c	FUNCTION_21
0x4000859	            0x4156	                                push r14	       711	prdbg.c	FUNCTION_21
0x400085b	            0x4155	                                push r13	       711	prdbg.c	FUNCTION_21
0x400085d	            0x4154	                                push r12	       711	prdbg.c	FUNCTION_21
0x400085f	              0x55	                                push rbp	       711	prdbg.c	FUNCTION_21
0x4000860	              0x53	                                push rbx	       711	prdbg.c	FUNCTION_21
0x4000861	        0x4883ec18	                           sub rsp, 0x18	       711	prdbg.c	FUNCTION_21
0x4000865	        0x8954240c	              mov dword [rsp + 0xc], edx	       711	prdbg.c	FUNCTION_21
0x4000869	      0x48837f1000	               cmp qword [rdi + 0x10], 0	       717	prdbg.c	FUNCTION_21	CALL_1
0x400086e	            0x7519	                           jne 0x4000889	       717	prdbg.c	FUNCTION_21	CALL_1
0x4000870	      0xb900000000	                              mov ecx, 0	       717	prdbg.c	FUNCTION_21	CALL_1
0x4000875	      0xbacd020000	                          mov edx, 0x2cd	       717	prdbg.c	FUNCTION_21	CALL_1
0x400087a	      0xbe00000000	                              mov esi, 0	       717	prdbg.c	FUNCTION_21	CALL_1
0x400087f	      0xbf00000000	                              mov edi, 0	       717	prdbg.c	FUNCTION_21	CALL_1
0x4000884	      0xe800000000	                          call 0x4000889	       717	prdbg.c	FUNCTION_21	CALL_1
0x4000889	          0x4989fc	                            mov r12, rdi	       717	prdbg.c	FUNCTION_21	CALL_1
0x400088c	          0x4189f7	                           mov r15d, esi	       717	prdbg.c	FUNCTION_21	CALL_1
0x400088f	            0x85f6	                           test esi, esi	       721	prdbg.c	FUNCTION_21	IF_1
0x4000891	     0xf8ee7010000	                           jle 0x4000a7e	       721	prdbg.c	FUNCTION_21	IF_1
0x4000897	          0x4863fe	                         movsxd rdi, esi	       730	prdbg.c	FUNCTION_21	ELSE_1	CALL_2
0x400089a	        0x48c1e703	                              shl rdi, 3	       730	prdbg.c	FUNCTION_21	ELSE_1	CALL_2
0x400089e	      0xe800000000	                          call 0x40008a3	       730	prdbg.c	FUNCTION_21	ELSE_1	CALL_2
0x40008a3	          0x4989c6	                            mov r14, rax	       730	prdbg.c	FUNCTION_21	ELSE_1	CALL_2
0x40008a6	          0x4489fb	                           mov ebx, r15d	       731	prdbg.c	FUNCTION_21	ELSE_1	FOR_1
0x40008a9	          0x83eb01	                              sub ebx, 1	       731	prdbg.c	FUNCTION_21	ELSE_1	FOR_1
0x40008ac	            0x786e	                            js 0x400091c	       731	prdbg.c	FUNCTION_21	ELSE_1	FOR_1
0x40008ae	    0x41bd0a000000	                           mov r13d, 0xa	       731	prdbg.c	FUNCTION_21	ELSE_1	FOR_1
0x40008b4	      0xbe00000000	                              mov esi, 0	       733	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	IF_2	CALL_3
0x40008b9	          0x4c89e7	                            mov rdi, r12	       733	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	IF_2	CALL_3
0x40008bc	      0xe809fdffff	                call sym.substitute_type	       733	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	IF_2	CALL_3
0x40008c1	            0x89c5	                            mov ebp, eax	       733	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	IF_2	CALL_3
0x40008c3	            0x85c0	                           test eax, eax	       733	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	IF_2	CALL_3
0x40008c5	            0x750d	                           jne 0x40008d4	       733	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	IF_2	CALL_3
0x40008c7	          0x4c89f7	                            mov rdi, r14	       735	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	IF_2	CALL_4
0x40008ca	      0xe800000000	                          call 0x40008cf	       735	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	IF_2	CALL_4
0x40008cf	      0xe9ce010000	                           jmp 0x4000aa2	       736	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	IF_2
0x40008d4	          0x4863c3	                         movsxd rax, ebx	       738	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	CALL_5
0x40008d7	        0x498d2cc6	                  lea rbp, [r14 + rax*8]	       738	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	CALL_5
0x40008db	          0x4c89e7	                            mov rdi, r12	       738	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	CALL_5
0x40008de	      0xe8a2f8ffff	                       call sym.pop_type	       738	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	CALL_5
0x40008e3	          0x4889c7	                            mov rdi, rax	       738	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	CALL_5
0x40008e6	        0x48894500	                    mov qword [rbp], rax	       738	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	CALL_5
0x40008ea	          0x4885c0	                           test rax, rax	       739	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	IF_3
0x40008ed	            0x7512	                           jne 0x4000901	       739	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	IF_3
0x40008ef	          0x4c89f7	                            mov rdi, r14	       741	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	IF_3	CALL_6
0x40008f2	      0xe800000000	                          call 0x40008f7	       741	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	IF_3	CALL_6
0x40008f7	      0xbd00000000	                              mov ebp, 0	       742	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	IF_3
0x40008fc	      0xe9a1010000	                           jmp 0x4000aa2	       742	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	IF_3
0x4000901	      0xb800000000	                              mov eax, 0	       744	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	CALL_7
0x4000906	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       744	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	CALL_7
0x400090d	            0xf2ae	              repne scasb al, byte [rdi]	       744	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	CALL_7
0x400090f	          0x4129cd	                           sub r13d, ecx	       744	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	CALL_7
0x4000912	          0x83eb01	                              sub ebx, 1	       731	prdbg.c	FUNCTION_21	ELSE_1	FOR_1
0x4000915	          0x83fbff	             cmp ebx, 0xffffffffffffffff	       731	prdbg.c	FUNCTION_21	ELSE_1	FOR_1
0x4000918	            0x759a	                           jne 0x40008b4	       731	prdbg.c	FUNCTION_21	ELSE_1	FOR_1
0x400091a	            0xeb06	                           jmp 0x4000922	       731	prdbg.c	FUNCTION_21	ELSE_1	FOR_1
0x400091c	    0x41bd0a000000	                           mov r13d, 0xa	       719	prdbg.c	FUNCTION_21
0x4000922	        0x418d4505	                      lea eax, [r13 + 5]	       747	prdbg.c	FUNCTION_21	ELSE_1	IF_4
0x4000926	      0x837c240c00	                cmp dword [rsp + 0xc], 0	       747	prdbg.c	FUNCTION_21	ELSE_1	IF_4
0x400092b	        0x440f45e8	                        cmovne r13d, eax	       747	prdbg.c	FUNCTION_21	ELSE_1	IF_4
0x400092f	          0x4489ef	                           mov edi, r13d	       752	prdbg.c	FUNCTION_21	CALL_8
0x4000932	      0xe800000000	                          call 0x4000937	       752	prdbg.c	FUNCTION_21	CALL_8
0x4000937	          0x4989c5	                            mov r13, rax	       752	prdbg.c	FUNCTION_21	CALL_8
0x400093a	    0xc700287c2920	            mov dword [rax], 0x20297c28 	        53	string3.h	FUNCTION_101	CALL_3
0x4000940	    0x66c740042800	                mov word [rax + 4], 0x28	        53	string3.h	FUNCTION_101	CALL_3
0x4000946	          0x4585ff	                         test r15d, r15d	       755	prdbg.c	FUNCTION_21	IF_5
0x4000949	            0x780a	                            js 0x4000955	       755	prdbg.c	FUNCTION_21	IF_5
0x400094b	          0x4c89f5	                            mov rbp, r14	       755	prdbg.c	FUNCTION_21	IF_5
0x400094e	      0xbb00000000	                              mov ebx, 0	       755	prdbg.c	FUNCTION_21	IF_5
0x4000953	            0xeb68	                           jmp 0x40009bd	       755	prdbg.c	FUNCTION_21	IF_5
0x4000955	      0xb800000000	                              mov eax, 0	       148	string3.h	FUNCTION_111	CALL_3
0x400095a	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       148	string3.h	FUNCTION_111	CALL_3
0x4000961	          0x4c89ef	                            mov rdi, r13	       148	string3.h	FUNCTION_111	CALL_3
0x4000964	            0xf2ae	              repne scasb al, byte [rdi]	       148	string3.h	FUNCTION_111	CALL_3
0x4000966	          0x4889c8	                            mov rax, rcx	       148	string3.h	FUNCTION_111	CALL_3
0x4000969	          0x48f7d0	                                 not rax	       148	string3.h	FUNCTION_111	CALL_3
0x400096c	      0x498d4405ff	                lea rax, [r13 + rax - 1]	       148	string3.h	FUNCTION_111	CALL_3
0x4000971	    0x48ba2f2a2075	          movabs rdx, 0x6f6e6b6e75202a2f	       148	string3.h	FUNCTION_111	CALL_3
0x400097b	          0x488910	                    mov qword [rax], rdx	       148	string3.h	FUNCTION_111	CALL_3
0x400097e	    0xc74008776e20	        mov dword [rax + 8], 0x2a206e77 	       148	string3.h	FUNCTION_111	CALL_3
0x4000985	    0x66c7400c2f00	              mov word [rax + 0xc], 0x2f	       148	string3.h	FUNCTION_111	CALL_3
0x400098b	      0xe99d000000	                           jmp 0x4000a2d	       148	string3.h	FUNCTION_111	CALL_3
0x4000990	            0x85db	                           test ebx, ebx	       763	prdbg.c	FUNCTION_21	ELSE_2	FOR_2	IF_6
0x4000992	            0x7e25	                           jle 0x40009b9	       763	prdbg.c	FUNCTION_21	ELSE_2	FOR_2	IF_6
0x4000994	      0xb800000000	                              mov eax, 0	       148	string3.h	FUNCTION_111	CALL_3
0x4000999	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       148	string3.h	FUNCTION_111	CALL_3
0x40009a0	          0x4c89ef	                            mov rdi, r13	       148	string3.h	FUNCTION_111	CALL_3
0x40009a3	            0xf2ae	              repne scasb al, byte [rdi]	       148	string3.h	FUNCTION_111	CALL_3
0x40009a5	          0x4889c8	                            mov rax, rcx	       148	string3.h	FUNCTION_111	CALL_3
0x40009a8	          0x48f7d0	                                 not rax	       148	string3.h	FUNCTION_111	CALL_3
0x40009ab	      0x498d4405ff	                lea rax, [r13 + rax - 1]	       148	string3.h	FUNCTION_111	CALL_3
0x40009b0	      0x66c7002c20	                  mov word [rax], 0x202c	       148	string3.h	FUNCTION_111	CALL_3
0x40009b5	        0xc6400200	                   mov byte [rax + 2], 0	       148	string3.h	FUNCTION_111	CALL_3
0x40009b9	        0x4883c508	                              add rbp, 8	       148	string3.h	FUNCTION_111	CALL_3
0x40009bd	        0x488b7500	                    mov rsi, qword [rbp]	       148	string3.h	FUNCTION_111	CALL_3
0x40009c1	          0x4c89ef	                            mov rdi, r13	       148	string3.h	FUNCTION_111	CALL_3
0x40009c4	      0xe800000000	                          call 0x40009c9	       148	string3.h	FUNCTION_111	CALL_3
0x40009c9	          0x83c301	                              add ebx, 1	       761	prdbg.c	FUNCTION_21	ELSE_2	FOR_2
0x40009cc	          0x4139df	                           cmp r15d, ebx	       761	prdbg.c	FUNCTION_21	ELSE_2	FOR_2
0x40009cf	            0x75bf	                           jne 0x4000990	       761	prdbg.c	FUNCTION_21	ELSE_2	FOR_2
0x40009d1	      0xe99c000000	                           jmp 0x4000a72	       761	prdbg.c	FUNCTION_21	ELSE_2	FOR_2
0x40009d6	      0xb800000000	                              mov eax, 0	       148	string3.h	FUNCTION_111	CALL_3
0x40009db	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       148	string3.h	FUNCTION_111	CALL_3
0x40009e2	          0x4c89ef	                            mov rdi, r13	       148	string3.h	FUNCTION_111	CALL_3
0x40009e5	            0xf2ae	              repne scasb al, byte [rdi]	       148	string3.h	FUNCTION_111	CALL_3
0x40009e7	          0x4889c8	                            mov rax, rcx	       148	string3.h	FUNCTION_111	CALL_3
0x40009ea	          0x48f7d0	                                 not rax	       148	string3.h	FUNCTION_111	CALL_3
0x40009ed	      0x498d4405ff	                lea rax, [r13 + rax - 1]	       148	string3.h	FUNCTION_111	CALL_3
0x40009f2	      0x66c7002c20	                  mov word [rax], 0x202c	       148	string3.h	FUNCTION_111	CALL_3
0x40009f7	        0xc6400200	                   mov byte [rax + 2], 0	       148	string3.h	FUNCTION_111	CALL_3
0x40009fb	            0xeb06	                           jmp 0x4000a03	       148	string3.h	FUNCTION_111	CALL_3
0x40009fd	    0x41be00000000	                             mov r14d, 0	       723	prdbg.c	FUNCTION_21	IF_1
0x4000a03	      0xb800000000	                              mov eax, 0	       148	string3.h	FUNCTION_111	CALL_3
0x4000a08	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       148	string3.h	FUNCTION_111	CALL_3
0x4000a0f	          0x4c89ef	                            mov rdi, r13	       148	string3.h	FUNCTION_111	CALL_3
0x4000a12	            0xf2ae	              repne scasb al, byte [rdi]	       148	string3.h	FUNCTION_111	CALL_3
0x4000a14	          0x48f7d1	                                 not rcx	       148	string3.h	FUNCTION_111	CALL_3
0x4000a17	    0x41c7440dff2e	    mov dword [r13 + rcx - 1], 0x2e2e2e 	       148	string3.h	FUNCTION_111	CALL_3
0x4000a20	          0x4585ff	                         test r15d, r15d	       773	prdbg.c	FUNCTION_21	ELSE_2	IF_9
0x4000a23	            0x7e08	                           jle 0x4000a2d	       773	prdbg.c	FUNCTION_21	ELSE_2	IF_9
0x4000a25	          0x4c89f7	                            mov rdi, r14	       774	prdbg.c	FUNCTION_21	ELSE_2	CALL_15
0x4000a28	      0xe800000000	                          call 0x4000a2d	       774	prdbg.c	FUNCTION_21	ELSE_2	CALL_15
0x4000a2d	      0xb800000000	                              mov eax, 0	       148	string3.h	FUNCTION_111	CALL_3
0x4000a32	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       148	string3.h	FUNCTION_111	CALL_3
0x4000a39	          0x4c89ef	                            mov rdi, r13	       148	string3.h	FUNCTION_111	CALL_3
0x4000a3c	            0xf2ae	              repne scasb al, byte [rdi]	       148	string3.h	FUNCTION_111	CALL_3
0x4000a3e	          0x48f7d1	                                 not rcx	       148	string3.h	FUNCTION_111	CALL_3
0x4000a41	    0x6641c7440dff	         mov word [r13 + rcx - 1], 0x29 	       148	string3.h	FUNCTION_111	CALL_3
0x4000a49	          0x4c89ee	                            mov rsi, r13	       779	prdbg.c	FUNCTION_21	IF_10	CALL_17
0x4000a4c	          0x4c89e7	                            mov rdi, r12	       779	prdbg.c	FUNCTION_21	IF_10	CALL_17
0x4000a4f	      0xe876fbffff	                call sym.substitute_type	       779	prdbg.c	FUNCTION_21	IF_10	CALL_17
0x4000a54	            0x89c5	                            mov ebp, eax	       779	prdbg.c	FUNCTION_21	IF_10	CALL_17
0x4000a56	            0x85c0	                           test eax, eax	       779	prdbg.c	FUNCTION_21	IF_10	CALL_17
0x4000a58	            0x7448	                            je 0x4000aa2	       779	prdbg.c	FUNCTION_21	IF_10	CALL_17
0x4000a5a	          0x4c89ef	                            mov rdi, r13	       782	prdbg.c	FUNCTION_21	CALL_18
0x4000a5d	      0xe800000000	                          call 0x4000a62	       782	prdbg.c	FUNCTION_21	CALL_18
0x4000a62	      0xbd01000000	                              mov ebp, 1	       784	prdbg.c	FUNCTION_21
0x4000a67	            0xeb39	                           jmp 0x4000aa2	       784	prdbg.c	FUNCTION_21
0x4000a69	      0x837c240c00	                cmp dword [rsp + 0xc], 0	       767	prdbg.c	FUNCTION_21	ELSE_2	IF_7
0x4000a6e	            0x758d	                           jne 0x40009fd	       767	prdbg.c	FUNCTION_21	ELSE_2	IF_7
0x4000a70	            0xebbb	                           jmp 0x4000a2d	       767	prdbg.c	FUNCTION_21	ELSE_2	IF_7
0x4000a72	      0x837c240c00	                cmp dword [rsp + 0xc], 0	       767	prdbg.c	FUNCTION_21	ELSE_2	IF_7
0x4000a77	            0x74ac	                            je 0x4000a25	       767	prdbg.c	FUNCTION_21	ELSE_2	IF_7
0x4000a79	      0xe958ffffff	                           jmp 0x40009d6	       767	prdbg.c	FUNCTION_21	ELSE_2	IF_7
0x4000a7e	      0xbf19000000	                           mov edi, 0x19	       752	prdbg.c	FUNCTION_21	CALL_8
0x4000a83	      0xe800000000	                          call 0x4000a88	       752	prdbg.c	FUNCTION_21	CALL_8
0x4000a88	          0x4989c5	                            mov r13, rax	       752	prdbg.c	FUNCTION_21	CALL_8
0x4000a8b	    0xc700287c2920	            mov dword [rax], 0x20297c28 	        53	string3.h	FUNCTION_101	CALL_3
0x4000a91	    0x66c740042800	                mov word [rax + 4], 0x28	        53	string3.h	FUNCTION_101	CALL_3
0x4000a97	          0x4585ff	                         test r15d, r15d	       755	prdbg.c	FUNCTION_21	IF_5
0x4000a9a	     0xf88b5feffff	                            js 0x4000955	       755	prdbg.c	FUNCTION_21	IF_5
0x4000aa0	            0xebc7	                           jmp 0x4000a69	       755	prdbg.c	FUNCTION_21	IF_5
0x4000aa2	            0x89e8	                            mov eax, ebp	       785	prdbg.c	FUNCTION_21
0x4000aa4	        0x4883c418	                           add rsp, 0x18	       785	prdbg.c	FUNCTION_21
0x4000aa8	              0x5b	                                 pop rbx	       785	prdbg.c	FUNCTION_21
0x4000aa9	              0x5d	                                 pop rbp	       785	prdbg.c	FUNCTION_21
0x4000aaa	            0x415c	                                 pop r12	       785	prdbg.c	FUNCTION_21
0x4000aac	            0x415d	                                 pop r13	       785	prdbg.c	FUNCTION_21
0x4000aae	            0x415e	                                 pop r14	       785	prdbg.c	FUNCTION_21
0x4000ab0	            0x415f	                                 pop r15	       785	prdbg.c	FUNCTION_21
0x4000ab2	              0xc3	                                     ret	       785	prdbg.c	FUNCTION_21
append_type	IF,1:WHILE,0:ELSE,0:CALL,5:FOR,0:functions,0:SWITCH,0:DO,0	49
0x4000527	          0x4885f6	                           test rsi, rsi	       377	prdbg.c	FUNCTION_5	IF_1
0x400052a	     0xf8489000000	                            je 0x40005b9	       377	prdbg.c	FUNCTION_5	IF_1
0x4000530	            0x4155	                                push r13	       374	prdbg.c	FUNCTION_5
0x4000532	            0x4154	                                push r12	       374	prdbg.c	FUNCTION_5
0x4000534	              0x55	                                push rbp	       374	prdbg.c	FUNCTION_5
0x4000535	              0x53	                                push rbx	       374	prdbg.c	FUNCTION_5
0x4000536	        0x4883ec08	                              sub rsp, 8	       374	prdbg.c	FUNCTION_5
0x400053a	          0x4889f3	                            mov rbx, rsi	       374	prdbg.c	FUNCTION_5
0x400053d	          0x4889fd	                            mov rbp, rdi	       374	prdbg.c	FUNCTION_5
0x4000540	        0x4c8b6f10	            mov r13, qword [rdi + 0x10] 	       380	prdbg.c	FUNCTION_5	CALL_1
0x4000544	          0x4d85ed	                           test r13, r13	       380	prdbg.c	FUNCTION_5	CALL_1
0x4000547	            0x7519	                           jne 0x4000562	       380	prdbg.c	FUNCTION_5	CALL_1
0x4000549	      0xb900000000	                              mov ecx, 0	       380	prdbg.c	FUNCTION_5	CALL_1
0x400054e	      0xba7c010000	                          mov edx, 0x17c	       380	prdbg.c	FUNCTION_5	CALL_1
0x4000553	      0xbe00000000	                              mov esi, 0	       380	prdbg.c	FUNCTION_5	CALL_1
0x4000558	      0xbf00000000	                              mov edi, 0	       380	prdbg.c	FUNCTION_5	CALL_1
0x400055d	      0xe800000000	                          call 0x4000562	       380	prdbg.c	FUNCTION_5	CALL_1
0x4000562	        0x498b5508	                mov rdx, qword [r13 + 8]	       382	prdbg.c	FUNCTION_5	CALL_2
0x4000566	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	       382	prdbg.c	FUNCTION_5	CALL_2
0x400056d	      0xb800000000	                              mov eax, 0	       382	prdbg.c	FUNCTION_5	CALL_2
0x4000572	          0x4889f1	                            mov rcx, rsi	       382	prdbg.c	FUNCTION_5	CALL_2
0x4000575	          0x4889d7	                            mov rdi, rdx	       382	prdbg.c	FUNCTION_5	CALL_2
0x4000578	            0xf2ae	              repne scasb al, byte [rdi]	       382	prdbg.c	FUNCTION_5	CALL_2
0x400057a	          0x48f7d1	                                 not rcx	       382	prdbg.c	FUNCTION_5	CALL_2
0x400057d	        0x448d61ff	                     lea r12d, [rcx - 1]	       382	prdbg.c	FUNCTION_5	CALL_2
0x4000581	          0x4889f1	                            mov rcx, rsi	       384	prdbg.c	FUNCTION_5	CALL_4
0x4000584	          0x4889df	                            mov rdi, rbx	       384	prdbg.c	FUNCTION_5	CALL_4
0x4000587	            0xf2ae	              repne scasb al, byte [rdi]	       384	prdbg.c	FUNCTION_5	CALL_4
0x4000589	          0x4889c8	                            mov rax, rcx	       384	prdbg.c	FUNCTION_5	CALL_4
0x400058c	          0x48f7d0	                                 not rax	       384	prdbg.c	FUNCTION_5	CALL_4
0x400058f	        0x4a8d3420	                    lea rsi, [rax + r12]	       383	prdbg.c	FUNCTION_5	CALL_3
0x4000593	          0x4889d7	                            mov rdi, rdx	       383	prdbg.c	FUNCTION_5	CALL_3
0x4000596	      0xe800000000	                          call 0x400059b	       383	prdbg.c	FUNCTION_5	CALL_3
0x400059b	        0x49894508	                mov qword [r13 + 8], rax	       383	prdbg.c	FUNCTION_5	CALL_3
0x400059f	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       385	prdbg.c	FUNCTION_5	CALL_5
0x40005a3	          0x4c89e7	                            mov rdi, r12	       110	string3.h	FUNCTION_107	CALL_3
0x40005a6	        0x48037808	                add rdi, qword [rax + 8]	       110	string3.h	FUNCTION_107	CALL_3
0x40005aa	          0x4889de	                            mov rsi, rbx	       110	string3.h	FUNCTION_107	CALL_3
0x40005ad	      0xe800000000	                          call 0x40005b2	       110	string3.h	FUNCTION_107	CALL_3
0x40005b2	      0xb801000000	                              mov eax, 1	       387	prdbg.c	FUNCTION_5
0x40005b7	            0xeb06	                           jmp 0x40005bf	       387	prdbg.c	FUNCTION_5
0x40005b9	      0xb800000000	                              mov eax, 0	       378	prdbg.c	FUNCTION_5	IF_1
0x40005be	              0xc3	                                     ret	       378	prdbg.c	FUNCTION_5	IF_1
0x40005bf	        0x4883c408	                              add rsp, 8	       388	prdbg.c	FUNCTION_5
0x40005c3	              0x5b	                                 pop rbx	       388	prdbg.c	FUNCTION_5
0x40005c4	              0x5d	                                 pop rbp	       388	prdbg.c	FUNCTION_5
0x40005c5	            0x415c	                                 pop r12	       388	prdbg.c	FUNCTION_5
0x40005c7	            0x415d	                                 pop r13	       388	prdbg.c	FUNCTION_5
0x40005c9	              0xc3	                                     ret	       388	prdbg.c	FUNCTION_5
pr_start_source	IF,0:WHILE,0:ELSE,0:CALL,1:FOR,0:functions,0:SWITCH,0:DO,0	17
0x40002b2	        0x4883ec08	                              sub rsp, 8	       548	prdbg.c	FUNCTION_12
0x40002b6	        0x837f0800	                  cmp dword [rdi + 8], 0	       551	prdbg.c	FUNCTION_12	CALL_1
0x40002ba	            0x7419	                            je 0x40002d5	       551	prdbg.c	FUNCTION_12	CALL_1
0x40002bc	      0xb900000000	                              mov ecx, 0	       551	prdbg.c	FUNCTION_12	CALL_1
0x40002c1	      0xba27020000	                          mov edx, 0x227	       551	prdbg.c	FUNCTION_12	CALL_1
0x40002c6	      0xbe00000000	                              mov esi, 0	       551	prdbg.c	FUNCTION_12	CALL_1
0x40002cb	      0xbf00000000	                              mov edi, 0	       551	prdbg.c	FUNCTION_12	CALL_1
0x40002d0	      0xe800000000	                          call 0x40002d5	       551	prdbg.c	FUNCTION_12	CALL_1
0x40002d5	          0x4889f1	                            mov rcx, rsi	        97	stdio2.h	CALL_93
0x40002d8	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_93
0x40002dd	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_93
0x40002e2	          0x488b3f	                    mov rdi, qword [rdi]	        97	stdio2.h	CALL_93
0x40002e5	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_93
0x40002ea	      0xe800000000	                          call 0x40002ef	        97	stdio2.h	CALL_93
0x40002ef	      0xb801000000	                              mov eax, 1	       556	prdbg.c	FUNCTION_12
0x40002f4	        0x4883c408	                              add rsp, 8	       556	prdbg.c	FUNCTION_12
0x40002f8	              0xc3	                                     ret	       556	prdbg.c	FUNCTION_12
tg_end_block	IF,0:WHILE,0:ELSE,0:CALL,0:FOR,0:functions,0:SWITCH,0:DO,0	2
0x40000c3	      0xb801000000	                              mov eax, 1	      2810	prdbg.c	FUNCTION_82
0x40000c8	              0xc3	                                     ret	      2810	prdbg.c	FUNCTION_82
tg_enum_type	IF,3:WHILE,0:ELSE,0:CALL,2:FOR,1:functions,0:SWITCH,0:DO,0	81
0x40030e0	            0x4157	                                push r15	      1992	prdbg.c	FUNCTION_60
0x40030e2	            0x4156	                                push r14	      1992	prdbg.c	FUNCTION_60
0x40030e4	            0x4155	                                push r13	      1992	prdbg.c	FUNCTION_60
0x40030e6	            0x4154	                                push r12	      1992	prdbg.c	FUNCTION_60
0x40030e8	              0x55	                                push rbp	      1992	prdbg.c	FUNCTION_60
0x40030e9	              0x53	                                push rbx	      1992	prdbg.c	FUNCTION_60
0x40030ea	        0x4883ec38	                           sub rsp, 0x38	      1992	prdbg.c	FUNCTION_60
0x40030ee	          0x4989fc	                            mov r12, rdi	      1992	prdbg.c	FUNCTION_60
0x40030f1	          0x4889f3	                            mov rbx, rsi	      1992	prdbg.c	FUNCTION_60
0x40030f4	      0x4889742408	                mov qword [rsp + 8], rsi	      1992	prdbg.c	FUNCTION_60
0x40030f9	          0x4989d6	                            mov r14, rdx	      1992	prdbg.c	FUNCTION_60
0x40030fc	          0x4989cf	                            mov r15, rcx	      1992	prdbg.c	FUNCTION_60
0x40030ff	    0x64488b042528	                mov rax, qword fs:[0x28]	      1992	prdbg.c	FUNCTION_60
0x4003108	      0x4889442428	             mov qword [rsp + 0x28], rax	      1992	prdbg.c	FUNCTION_60
0x400310d	            0x31c0	                            xor eax, eax	      1992	prdbg.c	FUNCTION_60
0x400310f	      0xe83bfeffff	                   call sym.pr_enum_type	      1998	prdbg.c	FUNCTION_60	IF_1	CALL_1
0x4003114	            0x85c0	                           test eax, eax	      1998	prdbg.c	FUNCTION_60	IF_1	CALL_1
0x4003116	     0xf84ae000000	                            je 0x40031ca	      1998	prdbg.c	FUNCTION_60	IF_1	CALL_1
0x400311c	          0x4885db	                           test rbx, rbx	      2001	prdbg.c	FUNCTION_60
0x400311f	     0xf85b7000000	                           jne 0x40031dc	      2001	prdbg.c	FUNCTION_60
0x4003125	    0x48c744240800	                  mov qword [rsp + 8], 0	      2001	prdbg.c	FUNCTION_60
0x400312e	          0x4d85f6	                           test r14, r14	      2008	prdbg.c	FUNCTION_60	IF_3
0x4003131	     0xf8487000000	                            je 0x40031be	      2008	prdbg.c	FUNCTION_60	IF_3
0x4003137	        0x49833e00	                      cmp qword [r14], 0	      2010	prdbg.c	FUNCTION_60	IF_3	FOR_1
0x400313b	     0xf8484000000	                            je 0x40031c5	      2010	prdbg.c	FUNCTION_60	IF_3	FOR_1
0x4003141	          0x4c89f5	                            mov rbp, r14	      2010	prdbg.c	FUNCTION_60	IF_3	FOR_1
0x4003144	      0xb800000000	                              mov eax, 0	      2010	prdbg.c	FUNCTION_60	IF_3	FOR_1
0x4003149	      0xbb00000000	                              mov ebx, 0	      2010	prdbg.c	FUNCTION_60	IF_3	FOR_1
0x400314e	      0x4c8d6c2410	                   lea r13, [rsp + 0x10]	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003153	        0x4d8b0407	               mov r8, qword [r15 + rax]	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003157	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x400315c	      0xba16000000	                           mov edx, 0x16	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003161	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003166	          0x4c89ef	                            mov rdi, r13	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003169	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x400316e	      0xe800000000	                          call 0x4003173	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003173	        0x4883ec08	                              sub rsp, 8	        97	stdio2.h	CALL_93
0x4003177	            0x4155	                                push r13	        97	stdio2.h	CALL_93
0x4003179	      0x4c8b4c2418	              mov r9, qword [rsp + 0x18]	        97	stdio2.h	CALL_93
0x400317e	      0x4d8b442420	              mov r8, qword [r12 + 0x20]	        97	stdio2.h	CALL_93
0x4003183	        0x488b4d00	                    mov rcx, qword [rbp]	        97	stdio2.h	CALL_93
0x4003187	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_93
0x400318c	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_93
0x4003191	        0x498b3c24	                    mov rdi, qword [r12]	        97	stdio2.h	CALL_93
0x4003195	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_93
0x400319a	      0xe800000000	                          call 0x400319f	        97	stdio2.h	CALL_93
0x400319f	          0x83c301	                              add ebx, 1	      2010	prdbg.c	FUNCTION_60	IF_3	FOR_1
0x40031a2	            0x89d8	                            mov eax, ebx	      2010	prdbg.c	FUNCTION_60	IF_3	FOR_1
0x40031a4	        0x48c1e003	                              shl rax, 3	      2010	prdbg.c	FUNCTION_60	IF_3	FOR_1
0x40031a8	        0x498d2c06	                    lea rbp, [r14 + rax]	      2010	prdbg.c	FUNCTION_60	IF_3	FOR_1
0x40031ac	        0x4883c410	                           add rsp, 0x10	      2010	prdbg.c	FUNCTION_60	IF_3	FOR_1
0x40031b0	      0x48837d0000	                      cmp qword [rbp], 0	      2010	prdbg.c	FUNCTION_60	IF_3	FOR_1
0x40031b5	            0x759c	                           jne 0x4003153	      2010	prdbg.c	FUNCTION_60	IF_3	FOR_1
0x40031b7	      0xb801000000	                              mov eax, 1	      2018	prdbg.c	FUNCTION_60
0x40031bc	            0xeb0c	                           jmp 0x40031ca	      2018	prdbg.c	FUNCTION_60
0x40031be	      0xb801000000	                              mov eax, 1	      2018	prdbg.c	FUNCTION_60
0x40031c3	            0xeb05	                           jmp 0x40031ca	      2018	prdbg.c	FUNCTION_60
0x40031c5	      0xb801000000	                              mov eax, 1	      2018	prdbg.c	FUNCTION_60
0x40031ca	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      2019	prdbg.c	FUNCTION_60
0x40031cf	    0x644833142528	                xor rdx, qword fs:[0x28]	      2019	prdbg.c	FUNCTION_60
0x40031d8	            0x7437	                            je 0x4003211	      2019	prdbg.c	FUNCTION_60
0x40031da	            0xeb30	                           jmp 0x400320c	      2019	prdbg.c	FUNCTION_60
0x40031dc	      0x498b442410	            mov rax, qword [r12 + 0x10] 	      2004	prdbg.c	FUNCTION_60	IF_2
0x40031e1	        0x4c8b4808	                 mov r9, qword [rax + 8]	        97	stdio2.h	CALL_93
0x40031e5	      0x4d8b442420	              mov r8, qword [r12 + 0x20]	        97	stdio2.h	CALL_93
0x40031ea	      0x488b4c2408	                mov rcx, qword [rsp + 8]	        97	stdio2.h	CALL_93
0x40031ef	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_93
0x40031f4	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_93
0x40031f9	        0x498b3c24	                    mov rdi, qword [r12]	        97	stdio2.h	CALL_93
0x40031fd	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_93
0x4003202	      0xe800000000	                          call 0x4003207	        97	stdio2.h	CALL_93
0x4003207	      0xe922ffffff	                           jmp 0x400312e	        97	stdio2.h	CALL_93
0x400320c	      0xe800000000	                          call 0x4003211	      2019	prdbg.c	FUNCTION_60
0x4003211	        0x4883c438	                           add rsp, 0x38	      2019	prdbg.c	FUNCTION_60
0x4003215	              0x5b	                                 pop rbx	      2019	prdbg.c	FUNCTION_60
0x4003216	              0x5d	                                 pop rbp	      2019	prdbg.c	FUNCTION_60
0x4003217	            0x415c	                                 pop r12	      2019	prdbg.c	FUNCTION_60
0x4003219	            0x415d	                                 pop r13	      2019	prdbg.c	FUNCTION_60
0x400321b	            0x415e	                                 pop r14	      2019	prdbg.c	FUNCTION_60
0x400321d	            0x415f	                                 pop r15	      2019	prdbg.c	FUNCTION_60
0x400321f	              0xc3	                                     ret	      2019	prdbg.c	FUNCTION_60
push_type	IF,1:WHILE,0:ELSE,0:CALL,3:FOR,0:functions,0:SWITCH,0:DO,0	35
0x4001290	      0xb800000000	                              mov eax, 0	       339	prdbg.c	FUNCTION_3	IF_1
0x4001295	          0x4885f6	                           test rsi, rsi	       338	prdbg.c	FUNCTION_3	IF_1
0x4001298	            0x7475	                            je 0x400130f	       338	prdbg.c	FUNCTION_3	IF_1
0x400129a	            0x4154	                                push r12	       335	prdbg.c	FUNCTION_3
0x400129c	              0x55	                                push rbp	       335	prdbg.c	FUNCTION_3
0x400129d	              0x53	                                push rbx	       335	prdbg.c	FUNCTION_3
0x400129e	          0x4889f5	                            mov rbp, rsi	       335	prdbg.c	FUNCTION_3
0x40012a1	          0x4989fc	                            mov r12, rdi	       335	prdbg.c	FUNCTION_3
0x40012a4	      0xbf38000000	                           mov edi, 0x38	       341	prdbg.c	FUNCTION_3	CALL_1
0x40012a9	      0xe800000000	                          call 0x40012ae	       341	prdbg.c	FUNCTION_3	CALL_1
0x40012ae	          0x4889c3	                            mov rbx, rax	       341	prdbg.c	FUNCTION_3	CALL_1
0x40012b1	    0x48c700000000	                      mov qword [rax], 0	        90	string3.h	FUNCTION_104	CALL_6
0x40012b8	    0x48c740300000	               mov qword [rax + 0x30], 0	        90	string3.h	FUNCTION_104	CALL_6
0x40012c0	        0x488d7808	                      lea rdi, [rax + 8]	        90	string3.h	FUNCTION_104	CALL_6
0x40012c4	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_104	CALL_6
0x40012c8	          0x4889c1	                            mov rcx, rax	        90	string3.h	FUNCTION_104	CALL_6
0x40012cb	          0x4829f9	                            sub rcx, rdi	        90	string3.h	FUNCTION_104	CALL_6
0x40012ce	          0x83c138	                           add ecx, 0x38	        90	string3.h	FUNCTION_104	CALL_6
0x40012d1	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_104	CALL_6
0x40012d4	            0x89c9	                            mov ecx, ecx	        90	string3.h	FUNCTION_104	CALL_6
0x40012d6	      0xb800000000	                              mov eax, 0	        90	string3.h	FUNCTION_104	CALL_6
0x40012db	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_104	CALL_6
0x40012de	          0x4889ef	                            mov rdi, rbp	       344	prdbg.c	FUNCTION_3	CALL_3
0x40012e1	      0xe800000000	                          call 0x40012e6	       344	prdbg.c	FUNCTION_3	CALL_3
0x40012e6	        0x48894308	                mov qword [rbx + 8], rax	       344	prdbg.c	FUNCTION_3	CALL_3
0x40012ea	    0xc74310030000	               mov dword [rbx + 0x10], 3	       345	prdbg.c	FUNCTION_3
0x40012f1	    0x48c743180000	               mov qword [rbx + 0x18], 0	       346	prdbg.c	FUNCTION_3
0x40012f9	      0x498b442410	            mov rax, qword [r12 + 0x10] 	       347	prdbg.c	FUNCTION_3
0x40012fe	          0x488903	                    mov qword [rbx], rax	       347	prdbg.c	FUNCTION_3
0x4001301	      0x49895c2410	             mov qword [r12 + 0x10], rbx	       348	prdbg.c	FUNCTION_3
0x4001306	      0xb801000000	                              mov eax, 1	       350	prdbg.c	FUNCTION_3
0x400130b	              0x5b	                                 pop rbx	       351	prdbg.c	FUNCTION_3
0x400130c	              0x5d	                                 pop rbp	       351	prdbg.c	FUNCTION_3
0x400130d	            0x415c	                                 pop r12	       351	prdbg.c	FUNCTION_3
0x400130f	            0xf3c3	                                     ret	       351	prdbg.c	FUNCTION_3
tg_start_source	IF,0:WHILE,0:ELSE,0:CALL,2:FOR,0:functions,0:SWITCH,0:DO,0	15
0x4002849	              0x55	                                push rbp	      1977	prdbg.c	FUNCTION_59
0x400284a	              0x53	                                push rbx	      1977	prdbg.c	FUNCTION_59
0x400284b	        0x4883ec08	                              sub rsp, 8	      1977	prdbg.c	FUNCTION_59
0x400284f	          0x4889fb	                            mov rbx, rdi	      1977	prdbg.c	FUNCTION_59
0x4002852	          0x4889f5	                            mov rbp, rsi	      1977	prdbg.c	FUNCTION_59
0x4002855	        0x488b7f20	            mov rdi, qword [rdi + 0x20] 	      1980	prdbg.c	FUNCTION_59	CALL_1
0x4002859	      0xe800000000	                          call 0x400285e	      1980	prdbg.c	FUNCTION_59	CALL_1
0x400285e	          0x4889ef	                            mov rdi, rbp	      1982	prdbg.c	FUNCTION_59	CALL_2
0x4002861	      0xe800000000	                          call 0x4002866	      1982	prdbg.c	FUNCTION_59	CALL_2
0x4002866	        0x48894320	             mov qword [rbx + 0x20], rax	      1982	prdbg.c	FUNCTION_59	CALL_2
0x400286a	      0xb801000000	                              mov eax, 1	      1985	prdbg.c	FUNCTION_59
0x400286f	        0x4883c408	                              add rsp, 8	      1985	prdbg.c	FUNCTION_59
0x4002873	              0x5b	                                 pop rbx	      1985	prdbg.c	FUNCTION_59
0x4002874	              0x5d	                                 pop rbp	      1985	prdbg.c	FUNCTION_59
0x4002875	              0xc3	                                     ret	      1985	prdbg.c	FUNCTION_59
tg_start_class_type	IF,10:WHILE,0:ELSE,2:CALL,6:FOR,0:functions,0:SWITCH,0:DO,0	104
0x4001ab3	            0x4157	                                push r15	      2114	prdbg.c	FUNCTION_65
0x4001ab5	            0x4156	                                push r14	      2114	prdbg.c	FUNCTION_65
0x4001ab7	            0x4155	                                push r13	      2114	prdbg.c	FUNCTION_65
0x4001ab9	            0x4154	                                push r12	      2114	prdbg.c	FUNCTION_65
0x4001abb	              0x55	                                push rbp	      2114	prdbg.c	FUNCTION_65
0x4001abc	              0x53	                                push rbx	      2114	prdbg.c	FUNCTION_65
0x4001abd	        0x4883ec38	                           sub rsp, 0x38	      2114	prdbg.c	FUNCTION_65
0x4001ac1	          0x4889fb	                            mov rbx, rdi	      2114	prdbg.c	FUNCTION_65
0x4001ac4	          0x4889f5	                            mov rbp, rsi	      2114	prdbg.c	FUNCTION_65
0x4001ac7	        0x89542404	                mov dword [rsp + 4], edx	      2114	prdbg.c	FUNCTION_65
0x4001acb	          0x4189cf	                           mov r15d, ecx	      2114	prdbg.c	FUNCTION_65
0x4001ace	          0x4589c6	                           mov r14d, r8d	      2114	prdbg.c	FUNCTION_65
0x4001ad1	          0x4589cc	                           mov r12d, r9d	      2114	prdbg.c	FUNCTION_65
0x4001ad4	    0x64488b042528	                mov rax, qword fs:[0x28]	      2114	prdbg.c	FUNCTION_65
0x4001add	      0x4889442428	             mov qword [rsp + 0x28], rax	      2114	prdbg.c	FUNCTION_65
0x4001ae2	            0x31c0	                            xor eax, eax	      2114	prdbg.c	FUNCTION_65
0x4001ae4	        0x83470802	                  add dword [rdi + 8], 2	      2119	prdbg.c	FUNCTION_65
0x4001ae8	          0x4585c9	                           test r9d, r9d	      2121	prdbg.c	FUNCTION_65	IF_1
0x4001aeb	        0x410f95c5	                              setne r13b	      2121	prdbg.c	FUNCTION_65	IF_1
0x4001aef	      0x837c247000	               cmp dword [rsp + 0x70], 0	      2121	prdbg.c	FUNCTION_65	IF_1
0x4001af4	            0x7519	                           jne 0x4001b0f	      2121	prdbg.c	FUNCTION_65	IF_1
0x4001af6	          0x4584ed	                         test r13b, r13b	      2121	prdbg.c	FUNCTION_65	IF_1
0x4001af9	            0x7414	                            je 0x4001b0f	      2121	prdbg.c	FUNCTION_65	IF_1
0x4001afb	      0xe885e6ffff	                       call sym.pop_type	      2123	prdbg.c	FUNCTION_65	IF_1	CALL_1
0x4001b00	      0x4889442408	                mov qword [rsp + 8], rax	      2123	prdbg.c	FUNCTION_65	IF_1	CALL_1
0x4001b05	          0x4885c0	                           test rax, rax	      2124	prdbg.c	FUNCTION_65	IF_1	IF_2
0x4001b08	            0x750e	                           jne 0x4001b18	      2124	prdbg.c	FUNCTION_65	IF_1	IF_2
0x4001b0a	      0xe9f3000000	                           jmp 0x4001c02	      2124	prdbg.c	FUNCTION_65	IF_1	IF_2
0x4001b0f	    0x48c744240800	                  mov qword [rsp + 8], 0	      2116	prdbg.c	FUNCTION_65
0x4001b18	          0x4889ee	                            mov rsi, rbp	      2129	prdbg.c	FUNCTION_65	IF_3
0x4001b1b	          0x4885ed	                           test rbp, rbp	      2128	prdbg.c	FUNCTION_65	IF_3
0x4001b1e	            0x7528	                           jne 0x4001b48	      2128	prdbg.c	FUNCTION_65	IF_3
0x4001b20	      0x448b442404	                mov r8d, dword [rsp + 4]	        33	stdio2.h	FUNCTION_84	CALL_1
0x4001b25	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x4001b2a	      0xba14000000	                           mov edx, 0x14	        33	stdio2.h	FUNCTION_84	CALL_1
0x4001b2f	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_84	CALL_1
0x4001b34	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	        33	stdio2.h	FUNCTION_84	CALL_1
0x4001b39	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x4001b3e	      0xe800000000	                          call 0x4001b43	        33	stdio2.h	FUNCTION_84	CALL_1
0x4001b43	      0x488d742410	                   lea rsi, [rsp + 0x10]	      2135	prdbg.c	FUNCTION_65	ELSE_1
0x4001b48	          0x4889df	                            mov rdi, rbx	      2138	prdbg.c	FUNCTION_65	IF_4	CALL_2
0x4001b4b	      0xe840f7ffff	                      call sym.push_type	      2138	prdbg.c	FUNCTION_65	IF_4	CALL_2
0x4001b50	            0x85c0	                           test eax, eax	      2138	prdbg.c	FUNCTION_65	IF_4	CALL_2
0x4001b52	     0xf84af000000	                            je 0x4001c07	      2138	prdbg.c	FUNCTION_65	IF_4	CALL_2
0x4001b58	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	      2141	prdbg.c	FUNCTION_65
0x4001b5c	          0x4585ff	                         test r15d, r15d	      2141	prdbg.c	FUNCTION_65
0x4001b5f	      0xb900000000	                              mov ecx, 0	      2141	prdbg.c	FUNCTION_65
0x4001b64	      0xb800000000	                              mov eax, 0	      2141	prdbg.c	FUNCTION_65
0x4001b69	        0x480f44c1	                          cmove rax, rcx	      2141	prdbg.c	FUNCTION_65
0x4001b6d	        0x48894220	             mov qword [rdx + 0x20], rax	      2141	prdbg.c	FUNCTION_65
0x4001b71	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      2142	prdbg.c	FUNCTION_65
0x4001b75	    0x48c740280000	               mov qword [rax + 0x28], 0	      2142	prdbg.c	FUNCTION_65
0x4001b7d	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      2143	prdbg.c	FUNCTION_65
0x4001b81	    0xc74030000000	               mov dword [rax + 0x30], 0	      2143	prdbg.c	FUNCTION_65
0x4001b88	          0x4585f6	                         test r14d, r14d	      2145	prdbg.c	FUNCTION_65	IF_5
0x4001b8b	            0x7511	                           jne 0x4001b9e	      2145	prdbg.c	FUNCTION_65	IF_5
0x4001b8d	          0x4584ed	                         test r13b, r13b	      2145	prdbg.c	FUNCTION_65	IF_5
0x4001b90	            0x750c	                           jne 0x4001b9e	      2145	prdbg.c	FUNCTION_65	IF_5
0x4001b92	      0x837c247000	               cmp dword [rsp + 0x70], 0	      2145	prdbg.c	FUNCTION_65	IF_5
0x4001b97	            0x7505	                           jne 0x4001b9e	      2145	prdbg.c	FUNCTION_65	IF_5
0x4001b99	          0x4885ed	                           test rbp, rbp	      2145	prdbg.c	FUNCTION_65	IF_5
0x4001b9c	            0x7452	                            je 0x4001bf0	      2145	prdbg.c	FUNCTION_65	IF_5
0x4001b9e	          0x4585e4	                         test r12d, r12d	      2147	prdbg.c	FUNCTION_65	IF_5	IF_6
0x4001ba1	            0x744d	                            je 0x4001bf0	      2147	prdbg.c	FUNCTION_65	IF_5	IF_6
0x4001ba3	      0xbe00000000	                              mov esi, 0	      2149	prdbg.c	FUNCTION_65	IF_5	IF_6	IF_7	CALL_3
0x4001ba8	          0x4889df	                            mov rdi, rbx	      2149	prdbg.c	FUNCTION_65	IF_5	IF_6	IF_7	CALL_3
0x4001bab	      0xe877e9ffff	                    call sym.append_type	      2149	prdbg.c	FUNCTION_65	IF_5	IF_6	IF_7	CALL_3
0x4001bb0	            0x85c0	                           test eax, eax	      2149	prdbg.c	FUNCTION_65	IF_5	IF_6	IF_7	CALL_3
0x4001bb2	            0x7453	                            je 0x4001c07	      2149	prdbg.c	FUNCTION_65	IF_5	IF_6	IF_7	CALL_3
0x4001bb4	      0x837c247000	               cmp dword [rsp + 0x70], 0	      2151	prdbg.c	FUNCTION_65	IF_5	IF_6	IF_8
0x4001bb9	            0x7413	                            je 0x4001bce	      2151	prdbg.c	FUNCTION_65	IF_5	IF_6	IF_8
0x4001bbb	      0xbe00000000	                              mov esi, 0	      2153	prdbg.c	FUNCTION_65	IF_5	IF_6	IF_8	IF_9	CALL_4
0x4001bc0	          0x4889df	                            mov rdi, rbx	      2153	prdbg.c	FUNCTION_65	IF_5	IF_6	IF_8	IF_9	CALL_4
0x4001bc3	      0xe85fe9ffff	                    call sym.append_type	      2153	prdbg.c	FUNCTION_65	IF_5	IF_6	IF_8	IF_9	CALL_4
0x4001bc8	            0x85c0	                           test eax, eax	      2153	prdbg.c	FUNCTION_65	IF_5	IF_6	IF_8	IF_9	CALL_4
0x4001bca	            0x7524	                           jne 0x4001bf0	      2153	prdbg.c	FUNCTION_65	IF_5	IF_6	IF_8	IF_9	CALL_4
0x4001bcc	            0xeb39	                           jmp 0x4001c07	      2153	prdbg.c	FUNCTION_65	IF_5	IF_6	IF_8	IF_9	CALL_4
0x4001bce	      0x488b742408	                mov rsi, qword [rsp + 8]	      2158	prdbg.c	FUNCTION_65	IF_5	IF_6	ELSE_2	IF_10	CALL_5
0x4001bd3	          0x4889df	                            mov rdi, rbx	      2158	prdbg.c	FUNCTION_65	IF_5	IF_6	ELSE_2	IF_10	CALL_5
0x4001bd6	      0xe84ce9ffff	                    call sym.append_type	      2158	prdbg.c	FUNCTION_65	IF_5	IF_6	ELSE_2	IF_10	CALL_5
0x4001bdb	            0x85c0	                           test eax, eax	      2158	prdbg.c	FUNCTION_65	IF_5	IF_6	ELSE_2	IF_10	CALL_5
0x4001bdd	            0x7428	                            je 0x4001c07	      2158	prdbg.c	FUNCTION_65	IF_5	IF_6	ELSE_2	IF_10	CALL_5
0x4001bdf	      0xbe00000000	                              mov esi, 0	      2159	prdbg.c	FUNCTION_65	IF_5	IF_6	ELSE_2	IF_10	CALL_6
0x4001be4	          0x4889df	                            mov rdi, rbx	      2159	prdbg.c	FUNCTION_65	IF_5	IF_6	ELSE_2	IF_10	CALL_6
0x4001be7	      0xe83be9ffff	                    call sym.append_type	      2159	prdbg.c	FUNCTION_65	IF_5	IF_6	ELSE_2	IF_10	CALL_6
0x4001bec	            0x85c0	                           test eax, eax	      2159	prdbg.c	FUNCTION_65	IF_5	IF_6	ELSE_2	IF_10	CALL_6
0x4001bee	            0x7417	                            je 0x4001c07	      2159	prdbg.c	FUNCTION_65	IF_5	IF_6	ELSE_2	IF_10	CALL_6
0x4001bf0	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      2165	prdbg.c	FUNCTION_65
0x4001bf4	    0xc74010020000	               mov dword [rax + 0x10], 2	      2165	prdbg.c	FUNCTION_65
0x4001bfb	      0xb801000000	                              mov eax, 1	      2167	prdbg.c	FUNCTION_65
0x4001c00	            0xeb05	                           jmp 0x4001c07	      2167	prdbg.c	FUNCTION_65
0x4001c02	      0xb800000000	                              mov eax, 0	      2125	prdbg.c	FUNCTION_65	IF_1	IF_2
0x4001c07	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      2168	prdbg.c	FUNCTION_65
0x4001c0c	    0x644833142528	                xor rdx, qword fs:[0x28]	      2168	prdbg.c	FUNCTION_65
0x4001c15	            0x7405	                            je 0x4001c1c	      2168	prdbg.c	FUNCTION_65
0x4001c17	      0xe800000000	                          call 0x4001c1c	      2168	prdbg.c	FUNCTION_65
0x4001c1c	        0x4883c438	                           add rsp, 0x38	      2168	prdbg.c	FUNCTION_65
0x4001c20	              0x5b	                                 pop rbx	      2168	prdbg.c	FUNCTION_65
0x4001c21	              0x5d	                                 pop rbp	      2168	prdbg.c	FUNCTION_65
0x4001c22	            0x415c	                                 pop r12	      2168	prdbg.c	FUNCTION_65
0x4001c24	            0x415d	                                 pop r13	      2168	prdbg.c	FUNCTION_65
0x4001c26	            0x415e	                                 pop r14	      2168	prdbg.c	FUNCTION_65
0x4001c28	            0x415f	                                 pop r15	      2168	prdbg.c	FUNCTION_65
0x4001c2a	              0xc3	                                     ret	      2168	prdbg.c	FUNCTION_65
pr_class_static_method_variant	IF,8:WHILE,0:ELSE,0:CALL,14:FOR,0:functions,0:SWITCH,0:DO,0	99
0x4000e75	            0x4155	                                push r13	      1523	prdbg.c	FUNCTION_39
0x4000e77	            0x4154	                                push r12	      1523	prdbg.c	FUNCTION_39
0x4000e79	              0x55	                                push rbp	      1523	prdbg.c	FUNCTION_39
0x4000e7a	              0x53	                                push rbx	      1523	prdbg.c	FUNCTION_39
0x4000e7b	        0x4883ec08	                              sub rsp, 8	      1523	prdbg.c	FUNCTION_39
0x4000e7f	        0x488b4710	            mov rax, qword [rdi + 0x10] 	      1527	prdbg.c	FUNCTION_39	CALL_1
0x4000e83	          0x4885c0	                           test rax, rax	      1527	prdbg.c	FUNCTION_39	CALL_1
0x4000e86	            0x7519	                           jne 0x4000ea1	      1527	prdbg.c	FUNCTION_39	CALL_1
0x4000e88	      0xb900000000	                              mov ecx, 0	      1527	prdbg.c	FUNCTION_39	CALL_1
0x4000e8d	      0xbaf7050000	                          mov edx, 0x5f7	      1527	prdbg.c	FUNCTION_39	CALL_1
0x4000e92	      0xbe00000000	                              mov esi, 0	      1527	prdbg.c	FUNCTION_39	CALL_1
0x4000e97	      0xbf00000000	                              mov edi, 0	      1527	prdbg.c	FUNCTION_39	CALL_1
0x4000e9c	      0xe800000000	                          call 0x4000ea1	      1527	prdbg.c	FUNCTION_39	CALL_1
0x4000ea1	          0x4889fb	                            mov rbx, rdi	      1527	prdbg.c	FUNCTION_39	CALL_1
0x4000ea4	          0x4989f5	                            mov r13, rsi	      1527	prdbg.c	FUNCTION_39	CALL_1
0x4000ea7	          0x4189d4	                           mov r12d, edx	      1527	prdbg.c	FUNCTION_39	CALL_1
0x4000eaa	            0x89cd	                            mov ebp, ecx	      1527	prdbg.c	FUNCTION_39	CALL_1
0x4000eac	          0x488b00	                    mov rax, qword [rax]	      1528	prdbg.c	FUNCTION_39	CALL_2
0x4000eaf	          0x4885c0	                           test rax, rax	      1528	prdbg.c	FUNCTION_39	CALL_2
0x4000eb2	            0x7519	                           jne 0x4000ecd	      1528	prdbg.c	FUNCTION_39	CALL_2
0x4000eb4	      0xb900000000	                              mov ecx, 0	      1528	prdbg.c	FUNCTION_39	CALL_2
0x4000eb9	      0xbaf8050000	                          mov edx, 0x5f8	      1528	prdbg.c	FUNCTION_39	CALL_2
0x4000ebe	      0xbe00000000	                              mov esi, 0	      1528	prdbg.c	FUNCTION_39	CALL_2
0x4000ec3	      0xbf00000000	                              mov edi, 0	      1528	prdbg.c	FUNCTION_39	CALL_2
0x4000ec8	      0xe800000000	                          call 0x4000ecd	      1528	prdbg.c	FUNCTION_39	CALL_2
0x4000ecd	      0x4883781800	               cmp qword [rax + 0x18], 0	      1529	prdbg.c	FUNCTION_39	CALL_3
0x4000ed2	            0x7519	                           jne 0x4000eed	      1529	prdbg.c	FUNCTION_39	CALL_3
0x4000ed4	      0xb900000000	                              mov ecx, 0	      1529	prdbg.c	FUNCTION_39	CALL_3
0x4000ed9	      0xbaf9050000	                          mov edx, 0x5f9	      1529	prdbg.c	FUNCTION_39	CALL_3
0x4000ede	      0xbe00000000	                              mov esi, 0	      1529	prdbg.c	FUNCTION_39	CALL_3
0x4000ee3	      0xbf00000000	                              mov edi, 0	      1529	prdbg.c	FUNCTION_39	CALL_3
0x4000ee8	      0xe800000000	                          call 0x4000eed	      1529	prdbg.c	FUNCTION_39	CALL_3
0x4000eed	          0x4585c0	                           test r8d, r8d	      1532	prdbg.c	FUNCTION_39	IF_1
0x4000ef0	            0x7412	                            je 0x4000f04	      1532	prdbg.c	FUNCTION_39	IF_1
0x4000ef2	      0xbe00000000	                              mov esi, 0	      1534	prdbg.c	FUNCTION_39	IF_1	IF_2	CALL_4
0x4000ef7	      0xe82bf6ffff	                    call sym.append_type	      1534	prdbg.c	FUNCTION_39	IF_1	IF_2	CALL_4
0x4000efc	            0x85c0	                           test eax, eax	      1534	prdbg.c	FUNCTION_39	IF_1	IF_2	CALL_4
0x4000efe	     0xf84b9000000	                            je 0x4000fbd	      1534	prdbg.c	FUNCTION_39	IF_1	IF_2	CALL_4
0x4000f04	            0x85ed	                           test ebp, ebp	      1537	prdbg.c	FUNCTION_39	IF_3
0x4000f06	            0x7415	                            je 0x4000f1d	      1537	prdbg.c	FUNCTION_39	IF_3
0x4000f08	      0xbe00000000	                              mov esi, 0	      1539	prdbg.c	FUNCTION_39	IF_3	IF_4	CALL_5
0x4000f0d	          0x4889df	                            mov rdi, rbx	      1539	prdbg.c	FUNCTION_39	IF_3	IF_4	CALL_5
0x4000f10	      0xe812f6ffff	                    call sym.append_type	      1539	prdbg.c	FUNCTION_39	IF_3	IF_4	CALL_5
0x4000f15	            0x85c0	                           test eax, eax	      1539	prdbg.c	FUNCTION_39	IF_3	IF_4	CALL_5
0x4000f17	     0xf84a0000000	                            je 0x4000fbd	      1539	prdbg.c	FUNCTION_39	IF_3	IF_4	CALL_5
0x4000f1d	      0xbe00000000	                              mov esi, 0	      1544	prdbg.c	FUNCTION_39	IF_5	CALL_6
0x4000f22	          0x4889df	                            mov rdi, rbx	      1544	prdbg.c	FUNCTION_39	IF_5	CALL_6
0x4000f25	      0xe84bf5ffff	                   call sym.prepend_type	      1544	prdbg.c	FUNCTION_39	IF_5	CALL_6
0x4000f2a	            0x85c0	                           test eax, eax	      1544	prdbg.c	FUNCTION_39	IF_5	CALL_6
0x4000f2c	     0xf848b000000	                            je 0x4000fbd	      1544	prdbg.c	FUNCTION_39	IF_5	CALL_6
0x4000f32	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1548	prdbg.c	FUNCTION_39	IF_6	CALL_7
0x4000f36	          0x488b00	                    mov rax, qword [rax]	      1548	prdbg.c	FUNCTION_39	IF_6	CALL_7
0x4000f39	        0x488b7018	            mov rsi, qword [rax + 0x18] 	      1548	prdbg.c	FUNCTION_39	IF_6	CALL_7
0x4000f3d	          0x4889df	                            mov rdi, rbx	      1548	prdbg.c	FUNCTION_39	IF_6	CALL_7
0x4000f40	      0xe885f6ffff	                call sym.substitute_type	      1548	prdbg.c	FUNCTION_39	IF_6	CALL_7
0x4000f45	            0x85c0	                           test eax, eax	      1548	prdbg.c	FUNCTION_39	IF_6	CALL_7
0x4000f47	            0x7474	                            je 0x4000fbd	      1548	prdbg.c	FUNCTION_39	IF_6	CALL_7
0x4000f49	          0x4889df	                            mov rdi, rbx	      1552	prdbg.c	FUNCTION_39	CALL_8
0x4000f4c	      0xe834f2ffff	                       call sym.pop_type	      1552	prdbg.c	FUNCTION_39	CALL_8
0x4000f51	          0x4889c5	                            mov rbp, rax	      1552	prdbg.c	FUNCTION_39	CALL_8
0x4000f54	      0xb800000000	                              mov eax, 0	      1554	prdbg.c	FUNCTION_39	IF_7
0x4000f59	          0x4885ed	                           test rbp, rbp	      1553	prdbg.c	FUNCTION_39	IF_7
0x4000f5c	            0x745f	                            je 0x4000fbd	      1553	prdbg.c	FUNCTION_39	IF_7
0x4000f5e	          0x4489e6	                           mov esi, r12d	      1558	prdbg.c	FUNCTION_39	IF_8	CALL_9
0x4000f61	          0x4889df	                            mov rdi, rbx	      1558	prdbg.c	FUNCTION_39	IF_8	CALL_9
0x4000f64	      0xe81ffeffff	              call sym.pr_fix_visibility	      1558	prdbg.c	FUNCTION_39	IF_8	CALL_9
0x4000f69	            0x85c0	                           test eax, eax	      1558	prdbg.c	FUNCTION_39	IF_8	CALL_9
0x4000f6b	            0x7450	                            je 0x4000fbd	      1558	prdbg.c	FUNCTION_39	IF_8	CALL_9
0x4000f6d	          0x4889ee	                            mov rsi, rbp	      1561	prdbg.c	FUNCTION_39	CALL_10
0x4000f70	          0x4889df	                            mov rdi, rbx	      1561	prdbg.c	FUNCTION_39	CALL_10
0x4000f73	      0xe8aff5ffff	                    call sym.append_type	      1561	prdbg.c	FUNCTION_39	CALL_10
0x4000f78	            0x85c0	                           test eax, eax	      1565	prdbg.c	FUNCTION_39	CALL_14
0x4000f7a	            0x7441	                            je 0x4000fbd	      1565	prdbg.c	FUNCTION_39	CALL_14
0x4000f7c	      0xbe00000000	                              mov esi, 0	      1562	prdbg.c	FUNCTION_39	CALL_11
0x4000f81	          0x4889df	                            mov rdi, rbx	      1562	prdbg.c	FUNCTION_39	CALL_11
0x4000f84	      0xe89ef5ffff	                    call sym.append_type	      1562	prdbg.c	FUNCTION_39	CALL_11
0x4000f89	            0x85c0	                           test eax, eax	      1562	prdbg.c	FUNCTION_39	CALL_11
0x4000f8b	            0x7430	                            je 0x4000fbd	      1562	prdbg.c	FUNCTION_39	CALL_11
0x4000f8d	          0x4c89ee	                            mov rsi, r13	      1563	prdbg.c	FUNCTION_39	CALL_12
0x4000f90	          0x4889df	                            mov rdi, rbx	      1563	prdbg.c	FUNCTION_39	CALL_12
0x4000f93	      0xe88ff5ffff	                    call sym.append_type	      1563	prdbg.c	FUNCTION_39	CALL_12
0x4000f98	            0x85c0	                           test eax, eax	      1563	prdbg.c	FUNCTION_39	CALL_12
0x4000f9a	            0x7421	                            je 0x4000fbd	      1563	prdbg.c	FUNCTION_39	CALL_12
0x4000f9c	      0xbe00000000	                              mov esi, 0	      1564	prdbg.c	FUNCTION_39	CALL_13
0x4000fa1	          0x4889df	                            mov rdi, rbx	      1564	prdbg.c	FUNCTION_39	CALL_13
0x4000fa4	      0xe87ef5ffff	                    call sym.append_type	      1564	prdbg.c	FUNCTION_39	CALL_13
0x4000fa9	            0x85c0	                           test eax, eax	      1564	prdbg.c	FUNCTION_39	CALL_13
0x4000fab	            0x7410	                            je 0x4000fbd	      1564	prdbg.c	FUNCTION_39	CALL_13
0x4000fad	          0x4889df	                            mov rdi, rbx	      1565	prdbg.c	FUNCTION_39	CALL_14
0x4000fb0	      0xe85bfbffff	                    call sym.indent_type	      1565	prdbg.c	FUNCTION_39	CALL_14
0x4000fb5	            0x85c0	                           test eax, eax	      1535	prdbg.c	FUNCTION_39	IF_1	IF_2
0x4000fb7	           0xf95c0	                                setne al	      1535	prdbg.c	FUNCTION_39	IF_1	IF_2
0x4000fba	           0xfb6c0	                           movzx eax, al	      1535	prdbg.c	FUNCTION_39	IF_1	IF_2
0x4000fbd	        0x4883c408	                              add rsp, 8	      1566	prdbg.c	FUNCTION_39
0x4000fc1	              0x5b	                                 pop rbx	      1566	prdbg.c	FUNCTION_39
0x4000fc2	              0x5d	                                 pop rbp	      1566	prdbg.c	FUNCTION_39
0x4000fc3	            0x415c	                                 pop r12	      1566	prdbg.c	FUNCTION_39
0x4000fc5	            0x415d	                                 pop r13	      1566	prdbg.c	FUNCTION_39
0x4000fc7	              0xc3	                                     ret	      1566	prdbg.c	FUNCTION_39
pr_int_constant	IF,0:WHILE,0:ELSE,0:CALL,2:FOR,0:functions,0:SWITCH,0:DO,0	35
0x4003abd	            0x4154	                                push r12	      1699	prdbg.c	FUNCTION_46
0x4003abf	              0x55	                                push rbp	      1699	prdbg.c	FUNCTION_46
0x4003ac0	              0x53	                                push rbx	      1699	prdbg.c	FUNCTION_46
0x4003ac1	        0x4883ec20	                           sub rsp, 0x20	      1699	prdbg.c	FUNCTION_46
0x4003ac5	          0x4889fb	                            mov rbx, rdi	      1699	prdbg.c	FUNCTION_46
0x4003ac8	          0x4889f5	                            mov rbp, rsi	      1699	prdbg.c	FUNCTION_46
0x4003acb	          0x4989d4	                            mov r12, rdx	      1699	prdbg.c	FUNCTION_46
0x4003ace	    0x64488b042528	                mov rax, qword fs:[0x28]	      1699	prdbg.c	FUNCTION_46
0x4003ad7	      0x4889442418	             mov qword [rsp + 0x18], rax	      1699	prdbg.c	FUNCTION_46
0x4003adc	            0x31c0	                            xor eax, eax	      1699	prdbg.c	FUNCTION_46
0x4003ade	      0xe8e6c5ffff	                         call sym.indent	      1703	prdbg.c	FUNCTION_46	CALL_1
0x4003ae3	          0x4d89e0	                             mov r8, r12	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003ae6	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003aeb	      0xba16000000	                           mov edx, 0x16	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003af0	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003af5	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003af8	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003afd	      0xe800000000	                          call 0x4003b02	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003b02	          0x4989e0	                             mov r8, rsp	        97	stdio2.h	CALL_93
0x4003b05	          0x4889e9	                            mov rcx, rbp	        97	stdio2.h	CALL_93
0x4003b08	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_93
0x4003b0d	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_93
0x4003b12	          0x488b3b	                    mov rdi, qword [rbx]	        97	stdio2.h	CALL_93
0x4003b15	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_93
0x4003b1a	      0xe800000000	                          call 0x4003b1f	        97	stdio2.h	CALL_93
0x4003b1f	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1707	prdbg.c	FUNCTION_46
0x4003b24	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1707	prdbg.c	FUNCTION_46
0x4003b2d	            0x7405	                            je 0x4003b34	      1707	prdbg.c	FUNCTION_46
0x4003b2f	      0xe800000000	                          call 0x4003b34	      1707	prdbg.c	FUNCTION_46
0x4003b34	      0xb801000000	                              mov eax, 1	      1707	prdbg.c	FUNCTION_46
0x4003b39	        0x4883c420	                           add rsp, 0x20	      1707	prdbg.c	FUNCTION_46
0x4003b3d	              0x5b	                                 pop rbx	      1707	prdbg.c	FUNCTION_46
0x4003b3e	              0x5d	                                 pop rbp	      1707	prdbg.c	FUNCTION_46
0x4003b3f	            0x415c	                                 pop r12	      1707	prdbg.c	FUNCTION_46
0x4003b41	              0xc3	                                     ret	      1707	prdbg.c	FUNCTION_46
tg_class_static_method_variant	IF,8:WHILE,0:ELSE,0:CALL,17:FOR,0:functions,0:SWITCH,0:DO,0	114
0x4002504	            0x4156	                                push r14	      2375	prdbg.c	FUNCTION_69
0x4002506	            0x4155	                                push r13	      2375	prdbg.c	FUNCTION_69
0x4002508	            0x4154	                                push r12	      2375	prdbg.c	FUNCTION_69
0x400250a	              0x55	                                push rbp	      2375	prdbg.c	FUNCTION_69
0x400250b	              0x53	                                push rbx	      2375	prdbg.c	FUNCTION_69
0x400250c	        0x488b4710	            mov rax, qword [rdi + 0x10] 	      2380	prdbg.c	FUNCTION_69	CALL_1
0x4002510	          0x4885c0	                           test rax, rax	      2380	prdbg.c	FUNCTION_69	CALL_1
0x4002513	            0x7519	                           jne 0x400252e	      2380	prdbg.c	FUNCTION_69	CALL_1
0x4002515	      0xb900000000	                              mov ecx, 0	      2380	prdbg.c	FUNCTION_69	CALL_1
0x400251a	      0xba4c090000	                          mov edx, 0x94c	      2380	prdbg.c	FUNCTION_69	CALL_1
0x400251f	      0xbe00000000	                              mov esi, 0	      2380	prdbg.c	FUNCTION_69	CALL_1
0x4002524	      0xbf00000000	                              mov edi, 0	      2380	prdbg.c	FUNCTION_69	CALL_1
0x4002529	      0xe800000000	                          call 0x400252e	      2380	prdbg.c	FUNCTION_69	CALL_1
0x400252e	          0x4889fb	                            mov rbx, rdi	      2380	prdbg.c	FUNCTION_69	CALL_1
0x4002531	          0x4189d5	                           mov r13d, edx	      2380	prdbg.c	FUNCTION_69	CALL_1
0x4002534	          0x4189cc	                           mov r12d, ecx	      2380	prdbg.c	FUNCTION_69	CALL_1
0x4002537	          0x488b00	                    mov rax, qword [rax]	      2381	prdbg.c	FUNCTION_69	CALL_2
0x400253a	          0x4885c0	                           test rax, rax	      2381	prdbg.c	FUNCTION_69	CALL_2
0x400253d	            0x7519	                           jne 0x4002558	      2381	prdbg.c	FUNCTION_69	CALL_2
0x400253f	      0xb900000000	                              mov ecx, 0	      2381	prdbg.c	FUNCTION_69	CALL_2
0x4002544	      0xba4d090000	                          mov edx, 0x94d	      2381	prdbg.c	FUNCTION_69	CALL_2
0x4002549	      0xbe00000000	                              mov esi, 0	      2381	prdbg.c	FUNCTION_69	CALL_2
0x400254e	      0xbf00000000	                              mov edi, 0	      2381	prdbg.c	FUNCTION_69	CALL_2
0x4002553	      0xe800000000	                          call 0x4002558	      2381	prdbg.c	FUNCTION_69	CALL_2
0x4002558	      0x4883781800	               cmp qword [rax + 0x18], 0	      2382	prdbg.c	FUNCTION_69	CALL_3
0x400255d	            0x7519	                           jne 0x4002578	      2382	prdbg.c	FUNCTION_69	CALL_3
0x400255f	      0xb900000000	                              mov ecx, 0	      2382	prdbg.c	FUNCTION_69	CALL_3
0x4002564	      0xba4e090000	                          mov edx, 0x94e	      2382	prdbg.c	FUNCTION_69	CALL_3
0x4002569	      0xbe00000000	                              mov esi, 0	      2382	prdbg.c	FUNCTION_69	CALL_3
0x400256e	      0xbf00000000	                              mov edi, 0	      2382	prdbg.c	FUNCTION_69	CALL_3
0x4002573	      0xe800000000	                          call 0x4002578	      2382	prdbg.c	FUNCTION_69	CALL_3
0x4002578	          0x4585c0	                           test r8d, r8d	      2385	prdbg.c	FUNCTION_69	IF_1
0x400257b	            0x7414	                            je 0x4002591	      2385	prdbg.c	FUNCTION_69	IF_1
0x400257d	      0xbe00000000	                              mov esi, 0	      2387	prdbg.c	FUNCTION_69	IF_1	IF_2	CALL_4
0x4002582	      0xe8a0dfffff	                    call sym.append_type	      2387	prdbg.c	FUNCTION_69	IF_1	IF_2	CALL_4
0x4002587	            0x89c5	                            mov ebp, eax	      2387	prdbg.c	FUNCTION_69	IF_1	IF_2	CALL_4
0x4002589	            0x85c0	                           test eax, eax	      2387	prdbg.c	FUNCTION_69	IF_1	IF_2	CALL_4
0x400258b	     0xf84f8000000	                            je 0x4002689	      2387	prdbg.c	FUNCTION_69	IF_1	IF_2	CALL_4
0x4002591	          0x4585e4	                         test r12d, r12d	      2390	prdbg.c	FUNCTION_69	IF_3
0x4002594	            0x7417	                            je 0x40025ad	      2390	prdbg.c	FUNCTION_69	IF_3
0x4002596	      0xbe00000000	                              mov esi, 0	      2392	prdbg.c	FUNCTION_69	IF_3	IF_4	CALL_5
0x400259b	          0x4889df	                            mov rdi, rbx	      2392	prdbg.c	FUNCTION_69	IF_3	IF_4	CALL_5
0x400259e	      0xe884dfffff	                    call sym.append_type	      2392	prdbg.c	FUNCTION_69	IF_3	IF_4	CALL_5
0x40025a3	            0x89c5	                            mov ebp, eax	      2392	prdbg.c	FUNCTION_69	IF_3	IF_4	CALL_5
0x40025a5	            0x85c0	                           test eax, eax	      2392	prdbg.c	FUNCTION_69	IF_3	IF_4	CALL_5
0x40025a7	     0xf84dc000000	                            je 0x4002689	      2392	prdbg.c	FUNCTION_69	IF_3	IF_4	CALL_5
0x40025ad	      0xbe00000000	                              mov esi, 0	      2397	prdbg.c	FUNCTION_69	IF_5	CALL_6
0x40025b2	          0x4889df	                            mov rdi, rbx	      2397	prdbg.c	FUNCTION_69	IF_5	CALL_6
0x40025b5	      0xe8bbdeffff	                   call sym.prepend_type	      2397	prdbg.c	FUNCTION_69	IF_5	CALL_6
0x40025ba	            0x89c5	                            mov ebp, eax	      2397	prdbg.c	FUNCTION_69	IF_5	CALL_6
0x40025bc	            0x85c0	                           test eax, eax	      2397	prdbg.c	FUNCTION_69	IF_5	CALL_6
0x40025be	     0xf84c5000000	                            je 0x4002689	      2397	prdbg.c	FUNCTION_69	IF_5	CALL_6
0x40025c4	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      2400	prdbg.c	FUNCTION_69	CALL_7
0x40025c8	          0x488b00	                    mov rax, qword [rax]	      2400	prdbg.c	FUNCTION_69	CALL_7
0x40025cb	        0x488b7818	            mov rdi, qword [rax + 0x18] 	      2400	prdbg.c	FUNCTION_69	CALL_7
0x40025cf	      0xe800000000	                          call 0x40025d4	      2400	prdbg.c	FUNCTION_69	CALL_7
0x40025d4	          0x4989c4	                            mov r12, rax	      2400	prdbg.c	FUNCTION_69	CALL_7
0x40025d7	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      2402	prdbg.c	FUNCTION_69	IF_6	CALL_8
0x40025db	          0x488b00	                    mov rax, qword [rax]	      2402	prdbg.c	FUNCTION_69	IF_6	CALL_8
0x40025de	        0x488b7018	            mov rsi, qword [rax + 0x18] 	      2402	prdbg.c	FUNCTION_69	IF_6	CALL_8
0x40025e2	          0x4889df	                            mov rdi, rbx	      2402	prdbg.c	FUNCTION_69	IF_6	CALL_8
0x40025e5	      0xe8e0dfffff	                call sym.substitute_type	      2402	prdbg.c	FUNCTION_69	IF_6	CALL_8
0x40025ea	            0x89c5	                            mov ebp, eax	      2402	prdbg.c	FUNCTION_69	IF_6	CALL_8
0x40025ec	            0x85c0	                           test eax, eax	      2402	prdbg.c	FUNCTION_69	IF_6	CALL_8
0x40025ee	            0x750d	                           jne 0x40025fd	      2402	prdbg.c	FUNCTION_69	IF_6	CALL_8
0x40025f0	          0x4c89e7	                            mov rdi, r12	      2404	prdbg.c	FUNCTION_69	IF_6	CALL_9
0x40025f3	      0xe800000000	                          call 0x40025f8	      2404	prdbg.c	FUNCTION_69	IF_6	CALL_9
0x40025f8	      0xe98c000000	                           jmp 0x4002689	      2405	prdbg.c	FUNCTION_69	IF_6
0x40025fd	          0x4889df	                            mov rdi, rbx	      2409	prdbg.c	FUNCTION_69	CALL_10
0x4002600	      0xe880dbffff	                       call sym.pop_type	      2409	prdbg.c	FUNCTION_69	CALL_10
0x4002605	          0x4989c6	                            mov r14, rax	      2409	prdbg.c	FUNCTION_69	CALL_10
0x4002608	          0x4885c0	                           test rax, rax	      2410	prdbg.c	FUNCTION_69	IF_7
0x400260b	            0x750f	                           jne 0x400261c	      2410	prdbg.c	FUNCTION_69	IF_7
0x400260d	          0x4c89e7	                            mov rdi, r12	      2412	prdbg.c	FUNCTION_69	IF_7	CALL_11
0x4002610	      0xe800000000	                          call 0x4002615	      2412	prdbg.c	FUNCTION_69	IF_7	CALL_11
0x4002615	      0xbd00000000	                              mov ebp, 0	      2413	prdbg.c	FUNCTION_69	IF_7
0x400261a	            0xeb6d	                           jmp 0x4002689	      2413	prdbg.c	FUNCTION_69	IF_7
0x400261c	          0x4489ee	                           mov esi, r13d	      2417	prdbg.c	FUNCTION_69	IF_8	CALL_12
0x400261f	          0x4889df	                            mov rdi, rbx	      2417	prdbg.c	FUNCTION_69	IF_8	CALL_12
0x4002622	      0xe819ddffff	              call sym.tg_fix_visibility	      2417	prdbg.c	FUNCTION_69	IF_8	CALL_12
0x4002627	            0x89c5	                            mov ebp, eax	      2417	prdbg.c	FUNCTION_69	IF_8	CALL_12
0x4002629	            0x85c0	                           test eax, eax	      2417	prdbg.c	FUNCTION_69	IF_8	CALL_12
0x400262b	            0x7512	                           jne 0x400263f	      2417	prdbg.c	FUNCTION_69	IF_8	CALL_12
0x400262d	          0x4c89f7	                            mov rdi, r14	      2419	prdbg.c	FUNCTION_69	IF_8	CALL_13
0x4002630	      0xe800000000	                          call 0x4002635	      2419	prdbg.c	FUNCTION_69	IF_8	CALL_13
0x4002635	          0x4c89e7	                            mov rdi, r12	      2420	prdbg.c	FUNCTION_69	IF_8	CALL_14
0x4002638	      0xe800000000	                          call 0x400263d	      2420	prdbg.c	FUNCTION_69	IF_8	CALL_14
0x400263d	            0xeb4a	                           jmp 0x4002689	      2421	prdbg.c	FUNCTION_69	IF_8
0x400263f	          0x4489ef	                           mov edi, r13d	      2424	prdbg.c	FUNCTION_69
0x4002642	      0xe819eaffff	                call sym.visibility_name	      2424	prdbg.c	FUNCTION_69
0x4002647	              0x50	                                push rax	        97	stdio2.h	CALL_93
0x4002648	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      2424	prdbg.c	FUNCTION_69
0x400264c	          0xff7008	                    push qword [rax + 8]	        97	stdio2.h	CALL_93
0x400264f	          0x4d89f1	                             mov r9, r14	        97	stdio2.h	CALL_93
0x4002652	        0x4c8b4320	              mov r8, qword [rbx + 0x20]	        97	stdio2.h	CALL_93
0x4002656	          0x4c89e1	                            mov rcx, r12	        97	stdio2.h	CALL_93
0x4002659	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_93
0x400265e	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_93
0x4002663	          0x488b3b	                    mov rdi, qword [rbx]	        97	stdio2.h	CALL_93
0x4002666	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_93
0x400266b	      0xe800000000	                          call 0x4002670	        97	stdio2.h	CALL_93
0x4002670	          0x4c89f7	                            mov rdi, r14	      2427	prdbg.c	FUNCTION_69	CALL_16
0x4002673	      0xe800000000	                          call 0x4002678	      2427	prdbg.c	FUNCTION_69	CALL_16
0x4002678	          0x4c89e7	                            mov rdi, r12	      2428	prdbg.c	FUNCTION_69	CALL_17
0x400267b	      0xe800000000	                          call 0x4002680	      2428	prdbg.c	FUNCTION_69	CALL_17
0x4002680	        0x4883c410	                           add rsp, 0x10	      2430	prdbg.c	FUNCTION_69
0x4002684	      0xbd01000000	                              mov ebp, 1	      2430	prdbg.c	FUNCTION_69
0x4002689	            0x89e8	                            mov eax, ebp	      2431	prdbg.c	FUNCTION_69
0x400268b	              0x5b	                                 pop rbx	      2431	prdbg.c	FUNCTION_69
0x400268c	              0x5d	                                 pop rbp	      2431	prdbg.c	FUNCTION_69
0x400268d	            0x415c	                                 pop r12	      2431	prdbg.c	FUNCTION_69
0x400268f	            0x415d	                                 pop r13	      2431	prdbg.c	FUNCTION_69
0x4002691	            0x415e	                                 pop r14	      2431	prdbg.c	FUNCTION_69
0x4002693	              0xc3	                                     ret	      2431	prdbg.c	FUNCTION_69
pr_array_type	IF,8:WHILE,0:ELSE,2:CALL,9:FOR,0:functions,0:SWITCH,0:DO,0	105
0x4002b19	            0x4156	                                push r14	       827	prdbg.c	FUNCTION_24
0x4002b1b	            0x4155	                                push r13	       827	prdbg.c	FUNCTION_24
0x4002b1d	            0x4154	                                push r12	       827	prdbg.c	FUNCTION_24
0x4002b1f	              0x55	                                push rbp	       827	prdbg.c	FUNCTION_24
0x4002b20	              0x53	                                push rbx	       827	prdbg.c	FUNCTION_24
0x4002b21	        0x4883c480	             add rsp, 0xffffffffffffff80	       827	prdbg.c	FUNCTION_24
0x4002b25	          0x4889fb	                            mov rbx, rdi	       827	prdbg.c	FUNCTION_24
0x4002b28	          0x4989f5	                            mov r13, rsi	       827	prdbg.c	FUNCTION_24
0x4002b2b	          0x4989d4	                            mov r12, rdx	       827	prdbg.c	FUNCTION_24
0x4002b2e	          0x4189ce	                           mov r14d, ecx	       827	prdbg.c	FUNCTION_24
0x4002b31	    0x64488b042528	                mov rax, qword fs:[0x28]	       827	prdbg.c	FUNCTION_24
0x4002b3a	      0x4889442478	             mov qword [rsp + 0x78], rax	       827	prdbg.c	FUNCTION_24
0x4002b3f	            0x31c0	                            xor eax, eax	       827	prdbg.c	FUNCTION_24
0x4002b41	      0xe83fd6ffff	                       call sym.pop_type	       832	prdbg.c	FUNCTION_24	CALL_1
0x4002b46	          0x4885c0	                           test rax, rax	       833	prdbg.c	FUNCTION_24	IF_1
0x4002b49	     0xf8433010000	                            je 0x4002c82	       833	prdbg.c	FUNCTION_24	IF_1
0x4002b4f	          0x4889c5	                            mov rbp, rax	       833	prdbg.c	FUNCTION_24	IF_1
0x4002b52	          0x4d85ed	                           test r13, r13	       836	prdbg.c	FUNCTION_24	IF_2
0x4002b55	            0x755b	                           jne 0x4002bb2	       836	prdbg.c	FUNCTION_24	IF_2
0x4002b57	        0x4983fcff	             cmp r12, 0xffffffffffffffff	       838	prdbg.c	FUNCTION_24	IF_2	IF_3
0x4002b5b	            0x750d	                           jne 0x4002b6a	       838	prdbg.c	FUNCTION_24	IF_2	IF_3
0x4002b5d	    0xc74424407c5b	       mov dword [rsp + 0x40], 0x5d5b7c 	        33	stdio2.h	FUNCTION_84	CALL_1
0x4002b65	      0xe9ae000000	                           jmp 0x4002c18	        33	stdio2.h	FUNCTION_84	CALL_1
0x4002b6a	      0x4d8d442401	                       lea r8, [r12 + 1]	        33	stdio2.h	FUNCTION_84	CALL_1
0x4002b6f	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x4002b74	      0xba16000000	                           mov edx, 0x16	        33	stdio2.h	FUNCTION_84	CALL_1
0x4002b79	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_84	CALL_1
0x4002b7e	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	        33	stdio2.h	FUNCTION_84	CALL_1
0x4002b83	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x4002b88	      0xe800000000	                          call 0x4002b8d	        33	stdio2.h	FUNCTION_84	CALL_1
0x4002b8d	      0x4c8d442420	                    lea r8, [rsp + 0x20]	        33	stdio2.h	FUNCTION_84	CALL_1
0x4002b92	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x4002b97	      0xba32000000	                           mov edx, 0x32	        33	stdio2.h	FUNCTION_84	CALL_1
0x4002b9c	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_84	CALL_1
0x4002ba1	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	        33	stdio2.h	FUNCTION_84	CALL_1
0x4002ba6	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x4002bab	      0xe800000000	                          call 0x4002bb0	        33	stdio2.h	FUNCTION_84	CALL_1
0x4002bb0	            0xeb66	                           jmp 0x4002c18	        33	stdio2.h	FUNCTION_84	CALL_1
0x4002bb2	          0x4d89e8	                             mov r8, r13	        33	stdio2.h	FUNCTION_84	CALL_1
0x4002bb5	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x4002bba	      0xba16000000	                           mov edx, 0x16	        33	stdio2.h	FUNCTION_84	CALL_1
0x4002bbf	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_84	CALL_1
0x4002bc4	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_84	CALL_1
0x4002bc7	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x4002bcc	      0xe800000000	                          call 0x4002bd1	        33	stdio2.h	FUNCTION_84	CALL_1
0x4002bd1	          0x4d89e0	                             mov r8, r12	        33	stdio2.h	FUNCTION_84	CALL_1
0x4002bd4	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x4002bd9	      0xba16000000	                           mov edx, 0x16	        33	stdio2.h	FUNCTION_84	CALL_1
0x4002bde	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_84	CALL_1
0x4002be3	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	        33	stdio2.h	FUNCTION_84	CALL_1
0x4002be8	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x4002bed	      0xe800000000	                          call 0x4002bf2	        33	stdio2.h	FUNCTION_84	CALL_1
0x4002bf2	      0x4c8d4c2420	                    lea r9, [rsp + 0x20]	        33	stdio2.h	FUNCTION_84	CALL_1
0x4002bf7	          0x4989e0	                             mov r8, rsp	        33	stdio2.h	FUNCTION_84	CALL_1
0x4002bfa	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x4002bff	      0xba32000000	                           mov edx, 0x32	        33	stdio2.h	FUNCTION_84	CALL_1
0x4002c04	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_84	CALL_1
0x4002c09	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	        33	stdio2.h	FUNCTION_84	CALL_1
0x4002c0e	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x4002c13	      0xe800000000	                          call 0x4002c18	        33	stdio2.h	FUNCTION_84	CALL_1
0x4002c18	      0x488d742440	                   lea rsi, [rsp + 0x40]	       853	prdbg.c	FUNCTION_24	IF_4	CALL_5
0x4002c1d	          0x4889df	                            mov rdi, rbx	       853	prdbg.c	FUNCTION_24	IF_4	CALL_5
0x4002c20	      0xe8a5d9ffff	                call sym.substitute_type	       853	prdbg.c	FUNCTION_24	IF_4	CALL_5
0x4002c25	            0x85c0	                           test eax, eax	       853	prdbg.c	FUNCTION_24	IF_4	CALL_5
0x4002c27	            0x745e	                            je 0x4002c87	       853	prdbg.c	FUNCTION_24	IF_4	CALL_5
0x4002c29	        0x807d0069	                    cmp byte [rbp], 0x69	       856	prdbg.c	FUNCTION_24	IF_5	CALL_6
0x4002c2d	            0x7512	                           jne 0x4002c41	       856	prdbg.c	FUNCTION_24	IF_5	CALL_6
0x4002c2f	        0x807d016e	                cmp byte [rbp + 1], 0x6e	       856	prdbg.c	FUNCTION_24	IF_5	CALL_6
0x4002c33	            0x750c	                           jne 0x4002c41	       856	prdbg.c	FUNCTION_24	IF_5	CALL_6
0x4002c35	        0x807d0274	                cmp byte [rbp + 2], 0x74	       856	prdbg.c	FUNCTION_24	IF_5	CALL_6
0x4002c39	            0x7506	                           jne 0x4002c41	       856	prdbg.c	FUNCTION_24	IF_5	CALL_6
0x4002c3b	        0x807d0300	                   cmp byte [rbp + 3], 0	       856	prdbg.c	FUNCTION_24	IF_5	CALL_6
0x4002c3f	            0x7420	                            je 0x4002c61	       856	prdbg.c	FUNCTION_24	IF_5	CALL_6
0x4002c41	      0xbe00000000	                              mov esi, 0	       858	prdbg.c	FUNCTION_24	IF_5	IF_6	CALL_7
0x4002c46	          0x4889df	                            mov rdi, rbx	       858	prdbg.c	FUNCTION_24	IF_5	IF_6	CALL_7
0x4002c49	      0xe8d9d8ffff	                    call sym.append_type	       858	prdbg.c	FUNCTION_24	IF_5	IF_6	CALL_7
0x4002c4e	            0x85c0	                           test eax, eax	       858	prdbg.c	FUNCTION_24	IF_5	IF_6	CALL_7
0x4002c50	            0x7435	                            je 0x4002c87	       858	prdbg.c	FUNCTION_24	IF_5	IF_6	CALL_7
0x4002c52	          0x4889ee	                            mov rsi, rbp	       859	prdbg.c	FUNCTION_24	IF_5	IF_6	CALL_8
0x4002c55	          0x4889df	                            mov rdi, rbx	       859	prdbg.c	FUNCTION_24	IF_5	IF_6	CALL_8
0x4002c58	      0xe8cad8ffff	                    call sym.append_type	       859	prdbg.c	FUNCTION_24	IF_5	IF_6	CALL_8
0x4002c5d	            0x85c0	                           test eax, eax	       859	prdbg.c	FUNCTION_24	IF_5	IF_6	CALL_8
0x4002c5f	            0x7426	                            je 0x4002c87	       859	prdbg.c	FUNCTION_24	IF_5	IF_6	CALL_8
0x4002c61	      0xb801000000	                              mov eax, 1	       869	prdbg.c	FUNCTION_24
0x4002c66	          0x4585f6	                         test r14d, r14d	       863	prdbg.c	FUNCTION_24	IF_7
0x4002c69	            0x741c	                            je 0x4002c87	       863	prdbg.c	FUNCTION_24	IF_7
0x4002c6b	      0xbe00000000	                              mov esi, 0	       865	prdbg.c	FUNCTION_24	IF_7	IF_8	CALL_9
0x4002c70	          0x4889df	                            mov rdi, rbx	       865	prdbg.c	FUNCTION_24	IF_7	IF_8	CALL_9
0x4002c73	      0xe8afd8ffff	                    call sym.append_type	       865	prdbg.c	FUNCTION_24	IF_7	IF_8	CALL_9
0x4002c78	            0x85c0	                           test eax, eax	       834	prdbg.c	FUNCTION_24	IF_1
0x4002c7a	           0xf95c0	                                setne al	       834	prdbg.c	FUNCTION_24	IF_1
0x4002c7d	           0xfb6c0	                           movzx eax, al	       834	prdbg.c	FUNCTION_24	IF_1
0x4002c80	            0xeb05	                           jmp 0x4002c87	       834	prdbg.c	FUNCTION_24	IF_1
0x4002c82	      0xb800000000	                              mov eax, 0	       834	prdbg.c	FUNCTION_24	IF_1
0x4002c87	      0x488b542478	            mov rdx, qword [rsp + 0x78] 	       870	prdbg.c	FUNCTION_24
0x4002c8c	    0x644833142528	                xor rdx, qword fs:[0x28]	       870	prdbg.c	FUNCTION_24
0x4002c95	            0x7405	                            je 0x4002c9c	       870	prdbg.c	FUNCTION_24
0x4002c97	      0xe800000000	                          call 0x4002c9c	       870	prdbg.c	FUNCTION_24
0x4002c9c	        0x4883ec80	             sub rsp, 0xffffffffffffff80	       870	prdbg.c	FUNCTION_24
0x4002ca0	              0x5b	                                 pop rbx	       870	prdbg.c	FUNCTION_24
0x4002ca1	              0x5d	                                 pop rbp	       870	prdbg.c	FUNCTION_24
0x4002ca2	            0x415c	                                 pop r12	       870	prdbg.c	FUNCTION_24
0x4002ca4	            0x415d	                                 pop r13	       870	prdbg.c	FUNCTION_24
0x4002ca6	            0x415e	                                 pop r14	       870	prdbg.c	FUNCTION_24
0x4002ca8	              0xc3	                                     ret	       870	prdbg.c	FUNCTION_24
pr_variable	IF,2:WHILE,0:ELSE,0:CALL,5:FOR,0:functions,0:SWITCH,1:DO,0	67
0x40037d5	            0x4155	                                push r13	      1748	prdbg.c	FUNCTION_49
0x40037d7	            0x4154	                                push r12	      1748	prdbg.c	FUNCTION_49
0x40037d9	              0x55	                                push rbp	      1748	prdbg.c	FUNCTION_49
0x40037da	              0x53	                                push rbx	      1748	prdbg.c	FUNCTION_49
0x40037db	        0x4883ec28	                           sub rsp, 0x28	      1748	prdbg.c	FUNCTION_49
0x40037df	          0x4889fb	                            mov rbx, rdi	      1748	prdbg.c	FUNCTION_49
0x40037e2	            0x89d5	                            mov ebp, edx	      1748	prdbg.c	FUNCTION_49
0x40037e4	          0x4989cd	                            mov r13, rcx	      1748	prdbg.c	FUNCTION_49
0x40037e7	    0x64488b042528	                mov rax, qword fs:[0x28]	      1748	prdbg.c	FUNCTION_49
0x40037f0	      0x4889442418	             mov qword [rsp + 0x18], rax	      1748	prdbg.c	FUNCTION_49
0x40037f5	            0x31c0	                            xor eax, eax	      1748	prdbg.c	FUNCTION_49
0x40037f7	      0xe8cecdffff	                call sym.substitute_type	      1753	prdbg.c	FUNCTION_49	IF_1	CALL_1
0x40037fc	            0x85c0	                           test eax, eax	      1753	prdbg.c	FUNCTION_49	IF_1	CALL_1
0x40037fe	     0xf84ab000000	                            je 0x40038af	      1753	prdbg.c	FUNCTION_49	IF_1	CALL_1
0x4003804	          0x4889df	                            mov rdi, rbx	      1756	prdbg.c	FUNCTION_49	CALL_2
0x4003807	      0xe879c9ffff	                       call sym.pop_type	      1756	prdbg.c	FUNCTION_49	CALL_2
0x400380c	          0x4989c4	                            mov r12, rax	      1756	prdbg.c	FUNCTION_49	CALL_2
0x400380f	      0xb800000000	                              mov eax, 0	      1758	prdbg.c	FUNCTION_49	IF_2
0x4003814	          0x4d85e4	                           test r12, r12	      1757	prdbg.c	FUNCTION_49	IF_2
0x4003817	     0xf8492000000	                            je 0x40038af	      1757	prdbg.c	FUNCTION_49	IF_2
0x400381d	          0x4889df	                            mov rdi, rbx	      1760	prdbg.c	FUNCTION_49	CALL_3
0x4003820	      0xe8a4c8ffff	                         call sym.indent	      1760	prdbg.c	FUNCTION_49	CALL_3
0x4003825	          0x83fd02	                              cmp ebp, 2	      1761	prdbg.c	FUNCTION_49	SWITCH_1
0x4003828	            0x723c	                            jb 0x4003866	      1761	prdbg.c	FUNCTION_49	SWITCH_1
0x400382a	          0x83fd03	                              cmp ebp, 3	      1761	prdbg.c	FUNCTION_49	SWITCH_1
0x400382d	            0x7607	                           jbe 0x4003836	      1761	prdbg.c	FUNCTION_49	SWITCH_1
0x400382f	          0x83fd05	                              cmp ebp, 5	      1761	prdbg.c	FUNCTION_49	SWITCH_1
0x4003832	            0x741b	                            je 0x400384f	      1761	prdbg.c	FUNCTION_49	SWITCH_1
0x4003834	            0xeb30	                           jmp 0x4003866	      1761	prdbg.c	FUNCTION_49	SWITCH_1
0x4003836	          0x488b0b	                    mov rcx, qword [rbx]	        97	stdio2.h	CALL_93
0x4003839	      0xba07000000	                              mov edx, 7	        97	stdio2.h	CALL_93
0x400383e	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_93
0x4003843	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_93
0x4003848	      0xe800000000	                          call 0x400384d	        97	stdio2.h	CALL_93
0x400384d	            0xeb17	                           jmp 0x4003866	        97	stdio2.h	CALL_93
0x400384f	          0x488b0b	                    mov rcx, qword [rbx]	        97	stdio2.h	CALL_93
0x4003852	      0xba09000000	                              mov edx, 9	        97	stdio2.h	CALL_93
0x4003857	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_93
0x400385c	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_93
0x4003861	      0xe800000000	                          call 0x4003866	        97	stdio2.h	CALL_93
0x4003866	          0x4d89e8	                             mov r8, r13	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003869	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x400386e	      0xba16000000	                           mov edx, 0x16	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003873	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003878	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_84	CALL_1
0x400387b	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003880	      0xe800000000	                          call 0x4003885	        33	stdio2.h	FUNCTION_84	CALL_1
0x4003885	          0x4989e0	                             mov r8, rsp	        97	stdio2.h	CALL_93
0x4003888	          0x4c89e1	                            mov rcx, r12	        97	stdio2.h	CALL_93
0x400388b	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_93
0x4003890	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_93
0x4003895	          0x488b3b	                    mov rdi, qword [rbx]	        97	stdio2.h	CALL_93
0x4003898	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_93
0x400389d	      0xe800000000	                          call 0x40038a2	        97	stdio2.h	CALL_93
0x40038a2	          0x4c89e7	                            mov rdi, r12	      1776	prdbg.c	FUNCTION_49	CALL_5
0x40038a5	      0xe800000000	                          call 0x40038aa	      1776	prdbg.c	FUNCTION_49	CALL_5
0x40038aa	      0xb801000000	                              mov eax, 1	      1778	prdbg.c	FUNCTION_49
0x40038af	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      1779	prdbg.c	FUNCTION_49
0x40038b4	    0x644833142528	                xor rdx, qword fs:[0x28]	      1779	prdbg.c	FUNCTION_49
0x40038bd	            0x7405	                            je 0x40038c4	      1779	prdbg.c	FUNCTION_49
0x40038bf	      0xe800000000	                          call 0x40038c4	      1779	prdbg.c	FUNCTION_49
0x40038c4	        0x4883c428	                           add rsp, 0x28	      1779	prdbg.c	FUNCTION_49
0x40038c8	              0x5b	                                 pop rbx	      1779	prdbg.c	FUNCTION_49
0x40038c9	              0x5d	                                 pop rbp	      1779	prdbg.c	FUNCTION_49
0x40038ca	            0x415c	                                 pop r12	      1779	prdbg.c	FUNCTION_49
0x40038cc	            0x415d	                                 pop r13	      1779	prdbg.c	FUNCTION_49
0x40038ce	              0xc3	                                     ret	      1779	prdbg.c	FUNCTION_49
pr_start_compilation_unit	IF,0:WHILE,0:ELSE,0:CALL,1:FOR,0:functions,0:SWITCH,0:DO,0	17
0x40002f9	        0x4883ec08	                              sub rsp, 8	       534	prdbg.c	FUNCTION_11
0x40002fd	        0x837f0800	                  cmp dword [rdi + 8], 0	       537	prdbg.c	FUNCTION_11	CALL_1
0x4000301	            0x7419	                            je 0x400031c	       537	prdbg.c	FUNCTION_11	CALL_1
0x4000303	      0xb900000000	                              mov ecx, 0	       537	prdbg.c	FUNCTION_11	CALL_1
0x4000308	      0xba19020000	                          mov edx, 0x219	       537	prdbg.c	FUNCTION_11	CALL_1
0x400030d	      0xbe00000000	                              mov esi, 0	       537	prdbg.c	FUNCTION_11	CALL_1
0x4000312	      0xbf00000000	                              mov edi, 0	       537	prdbg.c	FUNCTION_11	CALL_1
0x4000317	      0xe800000000	                          call 0x400031c	       537	prdbg.c	FUNCTION_11	CALL_1
0x400031c	          0x4889f1	                            mov rcx, rsi	        97	stdio2.h	CALL_93
0x400031f	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_93
0x4000324	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_93
0x4000329	          0x488b3f	                    mov rdi, qword [rdi]	        97	stdio2.h	CALL_93
0x400032c	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_93
0x4000331	      0xe800000000	                          call 0x4000336	        97	stdio2.h	CALL_93
0x4000336	      0xb801000000	                              mov eax, 1	       542	prdbg.c	FUNCTION_11
0x400033b	        0x4883c408	                              add rsp, 8	       542	prdbg.c	FUNCTION_11
0x400033f	              0xc3	                                     ret	       542	prdbg.c	FUNCTION_11
tg_tag	IF,1:WHILE,0:ELSE,0:CALL,2:FOR,0:functions,0:SWITCH,0:DO,0	10
0x4000212	        0x4883ec08	                              sub rsp, 8	      2525	prdbg.c	FUNCTION_73
0x4000216	      0xe86affffff	                       call sym.pop_type	      2529	prdbg.c	FUNCTION_73	CALL_1
0x400021b	          0x4889c7	                            mov rdi, rax	      2529	prdbg.c	FUNCTION_73	CALL_1
0x400021e	      0xb800000000	                              mov eax, 0	      2531	prdbg.c	FUNCTION_73	IF_1
0x4000223	          0x4885ff	                           test rdi, rdi	      2530	prdbg.c	FUNCTION_73	IF_1
0x4000226	            0x740a	                            je 0x4000232	      2530	prdbg.c	FUNCTION_73	IF_1
0x4000228	      0xe800000000	                          call 0x400022d	      2532	prdbg.c	FUNCTION_73	CALL_2
0x400022d	      0xb801000000	                              mov eax, 1	      2534	prdbg.c	FUNCTION_73
0x4000232	        0x4883c408	                              add rsp, 8	      2535	prdbg.c	FUNCTION_73
0x4000236	              0xc3	                                     ret	      2535	prdbg.c	FUNCTION_73
pr_reference_type	IF,0:WHILE,0:ELSE,0:CALL,2:FOR,0:functions,0:SWITCH,0:DO,0	12
0x4000824	        0x4883ec08	                              sub rsp, 8	       791	prdbg.c	FUNCTION_22
0x4000828	      0x48837f1000	               cmp qword [rdi + 0x10], 0	       794	prdbg.c	FUNCTION_22	CALL_1
0x400082d	            0x7519	                           jne 0x4000848	       794	prdbg.c	FUNCTION_22	CALL_1
0x400082f	      0xb900000000	                              mov ecx, 0	       794	prdbg.c	FUNCTION_22	CALL_1
0x4000834	      0xba1a030000	                          mov edx, 0x31a	       794	prdbg.c	FUNCTION_22	CALL_1
0x4000839	      0xbe00000000	                              mov esi, 0	       794	prdbg.c	FUNCTION_22	CALL_1
0x400083e	      0xbf00000000	                              mov edi, 0	       794	prdbg.c	FUNCTION_22	CALL_1
0x4000843	      0xe800000000	                          call 0x4000848	       794	prdbg.c	FUNCTION_22	CALL_1
0x4000848	      0xbe00000000	                              mov esi, 0	       796	prdbg.c	FUNCTION_22	CALL_2
0x400084d	      0xe878fdffff	                call sym.substitute_type	       796	prdbg.c	FUNCTION_22	CALL_2
0x4000852	        0x4883c408	                              add rsp, 8	       797	prdbg.c	FUNCTION_22
0x4000856	              0xc3	                                     ret	       797	prdbg.c	FUNCTION_22
pr_class_start_method	IF,0:WHILE,0:ELSE,0:CALL,1:FOR,0:functions,0:SWITCH,0:DO,0	12
0x4000282	        0x488b4710	            mov rax, qword [rdi + 0x10] 	      1432	prdbg.c	FUNCTION_37	CALL_1
0x4000286	          0x4885c0	                           test rax, rax	      1432	prdbg.c	FUNCTION_37	CALL_1
0x4000289	            0x751d	                           jne 0x40002a8	      1432	prdbg.c	FUNCTION_37	CALL_1
0x400028b	        0x4883ec08	                              sub rsp, 8	      1429	prdbg.c	FUNCTION_37
0x400028f	      0xb900000000	                              mov ecx, 0	      1432	prdbg.c	FUNCTION_37	CALL_1
0x4000294	      0xba98050000	                          mov edx, 0x598	      1432	prdbg.c	FUNCTION_37	CALL_1
0x4000299	      0xbe00000000	                              mov esi, 0	      1432	prdbg.c	FUNCTION_37	CALL_1
0x400029e	      0xbf00000000	                              mov edi, 0	      1432	prdbg.c	FUNCTION_37	CALL_1
0x40002a3	      0xe800000000	                          call 0x40002a8	      1432	prdbg.c	FUNCTION_37	CALL_1
0x40002a8	        0x48897018	             mov qword [rax + 0x18], rsi	      1433	prdbg.c	FUNCTION_37
0x40002ac	      0xb801000000	                              mov eax, 1	      1435	prdbg.c	FUNCTION_37
0x40002b1	              0xc3	                                     ret	      1435	prdbg.c	FUNCTION_37
