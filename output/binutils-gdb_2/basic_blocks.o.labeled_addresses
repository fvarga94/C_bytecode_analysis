cmp_ncalls	ELSE,2:FOR,0:CALL,0:SWITCH,0:IF,4:WHILE,0:DO,0:functions,0	21
0x4000040	          0x488b17	                    mov rdx, qword [rdi]	        87	basic_blocks.c	ELSE_2	FUNCTION_2
0x4000043	          0x488b0e	                    mov rcx, qword [rsi]	        88	basic_blocks.c	ELSE_2	FUNCTION_2
0x4000046	          0x4885d2	                           test rdx, rdx	        90	basic_blocks.c	ELSE_2	FUNCTION_2	IF_1
0x4000049	            0x7420	                            je 0x400006b	        90	basic_blocks.c	ELSE_2	FUNCTION_2	IF_1
0x400004b	          0x4885c9	                           test rcx, rcx	        92	basic_blocks.c	ELSE_2	FUNCTION_2	ELSE_1	IF_2
0x400004e	            0x7421	                            je 0x4000071	        92	basic_blocks.c	ELSE_2	FUNCTION_2	ELSE_1	IF_2
0x4000050	        0x488b7a28	            mov rdi, qword [rdx + 0x28] 	        95	basic_blocks.c	ELSE_2	FUNCTION_2	IF_3
0x4000054	        0x488b7128	            mov rsi, qword [rcx + 0x28] 	        95	basic_blocks.c	ELSE_2	FUNCTION_2	IF_3
0x4000058	      0xb801000000	                              mov eax, 1	        96	basic_blocks.c	ELSE_2	FUNCTION_2	IF_3
0x400005d	          0x4839f7	                            cmp rdi, rsi	        95	basic_blocks.c	ELSE_2	FUNCTION_2	IF_3
0x4000060	            0x721a	                            jb 0x400007c	        95	basic_blocks.c	ELSE_2	FUNCTION_2	IF_3
0x4000062	            0x7713	                            ja 0x4000077	        97	basic_blocks.c	FUNCTION_2	IF_4
0x4000064	          0x8b4220	            mov eax, dword [rdx + 0x20] 	       100	basic_blocks.c	FUNCTION_2	ELSE_2
0x4000067	          0x2b4120	             sub eax, dword [rcx + 0x20]	       100	basic_blocks.c	FUNCTION_2	ELSE_2
0x400006a	              0xc3	                                     ret	       100	basic_blocks.c	FUNCTION_2	ELSE_2
0x400006b	      0xb801000000	                              mov eax, 1	        91	basic_blocks.c	ELSE_2	FUNCTION_2	IF_1
0x4000070	              0xc3	                                     ret	        91	basic_blocks.c	ELSE_2	FUNCTION_2	IF_1
0x4000071	      0xb8ffffffff	                     mov eax, 0xffffffff	        93	basic_blocks.c	ELSE_2	FUNCTION_2	ELSE_1	IF_2
0x4000076	              0xc3	                                     ret	        93	basic_blocks.c	ELSE_2	FUNCTION_2	ELSE_1	IF_2
0x4000077	      0xb8ffffffff	                     mov eax, 0xffffffff	        98	basic_blocks.c	FUNCTION_2	IF_4	ELSE_2
0x400007c	            0xf3c3	                                     ret	       101	basic_blocks.c	FUNCTION_2	ELSE_2
annotate_with_count	ELSE,3:FOR,4:CALL,8:SWITCH,0:IF,11:WHILE,0:DO,0:functions,0	222
0x40000f1	            0x4157	                                push r15	       321	basic_blocks.c	FUNCTION_7
0x40000f3	            0x4156	                                push r14	       321	basic_blocks.c	FUNCTION_7
0x40000f5	            0x4155	                                push r13	       321	basic_blocks.c	FUNCTION_7
0x40000f7	            0x4154	                                push r12	       321	basic_blocks.c	FUNCTION_7
0x40000f9	              0x55	                                push rbp	       321	basic_blocks.c	FUNCTION_7
0x40000fa	              0x53	                                push rbx	       321	basic_blocks.c	FUNCTION_7
0x40000fb	    0x4881ec580100	                          sub rsp, 0x158	       321	basic_blocks.c	FUNCTION_7
0x4000102	      0x48897c2408	                mov qword [rsp + 8], rdi	       321	basic_blocks.c	FUNCTION_7
0x4000107	        0x89742404	                mov dword [rsp + 4], esi	       321	basic_blocks.c	FUNCTION_7
0x400010b	    0x64488b042528	                mov rax, qword fs:[0x28]	       321	basic_blocks.c	FUNCTION_7
0x4000114	    0x488984244801	            mov qword [rsp + 0x148], rax	       321	basic_blocks.c	FUNCTION_7
0x400011c	            0x31c0	                            xor eax, eax	       321	basic_blocks.c	FUNCTION_7
0x400011e	          0x395118	            cmp dword [rcx + 0x18], edx 	       330	basic_blocks.c	FUNCTION_7	IF_1
0x4000121	            0x7c11	                            jl 0x4000134	       330	basic_blocks.c	FUNCTION_7	IF_1
0x4000123	          0x4863d2	                         movsxd rdx, edx	       331	basic_blocks.c	FUNCTION_7	IF_1
0x4000126	        0x488b4120	            mov rax, qword [rcx + 0x20] 	       331	basic_blocks.c	FUNCTION_7	IF_1
0x400012a	      0x4c8b6cd0f8	        mov r13, qword [rax + rdx*8 - 8]	       331	basic_blocks.c	FUNCTION_7	IF_1
0x400012f	          0x4d85ed	                           test r13, r13	       333	basic_blocks.c	FUNCTION_7	IF_2
0x4000132	            0x7536	                           jne 0x400016a	       333	basic_blocks.c	FUNCTION_7	IF_2
0x4000134	        0x8b742404	                mov esi, dword [rsp + 4]	       335	basic_blocks.c	FUNCTION_7	IF_2	FOR_1
0x4000138	            0x85f6	                           test esi, esi	       335	basic_blocks.c	FUNCTION_7	IF_2	FOR_1
0x400013a	            0x741c	                            je 0x4000158	       335	basic_blocks.c	FUNCTION_7	IF_2	FOR_1
0x400013c	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       335	basic_blocks.c	FUNCTION_7	IF_2	FOR_1
0x4000141	          0x4889f8	                            mov rax, rdi	       335	basic_blocks.c	FUNCTION_7	IF_2	FOR_1
0x4000144	          0x8d56ff	                      lea edx, [rsi - 1]	       335	basic_blocks.c	FUNCTION_7	IF_2	FOR_1
0x4000147	      0x488d541701	                lea rdx, [rdi + rdx + 1]	       335	basic_blocks.c	FUNCTION_7	IF_2	FOR_1
0x400014c	          0xc60020	                    mov byte [rax], 0x20	       336	basic_blocks.c	FUNCTION_7	IF_2	FOR_1
0x400014f	        0x4883c001	                              add rax, 1	       336	basic_blocks.c	FUNCTION_7	IF_2	FOR_1
0x4000153	          0x4839d0	                            cmp rax, rdx	       335	basic_blocks.c	FUNCTION_7	IF_2	FOR_1
0x4000156	            0x75f4	                           jne 0x400014c	       335	basic_blocks.c	FUNCTION_7	IF_2	FOR_1
0x4000158	        0x8b442404	                mov eax, dword [rsp + 4]	       337	basic_blocks.c	FUNCTION_7	IF_2
0x400015c	      0x488b742408	                mov rsi, qword [rsp + 8]	       337	basic_blocks.c	FUNCTION_7	IF_2
0x4000161	        0xc6040600	                 mov byte [rsi + rax], 0	       337	basic_blocks.c	FUNCTION_7	IF_2
0x4000165	      0xe9fe020000	                           jmp 0x4000468	       337	basic_blocks.c	FUNCTION_7	IF_2
0x400016a	    0x488305000000	               add qword [0x04000172], 1	       347	basic_blocks.c	FUNCTION_7	ELSE_1
0x4000172	      0xc644241000	                mov byte [rsp + 0x10], 0	       350	basic_blocks.c	FUNCTION_7	ELSE_1
0x4000177	      0x41f6452401	               test byte [r13 + 0x24], 1	       361	basic_blocks.c	FUNCTION_7	ELSE_1	IF_3
0x400017c	            0x747c	                            je 0x40001fa	       361	basic_blocks.c	FUNCTION_7	ELSE_1	IF_3
0x400017e	      0x488d5c2410	                   lea rbx, [rsp + 0x10]	        33	stdio2.h	FUNCTION_9	CALL_1
0x4000183	        0x4d8b4528	              mov r8, qword [r13 + 0x28]	        33	stdio2.h	FUNCTION_9	CALL_1
0x4000187	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_9	CALL_1
0x400018c	      0xba2c010000	                          mov edx, 0x12c	        33	stdio2.h	FUNCTION_9	CALL_1
0x4000191	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_9	CALL_1
0x4000196	          0x4889df	                            mov rdi, rbx	        33	stdio2.h	FUNCTION_9	CALL_1
0x4000199	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_9	CALL_1
0x400019e	      0xe800000000	                          call 0x40001a3	        33	stdio2.h	FUNCTION_9	CALL_1
0x40001a3	      0xb800000000	                              mov eax, 0	       364	basic_blocks.c	FUNCTION_7	ELSE_1	IF_3	CALL_1
0x40001a8	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       364	basic_blocks.c	FUNCTION_7	ELSE_1	IF_3	CALL_1
0x40001af	          0x4889df	                            mov rdi, rbx	       364	basic_blocks.c	FUNCTION_7	ELSE_1	IF_3	CALL_1
0x40001b2	            0xf2ae	              repne scasb al, byte [rdi]	       364	basic_blocks.c	FUNCTION_7	ELSE_1	IF_3	CALL_1
0x40001b4	          0x48f7d1	                                 not rcx	       364	basic_blocks.c	FUNCTION_7	ELSE_1	IF_3	CALL_1
0x40001b7	      0x488d5c0bff	                lea rbx, [rbx + rcx - 1]	       364	basic_blocks.c	FUNCTION_7	ELSE_1	IF_3	CALL_1
0x40001bc	        0x4d8b6528	            mov r12, qword [r13 + 0x28] 	       365	basic_blocks.c	FUNCTION_7	ELSE_1	IF_3
0x40001c0	    0x4c8925000000	            mov qword [0x040001c7], r12 	       365	basic_blocks.c	FUNCTION_7	ELSE_1	IF_3
0x40001c7	          0x4c89e0	                            mov rax, r12	       366	basic_blocks.c	FUNCTION_7	ELSE_1	IF_3
0x40001ca	    0x41be01000000	                             mov r14d, 1	       368	basic_blocks.c	FUNCTION_7	ELSE_1	IF_3
0x40001d0	            0xeb18	                           jmp 0x40001ea	       368	basic_blocks.c	FUNCTION_7	ELSE_1	IF_3
0x40001d2	    0x41be00000000	                             mov r14d, 0	       353	basic_blocks.c	FUNCTION_7	ELSE_1
0x40001d8	    0x41bc00000000	                             mov r12d, 0	       352	basic_blocks.c	FUNCTION_7	ELSE_1
0x40001de	      0x488d5c2410	                   lea rbx, [rsp + 0x10]	       349	basic_blocks.c	FUNCTION_7	ELSE_1
0x40001e3	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       326	basic_blocks.c	FUNCTION_7
0x40001ea	      0x49837d3800	               cmp qword [r13 + 0x38], 0	       384	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2
0x40001ef	     0xf8592000000	                           jne 0x4000287	       384	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2
0x40001f5	      0xe92b010000	                           jmp 0x4000325	       384	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2
0x40001fa	    0x833d00000000	               cmp dword [0x04000201], 0	       370	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4
0x4000201	            0x74cf	                            je 0x40001d2	       370	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4
0x4000203	        0x498b4538	            mov rax, qword [r13 + 0x38] 	       371	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4
0x4000207	          0x4885c0	                           test rax, rax	       371	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4
0x400020a	     0xf842a010000	                            je 0x400033a	       371	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4
0x4000210	        0x493b4500	                    cmp rax, qword [r13]	       371	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4
0x4000214	            0x7659	                           jbe 0x400026f	       371	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4
0x4000216	      0x488d5c2410	                   lea rbx, [rsp + 0x10]	        33	stdio2.h	FUNCTION_9	CALL_1
0x400021b	    0x4c8b05000000	              mov r8, qword [0x04000222]	        33	stdio2.h	FUNCTION_9	CALL_1
0x4000222	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_9	CALL_1
0x4000227	      0xba2c010000	                          mov edx, 0x12c	        33	stdio2.h	FUNCTION_9	CALL_1
0x400022c	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_9	CALL_1
0x4000231	          0x4889df	                            mov rdi, rbx	        33	stdio2.h	FUNCTION_9	CALL_1
0x4000234	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_9	CALL_1
0x4000239	      0xe800000000	                          call 0x400023e	        33	stdio2.h	FUNCTION_9	CALL_1
0x400023e	      0xb800000000	                              mov eax, 0	       374	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4	CALL_2
0x4000243	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       374	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4	CALL_2
0x400024a	          0x4889df	                            mov rdi, rbx	       374	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4	CALL_2
0x400024d	            0xf2ae	              repne scasb al, byte [rdi]	       374	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4	CALL_2
0x400024f	          0x4889c8	                            mov rax, rcx	       374	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4	CALL_2
0x4000252	          0x48f7d0	                                 not rax	       374	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4	CALL_2
0x4000255	      0x488d5c03ff	                lea rbx, [rbx + rax - 1]	       374	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4	CALL_2
0x400025a	    0x4c8b25000000	            mov r12, qword [0x04000261] 	       375	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4
0x4000261	          0x4c89e0	                            mov rax, r12	       375	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4
0x4000264	    0x41be01000000	                             mov r14d, 1	       377	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4
0x400026a	      0xe97bffffff	                           jmp 0x40001ea	       377	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_2	IF_4
0x400026f	    0x41be00000000	                             mov r14d, 0	       353	basic_blocks.c	FUNCTION_7	ELSE_1
0x4000275	      0x488d5c2410	                   lea rbx, [rsp + 0x10]	       349	basic_blocks.c	FUNCTION_7	ELSE_1
0x400027a	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       326	basic_blocks.c	FUNCTION_7
0x4000281	    0x41bc00000000	                             mov r12d, 0	       352	basic_blocks.c	FUNCTION_7	ELSE_1
0x4000287	    0x498dad880000	                   lea rbp, [r13 + 0x88]	       352	basic_blocks.c	FUNCTION_7	ELSE_1
0x400028e	    0x4981c5d00000	                           add r13, 0xd0	       352	basic_blocks.c	FUNCTION_7	ELSE_1
0x4000295	      0x4c8d7c2410	                   lea r15, [rsp + 0x10]	       397	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2	IF_7
0x400029a	        0x4c8b4500	                     mov r8, qword [rbp]	       386	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2
0x400029e	    0x4c8905000000	              mov qword [0x040002a5], r8	       386	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2
0x40002a5	          0x4585f6	                         test r14d, r14d	       387	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2	IF_5
0x40002a8	            0x750c	                           jne 0x40002b6	       387	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2	IF_5
0x40002aa	    0x41be01000000	                             mov r14d, 1	       390	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2	IF_5
0x40002b0	    0x41bc00000000	                             mov r12d, 0	       389	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2	IF_5
0x40002b6	          0x4d01c4	                             add r12, r8	       392	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2
0x40002b9	    0x833d00000000	               cmp dword [0x040002c0], 0	       394	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2	IF_6
0x40002c0	            0x7405	                            je 0x40002c7	       394	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2	IF_6
0x40002c2	          0x4939c0	                             cmp r8, rax	       394	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2	IF_6
0x40002c5	            0x744a	                            je 0x4000311	       394	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2	IF_6
0x40002c7	          0x4c39fb	                            cmp rbx, r15	       397	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2	IF_7
0x40002ca	            0x7607	                           jbe 0x40002d3	       397	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2	IF_7
0x40002cc	          0xc6032c	                    mov byte [rbx], 0x2c	       398	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2	IF_7
0x40002cf	        0x488d5b01	                      lea rbx, [rbx + 1]	       398	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2	IF_7
0x40002d3	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_9	CALL_1
0x40002d8	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_9	CALL_1
0x40002df	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_9	CALL_1
0x40002e4	          0x4889df	                            mov rdi, rbx	        33	stdio2.h	FUNCTION_9	CALL_1
0x40002e7	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_9	CALL_1
0x40002ec	      0xe800000000	                          call 0x40002f1	        33	stdio2.h	FUNCTION_9	CALL_1
0x40002f1	      0xb800000000	                              mov eax, 0	       400	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2	CALL_3
0x40002f6	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       400	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2	CALL_3
0x40002fd	          0x4889df	                            mov rdi, rbx	       400	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2	CALL_3
0x4000300	            0xf2ae	              repne scasb al, byte [rdi]	       400	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2	CALL_3
0x4000302	          0x48f7d1	                                 not rcx	       400	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2	CALL_3
0x4000305	      0x488d5c0bff	                lea rbx, [rbx + rcx - 1]	       400	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2	CALL_3
0x400030a	    0x488b05000000	            mov rax, qword [0x04000311] 	       402	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2
0x4000311	          0x4939ed	                            cmp r13, rbp	       384	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2
0x4000314	            0x740f	                            je 0x4000325	       384	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2
0x4000316	        0x4883c508	                              add rbp, 8	       384	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2
0x400031a	      0x48837db000	               cmp qword [rbp - 0x50], 0	       384	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2
0x400031f	     0xf8575ffffff	                           jne 0x400029a	       384	basic_blocks.c	FUNCTION_7	ELSE_1	FOR_2
0x4000325	    0x833d00000000	               cmp dword [0x0400032c], 0	       411	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8
0x400032c	            0x745b	                            je 0x4000389	       411	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8
0x400032e	      0x488d442410	                   lea rax, [rsp + 0x10]	       411	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8
0x4000333	          0x4839c3	                            cmp rbx, rax	       411	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8
0x4000336	            0x7551	                           jne 0x4000389	       411	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8
0x4000338	            0xeb05	                           jmp 0x400033f	       411	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8
0x400033a	      0x488d5c2410	                   lea rbx, [rsp + 0x10]	       349	basic_blocks.c	FUNCTION_7	ELSE_1
0x400033f	    0x4c8b05000000	              mov r8, qword [0x04000346]	        33	stdio2.h	FUNCTION_9	CALL_1
0x4000346	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_9	CALL_1
0x400034b	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_9	CALL_1
0x4000352	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_9	CALL_1
0x4000357	          0x4889df	                            mov rdi, rbx	        33	stdio2.h	FUNCTION_9	CALL_1
0x400035a	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_9	CALL_1
0x400035f	      0xe800000000	                          call 0x4000364	        33	stdio2.h	FUNCTION_9	CALL_1
0x4000364	      0xb800000000	                              mov eax, 0	       414	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8	CALL_4
0x4000369	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       414	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8	CALL_4
0x4000370	          0x4889df	                            mov rdi, rbx	       414	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8	CALL_4
0x4000373	            0xf2ae	              repne scasb al, byte [rdi]	       414	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8	CALL_4
0x4000375	          0x4889c8	                            mov rax, rcx	       414	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8	CALL_4
0x4000378	          0x48f7d0	                                 not rax	       414	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8	CALL_4
0x400037b	      0x488d5c03ff	                lea rbx, [rbx + rax - 1]	       414	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8	CALL_4
0x4000380	    0x4c8b25000000	            mov r12, qword [0x04000387] 	       415	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8
0x4000387	            0xeb3b	                           jmp 0x40003c4	       415	basic_blocks.c	FUNCTION_7	ELSE_1	IF_8
0x4000389	          0x4585f6	                         test r14d, r14d	       419	basic_blocks.c	FUNCTION_7	ELSE_1	IF_9
0x400038c	            0x7536	                           jne 0x40003c4	       419	basic_blocks.c	FUNCTION_7	ELSE_1	IF_9
0x400038e	        0x8b742404	                mov esi, dword [rsp + 4]	       423	basic_blocks.c	FUNCTION_7	ELSE_1	IF_9	FOR_3
0x4000392	            0x85f6	                           test esi, esi	       423	basic_blocks.c	FUNCTION_7	ELSE_1	IF_9	FOR_3
0x4000394	            0x741c	                            je 0x40003b2	       423	basic_blocks.c	FUNCTION_7	ELSE_1	IF_9	FOR_3
0x4000396	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       423	basic_blocks.c	FUNCTION_7	ELSE_1	IF_9	FOR_3
0x400039b	          0x4889f8	                            mov rax, rdi	       423	basic_blocks.c	FUNCTION_7	ELSE_1	IF_9	FOR_3
0x400039e	          0x8d56ff	                      lea edx, [rsi - 1]	       423	basic_blocks.c	FUNCTION_7	ELSE_1	IF_9	FOR_3
0x40003a1	      0x488d541701	                lea rdx, [rdi + rdx + 1]	       423	basic_blocks.c	FUNCTION_7	ELSE_1	IF_9	FOR_3
0x40003a6	          0xc60020	                    mov byte [rax], 0x20	       424	basic_blocks.c	FUNCTION_7	ELSE_1	IF_9	FOR_3
0x40003a9	        0x4883c001	                              add rax, 1	       424	basic_blocks.c	FUNCTION_7	ELSE_1	IF_9	FOR_3
0x40003ad	          0x4839c2	                            cmp rdx, rax	       423	basic_blocks.c	FUNCTION_7	ELSE_1	IF_9	FOR_3
0x40003b0	            0x75f4	                           jne 0x40003a6	       423	basic_blocks.c	FUNCTION_7	ELSE_1	IF_9	FOR_3
0x40003b2	        0x8b442404	                mov eax, dword [rsp + 4]	       425	basic_blocks.c	FUNCTION_7	ELSE_1	IF_9
0x40003b6	      0x488b742408	                mov rsi, qword [rsp + 8]	       425	basic_blocks.c	FUNCTION_7	ELSE_1	IF_9
0x40003bb	        0xc6040600	                 mov byte [rsi + rax], 0	       425	basic_blocks.c	FUNCTION_7	ELSE_1	IF_9
0x40003bf	      0xe9a4000000	                           jmp 0x4000468	       425	basic_blocks.c	FUNCTION_7	ELSE_1	IF_9
0x40003c4	    0x488305000000	               add qword [0x040003cc], 1	       429	basic_blocks.c	FUNCTION_7	ELSE_1
0x40003cc	    0x4c3925000000	            cmp qword [0x040003d3], r12 	       431	basic_blocks.c	FUNCTION_7	ELSE_1	IF_10
0x40003d3	            0x7614	                           jbe 0x40003e9	       431	basic_blocks.c	FUNCTION_7	ELSE_1	IF_10
0x40003d5	    0xc74424102323	     mov dword [rsp + 0x10], 0x23232323 	       110	string3.h	FUNCTION_32	CALL_3
0x40003dd	    0x66c744241423	            mov word [rsp + 0x14], 0x23 	       110	string3.h	FUNCTION_32	CALL_3
0x40003e4	      0x488d5c2415	                   lea rbx, [rsp + 0x15]	       434	basic_blocks.c	FUNCTION_7	ELSE_1	IF_10
0x40003e9	    0xc703202d3e20	            mov dword [rbx], 0x203e2d20 	       110	string3.h	FUNCTION_32	CALL_3
0x40003ef	        0xc6430400	                   mov byte [rbx + 4], 0	       110	string3.h	FUNCTION_32	CALL_3
0x40003f3	    0x488d84245001	                  lea rax, [rsp + 0x150]	       440	basic_blocks.c	FUNCTION_7	ELSE_1
0x40003fb	          0x4829c3	                            sub rbx, rax	       440	basic_blocks.c	FUNCTION_7	ELSE_1
0x40003fe	    0x488d9b440100	                  lea rbx, [rbx + 0x144]	       440	basic_blocks.c	FUNCTION_7	ELSE_1
0x4000405	        0x8b442404	                mov eax, dword [rsp + 4]	       441	basic_blocks.c	FUNCTION_7	ELSE_1	IF_11
0x4000409	            0x39d8	                            cmp eax, ebx	       441	basic_blocks.c	FUNCTION_7	ELSE_1	IF_11
0x400040b	            0x771e	                            ja 0x400042b	       441	basic_blocks.c	FUNCTION_7	ELSE_1	IF_11
0x400040d	            0x89c3	                            mov ebx, eax	       443	basic_blocks.c	FUNCTION_7	ELSE_1	IF_11	CALL_7
0x400040f	          0x4889da	                            mov rdx, rbx	       126	string3.h	FUNCTION_34	CALL_3
0x4000412	      0x488d742410	                   lea rsi, [rsp + 0x10]	       126	string3.h	FUNCTION_34	CALL_3
0x4000417	      0x4c8b7c2408	                mov r15, qword [rsp + 8]	       126	string3.h	FUNCTION_34	CALL_3
0x400041c	          0x4c89ff	                            mov rdi, r15	       126	string3.h	FUNCTION_34	CALL_3
0x400041f	      0xe800000000	                          call 0x4000424	       126	string3.h	FUNCTION_34	CALL_3
0x4000424	      0x41c6041f00	                 mov byte [r15 + rbx], 0	       444	basic_blocks.c	FUNCTION_7	ELSE_1	IF_11
0x4000429	            0xeb3d	                           jmp 0x4000468	       444	basic_blocks.c	FUNCTION_7	ELSE_1	IF_11
0x400042b	      0x448b7c2404	               mov r15d, dword [rsp + 4]	       110	string3.h	FUNCTION_32	CALL_3
0x4000430	          0x4489ff	                           mov edi, r15d	       110	string3.h	FUNCTION_32	CALL_3
0x4000433	            0x89d8	                            mov eax, ebx	       110	string3.h	FUNCTION_32	CALL_3
0x4000435	          0x4829c7	                            sub rdi, rax	       110	string3.h	FUNCTION_32	CALL_3
0x4000438	      0x4c8b742408	                mov r14, qword [rsp + 8]	       110	string3.h	FUNCTION_32	CALL_3
0x400043d	          0x4c01f7	                            add rdi, r14	       110	string3.h	FUNCTION_32	CALL_3
0x4000440	      0x488d742410	                   lea rsi, [rsp + 0x10]	       110	string3.h	FUNCTION_32	CALL_3
0x4000445	      0xe800000000	                          call 0x400044a	       110	string3.h	FUNCTION_32	CALL_3
0x400044a	          0x4489fa	                           mov edx, r15d	       451	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_3	FOR_4
0x400044d	            0x29da	                            sub edx, ebx	       451	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_3	FOR_4
0x400044f	            0x7417	                            je 0x4000468	       451	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_3	FOR_4
0x4000451	          0x4c89f0	                            mov rax, r14	       451	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_3	FOR_4
0x4000454	          0x8d52ff	                      lea edx, [rdx - 1]	       451	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_3	FOR_4
0x4000457	      0x498d541601	                lea rdx, [r14 + rdx + 1]	       451	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_3	FOR_4
0x400045c	          0xc60020	                    mov byte [rax], 0x20	       452	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_3	FOR_4
0x400045f	        0x4883c001	                              add rax, 1	       452	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_3	FOR_4
0x4000463	          0x4839d0	                            cmp rax, rdx	       451	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_3	FOR_4
0x4000466	            0x75f4	                           jne 0x400045c	       451	basic_blocks.c	FUNCTION_7	ELSE_1	ELSE_3	FOR_4
0x4000468	    0x488b84244801	           mov rax, qword [rsp + 0x148] 	       455	basic_blocks.c	FUNCTION_7
0x4000470	    0x644833042528	                xor rax, qword fs:[0x28]	       455	basic_blocks.c	FUNCTION_7
0x4000479	            0x7405	                            je 0x4000480	       455	basic_blocks.c	FUNCTION_7
0x400047b	      0xe800000000	                          call 0x4000480	       455	basic_blocks.c	FUNCTION_7
0x4000480	    0x4881c4580100	                          add rsp, 0x158	       455	basic_blocks.c	FUNCTION_7
0x4000487	              0x5b	                                 pop rbx	       455	basic_blocks.c	FUNCTION_7
0x4000488	              0x5d	                                 pop rbp	       455	basic_blocks.c	FUNCTION_7
0x4000489	            0x415c	                                 pop r12	       455	basic_blocks.c	FUNCTION_7
0x400048b	            0x415d	                                 pop r13	       455	basic_blocks.c	FUNCTION_7
0x400048d	            0x415e	                                 pop r14	       455	basic_blocks.c	FUNCTION_7
0x400048f	            0x415f	                                 pop r15	       455	basic_blocks.c	FUNCTION_7
0x4000491	              0xc3	                                     ret	       455	basic_blocks.c	FUNCTION_7
print_exec_counts	ELSE,1:FOR,3:CALL,9:SWITCH,0:IF,4:WHILE,0:DO,0:functions,0	153
0x400083a	            0x4157	                                push r15	       252	basic_blocks.c	FUNCTION_6
0x400083c	            0x4156	                                push r14	       252	basic_blocks.c	FUNCTION_6
0x400083e	            0x4155	                                push r13	       252	basic_blocks.c	FUNCTION_6
0x4000840	            0x4154	                                push r12	       252	basic_blocks.c	FUNCTION_6
0x4000842	              0x55	                                push rbp	       252	basic_blocks.c	FUNCTION_6
0x4000843	              0x53	                                push rbx	       252	basic_blocks.c	FUNCTION_6
0x4000844	        0x4883ec38	                           sub rsp, 0x38	       252	basic_blocks.c	FUNCTION_6
0x4000848	    0x833d00000000	               cmp dword [0x0400084f], 0	       256	basic_blocks.c	FUNCTION_6	IF_1
0x400084f	            0x740c	                            je 0x400085d	       256	basic_blocks.c	FUNCTION_6	IF_1
0x4000851	    0xc70500000000	               mov dword [0x0400085b], 0	       257	basic_blocks.c	FUNCTION_6	IF_1
0x400085b	            0xeb0a	                           jmp 0x4000867	       257	basic_blocks.c	FUNCTION_6	IF_1
0x400085d	      0xbf00000000	                              mov edi, 0	       104	stdio2.h	CALL_16
0x4000862	      0xe800000000	                          call 0x4000867	       104	stdio2.h	CALL_16
0x4000867	    0x8b3d00000000	            mov edi, dword [0x0400086d] 	       262	basic_blocks.c	FUNCTION_6	CALL_1
0x400086d	        0x48c1e703	                              shl rdi, 3	       262	basic_blocks.c	FUNCTION_6	CALL_1
0x4000871	      0xe800000000	                          call 0x4000876	       262	basic_blocks.c	FUNCTION_6	CALL_1
0x4000876	      0x4889442420	             mov qword [rsp + 0x20], rax	       262	basic_blocks.c	FUNCTION_6	CALL_1
0x400087b	    0x488b1d000000	            mov rbx, qword [0x04000882] 	       265	basic_blocks.c	FUNCTION_6	FOR_1
0x4000882	    0x483b1d000000	            cmp rbx, qword [0x04000889] 	       265	basic_blocks.c	FUNCTION_6	FOR_1
0x4000889	     0xf83e8010000	                           jae 0x4000a77	       265	basic_blocks.c	FUNCTION_6	FOR_1
0x400088f	      0xbd00000000	                              mov ebp, 0	       265	basic_blocks.c	FUNCTION_6	FOR_1
0x4000894	          0x488b33	                    mov rsi, qword [rbx]	       270	basic_blocks.c	FUNCTION_6	FOR_1	IF_2	CALL_2
0x4000897	      0xbf00000000	                              mov edi, 0	       270	basic_blocks.c	FUNCTION_6	FOR_1	IF_2	CALL_2
0x400089c	      0xe800000000	                          call 0x40008a1	       270	basic_blocks.c	FUNCTION_6	FOR_1	IF_2	CALL_2
0x40008a1	          0x4885c0	                           test rax, rax	       270	basic_blocks.c	FUNCTION_6	FOR_1	IF_2	CALL_2
0x40008a4	            0x751b	                           jne 0x40008c1	       270	basic_blocks.c	FUNCTION_6	FOR_1	IF_2	CALL_2
0x40008a6	    0x833d00000000	               cmp dword [0x040008ad], 0	       271	basic_blocks.c	FUNCTION_6	FOR_1	IF_2
0x40008ad	            0x7520	                           jne 0x40008cf	       271	basic_blocks.c	FUNCTION_6	FOR_1	IF_2
0x40008af	          0x488b33	                    mov rsi, qword [rbx]	       272	basic_blocks.c	FUNCTION_6	FOR_1	IF_2	CALL_3
0x40008b2	      0xbf00000000	                              mov edi, 0	       272	basic_blocks.c	FUNCTION_6	FOR_1	IF_2	CALL_3
0x40008b7	      0xe800000000	                          call 0x40008bc	       272	basic_blocks.c	FUNCTION_6	FOR_1	IF_2	CALL_3
0x40008bc	          0x4885c0	                           test rax, rax	       272	basic_blocks.c	FUNCTION_6	FOR_1	IF_2	CALL_3
0x40008bf	            0x750e	                           jne 0x40008cf	       272	basic_blocks.c	FUNCTION_6	FOR_1	IF_2	CALL_3
0x40008c1	            0x89e8	                            mov eax, ebp	       274	basic_blocks.c	FUNCTION_6	FOR_1	IF_2
0x40008c3	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	       274	basic_blocks.c	FUNCTION_6	FOR_1	IF_2
0x40008c8	        0x48891cc1	            mov qword [rcx + rax*8], rbx	       274	basic_blocks.c	FUNCTION_6	FOR_1	IF_2
0x40008cc	          0x8d6d01	                      lea ebp, [rbp + 1]	       274	basic_blocks.c	FUNCTION_6	FOR_1	IF_2
0x40008cf	    0x4881c3580100	                          add rbx, 0x158	       265	basic_blocks.c	FUNCTION_6	FOR_1
0x40008d6	    0x48391d000000	            cmp qword [0x040008dd], rbx 	       265	basic_blocks.c	FUNCTION_6	FOR_1
0x40008dd	            0x77b5	                            ja 0x4000894	       265	basic_blocks.c	FUNCTION_6	FOR_1
0x40008df	            0x89ee	                            mov esi, ebp	       278	basic_blocks.c	FUNCTION_6	CALL_4
0x40008e1	      0xb900000000	                              mov ecx, 0	       278	basic_blocks.c	FUNCTION_6	CALL_4
0x40008e6	      0xba08000000	                              mov edx, 8	       278	basic_blocks.c	FUNCTION_6	CALL_4
0x40008eb	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	       278	basic_blocks.c	FUNCTION_6	CALL_4
0x40008f0	          0x4889df	                            mov rdi, rbx	       278	basic_blocks.c	FUNCTION_6	CALL_4
0x40008f3	      0xe800000000	                          call 0x40008f8	       278	basic_blocks.c	FUNCTION_6	CALL_4
0x40008f8	            0x85ed	                           test ebp, ebp	       282	basic_blocks.c	FUNCTION_6	FOR_2
0x40008fa	     0xf846b010000	                            je 0x4000a6b	       282	basic_blocks.c	FUNCTION_6	FOR_2
0x4000900	      0x48895c2418	             mov qword [rsp + 0x18], rbx	       282	basic_blocks.c	FUNCTION_6	FOR_2
0x4000905	          0x8d45ff	                      lea eax, [rbp - 1]	       282	basic_blocks.c	FUNCTION_6	FOR_2
0x4000908	      0x488d44c308	              lea rax, [rbx + rax*8 + 8]	       282	basic_blocks.c	FUNCTION_6	FOR_2
0x400090d	      0x4889442428	             mov qword [rsp + 0x28], rax	       282	basic_blocks.c	FUNCTION_6	FOR_2
0x4000912	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       284	basic_blocks.c	FUNCTION_6	FOR_2
0x4000917	          0x488b28	                    mov rbp, qword [rax]	       284	basic_blocks.c	FUNCTION_6	FOR_2
0x400091a	        0x488b5d28	            mov rbx, qword [rbp + 0x28] 	       286	basic_blocks.c	FUNCTION_6	FOR_2	IF_3
0x400091e	          0x4885db	                           test rbx, rbx	       286	basic_blocks.c	FUNCTION_6	FOR_2	IF_3
0x4000921	            0x7509	                           jne 0x400092c	       286	basic_blocks.c	FUNCTION_6	FOR_2	IF_3
0x4000923	    0x833d00000000	               cmp dword [0x0400092a], 0	       286	basic_blocks.c	FUNCTION_6	FOR_2	IF_3
0x400092a	            0x756d	                           jne 0x4000999	       286	basic_blocks.c	FUNCTION_6	FOR_2	IF_3
0x400092c	        0x4c8b7500	                    mov r14, qword [rbp]	       291	basic_blocks.c	FUNCTION_6	FOR_2	IF_3
0x4000930	        0x4c8b6d10	            mov r13, qword [rbp + 0x10] 	       289	basic_blocks.c	FUNCTION_6	FOR_2	IF_3	CALL_5
0x4000934	        0x448b6520	           mov r12d, dword [rbp + 0x20] 	       289	basic_blocks.c	FUNCTION_6	FOR_2	IF_3	CALL_5
0x4000938	        0x488b4518	            mov rax, qword [rbp + 0x18] 	       290	basic_blocks.c	FUNCTION_6	FOR_2	IF_3	CALL_6
0x400093c	          0x4885c0	                           test rax, rax	       289	basic_blocks.c	FUNCTION_6	FOR_2	IF_3	CALL_5
0x400093f	            0x7406	                            je 0x4000947	       289	basic_blocks.c	FUNCTION_6	FOR_2	IF_3	CALL_5
0x4000941	        0x4c8b7808	                mov r15, qword [rax + 8]	       289	basic_blocks.c	FUNCTION_6	FOR_2	IF_3	CALL_5
0x4000945	            0xeb17	                           jmp 0x400095e	       289	basic_blocks.c	FUNCTION_6	FOR_2	IF_3	CALL_5
0x4000947	      0xba05000000	                              mov edx, 5	       289	basic_blocks.c	FUNCTION_6	FOR_2	IF_3	CALL_5
0x400094c	      0xbe00000000	                              mov esi, 0	       289	basic_blocks.c	FUNCTION_6	FOR_2	IF_3	CALL_5
0x4000951	      0xbf00000000	                              mov edi, 0	       289	basic_blocks.c	FUNCTION_6	FOR_2	IF_3	CALL_5
0x4000956	      0xe800000000	                          call 0x400095b	       289	basic_blocks.c	FUNCTION_6	FOR_2	IF_3	CALL_5
0x400095b	          0x4989c7	                            mov r15, rax	       289	basic_blocks.c	FUNCTION_6	FOR_2	IF_3	CALL_5
0x400095e	      0xba05000000	                              mov edx, 5	       289	basic_blocks.c	FUNCTION_6	FOR_2	IF_3	CALL_5
0x4000963	      0xbe00000000	                              mov esi, 0	       289	basic_blocks.c	FUNCTION_6	FOR_2	IF_3	CALL_5
0x4000968	      0xbf00000000	                              mov edi, 0	       289	basic_blocks.c	FUNCTION_6	FOR_2	IF_3	CALL_5
0x400096d	      0xe800000000	                          call 0x4000972	       289	basic_blocks.c	FUNCTION_6	FOR_2	IF_3	CALL_5
0x4000972	        0x4883ec08	                              sub rsp, 8	       104	stdio2.h	CALL_16
0x4000976	              0x53	                                push rbx	       104	stdio2.h	CALL_16
0x4000977	          0x4d89f1	                             mov r9, r14	       104	stdio2.h	CALL_16
0x400097a	          0x4d89e8	                             mov r8, r13	       104	stdio2.h	CALL_16
0x400097d	          0x4489e1	                           mov ecx, r12d	       104	stdio2.h	CALL_16
0x4000980	          0x4c89fa	                            mov rdx, r15	       104	stdio2.h	CALL_16
0x4000983	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4000986	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400098b	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_16
0x4000990	      0xe800000000	                          call 0x4000995	       104	stdio2.h	CALL_16
0x4000995	        0x4883c410	                           add rsp, 0x10	       104	stdio2.h	CALL_16
0x4000999	        0x4c8b6538	            mov r12, qword [rbp + 0x38] 	       294	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3
0x400099d	          0x4d85e4	                           test r12, r12	       294	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3
0x40009a0	     0xf84af000000	                            je 0x4000a55	       294	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3
0x40009a6	    0x488d9d880000	                   lea rbx, [rbp + 0x88]	       294	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3
0x40009ad	    0x488d85d00000	                   lea rax, [rbp + 0xd0]	       294	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3
0x40009b4	      0x4889442410	             mov qword [rsp + 0x10], rax	       294	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3
0x40009b9	          0x4c8b2b	                    mov r13, qword [rbx]	       296	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4
0x40009bc	          0x4d85ed	                           test r13, r13	       296	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4
0x40009bf	            0x7509	                           jne 0x40009ca	       296	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4
0x40009c1	    0x833d00000000	               cmp dword [0x040009c8], 0	       296	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4
0x40009c8	            0x7573	                           jne 0x4000a3d	       296	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4
0x40009ca	        0x4c8b7d10	            mov r15, qword [rbp + 0x10] 	       299	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4	CALL_7
0x40009ce	        0x448b7520	           mov r14d, dword [rbp + 0x20] 	       299	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4	CALL_7
0x40009d2	        0x488b4518	            mov rax, qword [rbp + 0x18] 	       300	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4	CALL_8
0x40009d6	          0x4885c0	                           test rax, rax	       299	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4	CALL_7
0x40009d9	            0x740b	                            je 0x40009e6	       299	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4	CALL_7
0x40009db	        0x488b4008	                mov rax, qword [rax + 8]	       299	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4	CALL_7
0x40009df	      0x4889442408	                mov qword [rsp + 8], rax	       299	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4	CALL_7
0x40009e4	            0xeb19	                           jmp 0x40009ff	       299	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4	CALL_7
0x40009e6	      0xba05000000	                              mov edx, 5	       299	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4	CALL_7
0x40009eb	      0xbe00000000	                              mov esi, 0	       299	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4	CALL_7
0x40009f0	      0xbf00000000	                              mov edi, 0	       299	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4	CALL_7
0x40009f5	      0xe800000000	                          call 0x40009fa	       299	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4	CALL_7
0x40009fa	      0x4889442408	                mov qword [rsp + 8], rax	       299	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4	CALL_7
0x40009ff	      0xba05000000	                              mov edx, 5	       299	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4	CALL_7
0x4000a04	      0xbe00000000	                              mov esi, 0	       299	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4	CALL_7
0x4000a09	      0xbf00000000	                              mov edi, 0	       299	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4	CALL_7
0x4000a0e	      0xe800000000	                          call 0x4000a13	       299	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3	IF_4	CALL_7
0x4000a13	        0x4883ec08	                              sub rsp, 8	       104	stdio2.h	CALL_16
0x4000a17	            0x4155	                                push r13	       104	stdio2.h	CALL_16
0x4000a19	          0x4d89e1	                             mov r9, r12	       104	stdio2.h	CALL_16
0x4000a1c	          0x4d89f8	                             mov r8, r15	       104	stdio2.h	CALL_16
0x4000a1f	          0x4489f1	                           mov ecx, r14d	       104	stdio2.h	CALL_16
0x4000a22	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	       104	stdio2.h	CALL_16
0x4000a27	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4000a2a	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4000a2f	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_16
0x4000a34	      0xe800000000	                          call 0x4000a39	       104	stdio2.h	CALL_16
0x4000a39	        0x4883c410	                           add rsp, 0x10	       104	stdio2.h	CALL_16
0x4000a3d	      0x483b5c2410	            cmp rbx, qword [rsp + 0x10] 	       294	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3
0x4000a42	            0x7411	                            je 0x4000a55	       294	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3
0x4000a44	        0x4883c308	                              add rbx, 8	       294	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3
0x4000a48	        0x4c8b63b0	             mov r12, qword [rbx - 0x50]	       294	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3
0x4000a4c	          0x4d85e4	                           test r12, r12	       294	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3
0x4000a4f	     0xf8564ffffff	                           jne 0x40009b9	       294	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3
0x4000a55	    0x488344241808	               add qword [rsp + 0x18], 8	       294	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3
0x4000a5b	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       294	basic_blocks.c	FUNCTION_6	FOR_2	FOR_3
0x4000a60	      0x483b442428	            cmp rax, qword [rsp + 0x28] 	       282	basic_blocks.c	FUNCTION_6	FOR_2
0x4000a65	     0xf85a7feffff	                           jne 0x4000912	       282	basic_blocks.c	FUNCTION_6	FOR_2
0x4000a6b	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	       306	basic_blocks.c	FUNCTION_6	CALL_9
0x4000a70	      0xe800000000	                          call 0x4000a75	       306	basic_blocks.c	FUNCTION_6	CALL_9
0x4000a75	            0xeb1b	                           jmp 0x4000a92	       307	basic_blocks.c	FUNCTION_6
0x4000a77	      0xb900000000	                              mov ecx, 0	       278	basic_blocks.c	FUNCTION_6	CALL_4
0x4000a7c	      0xba08000000	                              mov edx, 8	       278	basic_blocks.c	FUNCTION_6	CALL_4
0x4000a81	      0xbe00000000	                              mov esi, 0	       278	basic_blocks.c	FUNCTION_6	CALL_4
0x4000a86	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	       278	basic_blocks.c	FUNCTION_6	CALL_4
0x4000a8b	      0xe800000000	                          call 0x4000a90	       278	basic_blocks.c	FUNCTION_6	CALL_4
0x4000a90	            0xebd9	                           jmp 0x4000a6b	       278	basic_blocks.c	FUNCTION_6	CALL_4
0x4000a92	        0x4883c438	                           add rsp, 0x38	       307	basic_blocks.c	FUNCTION_6
0x4000a96	              0x5b	                                 pop rbx	       307	basic_blocks.c	FUNCTION_6
0x4000a97	              0x5d	                                 pop rbp	       307	basic_blocks.c	FUNCTION_6
0x4000a98	            0x415c	                                 pop r12	       307	basic_blocks.c	FUNCTION_6
0x4000a9a	            0x415d	                                 pop r13	       307	basic_blocks.c	FUNCTION_6
0x4000a9c	            0x415e	                                 pop r14	       307	basic_blocks.c	FUNCTION_6
0x4000a9e	            0x415f	                                 pop r15	       307	basic_blocks.c	FUNCTION_6
0x4000aa0	              0xc3	                                     ret	       307	basic_blocks.c	FUNCTION_6
fskip_string	ELSE,0:FOR,0:CALL,1:SWITCH,0:IF,1:WHILE,1:DO,0:functions,0	9
0x400007e	              0x53	                                push rbx	       106	basic_blocks.c	FUNCTION_3
0x400007f	          0x4889fb	                            mov rbx, rdi	       106	basic_blocks.c	FUNCTION_3
0x4000082	          0x4889df	                            mov rdi, rbx	       109	basic_blocks.c	FUNCTION_3	WHILE_1	CALL_1
0x4000085	      0xe800000000	                          call 0x400008a	       109	basic_blocks.c	FUNCTION_3	WHILE_1	CALL_1
0x400008a	          0x83c001	                              add eax, 1	       111	basic_blocks.c	FUNCTION_3	WHILE_1	IF_1
0x400008d	          0x83f801	                              cmp eax, 1	       111	basic_blocks.c	FUNCTION_3	WHILE_1	IF_1
0x4000090	            0x77f0	                            ja 0x4000082	       111	basic_blocks.c	FUNCTION_3	WHILE_1	IF_1
0x4000092	              0x5b	                                 pop rbx	       114	basic_blocks.c	FUNCTION_3
0x4000093	              0xc3	                                     ret	       114	basic_blocks.c	FUNCTION_3
print_annotated_source	ELSE,2:FOR,5:CALL,18:SWITCH,0:IF,11:WHILE,0:DO,0:functions,0	293
0x4000aa1	            0x4155	                                push r13	       463	basic_blocks.c	FUNCTION_8
0x4000aa3	            0x4154	                                push r12	       463	basic_blocks.c	FUNCTION_8
0x4000aa5	              0x55	                                push rbp	       463	basic_blocks.c	FUNCTION_8
0x4000aa6	              0x53	                                push rbx	       463	basic_blocks.c	FUNCTION_8
0x4000aa7	        0x4883ec18	                           sub rsp, 0x18	       463	basic_blocks.c	FUNCTION_8
0x4000aab	    0x488b1d000000	            mov rbx, qword [0x04000ab2] 	       471	basic_blocks.c	FUNCTION_8	FOR_1
0x4000ab2	    0x483b1d000000	            cmp rbx, qword [0x04000ab9] 	       471	basic_blocks.c	FUNCTION_8	FOR_1
0x4000ab9	     0xf839d040000	                           jae 0x4000f5c	       471	basic_blocks.c	FUNCTION_8	FOR_1
0x4000abf	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       477	basic_blocks.c	FUNCTION_8	FOR_1	IF_1
0x4000ac3	          0x4885c0	                           test rax, rax	       477	basic_blocks.c	FUNCTION_8	FOR_1	IF_1
0x4000ac6	            0x743f	                            je 0x4000b07	       477	basic_blocks.c	FUNCTION_8	FOR_1	IF_1
0x4000ac8	          0x8b4018	            mov eax, dword [rax + 0x18] 	       477	basic_blocks.c	FUNCTION_8	FOR_1	IF_1
0x4000acb	          0x394320	            cmp dword [rbx + 0x20], eax 	       477	basic_blocks.c	FUNCTION_8	FOR_1	IF_1
0x4000ace	            0x7e37	                           jle 0x4000b07	       477	basic_blocks.c	FUNCTION_8	FOR_1	IF_1
0x4000ad0	          0x488b33	                    mov rsi, qword [rbx]	       478	basic_blocks.c	FUNCTION_8	FOR_1	IF_1	CALL_1
0x4000ad3	      0xbf00000000	                              mov edi, 0	       478	basic_blocks.c	FUNCTION_8	FOR_1	IF_1	CALL_1
0x4000ad8	      0xe800000000	                          call 0x4000add	       478	basic_blocks.c	FUNCTION_8	FOR_1	IF_1	CALL_1
0x4000add	          0x4885c0	                           test rax, rax	       478	basic_blocks.c	FUNCTION_8	FOR_1	IF_1	CALL_1
0x4000ae0	            0x751b	                           jne 0x4000afd	       478	basic_blocks.c	FUNCTION_8	FOR_1	IF_1	CALL_1
0x4000ae2	    0x833d00000000	               cmp dword [0x04000ae9], 0	       479	basic_blocks.c	FUNCTION_8	FOR_1	IF_1
0x4000ae9	            0x751c	                           jne 0x4000b07	       479	basic_blocks.c	FUNCTION_8	FOR_1	IF_1
0x4000aeb	          0x488b33	                    mov rsi, qword [rbx]	       480	basic_blocks.c	FUNCTION_8	FOR_1	IF_1	CALL_2
0x4000aee	      0xbf00000000	                              mov edi, 0	       480	basic_blocks.c	FUNCTION_8	FOR_1	IF_1	CALL_2
0x4000af3	      0xe800000000	                          call 0x4000af8	       480	basic_blocks.c	FUNCTION_8	FOR_1	IF_1	CALL_2
0x4000af8	          0x4885c0	                           test rax, rax	       480	basic_blocks.c	FUNCTION_8	FOR_1	IF_1	CALL_2
0x4000afb	            0x750a	                           jne 0x4000b07	       480	basic_blocks.c	FUNCTION_8	FOR_1	IF_1	CALL_2
0x4000afd	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       482	basic_blocks.c	FUNCTION_8	FOR_1	IF_1
0x4000b01	          0x8b5320	            mov edx, dword [rbx + 0x20] 	       482	basic_blocks.c	FUNCTION_8	FOR_1	IF_1
0x4000b04	          0x895018	             mov dword [rax + 0x18], edx	       482	basic_blocks.c	FUNCTION_8	FOR_1	IF_1
0x4000b07	    0x4881c3580100	                          add rbx, 0x158	       471	basic_blocks.c	FUNCTION_8	FOR_1
0x4000b0e	    0x48391d000000	            cmp qword [0x04000b15], rbx 	       471	basic_blocks.c	FUNCTION_8	FOR_1
0x4000b15	            0x77a8	                            ja 0x4000abf	       471	basic_blocks.c	FUNCTION_8	FOR_1
0x4000b17	    0x488b1d000000	            mov rbx, qword [0x04000b1e] 	       487	basic_blocks.c	FUNCTION_8	FOR_2
0x4000b1e	          0x4885db	                           test rbx, rbx	       487	basic_blocks.c	FUNCTION_8	FOR_2
0x4000b21	     0xf841f040000	                            je 0x4000f46	       487	basic_blocks.c	FUNCTION_8	FOR_2
0x4000b27	          0x8b7b18	            mov edi, dword [rbx + 0x18] 	       489	basic_blocks.c	FUNCTION_8	FOR_2	IF_2
0x4000b2a	            0x85ff	                           test edi, edi	       489	basic_blocks.c	FUNCTION_8	FOR_2	IF_2
0x4000b2c	            0x7e25	                           jle 0x4000b53	       489	basic_blocks.c	FUNCTION_8	FOR_2	IF_2
0x4000b2e	          0x4863ff	                         movsxd rdi, edi	       491	basic_blocks.c	FUNCTION_8	FOR_2	IF_2	CALL_3
0x4000b31	        0x48c1e703	                              shl rdi, 3	       491	basic_blocks.c	FUNCTION_8	FOR_2	IF_2	CALL_3
0x4000b35	      0xe800000000	                          call 0x4000b3a	       491	basic_blocks.c	FUNCTION_8	FOR_2	IF_2	CALL_3
0x4000b3a	        0x48894320	             mov qword [rbx + 0x20], rax	       491	basic_blocks.c	FUNCTION_8	FOR_2	IF_2	CALL_3
0x4000b3e	        0x48635318	         movsxd rdx, dword [rbx + 0x18] 	        90	string3.h	FUNCTION_29	CALL_6
0x4000b42	        0x48c1e203	                              shl rdx, 3	        90	string3.h	FUNCTION_29	CALL_6
0x4000b46	      0xbe00000000	                              mov esi, 0	        90	string3.h	FUNCTION_29	CALL_6
0x4000b4b	          0x4889c7	                            mov rdi, rax	        90	string3.h	FUNCTION_29	CALL_6
0x4000b4e	      0xe800000000	                          call 0x4000b53	        90	string3.h	FUNCTION_29	CALL_6
0x4000b53	          0x488b1b	                    mov rbx, qword [rbx]	       487	basic_blocks.c	FUNCTION_8	FOR_2
0x4000b56	          0x4885db	                           test rbx, rbx	       487	basic_blocks.c	FUNCTION_8	FOR_2
0x4000b59	            0x75cc	                           jne 0x4000b27	       487	basic_blocks.c	FUNCTION_8	FOR_2
0x4000b5b	    0x488b1d000000	            mov rbx, qword [0x04000b62] 	       497	basic_blocks.c	FUNCTION_8	FOR_3
0x4000b62	    0x483b1d000000	            cmp rbx, qword [0x04000b69] 	       497	basic_blocks.c	FUNCTION_8	FOR_3
0x4000b69	     0xf83cf000000	                           jae 0x4000c3e	       497	basic_blocks.c	FUNCTION_8	FOR_3
0x4000b6f	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       499	basic_blocks.c	FUNCTION_8	FOR_3	IF_3
0x4000b73	          0x4885c0	                           test rax, rax	       499	basic_blocks.c	FUNCTION_8	FOR_3	IF_3
0x4000b76	     0xf84ae000000	                            je 0x4000c2a	       499	basic_blocks.c	FUNCTION_8	FOR_3	IF_3
0x4000b7c	        0x83781800	               cmp dword [rax + 0x18], 0	       499	basic_blocks.c	FUNCTION_8	FOR_3	IF_3
0x4000b80	     0xf84a4000000	                            je 0x4000c2a	       499	basic_blocks.c	FUNCTION_8	FOR_3	IF_3
0x4000b86	          0x488b33	                    mov rsi, qword [rbx]	       500	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	CALL_5
0x4000b89	      0xbf00000000	                              mov edi, 0	       500	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	CALL_5
0x4000b8e	      0xe800000000	                          call 0x4000b93	       500	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	CALL_5
0x4000b93	          0x4885c0	                           test rax, rax	       500	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	CALL_5
0x4000b96	            0x751f	                           jne 0x4000bb7	       500	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	CALL_5
0x4000b98	    0x833d00000000	               cmp dword [0x04000b9f], 0	       501	basic_blocks.c	FUNCTION_8	FOR_3	IF_3
0x4000b9f	     0xf8585000000	                           jne 0x4000c2a	       501	basic_blocks.c	FUNCTION_8	FOR_3	IF_3
0x4000ba5	          0x488b33	                    mov rsi, qword [rbx]	       502	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	CALL_6
0x4000ba8	      0xbf00000000	                              mov edi, 0	       502	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	CALL_6
0x4000bad	      0xe800000000	                          call 0x4000bb2	       502	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	CALL_6
0x4000bb2	          0x4885c0	                           test rax, rax	       502	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	CALL_6
0x4000bb5	            0x7573	                           jne 0x4000c2a	       502	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	CALL_6
0x4000bb7	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       504	basic_blocks.c	FUNCTION_8	FOR_3	IF_3
0x4000bbb	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	       504	basic_blocks.c	FUNCTION_8	FOR_3	IF_3
0x4000bbf	        0x48015010	            add qword [rax + 0x10], rdx 	       504	basic_blocks.c	FUNCTION_8	FOR_3	IF_3
0x4000bc3	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       505	basic_blocks.c	FUNCTION_8	FOR_3	IF_3
0x4000bc7	        0x48635320	         movsxd rdx, dword [rbx + 0x20] 	       505	basic_blocks.c	FUNCTION_8	FOR_3	IF_3
0x4000bcb	        0x488b4020	            mov rax, qword [rax + 0x20] 	       505	basic_blocks.c	FUNCTION_8	FOR_3	IF_3
0x4000bcf	      0x488d44d0f8	              lea rax, [rax + rdx*8 - 8]	       505	basic_blocks.c	FUNCTION_8	FOR_3	IF_3
0x4000bd4	          0x488b28	                    mov rbp, qword [rax]	       505	basic_blocks.c	FUNCTION_8	FOR_3	IF_3
0x4000bd7	          0x4885ed	                           test rbp, rbp	       507	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	IF_4
0x4000bda	            0x7505	                           jne 0x4000be1	       507	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	IF_4
0x4000bdc	          0x488918	                    mov qword [rax], rbx	       510	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	IF_4
0x4000bdf	            0xeb49	                           jmp 0x4000c2a	       510	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	IF_4
0x4000be1	      0x48837d0000	                      cmp qword [rbp], 0	       512	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	ELSE_1	IF_5
0x4000be6	            0x750a	                           jne 0x4000bf2	       512	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	ELSE_1	IF_5
0x4000be8	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       515	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	ELSE_1	IF_5
0x4000bec	        0x48014528	            add qword [rbp + 0x28], rax 	       515	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	ELSE_1	IF_5
0x4000bf0	            0xeb38	                           jmp 0x4000c2a	       515	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	ELSE_1	IF_5
0x4000bf2	      0xbf58010000	                          mov edi, 0x158	       520	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	ELSE_2	CALL_7
0x4000bf7	      0xe800000000	                          call 0x4000bfc	       520	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	ELSE_2	CALL_7
0x4000bfc	      0xb92b000000	                           mov ecx, 0x2b	       521	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	ELSE_2
0x4000c01	          0x4889c7	                            mov rdi, rax	       521	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	ELSE_2
0x4000c04	          0x4889ee	                            mov rsi, rbp	       521	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	ELSE_2
0x4000c07	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	       521	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	ELSE_2
0x4000c0a	    0x48c700000000	                      mov qword [rax], 0	       522	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	ELSE_2
0x4000c11	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	       523	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	ELSE_2
0x4000c15	        0x48015028	            add qword [rax + 0x28], rdx 	       523	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	ELSE_2
0x4000c19	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	       524	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	ELSE_2
0x4000c1d	        0x48634b20	         movsxd rcx, dword [rbx + 0x20] 	       524	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	ELSE_2
0x4000c21	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	       524	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	ELSE_2
0x4000c25	      0x488944caf8	        mov qword [rdx + rcx*8 - 8], rax	       524	basic_blocks.c	FUNCTION_8	FOR_3	IF_3	ELSE_2
0x4000c2a	    0x4881c3580100	                          add rbx, 0x158	       497	basic_blocks.c	FUNCTION_8	FOR_3
0x4000c31	    0x48391d000000	            cmp qword [0x04000c38], rbx 	       497	basic_blocks.c	FUNCTION_8	FOR_3
0x4000c38	     0xf8731ffffff	                            ja 0x4000b6f	       497	basic_blocks.c	FUNCTION_8	FOR_3
0x4000c3e	    0x488b1d000000	            mov rbx, qword [0x04000c45] 	       530	basic_blocks.c	FUNCTION_8	FOR_4
0x4000c45	          0x4885db	                           test rbx, rbx	       530	basic_blocks.c	FUNCTION_8	FOR_4
0x4000c48	     0xf841e030000	                            je 0x4000f6c	       530	basic_blocks.c	FUNCTION_8	FOR_4
0x4000c4e	        0x837b1800	               cmp dword [rbx + 0x18], 0	       532	basic_blocks.c	FUNCTION_8	FOR_4	IF_6
0x4000c52	     0xf84e0020000	                            je 0x4000f38	       532	basic_blocks.c	FUNCTION_8	FOR_4	IF_6
0x4000c58	    0x833d00000000	               cmp dword [0x04000c5f], 0	       532	basic_blocks.c	FUNCTION_8	FOR_4	IF_6
0x4000c5f	            0x740b	                            je 0x4000c6c	       532	basic_blocks.c	FUNCTION_8	FOR_4	IF_6
0x4000c61	      0x48837b1000	               cmp qword [rbx + 0x10], 0	       532	basic_blocks.c	FUNCTION_8	FOR_4	IF_6
0x4000c66	     0xf84cc020000	                            je 0x4000f38	       532	basic_blocks.c	FUNCTION_8	FOR_4	IF_6
0x4000c6c	    0x48c705000000	               mov qword [0x04000c77], 0	       535	basic_blocks.c	FUNCTION_8	FOR_4
0x4000c77	    0x48c705000000	               mov qword [0x04000c82], 0	       535	basic_blocks.c	FUNCTION_8	FOR_4
0x4000c82	          0x4889d9	                            mov rcx, rbx	       537	basic_blocks.c	FUNCTION_8	FOR_4	CALL_8
0x4000c85	      0xba00000000	                              mov edx, 0	       537	basic_blocks.c	FUNCTION_8	FOR_4	CALL_8
0x4000c8a	      0xbe10000000	                           mov esi, 0x10	       537	basic_blocks.c	FUNCTION_8	FOR_4	CALL_8
0x4000c8f	          0x4889df	                            mov rdi, rbx	       537	basic_blocks.c	FUNCTION_8	FOR_4	CALL_8
0x4000c92	      0xe800000000	                          call 0x4000c97	       537	basic_blocks.c	FUNCTION_8	FOR_4	CALL_8
0x4000c97	          0x4989c4	                            mov r12, rax	       537	basic_blocks.c	FUNCTION_8	FOR_4	CALL_8
0x4000c9a	          0x4885c0	                           test rax, rax	       538	basic_blocks.c	FUNCTION_8	FOR_4	IF_7
0x4000c9d	     0xf8495020000	                            je 0x4000f38	       538	basic_blocks.c	FUNCTION_8	FOR_4	IF_7
0x4000ca3	    0x8b2d00000000	            mov ebp, dword [0x04000ca9] 	       541	basic_blocks.c	FUNCTION_8	FOR_4	IF_8
0x4000ca9	            0x85ed	                           test ebp, ebp	       541	basic_blocks.c	FUNCTION_8	FOR_4	IF_8
0x4000cab	     0xf8eb4000000	                           jle 0x4000d65	       541	basic_blocks.c	FUNCTION_8	FOR_4	IF_8
0x4000cb1	      0xba05000000	                              mov edx, 5	       543	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	CALL_9
0x4000cb6	      0xbe00000000	                              mov esi, 0	       543	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	CALL_9
0x4000cbb	      0xbf00000000	                              mov edi, 0	       543	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	CALL_9
0x4000cc0	      0xe800000000	                          call 0x4000cc5	       543	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	CALL_9
0x4000cc5	            0x89e9	                            mov ecx, ebp	        97	stdio2.h	CALL_13
0x4000cc7	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_13
0x4000cca	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_13
0x4000ccf	          0x4c89e7	                            mov rdi, r12	        97	stdio2.h	CALL_13
0x4000cd2	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_13
0x4000cd7	      0xe800000000	                          call 0x4000cdc	        97	stdio2.h	CALL_13
0x4000cdc	        0x48637318	         movsxd rsi, dword [rbx + 0x18] 	       547	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	CALL_10
0x4000ce0	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	       547	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	CALL_10
0x4000ce4	      0xb900000000	                              mov ecx, 0	       547	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	CALL_10
0x4000ce9	      0xba08000000	                              mov edx, 8	       547	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	CALL_10
0x4000cee	      0xe800000000	                          call 0x4000cf3	       547	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	CALL_10
0x4000cf3	    0x8b0500000000	            mov eax, dword [0x04000cf9] 	       548	basic_blocks.c	FUNCTION_8	FOR_4	IF_8
0x4000cf9	          0x8b5318	            mov edx, dword [rbx + 0x18] 	       550	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	IF_9
0x4000cfc	            0x39d0	                            cmp eax, edx	       550	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	IF_9
0x4000cfe	           0xf4ed0	                         cmovle edx, eax	       550	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	IF_9
0x4000d01	            0x85d2	                           test edx, edx	       553	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5
0x4000d03	            0x7e60	                           jle 0x4000d65	       553	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5
0x4000d05	        0x488b4320	            mov rax, qword [rbx + 0x20] 	       555	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5
0x4000d09	          0x488b00	                    mov rax, qword [rax]	       555	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5
0x4000d0c	          0x4885c0	                           test rax, rax	       557	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5	IF_10
0x4000d0f	            0x7454	                            je 0x4000d65	       557	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5	IF_10
0x4000d11	        0x4c8b4028	              mov r8, qword [rax + 0x28]	       557	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5	IF_10
0x4000d15	          0x4d85c0	                             test r8, r8	       557	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5	IF_10
0x4000d18	            0x744b	                            je 0x4000d65	       557	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5	IF_10
0x4000d1a	          0x8d52ff	                      lea edx, [rdx - 1]	       557	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5	IF_10
0x4000d1d	    0x4c8d2cd50800	                    lea r13, [rdx*8 + 8]	       557	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5	IF_10
0x4000d25	      0xbd08000000	                              mov ebp, 8	       557	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5	IF_10
0x4000d2a	            0xeb1a	                           jmp 0x4000d46	       557	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5	IF_10
0x4000d2c	        0x488b4320	            mov rax, qword [rbx + 0x20] 	       555	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5
0x4000d30	        0x488b0428	              mov rax, qword [rax + rbp]	       555	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5
0x4000d34	          0x4885c0	                           test rax, rax	       557	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5	IF_10
0x4000d37	            0x742c	                            je 0x4000d65	       557	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5	IF_10
0x4000d39	        0x4c8b4028	              mov r8, qword [rax + 0x28]	       557	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5	IF_10
0x4000d3d	        0x4883c508	                              add rbp, 8	       557	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5	IF_10
0x4000d41	          0x4d85c0	                             test r8, r8	       557	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5	IF_10
0x4000d44	            0x741f	                            je 0x4000d65	       557	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5	IF_10
0x4000d46	          0x8b4820	            mov ecx, dword [rax + 0x20] 	        97	stdio2.h	CALL_13
0x4000d49	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_13
0x4000d4e	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_13
0x4000d53	          0x4c89e7	                            mov rdi, r12	        97	stdio2.h	CALL_13
0x4000d56	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_13
0x4000d5b	      0xe800000000	                          call 0x4000d60	        97	stdio2.h	CALL_13
0x4000d60	          0x4c39ed	                            cmp rbp, r13	       553	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5
0x4000d63	            0x75c7	                           jne 0x4000d2c	       553	basic_blocks.c	FUNCTION_8	FOR_4	IF_8	FOR_5
0x4000d65	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	       564	basic_blocks.c	FUNCTION_8	FOR_4	CALL_11
0x4000d69	      0xe800000000	                          call 0x4000d6e	       564	basic_blocks.c	FUNCTION_8	FOR_4	CALL_11
0x4000d6e	    0x48c743200000	               mov qword [rbx + 0x20], 0	       565	basic_blocks.c	FUNCTION_8	FOR_4
0x4000d76	      0xba05000000	                              mov edx, 5	       567	basic_blocks.c	FUNCTION_8	FOR_4	CALL_12
0x4000d7b	      0xbe00000000	                              mov esi, 0	       567	basic_blocks.c	FUNCTION_8	FOR_4	CALL_12
0x4000d80	      0xbf00000000	                              mov edi, 0	       567	basic_blocks.c	FUNCTION_8	FOR_4	CALL_12
0x4000d85	      0xe800000000	                          call 0x4000d8a	       567	basic_blocks.c	FUNCTION_8	FOR_4	CALL_12
0x4000d8a	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_13
0x4000d8d	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_13
0x4000d92	          0x4c89e7	                            mov rdi, r12	        97	stdio2.h	CALL_13
0x4000d95	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_13
0x4000d9a	      0xe800000000	                          call 0x4000d9f	        97	stdio2.h	CALL_13
0x4000d9f	    0x488b2d000000	            mov rbp, qword [0x04000da6] 	       568	basic_blocks.c	FUNCTION_8	FOR_4	CALL_13
0x4000da6	      0xba05000000	                              mov edx, 5	       568	basic_blocks.c	FUNCTION_8	FOR_4	CALL_13
0x4000dab	      0xbe00000000	                              mov esi, 0	       568	basic_blocks.c	FUNCTION_8	FOR_4	CALL_13
0x4000db0	      0xbf00000000	                              mov edi, 0	       568	basic_blocks.c	FUNCTION_8	FOR_4	CALL_13
0x4000db5	      0xe800000000	                          call 0x4000dba	       568	basic_blocks.c	FUNCTION_8	FOR_4	CALL_13
0x4000dba	          0x4889e9	                            mov rcx, rbp	        97	stdio2.h	CALL_13
0x4000dbd	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_13
0x4000dc0	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_13
0x4000dc5	          0x4c89e7	                            mov rdi, r12	        97	stdio2.h	CALL_13
0x4000dc8	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_13
0x4000dcd	      0xe800000000	                          call 0x4000dd2	        97	stdio2.h	CALL_13
0x4000dd2	    0x488b2d000000	            mov rbp, qword [0x04000dd9] 	       570	basic_blocks.c	FUNCTION_8	FOR_4	CALL_14
0x4000dd9	      0xba05000000	                              mov edx, 5	       570	basic_blocks.c	FUNCTION_8	FOR_4	CALL_14
0x4000dde	      0xbe00000000	                              mov esi, 0	       570	basic_blocks.c	FUNCTION_8	FOR_4	CALL_14
0x4000de3	      0xbf00000000	                              mov edi, 0	       570	basic_blocks.c	FUNCTION_8	FOR_4	CALL_14
0x4000de8	      0xe800000000	                          call 0x4000ded	       570	basic_blocks.c	FUNCTION_8	FOR_4	CALL_14
0x4000ded	          0x4889e9	                            mov rcx, rbp	        97	stdio2.h	CALL_13
0x4000df0	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_13
0x4000df3	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_13
0x4000df8	          0x4c89e7	                            mov rdi, r12	        97	stdio2.h	CALL_13
0x4000dfb	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_13
0x4000e00	      0xe800000000	                          call 0x4000e05	        97	stdio2.h	CALL_13
0x4000e05	    0x488b05000000	            mov rax, qword [0x04000e0c] 	       573	basic_blocks.c	FUNCTION_8	FOR_4
0x4000e0c	    0xf20f10150000	         movsd xmm2, qword [0x04000e14] 	       571	basic_blocks.c	FUNCTION_8	FOR_4	CALL_15
0x4000e14	    0xf20f11542408	             movsd qword [rsp + 8], xmm2	       571	basic_blocks.c	FUNCTION_8	FOR_4	CALL_15
0x4000e1a	          0x4885c0	                           test rax, rax	       571	basic_blocks.c	FUNCTION_8	FOR_4	CALL_15
0x4000e1d	            0x7424	                            je 0x4000e43	       571	basic_blocks.c	FUNCTION_8	FOR_4	CALL_15
0x4000e1f	        0x660fefc9	                         pxor xmm1, xmm1	       571	basic_blocks.c	FUNCTION_8	FOR_4	CALL_15
0x4000e23	    0xf2480f2a0d00	       cvtsi2sd xmm1, qword [0x04000e2c]	       571	basic_blocks.c	FUNCTION_8	FOR_4	CALL_15
0x4000e2c	        0xf20f59ca	                        mulsd xmm1, xmm2	       571	basic_blocks.c	FUNCTION_8	FOR_4	CALL_15
0x4000e30	        0x660fefc0	                         pxor xmm0, xmm0	       571	basic_blocks.c	FUNCTION_8	FOR_4	CALL_15
0x4000e34	      0xf2480f2ac0	                      cvtsi2sd xmm0, rax	       571	basic_blocks.c	FUNCTION_8	FOR_4	CALL_15
0x4000e39	        0xf20f5ec8	                        divsd xmm1, xmm0	       571	basic_blocks.c	FUNCTION_8	FOR_4	CALL_15
0x4000e3d	    0xf20f114c2408	             movsd qword [rsp + 8], xmm1	       571	basic_blocks.c	FUNCTION_8	FOR_4	CALL_15
0x4000e43	      0xba05000000	                              mov edx, 5	       571	basic_blocks.c	FUNCTION_8	FOR_4	CALL_15
0x4000e48	      0xbe00000000	                              mov esi, 0	       571	basic_blocks.c	FUNCTION_8	FOR_4	CALL_15
0x4000e4d	      0xbf00000000	                              mov edi, 0	       571	basic_blocks.c	FUNCTION_8	FOR_4	CALL_15
0x4000e52	      0xe800000000	                          call 0x4000e57	       571	basic_blocks.c	FUNCTION_8	FOR_4	CALL_15
0x4000e57	    0xf20f10442408	            movsd xmm0, qword [rsp + 8] 	        97	stdio2.h	CALL_13
0x4000e5d	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_13
0x4000e60	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_13
0x4000e65	          0x4c89e7	                            mov rdi, r12	        97	stdio2.h	CALL_13
0x4000e68	      0xb801000000	                              mov eax, 1	        97	stdio2.h	CALL_13
0x4000e6d	      0xe800000000	                          call 0x4000e72	        97	stdio2.h	CALL_13
0x4000e72	        0x488b6b10	            mov rbp, qword [rbx + 0x10] 	       575	basic_blocks.c	FUNCTION_8	FOR_4	CALL_16
0x4000e76	      0xba05000000	                              mov edx, 5	       575	basic_blocks.c	FUNCTION_8	FOR_4	CALL_16
0x4000e7b	      0xbe00000000	                              mov esi, 0	       575	basic_blocks.c	FUNCTION_8	FOR_4	CALL_16
0x4000e80	      0xbf00000000	                              mov edi, 0	       575	basic_blocks.c	FUNCTION_8	FOR_4	CALL_16
0x4000e85	      0xe800000000	                          call 0x4000e8a	       575	basic_blocks.c	FUNCTION_8	FOR_4	CALL_16
0x4000e8a	          0x4889e9	                            mov rcx, rbp	        97	stdio2.h	CALL_13
0x4000e8d	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_13
0x4000e90	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_13
0x4000e95	          0x4c89e7	                            mov rdi, r12	        97	stdio2.h	CALL_13
0x4000e98	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_13
0x4000e9d	      0xe800000000	                          call 0x4000ea2	        97	stdio2.h	CALL_13
0x4000ea2	    0x488b05000000	            mov rax, qword [0x04000ea9] 	       579	basic_blocks.c	FUNCTION_8	FOR_4
0x4000ea9	        0x660fefdb	                         pxor xmm3, xmm3	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x4000ead	    0xf20f115c2408	             movsd qword [rsp + 8], xmm3	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x4000eb3	          0x4885c0	                           test rax, rax	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x4000eb6	            0x7440	                            je 0x4000ef8	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x4000eb8	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x4000ebc	          0x4885d2	                           test rdx, rdx	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x4000ebf	            0x780b	                            js 0x4000ecc	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x4000ec1	        0x660fefc9	                         pxor xmm1, xmm1	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x4000ec5	      0xf2480f2aca	                      cvtsi2sd xmm1, rdx	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x4000eca	            0xeb19	                           jmp 0x4000ee5	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x4000ecc	          0x4889d1	                            mov rcx, rdx	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x4000ecf	          0x48d1e9	                              shr rcx, 1	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x4000ed2	          0x83e201	                              and edx, 1	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x4000ed5	          0x4809d1	                             or rcx, rdx	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x4000ed8	        0x660fefc9	                         pxor xmm1, xmm1	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x4000edc	      0xf2480f2ac9	                      cvtsi2sd xmm1, rcx	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x4000ee1	        0xf20f58c9	                        addsd xmm1, xmm1	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x4000ee5	        0x660fefc0	                         pxor xmm0, xmm0	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x4000ee9	      0xf2480f2ac0	                      cvtsi2sd xmm0, rax	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x4000eee	        0xf20f5ec8	                        divsd xmm1, xmm0	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x4000ef2	    0xf20f114c2408	             movsd qword [rsp + 8], xmm1	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x4000ef8	      0xba05000000	                              mov edx, 5	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x4000efd	      0xbe00000000	                              mov esi, 0	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x4000f02	      0xbf00000000	                              mov edi, 0	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x4000f07	      0xe800000000	                          call 0x4000f0c	       577	basic_blocks.c	FUNCTION_8	FOR_4	CALL_17
0x4000f0c	    0xf20f10442408	            movsd xmm0, qword [rsp + 8] 	        97	stdio2.h	CALL_13
0x4000f12	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_13
0x4000f15	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_13
0x4000f1a	          0x4c89e7	                            mov rdi, r12	        97	stdio2.h	CALL_13
0x4000f1d	      0xb801000000	                              mov eax, 1	        97	stdio2.h	CALL_13
0x4000f22	      0xe800000000	                          call 0x4000f27	        97	stdio2.h	CALL_13
0x4000f27	    0x4c3b25000000	            cmp r12, qword [0x04000f2e] 	       582	basic_blocks.c	FUNCTION_8	FOR_4	IF_11
0x4000f2e	            0x7408	                            je 0x4000f38	       582	basic_blocks.c	FUNCTION_8	FOR_4	IF_11
0x4000f30	          0x4c89e7	                            mov rdi, r12	       583	basic_blocks.c	FUNCTION_8	FOR_4	CALL_18
0x4000f33	      0xe800000000	                          call 0x4000f38	       583	basic_blocks.c	FUNCTION_8	FOR_4	CALL_18
0x4000f38	          0x488b1b	                    mov rbx, qword [rbx]	       530	basic_blocks.c	FUNCTION_8	FOR_4
0x4000f3b	          0x4885db	                           test rbx, rbx	       530	basic_blocks.c	FUNCTION_8	FOR_4
0x4000f3e	     0xf850afdffff	                           jne 0x4000c4e	       530	basic_blocks.c	FUNCTION_8	FOR_4
0x4000f44	            0xeb26	                           jmp 0x4000f6c	       530	basic_blocks.c	FUNCTION_8	FOR_4
0x4000f46	    0x488b1d000000	            mov rbx, qword [0x04000f4d] 	       497	basic_blocks.c	FUNCTION_8	FOR_3
0x4000f4d	    0x48391d000000	            cmp qword [0x04000f54], rbx 	       497	basic_blocks.c	FUNCTION_8	FOR_3
0x4000f54	     0xf8715fcffff	                            ja 0x4000b6f	       497	basic_blocks.c	FUNCTION_8	FOR_3
0x4000f5a	            0xeb10	                           jmp 0x4000f6c	       497	basic_blocks.c	FUNCTION_8	FOR_3
0x4000f5c	    0x488b1d000000	            mov rbx, qword [0x04000f63] 	       487	basic_blocks.c	FUNCTION_8	FOR_2
0x4000f63	          0x4885db	                           test rbx, rbx	       487	basic_blocks.c	FUNCTION_8	FOR_2
0x4000f66	     0xf85bbfbffff	                           jne 0x4000b27	       487	basic_blocks.c	FUNCTION_8	FOR_2
0x4000f6c	        0x4883c418	                           add rsp, 0x18	       585	basic_blocks.c	FUNCTION_8
0x4000f70	              0x5b	                                 pop rbx	       585	basic_blocks.c	FUNCTION_8
0x4000f71	              0x5d	                                 pop rbp	       585	basic_blocks.c	FUNCTION_8
0x4000f72	            0x415c	                                 pop r12	       585	basic_blocks.c	FUNCTION_8
0x4000f74	            0x415d	                                 pop r13	       585	basic_blocks.c	FUNCTION_8
0x4000f76	              0xc3	                                     ret	       585	basic_blocks.c	FUNCTION_8
bb_read_rec	ELSE,2:FOR,2:CALL,19:SWITCH,0:IF,9:WHILE,0:DO,0:functions,0	162
0x4000492	            0x4155	                                push r13	       121	basic_blocks.c	FUNCTION_4
0x4000494	            0x4154	                                push r12	       121	basic_blocks.c	FUNCTION_4
0x4000496	              0x55	                                push rbp	       121	basic_blocks.c	FUNCTION_4
0x4000497	              0x53	                                push rbx	       121	basic_blocks.c	FUNCTION_4
0x4000498	        0x4883ec28	                           sub rsp, 0x28	       121	basic_blocks.c	FUNCTION_4
0x400049c	          0x4889fb	                            mov rbx, rdi	       121	basic_blocks.c	FUNCTION_4
0x400049f	          0x4989f5	                            mov r13, rsi	       121	basic_blocks.c	FUNCTION_4
0x40004a2	    0x64488b042528	                mov rax, qword fs:[0x28]	       121	basic_blocks.c	FUNCTION_4
0x40004ab	      0x4889442418	             mov qword [rsp + 0x18], rax	       121	basic_blocks.c	FUNCTION_4
0x40004b0	            0x31c0	                            xor eax, eax	       121	basic_blocks.c	FUNCTION_4
0x40004b2	          0x4889e6	                            mov rsi, rsp	       126	basic_blocks.c	FUNCTION_4	IF_1	CALL_1
0x40004b5	      0xe800000000	                          call 0x40004ba	       126	basic_blocks.c	FUNCTION_4	IF_1	CALL_1
0x40004ba	            0x85c0	                           test eax, eax	       126	basic_blocks.c	FUNCTION_4	IF_1	CALL_1
0x40004bc	            0x7444	                            je 0x4000502	       126	basic_blocks.c	FUNCTION_4	IF_1	CALL_1
0x40004be	    0x488b1d000000	            mov rbx, qword [0x040004c5] 	       128	basic_blocks.c	FUNCTION_4	IF_1	CALL_2
0x40004c5	      0xba05000000	                              mov edx, 5	       128	basic_blocks.c	FUNCTION_4	IF_1	CALL_2
0x40004ca	      0xbe00000000	                              mov esi, 0	       128	basic_blocks.c	FUNCTION_4	IF_1	CALL_2
0x40004cf	      0xbf00000000	                              mov edi, 0	       128	basic_blocks.c	FUNCTION_4	IF_1	CALL_2
0x40004d4	      0xe800000000	                          call 0x40004d9	       128	basic_blocks.c	FUNCTION_4	IF_1	CALL_2
0x40004d9	          0x4d89e8	                             mov r8, r13	        97	stdio2.h	CALL_13
0x40004dc	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_13
0x40004df	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_13
0x40004e2	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_13
0x40004e7	    0x488b3d000000	            mov rdi, qword [0x040004ee] 	        97	stdio2.h	CALL_13
0x40004ee	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_13
0x40004f3	      0xe800000000	                          call 0x40004f8	        97	stdio2.h	CALL_13
0x40004f8	      0xbf01000000	                              mov edi, 1	       130	basic_blocks.c	FUNCTION_4	IF_1	CALL_3
0x40004fd	      0xe800000000	                          call 0x4000502	       130	basic_blocks.c	FUNCTION_4	IF_1	CALL_3
0x4000502	    0x488b05000000	            mov rax, qword [0x04000509] 	       133	basic_blocks.c	FUNCTION_4	CALL_4
0x4000509	        0x488b4008	                mov rax, qword [rax + 8]	       133	basic_blocks.c	FUNCTION_4	CALL_4
0x400050d	          0x4889e7	                            mov rdi, rsp	       133	basic_blocks.c	FUNCTION_4	CALL_4
0x4000510	          0xff5038	                 call qword [rax + 0x38]	       133	basic_blocks.c	FUNCTION_4	CALL_4
0x4000513	          0x890424	                    mov dword [rsp], eax	       133	basic_blocks.c	FUNCTION_4	CALL_4
0x4000516	    0x833d00000000	               cmp dword [0x0400051d], 0	       134	basic_blocks.c	FUNCTION_4	IF_2
0x400051d	            0x7508	                           jne 0x4000527	       134	basic_blocks.c	FUNCTION_4	IF_2
0x400051f	          0x4889df	                            mov rdi, rbx	       135	basic_blocks.c	FUNCTION_4	CALL_5
0x4000522	      0xe857fbffff	                   call sym.fskip_string	       135	basic_blocks.c	FUNCTION_4	CALL_5
0x4000527	        0x833c2400	                      cmp dword [rsp], 0	       137	basic_blocks.c	FUNCTION_4	FOR_1
0x400052b	     0xf84d6010000	                            je 0x4000707	       137	basic_blocks.c	FUNCTION_4	FOR_1
0x4000531	      0xbd00000000	                              mov ebp, 0	       137	basic_blocks.c	FUNCTION_4	FOR_1
0x4000536	    0x833d00000000	               cmp dword [0x0400053d], 0	       139	basic_blocks.c	FUNCTION_4	FOR_1	IF_3
0x400053d	            0x7579	                           jne 0x40005b8	       139	basic_blocks.c	FUNCTION_4	FOR_1	IF_3
0x400053f	          0x4889d9	                            mov rcx, rbx	       295	stdio2.h	FUNCTION_23	CALL_9
0x4000542	      0xba01000000	                              mov edx, 1	       295	stdio2.h	FUNCTION_23	CALL_9
0x4000547	      0xbe08000000	                              mov esi, 8	       295	stdio2.h	FUNCTION_23	CALL_9
0x400054c	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       295	stdio2.h	FUNCTION_23	CALL_9
0x4000551	      0xe800000000	                          call 0x4000556	       295	stdio2.h	FUNCTION_23	CALL_9
0x4000556	        0x4883f801	                              cmp rax, 1	       145	basic_blocks.c	FUNCTION_4	FOR_1	IF_3	IF_4	CALL_6
0x400055a	            0x754a	                           jne 0x40005a6	       145	basic_blocks.c	FUNCTION_4	FOR_1	IF_3	IF_4	CALL_6
0x400055c	          0x4889d9	                            mov rcx, rbx	       295	stdio2.h	FUNCTION_23	CALL_9
0x400055f	      0xba01000000	                              mov edx, 1	       295	stdio2.h	FUNCTION_23	CALL_9
0x4000564	      0xbe08000000	                              mov esi, 8	       295	stdio2.h	FUNCTION_23	CALL_9
0x4000569	      0x488d7c2408	                      lea rdi, [rsp + 8]	       295	stdio2.h	FUNCTION_23	CALL_9
0x400056e	      0xe800000000	                          call 0x4000573	       295	stdio2.h	FUNCTION_23	CALL_9
0x4000573	        0x4883f801	                              cmp rax, 1	       146	basic_blocks.c	FUNCTION_4	FOR_1	IF_3	IF_4	CALL_7
0x4000577	            0x752d	                           jne 0x40005a6	       146	basic_blocks.c	FUNCTION_4	FOR_1	IF_3	IF_4	CALL_7
0x4000579	          0x4889df	                            mov rdi, rbx	       147	basic_blocks.c	FUNCTION_4	FOR_1	IF_3	IF_4	CALL_8
0x400057c	      0xe8fdfaffff	                   call sym.fskip_string	       147	basic_blocks.c	FUNCTION_4	FOR_1	IF_3	IF_4	CALL_8
0x4000581	          0x4889df	                            mov rdi, rbx	       148	basic_blocks.c	FUNCTION_4	FOR_1	IF_3	IF_4	CALL_9
0x4000584	      0xe8f5faffff	                   call sym.fskip_string	       148	basic_blocks.c	FUNCTION_4	FOR_1	IF_3	IF_4	CALL_9
0x4000589	          0x4889d9	                            mov rcx, rbx	       295	stdio2.h	FUNCTION_23	CALL_9
0x400058c	      0xba01000000	                              mov edx, 1	       295	stdio2.h	FUNCTION_23	CALL_9
0x4000591	      0xbe04000000	                              mov esi, 4	       295	stdio2.h	FUNCTION_23	CALL_9
0x4000596	      0x488d7c2404	                      lea rdi, [rsp + 4]	       295	stdio2.h	FUNCTION_23	CALL_9
0x400059b	      0xe800000000	                          call 0x40005a0	       295	stdio2.h	FUNCTION_23	CALL_9
0x40005a0	        0x4883f801	                              cmp rax, 1	       149	basic_blocks.c	FUNCTION_4	FOR_1	IF_3	IF_4	CALL_10
0x40005a4	            0x7446	                            je 0x40005ec	       149	basic_blocks.c	FUNCTION_4	FOR_1	IF_3	IF_4	CALL_10
0x40005a6	          0x4c89ef	                            mov rdi, r13	       151	basic_blocks.c	FUNCTION_4	FOR_1	IF_3	IF_4	CALL_11
0x40005a9	      0xe800000000	                          call 0x40005ae	       151	basic_blocks.c	FUNCTION_4	FOR_1	IF_3	IF_4	CALL_11
0x40005ae	      0xbf01000000	                              mov edi, 1	       152	basic_blocks.c	FUNCTION_4	FOR_1	IF_3	IF_4	CALL_12
0x40005b3	      0xe800000000	                          call 0x40005b8	       152	basic_blocks.c	FUNCTION_4	FOR_1	IF_3	IF_4	CALL_12
0x40005b8	      0x488d742408	                      lea rsi, [rsp + 8]	       155	basic_blocks.c	FUNCTION_4	FOR_1	ELSE_1	IF_5	CALL_13
0x40005bd	          0x4889df	                            mov rdi, rbx	       155	basic_blocks.c	FUNCTION_4	FOR_1	ELSE_1	IF_5	CALL_13
0x40005c0	      0xe800000000	                          call 0x40005c5	       155	basic_blocks.c	FUNCTION_4	FOR_1	ELSE_1	IF_5	CALL_13
0x40005c5	            0x85c0	                           test eax, eax	       155	basic_blocks.c	FUNCTION_4	FOR_1	ELSE_1	IF_5	CALL_13
0x40005c7	            0x7511	                           jne 0x40005da	       155	basic_blocks.c	FUNCTION_4	FOR_1	ELSE_1	IF_5	CALL_13
0x40005c9	      0x488d742410	                   lea rsi, [rsp + 0x10]	       156	basic_blocks.c	FUNCTION_4	FOR_1	ELSE_1	IF_5	CALL_14
0x40005ce	          0x4889df	                            mov rdi, rbx	       156	basic_blocks.c	FUNCTION_4	FOR_1	ELSE_1	IF_5	CALL_14
0x40005d1	      0xe800000000	                          call 0x40005d6	       156	basic_blocks.c	FUNCTION_4	FOR_1	ELSE_1	IF_5	CALL_14
0x40005d6	            0x85c0	                           test eax, eax	       156	basic_blocks.c	FUNCTION_4	FOR_1	ELSE_1	IF_5	CALL_14
0x40005d8	            0x7412	                            je 0x40005ec	       156	basic_blocks.c	FUNCTION_4	FOR_1	ELSE_1	IF_5	CALL_14
0x40005da	          0x4c89ef	                            mov rdi, r13	       158	basic_blocks.c	FUNCTION_4	FOR_1	ELSE_1	IF_5	CALL_15
0x40005dd	      0xe800000000	                          call 0x40005e2	       158	basic_blocks.c	FUNCTION_4	FOR_1	ELSE_1	IF_5	CALL_15
0x40005e2	      0xbf01000000	                              mov edi, 1	       159	basic_blocks.c	FUNCTION_4	FOR_1	ELSE_1	IF_5	CALL_16
0x40005e7	      0xe800000000	                          call 0x40005ec	       159	basic_blocks.c	FUNCTION_4	FOR_1	ELSE_1	IF_5	CALL_16
0x40005ec	    0x833d00000000	               cmp dword [0x040005f3], 0	       164	basic_blocks.c	FUNCTION_4	FOR_1	IF_6
0x40005f3	     0xf84b8000000	                            je 0x40006b1	       164	basic_blocks.c	FUNCTION_4	FOR_1	IF_6
0x40005f9	      0x488b742408	                mov rsi, qword [rsp + 8]	       166	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	CALL_17
0x40005fe	      0xbf00000000	                              mov edi, 0	       166	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	CALL_17
0x4000603	      0xe800000000	                          call 0x4000608	       166	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	CALL_17
0x4000608	          0x4989c4	                            mov r12, rax	       166	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	CALL_17
0x400060b	          0x4885c0	                           test rax, rax	       168	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7
0x400060e	     0xf84e7000000	                            je 0x40006fb	       168	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7
0x4000614	    0xf60500000000	               test byte [0x0400061b], 8	       172	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	CALL_18
0x400061b	            0x7430	                            je 0x400064d	       172	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	CALL_18
0x400061d	        0x4883ec08	                              sub rsp, 8	       104	stdio2.h	CALL_16
0x4000621	        0xff742418	                 push qword [rsp + 0x18]	       104	stdio2.h	CALL_16
0x4000625	        0x448b4820	            mov r9d, dword [rax + 0x20] 	       104	stdio2.h	CALL_16
0x4000629	        0x4c8b4010	              mov r8, qword [rax + 0x10]	       104	stdio2.h	CALL_16
0x400062d	          0x488b08	                    mov rcx, qword [rax]	       104	stdio2.h	CALL_16
0x4000630	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	       104	stdio2.h	CALL_16
0x4000635	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400063a	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400063f	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_16
0x4000644	      0xe800000000	                          call 0x4000649	       104	stdio2.h	CALL_16
0x4000649	        0x4883c410	                           add rsp, 0x10	       104	stdio2.h	CALL_16
0x400064d	      0x498b442438	            mov rax, qword [r12 + 0x38] 	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x4000652	          0x4885c0	                           test rax, rax	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x4000655	            0x7423	                            je 0x400067a	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x4000657	      0x488b742408	                mov rsi, qword [rsp + 8]	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x400065c	          0x4839f0	                            cmp rax, rsi	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x400065f	            0x7420	                            je 0x4000681	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x4000661	      0x498d542440	                   lea rdx, [r12 + 0x40]	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x4000666	      0xb801000000	                              mov eax, 1	       177	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2
0x400066b	          0x488b0a	                    mov rcx, qword [rdx]	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x400066e	          0x4885c9	                           test rcx, rcx	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x4000671	            0x7413	                            je 0x4000686	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x4000673	          0x4839f1	                            cmp rcx, rsi	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x4000676	            0x752b	                           jne 0x40006a3	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x4000678	            0xeb0c	                           jmp 0x4000686	       179	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x400067a	      0xb800000000	                              mov eax, 0	       177	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2
0x400067f	            0xeb05	                           jmp 0x4000686	       177	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2
0x4000681	      0xb800000000	                              mov eax, 0	       177	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2
0x4000686	            0x4898	                                    cdqe	       177	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2
0x4000688	        0x498d04c4	                  lea rax, [r12 + rax*8]	       177	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2
0x400068c	      0x488b542408	                mov rdx, qword [rsp + 8]	       181	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x4000691	        0x48895038	             mov qword [rax + 0x38], rdx	       181	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x4000695	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       182	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x400069a	    0x480190880000	            add qword [rax + 0x88], rdx 	       182	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x40006a1	            0xeb58	                           jmp 0x40006fb	       183	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2	IF_8
0x40006a3	          0x83c001	                              add eax, 1	       177	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2
0x40006a6	        0x4883c208	                              add rdx, 8	       177	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2
0x40006aa	          0x83f80a	                            cmp eax, 0xa	       177	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2
0x40006ad	            0x75bc	                           jne 0x400066b	       177	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2
0x40006af	            0xeb4a	                           jmp 0x40006fb	       177	basic_blocks.c	FUNCTION_4	FOR_1	IF_6	IF_7	FOR_2
0x40006b1	    0x833d00000000	               cmp dword [0x040006b8], 0	       192	basic_blocks.c	FUNCTION_4	FOR_1	ELSE_2	IF_9
0x40006b8	            0x7541	                           jne 0x40006fb	       192	basic_blocks.c	FUNCTION_4	FOR_1	ELSE_2	IF_9
0x40006ba	    0xc70500000000	               mov dword [0x040006c4], 1	       194	basic_blocks.c	FUNCTION_4	FOR_1	ELSE_2	IF_9
0x40006c4	    0x4c8b25000000	            mov r12, qword [0x040006cb] 	       195	basic_blocks.c	FUNCTION_4	FOR_1	ELSE_2	IF_9
0x40006cb	      0xba05000000	                              mov edx, 5	       196	basic_blocks.c	FUNCTION_4	FOR_1	ELSE_2	IF_9	CALL_19
0x40006d0	      0xbe00000000	                              mov esi, 0	       196	basic_blocks.c	FUNCTION_4	FOR_1	ELSE_2	IF_9	CALL_19
0x40006d5	      0xbf00000000	                              mov edi, 0	       196	basic_blocks.c	FUNCTION_4	FOR_1	ELSE_2	IF_9	CALL_19
0x40006da	      0xe800000000	                          call 0x40006df	       196	basic_blocks.c	FUNCTION_4	FOR_1	ELSE_2	IF_9	CALL_19
0x40006df	          0x4c89e1	                            mov rcx, r12	        97	stdio2.h	CALL_13
0x40006e2	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_13
0x40006e5	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_13
0x40006ea	    0x488b3d000000	            mov rdi, qword [0x040006f1] 	        97	stdio2.h	CALL_13
0x40006f1	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_13
0x40006f6	      0xe800000000	                          call 0x40006fb	        97	stdio2.h	CALL_13
0x40006fb	          0x83c501	                              add ebp, 1	       137	basic_blocks.c	FUNCTION_4	FOR_1
0x40006fe	          0x392c24	                    cmp dword [rsp], ebp	       137	basic_blocks.c	FUNCTION_4	FOR_1
0x4000701	     0xf872ffeffff	                            ja 0x4000536	       137	basic_blocks.c	FUNCTION_4	FOR_1
0x4000707	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       202	basic_blocks.c	FUNCTION_4
0x400070c	    0x644833042528	                xor rax, qword fs:[0x28]	       202	basic_blocks.c	FUNCTION_4
0x4000715	            0x7405	                            je 0x400071c	       202	basic_blocks.c	FUNCTION_4
0x4000717	      0xe800000000	                          call 0x400071c	       202	basic_blocks.c	FUNCTION_4
0x400071c	        0x4883c428	                           add rsp, 0x28	       202	basic_blocks.c	FUNCTION_4
0x4000720	              0x5b	                                 pop rbx	       202	basic_blocks.c	FUNCTION_4
0x4000721	              0x5d	                                 pop rbp	       202	basic_blocks.c	FUNCTION_4
0x4000722	            0x415c	                                 pop r12	       202	basic_blocks.c	FUNCTION_4
0x4000724	            0x415d	                                 pop r13	       202	basic_blocks.c	FUNCTION_4
0x4000726	              0xc3	                                     ret	       202	basic_blocks.c	FUNCTION_4
cmp_bb	ELSE,2:FOR,0:CALL,1:SWITCH,0:IF,5:WHILE,0:DO,0:functions,0	34
0x4000094	              0x55	                                push rbp	        57	basic_blocks.c	FUNCTION_1
0x4000095	              0x53	                                push rbx	        57	basic_blocks.c	FUNCTION_1
0x4000096	        0x4883ec08	                              sub rsp, 8	        57	basic_blocks.c	FUNCTION_1
0x400009a	          0x488b1f	                    mov rbx, qword [rdi]	        59	basic_blocks.c	FUNCTION_1
0x400009d	          0x488b2e	                    mov rbp, qword [rsi]	        60	basic_blocks.c	FUNCTION_1
0x40000a0	        0x488b4318	            mov rax, qword [rbx + 0x18] 	        62	basic_blocks.c	FUNCTION_1	IF_1
0x40000a4	          0x4885c0	                           test rax, rax	        62	basic_blocks.c	FUNCTION_1	IF_1
0x40000a7	            0x7428	                            je 0x40000d1	        62	basic_blocks.c	FUNCTION_1	IF_1
0x40000a9	        0x488b5518	            mov rdx, qword [rbp + 0x18] 	        62	basic_blocks.c	FUNCTION_1	IF_1
0x40000ad	          0x4885d2	                           test rdx, rdx	        62	basic_blocks.c	FUNCTION_1	IF_1
0x40000b0	            0x741f	                            je 0x40000d1	        62	basic_blocks.c	FUNCTION_1	IF_1
0x40000b2	        0x488b7208	                mov rsi, qword [rdx + 8]	        64	basic_blocks.c	FUNCTION_1	IF_1	CALL_1
0x40000b6	        0x488b7808	                mov rdi, qword [rax + 8]	        64	basic_blocks.c	FUNCTION_1	IF_1	CALL_1
0x40000ba	      0xe800000000	                          call 0x40000bf	        64	basic_blocks.c	FUNCTION_1	IF_1	CALL_1
0x40000bf	            0x85c0	                           test eax, eax	        66	basic_blocks.c	FUNCTION_1	IF_1	IF_2
0x40000c1	            0x7527	                           jne 0x40000ea	        66	basic_blocks.c	FUNCTION_1	IF_1	IF_2
0x40000c3	          0x8b4320	            mov eax, dword [rbx + 0x20] 	        69	basic_blocks.c	FUNCTION_1	IF_1	IF_3
0x40000c6	          0x8b5520	            mov edx, dword [rbp + 0x20] 	        69	basic_blocks.c	FUNCTION_1	IF_1	IF_3
0x40000c9	            0x39d0	                            cmp eax, edx	        69	basic_blocks.c	FUNCTION_1	IF_1	IF_3
0x40000cb	            0x7404	                            je 0x40000d1	        69	basic_blocks.c	FUNCTION_1	IF_1	IF_3
0x40000cd	            0x29d0	                            sub eax, edx	        70	basic_blocks.c	FUNCTION_1	IF_1	IF_3
0x40000cf	            0xeb19	                           jmp 0x40000ea	        70	basic_blocks.c	FUNCTION_1	IF_1	IF_3
0x40000d1	          0x488b13	                    mov rdx, qword [rbx]	        73	basic_blocks.c	FUNCTION_1	IF_4
0x40000d4	        0x488b4500	                    mov rax, qword [rbp]	        73	basic_blocks.c	FUNCTION_1	IF_4
0x40000d8	          0x4839c2	                            cmp rdx, rax	        73	basic_blocks.c	FUNCTION_1	IF_4
0x40000db	            0x7208	                            jb 0x40000e5	        73	basic_blocks.c	FUNCTION_1	IF_4
0x40000dd	           0xf97c0	                                 seta al	        67	basic_blocks.c	FUNCTION_1	IF_1	IF_2
0x40000e0	           0xfb6c0	                           movzx eax, al	        67	basic_blocks.c	FUNCTION_1	IF_1	IF_2
0x40000e3	            0xeb05	                           jmp 0x40000ea	        67	basic_blocks.c	FUNCTION_1	IF_1	IF_2
0x40000e5	      0xb8ffffffff	                     mov eax, 0xffffffff	        74	basic_blocks.c	FUNCTION_1	IF_4
0x40000ea	        0x4883c408	                              add rsp, 8	        79	basic_blocks.c	FUNCTION_1	ELSE_2
0x40000ee	              0x5b	                                 pop rbx	        79	basic_blocks.c	FUNCTION_1	ELSE_2
0x40000ef	              0x5d	                                 pop rbp	        79	basic_blocks.c	FUNCTION_1	ELSE_2
0x40000f0	              0xc3	                                     ret	        79	basic_blocks.c	FUNCTION_1	ELSE_2
bb_write_blocks	ELSE,0:FOR,4:CALL,8:SWITCH,0:IF,2:WHILE,0:DO,0:functions,0	82
0x4000727	            0x4156	                                push r14	       209	basic_blocks.c	FUNCTION_5
0x4000729	            0x4155	                                push r13	       209	basic_blocks.c	FUNCTION_5
0x400072b	            0x4154	                                push r12	       209	basic_blocks.c	FUNCTION_5
0x400072d	              0x55	                                push rbp	       209	basic_blocks.c	FUNCTION_5
0x400072e	              0x53	                                push rbx	       209	basic_blocks.c	FUNCTION_5
0x400072f	          0x4889fd	                            mov rbp, rdi	       209	basic_blocks.c	FUNCTION_5
0x4000732	          0x4989f6	                            mov r14, rsi	       209	basic_blocks.c	FUNCTION_5
0x4000735	    0x488b0d000000	            mov rcx, qword [0x0400073c] 	       215	basic_blocks.c	FUNCTION_5	FOR_1
0x400073c	    0x488b35000000	            mov rsi, qword [0x04000743] 	       215	basic_blocks.c	FUNCTION_5	FOR_1
0x4000743	      0xbb00000000	                              mov ebx, 0	       215	basic_blocks.c	FUNCTION_5	FOR_1
0x4000748	          0x4839f1	                            cmp rcx, rsi	       215	basic_blocks.c	FUNCTION_5	FOR_1
0x400074b	            0x7229	                            jb 0x4000776	       215	basic_blocks.c	FUNCTION_5	FOR_1
0x400074d	            0xeb39	                           jmp 0x4000788	       215	basic_blocks.c	FUNCTION_5	FOR_1
0x400074f	          0x83c001	                              add eax, 1	       217	basic_blocks.c	FUNCTION_5	FOR_1	FOR_2
0x4000752	        0x4883c208	                              add rdx, 8	       217	basic_blocks.c	FUNCTION_5	FOR_1	FOR_2
0x4000756	          0x83f80a	                            cmp eax, 0xa	       217	basic_blocks.c	FUNCTION_5	FOR_1	FOR_2
0x4000759	            0x740d	                            je 0x4000768	       217	basic_blocks.c	FUNCTION_5	FOR_1	FOR_2
0x400075b	        0x48833a00	                      cmp qword [rdx], 0	       217	basic_blocks.c	FUNCTION_5	FOR_1	FOR_2
0x400075f	            0x75ee	                           jne 0x400074f	       217	basic_blocks.c	FUNCTION_5	FOR_1	FOR_2
0x4000761	            0xeb05	                           jmp 0x4000768	       217	basic_blocks.c	FUNCTION_5	FOR_1	FOR_2
0x4000763	      0xb800000000	                              mov eax, 0	       217	basic_blocks.c	FUNCTION_5	FOR_1	FOR_2
0x4000768	             0x1c3	                            add ebx, eax	       219	basic_blocks.c	FUNCTION_5	FOR_1
0x400076a	    0x4881c1580100	                          add rcx, 0x158	       215	basic_blocks.c	FUNCTION_5	FOR_1
0x4000771	          0x4839f1	                            cmp rcx, rsi	       215	basic_blocks.c	FUNCTION_5	FOR_1
0x4000774	            0x7312	                           jae 0x4000788	       215	basic_blocks.c	FUNCTION_5	FOR_1
0x4000776	      0x4883793800	               cmp qword [rcx + 0x38], 0	       217	basic_blocks.c	FUNCTION_5	FOR_1	FOR_2
0x400077b	            0x74e6	                            je 0x4000763	       217	basic_blocks.c	FUNCTION_5	FOR_1	FOR_2
0x400077d	        0x488d5140	                   lea rdx, [rcx + 0x40]	       217	basic_blocks.c	FUNCTION_5	FOR_1	FOR_2
0x4000781	      0xb801000000	                              mov eax, 1	       217	basic_blocks.c	FUNCTION_5	FOR_1	FOR_2
0x4000786	            0xebd3	                           jmp 0x400075b	       217	basic_blocks.c	FUNCTION_5	FOR_1	FOR_2
0x4000788	      0xbe02000000	                              mov esi, 2	       223	basic_blocks.c	FUNCTION_5	IF_1	CALL_1
0x400078d	          0x4889ef	                            mov rdi, rbp	       223	basic_blocks.c	FUNCTION_5	IF_1	CALL_1
0x4000790	      0xe800000000	                          call 0x4000795	       223	basic_blocks.c	FUNCTION_5	IF_1	CALL_1
0x4000795	            0x85c0	                           test eax, eax	       223	basic_blocks.c	FUNCTION_5	IF_1	CALL_1
0x4000797	            0x750e	                           jne 0x40007a7	       223	basic_blocks.c	FUNCTION_5	IF_1	CALL_1
0x4000799	            0x89de	                            mov esi, ebx	       224	basic_blocks.c	FUNCTION_5	IF_1	CALL_2
0x400079b	          0x4889ef	                            mov rdi, rbp	       224	basic_blocks.c	FUNCTION_5	IF_1	CALL_2
0x400079e	      0xe800000000	                          call 0x40007a3	       224	basic_blocks.c	FUNCTION_5	IF_1	CALL_2
0x40007a3	            0x85c0	                           test eax, eax	       224	basic_blocks.c	FUNCTION_5	IF_1	CALL_2
0x40007a5	            0x7412	                            je 0x40007b9	       224	basic_blocks.c	FUNCTION_5	IF_1	CALL_2
0x40007a7	          0x4c89f7	                            mov rdi, r14	       226	basic_blocks.c	FUNCTION_5	IF_1	CALL_3
0x40007aa	      0xe800000000	                          call 0x40007af	       226	basic_blocks.c	FUNCTION_5	IF_1	CALL_3
0x40007af	      0xbf01000000	                              mov edi, 1	       227	basic_blocks.c	FUNCTION_5	IF_1	CALL_4
0x40007b4	      0xe800000000	                          call 0x40007b9	       227	basic_blocks.c	FUNCTION_5	IF_1	CALL_4
0x40007b9	    0x4c8b2d000000	            mov r13, qword [0x040007c0] 	       231	basic_blocks.c	FUNCTION_5	FOR_3
0x40007c0	    0x4c3b2d000000	            cmp r13, qword [0x040007c7] 	       231	basic_blocks.c	FUNCTION_5	FOR_3
0x40007c7	            0x7252	                            jb 0x400081b	       231	basic_blocks.c	FUNCTION_5	FOR_3
0x40007c9	            0xeb66	                           jmp 0x4000831	       231	basic_blocks.c	FUNCTION_5	FOR_3
0x40007cb	          0x4889ef	                            mov rdi, rbp	       235	basic_blocks.c	FUNCTION_5	FOR_3	FOR_4	IF_2	CALL_5
0x40007ce	      0xe800000000	                          call 0x40007d3	       235	basic_blocks.c	FUNCTION_5	FOR_3	FOR_4	IF_2	CALL_5
0x40007d3	            0x85c0	                           test eax, eax	       235	basic_blocks.c	FUNCTION_5	FOR_3	FOR_4	IF_2	CALL_5
0x40007d5	            0x7510	                           jne 0x40007e7	       235	basic_blocks.c	FUNCTION_5	FOR_3	FOR_4	IF_2	CALL_5
0x40007d7	        0x488b7348	            mov rsi, qword [rbx + 0x48] 	       236	basic_blocks.c	FUNCTION_5	FOR_3	FOR_4	IF_2	CALL_6
0x40007db	          0x4889ef	                            mov rdi, rbp	       236	basic_blocks.c	FUNCTION_5	FOR_3	FOR_4	IF_2	CALL_6
0x40007de	      0xe800000000	                          call 0x40007e3	       236	basic_blocks.c	FUNCTION_5	FOR_3	FOR_4	IF_2	CALL_6
0x40007e3	            0x85c0	                           test eax, eax	       236	basic_blocks.c	FUNCTION_5	FOR_3	FOR_4	IF_2	CALL_6
0x40007e5	            0x7412	                            je 0x40007f9	       236	basic_blocks.c	FUNCTION_5	FOR_3	FOR_4	IF_2	CALL_6
0x40007e7	          0x4c89f7	                            mov rdi, r14	       238	basic_blocks.c	FUNCTION_5	FOR_3	FOR_4	IF_2	CALL_7
0x40007ea	      0xe800000000	                          call 0x40007ef	       238	basic_blocks.c	FUNCTION_5	FOR_3	FOR_4	IF_2	CALL_7
0x40007ef	      0xbf01000000	                              mov edi, 1	       239	basic_blocks.c	FUNCTION_5	FOR_3	FOR_4	IF_2	CALL_8
0x40007f4	      0xe800000000	                          call 0x40007f9	       239	basic_blocks.c	FUNCTION_5	FOR_3	FOR_4	IF_2	CALL_8
0x40007f9	          0x4c39e3	                            cmp rbx, r12	       233	basic_blocks.c	FUNCTION_5	FOR_3	FOR_4
0x40007fc	            0x740d	                            je 0x400080b	       233	basic_blocks.c	FUNCTION_5	FOR_3	FOR_4
0x40007fe	        0x4883c308	                              add rbx, 8	       233	basic_blocks.c	FUNCTION_5	FOR_3	FOR_4
0x4000802	        0x488b73f8	                mov rsi, qword [rbx - 8]	       233	basic_blocks.c	FUNCTION_5	FOR_3	FOR_4
0x4000806	          0x4885f6	                           test rsi, rsi	       233	basic_blocks.c	FUNCTION_5	FOR_3	FOR_4
0x4000809	            0x75c0	                           jne 0x40007cb	       233	basic_blocks.c	FUNCTION_5	FOR_3	FOR_4
0x400080b	    0x4981c5580100	                          add r13, 0x158	       231	basic_blocks.c	FUNCTION_5	FOR_3
0x4000812	    0x4c392d000000	            cmp qword [0x04000819], r13 	       231	basic_blocks.c	FUNCTION_5	FOR_3
0x4000819	            0x7616	                           jbe 0x4000831	       231	basic_blocks.c	FUNCTION_5	FOR_3
0x400081b	        0x498b7538	            mov rsi, qword [r13 + 0x38] 	       233	basic_blocks.c	FUNCTION_5	FOR_3	FOR_4
0x400081f	          0x4885f6	                           test rsi, rsi	       233	basic_blocks.c	FUNCTION_5	FOR_3	FOR_4
0x4000822	            0x74e7	                            je 0x400080b	       233	basic_blocks.c	FUNCTION_5	FOR_3	FOR_4
0x4000824	        0x498d5d40	                   lea rbx, [r13 + 0x40]	       233	basic_blocks.c	FUNCTION_5	FOR_3	FOR_4
0x4000828	    0x4d8da5880000	                   lea r12, [r13 + 0x88]	       233	basic_blocks.c	FUNCTION_5	FOR_3	FOR_4
0x400082f	            0xeb9a	                           jmp 0x40007cb	       233	basic_blocks.c	FUNCTION_5	FOR_3	FOR_4
0x4000831	              0x5b	                                 pop rbx	       243	basic_blocks.c	FUNCTION_5
0x4000832	              0x5d	                                 pop rbp	       243	basic_blocks.c	FUNCTION_5
0x4000833	            0x415c	                                 pop r12	       243	basic_blocks.c	FUNCTION_5
0x4000835	            0x415d	                                 pop r13	       243	basic_blocks.c	FUNCTION_5
0x4000837	            0x415e	                                 pop r14	       243	basic_blocks.c	FUNCTION_5
0x4000839	              0xc3	                                     ret	       243	basic_blocks.c	FUNCTION_5
