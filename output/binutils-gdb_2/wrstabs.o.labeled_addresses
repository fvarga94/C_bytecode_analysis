stab_int_type	functions,0:IF,9:ELSE,8:SWITCH,0:CALL,12:WHILE,0:DO,0:FOR,0	140
0x40011d1	            0x4154	                                push r12	       630	wrstabs.c	FUNCTION_11
0x40011d3	              0x55	                                push rbp	       630	wrstabs.c	FUNCTION_11
0x40011d4	              0x53	                                push rbx	       630	wrstabs.c	FUNCTION_11
0x40011d5	        0x4883ec70	                           sub rsp, 0x70	       630	wrstabs.c	FUNCTION_11
0x40011d9	            0x89f3	                            mov ebx, esi	       630	wrstabs.c	FUNCTION_11
0x40011db	    0x64488b042528	                mov rax, qword fs:[0x28]	       630	wrstabs.c	FUNCTION_11
0x40011e4	      0x4889442468	             mov qword [rsp + 0x68], rax	       630	wrstabs.c	FUNCTION_11
0x40011e9	            0x31c0	                            xor eax, eax	       630	wrstabs.c	FUNCTION_11
0x40011eb	          0x8d46ff	                      lea eax, [rsi - 1]	       634	wrstabs.c	FUNCTION_11	IF_1
0x40011ee	          0x83f807	                              cmp eax, 7	       634	wrstabs.c	FUNCTION_11	IF_1
0x40011f1	            0x762d	                           jbe 0x4001220	       634	wrstabs.c	FUNCTION_11	IF_1
0x40011f3	      0xba05000000	                              mov edx, 5	       636	wrstabs.c	FUNCTION_11	IF_1	CALL_2
0x40011f8	      0xbe00000000	                              mov esi, 0	       636	wrstabs.c	FUNCTION_11	IF_1	CALL_2
0x40011fd	      0xbf00000000	                              mov edi, 0	       636	wrstabs.c	FUNCTION_11	IF_1	CALL_2
0x4001202	      0xe800000000	                          call 0x4001207	       636	wrstabs.c	FUNCTION_11	IF_1	CALL_2
0x4001207	            0x89de	                            mov esi, ebx	       636	wrstabs.c	FUNCTION_11	IF_1	CALL_2
0x4001209	          0x4889c7	                            mov rdi, rax	       636	wrstabs.c	FUNCTION_11	IF_1	CALL_2
0x400120c	      0xb800000000	                              mov eax, 0	       636	wrstabs.c	FUNCTION_11	IF_1	CALL_2
0x4001211	      0xe800000000	                          call 0x4001216	       636	wrstabs.c	FUNCTION_11	IF_1	CALL_2
0x4001216	      0xb800000000	                              mov eax, 0	       637	wrstabs.c	FUNCTION_11	IF_1
0x400121b	      0xe929010000	                           jmp 0x4001349	       637	wrstabs.c	FUNCTION_11	IF_1
0x4001220	          0x4889fd	                            mov rbp, rdi	       637	wrstabs.c	FUNCTION_11	IF_1
0x4001223	            0x85d2	                           test edx, edx	       640	wrstabs.c	FUNCTION_11	IF_2
0x4001225	            0x7414	                            je 0x400123b	       640	wrstabs.c	FUNCTION_11	IF_2
0x4001227	            0x89c0	                            mov eax, eax	       645	wrstabs.c	FUNCTION_11	IF_3
0x4001229	      0x488d44c778	          lea rax, [rdi + rax*8 + 0x78] 	       645	wrstabs.c	FUNCTION_11	IF_3
0x400122e	          0x488b30	                    mov rsi, qword [rax]	       645	wrstabs.c	FUNCTION_11	IF_3
0x4001231	          0x4885f6	                           test rsi, rsi	       645	wrstabs.c	FUNCTION_11	IF_3
0x4001234	            0x751b	                           jne 0x4001251	       645	wrstabs.c	FUNCTION_11	IF_3
0x4001236	      0xe927010000	                           jmp 0x4001362	       645	wrstabs.c	FUNCTION_11	IF_3
0x400123b	            0x89c0	                            mov eax, eax	       645	wrstabs.c	FUNCTION_11	IF_3
0x400123d	    0x488d84c7b800	          lea rax, [rdi + rax*8 + 0xb8] 	       645	wrstabs.c	FUNCTION_11	IF_3
0x4001245	          0x488b30	                    mov rsi, qword [rax]	       645	wrstabs.c	FUNCTION_11	IF_3
0x4001248	          0x4885f6	                           test rsi, rsi	       645	wrstabs.c	FUNCTION_11	IF_3
0x400124b	     0xf8463010000	                            je 0x40013b4	       645	wrstabs.c	FUNCTION_11	IF_3
0x4001251	            0x89da	                            mov edx, ebx	       646	wrstabs.c	FUNCTION_11	CALL_3
0x4001253	          0x4889ef	                            mov rdi, rbp	       646	wrstabs.c	FUNCTION_11	CALL_3
0x4001256	      0xe87df7ffff	         call sym.stab_push_defined_type	       646	wrstabs.c	FUNCTION_11	CALL_3
0x400125b	      0xe9e9000000	                           jmp 0x4001349	       646	wrstabs.c	FUNCTION_11	CALL_3
0x4001260	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	       662	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	CALL_5
0x4001267	      0xb800000000	                              mov eax, 0	       662	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	CALL_5
0x400126c	          0x4889d1	                            mov rcx, rdx	       662	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	CALL_5
0x400126f	          0x4889e7	                            mov rdi, rsp	       662	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	CALL_5
0x4001272	            0xf2ae	              repne scasb al, byte [rdi]	       662	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	CALL_5
0x4001274	          0x4889c8	                            mov rax, rcx	       662	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	CALL_5
0x4001277	          0x48f7d0	                                 not rax	       662	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	CALL_5
0x400127a	    0x8d0cdd000000	                        lea ecx, [rbx*8]	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001281	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001286	          0x48d3e6	                             shl rsi, cl	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001289	      0x488d7c04ff	                lea rdi, [rsp + rax - 1]	        33	stdio2.h	FUNCTION_54	CALL_1
0x400128e	        0x4c8d46ff	                       lea r8, [rsi - 1]	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001292	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001297	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x400129c	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x40012a1	      0xe800000000	                          call 0x40012a6	        33	stdio2.h	FUNCTION_54	CALL_1
0x40012a6	      0xe988000000	                           jmp 0x4001333	        33	stdio2.h	FUNCTION_54	CALL_1
0x40012ab	          0x83fb08	                              cmp ebx, 8	       663	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	ELSE_3	IF_6
0x40012ae	            0x7514	                           jne 0x40012c4	       663	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	ELSE_3	IF_6
0x40012b0	      0xba64000000	                           mov edx, 0x64	       148	string3.h	FUNCTION_81	CALL_3
0x40012b5	      0xbe00000000	                              mov esi, 0	       148	string3.h	FUNCTION_81	CALL_3
0x40012ba	          0x4889e7	                            mov rdi, rsp	       148	string3.h	FUNCTION_81	CALL_3
0x40012bd	      0xe800000000	                          call 0x40012c2	       148	string3.h	FUNCTION_81	CALL_3
0x40012c2	            0xeb6f	                           jmp 0x4001333	       148	string3.h	FUNCTION_81	CALL_3
0x40012c4	      0xe800000000	                          call 0x40012c9	       668	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	CALL_8
0x40012c9	    0x8d0cddffffff	                    lea ecx, [rbx*8 - 1]	       675	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	IF_8
0x40012d0	    0x41b801000000	                              mov r8d, 1	       675	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	IF_8
0x40012d6	          0x49d3e0	                              shl r8, cl	       675	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	IF_8
0x40012d9	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	       673	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	IF_8	CALL_9
0x40012e0	      0xb800000000	                              mov eax, 0	       673	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	IF_8	CALL_9
0x40012e5	          0x4889d1	                            mov rcx, rdx	       673	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	IF_8	CALL_9
0x40012e8	          0x4889e7	                            mov rdi, rsp	       673	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	IF_8	CALL_9
0x40012eb	            0xf2ae	              repne scasb al, byte [rdi]	       673	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	IF_8	CALL_9
0x40012ed	          0x4889c8	                            mov rax, rcx	       673	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	IF_8	CALL_9
0x40012f0	          0x48f7d0	                                 not rax	       673	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	IF_8	CALL_9
0x40012f3	      0x488d7c04ff	                lea rdi, [rsp + rax - 1]	        33	stdio2.h	FUNCTION_54	CALL_1
0x40012f8	        0x4d8d48ff	                        lea r9, [r8 - 1]	        33	stdio2.h	FUNCTION_54	CALL_1
0x40012fc	          0x49f7d8	                                  neg r8	        33	stdio2.h	FUNCTION_54	CALL_1
0x40012ff	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001304	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001309	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x400130e	      0xe800000000	                          call 0x4001313	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001313	            0xeb1e	                           jmp 0x4001333	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001315	          0x83fb08	                              cmp ebx, 8	       676	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	ELSE_7	IF_9
0x4001318	            0x7514	                           jne 0x400132e	       676	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	ELSE_7	IF_9
0x400131a	      0xba64000000	                           mov edx, 0x64	       148	string3.h	FUNCTION_81	CALL_3
0x400131f	      0xbe00000000	                              mov esi, 0	       148	string3.h	FUNCTION_81	CALL_3
0x4001324	          0x4889e7	                            mov rdi, rsp	       148	string3.h	FUNCTION_81	CALL_3
0x4001327	      0xe800000000	                          call 0x400132c	       148	string3.h	FUNCTION_81	CALL_3
0x400132c	            0xeb05	                           jmp 0x4001333	       148	string3.h	FUNCTION_81	CALL_3
0x400132e	      0xe800000000	                          call 0x4001333	       679	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	CALL_11
0x4001333	          0x4189d8	                            mov r8d, ebx	       682	wrstabs.c	FUNCTION_11	ELSE_2	CALL_12
0x4001336	      0xb901000000	                              mov ecx, 1	       682	wrstabs.c	FUNCTION_11	ELSE_2	CALL_12
0x400133b	          0x4c89e2	                            mov rdx, r12	       682	wrstabs.c	FUNCTION_11	ELSE_2	CALL_12
0x400133e	          0x4889e6	                            mov rsi, rsp	       682	wrstabs.c	FUNCTION_11	ELSE_2	CALL_12
0x4001341	          0x4889ef	                            mov rdi, rbp	       682	wrstabs.c	FUNCTION_11	ELSE_2	CALL_12
0x4001344	      0xe80ef6ffff	               call sym.stab_push_string	       682	wrstabs.c	FUNCTION_11	ELSE_2	CALL_12
0x4001349	      0x488b4c2468	            mov rcx, qword [rsp + 0x68] 	       684	wrstabs.c	FUNCTION_11
0x400134e	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       684	wrstabs.c	FUNCTION_11
0x4001357	     0xf849c000000	                            je 0x40013f9	       684	wrstabs.c	FUNCTION_11
0x400135d	      0xe992000000	                           jmp 0x40013f4	       684	wrstabs.c	FUNCTION_11
0x4001362	        0x4c8b6768	            mov r12, qword [rdi + 0x68] 	       652	wrstabs.c	FUNCTION_11	ELSE_2
0x4001366	      0x498d542401	                      lea rdx, [r12 + 1]	       653	wrstabs.c	FUNCTION_11	ELSE_2
0x400136b	        0x48895768	             mov qword [rdi + 0x68], rdx	       653	wrstabs.c	FUNCTION_11	ELSE_2
0x400136f	          0x4c8920	                    mov qword [rax], r12	       655	wrstabs.c	FUNCTION_11	ELSE_2
0x4001372	          0x4d89e1	                             mov r9, r12	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001375	          0x4d89e0	                             mov r8, r12	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001378	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x400137d	      0xba64000000	                           mov edx, 0x64	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001382	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001387	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_54	CALL_1
0x400138a	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x400138f	      0xe800000000	                          call 0x4001394	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001394	      0xba64000000	                           mov edx, 0x64	       148	string3.h	FUNCTION_81	CALL_3
0x4001399	      0xbe00000000	                              mov esi, 0	       148	string3.h	FUNCTION_81	CALL_3
0x400139e	          0x4889e7	                            mov rdi, rsp	       148	string3.h	FUNCTION_81	CALL_3
0x40013a1	      0xe800000000	                          call 0x40013a6	       148	string3.h	FUNCTION_81	CALL_3
0x40013a6	          0x83fb07	                              cmp ebx, 7	       661	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	IF_5
0x40013a9	     0xf87fcfeffff	                            ja 0x40012ab	       661	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	IF_5
0x40013af	      0xe9acfeffff	                           jmp 0x4001260	       661	wrstabs.c	FUNCTION_11	ELSE_2	IF_4	IF_5
0x40013b4	        0x4c8b6768	            mov r12, qword [rdi + 0x68] 	       652	wrstabs.c	FUNCTION_11	ELSE_2
0x40013b8	      0x498d542401	                      lea rdx, [r12 + 1]	       653	wrstabs.c	FUNCTION_11	ELSE_2
0x40013bd	        0x48895768	             mov qword [rdi + 0x68], rdx	       653	wrstabs.c	FUNCTION_11	ELSE_2
0x40013c1	          0x4c8920	                    mov qword [rax], r12	       655	wrstabs.c	FUNCTION_11	ELSE_2
0x40013c4	          0x4d89e1	                             mov r9, r12	        33	stdio2.h	FUNCTION_54	CALL_1
0x40013c7	          0x4d89e0	                             mov r8, r12	        33	stdio2.h	FUNCTION_54	CALL_1
0x40013ca	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x40013cf	      0xba64000000	                           mov edx, 0x64	        33	stdio2.h	FUNCTION_54	CALL_1
0x40013d4	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x40013d9	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_54	CALL_1
0x40013dc	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x40013e1	      0xe800000000	                          call 0x40013e6	        33	stdio2.h	FUNCTION_54	CALL_1
0x40013e6	          0x83fb08	                              cmp ebx, 8	       672	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	IF_8
0x40013e9	     0xf8726ffffff	                            ja 0x4001315	       672	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	IF_8
0x40013ef	      0xe9d5feffff	                           jmp 0x40012c9	       672	wrstabs.c	FUNCTION_11	ELSE_2	ELSE_6	IF_8
0x40013f4	      0xe800000000	                          call 0x40013f9	       684	wrstabs.c	FUNCTION_11
0x40013f9	        0x4883c470	                           add rsp, 0x70	       684	wrstabs.c	FUNCTION_11
0x40013fd	              0x5b	                                 pop rbx	       684	wrstabs.c	FUNCTION_11
0x40013fe	              0x5d	                                 pop rbp	       684	wrstabs.c	FUNCTION_11
0x40013ff	            0x415c	                                 pop r12	       684	wrstabs.c	FUNCTION_11
0x4001401	              0xc3	                                     ret	       684	wrstabs.c	FUNCTION_11
stab_set_type	functions,0:IF,2:ELSE,1:SWITCH,0:CALL,7:WHILE,0:DO,0:FOR,0	67
0x4000ca3	            0x4156	                                push r14	      1070	wrstabs.c	FUNCTION_22
0x4000ca5	            0x4155	                                push r13	      1070	wrstabs.c	FUNCTION_22
0x4000ca7	            0x4154	                                push r12	      1070	wrstabs.c	FUNCTION_22
0x4000ca9	              0x55	                                push rbp	      1070	wrstabs.c	FUNCTION_22
0x4000caa	              0x53	                                push rbx	      1070	wrstabs.c	FUNCTION_22
0x4000cab	          0x4889fb	                            mov rbx, rdi	      1070	wrstabs.c	FUNCTION_22
0x4000cae	          0x4189f5	                           mov r13d, esi	      1070	wrstabs.c	FUNCTION_22
0x4000cb1	        0x488b4760	            mov rax, qword [rdi + 0x60] 	      1076	wrstabs.c	FUNCTION_22
0x4000cb5	        0x448b601c	           mov r12d, dword [rax + 0x1c] 	      1076	wrstabs.c	FUNCTION_22
0x4000cb9	      0xe888f3ffff	                  call sym.stab_pop_type	      1078	wrstabs.c	FUNCTION_22	CALL_1
0x4000cbe	          0x4889c5	                            mov rbp, rax	      1078	wrstabs.c	FUNCTION_22	CALL_1
0x4000cc1	      0xb800000000	                              mov eax, 0	      1079	wrstabs.c	FUNCTION_22	CALL_3
0x4000cc6	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1079	wrstabs.c	FUNCTION_22	CALL_3
0x4000ccd	          0x4889ef	                            mov rdi, rbp	      1079	wrstabs.c	FUNCTION_22	CALL_3
0x4000cd0	            0xf2ae	              repne scasb al, byte [rdi]	      1079	wrstabs.c	FUNCTION_22	CALL_3
0x4000cd2	          0x48f7d1	                                 not rcx	      1079	wrstabs.c	FUNCTION_22	CALL_3
0x4000cd5	        0x488d791d	                   lea rdi, [rcx + 0x1d]	      1079	wrstabs.c	FUNCTION_22	CALL_3
0x4000cd9	      0xe800000000	                          call 0x4000cde	      1079	wrstabs.c	FUNCTION_22	CALL_3
0x4000cde	          0x4989c6	                            mov r14, rax	      1079	wrstabs.c	FUNCTION_22	CALL_3
0x4000ce1	          0x4585ed	                         test r13d, r13d	      1081	wrstabs.c	FUNCTION_22	IF_1
0x4000ce4	            0x750b	                           jne 0x4000cf1	      1081	wrstabs.c	FUNCTION_22	IF_1
0x4000ce6	          0xc60000	                       mov byte [rax], 0	      1083	wrstabs.c	FUNCTION_22	IF_1
0x4000ce9	    0x41bd00000000	                             mov r13d, 0	      1084	wrstabs.c	FUNCTION_22	IF_1
0x4000cef	            0xeb33	                           jmp 0x4000d24	      1084	wrstabs.c	FUNCTION_22	IF_1
0x4000cf1	        0x4c8b6b68	            mov r13, qword [rbx + 0x68] 	      1090	wrstabs.c	FUNCTION_22	ELSE_1
0x4000cf5	        0x498d4501	                      lea rax, [r13 + 1]	      1091	wrstabs.c	FUNCTION_22	ELSE_1
0x4000cf9	        0x48894368	             mov qword [rbx + 0x68], rax	      1091	wrstabs.c	FUNCTION_22	ELSE_1
0x4000cfd	          0x4d89e8	                             mov r8, r13	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000d00	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000d05	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000d0c	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000d11	          0x4c89f7	                            mov rdi, r14	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000d14	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000d19	      0xe800000000	                          call 0x4000d1e	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000d1e	    0x41bc01000000	                             mov r12d, 1	      1092	wrstabs.c	FUNCTION_22	ELSE_1
0x4000d24	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	      1096	wrstabs.c	FUNCTION_22	CALL_4
0x4000d2b	      0xb800000000	                              mov eax, 0	      1096	wrstabs.c	FUNCTION_22	CALL_4
0x4000d30	          0x4889d1	                            mov rcx, rdx	      1096	wrstabs.c	FUNCTION_22	CALL_4
0x4000d33	          0x4c89f7	                            mov rdi, r14	      1096	wrstabs.c	FUNCTION_22	CALL_4
0x4000d36	            0xf2ae	              repne scasb al, byte [rdi]	      1096	wrstabs.c	FUNCTION_22	CALL_4
0x4000d38	          0x4889c8	                            mov rax, rcx	      1096	wrstabs.c	FUNCTION_22	CALL_4
0x4000d3b	          0x48f7d0	                                 not rax	      1096	wrstabs.c	FUNCTION_22	CALL_4
0x4000d3e	      0x498d7c06ff	                lea rdi, [r14 + rax - 1]	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000d43	          0x4989e8	                             mov r8, rbp	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000d46	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000d4b	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000d50	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000d55	      0xe800000000	                          call 0x4000d5a	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000d5a	          0x4889ef	                            mov rdi, rbp	      1097	wrstabs.c	FUNCTION_22	CALL_5
0x4000d5d	      0xe800000000	                          call 0x4000d62	      1097	wrstabs.c	FUNCTION_22	CALL_5
0x4000d62	    0x41b800000000	                              mov r8d, 0	      1099	wrstabs.c	FUNCTION_22	IF_2	CALL_6
0x4000d68	          0x4489e1	                           mov ecx, r12d	      1099	wrstabs.c	FUNCTION_22	IF_2	CALL_6
0x4000d6b	          0x4c89ea	                            mov rdx, r13	      1099	wrstabs.c	FUNCTION_22	IF_2	CALL_6
0x4000d6e	          0x4c89f6	                            mov rsi, r14	      1099	wrstabs.c	FUNCTION_22	IF_2	CALL_6
0x4000d71	          0x4889df	                            mov rdi, rbx	      1099	wrstabs.c	FUNCTION_22	IF_2	CALL_6
0x4000d74	      0xe8defbffff	               call sym.stab_push_string	      1099	wrstabs.c	FUNCTION_22	IF_2	CALL_6
0x4000d79	            0x85c0	                           test eax, eax	      1099	wrstabs.c	FUNCTION_22	IF_2	CALL_6
0x4000d7b	            0x740d	                            je 0x4000d8a	      1099	wrstabs.c	FUNCTION_22	IF_2	CALL_6
0x4000d7d	          0x4c89f7	                            mov rdi, r14	      1102	wrstabs.c	FUNCTION_22	CALL_7
0x4000d80	      0xe800000000	                          call 0x4000d85	      1102	wrstabs.c	FUNCTION_22	CALL_7
0x4000d85	      0xb801000000	                              mov eax, 1	      1104	wrstabs.c	FUNCTION_22
0x4000d8a	              0x5b	                                 pop rbx	      1105	wrstabs.c	FUNCTION_22
0x4000d8b	              0x5d	                                 pop rbp	      1105	wrstabs.c	FUNCTION_22
0x4000d8c	            0x415c	                                 pop r12	      1105	wrstabs.c	FUNCTION_22
0x4000d8e	            0x415d	                                 pop r13	      1105	wrstabs.c	FUNCTION_22
0x4000d90	            0x415e	                                 pop r14	      1105	wrstabs.c	FUNCTION_22
0x4000d92	              0xc3	                                     ret	      1105	wrstabs.c	FUNCTION_22
stab_float_type	functions,0:IF,3:ELSE,1:SWITCH,0:CALL,5:WHILE,0:DO,0:FOR,0	80
0x4001402	            0x4156	                                push r14	       690	wrstabs.c	FUNCTION_12
0x4001404	            0x4155	                                push r13	       690	wrstabs.c	FUNCTION_12
0x4001406	            0x4154	                                push r12	       690	wrstabs.c	FUNCTION_12
0x4001408	              0x55	                                push rbp	       690	wrstabs.c	FUNCTION_12
0x4001409	              0x53	                                push rbx	       690	wrstabs.c	FUNCTION_12
0x400140a	        0x4883ec40	                           sub rsp, 0x40	       690	wrstabs.c	FUNCTION_12
0x400140e	          0x4889fb	                            mov rbx, rdi	       690	wrstabs.c	FUNCTION_12
0x4001411	            0x89f5	                            mov ebp, esi	       690	wrstabs.c	FUNCTION_12
0x4001413	    0x64488b042528	                mov rax, qword fs:[0x28]	       690	wrstabs.c	FUNCTION_12
0x400141c	      0x4889442438	             mov qword [rsp + 0x38], rax	       690	wrstabs.c	FUNCTION_12
0x4001421	            0x31c0	                            xor eax, eax	       690	wrstabs.c	FUNCTION_12
0x4001423	          0x8d46ff	                      lea eax, [rsi - 1]	       694	wrstabs.c	FUNCTION_12	IF_1
0x4001426	          0x83f80f	                            cmp eax, 0xf	       693	wrstabs.c	FUNCTION_12	IF_1
0x4001429	     0xf87d1000000	                            ja 0x4001500	       693	wrstabs.c	FUNCTION_12	IF_1
0x400142f	            0x89c0	                            mov eax, eax	       693	wrstabs.c	FUNCTION_12	IF_1
0x4001431	        0x4c8d24c7	                  lea r12, [rdi + rax*8]	       693	wrstabs.c	FUNCTION_12	IF_1
0x4001435	    0x498bb424f800	            mov rsi, qword [r12 + 0xf8] 	       696	wrstabs.c	FUNCTION_12	IF_1
0x400143d	          0x4885f6	                           test rsi, rsi	       696	wrstabs.c	FUNCTION_12	IF_1
0x4001440	     0xf8489000000	                            je 0x40014cf	       696	wrstabs.c	FUNCTION_12	IF_1
0x4001446	            0x89ea	                            mov edx, ebp	       697	wrstabs.c	FUNCTION_12	IF_1	CALL_1
0x4001448	      0xe88bf5ffff	         call sym.stab_push_defined_type	       697	wrstabs.c	FUNCTION_12	IF_1	CALL_1
0x400144d	            0xeb4d	                           jmp 0x400149c	       697	wrstabs.c	FUNCTION_12	IF_1	CALL_1
0x400144f	        0x4883ec08	                              sub rsp, 8	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001453	              0x55	                                push rbp	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001454	          0x4d89f1	                             mov r9, r14	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001457	          0x4d89e8	                             mov r8, r13	        33	stdio2.h	FUNCTION_54	CALL_1
0x400145a	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x400145f	      0xba32000000	                           mov edx, 0x32	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001464	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001469	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	        33	stdio2.h	FUNCTION_54	CALL_1
0x400146e	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001473	      0xe800000000	                          call 0x4001478	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001478	          0x4c89f7	                            mov rdi, r14	       721	wrstabs.c	FUNCTION_12	ELSE_1	CALL_4
0x400147b	      0xe800000000	                          call 0x4001480	       721	wrstabs.c	FUNCTION_12	ELSE_1	CALL_4
0x4001480	          0x4189e8	                            mov r8d, ebp	       723	wrstabs.c	FUNCTION_12	ELSE_1	CALL_5
0x4001483	      0xb901000000	                              mov ecx, 1	       723	wrstabs.c	FUNCTION_12	ELSE_1	CALL_5
0x4001488	          0x4c89ea	                            mov rdx, r13	       723	wrstabs.c	FUNCTION_12	ELSE_1	CALL_5
0x400148b	      0x488d742410	                   lea rsi, [rsp + 0x10]	       723	wrstabs.c	FUNCTION_12	ELSE_1	CALL_5
0x4001490	          0x4889df	                            mov rdi, rbx	       723	wrstabs.c	FUNCTION_12	ELSE_1	CALL_5
0x4001493	      0xe8bff4ffff	               call sym.stab_push_string	       723	wrstabs.c	FUNCTION_12	ELSE_1	CALL_5
0x4001498	        0x4883c410	                           add rsp, 0x10	       723	wrstabs.c	FUNCTION_12	ELSE_1	CALL_5
0x400149c	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	       725	wrstabs.c	FUNCTION_12
0x40014a1	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       725	wrstabs.c	FUNCTION_12
0x40014aa	            0x746e	                            je 0x400151a	       725	wrstabs.c	FUNCTION_12
0x40014ac	            0xeb67	                           jmp 0x4001515	       725	wrstabs.c	FUNCTION_12
0x40014ae	          0x4889df	                            mov rdi, rbx	       709	wrstabs.c	FUNCTION_12	ELSE_1	CALL_3
0x40014b1	      0xe890ebffff	                  call sym.stab_pop_type	       709	wrstabs.c	FUNCTION_12	ELSE_1	CALL_3
0x40014b6	          0x4989c6	                            mov r14, rax	       709	wrstabs.c	FUNCTION_12	ELSE_1	CALL_3
0x40014b9	        0x4c8b6b68	            mov r13, qword [rbx + 0x68] 	       711	wrstabs.c	FUNCTION_12	ELSE_1
0x40014bd	        0x498d4501	                      lea rax, [r13 + 1]	       712	wrstabs.c	FUNCTION_12	ELSE_1
0x40014c1	        0x48894368	             mov qword [rbx + 0x68], rax	       712	wrstabs.c	FUNCTION_12	ELSE_1
0x40014c5	    0x4d89ac24f800	             mov qword [r12 + 0xf8], r13	       717	wrstabs.c	FUNCTION_12	ELSE_1	IF_3
0x40014cd	            0xeb80	                           jmp 0x400144f	       717	wrstabs.c	FUNCTION_12	ELSE_1	IF_3
0x40014cf	      0xba00000000	                              mov edx, 0	       707	wrstabs.c	FUNCTION_12	ELSE_1	IF_2	CALL_2
0x40014d4	      0xbe04000000	                              mov esi, 4	       707	wrstabs.c	FUNCTION_12	ELSE_1	IF_2	CALL_2
0x40014d9	      0xe8f3fcffff	                  call sym.stab_int_type	       707	wrstabs.c	FUNCTION_12	ELSE_1	IF_2	CALL_2
0x40014de	            0x85c0	                           test eax, eax	       707	wrstabs.c	FUNCTION_12	ELSE_1	IF_2	CALL_2
0x40014e0	            0x74ba	                            je 0x400149c	       707	wrstabs.c	FUNCTION_12	ELSE_1	IF_2	CALL_2
0x40014e2	            0xebca	                           jmp 0x40014ae	       707	wrstabs.c	FUNCTION_12	ELSE_1	IF_2	CALL_2
0x40014e4	          0x4889df	                            mov rdi, rbx	       709	wrstabs.c	FUNCTION_12	ELSE_1	CALL_3
0x40014e7	      0xe85aebffff	                  call sym.stab_pop_type	       709	wrstabs.c	FUNCTION_12	ELSE_1	CALL_3
0x40014ec	          0x4989c6	                            mov r14, rax	       709	wrstabs.c	FUNCTION_12	ELSE_1	CALL_3
0x40014ef	        0x4c8b6b68	            mov r13, qword [rbx + 0x68] 	       711	wrstabs.c	FUNCTION_12	ELSE_1
0x40014f3	        0x498d4501	                      lea rax, [r13 + 1]	       712	wrstabs.c	FUNCTION_12	ELSE_1
0x40014f7	        0x48894368	             mov qword [rbx + 0x68], rax	       712	wrstabs.c	FUNCTION_12	ELSE_1
0x40014fb	      0xe94fffffff	                           jmp 0x400144f	       712	wrstabs.c	FUNCTION_12	ELSE_1
0x4001500	      0xba00000000	                              mov edx, 0	       707	wrstabs.c	FUNCTION_12	ELSE_1	IF_2	CALL_2
0x4001505	      0xbe04000000	                              mov esi, 4	       707	wrstabs.c	FUNCTION_12	ELSE_1	IF_2	CALL_2
0x400150a	      0xe8c2fcffff	                  call sym.stab_int_type	       707	wrstabs.c	FUNCTION_12	ELSE_1	IF_2	CALL_2
0x400150f	            0x85c0	                           test eax, eax	       707	wrstabs.c	FUNCTION_12	ELSE_1	IF_2	CALL_2
0x4001511	            0x7489	                            je 0x400149c	       707	wrstabs.c	FUNCTION_12	ELSE_1	IF_2	CALL_2
0x4001513	            0xebcf	                           jmp 0x40014e4	       707	wrstabs.c	FUNCTION_12	ELSE_1	IF_2	CALL_2
0x4001515	      0xe800000000	                          call 0x400151a	       725	wrstabs.c	FUNCTION_12
0x400151a	        0x4883c440	                           add rsp, 0x40	       725	wrstabs.c	FUNCTION_12
0x400151e	              0x5b	                                 pop rbx	       725	wrstabs.c	FUNCTION_12
0x400151f	              0x5d	                                 pop rbp	       725	wrstabs.c	FUNCTION_12
0x4001520	            0x415c	                                 pop r12	       725	wrstabs.c	FUNCTION_12
0x4001522	            0x415d	                                 pop r13	       725	wrstabs.c	FUNCTION_12
0x4001524	            0x415e	                                 pop r14	       725	wrstabs.c	FUNCTION_12
0x4001526	              0xc3	                                     ret	       725	wrstabs.c	FUNCTION_12
stab_function_parameter	functions,0:IF,1:ELSE,0:SWITCH,1:CALL,8:WHILE,0:DO,0:FOR,0	82
0x40023c4	            0x4157	                                push r15	      2112	wrstabs.c	FUNCTION_49
0x40023c6	            0x4156	                                push r14	      2112	wrstabs.c	FUNCTION_49
0x40023c8	            0x4155	                                push r13	      2112	wrstabs.c	FUNCTION_49
0x40023ca	            0x4154	                                push r12	      2112	wrstabs.c	FUNCTION_49
0x40023cc	              0x55	                                push rbp	      2112	wrstabs.c	FUNCTION_49
0x40023cd	              0x53	                                push rbx	      2112	wrstabs.c	FUNCTION_49
0x40023ce	        0x4883ec18	                           sub rsp, 0x18	      2112	wrstabs.c	FUNCTION_49
0x40023d2	          0x4989fc	                            mov r12, rdi	      2112	wrstabs.c	FUNCTION_49
0x40023d5	          0x4989f6	                            mov r14, rsi	      2112	wrstabs.c	FUNCTION_49
0x40023d8	            0x89d5	                            mov ebp, edx	      2112	wrstabs.c	FUNCTION_49
0x40023da	      0x48894c2408	                mov qword [rsp + 8], rcx	      2112	wrstabs.c	FUNCTION_49
0x40023df	      0xe862dcffff	                  call sym.stab_pop_type	      2118	wrstabs.c	FUNCTION_49	CALL_1
0x40023e4	          0x4889c3	                            mov rbx, rax	      2118	wrstabs.c	FUNCTION_49	CALL_1
0x40023e7	          0x83fd02	                              cmp ebp, 2	      2120	wrstabs.c	FUNCTION_49	SWITCH_1
0x40023ea	            0x7434	                            je 0x4002420	      2120	wrstabs.c	FUNCTION_49	SWITCH_1
0x40023ec	          0x83fd02	                              cmp ebp, 2	      2120	wrstabs.c	FUNCTION_49	SWITCH_1
0x40023ef	            0x7715	                            ja 0x4002406	      2120	wrstabs.c	FUNCTION_49	SWITCH_1
0x40023f1	    0x41bf70000000	                          mov r15d, 0x70	      2127	wrstabs.c	FUNCTION_49	SWITCH_1
0x40023f7	    0xc7442404a000	               mov dword [rsp + 4], 0xa0	      2126	wrstabs.c	FUNCTION_49	SWITCH_1
0x40023ff	          0x83fd01	                              cmp ebp, 1	      2120	wrstabs.c	FUNCTION_49	SWITCH_1
0x4002402	            0x743f	                            je 0x4002443	      2120	wrstabs.c	FUNCTION_49	SWITCH_1
0x4002404	            0xeb2a	                           jmp 0x4002430	      2120	wrstabs.c	FUNCTION_49	SWITCH_1
0x4002406	          0x83fd03	                              cmp ebp, 3	      2120	wrstabs.c	FUNCTION_49	SWITCH_1
0x4002409	            0x742a	                            je 0x4002435	      2120	wrstabs.c	FUNCTION_49	SWITCH_1
0x400240b	    0x41bf61000000	                          mov r15d, 0x61	      2142	wrstabs.c	FUNCTION_49	SWITCH_1
0x4002411	    0xc74424044000	               mov dword [rsp + 4], 0x40	      2141	wrstabs.c	FUNCTION_49	SWITCH_1
0x4002419	          0x83fd04	                              cmp ebp, 4	      2120	wrstabs.c	FUNCTION_49	SWITCH_1
0x400241c	            0x7425	                            je 0x4002443	      2120	wrstabs.c	FUNCTION_49	SWITCH_1
0x400241e	            0xeb10	                           jmp 0x4002430	      2120	wrstabs.c	FUNCTION_49	SWITCH_1
0x4002420	    0x41bf50000000	                          mov r15d, 0x50	      2132	wrstabs.c	FUNCTION_49	SWITCH_1
0x4002426	    0xc74424044000	               mov dword [rsp + 4], 0x40	      2131	wrstabs.c	FUNCTION_49	SWITCH_1
0x400242e	            0xeb13	                           jmp 0x4002443	      2131	wrstabs.c	FUNCTION_49	SWITCH_1
0x4002430	      0xe800000000	                          call 0x4002435	      2123	wrstabs.c	FUNCTION_49	SWITCH_1	CALL_2
0x4002435	    0x41bf76000000	                          mov r15d, 0x76	      2137	wrstabs.c	FUNCTION_49	SWITCH_1
0x400243b	    0xc7442404a000	               mov dword [rsp + 4], 0xa0	      2136	wrstabs.c	FUNCTION_49	SWITCH_1
0x4002443	    0x48c7c5ffffff	             mov rbp, 0xffffffffffffffff	      2146	wrstabs.c	FUNCTION_49	CALL_5
0x400244a	      0xb800000000	                              mov eax, 0	      2146	wrstabs.c	FUNCTION_49	CALL_5
0x400244f	          0x4889e9	                            mov rcx, rbp	      2146	wrstabs.c	FUNCTION_49	CALL_5
0x4002452	          0x4c89f7	                            mov rdi, r14	      2146	wrstabs.c	FUNCTION_49	CALL_5
0x4002455	            0xf2ae	              repne scasb al, byte [rdi]	      2146	wrstabs.c	FUNCTION_49	CALL_5
0x4002457	          0x4889ca	                            mov rdx, rcx	      2146	wrstabs.c	FUNCTION_49	CALL_5
0x400245a	          0x4889e9	                            mov rcx, rbp	      2146	wrstabs.c	FUNCTION_49	CALL_5
0x400245d	          0x4889df	                            mov rdi, rbx	      2146	wrstabs.c	FUNCTION_49	CALL_5
0x4002460	            0xf2ae	              repne scasb al, byte [rdi]	      2146	wrstabs.c	FUNCTION_49	CALL_5
0x4002462	          0x4889c8	                            mov rax, rcx	      2146	wrstabs.c	FUNCTION_49	CALL_5
0x4002465	          0x48f7d0	                                 not rax	      2146	wrstabs.c	FUNCTION_49	CALL_5
0x4002468	          0x4829d0	                            sub rax, rdx	      2146	wrstabs.c	FUNCTION_49	CALL_5
0x400246b	          0x4889c7	                            mov rdi, rax	      2146	wrstabs.c	FUNCTION_49	CALL_5
0x400246e	      0xe800000000	                          call 0x4002473	      2146	wrstabs.c	FUNCTION_49	CALL_5
0x4002473	          0x4989c5	                            mov r13, rax	      2146	wrstabs.c	FUNCTION_49	CALL_5
0x4002476	        0x4883ec08	                              sub rsp, 8	        33	stdio2.h	FUNCTION_54	CALL_1
0x400247a	              0x53	                                push rbx	        33	stdio2.h	FUNCTION_54	CALL_1
0x400247b	        0x450fbecf	                         movsx r9d, r15b	        33	stdio2.h	FUNCTION_54	CALL_1
0x400247f	          0x4d89f0	                             mov r8, r14	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002482	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002487	          0x4889ea	                            mov rdx, rbp	        33	stdio2.h	FUNCTION_54	CALL_1
0x400248a	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x400248f	          0x4889c7	                            mov rdi, rax	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002492	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002497	      0xe800000000	                          call 0x400249c	        33	stdio2.h	FUNCTION_54	CALL_1
0x400249c	          0x4889df	                            mov rdi, rbx	      2148	wrstabs.c	FUNCTION_49	CALL_6
0x400249f	      0xe800000000	                          call 0x40024a4	      2148	wrstabs.c	FUNCTION_49	CALL_6
0x40024a4	          0x4d89e8	                             mov r8, r13	      2150	wrstabs.c	FUNCTION_49	IF_1	CALL_7
0x40024a7	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      2150	wrstabs.c	FUNCTION_49	IF_1	CALL_7
0x40024ac	      0xba00000000	                              mov edx, 0	      2150	wrstabs.c	FUNCTION_49	IF_1	CALL_7
0x40024b1	        0x8b742414	            mov esi, dword [rsp + 0x14] 	      2150	wrstabs.c	FUNCTION_49	IF_1	CALL_7
0x40024b5	          0x4c89e7	                            mov rdi, r12	      2150	wrstabs.c	FUNCTION_49	IF_1	CALL_7
0x40024b8	      0xe86cfbffff	              call sym.stab_write_symbol	      2150	wrstabs.c	FUNCTION_49	IF_1	CALL_7
0x40024bd	        0x4883c410	                           add rsp, 0x10	      2150	wrstabs.c	FUNCTION_49	IF_1	CALL_7
0x40024c1	            0x85c0	                           test eax, eax	      2150	wrstabs.c	FUNCTION_49	IF_1	CALL_7
0x40024c3	            0x740d	                            je 0x40024d2	      2150	wrstabs.c	FUNCTION_49	IF_1	CALL_7
0x40024c5	          0x4c89ef	                            mov rdi, r13	      2153	wrstabs.c	FUNCTION_49	CALL_8
0x40024c8	      0xe800000000	                          call 0x40024cd	      2153	wrstabs.c	FUNCTION_49	CALL_8
0x40024cd	      0xb801000000	                              mov eax, 1	      2155	wrstabs.c	FUNCTION_49
0x40024d2	        0x4883c418	                           add rsp, 0x18	      2156	wrstabs.c	FUNCTION_49
0x40024d6	              0x5b	                                 pop rbx	      2156	wrstabs.c	FUNCTION_49
0x40024d7	              0x5d	                                 pop rbp	      2156	wrstabs.c	FUNCTION_49
0x40024d8	            0x415c	                                 pop r12	      2156	wrstabs.c	FUNCTION_49
0x40024da	            0x415d	                                 pop r13	      2156	wrstabs.c	FUNCTION_49
0x40024dc	            0x415e	                                 pop r14	      2156	wrstabs.c	FUNCTION_49
0x40024de	            0x415f	                                 pop r15	      2156	wrstabs.c	FUNCTION_49
0x40024e0	              0xc3	                                     ret	      2156	wrstabs.c	FUNCTION_49
stab_start_compilation_unit	functions,0:IF,0:ELSE,0:SWITCH,0:CALL,1:WHILE,0:DO,0:FOR,0	9
0x4002b95	        0x4883ec08	                              sub rsp, 8	       545	wrstabs.c	FUNCTION_7
0x4002b99	          0x4989f0	                             mov r8, rsi	       545	wrstabs.c	FUNCTION_7
0x4002b9c	    0x4889b7100200	            mov qword [rdi + 0x210], rsi	       553	wrstabs.c	FUNCTION_7
0x4002ba3	      0xb900000000	                              mov ecx, 0	       555	wrstabs.c	FUNCTION_7	CALL_1
0x4002ba8	      0xba00000000	                              mov edx, 0	       555	wrstabs.c	FUNCTION_7	CALL_1
0x4002bad	      0xbe84000000	                           mov esi, 0x84	       555	wrstabs.c	FUNCTION_7	CALL_1
0x4002bb2	      0xe872f4ffff	              call sym.stab_write_symbol	       555	wrstabs.c	FUNCTION_7	CALL_1
0x4002bb7	        0x4883c408	                              add rsp, 8	       556	wrstabs.c	FUNCTION_7
0x4002bbb	              0xc3	                                     ret	       556	wrstabs.c	FUNCTION_7
stab_tag_type	functions,0:IF,1:ELSE,0:SWITCH,0:CALL,2:WHILE,0:DO,0:FOR,0	23
0x4001a89	              0x53	                                push rbx	      1866	wrstabs.c	FUNCTION_41
0x4001a8a	        0x4883ec10	                           sub rsp, 0x10	      1866	wrstabs.c	FUNCTION_41
0x4001a8e	          0x4889fb	                            mov rbx, rdi	      1866	wrstabs.c	FUNCTION_41
0x4001a91	    0x64488b042528	                mov rax, qword fs:[0x28]	      1866	wrstabs.c	FUNCTION_41
0x4001a9a	      0x4889442408	                mov qword [rsp + 8], rax	      1866	wrstabs.c	FUNCTION_41
0x4001a9f	            0x31c0	                            xor eax, eax	      1866	wrstabs.c	FUNCTION_41
0x4001aa1	    0xc74424040000	                  mov dword [rsp + 4], 0	      1869	wrstabs.c	FUNCTION_41
0x4001aa9	      0x4c8d442404	                       lea r8, [rsp + 4]	      1871	wrstabs.c	FUNCTION_41	CALL_1
0x4001aae	      0xe8b0feffff	          call sym.stab_get_struct_index	      1871	wrstabs.c	FUNCTION_41	CALL_1
0x4001ab3	          0x4889c6	                            mov rsi, rax	      1871	wrstabs.c	FUNCTION_41	CALL_1
0x4001ab6	      0xb800000000	                              mov eax, 0	      1873	wrstabs.c	FUNCTION_41	IF_1
0x4001abb	          0x4885f6	                           test rsi, rsi	      1872	wrstabs.c	FUNCTION_41	IF_1
0x4001abe	            0x780c	                            js 0x4001acc	      1872	wrstabs.c	FUNCTION_41	IF_1
0x4001ac0	        0x8b542404	                mov edx, dword [rsp + 4]	      1875	wrstabs.c	FUNCTION_41	CALL_2
0x4001ac4	          0x4889df	                            mov rdi, rbx	      1875	wrstabs.c	FUNCTION_41	CALL_2
0x4001ac7	      0xe80cefffff	         call sym.stab_push_defined_type	      1875	wrstabs.c	FUNCTION_41	CALL_2
0x4001acc	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1876	wrstabs.c	FUNCTION_41
0x4001ad1	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      1876	wrstabs.c	FUNCTION_41
0x4001ada	            0x7405	                            je 0x4001ae1	      1876	wrstabs.c	FUNCTION_41
0x4001adc	      0xe800000000	                          call 0x4001ae1	      1876	wrstabs.c	FUNCTION_41
0x4001ae1	        0x4883c410	                           add rsp, 0x10	      1876	wrstabs.c	FUNCTION_41
0x4001ae5	              0x5b	                                 pop rbx	      1876	wrstabs.c	FUNCTION_41
0x4001ae6	              0xc3	                                     ret	      1876	wrstabs.c	FUNCTION_41
stab_start_function	functions,0:IF,1:ELSE,0:SWITCH,0:CALL,7:WHILE,0:DO,0:FOR,0	67
0x40024e1	            0x4156	                                push r14	      2084	wrstabs.c	FUNCTION_48
0x40024e3	            0x4155	                                push r13	      2084	wrstabs.c	FUNCTION_48
0x40024e5	            0x4154	                                push r12	      2084	wrstabs.c	FUNCTION_48
0x40024e7	              0x55	                                push rbp	      2084	wrstabs.c	FUNCTION_48
0x40024e8	              0x53	                                push rbx	      2084	wrstabs.c	FUNCTION_48
0x40024e9	    0x83bff8010000	              cmp dword [rdi + 0x1f8], 0	      2088	wrstabs.c	FUNCTION_48	CALL_1
0x40024f0	            0x7513	                           jne 0x4002505	      2088	wrstabs.c	FUNCTION_48	CALL_1
0x40024f2	          0x4889fb	                            mov rbx, rdi	      2088	wrstabs.c	FUNCTION_48	CALL_1
0x40024f5	          0x4889f5	                            mov rbp, rsi	      2088	wrstabs.c	FUNCTION_48	CALL_1
0x40024f8	          0x4189d5	                           mov r13d, edx	      2088	wrstabs.c	FUNCTION_48	CALL_1
0x40024fb	    0x4883bfe80100	cmp qword [rdi + 0x1e8], 0xffffffffffffffff	      2088	wrstabs.c	FUNCTION_48	CALL_1
0x4002503	            0x7419	                            je 0x400251e	      2088	wrstabs.c	FUNCTION_48	CALL_1
0x4002505	      0xb900000000	                              mov ecx, 0	      2088	wrstabs.c	FUNCTION_48	CALL_1
0x400250a	      0xba28080000	                          mov edx, 0x828	      2088	wrstabs.c	FUNCTION_48	CALL_1
0x400250f	      0xbe00000000	                              mov esi, 0	      2088	wrstabs.c	FUNCTION_48	CALL_1
0x4002514	      0xbf00000000	                              mov edi, 0	      2088	wrstabs.c	FUNCTION_48	CALL_1
0x4002519	      0xe800000000	                          call 0x400251e	      2088	wrstabs.c	FUNCTION_48	CALL_1
0x400251e	      0xe823dbffff	                  call sym.stab_pop_type	      2090	wrstabs.c	FUNCTION_48	CALL_2
0x4002523	          0x4989c4	                            mov r12, rax	      2090	wrstabs.c	FUNCTION_48	CALL_2
0x4002526	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	      2092	wrstabs.c	FUNCTION_48	CALL_5
0x400252d	      0xb800000000	                              mov eax, 0	      2092	wrstabs.c	FUNCTION_48	CALL_5
0x4002532	          0x4889d1	                            mov rcx, rdx	      2092	wrstabs.c	FUNCTION_48	CALL_5
0x4002535	          0x4889ef	                            mov rdi, rbp	      2092	wrstabs.c	FUNCTION_48	CALL_5
0x4002538	            0xf2ae	              repne scasb al, byte [rdi]	      2092	wrstabs.c	FUNCTION_48	CALL_5
0x400253a	          0x4889ce	                            mov rsi, rcx	      2092	wrstabs.c	FUNCTION_48	CALL_5
0x400253d	          0x4889d1	                            mov rcx, rdx	      2092	wrstabs.c	FUNCTION_48	CALL_5
0x4002540	          0x4c89e7	                            mov rdi, r12	      2092	wrstabs.c	FUNCTION_48	CALL_5
0x4002543	            0xf2ae	              repne scasb al, byte [rdi]	      2092	wrstabs.c	FUNCTION_48	CALL_5
0x4002545	          0x4889c8	                            mov rax, rcx	      2092	wrstabs.c	FUNCTION_48	CALL_5
0x4002548	          0x48f7d0	                                 not rax	      2092	wrstabs.c	FUNCTION_48	CALL_5
0x400254b	          0x4829f0	                            sub rax, rsi	      2092	wrstabs.c	FUNCTION_48	CALL_5
0x400254e	          0x4889c7	                            mov rdi, rax	      2092	wrstabs.c	FUNCTION_48	CALL_5
0x4002551	      0xe800000000	                          call 0x4002556	      2092	wrstabs.c	FUNCTION_48	CALL_5
0x4002556	          0x4989c6	                            mov r14, rax	      2092	wrstabs.c	FUNCTION_48	CALL_5
0x4002559	        0x4183fd01	                             cmp r13d, 1	      2093	wrstabs.c	FUNCTION_48
0x400255d	            0x19c0	                            sbb eax, eax	      2093	wrstabs.c	FUNCTION_48
0x400255f	          0x83e020	                           and eax, 0x20	      2093	wrstabs.c	FUNCTION_48
0x4002562	        0x4883ec08	                              sub rsp, 8	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002566	            0x4154	                                push r12	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002568	        0x448d4846	                   lea r9d, [rax + 0x46]	        33	stdio2.h	FUNCTION_54	CALL_1
0x400256c	          0x4989e8	                             mov r8, rbp	        33	stdio2.h	FUNCTION_54	CALL_1
0x400256f	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002574	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_54	CALL_1
0x400257b	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002580	          0x4c89f7	                            mov rdi, r14	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002583	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002588	      0xe800000000	                          call 0x400258d	        33	stdio2.h	FUNCTION_54	CALL_1
0x400258d	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      2098	wrstabs.c	FUNCTION_48
0x4002591	    0x488983e80100	            mov qword [rbx + 0x1e8], rax	      2098	wrstabs.c	FUNCTION_48
0x4002598	          0x4d89f0	                             mov r8, r14	      2100	wrstabs.c	FUNCTION_48	IF_1	CALL_6
0x400259b	      0xb900000000	                              mov ecx, 0	      2100	wrstabs.c	FUNCTION_48	IF_1	CALL_6
0x40025a0	      0xba00000000	                              mov edx, 0	      2100	wrstabs.c	FUNCTION_48	IF_1	CALL_6
0x40025a5	      0xbe24000000	                           mov esi, 0x24	      2100	wrstabs.c	FUNCTION_48	IF_1	CALL_6
0x40025aa	          0x4889df	                            mov rdi, rbx	      2100	wrstabs.c	FUNCTION_48	IF_1	CALL_6
0x40025ad	      0xe877faffff	              call sym.stab_write_symbol	      2100	wrstabs.c	FUNCTION_48	IF_1	CALL_6
0x40025b2	        0x4883c410	                           add rsp, 0x10	      2100	wrstabs.c	FUNCTION_48	IF_1	CALL_6
0x40025b6	            0x85c0	                           test eax, eax	      2100	wrstabs.c	FUNCTION_48	IF_1	CALL_6
0x40025b8	            0x740d	                            je 0x40025c7	      2100	wrstabs.c	FUNCTION_48	IF_1	CALL_6
0x40025ba	          0x4c89f7	                            mov rdi, r14	      2103	wrstabs.c	FUNCTION_48	CALL_7
0x40025bd	      0xe800000000	                          call 0x40025c2	      2103	wrstabs.c	FUNCTION_48	CALL_7
0x40025c2	      0xb801000000	                              mov eax, 1	      2105	wrstabs.c	FUNCTION_48
0x40025c7	              0x5b	                                 pop rbx	      2106	wrstabs.c	FUNCTION_48
0x40025c8	              0x5d	                                 pop rbp	      2106	wrstabs.c	FUNCTION_48
0x40025c9	            0x415c	                                 pop r12	      2106	wrstabs.c	FUNCTION_48
0x40025cb	            0x415d	                                 pop r13	      2106	wrstabs.c	FUNCTION_48
0x40025cd	            0x415e	                                 pop r14	      2106	wrstabs.c	FUNCTION_48
0x40025cf	              0xc3	                                     ret	      2106	wrstabs.c	FUNCTION_48
stab_method_type	functions,0:IF,10:ELSE,3:SWITCH,0:CALL,23:WHILE,0:DO,0:FOR,3	262
0x4001527	            0x4157	                                push r15	      1140	wrstabs.c	FUNCTION_24
0x4001529	            0x4156	                                push r14	      1140	wrstabs.c	FUNCTION_24
0x400152b	            0x4155	                                push r13	      1140	wrstabs.c	FUNCTION_24
0x400152d	            0x4154	                                push r12	      1140	wrstabs.c	FUNCTION_24
0x400152f	              0x55	                                push rbp	      1140	wrstabs.c	FUNCTION_24
0x4001530	              0x53	                                push rbx	      1140	wrstabs.c	FUNCTION_24
0x4001531	        0x4883ec28	                           sub rsp, 0x28	      1140	wrstabs.c	FUNCTION_24
0x4001535	          0x4989ff	                            mov r15, rdi	      1140	wrstabs.c	FUNCTION_24
0x4001538	          0x4189d5	                           mov r13d, edx	      1140	wrstabs.c	FUNCTION_24
0x400153b	        0x894c2410	             mov dword [rsp + 0x10], ecx	      1140	wrstabs.c	FUNCTION_24
0x400153f	            0x85f6	                           test esi, esi	      1154	wrstabs.c	FUNCTION_24	IF_1
0x4001541	            0x750d	                           jne 0x4001550	      1154	wrstabs.c	FUNCTION_24	IF_1
0x4001543	      0xe8a4fbffff	                call sym.stab_empty_type	      1156	wrstabs.c	FUNCTION_24	IF_1	IF_2	CALL_1
0x4001548	            0x85c0	                           test eax, eax	      1156	wrstabs.c	FUNCTION_24	IF_1	IF_2	CALL_1
0x400154a	     0xf84ab030000	                            je 0x40018fb	      1156	wrstabs.c	FUNCTION_24	IF_1	IF_2	CALL_1
0x4001550	        0x498b4760	            mov rax, qword [r15 + 0x60] 	      1160	wrstabs.c	FUNCTION_24
0x4001554	          0x8b681c	            mov ebp, dword [rax + 0x1c] 	      1160	wrstabs.c	FUNCTION_24
0x4001557	          0x4c89ff	                            mov rdi, r15	      1161	wrstabs.c	FUNCTION_24	CALL_2
0x400155a	      0xe8e7eaffff	                  call sym.stab_pop_type	      1161	wrstabs.c	FUNCTION_24	CALL_2
0x400155f	      0x4889442408	                mov qword [rsp + 8], rax	      1161	wrstabs.c	FUNCTION_24	CALL_2
0x4001564	          0x4585ed	                         test r13d, r13d	      1166	wrstabs.c	FUNCTION_24	IF_3
0x4001567	     0xf8879030000	                            js 0x40018e6	      1166	wrstabs.c	FUNCTION_24	IF_3
0x400156d	          0x4585ed	                         test r13d, r13d	      1171	wrstabs.c	FUNCTION_24	ELSE_1	IF_4
0x4001570	            0x7555	                           jne 0x40015c7	      1171	wrstabs.c	FUNCTION_24	ELSE_1	IF_4
0x4001572	      0x837c241000	               cmp dword [rsp + 0x10], 0	      1173	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	IF_5
0x4001577	     0xf8569030000	                           jne 0x40018e6	      1173	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	IF_5
0x400157d	      0xbf08000000	                              mov edi, 8	      1177	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2	CALL_3
0x4001582	      0xe800000000	                          call 0x4001587	      1177	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2	CALL_3
0x4001587	          0x4989c6	                            mov r14, rax	      1177	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2	CALL_3
0x400158a	          0x4c89ff	                            mov rdi, r15	      1178	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2	IF_6	CALL_4
0x400158d	      0xe85afbffff	                call sym.stab_empty_type	      1178	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2	IF_6	CALL_4
0x4001592	            0x85c0	                           test eax, eax	      1178	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2	IF_6	CALL_4
0x4001594	     0xf8461030000	                            je 0x40018fb	      1178	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2	IF_6	CALL_4
0x400159a	            0x85ed	                           test ebp, ebp	      1180	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2
0x400159c	     0xf85e7020000	                           jne 0x4001889	      1180	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2
0x40015a2	        0x498b4760	            mov rax, qword [r15 + 0x60] 	      1180	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2
0x40015a6	          0x8b581c	            mov ebx, dword [rax + 0x1c] 	      1180	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2
0x40015a9	          0x4c89ff	                            mov rdi, r15	      1181	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2	CALL_5
0x40015ac	      0xe895eaffff	                  call sym.stab_pop_type	      1181	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2	CALL_5
0x40015b1	          0x498906	                    mov qword [r14], rax	      1181	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2	CALL_5
0x40015b4	            0x85db	                           test ebx, ebx	      1203	wrstabs.c	FUNCTION_24
0x40015b6	     0xf85e0010000	                           jne 0x400179c	      1203	wrstabs.c	FUNCTION_24
0x40015bc	    0x41bd01000000	                             mov r13d, 1	      1182	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2
0x40015c2	      0xe9ac000000	                           jmp 0x4001673	      1182	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2
0x40015c7	        0x418d4501	                      lea eax, [r13 + 1]	      1187	wrstabs.c	FUNCTION_24	ELSE_3	CALL_6
0x40015cb	        0x89442414	             mov dword [rsp + 0x14], eax	      1187	wrstabs.c	FUNCTION_24	ELSE_3	CALL_6
0x40015cf	            0x4898	                                    cdqe	      1187	wrstabs.c	FUNCTION_24	ELSE_3	CALL_6
0x40015d1	        0x48c1e003	                              shl rax, 3	      1187	wrstabs.c	FUNCTION_24	ELSE_3	CALL_6
0x40015d5	      0x4889442418	             mov qword [rsp + 0x18], rax	      1187	wrstabs.c	FUNCTION_24	ELSE_3	CALL_6
0x40015da	          0x4889c7	                            mov rdi, rax	      1187	wrstabs.c	FUNCTION_24	ELSE_3	CALL_6
0x40015dd	      0xe800000000	                          call 0x40015e2	      1187	wrstabs.c	FUNCTION_24	ELSE_3	CALL_6
0x40015e2	          0x4989c6	                            mov r14, rax	      1187	wrstabs.c	FUNCTION_24	ELSE_3	CALL_6
0x40015e5	          0x4489eb	                           mov ebx, r13d	      1188	wrstabs.c	FUNCTION_24	ELSE_3	FOR_1
0x40015e8	          0x83eb01	                              sub ebx, 1	      1188	wrstabs.c	FUNCTION_24	ELSE_3	FOR_1
0x40015eb	            0x7836	                            js 0x4001623	      1188	wrstabs.c	FUNCTION_24	ELSE_3	FOR_1
0x40015ed	            0x85ed	                           test ebp, ebp	      1190	wrstabs.c	FUNCTION_24	ELSE_3	FOR_1
0x40015ef	            0x7512	                           jne 0x4001603	      1190	wrstabs.c	FUNCTION_24	ELSE_3	FOR_1
0x40015f1	        0x498b4760	            mov rax, qword [r15 + 0x60] 	      1190	wrstabs.c	FUNCTION_24	ELSE_3	FOR_1
0x40015f5	        0x83781c00	               cmp dword [rax + 0x1c], 0	      1190	wrstabs.c	FUNCTION_24	ELSE_3	FOR_1
0x40015f9	        0x400f95c5	                               setne bpl	      1190	wrstabs.c	FUNCTION_24	ELSE_3	FOR_1
0x40015fd	        0x400fb6ed	                          movzx ebp, bpl	      1190	wrstabs.c	FUNCTION_24	ELSE_3	FOR_1
0x4001601	            0xeb05	                           jmp 0x4001608	      1190	wrstabs.c	FUNCTION_24	ELSE_3	FOR_1
0x4001603	      0xbd01000000	                              mov ebp, 1	      1190	wrstabs.c	FUNCTION_24	ELSE_3	FOR_1
0x4001608	          0x4863c3	                         movsxd rax, ebx	      1191	wrstabs.c	FUNCTION_24	ELSE_3	FOR_1	CALL_7
0x400160b	        0x4d8d24c6	                  lea r12, [r14 + rax*8]	      1191	wrstabs.c	FUNCTION_24	ELSE_3	FOR_1	CALL_7
0x400160f	          0x4c89ff	                            mov rdi, r15	      1191	wrstabs.c	FUNCTION_24	ELSE_3	FOR_1	CALL_7
0x4001612	      0xe82feaffff	                  call sym.stab_pop_type	      1191	wrstabs.c	FUNCTION_24	ELSE_3	FOR_1	CALL_7
0x4001617	        0x49890424	                    mov qword [r12], rax	      1191	wrstabs.c	FUNCTION_24	ELSE_3	FOR_1	CALL_7
0x400161b	          0x83eb01	                              sub ebx, 1	      1188	wrstabs.c	FUNCTION_24	ELSE_3	FOR_1
0x400161e	          0x83fbff	             cmp ebx, 0xffffffffffffffff	      1188	wrstabs.c	FUNCTION_24	ELSE_3	FOR_1
0x4001621	            0x75ca	                           jne 0x40015ed	      1188	wrstabs.c	FUNCTION_24	ELSE_3	FOR_1
0x4001623	      0x837c241000	               cmp dword [rsp + 0x10], 0	      1193	wrstabs.c	FUNCTION_24	ELSE_3	IF_7
0x4001628	            0x7545	                           jne 0x400166f	      1193	wrstabs.c	FUNCTION_24	ELSE_3	IF_7
0x400162a	          0x4c89ff	                            mov rdi, r15	      1195	wrstabs.c	FUNCTION_24	ELSE_3	IF_7	IF_8	CALL_8
0x400162d	      0xe8bafaffff	                call sym.stab_empty_type	      1195	wrstabs.c	FUNCTION_24	ELSE_3	IF_7	IF_8	CALL_8
0x4001632	            0x85c0	                           test eax, eax	      1195	wrstabs.c	FUNCTION_24	ELSE_3	IF_7	IF_8	CALL_8
0x4001634	     0xf84c1020000	                            je 0x40018fb	      1195	wrstabs.c	FUNCTION_24	ELSE_3	IF_7	IF_8	CALL_8
0x400163a	            0x85ed	                           test ebp, ebp	      1197	wrstabs.c	FUNCTION_24	ELSE_3	IF_7
0x400163c	            0x7512	                           jne 0x4001650	      1197	wrstabs.c	FUNCTION_24	ELSE_3	IF_7
0x400163e	        0x498b4760	            mov rax, qword [r15 + 0x60] 	      1197	wrstabs.c	FUNCTION_24	ELSE_3	IF_7
0x4001642	        0x83781c00	               cmp dword [rax + 0x1c], 0	      1197	wrstabs.c	FUNCTION_24	ELSE_3	IF_7
0x4001646	        0x400f95c5	                               setne bpl	      1197	wrstabs.c	FUNCTION_24	ELSE_3	IF_7
0x400164a	        0x400fb6ed	                          movzx ebp, bpl	      1197	wrstabs.c	FUNCTION_24	ELSE_3	IF_7
0x400164e	            0xeb05	                           jmp 0x4001655	      1197	wrstabs.c	FUNCTION_24	ELSE_3	IF_7
0x4001650	      0xbd01000000	                              mov ebp, 1	      1197	wrstabs.c	FUNCTION_24	ELSE_3	IF_7
0x4001655	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1198	wrstabs.c	FUNCTION_24	ELSE_3	IF_7	CALL_9
0x400165a	      0x498d5c06f8	                lea rbx, [r14 + rax - 8]	      1198	wrstabs.c	FUNCTION_24	ELSE_3	IF_7	CALL_9
0x400165f	          0x4c89ff	                            mov rdi, r15	      1198	wrstabs.c	FUNCTION_24	ELSE_3	IF_7	CALL_9
0x4001662	      0xe8dfe9ffff	                  call sym.stab_pop_type	      1198	wrstabs.c	FUNCTION_24	ELSE_3	IF_7	CALL_9
0x4001667	          0x488903	                    mov qword [rbx], rax	      1198	wrstabs.c	FUNCTION_24	ELSE_3	IF_7	CALL_9
0x400166a	      0x448b6c2414	           mov r13d, dword [rsp + 0x14] 	      1199	wrstabs.c	FUNCTION_24	ELSE_3	IF_7
0x400166f	            0x85ed	                           test ebp, ebp	      1203	wrstabs.c	FUNCTION_24
0x4001671	            0x7514	                           jne 0x4001687	      1203	wrstabs.c	FUNCTION_24
0x4001673	        0x498b4760	            mov rax, qword [r15 + 0x60] 	      1203	wrstabs.c	FUNCTION_24
0x4001677	        0x83781c00	               cmp dword [rax + 0x1c], 0	      1203	wrstabs.c	FUNCTION_24
0x400167b	           0xf95c0	                                setne al	      1203	wrstabs.c	FUNCTION_24
0x400167e	           0xfb6c0	                           movzx eax, al	      1203	wrstabs.c	FUNCTION_24
0x4001681	        0x89442410	             mov dword [rsp + 0x10], eax	      1203	wrstabs.c	FUNCTION_24
0x4001685	            0xeb08	                           jmp 0x400168f	      1203	wrstabs.c	FUNCTION_24
0x4001687	    0xc74424100100	               mov dword [rsp + 0x10], 1	      1203	wrstabs.c	FUNCTION_24
0x400168f	          0x4c89ff	                            mov rdi, r15	      1204	wrstabs.c	FUNCTION_24	CALL_10
0x4001692	      0xe8afe9ffff	                  call sym.stab_pop_type	      1204	wrstabs.c	FUNCTION_24	CALL_10
0x4001697	          0x4889c3	                            mov rbx, rax	      1204	wrstabs.c	FUNCTION_24	CALL_10
0x400169a	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x40016a1	      0xb800000000	                              mov eax, 0	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x40016a6	          0x4889f1	                            mov rcx, rsi	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x40016a9	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x40016ae	            0xf2ae	              repne scasb al, byte [rdi]	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x40016b0	          0x4889ca	                            mov rdx, rcx	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x40016b3	          0x48f7d2	                                 not rdx	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x40016b6	          0x4889f1	                            mov rcx, rsi	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x40016b9	          0x4889df	                            mov rdi, rbx	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x40016bc	            0xf2ae	              repne scasb al, byte [rdi]	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x40016be	          0x4889c8	                            mov rax, rcx	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x40016c1	          0x48f7d0	                                 not rax	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x40016c4	      0x488d740208	                lea rsi, [rdx + rax + 8]	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x40016c9	          0x4585ed	                         test r13d, r13d	      1207	wrstabs.c	FUNCTION_24	FOR_2
0x40016cc	     0xf8e6e010000	                           jle 0x4001840	      1207	wrstabs.c	FUNCTION_24	FOR_2
0x40016d2	      0xba00000000	                              mov edx, 0	      1207	wrstabs.c	FUNCTION_24	FOR_2
0x40016d7	    0x49c7c0ffffff	              mov r8, 0xffffffffffffffff	      1208	wrstabs.c	FUNCTION_24	CALL_13
0x40016de	      0xb800000000	                              mov eax, 0	      1208	wrstabs.c	FUNCTION_24	CALL_13
0x40016e3	        0x498b3cd6	            mov rdi, qword [r14 + rdx*8]	      1208	wrstabs.c	FUNCTION_24	CALL_13
0x40016e7	          0x4c89c1	                             mov rcx, r8	      1208	wrstabs.c	FUNCTION_24	CALL_13
0x40016ea	            0xf2ae	              repne scasb al, byte [rdi]	      1208	wrstabs.c	FUNCTION_24	CALL_13
0x40016ec	          0x48f7d1	                                 not rcx	      1208	wrstabs.c	FUNCTION_24	CALL_13
0x40016ef	      0x488d740eff	                lea rsi, [rsi + rcx - 1]	      1208	wrstabs.c	FUNCTION_24	CALL_13
0x40016f4	        0x4883c201	                              add rdx, 1	      1208	wrstabs.c	FUNCTION_24	CALL_13
0x40016f8	          0x4139d5	                           cmp r13d, edx	      1207	wrstabs.c	FUNCTION_24	FOR_2
0x40016fb	            0x7fe6	                            jg 0x40016e3	      1207	wrstabs.c	FUNCTION_24	FOR_2
0x40016fd	      0xe9f0000000	                           jmp 0x40017f2	      1207	wrstabs.c	FUNCTION_24	FOR_2
0x4001702	      0xb800000000	                              mov eax, 0	       148	string3.h	FUNCTION_81	CALL_3
0x4001707	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       148	string3.h	FUNCTION_81	CALL_3
0x400170e	          0x4889ef	                            mov rdi, rbp	       148	string3.h	FUNCTION_81	CALL_3
0x4001711	            0xf2ae	              repne scasb al, byte [rdi]	       148	string3.h	FUNCTION_81	CALL_3
0x4001713	          0x4889c8	                            mov rax, rcx	       148	string3.h	FUNCTION_81	CALL_3
0x4001716	          0x48f7d0	                                 not rax	       148	string3.h	FUNCTION_81	CALL_3
0x4001719	    0x66c74405ff2c	         mov word [rbp + rax - 1], 0x2c 	       148	string3.h	FUNCTION_81	CALL_3
0x4001720	        0x4d8b24de	            mov r12, qword [r14 + rbx*8]	      1218	wrstabs.c	FUNCTION_24	FOR_3	CALL_18
0x4001724	          0x4c89e6	                            mov rsi, r12	       148	string3.h	FUNCTION_81	CALL_3
0x4001727	          0x4889ef	                            mov rdi, rbp	       148	string3.h	FUNCTION_81	CALL_3
0x400172a	      0xe800000000	                          call 0x400172f	       148	string3.h	FUNCTION_81	CALL_3
0x400172f	          0x4c89e7	                            mov rdi, r12	      1219	wrstabs.c	FUNCTION_24	FOR_3	CALL_19
0x4001732	      0xe800000000	                          call 0x4001737	      1219	wrstabs.c	FUNCTION_24	FOR_3	CALL_19
0x4001737	        0x4883c301	                              add rbx, 1	      1219	wrstabs.c	FUNCTION_24	FOR_3	CALL_19
0x400173b	          0x4139dd	                           cmp r13d, ebx	      1215	wrstabs.c	FUNCTION_24	FOR_3
0x400173e	            0x7fc2	                            jg 0x4001702	      1215	wrstabs.c	FUNCTION_24	FOR_3
0x4001740	      0xb800000000	                              mov eax, 0	       148	string3.h	FUNCTION_81	CALL_3
0x4001745	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       148	string3.h	FUNCTION_81	CALL_3
0x400174c	          0x4889ef	                            mov rdi, rbp	       148	string3.h	FUNCTION_81	CALL_3
0x400174f	            0xf2ae	              repne scasb al, byte [rdi]	       148	string3.h	FUNCTION_81	CALL_3
0x4001751	          0x48f7d1	                                 not rcx	       148	string3.h	FUNCTION_81	CALL_3
0x4001754	    0x66c7440dff3b	         mov word [rbp + rcx - 1], 0x3b 	       148	string3.h	FUNCTION_81	CALL_3
0x400175b	          0x4d85f6	                           test r14, r14	      1223	wrstabs.c	FUNCTION_24	IF_9
0x400175e	            0x7408	                            je 0x4001768	      1223	wrstabs.c	FUNCTION_24	IF_9
0x4001760	          0x4c89f7	                            mov rdi, r14	      1224	wrstabs.c	FUNCTION_24	CALL_21
0x4001763	      0xe800000000	                          call 0x4001768	      1224	wrstabs.c	FUNCTION_24	CALL_21
0x4001768	    0x41b800000000	                              mov r8d, 0	      1226	wrstabs.c	FUNCTION_24	IF_10	CALL_22
0x400176e	        0x8b4c2410	            mov ecx, dword [rsp + 0x10] 	      1226	wrstabs.c	FUNCTION_24	IF_10	CALL_22
0x4001772	      0xba00000000	                              mov edx, 0	      1226	wrstabs.c	FUNCTION_24	IF_10	CALL_22
0x4001777	          0x4889ee	                            mov rsi, rbp	      1226	wrstabs.c	FUNCTION_24	IF_10	CALL_22
0x400177a	          0x4c89ff	                            mov rdi, r15	      1226	wrstabs.c	FUNCTION_24	IF_10	CALL_22
0x400177d	      0xe8d5f1ffff	               call sym.stab_push_string	      1226	wrstabs.c	FUNCTION_24	IF_10	CALL_22
0x4001782	            0x85c0	                           test eax, eax	      1226	wrstabs.c	FUNCTION_24	IF_10	CALL_22
0x4001784	     0xf8471010000	                            je 0x40018fb	      1226	wrstabs.c	FUNCTION_24	IF_10	CALL_22
0x400178a	          0x4889ef	                            mov rdi, rbp	      1229	wrstabs.c	FUNCTION_24	CALL_23
0x400178d	      0xe800000000	                          call 0x4001792	      1229	wrstabs.c	FUNCTION_24	CALL_23
0x4001792	      0xb801000000	                              mov eax, 1	      1231	wrstabs.c	FUNCTION_24
0x4001797	      0xe95f010000	                           jmp 0x40018fb	      1231	wrstabs.c	FUNCTION_24
0x400179c	          0x4c89ff	                            mov rdi, r15	      1204	wrstabs.c	FUNCTION_24	CALL_10
0x400179f	      0xe8a2e8ffff	                  call sym.stab_pop_type	      1204	wrstabs.c	FUNCTION_24	CALL_10
0x40017a4	          0x4889c3	                            mov rbx, rax	      1204	wrstabs.c	FUNCTION_24	CALL_10
0x40017a7	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x40017ae	      0xb800000000	                              mov eax, 0	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x40017b3	          0x4889f1	                            mov rcx, rsi	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x40017b6	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x40017bb	            0xf2ae	              repne scasb al, byte [rdi]	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x40017bd	          0x4989c8	                             mov r8, rcx	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x40017c0	          0x4889f1	                            mov rcx, rsi	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x40017c3	          0x4889df	                            mov rdi, rbx	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x40017c6	            0xf2ae	              repne scasb al, byte [rdi]	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x40017c8	          0x4889ca	                            mov rdx, rcx	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x40017cb	          0x48f7d2	                                 not rdx	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x40017ce	          0x4c29c2	                             sub rdx, r8	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x40017d1	          0x498b3e	                    mov rdi, qword [r14]	      1208	wrstabs.c	FUNCTION_24	CALL_13
0x40017d4	          0x4889f1	                            mov rcx, rsi	      1208	wrstabs.c	FUNCTION_24	CALL_13
0x40017d7	            0xf2ae	              repne scasb al, byte [rdi]	      1208	wrstabs.c	FUNCTION_24	CALL_13
0x40017d9	          0x4889c8	                            mov rax, rcx	      1208	wrstabs.c	FUNCTION_24	CALL_13
0x40017dc	          0x48f7d0	                                 not rax	      1208	wrstabs.c	FUNCTION_24	CALL_13
0x40017df	      0x488d740206	                lea rsi, [rdx + rax + 6]	      1208	wrstabs.c	FUNCTION_24	CALL_13
0x40017e4	    0xc74424100100	               mov dword [rsp + 0x10], 1	      1203	wrstabs.c	FUNCTION_24
0x40017ec	    0x41bd01000000	                             mov r13d, 1	      1182	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2
0x40017f2	          0x4889f7	                            mov rdi, rsi	      1210	wrstabs.c	FUNCTION_24	CALL_14
0x40017f5	      0xe800000000	                          call 0x40017fa	      1210	wrstabs.c	FUNCTION_24	CALL_14
0x40017fa	          0x4889c5	                            mov rbp, rax	      1210	wrstabs.c	FUNCTION_24	CALL_14
0x40017fd	          0x4989d9	                             mov r9, rbx	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001800	      0x4c8b642408	                mov r12, qword [rsp + 8]	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001805	          0x4d89e0	                             mov r8, r12	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001808	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x400180d	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001814	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001819	          0x4889c7	                            mov rdi, rax	        33	stdio2.h	FUNCTION_54	CALL_1
0x400181c	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001821	      0xe800000000	                          call 0x4001826	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001826	          0x4c89e7	                            mov rdi, r12	      1213	wrstabs.c	FUNCTION_24	CALL_15
0x4001829	      0xe800000000	                          call 0x400182e	      1213	wrstabs.c	FUNCTION_24	CALL_15
0x400182e	          0x4889df	                            mov rdi, rbx	      1214	wrstabs.c	FUNCTION_24	CALL_16
0x4001831	      0xe800000000	                          call 0x4001836	      1214	wrstabs.c	FUNCTION_24	CALL_16
0x4001836	      0xbb00000000	                              mov ebx, 0	      1214	wrstabs.c	FUNCTION_24	CALL_16
0x400183b	      0xe9c2feffff	                           jmp 0x4001702	      1214	wrstabs.c	FUNCTION_24	CALL_16
0x4001840	          0x4889f7	                            mov rdi, rsi	      1210	wrstabs.c	FUNCTION_24	CALL_14
0x4001843	      0xe800000000	                          call 0x4001848	      1210	wrstabs.c	FUNCTION_24	CALL_14
0x4001848	          0x4889c5	                            mov rbp, rax	      1210	wrstabs.c	FUNCTION_24	CALL_14
0x400184b	          0x4989d9	                             mov r9, rbx	        33	stdio2.h	FUNCTION_54	CALL_1
0x400184e	      0x4c8b6c2408	                mov r13, qword [rsp + 8]	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001853	          0x4d89e8	                             mov r8, r13	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001856	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x400185b	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001862	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001867	          0x4889c7	                            mov rdi, rax	        33	stdio2.h	FUNCTION_54	CALL_1
0x400186a	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x400186f	      0xe800000000	                          call 0x4001874	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001874	          0x4c89ef	                            mov rdi, r13	      1213	wrstabs.c	FUNCTION_24	CALL_15
0x4001877	      0xe800000000	                          call 0x400187c	      1213	wrstabs.c	FUNCTION_24	CALL_15
0x400187c	          0x4889df	                            mov rdi, rbx	      1214	wrstabs.c	FUNCTION_24	CALL_16
0x400187f	      0xe800000000	                          call 0x4001884	      1214	wrstabs.c	FUNCTION_24	CALL_16
0x4001884	      0xe9b7feffff	                           jmp 0x4001740	      1214	wrstabs.c	FUNCTION_24	CALL_16
0x4001889	          0x4c89ff	                            mov rdi, r15	      1181	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2	CALL_5
0x400188c	      0xe8b5e7ffff	                  call sym.stab_pop_type	      1181	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2	CALL_5
0x4001891	          0x498906	                    mov qword [r14], rax	      1181	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2	CALL_5
0x4001894	      0xe903ffffff	                           jmp 0x400179c	      1181	wrstabs.c	FUNCTION_24	ELSE_1	IF_4	ELSE_2	CALL_5
0x4001899	          0x4c89ff	                            mov rdi, r15	      1204	wrstabs.c	FUNCTION_24	CALL_10
0x400189c	      0xe8a5e7ffff	                  call sym.stab_pop_type	      1204	wrstabs.c	FUNCTION_24	CALL_10
0x40018a1	          0x4889c3	                            mov rbx, rax	      1204	wrstabs.c	FUNCTION_24	CALL_10
0x40018a4	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x40018ab	      0xb800000000	                              mov eax, 0	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x40018b0	          0x4889f1	                            mov rcx, rsi	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x40018b3	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x40018b8	            0xf2ae	              repne scasb al, byte [rdi]	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x40018ba	          0x4889ca	                            mov rdx, rcx	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x40018bd	          0x48f7d2	                                 not rdx	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x40018c0	          0x4889f1	                            mov rcx, rsi	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x40018c3	          0x4889df	                            mov rdi, rbx	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x40018c6	            0xf2ae	              repne scasb al, byte [rdi]	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x40018c8	          0x4889c8	                            mov rax, rcx	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x40018cb	          0x48f7d0	                                 not rax	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x40018ce	      0x488d740208	                lea rsi, [rdx + rax + 8]	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x40018d3	    0x41be00000000	                             mov r14d, 0	      1206	wrstabs.c	FUNCTION_24	CALL_12
0x40018d9	    0xc74424100100	               mov dword [rsp + 0x10], 1	      1203	wrstabs.c	FUNCTION_24
0x40018e1	      0xe95affffff	                           jmp 0x4001840	      1203	wrstabs.c	FUNCTION_24
0x40018e6	            0x85ed	                           test ebp, ebp	      1203	wrstabs.c	FUNCTION_24
0x40018e8	            0x75af	                           jne 0x4001899	      1203	wrstabs.c	FUNCTION_24
0x40018ea	    0x41be00000000	                             mov r14d, 0	      1203	wrstabs.c	FUNCTION_24
0x40018f0	    0x41bd00000000	                             mov r13d, 0	      1203	wrstabs.c	FUNCTION_24
0x40018f6	      0xe978fdffff	                           jmp 0x4001673	      1203	wrstabs.c	FUNCTION_24
0x40018fb	        0x4883c428	                           add rsp, 0x28	      1232	wrstabs.c	FUNCTION_24
0x40018ff	              0x5b	                                 pop rbx	      1232	wrstabs.c	FUNCTION_24
0x4001900	              0x5d	                                 pop rbp	      1232	wrstabs.c	FUNCTION_24
0x4001901	            0x415c	                                 pop r12	      1232	wrstabs.c	FUNCTION_24
0x4001903	            0x415d	                                 pop r13	      1232	wrstabs.c	FUNCTION_24
0x4001905	            0x415e	                                 pop r14	      1232	wrstabs.c	FUNCTION_24
0x4001907	            0x415f	                                 pop r15	      1232	wrstabs.c	FUNCTION_24
0x4001909	              0xc3	                                     ret	      1232	wrstabs.c	FUNCTION_24
stab_struct_field	functions,0:IF,3:ELSE,0:SWITCH,1:CALL,11:WHILE,0:DO,0:FOR,0	109
0x40001b8	            0x4157	                                push r15	      1350	wrstabs.c	FUNCTION_29
0x40001ba	            0x4156	                                push r14	      1350	wrstabs.c	FUNCTION_29
0x40001bc	            0x4155	                                push r13	      1350	wrstabs.c	FUNCTION_29
0x40001be	            0x4154	                                push r12	      1350	wrstabs.c	FUNCTION_29
0x40001c0	              0x55	                                push rbp	      1350	wrstabs.c	FUNCTION_29
0x40001c1	              0x53	                                push rbx	      1350	wrstabs.c	FUNCTION_29
0x40001c2	        0x4883ec28	                           sub rsp, 0x28	      1350	wrstabs.c	FUNCTION_29
0x40001c6	          0x4889fb	                            mov rbx, rdi	      1350	wrstabs.c	FUNCTION_29
0x40001c9	      0x4889742408	                mov qword [rsp + 8], rsi	      1350	wrstabs.c	FUNCTION_29
0x40001ce	      0x4889542410	             mov qword [rsp + 0x10], rdx	      1350	wrstabs.c	FUNCTION_29
0x40001d3	          0x4989cc	                            mov r12, rcx	      1350	wrstabs.c	FUNCTION_29
0x40001d6	          0x4489c5	                            mov ebp, r8d	      1350	wrstabs.c	FUNCTION_29
0x40001d9	        0x488b4760	            mov rax, qword [rdi + 0x60] 	      1357	wrstabs.c	FUNCTION_29
0x40001dd	        0x448b781c	           mov r15d, dword [rax + 0x1c] 	      1357	wrstabs.c	FUNCTION_29
0x40001e1	          0x8b4018	            mov eax, dword [rax + 0x18] 	      1358	wrstabs.c	FUNCTION_29
0x40001e4	        0x89442418	             mov dword [rsp + 0x18], eax	      1358	wrstabs.c	FUNCTION_29
0x40001e8	      0xe859feffff	                  call sym.stab_pop_type	      1359	wrstabs.c	FUNCTION_29	CALL_1
0x40001ed	          0x4989c5	                            mov r13, rax	      1359	wrstabs.c	FUNCTION_29	CALL_1
0x40001f0	        0x488b4360	            mov rax, qword [rbx + 0x60] 	      1364	wrstabs.c	FUNCTION_29	CALL_2
0x40001f4	        0x488b7820	            mov rdi, qword [rax + 0x20] 	      1364	wrstabs.c	FUNCTION_29	CALL_2
0x40001f8	          0x4885ff	                           test rdi, rdi	      1364	wrstabs.c	FUNCTION_29	CALL_2
0x40001fb	            0x7519	                           jne 0x4000216	      1364	wrstabs.c	FUNCTION_29	CALL_2
0x40001fd	      0xb900000000	                              mov ecx, 0	      1364	wrstabs.c	FUNCTION_29	CALL_2
0x4000202	      0xba54050000	                          mov edx, 0x554	      1364	wrstabs.c	FUNCTION_29	CALL_2
0x4000207	      0xbe00000000	                              mov esi, 0	      1364	wrstabs.c	FUNCTION_29	CALL_2
0x400020c	      0xbf00000000	                              mov edi, 0	      1364	wrstabs.c	FUNCTION_29	CALL_2
0x4000211	      0xe800000000	                          call 0x4000216	      1364	wrstabs.c	FUNCTION_29	CALL_2
0x4000216	    0x49c7c0ffffff	              mov r8, 0xffffffffffffffff	      1365	wrstabs.c	FUNCTION_29	CALL_4
0x400021d	      0xb800000000	                              mov eax, 0	      1365	wrstabs.c	FUNCTION_29	CALL_4
0x4000222	          0x4c89c1	                             mov rcx, r8	      1365	wrstabs.c	FUNCTION_29	CALL_4
0x4000225	            0xf2ae	              repne scasb al, byte [rdi]	      1365	wrstabs.c	FUNCTION_29	CALL_4
0x4000227	          0x4889ce	                            mov rsi, rcx	      1365	wrstabs.c	FUNCTION_29	CALL_4
0x400022a	          0x4c89c1	                             mov rcx, r8	      1366	wrstabs.c	FUNCTION_29	CALL_5
0x400022d	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1366	wrstabs.c	FUNCTION_29	CALL_5
0x4000232	            0xf2ae	              repne scasb al, byte [rdi]	      1366	wrstabs.c	FUNCTION_29	CALL_5
0x4000234	          0x4889ca	                            mov rdx, rcx	      1366	wrstabs.c	FUNCTION_29	CALL_5
0x4000237	          0x48f7d2	                                 not rdx	      1366	wrstabs.c	FUNCTION_29	CALL_5
0x400023a	          0x4c89c1	                             mov rcx, r8	      1367	wrstabs.c	FUNCTION_29	CALL_6
0x400023d	          0x4c89ef	                            mov rdi, r13	      1367	wrstabs.c	FUNCTION_29	CALL_6
0x4000240	            0xf2ae	              repne scasb al, byte [rdi]	      1367	wrstabs.c	FUNCTION_29	CALL_6
0x4000242	          0x4889c8	                            mov rax, rcx	      1367	wrstabs.c	FUNCTION_29	CALL_6
0x4000245	          0x48f7d0	                                 not rax	      1367	wrstabs.c	FUNCTION_29	CALL_6
0x4000248	          0x4829f2	                            sub rdx, rsi	      1365	wrstabs.c	FUNCTION_29	CALL_4
0x400024b	      0x488d7c022e	            lea rdi, [rdx + rax + 0x2e] 	      1365	wrstabs.c	FUNCTION_29	CALL_4
0x4000250	      0xe800000000	                          call 0x4000255	      1365	wrstabs.c	FUNCTION_29	CALL_4
0x4000255	          0x4989c6	                            mov r14, rax	      1365	wrstabs.c	FUNCTION_29	CALL_4
0x4000258	          0x83fd01	                              cmp ebp, 1	      1370	wrstabs.c	FUNCTION_29	SWITCH_1
0x400025b	            0x7416	                            je 0x4000273	      1370	wrstabs.c	FUNCTION_29	SWITCH_1
0x400025d	          0x83fd01	                              cmp ebp, 1	      1370	wrstabs.c	FUNCTION_29	SWITCH_1
0x4000260	            0x7218	                            jb 0x400027a	      1370	wrstabs.c	FUNCTION_29	SWITCH_1
0x4000262	          0x83fd02	                              cmp ebp, 2	      1370	wrstabs.c	FUNCTION_29	SWITCH_1
0x4000265	            0x7507	                           jne 0x400026e	      1370	wrstabs.c	FUNCTION_29	SWITCH_1
0x4000267	      0xbd00000000	                              mov ebp, 0	      1380	wrstabs.c	FUNCTION_29	SWITCH_1
0x400026c	            0xeb11	                           jmp 0x400027f	      1380	wrstabs.c	FUNCTION_29	SWITCH_1
0x400026e	      0xe800000000	                          call 0x4000273	      1373	wrstabs.c	FUNCTION_29	SWITCH_1	CALL_7
0x4000273	      0xbd00000000	                              mov ebp, 0	      1384	wrstabs.c	FUNCTION_29	SWITCH_1
0x4000278	            0xeb05	                           jmp 0x400027f	      1385	wrstabs.c	FUNCTION_29	SWITCH_1
0x400027a	      0xbd00000000	                              mov ebp, 0	      1376	wrstabs.c	FUNCTION_29	SWITCH_1
0x400027f	          0x4d85e4	                           test r12, r12	      1388	wrstabs.c	FUNCTION_29	IF_1
0x4000282	            0x7547	                           jne 0x40002cb	      1388	wrstabs.c	FUNCTION_29	IF_1
0x4000284	      0x448b642418	           mov r12d, dword [rsp + 0x18] 	      1390	wrstabs.c	FUNCTION_29	IF_1
0x4000289	        0x41c1e403	                             shl r12d, 3	      1390	wrstabs.c	FUNCTION_29	IF_1
0x400028d	          0x4589e4	                          mov r12d, r12d	      1390	wrstabs.c	FUNCTION_29	IF_1
0x4000290	          0x4d85e4	                           test r12, r12	      1391	wrstabs.c	FUNCTION_29	IF_1	IF_2
0x4000293	            0x7536	                           jne 0x40002cb	      1391	wrstabs.c	FUNCTION_29	IF_1	IF_2
0x4000295	          0x488b03	                    mov rax, qword [rbx]	      1393	wrstabs.c	FUNCTION_29	IF_1	CALL_10
0x4000298	          0x488b00	                    mov rax, qword [rax]	      1393	wrstabs.c	FUNCTION_29	IF_1	CALL_10
0x400029b	      0x4889442418	             mov qword [rsp + 0x18], rax	      1393	wrstabs.c	FUNCTION_29	IF_1	CALL_10
0x40002a0	      0xba05000000	                              mov edx, 5	      1392	wrstabs.c	FUNCTION_29	IF_1	IF_2	CALL_9
0x40002a5	      0xbe00000000	                              mov esi, 0	      1392	wrstabs.c	FUNCTION_29	IF_1	IF_2	CALL_9
0x40002aa	      0xbf00000000	                              mov edi, 0	      1392	wrstabs.c	FUNCTION_29	IF_1	IF_2	CALL_9
0x40002af	      0xe800000000	                          call 0x40002b4	      1392	wrstabs.c	FUNCTION_29	IF_1	IF_2	CALL_9
0x40002b4	      0x488b542408	                mov rdx, qword [rsp + 8]	      1392	wrstabs.c	FUNCTION_29	IF_1	IF_2	CALL_9
0x40002b9	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      1392	wrstabs.c	FUNCTION_29	IF_1	IF_2	CALL_9
0x40002be	          0x4889c7	                            mov rdi, rax	      1392	wrstabs.c	FUNCTION_29	IF_1	IF_2	CALL_9
0x40002c1	      0xb800000000	                              mov eax, 0	      1392	wrstabs.c	FUNCTION_29	IF_1	IF_2	CALL_9
0x40002c6	      0xe800000000	                          call 0x40002cb	      1392	wrstabs.c	FUNCTION_29	IF_1	IF_2	CALL_9
0x40002cb	        0x488b4360	            mov rax, qword [rbx + 0x60] 	      1396	wrstabs.c	FUNCTION_29
0x40002cf	            0x4154	                                push r12	        33	stdio2.h	FUNCTION_54	CALL_1
0x40002d1	        0xff742418	                 push qword [rsp + 0x18]	        33	stdio2.h	FUNCTION_54	CALL_1
0x40002d5	            0x4155	                                push r13	        33	stdio2.h	FUNCTION_54	CALL_1
0x40002d7	              0x55	                                push rbp	        33	stdio2.h	FUNCTION_54	CALL_1
0x40002d8	      0x4c8b4c2428	              mov r9, qword [rsp + 0x28]	        33	stdio2.h	FUNCTION_54	CALL_1
0x40002dd	        0x4c8b4020	              mov r8, qword [rax + 0x20]	        33	stdio2.h	FUNCTION_54	CALL_1
0x40002e1	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x40002e6	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_54	CALL_1
0x40002ed	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x40002f2	          0x4c89f7	                            mov rdi, r14	        33	stdio2.h	FUNCTION_54	CALL_1
0x40002f5	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x40002fa	      0xe800000000	                          call 0x40002ff	        33	stdio2.h	FUNCTION_54	CALL_1
0x40002ff	        0x4883c420	                           add rsp, 0x20	      1399	wrstabs.c	FUNCTION_29	CALL_11
0x4000303	        0x488b4360	            mov rax, qword [rbx + 0x60] 	      1399	wrstabs.c	FUNCTION_29	CALL_11
0x4000307	        0x488b7820	            mov rdi, qword [rax + 0x20] 	      1399	wrstabs.c	FUNCTION_29	CALL_11
0x400030b	      0xe800000000	                          call 0x4000310	      1399	wrstabs.c	FUNCTION_29	CALL_11
0x4000310	        0x488b4360	            mov rax, qword [rbx + 0x60] 	      1400	wrstabs.c	FUNCTION_29
0x4000314	        0x4c897020	             mov qword [rax + 0x20], r14	      1400	wrstabs.c	FUNCTION_29
0x4000318	          0x4585ff	                         test r15d, r15d	      1402	wrstabs.c	FUNCTION_29	IF_3
0x400031b	            0x740b	                            je 0x4000328	      1402	wrstabs.c	FUNCTION_29	IF_3
0x400031d	        0x488b4360	            mov rax, qword [rbx + 0x60] 	      1403	wrstabs.c	FUNCTION_29	IF_3
0x4000321	    0xc7401c010000	               mov dword [rax + 0x1c], 1	      1403	wrstabs.c	FUNCTION_29	IF_3
0x4000328	      0xb801000000	                              mov eax, 1	      1406	wrstabs.c	FUNCTION_29
0x400032d	        0x4883c428	                           add rsp, 0x28	      1406	wrstabs.c	FUNCTION_29
0x4000331	              0x5b	                                 pop rbx	      1406	wrstabs.c	FUNCTION_29
0x4000332	              0x5d	                                 pop rbp	      1406	wrstabs.c	FUNCTION_29
0x4000333	            0x415c	                                 pop r12	      1406	wrstabs.c	FUNCTION_29
0x4000335	            0x415d	                                 pop r13	      1406	wrstabs.c	FUNCTION_29
0x4000337	            0x415e	                                 pop r14	      1406	wrstabs.c	FUNCTION_29
0x4000339	            0x415f	                                 pop r15	      1406	wrstabs.c	FUNCTION_29
0x400033b	              0xc3	                                     ret	      1406	wrstabs.c	FUNCTION_29
stab_array_type	functions,0:IF,3:ELSE,2:SWITCH,0:CALL,10:WHILE,0:DO,0:FOR,0	106
0x4000d93	            0x4157	                                push r15	      1017	wrstabs.c	FUNCTION_21
0x4000d95	            0x4156	                                push r14	      1017	wrstabs.c	FUNCTION_21
0x4000d97	            0x4155	                                push r13	      1017	wrstabs.c	FUNCTION_21
0x4000d99	            0x4154	                                push r12	      1017	wrstabs.c	FUNCTION_21
0x4000d9b	              0x55	                                push rbp	      1017	wrstabs.c	FUNCTION_21
0x4000d9c	              0x53	                                push rbx	      1017	wrstabs.c	FUNCTION_21
0x4000d9d	        0x4883ec18	                           sub rsp, 0x18	      1017	wrstabs.c	FUNCTION_21
0x4000da1	          0x4889fb	                            mov rbx, rdi	      1017	wrstabs.c	FUNCTION_21
0x4000da4	        0x48893424	                    mov qword [rsp], rsi	      1017	wrstabs.c	FUNCTION_21
0x4000da8	          0x4989d4	                            mov r12, rdx	      1017	wrstabs.c	FUNCTION_21
0x4000dab	          0x4189cf	                           mov r15d, ecx	      1017	wrstabs.c	FUNCTION_21
0x4000dae	        0x488b4760	            mov rax, qword [rdi + 0x60] 	      1025	wrstabs.c	FUNCTION_21
0x4000db2	          0x8b681c	            mov ebp, dword [rax + 0x1c] 	      1025	wrstabs.c	FUNCTION_21
0x4000db5	      0xe88cf2ffff	                  call sym.stab_pop_type	      1026	wrstabs.c	FUNCTION_21	CALL_1
0x4000dba	          0x4989c6	                            mov r14, rax	      1026	wrstabs.c	FUNCTION_21	CALL_1
0x4000dbd	    0xc74424080100	                  mov dword [rsp + 8], 1	      1028	wrstabs.c	FUNCTION_21
0x4000dc5	            0x85ed	                           test ebp, ebp	      1028	wrstabs.c	FUNCTION_21
0x4000dc7	            0x7512	                           jne 0x4000ddb	      1028	wrstabs.c	FUNCTION_21
0x4000dc9	        0x488b4360	            mov rax, qword [rbx + 0x60] 	      1028	wrstabs.c	FUNCTION_21
0x4000dcd	        0x83781c00	               cmp dword [rax + 0x1c], 0	      1028	wrstabs.c	FUNCTION_21
0x4000dd1	           0xf95c0	                                setne al	      1028	wrstabs.c	FUNCTION_21
0x4000dd4	           0xfb6c0	                           movzx eax, al	      1028	wrstabs.c	FUNCTION_21
0x4000dd7	        0x89442408	                mov dword [rsp + 8], eax	      1028	wrstabs.c	FUNCTION_21
0x4000ddb	        0x488b4360	            mov rax, qword [rbx + 0x60] 	      1029	wrstabs.c	FUNCTION_21
0x4000ddf	          0x8b4018	            mov eax, dword [rax + 0x18] 	      1029	wrstabs.c	FUNCTION_21
0x4000de2	        0x8944240c	              mov dword [rsp + 0xc], eax	      1029	wrstabs.c	FUNCTION_21
0x4000de6	          0x4889df	                            mov rdi, rbx	      1030	wrstabs.c	FUNCTION_21	CALL_2
0x4000de9	      0xe858f2ffff	                  call sym.stab_pop_type	      1030	wrstabs.c	FUNCTION_21	CALL_2
0x4000dee	          0x4989c5	                            mov r13, rax	      1030	wrstabs.c	FUNCTION_21	CALL_2
0x4000df1	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	      1032	wrstabs.c	FUNCTION_21	CALL_5
0x4000df8	      0xb800000000	                              mov eax, 0	      1032	wrstabs.c	FUNCTION_21	CALL_5
0x4000dfd	          0x4889f1	                            mov rcx, rsi	      1032	wrstabs.c	FUNCTION_21	CALL_5
0x4000e00	          0x4c89f7	                            mov rdi, r14	      1032	wrstabs.c	FUNCTION_21	CALL_5
0x4000e03	            0xf2ae	              repne scasb al, byte [rdi]	      1032	wrstabs.c	FUNCTION_21	CALL_5
0x4000e05	          0x4889ca	                            mov rdx, rcx	      1032	wrstabs.c	FUNCTION_21	CALL_5
0x4000e08	          0x48f7d2	                                 not rdx	      1032	wrstabs.c	FUNCTION_21	CALL_5
0x4000e0b	          0x4889f1	                            mov rcx, rsi	      1032	wrstabs.c	FUNCTION_21	CALL_5
0x4000e0e	          0x4c89ef	                            mov rdi, r13	      1032	wrstabs.c	FUNCTION_21	CALL_5
0x4000e11	            0xf2ae	              repne scasb al, byte [rdi]	      1032	wrstabs.c	FUNCTION_21	CALL_5
0x4000e13	          0x4889c8	                            mov rax, rcx	      1032	wrstabs.c	FUNCTION_21	CALL_5
0x4000e16	          0x48f7d0	                                 not rax	      1032	wrstabs.c	FUNCTION_21	CALL_5
0x4000e19	      0x488d7c0262	            lea rdi, [rdx + rax + 0x62] 	      1032	wrstabs.c	FUNCTION_21	CALL_5
0x4000e1e	      0xe800000000	                          call 0x4000e23	      1032	wrstabs.c	FUNCTION_21	CALL_5
0x4000e23	          0x4889c5	                            mov rbp, rax	      1032	wrstabs.c	FUNCTION_21	CALL_5
0x4000e26	          0x4585ff	                         test r15d, r15d	      1034	wrstabs.c	FUNCTION_21	IF_1
0x4000e29	            0x750b	                           jne 0x4000e36	      1034	wrstabs.c	FUNCTION_21	IF_1
0x4000e2b	          0xc60000	                       mov byte [rax], 0	      1037	wrstabs.c	FUNCTION_21	IF_1
0x4000e2e	    0x41bf00000000	                             mov r15d, 0	      1036	wrstabs.c	FUNCTION_21	IF_1
0x4000e34	            0xeb35	                           jmp 0x4000e6b	      1036	wrstabs.c	FUNCTION_21	IF_1
0x4000e36	        0x4c8b7b68	            mov r15, qword [rbx + 0x68] 	      1043	wrstabs.c	FUNCTION_21	ELSE_1
0x4000e3a	        0x498d4701	                      lea rax, [r15 + 1]	      1044	wrstabs.c	FUNCTION_21	ELSE_1
0x4000e3e	        0x48894368	             mov qword [rbx + 0x68], rax	      1044	wrstabs.c	FUNCTION_21	ELSE_1
0x4000e42	          0x4d89f8	                             mov r8, r15	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000e45	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000e4a	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000e51	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000e56	          0x4889ef	                            mov rdi, rbp	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000e59	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000e5e	      0xe800000000	                          call 0x4000e63	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000e63	    0xc74424080100	                  mov dword [rsp + 8], 1	      1045	wrstabs.c	FUNCTION_21	ELSE_1
0x4000e6b	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	      1049	wrstabs.c	FUNCTION_21	CALL_6
0x4000e72	      0xb800000000	                              mov eax, 0	      1049	wrstabs.c	FUNCTION_21	CALL_6
0x4000e77	          0x4889d1	                            mov rcx, rdx	      1049	wrstabs.c	FUNCTION_21	CALL_6
0x4000e7a	          0x4889ef	                            mov rdi, rbp	      1049	wrstabs.c	FUNCTION_21	CALL_6
0x4000e7d	            0xf2ae	              repne scasb al, byte [rdi]	      1049	wrstabs.c	FUNCTION_21	CALL_6
0x4000e7f	          0x4889c8	                            mov rax, rcx	      1049	wrstabs.c	FUNCTION_21	CALL_6
0x4000e82	          0x48f7d0	                                 not rax	      1049	wrstabs.c	FUNCTION_21	CALL_6
0x4000e85	      0x488d7c05ff	                lea rdi, [rbp + rax - 1]	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000e8a	            0x4155	                                push r13	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000e8c	            0x4154	                                push r12	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000e8e	      0x4c8b4c2410	              mov r9, qword [rsp + 0x10]	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000e93	          0x4d89f0	                             mov r8, r14	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000e96	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000e9b	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000ea0	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000ea5	      0xe800000000	                          call 0x4000eaa	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000eaa	          0x4c89f7	                            mov rdi, r14	      1051	wrstabs.c	FUNCTION_21	CALL_7
0x4000ead	      0xe800000000	                          call 0x4000eb2	      1051	wrstabs.c	FUNCTION_21	CALL_7
0x4000eb2	          0x4c89ef	                            mov rdi, r13	      1052	wrstabs.c	FUNCTION_21	CALL_8
0x4000eb5	      0xe800000000	                          call 0x4000eba	      1052	wrstabs.c	FUNCTION_21	CALL_8
0x4000eba	        0x4883c410	                           add rsp, 0x10	      1054	wrstabs.c	FUNCTION_21	IF_2
0x4000ebe	    0x41b800000000	                              mov r8d, 0	      1055	wrstabs.c	FUNCTION_21	IF_2
0x4000ec4	        0x488b0424	                    mov rax, qword [rsp]	      1054	wrstabs.c	FUNCTION_21	IF_2
0x4000ec8	          0x4c39e0	                            cmp rax, r12	      1054	wrstabs.c	FUNCTION_21	IF_2
0x4000ecb	            0x7f0e	                            jg 0x4000edb	      1054	wrstabs.c	FUNCTION_21	IF_2
0x4000ecd	          0x4929c4	                            sub r12, rax	      1057	wrstabs.c	FUNCTION_21	ELSE_2
0x4000ed0	      0x4d8d442401	                       lea r8, [r12 + 1]	      1057	wrstabs.c	FUNCTION_21	ELSE_2
0x4000ed5	    0x440faf44240c	             imul r8d, dword [rsp + 0xc]	      1057	wrstabs.c	FUNCTION_21	ELSE_2
0x4000edb	        0x8b4c2408	                mov ecx, dword [rsp + 8]	      1058	wrstabs.c	FUNCTION_21	IF_3	CALL_9
0x4000edf	          0x4c89fa	                            mov rdx, r15	      1058	wrstabs.c	FUNCTION_21	IF_3	CALL_9
0x4000ee2	          0x4889ee	                            mov rsi, rbp	      1058	wrstabs.c	FUNCTION_21	IF_3	CALL_9
0x4000ee5	          0x4889df	                            mov rdi, rbx	      1058	wrstabs.c	FUNCTION_21	IF_3	CALL_9
0x4000ee8	      0xe86afaffff	               call sym.stab_push_string	      1058	wrstabs.c	FUNCTION_21	IF_3	CALL_9
0x4000eed	            0x85c0	                           test eax, eax	      1058	wrstabs.c	FUNCTION_21	IF_3	CALL_9
0x4000eef	            0x740d	                            je 0x4000efe	      1058	wrstabs.c	FUNCTION_21	IF_3	CALL_9
0x4000ef1	          0x4889ef	                            mov rdi, rbp	      1061	wrstabs.c	FUNCTION_21	CALL_10
0x4000ef4	      0xe800000000	                          call 0x4000ef9	      1061	wrstabs.c	FUNCTION_21	CALL_10
0x4000ef9	      0xb801000000	                              mov eax, 1	      1063	wrstabs.c	FUNCTION_21
0x4000efe	        0x4883c418	                           add rsp, 0x18	      1064	wrstabs.c	FUNCTION_21
0x4000f02	              0x5b	                                 pop rbx	      1064	wrstabs.c	FUNCTION_21
0x4000f03	              0x5d	                                 pop rbp	      1064	wrstabs.c	FUNCTION_21
0x4000f04	            0x415c	                                 pop r12	      1064	wrstabs.c	FUNCTION_21
0x4000f06	            0x415d	                                 pop r13	      1064	wrstabs.c	FUNCTION_21
0x4000f08	            0x415e	                                 pop r14	      1064	wrstabs.c	FUNCTION_21
0x4000f0a	            0x415f	                                 pop r15	      1064	wrstabs.c	FUNCTION_21
0x4000f0c	              0xc3	                                     ret	      1064	wrstabs.c	FUNCTION_21
stab_start_source	functions,0:IF,0:ELSE,0:SWITCH,0:CALL,1:WHILE,0:DO,0:FOR,0	9
0x4002b6e	        0x4883ec08	                              sub rsp, 8	       562	wrstabs.c	FUNCTION_8
0x4002b72	          0x4989f0	                             mov r8, rsi	       562	wrstabs.c	FUNCTION_8
0x4002b75	    0x4889b7100200	            mov qword [rdi + 0x210], rsi	       569	wrstabs.c	FUNCTION_8
0x4002b7c	      0xb900000000	                              mov ecx, 0	       571	wrstabs.c	FUNCTION_8	CALL_1
0x4002b81	      0xba00000000	                              mov edx, 0	       571	wrstabs.c	FUNCTION_8	CALL_1
0x4002b86	      0xbe84000000	                           mov esi, 0x84	       571	wrstabs.c	FUNCTION_8	CALL_1
0x4002b8b	      0xe899f4ffff	              call sym.stab_write_symbol	       571	wrstabs.c	FUNCTION_8	CALL_1
0x4002b90	        0x4883c408	                              add rsp, 8	       572	wrstabs.c	FUNCTION_8
0x4002b94	              0xc3	                                     ret	       572	wrstabs.c	FUNCTION_8
stab_end_block	functions,0:IF,4:ELSE,0:SWITCH,0:CALL,3:WHILE,0:DO,0:FOR,0	43
0x400224e	              0x55	                                push rbp	      2215	wrstabs.c	FUNCTION_51
0x400224f	              0x53	                                push rbx	      2215	wrstabs.c	FUNCTION_51
0x4002250	        0x4883ec08	                              sub rsp, 8	      2215	wrstabs.c	FUNCTION_51
0x4002254	          0x4889fb	                            mov rbx, rdi	      2215	wrstabs.c	FUNCTION_51
0x4002257	          0x4889f5	                            mov rbp, rsi	      2215	wrstabs.c	FUNCTION_51
0x400225a	    0x4839b7f00100	           cmp qword [rdi + 0x1f0], rsi 	      2218	wrstabs.c	FUNCTION_51	IF_1
0x4002261	            0x7307	                           jae 0x400226a	      2218	wrstabs.c	FUNCTION_51	IF_1
0x4002263	    0x4889b3f00100	            mov qword [rbx + 0x1f0], rsi	      2219	wrstabs.c	FUNCTION_51	IF_1
0x400226a	    0x488b8b080200	           mov rcx, qword [rbx + 0x208] 	      2222	wrstabs.c	FUNCTION_51	IF_2
0x4002271	        0x4883f9ff	             cmp rcx, 0xffffffffffffffff	      2222	wrstabs.c	FUNCTION_51	IF_2
0x4002275	            0x7427	                            je 0x400229e	      2222	wrstabs.c	FUNCTION_51	IF_2
0x4002277	    0x41b800000000	                              mov r8d, 0	      2224	wrstabs.c	FUNCTION_51	IF_2	IF_3	CALL_1
0x400227d	      0xba00000000	                              mov edx, 0	      2224	wrstabs.c	FUNCTION_51	IF_2	IF_3	CALL_1
0x4002282	      0xbec0000000	                           mov esi, 0xc0	      2224	wrstabs.c	FUNCTION_51	IF_2	IF_3	CALL_1
0x4002287	          0x4889df	                            mov rdi, rbx	      2224	wrstabs.c	FUNCTION_51	IF_2	IF_3	CALL_1
0x400228a	      0xe89afdffff	              call sym.stab_write_symbol	      2224	wrstabs.c	FUNCTION_51	IF_2	IF_3	CALL_1
0x400228f	            0x85c0	                           test eax, eax	      2224	wrstabs.c	FUNCTION_51	IF_2	IF_3	CALL_1
0x4002291	            0x7462	                            je 0x40022f5	      2224	wrstabs.c	FUNCTION_51	IF_2	IF_3	CALL_1
0x4002293	    0x48c783080200	mov qword [rbx + 0x208], 0xffffffffffffffff	      2227	wrstabs.c	FUNCTION_51	IF_2
0x400229e	    0x8b83f8010000	           mov eax, dword [rbx + 0x1f8] 	      2230	wrstabs.c	FUNCTION_51	CALL_2
0x40022a4	            0x85c0	                           test eax, eax	      2230	wrstabs.c	FUNCTION_51	CALL_2
0x40022a6	            0x7519	                           jne 0x40022c1	      2230	wrstabs.c	FUNCTION_51	CALL_2
0x40022a8	      0xb900000000	                              mov ecx, 0	      2230	wrstabs.c	FUNCTION_51	CALL_2
0x40022ad	      0xbab6080000	                          mov edx, 0x8b6	      2230	wrstabs.c	FUNCTION_51	CALL_2
0x40022b2	      0xbe00000000	                              mov esi, 0	      2230	wrstabs.c	FUNCTION_51	CALL_2
0x40022b7	      0xbf00000000	                              mov edi, 0	      2230	wrstabs.c	FUNCTION_51	CALL_2
0x40022bc	      0xe800000000	                          call 0x40022c1	      2230	wrstabs.c	FUNCTION_51	CALL_2
0x40022c1	          0x8d50ff	                      lea edx, [rax - 1]	      2232	wrstabs.c	FUNCTION_51
0x40022c4	    0x8993f8010000	            mov dword [rbx + 0x1f8], edx	      2232	wrstabs.c	FUNCTION_51
0x40022ca	      0xb801000000	                              mov eax, 1	      2236	wrstabs.c	FUNCTION_51	IF_4
0x40022cf	            0x85d2	                           test edx, edx	      2235	wrstabs.c	FUNCTION_51	IF_4
0x40022d1	            0x7422	                            je 0x40022f5	      2235	wrstabs.c	FUNCTION_51	IF_4
0x40022d3	          0x4889e9	                            mov rcx, rbp	      2238	wrstabs.c	FUNCTION_51	CALL_3
0x40022d6	    0x482b8b000200	            sub rcx, qword [rbx + 0x200]	      2238	wrstabs.c	FUNCTION_51	CALL_3
0x40022dd	    0x41b800000000	                              mov r8d, 0	      2238	wrstabs.c	FUNCTION_51	CALL_3
0x40022e3	      0xba00000000	                              mov edx, 0	      2238	wrstabs.c	FUNCTION_51	CALL_3
0x40022e8	      0xbee0000000	                           mov esi, 0xe0	      2238	wrstabs.c	FUNCTION_51	CALL_3
0x40022ed	          0x4889df	                            mov rdi, rbx	      2238	wrstabs.c	FUNCTION_51	CALL_3
0x40022f0	      0xe834fdffff	              call sym.stab_write_symbol	      2238	wrstabs.c	FUNCTION_51	CALL_3
0x40022f5	        0x4883c408	                              add rsp, 8	      2240	wrstabs.c	FUNCTION_51
0x40022f9	              0x5b	                                 pop rbx	      2240	wrstabs.c	FUNCTION_51
0x40022fa	              0x5d	                                 pop rbp	      2240	wrstabs.c	FUNCTION_51
0x40022fb	              0xc3	                                     ret	      2240	wrstabs.c	FUNCTION_51
string_hash_newfunc	functions,0:IF,3:ELSE,0:SWITCH,0:CALL,2:WHILE,0:DO,0:FOR,0	26
0x400190a	              0x55	                                push rbp	       303	wrstabs.c	FUNCTION_1
0x400190b	              0x53	                                push rbx	       303	wrstabs.c	FUNCTION_1
0x400190c	        0x4883ec08	                              sub rsp, 8	       303	wrstabs.c	FUNCTION_1
0x4001910	          0x4889f3	                            mov rbx, rsi	       303	wrstabs.c	FUNCTION_1
0x4001913	          0x4889d5	                            mov rbp, rdx	       303	wrstabs.c	FUNCTION_1
0x4001916	          0x4885ff	                           test rdi, rdi	       308	wrstabs.c	FUNCTION_1	IF_1
0x4001919	            0x751a	                           jne 0x4001935	       308	wrstabs.c	FUNCTION_1	IF_1
0x400191b	      0xbe30000000	                           mov esi, 0x30	       309	wrstabs.c	FUNCTION_1	IF_1
0x4001920	          0x4889df	                            mov rdi, rbx	       309	wrstabs.c	FUNCTION_1	IF_1
0x4001923	      0xe800000000	                          call 0x4001928	       309	wrstabs.c	FUNCTION_1	IF_1
0x4001928	          0x4889c7	                            mov rdi, rax	       309	wrstabs.c	FUNCTION_1	IF_1
0x400192b	      0xb800000000	                              mov eax, 0	       312	wrstabs.c	FUNCTION_1	IF_2
0x4001930	          0x4885ff	                           test rdi, rdi	       311	wrstabs.c	FUNCTION_1	IF_2
0x4001933	            0x7427	                            je 0x400195c	       311	wrstabs.c	FUNCTION_1	IF_2
0x4001935	          0x4889ea	                            mov rdx, rbp	       315	wrstabs.c	FUNCTION_1
0x4001938	          0x4889de	                            mov rsi, rbx	       315	wrstabs.c	FUNCTION_1
0x400193b	      0xe800000000	                          call 0x4001940	       315	wrstabs.c	FUNCTION_1
0x4001940	          0x4885c0	                           test rax, rax	       318	wrstabs.c	FUNCTION_1	IF_3
0x4001943	            0x7417	                            je 0x400195c	       318	wrstabs.c	FUNCTION_1	IF_3
0x4001945	    0x48c740180000	               mov qword [rax + 0x18], 0	       321	wrstabs.c	FUNCTION_1	IF_3
0x400194d	    0x48c74020ffff	mov qword [rax + 0x20], 0xffffffffffffffff	       322	wrstabs.c	FUNCTION_1	IF_3
0x4001955	    0xc74028000000	               mov dword [rax + 0x28], 0	       323	wrstabs.c	FUNCTION_1	IF_3
0x400195c	        0x4883c408	                              add rsp, 8	       327	wrstabs.c	FUNCTION_1
0x4001960	              0x5b	                                 pop rbx	       327	wrstabs.c	FUNCTION_1
0x4001961	              0x5d	                                 pop rbp	       327	wrstabs.c	FUNCTION_1
0x4001962	              0xc3	                                     ret	       327	wrstabs.c	FUNCTION_1
stab_empty_type	functions,0:IF,1:ELSE,1:SWITCH,0:CALL,2:WHILE,0:DO,0:FOR,0	38
0x40010ec	              0x55	                                push rbp	       579	wrstabs.c	FUNCTION_9
0x40010ed	              0x53	                                push rbx	       579	wrstabs.c	FUNCTION_9
0x40010ee	        0x4883ec38	                           sub rsp, 0x38	       579	wrstabs.c	FUNCTION_9
0x40010f2	          0x4889fb	                            mov rbx, rdi	       579	wrstabs.c	FUNCTION_9
0x40010f5	    0x64488b042528	                mov rax, qword fs:[0x28]	       579	wrstabs.c	FUNCTION_9
0x40010fe	      0x4889442428	             mov qword [rsp + 0x28], rax	       579	wrstabs.c	FUNCTION_9
0x4001103	            0x31c0	                            xor eax, eax	       579	wrstabs.c	FUNCTION_9
0x4001105	        0x488b7770	            mov rsi, qword [rdi + 0x70] 	       585	wrstabs.c	FUNCTION_9	IF_1
0x4001109	          0x4885f6	                           test rsi, rsi	       585	wrstabs.c	FUNCTION_9	IF_1
0x400110c	            0x740c	                            je 0x400111a	       585	wrstabs.c	FUNCTION_9	IF_1
0x400110e	      0xba00000000	                              mov edx, 0	       586	wrstabs.c	FUNCTION_9	CALL_1
0x4001113	      0xe8c0f8ffff	         call sym.stab_push_defined_type	       586	wrstabs.c	FUNCTION_9	CALL_1
0x4001118	            0xeb47	                           jmp 0x4001161	       586	wrstabs.c	FUNCTION_9	CALL_1
0x400111a	        0x488b6f68	            mov rbp, qword [rdi + 0x68] 	       592	wrstabs.c	FUNCTION_9	ELSE_1
0x400111e	        0x488d4501	                      lea rax, [rbp + 1]	       593	wrstabs.c	FUNCTION_9	ELSE_1
0x4001122	        0x48894768	             mov qword [rdi + 0x68], rax	       593	wrstabs.c	FUNCTION_9	ELSE_1
0x4001126	          0x4989e9	                             mov r9, rbp	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001129	          0x4989e8	                             mov r8, rbp	        33	stdio2.h	FUNCTION_54	CALL_1
0x400112c	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001131	      0xba28000000	                           mov edx, 0x28	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001136	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x400113b	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_54	CALL_1
0x400113e	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001143	      0xe800000000	                          call 0x4001148	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001148	    0x41b800000000	                              mov r8d, 0	       597	wrstabs.c	FUNCTION_9	ELSE_1	CALL_2
0x400114e	      0xb900000000	                              mov ecx, 0	       597	wrstabs.c	FUNCTION_9	ELSE_1	CALL_2
0x4001153	          0x4889ea	                            mov rdx, rbp	       597	wrstabs.c	FUNCTION_9	ELSE_1	CALL_2
0x4001156	          0x4889e6	                            mov rsi, rsp	       597	wrstabs.c	FUNCTION_9	ELSE_1	CALL_2
0x4001159	          0x4889df	                            mov rdi, rbx	       597	wrstabs.c	FUNCTION_9	ELSE_1	CALL_2
0x400115c	      0xe8f6f7ffff	               call sym.stab_push_string	       597	wrstabs.c	FUNCTION_9	ELSE_1	CALL_2
0x4001161	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       599	wrstabs.c	FUNCTION_9
0x4001166	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       599	wrstabs.c	FUNCTION_9
0x400116f	            0x7405	                            je 0x4001176	       599	wrstabs.c	FUNCTION_9
0x4001171	      0xe800000000	                          call 0x4001176	       599	wrstabs.c	FUNCTION_9
0x4001176	        0x4883c438	                           add rsp, 0x38	       599	wrstabs.c	FUNCTION_9
0x400117a	              0x5b	                                 pop rbx	       599	wrstabs.c	FUNCTION_9
0x400117b	              0x5d	                                 pop rbp	       599	wrstabs.c	FUNCTION_9
0x400117c	              0xc3	                                     ret	       599	wrstabs.c	FUNCTION_9
stab_get_struct_index	functions,0:IF,4:ELSE,1:SWITCH,0:CALL,2:WHILE,1:DO,0:FOR,0	74
0x4001963	            0x4157	                                push r15	      1263	wrstabs.c	FUNCTION_27
0x4001965	            0x4156	                                push r14	      1263	wrstabs.c	FUNCTION_27
0x4001967	            0x4155	                                push r13	      1263	wrstabs.c	FUNCTION_27
0x4001969	            0x4154	                                push r12	      1263	wrstabs.c	FUNCTION_27
0x400196b	              0x55	                                push rbp	      1263	wrstabs.c	FUNCTION_27
0x400196c	              0x53	                                push rbx	      1263	wrstabs.c	FUNCTION_27
0x400196d	        0x4883ec08	                              sub rsp, 8	      1263	wrstabs.c	FUNCTION_27
0x4001971	          0x4989fc	                            mov r12, rdi	      1263	wrstabs.c	FUNCTION_27
0x4001974	          0x4989f7	                            mov r15, rsi	      1263	wrstabs.c	FUNCTION_27
0x4001977	          0x4189cd	                           mov r13d, ecx	      1263	wrstabs.c	FUNCTION_27
0x400197a	          0x4d89c6	                             mov r14, r8	      1263	wrstabs.c	FUNCTION_27
0x400197d	            0x89d5	                            mov ebp, edx	      1264	wrstabs.c	FUNCTION_27	IF_1
0x400197f	    0x488b9fb00100	           mov rbx, qword [rdi + 0x1b0] 	      1264	wrstabs.c	FUNCTION_27	IF_1
0x4001986	          0x4839dd	                            cmp rbp, rbx	      1264	wrstabs.c	FUNCTION_27	IF_1
0x4001989	            0x726c	                            jb 0x40019f7	      1264	wrstabs.c	FUNCTION_27	IF_1
0x400198b	          0x4885db	                           test rbx, rbx	      1269	wrstabs.c	FUNCTION_27	IF_1	IF_2
0x400198e	            0x750b	                           jne 0x400199b	      1269	wrstabs.c	FUNCTION_27	IF_1	IF_2
0x4001990	        0x4883fd09	                              cmp rbp, 9	      1271	wrstabs.c	FUNCTION_27	IF_1	WHILE_1
0x4001994	            0x760f	                           jbe 0x40019a5	      1271	wrstabs.c	FUNCTION_27	IF_1	WHILE_1
0x4001996	      0xbb0a000000	                            mov ebx, 0xa	      1270	wrstabs.c	FUNCTION_27	IF_1	IF_2
0x400199b	          0x4801db	                            add rbx, rbx	      1272	wrstabs.c	FUNCTION_27	IF_1	WHILE_1
0x400199e	          0x4839dd	                            cmp rbp, rbx	      1271	wrstabs.c	FUNCTION_27	IF_1	WHILE_1
0x40019a1	            0x73f8	                           jae 0x400199b	      1271	wrstabs.c	FUNCTION_27	IF_1	WHILE_1
0x40019a3	            0xeb05	                           jmp 0x40019aa	      1271	wrstabs.c	FUNCTION_27	IF_1	WHILE_1
0x40019a5	      0xbb0a000000	                            mov ebx, 0xa	      1270	wrstabs.c	FUNCTION_27	IF_1	IF_2
0x40019aa	        0x488d345b	                  lea rsi, [rbx + rbx*2]	      1274	wrstabs.c	FUNCTION_27	IF_1	CALL_1
0x40019ae	        0x48c1e603	                              shl rsi, 3	      1274	wrstabs.c	FUNCTION_27	IF_1	CALL_1
0x40019b2	    0x498bbc24a801	           mov rdi, qword [r12 + 0x1a8] 	      1274	wrstabs.c	FUNCTION_27	IF_1	CALL_1
0x40019ba	      0xe800000000	                          call 0x40019bf	      1274	wrstabs.c	FUNCTION_27	IF_1	CALL_1
0x40019bf	    0x49898424a801	            mov qword [r12 + 0x1a8], rax	      1273	wrstabs.c	FUNCTION_27	IF_1
0x40019c7	    0x498b8c24b001	           mov rcx, qword [r12 + 0x1b0] 	      1279	wrstabs.c	FUNCTION_27	IF_1
0x40019cf	          0x4889da	                            mov rdx, rbx	        90	string3.h	FUNCTION_74	CALL_6
0x40019d2	          0x4829ca	                            sub rdx, rcx	        90	string3.h	FUNCTION_74	CALL_6
0x40019d5	        0x488d1452	                  lea rdx, [rdx + rdx*2]	        90	string3.h	FUNCTION_74	CALL_6
0x40019d9	        0x48c1e203	                              shl rdx, 3	        90	string3.h	FUNCTION_74	CALL_6
0x40019dd	        0x488d0c49	                  lea rcx, [rcx + rcx*2]	        90	string3.h	FUNCTION_74	CALL_6
0x40019e1	        0x488d3cc8	                  lea rdi, [rax + rcx*8]	        90	string3.h	FUNCTION_74	CALL_6
0x40019e5	      0xbe00000000	                              mov esi, 0	        90	string3.h	FUNCTION_74	CALL_6
0x40019ea	      0xe800000000	                          call 0x40019ef	        90	string3.h	FUNCTION_74	CALL_6
0x40019ef	    0x49899c24b001	            mov qword [r12 + 0x1b0], rbx	      1281	wrstabs.c	FUNCTION_27	IF_1
0x40019f7	      0x488d446d00	                  lea rax, [rbp + rbp*2]	      1284	wrstabs.c	FUNCTION_27	IF_3
0x40019fc	        0x48c1e003	                              shl rax, 3	      1284	wrstabs.c	FUNCTION_27	IF_3
0x4001a00	          0x4889c2	                            mov rdx, rax	      1284	wrstabs.c	FUNCTION_27	IF_3
0x4001a03	    0x49039424a801	            add rdx, qword [r12 + 0x1a8]	      1284	wrstabs.c	FUNCTION_27	IF_3
0x4001a0b	        0x48833a00	                      cmp qword [rdx], 0	      1284	wrstabs.c	FUNCTION_27	IF_3
0x4001a0f	            0x7528	                           jne 0x4001a39	      1284	wrstabs.c	FUNCTION_27	IF_3
0x4001a11	      0x498b4c2468	            mov rcx, qword [r12 + 0x68] 	      1286	wrstabs.c	FUNCTION_27	IF_3
0x4001a16	          0x48890a	                    mov qword [rdx], rcx	      1286	wrstabs.c	FUNCTION_27	IF_3
0x4001a19	    0x498344246801	               add qword [r12 + 0x68], 1	      1287	wrstabs.c	FUNCTION_27	IF_3
0x4001a1f	    0x498b9424a801	           mov rdx, qword [r12 + 0x1a8] 	      1288	wrstabs.c	FUNCTION_27	IF_3
0x4001a27	      0x4c897c0208	          mov qword [rdx + rax + 8], r15	      1288	wrstabs.c	FUNCTION_27	IF_3
0x4001a2c	    0x498b9424a801	           mov rdx, qword [r12 + 0x1a8] 	      1289	wrstabs.c	FUNCTION_27	IF_3
0x4001a34	      0x44896c0210	      mov dword [rdx + rax + 0x10], r13d	      1289	wrstabs.c	FUNCTION_27	IF_3
0x4001a39	          0x4585ed	                         test r13d, r13d	      1292	wrstabs.c	FUNCTION_27	IF_4
0x4001a3c	            0x7521	                           jne 0x4001a5f	      1292	wrstabs.c	FUNCTION_27	IF_4
0x4001a3e	    0x498b9424a801	           mov rdx, qword [r12 + 0x1a8] 	      1295	wrstabs.c	FUNCTION_27	IF_4
0x4001a46	    0xc74402100000	         mov dword [rdx + rax + 0x10], 0	      1295	wrstabs.c	FUNCTION_27	IF_4
0x4001a4e	          0x418b0e	                    mov ecx, dword [r14]	      1296	wrstabs.c	FUNCTION_27	IF_4
0x4001a51	    0x498b9424a801	           mov rdx, qword [r12 + 0x1a8] 	      1296	wrstabs.c	FUNCTION_27	IF_4
0x4001a59	        0x894c0214	       mov dword [rdx + rax + 0x14], ecx	      1296	wrstabs.c	FUNCTION_27	IF_4
0x4001a5d	            0xeb0f	                           jmp 0x4001a6e	      1296	wrstabs.c	FUNCTION_27	IF_4
0x4001a5f	    0x498b9424a801	           mov rdx, qword [r12 + 0x1a8] 	      1299	wrstabs.c	FUNCTION_27	ELSE_1
0x4001a67	        0x8b540214	      mov edx, dword [rdx + rax + 0x14] 	      1299	wrstabs.c	FUNCTION_27	ELSE_1
0x4001a6b	          0x418916	                    mov dword [r14], edx	      1299	wrstabs.c	FUNCTION_27	ELSE_1
0x4001a6e	    0x498b9424a801	           mov rdx, qword [r12 + 0x1a8] 	      1301	wrstabs.c	FUNCTION_27	ELSE_1
0x4001a76	        0x488b0402	              mov rax, qword [rdx + rax]	      1301	wrstabs.c	FUNCTION_27	ELSE_1
0x4001a7a	        0x4883c408	                              add rsp, 8	      1302	wrstabs.c	FUNCTION_27	ELSE_1
0x4001a7e	              0x5b	                                 pop rbx	      1302	wrstabs.c	FUNCTION_27	ELSE_1
0x4001a7f	              0x5d	                                 pop rbp	      1302	wrstabs.c	FUNCTION_27	ELSE_1
0x4001a80	            0x415c	                                 pop r12	      1302	wrstabs.c	FUNCTION_27	ELSE_1
0x4001a82	            0x415d	                                 pop r13	      1302	wrstabs.c	FUNCTION_27	ELSE_1
0x4001a84	            0x415e	                                 pop r14	      1302	wrstabs.c	FUNCTION_27	ELSE_1
0x4001a86	            0x415f	                                 pop r15	      1302	wrstabs.c	FUNCTION_27	ELSE_1
0x4001a88	              0xc3	                                     ret	      1302	wrstabs.c	FUNCTION_27	ELSE_1
stab_typdef	functions,0:IF,3:ELSE,1:SWITCH,0:CALL,11:WHILE,0:DO,0:FOR,0	98
0x4002a0b	            0x4157	                                push r15	      1882	wrstabs.c	FUNCTION_42
0x4002a0d	            0x4156	                                push r14	      1882	wrstabs.c	FUNCTION_42
0x4002a0f	            0x4155	                                push r13	      1882	wrstabs.c	FUNCTION_42
0x4002a11	            0x4154	                                push r12	      1882	wrstabs.c	FUNCTION_42
0x4002a13	              0x55	                                push rbp	      1882	wrstabs.c	FUNCTION_42
0x4002a14	              0x53	                                push rbx	      1882	wrstabs.c	FUNCTION_42
0x4002a15	        0x4883ec08	                              sub rsp, 8	      1882	wrstabs.c	FUNCTION_42
0x4002a19	          0x4889fb	                            mov rbx, rdi	      1882	wrstabs.c	FUNCTION_42
0x4002a1c	          0x4989f4	                            mov r12, rsi	      1882	wrstabs.c	FUNCTION_42
0x4002a1f	        0x488b4760	            mov rax, qword [rdi + 0x60] 	      1889	wrstabs.c	FUNCTION_42
0x4002a23	        0x4c8b6810	            mov r13, qword [rax + 0x10] 	      1889	wrstabs.c	FUNCTION_42
0x4002a27	        0x448b7018	           mov r14d, dword [rax + 0x18] 	      1890	wrstabs.c	FUNCTION_42
0x4002a2b	      0xe816d6ffff	                  call sym.stab_pop_type	      1891	wrstabs.c	FUNCTION_42	CALL_1
0x4002a30	          0x4889c5	                            mov rbp, rax	      1891	wrstabs.c	FUNCTION_42	CALL_1
0x4002a33	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	      1893	wrstabs.c	FUNCTION_42	CALL_4
0x4002a3a	      0xb800000000	                              mov eax, 0	      1893	wrstabs.c	FUNCTION_42	CALL_4
0x4002a3f	          0x4889f1	                            mov rcx, rsi	      1893	wrstabs.c	FUNCTION_42	CALL_4
0x4002a42	          0x4c89e7	                            mov rdi, r12	      1893	wrstabs.c	FUNCTION_42	CALL_4
0x4002a45	            0xf2ae	              repne scasb al, byte [rdi]	      1893	wrstabs.c	FUNCTION_42	CALL_4
0x4002a47	          0x4889ca	                            mov rdx, rcx	      1893	wrstabs.c	FUNCTION_42	CALL_4
0x4002a4a	          0x48f7d2	                                 not rdx	      1893	wrstabs.c	FUNCTION_42	CALL_4
0x4002a4d	          0x4889f1	                            mov rcx, rsi	      1893	wrstabs.c	FUNCTION_42	CALL_4
0x4002a50	          0x4889ef	                            mov rdi, rbp	      1893	wrstabs.c	FUNCTION_42	CALL_4
0x4002a53	            0xf2ae	              repne scasb al, byte [rdi]	      1893	wrstabs.c	FUNCTION_42	CALL_4
0x4002a55	          0x4889c8	                            mov rax, rcx	      1893	wrstabs.c	FUNCTION_42	CALL_4
0x4002a58	          0x48f7d0	                                 not rax	      1893	wrstabs.c	FUNCTION_42	CALL_4
0x4002a5b	      0x488d7c0212	            lea rdi, [rdx + rax + 0x12] 	      1893	wrstabs.c	FUNCTION_42	CALL_4
0x4002a60	      0xe800000000	                          call 0x4002a65	      1893	wrstabs.c	FUNCTION_42	CALL_4
0x4002a65	          0x4989c7	                            mov r15, rax	      1893	wrstabs.c	FUNCTION_42	CALL_4
0x4002a68	          0x4d85ed	                           test r13, r13	      1895	wrstabs.c	FUNCTION_42	IF_1
0x4002a6b	            0x7e26	                           jle 0x4002a93	      1895	wrstabs.c	FUNCTION_42	IF_1
0x4002a6d	          0x4989e9	                             mov r9, rbp	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002a70	          0x4d89e0	                             mov r8, r12	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002a73	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002a78	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002a7f	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002a84	          0x4889c7	                            mov rdi, rax	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002a87	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002a8c	      0xe800000000	                          call 0x4002a91	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002a91	            0xeb39	                           jmp 0x4002acc	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002a93	        0x4c8b6b68	            mov r13, qword [rbx + 0x68] 	      1899	wrstabs.c	FUNCTION_42	ELSE_1
0x4002a97	        0x498d4501	                      lea rax, [r13 + 1]	      1900	wrstabs.c	FUNCTION_42	ELSE_1
0x4002a9b	        0x48894368	             mov qword [rbx + 0x68], rax	      1900	wrstabs.c	FUNCTION_42	ELSE_1
0x4002a9f	        0x4883ec08	                              sub rsp, 8	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002aa3	              0x55	                                push rbp	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002aa4	          0x4d89e9	                             mov r9, r13	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002aa7	          0x4d89e0	                             mov r8, r12	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002aaa	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002aaf	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002ab6	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002abb	          0x4c89ff	                            mov rdi, r15	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002abe	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002ac3	      0xe800000000	                          call 0x4002ac8	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002ac8	        0x4883c410	                           add rsp, 0x10	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002acc	          0x4889ef	                            mov rdi, rbp	      1904	wrstabs.c	FUNCTION_42	CALL_5
0x4002acf	      0xe800000000	                          call 0x4002ad4	      1904	wrstabs.c	FUNCTION_42	CALL_5
0x4002ad4	          0x4d89f8	                             mov r8, r15	      1906	wrstabs.c	FUNCTION_42	IF_2	CALL_6
0x4002ad7	      0xb900000000	                              mov ecx, 0	      1906	wrstabs.c	FUNCTION_42	IF_2	CALL_6
0x4002adc	      0xba00000000	                              mov edx, 0	      1906	wrstabs.c	FUNCTION_42	IF_2	CALL_6
0x4002ae1	      0xbe80000000	                           mov esi, 0x80	      1906	wrstabs.c	FUNCTION_42	IF_2	CALL_6
0x4002ae6	          0x4889df	                            mov rdi, rbx	      1906	wrstabs.c	FUNCTION_42	IF_2	CALL_6
0x4002ae9	      0xe83bf5ffff	              call sym.stab_write_symbol	      1906	wrstabs.c	FUNCTION_42	IF_2	CALL_6
0x4002aee	            0x85c0	                           test eax, eax	      1906	wrstabs.c	FUNCTION_42	IF_2	CALL_6
0x4002af0	            0x746d	                            je 0x4002b5f	      1906	wrstabs.c	FUNCTION_42	IF_2	CALL_6
0x4002af2	          0x4c89ff	                            mov rdi, r15	      1909	wrstabs.c	FUNCTION_42	CALL_7
0x4002af5	      0xe800000000	                          call 0x4002afa	      1909	wrstabs.c	FUNCTION_42	CALL_7
0x4002afa	    0x488dbbb80100	                  lea rdi, [rbx + 0x1b8]	      1911	wrstabs.c	FUNCTION_42
0x4002b01	      0xb900000000	                              mov ecx, 0	      1911	wrstabs.c	FUNCTION_42
0x4002b06	      0xba01000000	                              mov edx, 1	      1911	wrstabs.c	FUNCTION_42
0x4002b0b	          0x4c89e6	                            mov rsi, r12	      1911	wrstabs.c	FUNCTION_42
0x4002b0e	      0xe800000000	                          call 0x4002b13	      1911	wrstabs.c	FUNCTION_42
0x4002b13	          0x4885c0	                           test rax, rax	      1912	wrstabs.c	FUNCTION_42	IF_3
0x4002b16	            0x753a	                           jne 0x4002b52	      1912	wrstabs.c	FUNCTION_42	IF_3
0x4002b18	      0xe800000000	                          call 0x4002b1d	      1914	wrstabs.c	FUNCTION_42	IF_3	CALL_9
0x4002b1d	            0x89c7	                            mov edi, eax	      1914	wrstabs.c	FUNCTION_42	IF_3	CALL_9
0x4002b1f	      0xe800000000	                          call 0x4002b24	      1914	wrstabs.c	FUNCTION_42	IF_3	CALL_9
0x4002b24	          0x4889c3	                            mov rbx, rax	      1914	wrstabs.c	FUNCTION_42	IF_3	CALL_9
0x4002b27	      0xba05000000	                              mov edx, 5	      1914	wrstabs.c	FUNCTION_42	IF_3	CALL_9
0x4002b2c	      0xbe00000000	                              mov esi, 0	      1914	wrstabs.c	FUNCTION_42	IF_3	CALL_9
0x4002b31	      0xbf00000000	                              mov edi, 0	      1914	wrstabs.c	FUNCTION_42	IF_3	CALL_9
0x4002b36	      0xe800000000	                          call 0x4002b3b	      1914	wrstabs.c	FUNCTION_42	IF_3	CALL_9
0x4002b3b	          0x4889de	                            mov rsi, rbx	      1914	wrstabs.c	FUNCTION_42	IF_3	CALL_9
0x4002b3e	          0x4889c7	                            mov rdi, rax	      1914	wrstabs.c	FUNCTION_42	IF_3	CALL_9
0x4002b41	      0xb800000000	                              mov eax, 0	      1914	wrstabs.c	FUNCTION_42	IF_3	CALL_9
0x4002b46	      0xe800000000	                          call 0x4002b4b	      1914	wrstabs.c	FUNCTION_42	IF_3	CALL_9
0x4002b4b	      0xb800000000	                              mov eax, 0	      1916	wrstabs.c	FUNCTION_42	IF_3
0x4002b50	            0xeb0d	                           jmp 0x4002b5f	      1916	wrstabs.c	FUNCTION_42	IF_3
0x4002b52	        0x4c896820	             mov qword [rax + 0x20], r13	      1921	wrstabs.c	FUNCTION_42
0x4002b56	        0x44897028	            mov dword [rax + 0x28], r14d	      1922	wrstabs.c	FUNCTION_42
0x4002b5a	      0xb801000000	                              mov eax, 1	      1924	wrstabs.c	FUNCTION_42
0x4002b5f	        0x4883c408	                              add rsp, 8	      1925	wrstabs.c	FUNCTION_42
0x4002b63	              0x5b	                                 pop rbx	      1925	wrstabs.c	FUNCTION_42
0x4002b64	              0x5d	                                 pop rbp	      1925	wrstabs.c	FUNCTION_42
0x4002b65	            0x415c	                                 pop r12	      1925	wrstabs.c	FUNCTION_42
0x4002b67	            0x415d	                                 pop r13	      1925	wrstabs.c	FUNCTION_42
0x4002b69	            0x415e	                                 pop r14	      1925	wrstabs.c	FUNCTION_42
0x4002b6b	            0x415f	                                 pop r15	      1925	wrstabs.c	FUNCTION_42
0x4002b6d	              0xc3	                                     ret	      1925	wrstabs.c	FUNCTION_42
stab_start_class_type	functions,0:IF,5:ELSE,2:SWITCH,0:CALL,7:WHILE,0:DO,0:FOR,0	92
0x4001c09	            0x4157	                                push r15	      1444	wrstabs.c	FUNCTION_31
0x4001c0b	            0x4156	                                push r14	      1444	wrstabs.c	FUNCTION_31
0x4001c0d	            0x4155	                                push r13	      1444	wrstabs.c	FUNCTION_31
0x4001c0f	            0x4154	                                push r12	      1444	wrstabs.c	FUNCTION_31
0x4001c11	              0x55	                                push rbp	      1444	wrstabs.c	FUNCTION_31
0x4001c12	              0x53	                                push rbx	      1444	wrstabs.c	FUNCTION_31
0x4001c13	        0x4883ec18	                           sub rsp, 0x18	      1444	wrstabs.c	FUNCTION_31
0x4001c17	          0x4889fb	                            mov rbx, rdi	      1444	wrstabs.c	FUNCTION_31
0x4001c1a	          0x4989f4	                            mov r12, rsi	      1444	wrstabs.c	FUNCTION_31
0x4001c1d	        0x89542404	                mov dword [rsp + 4], edx	      1444	wrstabs.c	FUNCTION_31
0x4001c21	          0x4189ce	                           mov r14d, ecx	      1444	wrstabs.c	FUNCTION_31
0x4001c24	          0x4589c7	                           mov r15d, r8d	      1444	wrstabs.c	FUNCTION_31
0x4001c27	          0x4489cd	                            mov ebp, r9d	      1444	wrstabs.c	FUNCTION_31
0x4001c2a	          0x4585c9	                           test r9d, r9d	      1449	wrstabs.c	FUNCTION_31	IF_1
0x4001c2d	            0x741b	                            je 0x4001c4a	      1449	wrstabs.c	FUNCTION_31	IF_1
0x4001c2f	      0x837c245000	               cmp dword [rsp + 0x50], 0	      1449	wrstabs.c	FUNCTION_31	IF_1
0x4001c34	            0x7514	                           jne 0x4001c4a	      1449	wrstabs.c	FUNCTION_31	IF_1
0x4001c36	        0x488b4760	            mov rax, qword [rdi + 0x60] 	      1456	wrstabs.c	FUNCTION_31	ELSE_1
0x4001c3a	        0x448b681c	           mov r13d, dword [rax + 0x1c] 	      1456	wrstabs.c	FUNCTION_31	ELSE_1
0x4001c3e	      0xe803e4ffff	                  call sym.stab_pop_type	      1457	wrstabs.c	FUNCTION_31	ELSE_1	CALL_1
0x4001c43	      0x4889442408	                mov qword [rsp + 8], rax	      1457	wrstabs.c	FUNCTION_31	ELSE_1	CALL_1
0x4001c48	            0xeb0f	                           jmp 0x4001c59	      1457	wrstabs.c	FUNCTION_31	ELSE_1	CALL_1
0x4001c4a	    0x48c744240800	                  mov qword [rsp + 8], 0	      1452	wrstabs.c	FUNCTION_31	IF_1
0x4001c53	    0x41bd00000000	                             mov r13d, 0	      1451	wrstabs.c	FUNCTION_31	IF_1
0x4001c59	          0x4589f8	                           mov r8d, r15d	      1460	wrstabs.c	FUNCTION_31	IF_2	CALL_2
0x4001c5c	          0x4489f1	                           mov ecx, r14d	      1460	wrstabs.c	FUNCTION_31	IF_2	CALL_2
0x4001c5f	        0x8b542404	                mov edx, dword [rsp + 4]	      1460	wrstabs.c	FUNCTION_31	IF_2	CALL_2
0x4001c63	          0x4c89e6	                            mov rsi, r12	      1460	wrstabs.c	FUNCTION_31	IF_2	CALL_2
0x4001c66	          0x4889df	                            mov rdi, rbx	      1460	wrstabs.c	FUNCTION_31	IF_2	CALL_2
0x4001c69	      0xe879feffff	         call sym.stab_start_struct_type	      1460	wrstabs.c	FUNCTION_31	IF_2	CALL_2
0x4001c6e	            0x85c0	                           test eax, eax	      1460	wrstabs.c	FUNCTION_31	IF_2	CALL_2
0x4001c70	     0xf84dc000000	                            je 0x4001d52	      1460	wrstabs.c	FUNCTION_31	IF_2	CALL_2
0x4001c76	            0x85ed	                           test ebp, ebp	      1463	wrstabs.c	FUNCTION_31	IF_3
0x4001c78	     0xf84ba000000	                            je 0x4001d38	      1463	wrstabs.c	FUNCTION_31	IF_3
0x4001c7e	      0x837c245000	               cmp dword [rsp + 0x50], 0	      1467	wrstabs.c	FUNCTION_31	IF_3	IF_4
0x4001c83	            0x7459	                            je 0x4001cde	      1467	wrstabs.c	FUNCTION_31	IF_3	IF_4
0x4001c85	        0x488b4360	            mov rax, qword [rbx + 0x60] 	      1469	wrstabs.c	FUNCTION_31	IF_3	IF_4	CALL_3
0x4001c89	      0x4883781000	               cmp qword [rax + 0x10], 0	      1469	wrstabs.c	FUNCTION_31	IF_3	IF_4	CALL_3
0x4001c8e	            0x7f19	                            jg 0x4001ca9	      1469	wrstabs.c	FUNCTION_31	IF_3	IF_4	CALL_3
0x4001c90	      0xb900000000	                              mov ecx, 0	      1469	wrstabs.c	FUNCTION_31	IF_3	IF_4	CALL_3
0x4001c95	      0xbabd050000	                          mov edx, 0x5bd	      1469	wrstabs.c	FUNCTION_31	IF_3	IF_4	CALL_3
0x4001c9a	      0xbe00000000	                              mov esi, 0	      1469	wrstabs.c	FUNCTION_31	IF_3	IF_4	CALL_3
0x4001c9f	      0xbf00000000	                              mov edi, 0	      1469	wrstabs.c	FUNCTION_31	IF_3	IF_4	CALL_3
0x4001ca4	      0xe800000000	                          call 0x4001ca9	      1469	wrstabs.c	FUNCTION_31	IF_3	IF_4	CALL_3
0x4001ca9	      0xbf14000000	                           mov edi, 0x14	      1470	wrstabs.c	FUNCTION_31	IF_3	IF_4	CALL_4
0x4001cae	      0xe800000000	                          call 0x4001cb3	      1470	wrstabs.c	FUNCTION_31	IF_3	IF_4	CALL_4
0x4001cb3	          0x4889c5	                            mov rbp, rax	      1470	wrstabs.c	FUNCTION_31	IF_3	IF_4	CALL_4
0x4001cb6	        0x488b4360	            mov rax, qword [rbx + 0x60] 	      1471	wrstabs.c	FUNCTION_31	IF_3	IF_4
0x4001cba	        0x4c8b4010	              mov r8, qword [rax + 0x10]	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001cbe	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001cc3	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001cca	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001ccf	          0x4889ef	                            mov rdi, rbp	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001cd2	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001cd7	      0xe800000000	                          call 0x4001cdc	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001cdc	            0xeb52	                           jmp 0x4001d30	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001cde	    0x49c7c4ffffff	             mov r12, 0xffffffffffffffff	      1475	wrstabs.c	FUNCTION_31	IF_3	ELSE_2	CALL_6
0x4001ce5	      0xb800000000	                              mov eax, 0	      1475	wrstabs.c	FUNCTION_31	IF_3	ELSE_2	CALL_6
0x4001cea	          0x4c89e1	                            mov rcx, r12	      1475	wrstabs.c	FUNCTION_31	IF_3	ELSE_2	CALL_6
0x4001ced	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1475	wrstabs.c	FUNCTION_31	IF_3	ELSE_2	CALL_6
0x4001cf2	            0xf2ae	              repne scasb al, byte [rdi]	      1475	wrstabs.c	FUNCTION_31	IF_3	ELSE_2	CALL_6
0x4001cf4	          0x4889c8	                            mov rax, rcx	      1475	wrstabs.c	FUNCTION_31	IF_3	ELSE_2	CALL_6
0x4001cf7	          0x48f7d0	                                 not rax	      1475	wrstabs.c	FUNCTION_31	IF_3	ELSE_2	CALL_6
0x4001cfa	        0x488d7802	                      lea rdi, [rax + 2]	      1475	wrstabs.c	FUNCTION_31	IF_3	ELSE_2	CALL_6
0x4001cfe	      0xe800000000	                          call 0x4001d03	      1475	wrstabs.c	FUNCTION_31	IF_3	ELSE_2	CALL_6
0x4001d03	          0x4889c5	                            mov rbp, rax	      1475	wrstabs.c	FUNCTION_31	IF_3	ELSE_2	CALL_6
0x4001d06	      0x4c8b742408	                mov r14, qword [rsp + 8]	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001d0b	          0x4d89f0	                             mov r8, r14	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001d0e	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001d13	          0x4c89e2	                            mov rdx, r12	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001d16	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001d1b	          0x4889c7	                            mov rdi, rax	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001d1e	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001d23	      0xe800000000	                          call 0x4001d28	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001d28	          0x4c89f7	                            mov rdi, r14	      1477	wrstabs.c	FUNCTION_31	IF_3	ELSE_2	CALL_7
0x4001d2b	      0xe800000000	                          call 0x4001d30	      1477	wrstabs.c	FUNCTION_31	IF_3	ELSE_2	CALL_7
0x4001d30	        0x488b4360	            mov rax, qword [rbx + 0x60] 	      1480	wrstabs.c	FUNCTION_31	IF_3
0x4001d34	        0x48896838	             mov qword [rax + 0x38], rbp	      1480	wrstabs.c	FUNCTION_31	IF_3
0x4001d38	      0xb801000000	                              mov eax, 1	      1486	wrstabs.c	FUNCTION_31
0x4001d3d	          0x4585ed	                         test r13d, r13d	      1483	wrstabs.c	FUNCTION_31	IF_5
0x4001d40	            0x7410	                            je 0x4001d52	      1483	wrstabs.c	FUNCTION_31	IF_5
0x4001d42	        0x488b4360	            mov rax, qword [rbx + 0x60] 	      1484	wrstabs.c	FUNCTION_31	IF_5
0x4001d46	    0xc7401c010000	               mov dword [rax + 0x1c], 1	      1484	wrstabs.c	FUNCTION_31	IF_5
0x4001d4d	      0xb801000000	                              mov eax, 1	      1486	wrstabs.c	FUNCTION_31
0x4001d52	        0x4883c418	                           add rsp, 0x18	      1487	wrstabs.c	FUNCTION_31
0x4001d56	              0x5b	                                 pop rbx	      1487	wrstabs.c	FUNCTION_31
0x4001d57	              0x5d	                                 pop rbp	      1487	wrstabs.c	FUNCTION_31
0x4001d58	            0x415c	                                 pop r12	      1487	wrstabs.c	FUNCTION_31
0x4001d5a	            0x415d	                                 pop r13	      1487	wrstabs.c	FUNCTION_31
0x4001d5c	            0x415e	                                 pop r14	      1487	wrstabs.c	FUNCTION_31
0x4001d5e	            0x415f	                                 pop r15	      1487	wrstabs.c	FUNCTION_31
0x4001d60	              0xc3	                                     ret	      1487	wrstabs.c	FUNCTION_31
stab_volatile_type	functions,0:IF,0:ELSE,0:SWITCH,0:CALL,1:WHILE,0:DO,0:FOR,0	9
0x4001f93	        0x4883ec08	                              sub rsp, 8	      1249	wrstabs.c	FUNCTION_26
0x4001f97	        0x488b4760	            mov rax, qword [rdi + 0x60] 	      1252	wrstabs.c	FUNCTION_26	CALL_1
0x4001f9b	          0x8b5018	            mov edx, dword [rax + 0x18] 	      1252	wrstabs.c	FUNCTION_26	CALL_1
0x4001f9e	    0x41b800000000	                              mov r8d, 0	      1252	wrstabs.c	FUNCTION_26	CALL_1
0x4001fa4	      0xb900000000	                              mov ecx, 0	      1252	wrstabs.c	FUNCTION_26	CALL_1
0x4001fa9	      0xbe42000000	                           mov esi, 0x42	      1252	wrstabs.c	FUNCTION_26	CALL_1
0x4001fae	      0xe8aefdffff	               call sym.stab_modify_type	      1252	wrstabs.c	FUNCTION_26	CALL_1
0x4001fb3	        0x4883c408	                              add rsp, 8	      1254	wrstabs.c	FUNCTION_26
0x4001fb7	              0xc3	                                     ret	      1254	wrstabs.c	FUNCTION_26
stab_push_string	functions,0:IF,0:ELSE,0:SWITCH,0:CALL,2:WHILE,0:DO,0:FOR,0	37
0x4000957	            0x4157	                                push r15	       398	wrstabs.c	FUNCTION_3
0x4000959	            0x4156	                                push r14	       398	wrstabs.c	FUNCTION_3
0x400095b	            0x4155	                                push r13	       398	wrstabs.c	FUNCTION_3
0x400095d	            0x4154	                                push r12	       398	wrstabs.c	FUNCTION_3
0x400095f	              0x55	                                push rbp	       398	wrstabs.c	FUNCTION_3
0x4000960	              0x53	                                push rbx	       398	wrstabs.c	FUNCTION_3
0x4000961	        0x4883ec08	                              sub rsp, 8	       398	wrstabs.c	FUNCTION_3
0x4000965	          0x4889fd	                            mov rbp, rdi	       398	wrstabs.c	FUNCTION_3
0x4000968	          0x4989f7	                            mov r15, rsi	       398	wrstabs.c	FUNCTION_3
0x400096b	          0x4989d6	                            mov r14, rdx	       398	wrstabs.c	FUNCTION_3
0x400096e	          0x4189cd	                           mov r13d, ecx	       398	wrstabs.c	FUNCTION_3
0x4000971	          0x4589c4	                           mov r12d, r8d	       398	wrstabs.c	FUNCTION_3
0x4000974	      0xbf40000000	                           mov edi, 0x40	       401	wrstabs.c	FUNCTION_3	CALL_1
0x4000979	      0xe800000000	                          call 0x400097e	       401	wrstabs.c	FUNCTION_3	CALL_1
0x400097e	          0x4889c3	                            mov rbx, rax	       401	wrstabs.c	FUNCTION_3	CALL_1
0x4000981	          0x4c89ff	                            mov rdi, r15	       402	wrstabs.c	FUNCTION_3	CALL_2
0x4000984	      0xe800000000	                          call 0x4000989	       402	wrstabs.c	FUNCTION_3	CALL_2
0x4000989	        0x48894308	                mov qword [rbx + 8], rax	       402	wrstabs.c	FUNCTION_3	CALL_2
0x400098d	        0x4c897310	             mov qword [rbx + 0x10], r14	       403	wrstabs.c	FUNCTION_3
0x4000991	        0x44896b1c	            mov dword [rbx + 0x1c], r13d	       404	wrstabs.c	FUNCTION_3
0x4000995	        0x44896318	            mov dword [rbx + 0x18], r12d	       405	wrstabs.c	FUNCTION_3
0x4000999	    0x48c743200000	               mov qword [rbx + 0x20], 0	       407	wrstabs.c	FUNCTION_3
0x40009a1	    0x48c743280000	               mov qword [rbx + 0x28], 0	       408	wrstabs.c	FUNCTION_3
0x40009a9	    0x48c743300000	               mov qword [rbx + 0x30], 0	       409	wrstabs.c	FUNCTION_3
0x40009b1	    0x48c743380000	               mov qword [rbx + 0x38], 0	       410	wrstabs.c	FUNCTION_3
0x40009b9	        0x488b4560	            mov rax, qword [rbp + 0x60] 	       412	wrstabs.c	FUNCTION_3
0x40009bd	          0x488903	                    mov qword [rbx], rax	       412	wrstabs.c	FUNCTION_3
0x40009c0	        0x48895d60	            mov qword [rbp + 0x60], rbx 	       413	wrstabs.c	FUNCTION_3
0x40009c4	      0xb801000000	                              mov eax, 1	       416	wrstabs.c	FUNCTION_3
0x40009c9	        0x4883c408	                              add rsp, 8	       416	wrstabs.c	FUNCTION_3
0x40009cd	              0x5b	                                 pop rbx	       416	wrstabs.c	FUNCTION_3
0x40009ce	              0x5d	                                 pop rbp	       416	wrstabs.c	FUNCTION_3
0x40009cf	            0x415c	                                 pop r12	       416	wrstabs.c	FUNCTION_3
0x40009d1	            0x415d	                                 pop r13	       416	wrstabs.c	FUNCTION_3
0x40009d3	            0x415e	                                 pop r14	       416	wrstabs.c	FUNCTION_3
0x40009d5	            0x415f	                                 pop r15	       416	wrstabs.c	FUNCTION_3
0x40009d7	              0xc3	                                     ret	       416	wrstabs.c	FUNCTION_3
stab_end_struct_type	functions,0:IF,1:ELSE,0:SWITCH,0:CALL,9:WHILE,0:DO,0:FOR,0	72
0x4000acd	            0x4157	                                push r15	      1412	wrstabs.c	FUNCTION_30
0x4000acf	            0x4156	                                push r14	      1412	wrstabs.c	FUNCTION_30
0x4000ad1	            0x4155	                                push r13	      1412	wrstabs.c	FUNCTION_30
0x4000ad3	            0x4154	                                push r12	      1412	wrstabs.c	FUNCTION_30
0x4000ad5	              0x55	                                push rbp	      1412	wrstabs.c	FUNCTION_30
0x4000ad6	              0x53	                                push rbx	      1412	wrstabs.c	FUNCTION_30
0x4000ad7	        0x4883ec18	                           sub rsp, 0x18	      1412	wrstabs.c	FUNCTION_30
0x4000adb	        0x488b4760	            mov rax, qword [rdi + 0x60] 	      1419	wrstabs.c	FUNCTION_30	CALL_1
0x4000adf	          0x4885c0	                           test rax, rax	      1419	wrstabs.c	FUNCTION_30	CALL_1
0x4000ae2	            0x740c	                            je 0x4000af0	      1419	wrstabs.c	FUNCTION_30	CALL_1
0x4000ae4	          0x4889fd	                            mov rbp, rdi	      1419	wrstabs.c	FUNCTION_30	CALL_1
0x4000ae7	        0x488b5820	            mov rbx, qword [rax + 0x20] 	      1419	wrstabs.c	FUNCTION_30	CALL_1
0x4000aeb	          0x4885db	                           test rbx, rbx	      1419	wrstabs.c	FUNCTION_30	CALL_1
0x4000aee	            0x7519	                           jne 0x4000b09	      1419	wrstabs.c	FUNCTION_30	CALL_1
0x4000af0	      0xb900000000	                              mov ecx, 0	      1419	wrstabs.c	FUNCTION_30	CALL_1
0x4000af5	      0xba8b050000	                          mov edx, 0x58b	      1419	wrstabs.c	FUNCTION_30	CALL_1
0x4000afa	      0xbe00000000	                              mov esi, 0	      1419	wrstabs.c	FUNCTION_30	CALL_1
0x4000aff	      0xbf00000000	                              mov edi, 0	      1419	wrstabs.c	FUNCTION_30	CALL_1
0x4000b04	      0xe800000000	                          call 0x4000b09	      1419	wrstabs.c	FUNCTION_30	CALL_1
0x4000b09	          0x8b501c	            mov edx, dword [rax + 0x1c] 	      1421	wrstabs.c	FUNCTION_30
0x4000b0c	        0x89542404	                mov dword [rsp + 4], edx	      1421	wrstabs.c	FUNCTION_30
0x4000b10	        0x488b7010	            mov rsi, qword [rax + 0x10] 	      1422	wrstabs.c	FUNCTION_30
0x4000b14	      0x4889742408	                mov qword [rsp + 8], rsi	      1422	wrstabs.c	FUNCTION_30
0x4000b19	        0x448b7818	           mov r15d, dword [rax + 0x18] 	      1423	wrstabs.c	FUNCTION_30
0x4000b1d	      0xe824f5ffff	                  call sym.stab_pop_type	      1425	wrstabs.c	FUNCTION_30	CALL_2
0x4000b22	          0x4989c4	                            mov r12, rax	      1425	wrstabs.c	FUNCTION_30	CALL_2
0x4000b25	    0x49c7c5ffffff	             mov r13, 0xffffffffffffffff	      1427	wrstabs.c	FUNCTION_30	CALL_5
0x4000b2c	      0xb800000000	                              mov eax, 0	      1427	wrstabs.c	FUNCTION_30	CALL_5
0x4000b31	          0x4c89e9	                            mov rcx, r13	      1427	wrstabs.c	FUNCTION_30	CALL_5
0x4000b34	          0x4c89e7	                            mov rdi, r12	      1427	wrstabs.c	FUNCTION_30	CALL_5
0x4000b37	            0xf2ae	              repne scasb al, byte [rdi]	      1427	wrstabs.c	FUNCTION_30	CALL_5
0x4000b39	          0x4889ce	                            mov rsi, rcx	      1427	wrstabs.c	FUNCTION_30	CALL_5
0x4000b3c	          0x48f7d6	                                 not rsi	      1427	wrstabs.c	FUNCTION_30	CALL_5
0x4000b3f	          0x4c89e9	                            mov rcx, r13	      1427	wrstabs.c	FUNCTION_30	CALL_5
0x4000b42	          0x4889df	                            mov rdi, rbx	      1427	wrstabs.c	FUNCTION_30	CALL_5
0x4000b45	            0xf2ae	              repne scasb al, byte [rdi]	      1427	wrstabs.c	FUNCTION_30	CALL_5
0x4000b47	          0x4889c8	                            mov rax, rcx	      1427	wrstabs.c	FUNCTION_30	CALL_5
0x4000b4a	          0x48f7d0	                                 not rax	      1427	wrstabs.c	FUNCTION_30	CALL_5
0x4000b4d	        0x488d3c06	                    lea rdi, [rsi + rax]	      1427	wrstabs.c	FUNCTION_30	CALL_5
0x4000b51	      0xe800000000	                          call 0x4000b56	      1427	wrstabs.c	FUNCTION_30	CALL_5
0x4000b56	          0x4989c6	                            mov r14, rax	      1427	wrstabs.c	FUNCTION_30	CALL_5
0x4000b59	          0x4989d9	                             mov r9, rbx	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000b5c	          0x4d89e0	                             mov r8, r12	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000b5f	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000b64	          0x4c89ea	                            mov rdx, r13	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000b67	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000b6c	          0x4889c7	                            mov rdi, rax	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000b6f	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000b74	      0xe800000000	                          call 0x4000b79	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000b79	          0x4c89e7	                            mov rdi, r12	      1429	wrstabs.c	FUNCTION_30	CALL_6
0x4000b7c	      0xe800000000	                          call 0x4000b81	      1429	wrstabs.c	FUNCTION_30	CALL_6
0x4000b81	          0x4889df	                            mov rdi, rbx	      1430	wrstabs.c	FUNCTION_30	CALL_7
0x4000b84	      0xe800000000	                          call 0x4000b89	      1430	wrstabs.c	FUNCTION_30	CALL_7
0x4000b89	          0x4589f8	                           mov r8d, r15d	      1432	wrstabs.c	FUNCTION_30	IF_1	CALL_8
0x4000b8c	        0x8b4c2404	                mov ecx, dword [rsp + 4]	      1432	wrstabs.c	FUNCTION_30	IF_1	CALL_8
0x4000b90	      0x488b542408	                mov rdx, qword [rsp + 8]	      1432	wrstabs.c	FUNCTION_30	IF_1	CALL_8
0x4000b95	          0x4c89f6	                            mov rsi, r14	      1432	wrstabs.c	FUNCTION_30	IF_1	CALL_8
0x4000b98	          0x4889ef	                            mov rdi, rbp	      1432	wrstabs.c	FUNCTION_30	IF_1	CALL_8
0x4000b9b	      0xe8b7fdffff	               call sym.stab_push_string	      1432	wrstabs.c	FUNCTION_30	IF_1	CALL_8
0x4000ba0	            0x85c0	                           test eax, eax	      1432	wrstabs.c	FUNCTION_30	IF_1	CALL_8
0x4000ba2	            0x740d	                            je 0x4000bb1	      1432	wrstabs.c	FUNCTION_30	IF_1	CALL_8
0x4000ba4	          0x4c89f7	                            mov rdi, r14	      1435	wrstabs.c	FUNCTION_30	CALL_9
0x4000ba7	      0xe800000000	                          call 0x4000bac	      1435	wrstabs.c	FUNCTION_30	CALL_9
0x4000bac	      0xb801000000	                              mov eax, 1	      1437	wrstabs.c	FUNCTION_30
0x4000bb1	        0x4883c418	                           add rsp, 0x18	      1438	wrstabs.c	FUNCTION_30
0x4000bb5	              0x5b	                                 pop rbx	      1438	wrstabs.c	FUNCTION_30
0x4000bb6	              0x5d	                                 pop rbp	      1438	wrstabs.c	FUNCTION_30
0x4000bb7	            0x415c	                                 pop r12	      1438	wrstabs.c	FUNCTION_30
0x4000bb9	            0x415d	                                 pop r13	      1438	wrstabs.c	FUNCTION_30
0x4000bbb	            0x415e	                                 pop r14	      1438	wrstabs.c	FUNCTION_30
0x4000bbd	            0x415f	                                 pop r15	      1438	wrstabs.c	FUNCTION_30
0x4000bbf	              0xc3	                                     ret	      1438	wrstabs.c	FUNCTION_30
stab_modify_type	functions,0:IF,7:ELSE,2:SWITCH,0:CALL,18:WHILE,1:DO,0:FOR,0	154
0x4001d61	            0x4157	                                push r15	       848	wrstabs.c	FUNCTION_16
0x4001d63	            0x4156	                                push r14	       848	wrstabs.c	FUNCTION_16
0x4001d65	            0x4155	                                push r13	       848	wrstabs.c	FUNCTION_16
0x4001d67	            0x4154	                                push r12	       848	wrstabs.c	FUNCTION_16
0x4001d69	              0x55	                                push rbp	       848	wrstabs.c	FUNCTION_16
0x4001d6a	              0x53	                                push rbx	       848	wrstabs.c	FUNCTION_16
0x4001d6b	        0x4883ec18	                           sub rsp, 0x18	       848	wrstabs.c	FUNCTION_16
0x4001d6f	        0x8974240c	              mov dword [rsp + 0xc], esi	       848	wrstabs.c	FUNCTION_16
0x4001d73	        0x89542408	                mov dword [rsp + 8], edx	       848	wrstabs.c	FUNCTION_16
0x4001d77	        0x488b4760	            mov rax, qword [rdi + 0x60] 	       853	wrstabs.c	FUNCTION_16	CALL_1
0x4001d7b	          0x4885c0	                           test rax, rax	       853	wrstabs.c	FUNCTION_16	CALL_1
0x4001d7e	            0x7519	                           jne 0x4001d99	       853	wrstabs.c	FUNCTION_16	CALL_1
0x4001d80	      0xb900000000	                              mov ecx, 0	       853	wrstabs.c	FUNCTION_16	CALL_1
0x4001d85	      0xba55030000	                          mov edx, 0x355	       853	wrstabs.c	FUNCTION_16	CALL_1
0x4001d8a	      0xbe00000000	                              mov esi, 0	       853	wrstabs.c	FUNCTION_16	CALL_1
0x4001d8f	      0xbf00000000	                              mov edi, 0	       853	wrstabs.c	FUNCTION_16	CALL_1
0x4001d94	      0xe800000000	                          call 0x4001d99	       853	wrstabs.c	FUNCTION_16	CALL_1
0x4001d99	          0x4889fd	                            mov rbp, rdi	       853	wrstabs.c	FUNCTION_16	CALL_1
0x4001d9c	          0x4989cd	                            mov r13, rcx	       853	wrstabs.c	FUNCTION_16	CALL_1
0x4001d9f	          0x4d89c6	                             mov r14, r8	       853	wrstabs.c	FUNCTION_16	CALL_1
0x4001da2	        0x4c8b6010	            mov r12, qword [rax + 0x10] 	       854	wrstabs.c	FUNCTION_16
0x4001da6	          0x4d85e4	                           test r12, r12	       856	wrstabs.c	FUNCTION_16	IF_1
0x4001da9	            0x7e09	                           jle 0x4001db4	       856	wrstabs.c	FUNCTION_16	IF_1
0x4001dab	          0x4885c9	                           test rcx, rcx	       856	wrstabs.c	FUNCTION_16	IF_1
0x4001dae	     0xf858d000000	                           jne 0x4001e41	       856	wrstabs.c	FUNCTION_16	IF_1
0x4001db4	        0x448b681c	           mov r13d, dword [rax + 0x1c] 	       864	wrstabs.c	FUNCTION_16	IF_1
0x4001db8	          0x4889ef	                            mov rdi, rbp	       865	wrstabs.c	FUNCTION_16	IF_1	CALL_2
0x4001dbb	      0xe886e2ffff	                  call sym.stab_pop_type	       865	wrstabs.c	FUNCTION_16	IF_1	CALL_2
0x4001dc0	          0x4889c3	                            mov rbx, rax	       865	wrstabs.c	FUNCTION_16	IF_1	CALL_2
0x4001dc3	    0x49c7c6ffffff	             mov r14, 0xffffffffffffffff	       866	wrstabs.c	FUNCTION_16	IF_1	CALL_4
0x4001dca	      0xb800000000	                              mov eax, 0	       866	wrstabs.c	FUNCTION_16	IF_1	CALL_4
0x4001dcf	          0x4c89f1	                            mov rcx, r14	       866	wrstabs.c	FUNCTION_16	IF_1	CALL_4
0x4001dd2	          0x4889df	                            mov rdi, rbx	       866	wrstabs.c	FUNCTION_16	IF_1	CALL_4
0x4001dd5	            0xf2ae	              repne scasb al, byte [rdi]	       866	wrstabs.c	FUNCTION_16	IF_1	CALL_4
0x4001dd7	          0x48f7d9	                                 neg rcx	       866	wrstabs.c	FUNCTION_16	IF_1	CALL_4
0x4001dda	          0x4889cf	                            mov rdi, rcx	       866	wrstabs.c	FUNCTION_16	IF_1	CALL_4
0x4001ddd	      0xe800000000	                          call 0x4001de2	       866	wrstabs.c	FUNCTION_16	IF_1	CALL_4
0x4001de2	          0x4989c4	                            mov r12, rax	       866	wrstabs.c	FUNCTION_16	IF_1	CALL_4
0x4001de5	          0x4989d9	                             mov r9, rbx	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001de8	      0x448b44240c	              mov r8d, dword [rsp + 0xc]	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001ded	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001df2	          0x4c89f2	                            mov rdx, r14	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001df5	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001dfa	          0x4889c7	                            mov rdi, rax	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001dfd	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001e02	      0xe800000000	                          call 0x4001e07	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001e07	          0x4889df	                            mov rdi, rbx	       868	wrstabs.c	FUNCTION_16	IF_1	CALL_5
0x4001e0a	      0xe800000000	                          call 0x4001e0f	       868	wrstabs.c	FUNCTION_16	IF_1	CALL_5
0x4001e0f	      0x448b442408	                mov r8d, dword [rsp + 8]	       869	wrstabs.c	FUNCTION_16	IF_1	IF_2	CALL_6
0x4001e14	          0x4489e9	                           mov ecx, r13d	       869	wrstabs.c	FUNCTION_16	IF_1	IF_2	CALL_6
0x4001e17	      0xba00000000	                              mov edx, 0	       869	wrstabs.c	FUNCTION_16	IF_1	IF_2	CALL_6
0x4001e1c	          0x4c89e6	                            mov rsi, r12	       869	wrstabs.c	FUNCTION_16	IF_1	IF_2	CALL_6
0x4001e1f	          0x4889ef	                            mov rdi, rbp	       869	wrstabs.c	FUNCTION_16	IF_1	IF_2	CALL_6
0x4001e22	      0xe830ebffff	               call sym.stab_push_string	       869	wrstabs.c	FUNCTION_16	IF_1	IF_2	CALL_6
0x4001e27	            0x85c0	                           test eax, eax	       869	wrstabs.c	FUNCTION_16	IF_1	IF_2	CALL_6
0x4001e29	     0xf8455010000	                            je 0x4001f84	       869	wrstabs.c	FUNCTION_16	IF_1	IF_2	CALL_6
0x4001e2f	          0x4c89e7	                            mov rdi, r12	       871	wrstabs.c	FUNCTION_16	IF_1	CALL_7
0x4001e32	      0xe800000000	                          call 0x4001e37	       871	wrstabs.c	FUNCTION_16	IF_1	CALL_7
0x4001e37	      0xb801000000	                              mov eax, 1	       922	wrstabs.c	FUNCTION_16
0x4001e3c	      0xe943010000	                           jmp 0x4001f84	       922	wrstabs.c	FUNCTION_16
0x4001e41	          0x498b18	                     mov rbx, qword [r8]	       875	wrstabs.c	FUNCTION_16	ELSE_1	IF_3
0x4001e44	          0x4c89e0	                            mov rax, r12	       875	wrstabs.c	FUNCTION_16	ELSE_1	IF_3
0x4001e47	          0x4c39e3	                            cmp rbx, r12	       875	wrstabs.c	FUNCTION_16	ELSE_1	IF_3
0x4001e4a	            0x7752	                            ja 0x4001e9e	       875	wrstabs.c	FUNCTION_16	ELSE_1	IF_3
0x4001e4c	          0x4885db	                           test rbx, rbx	       880	wrstabs.c	FUNCTION_16	ELSE_1	IF_3	IF_4
0x4001e4f	            0x750b	                           jne 0x4001e5c	       880	wrstabs.c	FUNCTION_16	ELSE_1	IF_3	IF_4
0x4001e51	        0x4983fc09	                              cmp r12, 9	       882	wrstabs.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1
0x4001e55	            0x760f	                           jbe 0x4001e66	       882	wrstabs.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1
0x4001e57	      0xbb0a000000	                            mov ebx, 0xa	       881	wrstabs.c	FUNCTION_16	ELSE_1	IF_3	IF_4
0x4001e5c	          0x4801db	                            add rbx, rbx	       883	wrstabs.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1
0x4001e5f	          0x4839d8	                            cmp rax, rbx	       882	wrstabs.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1
0x4001e62	            0x73f8	                           jae 0x4001e5c	       882	wrstabs.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1
0x4001e64	            0xeb05	                           jmp 0x4001e6b	       882	wrstabs.c	FUNCTION_16	ELSE_1	IF_3	WHILE_1
0x4001e66	      0xbb0a000000	                            mov ebx, 0xa	       881	wrstabs.c	FUNCTION_16	ELSE_1	IF_3	IF_4
0x4001e6b	    0x488d34dd0000	                        lea rsi, [rbx*8]	       884	wrstabs.c	FUNCTION_16	ELSE_1	IF_3	CALL_8
0x4001e73	        0x498b7d00	                    mov rdi, qword [r13]	       884	wrstabs.c	FUNCTION_16	ELSE_1	IF_3	CALL_8
0x4001e77	      0xe800000000	                          call 0x4001e7c	       884	wrstabs.c	FUNCTION_16	ELSE_1	IF_3	CALL_8
0x4001e7c	        0x49894500	                    mov qword [r13], rax	       884	wrstabs.c	FUNCTION_16	ELSE_1	IF_3	CALL_8
0x4001e80	          0x498b0e	                    mov rcx, qword [r14]	       886	wrstabs.c	FUNCTION_16	ELSE_1	IF_3
0x4001e83	          0x4889da	                            mov rdx, rbx	        90	string3.h	FUNCTION_74	CALL_6
0x4001e86	          0x4829ca	                            sub rdx, rcx	        90	string3.h	FUNCTION_74	CALL_6
0x4001e89	        0x48c1e203	                              shl rdx, 3	        90	string3.h	FUNCTION_74	CALL_6
0x4001e8d	        0x488d3cc8	                  lea rdi, [rax + rcx*8]	        90	string3.h	FUNCTION_74	CALL_6
0x4001e91	      0xbe00000000	                              mov esi, 0	        90	string3.h	FUNCTION_74	CALL_6
0x4001e96	      0xe800000000	                          call 0x4001e9b	        90	string3.h	FUNCTION_74	CALL_6
0x4001e9b	          0x49891e	                    mov qword [r14], rbx	       887	wrstabs.c	FUNCTION_16	ELSE_1	IF_3
0x4001e9e	        0x498b4500	                    mov rax, qword [r13]	       890	wrstabs.c	FUNCTION_16	ELSE_1
0x4001ea2	        0x4a8b1ce0	            mov rbx, qword [rax + r12*8]	       890	wrstabs.c	FUNCTION_16	ELSE_1
0x4001ea6	          0x4885db	                           test rbx, rbx	       891	wrstabs.c	FUNCTION_16	ELSE_1	IF_5
0x4001ea9	            0x7436	                            je 0x4001ee1	       891	wrstabs.c	FUNCTION_16	ELSE_1	IF_5
0x4001eab	        0x488b4560	            mov rax, qword [rbp + 0x60] 	       891	wrstabs.c	FUNCTION_16	ELSE_1	IF_5
0x4001eaf	        0x83781c00	               cmp dword [rax + 0x1c], 0	       891	wrstabs.c	FUNCTION_16	ELSE_1	IF_5
0x4001eb3	            0x752c	                           jne 0x4001ee1	       891	wrstabs.c	FUNCTION_16	ELSE_1	IF_5
0x4001eb5	          0x4889ef	                            mov rdi, rbp	       899	wrstabs.c	FUNCTION_16	ELSE_1	IF_5	CALL_11
0x4001eb8	      0xe889e1ffff	                  call sym.stab_pop_type	       899	wrstabs.c	FUNCTION_16	ELSE_1	IF_5	CALL_11
0x4001ebd	          0x4889c7	                            mov rdi, rax	       899	wrstabs.c	FUNCTION_16	ELSE_1	IF_5	CALL_11
0x4001ec0	      0xe800000000	                          call 0x4001ec5	       899	wrstabs.c	FUNCTION_16	ELSE_1	IF_5	CALL_11
0x4001ec5	        0x8b542408	                mov edx, dword [rsp + 8]	       900	wrstabs.c	FUNCTION_16	ELSE_1	IF_5	IF_6	CALL_12
0x4001ec9	          0x4889de	                            mov rsi, rbx	       900	wrstabs.c	FUNCTION_16	ELSE_1	IF_5	IF_6	CALL_12
0x4001ecc	          0x4889ef	                            mov rdi, rbp	       900	wrstabs.c	FUNCTION_16	ELSE_1	IF_5	IF_6	CALL_12
0x4001ecf	      0xe804ebffff	         call sym.stab_push_defined_type	       900	wrstabs.c	FUNCTION_16	ELSE_1	IF_5	IF_6	CALL_12
0x4001ed4	            0x85c0	                           test eax, eax	       870	wrstabs.c	FUNCTION_16	IF_1	IF_2
0x4001ed6	           0xf95c0	                                setne al	       870	wrstabs.c	FUNCTION_16	IF_1	IF_2
0x4001ed9	           0xfb6c0	                           movzx eax, al	       870	wrstabs.c	FUNCTION_16	IF_1	IF_2
0x4001edc	      0xe9a3000000	                           jmp 0x4001f84	       870	wrstabs.c	FUNCTION_16	IF_1	IF_2
0x4001ee1	        0x488b5d68	            mov rbx, qword [rbp + 0x68] 	       905	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2
0x4001ee5	        0x488d4301	                      lea rax, [rbx + 1]	       906	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2
0x4001ee9	        0x48894568	            mov qword [rbp + 0x68], rax 	       906	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2
0x4001eed	          0x4889ef	                            mov rdi, rbp	       908	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	CALL_13
0x4001ef0	      0xe851e1ffff	                  call sym.stab_pop_type	       908	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	CALL_13
0x4001ef5	          0x4989c6	                            mov r14, rax	       908	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	CALL_13
0x4001ef8	      0xb800000000	                              mov eax, 0	       909	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	CALL_15
0x4001efd	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       909	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	CALL_15
0x4001f04	          0x4c89f7	                            mov rdi, r14	       909	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	CALL_15
0x4001f07	            0xf2ae	              repne scasb al, byte [rdi]	       909	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	CALL_15
0x4001f09	          0x4889c8	                            mov rax, rcx	       909	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	CALL_15
0x4001f0c	          0x48f7d0	                                 not rax	       909	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	CALL_15
0x4001f0f	        0x488d7813	                   lea rdi, [rax + 0x13]	       909	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	CALL_15
0x4001f13	      0xe800000000	                          call 0x4001f18	       909	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	CALL_15
0x4001f18	          0x4989c7	                            mov r15, rax	       909	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	CALL_15
0x4001f1b	        0x4883ec08	                              sub rsp, 8	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001f1f	            0x4156	                                push r14	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001f21	      0x448b4c241c	            mov r9d, dword [rsp + 0x1c] 	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001f26	          0x4989d8	                             mov r8, rbx	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001f29	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001f2e	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001f35	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001f3a	          0x4889c7	                            mov rdi, rax	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001f3d	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001f42	      0xe800000000	                          call 0x4001f47	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001f47	          0x4c89f7	                            mov rdi, r14	       911	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	CALL_16
0x4001f4a	      0xe800000000	                          call 0x4001f4f	       911	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	CALL_16
0x4001f4f	        0x498b4500	                    mov rax, qword [r13]	       913	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2
0x4001f53	        0x4a891ce0	            mov qword [rax + r12*8], rbx	       913	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2
0x4001f57	      0x448b442418	            mov r8d, dword [rsp + 0x18] 	       915	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	IF_7	CALL_17
0x4001f5c	      0xb901000000	                              mov ecx, 1	       915	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	IF_7	CALL_17
0x4001f61	          0x4889da	                            mov rdx, rbx	       915	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	IF_7	CALL_17
0x4001f64	          0x4c89fe	                            mov rsi, r15	       915	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	IF_7	CALL_17
0x4001f67	          0x4889ef	                            mov rdi, rbp	       915	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	IF_7	CALL_17
0x4001f6a	      0xe8e8e9ffff	               call sym.stab_push_string	       915	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	IF_7	CALL_17
0x4001f6f	        0x4883c410	                           add rsp, 0x10	       915	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	IF_7	CALL_17
0x4001f73	            0x85c0	                           test eax, eax	       915	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	IF_7	CALL_17
0x4001f75	            0x740d	                            je 0x4001f84	       915	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	IF_7	CALL_17
0x4001f77	          0x4c89ff	                            mov rdi, r15	       918	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	CALL_18
0x4001f7a	      0xe800000000	                          call 0x4001f7f	       918	wrstabs.c	FUNCTION_16	ELSE_1	ELSE_2	CALL_18
0x4001f7f	      0xb801000000	                              mov eax, 1	       922	wrstabs.c	FUNCTION_16
0x4001f84	        0x4883c418	                           add rsp, 0x18	       923	wrstabs.c	FUNCTION_16
0x4001f88	              0x5b	                                 pop rbx	       923	wrstabs.c	FUNCTION_16
0x4001f89	              0x5d	                                 pop rbp	       923	wrstabs.c	FUNCTION_16
0x4001f8a	            0x415c	                                 pop r12	       923	wrstabs.c	FUNCTION_16
0x4001f8c	            0x415d	                                 pop r13	       923	wrstabs.c	FUNCTION_16
0x4001f8e	            0x415e	                                 pop r14	       923	wrstabs.c	FUNCTION_16
0x4001f90	            0x415f	                                 pop r15	       923	wrstabs.c	FUNCTION_16
0x4001f92	              0xc3	                                     ret	       923	wrstabs.c	FUNCTION_16
stab_class_static_method_variant	functions,0:IF,0:ELSE,0:SWITCH,0:CALL,1:WHILE,0:DO,0:FOR,0	9
0x40006e9	        0x4883ec08	                              sub rsp, 8	      1750	wrstabs.c	FUNCTION_37
0x40006ed	            0x6a00	                                  push 0	      1753	wrstabs.c	FUNCTION_37	CALL_1
0x40006ef	            0x6a00	                                  push 0	      1753	wrstabs.c	FUNCTION_37	CALL_1
0x40006f1	          0x4589c1	                            mov r9d, r8d	      1753	wrstabs.c	FUNCTION_37	CALL_1
0x40006f4	          0x4189c8	                            mov r8d, ecx	      1753	wrstabs.c	FUNCTION_37	CALL_1
0x40006f7	      0xb901000000	                              mov ecx, 1	      1753	wrstabs.c	FUNCTION_37	CALL_1
0x40006fc	      0xe83bfcffff	          call sym.stab_class_method_var	      1753	wrstabs.c	FUNCTION_37	CALL_1
0x4000701	        0x4883c418	                           add rsp, 0x18	      1755	wrstabs.c	FUNCTION_37
0x4000705	              0xc3	                                     ret	      1755	wrstabs.c	FUNCTION_37
stab_void_type	functions,0:IF,1:ELSE,1:SWITCH,0:CALL,2:WHILE,0:DO,0:FOR,0	39
0x4001057	              0x55	                                push rbp	       605	wrstabs.c	FUNCTION_10
0x4001058	              0x53	                                push rbx	       605	wrstabs.c	FUNCTION_10
0x4001059	        0x4883ec38	                           sub rsp, 0x38	       605	wrstabs.c	FUNCTION_10
0x400105d	          0x4889fb	                            mov rbx, rdi	       605	wrstabs.c	FUNCTION_10
0x4001060	    0x64488b042528	                mov rax, qword fs:[0x28]	       605	wrstabs.c	FUNCTION_10
0x4001069	      0x4889442428	             mov qword [rsp + 0x28], rax	       605	wrstabs.c	FUNCTION_10
0x400106e	            0x31c0	                            xor eax, eax	       605	wrstabs.c	FUNCTION_10
0x4001070	        0x488b7770	            mov rsi, qword [rdi + 0x70] 	       608	wrstabs.c	FUNCTION_10	IF_1
0x4001074	          0x4885f6	                           test rsi, rsi	       608	wrstabs.c	FUNCTION_10	IF_1
0x4001077	            0x740c	                            je 0x4001085	       608	wrstabs.c	FUNCTION_10	IF_1
0x4001079	      0xba00000000	                              mov edx, 0	       609	wrstabs.c	FUNCTION_10	CALL_1
0x400107e	      0xe855f9ffff	         call sym.stab_push_defined_type	       609	wrstabs.c	FUNCTION_10	CALL_1
0x4001083	            0xeb4b	                           jmp 0x40010d0	       609	wrstabs.c	FUNCTION_10	CALL_1
0x4001085	        0x488b6f68	            mov rbp, qword [rdi + 0x68] 	       615	wrstabs.c	FUNCTION_10	ELSE_1
0x4001089	        0x488d4501	                      lea rax, [rbp + 1]	       616	wrstabs.c	FUNCTION_10	ELSE_1
0x400108d	        0x48894768	             mov qword [rdi + 0x68], rax	       616	wrstabs.c	FUNCTION_10	ELSE_1
0x4001091	        0x48896f70	             mov qword [rdi + 0x70], rbp	       618	wrstabs.c	FUNCTION_10	ELSE_1
0x4001095	          0x4989e9	                             mov r9, rbp	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001098	          0x4989e8	                             mov r8, rbp	        33	stdio2.h	FUNCTION_54	CALL_1
0x400109b	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x40010a0	      0xba28000000	                           mov edx, 0x28	        33	stdio2.h	FUNCTION_54	CALL_1
0x40010a5	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x40010aa	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_54	CALL_1
0x40010ad	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x40010b2	      0xe800000000	                          call 0x40010b7	        33	stdio2.h	FUNCTION_54	CALL_1
0x40010b7	    0x41b800000000	                              mov r8d, 0	       622	wrstabs.c	FUNCTION_10	ELSE_1	CALL_2
0x40010bd	      0xb901000000	                              mov ecx, 1	       622	wrstabs.c	FUNCTION_10	ELSE_1	CALL_2
0x40010c2	          0x4889ea	                            mov rdx, rbp	       622	wrstabs.c	FUNCTION_10	ELSE_1	CALL_2
0x40010c5	          0x4889e6	                            mov rsi, rsp	       622	wrstabs.c	FUNCTION_10	ELSE_1	CALL_2
0x40010c8	          0x4889df	                            mov rdi, rbx	       622	wrstabs.c	FUNCTION_10	ELSE_1	CALL_2
0x40010cb	      0xe887f8ffff	               call sym.stab_push_string	       622	wrstabs.c	FUNCTION_10	ELSE_1	CALL_2
0x40010d0	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       624	wrstabs.c	FUNCTION_10
0x40010d5	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       624	wrstabs.c	FUNCTION_10
0x40010de	            0x7405	                            je 0x40010e5	       624	wrstabs.c	FUNCTION_10
0x40010e0	      0xe800000000	                          call 0x40010e5	       624	wrstabs.c	FUNCTION_10
0x40010e5	        0x4883c438	                           add rsp, 0x38	       624	wrstabs.c	FUNCTION_10
0x40010e9	              0x5b	                                 pop rbx	       624	wrstabs.c	FUNCTION_10
0x40010ea	              0x5d	                                 pop rbp	       624	wrstabs.c	FUNCTION_10
0x40010eb	              0xc3	                                     ret	       624	wrstabs.c	FUNCTION_10
stab_class_end_method	functions,0:IF,0:ELSE,0:SWITCH,0:CALL,2:WHILE,0:DO,0:FOR,0	21
0x400117d	        0x4883ec08	                              sub rsp, 8	      1761	wrstabs.c	FUNCTION_38
0x4001181	        0x488b4760	            mov rax, qword [rdi + 0x60] 	      1764	wrstabs.c	FUNCTION_38	CALL_1
0x4001185	          0x4885c0	                           test rax, rax	      1764	wrstabs.c	FUNCTION_38	CALL_1
0x4001188	            0x7409	                            je 0x4001193	      1764	wrstabs.c	FUNCTION_38	CALL_1
0x400118a	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      1764	wrstabs.c	FUNCTION_38	CALL_1
0x400118e	          0x4885d2	                           test rdx, rdx	      1764	wrstabs.c	FUNCTION_38	CALL_1
0x4001191	            0x7519	                           jne 0x40011ac	      1764	wrstabs.c	FUNCTION_38	CALL_1
0x4001193	      0xb900000000	                              mov ecx, 0	      1764	wrstabs.c	FUNCTION_38	CALL_1
0x4001198	      0xbae4060000	                          mov edx, 0x6e4	      1764	wrstabs.c	FUNCTION_38	CALL_1
0x400119d	      0xbe00000000	                              mov esi, 0	      1764	wrstabs.c	FUNCTION_38	CALL_1
0x40011a2	      0xbf00000000	                              mov edi, 0	      1764	wrstabs.c	FUNCTION_38	CALL_1
0x40011a7	      0xe800000000	                          call 0x40011ac	      1764	wrstabs.c	FUNCTION_38	CALL_1
0x40011ac	      0xb800000000	                              mov eax, 0	       148	string3.h	FUNCTION_81	CALL_3
0x40011b1	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       148	string3.h	FUNCTION_81	CALL_3
0x40011b8	          0x4889d7	                            mov rdi, rdx	       148	string3.h	FUNCTION_81	CALL_3
0x40011bb	            0xf2ae	              repne scasb al, byte [rdi]	       148	string3.h	FUNCTION_81	CALL_3
0x40011bd	          0x48f7d1	                                 not rcx	       148	string3.h	FUNCTION_81	CALL_3
0x40011c0	    0x66c7440aff3b	         mov word [rdx + rcx - 1], 0x3b 	       148	string3.h	FUNCTION_81	CALL_3
0x40011c7	      0xb801000000	                              mov eax, 1	      1771	wrstabs.c	FUNCTION_38
0x40011cc	        0x4883c408	                              add rsp, 8	      1771	wrstabs.c	FUNCTION_38
0x40011d0	              0xc3	                                     ret	      1771	wrstabs.c	FUNCTION_38
stab_float_constant	functions,0:IF,1:ELSE,0:SWITCH,0:CALL,4:WHILE,0:DO,0:FOR,0	43
0x4002846	            0x4155	                                push r13	      1973	wrstabs.c	FUNCTION_45
0x4002848	            0x4154	                                push r12	      1973	wrstabs.c	FUNCTION_45
0x400284a	              0x55	                                push rbp	      1973	wrstabs.c	FUNCTION_45
0x400284b	              0x53	                                push rbx	      1973	wrstabs.c	FUNCTION_45
0x400284c	        0x4883ec18	                           sub rsp, 0x18	      1973	wrstabs.c	FUNCTION_45
0x4002850	          0x4989fc	                            mov r12, rdi	      1973	wrstabs.c	FUNCTION_45
0x4002853	          0x4889f5	                            mov rbp, rsi	      1973	wrstabs.c	FUNCTION_45
0x4002856	    0xf20f11442408	             movsd qword [rsp + 8], xmm0	      1973	wrstabs.c	FUNCTION_45
0x400285c	    0x48c7c3ffffff	             mov rbx, 0xffffffffffffffff	      1977	wrstabs.c	FUNCTION_45	CALL_2
0x4002863	      0xb800000000	                              mov eax, 0	      1977	wrstabs.c	FUNCTION_45	CALL_2
0x4002868	          0x4889d9	                            mov rcx, rbx	      1977	wrstabs.c	FUNCTION_45	CALL_2
0x400286b	          0x4889f7	                            mov rdi, rsi	      1977	wrstabs.c	FUNCTION_45	CALL_2
0x400286e	            0xf2ae	              repne scasb al, byte [rdi]	      1977	wrstabs.c	FUNCTION_45	CALL_2
0x4002870	          0x4889c8	                            mov rax, rcx	      1977	wrstabs.c	FUNCTION_45	CALL_2
0x4002873	          0x48f7d0	                                 not rax	      1977	wrstabs.c	FUNCTION_45	CALL_2
0x4002876	        0x488d7813	                   lea rdi, [rax + 0x13]	      1977	wrstabs.c	FUNCTION_45	CALL_2
0x400287a	      0xe800000000	                          call 0x400287f	      1977	wrstabs.c	FUNCTION_45	CALL_2
0x400287f	          0x4989c5	                            mov r13, rax	      1977	wrstabs.c	FUNCTION_45	CALL_2
0x4002882	    0xf20f10442408	            movsd xmm0, qword [rsp + 8] 	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002888	          0x4989e8	                             mov r8, rbp	        33	stdio2.h	FUNCTION_54	CALL_1
0x400288b	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002890	          0x4889da	                            mov rdx, rbx	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002893	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002898	          0x4889c7	                            mov rdi, rax	        33	stdio2.h	FUNCTION_54	CALL_1
0x400289b	      0xb801000000	                              mov eax, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x40028a0	      0xe800000000	                          call 0x40028a5	        33	stdio2.h	FUNCTION_54	CALL_1
0x40028a5	          0x4d89e8	                             mov r8, r13	      1980	wrstabs.c	FUNCTION_45	IF_1	CALL_3
0x40028a8	      0xb900000000	                              mov ecx, 0	      1980	wrstabs.c	FUNCTION_45	IF_1	CALL_3
0x40028ad	      0xba00000000	                              mov edx, 0	      1980	wrstabs.c	FUNCTION_45	IF_1	CALL_3
0x40028b2	      0xbe80000000	                           mov esi, 0x80	      1980	wrstabs.c	FUNCTION_45	IF_1	CALL_3
0x40028b7	          0x4c89e7	                            mov rdi, r12	      1980	wrstabs.c	FUNCTION_45	IF_1	CALL_3
0x40028ba	      0xe86af7ffff	              call sym.stab_write_symbol	      1980	wrstabs.c	FUNCTION_45	IF_1	CALL_3
0x40028bf	            0x85c0	                           test eax, eax	      1980	wrstabs.c	FUNCTION_45	IF_1	CALL_3
0x40028c1	            0x740d	                            je 0x40028d0	      1980	wrstabs.c	FUNCTION_45	IF_1	CALL_3
0x40028c3	          0x4c89ef	                            mov rdi, r13	      1983	wrstabs.c	FUNCTION_45	CALL_4
0x40028c6	      0xe800000000	                          call 0x40028cb	      1983	wrstabs.c	FUNCTION_45	CALL_4
0x40028cb	      0xb801000000	                              mov eax, 1	      1985	wrstabs.c	FUNCTION_45
0x40028d0	        0x4883c418	                           add rsp, 0x18	      1986	wrstabs.c	FUNCTION_45
0x40028d4	              0x5b	                                 pop rbx	      1986	wrstabs.c	FUNCTION_45
0x40028d5	              0x5d	                                 pop rbp	      1986	wrstabs.c	FUNCTION_45
0x40028d6	            0x415c	                                 pop r12	      1986	wrstabs.c	FUNCTION_45
0x40028d8	            0x415d	                                 pop r13	      1986	wrstabs.c	FUNCTION_45
0x40028da	              0xc3	                                     ret	      1986	wrstabs.c	FUNCTION_45
stab_class_baseclass	functions,0:IF,2:ELSE,1:SWITCH,1:CALL,7:WHILE,1:DO,0:FOR,0	95
0x40007ff	            0x4157	                                push r15	      1548	wrstabs.c	FUNCTION_33
0x4000801	            0x4156	                                push r14	      1548	wrstabs.c	FUNCTION_33
0x4000803	            0x4155	                                push r13	      1548	wrstabs.c	FUNCTION_33
0x4000805	            0x4154	                                push r12	      1548	wrstabs.c	FUNCTION_33
0x4000807	              0x55	                                push rbp	      1548	wrstabs.c	FUNCTION_33
0x4000808	              0x53	                                push rbx	      1548	wrstabs.c	FUNCTION_33
0x4000809	        0x4883ec18	                           sub rsp, 0x18	      1548	wrstabs.c	FUNCTION_33
0x400080d	          0x4889fb	                            mov rbx, rdi	      1548	wrstabs.c	FUNCTION_33
0x4000810	      0x4889742408	                mov qword [rsp + 8], rsi	      1548	wrstabs.c	FUNCTION_33
0x4000815	          0x4189d6	                           mov r14d, edx	      1548	wrstabs.c	FUNCTION_33
0x4000818	          0x4189cd	                           mov r13d, ecx	      1548	wrstabs.c	FUNCTION_33
0x400081b	        0x488b4760	            mov rax, qword [rdi + 0x60] 	      1556	wrstabs.c	FUNCTION_33
0x400081f	        0x448b781c	           mov r15d, dword [rax + 0x1c] 	      1556	wrstabs.c	FUNCTION_33
0x4000823	      0xe81ef8ffff	                  call sym.stab_pop_type	      1557	wrstabs.c	FUNCTION_33	CALL_1
0x4000828	          0x4989c4	                            mov r12, rax	      1557	wrstabs.c	FUNCTION_33	CALL_1
0x400082b	      0xb800000000	                              mov eax, 0	      1561	wrstabs.c	FUNCTION_33	CALL_3
0x4000830	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1561	wrstabs.c	FUNCTION_33	CALL_3
0x4000837	          0x4c89e7	                            mov rdi, r12	      1561	wrstabs.c	FUNCTION_33	CALL_3
0x400083a	            0xf2ae	              repne scasb al, byte [rdi]	      1561	wrstabs.c	FUNCTION_33	CALL_3
0x400083c	          0x48f7d1	                                 not rcx	      1561	wrstabs.c	FUNCTION_33	CALL_3
0x400083f	        0x488d7918	                   lea rdi, [rcx + 0x18]	      1561	wrstabs.c	FUNCTION_33	CALL_3
0x4000843	      0xe800000000	                          call 0x4000848	      1561	wrstabs.c	FUNCTION_33	CALL_3
0x4000848	          0x4889c5	                            mov rbp, rax	      1561	wrstabs.c	FUNCTION_33	CALL_3
0x400084b	        0x4183fe01	                             cmp r14d, 1	      1562	wrstabs.c	FUNCTION_33
0x400084f	            0x19c0	                            sbb eax, eax	      1562	wrstabs.c	FUNCTION_33
0x4000851	          0x83c031	                           add eax, 0x31	      1562	wrstabs.c	FUNCTION_33
0x4000854	          0x884500	                      mov byte [rbp], al	      1562	wrstabs.c	FUNCTION_33
0x4000857	        0x4183fd01	                             cmp r13d, 1	      1563	wrstabs.c	FUNCTION_33	SWITCH_1
0x400085b	            0x7417	                            je 0x4000874	      1563	wrstabs.c	FUNCTION_33	SWITCH_1
0x400085d	        0x4183fd01	                             cmp r13d, 1	      1563	wrstabs.c	FUNCTION_33	SWITCH_1
0x4000861	            0x7217	                            jb 0x400087a	      1563	wrstabs.c	FUNCTION_33	SWITCH_1
0x4000863	        0x4183fd02	                             cmp r13d, 2	      1563	wrstabs.c	FUNCTION_33	SWITCH_1
0x4000867	            0x7405	                            je 0x400086e	      1563	wrstabs.c	FUNCTION_33	SWITCH_1
0x4000869	      0xe800000000	                          call 0x400086e	      1566	wrstabs.c	FUNCTION_33	SWITCH_1	CALL_4
0x400086e	        0xc6450130	                mov byte [rbp + 1], 0x30	      1569	wrstabs.c	FUNCTION_33	SWITCH_1
0x4000872	            0xeb0a	                           jmp 0x400087e	      1570	wrstabs.c	FUNCTION_33	SWITCH_1
0x4000874	        0xc6450131	                mov byte [rbp + 1], 0x31	      1573	wrstabs.c	FUNCTION_33	SWITCH_1
0x4000878	            0xeb04	                           jmp 0x400087e	      1574	wrstabs.c	FUNCTION_33	SWITCH_1
0x400087a	        0xc6450132	                mov byte [rbp + 1], 0x32	      1577	wrstabs.c	FUNCTION_33	SWITCH_1
0x400087e	        0x488d7d02	                      lea rdi, [rbp + 2]	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000882	          0x4d89e1	                             mov r9, r12	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000885	      0x4c8b442408	                 mov r8, qword [rsp + 8]	        33	stdio2.h	FUNCTION_54	CALL_1
0x400088a	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x400088f	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000896	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x400089b	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x40008a0	      0xe800000000	                          call 0x40008a5	        33	stdio2.h	FUNCTION_54	CALL_1
0x40008a5	          0x4c89e7	                            mov rdi, r12	      1582	wrstabs.c	FUNCTION_33	CALL_5
0x40008a8	      0xe800000000	                          call 0x40008ad	      1582	wrstabs.c	FUNCTION_33	CALL_5
0x40008ad	        0x488b4360	            mov rax, qword [rbx + 0x60] 	      1586	wrstabs.c	FUNCTION_33	CALL_6
0x40008b1	          0x4885c0	                           test rax, rax	      1586	wrstabs.c	FUNCTION_33	CALL_6
0x40008b4	            0x7407	                            je 0x40008bd	      1586	wrstabs.c	FUNCTION_33	CALL_6
0x40008b6	      0x4883782000	               cmp qword [rax + 0x20], 0	      1586	wrstabs.c	FUNCTION_33	CALL_6
0x40008bb	            0x7519	                           jne 0x40008d6	      1586	wrstabs.c	FUNCTION_33	CALL_6
0x40008bd	      0xb900000000	                              mov ecx, 0	      1586	wrstabs.c	FUNCTION_33	CALL_6
0x40008c2	      0xba32060000	                          mov edx, 0x632	      1586	wrstabs.c	FUNCTION_33	CALL_6
0x40008c7	      0xbe00000000	                              mov esi, 0	      1586	wrstabs.c	FUNCTION_33	CALL_6
0x40008cc	      0xbf00000000	                              mov edi, 0	      1586	wrstabs.c	FUNCTION_33	CALL_6
0x40008d1	      0xe800000000	                          call 0x40008d6	      1586	wrstabs.c	FUNCTION_33	CALL_6
0x40008d6	        0x488b7828	            mov rdi, qword [rax + 0x28] 	      1588	wrstabs.c	FUNCTION_33	IF_1
0x40008da	          0x4885ff	                           test rdi, rdi	      1588	wrstabs.c	FUNCTION_33	IF_1
0x40008dd	            0x741c	                            je 0x40008fb	      1588	wrstabs.c	FUNCTION_33	IF_1
0x40008df	        0x48833f00	                      cmp qword [rdi], 0	      1593	wrstabs.c	FUNCTION_33	ELSE_1	WHILE_1
0x40008e3	            0x741e	                            je 0x4000903	      1593	wrstabs.c	FUNCTION_33	ELSE_1	WHILE_1
0x40008e5	    0x41bc00000000	                             mov r12d, 0	      1593	wrstabs.c	FUNCTION_33	ELSE_1	WHILE_1
0x40008eb	        0x4183c401	                             add r12d, 1	      1594	wrstabs.c	FUNCTION_33	ELSE_1	WHILE_1
0x40008ef	          0x4489e0	                           mov eax, r12d	      1593	wrstabs.c	FUNCTION_33	ELSE_1	WHILE_1
0x40008f2	      0x48833cc700	              cmp qword [rdi + rax*8], 0	      1593	wrstabs.c	FUNCTION_33	ELSE_1	WHILE_1
0x40008f7	            0x75f2	                           jne 0x40008eb	      1593	wrstabs.c	FUNCTION_33	ELSE_1	WHILE_1
0x40008f9	            0xeb0e	                           jmp 0x4000909	      1593	wrstabs.c	FUNCTION_33	ELSE_1	WHILE_1
0x40008fb	    0x41bc00000000	                             mov r12d, 0	      1589	wrstabs.c	FUNCTION_33	IF_1
0x4000901	            0xeb06	                           jmp 0x4000909	      1589	wrstabs.c	FUNCTION_33	IF_1
0x4000903	    0x41bc00000000	                             mov r12d, 0	      1593	wrstabs.c	FUNCTION_33	ELSE_1	WHILE_1
0x4000909	      0x418d742402	                      lea esi, [r12 + 2]	      1597	wrstabs.c	FUNCTION_33	CALL_7
0x400090e	        0x48c1e603	                              shl rsi, 3	      1597	wrstabs.c	FUNCTION_33	CALL_7
0x4000912	      0xe800000000	                          call 0x4000917	      1597	wrstabs.c	FUNCTION_33	CALL_7
0x4000917	          0x4489e2	                           mov edx, r12d	      1599	wrstabs.c	FUNCTION_33
0x400091a	        0x48892cd0	            mov qword [rax + rdx*8], rbp	      1599	wrstabs.c	FUNCTION_33
0x400091e	      0x418d542401	                      lea edx, [r12 + 1]	      1600	wrstabs.c	FUNCTION_33
0x4000923	    0x48c704d00000	              mov qword [rax + rdx*8], 0	      1600	wrstabs.c	FUNCTION_33
0x400092b	        0x488b5360	            mov rdx, qword [rbx + 0x60] 	      1602	wrstabs.c	FUNCTION_33
0x400092f	        0x48894228	             mov qword [rdx + 0x28], rax	      1602	wrstabs.c	FUNCTION_33
0x4000933	          0x4585ff	                         test r15d, r15d	      1604	wrstabs.c	FUNCTION_33	IF_2
0x4000936	            0x740b	                            je 0x4000943	      1604	wrstabs.c	FUNCTION_33	IF_2
0x4000938	        0x488b4360	            mov rax, qword [rbx + 0x60] 	      1605	wrstabs.c	FUNCTION_33	IF_2
0x400093c	    0xc7401c010000	               mov dword [rax + 0x1c], 1	      1605	wrstabs.c	FUNCTION_33	IF_2
0x4000943	      0xb801000000	                              mov eax, 1	      1608	wrstabs.c	FUNCTION_33
0x4000948	        0x4883c418	                           add rsp, 0x18	      1608	wrstabs.c	FUNCTION_33
0x400094c	              0x5b	                                 pop rbx	      1608	wrstabs.c	FUNCTION_33
0x400094d	              0x5d	                                 pop rbp	      1608	wrstabs.c	FUNCTION_33
0x400094e	            0x415c	                                 pop r12	      1608	wrstabs.c	FUNCTION_33
0x4000950	            0x415d	                                 pop r13	      1608	wrstabs.c	FUNCTION_33
0x4000952	            0x415e	                                 pop r14	      1608	wrstabs.c	FUNCTION_33
0x4000954	            0x415f	                                 pop r15	      1608	wrstabs.c	FUNCTION_33
0x4000956	              0xc3	                                     ret	      1608	wrstabs.c	FUNCTION_33
stab_int_constant	functions,0:IF,1:ELSE,0:SWITCH,0:CALL,4:WHILE,0:DO,0:FOR,0	43
0x40028db	            0x4156	                                push r14	      1954	wrstabs.c	FUNCTION_44
0x40028dd	            0x4155	                                push r13	      1954	wrstabs.c	FUNCTION_44
0x40028df	            0x4154	                                push r12	      1954	wrstabs.c	FUNCTION_44
0x40028e1	              0x55	                                push rbp	      1954	wrstabs.c	FUNCTION_44
0x40028e2	              0x53	                                push rbx	      1954	wrstabs.c	FUNCTION_44
0x40028e3	          0x4989fc	                            mov r12, rdi	      1954	wrstabs.c	FUNCTION_44
0x40028e6	          0x4889f5	                            mov rbp, rsi	      1954	wrstabs.c	FUNCTION_44
0x40028e9	          0x4989d5	                            mov r13, rdx	      1954	wrstabs.c	FUNCTION_44
0x40028ec	    0x48c7c3ffffff	             mov rbx, 0xffffffffffffffff	      1958	wrstabs.c	FUNCTION_44	CALL_2
0x40028f3	      0xb800000000	                              mov eax, 0	      1958	wrstabs.c	FUNCTION_44	CALL_2
0x40028f8	          0x4889d9	                            mov rcx, rbx	      1958	wrstabs.c	FUNCTION_44	CALL_2
0x40028fb	          0x4889f7	                            mov rdi, rsi	      1958	wrstabs.c	FUNCTION_44	CALL_2
0x40028fe	            0xf2ae	              repne scasb al, byte [rdi]	      1958	wrstabs.c	FUNCTION_44	CALL_2
0x4002900	          0x4889c8	                            mov rax, rcx	      1958	wrstabs.c	FUNCTION_44	CALL_2
0x4002903	          0x48f7d0	                                 not rax	      1958	wrstabs.c	FUNCTION_44	CALL_2
0x4002906	        0x488d7813	                   lea rdi, [rax + 0x13]	      1958	wrstabs.c	FUNCTION_44	CALL_2
0x400290a	      0xe800000000	                          call 0x400290f	      1958	wrstabs.c	FUNCTION_44	CALL_2
0x400290f	          0x4989c6	                            mov r14, rax	      1958	wrstabs.c	FUNCTION_44	CALL_2
0x4002912	          0x4d89e9	                             mov r9, r13	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002915	          0x4989e8	                             mov r8, rbp	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002918	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x400291d	          0x4889da	                            mov rdx, rbx	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002920	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002925	          0x4889c7	                            mov rdi, rax	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002928	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x400292d	      0xe800000000	                          call 0x4002932	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002932	          0x4d89f0	                             mov r8, r14	      1961	wrstabs.c	FUNCTION_44	IF_1	CALL_3
0x4002935	      0xb900000000	                              mov ecx, 0	      1961	wrstabs.c	FUNCTION_44	IF_1	CALL_3
0x400293a	      0xba00000000	                              mov edx, 0	      1961	wrstabs.c	FUNCTION_44	IF_1	CALL_3
0x400293f	      0xbe80000000	                           mov esi, 0x80	      1961	wrstabs.c	FUNCTION_44	IF_1	CALL_3
0x4002944	          0x4c89e7	                            mov rdi, r12	      1961	wrstabs.c	FUNCTION_44	IF_1	CALL_3
0x4002947	      0xe8ddf6ffff	              call sym.stab_write_symbol	      1961	wrstabs.c	FUNCTION_44	IF_1	CALL_3
0x400294c	            0x85c0	                           test eax, eax	      1961	wrstabs.c	FUNCTION_44	IF_1	CALL_3
0x400294e	            0x740d	                            je 0x400295d	      1961	wrstabs.c	FUNCTION_44	IF_1	CALL_3
0x4002950	          0x4c89f7	                            mov rdi, r14	      1964	wrstabs.c	FUNCTION_44	CALL_4
0x4002953	      0xe800000000	                          call 0x4002958	      1964	wrstabs.c	FUNCTION_44	CALL_4
0x4002958	      0xb801000000	                              mov eax, 1	      1966	wrstabs.c	FUNCTION_44
0x400295d	              0x5b	                                 pop rbx	      1967	wrstabs.c	FUNCTION_44
0x400295e	              0x5d	                                 pop rbp	      1967	wrstabs.c	FUNCTION_44
0x400295f	            0x415c	                                 pop r12	      1967	wrstabs.c	FUNCTION_44
0x4002961	            0x415d	                                 pop r13	      1967	wrstabs.c	FUNCTION_44
0x4002963	            0x415e	                                 pop r14	      1967	wrstabs.c	FUNCTION_44
0x4002965	              0xc3	                                     ret	      1967	wrstabs.c	FUNCTION_44
stab_range_type	functions,0:IF,1:ELSE,0:SWITCH,0:CALL,6:WHILE,0:DO,0:FOR,0	57
0x4000f0d	            0x4157	                                push r15	       990	wrstabs.c	FUNCTION_20
0x4000f0f	            0x4156	                                push r14	       990	wrstabs.c	FUNCTION_20
0x4000f11	            0x4155	                                push r13	       990	wrstabs.c	FUNCTION_20
0x4000f13	            0x4154	                                push r12	       990	wrstabs.c	FUNCTION_20
0x4000f15	              0x55	                                push rbp	       990	wrstabs.c	FUNCTION_20
0x4000f16	              0x53	                                push rbx	       990	wrstabs.c	FUNCTION_20
0x4000f17	        0x4883ec18	                           sub rsp, 0x18	       990	wrstabs.c	FUNCTION_20
0x4000f1b	          0x4889fb	                            mov rbx, rdi	       990	wrstabs.c	FUNCTION_20
0x4000f1e	        0x48893424	                    mov qword [rsp], rsi	       990	wrstabs.c	FUNCTION_20
0x4000f22	      0x4889542408	                mov qword [rsp + 8], rdx	       990	wrstabs.c	FUNCTION_20
0x4000f27	        0x488b4760	            mov rax, qword [rdi + 0x60] 	       996	wrstabs.c	FUNCTION_20
0x4000f2b	        0x448b701c	           mov r14d, dword [rax + 0x1c] 	       996	wrstabs.c	FUNCTION_20
0x4000f2f	        0x448b7818	           mov r15d, dword [rax + 0x18] 	       997	wrstabs.c	FUNCTION_20
0x4000f33	      0xe80ef1ffff	                  call sym.stab_pop_type	       999	wrstabs.c	FUNCTION_20	CALL_1
0x4000f38	          0x4889c5	                            mov rbp, rax	       999	wrstabs.c	FUNCTION_20	CALL_1
0x4000f3b	    0x49c7c5ffffff	             mov r13, 0xffffffffffffffff	      1000	wrstabs.c	FUNCTION_20	CALL_3
0x4000f42	      0xb800000000	                              mov eax, 0	      1000	wrstabs.c	FUNCTION_20	CALL_3
0x4000f47	          0x4c89e9	                            mov rcx, r13	      1000	wrstabs.c	FUNCTION_20	CALL_3
0x4000f4a	          0x4889ef	                            mov rdi, rbp	      1000	wrstabs.c	FUNCTION_20	CALL_3
0x4000f4d	            0xf2ae	              repne scasb al, byte [rdi]	      1000	wrstabs.c	FUNCTION_20	CALL_3
0x4000f4f	          0x4889c8	                            mov rax, rcx	      1000	wrstabs.c	FUNCTION_20	CALL_3
0x4000f52	          0x48f7d0	                                 not rax	      1000	wrstabs.c	FUNCTION_20	CALL_3
0x4000f55	        0x488d7863	                   lea rdi, [rax + 0x63]	      1000	wrstabs.c	FUNCTION_20	CALL_3
0x4000f59	      0xe800000000	                          call 0x4000f5e	      1000	wrstabs.c	FUNCTION_20	CALL_3
0x4000f5e	          0x4989c4	                            mov r12, rax	      1000	wrstabs.c	FUNCTION_20	CALL_3
0x4000f61	        0x4883ec08	                              sub rsp, 8	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000f65	        0xff742410	                 push qword [rsp + 0x10]	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000f69	      0x4c8b4c2410	              mov r9, qword [rsp + 0x10]	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000f6e	          0x4989e8	                             mov r8, rbp	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000f71	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000f76	          0x4c89ea	                            mov rdx, r13	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000f79	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000f7e	          0x4889c7	                            mov rdi, rax	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000f81	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000f86	      0xe800000000	                          call 0x4000f8b	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000f8b	          0x4889ef	                            mov rdi, rbp	      1002	wrstabs.c	FUNCTION_20	CALL_4
0x4000f8e	      0xe800000000	                          call 0x4000f93	      1002	wrstabs.c	FUNCTION_20	CALL_4
0x4000f93	          0x4589f8	                           mov r8d, r15d	      1004	wrstabs.c	FUNCTION_20	IF_1	CALL_5
0x4000f96	          0x4489f1	                           mov ecx, r14d	      1004	wrstabs.c	FUNCTION_20	IF_1	CALL_5
0x4000f99	      0xba00000000	                              mov edx, 0	      1004	wrstabs.c	FUNCTION_20	IF_1	CALL_5
0x4000f9e	          0x4c89e6	                            mov rsi, r12	      1004	wrstabs.c	FUNCTION_20	IF_1	CALL_5
0x4000fa1	          0x4889df	                            mov rdi, rbx	      1004	wrstabs.c	FUNCTION_20	IF_1	CALL_5
0x4000fa4	      0xe8aef9ffff	               call sym.stab_push_string	      1004	wrstabs.c	FUNCTION_20	IF_1	CALL_5
0x4000fa9	        0x4883c410	                           add rsp, 0x10	      1004	wrstabs.c	FUNCTION_20	IF_1	CALL_5
0x4000fad	            0x85c0	                           test eax, eax	      1004	wrstabs.c	FUNCTION_20	IF_1	CALL_5
0x4000faf	            0x740d	                            je 0x4000fbe	      1004	wrstabs.c	FUNCTION_20	IF_1	CALL_5
0x4000fb1	          0x4c89e7	                            mov rdi, r12	      1007	wrstabs.c	FUNCTION_20	CALL_6
0x4000fb4	      0xe800000000	                          call 0x4000fb9	      1007	wrstabs.c	FUNCTION_20	CALL_6
0x4000fb9	      0xb801000000	                              mov eax, 1	      1009	wrstabs.c	FUNCTION_20
0x4000fbe	        0x4883c418	                           add rsp, 0x18	      1010	wrstabs.c	FUNCTION_20
0x4000fc2	              0x5b	                                 pop rbx	      1010	wrstabs.c	FUNCTION_20
0x4000fc3	              0x5d	                                 pop rbp	      1010	wrstabs.c	FUNCTION_20
0x4000fc4	            0x415c	                                 pop r12	      1010	wrstabs.c	FUNCTION_20
0x4000fc6	            0x415d	                                 pop r13	      1010	wrstabs.c	FUNCTION_20
0x4000fc8	            0x415e	                                 pop r14	      1010	wrstabs.c	FUNCTION_20
0x4000fca	            0x415f	                                 pop r15	      1010	wrstabs.c	FUNCTION_20
0x4000fcc	              0xc3	                                     ret	      1010	wrstabs.c	FUNCTION_20
stab_typedef_type	functions,0:IF,0:ELSE,0:SWITCH,0:CALL,2:WHILE,0:DO,0:FOR,0	21
0x4000a47	              0x53	                                push rbx	      1851	wrstabs.c	FUNCTION_40
0x4000a48	          0x4889fb	                            mov rbx, rdi	      1851	wrstabs.c	FUNCTION_40
0x4000a4b	    0x488dbfb80100	                  lea rdi, [rdi + 0x1b8]	      1855	wrstabs.c	FUNCTION_40
0x4000a52	      0xb900000000	                              mov ecx, 0	      1855	wrstabs.c	FUNCTION_40
0x4000a57	      0xba00000000	                              mov edx, 0	      1855	wrstabs.c	FUNCTION_40
0x4000a5c	      0xe800000000	                          call 0x4000a61	      1855	wrstabs.c	FUNCTION_40
0x4000a61	          0x4885c0	                           test rax, rax	      1856	wrstabs.c	FUNCTION_40	CALL_1
0x4000a64	            0x7409	                            je 0x4000a6f	      1856	wrstabs.c	FUNCTION_40	CALL_1
0x4000a66	        0x488b7020	            mov rsi, qword [rax + 0x20] 	      1856	wrstabs.c	FUNCTION_40	CALL_1
0x4000a6a	          0x4885f6	                           test rsi, rsi	      1856	wrstabs.c	FUNCTION_40	CALL_1
0x4000a6d	            0x7f19	                            jg 0x4000a88	      1856	wrstabs.c	FUNCTION_40	CALL_1
0x4000a6f	      0xb900000000	                              mov ecx, 0	      1856	wrstabs.c	FUNCTION_40	CALL_1
0x4000a74	      0xba40070000	                          mov edx, 0x740	      1856	wrstabs.c	FUNCTION_40	CALL_1
0x4000a79	      0xbe00000000	                              mov esi, 0	      1856	wrstabs.c	FUNCTION_40	CALL_1
0x4000a7e	      0xbf00000000	                              mov edi, 0	      1856	wrstabs.c	FUNCTION_40	CALL_1
0x4000a83	      0xe800000000	                          call 0x4000a88	      1856	wrstabs.c	FUNCTION_40	CALL_1
0x4000a88	          0x8b5028	            mov edx, dword [rax + 0x28] 	      1858	wrstabs.c	FUNCTION_40	CALL_2
0x4000a8b	          0x4889df	                            mov rdi, rbx	      1858	wrstabs.c	FUNCTION_40	CALL_2
0x4000a8e	      0xe845ffffff	         call sym.stab_push_defined_type	      1858	wrstabs.c	FUNCTION_40	CALL_2
0x4000a93	              0x5b	                                 pop rbx	      1859	wrstabs.c	FUNCTION_40
0x4000a94	              0xc3	                                     ret	      1859	wrstabs.c	FUNCTION_40
stab_bool_type	functions,0:IF,0:ELSE,0:SWITCH,1:CALL,1:WHILE,0:DO,0:FOR,0	15
0x4000a95	        0x4883ec08	                              sub rsp, 8	       749	wrstabs.c	FUNCTION_14
0x4000a99	            0x89f2	                            mov edx, esi	       749	wrstabs.c	FUNCTION_14
0x4000a9b	    0x48c7c6eaffff	             mov rsi, 0xffffffffffffffea	       760	wrstabs.c	FUNCTION_14	SWITCH_1
0x4000aa2	          0x83fa02	                              cmp edx, 2	       753	wrstabs.c	FUNCTION_14	SWITCH_1
0x4000aa5	            0x741c	                            je 0x4000ac3	       753	wrstabs.c	FUNCTION_14	SWITCH_1
0x4000aa7	    0x48c7c6dfffff	             mov rsi, 0xffffffffffffffdf	       769	wrstabs.c	FUNCTION_14	SWITCH_1
0x4000aae	          0x83fa08	                              cmp edx, 8	       753	wrstabs.c	FUNCTION_14	SWITCH_1
0x4000ab1	            0x7410	                            je 0x4000ac3	       753	wrstabs.c	FUNCTION_14	SWITCH_1
0x4000ab3	          0x83fa01	                              cmp edx, 1	       765	wrstabs.c	FUNCTION_14	SWITCH_1
0x4000ab6	        0x400f95c6	                               setne sil	       765	wrstabs.c	FUNCTION_14	SWITCH_1
0x4000aba	        0x400fb6f6	                          movzx esi, sil	       765	wrstabs.c	FUNCTION_14	SWITCH_1
0x4000abe	      0x488d74b6eb	           lea rsi, [rsi + rsi*4 - 0x15]	       765	wrstabs.c	FUNCTION_14	SWITCH_1
0x4000ac3	      0xe810ffffff	         call sym.stab_push_defined_type	       773	wrstabs.c	FUNCTION_14	CALL_1
0x4000ac8	        0x4883c408	                              add rsp, 8	       774	wrstabs.c	FUNCTION_14
0x4000acc	              0xc3	                                     ret	       774	wrstabs.c	FUNCTION_14
stab_class_method_variant	functions,0:IF,0:ELSE,0:SWITCH,0:CALL,1:WHILE,0:DO,0:FOR,0	10
0x4000706	        0x4883ec08	                              sub rsp, 8	      1737	wrstabs.c	FUNCTION_36
0x400070a	        0x8b442410	            mov eax, dword [rsp + 0x10] 	      1740	wrstabs.c	FUNCTION_36	CALL_1
0x400070e	              0x50	                                push rax	      1740	wrstabs.c	FUNCTION_36	CALL_1
0x400070f	            0x4151	                                 push r9	      1740	wrstabs.c	FUNCTION_36	CALL_1
0x4000711	          0x4589c1	                            mov r9d, r8d	      1740	wrstabs.c	FUNCTION_36	CALL_1
0x4000714	          0x4189c8	                            mov r8d, ecx	      1740	wrstabs.c	FUNCTION_36	CALL_1
0x4000717	      0xb900000000	                              mov ecx, 0	      1740	wrstabs.c	FUNCTION_36	CALL_1
0x400071c	      0xe81bfcffff	          call sym.stab_class_method_var	      1740	wrstabs.c	FUNCTION_36	CALL_1
0x4000721	        0x4883c418	                           add rsp, 0x18	      1742	wrstabs.c	FUNCTION_36
0x4000725	              0xc3	                                     ret	      1742	wrstabs.c	FUNCTION_36
stab_class_method_var	functions,0:IF,8:ELSE,5:SWITCH,1:CALL,13:WHILE,0:DO,0:FOR,0	252
0x400033c	            0x4157	                                push r15	      1648	wrstabs.c	FUNCTION_35
0x400033e	            0x4156	                                push r14	      1648	wrstabs.c	FUNCTION_35
0x4000340	            0x4155	                                push r13	      1648	wrstabs.c	FUNCTION_35
0x4000342	            0x4154	                                push r12	      1648	wrstabs.c	FUNCTION_35
0x4000344	              0x55	                                push rbp	      1648	wrstabs.c	FUNCTION_35
0x4000345	              0x53	                                push rbx	      1648	wrstabs.c	FUNCTION_35
0x4000346	        0x4883ec28	                           sub rsp, 0x28	      1648	wrstabs.c	FUNCTION_35
0x400034a	          0x4889fb	                            mov rbx, rdi	      1648	wrstabs.c	FUNCTION_35
0x400034d	        0x48893424	                    mov qword [rsp], rsi	      1648	wrstabs.c	FUNCTION_35
0x4000351	            0x89d5	                            mov ebp, edx	      1648	wrstabs.c	FUNCTION_35
0x4000353	          0x4189cf	                           mov r15d, ecx	      1648	wrstabs.c	FUNCTION_35
0x4000356	      0x4489442414	             mov dword [rsp + 0x14], r8d	      1648	wrstabs.c	FUNCTION_35
0x400035b	      0x44894c2418	             mov dword [rsp + 0x18], r9d	      1648	wrstabs.c	FUNCTION_35
0x4000360	        0x488b4760	            mov rax, qword [rdi + 0x60] 	      1654	wrstabs.c	FUNCTION_35
0x4000364	        0x448b701c	           mov r14d, dword [rax + 0x1c] 	      1654	wrstabs.c	FUNCTION_35
0x4000368	      0xe8d9fcffff	                  call sym.stab_pop_type	      1655	wrstabs.c	FUNCTION_35	CALL_1
0x400036d	          0x4989c5	                            mov r13, rax	      1655	wrstabs.c	FUNCTION_35	CALL_1
0x4000370	    0x48c744240800	                  mov qword [rsp + 8], 0	      1651	wrstabs.c	FUNCTION_35
0x4000379	      0x837c246800	               cmp dword [rsp + 0x68], 0	      1657	wrstabs.c	FUNCTION_35	IF_1
0x400037e	            0x742a	                            je 0x40003aa	      1657	wrstabs.c	FUNCTION_35	IF_1
0x4000380	          0x4585f6	                         test r14d, r14d	      1659	wrstabs.c	FUNCTION_35	IF_1
0x4000383	            0x7512	                           jne 0x4000397	      1659	wrstabs.c	FUNCTION_35	IF_1
0x4000385	        0x488b4360	            mov rax, qword [rbx + 0x60] 	      1659	wrstabs.c	FUNCTION_35	IF_1
0x4000389	        0x83781c00	               cmp dword [rax + 0x1c], 0	      1659	wrstabs.c	FUNCTION_35	IF_1
0x400038d	        0x410f95c6	                              setne r14b	      1659	wrstabs.c	FUNCTION_35	IF_1
0x4000391	        0x450fb6f6	                        movzx r14d, r14b	      1659	wrstabs.c	FUNCTION_35	IF_1
0x4000395	            0xeb06	                           jmp 0x400039d	      1659	wrstabs.c	FUNCTION_35	IF_1
0x4000397	    0x41be01000000	                             mov r14d, 1	      1659	wrstabs.c	FUNCTION_35	IF_1
0x400039d	          0x4889df	                            mov rdi, rbx	      1660	wrstabs.c	FUNCTION_35	IF_1	CALL_2
0x40003a0	      0xe8a1fcffff	                  call sym.stab_pop_type	      1660	wrstabs.c	FUNCTION_35	IF_1	CALL_2
0x40003a5	      0x4889442408	                mov qword [rsp + 8], rax	      1660	wrstabs.c	FUNCTION_35	IF_1	CALL_2
0x40003aa	        0x4c8b6360	            mov r12, qword [rbx + 0x60] 	      1663	wrstabs.c	FUNCTION_35	CALL_3
0x40003ae	          0x4d85e4	                           test r12, r12	      1663	wrstabs.c	FUNCTION_35	CALL_3
0x40003b1	            0x740a	                            je 0x40003bd	      1663	wrstabs.c	FUNCTION_35	CALL_3
0x40003b3	      0x498b542430	            mov rdx, qword [r12 + 0x30] 	      1663	wrstabs.c	FUNCTION_35	CALL_3
0x40003b8	          0x4885d2	                           test rdx, rdx	      1663	wrstabs.c	FUNCTION_35	CALL_3
0x40003bb	            0x7519	                           jne 0x40003d6	      1663	wrstabs.c	FUNCTION_35	CALL_3
0x40003bd	      0xb900000000	                              mov ecx, 0	      1663	wrstabs.c	FUNCTION_35	CALL_3
0x40003c2	      0xba7f060000	                          mov edx, 0x67f	      1663	wrstabs.c	FUNCTION_35	CALL_3
0x40003c7	      0xbe00000000	                              mov esi, 0	      1663	wrstabs.c	FUNCTION_35	CALL_3
0x40003cc	      0xbf00000000	                              mov edi, 0	      1663	wrstabs.c	FUNCTION_35	CALL_3
0x40003d1	      0xe800000000	                          call 0x40003d6	      1663	wrstabs.c	FUNCTION_35	CALL_3
0x40003d6	          0x83fd01	                              cmp ebp, 1	      1665	wrstabs.c	FUNCTION_35	SWITCH_1
0x40003d9	            0x740c	                            je 0x40003e7	      1665	wrstabs.c	FUNCTION_35	SWITCH_1
0x40003db	          0x83fd01	                              cmp ebp, 1	      1665	wrstabs.c	FUNCTION_35	SWITCH_1
0x40003de	            0x7213	                            jb 0x40003f3	      1665	wrstabs.c	FUNCTION_35	SWITCH_1
0x40003e0	          0x83fd02	                              cmp ebp, 2	      1665	wrstabs.c	FUNCTION_35	SWITCH_1
0x40003e3	            0x7415	                            je 0x40003fa	      1665	wrstabs.c	FUNCTION_35	SWITCH_1
0x40003e5	            0xeb07	                           jmp 0x40003ee	      1665	wrstabs.c	FUNCTION_35	SWITCH_1
0x40003e7	      0xc644241f31	            mov byte [rsp + 0x1f], 0x31 	      1675	wrstabs.c	FUNCTION_35	SWITCH_1
0x40003ec	            0xeb11	                           jmp 0x40003ff	      1675	wrstabs.c	FUNCTION_35	SWITCH_1
0x40003ee	      0xe800000000	                          call 0x40003f3	      1668	wrstabs.c	FUNCTION_35	SWITCH_1	CALL_4
0x40003f3	      0xc644241f32	            mov byte [rsp + 0x1f], 0x32 	      1679	wrstabs.c	FUNCTION_35	SWITCH_1
0x40003f8	            0xeb05	                           jmp 0x40003ff	      1680	wrstabs.c	FUNCTION_35	SWITCH_1
0x40003fa	      0xc644241f30	            mov byte [rsp + 0x1f], 0x30 	      1671	wrstabs.c	FUNCTION_35	SWITCH_1
0x40003ff	      0x837c241400	               cmp dword [rsp + 0x14], 0	      1683	wrstabs.c	FUNCTION_35	IF_2
0x4000404	            0x740f	                            je 0x4000415	      1683	wrstabs.c	FUNCTION_35	IF_2
0x4000406	      0x837c241801	               cmp dword [rsp + 0x18], 1	      1688	wrstabs.c	FUNCTION_35	IF_2	ELSE_1
0x400040b	            0x19ed	                            sbb ebp, ebp	      1688	wrstabs.c	FUNCTION_35	IF_2	ELSE_1
0x400040d	          0x83e5fe	                     and ebp, 0xfffffffe	      1688	wrstabs.c	FUNCTION_35	IF_2	ELSE_1
0x4000410	          0x83c544	                           add ebp, 0x44	      1688	wrstabs.c	FUNCTION_35	IF_2	ELSE_1
0x4000413	            0xeb0d	                           jmp 0x4000422	      1688	wrstabs.c	FUNCTION_35	IF_2	ELSE_1
0x4000415	      0x837c241801	               cmp dword [rsp + 0x18], 1	      1695	wrstabs.c	FUNCTION_35	ELSE_2	ELSE_3
0x400041a	            0x19ed	                            sbb ebp, ebp	      1695	wrstabs.c	FUNCTION_35	ELSE_2	ELSE_3
0x400041c	          0x83e5fe	                     and ebp, 0xfffffffe	      1695	wrstabs.c	FUNCTION_35	ELSE_2	ELSE_3
0x400041f	          0x83c543	                           add ebp, 0x43	      1695	wrstabs.c	FUNCTION_35	ELSE_2	ELSE_3
0x4000422	          0x4585ff	                         test r15d, r15d	      1698	wrstabs.c	FUNCTION_35	IF_5
0x4000425	            0x7510	                           jne 0x4000437	      1698	wrstabs.c	FUNCTION_35	IF_5
0x4000427	      0x837c246800	               cmp dword [rsp + 0x68], 0	      1700	wrstabs.c	FUNCTION_35	ELSE_4	IF_6
0x400042c	     0xf847c010000	                            je 0x40005ae	      1700	wrstabs.c	FUNCTION_35	ELSE_4	IF_6
0x4000432	      0xe931010000	                           jmp 0x4000568	      1700	wrstabs.c	FUNCTION_35	ELSE_4	IF_6
0x4000437	    0x49c7c1ffffff	              mov r9, 0xffffffffffffffff	      1707	wrstabs.c	FUNCTION_35	CALL_6
0x400043e	      0xb800000000	                              mov eax, 0	      1707	wrstabs.c	FUNCTION_35	CALL_6
0x4000443	          0x4c89c9	                             mov rcx, r9	      1707	wrstabs.c	FUNCTION_35	CALL_6
0x4000446	          0x4889d7	                            mov rdi, rdx	      1707	wrstabs.c	FUNCTION_35	CALL_6
0x4000449	            0xf2ae	              repne scasb al, byte [rdi]	      1707	wrstabs.c	FUNCTION_35	CALL_6
0x400044b	          0x4889ce	                            mov rsi, rcx	      1707	wrstabs.c	FUNCTION_35	CALL_6
0x400044e	          0x48f7d6	                                 not rsi	      1707	wrstabs.c	FUNCTION_35	CALL_6
0x4000451	          0x4c89c9	                             mov rcx, r9	      1708	wrstabs.c	FUNCTION_35	CALL_7
0x4000454	          0x4c89ef	                            mov rdi, r13	      1708	wrstabs.c	FUNCTION_35	CALL_7
0x4000457	            0xf2ae	              repne scasb al, byte [rdi]	      1708	wrstabs.c	FUNCTION_35	CALL_7
0x4000459	          0x4989c8	                             mov r8, rcx	      1708	wrstabs.c	FUNCTION_35	CALL_7
0x400045c	          0x4c89c9	                             mov rcx, r9	      1709	wrstabs.c	FUNCTION_35	CALL_8
0x400045f	        0x488b3c24	                    mov rdi, qword [rsp]	      1709	wrstabs.c	FUNCTION_35	CALL_8
0x4000463	            0xf2ae	              repne scasb al, byte [rdi]	      1709	wrstabs.c	FUNCTION_35	CALL_8
0x4000465	          0x4889c8	                            mov rax, rcx	      1709	wrstabs.c	FUNCTION_35	CALL_8
0x4000468	          0x48f7d0	                                 not rax	      1709	wrstabs.c	FUNCTION_35	CALL_8
0x400046b	          0x4c29c6	                             sub rsi, r8	      1709	wrstabs.c	FUNCTION_35	CALL_8
0x400046e	      0x488d7406fc	                lea rsi, [rsi + rax - 4]	      1709	wrstabs.c	FUNCTION_35	CALL_8
0x4000473	      0x837c246800	               cmp dword [rsp + 0x68], 0	      1710	wrstabs.c	FUNCTION_35	CALL_9
0x4000478	     0xf84e1010000	                            je 0x400065f	      1710	wrstabs.c	FUNCTION_35	CALL_9
0x400047e	      0xc64424143f	            mov byte [rsp + 0x14], 0x3f 	      1699	wrstabs.c	FUNCTION_35	IF_5
0x4000483	    0x49c7c7ffffff	             mov r15, 0xffffffffffffffff	      1710	wrstabs.c	FUNCTION_35	CALL_9
0x400048a	          0x4c89f9	                            mov rcx, r15	      1710	wrstabs.c	FUNCTION_35	CALL_9
0x400048d	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1710	wrstabs.c	FUNCTION_35	CALL_9
0x4000492	      0xb800000000	                              mov eax, 0	      1710	wrstabs.c	FUNCTION_35	CALL_9
0x4000497	            0xf2ae	              repne scasb al, byte [rdi]	      1710	wrstabs.c	FUNCTION_35	CALL_9
0x4000499	          0x48f7d1	                                 not rcx	      1710	wrstabs.c	FUNCTION_35	CALL_9
0x400049c	      0x488d740e27	            lea rsi, [rsi + rcx + 0x27] 	      1706	wrstabs.c	FUNCTION_35	CALL_5
0x40004a1	          0x4889d7	                            mov rdi, rdx	      1706	wrstabs.c	FUNCTION_35	CALL_5
0x40004a4	      0xe800000000	                          call 0x40004a9	      1706	wrstabs.c	FUNCTION_35	CALL_5
0x40004a9	      0x4989442430	             mov qword [r12 + 0x30], rax	      1705	wrstabs.c	FUNCTION_35
0x40004ae	        0x488b4360	            mov rax, qword [rbx + 0x60] 	      1713	wrstabs.c	FUNCTION_35	CALL_10
0x40004b2	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      1713	wrstabs.c	FUNCTION_35	CALL_10
0x40004b6	          0x4c89f9	                            mov rcx, r15	      1713	wrstabs.c	FUNCTION_35	CALL_10
0x40004b9	          0x4889d7	                            mov rdi, rdx	      1713	wrstabs.c	FUNCTION_35	CALL_10
0x40004bc	      0xb800000000	                              mov eax, 0	      1713	wrstabs.c	FUNCTION_35	CALL_10
0x40004c1	            0xf2ae	              repne scasb al, byte [rdi]	      1713	wrstabs.c	FUNCTION_35	CALL_10
0x40004c3	          0x48f7d1	                                 not rcx	      1713	wrstabs.c	FUNCTION_35	CALL_10
0x40004c6	      0x488d7c0aff	                lea rdi, [rdx + rcx - 1]	        33	stdio2.h	FUNCTION_54	CALL_1
0x40004cb	        0x4883ec08	                              sub rsp, 8	        33	stdio2.h	FUNCTION_54	CALL_1
0x40004cf	       0xfbe44241c	           movsx eax, byte [rsp + 0x1c] 	        33	stdio2.h	FUNCTION_54	CALL_1
0x40004d4	              0x50	                                push rax	        33	stdio2.h	FUNCTION_54	CALL_1
0x40004d5	        0x400fbeed	                          movsx ebp, bpl	        33	stdio2.h	FUNCTION_54	CALL_1
0x40004d9	              0x55	                                push rbp	        33	stdio2.h	FUNCTION_54	CALL_1
0x40004da	       0xfbe442437	           movsx eax, byte [rsp + 0x37] 	        33	stdio2.h	FUNCTION_54	CALL_1
0x40004df	              0x50	                                push rax	        33	stdio2.h	FUNCTION_54	CALL_1
0x40004e0	      0x4c8b4c2420	              mov r9, qword [rsp + 0x20]	        33	stdio2.h	FUNCTION_54	CALL_1
0x40004e5	          0x4d89e8	                             mov r8, r13	        33	stdio2.h	FUNCTION_54	CALL_1
0x40004e8	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x40004ed	          0x4c89fa	                            mov rdx, r15	        33	stdio2.h	FUNCTION_54	CALL_1
0x40004f0	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x40004f5	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x40004fa	      0xe800000000	                          call 0x40004ff	        33	stdio2.h	FUNCTION_54	CALL_1
0x40004ff	        0x4883c420	                           add rsp, 0x20	      1715	wrstabs.c	FUNCTION_35	CALL_11
0x4000503	          0x4c89ef	                            mov rdi, r13	      1715	wrstabs.c	FUNCTION_35	CALL_11
0x4000506	      0xe800000000	                          call 0x400050b	      1715	wrstabs.c	FUNCTION_35	CALL_11
0x400050b	        0x488b4360	            mov rax, qword [rbx + 0x60] 	      1719	wrstabs.c	FUNCTION_35	IF_7	CALL_12
0x400050f	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      1719	wrstabs.c	FUNCTION_35	IF_7	CALL_12
0x4000513	          0x4c89f9	                            mov rcx, r15	      1719	wrstabs.c	FUNCTION_35	IF_7	CALL_12
0x4000516	          0x4889d7	                            mov rdi, rdx	      1719	wrstabs.c	FUNCTION_35	IF_7	CALL_12
0x4000519	      0xb800000000	                              mov eax, 0	      1719	wrstabs.c	FUNCTION_35	IF_7	CALL_12
0x400051e	            0xf2ae	              repne scasb al, byte [rdi]	      1719	wrstabs.c	FUNCTION_35	IF_7	CALL_12
0x4000520	          0x48f7d1	                                 not rcx	      1719	wrstabs.c	FUNCTION_35	IF_7	CALL_12
0x4000523	      0x488d7c0aff	                lea rdi, [rdx + rcx - 1]	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000528	      0x488b6c2408	                mov rbp, qword [rsp + 8]	        33	stdio2.h	FUNCTION_54	CALL_1
0x400052d	          0x4989e9	                             mov r9, rbp	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000530	      0x4c8b442460	              mov r8, qword [rsp + 0x60]	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000535	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x400053a	          0x4c89fa	                            mov rdx, r15	        33	stdio2.h	FUNCTION_54	CALL_1
0x400053d	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000542	      0xe800000000	                          call 0x4000547	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000547	          0x4889ef	                            mov rdi, rbp	      1721	wrstabs.c	FUNCTION_35	IF_7	CALL_13
0x400054a	      0xe800000000	                          call 0x400054f	      1721	wrstabs.c	FUNCTION_35	IF_7	CALL_13
0x400054f	          0x4585f6	                         test r14d, r14d	      1724	wrstabs.c	FUNCTION_35	IF_8
0x4000552	     0xf847d010000	                            je 0x40006d5	      1724	wrstabs.c	FUNCTION_35	IF_8
0x4000558	        0x488b4360	            mov rax, qword [rbx + 0x60] 	      1725	wrstabs.c	FUNCTION_35	IF_8
0x400055c	    0xc7401c010000	               mov dword [rax + 0x1c], 1	      1725	wrstabs.c	FUNCTION_35	IF_8
0x4000563	      0xe96d010000	                           jmp 0x40006d5	      1727	wrstabs.c	FUNCTION_35
0x4000568	    0x49c7c1ffffff	              mov r9, 0xffffffffffffffff	      1707	wrstabs.c	FUNCTION_35	CALL_6
0x400056f	      0xb800000000	                              mov eax, 0	      1707	wrstabs.c	FUNCTION_35	CALL_6
0x4000574	          0x4c89c9	                             mov rcx, r9	      1707	wrstabs.c	FUNCTION_35	CALL_6
0x4000577	          0x4889d7	                            mov rdi, rdx	      1707	wrstabs.c	FUNCTION_35	CALL_6
0x400057a	            0xf2ae	              repne scasb al, byte [rdi]	      1707	wrstabs.c	FUNCTION_35	CALL_6
0x400057c	          0x4889ce	                            mov rsi, rcx	      1707	wrstabs.c	FUNCTION_35	CALL_6
0x400057f	          0x48f7d6	                                 not rsi	      1707	wrstabs.c	FUNCTION_35	CALL_6
0x4000582	          0x4c89c9	                             mov rcx, r9	      1708	wrstabs.c	FUNCTION_35	CALL_7
0x4000585	          0x4c89ef	                            mov rdi, r13	      1708	wrstabs.c	FUNCTION_35	CALL_7
0x4000588	            0xf2ae	              repne scasb al, byte [rdi]	      1708	wrstabs.c	FUNCTION_35	CALL_7
0x400058a	          0x4989c8	                             mov r8, rcx	      1708	wrstabs.c	FUNCTION_35	CALL_7
0x400058d	          0x4c89c9	                             mov rcx, r9	      1709	wrstabs.c	FUNCTION_35	CALL_8
0x4000590	        0x488b3c24	                    mov rdi, qword [rsp]	      1709	wrstabs.c	FUNCTION_35	CALL_8
0x4000594	            0xf2ae	              repne scasb al, byte [rdi]	      1709	wrstabs.c	FUNCTION_35	CALL_8
0x4000596	          0x4889c8	                            mov rax, rcx	      1709	wrstabs.c	FUNCTION_35	CALL_8
0x4000599	          0x48f7d0	                                 not rax	      1709	wrstabs.c	FUNCTION_35	CALL_8
0x400059c	          0x4c29c6	                             sub rsi, r8	      1709	wrstabs.c	FUNCTION_35	CALL_8
0x400059f	      0x488d7406fc	                lea rsi, [rsi + rax - 4]	      1709	wrstabs.c	FUNCTION_35	CALL_8
0x40005a4	      0xc64424142a	            mov byte [rsp + 0x14], 0x2a 	      1703	wrstabs.c	FUNCTION_35	ELSE_5
0x40005a9	      0xe9d5feffff	                           jmp 0x4000483	      1703	wrstabs.c	FUNCTION_35	ELSE_5
0x40005ae	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1707	wrstabs.c	FUNCTION_35	CALL_6
0x40005b5	          0x4889d7	                            mov rdi, rdx	      1707	wrstabs.c	FUNCTION_35	CALL_6
0x40005b8	      0xb800000000	                              mov eax, 0	      1707	wrstabs.c	FUNCTION_35	CALL_6
0x40005bd	            0xf2ae	              repne scasb al, byte [rdi]	      1707	wrstabs.c	FUNCTION_35	CALL_6
0x40005bf	          0x4989c8	                             mov r8, rcx	      1707	wrstabs.c	FUNCTION_35	CALL_6
0x40005c2	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1708	wrstabs.c	FUNCTION_35	CALL_7
0x40005c9	          0x4c89ef	                            mov rdi, r13	      1708	wrstabs.c	FUNCTION_35	CALL_7
0x40005cc	            0xf2ae	              repne scasb al, byte [rdi]	      1708	wrstabs.c	FUNCTION_35	CALL_7
0x40005ce	          0x4889ce	                            mov rsi, rcx	      1708	wrstabs.c	FUNCTION_35	CALL_7
0x40005d1	          0x48f7d6	                                 not rsi	      1708	wrstabs.c	FUNCTION_35	CALL_7
0x40005d4	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1709	wrstabs.c	FUNCTION_35	CALL_8
0x40005db	        0x488b3c24	                    mov rdi, qword [rsp]	      1709	wrstabs.c	FUNCTION_35	CALL_8
0x40005df	            0xf2ae	              repne scasb al, byte [rdi]	      1709	wrstabs.c	FUNCTION_35	CALL_8
0x40005e1	          0x48f7d1	                                 not rcx	      1709	wrstabs.c	FUNCTION_35	CALL_8
0x40005e4	          0x4c29c6	                             sub rsi, r8	      1706	wrstabs.c	FUNCTION_35	CALL_5
0x40005e7	      0x488d740e24	            lea rsi, [rsi + rcx + 0x24] 	      1706	wrstabs.c	FUNCTION_35	CALL_5
0x40005ec	          0x4889d7	                            mov rdi, rdx	      1706	wrstabs.c	FUNCTION_35	CALL_5
0x40005ef	      0xe800000000	                          call 0x40005f4	      1706	wrstabs.c	FUNCTION_35	CALL_5
0x40005f4	      0x4989442430	             mov qword [r12 + 0x30], rax	      1705	wrstabs.c	FUNCTION_35
0x40005f9	        0x488b4360	            mov rax, qword [rbx + 0x60] 	      1713	wrstabs.c	FUNCTION_35	CALL_10
0x40005fd	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      1713	wrstabs.c	FUNCTION_35	CALL_10
0x4000601	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1713	wrstabs.c	FUNCTION_35	CALL_10
0x4000608	          0x4889d7	                            mov rdi, rdx	      1713	wrstabs.c	FUNCTION_35	CALL_10
0x400060b	      0xb800000000	                              mov eax, 0	      1713	wrstabs.c	FUNCTION_35	CALL_10
0x4000610	            0xf2ae	              repne scasb al, byte [rdi]	      1713	wrstabs.c	FUNCTION_35	CALL_10
0x4000612	          0x48f7d1	                                 not rcx	      1713	wrstabs.c	FUNCTION_35	CALL_10
0x4000615	      0x488d7c0aff	                lea rdi, [rdx + rcx - 1]	        33	stdio2.h	FUNCTION_54	CALL_1
0x400061a	        0x4883ec08	                              sub rsp, 8	        33	stdio2.h	FUNCTION_54	CALL_1
0x400061e	            0x6a2e	                               push 0x2e	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000620	        0x400fbeed	                          movsx ebp, bpl	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000624	              0x55	                                push rbp	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000625	       0xfbe442437	           movsx eax, byte [rsp + 0x37] 	        33	stdio2.h	FUNCTION_54	CALL_1
0x400062a	              0x50	                                push rax	        33	stdio2.h	FUNCTION_54	CALL_1
0x400062b	      0x4c8b4c2420	              mov r9, qword [rsp + 0x20]	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000630	          0x4d89e8	                             mov r8, r13	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000633	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000638	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_54	CALL_1
0x400063f	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000644	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000649	      0xe800000000	                          call 0x400064e	        33	stdio2.h	FUNCTION_54	CALL_1
0x400064e	        0x4883c420	                           add rsp, 0x20	      1715	wrstabs.c	FUNCTION_35	CALL_11
0x4000652	          0x4c89ef	                            mov rdi, r13	      1715	wrstabs.c	FUNCTION_35	CALL_11
0x4000655	      0xe800000000	                          call 0x400065a	      1715	wrstabs.c	FUNCTION_35	CALL_11
0x400065a	      0xe9f0feffff	                           jmp 0x400054f	      1715	wrstabs.c	FUNCTION_35	CALL_11
0x400065f	        0x4883c628	                           add rsi, 0x28	      1706	wrstabs.c	FUNCTION_35	CALL_5
0x4000663	          0x4889d7	                            mov rdi, rdx	      1706	wrstabs.c	FUNCTION_35	CALL_5
0x4000666	      0xe800000000	                          call 0x400066b	      1706	wrstabs.c	FUNCTION_35	CALL_5
0x400066b	      0x4989442430	             mov qword [r12 + 0x30], rax	      1705	wrstabs.c	FUNCTION_35
0x4000670	        0x488b4360	            mov rax, qword [rbx + 0x60] 	      1713	wrstabs.c	FUNCTION_35	CALL_10
0x4000674	        0x488b7030	            mov rsi, qword [rax + 0x30] 	      1713	wrstabs.c	FUNCTION_35	CALL_10
0x4000678	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	      1713	wrstabs.c	FUNCTION_35	CALL_10
0x400067f	      0xb800000000	                              mov eax, 0	      1713	wrstabs.c	FUNCTION_35	CALL_10
0x4000684	          0x4889d1	                            mov rcx, rdx	      1713	wrstabs.c	FUNCTION_35	CALL_10
0x4000687	          0x4889f7	                            mov rdi, rsi	      1713	wrstabs.c	FUNCTION_35	CALL_10
0x400068a	            0xf2ae	              repne scasb al, byte [rdi]	      1713	wrstabs.c	FUNCTION_35	CALL_10
0x400068c	          0x4889c8	                            mov rax, rcx	      1713	wrstabs.c	FUNCTION_35	CALL_10
0x400068f	          0x48f7d0	                                 not rax	      1713	wrstabs.c	FUNCTION_35	CALL_10
0x4000692	      0x488d7c06ff	                lea rdi, [rsi + rax - 1]	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000697	        0x4883ec08	                              sub rsp, 8	        33	stdio2.h	FUNCTION_54	CALL_1
0x400069b	            0x6a3f	                               push 0x3f	        33	stdio2.h	FUNCTION_54	CALL_1
0x400069d	        0x400fbeed	                          movsx ebp, bpl	        33	stdio2.h	FUNCTION_54	CALL_1
0x40006a1	              0x55	                                push rbp	        33	stdio2.h	FUNCTION_54	CALL_1
0x40006a2	       0xfbe442437	           movsx eax, byte [rsp + 0x37] 	        33	stdio2.h	FUNCTION_54	CALL_1
0x40006a7	              0x50	                                push rax	        33	stdio2.h	FUNCTION_54	CALL_1
0x40006a8	      0x4c8b4c2420	              mov r9, qword [rsp + 0x20]	        33	stdio2.h	FUNCTION_54	CALL_1
0x40006ad	          0x4d89e8	                             mov r8, r13	        33	stdio2.h	FUNCTION_54	CALL_1
0x40006b0	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x40006b5	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x40006ba	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x40006bf	      0xe800000000	                          call 0x40006c4	        33	stdio2.h	FUNCTION_54	CALL_1
0x40006c4	        0x4883c420	                           add rsp, 0x20	      1715	wrstabs.c	FUNCTION_35	CALL_11
0x40006c8	          0x4c89ef	                            mov rdi, r13	      1715	wrstabs.c	FUNCTION_35	CALL_11
0x40006cb	      0xe800000000	                          call 0x40006d0	      1715	wrstabs.c	FUNCTION_35	CALL_11
0x40006d0	      0xe97afeffff	                           jmp 0x400054f	      1715	wrstabs.c	FUNCTION_35	CALL_11
0x40006d5	      0xb801000000	                              mov eax, 1	      1728	wrstabs.c	FUNCTION_35
0x40006da	        0x4883c428	                           add rsp, 0x28	      1728	wrstabs.c	FUNCTION_35
0x40006de	              0x5b	                                 pop rbx	      1728	wrstabs.c	FUNCTION_35
0x40006df	              0x5d	                                 pop rbp	      1728	wrstabs.c	FUNCTION_35
0x40006e0	            0x415c	                                 pop r12	      1728	wrstabs.c	FUNCTION_35
0x40006e2	            0x415d	                                 pop r13	      1728	wrstabs.c	FUNCTION_35
0x40006e4	            0x415e	                                 pop r14	      1728	wrstabs.c	FUNCTION_35
0x40006e6	            0x415f	                                 pop r15	      1728	wrstabs.c	FUNCTION_35
0x40006e8	              0xc3	                                     ret	      1728	wrstabs.c	FUNCTION_35
stab_start_block	functions,0:IF,5:ELSE,0:SWITCH,0:CALL,3:WHILE,0:DO,0:FOR,0	49
0x40022fc	              0x55	                                push rbp	      2162	wrstabs.c	FUNCTION_50
0x40022fd	              0x53	                                push rbx	      2162	wrstabs.c	FUNCTION_50
0x40022fe	        0x4883ec08	                              sub rsp, 8	      2162	wrstabs.c	FUNCTION_50
0x4002302	          0x4889fb	                            mov rbx, rdi	      2162	wrstabs.c	FUNCTION_50
0x4002305	          0x4889f5	                            mov rbp, rsi	      2162	wrstabs.c	FUNCTION_50
0x4002308	    0x488b87e00100	           mov rax, qword [rdi + 0x1e0] 	      2168	wrstabs.c	FUNCTION_50	IF_1
0x400230f	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      2168	wrstabs.c	FUNCTION_50	IF_1
0x4002313	            0x7421	                            je 0x4002336	      2168	wrstabs.c	FUNCTION_50	IF_1
0x4002315	        0x488b5708	                mov rdx, qword [rdi + 8]	      2170	wrstabs.c	FUNCTION_50	IF_1	CALL_1
0x4002319	      0x488d740208	                lea rsi, [rdx + rax + 8]	      2170	wrstabs.c	FUNCTION_50	IF_1	CALL_1
0x400231e	          0x488b07	                    mov rax, qword [rdi]	      2170	wrstabs.c	FUNCTION_50	IF_1	CALL_1
0x4002321	        0x488b4008	                mov rax, qword [rax + 8]	      2170	wrstabs.c	FUNCTION_50	IF_1	CALL_1
0x4002325	          0x4889ef	                            mov rdi, rbp	      2170	wrstabs.c	FUNCTION_50	IF_1	CALL_1
0x4002328	          0xff5048	                 call qword [rax + 0x48]	      2170	wrstabs.c	FUNCTION_50	IF_1	CALL_1
0x400232b	    0x48c783e00100	mov qword [rbx + 0x1e0], 0xffffffffffffffff	      2171	wrstabs.c	FUNCTION_50	IF_1
0x4002336	    0x488b83e80100	           mov rax, qword [rbx + 0x1e8] 	      2174	wrstabs.c	FUNCTION_50	IF_2
0x400233d	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      2174	wrstabs.c	FUNCTION_50	IF_2
0x4002341	            0x7421	                            je 0x4002364	      2174	wrstabs.c	FUNCTION_50	IF_2
0x4002343	        0x488b5308	                mov rdx, qword [rbx + 8]	      2176	wrstabs.c	FUNCTION_50	IF_2	CALL_2
0x4002347	      0x488d740208	                lea rsi, [rdx + rax + 8]	      2176	wrstabs.c	FUNCTION_50	IF_2	CALL_2
0x400234c	          0x488b03	                    mov rax, qword [rbx]	      2176	wrstabs.c	FUNCTION_50	IF_2	CALL_2
0x400234f	        0x488b4008	                mov rax, qword [rax + 8]	      2176	wrstabs.c	FUNCTION_50	IF_2	CALL_2
0x4002353	          0x4889ef	                            mov rdi, rbp	      2176	wrstabs.c	FUNCTION_50	IF_2	CALL_2
0x4002356	          0xff5048	                 call qword [rax + 0x48]	      2176	wrstabs.c	FUNCTION_50	IF_2	CALL_2
0x4002359	    0x48c783e80100	mov qword [rbx + 0x1e8], 0xffffffffffffffff	      2177	wrstabs.c	FUNCTION_50	IF_2
0x4002364	    0x8b83f8010000	           mov eax, dword [rbx + 0x1f8] 	      2180	wrstabs.c	FUNCTION_50
0x400236a	          0x83c001	                              add eax, 1	      2180	wrstabs.c	FUNCTION_50
0x400236d	    0x8983f8010000	            mov dword [rbx + 0x1f8], eax	      2180	wrstabs.c	FUNCTION_50
0x4002373	          0x83f801	                              cmp eax, 1	      2186	wrstabs.c	FUNCTION_50	IF_3
0x4002376	            0x7509	                           jne 0x4002381	      2186	wrstabs.c	FUNCTION_50	IF_3
0x4002378	    0x4889ab000200	            mov qword [rbx + 0x200], rbp	      2188	wrstabs.c	FUNCTION_50	IF_3
0x400237f	            0xeb3c	                           jmp 0x40023bd	      2189	wrstabs.c	FUNCTION_50	IF_3
0x4002381	    0x488b8b080200	           mov rcx, qword [rbx + 0x208] 	      2197	wrstabs.c	FUNCTION_50	IF_4
0x4002388	        0x4883f9ff	             cmp rcx, 0xffffffffffffffff	      2197	wrstabs.c	FUNCTION_50	IF_4
0x400238c	            0x741c	                            je 0x40023aa	      2197	wrstabs.c	FUNCTION_50	IF_4
0x400238e	    0x41b800000000	                              mov r8d, 0	      2199	wrstabs.c	FUNCTION_50	IF_4	IF_5	CALL_3
0x4002394	      0xba00000000	                              mov edx, 0	      2199	wrstabs.c	FUNCTION_50	IF_4	IF_5	CALL_3
0x4002399	      0xbec0000000	                           mov esi, 0xc0	      2199	wrstabs.c	FUNCTION_50	IF_4	IF_5	CALL_3
0x400239e	          0x4889df	                            mov rdi, rbx	      2199	wrstabs.c	FUNCTION_50	IF_4	IF_5	CALL_3
0x40023a1	      0xe883fcffff	              call sym.stab_write_symbol	      2199	wrstabs.c	FUNCTION_50	IF_4	IF_5	CALL_3
0x40023a6	            0x85c0	                           test eax, eax	      2199	wrstabs.c	FUNCTION_50	IF_4	IF_5	CALL_3
0x40023a8	            0x7413	                            je 0x40023bd	      2199	wrstabs.c	FUNCTION_50	IF_4	IF_5	CALL_3
0x40023aa	    0x482bab000200	            sub rbp, qword [rbx + 0x200]	      2206	wrstabs.c	FUNCTION_50
0x40023b1	    0x4889ab080200	            mov qword [rbx + 0x208], rbp	      2206	wrstabs.c	FUNCTION_50
0x40023b8	      0xb801000000	                              mov eax, 1	      2208	wrstabs.c	FUNCTION_50
0x40023bd	        0x4883c408	                              add rsp, 8	      2209	wrstabs.c	FUNCTION_50
0x40023c1	              0x5b	                                 pop rbx	      2209	wrstabs.c	FUNCTION_50
0x40023c2	              0x5d	                                 pop rbp	      2209	wrstabs.c	FUNCTION_50
0x40023c3	              0xc3	                                     ret	      2209	wrstabs.c	FUNCTION_50
stab_start_struct_type	functions,0:IF,3:ELSE,1:SWITCH,0:CALL,4:WHILE,0:DO,0:FOR,0	75
0x4001ae7	            0x4155	                                push r13	      1310	wrstabs.c	ELSE_1	FUNCTION_28
0x4001ae9	            0x4154	                                push r12	      1310	wrstabs.c	ELSE_1	FUNCTION_28
0x4001aeb	              0x55	                                push rbp	      1310	wrstabs.c	ELSE_1	FUNCTION_28
0x4001aec	              0x53	                                push rbx	      1310	wrstabs.c	ELSE_1	FUNCTION_28
0x4001aed	        0x4883ec48	                           sub rsp, 0x48	      1310	wrstabs.c	ELSE_1	FUNCTION_28
0x4001af1	          0x4889fd	                            mov rbp, rdi	      1310	wrstabs.c	ELSE_1	FUNCTION_28
0x4001af4	            0x89cb	                            mov ebx, ecx	      1310	wrstabs.c	ELSE_1	FUNCTION_28
0x4001af6	      0x448944240c	              mov dword [rsp + 0xc], r8d	      1310	wrstabs.c	ELSE_1	FUNCTION_28
0x4001afb	    0x64488b042528	                mov rax, qword fs:[0x28]	      1310	wrstabs.c	ELSE_1	FUNCTION_28
0x4001b04	      0x4889442438	             mov qword [rsp + 0x38], rax	      1310	wrstabs.c	ELSE_1	FUNCTION_28
0x4001b09	            0x31c0	                            xor eax, eax	      1310	wrstabs.c	ELSE_1	FUNCTION_28
0x4001b0b	            0x85d2	                           test edx, edx	      1316	wrstabs.c	ELSE_1	FUNCTION_28	IF_1
0x4001b0d	            0x7513	                           jne 0x4001b22	      1316	wrstabs.c	ELSE_1	FUNCTION_28	IF_1
0x4001b0f	      0xc644241000	                mov byte [rsp + 0x10], 0	      1319	wrstabs.c	ELSE_1	FUNCTION_28	IF_1
0x4001b14	    0x41bd00000000	                             mov r13d, 0	      1320	wrstabs.c	ELSE_1	FUNCTION_28	IF_1
0x4001b1a	    0x41bc00000000	                             mov r12d, 0	      1318	wrstabs.c	ELSE_1	FUNCTION_28	IF_1
0x4001b20	            0xeb42	                           jmp 0x4001b64	      1318	wrstabs.c	ELSE_1	FUNCTION_28	IF_1
0x4001b22	      0x4c8d44240c	                     lea r8, [rsp + 0xc]	      1324	wrstabs.c	FUNCTION_28	CALL_1
0x4001b27	      0xb900000000	                              mov ecx, 0	      1324	wrstabs.c	FUNCTION_28	CALL_1
0x4001b2c	      0xe832feffff	          call sym.stab_get_struct_index	      1324	wrstabs.c	FUNCTION_28	CALL_1
0x4001b31	          0x4989c4	                            mov r12, rax	      1324	wrstabs.c	FUNCTION_28	CALL_1
0x4001b34	      0xb800000000	                              mov eax, 0	      1327	wrstabs.c	FUNCTION_28	IF_2
0x4001b39	          0x4d85e4	                           test r12, r12	      1326	wrstabs.c	FUNCTION_28	IF_2
0x4001b3c	     0xf88a7000000	                            js 0x4001be9	      1326	wrstabs.c	FUNCTION_28	IF_2
0x4001b42	          0x4d89e0	                             mov r8, r12	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001b45	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001b4a	      0xba28000000	                           mov edx, 0x28	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001b4f	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001b54	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001b59	      0xe800000000	                          call 0x4001b5e	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001b5e	    0x41bd01000000	                             mov r13d, 1	      1329	wrstabs.c	FUNCTION_28
0x4001b64	          0x83fb01	                              cmp ebx, 1	      1332	wrstabs.c	FUNCTION_28	ELSE_1	CALL_2
0x4001b67	            0x19f6	                            sbb esi, esi	      1332	wrstabs.c	FUNCTION_28	ELSE_1	CALL_2
0x4001b69	          0x83e602	                              and esi, 2	      1332	wrstabs.c	FUNCTION_28	ELSE_1	CALL_2
0x4001b6c	      0x488d5c2410	                   lea rbx, [rsp + 0x10]	      1332	wrstabs.c	FUNCTION_28	ELSE_1	CALL_2
0x4001b71	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	      1332	wrstabs.c	FUNCTION_28	ELSE_1	CALL_2
0x4001b78	      0xb800000000	                              mov eax, 0	      1332	wrstabs.c	FUNCTION_28	ELSE_1	CALL_2
0x4001b7d	          0x4889d1	                            mov rcx, rdx	      1332	wrstabs.c	FUNCTION_28	ELSE_1	CALL_2
0x4001b80	          0x4889df	                            mov rdi, rbx	      1332	wrstabs.c	FUNCTION_28	ELSE_1	CALL_2
0x4001b83	            0xf2ae	              repne scasb al, byte [rdi]	      1332	wrstabs.c	FUNCTION_28	ELSE_1	CALL_2
0x4001b85	          0x4889c8	                            mov rax, rcx	      1332	wrstabs.c	FUNCTION_28	ELSE_1	CALL_2
0x4001b88	          0x48f7d0	                                 not rax	      1332	wrstabs.c	FUNCTION_28	ELSE_1	CALL_2
0x4001b8b	      0x488d7c03ff	                lea rdi, [rbx + rax - 1]	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001b90	      0x448b4c240c	              mov r9d, dword [rsp + 0xc]	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001b95	        0x448d4673	                   lea r8d, [rsi + 0x73]	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001b99	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001b9e	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001ba3	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001ba8	      0xe800000000	                          call 0x4001bad	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001bad	      0x448b44240c	              mov r8d, dword [rsp + 0xc]	      1336	wrstabs.c	FUNCTION_28	ELSE_1	IF_3	CALL_3
0x4001bb2	          0x4489e9	                           mov ecx, r13d	      1336	wrstabs.c	FUNCTION_28	ELSE_1	IF_3	CALL_3
0x4001bb5	          0x4c89e2	                            mov rdx, r12	      1336	wrstabs.c	FUNCTION_28	ELSE_1	IF_3	CALL_3
0x4001bb8	          0x4889de	                            mov rsi, rbx	      1336	wrstabs.c	FUNCTION_28	ELSE_1	IF_3	CALL_3
0x4001bbb	          0x4889ef	                            mov rdi, rbp	      1336	wrstabs.c	FUNCTION_28	ELSE_1	IF_3	CALL_3
0x4001bbe	      0xe894edffff	               call sym.stab_push_string	      1336	wrstabs.c	FUNCTION_28	ELSE_1	IF_3	CALL_3
0x4001bc3	            0x85c0	                           test eax, eax	      1336	wrstabs.c	FUNCTION_28	ELSE_1	IF_3	CALL_3
0x4001bc5	            0x7422	                            je 0x4001be9	      1336	wrstabs.c	FUNCTION_28	ELSE_1	IF_3	CALL_3
0x4001bc7	        0x488b5d60	            mov rbx, qword [rbp + 0x60] 	      1339	wrstabs.c	FUNCTION_28	ELSE_1	CALL_4
0x4001bcb	      0xbf01000000	                              mov edi, 1	      1339	wrstabs.c	FUNCTION_28	ELSE_1	CALL_4
0x4001bd0	      0xe800000000	                          call 0x4001bd5	      1339	wrstabs.c	FUNCTION_28	ELSE_1	CALL_4
0x4001bd5	        0x48894320	             mov qword [rbx + 0x20], rax	      1339	wrstabs.c	FUNCTION_28	ELSE_1	CALL_4
0x4001bd9	        0x488b4560	            mov rax, qword [rbp + 0x60] 	      1340	wrstabs.c	FUNCTION_28	ELSE_1
0x4001bdd	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1340	wrstabs.c	FUNCTION_28	ELSE_1
0x4001be1	          0xc60000	                       mov byte [rax], 0	      1340	wrstabs.c	FUNCTION_28	ELSE_1
0x4001be4	      0xb801000000	                              mov eax, 1	      1342	wrstabs.c	FUNCTION_28	ELSE_1
0x4001be9	      0x488b5c2438	            mov rbx, qword [rsp + 0x38] 	      1343	wrstabs.c	FUNCTION_28	ELSE_1
0x4001bee	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1343	wrstabs.c	FUNCTION_28	ELSE_1
0x4001bf7	            0x7405	                            je 0x4001bfe	      1343	wrstabs.c	FUNCTION_28	ELSE_1
0x4001bf9	      0xe800000000	                          call 0x4001bfe	      1343	wrstabs.c	FUNCTION_28	ELSE_1
0x4001bfe	        0x4883c448	                           add rsp, 0x48	      1343	wrstabs.c	FUNCTION_28	ELSE_1
0x4001c02	              0x5b	                                 pop rbx	      1343	wrstabs.c	FUNCTION_28	ELSE_1
0x4001c03	              0x5d	                                 pop rbp	      1343	wrstabs.c	FUNCTION_28	ELSE_1
0x4001c04	            0x415c	                                 pop r12	      1343	wrstabs.c	FUNCTION_28	ELSE_1
0x4001c06	            0x415d	                                 pop r13	      1343	wrstabs.c	FUNCTION_28	ELSE_1
0x4001c08	              0xc3	                                     ret	      1343	wrstabs.c	FUNCTION_28	ELSE_1
stab_const_type	functions,0:IF,0:ELSE,0:SWITCH,0:CALL,1:WHILE,0:DO,0:FOR,0	9
0x4001fb8	        0x4883ec08	                              sub rsp, 8	      1238	wrstabs.c	FUNCTION_25
0x4001fbc	        0x488b4760	            mov rax, qword [rdi + 0x60] 	      1241	wrstabs.c	FUNCTION_25	CALL_1
0x4001fc0	          0x8b5018	            mov edx, dword [rax + 0x18] 	      1241	wrstabs.c	FUNCTION_25	CALL_1
0x4001fc3	    0x41b800000000	                              mov r8d, 0	      1241	wrstabs.c	FUNCTION_25	CALL_1
0x4001fc9	      0xb900000000	                              mov ecx, 0	      1241	wrstabs.c	FUNCTION_25	CALL_1
0x4001fce	      0xbe6b000000	                           mov esi, 0x6b	      1241	wrstabs.c	FUNCTION_25	CALL_1
0x4001fd3	      0xe889fdffff	               call sym.stab_modify_type	      1241	wrstabs.c	FUNCTION_25	CALL_1
0x4001fd8	        0x4883c408	                              add rsp, 8	      1243	wrstabs.c	FUNCTION_25
0x4001fdc	              0xc3	                                     ret	      1243	wrstabs.c	FUNCTION_25
stab_typed_constant	functions,0:IF,1:ELSE,0:SWITCH,0:CALL,7:WHILE,0:DO,0:FOR,0	59
0x4002786	            0x4157	                                push r15	      1992	wrstabs.c	FUNCTION_46
0x4002788	            0x4156	                                push r14	      1992	wrstabs.c	FUNCTION_46
0x400278a	            0x4155	                                push r13	      1992	wrstabs.c	FUNCTION_46
0x400278c	            0x4154	                                push r12	      1992	wrstabs.c	FUNCTION_46
0x400278e	              0x55	                                push rbp	      1992	wrstabs.c	FUNCTION_46
0x400278f	              0x53	                                push rbx	      1992	wrstabs.c	FUNCTION_46
0x4002790	        0x4883ec08	                              sub rsp, 8	      1992	wrstabs.c	FUNCTION_46
0x4002794	          0x4989fc	                            mov r12, rdi	      1992	wrstabs.c	FUNCTION_46
0x4002797	          0x4989f5	                            mov r13, rsi	      1992	wrstabs.c	FUNCTION_46
0x400279a	          0x4989d6	                            mov r14, rdx	      1992	wrstabs.c	FUNCTION_46
0x400279d	      0xe8a4d8ffff	                  call sym.stab_pop_type	      1996	wrstabs.c	FUNCTION_46	CALL_1
0x40027a2	          0x4889c3	                            mov rbx, rax	      1996	wrstabs.c	FUNCTION_46	CALL_1
0x40027a5	    0x48c7c5ffffff	             mov rbp, 0xffffffffffffffff	      1998	wrstabs.c	FUNCTION_46	CALL_4
0x40027ac	      0xb800000000	                              mov eax, 0	      1998	wrstabs.c	FUNCTION_46	CALL_4
0x40027b1	          0x4889e9	                            mov rcx, rbp	      1998	wrstabs.c	FUNCTION_46	CALL_4
0x40027b4	          0x4c89ef	                            mov rdi, r13	      1998	wrstabs.c	FUNCTION_46	CALL_4
0x40027b7	            0xf2ae	              repne scasb al, byte [rdi]	      1998	wrstabs.c	FUNCTION_46	CALL_4
0x40027b9	          0x4889ca	                            mov rdx, rcx	      1998	wrstabs.c	FUNCTION_46	CALL_4
0x40027bc	          0x48f7d2	                                 not rdx	      1998	wrstabs.c	FUNCTION_46	CALL_4
0x40027bf	          0x4889e9	                            mov rcx, rbp	      1998	wrstabs.c	FUNCTION_46	CALL_4
0x40027c2	          0x4889df	                            mov rdi, rbx	      1998	wrstabs.c	FUNCTION_46	CALL_4
0x40027c5	            0xf2ae	              repne scasb al, byte [rdi]	      1998	wrstabs.c	FUNCTION_46	CALL_4
0x40027c7	          0x4889c8	                            mov rax, rcx	      1998	wrstabs.c	FUNCTION_46	CALL_4
0x40027ca	          0x48f7d0	                                 not rax	      1998	wrstabs.c	FUNCTION_46	CALL_4
0x40027cd	      0x488d7c0212	            lea rdi, [rdx + rax + 0x12] 	      1998	wrstabs.c	FUNCTION_46	CALL_4
0x40027d2	      0xe800000000	                          call 0x40027d7	      1998	wrstabs.c	FUNCTION_46	CALL_4
0x40027d7	          0x4989c7	                            mov r15, rax	      1998	wrstabs.c	FUNCTION_46	CALL_4
0x40027da	        0x4883ec08	                              sub rsp, 8	        33	stdio2.h	FUNCTION_54	CALL_1
0x40027de	            0x4156	                                push r14	        33	stdio2.h	FUNCTION_54	CALL_1
0x40027e0	          0x4989d9	                             mov r9, rbx	        33	stdio2.h	FUNCTION_54	CALL_1
0x40027e3	          0x4d89e8	                             mov r8, r13	        33	stdio2.h	FUNCTION_54	CALL_1
0x40027e6	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x40027eb	          0x4889ea	                            mov rdx, rbp	        33	stdio2.h	FUNCTION_54	CALL_1
0x40027ee	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x40027f3	          0x4889c7	                            mov rdi, rax	        33	stdio2.h	FUNCTION_54	CALL_1
0x40027f6	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x40027fb	      0xe800000000	                          call 0x4002800	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002800	          0x4889df	                            mov rdi, rbx	      2000	wrstabs.c	FUNCTION_46	CALL_5
0x4002803	      0xe800000000	                          call 0x4002808	      2000	wrstabs.c	FUNCTION_46	CALL_5
0x4002808	          0x4d89f8	                             mov r8, r15	      2002	wrstabs.c	FUNCTION_46	IF_1	CALL_6
0x400280b	      0xb900000000	                              mov ecx, 0	      2002	wrstabs.c	FUNCTION_46	IF_1	CALL_6
0x4002810	      0xba00000000	                              mov edx, 0	      2002	wrstabs.c	FUNCTION_46	IF_1	CALL_6
0x4002815	      0xbe80000000	                           mov esi, 0x80	      2002	wrstabs.c	FUNCTION_46	IF_1	CALL_6
0x400281a	          0x4c89e7	                            mov rdi, r12	      2002	wrstabs.c	FUNCTION_46	IF_1	CALL_6
0x400281d	      0xe807f8ffff	              call sym.stab_write_symbol	      2002	wrstabs.c	FUNCTION_46	IF_1	CALL_6
0x4002822	        0x4883c410	                           add rsp, 0x10	      2002	wrstabs.c	FUNCTION_46	IF_1	CALL_6
0x4002826	            0x85c0	                           test eax, eax	      2002	wrstabs.c	FUNCTION_46	IF_1	CALL_6
0x4002828	            0x740d	                            je 0x4002837	      2002	wrstabs.c	FUNCTION_46	IF_1	CALL_6
0x400282a	          0x4c89ff	                            mov rdi, r15	      2005	wrstabs.c	FUNCTION_46	CALL_7
0x400282d	      0xe800000000	                          call 0x4002832	      2005	wrstabs.c	FUNCTION_46	CALL_7
0x4002832	      0xb801000000	                              mov eax, 1	      2007	wrstabs.c	FUNCTION_46
0x4002837	        0x4883c408	                              add rsp, 8	      2008	wrstabs.c	FUNCTION_46
0x400283b	              0x5b	                                 pop rbx	      2008	wrstabs.c	FUNCTION_46
0x400283c	              0x5d	                                 pop rbp	      2008	wrstabs.c	FUNCTION_46
0x400283d	            0x415c	                                 pop r12	      2008	wrstabs.c	FUNCTION_46
0x400283f	            0x415d	                                 pop r13	      2008	wrstabs.c	FUNCTION_46
0x4002841	            0x415e	                                 pop r14	      2008	wrstabs.c	FUNCTION_46
0x4002843	            0x415f	                                 pop r15	      2008	wrstabs.c	FUNCTION_46
0x4002845	              0xc3	                                     ret	      2008	wrstabs.c	FUNCTION_46
stab_complex_type	functions,0:IF,0:ELSE,0:SWITCH,0:CALL,1:WHILE,0:DO,0:FOR,0	37
0x4000fcd	            0x4154	                                push r12	       731	wrstabs.c	FUNCTION_13
0x4000fcf	              0x55	                                push rbp	       731	wrstabs.c	FUNCTION_13
0x4000fd0	              0x53	                                push rbx	       731	wrstabs.c	FUNCTION_13
0x4000fd1	        0x4883ec48	                           sub rsp, 0x48	       731	wrstabs.c	FUNCTION_13
0x4000fd5	          0x4889fd	                            mov rbp, rdi	       731	wrstabs.c	FUNCTION_13
0x4000fd8	          0x4189f4	                           mov r12d, esi	       731	wrstabs.c	FUNCTION_13
0x4000fdb	    0x64488b042528	                mov rax, qword fs:[0x28]	       731	wrstabs.c	FUNCTION_13
0x4000fe4	      0x4889442440	             mov qword [rsp + 0x40], rax	       731	wrstabs.c	FUNCTION_13
0x4000fe9	            0x31c0	                            xor eax, eax	       731	wrstabs.c	FUNCTION_13
0x4000feb	        0x488b5f68	            mov rbx, qword [rdi + 0x68] 	       736	wrstabs.c	FUNCTION_13
0x4000fef	        0x488d4301	                      lea rax, [rbx + 1]	       737	wrstabs.c	FUNCTION_13
0x4000ff3	        0x48894768	             mov qword [rdi + 0x68], rax	       737	wrstabs.c	FUNCTION_13
0x4000ff7	              0x56	                                push rsi	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000ff8	          0x4989d9	                             mov r9, rbx	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000ffb	          0x4989d8	                             mov r8, rbx	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000ffe	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001003	      0xba32000000	                           mov edx, 0x32	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001008	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x400100d	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001012	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4001017	      0xe800000000	                          call 0x400101c	        33	stdio2.h	FUNCTION_54	CALL_1
0x400101c	        0x478d0424	                    lea r8d, [r12 + r12]	       741	wrstabs.c	FUNCTION_13	CALL_1
0x4001020	      0xb901000000	                              mov ecx, 1	       741	wrstabs.c	FUNCTION_13	CALL_1
0x4001025	          0x4889da	                            mov rdx, rbx	       741	wrstabs.c	FUNCTION_13	CALL_1
0x4001028	      0x488d742410	                   lea rsi, [rsp + 0x10]	       741	wrstabs.c	FUNCTION_13	CALL_1
0x400102d	          0x4889ef	                            mov rdi, rbp	       741	wrstabs.c	FUNCTION_13	CALL_1
0x4001030	      0xe822f9ffff	               call sym.stab_push_string	       741	wrstabs.c	FUNCTION_13	CALL_1
0x4001035	        0x4883c410	                           add rsp, 0x10	       741	wrstabs.c	FUNCTION_13	CALL_1
0x4001039	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	       742	wrstabs.c	FUNCTION_13
0x400103e	    0x644833142528	                xor rdx, qword fs:[0x28]	       742	wrstabs.c	FUNCTION_13
0x4001047	            0x7405	                            je 0x400104e	       742	wrstabs.c	FUNCTION_13
0x4001049	      0xe800000000	                          call 0x400104e	       742	wrstabs.c	FUNCTION_13
0x400104e	        0x4883c440	                           add rsp, 0x40	       742	wrstabs.c	FUNCTION_13
0x4001052	              0x5b	                                 pop rbx	       742	wrstabs.c	FUNCTION_13
0x4001053	              0x5d	                                 pop rbp	       742	wrstabs.c	FUNCTION_13
0x4001054	            0x415c	                                 pop r12	       742	wrstabs.c	FUNCTION_13
0x4001056	              0xc3	                                     ret	       742	wrstabs.c	FUNCTION_13
stab_write_symbol	functions,0:IF,5:ELSE,3:SWITCH,0:CALL,12:WHILE,0:DO,0:FOR,0	105
0x4002029	            0x4156	                                push r14	       340	wrstabs.c	FUNCTION_2
0x400202b	            0x4155	                                push r13	       340	wrstabs.c	FUNCTION_2
0x400202d	            0x4154	                                push r12	       340	wrstabs.c	FUNCTION_2
0x400202f	              0x55	                                push rbp	       340	wrstabs.c	FUNCTION_2
0x4002030	              0x53	                                push rbx	       340	wrstabs.c	FUNCTION_2
0x4002031	        0x4883ec20	                           sub rsp, 0x20	       340	wrstabs.c	FUNCTION_2
0x4002035	          0x4889fb	                            mov rbx, rdi	       340	wrstabs.c	FUNCTION_2
0x4002038	          0x4189f6	                           mov r14d, esi	       340	wrstabs.c	FUNCTION_2
0x400203b	            0x89d5	                            mov ebp, edx	       340	wrstabs.c	FUNCTION_2
0x400203d	          0x4989cd	                            mov r13, rcx	       340	wrstabs.c	FUNCTION_2
0x4002040	    0x64488b042528	                mov rax, qword fs:[0x28]	       340	wrstabs.c	FUNCTION_2
0x4002049	      0x4889442418	             mov qword [rsp + 0x18], rax	       340	wrstabs.c	FUNCTION_2
0x400204e	            0x31c0	                            xor eax, eax	       340	wrstabs.c	FUNCTION_2
0x4002050	          0x4d85c0	                             test r8, r8	       344	wrstabs.c	FUNCTION_2	IF_1
0x4002053	     0xf84a4000000	                            je 0x40020fd	       344	wrstabs.c	FUNCTION_2	IF_1
0x4002059	          0x4d89c4	                             mov r12, r8	       344	wrstabs.c	FUNCTION_2	IF_1
0x400205c	        0x488d7f38	                   lea rdi, [rdi + 0x38]	       350	wrstabs.c	FUNCTION_2	ELSE_1
0x4002060	      0xb901000000	                              mov ecx, 1	       350	wrstabs.c	FUNCTION_2	ELSE_1
0x4002065	      0xba01000000	                              mov edx, 1	       350	wrstabs.c	FUNCTION_2	ELSE_1
0x400206a	          0x4c89c6	                             mov rsi, r8	       350	wrstabs.c	FUNCTION_2	ELSE_1
0x400206d	      0xe800000000	                          call 0x4002072	       350	wrstabs.c	FUNCTION_2	ELSE_1
0x4002072	          0x4885c0	                           test rax, rax	       351	wrstabs.c	FUNCTION_2	ELSE_1	IF_2
0x4002075	            0x753d	                           jne 0x40020b4	       351	wrstabs.c	FUNCTION_2	ELSE_1	IF_2
0x4002077	      0xe800000000	                          call 0x400207c	       353	wrstabs.c	FUNCTION_2	ELSE_1	IF_2	CALL_2
0x400207c	            0x89c7	                            mov edi, eax	       353	wrstabs.c	FUNCTION_2	ELSE_1	IF_2	CALL_2
0x400207e	      0xe800000000	                          call 0x4002083	       353	wrstabs.c	FUNCTION_2	ELSE_1	IF_2	CALL_2
0x4002083	          0x4889c3	                            mov rbx, rax	       353	wrstabs.c	FUNCTION_2	ELSE_1	IF_2	CALL_2
0x4002086	      0xba05000000	                              mov edx, 5	       353	wrstabs.c	FUNCTION_2	ELSE_1	IF_2	CALL_2
0x400208b	      0xbe00000000	                              mov esi, 0	       353	wrstabs.c	FUNCTION_2	ELSE_1	IF_2	CALL_2
0x4002090	      0xbf00000000	                              mov edi, 0	       353	wrstabs.c	FUNCTION_2	ELSE_1	IF_2	CALL_2
0x4002095	      0xe800000000	                          call 0x400209a	       353	wrstabs.c	FUNCTION_2	ELSE_1	IF_2	CALL_2
0x400209a	          0x4889de	                            mov rsi, rbx	       353	wrstabs.c	FUNCTION_2	ELSE_1	IF_2	CALL_2
0x400209d	          0x4889c7	                            mov rdi, rax	       353	wrstabs.c	FUNCTION_2	ELSE_1	IF_2	CALL_2
0x40020a0	      0xb800000000	                              mov eax, 0	       353	wrstabs.c	FUNCTION_2	ELSE_1	IF_2	CALL_2
0x40020a5	      0xe800000000	                          call 0x40020aa	       353	wrstabs.c	FUNCTION_2	ELSE_1	IF_2	CALL_2
0x40020aa	      0xb800000000	                              mov eax, 0	       355	wrstabs.c	FUNCTION_2	ELSE_1	IF_2
0x40020af	      0xe9d3000000	                           jmp 0x4002187	       355	wrstabs.c	FUNCTION_2	ELSE_1	IF_2
0x40020b4	        0x488b7820	            mov rdi, qword [rax + 0x20] 	       357	wrstabs.c	FUNCTION_2	ELSE_1	IF_3
0x40020b8	          0x4889fa	                            mov rdx, rdi	       358	wrstabs.c	FUNCTION_2	ELSE_1	IF_3
0x40020bb	        0x4883ffff	             cmp rdi, 0xffffffffffffffff	       357	wrstabs.c	FUNCTION_2	ELSE_1	IF_3
0x40020bf	            0x7541	                           jne 0x4002102	       357	wrstabs.c	FUNCTION_2	ELSE_1	IF_3
0x40020c1	        0x488b5330	            mov rdx, qword [rbx + 0x30] 	       361	wrstabs.c	FUNCTION_2	ELSE_1	ELSE_2
0x40020c5	        0x48895020	             mov qword [rax + 0x20], rdx	       362	wrstabs.c	FUNCTION_2	ELSE_1	ELSE_2
0x40020c9	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	       363	wrstabs.c	FUNCTION_2	ELSE_1	ELSE_2	IF_4
0x40020cd	          0x4885c9	                           test rcx, rcx	       363	wrstabs.c	FUNCTION_2	ELSE_1	ELSE_2	IF_4
0x40020d0	            0x7506	                           jne 0x40020d8	       363	wrstabs.c	FUNCTION_2	ELSE_1	ELSE_2	IF_4
0x40020d2	        0x48894320	             mov qword [rbx + 0x20], rax	       364	wrstabs.c	FUNCTION_2	ELSE_1	ELSE_2	IF_4
0x40020d6	            0xeb04	                           jmp 0x40020dc	       364	wrstabs.c	FUNCTION_2	ELSE_1	ELSE_2	IF_4
0x40020d8	        0x48894118	             mov qword [rcx + 0x18], rax	       366	wrstabs.c	FUNCTION_2	ELSE_1	ELSE_2	ELSE_3
0x40020dc	        0x48894328	             mov qword [rbx + 0x28], rax	       367	wrstabs.c	FUNCTION_2	ELSE_1	ELSE_2
0x40020e0	      0xb800000000	                              mov eax, 0	       368	wrstabs.c	FUNCTION_2	ELSE_1	ELSE_2	CALL_5
0x40020e5	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       368	wrstabs.c	FUNCTION_2	ELSE_1	ELSE_2	CALL_5
0x40020ec	          0x4c89e7	                            mov rdi, r12	       368	wrstabs.c	FUNCTION_2	ELSE_1	ELSE_2	CALL_5
0x40020ef	            0xf2ae	              repne scasb al, byte [rdi]	       368	wrstabs.c	FUNCTION_2	ELSE_1	ELSE_2	CALL_5
0x40020f1	          0x4889c8	                            mov rax, rcx	       368	wrstabs.c	FUNCTION_2	ELSE_1	ELSE_2	CALL_5
0x40020f4	          0x48f7d0	                                 not rax	       368	wrstabs.c	FUNCTION_2	ELSE_1	ELSE_2	CALL_5
0x40020f7	        0x48014330	            add qword [rbx + 0x30], rax 	       368	wrstabs.c	FUNCTION_2	ELSE_1	ELSE_2	CALL_5
0x40020fb	            0xeb05	                           jmp 0x4002102	       368	wrstabs.c	FUNCTION_2	ELSE_1	ELSE_2	CALL_5
0x40020fd	      0xba00000000	                              mov edx, 0	       345	wrstabs.c	FUNCTION_2	IF_1
0x4002102	          0x488b03	                    mov rax, qword [rbx]	       373	wrstabs.c	FUNCTION_2	CALL_6
0x4002105	        0x488b4008	                mov rax, qword [rax + 8]	       373	wrstabs.c	FUNCTION_2	CALL_6
0x4002109	          0x4889e6	                            mov rsi, rsp	       373	wrstabs.c	FUNCTION_2	CALL_6
0x400210c	          0x4889d7	                            mov rdi, rdx	       373	wrstabs.c	FUNCTION_2	CALL_6
0x400210f	          0xff5048	                 call qword [rax + 0x48]	       373	wrstabs.c	FUNCTION_2	CALL_6
0x4002112	      0x4488742404	                mov byte [rsp + 4], r14b	       374	wrstabs.c	FUNCTION_2	CALL_7
0x4002117	      0xc644240500	                   mov byte [rsp + 5], 0	       375	wrstabs.c	FUNCTION_2	CALL_8
0x400211c	      0x488d742406	                      lea rsi, [rsp + 6]	       376	wrstabs.c	FUNCTION_2	CALL_9
0x4002121	          0x4863fd	                         movsxd rdi, ebp	       376	wrstabs.c	FUNCTION_2	CALL_9
0x4002124	          0x488b03	                    mov rax, qword [rbx]	       376	wrstabs.c	FUNCTION_2	CALL_9
0x4002127	        0x488b4008	                mov rax, qword [rax + 8]	       376	wrstabs.c	FUNCTION_2	CALL_9
0x400212b	          0xff5060	                 call qword [rax + 0x60]	       376	wrstabs.c	FUNCTION_2	CALL_9
0x400212e	      0x488d742408	                      lea rsi, [rsp + 8]	       377	wrstabs.c	FUNCTION_2	CALL_10
0x4002133	          0x488b03	                    mov rax, qword [rbx]	       377	wrstabs.c	FUNCTION_2	CALL_10
0x4002136	        0x488b4008	                mov rax, qword [rax + 8]	       377	wrstabs.c	FUNCTION_2	CALL_10
0x400213a	          0x4c89ef	                            mov rdi, r13	       377	wrstabs.c	FUNCTION_2	CALL_10
0x400213d	          0xff5048	                 call qword [rax + 0x48]	       377	wrstabs.c	FUNCTION_2	CALL_10
0x4002140	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	       379	wrstabs.c	FUNCTION_2	IF_5
0x4002144	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       379	wrstabs.c	FUNCTION_2	IF_5
0x4002148	        0x4883c00c	                            add rax, 0xc	       379	wrstabs.c	FUNCTION_2	IF_5
0x400214c	          0x4839f0	                            cmp rax, rsi	       379	wrstabs.c	FUNCTION_2	IF_5
0x400214f	            0x7614	                           jbe 0x4002165	       379	wrstabs.c	FUNCTION_2	IF_5
0x4002151	          0x4801f6	                            add rsi, rsi	       381	wrstabs.c	FUNCTION_2	IF_5
0x4002154	        0x48897318	             mov qword [rbx + 0x18], rsi	       381	wrstabs.c	FUNCTION_2	IF_5
0x4002158	        0x488b7b08	                mov rdi, qword [rbx + 8]	       382	wrstabs.c	FUNCTION_2	IF_5	CALL_11
0x400215c	      0xe800000000	                          call 0x4002161	       382	wrstabs.c	FUNCTION_2	IF_5	CALL_11
0x4002161	        0x48894308	                mov qword [rbx + 8], rax	       382	wrstabs.c	FUNCTION_2	IF_5	CALL_11
0x4002165	        0x488b5308	                mov rdx, qword [rbx + 8]	        53	string3.h	FUNCTION_71	CALL_3
0x4002169	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        53	string3.h	FUNCTION_71	CALL_3
0x400216d	        0x488b0c24	                    mov rcx, qword [rsp]	        53	string3.h	FUNCTION_71	CALL_3
0x4002171	        0x48890c02	              mov qword [rdx + rax], rcx	        53	string3.h	FUNCTION_71	CALL_3
0x4002175	        0x8b4c2408	                mov ecx, dword [rsp + 8]	        53	string3.h	FUNCTION_71	CALL_3
0x4002179	        0x894c0208	          mov dword [rdx + rax + 8], ecx	        53	string3.h	FUNCTION_71	CALL_3
0x400217d	      0x488343100c	             add qword [rbx + 0x10], 0xc	       388	wrstabs.c	FUNCTION_2
0x4002182	      0xb801000000	                              mov eax, 1	       390	wrstabs.c	FUNCTION_2
0x4002187	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       391	wrstabs.c	FUNCTION_2
0x400218c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       391	wrstabs.c	FUNCTION_2
0x4002195	            0x7405	                            je 0x400219c	       391	wrstabs.c	FUNCTION_2
0x4002197	      0xe800000000	                          call 0x400219c	       391	wrstabs.c	FUNCTION_2
0x400219c	        0x4883c420	                           add rsp, 0x20	       391	wrstabs.c	FUNCTION_2
0x40021a0	              0x5b	                                 pop rbx	       391	wrstabs.c	FUNCTION_2
0x40021a1	              0x5d	                                 pop rbp	       391	wrstabs.c	FUNCTION_2
0x40021a2	            0x415c	                                 pop r12	       391	wrstabs.c	FUNCTION_2
0x40021a4	            0x415d	                                 pop r13	       391	wrstabs.c	FUNCTION_2
0x40021a6	            0x415e	                                 pop r14	       391	wrstabs.c	FUNCTION_2
0x40021a8	              0xc3	                                     ret	       391	wrstabs.c	FUNCTION_2
stab_function_type	functions,0:IF,2:ELSE,1:SWITCH,0:CALL,9:WHILE,0:DO,0:FOR,1	69
0x4002bbc	            0x4157	                                push r15	       942	wrstabs.c	FUNCTION_18
0x4002bbe	            0x4156	                                push r14	       942	wrstabs.c	FUNCTION_18
0x4002bc0	            0x4155	                                push r13	       942	wrstabs.c	FUNCTION_18
0x4002bc2	            0x4154	                                push r12	       942	wrstabs.c	FUNCTION_18
0x4002bc4	              0x55	                                push rbp	       942	wrstabs.c	FUNCTION_18
0x4002bc5	              0x53	                                push rbx	       942	wrstabs.c	FUNCTION_18
0x4002bc6	        0x4883ec08	                              sub rsp, 8	       942	wrstabs.c	FUNCTION_18
0x4002bca	          0x4889fd	                            mov rbp, rdi	       942	wrstabs.c	FUNCTION_18
0x4002bcd	            0x85f6	                           test esi, esi	       949	wrstabs.c	FUNCTION_18	FOR_1
0x4002bcf	     0xf8eac000000	                           jle 0x4002c81	       949	wrstabs.c	FUNCTION_18	FOR_1
0x4002bd5	          0x4189f5	                           mov r13d, esi	       949	wrstabs.c	FUNCTION_18	FOR_1
0x4002bd8	      0xbb00000000	                              mov ebx, 0	       949	wrstabs.c	FUNCTION_18	FOR_1
0x4002bdd	    0x49c7c6ffffff	             mov r14, 0xffffffffffffffff	       959	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	CALL_5
0x4002be4	        0x488b4560	            mov rax, qword [rbp + 0x60] 	       951	wrstabs.c	FUNCTION_18	FOR_1	IF_1
0x4002be8	        0x83781c00	               cmp dword [rax + 0x1c], 0	       951	wrstabs.c	FUNCTION_18	FOR_1	IF_1
0x4002bec	            0x7512	                           jne 0x4002c00	       951	wrstabs.c	FUNCTION_18	FOR_1	IF_1
0x4002bee	          0x4889ef	                            mov rdi, rbp	       952	wrstabs.c	FUNCTION_18	FOR_1	CALL_2
0x4002bf1	      0xe850d4ffff	                  call sym.stab_pop_type	       952	wrstabs.c	FUNCTION_18	FOR_1	CALL_2
0x4002bf6	          0x4889c7	                            mov rdi, rax	       952	wrstabs.c	FUNCTION_18	FOR_1	CALL_2
0x4002bf9	      0xe800000000	                          call 0x4002bfe	       952	wrstabs.c	FUNCTION_18	FOR_1	CALL_2
0x4002bfe	            0xeb75	                           jmp 0x4002c75	       952	wrstabs.c	FUNCTION_18	FOR_1	CALL_2
0x4002c00	          0x4889ef	                            mov rdi, rbp	       957	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	CALL_3
0x4002c03	      0xe83ed4ffff	                  call sym.stab_pop_type	       957	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	CALL_3
0x4002c08	          0x4989c4	                            mov r12, rax	       957	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	CALL_3
0x4002c0b	      0xb800000000	                              mov eax, 0	       959	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	CALL_5
0x4002c10	          0x4c89f1	                            mov rcx, r14	       959	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	CALL_5
0x4002c13	          0x4c89e7	                            mov rdi, r12	       959	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	CALL_5
0x4002c16	            0xf2ae	              repne scasb al, byte [rdi]	       959	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	CALL_5
0x4002c18	          0x4889c8	                            mov rax, rcx	       959	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	CALL_5
0x4002c1b	          0x48f7d0	                                 not rax	       959	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	CALL_5
0x4002c1e	        0x488d7802	                      lea rdi, [rax + 2]	       959	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	CALL_5
0x4002c22	      0xe800000000	                          call 0x4002c27	       959	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	CALL_5
0x4002c27	          0x4989c7	                            mov r15, rax	       959	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	CALL_5
0x4002c2a	          0x4d89e0	                             mov r8, r12	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002c2d	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002c32	          0x4c89f2	                            mov rdx, r14	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002c35	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002c3a	          0x4889c7	                            mov rdi, rax	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002c3d	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002c42	      0xe800000000	                          call 0x4002c47	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002c47	          0x4c89e7	                            mov rdi, r12	       961	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	CALL_6
0x4002c4a	      0xe800000000	                          call 0x4002c4f	       961	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	CALL_6
0x4002c4f	          0x4d89f8	                             mov r8, r15	       963	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	IF_2	CALL_7
0x4002c52	      0xb900000000	                              mov ecx, 0	       963	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	IF_2	CALL_7
0x4002c57	      0xba00000000	                              mov edx, 0	       963	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	IF_2	CALL_7
0x4002c5c	      0xbe80000000	                           mov esi, 0x80	       963	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	IF_2	CALL_7
0x4002c61	          0x4889ef	                            mov rdi, rbp	       963	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	IF_2	CALL_7
0x4002c64	      0xe8c0f3ffff	              call sym.stab_write_symbol	       963	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	IF_2	CALL_7
0x4002c69	            0x85c0	                           test eax, eax	       963	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	IF_2	CALL_7
0x4002c6b	            0x7434	                            je 0x4002ca1	       963	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	IF_2	CALL_7
0x4002c6d	          0x4c89ff	                            mov rdi, r15	       966	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	CALL_8
0x4002c70	      0xe800000000	                          call 0x4002c75	       966	wrstabs.c	FUNCTION_18	FOR_1	ELSE_1	CALL_8
0x4002c75	          0x83c301	                              add ebx, 1	       949	wrstabs.c	FUNCTION_18	FOR_1
0x4002c78	          0x4139dd	                           cmp r13d, ebx	       949	wrstabs.c	FUNCTION_18	FOR_1
0x4002c7b	     0xf8563ffffff	                           jne 0x4002be4	       949	wrstabs.c	FUNCTION_18	FOR_1
0x4002c81	    0x488d8d880100	                  lea rcx, [rbp + 0x188]	       970	wrstabs.c	FUNCTION_18	CALL_9
0x4002c88	    0x4c8d85900100	                   lea r8, [rbp + 0x190]	       970	wrstabs.c	FUNCTION_18	CALL_9
0x4002c8f	      0xba00000000	                              mov edx, 0	       970	wrstabs.c	FUNCTION_18	CALL_9
0x4002c94	      0xbe66000000	                           mov esi, 0x66	       970	wrstabs.c	FUNCTION_18	CALL_9
0x4002c99	          0x4889ef	                            mov rdi, rbp	       970	wrstabs.c	FUNCTION_18	CALL_9
0x4002c9c	      0xe8c0f0ffff	               call sym.stab_modify_type	       970	wrstabs.c	FUNCTION_18	CALL_9
0x4002ca1	        0x4883c408	                              add rsp, 8	       972	wrstabs.c	FUNCTION_18
0x4002ca5	              0x5b	                                 pop rbx	       972	wrstabs.c	FUNCTION_18
0x4002ca6	              0x5d	                                 pop rbp	       972	wrstabs.c	FUNCTION_18
0x4002ca7	            0x415c	                                 pop r12	       972	wrstabs.c	FUNCTION_18
0x4002ca9	            0x415d	                                 pop r13	       972	wrstabs.c	FUNCTION_18
0x4002cab	            0x415e	                                 pop r14	       972	wrstabs.c	FUNCTION_18
0x4002cad	            0x415f	                                 pop r15	       972	wrstabs.c	FUNCTION_18
0x4002caf	              0xc3	                                     ret	       972	wrstabs.c	FUNCTION_18
stab_reference_type	functions,0:IF,0:ELSE,0:SWITCH,0:CALL,1:WHILE,0:DO,0:FOR,0	8
0x4001fdd	        0x4883ec08	                              sub rsp, 8	       978	wrstabs.c	FUNCTION_19
0x4001fe1	    0x488d8f980100	                  lea rcx, [rdi + 0x198]	       982	wrstabs.c	FUNCTION_19	CALL_1
0x4001fe8	    0x4c8d87a00100	                   lea r8, [rdi + 0x1a0]	       982	wrstabs.c	FUNCTION_19	CALL_1
0x4001fef	      0xba04000000	                              mov edx, 4	       982	wrstabs.c	FUNCTION_19	CALL_1
0x4001ff4	      0xbe26000000	                           mov esi, 0x26	       982	wrstabs.c	FUNCTION_19	CALL_1
0x4001ff9	      0xe863fdffff	               call sym.stab_modify_type	       982	wrstabs.c	FUNCTION_19	CALL_1
0x4001ffe	        0x4883c408	                              add rsp, 8	       984	wrstabs.c	FUNCTION_19
0x4002002	              0xc3	                                     ret	       984	wrstabs.c	FUNCTION_19
stab_enum_type	functions,0:IF,7:ELSE,2:SWITCH,0:CALL,15:WHILE,0:DO,0:FOR,2	191
0x4002f1d	            0x4157	                                push r15	       781	wrstabs.c	FUNCTION_15
0x4002f1f	            0x4156	                                push r14	       781	wrstabs.c	FUNCTION_15
0x4002f21	            0x4155	                                push r13	       781	wrstabs.c	FUNCTION_15
0x4002f23	            0x4154	                                push r12	       781	wrstabs.c	FUNCTION_15
0x4002f25	              0x55	                                push rbp	       781	wrstabs.c	FUNCTION_15
0x4002f26	              0x53	                                push rbx	       781	wrstabs.c	FUNCTION_15
0x4002f27	        0x4883ec18	                           sub rsp, 0x18	       781	wrstabs.c	FUNCTION_15
0x4002f2b	        0x48893c24	                    mov qword [rsp], rdi	       781	wrstabs.c	FUNCTION_15
0x4002f2f	          0x4989f7	                            mov r15, rsi	       781	wrstabs.c	FUNCTION_15
0x4002f32	          0x4885d2	                           test rdx, rdx	       789	wrstabs.c	FUNCTION_15	IF_1
0x4002f35	     0xf8597000000	                           jne 0x4002fd2	       789	wrstabs.c	FUNCTION_15	IF_1
0x4002f3b	          0x4885f6	                           test rsi, rsi	       791	wrstabs.c	FUNCTION_15	IF_1	CALL_1
0x4002f3e	            0x7519	                           jne 0x4002f59	       791	wrstabs.c	FUNCTION_15	IF_1	CALL_1
0x4002f40	      0xb900000000	                              mov ecx, 0	       791	wrstabs.c	FUNCTION_15	IF_1	CALL_1
0x4002f45	      0xba17030000	                          mov edx, 0x317	       791	wrstabs.c	FUNCTION_15	IF_1	CALL_1
0x4002f4a	      0xbe00000000	                              mov esi, 0	       791	wrstabs.c	FUNCTION_15	IF_1	CALL_1
0x4002f4f	      0xbf00000000	                              mov edi, 0	       791	wrstabs.c	FUNCTION_15	IF_1	CALL_1
0x4002f54	      0xe800000000	                          call 0x4002f59	       791	wrstabs.c	FUNCTION_15	IF_1	CALL_1
0x4002f59	    0x48c7c3ffffff	             mov rbx, 0xffffffffffffffff	       793	wrstabs.c	FUNCTION_15	IF_1	CALL_3
0x4002f60	      0xb800000000	                              mov eax, 0	       793	wrstabs.c	FUNCTION_15	IF_1	CALL_3
0x4002f65	          0x4889d9	                            mov rcx, rbx	       793	wrstabs.c	FUNCTION_15	IF_1	CALL_3
0x4002f68	          0x4889f7	                            mov rdi, rsi	       793	wrstabs.c	FUNCTION_15	IF_1	CALL_3
0x4002f6b	            0xf2ae	              repne scasb al, byte [rdi]	       793	wrstabs.c	FUNCTION_15	IF_1	CALL_3
0x4002f6d	          0x4889c8	                            mov rax, rcx	       793	wrstabs.c	FUNCTION_15	IF_1	CALL_3
0x4002f70	          0x48f7d0	                                 not rax	       793	wrstabs.c	FUNCTION_15	IF_1	CALL_3
0x4002f73	        0x488d7809	                      lea rdi, [rax + 9]	       793	wrstabs.c	FUNCTION_15	IF_1	CALL_3
0x4002f77	      0xe800000000	                          call 0x4002f7c	       793	wrstabs.c	FUNCTION_15	IF_1	CALL_3
0x4002f7c	          0x4889c5	                            mov rbp, rax	       793	wrstabs.c	FUNCTION_15	IF_1	CALL_3
0x4002f7f	          0x4d89f8	                             mov r8, r15	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002f82	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002f87	          0x4889da	                            mov rdx, rbx	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002f8a	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002f8f	          0x4889c7	                            mov rdi, rax	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002f92	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002f97	      0xe800000000	                          call 0x4002f9c	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002f9c	    0x41b804000000	                              mov r8d, 4	       796	wrstabs.c	FUNCTION_15	IF_1	IF_2	CALL_4
0x4002fa2	      0xb900000000	                              mov ecx, 0	       796	wrstabs.c	FUNCTION_15	IF_1	IF_2	CALL_4
0x4002fa7	      0xba00000000	                              mov edx, 0	       796	wrstabs.c	FUNCTION_15	IF_1	IF_2	CALL_4
0x4002fac	          0x4889ee	                            mov rsi, rbp	       796	wrstabs.c	FUNCTION_15	IF_1	IF_2	CALL_4
0x4002faf	        0x488b3c24	                    mov rdi, qword [rsp]	       796	wrstabs.c	FUNCTION_15	IF_1	IF_2	CALL_4
0x4002fb3	      0xe89fd9ffff	               call sym.stab_push_string	       796	wrstabs.c	FUNCTION_15	IF_1	IF_2	CALL_4
0x4002fb8	            0x85c0	                           test eax, eax	       796	wrstabs.c	FUNCTION_15	IF_1	IF_2	CALL_4
0x4002fba	     0xf843a020000	                            je 0x40031fa	       796	wrstabs.c	FUNCTION_15	IF_1	IF_2	CALL_4
0x4002fc0	          0x4889ef	                            mov rdi, rbp	       798	wrstabs.c	FUNCTION_15	IF_1	CALL_5
0x4002fc3	      0xe800000000	                          call 0x4002fc8	       798	wrstabs.c	FUNCTION_15	IF_1	CALL_5
0x4002fc8	      0xb801000000	                              mov eax, 1	       799	wrstabs.c	FUNCTION_15	IF_1
0x4002fcd	      0xe928020000	                           jmp 0x40031fa	       799	wrstabs.c	FUNCTION_15	IF_1
0x4002fd2	          0x4889d3	                            mov rbx, rdx	       799	wrstabs.c	FUNCTION_15	IF_1
0x4002fd5	          0x4889cd	                            mov rbp, rcx	       799	wrstabs.c	FUNCTION_15	IF_1
0x4002fd8	          0x4885f6	                           test rsi, rsi	       803	wrstabs.c	FUNCTION_15	IF_3
0x4002fdb	     0xf84b3010000	                            je 0x4003194	       803	wrstabs.c	FUNCTION_15	IF_3
0x4002fe1	      0xb800000000	                              mov eax, 0	       804	wrstabs.c	FUNCTION_15	CALL_6
0x4002fe6	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       804	wrstabs.c	FUNCTION_15	CALL_6
0x4002fed	          0x4889f7	                            mov rdi, rsi	       804	wrstabs.c	FUNCTION_15	CALL_6
0x4002ff0	            0xf2ae	              repne scasb al, byte [rdi]	       804	wrstabs.c	FUNCTION_15	CALL_6
0x4002ff2	          0x48f7d1	                                 not rcx	       804	wrstabs.c	FUNCTION_15	CALL_6
0x4002ff5	        0x488d7109	                      lea rsi, [rcx + 9]	       804	wrstabs.c	FUNCTION_15	CALL_6
0x4002ff9	          0x488b3a	                    mov rdi, qword [rdx]	       805	wrstabs.c	FUNCTION_15	FOR_1
0x4002ffc	          0x4885ff	                           test rdi, rdi	       805	wrstabs.c	FUNCTION_15	FOR_1
0x4002fff	            0x750a	                           jne 0x400300b	       805	wrstabs.c	FUNCTION_15	FOR_1
0x4003001	      0xe99c010000	                           jmp 0x40031a2	       805	wrstabs.c	FUNCTION_15	FOR_1
0x4003006	      0xbe0a000000	                            mov esi, 0xa	       802	wrstabs.c	FUNCTION_15
0x400300b	          0x4889da	                            mov rdx, rbx	       802	wrstabs.c	FUNCTION_15
0x400300e	    0x49c7c0ffffff	              mov r8, 0xffffffffffffffff	       806	wrstabs.c	FUNCTION_15	CALL_7
0x4003015	      0xb800000000	                              mov eax, 0	       806	wrstabs.c	FUNCTION_15	CALL_7
0x400301a	          0x4c89c1	                             mov rcx, r8	       806	wrstabs.c	FUNCTION_15	CALL_7
0x400301d	            0xf2ae	              repne scasb al, byte [rdi]	       806	wrstabs.c	FUNCTION_15	CALL_7
0x400301f	          0x4889cf	                            mov rdi, rcx	       806	wrstabs.c	FUNCTION_15	CALL_7
0x4003022	          0x48f7d7	                                 not rdi	       806	wrstabs.c	FUNCTION_15	CALL_7
0x4003025	      0x488d743e13	            lea rsi, [rsi + rdi + 0x13] 	       806	wrstabs.c	FUNCTION_15	CALL_7
0x400302a	        0x4883c208	                              add rdx, 8	       805	wrstabs.c	FUNCTION_15	FOR_1
0x400302e	          0x488b3a	                    mov rdi, qword [rdx]	       805	wrstabs.c	FUNCTION_15	FOR_1
0x4003031	          0x4885ff	                           test rdi, rdi	       805	wrstabs.c	FUNCTION_15	FOR_1
0x4003034	            0x75e4	                           jne 0x400301a	       805	wrstabs.c	FUNCTION_15	FOR_1
0x4003036	          0x4889f7	                            mov rdi, rsi	       808	wrstabs.c	FUNCTION_15	CALL_8
0x4003039	      0xe800000000	                          call 0x400303e	       808	wrstabs.c	FUNCTION_15	CALL_8
0x400303e	          0x4989c4	                            mov r12, rax	       808	wrstabs.c	FUNCTION_15	CALL_8
0x4003041	          0x4d85ff	                           test r15, r15	       810	wrstabs.c	FUNCTION_15	IF_4
0x4003044	            0x7514	                           jne 0x400305a	       810	wrstabs.c	FUNCTION_15	IF_4
0x4003046	    0x6641c7042465	                    mov word [r12], 0x65	       110	string3.h	FUNCTION_77	CALL_3
0x400304d	          0x4c8b03	                     mov r8, qword [rbx]	       819	wrstabs.c	FUNCTION_15	FOR_2
0x4003050	          0x4d85c0	                             test r8, r8	       819	wrstabs.c	FUNCTION_15	FOR_2
0x4003053	            0x754b	                           jne 0x40030a0	       819	wrstabs.c	FUNCTION_15	FOR_2
0x4003055	      0xe958010000	                           jmp 0x40031b2	       819	wrstabs.c	FUNCTION_15	FOR_2
0x400305a	        0x488b3424	                    mov rsi, qword [rsp]	       814	wrstabs.c	FUNCTION_15	ELSE_1
0x400305e	        0x488b4668	            mov rax, qword [rsi + 0x68] 	       814	wrstabs.c	FUNCTION_15	ELSE_1
0x4003062	          0x4989c1	                             mov r9, rax	       814	wrstabs.c	FUNCTION_15	ELSE_1
0x4003065	      0x4889442408	                mov qword [rsp + 8], rax	       814	wrstabs.c	FUNCTION_15	ELSE_1
0x400306a	        0x4883c001	                              add rax, 1	       815	wrstabs.c	FUNCTION_15	ELSE_1
0x400306e	        0x48894668	             mov qword [rsi + 0x68], rax	       815	wrstabs.c	FUNCTION_15	ELSE_1
0x4003072	          0x4d89f8	                             mov r8, r15	        33	stdio2.h	FUNCTION_54	CALL_1
0x4003075	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x400307a	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_54	CALL_1
0x4003081	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x4003086	          0x4c89e7	                            mov rdi, r12	        33	stdio2.h	FUNCTION_54	CALL_1
0x4003089	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x400308e	      0xe800000000	                          call 0x4003093	        33	stdio2.h	FUNCTION_54	CALL_1
0x4003093	          0x4c8b03	                     mov r8, qword [rbx]	       819	wrstabs.c	FUNCTION_15	FOR_2
0x4003096	          0x4d85c0	                             test r8, r8	       819	wrstabs.c	FUNCTION_15	FOR_2
0x4003099	            0x750e	                           jne 0x40030a9	       819	wrstabs.c	FUNCTION_15	FOR_2
0x400309b	      0xe936010000	                           jmp 0x40031d6	       819	wrstabs.c	FUNCTION_15	FOR_2
0x40030a0	    0x48c744240800	                  mov qword [rsp + 8], 0	       786	wrstabs.c	FUNCTION_15
0x40030a9	    0x49c7c6ffffff	             mov r14, 0xffffffffffffffff	       820	wrstabs.c	FUNCTION_15	CALL_10
0x40030b0	    0x41bd00000000	                             mov r13d, 0	       820	wrstabs.c	FUNCTION_15	CALL_10
0x40030b6	          0x4c89f1	                            mov rcx, r14	       820	wrstabs.c	FUNCTION_15	CALL_10
0x40030b9	          0x4c89e7	                            mov rdi, r12	       820	wrstabs.c	FUNCTION_15	CALL_10
0x40030bc	          0x4489e8	                           mov eax, r13d	       820	wrstabs.c	FUNCTION_15	CALL_10
0x40030bf	            0xf2ae	              repne scasb al, byte [rdi]	       820	wrstabs.c	FUNCTION_15	CALL_10
0x40030c1	          0x48f7d1	                                 not rcx	       820	wrstabs.c	FUNCTION_15	CALL_10
0x40030c4	      0x498d7c0cff	                lea rdi, [r12 + rcx - 1]	        33	stdio2.h	FUNCTION_54	CALL_1
0x40030c9	        0x4c8b4d00	                     mov r9, qword [rbp]	        33	stdio2.h	FUNCTION_54	CALL_1
0x40030cd	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x40030d2	          0x4c89f2	                            mov rdx, r14	        33	stdio2.h	FUNCTION_54	CALL_1
0x40030d5	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x40030da	      0xe800000000	                          call 0x40030df	        33	stdio2.h	FUNCTION_54	CALL_1
0x40030df	        0x4883c308	                              add rbx, 8	       819	wrstabs.c	FUNCTION_15	FOR_2
0x40030e3	        0x4883c508	                              add rbp, 8	       819	wrstabs.c	FUNCTION_15	FOR_2
0x40030e7	          0x4c8b03	                     mov r8, qword [rbx]	       819	wrstabs.c	FUNCTION_15	FOR_2
0x40030ea	          0x4d85c0	                             test r8, r8	       819	wrstabs.c	FUNCTION_15	FOR_2
0x40030ed	            0x75c7	                           jne 0x40030b6	       819	wrstabs.c	FUNCTION_15	FOR_2
0x40030ef	      0xb800000000	                              mov eax, 0	       148	string3.h	FUNCTION_81	CALL_3
0x40030f4	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       148	string3.h	FUNCTION_81	CALL_3
0x40030fb	          0x4c89e7	                            mov rdi, r12	       148	string3.h	FUNCTION_81	CALL_3
0x40030fe	            0xf2ae	              repne scasb al, byte [rdi]	       148	string3.h	FUNCTION_81	CALL_3
0x4003100	          0x48f7d1	                                 not rcx	       148	string3.h	FUNCTION_81	CALL_3
0x4003103	    0x6641c7440cff	         mov word [r12 + rcx - 1], 0x3b 	       148	string3.h	FUNCTION_81	CALL_3
0x400310b	          0x4d85ff	                           test r15, r15	       823	wrstabs.c	FUNCTION_15	IF_5
0x400310e	            0x7525	                           jne 0x4003135	       823	wrstabs.c	FUNCTION_15	IF_5
0x4003110	    0x41b804000000	                              mov r8d, 4	       826	wrstabs.c	FUNCTION_15	IF_5	IF_6	CALL_12
0x4003116	      0xb900000000	                              mov ecx, 0	       826	wrstabs.c	FUNCTION_15	IF_5	IF_6	CALL_12
0x400311b	      0xba00000000	                              mov edx, 0	       826	wrstabs.c	FUNCTION_15	IF_5	IF_6	CALL_12
0x4003120	          0x4c89e6	                            mov rsi, r12	       826	wrstabs.c	FUNCTION_15	IF_5	IF_6	CALL_12
0x4003123	        0x488b3c24	                    mov rdi, qword [rsp]	       826	wrstabs.c	FUNCTION_15	IF_5	IF_6	CALL_12
0x4003127	      0xe82bd8ffff	               call sym.stab_push_string	       826	wrstabs.c	FUNCTION_15	IF_5	IF_6	CALL_12
0x400312c	            0x85c0	                           test eax, eax	       826	wrstabs.c	FUNCTION_15	IF_5	IF_6	CALL_12
0x400312e	            0x7543	                           jne 0x4003173	       826	wrstabs.c	FUNCTION_15	IF_5	IF_6	CALL_12
0x4003130	      0xe9c5000000	                           jmp 0x40031fa	       826	wrstabs.c	FUNCTION_15	IF_5	IF_6	CALL_12
0x4003135	          0x4d89e0	                             mov r8, r12	       832	wrstabs.c	FUNCTION_15	ELSE_2	IF_7	CALL_13
0x4003138	      0xb900000000	                              mov ecx, 0	       832	wrstabs.c	FUNCTION_15	ELSE_2	IF_7	CALL_13
0x400313d	      0xba00000000	                              mov edx, 0	       832	wrstabs.c	FUNCTION_15	ELSE_2	IF_7	CALL_13
0x4003142	      0xbe80000000	                           mov esi, 0x80	       832	wrstabs.c	FUNCTION_15	ELSE_2	IF_7	CALL_13
0x4003147	        0x488b3c24	                    mov rdi, qword [rsp]	       832	wrstabs.c	FUNCTION_15	ELSE_2	IF_7	CALL_13
0x400314b	      0xe8d9eeffff	              call sym.stab_write_symbol	       832	wrstabs.c	FUNCTION_15	ELSE_2	IF_7	CALL_13
0x4003150	            0x85c0	                           test eax, eax	       832	wrstabs.c	FUNCTION_15	ELSE_2	IF_7	CALL_13
0x4003152	     0xf84a2000000	                            je 0x40031fa	       832	wrstabs.c	FUNCTION_15	ELSE_2	IF_7	CALL_13
0x4003158	      0xba04000000	                              mov edx, 4	       833	wrstabs.c	FUNCTION_15	ELSE_2	IF_7	CALL_14
0x400315d	      0x488b742408	                mov rsi, qword [rsp + 8]	       833	wrstabs.c	FUNCTION_15	ELSE_2	IF_7	CALL_14
0x4003162	        0x488b3c24	                    mov rdi, qword [rsp]	       833	wrstabs.c	FUNCTION_15	ELSE_2	IF_7	CALL_14
0x4003166	      0xe86dd8ffff	         call sym.stab_push_defined_type	       833	wrstabs.c	FUNCTION_15	ELSE_2	IF_7	CALL_14
0x400316b	            0x85c0	                           test eax, eax	       833	wrstabs.c	FUNCTION_15	ELSE_2	IF_7	CALL_14
0x400316d	     0xf8487000000	                            je 0x40031fa	       833	wrstabs.c	FUNCTION_15	ELSE_2	IF_7	CALL_14
0x4003173	          0x4c89e7	                            mov rdi, r12	       837	wrstabs.c	FUNCTION_15	CALL_15
0x4003176	      0xe800000000	                          call 0x400317b	       837	wrstabs.c	FUNCTION_15	CALL_15
0x400317b	      0xb801000000	                              mov eax, 1	       839	wrstabs.c	FUNCTION_15
0x4003180	            0xeb78	                           jmp 0x40031fa	       839	wrstabs.c	FUNCTION_15
0x4003182	      0xbf0a000000	                            mov edi, 0xa	       808	wrstabs.c	FUNCTION_15	CALL_8
0x4003187	      0xe800000000	                          call 0x400318c	       808	wrstabs.c	FUNCTION_15	CALL_8
0x400318c	          0x4989c4	                            mov r12, rax	       808	wrstabs.c	FUNCTION_15	CALL_8
0x400318f	      0xe9b2feffff	                           jmp 0x4003046	       808	wrstabs.c	FUNCTION_15	CALL_8
0x4003194	          0x488b3a	                    mov rdi, qword [rdx]	       805	wrstabs.c	FUNCTION_15	FOR_1
0x4003197	          0x4885ff	                           test rdi, rdi	       805	wrstabs.c	FUNCTION_15	FOR_1
0x400319a	     0xf8566feffff	                           jne 0x4003006	       805	wrstabs.c	FUNCTION_15	FOR_1
0x40031a0	            0xebe0	                           jmp 0x4003182	       805	wrstabs.c	FUNCTION_15	FOR_1
0x40031a2	          0x4889f7	                            mov rdi, rsi	       808	wrstabs.c	FUNCTION_15	CALL_8
0x40031a5	      0xe800000000	                          call 0x40031aa	       808	wrstabs.c	FUNCTION_15	CALL_8
0x40031aa	          0x4989c4	                            mov r12, rax	       808	wrstabs.c	FUNCTION_15	CALL_8
0x40031ad	      0xe9a8feffff	                           jmp 0x400305a	       808	wrstabs.c	FUNCTION_15	CALL_8
0x40031b2	      0xb800000000	                              mov eax, 0	       148	string3.h	FUNCTION_81	CALL_3
0x40031b7	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       148	string3.h	FUNCTION_81	CALL_3
0x40031be	          0x4c89e7	                            mov rdi, r12	       148	string3.h	FUNCTION_81	CALL_3
0x40031c1	            0xf2ae	              repne scasb al, byte [rdi]	       148	string3.h	FUNCTION_81	CALL_3
0x40031c3	          0x4889c8	                            mov rax, rcx	       148	string3.h	FUNCTION_81	CALL_3
0x40031c6	          0x48f7d0	                                 not rax	       148	string3.h	FUNCTION_81	CALL_3
0x40031c9	    0x6641c74404ff	         mov word [r12 + rax - 1], 0x3b 	       148	string3.h	FUNCTION_81	CALL_3
0x40031d1	      0xe93affffff	                           jmp 0x4003110	       148	string3.h	FUNCTION_81	CALL_3
0x40031d6	      0xb800000000	                              mov eax, 0	       148	string3.h	FUNCTION_81	CALL_3
0x40031db	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       148	string3.h	FUNCTION_81	CALL_3
0x40031e2	          0x4c89e7	                            mov rdi, r12	       148	string3.h	FUNCTION_81	CALL_3
0x40031e5	            0xf2ae	              repne scasb al, byte [rdi]	       148	string3.h	FUNCTION_81	CALL_3
0x40031e7	          0x4889c8	                            mov rax, rcx	       148	string3.h	FUNCTION_81	CALL_3
0x40031ea	          0x48f7d0	                                 not rax	       148	string3.h	FUNCTION_81	CALL_3
0x40031ed	    0x6641c74404ff	         mov word [r12 + rax - 1], 0x3b 	       148	string3.h	FUNCTION_81	CALL_3
0x40031f5	      0xe93bffffff	                           jmp 0x4003135	       148	string3.h	FUNCTION_81	CALL_3
0x40031fa	        0x4883c418	                           add rsp, 0x18	       840	wrstabs.c	FUNCTION_15
0x40031fe	              0x5b	                                 pop rbx	       840	wrstabs.c	FUNCTION_15
0x40031ff	              0x5d	                                 pop rbp	       840	wrstabs.c	FUNCTION_15
0x4003200	            0x415c	                                 pop r12	       840	wrstabs.c	FUNCTION_15
0x4003202	            0x415d	                                 pop r13	       840	wrstabs.c	FUNCTION_15
0x4003204	            0x415e	                                 pop r14	       840	wrstabs.c	FUNCTION_15
0x4003206	            0x415f	                                 pop r15	       840	wrstabs.c	FUNCTION_15
0x4003208	              0xc3	                                     ret	       840	wrstabs.c	FUNCTION_15
stab_end_class_type	functions,0:IF,6:ELSE,0:SWITCH,0:CALL,20:WHILE,0:DO,0:FOR,2	161
0x4002cb0	            0x4156	                                push r14	      1777	wrstabs.c	FUNCTION_39
0x4002cb2	            0x4155	                                push r13	      1777	wrstabs.c	FUNCTION_39
0x4002cb4	            0x4154	                                push r12	      1777	wrstabs.c	FUNCTION_39
0x4002cb6	              0x55	                                push rbp	      1777	wrstabs.c	FUNCTION_39
0x4002cb7	              0x53	                                push rbx	      1777	wrstabs.c	FUNCTION_39
0x4002cb8	        0x4c8b4f60	              mov r9, qword [rdi + 0x60]	      1783	wrstabs.c	FUNCTION_39	CALL_1
0x4002cbc	          0x4d85c9	                             test r9, r9	      1783	wrstabs.c	FUNCTION_39	CALL_1
0x4002cbf	            0x740c	                            je 0x4002ccd	      1783	wrstabs.c	FUNCTION_39	CALL_1
0x4002cc1	          0x4889fd	                            mov rbp, rdi	      1783	wrstabs.c	FUNCTION_39	CALL_1
0x4002cc4	        0x498b7120	              mov rsi, qword [r9 + 0x20]	      1783	wrstabs.c	FUNCTION_39	CALL_1
0x4002cc8	          0x4885f6	                           test rsi, rsi	      1783	wrstabs.c	FUNCTION_39	CALL_1
0x4002ccb	            0x7519	                           jne 0x4002ce6	      1783	wrstabs.c	FUNCTION_39	CALL_1
0x4002ccd	      0xb900000000	                              mov ecx, 0	      1783	wrstabs.c	FUNCTION_39	CALL_1
0x4002cd2	      0xbaf7060000	                          mov edx, 0x6f7	      1783	wrstabs.c	FUNCTION_39	CALL_1
0x4002cd7	      0xbe00000000	                              mov esi, 0	      1783	wrstabs.c	FUNCTION_39	CALL_1
0x4002cdc	      0xbf00000000	                              mov edi, 0	      1783	wrstabs.c	FUNCTION_39	CALL_1
0x4002ce1	      0xe800000000	                          call 0x4002ce6	      1783	wrstabs.c	FUNCTION_39	CALL_1
0x4002ce6	    0x49c7c0ffffff	              mov r8, 0xffffffffffffffff	      1787	wrstabs.c	FUNCTION_39	CALL_2
0x4002ced	        0x498b7908	                 mov rdi, qword [r9 + 8]	      1787	wrstabs.c	FUNCTION_39	CALL_2
0x4002cf1	      0xb800000000	                              mov eax, 0	      1787	wrstabs.c	FUNCTION_39	CALL_2
0x4002cf6	          0x4c89c1	                             mov rcx, r8	      1787	wrstabs.c	FUNCTION_39	CALL_2
0x4002cf9	            0xf2ae	              repne scasb al, byte [rdi]	      1787	wrstabs.c	FUNCTION_39	CALL_2
0x4002cfb	          0x4889ca	                            mov rdx, rcx	      1787	wrstabs.c	FUNCTION_39	CALL_2
0x4002cfe	          0x48f7d2	                                 not rdx	      1787	wrstabs.c	FUNCTION_39	CALL_2
0x4002d01	          0x4c89c1	                             mov rcx, r8	      1788	wrstabs.c	FUNCTION_39	CALL_3
0x4002d04	          0x4889f7	                            mov rdi, rsi	      1788	wrstabs.c	FUNCTION_39	CALL_3
0x4002d07	            0xf2ae	              repne scasb al, byte [rdi]	      1788	wrstabs.c	FUNCTION_39	CALL_3
0x4002d09	          0x4889c8	                            mov rax, rcx	      1788	wrstabs.c	FUNCTION_39	CALL_3
0x4002d0c	          0x48f7d0	                                 not rax	      1788	wrstabs.c	FUNCTION_39	CALL_3
0x4002d0f	      0x488d5402fe	                lea rdx, [rdx + rax - 2]	      1788	wrstabs.c	FUNCTION_39	CALL_3
0x4002d14	        0x498b7128	              mov rsi, qword [r9 + 0x28]	      1790	wrstabs.c	FUNCTION_39	IF_1
0x4002d18	          0x4885f6	                           test rsi, rsi	      1790	wrstabs.c	FUNCTION_39	IF_1
0x4002d1b	            0x750b	                           jne 0x4002d28	      1790	wrstabs.c	FUNCTION_39	IF_1
0x4002d1d	        0x4883c20a	                            add rdx, 0xa	      1787	wrstabs.c	FUNCTION_39	CALL_2
0x4002d21	      0xbb00000000	                              mov ebx, 0	      1780	wrstabs.c	FUNCTION_39
0x4002d26	            0xeb3f	                           jmp 0x4002d67	      1780	wrstabs.c	FUNCTION_39
0x4002d28	        0x4883c21e	                           add rdx, 0x1e	      1792	wrstabs.c	FUNCTION_39	IF_1
0x4002d2c	          0x488b3e	                    mov rdi, qword [rsi]	      1793	wrstabs.c	FUNCTION_39	IF_1	FOR_1
0x4002d2f	          0x4885ff	                           test rdi, rdi	      1793	wrstabs.c	FUNCTION_39	IF_1	FOR_1
0x4002d32	            0x742e	                            je 0x4002d62	      1793	wrstabs.c	FUNCTION_39	IF_1	FOR_1
0x4002d34	      0xbb00000000	                              mov ebx, 0	      1793	wrstabs.c	FUNCTION_39	IF_1	FOR_1
0x4002d39	    0x49c7c0ffffff	              mov r8, 0xffffffffffffffff	      1794	wrstabs.c	FUNCTION_39	IF_1	CALL_4
0x4002d40	      0xb800000000	                              mov eax, 0	      1794	wrstabs.c	FUNCTION_39	IF_1	CALL_4
0x4002d45	          0x4c89c1	                             mov rcx, r8	      1794	wrstabs.c	FUNCTION_39	IF_1	CALL_4
0x4002d48	            0xf2ae	              repne scasb al, byte [rdi]	      1794	wrstabs.c	FUNCTION_39	IF_1	CALL_4
0x4002d4a	          0x48f7d1	                                 not rcx	      1794	wrstabs.c	FUNCTION_39	IF_1	CALL_4
0x4002d4d	      0x488d540aff	                lea rdx, [rdx + rcx - 1]	      1794	wrstabs.c	FUNCTION_39	IF_1	CALL_4
0x4002d52	          0x83c301	                              add ebx, 1	      1793	wrstabs.c	FUNCTION_39	IF_1	FOR_1
0x4002d55	            0x89d9	                            mov ecx, ebx	      1793	wrstabs.c	FUNCTION_39	IF_1	FOR_1
0x4002d57	        0x488b3cce	            mov rdi, qword [rsi + rcx*8]	      1793	wrstabs.c	FUNCTION_39	IF_1	FOR_1
0x4002d5b	          0x4885ff	                           test rdi, rdi	      1793	wrstabs.c	FUNCTION_39	IF_1	FOR_1
0x4002d5e	            0x75e5	                           jne 0x4002d45	      1793	wrstabs.c	FUNCTION_39	IF_1	FOR_1
0x4002d60	            0xeb05	                           jmp 0x4002d67	      1793	wrstabs.c	FUNCTION_39	IF_1	FOR_1
0x4002d62	      0xbb00000000	                              mov ebx, 0	      1793	wrstabs.c	FUNCTION_39	IF_1	FOR_1
0x4002d67	        0x498b7930	              mov rdi, qword [r9 + 0x30]	      1796	wrstabs.c	FUNCTION_39	IF_2
0x4002d6b	          0x4885ff	                           test rdi, rdi	      1796	wrstabs.c	FUNCTION_39	IF_2
0x4002d6e	            0x7416	                            je 0x4002d86	      1796	wrstabs.c	FUNCTION_39	IF_2
0x4002d70	      0xb800000000	                              mov eax, 0	      1797	wrstabs.c	FUNCTION_39	CALL_5
0x4002d75	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1797	wrstabs.c	FUNCTION_39	CALL_5
0x4002d7c	            0xf2ae	              repne scasb al, byte [rdi]	      1797	wrstabs.c	FUNCTION_39	CALL_5
0x4002d7e	          0x48f7d1	                                 not rcx	      1797	wrstabs.c	FUNCTION_39	CALL_5
0x4002d81	      0x488d540aff	                lea rdx, [rdx + rcx - 1]	      1797	wrstabs.c	FUNCTION_39	CALL_5
0x4002d86	        0x498b7938	              mov rdi, qword [r9 + 0x38]	      1798	wrstabs.c	FUNCTION_39	IF_3
0x4002d8a	          0x4885ff	                           test rdi, rdi	      1798	wrstabs.c	FUNCTION_39	IF_3
0x4002d8d	            0x7416	                            je 0x4002da5	      1798	wrstabs.c	FUNCTION_39	IF_3
0x4002d8f	      0xb800000000	                              mov eax, 0	      1799	wrstabs.c	FUNCTION_39	CALL_6
0x4002d94	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1799	wrstabs.c	FUNCTION_39	CALL_6
0x4002d9b	            0xf2ae	              repne scasb al, byte [rdi]	      1799	wrstabs.c	FUNCTION_39	CALL_6
0x4002d9d	          0x48f7d1	                                 not rcx	      1799	wrstabs.c	FUNCTION_39	CALL_6
0x4002da0	      0x488d540aff	                lea rdx, [rdx + rcx - 1]	      1799	wrstabs.c	FUNCTION_39	CALL_6
0x4002da5	          0x4889d7	                            mov rdi, rdx	      1803	wrstabs.c	FUNCTION_39	CALL_7
0x4002da8	      0xe800000000	                          call 0x4002dad	      1803	wrstabs.c	FUNCTION_39	CALL_7
0x4002dad	          0x4989c5	                            mov r13, rax	      1803	wrstabs.c	FUNCTION_39	CALL_7
0x4002db0	        0x4c8b6560	            mov r12, qword [rbp + 0x60] 	      1805	wrstabs.c	FUNCTION_39	CALL_8
0x4002db4	      0x498b742408	                mov rsi, qword [r12 + 8]	       110	string3.h	FUNCTION_77	CALL_3
0x4002db9	          0x4889c7	                            mov rdi, rax	       110	string3.h	FUNCTION_77	CALL_3
0x4002dbc	      0xe800000000	                          call 0x4002dc1	       110	string3.h	FUNCTION_77	CALL_3
0x4002dc1	    0x49837c242800	               cmp qword [r12 + 0x28], 0	      1807	wrstabs.c	FUNCTION_39	IF_4
0x4002dc7	     0xf8498000000	                            je 0x4002e65	      1807	wrstabs.c	FUNCTION_39	IF_4
0x4002dcd	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	      1809	wrstabs.c	FUNCTION_39	IF_4	CALL_9
0x4002dd4	      0xb800000000	                              mov eax, 0	      1809	wrstabs.c	FUNCTION_39	IF_4	CALL_9
0x4002dd9	          0x4889d1	                            mov rcx, rdx	      1809	wrstabs.c	FUNCTION_39	IF_4	CALL_9
0x4002ddc	          0x4c89ef	                            mov rdi, r13	      1809	wrstabs.c	FUNCTION_39	IF_4	CALL_9
0x4002ddf	            0xf2ae	              repne scasb al, byte [rdi]	      1809	wrstabs.c	FUNCTION_39	IF_4	CALL_9
0x4002de1	          0x4889c8	                            mov rax, rcx	      1809	wrstabs.c	FUNCTION_39	IF_4	CALL_9
0x4002de4	          0x48f7d0	                                 not rax	      1809	wrstabs.c	FUNCTION_39	IF_4	CALL_9
0x4002de7	      0x498d7c05ff	                lea rdi, [r13 + rax - 1]	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002dec	          0x4189d8	                            mov r8d, ebx	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002def	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002df4	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002df9	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002dfe	      0xe800000000	                          call 0x4002e03	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002e03	        0x488b5d60	            mov rbx, qword [rbp + 0x60] 	      1810	wrstabs.c	FUNCTION_39	IF_4	FOR_2
0x4002e07	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	      1810	wrstabs.c	FUNCTION_39	IF_4	FOR_2
0x4002e0b	          0x488b37	                    mov rsi, qword [rdi]	      1810	wrstabs.c	FUNCTION_39	IF_4	FOR_2
0x4002e0e	          0x4885f6	                           test rsi, rsi	      1810	wrstabs.c	FUNCTION_39	IF_4	FOR_2
0x4002e11	            0x7441	                            je 0x4002e54	      1810	wrstabs.c	FUNCTION_39	IF_4	FOR_2
0x4002e13	    0x41be00000000	                             mov r14d, 0	      1810	wrstabs.c	FUNCTION_39	IF_4	FOR_2
0x4002e19	    0x41bc00000000	                             mov r12d, 0	      1810	wrstabs.c	FUNCTION_39	IF_4	FOR_2
0x4002e1f	          0x4c89ef	                            mov rdi, r13	       148	string3.h	FUNCTION_81	CALL_3
0x4002e22	      0xe800000000	                          call 0x4002e27	       148	string3.h	FUNCTION_81	CALL_3
0x4002e27	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      1813	wrstabs.c	FUNCTION_39	IF_4	FOR_2	CALL_11
0x4002e2b	        0x4a8b3c30	              mov rdi, qword [rax + r14]	      1813	wrstabs.c	FUNCTION_39	IF_4	FOR_2	CALL_11
0x4002e2f	      0xe800000000	                          call 0x4002e34	      1813	wrstabs.c	FUNCTION_39	IF_4	FOR_2	CALL_11
0x4002e34	        0x4183c401	                             add r12d, 1	      1810	wrstabs.c	FUNCTION_39	IF_4	FOR_2
0x4002e38	        0x488b5d60	            mov rbx, qword [rbp + 0x60] 	      1810	wrstabs.c	FUNCTION_39	IF_4	FOR_2
0x4002e3c	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	      1810	wrstabs.c	FUNCTION_39	IF_4	FOR_2
0x4002e40	          0x4489e0	                           mov eax, r12d	      1810	wrstabs.c	FUNCTION_39	IF_4	FOR_2
0x4002e43	    0x4c8d34c50000	                        lea r14, [rax*8]	      1810	wrstabs.c	FUNCTION_39	IF_4	FOR_2
0x4002e4b	        0x488b34c7	            mov rsi, qword [rdi + rax*8]	      1810	wrstabs.c	FUNCTION_39	IF_4	FOR_2
0x4002e4f	          0x4885f6	                           test rsi, rsi	      1810	wrstabs.c	FUNCTION_39	IF_4	FOR_2
0x4002e52	            0x75cb	                           jne 0x4002e1f	      1810	wrstabs.c	FUNCTION_39	IF_4	FOR_2
0x4002e54	      0xe800000000	                          call 0x4002e59	      1815	wrstabs.c	FUNCTION_39	IF_4	CALL_12
0x4002e59	        0x488b4560	            mov rax, qword [rbp + 0x60] 	      1816	wrstabs.c	FUNCTION_39	IF_4
0x4002e5d	    0x48c740280000	               mov qword [rax + 0x28], 0	      1816	wrstabs.c	FUNCTION_39	IF_4
0x4002e65	        0x488b5d60	            mov rbx, qword [rbp + 0x60] 	      1819	wrstabs.c	FUNCTION_39	CALL_13
0x4002e69	        0x488b7320	            mov rsi, qword [rbx + 0x20] 	       148	string3.h	FUNCTION_81	CALL_3
0x4002e6d	          0x4c89ef	                            mov rdi, r13	       148	string3.h	FUNCTION_81	CALL_3
0x4002e70	      0xe800000000	                          call 0x4002e75	       148	string3.h	FUNCTION_81	CALL_3
0x4002e75	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      1820	wrstabs.c	FUNCTION_39	CALL_14
0x4002e79	      0xe800000000	                          call 0x4002e7e	      1820	wrstabs.c	FUNCTION_39	CALL_14
0x4002e7e	        0x488b4560	            mov rax, qword [rbp + 0x60] 	      1821	wrstabs.c	FUNCTION_39
0x4002e82	    0x48c740200000	               mov qword [rax + 0x20], 0	      1821	wrstabs.c	FUNCTION_39
0x4002e8a	        0x488b5d60	            mov rbx, qword [rbp + 0x60] 	      1823	wrstabs.c	FUNCTION_39	IF_5
0x4002e8e	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	      1823	wrstabs.c	FUNCTION_39	IF_5
0x4002e92	          0x4885f6	                           test rsi, rsi	      1823	wrstabs.c	FUNCTION_39	IF_5
0x4002e95	            0x741d	                            je 0x4002eb4	      1823	wrstabs.c	FUNCTION_39	IF_5
0x4002e97	          0x4c89ef	                            mov rdi, r13	       148	string3.h	FUNCTION_81	CALL_3
0x4002e9a	      0xe800000000	                          call 0x4002e9f	       148	string3.h	FUNCTION_81	CALL_3
0x4002e9f	        0x488b7b30	            mov rdi, qword [rbx + 0x30] 	      1826	wrstabs.c	FUNCTION_39	IF_5	CALL_16
0x4002ea3	      0xe800000000	                          call 0x4002ea8	      1826	wrstabs.c	FUNCTION_39	IF_5	CALL_16
0x4002ea8	        0x488b4560	            mov rax, qword [rbp + 0x60] 	      1827	wrstabs.c	FUNCTION_39	IF_5
0x4002eac	    0x48c740300000	               mov qword [rax + 0x30], 0	      1827	wrstabs.c	FUNCTION_39	IF_5
0x4002eb4	      0xb800000000	                              mov eax, 0	       148	string3.h	FUNCTION_81	CALL_3
0x4002eb9	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       148	string3.h	FUNCTION_81	CALL_3
0x4002ec0	          0x4c89ef	                            mov rdi, r13	       148	string3.h	FUNCTION_81	CALL_3
0x4002ec3	            0xf2ae	              repne scasb al, byte [rdi]	       148	string3.h	FUNCTION_81	CALL_3
0x4002ec5	          0x48f7d1	                                 not rcx	       148	string3.h	FUNCTION_81	CALL_3
0x4002ec8	    0x6641c7440dff	         mov word [r13 + rcx - 1], 0x3b 	       148	string3.h	FUNCTION_81	CALL_3
0x4002ed0	        0x488b5d60	            mov rbx, qword [rbp + 0x60] 	      1832	wrstabs.c	FUNCTION_39	IF_6
0x4002ed4	        0x488b7338	            mov rsi, qword [rbx + 0x38] 	      1832	wrstabs.c	FUNCTION_39	IF_6
0x4002ed8	          0x4885f6	                           test rsi, rsi	      1832	wrstabs.c	FUNCTION_39	IF_6
0x4002edb	            0x741d	                            je 0x4002efa	      1832	wrstabs.c	FUNCTION_39	IF_6
0x4002edd	          0x4c89ef	                            mov rdi, r13	       148	string3.h	FUNCTION_81	CALL_3
0x4002ee0	      0xe800000000	                          call 0x4002ee5	       148	string3.h	FUNCTION_81	CALL_3
0x4002ee5	        0x488b7b38	            mov rdi, qword [rbx + 0x38] 	      1835	wrstabs.c	FUNCTION_39	IF_6	CALL_19
0x4002ee9	      0xe800000000	                          call 0x4002eee	      1835	wrstabs.c	FUNCTION_39	IF_6	CALL_19
0x4002eee	        0x488b4560	            mov rax, qword [rbp + 0x60] 	      1836	wrstabs.c	FUNCTION_39	IF_6
0x4002ef2	    0x48c740380000	               mov qword [rax + 0x38], 0	      1836	wrstabs.c	FUNCTION_39	IF_6
0x4002efa	        0x488b4560	            mov rax, qword [rbp + 0x60] 	      1841	wrstabs.c	FUNCTION_39	CALL_20
0x4002efe	        0x488b7808	                mov rdi, qword [rax + 8]	      1841	wrstabs.c	FUNCTION_39	CALL_20
0x4002f02	      0xe800000000	                          call 0x4002f07	      1841	wrstabs.c	FUNCTION_39	CALL_20
0x4002f07	        0x488b4560	            mov rax, qword [rbp + 0x60] 	      1842	wrstabs.c	FUNCTION_39
0x4002f0b	        0x4c896808	                mov qword [rax + 8], r13	      1842	wrstabs.c	FUNCTION_39
0x4002f0f	      0xb801000000	                              mov eax, 1	      1845	wrstabs.c	FUNCTION_39
0x4002f14	              0x5b	                                 pop rbx	      1845	wrstabs.c	FUNCTION_39
0x4002f15	              0x5d	                                 pop rbp	      1845	wrstabs.c	FUNCTION_39
0x4002f16	            0x415c	                                 pop r12	      1845	wrstabs.c	FUNCTION_39
0x4002f18	            0x415d	                                 pop r13	      1845	wrstabs.c	FUNCTION_39
0x4002f1a	            0x415e	                                 pop r14	      1845	wrstabs.c	FUNCTION_39
0x4002f1c	              0xc3	                                     ret	      1845	wrstabs.c	FUNCTION_39
stab_variable	functions,0:IF,2:ELSE,0:SWITCH,1:CALL,12:WHILE,0:DO,0:FOR,0	107
0x40025d0	            0x4157	                                push r15	      2015	wrstabs.c	FUNCTION_47
0x40025d2	            0x4156	                                push r14	      2015	wrstabs.c	FUNCTION_47
0x40025d4	            0x4155	                                push r13	      2015	wrstabs.c	FUNCTION_47
0x40025d6	            0x4154	                                push r12	      2015	wrstabs.c	FUNCTION_47
0x40025d8	              0x55	                                push rbp	      2015	wrstabs.c	FUNCTION_47
0x40025d9	              0x53	                                push rbx	      2015	wrstabs.c	FUNCTION_47
0x40025da	        0x4883ec18	                           sub rsp, 0x18	      2015	wrstabs.c	FUNCTION_47
0x40025de	          0x4989fc	                            mov r12, rdi	      2015	wrstabs.c	FUNCTION_47
0x40025e1	          0x4989f6	                            mov r14, rsi	      2015	wrstabs.c	FUNCTION_47
0x40025e4	            0x89d5	                            mov ebp, edx	      2015	wrstabs.c	FUNCTION_47
0x40025e6	          0x4989cf	                            mov r15, rcx	      2015	wrstabs.c	FUNCTION_47
0x40025e9	      0xe858daffff	                  call sym.stab_pop_type	      2021	wrstabs.c	FUNCTION_47	CALL_1
0x40025ee	          0x83fd05	                              cmp ebp, 5	      2023	wrstabs.c	FUNCTION_47	SWITCH_1
0x40025f1	            0x7722	                            ja 0x4002615	      2023	wrstabs.c	FUNCTION_47	SWITCH_1
0x40025f3	          0x4889c3	                            mov rbx, rax	      2023	wrstabs.c	FUNCTION_47	SWITCH_1
0x40025f6	            0x89ed	                            mov ebp, ebp	      2023	wrstabs.c	FUNCTION_47	SWITCH_1
0x40025f8	    0xff24ed000000	                       jmp qword [rbp*8]	      2023	wrstabs.c	FUNCTION_47	SWITCH_1
0x40025ff	    0x48c744240800	                  mov qword [rsp + 8], 0	      2035	wrstabs.c	FUNCTION_47	SWITCH_1
0x4002608	    0xc74424042600	               mov dword [rsp + 4], 0x26	      2034	wrstabs.c	FUNCTION_47	SWITCH_1
0x4002610	      0xe9d4000000	                           jmp 0x40026e9	      2034	wrstabs.c	FUNCTION_47	SWITCH_1
0x4002615	      0xe800000000	                          call 0x400261a	      2026	wrstabs.c	FUNCTION_47	SWITCH_1	CALL_2
0x400261a	    0x48c744240800	                  mov qword [rsp + 8], 0	      2040	wrstabs.c	FUNCTION_47	SWITCH_1
0x4002623	    0xc74424042600	               mov dword [rsp + 4], 0x26	      2039	wrstabs.c	FUNCTION_47	SWITCH_1
0x400262b	      0xe9b9000000	                           jmp 0x40026e9	      2041	wrstabs.c	FUNCTION_47	SWITCH_1
0x4002630	           0xfb600	                   movzx eax, byte [rax]	      2048	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1	CALL_3
0x4002633	    0x48c744240800	                  mov qword [rsp + 8], 0	      2045	wrstabs.c	FUNCTION_47	SWITCH_1
0x400263c	    0xc74424048000	               mov dword [rsp + 4], 0x80	      2044	wrstabs.c	FUNCTION_47	SWITCH_1
0x4002644	    0xf68400000000	                test byte [rax + rax], 4	      2048	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1	CALL_3
0x400264c	     0xf8597000000	                           jne 0x40026e9	      2048	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1	CALL_3
0x4002652	      0x4d8b6c2468	            mov r13, qword [r12 + 0x68] 	      2053	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1
0x4002657	        0x498d4501	                      lea rax, [r13 + 1]	      2054	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1
0x400265b	      0x4989442468	             mov qword [r12 + 0x68], rax	      2054	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1
0x4002660	      0xb800000000	                              mov eax, 0	      2055	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1	CALL_5
0x4002665	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      2055	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1	CALL_5
0x400266c	          0x4889df	                            mov rdi, rbx	      2055	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1	CALL_5
0x400266f	            0xf2ae	              repne scasb al, byte [rdi]	      2055	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1	CALL_5
0x4002671	          0x4889c8	                            mov rax, rcx	      2055	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1	CALL_5
0x4002674	          0x48f7d0	                                 not rax	      2055	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1	CALL_5
0x4002677	        0x488d7813	                   lea rdi, [rax + 0x13]	      2055	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1	CALL_5
0x400267b	      0xe800000000	                          call 0x4002680	      2055	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1	CALL_5
0x4002680	          0x4889c5	                            mov rbp, rax	      2055	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1	CALL_5
0x4002683	          0x4989d9	                             mov r9, rbx	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002686	          0x4d89e8	                             mov r8, r13	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002689	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x400268e	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002695	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x400269a	          0x4889c7	                            mov rdi, rax	        33	stdio2.h	FUNCTION_54	CALL_1
0x400269d	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x40026a2	      0xe800000000	                          call 0x40026a7	        33	stdio2.h	FUNCTION_54	CALL_1
0x40026a7	          0x4889df	                            mov rdi, rbx	      2057	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1	CALL_6
0x40026aa	      0xe800000000	                          call 0x40026af	      2057	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1	CALL_6
0x40026af	          0x4889eb	                            mov rbx, rbp	      2058	wrstabs.c	FUNCTION_47	SWITCH_1	IF_1
0x40026b2	    0x48c744240800	                  mov qword [rsp + 8], 0	      2045	wrstabs.c	FUNCTION_47	SWITCH_1
0x40026bb	    0xc74424048000	               mov dword [rsp + 4], 0x80	      2044	wrstabs.c	FUNCTION_47	SWITCH_1
0x40026c3	            0xeb24	                           jmp 0x40026e9	      2044	wrstabs.c	FUNCTION_47	SWITCH_1
0x40026c5	    0x48c744240800	                  mov qword [rsp + 8], 0	      2064	wrstabs.c	FUNCTION_47	SWITCH_1
0x40026ce	    0xc74424044000	               mov dword [rsp + 4], 0x40	      2063	wrstabs.c	FUNCTION_47	SWITCH_1
0x40026d6	            0xeb11	                           jmp 0x40026e9	      2065	wrstabs.c	FUNCTION_47	SWITCH_1
0x40026d8	    0x48c744240800	                  mov qword [rsp + 8], 0	      2030	wrstabs.c	FUNCTION_47	SWITCH_1
0x40026e1	    0xc74424042000	               mov dword [rsp + 4], 0x20	      2029	wrstabs.c	FUNCTION_47	SWITCH_1
0x40026e9	    0x48c7c5ffffff	             mov rbp, 0xffffffffffffffff	      2068	wrstabs.c	FUNCTION_47	CALL_9
0x40026f0	      0xb800000000	                              mov eax, 0	      2068	wrstabs.c	FUNCTION_47	CALL_9
0x40026f5	          0x4889e9	                            mov rcx, rbp	      2068	wrstabs.c	FUNCTION_47	CALL_9
0x40026f8	          0x4c89f7	                            mov rdi, r14	      2068	wrstabs.c	FUNCTION_47	CALL_9
0x40026fb	            0xf2ae	              repne scasb al, byte [rdi]	      2068	wrstabs.c	FUNCTION_47	CALL_9
0x40026fd	          0x4889ca	                            mov rdx, rcx	      2068	wrstabs.c	FUNCTION_47	CALL_9
0x4002700	          0x4889e9	                            mov rcx, rbp	      2068	wrstabs.c	FUNCTION_47	CALL_9
0x4002703	          0x4889df	                            mov rdi, rbx	      2068	wrstabs.c	FUNCTION_47	CALL_9
0x4002706	            0xf2ae	              repne scasb al, byte [rdi]	      2068	wrstabs.c	FUNCTION_47	CALL_9
0x4002708	          0x4889c8	                            mov rax, rcx	      2068	wrstabs.c	FUNCTION_47	CALL_9
0x400270b	          0x48f7d0	                                 not rax	      2068	wrstabs.c	FUNCTION_47	CALL_9
0x400270e	          0x4829d0	                            sub rax, rdx	      2068	wrstabs.c	FUNCTION_47	CALL_9
0x4002711	          0x4889c7	                            mov rdi, rax	      2068	wrstabs.c	FUNCTION_47	CALL_9
0x4002714	      0xe800000000	                          call 0x4002719	      2068	wrstabs.c	FUNCTION_47	CALL_9
0x4002719	          0x4989c5	                            mov r13, rax	      2068	wrstabs.c	FUNCTION_47	CALL_9
0x400271c	        0x4883ec08	                              sub rsp, 8	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002720	              0x53	                                push rbx	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002721	      0x4c8b4c2418	              mov r9, qword [rsp + 0x18]	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002726	          0x4d89f0	                             mov r8, r14	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002729	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x400272e	          0x4889ea	                            mov rdx, rbp	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002731	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002736	          0x4889c7	                            mov rdi, rax	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002739	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x400273e	      0xe800000000	                          call 0x4002743	        33	stdio2.h	FUNCTION_54	CALL_1
0x4002743	          0x4889df	                            mov rdi, rbx	      2070	wrstabs.c	FUNCTION_47	CALL_10
0x4002746	      0xe800000000	                          call 0x400274b	      2070	wrstabs.c	FUNCTION_47	CALL_10
0x400274b	          0x4d89e8	                             mov r8, r13	      2072	wrstabs.c	FUNCTION_47	IF_2	CALL_11
0x400274e	          0x4c89f9	                            mov rcx, r15	      2072	wrstabs.c	FUNCTION_47	IF_2	CALL_11
0x4002751	      0xba00000000	                              mov edx, 0	      2072	wrstabs.c	FUNCTION_47	IF_2	CALL_11
0x4002756	        0x8b742414	            mov esi, dword [rsp + 0x14] 	      2072	wrstabs.c	FUNCTION_47	IF_2	CALL_11
0x400275a	          0x4c89e7	                            mov rdi, r12	      2072	wrstabs.c	FUNCTION_47	IF_2	CALL_11
0x400275d	      0xe8c7f8ffff	              call sym.stab_write_symbol	      2072	wrstabs.c	FUNCTION_47	IF_2	CALL_11
0x4002762	        0x4883c410	                           add rsp, 0x10	      2072	wrstabs.c	FUNCTION_47	IF_2	CALL_11
0x4002766	            0x85c0	                           test eax, eax	      2072	wrstabs.c	FUNCTION_47	IF_2	CALL_11
0x4002768	            0x740d	                            je 0x4002777	      2072	wrstabs.c	FUNCTION_47	IF_2	CALL_11
0x400276a	          0x4c89ef	                            mov rdi, r13	      2075	wrstabs.c	FUNCTION_47	CALL_12
0x400276d	      0xe800000000	                          call 0x4002772	      2075	wrstabs.c	FUNCTION_47	CALL_12
0x4002772	      0xb801000000	                              mov eax, 1	      2077	wrstabs.c	FUNCTION_47
0x4002777	        0x4883c418	                           add rsp, 0x18	      2078	wrstabs.c	FUNCTION_47
0x400277b	              0x5b	                                 pop rbx	      2078	wrstabs.c	FUNCTION_47
0x400277c	              0x5d	                                 pop rbp	      2078	wrstabs.c	FUNCTION_47
0x400277d	            0x415c	                                 pop r12	      2078	wrstabs.c	FUNCTION_47
0x400277f	            0x415d	                                 pop r13	      2078	wrstabs.c	FUNCTION_47
0x4002781	            0x415e	                                 pop r14	      2078	wrstabs.c	FUNCTION_47
0x4002783	            0x415f	                                 pop r15	      2078	wrstabs.c	FUNCTION_47
0x4002785	              0xc3	                                     ret	      2078	wrstabs.c	FUNCTION_47
stab_class_static_member	functions,0:IF,1:ELSE,0:SWITCH,1:CALL,9:WHILE,0:DO,0:FOR,0	91
0x4000081	            0x4157	                                push r15	      1494	wrstabs.c	FUNCTION_32
0x4000083	            0x4156	                                push r14	      1494	wrstabs.c	FUNCTION_32
0x4000085	            0x4155	                                push r13	      1494	wrstabs.c	FUNCTION_32
0x4000087	            0x4154	                                push r12	      1494	wrstabs.c	FUNCTION_32
0x4000089	              0x55	                                push rbp	      1494	wrstabs.c	FUNCTION_32
0x400008a	              0x53	                                push rbx	      1494	wrstabs.c	FUNCTION_32
0x400008b	        0x4883ec18	                           sub rsp, 0x18	      1494	wrstabs.c	FUNCTION_32
0x400008f	          0x4889fb	                            mov rbx, rdi	      1494	wrstabs.c	FUNCTION_32
0x4000092	      0x4889742408	                mov qword [rsp + 8], rsi	      1494	wrstabs.c	FUNCTION_32
0x4000097	          0x4989d5	                            mov r13, rdx	      1494	wrstabs.c	FUNCTION_32
0x400009a	            0x89cd	                            mov ebp, ecx	      1494	wrstabs.c	FUNCTION_32
0x400009c	        0x488b4760	            mov rax, qword [rdi + 0x60] 	      1500	wrstabs.c	FUNCTION_32
0x40000a0	        0x448b781c	           mov r15d, dword [rax + 0x1c] 	      1500	wrstabs.c	FUNCTION_32
0x40000a4	      0xe89dffffff	                  call sym.stab_pop_type	      1501	wrstabs.c	FUNCTION_32	CALL_1
0x40000a9	          0x4989c4	                            mov r12, rax	      1501	wrstabs.c	FUNCTION_32	CALL_1
0x40000ac	        0x488b4360	            mov rax, qword [rbx + 0x60] 	      1506	wrstabs.c	FUNCTION_32	CALL_2
0x40000b0	        0x488b7820	            mov rdi, qword [rax + 0x20] 	      1506	wrstabs.c	FUNCTION_32	CALL_2
0x40000b4	          0x4885ff	                           test rdi, rdi	      1506	wrstabs.c	FUNCTION_32	CALL_2
0x40000b7	            0x7519	                           jne 0x40000d2	      1506	wrstabs.c	FUNCTION_32	CALL_2
0x40000b9	      0xb900000000	                              mov ecx, 0	      1506	wrstabs.c	FUNCTION_32	CALL_2
0x40000be	      0xbae2050000	                          mov edx, 0x5e2	      1506	wrstabs.c	FUNCTION_32	CALL_2
0x40000c3	      0xbe00000000	                              mov esi, 0	      1506	wrstabs.c	FUNCTION_32	CALL_2
0x40000c8	      0xbf00000000	                              mov edi, 0	      1506	wrstabs.c	FUNCTION_32	CALL_2
0x40000cd	      0xe800000000	                          call 0x40000d2	      1506	wrstabs.c	FUNCTION_32	CALL_2
0x40000d2	    0x49c7c1ffffff	              mov r9, 0xffffffffffffffff	      1507	wrstabs.c	FUNCTION_32	CALL_4
0x40000d9	      0xb800000000	                              mov eax, 0	      1507	wrstabs.c	FUNCTION_32	CALL_4
0x40000de	          0x4c89c9	                             mov rcx, r9	      1507	wrstabs.c	FUNCTION_32	CALL_4
0x40000e1	            0xf2ae	              repne scasb al, byte [rdi]	      1507	wrstabs.c	FUNCTION_32	CALL_4
0x40000e3	          0x4989c8	                             mov r8, rcx	      1507	wrstabs.c	FUNCTION_32	CALL_4
0x40000e6	          0x4c89c9	                             mov rcx, r9	      1508	wrstabs.c	FUNCTION_32	CALL_5
0x40000e9	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1508	wrstabs.c	FUNCTION_32	CALL_5
0x40000ee	            0xf2ae	              repne scasb al, byte [rdi]	      1508	wrstabs.c	FUNCTION_32	CALL_5
0x40000f0	          0x4889ca	                            mov rdx, rcx	      1508	wrstabs.c	FUNCTION_32	CALL_5
0x40000f3	          0x48f7d2	                                 not rdx	      1508	wrstabs.c	FUNCTION_32	CALL_5
0x40000f6	          0x4c89c9	                             mov rcx, r9	      1509	wrstabs.c	FUNCTION_32	CALL_6
0x40000f9	          0x4c89e7	                            mov rdi, r12	      1509	wrstabs.c	FUNCTION_32	CALL_6
0x40000fc	            0xf2ae	              repne scasb al, byte [rdi]	      1509	wrstabs.c	FUNCTION_32	CALL_6
0x40000fe	          0x4889ce	                            mov rsi, rcx	      1509	wrstabs.c	FUNCTION_32	CALL_6
0x4000101	          0x4c89c9	                             mov rcx, r9	      1510	wrstabs.c	FUNCTION_32	CALL_7
0x4000104	          0x4c89ef	                            mov rdi, r13	      1510	wrstabs.c	FUNCTION_32	CALL_7
0x4000107	            0xf2ae	              repne scasb al, byte [rdi]	      1510	wrstabs.c	FUNCTION_32	CALL_7
0x4000109	          0x4889c8	                            mov rax, rcx	      1510	wrstabs.c	FUNCTION_32	CALL_7
0x400010c	          0x48f7d0	                                 not rax	      1510	wrstabs.c	FUNCTION_32	CALL_7
0x400010f	          0x4c29c2	                             sub rdx, r8	      1507	wrstabs.c	FUNCTION_32	CALL_4
0x4000112	          0x4829f0	                            sub rax, rsi	      1507	wrstabs.c	FUNCTION_32	CALL_4
0x4000115	      0x488d7c1004	                lea rdi, [rax + rdx + 4]	      1507	wrstabs.c	FUNCTION_32	CALL_4
0x400011a	      0xe800000000	                          call 0x400011f	      1507	wrstabs.c	FUNCTION_32	CALL_4
0x400011f	          0x4989c6	                            mov r14, rax	      1507	wrstabs.c	FUNCTION_32	CALL_4
0x4000122	          0x83fd01	                              cmp ebp, 1	      1513	wrstabs.c	FUNCTION_32	SWITCH_1
0x4000125	            0x7414	                            je 0x400013b	      1513	wrstabs.c	FUNCTION_32	SWITCH_1
0x4000127	          0x83fd01	                              cmp ebp, 1	      1513	wrstabs.c	FUNCTION_32	SWITCH_1
0x400012a	            0x7216	                            jb 0x4000142	      1513	wrstabs.c	FUNCTION_32	SWITCH_1
0x400012c	      0xba00000000	                              mov edx, 0	      1523	wrstabs.c	FUNCTION_32	SWITCH_1
0x4000131	          0x83fd02	                              cmp ebp, 2	      1513	wrstabs.c	FUNCTION_32	SWITCH_1
0x4000134	            0x7411	                            je 0x4000147	      1513	wrstabs.c	FUNCTION_32	SWITCH_1
0x4000136	      0xe800000000	                          call 0x400013b	      1516	wrstabs.c	FUNCTION_32	SWITCH_1	CALL_8
0x400013b	      0xba00000000	                              mov edx, 0	      1527	wrstabs.c	FUNCTION_32	SWITCH_1
0x4000140	            0xeb05	                           jmp 0x4000147	      1528	wrstabs.c	FUNCTION_32	SWITCH_1
0x4000142	      0xba00000000	                              mov edx, 0	      1519	wrstabs.c	FUNCTION_32	SWITCH_1
0x4000147	        0x488b4360	            mov rax, qword [rbx + 0x60] 	      1531	wrstabs.c	FUNCTION_32
0x400014b	        0x4883ec08	                              sub rsp, 8	        33	stdio2.h	FUNCTION_54	CALL_1
0x400014f	            0x4155	                                push r13	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000151	            0x4154	                                push r12	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000153	              0x52	                                push rdx	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000154	      0x4c8b4c2428	              mov r9, qword [rsp + 0x28]	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000159	        0x4c8b4020	              mov r8, qword [rax + 0x20]	        33	stdio2.h	FUNCTION_54	CALL_1
0x400015d	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000162	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000169	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x400016e	          0x4c89f7	                            mov rdi, r14	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000171	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000176	      0xe800000000	                          call 0x400017b	        33	stdio2.h	FUNCTION_54	CALL_1
0x400017b	        0x4883c420	                           add rsp, 0x20	      1534	wrstabs.c	FUNCTION_32	CALL_9
0x400017f	        0x488b4360	            mov rax, qword [rbx + 0x60] 	      1534	wrstabs.c	FUNCTION_32	CALL_9
0x4000183	        0x488b7820	            mov rdi, qword [rax + 0x20] 	      1534	wrstabs.c	FUNCTION_32	CALL_9
0x4000187	      0xe800000000	                          call 0x400018c	      1534	wrstabs.c	FUNCTION_32	CALL_9
0x400018c	        0x488b4360	            mov rax, qword [rbx + 0x60] 	      1535	wrstabs.c	FUNCTION_32
0x4000190	        0x4c897020	             mov qword [rax + 0x20], r14	      1535	wrstabs.c	FUNCTION_32
0x4000194	          0x4585ff	                         test r15d, r15d	      1537	wrstabs.c	FUNCTION_32	IF_1
0x4000197	            0x740b	                            je 0x40001a4	      1537	wrstabs.c	FUNCTION_32	IF_1
0x4000199	        0x488b4360	            mov rax, qword [rbx + 0x60] 	      1538	wrstabs.c	FUNCTION_32	IF_1
0x400019d	    0xc7401c010000	               mov dword [rax + 0x1c], 1	      1538	wrstabs.c	FUNCTION_32	IF_1
0x40001a4	      0xb801000000	                              mov eax, 1	      1541	wrstabs.c	FUNCTION_32
0x40001a9	        0x4883c418	                           add rsp, 0x18	      1541	wrstabs.c	FUNCTION_32
0x40001ad	              0x5b	                                 pop rbx	      1541	wrstabs.c	FUNCTION_32
0x40001ae	              0x5d	                                 pop rbp	      1541	wrstabs.c	FUNCTION_32
0x40001af	            0x415c	                                 pop r12	      1541	wrstabs.c	FUNCTION_32
0x40001b1	            0x415d	                                 pop r13	      1541	wrstabs.c	FUNCTION_32
0x40001b3	            0x415e	                                 pop r14	      1541	wrstabs.c	FUNCTION_32
0x40001b5	            0x415f	                                 pop r15	      1541	wrstabs.c	FUNCTION_32
0x40001b7	              0xc3	                                     ret	      1541	wrstabs.c	FUNCTION_32
stab_end_function	functions,0:IF,0:ELSE,0:SWITCH,0:CALL,0:WHILE,0:DO,0:FOR,0	2
0x4000040	      0xb801000000	                              mov eax, 1	      2248	wrstabs.c	FUNCTION_52
0x4000045	              0xc3	                                     ret	      2248	wrstabs.c	FUNCTION_52
stab_pop_type	functions,0:IF,0:ELSE,0:SWITCH,0:CALL,2:WHILE,0:DO,0:FOR,0	17
0x4000046	              0x53	                                push rbx	       435	wrstabs.c	FUNCTION_5
0x4000047	        0x488b4760	            mov rax, qword [rdi + 0x60] 	       439	wrstabs.c	FUNCTION_5
0x400004b	          0x4885c0	                           test rax, rax	       440	wrstabs.c	FUNCTION_5	CALL_1
0x400004e	            0x7519	                           jne 0x4000069	       440	wrstabs.c	FUNCTION_5	CALL_1
0x4000050	      0xb900000000	                              mov ecx, 0	       440	wrstabs.c	FUNCTION_5	CALL_1
0x4000055	      0xbab8010000	                          mov edx, 0x1b8	       440	wrstabs.c	FUNCTION_5	CALL_1
0x400005a	      0xbe00000000	                              mov esi, 0	       440	wrstabs.c	FUNCTION_5	CALL_1
0x400005f	      0xbf00000000	                              mov edi, 0	       440	wrstabs.c	FUNCTION_5	CALL_1
0x4000064	      0xe800000000	                          call 0x4000069	       440	wrstabs.c	FUNCTION_5	CALL_1
0x4000069	          0x488b10	                    mov rdx, qword [rax]	       442	wrstabs.c	FUNCTION_5
0x400006c	        0x48895760	             mov qword [rdi + 0x60], rdx	       442	wrstabs.c	FUNCTION_5
0x4000070	        0x488b5808	                mov rbx, qword [rax + 8]	       444	wrstabs.c	FUNCTION_5
0x4000074	          0x4889c7	                            mov rdi, rax	       446	wrstabs.c	FUNCTION_5	CALL_2
0x4000077	      0xe800000000	                          call 0x400007c	       446	wrstabs.c	FUNCTION_5	CALL_2
0x400007c	          0x4889d8	                            mov rax, rbx	       449	wrstabs.c	FUNCTION_5
0x400007f	              0x5b	                                 pop rbx	       449	wrstabs.c	FUNCTION_5
0x4000080	              0xc3	                                     ret	       449	wrstabs.c	FUNCTION_5
stab_lineno	functions,0:IF,3:ELSE,0:SWITCH,0:CALL,4:WHILE,0:DO,0:FOR,0	46
0x40021a9	            0x4155	                                push r13	      2254	wrstabs.c	FUNCTION_53
0x40021ab	            0x4154	                                push r12	      2254	wrstabs.c	FUNCTION_53
0x40021ad	              0x55	                                push rbp	      2254	wrstabs.c	FUNCTION_53
0x40021ae	              0x53	                                push rbx	      2254	wrstabs.c	FUNCTION_53
0x40021af	        0x4883ec08	                              sub rsp, 8	      2254	wrstabs.c	FUNCTION_53
0x40021b3	          0x4989f4	                            mov r12, rsi	      2254	wrstabs.c	FUNCTION_53
0x40021b6	    0x488bb7100200	           mov rsi, qword [rdi + 0x210] 	      2257	wrstabs.c	FUNCTION_53	CALL_1
0x40021bd	          0x4885f6	                           test rsi, rsi	      2257	wrstabs.c	FUNCTION_53	CALL_1
0x40021c0	            0x7519	                           jne 0x40021db	      2257	wrstabs.c	FUNCTION_53	CALL_1
0x40021c2	      0xb900000000	                              mov ecx, 0	      2257	wrstabs.c	FUNCTION_53	CALL_1
0x40021c7	      0xbad1080000	                          mov edx, 0x8d1	      2257	wrstabs.c	FUNCTION_53	CALL_1
0x40021cc	      0xbe00000000	                              mov esi, 0	      2257	wrstabs.c	FUNCTION_53	CALL_1
0x40021d1	      0xbf00000000	                              mov edi, 0	      2257	wrstabs.c	FUNCTION_53	CALL_1
0x40021d6	      0xe800000000	                          call 0x40021db	      2257	wrstabs.c	FUNCTION_53	CALL_1
0x40021db	          0x4889fb	                            mov rbx, rdi	      2257	wrstabs.c	FUNCTION_53	CALL_1
0x40021de	          0x4989d5	                            mov r13, rdx	      2257	wrstabs.c	FUNCTION_53	CALL_1
0x40021e1	          0x4889cd	                            mov rbp, rcx	      2257	wrstabs.c	FUNCTION_53	CALL_1
0x40021e4	    0x48398ff00100	           cmp qword [rdi + 0x1f0], rcx 	      2259	wrstabs.c	FUNCTION_53	IF_1
0x40021eb	            0x7307	                           jae 0x40021f4	      2259	wrstabs.c	FUNCTION_53	IF_1
0x40021ed	    0x48898bf00100	            mov qword [rbx + 0x1f0], rcx	      2260	wrstabs.c	FUNCTION_53	IF_1
0x40021f4	          0x4c89e7	                            mov rdi, r12	      2262	wrstabs.c	FUNCTION_53	IF_2	CALL_2
0x40021f7	      0xe800000000	                          call 0x40021fc	      2262	wrstabs.c	FUNCTION_53	IF_2	CALL_2
0x40021fc	            0x85c0	                           test eax, eax	      2262	wrstabs.c	FUNCTION_53	IF_2	CALL_2
0x40021fe	            0x7423	                            je 0x4002223	      2262	wrstabs.c	FUNCTION_53	IF_2	CALL_2
0x4002200	          0x4d89e0	                             mov r8, r12	      2264	wrstabs.c	FUNCTION_53	IF_2	IF_3	CALL_3
0x4002203	          0x4889e9	                            mov rcx, rbp	      2264	wrstabs.c	FUNCTION_53	IF_2	IF_3	CALL_3
0x4002206	      0xba00000000	                              mov edx, 0	      2264	wrstabs.c	FUNCTION_53	IF_2	IF_3	CALL_3
0x400220b	      0xbe84000000	                           mov esi, 0x84	      2264	wrstabs.c	FUNCTION_53	IF_2	IF_3	CALL_3
0x4002210	          0x4889df	                            mov rdi, rbx	      2264	wrstabs.c	FUNCTION_53	IF_2	IF_3	CALL_3
0x4002213	      0xe811feffff	              call sym.stab_write_symbol	      2264	wrstabs.c	FUNCTION_53	IF_2	IF_3	CALL_3
0x4002218	            0x85c0	                           test eax, eax	      2264	wrstabs.c	FUNCTION_53	IF_2	IF_3	CALL_3
0x400221a	            0x7427	                            je 0x4002243	      2264	wrstabs.c	FUNCTION_53	IF_2	IF_3	CALL_3
0x400221c	    0x4c89a3100200	            mov qword [rbx + 0x210], r12	      2266	wrstabs.c	FUNCTION_53	IF_2
0x4002223	          0x4889e9	                            mov rcx, rbp	      2269	wrstabs.c	FUNCTION_53	CALL_4
0x4002226	    0x482b8b000200	            sub rcx, qword [rbx + 0x200]	      2269	wrstabs.c	FUNCTION_53	CALL_4
0x400222d	    0x41b800000000	                              mov r8d, 0	      2269	wrstabs.c	FUNCTION_53	CALL_4
0x4002233	          0x4489ea	                           mov edx, r13d	      2269	wrstabs.c	FUNCTION_53	CALL_4
0x4002236	      0xbe44000000	                           mov esi, 0x44	      2269	wrstabs.c	FUNCTION_53	CALL_4
0x400223b	          0x4889df	                            mov rdi, rbx	      2269	wrstabs.c	FUNCTION_53	CALL_4
0x400223e	      0xe8e6fdffff	              call sym.stab_write_symbol	      2269	wrstabs.c	FUNCTION_53	CALL_4
0x4002243	        0x4883c408	                              add rsp, 8	      2271	wrstabs.c	FUNCTION_53
0x4002247	              0x5b	                                 pop rbx	      2271	wrstabs.c	FUNCTION_53
0x4002248	              0x5d	                                 pop rbp	      2271	wrstabs.c	FUNCTION_53
0x4002249	            0x415c	                                 pop r12	      2271	wrstabs.c	FUNCTION_53
0x400224b	            0x415d	                                 pop r13	      2271	wrstabs.c	FUNCTION_53
0x400224d	              0xc3	                                     ret	      2271	wrstabs.c	FUNCTION_53
stab_offset_type	functions,0:IF,1:ELSE,0:SWITCH,0:CALL,9:WHILE,0:DO,0:FOR,0	68
0x4000bc0	            0x4157	                                push r15	      1111	wrstabs.c	FUNCTION_23
0x4000bc2	            0x4156	                                push r14	      1111	wrstabs.c	FUNCTION_23
0x4000bc4	            0x4155	                                push r13	      1111	wrstabs.c	FUNCTION_23
0x4000bc6	            0x4154	                                push r12	      1111	wrstabs.c	FUNCTION_23
0x4000bc8	              0x55	                                push rbp	      1111	wrstabs.c	FUNCTION_23
0x4000bc9	              0x53	                                push rbx	      1111	wrstabs.c	FUNCTION_23
0x4000bca	        0x4883ec08	                              sub rsp, 8	      1111	wrstabs.c	FUNCTION_23
0x4000bce	          0x4889fb	                            mov rbx, rdi	      1111	wrstabs.c	FUNCTION_23
0x4000bd1	        0x488b4760	            mov rax, qword [rdi + 0x60] 	      1116	wrstabs.c	FUNCTION_23
0x4000bd5	        0x448b601c	           mov r12d, dword [rax + 0x1c] 	      1116	wrstabs.c	FUNCTION_23
0x4000bd9	      0xe868f4ffff	                  call sym.stab_pop_type	      1117	wrstabs.c	FUNCTION_23	CALL_1
0x4000bde	          0x4889c5	                            mov rbp, rax	      1117	wrstabs.c	FUNCTION_23	CALL_1
0x4000be1	    0x41be01000000	                             mov r14d, 1	      1119	wrstabs.c	FUNCTION_23
0x4000be7	          0x4585e4	                         test r12d, r12d	      1119	wrstabs.c	FUNCTION_23
0x4000bea	            0x7510	                           jne 0x4000bfc	      1119	wrstabs.c	FUNCTION_23
0x4000bec	        0x488b4360	            mov rax, qword [rbx + 0x60] 	      1119	wrstabs.c	FUNCTION_23
0x4000bf0	        0x83781c00	               cmp dword [rax + 0x1c], 0	      1119	wrstabs.c	FUNCTION_23
0x4000bf4	        0x410f95c6	                              setne r14b	      1119	wrstabs.c	FUNCTION_23
0x4000bf8	        0x450fb6f6	                        movzx r14d, r14b	      1119	wrstabs.c	FUNCTION_23
0x4000bfc	          0x4889df	                            mov rdi, rbx	      1120	wrstabs.c	FUNCTION_23	CALL_2
0x4000bff	      0xe842f4ffff	                  call sym.stab_pop_type	      1120	wrstabs.c	FUNCTION_23	CALL_2
0x4000c04	          0x4989c4	                            mov r12, rax	      1120	wrstabs.c	FUNCTION_23	CALL_2
0x4000c07	    0x49c7c5ffffff	             mov r13, 0xffffffffffffffff	      1122	wrstabs.c	FUNCTION_23	CALL_5
0x4000c0e	      0xb800000000	                              mov eax, 0	      1122	wrstabs.c	FUNCTION_23	CALL_5
0x4000c13	          0x4c89e9	                            mov rcx, r13	      1122	wrstabs.c	FUNCTION_23	CALL_5
0x4000c16	          0x4889ef	                            mov rdi, rbp	      1122	wrstabs.c	FUNCTION_23	CALL_5
0x4000c19	            0xf2ae	              repne scasb al, byte [rdi]	      1122	wrstabs.c	FUNCTION_23	CALL_5
0x4000c1b	          0x4889ca	                            mov rdx, rcx	      1122	wrstabs.c	FUNCTION_23	CALL_5
0x4000c1e	          0x4c89e9	                            mov rcx, r13	      1122	wrstabs.c	FUNCTION_23	CALL_5
0x4000c21	          0x4c89e7	                            mov rdi, r12	      1122	wrstabs.c	FUNCTION_23	CALL_5
0x4000c24	            0xf2ae	              repne scasb al, byte [rdi]	      1122	wrstabs.c	FUNCTION_23	CALL_5
0x4000c26	          0x4889c8	                            mov rax, rcx	      1122	wrstabs.c	FUNCTION_23	CALL_5
0x4000c29	          0x48f7d0	                                 not rax	      1122	wrstabs.c	FUNCTION_23	CALL_5
0x4000c2c	          0x4829d0	                            sub rax, rdx	      1122	wrstabs.c	FUNCTION_23	CALL_5
0x4000c2f	          0x4889c7	                            mov rdi, rax	      1122	wrstabs.c	FUNCTION_23	CALL_5
0x4000c32	      0xe800000000	                          call 0x4000c37	      1122	wrstabs.c	FUNCTION_23	CALL_5
0x4000c37	          0x4989c7	                            mov r15, rax	      1122	wrstabs.c	FUNCTION_23	CALL_5
0x4000c3a	          0x4989e9	                             mov r9, rbp	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000c3d	          0x4d89e0	                             mov r8, r12	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000c40	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000c45	          0x4c89ea	                            mov rdx, r13	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000c48	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000c4d	          0x4889c7	                            mov rdi, rax	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000c50	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000c55	      0xe800000000	                          call 0x4000c5a	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000c5a	          0x4c89e7	                            mov rdi, r12	      1124	wrstabs.c	FUNCTION_23	CALL_6
0x4000c5d	      0xe800000000	                          call 0x4000c62	      1124	wrstabs.c	FUNCTION_23	CALL_6
0x4000c62	          0x4889ef	                            mov rdi, rbp	      1125	wrstabs.c	FUNCTION_23	CALL_7
0x4000c65	      0xe800000000	                          call 0x4000c6a	      1125	wrstabs.c	FUNCTION_23	CALL_7
0x4000c6a	    0x41b800000000	                              mov r8d, 0	      1127	wrstabs.c	FUNCTION_23	IF_1	CALL_8
0x4000c70	          0x4489f1	                           mov ecx, r14d	      1127	wrstabs.c	FUNCTION_23	IF_1	CALL_8
0x4000c73	      0xba00000000	                              mov edx, 0	      1127	wrstabs.c	FUNCTION_23	IF_1	CALL_8
0x4000c78	          0x4c89fe	                            mov rsi, r15	      1127	wrstabs.c	FUNCTION_23	IF_1	CALL_8
0x4000c7b	          0x4889df	                            mov rdi, rbx	      1127	wrstabs.c	FUNCTION_23	IF_1	CALL_8
0x4000c7e	      0xe8d4fcffff	               call sym.stab_push_string	      1127	wrstabs.c	FUNCTION_23	IF_1	CALL_8
0x4000c83	            0x85c0	                           test eax, eax	      1127	wrstabs.c	FUNCTION_23	IF_1	CALL_8
0x4000c85	            0x740d	                            je 0x4000c94	      1127	wrstabs.c	FUNCTION_23	IF_1	CALL_8
0x4000c87	          0x4c89ff	                            mov rdi, r15	      1130	wrstabs.c	FUNCTION_23	CALL_9
0x4000c8a	      0xe800000000	                          call 0x4000c8f	      1130	wrstabs.c	FUNCTION_23	CALL_9
0x4000c8f	      0xb801000000	                              mov eax, 1	      1132	wrstabs.c	FUNCTION_23
0x4000c94	        0x4883c408	                              add rsp, 8	      1133	wrstabs.c	FUNCTION_23
0x4000c98	              0x5b	                                 pop rbx	      1133	wrstabs.c	FUNCTION_23
0x4000c99	              0x5d	                                 pop rbp	      1133	wrstabs.c	FUNCTION_23
0x4000c9a	            0x415c	                                 pop r12	      1133	wrstabs.c	FUNCTION_23
0x4000c9c	            0x415d	                                 pop r13	      1133	wrstabs.c	FUNCTION_23
0x4000c9e	            0x415e	                                 pop r14	      1133	wrstabs.c	FUNCTION_23
0x4000ca0	            0x415f	                                 pop r15	      1133	wrstabs.c	FUNCTION_23
0x4000ca2	              0xc3	                                     ret	      1133	wrstabs.c	FUNCTION_23
stab_tag	functions,0:IF,1:ELSE,0:SWITCH,0:CALL,7:WHILE,0:DO,0:FOR,0	51
0x4002966	            0x4156	                                push r14	      1931	wrstabs.c	FUNCTION_43
0x4002968	            0x4155	                                push r13	      1931	wrstabs.c	FUNCTION_43
0x400296a	            0x4154	                                push r12	      1931	wrstabs.c	FUNCTION_43
0x400296c	              0x55	                                push rbp	      1931	wrstabs.c	FUNCTION_43
0x400296d	              0x53	                                push rbx	      1931	wrstabs.c	FUNCTION_43
0x400296e	          0x4989fc	                            mov r12, rdi	      1931	wrstabs.c	FUNCTION_43
0x4002971	          0x4989f5	                            mov r13, rsi	      1931	wrstabs.c	FUNCTION_43
0x4002974	      0xe8cdd6ffff	                  call sym.stab_pop_type	      1935	wrstabs.c	FUNCTION_43	CALL_1
0x4002979	          0x4889c3	                            mov rbx, rax	      1935	wrstabs.c	FUNCTION_43	CALL_1
0x400297c	    0x48c7c5ffffff	             mov rbp, 0xffffffffffffffff	      1937	wrstabs.c	FUNCTION_43	CALL_4
0x4002983	      0xb800000000	                              mov eax, 0	      1937	wrstabs.c	FUNCTION_43	CALL_4
0x4002988	          0x4889e9	                            mov rcx, rbp	      1937	wrstabs.c	FUNCTION_43	CALL_4
0x400298b	          0x4c89ef	                            mov rdi, r13	      1937	wrstabs.c	FUNCTION_43	CALL_4
0x400298e	            0xf2ae	              repne scasb al, byte [rdi]	      1937	wrstabs.c	FUNCTION_43	CALL_4
0x4002990	          0x4889ca	                            mov rdx, rcx	      1937	wrstabs.c	FUNCTION_43	CALL_4
0x4002993	          0x4889e9	                            mov rcx, rbp	      1937	wrstabs.c	FUNCTION_43	CALL_4
0x4002996	          0x4889df	                            mov rdi, rbx	      1937	wrstabs.c	FUNCTION_43	CALL_4
0x4002999	            0xf2ae	              repne scasb al, byte [rdi]	      1937	wrstabs.c	FUNCTION_43	CALL_4
0x400299b	          0x4889c8	                            mov rax, rcx	      1937	wrstabs.c	FUNCTION_43	CALL_4
0x400299e	          0x48f7d0	                                 not rax	      1937	wrstabs.c	FUNCTION_43	CALL_4
0x40029a1	          0x4829d0	                            sub rax, rdx	      1937	wrstabs.c	FUNCTION_43	CALL_4
0x40029a4	          0x4889c7	                            mov rdi, rax	      1937	wrstabs.c	FUNCTION_43	CALL_4
0x40029a7	      0xe800000000	                          call 0x40029ac	      1937	wrstabs.c	FUNCTION_43	CALL_4
0x40029ac	          0x4989c6	                            mov r14, rax	      1937	wrstabs.c	FUNCTION_43	CALL_4
0x40029af	          0x4989d9	                             mov r9, rbx	        33	stdio2.h	FUNCTION_54	CALL_1
0x40029b2	          0x4d89e8	                             mov r8, r13	        33	stdio2.h	FUNCTION_54	CALL_1
0x40029b5	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x40029ba	          0x4889ea	                            mov rdx, rbp	        33	stdio2.h	FUNCTION_54	CALL_1
0x40029bd	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x40029c2	          0x4889c7	                            mov rdi, rax	        33	stdio2.h	FUNCTION_54	CALL_1
0x40029c5	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x40029ca	      0xe800000000	                          call 0x40029cf	        33	stdio2.h	FUNCTION_54	CALL_1
0x40029cf	          0x4889df	                            mov rdi, rbx	      1940	wrstabs.c	FUNCTION_43	CALL_5
0x40029d2	      0xe800000000	                          call 0x40029d7	      1940	wrstabs.c	FUNCTION_43	CALL_5
0x40029d7	          0x4d89f0	                             mov r8, r14	      1942	wrstabs.c	FUNCTION_43	IF_1	CALL_6
0x40029da	      0xb900000000	                              mov ecx, 0	      1942	wrstabs.c	FUNCTION_43	IF_1	CALL_6
0x40029df	      0xba00000000	                              mov edx, 0	      1942	wrstabs.c	FUNCTION_43	IF_1	CALL_6
0x40029e4	      0xbe80000000	                           mov esi, 0x80	      1942	wrstabs.c	FUNCTION_43	IF_1	CALL_6
0x40029e9	          0x4c89e7	                            mov rdi, r12	      1942	wrstabs.c	FUNCTION_43	IF_1	CALL_6
0x40029ec	      0xe838f6ffff	              call sym.stab_write_symbol	      1942	wrstabs.c	FUNCTION_43	IF_1	CALL_6
0x40029f1	            0x85c0	                           test eax, eax	      1942	wrstabs.c	FUNCTION_43	IF_1	CALL_6
0x40029f3	            0x740d	                            je 0x4002a02	      1942	wrstabs.c	FUNCTION_43	IF_1	CALL_6
0x40029f5	          0x4c89f7	                            mov rdi, r14	      1945	wrstabs.c	FUNCTION_43	CALL_7
0x40029f8	      0xe800000000	                          call 0x40029fd	      1945	wrstabs.c	FUNCTION_43	CALL_7
0x40029fd	      0xb801000000	                              mov eax, 1	      1947	wrstabs.c	FUNCTION_43
0x4002a02	              0x5b	                                 pop rbx	      1948	wrstabs.c	FUNCTION_43
0x4002a03	              0x5d	                                 pop rbp	      1948	wrstabs.c	FUNCTION_43
0x4002a04	            0x415c	                                 pop r12	      1948	wrstabs.c	FUNCTION_43
0x4002a06	            0x415d	                                 pop r13	      1948	wrstabs.c	FUNCTION_43
0x4002a08	            0x415e	                                 pop r14	      1948	wrstabs.c	FUNCTION_43
0x4002a0a	              0xc3	                                     ret	      1948	wrstabs.c	FUNCTION_43
write_stabs_in_sections_debugging_info	functions,0:IF,5:ELSE,0:SWITCH,0:CALL,17:WHILE,0:DO,0:FOR,1	145
0x4003209	            0x4157	                                push r15	       466	wrstabs.c	FUNCTION_6
0x400320b	            0x4156	                                push r14	       466	wrstabs.c	FUNCTION_6
0x400320d	            0x4155	                                push r13	       466	wrstabs.c	FUNCTION_6
0x400320f	            0x4154	                                push r12	       466	wrstabs.c	FUNCTION_6
0x4003211	              0x55	                                push rbp	       466	wrstabs.c	FUNCTION_6
0x4003212	              0x53	                                push rbx	       466	wrstabs.c	FUNCTION_6
0x4003213	    0x4881ec280200	                          sub rsp, 0x228	       466	wrstabs.c	FUNCTION_6
0x400321a	          0x4889fb	                            mov rbx, rdi	       466	wrstabs.c	FUNCTION_6
0x400321d	          0x4889f5	                            mov rbp, rsi	       466	wrstabs.c	FUNCTION_6
0x4003220	          0x4989d7	                            mov r15, rdx	       466	wrstabs.c	FUNCTION_6
0x4003223	          0x4989ce	                            mov r14, rcx	       466	wrstabs.c	FUNCTION_6
0x4003226	          0x4d89c4	                             mov r12, r8	       466	wrstabs.c	FUNCTION_6
0x4003229	          0x4d89cd	                             mov r13, r9	       466	wrstabs.c	FUNCTION_6
0x400322c	    0x64488b042528	                mov rax, qword fs:[0x28]	       466	wrstabs.c	FUNCTION_6
0x4003235	    0x488984241802	            mov qword [rsp + 0x218], rax	       466	wrstabs.c	FUNCTION_6
0x400323d	            0x31c0	                            xor eax, eax	       466	wrstabs.c	FUNCTION_6
0x400323f	        0x48893c24	                    mov qword [rsp], rdi	       471	wrstabs.c	FUNCTION_6
0x4003243	    0x48c744241000	               mov qword [rsp + 0x10], 0	       473	wrstabs.c	FUNCTION_6
0x400324c	    0x48c7442418f4	          mov qword [rsp + 0x18], 0x1f4 	       474	wrstabs.c	FUNCTION_6
0x4003255	      0xbff4010000	                          mov edi, 0x1f4	       475	wrstabs.c	FUNCTION_6	CALL_1
0x400325a	      0xe800000000	                          call 0x400325f	       475	wrstabs.c	FUNCTION_6	CALL_1
0x400325f	      0x4889442408	                mov qword [rsp + 8], rax	       475	wrstabs.c	FUNCTION_6	CALL_1
0x4003264	    0x48c744242000	               mov qword [rsp + 0x20], 0	       477	wrstabs.c	FUNCTION_6
0x400326d	    0x48c744242800	               mov qword [rsp + 0x28], 0	       478	wrstabs.c	FUNCTION_6
0x4003276	    0x48c744243001	               mov qword [rsp + 0x30], 1	       480	wrstabs.c	FUNCTION_6
0x400327f	      0xba30000000	                           mov edx, 0x30	       482	wrstabs.c	FUNCTION_6	IF_1	CALL_2
0x4003284	      0xbe00000000	                              mov esi, 0	       482	wrstabs.c	FUNCTION_6	IF_1	CALL_2
0x4003289	      0x488d7c2438	                   lea rdi, [rsp + 0x38]	       482	wrstabs.c	FUNCTION_6	IF_1	CALL_2
0x400328e	      0xe800000000	                          call 0x4003293	       482	wrstabs.c	FUNCTION_6	IF_1	CALL_2
0x4003293	            0x85c0	                           test eax, eax	       482	wrstabs.c	FUNCTION_6	IF_1	CALL_2
0x4003295	            0x741b	                            je 0x40032b2	       482	wrstabs.c	FUNCTION_6	IF_1	CALL_2
0x4003297	      0xba30000000	                           mov edx, 0x30	       484	wrstabs.c	FUNCTION_6	IF_1	CALL_3
0x400329c	      0xbe00000000	                              mov esi, 0	       484	wrstabs.c	FUNCTION_6	IF_1	CALL_3
0x40032a1	    0x488dbc24b801	                  lea rdi, [rsp + 0x1b8]	       484	wrstabs.c	FUNCTION_6	IF_1	CALL_3
0x40032a9	      0xe800000000	                          call 0x40032ae	       484	wrstabs.c	FUNCTION_6	IF_1	CALL_3
0x40032ae	            0x85c0	                           test eax, eax	       484	wrstabs.c	FUNCTION_6	IF_1	CALL_3
0x40032b0	            0x7528	                           jne 0x40032da	       484	wrstabs.c	FUNCTION_6	IF_1	CALL_3
0x40032b2	      0xe800000000	                          call 0x40032b7	       487	wrstabs.c	FUNCTION_6	IF_1	CALL_4
0x40032b7	            0x89c7	                            mov edi, eax	       487	wrstabs.c	FUNCTION_6	IF_1	CALL_4
0x40032b9	      0xe800000000	                          call 0x40032be	       487	wrstabs.c	FUNCTION_6	IF_1	CALL_4
0x40032be	          0x4889c6	                            mov rsi, rax	       487	wrstabs.c	FUNCTION_6	IF_1	CALL_4
0x40032c1	      0xbf00000000	                              mov edi, 0	       487	wrstabs.c	FUNCTION_6	IF_1	CALL_4
0x40032c6	      0xb800000000	                              mov eax, 0	       487	wrstabs.c	FUNCTION_6	IF_1	CALL_4
0x40032cb	      0xe800000000	                          call 0x40032d0	       487	wrstabs.c	FUNCTION_6	IF_1	CALL_4
0x40032d0	      0xb800000000	                              mov eax, 0	       489	wrstabs.c	FUNCTION_6	IF_1
0x40032d5	      0xe9a2010000	                           jmp 0x400347c	       489	wrstabs.c	FUNCTION_6	IF_1
0x40032da	    0x48c744246000	               mov qword [rsp + 0x60], 0	       492	wrstabs.c	FUNCTION_6
0x40032e3	    0x48c744246801	               mov qword [rsp + 0x68], 1	       493	wrstabs.c	FUNCTION_6
0x40032ec	      0x488d542470	                   lea rdx, [rsp + 0x70]	        90	string3.h	FUNCTION_74	CALL_6
0x40032f1	      0xb929000000	                           mov ecx, 0x29	        90	string3.h	FUNCTION_74	CALL_6
0x40032f6	      0xb800000000	                              mov eax, 0	        90	string3.h	FUNCTION_74	CALL_6
0x40032fb	          0x4889d7	                            mov rdi, rdx	        90	string3.h	FUNCTION_74	CALL_6
0x40032fe	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_74	CALL_6
0x4003301	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       495	wrstabs.c	FUNCTION_6
0x4003308	    0x48898424e001	            mov qword [rsp + 0x1e0], rax	       495	wrstabs.c	FUNCTION_6
0x4003310	    0x48898424e801	            mov qword [rsp + 0x1e8], rax	       496	wrstabs.c	FUNCTION_6
0x4003318	    0x48c78424f001	              mov qword [rsp + 0x1f0], 0	       497	wrstabs.c	FUNCTION_6
0x4003324	    0xc78424f80100	              mov dword [rsp + 0x1f8], 0	       498	wrstabs.c	FUNCTION_6
0x400332f	    0x48c784240002	              mov qword [rsp + 0x200], 0	       499	wrstabs.c	FUNCTION_6
0x400333b	    0x488984240802	            mov qword [rsp + 0x208], rax	       500	wrstabs.c	FUNCTION_6
0x4003343	    0x41b800000000	                              mov r8d, 0	       503	wrstabs.c	FUNCTION_6	IF_2	CALL_8
0x4003349	      0xba00000000	                              mov edx, 0	       503	wrstabs.c	FUNCTION_6	IF_2	CALL_8
0x400334e	      0xbe00000000	                              mov esi, 0	       503	wrstabs.c	FUNCTION_6	IF_2	CALL_8
0x4003353	          0x4889e7	                            mov rdi, rsp	       503	wrstabs.c	FUNCTION_6	IF_2	CALL_8
0x4003356	      0xe8ceecffff	              call sym.stab_write_symbol	       503	wrstabs.c	FUNCTION_6	IF_2	CALL_8
0x400335b	            0x85c0	                           test eax, eax	       503	wrstabs.c	FUNCTION_6	IF_2	CALL_8
0x400335d	     0xf8419010000	                            je 0x400347c	       503	wrstabs.c	FUNCTION_6	IF_2	CALL_8
0x4003363	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       507	wrstabs.c	FUNCTION_6
0x4003368	    0x48898424e001	            mov qword [rsp + 0x1e0], rax	       507	wrstabs.c	FUNCTION_6
0x4003370	          0x4c8b03	                     mov r8, qword [rbx]	       508	wrstabs.c	FUNCTION_6	IF_3	CALL_10
0x4003373	      0xb900000000	                              mov ecx, 0	       508	wrstabs.c	FUNCTION_6	IF_3	CALL_10
0x4003378	      0xba00000000	                              mov edx, 0	       508	wrstabs.c	FUNCTION_6	IF_3	CALL_10
0x400337d	      0xbe64000000	                           mov esi, 0x64	       508	wrstabs.c	FUNCTION_6	IF_3	CALL_10
0x4003382	          0x4889e7	                            mov rdi, rsp	       508	wrstabs.c	FUNCTION_6	IF_3	CALL_10
0x4003385	      0xe89fecffff	              call sym.stab_write_symbol	       508	wrstabs.c	FUNCTION_6	IF_3	CALL_10
0x400338a	            0x85c0	                           test eax, eax	       508	wrstabs.c	FUNCTION_6	IF_3	CALL_10
0x400338c	     0xf84ea000000	                            je 0x400347c	       508	wrstabs.c	FUNCTION_6	IF_3	CALL_10
0x4003392	          0x4889e2	                            mov rdx, rsp	       511	wrstabs.c	FUNCTION_6	IF_4	CALL_11
0x4003395	      0xbe00000000	                              mov esi, 0	       511	wrstabs.c	FUNCTION_6	IF_4	CALL_11
0x400339a	          0x4889ef	                            mov rdi, rbp	       511	wrstabs.c	FUNCTION_6	IF_4	CALL_11
0x400339d	      0xe800000000	                          call 0x40033a2	       511	wrstabs.c	FUNCTION_6	IF_4	CALL_11
0x40033a2	            0x85c0	                           test eax, eax	       511	wrstabs.c	FUNCTION_6	IF_4	CALL_11
0x40033a4	     0xf84d2000000	                            je 0x400347c	       511	wrstabs.c	FUNCTION_6	IF_4	CALL_11
0x40033aa	    0x4883bc240802	cmp qword [rsp + 0x208], 0xffffffffffffffff	       514	wrstabs.c	FUNCTION_6	CALL_12
0x40033b3	            0x7419	                            je 0x40033ce	       514	wrstabs.c	FUNCTION_6	CALL_12
0x40033b5	      0xb900000000	                              mov ecx, 0	       514	wrstabs.c	FUNCTION_6	CALL_12
0x40033ba	      0xba02020000	                          mov edx, 0x202	       514	wrstabs.c	FUNCTION_6	CALL_12
0x40033bf	      0xbe00000000	                              mov esi, 0	       514	wrstabs.c	FUNCTION_6	CALL_12
0x40033c4	      0xbf00000000	                              mov edi, 0	       514	wrstabs.c	FUNCTION_6	CALL_12
0x40033c9	      0xe800000000	                          call 0x40033ce	       514	wrstabs.c	FUNCTION_6	CALL_12
0x40033ce	    0x41b800000000	                              mov r8d, 0	       517	wrstabs.c	FUNCTION_6	IF_5	CALL_13
0x40033d4	    0x488b8c24f001	           mov rcx, qword [rsp + 0x1f0] 	       517	wrstabs.c	FUNCTION_6	IF_5	CALL_13
0x40033dc	      0xba00000000	                              mov edx, 0	       517	wrstabs.c	FUNCTION_6	IF_5	CALL_13
0x40033e1	      0xbe64000000	                           mov esi, 0x64	       517	wrstabs.c	FUNCTION_6	IF_5	CALL_13
0x40033e6	          0x4889e7	                            mov rdi, rsp	       517	wrstabs.c	FUNCTION_6	IF_5	CALL_13
0x40033e9	      0xe83becffff	              call sym.stab_write_symbol	       517	wrstabs.c	FUNCTION_6	IF_5	CALL_13
0x40033ee	            0x85c0	                           test eax, eax	       517	wrstabs.c	FUNCTION_6	IF_5	CALL_13
0x40033f0	     0xf8486000000	                            je 0x400347c	       517	wrstabs.c	FUNCTION_6	IF_5	CALL_13
0x40033f6	      0x488b442408	                mov rax, qword [rsp + 8]	       522	wrstabs.c	FUNCTION_6	CALL_14
0x40033fb	        0x488d7008	                      lea rsi, [rax + 8]	       522	wrstabs.c	FUNCTION_6	CALL_14
0x40033ff	        0x488b4308	                mov rax, qword [rbx + 8]	       522	wrstabs.c	FUNCTION_6	CALL_14
0x4003403	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	       522	wrstabs.c	FUNCTION_6	CALL_14
0x4003408	          0xff5048	                 call qword [rax + 0x48]	       522	wrstabs.c	FUNCTION_6	CALL_14
0x400340b	      0x488b442408	                mov rax, qword [rsp + 8]	       524	wrstabs.c	FUNCTION_6
0x4003410	          0x498907	                    mov qword [r15], rax	       524	wrstabs.c	FUNCTION_6
0x4003413	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       525	wrstabs.c	FUNCTION_6
0x4003418	          0x498906	                    mov qword [r14], rax	       525	wrstabs.c	FUNCTION_6
0x400341b	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	       527	wrstabs.c	FUNCTION_6
0x4003420	        0x49897d00	                    mov qword [r13], rdi	       527	wrstabs.c	FUNCTION_6
0x4003424	      0xe800000000	                          call 0x4003429	       528	wrstabs.c	FUNCTION_6	CALL_15
0x4003429	        0x49890424	                    mov qword [r12], rax	       528	wrstabs.c	FUNCTION_6	CALL_15
0x400342d	        0x488d6801	                      lea rbp, [rax + 1]	       531	wrstabs.c	FUNCTION_6
0x4003431	          0xc60000	                       mov byte [rax], 0	       531	wrstabs.c	FUNCTION_6
0x4003434	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	       532	wrstabs.c	FUNCTION_6	FOR_1
0x4003439	          0x4885db	                           test rbx, rbx	       532	wrstabs.c	FUNCTION_6	FOR_1
0x400343c	            0x7439	                            je 0x4003477	       532	wrstabs.c	FUNCTION_6	FOR_1
0x400343e	    0x49c7c4ffffff	             mov r12, 0xffffffffffffffff	       535	wrstabs.c	FUNCTION_6	FOR_1	CALL_17
0x4003445	        0x488b7308	                mov rsi, qword [rbx + 8]	       110	string3.h	FUNCTION_77	CALL_3
0x4003449	          0x4889ef	                            mov rdi, rbp	       110	string3.h	FUNCTION_77	CALL_3
0x400344c	      0xe800000000	                          call 0x4003451	       110	string3.h	FUNCTION_77	CALL_3
0x4003451	      0xb800000000	                              mov eax, 0	       535	wrstabs.c	FUNCTION_6	FOR_1	CALL_17
0x4003456	          0x4c89e1	                            mov rcx, r12	       535	wrstabs.c	FUNCTION_6	FOR_1	CALL_17
0x4003459	          0x4889ef	                            mov rdi, rbp	       535	wrstabs.c	FUNCTION_6	FOR_1	CALL_17
0x400345c	            0xf2ae	              repne scasb al, byte [rdi]	       535	wrstabs.c	FUNCTION_6	FOR_1	CALL_17
0x400345e	          0x4889c8	                            mov rax, rcx	       535	wrstabs.c	FUNCTION_6	FOR_1	CALL_17
0x4003461	          0x48f7d0	                                 not rax	       535	wrstabs.c	FUNCTION_6	FOR_1	CALL_17
0x4003464	          0x4801c5	                            add rbp, rax	       535	wrstabs.c	FUNCTION_6	FOR_1	CALL_17
0x4003467	        0x488b5b18	            mov rbx, qword [rbx + 0x18] 	       532	wrstabs.c	FUNCTION_6	FOR_1
0x400346b	          0x4885db	                           test rbx, rbx	       532	wrstabs.c	FUNCTION_6	FOR_1
0x400346e	            0x75d5	                           jne 0x4003445	       532	wrstabs.c	FUNCTION_6	FOR_1
0x4003470	      0xb801000000	                              mov eax, 1	       538	wrstabs.c	FUNCTION_6
0x4003475	            0xeb05	                           jmp 0x400347c	       538	wrstabs.c	FUNCTION_6
0x4003477	      0xb801000000	                              mov eax, 1	       538	wrstabs.c	FUNCTION_6
0x400347c	    0x488b8c241802	           mov rcx, qword [rsp + 0x218] 	       539	wrstabs.c	FUNCTION_6
0x4003484	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       539	wrstabs.c	FUNCTION_6
0x400348d	            0x7405	                            je 0x4003494	       539	wrstabs.c	FUNCTION_6
0x400348f	      0xe800000000	                          call 0x4003494	       539	wrstabs.c	FUNCTION_6
0x4003494	    0x4881c4280200	                          add rsp, 0x228	       539	wrstabs.c	FUNCTION_6
0x400349b	              0x5b	                                 pop rbx	       539	wrstabs.c	FUNCTION_6
0x400349c	              0x5d	                                 pop rbp	       539	wrstabs.c	FUNCTION_6
0x400349d	            0x415c	                                 pop r12	       539	wrstabs.c	FUNCTION_6
0x400349f	            0x415d	                                 pop r13	       539	wrstabs.c	FUNCTION_6
0x40034a1	            0x415e	                                 pop r14	       539	wrstabs.c	FUNCTION_6
0x40034a3	            0x415f	                                 pop r15	       539	wrstabs.c	FUNCTION_6
0x40034a5	              0xc3	                                     ret	       539	wrstabs.c	FUNCTION_6
stab_push_defined_type	functions,0:IF,0:ELSE,0:SWITCH,0:CALL,1:WHILE,0:DO,0:FOR,0	31
0x40009d8	            0x4154	                                push r12	       423	wrstabs.c	FUNCTION_4
0x40009da	              0x55	                                push rbp	       423	wrstabs.c	FUNCTION_4
0x40009db	              0x53	                                push rbx	       423	wrstabs.c	FUNCTION_4
0x40009dc	        0x4883ec20	                           sub rsp, 0x20	       423	wrstabs.c	FUNCTION_4
0x40009e0	          0x4889fd	                            mov rbp, rdi	       423	wrstabs.c	FUNCTION_4
0x40009e3	          0x4889f3	                            mov rbx, rsi	       423	wrstabs.c	FUNCTION_4
0x40009e6	          0x4189d4	                           mov r12d, edx	       423	wrstabs.c	FUNCTION_4
0x40009e9	    0x64488b042528	                mov rax, qword fs:[0x28]	       423	wrstabs.c	FUNCTION_4
0x40009f2	      0x4889442418	             mov qword [rsp + 0x18], rax	       423	wrstabs.c	FUNCTION_4
0x40009f7	            0x31c0	                            xor eax, eax	       423	wrstabs.c	FUNCTION_4
0x40009f9	          0x4989f0	                             mov r8, rsi	        33	stdio2.h	FUNCTION_54	CALL_1
0x40009fc	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000a01	      0xba14000000	                           mov edx, 0x14	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000a06	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000a0b	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000a0e	      0xe800000000	                          call 0x4000a13	        33	stdio2.h	FUNCTION_54	CALL_1
0x4000a13	          0x4589e0	                           mov r8d, r12d	       427	wrstabs.c	FUNCTION_4	CALL_1
0x4000a16	      0xb900000000	                              mov ecx, 0	       427	wrstabs.c	FUNCTION_4	CALL_1
0x4000a1b	          0x4889da	                            mov rdx, rbx	       427	wrstabs.c	FUNCTION_4	CALL_1
0x4000a1e	          0x4889e6	                            mov rsi, rsp	       427	wrstabs.c	FUNCTION_4	CALL_1
0x4000a21	          0x4889ef	                            mov rdi, rbp	       427	wrstabs.c	FUNCTION_4	CALL_1
0x4000a24	      0xe82effffff	               call sym.stab_push_string	       427	wrstabs.c	FUNCTION_4	CALL_1
0x4000a29	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       428	wrstabs.c	FUNCTION_4
0x4000a2e	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       428	wrstabs.c	FUNCTION_4
0x4000a37	            0x7405	                            je 0x4000a3e	       428	wrstabs.c	FUNCTION_4
0x4000a39	      0xe800000000	                          call 0x4000a3e	       428	wrstabs.c	FUNCTION_4
0x4000a3e	        0x4883c420	                           add rsp, 0x20	       428	wrstabs.c	FUNCTION_4
0x4000a42	              0x5b	                                 pop rbx	       428	wrstabs.c	FUNCTION_4
0x4000a43	              0x5d	                                 pop rbp	       428	wrstabs.c	FUNCTION_4
0x4000a44	            0x415c	                                 pop r12	       428	wrstabs.c	FUNCTION_4
0x4000a46	              0xc3	                                     ret	       428	wrstabs.c	FUNCTION_4
stab_pointer_type	functions,0:IF,0:ELSE,0:SWITCH,0:CALL,1:WHILE,0:DO,0:FOR,0	8
0x4002003	        0x4883ec08	                              sub rsp, 8	       929	wrstabs.c	FUNCTION_17
0x4002007	    0x488d8f780100	                  lea rcx, [rdi + 0x178]	       933	wrstabs.c	FUNCTION_17	CALL_1
0x400200e	    0x4c8d87800100	                   lea r8, [rdi + 0x180]	       933	wrstabs.c	FUNCTION_17	CALL_1
0x4002015	      0xba04000000	                              mov edx, 4	       933	wrstabs.c	FUNCTION_17	CALL_1
0x400201a	      0xbe2a000000	                           mov esi, 0x2a	       933	wrstabs.c	FUNCTION_17	CALL_1
0x400201f	      0xe83dfdffff	               call sym.stab_modify_type	       933	wrstabs.c	FUNCTION_17	CALL_1
0x4002024	        0x4883c408	                              add rsp, 8	       935	wrstabs.c	FUNCTION_17
0x4002028	              0xc3	                                     ret	       935	wrstabs.c	FUNCTION_17
stab_class_start_method	functions,0:IF,1:ELSE,1:SWITCH,0:CALL,7:WHILE,0:DO,0:FOR,0	62
0x4000726	            0x4154	                                push r12	      1614	wrstabs.c	FUNCTION_34
0x4000728	              0x55	                                push rbp	      1614	wrstabs.c	FUNCTION_34
0x4000729	              0x53	                                push rbx	      1614	wrstabs.c	FUNCTION_34
0x400072a	        0x488b4760	            mov rax, qword [rdi + 0x60] 	      1618	wrstabs.c	FUNCTION_34	CALL_1
0x400072e	          0x4885c0	                           test rax, rax	      1618	wrstabs.c	FUNCTION_34	CALL_1
0x4000731	            0x740d	                            je 0x4000740	      1618	wrstabs.c	FUNCTION_34	CALL_1
0x4000733	          0x4889fb	                            mov rbx, rdi	      1618	wrstabs.c	FUNCTION_34	CALL_1
0x4000736	          0x4889f5	                            mov rbp, rsi	      1618	wrstabs.c	FUNCTION_34	CALL_1
0x4000739	      0x4883782000	               cmp qword [rax + 0x20], 0	      1618	wrstabs.c	FUNCTION_34	CALL_1
0x400073e	            0x7519	                           jne 0x4000759	      1618	wrstabs.c	FUNCTION_34	CALL_1
0x4000740	      0xb900000000	                              mov ecx, 0	      1618	wrstabs.c	FUNCTION_34	CALL_1
0x4000745	      0xba52060000	                          mov edx, 0x652	      1618	wrstabs.c	FUNCTION_34	CALL_1
0x400074a	      0xbe00000000	                              mov esi, 0	      1618	wrstabs.c	FUNCTION_34	CALL_1
0x400074f	      0xbf00000000	                              mov edi, 0	      1618	wrstabs.c	FUNCTION_34	CALL_1
0x4000754	      0xe800000000	                          call 0x4000759	      1618	wrstabs.c	FUNCTION_34	CALL_1
0x4000759	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      1620	wrstabs.c	FUNCTION_34	IF_1
0x400075d	          0x4885d2	                           test rdx, rdx	      1620	wrstabs.c	FUNCTION_34	IF_1
0x4000760	            0x7525	                           jne 0x4000787	      1620	wrstabs.c	FUNCTION_34	IF_1
0x4000762	      0xb800000000	                              mov eax, 0	      1622	wrstabs.c	FUNCTION_34	IF_1	CALL_3
0x4000767	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1622	wrstabs.c	FUNCTION_34	IF_1	CALL_3
0x400076e	          0x4889f7	                            mov rdi, rsi	      1622	wrstabs.c	FUNCTION_34	IF_1	CALL_3
0x4000771	            0xf2ae	              repne scasb al, byte [rdi]	      1622	wrstabs.c	FUNCTION_34	IF_1	CALL_3
0x4000773	          0x48f7d1	                                 not rcx	      1622	wrstabs.c	FUNCTION_34	IF_1	CALL_3
0x4000776	        0x488d7902	                      lea rdi, [rcx + 2]	      1622	wrstabs.c	FUNCTION_34	IF_1	CALL_3
0x400077a	      0xe800000000	                          call 0x400077f	      1622	wrstabs.c	FUNCTION_34	IF_1	CALL_3
0x400077f	          0x4989c4	                            mov r12, rax	      1622	wrstabs.c	FUNCTION_34	IF_1	CALL_3
0x4000782	          0xc60000	                       mov byte [rax], 0	      1623	wrstabs.c	FUNCTION_34	IF_1
0x4000785	            0xeb30	                           jmp 0x40007b7	      1623	wrstabs.c	FUNCTION_34	IF_1
0x4000787	    0x49c7c0ffffff	              mov r8, 0xffffffffffffffff	      1628	wrstabs.c	FUNCTION_34	ELSE_1	CALL_5
0x400078e	      0xb800000000	                              mov eax, 0	      1628	wrstabs.c	FUNCTION_34	ELSE_1	CALL_5
0x4000793	          0x4c89c1	                             mov rcx, r8	      1628	wrstabs.c	FUNCTION_34	ELSE_1	CALL_5
0x4000796	          0x4889d7	                            mov rdi, rdx	      1628	wrstabs.c	FUNCTION_34	ELSE_1	CALL_5
0x4000799	            0xf2ae	              repne scasb al, byte [rdi]	      1628	wrstabs.c	FUNCTION_34	ELSE_1	CALL_5
0x400079b	          0x4889ce	                            mov rsi, rcx	      1628	wrstabs.c	FUNCTION_34	ELSE_1	CALL_5
0x400079e	          0x4c89c1	                             mov rcx, r8	      1629	wrstabs.c	FUNCTION_34	ELSE_1	CALL_6
0x40007a1	          0x4889ef	                            mov rdi, rbp	      1629	wrstabs.c	FUNCTION_34	ELSE_1	CALL_6
0x40007a4	            0xf2ae	              repne scasb al, byte [rdi]	      1629	wrstabs.c	FUNCTION_34	ELSE_1	CALL_6
0x40007a6	          0x48f7de	                                 neg rsi	      1629	wrstabs.c	FUNCTION_34	ELSE_1	CALL_6
0x40007a9	          0x4829ce	                            sub rsi, rcx	      1627	wrstabs.c	FUNCTION_34	ELSE_1	CALL_4
0x40007ac	          0x4889d7	                            mov rdi, rdx	      1627	wrstabs.c	FUNCTION_34	ELSE_1	CALL_4
0x40007af	      0xe800000000	                          call 0x40007b4	      1627	wrstabs.c	FUNCTION_34	ELSE_1	CALL_4
0x40007b4	          0x4989c4	                            mov r12, rax	      1627	wrstabs.c	FUNCTION_34	ELSE_1	CALL_4
0x40007b7	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	      1633	wrstabs.c	FUNCTION_34	CALL_7
0x40007be	      0xb800000000	                              mov eax, 0	      1633	wrstabs.c	FUNCTION_34	CALL_7
0x40007c3	          0x4889d1	                            mov rcx, rdx	      1633	wrstabs.c	FUNCTION_34	CALL_7
0x40007c6	          0x4c89e7	                            mov rdi, r12	      1633	wrstabs.c	FUNCTION_34	CALL_7
0x40007c9	            0xf2ae	              repne scasb al, byte [rdi]	      1633	wrstabs.c	FUNCTION_34	CALL_7
0x40007cb	          0x4889c8	                            mov rax, rcx	      1633	wrstabs.c	FUNCTION_34	CALL_7
0x40007ce	          0x48f7d0	                                 not rax	      1633	wrstabs.c	FUNCTION_34	CALL_7
0x40007d1	      0x498d7c04ff	                lea rdi, [r12 + rax - 1]	        33	stdio2.h	FUNCTION_54	CALL_1
0x40007d6	          0x4989e8	                             mov r8, rbp	        33	stdio2.h	FUNCTION_54	CALL_1
0x40007d9	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x40007de	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_54	CALL_1
0x40007e3	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_54	CALL_1
0x40007e8	      0xe800000000	                          call 0x40007ed	        33	stdio2.h	FUNCTION_54	CALL_1
0x40007ed	        0x488b4360	            mov rax, qword [rbx + 0x60] 	      1635	wrstabs.c	FUNCTION_34
0x40007f1	        0x4c896030	             mov qword [rax + 0x30], r12	      1635	wrstabs.c	FUNCTION_34
0x40007f5	      0xb801000000	                              mov eax, 1	      1638	wrstabs.c	FUNCTION_34
0x40007fa	              0x5b	                                 pop rbx	      1638	wrstabs.c	FUNCTION_34
0x40007fb	              0x5d	                                 pop rbp	      1638	wrstabs.c	FUNCTION_34
0x40007fc	            0x415c	                                 pop r12	      1638	wrstabs.c	FUNCTION_34
0x40007fe	              0xc3	                                     ret	      1638	wrstabs.c	FUNCTION_34
