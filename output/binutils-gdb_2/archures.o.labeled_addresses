bfd_octets_per_byte	functions,0:DO,0:IF,0:WHILE,0:ELSE,0:SWITCH,0:CALL,3:FOR,0	5
0x40006d0	    0x488b87c00000	            mov rax, qword [rdi + 0xc0] 	       985	archures.c	FUNCTION_8
0x40006d7	        0x488b7010	            mov rsi, qword [rax + 0x10] 	      1352	archures.c	FUNCTION_16	CALL_2
0x40006db	          0x8b780c	              mov edi, dword [rax + 0xc]	      1352	archures.c	FUNCTION_16	CALL_2
0x40006de	      0xe800000000	                          call 0x40006e3	      1352	archures.c	FUNCTION_16	CALL_2
0x40006e3	            0xf3c3	                                     ret	      1354	archures.c	FUNCTION_16
bfd_get_arch_info	functions,0:DO,0:IF,0:WHILE,0:ELSE,0:SWITCH,0:CALL,0:FOR,0	2
0x4000611	    0x488b87c00000	            mov rax, qword [rdi + 0xc0] 	      1274	archures.c	FUNCTION_13
0x4000618	              0xc3	                                     ret	      1275	archures.c	FUNCTION_13
bfd_arch_bits_per_byte	functions,0:DO,0:IF,0:WHILE,0:ELSE,0:SWITCH,0:CALL,0:FOR,0	3
0x40005fb	    0x488b87c00000	            mov rax, qword [rdi + 0xc0] 	      1003	archures.c	FUNCTION_9
0x4000602	          0x8b4008	                mov eax, dword [rax + 8]	      1003	archures.c	FUNCTION_9
0x4000605	              0xc3	                                     ret	      1004	archures.c	FUNCTION_9
bfd_arch_bits_per_address	functions,0:DO,0:IF,0:WHILE,0:ELSE,0:SWITCH,0:CALL,0:FOR,0	3
0x4000606	    0x488b87c00000	            mov rax, qword [rdi + 0xc0] 	      1021	archures.c	FUNCTION_10
0x400060d	          0x8b4004	                mov eax, dword [rax + 4]	      1021	archures.c	FUNCTION_10
0x4000610	              0xc3	                                     ret	      1022	archures.c	FUNCTION_10
bfd_default_scan	functions,0:DO,0:IF,14:WHILE,1:ELSE,1:SWITCH,1:CALL,10:FOR,1	243
0x4000064	            0x4156	                                push r14	      1070	archures.c	FUNCTION_12
0x4000066	            0x4155	                                push r13	      1070	archures.c	FUNCTION_12
0x4000068	            0x4154	                                push r12	      1070	archures.c	FUNCTION_12
0x400006a	              0x55	                                push rbp	      1070	archures.c	FUNCTION_12
0x400006b	              0x53	                                push rbx	      1070	archures.c	FUNCTION_12
0x400006c	          0x4989fc	                            mov r12, rdi	      1070	archures.c	FUNCTION_12
0x400006f	          0x4889f3	                            mov rbx, rsi	      1070	archures.c	FUNCTION_12
0x4000072	        0x488b6f18	            mov rbp, qword [rdi + 0x18] 	      1079	archures.c	FUNCTION_12	IF_1	CALL_1
0x4000076	          0x4889ee	                            mov rsi, rbp	      1079	archures.c	FUNCTION_12	IF_1	CALL_1
0x4000079	          0x4889df	                            mov rdi, rbx	      1079	archures.c	FUNCTION_12	IF_1	CALL_1
0x400007c	      0xe800000000	                          call 0x4000081	      1079	archures.c	FUNCTION_12	IF_1	CALL_1
0x4000081	            0x85c0	                           test eax, eax	      1079	archures.c	FUNCTION_12	IF_1	CALL_1
0x4000083	            0x7511	                           jne 0x4000096	      1079	archures.c	FUNCTION_12	IF_1	CALL_1
0x4000085	      0xb901000000	                              mov ecx, 1	      1081	archures.c	FUNCTION_12	IF_1
0x400008a	    0x41837c242c00	               cmp dword [r12 + 0x2c], 0	      1080	archures.c	FUNCTION_12	IF_1
0x4000090	     0xf85bb030000	                           jne 0x4000451	      1080	archures.c	FUNCTION_12	IF_1
0x4000096	      0x4d8b6c2420	            mov r13, qword [r12 + 0x20] 	      1084	archures.c	FUNCTION_12	IF_2	CALL_2
0x400009b	          0x4c89ee	                            mov rsi, r13	      1084	archures.c	FUNCTION_12	IF_2	CALL_2
0x400009e	          0x4889df	                            mov rdi, rbx	      1084	archures.c	FUNCTION_12	IF_2	CALL_2
0x40000a1	      0xe800000000	                          call 0x40000a6	      1084	archures.c	FUNCTION_12	IF_2	CALL_2
0x40000a6	      0xb901000000	                              mov ecx, 1	      1085	archures.c	FUNCTION_12	IF_2
0x40000ab	            0x85c0	                           test eax, eax	      1084	archures.c	FUNCTION_12	IF_2	CALL_2
0x40000ad	     0xf849e030000	                            je 0x4000451	      1084	archures.c	FUNCTION_12	IF_2	CALL_2
0x40000b3	      0xbe3a000000	                           mov esi, 0x3a	      1089	archures.c	FUNCTION_12	CALL_3
0x40000b8	          0x4c89ef	                            mov rdi, r13	      1089	archures.c	FUNCTION_12	CALL_3
0x40000bb	      0xe800000000	                          call 0x40000c0	      1089	archures.c	FUNCTION_12	CALL_3
0x40000c0	          0x4885c0	                           test rax, rax	      1090	archures.c	FUNCTION_12	IF_3
0x40000c3	            0x757e	                           jne 0x4000143	      1090	archures.c	FUNCTION_12	IF_3
0x40000c5	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1092	archures.c	FUNCTION_12	IF_3	CALL_4
0x40000cc	          0x4889ef	                            mov rdi, rbp	      1092	archures.c	FUNCTION_12	IF_3	CALL_4
0x40000cf	            0xf2ae	              repne scasb al, byte [rdi]	      1092	archures.c	FUNCTION_12	IF_3	CALL_4
0x40000d1	          0x48f7d1	                                 not rcx	      1092	archures.c	FUNCTION_12	IF_3	CALL_4
0x40000d4	        0x4c8d71ff	                      lea r14, [rcx - 1]	      1092	archures.c	FUNCTION_12	IF_3	CALL_4
0x40000d8	          0x4c89f2	                            mov rdx, r14	      1093	archures.c	FUNCTION_12	IF_3	IF_4	CALL_5
0x40000db	          0x4889ee	                            mov rsi, rbp	      1093	archures.c	FUNCTION_12	IF_3	IF_4	CALL_5
0x40000de	          0x4889df	                            mov rdi, rbx	      1093	archures.c	FUNCTION_12	IF_3	IF_4	CALL_5
0x40000e1	      0xe800000000	                          call 0x40000e6	      1093	archures.c	FUNCTION_12	IF_3	IF_4	CALL_5
0x40000e6	            0x85c0	                           test eax, eax	      1093	archures.c	FUNCTION_12	IF_3	IF_4	CALL_5
0x40000e8	            0x7539	                           jne 0x4000123	      1093	archures.c	FUNCTION_12	IF_3	IF_4	CALL_5
0x40000ea	        0x4a8d3c33	                    lea rdi, [rbx + r14]	      1095	archures.c	FUNCTION_12	IF_3	IF_4	IF_5
0x40000ee	          0x803f3a	                    cmp byte [rdi], 0x3a	      1095	archures.c	FUNCTION_12	IF_3	IF_4	IF_5
0x40000f1	            0x751b	                           jne 0x400010e	      1095	archures.c	FUNCTION_12	IF_3	IF_4	IF_5
0x40000f3	      0x4a8d7c3301	                lea rdi, [rbx + r14 + 1]	      1097	archures.c	FUNCTION_12	IF_3	IF_4	IF_5	IF_6	CALL_6
0x40000f8	          0x4c89ee	                            mov rsi, r13	      1097	archures.c	FUNCTION_12	IF_3	IF_4	IF_5	IF_6	CALL_6
0x40000fb	      0xe800000000	                          call 0x4000100	      1097	archures.c	FUNCTION_12	IF_3	IF_4	IF_5	IF_6	CALL_6
0x4000100	      0xb901000000	                              mov ecx, 1	      1099	archures.c	FUNCTION_12	IF_3	IF_4	IF_5	IF_6
0x4000105	            0x85c0	                           test eax, eax	      1097	archures.c	FUNCTION_12	IF_3	IF_4	IF_5	IF_6	CALL_6
0x4000107	            0x751a	                           jne 0x4000123	      1097	archures.c	FUNCTION_12	IF_3	IF_4	IF_5	IF_6	CALL_6
0x4000109	      0xe943030000	                           jmp 0x4000451	      1097	archures.c	FUNCTION_12	IF_3	IF_4	IF_5	IF_6	CALL_6
0x400010e	          0x4c89ee	                            mov rsi, r13	      1103	archures.c	FUNCTION_12	IF_3	IF_4	ELSE_1	IF_7	CALL_7
0x4000111	      0xe800000000	                          call 0x4000116	      1103	archures.c	FUNCTION_12	IF_3	IF_4	ELSE_1	IF_7	CALL_7
0x4000116	      0xb901000000	                              mov ecx, 1	      1105	archures.c	FUNCTION_12	IF_3	IF_4	ELSE_1	IF_7
0x400011b	            0x85c0	                           test eax, eax	      1103	archures.c	FUNCTION_12	IF_3	IF_4	ELSE_1	IF_7	CALL_7
0x400011d	     0xf842e030000	                            je 0x4000451	      1103	archures.c	FUNCTION_12	IF_3	IF_4	ELSE_1	IF_7	CALL_7
0x4000123	           0xfb603	                   movzx eax, byte [rbx]	      1133	archures.c	FUNCTION_12	FOR_1
0x4000126	            0x84c0	                             test al, al	      1132	archures.c	FUNCTION_12	FOR_1
0x4000128	     0xf8494000000	                            je 0x40001c2	      1132	archures.c	FUNCTION_12	FOR_1
0x400012e	         0xfb65500	                   movzx edx, byte [rbp]	      1133	archures.c	FUNCTION_12	FOR_1
0x4000132	            0x38d0	                              cmp al, dl	      1136	archures.c	FUNCTION_12	FOR_1	IF_10
0x4000134	     0xf850e030000	                           jne 0x4000448	      1136	archures.c	FUNCTION_12	FOR_1	IF_10
0x400013a	            0x84d2	                             test dl, dl	      1136	archures.c	FUNCTION_12	FOR_1	IF_10
0x400013c	            0x7539	                           jne 0x4000177	      1136	archures.c	FUNCTION_12	FOR_1	IF_10
0x400013e	      0xe905030000	                           jmp 0x4000448	      1136	archures.c	FUNCTION_12	FOR_1	IF_10
0x4000143	          0x4c29e8	                            sub rax, r13	      1114	archures.c	FUNCTION_12	IF_8
0x4000146	          0x4989c6	                            mov r14, rax	      1114	archures.c	FUNCTION_12	IF_8
0x4000149	          0x4889c2	                            mov rdx, rax	      1115	archures.c	FUNCTION_12	IF_8	IF_9	CALL_8
0x400014c	          0x4c89ee	                            mov rsi, r13	      1115	archures.c	FUNCTION_12	IF_8	IF_9	CALL_8
0x400014f	          0x4889df	                            mov rdi, rbx	      1115	archures.c	FUNCTION_12	IF_8	IF_9	CALL_8
0x4000152	      0xe800000000	                          call 0x4000157	      1115	archures.c	FUNCTION_12	IF_8	IF_9	CALL_8
0x4000157	            0x85c0	                           test eax, eax	      1115	archures.c	FUNCTION_12	IF_8	IF_9	CALL_8
0x4000159	            0x75c8	                           jne 0x4000123	      1115	archures.c	FUNCTION_12	IF_8	IF_9	CALL_8
0x400015b	      0x4b8d743501	                lea rsi, [r13 + r14 + 1]	      1116	archures.c	FUNCTION_12	IF_8	IF_9	CALL_9
0x4000160	        0x4a8d3c33	                    lea rdi, [rbx + r14]	      1116	archures.c	FUNCTION_12	IF_8	IF_9	CALL_9
0x4000164	      0xe800000000	                          call 0x4000169	      1116	archures.c	FUNCTION_12	IF_8	IF_9	CALL_9
0x4000169	      0xb901000000	                              mov ecx, 1	      1118	archures.c	FUNCTION_12	IF_8	IF_9
0x400016e	            0x85c0	                           test eax, eax	      1116	archures.c	FUNCTION_12	IF_8	IF_9	CALL_9
0x4000170	            0x75b1	                           jne 0x4000123	      1116	archures.c	FUNCTION_12	IF_8	IF_9	CALL_9
0x4000172	      0xe9da020000	                           jmp 0x4000451	      1116	archures.c	FUNCTION_12	IF_8	IF_9	CALL_9
0x4000177	        0x4883c301	                              add rbx, 1	      1134	archures.c	FUNCTION_12	FOR_1
0x400017b	        0x4883c501	                              add rbp, 1	      1134	archures.c	FUNCTION_12	FOR_1
0x400017f	           0xfb603	                   movzx eax, byte [rbx]	      1133	archures.c	FUNCTION_12	FOR_1
0x4000182	            0x84c0	                             test al, al	      1132	archures.c	FUNCTION_12	FOR_1
0x4000184	            0x7419	                            je 0x400019f	      1132	archures.c	FUNCTION_12	FOR_1
0x4000186	         0xfb65500	                   movzx edx, byte [rbp]	      1133	archures.c	FUNCTION_12	FOR_1
0x400018a	            0x84d2	                             test dl, dl	      1136	archures.c	FUNCTION_12	FOR_1	IF_10
0x400018c	     0xf84b6020000	                            je 0x4000448	      1136	archures.c	FUNCTION_12	FOR_1	IF_10
0x4000192	            0x38d0	                              cmp al, dl	      1136	archures.c	FUNCTION_12	FOR_1	IF_10
0x4000194	            0x74e1	                            je 0x4000177	      1136	archures.c	FUNCTION_12	FOR_1	IF_10
0x4000196	      0xe9ad020000	                           jmp 0x4000448	      1136	archures.c	FUNCTION_12	FOR_1	IF_10
0x400019b	        0x4883c301	                              add rbx, 1	      1143	archures.c	FUNCTION_12	IF_11
0x400019f	           0xfb603	                   movzx eax, byte [rbx]	      1145	archures.c	FUNCTION_12	IF_12
0x40001a2	            0x84c0	                             test al, al	      1145	archures.c	FUNCTION_12	IF_12
0x40001a4	            0x741c	                            je 0x40001c2	      1145	archures.c	FUNCTION_12	IF_12
0x40001a6	           0xfb6c8	                           movzx ecx, al	      1153	archures.c	FUNCTION_12	WHILE_1	CALL_10
0x40001a9	      0xba00000000	                              mov edx, 0	      1153	archures.c	FUNCTION_12	WHILE_1	CALL_10
0x40001ae	    0xf68409000000	                test byte [rcx + rcx], 4	      1153	archures.c	FUNCTION_12	WHILE_1	CALL_10
0x40001b6	            0x7514	                           jne 0x40001cc	      1153	archures.c	FUNCTION_12	WHILE_1	CALL_10
0x40001b8	      0xb900000000	                              mov ecx, 0	      1248	archures.c	FUNCTION_12	SWITCH_1
0x40001bd	      0xe98f020000	                           jmp 0x4000451	      1248	archures.c	FUNCTION_12	SWITCH_1
0x40001c2	      0x418b4c242c	            mov ecx, dword [r12 + 0x2c] 	      1149	archures.c	FUNCTION_12	IF_12
0x40001c7	      0xe985020000	                           jmp 0x4000451	      1149	archures.c	FUNCTION_12	IF_12
0x40001cc	        0x488d1492	                  lea rdx, [rdx + rdx*4]	      1155	archures.c	FUNCTION_12	WHILE_1
0x40001d0	        0x480fbec0	                           movsx rax, al	      1155	archures.c	FUNCTION_12	WHILE_1
0x40001d4	      0x488d5450d0	           lea rdx, [rax + rdx*2 - 0x30]	      1155	archures.c	FUNCTION_12	WHILE_1
0x40001d9	        0x4883c301	                              add rbx, 1	      1156	archures.c	FUNCTION_12	WHILE_1
0x40001dd	           0xfb603	                   movzx eax, byte [rbx]	      1153	archures.c	FUNCTION_12	WHILE_1	CALL_10
0x40001e0	           0xfb6c8	                           movzx ecx, al	      1153	archures.c	FUNCTION_12	WHILE_1	CALL_10
0x40001e3	    0xf68409000000	                test byte [rcx + rcx], 4	      1153	archures.c	FUNCTION_12	WHILE_1	CALL_10
0x40001eb	            0x75df	                           jne 0x40001cc	      1153	archures.c	FUNCTION_12	WHILE_1	CALL_10
0x40001ed	    0x4881fa1c1e00	                         cmp rdx, 0x1e1c	      1162	archures.c	FUNCTION_12	SWITCH_1
0x40001f4	     0xf84f8010000	                            je 0x40003f2	      1162	archures.c	FUNCTION_12	SWITCH_1
0x40001fa	    0x4881fa1c1e00	                         cmp rdx, 0x1e1c	      1162	archures.c	FUNCTION_12	SWITCH_1
0x4000201	     0xf87a4000000	                            ja 0x40002ab	      1162	archures.c	FUNCTION_12	SWITCH_1
0x4000207	    0x4881faa21400	                         cmp rdx, 0x14a2	      1162	archures.c	FUNCTION_12	SWITCH_1
0x400020e	     0xf84b1010000	                            je 0x40003c5	      1162	archures.c	FUNCTION_12	SWITCH_1
0x4000214	    0x4881faa21400	                         cmp rdx, 0x14a2	      1162	archures.c	FUNCTION_12	SWITCH_1
0x400021b	            0x7747	                            ja 0x4000264	      1162	archures.c	FUNCTION_12	SWITCH_1
0x400021d	    0x4881faa00f00	                          cmp rdx, 0xfa0	      1162	archures.c	FUNCTION_12	SWITCH_1
0x4000224	     0xf84ae010000	                            je 0x40003d8	      1162	archures.c	FUNCTION_12	SWITCH_1
0x400022a	    0x4881faa00f00	                          cmp rdx, 0xfa0	      1162	archures.c	FUNCTION_12	SWITCH_1
0x4000231	            0x7712	                            ja 0x4000245	      1162	archures.c	FUNCTION_12	SWITCH_1
0x4000233	    0x4881fab80b00	                          cmp rdx, 0xbb8	      1162	archures.c	FUNCTION_12	SWITCH_1
0x400023a	     0xf8491010000	                            je 0x40003d1	      1162	archures.c	FUNCTION_12	SWITCH_1
0x4000240	      0xe9f4010000	                           jmp 0x4000439	      1162	archures.c	FUNCTION_12	SWITCH_1
0x4000245	    0x4881fa501400	                         cmp rdx, 0x1450	      1162	archures.c	FUNCTION_12	SWITCH_1
0x400024c	     0xf8443010000	                            je 0x4000395	      1162	archures.c	FUNCTION_12	SWITCH_1
0x4000252	    0x4881fa561400	                         cmp rdx, 0x1456	      1162	archures.c	FUNCTION_12	SWITCH_1
0x4000259	     0xf8442010000	                            je 0x40003a1	      1162	archures.c	FUNCTION_12	SWITCH_1
0x400025f	      0xe9d5010000	                           jmp 0x4000439	      1162	archures.c	FUNCTION_12	SWITCH_1
0x4000264	    0x4881fa1f1500	                         cmp rdx, 0x151f	      1162	archures.c	FUNCTION_12	SWITCH_1
0x400026b	     0xf8448010000	                            je 0x40003b9	      1162	archures.c	FUNCTION_12	SWITCH_1
0x4000271	    0x4881fa1f1500	                         cmp rdx, 0x151f	      1162	archures.c	FUNCTION_12	SWITCH_1
0x4000278	            0x7712	                            ja 0x400028c	      1162	archures.c	FUNCTION_12	SWITCH_1
0x400027a	    0x4881fabb1400	                         cmp rdx, 0x14bb	      1162	archures.c	FUNCTION_12	SWITCH_1
0x4000281	     0xf8426010000	                            je 0x40003ad	      1162	archures.c	FUNCTION_12	SWITCH_1
0x4000287	      0xe9ad010000	                           jmp 0x4000439	      1162	archures.c	FUNCTION_12	SWITCH_1
0x400028c	    0x4881fa701700	                         cmp rdx, 0x1770	      1162	archures.c	FUNCTION_12	SWITCH_1
0x4000293	     0xf8446010000	                            je 0x40003df	      1162	archures.c	FUNCTION_12	SWITCH_1
0x4000299	    0x4881faf21c00	                         cmp rdx, 0x1cf2	      1162	archures.c	FUNCTION_12	SWITCH_1
0x40002a0	     0xf8440010000	                            je 0x40003e6	      1162	archures.c	FUNCTION_12	SWITCH_1
0x40002a6	      0xe98e010000	                           jmp 0x4000439	      1162	archures.c	FUNCTION_12	SWITCH_1
0x40002ab	    0x4881fab40901	                        cmp rdx, 0x109b4	      1162	archures.c	FUNCTION_12	SWITCH_1
0x40002b2	     0xf8492000000	                            je 0x400034a	      1162	archures.c	FUNCTION_12	SWITCH_1
0x40002b8	    0x4881fab40901	                        cmp rdx, 0x109b4	      1162	archures.c	FUNCTION_12	SWITCH_1
0x40002bf	            0x7743	                            ja 0x4000304	      1162	archures.c	FUNCTION_12	SWITCH_1
0x40002c1	    0x4881fa461e00	                         cmp rdx, 0x1e46	      1162	archures.c	FUNCTION_12	SWITCH_1
0x40002c8	     0xf843c010000	                            je 0x400040a	      1162	archures.c	FUNCTION_12	SWITCH_1
0x40002ce	    0x4881fa461e00	                         cmp rdx, 0x1e46	      1162	archures.c	FUNCTION_12	SWITCH_1
0x40002d5	            0x7712	                            ja 0x40002e9	      1162	archures.c	FUNCTION_12	SWITCH_1
0x40002d7	    0x4881fa311e00	                         cmp rdx, 0x1e31	      1162	archures.c	FUNCTION_12	SWITCH_1
0x40002de	     0xf841a010000	                            je 0x40003fe	      1162	archures.c	FUNCTION_12	SWITCH_1
0x40002e4	      0xe950010000	                           jmp 0x4000439	      1162	archures.c	FUNCTION_12	SWITCH_1
0x40002e9	    0x4881faa00901	                        cmp rdx, 0x109a0	      1162	archures.c	FUNCTION_12	SWITCH_1
0x40002f0	     0xf8420010000	                            je 0x4000416	      1162	archures.c	FUNCTION_12	SWITCH_1
0x40002f6	    0x4881faaa0901	                        cmp rdx, 0x109aa	      1162	archures.c	FUNCTION_12	SWITCH_1
0x40002fd	            0x743c	                            je 0x400033b	      1162	archures.c	FUNCTION_12	SWITCH_1
0x40002ff	      0xe935010000	                           jmp 0x4000439	      1162	archures.c	FUNCTION_12	SWITCH_1
0x4000304	    0x4881fac80901	                        cmp rdx, 0x109c8	      1162	archures.c	FUNCTION_12	SWITCH_1
0x400030b	            0x745b	                            je 0x4000368	      1162	archures.c	FUNCTION_12	SWITCH_1
0x400030d	    0x4881fac80901	                        cmp rdx, 0x109c8	      1162	archures.c	FUNCTION_12	SWITCH_1
0x4000314	            0x770e	                            ja 0x4000324	      1162	archures.c	FUNCTION_12	SWITCH_1
0x4000316	    0x4881fabe0901	                        cmp rdx, 0x109be	      1162	archures.c	FUNCTION_12	SWITCH_1
0x400031d	            0x743a	                            je 0x4000359	      1162	archures.c	FUNCTION_12	SWITCH_1
0x400031f	      0xe915010000	                           jmp 0x4000439	      1162	archures.c	FUNCTION_12	SWITCH_1
0x4000324	    0x4881fadc0901	                        cmp rdx, 0x109dc	      1162	archures.c	FUNCTION_12	SWITCH_1
0x400032b	            0x744a	                            je 0x4000377	      1162	archures.c	FUNCTION_12	SWITCH_1
0x400032d	    0x4881faec0a01	                        cmp rdx, 0x10aec	      1162	archures.c	FUNCTION_12	SWITCH_1
0x4000334	            0x7450	                            je 0x4000386	      1162	archures.c	FUNCTION_12	SWITCH_1
0x4000336	      0xe9fe000000	                           jmp 0x4000439	      1162	archures.c	FUNCTION_12	SWITCH_1
0x400033b	      0xb802000000	                              mov eax, 2	      1169	archures.c	FUNCTION_12	SWITCH_1
0x4000340	      0xba03000000	                              mov edx, 3	      1170	archures.c	FUNCTION_12	SWITCH_1
0x4000345	      0xe9d6000000	                           jmp 0x4000420	      1170	archures.c	FUNCTION_12	SWITCH_1
0x400034a	      0xb802000000	                              mov eax, 2	      1173	archures.c	FUNCTION_12	SWITCH_1
0x400034f	      0xba04000000	                              mov edx, 4	      1174	archures.c	FUNCTION_12	SWITCH_1
0x4000354	      0xe9c7000000	                           jmp 0x4000420	      1175	archures.c	FUNCTION_12	SWITCH_1
0x4000359	      0xb802000000	                              mov eax, 2	      1177	archures.c	FUNCTION_12	SWITCH_1
0x400035e	      0xba05000000	                              mov edx, 5	      1178	archures.c	FUNCTION_12	SWITCH_1
0x4000363	      0xe9b8000000	                           jmp 0x4000420	      1179	archures.c	FUNCTION_12	SWITCH_1
0x4000368	      0xb802000000	                              mov eax, 2	      1181	archures.c	FUNCTION_12	SWITCH_1
0x400036d	      0xba06000000	                              mov edx, 6	      1182	archures.c	FUNCTION_12	SWITCH_1
0x4000372	      0xe9a9000000	                           jmp 0x4000420	      1183	archures.c	FUNCTION_12	SWITCH_1
0x4000377	      0xb802000000	                              mov eax, 2	      1185	archures.c	FUNCTION_12	SWITCH_1
0x400037c	      0xba07000000	                              mov edx, 7	      1186	archures.c	FUNCTION_12	SWITCH_1
0x4000381	      0xe99a000000	                           jmp 0x4000420	      1187	archures.c	FUNCTION_12	SWITCH_1
0x4000386	      0xb802000000	                              mov eax, 2	      1189	archures.c	FUNCTION_12	SWITCH_1
0x400038b	      0xba08000000	                              mov edx, 8	      1190	archures.c	FUNCTION_12	SWITCH_1
0x4000390	      0xe98b000000	                           jmp 0x4000420	      1191	archures.c	FUNCTION_12	SWITCH_1
0x4000395	      0xb802000000	                              mov eax, 2	      1193	archures.c	FUNCTION_12	SWITCH_1
0x400039a	      0xba0a000000	                            mov edx, 0xa	      1194	archures.c	FUNCTION_12	SWITCH_1
0x400039f	            0xeb7f	                           jmp 0x4000420	      1195	archures.c	FUNCTION_12	SWITCH_1
0x40003a1	      0xb802000000	                              mov eax, 2	      1197	archures.c	FUNCTION_12	SWITCH_1
0x40003a6	      0xba0c000000	                            mov edx, 0xc	      1198	archures.c	FUNCTION_12	SWITCH_1
0x40003ab	            0xeb73	                           jmp 0x4000420	      1199	archures.c	FUNCTION_12	SWITCH_1
0x40003ad	      0xb802000000	                              mov eax, 2	      1201	archures.c	FUNCTION_12	SWITCH_1
0x40003b2	      0xba0c000000	                            mov edx, 0xc	      1202	archures.c	FUNCTION_12	SWITCH_1
0x40003b7	            0xeb67	                           jmp 0x4000420	      1203	archures.c	FUNCTION_12	SWITCH_1
0x40003b9	      0xb802000000	                              mov eax, 2	      1205	archures.c	FUNCTION_12	SWITCH_1
0x40003be	      0xba12000000	                           mov edx, 0x12	      1206	archures.c	FUNCTION_12	SWITCH_1
0x40003c3	            0xeb5b	                           jmp 0x4000420	      1207	archures.c	FUNCTION_12	SWITCH_1
0x40003c5	      0xb802000000	                              mov eax, 2	      1209	archures.c	FUNCTION_12	SWITCH_1
0x40003ca	      0xba10000000	                           mov edx, 0x10	      1210	archures.c	FUNCTION_12	SWITCH_1
0x40003cf	            0xeb4f	                           jmp 0x4000420	      1211	archures.c	FUNCTION_12	SWITCH_1
0x40003d1	      0xb807000000	                              mov eax, 7	      1214	archures.c	FUNCTION_12	SWITCH_1
0x40003d6	            0xeb48	                           jmp 0x4000420	      1216	archures.c	FUNCTION_12	SWITCH_1
0x40003d8	      0xb807000000	                              mov eax, 7	      1219	archures.c	FUNCTION_12	SWITCH_1
0x40003dd	            0xeb41	                           jmp 0x4000420	      1221	archures.c	FUNCTION_12	SWITCH_1
0x40003df	      0xb814000000	                           mov eax, 0x14	      1224	archures.c	FUNCTION_12	SWITCH_1
0x40003e4	            0xeb3a	                           jmp 0x4000420	      1225	archures.c	FUNCTION_12	SWITCH_1
0x40003e6	      0xb81f000000	                           mov eax, 0x1f	      1228	archures.c	FUNCTION_12	SWITCH_1
0x40003eb	      0xba2d000000	                           mov edx, 0x2d	      1229	archures.c	FUNCTION_12	SWITCH_1
0x40003f0	            0xeb2e	                           jmp 0x4000420	      1230	archures.c	FUNCTION_12	SWITCH_1
0x40003f2	      0xb81f000000	                           mov eax, 0x1f	      1233	archures.c	FUNCTION_12	SWITCH_1
0x40003f7	      0xba30000000	                           mov edx, 0x30	      1234	archures.c	FUNCTION_12	SWITCH_1
0x40003fc	            0xeb22	                           jmp 0x4000420	      1235	archures.c	FUNCTION_12	SWITCH_1
0x40003fe	      0xb81f000000	                           mov eax, 0x1f	      1238	archures.c	FUNCTION_12	SWITCH_1
0x4000403	      0xba3d000000	                           mov edx, 0x3d	      1239	archures.c	FUNCTION_12	SWITCH_1
0x4000408	            0xeb16	                           jmp 0x4000420	      1240	archures.c	FUNCTION_12	SWITCH_1
0x400040a	      0xb81f000000	                           mov eax, 0x1f	      1243	archures.c	FUNCTION_12	SWITCH_1
0x400040f	      0xba40000000	                           mov edx, 0x40	      1244	archures.c	FUNCTION_12	SWITCH_1
0x4000414	            0xeb0a	                           jmp 0x4000420	      1245	archures.c	FUNCTION_12	SWITCH_1
0x4000416	      0xb802000000	                              mov eax, 2	      1165	archures.c	FUNCTION_12	SWITCH_1
0x400041b	      0xba01000000	                              mov edx, 1	      1166	archures.c	FUNCTION_12	SWITCH_1
0x4000420	      0xb900000000	                              mov ecx, 0	      1252	archures.c	FUNCTION_12	IF_13
0x4000425	      0x413b44240c	              cmp eax, dword [r12 + 0xc]	      1251	archures.c	FUNCTION_12	IF_13
0x400042a	            0x7525	                           jne 0x4000451	      1251	archures.c	FUNCTION_12	IF_13
0x400042c	      0x4939542410	            cmp qword [r12 + 0x10], rdx 	      1081	archures.c	FUNCTION_12	IF_1
0x4000431	           0xf94c1	                                 sete cl	      1081	archures.c	FUNCTION_12	IF_1
0x4000434	           0xfb6c9	                           movzx ecx, cl	      1081	archures.c	FUNCTION_12	IF_1
0x4000437	            0xeb18	                           jmp 0x4000451	      1081	archures.c	FUNCTION_12	IF_1
0x4000439	      0xb900000000	                              mov ecx, 0	      1248	archures.c	FUNCTION_12	SWITCH_1
0x400043e	            0xeb11	                           jmp 0x4000451	      1248	archures.c	FUNCTION_12	SWITCH_1
0x4000440	           0xfb603	                   movzx eax, byte [rbx]	      1145	archures.c	FUNCTION_12	IF_12
0x4000443	      0xe95efdffff	                           jmp 0x40001a6	      1145	archures.c	FUNCTION_12	IF_12
0x4000448	            0x3c3a	                            cmp al, 0x3a	      1142	archures.c	FUNCTION_12	IF_11
0x400044a	            0x75f4	                           jne 0x4000440	      1142	archures.c	FUNCTION_12	IF_11
0x400044c	      0xe94afdffff	                           jmp 0x400019b	      1142	archures.c	FUNCTION_12	IF_11
0x4000451	            0x89c8	                            mov eax, ecx	      1258	archures.c	FUNCTION_12
0x4000453	              0x5b	                                 pop rbx	      1258	archures.c	FUNCTION_12
0x4000454	              0x5d	                                 pop rbp	      1258	archures.c	FUNCTION_12
0x4000455	            0x415c	                                 pop r12	      1258	archures.c	FUNCTION_12
0x4000457	            0x415d	                                 pop r13	      1258	archures.c	FUNCTION_12
0x4000459	            0x415e	                                 pop r14	      1258	archures.c	FUNCTION_12
0x400045b	              0xc3	                                     ret	      1258	archures.c	FUNCTION_12
bfd_arch_mach_octets_per_byte	functions,0:DO,0:IF,1:WHILE,0:ELSE,0:SWITCH,0:CALL,1:FOR,0	11
0x40006b1	      0xe800000000	                          call 0x40006b6	      1375	archures.c	FUNCTION_17	CALL_1
0x40006b6	          0x4885c0	                           test rax, rax	      1377	archures.c	FUNCTION_17	IF_1
0x40006b9	            0x740f	                            je 0x40006ca	      1377	archures.c	FUNCTION_17	IF_1
0x40006bb	          0x8b5008	                mov edx, dword [rax + 8]	      1378	archures.c	FUNCTION_17	IF_1
0x40006be	          0x8d4207	                      lea eax, [rdx + 7]	      1378	archures.c	FUNCTION_17	IF_1
0x40006c1	            0x85d2	                           test edx, edx	      1378	archures.c	FUNCTION_17	IF_1
0x40006c3	           0xf49c2	                         cmovns eax, edx	      1378	archures.c	FUNCTION_17	IF_1
0x40006c6	          0xc1f803	                              sar eax, 3	      1378	archures.c	FUNCTION_17	IF_1
0x40006c9	              0xc3	                                     ret	      1378	archures.c	FUNCTION_17	IF_1
0x40006ca	      0xb801000000	                              mov eax, 1	      1379	archures.c	FUNCTION_17
0x40006cf	              0xc3	                                     ret	      1380	archures.c	FUNCTION_17
bfd_arch_list	functions,0:DO,0:IF,1:WHILE,0:ELSE,0:SWITCH,0:CALL,1:FOR,4	44
0x40004e5	      0xb900000000	                              mov ecx, 0	       802	archures.c	FUNCTION_3
0x40004ea	      0xb800000000	                              mov eax, 0	       802	archures.c	FUNCTION_3
0x40004ef	      0xba00000000	                              mov edx, 0	       802	archures.c	FUNCTION_3
0x40004f4	            0xeb18	                           jmp 0x400050e	       802	archures.c	FUNCTION_3
0x40004f6	          0x83c201	                              add edx, 1	       816	archures.c	FUNCTION_3	FOR_1	FOR_2
0x40004f9	        0x488b4048	            mov rax, qword [rax + 0x48] 	       814	archures.c	FUNCTION_3	FOR_1	FOR_2
0x40004fd	          0x4885c0	                           test rax, rax	       814	archures.c	FUNCTION_3	FOR_1	FOR_2
0x4000500	            0x75f4	                           jne 0x40004f6	       814	archures.c	FUNCTION_3	FOR_1	FOR_2
0x4000502	        0x4883c108	                              add rcx, 8	       811	archures.c	FUNCTION_3	FOR_1
0x4000506	          0x488b01	                    mov rax, qword [rcx]	       811	archures.c	FUNCTION_3	FOR_1
0x4000509	          0x4885c0	                           test rax, rax	       811	archures.c	FUNCTION_3	FOR_1
0x400050c	            0x7407	                            je 0x4000515	       811	archures.c	FUNCTION_3	FOR_1
0x400050e	          0x4885c0	                           test rax, rax	       814	archures.c	FUNCTION_3	FOR_1	FOR_2
0x4000511	            0x75e3	                           jne 0x40004f6	       814	archures.c	FUNCTION_3	FOR_1	FOR_2
0x4000513	            0xebed	                           jmp 0x4000502	       814	archures.c	FUNCTION_3	FOR_1	FOR_2
0x4000515	        0x4883ec08	                              sub rsp, 8	       802	archures.c	FUNCTION_3
0x4000519	          0x8d7a01	                      lea edi, [rdx + 1]	       821	archures.c	FUNCTION_3	CALL_1
0x400051c	          0x4863ff	                         movsxd rdi, edi	       821	archures.c	FUNCTION_3	CALL_1
0x400051f	        0x48c1e703	                              shl rdi, 3	       821	archures.c	FUNCTION_3	CALL_1
0x4000523	      0xe800000000	                          call 0x4000528	       821	archures.c	FUNCTION_3	CALL_1
0x4000528	          0x4885c0	                           test rax, rax	       822	archures.c	FUNCTION_3	IF_1
0x400052b	            0x743f	                            je 0x400056c	       822	archures.c	FUNCTION_3	IF_1
0x400052d	          0x4889c1	                            mov rcx, rax	       822	archures.c	FUNCTION_3	IF_1
0x4000530	      0xba00000000	                              mov edx, 0	       822	archures.c	FUNCTION_3	IF_1
0x4000535	      0xbf00000000	                              mov edi, 0	       822	archures.c	FUNCTION_3	IF_1
0x400053a	            0xeb20	                           jmp 0x400055c	       822	archures.c	FUNCTION_3	IF_1
0x400053c	        0x488b7220	            mov rsi, qword [rdx + 0x20] 	       832	archures.c	FUNCTION_3	FOR_3	FOR_4
0x4000540	          0x488931	                    mov qword [rcx], rsi	       832	archures.c	FUNCTION_3	FOR_3	FOR_4
0x4000543	        0x4883c108	                              add rcx, 8	       833	archures.c	FUNCTION_3	FOR_3	FOR_4
0x4000547	        0x488b5248	            mov rdx, qword [rdx + 0x48] 	       830	archures.c	FUNCTION_3	FOR_3	FOR_4
0x400054b	          0x4885d2	                           test rdx, rdx	       830	archures.c	FUNCTION_3	FOR_3	FOR_4
0x400054e	            0x75ec	                           jne 0x400053c	       830	archures.c	FUNCTION_3	FOR_3	FOR_4
0x4000550	        0x4883c708	                              add rdi, 8	       827	archures.c	FUNCTION_3	FOR_3
0x4000554	          0x488b17	                    mov rdx, qword [rdi]	       827	archures.c	FUNCTION_3	FOR_3
0x4000557	          0x4885d2	                           test rdx, rdx	       827	archures.c	FUNCTION_3	FOR_3
0x400055a	            0x7407	                            je 0x4000563	       827	archures.c	FUNCTION_3	FOR_3
0x400055c	          0x4885d2	                           test rdx, rdx	       830	archures.c	FUNCTION_3	FOR_3	FOR_4
0x400055f	            0x75db	                           jne 0x400053c	       830	archures.c	FUNCTION_3	FOR_3	FOR_4
0x4000561	            0xebed	                           jmp 0x4000550	       830	archures.c	FUNCTION_3	FOR_3	FOR_4
0x4000563	    0x48c701000000	                      mov qword [rcx], 0	       836	archures.c	FUNCTION_3
0x400056a	            0xeb05	                           jmp 0x4000571	       838	archures.c	FUNCTION_3
0x400056c	      0xb800000000	                              mov eax, 0	       823	archures.c	FUNCTION_3	IF_1
0x4000571	        0x4883c408	                              add rsp, 8	       839	archures.c	FUNCTION_3
0x4000575	              0xc3	                                     ret	       839	archures.c	FUNCTION_3
bfd_arch_default_fill	functions,0:DO,0:IF,1:WHILE,0:ELSE,0:SWITCH,0:CALL,2:FOR,0	17
0x400045c	              0x55	                                push rbp	      1401	archures.c	FUNCTION_18
0x400045d	              0x53	                                push rbx	      1401	archures.c	FUNCTION_18
0x400045e	        0x4883ec08	                              sub rsp, 8	      1401	archures.c	FUNCTION_18
0x4000462	          0x4889fd	                            mov rbp, rdi	      1401	archures.c	FUNCTION_18
0x4000465	      0xe800000000	                          call 0x400046a	      1402	archures.c	FUNCTION_18	CALL_1
0x400046a	          0x4889c3	                            mov rbx, rax	      1402	archures.c	FUNCTION_18	CALL_1
0x400046d	          0x4885c0	                           test rax, rax	      1403	archures.c	FUNCTION_18	IF_1
0x4000470	            0x7410	                            je 0x4000482	      1403	archures.c	FUNCTION_18	IF_1
0x4000472	          0x4889ea	                            mov rdx, rbp	        90	string3.h	FUNCTION_23	CALL_6
0x4000475	      0xbe00000000	                              mov esi, 0	        90	string3.h	FUNCTION_23	CALL_6
0x400047a	          0x4889c7	                            mov rdi, rax	        90	string3.h	FUNCTION_23	CALL_6
0x400047d	      0xe800000000	                          call 0x4000482	        90	string3.h	FUNCTION_23	CALL_6
0x4000482	          0x4889d8	                            mov rax, rbx	      1406	archures.c	FUNCTION_18
0x4000485	        0x4883c408	                              add rsp, 8	      1406	archures.c	FUNCTION_18
0x4000489	              0x5b	                                 pop rbx	      1406	archures.c	FUNCTION_18
0x400048a	              0x5d	                                 pop rbp	      1406	archures.c	FUNCTION_18
0x400048b	              0xc3	                                     ret	      1406	archures.c	FUNCTION_18
bfd_arch_get_compatible	functions,0:DO,0:IF,3:WHILE,0:ELSE,2:SWITCH,0:CALL,3:FOR,0	31
0x4000576	          0x4889f0	                            mov rax, rsi	       861	archures.c	FUNCTION_4
0x4000579	    0x488b8fc00000	            mov rcx, qword [rdi + 0xc0] 	       865	archures.c	FUNCTION_4	IF_1
0x4000580	        0x83790c00	                cmp dword [rcx + 0xc], 0	       865	archures.c	FUNCTION_4	IF_1
0x4000584	            0x7422	                            je 0x40005a8	       865	archures.c	FUNCTION_4	IF_1
0x4000586	    0x488bb6c00000	            mov rsi, qword [rsi + 0xc0] 	       867	archures.c	FUNCTION_4	ELSE_1	IF_2
0x400058d	        0x837e0c00	                cmp dword [rsi + 0xc], 0	       867	archures.c	FUNCTION_4	ELSE_1	IF_2
0x4000591	            0x740c	                            je 0x400059f	       867	archures.c	FUNCTION_4	ELSE_1	IF_2
0x4000593	        0x4883ec08	                              sub rsp, 8	       861	archures.c	FUNCTION_4
0x4000597	          0x4889cf	                            mov rdi, rcx	       871	archures.c	FUNCTION_4	CALL_1
0x400059a	          0xff5130	                 call qword [rcx + 0x30]	       871	archures.c	FUNCTION_4	CALL_1
0x400059d	            0xeb38	                           jmp 0x40005d7	       871	archures.c	FUNCTION_4	CALL_1
0x400059f	          0x4889f9	                            mov rcx, rdi	       871	archures.c	FUNCTION_4	CALL_1
0x40005a2	          0x4889c7	                            mov rdi, rax	       868	archures.c	FUNCTION_4	ELSE_1	IF_2
0x40005a5	          0x4889c8	                            mov rax, rcx	       868	archures.c	FUNCTION_4	ELSE_1	IF_2
0x40005a8	            0x85d2	                           test edx, edx	       878	archures.c	FUNCTION_4	IF_3
0x40005aa	            0x751d	                           jne 0x40005c9	       878	archures.c	FUNCTION_4	IF_3
0x40005ac	        0x488b5708	                mov rdx, qword [rdi + 8]	       879	archures.c	FUNCTION_4	IF_3	CALL_3
0x40005b0	          0x488b32	                    mov rsi, qword [rdx]	       879	archures.c	FUNCTION_4	IF_3	CALL_3
0x40005b3	      0xbf00000000	                              mov edi, 0	       879	archures.c	FUNCTION_4	IF_3	CALL_3
0x40005b8	      0xb907000000	                              mov ecx, 7	       879	archures.c	FUNCTION_4	IF_3	CALL_3
0x40005bd	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       879	archures.c	FUNCTION_4	IF_3	CALL_3
0x40005bf	           0xf97c1	                                 seta cl	       879	archures.c	FUNCTION_4	IF_3	CALL_3
0x40005c2	           0xf92c2	                                 setb dl	       879	archures.c	FUNCTION_4	IF_3	CALL_3
0x40005c5	            0x38d1	                              cmp cl, dl	       879	archures.c	FUNCTION_4	IF_3	CALL_3
0x40005c7	            0x7508	                           jne 0x40005d1	       879	archures.c	FUNCTION_4	IF_3	CALL_3
0x40005c9	    0x488b80c00000	            mov rax, qword [rax + 0xc0] 	       880	archures.c	FUNCTION_4	IF_3
0x40005d0	              0xc3	                                     ret	       880	archures.c	FUNCTION_4	IF_3
0x40005d1	      0xb800000000	                              mov eax, 0	       881	archures.c	FUNCTION_4
0x40005d6	              0xc3	                                     ret	       881	archures.c	FUNCTION_4
0x40005d7	        0x4883c408	                              add rsp, 8	       882	archures.c	FUNCTION_4
0x40005db	              0xc3	                                     ret	       882	archures.c	FUNCTION_4
bfd_default_set_arch_mach	functions,0:DO,0:IF,1:WHILE,0:ELSE,0:SWITCH,0:CALL,2:FOR,0	16
0x400065e	              0x53	                                push rbx	       942	archures.c	FUNCTION_6
0x400065f	          0x4889fb	                            mov rbx, rdi	       942	archures.c	FUNCTION_6
0x4000662	            0x89f7	                            mov edi, esi	       942	archures.c	FUNCTION_6
0x4000664	          0x4889d6	                            mov rsi, rdx	       943	archures.c	FUNCTION_6	CALL_1
0x4000667	      0xe800000000	                          call 0x400066c	       943	archures.c	FUNCTION_6	CALL_1
0x400066c	          0x4889c2	                            mov rdx, rax	       943	archures.c	FUNCTION_6	CALL_1
0x400066f	    0x488983c00000	             mov qword [rbx + 0xc0], rax	       943	archures.c	FUNCTION_6	CALL_1
0x4000676	      0xb801000000	                              mov eax, 1	       945	archures.c	FUNCTION_6	IF_1
0x400067b	          0x4885d2	                           test rdx, rdx	       944	archures.c	FUNCTION_6	IF_1
0x400067e	            0x751a	                           jne 0x400069a	       944	archures.c	FUNCTION_6	IF_1
0x4000680	    0x48c783c00000	               mov qword [rbx + 0xc0], 0	       947	archures.c	FUNCTION_6
0x400068b	      0xbf11000000	                           mov edi, 0x11	       948	archures.c	FUNCTION_6	CALL_2
0x4000690	      0xe800000000	                          call 0x4000695	       948	archures.c	FUNCTION_6	CALL_2
0x4000695	      0xb800000000	                              mov eax, 0	       949	archures.c	FUNCTION_6
0x400069a	              0x5b	                                 pop rbx	       950	archures.c	FUNCTION_6
0x400069b	              0xc3	                                     ret	       950	archures.c	FUNCTION_6
_bfd_nowrite_set_arch_mach	functions,0:DO,0:IF,0:WHILE,0:ELSE,0:SWITCH,0:CALL,1:FOR,0	4
0x40006e5	        0x4883ec08	                              sub rsp, 8	      1412	archures.c	FUNCTION_19
0x40006e9	      0xe800000000	                          call 0x40006ee	      1413	archures.c	FUNCTION_19	CALL_1
0x40006ee	        0x4883c408	                              add rsp, 8	      1414	archures.c	FUNCTION_19
0x40006f2	              0xc3	                                     ret	      1414	archures.c	FUNCTION_19
bfd_lookup_arch	functions,0:DO,0:IF,1:WHILE,0:ELSE,0:SWITCH,0:CALL,0:FOR,2	23
0x4000619	      0xba00000000	                              mov edx, 0	      1294	archures.c	FUNCTION_14
0x400061e	      0xb800000000	                              mov eax, 0	      1294	archures.c	FUNCTION_14
0x4000623	            0xeb2b	                           jmp 0x4000650	      1294	archures.c	FUNCTION_14
0x4000625	          0x39780c	              cmp dword [rax + 0xc], edi	      1301	archures.c	FUNCTION_14	FOR_1	FOR_2	IF_1
0x4000628	            0x7511	                           jne 0x400063b	      1301	archures.c	FUNCTION_14	FOR_1	FOR_2	IF_1
0x400062a	        0x48397010	            cmp qword [rax + 0x10], rsi 	      1302	archures.c	FUNCTION_14	FOR_1	FOR_2	IF_1
0x400062e	            0x742c	                            je 0x400065c	      1302	archures.c	FUNCTION_14	FOR_1	FOR_2	IF_1
0x4000630	          0x4885f6	                           test rsi, rsi	      1303	archures.c	FUNCTION_14	FOR_1	FOR_2	IF_1
0x4000633	            0x7506	                           jne 0x400063b	      1303	archures.c	FUNCTION_14	FOR_1	FOR_2	IF_1
0x4000635	        0x83782c00	               cmp dword [rax + 0x2c], 0	      1303	archures.c	FUNCTION_14	FOR_1	FOR_2	IF_1
0x4000639	            0x7521	                           jne 0x400065c	      1303	archures.c	FUNCTION_14	FOR_1	FOR_2	IF_1
0x400063b	        0x488b4048	            mov rax, qword [rax + 0x48] 	      1299	archures.c	FUNCTION_14	FOR_1	FOR_2
0x400063f	          0x4885c0	                           test rax, rax	      1299	archures.c	FUNCTION_14	FOR_1	FOR_2
0x4000642	            0x75e1	                           jne 0x4000625	      1299	archures.c	FUNCTION_14	FOR_1	FOR_2
0x4000644	        0x4883c208	                              add rdx, 8	      1297	archures.c	FUNCTION_14	FOR_1
0x4000648	          0x488b02	                    mov rax, qword [rdx]	      1297	archures.c	FUNCTION_14	FOR_1
0x400064b	          0x4885c0	                           test rax, rax	      1297	archures.c	FUNCTION_14	FOR_1
0x400064e	            0x7407	                            je 0x4000657	      1297	archures.c	FUNCTION_14	FOR_1
0x4000650	          0x4885c0	                           test rax, rax	      1299	archures.c	FUNCTION_14	FOR_1	FOR_2
0x4000653	            0x75d0	                           jne 0x4000625	      1299	archures.c	FUNCTION_14	FOR_1	FOR_2
0x4000655	            0xebed	                           jmp 0x4000644	      1299	archures.c	FUNCTION_14	FOR_1	FOR_2
0x4000657	      0xb800000000	                              mov eax, 0	      1308	archures.c	FUNCTION_14
0x400065c	            0xf3c3	                                     ret	      1309	archures.c	FUNCTION_14
bfd_scan_arch	functions,0:DO,0:IF,1:WHILE,0:ELSE,0:SWITCH,0:CALL,1:FOR,2	29
0x4000498	            0x4154	                                push r12	       772	archures.c	FUNCTION_2
0x400049a	              0x55	                                push rbp	       772	archures.c	FUNCTION_2
0x400049b	              0x53	                                push rbx	       772	archures.c	FUNCTION_2
0x400049c	          0x4889fd	                            mov rbp, rdi	       772	archures.c	FUNCTION_2
0x400049f	      0xbb00000000	                              mov ebx, 0	       772	archures.c	FUNCTION_2
0x40004a4	    0x41bc00000000	                             mov r12d, 0	       772	archures.c	FUNCTION_2
0x40004aa	            0xeb23	                           jmp 0x40004cf	       772	archures.c	FUNCTION_2
0x40004ac	          0x4889ee	                            mov rsi, rbp	       780	archures.c	FUNCTION_2	FOR_1	FOR_2	IF_1	CALL_1
0x40004af	          0x4889df	                            mov rdi, rbx	       780	archures.c	FUNCTION_2	FOR_1	FOR_2	IF_1	CALL_1
0x40004b2	          0xff5338	                 call qword [rbx + 0x38]	       780	archures.c	FUNCTION_2	FOR_1	FOR_2	IF_1	CALL_1
0x40004b5	            0x85c0	                           test eax, eax	       780	archures.c	FUNCTION_2	FOR_1	FOR_2	IF_1	CALL_1
0x40004b7	            0x751d	                           jne 0x40004d6	       780	archures.c	FUNCTION_2	FOR_1	FOR_2	IF_1	CALL_1
0x40004b9	        0x488b5b48	            mov rbx, qword [rbx + 0x48] 	       778	archures.c	FUNCTION_2	FOR_1	FOR_2
0x40004bd	          0x4885db	                           test rbx, rbx	       778	archures.c	FUNCTION_2	FOR_1	FOR_2
0x40004c0	            0x75ea	                           jne 0x40004ac	       778	archures.c	FUNCTION_2	FOR_1	FOR_2
0x40004c2	        0x4983c408	                              add r12, 8	       776	archures.c	FUNCTION_2	FOR_1
0x40004c6	        0x498b1c24	                    mov rbx, qword [r12]	       776	archures.c	FUNCTION_2	FOR_1
0x40004ca	          0x4885db	                           test rbx, rbx	       776	archures.c	FUNCTION_2	FOR_1
0x40004cd	            0x740c	                            je 0x40004db	       776	archures.c	FUNCTION_2	FOR_1
0x40004cf	          0x4885db	                           test rbx, rbx	       778	archures.c	FUNCTION_2	FOR_1	FOR_2
0x40004d2	            0x75d8	                           jne 0x40004ac	       778	archures.c	FUNCTION_2	FOR_1	FOR_2
0x40004d4	            0xebec	                           jmp 0x40004c2	       778	archures.c	FUNCTION_2	FOR_1	FOR_2
0x40004d6	          0x4889d8	                            mov rax, rbx	       778	archures.c	FUNCTION_2	FOR_1	FOR_2
0x40004d9	            0xeb05	                           jmp 0x40004e0	       778	archures.c	FUNCTION_2	FOR_1	FOR_2
0x40004db	      0xb800000000	                              mov eax, 0	       785	archures.c	FUNCTION_2
0x40004e0	              0x5b	                                 pop rbx	       786	archures.c	FUNCTION_2
0x40004e1	              0x5d	                                 pop rbp	       786	archures.c	FUNCTION_2
0x40004e2	            0x415c	                                 pop r12	       786	archures.c	FUNCTION_2
0x40004e4	              0xc3	                                     ret	       786	archures.c	FUNCTION_2
bfd_printable_name	functions,0:DO,0:IF,0:WHILE,0:ELSE,0:SWITCH,0:CALL,0:FOR,0	3
0x400048c	    0x488b87c00000	            mov rax, qword [rdi + 0xc0] 	       754	archures.c	FUNCTION_1
0x4000493	        0x488b4020	            mov rax, qword [rax + 0x20] 	       754	archures.c	FUNCTION_1
0x4000497	              0xc3	                                     ret	       755	archures.c	FUNCTION_1
bfd_printable_arch_mach	functions,0:DO,0:IF,1:WHILE,0:ELSE,0:SWITCH,0:CALL,1:FOR,0	7
0x400069c	      0xe800000000	                          call 0x40006a1	      1329	archures.c	FUNCTION_15	CALL_1
0x40006a1	          0x4885c0	                           test rax, rax	      1331	archures.c	FUNCTION_15	IF_1
0x40006a4	            0x7405	                            je 0x40006ab	      1331	archures.c	FUNCTION_15	IF_1
0x40006a6	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1332	archures.c	FUNCTION_15	IF_1
0x40006aa	              0xc3	                                     ret	      1332	archures.c	FUNCTION_15	IF_1
0x40006ab	      0xb800000000	                              mov eax, 0	      1333	archures.c	FUNCTION_15
0x40006b0	              0xc3	                                     ret	      1334	archures.c	FUNCTION_15
bfd_default_compatible	functions,0:DO,0:IF,4:WHILE,0:ELSE,0:SWITCH,0:CALL,0:FOR,0	12
0x4000040	      0xb800000000	                              mov eax, 0	      1041	archures.c	FUNCTION_11	IF_1
0x4000045	          0x8b560c	              mov edx, dword [rsi + 0xc]	      1040	archures.c	FUNCTION_11	IF_1
0x4000048	          0x39570c	              cmp dword [rdi + 0xc], edx	      1040	archures.c	FUNCTION_11	IF_1
0x400004b	            0x7515	                           jne 0x4000062	      1040	archures.c	FUNCTION_11	IF_1
0x400004d	            0x8b0e	                    mov ecx, dword [rsi]	      1043	archures.c	FUNCTION_11	IF_2
0x400004f	            0x390f	                    cmp dword [rdi], ecx	      1043	archures.c	FUNCTION_11	IF_2
0x4000051	            0x750f	                           jne 0x4000062	      1043	archures.c	FUNCTION_11	IF_2
0x4000053	        0x488b4710	            mov rax, qword [rdi + 0x10] 	      1049	archures.c	FUNCTION_11	IF_4
0x4000057	        0x483b4610	            cmp rax, qword [rsi + 0x10] 	      1052	archures.c	FUNCTION_11
0x400005b	          0x4889f8	                            mov rax, rdi	      1052	archures.c	FUNCTION_11
0x400005e	        0x480f42c6	                          cmovb rax, rsi	      1052	archures.c	FUNCTION_11
0x4000062	            0xf3c3	                                     ret	      1053	archures.c	FUNCTION_11
bfd_set_arch_info	functions,0:DO,0:IF,0:WHILE,0:ELSE,0:SWITCH,0:CALL,0:FOR,0	2
0x40005dc	    0x4889b7c00000	             mov qword [rdi + 0xc0], rsi	       920	archures.c	FUNCTION_5
0x40005e3	              0xc3	                                     ret	       920	archures.c	FUNCTION_5
