minfo	FOR,0:DO,0:WHILE,0:functions,0:ELSE,1:IF,2:CALL,7:SWITCH,0	90
0x4001000	    0x4881ecd80000	                           sub rsp, 0xd8	       641	ldmisc.c	FUNCTION_5
0x4001007	      0x4889742428	             mov qword [rsp + 0x28], rsi	       641	ldmisc.c	FUNCTION_5
0x400100c	      0x4889542430	             mov qword [rsp + 0x30], rdx	       641	ldmisc.c	FUNCTION_5
0x4001011	      0x48894c2438	             mov qword [rsp + 0x38], rcx	       641	ldmisc.c	FUNCTION_5
0x4001016	      0x4c89442440	              mov qword [rsp + 0x40], r8	       641	ldmisc.c	FUNCTION_5
0x400101b	      0x4c894c2448	              mov qword [rsp + 0x48], r9	       641	ldmisc.c	FUNCTION_5
0x4001020	            0x84c0	                             test al, al	       641	ldmisc.c	FUNCTION_5
0x4001022	            0x7437	                            je 0x400105b	       641	ldmisc.c	FUNCTION_5
0x4001024	       0xf29442450	       movaps xmmword [rsp + 0x50], xmm0	       641	ldmisc.c	FUNCTION_5
0x4001029	       0xf294c2460	       movaps xmmword [rsp + 0x60], xmm1	       641	ldmisc.c	FUNCTION_5
0x400102e	       0xf29542470	       movaps xmmword [rsp + 0x70], xmm2	       641	ldmisc.c	FUNCTION_5
0x4001033	     0xf299c248000	       movaps xmmword [rsp + 0x80], xmm3	       641	ldmisc.c	FUNCTION_5
0x400103b	     0xf29a4249000	       movaps xmmword [rsp + 0x90], xmm4	       641	ldmisc.c	FUNCTION_5
0x4001043	     0xf29ac24a000	       movaps xmmword [rsp + 0xa0], xmm5	       641	ldmisc.c	FUNCTION_5
0x400104b	     0xf29b424b000	       movaps xmmword [rsp + 0xb0], xmm6	       641	ldmisc.c	FUNCTION_5
0x4001053	     0xf29bc24c000	       movaps xmmword [rsp + 0xc0], xmm7	       641	ldmisc.c	FUNCTION_5
0x400105b	    0x64488b042528	                mov rax, qword fs:[0x28]	       641	ldmisc.c	FUNCTION_5
0x4001064	      0x4889442418	             mov qword [rsp + 0x18], rax	       641	ldmisc.c	FUNCTION_5
0x4001069	            0x31c0	                            xor eax, eax	       641	ldmisc.c	FUNCTION_5
0x400106b	    0x48833d000000	               cmp qword [0x04001073], 0	       642	ldmisc.c	FUNCTION_5	IF_1
0x4001073	     0xf8402010000	                            je 0x400117b	       642	ldmisc.c	FUNCTION_5	IF_1
0x4001079	    0xc70424080000	                      mov dword [rsp], 8	       646	ldmisc.c	FUNCTION_5	IF_1	CALL_1
0x4001080	    0xc74424043000	               mov dword [rsp + 4], 0x30	       646	ldmisc.c	FUNCTION_5	IF_1	CALL_1
0x4001088	    0x488d8424e000	                   lea rax, [rsp + 0xe0]	       646	ldmisc.c	FUNCTION_5	IF_1	CALL_1
0x4001090	      0x4889442408	                mov qword [rsp + 8], rax	       646	ldmisc.c	FUNCTION_5	IF_1	CALL_1
0x4001095	      0x488d442420	                   lea rax, [rsp + 0x20]	       646	ldmisc.c	FUNCTION_5	IF_1	CALL_1
0x400109a	      0x4889442410	             mov qword [rsp + 0x10], rax	       646	ldmisc.c	FUNCTION_5	IF_1	CALL_1
0x400109f	          0x803f25	                    cmp byte [rdi], 0x25	       647	ldmisc.c	FUNCTION_5	IF_1	IF_2
0x40010a2	     0xf85bc000000	                           jne 0x4001164	       647	ldmisc.c	FUNCTION_5	IF_1	IF_2
0x40010a8	        0x807f0121	                cmp byte [rdi + 1], 0x21	       647	ldmisc.c	FUNCTION_5	IF_1	IF_2
0x40010ac	     0xf85b2000000	                           jne 0x4001164	       647	ldmisc.c	FUNCTION_5	IF_1	IF_2
0x40010b2	        0x807f0200	                   cmp byte [rdi + 2], 0	       647	ldmisc.c	FUNCTION_5	IF_1	IF_2
0x40010b6	     0xf85a8000000	                           jne 0x4001164	       647	ldmisc.c	FUNCTION_5	IF_1	IF_2
0x40010bc	      0xbf20000000	                           mov edi, 0x20	       652	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_2
0x40010c1	      0xe800000000	                          call 0x40010c6	       652	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_2
0x40010c6	    0x48c700000000	                      mov qword [rax], 0	       654	ldmisc.c	FUNCTION_5	IF_1	IF_2
0x40010cd	          0x8b1424	                    mov edx, dword [rsp]	       655	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x40010d0	          0x83fa2f	                           cmp edx, 0x2f	       655	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x40010d3	            0x770f	                            ja 0x40010e4	       655	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x40010d5	            0x89d1	                            mov ecx, edx	       655	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x40010d7	      0x48034c2410	             add rcx, qword [rsp + 0x10]	       655	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x40010dc	          0x83c208	                              add edx, 8	       655	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x40010df	          0x891424	                    mov dword [rsp], edx	       655	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x40010e2	            0xeb0e	                           jmp 0x40010f2	       655	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x40010e4	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       655	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x40010e9	        0x488d5108	                      lea rdx, [rcx + 8]	       655	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x40010ed	      0x4889542408	                mov qword [rsp + 8], rdx	       655	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x40010f2	          0x488b11	                    mov rdx, qword [rcx]	       655	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x40010f5	        0x48895008	                mov qword [rax + 8], rdx	       655	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x40010f9	          0x8b1424	                    mov edx, dword [rsp]	       656	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_4
0x40010fc	          0x83fa2f	                           cmp edx, 0x2f	       656	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_4
0x40010ff	            0x770f	                            ja 0x4001110	       656	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_4
0x4001101	            0x89d1	                            mov ecx, edx	       656	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_4
0x4001103	      0x48034c2410	             add rcx, qword [rsp + 0x10]	       656	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_4
0x4001108	          0x83c208	                              add edx, 8	       656	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_4
0x400110b	          0x891424	                    mov dword [rsp], edx	       656	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_4
0x400110e	            0xeb0e	                           jmp 0x400111e	       656	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_4
0x4001110	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       656	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_4
0x4001115	        0x488d5108	                      lea rdx, [rcx + 8]	       656	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_4
0x4001119	      0x4889542408	                mov qword [rsp + 8], rdx	       656	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_4
0x400111e	          0x488b11	                    mov rdx, qword [rcx]	       656	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_4
0x4001121	        0x48895010	             mov qword [rax + 0x10], rdx	       656	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_4
0x4001125	          0x8b1424	                    mov edx, dword [rsp]	       657	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_5
0x4001128	          0x83fa2f	                           cmp edx, 0x2f	       657	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_5
0x400112b	            0x770f	                            ja 0x400113c	       657	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_5
0x400112d	            0x89d1	                            mov ecx, edx	       657	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_5
0x400112f	      0x48034c2410	             add rcx, qword [rsp + 0x10]	       657	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_5
0x4001134	          0x83c208	                              add edx, 8	       657	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_5
0x4001137	          0x891424	                    mov dword [rsp], edx	       657	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_5
0x400113a	            0xeb0e	                           jmp 0x400114a	       657	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_5
0x400113c	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       657	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_5
0x4001141	        0x488d5108	                      lea rdx, [rcx + 8]	       657	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_5
0x4001145	      0x4889542408	                mov qword [rsp + 8], rdx	       657	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_5
0x400114a	          0x488b11	                    mov rdx, qword [rcx]	       657	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_5
0x400114d	        0x48895018	             mov qword [rax + 0x18], rdx	       657	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_5
0x4001151	    0x488b15000000	            mov rdx, qword [0x04001158] 	       658	ldmisc.c	FUNCTION_5	IF_1	IF_2
0x4001158	          0x488902	                    mov qword [rdx], rax	       658	ldmisc.c	FUNCTION_5	IF_1	IF_2
0x400115b	    0x488905000000	            mov qword [0x04001162], rax 	       659	ldmisc.c	FUNCTION_5	IF_1	IF_2
0x4001162	            0xeb17	                           jmp 0x400117b	       648	ldmisc.c	FUNCTION_5	IF_1	IF_2
0x4001164	      0xb900000000	                              mov ecx, 0	       662	ldmisc.c	FUNCTION_5	IF_1	CALL_6
0x4001169	          0x4889e2	                            mov rdx, rsp	       662	ldmisc.c	FUNCTION_5	IF_1	CALL_6
0x400116c	          0x4889fe	                            mov rsi, rdi	       662	ldmisc.c	FUNCTION_5	IF_1	CALL_6
0x400116f	    0x488b3d000000	            mov rdi, qword [0x04001176] 	       662	ldmisc.c	FUNCTION_5	IF_1	CALL_6
0x4001176	      0xe800000000	                          call 0x400117b	       662	ldmisc.c	FUNCTION_5	IF_1	CALL_6
0x400117b	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       665	ldmisc.c	FUNCTION_5
0x4001180	    0x644833042528	                xor rax, qword fs:[0x28]	       665	ldmisc.c	FUNCTION_5
0x4001189	            0x7405	                            je 0x4001190	       665	ldmisc.c	FUNCTION_5
0x400118b	      0xe800000000	                          call 0x4001190	       665	ldmisc.c	FUNCTION_5
0x4001190	    0x4881c4d80000	                           add rsp, 0xd8	       665	ldmisc.c	FUNCTION_5
0x4001197	              0xc3	                                     ret	       665	ldmisc.c	FUNCTION_5
einfo	FOR,0:DO,0:WHILE,0:functions,0:ELSE,0:IF,0:CALL,5:SWITCH,0	43
0x4000ee6	              0x53	                                push rbx	       621	ldmisc.c	FUNCTION_3
0x4000ee7	    0x4881ecd00000	                           sub rsp, 0xd0	       621	ldmisc.c	FUNCTION_3
0x4000eee	          0x4889fb	                            mov rbx, rdi	       621	ldmisc.c	FUNCTION_3
0x4000ef1	      0x4889742428	             mov qword [rsp + 0x28], rsi	       621	ldmisc.c	FUNCTION_3
0x4000ef6	      0x4889542430	             mov qword [rsp + 0x30], rdx	       621	ldmisc.c	FUNCTION_3
0x4000efb	      0x48894c2438	             mov qword [rsp + 0x38], rcx	       621	ldmisc.c	FUNCTION_3
0x4000f00	      0x4c89442440	              mov qword [rsp + 0x40], r8	       621	ldmisc.c	FUNCTION_3
0x4000f05	      0x4c894c2448	              mov qword [rsp + 0x48], r9	       621	ldmisc.c	FUNCTION_3
0x4000f0a	            0x84c0	                             test al, al	       621	ldmisc.c	FUNCTION_3
0x4000f0c	            0x7437	                            je 0x4000f45	       621	ldmisc.c	FUNCTION_3
0x4000f0e	       0xf29442450	       movaps xmmword [rsp + 0x50], xmm0	       621	ldmisc.c	FUNCTION_3
0x4000f13	       0xf294c2460	       movaps xmmword [rsp + 0x60], xmm1	       621	ldmisc.c	FUNCTION_3
0x4000f18	       0xf29542470	       movaps xmmword [rsp + 0x70], xmm2	       621	ldmisc.c	FUNCTION_3
0x4000f1d	     0xf299c248000	       movaps xmmword [rsp + 0x80], xmm3	       621	ldmisc.c	FUNCTION_3
0x4000f25	     0xf29a4249000	       movaps xmmword [rsp + 0x90], xmm4	       621	ldmisc.c	FUNCTION_3
0x4000f2d	     0xf29ac24a000	       movaps xmmword [rsp + 0xa0], xmm5	       621	ldmisc.c	FUNCTION_3
0x4000f35	     0xf29b424b000	       movaps xmmword [rsp + 0xb0], xmm6	       621	ldmisc.c	FUNCTION_3
0x4000f3d	     0xf29bc24c000	       movaps xmmword [rsp + 0xc0], xmm7	       621	ldmisc.c	FUNCTION_3
0x4000f45	    0x64488b042528	                mov rax, qword fs:[0x28]	       621	ldmisc.c	FUNCTION_3
0x4000f4e	      0x4889442418	             mov qword [rsp + 0x18], rax	       621	ldmisc.c	FUNCTION_3
0x4000f53	            0x31c0	                            xor eax, eax	       621	ldmisc.c	FUNCTION_3
0x4000f55	    0x488b3d000000	            mov rdi, qword [0x04000f5c] 	       624	ldmisc.c	FUNCTION_3	CALL_1
0x4000f5c	      0xe800000000	                          call 0x4000f61	       624	ldmisc.c	FUNCTION_3	CALL_1
0x4000f61	    0xc70424080000	                      mov dword [rsp], 8	       625	ldmisc.c	FUNCTION_3	CALL_2
0x4000f68	    0xc74424043000	               mov dword [rsp + 4], 0x30	       625	ldmisc.c	FUNCTION_3	CALL_2
0x4000f70	    0x488d8424e000	                   lea rax, [rsp + 0xe0]	       625	ldmisc.c	FUNCTION_3	CALL_2
0x4000f78	      0x4889442408	                mov qword [rsp + 8], rax	       625	ldmisc.c	FUNCTION_3	CALL_2
0x4000f7d	      0x488d442420	                   lea rax, [rsp + 0x20]	       625	ldmisc.c	FUNCTION_3	CALL_2
0x4000f82	      0x4889442410	             mov qword [rsp + 0x10], rax	       625	ldmisc.c	FUNCTION_3	CALL_2
0x4000f87	      0xb901000000	                              mov ecx, 1	       626	ldmisc.c	FUNCTION_3	CALL_3
0x4000f8c	          0x4889e2	                            mov rdx, rsp	       626	ldmisc.c	FUNCTION_3	CALL_3
0x4000f8f	          0x4889de	                            mov rsi, rbx	       626	ldmisc.c	FUNCTION_3	CALL_3
0x4000f92	    0x488b3d000000	            mov rdi, qword [0x04000f99] 	       626	ldmisc.c	FUNCTION_3	CALL_3
0x4000f99	      0xe800000000	                          call 0x4000f9e	       626	ldmisc.c	FUNCTION_3	CALL_3
0x4000f9e	    0x488b3d000000	            mov rdi, qword [0x04000fa5] 	       628	ldmisc.c	FUNCTION_3	CALL_5
0x4000fa5	      0xe800000000	                          call 0x4000faa	       628	ldmisc.c	FUNCTION_3	CALL_5
0x4000faa	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       629	ldmisc.c	FUNCTION_3
0x4000faf	    0x644833042528	                xor rax, qword fs:[0x28]	       629	ldmisc.c	FUNCTION_3
0x4000fb8	            0x7405	                            je 0x4000fbf	       629	ldmisc.c	FUNCTION_3
0x4000fba	      0xe800000000	                          call 0x4000fbf	       629	ldmisc.c	FUNCTION_3
0x4000fbf	    0x4881c4d00000	                           add rsp, 0xd0	       629	ldmisc.c	FUNCTION_3
0x4000fc6	              0x5b	                                 pop rbx	       629	ldmisc.c	FUNCTION_3
0x4000fc7	              0xc3	                                     ret	       629	ldmisc.c	FUNCTION_3
vfinfo	FOR,3:DO,0:WHILE,6:functions,0:ELSE,15:IF,49:CALL,56:SWITCH,3	821
0x4000104	            0x4157	                                push r15	        70	ldmisc.c	FUNCTION_1
0x4000106	            0x4156	                                push r14	        70	ldmisc.c	FUNCTION_1
0x4000108	            0x4155	                                push r13	        70	ldmisc.c	FUNCTION_1
0x400010a	            0x4154	                                push r12	        70	ldmisc.c	FUNCTION_1
0x400010c	              0x55	                                push rbp	        70	ldmisc.c	FUNCTION_1
0x400010d	              0x53	                                push rbx	        70	ldmisc.c	FUNCTION_1
0x400010e	    0x4881ecb80100	                          sub rsp, 0x1b8	        70	ldmisc.c	FUNCTION_1
0x4000115	          0x4989ff	                            mov r15, rdi	        70	ldmisc.c	FUNCTION_1
0x4000118	          0x4889f7	                            mov rdi, rsi	        70	ldmisc.c	FUNCTION_1
0x400011b	        0x894c2408	                mov dword [rsp + 8], ecx	        70	ldmisc.c	FUNCTION_1
0x400011f	    0x64488b042528	                mov rax, qword fs:[0x28]	        70	ldmisc.c	FUNCTION_1
0x4000128	    0x48898424a801	            mov qword [rsp + 0x1a8], rax	        70	ldmisc.c	FUNCTION_1
0x4000130	            0x31c0	                            xor eax, eax	        70	ldmisc.c	FUNCTION_1
0x4000132	      0x488d742460	                   lea rsi, [rsp + 0x60]	        70	ldmisc.c	FUNCTION_1
0x4000137	    0x488d8ed80000	                   lea rcx, [rsi + 0xd8]	        70	ldmisc.c	FUNCTION_1
0x400013e	          0x4889f0	                            mov rax, rsi	        70	ldmisc.c	FUNCTION_1
0x4000141	    0xc70000000000	                      mov dword [rax], 0	        99	ldmisc.c	FUNCTION_1	FOR_1
0x4000147	        0x4883c018	                           add rax, 0x18	        99	ldmisc.c	FUNCTION_1	FOR_1
0x400014b	          0x4839c1	                            cmp rcx, rax	        98	ldmisc.c	FUNCTION_1	FOR_1
0x400014e	            0x75f1	                           jne 0x4000141	        98	ldmisc.c	FUNCTION_1	FOR_1
0x4000150	          0x4889f8	                            mov rax, rdi	        98	ldmisc.c	FUNCTION_1	FOR_1
0x4000153	    0x41b800000000	                              mov r8d, 0	        98	ldmisc.c	FUNCTION_1	FOR_1
0x4000159	    0x41bb03010e00	                       mov r11d, 0xe0103	       138	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1	IF_3
0x400015f	      0xe9d9000000	                           jmp 0x400023d	       138	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1	IF_3
0x4000164	        0x4883c001	                              add rax, 1	       106	ldmisc.c	FUNCTION_1	WHILE_1	WHILE_2
0x4000168	           0xfb608	                   movzx ecx, byte [rax]	       105	ldmisc.c	FUNCTION_1	WHILE_1	WHILE_2
0x400016b	          0x80f925	                            cmp cl, 0x25	       105	ldmisc.c	FUNCTION_1	WHILE_1	WHILE_2
0x400016e	            0x7404	                            je 0x4000174	       105	ldmisc.c	FUNCTION_1	WHILE_1	WHILE_2
0x4000170	            0x84c9	                             test cl, cl	       105	ldmisc.c	FUNCTION_1	WHILE_1	WHILE_2
0x4000172	            0x75f0	                           jne 0x4000164	       105	ldmisc.c	FUNCTION_1	WHILE_1	WHILE_2
0x4000174	          0x80f925	                            cmp cl, 0x25	       108	ldmisc.c	FUNCTION_1	WHILE_1	IF_1
0x4000177	     0xf85c0000000	                           jne 0x400023d	       108	ldmisc.c	FUNCTION_1	WHILE_1	IF_1
0x400017d	        0x488d4801	                      lea rcx, [rax + 1]	       110	ldmisc.c	FUNCTION_1	WHILE_1	IF_1
0x4000181	      0x440fb65001	              movzx r10d, byte [rax + 1]	       113	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_2	CALL_1
0x4000186	          0x4589c1	                            mov r9d, r8d	       113	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_2	CALL_1
0x4000189	        0x4180fa30	                          cmp r10b, 0x30	       113	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_2	CALL_1
0x400018d	     0xf84fa0b0000	                            je 0x4000d8d	       113	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_2	CALL_1
0x4000193	        0x410fbeda	                         movsx ebx, r10b	       113	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_2	CALL_1
0x4000197	        0x450fb6d2	                        movzx r10d, r10b	       113	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_2	CALL_1
0x400019b	    0x43f684120000	                test byte [r10 + r10], 4	       113	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_2	CALL_1
0x40001a4	     0xf84e30b0000	                            je 0x4000d8d	       113	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_2	CALL_1
0x40001aa	        0x80780224	                cmp byte [rax + 2], 0x24	       113	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_2	CALL_1
0x40001ae	     0xf85d90b0000	                           jne 0x4000d8d	       113	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_2	CALL_1
0x40001b4	        0x448d4bcf	                   lea r9d, [rbx - 0x31]	       115	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_2
0x40001b8	        0x488d4803	                      lea rcx, [rax + 3]	       116	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_2
0x40001bc	      0xe9cc0b0000	                           jmp 0x4000d8d	       116	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_2
0x40001c1	         0xfb65901	               movzx ebx, byte [rcx + 1]	       137	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1	IF_3
0x40001c5	          0x83eb41	                           sub ebx, 0x41	       137	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1	IF_3
0x40001c8	    0x41ba03000000	                             mov r10d, 3	       140	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1
0x40001ce	          0x80fb13	                            cmp bl, 0x13	       137	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1	IF_3
0x40001d1	     0xf87e50b0000	                            ja 0x4000dbc	       137	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1	IF_3
0x40001d7	        0x490fa3db	                             bt r11, rbx	       138	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1	IF_3
0x40001db	     0xf83db0b0000	                           jae 0x4000dbc	       138	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1	IF_3
0x40001e1	        0x488d4102	                      lea rax, [rcx + 2]	       139	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1	IF_3
0x40001e5	      0xe9d20b0000	                           jmp 0x4000dbc	       139	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1	IF_3
0x40001ea	    0x41ba01000000	                             mov r10d, 1	       152	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1
0x40001f0	      0xe9c70b0000	                           jmp 0x4000dbc	       153	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1
0x40001f5	      0x440fb65101	              movzx r10d, byte [rcx + 1]	       156	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1	IF_4
0x40001fa	        0x4180fa64	                          cmp r10b, 0x64	       156	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1	IF_4
0x40001fe	            0x740a	                            je 0x400020a	       156	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1	IF_4
0x4000200	        0x4180fa75	                          cmp r10b, 0x75	       156	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1	IF_4
0x4000204	     0xf85c10b0000	                           jne 0x4000dcb	       156	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1	IF_4
0x400020a	        0x488d4102	                      lea rax, [rcx + 2]	       158	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1	IF_4
0x400020e	    0x41ba02000000	                             mov r10d, 2	       159	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1	IF_4
0x4000214	      0xe9a30b0000	                           jmp 0x4000dbc	       159	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1	IF_4
0x4000219	      0xba00000000	                              mov edx, 0	       169	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_5	CALL_2
0x400021e	      0xbea9000000	                           mov esi, 0xa9	       169	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_5	CALL_2
0x4000223	      0xbf00000000	                              mov edi, 0	       169	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_5	CALL_2
0x4000228	      0xe800000000	                          call 0x400022d	       169	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_5	CALL_2
0x400022d	          0x4589c9	                            mov r9d, r9d	       170	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_5
0x4000230	        0x4b8d0c49	                    lea rcx, [r9 + r9*2]	       170	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_5
0x4000234	      0x448954cc60	    mov dword [rsp + rcx*8 + 0x60], r10d	       170	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_5
0x4000239	        0x4183c001	                              add r8d, 1	       171	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_5
0x400023d	           0xfb608	                   movzx ecx, byte [rax]	       103	ldmisc.c	FUNCTION_1	WHILE_1
0x4000240	            0x84c9	                             test cl, cl	       103	ldmisc.c	FUNCTION_1	WHILE_1
0x4000242	            0x740e	                            je 0x4000252	       103	ldmisc.c	FUNCTION_1	WHILE_1
0x4000244	          0x80f925	                            cmp cl, 0x25	       105	ldmisc.c	FUNCTION_1	WHILE_1	WHILE_2
0x4000247	     0xf8517ffffff	                           jne 0x4000164	       105	ldmisc.c	FUNCTION_1	WHILE_1	WHILE_2
0x400024d	      0xe92bffffff	                           jmp 0x400017d	       105	ldmisc.c	FUNCTION_1	WHILE_1	WHILE_2
0x4000252	          0x4585c0	                           test r8d, r8d	       176	ldmisc.c	FUNCTION_1	FOR_2
0x4000255	     0xf846c010000	                            je 0x40003c7	       176	ldmisc.c	FUNCTION_1	FOR_2
0x400025b	        0x418d40ff	                       lea eax, [r8 - 1]	       176	ldmisc.c	FUNCTION_1	FOR_2
0x400025f	      0x488d444003	              lea rax, [rax + rax*2 + 3]	       176	ldmisc.c	FUNCTION_1	FOR_2
0x4000264	      0x4c8d44c460	           lea r8, [rsp + rax*8 + 0x60] 	       176	ldmisc.c	FUNCTION_1	FOR_2
0x4000269	          0x4889f0	                            mov rax, rsi	       176	ldmisc.c	FUNCTION_1	FOR_2
0x400026c	          0x833e05	                      cmp dword [rsi], 5	       178	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2
0x400026f	     0xf8731010000	                            ja 0x40003a6	       178	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2
0x4000275	            0x8b0e	                    mov ecx, dword [rsi]	       178	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2
0x4000277	    0xff24cd000000	                       jmp qword [rcx*8]	       178	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2
0x400027e	            0x8b0a	                    mov ecx, dword [rdx]	       181	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_3
0x4000280	          0x83f92f	                           cmp ecx, 0x2f	       181	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_3
0x4000283	            0x770e	                            ja 0x4000293	       181	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_3
0x4000285	          0x4189c9	                            mov r9d, ecx	       181	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_3
0x4000288	        0x4c034a10	              add r9, qword [rdx + 0x10]	       181	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_3
0x400028c	          0x83c108	                              add ecx, 8	       181	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_3
0x400028f	            0x890a	                    mov dword [rdx], ecx	       181	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_3
0x4000291	            0xeb0c	                           jmp 0x400029f	       181	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_3
0x4000293	        0x4c8b4a08	                 mov r9, qword [rdx + 8]	       181	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_3
0x4000297	        0x498d4908	                       lea rcx, [r9 + 8]	       181	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_3
0x400029b	        0x48894a08	                mov qword [rdx + 8], rcx	       181	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_3
0x400029f	          0x418b09	                     mov ecx, dword [r9]	       181	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_3
0x40002a2	            0x8908	                    mov dword [rax], ecx	       181	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_3
0x40002a4	      0xe911010000	                           jmp 0x40003ba	       182	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2
0x40002a9	            0x8b0a	                    mov ecx, dword [rdx]	       184	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_4
0x40002ab	          0x83f92f	                           cmp ecx, 0x2f	       184	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_4
0x40002ae	            0x770e	                            ja 0x40002be	       184	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_4
0x40002b0	          0x4189c9	                            mov r9d, ecx	       184	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_4
0x40002b3	        0x4c034a10	              add r9, qword [rdx + 0x10]	       184	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_4
0x40002b7	          0x83c108	                              add ecx, 8	       184	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_4
0x40002ba	            0x890a	                    mov dword [rdx], ecx	       184	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_4
0x40002bc	            0xeb0c	                           jmp 0x40002ca	       184	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_4
0x40002be	        0x4c8b4a08	                 mov r9, qword [rdx + 8]	       184	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_4
0x40002c2	        0x498d4908	                       lea rcx, [r9 + 8]	       184	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_4
0x40002c6	        0x48894a08	                mov qword [rdx + 8], rcx	       184	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_4
0x40002ca	          0x498b09	                     mov rcx, qword [r9]	       184	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_4
0x40002cd	          0x488908	                    mov qword [rax], rcx	       184	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_4
0x40002d0	      0xe9e5000000	                           jmp 0x40003ba	       185	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2
0x40002d5	            0x8b0a	                    mov ecx, dword [rdx]	       187	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_5
0x40002d7	          0x83f92f	                           cmp ecx, 0x2f	       187	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_5
0x40002da	            0x770e	                            ja 0x40002ea	       187	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_5
0x40002dc	          0x4189c9	                            mov r9d, ecx	       187	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_5
0x40002df	        0x4c034a10	              add r9, qword [rdx + 0x10]	       187	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_5
0x40002e3	          0x83c108	                              add ecx, 8	       187	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_5
0x40002e6	            0x890a	                    mov dword [rdx], ecx	       187	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_5
0x40002e8	            0xeb0c	                           jmp 0x40002f6	       187	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_5
0x40002ea	        0x4c8b4a08	                 mov r9, qword [rdx + 8]	       187	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_5
0x40002ee	        0x498d4908	                       lea rcx, [r9 + 8]	       187	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_5
0x40002f2	        0x48894a08	                mov qword [rdx + 8], rcx	       187	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_5
0x40002f6	          0x498b09	                     mov rcx, qword [r9]	       187	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_5
0x40002f9	          0x488908	                    mov qword [rax], rcx	       187	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_5
0x40002fc	      0xe9b9000000	                           jmp 0x40003ba	       188	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2
0x4000301	            0x8b0a	                    mov ecx, dword [rdx]	       190	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_6
0x4000303	          0x83f92f	                           cmp ecx, 0x2f	       190	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_6
0x4000306	            0x770e	                            ja 0x4000316	       190	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_6
0x4000308	          0x4189c9	                            mov r9d, ecx	       190	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_6
0x400030b	        0x4c034a10	              add r9, qword [rdx + 0x10]	       190	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_6
0x400030f	          0x83c108	                              add ecx, 8	       190	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_6
0x4000312	            0x890a	                    mov dword [rdx], ecx	       190	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_6
0x4000314	            0xeb0c	                           jmp 0x4000322	       190	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_6
0x4000316	        0x4c8b4a08	                 mov r9, qword [rdx + 8]	       190	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_6
0x400031a	        0x498d4908	                       lea rcx, [r9 + 8]	       190	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_6
0x400031e	        0x48894a08	                mov qword [rdx + 8], rcx	       190	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_6
0x4000322	          0x498b09	                     mov rcx, qword [r9]	       190	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_6
0x4000325	          0x488908	                    mov qword [rax], rcx	       190	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_6
0x4000328	      0xe98d000000	                           jmp 0x40003ba	       191	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2
0x400032d	            0x8b0a	                    mov ecx, dword [rdx]	       193	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_7
0x400032f	          0x83f92f	                           cmp ecx, 0x2f	       193	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_7
0x4000332	            0x770e	                            ja 0x4000342	       193	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_7
0x4000334	          0x4189c9	                            mov r9d, ecx	       193	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_7
0x4000337	        0x4c034a10	              add r9, qword [rdx + 0x10]	       193	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_7
0x400033b	          0x83c108	                              add ecx, 8	       193	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_7
0x400033e	            0x890a	                    mov dword [rdx], ecx	       193	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_7
0x4000340	            0xeb0c	                           jmp 0x400034e	       193	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_7
0x4000342	        0x4c8b4a08	                 mov r9, qword [rdx + 8]	       193	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_7
0x4000346	        0x498d4908	                       lea rcx, [r9 + 8]	       193	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_7
0x400034a	        0x48894a08	                mov qword [rdx + 8], rcx	       193	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_7
0x400034e	          0x498b09	                     mov rcx, qword [r9]	       193	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_7
0x4000351	          0x488908	                    mov qword [rax], rcx	       193	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_7
0x4000354	            0x8b0a	                    mov ecx, dword [rdx]	       194	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_8
0x4000356	          0x83f92f	                           cmp ecx, 0x2f	       194	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_8
0x4000359	            0x770e	                            ja 0x4000369	       194	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_8
0x400035b	          0x4189c9	                            mov r9d, ecx	       194	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_8
0x400035e	        0x4c034a10	              add r9, qword [rdx + 0x10]	       194	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_8
0x4000362	          0x83c108	                              add ecx, 8	       194	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_8
0x4000365	            0x890a	                    mov dword [rdx], ecx	       194	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_8
0x4000367	            0xeb0c	                           jmp 0x4000375	       194	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_8
0x4000369	        0x4c8b4a08	                 mov r9, qword [rdx + 8]	       194	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_8
0x400036d	        0x498d4908	                       lea rcx, [r9 + 8]	       194	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_8
0x4000371	        0x48894a08	                mov qword [rdx + 8], rcx	       194	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_8
0x4000375	          0x498b09	                     mov rcx, qword [r9]	       194	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_8
0x4000378	        0x48894808	                mov qword [rax + 8], rcx	       194	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_8
0x400037c	            0x8b0a	                    mov ecx, dword [rdx]	       195	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_9
0x400037e	          0x83f92f	                           cmp ecx, 0x2f	       195	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_9
0x4000381	            0x770e	                            ja 0x4000391	       195	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_9
0x4000383	          0x4189c9	                            mov r9d, ecx	       195	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_9
0x4000386	        0x4c034a10	              add r9, qword [rdx + 0x10]	       195	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_9
0x400038a	          0x83c108	                              add ecx, 8	       195	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_9
0x400038d	            0x890a	                    mov dword [rdx], ecx	       195	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_9
0x400038f	            0xeb0c	                           jmp 0x400039d	       195	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_9
0x4000391	        0x4c8b4a08	                 mov r9, qword [rdx + 8]	       195	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_9
0x4000395	        0x498d4908	                       lea rcx, [r9 + 8]	       195	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_9
0x4000399	        0x48894a08	                mov qword [rdx + 8], rcx	       195	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_9
0x400039d	          0x498b09	                     mov rcx, qword [r9]	       195	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_9
0x40003a0	        0x48894810	             mov qword [rax + 0x10], rcx	       195	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_9
0x40003a4	            0xeb14	                           jmp 0x40003ba	       196	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2
0x40003a6	      0xba00000000	                              mov edx, 0	       198	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_10
0x40003ab	      0xbec6000000	                           mov esi, 0xc6	       198	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_10
0x40003b0	      0xbf00000000	                              mov edi, 0	       198	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_10
0x40003b5	      0xe800000000	                          call 0x40003ba	       198	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_10
0x40003ba	        0x4883c618	                           add rsi, 0x18	       198	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_10
0x40003be	          0x4c39c6	                             cmp rsi, r8	       176	ldmisc.c	FUNCTION_1	FOR_2
0x40003c1	     0xf85a2feffff	                           jne 0x4000269	       176	ldmisc.c	FUNCTION_1	FOR_2
0x40003c7	    0x41be00000000	                             mov r14d, 0	       294	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x40003cd	    0xc744240c0000	                mov dword [rsp + 0xc], 0	       294	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x40003d5	      0xe971090000	                           jmp 0x4000d4b	       294	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x40003da	        0x4883c301	                              add rbx, 1	       207	ldmisc.c	FUNCTION_1	WHILE_3	WHILE_4
0x40003de	           0xfb603	                   movzx eax, byte [rbx]	       206	ldmisc.c	FUNCTION_1	WHILE_3	WHILE_4
0x40003e1	            0x3c25	                            cmp al, 0x25	       206	ldmisc.c	FUNCTION_1	WHILE_3	WHILE_4
0x40003e3	            0x7404	                            je 0x40003e9	       206	ldmisc.c	FUNCTION_1	WHILE_3	WHILE_4
0x40003e5	            0x84c0	                             test al, al	       206	ldmisc.c	FUNCTION_1	WHILE_3	WHILE_4
0x40003e7	            0x75f1	                           jne 0x40003da	       206	ldmisc.c	FUNCTION_1	WHILE_3	WHILE_4
0x40003e9	          0x4839df	                            cmp rdi, rbx	       208	ldmisc.c	FUNCTION_1	WHILE_3	IF_7
0x40003ec	            0x7413	                            je 0x4000401	       208	ldmisc.c	FUNCTION_1	WHILE_3	IF_7
0x40003ee	          0x4889da	                            mov rdx, rbx	       209	ldmisc.c	FUNCTION_1	WHILE_3	IF_7	IF_8	CALL_11
0x40003f1	          0x4829fa	                            sub rdx, rdi	       209	ldmisc.c	FUNCTION_1	WHILE_3	IF_7	IF_8	CALL_11
0x40003f4	          0x4c89f9	                            mov rcx, r15	       209	ldmisc.c	FUNCTION_1	WHILE_3	IF_7	IF_8	CALL_11
0x40003f7	      0xbe01000000	                              mov esi, 1	       209	ldmisc.c	FUNCTION_1	WHILE_3	IF_7	IF_8	CALL_11
0x40003fc	      0xe800000000	                          call 0x4000401	       209	ldmisc.c	FUNCTION_1	WHILE_3	IF_7	IF_8	CALL_11
0x4000401	          0x803b25	                    cmp byte [rbx], 0x25	       214	ldmisc.c	FUNCTION_1	WHILE_3	IF_9
0x4000404	     0xf853e090000	                           jne 0x4000d48	       214	ldmisc.c	FUNCTION_1	WHILE_3	IF_9
0x400040a	        0x488d6b01	                      lea rbp, [rbx + 1]	       216	ldmisc.c	FUNCTION_1	WHILE_3	IF_9
0x400040e	         0xfb65301	               movzx edx, byte [rbx + 1]	       219	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	IF_10	CALL_12
0x4000412	          0x4489f0	                           mov eax, r14d	       218	ldmisc.c	FUNCTION_1	WHILE_3	IF_9
0x4000415	          0x80fa30	                            cmp dl, 0x30	       219	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	IF_10	CALL_12
0x4000418	            0x741d	                            je 0x4000437	       219	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	IF_10	CALL_12
0x400041a	           0xfbeca	                           movsx ecx, dl	       219	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	IF_10	CALL_12
0x400041d	           0xfb6d2	                           movzx edx, dl	       219	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	IF_10	CALL_12
0x4000420	    0xf68412000000	                test byte [rdx + rdx], 4	       219	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	IF_10	CALL_12
0x4000428	            0x740d	                            je 0x4000437	       219	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	IF_10	CALL_12
0x400042a	        0x807b0224	                cmp byte [rbx + 2], 0x24	       219	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	IF_10	CALL_12
0x400042e	            0x7507	                           jne 0x4000437	       219	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	IF_10	CALL_12
0x4000430	          0x8d41cf	                   lea eax, [rcx - 0x31]	       221	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	IF_10
0x4000433	        0x488d6b03	                      lea rbp, [rbx + 3]	       222	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	IF_10
0x4000437	        0x488d5d01	                      lea rbx, [rbp + 1]	       225	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x400043b	         0xfb65500	                   movzx edx, byte [rbp]	       225	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x400043f	          0x80fa76	                            cmp dl, 0x76	       225	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x4000442	     0xf87dc080000	                            ja 0x4000d24	       225	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x4000448	           0xfb6ca	                           movzx ecx, dl	       225	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x400044b	    0xff24cd000000	                       jmp qword [rcx*8]	       225	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x4000452	          0x4889eb	                            mov rbx, rbp	       228	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x4000455	          0x4c89fe	                            mov rsi, r15	       233	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	CALL_13
0x4000458	      0xbf25000000	                           mov edi, 0x25	       233	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	CALL_13
0x400045d	      0xe800000000	                          call 0x4000462	       233	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	CALL_13
0x4000462	      0xe9e1080000	                           jmp 0x4000d48	       234	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x4000467	    0xc70500000000	               mov dword [0x04000471], 0	       238	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x4000471	      0xe9d2080000	                           jmp 0x4000d48	       239	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x4000476	        0x4183c601	                             add r14d, 1	       245	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x400047a	            0x89c0	                            mov eax, eax	       244	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x400047c	        0x488d0440	                  lea rax, [rax + rax*2]	       244	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x4000480	      0x488b4cc460	    mov rcx, qword [rsp + rax*8 + 0x60] 	        97	stdio2.h	CALL_9
0x4000485	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_9
0x400048a	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x400048f	          0x4c89ff	                            mov rdi, r15	        97	stdio2.h	CALL_9
0x4000492	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_9
0x4000497	      0xe800000000	                          call 0x400049c	        97	stdio2.h	CALL_9
0x400049c	      0xe9a7080000	                           jmp 0x4000d48	        97	stdio2.h	CALL_9
0x40004a1	        0x4183c601	                             add r14d, 1	       256	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x40004a5	            0x89c0	                            mov eax, eax	       255	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x40004a7	        0x488d0440	                  lea rax, [rax + rax*2]	       255	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x40004ab	      0x4c8b44c460	     mov r8, qword [rsp + rax*8 + 0x60] 	        33	stdio2.h	FUNCTION_10	CALL_1
0x40004b0	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_10	CALL_1
0x40004b5	      0xba64000000	                           mov edx, 0x64	        33	stdio2.h	FUNCTION_10	CALL_1
0x40004ba	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_10	CALL_1
0x40004bf	    0x488dbc244001	                  lea rdi, [rsp + 0x140]	        33	stdio2.h	FUNCTION_10	CALL_1
0x40004c7	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_10	CALL_1
0x40004cc	      0xe800000000	                          call 0x40004d1	        33	stdio2.h	FUNCTION_10	CALL_1
0x40004d1	     0xfb684244001	          movzx eax, byte [rsp + 0x140] 	       258	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	WHILE_5
0x40004d9	            0x3c30	                            cmp al, 0x30	       258	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	WHILE_5
0x40004db	            0x7515	                           jne 0x40004f2	       258	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	WHILE_5
0x40004dd	    0x488dbc244001	                  lea rdi, [rsp + 0x140]	       258	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	WHILE_5
0x40004e5	        0x4883c701	                              add rdi, 1	       259	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	WHILE_5
0x40004e9	           0xfb607	                   movzx eax, byte [rdi]	       258	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	WHILE_5
0x40004ec	            0x3c30	                            cmp al, 0x30	       258	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	WHILE_5
0x40004ee	            0x74f5	                            je 0x40004e5	       258	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	WHILE_5
0x40004f0	            0xeb08	                           jmp 0x40004fa	       258	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	WHILE_5
0x40004f2	    0x488dbc244001	                  lea rdi, [rsp + 0x140]	       254	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x40004fa	            0x3c01	                               cmp al, 1	       261	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_11
0x40004fc	        0x4883df00	                              sbb rdi, 0	       261	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_11
0x4000500	          0x4c89fe	                            mov rsi, r15	       262	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	CALL_16
0x4000503	      0xe800000000	                          call 0x4000508	       262	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	CALL_16
0x4000508	      0xe93b080000	                           jmp 0x4000d48	       264	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x400050d	        0x4183c601	                             add r14d, 1	       276	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x4000511	            0x89c0	                            mov eax, eax	       275	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x4000513	        0x488d0440	                  lea rax, [rax + rax*2]	       275	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x4000517	      0x4c8b44c460	     mov r8, qword [rsp + rax*8 + 0x60] 	        33	stdio2.h	FUNCTION_10	CALL_1
0x400051c	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_10	CALL_1
0x4000521	      0xba64000000	                           mov edx, 0x64	        33	stdio2.h	FUNCTION_10	CALL_1
0x4000526	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_10	CALL_1
0x400052b	    0x488dbc244001	                  lea rdi, [rsp + 0x140]	        33	stdio2.h	FUNCTION_10	CALL_1
0x4000533	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_10	CALL_1
0x4000538	      0xe800000000	                          call 0x400053d	        33	stdio2.h	FUNCTION_10	CALL_1
0x400053d	     0xfb684244001	          movzx eax, byte [rsp + 0x140] 	       278	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	FOR_3
0x4000545	            0x3c30	                            cmp al, 0x30	       278	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	FOR_3
0x4000547	            0x7516	                           jne 0x400055f	       278	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	FOR_3
0x4000549	    0x488dac244001	                  lea rbp, [rsp + 0x140]	       278	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	FOR_3
0x4000551	        0x4883c501	                              add rbp, 1	       278	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	FOR_3
0x4000555	         0xfb64500	                   movzx eax, byte [rbp]	       278	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	FOR_3
0x4000559	            0x3c30	                            cmp al, 0x30	       278	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	FOR_3
0x400055b	            0x74f4	                            je 0x4000551	       278	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	FOR_3
0x400055d	            0xeb08	                           jmp 0x4000567	       278	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	FOR_3
0x400055f	    0x488dac244001	                  lea rbp, [rsp + 0x140]	       278	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	FOR_3
0x4000567	            0x3c01	                               cmp al, 1	       281	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_12
0x4000569	        0x4883dd00	                              sbb rbp, 0	       281	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_12
0x400056d	      0xb800000000	                              mov eax, 0	       282	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	CALL_18
0x4000572	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       282	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	CALL_18
0x4000579	          0x4889ef	                            mov rdi, rbp	       282	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	CALL_18
0x400057c	            0xf2ae	              repne scasb al, byte [rdi]	       282	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	CALL_18
0x400057e	          0x4889c8	                            mov rax, rcx	       282	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	CALL_18
0x4000581	          0x48f7d0	                                 not rax	       282	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	CALL_18
0x4000584	        0x4883e801	                              sub rax, 1	       282	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	CALL_18
0x4000588	          0x4189c4	                           mov r12d, eax	       282	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	CALL_18
0x400058b	          0x83f807	                              cmp eax, 7	       283	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	WHILE_6
0x400058e	            0x7f17	                            jg 0x40005a7	       283	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	WHILE_6
0x4000590	          0x4c89fe	                            mov rsi, r15	       285	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	WHILE_6	CALL_19
0x4000593	      0xbf20000000	                           mov edi, 0x20	       285	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	WHILE_6	CALL_19
0x4000598	      0xe800000000	                          call 0x400059d	       285	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	WHILE_6	CALL_19
0x400059d	        0x4183c401	                             add r12d, 1	       286	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	WHILE_6
0x40005a1	        0x4183fc08	                             cmp r12d, 8	       283	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	WHILE_6
0x40005a5	            0x75e9	                           jne 0x4000590	       283	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	WHILE_6
0x40005a7	          0x4889e9	                            mov rcx, rbp	        97	stdio2.h	CALL_9
0x40005aa	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_9
0x40005af	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x40005b4	          0x4c89ff	                            mov rdi, r15	        97	stdio2.h	CALL_9
0x40005b7	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_9
0x40005bc	      0xe800000000	                          call 0x40005c1	        97	stdio2.h	CALL_9
0x40005c1	      0xe982070000	                           jmp 0x4000d48	       290	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x40005c6	          0x4c89fe	                            mov rsi, r15	        97	stdio2.h	CALL_9
0x40005c9	    0x488b3d000000	            mov rdi, qword [0x040005d0] 	        97	stdio2.h	CALL_9
0x40005d0	      0xe800000000	                          call 0x40005d5	        97	stdio2.h	CALL_9
0x40005d5	      0xe96e070000	                           jmp 0x4000d48	        97	stdio2.h	CALL_9
0x40005da	      0xe800000000	                          call 0x40005df	       304	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	CALL_21
0x40005df	            0x89c7	                            mov edi, eax	       304	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	CALL_21
0x40005e1	      0xe800000000	                          call 0x40005e6	       304	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	CALL_21
0x40005e6	          0x4c89fe	                            mov rsi, r15	        97	stdio2.h	CALL_9
0x40005e9	          0x4889c7	                            mov rdi, rax	        97	stdio2.h	CALL_9
0x40005ec	      0xe800000000	                          call 0x40005f1	        97	stdio2.h	CALL_9
0x40005f1	      0xe952070000	                           jmp 0x4000d48	        97	stdio2.h	CALL_9
0x40005f6	            0x89c0	                            mov eax, eax	       327	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x40005f8	        0x488d1400	                    lea rdx, [rax + rax]	       327	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x40005fc	        0x488d0c02	                    lea rcx, [rdx + rax]	       327	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x4000600	      0x4c8b64cc60	    mov r12, qword [rsp + rcx*8 + 0x60] 	       327	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x4000605	      0x488b74cc68	    mov rsi, qword [rsp + rcx*8 + 0x68] 	       328	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x400060a	      0x4889742410	             mov qword [rsp + 0x10], rsi	       328	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x400060f	      0x488b44cc70	    mov rax, qword [rsp + rcx*8 + 0x70] 	       329	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x4000614	      0x4889442418	             mov qword [rsp + 0x18], rax	       329	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x4000619	        0x4183c601	                             add r14d, 1	       330	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x400061d	          0x4d85e4	                           test r12, r12	       332	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_13
0x4000620	     0xf8424020000	                            je 0x400084a	       332	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_13
0x4000626	          0x4c89e7	                            mov rdi, r12	       334	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_13	IF_14	CALL_22
0x4000629	      0xe800000000	                          call 0x400062e	       334	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_13	IF_14	CALL_22
0x400062e	            0x85c0	                           test eax, eax	       334	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_13	IF_14	CALL_22
0x4000630	            0x7524	                           jne 0x4000656	       334	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_13	IF_14	CALL_22
0x4000632	      0xba05000000	                              mov edx, 5	       335	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_13	CALL_24
0x4000637	      0xbe00000000	                              mov esi, 0	       335	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_13	CALL_24
0x400063c	      0xbf00000000	                              mov edi, 0	       335	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_13	CALL_24
0x4000641	      0xe800000000	                          call 0x4000646	       335	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_13	CALL_24
0x4000646	          0x4c89e6	                            mov rsi, r12	       335	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_13	CALL_24
0x4000649	          0x4889c7	                            mov rdi, rax	       335	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_13	CALL_24
0x400064c	      0xb800000000	                              mov eax, 0	       335	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_13	CALL_24
0x4000651	      0xe800000000	                          call 0x4000656	       335	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_13	CALL_24
0x4000656	    0x498bb424b000	            mov rsi, qword [r12 + 0xb0] 	       350	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_26
0x400065e	      0x498b442408	                mov rax, qword [r12 + 8]	       350	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_26
0x4000663	            0x6a00	                                  push 0	       350	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_26
0x4000665	      0x488d54242c	                   lea rdx, [rsp + 0x2c]	       350	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_26
0x400066a	              0x52	                                push rdx	       350	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_26
0x400066b	      0x4c8d4c2440	                    lea r9, [rsp + 0x40]	       350	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_26
0x4000670	      0x4c8d442438	                    lea r8, [rsp + 0x38]	       350	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_26
0x4000675	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       350	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_26
0x400067a	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	       350	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_26
0x400067f	          0x4c89e7	                            mov rdi, r12	       350	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_26
0x4000682	    0xff9038020000	                call qword [rax + 0x238]	       350	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_26
0x4000688	        0x4883c410	                           add rsp, 0x10	       350	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_26
0x400068c	            0x85c0	                           test eax, eax	       350	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_26
0x400068e	     0xf84b6010000	                            je 0x400084a	       350	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_26
0x4000694	    0x48837c243000	               cmp qword [rsp + 0x30], 0	       354	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16
0x400069a	     0xf8406010000	                            je 0x40007a6	       354	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16
0x40006a0	         0xfb64500	                   movzx eax, byte [rbp]	       355	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16
0x40006a4	            0x3c43	                            cmp al, 0x43	       355	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16
0x40006a6	            0x7408	                            je 0x40006b0	       355	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16
0x40006a8	            0x3c48	                            cmp al, 0x48	       355	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16
0x40006aa	     0xf85f6000000	                           jne 0x40007a6	       355	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16
0x40006b0	    0x488b05000000	            mov rax, qword [0x040006b7] 	       366	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17
0x40006b7	          0x4885c0	                           test rax, rax	       366	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17
0x40006ba	            0x7458	                            je 0x4000714	       366	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17
0x40006bc	    0x48833d000000	               cmp qword [0x040006c4], 0	       368	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17
0x40006c4	            0x744e	                            je 0x4000714	       368	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17
0x40006c6	          0x4939c4	                            cmp r12, rax	       368	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17
0x40006c9	            0x7549	                           jne 0x4000714	       368	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17
0x40006cb	    0x488b3d000000	            mov rdi, qword [0x040006d2] 	       369	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17
0x40006d2	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	       369	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17
0x40006d7	          0x4885ff	                           test rdi, rdi	       369	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17
0x40006da	           0xf94c2	                                 sete dl	       369	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17
0x40006dd	          0x4885f6	                           test rsi, rsi	       369	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17
0x40006e0	           0xf94c0	                                 sete al	       369	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17
0x40006e3	            0x38c2	                              cmp dl, al	       369	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17
0x40006e5	            0x752d	                           jne 0x4000714	       369	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17
0x40006e7	          0x4885f6	                           test rsi, rsi	       370	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17
0x40006ea	            0x7409	                            je 0x40006f5	       370	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17
0x40006ec	      0xe800000000	                          call 0x40006f1	       371	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_27
0x40006f1	            0x85c0	                           test eax, eax	       371	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_27
0x40006f3	            0x751f	                           jne 0x4000714	       371	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_27
0x40006f5	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	       372	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_28
0x40006fa	    0x488b3d000000	            mov rdi, qword [0x04000701] 	       372	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_28
0x4000701	      0xe800000000	                          call 0x4000706	       372	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_28
0x4000706	    0x41bd00000000	                             mov r13d, 0	       387	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16
0x400070c	            0x85c0	                           test eax, eax	       372	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_28
0x400070e	     0xf84ad000000	                            je 0x40007c1	       372	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_28
0x4000714	      0x4c8b6c2430	            mov r13, qword [rsp + 0x30] 	       374	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_30
0x4000719	      0xba05000000	                              mov edx, 5	       374	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_30
0x400071e	      0xbe00000000	                              mov esi, 0	       374	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_30
0x4000723	      0xbf00000000	                              mov edi, 0	       374	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_30
0x4000728	      0xe800000000	                          call 0x400072d	       374	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_30
0x400072d	          0x4c89e9	                            mov rcx, r13	       374	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_30
0x4000730	          0x4c89e2	                            mov rdx, r12	       374	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_30
0x4000733	          0x4889c6	                            mov rsi, rax	       374	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_30
0x4000736	          0x4c89ff	                            mov rdi, r15	       374	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_30
0x4000739	      0xb800000000	                              mov eax, 0	       374	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_30
0x400073e	      0xe800000000	                          call 0x4000743	       374	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_30
0x4000743	    0x4c8925000000	            mov qword [0x0400074a], r12 	       377	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17
0x400074a	    0x488b3d000000	            mov rdi, qword [0x04000751] 	       378	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	IF_18
0x4000751	          0x4885ff	                           test rdi, rdi	       378	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	IF_18
0x4000754	            0x7405	                            je 0x400075b	       378	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	IF_18
0x4000756	      0xe800000000	                          call 0x400075b	       379	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_31
0x400075b	    0x48c705000000	               mov qword [0x04000766], 0	       380	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17
0x4000766	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	       381	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	IF_19
0x400076b	          0x4885ff	                           test rdi, rdi	       381	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	IF_19
0x400076e	            0x740c	                            je 0x400077c	       381	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	IF_19
0x4000770	      0xe800000000	                          call 0x4000775	       382	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_32
0x4000775	    0x488905000000	            mov qword [0x0400077c], rax 	       382	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_32
0x400077c	    0x488b3d000000	            mov rdi, qword [0x04000783] 	       383	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	IF_20
0x4000783	          0x4885ff	                           test rdi, rdi	       383	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	IF_20
0x4000786	            0x7405	                            je 0x400078d	       383	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	IF_20
0x4000788	      0xe800000000	                          call 0x400078d	       384	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_33
0x400078d	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	       385	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_34
0x4000792	      0xe800000000	                          call 0x4000797	       385	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_34
0x4000797	    0x488905000000	            mov qword [0x0400079e], rax 	       385	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_34
0x400079e	    0x41bd00000000	                             mov r13d, 0	       387	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16
0x40007a4	            0xeb1b	                           jmp 0x40007c1	       387	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16
0x40007a6	          0x4c89e2	                            mov rdx, r12	       390	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_35
0x40007a9	      0xbe00000000	                              mov esi, 0	       390	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_35
0x40007ae	          0x4c89ff	                            mov rdi, r15	       390	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_35
0x40007b1	      0xb800000000	                              mov eax, 0	       390	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_35
0x40007b6	      0xe800000000	                          call 0x40007bb	       390	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_35
0x40007bb	    0x41bd01000000	                             mov r13d, 1	       348	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x40007c1	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       392	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_21
0x40007c6	          0x4885c9	                           test rcx, rcx	       392	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_21
0x40007c9	     0xf8407060000	                            je 0x4000dd6	       392	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_21
0x40007cf	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_9
0x40007d4	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x40007d9	          0x4c89ff	                            mov rdi, r15	        97	stdio2.h	CALL_9
0x40007dc	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_9
0x40007e1	      0xe800000000	                          call 0x40007e6	        97	stdio2.h	CALL_9
0x40007e6	         0xfb66d00	                   movzx ebp, byte [rbp]	       395	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15
0x40007ea	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	       396	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_22
0x40007ef	        0x4080fd47	                           cmp bpl, 0x47	       396	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_22
0x40007f3	            0x7519	                           jne 0x400080e	       396	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_22
0x40007f5	          0x4885d2	                           test rdx, rdx	       396	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_22
0x40007f8	            0x7414	                            je 0x400080e	       396	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_22
0x40007fa	      0xbe00000000	                              mov esi, 0	       397	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_36
0x40007ff	          0x4c89ff	                            mov rdi, r15	       397	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_36
0x4000802	      0xb800000000	                              mov eax, 0	       397	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_36
0x4000807	      0xe800000000	                          call 0x400080c	       397	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_36
0x400080c	            0xeb59	                           jmp 0x4000867	       397	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_36
0x400080e	    0x48837c242800	               cmp qword [rsp + 0x28], 0	       398	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	ELSE_2	IF_23
0x4000814	            0x7457	                            je 0x400086d	       398	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	ELSE_2	IF_23
0x4000816	        0x8b4c2424	            mov ecx, dword [rsp + 0x24] 	       398	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	ELSE_2	IF_23
0x400081a	            0x85c9	                           test ecx, ecx	       398	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	ELSE_2	IF_23
0x400081c	            0x744f	                            je 0x400086d	       398	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	ELSE_2	IF_23
0x400081e	        0x4080fd48	                           cmp bpl, 0x48	       399	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	ELSE_2	IF_23
0x4000822	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_9
0x4000827	    0x41b800000000	                              mov r8d, 0	        97	stdio2.h	CALL_9
0x400082d	        0x4c0f44c0	                           cmove r8, rax	        97	stdio2.h	CALL_9
0x4000831	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_9
0x4000836	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x400083b	          0x4c89ff	                            mov rdi, r15	        97	stdio2.h	CALL_9
0x400083e	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_9
0x4000843	      0xe800000000	                          call 0x4000848	        97	stdio2.h	CALL_9
0x4000848	            0xeb1d	                           jmp 0x4000867	        97	stdio2.h	CALL_9
0x400084a	          0x4c89e2	                            mov rdx, r12	       405	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_4	CALL_37
0x400084d	      0xbe00000000	                              mov esi, 0	       405	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_4	CALL_37
0x4000852	          0x4c89ff	                            mov rdi, r15	       405	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_4	CALL_37
0x4000855	      0xb800000000	                              mov eax, 0	       405	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_4	CALL_37
0x400085a	      0xe800000000	                          call 0x400085f	       405	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_4	CALL_37
0x400085f	    0x41bd01000000	                             mov r13d, 1	       348	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x4000865	            0xeb06	                           jmp 0x400086d	       348	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x4000867	        0x4080fd48	                           cmp bpl, 0x48	       408	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_24
0x400086b	            0x751c	                           jne 0x4000889	       408	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_24
0x400086d	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       409	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	CALL_38
0x4000872	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       409	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	CALL_38
0x4000877	      0xbe00000000	                              mov esi, 0	       409	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	CALL_38
0x400087c	          0x4c89ff	                            mov rdi, r15	       409	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	CALL_38
0x400087f	      0xb800000000	                              mov eax, 0	       409	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	CALL_38
0x4000884	      0xe800000000	                          call 0x4000889	       409	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	CALL_38
0x4000889	          0x4585ed	                         test r13d, r13d	       411	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_25
0x400088c	     0xf84b6040000	                            je 0x4000d48	       411	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_25
0x4000892	    0x48c705000000	               mov qword [0x0400089d], 0	       413	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_25
0x400089d	    0x488b3d000000	            mov rdi, qword [0x040008a4] 	       414	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_25	IF_26
0x40008a4	          0x4885ff	                           test rdi, rdi	       414	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_25	IF_26
0x40008a7	            0x7410	                            je 0x40008b9	       414	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_25	IF_26
0x40008a9	      0xe800000000	                          call 0x40008ae	       416	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_25	IF_26	CALL_39
0x40008ae	    0x48c705000000	               mov qword [0x040008b9], 0	       417	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_25	IF_26
0x40008b9	    0x488b3d000000	            mov rdi, qword [0x040008c0] 	       419	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_25	IF_27
0x40008c0	          0x4885ff	                           test rdi, rdi	       419	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_25	IF_27
0x40008c3	     0xf847f040000	                            je 0x4000d48	       419	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_25	IF_27
0x40008c9	      0xe800000000	                          call 0x40008ce	       421	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_25	IF_27	CALL_40
0x40008ce	    0x48c705000000	               mov qword [0x040008d9], 0	       422	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_25	IF_27
0x40008d9	      0xe96a040000	                           jmp 0x4000d48	       426	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x40008de	         0xfb65501	               movzx edx, byte [rbp + 1]	       429	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28
0x40008e2	          0x80fa41	                            cmp dl, 0x41	       429	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28
0x40008e5	     0xf85c7000000	                           jne 0x40009b2	       429	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28
0x40008eb	        0x488d5d02	                      lea rbx, [rbp + 2]	       437	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28
0x40008ef	            0x89c0	                            mov eax, eax	       438	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28
0x40008f1	        0x488d0440	                  lea rax, [rax + rax*2]	       438	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28
0x40008f5	      0x488b6cc460	    mov rbp, qword [rsp + rax*8 + 0x60] 	       438	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28
0x40008fa	        0x4183c601	                             add r14d, 1	       439	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28
0x40008fe	    0x4c8ba5f00000	            mov r12, qword [rbp + 0xf0] 	       440	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28
0x4000905	          0x4c89fe	                            mov rsi, r15	        97	stdio2.h	CALL_9
0x4000908	        0x488b7d00	                    mov rdi, qword [rbp]	        97	stdio2.h	CALL_9
0x400090c	      0xe800000000	                          call 0x4000911	        97	stdio2.h	CALL_9
0x4000911	          0x4d85e4	                           test r12, r12	       442	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	IF_29
0x4000914	     0xf842e040000	                            je 0x4000d48	       442	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	IF_29
0x400091a	      0x498b442408	                mov rax, qword [r12 + 8]	       443	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	IF_29	CALL_41
0x400091f	          0x8b4008	                mov eax, dword [rax + 8]	       443	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	IF_29	CALL_41
0x4000922	          0x83f805	                              cmp eax, 5	       443	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	IF_29	CALL_41
0x4000925	            0x7528	                           jne 0x400094f	       443	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	IF_29	CALL_41
0x4000927	    0x488b85e00000	            mov rax, qword [rbp + 0xe0] 	       444	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	IF_29	CALL_42
0x400092e	    0x4883b8c00000	               cmp qword [rax + 0xc0], 0	       444	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	IF_29	CALL_42
0x4000936	     0xf840c040000	                            je 0x4000d48	       444	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	IF_29	CALL_42
0x400093c	        0xf6452302	               test byte [rbp + 0x23], 2	       445	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	IF_29
0x4000940	     0xf8502040000	                           jne 0x4000d48	       445	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	IF_29
0x4000946	    0x488b88b00000	            mov rcx, qword [rax + 0xb0] 	       446	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	CALL_43
0x400094d	            0xeb3e	                           jmp 0x400098d	       446	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	CALL_43
0x400094f	          0x83f802	                              cmp eax, 2	       448	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	ELSE_5	IF_30	CALL_44
0x4000952	     0xf85f0030000	                           jne 0x4000d48	       448	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	ELSE_5	IF_30	CALL_44
0x4000958	    0x488b85f00000	            mov rax, qword [rbp + 0xf0] 	       449	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	ELSE_5	IF_30	CALL_45
0x400095f	        0x488b4008	                mov rax, qword [rax + 8]	       449	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	ELSE_5	IF_30	CALL_45
0x4000963	        0x83780802	                  cmp dword [rax + 8], 2	       449	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	ELSE_5	IF_30	CALL_45
0x4000967	     0xf85db030000	                           jne 0x4000d48	       449	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	ELSE_5	IF_30	CALL_45
0x400096d	    0x488b85e00000	            mov rax, qword [rbp + 0xe0] 	       449	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	ELSE_5	IF_30	CALL_45
0x4000974	          0x4885c0	                           test rax, rax	       449	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	ELSE_5	IF_30	CALL_45
0x4000977	     0xf84cb030000	                            je 0x4000d48	       449	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	ELSE_5	IF_30	CALL_45
0x400097d	        0x488b4040	            mov rax, qword [rax + 0x40] 	       449	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	ELSE_5	IF_30	CALL_45
0x4000981	          0x4885c0	                           test rax, rax	       449	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	ELSE_5	IF_30	CALL_45
0x4000984	     0xf84be030000	                            je 0x4000d48	       449	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	ELSE_5	IF_30	CALL_45
0x400098a	          0x488b08	                    mov rcx, qword [rax]	       451	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	ELSE_5	IF_30
0x400098d	          0x4885c9	                           test rcx, rcx	       452	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	IF_31
0x4000990	     0xf84b2030000	                            je 0x4000d48	       452	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	IF_31
0x4000996	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_9
0x400099b	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x40009a0	          0x4c89ff	                            mov rdi, r15	        97	stdio2.h	CALL_9
0x40009a3	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_9
0x40009a8	      0xe800000000	                          call 0x40009ad	        97	stdio2.h	CALL_9
0x40009ad	      0xe996030000	                           jmp 0x4000d48	        97	stdio2.h	CALL_9
0x40009b2	          0x80fa42	                            cmp dl, 0x42	       455	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_6	IF_32
0x40009b5	            0x757a	                           jne 0x4000a31	       455	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_6	IF_32
0x40009b7	            0x89c0	                            mov eax, eax	       458	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_6	IF_32
0x40009b9	        0x488d0440	                  lea rax, [rax + rax*2]	       458	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_6	IF_32
0x40009bd	      0x488b44c460	    mov rax, qword [rsp + rax*8 + 0x60] 	       458	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_6	IF_32
0x40009c2	        0x488d5d02	                      lea rbx, [rbp + 2]	       460	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_6	IF_32
0x40009c6	        0x4183c601	                             add r14d, 1	       461	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_6	IF_32
0x40009ca	          0x4885c0	                           test rax, rax	       462	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_6	IF_32	IF_33
0x40009cd	            0x751e	                           jne 0x40009ed	       462	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_6	IF_32	IF_33
0x40009cf	    0x488b0d000000	            mov rcx, qword [0x040009d6] 	        97	stdio2.h	CALL_9
0x40009d6	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_9
0x40009db	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x40009e0	          0x4c89ff	                            mov rdi, r15	        97	stdio2.h	CALL_9
0x40009e3	      0xe800000000	                          call 0x40009e8	        97	stdio2.h	CALL_9
0x40009e8	      0xe95b030000	                           jmp 0x4000d48	        97	stdio2.h	CALL_9
0x40009ed	    0x488b90d00000	            mov rdx, qword [rax + 0xd0] 	       464	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_6	IF_32	ELSE_7	IF_34
0x40009f4	          0x4885d2	                           test rdx, rdx	       464	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_6	IF_32	ELSE_7	IF_34
0x40009f7	            0x7428	                            je 0x4000a21	       464	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_6	IF_32	ELSE_7	IF_34
0x40009f9	        0xf6424801	               test byte [rdx + 0x48], 1	       465	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_6	IF_32	ELSE_7	IF_34	CALL_46
0x40009fd	            0x7522	                           jne 0x4000a21	       465	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_6	IF_32	ELSE_7	IF_34	CALL_46
0x40009ff	          0x4c8b00	                     mov r8, qword [rax]	        97	stdio2.h	CALL_9
0x4000a02	          0x488b0a	                    mov rcx, qword [rdx]	        97	stdio2.h	CALL_9
0x4000a05	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_9
0x4000a0a	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x4000a0f	          0x4c89ff	                            mov rdi, r15	        97	stdio2.h	CALL_9
0x4000a12	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_9
0x4000a17	      0xe800000000	                          call 0x4000a1c	        97	stdio2.h	CALL_9
0x4000a1c	      0xe927030000	                           jmp 0x4000d48	        97	stdio2.h	CALL_9
0x4000a21	          0x4c89fe	                            mov rsi, r15	        97	stdio2.h	CALL_9
0x4000a24	          0x488b38	                    mov rdi, qword [rax]	        97	stdio2.h	CALL_9
0x4000a27	      0xe800000000	                          call 0x4000a2c	        97	stdio2.h	CALL_9
0x4000a2c	      0xe917030000	                           jmp 0x4000d48	        97	stdio2.h	CALL_9
0x4000a31	          0x80fa49	                            cmp dl, 0x49	       471	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35
0x4000a34	     0xf859e000000	                           jne 0x4000ad8	       471	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35
0x4000a3a	        0x488d5d02	                      lea rbx, [rbp + 2]	       476	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35
0x4000a3e	            0x89c0	                            mov eax, eax	       477	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35
0x4000a40	        0x488d0440	                  lea rax, [rax + rax*2]	       477	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35
0x4000a44	      0x488b6cc460	    mov rbp, qword [rsp + rax*8 + 0x60] 	       477	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35
0x4000a49	        0x4183c601	                             add r14d, 1	       478	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35
0x4000a4d	        0x488b4520	            mov rax, qword [rbp + 0x20] 	       479	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35	IF_36
0x4000a51	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	       479	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35	IF_36
0x4000a58	          0x4885c0	                           test rax, rax	       479	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35	IF_36
0x4000a5b	            0x7420	                            je 0x4000a7d	       479	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35	IF_36
0x4000a5d	        0xf6404801	               test byte [rax + 0x48], 1	       480	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35	IF_36	CALL_47
0x4000a61	            0x751a	                           jne 0x4000a7d	       480	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35	IF_36	CALL_47
0x4000a63	          0x488b08	                    mov rcx, qword [rax]	        97	stdio2.h	CALL_9
0x4000a66	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_9
0x4000a6b	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x4000a70	          0x4c89ff	                            mov rdi, r15	        97	stdio2.h	CALL_9
0x4000a73	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_9
0x4000a78	      0xe800000000	                          call 0x4000a7d	        97	stdio2.h	CALL_9
0x4000a7d	        0x488b7d18	            mov rdi, qword [rbp + 0x18] 	        97	stdio2.h	CALL_9
0x4000a81	          0x4c89fe	                            mov rsi, r15	        97	stdio2.h	CALL_9
0x4000a84	      0xe800000000	                          call 0x4000a89	        97	stdio2.h	CALL_9
0x4000a89	        0x488b4520	            mov rax, qword [rbp + 0x20] 	       484	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35	IF_37
0x4000a8d	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	       484	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35	IF_37
0x4000a94	          0x4885c0	                           test rax, rax	       484	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35	IF_37
0x4000a97	            0x740a	                            je 0x4000aa3	       484	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35	IF_37
0x4000a99	        0xf6404801	               test byte [rax + 0x48], 1	       485	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35	IF_37	CALL_49
0x4000a9d	     0xf84a5020000	                            je 0x4000d48	       485	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35	IF_37	CALL_49
0x4000aa3	        0x488b7510	            mov rsi, qword [rbp + 0x10] 	       486	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35	IF_37	CALL_50
0x4000aa7	        0x488b7d18	            mov rdi, qword [rbp + 0x18] 	       486	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35	IF_37	CALL_50
0x4000aab	      0xe800000000	                          call 0x4000ab0	       486	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35	IF_37	CALL_50
0x4000ab0	            0x85c0	                           test eax, eax	       486	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35	IF_37	CALL_50
0x4000ab2	     0xf8490020000	                            je 0x4000d48	       486	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35	IF_37	CALL_50
0x4000ab8	        0x488b4d10	            mov rcx, qword [rbp + 0x10] 	        97	stdio2.h	CALL_9
0x4000abc	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_9
0x4000ac1	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x4000ac6	          0x4c89ff	                            mov rdi, r15	        97	stdio2.h	CALL_9
0x4000ac9	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_9
0x4000ace	      0xe800000000	                          call 0x4000ad3	        97	stdio2.h	CALL_9
0x4000ad3	      0xe970020000	                           jmp 0x4000d48	        97	stdio2.h	CALL_9
0x4000ad8	          0x80fa52	                            cmp dl, 0x52	       489	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_10	IF_38
0x4000adb	            0x7540	                           jne 0x4000b1d	       489	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_10	IF_38
0x4000add	            0x89c0	                            mov eax, eax	       492	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_10	IF_38
0x4000adf	        0x488d0440	                  lea rax, [rax + rax*2]	       492	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_10	IF_38
0x4000ae3	      0x488b44c460	    mov rax, qword [rsp + rax*8 + 0x60] 	       492	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_10	IF_38
0x4000ae8	        0x488d5d02	                      lea rbx, [rbp + 2]	       494	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_10	IF_38
0x4000aec	        0x4183c601	                             add r14d, 1	       495	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_10	IF_38
0x4000af0	        0x488b7018	            mov rsi, qword [rax + 0x18] 	       496	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_10	IF_38	CALL_51
0x4000af4	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       496	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_10	IF_38	CALL_51
0x4000af8	          0x488b00	                    mov rax, qword [rax]	       497	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_10	IF_38
0x4000afb	          0x488b00	                    mov rax, qword [rax]	       496	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_10	IF_38	CALL_51
0x4000afe	        0x488b5008	                mov rdx, qword [rax + 8]	       496	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_10	IF_38	CALL_51
0x4000b02	        0x4c8b4628	              mov r8, qword [rsi + 0x28]	       496	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_10	IF_38	CALL_51
0x4000b06	      0xbe00000000	                              mov esi, 0	       496	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_10	IF_38	CALL_51
0x4000b0b	          0x4c89ff	                            mov rdi, r15	       496	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_10	IF_38	CALL_51
0x4000b0e	      0xb800000000	                              mov eax, 0	       496	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_10	IF_38	CALL_51
0x4000b13	      0xe800000000	                          call 0x4000b18	       496	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_10	IF_38	CALL_51
0x4000b18	      0xe92b020000	                           jmp 0x4000d48	       496	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_10	IF_38	CALL_51
0x4000b1d	          0x80fa53	                            cmp dl, 0x53	       501	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_11	IF_39
0x4000b20	            0x755e	                           jne 0x4000b80	       501	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_11	IF_39
0x4000b22	            0x89c0	                            mov eax, eax	       505	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_11	IF_39
0x4000b24	        0x488d0440	                  lea rax, [rax + rax*2]	       505	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_11	IF_39
0x4000b28	      0x488b44c460	    mov rax, qword [rsp + rax*8 + 0x60] 	       505	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_11	IF_39
0x4000b2d	        0x488d5d02	                      lea rbx, [rbp + 2]	       507	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_11	IF_39
0x4000b31	        0x4183c601	                             add r14d, 1	       508	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_11	IF_39
0x4000b35	          0x4885c0	                           test rax, rax	       509	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_11	IF_39	IF_40
0x4000b38	            0x7519	                           jne 0x4000b53	       509	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_11	IF_39	IF_40
0x4000b3a	      0xe800000000	                          call 0x4000b3f	       512	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_11	IF_39	IF_40	CALL_52
0x4000b3f	      0x4889442438	             mov qword [rsp + 0x38], rax	       512	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_11	IF_39	IF_40	CALL_52
0x4000b44	    0x8b0500000000	            mov eax, dword [0x04000b4a] 	       513	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_11	IF_39	IF_40
0x4000b4a	        0x89442434	             mov dword [rsp + 0x34], eax	       513	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_11	IF_39	IF_40
0x4000b4e	      0x488d442430	                   lea rax, [rsp + 0x30]	       511	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_11	IF_39	IF_40
0x4000b53	        0x488b4808	                mov rcx, qword [rax + 8]	       515	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_11	IF_39	IF_41
0x4000b57	          0x4885c9	                           test rcx, rcx	       515	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_11	IF_39	IF_41
0x4000b5a	     0xf84e8010000	                            je 0x4000d48	       515	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_11	IF_39	IF_41
0x4000b60	        0x448b4004	                mov r8d, dword [rax + 4]	        97	stdio2.h	CALL_9
0x4000b64	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_9
0x4000b69	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x4000b6e	          0x4c89ff	                            mov rdi, r15	        97	stdio2.h	CALL_9
0x4000b71	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_9
0x4000b76	      0xe800000000	                          call 0x4000b7b	        97	stdio2.h	CALL_9
0x4000b7b	      0xe9c8010000	                           jmp 0x4000d48	        97	stdio2.h	CALL_9
0x4000b80	          0x80fa54	                            cmp dl, 0x54	       518	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42
0x4000b83	     0xf859a000000	                           jne 0x4000c23	       518	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42
0x4000b89	            0x89c0	                            mov eax, eax	       521	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42
0x4000b8b	        0x488d0440	                  lea rax, [rax + rax*2]	       521	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42
0x4000b8f	      0x4c8b64c460	    mov r12, qword [rsp + rax*8 + 0x60] 	       521	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42
0x4000b94	        0x488d5d02	                      lea rbx, [rbp + 2]	       523	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42
0x4000b98	        0x4183c601	                             add r14d, 1	       524	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42
0x4000b9c	          0x4d85e4	                           test r12, r12	       525	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42	IF_43
0x4000b9f	            0x7407	                            je 0x4000ba8	       525	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42	IF_43
0x4000ba1	      0x41803c2400	                       cmp byte [r12], 0	       525	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42	IF_43
0x4000ba6	            0x752e	                           jne 0x4000bd6	       525	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42	IF_43
0x4000ba8	      0xba05000000	                              mov edx, 5	       527	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42	IF_43	CALL_53
0x4000bad	      0xbe00000000	                              mov esi, 0	       527	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42	IF_43	CALL_53
0x4000bb2	      0xbf00000000	                              mov edi, 0	       527	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42	IF_43	CALL_53
0x4000bb7	      0xe800000000	                          call 0x4000bbc	       527	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42	IF_43	CALL_53
0x4000bbc	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_9
0x4000bbf	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x4000bc4	          0x4c89ff	                            mov rdi, r15	        97	stdio2.h	CALL_9
0x4000bc7	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_9
0x4000bcc	      0xe800000000	                          call 0x4000bd1	        97	stdio2.h	CALL_9
0x4000bd1	      0xe972010000	                           jmp 0x4000d48	        97	stdio2.h	CALL_9
0x4000bd6	    0x833d00000000	               cmp dword [0x04000bdd], 0	       530	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42	ELSE_13	IF_44
0x4000bdd	            0x7434	                            je 0x4000c13	       530	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42	ELSE_13	IF_44
0x4000bdf	      0xba03000000	                              mov edx, 3	       534	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42	ELSE_13	IF_44	CALL_54
0x4000be4	          0x4c89e6	                            mov rsi, r12	       534	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42	ELSE_13	IF_44	CALL_54
0x4000be7	    0x488b3d000000	            mov rdi, qword [0x04000bee] 	       534	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42	ELSE_13	IF_44	CALL_54
0x4000bee	      0xe800000000	                          call 0x4000bf3	       534	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42	ELSE_13	IF_44	CALL_54
0x4000bf3	          0x4889c5	                            mov rbp, rax	       534	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42	ELSE_13	IF_44	CALL_54
0x4000bf6	          0x4885c0	                           test rax, rax	       536	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42	ELSE_13	IF_44	IF_45
0x4000bf9	            0x7418	                            je 0x4000c13	       536	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42	ELSE_13	IF_44	IF_45
0x4000bfb	          0x4c89fe	                            mov rsi, r15	        97	stdio2.h	CALL_9
0x4000bfe	          0x4889c7	                            mov rdi, rax	        97	stdio2.h	CALL_9
0x4000c01	      0xe800000000	                          call 0x4000c06	        97	stdio2.h	CALL_9
0x4000c06	          0x4889ef	                            mov rdi, rbp	       539	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42	ELSE_13	IF_44	IF_45	CALL_55
0x4000c09	      0xe800000000	                          call 0x4000c0e	       539	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42	ELSE_13	IF_44	IF_45	CALL_55
0x4000c0e	      0xe935010000	                           jmp 0x4000d48	       540	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42	ELSE_13	IF_44	IF_45
0x4000c13	          0x4c89fe	                            mov rsi, r15	        97	stdio2.h	CALL_9
0x4000c16	          0x4c89e7	                            mov rdi, r12	        97	stdio2.h	CALL_9
0x4000c19	      0xe800000000	                          call 0x4000c1e	        97	stdio2.h	CALL_9
0x4000c1e	      0xe925010000	                           jmp 0x4000d48	        97	stdio2.h	CALL_9
0x4000c23	            0x89c0	                            mov eax, eax	       548	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_14
0x4000c25	        0x488d0440	                  lea rax, [rax + rax*2]	       548	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_14
0x4000c29	      0x488b4cc460	    mov rcx, qword [rsp + rax*8 + 0x60] 	        97	stdio2.h	CALL_9
0x4000c2e	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_9
0x4000c33	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x4000c38	          0x4c89ff	                            mov rdi, r15	        97	stdio2.h	CALL_9
0x4000c3b	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_9
0x4000c40	      0xe800000000	                          call 0x4000c45	        97	stdio2.h	CALL_9
0x4000c45	        0x4183c601	                             add r14d, 1	       549	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_14
0x4000c49	      0xe9fa000000	                           jmp 0x4000d48	       549	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_14
0x4000c4e	            0x89c0	                            mov eax, eax	       555	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x4000c50	        0x488d0440	                  lea rax, [rax + rax*2]	       555	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x4000c54	          0x4c89fe	                            mov rsi, r15	        97	stdio2.h	CALL_9
0x4000c57	      0x488b7cc460	    mov rdi, qword [rsp + rax*8 + 0x60] 	        97	stdio2.h	CALL_9
0x4000c5c	      0xe800000000	                          call 0x4000c61	        97	stdio2.h	CALL_9
0x4000c61	        0x4183c601	                             add r14d, 1	       556	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x4000c65	      0xe9de000000	                           jmp 0x4000d48	       557	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x4000c6a	            0x89c0	                            mov eax, eax	       561	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x4000c6c	        0x488d0440	                  lea rax, [rax + rax*2]	       561	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x4000c70	        0x8b4cc460	    mov ecx, dword [rsp + rax*8 + 0x60] 	        97	stdio2.h	CALL_9
0x4000c74	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_9
0x4000c79	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x4000c7e	          0x4c89ff	                            mov rdi, r15	        97	stdio2.h	CALL_9
0x4000c81	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_9
0x4000c86	      0xe800000000	                          call 0x4000c8b	        97	stdio2.h	CALL_9
0x4000c8b	        0x4183c601	                             add r14d, 1	       562	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x4000c8f	      0xe9b4000000	                           jmp 0x4000d48	       563	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x4000c94	            0x89c0	                            mov eax, eax	       567	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x4000c96	        0x488d0440	                  lea rax, [rax + rax*2]	       567	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x4000c9a	        0x8b4cc460	    mov ecx, dword [rsp + rax*8 + 0x60] 	        97	stdio2.h	CALL_9
0x4000c9e	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_9
0x4000ca3	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x4000ca8	          0x4c89ff	                            mov rdi, r15	        97	stdio2.h	CALL_9
0x4000cab	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_9
0x4000cb0	      0xe800000000	                          call 0x4000cb5	        97	stdio2.h	CALL_9
0x4000cb5	        0x4183c601	                             add r14d, 1	       568	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x4000cb9	      0xe98a000000	                           jmp 0x4000d48	       569	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x4000cbe	         0xfb64d01	               movzx ecx, byte [rbp + 1]	       572	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_46
0x4000cc2	          0x80f964	                            cmp cl, 0x64	       572	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_46
0x4000cc5	            0x752c	                           jne 0x4000cf3	       572	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_46
0x4000cc7	            0x89c0	                            mov eax, eax	       574	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_46
0x4000cc9	        0x488d0440	                  lea rax, [rax + rax*2]	       574	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_46
0x4000ccd	      0x488b4cc460	    mov rcx, qword [rsp + rax*8 + 0x60] 	        97	stdio2.h	CALL_9
0x4000cd2	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_9
0x4000cd7	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x4000cdc	          0x4c89ff	                            mov rdi, r15	        97	stdio2.h	CALL_9
0x4000cdf	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_9
0x4000ce4	      0xe800000000	                          call 0x4000ce9	        97	stdio2.h	CALL_9
0x4000ce9	        0x4183c601	                             add r14d, 1	       575	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_46
0x4000ced	        0x488d5d02	                      lea rbx, [rbp + 2]	       576	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_46
0x4000cf1	            0xeb55	                           jmp 0x4000d48	       577	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_46
0x4000cf3	          0x80f975	                            cmp cl, 0x75	       579	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_15	IF_47
0x4000cf6	            0x752c	                           jne 0x4000d24	       579	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_15	IF_47
0x4000cf8	            0x89c0	                            mov eax, eax	       581	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_15	IF_47
0x4000cfa	        0x488d0440	                  lea rax, [rax + rax*2]	       581	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_15	IF_47
0x4000cfe	      0x488b4cc460	    mov rcx, qword [rsp + rax*8 + 0x60] 	        97	stdio2.h	CALL_9
0x4000d03	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_9
0x4000d08	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x4000d0d	          0x4c89ff	                            mov rdi, r15	        97	stdio2.h	CALL_9
0x4000d10	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_9
0x4000d15	      0xe800000000	                          call 0x4000d1a	        97	stdio2.h	CALL_9
0x4000d1a	        0x4183c601	                             add r14d, 1	       582	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_15	IF_47
0x4000d1e	        0x488d5d02	                      lea rbx, [rbp + 2]	       583	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_15	IF_47
0x4000d22	            0xeb24	                           jmp 0x4000d48	       584	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_15	IF_47
0x4000d24	           0xfbeca	                           movsx ecx, dl	        97	stdio2.h	CALL_9
0x4000d27	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_9
0x4000d2c	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x4000d31	          0x4c89ff	                            mov rdi, r15	        97	stdio2.h	CALL_9
0x4000d34	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_9
0x4000d39	      0xe800000000	                          call 0x4000d3e	        97	stdio2.h	CALL_9
0x4000d3e	            0xeb08	                           jmp 0x4000d48	        97	stdio2.h	CALL_9
0x4000d40	    0xc744240c0100	                mov dword [rsp + 0xc], 1	       294	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x4000d48	          0x4889df	                            mov rdi, rbx	       294	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x4000d4b	           0xfb607	                   movzx eax, byte [rdi]	       203	ldmisc.c	FUNCTION_1	WHILE_3
0x4000d4e	            0x84c0	                             test al, al	       203	ldmisc.c	FUNCTION_1	WHILE_3
0x4000d50	            0x7410	                            je 0x4000d62	       203	ldmisc.c	FUNCTION_1	WHILE_3
0x4000d52	          0x4889fb	                            mov rbx, rdi	       206	ldmisc.c	FUNCTION_1	WHILE_3	WHILE_4
0x4000d55	            0x3c25	                            cmp al, 0x25	       206	ldmisc.c	FUNCTION_1	WHILE_3	WHILE_4
0x4000d57	     0xf857df6ffff	                           jne 0x40003da	       206	ldmisc.c	FUNCTION_1	WHILE_3	WHILE_4
0x4000d5d	      0xe9a8f6ffff	                           jmp 0x400040a	       206	ldmisc.c	FUNCTION_1	WHILE_3	WHILE_4
0x4000d62	      0x837c240800	                  cmp dword [rsp + 8], 0	       595	ldmisc.c	FUNCTION_1	IF_48
0x4000d67	            0x7413	                            je 0x4000d7c	       595	ldmisc.c	FUNCTION_1	IF_48
0x4000d69	    0x833d00000000	               cmp dword [0x04000d70], 0	       595	ldmisc.c	FUNCTION_1	IF_48
0x4000d70	            0x740a	                            je 0x4000d7c	       595	ldmisc.c	FUNCTION_1	IF_48
0x4000d72	    0xc70500000000	               mov dword [0x04000d7c], 0	       596	ldmisc.c	FUNCTION_1	IF_48
0x4000d7c	      0x837c240c00	                cmp dword [rsp + 0xc], 0	       598	ldmisc.c	FUNCTION_1	IF_49
0x4000d81	            0x7474	                            je 0x4000df7	       598	ldmisc.c	FUNCTION_1	IF_49
0x4000d83	      0xbf01000000	                              mov edi, 1	       599	ldmisc.c	FUNCTION_1	CALL_56
0x4000d88	      0xe800000000	                          call 0x4000d8d	       599	ldmisc.c	FUNCTION_1	CALL_56
0x4000d8d	        0x488d4101	                      lea rax, [rcx + 1]	       120	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1
0x4000d91	          0x803976	                    cmp byte [rcx], 0x76	       120	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1
0x4000d94	     0xf87a3f4ffff	                            ja 0x400023d	       120	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1
0x4000d9a	        0x440fb611	                  movzx r10d, byte [rcx]	       120	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1
0x4000d9e	    0x42ff24d50000	                       jmp qword [r10*8]	       120	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1
0x4000da6	    0x41ba03000000	                             mov r10d, 3	       133	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1
0x4000dac	            0xeb0e	                           jmp 0x4000dbc	       133	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1
0x4000dae	    0x41ba04000000	                             mov r10d, 4	       129	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1
0x4000db4	            0xeb06	                           jmp 0x4000dbc	       129	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1
0x4000db6	    0x41ba05000000	                             mov r10d, 5	       147	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1
0x4000dbc	        0x4183f908	                              cmp r9d, 8	       168	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_5	IF_6
0x4000dc0	     0xf8667f4ffff	                           jbe 0x400022d	       168	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_5	IF_6
0x4000dc6	      0xe94ef4ffff	                           jmp 0x4000219	       168	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_5	IF_6
0x4000dcb	          0x4889c1	                            mov rcx, rax	       120	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1
0x4000dce	          0x4889c8	                            mov rax, rcx	        70	ldmisc.c	FUNCTION_1
0x4000dd1	      0xe967f4ffff	                           jmp 0x400023d	        70	ldmisc.c	FUNCTION_1
0x4000dd6	         0xfb66d00	                   movzx ebp, byte [rbp]	       395	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15
0x4000dda	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	       396	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_22
0x4000ddf	        0x4080fd47	                           cmp bpl, 0x47	       396	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_22
0x4000de3	     0xf8584faffff	                           jne 0x400086d	       396	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_22
0x4000de9	          0x4885d2	                           test rdx, rdx	       396	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_22
0x4000dec	     0xf8508faffff	                           jne 0x40007fa	       396	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_22
0x4000df2	      0xe976faffff	                           jmp 0x400086d	       396	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_22
0x4000df7	    0x488b8424a801	           mov rax, qword [rsp + 0x1a8] 	       600	ldmisc.c	FUNCTION_1
0x4000dff	    0x644833042528	                xor rax, qword fs:[0x28]	       600	ldmisc.c	FUNCTION_1
0x4000e08	            0x7405	                            je 0x4000e0f	       600	ldmisc.c	FUNCTION_1
0x4000e0a	      0xe800000000	                          call 0x4000e0f	       600	ldmisc.c	FUNCTION_1
0x4000e0f	    0x4881c4b80100	                          add rsp, 0x1b8	       600	ldmisc.c	FUNCTION_1
0x4000e16	              0x5b	                                 pop rbx	       600	ldmisc.c	FUNCTION_1
0x4000e17	              0x5d	                                 pop rbp	       600	ldmisc.c	FUNCTION_1
0x4000e18	            0x415c	                                 pop r12	       600	ldmisc.c	FUNCTION_1
0x4000e1a	            0x415d	                                 pop r13	       600	ldmisc.c	FUNCTION_1
0x4000e1c	            0x415e	                                 pop r14	       600	ldmisc.c	FUNCTION_1
0x4000e1e	            0x415f	                                 pop r15	       600	ldmisc.c	FUNCTION_1
0x4000e20	              0xc3	                                     ret	       600	ldmisc.c	FUNCTION_1
print_space	FOR,0:DO,0:WHILE,0:functions,0:ELSE,0:IF,0:CALL,0:SWITCH,0	6
0x4000040	        0x4883ec08	                              sub rsp, 8	       681	ldmisc.c	FUNCTION_7
0x4000044	    0x488b35000000	            mov rsi, qword [0x0400004b] 	        97	stdio2.h	CALL_9
0x400004b	      0xbf20000000	                           mov edi, 0x20	        97	stdio2.h	CALL_9
0x4000050	      0xe800000000	                          call 0x4000055	        97	stdio2.h	CALL_9
0x4000055	        0x4883c408	                              add rsp, 8	       683	ldmisc.c	FUNCTION_7
0x4000059	              0xc3	                                     ret	       683	ldmisc.c	FUNCTION_7
print_nl	FOR,0:DO,0:WHILE,0:functions,0:ELSE,0:IF,0:CALL,0:SWITCH,0	6
0x400005a	        0x4883ec08	                              sub rsp, 8	       687	ldmisc.c	FUNCTION_8
0x400005e	    0x488b35000000	            mov rsi, qword [0x04000065] 	        97	stdio2.h	CALL_9
0x4000065	      0xbf0a000000	                            mov edi, 0xa	        97	stdio2.h	CALL_9
0x400006a	      0xe800000000	                          call 0x400006f	        97	stdio2.h	CALL_9
0x400006f	        0x4883c408	                              add rsp, 8	       689	ldmisc.c	FUNCTION_8
0x4000073	              0xc3	                                     ret	       689	ldmisc.c	FUNCTION_8
ld_abort	FOR,0:DO,0:WHILE,0:functions,0:ELSE,1:IF,1:CALL,7:SWITCH,0	37
0x4000074	            0x4154	                                push r12	       696	ldmisc.c	FUNCTION_9
0x4000076	              0x55	                                push rbp	       696	ldmisc.c	FUNCTION_9
0x4000077	              0x53	                                push rbx	       696	ldmisc.c	FUNCTION_9
0x4000078	          0x4889fd	                            mov rbp, rdi	       696	ldmisc.c	FUNCTION_9
0x400007b	          0x4189f4	                           mov r12d, esi	       696	ldmisc.c	FUNCTION_9
0x400007e	          0x4885d2	                           test rdx, rdx	       697	ldmisc.c	FUNCTION_9	IF_1
0x4000081	            0x742f	                            je 0x40000b2	       697	ldmisc.c	FUNCTION_9	IF_1
0x4000083	          0x4889d3	                            mov rbx, rdx	       697	ldmisc.c	FUNCTION_9	IF_1
0x4000086	      0xba05000000	                              mov edx, 5	       698	ldmisc.c	FUNCTION_9	IF_1	CALL_2
0x400008b	      0xbe00000000	                              mov esi, 0	       698	ldmisc.c	FUNCTION_9	IF_1	CALL_2
0x4000090	      0xbf00000000	                              mov edi, 0	       698	ldmisc.c	FUNCTION_9	IF_1	CALL_2
0x4000095	      0xe800000000	                          call 0x400009a	       698	ldmisc.c	FUNCTION_9	IF_1	CALL_2
0x400009a	          0x4889d9	                            mov rcx, rbx	       698	ldmisc.c	FUNCTION_9	IF_1	CALL_2
0x400009d	          0x4489e2	                           mov edx, r12d	       698	ldmisc.c	FUNCTION_9	IF_1	CALL_2
0x40000a0	          0x4889ee	                            mov rsi, rbp	       698	ldmisc.c	FUNCTION_9	IF_1	CALL_2
0x40000a3	          0x4889c7	                            mov rdi, rax	       698	ldmisc.c	FUNCTION_9	IF_1	CALL_2
0x40000a6	      0xb800000000	                              mov eax, 0	       698	ldmisc.c	FUNCTION_9	IF_1	CALL_2
0x40000ab	      0xe800000000	                          call 0x40000b0	       698	ldmisc.c	FUNCTION_9	IF_1	CALL_2
0x40000b0	            0xeb27	                           jmp 0x40000d9	       698	ldmisc.c	FUNCTION_9	IF_1	CALL_2
0x40000b2	      0xba05000000	                              mov edx, 5	       701	ldmisc.c	FUNCTION_9	ELSE_1	CALL_4
0x40000b7	      0xbe00000000	                              mov esi, 0	       701	ldmisc.c	FUNCTION_9	ELSE_1	CALL_4
0x40000bc	      0xbf00000000	                              mov edi, 0	       701	ldmisc.c	FUNCTION_9	ELSE_1	CALL_4
0x40000c1	      0xe800000000	                          call 0x40000c6	       701	ldmisc.c	FUNCTION_9	ELSE_1	CALL_4
0x40000c6	          0x4489e2	                           mov edx, r12d	       701	ldmisc.c	FUNCTION_9	ELSE_1	CALL_4
0x40000c9	          0x4889ee	                            mov rsi, rbp	       701	ldmisc.c	FUNCTION_9	ELSE_1	CALL_4
0x40000cc	          0x4889c7	                            mov rdi, rax	       701	ldmisc.c	FUNCTION_9	ELSE_1	CALL_4
0x40000cf	      0xb800000000	                              mov eax, 0	       701	ldmisc.c	FUNCTION_9	ELSE_1	CALL_4
0x40000d4	      0xe800000000	                          call 0x40000d9	       701	ldmisc.c	FUNCTION_9	ELSE_1	CALL_4
0x40000d9	      0xba05000000	                              mov edx, 5	       703	ldmisc.c	FUNCTION_9	CALL_6
0x40000de	      0xbe00000000	                              mov esi, 0	       703	ldmisc.c	FUNCTION_9	CALL_6
0x40000e3	      0xbf00000000	                              mov edi, 0	       703	ldmisc.c	FUNCTION_9	CALL_6
0x40000e8	      0xe800000000	                          call 0x40000ed	       703	ldmisc.c	FUNCTION_9	CALL_6
0x40000ed	          0x4889c7	                            mov rdi, rax	       703	ldmisc.c	FUNCTION_9	CALL_6
0x40000f0	      0xb800000000	                              mov eax, 0	       703	ldmisc.c	FUNCTION_9	CALL_6
0x40000f5	      0xe800000000	                          call 0x40000fa	       703	ldmisc.c	FUNCTION_9	CALL_6
0x40000fa	      0xbf01000000	                              mov edi, 1	       704	ldmisc.c	FUNCTION_9	CALL_7
0x40000ff	      0xe800000000	                         call sym.vfinfo	       704	ldmisc.c	FUNCTION_9	CALL_7
lfinfo	FOR,0:DO,0:WHILE,0:functions,0:ELSE,0:IF,0:CALL,3:SWITCH,0	33
0x4001198	    0x4881ecd80000	                           sub rsp, 0xd8	       669	ldmisc.c	FUNCTION_6
0x400119f	      0x4889542430	             mov qword [rsp + 0x30], rdx	       669	ldmisc.c	FUNCTION_6
0x40011a4	      0x48894c2438	             mov qword [rsp + 0x38], rcx	       669	ldmisc.c	FUNCTION_6
0x40011a9	      0x4c89442440	              mov qword [rsp + 0x40], r8	       669	ldmisc.c	FUNCTION_6
0x40011ae	      0x4c894c2448	              mov qword [rsp + 0x48], r9	       669	ldmisc.c	FUNCTION_6
0x40011b3	            0x84c0	                             test al, al	       669	ldmisc.c	FUNCTION_6
0x40011b5	            0x7437	                            je 0x40011ee	       669	ldmisc.c	FUNCTION_6
0x40011b7	       0xf29442450	       movaps xmmword [rsp + 0x50], xmm0	       669	ldmisc.c	FUNCTION_6
0x40011bc	       0xf294c2460	       movaps xmmword [rsp + 0x60], xmm1	       669	ldmisc.c	FUNCTION_6
0x40011c1	       0xf29542470	       movaps xmmword [rsp + 0x70], xmm2	       669	ldmisc.c	FUNCTION_6
0x40011c6	     0xf299c248000	       movaps xmmword [rsp + 0x80], xmm3	       669	ldmisc.c	FUNCTION_6
0x40011ce	     0xf29a4249000	       movaps xmmword [rsp + 0x90], xmm4	       669	ldmisc.c	FUNCTION_6
0x40011d6	     0xf29ac24a000	       movaps xmmword [rsp + 0xa0], xmm5	       669	ldmisc.c	FUNCTION_6
0x40011de	     0xf29b424b000	       movaps xmmword [rsp + 0xb0], xmm6	       669	ldmisc.c	FUNCTION_6
0x40011e6	     0xf29bc24c000	       movaps xmmword [rsp + 0xc0], xmm7	       669	ldmisc.c	FUNCTION_6
0x40011ee	    0x64488b042528	                mov rax, qword fs:[0x28]	       669	ldmisc.c	FUNCTION_6
0x40011f7	      0x4889442418	             mov qword [rsp + 0x18], rax	       669	ldmisc.c	FUNCTION_6
0x40011fc	            0x31c0	                            xor eax, eax	       669	ldmisc.c	FUNCTION_6
0x40011fe	    0xc70424100000	                   mov dword [rsp], 0x10	       672	ldmisc.c	FUNCTION_6	CALL_1
0x4001205	    0xc74424043000	               mov dword [rsp + 4], 0x30	       672	ldmisc.c	FUNCTION_6	CALL_1
0x400120d	    0x488d8424e000	                   lea rax, [rsp + 0xe0]	       672	ldmisc.c	FUNCTION_6	CALL_1
0x4001215	      0x4889442408	                mov qword [rsp + 8], rax	       672	ldmisc.c	FUNCTION_6	CALL_1
0x400121a	      0x488d442420	                   lea rax, [rsp + 0x20]	       672	ldmisc.c	FUNCTION_6	CALL_1
0x400121f	      0x4889442410	             mov qword [rsp + 0x10], rax	       672	ldmisc.c	FUNCTION_6	CALL_1
0x4001224	      0xb900000000	                              mov ecx, 0	       673	ldmisc.c	FUNCTION_6	CALL_2
0x4001229	          0x4889e2	                            mov rdx, rsp	       673	ldmisc.c	FUNCTION_6	CALL_2
0x400122c	      0xe800000000	                          call 0x4001231	       673	ldmisc.c	FUNCTION_6	CALL_2
0x4001231	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       675	ldmisc.c	FUNCTION_6
0x4001236	    0x644833042528	                xor rax, qword fs:[0x28]	       675	ldmisc.c	FUNCTION_6
0x400123f	            0x7405	                            je 0x4001246	       675	ldmisc.c	FUNCTION_6
0x4001241	      0xe800000000	                          call 0x4001246	       675	ldmisc.c	FUNCTION_6
0x4001246	    0x4881c4d80000	                           add rsp, 0xd8	       675	ldmisc.c	FUNCTION_6
0x400124d	              0xc3	                                     ret	       675	ldmisc.c	FUNCTION_6
info_assert	FOR,0:DO,0:WHILE,0:functions,0:ELSE,0:IF,0:CALL,2:SWITCH,0	18
0x4000fc8	              0x55	                                push rbp	       633	ldmisc.c	FUNCTION_4
0x4000fc9	              0x53	                                push rbx	       633	ldmisc.c	FUNCTION_4
0x4000fca	        0x4883ec08	                              sub rsp, 8	       633	ldmisc.c	FUNCTION_4
0x4000fce	          0x4889fb	                            mov rbx, rdi	       633	ldmisc.c	FUNCTION_4
0x4000fd1	            0x89f5	                            mov ebp, esi	       633	ldmisc.c	FUNCTION_4
0x4000fd3	      0xba05000000	                              mov edx, 5	       634	ldmisc.c	FUNCTION_4	CALL_2
0x4000fd8	      0xbe00000000	                              mov esi, 0	       634	ldmisc.c	FUNCTION_4	CALL_2
0x4000fdd	      0xbf00000000	                              mov edi, 0	       634	ldmisc.c	FUNCTION_4	CALL_2
0x4000fe2	      0xe800000000	                          call 0x4000fe7	       634	ldmisc.c	FUNCTION_4	CALL_2
0x4000fe7	            0x89ea	                            mov edx, ebp	       634	ldmisc.c	FUNCTION_4	CALL_2
0x4000fe9	          0x4889de	                            mov rsi, rbx	       634	ldmisc.c	FUNCTION_4	CALL_2
0x4000fec	          0x4889c7	                            mov rdi, rax	       634	ldmisc.c	FUNCTION_4	CALL_2
0x4000fef	      0xb800000000	                              mov eax, 0	       634	ldmisc.c	FUNCTION_4	CALL_2
0x4000ff4	      0xe800000000	                          call 0x4000ff9	       634	ldmisc.c	FUNCTION_4	CALL_2
0x4000ff9	        0x4883c408	                              add rsp, 8	       635	ldmisc.c	FUNCTION_4
0x4000ffd	              0x5b	                                 pop rbx	       635	ldmisc.c	FUNCTION_4
0x4000ffe	              0x5d	                                 pop rbp	       635	ldmisc.c	FUNCTION_4
0x4000fff	              0xc3	                                     ret	       635	ldmisc.c	FUNCTION_4
info_msg	FOR,0:DO,0:WHILE,0:functions,0:ELSE,0:IF,0:CALL,3:SWITCH,0	36
0x4000e21	    0x4881ecd80000	                           sub rsp, 0xd8	       609	ldmisc.c	FUNCTION_2
0x4000e28	      0x4889742428	             mov qword [rsp + 0x28], rsi	       609	ldmisc.c	FUNCTION_2
0x4000e2d	      0x4889542430	             mov qword [rsp + 0x30], rdx	       609	ldmisc.c	FUNCTION_2
0x4000e32	      0x48894c2438	             mov qword [rsp + 0x38], rcx	       609	ldmisc.c	FUNCTION_2
0x4000e37	      0x4c89442440	              mov qword [rsp + 0x40], r8	       609	ldmisc.c	FUNCTION_2
0x4000e3c	      0x4c894c2448	              mov qword [rsp + 0x48], r9	       609	ldmisc.c	FUNCTION_2
0x4000e41	            0x84c0	                             test al, al	       609	ldmisc.c	FUNCTION_2
0x4000e43	            0x7437	                            je 0x4000e7c	       609	ldmisc.c	FUNCTION_2
0x4000e45	       0xf29442450	       movaps xmmword [rsp + 0x50], xmm0	       609	ldmisc.c	FUNCTION_2
0x4000e4a	       0xf294c2460	       movaps xmmword [rsp + 0x60], xmm1	       609	ldmisc.c	FUNCTION_2
0x4000e4f	       0xf29542470	       movaps xmmword [rsp + 0x70], xmm2	       609	ldmisc.c	FUNCTION_2
0x4000e54	     0xf299c248000	       movaps xmmword [rsp + 0x80], xmm3	       609	ldmisc.c	FUNCTION_2
0x4000e5c	     0xf29a4249000	       movaps xmmword [rsp + 0x90], xmm4	       609	ldmisc.c	FUNCTION_2
0x4000e64	     0xf29ac24a000	       movaps xmmword [rsp + 0xa0], xmm5	       609	ldmisc.c	FUNCTION_2
0x4000e6c	     0xf29b424b000	       movaps xmmword [rsp + 0xb0], xmm6	       609	ldmisc.c	FUNCTION_2
0x4000e74	     0xf29bc24c000	       movaps xmmword [rsp + 0xc0], xmm7	       609	ldmisc.c	FUNCTION_2
0x4000e7c	    0x64488b042528	                mov rax, qword fs:[0x28]	       609	ldmisc.c	FUNCTION_2
0x4000e85	      0x4889442418	             mov qword [rsp + 0x18], rax	       609	ldmisc.c	FUNCTION_2
0x4000e8a	            0x31c0	                            xor eax, eax	       609	ldmisc.c	FUNCTION_2
0x4000e8c	    0xc70424080000	                      mov dword [rsp], 8	       612	ldmisc.c	FUNCTION_2	CALL_1
0x4000e93	    0xc74424043000	               mov dword [rsp + 4], 0x30	       612	ldmisc.c	FUNCTION_2	CALL_1
0x4000e9b	    0x488d8424e000	                   lea rax, [rsp + 0xe0]	       612	ldmisc.c	FUNCTION_2	CALL_1
0x4000ea3	      0x4889442408	                mov qword [rsp + 8], rax	       612	ldmisc.c	FUNCTION_2	CALL_1
0x4000ea8	      0x488d442420	                   lea rax, [rsp + 0x20]	       612	ldmisc.c	FUNCTION_2	CALL_1
0x4000ead	      0x4889442410	             mov qword [rsp + 0x10], rax	       612	ldmisc.c	FUNCTION_2	CALL_1
0x4000eb2	      0xb900000000	                              mov ecx, 0	       613	ldmisc.c	FUNCTION_2	CALL_2
0x4000eb7	          0x4889e2	                            mov rdx, rsp	       613	ldmisc.c	FUNCTION_2	CALL_2
0x4000eba	          0x4889fe	                            mov rsi, rdi	       613	ldmisc.c	FUNCTION_2	CALL_2
0x4000ebd	    0x488b3d000000	            mov rdi, qword [0x04000ec4] 	       613	ldmisc.c	FUNCTION_2	CALL_2
0x4000ec4	      0xe800000000	                          call 0x4000ec9	       613	ldmisc.c	FUNCTION_2	CALL_2
0x4000ec9	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       615	ldmisc.c	FUNCTION_2
0x4000ece	    0x644833042528	                xor rax, qword fs:[0x28]	       615	ldmisc.c	FUNCTION_2
0x4000ed7	            0x7405	                            je 0x4000ede	       615	ldmisc.c	FUNCTION_2
0x4000ed9	      0xe800000000	                          call 0x4000ede	       615	ldmisc.c	FUNCTION_2
0x4000ede	    0x4881c4d80000	                           add rsp, 0xd8	       615	ldmisc.c	FUNCTION_2
0x4000ee5	              0xc3	                                     ret	       615	ldmisc.c	FUNCTION_2
